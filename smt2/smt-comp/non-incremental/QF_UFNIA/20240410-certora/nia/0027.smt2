(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x989 () Int)
(declare-fun x1401 () Int)
(declare-fun x1191 () Int)
(declare-fun x192 () Int)
(declare-fun x567 () Int)
(declare-fun x1694 () Int)
(declare-fun x985 () Int)
(declare-fun x1310 () Int)
(declare-fun x841 () Int)
(declare-fun x1426 () Int)
(declare-fun x1474 () Bool)
(declare-fun x672 () Int)
(declare-fun x1060 () Bool)
(declare-fun x540 () Int)
(declare-fun x1439 () Int)
(declare-fun x188 () Bool)
(declare-fun x486 () Bool)
(declare-fun x7 () Int)
(declare-fun x545 () Int)
(declare-fun x497 () Bool)
(declare-fun x737 () Bool)
(declare-fun x1298 () Int)
(declare-fun x1088 () Int)
(declare-fun x784 () Int)
(declare-fun x1639 () Bool)
(declare-fun x351 () Bool)
(declare-fun x217 () Int)
(declare-fun x760 () Int)
(declare-fun x242 () Int)
(declare-fun x1057 () Bool)
(declare-fun x1602 () Int)
(declare-fun x1397 () Bool)
(declare-fun x88 () Int)
(declare-fun x898 () Bool)
(declare-fun x1628 () Int)
(declare-fun x155 () Int)
(declare-fun x956 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x1605 () Int)
(declare-fun x360 () Int)
(declare-fun x451 () Int)
(declare-fun x1100 () Int)
(declare-fun x1414 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1149 () Bool)
(declare-fun x189 () Bool)
(declare-fun x371 () Int)
(declare-fun x1037 () Int)
(declare-fun x774 () Int)
(declare-fun x1153 () Bool)
(declare-fun x933 () Int)
(declare-fun x197 () Bool)
(declare-fun x50 () Int)
(declare-fun x394 () Int)
(declare-fun x1425 () Int)
(declare-fun x161 () Bool)
(declare-fun x1609 () Int)
(declare-fun x1274 () Int)
(declare-fun x291 () Bool)
(declare-fun x158 () Int)
(declare-fun x522 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x1091 () Int)
(declare-fun x1253 () Bool)
(declare-fun x491 () Int)
(declare-fun x727 () Bool)
(declare-fun x1128 () Int)
(declare-fun x965 () Bool)
(declare-fun x584 () Int)
(declare-fun x1188 () Int)
(declare-fun x289 () Bool)
(declare-fun x582 () Int)
(declare-fun x96 () Int)
(declare-fun x475 () Int)
(declare-fun x771 () Bool)
(declare-fun x284 () Int)
(declare-fun x145 () Int)
(declare-fun x1468 () Int)
(declare-fun x756 () Int)
(declare-fun x362 () Bool)
(declare-fun x1313 () Int)
(declare-fun x808 () Int)
(declare-fun x554 () Int)
(declare-fun x1560 () Int)
(declare-fun x578 () Int)
(declare-fun x458 () Bool)
(declare-fun x319 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x326 () Int)
(declare-fun x1233 () Bool)
(declare-fun x551 () Int)
(declare-fun x1134 () Bool)
(declare-fun x846 () Int)
(declare-fun x910 () Bool)
(declare-fun x642 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x565 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1494 () Int)
(declare-fun x1180 () Int)
(declare-fun x403 () Int)
(declare-fun x159 () Int)
(declare-fun x112 () Bool)
(declare-fun x6 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x1246 () Int)
(declare-fun x488 () Int)
(declare-fun x15 () Int)
(declare-fun x107 () Int)
(declare-fun x751 () Bool)
(declare-fun x234 () Bool)
(declare-fun x866 () Int)
(declare-fun x745 () Int)
(declare-fun x14 () Int)
(declare-fun x629 () Int)
(declare-fun x274 () Int)
(declare-fun x340 () Int)
(declare-fun x178 () Int)
(declare-fun x1507 () Int)
(declare-fun x1032 () Int)
(declare-fun x1121 () Bool)
(declare-fun x951 () Int)
(declare-fun x753 () Int)
(declare-fun x1370 () Bool)
(declare-fun x547 () Int)
(declare-fun x777 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x865 () Int)
(declare-fun x293 () Bool)
(declare-fun x1697 () Int)
(declare-fun x442 () Bool)
(declare-fun x764 () Int)
(declare-fun x156 () Int)
(declare-fun x982 () Bool)
(declare-fun x417 () Int)
(declare-fun x739 () Int)
(declare-fun x10 () Bool)
(declare-fun x514 () Int)
(declare-fun x533 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x215 (Int) Int)
(declare-fun x328 () Bool)
(declare-fun x1537 () Int)
(declare-fun x963 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x286 () Bool)
(declare-fun x999 () Bool)
(declare-fun x1378 (Int) Int)
(declare-fun x815 () Bool)
(declare-fun x503 () Int)
(declare-fun x1052 (Int) Int)
(declare-fun x1206 () Bool)
(declare-fun x961 () Int)
(declare-fun x762 () Int)
(declare-fun x1623 () Int)
(declare-fun x549 () Bool)
(declare-fun x105 () Bool)
(declare-fun x368 () Int)
(declare-fun x1216 () Int)
(declare-fun x882 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1544 () Int)
(declare-fun x115 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x996 () Bool)
(declare-fun x767 () Bool)
(declare-fun x805 () Bool)
(declare-fun x79 () Bool)
(declare-fun x513 () Int)
(declare-fun x1258 () Int)
(declare-fun x1523 () Bool)
(declare-fun x973 () Bool)
(declare-fun x1584 () Int)
(declare-fun x769 () Int)
(declare-fun x1552 () Bool)
(declare-fun x1200 () Int)
(declare-fun x224 () Int)
(declare-fun x703 () Int)
(declare-fun x1201 () Int)
(declare-fun x424 () Int)
(declare-fun x233 () Int)
(declare-fun x1400 () Bool)
(declare-fun x1003 () Int)
(declare-fun x1347 () Bool)
(declare-fun x664 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x476 () Bool)
(declare-fun x69 () Bool)
(declare-fun x575 () Int)
(declare-fun x550 () Bool)
(declare-fun x216 () Int)
(declare-fun x966 () Int)
(declare-fun x510 () Int)
(declare-fun x18 () Int)
(declare-fun x640 () Bool)
(declare-fun x1666 () Int)
(declare-fun x110 () Bool)
(declare-fun x1230 () Int)
(declare-fun x1598 () Int)
(declare-fun x581 () Bool)
(declare-fun x949 () Int)
(declare-fun x60 () Int)
(declare-fun x685 () Int)
(declare-fun x495 () Int)
(declare-fun x1698 () Int)
(declare-fun x822 () Int)
(declare-fun x897 () Int)
(declare-fun x177 () Bool)
(declare-fun x282 () Int)
(declare-fun x683 () Int)
(declare-fun x275 () Int)
(declare-fun x1063 () Bool)
(declare-fun x323 () Int)
(declare-fun x817 () Bool)
(declare-fun x431 () Bool)
(declare-fun x478 () Int)
(declare-fun x31 () Bool)
(declare-fun x278 () Bool)
(declare-fun x621 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x1489 () Int)
(declare-fun x141 () Int)
(declare-fun x1305 () Int)
(declare-fun x1179 () Int)
(declare-fun x309 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1608 () Int)
(declare-fun x1030 () Int)
(declare-fun x838 () Int)
(declare-fun x1260 () Int)
(declare-fun x1157 () Int)
(declare-fun x493 () Int)
(declare-fun x212 () Bool)
(declare-fun x849 () Bool)
(declare-fun x151 () Bool)
(declare-fun x556 () Int)
(declare-fun x1445 () Bool)
(declare-fun x316 () Bool)
(declare-fun x877 () Bool)
(declare-fun x954 () Int)
(declare-fun x905 () Bool)
(declare-fun x455 () Int)
(declare-fun x1326 () Int)
(declare-fun x1493 () Bool)
(declare-fun x859 () Bool)
(declare-fun x94 () Bool)
(declare-fun x770 () Int)
(declare-fun x1613 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1662 () Int)
(declare-fun x1676 () Int)
(declare-fun x1357 () Bool)
(declare-fun x930 () Int)
(declare-fun x38 () Bool)
(declare-fun x58 () Bool)
(declare-fun x604 () Bool)
(declare-fun x505 () Int)
(declare-fun x541 () Int)
(declare-fun x219 () Int)
(declare-fun x699 () Int)
(declare-fun x562 () Int)
(declare-fun x220 () Int)
(declare-fun x1630 (Int) Int)
(declare-fun x1145 () Int)
(declare-fun x692 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x456 () Int)
(declare-fun x1595 () Int)
(declare-fun x1109 () Bool)
(declare-fun x732 () Int)
(declare-fun x22 () Bool)
(declare-fun x509 () Bool)
(declare-fun x598 () Bool)
(declare-fun x369 () Int)
(declare-fun x1512 () Int)
(declare-fun x1254 () Int)
(declare-fun x1334 () Int)
(declare-fun x953 () Int)
(declare-fun x1276 () Bool)
(declare-fun x986 () Int)
(declare-fun x515 () Int)
(declare-fun x467 () Int)
(declare-fun x1575 () Bool)
(declare-fun x310 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x670 () Bool)
(declare-fun x650 () Bool)
(declare-fun x1634 () Int)
(declare-fun x444 () Bool)
(declare-fun x117 () Bool)
(declare-fun x997 () Bool)
(declare-fun x518 () Int)
(declare-fun x1589 () Int)
(declare-fun x711 () Int)
(declare-fun x730 () Bool)
(declare-fun x404 () Int)
(declare-fun x544 () Bool)
(declare-fun x1278 () Int)
(declare-fun x226 () Bool)
(declare-fun x148 () Bool)
(declare-fun x671 () Int)
(declare-fun x448 () Int)
(declare-fun x1620 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x761 () Int)
(declare-fun x835 () Bool)
(declare-fun x1591 () Int)
(declare-fun x955 () Int)
(declare-fun x415 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x915 () Bool)
(declare-fun x932 () Int)
(declare-fun x1648 () Int)
(declare-fun x1290 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x353 () Int)
(declare-fun x1618 () Bool)
(declare-fun x1599 () Int)
(declare-fun x689 () Int)
(declare-fun x793 () Bool)
(declare-fun x603 () Bool)
(declare-fun x586 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x184 () Bool)
(declare-fun x383 () Int)
(declare-fun x912 () Bool)
(declare-fun x297 () Int)
(declare-fun x964 () Int)
(declare-fun x1375 () Int)
(declare-fun x1277 () Int)
(declare-fun x968 () Int)
(declare-fun x1110 () Bool)
(declare-fun x469 () Bool)
(declare-fun x294 () Int)
(declare-fun x1710 () Int)
(declare-fun x349 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x929 () Int)
(declare-fun x425 () Int)
(declare-fun x816 () Int)
(declare-fun x1579 () Bool)
(declare-fun x484 () Int)
(declare-fun x1283 () Bool)
(declare-fun x754 () Int)
(declare-fun x843 () Int)
(declare-fun x1270 () Int)
(declare-fun x831 () Int)
(declare-fun x559 () Bool)
(declare-fun x176 () Int)
(declare-fun x1236 () Bool)
(declare-fun x748 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x681 () Int)
(declare-fun x1093 () Int)
(declare-fun x1547 () Bool)
(declare-fun x366 () Int)
(declare-fun x937 () Bool)
(declare-fun x411 () Bool)
(declare-fun x205 () Int)
(declare-fun x222 () Int)
(declare-fun x572 () Int)
(declare-fun x1248 () Bool)
(declare-fun x890 () Int)
(declare-fun x1487 () Int)
(declare-fun x1386 () Bool)
(declare-fun x1148 () Int)
(declare-fun x82 () Int)
(declare-fun x1661 () Int)
(declare-fun x1650 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x304 () Int)
(declare-fun x1150 () Int)
(declare-fun x267 (Int) Int)
(declare-fun x1470 () Bool)
(declare-fun x1640 () Int)
(declare-fun x1161 () Int)
(declare-fun x1211 () Int)
(declare-fun x1 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x346 () Int)
(declare-fun x1175 () Int)
(declare-fun x810 () Bool)
(declare-fun x528 () Int)
(declare-fun x1048 () Int)
(declare-fun x1465 () Bool)
(declare-fun x1101 () Int)
(declare-fun x1383 () Int)
(declare-fun x1207 () Bool)
(declare-fun x643 () Int)
(declare-fun x461 () Int)
(declare-fun x1535 () Bool)
(declare-fun x868 () Bool)
(declare-fun x913 () Bool)
(declare-fun x532 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x1627 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1607 () Int)
(declare-fun x1098 () Bool)
(declare-fun x1051 (Int) Int)
(declare-fun x1038 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x241 () Int)
(declare-fun x746 () Int)
(declare-fun x795 () Bool)
(declare-fun x36 () Int)
(declare-fun x1659 () Int)
(declare-fun x1479 () Int)
(declare-fun x76 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1221 () Int)
(declare-fun x871 () Bool)
(declare-fun x165 () Int)
(declare-fun x54 () Int)
(declare-fun x1330 () Int)
(declare-fun x1173 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x496 () Bool)
(declare-fun x288 () Bool)
(declare-fun x1624 () Int)
(declare-fun x1227 () Bool)
(declare-fun x1209 () Int)
(declare-fun x357 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x1008 () Int)
(declare-fun x1660 () Int)
(declare-fun x1329 () Bool)
(declare-fun x1256 (Int) Bool)
(declare-fun x1029 () Int)
(declare-fun x1506 () Int)
(declare-fun x842 () Int)
(declare-fun x350 () Int)
(declare-fun x443 () Int)
(declare-fun x1532 () Bool)
(declare-fun x130 () Int)
(declare-fun x520 () Int)
(declare-fun x1184 () Bool)
(declare-fun x715 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x361 () Int)
(declare-fun x152 () Bool)
(declare-fun x526 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x382 () Bool)
(declare-fun x356 () Bool)
(declare-fun x285 () Int)
(declare-fun x902 () Bool)
(declare-fun x625 () Int)
(declare-fun x381 () Int)
(declare-fun x716 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x174 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x686 () Int)
(declare-fun x880 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x390 () Int)
(declare-fun x677 () Int)
(declare-fun x3 () Int)
(declare-fun x1569 () Int)
(declare-fun x828 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x348 () Int)
(declare-fun x1475 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x492 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x1307 () Int)
(declare-fun x401 () Int)
(declare-fun x1655 () Int)
(declare-fun x302 () Int)
(declare-fun x126 () Int)
(declare-fun x790 () Int)
(declare-fun x1123 () Bool)
(declare-fun x185 () Int)
(declare-fun x245 () Bool)
(declare-fun x646 () Bool)
(declare-fun x494 () Int)
(declare-fun x1594 () Bool)
(declare-fun x916 () Int)
(declare-fun x324 () Bool)
(declare-fun x95 () Int)
(declare-fun x690 () Bool)
(declare-fun x187 () Int)
(declare-fun x713 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x889 () Int)
(declare-fun x183 () Bool)
(declare-fun x1252 () Int)
(declare-fun x1323 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x1279 () Int)
(declare-fun x1387 () Int)
(declare-fun x1551 () Bool)
(declare-fun x1658 () Int)
(declare-fun x1317 () Int)
(declare-fun x1514 () Int)
(declare-fun x1320 () Int)
(declare-fun x1695 () Int)
(declare-fun x799 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x1654 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x33 () Bool)
(declare-fun x1464 () Int)
(declare-fun x958 () Bool)
(declare-fun x447 () Int)
(declare-fun x67 () Bool)
(declare-fun x651 () Int)
(declare-fun x280 () Bool)
(declare-fun x599 () Int)
(declare-fun x792 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x311 () Bool)
(declare-fun x464 () Int)
(declare-fun x785 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x1682 () Int)
(declare-fun x694 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x857 () Bool)
(declare-fun x734 () Bool)
(declare-fun x525 () Bool)
(declare-fun x1066 () Int)
(declare-fun x611 () Int)
(declare-fun x655 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x87 () Int)
(declare-fun x1365 () Int)
(declare-fun x927 () Int)
(declare-fun x947 () Int)
(declare-fun x1534 () Bool)
(declare-fun x66 () Int)
(declare-fun x680 () Int)
(declare-fun x472 () Bool)
(declare-fun x154 () Int)
(declare-fun x697 () Bool)
(declare-fun x1099 () Int)
(declare-fun x512 () Int)
(declare-fun x1391 () Int)
(declare-fun x439 () Int)
(declare-fun x1362 () Int)
(declare-fun x392 () Int)
(declare-fun x1228 () Int)
(declare-fun x441 () Bool)
(declare-fun x1509 () Int)
(declare-fun x1604 () Bool)
(declare-fun x1635 () Int)
(declare-fun x365 () Bool)
(declare-fun x1431 () Int)
(declare-fun x1217 () Int)
(declare-fun x296 () Bool)
(declare-fun x182 () Int)
(declare-fun x1649 () Int)
(declare-fun x908 () Int)
(declare-fun x1689 () Int)
(declare-fun x499 () Int)
(declare-fun x1103 () Int)
(declare-fun x891 () Bool)
(declare-fun x830 () Int)
(declare-fun x1549 () Bool)
(declare-fun x179 () Int)
(declare-fun x870 () Bool)
(declare-fun x1046 () Int)
(declare-fun x858 () Bool)
(declare-fun x959 () Int)
(declare-fun x259 () Bool)
(declare-fun x1081 () Int)
(declare-fun x168 () Bool)
(declare-fun x779 () Int)
(declare-fun x1526 () Bool)
(declare-fun x691 () Bool)
(declare-fun x405 () Int)
(declare-fun x948 () Int)
(declare-fun x1070 (Int Int) Int)
(declare-fun x137 () Int)
(declare-fun x589 (Int) Int)
(declare-fun x1433 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x344 () Bool)
(declare-fun x820 () Bool)
(declare-fun x975 () Bool)
(declare-fun x665 () Int)
(declare-fun x114 () Bool)
(declare-fun x922 () Bool)
(declare-fun x470 () Int)
(declare-fun x1614 () Int)
(declare-fun x674 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1294 () Int)
(declare-fun x399 () Bool)
(declare-fun x160 () Bool)
(declare-fun x120 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x1080 () Int)
(declare-fun x1009 () Int)
(declare-fun x630 () Int)
(declare-fun x1449 () Int)
(declare-fun x1452 () Int)
(declare-fun x437 () Bool)
(declare-fun x925 () Int)
(declare-fun x978 () Int)
(declare-fun x504 () Int)
(declare-fun x147 () Bool)
(declare-fun x772 () Int)
(declare-fun x436 () Bool)
(declare-fun x64 () Int)
(declare-fun x876 () Int)
(declare-fun x1398 () Int)
(declare-fun x466 () Int)
(declare-fun x1633 () Int)
(declare-fun x1651 () Int)
(declare-fun x662 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1511 () Int)
(declare-fun x1249 () Int)
(declare-fun x639 () Int)
(declare-fun x834 (Int) Int)
(declare-fun x712 () Bool)
(declare-fun x585 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x1455 () Int)
(declare-fun x702 () Int)
(declare-fun x55 () Bool)
(declare-fun x27 () Bool)
(declare-fun x149 () Int)
(declare-fun x1530 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x705 () Int)
(declare-fun x1367 () Bool)
(declare-fun x104 () Int)
(declare-fun x1292 () Bool)
(declare-fun x555 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x247 () Int)
(declare-fun x1625 () Bool)
(declare-fun x409 () Int)
(declare-fun x1580 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1212 () Bool)
(declare-fun x256 () Bool)
(declare-fun x1028 () Int)
(declare-fun x420 () Int)
(declare-fun x1104 () Int)
(declare-fun x783 () Bool)
(declare-fun x73 () Bool)
(declare-fun x814 () Int)
(declare-fun x1214 () Bool)
(declare-fun x566 () Bool)
(declare-fun x157 () Bool)
(declare-fun x848 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x1422 () Int)
(declare-fun x223 () Bool)
(declare-fun x169 () Bool)
(declare-fun x195 () Int)
(declare-fun x317 () Int)
(declare-fun x854 (Int) Int)
(declare-fun x1186 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x519 () Int)
(declare-fun x270 () Int)
(declare-fun x1518 () Int)
(declare-fun x1520 () Bool)
(declare-fun x658 () Int)
(declare-fun x312 () Int)
(declare-fun x537 () Int)
(declare-fun x229 () Int)
(declare-fun x971 () Int)
(declare-fun x742 () Bool)
(declare-fun x940 () Int)
(declare-fun x633 () Int)
(declare-fun x13 () Bool)
(declare-fun x952 () Bool)
(declare-fun x998 () Int)
(declare-fun x1174 () Bool)
(declare-fun x886 () Bool)
(declare-fun x462 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x359 () Bool)
(declare-fun x1022 () Int)
(declare-fun x1406 (Int) Int)
(declare-fun x1495 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1354 () Bool)
(declare-fun x791 () Int)
(declare-fun x926 () Int)
(declare-fun x1031 () Bool)
(declare-fun x733 () Bool)
(declare-fun x1275 () Int)
(declare-fun x1545 () Int)
(declare-fun x1183 () Bool)
(declare-fun x227 () Int)
(declare-fun x5 () Int)
(declare-fun x1543 () Int)
(declare-fun x1578 () Int)
(declare-fun x1674 () Bool)
(declare-fun x867 () Bool)
(declare-fun x471 () Int)
(declare-fun x615 () Bool)
(declare-fun x501 () Int)
(declare-fun x1389 () Int)
(declare-fun x85 () Int)
(declare-fun x354 () Int)
(declare-fun x1542 () Bool)
(declare-fun x375 () Int)
(declare-fun x427 () Bool)
(declare-fun x426 () Bool)
(declare-fun x1559 () Int)
(declare-fun x1448 () Int)
(declare-fun x759 () Int)
(declare-fun x39 () Bool)
(declare-fun x263 () Int)
(declare-fun x1226 () Bool)
(declare-fun x1442 () Int)
(declare-fun x679 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x414 () Bool)
(declare-fun x1095 () Int)
(declare-fun x332 () Int)
(declare-fun x1019 () Int)
(declare-fun x24 () Int)
(declare-fun x57 () Int)
(declare-fun x1267 () Int)
(declare-fun x89 () Int)
(declare-fun x1428 () Int)
(declare-fun x367 () Bool)
(declare-fun x622 () Int)
(declare-fun x592 () Int)
(declare-fun x268 () Bool)
(declare-fun x607 () Int)
(declare-fun x477 () Int)
(declare-fun x1245 () Int)
(declare-fun x1705 () Int)
(declare-fun x918 () Bool)
(declare-fun x740 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x32 () Int)
(declare-fun x1403 () Int)
(declare-fun x601 () Int)
(declare-fun x1496 () Bool)
(declare-fun x337 () Int)
(declare-fun x1610 () Int)
(declare-fun x53 () Int)
(declare-fun x490 () Bool)
(declare-fun x619 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x819 () Int)
(declare-fun x1126 () Bool)
(declare-fun x121 () Bool)
(declare-fun x1686 () Int)
(declare-fun x1413 () Bool)
(declare-fun x1349 () Int)
(declare-fun x1002 () Bool)
(declare-fun x1405 () Int)
(declare-fun x1477 () Bool)
(declare-fun x1006 () Int)
(declare-fun x1237 () Int)
(declare-fun x1675 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x656 () Int)
(declare-fun x669 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1453 () Int)
(declare-fun x314 () Bool)
(declare-fun x211 () Bool)
(declare-fun x563 () Int)
(declare-fun x413 () Bool)
(declare-fun x552 () Int)
(declare-fun x583 () Int)
(declare-fun x1181 () Int)
(declare-fun x1314 () Int)
(declare-fun x246 () Bool)
(declare-fun x856 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x1122 () Int)
(declare-fun x402 () Bool)
(declare-fun x1488 () Int)
(declare-fun x1053 () Int)
(declare-fun x1653 () Bool)
(declare-fun x238 (Int) Int)
(declare-fun x609 () Bool)
(declare-fun x700 () Int)
(declare-fun x1244 () Int)
(declare-fun x1421 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x391 () Int)
(declare-fun x300 () Bool)
(declare-fun x1646 () Int)
(declare-fun x529 () Int)
(declare-fun x1525 () Int)
(declare-fun x1603 () Bool)
(declare-fun x909 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x479 () Int)
(declare-fun x636 () Int)
(declare-fun x322 () Int)
(declare-fun x1016 () Int)
(declare-fun x1670 () Int)
(declare-fun x1291 () Bool)
(declare-fun x1447 () Int)
(declare-fun x162 () Int)
(declare-fun x379 () Int)
(declare-fun x1124 () Int)
(declare-fun x917 () Bool)
(declare-fun x892 () Int)
(declare-fun x974 () Int)
(declare-fun x827 () Int)
(declare-fun x1572 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1472 () Int)
(declare-fun x42 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x833 () Int)
(declare-fun x654 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x698 () Int)
(declare-fun x1335 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x8 () Int)
(declare-fun x1390 () Bool)
(declare-fun x98 () Int)
(declare-fun x318 () Bool)
(declare-fun x710 () Int)
(declare-fun x1344 () Bool)
(declare-fun x279 () Bool)
(declare-fun x1348 () Int)
(declare-fun x2 () Int)
(declare-fun x1001 () Bool)
(declare-fun x1265 () Int)
(declare-fun x993 () Int)
(declare-fun x1000 () Bool)
(declare-fun x1166 () Int)
(declare-fun x936 () Int)
(declare-fun x623 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1458 () Int)
(declare-fun x1075 () Int)
(declare-fun x610 () Bool)
(declare-fun x1262 () Int)
(declare-fun x26 () Bool)
(declare-fun x780 () Int)
(declare-fun x941 () Int)
(declare-fun x678 () Bool)
(declare-fun x919 () Bool)
(declare-fun x138 () Bool)
(declare-fun x408 () Int)
(declare-fun x825 () Int)
(declare-fun x440 () Bool)
(declare-fun x52 (Int) Int)
(declare-fun x1641 () Bool)
(declare-fun x292 () Int)
(declare-fun x1616 () Int)
(declare-fun x1353 () Bool)
(declare-fun x682 (Int) Int)
(declare-fun x1642 () Int)
(declare-fun x960 () Int)
(declare-fun x536 () Int)
(declare-fun x1699 () Int)
(declare-fun x72 () Bool)
(declare-fun x1160 () Int)
(declare-fun x668 () Int)
(declare-fun x1220 () Int)
(declare-fun x1073 () Int)
(declare-fun x624 () Bool)
(declare-fun x1194 () Int)
(declare-fun x970 () Bool)
(declare-fun x1366 () Int)
(declare-fun x1054 () Bool)
(declare-fun x271 () Int)
(declare-fun x111 () Bool)
(declare-fun x1688 () Int)
(declare-fun x1195 () Int)
(declare-fun x1647 () Int)
(declare-fun x797 () Bool)
(declare-fun x1282 () Int)
(declare-fun x652 () Int)
(declare-fun x894 () Int)
(declare-fun x214 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1240 () Int)
(declare-fun x704 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x802 () Int)
(declare-fun x210 () Bool)
(declare-fun x594 () Int)
(declare-fun x418 () Int)
(declare-fun x1586 () Bool)
(declare-fun x723 () Int)
(declare-fun x1713 () Bool)
(declare-fun x92 () Int)
(declare-fun x844 () Int)
(declare-fun x1202 () Bool)
(declare-fun x676 () Int)
(declare-fun x595 () Int)
(declare-fun x1683 () Bool)
(declare-fun x102 () Bool)
(declare-fun x1631 () Int)
(declare-fun x21 () Bool)
(declare-fun x884 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1629 () Int)
(declare-fun x648 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x789 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x579 () Int)
(declare-fun x261 () Int)
(declare-fun x1664 () Bool)
(declare-fun x720 () Int)
(declare-fun x1296 () Int)
(declare-fun x428 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x663 () Int)
(declare-fun x1055 () Int)
(declare-fun x1355 () Int)
(declare-fun x204 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x1364 () Int)
(declare-fun x641 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x228 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x972 () Int)
(declare-fun x840 () Bool)
(declare-fun x1235 () Int)
(declare-fun x878 () Bool)
(declare-fun x213 () Bool)
(declare-fun x1558 (Int) Int)
(declare-fun x180 () Int)
(declare-fun x939 () Bool)
(declare-fun x721 () Int)
(declare-fun x1668 () Int)
(declare-fun x638 () Bool)
(declare-fun x487 () Bool)
(declare-fun x660 () Bool)
(declare-fun x967 () Int)
(declare-fun x729 () Bool)
(declare-fun x747 () Int)
(declare-fun x1172 () Int)
(declare-fun x1404 () Bool)
(declare-fun x163 () Int)
(declare-fun x1434 () Int)
(declare-fun x45 () Int)
(declare-fun x41 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x987 () Bool)
(declare-fun x1050 () Int)
(declare-fun x412 () Int)
(declare-fun x1219 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x249 () Int)
(declare-fun x1601 () Bool)
(declare-fun x832 () Int)
(declare-fun x577 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x1371 () Int)
(declare-fun x1204 () Bool)
(declare-fun x118 () Int)
(declare-fun x1218 () Int)
(declare-fun x836 () Bool)
(declare-fun x1056 () Int)
(declare-fun x637 () Int)
(declare-fun x80 () Bool)
(declare-fun x341 () Int)
(declare-fun x766 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1268 () Int)
(declare-fun x1576 () Int)
(declare-fun x265 () Int)
(declare-fun x474 () Int)
(declare-fun x631 () Int)
(declare-fun x1223 () Int)
(declare-fun x1637 () Bool)
(declare-fun x407 () Int)
(declare-fun x388 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x19 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1501 (Int) Int)
(declare-fun x736 () Int)
(declare-fun x374 () Bool)
(declare-fun x1094 () Int)
(declare-fun x1064 () Int)
(declare-fun x942 () Bool)
(declare-fun x776 () Int)
(declare-fun x181 () Bool)
(declare-fun x988 () Bool)
(declare-fun x329 () Int)
(declare-fun x1067 () Int)
(declare-fun x803 () Bool)
(declare-fun x482 () Int)
(declare-fun x781 () Int)
(declare-fun x1338 () Int)
(declare-fun x1033 () Bool)
(declare-fun x895 () Int)
(declare-fun x77 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x1566 () Int)
(declare-fun x1380 () Bool)
(declare-fun x768 () Bool)
(declare-fun x325 () Int)
(declare-fun x798 () Int)
(declare-fun x48 () Bool)
(declare-fun x1264 () Int)
(declare-fun x743 () Int)
(declare-fun x231 () Int)
(declare-fun x1484 () Bool)
(declare-fun x1467 () Int)
(declare-fun x1638 () Bool)
(declare-fun x647 () Int)
(declare-fun x1065 () Int)
(declare-fun x1587 () Bool)
(declare-fun x255 () Int)
(declare-fun x1508 () Bool)
(declare-fun x377 () Int)
(declare-fun x75 () Bool)
(declare-fun x429 () Int)
(declare-fun x100 () Bool)
(declare-fun x1293 () Int)
(declare-fun x534 () Int)
(declare-fun x722 () Bool)
(declare-fun x140 () Bool)
(declare-fun x68 () Bool)
(declare-fun x508 () Int)
(declare-fun x1107 () Bool)
(declare-fun x483 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1243 () Int)
(declare-fun x852 () Bool)
(declare-fun x295 () Int)
(declare-fun x1171 () Int)
(declare-fun x1129 () Bool)
(declare-fun x597 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x1199 () Int)
(declare-fun x645 (Int) Int)
(declare-fun x235 () Int)
(declare-fun x1097 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x196 () Bool)
(declare-fun x924 () Bool)
(declare-fun x389 () Bool)
(declare-fun x573 () Int)
(declare-fun x687 () Int)
(declare-fun x1528 () Int)
(declare-fun x1504 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x498 () Int)
(declare-fun x920 () Bool)
(declare-fun x237 () Int)
(declare-fun x236 () Int)
(declare-fun x37 () Int)
(declare-fun x1446 () Int)
(declare-fun x944 () Int)
(declare-fun x921 () Int)
(declare-fun x206 () Int)
(declare-fun x1337 () Int)
(declare-fun x626 () Bool)
(declare-fun x605 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1168 () Int)
(declare-fun x1582 () Int)
(declare-fun x800 () Bool)
(declare-fun x457 () Int)
(declare-fun x93 () Bool)
(declare-fun x1546 () Int)
(declare-fun x1176 () Bool)
(declare-fun x1158 () Int)
(declare-fun x1352 () Int)
(declare-fun x1092 () Int)
(declare-fun x395 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x128 () Bool)
(declare-fun x812 () Bool)
(declare-fun x608 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x1345 () Int)
(declare-fun x90 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x1483 () Int)
(declare-fun x752 () Int)
(declare-fun x175 () Bool)
(declare-fun x744 () Int)
(declare-fun x1473 () Int)
(declare-fun x560 () Int)
(declare-fun x221 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x517 () Bool)
(declare-fun x78 () Int)
(declare-fun x1346 () Bool)
(declare-fun x243 () Int)
(declare-fun x1564 () Int)
(declare-fun x20 () Int)
(declare-fun x485 () Int)
(declare-fun x327 () Bool)
(declare-fun x331 () Bool)
(declare-fun x1108 () Int)
(declare-fun x570 () Bool)
(declare-fun x298 () Int)
(declare-fun x1205 () Int)
(declare-fun x193 () Int)
(declare-fun x1017 () Bool)
(declare-fun x218 () Int)
(declare-fun x1600 () Int)
(declare-fun x945 () Bool)
(declare-fun x380 () Bool)
(declare-fun x307 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x620 () Int)
(declare-fun x396 () Bool)
(declare-fun x1585 () Int)
(declare-fun x659 () Int)
(declare-fun x606 () Int)
(declare-fun x1548 () Bool)
(declare-fun x875 () Int)
(declare-fun x133 () Int)
(declare-fun x1247 () Int)
(declare-fun x17 () Int)
(declare-fun x1303 () Bool)
(declare-fun x914 () Bool)
(declare-fun x1133 () Int)
(declare-fun x1622 () Int)
(declare-fun x406 () Bool)
(declare-fun x1394 () Int)
(declare-fun x119 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x765 () Int)
(declare-fun x299 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x1087 () Int)
(declare-fun x199 (Int) Int)
(declare-fun x523 () Int)
(declare-fun x1424 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1384 () Int)
(declare-fun x1665 () Int)
(declare-fun x845 () Int)
(declare-fun x136 () Bool)
(declare-fun x153 () Int)
(declare-fun x863 () Int)
(declare-fun x1700 () Int)
(declare-fun x35 () Int)
(declare-fun x1332 () Bool)
(declare-fun x588 () Int)
(declare-fun x1102 () Int)
(declare-fun x731 () Int)
(declare-fun x750 () Int)
(declare-fun x1513 () Int)
(declare-fun x1538 () Int)
(declare-fun x628 () Bool)
(declare-fun x587 () Int)
(declare-fun x666 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x4 () Int)
(declare-fun x250 () Bool)
(declare-fun x994 () Bool)
(declare-fun x1691 () Int)
(declare-fun x186 () Int)
(declare-fun x864 () Bool)
(declare-fun x61 () Bool)
(declare-fun x1420 () Int)
(declare-fun x122 () Int)
(declare-fun x879 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1208 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x548 () Int)
(declare-fun x847 () Int)
(declare-fun x1427 () Int)
(declare-fun x109 () Bool)
(declare-fun x980 () Bool)
(declare-fun x661 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x893 () Int)
(declare-fun x116 () Int)
(declare-fun x422 () Int)
(declare-fun x1004 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1696 () Int)
(declare-fun x883 () Int)
(declare-fun x806 () Bool)
(declare-fun x850 () Int)
(declare-fun x202 () Int)
(declare-fun x990 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x473 () Int)
(declare-fun x266 () Int)
(declare-fun x634 () Bool)
(declare-fun x1222 () Int)
(declare-fun x273 () Int)
(declare-fun x763 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x134 () Bool)
(declare-fun x535 () Int)
(declare-fun x962 () Bool)
(declare-fun x435 () Bool)
(declare-fun x983 () Bool)
(declare-fun x901 () Int)
(declare-fun x372 () Bool)
(declare-fun x1328 () Int)
(declare-fun x1281 () Bool)
(declare-fun x44 () Bool)
(declare-fun x527 () Bool)
(declare-fun x460 () Bool)
(declare-fun x590 () Bool)
(declare-fun x741 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1343 () Int)
(declare-fun x433 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x1553 () Int)
(declare-fun x51 () Bool)
(declare-fun x1061 () Int)
(declare-fun x1062 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1482 () Int)
(declare-fun x29 () Int)
(declare-fun x1456 () Int)
(declare-fun x1702 () Int)
(declare-fun x992 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x724 () Int)
(declare-fun x47 () Bool)
(declare-fun x899 (Int) Int)
(declare-fun x244 () Int)
(declare-fun x1667 () Bool)
(declare-fun x708 () Int)
(declare-fun x714 () Bool)
(declare-fun x290 () Bool)
(declare-fun x252 () Bool)
(declare-fun x593 () Int)
(declare-fun x1118 () Bool)
(declare-fun x209 () Int)
(declare-fun x387 () Bool)
(declare-fun x99 () Bool)
(declare-fun x330 () Int)
(declare-fun x453 () Int)
(declare-fun x1632 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1082 () Int)
(declare-fun x207 () Int)
(declare-fun x1147 () Int)
(declare-fun x693 () Bool)
(declare-fun x813 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1142 () Int)
(declare-fun x1522 () Int)
(declare-fun x239 () Bool)
(declare-fun x258 () Int)
(declare-fun x1596 () Int)
(declare-fun x860 () Bool)
(declare-fun x576 () Bool)
(declare-fun x667 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1322 () Bool)
(declare-fun x419 () Bool)
(declare-fun x617 () Bool)
(declare-fun x709 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1435 () Bool)
(declare-fun x81 () Int)
(declare-fun x1672 () Int)
(declare-fun x1677 () Bool)
(declare-fun x1312 () Int)
(declare-fun x321 () Bool)
(declare-fun x1466 () Int)
(declare-fun x717 () Int)
(declare-fun x574 () Int)
(declare-fun x71 () Bool)
(declare-fun x826 () Int)
(declare-fun x1500 () Int)
(declare-fun x979 () Int)
(declare-fun x1014 () Bool)
(declare-fun x230 () Bool)
(declare-fun x1687 () Int)
(declare-fun x976 () Bool)
(declare-fun x1143 () Int)
(declare-fun x801 () Int)
(declare-fun x1076 () Bool)
(declare-fun x557 () Int)
(declare-fun x1286 () Bool)
(declare-fun x778 () Bool)
(declare-fun x465 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x1239 () Int)
(declare-fun x907 (Int) Int)
(declare-fun x521 () Int)
(declare-fun x811 () Bool)
(declare-fun x410 () Bool)
(declare-fun x673 () Int)
(declare-fun x1583 () Int)
(declare-fun x373 (Int) Int)
(declare-fun x635 () Bool)
(declare-fun x166 () Int)
(declare-fun x516 () Bool)
(declare-fun x696 () Int)
(declare-fun x904 () Bool)
(declare-fun x758 () Int)
(declare-fun x602 () Int)
(declare-fun x1486 () Bool)
(declare-fun x430 () Int)
(declare-fun x1562 () Int)
(declare-fun x1550 () Int)
(declare-fun x735 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1385 () Int)
(declare-fun x1141 () Int)
(declare-fun x1519 () Bool)
(declare-fun x568 (Int) Int)
(declare-fun x1336 () Bool)
(declare-fun x378 () Bool)
(declare-fun x170 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x809 () Bool)
(declare-fun x1497 () Int)
(declare-fun x725 () Bool)
(declare-fun x887 () Bool)
(declare-fun x957 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x355 () Int)
(declare-fun x463 () Bool)
(declare-fun x561 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x397 () Bool)
(declare-fun x1457 () Int)
(declare-fun x12 () Int)
(declare-fun x225 () Bool)
(declare-fun x991 () Bool)
(declare-fun x873 () Bool)
(declare-fun x1007 () Int)
(declare-fun x1481 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x627 () Bool)
(declare-fun x28 () Int)
(declare-fun x524 () Bool)
(declare-fun x56 () Int)
(declare-fun x569 () Int)
(declare-fun x1114 () Int)
(declare-fun x320 () Bool)
(declare-fun x755 () Int)
(declare-fun x862 () Bool)
(declare-fun x1137 () Int)
(declare-fun x446 () Int)
(declare-fun x1309 () Bool)
(declare-fun x649 () Bool)
(declare-fun x885 () Int)
(declare-fun x881 () Bool)
(declare-fun x1251 () Int)
(declare-fun x511 () Int)
(declare-fun x86 () Bool)
(declare-fun x1531 () Int)
(declare-fun x726 () Int)
(declare-fun x757 () Int)
(declare-fun x106 () Int)
(declare-fun x506 () Int)
(declare-fun x1438 () Int)
(declare-fun x334 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x352 () Int)
(declare-fun x1077 () Int)
(declare-fun x653 () Bool)
(declare-fun x977 () Int)
(declare-fun x283 () Int)
(declare-fun x1693 () Bool)
(declare-fun x684 () Int)
(declare-fun x139 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x201 () Int)
(declare-fun x1690 () Bool)
(declare-fun x823 () Int)
(declare-fun x1716 () Bool)
(declare-fun x1339 () Int)
(declare-fun x853 () Int)
(declare-fun x546 () Bool)
(declare-fun x452 () Int)
(declare-fun x173 () Int)
(declare-fun x281 () Bool)
(declare-fun x837 () Int)
(declare-fun x1461 () Bool)
(declare-fun x143 () Int)
(declare-fun x564 () Int)
(declare-fun x113 () Int)
(declare-fun x70 () Int)
(declare-fun x1185 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1018 () Bool)
(declare-fun x123 () Int)
(declare-fun x807 () Int)
(declare-fun x1372 () Bool)
(declare-fun x943 () Bool)
(declare-fun x935 () Int)
(declare-fun x459 () Int)
(declare-fun x1709 () Int)
(declare-fun x164 () Bool)
(declare-fun x146 () Int)
(declare-fun x1492 () Int)
(declare-fun x896 () Int)
(declare-fun x1374 () Int)
(declare-fun x1170 (Int Int Int) Int)
(declare-fun x1541 () Int)
(declare-fun x824 () Bool)
(declare-fun x11 () Int)
(declare-fun x385 () Bool)
(declare-fun x632 () Int)
(declare-fun x269 () Bool)
(declare-fun x1324 () Int)
(declare-fun x931 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x438 () Bool)
(declare-fun x254 () Int)
(declare-fun x450 () Bool)
(declare-fun x91 () Bool)
(declare-fun x1125 () Int)
(declare-fun x1273 () Int)
(declare-fun x1197 () Bool)
(define-fun x1042 ((x1059 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059) (>= x1059 0)) x1059 (- x1059 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1156 ((x1059 Int)) Int (ite (and (< x1059 0) (>= x1059 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1059 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1059))
(define-fun x1561 ((x23 Int)) Bool (and (>= x23 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x23)))
(define-fun x144 ((x23 Int)) Bool (and (<= 0 x23) (>= 1461501637330902918203684832716283019655932542975 x23)))
(define-fun x600 ((x23 Int)) Bool (and (= (x1070 x23 115792089237316195423570985008687907853269984665640564039457584007913129639935) x23) (= x23 (x1070 115792089237316195423570985008687907853269984665640564039457584007913129639935 x23))))
(define-fun x1132 ((x23 Int)) Bool (and (= (x1070 0 x23) 0) (= (x1070 x23 0) 0)))
(define-fun x74 ((x23 Int)) Bool (= (x1070 x23 x23) x23))
(define-fun x1516 ((x23 Int)) Bool (and (x600 x23) (x74 x23) (x1132 x23)))
(define-fun x788 ((x23 Int) (x1463 Int)) Bool (= (x1070 x23 x1463) (x1070 x1463 x23)))
(define-fun x1412 ((x23 Int) (x1463 Int)) Bool (and (=> (>= x1463 0) (>= x1463 (x1070 x23 x1463))) (<= 0 (x1070 x23 x1463)) (=> (<= 0 x23) (<= (x1070 x23 x1463) x23))))
(define-fun x1502 ((x23 Int) (x1463 Int)) Bool (and (x1412 x23 x1463) (x788 x23 x1463)))
(define-fun x1540 ((x23 Int)) Bool (= (x1070 x23 1) (mod x23 2)))
(define-fun x333 ((x23 Int)) Bool (and (x1540 x23) (x1502 x23 1)))
(define-fun x1678 ((x23 Int)) Bool (and (<= 0 x23) (>= 1329227995784915872903807060280344575 x23)))
(define-fun x108 ((x23 Int)) Bool (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x23) (>= x23 0)))
(define-fun x1407 ((x1460 Int)) Int 0)
(define-fun x386 ((x1460 Int)) Int 0)
(define-fun x364 ((x1460 Int)) Int 0)
(define-fun x1469 ((x1460 Int)) Int 0)
(define-fun x1115 ((x1460 Int)) Int 0)
(define-fun x339 ((x1460 Int)) Int 0)
(define-fun x1441 ((x1460 Int)) Int 0)
(define-fun x558 ((x1460 Int)) Int 0)
(define-fun x1419 ((x1460 Int)) Int 0)
(define-fun x257 ((x1460 Int)) Int 0)
(define-fun x198 ((x1460 Int)) Int 0)
(define-fun x260 ((x1460 Int)) Int 0)
(define-fun x1238 ((x1460 Int)) Int 0)
(define-fun x276 ((x1460 Int)) Int 0)
(define-fun x1301 ((x1460 Int)) Int 0)
(define-fun x240 ((x1460 Int)) Int 0)
(define-fun x1443 ((x1460 Int)) Int 0)
(define-fun x150 ((x1460 Int)) Int 0)
(define-fun x1645 ((x1460 Int)) Int 0)
(define-fun x706 ((x1460 Int)) Int 0)
(define-fun x423 ((x1460 Int)) Int 0)
(define-fun x616 ((x1460 Int)) Int 0)
(define-fun x400 ((x1460 Int)) Int 0)
(define-fun x981 ((x1460 Int)) Int 0)
(define-fun x900 ((x1460 Int)) Int 0)
(define-fun x277 ((x1460 Int)) Int (ite (< x1460 x908) (x1558 x1460) 0))
(define-fun x695 ((x1460 Int)) Int (ite (and (< x1460 x908) (<= 0 x1460)) (x1501 x1460) (x277 x1460)))
(define-fun x612 ((x1460 Int)) Int (ite (= x1426 x1460) x1093 (x834 x1460)))
(define-fun x553 ((x1460 Int)) Int (ite (= x1460 x1249) x672 (x373 x1460)))
(define-fun x821 ((x1460 Int)) Int (ite x1162 (x373 x1460) (x553 x1460)))
(define-fun x1192 ((x1460 Int)) Int (ite (= x491 x1460) x1438 (x821 x1460)))
(define-fun x315 ((x1460 Int)) Int (ite x793 (x821 x1460) (x1192 x1460)))
(define-fun x1071 ((x1460 Int)) Int (ite x945 (x373 x1460) (ite x281 (x373 x1460) (x315 x1460))))
(define-fun x738 ((x1460 Int)) Int (ite x1641 (x373 x1460) (x1071 x1460)))
(define-fun x1359 ((x1460 Int)) Int (ite (= x883 x1460) x383 (x738 x1460)))
(define-fun x804 ((x1460 Int)) Int (ite x615 (x738 x1460) (x1359 x1460)))
(define-fun x1306 ((x1460 Int)) Int (ite (= x1460 x535) x82 (x804 x1460)))
(define-fun x839 ((x1460 Int)) Int (ite x891 (x804 x1460) (x1306 x1460)))
(define-fun x9 ((x1460 Int)) Int (ite x716 (x738 x1460) (ite x748 (x738 x1460) (x839 x1460))))
(define-fun x208 ((x1460 Int)) Int (ite x1134 (x738 x1460) (x9 x1460)))
(define-fun x59 ((x1460 Int)) Int (ite (= x1460 x636) x1082 (x208 x1460)))
(define-fun x101 ((x1460 Int)) Int (ite (= x1460 x1553) x283 (x59 x1460)))
(define-fun x232 ((x1460 Int)) Int (ite x397 (x208 x1460) (x101 x1460)))
(define-fun x657 ((x1460 Int)) Int (ite (= x1216 x1460) x425 (x232 x1460)))
(define-fun x946 ((x1460 Int)) Int (ite x1712 (x232 x1460) (x657 x1460)))
(define-fun x861 ((x1460 Int)) Int (ite (= x523 x1460) x493 (x946 x1460)))
(define-fun x1356 ((x1460 Int)) Int (ite x1281 (x946 x1460) (x861 x1460)))
(define-fun x614 ((x1460 Int)) Int (ite x79 (x232 x1460) (x1356 x1460)))
(define-fun x934 ((x1460 Int)) Int (ite x115 (x614 x1460) (x373 x1460)))
(define-fun x480 ((x1460 Int)) Int (ite (= x1460 x506) x780 (x934 x1460)))
(define-fun x1588 ((x1460 Int)) Int (ite x288 (x934 x1460) (x480 x1460)))
(define-fun x1671 ((x1460 Int)) Int (ite (= x1460 x235) x274 (x1588 x1460)))
(define-fun x1577 ((x1460 Int)) Int (ite x1421 (x1588 x1460) (x1671 x1460)))
(define-fun x1049 ((x1460 Int)) Int (ite x278 (x934 x1460) (ite x852 (x934 x1460) (x1577 x1460))))
(define-fun x542 ((x1460 Int)) Int (ite x1126 (x934 x1460) (x1049 x1460)))
(define-fun x1381 ((x1460 Int)) Int (ite (= x1460 x677) x680 (x542 x1460)))
(define-fun x928 ((x1460 Int)) Int (ite x134 (x542 x1460) (x1381 x1460)))
(define-fun x591 ((x1460 Int)) Int (ite (= x1460 x774) x1574 (x928 x1460)))
(define-fun x888 ((x1460 Int)) Int (ite x1470 (x928 x1460) (x591 x1460)))
(define-fun x191 ((x1460 Int)) Int (ite x1097 (x542 x1460) (ite x1266 (x542 x1460) (x888 x1460))))
(define-fun x1295 ((x1460 Int)) Int (ite x905 (x542 x1460) (x191 x1460)))
(define-fun x398 ((x1460 Int)) Int (ite (= x1460 x1442) x1099 (x1295 x1460)))
(define-fun x127 ((x1460 Int)) Int (ite x789 (x1295 x1460) (x398 x1460)))
(define-fun x1341 ((x1460 Int)) Int (ite (= x1460 x8) x683 (x127 x1460)))
(define-fun x1679 ((x1460 Int)) Int (ite x94 (x127 x1460) (x1341 x1460)))
(define-fun x1669 ((x1460 Int)) Int (ite x26 (x1295 x1460) (x1679 x1460)))
(define-fun x251 ((x1460 Int)) Int (ite x873 (x1669 x1460) (x934 x1460)))
(define-fun x869 ((x1460 Int)) Int (ite (= x1460 x1449) x1439 (x238 x1460)))
(define-fun x1167 ((x1460 Int)) Int (ite x945 (x238 x1460) (ite x281 (x238 x1460) (x869 x1460))))
(define-fun x1715 ((x1460 Int)) Int (ite x1641 (x238 x1460) (x1167 x1460)))
(define-fun x1707 ((x1460 Int)) Int (ite (= x1187 x1460) x1101 (x1715 x1460)))
(define-fun x129 ((x1460 Int)) Int (ite x716 (x1715 x1460) (ite x748 (x1715 x1460) (x1707 x1460))))
(define-fun x749 ((x1460 Int)) Int (ite x1134 (x1715 x1460) (x129 x1460)))
(define-fun x1119 ((x1460 Int)) Int (ite (= x1460 x1364) x1507 (x749 x1460)))
(define-fun x171 ((x1460 Int)) Int (ite x79 (x749 x1460) (x1119 x1460)))
(define-fun x580 ((x1460 Int)) Int (ite x115 (x171 x1460) (x238 x1460)))
(define-fun x1140 ((x1460 Int)) Int (ite (= x1460 x1598) x1345 (x580 x1460)))
(define-fun x1316 ((x1460 Int)) Int (ite x278 (x580 x1460) (ite x852 (x580 x1460) (x1140 x1460))))
(define-fun x1510 ((x1460 Int)) Int (ite x1126 (x580 x1460) (x1316 x1460)))
(define-fun x923 ((x1460 Int)) Int (ite (= x1460 x1337) x993 (x1510 x1460)))
(define-fun x500 ((x1460 Int)) Int (ite x1097 (x1510 x1460) (ite x1266 (x1510 x1460) (x923 x1460))))
(define-fun x1565 ((x1460 Int)) Int (ite x905 (x1510 x1460) (x500 x1460)))
(define-fun x1272 ((x1460 Int)) Int (ite (= x1460 x1364) x377 (x1565 x1460)))
(define-fun x445 ((x1460 Int)) Int (ite x26 (x1565 x1460) (x1272 x1460)))
(define-fun x1131 ((x1460 Int)) Int (ite x873 (x445 x1460) (x580 x1460)))
(define-fun x46 ((x1460 Int)) Int (ite (= x1460 x1449) x528 (x52 x1460)))
(define-fun x1350 ((x1460 Int)) Int (ite x945 (x52 x1460) (ite x281 (x52 x1460) (x46 x1460))))
(define-fun x345 ((x1460 Int)) Int (ite x1641 (x52 x1460) (x1350 x1460)))
(define-fun x782 ((x1460 Int)) Int (ite (= x1460 x1187) x1237 (x345 x1460)))
(define-fun x1069 ((x1460 Int)) Int (ite x716 (x345 x1460) (ite x748 (x345 x1460) (x782 x1460))))
(define-fun x1612 ((x1460 Int)) Int (ite x1134 (x345 x1460) (x1069 x1460)))
(define-fun x432 ((x1460 Int)) Int (ite (= x1460 x1364) x1080 (x1612 x1460)))
(define-fun x370 ((x1460 Int)) Int (ite x79 (x1612 x1460) (x432 x1460)))
(define-fun x1521 ((x1460 Int)) Int (ite x115 (x370 x1460) (x52 x1460)))
(define-fun x984 ((x1460 Int)) Int (ite (= x1598 x1460) x1326 (x1521 x1460)))
(define-fun x1284 ((x1460 Int)) Int (ite x278 (x1521 x1460) (ite x852 (x1521 x1460) (x984 x1460))))
(define-fun x1280 ((x1460 Int)) Int (ite x1126 (x1521 x1460) (x1284 x1460)))
(define-fun x644 ((x1460 Int)) Int (ite (= x1460 x1337) x921 (x1280 x1460)))
(define-fun x1717 ((x1460 Int)) Int (ite x1097 (x1280 x1460) (ite x1266 (x1280 x1460) (x644 x1460))))
(define-fun x62 ((x1460 Int)) Int (ite x905 (x1280 x1460) (x1717 x1460)))
(define-fun x1182 ((x1460 Int)) Int (ite (= x1460 x1364) x216 (x62 x1460)))
(define-fun x1215 ((x1460 Int)) Int (ite x26 (x62 x1460) (x1182 x1460)))
(define-fun x1269 ((x1460 Int)) Int (ite x873 (x1215 x1460) (x1521 x1460)))
(define-fun x1437 ((x1460 Int)) Int (ite (= x1355 x1460) x528 (x1378 x1460)))
(define-fun x618 ((x1460 Int)) Int (ite x1641 (x1378 x1460) (ite x945 (x1378 x1460) (ite x281 (x1378 x1460) (x1437 x1460)))))
(define-fun x65 ((x1460 Int)) Int (ite (= x1019 x1460) x1237 (x618 x1460)))
(define-fun x416 ((x1460 Int)) Int (ite x1134 (x618 x1460) (ite x716 (x618 x1460) (ite x748 (x618 x1460) (x65 x1460)))))
(define-fun x1036 ((x1460 Int)) Int (ite (= x375 x1460) x1080 (x416 x1460)))
(define-fun x507 ((x1460 Int)) Int (ite x115 (ite x79 (x416 x1460) (x1036 x1460)) (x1378 x1460)))
(define-fun x1169 ((x1460 Int)) Int (ite (= x578 x1460) x1453 (x645 x1460)))
(define-fun x1318 ((x1460 Int)) Int (ite x1641 (x645 x1460) (ite x945 (x645 x1460) (ite x281 (x645 x1460) (x1169 x1460)))))
(define-fun x1432 ((x1460 Int)) Int (ite (= x1460 x302) x66 (x1318 x1460)))
(define-fun x1373 ((x1460 Int)) Int (ite x1134 (x1318 x1460) (ite x716 (x1318 x1460) (ite x748 (x1318 x1460) (x1432 x1460)))))
(define-fun x1423 ((x1460 Int)) Int (ite (= x1460 x1591) x1189 (x1373 x1460)))
(define-fun x911 ((x1460 Int)) Int (ite x115 (ite x79 (x1373 x1460) (x1423 x1460)) (x645 x1460)))
(define-fun x103 ((x1460 Int)) Int (ite (= x892 x1460) x360 (x1052 x1460)))
(define-fun x43 ((x1460 Int)) Int (ite x1641 (x1052 x1460) (ite x945 (x1052 x1460) (ite x281 (x1052 x1460) (x103 x1460)))))
(define-fun x950 ((x1460 Int)) Int (ite (= x482 x1460) x456 (x43 x1460)))
(define-fun x125 ((x1460 Int)) Int (ite x1134 (x43 x1460) (ite x716 (x43 x1460) (ite x748 (x43 x1460) (x950 x1460)))))
(define-fun x1331 ((x1460 Int)) Int (ite (= x1676 x1460) x599 (x125 x1460)))
(define-fun x1041 ((x1460 Int)) Int (ite x115 (ite x79 (x125 x1460) (x1331 x1460)) (x1052 x1460)))
(define-fun x1499 ((x1460 Int)) Int (ite (= x1460 x1355) x1439 (x215 x1460)))
(define-fun x613 ((x1460 Int)) Int (ite x1641 (x215 x1460) (ite x945 (x215 x1460) (ite x281 (x215 x1460) (x1499 x1460)))))
(define-fun x1015 ((x1460 Int)) Int (ite (= x1460 x1019) x1101 (x613 x1460)))
(define-fun x872 ((x1460 Int)) Int (ite x1134 (x613 x1460) (ite x716 (x613 x1460) (ite x748 (x613 x1460) (x1015 x1460)))))
(define-fun x818 ((x1460 Int)) Int (ite (= x375 x1460) x1507 (x872 x1460)))
(define-fun x543 ((x1460 Int)) Int (ite x115 (ite x79 (x872 x1460) (x818 x1460)) (x215 x1460)))
(define-fun x1704 ((x1460 Int)) Int (ite (= x1355 x1460) x1199 (x568 x1460)))
(define-fun x481 ((x1460 Int)) Int (ite x1641 (x568 x1460) (ite x945 (x568 x1460) (ite x281 (x568 x1460) (x1704 x1460)))))
(define-fun x264 ((x1460 Int)) Int (ite (= x1460 x1019) x1194 (x481 x1460)))
(define-fun x1703 ((x1460 Int)) Int (ite x1134 (x481 x1460) (ite x716 (x481 x1460) (ite x748 (x481 x1460) (x264 x1460)))))
(define-fun x342 ((x1460 Int)) Int (ite (= x1460 x375) x243 (x1703 x1460)))
(define-fun x1663 ((x1460 Int)) Int (ite x115 (ite x79 (x1703 x1460) (x342 x1460)) (x568 x1460)))
(define-fun x194 ((x1460 Int)) Int (ite (= x1605 x1460) x1326 (x507 x1460)))
(define-fun x1287 ((x1460 Int)) Int (ite (= x326 x1460) x843 (x899 x1460)))
(define-fun x1074 ((x1460 Int)) Int (ite x316 (x899 x1460) (x1287 x1460)))
(define-fun x502 ((x1460 Int)) Int (ite (= x37 x1460) x1310 (x1074 x1460)))
(define-fun x305 ((x1460 Int)) Int (ite x1255 (x1074 x1460) (x502 x1460)))
(define-fun x301 ((x1460 Int)) Int (ite x945 (x899 x1460) (ite x281 (x899 x1460) (x305 x1460))))
(define-fun x787 ((x1460 Int)) Int (ite x1641 (x899 x1460) (x301 x1460)))
(define-fun x538 ((x1460 Int)) Int (ite (= x1605 x1460) x1345 (x543 x1460)))
(define-fun x40 ((x1460 Int)) Int (ite x1126 (x543 x1460) (ite x278 (x543 x1460) (ite x852 (x543 x1460) (x538 x1460)))))
(define-fun x1177 ((x1460 Int)) Int (ite (= x1460 x801) x505 (x911 x1460)))
(define-fun x874 ((x1460 Int)) Int (ite x1126 (x911 x1460) (ite x278 (x911 x1460) (ite x852 (x911 x1460) (x1177 x1460)))))
(define-fun x34 ((x1460 Int)) Int (ite x1126 (x507 x1460) (ite x278 (x507 x1460) (ite x852 (x507 x1460) (x194 x1460)))))
(define-fun x1068 ((x1460 Int)) Int (ite (= x659 x1460) x802 (x1041 x1460)))
(define-fun x287 ((x1460 Int)) Int (ite x1126 (x1041 x1460) (ite x278 (x1041 x1460) (ite x852 (x1041 x1460) (x1068 x1460)))))
(define-fun x903 ((x1460 Int)) Int (ite (= x1460 x1605) x64 (x1663 x1460)))
(define-fun x1241 ((x1460 Int)) Int (ite x1126 (x1663 x1460) (ite x278 (x1663 x1460) (ite x852 (x1663 x1460) (x903 x1460)))))
(define-fun x794 ((x1460 Int)) Int (ite (= x1460 x1273) x409 (x787 x1460)))
(define-fun x1285 ((x1460 Int)) Int (ite x112 (x787 x1460) (x794 x1460)))
(define-fun x851 ((x1460 Int)) Int (ite (= x1460 x1550) x1665 (x1285 x1460)))
(define-fun x531 ((x1460 Int)) Int (ite x1517 (x1285 x1460) (x851 x1460)))
(define-fun x63 ((x1460 Int)) Int (ite x716 (x787 x1460) (ite x748 (x787 x1460) (x531 x1460))))
(define-fun x1089 ((x1460 Int)) Int (ite x1134 (x787 x1460) (x63 x1460)))
(define-fun x1490 ((x1460 Int)) Int (ite (= x1460 x866) x696 (x1089 x1460)))
(define-fun x1302 ((x1460 Int)) Int (ite x662 (x1089 x1460) (x1490 x1460)))
(define-fun x190 ((x1460 Int)) Int (ite (= x1158 x1460) x452 (x1302 x1460)))
(define-fun x1491 ((x1460 Int)) Int (ite x624 (x1302 x1460) (x190 x1460)))
(define-fun x1013 ((x1460 Int)) Int (ite x79 (x1089 x1460) (x1491 x1460)))
(define-fun x1229 ((x1460 Int)) Int (ite x115 (x1013 x1460) (x899 x1460)))
(define-fun x1079 ((x1460 Int)) Int (ite (= x512 x1460) x652 (x1229 x1460)))
(define-fun x796 ((x1460 Int)) Int (ite x1675 (x1229 x1460) (x1079 x1460)))
(define-fun x262 ((x1460 Int)) Int (ite (= x574 x1460) x935 (x796 x1460)))
(define-fun x376 ((x1460 Int)) Int (ite x140 (x796 x1460) (x262 x1460)))
(define-fun x1619 ((x1460 Int)) Int (ite x278 (x1229 x1460) (ite x852 (x1229 x1460) (x376 x1460))))
(define-fun x1392 ((x1460 Int)) Int (ite x1126 (x1229 x1460) (x1619 x1460)))
(define-fun x1146 ((x1460 Int)) Int (ite (= x1460 x1087) x921 (x34 x1460)))
(define-fun x303 ((x1460 Int)) Int (ite (= x1518 x1460) x636 (x267 x1460)))
(define-fun x728 ((x1460 Int)) Int (ite (= x1364 x1460) x636 (x1630 x1460)))
(define-fun x421 ((x1460 Int)) Int (ite x905 (x34 x1460) (ite x1097 (x34 x1460) (ite x1266 (x34 x1460) (x1146 x1460)))))
(define-fun x1342 ((x1460 Int)) Int (ite (= x273 x1460) x1514 (x874 x1460)))
(define-fun x1096 ((x1460 Int)) Int (ite x905 (x874 x1460) (ite x1097 (x874 x1460) (ite x1266 (x874 x1460) (x1342 x1460)))))
(define-fun x539 ((x1460 Int)) Int (ite (= x1087 x1460) x1546 (x1241 x1460)))
(define-fun x1193 ((x1460 Int)) Int (ite x905 (x1241 x1460) (ite x1097 (x1241 x1460) (ite x1266 (x1241 x1460) (x539 x1460)))))
(define-fun x1203 ((x1460 Int)) Int (ite (= x1564 x1460) x118 (x287 x1460)))
(define-fun x701 ((x1460 Int)) Int (ite x905 (x287 x1460) (ite x1097 (x287 x1460) (ite x1266 (x287 x1460) (x1203 x1460)))))
(define-fun x707 ((x1460 Int)) Int (ite (= x323 x1460) x368 (x1392 x1460)))
(define-fun x773 ((x1460 Int)) Int (ite x576 (x1392 x1460) (x707 x1460)))
(define-fun x1450 ((x1460 Int)) Int (ite (= x1460 x1252) x56 (x773 x1460)))
(define-fun x347 ((x1460 Int)) Int (ite x378 (x773 x1460) (x1450 x1460)))
(define-fun x142 ((x1460 Int)) Int (ite x1097 (x1392 x1460) (ite x1266 (x1392 x1460) (x347 x1460))))
(define-fun x1644 ((x1460 Int)) Int (ite x905 (x1392 x1460) (x142 x1460)))
(define-fun x969 ((x1460 Int)) Int (ite (= x1087 x1460) x993 (x40 x1460)))
(define-fun x272 ((x1460 Int)) Int (ite x905 (x40 x1460) (ite x1097 (x40 x1460) (ite x1266 (x40 x1460) (x969 x1460)))))
(define-fun x995 ((x1460 Int)) Int (ite (= x1268 x1460) x1622 (x199 x1460)))
(define-fun x1539 ((x1460 Int)) Int (ite (= x1364 x1460) x1622 (x682 x1460)))
(define-fun x775 ((x1460 Int)) Int (ite x79 (x416 x1460) (x1036 x1460)))
(define-fun x1680 ((x1460 Int)) Int (ite x79 (x872 x1460) (x818 x1460)))
(define-fun x306 ((x1460 Int)) Int (ite x79 (x1703 x1460) (x342 x1460)))
(define-fun x363 ((x1460 Int)) Int (ite x79 (x1373 x1460) (x1423 x1460)))
(define-fun x454 ((x1460 Int)) Int (ite x79 (x125 x1460) (x1331 x1460)))
(define-fun x393 ((x1460 Int)) Int (ite (= x865 x1460) x602 (x701 x1460)))
(define-fun x1471 ((x1460 Int)) Int (ite x26 (x701 x1460) (x393 x1460)))
(define-fun x468 ((x1460 Int)) Int (ite (= x1460 x552) x560 (x1096 x1460)))
(define-fun x1325 ((x1460 Int)) Int (ite x26 (x1096 x1460) (x468 x1460)))
(define-fun x1340 ((x1460 Int)) Int (ite (= x1460 x1003) x377 (x272 x1460)))
(define-fun x1039 ((x1460 Int)) Int (ite x26 (x272 x1460) (x1340 x1460)))
(define-fun x1224 ((x1460 Int)) Int (ite (= x1003 x1460) x216 (x421 x1460)))
(define-fun x1231 ((x1460 Int)) Int (ite x26 (x421 x1460) (x1224 x1460)))
(define-fun x1043 ((x1460 Int)) Int (ite x115 (x728 x1460) (x1630 x1460)))
(define-fun x1010 ((x1460 Int)) Int (ite x873 (ite x26 (x272 x1460) (x1340 x1460)) (x543 x1460)))
(define-fun x84 ((x1460 Int)) Int (ite x873 (ite x26 (x1096 x1460) (x468 x1460)) (x911 x1460)))
(define-fun x25 ((x1460 Int)) Int (ite x873 (ite x26 (x701 x1460) (x393 x1460)) (x1041 x1460)))
(define-fun x530 ((x1460 Int)) Int (ite x873 (ite x26 (x421 x1460) (x1224 x1460)) (x507 x1460)))
(define-fun x906 ((x1460 Int)) Int 0)
(define-fun x1210 ((x1460 Int)) Int (ite x945 (x1378 x1460) (ite x281 (x1378 x1460) (x1437 x1460))))
(define-fun x719 ((x1460 Int)) Int (ite x945 (x568 x1460) (ite x281 (x568 x1460) (x1704 x1460))))
(define-fun x135 ((x1460 Int)) Int (ite x945 (x215 x1460) (ite x281 (x215 x1460) (x1499 x1460))))
(define-fun x1159 ((x1460 Int)) Int (ite x945 (x1052 x1460) (ite x281 (x1052 x1460) (x103 x1460))))
(define-fun x358 ((x1460 Int)) Int (ite x945 (x645 x1460) (ite x281 (x645 x1460) (x1169 x1460))))
(define-fun x855 ((x1460 Int)) Int (ite x716 (x43 x1460) (ite x748 (x43 x1460) (x950 x1460))))
(define-fun x1377 ((x1460 Int)) Int (ite x716 (x618 x1460) (ite x748 (x618 x1460) (x65 x1460))))
(define-fun x1388 ((x1460 Int)) Int (ite x716 (x613 x1460) (ite x748 (x613 x1460) (x1015 x1460))))
(define-fun x124 ((x1460 Int)) Int (ite x716 (x481 x1460) (ite x748 (x481 x1460) (x264 x1460))))
(define-fun x203 ((x1460 Int)) Int (ite x716 (x1318 x1460) (ite x748 (x1318 x1460) (x1432 x1460))))
(define-fun x1454 ((x1460 Int)) Int (ite x278 (x507 x1460) (ite x852 (x507 x1460) (x194 x1460))))
(define-fun x97 ((x1460 Int)) Int (ite x278 (x911 x1460) (ite x852 (x911 x1460) (x1177 x1460))))
(define-fun x1300 ((x1460 Int)) Int (ite x278 (x543 x1460) (ite x852 (x543 x1460) (x538 x1460))))
(define-fun x675 ((x1460 Int)) Int (ite x278 (x1041 x1460) (ite x852 (x1041 x1460) (x1068 x1460))))
(define-fun x1250 ((x1460 Int)) Int (ite x278 (x1663 x1460) (ite x852 (x1663 x1460) (x903 x1460))))
(define-fun x49 ((x1460 Int)) Int (ite x1097 (x34 x1460) (ite x1266 (x34 x1460) (x1146 x1460))))
(define-fun x718 ((x1460 Int)) Int (ite x1097 (x287 x1460) (ite x1266 (x287 x1460) (x1203 x1460))))
(define-fun x308 ((x1460 Int)) Int (ite x1097 (x1241 x1460) (ite x1266 (x1241 x1460) (x539 x1460))))
(define-fun x1396 ((x1460 Int)) Int (ite x1097 (x40 x1460) (ite x1266 (x40 x1460) (x969 x1460))))
(define-fun x200 ((x1460 Int)) Int (ite x1097 (x874 x1460) (ite x1266 (x874 x1460) (x1342 x1460))))
(define-fun x83 ((x1460 Int)) Int (ite (= x1622 x1460) x170 (x1644 x1460)))
(define-fun x248 ((x1460 Int)) Int (ite (= x1460 x736) x354 (x83 x1460)))
(define-fun x434 ((x1460 Int)) Int (ite x1524 (x1644 x1460) (x248 x1460)))
(define-fun x253 ((x1460 Int)) Int (ite (= x863 x1460) x897 (x434 x1460)))
(define-fun x335 ((x1460 Int)) Int (ite x252 (x434 x1460) (x253 x1460)))
(define-fun x571 ((x1460 Int)) Int (ite (= x955 x1460) x534 (x335 x1460)))
(define-fun x1083 ((x1460 Int)) Int (ite (= x1003 x1460) x17 (x1193 x1460)))
(define-fun x343 ((x1700 Int)) Bool (or (not (and (>= 1461501637330902918203684832716283019655932542975 x1700) (<= 0 x1700))) (= 0 x1700) (not (= (x1630 x1700) x1700))))
(define-fun x1155 ((x1058 Int)) Bool (=> (and (>= 1461501637330902918203684832716283019655932542975 x1058) (>= x1058 0)) (x144 (x1630 x1058))))
(define-fun x1515 () Bool (and (x343 x1449) (x343 x1337) (x343 x1364) (x343 x1598) (x343 x1187)))
(define-fun x489 () Bool x1515)
(define-fun x688 () Bool (and (x1155 x1449) (x1155 x1364) (x1155 x1598) (x1155 x1187) (x1155 x1337)))
(define-fun x1333 () Bool x688)
(assert (x1561 x547))
(assert (x1561 x882))
(assert (= (x1406 (x1170 64 x1258 52)) 64))
(assert (=> (<= x1426 10000) (= (x1051 x1426) 0)))
(assert (= (x907 (x1170 64 x1337 64)) x1337))
(assert (x1561 x1698))
(assert (= (x854 (x1170 64 x1364 63)) 63))
(assert (x1561 x180))
(assert (= (and x1286 x1118) x1347))
(assert (= (and (not x860) x27) x134))
(assert (= (x907 (x1170 64 x1258 64)) x1258))
(assert (= x1357 (and x1435 x289)))
(assert (x1561 x1411))
(assert (= x139 (or x1551 x576)))
(assert (x1561 x802))
(assert (= x693 (or x1162 x119)))
(assert (x1561 x64))
(assert (x1678 (x1612 x1364)))
(assert (x1256 1545185628))
(assert (= x175 (or x152 x1335)))
(assert (x1561 x1506))
(assert (= (and (not x581) x1673) x615))
(assert (x1678 (x345 x1187)))
(assert (= x824 (=> (and (and (= x1179 x1187) (<= 0 x1550) (>= 1329227995784915872903807060280344575 x1628) (= x1628 (x782 x1187)) (>= x1628 0) (>= x87 0) (<= x87 1461501637330902918203684832716283019655932542975) (= false x1495) (= x1187 x1062) (= x87 (x682 x1187)) (= x1543 (x1285 x87)) (>= 1461501637330902918203684832716283019655932542975 x1550) (= x1187 x85) x577 (= (x682 x1187) x1550) (= 10000000000 x658)) (and (= x949 (* (div x1628 10000000000) 10000000000)) (= x1133 10000000000) (= (+ x1543 x949) x1665))) x1586)))
(assert (x1561 x822))
(assert (x1561 x560))
(assert (= x365 (=> (and (= x1459 (= 1 x541)) (= x249 x1439) (= x1323 (or x1263 x1253)) (= (= x541 3) x902) (>= 255 x541) (= x1098 (and x913 x878)) (= (not x1459) x913) (= x743 x1449) (= x1253 (= x1439 1)) (= x878 (not x902)) (= (x215 x1355) x541) (= (= 3 x1439) x1263) (= (and x1323 x1098) x1086)) (and (=> x1086 x973) (=> (and (not x1086) (and (= true x1485) (not x1086))) x1548)))))
(assert (= x1430 (and x527 x1311)))
(assert (x1561 x1489))
(assert (x144 (x1043 x1364)))
(assert (x1561 x1247))
(assert (= (x1170 64 x1449 52) (x1051 (x1170 64 x1449 52))))
(assert (= x1449 (x907 (x1170 64 x1449 64))))
(assert (x1561 x1080))
(assert (x1256 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (not (x1256 (x1170 64 x1187 52))))
(assert (x1561 x529))
(assert (= (=> (and (and (and (= x366 (* (div x159 10000000000) 10000000000)) (= (- x823 x366) x368) (= x1696 10000000000)) (and (= false x734) (= 10000000000 x1582) (= x1240 (* 10000000000 (div x921 10000000000))) (= (+ x830 x1240) x823) (= 10000000000 x1254))) (and (= x121 false) (= (x1392 x1672) x830) (= (x682 x1337) x323) (= x744 x1337) (>= x323 0) (>= 1461501637330902918203684832716283019655932542975 x1672) (= x1312 10000000000) x640 (= x1672 (x682 x1337)) (<= 0 x1672) (>= 1461501637330902918203684832716283019655932542975 x323) (= x960 x1337))) x1530) x956))
(assert (x1516 x1651))
(assert (= x1184 (and x813 (not x1617))))
(assert (=> (<= x1187 10000) (= (x1051 x1187) 0)))
(assert (= x223 (=> (and (and (and (= x1468 (x1612 x1364)) (= (* (div x668 10000000000) 10000000000) x499) (= x1082 (+ x11 x499)) (= x1364 x28) (= (x59 x1553) x1160) (= x1690 false) (= x1553 x350) (= 10000000000 x1239) (= 10000000000 x723) (= x1553 x772) (<= 0 x1468) (<= x1468 1329227995784915872903807060280344575)) (and (= 10000000000 x304) (= x417 (* 10000000000 (div x1468 10000000000))) (= (- x1160 x417) x283))) (and (= (x1612 x1364) x668) (>= x668 0) x334 (= x11 (x208 x636)) (= x636 x893) (= x636 x258) (= x321 false) (= x1364 x791) (= 10000000000 x1467) (<= x668 1329227995784915872903807060280344575))) x189)))
(assert (=> (>= 10000 x822) (= 0 (x1051 x822))))
(assert (= x729 (and (=> (and (= x488 x466) (not x881)) x783) (=> (and (and (= (= 0 x1337) x884) (= 0 x689)) x881) (and (=> (and x884 (= x81 x488)) x533) (=> (and (not x884) (and (= (x1156 (- 0 x1293)) x554) (= (= x554 0) x1404))) (and (=> (and (and (= (x1510 x1337) x1487) (= 0 x1489) (<= x1293 47223664828696452136959999999999) (= (x34 x1087) x159) (<= x998 4722366482869645213695) (= (or x1625 x411) x692) (>= 3 x1487) (= (and x692 x6) x860) x975 (= x1087 (x1170 64 x1337 52)) (= x1337 x143) (<= x1514 4722366482869645213695) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x488) (>= x488 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x488) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639746 x488))) (= x411 (= 3 x633)) (= (= x845 x921) x975) (<= x1546 340282366920938463463374607431768211455) (= x1668 (x1170 64 x1337 64)) (>= 1329227995784915872903807060280344575 x159) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x488) (<= x488 115792089237316195423570985008687907853269984665640564039457584007913129639743) (and (<= x488 115792089237316195423570985008687907853269984665640564039457584007913129639838) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639746 x488))) (>= 3 x993) (> x1492 x429) (= x141 x921) (>= 1329227995784915872903807060280344575 x845) (= x1625 (= 1 x629)) (= (= x1337 0) x799) (= x1600 x1337) x1554 (= x998 (x874 x1668)) (= 0 x422) (>= 1329227995784915872903807060280344575 x921) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x488) (= x1337 x630) (= (not x799) x6) (= (x40 x1122) x993) (= x1554 (= x993 x1487)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x488) (<= x118 4722366482869645213695) (>= 3 x633) (= x1492 (x1042 (+ x429 96))) (= 0 x126) (< x488 x429) (>= x845 0) (= x845 (x1280 x1337)) (= x921 (x34 x1087)) (= (x1510 x1337) x629) (= (x1170 64 x1337 64) x564) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x488) (and (<= x488 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x488 115792089237316195423570985008687907853269984665640564039457584007913129639746)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x488)) (= (div x1293 10000000000) x875) (>= 3 x629) (<= x488 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1337 x1662) (= x1546 (x1241 x1087)) (= (x1042 (+ 96 x488)) x429) (= x1514 (+ x875 x998)) (= x1337 x1077) (= x1122 (x1170 64 x1337 52)) (= x118 (x287 x564)) (= x633 (x1510 x1337))) (not x1404)) (and (=> (and (and (= x1299 true) (not x860)) (not x860)) x982) (=> x860 x75))) (=> (and x1404 (= x488 x81)) x533))))))))
(assert (= (x1051 1545185628) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1170 64 x1364 62)))
(assert (x1561 x1507))
(assert (= (or x1011 x1281) x399))
(assert (x1561 x88))
(assert (= 64 (x1406 (x1170 64 x1258 64))))
(assert (x1561 x1389))
(assert (x1561 x689))
(assert (x1561 x182))
(assert (x1256 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x1678 (x984 x1598)))
(assert (x1561 x29))
(assert (= (and x1144 (not x1321)) x1281))
(assert (x1561 x1453))
(assert (= (and x725 x997) x852))
(assert (=> (>= 10000 x1337) (= 0 (x1051 x1337))))
(assert (x1678 (x644 x1337)))
(assert (x1561 x1642))
(assert (= (and (not x931) x1547) x1712))
(assert (= x378 (and (not x410) x16)))
(assert (= (or x1163 x1397) x331))
(assert (= x1017 (and x1572 x291)))
(assert (= (and x211 x881) x1395))
(assert (not (x1256 (x1170 64 x1598 52))))
(assert (x1561 x265))
(assert (x1561 x1661))
(assert (= x585 (=> (and (and (and (= (- x1391 x1394) x897) (= (* (div x1247 10000000000) 10000000000) x1394) (= 10000000000 x1100)) (and (= (+ x979 x107) x1391) (= 10000000000 x1067) (= false x691) (= x107 (* (div x216 10000000000) 10000000000)) (= x1021 10000000000))) (and (>= 1461501637330902918203684832716283019655932542975 x863) (>= 1461501637330902918203684832716283019655932542975 x1242) (= x60 10000000000) x1208 (= x1364 x880) (= x1242 (x1539 x1364)) (= x863 (x1539 x1364)) (<= 0 x863) (= x1364 x1387) (>= x1242 0) (= false x395) (= x979 (x434 x1242)))) x300)))
(assert (x1561 x473))
(assert (> (x1170 64 x822 64) 10000))
(assert (not (x1256 (x1170 64 x822 64))))
(assert (= x822 (x907 (x1170 64 x822 64))))
(assert (x1561 x1237))
(assert (x1678 (x62 x1364)))
(assert (= (=> (and (and (= x173 (x432 x1364)) (= x948 10000000000) (<= x173 1329227995784915872903807060280344575) (= x1560 x1364) (= false x626) x1376 (<= x348 1461501637330902918203684832716283019655932542975) (<= 0 x173) (= (x682 x1364) x1158) (<= x1158 1461501637330902918203684832716283019655932542975) (= x348 (x682 x1364)) (= x1081 (x1302 x348)) (<= 0 x1158) (= x1262 x1364) (= x1602 x1364) (>= x348 0)) (and (= x452 (+ x1081 x1576)) (= 10000000000 x231) (= (* 10000000000 (div x173 10000000000)) x1576))) x1708) x311))
(assert (= (=> (and (= x1037 (x1156 (- x1337 x1598))) (= (> x1037 0) x527)) (and (=> (not x527) x840) (=> (and x527 (and (= (not (= x1598 0)) x1603) (= x1364 x332) (>= 1329227995784915872903807060280344575 x1293) (= x623 (x1170 64 x1364 52)) (= (x1521 x1364) x1338) (>= x1338 0) (= (x507 x623) x1293) (<= x1338 1329227995784915872903807060280344575) x737 (= (= x1293 x1338) x737) (= (not (= 0 x1337)) x881))) (and (=> (and x1603 (and (= (= x1598 0) x725) (= x1705 0))) (and (=> (and (= x1389 x133) x725) x937) (=> (and (= x1332 (= 0 x1293)) (not x725)) (and (=> (and (= x1389 x133) x1332) x937) (=> (and (and (< x133 x703) (= x340 (x580 x1598)) (<= x1326 1329227995784915872903807060280344575) (= x792 (and x19 x414)) (= x1716 (= x1646 x1326)) (= x1578 x1598) (>= 47223664828696452136959999999999 x1293) (= (x1170 64 x1598 52) x1446) (= (or x920 x1012) x414) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639933) (or (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639743) (and (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x133 115792089237316195423570985008687907853269984665640564039457584007913129639746)) (>= x133 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x233 0) (>= 3 x340) (<= x944 1329227995784915872903807060280344575) (= x944 (x507 x1605)) (<= x64 340282366920938463463374607431768211455) (<= x2 3) (= x832 (x911 x1666)) (= (= x1598 0) x1185) (= x1525 x1598) (= x1345 (x543 x1446)) (= x1598 x746) (= (= 3 x2) x1012) (= (x1521 x1598) x1646) (= x846 (x1042 (+ x703 96))) (= x1666 (x1170 64 x1598 64)) (= x64 (x1663 x1605)) (= x1605 (x1170 64 x1598 52)) (>= 4722366482869645213695 x802) (= x1494 x1598) (= x1595 x1326) (>= 4722366482869645213695 x832) x1152 (= x2 (x580 x1598)) (= (x1170 64 x1598 64) x1624) (= (x1156 (- x832 x1374)) x505) (= x29 (x580 x1598)) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (= x1345 x340) x1152) (= 0 x882) (= x455 x1598) (= (x1041 x1624) x802) (>= 3 x1345) (<= x505 4722366482869645213695) (>= 3 x29) (or (>= x133 115792089237316195423570985008687907853269984665640564039457584007913129639841) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639743) (and (>= x133 115792089237316195423570985008687907853269984665640564039457584007913129639746) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639838))) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1326 (x507 x1605)) (= (div x1293 10000000000) x1374) (>= 1329227995784915872903807060280344575 x1646) (= x920 (= x29 1)) (= x703 (x1042 (+ x133 96))) (= (not x1185) x19) x1716 (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x133) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x133) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639746 x133) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639838))) (= 0 x776) (> x846 x703) (>= x1646 0)) (not x1332)) (and (=> (and (not x792) (and (= true x1113) (not x792))) x709) (=> x792 x1018))))))) (=> (and (not x1603) (= x488 x133)) x729))))) x871))
(assert (x1561 x456))
(assert (= x694 (=> (and (and (and (= (* 10000000000 (div x1080 10000000000)) x1640) (= x1655 10000000000) (= 10000000000 x1610) (= (+ x1375 x1640) x1427) (= x1213 false)) (and (= (* (div x265 10000000000) 10000000000) x1699) (= (- x1427 x1699) x425) (= x1500 10000000000))) (and (= (x728 x1364) x1216) (= (x232 x390) x1375) (= 10000000000 x312) (<= x1216 1461501637330902918203684832716283019655932542975) (<= x390 1461501637330902918203684832716283019655932542975) (= x470 x1364) (= x1431 x1364) (= x390 (x728 x1364)) (= x435 false) (<= 0 x390) x931 (>= x1216 0))) x943)))
(assert (not (x1256 (x1170 64 x1449 64))))
(assert (x1561 x292))
(assert (= x517 (or x1097 x1266 x810)))
(assert (x1561 x369))
(assert (= 64 (x1406 (x1170 64 x822 64))))
(assert (x1561 x620))
(assert (= (x1406 (x1170 64 x1364 63)) 64))
(assert (x1561 x971))
(assert (= x634 (or x1517 x858)))
(assert (not (x1256 (x1170 64 x1449 52))))
(assert (x1561 x1279))
(assert (= (or x134 x879) x835))
(assert (= (and x1372 (not x881)) x905))
(assert (= (or x992 x427) x922))
(assert (= (or x1002 x252) x433))
(assert (= (=> (and (and (and (= x807 10000000000) (= x680 (- x595 x1623)) (= x1623 (* (div x159 10000000000) 10000000000))) (and (= 10000000000 x901) (= x595 (+ x890 x698)) (= x1110 false) (= x890 (* 10000000000 (div x921 10000000000))) (= 10000000000 x361))) (and (= (x1043 x1337) x1313) (>= x677 0) (= x1337 x1125) (= 10000000000 x187) (= (x1043 x1337) x677) (<= x677 1461501637330902918203684832716283019655932542975) (= x1337 x1251) x860 (= false x742) (>= 1461501637330902918203684832716283019655932542975 x1313) (>= x1313 0) (= x698 (x542 x1313)))) x982) x75))
(assert (= x189 (=> (= x806 (= (ite x442 1 0) (ite x1045 1 0))) (and (=> (and (not x806) (and (= (x1042 (+ x1649 96)) x620) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1649)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1649) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1649) (> x620 x1649) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1649) (not (= x1649 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (not (= x1649 115792089237316195423570985008687907853269984665640564039457584007913129639840)))) (and (=> (and x1045 (= (= x1651 0) x291)) (and (=> (and (and (or (and (not x67) (= x1651 x106)) (and (= 3 x106) x67)) (= (= 2 x1651) x67)) (not x291)) x898) (=> (and (= 1 x467) x291) x1400))) (=> (and (= x132 (= x1651 1)) (not x1045)) (and (=> (and x132 (= x1544 0)) x1638) (=> (and (not x132) (and (or (and (= x1503 2) x987) (and (not x987) (= x1503 x1651))) (= (= x1651 3) x987))) x465))))) (=> (and x806 (= x282 x1649)) x1198)))))
(assert (not (x1256 (x1170 64 x1364 64))))
(assert (= x1410 (=> (and (= x1564 (x1170 64 x1337 64)) (= (x1170 64 x1337 64) x273) (= x81 x1492)) x533)))
(assert (x1561 x519))
(assert (= x576 (and (not x640) x835)))
(assert (x1561 x149))
(assert (= x873 (or x1594 x26)))
(assert (= 64 (x1406 (x1170 64 x1598 64))))
(assert (x1561 x1503))
(assert (= 64 (x854 (x1170 64 x1337 64))))
(assert (x1561 x933))
(assert (x1678 (x1280 x1337)))
(assert (= (or x94 x999) x463))
(assert (x1561 x346))
(assert (x1561 x629))
(assert (x1561 x1488))
(assert (= 64 (x1406 (x1170 64 x1337 64))))
(assert (= (=> (= x837 x377) x666) x1486))
(assert (x1561 x24))
(assert (= (or x316 x596) x768))
(assert (x1561 x710))
(assert (x1561 x1348))
(assert (x1561 x317))
(assert (x1561 x1651))
(assert (= (x1051 (x1170 64 x1364 62)) (x1170 64 x1364 62)))
(assert (= x13 (or x112 x877)))
(assert (= (=> (and (>= 3 x24) (= (and x1207 x269) x1526) (= (= 0 x1598) x942) (= x1228 (x580 x1598)) (= x263 x1598) (= 0 x1305) (= (= 2 x24) x1505) (= (x580 x1598) x24) (= (or x111 x1505) x269) (= (= 3 x1228) x111) (>= 3 x1228) (= x583 x1598) (= (not x942) x1207)) (and (=> x1526 x1652) (=> (and (and (= x100 true) (not x1526)) (not x1526)) x1063))) x709))
(assert (= x963 (or x873 x1271)))
(assert (= (x1170 64 x1258 64) (x1051 (x1170 64 x1258 64))))
(assert (x1256 1000000000000000000000000000))
(assert (x1561 x1514))
(assert (= (and (not x1603) x1430) x1126))
(assert (x1561 x1128))
(assert (= (x1051 47223664828696452136959999999999) 0))
(assert (x1561 x754))
(assert (x1561 x205))
(assert (= (and x963 x619) x1683))
(assert (x144 (x682 x1337)))
(assert (< 10000 (x1170 64 x1337 52)))
(assert (= (x854 (x1170 64 x822 52)) 52))
(assert (= x1435 true))
(assert (x1561 x953))
(assert (< (x1170 64 x822 64) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1561 x1150))
(assert (= (or x114 x615) x1664))
(assert (x1561 x537))
(assert (x1561 x889))
(assert (x1561 x275))
(assert (x1561 x521))
(assert (= (and x385 x357) x177))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1170 64 x1187 64)))
(assert (x1561 x57))
(assert (= x1397 (and (not x987) x621)))
(assert (> (x1170 64 x1449 64) 10000))
(assert (x1561 x643))
(assert (x108 x1497))
(assert (= (and x1361 x1526) x674))
(assert (< (x1170 64 x1598 64) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x1051 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1561 x908))
(assert (= x997 (and x1430 x1603)))
(assert (x144 (x728 x1364)))
(assert (x1678 (x1521 x1598)))
(assert (= (=> (and (and (= (+ x1466 x1028) x1438) (= x1466 (* 10000000000 (div x1447 10000000000))) (= x1245 10000000000)) (and (>= 1461501637330902918203684832716283019655932542975 x1358) (= (x1630 x1449) x1358) (= x1028 (x821 x1358)) (>= x491 0) (<= 0 x1358) (= x1449 x1030) (= x1309 false) (>= 1329227995784915872903807060280344575 x1447) (= 10000000000 x1686) (= x601 x1449) x1086 (<= x491 1461501637330902918203684832716283019655932542975) (<= 0 x1447) (= x1449 x1366) (= x491 (x1630 x1449)) (= (x46 x1449) x1447))) x1548) x973))
(assert (> (x1170 64 x1364 63) 10000))
(assert (= (=> (and (= x1003 (x1170 64 x1364 52)) (= x867 (= 1 x1279)) (= x1618 (= 0 x1364)) (= (or x867 x256) x61) (<= 0 x1009) (= x256 (= 3 x149)) (= x149 (x1565 x1364)) (= x1531 x1364) (= x1364 x285) (= x1247 (x421 x1003)) (= (x1193 x1003) x17) x1289 (<= x1009 1329227995784915872903807060280344575) (<= x1247 1329227995784915872903807060280344575) (= x1279 (x1565 x1364)) (>= 3 x149) (>= 1329227995784915872903807060280344575 x216) (= (x62 x1364) x1009) (= (= x1009 x216) x1289) (= x310 (not x1618)) (>= 340282366920938463463374607431768211455 x17) (= (x421 x1003) x216) (= 0 x833) (= x540 x216) (>= 3 x1279) (= x1278 x1364) (= x1005 (and x310 x61)) (= x1364 x224)) (and (=> x1005 x72) (=> (and (and (= true x714) (not x1005)) (not x1005)) x559))) x666))
(assert (< (x1170 64 x1449 52) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1107 (=> (and (>= 3 x391) (= (and x1111 x147) x1023) (= (= x1449 0) x525) (= x147 (or x983 x314)) (= x1111 (not x525)) (= x1449 x1141) (= x1449 x1633) (= 0 x757) (= (= 3 x391) x314) (<= x475 3) (= x983 (= x475 2)) (= x391 (x238 x1449)) (= x475 (x238 x1449))) (and (=> (and (not x1023) (and (not x1023) (= true x380))) x365) (=> x1023 x1611)))))
(assert (not (x1256 (x1170 64 x1337 64))))
(assert (x1561 x1175))
(assert (= (x1051 (x1170 64 x1364 52)) (x1170 64 x1364 52)))
(assert (= x660 (or x487 x331)))
(assert (x1256 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1561 x2))
(assert (= (and x864 x1664) x877))
(assert (< 10000 (x1170 64 x1187 52)))
(assert (= (or x33 x79) x115))
(assert (x1561 x1448))
(assert (x1561 x1689))
(assert (= x1335 (or x1020 x259)))
(assert (x1678 (x52 x1258)))
(assert (= (x1170 64 x822 52) (x1051 (x1170 64 x822 52))))
(assert (= x1187 (x907 (x1170 64 x1187 64))))
(assert (not (x1256 (x1170 64 x1258 64))))
(assert (= x1027 (and x1286 (not x1118))))
(assert (x1561 x921))
(assert (x1561 x838))
(assert (x1561 x466))
(assert (x1561 x986))
(assert (x1561 x505))
(assert (x1516 x1296))
(assert (x1561 x1222))
(assert (x1561 x758))
(assert (= (and x987 x621) x1163))
(assert (= x1018 (=> (and (and (= x1598 x814) (= x506 (x1043 x1598)) (>= 1461501637330902918203684832716283019655932542975 x506) (<= 0 x506) (>= 1461501637330902918203684832716283019655932542975 x930) (= x1598 x1670) x792 (= (x934 x930) x255) (= x1418 10000000000) (= false x1288) (= (x1043 x1598) x930) (>= x930 0)) (and (and (= x1472 10000000000) (= false x1106) (= (+ x255 x511) x162) (= x511 (* 10000000000 (div x1326 10000000000))) (= x587 10000000000)) (and (= x780 (- x162 x1616)) (= 10000000000 x916) (= x1616 (* 10000000000 (div x944 10000000000)))))) x709)))
(assert (x1561 x1449))
(assert (= (and x486 x1045) x1572))
(assert (x144 (x682 x1187)))
(assert (x1561 x761))
(assert (= 64 (x1406 (x1170 64 x1449 64))))
(assert (< 10000 (x1170 64 x1598 52)))
(assert (= x225 (or x1621 x1421)))
(assert (x1561 x1093))
(assert (x1561 x770))
(assert (x1561 x961))
(assert (x1561 x53))
(assert (x1561 x17))
(assert (= x1214 (=> (and (and (>= x883 0) (= x458 false) (= x1187 x271) (= x45 10000000000) (<= x883 1461501637330902918203684832716283019655932542975) (= x1456 (x738 x739)) (= x1187 x1583) x581 (= (x1630 x1187) x739) (<= x739 1461501637330902918203684832716283019655932542975) (>= x739 0) (= (x1630 x1187) x883)) (and (and (= x508 (+ x1334 x1456)) (= 10000000000 x1556) (= x1329 false) (= (* 10000000000 (div x1237 10000000000)) x1334) (= x214 10000000000)) (and (= x1405 10000000000) (= (* (div x953 10000000000) 10000000000) x721) (= (- x508 x721) x383)))) x138)))
(assert (x1561 x563))
(assert (x1561 x1228))
(assert (< (x1170 64 x1364 52) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x965 (=> (and (and (<= 0 x394) (<= x1181 1461501637330902918203684832716283019655932542975) (= (x796 x1181) x352) (= 10000000000 x1710) (>= 1329227995784915872903807060280344575 x394) (= (x682 x1598) x574) (= x394 (x984 x1598)) (<= 0 x1181) (= x1307 x1598) (= x155 x1598) (<= x574 1461501637330902918203684832716283019655932542975) x1462 (<= 0 x574) (= false x1570) (= x1181 (x682 x1598)) (= x1166 x1598)) (and (= 10000000000 x1584) (= (+ x408 x352) x935) (= x408 (* (div x394 10000000000) 10000000000)))) x1354)))
(assert (= (and x290 x1005) x1204))
(assert (x1561 x133))
(assert (= x789 (and x290 (not x1005))))
(assert (x1561 x195))
(assert (not (x1256 (x1170 64 x1598 64))))
(assert (= (and (not x792) x55) x288))
(assert (= (and x463 x1542) x356))
(assert (= x509 (and x1465 x334)))
(assert (= (and x881 x1372) x151))
(assert (= 0 (x1051 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x724) (= (< x1689 2) x1292) (< x484 x133) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x724) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x724) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639746 x724) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x724))) (= x1689 (x543 x1168)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x724) (= x180 (x580 x1364)) (= x484 (x1042 (+ 96 x724))) (= (x1170 64 x1364 64) x1308) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x724) (< x724 x484) (= x1337 (ite (= x202 x1364) 0 x202)) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639746 x724) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x724)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x724) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x724)) (= (x1042 (+ x484 96)) x133) (= (= x180 x1689) x667) (= x602 (x1041 x760)) (= x1298 1) x667 (= (x1170 64 x1364 52) x1168) (= x560 (x911 x1308)) (<= x560 4722366482869645213695) (>= 3 x180) (<= x1689 3) (or (<= x724 115792089237316195423570985008687907853269984665640564039457584007913129639743) (and (<= x724 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x724 115792089237316195423570985008687907853269984665640564039457584007913129639746)) (>= x724 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= (x1170 64 x1364 64) x760) (>= 4722366482869645213695 x602) (= x1048 x1364)) (or (and (= 0 x1598) x1292) (and (and (>= 1461501637330902918203684832716283019655932542975 x632) (= (x1170 64 x1364 63) x284) (= x330 x1364) (= (x199 x284) x632) (= x632 x1598) (<= x1075 1461501637330902918203684832716283019655932542975) (>= x1075 0) (= x1075 (x682 x1364)) x68 (= (= x632 x1075) x68)) (not x1292)))) x871) x627))
(assert (x1561 x967))
(assert (x1561 x993))
(assert (x1561 x18))
(assert (x1561 x936))
(assert (x1561 x776))
(assert (x1256 1329227995784915872903807060280344575))
(assert (x144 (x1043 x1337)))
(assert (x1561 x1439))
(assert (x1561 x632))
(assert (x1561 x736))
(assert (x1561 x186))
(assert (x1561 x1016))
(assert (= (x854 (x1170 64 x1187 64)) 64))
(assert (= 64 (x854 (x1170 64 x1258 64))))
(assert (= (=> (and (and (= false x1026) (= x763 (= x895 0)) (= x894 x1536) (= 68 x547) (= 0 x1425) (= x895 x894) (= false x1692) (= (not x763) x384)) (and (and x642 (= x266 (x84 x1024)) (<= x1296 3) (= x346 x1627) (= x967 0) (= x156 (x1131 x822)) (= x642 (= x156 x1296)) (<= x1235 127) (= 0 x18) (= false x169) (>= 4722366482869645213695 x266) (= x1659 (x1170 64 x822 52)) (= (x1010 x1659) x1296) (= x764 (x589 x606)) (= (x1170 64 x822 64) x1024) (= x822 x346) (= 224 x439) (>= 4722366482869645213695 x826) (= (= x673 0) x619) (= x826 (x25 x1569)) (= (x1070 1 x1296) x673) (<= x1235 127) (<= 1 x764) (>= 3 x156) (= x822 x1536) (= x1569 (x1170 64 x822 64)) (= x1274 3002343453) (= false x1535)) (or (and (= 0 x1488) (not x619)) (and x619 (and (= x838 (x530 x545)) (>= x1457 0) (>= 1329227995784915872903807060280344575 x1457) (= x940 x346) (= x204 (= x838 x1457)) (= (x1170 64 x822 52) x545) (<= x838 1329227995784915872903807060280344575) (= (x1269 x822) x1457) (= x1488 x838) x204))))) x327) x840))
(assert (x1561 x98))
(assert (x333 x1401))
(assert (= (=> (and (and (= x1337 x1211) (= x985 (x644 x1337)) (<= 0 x1252) (= false x516) (>= x985 0) (= x1243 x1337) (<= x1252 1461501637330902918203684832716283019655932542975) (<= 0 x1658) (= x1337 x95) (>= 1461501637330902918203684832716283019655932542975 x1658) (>= 1329227995784915872903807060280344575 x985) (= 10000000000 x474) x410 (= x1658 (x682 x1337)) (= x1609 (x773 x1658)) (= (x682 x1337) x1252)) (and (= x56 (+ x1314 x1609)) (= 10000000000 x1230) (= (* 10000000000 (div x985 10000000000)) x1314))) x1410) x387))
(assert (= x487 (and x338 x132)))
(assert (x1561 x156))
(assert (= x1667 (or x1255 x279)))
(assert (x1561 x488))
(assert (= x44 (or x905 x517)))
(assert (= x891 (and x13 (not x771))))
(assert (x1561 x1296))
(assert (= (x1406 (x1170 64 x1187 52)) 64))
(assert (= x252 (and (not x1208) x570)))
(assert (= x1530 (=> (and (= (= x993 1) x712) (>= 255 x1362) (= x1429 (and x603 x988)) (= (x40 x1087) x1362) (= x492 (or x1613 x712)) (= (not x1212) x988) (= x201 x1337) (= x1527 (and x1429 x492)) (= x603 (not x1319)) (= (= x993 3) x1613) (= (= 1 x1362) x1319) (= x379 x993) (= x1212 (= x1362 3))) (and (=> (and (and (not x1527) (= true x444)) (not x1527)) x1684) (=> x1527 x77)))))
(assert (x1561 x412))
(assert (= (=> (= x467 x106) x1400) x898))
(assert (x1561 x1157))
(assert (= (or x1027 x1347) x427))
(assert (x1561 x510))
(assert (= x813 (or x1357 x1116)))
(assert (= (or x1683 x777) x849))
(assert (= (x1170 64 x1364 63) (x1051 (x1170 64 x1364 63))))
(assert (x1256 3002343453))
(assert (x1561 x439))
(assert (x1561 x403))
(assert (x1561 x656))
(assert (= (and x1112 x442) x1368))
(assert (= (=> (and (= (and x1257 x374) x704) (= (= 3 x186) x382) (= (= x186 1) x160) (= x186 (x272 x1003)) (= (= x377 1) x809) (= x374 (not x382)) (= x1257 (not x160)) (<= x186 255) (= (and x704 x1259) x996) (= x1364 x1528) (= x377 x163) (= x1259 (or x1078 x809)) (= (= 3 x377) x1078)) (and (=> x996 x1165) (=> (and (not x996) (and (not x996) (= x1233 true))) x1197))) x300))
(assert (x1561 x832))
(assert (= 0 (x1051 1329227995784915872903807060280344575)))
(assert (= x596 (and x1023 x693)))
(assert (= (or x891 x1047) x1711))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1170 64 x1364 64)))
(assert (x1561 x429))
(assert (< (x1170 64 x1364 63) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1561 x1258))
(assert (x1561 x1538))
(assert x1333)
(assert (= (=> (and (= x924 (not x785)) (= x1622 (ite (= x1364 x1337) 0 x1337)) (>= 1461501637330902918203684832716283019655932542975 x736) (= x1385 x1364) (= (x1565 x1364) x1411) (= (x1170 64 x1364 63) x1268) (= x785 (= x736 x1622)) (>= 3 x1411) (= x1364 x1264) (= (= x1411 3) x910) (= x1632 (or x910 x919)) (= (and x1632 x924) x472) (= x1622 x747) (= (x199 x1268) x736) (= (= x116 2) x919) (= x1364 x5) (= (x1565 x1364) x116) (>= 3 x116)) (and (=> x472 x970) (=> (and (not x472) (and (= true x733) (not x472))) x800))) x783))
(assert (not (x1256 (x1170 64 x1187 64))))
(assert (= (or x245 x1017) x1567))
(assert (x1561 x941))
(assert (= (x1170 64 x1337 52) (x1051 (x1170 64 x1337 52))))
(assert (= x1592 (and x997 (not x725))))
(assert (x1561 x959))
(assert (x1561 x1101))
(assert (x1256 10000000000))
(assert (< 10000 (x1170 64 x1258 52)))
(assert (x1561 x841))
(assert (< (x1170 64 x1598 52) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= (ite (= x1364 x1187) 0 x1187) x636) (= (x749 x1364) x961) (>= 1461501637330902918203684832716283019655932542975 x1553) (= x334 (and x76 x991)) (= (not x914) x76) (= x1364 x237) (= x1553 (x267 x1518)) (= x1364 x242) (= x914 (= x1553 x636)) (= x1014 (= x537 3)) (<= x537 3) (>= 3 x961) (= x1647 x636) (= (= 1 x961) x1579) (= (x1170 64 x1364 62) x1518) (= (or x1579 x1014) x991) (= x1055 x1364) (= x537 (x749 x1364))) (and (=> (and (not x334) (and (not x334) (= true x1461))) x189) (=> x334 x223))) x1402))
(assert (x1561 x607))
(assert (x1561 x106))
(assert (x1561 x1709))
(assert (=> (<= x503 10000) (= 0 (x1051 x503))))
(assert (x1561 x503))
(assert (x1561 x340))
(assert (= (x1170 64 x1364 64) (x1051 (x1170 64 x1364 64))))
(assert (x1561 x1648))
(assert (x1561 x1635))
(assert (x1561 x422))
(assert (x1516 x1401))
(assert (= (x854 (x1170 64 x822 64)) 64))
(assert (= (x854 (x1170 64 x1598 64)) 64))
(assert (= 52 (x854 (x1170 64 x1364 52))))
(assert (not (x1256 (x1170 64 x1364 62))))
(assert (= (x1170 64 x1337 64) (x1051 (x1170 64 x1337 64))))
(assert (= (and x768 x1086) x1626))
(assert (x1561 x673))
(assert (= 64 (x1406 (x1170 64 x1187 64))))
(assert (= (or x372 x1524) x402))
(assert (= x172 (=> (and (and (>= x1660 0) (= 10000000000 x1339) (= x546 false) (<= 0 x765) x771 (<= x1660 1329227995784915872903807060280344575) (<= x535 1461501637330902918203684832716283019655932542975) (= x535 (x1630 x1187)) (= (x804 x765) x708) (= x765 (x1630 x1187)) (>= x535 0) (= x1631 x1187) (= x1187 x726) (= x446 x1187) (= (x782 x1187) x1660) (>= 1461501637330902918203684832716283019655932542975 x765)) (and (= x816 (* (div x1660 10000000000) 10000000000)) (= x82 (+ x708 x816)) (= x137 10000000000))) x31)))
(assert (= (x1051 4294967295) 0))
(assert (= (=> (and (= x1187 x166) (>= 3 x1434) (= x876 x1187) (<= x494 3) (= x864 (and x641 x299)) (= (x1715 x1187) x494) (= x641 (not x1604)) (= (x1715 x1187) x1434) (= 0 x1458) (= (= 2 x1434) x1681) (= (= x494 3) x48) (= x299 (or x48 x1681)) (= (= x1187 0) x1604)) (and (=> x864 x73) (=> (and (and (not x864) (= true x39)) (not x864)) x917))) x138))
(assert (not x1590))
(assert (= (x1051 (x1170 64 x1598 52)) (x1170 64 x1598 52)))
(assert (= x1673 (and x388 (not x565))))
(assert (= x1144 (or x662 x177)))
(assert (x1678 (x1521 x1364)))
(assert (x144 (x682 x1449)))
(assert (x1561 x1194))
(assert (= (and x1711 x577) x858))
(assert (x1561 x1199))
(assert (= x879 (and x27 x860)))
(assert (= x1112 (and x22 x555)))
(assert (=> (<= x153 10000) (= 0 (x1051 x153))))
(assert (x1561 x404))
(assert (x1256 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (< 10000 (x1170 64 x1364 64)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1170 64 x1337 52)))
(assert (= 52 (x854 (x1170 64 x1449 52))))
(assert (x1561 x1426))
(assert (= (and (not x1404) x1390) x27))
(assert (x1561 x594))
(assert (not (x1256 (x1170 64 x1258 52))))
(assert (= x598 (=> (and (and (<= 0 x392) x1615 (= x1449 x1103) (= (x1074 x392) x1424) (= x227 x1449) (= x392 (x682 x1449)) (= x1474 false) (<= x392 1461501637330902918203684832716283019655932542975) (>= x1088 0) (= x35 x1449) (= (x46 x1449) x1088) (= 10000000000 x978) (<= x1088 1329227995784915872903807060280344575) (= (x682 x1449) x37) (<= 0 x37) (>= 1461501637330902918203684832716283019655932542975 x37)) (and (= x1371 (* (div x1088 10000000000) 10000000000)) (= x1310 (+ x1371 x1424)) (= x1032 10000000000))) x1127)))
(assert (x1561 x261))
(assert (x1561 x219))
(assert (= x1421 (and (not x1178) x938)))
(assert (x1561 x1544))
(assert (= (and (not x1332) x1592) x55))
(assert (not (x1256 (x1170 64 x822 52))))
(assert (x1561 x249))
(assert (= x1708 (=> (and (= (x1170 64 x1364 64) x1591) (= x620 x282) (= (x1170 64 x1364 64) x1676)) x1198)))
(assert (= x1116 (and (not x289) x1435)))
(assert (x1561 x495))
(assert (= x1413 (or x716 x634 x748)))
(assert (x1256 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (= (=> (and (= (= 2 x1101) x550) (= x577 (and x213 x1072)) (= (= 3 x57) x38) (= x1353 (not x524)) (= (or x550 x522) x1072) (= x524 (= 2 x57)) (= x213 (and x1353 x324)) (= (= x1101 3) x522) (= x324 (not x38))) (and (=> x577 x824) (=> (and (and (= x990 true) (not x577)) (not x577)) x1586))) x31))
(assert (= (=> (= x317 x837) x1486) x887))
(assert (= x722 (and x139 x1527)))
(assert (= (or x1641 x212) x1393))
(assert (x1561 x216))
(assert (not (x1256 (x1170 64 x1364 52))))
(assert (= x1361 (or x288 x1557)))
(assert (= (=> (and (and (and (= 10000000000 x1324) (= (* (div x1247 10000000000) 10000000000) x1479) (= (- x896 x1479) x1099)) (and (= x1217 10000000000) (= (* (div x216 10000000000) 10000000000) x254) (= x896 (+ x254 x699)) (= 10000000000 x925) (= false x250))) (and (<= x1629 1461501637330902918203684832716283019655932542975) (= x759 10000000000) (>= x1629 0) (= x686 x1364) (= (x1043 x1364) x1629) (>= x1442 0) x1005 (= x1687 x1364) (<= x1442 1461501637330902918203684832716283019655932542975) (= x617 false) (= (x1295 x1629) x699) (= (x1043 x1364) x1442))) x559) x72))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1170 64 x1258 64)))
(assert (x1561 x769))
(assert (= x77 (=> (and (and (= x1537 (x1043 x1337)) (= x1337 x885) (= (x928 x1537) x1171) (= x89 x1337) (= 10000000000 x1102) x1527 (>= 1461501637330902918203684832716283019655932542975 x774) (= x774 (x1043 x1337)) (<= 0 x974) (<= x1537 1461501637330902918203684832716283019655932542975) (<= x974 1329227995784915872903807060280344575) (<= 0 x774) (>= x1537 0) (= x1317 x1337) (= x86 false) (= x974 (x644 x1337))) (and (= (+ x1422 x1171) x1574) (= 10000000000 x207) (= x1422 (* (div x974 10000000000) 10000000000)))) x1684)))
(assert (x1561 x951))
(assert (x1561 x798))
(assert (x1561 x1434))
(assert (= (and x653 x730) x945))
(assert (x1678 (x52 x1364)))
(assert (x1561 x1235))
(assert (= x1202 (and x211 (not x881))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1170 64 x1337 64)))
(assert (= x621 (and x338 (not x132))))
(assert (x1561 x602))
(assert (x1256 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (= (x854 (x1170 64 x1598 52)) 52))
(assert (= x1165 (=> (and (and (= 10000000000 x1694) (= (* 10000000000 (div x92 10000000000)) x1599) (= (+ x337 x1599) x683)) (and (= (x1182 x1364) x92) (= 10000000000 x176) (= (x127 x847) x337) (= (x1043 x1364) x847) (<= x8 1461501637330902918203684832716283019655932542975) (= x8 (x1043 x1364)) (<= 0 x92) (>= 1329227995784915872903807060280344575 x92) (<= x847 1461501637330902918203684832716283019655932542975) (= x731 x1364) (= x831 x1364) (>= x8 0) x996 (= false x635) (= x717 x1364) (>= x847 0))) x1197)))
(assert (= (=> (= x1090 (= (ite x881 1 0) (ite x1603 1 0))) (and (=> (and (and (= (x1042 (+ x466 96)) x1709) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x466)) (< x466 x1709) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x466) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x466) (not (= x466 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (not (= x466 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (<= x466 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (not x1090)) (and (=> (and (= (= x1689 2) x1297) (not x881)) (and (=> (and (not x1297) (and (or (and x1118 (= 1 x195)) (and (= x1689 x195) (not x1118))) (= (= 3 x1689) x1118))) x1136) (=> (and x1297 (= 0 x1223)) x239))) (=> (and (= (= x1689 0) x210) x881) (and (=> (and (not x210) (and (= x1219 (= 1 x1689)) (or (and x1219 (= x317 3)) (and (not x1219) (= x1689 x317))))) x887) (=> (and x210 (= 2 x837)) x1486))))) (=> x1090 x664))) x800))
(assert (< 10000 (x1170 64 x1337 64)))
(assert (= x999 (and x996 x433)))
(assert (x1561 x1056))
(assert (= (=> (= x724 x282) x627) x1198))
(assert (x1678 (x52 x353)))
(assert (x1561 x1006))
(assert (x1561 x1541))
(assert (= x357 (or x428 x1712)))
(assert (= x1136 (=> (= x195 x1223) x239)))
(assert (= 64 (x1406 (x1170 64 x1598 52))))
(assert (x1561 x153))
(assert (x1561 x1007))
(assert (= (and x486 (not x1045)) x338))
(assert (= x662 (and x357 (not x385))))
(assert (= x281 (and x1368 x661)))
(assert (= (and (not x1219) x450) x1020))
(assert (= (and (=> (and x1045 (and (= x1580 (= x1187 0)) (= x1648 0))) (and (=> (and x1580 (= x182 x1222)) x1481) (=> (and (not x1580) (and (= (= x798 0) x565) (= (x1156 (- 0 x261)) x798))) (and (=> (and (and (< x681 x78) (= (x1170 64 x1187 52) x113) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1222) (= x753 x1237) (= (= 3 x1428) x336) (= (x1170 64 x1187 64) x471) x1656 (= 0 x1698) (>= 3 x529) (>= 4722366482869645213695 x461) (= 0 x594) (= x1656 (= x1101 x529)) (>= x1559 0) (= 0 x1073) (= x247 x1187) (= (not x110) x1123) (= (x1715 x1187) x1172) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1222) (<= x1559 1329227995784915872903807060280344575) (= (x1715 x1187) x1428) (<= x953 1329227995784915872903807060280344575) (= (x481 x1019) x1194) (= (x1715 x1187) x529) (= (= x1237 x1559) x566) (= x145 x1187) (= x1513 x1187) (< x1222 x681) (= (x345 x1187) x1559) (>= 3 x1172) (= x440 (= x1172 1)) (= (x43 x779) x461) (>= 340282366920938463463374607431768211455 x1194) (= (x1170 64 x1187 52) x1019) (= (x1318 x471) x66) (>= 1329227995784915872903807060280344575 x1237) x566 (= (x618 x1019) x953) (= (x1042 (+ x681 96)) x78) (>= 3 x1428) (= x456 (+ x461 x756)) (= x1101 (x613 x113)) (= (= 0 x1187) x110) (<= x1101 3) (= x681 (x1042 (+ x1222 96))) (or (<= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639743) (>= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x1222) (>= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639746))) (<= x66 4722366482869645213695) (or (>= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x1222) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x1222) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639746 x1222))) (= (div x261 10000000000) x756) (= x1137 x1187) (= x779 (x1170 64 x1187 64)) (= (and x415 x1123) x581) (or (>= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x1222) (and (<= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639746))) (<= x456 4722366482869645213695) (= x1187 x1195) (= x415 (or x440 x336)) (= (x618 x1019) x1237) (<= x261 47223664828696452136959999999999) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1222)) (not x565)) (and (=> (and (and (not x581) (= x1476 true)) (not x581)) x138) (=> x581 x1214))) (=> (and (= x1222 x182) x565) x1481))))) (=> (and (not x1045) (= x1649 x1222)) x1402)) x1587))
(assert (x144 (x682 x1598)))
(assert (= 0 (x1051 115792089237316195423570985008687907853269984665640564039457584007913129639841)))
(assert (x1561 x1553))
(assert (x1561 x66))
(assert (x1561 x828))
(assert (x1561 x116))
(assert (x1256 1461501637330902918203684832716283019655932542975))
(assert (= (x1051 (x1170 64 x822 64)) (x1170 64 x822 64)))
(assert (x144 (x1539 x1364)))
(assert (= (and x1303 x67) x1322))
(assert (x1561 x557))
(assert (= x917 (=> (and (= (not x228) x30) (= (= x1101 1) x561) (= x131 (and x1 x30)) (= (or x669 x561) x188) (= (= x57 1) x1234) (<= x57 255) (= x1187 x1545) (= x771 (and x131 x188)) (= x228 (= 3 x57)) (= x1108 x1101) (= x1 (not x1234)) (= x57 (x613 x1019)) (= (= x1101 3) x669)) (and (=> x771 x172) (=> (and (not x771) (and (= true x655) (not x771))) x31)))))
(assert (= x1011 (and x1321 x1144)))
(assert (= x450 (and (not x210) x1395)))
(assert (x1256 4722366482869645213695))
(assert (x1561 x724))
(assert (x1561 x1187))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1170 64 x1258 52)))
(assert (= x649 (or x1626 x793)))
(assert (= x1675 (and x1361 (not x1526))))
(assert (= x1354 (=> (and (= x846 x1389) (= (x1170 64 x1598 64) x659) (= (x1170 64 x1598 64) x801)) x937)))
(assert (x1678 (x782 x1187)))
(assert (= (or x175 x922) x290))
(assert (= x436 (and x1303 (not x67))))
(assert (= x1400 (=> (= x467 x1507) x1417)))
(assert (x1561 x551))
(assert (= x1364 (x907 (x1170 64 x1364 63))))
(assert (x1561 x163))
(assert (x1678 (x52 x1449)))
(assert (= 0 (x1051 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (x1561 x968))
(assert (= (or x722 x1470) x16))
(assert (= (and x836 x286) x119))
(assert (x1561 x1452))
(assert (= x1638 (=> (= x1544 x1507) x1417)))
(assert (= x388 (and x713 (not x1580))))
(assert (= x344 (=> (and (and (= x755 (ite x1174 0 x927)) (<= x473 3) (= x1149 (= x473 1)) (= x727 (or x608 (not x69))) (= x795 false) x727 (= (* x275 10000000000) x447) (= x105 false) (= x219 x536) (= x608 (= x381 x607)) (= x12 0) (= x473 (x238 x972)) (= false x90) (= (+ x557 x217) x607) (>= x927 0) (= x894 x972) (= (x373 x1161) x1046) (= x1161 x894) (= (x52 x353) x927) (= x202 (x1501 4)) (<= x927 1329227995784915872903807060280344575) (= x353 x894) (= (+ x755 x1046) x381) (= x1056 x202) (= x318 false) (= x219 (x1501 0)) (= x513 x894) (= (x238 x513) x1635) (= false x1508) (= x679 (= 3 x1635)) (= x217 x447) (<= x202 1461501637330902918203684832716283019655932542975) (= (or x679 x1149) x1174) (>= 3 x1635)) (and (= x562 x1364) (and (or (and (= x1449 0) x1617) (and (and (>= 1461501637330902918203684832716283019655932542975 x951) (>= x1246 0) (= x1364 x443) (= (= x951 x1246) x351) (>= 1461501637330902918203684832716283019655932542975 x1246) (= x1246 (x1630 x1364)) (= x951 x1449) (= x702 (x1170 64 x1364 62)) (= (x267 x702) x951) x351) (not x1617))) (and (= x504 224) (= x562 x1426) (= x1187 (ite (= x202 x1364) 0 x202)) (= x15 (x1170 64 x1364 64)) (= x1104 0) (>= 127 x430) (>= 127 x430) (= x1608 x1056) (= x752 x1364) x868 (>= x178 1) (= false x328) (= x369 1545185628) (= (= x1651 x88) x868) (= (x1170 64 x1364 64) x1482) (>= 4722366482869645213695 x1189) (<= x599 4722366482869645213695) (= (x238 x1364) x88) (= x178 (x589 x606)) (= x1189 (x645 x1482)) (= x599 (x1052 x15)) (<= x88 3) (= (x215 x676) x1651) (= (x1070 1 x1651) x563) (= (x612 x606) x519) (= x1142 x519) (= x1093 (x834 x1426)) (= (= x563 0) x1617) (<= x1651 3) (= (x1170 64 x1364 52) x676) (= false x1568))))) x803)))
(assert (= (x907 (x1170 64 x1449 52)) x1449))
(assert (= x1415 (=> (and (= x865 (x1170 64 x1364 64)) (= (x1170 64 x1364 64) x552)) x664)))
(assert (= x397 (and x1465 (not x334))))
(assert (= (and x640 x835) x1551))
(assert (x1561 x554))
(assert (x1561 x178))
(assert (x1561 x360))
(assert (= (and x713 x1580) x748))
(assert (x1561 x1037))
(assert (= x1547 (or x1567 x660)))
(assert (= (x907 (x1170 64 x1337 52)) x1337))
(assert (x1516 1))
(assert (= 0 (x1051 340282366920938463463374607431768211455)))
(assert (= x114 (and x1673 x581)))
(assert (= 0 (x1051 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (= x1379 (or x397 x509)))
(assert (= (=> (and (and (= false x1478) (<= x573 1329227995784915872903807060280344575) (= x582 10000000000) (>= x573 0) (= x573 (x62 x1364)) (= x1364 x1585) (= x1622 x572) (= x298 x1622) (= (x1644 x1622) x732) x472) (and (and (= x989 x1364) (<= x1275 1329227995784915872903807060280344575) (= x784 (x83 x736)) (= x1143 10000000000) (= x485 (* (div x573 10000000000) 10000000000)) (= x520 x736) (= (x62 x1364) x1275) (= false x820) (= (+ x732 x485) x170) (= x736 x745) (= x1270 10000000000) (<= 0 x1275)) (and (= x354 (- x784 x1634)) (= (* (div x1275 10000000000) 10000000000) x1634) (= x104 10000000000)))) x800) x970))
(assert (= (x1406 (x1170 64 x1364 52)) 64))
(assert (= x1286 (and x1202 (not x1297))))
(assert (= (and x1404 x1390) x1097))
(assert (x1561 x932))
(assert (x1561 x1066))
(assert (= (=> (and (= x1653 (= 3 x377)) (= (= x186 2) x1283) (= (= x186 3) x1523) (= (not x1283) x976) (= x1636 (not x1523)) (= (= 2 x377) x460) (= x1542 (and x1001 x91)) (= (or x460 x1653) x1001) (= x91 (and x976 x1636))) (and (=> (and (not x1542) (and (= x605 true) (not x1542))) x1415) (=> x1542 x1386))) x1197))
(assert (= 64 (x1406 (x1170 64 x822 52))))
(assert (= (x1406 (x1170 64 x1364 64)) 64))
(assert (= x239 (=> (= x377 x1223) x666)))
(assert (x1678 (x1269 x822)))
(assert (x1561 x633))
(assert (=> (>= 10000 x1449) (= 0 (x1051 x1449))))
(assert (x1561 x1654))
(assert (x333 x1651))
(assert (x1561 x599))
(assert (x1561 x504))
(assert (= (and x1376 x399) x1038))
(assert (= (and x55 x792) x1557))
(assert (< (x1170 64 x1187 52) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1561 x1697))
(assert (= (=> (= x1389 x488) x729) x937))
(assert (= x22 (or x1414 x1184)))
(assert (= (=> (= x81 x466) x783) x533))
(assert (x1561 x846))
(assert (= x1598 (x907 (x1170 64 x1598 52))))
(assert (= 0 (x1051 4722366482869645213695)))
(assert (x1561 x1293))
(assert (x1561 x998))
(assert (x1561 x3))
(assert (=> (>= 10000 x606) (= (x1051 x606) 0)))
(assert (= (or x115 x1060) x1151))
(assert (= x559 (=> (and (= x549 (not x419)) (= x609 (= x1562 2)) (= (or x1620 x609) x1315) (<= x889 3) (>= 3 x1562) (= 0 x295) (= x1364 x341) (= x889 (x1565 x1364)) (= x1364 x448) (= (= 0 x1364) x419) (= (x1565 x1364) x1562) (= (and x1315 x549) x1208) (= x1620 (= x889 3))) (and (=> (and (not x1208) (and (= x1657 true) (not x1208))) x300) (=> x1208 x585)))))
(assert (x1561 x1401))
(assert (not (x1256 (x1170 64 x1364 63))))
(assert (= x428 (and x931 x1547)))
(assert (= x713 (and x1393 x1045)))
(assert (x1561 x684))
(assert (= x1517 (and x1711 (not x577))))
(assert (< 10000 (x1170 64 x1187 64)))
(assert (= (or x378 x1190) x810))
(assert (= (or x852 x278 x1186) x359))
(assert (x1561 x217))
(assert (> (x1170 64 x1258 64) 10000))
(assert (= (x1051 1000000000000000000000000000) 0))
(assert (= 1000000000000000000000000000 x1497))
(assert (= x1390 (and (not x884) x151)))
(assert (= (and x388 x565) x716))
(assert (x1561 x430))
(assert (x1561 x1546))
(assert (x333 x1296))
(assert (= x1593 (=> (and (and (= x493 (+ x405 x1614)) (= 10000000000 x1022) (= x405 (* 10000000000 (div x1209 10000000000)))) (and (= x1124 x1364) (= 10000000000 x1420) (>= 1461501637330902918203684832716283019655932542975 x523) x1321 (<= 0 x523) (= (x728 x1364) x850) (<= 0 x850) (= x1209 (x432 x1364)) (= x1176 false) (= (x728 x1364) x523) (<= x1209 1329227995784915872903807060280344575) (= x1364 x1114) (= x1614 (x946 x850)) (>= 1461501637330902918203684832716283019655932542975 x850) (<= 0 x1209) (= x1364 x548))) x610)))
(assert (= (x1170 64 x1187 52) (x1051 (x1170 64 x1187 52))))
(assert (x1561 x1337))
(assert (= (=> (and (and (= x512 (x682 x1598)) (= x464 x1598) (>= 1461501637330902918203684832716283019655932542975 x512) (>= x512 0) (= x1191 (x682 x1598)) (= 10000000000 x1282) (= (x1229 x1191) x1095) (= x70 x1598) (>= x1191 0) (= x1399 false) (<= x1191 1461501637330902918203684832716283019655932542975) x1526) (and (and (= x977 10000000000) (= x812 false) (= x1403 (* 10000000000 (div x1326 10000000000))) (= (+ x1403 x1095) x588) (= x1147 10000000000)) (and (= x705 (* 10000000000 (div x944 10000000000))) (= (- x588 x705) x652) (= 10000000000 x687)))) x1063) x1652))
(assert (x1561 x1487))
(assert (x1678 (x1269 x1277)))
(assert (= (and (not x1527) x139) x1470))
(assert (x1561 x1108))
(assert (= x840 x664))
(assert (= x33 (or x1038 x624)))
(assert (= (=> (= x1544 x1503) x1638) x465))
(assert (x1561 x541))
(assert (= x259 (and x1219 x450)))
(assert (x1256 4294967295))
(assert (= (x907 (x1170 64 x1187 52)) x1187))
(assert (x1561 x790))
(assert (x1561 x193))
(assert (x1561 x220))
(assert (= (=> (and (and (and (= (+ x593 x515) x1511) (= (* (div x1080 10000000000) 10000000000) x593) (= 10000000000 x1365) (= x71 false) (= 10000000000 x241)) (and (= x671 (* (div x265 10000000000) 10000000000)) (= 10000000000 x154) (= (- x1511 x671) x696))) (and (= false x490) (= x1061 (x682 x1364)) x385 (>= 1461501637330902918203684832716283019655932542975 x866) (= (x682 x1364) x866) (= x1364 x50) (= x1364 x451) (= (x1089 x1061) x515) (= 10000000000 x762) (>= x866 0) (>= 1461501637330902918203684832716283019655932542975 x1061) (>= x1061 0))) x117) x1057))
(assert (x1561 x36))
(assert (x1561 x1205))
(assert (= (x1406 (x1170 64 x1449 52)) 64))
(assert (x1561 x528))
(assert (= (=> (and (= x904 (or x805 x1436)) (= x1436 (= 1 x1345)) (= (and x296 x904) x1178) (= (= 1 x1452) x462) (= x1345 x959) (= (not x102) x909) (= x1065 x1598) (= (= x1345 3) x805) (= (= x1452 3) x102) (>= 255 x1452) (= x296 (and x909 x1606)) (= (x543 x1605) x1452) (= (not x462) x1606)) (and (=> x1178 x597) (=> (and (and (= x912 true) (not x1178)) (not x1178)) x1380))) x1063))
(assert (= (and (not x1542) x463) x389))
(assert (= x1047 (and x13 x771)))
(assert (= (x1051 1461501637330902918203684832716283019655932542975) 0))
(assert (= (and x1292 x1151) x313))
(assert (x1561 x611))
(assert (= (=> (and (and (or (and (= x557 0) (not x289)) (and x289 (and (>= 1329227995784915872903807060280344575 x401) (= (= x401 x769) x1601) (= x192 (x1170 64 x1258 52)) (= (x52 x1258) x401) (<= x769 1329227995784915872903807060280344575) x1601 (>= x401 0) (= x769 (x1378 x192)) (= x841 x514) (= x557 x769)))) (and x1706 (= x1691 (x1070 1 x1401)) (>= 127 x790) (<= 1 x971) (= x1360 false) (= x1401 (x215 x1685)) (= (x1052 x1330) x275) (= x841 x1258) (= x1349 (x1170 64 x1258 64)) (>= 127 x790) (>= 4722366482869645213695 x1697) (= x971 (x589 x606)) (= false x406) (= 0 x1016) (<= x1401 3) (= x1330 (x1170 64 x1258 64)) (= x929 0) (= x1258 x7) (= x1697 (x645 x1349)) (= x289 (= x1691 0)) (= x1506 3002343453) (>= 4722366482869645213695 x275) (= x270 (x238 x1258)) (= x947 x841) (= 224 x1607) (= (x1170 64 x1258 52) x1685) (<= x270 3) (= x1706 (= x270 x1401)))) (and (<= 1 x606) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1267) (>= 1461501637330902918203684832716283019655932542975 x606) (>= x521 1) (>= x562 0) (<= 0 x229) (<= x575 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x503 x521) (= false x526) x741 (= x367 (< 0 (x589 x503))) (<= x584 4294967295) (<= x908 57896044618658097711785492504343953926634992332820282019728792003956564819967) x367 (>= x908 36) (>= 1461501637330902918203684832716283019655932542975 x758) (>= 1461501637330902918203684832716283019655932542975 x146) (<= x936 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x503) (= x894 x7) (= x606 x656) (<= 0 x584) (>= 1461501637330902918203684832716283019655932542975 x656) (= 1545185628 x206) (<= x153 1461501637330902918203684832716283019655932542975) (<= 1 x503) (= x606 x1328) (<= x1512 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x503 x606)) (<= 0 x1512) (not (= x503 x153)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x685) (<= 0 x244) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1188) (= (> (x589 x153) 0) x1370) x1370 (>= x1188 0) (<= 0 x894) (<= 0 x575) (= false x1493) (>= x1267 0) (= x1575 (= x711 0)) (<= x562 1461501637330902918203684832716283019655932542975) (>= x297 0) (>= 1461501637330902918203684832716283019655932542975 x1007) (= x1484 false) (not (= x153 x606)) (= x954 1) (<= x894 1461501637330902918203684832716283019655932542975) (<= 0 x146) (= x130 0) (<= 0 x1695) (= x894 x711) (>= 1461501637330902918203684832716283019655932542975 x521) (<= 1 x1007) (>= x153 1) (<= x297 1461501637330902918203684832716283019655932542975) (= x503 x1007) x1276 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1695) (<= 0 x685) (= x69 (not x1575)) (>= 1461501637330902918203684832716283019655932542975 x244) (= 0 x1244) (= x489 x1276) (= (> (x589 x606) 0) x741) (<= 1 x656) (= 68 x1205) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x229) (= x1183 false))) x344) x1590))
(assert (= x245 (or x1322 x436)))
(assert (x1561 x461))
(assert (x1561 x294))
(assert (x1561 x1705))
(assert (x1561 x1364))
(assert (x1561 x536))
(assert (x1561 x1326))
(assert (= x1586 (=> (and (= (x1170 64 x1187 64) x302) (= x78 x182) (= x482 (x1170 64 x1187 64))) x1481)))
(assert (= x1598 (x907 (x1170 64 x1598 64))))
(assert (x1561 x1374))
(assert (x1561 x1189))
(assert (x1678 (x432 x1364)))
(assert (= (and x210 x1395) x152))
(assert (= (or x945 x281 x1667) x212))
(assert (= (=> (and (= x894 x567) (= (x1269 x1277) x1154) (= (x1131 x663) x761) (= (= x205 1) x1533) (= false x1291) (= x226 (= x1464 x3)) (= (* x826 10000000000) x420) (= x894 x663) (>= 3 x761) (= (= x761 3) x735) (= x99 (or (not x384) x226)) (= (x1131 x355) x205) (= x420 x193) (= false x184) (<= x1154 1329227995784915872903807060280344575) (>= 3 x205) (= x1383 (x251 x567)) (>= x1154 0) (= x1277 x894) (= x1464 (+ x1383 x827)) (= false x1677) (= x3 (+ x1488 x193)) (= 0 x1473) (= false x167) (= x93 (or x735 x1533)) (= x894 x355) (= (ite x93 0 x1154) x827)) x99) x327))
(assert (x1678 (x1182 x1364)))
(assert (x1561 x1649))
(assert (= 52 (x854 (x1170 64 x1187 52))))
(assert (x1561 x379))
(assert (= (x907 (x1170 64 x822 52)) x822))
(assert (x1561 x96))
(assert (= x1002 (and x570 x1208)))
(assert (= (x854 (x1170 64 x1449 64)) 64))
(assert (x1561 x377))
(assert (= x1684 (=> (and (= (= x1362 2) x449) (= x1044 (and x1433 x918)) (= x1248 (or x148 x80)) (= (= 3 x993) x148) (= (not x449) x918) (= x410 (and x1248 x1044)) (= x80 (= 2 x993)) (= (= x1362 3) x441) (= x1433 (not x441))) (and (=> (and (and (= x1040 true) (not x410)) (not x410)) x1410) (=> x410 x387)))))
(assert (x1256 340282366920938463463374607431768211455))
(assert (= x803 (=> (and (= (> x98 0) x555) (= x98 (x1156 (- x1187 x1449)))) (and (=> (and x555 (and (= x1045 (not (= 0 x1187))) (>= x1352 0) (>= 1329227995784915872903807060280344575 x261) x320 (= x1364 x1294) (= x442 (not (= 0 x1449))) (= x1352 (x52 x1364)) (= x320 (= x1352 x261)) (<= x1352 1329227995784915872903807060280344575) (= x1483 (x1170 64 x1364 52)) (= x261 (x1378 x1483)))) (and (=> (and (and (= 0 x412) (= x661 (= x1449 0))) x442) (and (=> (and (= x403 320) x661) x886) (=> (and (not x661) (= x653 (= 0 x261))) (and (=> (and (and (<= x1220 1329227995784915872903807060280344575) (= (x238 x1449) x710) (= (= 3 x1348) x438) (<= x1453 4722366482869645213695) (= (and x293 x1000) x836) (= x1453 (x645 x1029)) (<= x1348 3) (= (= x643 x1439) x994) (= x1220 (x52 x1449)) x994 (= x637 x1449) (= x643 (x238 x1449)) (= x828 0) (>= 47223664828696452136959999999999 x261) (>= 1329227995784915872903807060280344575 x495) (= 416 x1201) (<= x1439 3) (= x1000 (not x1451)) (<= x96 4722366482869645213695) (= (x1170 64 x1449 64) x1029) (= x1522 x1449) (>= x1220 0) (= x1398 (x1170 64 x1449 52)) (= (x215 x1398) x1439) (>= 1329227995784915872903807060280344575 x528) (= x622 x1449) (<= x360 4722366482869645213695) (= x1094 x528) (= x528 (x1378 x1355)) (= x360 (x1156 (- x96 x1642))) (>= 340282366920938463463374607431768211455 x1199) (= (x568 x1355) x1199) (= x1702 x1449) (= (= x1220 x528) x1475) (<= x710 3) (= 0 x179) (= x651 (x1170 64 x1449 64)) (= (div x261 10000000000) x1642) (= (= 0 x1449) x1451) (>= 3 x643) (= x96 (x1052 x651)) (= (= x710 1) x1004) (= (x1170 64 x1449 52) x1355) (= x1348 (x238 x1449)) (= (or x438 x1004) x293) (= x32 0) (= x1449 x424) x1475 (= (x1378 x1355) x495)) (not x653)) (and (=> x836 x307) (=> (and (and (not x836) (= x1173 true)) (not x836)) x1107))) (=> (and (= 320 x403) x653) x886))))) (=> (and (= 320 x1222) (not x442)) x1587))) (=> (and (not x555) (= x724 320)) x627)))))
(assert (x1561 x494))
(assert (= (and x410 x16) x1190))
(assert (= x94 (and x433 (not x996))))
(assert (= x1594 (or x389 x356)))
(assert (= x1481 (=> (= x182 x1649) x1402)))
(assert (= x1611 (=> (and (and (and (= x1455 10000000000) (= x926 10000000000) (= x556 (* 10000000000 (div x528 10000000000))) (= x123 (+ x498 x556)) (= x544 false)) (and (= x592 (* 10000000000 (div x495 10000000000))) (= (- x123 x592) x843) (= 10000000000 x853))) (and (= x1320 10000000000) (>= 1461501637330902918203684832716283019655932542975 x326) (= (x682 x1449) x326) (= (x682 x1449) x720) (<= x720 1461501637330902918203684832716283019655932542975) (<= 0 x720) (= x1449 x478) (= (x899 x720) x498) (= x1449 x1053) (= x857 false) x1023 (>= x326 0))) x365)))
(assert (= (and x225 (not x1462)) x140))
(assert (< (x1170 64 x822 52) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1561 x266))
(assert (= x73 (=> (and (and (and (= x322 (* (div x953 10000000000) 10000000000)) (= x569 10000000000) (= (- x185 x322) x409)) (and (= x1384 10000000000) (= x268 false) (= 10000000000 x631) (= x1148 (* 10000000000 (div x1237 10000000000))) (= x185 (+ x964 x1148)))) (and (= 10000000000 x639) (= x964 (x787 x54)) (>= x54 0) (>= 1461501637330902918203684832716283019655932542975 x54) (= x1187 x4) x864 (= x1084 false) (= x1273 (x682 x1187)) (<= 0 x1273) (= x1688 x1187) (= x54 (x682 x1187)) (>= 1461501637330902918203684832716283019655932542975 x1273))) x917)))
(assert (x1561 x606))
(assert (x1561 x1265))
(assert (x1561 x764))
(assert (= x112 (and x1664 (not x864))))
(assert (x1561 x579))
(assert (= x1417 (=> (and (>= 3 x1541) (>= x1343 0) (= x1343 (x1612 x1364)) (= x1364 x459) (= x1693 (= 0 x1364)) (>= 3 x1265) (= x375 (x1170 64 x1364 52)) (>= 1329227995784915872903807060280344575 x1343) (= x1364 x842) x1227 (= x1364 x325) (<= x1080 1329227995784915872903807060280344575) (= x1080 x1218) (= (= x1080 x1343) x1227) (= x931 (and x483 x1139)) (= x181 (= x1541 3)) (= (not x1693) x483) (>= 1329227995784915872903807060280344575 x265) (= x1364 x1092) (= x1541 (x749 x1364)) (= x1080 (x416 x375)) (= (x416 x375) x265) (= (or x413 x181) x1139) (= x1265 (x749 x1364)) (= x413 (= 1 x1265)) (= x243 (x1703 x375)) (>= 340282366920938463463374607431768211455 x243) (= x477 0)) (and (=> (and (not x931) (and (= true x1496) (not x931))) x943) (=> x931 x694)))))
(assert (= (and x1178 x938) x1621))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1170 64 x1449 64)))
(assert (= (or x789 x1204) x570))
(assert (x1561 x20))
(assert (x1561 x371))
(assert (= (and (not x1023) x693) x316))
(assert (= (x854 (x1170 64 x1364 62)) 62))
(assert (not (x1256 (x1170 64 x1337 52))))
(assert (= (=> (and (= (not x1105) x1232) (= (= 2 x541) x469) (= x1643 (= 3 x1439)) (= (and x1232 x1701) x161) (= (and x161 x590) x1615) (= x590 (or x1643 x280)) (= x280 (= x1439 2)) (= (= x541 3) x1105) (= x1701 (not x469))) (and (=> (and (and (= x1529 true) (not x1615)) (not x1615)) x1127) (=> x1615 x598))) x1548))
(assert (x1561 x1298))
(assert (= (and (not x1376) x399) x624))
(assert (= (and x286 (not x836)) x1162))
(assert (= (x1051 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (= (x1170 64 x1258 52) (x1051 (x1170 64 x1258 52))))
(assert (= (=> (and (and (and (= x457 (+ x1145 x966)) (= x479 10000000000) (= false x1445) (= (* 10000000000 (div x528 10000000000)) x966) (= x1008 10000000000)) (and (= x1050 (* 10000000000 (div x495 10000000000))) (= x672 (- x457 x1050)) (= x165 10000000000))) (and (= false x1206) (>= 1461501637330902918203684832716283019655932542975 x1249) (= x1064 (x1630 x1449)) (<= 0 x1064) (= 10000000000 x218) (= x1145 (x373 x1064)) (= (x1630 x1449) x1249) (>= 1461501637330902918203684832716283019655932542975 x1064) (= x158 x1449) (= x1091 x1449) x836 (>= x1249 0))) x1107) x307))
(assert (x1561 x243))
(assert (=> (<= x1364 10000) (= 0 (x1051 x1364))))
(assert (x1561 x1608))
(assert (x1561 x837))
(assert (x1561 x929))
(assert (x1561 x467))
(assert (x1561 x756))
(assert (x1561 x1345))
(assert (= (and (not x653) x730) x286))
(assert (x1561 x1598))
(assert (= 0 (x1051 115792089237316195423570985008687907853269984665640564039457584007913129639746)))
(assert (x1561 x484))
(assert (= x1414 (and x1617 x813)))
(assert (= (and x1311 (not x527)) x1271))
(assert (= x992 (and x1297 x1202)))
(assert (x1561 x81))
(assert (= x1386 (=> (and (and (<= 0 x647) (<= x955 1461501637330902918203684832716283019655932542975) x1542 (>= 1329227995784915872903807060280344575 x647) (= x222 x1364) (= x625 x1364) (= (x1539 x1364) x407) (= false x1382) (<= 0 x407) (= (x335 x407) x236) (<= x407 1461501637330902918203684832716283019655932542975) (= x1589 10000000000) (>= x955 0) (= (x1539 x1364) x955) (= x647 (x1182 x1364)) (= x1509 x1364)) (and (= x534 (+ x236 x665)) (= 10000000000 x209) (= (* 10000000000 (div x647 10000000000)) x665))) x1415)))
(assert (=> (>= 10000 x1598) (= (x1051 x1598) 0)))
(assert (= (and x806 x1379) x79))
(assert (= (=> (= x403 x1222) x1587) x886))
(assert (= x211 (and (not x1090) x402)))
(assert (< 10000 (x1170 64 x1598 64)))
(assert (x1256 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (= x793 (and (not x1086) x768)))
(assert (= x597 (=> (and (and (= (x984 x1598) x1221) (= 10000000000 x1260) x1178 (<= x1221 1329227995784915872903807060280344575) (= x1598 x700) (<= x235 1461501637330902918203684832716283019655932542975) (= x1682 x1598) (= false x1290) (= (x1043 x1598) x418) (= x235 (x1043 x1598)) (<= x418 1461501637330902918203684832716283019655932542975) (>= x418 0) (= x1563 (x1588 x418)) (= x1598 x329) (>= x235 0) (>= x1221 0)) (and (= x274 (+ x453 x1563)) (= x501 10000000000) (= x453 (* 10000000000 (div x1221 10000000000))))) x1380)))
(assert (= 0 (x1051 10000000000)))
(assert (= x486 (and (not x806) x1379)))
(assert (= x1120 (and x225 x1462)))
(assert (= (x854 (x1170 64 x1337 52)) 52))
(assert (x1561 x703))
(assert (= (x1051 (x1170 64 x1598 64)) (x1170 64 x1598 64)))
(assert (= (and (not x661) x1368) x730))
(assert (= x1258 (x907 (x1170 64 x1258 52))))
(assert (= x1364 (x907 (x1170 64 x1364 64))))
(assert (= (and x1151 (not x1292)) x164))
(assert (x1561 x826))
(assert (x1561 x475))
(assert (< 10000 (x1170 64 x1449 52)))
(assert (x1561 x282))
(assert (x1561 x1201))
(assert (x1561 x118))
(assert (= x1364 (x907 (x1170 64 x1364 62))))
(assert (x1561 x875))
(assert (x1561 x825))
(assert (= 0 (x1051 3002343453)))
(assert (= (and x22 (not x555)) x1060))
(assert (x1256 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x1170 64 x1187 64) (x1051 (x1170 64 x1187 64))))
(assert (x1561 x202))
(assert (x1561 x1622))
(assert (= x26 (and x1090 x402)))
(assert (x1561 x681))
(assert (x1561 x1691))
(assert (x1561 x1274))
(assert (x1561 x636))
(assert (= x938 (or x674 x1675)))
(assert (= (or x164 x313) x1311))
(assert (= x943 (=> (and (= (= x1128 3) x650) (= x1552 (= 2 x932)) (= x1364 x808) (= x385 (and x168 x678)) (>= 3 x932) (= 0 x750) (= x778 (= 0 x1364)) (= x1566 x1364) (= x678 (not x778)) (= (x749 x1364) x932) (>= 3 x1128) (= x1128 (x749 x1364)) (= x168 (or x1552 x650))) (and (=> x385 x1057) (=> (and (not x385) (and (= x309 true) (not x385))) x117)))))
(assert (x1561 x1104))
(assert (x1561 x391))
(assert (x1561 x78))
(assert (< 10000 (x1170 64 x1364 62)))
(assert (= x1465 (or x1413 x1134)))
(assert (> (x1170 64 x822 52) 10000))
(assert (= (x854 (x1170 64 x1364 64)) 64))
(assert (x1561 x270))
(assert (= x1186 (or x140 x1120)))
(assert (x1256 115792089237316195423570985008687907853269984665640564039457584007913129639746))
(assert (= (and (not x442) x1112) x1641))
(assert (=> (>= 10000 x1258) (= 0 (x1051 x1258))))
(assert (x144 (x1043 x1598)))
(assert (= x1134 (and (not x1045) x1393)))
(assert (x1561 x1172))
(assert (x1561 x1428))
(assert (x1256 47223664828696452136959999999999))
(assert (x1561 x1607))
(assert (= (=> (and (= x1337 x1596) (= x640 (and x1504 x1304)) (= x14 0) (= (x1510 x1337) x611) (= x1337 x122) (= x1504 (or x957 x497)) (= x497 (= 2 x611)) (= x958 (= 0 x1337)) (>= 3 x611) (= x294 (x1510 x1337)) (= x957 (= x294 3)) (= (not x958) x1304) (>= 3 x294)) (and (=> (and (and (not x640) (= x915 true)) (not x640)) x1530) (=> x640 x956))) x982))
(assert (x1561 x1362))
(assert (= (or x359 x1126) x1372))
(assert (= (and (not x619) x963) x777))
(assert (x1561 x1562))
(assert (= (=> (and (= (not x1336) x1416) (= x496 (and x1129 x1416)) (= x1033 (= x1345 3)) (= x1129 (not x690)) (= x42 (or x1033 x767)) (= (= 2 x1452) x1336) (= (= 3 x1452) x690) (= (= 2 x1345) x767) (= (and x496 x42) x1462)) (and (=> (and (not x1462) (and (not x1462) (= x1164 true))) x1354) (=> x1462 x965))) x1380))
(assert (= (and x472 x44) x372))
(assert (= 0 (x1051 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (< 10000 (x1170 64 x1364 52)))
(assert (x1561 x1223))
(assert (= 0 (x1051 115792089237316195423570985008687907853269984665640564039457584007913129639838)))
(assert (= x278 (and x1592 x1332)))
(assert (= (=> (and (= x1507 x986) (= x1714 (= x1507 1)) (= (and x1351 x1054) x1321) (= (and x58 x1236) x1054) (= x1351 (or x1226 x1714)) (= (= x510 3) x1344) (= (= x510 1) x628) (= x1236 (not x1344)) (= (= x1507 3) x1226) (= (x872 x375) x510) (= x58 (not x628)) (<= x510 255) (= x781 x1364)) (and (=> (and (not x1321) (and (= x638 true) (not x1321))) x610) (=> x1321 x1593))) x117))
(assert (= (=> (and (= (or x1367 x174) x1650) (= x234 (not x797)) (= x157 (= 3 x510)) (= (= x510 2) x797) (= (not x157) x319) (= (= 2 x1507) x1367) (= (and x319 x234) x962) (= x174 (= 3 x1507)) (= x1376 (and x962 x1650))) (and (=> x1376 x311) (=> (and (and (not x1376) (= x431 true)) (not x1376)) x1708))) x610))
(assert (= 64 (x1406 (x1170 64 x1337 52))))
(assert (x1561 x1440))
(assert (= (x854 (x1170 64 x1258 52)) 52))
(assert (x144 (x682 x1364)))
(assert (x1561 x1142))
(assert (= x1524 (and x44 (not x472))))
(assert (x1678 (x46 x1449)))
(assert (= (and x1572 (not x291)) x1303))
(assert (= (and x649 x1615) x279))
(assert (= x1255 (and x649 (not x1615))))
(assert (= (and x884 x151) x1266))
(assert (= (x1051 (x1170 64 x1449 64)) (x1170 64 x1449 64)))
(assert (x1561 x944))
(assert (= 64 (x1406 (x1170 64 x1364 62))))
(assert (x1561 x179))
(assert (x1561 x1200))
(assert (x1561 x1492))
(assert (= (=> (and (= 512 x403) (= x578 (x1170 64 x1449 64)) (= x892 (x1170 64 x1449 64))) x886) x1127))
(assert (x1561 x159))
(assert (= x1364 (x907 (x1170 64 x1364 52))))
(check-sat)
(exit)
