(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x5318 () Int)
(declare-fun x5168 () Bool)
(declare-fun x5279 () Int)
(declare-fun x2743 () Int)
(declare-fun x3181 () Int)
(declare-fun x1120 () Int)
(declare-fun x889 () Int)
(declare-fun x2627 () Int)
(declare-fun x4619 () Int)
(declare-fun x3743 () Int)
(declare-fun x1139 () Bool)
(declare-fun x4374 () Int)
(declare-fun x2903 () Int)
(declare-fun x134 () Bool)
(declare-fun x5019 () Bool)
(declare-fun x5519 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x4844 () Int)
(declare-fun x4161 () Bool)
(declare-fun x3958 () Int)
(declare-fun x2287 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x3034 () Bool)
(declare-fun x5344 () Bool)
(declare-fun x2221 () Int)
(declare-fun x1520 () Int)
(declare-fun x5631 () Int)
(declare-fun x3907 () Int)
(declare-fun x3557 () Int)
(declare-fun x4807 () Bool)
(declare-fun x2939 (Int) Int)
(declare-fun x1956 () Int)
(declare-fun x1497 () Bool)
(declare-fun x635 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x776 (Int) Int)
(declare-fun x3915 () Bool)
(declare-fun x4573 () Int)
(declare-fun x5644 () Int)
(declare-fun x310 () Bool)
(declare-fun x1886 () Int)
(declare-fun x4979 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x5452 () Int)
(declare-fun x3271 () Int)
(declare-fun x3481 () Int)
(declare-fun x3641 () Int)
(declare-fun x607 () Int)
(declare-fun x3236 () Int)
(declare-fun x2579 () Int)
(declare-fun x5497 () Bool)
(declare-fun x3836 () Int)
(declare-fun x3376 () Bool)
(declare-fun x619 () Bool)
(declare-fun x3339 () Bool)
(declare-fun x3419 () Int)
(declare-fun x4961 () Int)
(declare-fun x3600 () Int)
(declare-fun x3385 () Int)
(declare-fun x752 () Int)
(declare-fun x2167 () Int)
(declare-fun x3913 () Int)
(declare-fun x3507 () Bool)
(declare-fun x2640 () Int)
(declare-fun x3720 () Int)
(declare-fun x2233 () Int)
(declare-fun x1978 () Int)
(declare-fun x3598 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x5249 () Int)
(declare-fun x1496 () Int)
(declare-fun x4370 () Int)
(declare-fun x3798 () Int)
(declare-fun x1823 () Int)
(declare-fun x1088 () Bool)
(declare-fun x2548 () Bool)
(declare-fun x4711 () Bool)
(declare-fun x3283 () Int)
(declare-fun x3834 () Int)
(declare-fun x2135 () Int)
(declare-fun x2577 () Int)
(declare-fun x2127 () Int)
(declare-fun x1843 () Int)
(declare-fun x1287 () Int)
(declare-fun x716 () Int)
(declare-fun x3819 () Int)
(declare-fun x1095 () Int)
(declare-fun x3567 () Bool)
(declare-fun x3609 () Int)
(declare-fun x1602 () Int)
(declare-fun x2608 () Int)
(declare-fun x5576 () Int)
(declare-fun x5278 () Int)
(declare-fun x5102 () Int)
(declare-fun x5322 () Bool)
(declare-fun x4065 () Int)
(declare-fun x2462 () Int)
(declare-fun x672 () Int)
(declare-fun x160 () Int)
(declare-fun x3823 () Int)
(declare-fun x5050 () Int)
(declare-fun x4694 () Int)
(declare-fun x3749 () Int)
(declare-fun x2126 () Int)
(declare-fun x2547 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x3187 () Int)
(declare-fun x1838 () Bool)
(declare-fun x5254 () Int)
(declare-fun x3705 () Int)
(declare-fun x3883 () Int)
(declare-fun x1050 () Bool)
(declare-fun x3164 () Int)
(declare-fun x2480 () Int)
(declare-fun x4007 () Int)
(declare-fun x1374 () Int)
(declare-fun x2551 () Bool)
(declare-fun x3678 (Int) Int)
(declare-fun x5308 () Int)
(declare-fun x3895 () Int)
(declare-fun x2911 () Int)
(declare-fun x2073 () Int)
(declare-fun x4906 () Bool)
(declare-fun x4901 () Int)
(declare-fun x1653 () Bool)
(declare-fun x1268 () Int)
(declare-fun x2681 () Int)
(declare-fun x2897 () Bool)
(declare-fun x5133 () Bool)
(declare-fun x4699 () Int)
(declare-fun x4569 () Int)
(declare-fun x615 () Int)
(declare-fun x188 () Int)
(declare-fun x4780 () Int)
(declare-fun x2737 () Bool)
(declare-fun x5402 () Int)
(declare-fun x4610 () Int)
(declare-fun x3153 () Int)
(declare-fun x3457 () Bool)
(declare-fun x427 () Int)
(declare-fun x31 () Int)
(declare-fun x958 () Bool)
(declare-fun x3613 () Int)
(declare-fun x1599 () Bool)
(declare-fun x4424 () Bool)
(declare-fun x1596 () Int)
(declare-fun x4110 () Bool)
(declare-fun x1510 () Int)
(declare-fun x1802 () Int)
(declare-fun x5304 () Bool)
(declare-fun x1668 () Int)
(declare-fun x2313 () Int)
(declare-fun x1205 () Int)
(declare-fun x3778 () Bool)
(declare-fun x4443 () Int)
(declare-fun x1029 () Int)
(declare-fun x1777 () Bool)
(declare-fun x1083 () Int)
(declare-fun x2490 () Bool)
(declare-fun x436 () Int)
(declare-fun x1545 () Int)
(declare-fun x2525 () Int)
(declare-fun x1673 () Int)
(declare-fun x3216 () Bool)
(declare-fun x791 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x4720 (Int) Int)
(declare-fun x455 () Int)
(declare-fun x4552 () Bool)
(declare-fun x4856 () Int)
(declare-fun x2422 () Int)
(declare-fun x1199 () Int)
(declare-fun x5501 () Int)
(declare-fun x740 () Bool)
(declare-fun x3962 () Int)
(declare-fun x5556 () Bool)
(declare-fun x3020 () Int)
(declare-fun x4171 () Int)
(declare-fun x2993 () Int)
(declare-fun x625 () Bool)
(declare-fun x519 () Int)
(declare-fun x835 () Bool)
(declare-fun x4599 () Int)
(declare-fun x3732 () Bool)
(declare-fun x3855 () Int)
(declare-fun x2570 () Int)
(declare-fun x2719 (Int) Int)
(declare-fun x2713 () Bool)
(declare-fun x4855 (Int) Int)
(declare-fun x366 () Int)
(declare-fun x3245 () Int)
(declare-fun x1483 () Bool)
(declare-fun x1479 () Int)
(declare-fun x2062 () Bool)
(declare-fun x33 () Int)
(declare-fun x5131 () Int)
(declare-fun x2348 () Int)
(declare-fun x255 () Bool)
(declare-fun x997 () Bool)
(declare-fun x1992 () Int)
(declare-fun x4886 () Int)
(declare-fun x2642 () Bool)
(declare-fun x1462 () Int)
(declare-fun x5429 () Int)
(declare-fun x497 () Bool)
(declare-fun x806 () Int)
(declare-fun x116 () Int)
(declare-fun x1984 () Int)
(declare-fun x3054 () Int)
(declare-fun x3249 () Int)
(declare-fun x2866 () Bool)
(declare-fun x908 () Bool)
(declare-fun x211 () Int)
(declare-fun x1289 () Int)
(declare-fun x3433 () Int)
(declare-fun x5470 () Int)
(declare-fun x1286 () Int)
(declare-fun x4313 () Int)
(declare-fun x652 () Int)
(declare-fun x2088 () Bool)
(declare-fun x2014 (Int) Int)
(declare-fun x1215 () Int)
(declare-fun x618 () Bool)
(declare-fun x5326 () Bool)
(declare-fun x1922 () Int)
(declare-fun x2129 () Int)
(declare-fun x2740 () Int)
(declare-fun x3080 () Int)
(declare-fun x3917 () Int)
(declare-fun x2257 () Int)
(declare-fun x3179 () Int)
(declare-fun x1959 () Int)
(declare-fun x5384 () Bool)
(declare-fun x1007 () Int)
(declare-fun x5548 () Int)
(declare-fun x2605 () Int)
(declare-fun x4914 () Bool)
(declare-fun x2735 () Int)
(declare-fun x4907 () Int)
(declare-fun x794 () Int)
(declare-fun x4251 () Int)
(declare-fun x4026 () Int)
(declare-fun x3551 () Int)
(declare-fun x2425 () Int)
(declare-fun x861 () Int)
(declare-fun x894 (Int) Int)
(declare-fun x4994 () Bool)
(declare-fun x3486 () Bool)
(declare-fun x4103 () Int)
(declare-fun x3766 () Bool)
(declare-fun x4416 () Int)
(declare-fun x541 () Int)
(declare-fun x1428 () Bool)
(declare-fun x421 () Int)
(declare-fun x5434 () Int)
(declare-fun x4646 () Int)
(declare-fun x3981 () Int)
(declare-fun x3632 () Int)
(declare-fun x2395 () Int)
(declare-fun x744 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x697 () Int)
(declare-fun x3637 () Int)
(declare-fun x1798 () Int)
(declare-fun x3739 () Bool)
(declare-fun x2445 () Int)
(declare-fun x172 () Int)
(declare-fun x2270 () Int)
(declare-fun x933 () Bool)
(declare-fun x5071 () Int)
(declare-fun x3759 () Int)
(declare-fun x4966 () Int)
(declare-fun x4930 () Int)
(declare-fun x1867 () Int)
(declare-fun x4185 () Int)
(declare-fun x1008 () Int)
(declare-fun x1841 () Int)
(declare-fun x3338 () Bool)
(declare-fun x2243 () Int)
(declare-fun x3278 () Int)
(declare-fun x4572 () Int)
(declare-fun x257 () Int)
(declare-fun x1635 () Bool)
(declare-fun x984 () Bool)
(declare-fun x3826 () Int)
(declare-fun x1448 () Int)
(declare-fun x3418 () Bool)
(declare-fun x4637 () Int)
(declare-fun x2216 () Int)
(declare-fun x1393 () Int)
(declare-fun x2888 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x5373 () Int)
(declare-fun x3107 () Int)
(declare-fun x4095 () Int)
(declare-fun x3508 () Int)
(declare-fun x3982 () Int)
(declare-fun x1791 () Int)
(declare-fun x2487 () Int)
(declare-fun x1919 () Int)
(declare-fun x785 () Bool)
(declare-fun x2201 () Int)
(declare-fun x4880 () Int)
(declare-fun x2770 () Bool)
(declare-fun x3988 () Int)
(declare-fun x4531 () Int)
(declare-fun x1832 () Bool)
(declare-fun x5298 () Bool)
(declare-fun x5394 () Int)
(declare-fun x5136 () Int)
(declare-fun x4175 () Int)
(declare-fun x3671 () Int)
(declare-fun x4679 () Int)
(declare-fun x412 () Int)
(declare-fun x4956 () Int)
(declare-fun x3852 () Bool)
(declare-fun x2510 () Int)
(declare-fun x4493 () Bool)
(declare-fun x36 () Int)
(declare-fun x991 () Int)
(declare-fun x360 () Bool)
(declare-fun x4633 () Int)
(declare-fun x154 () Int)
(declare-fun x2828 () Int)
(declare-fun x4100 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x3849 () Int)
(declare-fun x2278 () Bool)
(declare-fun x4662 () Bool)
(declare-fun x634 () Int)
(declare-fun x4840 () Int)
(declare-fun x4082 () Bool)
(declare-fun x3033 () Int)
(declare-fun x3781 () Int)
(declare-fun x97 () Int)
(declare-fun x4817 () Bool)
(declare-fun x4522 () Int)
(declare-fun x2290 () Int)
(declare-fun x1109 () Int)
(declare-fun x1617 () Bool)
(declare-fun x717 () Int)
(declare-fun x687 () Int)
(declare-fun x1402 () Int)
(declare-fun x1255 () Int)
(declare-fun x3445 () Int)
(declare-fun x1145 () Int)
(declare-fun x3676 () Bool)
(declare-fun x1486 () Int)
(declare-fun x659 () Bool)
(declare-fun x2651 () Int)
(declare-fun x593 () Bool)
(declare-fun x2837 () Int)
(declare-fun x4595 () Int)
(declare-fun x3204 () Int)
(declare-fun x2854 () Int)
(declare-fun x1192 () Bool)
(declare-fun x1679 (Int) Int)
(declare-fun x624 () Int)
(declare-fun x3337 () Int)
(declare-fun x5058 () Int)
(declare-fun x357 () Bool)
(declare-fun x4532 () Bool)
(declare-fun x4579 () Bool)
(declare-fun x1235 () Int)
(declare-fun x5312 () Int)
(declare-fun x2559 () Int)
(declare-fun x4726 () Bool)
(declare-fun x5141 () Int)
(declare-fun x863 () Int)
(declare-fun x4878 () Int)
(declare-fun x3275 () Bool)
(declare-fun x715 () Int)
(declare-fun x4957 () Int)
(declare-fun x3543 () Int)
(declare-fun x3945 () Int)
(declare-fun x137 () Int)
(declare-fun x2781 () Int)
(declare-fun x2317 () Int)
(declare-fun x5330 () Int)
(declare-fun x5461 () Int)
(declare-fun x4075 () Int)
(declare-fun x4408 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x2211 () Int)
(declare-fun x1122 () Int)
(declare-fun x5609 () Int)
(declare-fun x1070 () Bool)
(declare-fun x443 () Bool)
(declare-fun x85 () Int)
(declare-fun x4724 () Bool)
(declare-fun x4249 () Int)
(declare-fun x3075 () Int)
(declare-fun x3531 () Int)
(declare-fun x2876 () Bool)
(declare-fun x3105 () Int)
(declare-fun x3051 () Int)
(declare-fun x5508 () Bool)
(declare-fun x2132 () Int)
(declare-fun x5346 (Int) Int)
(declare-fun x4077 () Int)
(declare-fun x917 () Int)
(declare-fun x4598 () Bool)
(declare-fun x2275 () Int)
(declare-fun x775 () Bool)
(declare-fun x5296 () Int)
(declare-fun x1981 () Int)
(declare-fun x2508 () Int)
(declare-fun x3891 () Int)
(declare-fun x671 () Int)
(declare-fun x1013 () Int)
(declare-fun x2096 () Int)
(declare-fun x2914 () Int)
(declare-fun x757 () Int)
(declare-fun x4409 () Int)
(declare-fun x2277 () Bool)
(declare-fun x748 () Int)
(declare-fun x3610 () Int)
(declare-fun x1461 () Int)
(declare-fun x2802 () Int)
(declare-fun x4385 () Int)
(declare-fun x5396 () Bool)
(declare-fun x4419 () Int)
(declare-fun x1361 () Int)
(declare-fun x5347 () Int)
(declare-fun x4748 () Int)
(declare-fun x3315 () Bool)
(declare-fun x4154 () Int)
(declare-fun x5600 () Int)
(declare-fun x1960 () Int)
(declare-fun x3631 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x1113 () Int)
(declare-fun x1137 () Int)
(declare-fun x3254 () Int)
(declare-fun x4061 () Int)
(declare-fun x2424 () Int)
(declare-fun x4642 () Bool)
(declare-fun x4776 () Int)
(declare-fun x3984 () Int)
(declare-fun x1937 () Bool)
(declare-fun x5457 () Int)
(declare-fun x3583 () Int)
(declare-fun x2279 () Bool)
(declare-fun x4783 () Bool)
(declare-fun x4218 () Int)
(declare-fun x4159 () Bool)
(declare-fun x5239 () Bool)
(declare-fun x2515 () Int)
(declare-fun x3028 () Bool)
(declare-fun x3821 () Int)
(declare-fun x132 () Int)
(declare-fun x5345 () Bool)
(declare-fun x3291 () Bool)
(declare-fun x5525 () Int)
(declare-fun x3388 () Int)
(declare-fun x3896 () Int)
(declare-fun x1874 (Int) Int)
(declare-fun x4581 () Int)
(declare-fun x2938 () Bool)
(declare-fun x1877 () Bool)
(declare-fun x2307 () Bool)
(declare-fun x2398 () Int)
(declare-fun x3305 () Int)
(declare-fun x2405 () Int)
(declare-fun x737 () Int)
(declare-fun x4428 () Int)
(declare-fun x5048 () Int)
(declare-fun x4118 () Int)
(declare-fun x4137 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x4796 () Int)
(declare-fun x932 () Int)
(declare-fun x5484 () Int)
(declare-fun x1269 () Bool)
(declare-fun x817 () Int)
(declare-fun x2004 () Int)
(declare-fun x1789 () Bool)
(declare-fun x5170 () Int)
(declare-fun x1636 () Bool)
(declare-fun x2369 () Int)
(declare-fun x4770 () Int)
(declare-fun x5567 () Bool)
(declare-fun x2872 () Bool)
(declare-fun x209 () Int)
(declare-fun x4889 () Bool)
(declare-fun x1657 () Int)
(declare-fun x82 () Bool)
(declare-fun x2894 () Int)
(declare-fun x4285 () Int)
(declare-fun x4528 () Bool)
(declare-fun x4381 () Bool)
(declare-fun x333 () Int)
(declare-fun x1740 () Bool)
(declare-fun x4282 () Int)
(declare-fun x1949 () Int)
(declare-fun x2793 () Bool)
(declare-fun x30 () Int)
(declare-fun x4192 () Int)
(declare-fun x1826 () Int)
(declare-fun x5354 () Bool)
(declare-fun x2502 () Int)
(declare-fun x3279 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x5004 () Int)
(declare-fun x1971 () Int)
(declare-fun x753 () Bool)
(declare-fun x78 () Int)
(declare-fun x736 () Int)
(declare-fun x4745 () Bool)
(declare-fun x5511 () Int)
(declare-fun x3322 () Int)
(declare-fun x2962 () Bool)
(declare-fun x5255 () Int)
(declare-fun x3354 () Int)
(declare-fun x4568 () Int)
(declare-fun x3398 () Int)
(declare-fun x2728 () Int)
(declare-fun x4584 () Int)
(declare-fun x4667 () Int)
(declare-fun x2391 () Int)
(declare-fun x5277 () Int)
(declare-fun x1736 () Int)
(declare-fun x2057 () Int)
(declare-fun x1112 () Int)
(declare-fun x4789 () Bool)
(declare-fun x1576 () Int)
(declare-fun x516 () Int)
(declare-fun x1698 () Bool)
(declare-fun x3756 () Int)
(declare-fun x3241 () Int)
(declare-fun x170 () Int)
(declare-fun x1386 () Int)
(declare-fun x1224 () Int)
(declare-fun x4339 () Int)
(declare-fun x3707 () Bool)
(declare-fun x5321 () Int)
(declare-fun x3573 () Bool)
(declare-fun x335 () Int)
(declare-fun x1770 () Int)
(declare-fun x2448 () Int)
(declare-fun x5360 () Int)
(declare-fun x5473 () Int)
(declare-fun x4612 () Bool)
(declare-fun x485 (Int Int Int Int Int Int Int) Int)
(declare-fun x4767 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x2639 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x4124 () Int)
(declare-fun x1327 () Bool)
(declare-fun x888 () Bool)
(declare-fun x4500 (Int) Int)
(declare-fun x4270 () Int)
(declare-fun x1792 () Int)
(declare-fun x410 () Int)
(declare-fun x3555 () Int)
(declare-fun x1893 () Int)
(declare-fun x1465 () Int)
(declare-fun x869 () Int)
(declare-fun x4623 () Int)
(declare-fun x872 () Int)
(declare-fun x4343 () Bool)
(declare-fun x4102 () Int)
(declare-fun x5472 () Bool)
(declare-fun x4356 () Bool)
(declare-fun x3816 () Int)
(declare-fun x5030 () Int)
(declare-fun x1466 () Int)
(declare-fun x3005 () Bool)
(declare-fun x1625 () Int)
(declare-fun x725 () Int)
(declare-fun x4450 () Bool)
(declare-fun x3197 () Int)
(declare-fun x1352 () Bool)
(declare-fun x2827 () Bool)
(declare-fun x5081 () Int)
(declare-fun x951 () Int)
(declare-fun x2987 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x3137 () Int)
(declare-fun x1265 () Int)
(declare-fun x5538 () Int)
(declare-fun x2099 () Int)
(declare-fun x5041 () Bool)
(declare-fun x4291 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x2777 () Int)
(declare-fun x3325 () Int)
(declare-fun x2788 () Int)
(declare-fun x2423 () Int)
(declare-fun x1620 () Int)
(declare-fun x235 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x2947 () Int)
(declare-fun x4743 () Int)
(declare-fun x4281 () Int)
(declare-fun x1340 () Bool)
(declare-fun x5294 () Bool)
(declare-fun x169 () Int)
(declare-fun x1047 () Int)
(declare-fun x5570 () Bool)
(declare-fun x1642 () Int)
(declare-fun x1558 () Bool)
(declare-fun x4734 () Int)
(declare-fun x279 () Int)
(declare-fun x5203 () Int)
(declare-fun x5619 () Int)
(declare-fun x1804 () Bool)
(declare-fun x3374 () Int)
(declare-fun x1348 () Int)
(declare-fun x2138 () Int)
(declare-fun x2586 () Int)
(declare-fun x4261 () Int)
(declare-fun x2557 () Bool)
(declare-fun x3072 () Int)
(declare-fun x1219 () Int)
(declare-fun x4784 () Int)
(declare-fun x2354 () Int)
(declare-fun x2967 () Bool)
(declare-fun x2516 () Int)
(declare-fun x8 () Int)
(declare-fun x4708 () Int)
(declare-fun x3476 () Int)
(declare-fun x131 () Bool)
(declare-fun x5276 () Int)
(declare-fun x3853 () Bool)
(declare-fun x858 () Int)
(declare-fun x2006 () Int)
(declare-fun x3053 () Int)
(declare-fun x911 () Int)
(declare-fun x1165 () Int)
(declare-fun x3728 () Int)
(declare-fun x12 () Int)
(declare-fun x5024 () Int)
(declare-fun x2875 () Int)
(declare-fun x5231 () Bool)
(declare-fun x4115 () Int)
(declare-fun x596 () Int)
(declare-fun x4029 () Int)
(declare-fun x2058 () Int)
(declare-fun x107 () Int)
(declare-fun x5082 () Int)
(declare-fun x3912 () Int)
(declare-fun x1965 () Int)
(declare-fun x2834 () Bool)
(declare-fun x5098 () Int)
(declare-fun x5639 () Int)
(declare-fun x689 () Int)
(declare-fun x1472 () Int)
(declare-fun x4495 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x4299 () Int)
(declare-fun x4537 () Int)
(declare-fun x801 () Int)
(declare-fun x1516 () Int)
(declare-fun x1456 () Int)
(declare-fun x1987 () Int)
(declare-fun x1819 () Int)
(declare-fun x1968 () Int)
(declare-fun x3067 () Int)
(declare-fun x5315 () Int)
(declare-fun x1273 () Int)
(declare-fun x4608 () Int)
(declare-fun x3047 () Int)
(declare-fun x5189 () Int)
(declare-fun x3307 () Int)
(declare-fun x3186 () Bool)
(declare-fun x3423 () Int)
(declare-fun x1458 () Bool)
(declare-fun x2800 () Int)
(declare-fun x1876 () Bool)
(declare-fun x3559 () Int)
(declare-fun x1281 () Bool)
(declare-fun x856 () Int)
(declare-fun x5411 () Int)
(declare-fun x1916 () Int)
(declare-fun x2694 () Bool)
(declare-fun x3324 () Int)
(declare-fun x3787 () Int)
(declare-fun x3924 () Int)
(declare-fun x1161 () Int)
(declare-fun x623 () Bool)
(declare-fun x5564 () Bool)
(declare-fun x5197 () Int)
(declare-fun x5171 () Int)
(declare-fun x572 () Int)
(declare-fun x5475 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x1123 () Int)
(declare-fun x3755 () Int)
(declare-fun x2524 () Bool)
(declare-fun x3667 () Int)
(declare-fun x4696 () Bool)
(declare-fun x5295 (Int) Int)
(declare-fun x4702 () Int)
(declare-fun x1069 () Int)
(declare-fun x2996 () Bool)
(declare-fun x3065 () Int)
(declare-fun x1555 () Int)
(declare-fun x493 () Bool)
(declare-fun x581 () Int)
(declare-fun x4105 () Bool)
(declare-fun x3777 () Bool)
(declare-fun x1236 () Int)
(declare-fun x100 () Int)
(declare-fun x4 () Bool)
(declare-fun x429 () Int)
(declare-fun x841 () Int)
(declare-fun x4787 () Bool)
(declare-fun x4835 () Bool)
(declare-fun x2083 () Int)
(declare-fun x1388 () Bool)
(declare-fun x3533 () Int)
(declare-fun x3827 () Int)
(declare-fun x729 () Int)
(declare-fun x1809 () Bool)
(declare-fun x4222 () Int)
(declare-fun x3373 () Bool)
(declare-fun x1506 () Int)
(declare-fun x4723 () Bool)
(declare-fun x4362 () Int)
(declare-fun x1941 () Int)
(declare-fun x4742 () Int)
(declare-fun x2955 () Int)
(declare-fun x897 () Int)
(declare-fun x2779 () Bool)
(declare-fun x4629 () Int)
(declare-fun x1350 () Int)
(declare-fun x17 (Int) Int)
(declare-fun x4520 () Int)
(declare-fun x4636 () Int)
(declare-fun x472 () Int)
(declare-fun x553 () Bool)
(declare-fun x4965 () Int)
(declare-fun x1129 () Int)
(declare-fun x4972 () Bool)
(declare-fun x2327 () Int)
(declare-fun x2826 () Bool)
(declare-fun x345 () Bool)
(declare-fun x212 () Int)
(declare-fun x1222 () Bool)
(declare-fun x2227 () Int)
(declare-fun x4924 () Int)
(declare-fun x4030 () Int)
(declare-fun x2698 () Int)
(declare-fun x4881 () Int)
(declare-fun x735 () Int)
(declare-fun x1332 () Int)
(declare-fun x3619 () Int)
(declare-fun x4563 () Int)
(declare-fun x4731 () Int)
(declare-fun x1464 () Int)
(declare-fun x3515 () Bool)
(declare-fun x3931 () Bool)
(declare-fun x5013 () Int)
(declare-fun x5118 () Int)
(declare-fun x2891 () Bool)
(declare-fun x761 () Int)
(declare-fun x5147 () Int)
(declare-fun x3765 () Int)
(declare-fun x453 () Int)
(declare-fun x2437 () Bool)
(declare-fun x4176 () Int)
(declare-fun x1299 () Int)
(declare-fun x4329 () Bool)
(declare-fun x3123 () Int)
(declare-fun x5601 () Int)
(declare-fun x4447 () Int)
(declare-fun x5369 () Bool)
(declare-fun x1925 () Int)
(declare-fun x2443 () Int)
(declare-fun x266 () Int)
(declare-fun x1189 () Int)
(declare-fun x1611 () Int)
(declare-fun x4841 () Int)
(declare-fun x1800 () Int)
(declare-fun x4098 () Int)
(declare-fun x2123 () Int)
(declare-fun x232 () Int)
(declare-fun x2604 () Int)
(declare-fun x2379 () Int)
(declare-fun x4973 () Int)
(declare-fun x1499 () Int)
(declare-fun x2542 () Int)
(declare-fun x1688 () Int)
(declare-fun x1229 () Int)
(declare-fun x5532 () Int)
(declare-fun x799 () Int)
(declare-fun x2451 () Int)
(declare-fun x3108 () Int)
(declare-fun x1185 () Int)
(declare-fun x3156 () Int)
(declare-fun x4529 () Int)
(declare-fun x4525 () Int)
(declare-fun x2446 () Int)
(declare-fun x524 () Int)
(declare-fun x4174 () Int)
(declare-fun x287 () Int)
(declare-fun x3210 () Int)
(declare-fun x4851 () Int)
(declare-fun x452 () Int)
(declare-fun x3647 () Bool)
(declare-fun x1910 () Int)
(declare-fun x4363 () Bool)
(declare-fun x3144 () Int)
(declare-fun x61 () Int)
(declare-fun x1441 () Bool)
(declare-fun x4764 () Int)
(declare-fun x700 () Bool)
(declare-fun x5625 () Int)
(declare-fun x3387 () Bool)
(declare-fun x5544 () Int)
(declare-fun x614 () Int)
(declare-fun x3623 () Bool)
(declare-fun x4387 () Int)
(declare-fun x3959 () Bool)
(declare-fun x316 () Bool)
(declare-fun x165 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x3066 () Int)
(declare-fun x2467 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x2669 () Int)
(declare-fun x1935 () Int)
(declare-fun x3768 () Bool)
(declare-fun x349 () Int)
(declare-fun x5248 () Int)
(declare-fun x4113 () Bool)
(declare-fun x2724 () Int)
(declare-fun x2416 () Int)
(declare-fun x1608 () Int)
(declare-fun x4164 () Bool)
(declare-fun x2572 () Int)
(declare-fun x2124 () Int)
(declare-fun x1170 () Bool)
(declare-fun x5209 () Bool)
(declare-fun x560 () Int)
(declare-fun x4444 () Bool)
(declare-fun x231 () Bool)
(declare-fun x3032 () Bool)
(declare-fun x1400 () Int)
(declare-fun x2188 () Int)
(declare-fun x930 () Int)
(declare-fun x1073 () Int)
(declare-fun x1772 () Int)
(declare-fun x1648 () Bool)
(declare-fun x5370 () Int)
(declare-fun x4083 () Int)
(declare-fun x253 () Bool)
(declare-fun x4166 () Int)
(declare-fun x470 () Int)
(declare-fun x3029 () Int)
(declare-fun x546 () Int)
(declare-fun x2699 () Int)
(declare-fun x237 () Bool)
(declare-fun x1706 () Int)
(declare-fun x4491 () Int)
(declare-fun x1815 () Int)
(declare-fun x3293 () Int)
(declare-fun x4819 () Int)
(declare-fun x1624 () Int)
(declare-fun x940 () Int)
(declare-fun x2330 () Int)
(declare-fun x2990 () Int)
(declare-fun x2182 () Int)
(declare-fun x2113 () Int)
(declare-fun x4617 () Int)
(declare-fun x2249 () Int)
(declare-fun x2555 () Bool)
(declare-fun x2310 () Int)
(declare-fun x1056 () Bool)
(declare-fun x2407 () Int)
(declare-fun x3904 () Int)
(declare-fun x4336 () Bool)
(declare-fun x4505 () Int)
(declare-fun x4661 () Bool)
(declare-fun x5125 () Int)
(declare-fun x727 () Int)
(declare-fun x1890 () Bool)
(declare-fun x2244 () Int)
(declare-fun x945 () Bool)
(declare-fun x2959 () Int)
(declare-fun x3986 () Bool)
(declare-fun x3625 () Int)
(declare-fun x5588 () Int)
(declare-fun x4460 () Int)
(declare-fun x3674 () Int)
(declare-fun x1126 () Int)
(declare-fun x5641 () Bool)
(declare-fun x3525 () Int)
(declare-fun x1632 () Int)
(declare-fun x4616 () Bool)
(declare-fun x200 () Int)
(declare-fun x3978 () Int)
(declare-fun x5412 () Int)
(declare-fun x5074 () Bool)
(declare-fun x4649 () Int)
(declare-fun x642 () Int)
(declare-fun x1168 () Int)
(declare-fun x3926 () Bool)
(declare-fun x5331 () Int)
(declare-fun x4413 () Int)
(declare-fun x99 () Int)
(declare-fun x1566 () Int)
(declare-fun x2602 () Bool)
(declare-fun x5103 () Int)
(declare-fun x5378 () Int)
(declare-fun x3154 () Int)
(declare-fun x5161 () Int)
(declare-fun x1243 () Int)
(declare-fun x5499 () Int)
(declare-fun x2411 () Bool)
(declare-fun x1763 () Int)
(declare-fun x1478 () Bool)
(declare-fun x5332 () Bool)
(declare-fun x408 () Int)
(declare-fun x5220 () Int)
(declare-fun x1678 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x1775 () Int)
(declare-fun x3294 () Bool)
(declare-fun x832 () Int)
(declare-fun x3087 (Int) Int)
(declare-fun x970 () Int)
(declare-fun x2171 (Int) Int)
(declare-fun x3038 () Int)
(declare-fun x4467 () Bool)
(declare-fun x683 () Bool)
(declare-fun x5611 () Int)
(declare-fun x3426 () Bool)
(declare-fun x1376 () Int)
(declare-fun x3568 () Int)
(declare-fun x1903 () Int)
(declare-fun x3424 () Bool)
(declare-fun x5592 () Int)
(declare-fun x2173 () Bool)
(declare-fun x2916 () Int)
(declare-fun x4590 () Int)
(declare-fun x3786 () Bool)
(declare-fun x5153 () Int)
(declare-fun x1379 () Int)
(declare-fun x2212 () Int)
(declare-fun x2512 () Int)
(declare-fun x4931 () Int)
(declare-fun x816 () Int)
(declare-fun x2234 () Bool)
(declare-fun x5217 () Int)
(declare-fun x4912 () Int)
(declare-fun x3124 () Int)
(declare-fun x3014 () Int)
(declare-fun x732 () Int)
(declare-fun x1939 () Int)
(declare-fun x3693 () Bool)
(declare-fun x4346 () Int)
(declare-fun x1509 () Int)
(declare-fun x3549 () Int)
(declare-fun x4319 () Int)
(declare-fun x4437 () Bool)
(declare-fun x1264 () Int)
(declare-fun x3345 () Int)
(declare-fun x2538 () Int)
(declare-fun x5017 () Bool)
(declare-fun x1459 () Int)
(declare-fun x3886 () Int)
(declare-fun x5274 () Int)
(declare-fun x837 () Int)
(declare-fun x1680 () Int)
(declare-fun x4678 () Bool)
(declare-fun x431 () Int)
(declare-fun x4558 () Bool)
(declare-fun x3043 () Int)
(declare-fun x1784 () Int)
(declare-fun x1227 () Bool)
(declare-fun x2386 () Bool)
(declare-fun x2292 () Int)
(declare-fun x3117 () Int)
(declare-fun x1184 () Int)
(declare-fun x4882 () Int)
(declare-fun x1031 () Int)
(declare-fun x1429 () Int)
(declare-fun x288 () Bool)
(declare-fun x4657 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x3528 () Bool)
(declare-fun x3601 () Int)
(declare-fun x110 () Bool)
(declare-fun x4181 () Int)
(declare-fun x5140 () Int)
(declare-fun x5188 () Int)
(declare-fun x2906 () Int)
(declare-fun x2519 () Int)
(declare-fun x2818 () Bool)
(declare-fun x3098 () Bool)
(declare-fun x772 () Int)
(declare-fun x4422 () Int)
(declare-fun x4801 () Int)
(declare-fun x2240 () Int)
(declare-fun x1242 () Int)
(declare-fun x4989 () Int)
(declare-fun x1901 () Bool)
(declare-fun x1415 () Int)
(declare-fun x3044 () Bool)
(declare-fun x4665 () Bool)
(declare-fun x4862 () Bool)
(declare-fun x449 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x4497 () Int)
(declare-fun x980 () Int)
(declare-fun x5618 () Bool)
(declare-fun x1420 () Int)
(declare-fun x3899 () Int)
(declare-fun x3579 () Int)
(declare-fun x4226 () Int)
(declare-fun x1377 () Int)
(declare-fun x142 () Int)
(declare-fun x568 () Int)
(declare-fun x3561 () Int)
(declare-fun x2464 () Int)
(declare-fun x5652 () Int)
(declare-fun x112 () Int)
(declare-fun x3193 () Int)
(declare-fun x4658 () Bool)
(declare-fun x3184 () Int)
(declare-fun x1016 () Int)
(declare-fun x5143 () Int)
(declare-fun x4280 () Int)
(declare-fun x4498 () Bool)
(declare-fun x186 () Int)
(declare-fun x3818 () Bool)
(declare-fun x905 () Int)
(declare-fun x1086 () Int)
(declare-fun x3876 () Int)
(declare-fun x3688 () Int)
(declare-fun x4457 () Bool)
(declare-fun x2995 () Int)
(declare-fun x1817 () Bool)
(declare-fun x773 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x2029 () Int)
(declare-fun x3910 () Int)
(declare-fun x1296 () Int)
(declare-fun x2301 (Int) Int)
(declare-fun x1717 () Bool)
(declare-fun x1261 () Int)
(declare-fun x3932 () Bool)
(declare-fun x4845 () Bool)
(declare-fun x168 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x355 () Int)
(declare-fun x2357 () Int)
(declare-fun x1044 () Int)
(declare-fun x369 () Int)
(declare-fun x4321 () Int)
(declare-fun x4365 () Int)
(declare-fun x4933 () Int)
(declare-fun x3022 () Int)
(declare-fun x3395 () Int)
(declare-fun x5386 () Int)
(declare-fun x745 () Int)
(declare-fun x2162 () Bool)
(declare-fun x3805 () Int)
(declare-fun x2753 () Bool)
(declare-fun x124 (Int) Int)
(declare-fun x281 () Int)
(declare-fun x1439 () Int)
(declare-fun x708 () Int)
(declare-fun x5275 () Int)
(declare-fun x1601 () Bool)
(declare-fun x3170 () Int)
(declare-fun x239 () Int)
(declare-fun x5029 () Bool)
(declare-fun x196 () Int)
(declare-fun x5087 () Int)
(declare-fun x2428 () Int)
(declare-fun x3994 () Int)
(declare-fun x3076 () Int)
(declare-fun x3653 () Int)
(declare-fun x5226 () Bool)
(declare-fun x1363 () Int)
(declare-fun x3687 () Int)
(declare-fun x2749 () Int)
(declare-fun x1822 () Int)
(declare-fun x5263 () Bool)
(declare-fun x5113 () Bool)
(declare-fun x3274 () Int)
(declare-fun x5010 () Int)
(declare-fun x4839 () Bool)
(declare-fun x900 () Int)
(declare-fun x947 () Bool)
(declare-fun x2333 () Int)
(declare-fun x1504 () Int)
(declare-fun x2795 () Bool)
(declare-fun x857 () Bool)
(declare-fun x2646 () Int)
(declare-fun x2733 () Int)
(declare-fun x926 () Bool)
(declare-fun x2048 () Int)
(declare-fun x5257 () Int)
(declare-fun x5632 () Bool)
(declare-fun x4659 () Int)
(declare-fun x173 () Int)
(declare-fun x3992 () Int)
(declare-fun x1711 () Int)
(declare-fun x3869 () Bool)
(declare-fun x1896 () Bool)
(declare-fun x597 () Bool)
(declare-fun x3537 () Int)
(declare-fun x2325 () Int)
(declare-fun x2999 () Int)
(declare-fun x3550 () Int)
(declare-fun x4253 () Bool)
(declare-fun x5368 () Int)
(declare-fun x4207 () Int)
(declare-fun x4489 () Int)
(declare-fun x5149 () Int)
(declare-fun x2082 () Int)
(declare-fun x6 () Bool)
(declare-fun x3956 () Bool)
(declare-fun x906 () Int)
(declare-fun x4639 () Int)
(declare-fun x2702 () Bool)
(declare-fun x5208 () Int)
(declare-fun x5003 () Int)
(declare-fun x4804 () Int)
(declare-fun x1727 () Bool)
(declare-fun x5448 () Int)
(declare-fun x3804 () Int)
(declare-fun x4036 () Int)
(declare-fun x891 () Bool)
(declare-fun x4308 () Bool)
(declare-fun x965 () Bool)
(declare-fun x5202 () Int)
(declare-fun x2418 () Int)
(declare-fun x5627 () Int)
(declare-fun x3346 () Int)
(declare-fun x2400 () Int)
(declare-fun x4383 () Int)
(declare-fun x4940 () Int)
(declare-fun x3248 () Int)
(declare-fun x4081 () Bool)
(declare-fun x4435 (Int) Bool)
(declare-fun x1857 () Int)
(declare-fun x3415 () Int)
(declare-fun x1771 () Int)
(declare-fun x5022 () Int)
(declare-fun x1721 () Int)
(declare-fun x233 () Int)
(declare-fun x845 () Int)
(declare-fun x3350 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x5420 () Bool)
(declare-fun x2661 () Int)
(declare-fun x759 () Bool)
(declare-fun x5329 () Int)
(declare-fun x3464 () Int)
(declare-fun x420 () Bool)
(declare-fun x3013 () Int)
(declare-fun x3206 () Bool)
(declare-fun x2696 () Bool)
(declare-fun x937 () Bool)
(declare-fun x4739 () Int)
(declare-fun x2496 () Bool)
(declare-fun x370 () Int)
(declare-fun x2617 () Int)
(declare-fun x4997 () Bool)
(declare-fun x3006 () Int)
(declare-fun x3813 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x2647 () Int)
(declare-fun x4795 () Int)
(declare-fun x529 () Int)
(declare-fun x277 () Bool)
(declare-fun x4349 () Bool)
(declare-fun x2902 () Int)
(declare-fun x2898 () Bool)
(declare-fun x1238 () Int)
(declare-fun x5382 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x4068 () Int)
(declare-fun x3017 () Bool)
(declare-fun x2372 () Int)
(declare-fun x1592 () Int)
(declare-fun x2199 () Bool)
(declare-fun x3461 () Int)
(declare-fun x156 () Int)
(declare-fun x3284 () Int)
(declare-fun x1084 () Int)
(declare-fun x2705 () Bool)
(declare-fun x4066 () Int)
(declare-fun x2563 () Bool)
(declare-fun x1028 () Int)
(declare-fun x2768 () Int)
(declare-fun x5084 () Int)
(declare-fun x1407 () Int)
(declare-fun x2807 () Int)
(declare-fun x2711 () Int)
(declare-fun x5562 () Int)
(declare-fun x1546 () Bool)
(declare-fun x3145 () Int)
(declare-fun x2380 () Int)
(declare-fun x1210 () Bool)
(declare-fun x5126 () Int)
(declare-fun x2847 () Int)
(declare-fun x4073 () Int)
(declare-fun x4980 () Int)
(declare-fun x711 () Bool)
(declare-fun x271 () Bool)
(declare-fun x1684 () Int)
(declare-fun x4027 () Int)
(declare-fun x3941 () Int)
(declare-fun x2192 () Int)
(declare-fun x3649 () Bool)
(declare-fun x213 () Int)
(declare-fun x53 () Int)
(declare-fun x4741 () Bool)
(declare-fun x5 () Int)
(declare-fun x1275 () Int)
(declare-fun x3844 () Int)
(declare-fun x3950 () Int)
(declare-fun x5617 () Int)
(declare-fun x4919 () Int)
(declare-fun x5268 () Bool)
(declare-fun x5282 () Int)
(declare-fun x2700 () Int)
(declare-fun x4903 () Int)
(declare-fun x2977 () Int)
(declare-fun x4392 () Int)
(declare-fun x3925 () Bool)
(declare-fun x2076 () Int)
(declare-fun x1440 () Int)
(declare-fun x2039 () Int)
(declare-fun x1856 () Int)
(declare-fun x876 () Int)
(declare-fun x2095 () Bool)
(declare-fun x2821 () Int)
(declare-fun x198 () Int)
(declare-fun x3558 () Bool)
(declare-fun x144 () Int)
(declare-fun x4452 () Int)
(declare-fun x2000 () Int)
(declare-fun x5090 () Int)
(declare-fun x2026 () Int)
(declare-fun x1208 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x2160 () Int)
(declare-fun x5596 () Int)
(declare-fun x2251 () Int)
(declare-fun x4076 () Int)
(declare-fun x392 () Int)
(declare-fun x4638 () Bool)
(declare-fun x244 () Bool)
(declare-fun x4225 () Int)
(declare-fun x1572 () Int)
(declare-fun x1 () Int)
(declare-fun x3048 () Bool)
(declare-fun x5334 () Int)
(declare-fun x4977 () Int)
(declare-fun x3421 () Int)
(declare-fun x398 () Bool)
(declare-fun x5191 () Int)
(declare-fun x3238 (Int) Int)
(declare-fun x389 () Int)
(declare-fun x5447 () Bool)
(declare-fun x1716 () Int)
(declare-fun x5540 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x1559 () Int)
(declare-fun x5550 () Int)
(declare-fun x3803 () Int)
(declare-fun x1055 () Int)
(declare-fun x4832 () Int)
(declare-fun x4393 () Bool)
(declare-fun x2128 () Int)
(declare-fun x1645 () Int)
(declare-fun x1300 () Int)
(declare-fun x2351 () Int)
(declare-fun x4811 () Bool)
(declare-fun x2022 () Int)
(declare-fun x5613 () Int)
(declare-fun x5520 (Int) Int)
(declare-fun x5415 () Int)
(declare-fun x3036 () Int)
(declare-fun x4517 () Int)
(declare-fun x2483 (Int) Int)
(declare-fun x3417 () Int)
(declare-fun x4946 () Bool)
(declare-fun x5542 () Int)
(declare-fun x5012 () Bool)
(declare-fun x3364 () Int)
(declare-fun x1654 () Int)
(declare-fun x4157 () Int)
(declare-fun x44 () Int)
(declare-fun x4740 () Int)
(declare-fun x880 () Int)
(declare-fun x971 () Int)
(declare-fun x3659 () Int)
(declare-fun x1408 () Int)
(declare-fun x853 () Bool)
(declare-fun x5536 () Int)
(declare-fun x3064 () Int)
(declare-fun x5498 () Bool)
(declare-fun x3021 () Int)
(declare-fun x5230 () Int)
(declare-fun x1157 () Int)
(declare-fun x1725 () Int)
(declare-fun x4948 () Int)
(declare-fun x952 () Int)
(declare-fun x5036 () Bool)
(declare-fun x4049 () Int)
(declare-fun x3061 () Int)
(declare-fun x4775 () Int)
(declare-fun x4530 () Int)
(declare-fun x1142 () Int)
(declare-fun x4111 (Int) Int)
(declare-fun x939 () Bool)
(declare-fun x4651 () Int)
(declare-fun x4860 () Int)
(declare-fun x5172 () Int)
(declare-fun x3902 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x4292 () Int)
(declare-fun x1891 () Bool)
(declare-fun x2928 () Int)
(declare-fun x140 () Int)
(declare-fun x4067 () Bool)
(declare-fun x1720 () Int)
(declare-fun x422 () Int)
(declare-fun x2017 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x2363 () Int)
(declare-fun x3585 () Bool)
(declare-fun x338 () Int)
(declare-fun x1714 () Int)
(declare-fun x5129 () Bool)
(declare-fun x4284 () Int)
(declare-fun x1270 () Int)
(declare-fun x2944 () Int)
(declare-fun x104 () Bool)
(declare-fun x5264 () Int)
(declare-fun x3441 () Int)
(declare-fun x1672 () Bool)
(declare-fun x3983 () Int)
(declare-fun x3800 () Int)
(declare-fun x3776 () Bool)
(declare-fun x1966 () Int)
(declare-fun x4235 () Int)
(declare-fun x3935 () Bool)
(declare-fun x1732 () Int)
(declare-fun x5311 () Int)
(declare-fun x2668 () Int)
(declare-fun x3799 () Int)
(declare-fun x1514 (Int) Int)
(declare-fun x1053 () Bool)
(declare-fun x2208 () Int)
(declare-fun x2704 () Int)
(declare-fun x1529 () Int)
(declare-fun x4086 () Int)
(declare-fun x1888 () Int)
(declare-fun x750 () Int)
(declare-fun x4167 () Int)
(declare-fun x4138 () Bool)
(declare-fun x3673 () Bool)
(declare-fun x586 () Bool)
(declare-fun x3516 () Int)
(declare-fun x3435 () Int)
(declare-fun x1419 () Bool)
(declare-fun x3336 () Int)
(declare-fun x3469 () Int)
(declare-fun x1301 () Bool)
(declare-fun x3677 () Int)
(declare-fun x3195 () Int)
(declare-fun x3351 () Bool)
(declare-fun x1333 () Int)
(declare-fun x5392 () Bool)
(declare-fun x2935 () Int)
(declare-fun x5630 () Int)
(declare-fun x2111 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x5174 () Bool)
(declare-fun x4798 () Int)
(declare-fun x2434 () Int)
(declare-fun x86 () Bool)
(declare-fun x2666 () Bool)
(declare-fun x1187 () Int)
(declare-fun x3362 () Int)
(declare-fun x2953 () Int)
(declare-fun x3344 () Int)
(declare-fun x4151 () Int)
(declare-fun x5353 () Int)
(declare-fun x5636 () Bool)
(declare-fun x3843 () Bool)
(declare-fun x3220 () Bool)
(declare-fun x4535 () Int)
(declare-fun x5213 () Bool)
(declare-fun x1366 () Int)
(declare-fun x5444 () Int)
(declare-fun x4758 () Int)
(declare-fun x3699 () Int)
(declare-fun x5489 () Int)
(declare-fun x1778 () Int)
(declare-fun x3410 () Int)
(declare-fun x2122 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x5215 () Int)
(declare-fun x1790 () Int)
(declare-fun x2574 () Bool)
(declare-fun x4327 () Int)
(declare-fun x354 () Bool)
(declare-fun x3490 () Int)
(declare-fun x102 (Int) Int)
(declare-fun x303 () Int)
(declare-fun x2760 () Int)
(declare-fun x4540 () Int)
(declare-fun x3320 () Int)
(declare-fun x2430 () Int)
(declare-fun x3311 () Int)
(declare-fun x3552 () Int)
(declare-fun x1651 () Int)
(declare-fun x4016 () Int)
(declare-fun x797 () Int)
(declare-fun x1932 () Int)
(declare-fun x4803 () Bool)
(declare-fun x1526 () Int)
(declare-fun x5634 () Bool)
(declare-fun x774 () Int)
(declare-fun x4735 () Int)
(declare-fun x272 () Bool)
(declare-fun x304 () Bool)
(declare-fun x3723 () Bool)
(declare-fun x3485 () Int)
(declare-fun x1921 () Bool)
(declare-fun x4683 () Bool)
(declare-fun x2141 () Int)
(declare-fun x3355 () Int)
(declare-fun x1702 () Bool)
(declare-fun x3780 () Int)
(declare-fun x1096 () Bool)
(declare-fun x1371 () Int)
(declare-fun x1463 () Int)
(declare-fun x1272 () Bool)
(declare-fun x3365 () Bool)
(declare-fun x1869 () Int)
(declare-fun x658 () Int)
(declare-fun x5443 () Int)
(declare-fun x4773 () Int)
(declare-fun x5056 () Int)
(declare-fun x5442 () Bool)
(declare-fun x4461 () Int)
(declare-fun x3167 () Int)
(declare-fun x3208 () Bool)
(declare-fun x612 () Bool)
(declare-fun x5466 () Int)
(declare-fun x3930 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x3938 () Bool)
(declare-fun x3037 (Int) Int)
(declare-fun x3263 () Bool)
(declare-fun x2940 () Int)
(declare-fun x4925 () Int)
(declare-fun x583 () Int)
(declare-fun x5093 () Int)
(declare-fun x1858 () Int)
(declare-fun x993 () Int)
(declare-fun x4514 () Bool)
(declare-fun x1147 () Int)
(declare-fun x5445 () Int)
(declare-fun x63 () Int)
(declare-fun x2643 () Int)
(declare-fun x1961 () Int)
(declare-fun x3016 () Int)
(declare-fun x1958 () Bool)
(declare-fun x5166 () Int)
(declare-fun x5580 () Bool)
(declare-fun x5446 () Int)
(declare-fun x457 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x963 () Int)
(declare-fun x2297 () Bool)
(declare-fun x5407 () Int)
(declare-fun x2727 () Bool)
(declare-fun x3761 () Int)
(declare-fun x3468 () Int)
(declare-fun x2913 () Bool)
(declare-fun x4964 () Int)
(declare-fun x5070 () Int)
(declare-fun x3268 () Int)
(declare-fun x4800 () Bool)
(declare-fun x2567 () Int)
(declare-fun x5464 () Int)
(declare-fun x3587 () Bool)
(declare-fun x4322 () Int)
(declare-fun x5393 () Bool)
(declare-fun x4533 (Int) Int)
(declare-fun x2481 () Int)
(declare-fun x260 () Int)
(declare-fun x2814 () Int)
(declare-fun x4869 () Int)
(declare-fun x3582 () Int)
(declare-fun x875 () Int)
(declare-fun x562 () Bool)
(declare-fun x5020 () Int)
(declare-fun x1818 () Int)
(declare-fun x5522 () Bool)
(declare-fun x1677 () Int)
(declare-fun x2079 () Int)
(declare-fun x2296 () Bool)
(declare-fun x2881 () Bool)
(declare-fun x1115 () Int)
(declare-fun x2501 () Int)
(declare-fun x4929 () Int)
(declare-fun x3922 () Int)
(declare-fun x2300 (Int) Int)
(declare-fun x3807 () Bool)
(declare-fun x39 () Int)
(declare-fun x4345 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x3656 () Int)
(declare-fun x3738 () Int)
(declare-fun x2721 () Bool)
(declare-fun x4479 () Int)
(declare-fun x4984 () Int)
(declare-fun x1765 () Int)
(declare-fun x4008 () Int)
(declare-fun x2189 () Int)
(declare-fun x4360 () Int)
(declare-fun x464 () Bool)
(declare-fun x1833 () Int)
(declare-fun x57 () Int)
(declare-fun x1744 () Bool)
(declare-fun x4920 () Int)
(declare-fun x2806 () Bool)
(declare-fun x3082 () Bool)
(declare-fun x5610 () Int)
(declare-fun x5154 () Int)
(declare-fun x4627 () Int)
(declare-fun x811 () Bool)
(declare-fun x1549 () Int)
(declare-fun x3056 () Int)
(declare-fun x2620 () Bool)
(declare-fun x4577 () Int)
(declare-fun x5462 (Int) Int)
(declare-fun x1207 () Int)
(declare-fun x2954 () Int)
(declare-fun x3125 () Int)
(declare-fun x5075 () Int)
(declare-fun x4680 () Int)
(declare-fun x4674 () Int)
(declare-fun x5460 () Int)
(declare-fun x1196 () Int)
(declare-fun x3273 () Int)
(declare-fun x5026 () Int)
(declare-fun x403 () Bool)
(declare-fun x5597 () Int)
(declare-fun x4274 () Int)
(declare-fun x1951 () Int)
(declare-fun x3452 () Int)
(declare-fun x4373 () Bool)
(declare-fun x3443 () Bool)
(declare-fun x4323 () Int)
(declare-fun x361 () Bool)
(declare-fun x2114 () Int)
(declare-fun x957 () Int)
(declare-fun x2835 () Int)
(declare-fun x133 () Int)
(declare-fun x3547 (Int) Int)
(declare-fun x1146 () Int)
(declare-fun x3572 () Int)
(declare-fun x5551 () Int)
(declare-fun x2695 () Int)
(declare-fun x4155 () Int)
(declare-fun x2609 () Int)
(declare-fun x673 () Int)
(declare-fun x1797 () Bool)
(declare-fun x5061 () Int)
(declare-fun x2657 () Int)
(declare-fun x5549 () Int)
(declare-fun x4681 () Bool)
(declare-fun x4440 () Int)
(declare-fun x228 () Bool)
(declare-fun x1844 () Int)
(declare-fun x3708 () Int)
(declare-fun x3811 () Bool)
(declare-fun x5503 () Int)
(declare-fun x5401 () Int)
(declare-fun x941 () Int)
(declare-fun x2756 () Bool)
(declare-fun x2504 () Int)
(declare-fun x1860 () Int)
(declare-fun x4596 () Int)
(declare-fun x294 () Int)
(declare-fun x4562 () Int)
(declare-fun x3475 () Int)
(declare-fun x4162 () Int)
(declare-fun x955 () Int)
(declare-fun x2862 () Int)
(declare-fun x5218 () Int)
(declare-fun x5291 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x5433 () Bool)
(declare-fun x4876 () Bool)
(declare-fun x263 () Int)
(declare-fun x3817 () Bool)
(declare-fun x3276 () Int)
(declare-fun x3139 () Int)
(declare-fun x2489 () Bool)
(declare-fun x2718 () Int)
(declare-fun x2148 () Int)
(declare-fun x3530 () Int)
(declare-fun x2797 () Int)
(declare-fun x5053 () Bool)
(declare-fun x4376 () Bool)
(declare-fun x2256 () Int)
(declare-fun x1082 () Bool)
(declare-fun x2874 () Int)
(declare-fun x1336 () Int)
(declare-fun x2125 () Bool)
(declare-fun x3430 () Bool)
(declare-fun x4752 () Int)
(declare-fun x326 () Bool)
(declare-fun x803 () Int)
(declare-fun x5385 () Int)
(declare-fun x4559 () Bool)
(declare-fun x1827 () Int)
(declare-fun x3719 () Bool)
(declare-fun x1964 () Int)
(declare-fun x4265 () Int)
(declare-fun x1389 () Bool)
(declare-fun x473 () Int)
(declare-fun x4287 () Int)
(declare-fun x3991 () Bool)
(declare-fun x578 () Int)
(declare-fun x1894 () Int)
(declare-fun x3240 () Bool)
(declare-fun x4466 (Int) Int)
(declare-fun x1630 () Int)
(declare-fun x721 () Bool)
(declare-fun x987 () Bool)
(declare-fun x1399 () Int)
(declare-fun x5086 () Int)
(declare-fun x4354 () Int)
(declare-fun x604 (Int) Int)
(declare-fun x3563 () Int)
(declare-fun x1534 () Int)
(declare-fun x3063 () Bool)
(declare-fun x719 () Bool)
(declare-fun x322 () Int)
(declare-fun x1682 () Int)
(declare-fun x4555 () Bool)
(declare-fun x5546 () Int)
(declare-fun x1234 () Int)
(declare-fun x3079 () Int)
(declare-fun x2794 () Int)
(declare-fun x5160 () Int)
(declare-fun x3449 () Int)
(declare-fun x193 () Int)
(declare-fun x584 () Int)
(declare-fun x909 () Int)
(declare-fun x2456 () Int)
(declare-fun x2883 () Int)
(declare-fun x599 () Int)
(declare-fun x1001 () Bool)
(declare-fun x297 () Int)
(declare-fun x3000 () Int)
(declare-fun x3282 () Int)
(declare-fun x19 () Int)
(declare-fun x2815 () Bool)
(declare-fun x2629 () Int)
(declare-fun x187 () Int)
(declare-fun x1381 () Int)
(declare-fun x4382 () Int)
(declare-fun x423 () Int)
(declare-fun x4451 () Bool)
(declare-fun x1594 () Int)
(declare-fun x3954 () Int)
(declare-fun x3389 () Int)
(declare-fun x3370 () Int)
(declare-fun x2763 () Int)
(declare-fun x3133 () Int)
(declare-fun x3727 () Bool)
(declare-fun x3897 (Int) Int)
(declare-fun x1830 () Int)
(declare-fun x2358 () Int)
(declare-fun x3968 () Int)
(declare-fun x3652 () Int)
(declare-fun x571 () Int)
(declare-fun x3363 () Bool)
(declare-fun x334 () Int)
(declare-fun x4454 () Int)
(declare-fun x5624 () Bool)
(declare-fun x4772 () Int)
(declare-fun x755 () Bool)
(declare-fun x531 () Int)
(declare-fun x2479 () Int)
(declare-fun x650 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x956 (Int) Int)
(declare-fun x5569 () Int)
(declare-fun x1283 () Int)
(declare-fun x4092 () Int)
(declare-fun x5038 () Int)
(declare-fun x3808 () Int)
(declare-fun x2674 () Int)
(declare-fun x5241 () Bool)
(declare-fun x4396 () Int)
(declare-fun x3025 () Int)
(declare-fun x2186 () Bool)
(declare-fun x1746 () Int)
(declare-fun x521 () Bool)
(declare-fun x3846 () Int)
(declare-fun x4056 () Int)
(declare-fun x2889 () Int)
(declare-fun x5253 () Bool)
(declare-fun x674 () Int)
(declare-fun x136 () Bool)
(declare-fun x577 () Int)
(declare-fun x2759 () Bool)
(declare-fun x1335 () Int)
(declare-fun x1257 () Int)
(declare-fun x4526 () Bool)
(declare-fun x5088 () Int)
(declare-fun x699 () Int)
(declare-fun x4477 () Int)
(declare-fun x3944 () Bool)
(declare-fun x5290 () Int)
(declare-fun x2632 () Int)
(declare-fun x292 () Int)
(declare-fun x1557 () Int)
(declare-fun x778 () Bool)
(declare-fun x276 () Int)
(declare-fun x5079 () Bool)
(declare-fun x4144 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x3967 () Int)
(declare-fun x5492 (Int) Int)
(declare-fun x2121 () Int)
(declare-fun x964 () Int)
(declare-fun x222 () Int)
(declare-fun x907 () Int)
(declare-fun x5642 () Bool)
(declare-fun x3731 () Int)
(declare-fun x504 () Int)
(declare-fun x5091 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x4593 () Int)
(declare-fun x3789 (Int Int Int Int Int) Int)
(declare-fun x3847 () Int)
(declare-fun x4079 () Int)
(declare-fun x5387 () Bool)
(declare-fun x4258 () Int)
(declare-fun x5182 () Bool)
(declare-fun x72 () Int)
(declare-fun x4335 () Int)
(declare-fun x5112 () Bool)
(declare-fun x2923 () Bool)
(declare-fun x2140 () Int)
(declare-fun x5186 () Bool)
(declare-fun x4592 () Int)
(declare-fun x379 () Int)
(declare-fun x2970 () Int)
(declare-fun x4902 () Bool)
(declare-fun x3201 () Int)
(declare-fun x2587 (Int) Int)
(declare-fun x3581 () Bool)
(declare-fun x5367 () Bool)
(declare-fun x1266 () Int)
(declare-fun x995 () Int)
(declare-fun x866 () Int)
(declare-fun x1851 () Int)
(declare-fun x3607 () Int)
(declare-fun x1669 () Bool)
(declare-fun x2469 () Int)
(declare-fun x2849 () Bool)
(declare-fun x4456 () Int)
(declare-fun x1855 () Int)
(declare-fun x1476 () Int)
(declare-fun x3136 () Int)
(declare-fun x2131 () Int)
(declare-fun x1401 () Int)
(declare-fun x5001 () Bool)
(declare-fun x2644 () Int)
(declare-fun x1063 () Int)
(declare-fun x4240 () Int)
(declare-fun x5543 () Int)
(declare-fun x4333 () Bool)
(declare-fun x4888 () Bool)
(declare-fun x3879 () Int)
(declare-fun x649 () Bool)
(declare-fun x3822 () Int)
(declare-fun x4597 () Int)
(declare-fun x854 () Int)
(declare-fun x4004 () Int)
(declare-fun x2971 () Int)
(declare-fun x5408 () Int)
(declare-fun x1002 () Int)
(declare-fun x4843 () Int)
(declare-fun x912 () Bool)
(declare-fun x477 () Int)
(declare-fun x1563 () Int)
(declare-fun x4278 () Int)
(declare-fun x1368 () Int)
(declare-fun x1020 () Int)
(declare-fun x4248 () Int)
(declare-fun x215 () Bool)
(declare-fun x4975 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x5060 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x4184 () Int)
(declare-fun x5453 () Int)
(declare-fun x2280 () Int)
(declare-fun x3753 () Int)
(declare-fun x2476 () Int)
(declare-fun x4132 () Int)
(declare-fun x4001 () Bool)
(declare-fun x4018 () Int)
(declare-fun x3588 () Int)
(declare-fun x1375 () Int)
(declare-fun x2051 () Bool)
(declare-fun x5162 () Bool)
(declare-fun x147 () Bool)
(declare-fun x4822 () Int)
(declare-fun x2545 () Bool)
(declare-fun x5005 (Int) Int)
(declare-fun x5272 () Bool)
(declare-fun x3521 () Bool)
(declare-fun x898 () Bool)
(declare-fun x1338 () Int)
(declare-fun x3538 () Int)
(declare-fun x2505 () Int)
(declare-fun x1188 () Int)
(declare-fun x1391 () Int)
(declare-fun x769 () Int)
(declare-fun x471 () Int)
(declare-fun x4168 () Int)
(declare-fun x2725 () Int)
(declare-fun x4967 () Bool)
(declare-fun x5176 () Bool)
(declare-fun x5225 () Int)
(declare-fun x3141 () Int)
(declare-fun x3422 () Int)
(declare-fun x91 () Bool)
(declare-fun x2107 () Int)
(declare-fun x4877 () Int)
(declare-fun x3360 () Bool)
(declare-fun x3541 () Bool)
(declare-fun x1646 () Int)
(declare-fun x3211 () Bool)
(declare-fun x5512 () Bool)
(declare-fun x2921 () Int)
(declare-fun x3686 () Bool)
(declare-fun x5341 () Bool)
(declare-fun x823 () Int)
(declare-fun x1931 () Int)
(declare-fun x2081 () Bool)
(declare-fun x3796 () Int)
(declare-fun x4927 () Int)
(declare-fun x3663 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x4986 () Bool)
(declare-fun x747 () Int)
(declare-fun x695 () Bool)
(declare-fun x2751 () Int)
(declare-fun x3894 () Int)
(declare-fun x4470 () Int)
(declare-fun x127 () Bool)
(declare-fun x162 () Int)
(declare-fun x2415 () Bool)
(declare-fun x5015 () Int)
(declare-fun x309 () Int)
(declare-fun x1846 () Int)
(declare-fun x923 () Int)
(declare-fun x2432 () Bool)
(declare-fun x4133 () Int)
(declare-fun x5183 () Bool)
(declare-fun x1828 () Int)
(declare-fun x1613 () Int)
(declare-fun x3093 () Bool)
(declare-fun x224 () Int)
(declare-fun x3092 () Bool)
(declare-fun x2438 () Int)
(declare-fun x2412 () Bool)
(declare-fun x4848 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x1171 () Int)
(declare-fun x1578 () Int)
(declare-fun x5313 () Int)
(declare-fun x5302 () Int)
(declare-fun x2336 () Int)
(declare-fun x3347 () Int)
(declare-fun x1194 () Int)
(declare-fun x1469 () Bool)
(declare-fun x4868 () Int)
(declare-fun x3806 () Int)
(declare-fun x2543 () Int)
(declare-fun x5057 () Bool)
(declare-fun x3077 () Bool)
(declare-fun x248 () Bool)
(declare-fun x4571 () Int)
(declare-fun x3301 () Int)
(declare-fun x2008 () Int)
(declare-fun x4316 () Bool)
(declare-fun x5234 () Int)
(declare-fun x301 () Int)
(declare-fun x3384 () Bool)
(declare-fun x796 () Int)
(declare-fun x2992 () Int)
(declare-fun x4538 () Int)
(declare-fun x305 () Int)
(declare-fun x2941 () Int)
(declare-fun x5316 () Bool)
(declare-fun x962 () Int)
(declare-fun x4814 () Bool)
(declare-fun x3165 () Int)
(declare-fun x4587 () Bool)
(declare-fun x701 () Int)
(declare-fun x2373 () Int)
(declare-fun x92 () Int)
(declare-fun x5648 () Int)
(declare-fun x1278 () Int)
(declare-fun x738 () Int)
(declare-fun x2951 () Int)
(declare-fun x2690 () Int)
(declare-fun x3742 () Int)
(declare-fun x148 () Int)
(declare-fun x3577 () Int)
(declare-fun x3199 () Bool)
(declare-fun x934 () Int)
(declare-fun x983 () Bool)
(declare-fun x285 () Int)
(declare-fun x5474 () Int)
(declare-fun x870 () Bool)
(declare-fun x409 () Bool)
(declare-fun x1285 () Int)
(declare-fun x4153 () Int)
(declare-fun x5151 () Bool)
(declare-fun x4863 (Int) Int)
(declare-fun x4458 () Int)
(declare-fun x217 () Int)
(declare-fun x1906 () Bool)
(declare-fun x1788 () Int)
(declare-fun x3970 () Int)
(declare-fun x3685 () Int)
(declare-fun x1719 () Int)
(declare-fun x1977 () Bool)
(declare-fun x4576 () Bool)
(declare-fun x847 () Int)
(declare-fun x3110 () Int)
(declare-fun x5224 () Int)
(declare-fun x2864 () Int)
(declare-fun x1032 () Bool)
(declare-fun x3638 () Int)
(declare-fun x2399 () Bool)
(declare-fun x1816 () Int)
(declare-fun x4236 () Int)
(declare-fun x74 () Bool)
(declare-fun x5207 () Bool)
(declare-fun x3997 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x2909 (Int) Int)
(declare-fun x1997 () Int)
(declare-fun x2786 () Bool)
(declare-fun x1656 () Int)
(declare-fun x5476 () Bool)
(declare-fun x3447 () Int)
(declare-fun x3668 () Int)
(declare-fun x959 () Int)
(declare-fun x3456 () Int)
(declare-fun x4725 () Int)
(declare-fun x1167 () Bool)
(declare-fun x4871 () Bool)
(declare-fun x381 () Bool)
(declare-fun x1291 (Int) Int)
(declare-fun x1812 () Int)
(declare-fun x4854 () Bool)
(declare-fun x707 () Int)
(declare-fun x2103 () Bool)
(declare-fun x2816 () Bool)
(declare-fun x2750 () Int)
(declare-fun x1628 () Int)
(declare-fun x76 () Int)
(declare-fun x1351 () Bool)
(declare-fun x693 () Int)
(declare-fun x2584 () Int)
(declare-fun x1228 (Int Int Int Int Int Int) Int)
(declare-fun x2846 () Bool)
(declare-fun x5539 () Int)
(declare-fun x2956 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x4294 () Int)
(declare-fun x5223 () Int)
(declare-fun x2452 () Int)
(declare-fun x5390 () Bool)
(declare-fun x2247 () Bool)
(declare-fun x2899 () Int)
(declare-fun x4653 () Int)
(declare-fun x2535 () Int)
(declare-fun x573 () Int)
(declare-fun x2269 () Int)
(declare-fun x1786 () Int)
(declare-fun x2239 () Bool)
(declare-fun x2867 () Int)
(declare-fun x3696 () Bool)
(declare-fun x4861 () Int)
(declare-fun x13 () Bool)
(declare-fun x4988 () Int)
(declare-fun x1795 () Int)
(declare-fun x1174 () Int)
(declare-fun x981 () Int)
(declare-fun x3251 () Int)
(declare-fun x3987 () Int)
(declare-fun x2232 () Int)
(declare-fun x4527 (Int) Int)
(declare-fun x871 () Int)
(declare-fun x3614 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x4874 () Int)
(declare-fun x2544 () Int)
(declare-fun x5362 () Int)
(declare-fun x3840 (Int) Int)
(declare-fun x4781 () Int)
(declare-fun x2754 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x2283 () Int)
(declare-fun x2478 () Int)
(declare-fun x804 () Int)
(declare-fun x1940 () Int)
(declare-fun x2871 () Bool)
(declare-fun x3231 () Int)
(declare-fun x1614 () Bool)
(declare-fun x2506 () Int)
(declare-fun x4632 () Int)
(declare-fun x2255 () Bool)
(declare-fun x368 () Int)
(declare-fun x387 () Int)
(declare-fun x5595 () Int)
(declare-fun x1881 () Int)
(declare-fun x4714 () Bool)
(declare-fun x1584 () Int)
(declare-fun x5008 () Bool)
(declare-fun x3055 () Int)
(declare-fun x2966 () Bool)
(declare-fun x5117 () Int)
(declare-fun x1704 () Int)
(declare-fun x95 () Int)
(declare-fun x1553 () Int)
(declare-fun x3407 () Int)
(declare-fun x4506 () Int)
(declare-fun x2272 () Int)
(declare-fun x2710 () Bool)
(declare-fun x4483 () Int)
(declare-fun x2980 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x874 () Int)
(declare-fun x1517 () Bool)
(declare-fun x2263 () Int)
(declare-fun x2687 () Bool)
(declare-fun x5085 () Int)
(declare-fun x2387 () Int)
(declare-fun x5349 () Int)
(declare-fun x299 () Int)
(declare-fun x1390 () Int)
(declare-fun x2667 () Bool)
(declare-fun x5062 () Int)
(declare-fun x5163 () Int)
(declare-fun x3356 () Int)
(declare-fun x3574 () Int)
(declare-fun x3996 () Int)
(declare-fun x2566 () Int)
(declare-fun x5579 () Int)
(declare-fun x1836 () Int)
(declare-fun x2012 () Int)
(declare-fun x5435 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x5620 () Bool)
(declare-fun x3009 () Bool)
(declare-fun x4499 () Int)
(declare-fun x1587 () Int)
(declare-fun x4865 (Int) Int)
(declare-fun x4733 () Int)
(declare-fun x1378 () Int)
(declare-fun x4453 () Int)
(declare-fun x3963 () Bool)
(declare-fun x3500 () Int)
(declare-fun x2137 () Int)
(declare-fun x668 () Bool)
(declare-fun x1058 () Int)
(declare-fun x3881 () Bool)
(declare-fun x4518 () Bool)
(declare-fun x2776 () Int)
(declare-fun x3062 () Int)
(declare-fun x1213 () Int)
(declare-fun x1118 () Int)
(declare-fun x4792 () Int)
(declare-fun x548 () Int)
(declare-fun x3466 () Bool)
(declare-fun x5409 () Bool)
(declare-fun x4418 () Int)
(declare-fun x3250 () Int)
(declare-fun x234 () Bool)
(declare-fun x4746 () Int)
(declare-fun x2394 () Int)
(declare-fun x284 () Int)
(declare-fun x5320 () Int)
(declare-fun x3112 () Int)
(declare-fun x4952 () Bool)
(declare-fun x5303 () Int)
(declare-fun x1110 () Int)
(declare-fun x2409 () Bool)
(declare-fun x2592 (Int) Int)
(declare-fun x1223 () Int)
(declare-fun x2531 () Int)
(declare-fun x4747 () Int)
(declare-fun x1691 () Int)
(declare-fun x344 () Bool)
(declare-fun x4020 () Int)
(declare-fun x1848 () Int)
(declare-fun x3596 () Int)
(declare-fun x843 () Int)
(declare-fun x2109 () Bool)
(declare-fun x3264 () Int)
(declare-fun x3150 () Bool)
(declare-fun x1038 () Int)
(declare-fun x2321 () Int)
(declare-fun x2662 () Int)
(declare-fun x787 () Bool)
(declare-fun x1542 () Int)
(declare-fun x5586 () Int)
(declare-fun x3682 () Bool)
(declare-fun x2281 () Int)
(declare-fun x2231 () Int)
(declare-fun x129 () Bool)
(declare-fun x2144 () Int)
(declare-fun x268 () Int)
(declare-fun x3252 () Int)
(declare-fun x273 () Int)
(declare-fun x3292 () Bool)
(declare-fun x5120 () Int)
(declare-fun x2715 () Int)
(declare-fun x5135 () Bool)
(declare-fun x4334 () Int)
(declare-fun x4478 () Int)
(declare-fun x194 () Int)
(declare-fun x4875 () Int)
(declare-fun x2934 () Int)
(declare-fun x1061 () Int)
(declare-fun x2242 () Bool)
(declare-fun x411 () Int)
(declare-fun x2841 () Int)
(declare-fun x2680 () Bool)
(declare-fun x3779 () Int)
(declare-fun x4516 () Int)
(declare-fun x660 () Bool)
(declare-fun x4250 () Int)
(declare-fun x5214 () Bool)
(declare-fun x4712 () Bool)
(declare-fun x3918 () Int)
(declare-fun x3973 () Int)
(declare-fun x311 () Int)
(declare-fun x3556 () Int)
(declare-fun x5605 () Int)
(declare-fun x3726 () Bool)
(declare-fun x4721 () Int)
(declare-fun x3497 () Int)
(declare-fun x339 () Int)
(declare-fun x4673 () Int)
(declare-fun x307 () Int)
(declare-fun x850 () Int)
(declare-fun x4147 () Int)
(declare-fun x2458 () Bool)
(declare-fun x4127 () Int)
(declare-fun x4379 () Int)
(declare-fun x1712 () Bool)
(declare-fun x4433 () Bool)
(declare-fun x4915 () Int)
(declare-fun x2299 () Bool)
(declare-fun x4332 () Int)
(declare-fun x4318 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x1249 () Int)
(declare-fun x4186 () Bool)
(declare-fun x2499 (Int) Int)
(declare-fun x3119 () Bool)
(declare-fun x5236 () Bool)
(declare-fun x3867 () Int)
(declare-fun x4309 (Int) Int)
(declare-fun x242 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x611 () Bool)
(declare-fun x5359 () Bool)
(declare-fun x5121 () Int)
(declare-fun x1690 () Bool)
(declare-fun x4643 () Int)
(declare-fun x3103 () Int)
(declare-fun x1666 () Int)
(declare-fun x4788 () Bool)
(declare-fun x16 () Bool)
(declare-fun x2436 (Int Int) Int)
(declare-fun x3189 () Int)
(declare-fun x547 () Bool)
(declare-fun x1087 () Int)
(declare-fun x2764 () Int)
(declare-fun x2596 () Bool)
(declare-fun x4459 () Bool)
(declare-fun x1752 () Int)
(declare-fun x4140 () Int)
(declare-fun x1808 () Int)
(declare-fun x4791 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1114 () Int)
(declare-fun x5571 () Bool)
(declare-fun x815 () Bool)
(declare-fun x2808 () Bool)
(declare-fun x238 () Int)
(declare-fun x1470 () Int)
(declare-fun x2672 () Int)
(declare-fun x4541 () Int)
(declare-fun x3644 () Bool)
(declare-fun x3287 () Int)
(declare-fun x1004 () Int)
(declare-fun x2093 () Bool)
(declare-fun x4971 () Int)
(declare-fun x3138 () Int)
(declare-fun x5559 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1917 () Int)
(declare-fun x507 () Int)
(declare-fun x3392 () Int)
(declare-fun x3851 () Bool)
(declare-fun x5545 () Int)
(declare-fun x5574 () Int)
(declare-fun x4884 () Int)
(declare-fun x11 () Int)
(declare-fun x5599 () Int)
(declare-fun x3158 () Int)
(declare-fun x1323 () Int)
(declare-fun x4550 () Bool)
(declare-fun x610 () Int)
(declare-fun x3071 () Int)
(declare-fun x5583 () Int)
(declare-fun x1027 () Int)
(declare-fun x4364 () Int)
(declare-fun x986 () Int)
(declare-fun x1689 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x2523 () Int)
(declare-fun x2655 () Int)
(declare-fun x108 () Int)
(declare-fun x2024 () Bool)
(declare-fun x2558 () Int)
(declare-fun x5566 () Int)
(declare-fun x678 () Int)
(declare-fun x1133 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x4188 () Bool)
(declare-fun x204 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x4893 () Int)
(declare-fun x1077 () Int)
(declare-fun x3603 () Bool)
(declare-fun x2472 () Int)
(declare-fun x2925 () Int)
(declare-fun x1805 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x3375 () Int)
(declare-fun x2028 () Int)
(declare-fun x18 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x4923 () Int)
(declare-fun x1347 () Bool)
(declare-fun x5488 () Int)
(declare-fun x1292 () Int)
(declare-fun x1755 () Bool)
(declare-fun x41 () Int)
(declare-fun x3498 () Int)
(declare-fun x1271 () Bool)
(declare-fun x2503 () Int)
(declare-fun x5465 () Int)
(declare-fun x463 () Bool)
(declare-fun x3096 (Int) Int)
(declare-fun x5137 () Int)
(declare-fun x5244 (Int) Int)
(declare-fun x3163 () Int)
(declare-fun x1107 () Int)
(declare-fun x60 () Bool)
(declare-fun x2389 () Bool)
(declare-fun x15 () Bool)
(declare-fun x3589 () Int)
(declare-fun x1098 () Int)
(declare-fun x3313 () Int)
(declare-fun x4510 () Int)
(declare-fun x2836 () Int)
(declare-fun x486 () Int)
(declare-fun x1177 () Int)
(declare-fun x5342 () Int)
(declare-fun x2684 () Bool)
(declare-fun x5572 () Int)
(declare-fun x1676 () Int)
(declare-fun x2919 () Int)
(declare-fun x2922 () Bool)
(declare-fun x3286 () Int)
(declare-fun x657 () Bool)
(declare-fun x4129 () Int)
(declare-fun x1847 () Bool)
(declare-fun x343 () Bool)
(declare-fun x5314 () Bool)
(declare-fun x1918 () Int)
(declare-fun x2798 () Int)
(declare-fun x4936 () Int)
(declare-fun x1577 () Int)
(declare-fun x394 () Bool)
(declare-fun x4806 () Int)
(declare-fun x2594 () Int)
(declare-fun x511 () Int)
(declare-fun x3974 () Int)
(declare-fun x1442 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x3570 () Int)
(declare-fun x4707 () Int)
(declare-fun x4150 () Int)
(declare-fun x180 () Int)
(declare-fun x598 () Int)
(declare-fun x3333 (Int) Int)
(declare-fun x3795 () Int)
(declare-fun x4338 () Int)
(declare-fun x1427 () Bool)
(declare-fun x2785 () Int)
(declare-fun x5104 () Int)
(declare-fun x718 () Bool)
(declare-fun x4695 () Int)
(declare-fun x4943 () Int)
(declare-fun x1597 () Int)
(declare-fun x325 () Int)
(declare-fun x3919 (Int) Int)
(declare-fun x2484 () Bool)
(declare-fun x4431 () Int)
(declare-fun x2046 () Int)
(declare-fun x3414 () Int)
(declare-fun x1024 () Int)
(declare-fun x3397 () Int)
(declare-fun x113 () Bool)
(declare-fun x1042 () Int)
(declare-fun x710 () Int)
(declare-fun x4255 () Int)
(declare-fun x1054 () Int)
(declare-fun x1006 () Int)
(declare-fun x1041 () Int)
(declare-fun x5066 () Bool)
(declare-fun x1697 () Int)
(declare-fun x1605 () Int)
(declare-fun x1312 () Int)
(declare-fun x4091 () Bool)
(declare-fun x4301 () Int)
(declare-fun x2723 () Int)
(declare-fun x3571 () Int)
(declare-fun x4765 () Bool)
(declare-fun x1550 () Int)
(declare-fun x3514 () Int)
(declare-fun x3809 () Int)
(declare-fun x526 () Int)
(declare-fun x4201 () Bool)
(declare-fun x402 () Int)
(declare-fun x2170 () Int)
(declare-fun x4688 () Int)
(declare-fun x1298 () Int)
(declare-fun x1979 () Int)
(declare-fun x4898 () Bool)
(declare-fun x2553 () Int)
(declare-fun x2036 () Int)
(declare-fun x3217 () Bool)
(declare-fun x3405 () Int)
(declare-fun x3660 () Int)
(declare-fun x1660 () Bool)
(declare-fun x4436 () Bool)
(declare-fun x4013 () Int)
(declare-fun x4736 () Int)
(declare-fun x174 () Int)
(declare-fun x1412 () Int)
(declare-fun x743 () Bool)
(declare-fun x1409 () Int)
(declare-fun x2783 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x329 () Int)
(declare-fun x5138 (Int) Int)
(declare-fun x4482 () Int)
(declare-fun x3412 () Bool)
(declare-fun x2936 () Bool)
(declare-fun x218 () Int)
(declare-fun x1806 () Int)
(declare-fun x3026 () Int)
(declare-fun x3060 () Bool)
(declare-fun x1405 () Int)
(declare-fun x4472 (Int) Int)
(declare-fun x3692 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x557 () Int)
(declare-fun x5635 () Bool)
(declare-fun x3908 () Int)
(declare-fun x4763 () Int)
(declare-fun x1537 () Int)
(declare-fun x4213 () Int)
(declare-fun x834 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x5480 () Int)
(declare-fun x4473 () Bool)
(declare-fun x3428 () Int)
(declare-fun x4293 () Bool)
(declare-fun x440 () Bool)
(declare-fun x675 () Int)
(declare-fun x4302 () Bool)
(declare-fun x1531 () Int)
(declare-fun x4352 () Int)
(declare-fun x2600 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x1201 () Int)
(declare-fun x4006 () Bool)
(declare-fun x1803 () Int)
(declare-fun x5108 () Int)
(declare-fun x3845 (Int) Int)
(declare-fun x1912 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x3952 () Int)
(declare-fun x3130 () Int)
(declare-fun x4620 () Int)
(declare-fun x3151 () Bool)
(declare-fun x5179 () Int)
(declare-fun x5615 () Int)
(declare-fun x1643 () Int)
(declare-fun x5494 () Bool)
(declare-fun x2741 () Int)
(declare-fun x87 () Int)
(declare-fun x3993 () Bool)
(declare-fun x126 () Int)
(declare-fun x3122 () Int)
(declare-fun x1749 () Int)
(declare-fun x5398 () Int)
(declare-fun x3616 () Bool)
(declare-fun x2172 () Int)
(declare-fun x4991 () Int)
(declare-fun x3340 () Int)
(declare-fun x1658 () Int)
(declare-fun x3802 () Int)
(declare-fun x2652 () Int)
(declare-fun x5130 () Int)
(declare-fun x3259 () Int)
(declare-fun x43 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1573 () Int)
(declare-fun x3084 () Int)
(declare-fun x462 () Int)
(declare-fun x4246 () Int)
(declare-fun x1218 (Int) Int)
(declare-fun x5195 () Int)
(declare-fun x2692 () Int)
(declare-fun x3548 () Int)
(declare-fun x484 () Int)
(declare-fun x4415 () Int)
(declare-fun x5623 () Bool)
(declare-fun x2738 () Int)
(declare-fun x2945 () Int)
(declare-fun x3196 (Int) Int)
(declare-fun x4652 () Int)
(declare-fun x685 () Int)
(declare-fun x4438 () Bool)
(declare-fun x5212 (Int) Int)
(declare-fun x1574 () Int)
(declare-fun x3689 () Int)
(declare-fun x328 () Int)
(declare-fun x461 () Bool)
(declare-fun x4114 () Int)
(declare-fun x2265 () Int)
(declare-fun x1713 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x5198 () Int)
(declare-fun x4847 () Int)
(declare-fun x3885 () Int)
(declare-fun x2942 () Int)
(declare-fun x2809 () Int)
(declare-fun x3460 () Int)
(declare-fun x4969 () Int)
(declare-fun x2625 () Bool)
(declare-fun x2991 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x509 () Int)
(declare-fun x35 () Bool)
(declare-fun x4202 () Int)
(declare-fun x2070 () Int)
(declare-fun x2703 () Int)
(declare-fun x4859 () Int)
(declare-fun x4242 () Bool)
(declare-fun x207 () Int)
(declare-fun x205 () Bool)
(declare-fun x2665 () Int)
(declare-fun x1337 () Int)
(declare-fun x3492 () Int)
(declare-fun x1453 () Bool)
(declare-fun x5164 () Bool)
(declare-fun x419 () Bool)
(declare-fun x1175 () Int)
(declare-fun x5123 () Int)
(declare-fun x1796 () Int)
(declare-fun x3697 () Int)
(declare-fun x684 () Int)
(declare-fun x5159 () Int)
(declare-fun x1011 () Bool)
(declare-fun x3606 () Int)
(declare-fun x1449 () Bool)
(declare-fun x5547 () Int)
(declare-fun x3965 () Int)
(declare-fun x1416 () Int)
(declare-fun x3494 () Int)
(declare-fun x247 () Int)
(declare-fun x1491 () Int)
(declare-fun x5009 (Int Int) Int)
(declare-fun x1143 () Bool)
(declare-fun x3951 () Int)
(declare-fun x4267 () Int)
(declare-fun x2030 () Int)
(declare-fun x4074 () Int)
(declare-fun x28 () Int)
(declare-fun x5325 () Int)
(declare-fun x2926 () Int)
(declare-fun x868 () Int)
(declare-fun x5441 () Int)
(declare-fun x3518 () Bool)
(declare-fun x3630 () Int)
(declare-fun x5355 () Bool)
(declare-fun x4017 () Int)
(declare-fun x3526 () Int)
(declare-fun x5175 () Bool)
(declare-fun x2042 () Int)
(declare-fun x1089 () Int)
(declare-fun x2175 () Bool)
(declare-fun x3207 () Int)
(declare-fun x3411 () Int)
(declare-fun x3754 (Int) Int)
(declare-fun x396 () Int)
(declare-fun x4273 () Int)
(declare-fun x904 () Int)
(declare-fun x4355 () Int)
(declare-fun x1156 () Bool)
(declare-fun x4523 () Bool)
(declare-fun x2027 () Int)
(declare-fun x3467 () Int)
(declare-fun x4701 () Int)
(declare-fun x4328 () Bool)
(declare-fun x3382 () Int)
(declare-fun x4684 () Int)
(declare-fun x1730 () Int)
(declare-fun x2021 () Int)
(declare-fun x1883 () Int)
(declare-fun x3916 () Int)
(declare-fun x71 () Bool)
(declare-fun x3326 () Int)
(declare-fun x4178 () Bool)
(declare-fun x3366 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x5077 () Bool)
(declare-fun x2842 () Int)
(declare-fun x2291 () Int)
(declare-fun x2488 () Int)
(declare-fun x3281 () Bool)
(declare-fun x4347 () Int)
(declare-fun x4771 () Int)
(declare-fun x2517 () Bool)
(declare-fun x4163 () Int)
(declare-fun x3683 () Int)
(declare-fun x5622 () Int)
(declare-fun x1974 () Bool)
(declare-fun x4170 () Int)
(declare-fun x3031 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x4993 () Bool)
(declare-fun x4399 () Bool)
(declare-fun x1311 () Int)
(declare-fun x143 () Int)
(declare-fun x4403 () Bool)
(declare-fun x5582 () Int)
(declare-fun x1180 () Int)
(declare-fun x5575 () Int)
(declare-fun x3976 () Int)
(declare-fun x3474 () Bool)
(declare-fun x4812 () Int)
(declare-fun x608 () Int)
(declare-fun x1533 () Bool)
(declare-fun x4123 () Int)
(declare-fun x4330 () Int)
(declare-fun x2610 () Bool)
(declare-fun x879 () Bool)
(declare-fun x4423 () Int)
(declare-fun x4097 () Bool)
(declare-fun x4104 () Int)
(declare-fun x977 () Bool)
(declare-fun x712 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x1909 () Int)
(declare-fun x171 () Bool)
(declare-fun x3487 () Int)
(declare-fun x4949 () Int)
(declare-fun x1019 () Bool)
(declare-fun x2347 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x2286 () Int)
(declare-fun x828 () Int)
(declare-fun x5383 () Bool)
(declare-fun x221 () Int)
(declare-fun x5261 () Bool)
(declare-fun x4601 () Int)
(declare-fun x5047 () Bool)
(declare-fun x376 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x22 () Int)
(declare-fun x1326 () Bool)
(declare-fun x5000 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x5256 () Bool)
(declare-fun x128 () Int)
(declare-fun x5604 () Int)
(declare-fun x1839 () Int)
(declare-fun x2177 () Int)
(declare-fun x2156 () Int)
(declare-fun x877 () Bool)
(declare-fun x4749 () Bool)
(declare-fun x2539 () Bool)
(declare-fun x5299 () Int)
(declare-fun x1443 () Int)
(declare-fun x118 () Bool)
(declare-fun x5381 () Int)
(declare-fun x714 () Int)
(declare-fun x5180 () Int)
(declare-fun x742 () Int)
(declare-fun x3409 () Int)
(declare-fun x64 () Bool)
(declare-fun x249 () Int)
(declare-fun x479 () Bool)
(declare-fun x784 () Int)
(declare-fun x3717 () Bool)
(declare-fun x3718 () Bool)
(declare-fun x210 () Int)
(declare-fun x4728 () Int)
(declare-fun x3702 () Int)
(declare-fun x5357 () Int)
(declare-fun x1066 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x4189 () Bool)
(declare-fun x3877 (Int) Int)
(declare-fun x2130 () Int)
(declare-fun x3104 () Int)
(declare-fun x4043 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1094 () Int)
(declare-fun x602 () Int)
(declare-fun x929 () Int)
(declare-fun x1282 () Int)
(declare-fun x4414 () Bool)
(declare-fun x2440 () Int)
(declare-fun x2376 () Bool)
(declare-fun x3866 () Int)
(declare-fun x5645 () Bool)
(declare-fun x2020 () Int)
(declare-fun x3878 () Int)
(declare-fun x5365 () Bool)
(declare-fun x3168 () Int)
(declare-fun x4896 () Bool)
(declare-fun x3242 () Int)
(declare-fun x3299 () Bool)
(declare-fun x2034 () Int)
(declare-fun x2522 () Int)
(declare-fun x760 () Int)
(declare-fun x2180 () Bool)
(declare-fun x3999 () Int)
(declare-fun x1467 () Int)
(declare-fun x2974 () Bool)
(declare-fun x2426 () Int)
(declare-fun x4298 () Int)
(declare-fun x4588 () Int)
(declare-fun x2552 () Int)
(declare-fun x5289 () Bool)
(declare-fun x4546 () Int)
(declare-fun x3309 (Int) Int)
(declare-fun x4905 () Int)
(declare-fun x1741 () Bool)
(declare-fun x3462 () Bool)
(declare-fun x1988 () Bool)
(declare-fun x4960 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x4244 () Int)
(declare-fun x167 () Int)
(declare-fun x3023 () Int)
(declare-fun x3520 () Int)
(declare-fun x2590 () Int)
(declare-fun x4297 () Int)
(declare-fun x5563 () Int)
(declare-fun x2638 () Int)
(declare-fun x2068 () Bool)
(declare-fun x2701 () Bool)
(declare-fun x4887 () Bool)
(declare-fun x4134 () Int)
(declare-fun x4808 () Bool)
(declare-fun x4536 () Bool)
(declare-fun x4622 () Bool)
(declare-fun x566 () Int)
(declare-fun x5007 () Bool)
(declare-fun x1357 () Int)
(declare-fun x4130 () Int)
(declare-fun x2155 () Int)
(declare-fun x3247 (Int) Int)
(declare-fun x2641 () Bool)
(declare-fun x498 () Int)
(declare-fun x4981 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1081 () Int)
(declare-fun x5510 () Int)
(declare-fun x3099 () Bool)
(declare-fun x5132 () Int)
(declare-fun x2658 () Bool)
(declare-fun x1845 () Int)
(declare-fun x691 () Int)
(declare-fun x914 () Int)
(declare-fun x3969 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x3903 () Bool)
(declare-fun x2305 () Int)
(declare-fun x4033 () Bool)
(declare-fun x2838 () Int)
(declare-fun x1307 () Int)
(declare-fun x3704 () Int)
(declare-fun x2011 () Bool)
(declare-fun x4815 () Bool)
(declare-fun x4119 () Int)
(declare-fun x5637 () Bool)
(declare-fun x1078 () Int)
(declare-fun x978 () Bool)
(declare-fun x3906 () Int)
(declare-fun x4565 () Int)
(declare-fun x3396 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x3977 () Int)
(declare-fun x2475 () Int)
(declare-fun x2465 (Int) Int)
(declare-fun x2315 () Int)
(declare-fun x621 () Bool)
(declare-fun x895 () Int)
(declare-fun x5288 () Int)
(declare-fun x4703 (Int) Int)
(declare-fun x4116 () Int)
(declare-fun x5139 () Int)
(declare-fun x2385 () Int)
(declare-fun x5467 () Int)
(declare-fun x4606 () Int)
(declare-fun x1426 () Int)
(declare-fun x2396 () Int)
(declare-fun x4485 () Bool)
(declare-fun x5432 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x94 () Bool)
(declare-fun x5083 () Int)
(declare-fun x201 () Bool)
(declare-fun x4096 () Int)
(declare-fun x2091 () Int)
(declare-fun x1562 () Int)
(declare-fun x1865 () Int)
(declare-fun x3329 () Bool)
(declare-fun x4212 () Int)
(declare-fun x4305 () Int)
(declare-fun x5425 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x4635 () Bool)
(declare-fun x4101 () Int)
(declare-fun x1629 () Int)
(declare-fun x4551 () Int)
(declare-fun x2235 () Int)
(declare-fun x4229 () Int)
(declare-fun x2615 () Bool)
(declare-fun x4836 () Int)
(declare-fun x4359 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x5023 () Int)
(declare-fun x537 () Int)
(declare-fun x2187 () Bool)
(declare-fun x825 () Bool)
(declare-fun x2338 () Int)
(declare-fun x999 () Int)
(declare-fun x2905 () Bool)
(declare-fun x5034 () Int)
(declare-fun x5477 () Int)
(declare-fun x2613 () Bool)
(declare-fun x3972 () Bool)
(declare-fun x2755 () Int)
(declare-fun x3095 () Bool)
(declare-fun x3590 () Int)
(declare-fun x397 () Bool)
(declare-fun x3650 () Int)
(declare-fun x4149 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x4492 () Int)
(declare-fun x438 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x819 () Int)
(declare-fun x5165 () Int)
(declare-fun x2514 () Bool)
(declare-fun x1033 () Int)
(declare-fun x5265 () Bool)
(declare-fun x5487 () Int)
(declare-fun x2636 () Int)
(declare-fun x633 () Bool)
(declare-fun x346 () Int)
(declare-fun x3527 () Bool)
(declare-fun x4125 () Int)
(declare-fun x4716 () Int)
(declare-fun x261 () Int)
(declare-fun x4160 (Int) Int)
(declare-fun x2766 () Int)
(declare-fun x1314 () Int)
(declare-fun x3318 () Int)
(declare-fun x5506 () Bool)
(declare-fun x3725 () Int)
(declare-fun x1606 () Int)
(declare-fun x1761 () Int)
(declare-fun x5222 () Int)
(declare-fun x2178 () Int)
(declare-fun x559 () Int)
(declare-fun x3511 () Int)
(declare-fun x4797 () Int)
(declare-fun x1193 () Int)
(declare-fun x1609 () Int)
(declare-fun x3332 () Bool)
(declare-fun x4085 () Int)
(declare-fun x4486 () Int)
(declare-fun x3684 () Bool)
(declare-fun x3751 () Int)
(declare-fun x544 () Int)
(declare-fun x5395 () Int)
(declare-fun x1349 () Bool)
(declare-fun x681 () Int)
(declare-fun x5654 () Int)
(declare-fun x5343 () Bool)
(declare-fun x2468 () Bool)
(declare-fun x2433 () Int)
(declare-fun x1111 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x5348 () Int)
(declare-fun x2550 () Bool)
(declare-fun x2782 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x670 () Bool)
(declare-fun x838 () Int)
(declare-fun x5317 () Bool)
(declare-fun x45 () Bool)
(declare-fun x382 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x2179 () Int)
(declare-fun x5246 () Int)
(declare-fun x25 () Int)
(declare-fun x1764 () Int)
(declare-fun x798 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x2582 () Int)
(declare-fun x3446 () Int)
(declare-fun x135 () Int)
(declare-fun x2204 () Bool)
(declare-fun x1397 () Int)
(declare-fun x32 () Bool)
(declare-fun x1267 () Int)
(declare-fun x2340 () Bool)
(declare-fun x1091 () Int)
(declare-fun x3854 () Int)
(declare-fun x840 () Bool)
(declare-fun x1214 () Int)
(declare-fun x3152 () Int)
(declare-fun x4369 () Int)
(declare-fun x1309 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x1590 () Int)
(declare-fun x1288 () Int)
(declare-fun x1454 () Int)
(declare-fun x2377 () Int)
(declare-fun x2092 () Bool)
(declare-fun x5361 () Bool)
(declare-fun x780 () Int)
(declare-fun x109 () Int)
(declare-fun x2220 () Int)
(declare-fun x5177 () Int)
(declare-fun x829 () Bool)
(declare-fun x5281 () Bool)
(declare-fun x3218 () Bool)
(declare-fun x592 () Bool)
(declare-fun x1685 () Int)
(declare-fun x5493 () Int)
(declare-fun x5069 () Bool)
(declare-fun x3174 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x393 () Int)
(declare-fun x4911 () Bool)
(declare-fun x646 () Int)
(declare-fun x1342 () Int)
(declare-fun x1870 () Int)
(declare-fun x3859 () Int)
(declare-fun x1662 () Bool)
(declare-fun x1947 () Int)
(declare-fun x2589 () Int)
(declare-fun x4005 () Int)
(declare-fun x754 () Bool)
(declare-fun x3378 () Bool)
(declare-fun x552 () Int)
(declare-fun x1477 () Int)
(declare-fun x1182 () Int)
(declare-fun x435 () Bool)
(declare-fun x5397 () Bool)
(declare-fun x3316 () Bool)
(declare-fun x426 () Bool)
(declare-fun x7 () Int)
(declare-fun x1372 () Int)
(declare-fun x2671 () Bool)
(declare-fun x5229 () Int)
(declare-fun x2147 () Int)
(declare-fun x3839 () Int)
(declare-fun x4368 () Bool)
(declare-fun x4561 () Int)
(declare-fun x821 () Int)
(declare-fun x1728 () Int)
(declare-fun x185 () Bool)
(declare-fun x2268 () Bool)
(declare-fun x3593 () Bool)
(declare-fun x77 () Int)
(declare-fun x2653 () Bool)
(declare-fun x5107 () Int)
(declare-fun x4009 () Int)
(declare-fun x4241 () Bool)
(declare-fun x1970 () Int)
(declare-fun x3343 () Int)
(declare-fun x534 () Int)
(declare-fun x2729 () Int)
(declare-fun x2320 () Bool)
(declare-fun x5650 () Int)
(declare-fun x1059 (Int) Int)
(declare-fun x746 () Int)
(declare-fun x4475 () Int)
(declare-fun x4586 () Int)
(declare-fun x4640 () Int)
(declare-fun x3157 () Int)
(declare-fun x1216 () Int)
(declare-fun x4751 () Int)
(declare-fun x5418 () Int)
(declare-fun x2194 () Int)
(declare-fun x120 () Bool)
(declare-fun x4042 () Int)
(declare-fun x4405 () Bool)
(declare-fun x3939 () Int)
(declare-fun x4047 () Int)
(declare-fun x1468 () Int)
(declare-fun x192 () Int)
(declare-fun x2360 () Int)
(declare-fun x3477 () Int)
(declare-fun x4782 () Int)
(declare-fun x1124 () Int)
(declare-fun x4002 () Int)
(declare-fun x1505 () Int)
(declare-fun x4148 () Int)
(declare-fun x4217 () Int)
(declare-fun x4698 () Int)
(declare-fun x2757 () Bool)
(declare-fun x2927 () Int)
(declare-fun x2031 () Int)
(declare-fun x2061 () Int)
(declare-fun x606 () Int)
(declare-fun x4519 () Int)
(declare-fun x5413 () Int)
(declare-fun x1993 () Bool)
(declare-fun x2117 () Int)
(declare-fun x5250 () Int)
(declare-fun x3359 () Int)
(declare-fun x3615 () Int)
(declare-fun x3327 () Int)
(declare-fun x1369 () Int)
(declare-fun x4591 () Int)
(declare-fun x4059 () Int)
(declare-fun x5148 () Int)
(declare-fun x706 () Int)
(declare-fun x3394 () Int)
(declare-fun x4998 () Bool)
(declare-fun x3094 () Int)
(declare-fun x4700 () Int)
(declare-fun x4367 () Bool)
(declare-fun x2958 () Int)
(declare-fun x1135 () Int)
(declare-fun x3191 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x1406 () Int)
(declare-fun x371 () Bool)
(declare-fun x5336 () Int)
(declare-fun x3592 () Int)
(declare-fun x1715 () Bool)
(declare-fun x4034 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x3215 () Int)
(declare-fun x1353 () Bool)
(declare-fun x3860 () Int)
(declare-fun x1163 () Bool)
(declare-fun x5527 () Bool)
(declare-fun x5364 () Int)
(declare-fun x4955 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x4666 () Int)
(declare-fun x5210 () Bool)
(declare-fun x4692 () Int)
(declare-fun x1743 () Bool)
(declare-fun x2388 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1556 () Int)
(declare-fun x5535 () Bool)
(declare-fun x1065 () Int)
(declare-fun x2492 () Bool)
(declare-fun x4259 () Int)
(declare-fun x3434 () Int)
(declare-fun x770 () Bool)
(declare-fun x2623 () Int)
(declare-fun x283 () Int)
(declare-fun x756 () Int)
(declare-fun x4326 () Bool)
(declare-fun x391 () Int)
(declare-fun x5260 () Int)
(declare-fun x1203 () Bool)
(declare-fun x2820 () Bool)
(declare-fun x565 () Int)
(declare-fun x594 () Int)
(declare-fun x4245 () Int)
(declare-fun x1062 () Int)
(declare-fun x2762 () Int)
(declare-fun x4513 () Bool)
(declare-fun x1022 () Int)
(declare-fun x5178 () Bool)
(declare-fun x219 () Int)
(declare-fun x3857 () Int)
(declare-fun x1488 () Int)
(declare-fun x3224 () Int)
(declare-fun x1484 () Int)
(declare-fun x1754 () Int)
(declare-fun x141 () Int)
(declare-fun x1101 () Int)
(declare-fun x4191 () Int)
(declare-fun x2392 () Bool)
(declare-fun x4564 () Int)
(declare-fun x3182 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x4853 () Int)
(declare-fun x384 () Int)
(declare-fun x2102 () Int)
(declare-fun x826 () Int)
(declare-fun x580 () Bool)
(declare-fun x4286 () Int)
(declare-fun x4391 () Bool)
(declare-fun x4777 () Bool)
(declare-fun x2055 () Int)
(declare-fun x4502 () Int)
(declare-fun x278 () Int)
(declare-fun x1943 () Int)
(declare-fun x332 () Bool)
(declare-fun x3710 () Int)
(declare-fun x3709 () Int)
(declare-fun x523 () Bool)
(declare-fun x5190 () Int)
(declare-fun x3243 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x243 () Bool)
(declare-fun x4507 () Bool)
(declare-fun x539 () Int)
(declare-fun x4390 () Bool)
(declare-fun x643 () Bool)
(declare-fun x1305 () Int)
(declare-fun x2528 () Bool)
(declare-fun x3266 () Int)
(declare-fun x5306 () Int)
(declare-fun x1198 () Bool)
(declare-fun x2683 () Int)
(declare-fun x5486 () Int)
(declare-fun x1986 () Int)
(declare-fun x5194 () Int)
(declare-fun x985 () Int)
(declare-fun x3937 () Bool)
(declare-fun x690 () Int)
(declare-fun x54 () Bool)
(declare-fun x5032 () Int)
(declare-fun x5529 () Int)
(declare-fun x1247 () Bool)
(declare-fun x4053 () Int)
(declare-fun x5537 () Bool)
(declare-fun x5454 () Int)
(declare-fun x4664 () Int)
(declare-fun x3169 () Int)
(declare-fun x782 () Int)
(declare-fun x1489 () Int)
(declare-fun x543 () Bool)
(declare-fun x5633 () Int)
(declare-fun x3745 () Int)
(declare-fun x2459 () Int)
(declare-fun x1915 () Bool)
(declare-fun x386 () Int)
(declare-fun x2673 (Int) Int)
(declare-fun x3357 () Bool)
(declare-fun x3513 () Bool)
(declare-fun x4312 () Int)
(declare-fun x1840 () Int)
(declare-fun x603 () Bool)
(declare-fun x3698 () Bool)
(declare-fun x3258 () Int)
(declare-fun x4465 () Int)
(declare-fun x2226 () Int)
(declare-fun x1582 () Int)
(declare-fun x3489 () Int)
(declare-fun x150 () Int)
(declare-fun x2383 () Int)
(declare-fun x323 () Int)
(declare-fun x1598 () Int)
(declare-fun x2112 () Int)
(declare-fun x5598 () Int)
(declare-fun x2530 () Int)
(declare-fun x901 () Bool)
(declare-fun x5653 () Int)
(declare-fun x227 () Int)
(declare-fun x5591 () Int)
(declare-fun x3700 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x3114 () Bool)
(declare-fun x5405 () Int)
(declare-fun x4131 () Int)
(declare-fun x3290 () Int)
(declare-fun x1279 () Int)
(declare-fun x1861 () Int)
(declare-fun x2181 () Int)
(declare-fun x2509 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x3586 () Int)
(declare-fun x5528 () Int)
(declare-fun x686 () Bool)
(declare-fun x961 () Int)
(declare-fun x4883 () Int)
(declare-fun x1252 () Int)
(declare-fun x2367 () Bool)
(declare-fun x767 () Int)
(declare-fun x2308 () Bool)
(declare-fun x4879 () Int)
(declare-fun x1600 () Int)
(declare-fun x4828 () Int)
(declare-fun x3161 () Int)
(declare-fun x1990 () Bool)
(declare-fun x582 () Int)
(declare-fun x3234 () Int)
(declare-fun x84 () Int)
(declare-fun x4762 (Int) Int)
(declare-fun x992 () Int)
(declare-fun x3529 () Int)
(declare-fun x80 () Int)
(declare-fun x2110 () Int)
(declare-fun x974 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x1404 () Int)
(declare-fun x3621 () Int)
(declare-fun x5340 () Bool)
(declare-fun x270 () Bool)
(declare-fun x2190 (Int) Int)
(declare-fun x4730 () Int)
(declare-fun x3534 () Int)
(declare-fun x240 () Int)
(declare-fun x2078 () Int)
(declare-fun x4958 () Bool)
(declare-fun x4687 () Bool)
(declare-fun x428 () Bool)
(declare-fun x855 () Int)
(declare-fun x1924 () Bool)
(declare-fun x4663 () Int)
(declare-fun x942 () Bool)
(declare-fun x873 () Bool)
(declare-fun x1938 () Bool)
(declare-fun x1892 (Int) Int)
(declare-fun x4768 () Int)
(declare-fun x4766 () Int)
(declare-fun x3127 () Int)
(declare-fun x3767 () Int)
(declare-fun x2157 () Int)
(declare-fun x860 () Bool)
(declare-fun x5335 () Int)
(declare-fun x3244 () Bool)
(declare-fun x3737 () Bool)
(declare-fun x21 () Bool)
(declare-fun x739 () Bool)
(declare-fun x2624 () Int)
(declare-fun x3501 () Int)
(declare-fun x5530 () Int)
(declare-fun x3989 () Bool)
(declare-fun x1345 () Int)
(declare-fun x1722 () Bool)
(declare-fun x3542 () Int)
(declare-fun x3545 () Bool)
(declare-fun x4353 () Int)
(declare-fun x2822 () Int)
(declare-fun x5565 () Bool)
(declare-fun x839 () Int)
(declare-fun x2049 () Int)
(declare-fun x5379 () Int)
(declare-fun x1953 () Bool)
(declare-fun x5043 (Int) Int)
(declare-fun x4626 () Int)
(declare-fun x3003 () Int)
(declare-fun x1976 () Int)
(declare-fun x5416 () Int)
(declare-fun x1710 () Int)
(declare-fun x1475 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x1674 () Int)
(declare-fun x2154 () Bool)
(declare-fun x3484 () Int)
(declare-fun x29 () Bool)
(declare-fun x2119 () Int)
(declare-fun x3990 () Int)
(declare-fun x4727 () Bool)
(declare-fun x318 () Int)
(declare-fun x139 () Int)
(declare-fun x585 () Int)
(declare-fun x2595 () Int)
(declare-fun x3192 () Int)
(declare-fun x676 () Int)
(declare-fun x4072 () Int)
(declare-fun x3400 () Int)
(declare-fun x2474 () Int)
(declare-fun x5011 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x647 (Int) Int)
(declare-fun x5242 () Int)
(declare-fun x448 () Int)
(declare-fun x101 () Int)
(declare-fun x4937 () Int)
(declare-fun x4430 () Int)
(declare-fun x157 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x2649 () Int)
(declare-fun x637 () Bool)
(declare-fun x3272 () Int)
(declare-fun x115 () Int)
(declare-fun x5323 () Int)
(declare-fun x2224 () Int)
(declare-fun x3007 () Bool)
(declare-fun x3943 () Int)
(declare-fun x2210 () Int)
(declare-fun x626 () Int)
(declare-fun x1162 () Int)
(declare-fun x1455 () Bool)
(declare-fun x2982 () Int)
(declare-fun x1485 () Bool)
(declare-fun x414 () Int)
(declare-fun x1878 () Bool)
(declare-fun x164 () Int)
(declare-fun x1104 () Int)
(declare-fun x968 () Int)
(declare-fun x1640 () Int)
(declare-fun x3502 () Bool)
(declare-fun x199 () Int)
(declare-fun x2930 () Int)
(declare-fun x1330 () Int)
(declare-fun x763 () Int)
(declare-fun x762 () Int)
(declare-fun x2106 () Int)
(declare-fun x2289 () Int)
(declare-fun x4962 () Int)
(declare-fun x5377 () Int)
(declare-fun x1975 () Int)
(declare-fun x2890 () Bool)
(declare-fun x293 () Int)
(declare-fun x267 () Int)
(declare-fun x447 () Int)
(declare-fun x5621 () Int)
(declare-fun x2493 () Int)
(declare-fun x1885 () Bool)
(declare-fun x928 () Bool)
(declare-fun x5350 () Bool)
(declare-fun x4778 () Bool)
(declare-fun x4501 () Int)
(declare-fun x2355 () Int)
(declare-fun x40 (Int) Int)
(declare-fun x4704 () Bool)
(declare-fun x3871 () Int)
(declare-fun x1647 () Int)
(declare-fun x1125 () Int)
(declare-fun x300 () Int)
(declare-fun x3762 () Bool)
(declare-fun x5297 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x2497 () Int)
(declare-fun x3262 () Int)
(declare-fun x885 () Bool)
(declare-fun x3889 () Int)
(declare-fun x677 () Int)
(declare-fun x2714 () Int)
(declare-fun x3455 () Bool)
(declare-fun x3203 () Int)
(declare-fun x2736 () Int)
(declare-fun x439 () Int)
(declare-fun x3106 () Bool)
(declare-fun x2537 () Int)
(declare-fun x741 () Bool)
(declare-fun x280 () Int)
(declare-fun x5052 () Bool)
(declare-fun x5089 () Bool)
(declare-fun x3801 () Int)
(declare-fun x2198 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x4165 () Int)
(declare-fun x4837 () Int)
(declare-fun x2168 () Int)
(declare-fun x1842 () Int)
(declare-fun x3979 () Int)
(declare-fun x296 () Int)
(declare-fun x1068 () Int)
(declare-fun x3223 () Int)
(declare-fun x1127 () Int)
(declare-fun x4954 () Bool)
(declare-fun x2047 () Int)
(declare-fun x3626 () Bool)
(declare-fun x2823 () Int)
(declare-fun x4031 () Bool)
(declare-fun x5119 () Int)
(declare-fun x1699 () Bool)
(declare-fun x4999 () Int)
(declare-fun x4697 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x576 () Bool)
(declare-fun x1552 () Int)
(declare-fun x2880 () Int)
(declare-fun x4019 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x4152 () Int)
(declare-fun x5021 () Int)
(declare-fun x3736 () Int)
(declare-fun x2316 () Int)
(declare-fun x1319 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x4187 () Int)
(declare-fun x4025 () Bool)
(declare-fun x1057 () Int)
(declare-fun x4613 () Bool)
(declare-fun x5204 () Int)
(declare-fun x2948 () Bool)
(declare-fun x2084 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x4690 () Int)
(declare-fun x2831 () Int)
(declare-fun x779 () Int)
(declare-fun x1481 () Int)
(declare-fun x4032 () Int)
(declare-fun x4490 () Bool)
(declare-fun x2402 () Int)
(declare-fun x1612 (Int) Int)
(declare-fun x4511 () Int)
(declare-fun x2931 () Bool)
(declare-fun x3636 () Bool)
(declare-fun x3642 () Int)
(declare-fun x4904 () Int)
(declare-fun x530 () Int)
(declare-fun x1045 () Bool)
(declare-fun x2200 () Int)
(declare-fun x948 () Int)
(declare-fun x3091 () Int)
(declare-fun x4786 () Bool)
(declare-fun x46 () Int)
(declare-fun x5039 () Int)
(declare-fun x181 () Int)
(declare-fun x4288 () Int)
(declare-fun x3499 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x3085 () Bool)
(declare-fun x1159 () Int)
(declare-fun x4628 () Int)
(declare-fun x1380 () Int)
(declare-fun x3361 () Int)
(declare-fun x910 () Int)
(declare-fun x3757 () Int)
(declare-fun x499 () Bool)
(declare-fun x155 () Int)
(declare-fun x327 () Bool)
(declare-fun x4524 () Int)
(declare-fun x5157 () Int)
(declare-fun x65 () Int)
(declare-fun x788 () Bool)
(declare-fun x5558 () Int)
(declare-fun x5602 () Bool)
(declare-fun x723 () Int)
(declare-fun x3052 () Int)
(declare-fun x5080 () Int)
(declare-fun x1230 () Bool)
(declare-fun x1164 () Int)
(declare-fun x4549 () Int)
(declare-fun x730 () Bool)
(declare-fun x4705 () Int)
(declare-fun x5436 () Int)
(declare-fun x4172 () Int)
(declare-fun x5533 () Int)
(declare-fun x4480 () Int)
(declare-fun x1880 () Bool)
(declare-fun x4669 () Bool)
(declare-fun x4350 () Int)
(declare-fun x4402 () Int)
(declare-fun x3833 () Int)
(declare-fun x4445 () Int)
(declare-fun x4717 () Int)
(declare-fun x3439 () Int)
(declare-fun x5458 () Int)
(declare-fun x5324 () Int)
(declare-fun x4388 () Bool)
(declare-fun x4983 () Bool)
(declare-fun x1692 () Int)
(declare-fun x4143 () Int)
(declare-fun x3712 () Int)
(declare-fun x483 () Int)
(declare-fun x47 () Int)
(declare-fun x5399 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x2284 () Bool)
(declare-fun x771 () Int)
(declare-fun x2339 () Int)
(declare-fun x3 () Int)
(declare-fun x2529 () Int)
(declare-fun x5028 () Int)
(declare-fun x3379 () Int)
(declare-fun x401 () Int)
(declare-fun x3451 () Int)
(declare-fun x1767 () Int)
(declare-fun x973 () Int)
(declare-fun x2069 () Int)
(declare-fun x4864 () Int)
(declare-fun x58 () Bool)
(declare-fun x1452 (Int) Int)
(declare-fun x644 () Int)
(declare-fun x3905 () Int)
(declare-fun x3863 () Int)
(declare-fun x3964 () Int)
(declare-fun x2007 () Int)
(declare-fun x3841 () Bool)
(declare-fun x882 () Int)
(declare-fun x1783 () Int)
(declare-fun x1616 () Int)
(declare-fun x3041 () Bool)
(declare-fun x1246 () Int)
(declare-fun x2252 () Int)
(declare-fun x1244 () Int)
(declare-fun x2805 () Bool)
(declare-fun x5063 () Int)
(declare-fun x3349 () Int)
(declare-fun x3488 () Int)
(declare-fun x3791 () Int)
(declare-fun x4634 () Bool)
(declare-fun x2205 () Int)
(declare-fun x818 () Int)
(declare-fun x4021 () Int)
(declare-fun x4693 () Int)
(declare-fun x2312 () Int)
(declare-fun x1503 () Bool)
(declare-fun x4509 () Int)
(declare-fun x3797 () Bool)
(declare-fun x3576 () Int)
(declare-fun x4602 () Bool)
(declare-fun x2984 () Int)
(declare-fun x4759 () Bool)
(declare-fun x2237 () Int)
(declare-fun x4071 () Bool)
(declare-fun x2139 () Int)
(declare-fun x2780 () Int)
(declare-fun x1863 () Int)
(declare-fun x336 () Int)
(declare-fun x1737 () Bool)
(declare-fun x4754 () Int)
(declare-fun x2985 () Int)
(declare-fun x4317 () Int)
(declare-fun x2660 () Int)
(declare-fun x810 () Bool)
(declare-fun x5638 () Bool)
(declare-fun x2329 () Int)
(declare-fun x469 () Int)
(declare-fun x921 () Int)
(declare-fun x5301 () Int)
(declare-fun x4985 () Int)
(declare-fun x3628 () Bool)
(declare-fun x4932 () Bool)
(declare-fun x3314 () Int)
(declare-fun x558 () Int)
(declare-fun x2486 () Int)
(declare-fun x4093 () Int)
(declare-fun x48 () Int)
(declare-fun x3140 () Int)
(declare-fun x4386 () Int)
(declare-fun x2965 () Bool)
(declare-fun x859 () Int)
(declare-fun x4921 () Int)
(declare-fun x5184 () Int)
(declare-fun x3580 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x1039 () Int)
(declare-fun x3175 () Int)
(declare-fun x1907 () Bool)
(declare-fun x590 () Int)
(declare-fun x627 () Int)
(declare-fun x2978 () Int)
(declare-fun x4706 () Bool)
(declare-fun x1498 () Int)
(declare-fun x994 () Int)
(declare-fun x976 () Int)
(declare-fun x3998 () Int)
(declare-fun x1626 () Int)
(declare-fun x1972 () Int)
(declare-fun x5496 () Int)
(declare-fun x149 () Int)
(declare-fun x1446 () Bool)
(declare-fun x3639 () Bool)
(declare-fun x5456 () Int)
(declare-fun x1649 () Int)
(declare-fun x4190 () Int)
(declare-fun x5649 () Int)
(declare-fun x655 () Int)
(declare-fun x2410 () Int)
(declare-fun x1726 () Bool)
(declare-fun x4210 () Bool)
(declare-fun x663 () Int)
(declare-fun x2318 () Int)
(declare-fun x184 () Int)
(declare-fun x405 () Int)
(declare-fun x1423 () Bool)
(declare-fun x2879 () Int)
(declare-fun x765 () Int)
(declare-fun x466 () Bool)
(declare-fun x383 () Int)
(declare-fun x2989 () Int)
(declare-fun x2578 () Int)
(declare-fun x3740 () Int)
(declare-fun x5100 () Int)
(declare-fun x1696 () Int)
(declare-fun x2561 () Int)
(declare-fun x3348 () Int)
(declare-fun x3810 () Int)
(declare-fun x996 () Int)
(declare-fun x480 () Bool)
(declare-fun x5252 () Int)
(declare-fun x67 () Int)
(declare-fun x2949 () Int)
(declare-fun x766 () Int)
(declare-fun x4554 () Int)
(declare-fun x2196 () Int)
(declare-fun x2043 () Int)
(declare-fun x1220 () Int)
(declare-fun x4970 () Int)
(declare-fun x2771 () Int)
(declare-fun x954 () Bool)
(declare-fun x3059 () Int)
(declare-fun x1969 () Int)
(declare-fun x1092 () Int)
(declare-fun x3794 () Bool)
(declare-fun x931 () Bool)
(declare-fun x5640 () Bool)
(declare-fun x1310 () Int)
(declare-fun x4209 () Int)
(declare-fun x1936 () Int)
(declare-fun x2619 () Int)
(declare-fun x3865 () Int)
(declare-fun x3465 () Bool)
(declare-fun x3280 () Int)
(declare-fun x259 () Int)
(declare-fun x269 (Int Int Int Int) Int)
(declare-fun x1927 () Int)
(declare-fun x3622 () Bool)
(declare-fun x3399 () Int)
(declare-fun x4504 () Int)
(declare-fun x4275 () Int)
(declare-fun x5002 () Int)
(declare-fun x4922 () Int)
(declare-fun x2560 () Int)
(declare-fun x915 () Int)
(declare-fun x432 () Int)
(declare-fun x2961 () Int)
(declare-fun x4670 () Bool)
(declare-fun x1106 () Int)
(declare-fun x3073 () Int)
(declare-fun x1664 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1403 () Int)
(declare-fun x4276 () Int)
(declare-fun x5424 () Int)
(declare-fun x3045 () Int)
(declare-fun x3575 () Bool)
(declare-fun x3160 () Int)
(declare-fun x1813 () Int)
(declare-fun x3177 () Int)
(declare-fun x540 () Int)
(declare-fun x2343 () Bool)
(declare-fun x2804 () Bool)
(declare-fun x2374 () Int)
(declare-fun x3040 () Int)
(declare-fun x9 () Int)
(declare-fun x119 () Int)
(declare-fun x3416 () Bool)
(declare-fun x4838 () Int)
(declare-fun x3227 () Int)
(declare-fun x2884 () Bool)
(declare-fun x5594 (Int) Int)
(declare-fun x1169 () Bool)
(declare-fun x768 () Int)
(declare-fun x2712 () Int)
(declare-fun x1595 () Bool)
(declare-fun x166 () Int)
(declare-fun x3624 () Bool)
(declare-fun x1899 () Int)
(declare-fun x5065 () Int)
(declare-fun x5245 () Int)
(declare-fun x1539 () Bool)
(declare-fun x2491 () Int)
(declare-fun x5042 () Bool)
(declare-fun x688 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x367 () Int)
(declare-fun x3599 () Int)
(declare-fun x5518 () Bool)
(declare-fun x2628 () Int)
(declare-fun x1263 () Bool)
(declare-fun x2495 () Int)
(declare-fun x183 () Bool)
(declare-fun x2772 () Int)
(declare-fun x2302 () Bool)
(declare-fun x468 () Int)
(declare-fun x2353 () Int)
(declare-fun x3205 () Int)
(declare-fun x3532 () Int)
(declare-fun x1751 () Int)
(declare-fun x533 () Int)
(declare-fun x3237 () Int)
(declare-fun x3246 () Int)
(declare-fun x3629 () Bool)
(declare-fun x575 () Bool)
(declare-fun x4142 () Int)
(declare-fun x579 () Int)
(declare-fun x3046 () Bool)
(declare-fun x4654 () Int)
(declare-fun x2893 () Int)
(declare-fun x1447 () Int)
(declare-fun x1025 () Int)
(declare-fun x3936 () Int)
(declare-fun x5554 () Int)
(declare-fun x903 () Bool)
(declare-fun x153 () Bool)
(declare-fun x5391 () Bool)
(declare-fun x4320 () Bool)
(declare-fun x1108 () Int)
(declare-fun x4037 () Int)
(declare-fun x1914 () Int)
(declare-fun x702 () Bool)
(declare-fun x5573 () Int)
(declare-fun x3358 () Int)
(declare-fun x3406 () Int)
(declare-fun x3595 () Int)
(declare-fun x2053 () Int)
(declare-fun x698 () Bool)
(declare-fun x1718 () Int)
(declare-fun x4557 () Bool)
(declare-fun x1328 () Int)
(declare-fun x792 () Int)
(declare-fun x2362 () Bool)
(declare-fun x4945 () Int)
(declare-fun x5327 () Int)
(declare-fun x1794 () Int)
(declare-fun x4939 () Bool)
(declare-fun x1141 () Int)
(declare-fun x722 (Int) Int)
(declare-fun x2527 () Int)
(declare-fun x1522 () Bool)
(declare-fun x4938 () Int)
(declare-fun x2526 () Int)
(declare-fun x1831 () Int)
(declare-fun x1306 (Int) Int)
(declare-fun x5227 () Int)
(declare-fun x2025 () Int)
(declare-fun x4126 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x3159 () Int)
(declare-fun x5585 () Bool)
(declare-fun x2744 () Int)
(declare-fun x724 () Int)
(declare-fun x892 () Int)
(declare-fun x3971 () Bool)
(declare-fun x4220 () Int)
(declare-fun x2606 () Int)
(declare-fun x1787 () Int)
(declare-fun x4534 () Int)
(declare-fun x291 () Int)
(declare-fun x2273 () Int)
(declare-fun x886 () Int)
(declare-fun x5006 () Int)
(declare-fun x4063 () Bool)
(declare-fun x4306 () Bool)
(declare-fun x515 () Int)
(declare-fun x1232 () Int)
(declare-fun x4069 () Bool)
(declare-fun x51 () Int)
(declare-fun x5481 () Int)
(declare-fun x3334 () Int)
(declare-fun x395 () Int)
(declare-fun x3634 () Int)
(declare-fun x4668 () Int)
(declare-fun x4521 () Int)
(declare-fun x5403 () Int)
(declare-fun x3893 () Int)
(declare-fun x5284 () Int)
(declare-fun x4427 () Int)
(declare-fun x1445 (Int) Int)
(declare-fun x532 () Int)
(declare-fun x4397 () Bool)
(declare-fun x920 () Bool)
(declare-fun x3295 () Int)
(declare-fun x3429 () Bool)
(declare-fun x4729 () Bool)
(declare-fun x459 () Int)
(declare-fun x3949 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x2218 () Int)
(declare-fun x1009 () Int)
(declare-fun x5142 () Int)
(declare-fun x4990 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x152 () Int)
(declare-fun x990 () Int)
(declare-fun x1003 () Bool)
(declare-fun x830 () Int)
(declare-fun x14 () Bool)
(declare-fun x5590 () Int)
(declare-fun x4048 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x5238 () Int)
(declare-fun x1254 () Int)
(declare-fun x430 () Bool)
(declare-fun x4003 () Int)
(declare-fun x1010 () Int)
(declare-fun x3081 () Int)
(declare-fun x3648 () Int)
(declare-fun x2929 () Int)
(declare-fun x4060 () Int)
(declare-fun x3478 () Int)
(declare-fun x320 () Bool)
(declare-fun x1320 () Int)
(declare-fun x3824 () Int)
(declare-fun x3929 () Int)
(declare-fun x298 () Bool)
(declare-fun x4283 () Int)
(declare-fun x4228 () Int)
(declare-fun x1334 () Int)
(declare-fun x1154 () Int)
(declare-fun x1411 () Int)
(declare-fun x1871 () Int)
(declare-fun x2932 () Int)
(declare-fun x1346 () Int)
(declare-fun x1151 () Bool)
(declare-fun x2223 () Bool)
(declare-fun x1799 (Int) Int)
(declare-fun x2153 () Int)
(declare-fun x2556 () Int)
(declare-fun x751 () Bool)
(declare-fun x4830 () Int)
(declare-fun x661 () Bool)
(declare-fun x105 () Bool)
(declare-fun x302 () Bool)
(declare-fun x2616 () Int)
(declare-fun x4650 () Int)
(declare-fun x2598 () Int)
(declare-fun x177 () Int)
(declare-fun x2707 () Int)
(declare-fun x3090 () Int)
(declare-fun x3770 () Int)
(declare-fun x1588 () Int)
(declare-fun x4769 () Bool)
(declare-fun x66 () Bool)
(declare-fun x807 () Int)
(declare-fun x648 () Int)
(declare-fun x1049 () Bool)
(declare-fun x433 () Bool)
(declare-fun x4384 () Int)
(declare-fun x5507 () Int)
(declare-fun x2573 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x3850 (Int) Int)
(declare-fun x3058 () Int)
(declare-fun x3270 () Bool)
(declare-fun x595 () Bool)
(declare-fun x3868 () Int)
(declare-fun x5205 () Int)
(declare-fun x3369 () Bool)
(declare-fun x406 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x4169 () Int)
(declare-fun x5374 () Bool)
(declare-fun x1152 () Int)
(declare-fun x2185 () Int)
(declare-fun x4173 () Bool)
(declare-fun x3760 () Int)
(declare-fun x5593 () Int)
(declare-fun x641 () Int)
(declare-fun x1610 () Int)
(declare-fun x3260 () Int)
(declare-fun x358 () Bool)
(declare-fun x2716 () Int)
(declare-fun x1862 () Int)
(declare-fun x2455 () Int)
(declare-fun x4407 () Int)
(declare-fun x3858 () Int)
(declare-fun x315 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x1701 (Int) Int)
(declare-fun x1707 () Int)
(declare-fun x1382 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x3790 () Int)
(declare-fun x1280 () Int)
(declare-fun x2158 () Int)
(declare-fun x4139 () Bool)
(declare-fun x4256 () Bool)
(declare-fun x2341 () Int)
(declare-fun x2773 () Int)
(declare-fun x4412 () Bool)
(declare-fun x808 () Int)
(declare-fun x2326 () Int)
(declare-fun x190 () Int)
(declare-fun x3442 () Int)
(declare-fun x935 () Int)
(declare-fun x1820 () Int)
(declare-fun x4834 () Bool)
(declare-fun x2100 () Int)
(declare-fun x3298 () Int)
(declare-fun x2282 () Int)
(declare-fun x1341 () Bool)
(declare-fun x2098 () Int)
(declare-fun x4917 () Int)
(declare-fun x3222 () Int)
(declare-fun x2457 () Bool)
(declare-fun x1926 () Int)
(declare-fun x308 () Int)
(declare-fun x1671 () Bool)
(declare-fun x4722 () Int)
(declare-fun x1532 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x3887 () Int)
(declare-fun x2583 () Bool)
(declare-fun x5051 (Int) Int)
(declare-fun x4974 () Int)
(declare-fun x2859 () Int)
(declare-fun x2611 () Int)
(declare-fun x554 () Bool)
(declare-fun x3413 () Int)
(declare-fun x2261 () Int)
(declare-fun x4709 () Int)
(declare-fun x5092 () Int)
(declare-fun x5451 () Int)
(declare-fun x3892 () Int)
(declare-fun x3269 () Bool)
(declare-fun x2466 () Int)
(declare-fun x2368 () Bool)
(declare-fun x3815 () Int)
(declare-fun x434 () Int)
(declare-fun x5587 () Int)
(declare-fun x489 () Int)
(declare-fun x3393 () Bool)
(declare-fun x2219 () Int)
(declare-fun x4474 () Int)
(declare-fun x4809 () Int)
(declare-fun x3510 () Int)
(declare-fun x2115 () Int)
(declare-fun x5517 () Int)
(declare-fun x862 () Int)
(declare-fun x2222 () Bool)
(declare-fun x3331 () Int)
(declare-fun x4656 () Int)
(declare-fun x2918 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x2274 () Int)
(declare-fun x5109 () Int)
(declare-fun x3874 () Int)
(declare-fun x3401 () Int)
(declare-fun x1451 () Int)
(declare-fun x2052 () Int)
(declare-fun x1621 () Int)
(declare-fun x1297 () Bool)
(declare-fun x4647 () Int)
(declare-fun x4556 () Bool)
(declare-fun x1849 () Int)
(declare-fun x159 () Int)
(declare-fun x2010 () Int)
(declare-fun x4205 () Int)
(declare-fun x425 () Int)
(declare-fun x1618 () Int)
(declare-fun x1585 () Bool)
(declare-fun x2230 () Int)
(declare-fun x5152 () Int)
(declare-fun x2248 () Bool)
(declare-fun x2915 () Int)
(declare-fun x4262 () Int)
(declare-fun x4055 () Int)
(declare-fun x3230 () Int)
(declare-fun x4484 () Int)
(declare-fun x1681 () Bool)
(declare-fun x943 () Int)
(declare-fun x1998 () Int)
(declare-fun x3030 () Int)
(declare-fun x2401 () Bool)
(declare-fun x3321 () Int)
(declare-fun x3645 () Int)
(declare-fun x158 () Int)
(declare-fun x5247 () Bool)
(declare-fun x1253 () Int)
(declare-fun x3661 () Int)
(declare-fun x3995 () Bool)
(declare-fun x505 () Bool)
(declare-fun x3391 () Bool)
(declare-fun x4054 () Int)
(declare-fun x5449 () Int)
(declare-fun x2245 () Int)
(declare-fun x5509 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x4978 () Int)
(declare-fun x59 () Int)
(declare-fun x351 () Bool)
(declare-fun x5305 () Int)
(declare-fun x1308 () Bool)
(declare-fun x1513 () Int)
(declare-fun x495 () Int)
(declare-fun x1512 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x2059 () Int)
(declare-fun x123 () Int)
(declare-fun x2933 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x1739 () Int)
(declare-fun x3402 () Bool)
(declare-fun x4464 () Int)
(declare-fun x1523 () Int)
(declare-fun x4012 () Bool)
(declare-fun x2378 () Int)
(declare-fun x4566 () Int)
(declare-fun x2869 () Int)
(declare-fun x356 () Bool)
(declare-fun x1202 () Int)
(declare-fun x2706 () Int)
(declare-fun x3089 () Bool)
(declare-fun x5524 () Bool)
(declare-fun x846 () Bool)
(declare-fun x2585 () Int)
(declare-fun x1384 () Int)
(declare-fun x2080 () Int)
(declare-fun x667 () Int)
(declare-fun x1040 () Int)
(declare-fun x1928 () Int)
(declare-fun x662 () Int)
(declare-fun x1090 () Bool)
(declare-fun x3566 () Int)
(declare-fun x4099 () Int)
(declare-fun x2533 () Int)
(declare-fun x1362 () Int)
(declare-fun x1908 () Int)
(declare-fun x5482 () Int)
(declare-fun x5440 () Int)
(declare-fun x5417 () Int)
(declare-fun x2417 () Int)
(declare-fun x229 () Int)
(declare-fun x55 () Int)
(declare-fun x3832 () Bool)
(declare-fun x2086 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1852 () Int)
(declare-fun x4892 () Int)
(declare-fun x4039 () Bool)
(declare-fun x500 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x4826 () Int)
(declare-fun x4813 () Int)
(declare-fun x2829 () Int)
(declare-fun x4145 () Int)
(declare-fun x3940 () Int)
(declare-fun x2819 () Int)
(declare-fun x536 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x3651 () Int)
(declare-fun x5181 () Int)
(declare-fun x3955 () Int)
(declare-fun x2003 () Int)
(declare-fun x1565 (Int) Int)
(declare-fun x262 () Bool)
(declare-fun x2648 () Int)
(declare-fun x1603 () Int)
(declare-fun x800 () Int)
(declare-fun x4761 () Int)
(declare-fun x4180 () Int)
(declare-fun x865 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x4471 () Bool)
(declare-fun x4208 () Int)
(declare-fun x1634 () Bool)
(declare-fun x2328 () Int)
(declare-fun x2050 () Int)
(declare-fun x3578 () Bool)
(declare-fun x24 () Int)
(declare-fun x2635 () Int)
(declare-fun x3128 () Int)
(declare-fun x3591 () Bool)
(declare-fun x2839 (Int) Int)
(declare-fun x1365 () Bool)
(declare-fun x4910 () Int)
(declare-fun x2193 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x827 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x1370 () Int)
(declare-fun x4277 () Int)
(declare-fun x4963 () Int)
(declare-fun x2878 () Int)
(declare-fun x3463 () Int)
(declare-fun x1343 () Bool)
(declare-fun x2885 () Bool)
(declare-fun x4951 () Bool)
(declare-fun x5561 () Int)
(declare-fun x3934 () Int)
(declare-fun x5328 () Int)
(declare-fun x4426 () Bool)
(declare-fun x709 (Int) Int)
(declare-fun x1339 () Bool)
(declare-fun x2917 () Int)
(declare-fun x5044 () Bool)
(declare-fun x549 () Int)
(declare-fun x2904 () Int)
(declare-fun x3564 () Int)
(declare-fun x5240 () Int)
(declare-fun x3523 () Int)
(declare-fun x3522 () Bool)
(declare-fun x5352 () Bool)
(declare-fun x4344 () Int)
(declare-fun x3200 () Bool)
(declare-fun x1204 () Int)
(declare-fun x4247 () Bool)
(declare-fun x5292 () Int)
(declare-fun x1492 () Int)
(declare-fun x353 () Bool)
(declare-fun x5233 () Bool)
(declare-fun x5095 () Bool)
(declare-fun x2352 () Int)
(declare-fun x1571 () Bool)
(declare-fun x2664 () Bool)
(declare-fun x4232 () Int)
(declare-fun x5502 () Int)
(declare-fun x4200 () Int)
(declare-fun x2682 () Int)
(declare-fun x1258 (Int) Int)
(declare-fun x1923 () Bool)
(declare-fun x2731 () Int)
(declare-fun x3004 () Int)
(declare-fun x902 () Bool)
(declare-fun x3947 () Int)
(declare-fun x1807 () Bool)
(declare-fun x4996 () Int)
(declare-fun x4913 () Int)
(declare-fun x3873 () Bool)
(declare-fun x1356 () Int)
(declare-fun x399 () Int)
(declare-fun x2384 () Bool)
(declare-fun x4199 () Int)
(declare-fun x696 () Int)
(declare-fun x3921 () Bool)
(declare-fun x2447 () Int)
(declare-fun x5513 () Int)
(declare-fun x1759 () Int)
(declare-fun x3746 () Bool)
(declare-fun x4158 () Bool)
(declare-fun x4112 () Bool)
(declare-fun x3715 () Int)
(declare-fun x4959 () Bool)
(declare-fun x2920 () Int)
(declare-fun x704 (Int) Int)
(declare-fun x445 () Bool)
(declare-fun x3666 () Int)
(declare-fun x4183 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x2882 () Int)
(declare-fun x5422 () Int)
(declare-fun x208 () Int)
(declare-fun x5468 () Int)
(declare-fun x5286 () Bool)
(declare-fun x2877 () Int)
(declare-fun x2413 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x1745 () Int)
(declare-fun x3729 () Int)
(declare-fun x2166 () Bool)
(declare-fun x230 () Int)
(declare-fun x4481 () Int)
(declare-fun x3829 () Int)
(declare-fun x3783 () Int)
(declare-fun x1385 () Int)
(declare-fun x2599 () Bool)
(declare-fun x2444 () Bool)
(declare-fun x4296 () Bool)
(declare-fun x4604 () Int)
(declare-fun x3352 () Int)
(declare-fun x5557 () Int)
(declare-fun x2675 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x4411 () Int)
(declare-fun x4295 () Int)
(declare-fun x3782 () Int)
(declare-fun x3035 () Bool)
(declare-fun x2732 () Bool)
(declare-fun x2650 () Int)
(declare-fun x3675 () Int)
(declare-fun x2019 () Int)
(declare-fun x5485 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x4757 () Bool)
(declare-fun x5232 () Int)
(declare-fun x5300 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x2040 () Int)
(declare-fun x3267 () Int)
(declare-fun x953 () Int)
(declare-fun x3744 () Bool)
(declare-fun x1130 () Int)
(declare-fun x3109 () Int)
(declare-fun x2697 () Bool)
(declare-fun x3496 () Bool)
(declare-fun x3458 () Int)
(declare-fun x3300 () Int)
(declare-fun x1985 () Int)
(declare-fun x2163 () Int)
(declare-fun x3183 () Int)
(declare-fun x720 () Int)
(declare-fun x5646 () Bool)
(declare-fun x4873 () Int)
(declare-fun x1570 () Int)
(declare-fun x2801 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x518 () Int)
(declare-fun x2952 () Int)
(declare-fun x3695 () Int)
(declare-fun x4567 () Int)
(declare-fun x114 () Int)
(declare-fun x3420 () Int)
(declare-fun x1480 () Int)
(declare-fun x3884 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x490 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x3323 () Int)
(declare-fun x1568 () Bool)
(declare-fun x5584 () Int)
(declare-fun x3604 () Int)
(declare-fun x3914 () Bool)
(declare-fun x3862 () Int)
(declare-fun x1245 () Int)
(declare-fun x2108 () Int)
(declare-fun x365 () Int)
(declare-fun x3491 () Int)
(declare-fun x3713 () Int)
(declare-fun x4266 (Int Int Int) Int)
(declare-fun x3178 () Int)
(declare-fun x1450 () Int)
(declare-fun x3506 () Int)
(declare-fun x4750 () Bool)
(declare-fun x5421 () Int)
(declare-fun x5375 (Int) Int)
(declare-fun x2817 () Int)
(declare-fun x2085 () Int)
(declare-fun x4216 () Int)
(declare-fun x4987 () Int)
(declare-fun x849 () Bool)
(declare-fun x130 () Int)
(declare-fun x5059 () Bool)
(declare-fun x4371 () Int)
(declare-fun x2482 () Int)
(declare-fun x4947 () Int)
(declare-fun x4833 () Bool)
(declare-fun x4401 () Bool)
(declare-fun x1948 () Int)
(declare-fun x975 () Int)
(declare-fun x3985 () Int)
(declare-fun x1905 () Bool)
(declare-fun x988 () Bool)
(declare-fun x805 () Int)
(declare-fun x306 () Bool)
(declare-fun x3923 () Bool)
(declare-fun x2541 () Int)
(declare-fun x1149 (Int) Int)
(declare-fun x2332 () Int)
(declare-fun x3953 () Int)
(declare-fun x2730 () Bool)
(declare-fun x4560 () Int)
(declare-fun x2618 () Bool)
(declare-fun x5555 () Int)
(declare-fun x4057 () Int)
(declare-fun x5067 () Int)
(declare-fun x5612 () Int)
(declare-fun x4404 () Int)
(declare-fun x2453 () Int)
(declare-fun x3008 () Bool)
(declare-fun x5144 () Int)
(declare-fun x75 () Int)
(declare-fun x3535 () Int)
(declare-fun x5388 () Int)
(declare-fun x2285 () Int)
(declare-fun x918 () Int)
(declare-fun x1036 () Int)
(declare-fun x3627 () Int)
(declare-fun x2568 () Int)
(declare-fun x3734 () Int)
(declare-fun x5145 () Int)
(declare-fun x561 () Int)
(declare-fun x476 () Bool)
(declare-fun x3594 () Int)
(declare-fun x1954 () Int)
(declare-fun x2677 () Bool)
(declare-fun x3602 () Int)
(declare-fun x2972 () Int)
(declare-fun x3380 () Int)
(declare-fun x4691 () Int)
(declare-fun x919 () Int)
(declare-fun x4252 () Int)
(declare-fun x4361 () Bool)
(declare-fun x2855 () Bool)
(declare-fun x1060 (Int) Int)
(declare-fun x4224 () Bool)
(declare-fun x3763 () Int)
(declare-fun x3706 () Bool)
(declare-fun x2133 () Int)
(declare-fun x4117 () Bool)
(declare-fun x2001 () Bool)
(declare-fun x2304 () Int)
(declare-fun x4351 () Int)
(declare-fun x4146 () Bool)
(declare-fun x3473 () Int)
(declare-fun x3927 () Int)
(declare-fun x1810 () Bool)
(declare-fun x4254 () Int)
(declare-fun x1879 () Int)
(declare-fun x5491 () Int)
(declare-fun x4324 () Int)
(declare-fun x5541 () Bool)
(declare-fun x5201 () Int)
(declare-fun x465 () Int)
(declare-fun x5423 () Bool)
(declare-fun x347 () Int)
(declare-fun x2435 () Int)
(declare-fun x1835 () Int)
(declare-fun x5568 () Int)
(declare-fun x5310 () Int)
(declare-fun x2796 () Bool)
(declare-fun x4243 () Int)
(declare-fun x789 () Bool)
(declare-fun x2169 () Int)
(declare-fun x1322 () Int)
(declare-fun x1276 () Bool)
(declare-fun x5437 () Int)
(declare-fun x4432 () Bool)
(declare-fun x979 () Bool)
(declare-fun x1034 () Int)
(declare-fun x4790 () Int)
(declare-fun x88 () Int)
(declare-fun x4094 () Int)
(declare-fun x4028 () Int)
(declare-fun x946 () Bool)
(declare-fun x4897 () Int)
(declare-fun x3454 () Int)
(declare-fun x1627 () Bool)
(declare-fun x1768 () Bool)
(declare-fun x1071 () Int)
(declare-fun x475 () Bool)
(declare-fun x5471 () Bool)
(declare-fun x4429 () Int)
(declare-fun x4197 () Bool)
(declare-fun x4818 () Int)
(declare-fun x1359 () Int)
(declare-fun x1850 () Int)
(declare-fun x3306 () Int)
(declare-fun x2812 () Int)
(declare-fun x2104 () Bool)
(declare-fun x1583 () Int)
(declare-fun x1904 () Int)
(declare-fun x2824 () Int)
(declare-fun x2853 () Int)
(declare-fun x3830 () Int)
(declare-fun x814 () Int)
(declare-fun x632 (Int) Int)
(declare-fun x4439 () Int)
(declare-fun x2593 () Int)
(declare-fun x3769 () Int)
(declare-fun x1131 () Bool)
(declare-fun x4641 () Bool)
(declare-fun x4400 () Int)
(declare-fun x125 () Int)
(declare-fun x2143 () Bool)
(declare-fun x3116 () Bool)
(declare-fun x4810 (Int) Int)
(declare-fun x4337 () Int)
(declare-fun x69 () Int)
(declare-fun x4858 () Int)
(declare-fun x5122 () Bool)
(declare-fun x2994 () Int)
(declare-fun x2005 () Int)
(declare-fun x4895 () Int)
(declare-fun x2174 () Bool)
(declare-fun x5450 () Int)
(declare-fun x1436 () Int)
(declare-fun x1329 () Int)
(declare-fun x665 () Int)
(declare-fun x3690 () Int)
(declare-fun x3966 () Bool)
(declare-fun x3302 () Bool)
(declare-fun x960 () Int)
(declare-fun x2206 () Bool)
(declare-fun x5155 () Int)
(declare-fun x2957 () Int)
(declare-fun x588 () Int)
(declare-fun x3372 () Int)
(declare-fun x852 () Int)
(declare-fun x890 () Bool)
(declare-fun x5027 () Int)
(declare-fun x407 () Bool)
(declare-fun x3597 () Int)
(declare-fun x4476 () Int)
(declare-fun x3611 (Int) Int)
(declare-fun x1172 () Int)
(declare-fun x5016 () Bool)
(declare-fun x3438 () Int)
(declare-fun x5371 () Int)
(declare-fun x1344 () Bool)
(declare-fun x2370 () Int)
(declare-fun x2094 () Bool)
(declare-fun x3436 () Int)
(declare-fun x1639 () Int)
(declare-fun x3129 () Bool)
(declare-fun x216 () Int)
(declare-fun x2349 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x5629 () Int)
(declare-fun x3536 () Int)
(declare-fun x2981 () Bool)
(declare-fun x2089 () Int)
(declare-fun x705 () Int)
(declare-fun x2612 () Int)
(declare-fun x4462 () Bool)
(declare-fun x786 () Int)
(declare-fun x5626 () Int)
(declare-fun x4434 () Int)
(declare-fun x3722 () Bool)
(declare-fun x1911 () Int)
(declare-fun x5068 () Int)
(declare-fun x388 () Int)
(declare-fun x1432 () Int)
(declare-fun x3670 () Bool)
(declare-fun x3134 () Int)
(declare-fun x1983 () Int)
(declare-fun x2215 () Int)
(declare-fun x1358 () Int)
(declare-fun x570 () Bool)
(declare-fun x513 () Int)
(declare-fun x5073 () Bool)
(declare-fun x4179 () Int)
(declare-fun x2943 () Int)
(declare-fun x1897 () Int)
(declare-fun x2191 () Bool)
(declare-fun x5319 () Int)
(declare-fun x3524 () Int)
(declare-fun x1980 () Int)
(declare-fun x2404 () Int)
(declare-fun x5285 () Bool)
(declare-fun x3831 () Int)
(declare-fun x454 () Int)
(declare-fun x795 () Bool)
(declare-fun x4866 () Int)
(declare-fun x1360 () Bool)
(declare-fun x5216 () Int)
(declare-fun x286 () Int)
(declare-fun x264 () Int)
(declare-fun x2118 () Bool)
(declare-fun x437 () Int)
(declare-fun x3654 () Int)
(declare-fun x4756 () Bool)
(declare-fun x600 () Int)
(declare-fun x225 () Int)
(declare-fun x265 () Bool)
(declare-fun x1644 () Int)
(declare-fun x1221 () Bool)
(declare-fun x1495 () Int)
(declare-fun x1723 () Int)
(declare-fun x1035 () Int)
(declare-fun x922 () Int)
(declare-fun x5490 () Int)
(declare-fun x3100 () Bool)
(declare-fun x2963 (Int) Int)
(declare-fun x3188 () Int)
(declare-fun x4793 () Int)
(declare-fun x2634 () Int)
(declare-fun x4340 () Int)
(declare-fun x2787 () Bool)
(declare-fun x223 () Int)
(declare-fun x4894 () Int)
(declare-fun x3049 () Int)
(declare-fun x5106 () Int)
(declare-fun x2450 () Int)
(declare-fun x2013 () Bool)
(declare-fun x2621 (Int) Int)
(declare-fun x4136 () Int)
(declare-fun x5025 () Bool)
(declare-fun x203 () Int)
(declare-fun x1952 () Int)
(declare-fun x3126 () Int)
(declare-fun x73 () Bool)
(declare-fun x27 () Bool)
(declare-fun x3233 () Int)
(declare-fun x2071 () Int)
(declare-fun x1507 () Int)
(declare-fun x191 () Int)
(declare-fun x5366 () Int)
(declare-fun x2536 () Int)
(declare-fun x342 () Bool)
(declare-fun x2886 () Bool)
(declare-fun x2946 () Int)
(declare-fun x5356 () Int)
(declare-fun x1430 () Int)
(declare-fun x4976 () Int)
(declare-fun x783 () Int)
(declare-fun x4900 () Bool)
(declare-fun x478 () Int)
(declare-fun x5552 () Int)
(declare-fun x214 () Int)
(declare-fun x5521 () Bool)
(declare-fun x4040 () Bool)
(declare-fun x5259 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x202 () Int)
(declare-fun x337 () Int)
(declare-fun x1920 () Int)
(declare-fun x2439 () Bool)
(declare-fun x2342 () Int)
(declare-fun x3253 () Bool)
(declare-fun x3640 () Int)
(declare-fun x4070 () Bool)
(declare-fun x1144 () Int)
(declare-fun x4846 () Int)
(declare-fun x1237 () Int)
(declare-fun x2924 () Int)
(declare-fun x734 () Int)
(declare-fun x96 () Int)
(declare-fun x3479 () Bool)
(declare-fun x4052 () Bool)
(declare-fun x5363 () Int)
(declare-fun x567 () Int)
(declare-fun x3942 () Int)
(declare-fun x3612 () Int)
(declare-fun x4607 () Bool)
(declare-fun x4372 () Bool)
(declare-fun x4794 () Int)
(declare-fun x2833 () Int)
(declare-fun x1304 () Bool)
(declare-fun x340 () Bool)
(declare-fun x5128 () Int)
(declare-fun x3069 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x4120 () Int)
(declare-fun x4109 () Int)
(declare-fun x417 () Int)
(declare-fun x2176 () Int)
(declare-fun x250 () Int)
(declare-fun x629 () Int)
(declare-fun x555 () Int)
(declare-fun x3861 () Int)
(declare-fun x2686 () Int)
(declare-fun x3741 () Bool)
(declare-fun x3015 () Int)
(declare-fun x1631 () Bool)
(declare-fun x3544 () Int)
(declare-fun x510 () Int)
(declare-fun x713 () Int)
(declare-fun x2761 () Bool)
(declare-fun x2588 () Int)
(declare-fun x2258 () Bool)
(declare-fun x5581 () Int)
(declare-fun x5647 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x1325 () Int)
(declare-fun x2259 () Bool)
(declare-fun x5337 () Int)
(declare-fun x2382 () Int)
(declare-fun x4890 () Int)
(declare-fun x893 () Int)
(declare-fun x4089 () Int)
(declare-fun x1864 () Bool)
(declare-fun x363 () Bool)
(declare-fun x5628 () Int)
(declare-fun x4605 () Int)
(declare-fun x2811 () Int)
(declare-fun x5078 () Bool)
(declare-fun x4600 () Int)
(declare-fun x3774 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x3162 () Bool)
(declare-fun x5115 () Int)
(declare-fun x4611 () Bool)
(declare-fun x474 () Int)
(declare-fun x813 () Bool)
(declare-fun x3503 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x4870 () Int)
(declare-fun x3427 () Int)
(declare-fun x441 () Int)
(declare-fun x3115 () Int)
(declare-fun x5185 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x50 () Int)
(declare-fun x1233 () Int)
(declare-fun x3102 () Int)
(declare-fun x4682 () Int)
(declare-fun x5463 () Int)
(declare-fun x2214 () Bool)
(declare-fun x4615 () Int)
(declare-fun x631 () Int)
(declare-fun x790 () Int)
(declare-fun x2969 () Bool)
(declare-fun x4713 () Int)
(declare-fun x2576 () Int)
(declare-fun x1138 (Int) Int)
(declare-fun x1508 () Bool)
(declare-fun x2520 () Int)
(declare-fun x1099 () Bool)
(declare-fun x3870 () Int)
(declare-fun x1186 () Int)
(declare-fun x2365 () Int)
(declare-fun x1793 () Int)
(declare-fun x3901 () Bool)
(declare-fun x5455 () Bool)
(declare-fun x3353 () Int)
(declare-fun x98 () Int)
(declare-fun x4010 () Int)
(declare-fun x802 () Bool)
(declare-fun x2266 () Int)
(declare-fun x1530 () Int)
(declare-fun x820 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x2337 () Int)
(declare-fun x5606 () Int)
(declare-fun x1394 () Int)
(declare-fun x3425 () Int)
(declare-fun x1435 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x4206 () Int)
(declare-fun x3703 () Bool)
(declare-fun x2033 () Int)
(declare-fun x4625 () Int)
(declare-fun x3948 () Bool)
(declare-fun x653 () Int)
(declare-fun x4410 () Bool)
(declare-fun x5608 () Int)
(declare-fun x3113 () Int)
(declare-fun x330 () Int)
(declare-fun x5018 () Int)
(declare-fun x1882 () Bool)
(declare-fun x881 (Int) Int)
(declare-fun x1493 () Bool)
(declare-fun x380 () Int)
(declare-fun x1433 () Int)
(declare-fun x503 () Int)
(declare-fun x2720 () Bool)
(declare-fun x2850 () Bool)
(declare-fun x1519 () Int)
(declare-fun x5235 () Int)
(define-fun x2742 ((x4375 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4375) (>= x4375 0)) x4375 (- x4375 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x4395 ((x4375 Int)) Int (ite (and (< x4375 0) (>= x4375 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x4375 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4375))
(define-fun x5553 ((x2146 Int)) Bool (and (>= x2146 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2146)))
(define-fun x2381 ((x2146 Int)) Bool (and (= (x2436 x2146 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2146) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2146) x2146)))
(define-fun x4035 ((x2146 Int)) Bool (and (= 0 (x2436 x2146 0)) (= (x2436 0 x2146) 0)))
(define-fun x3319 ((x2146 Int)) Bool (= (x2436 x2146 x2146) x2146))
(define-fun x1779 ((x2146 Int)) Bool (and (x3319 x2146) (x2381 x2146) (x4035 x2146)))
(define-fun x5267 ((x2146 Int) (x2601 Int)) Bool (= (x2436 x2146 x2601) (x2436 x2601 x2146)))
(define-fun x2564 ((x2146 Int) (x2601 Int)) Bool (and (=> (>= x2146 0) (>= x2146 (x2436 x2146 x2601))) (<= 0 (x2436 x2146 x2601)) (=> (>= x2601 0) (<= (x2436 x2146 x2601) x2601))))
(define-fun x924 ((x2146 Int) (x2601 Int)) Bool (and (x2564 x2146 x2601) (x5267 x2146 x2601)))
(define-fun x3135 ((x2146 Int)) Bool (= (mod x2146 2) (x2436 x2146 1)))
(define-fun x5266 ((x2146 Int)) Bool (and (x3135 x2146) (x924 x2146 1)))
(define-fun x2361 ((x2146 Int)) Bool (= (x2436 x2146 127) (mod x2146 128)))
(define-fun x111 ((x2146 Int)) Bool (and (x2361 x2146) (x924 x2146 127)))
(define-fun x3120 ((x2146 Int)) Bool (= (mod x2146 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x2146 256) (x2436 x2146 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(define-fun x385 ((x2146 Int)) Bool (and (x924 x2146 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x3120 x2146)))
(define-fun x2195 ((x2146 Int)) Bool (= (mod x2146 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (x2436 x2146 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x2146 32))))
(define-fun x121 ((x2146 Int)) Bool (and (x2195 x2146) (x924 x2146 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x377 ((x2146 Int)) Bool (= (x2436 x2146 26959946667150639794667015087019630673637144422540572481103610249215) (mod x2146 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x3086 ((x2146 Int)) Bool (and (x924 x2146 26959946667150639794667015087019630673637144422540572481103610249215) (x377 x2146)))
(define-fun x669 ((x4827 Int)) Int 0)
(define-fun x4715 ((x4827 Int)) Int 0)
(define-fun x1153 ((x4827 Int)) Int 0)
(define-fun x3680 ((x4827 Int)) Int 0)
(define-fun x2345 ((x4827 Int)) Int (ite (> x2945 x4827) (x2171 x4827) 0))
(define-fun x1687 ((x4827 Int)) Int (ite (< x4827 x3268) (x2939 x4827) 0))
(define-fun x3658 ((x4827 Int)) Int (ite (< x4827 x2394) (x5138 x4827) 0))
(define-fun x1575 ((x4827 Int)) Int (ite (> x761 x4827) (x1679 x4827) 0))
(define-fun x26 ((x4827 Int)) Int (ite (> x2021 x4827) (x709 x4827) 0))
(define-fun x2217 ((x4827 Int)) Int (ite (< x4827 x2821) (x1799 x4827) 0))
(define-fun x4198 ((x4827 Int)) Int (ite (> x1749 x4827) (x3087 x4827) 0))
(define-fun x550 ((x4827 Int)) Int (ite (> x1115 x4827) (x5005 x4827) 0))
(define-fun x1564 ((x4827 Int)) Int (ite (> x1624 x4827) (x4533 x4827) 0))
(define-fun x4289 ((x4827 Int)) Int (ite (< x4827 x3139) (x2300 x4827) 0))
(define-fun x4389 ((x4827 Int)) Int (ite (> x2904 x4827) (x2301 x4827) 0))
(define-fun x5099 ((x4827 Int)) Int (ite (> x1448 x4827) (x632 x4827) 0))
(define-fun x1756 ((x4827 Int)) Int (ite (> x4240 x4827) (x3547 x4827) 0))
(define-fun x4107 ((x4827 Int)) Int (ite (> x687 x4827) (x704 x4827) 0))
(define-fun x491 ((x4827 Int)) Int 0)
(define-fun x824 ((x4827 Int)) Int 0)
(define-fun x3539 ((x4827 Int)) Int 0)
(define-fun x4718 ((x4827 Int)) Int 0)
(define-fun x3838 ((x4827 Int)) Int 0)
(define-fun x2717 ((x4827 Int)) Int 0)
(define-fun x4935 ((x4827 Int)) Int 0)
(define-fun x812 ((x4827 Int)) Int 0)
(define-fun x4891 ((x4827 Int)) Int 0)
(define-fun x295 ((x4827 Int)) Int 0)
(define-fun x4300 ((x4827 Int)) Int 0)
(define-fun x81 ((x4827 Int)) Int 0)
(define-fun x645 ((x4827 Int)) Int 0)
(define-fun x1116 ((x4827 Int)) Int 0)
(define-fun x613 ((x4827 Int)) Int 0)
(define-fun x2908 ((x4827 Int)) Int 0)
(define-fun x5406 ((x4827 Int)) Int 0)
(define-fun x492 ((x4827 Int)) Int 0)
(define-fun x3180 ((x4827 Int)) Int 0)
(define-fun x535 ((x4827 Int)) Int 0)
(define-fun x3730 ((x4827 Int)) Int 0)
(define-fun x4078 ((x4827 Int)) Int 0)
(define-fun x3617 ((x4827 Int)) Int 0)
(define-fun x3980 ((x4827 Int)) Int 0)
(define-fun x220 ((x4827 Int)) Int 0)
(define-fun x3149 ((x4827 Int)) Int 0)
(define-fun x1248 ((x4827 Int)) Int 0)
(define-fun x4046 ((x4827 Int)) Int 0)
(define-fun x4603 ((x4827 Int)) Int 0)
(define-fun x3560 ((x4827 Int)) Int 0)
(define-fun x1017 ((x4827 Int)) Int 0)
(define-fun x3097 ((x4827 Int)) Int 0)
(define-fun x5514 ((x4827 Int)) Int 0)
(define-fun x3383 ((x4827 Int)) Int 0)
(define-fun x2975 ((x4827 Int)) Int 0)
(define-fun x2375 ((x4827 Int)) Int 0)
(define-fun x481 ((x4827 Int)) Int 0)
(define-fun x982 ((x4827 Int)) Int 0)
(define-fun x1834 ((x4827 Int)) Int 0)
(define-fun x5439 ((x4827 Int)) Int 0)
(define-fun x4463 ((x4827 Int)) Int 0)
(define-fun x2521 ((x4827 Int)) Int 0)
(define-fun x3752 ((x4827 Int)) Int 0)
(define-fun x2767 ((x4827 Int)) Int 0)
(define-fun x2077 ((x4827 Int)) Int 0)
(define-fun x3961 ((x4827 Int)) Int 0)
(define-fun x556 ((x4827 Int)) Int 0)
(define-fun x4441 ((x4827 Int)) Int 0)
(define-fun x545 ((x4827 Int)) Int 0)
(define-fun x1957 ((x4827 Int)) Int 0)
(define-fun x5045 ((x4827 Int)) Int 0)
(define-fun x1757 ((x4827 Int)) Int 0)
(define-fun x2857 ((x4827 Int)) Int 0)
(define-fun x2116 ((x4827 Int)) Int 0)
(define-fun x482 ((x4827 Int)) Int 0)
(define-fun x163 ((x4827 Int)) Int 0)
(define-fun x4872 ((x4827 Int)) Int 0)
(define-fun x5560 ((x4827 Int)) Int 0)
(define-fun x3235 ((x4827 Int)) Int 0)
(define-fun x4926 ((x4827 Int)) Int 0)
(define-fun x5414 ((x4827 Int)) Int 0)
(define-fun x274 ((x4827 Int)) Int 0)
(define-fun x831 ((x4827 Int)) Int 0)
(define-fun x1085 ((x4827 Int)) Int 0)
(define-fun x1494 ((x4827 Int)) Int 0)
(define-fun x2708 ((x4827 Int)) Int 0)
(define-fun x3342 ((x4827 Int)) Int 0)
(define-fun x4934 ((x4827 Int)) Int 0)
(define-fun x5404 ((x4827 Int)) Int 0)
(define-fun x3875 ((x4827 Int)) Int 0)
(define-fun x1460 ((x4827 Int)) Int 0)
(define-fun x4196 ((x4827 Int)) Int 0)
(define-fun x1615 ((x4827 Int)) Int 0)
(define-fun x4849 ((x4827 Int)) Int 0)
(define-fun x1731 ((x4827 Int)) Int 0)
(define-fun x4446 ((x4827 Int)) Int 0)
(define-fun x2659 ((x4827 Int)) Int 0)
(define-fun x4753 ((x4827 Int)) Int 0)
(define-fun x822 ((x4827 Int)) Int 0)
(define-fun x38 ((x4827 Int)) Int 0)
(define-fun x1929 ((x4827 Int)) Int 0)
(define-fun x3068 ((x4827 Int)) Int 0)
(define-fun x1655 ((x4827 Int)) Int 0)
(define-fun x2414 ((x4827 Int)) Int 0)
(define-fun x1868 ((x4827 Int)) Int 0)
(define-fun x373 ((x4827 Int)) Int 0)
(define-fun x5167 ((x4827 Int)) Int 0)
(define-fun x2164 ((x4827 Int)) Int 0)
(define-fun x4106 ((x4827 Int)) Int 0)
(define-fun x4570 ((x4827 Int)) Int 0)
(define-fun x5187 ((x4827 Int)) Int (ite (= x909 x4827) x2446 (x1258 x4827)))
(define-fun x5459 ((x4827 Int)) Int (ite (= x4827 x2928) x1594 (x5187 x4827)))
(define-fun x2314 ((x4827 Int)) Int (ite (= 128 x4827) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x2975 x4827)))
(define-fun x5076 ((x4827 Int)) Int (ite (= 132 x4827) x5071 (x2314 x4827)))
(define-fun x1284 ((x4827 Int)) Int (ite (= 0 x4827) x4880 (x2465 x4827)))
(define-fun x5200 ((x4827 Int)) Int (ite (= x4827 128) x4880 (x5076 x4827)))
(define-fun x4660 ((x4827 Int)) Int (ite (= x4827 0) x5415 (x2465 x4827)))
(define-fun x3784 ((x4827 Int)) Int (ite (= 128 x4827) x5415 (x5076 x4827)))
(define-fun x4015 ((x4827 Int)) Int (ite (= x4827 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x2975 x4827)))
(define-fun x3148 ((x4827 Int)) Int (ite (= x4827 132) x5071 (x4015 x4827)))
(define-fun x2709 ((x4827 Int)) Int (ite (= x4827 0) x5617 (x5492 x4827)))
(define-fun x3880 ((x4827 Int)) Int (ite (= 128 x4827) x5617 (x3148 x4827)))
(define-fun x5101 ((x4827 Int)) Int (ite (= x4827 0) x5415 (x5492 x4827)))
(define-fun x5134 ((x4827 Int)) Int (ite (= 128 x4827) x5415 (x3148 x4827)))
(define-fun x4916 ((x4827 Int)) Int (ite x2969 (ite x2759 (x3880 x4827) (x5134 x4827)) (ite x2557 (x5200 x4827) (x3784 x4827))))
(define-fun x4135 ((x4827 Int)) Int (ite (= x4827 x5123) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x4916 x4827)))
(define-fun x341 ((x4827 Int)) Int (ite (= x1920 x4827) x2928 (x4135 x4827)))
(define-fun x2774 ((x4827 Int)) Int (ite (= x4827 x2928) x2172 (x5459 x4827)))
(define-fun x3390 ((x4827 Int)) Int (ite (= x4827 x5342) x3417 (x2774 x4827)))
(define-fun x5309 ((x4827 Int)) Int (ite (= x3863 x4827) x1998 (x5375 x4827)))
(define-fun x4744 ((x4827 Int)) Int (ite (= x4827 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x1731 x4827)))
(define-fun x640 ((x4827 Int)) Int (ite (= x4827 132) x1466 (x4744 x4827)))
(define-fun x390 ((x4827 Int)) Int (ite (= x4827 164) x2073 (x640 x4827)))
(define-fun x564 ((x4827 Int)) Int (ite (= x4827 196) x2379 (x390 x4827)))
(define-fun x2912 ((x4827 Int)) Int (ite (= x4827 228) x962 (x564 x4827)))
(define-fun x884 ((x4827 Int)) Int (ite (= 128 x4827) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x1731 x4827)))
(define-fun x5293 ((x4827 Int)) Int (ite (= 132 x4827) x3702 (x884 x4827)))
(define-fun x3209 ((x4827 Int)) Int (ite (= 164 x4827) 128 (x5293 x4827)))
(define-fun x2295 ((x4827 Int)) Int (ite (= x4827 260) x985 (x3209 x4827)))
(define-fun x241 ((x4827 Int)) Int (ite (= 292 x4827) x299 (x2295 x4827)))
(define-fun x512 ((x4827 Int)) Int (ite (= x4827 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x1731 x4827)))
(define-fun x896 ((x4827 Int)) Int (ite (= x4827 132) x1296 (x512 x4827)))
(define-fun x4348 ((x4827 Int)) Int (ite (= x4827 164) 128 (x896 x4827)))
(define-fun x2892 ((x4827 Int)) Int (ite (= x4827 260) x1794 (x4348 x4827)))
(define-fun x5251 ((x4827 Int)) Int (ite (= x4827 292) x5481 (x2892 x4827)))
(define-fun x442 ((x4827 Int)) Int (ite (= x4827 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x1731 x4827)))
(define-fun x1724 ((x4827 Int)) Int (ite (= 132 x4827) x4836 (x442 x4827)))
(define-fun x34 ((x4827 Int)) Int (ite (= 164 x4827) x1488 (x1724 x4827)))
(define-fun x3146 ((x4827 Int)) Int (ite (= x4827 x858) 2 (x1612 x4827)))
(define-fun x3239 ((x4827 Int)) Int (ite (= x4383 x4827) x1488 (x3678 x4827)))
(define-fun x3213 ((x4827 Int)) Int (ite (= x4827 128) x1488 (x5514 x4827)))
(define-fun x197 ((x4827 Int)) Int (ite (= x4827 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x3213 x4827)))
(define-fun x4377 ((x4827 Int)) Int (ite (= x4827 132) x4836 (x197 x4827)))
(define-fun x1511 ((x4827 Int)) Int (ite (= 164 x4827) 0 (x4377 x4827)))
(define-fun x446 ((x4827 Int)) Int (ite (= x4827 196) 0 (x1511 x4827)))
(define-fun x2016 ((x4827 Int)) Int (ite (= x4827 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x1731 x4827)))
(define-fun x913 ((x4827 Int)) Int (ite (= x4827 132) x1707 (x2016 x4827)))
(define-fun x52 ((x4827 Int)) Int (ite (= x4827 164) 128 (x913 x4827)))
(define-fun x574 ((x4827 Int)) Int (ite (= 260 x4827) x4209 (x52 x4827)))
(define-fun x314 ((x4827 Int)) Int (ite (= 292 x4827) x4202 (x574 x4827)))
(define-fun x3888 ((x4827 Int)) Int (ite (= 128 x4827) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x1731 x4827)))
(define-fun x4544 ((x4827 Int)) Int (ite (= x4827 132) x5653 (x3888 x4827)))
(define-fun x146 ((x4827 Int)) Int (ite (= x4827 164) x4010 (x4544 x4827)))
(define-fun x1317 ((x4827 Int)) Int (ite (= x4827 196) x3889 (x146 x4827)))
(define-fun x4219 ((x4827 Int)) Int (ite (= x4684 x4827) x2862 (x3390 x4827)))
(define-fun x4420 ((x4827 Int)) Int (ite (= x1956 x4827) x4347 (x4219 x4827)))
(define-fun x4448 ((x4827 Int)) Int (ite (= x4827 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x1731 x4827)))
(define-fun x5372 ((x4827 Int)) Int (ite (= x4827 132) x5572 (x4448 x4827)))
(define-fun x2359 ((x4827 Int)) Int (ite (= x2928 x4827) x3464 (x3390 x4827)))
(define-fun x3198 ((x4827 Int)) Int (ite (= x4827 x5572) x3204 (x2359 x4827)))
(define-fun x944 ((x4827 Int)) Int (ite (= 128 x4827) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x1731 x4827)))
(define-fun x3882 ((x4827 Int)) Int (ite (= x4827 132) x2617 (x944 x4827)))
(define-fun x3472 ((x4827 Int)) Int (x1149 x4827))
(define-fun x1302 ((x4827 Int)) Int (ite (= x4827 x3033) x3870 (x2592 x4827)))
(define-fun x2260 ((x4827 Int)) Int (ite x479 (ite x3932 (x2592 x4827) (x1302 x4827)) (x2592 x4827)))
(define-fun x679 ((x4827 Int)) Int (ite x2439 (x2592 x4827) (x2260 x4827)))
(define-fun x1051 ((x4827 Int)) Int (ite x3956 (x956 x4827) (x776 x4827)))
(define-fun x5500 ((x4827 Int)) Int (ite x1859 (x956 x4827) (ite x1670 (x1051 x4827) (x956 x4827))))
(define-fun x1209 ((x4827 Int)) Int (ite x479 (ite x4359 (x5594 x4827) (x956 x4827)) (ite x5029 (x956 x4827) (x5500 x4827))))
(define-fun x3002 ((x4827 Int)) Int (ite x2439 (x956 x4827) (x1209 x4827)))
(define-fun x967 ((x4827 Int)) Int (x3096 x4827))
(define-fun x4738 ((x4827 Int)) Int (x2014 x4827))
(define-fun x3261 ((x4827 Int)) Int (ite x3956 (x4703 x4827) (x5212 x4827)))
(define-fun x3890 ((x4827 Int)) Int (ite x1859 (x4703 x4827) (ite x1670 (x3261 x4827) (x4703 x4827))))
(define-fun x1811 ((x4827 Int)) Int (ite x479 (ite x4359 (x1218 x4827) (x4703 x4827)) (ite x5029 (x4703 x4827) (x3890 x4827))))
(define-fun x4655 ((x4827 Int)) Int (ite x2439 (x4703 x4827) (x1811 x4827)))
(define-fun x3019 ((x4827 Int)) Int (x3754 x4827))
(define-fun x1226 ((x4827 Int)) Int (ite (= x4875 x4827) 3 (x3146 x4827)))
(define-fun x4022 ((x4827 Int)) Int (ite x586 (x3146 x4827) (x1226 x4827)))
(define-fun x833 ((x4827 Int)) Int (ite (= x4827 x2495) 3 (x1612 x4827)))
(define-fun x49 ((x4827 Int)) Int (ite x1859 (x833 x4827) (x1612 x4827)))
(define-fun x4953 ((x4827 Int)) Int (ite x479 (x1612 x4827) (ite x5029 (x4022 x4827) (x49 x4827))))
(define-fun x1018 ((x4827 Int)) Int (ite x2439 (x1612 x4827) (x4953 x4827)))
(define-fun x3018 ((x4827 Int)) Int (ite x4359 (x2499 x4827) (x4855 x4827)))
(define-fun x4303 ((x4827 Int)) Int (ite x1670 (ite x3956 (x4855 x4827) (x604 x4827)) (x4855 x4827)))
(define-fun x522 ((x4827 Int)) Int (ite x5029 (x4855 x4827) (ite x1859 (x4855 x4827) (x4303 x4827))))
(define-fun x1773 ((x4827 Int)) Int (ite x2439 (x4855 x4827) (ite x479 (x3018 x4827) (x522 x4827))))
(define-fun x1753 ((x4827 Int)) Int (ite x3956 (x1701 x4827) (x1565 x4827)))
(define-fun x1889 ((x4827 Int)) Int (ite x1859 (x1701 x4827) (ite x1670 (x1753 x4827) (x1701 x4827))))
(define-fun x4805 ((x4827 Int)) Int (ite x479 (ite x4359 (x3037 x4827) (x1701 x4827)) (ite x5029 (x1701 x4827) (x1889 x4827))))
(define-fun x2228 ((x4827 Int)) Int (ite x2439 (x1701 x4827) (x4805 x4827)))
(define-fun x651 ((x4827 Int)) Int (ite x3956 (x2839 x4827) (x4111 x4827)))
(define-fun x2403 ((x4827 Int)) Int (ite x1859 (x2839 x4827) (ite x1670 (x651 x4827) (x2839 x4827))))
(define-fun x1191 ((x4827 Int)) Int (ite x479 (ite x4359 (x1306 x4827) (x2839 x4827)) (ite x5029 (x2839 x4827) (x2403 x4827))))
(define-fun x3312 ((x4827 Int)) Int (ite x2439 (x2839 x4827) (x1191 x4827)))
(define-fun x2097 ((x4827 Int)) Int (ite x3956 (x2621 x4827) (x3611 x4827)))
(define-fun x23 ((x4827 Int)) Int (ite x1859 (x2621 x4827) (ite x1670 (x2097 x4827) (x2621 x4827))))
(define-fun x3605 ((x4827 Int)) Int (ite x479 (ite x4359 (x5295 x4827) (x2621 x4827)) (ite x5029 (x2621 x4827) (x23 x4827))))
(define-fun x413 ((x4827 Int)) Int (ite x2439 (x2621 x4827) (x3605 x4827)))
(define-fun x321 ((x4827 Int)) Int (ite x3956 (x2587 x4827) (x4527 x4827)))
(define-fun x2294 ((x4827 Int)) Int (ite x1859 (x2587 x4827) (ite x1670 (x321 x4827) (x2587 x4827))))
(define-fun x2546 ((x4827 Int)) Int (ite x479 (ite x4359 (x4810 x4827) (x2587 x4827)) (ite x5029 (x2587 x4827) (x2294 x4827))))
(define-fun x2477 ((x4827 Int)) Int (ite x2439 (x2587 x4827) (x2546 x4827)))
(define-fun x20 ((x4827 Int)) Int (ite x3956 (x17 x4827) (x1445 x4827)))
(define-fun x2460 ((x4827 Int)) Int (ite x1859 (x17 x4827) (ite x1670 (x20 x4827) (x17 x4827))))
(define-fun x4311 ((x4827 Int)) Int (ite x479 (ite x4359 (x5043 x4827) (x17 x4827)) (ite x5029 (x17 x4827) (x2460 x4827))))
(define-fun x1748 ((x4827 Int)) Int (ite x2439 (x17 x4827) (x4311 x4827)))
(define-fun x4677 ((x4827 Int)) Int (ite x3956 (x1060 x4827) (x2483 x4827)))
(define-fun x256 ((x4827 Int)) Int (ite x1859 (x1060 x4827) (ite x1670 (x4677 x4827) (x1060 x4827))))
(define-fun x2207 ((x4827 Int)) Int (ite x479 (ite x4359 (x4863 x4827) (x1060 x4827)) (ite x5029 (x1060 x4827) (x256 x4827))))
(define-fun x5206 ((x4827 Int)) Int (ite x2439 (x1060 x4827) (x2207 x4827)))
(define-fun x1160 ((x4827 Int)) Int (x3845 x4827))
(define-fun x3864 ((x4827 Int)) Int (x124 x4827))
(define-fun x2262 ((x4827 Int)) Int (ite x3956 (x3877 x4827) (x4500 x4827)))
(define-fun x3584 ((x4827 Int)) Int (ite x1859 (x3877 x4827) (ite x1670 (x2262 x4827) (x3877 x4827))))
(define-fun x4449 ((x4827 Int)) Int (ite x479 (ite x4359 (x3919 x4827) (x3877 x4827)) (ite x5029 (x3877 x4827) (x3584 x4827))))
(define-fun x4968 ((x4827 Int)) Int (ite x2439 (x3877 x4827) (x4449 x4827)))
(define-fun x2142 ((x4827 Int)) Int (ite x4359 (x2190 x4827) (x4466 x4827)))
(define-fun x4000 ((x4827 Int)) Int (ite x1670 (ite x3956 (x4466 x4827) (x1138 x4827)) (x4466 x4827)))
(define-fun x3546 ((x4827 Int)) Int (ite x5029 (x4466 x4827) (ite x1859 (x4466 x4827) (x4000 x4827))))
(define-fun x5273 ((x4827 Int)) Int (ite x2439 (x4466 x4827) (ite x479 (x2142 x4827) (x3546 x4827))))
(define-fun x2442 ((x4827 Int)) Int (ite x3956 (x5520 x4827) (x4865 x4827)))
(define-fun x1373 ((x4827 Int)) Int (ite x1859 (x5520 x4827) (ite x1670 (x2442 x4827) (x5520 x4827))))
(define-fun x2843 ((x4827 Int)) Int (ite x479 (ite x4359 (x1291 x4827) (x5520 x4827)) (ite x5029 (x5520 x4827) (x1373 x4827))))
(define-fun x2441 ((x4827 Int)) Int (ite x2439 (x5520 x4827) (x2843 x4827)))
(define-fun x836 ((x4827 Int)) Int (x3897 x4827))
(define-fun x4908 ((x4827 Int)) Int (ite x3956 (x5375 x4827) (x2719 x4827)))
(define-fun x5607 ((x4827 Int)) Int (ite x1859 (x5375 x4827) (ite x1670 (x4908 x4827) (x5375 x4827))))
(define-fun x1540 ((x4827 Int)) Int (ite x479 (ite x4359 (x4309 x4827) (x5375 x4827)) (ite x5029 (x5375 x4827) (x5607 x4827))))
(define-fun x3480 ((x4827 Int)) Int (ite x2439 (x5375 x4827) (x1540 x4827)))
(define-fun x3142 ((x4827 Int)) Int (ite x479 (x3678 x4827) (ite x5029 (x3239 x4827) (x3678 x4827))))
(define-fun x4512 ((x4827 Int)) Int (ite x2439 (x3678 x4827) (x3142 x4827)))
(define-fun x1525 ((x4827 Int)) Int (ite x4359 (x3850 x4827) (x4472 x4827)))
(define-fun x1561 ((x4827 Int)) Int (ite x1670 (ite x3956 (x4472 x4827) (x2673 x4827)) (x4472 x4827)))
(define-fun x2165 ((x4827 Int)) Int (ite x5029 (x4472 x4827) (ite x1859 (x4472 x4827) (x1561 x4827))))
(define-fun x1538 ((x4827 Int)) Int (ite x2439 (x4472 x4827) (ite x479 (x1525 x4827) (x2165 x4827))))
(define-fun x2246 ((x4827 Int)) Int (x1149 x4827))
(define-fun x3219 ((x4827 Int)) Int (x2014 x4827))
(define-fun x4341 ((x4827 Int)) Int (x3096 x4827))
(define-fun x1318 ((x4827 Int)) Int (ite x479 (x3018 x4827) (x522 x4827)))
(define-fun x3118 ((x4827 Int)) Int (x3754 x4827))
(define-fun x749 ((x4827 Int)) Int (x124 x4827))
(define-fun x4618 ((x4827 Int)) Int (x3845 x4827))
(define-fun x2035 ((x4827 Int)) Int (ite x479 (x2142 x4827) (x3546 x4827)))
(define-fun x4417 ((x4827 Int)) Int (x3897 x4827))
(define-fun x998 ((x4827 Int)) Int (ite x479 (x1525 x4827) (x2165 x4827)))
(define-fun x1043 ((x4827 Int)) Int (ite x5029 (x17 x4827) (x2460 x4827)))
(define-fun x4545 ((x4827 Int)) Int (ite x5029 (x2621 x4827) (x23 x4827)))
(define-fun x1994 ((x4827 Int)) Int (x1149 x4827))
(define-fun x151 ((x4827 Int)) Int (x3096 x4827))
(define-fun x2645 ((x4827 Int)) Int (ite x5029 (x4703 x4827) (x3890 x4827)))
(define-fun x1801 ((x4827 Int)) Int (x3754 x4827))
(define-fun x2580 ((x4827 Int)) Int (x2014 x4827))
(define-fun x2845 ((x4827 Int)) Int (x124 x4827))
(define-fun x692 ((x4827 Int)) Int (ite x5029 (x956 x4827) (x5500 x4827)))
(define-fun x925 ((x4827 Int)) Int (ite x5029 (x1701 x4827) (x1889 x4827)))
(define-fun x444 ((x4827 Int)) Int (ite x5029 (x2587 x4827) (x2294 x4827)))
(define-fun x4271 ((x4827 Int)) Int (x3897 x4827))
(define-fun x3386 ((x4827 Int)) Int (x3845 x4827))
(define-fun x4108 ((x4827 Int)) Int (ite x5029 (x5520 x4827) (x1373 x4827)))
(define-fun x4084 ((x4827 Int)) Int (ite x5029 (x3877 x4827) (x3584 x4827)))
(define-fun x2429 ((x4827 Int)) Int (ite x5029 (x5375 x4827) (x5607 x4827)))
(define-fun x527 ((x4827 Int)) Int (x2592 x4827))
(define-fun x359 ((x4827 Int)) Int (ite x5029 (x1060 x4827) (x256 x4827)))
(define-fun x883 ((x4827 Int)) Int (ite x5029 (x2839 x4827) (x2403 x4827)))
(define-fun x2421 ((x4827 Int)) Int (ite x5029 (x4022 x4827) (x49 x4827)))
(define-fun x2633 ((x4827 Int)) Int (ite x5029 (x3239 x4827) (x3678 x4827)))
(define-fun x1217 ((x4827 Int)) Int (ite (= x4684 x4827) x3790 (x3390 x4827)))
(define-fun x2983 ((x4827 Int)) Int (ite x1859 (x4855 x4827) (x4303 x4827)))
(define-fun x1895 ((x4827 Int)) Int (ite x1859 (x4472 x4827) (x1561 x4827)))
(define-fun x3565 ((x4827 Int)) Int (ite x1859 (x4466 x4827) (x4000 x4827)))
(define-fun x1080 ((x4827 Int)) Int (ite x1670 (x20 x4827) (x17 x4827)))
(define-fun x2676 ((x4827 Int)) Int (ite x1670 (x2097 x4827) (x2621 x4827)))
(define-fun x682 ((x4827 Int)) Int (ite x1670 (x3261 x4827) (x4703 x4827)))
(define-fun x2149 ((x4827 Int)) Int (ite x1670 (x1753 x4827) (x1701 x4827)))
(define-fun x2789 ((x4827 Int)) Int (ite x1670 (x1051 x4827) (x956 x4827)))
(define-fun x3001 ((x4827 Int)) Int (ite x1670 (x4677 x4827) (x1060 x4827)))
(define-fun x4942 ((x4827 Int)) Int (ite x1670 (x2442 x4827) (x5520 x4827)))
(define-fun x4272 ((x4827 Int)) Int (ite x1670 (x2262 x4827) (x3877 x4827)))
(define-fun x1560 ((x4827 Int)) Int (ite x1670 (x651 x4827) (x2839 x4827)))
(define-fun x4580 ((x4827 Int)) Int (ite x1670 (x4908 x4827) (x5375 x4827)))
(define-fun x2356 ((x4827 Int)) Int (ite x1670 (x321 x4827) (x2587 x4827)))
(define-fun x3957 ((x4827 Int)) Int (ite (= 292 x4827) x1806 (x574 x4827)))
(define-fun x1955 ((x4827 Int)) Int (ite x3457 (ite x1702 (x574 x4827) (x3957 x4827)) (x314 x4827)))
(define-fun x2074 ((x4827 Int)) Int (ite (= x4827 196) x4248 (x1955 x4827)))
(define-fun x2691 ((x4827 Int)) Int (ite (= 228 x4827) x3016 (x2074 x4827)))
(define-fun x2145 ((x4827 Int)) Int (ite (= x4827 x2502) x5453 (x2691 x4827)))
(define-fun x2018 ((x4827 Int)) Int (ite (= x1187 x4827) x4470 (x2145 x4827)))
(define-fun x3701 ((x4827 Int)) Int (ite (= 292 x4827) x469 (x2295 x4827)))
(define-fun x525 ((x4827 Int)) Int (ite (= x4827 292) x757 (x2892 x4827)))
(define-fun x809 ((x4827 Int)) Int (ite x2974 (ite x1503 (x2295 x4827) (x3701 x4827)) (x241 x4827)))
(define-fun x4941 ((x4827 Int)) Int (ite (= x4827 196) x4920 (x809 x4827)))
(define-fun x4644 ((x4827 Int)) Int (ite (= 228 x4827) x5364 (x4941 x4827)))
(define-fun x4609 ((x4827 Int)) Int (ite (= x4827 x4322) x5088 (x4644 x4827)))
(define-fun x312 ((x4827 Int)) Int (ite (= x4827 x4619) x2080 (x4609 x4827)))
(define-fun x3297 ((x4827 Int)) Int (ite x3069 (ite x3578 (x2892 x4827) (x525 x4827)) (x5251 x4827)))
(define-fun x2306 ((x4827 Int)) Int (ite (= 196 x4827) x5198 (x3297 x4827)))
(define-fun x418 ((x4827 Int)) Int (ite (= x4827 228) x4192 (x2306 x4827)))
(define-fun x258 ((x4827 Int)) Int (ite (= x2474 x4827) x5249 (x418 x4827)))
(define-fun x2311 ((x4827 Int)) Int (ite (= x4028 x4827) x4235 (x258 x4827)))
(define-fun x195 ((x4827 Int)) Int (ite (= x1187 x4827) x708 (x2145 x4827)))
(define-fun x949 ((x4827 Int)) Int (ite x4210 (ite x4471 (x2145 x4827) (x2018 x4827)) (x195 x4827)))
(define-fun x5419 ((x4827 Int)) Int (ite (= x4827 x4684) x5437 (x3390 x4827)))
(define-fun x4774 ((x4827 Int)) Int (ite (and (< x4827 x3347) (>= x4827 164)) (x949 (+ x4827 128)) (x3658 x4827)))
(define-fun x5616 ((x4827 Int)) Int (ite (and (< x4827 (+ 128 x5277)) (<= 128 x4827)) (x4774 (+ x4827 36)) (x4078 x4827)))
(define-fun x4648 ((x4827 Int)) Int (ite (= x1433 x4827) 0 (x5616 x4827)))
(define-fun x5389 ((x4827 Int)) Int (ite (= x4827 x3442) x4229 (x4648 x4827)))
(define-fun x4675 ((x4827 Int)) Int (ite (and (< x4827 (+ x1234 128)) (>= x4827 128)) (x4774 (- (+ x1069 x4827) 128)) (x5389 x4827)))
(define-fun x3733 ((x4827 Int)) Int (ite (= x4827 x4218) 0 (x4675 x4827)))
(define-fun x4542 ((x4827 Int)) Int (ite (and (<= 128 x4827) (< x4827 (+ x5277 128))) (x4774 (+ x4827 36)) (x3733 x4827)))
(define-fun x3788 ((x4827 Int)) Int (ite (= x1157 x4827) 0 (x4542 x4827)))
(define-fun x4515 ((x4827 Int)) Int (ite (= x3362 x4827) x3781 (x3788 x4827)))
(define-fun x2870 ((x4827 Int)) Int (ite (= x2404 x4827) 0 (x2592 x4827)))
(define-fun x83 ((x4827 Int)) Int (ite (= 128 x4827) x5277 (x4515 x4827)))
(define-fun x5589 ((x4827 Int)) Int (ite (and (< x4827 (+ x5277 160)) (<= 160 x4827)) (x4774 (+ 4 x4827)) (x83 x4827)))
(define-fun x528 ((x4827 Int)) Int (ite (= x2504 x4827) 0 (x5589 x4827)))
(define-fun x2494 ((x4827 Int)) Int (ite (= x2738 x4827) x1234 (x528 x4827)))
(define-fun x3225 ((x4827 Int)) Int (ite (and (< x4827 (+ x139 x1234)) (<= x139 x4827)) (x4774 (- (+ x4827 x1069) x139)) (x2494 x4827)))
(define-fun x591 ((x4827 Int)) Int (ite (= x4702 x4827) 0 (x3225 x4827)))
(define-fun x4230 ((x4827 Int)) Int (ite (= x4827 x5201) 1 (x124 x4827)))
(define-fun x3308 ((x4827 Int)) Int (ite (= x4827 x4619) x4354 (x4609 x4827)))
(define-fun x5258 ((x4827 Int)) Int (ite (= x4028 x4827) x214 (x258 x4827)))
(define-fun x3504 ((x4827 Int)) Int (ite x4661 (ite x397 (x4609 x4827) (x312 x4827)) (x3308 x4827)))
(define-fun x4380 ((x4827 Int)) Int (ite (and (<= 164 x4827) (> x1463 x4827)) (x3504 (+ x4827 128)) (x2345 x4827)))
(define-fun x5428 ((x4827 Int)) Int (ite (= x4827 128) x1981 (x3730 x4827)))
(define-fun x451 ((x4827 Int)) Int (ite (= 160 x4827) x5308 (x5428 x4827)))
(define-fun x3750 ((x4827 Int)) Int (ite (= x4827 160) x1842 (x5428 x4827)))
(define-fun x2134 ((x4827 Int)) Int (ite x1838 (ite x4161 (x258 x4827) (x2311 x4827)) (x5258 x4827)))
(define-fun x1872 ((x4827 Int)) Int (ite (and (> x577 x4827) (>= x4827 164)) (x2134 (+ 128 x4827)) (x1687 x4827)))
(define-fun x5531 ((x4827 Int)) Int (ite (= x4827 x3399) x3743 (x2375 x4827)))
(define-fun x5400 ((x4827 Int)) Int (ite (and (<= x284 x4827) (> (+ x284 x3743) x4827)) (x1872 (- (+ x2208 x4827) x284)) (x220 x4827)))
(define-fun x2722 ((x4827 Int)) Int (ite (= x4827 x355) 0 (x5400 x4827)))
(define-fun x3812 ((x4827 Int)) Int (ite (= x4267 x4827) 1 (x124 x4827)))
(define-fun x1866 ((x4827 Int)) Int (ite (= 192 x4827) x804 (x451 x4827)))
(define-fun x5192 ((x4827 Int)) Int (ite x4845 (x5428 x4827) (ite x1593 (ite x136 (x451 x4827) (x1866 x4827)) (x3750 x4827))))
(define-fun x117 ((x4827 Int)) Int (ite (and (> (+ x2553 x5613) x4827) (>= x4827 x2553)) (x4380 (- (+ 164 x4827) x2553)) (x5192 x4827)))
(define-fun x4177 ((x4827 Int)) Int (ite (= x774 x4827) 0 (x117 x4827)))
(define-fun x348 ((x4827 Int)) Int (ite x1099 (x4177 x4827) (x5192 x4827)))
(define-fun x2968 ((x4827 Int)) Int (ite (= x2553 x4827) x5613 (x348 x4827)))
(define-fun x467 ((x4827 Int)) Int (ite (and (>= x4827 x296) (< x4827 (+ x296 x5613))) (x4380 (- (+ 164 x4827) x296)) (x2968 x4827)))
(define-fun x3672 ((x4827 Int)) Int (ite (= x1788 x4827) 0 (x467 x4827)))
(define-fun x5228 ((x4827 Int)) Int (ite (= x796 x4827) x4501 (x3672 x4827)))
(define-fun x5578 ((x4827 Int)) Int (ite (and (< x4827 (+ x4127 x4501)) (<= x4127 x4827)) (x4380 (- (+ x4827 x4830) x4127)) (x5228 x4827)))
(define-fun x3335 ((x4827 Int)) Int (ite (= x4827 x4477) 0 (x5578 x4827)))
(define-fun x2393 ((x4827 Int)) Int (ite (= x4827 x4970) x3702 (x3335 x4827)))
(define-fun x2863 ((x4827 Int)) Int (ite (= x5117 x4827) 128 (x2393 x4827)))
(define-fun x313 ((x4827 Int)) Int (ite (= x1893 x4827) x968 (x2863 x4827)))
(define-fun x1766 ((x4827 Int)) Int (ite (= x4827 x1047) x1468 (x313 x4827)))
(define-fun x4488 ((x4827 Int)) Int (ite (= x2915 x4827) x2218 (x1766 x4827)))
(define-fun x616 ((x4827 Int)) Int (ite (= x4317 x4827) x2435 (x4488 x4827)))
(define-fun x3226 ((x4827 Int)) Int (ite (= x4827 x2004) x4261 (x616 x4827)))
(define-fun x3554 ((x4827 Int)) Int (ite x898 (x616 x4827) (ite x926 (x4488 x4827) (ite x2223 (x1766 x4827) (ite x3429 (x313 x4827) (x3226 x4827))))))
(define-fun x2856 ((x4827 Int)) Int (ite (= x4827 x96) 0 (x3554 x4827)))
(define-fun x3909 ((x4827 Int)) Int (ite (= x4827 x4731) x4920 (x2856 x4827)))
(define-fun x4831 ((x4827 Int)) Int (ite (= x4827 x4382) x4531 (x3909 x4827)))
(define-fun x252 ((x4827 Int)) Int (ite (= x4827 x2503) x665 (x4831 x4827)))
(define-fun x122 ((x4827 Int)) Int (ite (= x4827 x1363) x3094 (x252 x4827)))
(define-fun x1769 ((x4827 Int)) Int (ite (= x4827 x2417) x3886 (x122 x4827)))
(define-fun x4950 ((x4827 Int)) Int (ite (= x4827 x2999) x4418 (x1769 x4827)))
(define-fun x189 ((x4827 Int)) Int (ite (= x4827 x5205) x3606 (x4950 x4827)))
(define-fun x2064 ((x4827 Int)) Int (ite x3462 (x4950 x4827) (ite x1713 (x1769 x4827) (ite x3035 (x122 x4827) (ite x1652 (x252 x4827) (x189 x4827))))))
(define-fun x4487 ((x4827 Int)) Int (ite (= x4827 x5324) 0 (x2064 x4827)))
(define-fun x206 ((x4827 Int)) Int (ite (= x4827 x2527) x1010 (x4487 x4827)))
(define-fun x176 ((x4827 Int)) Int (ite (= x4827 x2506) x1451 (x206 x4827)))
(define-fun x3620 ((x4827 Int)) Int (ite (= x4623 x4827) 150 (x176 x4827)))
(define-fun x2988 ((x4827 Int)) Int (ite (and (<= x2169 x4827) (> (+ x2169 150) x4827)) (x4380 (- (+ x1376 x4827) x2169)) (x3620 x4827)))
(define-fun x3212 ((x4827 Int)) Int (ite (and (> 0 x4827) (<= 0 x4827)) (x1892 x4827) (x2988 x4827)))
(define-fun x4548 ((x4827 Int)) Int (ite x4359 (x3212 x4827) (x2988 x4827)))
(define-fun x3519 ((x4827 Int)) Int (ite (= x4623 x4827) x3641 (x4548 x4827)))
(define-fun x2002 ((x4827 Int)) Int (ite (and (> (+ x3641 x4813) x4827) (<= x4813 x4827)) (x1892 (- x4827 x4813)) (x3519 x4827)))
(define-fun x245 ((x4827 Int)) Int (ite (= x4827 x5362) x1752 (x2002 x4827)))
(define-fun x5158 ((x4827 Int)) Int (ite (= x4827 x148) x3467 (x245 x4827)))
(define-fun x502 ((x4827 Int)) Int (ite (= x3945 x4827) x3091 (x5158 x4827)))
(define-fun x400 ((x4827 Int)) Int (ite x3932 (x2592 x4827) (x1302 x4827)))
(define-fun x3785 ((x4827 Int)) Int (ite (= x5544 x4827) x427 (x502 x4827)))
(define-fun x4857 ((x4827 Int)) Int (ite x5007 (x502 x4827) (ite x3676 (x5158 x4827) (ite x5506 (x245 x4827) (ite x5567 (x2002 x4827) (x3785 x4827))))))
(define-fun x2663 ((x4827 Int)) Int (ite (= x5626 x4827) 0 (x4857 x4827)))
(define-fun x916 ((x4827 Int)) Int (ite (= x4827 x4346) x247 (x2663 x4827)))
(define-fun x378 ((x4827 Int)) Int (ite (= x4827 x5362) x3702 (x916 x4827)))
(define-fun x4087 ((x4827 Int)) Int (ite (= x222 x4827) 160 (x378 x4827)))
(define-fun x4090 ((x4827 Int)) Int (ite (= x4827 x3164) x713 (x4087 x4827)))
(define-fun x1274 ((x4827 Int)) Int (ite (= x3262 x4827) x2251 (x4090 x4827)))
(define-fun x4575 ((x4827 Int)) Int (ite (= x3767 x4827) x1556 (x1274 x4827)))
(define-fun x1067 ((x4827 Int)) Int (ite (= x4092 x4827) x513 (x4575 x4827)))
(define-fun x1782 ((x4827 Int)) Int (ite (= x2100 x4827) x3144 (x1067 x4827)))
(define-fun x5054 ((x4827 Int)) Int (ite x1442 (x1067 x4827) (ite x3585 (x4575 x4827) (ite x1810 (x1274 x4827) (ite x2427 (x4090 x4827) (x1782 x4827))))))
(define-fun x4234 ((x4827 Int)) Int (ite (= x2847 x4827) 0 (x5054 x4827)))
(define-fun x4204 ((x4827 Int)) Int (ite (= x1605 x4827) x4920 (x4234 x4827)))
(define-fun x4014 ((x4827 Int)) Int (ite (= x4827 x448) x3710 (x4204 x4827)))
(define-fun x4494 ((x4827 Int)) Int (ite (= x3962 x4827) x5429 (x4014 x4827)))
(define-fun x494 ((x4827 Int)) Int (ite (= x4827 x4119) x5513 (x4494 x4827)))
(define-fun x1048 ((x4827 Int)) Int (ite (= x5220 x4827) x4537 (x494 x4827)))
(define-fun x1548 ((x4827 Int)) Int (ite (= x4827 x823) x1104 (x1048 x4827)))
(define-fun x938 ((x4827 Int)) Int (ite (= x4827 x2387) x166 (x1548 x4827)))
(define-fun x62 ((x4827 Int)) Int (ite x4906 (x1548 x4827) (ite x3360 (x1048 x4827) (ite x2705 (x494 x4827) (ite x5352 (x4494 x4827) (x938 x4827))))))
(define-fun x851 ((x4827 Int)) Int (ite (= x4827 x3783) 0 (x62 x4827)))
(define-fun x630 ((x4827 Int)) Int (ite (= x5579 x4827) x1881 (x851 x4827)))
(define-fun x2986 ((x4827 Int)) Int (x1149 x4827))
(define-fun x2309 ((x4827 Int)) Int (x3096 x4827))
(define-fun x3848 ((x4827 Int)) Int (x4472 x4827))
(define-fun x4508 ((x4827 Int)) Int (x1701 x4827))
(define-fun x2419 ((x4827 Int)) Int (x2839 x4827))
(define-fun x5221 ((x4827 Int)) Int (x4855 x4827))
(define-fun x4041 ((x4827 Int)) Int (x3754 x4827))
(define-fun x5127 ((x4827 Int)) Int (x2014 x4827))
(define-fun x628 ((x4827 Int)) Int (x124 x4827))
(define-fun x3074 ((x4827 Int)) Int (x1060 x4827))
(define-fun x362 ((x4827 Int)) Int (x2621 x4827))
(define-fun x4214 ((x4827 Int)) Int (x4466 x4827))
(define-fun x4058 ((x4827 Int)) Int (x5375 x4827))
(define-fun x4469 ((x4827 Int)) Int (x3897 x4827))
(define-fun x1622 ((x4827 Int)) Int (x3239 x4827))
(define-fun x4614 ((x4827 Int)) Int (x5520 x4827))
(define-fun x5219 ((x4827 Int)) Int (x3845 x4827))
(define-fun x2799 ((x4827 Int)) Int (x17 x4827))
(define-fun x793 ((x4827 Int)) Int (x4703 x4827))
(define-fun x2861 ((x4827 Int)) Int (x956 x4827))
(define-fun x3775 ((x4827 Int)) Int (x3877 x4827))
(define-fun x3403 ((x4827 Int)) Int (x2592 x4827))
(define-fun x179 ((x4827 Int)) Int (x2587 x4827))
(define-fun x182 ((x4827 Int)) Int (ite (= 4 x4827) 33 (x3838 x4827)))
(define-fun x4982 ((x4827 Int)) Int (ite (and (< x4827 36) (>= x4827 0)) (x182 x4827) (x1452 x4827)))
(define-fun x4215 ((x4827 Int)) Int (ite (= 160 x4827) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3875 x4827)))
(define-fun x4539 ((x4827 Int)) Int (ite (= 192 x4827) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4215 x4827)))
(define-fun x2203 ((x4827 Int)) Int (ite (= 128 x4827) 64 (x3752 x4827)))
(define-fun x5438 ((x4827 Int)) Int (ite (= x4827 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x669 x4827)))
(define-fun x2371 ((x4827 Int)) Int (ite (= x4827 258) x5377 (x5438 x4827)))
(define-fun x1417 ((x4827 Int)) Int (ite (= x4827 224) 34 (x1929 x4827)))
(define-fun x5280 ((x4827 Int)) Int (ite (= x4827 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x4446 x4827)))
(define-fun x2803 ((x4827 Int)) Int (ite (= 294 x4827) x2781 (x5280 x4827)))
(define-fun x2784 ((x4827 Int)) Int (ite (= x4827 326) x2928 (x2803 x4827)))
(define-fun x487 ((x4827 Int)) Int (ite (= 358 x4827) 160 (x2784 x4827)))
(define-fun x4732 ((x4827 Int)) Int (ite (= 454 x4827) x1280 (x487 x4827)))
(define-fun x317 ((x4827 Int)) Int (ite (and (< x4827 (+ x1280 486)) (>= x4827 486)) (x4539 (- x4827 326)) (x4732 x4827)))
(define-fun x609 ((x4827 Int)) Int (ite (= 390 x4827) 0 (x317 x4827)))
(define-fun x1277 ((x4827 Int)) Int (ite (= 422 x4827) x826 (x609 x4827)))
(define-fun x3277 ((x4827 Int)) Int (ite (= x4827 x1033) x1371 (x1277 x4827)))
(define-fun x175 ((x4827 Int)) Int (ite (and (< x4827 (+ x1371 x4392)) (<= x4392 x4827)) (x2371 (- (+ 256 x4827) x4392)) (x3277 x4827)))
(define-fun x3341 ((x4827 Int)) Int (ite (and (> x3355 x4827) (>= x4827 292)) (x175 (+ 290 x4827)) (x26 x4827)))
(define-fun x927 ((x4827 Int)) Int (ite (= x4827 128) 0 (x812 x4827)))
(define-fun x1303 ((x4827 Int)) Int (ite (= 160 x4827) 0 (x927 x4827)))
(define-fun x375 ((x4827 Int)) Int (ite (= 290 x4827) x2906 (x175 x4827)))
(define-fun x3255 ((x4827 Int)) Int (ite (= x4827 322) x2007 (x375 x4827)))
(define-fun x1650 ((x4827 Int)) Int (ite (= x4827 0) x3660 (x1059 x4827)))
(define-fun x1140 ((x4827 Int)) Int (ite (= x4827 32) x5538 (x1650 x4827)))
(define-fun x4307 ((x4827 Int)) Int (ite (= 128 x4827) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x3838 x4827)))
(define-fun x3459 ((x4827 Int)) Int (ite (and (> 4 x4827) (>= x4827 0)) (x4307 (+ x4827 128)) (x1452 x4827)))
(define-fun x226 ((x4827 Int)) Int (ite (= 128 x4827) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x3838 x4827)))
(define-fun x3317 ((x4827 Int)) Int (ite (and (<= 0 x4827) (< x4827 4)) (x226 (+ 128 x4827)) (x1452 x4827)))
(define-fun x1418 ((x4827 Int)) Int (ite (= 548 x4827) x1863 (x1868 x4827)))
(define-fun x5156 ((x4827 Int)) Int (ite (= x4827 580) x2647 (x1418 x4827)))
(define-fun x3172 ((x4827 Int)) Int (ite (= 548 x4827) x2646 (x1868 x4827)))
(define-fun x3408 ((x4827 Int)) Int (ite x4052 (x4872 x4827) (ite x3959 (ite x4426 (x1418 x4827) (x5156 x4827)) (x3172 x4827))))
(define-fun x3310 ((x4827 Int)) Int (ite (= 516 x4827) x329 (x491 x4827)))
(define-fun x1079 ((x4827 Int)) Int (ite (= x2731 x4827) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3838 x4827)))
(define-fun x3155 ((x4827 Int)) Int (ite (= x278 x4827) 32 (x1079 x4827)))
(define-fun x2689 ((x4827 Int)) Int (ite (= x2158 x4827) 48 (x3155 x4827)))
(define-fun x1052 ((x4827 Int)) Int (ite (= x4913 x4827) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x2689 x4827)))
(define-fun x1212 ((x4827 Int)) Int (ite (= x4827 x2917) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x1052 x4827)))
(define-fun x2151 ((x4827 Int)) Int (ite (and (<= 0 x4827) (< x4827 132)) (x1212 (+ x2731 x4827)) (x1452 x4827)))
(define-fun x3257 ((x4827 Int)) Int (ite (= x4827 354) 64 (x4603 x4827)))
(define-fun x3185 ((x4827 Int)) Int (ite (= x4827 x2731) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3838 x4827)))
(define-fun x620 ((x4827 Int)) Int (ite (= x4827 x2418) 32 (x3185 x4827)))
(define-fun x5410 ((x4827 Int)) Int (ite (= x1007 x4827) 32 (x620 x4827)))
(define-fun x1536 ((x4827 Int)) Int (ite (= x4827 x3524) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x5410 x4827)))
(define-fun x4231 ((x4827 Int)) Int (ite (and (>= x4827 0) (> 100 x4827)) (x1536 (+ x2731 x4827)) (x1452 x4827)))
(define-fun x4686 ((x4827 Int)) Int (ite x611 (x175 x4827) (x3255 x4827)))
(define-fun x4406 ((x4827 Int)) Int (ite (= x4827 x2731) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x4686 x4827)))
(define-fun x2575 ((x4827 Int)) Int (ite (= x4846 x4827) x2781 (x4406 x4827)))
(define-fun x3166 ((x4827 Int)) Int (ite (= x5081 x4827) 192 (x2575 x4827)))
(define-fun x5479 ((x4827 Int)) Int (ite (= x4989 x4827) x5319 (x3166 x4827)))
(define-fun x5526 ((x4827 Int)) Int (ite (and (<= x368 x4827) (< x4827 (+ x5319 x368))) (x3408 (- (+ 548 x4827) x368)) (x5479 x4827)))
(define-fun x3070 ((x4827 Int)) Int (ite (= x4827 x4386) x4445 (x5526 x4827)))
(define-fun x275 ((x4827 Int)) Int (ite (= x4827 x453) x3568 (x3070 x4827)))
(define-fun x3793 ((x4827 Int)) Int (ite (= 386 x4827) x5450 (x1834 x4827)))
(define-fun x4825 ((x4827 Int)) Int (ite (= x4827 418) x5532 (x3793 x4827)))
(define-fun x4918 ((x4827 Int)) Int (ite (and (<= x3942 x4827) (< x4827 (+ x3568 x3942))) (x4825 (- (+ x4827 386) x3942)) (x275 x4827)))
(define-fun x5169 ((x4827 Int)) Int (ite (= x4827 x1237) x2928 (x4918 x4827)))
(define-fun x5096 ((x4827 Int)) Int (ite (= x4827 x1071) 0 (x5169 x4827)))
(define-fun x161 ((x4827 Int)) Int (ite (= x4827 x2797) x673 (x5096 x4827)))
(define-fun x4442 ((x4827 Int)) Int (ite (= 450 x4827) 34 (x81 x4827)))
(define-fun x4676 ((x4827 Int)) Int (ite (= x4387 x4827) x5235 (x161 x4827)))
(define-fun x350 ((x4827 Int)) Int (ite (= x4827 482) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2908 x4827)))
(define-fun x694 ((x4827 Int)) Int (ite (= 484 x4827) x5377 (x350 x4827)))
(define-fun x569 ((x4827 Int)) Int (ite (and (> (+ x3061 x5235) x4827) (>= x4827 x3061)) (x694 (- (+ 482 x4827) x3061)) (x4676 x4827)))
(define-fun x1708 ((x4827 Int)) Int (ite (= x2928 x4827) x5348 (x3390 x4827)))
(define-fun x781 ((x4827 Int)) Int (ite (= x4827 x786) x2491 (x1708 x4827)))
(define-fun x93 ((x4827 Int)) Int (ite (and (<= 228 x4827) (< x4827 x218)) (x569 (- (+ x4827 (x2742 (+ x2731 228))) 228)) (x1575 x4827)))
(define-fun x319 ((x4827 Int)) Int 0)
(define-fun x488 ((x4827 Int)) Int (x2621 x4827))
(define-fun x3735 ((x4827 Int)) Int (x1701 x4827))
(define-fun x3367 ((x4827 Int)) Int (x1060 x4827))
(define-fun x374 ((x4827 Int)) Int (x956 x4827))
(define-fun x1824 ((x4827 Int)) Int (x4466 x4827))
(define-fun x404 ((x4827 Int)) Int (x2587 x4827))
(define-fun x3933 ((x4827 Int)) Int (x1226 x4827))
(define-fun x4630 ((x4827 Int)) Int (x1149 x4827))
(define-fun x3495 ((x4827 Int)) Int (x3754 x4827))
(define-fun x5516 ((x4827 Int)) Int (x4472 x4827))
(define-fun x3265 ((x4827 Int)) Int (x3096 x4827))
(define-fun x3509 ((x4827 Int)) Int (x3845 x4827))
(define-fun x5150 ((x4827 Int)) Int (x5375 x4827))
(define-fun x4829 ((x4827 Int)) Int (x17 x4827))
(define-fun x2769 ((x4827 Int)) Int (x5520 x4827))
(define-fun x1211 ((x4827 Int)) Int (x3239 x4827))
(define-fun x1014 ((x4827 Int)) Int (x3897 x4827))
(define-fun x3553 ((x4827 Int)) Int (x2592 x4827))
(define-fun x864 ((x4827 Int)) Int (x4703 x4827))
(define-fun x1785 ((x4827 Int)) Int (x3877 x4827))
(define-fun x3828 ((x4827 Int)) Int (x2014 x4827))
(define-fun x5577 ((x4827 Int)) Int (x2839 x4827))
(define-fun x3946 ((x4827 Int)) Int (x124 x4827))
(define-fun x2105 ((x4827 Int)) Int (x4855 x4827))
(define-fun x3444 ((x4827 Int)) Int (x2621 x4827))
(define-fun x1316 ((x4827 Int)) Int (x3444 x4827))
(define-fun x2271 ((x4827 Int)) Int (x1701 x4827))
(define-fun x2136 ((x4827 Int)) Int (x2271 x4827))
(define-fun x2791 ((x4827 Int)) Int (x3877 x4827))
(define-fun x4824 ((x4827 Int)) Int (x2791 x4827))
(define-fun x5037 ((x4827 Int)) Int (x956 x4827))
(define-fun x251 ((x4827 Int)) Int (x5037 x4827))
(define-fun x3132 ((x4827 Int)) Int (x4466 x4827))
(define-fun x70 ((x4827 Int)) Int (x3132 x4827))
(define-fun x2023 ((x4827 Int)) Int (x2587 x4827))
(define-fun x3512 ((x4827 Int)) Int (x2023 x4827))
(define-fun x3221 ((x4827 Int)) Int (x1060 x4827))
(define-fun x2840 ((x4827 Int)) Int (x3221 x4827))
(define-fun x1414 ((x4827 Int)) Int (x1226 x4827))
(define-fun x2778 ((x4827 Int)) Int (x1149 x4827))
(define-fun x764 ((x4827 Int)) Int (x2778 x4827))
(define-fun x5380 ((x4827 Int)) Int (x4472 x4827))
(define-fun x1005 ((x4827 Int)) Int (x5380 x4827))
(define-fun x456 ((x4827 Int)) Int (x3754 x4827))
(define-fun x2334 ((x4827 Int)) Int (x456 x4827))
(define-fun x4237 ((x4827 Int)) Int (x17 x4827))
(define-fun x4394 ((x4827 Int)) Int (x4237 x4827))
(define-fun x103 ((x4827 Int)) Int (x5520 x4827))
(define-fun x4264 ((x4827 Int)) Int (x103 x4827))
(define-fun x3655 ((x4827 Int)) Int (x3096 x4827))
(define-fun x2964 ((x4827 Int)) Int (x3655 x4827))
(define-fun x3328 ((x4827 Int)) Int (x5375 x4827))
(define-fun x2679 ((x4827 Int)) Int (x3328 x4827))
(define-fun x3228 ((x4827 Int)) Int (x3897 x4827))
(define-fun x5243 ((x4827 Int)) Int (x3228 x4827))
(define-fun x551 ((x4827 Int)) Int (x2592 x4827))
(define-fun x5504 ((x4827 Int)) Int (x551 x4827))
(define-fun x2758 ((x4827 Int)) Int (x3239 x4827))
(define-fun x4799 ((x4827 Int)) Int (x2758 x4827))
(define-fun x5055 ((x4827 Int)) Int (x4703 x4827))
(define-fun x878 ((x4827 Int)) Int (x5055 x4827))
(define-fun x1410 ((x4827 Int)) Int (x2014 x4827))
(define-fun x2408 ((x4827 Int)) Int (x1410 x4827))
(define-fun x848 ((x4827 Int)) Int (x2839 x4827))
(define-fun x1148 ((x4827 Int)) Int (x848 x4827))
(define-fun x1637 ((x4827 Int)) Int (x4855 x4827))
(define-fun x1425 ((x4827 Int)) Int (x1637 x4827))
(define-fun x4821 ((x4827 Int)) Int (x124 x4827))
(define-fun x1134 ((x4827 Int)) Int (x4821 x4827))
(define-fun x5495 ((x4827 Int)) Int (x3845 x4827))
(define-fun x3404 ((x4827 Int)) Int (x5495 x4827))
(define-fun x4314 ((x4827 Int)) Int (ite (= x786 x4827) x3908 (x781 x4827)))
(define-fun x5040 ((x4827 Int)) Int (ite (= x2928 x4827) x2576 (x4314 x4827)))
(define-fun x1780 ((x4827 Int)) Int (x3146 x4827))
(define-fun x4631 ((x4827 Int)) Int (ite x611 (x1059 x4827) (x1140 x4827)))
(define-fun x416 ((x4827 Int)) Int (ite (and (>= x4827 0) (> x2920 x4827)) (x4631 x4827) (x3838 x4827)))
(define-fun x4195 ((x4827 Int)) Int (ite (and (>= x4827 0) (< x4827 x2920)) (x416 x4827) (x1452 x4827)))
(define-fun x4182 ((x4827 Int)) Int (ite (and (< x4827 354) (<= 290 x4827)) (x4631 (- x4827 290)) (x2708 x4827)))
(define-fun x5271 ((x4827 Int)) Int (ite (= 4 x4827) 34 (x3838 x4827)))
(define-fun x1991 ((x4827 Int)) Int (ite (and (<= 0 x4827) (> 36 x4827)) (x5271 x4827) (x1452 x4827)))
(define-fun x1729 ((x4827 Int)) Int (ite (= x4827 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1460 x4827)))
(define-fun x639 ((x4827 Int)) Int (ite (= 192 x4827) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1729 x4827)))
(define-fun x1579 ((x4827 Int)) Int (ite (= 128 x4827) 64 (x2767 x4827)))
(define-fun x3303 ((x4827 Int)) Int (ite (= x4827 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x4715 x4827)))
(define-fun x5339 ((x4827 Int)) Int (ite (= 258 x4827) x3318 (x3303 x4827)))
(define-fun x1178 ((x4827 Int)) Int (ite (= x4827 224) 34 (x3068 x4827)))
(define-fun x656 ((x4827 Int)) Int (ite (= 290 x4827) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x2659 x4827)))
(define-fun x4816 ((x4827 Int)) Int (ite (= x4827 294) x2781 (x656 x4827)))
(define-fun x4995 ((x4827 Int)) Int (ite (= 326 x4827) x2928 (x4816 x4827)))
(define-fun x989 ((x4827 Int)) Int (ite (= 358 x4827) 160 (x4995 x4827)))
(define-fun x3078 ((x4827 Int)) Int (ite (= x4827 454) x1130 (x989 x4827)))
(define-fun x1395 ((x4827 Int)) Int (ite (and (<= 486 x4827) (> (+ x1130 486) x4827)) (x639 (- x4827 326)) (x3078 x4827)))
(define-fun x4755 ((x4827 Int)) Int (ite (= 390 x4827) 0 (x1395 x4827)))
(define-fun x506 ((x4827 Int)) Int (ite (= 422 x4827) x370 (x4755 x4827)))
(define-fun x2045 ((x4827 Int)) Int (ite (= x3874 x4827) x2196 (x506 x4827)))
(define-fun x89 ((x4827 Int)) Int (ite (and (<= x4725 x4827) (< x4827 (+ x4725 x2196))) (x5339 (- (+ 256 x4827) x4725)) (x2045 x4827)))
(define-fun x3296 ((x4827 Int)) Int (ite (and (< x4827 x4892) (>= x4827 292)) (x89 (+ x4827 290)) (x4198 x4827)))
(define-fun x4585 ((x4827 Int)) Int (ite (= 128 x4827) 0 (x4891 x4827)))
(define-fun x5111 ((x4827 Int)) Int (ite (= x4827 160) 0 (x4585 x4827)))
(define-fun x5505 ((x4827 Int)) Int (ite (= 290 x4827) x4505 (x89 x4827)))
(define-fun x4194 ((x4827 Int)) Int (ite (= 322 x4827) x1932 (x5505 x4827)))
(define-fun x2997 ((x4827 Int)) Int (ite (= 0 x4827) x4093 (x647 x4827)))
(define-fun x1176 ((x4827 Int)) Int (ite (= x4827 32) x5075 (x2997 x4827)))
(define-fun x3714 ((x4827 Int)) Int (ite (and (>= x4827 290) (< x4827 354)) (x1176 (- x4827 290)) (x3342 x4827)))
(define-fun x424 ((x4827 Int)) Int (ite x4803 (x4194 x4827) (x2116 x4827)))
(define-fun x3381 ((x4827 Int)) Int (ite (= x4827 x3370) x5576 (x5439 x4827)))
(define-fun x636 ((x4827 Int)) Int (ite (= x3021 x4827) x2487 (x3381 x4827)))
(define-fun x5114 ((x4827 Int)) Int (ite (= x4827 x1997) x3446 (x3560 x4827)))
(define-fun x2183 ((x4827 Int)) Int (ite (= x4827 x2031) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x5406 x4827)))
(define-fun x4279 ((x4827 Int)) Int (ite (= x3566 x4827) x3318 (x2183 x4827)))
(define-fun x282 ((x4827 Int)) Int (ite (= x4827 x2402) x4136 (x645 x4827)))
(define-fun x2324 ((x4827 Int)) Int (ite (= x4827 x1292) x3685 (x824 x4827)))
(define-fun x4553 ((x4827 Int)) Int (ite (= x3438 x4827) x3922 (x373 x4827)))
(define-fun x3450 ((x4827 Int)) Int (ite (= x3438 x4827) x5149 (x373 x4827)))
(define-fun x3190 ((x4827 Int)) Int (ite (= x4827 x3530) x4340 (x4553 x4827)))
(define-fun x1898 ((x4827 Int)) Int (ite x3732 (x5560 x4827) (ite x1297 (ite x2409 (x4553 x4827) (x3190 x4827)) (x3450 x4827))))
(define-fun x1037 ((x4827 Int)) Int (ite (= x431 x4827) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x424 x4827)))
(define-fun x2366 ((x4827 Int)) Int (ite (= x4827 x2357) x2781 (x1037 x4827)))
(define-fun x3505 ((x4827 Int)) Int (ite (= x4827 x4277) 192 (x2366 x4827)))
(define-fun x3171 ((x4827 Int)) Int (ite (= x747 x4827) x3827 (x3505 x4827)))
(define-fun x4080 ((x4827 Int)) Int (ite (and (< x4827 (+ x3157 x3827)) (<= x3157 x4827)) (x1898 (- (+ x3438 x4827) x3157)) (x3171 x4827)))
(define-fun x4211 ((x4827 Int)) Int (ite (= x4827 x3469) x1146 (x4080 x4827)))
(define-fun x1999 ((x4827 Int)) Int (ite (= x4827 x1852) x2188 (x4211 x4827)))
(define-fun x3872 ((x4827 Int)) Int (ite (and (> (+ x2188 x5165) x4827) (<= x5165 x4827)) (x636 (- (+ x4827 x4912) x5165)) (x1999 x4827)))
(define-fun x3664 ((x4827 Int)) Int (ite (= x4827 x4191) x2928 (x3872 x4827)))
(define-fun x844 ((x4827 Int)) Int (ite (= x4827 x3940) 0 (x3664 x4827)))
(define-fun x2197 ((x4827 Int)) Int (ite (= x3413 x4827) x596 (x844 x4827)))
(define-fun x1424 ((x4827 Int)) Int (ite (= x4827 x4864) x2750 (x2197 x4827)))
(define-fun x2054 ((x4827 Int)) Int (ite (and (>= x4827 x1582) (< x4827 (+ x1582 x2750))) (x4279 (- (+ x4827 x2337) x1582)) (x1424 x4827)))
(define-fun x867 ((x4827 Int)) Int (ite (= x4827 x2928) x4977 (x4420 x4827)))
(define-fun x5269 ((x4827 Int)) Int (ite (= x4827 x4649) x1366 (x867 x4827)))
(define-fun x1814 ((x4827 Int)) Int (ite (and (<= 228 x4827) (< x4827 x510)) (x2054 (- (+ x4827 (x2742 (+ 228 x431))) 228)) (x2217 x4827)))
(define-fun x4290 ((x4827 Int)) Int (ite x3956 (x4855 x4827) (x604 x4827)))
(define-fun x1518 ((x4827 Int)) Int (ite x3956 (x4472 x4827) (x2673 x4827)))
(define-fun x2937 ((x4827 Int)) Int (ite x3956 (x4466 x4827) (x1138 x4827)))
(define-fun x4045 ((x4827 Int)) Int (ite x74 (x3678 x4827) (ite x2439 (x3678 x4827) (x3142 x4827))))
(define-fun x3758 ((x4827 Int)) Int (ite (= x1803 x4827) x5625 (x4045 x4827)))
(define-fun x2830 ((x4827 Int)) Int (ite x2534 (x4045 x4827) (ite x755 (x3758 x4827) (x4045 x4827))))
(define-fun x4760 ((x4827 Int)) Int (ite x3031 (x4045 x4827) (x2830 x4827)))
(define-fun x3493 ((x4827 Int)) Int (ite x74 (x1612 x4827) (ite x2439 (x1612 x4827) (x4953 x4827))))
(define-fun x42 ((x4827 Int)) Int (ite (= x1073 x4827) 2 (x3493 x4827)))
(define-fun x4944 ((x4827 Int)) Int (ite (= x4615 x4827) 3 (x42 x4827)))
(define-fun x3471 ((x4827 Int)) Int (ite x2186 (x42 x4827) (x4944 x4827)))
(define-fun x364 ((x4827 Int)) Int (ite (= x4827 x875) 3 (x3493 x4827)))
(define-fun x514 ((x4827 Int)) Int (ite x3281 (x364 x4827) (x3493 x4827)))
(define-fun x4672 ((x4827 Int)) Int (ite x2534 (x3493 x4827) (ite x755 (x3471 x4827) (x514 x4827))))
(define-fun x1501 ((x4827 Int)) Int (ite x3031 (x3493 x4827) (x4672 x4827)))
(define-fun x731 ((x4827 Int)) Int (x3754 x4827))
(define-fun x4121 ((x4827 Int)) Int (x731 x4827))
(define-fun x2063 ((x4827 Int)) Int (ite x74 (x2621 x4827) (ite x2439 (x2621 x4827) (x3605 x4827))))
(define-fun x3772 ((x4827 Int)) Int (ite x2599 (x2963 x4827) (x2063 x4827)))
(define-fun x2895 ((x4827 Int)) Int (ite x4807 (ite x271 (x2063 x4827) (x2909 x4827)) (x2063 x4827)))
(define-fun x5655 ((x4827 Int)) Int (ite x755 (x2063 x4827) (ite x3281 (x2063 x4827) (x2895 x4827))))
(define-fun x4263 ((x4827 Int)) Int (ite x3031 (x2063 x4827) (ite x2534 (x3772 x4827) (x5655 x4827))))
(define-fun x1437 ((x4827 Int)) Int (x124 x4827))
(define-fun x5614 ((x4827 Int)) Int (x1437 x4827))
(define-fun x2775 ((x4827 Int)) Int (ite (= 0 x4827) x3607 (x5244 x4827)))
(define-fun x1434 ((x4827 Int)) Int (ite x2534 (x3772 x4827) (x5655 x4827)))
(define-fun x1046 ((x4827 Int)) Int (x731 x4827))
(define-fun x37 ((x4827 Int)) Int (x1437 x4827))
(define-fun x2865 ((x4827 Int)) Int (ite x755 (x3471 x4827) (x514 x4827)))
(define-fun x1776 ((x4827 Int)) Int (ite x755 (x3758 x4827) (x4045 x4827)))
(define-fun x4885 ((x4827 Int)) Int (x731 x4827))
(define-fun x5105 ((x4827 Int)) Int (x1437 x4827))
(define-fun x5211 ((x4827 Int)) Int (ite x74 (x1701 x4827) (ite x2439 (x1701 x4827) (x4805 x4827))))
(define-fun x496 ((x4827 Int)) Int (ite x74 (x3390 x4827) (ite x2439 (x3390 x4827) (ite x479 (ite x4359 (x3333 x4827) (x3390 x4827)) (ite x5029 (ite x586 (x3390 x4827) (ite x3199 (x781 x4827) (ite x2437 (x5040 x4827) (x3390 x4827)))) (ite x1859 (x5269 x4827) (ite x1670 (ite x3956 (x3390 x4827) (x1874 x4827)) (x3390 x4827))))))))
(define-fun x638 ((x4827 Int)) Int (ite (= x4684 x4827) x3596 (x496 x4827)))
(define-fun x458 ((x4827 Int)) Int (ite x3281 (x2063 x4827) (x2895 x4827)))
(define-fun x542 ((x4827 Int)) Int (ite x74 (x2587 x4827) (ite x2439 (x2587 x4827) (x2546 x4827))))
(define-fun x3721 ((x4827 Int)) Int (ite (= x4827 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x4849 x4827)))
(define-fun x2454 ((x4827 Int)) Int (ite (= 132 x4827) x5061 (x3721 x4827)))
(define-fun x1996 ((x4827 Int)) Int (ite (= 164 x4827) 128 (x2454 x4827)))
(define-fun x1541 ((x4827 Int)) Int (ite (= x4827 260) x3254 (x1996 x4827)))
(define-fun x2848 ((x4827 Int)) Int (ite (= x4827 292) x5223 (x1541 x4827)))
(define-fun x1945 ((x4827 Int)) Int (ite x74 (x2839 x4827) (ite x2439 (x2839 x4827) (x1191 x4827))))
(define-fun x3747 ((x4827 Int)) Int (ite (= 292 x4827) x216 (x1541 x4827)))
(define-fun x5014 ((x4827 Int)) Int (ite x1659 (ite x1354 (x1541 x4827) (x2848 x4827)) (x3747 x4827)))
(define-fun x2209 ((x4827 Int)) Int (ite (= 196 x4827) x2766 (x5014 x4827)))
(define-fun x1471 ((x4827 Int)) Int (ite (= x4827 228) x2958 (x2209 x4827)))
(define-fun x703 ((x4827 Int)) Int (ite (= x3941 x4827) x3449 (x1471 x4827)))
(define-fun x1183 ((x4827 Int)) Int (ite (= x4827 x1188) x4153 (x703 x4827)))
(define-fun x5376 ((x4827 Int)) Int (ite (= 128 x4827) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x4849 x4827)))
(define-fun x331 ((x4827 Int)) Int (ite (= 132 x4827) x1597 (x5376 x4827)))
(define-fun x5193 ((x4827 Int)) Int (ite (= x4827 164) 128 (x331 x4827)))
(define-fun x3820 ((x4827 Int)) Int (ite (= 260 x4827) x489 (x5193 x4827)))
(define-fun x1367 ((x4827 Int)) Int (ite (= 292 x4827) x3422 (x3820 x4827)))
(define-fun x4304 ((x4827 Int)) Int (ite (= 128 x4827) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x4849 x4827)))
(define-fun x4257 ((x4827 Int)) Int (ite (= 132 x4827) x3865 (x4304 x4827)))
(define-fun x1544 ((x4827 Int)) Int (ite (= x4827 164) 128 (x4257 x4827)))
(define-fun x2739 ((x4827 Int)) Int (ite (= x4827 260) x1954 (x1544 x4827)))
(define-fun x5469 ((x4827 Int)) Int (ite (= x4827 292) x3738 (x2739 x4827)))
(define-fun x4928 ((x4827 Int)) Int (ite (= 292 x4827) x1027 (x3820 x4827)))
(define-fun x758 ((x4827 Int)) Int (ite x5210 (ite x2981 (x3820 x4827) (x1367 x4827)) (x4928 x4827)))
(define-fun x5262 ((x4827 Int)) Int (ite (= x4827 196) x2829 (x758 x4827)))
(define-fun x1695 ((x4827 Int)) Int (ite (= x4827 228) x2220 (x5262 x4827)))
(define-fun x3679 ((x4827 Int)) Int (ite (= x4827 x3113) x5575 (x1695 x4827)))
(define-fun x3920 ((x4827 Int)) Int (ite (= x598 x4827) x1764 (x3679 x4827)))
(define-fun x5427 ((x4827 Int)) Int (ite (= 292 x4827) x2099 (x2739 x4827)))
(define-fun x1703 ((x4827 Int)) Int (ite x1427 (ite x3841 (x2739 x4827) (x5469 x4827)) (x5427 x4827)))
(define-fun x68 ((x4827 Int)) Int (ite (= 196 x4827) x4890 (x1703 x4827)))
(define-fun x1535 ((x4827 Int)) Int (ite (= 228 x4827) x4374 (x68 x4827)))
(define-fun x4342 ((x4827 Int)) Int (ite (= x4827 x4866) x3284 (x1535 x4827)))
(define-fun x1119 ((x4827 Int)) Int (ite (= x1728 x4827) x1289 (x4342 x4827)))
(define-fun x3202 ((x4827 Int)) Int (ite (= x1188 x4827) x540 (x703 x4827)))
(define-fun x3643 ((x4827 Int)) Int (ite x730 (ite x3614 (x703 x4827) (x1183 x4827)) (x3202 x4827)))
(define-fun x3608 ((x4827 Int)) Int (ite (= x4684 x4827) x2256 (x496 x4827)))
(define-fun x3101 ((x4827 Int)) Int (ite (and (> x910 x4827) (>= x4827 164)) (x3643 (+ x4827 128)) (x4289 x4827)))
(define-fun x3256 ((x4827 Int)) Int (ite (and (<= 128 x4827) (< x4827 (+ 128 x3506))) (x3101 (+ x4827 36)) (x3980 x4827)))
(define-fun x4269 ((x4827 Int)) Int (ite (= x2106 x4827) 0 (x3256 x4827)))
(define-fun x842 ((x4827 Int)) Int (ite (= x4827 x1484) x5588 (x4269 x4827)))
(define-fun x4671 ((x4827 Int)) Int (ite x74 (x2592 x4827) (ite x2439 (x2592 x4827) (x2260 x4827))))
(define-fun x1734 ((x4827 Int)) Int (ite (and (>= x4827 128) (< x4827 (+ 128 x1106))) (x3101 (- (+ x765 x4827) 128)) (x842 x4827)))
(define-fun x4645 ((x4827 Int)) Int (ite (= x4827 x4297) 0 (x1734 x4827)))
(define-fun x5270 ((x4827 Int)) Int (ite (and (> (+ x3506 128) x4827) (<= 128 x4827)) (x3101 (+ x4827 36)) (x4645 x4827)))
(define-fun x2449 ((x4827 Int)) Int (ite (= x4827 x3761) 0 (x5270 x4827)))
(define-fun x3665 ((x4827 Int)) Int (ite (= x4827 x4009) x2053 (x2449 x4827)))
(define-fun x3975 ((x4827 Int)) Int (ite (= x3544 x4827) 0 (x4671 x4827)))
(define-fun x1072 ((x4827 Int)) Int (ite (= x4827 128) x3506 (x3665 x4827)))
(define-fun x777 ((x4827 Int)) Int (ite (and (>= x4827 160) (> (+ 160 x3506) x4827)) (x3101 (+ 4 x4827)) (x1072 x4827)))
(define-fun x3711 ((x4827 Int)) Int (ite (= x4827 x112) 0 (x777 x4827)))
(define-fun x5124 ((x4827 Int)) Int (ite (= x4827 x4538) x1106 (x3711 x4827)))
(define-fun x726 ((x4827 Int)) Int (ite (and (> (+ x732 x1106) x4827) (<= x732 x4827)) (x3101 (- (+ x765 x4827) x732)) (x5124 x4827)))
(define-fun x3517 ((x4827 Int)) Int (ite (= x3561 x4827) 0 (x726 x4827)))
(define-fun x4221 ((x4827 Int)) Int (ite (= x4827 x4617) 1 (x124 x4827)))
(define-fun x1638 ((x4827 Int)) Int (ite (= x4827 x598) x5457 (x3679 x4827)))
(define-fun x4024 ((x4827 Int)) Int (ite (= x1728 x4827) x3055 (x4342 x4827)))
(define-fun x2693 ((x4827 Int)) Int (ite x4328 (ite x3017 (x3679 x4827) (x3920 x4827)) (x1638 x4827)))
(define-fun x2858 ((x4827 Int)) Int (ite (and (>= x4827 164) (< x4827 x2372)) (x2693 (+ 128 x4827)) (x550 x4827)))
(define-fun x950 ((x4827 Int)) Int (ite (= x4827 128) x3003 (x3617 x4827)))
(define-fun x2511 ((x4827 Int)) Int (ite (= x4827 160) x746 (x950 x4827)))
(define-fun x4023 ((x4827 Int)) Int (ite (= x4827 160) x4772 (x950 x4827)))
(define-fun x2067 ((x4827 Int)) Int (ite x4012 (ite x2458 (x4342 x4827) (x1119 x4827)) (x4024 x4827)))
(define-fun x2685 ((x4827 Int)) Int (ite (and (> x223 x4827) (<= 164 x4827)) (x2067 (+ x4827 128)) (x1564 x4827)))
(define-fun x3057 ((x4827 Int)) Int (ite (= x4827 x5194) x3497 (x481 x4827)))
(define-fun x2565 ((x4827 Int)) Int (ite (and (>= x4827 x2760) (> (+ x3497 x2760) x4827)) (x2685 (- (+ x5166 x4827) x2760)) (x3149 x4827)))
(define-fun x5307 ((x4827 Int)) Int (ite (= x4827 x2723) 0 (x2565 x4827)))
(define-fun x1000 ((x4827 Int)) Int (ite (= x4827 x5275) 1 (x124 x4827)))
(define-fun x1262 ((x4827 Int)) Int (ite (= x4827 192) x940 (x2511 x4827)))
(define-fun x415 ((x4827 Int)) Int (ite x5471 (x950 x4827) (ite x1192 (ite x5174 (x2511 x4827) (x1262 x4827)) (x4023 x4827))))
(define-fun x3229 ((x4827 Int)) Int (ite (and (< x4827 (+ x1098 x872)) (<= x872 x4827)) (x2858 (- (+ x4827 164) x872)) (x415 x4827)))
(define-fun x1132 ((x4827 Int)) Int (ite (= x4163 x4827) 0 (x3229 x4827)))
(define-fun x2852 ((x4827 Int)) Int (ite x3503 (x1132 x4827) (x415 x4827)))
(define-fun x138 ((x4827 Int)) Int (ite (= x4827 x872) x1098 (x2852 x4827)))
(define-fun x1197 ((x4827 Int)) Int (ite (and (> (+ x465 x1098) x4827) (>= x4827 x465)) (x2858 (- (+ 164 x4827) x465)) (x138 x4827)))
(define-fun x2851 ((x4827 Int)) Int (ite (= x5153 x4827) 0 (x1197 x4827)))
(define-fun x5237 ((x4827 Int)) Int (ite (= x4827 x5310) x191 (x2851 x4827)))
(define-fun x899 ((x4827 Int)) Int (ite (and (> (+ x191 x1470) x4827) (>= x4827 x1470)) (x2858 (- (+ x790 x4827) x1470)) (x5237 x4827)))
(define-fun x236 ((x4827 Int)) Int (ite (= x4827 x328) 0 (x899 x4827)))
(define-fun x1963 ((x4827 Int)) Int (ite (= x5325 x4827) x1597 (x236 x4827)))
(define-fun x4578 ((x4827 Int)) Int (ite (= x4827 x301) 128 (x1963 x4827)))
(define-fun x2335 ((x4827 Int)) Int (ite (= x2456 x4827) x2089 (x4578 x4827)))
(define-fun x936 ((x4827 Int)) Int (ite (= x4827 x3374) x5109 (x2335 x4827)))
(define-fun x2562 ((x4827 Int)) Int (ite (= x4827 x691) x1778 (x936 x4827)))
(define-fun x1738 ((x4827 Int)) Int (ite (= x4827 x4429) x92 (x2562 x4827)))
(define-fun x4685 ((x4827 Int)) Int (ite (= x2874 x4827) x771 (x1738 x4827)))
(define-fun x5478 ((x4827 Int)) Int (ite x4368 (x1738 x4827) (ite x4112 (x2562 x4827) (ite x1301 (x936 x4827) (ite x1455 (x2335 x4827) (x4685 x4827))))))
(define-fun x4594 ((x4827 Int)) Int (ite (= x4827 x4506) 0 (x5478 x4827)))
(define-fun x4867 ((x4827 Int)) Int (ite (= x1654 x4827) x2829 (x4594 x4827)))
(define-fun x1524 ((x4827 Int)) Int (ite (= x4827 x4610) x1909 (x4867 x4827)))
(define-fun x4425 ((x4827 Int)) Int (ite (= x2212 x4827) x4987 (x1524 x4827)))
(define-fun x2868 ((x4827 Int)) Int (ite (= x4827 x1333) x2416 (x4425 x4827)))
(define-fun x1200 ((x4827 Int)) Int (ite (= x2215 x4827) x1685 (x2868 x4827)))
(define-fun x254 ((x4827 Int)) Int (ite (= x4827 x5417) x4776 (x1200 x4827)))
(define-fun x2267 ((x4827 Int)) Int (ite (= x3439 x4827) x4228 (x254 x4827)))
(define-fun x2184 ((x4827 Int)) Int (ite x1449 (x254 x4827) (ite x1847 (x1200 x4827) (ite x14 (x2868 x4827) (ite x521 (x4425 x4827) (x2267 x4827))))))
(define-fun x4689 ((x4827 Int)) Int (ite (= x4827 x4646) 0 (x2184 x4827)))
(define-fun x2346 ((x4827 Int)) Int (ite (= x4827 x2221) x5486 (x4689 x4827)))
(define-fun x3470 ((x4827 Int)) Int (ite (= x3478 x4827) x5065 (x2346 x4827)))
(define-fun x2276 ((x4827 Int)) Int (ite (= x4827 x4115) 150 (x3470 x4827)))
(define-fun x5534 ((x4827 Int)) Int (ite (and (>= x4827 x3282) (> (+ x3282 150) x4827)) (x2858 (- (+ x566 x4827) x3282)) (x2276 x4827)))
(define-fun x3176 ((x4827 Int)) Int (ite (and (< x4827 0) (>= x4827 0)) (x3840 x4827) (x5534 x4827)))
(define-fun x2150 ((x4827 Int)) Int (ite x2599 (x3176 x4827) (x5534 x4827)))
(define-fun x4802 ((x4827 Int)) Int (ite (= x4827 x4115) x5394 (x2150 x4827)))
(define-fun x2726 ((x4827 Int)) Int (ite (and (<= x4819 x4827) (> (+ x5394 x4819) x4827)) (x3840 (- x4827 x4819)) (x4802 x4827)))
(define-fun x508 ((x4827 Int)) Int (ite (= x4770 x4827) x2698 (x2726 x4827)))
(define-fun x3083 ((x4827 Int)) Int (ite (= x4827 x5100) x1504 (x508 x4827)))
(define-fun x3483 ((x4827 Int)) Int (ite (= x4827 x5203) x1311 (x3083 x4827)))
(define-fun x1619 ((x4827 Int)) Int (ite (= x2522 x4827) x160 (x3483 x4827)))
(define-fun x2 ((x4827 Int)) Int (ite x4669 (x3483 x4827) (ite x2389 (x3083 x4827) (ite x3426 (x508 x4827) (ite x846 (x2726 x4827) (x1619 x4827))))))
(define-fun x1521 ((x4827 Int)) Int (ite (= x4827 x738) 0 (x2 x4827)))
(define-fun x352 ((x4827 Int)) Int (ite (= x2058 x4827) x3534 (x1521 x4827)))
(define-fun x2998 ((x4827 Int)) Int (ite (= x4827 x4770) x1597 (x352 x4827)))
(define-fun x79 ((x4827 Int)) Int (ite (= x4013 x4827) 160 (x2998 x4827)))
(define-fun x1482 ((x4827 Int)) Int (ite (= x2290 x4827) x1044 (x79 x4827)))
(define-fun x3635 ((x4827 Int)) Int (ite (= x4827 x4758) x3423 (x1482 x4827)))
(define-fun x1256 ((x4827 Int)) Int (ite (= x3983 x4827) x3787 (x3635 x4827)))
(define-fun x1293 ((x4827 Int)) Int (ite (= x4693 x4827) x76 (x1256 x4827)))
(define-fun x5643 ((x4827 Int)) Int (ite (= x4827 x3117) x5631 (x1293 x4827)))
(define-fun x1294 ((x4827 Int)) Int (ite x73 (x1293 x4827) (ite x4559 (x1256 x4827) (ite x3722 (x3635 x4827) (ite x933 (x1482 x4827) (x5643 x4827))))))
(define-fun x1604 ((x4827 Int)) Int (ite (= x4827 x1833) 0 (x1294 x4827)))
(define-fun x3764 ((x4827 Int)) Int (ite (= x4827 x4530) x2829 (x1604 x4827)))
(define-fun x2507 ((x4827 Int)) Int (ite (= x4827 x3059) x1860 (x3764 x4827)))
(define-fun x4779 ((x4827 Int)) Int (ite (= x4827 x4565) x2638 (x2507 x4827)))
(define-fun x664 ((x4827 Int)) Int (ite (= x4827 x1639) x4664 (x4779 x4827)))
(define-fun x2976 ((x4827 Int)) Int (ite (= x4827 x1836) x4886 (x664 x4827)))
(define-fun x4050 ((x4827 Int)) Int (ite (= x1910 x4827) x4056 (x2976 x4827)))
(define-fun x4737 ((x4827 Int)) Int (ite (= x3755 x4827) x2951 (x4050 x4827)))
(define-fun x1607 ((x4827 Int)) Int (ite x3923 (x4050 x4827) (ite x201 (x2976 x4827) (ite x2068 (x664 x4827) (ite x2011 (x4779 x4827) (x4737 x4827))))))
(define-fun x1675 ((x4827 Int)) Int (ite (= x5461 x4827) 0 (x1607 x4827)))
(define-fun x4398 ((x4827 Int)) Int (ite (= x4827 x339) x2318 (x1675 x4827)))
(define-fun x2044 ((x4827 Int)) Int (ite (= x1087 x4827) x5357 (x4671 x4827)))
(define-fun x1705 ((x4827 Int)) Int (x2063 x4827))
(define-fun x2120 ((x4827 Int)) Int (x731 x4827))
(define-fun x4850 ((x4827 Int)) Int (x1437 x4827))
(define-fun x1758 ((x4827 Int)) Int (x3758 x4827))
(define-fun x2844 ((x4827 Int)) Int (ite (= x4827 4) 33 (x2717 x4827)))
(define-fun x5430 ((x4827 Int)) Int (ite (and (< x4827 36) (>= x4827 0)) (x2844 x4827) (x881 x4827)))
(define-fun x2581 ((x4827 Int)) Int (ite (= x4827 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4196 x4827)))
(define-fun x1547 ((x4827 Int)) Int (ite (= 192 x4827) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2581 x4827)))
(define-fun x4141 ((x4827 Int)) Int (ite (= 128 x4827) 64 (x2077 x4827)))
(define-fun x4378 ((x4827 Int)) Int (ite (= 256 x4827) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1153 x4827)))
(define-fun x2159 ((x4827 Int)) Int (ite (= x4827 258) x1926 (x4378 x4827)))
(define-fun x2950 ((x4827 Int)) Int (ite (= 224 x4827) 34 (x1655 x4827)))
(define-fun x3842 ((x4827 Int)) Int (ite (= x4827 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x4753 x4827)))
(define-fun x2397 ((x4827 Int)) Int (ite (= x4827 294) x4736 (x3842 x4827)))
(define-fun x4193 ((x4827 Int)) Int (ite (= 326 x4827) x2928 (x2397 x4827)))
(define-fun x460 ((x4827 Int)) Int (ite (= 358 x4827) 160 (x4193 x4827)))
(define-fun x4909 ((x4827 Int)) Int (ite (= x4827 454) x3782 (x460 x4827)))
(define-fun x2656 ((x4827 Int)) Int (ite (and (<= 486 x4827) (< x4827 (+ 486 x3782))) (x1547 (- x4827 326)) (x4909 x4827)))
(define-fun x5603 ((x4827 Int)) Int (ite (= 390 x4827) 0 (x2656 x4827)))
(define-fun x2471 ((x4827 Int)) Int (ite (= x4827 422) x2802 (x5603 x4827)))
(define-fun x1567 ((x4827 Int)) Int (ite (= x3274 x4827) x4491 (x2471 x4827)))
(define-fun x3371 ((x4827 Int)) Int (ite (and (> (+ x346 x4491) x4827) (>= x4827 x346)) (x2159 (- (+ 256 x4827) x346)) (x1567 x4827)))
(define-fun x2670 ((x4827 Int)) Int (ite (and (<= 292 x4827) (> x4273 x4827)) (x3371 (+ 290 x4827)) (x5099 x4827)))
(define-fun x4128 ((x4827 Int)) Int (ite (= 128 x4827) 0 (x295 x4827)))
(define-fun x4547 ((x4827 Int)) Int (ite (= 160 x4827) 0 (x4128 x4827)))
(define-fun x3432 ((x4827 Int)) Int (ite (= x4827 290) x468 (x3371 x4827)))
(define-fun x2213 ((x4827 Int)) Int (ite (= x4827 322) x309 (x3432 x4827)))
(define-fun x324 ((x4827 Int)) Int (ite (= 0 x4827) x5067 (x3196 x4827)))
(define-fun x4719 ((x4827 Int)) Int (ite (= 32 x4827) x333 (x324 x4827)))
(define-fun x2202 ((x4827 Int)) Int (ite (= 128 x4827) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x2717 x4827)))
(define-fun x2896 ((x4827 Int)) Int (ite (and (>= x4827 0) (> 4 x4827)) (x2202 (+ x4827 128)) (x881 x4827)))
(define-fun x56 ((x4827 Int)) Int (ite (= 128 x4827) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x2717 x4827)))
(define-fun x2319 ((x4827 Int)) Int (ite (and (<= 0 x4827) (< x4827 4)) (x56 (+ 128 x4827)) (x881 x4827)))
(define-fun x2038 ((x4827 Int)) Int (ite (= x4827 548) x2512 (x5167 x4827)))
(define-fun x178 ((x4827 Int)) Int (ite (= 580 x4827) x2025 (x2038 x4827)))
(define-fun x5094 ((x4827 Int)) Int (ite (= 548 x4827) x3770 (x5167 x4827)))
(define-fun x1581 ((x4827 Int)) Int (ite x480 (x482 x4827) (ite x787 (ite x670 (x2038 x4827) (x178 x4827)) (x5094 x4827))))
(define-fun x1422 ((x4827 Int)) Int (ite (= x4827 516) x1137 (x3539 x4827)))
(define-fun x2614 ((x4827 Int)) Int (ite (= x699 x4827) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2717 x4827)))
(define-fun x2887 ((x4827 Int)) Int (ite (= x1656 x4827) 32 (x2614 x4827)))
(define-fun x2250 ((x4827 Int)) Int (ite (= x5080 x4827) 48 (x2887 x4827)))
(define-fun x5358 ((x4827 Int)) Int (ite (= x4827 x2535) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x2250 x4827)))
(define-fun x4823 ((x4827 Int)) Int (ite (= x2398 x4827) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x5358 x4827)))
(define-fun x5338 ((x4827 Int)) Int (ite (and (>= x4827 0) (> 132 x4827)) (x4823 (+ x699 x4827)) (x881 x4827)))
(define-fun x1023 ((x4827 Int)) Int (ite (= x4827 354) 64 (x1017 x4827)))
(define-fun x2350 ((x4827 Int)) Int (ite (= x699 x4827) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2717 x4827)))
(define-fun x4357 ((x4827 Int)) Int (ite (= x4827 x144) 32 (x2350 x4827)))
(define-fun x5097 ((x4827 Int)) Int (ite (= x3246 x4827) 32 (x4357 x4827)))
(define-fun x5283 ((x4827 Int)) Int (ite (= x4827 x5463) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x5097 x4827)))
(define-fun x2747 ((x4827 Int)) Int (ite (and (> 100 x4827) (>= x4827 0)) (x5283 (+ x4827 x699)) (x881 x4827)))
(define-fun x520 ((x4827 Int)) Int (ite x215 (x3371 x4827) (x2213 x4827)))
(define-fun x3232 ((x4827 Int)) Int (ite (= x699 x4827) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x520 x4827)))
(define-fun x4583 ((x4827 Int)) Int (ite (= x4827 x5629) x4736 (x3232 x4827)))
(define-fun x1962 ((x4827 Int)) Int (ite (= x4827 x2488) 192 (x4583 x4827)))
(define-fun x2549 ((x4827 Int)) Int (ite (= x2776 x4827) x5466 (x1962 x4827)))
(define-fun x4062 ((x4827 Int)) Int (ite (and (>= x4827 x1823) (> (+ x5466 x1823) x4827)) (x1581 (- (+ x4827 548) x1823)) (x2549 x4827)))
(define-fun x4238 ((x4827 Int)) Int (ite (= x4827 x1812) x1369 (x4062 x4827)))
(define-fun x1231 ((x4827 Int)) Int (ite (= x3847 x4827) x1879 (x4238 x4827)))
(define-fun x2792 ((x4827 Int)) Int (ite (= x4827 386) x4945 (x4463 x4827)))
(define-fun x5033 ((x4827 Int)) Int (ite (= 418 x4827) x4116 (x2792 x4827)))
(define-fun x3088 ((x4827 Int)) Int (ite (and (< x4827 (+ x5250 x1879)) (>= x4827 x5250)) (x5033 (- (+ 386 x4827) x5250)) (x1231 x4827)))
(define-fun x2152 ((x4827 Int)) Int (ite (= x4984 x4827) x2928 (x3088 x4827)))
(define-fun x4820 ((x4827 Int)) Int (ite (= x1506 x4827) 0 (x2152 x4827)))
(define-fun x5035 ((x4827 Int)) Int (ite (= x4827 x2529) x2224 (x4820 x4827)))
(define-fun x733 ((x4827 Int)) Int (ite (= x4827 450) 34 (x1116 x4827)))
(define-fun x622 ((x4827 Int)) Int (ite (= x4827 x5098) x818 (x5035 x4827)))
(define-fun x5031 ((x4827 Int)) Int (ite (= 482 x4827) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x492 x4827)))
(define-fun x246 ((x4827 Int)) Int (ite (= x4827 484) x1926 (x5031 x4827)))
(define-fun x887 ((x4827 Int)) Int (ite (and (>= x4827 x399) (< x4827 (+ x399 x818))) (x246 (- (+ 482 x4827) x399)) (x622 x4827)))
(define-fun x3691 ((x4827 Int)) Int (ite (= x2928 x4827) x184 (x496 x4827)))
(define-fun x3771 ((x4827 Int)) Int (ite (= x1596 x4827) x1407 (x3691 x4827)))
(define-fun x1760 ((x4827 Int)) Int (ite (and (>= x4827 228) (> x5347 x4827)) (x887 (- (+ (x2742 (+ x699 228)) x4827) 228)) (x4389 x4827)))
(define-fun x2569 ((x4827 Int)) Int 0)
(define-fun x3911 ((x4827 Int)) Int (x731 x4827))
(define-fun x1694 ((x4827 Int)) Int (x4944 x4827))
(define-fun x5110 ((x4827 Int)) Int (x3758 x4827))
(define-fun x2630 ((x4827 Int)) Int (x2063 x4827))
(define-fun x2622 ((x4827 Int)) Int (x1437 x4827))
(define-fun x728 ((x4827 Int)) Int (x731 x4827))
(define-fun x2688 ((x4827 Int)) Int (x728 x4827))
(define-fun x2101 ((x4827 Int)) Int (x3758 x4827))
(define-fun x4992 ((x4827 Int)) Int (x2101 x4827))
(define-fun x1580 ((x4827 Int)) Int (x2063 x4827))
(define-fun x1103 ((x4827 Int)) Int (x1580 x4827))
(define-fun x3143 ((x4827 Int)) Int (x4944 x4827))
(define-fun x4011 ((x4827 Int)) Int (x1437 x4827))
(define-fun x666 ((x4827 Int)) Int (x4011 x4827))
(define-fun x1128 ((x4827 Int)) Int (ite (= x4827 x1596) x4985 (x3771 x4827)))
(define-fun x3482 ((x4827 Int)) Int (ite x74 (x3877 x4827) (ite x2439 (x3877 x4827) (x4449 x4827))))
(define-fun x2037 ((x4827 Int)) Int (x3482 x4827))
(define-fun x3121 ((x4827 Int)) Int (ite x74 (x1060 x4827) (ite x2439 (x1060 x4827) (x2207 x4827))))
(define-fun x3147 ((x4827 Int)) Int (x3121 x4827))
(define-fun x4088 ((x4827 Int)) Int (x42 x4827))
(define-fun x2254 ((x4827 Int)) Int (x4671 x4827))
(define-fun x1313 ((x4827 Int)) Int (ite x74 (x956 x4827) (ite x2439 (x956 x4827) (x1209 x4827))))
(define-fun x2825 ((x4827 Int)) Int (x1313 x4827))
(define-fun x4455 ((x4827 Int)) Int (x2014 x4827))
(define-fun x587 ((x4827 Int)) Int (x4455 x4827))
(define-fun x4543 ((x4827 Int)) Int (x1945 x4827))
(define-fun x4468 ((x4827 Int)) Int (x542 x4827))
(define-fun x969 ((x4827 Int)) Int (x3897 x4827))
(define-fun x3657 ((x4827 Int)) Int (x1149 x4827))
(define-fun x4331 ((x4827 Int)) Int (x3657 x4827))
(define-fun x5523 ((x4827 Int)) Int (x3096 x4827))
(define-fun x1155 ((x4827 Int)) Int (x5523 x4827))
(define-fun x972 ((x4827 Int)) Int (ite x74 (x5309 x4827) (ite x2439 (x5375 x4827) (x1540 x4827))))
(define-fun x145 ((x4827 Int)) Int (x972 x4827))
(define-fun x2810 ((x4827 Int)) Int (ite x215 (x3196 x4827) (x4719 x4827)))
(define-fun x5287 ((x4827 Int)) Int (ite x74 (x4703 x4827) (ite x2439 (x4703 x4827) (x1811 x4827))))
(define-fun x4852 ((x4827 Int)) Int (x5287 x4827))
(define-fun x2323 ((x4827 Int)) Int (ite x74 (x17 x4827) (ite x2439 (x17 x4827) (x4311 x4827))))
(define-fun x1487 ((x4827 Int)) Int (x2323 x4827))
(define-fun x1665 ((x4827 Int)) Int (x5211 x4827))
(define-fun x3024 ((x4827 Int)) Int (ite x74 (x4472 x4827) (x1538 x4827)))
(define-fun x1667 ((x4827 Int)) Int (x3845 x4827))
(define-fun x4785 ((x4827 Int)) Int (x1667 x4827))
(define-fun x3453 ((x4827 Int)) Int (ite x74 (x4466 x4827) (x5273 x4827)))
(define-fun x3131 ((x4827 Int)) Int (ite x74 (x5520 x4827) (ite x2439 (x5520 x4827) (x2843 x4827))))
(define-fun x2790 ((x4827 Int)) Int (x3131 x4827))
(define-fun x2678 ((x4827 Int)) Int (ite x74 (x4855 x4827) (x1773 x4827)))
(define-fun x4582 ((x4827 Int)) Int (ite (and (<= 0 x4827) (> x5628 x4827)) (x2810 x4827) (x2717 x4827)))
(define-fun x4710 ((x4827 Int)) Int (ite (and (>= x4827 0) (> x5628 x4827)) (x4582 x4827) (x881 x4827)))
(define-fun x1100 ((x4827 Int)) Int (ite (and (> 354 x4827) (<= 290 x4827)) (x2810 (- x4827 290)) (x4934 x4827)))
(define-fun x1933 ((x4827 Int)) Int (ite (= 4 x4827) 34 (x2717 x4827)))
(define-fun x1853 ((x4827 Int)) Int (ite (and (> 36 x4827) (<= 0 x4827)) (x1933 x4827) (x881 x4827)))
(define-fun x4842 ((x4827 Int)) Int (ite (= x4827 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1615 x4827)))
(define-fun x1641 ((x4827 Int)) Int (ite (= 192 x4827) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4842 x4827)))
(define-fun x4899 ((x4827 Int)) Int (ite (= x4827 128) 64 (x3961 x4827)))
(define-fun x2344 ((x4827 Int)) Int (ite (= 256 x4827) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3680 x4827)))
(define-fun x4122 ((x4827 Int)) Int (ite (= 258 x4827) x61 (x2344 x4827)))
(define-fun x3898 ((x4827 Int)) Int (ite (= 224 x4827) 34 (x2414 x4827)))
(define-fun x1663 ((x4827 Int)) Int (ite (= x4827 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x822 x4827)))
(define-fun x2060 ((x4827 Int)) Int (ite (= 294 x4827) x4736 (x1663 x4827)))
(define-fun x1829 ((x4827 Int)) Int (ite (= x4827 326) x2928 (x2060 x4827)))
(define-fun x290 ((x4827 Int)) Int (ite (= 358 x4827) 160 (x1829 x4827)))
(define-fun x106 ((x4827 Int)) Int (ite (= 454 x4827) x1194 (x290 x4827)))
(define-fun x2463 ((x4827 Int)) Int (ite (and (< x4827 (+ x1194 486)) (>= x4827 486)) (x1641 (- x4827 326)) (x106 x4827)))
(define-fun x1502 ((x4827 Int)) Int (ite (= 390 x4827) 0 (x2463 x4827)))
(define-fun x2571 ((x4827 Int)) Int (ite (= x4827 422) x1403 (x1502 x4827)))
(define-fun x2765 ((x4827 Int)) Int (ite (= x780 x4827) x474 (x2571 x4827)))
(define-fun x4366 ((x4827 Int)) Int (ite (and (>= x4827 x4339) (> (+ x474 x4339) x4827)) (x4122 (- (+ x4827 256) x4339)) (x2765 x4827)))
(define-fun x2518 ((x4827 Int)) Int (ite (and (< x4827 x1162) (<= 292 x4827)) (x4366 (+ x4827 290)) (x4107 x4827)))
(define-fun x601 ((x4827 Int)) Int (ite (= 128 x4827) 0 (x4300 x4827)))
(define-fun x3928 ((x4827 Int)) Int (ite (= x4827 160) 0 (x601 x4827)))
(define-fun x4315 ((x4827 Int)) Int (ite (= 290 x4827) x2867 (x4366 x4827)))
(define-fun x5196 ((x4827 Int)) Int (ite (= 322 x4827) x1164 (x4315 x4827)))
(define-fun x501 ((x4827 Int)) Int (ite (= x4827 0) x5050 (x5462 x4827)))
(define-fun x4227 ((x4827 Int)) Int (ite (= 32 x4827) x3759 (x501 x4827)))
(define-fun x1150 ((x4827 Int)) Int (ite (and (< x4827 354) (<= 290 x4827)) (x4227 (- x4827 290)) (x5404 x4827)))
(define-fun x2752 ((x4827 Int)) Int (ite x5497 (x5196 x4827) (x2857 x4827)))
(define-fun x1750 ((x4827 Int)) Int (ite (= x4827 x4722) x934 (x2521 x4827)))
(define-fun x4496 ((x4827 Int)) Int (ite (= x4827 x1980) x3953 (x1750 x4827)))
(define-fun x1950 ((x4827 Int)) Int (ite (= x4484 x4827) x4212 (x3097 x4827)))
(define-fun x4038 ((x4827 Int)) Int (ite (= x4827 x3259) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3180 x4827)))
(define-fun x1742 ((x4827 Int)) Int (ite (= x1771 x4827) x61 (x4038 x4827)))
(define-fun x2072 ((x4827 Int)) Int (ite (= x3978 x4827) x1649 (x613 x4827)))
(define-fun x4421 ((x4827 Int)) Int (ite (= x4827 x5582) x1613 (x4718 x4827)))
(define-fun x5046 ((x4827 Int)) Int (ite (= x3756 x4827) x4519 (x2164 x4827)))
(define-fun x2298 ((x4827 Int)) Int (ite (= x4827 x3756) x1935 (x2164 x4827)))
(define-fun x1930 ((x4827 Int)) Int (ite (= x4827 x1903) x478 (x5046 x4827)))
(define-fun x3431 ((x4827 Int)) Int (ite x3639 (x163 x4827) (ite x2720 (ite x4033 (x5046 x4827) (x1930 x4827)) (x2298 x4827))))
(define-fun x5199 ((x4827 Int)) Int (ite (= x4827 x1378) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x2752 x4827)))
(define-fun x1097 ((x4827 Int)) Int (ite (= x4027 x4827) x4736 (x5199 x4827)))
(define-fun x4203 ((x4827 Int)) Int (ite (= x1710 x4827) 192 (x1097 x4827)))
(define-fun x654 ((x4827 Int)) Int (ite (= x4827 x4124) x1 (x4203 x4827)))
(define-fun x5064 ((x4827 Int)) Int (ite (and (>= x4827 x1075) (> (+ x1075 x1) x4827)) (x3431 (- (+ x3756 x4827) x1075)) (x654 x4827)))
(define-fun x90 ((x4827 Int)) Int (ite (= x2586 x4827) x3358 (x5064 x4827)))
(define-fun x1733 ((x4827 Int)) Int (ite (= x4827 x5569) x4486 (x90 x4827)))
(define-fun x2498 ((x4827 Int)) Int (ite (and (>= x4827 x3428) (> (+ x4486 x3428) x4827)) (x4496 (- (+ x4827 x2040) x3428)) (x1733 x4827)))
(define-fun x5116 ((x4827 Int)) Int (ite (= x4827 x3153) x2928 (x2498 x4827)))
(define-fun x1700 ((x4827 Int)) Int (ite (= x4827 x3062) 0 (x5116 x4827)))
(define-fun x5146 ((x4827 Int)) Int (ite (= x219 x4827) x2712 (x1700 x4827)))
(define-fun x1173 ((x4827 Int)) Int (ite (= x4827 x441) x2579 (x5146 x4827)))
(define-fun x4044 ((x4827 Int)) Int (ite (and (>= x4827 x4350) (< x4827 (+ x4350 x2579))) (x1742 (- (+ x5566 x4827) x4350)) (x1173 x4827)))
(define-fun x3900 ((x4827 Int)) Int (ite (= x4827 x4684) x3709 (x496 x4827)))
(define-fun x3448 ((x4827 Int)) Int (ite (= x4827 x837) x4334 (x3900 x4827)))
(define-fun x1093 ((x4827 Int)) Int (ite (= x2928 x4827) x2231 (x3448 x4827)))
(define-fun x1166 ((x4827 Int)) Int (ite (and (< x4827 x3821) (<= 228 x4827)) (x4044 (- (+ (x2742 (+ x1378 228)) x4827) 228)) (x1756 x4827)))
(define-fun x3377 ((x4827 Int)) Int (ite x271 (x2063 x4827) (x2909 x4827)))
(define-fun x3773 ((x4827 Int)) Int (ite (= x3549 x4827) x2049 (x1313 x4827)))
(define-fun x5483 ((x4827 Int)) Int (ite (= x4827 x3590) x2785 (x3121 x4827)))
(define-fun x4260 ((x4827 Int)) Int (ite (= x3973 x4827) x2928 (x5287 x4827)))
(define-fun x5072 ((x4827 Int)) Int (ite (= x4827 0) x4037 (x5244 x4827)))
(define-fun x4589 ((x4827 Int)) Int (ite x4359 (x1218 x4827) (x4703 x4827)))
(define-fun x450 ((x4827 Int)) Int (ite x4359 (x5295 x4827) (x2621 x4827)))
(define-fun x3540 ((x4827 Int)) Int (ite x4359 (x3919 x4827) (x3877 x4827)))
(define-fun x2293 ((x4827 Int)) Int (ite x4359 (x1291 x4827) (x5520 x4827)))
(define-fun x5426 ((x4827 Int)) Int (ite x4359 (x4863 x4827) (x1060 x4827)))
(define-fun x2264 ((x4827 Int)) Int (ite x4359 (x5043 x4827) (x17 x4827)))
(define-fun x3825 ((x4827 Int)) Int (ite x4359 (x1306 x4827) (x2839 x4827)))
(define-fun x3173 ((x4827 Int)) Int (ite x4359 (x4309 x4827) (x5375 x4827)))
(define-fun x4325 ((x4827 Int)) Int (ite x4359 (x4810 x4827) (x2587 x4827)))
(define-fun x3050 ((x4827 Int)) Int (ite x4359 (x3037 x4827) (x1701 x4827)))
(define-fun x4503 ((x4827 Int)) Int (ite x4359 (x5594 x4827) (x956 x4827)))
(define-fun x2532 ((x4827 Int)) Int (ite x2557 (x1284 x4827) (x4660 x4827)))
(define-fun x4239 ((x4827 Int)) Int (ite (and (> 160 x4827) (<= 128 x4827)) (x2532 (- x4827 128)) (x535 x4827)))
(define-fun x5431 ((x4827 Int)) Int (ite x2759 (x2709 x4827) (x5101 x4827)))
(define-fun x1241 ((x4827 Int)) Int (ite (and (>= x4827 128) (< x4827 160)) (x5431 (- x4827 128)) (x982 x4827)))
(define-fun x5515 ((x4827 Int)) Int (ite x74 (x4855 x4827) (x1773 x4827)))
(define-fun x2236 ((x4827 Int)) Int (x3897 x4827))
(define-fun x605 ((x4827 Int)) Int (ite x74 (x4466 x4827) (x5273 x4827)))
(define-fun x966 ((x4827 Int)) Int (ite x74 (x4472 x4827) (x1538 x4827)))
(define-fun x2540 ((x4827 Int)) Int (ite (= x4827 x5123) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x341 x4827)))
(define-fun x538 ((x4827 Int)) Int (ite (= x4827 x2497) x2930 (x2540 x4827)))
(define-fun x4621 ((x4827 Int)) Int (ite (= 128 x4827) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x4849 x4827)))
(define-fun x2225 ((x4827 Int)) Int (ite (= 132 x4827) x3425 (x4621 x4827)))
(define-fun x3618 ((x4827 Int)) Int (ite (= x4827 164) x1232 (x2225 x4827)))
(define-fun x5333 ((x4827 Int)) Int (ite (= 196 x4827) x2096 (x3618 x4827)))
(define-fun x4624 ((x4827 Int)) Int (ite (= x4827 228) x701 (x5333 x4827)))
(define-fun x589 ((x4827 Int)) Int (ite (= x4827 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x4849 x4827)))
(define-fun x3304 ((x4827 Int)) Int (ite (= x4827 132) x760 (x589 x4827)))
(define-fun x3694 ((x4827 Int)) Int (ite (= x4827 164) x5625 (x3304 x4827)))
(define-fun x3716 ((x4827 Int)) Int (ite (= x4827 128) x5625 (x3383 x4827)))
(define-fun x2591 ((x4827 Int)) Int (ite (= x4827 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x3716 x4827)))
(define-fun x1837 ((x4827 Int)) Int (ite (= x4827 132) x760 (x2591 x4827)))
(define-fun x3027 ((x4827 Int)) Int (ite (= x4827 164) 0 (x1837 x4827)))
(define-fun x2431 ((x4827 Int)) Int (ite (= 196 x4827) 0 (x3027 x4827)))
(define-fun x4051 ((x4827 Int)) Int (ite (= 128 x4827) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x4849 x4827)))
(define-fun x2461 ((x4827 Int)) Int (ite (= 132 x4827) x999 (x4051 x4827)))
(define-fun x5351 ((x4827 Int)) Int (ite (= x4827 164) x4185 (x2461 x4827)))
(define-fun x2873 ((x4827 Int)) Int (ite (= 196 x4827) x5386 (x5351 x4827)))
(define-fun x3814 ((x4827 Int)) Int (ite (= x4827 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x4849 x4827)))
(define-fun x563 ((x4827 Int)) Int (ite (= 132 x4827) x2572 (x3814 x4827)))
(define-fun x3330 ((x4827 Int)) Int (ite (= x4827 x2928) x1402 (x496 x4827)))
(define-fun x3194 ((x4827 Int)) Int (ite (= x4827 x2572) x567 (x3330 x4827)))
(define-fun x2960 ((x4827 Int)) Int (ite (= 128 x4827) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x4849 x4827)))
(define-fun x2513 ((x4827 Int)) Int (ite (= x4827 132) x762 (x2960 x4827)))
(define-fun x3633 ((x4827 Int)) Int (ite x2641 (x4045 x4827) (ite x3031 (x4045 x4827) (x2830 x4827))))
(define-fun x3856 ((x4827 Int)) Int (ite x2641 (x3493 x4827) (ite x3031 (x3493 x4827) (x4672 x4827))))
(define-fun x617 ((x4827 Int)) Int (x731 x4827))
(define-fun x517 ((x4827 Int)) Int (x1437 x4827))
(define-fun x372 ((x4827 Int)) Int (ite x2641 (x5072 x4827) (x2775 x4827)))
(define-fun x3012 ((x4827 Int)) Int (ite (and (<= x5123 x4827) (< x4827 (+ x5123 32))) (x372 (- x4827 x5123)) (x4935 x4827)))
(define-fun x3669 ((x4827 Int)) Int (ite (= x422 x4827) 0 (x124 x4827)))
(define-fun x5173 ((x4827 Int)) Int (ite (= x4790 x4827) 1 (x3856 x4827)))
(define-fun x4156 ((x4827 Int)) Int (ite (= x3601 x4827) x1464 (x3754 x4827)))
(define-fun x1398 ((x4827 Int)) Int (ite (= x4827 x1461) 0 (x3633 x4827)))
(define-fun x4310 ((x4827 Int)) Int 0)
(define-fun x1623 ((x4827 Int)) Int 0)
(define-fun x3724 ((x4827 Int)) Int (ite (= 128 x4827) x9 (x38 x4827)))
(define-fun x5651 ((x4827 Int)) Int (ite (= x4827 160) x4281 (x3724 x4827)))
(define-fun x1781 ((x4827 Int)) Int (ite (= x4827 192) x561 (x5651 x4827)))
(assert (= 6 (x4160 (x4266 64 x5232 6))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x2385 x4168 x1928)))
(assert (not (x4435 (x269 x3137 x3579 x4653 x2811))))
(assert (=> (>= 10000 x2994) (= 0 (x5051 x2994))))
(assert (< 10000 (x5009 x2358 x5413)))
(assert (= x5587 (x5346 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366))))
(assert (x5553 x2040))
(assert (=> (<= x4948 10000) (= 0 (x5051 x4948))))
(assert (x5553 x2337))
(assert (x5553 x1112))
(assert (not (x4435 (x5009 x5501 x4243))))
(assert (= (x3238 (x4266 64 x1707 7)) x1707))
(assert (= (x5051 (x3789 x4283 x3013 x2354 x4853 x4379)) (x3789 x4283 x3013 x2354 x4853 x4379)))
(assert (= (x5051 (x3789 x286 x2817 x3102 x4130 x3436)) (x3789 x286 x2817 x3102 x4130 x3436)))
(assert (= x3108 (x40 (x1228 x2385 x4180 x4698 x1668 x33 x3108))))
(assert (= x382 (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x4623)) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5574) x5496) (<= x2527 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x5574 (x2742 (+ x665 31))) (not (= x4623 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4623) (<= x4623 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x206 x2506) x1918) (= x2506 (x2742 (+ x2527 32))) (<= x2527 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1451 (+ x4517 46442213778836376901753710468615024683576072693327014300388496345503314739200)) (= x449 (> x2226 0)) (< x2527 x4623) (= (x2742 (+ 192 x4623)) x5362) (= x5034 (x4395 (- x4623 x2527))) (= (x2988 x2527) x3668) (= (x2742 (+ 32 x4623)) x2169) (= x1010 (x4395 (- x5034 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2527) (= x4517 (x2436 26959946667150639794667015087019630673637144422540572481103610249215 x1918)) (= (x2742 (+ x1363 x5496)) x4623) (>= x4623 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x4623)) (> x5362 x4623) (= (x2742 (+ x1363 x665)) x5324) (<= x4623 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (or (and (and (= x4680 x4509) (= x3441 x5415) (= x1492 x2119) (= x387 (+ 1 x4480)) (= x2598 x981) (= x1956 x1626)) (not x449)) (and (and x3777 (= x3810 x387) (= x659 (<= x1606 (x3333 x2928))) (= (x3390 x2928) x1606) (= x3326 x2119) (>= 4294967295 x2291) (= x3564 x4680) x659 (= (= x1328 (x3333 x2928)) x3777) (= x1328 (x3390 x2928)) (= x3067 x3441) (= x981 x1850) (= x1626 x1800)) x449))) x5540)))
(assert (< 10000 (x4266 64 x3406 36)))
(assert (= (x3238 (x3789 x286 x2817 x3102 x4130 x3436)) x2817))
(assert (x5553 x4364))
(assert (x5553 x1257))
(assert (x5553 x724))
(assert (x5553 x305))
(assert (= (x3789 x1004 x3815 x2736 x1603 x5356) (x5051 (x3789 x1004 x3815 x2736 x1603 x5356))))
(assert (= (x4160 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787)) x590))
(assert (= (x722 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947)) x4483))
(assert (x5553 x1986))
(assert (=> (>= 10000 x3337) (= (x5051 x3337) 0)))
(assert (= x4836 (x3238 (x4266 64 x4836 11))))
(assert (x5553 x5327))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x5553 x1806))
(assert (x5553 x1984))
(assert (x5553 x1767))
(assert (= (x3238 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914)) x3103))
(assert (x5553 x1357))
(assert (=> (<= x3830 10000) (= 0 (x5051 x3830))))
(assert (x5553 x3274))
(assert (= (or x1455 x4368 x4112 x2307 x1301) x1634))
(assert (= (x5051 (x4266 64 x4708 36)) (x4266 64 x4708 36)))
(assert (= x2385 (x894 (x3789 x2385 x3894 x3556 x3996 x3839))))
(assert (= (x269 x85 x3183 x729 x2972) (x5051 (x269 x85 x3183 x729 x2972))))
(assert (not (x4435 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366))))
(assert (= x2787 (and x4144 x2041)))
(assert (x5553 x336))
(assert (= x1936 (x722 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092))))
(assert (< (x4266 64 x1844 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3238 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134)) x5489))
(assert (x5553 x5633))
(assert (=> (<= x1572 10000) (= (x5051 x1572) 0)))
(assert (x5553 x2119))
(assert (x5553 x1432))
(assert (= (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134) (x5051 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134))))
(assert (x5553 x4586))
(assert (< (x4266 64 x2755 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x736))
(assert (x1779 x963))
(assert (= (x4266 64 x5456 100) (x5051 (x4266 64 x5456 100))))
(assert (=> (<= x5108 10000) (= (x5051 x5108) 0)))
(assert (x5553 x3815))
(assert (> (x1228 x1966 x2083 x4104 x1865 x2530 x2341) 10000))
(assert (= x438 (and x3626 x4871)))
(assert (< 10000 (x269 x4283 x681 x4511 x4843)))
(assert (= x4981 (and x770 x2956)))
(assert (= (or x4358 x5174) x1192))
(assert (=> (>= 10000 x674) (= (x5051 x674) 0)))
(assert (x5553 x552))
(assert (=> (<= x383 10000) (= 0 (x5051 x383))))
(assert (x4435 4294967358))
(assert (x5553 x1588))
(assert (= x3184 (x40 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661))))
(assert (=> (<= x3128 10000) (= 0 (x5051 x3128))))
(assert (x5553 x150))
(assert (x5553 x819))
(assert (=> (<= x484 10000) (= 0 (x5051 x484))))
(assert (= x3510 (x5346 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510))))
(assert (x5553 x2394))
(assert (= x5632 (and x621 x2966)))
(assert (= (=> (and (= x1481 x4567) (= x1481 (x4239 128)) (= x5123 160)) x1689) x1239))
(assert (< (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x164))
(assert (x5553 x2382))
(assert (x121 x1390))
(assert (not (x4435 (x4266 64 x3022 10))))
(assert (x5553 x3075))
(assert (= (x3238 (x4266 64 1 x4659)) 1))
(assert (= (x269 x1004 x4085 x5592 x4629) (x5051 (x269 x1004 x4085 x5592 x4629))))
(assert (x5553 x4633))
(assert (x5553 x3314))
(assert (x5553 x2085))
(assert (x5553 x3073))
(assert (= (and (not x332) x228) x5209))
(assert (=> (<= x4691 10000) (= 0 (x5051 x4691))))
(assert (= x2464 (x722 (x1228 x2358 x2475 x383 x2464 x3210 x5595))))
(assert (x5553 x2836))
(assert (x5553 x4335))
(assert (= x3895 (x4160 (x1228 x5613 x5274 x3895 x2978 x2944 x1312))))
(assert (x1779 x4187))
(assert (not (x4435 (x4266 64 x2010 36))))
(assert (not (x4435 (x4266 64 x929 2))))
(assert (x5553 x4793))
(assert (x5553 x4705))
(assert (x5553 x3262))
(assert (x5553 x1399))
(assert (x5553 x845))
(assert (x5553 x4360))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x1966 x4837)))
(assert (x5553 x425))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x2434 x1862 x1112 x541 x3398 x3066)))
(assert (=> (>= 10000 x845) (= 0 (x5051 x845))))
(assert (x1779 x190))
(assert (x5553 x5086))
(assert (= x4652 (x40 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344))))
(assert (= x983 (and (not x4704) x5585)))
(assert (x5553 x1597))
(assert (x5553 x2647))
(assert (= x4248 (x3238 (x4266 64 x4248 (ite (= x4005 0) x1220 (ite (>= 32 x4005) x4371 (ite (<= x4005 64) x892 (ite (<= x4005 96) x4094 (ite (>= 128 x4005) x3271 (ite (>= 160 x4005) x3619 (ite (>= 192 x4005) x311 (ite (<= x4005 224) x4546 x437))))))))))))
(assert (x4435 3812630263))
(assert (x5553 x437))
(assert (x5553 x4623))
(assert (= (x3247 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947)) x4858))
(assert (=> (<= x772 10000) (= (x5051 x772) 0)))
(assert (= (x4160 (x3789 x3137 x130 x1576 x2450 x5371)) x1576))
(assert (x5553 x193))
(assert (= x2554 (and x3186 x4526)))
(assert (x5553 x3336))
(assert (= (x4160 (x4266 64 1 x3090)) x3090))
(assert (< (x5009 32 x434) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1894))
(assert (x5553 x393))
(assert (=> (<= x2836 10000) (= 0 (x5051 x2836))))
(assert (x5553 x4945))
(assert (< 10000 (x1228 x3137 x3982 x1109 x209 x5082 x1165)))
(assert (= (x894 (x4266 x3525 x852 x5119)) x3525))
(assert (= (and x304 x4952) x5634))
(assert (= (and x1804 (not x4607)) x315))
(assert (= x3799 (x3238 (x5009 32 x3799))))
(assert (=> (>= 10000 x4217) (= (x5051 x4217) 0)))
(assert (= x4796 (x722 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177))))
(assert (=> (>= 10000 x3947) (= (x5051 x3947) 0)))
(assert (= x1247 (and x1076 (not x4954))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x4283 x681 x4511 x4843)))
(assert (x5553 x4482))
(assert (x5553 x2423))
(assert (x5553 x1786))
(assert (=> (>= 10000 x629) (= (x5051 x629) 0)))
(assert (x5553 x3047))
(assert (< 10000 (x4266 64 x4927 100)))
(assert (= x2103 (=> (= (= 0 x5597) x2956) (and (=> (and (= 1 x5597) x2956) x1662) (=> (not x2956) x356)))))
(assert (= (x894 (x4266 64 x2010 36)) 64))
(assert (= (x5051 (x5009 x3137 x4245)) (x5009 x3137 x4245)))
(assert (x5553 x1624))
(assert (x5553 x187))
(assert (=> (<= x3592 10000) (= 0 (x5051 x3592))))
(assert (x5553 x4962))
(assert (x5553 x3345))
(assert (< 10000 (x4266 64 x2829 (ite (= x3525 0) x3645 (ite (>= 32 x3525) x799 (ite (<= x3525 64) x1267 (ite (>= 96 x3525) x149 (ite (>= 128 x3525) x745 (ite (<= x3525 160) x2422 (ite (>= 192 x3525) x615 (ite (>= 224 x3525) x3015 x3278)))))))))))
(assert (x5553 x2275))
(assert (= (x5009 32 x1199) (x5051 (x5009 32 x1199))))
(assert (= x595 (and (not x1240) x3402)))
(assert (x5553 x855))
(assert (x111 x1642))
(assert (=> (>= 10000 x5131) (= 0 (x5051 x5131))))
(assert (x5553 x115))
(assert (x5553 x1265))
(assert (x5553 x4129))
(assert (= (x5051 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325)) (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325)))
(assert (x5553 x5155))
(assert (x5553 x3245))
(assert (= x1503 (and x3692 (not x3499))))
(assert (= (and (not x3963) x5432) x3424))
(assert (= (x3238 (x1228 x2385 x4180 x4698 x1668 x33 x3108)) x4180))
(assert (= (=> (and (= x3347 (x4395 (- x4596 128))) (= x4200 128) (>= 18446744073709551615 x1234) (<= 1 x1307) (= (x4395 (- x4005 32)) x5501) (<= x5277 18446744073709551615) (= x3833 (x4762 x1956)) (= x1949 (+ x5277 164)) (= x1234 (x4774 x4419)) (= x2880 (x5419 x1956)) (= (= x4209 (x3658 132)) x310) (= false x4712) (not (> x1245 x2430)) (= (+ x4294 x2880) x3177) (= (- x4049 x4294) x5437) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2430) (= (x3390 x1956) x3245) (<= x3347 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (+ 32 x4419) x1069) (<= 196 x3347) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3177) (= (x4774 132) x5277) (= x4419 (+ 4 x3016)) x310 (= x5609 164) (not (< x2430 x1949)) (= (x3390 x4684) x1802) (= x2430 x3347) (>= 127 x3550) (= x3016 x2275) (= x4049 (x3390 x4684)) (< (+ x3245 x4294) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x2880 x4294) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2588 128) (= x1041 3521034783) (= x379 x3177) (= (+ x5277 128) x1433) (= x2578 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= (+ x1069 x1234) x1245) (= x3442 (+ 128 x5277)) (>= x2430 196) (= (<= x5501 224) x1421) (>= 127 x3550) (= x3077 false) (= (x4266 64 x1707 7) x4229) (= x1707 x1345) (< x2957 x2430) (<= 1 x3833) (= x2957 (+ x4419 31)) (= x227 x4248) (<= 0 x3177) (>= x1802 x4294) (= (x4395 (- (mod (+ 32 x3442) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x4005) (= (x4762 x2928) x1307)) (and (=> (and (= x2425 (x5389 192)) (= x2086 (x5389 160)) (= (ite (= 0 x5501) x5006 (ite (>= 32 x5501) x471 (ite (<= x5501 64) x3822 (ite (>= 96 x5501) x2632 (ite (<= x5501 128) x1960 (ite (<= x5501 160) x5311 (ite (>= 192 x5501) x1959 (ite (>= 224 x5501) x1943 x5502)))))))) x2200) (= (x5389 160) x5366) (= (x5389 224) x4330) (= x2194 (x5389 192)) (= (x5389 128) x5093) (= (x5389 256) x2771) (= (x5389 224) x3951) (= (x5389 320) x336) (= (x5009 x5501 x4243) x471) (= x4243 (x5389 128)) (= (>= 224 x4005) x740) (= x2453 (x5389 224)) (= (x5389 128) x976) (= (x5389 192) x1537) (= (x5389 288) x3712) (= (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736) x1959) (= x4275 (x5389 256)) (= x5370 (x5389 128)) (= (x5389 256) x4688) (= (x5389 160) x2082) (= x1943 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336)) (= (x5389 128) x1182) (= (x5389 128) x784) (= (x5389 160) x5056) (= (x5389 128) x1456) (= (x5389 160) x3627) (= (x1228 x5501 x1182 x866 x2425 x4330 x4688) x5311) (= x3822 (x4266 x5501 x5370 x5056)) (= (x5389 160) x866) (= x2533 (x5389 224)) (= (x269 x5501 x784 x3627 x2194) x2632) (= x1960 (x3789 x5501 x1456 x5366 x1537 x3951)) (= x736 (x5389 288)) (= x5006 (x102 0)) (= x2147 (x5389 192)) (= (x5389 192) x4018)) (and x740 (=> (and (= (x5389 128) x99) (= x4179 (x5389 224)) (= x365 (x4266 64 x4248 (ite (= x4005 0) x1220 (ite (>= 32 x4005) x4371 (ite (>= 64 x4005) x892 (ite (<= x4005 96) x4094 (ite (<= x4005 128) x3271 (ite (>= 160 x4005) x3619 (ite (>= 192 x4005) x311 (ite (>= 224 x4005) x4546 x437)))))))))) (= (x5389 128) x2076) (= (x5389 160) x921) (<= 1 x5306) (= x4465 (x5389 128)) (= x4371 (x5009 x4005 x2076)) (= x3662 (<= x4283 224)) (= (x4266 x4005 x4465 x1714) x892) (= (x5389 128) x4717) (= x5108 (x5389 224)) (= (x269 x4005 x99 x921 x2321) x4094) (= x4065 (x5389 160)) (= x4283 (x4395 (- x4218 128))) (= (x5389 160) x1714) (= (x5389 224) x3258) (= (x102 0) x1220) (= x5306 (x2592 x365)) (= x3301 (x5389 256)) (= x4218 (+ x1234 128)) (= (x5389 192) x1273) (= (x5389 160) x2566) (= x311 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278)) (= x1036 (x5389 256)) (= (x5389 160) x1798) (= x5499 (x5389 192)) (= x3619 (x1228 x4005 x4730 x1798 x3345 x4179 x4679)) (= (x5389 288) x1065) (= (x5389 256) x4679) (= (x5389 320) x1253) (= (x5389 288) x1278) (= (x5389 128) x4730) (= x5038 (x5389 192)) (= x4546 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253)) (= (x5389 128) x3571) (= x1214 (x5389 128)) (= x2321 (x5389 192)) (= x5125 (x5389 224)) (= (x5389 192) x3345) (= (x5389 160) x294) (= x3271 (x3789 x4005 x4717 x294 x5499 x3258))) (and x3662 (=> (and (= (x3733 224) x588) (= (x5009 x4283 x769) x627) (= (x269 x4283 x681 x4511 x4843) x714) (= (x3733 192) x338) (= (x3733 192) x4843) (= x4379 (x3733 224)) (= x3600 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135)) (= x1666 (x3733 160)) (= x3362 (+ x5277 128)) (= x5561 x5306) (= x1171 (x4266 x4283 x1477 x242)) (= x2354 (x3733 160)) (= (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598) x1039) (= (x3733 192) x4853) (= x5598 (x3733 288)) (= (x3733 128) x681) (= x4511 (x3733 160)) (= (x3733 192) x1016) (= (+ x5277 128) x1157) (= x486 (x102 0)) (= x1477 (x3733 128)) (= (x3733 224) x55) (= (<= x2385 224) x2066) (= (x3733 320) x2135) (= x3013 (x3733 128)) (<= 1 x5561) (= x5234 (x3733 224)) (= (x3789 x4283 x3013 x2354 x4853 x4379) x1531) (= (x3733 256) x3122) (= (x3733 128) x4988) (= x2385 (x4395 (- x1855 32))) (= x2668 (x3733 160)) (= (x3733 192) x3264) (= (x3733 128) x769) (= x516 (x3733 160)) (= (x3733 256) x4812) (= x1855 (x4395 (- (mod (+ 32 x3362) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128))) (= x3781 (x4266 64 x1707 7)) (= (x3733 128) x5337) (= x1559 (x3733 256)) (= (x3733 128) x4002) (= x3599 (x3733 288)) (= x3159 (x1228 x4283 x5337 x2668 x338 x5234 x3122)) (= (x3733 160) x242) (= (ite (= 0 x4283) x486 (ite (<= x4283 32) x627 (ite (>= 64 x4283) x1171 (ite (>= 96 x4283) x714 (ite (<= x4283 128) x1531 (ite (>= 160 x4283) x3159 (ite (<= x4283 192) x1039 (ite (>= 224 x4283) x3600 x4278)))))))) x5561)) (and x2066 (=> (and (= x4353 (x4515 256)) (= x1928 (x4515 160)) (= x3757 (x3789 x2385 x3894 x3556 x3996 x3839)) (= x4423 (x4515 192)) (= x293 (ite (= x2385 0) x5552 (ite (>= 32 x2385) x4385 (ite (>= 64 x2385) x1795 (ite (<= x2385 96) x5510 (ite (<= x2385 128) x3757 (ite (<= x2385 160) x4599 (ite (<= x2385 192) x4276 (ite (>= 224 x2385) x11 x392))))))))) (= (x4515 224) x5503) (= (x4515 128) x210) (= x4599 (x1228 x2385 x4180 x4698 x1668 x33 x3108)) (= (x269 x2385 x3846 x2780 x4360) x5510) (= (x4515 224) x3839) (= (x4515 160) x3556) (= x4360 (x4515 192)) (= x33 (x4515 224)) (= x462 (x4515 256)) (= (x4515 320) x325) (= (x4266 x2385 x4168 x1928) x1795) (= x4698 (x4515 160)) (= (x485 x2385 x210 x579 x4423 x5503 x462 x5517) x4276) (= (x4515 256) x3108) (= (x4515 128) x4168) (= x2780 (x4515 160)) (= (x5009 x2385 x3860) x4385) (= (x4515 288) x5517) (= (x4515 288) x3233) (= (x4515 128) x3846) (= (x4515 192) x2123) (= (x4515 192) x3996) (= (x4515 128) x4180) (= x3494 (x4515 160)) (= x802 (<= x1855 224)) (= x1668 (x4515 192)) (= (x4515 128) x3860) (= x2683 (x4515 128)) (= (x4515 160) x579) (= x3894 (x4515 128)) (= x5552 (x102 0)) (= x5190 (x4515 224)) (= (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325) x11)) (and x802 (not (and (= (x591 x139) x3858) (= x4702 (+ x139 x1234)) (= x1965 (x4515 192)) (= x3081 (x102 0)) (= (x4266 64 x3858 10) x5201) (= (+ x4949 32 x2738) x3697) (= x2113 128) (= (x4266 x1855 x5144 x3036) x5477) (= x2773 (div (+ x1234 31) 32)) (= (x5009 x1855 x4516) x322) (= (x4515 288) x2612) (= x2935 (x4515 128)) (<= 32 x2355) (= x2738 (+ x3476 160)) (= x2121 (x4515 128)) (> x3697 x2738) (= x3650 (x4515 256)) (= x697 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473)) (= (x4515 192) x2157) (= x141 (x4515 224)) (= x4516 (x4515 128)) (= x850 (x4515 320)) (= (x591 x2738) x2355) (= x5473 (x4515 288)) (= (x1228 x1855 x2935 x2740 x2157 x4851 x3650) x4313) (= x533 (div (+ 31 x5277) 32)) (= (x4515 160) x5161) (= (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850) x2883) (= x2410 (x4515 192)) (= (x4515 160) x3751) (= (* x2773 32) x4949) (= x1968 (x4515 224)) (= (x4515 160) x1643) (= (x269 x1855 x3349 x3751 x2410) x3025) (= (x4515 128) x4793) (= x2504 (+ 160 x5277)) (= x3476 (* 32 x533)) (= (x4266 64 x4248 (ite (= x1855 0) x3081 (ite (>= 32 x1855) x322 (ite (<= x1855 64) x5477 (ite (<= x1855 96) x3025 (ite (<= x1855 128) x2729 (ite (>= 160 x1855) x4313 (ite (>= 192 x1855) x697 (ite (<= x1855 224) x2883 x3375))))))))) x2404) (= (x4515 256) x4176) (= x3349 (x4515 128)) (= (x4515 160) x3036) (= (x4515 128) x5144) (= x139 (+ x2738 32)) (= x3195 (x4515 192)) (= (x4515 224) x4851) (= (x4515 256) x715) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2355) (= (x4515 128) x3906) (= x4554 (x4515 224)) (= x2718 (x4515 160)) (= x2729 (x3789 x1855 x4793 x5161 x2447 x1968)) (= x2447 (x4515 192)) (= (x4515 160) x2740))))))))))) x1421)) x4081))
(assert (x5553 x4637))
(assert (= (x4160 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)) x1911))
(assert (= 0 (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (= x4528 (=> (= (not (> x1555 128)) x2413) (and x5518 x2413))))
(assert (x5553 x3423))
(assert (x5553 x4566))
(assert (x5553 x693))
(assert (= (=> (= x684 x5536) x1190) x1019))
(assert (x5553 x3878))
(assert (x5553 x4099))
(assert (x5553 x3485))
(assert (= 36 (x4160 (x4266 64 x4708 36))))
(assert (= (and x1671 x2399) x440))
(assert (= 64 (x894 (x4266 64 x2836 10))))
(assert (= 0 (x5051 102788308552044517260959567728648622381392053106279845986800620074717893623808)))
(assert (x5553 x1205))
(assert (= x2935 (x3238 (x1228 x1855 x2935 x2740 x2157 x4851 x3650))))
(assert (= 1 (x3238 (x4266 64 1 x4794))))
(assert (< (x3789 x4005 x4717 x294 x5499 x3258) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3666))
(assert (= x2123 (x722 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325))))
(assert (x5553 x1529))
(assert (x5553 x4413))
(assert (x1779 x1205))
(assert (=> (>= 10000 x1495) (= (x5051 x1495) 0)))
(assert (x5553 x5018))
(assert (x5553 x2270))
(assert (= (x894 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) x610))
(assert (=> (>= 10000 x5013) (= 0 (x5051 x5013))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 32 x1587)))
(assert (= (and x4113 x4642) x4146))
(assert (x5553 x1253))
(assert (x5553 x1207))
(assert (= 0 (x5051 3963877391197344453575983046348115674221700746820753546331534351508065746944)))
(assert (x5553 x614))
(assert (= x2942 (x3238 (x4266 x5530 x2942 x2837))))
(assert (= (x894 (x4266 64 x2766 (ite (= x530 0) x4826 (ite (>= 32 x530) x4936 (ite (<= x530 64) x5563 (ite (<= x530 96) x1447 (ite (>= 128 x530) x3538 (ite (<= x530 160) x1640 (ite (<= x530 192) x4713 (ite (<= x530 224) x1084 x1552)))))))))) 64))
(assert (x5553 x596))
(assert (x5553 x3094))
(assert (=> (>= 10000 x2358) (= (x5051 x2358) 0)))
(assert (x5553 x4925))
(assert (x5553 x1849))
(assert (= x1295 (and (not x1423) x2492)))
(assert (not (x4435 (x4266 x85 x2505 x2057))))
(assert (x5553 x1666))
(assert (x5553 x4491))
(assert (not (x4435 (x4266 64 x2829 (ite (= x3525 0) x3645 (ite (>= 32 x3525) x799 (ite (>= 64 x3525) x1267 (ite (>= 96 x3525) x149 (ite (<= x3525 128) x745 (ite (>= 160 x3525) x2422 (ite (<= x3525 192) x615 (ite (<= x3525 224) x3015 x3278))))))))))))
(assert (> (x5009 32 x434) 10000))
(assert (x5553 x3136))
(assert (x5553 x5104))
(assert (= x2168 (x722 (x1228 x5530 x671 x845 x2168 x5004 x498))))
(assert (= x1723 (x3238 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946))))
(assert (x5553 x188))
(assert (x5553 x2733))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x4216 10)))
(assert (> (x4266 64 1 x3090) 10000))
(assert (= x670 (and (not x3603) x4296)))
(assert (not (x4435 (x269 x2443 x3830 x1931 x5230))))
(assert (= (x5051 (+ x507 1)) (x5051 x507)))
(assert (= (x3238 (x4266 64 x4736 4)) x4736))
(assert (x5553 x1846))
(assert (x5553 x1172))
(assert (=> (<= x1976 10000) (= (x5051 x1976) 0)))
(assert (x5553 x5461))
(assert (= (x894 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593)) x693))
(assert (not (x4435 (x4266 x693 x2462 x807))))
(assert (= (and x4189 x5399) x4113))
(assert (x5553 x4147))
(assert (= (or x3997 (and x5291 (not x2484))) x1740))
(assert (x5553 x5227))
(assert (x5553 x388))
(assert (= x4104 (x4160 (x1228 x1966 x2083 x4104 x1865 x2530 x2341))))
(assert (not (x4435 (x4266 64 x4736 5))))
(assert (x5553 x3494))
(assert (x5553 x3224))
(assert (< 10000 (x4266 64 x4037 0)))
(assert (x5553 x5090))
(assert (= (x4266 64 x2536 12) (x5051 (x4266 64 x2536 12))))
(assert (x5266 x1492))
(assert (= (x3238 (x4266 x5501 x5370 x5056)) x5370))
(assert (x4435 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (= x1102 (or (and x3591 (not x739)) (and (not x5564) x3039) (and (not x1049) x5000))))
(assert (= 0 (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x5553 x685))
(assert (= (x5051 (x4266 64 x2382 6)) (x4266 64 x2382 6)))
(assert (x1779 x4572))
(assert (x5553 x101))
(assert (= (x40 (x1228 x5501 x1182 x866 x2425 x4330 x4688)) x4688))
(assert (x5553 x5474))
(assert (= (x1514 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157)) x4157))
(assert (x5553 x396))
(assert (=> (<= x1035 10000) (= 0 (x5051 x1035))))
(assert (x5553 x1711))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x1966 x1684 x225 x724)))
(assert (x5553 x2235))
(assert (x5553 x5230))
(assert (= (or x1247 x3199 x2437) x1111))
(assert (x5553 x3364))
(assert (= x888 (and x4467 x1490)))
(assert (= x4997 (=> (and (= x635 (= 0 x4529)) (= x1759 (x2436 1 x578)) (= x3449 (ite (< 0 x1759) x190 (x2436 127 x190))) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3353) (= 1 x3353)) (= (div x578 2) x190) (= (+ x3941 32) x1188) (= x4529 (x2436 1 x578)) (= (x4395 (- x1759 (mod (ite (< x3449 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3353) (= x2958 (- x3941 132))) (and (=> (and (not x635) (and (= (< 0 x3449) x3778) (= x1249 (x5009 32 104)))) (and (=> x3778 x1672) (=> (and (= 0 x5416) (not x3778)) x1747))) (=> (and x635 (and (= x915 (+ x1188 x2192)) (= (* 32 (ite (not (= 0 x3449)) 1 0)) x2192) (or (= x2192 32) (= 0 x2192)) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x578) x540))) x1882)))))
(assert (x5553 x4651))
(assert (not (x4435 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324))))
(assert (x5553 x3204))
(assert (= x434 (x3238 (x5009 32 x434))))
(assert (not (x4435 (x485 x286 x63 x2537 x401 x1054 x2048 x4601))))
(assert (= x5567 (and (not x4363) x4388)))
(assert (x5553 x3780))
(assert (x5553 x2755))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x2385 x3860)))
(assert (x5553 x4125))
(assert (x5553 x4440))
(assert (x5553 x1557))
(assert (x5553 x2763))
(assert (x5553 x5366))
(assert (= x541 (x722 (x1228 x2434 x1862 x1112 x541 x3398 x3066))))
(assert (= (and x5231 x2702) x2721))
(assert (= x2242 (or x4661 x171)))
(assert (= x4994 (=> (and (= x2638 (x2507 x5310)) (= x1264 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x963)) (= (> x2638 0) x3541) (= (x2742 (+ x4013 32)) x4530) (= x963 (x2742 (+ x1044 31))) (= (x2742 (+ 32 x4565)) x1639) (= (x2742 (+ x4530 32)) x3059) (= x1860 (x4395 (- x4565 x4770))) (= (x2742 (+ x1264 x4758)) x4565) (= (x2742 (+ x1044 x4758)) x1833)) (and (=> (not x3541) x1431) (=> (and (and (= x4664 (x4779 x1470)) (= x1259 (< 32 x2638))) x3541) (and (=> (not x1259) x1431) (=> (and x1259 (and (= x4886 (x664 x3742)) (= x3742 (x2742 (+ x1470 32))) (= x1836 (x2742 (+ 32 x1639))) (= x270 (< 64 x2638)))) (and (=> (and x270 (and (= (x2742 (+ x1470 64)) x3572) (= x4681 (> x2638 96)) (= x4056 (x2976 x3572)) (= x1910 (x2742 (+ x1639 64))))) (and (=> (not x4681) x1431) (=> x4681 x4126))) (=> (not x270) x1431)))))))))
(assert (x1779 x2842))
(assert (x5553 x579))
(assert (x5553 x48))
(assert (= (and x3818 (not x5332)) x621))
(assert (x5553 x2735))
(assert (=> (<= x975 10000) (= (x5051 x975) 0)))
(assert (=> (<= x2443 10000) (= 0 (x5051 x2443))))
(assert (x5553 x3543))
(assert (= (x3789 x4005 x4717 x294 x5499 x3258) (x5051 (x3789 x4005 x4717 x294 x5499 x3258))))
(assert (= (x5051 (+ x1101 1)) (x5051 x1101)))
(assert (x5553 x4961))
(assert (= (and x3357 x1558) x4622))
(assert (x5553 x4317))
(assert (not (x4435 (x1228 x1004 x3020 x2102 x388 x3489 x1127))))
(assert (x1779 x5599))
(assert (= x2222 (or x1427 x1617)))
(assert (=> (<= x3436 10000) (= (x5051 x3436) 0)))
(assert (x5553 x2821))
(assert (x5553 x3860))
(assert (= (x5051 13123866003235860548192500634644069355060014211693331341089165407210616913920) 0))
(assert (x5553 x4220))
(assert (=> (>= 10000 x2010) (= (x5051 x2010) 0)))
(assert (x5553 x1732))
(assert (x5553 x3461))
(assert (= (x5051 (x5009 x1966 x4837)) (x5009 x1966 x4837)))
(assert (x5553 x2233))
(assert (x5553 x3400))
(assert (< (x5009 32 x1199) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2981 (and x1517 (not x5183))))
(assert (= (=> (and (= (not (> x968 128)) x849) (= (x2742 (+ 96 x1047)) x2004) (= (x616 x4937) x4261) (= (x2742 (+ x296 96)) x4937)) (and x849 x5057)) x4291))
(assert (x5553 x2935))
(assert (x5553 x3153))
(assert (x5553 x335))
(assert (= x4845 (and x1887 x2242)))
(assert (x5553 x1038))
(assert (=> (>= 10000 x5573) (= 0 (x5051 x5573))))
(assert (x5266 x337))
(assert (x5553 x3895))
(assert (x5553 x1185))
(assert (< 10000 (x4266 x1004 x905 x573)))
(assert (=> (>= 10000 x736) (= 0 (x5051 x736))))
(assert (=> (>= 10000 x1857) (= (x5051 x1857) 0)))
(assert (x5553 x717))
(assert (x1779 x1642))
(assert (x5553 x4980))
(assert (x5553 x4170))
(assert (not (x4435 (x4266 x2434 x4068 x4292))))
(assert (x5553 x504))
(assert (=> (<= x1647 10000) (= (x5051 x1647) 0)))
(assert (= (or x2109 x1295) x5435))
(assert (x1779 x1390))
(assert (x5553 x2515))
(assert (= (x5051 (+ 1 x5296)) (x5051 x5296)))
(assert (= (x894 (x4266 64 x2650 12)) 64))
(assert (= x3200 (=> (and (= x5579 (x2742 (+ 32 x448))) (= (x630 x4623) x1555) (= (x2742 (+ 31 x5429)) x3976) (= x1881 (x4395 (- x5654 x5362))) (= x3783 (x2742 (+ x4119 x5429))) (= (x2742 (+ x4274 x4119)) x5654) (= (< 0 x1555) x2600) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3976) x4274)) (and (=> (and x2600 (= (> x1555 32) x908)) (and (=> (not x908) x5518) (=> (and (= x4726 (> x1555 64)) x908) (and (=> (and x4726 (= (> x1555 96) x4750)) (and (=> (not x4750) x5518) (=> x4750 x4528))) (=> (not x4726) x5518))))) (=> (not x2600) x5518)))))
(assert (= (and (not x3873) x3474) x2247))
(assert (x5553 x5254))
(assert (x5553 x3170))
(assert (= x5407 (x3247 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495))))
(assert (x5553 x5335))
(assert (x4435 29244376827073035548771643948814531551534385112760475998805679327281764368384))
(assert (x5553 x4690))
(assert (x5553 x2102))
(assert (= (x5051 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598)) (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598)))
(assert (= x3013 (x3238 (x3789 x4283 x3013 x2354 x4853 x4379))))
(assert (x5553 x4477))
(assert (x5553 x4492))
(assert (x5553 x708))
(assert (= (x5009 32 103) (x5051 (x5009 32 103))))
(assert (= (x5051 1461501637330902918203684832716283019655932542975) 0))
(assert (x5553 x3516))
(assert (x5553 x3435))
(assert (x1779 x5141))
(assert (x5553 x143))
(assert (= x63 (x3238 (x485 x286 x63 x2537 x401 x1054 x2048 x4601))))
(assert (x5553 x3955))
(assert (= x1855 (x894 (x269 x1855 x3349 x3751 x2410))))
(assert (= x3582 (x4160 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157))))
(assert (x5553 x3836))
(assert (x5553 x2091))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x1004 x3815 x2736 x1603 x5356)))
(assert (= (x5051 (x1228 x1855 x2935 x2740 x2157 x4851 x3650)) (x1228 x1855 x2935 x2740 x2157 x4851 x3650)))
(assert (=> (>= 10000 x3258) (= (x5051 x3258) 0)))
(assert (= (and x5397 (not x635)) x1631))
(assert (x5553 x2838))
(assert (x5553 x4792))
(assert (x5553 x439))
(assert (x5553 x3230))
(assert (= (x894 (x4266 64 x4123 36)) 64))
(assert (x5553 x3043))
(assert (= x3195 (x722 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473))))
(assert (x5553 x3236))
(assert (= (x3238 (x269 x693 x1125 x5557 x1035)) x1125))
(assert (x5553 x4150))
(assert (= (x3238 (x1228 x610 x2480 x264 x3876 x2348 x1299)) x2480))
(assert (x5553 x1213))
(assert (> (x4266 x2385 x4168 x1928) 10000))
(assert (x5553 x5467))
(assert (= x4179 (x3247 (x1228 x4005 x4730 x1798 x3345 x4179 x4679))))
(assert (= x530 (x894 (x3789 x530 x5021 x1861 x1857 x3779))))
(assert (x5553 x3406))
(assert (x5553 x961))
(assert (x5553 x5092))
(assert (x5553 x3497))
(assert (= (and x4665 x5041) x3869))
(assert (x5553 x1639))
(assert (=> (>= 10000 x5337) (= (x5051 x5337) 0)))
(assert (x5553 x4537))
(assert (x5553 x477))
(assert (x5553 x4140))
(assert (x5553 x1142))
(assert (x5553 x2029))
(assert (not (x4435 (x4266 64 x3511 6))))
(assert (= x3502 (=> (= x766 x5536) x1019)))
(assert (= x3052 (x722 (x269 x1098 x5454 x1584 x3052))))
(assert (x5553 x1570))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x4005 x99 x921 x2321)))
(assert (x5553 x2703))
(assert (x5553 x2921))
(assert (x5553 x447))
(assert (< (x4266 64 x2010 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5639))
(assert (=> (<= x2160 10000) (= (x5051 x2160) 0)))
(assert (x5553 x1696))
(assert (x5553 x1710))
(assert (=> (<= x1939 10000) (= 0 (x5051 x1939))))
(assert (x5553 x3133))
(assert (x5553 x786))
(assert (= x4650 (x3247 (x3789 x2358 x4298 x3642 x3410 x4650))))
(assert (=> (<= x1004 10000) (= 0 (x5051 x1004))))
(assert (x5553 x198))
(assert (x5553 x1602))
(assert (= (x722 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593)) x4692))
(assert (= (and x4787 x4) x35))
(assert (x5553 x4261))
(assert (x5553 x3889))
(assert (x5553 x4949))
(assert (= (x4160 (x1228 x286 x1219 x5302 x3589 x4897 x4255)) x5302))
(assert (=> (>= 10000 x610) (= (x5051 x610) 0)))
(assert (= (x5346 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) x2006))
(assert (= (x4266 64 x3858 10) (x5051 (x4266 64 x3858 10))))
(assert (x5553 x5088))
(assert (= (x722 (x3789 x5530 x2140 x4262 x114 x2333)) x114))
(assert (x5553 x1956))
(assert (=> (<= x5155 10000) (= (x5051 x5155) 0)))
(assert (x5553 x4301))
(assert (x5553 x2185))
(assert (= 32 (x894 (x5009 32 x1199))))
(assert (=> (>= 10000 x5004) (= 0 (x5051 x5004))))
(assert (x5553 x3064))
(assert (x5553 x4535))
(assert (x5553 x2926))
(assert (= x5366 (x4160 (x3789 x5501 x1456 x5366 x1537 x3951))))
(assert (x5553 x5598))
(assert (x5553 x2800))
(assert (=> (>= 10000 x4818) (= 0 (x5051 x4818))))
(assert (= x429 (x4160 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092))))
(assert (= x141 (x3247 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473))))
(assert (x5553 x472))
(assert (= (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445) (x5051 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445))))
(assert (x5553 x4254))
(assert (x5553 x1609))
(assert (x121 x3753))
(assert (= (x485 x2385 x210 x579 x4423 x5503 x462 x5517) (x5051 (x485 x2385 x210 x579 x4423 x5503 x462 x5517))))
(assert (x5553 x644))
(assert (x4435 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (= x1095 (x3247 (x1228 x2443 x1430 x5633 x4923 x1095 x31))))
(assert (= x403 (and (not x778) x3092)))
(assert (x5553 x3887))
(assert (= x1553 (x40 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593))))
(assert (x5553 x1377))
(assert (x5553 x948))
(assert (x5553 x156))
(assert (x4435 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (=> (>= 10000 x294) (= (x5051 x294) 0)))
(assert (x5553 x5324))
(assert (x5553 x3175))
(assert (x5553 x2130))
(assert (x5553 x2728))
(assert (x5553 x2798))
(assert (= (x5051 (+ 2 x5606)) (x5051 x5606)))
(assert (= (x894 (x1228 x2358 x2475 x383 x2464 x3210 x5595)) x2358))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x2928 2)))
(assert (x5553 x1823))
(assert (x5553 x4577))
(assert (not (x4435 (x5009 32 103))))
(assert (x5553 x212))
(assert (=> (>= 10000 x1858) (= 0 (x5051 x1858))))
(assert (x5553 x1800))
(assert (=> (>= 10000 x4176) (= (x5051 x4176) 0)))
(assert (x5553 x4202))
(assert (=> (<= x30 10000) (= 0 (x5051 x30))))
(assert (= (x4266 64 x4008 36) (x5051 (x4266 64 x4008 36))))
(assert (= (x5051 3812630263) 0))
(assert (= (x5051 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736)) (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736)))
(assert (= x1076 (and (not x1551) x2677)))
(assert (=> (>= 10000 x177) (= 0 (x5051 x177))))
(assert (> (x3789 x3137 x130 x1576 x2450 x5371) 10000))
(assert (x5553 x3983))
(assert (x5553 x3524))
(assert (= (x3789 x5501 x1456 x5366 x1537 x3951) (x5051 (x3789 x5501 x1456 x5366 x1537 x3951))))
(assert (=> (>= 10000 x3210) (= 0 (x5051 x3210))))
(assert (=> (<= x2755 10000) (= (x5051 x2755) 0)))
(assert (= (x3247 (x1228 x1098 x3372 x3272 x4492 x1282 x3321)) x1282))
(assert (x5553 x2992))
(assert (= (x5009 x530 x2144) (x5051 (x5009 x530 x2144))))
(assert (=> (<= x819 10000) (= (x5051 x819) 0)))
(assert (< (x4266 64 x4836 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x4435 (x269 x2434 x3305 x5562 x1976))))
(assert (x111 x1820))
(assert (= (x4160 (x4266 64 x5653 11)) 11))
(assert (= (x5051 (x5009 x2358 x5413)) (x5009 x2358 x5413)))
(assert (= (x3238 (x4266 x693 x2462 x807)) x2462))
(assert (x5553 x3489))
(assert (= (x894 (x4266 x5501 x5370 x5056)) x5501))
(assert (x5553 x114))
(assert (x121 x2648))
(assert (x5553 x3467))
(assert (x5553 x3974))
(assert (x5553 x5617))
(assert (x5553 x4522))
(assert (x5553 x1489))
(assert (x5553 x4439))
(assert (=> (>= 10000 x2030) (= 0 (x5051 x2030))))
(assert (x5553 x4042))
(assert (x5553 x4957))
(assert (x5553 x1146))
(assert (= (x40 (x1228 x693 x923 x975 x3805 x3677 x841)) x841))
(assert (= (x3238 (x4266 x1855 x5144 x3036)) x5144))
(assert (x5553 x3917))
(assert (x5553 x4608))
(assert (= (x102 0) (x5051 (x102 0))))
(assert (= x3525 (x894 (x269 x3525 x4566 x5026 x1254))))
(assert (x5553 x2481))
(assert (= (and x4253 (not x3774)) x2143))
(assert (= (x4160 (x3789 x5530 x2140 x4262 x114 x2333)) x4262))
(assert (=> (>= 10000 x225) (= (x5051 x225) 0)))
(assert (x5553 x1288))
(assert (< (x3789 x1966 x2269 x3334 x1405 x4054) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x973))
(assert (= (x3238 (x269 x530 x3934 x3802 x4017)) x3934))
(assert (=> (<= x1861 10000) (= 0 (x5051 x1861))))
(assert (= x4587 (and x3629 x908)))
(assert (x5553 x5027))
(assert (x5553 x5503))
(assert (= (x894 (x269 x530 x3934 x3802 x4017)) x530))
(assert (=> (>= 10000 x5402) (= (x5051 x5402) 0)))
(assert (x5553 x3999))
(assert (< 10000 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)))
(assert (= x4859 (x40 (x1228 x530 x30 x2472 x1987 x170 x4859))))
(assert (x5553 x1719))
(assert (=> (>= 10000 x31) (= (x5051 x31) 0)))
(assert (x5553 x3189))
(assert (x5553 x4340))
(assert (x5553 x3577))
(assert (=> (<= x3066 10000) (= 0 (x5051 x3066))))
(assert (= (and x3835 x1876) x2653))
(assert (x5553 x3061))
(assert (= x207 (x3238 (x269 x2358 x207 x1529 x4721))))
(assert (x5553 x3675))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x2829 (ite (= x3525 0) x3645 (ite (<= x3525 32) x799 (ite (<= x3525 64) x1267 (ite (>= 96 x3525) x149 (ite (<= x3525 128) x745 (ite (<= x3525 160) x2422 (ite (<= x3525 192) x615 (ite (<= x3525 224) x3015 x3278)))))))))))
(assert (= (x3247 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)) x1969))
(assert (=> (<= x3013 10000) (= (x5051 x3013) 0)))
(assert (x5553 x238))
(assert (x5553 x5452))
(assert (x5553 x2932))
(assert (x5553 x2476))
(assert (x5553 x889))
(assert (= x1714 (x4160 (x4266 x4005 x4465 x1714))))
(assert (= x5440 (x722 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x610 x5215 x1472 x297)))
(assert (x5553 x148))
(assert (x5553 x723))
(assert (x111 x3965))
(assert (= x602 (x3238 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495))))
(assert (= x827 (=> (and (= x4410 (not (> x1746 612))) (= (x2014 x1940) x2647)) (and x4410 x4137))))
(assert (= (or x2654 x650 x1744) x3938))
(assert (= (x3238 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024)) x211))
(assert (= x2140 (x3238 (x3789 x5530 x2140 x4262 x114 x2333))))
(assert (x5553 x1450))
(assert (= (x4160 (x1228 x2385 x4180 x4698 x1668 x33 x3108)) x4698))
(assert (= x975 (x4160 (x1228 x693 x923 x975 x3805 x3677 x841))))
(assert (= x1355 (and (not x4749) x1690)))
(assert (> (x4266 64 x4443 36) 10000))
(assert (= x3026 (x3247 (x3789 x693 x2627 x5180 x3492 x3026))))
(assert (x5553 x3193))
(assert (= x499 (and x3931 (not x2933))))
(assert (x5553 x1798))
(assert (x5553 x3526))
(assert (x5553 x5551))
(assert (=> (>= 10000 x2076) (= (x5051 x2076) 0)))
(assert (x5553 x3016))
(assert (x5553 x3428))
(assert (x5553 x3613))
(assert (x5553 x3260))
(assert (=> (<= x4956 10000) (= (x5051 x4956) 0)))
(assert (= x2969 (or x2759 x5345)))
(assert (= (or (and (not x4361) x4067) x931) x5640))
(assert (x5553 x1850))
(assert (< 10000 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)))
(assert (x5553 x5631))
(assert (= (x3238 (x4266 x4283 x1477 x242)) x1477))
(assert (< 10000 (x5009 32 x4931)))
(assert (x5553 x2510))
(assert (x5553 x2232))
(assert (x5553 x3713))
(assert (x5553 x1054))
(assert (= (x894 (x1228 x5501 x1182 x866 x2425 x4330 x4688)) x5501))
(assert (< (x4266 64 x1707 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1523 (x40 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273))))
(assert (< (x4266 64 x2928 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3287))
(assert (x5553 x116))
(assert (x5553 x2220))
(assert (x5553 x3958))
(assert (x5553 x2690))
(assert (= (x5009 x2443 x1792) (x5051 (x5009 x2443 x1792))))
(assert (> (x269 x693 x1125 x5557 x1035) 10000))
(assert (=> (>= 10000 x4344) (= (x5051 x4344) 0)))
(assert (x1779 x3023))
(assert (< 10000 (x102 0)))
(assert (x5553 x1286))
(assert (x5553 x1287))
(assert (< 10000 (x4266 64 x3702 3)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x760 11)))
(assert (=> (<= x3712 10000) (= (x5051 x3712) 0)))
(assert (x5553 x3320))
(assert (= (x3247 (x3789 x3137 x130 x1576 x2450 x5371)) x5371))
(assert (x5553 x4270))
(assert (=> (>= 10000 x2472) (= 0 (x5051 x2472))))
(assert (=> (<= x3372 10000) (= (x5051 x3372) 0)))
(assert (x5553 x610))
(assert (x5553 x5191))
(assert (= x4641 (=> (and (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1550) (= 1 x1550)) (= false x2401) x3339 (= (x4395 (- x5559 (mod (ite (> 32 x1981) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1550) (= (div (+ x1981 31) 32) x2133) (>= x1376 196) (<= x1463 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (+ 31 x3798) x4352) (= x1463 (x4395 (- x3984 128))) (<= 1 x1062) (<= x1376 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x5613 18446744073709551615) (= (+ x3798 32) x4830) (> x1376 x4352) (= x4684 x4649) (= (+ x4830 x4501) x1630) (= x3702 x405) (= x1981 (ite (> x5559 0) x3322 (x2436 127 x3322))) (= x3130 128) (= x5613 (x4380 132)) (= x5278 164) (= x1238 x4920) (= x5197 (* 32 x2133)) (= x5542 x5364) (= x3215 (+ x5613 164)) (= x3798 (+ 4 x5364)) (= x2553 (+ 160 x5197)) (= x4931 (x4266 64 x3702 3)) (<= x2205 127) (<= x2205 127) (= x1399 128) (not (> x1630 x1376)) (= x4501 (x4380 x3798)) (= x3924 (x3845 x4931)) (= x1062 (x4762 x2928)) (= x3322 (div x3924 2)) (not (> x3215 x1376)) (<= 1 x2608) (>= 18446744073709551615 x4501) (= x3339 (= (x2345 132) x985)) (= (x4762 x1956) x2608) (= false x430) (= x4205 51607134309459761954548520284799282329936326410793501951915747293203005440) (= x2098 1914215) (<= 196 x1463) (= x5559 (x2436 1 x3924)) (= x1376 x1463) (= (= 0 x1981) x1887)) (and (=> (and (= x3150 (> x1981 31)) (not x1887)) (and (=> (and (and (= (x5009 32 x4931) x2365) (= (x2014 x2365) x5308) (= (+ 1 x2365) x1025) (= (+ 160 x1981) x1510) (= x2255 (< 192 x1510))) x3150) (and (=> x2255 x1709) (=> (not x2255) x683))) (=> (and (not x3150) (and (= (* x3140 256) x1842) (= (div x396 256) x3140) (= (x3845 x4931) x396))) x3698))) (=> x1887 x3698)))))
(assert (x5553 x4489))
(assert (x5553 x1841))
(assert (x5553 x1300))
(assert (=> (<= x1127 10000) (= (x5051 x1127) 0)))
(assert (x5553 x886))
(assert (x5553 x1068))
(assert (> (x4266 64 x4836 11) 10000))
(assert (= x1861 (x4160 (x3789 x530 x5021 x1861 x1857 x3779))))
(assert (= x4803 (and x3092 x778)))
(assert (= (and x1230 x3292) x3732))
(assert (x5553 x2657))
(assert (= (or x2514 x1982) x2024))
(assert (x5553 x590))
(assert (=> (<= x1680 10000) (= (x5051 x1680) 0)))
(assert (x5553 x5480))
(assert (x1779 x5574))
(assert (x5553 x140))
(assert (x5553 x2043))
(assert (x5553 x2219))
(assert (x5553 x3029))
(assert (x5553 x2061))
(assert (x5553 x1763))
(assert (=> (>= 10000 x5370) (= 0 (x5051 x5370))))
(assert (x5553 x5080))
(assert (x5553 x5626))
(assert (= x2389 (and x4146 (not x361))))
(assert (= (x5051 (x5009 x5501 x4243)) (x5009 x5501 x4243)))
(assert (x5553 x5081))
(assert (= (x5051 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x5553 x4530))
(assert (=> (<= x207 10000) (= 0 (x5051 x207))))
(assert (= (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156) (x5051 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156))))
(assert (= (and x1364 (not x576)) x3851))
(assert (= 0 (x5051 51607134309459761954548520284799282329936326410793501951915747293203005440)))
(assert (< (x4266 64 x999 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3704))
(assert (x5553 x568))
(assert (x5553 x1335))
(assert (x5553 x2272))
(assert (x5553 x1109))
(assert (x5553 x3667))
(assert (x5553 x1296))
(assert (= (=> (and (= (x2742 (+ x1244 x3262)) x3962) (= x2643 (x2742 (+ x713 31))) (= x5429 (x4014 x796)) (= x4119 (x2742 (+ x3962 32))) (= x2847 (x2742 (+ x3262 x713))) (= (x4395 (- x3962 x5362)) x3710) (= x1244 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2643)) (= x1605 (x2742 (+ 32 x222))) (= (> x5429 0) x877) (= (x2742 (+ 32 x1605)) x448)) (and (=> (not x877) x3200) (=> (and (and (= x5513 (x4494 x4127)) (= x4372 (< 32 x5429))) x877) (and (=> (not x4372) x3200) (=> (and x4372 (and (= x5220 (x2742 (+ 32 x4119))) (= x5044 (> x5429 64)) (= x4537 (x494 x4739)) (= (x2742 (+ 32 x4127)) x4739))) (and (=> (not x5044) x3200) (=> (and x5044 (and (= x737 (x2742 (+ x4127 64))) (= (x2742 (+ 64 x4119)) x823) (= (x1048 x737) x1104) (= x1474 (> x5429 96)))) (and (=> (not x1474) x3200) (=> x1474 x3746))))))))) x2288))
(assert (x5553 x347))
(assert (x5553 x2781))
(assert (x5553 x3715))
(assert (=> (>= 10000 x3030) (= (x5051 x3030) 0)))
(assert (x5553 x2841))
(assert (=> (>= 10000 x1697) (= (x5051 x1697) 0)))
(assert (x5553 x761))
(assert (x5553 x999))
(assert (= x1004 (x894 (x1228 x1004 x3020 x2102 x388 x3489 x1127))))
(assert (x111 x1083))
(assert (=> (<= x1112 10000) (= 0 (x5051 x1112))))
(assert (x5553 x4856))
(assert (x5553 x5336))
(assert (= x2076 (x3238 (x5009 x4005 x2076))))
(assert (x5553 x1706))
(assert (x5553 x5454))
(assert (< 10000 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324)))
(assert (x5553 x4517))
(assert (x5553 x1879))
(assert (x5553 x760))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x5553 x2619))
(assert (= x2194 (x722 (x269 x5501 x784 x3627 x2194))))
(assert (= (x3238 (x1228 x4283 x5337 x2668 x338 x5234 x3122)) x5337))
(assert (x5553 x1161))
(assert (x5553 x4784))
(assert (x5553 x5050))
(assert (x5553 x4445))
(assert (x5553 x3370))
(assert (x5553 x5601))
(assert (= x2730 (=> (= x402 (+ x598 x607)) x1938)))
(assert (=> (<= x4002 10000) (= (x5051 x4002) 0)))
(assert (= (=> (and (= x4459 (not (< 32 x1794))) (= (x2587 x2993) x757)) (and x4459 (=> (= 32 x993) x643))) x2746))
(assert (= (=> (= x4902 (> (ite (= x3883 0) x3883 1) 0)) (and (=> (and (not x4902) (and (or x2855 (not x2855)) (= (= x1332 0) x2855))) x2187) (=> x4902 x3338))) x183))
(assert (=> (>= 10000 x5366) (= (x5051 x5366) 0)))
(assert (= (x4160 (x4266 64 x3511 6)) 6))
(assert (not (x4435 (x4266 64 x4037 0))))
(assert (x5553 x2218))
(assert (x5553 x4130))
(assert (= (x722 (x1228 x3525 x3124 x2682 x4476 x5480 x2515)) x4476))
(assert (x5553 x735))
(assert (= x33 (x3247 (x1228 x2385 x4180 x4698 x1668 x33 x3108))))
(assert (x5553 x1415))
(assert (< (x4266 x693 x2462 x807) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x269 x1098 x5454 x1584 x3052)))
(assert (x5553 x588))
(assert (x5553 x2662))
(assert (= (and x4817 x1158) x1797))
(assert (= x2382 (x3238 (x4266 64 x2382 6))))
(assert (=> (>= 10000 x286) (= (x5051 x286) 0)))
(assert (= x1966 (x894 (x5009 x1966 x4837))))
(assert (= (x5051 (x4266 64 1 x4794)) (x4266 64 1 x4794)))
(assert (x5553 x221))
(assert (= (x4160 (x1228 x4283 x5337 x2668 x338 x5234 x3122)) x2668))
(assert (< (x4266 64 x2781 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5590))
(assert (x5553 x985))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384)))
(assert (= x5405 (x1514 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405))))
(assert (x5553 x1159))
(assert (x5553 x401))
(assert (x5553 x4166))
(assert (= (x5051 (x5009 32 x434)) (x5009 32 x434)))
(assert (= x5390 (=> (= (> (ite (= x2440 0) x2440 1) 0) x2517) (and (=> x2517 x2248) (=> (and (and (= x4607 (= 0 x3634)) (or x4607 (not x4607))) (not x2517)) x5182)))))
(assert (x5553 x5542))
(assert (< (x4266 64 x5456 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x2486))
(assert (x5553 x1378))
(assert (= (x40 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336)) x4275))
(assert (x5553 x3379))
(assert (=> (<= x194 10000) (= 0 (x5051 x194))))
(assert (x5553 x1147))
(assert (x5553 x4551))
(assert (x5553 x1562))
(assert (x5553 x866))
(assert (x5553 x1391))
(assert (= x3748 (and x4391 (not x1743))))
(assert (x111 x1870))
(assert (x5553 x3264))
(assert (x5553 x3910))
(assert (x5553 x3984))
(assert (=> (<= x2541 10000) (= (x5051 x2541) 0)))
(assert (= (=> (and (= x469 (x2587 x1796)) (= x785 (not (> x985 32)))) (and (=> (= x518 32) x4293) x785)) x5624))
(assert (x5553 x511))
(assert (= (x5051 (x4266 x1098 x4250 x4165)) (x4266 x1098 x4250 x4165)))
(assert (x5553 x3181))
(assert (x5553 x2760))
(assert (= (x3238 (x4266 64 x1464 10)) x1464))
(assert (> (x4266 x3525 x852 x5119) 10000))
(assert (x5553 x3286))
(assert (=> (>= 10000 x921) (= (x5051 x921) 0)))
(assert (= (x3238 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253)) x3571))
(assert (x5553 x720))
(assert (x5553 x4965))
(assert (=> (>= 10000 x2269) (= 0 (x5051 x2269))))
(assert (x5553 x2707))
(assert (=> (<= x4353 10000) (= 0 (x5051 x4353))))
(assert (x5553 x4728))
(assert (= x1559 (x40 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598))))
(assert (= (x894 (x4266 64 x5653 11)) 64))
(assert (= (x3238 (x4266 64 x3702 3)) x3702))
(assert (x5553 x3020))
(assert (x5553 x794))
(assert (x5553 x3361))
(assert (= (x5051 (x5009 x693 x5222)) (x5009 x693 x5222)))
(assert (=> (>= 10000 x5598) (= (x5051 x5598) 0)))
(assert (= x2331 (and (not x5565) x1660)))
(assert (x5553 x1252))
(assert (x5553 x940))
(assert (> (x269 x1855 x3349 x3751 x2410) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)))
(assert (= x85 (x894 (x3789 x85 x140 x3477 x626 x2469))))
(assert (x5553 x1574))
(assert (= (and x834 (not x3766)) x428))
(assert (x5553 x2261))
(assert (x5553 x4830))
(assert (x5553 x107))
(assert (x5553 x5058))
(assert (x4435 1722637450))
(assert (= x39 (x722 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366))))
(assert (= x1281 (or x741 (and x3629 (not x908)) (and x4587 (not x4726)) (and (not x4750) x1906) (and x409 (not x2600)))))
(assert (x5553 x784))
(assert (x5553 x1436))
(assert (x5553 x681))
(assert (x5553 x2453))
(assert (x5553 x1813))
(assert (= 36 (x4160 (x4266 64 x2010 36))))
(assert (x5553 x2048))
(assert (= x2836 (x3238 (x4266 64 x2836 10))))
(assert (x5553 x5032))
(assert (x5553 x4456))
(assert (=> (>= 10000 x114) (= (x5051 x114) 0)))
(assert (x5553 x1668))
(assert (x5553 x1334))
(assert (x5553 x1523))
(assert (= (=> (and (= x3960 (not (< 32 x5453))) (= x4470 (x2839 x2864))) (and x3960 (=> (= 32 x3382) x1737))) x1599))
(assert (x5553 x4529))
(assert (= x1804 (and x5113 (not x2517))))
(assert (=> (>= 10000 x2140) (= 0 (x5051 x2140))))
(assert (= x3169 (x4160 (x3789 x610 x2516 x3169 x3223 x3267))))
(assert (x5553 x2425))
(assert (not (x4435 (x4266 64 x3073 12))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x929 2)))
(assert (x5553 x981))
(assert (= x5630 (x3238 (x4266 64 x5630 6))))
(assert (=> (<= x5202 10000) (= 0 (x5051 x5202))))
(assert (= (x40 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535)) x3337))
(assert (x5553 x283))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x1004 x3020 x2102 x388 x3489 x1127)))
(assert (= (x894 (x1228 x2434 x1862 x1112 x541 x3398 x3066)) x2434))
(assert (not (x4435 (x5009 x3525 x53))))
(assert (x5553 x1818))
(assert (=> (<= x852 10000) (= (x5051 x852) 0)))
(assert (x5553 x4453))
(assert (= 0 (x5051 65535)))
(assert (x5553 x3325))
(assert (x5553 x2638))
(assert (x5553 x4452))
(assert (x5553 x4730))
(assert (= (x3238 (x5009 x2443 x1792)) x1792))
(assert (not (x4435 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28))))
(assert (= (x4160 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)) x3))
(assert (x5553 x5415))
(assert (< 10000 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405)))
(assert (x5553 x1842))
(assert (x5553 x3998))
(assert (= (x5051 (x1228 x693 x923 x975 x3805 x3677 x841)) (x1228 x693 x923 x975 x3805 x3677 x841)))
(assert (x5553 x1292))
(assert (= x987 (and x5286 x1635)))
(assert (x5553 x3550))
(assert (x5553 x2493))
(assert (not (x4435 (x3789 x693 x2627 x5180 x3492 x3026))))
(assert (= (x4160 (x4266 64 x5202 11)) 11))
(assert (x5553 x3076))
(assert (= (=> (= x684 x707) x1210) x1190))
(assert (x5553 x5574))
(assert (> (x1228 x4005 x4730 x1798 x3345 x4179 x4679) 10000))
(assert (= (and x853 x270) x5537))
(assert (x5553 x4647))
(assert (x5553 x4666))
(assert (x5553 x3674))
(assert (x5553 x4897))
(assert (x5553 x3091))
(assert (= x1065 (x5346 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253))))
(assert (x5553 x4295))
(assert (x5553 x2156))
(assert (< (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1966 (x894 (x269 x1966 x1684 x225 x724))))
(assert (=> (<= x5161 10000) (= 0 (x5051 x5161))))
(assert (= (x4160 (x4266 64 x1707 7)) 7))
(assert (x5553 x1947))
(assert (x5553 x3637))
(assert (x5553 x5130))
(assert (= x5049 (or x787 x426 x480)))
(assert (x5553 x4429))
(assert (= 32 (x894 (x5009 32 103))))
(assert (=> (<= x1936 10000) (= (x5051 x1936) 0)))
(assert (x5553 x1106))
(assert (= (x5009 32 x3452) (x5051 (x5009 32 x3452))))
(assert (=> (>= 10000 x4330) (= (x5051 x4330) 0)))
(assert (x5553 x3298))
(assert (= (x5051 3313512704) 0))
(assert (= (x3238 (x4266 64 x5653 11)) x5653))
(assert (x5553 x3982))
(assert (= (and x2017 x947) x3393))
(assert (= 0 (x5051 34591783479076665122502074927488338969190252781858077677016911635275368785765)))
(assert (x5553 x2572))
(assert (= x5456 (x3238 (x4266 64 x5456 100))))
(assert (=> (<= x1278 10000) (= 0 (x5051 x1278))))
(assert (=> (<= x1477 10000) (= (x5051 x1477) 0)))
(assert (x5553 x299))
(assert (=> (>= 10000 x336) (= 0 (x5051 x336))))
(assert (= (and x5343 x3792) x420))
(assert (x5553 x4562))
(assert (x5553 x291))
(assert (x5553 x3525))
(assert (=> (>= 10000 x4283) (= 0 (x5051 x4283))))
(assert (= x853 (and x1259 x3706)))
(assert (=> (>= 10000 x769) (= (x5051 x769) 0)))
(assert (x5553 x4175))
(assert (not (x4435 (x4266 64 x760 11))))
(assert (x5553 x3627))
(assert (x5553 x4776))
(assert (= (and x2979 x1934) x3455))
(assert (x5553 x5034))
(assert (= x3463 (x5346 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914))))
(assert (not (x4435 (x4266 x3525 x852 x5119))))
(assert (= x1099 (and (not x2956) x770)))
(assert (= 6 (x4160 (x4266 64 x5630 6))))
(assert (x5553 x5312))
(assert (= x4376 (=> (= (not (< 128 x4475)) x3384) (and x3384 x1902))))
(assert (=> (<= x541 10000) (= (x5051 x541) 0)))
(assert (=> (<= x2069 10000) (= 0 (x5051 x2069))))
(assert (x5553 x2034))
(assert (x5553 x3349))
(assert (x5553 x1350))
(assert (not (x4435 (x4266 64 x4736 4))))
(assert (x5553 x871))
(assert (= x1420 (x3247 (x1228 x85 x4919 x629 x2130 x1420 x2994))))
(assert (x5553 x737))
(assert (x5553 x3183))
(assert (= (and (not x3416) x1634) x521))
(assert (not (x4435 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142))))
(assert (=> (<= x3102 10000) (= 0 (x5051 x3102))))
(assert (x5553 x2552))
(assert (x5553 x4213))
(assert (= x3085 (=> (and (= x3192 x2085) (= x2903 x5163) (= x1359 x3356) (= x84 x2107) (= x1479 x2020) (= x4562 x5470)) x1735)))
(assert (x5553 x2338))
(assert (= (x3238 (x4266 64 x5202 11)) x5202))
(assert (= 0 (x5051 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x5069 (or (and (not x5268) x185) (and x4789 (not x2910)) (and x1483 (not x2805)))))
(assert (= x2557 (and x3099 x5253)))
(assert (= x1670 (or x3956 x5425)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x4005 x2076)))
(assert (x5553 x3839))
(assert (= x3503 (and (not x2362) x5435)))
(assert (= x3351 (=> (and (= 2 x4620) (= x3883 0) (>= 254 x4535) (= x5032 x1332) (>= x4535 3) (= x5195 (+ x4927 1)) (= x4396 (+ 1 x4927))) x2032)))
(assert (x5553 x4540))
(assert (x5553 x572))
(assert (=> (>= 10000 x2464) (= 0 (x5051 x2464))))
(assert (= (and x5113 x2517) x657))
(assert (x5553 x1476))
(assert (= (x3238 (x269 x2434 x3305 x5562 x1976)) x3305))
(assert (x5553 x4966))
(assert (x5553 x5171))
(assert (x1779 x4643))
(assert (x5553 x3051))
(assert (x5553 x3782))
(assert (x5553 x4060))
(assert (=> (<= x2781 10000) (= 0 (x5051 x2781))))
(assert (=> (<= x4923 10000) (= (x5051 x4923) 0)))
(assert (not (x4435 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736))))
(assert (x5553 x3169))
(assert (not (x4435 (x4266 x286 x2029 x1632))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x3137 x3579 x4653 x2811)))
(assert (x5553 x4588))
(assert (= (x4266 64 x4140 11) (x5051 (x4266 64 x4140 11))))
(assert (x5553 x2132))
(assert (= x1862 (x3238 (x1228 x2434 x1862 x1112 x541 x3398 x3066))))
(assert (x5553 x2819))
(assert (x5553 x3779))
(assert (< 10000 (x4266 64 x929 2)))
(assert (=> (>= 10000 x5530) (= (x5051 x5530) 0)))
(assert (= (x4266 64 x1680 36) (x5051 (x4266 64 x1680 36))))
(assert (x5553 x766))
(assert (x5553 x4287))
(assert (< 10000 (x5009 x1098 x5448)))
(assert (not (x4435 (x3789 x1855 x4793 x5161 x2447 x1968))))
(assert (x5553 x4179))
(assert (= (and (not x2680) x1877) x1569))
(assert (x5553 x2472))
(assert (x5553 x2135))
(assert (= (=> (= x4396 x707) x1210) x3338))
(assert (x5553 x3353))
(assert (x5553 x1484))
(assert (x5553 x3184))
(assert (x5553 x790))
(assert (x5553 x3372))
(assert (x3086 x1918))
(assert (x5553 x779))
(assert (= x3433 (x3238 (x3789 x2434 x3433 x4948 x1572 x2544))))
(assert (< 10000 (x269 x85 x3183 x729 x2972)))
(assert (x1779 x2270))
(assert (= x4789 (and x2406 x1664)))
(assert (= (x722 (x1228 x4283 x5337 x2668 x338 x5234 x3122)) x338))
(assert (< (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1202))
(assert (x5553 x5142))
(assert (x5553 x2579))
(assert (x5553 x1223))
(assert (= x2135 (x1514 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135))))
(assert (< (x5009 x85 x330) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x581))
(assert (= (x4266 64 x3073 12) (x5051 (x4266 64 x3073 12))))
(assert (= (x894 (x4266 x1004 x905 x573)) x1004))
(assert (= x3095 (and x4139 (not x326))))
(assert (not (x4435 (x4266 64 x1068 36))))
(assert (=> (<= x5154 10000) (= 0 (x5051 x5154))))
(assert (= (and x1388 (not x1485)) x3741))
(assert (x5553 x242))
(assert (= (and x2786 x3437) x1225))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x1098 x3372 x3272 x4492 x1282 x3321)))
(assert (= x53 (x3238 (x5009 x3525 x53))))
(assert (= (x894 (x4266 64 x1844 12)) 64))
(assert (= x4248 (x3238 (x4266 64 x4248 (ite (= 0 x1855) x3081 (ite (>= 32 x1855) x322 (ite (<= x1855 64) x5477 (ite (<= x1855 96) x3025 (ite (>= 128 x1855) x2729 (ite (>= 160 x1855) x4313 (ite (>= 192 x1855) x697 (ite (>= 224 x1855) x2883 x3375))))))))))))
(assert (x1779 x578))
(assert (= x1335 (x5346 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142))))
(assert (x5553 x4216))
(assert (x5553 x3791))
(assert (=> (>= 10000 x1576) (= 0 (x5051 x1576))))
(assert (x121 x3023))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x5613 x2030 x3675 x2352)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x610 x5418)))
(assert (= (x894 (x1228 x4283 x5337 x2668 x338 x5234 x3122)) x4283))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (= (x5051 (x269 x3137 x3579 x4653 x2811)) (x269 x3137 x3579 x4653 x2811)))
(assert (=> (>= 10000 x2533) (= 0 (x5051 x2533))))
(assert (not (x4435 (x485 x610 x907 x4924 x678 x1827 x3592 x4073))))
(assert (x121 x5574))
(assert (= 104 (x3238 (x5009 32 104))))
(assert (x5553 x662))
(assert (x5553 x3893))
(assert (x5553 x3058))
(assert (= (and (not x5041) x4665) x2427))
(assert (= (x894 (x269 x5530 x1647 x980 x2699)) x5530))
(assert (x5553 x3103))
(assert (x5553 x3022))
(assert (x5553 x5654))
(assert (=> (>= 10000 x5356) (= 0 (x5051 x5356))))
(assert (=> (<= x347 10000) (= (x5051 x347) 0)))
(assert (= (x3238 (x5009 x4283 x769)) x769))
(assert (< (x4266 x2434 x4068 x4292) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x4435 (x4266 64 x4836 11))))
(assert (x5553 x4409))
(assert (x5553 x2648))
(assert (x5553 x4434))
(assert (x5553 x2661))
(assert (= x4137 x5646))
(assert (= (x5051 (x4266 x530 x5126 x1849)) (x4266 x530 x5126 x1849)))
(assert (=> (>= 10000 x1676) (= (x5051 x1676) 0)))
(assert (= x3360 (and (not x5044) x2888)))
(assert (x5553 x4796))
(assert (x5553 x36))
(assert (=> (>= 10000 x2147) (= (x5051 x2147) 0)))
(assert (x5553 x2451))
(assert (=> (>= 10000 x210) (= (x5051 x210) 0)))
(assert (x5553 x1328))
(assert (x5553 x2978))
(assert (x5553 x4915))
(assert (x5553 x2216))
(assert (= x5013 (x3247 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092))))
(assert (x5553 x578))
(assert (< 10000 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126)))
(assert (= x1938 (=> (and (= (+ x2220 4) x2662) (= x4568 x2220) (= x5085 128) (or (= x3072 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x3072)) (= (* x4016 32) x417) (<= 196 x566) (= x794 (+ 31 x2662)) (>= x2036 1) (= 1914215 x971) (<= x495 1461501637330902918203684832716283019655932542975) (= 51607134309459761954548520284799282329936326410793501951915747293203005440 x2455) (= x4461 164) (= 128 x4251) (= x5599 (div x1205 2)) (= x1098 (x2858 132)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x566) (= x872 (+ 160 x417)) (not (< x566 x4077)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2372) (= x1205 (x3845 x3799)) (= (+ x191 x790) x4962) (= (div (+ x3003 31) 32) x4016) (= x4236 x2829) (>= 18446744073709551615 x1098) (<= x3955 127) (= (x4395 (- x402 128)) x2372) (<= x191 18446744073709551615) (= (x2436 1 x1205) x2835) (= (= (x550 132) x489) x4862) (>= 127 x3955) (= x2898 (= x3003 0)) (>= x3327 1) (= x4077 (+ x1098 164)) (= x5524 false) (= (x4762 x2928) x2036) (= (+ 32 x2662) x790) (not (< x566 x4962)) (= x495 x4684) (<= 196 x2372) (= x2372 x566) x4862 (= (x4762 x837) x3327) (< x794 x566) (= x3072 (x4395 (- x2835 (mod (ite (> 32 x3003) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3003 (ite (> x2835 0) x5599 (x2436 127 x5599))) (= x191 (x2858 x2662)) (<= 1 x495) (= x4657 false) (= (x4266 64 x1597 3) x3799) (= x1597 x2286)) (and (=> x2898 x2938) (=> (and (= (< 31 x3003) x457) (not x2898)) (and (=> (and (and (= x4772 (* 256 x4584)) (= (div x4259 256) x4584) (= x4259 (x3845 x3799))) (not x457)) x2938) (=> (and (and (= x2761 (< 192 x126)) (= (+ x3929 1) x3586) (= (x5009 32 x3799) x3929) (= x126 (+ x3003 160)) (= x746 (x2014 x3929))) x457) (and (=> (not x2761) x891) (=> x2761 x1755)))))))))
(assert (= (x4266 64 x1068 36) (x5051 (x4266 64 x1068 36))))
(assert (x5553 x2352))
(assert (x1779 x5336))
(assert (= (and x4139 x326) x1026))
(assert (= (x722 (x1228 x1098 x3372 x3272 x4492 x1282 x3321)) x4492))
(assert (= (x3238 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850)) x3906))
(assert (= (x4266 64 x1597 3) (x5051 (x4266 64 x1597 3))))
(assert (= x3329 (or x2881 x215)))
(assert (x5553 x1922))
(assert (x5553 x5204))
(assert (x5553 x817))
(assert (x5553 x287))
(assert (x5553 x2325))
(assert (= (x894 (x4266 x5530 x2942 x2837)) x5530))
(assert (= x4250 (x3238 (x4266 x1098 x4250 x4165))))
(assert (x5553 x1095))
(assert (x5553 x2071))
(assert (x5553 x4859))
(assert (x5553 x4746))
(assert (= (x5051 (x4266 64 x4927 100)) (x4266 64 x4927 100)))
(assert (x5553 x4396))
(assert (= (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (= (and x3098 (not x3332)) x3429))
(assert (x5553 x2430))
(assert (=> (>= 10000 x5517) (= (x5051 x5517) 0)))
(assert (= (x5051 x2078) (x5051 (+ x2078 2))))
(assert (not (x4435 (x1228 x2434 x1862 x1112 x541 x3398 x3066))))
(assert (= x744 (and x5535 x5049)))
(assert (< 10000 (x4266 64 x2781 3)))
(assert (x5553 x823))
(assert (= (x1228 x1966 x2083 x4104 x1865 x2530 x2341) (x5051 (x1228 x1966 x2083 x4104 x1865 x2530 x2341))))
(assert (= (=> (and (= x4083 x2482) (= x1370 x2661) (= x4847 x2934) (= x748 x5252) (= x5608 x4131) (= x1338 x2714) (= x2777 x4324) (= x4132 x4701) (= x2703 x2132) (= x511 x1590) (= x2593 x2305) (= x3705 x1908) (= x425 x644)) x5393) x2248))
(assert (x5553 x5166))
(assert (x5553 x2951))
(assert (=> (<= x3804 10000) (= 0 (x5051 x3804))))
(assert (= (x1228 x530 x30 x2472 x1987 x170 x4859) (x5051 (x1228 x530 x30 x2472 x1987 x170 x4859))))
(assert (x5553 x3641))
(assert (< 10000 (x5009 32 x3799)))
(assert (not (x4435 (x4266 64 x1680 36))))
(assert (x5553 x3606))
(assert (x5553 x1506))
(assert (= x5234 (x3247 (x1228 x4283 x5337 x2668 x338 x5234 x3122))))
(assert (x5553 x3916))
(assert (x5553 x4873))
(assert (x5553 x2776))
(assert (x5553 x2177))
(assert (not (x4435 (x4266 64 1 x4794))))
(assert (x5553 x4884))
(assert (= (and (not x1614) x2528) x4388))
(assert (=> (<= x3108 10000) (= 0 (x5051 x3108))))
(assert (=> (<= x3137 10000) (= 0 (x5051 x3137))))
(assert (x5553 x1643))
(assert (x5553 x5597))
(assert (= (and (not x3558) x428) x2936))
(assert (not (x4435 (x269 x693 x1125 x5557 x1035))))
(assert (= (x5051 1341992515) 0))
(assert (x5553 x1520))
(assert (x5553 x3514))
(assert (x5553 x4764))
(assert (x5553 x3072))
(assert (= (x3238 (x4266 64 x2755 36)) x2755))
(assert (not (x4435 (x4266 x5501 x5370 x5056))))
(assert (x5553 x1935))
(assert (= (and x32 (not x1321)) x979))
(assert (= x829 (and x5585 x4704)))
(assert (= (or x1099 x4981) x3098))
(assert (=> (>= 10000 x3334) (= 0 (x5051 x3334))))
(assert (> (x4266 x85 x2505 x2057) 10000))
(assert (=> (<= x1472 10000) (= 0 (x5051 x1472))))
(assert (= (x3247 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126)) x4299))
(assert (x5553 x1645))
(assert (= (and x4444 x595) x2583))
(assert (x5553 x727))
(assert (x5553 x3987))
(assert (x5553 x2927))
(assert (< 10000 (x4266 64 x961 100)))
(assert (= x4005 (x894 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253))))
(assert (= (=> (and (= x1764 (x1945 x4171)) (= x3684 (not (< 32 x5575)))) (and (=> (= 32 x607) x2730) x3684)) x3989))
(assert (= (or x977 x136) x1593))
(assert (< (x5009 x2358 x5413) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x2467 x3646 x1601 x3567 x979) x215))
(assert (= (x4266 x5613 x3800 x4581) (x5051 (x4266 x5613 x3800 x4581))))
(assert (x5553 x5177))
(assert (x5553 x1463))
(assert (= (and x3288 (not x2296)) x1139))
(assert (x5553 x2321))
(assert (= (=> (= (+ 292 x4454) x3941) x4997) x1854))
(assert (= (x40 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157)) x4458))
(assert (x5553 x370))
(assert (= (x722 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)) x1009))
(assert (x5553 x5232))
(assert (= x2888 (and x2340 x4372)))
(assert (= x135 (x4160 (x4266 x2358 x2552 x135))))
(assert (x5553 x962))
(assert (= (and x5209 x1352) x2320))
(assert (= (x5051 1722637450) 0))
(assert (=> (<= x498 10000) (= (x5051 x498) 0)))
(assert (= (x3247 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134)) x2741))
(assert (x5553 x3478))
(assert (x5553 x4218))
(assert (= x5476 (not (and (= x5456 (+ x5630 1)) (= (+ 1 x4123) x459) (= (+ x2351 x5488) x5257) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5257) (= (x1217 x1956) x2351) (= x3790 (- x3127 x5488)) (= (x2621 x2672) x5488) (= x5257 x2274) (= (x4266 64 x4123 36) x930) (= (x4266 64 x5630 36) x2672) (= x641 (x4266 64 x5456 100)) (= x3563 (x1701 x641)) (= (x3390 x1956) x646) (< (+ x5488 x646) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ 1 x5456) x4123) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2351 x5488)) (= (x2621 x930) x3187) (>= x5630 1) (= (x3390 x4684) x3127) (>= x1972 x5488) (= (+ x4123 1) x5353) (<= 0 x5257) (= x2523 (+ x5456 1)) (<= x5630 252) (= (x3390 x4684) x1972) (= (+ 1 x5630) x5039)))))
(assert (x5553 x1787))
(assert (x5553 x2189))
(assert (x5553 x3427))
(assert (= x820 (=> (and (= x912 (not (> x2052 x3266))) (= x3266 (x2742 (+ x3530 32))) (= (x2014 x5422) x4340)) (and x912 x1944))))
(assert (= (or x1907 x2458) x4012))
(assert (x5553 x1279))
(assert (= (x3247 (x3789 x286 x2817 x3102 x4130 x3436)) x3436))
(assert (= (x3238 (x5009 32 x3452)) x3452))
(assert (= (x5051 (x3789 x530 x5021 x1861 x1857 x3779)) (x3789 x530 x5021 x1861 x1857 x3779)))
(assert (x5553 x4912))
(assert (x5553 x561))
(assert (= x4443 (x3238 (x4266 64 x4443 36))))
(assert (> (x4266 x5501 x5370 x5056) 10000))
(assert (x5553 x4742))
(assert (x5553 x2699))
(assert (=> (<= x980 10000) (= (x5051 x980) 0)))
(assert (x1779 1))
(assert (x4435 310283853))
(assert (=> (>= 10000 x212) (= (x5051 x212) 0)))
(assert (x5553 x4636))
(assert (x5553 x4650))
(assert (x5553 x4191))
(assert (x5553 x1881))
(assert (x3086 x2640))
(assert (x5553 x5538))
(assert (= (x5051 (x4266 64 x5061 7)) (x4266 64 x5061 7)))
(assert (> (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142) 10000))
(assert (=> (<= x5180 10000) (= 0 (x5051 x5180))))
(assert (= (x3789 x2443 x4170 x4860 x1625 x4474) (x5051 (x3789 x2443 x4170 x4860 x1625 x4474))))
(assert (= (=> (and (= x5342 x2132) (= x5148 x3705) (= x5252 x4337) (= x87 x4083) (= x2593 x3498) (= x4847 x2781) (= x4577 x2777) (= x2714 x2798) (= x1013 x1370) (= x644 x5191) (= x5608 x1322) (= x4649 x511) (= x3427 x4701)) x5393) x1343))
(assert (=> (>= 10000 x3977) (= (x5051 x3977) 0)))
(assert (=> (>= 10000 x5334) (= 0 (x5051 x5334))))
(assert (not (x4435 (x4266 64 x3858 10))))
(assert (not (x4435 (x5009 x85 x330))))
(assert (x5553 x4923))
(assert (= (=> (and (= (x542 x2201) x3422) (= (not (> x489 32)) x2075)) (and (=> (= x1696 32) x3518) x2075)) x4616))
(assert (x5553 x387))
(assert (=> (>= 10000 x5557) (= 0 (x5051 x5557))))
(assert (x5553 x2133))
(assert (x5553 x3115))
(assert (x5553 x991))
(assert (=> (>= 10000 x1914) (= (x5051 x1914) 0)))
(assert (= (x4160 (x3789 x2358 x4298 x3642 x3410 x4650)) x3642))
(assert (=> (>= 10000 x3477) (= 0 (x5051 x3477))))
(assert (= (x894 (x4266 64 x5061 7)) 64))
(assert (x5553 x431))
(assert (= (x4266 x693 x2462 x807) (x5051 (x4266 x693 x2462 x807))))
(assert (not (x4435 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134))))
(assert (= x2829 (x3238 (x4266 64 x2829 (ite (= x3525 0) x3645 (ite (<= x3525 32) x799 (ite (>= 64 x3525) x1267 (ite (<= x3525 96) x149 (ite (<= x3525 128) x745 (ite (>= 160 x3525) x2422 (ite (>= 192 x3525) x615 (ite (<= x3525 224) x3015 x3278))))))))))))
(assert (= x3959 (or x4426 x2554)))
(assert (x5553 x1141))
(assert (x5553 x4736))
(assert (=> (>= 10000 x4165) (= 0 (x5051 x4165))))
(assert (= (x4160 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024)) x3632))
(assert (x5553 x5184))
(assert (= 36 (x4160 (x4266 64 x3273 36))))
(assert (not (x4435 (x3789 x3525 x4032 x5204 x1927 x4690))))
(assert (=> (<= x3702 10000) (= (x5051 x3702) 0)))
(assert (x5553 x3273))
(assert (x5553 x280))
(assert (=> (<= x4730 10000) (= 0 (x5051 x4730))))
(assert (not (x4435 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445))))
(assert (x5553 x4273))
(assert (= (and x2296 x3288) x1617))
(assert (x5553 x2982))
(assert (x5553 x4956))
(assert (x5553 x454))
(assert (= x5509 (and x2143 (not x1446))))
(assert (= 100 (x4160 (x4266 64 x961 100))))
(assert (= x2737 (and x2024 x147)))
(assert (x5553 x4673))
(assert (> (x5009 x693 x5222) 10000))
(assert (= (x4266 64 x1597 7) (x5051 (x4266 64 x1597 7))))
(assert (x5553 x4225))
(assert (= x1253 (x1514 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253))))
(assert (x5553 x1987))
(assert (not (x4435 (x4266 64 x5653 11))))
(assert (= x5485 (and (not x457) x5259)))
(assert (= x4063 (and (not x1946) x1699)))
(assert (= x2965 x1591))
(assert (x5553 x3970))
(assert (x5553 x273))
(assert (x5553 x3561))
(assert (not (x4435 (x4266 64 x2382 6))))
(assert (=> (>= 10000 x1597) (= (x5051 x1597) 0)))
(assert (= x3017 (and x3424 (not x1227))))
(assert (x5553 x2533))
(assert (x5553 x3731))
(assert (= x2385 (x894 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325))))
(assert (x5553 x2462))
(assert (= (x5051 (x4266 64 x1851 100)) (x4266 64 x1851 100)))
(assert (= (x4160 (x4266 64 x4037 0)) 0))
(assert (x5553 x1374))
(assert (= (and x5640 (not x3114)) x4189))
(assert (x5553 x3460))
(assert (x5553 x5190))
(assert (x121 x2643))
(assert (= (x5051 (x4266 64 x5630 6)) (x4266 64 x5630 6)))
(assert (= x3264 (x722 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135))))
(assert (= x1774 x2368))
(assert (= (x3238 (x1228 x4005 x4730 x1798 x3345 x4179 x4679)) x4730))
(assert (x5553 x3334))
(assert (x1779 x5121))
(assert (= (x894 (x3789 x693 x2627 x5180 x3492 x3026)) x693))
(assert (= (and (not x2367) x3741) x2539))
(assert (= x1246 (x4160 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677))))
(assert (= x1495 (x5346 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495))))
(assert (= 12 (x4160 (x4266 64 x4480 12))))
(assert (x5553 x1015))
(assert (x5553 x4431))
(assert (x5553 x4632))
(assert (< (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3556 10000) (= 0 (x5051 x3556))))
(assert (x5553 x441))
(assert (x5553 x5194))
(assert (=> (>= 10000 x4920) (= 0 (x5051 x4920))))
(assert (= x5015 (x4160 (x3789 x1098 x2878 x5015 x4295 x4143))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x3858 10)))
(assert (=> (<= x2944 10000) (= (x5051 x2944) 0)))
(assert (x5553 x1830))
(assert (= x3134 (x5346 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134))))
(assert (x5553 x1542))
(assert (not (x4435 (x5009 x610 x5418))))
(assert (x4435 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x5553 x69))
(assert (not (x4435 (x269 x2385 x3846 x2780 x4360))))
(assert (x5553 x3823))
(assert (= (x894 (x5009 32 x3799)) 32))
(assert (not (x4435 (x4266 x4005 x4465 x1714))))
(assert (= x611 (or x4164 x4233 x1163 x1090 x4158)))
(assert (x5553 x5622))
(assert (> (x4266 64 x1515 12) 10000))
(assert (< 10000 (x4266 64 x2928 2)))
(assert (> (x3789 x1855 x4793 x5161 x2447 x1968) 10000))
(assert (= (x894 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510)) x693))
(assert (x5553 x1430))
(assert (< 10000 (x3789 x85 x140 x3477 x626 x2469)))
(assert (= 0 (x5051 35425322552009646506518338594398286811668114190755561836384294568426616127488)))
(assert (x5553 x2372))
(assert (x5553 x4076))
(assert (= x1182 (x3238 (x1228 x5501 x1182 x866 x2425 x4330 x4688))))
(assert (= x5129 (and x2362 x5435)))
(assert (=> (>= 10000 x4275) (= (x5051 x4275) 0)))
(assert (not (x4435 (x5009 32 x1587))))
(assert (= (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947) (x5051 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947))))
(assert (= 32 (x894 (x5009 32 x434))))
(assert (= (x3247 (x1228 x1004 x3020 x2102 x388 x3489 x1127)) x3489))
(assert (< (x1228 x2385 x4180 x4698 x1668 x33 x3108) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x5222) (= (x5051 x5222) 0)))
(assert (x5553 x2985))
(assert (= (x4160 (x4266 64 x4123 36)) 36))
(assert (< (x3789 x2358 x4298 x3642 x3410 x4650) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5024))
(assert (= (x4160 (x4266 64 x5487 6)) 6))
(assert (x5553 x3477))
(assert (= x3035 (and x438 (not x958))))
(assert (x5553 x1910))
(assert (=> (<= x1677 10000) (= 0 (x5051 x1677))))
(assert (x5553 x25))
(assert (=> (<= x4736 10000) (= 0 (x5051 x4736))))
(assert (x5553 x3783))
(assert (x5553 x2194))
(assert (= x3126 (x1514 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126))))
(assert (= 64 (x894 (x4266 64 x4708 36))))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (= (x4266 64 x5630 2) (x5051 (x4266 64 x5630 2))))
(assert (= (x5051 (x4266 64 x2781 5)) (x4266 64 x2781 5)))
(assert (x1779 x1918))
(assert (= x3338 x2187))
(assert (=> (>= 10000 x5440) (= 0 (x5051 x5440))))
(assert (x5553 x1499))
(assert (= (x894 (x4266 64 x2382 2)) 64))
(assert (x5553 x2378))
(assert (= x5573 (x40 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28))))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (= (or x1659 x4888) x5397))
(assert (x5553 x5402))
(assert (= x194 (x4160 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638))))
(assert (= (x3238 (x485 x2385 x210 x579 x4423 x5503 x462 x5517)) x210))
(assert (x5553 x5445))
(assert (x5553 x3355))
(assert (x5553 x4053))
(assert (< (x4266 64 x4920 (ite (= x2443 0) x2605 (ite (>= 32 x2443) x2853 (ite (<= x2443 64) x1644 (ite (<= x2443 96) x3251 (ite (>= 128 x2443) x155 (ite (<= x2443 160) x2570 (ite (>= 192 x2443) x1592 (ite (<= x2443 224) x5315 x3053))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x4650) (= 0 (x5051 x4650))))
(assert (x5553 x772))
(assert (= (x5051 (x4266 x85 x2505 x2057)) (x4266 x85 x2505 x2057)))
(assert (= 0 (x5051 97822624453686575479804928673988797637476738513438931194560248106084831592448)))
(assert (= (x5051 (x1228 x1004 x3020 x2102 x388 x3489 x1127)) (x1228 x1004 x3020 x2102 x388 x3489 x1127)))
(assert (x5553 x4074))
(assert (= x2443 (x894 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495))))
(assert (=> (<= x3687 10000) (= 0 (x5051 x3687))))
(assert (= (x4160 (x4266 64 x3702 3)) 3))
(assert (= x1001 x2368))
(assert (= x5501 (x894 (x269 x5501 x784 x3627 x2194))))
(assert (x5553 x3831))
(assert (= x3240 (and x3527 x4834)))
(assert (x5553 x259))
(assert (< (x4266 64 1 x4794) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x4435 (x4266 64 x4123 36))))
(assert (= x1976 (x722 (x269 x2434 x3305 x5562 x1976))))
(assert (= (or x2737 x2551) x4602))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x1098 x5454 x1584 x3052)))
(assert (=> (>= 10000 x2479) (= 0 (x5051 x2479))))
(assert (= (x5009 x1004 x347) (x5051 (x5009 x1004 x347))))
(assert (= (x894 (x5009 x1004 x347)) x1004))
(assert (= (=> (and (= x4153 (x1945 x1249)) (= x5361 (not (> x3449 32)))) (and x5361 (=> (= x5416 32) x1747))) x1672))
(assert (x5553 x3250))
(assert (= (=> (and (= x5163 x1393) (= x2772 x5071) (= x5528 x1479) (= x84 x667) (= x3637 x5470) (= x3356 x3683) (= x5650 x3192)) x3244) x1735))
(assert (x5553 x2031))
(assert (x5553 x4103))
(assert (x5553 x2919))
(assert (< 10000 (x3789 x4283 x3013 x2354 x4853 x4379)))
(assert (not (x4435 (x269 x3525 x4566 x5026 x1254))))
(assert (=> (<= x199 10000) (= 0 (x5051 x199))))
(assert (= (x3238 (x4266 64 x4708 36)) x4708))
(assert (= (x40 (x1228 x4005 x4730 x1798 x3345 x4179 x4679)) x4679))
(assert (x5553 x818))
(assert (x5553 x307))
(assert (x5553 x3532))
(assert (=> (>= 10000 x4988) (= (x5051 x4988) 0)))
(assert (< (x1228 x4283 x5337 x2668 x338 x5234 x3122) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x544))
(assert (= (x894 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)) x286))
(assert (=> (>= 10000 x2102) (= 0 (x5051 x2102))))
(assert (x5553 x1611))
(assert (x5553 x1268))
(assert (= x1597 (x3238 (x4266 64 x1597 7))))
(assert (> (x5009 x2443 x1792) 10000))
(assert (= x134 (=> (and (= x1143 (>= 224 x2434)) (= x2434 (x4395 (- x2443 32))) (= x4346 (x2742 (+ x4286 x5362))) (= x2443 (x4395 (- x4969 x5362))) (= (x2742 (+ x4286 x5362)) x5626) (= x4969 (x2742 (+ 32 x4346)))) (and x1143 (=> (and (= (x4266 x2434 x4068 x4292) x689) (= (x916 x5328) x5562) (= x768 (x5009 x2434 x2244)) (= x5412 (x1228 x2434 x1862 x1112 x541 x3398 x3066)) (= x4563 (x2742 (+ 128 x5362))) (= x3066 (x916 x4563)) (= (x2742 (+ 160 x5362)) x4321) (= (x916 x5184) x4948) (= (x916 x203) x3651) (= (x916 x5362) x4068) (= (x916 x48) x3398) (= x217 (ite (= x2434 0) x200 (ite (<= x2434 32) x768 (ite (>= 64 x2434) x689 (ite (>= 96 x2434) x3484 (ite (<= x2434 128) x2395 (ite (<= x2434 160) x5412 (ite (>= 192 x2434) x2280 (ite (>= 224 x2434) x4285 x3687))))))))) (= (x916 x1432) x1970) (= (x2742 (+ x5362 96)) x5401) (= x2955 (x2742 (+ x5362 64))) (= (x2742 (+ 64 x5362)) x5611) (= x4292 (x916 x4072)) (= (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344) x4285) (= x4504 (x2742 (+ 32 x5362))) (= (x2742 (+ 64 x5362)) x2628) (= (x916 x4321) x725) (= x48 (x2742 (+ 96 x5362))) (= x376 (>= 224 x2443)) (= x541 (x916 x2628)) (= x2544 (x916 x5401)) (= (x916 x5362) x2541) (= x1034 (x2742 (+ x5362 96))) (= (x916 x2955) x1572) (= x164 (x2742 (+ 64 x5362))) (= (x916 x5362) x1862) (= x2244 (x916 x5362)) (= x5184 (x2742 (+ 32 x5362))) (= (x2742 (+ 96 x5362)) x203) (= x4301 (x916 x1034)) (= (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156) x2280) (= (x2742 (+ x5362 32)) x5328) (= (x2742 (+ x5362 32)) x3905) (= x4344 (x916 x2556)) (= x3551 (x916 x164)) (= (x2742 (+ x5362 160)) x4743) (= x3433 (x916 x5362)) (= (x916 x4504) x4217) (= (x916 x5362) x1676) (= (x269 x2434 x3305 x5562 x1976) x3484) (= x1215 (x916 x4797)) (= x200 (x102 0)) (= (x916 x5611) x1976) (= x2156 (x916 x4743)) (= x4976 (x2742 (+ 32 x5362))) (= (x2742 (+ 128 x5362)) x4797) (= (x2742 (+ 32 x5362)) x4072) (= x3305 (x916 x5362)) (= x1432 (x2742 (+ 64 x5362))) (= x4652 (x916 x3397)) (= x3397 (x2742 (+ x5362 128))) (= (x916 x3905) x1112) (= (x3789 x2434 x3433 x4948 x1572 x2544) x2395) (= (x916 x4976) x199) (= x2556 (x2742 (+ 192 x5362)))) (and (=> (and (= (x916 x705) x5230) (= x1931 (x916 x4004)) (= (x102 0) x2605) (= x2624 (x2742 (+ x5362 32))) (= (x2742 (+ x5362 64)) x77) (= (x916 x3045) x5633) (= x4893 (x2742 (+ 160 x5362))) (= x1430 (x916 x5362)) (= x4170 (x916 x5362)) (= (x3789 x2443 x4170 x4860 x1625 x4474) x155) (= x3830 (x916 x5362)) (= x4004 (x2742 (+ x5362 32))) (= (x2742 (+ 32 x5362)) x2310) (= (x916 x5362) x602) (= x187 (x2742 (+ 32 x5362))) (= x4157 (x916 x5511)) (= (x269 x2443 x3830 x1931 x5230) x3251) (= x5041 (< 0 x713)) (= x3262 (x2742 (+ x3164 32))) (= (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157) x5315) (= x1786 (x2742 (+ x5362 64))) (= x3582 (x916 x2624)) (= (x1228 x2443 x1430 x5633 x4923 x1095 x31) x2570) (= x1193 (x916 x5299)) (= (x916 x5362) x1792) (= (x2742 (+ x5362 96)) x1255) (= (x2742 (+ 32 x5362)) x3045) (= x2853 (x5009 x2443 x1792)) (= x1856 (x2742 (+ 160 x5362))) (= x4956 (x916 x1894)) (= x3164 (x2742 (+ 160 x5362))) (= x3033 (x4266 64 x4920 (ite (= 0 x2443) x2605 (ite (<= x2443 32) x2853 (ite (>= 64 x2443) x1644 (ite (<= x2443 96) x3251 (ite (<= x2443 128) x155 (ite (<= x2443 160) x2570 (ite (>= 192 x2443) x1592 (ite (>= 224 x2443) x5315 x3053)))))))))) (= x5511 (x2742 (+ 192 x5362))) (= x1095 (x916 x5062)) (= x5062 (x2742 (+ x5362 96))) (= (x916 x2028) x31) (= x4458 (x916 x5028)) (= x46 (x916 x4893)) (= (x916 x3123) x4474) (= (x916 x1255) x3904) (= (x916 x5362) x970) (= x318 (x2742 (+ x5362 64))) (= (x4087 x2553) x713) (= x2762 (x916 x2310)) (= x1644 (x4266 x2443 x4502 x4956)) (= x1904 (x2742 (+ x5362 96))) (= (x2742 (+ x5362 32)) x222) (= (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495) x1592) (= (x916 x1856) x1495) (= x4502 (x916 x5362)) (= x705 (x2742 (+ x5362 64))) (= x5299 (x2742 (+ x5362 128))) (= (x916 x1786) x1509) (= (x916 x77) x2634) (= x1625 (x916 x318)) (= x4860 (x916 x187)) (= x3123 (x2742 (+ 96 x5362))) (= x4154 (x2742 (+ 64 x5362))) (= (x2742 (+ 32 x5362)) x1894) (= x2028 (x2742 (+ 128 x5362))) (= (x2742 (+ x5362 128)) x5028) (= x5407 (x916 x1904)) (= x4923 (x916 x4154))) (and (=> (not x5041) x2288) (=> (and (and (= x2485 (< 32 x713)) (= (x4090 x296) x2251)) x5041) (and (=> (and x2485 (and (= (> x713 64) x231) (= x1556 (x1274 x4561)) (= (x2742 (+ 32 x3262)) x3767) (= x4561 (x2742 (+ 32 x296))))) (and (=> (not x231) x2288) (=> (and x231 (and (= x4370 (x2742 (+ 64 x296))) (= x3357 (< 96 x713)) (= (x2742 (+ 64 x3262)) x4092) (= x513 (x4575 x4370)))) (and (=> x3357 x1896) (=> (not x3357) x2288))))) (=> (not x2485) x2288))))) x376))))))
(assert (x5553 x3599))
(assert (x5553 x2869))
(assert (= (x5051 x652) (x5051 (+ 1 x652))))
(assert (=> (<= x4104 10000) (= (x5051 x4104) 0)))
(assert (x5553 x3456))
(assert (x5553 x4483))
(assert (= x3084 (x3238 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142))))
(assert (= x225 (x4160 (x269 x1966 x1684 x225 x724))))
(assert (x5553 x1467))
(assert (= (and (not x1533) x3644) x3722))
(assert (x5553 x3953))
(assert (= 0 (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639838)))
(assert (x5553 x4878))
(assert (= (and (not x4611) x5384) x4025))
(assert (x5553 x2537))
(assert (x5553 x957))
(assert (=> (>= 10000 x2612) (= (x5051 x2612) 0)))
(assert (x5553 x1754))
(assert (x5553 x2995))
(assert (=> (>= 10000 x3324) (= (x5051 x3324) 0)))
(assert (x5553 x3947))
(assert (< (x4266 64 x4736 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4160 (x269 x2434 x3305 x5562 x1976)) x5562))
(assert (x5553 x1572))
(assert (= x208 (x40 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914))))
(assert (x5553 x4172))
(assert (= (x3789 x1966 x2269 x3334 x1405 x4054) (x5051 (x3789 x1966 x2269 x3334 x1405 x4054))))
(assert (x5553 x5536))
(assert (x5553 x405))
(assert (> (x5009 x610 x5418) 10000))
(assert (x5553 x2544))
(assert (= (x5051 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)) (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)))
(assert (=> (<= x4036 10000) (= 0 (x5051 x4036))))
(assert (x5553 x2370))
(assert (= x2837 (x4160 (x4266 x5530 x2942 x2837))))
(assert (= x2536 (x3238 (x4266 64 x2536 12))))
(assert (x5553 x2683))
(assert (x5553 x1716))
(assert (x5553 x677))
(assert (=> (<= x626 10000) (= 0 (x5051 x626))))
(assert (not (x4435 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914))))
(assert (=> (<= x4278 10000) (= 0 (x5051 x4278))))
(assert (= x4052 (and x1699 x1946)))
(assert (x5553 x137))
(assert (x5553 x3745))
(assert (x5553 x797))
(assert (=> (<= x590 10000) (= (x5051 x590) 0)))
(assert (x5553 x2086))
(assert (= (x722 (x1228 x2443 x1430 x5633 x4923 x1095 x31)) x4923))
(assert (x1779 x1870))
(assert (x5553 x4209))
(assert (= (x3238 (x5009 x1098 x5448)) x5448))
(assert (x5553 x1860))
(assert (x5553 x3652))
(assert (=> (>= 10000 x4246) (= 0 (x5051 x4246))))
(assert (x5553 x2098))
(assert (x5553 x2623))
(assert (= (and x1821 x4556) x3376))
(assert (x5553 x4595))
(assert (x5553 x208))
(assert (< 10000 (x4266 64 x1597 7)))
(assert (x5553 x1366))
(assert (= (x722 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850)) x1965))
(assert (x5553 x3492))
(assert (x5553 x2946))
(assert (x5553 x4999))
(assert (= (x269 x1855 x3349 x3751 x2410) (x5051 (x269 x1855 x3349 x3751 x2410))))
(assert (=> (>= 10000 x2123) (= 0 (x5051 x2123))))
(assert (x1779 x2232))
(assert (x5553 x30))
(assert (x5553 x1788))
(assert (=> (>= 10000 x3532) (= 0 (x5051 x3532))))
(assert (x5553 x4243))
(assert (= (x3238 (x4266 64 x3073 12)) x3073))
(assert (< 10000 (x3789 x530 x5021 x1861 x1857 x3779)))
(assert (x5553 x3139))
(assert (= (x4160 (x4266 x3137 x1784 x1436)) x1436))
(assert (x5553 x300))
(assert (x5553 x5395))
(assert (= (x3238 (x4266 64 x1844 12)) x1844))
(assert (x5553 x796))
(assert (x5553 x142))
(assert (x5553 x4255))
(assert (= x4807 (or x271 x718)))
(assert (=> (>= 10000 x3) (= 0 (x5051 x3))))
(assert (x5553 x3164))
(assert (x5553 x4948))
(assert (= (=> (and (= (+ 1 x4927) x3434) (= x4416 2) (= false x4224) (= x3879 0) (= true x2860) (= x2257 (+ 1 x4927))) x1263) x4662))
(assert (x5553 x5441))
(assert (> (x4266 64 x1680 36) 10000))
(assert (=> (<= x1965 10000) (= (x5051 x1965) 0)))
(assert (x5553 x4782))
(assert (not (x4435 (x485 x2385 x210 x579 x4423 x5503 x462 x5517))))
(assert (x5553 x2835))
(assert (not (x4435 (x4266 64 x2928 2))))
(assert (x5553 x2644))
(assert (x5553 x209))
(assert (x5553 x249))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 32 x3452)))
(assert (x5553 x3267))
(assert (= (=> (and (and (= (x4266 64 x5202 11) x3222) (= x5623 false) (= false x712) (= (x1781 192) x115) (= x5445 (x4762 x2928)) (= (+ 1 x3222) x4768) (= x3849 (x1781 128)) (= x558 x5202) (= x3401 2177969240) (= x4188 false) (= x3206 false) (= x4222 36) (= (x1781 160) x2609) (>= 3 x9) (= (and x4040 x4765) x1383) (= (+ x4768 1) x2374) (>= x5445 1) (= (not x3631) x4765) (= false x3315) (= x2666 false) (= (x4156 x4768) x4281) (= (x5173 x3222) x9) (>= 127 x3780) (>= 127 x3780) (= x561 (x1398 x2374))) (and (= false x3119) (>= x1334 1) (= 3672334990 x2370) (= x4079 x1828) (= x2022 x1828) (= x1562 (x3856 x1992)) (= false x2206) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x5123) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x5123)) (>= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (= false x4523) (<= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= false x5233) (< x5123 x5229) (= x1871 (x4266 64 x1828 10)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x5123) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x5123) (>= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (>= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= (ite (not (= 0 x1530)) 1 0) x2700) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x5123) (= false x105) (= (+ x4790 1) x3601) (= 36 x4411) (= x1461 (+ 1 x3601)) (= x2448 (x2742 (+ x5229 96))) (< x5229 x2448) (= x4140 (x3012 x5123)) (= (x4266 64 x4140 11) x4790) (= 0 x1562) (= (x4266 64 x1464 10) x422) (= x1056 false) (>= 255 x1530) (or (<= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639807) (and (<= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639902) (>= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x5123)) (= 1 x2941) (= (x3669 x1871) x1530) (= (x2742 (+ 32 x5123)) x5229) (= x2820 false) (= x1334 (x4762 x2928)) (= false x939) (<= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x3010 false) (<= x5368 127) (<= x4184 3) (= x1992 (x4266 64 x4140 11)) (>= 127 x5368) (= x558 x4140) (= false x4390) (= x3631 (not (= 0 x2700))))) (and x1383 (=> (and (= x4079 x2193) (= x1324 (and x248 x5300)) (= (= x3849 1) x248) (= (= x115 0) x4579) (= x4876 (and x4579 x1324)) (= (= x2609 x2193) x5300)) x4876))) x901))
(assert (= x2030 (x3238 (x269 x5613 x2030 x3675 x2352))))
(assert (= (x3238 (x5009 x5501 x4243)) x4243))
(assert (= (x4160 (x4266 x4283 x1477 x242)) x242))
(assert (x5553 x2582))
(assert (> (x5009 x5501 x4243) 10000))
(assert (= (x269 x3525 x4566 x5026 x1254) (x5051 (x269 x3525 x4566 x5026 x1254))))
(assert (= (=> (and (and (<= x4115 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x4115 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (> x4115 x2221) (= (x4395 (- x5179 32)) x5486) (= (x2742 (+ x4115 192)) x4770) (= (x4395 (- x4115 x2221)) x5179) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4115) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2221) (= x2602 (> x261 0)) (<= x4115 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2742 (+ x2221 32)) x3478) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x4115)) (= x4115 (x2742 (+ x1333 x3597))) (= (x2346 x3478) x2640) (> x4770 x4115) (= (+ x5170 46442213778836376901753710468615024683576072693327014300388496345503314739200) x5065) (= (x2742 (+ x1333 x4987)) x4646) (= x5170 (x2436 26959946667150639794667015087019630673637144422540572481103610249215 x2640)) (= x3597 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2800)) (<= x2221 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x4115)) (>= x4115 1) (= (x5534 x2221) x5467) (= (x2742 (+ x4115 32)) x3282) (= x2800 (x2742 (+ x4987 31))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2221)) (or (and (and (= (x496 x2928) x3745) (= (= x2894 (x4720 x2928)) x2161) (= x2894 (x496 x2928)) x5340 (= x3992 x662) (= (<= x3745 (x4720 x2928)) x5340) x2161 (>= 4294967295 x2263)) x2602) (and (= (+ x2650 1) x3992) (not x2602)))) x3418) x5571))
(assert (= x2086 (x4160 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736))))
(assert (x5553 x4795))
(assert (=> (<= x1552 10000) (= 0 (x5051 x1552))))
(assert (=> (>= 10000 x5501) (= 0 (x5051 x5501))))
(assert (=> (<= x1911 10000) (= (x5051 x1911) 0)))
(assert (= (x4160 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) x911))
(assert (= x3223 (x722 (x3789 x610 x2516 x3169 x3223 x3267))))
(assert (= x4640 (x40 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324))))
(assert (x5553 x4392))
(assert (x5553 x4056))
(assert (x5553 x3362))
(assert (x5553 x4344))
(assert (= (x3247 (x1228 x2434 x1862 x1112 x541 x3398 x3066)) x3398))
(assert (x5553 x1815))
(assert (= x5290 (x722 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134))))
(assert (x5553 x483))
(assert (x5553 x5381))
(assert (x5553 x2050))
(assert (x5553 x432))
(assert (x5553 x993))
(assert (< (x4266 64 x3022 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x722 (x485 x2385 x210 x579 x4423 x5503 x462 x5517)) x4423))
(assert (= (x4160 (x1228 x3137 x3982 x1109 x209 x5082 x1165)) x1109))
(assert (= (x4160 (x4266 x2434 x4068 x4292)) x4292))
(assert (=> (>= 10000 x3659) (= 0 (x5051 x3659))))
(assert (> (x269 x5501 x784 x3627 x2194) 10000))
(assert (=> (>= 10000 x3278) (= 0 (x5051 x3278))))
(assert (=> (<= x4859 10000) (= (x5051 x4859) 0)))
(assert (= (x5346 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677)) x1677))
(assert (x5553 x5126))
(assert (= (x5051 (x4266 64 x5653 11)) (x4266 64 x5653 11)))
(assert (x5553 x5224))
(assert (< (x4266 64 x484 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x120 x1327) x1490))
(assert (x5553 x1577))
(assert (x5553 x2829))
(assert (= x2333 (x3247 (x3789 x5530 x2140 x4262 x114 x2333))))
(assert (x5553 x5652))
(assert (= (and x235 x1413) x4558))
(assert (x5553 x4818))
(assert (=> (>= 10000 x55) (= 0 (x5051 x55))))
(assert (= x82 (and x5168 (not x5647))))
(assert (< 10000 (x4266 64 x2536 12)))
(assert (= x2434 (x894 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344))))
(assert (x5553 x469))
(assert (x5553 x5180))
(assert (x5553 x2153))
(assert (= (x3238 (x4266 64 x5024 36)) x5024))
(assert (x1779 x1492))
(assert (x5553 x2243))
(assert (< 10000 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473)))
(assert (=> (>= 10000 x4053) (= (x5051 x4053) 0)))
(assert (= (x5051 (x1228 x1098 x3372 x3272 x4492 x1282 x3321)) (x1228 x1098 x3372 x3272 x4492 x1282 x3321)))
(assert (=> (<= x2382 10000) (= 0 (x5051 x2382))))
(assert (x5553 x1919))
(assert (= (x40 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156)) x1215))
(assert (=> (>= 10000 x5118) (= (x5051 x5118) 0)))
(assert (= x4255 (x40 (x1228 x286 x1219 x5302 x3589 x4897 x4255))))
(assert (x5553 x5417))
(assert (> (x4266 x1966 x4625 x5022) 10000))
(assert (x5553 x1477))
(assert (< (x5009 x1855 x4516) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1603))
(assert (=> (<= x1491 10000) (= 0 (x5051 x1491))))
(assert (x5553 x4430))
(assert (= x2223 (and (not x2166) x4316)))
(assert (= x3363 (and x4296 x3603)))
(assert (not (x4435 (x5009 x2434 x2244))))
(assert (x5553 x1491))
(assert (=> (>= 10000 x5448) (= 0 (x5051 x5448))))
(assert (=> (<= x5125 10000) (= 0 (x5051 x5125))))
(assert (= (x3238 (x1228 x5613 x5274 x3895 x2978 x2944 x1312)) x5274))
(assert (> (x4266 64 x2755 36) 10000))
(assert (x5553 x2131))
(assert (x5553 x5170))
(assert (x5553 x3337))
(assert (=> (>= 10000 x2245) (= (x5051 x2245) 0)))
(assert (x5553 x5586))
(assert (= x3064 (x722 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661))))
(assert (=> (<= x5082 10000) (= 0 (x5051 x5082))))
(assert (=> (>= 10000 x4698) (= 0 (x5051 x4698))))
(assert (x5553 x4504))
(assert (x5553 x2245))
(assert (= (x5051 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)) (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)))
(assert (= x4330 (x3247 (x1228 x5501 x1182 x866 x2425 x4330 x4688))))
(assert (=> (<= x4065 10000) (= (x5051 x4065) 0)))
(assert (x5553 x2889))
(assert (x5553 x2447))
(assert (= 10 (x4160 (x4266 64 x4216 10))))
(assert (x5553 x1214))
(assert (= (x4160 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)) x5154))
(assert (= (x3238 (x1228 x5530 x671 x845 x2168 x5004 x498)) x671))
(assert (= x2979 (or x3116 x4845 x1593)))
(assert (x5553 x133))
(assert (x5553 x2501))
(assert (x5553 x2902))
(assert (x4435 3628442803))
(assert (=> (<= x2972 10000) (= (x5051 x2972) 0)))
(assert (x5553 x3340))
(assert (x5553 x738))
(assert (x4435 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (= x4493 (and x1832 x3150)))
(assert (=> (>= 10000 x1092) (= (x5051 x1092) 0)))
(assert (< 10000 (x5009 x3137 x4245)))
(assert (= 36 (x4160 (x4266 64 x1680 36))))
(assert (x5553 x1245))
(assert (x5553 x2025))
(assert (= (x4160 (x1228 x5501 x1182 x866 x2425 x4330 x4688)) x866))
(assert (= x3932 (and x1614 x2528)))
(assert (= 5 (x4160 (x4266 64 x4736 5))))
(assert (x5553 x1379))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x2434 x2244)))
(assert (=> (>= 10000 x5502) (= 0 (x5051 x5502))))
(assert (not (x4435 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336))))
(assert (x1779 x2823))
(assert (=> (<= x4476 10000) (= 0 (x5051 x4476))))
(assert (= (x4160 (x4266 64 x2755 36)) 36))
(assert (x5553 x4116))
(assert (x5553 x1454))
(assert (x5553 x2824))
(assert (x5553 x3965))
(assert (x121 x2139))
(assert (x5553 x3374))
(assert (=> (<= x1182 10000) (= (x5051 x1182) 0)))
(assert (= x5190 (x3247 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325))))
(assert (= (x722 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445)) x897))
(assert (= x3494 (x4160 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325))))
(assert (= (x4160 (x1228 x530 x30 x2472 x1987 x170 x4859)) x2472))
(assert (x5553 x1869))
(assert (x5553 x1496))
(assert (x5553 x3940))
(assert (x5553 x1749))
(assert (= (x722 (x269 x1004 x4085 x5592 x4629)) x4629))
(assert (=> (<= x2086 10000) (= 0 (x5051 x2086))))
(assert (= (x3238 (x269 x1098 x5454 x1584 x3052)) x5454))
(assert (x5553 x5145))
(assert (=> (<= x330 10000) (= 0 (x5051 x330))))
(assert (x5553 x5292))
(assert (x5553 x826))
(assert (x5553 x429))
(assert (=> (<= x2029 10000) (= 0 (x5051 x2029))))
(assert (=> (<= x1077 10000) (= (x5051 x1077) 0)))
(assert (= (x894 (x269 x4283 x681 x4511 x4843)) x4283))
(assert (=> (<= x2480 10000) (= 0 (x5051 x2480))))
(assert (= (and x1660 x5565) x2891))
(assert (not (x4435 (x4266 64 x2781 3))))
(assert (x5553 x4066))
(assert (x5553 x2456))
(assert (x5553 x2169))
(assert (x5553 x1359))
(assert (=> (<= x905 10000) (= (x5051 x905) 0)))
(assert (x5553 x4384))
(assert (x5553 x3589))
(assert (= (x3247 (x1228 x3137 x3982 x1109 x209 x5082 x1165)) x5082))
(assert (x5553 x3846))
(assert (x5553 x4244))
(assert (=> (<= x3858 10000) (= 0 (x5051 x3858))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x4123 36)))
(assert (= (x4160 (x4266 64 x1844 12)) 12))
(assert (x5553 x1651))
(assert (x5553 x3399))
(assert (= x2453 (x3247 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736))))
(assert (=> (>= 10000 x3053) (= 0 (x5051 x3053))))
(assert (x5553 x2211))
(assert (x5553 x1122))
(assert (=> (>= 10000 x3934) (= 0 (x5051 x3934))))
(assert (= (x40 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) x3592))
(assert (= x2677 (and x3719 (not x461))))
(assert (x5553 x3648))
(assert (= x140 (x3238 (x3789 x85 x140 x3477 x626 x2469))))
(assert (x5553 x869))
(assert (x5553 x4157))
(assert (x5553 x3899))
(assert (= (=> (and (= (x2726 x5310) x3137) (= x5392 (<= x3137 224))) (and (=> (and (= (x269 x3137 x3579 x4653 x2811) x1578) (= x2879 (x2742 (+ x1470 32))) (= x5329 (x2742 (+ x1470 128))) (= x2450 (x2726 x280)) (= (x2726 x1470) x1784) (= x411 (x2742 (+ 64 x1470))) (= (x2742 (+ x1470 96)) x1570) (= (x2726 x1570) x5082) (= x1404 (x2742 (+ 128 x1470))) (= (x2726 x1470) x130) (= (x2726 x1257) x2977) (= (x2742 (+ 32 x1470)) x546) (= (x2742 (+ 160 x1470)) x2481) (= x1787 (x2726 x5083)) (= x2811 (x2726 x411)) (= (x2726 x4174) x4483) (= (x2726 x1470) x3982) (= (x2726 x1470) x5023) (= x1939 (x2726 x2189)) (= x4145 (x2742 (+ 64 x1470))) (= x5357 (ite (= 0 x3137) x5218 (ite (<= x3137 32) x3207 (ite (>= 64 x3137) x4102 (ite (<= x3137 96) x1578 (ite (<= x3137 128) x1031 (ite (<= x3137 160) x2629 (ite (>= 192 x3137) x4114 (ite (>= 224 x3137) x2943 x4036))))))))) (= (x2742 (+ x1470 128)) x572) (= (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947) x4114) (= (x2742 (+ 96 x1470)) x432) (= (x2742 (+ x1470 64)) x1646) (= (x2742 (+ x1470 64)) x280) (= (x2726 x1196) x3340) (= (x1228 x3137 x3982 x1109 x209 x5082 x1165) x2629) (= x4174 (x2742 (+ x1470 64))) (= (x2726 x2879) x1576) (= (x2742 (+ 160 x1470)) x2189) (= x1109 (x2726 x5388)) (= (x2726 x4147) x4653) (= (x2726 x1470) x4245) (= (x2726 x1404) x2008) (= (x2726 x3836) x4858) (= (x2742 (+ 32 x1470)) x5388) (= (x2726 x546) x590) (= x3579 (x2726 x1470)) (= x5371 (x2726 x432)) (= x2000 (x2726 x1470)) (= (x3789 x3137 x130 x1576 x2450 x5371) x1031) (= (x2726 x5329) x1165) (= x5218 (x102 0)) (= (x2726 x2481) x3947) (= x1257 (x2742 (+ x1470 32))) (= (x2742 (+ x1470 32)) x4147) (= x1196 (x2742 (+ 96 x1470))) (= (x2726 x816) x1436) (= (x2726 x572) x1772) (= (x2742 (+ 32 x1470)) x816) (= (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787) x2943) (= x3836 (x2742 (+ x1470 96))) (= x5399 (< 0 x3529)) (= (x2726 x4145) x1557) (= x3529 (x2726 x872)) (= (x2726 x1646) x209) (= x5083 (x2742 (+ x1470 192))) (= (x5009 x3137 x4245) x3207) (= x4102 (x4266 x3137 x1784 x1436)) (= (x4266 64 x1597 7) x3534)) (and (=> (not x5399) x345) (=> (and x5399 (and (= x2698 (x2726 x465)) (= x4642 (> x3529 32)))) (and (=> (not x4642) x345) (=> (and (and (= x361 (< 64 x3529)) (= x568 (x2742 (+ 32 x465))) (= x1504 (x508 x568)) (= (x2742 (+ x4770 32)) x5100)) x4642) (and (=> (and x361 (and (= x2833 (x2742 (+ x465 64))) (= x4817 (< 96 x3529)) (= x1311 (x3083 x2833)) (= (x2742 (+ 64 x4770)) x5203))) (and (=> x4817 x4598) (=> (not x4817) x345))) (=> (not x361) x345))))))) x5392)) x3636))
(assert (x5553 x3936))
(assert (=> (<= x2946 10000) (= 0 (x5051 x2946))))
(assert (< 10000 (x4266 64 x3181 2)))
(assert (= (x4266 x2434 x4068 x4292) (x5051 (x4266 x2434 x4068 x4292))))
(assert (x121 x3666))
(assert (x5553 x4534))
(assert (x5553 x1566))
(assert (= (x894 (x5009 x1098 x5448)) x1098))
(assert (= 103 (x3238 (x5009 32 103))))
(assert (x5553 x47))
(assert (= x2399 (and (not x4329) x277)))
(assert (= (x3247 (x3789 x1004 x3815 x2736 x1603 x5356)) x5356))
(assert (not (x4435 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947))))
(assert (= 64 (x894 (x4266 64 x3073 12))))
(assert (not (x4435 (x4266 x2443 x4502 x4956))))
(assert (x5553 x4600))
(assert (x5553 x2107))
(assert (=> (<= x3267 10000) (= (x5051 x3267) 0)))
(assert (x5553 x1790))
(assert (x5553 x1530))
(assert (x5553 x22))
(assert (x5553 x4167))
(assert (=> (>= 10000 x264) (= 0 (x5051 x264))))
(assert (=> (<= x3181 10000) (= (x5051 x3181) 0)))
(assert (= (x4160 (x485 x2385 x210 x579 x4423 x5503 x462 x5517)) x579))
(assert (not (x4435 (x4266 64 x3861 36))))
(assert (=> (>= 10000 x4170) (= 0 (x5051 x4170))))
(assert (= x4793 (x3238 (x3789 x1855 x4793 x5161 x2447 x1968))))
(assert (x1779 x3952))
(assert (x5553 x5470))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x3702 7)))
(assert (=> (<= x3846 10000) (= (x5051 x3846) 0)))
(assert (x5553 x392))
(assert (x5553 x4217))
(assert (= (ite (= 0 x4005) x1220 (ite (>= 32 x4005) x4371 (ite (>= 64 x4005) x892 (ite (<= x4005 96) x4094 (ite (>= 128 x4005) x3271 (ite (>= 160 x4005) x3619 (ite (>= 192 x4005) x311 (ite (<= x4005 224) x4546 x437)))))))) (x4160 (x4266 64 x4248 (ite (= x4005 0) x1220 (ite (<= x4005 32) x4371 (ite (<= x4005 64) x892 (ite (<= x4005 96) x4094 (ite (<= x4005 128) x3271 (ite (<= x4005 160) x3619 (ite (>= 192 x4005) x311 (ite (<= x4005 224) x4546 x437))))))))))))
(assert (x5553 x144))
(assert (= (x4266 64 x3861 36) (x5051 (x4266 64 x3861 36))))
(assert (< (x4266 64 x2536 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x121 x963))
(assert (= (and (not x1937) x1111) x1276))
(assert (=> (<= x1016 10000) (= 0 (x5051 x1016))))
(assert (x4435 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (x5553 x4988))
(assert (x5553 x2944))
(assert (x5553 x2920))
(assert (x5553 x2794))
(assert (x5553 x3604))
(assert (x5553 x548))
(assert (x5266 x1205))
(assert (= x5151 (=> (and (= (+ x2474 32) x4028) (= x332 (= x1152 0)) (= x1730 (x4395 (- x4695 (mod (ite (< x5249 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x5249 (ite (> x4695 0) x1870 (x2436 127 x1870))) (or (= 1 x1730) (= x1730 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (- x2474 132) x4192) (= x4695 (x2436 1 x1492)) (= x1152 (x2436 1 x1492)) (= (div x1492 2) x1870)) (and (=> (and (not x332) (and (= (> x5249 0) x1352) (= (x5009 32 104) x904))) (and (=> (and (= x900 0) (not x1352)) x2745) (=> x1352 x5556))) (=> (and (and (= (* 32 (ite (not (= 0 x5249)) 1 0)) x2003) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1492) x214) (= x1505 (+ x2003 x4028)) (or (= 0 x2003) (= 32 x2003))) x332) x2125)))))
(assert (x5553 x3976))
(assert (x5553 x3415))
(assert (x5553 x2391))
(assert (=> (<= x437 10000) (= (x5051 x437) 0)))
(assert (=> (>= 10000 x1987) (= 0 (x5051 x1987))))
(assert (x5553 x1036))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x530 x30 x2472 x1987 x170 x4859)))
(assert (=> (>= 10000 x1956) (= 0 (x5051 x1956))))
(assert (=> (>= 10000 x4301) (= (x5051 x4301) 0)))
(assert (x5553 x4943))
(assert (= x4068 (x3238 (x4266 x2434 x4068 x4292))))
(assert (x5553 x4305))
(assert (= x2239 (or x2974 x351)))
(assert (=> (<= x1969 10000) (= 0 (x5051 x1969))))
(assert (= (x5009 x4283 x769) (x5051 (x5009 x4283 x769))))
(assert (x5553 x4819))
(assert (x5553 x308))
(assert (= 3 (x4160 (x4266 64 x1597 3))))
(assert (x5553 x5328))
(assert (x5553 x2167))
(assert (x5553 x1040))
(assert (= (=> (and (= x1123 (x3310 516)) (= (= x1123 0) x1441)) (and (=> (and (and (= true x2343) (= x4345 false) (= x4973 132) (= x2158 (x2742 (+ x278 32))) (= (x2742 (+ x2158 32)) x4913) (= (x2742 (+ x2731 4)) x278) (= (x2742 (+ 32 x4913)) x2917)) x1441) x4983) (=> (and (and (= (x3257 354) x1110) (= x2377 (x4266 64 x2781 5)) (= x461 (< (ite (= x3029 0) 10000 x3029) x1110)) (= (x3096 x2377) x3029)) (not x1441)) (and (=> (and (and (= (= x2339 0) x1551) (= x5227 (x2742 (+ 31 x5319))) (= x453 (x2742 (+ x368 x3145))) (= (x2742 (+ x3942 x4673)) x4387) (= x368 (x2742 (+ 32 x4989))) (= x1071 (x2742 (+ 32 x1237))) (= x3942 (x2742 (+ 32 x453))) (= (x4395 (- x453 x4846)) x4445) (= x3145 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5227)) (= (x3257 354) x3568) (= x4846 (x2742 (+ x2731 4))) (= x5235 (x4442 450)) (= x3061 (x2742 (+ 32 x4387))) (= (x2742 (+ x4846 32)) x5081) (= x2797 (x2742 (+ 32 x1071))) (= x218 (x4395 (- x3076 x2731))) (= x673 (x4395 (- x4387 x4846))) (= x4989 (x2742 (+ x4846 192))) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3753) x4673) (= x3076 (x2742 (+ x1058 x3061))) (= (x2742 (+ x5081 32)) x4386) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2139) x1058) (= (x4762 x786) x2339) (= x3753 (x2742 (+ 31 x3568))) (= (x2742 (+ 32 x4386)) x1237) (= x5319 (x3310 516)) (= (x2742 (+ 31 x5235)) x2139)) (not x461)) (and (=> (and (not x1551) (and (= (and x865 x4638) x4954) (= x3713 (x3390 x2928)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x198 x1372)) x4638) (= (<= x198 x3713) x865) (= x1372 (x3390 x786)))) (and (=> (and (and (>= x5550 1) (= x4998 (= x5319 (x1575 196))) (= x29 false) x4998 (= (x4762 x3819) x5550) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x198 x5172)) (= (or (and (= true (<= (- x2115 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (- x2115 4) 192)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2115 4))) x1912) (= x673 x4089) (<= 420 x218) (= x4109 0) (<= 0 x169) (>= x2115 420) (= x2781 x3899) (= x5172 (x1708 x786)) (= x4445 x1819) (= x2928 x3112) (= x4979 false) (= x2115 x218) (>= 127 x4856) (= x98 89332125780766104441357105940599211734484755930370930871569612501041822040064) (>= 127 x4856) (= x5224 192) (= x169 (+ x5172 x198)) (<= x169 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2491 x169) (= x4129 (x3390 x2928)) (= x5348 (- x4129 x198)) (= x2657 3313512704)) x4954) (and (=> x1912 x1591) (=> (and (= true x1664) (not x1912)) (and (=> (not x1664) x1591) (=> (and (= (and (> x2115 227) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2115))) x2910) x1664) (and (=> (and x2910 (and (= x5472 (> x5177 18446744073709551615)) (= x5177 (x93 196)))) (and (=> x5472 x2965) (=> (and (and (= (> x4428 x2115) x4611) (= (x2742 (+ x5177 228)) x4428)) (not x5472)) (and (=> x4611 x1683) (=> (and (not x4611) (= (> x4445 18446744073709551615) x5178)) (and (=> x5178 x1591) (=> (and (not x5178) (and (= x5268 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5010) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2115)) (and (< x5010 x2115) (= (<= x2115 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5010))))) (= (x2742 (+ 31 x4752)) x5010) (= (x2742 (+ 4 x4445)) x4752))) (and (=> (and (and (= x3766 (< 18446744073709551615 x2237)) (= x2237 (x93 x4752))) x5268) (and (=> x3766 x2965) (=> (and (not x3766) (and (= x3558 (> x4940 x2115)) (= x3105 (x2742 (+ 32 x4752))) (= x4940 (x2742 (+ x2237 x3105))))) (and (=> (and (not x3558) (= x363 (< 18446744073709551615 x673))) (and (=> x363 x1591) (=> (and (not x363) (and (= (x2742 (+ x3548 31)) x4933) (= x3548 (x2742 (+ x673 4))) (= (or (and (< x4933 x2115) (= (<= x4933 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2115))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2115) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4933))) x2805))) (and (=> (not x2805) x4367) (=> (and (and (= (x93 x3548) x1793) (= (< 18446744073709551615 x1793) x353)) x2805) (and (=> (and (and (= x2597 (< x2115 x5436)) (= x5436 (x2742 (+ x1793 x537))) (= x537 (x2742 (+ x3548 32)))) (not x353)) (and (=> x2597 x1683) (=> (and (and (= x2768 x5601) (= 1 x3621) (= x786 x4244) (= x4213 x158) (= x2992 x80) (= x1519 x470) (= x4169 x4323) (= x3994 x3392) (= x1721 x3602) (= x107 x2265) (= x5248 x4440) (= x716 x4666) (= x4190 x1252) (= x4647 x1412)) (not x2597)) x1493))) (=> x353 x2965))))))) (=> x3558 x1683))))) (=> (not x5268) x4367))))))))) (=> (not x2910) x4367))))))) (=> (and (and (= x1412 x3110) (= 0 x1674) (= x80 x5147) (= x2265 x3236) (= x2327 x5601) (= x4323 x4938) (= x803 x3602) (= x838 x470) (= x1386 x786) (= x1252 x4086) (= x1348 x4213) (= x2438 x5248) (= x1725 x3994) (= x716 x1751)) (not x4954)) x2253))) (=> (and (and (= false x857) (= x1341 true) (= x4973 0)) x1551) x4983))) (=> (and x461 (and (= 100 x4973) (= x2062 false) (= x4302 true) (= x1007 (x2742 (+ x2418 32))) (= x2418 (x2742 (+ 4 x2731))) (= x3524 (x2742 (+ x1007 32))))) x4983))))) x5646))
(assert (x5553 x952))
(assert (x5553 x1232))
(assert (= (x1514 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914)) x1914))
(assert (x5553 x3491))
(assert (= (or (and x937 x5519) (and x2701 x3032) (and x4811 x1977)) x5001))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x5501 x4243)))
(assert (x5553 x2561))
(assert (= (x5051 x1600) (x5051 (+ x1600 2))))
(assert (x5553 x3506))
(assert (=> (<= x3103 10000) (= (x5051 x3103) 0)))
(assert (x5553 x5453))
(assert (x5553 x5398))
(assert (x5553 x3420))
(assert (x5553 x571))
(assert (x5553 x1168))
(assert (not (x4435 (x4266 64 x5630 36))))
(assert (x5553 x3324))
(assert (x5553 x5264))
(assert (> (x269 x5613 x2030 x3675 x2352) 10000))
(assert (x5553 x3422))
(assert (not (x4435 (x5009 x3137 x4245))))
(assert (x5553 x5234))
(assert (x121 x2947))
(assert (not (x4435 (x3789 x1098 x2878 x5015 x4295 x4143))))
(assert (x5553 x4222))
(assert (=> (<= x2650 10000) (= 0 (x5051 x2650))))
(assert (= x1755 (=> (and (= x3768 (not (> x126 224))) (= (x2014 x3586) x940)) (and x891 x3768))))
(assert (> (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092) 10000))
(assert (x5553 x4702))
(assert (x5553 x1583))
(assert (x5553 x207))
(assert (= (x5051 (x4266 64 x4216 10)) (x4266 64 x4216 10)))
(assert (x5553 x2903))
(assert (x5553 x4640))
(assert (= (x4160 (x4266 64 x2382 2)) 2))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 32 103)))
(assert (= (x5051 (x5009 32 x4931)) (x5009 32 x4931)))
(assert (x5553 x1055))
(assert (x5553 x2317))
(assert (= (=> (and (= x5451 (+ x1851 1)) (= x3994 x3498) (= x470 x2598) (= x87 x4213) (= x2265 x1492) (= x5415 x5601) (= 0 x1172) (= x2798 x1412) (= x5071 x3602) (= x354 true) (= x2781 x1252) (= x80 x5342) (= x2918 false) (= x4323 x4509) (= x3583 2) (= x1956 x5248) (= x716 (+ 1 x1851)) (= x2920 0) (= x4649 x786)) x104) x3521))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x5266 x2598))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x4248 (ite (= x1855 0) x3081 (ite (<= x1855 32) x322 (ite (<= x1855 64) x5477 (ite (<= x1855 96) x3025 (ite (>= 128 x1855) x2729 (ite (<= x1855 160) x4313 (ite (>= 192 x1855) x697 (ite (>= 224 x1855) x2883 x3375)))))))))))
(assert (x5553 x3501))
(assert (= (x894 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)) x85))
(assert (x5553 x4286))
(assert (=> (<= x3632 10000) (= (x5051 x3632) 0)))
(assert (= (x4160 (x4266 64 x3073 12)) 12))
(assert (not (x4435 (x3789 x2434 x3433 x4948 x1572 x2544))))
(assert (= (=> (= x2474 (+ x993 292)) x5151) x643))
(assert (= x4019 (=> (= (+ x1728 x895) x583) x1715)))
(assert (x5553 x2837))
(assert (= (=> (= (= 0 x2733) x2362) (and (=> (not x2362) x358) (=> (and (= 1 x2733) x2362) x3966))) x1953))
(assert (= (x1228 x5501 x1182 x866 x2425 x4330 x4688) (x5051 (x1228 x5501 x1182 x866 x2425 x4330 x4688))))
(assert (x5553 x2772))
(assert (= x4328 (or x3005 x3017)))
(assert (= x3676 (and x3393 (not x3191))))
(assert (= (and x5537 (not x4681)) x3923))
(assert (x5553 x4297))
(assert (> (x5009 32 103) 10000))
(assert (x5553 x1674))
(assert (x1779 x2643))
(assert (= x1828 (x3238 (x4266 64 x1828 10))))
(assert (=> (>= 10000 x724) (= (x5051 x724) 0)))
(assert (x111 x5141))
(assert (x5553 x2291))
(assert (x5553 x5629))
(assert (= (x894 (x4266 64 x2382 36)) 64))
(assert (= (=> (and (= x360 (not (> x5088 32))) (= x2080 (x2839 x281))) (and x360 (=> (= x1984 32) x5016))) x3063))
(assert (= x4005 (x894 (x269 x4005 x99 x921 x2321))))
(assert (= (and x3292 (not x1230)) x4139))
(assert (< (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x269 x530 x3934 x3802 x4017) (x5051 (x269 x530 x3934 x3802 x4017))))
(assert (= (x1514 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142)) x5142))
(assert (= x1136 (and (not x4444) x595)))
(assert (< 10000 (x4266 64 x4708 36)))
(assert (x1779 x4060))
(assert (= (and x3039 x5564) x937))
(assert (= (x4160 (x4266 64 x484 36)) 36))
(assert (not (x4435 (x3789 x5613 x4818 x3523 x3488 x2921))))
(assert (= x5487 (x3238 (x4266 64 x5487 6))))
(assert (x5553 x1516))
(assert (=> (<= x5023 10000) (= (x5051 x5023) 0)))
(assert (x5553 x4964))
(assert (x5553 x3446))
(assert (= 64 (x894 (x4266 64 x4443 36))))
(assert (x5553 x3659))
(assert (= x530 (x894 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445))))
(assert (x5553 x2503))
(assert (=> (<= x907 10000) (= (x5051 x907) 0)))
(assert (x5553 x3079))
(assert (x5553 x5147))
(assert (x5553 x2096))
(assert (x5553 x4355))
(assert (x5553 x173))
(assert (= x1699 (and x3089 x2827)))
(assert (> (x5009 x3525 x53) 10000))
(assert (x5553 x3523))
(assert (= (x894 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336)) x5501))
(assert (= x5026 (x4160 (x269 x3525 x4566 x5026 x1254))))
(assert (=> (>= 10000 x4812) (= (x5051 x4812) 0)))
(assert (x4435 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (< (x485 x286 x63 x2537 x401 x1054 x2048 x4601) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5259 (and (not x2898) x5073)))
(assert (x5553 x1972))
(assert (=> (>= 10000 x2321) (= (x5051 x2321) 0)))
(assert (= x597 (or x3948 x1859)))
(assert (x5553 x3687))
(assert (x5553 x3145))
(assert (= x2033 (x5346 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638))))
(assert (x5553 x495))
(assert (x5553 x5115))
(assert (= (x5051 (x4266 64 x5024 36)) (x4266 64 x5024 36)))
(assert (x5553 x2082))
(assert (x1779 x2648))
(assert (> (x4266 64 x3273 36) 10000))
(assert (x5553 x1865))
(assert (x5553 x3192))
(assert (x5553 x4917))
(assert (= x2967 (and x5272 x890)))
(assert (x5553 x675))
(assert (x5553 x2608))
(assert (=> (<= x1537 10000) (= (x5051 x1537) 0)))
(assert (x5553 x4664))
(assert (= (x3238 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473)) x2121))
(assert (= 64 (x894 (x4266 64 x3702 3))))
(assert (x5553 x4679))
(assert (x5553 x2385))
(assert (x5553 x1400))
(assert (= (and x3332 x3098) x4316))
(assert (= x366 (x1514 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366))))
(assert (x5553 x2289))
(assert (= (x3238 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336)) x976))
(assert (> (x4266 64 x5630 36) 10000))
(assert (< 10000 (x1228 x5501 x1182 x866 x2425 x4330 x4688)))
(assert (= (x5009 x2434 x2244) (x5051 (x5009 x2434 x2244))))
(assert (= (x3238 (x4266 64 x5630 36)) x5630))
(assert (not (x4435 (x4266 64 x4140 11))))
(assert (= x2147 (x722 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736))))
(assert (not (x4435 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325))))
(assert (not (x4435 (x3789 x610 x2516 x3169 x3223 x3267))))
(assert (x5553 x1371))
(assert (x5553 x2616))
(assert (x5553 x4458))
(assert (= x724 (x722 (x269 x1966 x1684 x225 x724))))
(assert (x5553 x1952))
(assert (= (x1514 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325)) x325))
(assert (= x1431 (=> (and (= (x2742 (+ x2638 x1639)) x5461) (= x3612 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3047)) (= (x4395 (- x2749 x4770)) x2318) (= x3047 (x2742 (+ x2638 31))) (= (x4398 x4115) x4475) (= x339 (x2742 (+ 32 x3059))) (= x1958 (< 0 x4475)) (= (x2742 (+ x1639 x3612)) x2749)) (and (=> (not x1958) x1902) (=> (and (= x580 (< 32 x4475)) x1958) (and (=> (not x580) x1902) (=> (and (= (> x4475 64) x4556) x580) (and (=> (not x4556) x1902) (=> (and x4556 (= x649 (> x4475 96))) (and (=> (not x649) x1902) (=> x649 x4376)))))))))))
(assert (x5553 x2358))
(assert (=> (>= 10000 x671) (= (x5051 x671) 0)))
(assert (x5553 x4418))
(assert (x5553 x3695))
(assert (x5553 x1833))
(assert (> (x4266 64 x2928 1) 10000))
(assert (x5553 x3728))
(assert (< 10000 (x4266 64 x484 36)))
(assert (= (x894 (x1228 x1855 x2935 x2740 x2157 x4851 x3650)) x1855))
(assert (= (x1514 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)) x3638))
(assert (> (x4266 64 x5630 2) 10000))
(assert (= 64 (x894 (x4266 64 x3511 6))))
(assert (x5553 x765))
(assert (= (x894 (x3789 x4005 x4717 x294 x5499 x3258)) x4005))
(assert (= (x40 (x1228 x1004 x3020 x2102 x388 x3489 x1127)) x1127))
(assert (not (x4435 (x4266 64 x1464 10))))
(assert (x5553 x828))
(assert (=> (>= 10000 x2304) (= 0 (x5051 x2304))))
(assert (x5553 x2894))
(assert (= (x5346 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) x4073))
(assert (x5553 x1283))
(assert (x5553 x2957))
(assert (x1779 x4734))
(assert (= (x3238 (x5009 32 x1587)) x1587))
(assert (= (and (not x1887) x2242) x1832))
(assert (< (x4266 64 x2650 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x2586))
(assert (x5553 x3683))
(assert (=> (<= x1966 10000) (= (x5051 x1966) 0)))
(assert (= (x5051 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787)) (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787)))
(assert (x5553 x4733))
(assert (x5553 x953))
(assert (=> (<= x1254 10000) (= 0 (x5051 x1254))))
(assert (=> (<= x2341 10000) (= 0 (x5051 x2341))))
(assert (x5553 x1075))
(assert (< (x4266 x1855 x5144 x3036) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3770))
(assert (=> (<= x5189 10000) (= 0 (x5051 x5189))))
(assert (x5553 x3388))
(assert (x5553 x1061))
(assert (= (x894 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092)) x2358))
(assert (=> (<= x2699 10000) (= (x5051 x2699) 0)))
(assert (= (=> (= x180 x4708) x2287) x2473))
(assert (x5553 x2148))
(assert (x5553 x4927))
(assert (= (=> (and (= x847 x578) (= x3990 x2232) (= x1843 x2619) (= x994 x624) (= x1129 x3610) (= x1489 x1680) (= x4571 x837) (= x4037 x1361) (= x2930 x843) (= x4305 x4059) (= x800 x2027) (= x4736 x3490) (= x495 x1346)) x3739) x788))
(assert (x5553 x573))
(assert (< 10000 (x4266 64 x4123 36)))
(assert (= (and x1364 x576) x1900))
(assert (=> (<= x2544 10000) (= (x5051 x2544) 0)))
(assert (x5553 x970))
(assert (= (x894 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598)) x4283))
(assert (= x1709 (=> (and (= x2872 (not (< 224 x1510))) (= x804 (x2014 x1025))) (and x2872 x683))))
(assert (= (x3247 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510)) x97))
(assert (x5553 x4700))
(assert (x5553 x4235))
(assert (not (x4435 (x5009 32 x434))))
(assert (x5553 x2318))
(assert (=> (>= 10000 x392) (= 0 (x5051 x392))))
(assert (x5553 x2556))
(assert (= (x4160 (x4266 64 x2766 (ite (= 0 x530) x4826 (ite (<= x530 32) x4936 (ite (>= 64 x530) x5563 (ite (<= x530 96) x1447 (ite (>= 128 x530) x3538 (ite (>= 160 x530) x1640 (ite (>= 192 x530) x4713 (ite (>= 224 x530) x1084 x1552)))))))))) (ite (= x530 0) x4826 (ite (>= 32 x530) x4936 (ite (>= 64 x530) x5563 (ite (<= x530 96) x1447 (ite (<= x530 128) x3538 (ite (<= x530 160) x1640 (ite (<= x530 192) x4713 (ite (<= x530 224) x1084 x1552))))))))))
(assert (not (x4435 (x3789 x2358 x4298 x3642 x3410 x4650))))
(assert (not (x4435 (x4266 64 x2836 10))))
(assert (=> (<= x4566 10000) (= (x5051 x4566) 0)))
(assert (= (x722 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) x4588))
(assert (x5553 x1513))
(assert (= x5004 (x3247 (x1228 x5530 x671 x845 x2168 x5004 x498))))
(assert (= x2068 (and x3706 (not x1259))))
(assert (= x2434 (x894 (x3789 x2434 x3433 x4948 x1572 x2544))))
(assert (= x3137 (x894 (x5009 x3137 x4245))))
(assert (x5553 x478))
(assert (x5553 x4894))
(assert (= (x894 (x3789 x2358 x4298 x3642 x3410 x4650)) x2358))
(assert (x5553 x1006))
(assert (= x435 (and x3776 x5241)))
(assert (< (x4266 x530 x5126 x1849) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x4292) (= 0 (x5051 x4292))))
(assert (x5553 x2402))
(assert (x5553 x976))
(assert (= x3982 (x3238 (x1228 x3137 x3982 x1109 x209 x5082 x1165))))
(assert (= (x3247 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135)) x588))
(assert (= (x894 (x269 x2434 x3305 x5562 x1976)) x2434))
(assert (x5553 x3563))
(assert (=> (<= x2466 10000) (= 0 (x5051 x2466))))
(assert (x5553 x2019))
(assert (x5553 x3156))
(assert (= (and x320 x1066) x3726))
(assert (= (x722 (x3789 x286 x2817 x3102 x4130 x3436)) x4130))
(assert (x5553 x1370))
(assert (x5553 x3375))
(assert (x5553 x3697))
(assert (x5553 x4073))
(assert (= (and x3778 x1631) x1717))
(assert (x5553 x4822))
(assert (x5553 x2269))
(assert (=> (>= 10000 x5473) (= (x5051 x5473) 0)))
(assert (x5553 x800))
(assert (= x5557 (x4160 (x269 x693 x1125 x5557 x1035))))
(assert (= x3066 (x40 (x1228 x2434 x1862 x1112 x541 x3398 x3066))))
(assert (x5553 x2353))
(assert (= (or (and x1485 x1388) (and x5304 x2539)) x1090))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x1004 x905 x573)))
(assert (x5553 x3756))
(assert (x5553 x2147))
(assert (x5553 x1117))
(assert (x5553 x55))
(assert (=> (>= 10000 x3791) (= 0 (x5051 x3791))))
(assert (=> (>= 10000 x39) (= 0 (x5051 x39))))
(assert (x5553 x3433))
(assert (< (x5009 x1004 x347) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x894 (x4266 64 x5487 6)) 64))
(assert (x121 x557))
(assert (x5553 x1348))
(assert (x5553 x2112))
(assert (> (x3789 x693 x2627 x5180 x3492 x3026) 10000))
(assert (not (x4435 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273))))
(assert (x5553 x3868))
(assert (< 10000 (x5009 32 104)))
(assert (= (=> (and (= x2353 (x124 x3411)) (>= x2353 1) (= (= 0 x531) x3873) (<= x2353 255) (= (x4266 64 x1464 10) x3411)) (and (=> (and (not x3873) (and (or (and (and (= false x4986) (= 36 x1279) (= x3419 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= (x4762 x4684) x483) (= x984 false) (= x4684 x5342) (= false x2866) (<= x5342 1461501637330902918203684832716283019655932542975) (<= x5087 127) (= x3763 x5071) (= x173 310283853) (>= 127 x5087) (<= 1 x483) (<= 1 x5342) (= x4914 false)) (not x4555)) (and (and (= (x4762 x819) x4910) (= false x1974) (= false x4173) (= 310283853 x4771) (= x263 x477) (= x263 x5071) (= (* 1000000000 x5071) x41) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x4047) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x5071) (= x5617 x41) (= x5265 false) (<= x3224 127) (= x466 false) (<= 1 x4910) (= x2317 36) (>= 127 x3224)) x4555)) (and (= (= x819 x5342) x4555) (>= 1461501637330902918203684832716283019655932542975 x5342) (= x3704 128)))) x4414) (=> (and (and (and (= 128 x1089) (= x3099 (= x819 x5342)) (>= 1461501637330902918203684832716283019655932542975 x5342)) (or (and (and (= x5312 x5071) (= 310283853 x1496) (= false x3034) (>= 127 x3988) (= x5342 x4684) (= false x3587) (<= x5342 1461501637330902918203684832716283019655932542975) (<= 1 x3917) (= false x4576) (= false x2284) (= x4280 36) (<= 1 x5342) (>= 127 x3988) (= x3364 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x3917 (x4762 x4684))) (not x3099)) (and x3099 (and (>= 127 x5303) (= false x1082) (= 310283853 x5421) (= x906 x2141) (= (* 1000000000 x5071) x1186) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x5071) (= x4880 x1186) (= false x165) (= x2496 false) (= x3189 (x4762 x819)) (= 36 x1813) (= x3368 false) (<= x5303 127) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x1006) (= x5071 x2141) (>= x3189 1))))) x3873) x1239))) x5317))
(assert (x121 x1124))
(assert (= (and x3329 (not x4438)) x4253))
(assert (x5553 x119))
(assert (x5553 x3660))
(assert (= (and x2787 x1817) x4848))
(assert (x5553 x3124))
(assert (= (x4266 64 x1707 7) (x5051 (x4266 64 x1707 7))))
(assert (x5553 x814))
(assert (x5553 x1027))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x5613 x5274 x3895 x2978 x2944 x1312)))
(assert (x5553 x3326))
(assert (= (x5051 (x1228 x286 x1219 x5302 x3589 x4897 x4255)) (x1228 x286 x1219 x5302 x3589 x4897 x4255)))
(assert (= (x4160 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947)) x2977))
(assert (= x4295 (x722 (x3789 x1098 x2878 x5015 x4295 x4143))))
(assert (= (x722 (x1228 x1966 x2083 x4104 x1865 x2530 x2341)) x1865))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x4480 12)))
(assert (=> (<= x1109 10000) (= 0 (x5051 x1109))))
(assert (x5553 x2811))
(assert (x5553 x3006))
(assert (=> (<= x4243 10000) (= (x5051 x4243) 0)))
(assert (> (x4266 x1855 x5144 x3036) 10000))
(assert (x5553 x4654))
(assert (=> (<= x3494 10000) (= (x5051 x3494) 0)))
(assert (= x2627 (x3238 (x3789 x693 x2627 x5180 x3492 x3026))))
(assert (x5553 x1372))
(assert (= (and (not x381) x4727) x4391))
(assert (< 10000 (x4266 64 x3511 6)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x1597 3)))
(assert (= (x5051 29244376827073035548771643948814531551534385112760475998805679327281764368384) 0))
(assert (< 10000 (x4266 x4005 x4465 x1714)))
(assert (x5553 x5484))
(assert (= (and x4363 x4388) x2017))
(assert (= x3997 (and x2484 x5291)))
(assert (x5553 x4251))
(assert (x5553 x546))
(assert (= (x4160 (x269 x610 x5215 x1472 x297)) x1472))
(assert (x5553 x3447))
(assert (x5553 x1380))
(assert (> (x269 x2443 x3830 x1931 x5230) 10000))
(assert (x111 x3283))
(assert (= x946 (and x3515 x2468)))
(assert (< 10000 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661)))
(assert (x5553 x3824))
(assert (< (x269 x85 x3183 x729 x2972) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5154))
(assert (not (x4435 (x1228 x4283 x5337 x2668 x338 x5234 x3122))))
(assert (x5553 x2972))
(assert (= x2786 (or x3971 x74)))
(assert (x5553 x174))
(assert (=> (<= x3307 10000) (= 0 (x5051 x3307))))
(assert (= x2110 (x3247 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914))))
(assert (x5553 x5248))
(assert (x5553 x2833))
(assert (x5553 x1188))
(assert (x5553 x3954))
(assert (x5553 x2807))
(assert (= (=> (and (= x1475 (= 0 x5386)) (or (and x1475 (and (<= x1498 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x4899 128) x1194) (= false x711) (= 354 x4484) (= x1498 x1162) (= x773 (= (x4107 164) 64)) (= (x3928 128) x2867) (= x1397 0) (= (x4395 (- x3460 290)) x1162) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x2243) x2259 (= (x3928 160) x1164) (= (+ x5545 292) x3927) (= (x2742 (+ x780 32)) x4339) (= (x2518 164) x412) (= x5621 290) (= x4736 x653) (= 0 x3051) (= x4043 (= (x4107 228) (x4366 518))) (>= x4966 1) (= (+ x412 196) x123) (= (x2742 (+ x1194 31)) x4643) x3396 (= (x4395 (- x780 294)) x1403) (= (= (x4107 260) 34) x2259) (= 160 x2117) (= x1583 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4643)) (not (< x1498 x3927)) (= x780 (x2742 (+ 486 x1583))) (= x3759 (x3928 160)) (= x1627 false) (<= 356 x1498) (<= x5545 18446744073709551615) (>= 18446744073709551615 x412) (= false x2850) (= x4489 256) x4043 (>= 127 x3896) (= (x3928 128) x5050) x773 (= x2928 x4095) (= x5403 x2373) (= (x4762 x3819) x4966) (= (x2742 (+ x4339 x3136)) x3460) (<= x1162 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 356 x1162) (= (x2518 260) x5545) (= (x2742 (+ x474 31)) x3765) (= (= (x4366 486) (x4107 196)) x3396) (= false x3727) (= x3136 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3765)) (not (< x1498 x123)) (<= x3896 127) (= x474 (x3898 224)) (= (x1150 322) x1385) (= 1084734224 x1566) (= (x1150 290) x5403))) (and (not x1475) (and (= x2373 x5386) (= x4484 128))))) x4405) x2198))
(assert (=> (>= 10000 x4721) (= 0 (x5051 x4721))))
(assert (x5553 x1440))
(assert (x5553 x4109))
(assert (= (and x1551 x2677) x4550))
(assert (x5553 x5220))
(assert (x5553 x4180))
(assert (< (x269 x693 x1125 x5557 x1035) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3912))
(assert (x5553 x4181))
(assert (not (x4435 (x269 x1004 x4085 x5592 x4629))))
(assert (not (x4435 (x4266 x1098 x4250 x4165))))
(assert (x5553 x2882))
(assert (= (x1228 x5613 x5274 x3895 x2978 x2944 x1312) (x5051 (x1228 x5613 x5274 x3895 x2978 x2944 x1312))))
(assert (x5553 x986))
(assert (x5553 x5153))
(assert (= (=> (and (= x3354 x87) (= x5363 x5342) (= x5181 x2119) (= x676 x3498) (= x1426 x2798) (= x594 x5071) (= x4649 x2706) (= x981 x5292) (= x1626 x4404) (= x3671 x387) (= x3441 x4369) (= x2781 x3320) (= x367 x4680)) x5112) x3263))
(assert (x5553 x3126))
(assert (x5553 x2342))
(assert (x5553 x3810))
(assert (x5553 x2110))
(assert (= x1223 (x40 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134))))
(assert (=> (<= x1054 10000) (= 0 (x5051 x1054))))
(assert (x5553 x3819))
(assert (= (and (not x2871) x2713) x4368))
(assert (> (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325) 10000))
(assert (=> (>= 10000 x3169) (= 0 (x5051 x3169))))
(assert (= (and x2303 x1681) x2439))
(assert (= (=> (= x4596 (+ x1187 x3382)) x4081) x1737))
(assert (= (x3238 (x4266 64 x2928 2)) x2928))
(assert (x5553 x50))
(assert (x5553 x5229))
(assert (x5553 x854))
(assert (= (x4266 64 x2755 36) (x5051 (x4266 64 x2755 36))))
(assert (x5553 x3829))
(assert (=> (>= 10000 x693) (= 0 (x5051 x693))))
(assert (= (x894 (x4266 64 x999 11)) 64))
(assert (not (x4435 (x4266 64 x1515 12))))
(assert (x5553 x3021))
(assert (x5553 x705))
(assert (x5553 x4695))
(assert (not (x4435 (x4266 64 x5630 6))))
(assert (x5553 x4369))
(assert (= (x722 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273)) x1951))
(assert (x5553 x4781))
(assert (x5553 x216))
(assert (x5553 x4423))
(assert (x5553 x1322))
(assert (=> (>= 10000 x2829) (= 0 (x5051 x2829))))
(assert (=> (>= 10000 x3987) (= (x5051 x3987) 0)))
(assert (= 0 (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (< 10000 (x3789 x610 x2516 x3169 x3223 x3267)))
(assert (=> (>= 10000 x3557) (= 0 (x5051 x3557))))
(assert (x5553 x3962))
(assert (x121 x4572))
(assert (x5553 x28))
(assert (x5553 x4354))
(assert (< 10000 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677)))
(assert (=> (<= x297 10000) (= (x5051 x297) 0)))
(assert (x5553 x1563))
(assert (= (or x1156 x4210) x3060))
(assert (< 10000 (x4266 x5613 x3800 x4581)))
(assert (x5553 x2336))
(assert (x5553 x5197))
(assert (= (x3238 (x5009 x3137 x4245)) x4245))
(assert (x5553 x462))
(assert (x5553 x3425))
(assert (=> (>= 10000 x5584) (= 0 (x5051 x5584))))
(assert (x5553 x5302))
(assert (=> (>= 10000 x4692) (= (x5051 x4692) 0)))
(assert (=> (>= 10000 x2447) (= 0 (x5051 x2447))))
(assert (x5553 x3656))
(assert (= (x3238 (x4266 x286 x2029 x1632)) x2029))
(assert (= x2559 (x4160 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535))))
(assert (= x1659 (or x1354 x5632)))
(assert (=> (>= 10000 x3022) (= 0 (x5051 x3022))))
(assert (< (x4266 64 x4008 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4652))
(assert (= x725 (x5346 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344))))
(assert (= (x5051 (x4266 64 x4920 (ite (= x2443 0) x2605 (ite (>= 32 x2443) x2853 (ite (<= x2443 64) x1644 (ite (>= 96 x2443) x3251 (ite (>= 128 x2443) x155 (ite (>= 160 x2443) x2570 (ite (>= 192 x2443) x1592 (ite (<= x2443 224) x5315 x3053)))))))))) (x4266 64 x4920 (ite (= x2443 0) x2605 (ite (>= 32 x2443) x2853 (ite (>= 64 x2443) x1644 (ite (>= 96 x2443) x3251 (ite (<= x2443 128) x155 (ite (>= 160 x2443) x2570 (ite (<= x2443 192) x1592 (ite (>= 224 x2443) x5315 x3053)))))))))))
(assert (x5553 x2961))
(assert (= x2781 (x3238 (x4266 64 x2781 4))))
(assert (x5553 x3382))
(assert (= x3518 (=> (= x3113 (+ x1696 292)) x2234)))
(assert (= (x3247 (x3789 x1966 x2269 x3334 x1405 x4054)) x4054))
(assert (x5553 x3045))
(assert (=> (<= x5021 10000) (= 0 (x5051 x5021))))
(assert (x5553 x2266))
(assert (= (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157) (x5051 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157))))
(assert (= x1456 (x3238 (x3789 x5501 x1456 x5366 x1537 x3951))))
(assert (x5553 x3865))
(assert (x5553 x533))
(assert (= (x1228 x2434 x1862 x1112 x541 x3398 x3066) (x5051 (x1228 x2434 x1862 x1112 x541 x3398 x3066))))
(assert (x5553 x5195))
(assert (x5553 x4207))
(assert (= x4931 (x3238 (x5009 32 x4931))))
(assert (= (x3238 (x269 x286 x3325 x3791 x1325)) x3325))
(assert (= x4662 x1661))
(assert (x5553 x268))
(assert (= (x5051 (x5009 x2385 x3860)) (x5009 x2385 x3860)))
(assert (=> (<= x401 10000) (= (x5051 x401) 0)))
(assert (=> (>= 10000 x3203) (= (x5051 x3203) 0)))
(assert (x5553 x3566))
(assert (x5553 x3990))
(assert (= x85 (x894 (x5009 x85 x330))))
(assert (x5553 x5002))
(assert (=> (<= x678 10000) (= (x5051 x678) 0)))
(assert (x5553 x2479))
(assert (not (x4435 (x4266 64 x2766 (ite (= x530 0) x4826 (ite (<= x530 32) x4936 (ite (>= 64 x530) x5563 (ite (<= x530 96) x1447 (ite (>= 128 x530) x3538 (ite (<= x530 160) x1640 (ite (<= x530 192) x4713 (ite (>= 224 x530) x1084 x1552))))))))))))
(assert (= (x4266 x1004 x905 x573) (x5051 (x4266 x1004 x905 x573))))
(assert (= x1121 (=> (and (= x5330 (x4421 x5582)) (not (> x4781 x4832)) (= 192 x1323) (<= x2595 127) (= x249 (x3448 x2928)) (= x5264 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= (x1950 x4484) x5381) (= x2995 (x1093 x495)) (= x1362 3313512704) (= (x2742 (+ 32 x3153)) x3062) (= (+ x2755 1) x684) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1465) (= x219 (x2742 (+ x3062 32))) (= (x2742 (+ x4350 x5027)) x4134) (= (x2742 (+ 192 x4027)) x4124) x3937 (= x4636 (x3096 x3918)) (>= 127 x2595) (<= x3358 18446744073709551615) (= x1465 (+ x2373 x2995)) (= x2005 (x3448 x2928)) (= (+ 32 x3985 x889) x1985) (= x3682 false) (= x1391 x4736) (= x4781 (+ 32 x5619 x720)) (= (x2742 (+ x2586 32)) x3153) (= x3428 (x2742 (+ x5569 32))) (= x5027 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5336)) (= (x2742 (+ x4484 32)) x2040) (= (x1166 x5619) x720) (not (> x22 x4832)) (= x4055 (+ x5619 31)) (> x4832 x5474) (not (> x1985 x4832)) (= (+ 228 x2178) x22) (= x4832 x3821) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4832) (>= 18446744073709551615 x2178) (= x1124 (x2742 (+ 31 x4486))) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x856) x4522) (= x1598 (x3448 x495)) (= x1075 (x2742 (+ x4124 32))) (= x3358 (x4395 (- x5569 x4027))) (<= x2373 x2005) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1124) x3520) (= x2586 (x2742 (+ x1710 32))) (not (> x5381 x1185)) (= (x1950 x4484) x4486) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2995 x2373)) (= x3358 x1691) (>= x3821 420) (= (= x1 (x1756 196)) x3937) (= (x2742 (+ 31 x2579)) x5336) (>= x5115 1) (= x3625 x2712) (= (x2742 (+ x441 32)) x4350) (= x2231 (- x249 x2373)) (= x2178 (x1166 196)) (= x5474 (+ x3985 31)) (= x3985 (+ x3358 4)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1598 x2373)) (= (x4762 x3819) x5115) (= x5493 0) (< x4055 x4832) (= x5619 (+ 4 x2712)) (>= 18446744073709551615 x720) (= (x1166 x3985) x889) (<= 1 x3056) (= x2928 x4030) (<= x3821 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 1 x5330) (= x5566 (x2742 (+ x3978 32))) (= x2579 (x2072 x3978)) (= (x4762 x495) x3056) (= x710 x1465) (>= 18446744073709551615 x2712) (= (x2742 (+ 32 x4027)) x1710) (= x441 (x2742 (+ x3520 x3428))) (= (x4266 64 x4736 5) x3918) (= x789 false) (<= x889 18446744073709551615) (= (x2742 (+ x1378 4)) x4027) (= x5569 (x2742 (+ x1075 x4522))) (<= 0 x1465) (= (x2742 (+ x1 31)) x856) (= (x4395 (- x4134 x1378)) x3821) (<= 420 x4832) (= (x4395 (- x441 x4027)) x2712) (= x1185 (ite (= 0 x4636) 10000 x4636)) (= (x4421 x5582) x1)) x1190)))
(assert (x5553 x2859))
(assert (x5553 x1420))
(assert (= x610 (x894 (x269 x610 x5215 x1472 x297))))
(assert (= (x722 (x3789 x2385 x3894 x3556 x3996 x3839)) x3996))
(assert (= (x3247 (x3789 x4283 x3013 x2354 x4853 x4379)) x4379))
(assert (= (x40 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473)) x4176))
(assert (not (x4435 (x4266 64 x1597 3))))
(assert (= (x5051 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366)) (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366)))
(assert (x5553 x3720))
(assert (= (x722 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535)) x1831))
(assert (< 10000 (x5009 32 x1587)))
(assert (= (x4266 64 x3273 36) (x5051 (x4266 64 x3273 36))))
(assert (x1779 x3379))
(assert (=> (>= 10000 x3579) (= 0 (x5051 x3579))))
(assert (= (x4160 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598)) x1666))
(assert (not (x4435 (x4266 64 x2755 36))))
(assert (= (x4160 (x4266 x1004 x905 x573)) x573))
(assert (= (x3247 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) x3030))
(assert (x4435 2770781680))
(assert (=> (>= 10000 x473) (= 0 (x5051 x473))))
(assert (x5553 x2257))
(assert (not (x4435 (x4266 x2358 x2552 x135))))
(assert (=> (<= x5038 10000) (= 0 (x5051 x5038))))
(assert (< (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x5051 18446744073709551615)))
(assert (x5553 x1843))
(assert (= x4727 (and (not x5247) x3593)))
(assert (not (x4435 (x4266 64 x4248 (ite (= x4005 0) x1220 (ite (<= x4005 32) x4371 (ite (>= 64 x4005) x892 (ite (>= 96 x4005) x4094 (ite (<= x4005 128) x3271 (ite (>= 160 x4005) x3619 (ite (<= x4005 192) x311 (ite (<= x4005 224) x4546 x437))))))))))))
(assert (x5553 x3804))
(assert (x4435 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x5553 x2611))
(assert (= x433 (and x4681 x5537)))
(assert (= (x3238 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092)) x2160))
(assert (=> (>= 10000 x2110) (= 0 (x5051 x2110))))
(assert (x5553 x9))
(assert (=> (<= x209 10000) (= 0 (x5051 x209))))
(assert (=> (>= 10000 x5480) (= 0 (x5051 x5480))))
(assert (=> (>= 10000 x530) (= 0 (x5051 x530))))
(assert (= x3958 (x4160 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510))))
(assert (x5553 x453))
(assert (=> (<= x1559 10000) (= (x5051 x1559) 0)))
(assert (x5553 x4725))
(assert (= (and (not x954) x1989) x4033))
(assert (= x5345 (and (not x4555) x2247)))
(assert (x5553 x5123))
(assert (x5553 x1685))
(assert (= (x3238 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)) x3804))
(assert (= (x894 (x4266 x530 x5126 x1849)) x530))
(assert (x5553 x880))
(assert (x5553 x286))
(assert (= 0 (x5051 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (x5553 x1002))
(assert (x5553 x2738))
(assert (x5553 x468))
(assert (x5553 x626))
(assert (x5553 x3123))
(assert (=> (>= 10000 x3819) (= (x5051 x3819) 0)))
(assert (x5553 x5611))
(assert (=> (<= x4690 10000) (= 0 (x5051 x4690))))
(assert (x5553 x5583))
(assert (=> (<= x828 10000) (= 0 (x5051 x828))))
(assert (x5553 x210))
(assert (= (and x1912 x1011) x754))
(assert (= (x5051 (x4266 64 x5202 11)) (x4266 64 x5202 11)))
(assert (= (x4266 64 x2836 10) (x5051 (x4266 64 x2836 10))))
(assert (x5553 x1451))
(assert (< 10000 (x3789 x2434 x3433 x4948 x1572 x2544)))
(assert (x5553 x5010))
(assert (= (and x2783 x3622) x2615))
(assert (x5553 x436))
(assert (x121 x5336))
(assert (x5553 x2593))
(assert (x5553 x2497))
(assert (= x2878 (x3238 (x3789 x1098 x2878 x5015 x4295 x4143))))
(assert (=> (<= x97 10000) (= (x5051 x97) 0)))
(assert (x5553 x2780))
(assert (= (or x4807 x2886) x1203))
(assert (=> (<= x2526 10000) (= (x5051 x2526) 0)))
(assert (x5553 x3759))
(assert (x5553 x5466))
(assert (=> (>= 10000 x2453) (= (x5051 x2453) 0)))
(assert (= (x3238 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405)) x1077))
(assert (x5553 x782))
(assert (= x2515 (x40 (x1228 x3525 x3124 x2682 x4476 x5480 x2515))))
(assert (x5553 x3883))
(assert (x4435 43931689107028929153831073962459296230956404255593708771276734084804920737792))
(assert (x5553 x5013))
(assert (= (x722 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405)) x3720))
(assert (x5553 x2764))
(assert (> (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445) 10000))
(assert (=> (>= 10000 x4688) (= (x5051 x4688) 0)))
(assert (= (x3238 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535)) x2669))
(assert (x5553 x5106))
(assert (x5553 x4601))
(assert (= (x894 (x4266 64 x1828 10)) 64))
(assert (x5553 x872))
(assert (= (x5051 106705613605932439001713296114446454776331749937047859905631657259250407702528) 0))
(assert (=> (>= 10000 x4143) (= 0 (x5051 x4143))))
(assert (x5553 x3144))
(assert (x5553 x1091))
(assert (= x4661 (or x397 x5442)))
(assert (=> (>= 10000 x3321) (= 0 (x5051 x3321))))
(assert (= (x40 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) x4804))
(assert (x5553 x3434))
(assert (= x1449 (and x1066 (not x320))))
(assert (x5553 x172))
(assert (= (or x3737 x1901) x755))
(assert (=> (<= x5215 10000) (= 0 (x5051 x5215))))
(assert (> (x269 x2358 x207 x1529 x4721) 10000))
(assert (x5553 x4860))
(assert (x5553 x2874))
(assert (= 64 (x894 (x4266 64 x5630 2))))
(assert (= (x5051 (x269 x5530 x1647 x980 x2699)) (x269 x5530 x1647 x980 x2699)))
(assert (x5553 x960))
(assert (x5553 x3996))
(assert (x5553 x1932))
(assert (x5553 x600))
(assert (= x3575 (or x2574 x730)))
(assert (x5553 x5499))
(assert (x5553 x2681))
(assert (x5553 x2990))
(assert (= 64 (x894 (x4266 64 1 x4794))))
(assert (x5553 x75))
(assert (not (x4435 (x269 x610 x5215 x1472 x297))))
(assert (x5553 x5149))
(assert (= (x5051 (x4266 64 x2781 4)) (x4266 64 x2781 4)))
(assert (x5553 x1013))
(assert (x5553 x906))
(assert (not (x4435 (x1228 x693 x923 x975 x3805 x3677 x841))))
(assert (x5553 x1981))
(assert (x1779 x557))
(assert (x5553 x285))
(assert (x5553 x3445))
(assert (x5553 x3753))
(assert (= x885 (=> (and (= x5580 (= 0 x2764)) (= x1826 (x2436 1 x1492)) (= (div x1492 2) x5141) (= x5453 (ite (< 0 x1826) x5141 (x2436 127 x5141))) (= x1187 (+ x2502 32)) (or (= x2952 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2952)) (= x2952 (x4395 (- x1826 (mod (ite (> 32 x5453) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2764 (x2436 1 x1492)) (= x3016 (- x2502 132))) (and (=> (and x5580 (and (= x4596 (+ x4400 x1187)) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1492) x708) (= (* 32 (ite (not (= x5453 0)) 1 0)) x4400) (or (= 0 x4400) (= x4400 32)))) x4081) (=> (and (and (= x304 (< 0 x5453)) (= x2864 (x5009 32 104))) (not x5580)) (and (=> (and (not x304) (= 0 x3382)) x1737) (=> x304 x1599)))))))
(assert (=> (>= 10000 x2194) (= (x5051 x2194) 0)))
(assert (x5553 x5591))
(assert (= x4002 (x3238 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598))))
(assert (< (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4593))
(assert (= (x5051 4294967295) 0))
(assert (= (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639773) 0))
(assert (= (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (=> (>= 10000 x1798) (= 0 (x5051 x1798))))
(assert (= 0 (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (x5553 x4249))
(assert (< 10000 (x3789 x5501 x1456 x5366 x1537 x3951)))
(assert (x5553 x3650))
(assert (= (x269 x5613 x2030 x3675 x2352) (x5051 (x269 x5613 x2030 x3675 x2352))))
(assert (= x1855 (x894 (x3789 x1855 x4793 x5161 x2447 x1968))))
(assert (x5553 x5532))
(assert (x5553 x1985))
(assert (x5553 x2373))
(assert (= (x3247 (x1228 x2358 x2475 x383 x2464 x3210 x5595)) x3210))
(assert (x5553 x3036))
(assert (x5553 x5188))
(assert (not (x4435 (x5009 x2385 x3860))))
(assert (=> (<= x2566 10000) (= 0 (x5051 x2566))))
(assert (= (and x4361 x4067) x931))
(assert (> (x4266 64 x1464 10) 10000))
(assert (= 2 (x4160 (x4266 64 x929 2))))
(assert (x5553 x3354))
(assert (x5553 x4145))
(assert (< (x5009 32 x4931) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2017 (not x947)) x5506))
(assert (< (x1228 x3137 x3982 x1109 x209 x5082 x1165) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1514 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787)) x1787))
(assert (x5553 x4280))
(assert (=> (<= x5335 10000) (= (x5051 x5335) 0)))
(assert (=> (<= x3445 10000) (= 0 (x5051 x3445))))
(assert (x5553 x2443))
(assert (= (x5051 x3590) (x5051 (+ x3590 1))))
(assert (= x2358 (x894 (x5009 x2358 x5413))))
(assert (x1779 x5227))
(assert (x5553 x539))
(assert (=> (<= x2932 10000) (= (x5051 x2932) 0)))
(assert (=> (>= 10000 x5503) (= (x5051 x5503) 0)))
(assert (x5553 x126))
(assert (x5553 x3498))
(assert (x5553 x5181))
(assert (x5553 x329))
(assert (= x3987 (x3247 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593))))
(assert (= x2469 (x3247 (x3789 x85 x140 x3477 x626 x2469))))
(assert (x5553 x5071))
(assert (= x1455 (and (not x4437) x1528)))
(assert (=> (>= 10000 x2707) (= (x5051 x2707) 0)))
(assert (< (x3789 x3137 x130 x1576 x2450 x5371) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4505))
(assert (x5553 x4509))
(assert (x5553 x4281))
(assert (x5553 x4274))
(assert (= 11 (x4160 (x4266 64 x4140 11))))
(assert (x5553 x1157))
(assert (x5553 x5562))
(assert (x5553 x2553))
(assert (= (and (not x4372) x2340) x2705))
(assert (=> (>= 10000 x3406) (= 0 (x5051 x3406))))
(assert (= (x5051 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914)) (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914)))
(assert (=> (>= 10000 x1714) (= (x5051 x1714) 0)))
(assert (=> (>= 10000 x2475) (= (x5051 x2475) 0)))
(assert (x5553 x2469))
(assert (x111 x4929))
(assert (=> (<= x579 10000) (= (x5051 x579) 0)))
(assert (x5553 x2823))
(assert (< (x4266 x4005 x4465 x1714) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3238 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661)) x4479))
(assert (x5553 x5413))
(assert (=> (>= 10000 x5630) (= (x5051 x5630) 0)))
(assert (x5553 x334))
(assert (= (x894 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384)) x3525))
(assert (x5553 x5109))
(assert (= x923 (x3238 (x1228 x693 x923 x975 x3805 x3677 x841))))
(assert (x5553 x4584))
(assert (x5553 x4606))
(assert (= (x3238 (x5009 x85 x330)) x330))
(assert (x5553 x213))
(assert (= (and (not x2675) x2241) x32))
(assert (x5553 x929))
(assert (= x5432 (or x4381 x5210)))
(assert (= x1273 (x722 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278))))
(assert (= (x722 (x1228 x1855 x2935 x2740 x2157 x4851 x3650)) x2157))
(assert (x5553 x4758))
(assert (=> (<= x5232 10000) (= 0 (x5051 x5232))))
(assert (< 10000 (x5009 x85 x330)))
(assert (< 10000 (x4266 64 x1851 100)))
(assert (=> (>= 10000 x3349) (= (x5051 x3349) 0)))
(assert (= x715 (x40 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850))))
(assert (= (=> (and (= (x4266 64 x4708 36) x1236) (= x3607 (x4263 x1236)) (= x24 (+ 1 x4708)) (= x2175 false) (= false x5344) (= (+ x4708 1) x3604) (<= x4708 254)) x901) x2287))
(assert (= (x40 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135)) x4812))
(assert (< (x5009 x3137 x4245) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5216))
(assert (x385 x2232))
(assert (x5553 x1433))
(assert (= x2849 (and x3220 x547)))
(assert (x5553 x1970))
(assert (= x3839 (x3247 (x3789 x2385 x3894 x3556 x3996 x3839))))
(assert (not (x4435 (x5009 x4283 x769))))
(assert (x5553 x1369))
(assert (= x2528 (or x2122 (and (not x2748) x4408))))
(assert (= (x5051 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092)) (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092)))
(assert (=> (<= x3535 10000) (= (x5051 x3535) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x286 x2817 x3102 x4130 x3436)))
(assert (not (x4435 (x4266 64 x5630 2))))
(assert (x5553 x3520))
(assert (x5553 x2036))
(assert (=> (<= x3906 10000) (= (x5051 x3906) 0)))
(assert (x5553 x803))
(assert (x5553 x4521))
(assert (x5553 x806))
(assert (= x5029 (or x13 x657)))
(assert (=> (>= 10000 x516) (= 0 (x5051 x516))))
(assert (x5553 x1298))
(assert (= (ite (= 0 x2443) x2605 (ite (>= 32 x2443) x2853 (ite (<= x2443 64) x1644 (ite (<= x2443 96) x3251 (ite (>= 128 x2443) x155 (ite (<= x2443 160) x2570 (ite (>= 192 x2443) x1592 (ite (<= x2443 224) x5315 x3053)))))))) (x4160 (x4266 64 x4920 (ite (= x2443 0) x2605 (ite (<= x2443 32) x2853 (ite (<= x2443 64) x1644 (ite (>= 96 x2443) x3251 (ite (>= 128 x2443) x155 (ite (>= 160 x2443) x2570 (ite (<= x2443 192) x1592 (ite (>= 224 x2443) x5315 x3053))))))))))))
(assert (x5553 x4278))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x1855 x3349 x3751 x2410)))
(assert (= (x4266 x286 x2029 x1632) (x5051 (x4266 x286 x2029 x1632))))
(assert (x5553 x2305))
(assert (= x3639 (and x4256 x4518)))
(assert (x5553 x2114))
(assert (= x4516 (x3238 (x5009 x1855 x4516))))
(assert (= (x3238 (x4266 x85 x2505 x2057)) x2505))
(assert (> (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336) 10000))
(assert (= (x3238 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273)) x552))
(assert (= (and x621 (not x2966)) x1354))
(assert (x5553 x4142))
(assert (= x5593 (x1514 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593))))
(assert (= 36 (x4160 (x4266 64 x4443 36))))
(assert (= (x5051 2770781680) 0))
(assert (x5553 x1338))
(assert (x5553 x3583))
(assert (not (x4435 (x3789 x85 x140 x3477 x626 x2469))))
(assert (x5553 x1115))
(assert (x5553 x1598))
(assert (not (x4435 (x4266 64 x4708 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x693 x5222)))
(assert (x5553 x3671))
(assert (x5553 x484))
(assert (= (x5051 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278)) (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278)))
(assert (= (and (not x1977) x4811) x1905))
(assert (x5553 x4919))
(assert (x5553 x4938))
(assert (= x1098 (x894 (x1228 x1098 x3372 x3272 x4492 x1282 x3321))))
(assert (x5553 x3442))
(assert (not (x4435 (x269 x1098 x5454 x1584 x3052))))
(assert (< 10000 (x4266 64 x801 10)))
(assert (= x2574 (and x5397 x635)))
(assert (x5553 x4910))
(assert (x5553 x3438))
(assert (x1779 x2139))
(assert (x5553 x1918))
(assert (= (and x3373 x4757) x2783))
(assert (x5553 x5163))
(assert (=> (<= x929 10000) (= 0 (x5051 x929))))
(assert (x5553 x2797))
(assert (= x3477 (x4160 (x3789 x85 x140 x3477 x626 x2469))))
(assert (x5553 x1270))
(assert (= x2713 (and x965 x3217)))
(assert (x5553 x4748))
(assert (< (x4266 64 x1068 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1893))
(assert (not (x4435 (x269 x286 x3325 x3791 x1325))))
(assert (x5553 x3195))
(assert (= x5022 (x4160 (x4266 x1966 x4625 x5022))))
(assert (=> (>= 10000 x1831) (= (x5051 x1831) 0)))
(assert (x5553 x3055))
(assert (x5553 x4883))
(assert (=> (<= x1464 10000) (= 0 (x5051 x1464))))
(assert (x5553 x4415))
(assert (< (x5009 x530 x2144) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x894 (x4266 64 x2536 12)) 64))
(assert (=> (<= x3582 10000) (= 0 (x5051 x3582))))
(assert (x5553 x5061))
(assert (x5553 x2030))
(assert (= (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593) (x5051 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593))))
(assert (not (x4435 (x4266 64 1 x3090))))
(assert (x5553 x4780))
(assert (= x5352 (and (not x877) x18)))
(assert (= (x894 (x5009 x1855 x4516)) x1855))
(assert (= x3966 (=> (and (= (div (+ 31 x191) 32) x1830) (= x886 (div (+ x1098 31) 32)) (<= x5310 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x465 (x2742 (+ x872 32))) (= x2089 (x4578 x872)) (= x328 (x2742 (+ x1470 x191))) (= (* 32 x1830) x3461) (= (* 32 x886) x5254) (> x5310 x872) (= (x2742 (+ x2456 32)) x3374) (= x2456 (x2742 (+ x5325 128))) (<= x872 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x5310 (x2742 (+ (mod (+ 32 x5254) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x872))) (= x1470 (x2742 (+ 32 x5310))) (<= 1 x5310) (<= x872 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x2742 (+ x465 x1098)) x5153) (= x4437 (> x2089 0)) (= x2221 (x2742 (+ x5310 (mod (+ 32 x3461) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x872) (= 150 x4590) (< x5310 x2221) (<= 2 x2221) (= (x2742 (+ 36 x2221)) x5325) (= (x2742 (+ x5325 32)) x301)) (and (=> (and x4437 (and (= x5109 (x2335 x465)) (= x5239 (> x2089 32)))) (and (=> (and (and (= (x2742 (+ x3374 32)) x691) (= x3217 (< 64 x2089)) (= (x936 x3981) x1778) (= x3981 (x2742 (+ 32 x465)))) x5239) (and (=> (not x3217) x945) (=> (and x3217 (and (= x4429 (x2742 (+ x3374 64))) (= x4608 (x2742 (+ x465 64))) (= (> x2089 96) x2871) (= (x2562 x4608) x92))) (and (=> x2871 x2596) (=> (not x2871) x945))))) (=> (not x5239) x945))) (=> (not x4437) x945)))))
(assert (x5553 x3927))
(assert (= (x894 (x4266 64 x2382 6)) 64))
(assert (x5553 x5015))
(assert (= (x894 (x4266 64 x1597 7)) 64))
(assert (x5553 x1426))
(assert (x5553 x5448))
(assert (x5553 x4851))
(assert (= (or (and x3182 x1809) x2770 x1102 x2087 x4326 (and x1508 x5053) x5001) x695))
(assert (x5553 x4812))
(assert (= x2244 (x3238 (x5009 x2434 x2244))))
(assert (x5553 x1381))
(assert (= x801 (x3238 (x4266 64 x801 10))))
(assert (= (x4160 (x4266 64 x2928 1)) 1))
(assert (= (x894 (x5009 32 x1587)) 32))
(assert (=> (<= x4216 10000) (= 0 (x5051 x4216))))
(assert (not (x4435 (x4266 64 1 x4659))))
(assert (= (x5051 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344)) (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344)))
(assert (=> (<= x3627 10000) (= (x5051 x3627) 0)))
(assert (= x1092 (x1514 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092))))
(assert (x5553 x5592))
(assert (= 64 (x894 (x4266 64 x4836 11))))
(assert (x5553 x4538))
(assert (x5553 x1412))
(assert (x5553 x923))
(assert (< (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x2328))
(assert (x5553 x1582))
(assert (x5553 x1903))
(assert (< (x4266 64 x4443 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x497 x4328) x5073))
(assert (x5553 x2502))
(assert (x5553 x5255))
(assert (x5553 x4947))
(assert (= (x894 (x1228 x2385 x4180 x4698 x1668 x33 x3108)) x2385))
(assert (= (and (not x327) x4658) x650))
(assert (x5553 x2283))
(assert (=> (<= x3511 10000) (= 0 (x5051 x3511))))
(assert (< (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2156 (x5346 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156))))
(assert (= (x3238 (x4266 64 x999 11)) x999))
(assert (= (=> (and (= (not (< 32 x3284)) x2573) (= x1289 (x1945 x3234))) (and x2573 (=> (= x895 32) x4019))) x4613))
(assert (= (x3238 (x5009 x1004 x347)) x347))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x610 x1443 x3659)))
(assert (= x1491 (x40 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024))))
(assert (= (and x1631 (not x3778)) x3614))
(assert (x5553 x2977))
(assert (x5553 x4075))
(assert (x5553 x838))
(assert (x5553 x5148))
(assert (x5553 x839))
(assert (> (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135) 10000))
(assert (= (x3238 (x4266 64 1 x3090)) 1))
(assert (= (x5346 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)) x5525))
(assert (= x85 (x894 (x4266 x85 x2505 x2057))))
(assert (not (x4435 (x269 x5613 x2030 x3675 x2352))))
(assert (x5553 x1470))
(assert (x5553 x1184))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (< (x4266 x286 x2029 x1632) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5630 (x3238 (x4266 64 x5630 2))))
(assert (= (x894 (x4266 64 x5024 36)) 64))
(assert (= x5592 (x4160 (x269 x1004 x4085 x5592 x4629))))
(assert (=> (<= x3264 10000) (= (x5051 x3264) 0)))
(assert (x5553 x2351))
(assert (= (x3238 (x269 x5530 x1647 x980 x2699)) x1647))
(assert (= (x5051 4294967358) 0))
(assert (x5553 x2230))
(assert (= (x4160 (x4266 64 x1515 12)) 12))
(assert (not (x4435 (x4266 64 x4920 (ite (= x2443 0) x2605 (ite (>= 32 x2443) x2853 (ite (<= x2443 64) x1644 (ite (<= x2443 96) x3251 (ite (<= x2443 128) x155 (ite (<= x2443 160) x2570 (ite (<= x2443 192) x1592 (ite (<= x2443 224) x5315 x3053))))))))))))
(assert (=> (<= x837 10000) (= 0 (x5051 x837))))
(assert (=> (>= 10000 x5595) (= 0 (x5051 x5595))))
(assert (x5553 x1793))
(assert (x5553 x1104))
(assert (= (and (not x3099) x5253) x4745))
(assert (= (x3238 (x4266 x3137 x1784 x1436)) x1784))
(assert (x5553 x3282))
(assert (= (and x1533 x3644) x4757))
(assert (= (x5051 (x4266 64 x1844 12)) (x4266 64 x1844 12)))
(assert (=> (>= 10000 x3122) (= 0 (x5051 x3122))))
(assert (x5553 x5083))
(assert (x5553 x2652))
(assert (not (x4435 (x269 x530 x3934 x3802 x4017))))
(assert (< (x4266 64 x4736 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2238 x4662))
(assert (= (x722 (x485 x286 x63 x2537 x401 x1054 x2048 x4601)) x401))
(assert (x5553 x4766))
(assert (x5553 x2058))
(assert (not (x4435 (x5009 x2443 x1792))))
(assert (=> (>= 10000 x1827) (= (x5051 x1827) 0)))
(assert (= (and x1326 x5078) x1942))
(assert (= (x5346 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947)) x3947))
(assert (x5553 x2010))
(assert (not (x4435 (x4266 64 x4736 3))))
(assert (< (x5009 32 104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3866))
(assert (= (x3247 (x485 x2385 x210 x579 x4423 x5503 x462 x5517)) x5503))
(assert (x5553 x4002))
(assert (=> (<= x3651 10000) (= (x5051 x3651) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535)))
(assert (x5553 x3130))
(assert (= (x3247 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024)) x2809))
(assert (x5553 x2529))
(assert (x5553 x3743))
(assert (x5553 x4029))
(assert (x5553 x1244))
(assert (=> (<= x5230 10000) (= (x5051 x5230) 0)))
(assert (= x3116 (and x1832 (not x3150))))
(assert (= (x5051 x3871) (x5051 (+ x3871 1))))
(assert (not (x4435 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510))))
(assert (x5553 x296))
(assert (= x2599 (and x2602 x3915)))
(assert (= (and x1198 x5239) x965))
(assert (= (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135) (x5051 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135))))
(assert (x5553 x2141))
(assert (x5553 x4502))
(assert (x5553 x2947))
(assert (x5553 x2316))
(assert (x5553 x801))
(assert (= x426 (and x1355 (not x1915))))
(assert (x5553 x1954))
(assert (x5553 x4970))
(assert (x5553 x557))
(assert (x5553 x3248))
(assert (x5553 x5342))
(assert (x5553 x874))
(assert (x5553 x1596))
(assert (x5553 x1376))
(assert (=> (<= x2736 10000) (= (x5051 x2736) 0)))
(assert (not (x4435 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177))))
(assert (x121 x3976))
(assert (x5553 x3322))
(assert (=> (<= x5418 10000) (= (x5051 x5418) 0)))
(assert (= (x722 (x269 x3137 x3579 x4653 x2811)) x2811))
(assert (x5553 x807))
(assert (x5553 x1439))
(assert (x5553 x2210))
(assert (= (x5346 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850)) x2612))
(assert (x5553 x861))
(assert (x5553 x411))
(assert (x5553 x2139))
(assert (= (x722 (x1228 x693 x923 x975 x3805 x3677 x841)) x3805))
(assert (x5553 x3249))
(assert (= (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677) (x5051 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677))))
(assert (not (x4435 (x5009 32 x4931))))
(assert (=> (<= x2450 10000) (= 0 (x5051 x2450))))
(assert (x5553 x1165))
(assert (x5553 x2817))
(assert (x5553 x5108))
(assert (x5553 x1448))
(assert (x5553 x2290))
(assert (= (x894 (x4266 64 x1515 12)) 64))
(assert (x5553 x4190))
(assert (x5553 x1086))
(assert (x5553 x905))
(assert (x5553 x5600))
(assert (x5553 x5533))
(assert (x5553 x3588))
(assert (=> (<= x4423 10000) (= 0 (x5051 x4423))))
(assert (< 10000 (x1228 x85 x4919 x629 x2130 x1420 x2994)))
(assert (=> (>= 10000 x2505) (= 0 (x5051 x2505))))
(assert (x5553 x3767))
(assert (x5553 x2917))
(assert (x5553 x5418))
(assert (= x1021 (=> (and (or (= x3167 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x3167)) (= (ite (< 0 x3508) x3283 (x2436 127 x3283)) x3284) (= (x2436 1 x578) x3508) (= (- x4866 132) x4374) (= x554 (= x308 0)) (= x3167 (x4395 (- x3508 (mod (ite (> 32 x3284) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3283 (div x578 2)) (= x1728 (+ x4866 32)) (= x308 (x2436 1 x578))) (and (=> (and x554 (and (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x578) x3055) (= x152 (* (ite (not (= x3284 0)) 1 0) 32)) (= x583 (+ x152 x1728)) (or (= 32 x152) (= 0 x152)))) x1715) (=> (and (and (= (x5009 32 104) x3234) (= (> x3284 0) x3670)) (not x554)) (and (=> x3670 x4613) (=> (and (= x895 0) (not x3670)) x4019)))))))
(assert (= x1882 (=> (and (= (+ x59 x2899) x3640) (>= x3878 1) (= x756 (+ 31 x2328)) (= 128 x4525) (= x2106 (+ x3506 128)) (= (+ 32 x2328) x765) (not (> x4061 x44)) (= x1539 (= (x4289 132) x3254)) (>= x1848 x59) (= (+ 4 x2958) x2328) (= x5383 false) (<= 196 x910) (= x910 x44) (<= x3640 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4395 (- x915 128)) x910) (= (+ x3506 164) x4061) (<= x4335 127) (= x919 (+ x1106 x765)) (<= x3506 18446744073709551615) (> x44 x756) (= (x496 x4684) x1848) (= 94926909962862326217726538024181891405690106632559804934698421914364834480128 x1682) (>= x3640 0) (= 3521034783 x2486) (= (x3101 x2328) x1106) (not (> x919 x44)) (>= 18446744073709551615 x1106) (< (+ x2899 x59) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x5588 (x4266 64 x5061 7)) (= x4748 (x4762 x837)) (= x3640 x3420) (= false x5620) (= x3736 x2766) (<= x4335 127) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x59 x4453)) (= (>= 224 x1004) x265) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x910) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x44) (= x4453 (x496 x837)) (= x2958 x2636) (= 164 x1377) (= x530 (x4395 (- (mod (+ 32 x1484) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128))) (<= 196 x44) (= x1484 (+ 128 x3506)) (= (x4395 (- x530 32)) x1004) x1539 (= (x3608 x837) x2899) (>= x4748 1) (= x3878 (x4762 x2928)) (= x3506 (x3101 132)) (= x1922 (x496 x4684)) (= 128 x2911) (= x5061 x792) (= x2256 (- x1922 x59))) (and x265 (=> (and (= x3241 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)) (= (x842 160) x2736) (= (<= x530 224) x4495) (= x3 (x842 160)) (= (x3789 x1004 x3815 x2736 x1603 x5356) x88) (= x5573 (x842 256)) (= x347 (x842 128)) (= (x842 256) x3824) (= (x842 192) x3720) (= (x842 128) x905) (= (x842 128) x3815) (= (x5009 x1004 x347) x3943) (= (x842 128) x1077) (= (x842 224) x3489) (= (x842 192) x1603) (= (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405) x5464) (= x2181 (x4266 x1004 x905 x573)) (= x2102 (x842 160)) (= x4691 (x842 224)) (= x7 (x269 x1004 x4085 x5592 x4629)) (= (x842 128) x4085) (= (x842 288) x28) (= (x842 128) x5217) (= (x842 160) x573) (= x4629 (x842 192)) (= x2163 (x1228 x1004 x3020 x2102 x388 x3489 x1127)) (= x388 (x842 192)) (= (x842 192) x2304) (= x5104 (x842 288)) (= x3950 (ite (= x1004 0) x1285 (ite (>= 32 x1004) x3943 (ite (>= 64 x1004) x2181 (ite (>= 96 x1004) x7 (ite (>= 128 x1004) x88 (ite (<= x1004 160) x2163 (ite (>= 192 x1004) x3241 (ite (>= 224 x1004) x5464 x2519))))))))) (= x5592 (x842 160)) (= (x842 320) x5405) (= x3307 (x842 160)) (= (x842 128) x3020) (= (x842 224) x5356) (= (x102 0) x1285) (= (x842 224) x4150) (= x1127 (x842 256))) (and (=> (and (= (x842 192) x897) (= x30 (x842 128)) (= x4606 (x842 160)) (= (+ x1106 128) x4297) (= x5021 (x842 128)) (= x473 (x842 288)) (= x3891 (x4671 x3343)) (= x3532 (x842 224)) (= x3324 (x842 288)) (= (<= x85 224) x791) (= x1849 (x842 160)) (= x4859 (x842 256)) (= x3934 (x842 128)) (= (x1228 x530 x30 x2472 x1987 x170 x4859) x1640) (= x4017 (x842 192)) (= (x842 128) x5126) (= x1861 (x842 160)) (= x4901 (x842 160)) (= x2472 (x842 160)) (= x1154 (x842 192)) (= (x842 224) x2069) (= (x842 160) x3802) (= x2144 (x842 128)) (= x3343 (x4266 64 x2766 (ite (= 0 x530) x4826 (ite (<= x530 32) x4936 (ite (<= x530 64) x5563 (ite (>= 96 x530) x1447 (ite (>= 128 x530) x3538 (ite (>= 160 x530) x1640 (ite (>= 192 x530) x4713 (ite (>= 224 x530) x1084 x1552)))))))))) (= (x842 256) x4640) (>= x3891 1) (= x3538 (x3789 x530 x5021 x1861 x1857 x3779)) (= x5132 (x842 128)) (= (x4266 x530 x5126 x1849) x5563) (= (x842 192) x1987) (= x4936 (x5009 x530 x2144)) (= (x842 256) x323) (= x3977 (x842 128)) (= (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324) x4713) (= (x102 0) x4826) (= x170 (x842 224)) (= x1857 (x842 192)) (= x3445 (x842 320)) (= (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445) x1084) (= x1447 (x269 x530 x3934 x3802 x4017)) (= (x842 224) x3779) (= x85 (x4395 (- x4297 128)))) (and (=> (and (= x2130 (x4645 192)) (= x772 (x4645 224)) (= x286 (x4395 (- x610 32))) (= (x4645 192) x3064) (= (x4645 160) x2245) (= (x4645 192) x1009) (= (x4645 256) x2994) (= x3891 x2635) (= x2972 (x4645 192)) (= x3804 (x4645 128)) (= x729 (x4645 160)) (= (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661) x663) (= (x4266 64 x5061 7) x2053) (= (x4645 192) x626) (= x330 (x4645 128)) (= x3477 (x4645 160)) (= (>= 224 x286) x5176) (= (ite (= x85 0) x1658 (ite (>= 32 x85) x1305 (ite (>= 64 x85) x1975 (ite (>= 96 x85) x832 (ite (>= 128 x85) x3407 (ite (>= 160 x85) x2227 (ite (>= 192 x85) x1534 (ite (>= 224 x85) x663 x2131)))))))) x2635) (= (x1228 x85 x4919 x629 x2130 x1420 x2994) x2227) (= (x4395 (- (mod (+ x4009 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x610) (= (x4645 320) x3661) (= x3407 (x3789 x85 x140 x3477 x626 x2469)) (= (x4645 128) x4479) (= x3184 (x4645 256)) (= x1305 (x5009 x85 x330)) (= (x4645 224) x2469) (= (x4645 224) x4882) (= x1534 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)) (= x1911 (x4645 160)) (= (x269 x85 x3183 x729 x2972) x832) (= (x102 0) x1658) (= x140 (x4645 128)) (= x1420 (x4645 224)) (= x5525 (x4645 288)) (= (+ x3506 128) x4009) (= (x4645 160) x2057) (= x1147 (x4645 256)) (= x2505 (x4645 128)) (= x4919 (x4645 128)) (= x3183 (x4645 128)) (= (x4266 x85 x2505 x2057) x1975) (= x5539 (x4645 288)) (<= 1 x2635) (= (+ 128 x3506) x3761) (= (x4645 160) x629)) (and x5176 (=> (and (= x2048 (x3665 256)) (= x2537 (x3665 160)) (= (x3789 x286 x2817 x3102 x4130 x3436) x524) (= x4796 (x3665 192)) (= x5302 (x3665 160)) (= (x3665 160) x1632) (= x4255 (x3665 256)) (= x4464 (x3665 256)) (= (x3665 128) x2029) (= x4591 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)) (= x5282 (x5009 x286 x3203)) (= (x3665 224) x3436) (= (x3665 128) x2817) (= (x3665 192) x4130) (= x3203 (x3665 128)) (= x1219 (x3665 128)) (= x3536 (x3665 288)) (= (x3665 224) x4897) (= (x102 0) x582) (= x3325 (x3665 128)) (= (x3665 320) x177) (= (x3665 160) x5154) (= x4601 (x3665 288)) (= x1325 (x3665 192)) (= x3102 (x3665 160)) (= x5444 (x4266 x286 x2029 x1632)) (= x1042 (x1228 x286 x1219 x5302 x3589 x4897 x4255)) (= x1969 (x3665 224)) (= (x3665 160) x3791) (= (x3665 128) x674) (= (x269 x286 x3325 x3791 x1325) x5084) (= (x3665 128) x63) (= (x3665 192) x3589) (= x2433 (x485 x286 x63 x2537 x401 x1054 x2048 x4601)) (= x1054 (x3665 224)) (= (<= x610 224) x2384) (= (ite (= 0 x286) x582 (ite (>= 32 x286) x5282 (ite (<= x286 64) x5444 (ite (>= 96 x286) x5084 (ite (>= 128 x286) x524 (ite (>= 160 x286) x1042 (ite (<= x286 192) x2433 (ite (>= 224 x286) x4591 x696)))))))) x4148) (= (x3665 192) x401)) (and (not (and (= (+ x4538 32) x732) (= (+ x4668 x4538 32) x3313) (= (x3517 x4538) x2925) (= x3592 (x3665 256)) (= x297 (x3665 192)) (= x4172 (x3665 160)) (= x4668 (* x1507 32)) (= x1299 (x3665 256)) (= (x3665 128) x907) (<= 32 x2925) (= (x3665 160) x1472) (= x1507 (div (+ 31 x1106) 32)) (= (x3665 160) x4924) (= (x3665 320) x366) (= (x1228 x610 x2480 x264 x3876 x2348 x1299) x1356) (= x1827 (x3665 224)) (= x3659 (x3665 160)) (= x5587 (x3665 288)) (= (x3665 256) x1816) (= x39 (x3665 192)) (= x5107 (div (+ 31 x3506) 32)) (= x112 (+ 160 x3506)) (= x2042 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) (= x1462 (x4266 x610 x1443 x3659)) (= x3544 (x4266 64 x2766 (ite (= 0 x610) x1688 (ite (<= x610 32) x4021 (ite (<= x610 64) x1462 (ite (>= 96 x610) x3109 (ite (>= 128 x610) x1028 (ite (<= x610 160) x1356 (ite (<= x610 192) x2042 (ite (>= 224 x610) x4656 x2961)))))))))) (= x2516 (x3665 128)) (= x1028 (x3789 x610 x2516 x3169 x3223 x3267)) (= (x3665 160) x3169) (= (x3665 160) x264) (= (+ x4884 160) x4538) (= x4021 (x5009 x610 x5418)) (= (x3665 192) x3223) (= 128 x1791) (= x4073 (x3665 288)) (> x3313 x4538) (= (x3665 192) x678) (= (x3665 224) x3004) (= x1443 (x3665 128)) (= (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366) x4656) (= x4628 (x3665 128)) (= (x269 x610 x5215 x1472 x297) x3109) (= x3267 (x3665 224)) (= (x3665 224) x2348) (= (x3665 128) x5418) (= (x3665 128) x2480) (= (* 32 x5107) x4884) (= x801 (x3517 x732)) (= (x3665 128) x5215) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2925) (= x3876 (x3665 192)) (= x1688 (x102 0)) (= (x4266 64 x801 10) x4617) (= x3561 (+ x1106 x732)))) x2384)))) x791)) x4495))))))
(assert (= (x894 (x269 x2443 x3830 x1931 x5230)) x2443))
(assert (x5553 x3988))
(assert (not (x4435 (x1228 x85 x4919 x629 x2130 x1420 x2994))))
(assert (x5553 x4771))
(assert (=> (>= 10000 x696) (= (x5051 x696) 0)))
(assert (> (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525) 10000))
(assert (= x787 (or x3363 x670)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126)))
(assert (< (x1228 x2358 x2475 x383 x2464 x3210 x5595) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1652 (and (not x4871) x3626)))
(assert (x5553 x3555))
(assert (= (x894 (x4266 64 x5131 6)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x85 x140 x3477 x626 x2469)))
(assert (=> (>= 10000 x1299) (= (x5051 x1299) 0)))
(assert (= 64 (x894 (x4266 64 x2781 4))))
(assert (x5553 x4843))
(assert (x5553 x1920))
(assert (x5553 x3939))
(assert (= (x4160 (x4266 64 x4927 100)) 100))
(assert (=> (<= x2741 10000) (= 0 (x5051 x2741))))
(assert (=> (<= x1215 10000) (= 0 (x5051 x1215))))
(assert (= x2944 (x3247 (x1228 x5613 x5274 x3895 x2978 x2944 x1312))))
(assert (= (x4266 x610 x1443 x3659) (x5051 (x4266 x610 x1443 x3659))))
(assert (x5553 x4162))
(assert (x5553 x112))
(assert (= x1156 (and x5186 x5580)))
(assert (> (x4266 64 x5202 11) 10000))
(assert (= (and x4902 x1740) x1901))
(assert (= (and x5332 x3818) x4888))
(assert (= x1765 (x3238 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126))))
(assert (x5553 x5377))
(assert (x5553 x3862))
(assert (x4435 1766847064778384329583297500742918515827483896875618958121606201292619776))
(assert (x5553 x4017))
(assert (x5553 x4973))
(assert (< (x4266 64 x1828 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5386))
(assert (x5553 x1772))
(assert (= x2437 (and x1500 x575)))
(assert (=> (>= 10000 x3751) (= (x5051 x3751) 0)))
(assert (= x5501 (x894 (x3789 x5501 x1456 x5366 x1537 x3951))))
(assert (x5553 x1926))
(assert (x5553 x4005))
(assert (x5553 x4680))
(assert (x5553 x2706))
(assert (x5553 x3113))
(assert (not (x4435 (x1228 x4005 x4730 x1798 x3345 x4179 x4679))))
(assert (x5553 x3653))
(assert (= x1584 (x4160 (x269 x1098 x5454 x1584 x3052))))
(assert (= (x3238 (x269 x3137 x3579 x4653 x2811)) x3579))
(assert (= (x5346 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324)) x3324))
(assert (x5553 x5460))
(assert (x5553 x2788))
(assert (x5553 x3023))
(assert (x5553 x4382))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x2443 x4502 x4956)))
(assert (= (x4160 (x1228 x4005 x4730 x1798 x3345 x4179 x4679)) x1798))
(assert (= x4168 (x3238 (x4266 x2385 x4168 x1928))))
(assert (= (or (and x5640 x3114) x4741) x2534))
(assert (x5553 x3062))
(assert (x1779 x2210))
(assert (x5553 x1468))
(assert (x5553 x5482))
(assert (x5553 x4338))
(assert (= (x4266 64 x1515 12) (x5051 (x4266 64 x1515 12))))
(assert (x5553 x4978))
(assert (x5553 x4913))
(assert (= x4690 (x3247 (x3789 x3525 x4032 x5204 x1927 x4690))))
(assert (= x1668 (x722 (x1228 x2385 x4180 x4698 x1668 x33 x3108))))
(assert (x5553 x4402))
(assert (x5553 x2438))
(assert (x5553 x1613))
(assert (x5553 x4478))
(assert (= (x3238 (x4266 64 x1597 3)) x1597))
(assert (x5553 x3821))
(assert (x5553 x5179))
(assert (x5553 x5205))
(assert (x5553 x852))
(assert (= (x722 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598)) x1016))
(assert (x5553 x2263))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x1680 36)))
(assert (x5553 x33))
(assert (= x2457 (and (not x4834) x3527)))
(assert (< 10000 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)))
(assert (= x462 (x40 (x485 x2385 x210 x579 x4423 x5503 x462 x5517))))
(assert (x5553 x4282))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x2358 x207 x1529 x4721)))
(assert (x5553 x3564))
(assert (x121 x5652))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x1855 x4793 x5161 x2447 x1968)))
(assert (x5553 x67))
(assert (= (and x575 (not x1500)) x3199))
(assert (x5553 x1948))
(assert (x5553 x5202))
(assert (= 0 (x5051 1914215)))
(assert (x5553 x5575))
(assert (x5553 x2398))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x5553 x3))
(assert (= x3289 (=> (and (= x693 (x2002 x796)) (= (>= 224 x693) x5008)) (and x5008 (=> (and (= x1745 (x269 x693 x1125 x5557 x1035)) (= x3138 (x4266 x693 x2462 x807)) (= x2396 (x2742 (+ 128 x4127))) (= (x2002 x2396) x841) (= x5180 (x2002 x3795)) (= (x2742 (+ x4127 64)) x783) (= (x102 0) x2814) (= x3533 (x3789 x693 x2627 x5180 x3492 x3026)) (= x5593 (x2002 x4964)) (= (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593) x706) (= (x2742 (+ x4127 96)) x3475) (= (x2742 (+ x4127 32)) x128) (= x2627 (x2002 x4127)) (= (x2742 (+ 160 x4127)) x2531) (= (x2002 x4127) x2462) (= (x2742 (+ x4127 192)) x4964) (= (x2002 x4127) x2326) (= x5118 (x2002 x3954)) (= (x2742 (+ x4127 96)) x3481) (= (x2742 (+ 32 x4127)) x3559) (= x1697 (x2002 x690)) (= x3805 (x2002 x5143)) (= (x2002 x4127) x5402) (= x3510 (x2002 x4733)) (= x1035 (x2002 x1330)) (= x3795 (x2742 (+ 32 x4127))) (= (x2002 x128) x5557) (= x975 (x2002 x3559)) (= (x2002 x1869) x3492) (= (x2742 (+ 32 x4127)) x4604) (= x2313 (x2742 (+ x4127 96))) (= (x2742 (+ 128 x4127)) x4879) (= x5533 (x2742 (+ x4127 128))) (= x4286 (x2002 x2553)) (= (ite (= x693 0) x2814 (ite (<= x693 32) x2724 (ite (>= 64 x693) x3138 (ite (<= x693 96) x1745 (ite (<= x693 128) x3533 (ite (<= x693 160) x2560 (ite (<= x693 192) x555 (ite (>= 224 x693) x706 x2216)))))))) x3870) (= (x5009 x693 x5222) x2724) (= (x2002 x4127) x1125) (= x807 (x2002 x4840)) (= x2606 (x2742 (+ x4127 96))) (= x3128 (x2002 x2531)) (= (x4266 64 x3702 7) x247) (= (x485 x693 x2326 x3958 x1697 x97 x5558 x3510) x555) (= (x2742 (+ x4127 32)) x3954) (= x5143 (x2742 (+ x4127 64))) (= x4733 (x2742 (+ x4127 160))) (= x4363 (> x4286 0)) (= x4840 (x2742 (+ x4127 32))) (= x690 (x2742 (+ 64 x4127))) (= (x2002 x5533) x5558) (= x3958 (x2002 x4604)) (= (x2002 x4127) x923) (= x2560 (x1228 x693 x923 x975 x3805 x3677 x841)) (= x1869 (x2742 (+ 64 x4127))) (= x3026 (x2002 x3475)) (= x3677 (x2002 x2606)) (= x5222 (x2002 x4127)) (= (x2002 x783) x4692) (= x1330 (x2742 (+ x4127 64))) (= (x2002 x3481) x97) (= x3987 (x2002 x2313)) (= (x2002 x4879) x1553)) (and (=> (and (and (= (< 32 x4286) x947) (= (x2002 x296) x1752)) x4363) (and (=> (not x947) x134) (=> (and (and (= (x2742 (+ 32 x296)) x2681) (= x3191 (< 64 x4286)) (= (x2742 (+ x5362 32)) x148) (= (x245 x2681) x3467)) x947) (and (=> (and x3191 (and (= (x5158 x2869) x3091) (= (< 96 x4286) x3835) (= (x2742 (+ 64 x5362)) x3945) (= x2869 (x2742 (+ x296 64))))) (and (=> (not x3835) x134) (=> x3835 x2056))) (=> (not x3191) x134))))) (=> (not x4363) x134)))))))
(assert (=> (<= x4379 10000) (= 0 (x5051 x4379))))
(assert (x5553 x1792))
(assert (=> (<= x4157 10000) (= 0 (x5051 x4157))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x2382 6)))
(assert (= (x3238 (x5009 x5530 x3823)) x3823))
(assert (x5553 x2880))
(assert (x5553 x1917))
(assert (x5553 x4567))
(assert (< (x4266 x1098 x4250 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4971))
(assert (x5553 x4890))
(assert (= (x5346 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736)) x736))
(assert (x5553 x2505))
(assert (not (x4435 (x4266 64 x1844 12))))
(assert (x5553 x4798))
(assert (= (x4160 (x4266 64 x5630 36)) 36))
(assert (=> (<= x3894 10000) (= 0 (x5051 x3894))))
(assert (= 2 (x4160 (x4266 64 x5630 2))))
(assert (x5553 x3571))
(assert (x5553 x92))
(assert (= (x4160 (x269 x4005 x99 x921 x2321)) x921))
(assert (x5553 x1826))
(assert (not (x4435 (x1228 x3525 x3124 x2682 x4476 x5480 x2515))))
(assert (not (x4435 (x4266 64 x5024 36))))
(assert (= x5540 (=> (and (= x2748 (= x2226 0)) (or (not x2748) x2748)) x2987)))
(assert (x5553 x2536))
(assert (x5553 x5648))
(assert (x5553 x1605))
(assert (x5553 x863))
(assert (=> (>= 10000 x4298) (= 0 (x5051 x4298))))
(assert (x5553 x5245))
(assert (x5553 x5119))
(assert (=> (<= x1632 10000) (= 0 (x5051 x1632))))
(assert (=> (>= 10000 x841) (= (x5051 x841) 0)))
(assert (= (x5051 (x1228 x610 x2480 x264 x3876 x2348 x1299)) (x1228 x610 x2480 x264 x3876 x2348 x1299)))
(assert (= (and x1681 (not x2303)) x1326))
(assert (=> (>= 10000 x3958) (= (x5051 x3958) 0)))
(assert (= x3162 (and x1260 x5369)))
(assert (=> (>= 10000 x1177) (= 0 (x5051 x1177))))
(assert (x4435 3521034783))
(assert (x5553 x5593))
(assert (x5553 x4212))
(assert (= (x5051 (x4266 64 x3702 7)) (x4266 64 x3702 7)))
(assert (x5553 x2506))
(assert (< 10000 (x269 x2385 x3846 x2780 x4360)))
(assert (x5553 x2531))
(assert (= (x5051 2177969240) 0))
(assert (= x5079 (and x3647 x1064)))
(assert (= (x722 (x269 x2443 x3830 x1931 x5230)) x5230))
(assert (x5553 x629))
(assert (= (and x228 x332) x2093))
(assert (=> (>= 10000 x3720) (= (x5051 x3720) 0)))
(assert (=> (>= 10000 x2809) (= (x5051 x2809) 0)))
(assert (x5553 x4904))
(assert (x5553 x5118))
(assert (< (x1228 x4005 x4730 x1798 x3345 x4179 x4679) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x5051 x5446) (x5051 (+ 1 x5446))))
(assert (x5553 x4370))
(assert (= x1112 (x4160 (x1228 x2434 x1862 x1112 x541 x3398 x3066))))
(assert (= (x894 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736)) x5501))
(assert (x5553 x1120))
(assert (x5553 x3964))
(assert (x5553 x346))
(assert (x5553 x5559))
(assert (x5553 x1204))
(assert (x5553 x5513))
(assert (x5553 x2033))
(assert (=> (>= 10000 x2216) (= 0 (x5051 x2216))))
(assert (=> (<= x4851 10000) (= (x5051 x4851) 0)))
(assert (> (x4266 64 x1844 12) 10000))
(assert (x5553 x2488))
(assert (not (x4435 (x4266 64 x1828 10))))
(assert (x5553 x4365))
(assert (x5553 x1819))
(assert (= x4283 (x894 (x4266 x4283 x1477 x242))))
(assert (= 64 (x894 (x4266 64 x4920 (ite (= x2443 0) x2605 (ite (>= 32 x2443) x2853 (ite (<= x2443 64) x1644 (ite (>= 96 x2443) x3251 (ite (>= 128 x2443) x155 (ite (>= 160 x2443) x2570 (ite (<= x2443 192) x1592 (ite (<= x2443 224) x5315 x3053))))))))))))
(assert (=> (>= 10000 x4245) (= (x5051 x4245) 0)))
(assert (= x4628 (x3238 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366))))
(assert (= x383 (x4160 (x1228 x2358 x2475 x383 x2464 x3210 x5595))))
(assert (=> (>= 10000 x28) (= (x5051 x28) 0)))
(assert (= (or x1900 x3851) x3474))
(assert (=> (>= 10000 x1024) (= 0 (x5051 x1024))))
(assert (x5553 x2634))
(assert (x5553 x691))
(assert (= (x3238 (x4266 64 x4216 10)) x4216))
(assert (=> (<= x3839 10000) (= (x5051 x3839) 0)))
(assert (x5553 x847))
(assert (=> (>= 10000 x801) (= (x5051 x801) 0)))
(assert (> (x5009 x286 x3203) 10000))
(assert (= (x894 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850)) x1855))
(assert (x4435 3957931183))
(assert (= (and x3774 x4253) x4967))
(assert (x5553 x4187))
(assert (x5553 x3066))
(assert (x5553 x935))
(assert (x5553 x5208))
(assert (x4435 1313998243))
(assert (x5553 x276))
(assert (x5553 x3576))
(assert (= (x894 (x4266 64 x5456 100)) 64))
(assert (x5553 x3233))
(assert (x5553 x1394))
(assert (x5553 x537))
(assert (=> (<= x1065 10000) (= 0 (x5051 x1065))))
(assert (= x3406 (x3238 (x4266 64 x3406 36))))
(assert (x5553 x1498))
(assert (= (and x5000 x1049) x4811))
(assert (= x5038 (x722 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253))))
(assert (x5553 x3632))
(assert (x5553 x1928))
(assert (= 100 (x4160 (x4266 64 x5456 100))))
(assert (=> (>= 10000 x3551) (= (x5051 x3551) 0)))
(assert (=> (<= x3463 10000) (= 0 (x5051 x3463))))
(assert (= (x1228 x4283 x5337 x2668 x338 x5234 x3122) (x5051 (x1228 x4283 x5337 x2668 x338 x5234 x3122))))
(assert (x5553 x3685))
(assert (=> (<= x5633 10000) (= 0 (x5051 x5633))))
(assert (= x1222 (and (not x3515) x2468)))
(assert (x5553 x1145))
(assert (x5553 x4447))
(assert (=> (>= 10000 x2352) (= (x5051 x2352) 0)))
(assert (< (x4266 64 1 x3090) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4353))
(assert (=> (>= 10000 x1509) (= 0 (x5051 x1509))))
(assert (=> (<= x2168 10000) (= (x5051 x2168) 0)))
(assert (x5553 x1980))
(assert (x121 x856))
(assert (= (x5009 x610 x5418) (x5051 (x5009 x610 x5418))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x5024 36)))
(assert (= x4778 (and x2885 x698)))
(assert (x5553 x4604))
(assert (=> (<= x4804 10000) (= 0 (x5051 x4804))))
(assert (x5553 x1820))
(assert (= (x5051 3672334990) 0))
(assert (= 0 (x5051 3521034783)))
(assert (< 10000 (x3789 x4005 x4717 x294 x5499 x3258)))
(assert (=> (<= x2627 10000) (= (x5051 x2627) 0)))
(assert (=> (>= 10000 x99) (= (x5051 x99) 0)))
(assert (=> (<= x3124 10000) (= 0 (x5051 x3124))))
(assert (x5553 x1976))
(assert (= (x4160 (x4266 64 x3861 36)) 36))
(assert (= 32 (x894 (x5009 32 x4931))))
(assert (x5553 x4184))
(assert (x5553 x4322))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x3273 36)))
(assert (= (x722 (x3789 x4005 x4717 x294 x5499 x3258)) x5499))
(assert (not (x4435 (x4266 64 x4480 12))))
(assert (=> (>= 10000 x85) (= 0 (x5051 x85))))
(assert (< 10000 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)))
(assert (= (x5346 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405)) x5104))
(assert (=> (>= 10000 x4919) (= 0 (x5051 x4919))))
(assert (x5553 x3187))
(assert (= (x3247 (x1228 x693 x923 x975 x3805 x3677 x841)) x3677))
(assert (x5553 x1951))
(assert (x5553 x1626))
(assert (= 0 (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (= (=> (and (= (x2742 (+ 96 x1639)) x3755) (= (x2742 (+ x1470 96)) x4957) (= x2951 (x4050 x4957)) (= (not (< 128 x2638)) x4808)) (and x1431 x4808)) x4126))
(assert (= (and x954 x1989) x4373))
(assert (x5266 x578))
(assert (= x264 (x4160 (x1228 x610 x2480 x264 x3876 x2348 x1299))))
(assert (< 10000 (x269 x3137 x3579 x4653 x2811)))
(assert (> (x269 x3525 x4566 x5026 x1254) 10000))
(assert (x5553 x368))
(assert (x4435 4294967295))
(assert (= (and x1423 x2492) x2109))
(assert (x5553 x1911))
(assert (x5553 x1264))
(assert (= (=> (and (= x4361 (= x261 0)) (or (not x4361) x4361)) x3496) x3418))
(assert (x5553 x2904))
(assert (> (x4266 64 x4736 4) 10000))
(assert (= 6 (x4160 (x4266 64 x5131 6))))
(assert (= x286 (x894 (x1228 x286 x1219 x5302 x3589 x4897 x4255))))
(assert (x5553 x5429))
(assert (x1779 x4667))
(assert (x5553 x3879))
(assert (= (x40 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510)) x5558))
(assert (=> (<= x3661 10000) (= (x5051 x3661) 0)))
(assert (< (x4266 64 x2766 (ite (= 0 x530) x4826 (ite (<= x530 32) x4936 (ite (<= x530 64) x5563 (ite (<= x530 96) x1447 (ite (>= 128 x530) x3538 (ite (<= x530 160) x1640 (ite (<= x530 192) x4713 (ite (>= 224 x530) x1084 x1552))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1118))
(assert (< 10000 (x1228 x1098 x3372 x3272 x4492 x1282 x3321)))
(assert (x5553 x421))
(assert (not (x4435 (x1228 x2358 x2475 x383 x2464 x3210 x5595))))
(assert (=> (<= x1666 10000) (= 0 (x5051 x1666))))
(assert (= (x3247 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405)) x4691))
(assert (x5553 x135))
(assert (x5553 x2879))
(assert (= x4794 (x4160 (x4266 64 1 x4794))))
(assert (not (x4435 (x4266 64 x999 11))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x3137 x1784 x1436)))
(assert (=> (<= x135 10000) (= 0 (x5051 x135))))
(assert (x5553 x1784))
(assert (= (and x2322 x1136) x3628))
(assert (=> (>= 10000 x970) (= 0 (x5051 x970))))
(assert (= (x5051 (x1228 x5530 x671 x845 x2168 x5004 x498)) (x1228 x5530 x671 x845 x2168 x5004 x498)))
(assert (= 64 (x894 (x4266 64 x4927 100))))
(assert (x5553 x4987))
(assert (not (x4435 (x5009 x2358 x5413))))
(assert (x5553 x4085))
(assert (=> (<= x5204 10000) (= (x5051 x5204) 0)))
(assert (= (x722 (x3789 x530 x5021 x1861 x1857 x3779)) x1857))
(assert (= (x894 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366)) x610))
(assert (= 100 (x4160 (x4266 64 x1851 100))))
(assert (x5553 x1857))
(assert (x5553 x729))
(assert (< (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x894 (x4266 64 x5630 6))))
(assert (x5553 x1466))
(assert (x5553 x5172))
(assert (x5553 x2590))
(assert (x5553 x4905))
(assert (= x1270 (x722 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914))))
(assert (< 10000 (x4266 64 x2382 36)))
(assert (x5553 x1746))
(assert (x5553 x2651))
(assert (=> (<= x3525 10000) (= (x5051 x3525) 0)))
(assert (x5553 x895))
(assert (x5553 x3295))
(assert (x5553 x1851))
(assert (x5553 x4443))
(assert (= x3860 (x3238 (x5009 x2385 x3860))))
(assert (=> (<= x4483 10000) (= 0 (x5051 x4483))))
(assert (x5553 x1464))
(assert (x5553 x4288))
(assert (x5553 x474))
(assert (= (x5051 89332125780766104441357105940599211734484755930370930871569612501041822040064) 0))
(assert (x5553 x4667))
(assert (x5553 x328))
(assert (x5553 x3280))
(assert (x111 x2823))
(assert (= 64 (x894 (x4266 64 x929 2))))
(assert (=> (<= x729 10000) (= 0 (x5051 x729))))
(assert (x5553 x77))
(assert (> (x1228 x610 x2480 x264 x3876 x2348 x1299) 10000))
(assert (x5553 x2538))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x5501 x5370 x5056)))
(assert (= (x894 (x4266 x693 x2462 x807)) x693))
(assert (x5553 x4346))
(assert (= x5326 (and x2684 x2331)))
(assert (= 0 (x5051 57896044618658097711785492504343953926634992332820282019728792003956)))
(assert (x5266 x3952))
(assert (x5553 x2387))
(assert (x5553 x4407))
(assert (x5553 x897))
(assert (=> (>= 10000 x4853) (= 0 (x5051 x4853))))
(assert (x5553 x3165))
(assert (x5553 x1035))
(assert (x5553 x1888))
(assert (x5553 x5152))
(assert (not (x4435 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535))))
(assert (x121 x2270))
(assert (=> (>= 10000 x3815) (= 0 (x5051 x3815))))
(assert (=> (>= 10000 x964) (= 0 (x5051 x964))))
(assert (x5553 x1010))
(assert (x5553 x260))
(assert (x5553 x4597))
(assert (x5553 x2487))
(assert (= x3977 (x3238 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324))))
(assert (=> (>= 10000 x1668) (= (x5051 x1668) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x2443 x4170 x4860 x1625 x4474)))
(assert (=> (<= x2683 10000) (= (x5051 x2683) 0)))
(assert (=> (<= x3410 10000) (= (x5051 x3410) 0)))
(assert (= (x3238 (x4266 64 x4037 0)) x4037))
(assert (= x4005 (x894 (x5009 x4005 x2076))))
(assert (= (x5051 (x4266 64 x2382 2)) (x4266 64 x2382 2)))
(assert (x5553 x1649))
(assert (= (and (not x4723) x987) x5618))
(assert (x5553 x1927))
(assert (=> (>= 10000 x3675) (= 0 (x5051 x3675))))
(assert (x5553 x1071))
(assert (= x4140 (x3238 (x4266 64 x4140 11))))
(assert (=> (<= x3982 10000) (= 0 (x5051 x3982))))
(assert (x5553 x3348))
(assert (= x4414 (=> (and (= x2959 (x1241 128)) (= x5123 160) (not (> x2959 x531)) (= x4567 x531)) x1689)))
(assert (= (and x4146 x361) x1158))
(assert (= x3521 x5570))
(assert (< (x4266 64 x5202 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1307))
(assert (< 10000 (x4266 64 x5131 6)))
(assert (= (x5051 (x3789 x2434 x3433 x4948 x1572 x2544)) (x3789 x2434 x3433 x4948 x1572 x2544)))
(assert (= (and x580 x1088) x1821))
(assert (=> (>= 10000 x4026) (= (x5051 x4026) 0)))
(assert (= x4683 (and x1635 (not x5286))))
(assert (x5553 x3158))
(assert (=> (<= x4628 10000) (= 0 (x5051 x4628))))
(assert (x5553 x423))
(assert (x5553 x2315))
(assert (= x5126 (x3238 (x4266 x530 x5126 x1849))))
(assert (x5553 x2205))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x286 x1219 x5302 x3589 x4897 x4255)))
(assert (x5553 x5609))
(assert (x5553 x5246))
(assert (= x1325 (x722 (x269 x286 x3325 x3791 x1325))))
(assert (= (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495) (x5051 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495))))
(assert (x5553 x1545))
(assert (x5553 x3168))
(assert (= (x4160 (x269 x2385 x3846 x2780 x4360)) x2780))
(assert (x5553 x4892))
(assert (= 36 (x4160 (x4266 64 x3406 36))))
(assert (=> (<= x462 10000) (= (x5051 x462) 0)))
(assert (= x473 (x5346 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445))))
(assert (x5553 x1856))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x2443 x1430 x5633 x4923 x1095 x31)))
(assert (= (x722 (x3789 x2434 x3433 x4948 x1572 x2544)) x1572))
(assert (= x1054 (x3247 (x485 x286 x63 x2537 x401 x1054 x2048 x4601))))
(assert (> (x5009 x5613 x5584) 10000))
(assert (x5553 x3313))
(assert (= x5369 (and x4316 x2166)))
(assert (= x3698 (=> (and (or (and (not x1934) (= x5597 (ite x1934 1 0))) (and (and (= (x5192 128) x5434) (= x5597 (ite (< 0 x5434) 1 0))) x1934)) (and (= (= x5613 x519) x1934) (= (x5192 128) x519))) x2103)))
(assert (x5553 x2193))
(assert (= (x5051 (x4266 64 x2766 (ite (= 0 x610) x1688 (ite (>= 32 x610) x4021 (ite (<= x610 64) x1462 (ite (>= 96 x610) x3109 (ite (>= 128 x610) x1028 (ite (>= 160 x610) x1356 (ite (<= x610 192) x2042 (ite (>= 224 x610) x4656 x2961)))))))))) (x4266 64 x2766 (ite (= 0 x610) x1688 (ite (<= x610 32) x4021 (ite (>= 64 x610) x1462 (ite (>= 96 x610) x3109 (ite (>= 128 x610) x1028 (ite (>= 160 x610) x1356 (ite (<= x610 192) x2042 (ite (>= 224 x610) x4656 x2961)))))))))))
(assert (x5553 x3552))
(assert (=> (>= 10000 x1154) (= (x5051 x1154) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x2385 x3846 x2780 x4360)))
(assert (= x3402 (and x1326 (not x5078))))
(assert (x5553 x84))
(assert (= (x4160 (x3789 x4283 x3013 x2354 x4853 x4379)) x2354))
(assert (not (x4435 (x4266 64 x3273 36))))
(assert (x5553 x2906))
(assert (x5553 x893))
(assert (x5553 x337))
(assert (= (x894 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661)) x85))
(assert (=> (<= x2469 10000) (= 0 (x5051 x2469))))
(assert (=> (<= x239 10000) (= (x5051 x239) 0)))
(assert (x5553 x4061))
(assert (=> (<= x850 10000) (= (x5051 x850) 0)))
(assert (x5553 x1215))
(assert (not (x4435 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092))))
(assert (x5553 x5215))
(assert (= (or x3986 x1389) x3737))
(assert (=> (<= x2516 10000) (= (x5051 x2516) 0)))
(assert (= x4606 (x4160 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445))))
(assert (=> (>= 10000 x170) (= 0 (x5051 x170))))
(assert (x5553 x5364))
(assert (=> (>= 10000 x760) (= 0 (x5051 x760))))
(assert (x5553 x87))
(assert (x5553 x900))
(assert (x5553 x4168))
(assert (< (x485 x693 x2326 x3958 x1697 x97 x5558 x3510) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x530 (x894 (x5009 x530 x2144))))
(assert (= (x894 (x4266 x3137 x1784 x1436)) x3137))
(assert (x5266 x3924))
(assert (=> (<= x807 10000) (= 0 (x5051 x807))))
(assert (x5553 x1201))
(assert (x5553 x5463))
(assert (x5553 x3800))
(assert (x5553 x2924))
(assert (x5553 x5649))
(assert (x5553 x63))
(assert (< (x4266 64 x2836 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1779 x2640))
(assert (= (x894 (x269 x286 x3325 x3791 x1325)) x286))
(assert (x5553 x1778))
(assert (< 10000 (x4266 64 x3022 10)))
(assert (x5553 x1443))
(assert (= x3039 (and (not x3182) x1809)))
(assert (> (x1228 x693 x923 x975 x3805 x3677 x841) 10000))
(assert (= (or x4033 x4373) x2720))
(assert (=> (>= 10000 x1068) (= 0 (x5051 x1068))))
(assert (x5553 x2530))
(assert (x5553 x1618))
(assert (> (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787) 10000))
(assert (x5553 x3352))
(assert (x5553 x4123))
(assert (= (and (not x5053) x1508) x3591))
(assert (= (or x2557 x4745) x5135))
(assert (= (or x810 x1503) x2974))
(assert (x5553 x1554))
(assert (= (x4266 64 x2928 2) (x5051 (x4266 64 x2928 2))))
(assert (=> (>= 10000 x1643) (= (x5051 x1643) 0)))
(assert (x5553 x5242))
(assert (x5553 x3612))
(assert (= (x722 (x269 x693 x1125 x5557 x1035)) x1035))
(assert (not (x4435 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278))))
(assert (= (x3247 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787)) x3340))
(assert (x5553 x4026))
(assert (x5553 x1691))
(assert (x5553 x2434))
(assert (= x201 (and x853 (not x270))))
(assert (x5553 x1216))
(assert (x5553 x1495))
(assert (x5553 x4131))
(assert (x5553 x4165))
(assert (= x3137 (x894 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787))))
(assert (x5553 x769))
(assert (= x1312 (x40 (x1228 x5613 x5274 x3895 x2978 x2944 x1312))))
(assert (= x3599 (x5346 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135))))
(assert (< (x4266 64 x3702 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x4266 64 x3861 36) 10000))
(assert (not (x4435 (x4266 64 x5232 6))))
(assert (not (x4435 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593))))
(assert (x5553 x2999))
(assert (= (and x4063 x113) x4526))
(assert (=> (>= 10000 x4649) (= (x5051 x4649) 0)))
(assert (= (and x4399 (not x3011)) x1681))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x3511 6)))
(assert (x5553 x5440))
(assert (not (x4435 (x269 x4283 x681 x4511 x4843))))
(assert (x5553 x1098))
(assert (= x3281 (or x3129 x3639 x2720)))
(assert (x5553 x4838))
(assert (= x4471 (and x4952 (not x304))))
(assert (= (x4266 x2385 x4168 x1928) (x5051 (x4266 x2385 x4168 x1928))))
(assert (> (x4266 64 x3073 12) 10000))
(assert (not (x4435 (x3789 x3137 x130 x1576 x2450 x5371))))
(assert (x5553 x5349))
(assert (=> (>= 10000 x5407) (= (x5051 x5407) 0)))
(assert (x5553 x3968))
(assert (= (x3247 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)) x1216))
(assert (x5553 x3284))
(assert (=> (>= 10000 x3345) (= (x5051 x3345) 0)))
(assert (= (x4160 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278)) x2566))
(assert (= x2358 (x894 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024))))
(assert (= (x894 (x4266 64 x1068 36)) 64))
(assert (x5553 x1255))
(assert (x5553 x1233))
(assert (x5553 x4708))
(assert (x5553 x3125))
(assert (= (and x3007 x2721) x1982))
(assert (x5553 x2339))
(assert (x5553 x3038))
(assert (x4435 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (= 0 (x5051 59118985759084958080972419199848406897631161684926069324597705158744233476096)))
(assert (x5553 x2715))
(assert (x5553 x2240))
(assert (x5553 x2137))
(assert (x5553 x5353))
(assert (= (x1228 x4005 x4730 x1798 x3345 x4179 x4679) (x5051 (x1228 x4005 x4730 x1798 x3345 x4179 x4679))))
(assert (= x5007 (and x1876 (not x3835))))
(assert (x5553 x3978))
(assert (= (x722 (x269 x530 x3934 x3802 x4017)) x4017))
(assert (x5553 x1526))
(assert (x5553 x3967))
(assert (x5553 x5222))
(assert (= (or x4906 x3360 x5352 x2705 x2563) x409))
(assert (x5553 x3110))
(assert (=> (>= 10000 x1584) (= (x5051 x1584) 0)))
(assert (x5553 x181))
(assert (= x1809 (and (not x2697) x1905)))
(assert (x5266 x3974))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x5613 x3800 x4581)))
(assert (x5553 x2026))
(assert (> (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024) 10000))
(assert (x5553 x5599))
(assert (= (x5051 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142)) (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142)))
(assert (=> (<= x5413 10000) (= 0 (x5051 x5413))))
(assert (x5553 x279))
(assert (x5553 x690))
(assert (x5553 x1576))
(assert (= (x894 (x1228 x3137 x3982 x1109 x209 x5082 x1165)) x3137))
(assert (= x297 (x722 (x269 x610 x5215 x1472 x297))))
(assert (x5553 x2474))
(assert (x5553 x5117))
(assert (x5553 x4374))
(assert (= x5517 (x5346 (x485 x2385 x210 x579 x4423 x5503 x462 x5517))))
(assert (= (x3238 (x3789 x3525 x4032 x5204 x1927 x4690)) x4032))
(assert (= 0 (x5051 1313998243)))
(assert (x5553 x162))
(assert (< (x4266 x5530 x2942 x2837) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4880))
(assert (= (x894 (x5009 x3525 x53)) x3525))
(assert (x5553 x4721))
(assert (x5553 x2650))
(assert (= x2269 (x3238 (x3789 x1966 x2269 x3334 x1405 x4054))))
(assert (= (x4160 (x4266 64 x4008 36)) 36))
(assert (x5553 x2695))
(assert (x5553 x224))
(assert (x5553 x2083))
(assert (=> (<= x1772 10000) (= 0 (x5051 x1772))))
(assert (x5553 x1550))
(assert (x5553 x2646))
(assert (> (x5009 x5530 x3823) 10000))
(assert (x5553 x5373))
(assert (x5553 x4691))
(assert (x5553 x1941))
(assert (= x3111 (or x5029 x597)))
(assert (x5553 x1728))
(assert (x5553 x2867))
(assert (x5553 x3154))
(assert (not (x4435 (x4266 64 x2781 5))))
(assert (< (x3789 x530 x5021 x1861 x1857 x3779) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x121 x3400))
(assert (x5553 x2138))
(assert (= x3719 (and x4320 (not x1441))))
(assert (x4435 2177969240))
(assert (=> (<= x2057 10000) (= 0 (x5051 x2057))))
(assert (x5553 x4525))
(assert (x5553 x414))
(assert (= x5413 (x3238 (x5009 x2358 x5413))))
(assert (x111 x4060))
(assert (=> (>= 10000 x3492) (= (x5051 x3492) 0)))
(assert (x5553 x5065))
(assert (=> (>= 10000 x2718) (= 0 (x5051 x2718))))
(assert (x1779 x1107))
(assert (x5553 x1113))
(assert (not (x4435 (x3789 x1004 x3815 x2736 x1603 x5356))))
(assert (x5553 x1552))
(assert (=> (>= 10000 x5126) (= 0 (x5051 x5126))))
(assert (=> (<= x4843 10000) (= (x5051 x4843) 0)))
(assert (x5553 x5290))
(assert (< (x4266 64 x961 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x894 (x4266 64 x5202 11))))
(assert (x5553 x1337))
(assert (=> (>= 10000 x2333) (= 0 (x5051 x2333))))
(assert (x5553 x44))
(assert (not (x4435 (x4266 64 x1597 7))))
(assert (= (and x4602 (not x1475)) x2297))
(assert (= (x3247 (x1228 x530 x30 x2472 x1987 x170 x4859)) x170))
(assert (= x4566 (x3238 (x269 x3525 x4566 x5026 x1254))))
(assert (=> (<= x976 10000) (= (x5051 x976) 0)))
(assert (x5553 x5545))
(assert (= x2443 (x894 (x4266 x2443 x4502 x4956))))
(assert (x5553 x4030))
(assert (= x1529 (x4160 (x269 x2358 x207 x1529 x4721))))
(assert (= (x4160 (x4266 x286 x2029 x1632)) x1632))
(assert (< 10000 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384)))
(assert (x5553 x3152))
(assert (=> (>= 10000 x140) (= 0 (x5051 x140))))
(assert (x121 x4667))
(assert (=> (<= x4172 10000) (= 0 (x5051 x4172))))
(assert (= (=> (and (= x5223 (x542 x3473)) (= x775 (not (> x3254 32)))) (and (=> (= x4454 32) x1854) x775)) x798))
(assert (= (x5051 (x1228 x3137 x3982 x1109 x209 x5082 x1165)) (x1228 x3137 x3982 x1109 x209 x5082 x1165)))
(assert (= x3263 x5518))
(assert (x5553 x2674))
(assert (= x2340 (and x18 x877)))
(assert (x5553 x2459))
(assert (x5553 x2007))
(assert (= (x722 (x1228 x1004 x3020 x2102 x388 x3489 x1127)) x388))
(assert (x5553 x5063))
(assert (= (x5051 (x4266 64 x4248 (ite (= 0 x4005) x1220 (ite (<= x4005 32) x4371 (ite (<= x4005 64) x892 (ite (>= 96 x4005) x4094 (ite (<= x4005 128) x3271 (ite (<= x4005 160) x3619 (ite (>= 192 x4005) x311 (ite (<= x4005 224) x4546 x437)))))))))) (x4266 64 x4248 (ite (= 0 x4005) x1220 (ite (>= 32 x4005) x4371 (ite (<= x4005 64) x892 (ite (<= x4005 96) x4094 (ite (>= 128 x4005) x3271 (ite (<= x4005 160) x3619 (ite (>= 192 x4005) x311 (ite (>= 224 x4005) x4546 x437)))))))))))
(assert (= x850 (x1514 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850))))
(assert (=> (<= x1095 10000) (= (x5051 x1095) 0)))
(assert (= (x894 (x4266 64 x3858 10)) 64))
(assert (x5553 x1862))
(assert (=> (<= x1927 10000) (= (x5051 x1927) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947)))
(assert (x5553 x1676))
(assert (x5553 x5610))
(assert (x5553 x3941))
(assert (= (x4160 (x3789 x3525 x4032 x5204 x1927 x4690)) x5204))
(assert (=> (<= x46 10000) (= (x5051 x46) 0)))
(assert (=> (<= x3638 10000) (= 0 (x5051 x3638))))
(assert (= x980 (x4160 (x269 x5530 x1647 x980 x2699))))
(assert (=> (<= x4140 10000) (= 0 (x5051 x4140))))
(assert (x5553 x3796))
(assert (x5553 x2089))
(assert (x5553 x2215))
(assert (x5553 x1174))
(assert (x5553 x1089))
(assert (x5553 x1481))
(assert (x5553 x4568))
(assert (= (and x4399 x3011) x74))
(assert (=> (>= 10000 x5290) (= (x5051 x5290) 0)))
(assert (x5553 x3421))
(assert (= (and x406 (not x2065)) x397))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)))
(assert (= (x4160 (x4266 x3525 x852 x5119)) x5119))
(assert (x5553 x4008))
(assert (=> (<= x5499 10000) (= 0 (x5051 x5499))))
(assert (=> (<= x1784 10000) (= (x5051 x1784) 0)))
(assert (= x277 (and x3402 x1240)))
(assert (x5553 x3163))
(assert (= (and (not x2855) x2509) x3986))
(assert (x5553 x2224))
(assert (x5553 x2766))
(assert (= (and x5186 (not x5580)) x4952))
(assert (= x5334 (x40 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142))))
(assert (= (and x2255 x4493) x977))
(assert (x5553 x1266))
(assert (= x306 (and x2979 (not x1934))))
(assert (x5553 x734))
(assert (x5553 x2265))
(assert (= (x894 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677)) x5530))
(assert (=> (>= 10000 x3052) (= 0 (x5051 x3052))))
(assert (x5553 x12))
(assert (x5553 x792))
(assert (= x4554 (x3247 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850))))
(assert (= 7 (x4160 (x4266 64 x5061 7))))
(assert (x5553 x5379))
(assert (= x1163 (and x27 (not x4536))))
(assert (= x5168 (and (not x3032) x2701)))
(assert (x5553 x710))
(assert (x5553 x4192))
(assert (=> (>= 10000 x1707) (= (x5051 x1707) 0)))
(assert (x5553 x4174))
(assert (= (x5051 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384)) (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384)))
(assert (= x2530 (x3247 (x1228 x1966 x2083 x4104 x1865 x2530 x2341))))
(assert (= (x3247 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273)) x2508))
(assert (x5553 x380))
(assert (= x741 (and x4750 x1906)))
(assert (x5553 x4337))
(assert (not (x4435 (x4266 x4283 x1477 x242))))
(assert (= (x4266 64 x2382 36) (x5051 (x4266 64 x2382 36))))
(assert (x5553 x4400))
(assert (x5553 x130))
(assert (x1779 x5157))
(assert (= (x3238 (x4266 64 x3022 10)) x3022))
(assert (x5553 x1510))
(assert (= 64 (x894 (x4266 64 x3022 10))))
(assert (x4435 1000000000))
(assert (=> (<= x1523 10000) (= (x5051 x1523) 0)))
(assert (x5553 x5584))
(assert (x5553 x152))
(assert (= x5174 (and x759 (not x2761))))
(assert (= 64 (x894 (x4266 64 x2766 (ite (= x610 0) x1688 (ite (>= 32 x610) x4021 (ite (>= 64 x610) x1462 (ite (<= x610 96) x3109 (ite (>= 128 x610) x1028 (ite (<= x610 160) x1356 (ite (<= x610 192) x2042 (ite (>= 224 x610) x4656 x2961))))))))))))
(assert (x5553 x4013))
(assert (= x1906 (and x4726 x4587)))
(assert (=> (<= x208 10000) (= (x5051 x208) 0)))
(assert (x4435 486791245))
(assert (x5553 x767))
(assert (=> (<= x4168 10000) (= (x5051 x4168) 0)))
(assert (=> (<= x1865 10000) (= 0 (x5051 x1865))))
(assert (= (x40 (x485 x286 x63 x2537 x401 x1054 x2048 x4601)) x2048))
(assert (> (x3789 x5530 x2140 x4262 x114 x2333) 10000))
(assert (x5553 x1020))
(assert (x5553 x3205))
(assert (x1779 x5652))
(assert (> (x1228 x5613 x5274 x3895 x2978 x2944 x1312) 10000))
(assert (= (x5051 (+ 1 x2365)) (x5051 x2365)))
(assert (= 11 (x4160 (x4266 64 x4836 11))))
(assert (x5553 x5020))
(assert (not (x4435 (x4266 64 x5202 11))))
(assert (= (=> (and (= x1649 (x4395 (- x3912 32))) (= x3953 (x4045 x917)) (= (x4266 64 x4736 3) x434) (= (x4395 (- x5582 x3978)) x3912) (= (div (+ 31 x1613) 32) x5398) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x4484) (<= x4484 115792089237316195423570985008687907853269984665640564039457584007913129639838)) (>= x4484 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x4484)) (= (x4395 (- x3260 (mod (ite (> 32 x1613) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x806) (= x4256 (= 0 x1613)) (= x4212 (x4395 (- x1645 32))) (= x3259 (x2742 (+ 32 x3978))) (= x4060 (div x3974 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5582) (< x5582 x1378) (= (x2742 (+ 32 x5582)) x3756) (= (x2742 (+ x4722 32)) x1980) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x4484) (= (x3845 x434) x3974) (= (x2436 1 x3974) x3260) (= (x2742 (+ 32 x1771)) x5582) (= x1600 (x4266 64 x999 11)) (= x1101 (x4266 64 x999 11)) (or (= x806 1) (= x806 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 0 x1135) (= (x2742 (+ x4484 32)) x4722) (<= x5582 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1378 1) (= x1613 (ite (> x3260 0) x4060 (x2436 127 x4060))) (= x4740 (+ 1 x1101)) (> x3978 x4484) (= (x2742 (+ x1980 32)) x3978) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x4484) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x4484) (and (>= x4484 115792089237316195423570985008687907853269984665640564039457584007913129639776) (<= x4484 115792089237316195423570985008687907853269984665640564039457584007913129639838))) (= (* x5398 32) x3409) (= x1771 (x2742 (+ 2 x3259))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x4484) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x4484) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x4484) (<= x4484 115792089237316195423570985008687907853269984665640564039457584007913129639838))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x4484) (< x3978 x5582) (= (x4395 (- x3978 x4484)) x1645) (<= x5582 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x875 (x4266 64 x999 11)) (= x934 (x3754 x4740)) (= x1378 (x2742 (+ x5582 (mod (+ x3409 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x917 (+ 2 x1600)) (<= x4484 115792089237316195423570985008687907853269984665640564039457584007913129639933)) (and (=> x4256 x1121) (=> (and (= x3291 (> x1613 31)) (not x4256)) (and (=> (and (not x3291) (and (= (* x2949 256) x1935) (= (div x1526 256) x2949) (= (x3845 x434) x1526))) x1121) (=> (and (and (= x652 (x5009 32 x434)) (= (x2014 x652) x4519) (= (< x1903 x1947) x954) (= x1336 (+ x652 1)) (= x1947 (x2742 (+ x1613 x3756))) (= x1903 (x2742 (+ 32 x3756)))) x3291) (and (=> (not x954) x2727) (=> x954 x700))))))) x4405))
(assert (x5553 x3542))
(assert (= (and x3869 (not x2485)) x1810))
(assert (= (x4160 (x4266 x5613 x3800 x4581)) x4581))
(assert (x5553 x2491))
(assert (x5553 x1154))
(assert (= (x722 (x269 x85 x3183 x729 x2972)) x2972))
(assert (x5553 x4699))
(assert (= (x4160 (x4266 64 x4736 3)) 3))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 32 x3799)))
(assert (x4435 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (< 10000 (x4266 64 x4736 3)))
(assert (= (x5051 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) (x485 x610 x907 x4924 x678 x1827 x3592 x4073)))
(assert (< (x5009 x1098 x5448) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x160))
(assert (x5553 x5502))
(assert (x5553 x1646))
(assert (x111 x1107))
(assert (x5553 x4092))
(assert (< (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1771))
(assert (= x5182 x2248))
(assert (x5553 x3157))
(assert (x5553 x5644))
(assert (= (=> (= x2502 (+ 292 x2985)) x885) x4306))
(assert (x5553 x1573))
(assert (= (x4266 64 x4736 3) (x5051 (x4266 64 x4736 3))))
(assert (= x1643 (x4160 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473))))
(assert (x5553 x2445))
(assert (x5553 x2831))
(assert (= (x5051 (x4266 64 x801 10)) (x4266 64 x801 10)))
(assert (= (x894 (x5009 32 104)) 32))
(assert (= (x894 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) x1966))
(assert (= x4791 (and x3869 x2485)))
(assert (= (or x4687 x2550) x718))
(assert (= x4854 (=> (and (= (= x3889 0) x778) (or (and (not x778) (and (= x1997 128) (= x1275 x3889))) (and (and (<= x1314 18446744073709551615) (not (< x4925 x2590)) (>= x4892 356) x3275 (= x735 (x3714 290)) (= (x3296 164) x1314) (= (= (x4198 260) 34) x5350) (= x4892 (x4395 (- x2176 290))) (= x814 (x4762 x3819)) (= x1997 354) (= x4572 (x2742 (+ 31 x1130))) (= x863 256) (>= x814 1) x5350 x1873 (<= x4925 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 356 x4925) (= x4725 (x2742 (+ x3874 32))) (= (x5111 160) x1932) (= (x3714 322) x4249) (= x1554 (x3296 260)) (= x4892 x4925) (= 0 x3577) (<= x3252 127) (<= x1554 18446744073709551615) (= x3968 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4572)) (= x3395 1084734224) (= x2196 (x1178 224)) (= false x4889) (= (= (x4198 228) (x89 518)) x3275) (<= x4892 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= false x686) (= x370 (x4395 (- x3874 294))) (= x2590 (+ 292 x1554)) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x3361) (= x2655 (+ x1314 196)) (= x2611 160) (= (= (x4198 196) (x89 486)) x1873) (= (x5111 128) x4093) (= false x4634) (= (x2742 (+ 31 x2196)) x3023) (= x4505 (x5111 128)) (= 0 x1867) (= x5541 false) (= x1275 x735) (= x2875 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3023)) (not (< x4925 x2655)) (= x174 x2781) (= (= (x4198 164) 64) x1522) (= (x5111 160) x5075) (= x2176 (x2742 (+ x4725 x2875))) (= (x2742 (+ 486 x3968)) x3874) x1522 (= x3667 x2928) (= (x1579 128) x1130) (= 290 x1038) (<= x3252 127)) x778))) x1762)))
(assert (= x5289 x1686))
(assert (< 10000 (x1228 x286 x1219 x5302 x3589 x4897 x4255)))
(assert (x5553 x1320))
(assert (x5553 x3803))
(assert (< (x4266 64 x1597 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1939 (x5346 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787))))
(assert (= x3036 (x4160 (x4266 x1855 x5144 x3036))))
(assert (= x5189 (x4160 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134))))
(assert (> (x4266 64 x4480 12) 10000))
(assert (=> (<= x3183 10000) (= (x5051 x3183) 0)))
(assert (= x4381 (and x205 x2806)))
(assert (=> (>= 10000 x3800) (= 0 (x5051 x3800))))
(assert (= x2492 (or x5471 x5485 x1192)))
(assert (x5553 x4806))
(assert (x5553 x3568))
(assert (< (x4266 64 x5630 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1273))
(assert (x5553 x2512))
(assert (= x1557 (x722 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787))))
(assert (x5553 x1630))
(assert (x5553 x123))
(assert (= (and x1441 x4320) x4403))
(assert (=> (<= x1816 10000) (= 0 (x5051 x1816))))
(assert (x5553 x4059))
(assert (= x898 (and (not x1921) x3162)))
(assert (x1779 x3047))
(assert (= (and x381 x4727) x2420))
(assert (=> (<= x323 10000) (= (x5051 x323) 0)))
(assert (= (and x958 x438) x1319))
(assert (x5553 x2955))
(assert (x5553 x4499))
(assert (= (x894 (x4266 64 x1464 10)) 64))
(assert (x5553 x1692))
(assert (x5266 x2232))
(assert (= x3818 (and x1458 x4034)))
(assert (=> (>= 10000 x3195) (= 0 (x5051 x3195))))
(assert (x5553 x3977))
(assert (x5553 x2123))
(assert (x5553 x771))
(assert (x5553 x53))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x5501 x784 x3627 x2194)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x85 x4919 x629 x2130 x1420 x2994)))
(assert (=> (>= 10000 x2927) (= 0 (x5051 x2927))))
(assert (x5553 x750))
(assert (= (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473) (x5051 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473))))
(assert (= x1121 x2727))
(assert (x5553 x674))
(assert (not (x4435 (x3789 x4283 x3013 x2354 x4853 x4379))))
(assert (= (=> (= x3992 x180) x2473) x86))
(assert (x111 x5599))
(assert (x5553 x5517))
(assert (=> (>= 10000 x4652) (= (x5051 x4652) 0)))
(assert (x5553 x3712))
(assert (not (x4435 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525))))
(assert (=> (>= 10000 x4123) (= (x5051 x4123) 0)))
(assert (x5553 x5569))
(assert (< (x269 x286 x3325 x3791 x1325) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x5259 x457) x759))
(assert (= (and (not x344) x3938) x3930))
(assert (= x2057 (x4160 (x4266 x85 x2505 x2057))))
(assert (not (x4435 (x5009 32 x1199))))
(assert (=> (<= x2033 10000) (= (x5051 x2033) 0)))
(assert (x5553 x3167))
(assert (= (x3789 x3525 x4032 x5204 x1927 x4690) (x5051 (x3789 x3525 x4032 x5204 x1927 x4690))))
(assert (x5553 x186))
(assert (=> (<= x3895 10000) (= (x5051 x3895) 0)))
(assert (< (x485 x2385 x210 x579 x4423 x5503 x462 x5517) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3273 (x3238 (x4266 64 x3273 36))))
(assert (= x1847 (and (not x5226) x35)))
(assert (x5553 x2435))
(assert (not (x4435 (x5009 x530 x2144))))
(assert (= x4293 (=> (= (+ x518 292) x4322) x5060)))
(assert (x5553 x3268))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x5653 11)))
(assert (= 0 (x5051 100000)))
(assert (x5553 x4093))
(assert (=> (>= 10000 x130) (= 0 (x5051 x130))))
(assert (x5553 x4153))
(assert (< 10000 (x4266 64 x4008 36)))
(assert (x5553 x2417))
(assert (x5553 x2059))
(assert (not (x4435 (x4266 x2385 x4168 x1928))))
(assert (x5553 x5278))
(assert (x5553 x910))
(assert (x5553 x2021))
(assert (x5553 x964))
(assert (x5553 x2115))
(assert (x5553 x2543))
(assert (= 64 (x894 (x4266 64 x4216 10))))
(assert (= (x894 (x4266 64 x4248 (ite (= x4005 0) x1220 (ite (<= x4005 32) x4371 (ite (>= 64 x4005) x892 (ite (<= x4005 96) x4094 (ite (<= x4005 128) x3271 (ite (<= x4005 160) x3619 (ite (>= 192 x4005) x311 (ite (<= x4005 224) x4546 x437)))))))))) 64))
(assert (> (x4266 x2443 x4502 x4956) 10000))
(assert (x5553 x5630))
(assert (=> (<= x2008 10000) (= 0 (x5051 x2008))))
(assert (x5553 x412))
(assert (x5553 x4629))
(assert (=> (<= x366 10000) (= 0 (x5051 x366))))
(assert (x5553 x3508))
(assert (= (x4160 (x4266 64 x999 11)) 11))
(assert (=> (<= x4248 10000) (= (x5051 x4248) 0)))
(assert (x5553 x5347))
(assert (x5553 x2226))
(assert (= (x4160 (x1228 x2443 x1430 x5633 x4923 x1095 x31)) x5633))
(assert (x5553 x5310))
(assert (x5553 x2744))
(assert (x5553 x4561))
(assert (< (x1228 x1966 x2083 x4104 x1865 x2530 x2341) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1004 (x894 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28))))
(assert (x5553 x2004))
(assert (< 10000 (x5009 32 x3452)))
(assert (x5553 x98))
(assert (x5553 x3454))
(assert (= (x5051 (x269 x2443 x3830 x1931 x5230)) (x269 x2443 x3830 x1931 x5230)))
(assert (= (x269 x1098 x5454 x1584 x3052) (x5051 (x269 x1098 x5454 x1584 x3052))))
(assert (=> (>= 10000 x4793) (= (x5051 x4793) 0)))
(assert (= x3462 (and x1805 (not x4178))))
(assert (= (x5051 (+ 1 x3601)) (x5051 x3601)))
(assert (not (x4435 (x3789 x2385 x3894 x3556 x3996 x3839))))
(assert (x5553 x5085))
(assert (x5553 x1488))
(assert (not (x4435 (x4266 64 x5487 6))))
(assert (x5553 x3689))
(assert (x5553 x4475))
(assert (x5553 x2333))
(assert (= x1595 (and (not x1664) x2406)))
(assert (not (x4435 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787))))
(assert (x5553 x2771))
(assert (= (or x4161 x2320) x1838))
(assert (= (=> (and (= x4132 x1492) (= x1590 x4649) (= x3498 x2305) (= x87 x2482) (= x1956 x425) (= x5415 x4131) (= x2934 x2781) (= x2703 x5342) (= x3634 x4973) (= x3295 2) (= x2661 x4509) (= x4324 (+ x1851 1)) (= x748 x2598) (= x3468 (+ 1 x1851)) (= x5071 x1908) (= x2798 x1338) (= x2440 0)) x618) x4983))
(assert (not (x4435 (x1228 x5530 x671 x845 x2168 x5004 x498))))
(assert (= (or x3811 x3959 x4052) x4320))
(assert (= (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336) (x5051 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336))))
(assert (= x2514 (and (not x3007) x2721)))
(assert (x5553 x5143))
(assert (=> (<= x2244 10000) (= (x5051 x2244) 0)))
(assert (x5553 x3602))
(assert (x5553 x1904))
(assert (x5553 x4868))
(assert (= (or x3281 x1203) x2815))
(assert (x5553 x4299))
(assert (=> (>= 10000 x3375) (= 0 (x5051 x3375))))
(assert (> (x5009 32 x1199) 10000))
(assert (x5553 x1584))
(assert (=> (<= x5558 10000) (= (x5051 x5558) 0)))
(assert (x5553 x3849))
(assert (x5553 x2682))
(assert (> (x4266 64 x760 11) 10000))
(assert (x5553 x384))
(assert (x5553 x909))
(assert (x5553 x5501))
(assert (> (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593) 10000))
(assert (= (x894 (x1228 x610 x2480 x264 x3876 x2348 x1299)) x610))
(assert (x5553 x4893))
(assert (x5553 x2636))
(assert (= (x5051 (x3789 x2358 x4298 x3642 x3410 x4650)) (x3789 x2358 x4298 x3642 x3410 x4650)))
(assert (x4435 65535))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x2382 36)))
(assert (=> (<= x5061 10000) (= (x5051 x5061) 0)))
(assert (not (x4435 (x5009 x1855 x4516))))
(assert (=> (<= x4796 10000) (= 0 (x5051 x4796))))
(assert (x5553 x907))
(assert (= x1744 (and (not x633) x2779)))
(assert (not (x4435 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638))))
(assert (= x4601 (x5346 (x485 x286 x63 x2537 x401 x1054 x2048 x4601))))
(assert (x5553 x3607))
(assert (=> (>= 10000 x1253) (= 0 (x5051 x1253))))
(assert (=> (<= x2121 10000) (= (x5051 x2121) 0)))
(assert (=> (>= 10000 x4629) (= 0 (x5051 x4629))))
(assert (x5553 x4564))
(assert (not (x4435 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253))))
(assert (x5553 x2407))
(assert (= x2348 (x3247 (x1228 x610 x2480 x264 x3876 x2348 x1299))))
(assert (x5553 x166))
(assert (x5553 x4104))
(assert (x5553 x4692))
(assert (= x2041 (and (not x2702) x5231)))
(assert (x5553 x2640))
(assert (x5553 x3254))
(assert (x5553 x1870))
(assert (not (x4435 (x4266 x5530 x2942 x2837))))
(assert (x5553 x1628))
(assert (x5553 x3252))
(assert (x5553 x1237))
(assert (> (x4266 64 x4216 10) 10000))
(assert (= (x3238 (x4266 64 x760 11)) x760))
(assert (x5553 x1764))
(assert (= (x3238 (x4266 64 x3861 36)) x3861))
(assert (x5553 x2712))
(assert (x5553 x2934))
(assert (x5553 x2039))
(assert (x5553 x2380))
(assert (x5553 x4185))
(assert (x5553 x1094))
(assert (= (x5051 (x4266 x1855 x5144 x3036)) (x4266 x1855 x5144 x3036)))
(assert (x5553 x5319))
(assert (x5553 x3392))
(assert (x5553 x530))
(assert (= (=> (and (= (not (< 128 x3529)) x1208) (= x160 (x3483 x5612)) (= (x2742 (+ 96 x4770)) x2522) (= (x2742 (+ 96 x465)) x5612)) (and x345 x1208)) x4598))
(assert (x5553 x2700))
(assert (x5553 x3557))
(assert (= (and x5294 x5297) x5000))
(assert (x5553 x1983))
(assert (x5553 x5313))
(assert (x5553 x3677))
(assert (= x4687 (and x340 x4848)))
(assert (= (x3238 (x4266 64 x3511 6)) x3511))
(assert (=> (<= x3861 10000) (= 0 (x5051 x3861))))
(assert (x5553 x2076))
(assert (x5553 x1751))
(assert (not (x4435 (x5009 x286 x3203))))
(assert (= x845 (x4160 (x1228 x5530 x671 x845 x2168 x5004 x498))))
(assert (x5553 x4347))
(assert (x5553 x4115))
(assert (x5553 x980))
(assert (=> (<= x211 10000) (= 0 (x5051 x211))))
(assert (x5553 x5627))
(assert (x5553 x941))
(assert (= x1177 (x3238 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677))))
(assert (< (x4266 64 x3406 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x4266 64 1 x1261)))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (= (x894 (x3789 x4283 x3013 x2354 x4853 x4379)) x4283))
(assert (x5553 x4323))
(assert (x5553 x1812))
(assert (x5553 x2466))
(assert (x5553 x5157))
(assert (x5553 x5325))
(assert (= (x5346 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535)) x3535))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x5613 x5584)))
(assert (x5553 x2665))
(assert (x5553 x648))
(assert (=> (<= x5593 10000) (= (x5051 x5593) 0)))
(assert (= 4 (x4160 (x4266 64 x4736 4))))
(assert (x1779 x1978))
(assert (= 10 (x4160 (x4266 64 x3022 10))))
(assert (=> (>= 10000 x1335) (= 0 (x5051 x1335))))
(assert (x5553 x3690))
(assert (x5553 x3258))
(assert (= x3345 (x722 (x1228 x4005 x4730 x1798 x3345 x4179 x4679))))
(assert (x5553 x2606))
(assert (x5553 x3056))
(assert (x5553 x1556))
(assert (=> (>= 10000 x1443) (= (x5051 x1443) 0)))
(assert (x5553 x3922))
(assert (x5553 x1404))
(assert (x5553 x3994))
(assert (x5553 x1848))
(assert (= x1772 (x40 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787))))
(assert (= x4860 (x4160 (x3789 x2443 x4170 x4860 x1625 x4474))))
(assert (= x4659 (x4160 (x4266 64 1 x4659))))
(assert (x5553 x5075))
(assert (x5553 x2698))
(assert (x5553 x725))
(assert (not (x4435 (x4266 x1966 x4625 x5022))))
(assert (x5553 x3487))
(assert (> (x4266 64 x2382 6) 10000))
(assert (not (x4435 (x4266 64 x3702 3))))
(assert (x5553 x125))
(assert (= (or x73 x4559 x3722 x933 x2615) x243))
(assert (=> (<= x1436 10000) (= (x5051 x1436) 0)))
(assert (= (x894 (x4266 x1855 x5144 x3036)) x1855))
(assert (= (x5051 (x4266 64 x4443 36)) (x4266 64 x4443 36)))
(assert (x5553 x4232))
(assert (x5553 x4454))
(assert (= (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324) (x5051 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324))))
(assert (x5553 x5543))
(assert (= (or x3676 x2653 x5506 x5567 x5007) x4665))
(assert (< 10000 (x4266 64 x3858 10)))
(assert (x5553 x4298))
(assert (x5553 x2155))
(assert (=> (<= x897 10000) (= (x5051 x897) 0)))
(assert (=> (<= x4588 10000) (= 0 (x5051 x4588))))
(assert (= x3124 (x3238 (x1228 x3525 x3124 x2682 x4476 x5480 x2515))))
(assert (x5553 x2117))
(assert (= 64 (x894 (x4266 64 x3273 36))))
(assert (x5553 x2022))
(assert (= (and x5369 (not x1260)) x926))
(assert (x5553 x4879))
(assert (not (x4435 (x4266 64 x484 36))))
(assert (x5553 x4312))
(assert (= x5613 (x894 (x3789 x5613 x4818 x3523 x3488 x2921))))
(assert (x5553 x3802))
(assert (= (x4160 (x4266 64 x1597 7)) 7))
(assert (x5553 x2355))
(assert (=> (>= 10000 x5190) (= 0 (x5051 x5190))))
(assert (= x4301 (x3247 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156))))
(assert (= (x5051 (x5009 x5530 x3823)) (x5009 x5530 x3823)))
(assert (= x2745 (=> (= x1505 (+ x900 x4028)) x2125)))
(assert (x5553 x3395))
(assert (= (or x4359 x1030) x4408))
(assert (x5553 x4339))
(assert (= (x894 (x3789 x1966 x2269 x3334 x1405 x4054)) x1966))
(assert (=> (<= x1147 10000) (= 0 (x5051 x1147))))
(assert (x4435 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (x5553 x4901))
(assert (= x3525 (x894 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914))))
(assert (x5553 x4619))
(assert (= (x3247 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278)) x5125))
(assert (= (x5051 (x4266 64 x2829 (ite (= x3525 0) x3645 (ite (<= x3525 32) x799 (ite (<= x3525 64) x1267 (ite (>= 96 x3525) x149 (ite (>= 128 x3525) x745 (ite (>= 160 x3525) x2422 (ite (<= x3525 192) x615 (ite (<= x3525 224) x3015 x3278)))))))))) (x4266 64 x2829 (ite (= x3525 0) x3645 (ite (>= 32 x3525) x799 (ite (>= 64 x3525) x1267 (ite (<= x3525 96) x149 (ite (>= 128 x3525) x745 (ite (>= 160 x3525) x2422 (ite (>= 192 x3525) x615 (ite (<= x3525 224) x3015 x3278)))))))))))
(assert (= 64 (x894 (x4266 64 x961 100))))
(assert (= x5598 (x5346 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598))))
(assert (< 10000 (x269 x610 x5215 x1472 x297)))
(assert (x5553 x1914))
(assert (x5553 x746))
(assert (= (x5051 (x3789 x1855 x4793 x5161 x2447 x1968)) (x3789 x1855 x4793 x5161 x2447 x1968)))
(assert (x5553 x339))
(assert (x5553 x5023))
(assert (< 10000 (x4266 64 x1597 3)))
(assert (=> (>= 10000 x1515) (= 0 (x5051 x1515))))
(assert (= (x5051 x3929) (x5051 (+ 1 x3929))))
(assert (=> (>= 10000 x2942) (= 0 (x5051 x2942))))
(assert (= x890 (and x2923 (not x5527))))
(assert (x5553 x2313))
(assert (x5553 x3441))
(assert (= (and (not x3541) x243) x2011))
(assert (= x3858 (x3238 (x4266 64 x3858 10))))
(assert (= x5017 x1944))
(assert (x5553 x3634))
(assert (x5553 x955))
(assert (= (x5051 1766847064778384329583297500742918515827483896875618958121606201292619776) 0))
(assert (x5553 x2052))
(assert (x5553 x3026))
(assert (not (x4435 (x4266 64 x4927 100))))
(assert (< (x269 x3525 x4566 x5026 x1254) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1767 10000) (= 0 (x5051 x1767))))
(assert (x5553 x5434))
(assert (x5553 x4258))
(assert (= (and x1012 x3794) x2806))
(assert (x5553 x389))
(assert (x5553 x4096))
(assert (x5553 x4292))
(assert (x5553 x850))
(assert (x5553 x4846))
(assert (= (x894 (x4266 64 x4248 (ite (= 0 x1855) x3081 (ite (<= x1855 32) x322 (ite (<= x1855 64) x5477 (ite (<= x1855 96) x3025 (ite (<= x1855 128) x2729 (ite (>= 160 x1855) x4313 (ite (<= x1855 192) x697 (ite (<= x1855 224) x2883 x3375)))))))))) 64))
(assert (=> (<= x3536 10000) (= (x5051 x3536) 0)))
(assert (x1779 x4742))
(assert (x5553 x5528))
(assert (x5553 x1390))
(assert (< (x4266 64 x2766 (ite (= x610 0) x1688 (ite (>= 32 x610) x4021 (ite (>= 64 x610) x1462 (ite (<= x610 96) x3109 (ite (>= 128 x610) x1028 (ite (<= x610 160) x1356 (ite (>= 192 x610) x2042 (ite (<= x610 224) x4656 x2961))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x5653 10000) (= (x5051 x5653) 0)))
(assert (= (x5009 32 x1587) (x5051 (x5009 32 x1587))))
(assert (> (x4266 64 x4140 11) 10000))
(assert (x5553 x4118))
(assert (= x3233 (x5346 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325))))
(assert (x5553 x177))
(assert (x5553 x5529))
(assert (x5553 x5489))
(assert (x5553 x567))
(assert (= 0 (x894 (x102 0))))
(assert (x5553 x3891))
(assert (=> (>= 10000 x4464) (= 0 (x5051 x4464))))
(assert (x5553 x5368))
(assert (= (x4160 (x4266 64 x2928 2)) 2))
(assert (x5553 x1016))
(assert (x5553 x5487))
(assert (not (x4435 (x3789 x5530 x2140 x4262 x114 x2333))))
(assert (x5553 x4079))
(assert (> (x1228 x2443 x1430 x5633 x4923 x1095 x31) 10000))
(assert (not (x4435 (x5009 x1098 x5448))))
(assert (x5553 x5318))
(assert (x5553 x1182))
(assert (=> (>= 10000 x4037) (= (x5051 x4037) 0)))
(assert (= (x894 (x4266 64 x4480 12)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x2443 x1792)))
(assert (= (x5051 (x3789 x3137 x130 x1576 x2450 x5371)) (x3789 x3137 x130 x1576 x2450 x5371)))
(assert (x5553 x3067))
(assert (x5553 x1234))
(assert (x5553 x227))
(assert (= (and x262 (not x2597)) x204))
(assert (x5553 x4319))
(assert (= x4283 (x894 (x5009 x4283 x769))))
(assert (x5553 x2741))
(assert (x5553 x4083))
(assert (= (x3789 x1098 x2878 x5015 x4295 x4143) (x5051 (x3789 x1098 x2878 x5015 x4295 x4143))))
(assert (x5553 x2027))
(assert (=> (>= 10000 x5024) (= (x5051 x5024) 0)))
(assert (x5553 x4252))
(assert (x5553 x3894))
(assert (< (x4266 64 1 x4659) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5493))
(assert (= x4786 (and x5183 x1517)))
(assert (x5553 x3570))
(assert (=> (<= x4073 10000) (= 0 (x5051 x4073))))
(assert (=> (>= 10000 x1723) (= (x5051 x1723) 0)))
(assert (x5553 x5436))
(assert (x5553 x2482))
(assert (= x530 (x894 (x1228 x530 x30 x2472 x1987 x170 x4859))))
(assert (= x1098 (x894 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535))))
(assert (x5553 x4752))
(assert (x5553 x1839))
(assert (= x3647 (and x32 x1321)))
(assert (=> (<= x4554 10000) (= (x5051 x4554) 0)))
(assert (= (and x2855 x2509) x1389))
(assert (= (x5051 (x4266 64 x3702 3)) (x4266 64 x3702 3)))
(assert (x5553 x4921))
(assert (x5553 x4596))
(assert (x5553 x5062))
(assert (= (and x4711 x2420) x2468))
(assert (x5553 x3511))
(assert (x5553 x4620))
(assert (= x3334 (x4160 (x3789 x1966 x2269 x3334 x1405 x4054))))
(assert (x5553 x3080))
(assert (x5553 x4581))
(assert (= (and (not x4612) x5618) x688))
(assert (not (x4435 (x269 x4005 x99 x921 x2321))))
(assert (< 10000 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134)))
(assert (x5553 x1077))
(assert (=> (<= x1951 10000) (= 0 (x5051 x1951))))
(assert (= (or x1652 x4091 x3035 x1713 x3462) x15))
(assert (= (x722 (x3789 x3137 x130 x1576 x2450 x5371)) x2450))
(assert (= x4473 (and (not x5519) x937)))
(assert (= x3841 (and x1139 (not x1457))))
(assert (=> (<= x3325 10000) (= 0 (x5051 x3325))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x610 x2516 x3169 x3223 x3267)))
(assert (= (x5051 (x5009 32 104)) (x5009 32 104)))
(assert (< (x4266 64 x2382 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4086))
(assert (=> (<= x4008 10000) (= 0 (x5051 x4008))))
(assert (not (x4435 (x4266 x1004 x905 x573))))
(assert (x5553 x658))
(assert (=> (<= x1968 10000) (= 0 (x5051 x1968))))
(assert (=> (<= x53 10000) (= 0 (x5051 x53))))
(assert (x5553 x5449))
(assert (x5553 x2100))
(assert (x5553 x5331))
(assert (x5553 x2989))
(assert (x5553 x4722))
(assert (x5553 x294))
(assert (x5553 x911))
(assert (x5553 x4275))
(assert (< (x269 x1004 x4085 x5592 x4629) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x2005))
(assert (x5553 x4996))
(assert (= (x3247 (x3789 x2443 x4170 x4860 x1625 x4474)) x4474))
(assert (x5553 x4154))
(assert (= x2923 (and x2090 (not x2174))))
(assert (x5553 x5378))
(assert (x5553 x5284))
(assert (not (x4435 (x269 x2358 x207 x1529 x4721))))
(assert (x121 x2210))
(assert (=> (>= 10000 x1036) (= (x5051 x1036) 0)))
(assert (= x2516 (x3238 (x3789 x610 x2516 x3169 x3223 x3267))))
(assert (=> (<= x4901 10000) (= (x5051 x4901) 0)))
(assert (= (and x2239 x4678) x171))
(assert (x5553 x2928))
(assert (x5553 x5330))
(assert (x5553 x1480))
(assert (= 0 (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (< (x3789 x5613 x4818 x3523 x3488 x2921) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3469))
(assert (x5553 x4262))
(assert (= x1839 (x40 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126))))
(assert (= (x40 (x1228 x2358 x2475 x383 x2464 x3210 x5595)) x5595))
(assert (= x2385 (x894 (x4266 x2385 x4168 x1928))))
(assert (x5553 x518))
(assert (not (x4435 (x5009 x5530 x3823))))
(assert (x5553 x862))
(assert (x5553 x2523))
(assert (x5553 x5579))
(assert (x5553 x278))
(assert (=> (<= x3823 10000) (= (x5051 x3823) 0)))
(assert (x5553 x3556))
(assert (x5553 x1135))
(assert (x5553 x240))
(assert (x5553 x2192))
(assert (x5553 x963))
(assert (= x5061 (x3238 (x4266 64 x5061 7))))
(assert (x5553 x2925))
(assert (x5553 x2750))
(assert (x5553 x2736))
(assert (x5553 x211))
(assert (x5553 x3688))
(assert (= x4625 (x3238 (x4266 x1966 x4625 x5022))))
(assert (= (x894 (x3789 x1004 x3815 x2736 x1603 x5356)) x1004))
(assert (= (x894 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324)) x530))
(assert (= (and x2871 x2713) x2307))
(assert (x5553 x5240))
(assert (= (and x406 x2065) x5442))
(assert (= x5393 (=> (and (= x5292 x5252) (= x4847 x3320) (= x367 x1370) (= x3354 x4083) (= x5363 x2132) (= x4369 x5608) (= x4404 x644) (= x594 x3705) (= x1426 x2714) (= x2777 x3671) (= x676 x2593) (= x4701 x5181) (= x2706 x511)) x5112)))
(assert (=> (<= x5405 10000) (= 0 (x5051 x5405))))
(assert (= (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850) (x5051 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850))))
(assert (x4435 89332125780766104441357105940599211734484755930370930871569612501041822040064))
(assert (x5553 x1861))
(assert (x5553 x4065))
(assert (= x5215 (x3238 (x269 x610 x5215 x1472 x297))))
(assert (x5553 x4004))
(assert (= x4906 (and x1825 (not x1474))))
(assert (= x2641 (or x302 x1074)))
(assert (x5553 x4068))
(assert (=> (<= x2157 10000) (= 0 (x5051 x2157))))
(assert (= (=> (= (= 0 x5240) x3151) (and (=> (and (and (= x2674 (x3146 x3107)) (= x547 (< 3 x2674)) (= (x4266 64 x4836 11) x3107) (>= 255 x2674)) x3151) (and (=> (and (= x5475 (= x2674 2)) (not x547)) (and (=> (and (not x5475) (and (= 4 x4973) (= false x5322) (= true x1777))) x4983) (=> (and (and (= x782 256) (= 160 x727) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5652) x548) (= 0 x1145) (= x2623 x3355) (= x5652 (x2742 (+ x1280 31))) (= 290 x2137) (= (= 34 (x26 260)) x5382) (= x4697 (= (x175 518) (x26 228))) (= (x4266 64 1 x4794) x4362) (= x4794 (x4266 64 x2781 4)) (= x2210 (x2742 (+ 31 x1371))) (= x2919 0) (= x3391 (= (x175 486) (x26 196))) (= x1973 false) x5382 (= x4597 (x2742 (+ x4392 x5))) x3391 (= 1084734224 x3314) (<= x2781 65535) (>= x19 1) (= (= 64 (x26 164)) x4900) (= (x4762 x3819) x19) (= x4883 x2928) (= x1371 (x1417 224)) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2210) x5) x4697 x4900 (= x826 (x4395 (- x1033 294))) (= (x4395 (- x4597 290)) x3355) (= (x2742 (+ x548 486)) x1033) (>= 127 x1342) (= x1280 (x2203 128)) (= x5256 false) (= x3000 x2781) (<= x1342 127) (= x5377 (x1149 x4362)) (= x4958 (or (and (= true (<= (- x2623 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 (- x2623 4))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2623 4)))) (<= 356 x2623) (<= 356 x3355) (= x4392 (x2742 (+ 32 x1033))) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x2665)) x5475) (and (=> x4958 x3521) (=> (and (not x4958) (= true x4536)) (and (=> (not x4536) x3521) (=> (and x4536 (= (and (< 195 x2623) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2623) true)) x974)) (and (=> (and x974 (and (= (< 18446744073709551615 x421) x1485) (= x421 (x3341 164)))) (and (=> x1485 x1331) (=> (and (not x1485) (and (= x2367 (> x2893 x2623)) (= x2893 (x2742 (+ 196 x421))))) (and (=> x2367 x5570) (=> (and (not x2367) (and (>= x2623 356) (= (x3341 260) x1439) (<= x2623 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x5304 (> x1439 18446744073709551615)))) (and (=> x5304 x1331) (=> (and (and (= (< x2623 x2577) x5012) (= x2577 (x2742 (+ 292 x1439)))) (not x5304)) (and (=> (and (not x5012) (and (= x4649 x786) (= x3498 x3994) (= (x1303 160) x5538) (= (x1303 128) x2906) (= x2798 x1412) (= x2265 x1492) (= 64 x2920) (= x5498 false) (= x2007 (x1303 160)) (= x716 (+ 1 x1851)) (= x1956 x5248) (= x4509 x4323) (= x470 x2598) (= false x1131) (= x2781 x1252) (= x1172 1) (= x5071 x3602) (= x87 x4213) (= (x1303 128) x3660) (= x5342 x80) (= x5601 x5415))) x104) (=> x5012 x5570))))))))) (=> (not x974) x3521))))))))) (=> (and x547 (and (= x2545 false) (= true x5263) (= 36 x4973))) x4983))) (=> (and (not x3151) (and (= x2001 true) (= x4973 4) (= x4769 false))) x4983))) x543))
(assert (x1779 x337))
(assert (x5553 x95))
(assert (x5553 x774))
(assert (=> (>= 10000 x5456) (= (x5051 x5456) 0)))
(assert (x5553 x1397))
(assert (= x3272 (x4160 (x1228 x1098 x3372 x3272 x4492 x1282 x3321))))
(assert (x5553 x2731))
(assert (x5553 x713))
(assert (x5553 x1342))
(assert (x5553 x2208))
(assert (= (x894 (x4266 64 x4140 11)) 64))
(assert (not (x4435 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156))))
(assert (x5553 x1472))
(assert (x5553 x1254))
(assert (x5553 x1835))
(assert (x5553 x516))
(assert (= (x4160 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495)) x2762))
(assert (= (x5009 x1855 x4516) (x5051 (x5009 x1855 x4516))))
(assert (=> (>= 10000 x3824) (= 0 (x5051 x3824))))
(assert (x5553 x914))
(assert (=> (<= x2921 10000) (= 0 (x5051 x2921))))
(assert (= (x4266 x4005 x4465 x1714) (x5051 (x4266 x4005 x4465 x1714))))
(assert (x5553 x4132))
(assert (x5553 x1964))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x85 x2505 x2057)))
(assert (x5553 x1673))
(assert (=> (<= x3273 10000) (= (x5051 x3273) 0)))
(assert (= x3410 (x722 (x3789 x2358 x4298 x3642 x3410 x4650))))
(assert (= x1684 (x3238 (x269 x1966 x1684 x225 x724))))
(assert (= (x5051 (x5009 x5613 x5584)) (x5009 x5613 x5584)))
(assert (=> (<= x5302 10000) (= (x5051 x5302) 0)))
(assert (= x4283 (x894 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135))))
(assert (x5553 x1852))
(assert (< 10000 (x4266 64 x999 11)))
(assert (=> (>= 10000 x3571) (= (x5051 x3571) 0)))
(assert (=> (>= 10000 x141) (= 0 (x5051 x141))))
(assert (x5553 x3582))
(assert (x5553 x3122))
(assert (not (x4435 (x3789 x530 x5021 x1861 x1857 x3779))))
(assert (= x2032 (=> (and (= x2484 (= x3883 0)) (or (not x2484) x2484)) x183)))
(assert (= (x269 x5501 x784 x3627 x2194) (x5051 (x269 x5501 x784 x3627 x2194))))
(assert (=> (<= x4927 10000) (= (x5051 x4927) 0)))
(assert (x5553 x3597))
(assert (x5553 x2578))
(assert (x5553 x3065))
(assert (x5553 x2418))
(assert (= (x894 (x4266 64 1 x1261)) 64))
(assert (x5553 x4628))
(assert (x5553 x4572))
(assert (= (x894 (x5009 x610 x5418)) x610))
(assert (> (x269 x1966 x1684 x225 x724) 10000))
(assert (x5553 x330))
(assert (x111 x5121))
(assert (x5553 x3108))
(assert (x5553 x2452))
(assert (= (x4160 (x3789 x2434 x3433 x4948 x1572 x2544)) x4948))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495)))
(assert (< 10000 (x4266 x286 x2029 x1632)))
(assert (= x2654 (and x4658 x327)))
(assert (= (and x3424 x1227) x3005))
(assert (= x3496 (=> (and (= x3114 (> x261 0)) (= x5394 (ite (> x2263 150) 150 x2263)) (= (x2742 (+ 32 x4115)) x4819)) (and (=> (not x3114) x3636) (=> x3114 x86)))))
(assert (=> (>= 10000 x2811) (= 0 (x5051 x2811))))
(assert (=> (>= 10000 x4492) (= (x5051 x4492) 0)))
(assert (x4435 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (x5553 x4643))
(assert (> (x5009 x2434 x2244) 10000))
(assert (x5553 x2519))
(assert (= (x722 (x3789 x3525 x4032 x5204 x1927 x4690)) x1927))
(assert (= x3791 (x4160 (x269 x286 x3325 x3791 x1325))))
(assert (= (=> (= x4971 x1840) x3216) x3686))
(assert (=> (<= x1844 10000) (= (x5051 x1844) 0)))
(assert (x5553 x5619))
(assert (x5553 x1794))
(assert (x5553 x4747))
(assert (x5553 x5022))
(assert (= (x3238 (x4266 64 x484 36)) x484))
(assert (= x1024 (x5346 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024))))
(assert (=> (<= x2515 10000) (= (x5051 x2515) 0)))
(assert (< 10000 (x4266 64 x4736 5)))
(assert (x5553 x5595))
(assert (x5553 x4903))
(assert (= (x3238 (x3789 x4005 x4717 x294 x5499 x3258)) x4717))
(assert (= (x1514 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)) x177))
(assert (=> (>= 10000 x784) (= (x5051 x784) 0)))
(assert (= x3244 (=> (and (= x3683 x1013) (= x5650 x4577) (= x5148 x2772) (= x5191 x1393) (= x667 x3427) (= x3637 x4337) (= x5528 x1322)) x1343)))
(assert (= (x40 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253)) x1036))
(assert (=> (<= x1928 10000) (= (x5051 x1928) 0)))
(assert (= (x3238 (x1228 x2358 x2475 x383 x2464 x3210 x5595)) x2475))
(assert (x5553 x1909))
(assert (x5553 x602))
(assert (x5553 x5451))
(assert (x5553 x1886))
(assert (=> (<= x2961 10000) (= 0 (x5051 x2961))))
(assert (=> (>= 10000 x2273) (= (x5051 x2273) 0)))
(assert (= (x894 (x269 x1004 x4085 x5592 x4629)) x1004))
(assert (x5553 x3610))
(assert (x5553 x3530))
(assert (=> (>= 10000 x4858) (= 0 (x5051 x4858))))
(assert (x5553 x4592))
(assert (x5553 x2327))
(assert (x5553 x1081))
(assert (= x2087 (and x5354 x3009)))
(assert (x5553 x292))
(assert (x5553 x3405))
(assert (= (=> (= (= x1172 0) x698) (and (=> (and (not x698) (= (< x2920 64) x5343)) (and (=> (and (and (= (x4266 64 x4836 11) x507) (= x5482 (x4395 (- x1081 (mod (ite (< x329 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x3239 x3615) x5532) (= (ite (> x1081 0) x1820 (x2436 127 x1820)) x329) (= (x3754 x5276) x5450) (= x5276 (+ x507 1)) (= (x4266 64 x4836 11) x2704) (= x4875 (x4266 64 x4836 11)) (= x1820 (div x3952 2)) (= (+ x2704 2) x3615) (= (x4182 322) x2649) (= x3952 (x3845 x3452)) (= x3089 (< 0 x5482)) (= x1081 (x2436 1 x3952)) (= x3452 (x4266 64 x2781 3)) (= x198 (x4182 290)) (= 0 x3394) (= 450 x3689) (= x1673 354)) (not x5343)) (and (=> (and (and (= 36 x4973) (= x4333 true) (= x1221 false)) (not x3089)) x4983) (=> (and (and (= x1946 (= x329 0)) (= (+ 548 x72) x2731) (= (* 32 x2735) x72) (= x2735 (div (+ 31 x329) 32))) x3089) (and (=> (and (not x1946) (= (< 31 x329) x113)) (and (=> (and (and (= x3280 (x3845 x3452)) (= (* 256 x3447) x2646) (= (div x3280 256) x3447)) (not x113)) x5646) (=> (and x113 (and (= x3186 (> x1746 580)) (= (x5009 32 x3452) x3871) (= x1863 (x2014 x3871)) (= (+ 1 x3871) x1940) (= x1746 (+ 548 x329)))) (and (=> x3186 x827) (=> (not x3186) x4137))))) (=> x1946 x5646))))) (=> (and (and (= x4973 0) (= x753 false) (= true x4485)) x5343) x4983))) (=> (and (and (= x1053 true) (= x5642 false) (= x2920 x4973)) x698) x4983))) x104))
(assert (= (x5346 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)) x28))
(assert (x5553 x427))
(assert (= (x5051 (x3789 x610 x2516 x3169 x3223 x3267)) (x3789 x610 x2516 x3169 x3223 x3267)))
(assert (= (and x1327 (not x120)) x3593))
(assert (= (x40 (x1228 x610 x2480 x264 x3876 x2348 x1299)) x1299))
(assert (= (x4266 64 x760 11) (x5051 (x4266 64 x760 11))))
(assert (= (x3238 (x4266 x4005 x4465 x1714)) x4465))
(assert (x5553 x225))
(assert (x5553 x3668))
(assert (> (x3789 x2443 x4170 x4860 x1625 x4474) 10000))
(assert (= x5530 (x894 (x5009 x5530 x3823))))
(assert (x5553 x2809))
(assert (x5553 x4089))
(assert (x5553 x3436))
(assert (= (and x244 (not x5012)) x2801))
(assert (x5553 x2464))
(assert (x5553 x266))
(assert (> (x3789 x2385 x3894 x3556 x3996 x3839) 10000))
(assert (x5553 x4176))
(assert (x5553 x5250))
(assert (x5553 x3160))
(assert (x5553 x4554))
(assert (x5553 x4809))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x5232 6)))
(assert (= x3521 x1331))
(assert (x5553 x3112))
(assert (x5553 x1969))
(assert (=> (>= 10000 x1609) (= (x5051 x1609) 0)))
(assert (=> (<= x2082 10000) (= (x5051 x2082) 0)))
(assert (=> (<= x5342 10000) (= 0 (x5051 x5342))))
(assert (x5553 x2994))
(assert (x5553 x2984))
(assert (x5553 x2450))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x2358 x2552 x135)))
(assert (x5553 x2127))
(assert (< (x4266 64 x4736 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x218))
(assert (=> (>= 10000 x3642) (= 0 (x5051 x3642))))
(assert (= (x3247 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)) x4150))
(assert (=> (>= 10000 x2006) (= (x5051 x2006) 0)))
(assert (= (x3238 (x4266 x1004 x905 x573)) x905))
(assert (x5553 x2589))
(assert (x5553 x1936))
(assert (=> (<= x4606 10000) (= 0 (x5051 x4606))))
(assert (x5553 x1107))
(assert (= (x5051 (x4266 x4283 x1477 x242)) (x4266 x4283 x1477 x242)))
(assert (> (x4266 64 x2650 12) 10000))
(assert (< 10000 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344)))
(assert (x5553 x3951))
(assert (x5553 x1152))
(assert (< (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4480))
(assert (x5553 x5612))
(assert (= (x3238 (x4266 64 x2781 3)) x2781))
(assert (= x3646 (or (and x840 x2658) (and x3931 x2933))))
(assert (=> (>= 10000 x1849) (= (x5051 x1849) 0)))
(assert (x5553 x2655))
(assert (x5553 x1845))
(assert (> (x5009 x4283 x769) 10000))
(assert (x5553 x1325))
(assert (x5553 x3227))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156)))
(assert (= (x5051 (x4266 64 x2766 (ite (= 0 x530) x4826 (ite (>= 32 x530) x4936 (ite (>= 64 x530) x5563 (ite (>= 96 x530) x1447 (ite (<= x530 128) x3538 (ite (<= x530 160) x1640 (ite (<= x530 192) x4713 (ite (>= 224 x530) x1084 x1552)))))))))) (x4266 64 x2766 (ite (= 0 x530) x4826 (ite (>= 32 x530) x4936 (ite (>= 64 x530) x5563 (ite (<= x530 96) x1447 (ite (<= x530 128) x3538 (ite (>= 160 x530) x1640 (ite (>= 192 x530) x4713 (ite (>= 224 x530) x1084 x1552)))))))))))
(assert (= (x3238 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593)) x5402))
(assert (x5553 x4869))
(assert (x5553 x4772))
(assert (= x2273 (x5346 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273))))
(assert (= (x5051 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405)) (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405)))
(assert (= (x5051 (x4266 64 1 x3090)) (x4266 64 1 x3090)))
(assert (> (x5009 x1855 x4516) 10000))
(assert (x5553 x5530))
(assert (= x4901 (x4160 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324))))
(assert (x5553 x5165))
(assert (= (x894 (x4266 64 x1680 36)) 64))
(assert (= x3802 (x4160 (x269 x530 x3934 x3802 x4017))))
(assert (x5553 x4874))
(assert (= x2650 (x3238 (x4266 64 x2650 12))))
(assert (= (x3238 (x4266 64 x3702 7)) x3702))
(assert (= x5471 (and x5073 x2898)))
(assert (x5553 x594))
(assert (< 10000 (x4266 64 x5456 100)))
(assert (x5553 x2718))
(assert (=> (>= 10000 x4085) (= 0 (x5051 x4085))))
(assert (= (x894 (x1228 x693 x923 x975 x3805 x3677 x841)) x693))
(assert (x5553 x1559))
(assert (> (x5009 x4005 x2076) 10000))
(assert (< 10000 (x269 x286 x3325 x3791 x1325)))
(assert (= x1591 x1683))
(assert (= x3779 (x3247 (x3789 x530 x5021 x1861 x1857 x3779))))
(assert (=> (>= 10000 x338) (= (x5051 x338) 0)))
(assert (x5553 x1844))
(assert (= (x894 (x1228 x5530 x671 x845 x2168 x5004 x498)) x5530))
(assert (= (or x2093 x1838) x2618))
(assert (= (x40 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405)) x3824))
(assert (= (and x2247 x4555) x2759))
(assert (=> (>= 10000 x4295) (= (x5051 x4295) 0)))
(assert (x5553 x716))
(assert (=> (>= 10000 x2771) (= (x5051 x2771) 0)))
(assert (= (x3238 (x4266 64 x961 100)) x961))
(assert (= (and (not x5272) x890) x1458))
(assert (= (x3247 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324)) x2069))
(assert (x5553 x3327))
(assert (x1779 x1124))
(assert (= x3626 (or x898 x2223 x926 x2710 x3429)))
(assert (x5553 x3389))
(assert (x5553 x2915))
(assert (x5553 x1808))
(assert (=> (<= x5217 10000) (= (x5051 x5217) 0)))
(assert (< (x5009 x4283 x769) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3238 (x1228 x2443 x1430 x5633 x4923 x1095 x31)) x1430))
(assert (= (x3238 (x4266 64 x4736 3)) x4736))
(assert (=> (<= x923 10000) (= (x5051 x923) 0)))
(assert (x5553 x2609))
(assert (= x2122 (and x4408 x2748)))
(assert (=> (>= 10000 x1553) (= (x5051 x1553) 0)))
(assert (=> (<= x4511 10000) (= (x5051 x4511) 0)))
(assert (< 10000 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253)))
(assert (x5553 x4516))
(assert (=> (<= x3779 10000) (= 0 (x5051 x3779))))
(assert (x5553 x4761))
(assert (= (x5051 (x4266 64 x5232 6)) (x4266 64 x5232 6)))
(assert (x5553 x3347))
(assert (= (x894 (x4266 64 x2781 3)) 64))
(assert (x5553 x841))
(assert (=> (<= x1405 10000) (= 0 (x5051 x1405))))
(assert (= (=> (and (= (- x3113 132) x2220) (= (= 0 x4225) x3963) (= x598 (+ x3113 32)) (= x4929 (div x578 2)) (= (x4395 (- x2889 (mod (ite (> 32 x5575) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x8) (= x4225 (x2436 1 x578)) (= x5575 (ite (> x2889 0) x4929 (x2436 127 x4929))) (= (x2436 1 x578) x2889) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8) (= 1 x8))) (and (=> (and (and (= x4171 (x5009 32 104)) (= (< 0 x5575) x1227)) (not x3963)) (and (=> x1227 x3989) (=> (and (not x1227) (= x607 0)) x2730))) (=> (and (and (= (+ x598 x408) x402) (= x5457 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x578)) (= x408 (* (ite (not (= 0 x5575)) 1 0) 32)) (or (= 32 x408) (= 0 x408))) x3963) x1938))) x2234))
(assert (x5553 x3710))
(assert (= (and x3474 x3873) x5253))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278)))
(assert (x5553 x5362))
(assert (= (x894 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126)) x1098))
(assert (= (x894 (x4266 64 x2781 5)) 64))
(assert (= (and x4518 (not x4256)) x3299))
(assert (= 64 (x894 (x4266 64 x3861 36))))
(assert (= (x722 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024)) x5155))
(assert (x5553 x3293))
(assert (= (x4160 (x3789 x4005 x4717 x294 x5499 x3258)) x294))
(assert (= 7 (x4160 (x4266 64 x3702 7))))
(assert (> (x3789 x3525 x4032 x5204 x1927 x4690) 10000))
(assert (x4435 1461501637330902918203684832716283019655932542975))
(assert (=> (<= x1312 10000) (= (x5051 x1312) 0)))
(assert (x5553 x4519))
(assert (x5553 x366))
(assert (x5553 x2762))
(assert (x5553 x2847))
(assert (= x286 (x894 (x485 x286 x63 x2537 x401 x1054 x2048 x4601))))
(assert (=> (>= 10000 x2552) (= (x5051 x2552) 0)))
(assert (= x4085 (x3238 (x269 x1004 x4085 x5592 x4629))))
(assert (x5553 x624))
(assert (=> (<= x1855 10000) (= 0 (x5051 x1855))))
(assert (=> (<= x1684 10000) (= 0 (x5051 x1684))))
(assert (= (x722 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) x678))
(assert (x5553 x676))
(assert (=> (>= 10000 x4018) (= (x5051 x4018) 0)))
(assert (= (or x1810 x4622 x1442 x2427 x3585) x18))
(assert (x5553 x5465))
(assert (=> (<= x4717 10000) (= 0 (x5051 x4717))))
(assert (> (x3789 x1098 x2878 x5015 x4295 x4143) 10000))
(assert (= x3585 (and x4791 (not x231))))
(assert (x5553 x448))
(assert (x5553 x515))
(assert (x5553 x2711))
(assert (= x5108 (x3247 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253))))
(assert (x5553 x1949))
(assert (= (x4160 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850)) x2718))
(assert (x5553 x2878))
(assert (= 10 (x4160 (x4266 64 x1464 10))))
(assert (< (x269 x530 x3934 x3802 x4017) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5546))
(assert (x5553 x4930))
(assert (= x970 (x3238 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157))))
(assert (x5553 x5301))
(assert (x5553 x4007))
(assert (x5553 x5558))
(assert (x5553 x4484))
(assert (= (x4160 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384)) x1408))
(assert (= x4480 (x3238 (x4266 64 x4480 12))))
(assert (x5553 x5421))
(assert (x5553 x1361))
(assert (=> (>= 10000 x1098) (= (x5051 x1098) 0)))
(assert (= (x3789 x5530 x2140 x4262 x114 x2333) (x5051 (x3789 x5530 x2140 x4262 x114 x2333))))
(assert (= (x3238 (x4266 64 1 x1261)) 1))
(assert (> (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947) 10000))
(assert (x385 x1492))
(assert (x5553 x4246))
(assert (x5553 x3827))
(assert (x1779 x3965))
(assert (x5553 x2286))
(assert (=> (>= 10000 x242) (= 0 (x5051 x242))))
(assert (= (x894 (x5009 x693 x5222)) x693))
(assert (> (x4266 x2434 x4068 x4292) 10000))
(assert (= (x40 (x1228 x1966 x2083 x4104 x1865 x2530 x2341)) x2341))
(assert (x5553 x1083))
(assert (x5553 x3346))
(assert (=> (<= x2766 10000) (= (x5051 x2766) 0)))
(assert (=> (>= 10000 x325) (= (x5051 x325) 0)))
(assert (= x1603 (x722 (x3789 x1004 x3815 x2736 x1603 x5356))))
(assert (x5553 x4870))
(assert (x5553 x4245))
(assert (x5553 x5450))
(assert (x5553 x5566))
(assert (x5553 x2006))
(assert (x5553 x1310))
(assert (x5553 x5486))
(assert (x5553 x509))
(assert (x5553 x5082))
(assert (=> (>= 10000 x2559) (= 0 (x5051 x2559))))
(assert (= x700 (=> (and (= (not (< x2970 x1947)) x4451) (= x478 (x2014 x1336)) (= x2970 (x2742 (+ 32 x1903)))) (and x4451 x2727))))
(assert (x5553 x4350))
(assert (= (x5051 (x485 x286 x63 x2537 x401 x1054 x2048 x4601)) (x485 x286 x63 x2537 x401 x1054 x2048 x4601)))
(assert (= (and (not x547) x3220) x1913))
(assert (= (x722 (x3789 x1855 x4793 x5161 x2447 x1968)) x2447))
(assert (x5553 x2121))
(assert (= (or (and x1923 (not x1958)) (and (not x649) x3376) x2095 (and (not x4556) x1821) (and x1088 (not x580))) x4741))
(assert (x5553 x1682))
(assert (x5553 x1616))
(assert (=> (>= 10000 x5539) (= (x5051 x5539) 0)))
(assert (x5553 x1998))
(assert (x5553 x2942))
(assert (= (x3247 (x3789 x2434 x3433 x4948 x1572 x2544)) x2544))
(assert (x5553 x132))
(assert (=> (<= x5487 10000) (= (x5051 x5487) 0)))
(assert (= (x5051 (x4266 64 x2010 36)) (x4266 64 x2010 36)))
(assert (=> (>= 10000 x1325) (= (x5051 x1325) 0)))
(assert (= (x3238 (x269 x2443 x3830 x1931 x5230)) x3830))
(assert (= (x3238 (x269 x1855 x3349 x3751 x2410)) x3349))
(assert (= (x4160 (x269 x4283 x681 x4511 x4843)) x4511))
(assert (= (x4266 64 x961 100) (x5051 (x4266 64 x961 100))))
(assert (=> (<= x4465 10000) (= 0 (x5051 x4465))))
(assert (= x3627 (x4160 (x269 x5501 x784 x3627 x2194))))
(assert (= (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273) (x5051 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273))))
(assert (= (and x4063 (not x113)) x3811))
(assert (x5553 x921))
(assert (= (and x965 (not x3217)) x4112))
(assert (x5553 x402))
(assert (x5553 x5596))
(assert (x5553 x4009))
(assert (x5553 x141))
(assert (= (x269 x4005 x99 x921 x2321) (x5051 (x269 x4005 x99 x921 x2321))))
(assert (=> (<= x4032 10000) (= 0 (x5051 x4032))))
(assert (x5553 x5087))
(assert (= (x4160 (x3789 x693 x2627 x5180 x3492 x3026)) x5180))
(assert (= (and x16 (not x3670)) x2458))
(assert (=> (<= x4502 10000) (= (x5051 x4502) 0)))
(assert (x5553 x2244))
(assert (=> (>= 10000 x999) (= 0 (x5051 x999))))
(assert (=> (>= 10000 x1219) (= 0 (x5051 x1219))))
(assert (= x1198 (and x1528 x4437)))
(assert (= (or x755 x2815) x2013))
(assert (x5553 x918))
(assert (x5553 x2028))
(assert (=> (<= x5454 10000) (= (x5051 x5454) 0)))
(assert (= x2434 (x894 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156))))
(assert (= (x269 x2434 x3305 x5562 x1976) (x5051 (x269 x2434 x3305 x5562 x1976))))
(assert (=> (<= x4516 10000) (= (x5051 x4516) 0)))
(assert (x5553 x4127))
(assert (= (x722 (x1228 x5501 x1182 x866 x2425 x4330 x4688)) x2425))
(assert (x5553 x1537))
(assert (x5553 x2049))
(assert (x5553 x4200))
(assert (= (x894 (x4266 64 x4008 36)) 64))
(assert (= x16 (and x2222 (not x554))))
(assert (x5553 x5576))
(assert (< 10000 (x4266 64 x5061 7)))
(assert (x5553 x3896))
(assert (x5553 x4731))
(assert (x5553 x3246))
(assert (< 10000 (x5009 x530 x2144)))
(assert (= x2406 (and x1011 (not x1912))))
(assert (x5553 x3481))
(assert (=> (>= 10000 x2977) (= (x5051 x2977) 0)))
(assert (=> (<= x4684 10000) (= 0 (x5051 x4684))))
(assert (=> (>= 10000 x2410) (= (x5051 x2410) 0)))
(assert (x5553 x5003))
(assert (x5553 x383))
(assert (x5553 x1721))
(assert (x5553 x503))
(assert (= x4896 (or x2641 x3378)))
(assert (x5553 x2252))
(assert (< 10000 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850)))
(assert (> (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157) 10000))
(assert (x5553 x1515))
(assert (x5553 x4330))
(assert (x5553 x5443))
(assert (= x3692 (and x1942 (not x2732))))
(assert (= x1165 (x40 (x1228 x3137 x3982 x1109 x209 x5082 x1165))))
(assert (x5553 x1004))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x5630 2)))
(assert (x5553 x5473))
(assert (x5553 x1997))
(assert (= (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (= (x4160 (x269 x1855 x3349 x3751 x2410)) x3751))
(assert (< (x1228 x610 x2480 x264 x3876 x2348 x1299) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x2740))
(assert (x5553 x5407))
(assert (= (x3238 (x269 x2385 x3846 x2780 x4360)) x3846))
(assert (< 10000 (x4266 64 1 x4794)))
(assert (= (and x3299 (not x3291)) x3129))
(assert (x5553 x5028))
(assert (x5553 x2326))
(assert (= x2682 (x4160 (x1228 x3525 x3124 x2682 x4476 x5480 x2515))))
(assert (x5553 x3572))
(assert (not (x4435 (x3789 x4005 x4717 x294 x5499 x3258))))
(assert (x385 x2598))
(assert (x1779 x3322))
(assert (= (x722 (x269 x2385 x3846 x2780 x4360)) x4360))
(assert (= x2245 (x4160 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661))))
(assert (x5553 x4250))
(assert (x5553 x2508))
(assert (x5553 x4569))
(assert (x5553 x2157))
(assert (=> (<= x2131 10000) (= 0 (x5051 x2131))))
(assert (= (and x739 x3591) x2701))
(assert (x5553 x4668))
(assert (x5553 x1114))
(assert (= x4882 (x3247 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525))))
(assert (= x5556 (=> (and (= (not (< 32 x5249)) x3046) (= x4235 (x2839 x904))) (and x3046 (=> (= x900 32) x2745)))))
(assert (< (x4266 64 x3861 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1223 10000) (= (x5051 x1223) 0)))
(assert (= (x5346 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336)) x3712))
(assert (x1779 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x5553 x5547))
(assert (x121 x3379))
(assert (= x3659 (x4160 (x4266 x610 x1443 x3659))))
(assert (=> (>= 10000 x2780) (= (x5051 x2780) 0)))
(assert (= (x722 (x3789 x85 x140 x3477 x626 x2469)) x626))
(assert (= (x4160 (x4266 64 x3858 10)) 10))
(assert (x5553 x1840))
(assert (x5553 x4563))
(assert (x5553 x3318))
(assert (= (x4266 64 x929 2) (x5051 (x4266 64 x929 2))))
(assert (x1779 x3976))
(assert (= (x894 (x269 x3137 x3579 x4653 x2811)) x3137))
(assert (not (x4435 (x4266 64 x1707 7))))
(assert (=> (>= 10000 x3036) (= (x5051 x3036) 0)))
(assert (= (or (and x2697 x1905) (and x5168 x5647) (and x4473 x4839)) x2770))
(assert (x5553 x671))
(assert (= (x894 (x3789 x3525 x4032 x5204 x1927 x4690)) x3525))
(assert (= (x4266 64 x1464 10) (x5051 (x4266 64 x1464 10))))
(assert (x5553 x5038))
(assert (x5553 x417))
(assert (x5553 x1761))
(assert (x5553 x5021))
(assert (= x1384 (x5346 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384))))
(assert (= x3813 (=> (= (= x5581 0) x5286) (and (=> (and (and (= x5032 4) (= false x1435) (= true x5047)) (not x5286)) x3351) (=> (and x5286 (and (= (x42 x1783) x3892) (= (> x3892 3) x4723) (= x1783 (x4266 64 x760 11)) (>= 255 x3892))) (and (=> (and x4723 (and (= x4242 true) (= 36 x5032) (= false x4887))) x3351) (=> (and (= x4612 (= x3892 2)) (not x4723)) (and (=> (and x4612 (and x3042 (= false x4197) x1347 (= 256 x1616) (= x5638 (= (x5099 164) 64)) (= x2360 (x4266 64 1 x4659)) (= (x4141 128) x3782) (= (x2742 (+ x3782 31)) x2947) x5638 (= x1347 (= 34 (x5099 260))) (= x4162 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2947)) (>= 127 x4075) (= 290 x4564) (= x3042 (= (x3371 518) (x5099 228))) (= (x2742 (+ 32 x3274)) x346) (= x4965 x2928) (<= x4075 127) (= (x4395 (- x3274 294)) x2802) (= x4273 x2233) x475 (>= x4273 356) (= (x2742 (+ 486 x4162)) x3274) (= x4491 (x2950 224)) (>= x2233 356) (= false x1271) (= (or (> (- x2233 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= (- x2233 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 (- x2233 4)))) x2675) (= x3080 x4736) (<= x4736 65535) (= 0 x3699) (= x4273 (x4395 (- x2126 290))) (= (x2742 (+ x4491 31)) x1201) (= x2788 160) (= x307 1084734224) (= x475 (= (x3371 486) (x5099 196))) (= 0 x3298) (= x1926 (x1149 x2360)) (= (x2742 (+ x734 x346)) x2126) (= x4659 (x4266 64 x4736 4)) (<= 1 x2055) (= (x4762 x3819) x2055) (= x5546 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= x734 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1201)))) (and (=> x2675 x2368) (=> (and (= x1321 true) (not x2675)) (and (=> (and x1321 (= (and (< 195 x2233) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2233) true)) x1064)) (and (=> (and x1064 (and (= (< 18446744073709551615 x4869) x612) (= (x2670 164) x4869))) (and (=> (and (and (= (> x5424 x2233) x2933) (= x5424 (x2742 (+ 196 x4869)))) (not x612)) (and (=> x2933 x1774) (=> (and (not x2933) (and (= (> x4782 18446744073709551615) x2081) (= (x2670 260) x4782) (<= 356 x2233) (<= x2233 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (=> x2081 x1001) (=> (and (not x2081) (and (= (< x2233 x4151) x840) (= (x2742 (+ x4782 292)) x4151))) (and (=> (and (and (= x2756 false) (= (x4547 160) x309) (= x2426 x994) (= x1596 x495) (= x2819 x2619) (= x116 x2930) (= x4037 x5171) (= x2232 x1310) (= (x4547 160) x333) (= x5067 (x4547 128)) (= x800 x3491) (= x4535 x1520) (= false x4149) (= x837 x4930) (= (x4547 128) x468) (= x4716 1) (= x578 x3501) (= x5628 64) (= x4874 x4736) (= x4059 x1394) (= x1563 x3610)) (not x840)) x5213) (=> x840 x1774))))))) (=> x612 x1001))) (=> (not x1064) x2368))) (=> (not x1321) x2368))))) (=> (and (not x4612) (and (= 4 x5032) (= false x3717) (= true x1428))) x3351)))))))))
(assert (= (and x2024 (not x147)) x2551))
(assert (=> (>= 10000 x2817) (= (x5051 x2817) 0)))
(assert (x5553 x239))
(assert (x5553 x2424))
(assert (=> (<= x3802 10000) (= 0 (x5051 x3802))))
(assert (x5553 x5067))
(assert (=> (<= x2508 10000) (= 0 (x5051 x2508))))
(assert (x121 x2800))
(assert (> (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278) 10000))
(assert (x5553 x5573))
(assert (x5553 x3886))
(assert (> (x4266 x3137 x1784 x1436) 10000))
(assert (= x2707 (x5346 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126))))
(assert (x5553 x192))
(assert (x5553 x2598))
(assert (= x4653 (x4160 (x269 x3137 x3579 x4653 x2811))))
(assert (x5553 x4886))
(assert (=> (>= 10000 x1787) (= 0 (x5051 x1787))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x5530 x3823)))
(assert (x5553 x540))
(assert (x5553 x732))
(assert (x5553 x4520))
(assert (= x5186 (or x888 x3457)))
(assert (x121 x5157))
(assert (= (x4160 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344)) x4217))
(assert (x5553 x3488))
(assert (x4435 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (< 10000 (x4266 64 x2382 2)))
(assert (= x3044 (=> (= (+ 292 x1288) x4866) x1021)))
(assert (= (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126) (x5051 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126))))
(assert (x5553 x5424))
(assert (x5553 x59))
(assert (x5553 x655))
(assert (not (x4435 (x1228 x5613 x5274 x3895 x2978 x2944 x1312))))
(assert (= x5213 (=> (= x4438 (= 0 x4716)) (and (=> (and x4438 (and (= x464 true) (= false x902) (= x5032 x5628))) x3351) (=> (and (not x4438) (= x3774 (> 64 x5628))) (and (=> (and x3774 (and (= 0 x5032) (= false x5512) (= true x5122))) x3351) (=> (and (not x3774) (and (= (x1100 290) x2155) (= x631 (x4395 (- x2289 (mod (ite (< x1137 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (+ x4974 1) x3237) (= x4974 (x4266 64 x760 11)) (= (div x4187 2) x1978) (= x854 450) (= x4116 (x3758 x5458)) (= x5458 (+ 2 x5606)) (= (ite (> x2289 0) x1978 (x2436 127 x1978)) x1137) (= (< 0 x631) x1446) (= x2289 (x2436 1 x4187)) (= (x4266 64 x4736 3) x1199) (= 0 x1229) (= x4945 (x3754 x3237)) (= (x4266 64 x760 11) x4615) (= x5644 354) (= (x3845 x1199) x4187) (= x955 (x1100 322)) (= (x4266 64 x760 11) x5606))) (and (=> (and (and (= x637 false) (= 36 x5032) (= true x2907)) (not x1446)) x3351) (=> (and (and (= x12 (div (+ x1137 31) 32)) (= x699 (+ x859 548)) (= (* x12 32) x859) (= x4749 (= x1137 0))) x1446) (and (=> (and (= x1915 (< 31 x1137)) (not x4749)) (and (=> (and x1915 (and (= (+ x4922 1) x369) (= (+ x1137 548) x3276) (= x2512 (x2014 x4922)) (= x4922 (x5009 32 x1199)) (= (< 580 x3276) x3603))) (and (=> x3603 x2268) (=> (not x3603) x1686))) (=> (and (and (= (x3845 x1199) x4861) (= x3770 (* x2859 256)) (= x2859 (div x4861 256))) (not x1915)) x5289))) (=> x4749 x5289)))))))))))
(assert (x5553 x4476))
(assert (x1779 x3974))
(assert (x5553 x4404))
(assert (= x1928 (x4160 (x4266 x2385 x4168 x1928))))
(assert (not x2173))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x1515 12)))
(assert (= (and x1743 x4391) x2631))
(assert (= (x4160 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142)) x3854))
(assert (=> (<= x2882 10000) (= 0 (x5051 x2882))))
(assert (x5553 x1897))
(assert (=> (>= 10000 x3599) (= (x5051 x3599) 0)))
(assert (=> (>= 10000 x5022) (= 0 (x5051 x5022))))
(assert (=> (>= 10000 x3510) (= 0 (x5051 x3510))))
(assert (x5553 x4717))
(assert (x5553 x1916))
(assert (x4435 3313512704))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)))
(assert (x5553 x549))
(assert (x5553 x4018))
(assert (= x3523 (x4160 (x3789 x5613 x4818 x3523 x3488 x2921))))
(assert (= x1151 (=> (and (or (and (not x4704) (and (= x4010 x3318) (not (< x4010 x5120)))) (and (= x5120 x3318) x4704)) (and (= (x1612 x4751) x2170) (= x4704 (= 0 x4010)) (= x5120 (x1149 x4560)) (= (x4266 64 x2781 4) x3090) (>= 65535 x2781) (= 2 x2170) (= (x4266 64 1 x3090) x4560) (= (x4266 64 x5653 11) x4751))) x4854)))
(assert (x5553 x1092))
(assert (< (x269 x5530 x1647 x980 x2699) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x2170))
(assert (= (and x461 x3719) x2258))
(assert (= x933 (and (not x5635) x4714)))
(assert (= (x269 x2358 x207 x1529 x4721) (x5051 (x269 x2358 x207 x1529 x4721))))
(assert (x5553 x2273))
(assert (= (x5051 (+ 2 x2704)) (x5051 x2704)))
(assert (x5553 x3141))
(assert (= (x5051 1000000000) 0))
(assert (x5553 x4205))
(assert (x1779 x3924))
(assert (= x271 (and x2787 (not x1817))))
(assert (x5553 x3449))
(assert (< 10000 (x4266 64 x5653 11)))
(assert (= (x3238 (x5009 x693 x5222)) x5222))
(assert (= (x3238 (x4266 64 x2010 36)) x2010))
(assert (= x286 (x894 (x5009 x286 x3203))))
(assert (x5553 x510))
(assert (x5553 x1062))
(assert (x5553 x1278))
(assert (x5553 x1836))
(assert (= x2938 x891))
(assert (= (=> (and (= x4069 false) (= (x4266 64 x2928 2) x3549) (not (< x2049 x2644)) (= x2049 (x2742 (+ x2785 x2644))) (= (+ x4037 1) x2520) (= x1268 (+ x4037 1)) (= x3590 (x4266 64 x4037 0)) (= x3973 (+ x3590 1)) (= x2644 (x1313 x3549)) (= x298 false) (<= x4037 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x901) x2411))
(assert (= (and x4473 (not x4839)) x1508))
(assert (x5553 x667))
(assert (< 10000 (x4266 64 x4248 (ite (= 0 x1855) x3081 (ite (<= x1855 32) x322 (ite (>= 64 x1855) x5477 (ite (>= 96 x1855) x3025 (ite (>= 128 x1855) x2729 (ite (<= x1855 160) x4313 (ite (<= x1855 192) x697 (ite (>= 224 x1855) x2883 x3375)))))))))))
(assert (= x3216 (=> (= x5536 x4971) x1019)))
(assert (x5553 x191))
(assert (x5553 x1621))
(assert (x5553 x4866))
(assert (x5553 x566))
(assert (= (x722 (x1228 x610 x2480 x264 x3876 x2348 x1299)) x3876))
(assert (=> (>= 10000 x4640) (= (x5051 x4640) 0)))
(assert (x5553 x2577))
(assert (= (and x3692 x3499) x810))
(assert (= (x4160 (x4266 64 x1828 10)) 10))
(assert (x5553 x167))
(assert (=> (<= x4054 10000) (= 0 (x5051 x4054))))
(assert (= (x4266 64 x999 11) (x5051 (x4266 64 x999 11))))
(assert (x5553 x3321))
(assert (x5553 x4095))
(assert (= (not (and (= (div (+ 31 x3910) 32) x454) (<= x952 127) (= 164 x4402) (>= x5441 1) (= x5003 (* 32 x454)) (>= x223 196) (< x2715 x614) (= x2715 (+ x1242 31)) (> x4208 x5194) (= x223 x614) (= (* 32 x4258) x2325) (= (x5307 x2760) x4216) (= x3695 128) (= (+ x5166 x3497) x3435) (= x2610 (= (x1564 132) x1954)) (= x2832 false) (>= 127 x952) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4763) (>= x1117 1) (= x172 1722637450) (= x3497 (x2685 x1242)) (= x4763 (x3057 x5194)) (not (> x3435 x614)) (= (x4762 x2928) x1117) (= x1835 46442213778836376901753710468615024683576072693327014300388496345503314739200) (>= x614 196) (= (x4395 (- x583 128)) x223) (= (+ x5003 160) x5194) (= (div (+ x3497 31) 32) x4258) (= x5275 (x4266 64 x4216 10)) (= (+ x1242 32) x5166) (= x1022 (+ x3910 164)) (= x2723 (+ x3497 x2760)) (= (x2685 132) x3910) (= x1754 128) (= x1265 x3865) (not (< x614 x1022)) (= x2695 128) (= (x4762 x837) x5441) (= x5591 x4374) (<= x614 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (+ 32 x5194) x2760) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x223) (= x1242 (+ x4374 4)) (<= x3910 18446744073709551615) (= x2928 x4684) (= x4890 x2728) (>= 18446744073709551615 x3497) x2610 (<= 32 x4763) (= (+ x2325 32 x5194) x4208) (= false x3211))) x1715))
(assert (x5553 x1333))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x4708 36)))
(assert (= (x894 (x269 x693 x1125 x5557 x1035)) x693))
(assert (< 10000 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598)))
(assert (x5553 x1238))
(assert (x5553 x816))
(assert (=> (>= 10000 x1839) (= 0 (x5051 x1839))))
(assert (x5553 x5456))
(assert (x5553 x631))
(assert (= (x40 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)) x1767))
(assert (=> (<= x5132 10000) (= (x5051 x5132) 0)))
(assert (= x185 (and (not x5178) x4025)))
(assert (< (x3789 x5530 x2140 x4262 x114 x2333) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x4266 64 1 x4659)))
(assert (= (x4160 (x4266 64 x3181 2)) 2))
(assert (x5553 x4427))
(assert (not (x4435 (x4266 64 x5131 6))))
(assert (= (x894 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157)) x2443))
(assert (= (x3238 (x4266 x2443 x4502 x4956)) x4502))
(assert (x5553 x3000))
(assert (= 0 (x5051 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (x5553 x5303))
(assert (= x4897 (x3247 (x1228 x286 x1219 x5302 x3589 x4897 x4255))))
(assert (x5553 x4895))
(assert (= x130 (x3238 (x3789 x3137 x130 x1576 x2450 x5371))))
(assert (x5553 x2047))
(assert (= 64 (x894 (x4266 64 x3181 2))))
(assert (x5553 x2668))
(assert (x5553 x598))
(assert (x5553 x3104))
(assert (x5553 x2168))
(assert (x1779 x2800))
(assert (> (x269 x5530 x1647 x980 x2699) 10000))
(assert (= (and x4438 x3329) x357))
(assert (x5553 x3306))
(assert (= x1747 (=> (= x915 (+ x5416 x1188)) x1882)))
(assert (x5553 x513))
(assert (= x4053 (x3247 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535))))
(assert (x5553 x534))
(assert (x5553 x5144))
(assert (= (x4160 (x4266 64 x4248 (ite (= x1855 0) x3081 (ite (<= x1855 32) x322 (ite (<= x1855 64) x5477 (ite (>= 96 x1855) x3025 (ite (>= 128 x1855) x2729 (ite (<= x1855 160) x4313 (ite (<= x1855 192) x697 (ite (>= 224 x1855) x2883 x3375)))))))))) (ite (= 0 x1855) x3081 (ite (>= 32 x1855) x322 (ite (<= x1855 64) x5477 (ite (<= x1855 96) x3025 (ite (<= x1855 128) x2729 (ite (<= x1855 160) x4313 (ite (<= x1855 192) x697 (ite (<= x1855 224) x2883 x3375))))))))))
(assert (= (x894 (x4266 64 x484 36)) 64))
(assert (x5553 x2812))
(assert (= (or x204 x2524) x575))
(assert (x5553 x4143))
(assert (=> (>= 10000 x1193) (= (x5051 x1193) 0)))
(assert (x5553 x752))
(assert (= (and x2732 x1942) x351))
(assert (= (x5051 94926909962862326217726538024181891405690106632559804934698421914364834480128) 0))
(assert (x5553 x5539))
(assert (not (x4435 (x269 x85 x3183 x729 x2972))))
(assert (x5553 x1971))
(assert (x5553 x5604))
(assert (= 64 (x894 (x4266 64 x3406 36))))
(assert (= (and (not x4678) x2239) x406))
(assert (x5553 x3242))
(assert (< 10000 (x1228 x5530 x671 x845 x2168 x5004 x498)))
(assert (= (x5051 (+ x4226 2)) (x5051 x4226)))
(assert (= x3661 (x1514 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661))))
(assert (x5553 x3892))
(assert (x5553 x2455))
(assert (x5553 x4573))
(assert (=> (>= 10000 x2083) (= (x5051 x2083) 0)))
(assert (=> (>= 10000 x4882) (= (x5051 x4882) 0)))
(assert (= (and x2118 x1319) x1805))
(assert (x5553 x3765))
(assert (x5553 x1187))
(assert (not (x4435 (x3789 x2443 x4170 x4860 x1625 x4474))))
(assert (x5553 x1))
(assert (= x1762 (=> (and (or (>= x1997 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1997) (<= x1997 115792089237316195423570985008687907853269984665640564039457584007913129639838)) (<= x1997 115792089237316195423570985008687907853269984665640564039457584007913129639773)) (= x2402 (x2742 (+ x3021 32))) (= (x4266 64 x5653 11) x5296) (> x431 x1292) (<= x1292 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2436 1 x337) x1716) (= x224 0) (= x3526 (x4395 (- x1292 x2402))) (= (x2742 (+ x2031 2)) x3566) (= x1588 (div (+ 31 x3685) 32)) (= x3438 (x2742 (+ x1292 32))) (= (x2742 (+ 32 x3370)) x3021) (or (and (<= x1997 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x1997 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x1997) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x1997)) (< x2402 x1292) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1997) (= (x2742 (+ x1292 (mod (+ x515 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x431) (= (x4395 (- x1320 32)) x3446) (= x1320 (x4395 (- x2402 x1997))) (= x4895 (x4395 (- x1716 (mod (ite (> 32 x3685) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2487 (x3678 x5128)) (<= x1292 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (div x337 2) x1107) (= (* x1588 32) x515) (< x1997 x2402) (= (x4266 64 x5653 11) x2495) (= x5576 (x3754 x267)) (= x1292 (x2742 (+ 32 x3566))) (= x3370 (x2742 (+ 32 x1997))) (= x2078 (x4266 64 x5653 11)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1997) (= (+ x5296 1) x267) (<= x1292 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1230 (= 0 x3685)) (= (x4395 (- x3526 32)) x4136) (<= x1997 115792089237316195423570985008687907853269984665640564039457584007913129639933) (<= 1 x431) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x1997) (>= x1997 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= x1997 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x1997)) (= x1587 (x4266 64 x2781 3)) (= x3685 (ite (> x1716 0) x1107 (x2436 127 x1107))) (= (x3845 x1587) x337) (= x5128 (+ 2 x2078)) (or (= x4895 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x4895)) (= x2031 (x2742 (+ 32 x2402)))) (and (=> (and (not x1230) (= x326 (< 31 x3685))) (and (=> (and (not x326) (and (= x5149 (* 256 x4573)) (= x4573 (div x4452 256)) (= x4452 (x3845 x1587)))) x5017) (=> (and x326 (and (= (+ x5446 1) x5422) (= x3922 (x2014 x5446)) (= (x2742 (+ x3438 x3685)) x2052) (= (< x3530 x2052) x1633) (= x5446 (x5009 32 x1587)) (= (x2742 (+ 32 x3438)) x3530))) (and (=> x1633 x820) (=> (not x1633) x1944))))) (=> x1230 x5017)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x3525 x4032 x5204 x1927 x4690)))
(assert (= (x1228 x2385 x4180 x4698 x1668 x33 x3108) (x5051 (x1228 x2385 x4180 x4698 x1668 x33 x3108))))
(assert (x5553 x3551))
(assert (=> (<= x3854 10000) (= 0 (x5051 x3854))))
(assert (=> (>= 10000 x911) (= (x5051 x911) 0)))
(assert (= x2186 (or x5509 x688 x357 x4683 x1875 x2891 x94 x5326 x744 x4967)))
(assert (x5553 x170))
(assert (x5553 x1867))
(assert (x5553 x3201))
(assert (not (x4435 (x5009 32 x3452))))
(assert (= (x40 (x1228 x4283 x5337 x2668 x338 x5234 x3122)) x3122))
(assert (x5553 x919))
(assert (x5553 x3859))
(assert (= (x3238 (x4266 64 x1851 100)) x1851))
(assert (not (x4435 (x4266 64 x4443 36))))
(assert (x5553 x757))
(assert (x5553 x3161))
(assert (x5553 x1610))
(assert (=> (<= x1270 10000) (= (x5051 x1270) 0)))
(assert (x5553 x3105))
(assert (= (x40 (x1228 x1098 x3372 x3272 x4492 x1282 x3321)) x3321))
(assert (= x2542 (x3238 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384))))
(assert (= (or x5214 x3841) x1427))
(assert (not (x4435 (x102 0))))
(assert (= (x4266 64 x484 36) (x5051 (x4266 64 x484 36))))
(assert (> (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736) 10000))
(assert (x5553 x1765))
(assert (= (or x3240 x2457) x5585))
(assert (not (x4435 (x4266 64 x4216 10))))
(assert (not (x4435 (x3789 x5501 x1456 x5366 x1537 x3951))))
(assert (x5553 x856))
(assert (x5553 x2140))
(assert (=> (>= 10000 x4679) (= 0 (x5051 x4679))))
(assert (= (or x3069 x2390) x228))
(assert (= (x4266 64 x2781 3) (x5051 (x4266 64 x2781 3))))
(assert (x5553 x1127))
(assert (x5553 x3476))
(assert (=> (>= 10000 x3272) (= 0 (x5051 x3272))))
(assert (x5553 x2785))
(assert (x5553 x837))
(assert (x5553 x1608))
(assert (= (x3238 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)) x828))
(assert (x5553 x1041))
(assert (x5553 x3876))
(assert (x5553 x2099))
(assert (x5553 x3725))
(assert (x5553 x3854))
(assert (= (and (not x974) x2092) x4158))
(assert (x5553 x5217))
(assert (= x784 (x3238 (x269 x5501 x784 x3627 x2194))))
(assert (=> (>= 10000 x4837) (= 0 (x5051 x4837))))
(assert (x5553 x24))
(assert (= (x4160 (x4266 64 x2781 4)) 4))
(assert (= 5 (x4160 (x4266 64 x2781 5))))
(assert (x5553 x3305))
(assert (x5553 x1707))
(assert (x5553 x5136))
(assert (= (x4266 x2443 x4502 x4956) (x5051 (x4266 x2443 x4502 x4956))))
(assert (=> (<= x1828 10000) (= 0 (x5051 x1828))))
(assert (= (and x3191 x3393) x1876))
(assert (x5553 x3030))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (< 10000 (x1228 x2385 x4180 x4698 x1668 x33 x3108)))
(assert (x5553 x4411))
(assert (x5553 x2627))
(assert (x1779 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= 11 (x4160 (x4266 64 x760 11))))
(assert (x5553 x3215))
(assert (= (x4160 (x4266 64 x2536 12)) 12))
(assert (x5553 x5100))
(assert (x5553 x5098))
(assert (x5553 x3344))
(assert (x5553 x4428))
(assert (=> (<= x602 10000) (= 0 (x5051 x602))))
(assert (x1779 x3400))
(assert (not (x4435 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157))))
(assert (=> (>= 10000 x4897) (= 0 (x5051 x4897))))
(assert (x5553 x1108))
(assert (x5553 x2617))
(assert (x5553 x3651))
(assert (x5553 x5582))
(assert (x5553 x804))
(assert (x5553 x5549))
(assert (=> (>= 10000 x725) (= (x5051 x725) 0)))
(assert (not (x4435 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126))))
(assert (x5266 x4187))
(assert (x5553 x3052))
(assert (x5553 x2751))
(assert (=> (>= 10000 x3951) (= 0 (x5051 x3951))))
(assert (x5553 x5650))
(assert (= x4298 (x3238 (x3789 x2358 x4298 x3642 x3410 x4650))))
(assert (= (x5051 (x1228 x3525 x3124 x2682 x4476 x5480 x2515)) (x1228 x3525 x3124 x2682 x4476 x5480 x2515)))
(assert (x5553 x634))
(assert (x5553 x3419))
(assert (= 0 (x5051 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (x5553 x783))
(assert (= (x4160 (x4266 64 x1068 36)) 36))
(assert (x5553 x5525))
(assert (= (and x2174 x2090) x3288))
(assert (x5553 x780))
(assert (x5553 x4010))
(assert (x5553 x4626))
(assert (= (x5346 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)) x3536))
(assert (= (x5051 x3801) (x5051 (+ 2 x3801))))
(assert (x5553 x1697))
(assert (= (x5051 46442213778836376901753710468615024683576072693327014300388496345503314739200) 0))
(assert (= (x4160 (x3789 x2385 x3894 x3556 x3996 x3839)) x3556))
(assert (=> (>= 10000 x4068) (= 0 (x5051 x4068))))
(assert (x5553 x4844))
(assert (=> (<= x4625 10000) (= (x5051 x4625) 0)))
(assert (x5553 x4963))
(assert (=> (<= x4360 10000) (= 0 (x5051 x4360))))
(assert (= (x894 (x4266 x1098 x4250 x4165)) x1098))
(assert (x5553 x2949))
(assert (x5553 x5496))
(assert (x5553 x4501))
(assert (= (x1228 x2358 x2475 x383 x2464 x3210 x5595) (x5051 (x1228 x2358 x2475 x383 x2464 x3210 x5595))))
(assert (=> (<= x429 10000) (= (x5051 x429) 0)))
(assert (x5553 x5613))
(assert (= x4426 (and x4526 (not x3186))))
(assert (x5553 x1299))
(assert (= x1327 (and x1136 (not x2322))))
(assert (x5553 x2585))
(assert (= (x894 (x4266 64 x5232 6)) 64))
(assert (= x3137 (x894 (x3789 x3137 x130 x1576 x2450 x5371))))
(assert (x5553 x2480))
(assert (x5553 x1229))
(assert (= x681 (x3238 (x269 x4283 x681 x4511 x4843))))
(assert (x5553 x4989))
(assert (x5553 x4460))
(assert (= x4233 (and x4412 x4958)))
(assert (x5553 x1632))
(assert (= x1443 (x3238 (x4266 x610 x1443 x3659))))
(assert (< (x4266 64 x5131 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x5144 10000) (= 0 (x5051 x5144))))
(assert (x5553 x2945))
(assert (x5553 x4077))
(assert (=> (<= x1216 10000) (= 0 (x5051 x1216))))
(assert (=> (>= 10000 x1711) (= 0 (x5051 x1711))))
(assert (x5553 x459))
(assert (=> (>= 10000 x4180) (= (x5051 x4180) 0)))
(assert (= x4143 (x3247 (x3789 x1098 x2878 x5015 x4295 x4143))))
(assert (= (x894 (x5009 x5501 x4243)) x5501))
(assert (= (and x633 x2779) x5354))
(assert (x5553 x214))
(assert (=> (>= 10000 x2519) (= 0 (x5051 x2519))))
(assert (= x1987 (x722 (x1228 x530 x30 x2472 x1987 x170 x4859))))
(assert (x5553 x1275))
(assert (x5553 x3490))
(assert (x5553 x233))
(assert (x5553 x3210))
(assert (=> (<= x2740 10000) (= (x5051 x2740) 0)))
(assert (= x2771 (x40 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736))))
(assert (= (and (not x698) x2885) x3792))
(assert (x4435 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (=> (>= 10000 x3489) (= 0 (x5051 x3489))))
(assert (=> (>= 10000 x2425) (= 0 (x5051 x2425))))
(assert (x5553 x2073))
(assert (x5553 x2566))
(assert (= x4851 (x3247 (x1228 x1855 x2935 x2740 x2157 x4851 x3650))))
(assert (= x2699 (x722 (x269 x5530 x1647 x980 x2699))))
(assert (x5553 x301))
(assert (x5553 x1720))
(assert (x5553 x498))
(assert (= 64 (x894 (x4266 64 x4736 4))))
(assert (x5553 x5132))
(assert (= (or x3614 x1717) x730))
(assert (x5553 x560))
(assert (x5553 x4134))
(assert (x5553 x309))
(assert (x5553 x3738))
(assert (x5553 x4133))
(assert (= (and x4329 x277) x2390))
(assert (x5553 x325))
(assert (x5553 x4136))
(assert (> (x5009 x1966 x4837) 10000))
(assert (= 64 (x894 (x4266 64 x2928 2))))
(assert (= (=> (and (= x2100 (x2742 (+ x3262 96))) (= x3144 (x1067 x1141)) (= x2913 (not (> x713 128))) (= (x2742 (+ x296 96)) x1141)) (and x2913 x2288)) x1896))
(assert (x5553 x1908))
(assert (= (x722 (x269 x5613 x2030 x3675 x2352)) x2352))
(assert (= x4005 (x894 (x1228 x4005 x4730 x1798 x3345 x4179 x4679))))
(assert (> (x1228 x3525 x3124 x2682 x4476 x5480 x2515) 10000))
(assert (x5553 x2274))
(assert (=> (<= x4005 10000) (= (x5051 x4005) 0)))
(assert (= (x5051 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510)) (x485 x693 x2326 x3958 x1697 x97 x5558 x3510)))
(assert (= (and x4100 (not x3151)) x1726))
(assert (x5553 x4933))
(assert (= x1515 (x3238 (x4266 64 x1515 12))))
(assert (=> (>= 10000 x4708) (= 0 (x5051 x4708))))
(assert (= (x5051 8365236128558009046904410293209581292053118695343348878262597880337030709248) 0))
(assert (x5553 x2628))
(assert (= x5613 (x894 (x1228 x5613 x5274 x3895 x2978 x2944 x1312))))
(assert (=> (>= 10000 x2434) (= 0 (x5051 x2434))))
(assert (x5553 x830))
(assert (x5553 x971))
(assert (= x4065 (x4160 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253))))
(assert (x5553 x4470))
(assert (=> (>= 10000 x5274) (= (x5051 x5274) 0)))
(assert (x5553 x4416))
(assert (not (x4435 (x4266 64 1 x1261))))
(assert (x4435 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (= (x4266 64 x5630 36) (x5051 (x4266 64 x5630 36))))
(assert (=> (<= x2385 10000) (= (x5051 x2385) 0)))
(assert (x5553 x3861))
(assert (x5553 x1759))
(assert (= x1662 (=> (and (= (div (+ x5613 31) 32) x4365) (<= x796 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x186 (* 32 x4365)) (= (x2742 (+ x4501 x4127)) x4477) (= x1893 (x2742 (+ 128 x4970))) (<= x2553 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x296 (x2742 (+ x2553 32))) (= x4970 (x2742 (+ 36 x2527))) (> x796 x2553) (= (x2742 (+ (mod (+ 32 x4521) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x796)) x2527) (= x4521 (* x395 32)) (= (x2742 (+ 32 x4970)) x5117) (= (x2863 x2553) x968) (= x1047 (x2742 (+ 32 x1893))) (= x796 (x2742 (+ x2553 (mod (+ 32 x186) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x2553 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= x796 1) (= x395 (div (+ x4501 31) 32)) (= (x2742 (+ x5613 x296)) x1788) (= (< 0 x968) x3332) (<= 2 x2527) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2553) (= x4127 (x2742 (+ x796 32))) (> x2527 x796) (= x1061 150)) (and (=> (and (and (= (< 32 x968) x2166) (= x1468 (x313 x296))) x3332) (and (=> (not x2166) x5057) (=> (and x2166 (and (= (x2742 (+ x1047 32)) x2915) (= x3154 (x2742 (+ 32 x296))) (= x2218 (x1766 x3154)) (= (> x968 64) x1260))) (and (=> (and x1260 (and (= (x2742 (+ x296 64)) x4029) (= x2435 (x4488 x4029)) (= (x2742 (+ x1047 64)) x4317) (= x1921 (> x968 96)))) (and (=> x1921 x4291) (=> (not x1921) x5057))) (=> (not x1260) x5057))))) (=> (not x3332) x5057)))))
(assert (x5553 x4228))
(assert (= 64 (x894 (x4266 64 x2755 36))))
(assert (x5553 x4506))
(assert (not (x4435 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473))))
(assert (not (x4435 (x1228 x5501 x1182 x866 x2425 x4330 x4688))))
(assert (= x3292 (or x4803 x403)))
(assert (x5553 x2520))
(assert (x5553 x5139))
(assert (x5553 x3301))
(assert (x5553 x1931))
(assert (x5553 x2958))
(assert (= (or x2599 x5420) x4067))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914)))
(assert (= x5118 (x4160 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593))))
(assert (= x2144 (x3238 (x5009 x530 x2144))))
(assert (x5553 x5026))
(assert (= x199 (x4160 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156))))
(assert (= x1219 (x3238 (x1228 x286 x1219 x5302 x3589 x4897 x4255))))
(assert (= (x3247 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344)) x3651))
(assert (= x1297 (or x4724 x2409)))
(assert (= (x4160 (x4266 64 x2836 10)) 10))
(assert (> (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495) 10000))
(assert (x5553 x3004))
(assert (x5553 x1129))
(assert (= (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535) (x5051 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535))))
(assert (x5553 x4920))
(assert (x5553 x2379))
(assert (= (x894 (x5009 x2385 x3860)) x2385))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x2434 x3305 x5562 x1976)))
(assert (= (x5051 x4922) (x5051 (+ 1 x4922))))
(assert (= 6 (x4160 (x4266 64 x2382 6))))
(assert (= (x40 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325)) x4353))
(assert (x5553 x4152))
(assert (= (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (x5553 x3942))
(assert (x5553 x203))
(assert (= (x5051 x4974) (x5051 (+ x4974 1))))
(assert (= 0 (x5051 2001815235)))
(assert (x5553 x3013))
(assert (x5553 x159))
(assert (= (and x1225 (not x3995)) x302))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (=> (<= x3677 10000) (= 0 (x5051 x3677))))
(assert (x5553 x139))
(assert (x5553 x3847))
(assert (x5553 x3755))
(assert (x5553 x2160))
(assert (x5553 x1791))
(assert (x5553 x5068))
(assert (= (x722 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)) x2304))
(assert (x5553 x1164))
(assert (x5553 x2440))
(assert (x5553 x2875))
(assert (= (x894 (x5009 32 x3452)) 32))
(assert (x5553 x3266))
(assert (x5553 x1047))
(assert (=> (>= 10000 x4924) (= 0 (x5051 x4924))))
(assert (= x4018 (x722 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336))))
(assert (x5553 x2341))
(assert (x5553 x2916))
(assert (= x4898 (=> (and (= x1419 (not (< 128 x665))) (= x3606 (x4950 x5106)) (= x5106 (x2742 (+ 96 x4127))) (= x5205 (x2742 (+ 96 x1363)))) (and x1419 x382))))
(assert (x4435 34591783479076665122502074927488338969190252781858077677016911635275368785765))
(assert (x5553 x3535))
(assert (= (x40 (x1228 x1855 x2935 x2740 x2157 x4851 x3650)) x3650))
(assert (not (x4435 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677))))
(assert (> (x4266 64 x5487 6) 10000))
(assert (= (x3238 (x4266 64 x3181 2)) x3181))
(assert (x5553 x5305))
(assert (= (x3789 x85 x140 x3477 x626 x2469) (x5051 (x3789 x85 x140 x3477 x626 x2469))))
(assert (= x1635 (or x1569 x860)))
(assert (x5553 x318))
(assert (= (x894 (x4266 64 x4736 5)) 64))
(assert (x5553 x876))
(assert (= (and x1446 x2143) x1690))
(assert (=> (<= x1246 10000) (= 0 (x5051 x1246))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x3073 12)))
(assert (x5553 x1505))
(assert (= (and (not x2118) x1319) x1713))
(assert (x5553 x2383))
(assert (=> (<= x2837 10000) (= (x5051 x2837) 0)))
(assert (= x3208 (and (not x4467) x1490)))
(assert (= (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177) (x5051 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177))))
(assert (x5553 x4684))
(assert (x5553 x3359))
(assert (=> (<= x5119 10000) (= 0 (x5051 x5119))))
(assert (not (x4435 (x4266 64 x5061 7))))
(assert (= x3269 (and x4607 x1804)))
(assert (=> (>= 10000 x3020) (= 0 (x5051 x3020))))
(assert (x5553 x3102))
(assert (not (x4435 (x4266 64 x2928 1))))
(assert (x5553 x715))
(assert (not (x4435 (x1228 x530 x30 x2472 x1987 x170 x4859))))
(assert (x1779 x856))
(assert (< (x4266 64 x3181 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x995))
(assert (=> (>= 10000 x1851) (= 0 (x5051 x1851))))
(assert (= x5232 (x3238 (x4266 64 x5232 6))))
(assert (< (x4266 64 x2781 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1923 (or x2011 x433 x201 x3923 x2068)))
(assert (= 0 (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x40 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947)) x2008))
(assert (= x1199 (x3238 (x5009 32 x1199))))
(assert (< 10000 (x3789 x2358 x4298 x3642 x3410 x4650)))
(assert (< (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3830))
(assert (x5553 x992))
(assert (= (=> (and (= x5530 (x4395 (- x3525 32))) (= x738 (x2742 (+ x4770 x3529))) (= (x2742 (+ x2058 32)) x5490) (= x4308 (>= 224 x5530)) (= x3525 (x4395 (- x5490 x4770))) (= x2058 (x2742 (+ x3529 x4770)))) (and (=> (and (= x2168 (x352 x4074)) (= x3557 (x352 x2953)) (= (x352 x4770) x1177) (= (x352 x4868) x5002) (= x3152 (x2742 (+ x4770 96))) (= (x2742 (+ x4770 96)) x1202) (= (x352 x880) x1246) (= x5004 (x352 x1202)) (= x5142 (x352 x4415)) (= (x352 x4770) x671) (= (x352 x188) x2837) (= x2140 (x352 x4770)) (= (x2742 (+ 32 x4770)) x3588) (= x2333 (x352 x3152)) (= x2071 (x2742 (+ 160 x4770))) (= x2942 (x352 x4770)) (= (x2742 (+ 160 x4770)) x3826) (= (x2742 (+ x4770 64)) x4074) (= x4798 (x2742 (+ x4770 32))) (= x114 (x352 x3306)) (= (x352 x4770) x3823) (= x1677 (x352 x3826)) (= (x352 x2589) x964) (= (x2742 (+ 32 x4770)) x188) (= x3854 (x352 x3588)) (= (x2742 (+ 64 x4770)) x2953) (= (x2742 (+ x4770 128)) x648) (= (x352 x4798) x980) (= (x352 x869) x2699) (= x498 (x352 x1174)) (= (x269 x5530 x1647 x980 x2699) x2692) (= (x2742 (+ x4770 128)) x1174) (= (x352 x1114) x4262) (= (x2742 (+ 192 x4770)) x4415) (= x606 (x5009 x5530 x3823)) (= x5334 (x352 x648)) (= (x352 x447) x2466) (= (x2742 (+ 64 x4770)) x3158) (= x212 (x352 x3158)) (= x5321 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142)) (= (x4266 x5530 x2942 x2837) x2329) (= x922 (x3789 x5530 x2140 x4262 x114 x2333)) (= x3306 (x2742 (+ x4770 64))) (= (x2742 (+ x4770 96)) x447) (= x3084 (x352 x4770)) (= (>= 224 x3525) x4433) (= (x2742 (+ 32 x4770)) x1114) (= x1647 (x352 x4770)) (= (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677) x4541) (= x821 (ite (= x5530 0) x4199 (ite (>= 32 x5530) x606 (ite (<= x5530 64) x2329 (ite (<= x5530 96) x2692 (ite (>= 128 x5530) x922 (ite (<= x5530 160) x2369 (ite (<= x5530 192) x4541 (ite (<= x5530 224) x5321 x2526))))))))) (= x279 (x2742 (+ 32 x4770))) (= x880 (x2742 (+ 32 x4770))) (= x4868 (x2742 (+ x4770 128))) (= x845 (x352 x279)) (= (x2742 (+ x4770 64)) x869) (= (x1228 x5530 x671 x845 x2168 x5004 x498) x2369) (= x4199 (x102 0)) (= x1335 (x352 x2071)) (= x2589 (x2742 (+ x4770 96)))) (and x4433 (=> (and (= x1254 (x352 x4705)) (= x5648 (x2742 (+ x4770 64))) (= x745 (x3789 x3525 x4032 x5204 x1927 x4690)) (= (x352 x5648) x1927) (= x658 (x2742 (+ 160 x4770))) (= x4175 (x2742 (+ 32 x4770))) (= (x352 x1941) x5480) (= x5119 (x352 x861)) (= (x2742 (+ 96 x4770)) x4497) (= (x2742 (+ x4770 128)) x2445) (= (x352 x3201) x5026) (= (x352 x3336) x2177) (= x852 (x352 x4770)) (= x4434 (x2742 (+ 128 x4770))) (= x1408 (x352 x4175)) (= (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384) x615) (= (x352 x4904) x4690) (= x4705 (x2742 (+ 64 x4770))) (= x149 (x269 x3525 x4566 x5026 x1254)) (= x2422 (x1228 x3525 x3124 x2682 x4476 x5480 x2515)) (= x3336 (x2742 (+ x4770 96))) (= (x352 x4434) x208) (= x1087 (x4266 64 x2829 (ite (= 0 x3525) x3645 (ite (>= 32 x3525) x799 (ite (>= 64 x3525) x1267 (ite (<= x3525 96) x149 (ite (<= x3525 128) x745 (ite (>= 160 x3525) x2422 (ite (<= x3525 192) x615 (ite (<= x3525 224) x3015 x3278)))))))))) (= x221 (x352 x5378)) (= x4758 (x2742 (+ 32 x2290))) (= x5204 (x352 x918)) (= (x2742 (+ 96 x4770)) x4904) (= x4476 (x352 x1704)) (= (x352 x658) x3463) (= x1044 (x79 x872)) (= x2542 (x352 x4770)) (= (x102 0) x3645) (= (x2742 (+ x4770 32)) x861) (= x2290 (x2742 (+ 160 x4770))) (= (x352 x4770) x4566) (= x5242 (x2742 (+ 64 x4770))) (= x53 (x352 x4770)) (= x1350 (x2742 (+ 32 x4770))) (= x2240 (x2742 (+ x4770 64))) (= x3015 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914)) (= x4351 (x2742 (+ x4770 192))) (= (x352 x4351) x1914) (= (x352 x4770) x3103) (= (x352 x2445) x2515) (= x4032 (x352 x4770)) (= (x2742 (+ x4770 32)) x4013) (= (x352 x1818) x2882) (= (x2742 (+ 32 x4770)) x918) (= (x5009 x3525 x53) x799) (= (x352 x4497) x2110) (= x3124 (x352 x4770)) (= x1384 (x352 x132)) (= x1818 (x2742 (+ 128 x4770))) (= (x4266 x3525 x852 x5119) x1267) (= (x2742 (+ 64 x4770)) x1704) (= x5440 (x352 x2240)) (= x1270 (x352 x5242)) (= x1941 (x2742 (+ 96 x4770))) (= (x2742 (+ x4770 32)) x5378) (= x2682 (x352 x1350)) (= x5635 (< 0 x1044)) (= x3201 (x2742 (+ x4770 32))) (= (x2742 (+ 160 x4770)) x132)) (and (=> (and x5635 (and (= (< 32 x1044) x1533) (= (x1482 x465) x3423))) (and (=> (not x1533) x4994) (=> (and x1533 (and (= x3787 (x3635 x2043)) (= (x2742 (+ 32 x465)) x2043) (= x3373 (< 64 x1044)) (= x3983 (x2742 (+ x4758 32))))) (and (=> (not x3373) x4994) (=> (and (and (= x4693 (x2742 (+ 64 x4758))) (= (x1256 x5130) x76) (= x5130 (x2742 (+ x465 64))) (= x3622 (> x1044 96))) x3373) (and (=> (not x3622) x4994) (=> x3622 x3843))))))) (=> (not x5635) x4994))))) x4308)) x345))
(assert (= (x4266 64 x2928 1) (x5051 (x4266 64 x2928 1))))
(assert (x5553 x2842))
(assert (= (x3238 (x1228 x530 x30 x2472 x1987 x170 x4859)) x30))
(assert (not (x4435 (x269 x5530 x1647 x980 x2699))))
(assert (x5553 x968))
(assert (x5553 x3592))
(assert (x5553 x2723))
(assert (= x1877 (and x5527 x2923)))
(assert (x5553 x2643))
(assert (x5553 x4283))
(assert (= (x4266 64 x1828 10) (x5051 (x4266 64 x1828 10))))
(assert (x5553 x3874))
(assert (= x4164 (or (and x244 x5012) (and x3741 x2367))))
(assert (= x3220 (and x3151 x4100)))
(assert (x5553 x3642))
(assert (= x5021 (x3238 (x3789 x530 x5021 x1861 x1857 x3779))))
(assert (= (and x1915 x1355) x4296))
(assert (= (=> (and (= x4509 x3683) (= x5415 x5528) (= x1611 x2772) (= x2598 x3637) (= x667 x1492) (= x5284 x5650) (= x1956 x1393)) x3244) x3832))
(assert (=> (<= x3233 10000) (= (x5051 x3233) 0)))
(assert (x5553 x2930))
(assert (= x2467 (or (and x499 x2081) (and x612 x5079))))
(assert (=> (>= 10000 x4299) (= (x5051 x4299) 0)))
(assert (= (or x5069 x5391 (and x2936 x363) x1595 (and x4025 x5178) x4514 x754) x2524))
(assert (= (or x1392 x3031) x3378))
(assert (=> (<= x1420 10000) (= 0 (x5051 x1420))))
(assert (x5553 x5457))
(assert (x111 x190))
(assert (x5553 x3259))
(assert (= (x894 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134)) x5613))
(assert (x5553 x180))
(assert (x5553 x3992))
(assert (x5553 x4054))
(assert (= x807 (x4160 (x4266 x693 x2462 x807))))
(assert (= (x3238 (x4266 64 x2766 (ite (= 0 x530) x4826 (ite (>= 32 x530) x4936 (ite (<= x530 64) x5563 (ite (>= 96 x530) x1447 (ite (>= 128 x530) x3538 (ite (>= 160 x530) x1640 (ite (<= x530 192) x4713 (ite (>= 224 x530) x1084 x1552)))))))))) x2766))
(assert (x5553 x1827))
(assert (x5553 x96))
(assert (= x336 (x1514 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336))))
(assert (x5553 x4853))
(assert (= x2090 (and x3794 (not x1012))))
(assert (x5553 x5093))
(assert (= (and x35 x5226) x1066))
(assert (< (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3278))
(assert (= x619 (=> (and (= x3439 (x2742 (+ x1333 96))) (= x1105 (not (< 128 x4987))) (= x2112 (x2742 (+ 96 x1470))) (= x4228 (x254 x2112))) (and x1105 x5571))))
(assert (x5553 x1507))
(assert (= (x894 (x3789 x610 x2516 x3169 x3223 x3267)) x610))
(assert (< 10000 (x485 x286 x63 x2537 x401 x1054 x2048 x4601)))
(assert (= x5113 (or (and x5241 (not x3776)) x435)))
(assert (= x4721 (x722 (x269 x2358 x207 x1529 x4721))))
(assert (=> (<= x866 10000) (= (x5051 x866) 0)))
(assert (= x5539 (x5346 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661))))
(assert (= x2683 (x3238 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325))))
(assert (x5553 x2940))
(assert (x5553 x1058))
(assert (x5553 x859))
(assert (x5553 x5394))
(assert (x5553 x1555))
(assert (x5553 x3417))
(assert (x5553 x5223))
(assert (= x1278 (x5346 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278))))
(assert (= (x3238 (x4266 64 x1068 36)) x1068))
(assert (< 10000 (x4266 64 x2836 10)))
(assert (= (x5346 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092)) x1711))
(assert (x5553 x61))
(assert (< (x1228 x1855 x2935 x2740 x2157 x4851 x3650) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4837))
(assert (x5553 x2158))
(assert (x5553 x5334))
(assert (= x286 (x894 (x4266 x286 x2029 x1632))))
(assert (x5553 x4461))
(assert (< (x4266 64 x801 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3238 (x4266 64 x2382 2)) x2382))
(assert (= (x722 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324)) x1154))
(assert (x5553 x3905))
(assert (= (or x479 x3111) x2388))
(assert (x5553 x3059))
(assert (= (x5051 (x1228 x85 x4919 x629 x2130 x1420 x2994)) (x1228 x85 x4919 x629 x2130 x1420 x2994)))
(assert (=> (<= x5002 10000) (= 0 (x5051 x5002))))
(assert (x5553 x5557))
(assert (< 10000 (x3789 x1004 x3815 x2736 x1603 x5356)))
(assert (= x323 (x40 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445))))
(assert (x5553 x3855))
(assert (< (x4266 64 x5487 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x2000))
(assert (= (or x4550 x4403 x2258 x420 x5011 x445 x3817 x1726 x4778 x2849) x586))
(assert (x5553 x4265))
(assert (= (or x5497 x2297) x4518))
(assert (x5553 x4716))
(assert (= (not (and (= x1213 x3595) (= x5327 (+ 1 x961)) (= x3163 (x5211 x1822)) (= (x496 x4684) x3653) (= (+ 1 x4008) x4282) (= x3808 (+ 1 x2382)) (< (+ x3796 x4120) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x544 x4120) (>= x2382 1) (= x283 (+ 1 x4008)) (= x1822 (x4266 64 x961 100)) (= x4008 (+ x961 1)) (= (x4266 64 x4008 36) x391) (= x544 (x496 x4684)) (= x1919 (x2063 x391)) (= (x496 x837) x3796) (= (x2063 x3054) x4120) (= (- x3653 x4120) x3596) (= (+ 1 x2382) x961) (>= 252 x2382) (= x3054 (x4266 64 x2382 36)) (>= x3595 0) (= (x638 x837) x3178) (= x3595 (+ x4120 x3178)) (<= x3595 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4120 x3178)))) x903))
(assert (x5553 x5488))
(assert (x5553 x1124))
(assert (= 64 (x894 (x4266 64 x1851 100))))
(assert (x5553 x4351))
(assert (x5553 x97))
(assert (= x2326 (x3238 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510))))
(assert (x5553 x4646))
(assert (x5553 x4739))
(assert (x111 x1978))
(assert (x5553 x2595))
(assert (x5553 x1479))
(assert (= (x5051 (x269 x4283 x681 x4511 x4843)) (x269 x4283 x681 x4511 x4843)))
(assert (< 10000 (x485 x2385 x210 x579 x4423 x5503 x462 x5517)))
(assert (= x2886 (or x3926 x4558)))
(assert (= x1697 (x722 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510))))
(assert (= (x40 (x1228 x5530 x671 x845 x2168 x5004 x498)) x498))
(assert (x5553 x4877))
(assert (= (x5051 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)) (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)))
(assert (= x3445 (x1514 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445))))
(assert (= x1528 (or x3503 x5129)))
(assert (x5553 x2178))
(assert (x5553 x1654))
(assert (= (or x4786 x2981) x5210))
(assert (= x618 (=> (and (= x3776 (= 0 x2440)) (or (not x3776) x3776)) x5390)))
(assert (x5553 x1939))
(assert (=> (>= 10000 x495) (= (x5051 x495) 0)))
(assert (x5553 x608))
(assert (x5553 x323))
(assert (= (x5051 (x4266 64 x3511 6)) (x4266 64 x3511 6)))
(assert (= (and x2041 (not x4144)) x1413))
(assert (x5553 x4511))
(assert (= (x4160 (x4266 64 x2650 12)) 12))
(assert (not (x4435 (x4960 x1855 x3906 x2718 x1965 x4554 x715 x2612 x850))))
(assert (= x1442 (and (not x3357) x1558)))
(assert (x5553 x699))
(assert (= (x722 (x269 x4005 x99 x921 x2321)) x2321))
(assert (< (x1228 x3525 x3124 x2682 x4476 x5480 x2515) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4119))
(assert (< 10000 (x4266 64 x2766 (ite (= x530 0) x4826 (ite (>= 32 x530) x4936 (ite (<= x530 64) x5563 (ite (>= 96 x530) x1447 (ite (<= x530 128) x3538 (ite (<= x530 160) x1640 (ite (<= x530 192) x4713 (ite (<= x530 224) x1084 x1552)))))))))))
(assert (= (x3238 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947)) x2000))
(assert (x5553 x4386))
(assert (= (x5346 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157)) x46))
(assert (=> (>= 10000 x2348) (= (x5051 x2348) 0)))
(assert (x5553 x367))
(assert (x121 x3047))
(assert (x5553 x1034))
(assert (x385 x578))
(assert (=> (>= 10000 x221) (= 0 (x5051 x221))))
(assert (x5553 x2312))
(assert (x5553 x5356))
(assert (x5553 x5581))
(assert (x5553 x1606))
(assert (x5553 x5370))
(assert (x5553 x1384))
(assert (x5553 x85))
(assert (x5553 x4864))
(assert (x5553 x934))
(assert (x5553 x1009))
(assert (= x4714 (or x1797 x846 x4669 x3426 x2389)))
(assert (= (x894 (x3789 x1098 x2878 x5015 x4295 x4143)) x1098))
(assert (= (and x649 x3376) x2095))
(assert (=> (>= 10000 x3084) (= (x5051 x3084) 0)))
(assert (x5553 x1123))
(assert (< 10000 (x4266 64 x1828 10)))
(assert (= (x894 (x1228 x85 x4919 x629 x2130 x1420 x2994)) x85))
(assert (=> (<= x4653 10000) (= 0 (x5051 x4653))))
(assert (x5553 x1411))
(assert (not (x4435 (x1228 x1966 x2083 x4104 x1865 x2530 x2341))))
(assert (x5553 x2221))
(assert (> (x1228 x1855 x2935 x2740 x2157 x4851 x3650) 10000))
(assert (= 0 (x5051 3628442803)))
(assert (x5553 x3463))
(assert (x5553 x585))
(assert (= (x3238 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)) x674))
(assert (x5553 x219))
(assert (= (x4160 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366)) x4172))
(assert (x5553 x3798))
(assert (= x1004 (x894 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405))))
(assert (x5553 x4841))
(assert (= (ite (= x3525 0) x3645 (ite (<= x3525 32) x799 (ite (>= 64 x3525) x1267 (ite (>= 96 x3525) x149 (ite (<= x3525 128) x745 (ite (>= 160 x3525) x2422 (ite (<= x3525 192) x615 (ite (<= x3525 224) x3015 x3278)))))))) (x4160 (x4266 64 x2829 (ite (= 0 x3525) x3645 (ite (<= x3525 32) x799 (ite (>= 64 x3525) x1267 (ite (>= 96 x3525) x149 (ite (<= x3525 128) x745 (ite (>= 160 x3525) x2422 (ite (>= 192 x3525) x615 (ite (<= x3525 224) x3015 x3278))))))))))))
(assert (not (x4435 (x5009 x5613 x5584))))
(assert (x5553 x78))
(assert (= (and x4791 x231) x1558))
(assert (x5553 x5329))
(assert (=> (<= x5489 10000) (= (x5051 x5489) 0)))
(assert (x5553 x1069))
(assert (x5553 x5481))
(assert (> (x3789 x1966 x2269 x3334 x1405 x4054) 10000))
(assert (= x3904 (x3247 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157))))
(assert (= (x4160 (x4266 x5501 x5370 x5056)) x5056))
(assert (= x2740 (x4160 (x1228 x1855 x2935 x2740 x2157 x4851 x3650))))
(assert (x1779 x2598))
(assert (> (x269 x1004 x4085 x5592 x4629) 10000))
(assert (=> (<= x1408 10000) (= 0 (x5051 x1408))))
(assert (x5553 x1456))
(assert (= (x894 (x4266 64 1 x4659)) 64))
(assert (= (x5051 1084734224) 0))
(assert (< 10000 (x4266 64 x3702 7)))
(assert (not (x4435 (x4266 x610 x1443 x3659))))
(assert (= x660 (=> (= x344 (= x1108 0)) (and (=> (and x344 (and (= x1070 false) (= 0 x5032) (= true x3696))) x3351) (=> (and (and (= x4396 x3913) (= 0 x1332) (= x3883 1)) (not x344)) x2032)))))
(assert (= x3948 (or x1670 x3598)))
(assert (= (or x1297 x3732 x3095) x1859))
(assert (> (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273) 10000))
(assert (x5553 x678))
(assert (> (x4266 x530 x5126 x1849) 10000))
(assert (< (x3789 x2434 x3433 x4948 x1572 x2544) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x4435 (x4266 64 x3702 7))))
(assert (x5553 x5161))
(assert (= (x894 (x269 x2385 x3846 x2780 x4360)) x2385))
(assert (= (x722 (x3789 x5501 x1456 x5366 x1537 x3951)) x1537))
(assert (x5553 x3203))
(assert (x5553 x4649))
(assert (=> (>= 10000 x1765) (= (x5051 x1765) 0)))
(assert (x5553 x4797))
(assert (= (x4160 (x4266 x2443 x4502 x4956)) x4956))
(assert (not (x4435 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946))))
(assert (= (and (not x5304) x2539) x244))
(assert (x5553 x5131))
(assert (x5553 x1008))
(assert (= (or x2439 x2388) x3971))
(assert (x5553 x1125))
(assert (x5553 x2354))
(assert (x5553 x1024))
(assert (x5553 x46))
(assert (= (and (not x4958) x4412) x27))
(assert (x5553 x5615))
(assert (not (x4435 (x4266 64 x801 10))))
(assert (= (=> (and (= (x4395 (- x2503 x4970)) x4531) (= x96 (x2742 (+ x1047 x968))) (= (x4831 x796) x665) (= (x2742 (+ 32 x4731)) x4382) (= x557 (x2742 (+ 31 x968))) (= x2503 (x2742 (+ x1047 x4482))) (= x1363 (x2742 (+ x2503 32))) (= (x2742 (+ 32 x5117)) x4731) (= x4871 (> x665 0)) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x557) x4482)) (and (=> (not x4871) x382) (=> (and x4871 (and (= x958 (< 32 x665)) (= (x252 x4127) x3094))) (and (=> (and (and (= x5136 (x2742 (+ x4127 32))) (= (x122 x5136) x3886) (= x2417 (x2742 (+ x1363 32))) (= (> x665 64) x2118)) x958) (and (=> (not x2118) x382) (=> (and (and (= x4418 (x1769 x2378)) (= x4178 (< 96 x665)) (= x2999 (x2742 (+ 64 x1363))) (= x2378 (x2742 (+ x4127 64)))) x2118) (and (=> (not x4178) x382) (=> x4178 x4898))))) (=> (not x958) x382))))) x5057))
(assert (x5553 x4688))
(assert (= (and x554 x2222) x66))
(assert (< (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5363))
(assert (x5553 x3924))
(assert (= x610 (x894 (x4266 x610 x1443 x3659))))
(assert (= x2443 (x894 (x3789 x2443 x4170 x4860 x1625 x4474))))
(assert (x5553 x5388))
(assert (< (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4027))
(assert (=> (<= x5525 10000) (= 0 (x5051 x5525))))
(assert (x5553 x230))
(assert (x5553 x4929))
(assert (x5553 x100))
(assert (x5553 x3323))
(assert (x5553 x338))
(assert (x5553 x1714))
(assert (x5553 x4882))
(assert (x5553 x4861))
(assert (= (and x1413 (not x235)) x3926))
(assert (= (x40 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092)) x4026))
(assert (= x1263 (=> (and (= (= 0 x3879) x327) (or (and (and (= (x1128 x2928) x1381) (= x240 (ite (= x3879 0) x2155 0)) (= x2059 x2954) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2954) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x240 x1381)) (<= 0 x2954) (= x1108 x3879) (= x2954 (+ x240 x1381)) (= (- x4232 x240) x4985) (= x3434 x3913) (= (x3771 x1596) x4232)) x327) (and (and (= x3434 x3913) (= x1108 x3879)) (not x327)))) x660)))
(assert (= (and x1158 (not x4817)) x4669))
(assert (x5553 x5141))
(assert (= x5291 (or x2186 x3930)))
(assert (= x4837 (x3238 (x5009 x1966 x4837))))
(assert (x5553 x4481))
(assert (x121 x1201))
(assert (= x239 (x722 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638))))
(assert (= (x4160 (x1228 x85 x4919 x629 x2130 x1420 x2994)) x629))
(assert (x5553 x4881))
(assert (x5553 x1065))
(assert (x5553 x3475))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x693 x923 x975 x3805 x3677 x841)))
(assert (< 10000 (x4266 x5530 x2942 x2837)))
(assert (=> (<= x1792 10000) (= (x5051 x1792) 0)))
(assert (= (x5051 (x4266 x2358 x2552 x135)) (x4266 x2358 x2552 x135)))
(assert (= (and x2658 (not x840)) x2881))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x4283 x3013 x2354 x4853 x4379)))
(assert (= (and x2675 x2241) x1601))
(assert (not (x4435 (x5009 32 104))))
(assert (= (x3238 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) x907))
(assert (x5553 x3834))
(assert (not (x4435 (x4266 x5613 x3800 x4581))))
(assert (= (x3789 x2385 x3894 x3556 x3996 x3839) (x5051 (x3789 x2385 x3894 x3556 x3996 x3839))))
(assert (x5553 x4464))
(assert (x5553 x3952))
(assert (not (x4435 (x3789 x286 x2817 x3102 x4130 x3436))))
(assert (= x1653 (and x1483 x2805)))
(assert (= (x894 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273)) x1966))
(assert (= (x5051 (x4266 x1966 x4625 x5022)) (x4266 x1966 x4625 x5022)))
(assert (= x2541 (x3238 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344))))
(assert (x5553 x4907))
(assert (x5553 x2055))
(assert (x5553 x5252))
(assert (= (x1514 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) x2946))
(assert (x5553 x2971))
(assert (=> (<= x1125 10000) (= 0 (x5051 x1125))))
(assert (= x5289 (=> (and (= (x1422 516) x3613) (= (= x3613 0) x5535)) (and (=> (and (not x5535) (and (= x5411 (x1023 354)) (= (< (ite (= x1986 0) 10000 x1986) x5411) x5565) (= (x4266 64 x4736 5) x1775) (= (x3096 x1775) x1986))) (and (=> (and x5565 (and (= x5463 (x2742 (+ x3246 32))) (= x5032 100) (= x144 (x2742 (+ 4 x699))) (= x1512 true) (= x3246 (x2742 (+ 32 x144))) (= x394 false))) x3351) (=> (and (and (= x4984 (x2742 (+ 32 x1812))) (= x399 (x2742 (+ 32 x5098))) (= (= 0 x677) x2684) (= x3379 (x2742 (+ x1879 31))) (= (x2742 (+ x1823 x1516)) x3847) (= x4734 (x2742 (+ 31 x818))) (= (x2742 (+ x4984 32)) x1506) (= x1879 (x1023 354)) (= (x2742 (+ x5629 192)) x2776) (= (x4395 (- x5098 x5629)) x2224) (= (x2742 (+ 31 x5466)) x1390) (= (x2742 (+ x2776 32)) x1823) (= x5466 (x1422 516)) (= x5098 (x2742 (+ x5250 x2926))) (= x1369 (x4395 (- x3847 x5629))) (= x5629 (x2742 (+ 4 x699))) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1390) x1516) (= x1812 (x2742 (+ x2488 32))) (= x5250 (x2742 (+ x3847 32))) (= x2807 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4734)) (= x677 (x4762 x1596)) (= (x4395 (- x3170 x699)) x5347) (= (x2742 (+ 32 x5629)) x2488) (= (x733 450) x818) (= x2529 (x2742 (+ 32 x1506))) (= (x2742 (+ x2807 x399)) x3170) (= x2926 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3379))) (not x5565)) (and (=> (and (not x2684) (and (= (>= x3648 x2155) x978) (= x633 (and x4932 x978)) (= (< (+ x2155 x2984) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4932) (= x3648 (x496 x2928)) (= x2984 (x496 x1596)))) (and (=> (and x633 (and (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x3165) (= x4125 (x3691 x1596)) (<= x1883 127) (>= 127 x1883) (= x1369 x986) (= x3009 (or (> (- x1952 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< (- x1952 4) 192) (= true (<= (- x1952 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (>= x5347 420) (= 3313512704 x3967) (= (x4762 x3819) x655) (= x1450 x2928) (= 0 x47) (= x3949 (= (x4389 196) x5466)) (= x1952 x5347) (= x4709 x1407) (= x3075 (x496 x2928)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4709) (= x3545 false) (= 192 x675) (= x1790 x4736) (= (- x3075 x2155) x184) x3949 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4125 x2155)) (= x4806 x2224) (<= 420 x1952) (<= 0 x4709) (= (+ x2155 x4125) x4709) (>= x655 1) (= false x2279))) (and (=> (and (not x3009) (= true x5297)) (and (=> (not x5297) x4662) (=> (and x5297 (= (and (= true (<= x1952 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 227 x1952)) x1049)) (and (=> (not x1049) x118) (=> (and x1049 (and (= x1977 (< 18446744073709551615 x3834)) (= x3834 (x1760 196)))) (and (=> (and (and (= (< x1952 x3405) x2697) (= x3405 (x2742 (+ x3834 228)))) (not x1977)) (and (=> x2697 x1661) (=> (and (not x2697) (= x3182 (> x1369 18446744073709551615))) (and (=> x3182 x4662) (=> (and (not x3182) (and (= x1120 (x2742 (+ x4903 31))) (= (x2742 (+ 4 x1369)) x4903) (= (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1952) (> x1120 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1952) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1120)) (< x1120 x1952))) x5564))) (and (=> (not x5564) x118) (=> (and (and (= (< 18446744073709551615 x526) x5519) (= (x1760 x4903) x526)) x5564) (and (=> (and (and (= (x2742 (+ x526 x238)) x4592) (= x4839 (< x1952 x4592)) (= x238 (x2742 (+ 32 x4903)))) (not x5519)) (and (=> (and (not x4839) (= x5053 (< 18446744073709551615 x2224))) (and (=> x5053 x4662) (=> (and (not x5053) (and (= (x2742 (+ 4 x2224)) x2478) (= x739 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1952) (> x1841 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1841 x1952) (= (<= x1952 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1841))))) (= x1841 (x2742 (+ x2478 31))))) (and (=> (and (and (= x3032 (< 18446744073709551615 x2281)) (= (x1760 x2478) x2281)) x739) (and (=> x3032 x2238) (=> (and (and (= x5647 (< x1952 x2568)) (= x2568 (x2742 (+ x2281 x3188))) (= (x2742 (+ 32 x2478)) x3188)) (not x3032)) (and (=> (and (not x5647) (and (= x3434 x1520) (= 1 x3879))) x1263) (=> x5647 x1661))))) (=> (not x739) x118))))) (=> x4839 x1661))) (=> x5519 x2238))))))))) (=> x1977 x2238))))))) (=> x3009 x4662))) (=> (and (not x633) (and (= x1108 0) (= x3913 x1520))) x660))) (=> (and (and (= true x4457) (= false x1546) (= 0 x5032)) x2684) x3351))))) (=> (and (and (= x5080 (x2742 (+ 32 x1656))) (= (x2742 (+ x2535 32)) x2398) (= true x21) (= 132 x5032) (= x1656 (x2742 (+ 4 x699))) (= (x2742 (+ x5080 32)) x2535) (= x3507 false)) x5535) x3351)))))
(assert (x5553 x5140))
(assert (=> (>= 10000 x2668) (= 0 (x5051 x2668))))
(assert (x4435 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (x5553 x2106))
(assert (x5553 x2568))
(assert (= x3092 (or x983 x829)))
(assert (= 64 (x894 (x4266 64 x4037 0))))
(assert (=> (<= x1862 10000) (= 0 (x5051 x1862))))
(assert (= (x5051 (x4266 64 x4736 4)) (x4266 64 x4736 4)))
(assert (not (x4435 (x269 x5501 x784 x3627 x2194))))
(assert (x5553 x4832))
(assert (x5553 x99))
(assert (x5553 x4804))
(assert (x5553 x1416))
(assert (=> (>= 10000 x2762) (= (x5051 x2762) 0)))
(assert (=> (>= 10000 x4443) (= (x5051 x4443) 0)))
(assert (x5553 x108))
(assert (x5553 x2516))
(assert (= (and (not x4787) x4) x14))
(assert (x5553 x2410))
(assert (= (x4160 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914)) x221))
(assert (x5553 x3128))
(assert (=> (<= x2536 10000) (= (x5051 x2536) 0)))
(assert (= (or x2013 x2534) x1392))
(assert (x5553 x3410))
(assert (= (and x4723 x987) x1875))
(assert (=> (<= x5613 10000) (= 0 (x5051 x5613))))
(assert (= x2173 (=> (and (and (= x1669 false) (<= x585 127) (>= 1461501637330902918203684832716283019655932542975 x4649) (= false x928) (>= x3290 0) (>= x1956 1) (<= x3179 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4513 (> (x4762 x3819) 0)) (<= x1956 1461501637330902918203684832716283019655932542975) (not (= x3819 x4684)) (>= x1406 0) (>= x257 0) (>= x5360 0) (= x3022 x1454) (= x4649 x3819) (<= x393 255) (<= 0 x532) (>= x3819 1) (<= 1 x1086) (= x2876 (< 0 (x4762 x4684))) (= (x4266 64 x3022 10) x2400) (not (= x4684 x2928)) x2876 (<= 1 x2928) (<= x4684 1461501637330902918203684832716283019655932542975) x342 (= (not (= x3346 0)) x4040) (<= x3749 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1406 1461501637330902918203684832716283019655932542975) (>= x1459 0) (<= x3290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x3819 x819)) (= x5636 false) (>= 1461501637330902918203684832716283019655932542975 x3819) (<= x742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x819) (= (< 0 (x4762 x2928)) x342) (>= 1461501637330902918203684832716283019655932542975 x532) (>= 1461501637330902918203684832716283019655932542975 x4775) (>= x742 0) (<= x1459 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4775) (= (> (x4762 x819) 0) x1167) (not (= x819 x2928)) (>= 1461501637330902918203684832716283019655932542975 x819) (= x3749 x4682) (>= 127 x585) (>= x1739 0) (= x5145 36) (not (= x3819 x2928)) (not (= x819 x4684)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5360) (= false x2667) (= x2928 x1956) (= (ite (not (= 0 x393)) 1 0) x3346) x4513 (<= 0 x3179) (= 3672334990 x1979) (= x5261 false) x1167 (= (x124 x2400) x393) (<= 1 x4649) (= x1086 (x4762 x2928)) (= x3022 x4079) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x257) (<= x2928 1461501637330902918203684832716283019655932542975) (<= x1739 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4079 x1464) (>= x3749 0) (= false x4110) (<= 1 x4684)) (and (and (= x5335 x1406) (= x1094 (x1258 x5335))) (and (and (= x1888 x1464) (= x742 x3999) (= 68 x3979) (<= x3999 x1094)) (and (and (= x4682 x531) (= false x3921)) (and (and (= x742 x3939) (and (and (<= 0 x2046) (<= 1 x862) (= x452 x531) (<= x4076 127) (= x576 (not (= x2928 x3803))) (= x1357 (x5187 x2928)) (= x1888 x4651) (= x2199 false) (>= 127 x4076) (= 2001815235 x273) (= false x4138) (= x1411 (x1258 x909)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2046) (= (- x1411 x3939) x2446) (= 1 x3936) (= x2046 (+ x3939 x1357)) (= x909 x1406) (= (ite x576 1 0) x1380) (= x2046 x1594) (= (x4762 x2928) x862) (= x2283 2) (< (+ x3939 x1357) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and x576 (and (<= x2798 1461501637330902918203684832716283019655932542975) (= x3803 x2798))) (and (not x576) (= 0 x1380))))) (= x1406 x3803)))))) x5317)))
(assert (= (x3238 (x4266 64 x2928 1)) x2928))
(assert (x5553 x2959))
(assert (x5553 x5653))
(assert (= (x4160 (x4266 64 x2382 36)) 36))
(assert (x5553 x4240))
(assert (= (x894 (x485 x2385 x210 x579 x4423 x5503 x462 x5517)) x2385))
(assert (= (x269 x2385 x3846 x2780 x4360) (x5051 (x269 x2385 x3846 x2780 x4360))))
(assert (= (x894 (x269 x85 x3183 x729 x2972)) x85))
(assert (=> (>= 10000 x909) (= 0 (x5051 x909))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x4037 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253)))
(assert (= (x4266 64 x3181 2) (x5051 (x4266 64 x3181 2))))
(assert (x5553 x2777))
(assert (= x770 (or x306 x3455)))
(assert (= (x5051 (x269 x693 x1125 x5557 x1035)) (x269 x693 x1125 x5557 x1035)))
(assert (=> (>= 10000 x2135) (= 0 (x5051 x2135))))
(assert (x5553 x4016))
(assert (=> (>= 10000 x3805) (= 0 (x5051 x3805))))
(assert (= (x4266 64 x4123 36) (x5051 (x4266 64 x4123 36))))
(assert (x5553 x5308))
(assert (= x1625 (x722 (x3789 x2443 x4170 x4860 x1625 x4474))))
(assert (= x2533 (x3247 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336))))
(assert (x5553 x154))
(assert (x5553 x4858))
(assert (x5553 x4773))
(assert (x5553 x3380))
(assert (=> (>= 10000 x961) (= (x5051 x961) 0)))
(assert (x5553 x2478))
(assert (= (x894 (x4266 x4005 x4465 x1714)) x4005))
(assert (x5553 x3867))
(assert (=> (<= x3433 10000) (= (x5051 x3433) 0)))
(assert (x5553 x756))
(assert (x5553 x1363))
(assert (x5553 x4734))
(assert (< 10000 (x485 x693 x2326 x3958 x1697 x97 x5558 x3510)))
(assert (= (x722 (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157)) x2634))
(assert (=> (<= x5142 10000) (= (x5051 x5142) 0)))
(assert (x5553 x607))
(assert (=> (>= 10000 x3184) (= (x5051 x3184) 0)))
(assert (= x2358 (x894 (x4266 x2358 x2552 x135))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x4140 11)))
(assert (x5553 x5279))
(assert (= (and x1475 x4602) x5497))
(assert (x5553 x3468))
(assert (= (x4266 x3525 x852 x5119) (x5051 (x4266 x3525 x852 x5119))))
(assert (x4435 1914215))
(assert (x5553 x465))
(assert (= (x5009 x85 x330) (x5051 (x5009 x85 x330))))
(assert (x5553 x3638))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593)))
(assert (= x4161 (and (not x1352) x5209)))
(assert (x5553 x2893))
(assert (x5553 x4277))
(assert (x5553 x3795))
(assert (x5553 x4813))
(assert (= (x40 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677)) x5002))
(assert (x5553 x19))
(assert (=> (>= 10000 x715) (= (x5051 x715) 0)))
(assert (x5553 x3904))
(assert (= x5355 (=> (and (or (and x147 (= x61 x3414)) (and (not x147) (and (not (> x3414 x4185)) (= x61 x4185)))) (and (= (x3493 x303) x5551) (= 2 x5551) (= x303 (x4266 64 x999 11)) (>= 65535 x4736) (= x147 (= 0 x4185)) (= (x1149 x5554) x3414) (= x5554 (x4266 64 1 x1261)) (= (x4266 64 x4736 4) x1261))) x2198)))
(assert (=> (<= x1430 10000) (= (x5051 x1430) 0)))
(assert (x5553 x1033))
(assert (=> (<= x5093 10000) (= 0 (x5051 x5093))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677)))
(assert (= x3739 (=> (and (= x3715 (x2742 (+ x2497 32))) (= 36 x3043) (= (x4395 (- x3715 x5123)) x3043) (= (= x4059 x819) x3437) (= (x2742 (+ 4 x5123)) x2497)) (and (=> (and (and (and (<= x2127 127) (= x4142 (x4762 x819)) (= false x2620) (= false x4105) (= x3385 (* x2930 1000000000)) (<= x2127 127) (= x4947 x4312) (= x3385 x2785) (= x2930 x4312) (= (x4266 64 x2928 1) x3809) (= (ite x3995 1 0) x2794) (= (x1313 x565) x3542) (= x3995 (< x1545 x3542)) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x1971) (= x565 (x4266 64 x2928 2)) (<= x2930 57896044618658097711785492504343953926634992332820282019728792003956) (= (x972 x3809) x1545) (= x1846 36) (<= 1 x4142) (= 3628442803 x3248)) (or (and x3995 (= x2794 0)) (and (and (= x3040 (x4395 (- x1545 x3542))) (not (< x3040 x2785)) (not (> x3040 x1545))) (not x3995)))) x3437) x2411) (=> (and (not x3437) (and (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x3323) (= (x2063 x1029) x1233) (= (= 0 x1233) x3902) (= (x4762 x4684) x4540) (= (+ 1 x1680) x1886) (>= x4540 1) (= x5164 false) (>= 1461501637330902918203684832716283019655932542975 x837) (= false x5281) (= x1020 x2930) (= x1029 (x4266 64 x1680 36)) (<= 1 x4059) (<= x2459 127) (= (+ x1680 1) x2382) (= x2179 36) (= x4684 x4059) (<= x2459 127) (= 3628442803 x5152) (= x2928 x837) (<= x1680 253) (<= x4059 1461501637330902918203684832716283019655932542975) (>= x837 1))) (and (=> (and (= x1012 (= 1 x1233)) (not x3902)) (and (=> (and (not x1012) (= x2174 (= x1233 2))) (and (=> (and (and (= (= 0 x3885) x2296) (or (= x1573 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573)) (= x1401 (+ 1 x2382)) (= (+ x3073 1) x3079) (= (x4266 64 x2382 6) x51) (<= x3865 65535) (= x3574 (x4266 64 x3073 12)) (= (ite (> x5318 0) x4742 (x2436 127 x4742)) x1954) (>= x2382 1) (= x3133 (+ 1 x3073)) (= x3073 (+ x2382 1)) (= x3885 (x2436 1 x2232)) (= (x3482 x3574) x4890) (= x4742 (div x2232 2)) (= (x3131 x51) x3865) (= x5318 (x2436 1 x2232)) (<= x4890 18446744073709551615) (<= x2382 253) (= x1573 (x4395 (- x5318 (mod (ite (< x1954 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) x2174) (and (=> (and (and (= (< 0 x1954) x1457) (= (x5009 32 103) x1375)) (not x2296)) (and (=> x1457 x5602) (=> (and (= x1288 0) (not x1457)) x3044))) (=> (and (and (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2232) x2099) (= x4866 (+ 292 x3485)) (or (= x3485 32) (= 0 x3485)) (= (* 32 (ite (not (= x1954 0)) 1 0)) x3485)) x2296) x1021))) (=> (and (not x2174) (= x5527 (= x1233 3))) (and (=> (and x5527 (and (or (and (= (ite x2680 1 0) x5581) (not x2680)) (and (and (= (ite (not (= x2928 x3610)) 1 0) x5581) (<= x3610 1461501637330902918203684832716283019655932542975)) x2680)) (and (= x5625 (x5211 x2594)) (= x4427 (x4762 x2928)) (= (x2063 x3300) x760) (= (+ x4226 2) x1803) (>= x685 1) (= false x1890) (<= 1 x2382) (= 0 x3516) (<= 1 x2407) (= 128 x4754) (= x202 3957931183) (= x4101 128) (= false x2680) (= 0 x5246) (= x685 (x4762 x2928)) (= x1513 1) (>= x4059 1) (= 486791245 x150) (>= 127 x3193) (= false x1589) (<= x2382 253) (>= 127 x817) (<= x3193 127) (= x4226 (x4266 64 x760 11)) (= x3964 x760) (= (+ 1 x4927) x2316) (= 68 x2584) (= x1078 100) (= x4684 x4059) (= x2185 13123866003235860548192500634644069355060014211693331341089165407210616913920) (>= 127 x817) (<= 1 x3451) (= (+ 1 x4927) x4535) (= (x4762 x837) x3451) (= x1513 (x3493 x65)) (= (x4266 64 x2382 36) x3300) (= (x4762 x2928) x2407) (= x1008 x143) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x1629) (= x1002 0) (= false x1478) (= (x4266 64 x760 11) x1073) (= false x4939) (= x3654 (+ x2382 1)) (= x2594 (x4266 64 x4927 100)) (<= x4059 1461501637330902918203684832716283019655932542975) (= 0 x4773) (= x4927 (+ 1 x2382)) (= x1113 x3964) (= x5625 x2924) (<= 1 x4427) (= x1113 x1008) (= (x4266 64 x760 11) x65)))) x3813) (=> (and (not x5527) (= x5272 (= 4 x1233))) (and (=> x5272 x903) (=> (and (not x5272) (= (= x1233 5) x4034)) (and (=> (and (not x4034) (= x2702 (= 6 x1233))) (and (=> (and (= (= x1233 7) x4144) (not x2702)) (and (=> (and (and (= (= 8 x1233) x235) (or (and x235 (and (= x3723 false) (= 36 x3857) (>= x3610 1) (<= 1 x2929) (= x762 (x2063 x196)) (>= x2342 1) (= x2342 (x4762 x837)) (>= x2382 1) (= x5586 128) (= 1313998243 x4674) (= x196 (x4266 64 x2382 36)) (<= x232 127) (= x4684 x3610) (= x766 (+ x2382 1)) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x959) (= x762 x1706) (>= 1461501637330902918203684832716283019655932542975 x3610) (>= x762 100000) (= x414 (x2063 x196)) (<= x2382 253) (= false x1365) (= (+ x2382 1) x3862) (<= x232 127) (= x2929 (x4762 x2928)) (= x752 (+ 1 x2382)))) (and (= x766 x2382) (not x235)))) (not x4144)) x3502) (=> (and x4144 (and (= x5070 (x4266 64 x2382 2)) (= (x496 x2928) x2034) (<= x2572 1461501637330902918203684832716283019655932542975) (<= 1 x3205) (= x2567 x2572) (= x4066 2770781680) (= x5052 false) (>= x4809 1) (= (x4762 x837) x4809) (= x990 128) (= x3205 (x4762 x2928)) (= x2734 false) (= (> x2034 0) x1817) (= x3610 x4684) (= (x2323 x5070) x2572) (<= x3610 1461501637330902918203684832716283019655932542975) (>= x3610 1) (= (+ 1 x2382) x4103) (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x2744) (>= 127 x5216) (>= 127 x5216) (= x2108 (+ x2382 1)) (= x3380 36))) (and (=> (and (not x1817) (= (+ 1 x2382) x4971)) x3216) (=> (and (and (and (= x3014 x567) (= (x3194 x2572) x973) (<= x2538 4294967295) (= x5301 128) x2664 (= x4384 (x3194 x2928)) (= (- x5068 x2034) x1402) (= x1964 (x496 x2928)) (<= x3014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x340 (= 0 x2538)) x45 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5549 x2034)) (= x2664 (<= x4384 (x3309 x2928))) (>= 254 x1840) (= (x496 x2928) x5068) (= x5549 (x496 x2572)) (= x3014 (+ x571 x2034)) (<= 1 x4841) (= (= (x3309 x2572) x973) x45) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2034 x571)) (>= x1964 x2034) (<= 0 x3014) (= (x3330 x2572) x571)) (or (and (not x340) (and (>= x5018 1) (= (+ x2538 63) x2648) (<= x5018 4294967358) (= x5018 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2648)))) x340)) x1817) x3686))))) (=> (and x2702 (and (and (= x3852 false) (= x4334 x2249) (= (+ 1 x2382) x2010) (= x3760 (x4266 64 x2010 36)) (= (+ x484 1) x119) (= (x4266 64 x2755 36) x1063) (= x2383 (x4762 x837)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x957 x4099)) (= x1015 (+ 1 x2755)) (= (x496 x837) x957) (= x2252 x4185) (= x250 (x4266 64 x2382 36)) (= x3311 100) (>= 127 x3970) (= x717 486791245) (= x300 x5590) (>= x2249 0) (= x1169 false) (= x2252 x4600) (= x300 x5386) (= x2690 128) (= x5600 (+ 1 x2382)) (<= x4099 x3421) (= x142 (+ 1 x2755)) (= x4980 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= x999 (x2063 x3760)) (= (x2063 x5160) x4185) (= (x2063 x1063) x5386) (= (+ x484 1) x2755) (= x3007 (not (= x2928 x4684))) (= x2312 (x3900 x837)) (<= x2249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4762 x2928) x5063) (<= x2382 251) (= (- x2424 x4099) x3709) (= x2424 (x496 x4684)) (= (x4266 64 x484 36) x5160) (>= x5063 1) (= x999 x439) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2312 x4099)) (<= 1 x2383) (= (+ x4099 x2312) x2249) (= (x2063 x250) x4099) (= x439 x5090) (= (+ x2010 1) x484) (= x230 (ite x3007 1 0)) (>= x2382 1) (<= x3970 127) (= (x496 x4684) x3421) (= (+ x2010 1) x3998)) (or (and (and (>= 1461501637330902918203684832716283019655932542975 x3610) (= x3610 x4684) (<= 1 x3610)) x3007) (and (not x3007) (= 0 x230))))) x5355))) (=> (and x4034 (and (= (x3131 x3734) x5061) (= x59 (x2063 x3458)) (= (= x600 0) x5332) (= (+ 1 x3511) x1844) (= (x3482 x229) x2766) (= (x4395 (- x5092 (mod (ite (< x3254 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x4838) (= x600 (x2436 1 x2232)) (= x1948 (+ 1 x3511)) (<= x2766 18446744073709551615) (= (x4266 64 x3511 6) x3734) (= (ite (< 0 x5092) x3965 (x2436 127 x3965)) x3254) (= (x4266 64 x2382 36) x3458) (<= x5061 65535) (= x2380 (+ x2382 1)) (= x549 (+ 1 x1844)) (= x4632 (+ x1844 1)) (>= 252 x2382) (= x3511 (+ x2382 1)) (or (= x4838 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4838 1)) (= x3965 (div x2232 2)) (= (x4266 64 x1844 12) x229) (= x5092 (x2436 1 x2232)) (>= x2382 1))) (and (=> (and (and (= x4206 (* 32 (ite (not (= x3254 0)) 1 0))) (or (= x4206 0) (= 32 x4206)) (= x3941 (+ x4206 292)) (= x216 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2232))) x5332) x4997) (=> (and (and (= (x5009 32 103) x3473) (= (> x3254 0) x2966)) (not x5332)) (and (=> (and (not x2966) (= 0 x4454)) x1854) (=> x2966 x798))))))))))))) (=> (and x1012 (and (= (= 0 x2336) x205) (= x192 (+ 1 x2650)) (= (+ 1 x2382) x5610) (>= 253 x2382) (= x2829 (x3482 x1925)) (= x1602 (x2436 1 x2232)) (= (div x2232 2) x1083) (= (x4266 64 x2382 6) x4991) (<= x1597 65535) (= x1925 (x4266 64 x2650 12)) (= (+ 1 x2382) x2650) (= (x4395 (- x1602 (mod (ite (> 32 x489) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x4822) (= (+ 1 x2650) x5596) (= x489 (ite (< 0 x1602) x1083 (x2436 127 x1083))) (or (= x4822 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4822 1)) (= (x2436 1 x2232) x2336) (>= x2382 1) (= x1597 (x3131 x4991)) (>= 18446744073709551615 x2829))) (and (=> (and (not x205) (and (= (x5009 32 103) x2201) (= x5183 (< 0 x489)))) (and (=> x5183 x4616) (=> (and (not x5183) (= 0 x1696)) x3518))) (=> (and (and (= x4409 (* 32 (ite (not (= x489 0)) 1 0))) (= x3113 (+ x4409 292)) (= x1027 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2232)) (or (= 0 x4409) (= x4409 32))) x205) x2234))))) (=> (and x3902 (and (= (x3131 x1235) x3175) (= x4413 (x2323 x3500)) (<= 1 x4098) (= x472 3812630263) (= x2096 x1040) (= x4784 (+ 1 x4443)) (= (x4762 x837) x4098) (= (+ x2382 1) x5487) (= x4708 (+ 1 x4443)) (<= 1 x3610) (<= 1 x2382) (<= x3610 1461501637330902918203684832716283019655932542975) (>= 65535 x1232) (= x2405 x701) (<= 100000 x701) (= (x2323 x3500) x3425) (= x1763 x3425) (= x3270 false) (= x2096 (x2323 x2686)) (= (x4762 x2928) x1628) (<= x2096 1461501637330902918203684832716283019655932542975) (= x1232 x5373) (<= 1 x1628) (<= x4593 127) (= (x4266 64 x2382 2) x3500) (>= 127 x4593) (= x3181 (+ x5487 1)) (= (x2063 x3537) x2990) (= (x3131 x1235) x1232) (= (+ 1 x3181) x2854) (= x3610 x4684) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x1577) (= false x2162) (= 128 x2423) (= (+ 1 x5487) x154) (= x1235 (x4266 64 x5487 6)) (= x2501 (x2323 x2686)) (= x4551 132) (>= 250 x2382) (= (+ 1 x2382) x259) (>= 1461501637330902918203684832716283019655932542975 x3425) (= (x4266 64 x3181 2) x2686) (= (x4266 64 x4443 36) x3537) (= x4287 (+ x4443 1)) (= (x2063 x3537) x701) (= x4443 (+ x3181 1)))) x2287)))))))
(assert (x5553 x4169))
(assert (not (x4435 (x1228 x286 x1219 x5302 x3589 x4897 x4255))))
(assert (x5553 x3276))
(assert (x5553 x5544))
(assert (x5553 x959))
(assert (= x2885 (or x2801 x611)))
(assert (= 64 (x894 (x4266 64 x2928 1))))
(assert (x5553 x5107))
(assert (x5553 x3401))
(assert (=> (<= x1603 10000) (= (x5051 x1603) 0)))
(assert (= (x4160 (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273)) x2932))
(assert (= (x4266 64 x4836 11) (x5051 (x4266 64 x4836 11))))
(assert (=> (>= 10000 x1970) (= (x5051 x1970) 0)))
(assert (x5553 x5277))
(assert (x5553 x2768))
(assert (x5553 x3630))
(assert (x121 x5227))
(assert (= x4412 (and x1913 x5475)))
(assert (= x4170 (x3238 (x3789 x2443 x4170 x4860 x1625 x4474))))
(assert (= (or x66 x4012) x2555))
(assert (= x99 (x3238 (x269 x4005 x99 x921 x2321))))
(assert (x5553 x4754))
(assert (=> (<= x573 10000) (= (x5051 x573) 0)))
(assert (< (x4266 64 x1851 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1493 (=> (and (= x1500 (= 0 x3621)) (or (and x1500 (and (= (ite (= x3621 0) x198 0) x3866) (= x2992 x5147) (= x2438 x4440) (= x4647 x3110) (= x4666 x1751) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3543 x3866)) (= (x4314 x2928) x3543) (= x2768 x2327) (= x292 (x781 x786)) (= x4244 x1386) (= x838 x1519) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3231) (>= x3231 0) (= x1725 x3392) (= (- x292 x3866) x3908) (= x1721 x803) (= x3231 x2576) (= x4169 x4938) (= x4086 x4190) (= (+ x3543 x3866) x3231) (= x107 x3236) (= x1674 x3621) (= x1348 x158))) (and (and (= x1721 x803) (= x4190 x4086) (= x3236 x107) (= x158 x1348) (= x4169 x4938) (= x3110 x4647) (= x5147 x2992) (= x3621 x1674) (= x1751 x4666) (= x1725 x3392) (= x1519 x838) (= x4440 x2438) (= x2768 x2327) (= x1386 x4244)) (not x1500)))) x2253)))
(assert (not (x4435 (x4266 64 x3181 2))))
(assert (not (x4435 (x5009 32 x3799))))
(assert (= (x3238 (x4266 64 x4008 36)) x4008))
(assert (= x4210 (or x4471 x5634)))
(assert (= x168 (and (not x1344) x2583)))
(assert (x5553 x1346))
(assert (x5553 x3699))
(assert (x5553 x2144))
(assert (= x4919 (x3238 (x1228 x85 x4919 x629 x2130 x1420 x2994))))
(assert (=> (<= x5572 10000) (= 0 (x5051 x5572))))
(assert (x5553 x5490))
(assert (x5553 x3003))
(assert (x5553 x1723))
(assert (x5553 x5403))
(assert (= x5391 (or (and x1653 x353) (and x5472 x4223) (and x834 x3766))))
(assert (= x2509 (and x1740 (not x4902))))
(assert (x5553 x696))
(assert (x5553 x223))
(assert (not (x4435 (x1228 x2443 x1430 x5633 x4923 x1095 x31))))
(assert (x121 x4643))
(assert (= (x5051 (x269 x1966 x1684 x225 x724)) (x269 x1966 x1684 x225 x724)))
(assert (x5553 x5056))
(assert (= x3956 (and x2420 (not x4711))))
(assert (= (x5051 (x4266 64 x4480 12)) (x4266 64 x4480 12)))
(assert (=> (>= 10000 x3223) (= (x5051 x3223) 0)))
(assert (= (x4160 (x4266 64 x5024 36)) 36))
(assert (x5553 x4479))
(assert (< 10000 (x269 x530 x3934 x3802 x4017)))
(assert (x5553 x5274))
(assert (x5553 x128))
(assert (x5553 x5235))
(assert (not (x4435 (x5009 x1966 x4837))))
(assert (=> (<= x2326 10000) (= 0 (x5051 x2326))))
(assert (x5553 x707))
(assert (x5553 x4674))
(assert (x5553 x1242))
(assert (x5553 x1137))
(assert (= x3183 (x3238 (x269 x85 x3183 x729 x2972))))
(assert (x5553 x2069))
(assert (x5553 x5608))
(assert (x5553 x8))
(assert (x5553 x1368))
(assert (= x2550 (and x4848 (not x340))))
(assert (x5553 x1312))
(assert (x5553 x5121))
(assert (x5553 x4236))
(assert (x5553 x3579))
(assert (= (x40 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278)) x3301))
(assert (= (x5051 (+ x4768 1)) (x5051 x4768)))
(assert (=> (>= 10000 x3860) (= 0 (x5051 x3860))))
(assert (x5553 x3117))
(assert (= (x722 (x3789 x4283 x3013 x2354 x4853 x4379)) x4853))
(assert (= (x4160 (x485 x286 x63 x2537 x401 x1054 x2048 x4601)) x2537))
(assert (x5553 x3805))
(assert (= x860 (and x1877 x2680)))
(assert (x5553 x5))
(assert (x5553 x3283))
(assert (x5553 x2426))
(assert (= x1074 (and x1225 x3995)))
(assert (= (x5051 34591783479076665047274362116096262703299809091723987870014818727818681087008) 0))
(assert (x5553 x5572))
(assert (= x4399 (or x5135 x2969)))
(assert (x5553 x39))
(assert (x5553 x194))
(assert (= x1966 (x894 (x4266 x1966 x4625 x5022))))
(assert (x5553 x4037))
(assert (x5553 x4294))
(assert (= x55 (x3247 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598))))
(assert (x5553 x3307))
(assert (x5553 x646))
(assert (x5553 x3806))
(assert (= (x4160 (x3789 x1855 x4793 x5161 x2447 x1968)) x5161))
(assert (= x1254 (x722 (x269 x3525 x4566 x5026 x1254))))
(assert (x5553 x1246))
(assert (x5553 x1883))
(assert (x4435 2001815235))
(assert (= (x5051 (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253)) (x4960 x4005 x3571 x4065 x5038 x5108 x1036 x1065 x1253)))
(assert (x5553 x1553))
(assert (= x2177 (x3247 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384))))
(assert (not (x4435 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135))))
(assert (= (x4160 (x3789 x1004 x3815 x2736 x1603 x5356)) x2736))
(assert (= x3843 (=> (and (= x5631 (x1293 x4007)) (= (x2742 (+ 96 x4758)) x3117) (= (not (< 128 x1044)) x2094) (= x4007 (x2742 (+ 96 x465)))) (and x4994 x2094))))
(assert (x5553 x408))
(assert (x5553 x1625))
(assert (=> (>= 10000 x3026) (= 0 (x5051 x3026))))
(assert (x5553 x763))
(assert (= (x5051 (x4266 x5501 x5370 x5056)) (x4266 x5501 x5370 x5056)))
(assert (x1779 127))
(assert (= (x894 (x4266 64 x2829 (ite (= x3525 0) x3645 (ite (<= x3525 32) x799 (ite (<= x3525 64) x1267 (ite (<= x3525 96) x149 (ite (>= 128 x3525) x745 (ite (>= 160 x3525) x2422 (ite (>= 192 x3525) x615 (ite (<= x3525 224) x3015 x3278)))))))))) 64))
(assert (x5553 x975))
(assert (= (x5051 115792089237316195423570985008687907853269984665640564039457584007913129639902) 0))
(assert (= (x4266 64 x5131 6) (x5051 (x4266 64 x5131 6))))
(assert (> (x3789 x5613 x4818 x3523 x3488 x2921) 10000))
(assert (= (and x5049 (not x5535)) x1660))
(assert (x5553 x2285))
(assert (= (x5051 (x4266 x5530 x2942 x2837)) (x4266 x5530 x2942 x2837)))
(assert (= (x4160 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126)) x2479))
(assert (x5553 x3906))
(assert (=> (<= x588 10000) (= (x5051 x588) 0)))
(assert (x5553 x526))
(assert (x5553 x4639))
(assert (= (x5051 x4790) (x5051 (+ x4790 1))))
(assert (x5553 x264))
(assert (x5553 x4028))
(assert (=> (<= x5104 10000) (= (x5051 x5104) 0)))
(assert (x5553 x3934))
(assert (= (=> (= (+ x1984 x4619) x3984) x4641) x5016))
(assert (=> (<= x2928 10000) (= 0 (x5051 x2928))))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x5553 x4937))
(assert (< (x1228 x5501 x1182 x866 x2425 x4330 x4688) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x5208 10000) (= 0 (x5051 x5208))))
(assert (= (x5051 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092)))
(assert (= (and x5354 (not x3009)) x5294))
(assert (= (x5009 x4005 x2076) (x5051 (x5009 x4005 x2076))))
(assert (= (=> (and (= x3994 x3392) (= x158 x4213) (= x505 true) (= x2768 x5601) (= x2265 x107) (= (+ 1 x1851) x4666) (= x4440 x5248) (= x1721 x3602) (= x4190 x1252) (= x786 x4244) (= x4169 x4323) (= x1519 x470) (= 0 x3621) (= x3197 (+ x1851 1)) (= x4647 x1412) (= x5494 false) (= x2992 x80) (= x4746 2)) x1493) x1591))
(assert (= x5060 (=> (and (= x4619 (+ 32 x4322)) (= x5088 (ite (< 0 x4447) x1642 (x2436 127 x1642))) (= x4447 (x2436 1 x1492)) (= (= 0 x1720) x4678) (= (div x1492 2) x1642) (= (- x4322 132) x5364) (= (x4395 (- x4447 (mod (ite (> 32 x5088) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5103) (or (= x5103 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5103)) (= (x2436 1 x1492) x1720)) (and (=> (and x4678 (and (or (= 0 x285) (= x285 32)) (= (* (ite (not (= x5088 0)) 1 0) 32) x285) (= (+ x285 x4619) x3984) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1492) x4354))) x4641) (=> (and (and (= x2065 (> x5088 0)) (= x281 (x5009 32 104))) (not x4678)) (and (=> x2065 x3063) (=> (and (= x1984 0) (not x2065)) x5016)))))))
(assert (x1779 x3283))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4960 x2385 x2683 x3494 x2123 x5190 x4353 x3233 x325)))
(assert (= (and (not x5297) x5294) x4326))
(assert (x5553 x4969))
(assert (=> (>= 10000 x3340) (= 0 (x5051 x3340))))
(assert (x5553 x1407))
(assert (= (x3238 (x4266 x2358 x2552 x135)) x2552))
(assert (=> (<= x3589 10000) (= (x5051 x3589) 0)))
(assert (x5553 x1408))
(assert (< (x102 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x5408))
(assert (not (x4435 (x5009 x4005 x2076))))
(assert (x5553 x2649))
(assert (= x1509 (x722 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495))))
(assert (= (x40 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366)) x1816))
(assert (x5553 x3885))
(assert (x5553 x2559))
(assert (> (x1228 x1004 x3020 x2102 x388 x3489 x1127) 10000))
(assert (x5553 x3356))
(assert (= x480 (and x1690 x4749)))
(assert (x5553 x519))
(assert (= (x894 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142)) x5530))
(assert (=> (<= x2634 10000) (= (x5051 x2634) 0)))
(assert (=> (<= x5592 10000) (= (x5051 x5592) 0)))
(assert (not (x4435 (x485 x4283 x4002 x1666 x1016 x55 x1559 x5598))))
(assert (= x4843 (x722 (x269 x4283 x681 x4511 x4843))))
(assert (= (x3238 (x4266 64 x4927 100)) x4927))
(assert (= (x3247 (x1228 x3525 x3124 x2682 x4476 x5480 x2515)) x5480))
(assert (= (x5051 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024)) (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024)))
(assert (= (x3238 (x3789 x2385 x3894 x3556 x3996 x3839)) x3894))
(assert (= (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661) (x5051 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661))))
(assert (= (x3238 (x4266 64 x2781 5)) x2781))
(assert (x5553 x3833))
(assert (> (x4266 x2358 x2552 x135) 10000))
(assert (=> (<= x4474 10000) (= 0 (x5051 x4474))))
(assert (x5553 x1007))
(assert (x5553 x3197))
(assert (x5553 x990))
(assert (= (x3238 (x4266 64 x1680 36)) x1680))
(assert (= x4359 (and x15 x449)))
(assert (x111 x4742))
(assert (x5553 x5189))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x530 x3977 x4901 x1154 x2069 x4640 x3324)))
(assert (=> (<= x3301 10000) (= 0 (x5051 x3301))))
(assert (< (x4266 64 x5630 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2331 (not x2684)) x2779))
(assert (= (and x4189 (not x5399)) x846))
(assert (x5553 x5306))
(assert (< (x3789 x2385 x3894 x3556 x3996 x3839) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x516 (x4160 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135))))
(assert (x5553 x4976))
(assert (= (x894 (x4266 64 1 x3090)) 64))
(assert (= (x1514 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344)) x4344))
(assert (= x3951 (x3247 (x3789 x5501 x1456 x5366 x1537 x3951))))
(assert (= (x3238 (x5009 x286 x3203)) x3203))
(assert (= (x40 (x4960 x286 x674 x5154 x4796 x1969 x4464 x3536 x177)) x4464))
(assert (= x2368 (=> (and (= 0 x5628) (= x5365 true) (= x1596 x495) (= x873 false) (= x4059 x1394) (= x581 (+ 1 x4927)) (= x4930 x837) (= x2426 x994) (= x2930 x116) (= x2619 x2819) (= x1520 (+ x4927 1)) (= x3491 x800) (= x4736 x4874) (= 0 x4716) (= 2 x805) (= x2232 x1310) (= x578 x3501) (= x5171 x4037) (= x3610 x1563)) x5213)))
(assert (= (=> (and (= x4369 x624) (= x1361 x367) (= x4305 x5363) (= x1489 x3671) (= x676 x2027) (= x3354 x1843) (= x1346 x2706) (= x3990 x5292) (= x1129 x1426) (= x4404 x4571) (= x843 x594) (= x5181 x847) (= x3490 x3320)) x788) x5112))
(assert (= x4100 (or x168 x2111)))
(assert (x5553 x5320))
(assert (=> (>= 10000 x4479) (= (x5051 x4479) 0)))
(assert (= (x3238 (x4266 64 x4123 36)) x4123))
(assert (x5553 x3084))
(assert (x5553 x4332))
(assert (= x3598 (or x2631 x3748)))
(assert (x5553 x2310))
(assert (= (x5051 (x4266 64 x4248 (ite (= x1855 0) x3081 (ite (<= x1855 32) x322 (ite (>= 64 x1855) x5477 (ite (>= 96 x1855) x3025 (ite (>= 128 x1855) x2729 (ite (<= x1855 160) x4313 (ite (>= 192 x1855) x697 (ite (<= x1855 224) x2883 x3375)))))))))) (x4266 64 x4248 (ite (= 0 x1855) x3081 (ite (>= 32 x1855) x322 (ite (<= x1855 64) x5477 (ite (<= x1855 96) x3025 (ite (>= 128 x1855) x2729 (ite (<= x1855 160) x4313 (ite (<= x1855 192) x697 (ite (>= 224 x1855) x2883 x3375)))))))))))
(assert (= (x3238 (x4266 x5613 x3800 x4581)) x3800))
(assert (= (x3789 x693 x2627 x5180 x3492 x3026) (x5051 (x3789 x693 x2627 x5180 x3492 x3026))))
(assert (x4435 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (x5553 x5491))
(assert (x5553 x1752))
(assert (= (x5051 310283853) 0))
(assert (x5553 x190))
(assert (= x5017 (=> (and (>= x2285 1) (= false x3744) (not (< x4499 x1204)) (= x5323 (x4420 x2928)) (= 192 x4921) (= (x2742 (+ x3940 32)) x3413) (= x2598 x4337) (>= 18446744073709551615 x3352) (>= x510 420) (= x2940 (x3096 x4707)) (= x3887 (x4420 x4649)) (= x4422 (+ x1275 x5529)) (= (+ 4 x1146) x3868) (= x1204 (+ 32 x1300 x4595)) (<= x1146 18446744073709551615) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4422) (= (x2742 (+ x3249 x5165)) x4864) (= x4577 (+ x3273 1)) (= x1300 (x1814 x4595)) (<= x510 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x423 x2928) (= 0 x95) (= (x2742 (+ x2725 x1582)) x2828) (>= 18446744073709551615 x953) (= (+ 228 x3352) x108) (= x384 (x4762 x3819)) (<= 0 x4422) x1648 (= x2188 (x5114 x1997)) (= (x2742 (+ x747 32)) x3157) (<= x1300 18446744073709551615) (= x167 3313512704) (= x2167 (x4762 x4649)) (= x5157 (x2742 (+ x3827 31))) (>= x5323 x1275) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2270) x3249) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x5313) (>= x384 1) (= x5165 (x2742 (+ 32 x1852))) (= x4355 (x5114 x1997)) (not (> x4478 x4499)) (= (x2742 (+ x3168 x3157)) x1852) (= x4422 x1366) (= (x2742 (+ 31 x2750)) x3400) (= x1956 x5191) (<= x4499 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (= x3827 (x2217 196)) x1648) (>= x4499 420) (= (x4395 (- x4864 x2357)) x596) (= x1013 x4509) (= (x2324 x1292) x2285) (= (x4395 (- x2828 x431)) x510) (< x4978 x4499) (= (+ x3868 32 x953) x4478) (= x953 (x1814 x3868)) (= (ite (= 0 x2940) 10000 x2940) x3514) (= x4191 (x2742 (+ 32 x3469))) (<= x596 18446744073709551615) (= (x2324 x1292) x3827) (= x2781 x2330) (= x1146 (x4395 (- x1852 x2357))) (<= x4792 127) (= x2337 (x2742 (+ x2402 32))) (< (+ x5529 x1275) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2742 (+ 4 x431)) x2357) (= x3427 x1492) (= x1322 x5415) (= (x2742 (+ x4191 32)) x3940) (= x4978 (+ 31 x4595)) (= (x1814 196) x3352) (= x2061 (+ 31 x3868)) (= (x867 x4649) x5529) (= x1582 (x2742 (+ 32 x4864))) (<= x4792 127) (>= x2167 1) (= (x4420 x2928) x1118) (< x2061 x4499) (= (x2742 (+ x4277 32)) x3469) (= x3168 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5157)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1275 x3887)) (= x596 x767) (= (x2742 (+ x2188 31)) x2270) (= x4977 (- x1118 x1275)) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3400) x2725) (= (+ 4 x596) x4595) (not (< x4499 x108)) (= x4912 (x2742 (+ 32 x1997))) (= x1146 x4252) (= (x282 x2402) x2750) (= x510 x4499) (= x2603 false) (= x5148 x5071) (= x747 (x2742 (+ x2357 192))) (= x4277 (x2742 (+ 32 x2357))) (not (< x3514 x4355)) (= (x4266 64 x2781 5) x4707)) x1343)))
(assert (x5553 x1657))
(assert (x111 x3322))
(assert (x5553 x1177))
(assert (= (x722 (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126)) x4246))
(assert (< 10000 (x4266 x4283 x1477 x242)))
(assert (= x5093 (x3238 (x485 x5501 x5093 x2086 x2147 x2453 x2771 x736))))
(assert (x5553 x4693))
(assert (x5553 x3979))
(assert (= (x4160 (x4266 x530 x5126 x1849)) x1849))
(assert (=> (<= x1009 10000) (= 0 (x5051 x1009))))
(assert (x5553 x2080))
(assert (x5553 x3040))
(assert (x5553 x2854))
(assert (x5553 x4055))
(assert (x5553 x2714))
(assert (= x3102 (x4160 (x3789 x286 x2817 x3102 x4130 x3436))))
(assert (x5553 x3826))
(assert (= x1825 (and x2888 x5044)))
(assert (= (=> (and (= x2874 (x2742 (+ 96 x3374))) (= x5491 (x2742 (+ x465 96))) (= (x1738 x5491) x771) (= (not (< 128 x2089)) x476)) (and x476 x945)) x2596))
(assert (x5553 x762))
(assert (= (x3238 (x4266 x3525 x852 x5119)) x852))
(assert (= 10 (x4160 (x4266 64 x801 10))))
(assert (< 10000 (x4266 64 x2010 36)))
(assert (x5553 x2070))
(assert (x5553 x2357))
(assert (x5553 x31))
(assert (=> (>= 10000 x786) (= 0 (x5051 x786))))
(assert (x5553 x5249))
(assert (=> (<= x4480 10000) (= 0 (x5051 x4480))))
(assert (x5553 x1345))
(assert (x5553 x4770))
(assert (= (x722 (x1228 x3137 x3982 x1109 x209 x5082 x1165)) x209))
(assert (< (x5009 x3525 x53) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x894 (x4266 64 x4736 3)) 64))
(assert (=> (>= 10000 x1165) (= 0 (x5051 x1165))))
(assert (< 10000 (x4266 64 x1068 36)))
(assert (= x5584 (x3238 (x5009 x5613 x5584))))
(assert (x5553 x951))
(assert (not (x4435 (x4266 64 x2382 36))))
(assert (x111 x2842))
(assert (x5553 x3451))
(assert (x5553 x1162))
(assert (x5553 x1730))
(assert (x5553 x2911))
(assert (x5553 x4334))
(assert (=> (>= 10000 x4458) (= 0 (x5051 x4458))))
(assert (> (x4266 x693 x2462 x807) 10000))
(assert (x5553 x1314))
(assert (= (and x15 (not x449)) x1030))
(assert (= (x5051 (x4266 64 x4037 0)) (x4266 64 x4037 0)))
(assert (x5553 x2113))
(assert (x5553 x5337))
(assert (= (and x1474 x1825) x2563))
(assert (= (x5051 43931689107028929153831073962459296230956404255593708771276734084804920737792) 0))
(assert (x5553 x297))
(assert (x5553 x1858))
(assert (x5553 x3808))
(assert (x5553 x665))
(assert (= x4988 (x3238 (x4960 x4283 x4988 x516 x3264 x588 x4812 x3599 x2135))))
(assert (x5553 x2020))
(assert (= (and (not x1671) x2399) x3578))
(assert (=> (<= x2669 10000) (= (x5051 x2669) 0)))
(assert (= 64 (x894 (x4266 64 x760 11))))
(assert (x5553 x4324))
(assert (= x2130 (x722 (x1228 x85 x4919 x629 x2130 x1420 x2994))))
(assert (x5553 x4549))
(assert (= (x3247 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) x1827))
(assert (x5553 x452))
(assert (x5553 x5401))
(assert (x5553 x5511))
(assert (= (x4266 64 1 x1261) (x5051 (x4266 64 1 x1261))))
(assert (x5553 x1393))
(assert (x5553 x4352))
(assert (x5553 x4590))
(assert (> (x269 x2434 x3305 x5562 x1976) 10000))
(assert (x5553 x3705))
(assert (< (x4266 64 x4927 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1330))
(assert (= x2111 (and x2583 x1344)))
(assert (x5553 x915))
(assert (x5553 x2929))
(assert (= (x5051 (x269 x610 x5215 x1472 x297)) (x269 x610 x5215 x1472 x297)))
(assert (= x3532 (x3247 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445))))
(assert (x5553 x4486))
(assert (= x3551 (x722 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344))))
(assert (= x262 (and x1653 (not x353))))
(assert (x5553 x4653))
(assert (= x5613 (x894 (x269 x5613 x2030 x3675 x2352))))
(assert (= x1702 (and x3208 (not x3673))))
(assert (= (and x3162 x1921) x2710))
(assert (x5553 x3510))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366)))
(assert (x5553 x1677))
(assert (=> (>= 10000 x2130) (= 0 (x5051 x2130))))
(assert (x5553 x2522))
(assert (x5553 x4735))
(assert (x5553 x1219))
(assert (=> (>= 10000 x2462) (= (x5051 x2462) 0)))
(assert (= x5530 (x894 (x3789 x5530 x2140 x4262 x114 x2333))))
(assert (x5553 x1243))
(assert (x4435 1341992515))
(assert (x5553 x4701))
(assert (=> (>= 10000 x2935) (= (x5051 x2935) 0)))
(assert (= (x894 (x4266 64 x1707 7)) 64))
(assert (= (x3247 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142)) x964))
(assert (x1779 x1083))
(assert (=> (<= x5015 10000) (= 0 (x5051 x5015))))
(assert (= (x4160 (x4266 x1098 x4250 x4165)) x4165))
(assert (= x2921 (x3247 (x3789 x5613 x4818 x3523 x3488 x2921))))
(assert (x5553 x1362))
(assert (= x1989 (and x3299 x3291)))
(assert (< (x4960 x2443 x970 x3582 x2634 x3904 x4458 x46 x4157) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x4435 (x4266 64 x5456 100))))
(assert (= x2658 (and (not x2081) x499)))
(assert (=> (<= x3004 10000) (= 0 (x5051 x3004))))
(assert (= (or x695 x82) x4658))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5009 x286 x3203)))
(assert (x5553 x2079))
(assert (= (x5051 (x3789 x5613 x4818 x3523 x3488 x2921)) (x3789 x5613 x4818 x3523 x3488 x2921)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x1966 x4625 x5022)))
(assert (< (x3789 x5501 x1456 x5366 x1537 x3951) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3913))
(assert (x5553 x4474))
(assert (= x3307 (x4160 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x693 x2627 x5180 x3492 x3026)))
(assert (=> (<= x5587 10000) (= 0 (x5051 x5587))))
(assert (x5553 x4698))
(assert (= (x4266 64 x4736 5) (x5051 (x4266 64 x4736 5))))
(assert (=> (>= 10000 x1596) (= (x5051 x1596) 0)))
(assert (< 10000 (x4266 64 x5024 36)))
(assert (= x3815 (x3238 (x3789 x1004 x3815 x2736 x1603 x5356))))
(assert (x5553 x1486))
(assert (x5553 x687))
(assert (x5553 x1022))
(assert (= (and x3541 x243) x3706))
(assert (x5553 x2541))
(assert (x5553 x5405))
(assert (x5553 x2396))
(assert (=> (<= x388 10000) (= (x5051 x388) 0)))
(assert (= 64 (x894 (x4266 64 x1597 3))))
(assert (= (and x4493 (not x2255)) x136))
(assert (< (x4266 64 1 x1261) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x3414))
(assert (> (x1228 x2434 x1862 x1112 x541 x3398 x3066) 10000))
(assert (< 10000 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)))
(assert (x5553 x4049))
(assert (=> (<= x3126 10000) (= 0 (x5051 x3126))))
(assert (x5553 x4163))
(assert (x5553 x5198))
(assert (x5553 x1130))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 64 x2781 4)))
(assert (=> (>= 10000 x4255) (= 0 (x5051 x4255))))
(assert (= (and x3647 (not x1064)) x3567))
(assert (= x1098 (x894 (x269 x1098 x5454 x1584 x3052))))
(assert (=> (>= 10000 x33) (= (x5051 x33) 0)))
(assert (=> (<= x3904 10000) (= 0 (x5051 x3904))))
(assert (x5553 x996))
(assert (= x2978 (x722 (x1228 x5613 x5274 x3895 x2978 x2944 x1312))))
(assert (x5553 x1968))
(assert (> (x1228 x4283 x5337 x2668 x338 x5234 x3122) 10000))
(assert (not (x4435 (x269 x1855 x3349 x3751 x2410))))
(assert (=> (<= x2354 10000) (= (x5051 x2354) 0)))
(assert (x5553 x2802))
(assert (x5553 x202))
(assert (=> (<= x1214 10000) (= 0 (x5051 x1214))))
(assert (= x5131 (x3238 (x4266 64 x5131 6))))
(assert (x5553 x4057))
(assert (= 0 (x5051 486791245)))
(assert (= (and (not x205) x2806) x1517))
(assert (x5553 x2773))
(assert (not (x4435 (x1228 x3137 x3982 x1109 x209 x5082 x1165))))
(assert (= (=> (and (= (- x266 x4567) x2172) (= (x4395 (- x2235 x5123)) x4761) (= x3417 x672) (>= x672 0) (<= x672 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1374 x4567) (= (x2742 (+ 32 x1920)) x2235) (= x1374 (x5459 x2928)) (= 36 x4761) (>= x2660 1) (= x266 (x5459 x2928)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4567 x2182)) (= x2660 (x4762 x5342)) (< (+ x4567 x4963) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4963 (x2774 x5342)) (= x672 (+ x4963 x4567)) (= x2182 (x5459 x5342)) (= (x2742 (+ x5123 4)) x1920) (= (= x5342 x819) x3011)) (and (=> (and (not x3011) (and (= x2928 x1956) (= x5507 (x2621 x3729)) (<= 1 x5342) (= (+ 1 x1068) x5630) (<= x5443 127) (= x996 (+ x1068 1)) (= x5342 x4684) (>= 254 x1068) (= x2303 (= x5507 0)) (= x1741 false) (= 36 x1283) (= x2051 false) (= x4943 36180046632115354981904271164172418022085455641023445553456023893925156618240) (<= x5342 1461501637330902918203684832716283019655932542975) (>= x4728 1) (<= x5443 127) (= x1168 1341992515) (= x941 x2928) (= (x4762 x4684) x4728) (= (x4266 64 x1068 36) x3729))) (and (=> (and (not x2303) (= (= x5507 1) x5078)) (and (=> (and (not x5078) (= x1240 (= 2 x5507))) (and (=> (and (= (= 3 x5507) x4444) (not x1240)) (and (=> (and (not x4444) (= x2322 (= x5507 4))) (and (=> (and (not x2322) (= (= 5 x5507) x120)) (and (=> (and x120 (and (= (div x2598 2) x2823) (= (x3877 x1224) x4248) (>= 65535 x1707) (>= 252 x5630) (= x4294 (x2621 x1718)) (or (= x3893 1) (= x3893 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x4266 64 x5630 36) x1718) (= x868 (x4266 64 x5131 6)) (= (= x3740 0) x4467) (>= 18446744073709551615 x4248) (= (x5520 x868) x1707) (= (+ 1 x5630) x5131) (= (+ x2536 1) x5649) (= x2751 (+ 1 x2536)) (= (x4266 64 x2536 12) x1224) (= (x2436 1 x2598) x4633) (= x797 (+ 1 x5630)) (>= x5630 1) (= x3740 (x2436 1 x2598)) (= (x4395 (- x4633 (mod (ite (> 32 x4209) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3893) (= x334 (+ x5131 1)) (= x2536 (+ x5131 1)) (= (ite (> x4633 0) x2823 (x2436 127 x2823)) x4209))) (and (=> (and (not x4467) (and (= (x5009 32 103) x386) (= (< 0 x4209) x3673))) (and (=> (and (= 0 x2985) (not x3673)) x4306) (=> x3673 x4955))) (=> (and x4467 (and (= x3831 (* 32 (ite (not (= 0 x4209)) 1 0))) (= x4202 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2598)) (= x2502 (+ x3831 292)) (or (= 0 x3831) (= x3831 32)))) x885))) (=> (and (= x5247 (= 6 x5507)) (not x120)) (and (=> (and (and (or (and (not x4834) (= x2219 0)) (and x4834 (and (>= x2798 1) (<= x2798 1461501637330902918203684832716283019655932542975) (= x2798 x4684)))) (and (= x3006 (+ x3273 1)) (= 128 x2971) (= x4010 x4430) (= x5653 (x2621 x5548)) (= (x4762 x1956) x2039) (>= 127 x3388) (= x4430 x893) (= x305 (+ x5024 1)) (= false x3387) (= x1159 (x4762 x2928)) (= x2916 (x3390 x4684)) (<= x3388 127) (= x137 (+ 1 x3406)) (>= 251 x5630) (= (x3390 x1956) x3806) (= x4347 x2128) (= x4834 (not (= x2928 x4684))) (= x4332 x291) (= x3273 (+ x5024 1)) (= x5653 x1657) (= (+ x1610 x2652) x2128) (= (ite x4834 1 0) x2219) (= (+ 1 x5630) x3406) (= (x2621 x1770) x2652) (= (x3390 x4684) x1845) (= x291 x3889) (= x1610 (x4219 x1956)) (= (+ 1 x5630) x75) (= (x2621 x1189) x3889) (= x2338 486791245) (= (x4266 64 x3406 36) x5548) (>= x2916 x2652) (= (+ 1 x3406) x5024) (= x4828 13123866003235860548192500634644069355060014211693331341089165407210616913920) (<= 1 x2039) (< (+ x2652 x1610) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x193 (+ x3273 1)) (= x2694 false) (<= x2128 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2621 x2124) x4010) (= x2124 (x4266 64 x5024 36)) (= x2862 (- x1845 x2652)) (= x5188 x1657) (< (+ x2652 x3806) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x5630) (<= 1 x1159) (>= x2128 0) (= x3242 100) (= x1770 (x4266 64 x5630 36)) (= (x4266 64 x3273 36) x1189))) x5247) x1151) (=> (and (= (= 7 x5507) x381) (not x5247)) (and (=> (and (and (or (and (and (= (+ 1 x5630) x995) (>= 254 x5630) (= false x1050) (= x3829 128) (= x2617 x4905) (>= x2617 100000) (= x5284 (+ 1 x5630)) (= 36 x2114) (= (x4762 x1956) x1415) (>= x5630 1) (<= x2798 1461501637330902918203684832716283019655932542975) (= x3674 35425322552009646506518338594398286811668114190755561836384294568426616127488) (= x5255 1313998243) (= x4684 x2798) (= (x4762 x2928) x4654) (>= x4654 1) (>= 127 x2451) (= false x1678) (= (x4266 64 x5630 36) x3708) (>= x2798 1) (= x2824 (+ 1 x5630)) (<= x2451 127) (<= 1 x1415) (= (x2621 x3708) x559) (= x1611 x559) (= (x2621 x3708) x2617)) x1743) (and (not x1743) (and (= x5071 x1611) (= x5284 x5630)))) (= x1743 (= 8 x5507))) (not x381)) x3832) (=> (and (and (= x5572 x2510) (= x2798 x4684) (= x2914 74700126319118050543342327103397598470879858733489597287354029460387927162880) (= (x4266 64 x5630 2) x5102) (<= 1 x2798) (<= x5572 1461501637330902918203684832716283019655932542975) (= (x4762 x1956) x608) (= 128 x3859) (<= x1897 127) (= x4569 (x3390 x2928)) (= x855 (+ x5630 1)) (<= 1 x608) (<= x1897 127) (= false x5066) (= false x43) (= (< 0 x4569) x4711) (<= 1 x5630) (>= 254 x5630) (= x156 (+ x5630 1)) (= (x17 x5102) x5572) (= x4254 (x4762 x2928)) (>= 1461501637330902918203684832716283019655932542975 x2798) (= x3293 2770781680) (= 36 x36) (<= 1 x4254)) x381) (and (=> (and (and (= x2598 x5470) (= x3192 (+ 1 x5630)) (= x4509 x3356) (= x84 x1492) (= x5415 x1479) (= x1956 x5163)) (not x4711)) x1735) (=> (and (and (or (and (and (= x3666 (+ x2079 63)) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3666) x5331) (>= x5331 1) (<= x5331 4294967358)) (not x3515)) x3515) (and (= x3464 (- x3156 x4569)) (= x3515 (= 0 x2079)) (<= 1 x4877) (>= x584 0) (< (+ x3104 x4569) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4881 (x3390 x2928)) (= (= (x1874 x5572) x50) x5207) (= x3204 x584) (= (x3198 x2928) x2989) x5207 (= (x3390 x2928) x3156) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4569 x2982)) x2302 (= 128 x4915) (<= x2079 4294967295) (= (x2359 x5572) x3104) (= x2982 (x3390 x5572)) (= x584 (+ x4569 x3104)) (= x2302 (>= (x1874 x2928) x2989)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x584) (= x50 (x3198 x5572)) (>= x4881 x4569))) x4711) x3085))))))))) (=> x2322 x5476))) (=> (and x4444 (and (or (and (not x1344) (= (ite x1344 1 0) x5240)) (and x1344 (and (= x5240 (ite (not (= x2928 x2798)) 1 0)) (>= 1461501637330902918203684832716283019655932542975 x2798)))) (and (= x570 false) (= 100 x3630) (= x4684 x5342) (<= 1 x5342) (= x4118 x1488) (= 0 x260) (= (x1612 x2822) x1692) (>= x4766 1) (= x4836 x2230) (= x3801 (x4266 64 x4836 11)) (= x1344 false) (= (+ x3801 2) x4383) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x560) (= 128 x948) (= x4460 x4510) (= (+ 1 x1851) x100) (= (x4266 64 x4836 11) x2822) (= x4766 (x4762 x1956)) (= x5225 (x4762 x2928)) (= x255 false) (= x4961 (+ x5630 1)) (= (x4266 64 x5630 36) x4694) (<= 1 x5630) (= x1542 0) (>= 1461501637330902918203684832716283019655932542975 x5342) (= x436 x2230) (= (x4762 x2928) x4801) (= (x1701 x1329) x1488) (= x436 x4460) (= (x4266 64 x4836 11) x858) (>= 127 x5622) (= false x1636) (= x4338 0) (= x4894 3957931183) (= 1 x1692) (= 486791245 x2138) (>= 127 x2902) (= (+ 1 x5630) x1851) (>= 127 x2902) (<= x5622 127) (= 0 x3570) (= 68 x4735) (= (x2621 x4694) x4836) (= x2091 128) (= x1329 (x4266 64 x1851 100)) (= x5547 (+ 1 x1851)) (= x3038 13123866003235860548192500634644069355060014211693331341089165407210616913920) (>= x5225 1) (<= 1 x4801) (= x750 (x4762 x2928)) (<= 1 x750) (= false x2547) (>= 253 x5630)))) x543))) (=> (and (and (= x4907 (x2436 1 x2598)) (= x5030 (x4266 64 x1515 12)) (= (+ x5630 1) x1515) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x763) (= x763 1)) (= x4586 (+ x5630 1)) (= (+ x1515 1) x4699) (= (x3877 x5030) x5198) (= x1794 (ite (< 0 x2651) x5121 (x2436 127 x5121))) (<= x1296 65535) (= (x2436 1 x2598) x2651) (= x2428 (x4266 64 x5630 6)) (= x1296 (x5520 x2428)) (<= 1 x5630) (= (+ 1 x1515) x3227) (= (x4395 (- x2651 (mod (ite (> 32 x1794) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x763) (= x4329 (= x4907 0)) (>= 253 x5630) (<= x5198 18446744073709551615) (= x5121 (div x2598 2))) x1240) (and (=> (and (and (= x1671 (< 0 x1794)) (= (x5009 32 103) x2993)) (not x4329)) (and (=> (and (not x1671) (= x993 0)) x643) (=> x1671 x2746))) (=> (and (and (= x2474 (+ 292 x4795)) (= (* (ite (not (= x1794 0)) 1 0) 32) x4795) (= x5481 (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2598)) (or (= 0 x4795) (= 32 x4795))) x4329) x5151))))) (=> (and (and (= (x4395 (- x599 (mod (ite (> 32 x985) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x839) (= x599 (x2436 1 x2598)) (<= 1 x5630) (>= 253 x5630) (= (= 0 x3286) x2732) (= x4920 (x3877 x3907)) (<= x4920 18446744073709551615) (= x985 (ite (> x599 0) x2842 (x2436 127 x2842))) (= (+ x5630 1) x4480) (= (x4266 64 x4480 12) x3907) (= (x5520 x1144) x3702) (= x3656 (+ 1 x4480)) (= x3286 (x2436 1 x2598)) (>= 65535 x3702) (= (div x2598 2) x2842) (= (+ x4480 1) x5048) (or (= 1 x839) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x839)) (= x1144 (x4266 64 x5630 6)) (= x4534 (+ x5630 1))) x5078) (and (=> (and (and (= x4322 (+ x2476 292)) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2598) x299) (= x2476 (* 32 (ite (not (= 0 x985)) 1 0))) (or (= x2476 0) (= x2476 32))) x2732) x5060) (=> (and (not x2732) (and (= x3499 (< 0 x985)) (= x1796 (x5009 32 103)))) (and (=> (and (= x518 0) (not x3499)) x4293) (=> x3499 x5624))))))) (=> (and (and (= false x4498) (= 132 x5137) (= x4684 x2798) (= x4509 x1361) (= x1732 (+ x5630 1)) (= (x4266 64 x3861 36) x5288) (= (x2621 x5288) x1899) (<= x2798 1461501637330902918203684832716283019655932542975) (>= x4152 1) (<= x5630 251) (= (+ 1 x929) x3861) (= x962 x2493) (= (x17 x4284) x2315) (= x2558 x3490) (= (+ 1 x3861) x4481) (<= x2073 65535) (= x1956 x4571) (= x1843 x87) (= x5415 x624) (>= 1461501637330902918203684832716283019655932542975 x2379) (= 3812630263 x3454) (= x1466 (x17 x3531)) (= (x4762 x1956) x1126) (= x1466 x2019) (= (x5520 x3769) x2558) (= (x4762 x2928) x4152) (= x2598 x3990) (= x2379 x4870) (= (+ 1 x5232) x1091) (>= 127 x3731) (= (+ x5630 1) x5232) (= x4305 x2315) (= (x4266 64 x929 2) x4284) (= x3769 (x4266 64 x5232 6)) (= x843 x1899) (= x4220 x2073) (<= 1 x5630) (= (+ x3861 1) x1489) (= false x5175) (>= 1461501637330902918203684832716283019655932542975 x1466) (>= x962 100000) (= x3498 x2027) (= x2073 (x5520 x3769)) (= x1129 x2798) (<= 1 x1126) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x2012) (= x2543 (+ 1 x3861)) (= 128 x539) (<= x3731 127) (= (x2621 x5288) x962) (= (x4266 64 x5630 2) x3531) (= (x17 x4284) x2379) (>= x2798 1) (= (+ x5232 1) x929) (= x991 x1346) (= x1492 x847) (= (x17 x3531) x991) (= x5460 (+ x929 1))) x2303) x788))) (=> (and x3011 (and (= x2781 x4736) (>= 127 x1400) (= x1068 x1680) (= x2834 false) (= x4649 x495) (= (x5375 x3863) x5020) (= 36 x4439) (= x1998 (x2742 (+ x4567 x5020))) (= x389 36180046632115354981904271164172418022085455641023445553456023893925156618240) (= x87 x2619) (= x2928 x1416) (= x3415 1341992515) (>= 127 x1400) (= x4509 x4037) (= x3610 x2798) (not (< x1998 x5020)) (= x1956 x837) (= x800 x3498) (= x2232 x2598) (= x3863 (x4266 64 x2928 1)) (= x578 x1492) (= x5342 x4059) (= x1967 false) (= (x4762 x819) x2743) (= x2930 x5071) (>= x2743 1) (= x994 x5415))) x3739))) x1689))
(assert (x5553 x355))
(assert (x5553 x2624))
(assert (x5553 x2304))
(assert (x4435 115792089237316195423570985008687907853269984665640564039457584007913129639773))
(assert (x5553 x2970))
(assert (=> (>= 10000 x4130) (= (x5051 x4130) 0)))
(assert (= x1483 (and (not x363) x2936)))
(assert (= x4920 (x3238 (x4266 64 x4920 (ite (= 0 x2443) x2605 (ite (>= 32 x2443) x2853 (ite (<= x2443 64) x1644 (ite (>= 96 x2443) x3251 (ite (<= x2443 128) x155 (ite (<= x2443 160) x2570 (ite (>= 192 x2443) x1592 (ite (<= x2443 224) x5315 x3053))))))))))))
(assert (x5553 x2012))
(assert (x5553 x2669))
(assert (x5553 x2008))
(assert (x5553 x3857))
(assert (=> (>= 10000 x4250) (= 0 (x5051 x4250))))
(assert (=> (>= 10000 x1625) (= (x5051 x1625) 0)))
(assert (=> (>= 10000 x5371) (= (x5051 x5371) 0)))
(assert (x5553 x1855))
(assert (= (and x3963 x5432) x497))
(assert (x5553 x2899))
(assert (x5553 x2828))
(assert (=> (>= 10000 x5056) (= 0 (x5051 x5056))))
(assert (x5553 x72))
(assert (< 10000 (x4266 64 x2781 5)))
(assert (x5553 x2126))
(assert (= x1210 (=> (= x180 x707) x2473)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4266 x4283 x1477 x242)))
(assert (= x2358 (x894 (x269 x2358 x207 x1529 x4721))))
(assert (=> (>= 10000 x2530) (= (x5051 x2530) 0)))
(assert (x5553 x76))
(assert (x5553 x1802))
(assert (x5553 x3439))
(assert (= x3931 (and x5079 (not x612))))
(assert (x121 x3765))
(assert (x5553 x2129))
(assert (= (and x4612 x5618) x2241))
(assert (x5553 x410))
(assert (= x3488 (x722 (x3789 x5613 x4818 x3523 x3488 x2921))))
(assert (< 10000 (x1228 x2358 x2475 x383 x2464 x3210 x5595)))
(assert (x5553 x5039))
(assert (x5553 x541))
(assert (=> (<= x2537 10000) (= 0 (x5051 x2537))))
(assert (x5553 x4259))
(assert (x5553 x3398))
(assert (x5553 x3761))
(assert (= (x5051 (x4266 64 1 x4659)) (x4266 64 1 x4659)))
(assert (x5553 x199))
(assert (> (x5009 x2385 x3860) 10000))
(assert (x5553 x2212))
(assert (x1779 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x5553 x5103))
(assert (= (x269 x286 x3325 x3791 x1325) (x5051 (x269 x286 x3325 x3791 x1325))))
(assert (not (x4435 (x4266 64 x2382 2))))
(assert (=> (<= x3398 10000) (= (x5051 x3398) 0)))
(assert (> (x4266 64 x5232 6) 10000))
(assert (x1779 x3666))
(assert (=> (<= x1384 10000) (= (x5051 x1384) 0)))
(assert (= x73 (and x2783 (not x3622))))
(assert (x5553 x2363))
(assert (= x945 (=> (and (= (x4395 (- x2212 x5325)) x1909) (= (x2436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4667) x1621) (= x1333 (x2742 (+ x2212 32))) (= (x2742 (+ x1621 x3374)) x2212) (= x4610 (x2742 (+ 32 x1654))) (= (x2742 (+ 32 x301)) x1654) (= (x2742 (+ x2089 31)) x4667) (= (x2742 (+ x2089 x3374)) x4506) (= x4987 (x1524 x5310)) (= x3416 (< 0 x4987))) (and (=> (and x3416 (and (= (> x4987 32) x4787) (= (x4425 x1470) x2416))) (and (=> (not x4787) x5571) (=> (and x4787 (and (= (x2742 (+ 32 x1333)) x2215) (= (x2742 (+ 32 x1470)) x2153) (= x5226 (> x4987 64)) (= (x2868 x2153) x1685))) (and (=> (not x5226) x5571) (=> (and x5226 (and (= (x2742 (+ x1333 64)) x5417) (= x320 (> x4987 96)) (= x4776 (x1200 x3867)) (= (x2742 (+ 64 x1470)) x3867))) (and (=> (not x320) x5571) (=> x320 x619))))))) (=> (not x3416) x5571)))))
(assert (x5553 x109))
(assert (x5553 x3529))
(assert (x5553 x1647))
(assert (= x1970 (x722 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156))))
(assert (< (x4266 64 x1464 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x2952))
(assert (> (x4266 64 x2766 (ite (= x610 0) x1688 (ite (>= 32 x610) x4021 (ite (<= x610 64) x1462 (ite (>= 96 x610) x3109 (ite (>= 128 x610) x1028 (ite (>= 160 x610) x1356 (ite (>= 192 x610) x2042 (ite (>= 224 x610) x4656 x2961))))))))) 10000))
(assert (< 10000 (x4266 64 x4248 (ite (= x4005 0) x1220 (ite (<= x4005 32) x4371 (ite (<= x4005 64) x892 (ite (<= x4005 96) x4094 (ite (>= 128 x4005) x3271 (ite (<= x4005 160) x3619 (ite (>= 192 x4005) x311 (ite (>= 224 x4005) x4546 x437)))))))))))
(assert (x5553 x5625))
(assert (not (x4435 (x1228 x2385 x4180 x4698 x1668 x33 x3108))))
(assert (x5553 x4248))
(assert (= x5473 (x5346 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473))))
(assert (> (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366) 10000))
(assert (x5553 x2612))
(assert (x5553 x4151))
(assert (x5553 x1180))
(assert (= (x3238 (x4960 x530 x5132 x4606 x897 x3532 x323 x473 x3445)) x5132))
(assert (x5553 x3311))
(assert (= x4091 (and x1805 x4178)))
(assert (= x5241 (or x586 x1276)))
(assert (= (and x1076 x4954) x1011))
(assert (=> (>= 10000 x2156) (= (x5051 x2156) 0)))
(assert (not (x4435 (x4266 64 x2781 4))))
(assert (=> (>= 10000 x3305) (= 0 (x5051 x3305))))
(assert (= (x894 (x1228 x2443 x1430 x5633 x4923 x1095 x31)) x2443))
(assert (= (x5051 (x4266 64 x2650 12)) (x4266 64 x2650 12)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1228 x5530 x671 x845 x2168 x5004 x498)))
(assert (not (x4435 (x5009 x1004 x347))))
(assert (= x2056 (=> (and (= (x2742 (+ 96 x296)) x4181) (= (x502 x4181) x427) (= x3797 (not (< 128 x4286))) (= x5544 (x2742 (+ x5362 96)))) (and x134 x3797))))
(assert (= (and x344 x3938) x94))
(assert (x5553 x1280))
(assert (x5553 x5628))
(assert (x5553 x1863))
(assert (x5553 x4840))
(assert (x5553 x1110))
(assert (=> (<= x63 10000) (= 0 (x5051 x63))))
(assert (=> (>= 10000 x3876) (= (x5051 x3876) 0)))
(assert (x5553 x1386))
(assert (x5553 x3740))
(assert (x5553 x4465))
(assert (< (x4266 64 x4248 (ite (= 0 x4005) x1220 (ite (>= 32 x4005) x4371 (ite (<= x4005 64) x892 (ite (<= x4005 96) x4094 (ite (>= 128 x4005) x3271 (ite (<= x4005 160) x3619 (ite (<= x4005 192) x311 (ite (>= 224 x4005) x4546 x437))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x4860 10000) (= 0 (x5051 x4860))))
(assert (not (x4435 (x4266 64 x3406 36))))
(assert (= x2882 (x40 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384))))
(assert (= (and x3479 x3902) x3031))
(assert (x5553 x2749))
(assert (x5553 x4847))
(assert (x5553 x489))
(assert (= (and x409 x2600) x3629))
(assert (x5553 x2196))
(assert (x5553 x473))
(assert (x5553 x5048))
(assert (= (x4160 (x269 x2443 x3830 x1931 x5230)) x1931))
(assert (= x4358 (and x759 x2761)))
(assert (x5553 x80))
(assert (=> (<= x3523 10000) (= 0 (x5051 x3523))))
(assert (= (x1228 x2443 x1430 x5633 x4923 x1095 x31) (x5051 (x1228 x2443 x1430 x5633 x4923 x1095 x31))))
(assert (= (or x1847 x3726 x521 x1449 x14) x3915))
(assert (x5553 x232))
(assert (= (x3238 (x3789 x5613 x4818 x3523 x3488 x2921)) x4818))
(assert (x5553 x3945))
(assert (= (x5051 (x4266 64 x3022 10)) (x4266 64 x3022 10)))
(assert (= (and x1139 x1457) x5214))
(assert (x5553 x748))
(assert (= x1907 (and x3670 x16)))
(assert (=> (<= x1282 10000) (= (x5051 x1282) 0)))
(assert (x5553 x4625))
(assert (=> (>= 10000 x2177) (= (x5051 x2177) 0)))
(assert (=> (<= x552 10000) (= 0 (x5051 x552))))
(assert (< 10000 (x5009 x1004 x347)))
(assert (=> (<= x2572 10000) (= (x5051 x2572) 0)))
(assert (x5553 x158))
(assert (< 10000 (x4266 64 x4920 (ite (= 0 x2443) x2605 (ite (<= x2443 32) x2853 (ite (<= x2443 64) x1644 (ite (>= 96 x2443) x3251 (ite (<= x2443 128) x155 (ite (<= x2443 160) x2570 (ite (>= 192 x2443) x1592 (ite (>= 224 x2443) x5315 x3053)))))))))))
(assert (= (not (and (< x3399 x101) (= (+ 32 x3399) x284) (= (+ 160 x1298) x3399) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x723) (<= x1808 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x3916 x1296) (= (+ 4 x4192) x4166) (= x5316 (= (x1687 132) x1794)) (= x181 46442213778836376901753710468615024683576072693327014300388496345503314739200) (<= x4873 18446744073709551615) (= x57 1722637450) (= x1379 164) (= (* 32 x992) x1298) (not (> x1184 x1808)) (= x5198 x1142) (= (x4395 (- x1505 128)) x577) (= (x1872 132) x4873) (>= x1808 196) (= x960 (x4762 x1956)) (= x233 (* x779 32)) (= (x5531 x3399) x723) (= x3141 (x4762 x2928)) (= x2208 (+ x4166 32)) (= (+ x2208 x3743) x1184) (= false x1924) (= (+ x4873 164) x2585) (not (< x1808 x2585)) (= x992 (div (+ x4873 31) 32)) (<= 196 x577) (<= 1 x960) (= x3690 (+ x4166 31)) (= (x1872 x4166) x3743) (= x1337 x4192) (= (x2722 x284) x2836) x5316 (= (x4266 64 x2836 10) x4267) (= x3652 128) (>= 127 x3609) (= x577 x1808) (<= 32 x723) (>= x3141 1) (= 128 x1618) (< x3690 x1808) (= false x2757) (<= x577 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x4684 x2928) (= x779 (div (+ 31 x3743) 32)) (>= 127 x3609) (<= x3743 18446744073709551615) (= x101 (+ x233 32 x3399)) (= 128 x1368) (= (+ x3743 x284) x355))) x2125))
(assert (x5553 x577))
(assert (=> (<= x2542 10000) (= (x5051 x2542) 0)))
(assert (< (x4266 64 x5061 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x4387))
(assert (=> (>= 10000 x4262) (= 0 (x5051 x4262))))
(assert (x5553 x5203))
(assert (x5553 x2405))
(assert (= (or x1222 x946) x5425))
(assert (< 10000 (x3789 x286 x2817 x3102 x4130 x3436)))
(assert (= x212 (x722 (x4960 x5530 x3084 x3854 x212 x964 x5334 x1335 x5142))))
(assert (x4435 34591783479076665047274362116096262703299809091723987870014818727818681087008))
(assert (= (x894 (x4266 64 x3702 7)) 64))
(assert (= x3020 (x3238 (x1228 x1004 x3020 x2102 x388 x3489 x1127))))
(assert (x5553 x5411))
(assert (not (x4435 (x5009 x693 x5222))))
(assert (x5553 x2588))
(assert (= x5420 (and x3915 (not x2602))))
(assert (x5553 x4098))
(assert (= x4662 x118))
(assert (x5553 x3985))
(assert (x5553 x559))
(assert (=> (<= x4601 10000) (= (x5051 x4601) 0)))
(assert (x5553 x3742))
(assert (= (x3247 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677)) x2466))
(assert (x5553 x2237))
(assert (= x445 (and x2827 (not x3089))))
(assert (x5553 x4020))
(assert (not (x4435 (x1228 x610 x2480 x264 x3876 x2348 x1299))))
(assert (< 10000 (x4266 64 x5630 6)))
(assert (=> (<= x3064 10000) (= 0 (x5051 x3064))))
(assert (x5553 x399))
(assert (= (x4160 (x269 x85 x3183 x729 x2972)) x729))
(assert (=> (>= 10000 x2000) (= (x5051 x2000) 0)))
(assert (x5553 x1899))
(assert (x5553 x470))
(assert (x5553 x4206))
(assert (= (x894 (x5009 x5613 x5584)) x5613))
(assert (x5553 x1194))
(assert (not (x4435 (x4266 64 x4248 (ite (= 0 x1855) x3081 (ite (<= x1855 32) x322 (ite (<= x1855 64) x5477 (ite (>= 96 x1855) x3025 (ite (<= x1855 128) x2729 (ite (>= 160 x1855) x4313 (ite (>= 192 x1855) x697 (ite (>= 224 x1855) x2883 x3375))))))))))))
(assert (x5553 x3763))
(assert (= (x4266 64 x5487 6) (x5051 (x4266 64 x5487 6))))
(assert (= (and x5635 x4714) x3644))
(assert (x5553 x599))
(assert (= x1676 (x3238 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156))))
(assert (= x1214 (x3238 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278))))
(assert (x5553 x2108))
(assert (< 10000 (x4266 64 x1707 7)))
(assert (= (x894 (x4266 64 x5630 36)) 64))
(assert (x5553 x5137))
(assert (x5553 x583))
(assert (x5553 x4419))
(assert (x5553 x2542))
(assert (not (x4435 (x4266 x3137 x1784 x1436))))
(assert (=> (>= 10000 x4836) (= 0 (x5051 x4836))))
(assert (x5553 x3397))
(assert (x5553 x5468))
(assert (not (x4435 (x4266 64 x1851 100))))
(assert (=> (>= 10000 x1931) (= (x5051 x1931) 0)))
(assert (= (and (not x5475) x1913) x3817))
(assert (x5553 x1656))
(assert (x5553 x3661))
(assert (x5553 x4047))
(assert (x5553 x3536))
(assert (not (x4435 (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024))))
(assert (> (x4266 64 x2781 4) 10000))
(assert (x5553 x3272))
(assert (x5553 x3548))
(assert (not (x4435 (x4266 64 x2536 12))))
(assert (= x2268 (=> (and (= x2025 (x2014 x369)) (= x3279 (not (< 612 x3276)))) (and x3279 x1686))))
(assert (x5553 x2179))
(assert (x5553 x531))
(assert (x5553 x2504))
(assert (= (x3247 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661)) x772))
(assert (not (x4435 (x1228 x1855 x2935 x2740 x2157 x4851 x3650))))
(assert (x5553 x2725))
(assert (x5553 x4828))
(assert (x5553 x805))
(assert (x5553 x3625))
(assert (x5553 x3621))
(assert (x5553 x5507))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3789 x1098 x2878 x5015 x4295 x4143)))
(assert (x5553 x5587))
(assert (x5553 x701))
(assert (= x479 (or x3932 x1281)))
(assert (= x1968 (x3247 (x3789 x1855 x4793 x5161 x2447 x1968))))
(assert (x5553 x2330))
(assert (x5553 x1680))
(assert (=> (>= 10000 x4179) (= 0 (x5051 x4179))))
(assert (= x2382 (x3238 (x4266 64 x2382 36))))
(assert (x5553 x284))
(assert (x5553 x4510))
(assert (x5553 x1979))
(assert (x5553 x1704))
(assert (x5553 x3858))
(assert (= x4724 (and x1633 x1026)))
(assert (= (x3238 (x4960 x3137 x5023 x590 x1557 x3340 x1772 x1939 x1787)) x5023))
(assert (x5553 x2576))
(assert (= (x894 (x485 x3137 x2000 x2977 x4483 x4858 x2008 x3947)) x3137))
(assert (x5553 x994))
(assert (x5553 x2182))
(assert (= (x5009 x3525 x53) (x5051 (x5009 x3525 x53))))
(assert (x5553 x4801))
(assert (=> (>= 10000 x2048) (= (x5051 x2048) 0)))
(assert (= x1147 (x40 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525))))
(assert (= (and x3416 x1634) x4))
(assert (= (x4160 (x1228 x1004 x3020 x2102 x388 x3489 x1127)) x2102))
(assert (x5553 x2660))
(assert (= (x3238 (x4266 64 x929 2)) x929))
(assert (not (x4435 (x4266 64 x2766 (ite (= x610 0) x1688 (ite (>= 32 x610) x4021 (ite (<= x610 64) x1462 (ite (<= x610 96) x3109 (ite (>= 128 x610) x1028 (ite (>= 160 x610) x1356 (ite (<= x610 192) x2042 (ite (<= x610 224) x4656 x2961))))))))))))
(assert (> (x1228 x530 x30 x2472 x1987 x170 x4859) 10000))
(assert (x5553 x395))
(assert (= (x722 (x3789 x693 x2627 x5180 x3492 x3026)) x3492))
(assert (x5553 x3409))
(assert (=> (<= x2978 10000) (= (x5051 x2978) 0)))
(assert (x5553 x3609))
(assert (x5553 x1629))
(assert (= x1261 (x4160 (x4266 64 1 x1261))))
(assert (not (x4435 (x4960 x2434 x2541 x4217 x3551 x3651 x4652 x725 x4344))))
(assert (x5553 x5323))
(assert (x5553 x2743))
(assert (=> (>= 10000 x681) (= 0 (x5051 x681))))
(assert (= (or x4490 x1702) x3457))
(assert (x5553 x4663))
(assert (x5553 x1828))
(assert (= (x894 (x4266 x5613 x3800 x4581)) x5613))
(assert (= x4559 (and x4757 (not x3373))))
(assert (x5553 x2176))
(assert (x5553 x5238))
(assert (=> (<= x4581 10000) (= (x5051 x4581) 0)))
(assert (= x4514 (or (and x4611 x5384) (and x2597 x262) (and x3558 x428))))
(assert (x5553 x1405))
(assert (x5553 x4531))
(assert (= (and x1937 x1111) x5011))
(assert (=> (<= x3996 10000) (= 0 (x5051 x3996))))
(assert (=> (>= 10000 x5026) (= (x5051 x5026) 0)))
(assert (= x2443 (x894 (x5009 x2443 x1792))))
(assert (x5553 x1492))
(assert (= (=> (and (= x4349 (not (> x5429 128))) (= x2387 (x2742 (+ 96 x4119))) (= x1486 (x2742 (+ x4127 96))) (= x166 (x1548 x1486))) (and x3200 x4349)) x3746))
(assert (x5553 x3137))
(assert (x5553 x4940))
(assert (= x2092 (and x4536 x27)))
(assert (not (x4435 (x485 x3525 x2542 x1408 x5440 x2177 x2882 x1384))))
(assert (x5553 x222))
(assert (x5553 x1978))
(assert (= (x5346 (x4960 x693 x5402 x5118 x4692 x3987 x1553 x3128 x5593)) x3128))
(assert (not (x4435 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495))))
(assert (x5553 x4124))
(assert (x5553 x3223))
(assert (x5553 x1403))
(assert (=> (<= x1456 10000) (= 0 (x5051 x1456))))
(assert (x5553 x2448))
(assert (x4435 100000))
(assert (< 10000 (x485 x2434 x1676 x199 x1970 x4301 x1215 x2156)))
(assert (= (x4160 (x4266 64 x2766 (ite (= x610 0) x1688 (ite (<= x610 32) x4021 (ite (<= x610 64) x1462 (ite (>= 96 x610) x3109 (ite (<= x610 128) x1028 (ite (<= x610 160) x1356 (ite (>= 192 x610) x2042 (ite (>= 224 x610) x4656 x2961)))))))))) (ite (= 0 x610) x1688 (ite (<= x610 32) x4021 (ite (>= 64 x610) x1462 (ite (>= 96 x610) x3109 (ite (>= 128 x610) x1028 (ite (>= 160 x610) x1356 (ite (>= 192 x610) x2042 (ite (>= 224 x610) x4656 x2961))))))))))
(assert (= x1388 (and x2092 x974)))
(assert (x5553 x3134))
(assert (= (x5009 x286 x3203) (x5051 (x5009 x286 x3203))))
(assert (x5553 x3559))
(assert (x5553 x4497))
(assert (x5553 x5299))
(assert (= x3004 (x3247 (x4960 x610 x4628 x4172 x39 x3004 x1816 x5587 x366))))
(assert (x1779 x4929))
(assert (x5553 x333))
(assert (x5553 x5371))
(assert (x5553 x1078))
(assert (= x3069 (or x3578 x440)))
(assert (x5553 x932))
(assert (not (x4435 (x4960 x85 x4479 x2245 x3064 x772 x3184 x5539 x3661))))
(assert (x5553 x747))
(assert (x5553 x4208))
(assert (x5553 x1282))
(assert (x5553 x1126))
(assert (=> (>= 10000 x5562) (= 0 (x5051 x5562))))
(assert (x5553 x3140))
(assert (x5553 x2567))
(assert (x5553 x3736))
(assert (not (x4435 (x4266 64 x4008 36))))
(assert (= (and (not x3437) x2786) x3479))
(assert (x5553 x3053))
(assert (= (x722 (x269 x1855 x3349 x3751 x2410)) x2410))
(assert (x5553 x1684))
(assert (x5553 x1044))
(assert (x5553 x2526))
(assert (= x356 (=> (and (= (>= 224 x2358) x5091) (= x2358 (x5192 128))) (and x5091 (=> (and (= x4026 (x5192 288)) (= (x5192 224) x5155) (= (x5192 288) x5595) (= (x3789 x2358 x4298 x3642 x3410 x4650) x2877) (= x1409 (x4960 x2358 x2160 x429 x1936 x5013 x4026 x1711 x1092)) (= x1711 (x5192 320)) (= x4003 (x102 0)) (= x1024 (x5192 320)) (= x1092 (x5192 352)) (= (x5192 192) x1529) (= (x5192 192) x135) (= x5413 (x5192 160)) (= (x1228 x2358 x2475 x383 x2464 x3210 x5595) x1620) (= (x5192 192) x3632) (= (x5192 160) x211) (= (x5192 160) x2552) (= x3210 (x5192 256)) (= (x5192 256) x4650) (= (x5009 x2358 x5413) x2292) (= x2475 (x5192 160)) (= x5013 (x5192 256)) (= x774 (x2742 (+ x5613 x2553))) (= (x5192 224) x3410) (= (x485 x2358 x211 x3632 x5155 x2809 x1491 x1024) x4627) (= x5555 (x269 x2358 x207 x1529 x4721)) (= x1491 (x5192 288)) (= (x5192 256) x2809) (= x429 (x5192 192)) (= x3816 (ite (= 0 x2358) x4003 (ite (<= x2358 32) x2292 (ite (>= 64 x2358) x455 (ite (>= 96 x2358) x5555 (ite (>= 128 x2358) x2877 (ite (<= x2358 160) x1620 (ite (>= 192 x2358) x4627 (ite (<= x2358 224) x1409 x5208))))))))) (= x2464 (x5192 224)) (= x3642 (x5192 192)) (= x4721 (x5192 224)) (= (x5192 192) x383) (= (x4266 x2358 x2552 x135) x455) (= (x5192 224) x1936) (= (x5192 160) x2160) (= x4298 (x5192 160)) (= (>= 224 x5613) x4031) (= x207 (x5192 160))) (and x4031 (=> (and (= x3800 (x4177 x2553)) (= (x4177 x2553) x5274) (= x5489 (x4177 x2553)) (= x2033 (x4177 x4133)) (= (x2742 (+ 160 x2553)) x1055) (= x335 (x2742 (+ x2553 96))) (= (x2742 (+ 64 x2553)) x4524) (= x3675 (x4177 x67)) (= (x4266 x5613 x3800 x4581) x1057) (= x2050 (x2742 (+ 96 x2553))) (= x4818 (x4177 x2553)) (= x4431 (x2742 (+ 128 x2553))) (= (x4177 x3359) x4581) (= x3359 (x2742 (+ x2553 32))) (= x3895 (x4177 x504)) (= (x3789 x5613 x4818 x3523 x3488 x2921) x1429) (= (x4177 x830) x1216) (= x239 (x4177 x871)) (= (x4177 x2553) x828) (= (x4177 x3049) x5290) (= x5385 (x102 0)) (= x5568 (x5009 x5613 x5584)) (= (x2742 (+ 64 x2553)) x871) (= x504 (x2742 (+ x2553 32))) (= x2352 (x4177 x4524)) (= (x4177 x335) x2921) (= x5408 (x2742 (+ x2553 128))) (= (x269 x5613 x2030 x3675 x2352) x2604) (= x3071 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638)) (= x3049 (x2742 (+ x2553 64))) (= x5584 (x4177 x2553)) (= x3523 (x4177 x3389)) (= x1312 (x4177 x4431)) (= x2741 (x4177 x2050)) (= (x4177 x3688) x3638) (= x3389 (x2742 (+ 32 x2553))) (= (x2742 (+ 64 x2553)) x5140) (= x194 (x4177 x1815)) (= (x4177 x2561) x3488) (= x830 (x2742 (+ x2553 96))) (= (x4177 x2070) x2944) (= (x2742 (+ 96 x2553)) x2070) (= x3816 x2282) (= (x4177 x1983) x1767) (= (x4177 x2553) x2030) (= (x2742 (+ 192 x2553)) x3688) (= (x2742 (+ x2553 32)) x4639) (= x2978 (x4177 x5140)) (= (x4177 x4639) x5189) (= x1815 (x2742 (+ x2553 32))) (= x2282 (ite (= x5613 0) x5385 (ite (>= 32 x5613) x5568 (ite (>= 64 x5613) x1057 (ite (<= x5613 96) x2604 (ite (<= x5613 128) x1429 (ite (>= 160 x5613) x3331 (ite (<= x5613 192) x5605 (ite (>= 224 x5613) x3071 x1858))))))))) (= x3134 (x4177 x1055)) (= (x2742 (+ 32 x2553)) x67) (= x4133 (x2742 (+ x2553 160))) (= x2561 (x2742 (+ x2553 64))) (= (x4177 x5408) x1223) (= x3331 (x1228 x5613 x5274 x3895 x2978 x2944 x1312)) (= x1983 (x2742 (+ 128 x2553))) (= x5605 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134))) x1662)))))))
(assert (not (x4435 (x3789 x1966 x2269 x3334 x1405 x4054))))
(assert (= 0 (x5051 3957931183)))
(assert (= x683 x3698))
(assert (= (=> (and (= x4462 (not (> x1954 32))) (= x3738 (x542 x1375))) (and x4462 (=> (= 32 x1288) x3044))) x5602))
(assert (x5553 x1816))
(assert (= (or x315 x3269) x13))
(assert (x5553 x5416))
(assert (= (x4160 (x269 x5613 x2030 x3675 x2352)) x3675))
(assert (x5553 x5004))
(assert (x5553 x2584))
(assert (x5553 x3751))
(assert (=> (<= x4150 10000) (= 0 (x5051 x4150))))
(assert (not (x4435 (x4266 x530 x5126 x1849))))
(assert (x5553 x4101))
(assert (= x3372 (x3238 (x1228 x1098 x3372 x3272 x4492 x1282 x3321))))
(assert (= x3267 (x3247 (x3789 x610 x2516 x3169 x3223 x3267))))
(assert (= x2994 (x40 (x1228 x85 x4919 x629 x2130 x1420 x2994))))
(assert (x5553 x3702))
(assert (x5553 x684))
(assert (x5553 x1590))
(assert (=> (<= x4017 10000) (= (x5051 x4017) 0)))
(assert (x5553 x4565))
(assert (x1779 x1820))
(assert (=> (<= x3134 10000) (= (x5051 x3134) 0)))
(assert (x5553 x5550))
(assert (x5553 x2251))
(assert (x5553 x5125))
(assert (= x1405 (x722 (x3789 x1966 x2269 x3334 x1405 x4054))))
(assert (= x31 (x40 (x1228 x2443 x1430 x5633 x4923 x1095 x31))))
(assert (= (x5051 (+ 1 x3222)) (x5051 x3222)))
(assert (=> (>= 10000 x1273) (= 0 (x5051 x1273))))
(assert (x5553 x1289))
(assert (= x2827 (and x3792 (not x5343))))
(assert (x5553 x1323))
(assert (x5553 x1385))
(assert (x5553 x2416))
(assert (= (x4266 64 x3406 36) (x5051 (x4266 64 x3406 36))))
(assert (x5553 x673))
(assert (x1779 x3753))
(assert (x5553 x3127))
(assert (= x2083 (x3238 (x1228 x1966 x2083 x4104 x1865 x2530 x2341))))
(assert (= x1855 (x894 (x485 x1855 x2121 x1643 x3195 x141 x4176 x5473))))
(assert (x5553 x2527))
(assert (= (x3238 (x485 x1004 x5217 x3 x2304 x4150 x5573 x28)) x5217))
(assert (= (x5051 (x5009 32 x3799)) (x5009 32 x3799)))
(assert (x5553 x2475))
(assert (x5553 x2057))
(assert (= x2766 (x3238 (x4266 64 x2766 (ite (= x610 0) x1688 (ite (<= x610 32) x4021 (ite (<= x610 64) x1462 (ite (>= 96 x610) x3109 (ite (>= 128 x610) x1028 (ite (<= x610 160) x1356 (ite (>= 192 x610) x2042 (ite (>= 224 x610) x4656 x2961))))))))))))
(assert (= (=> (and (= x3573 (<= x1966 224)) (= (x415 128) x1966)) (and (=> (and (= x4837 (x415 160)) (= (x415 288) x4804) (= x5260 (x5009 x1966 x4837)) (= (x415 192) x4104) (= (x415 192) x3334) (= (<= x1098 224) x5522) (= x2932 (x415 192)) (= x4155 (ite (= x1966 0) x1549 (ite (>= 32 x1966) x5260 (ite (>= 64 x1966) x1961 (ite (<= x1966 96) x642 (ite (<= x1966 128) x4605 (ite (>= 160 x1966) x808 (ite (>= 192 x1966) x2332 (ite (<= x1966 224) x529 x1609))))))))) (= x4054 (x415 256)) (= x552 (x415 160)) (= x1549 (x102 0)) (= x1684 (x415 160)) (= (x415 352) x2946) (= x1951 (x415 224)) (= (x415 192) x225) (= x1523 (x415 288)) (= x3030 (x415 256)) (= (x415 288) x2341) (= x2269 (x415 160)) (= (x4266 x1966 x4625 x5022) x1961) (= (x415 320) x2006) (= (x415 256) x2530) (= x4605 (x3789 x1966 x2269 x3334 x1405 x4054)) (= (x1228 x1966 x2083 x4104 x1865 x2530 x2341) x808) (= (x415 224) x4588) (= (x485 x1966 x552 x2932 x1951 x2508 x1523 x2273) x2332) (= x4625 (x415 160)) (= (x415 192) x5022) (= x529 (x4960 x1966 x1723 x911 x4588 x3030 x4804 x2006 x2946)) (= x4163 (x2742 (+ x1098 x872))) (= x2273 (x415 320)) (= (x415 192) x911) (= x1865 (x415 224)) (= x642 (x269 x1966 x1684 x225 x724)) (= x2508 (x415 256)) (= (x415 160) x1723) (= x2083 (x415 160)) (= x724 (x415 224)) (= x1405 (x415 224))) (and x5522 (=> (and (= (x2742 (+ x872 160)) x951) (= (x2742 (+ 96 x872)) x2261) (= x4637 (x2742 (+ 64 x872))) (= (x1132 x882) x2479) (= x1584 (x1132 x2711)) (= x5448 (x1132 x872)) (= (x2742 (+ x872 96)) x1476) (= (x2742 (+ 128 x872)) x4878) (= x4165 (x1132 x3855)) (= x4155 x1736) (= x3487 (x2742 (+ 160 x872))) (= (x5009 x1098 x5448) x3844) (= (x2742 (+ 32 x872)) x380) (= (x2742 (+ x872 128)) x4057) (= x5139 (x2742 (+ 64 x872))) (= (x2742 (+ x872 192)) x1243) (= (x1132 x872) x5454) (= x3272 (x1132 x380)) (= x1831 (x1132 x1719)) (= x1358 (x1228 x1098 x3372 x3272 x4492 x1282 x3321)) (= x4663 (x2742 (+ 96 x872))) (= x3855 (x2742 (+ 32 x872))) (= (x102 0) x4327) (= (x2742 (+ x872 128)) x159) (= (x2742 (+ x872 96)) x1207) (= (x2742 (+ x872 64)) x1719) (= x4246 (x1132 x1917)) (= x1917 (x2742 (+ 64 x872))) (= (x1132 x4637) x4492) (= x1175 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535)) (= (x1132 x4626) x5015) (= x5159 (x4266 x1098 x4250 x4165)) (= x2559 (x1132 x2266)) (= x3052 (x1132 x5139)) (= x2878 (x1132 x872)) (= (x3789 x1098 x2878 x5015 x4295 x4143) x2716) (= x4053 (x1132 x1476)) (= x3535 (x1132 x3487)) (= x3126 (x1132 x1243)) (= (x1132 x872) x3372) (= x1839 (x1132 x159)) (= (x1132 x3160) x4295) (= x3160 (x2742 (+ 64 x872))) (= x2711 (x2742 (+ 32 x872))) (= x4299 (x1132 x2261)) (= x1765 (x1132 x872)) (= (x1132 x1207) x1282) (= x3337 (x1132 x4057)) (= (x2742 (+ x872 32)) x2266) (= (x1132 x951) x2707) (= (ite (= 0 x1098) x4327 (ite (<= x1098 32) x3844 (ite (<= x1098 64) x5159 (ite (>= 96 x1098) x2525 (ite (<= x1098 128) x2716 (ite (<= x1098 160) x1358 (ite (<= x1098 192) x1175 (ite (>= 224 x1098) x349 x2927)))))))) x1736) (= x2525 (x269 x1098 x5454 x1584 x3052)) (= x4143 (x1132 x4663)) (= (x4960 x1098 x1765 x2479 x4246 x4299 x1839 x2707 x3126) x349) (= (x2742 (+ 32 x872)) x882) (= (x1132 x872) x4250) (= x2669 (x1132 x872)) (= x4626 (x2742 (+ x872 32))) (= (x1132 x4878) x3321)) x3966))) x3573)) x358))
(assert (not (x4435 (x4266 64 x961 100))))
(assert (x5553 x2348))
(assert (= (and x1026 (not x1633)) x2409))
(assert (= (x40 (x485 x2443 x602 x2762 x1509 x5407 x1193 x1495)) x1193))
(assert (x5553 x1196))
(assert (= (x722 (x1228 x286 x1219 x5302 x3589 x4897 x4255)) x3589))
(assert (x5553 x2953))
(assert (x5553 x4763))
(assert (x5553 x653))
(assert (not (x4435 (x269 x1966 x1684 x225 x724))))
(assert (x5553 x3358))
(assert (= (and (not x5472) x4223) x5384))
(assert (= (and x5247 x3593) x3527))
(assert (x5553 x3413))
(assert (not (x4435 (x4960 x1004 x1077 x3307 x3720 x4691 x3824 x5104 x5405))))
(assert (x5553 x843))
(assert (=> (<= x3073 10000) (= 0 (x5051 x3073))))
(assert (x5553 x4032))
(assert (= x3794 (and (not x3902) x3479)))
(assert (= x3525 (x894 (x1228 x3525 x3124 x2682 x4476 x5480 x2515))))
(assert (x5553 x3787))
(assert (not (x4435 (x1228 x1098 x3372 x3272 x4492 x1282 x3321))))
(assert (< 10000 (x485 x1098 x2669 x2559 x1831 x4053 x3337 x3535)))
(assert (x5553 x1831))
(assert (x4435 1084734224))
(assert (< (x4266 x3525 x852 x5119) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5553 x1504))
(assert (= x1966 (x894 (x1228 x1966 x2083 x4104 x1865 x2530 x2341))))
(assert (= (and x5268 x185) x834))
(assert (=> (>= 10000 x1557) (= 0 (x5051 x1557))))
(assert (x5553 x57))
(assert (= x5231 (and (not x4034) x1458)))
(assert (x5553 x3049))
(assert (= x5613 (x894 (x4960 x5613 x828 x194 x239 x1216 x1767 x2033 x3638))))
(assert (x5553 x4610))
(assert (x1779 x2947))
(assert (x5553 x379))
(assert (= x86 x1902))
(assert (= x4490 (and x3208 x3673)))
(assert (=> (<= x1529 10000) (= (x5051 x1529) 0)))
(assert (=> (<= x5234 10000) (= (x5051 x5234) 0)))
(assert (= (x894 (x485 x4005 x1214 x2566 x1273 x5125 x3301 x1278)) x4005))
(assert (= x2253 (=> (= (= 0 x1674) x1937) (and (=> (and (not x1937) (and (= x1751 x4324) (= x803 x1908) (= x3236 x4132) (= x1725 x2305) (= x3110 x1338) (= x2440 1) (= x2661 x4938) (= x1386 x1590) (= x2482 x1348) (= 0 x3634) (= x5147 x2703) (= x2327 x4131) (= x2438 x425) (= x838 x748) (= x2934 x4086))) x618) (=> (and (and (= 0 x4973) (= x4071 false) (= true x2607)) x1937) x4983)))))
(assert (not (x4435 (x4266 64 x2650 12))))
(assert (= (x4160 (x4266 64 x2781 3)) 3))
(assert (x5553 x1311))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x5613 x5489 x5189 x5290 x2741 x1223 x3134)))
(assert (= x2082 (x4160 (x4960 x5501 x976 x2082 x4018 x2533 x4275 x3712 x336))))
(assert (x5553 x1332))
(assert (= (and (not x5239) x1198) x1301))
(assert (x1779 x1201))
(assert (not (x4435 (x4266 x1855 x5144 x3036))))
(assert (= (=> (and (= (not (> x4209 32)) x2015) (= x1806 (x2587 x386))) (and (=> (= x2985 32) x4306) x2015)) x4955))
(assert (x5553 x3981))
(assert (= x4223 (and x2910 x4789)))
(assert (x5553 x3188))
(assert (x5553 x261))
(assert (= 64 (x894 (x4266 64 x801 10))))
(assert (= x2434 (x894 (x4266 x2434 x4068 x4292))))
(assert (x5553 x1642))
(assert (x5553 x4836))
(assert (= x4367 x1591))
(assert (=> (>= 10000 x2682) (= 0 (x5051 x2682))))
(assert (x5553 x1519))
(assert (= (x3247 (x3789 x4005 x4717 x294 x5499 x3258)) x3258))
(assert (x5553 x4571))
(assert (x5553 x4036))
(assert (= (x4160 (x485 x610 x907 x4924 x678 x1827 x3592 x4073)) x4924))
(assert (x5553 x5120))
(assert (x5553 x4321))
(assert (x5553 x2188))
(assert (x5553 x1509))
(assert (x5553 x4743))
(assert (x5553 x263))
(assert (x5553 x4072))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x269 x2443 x3830 x1931 x5230)))
(assert (=> (>= 10000 x3488) (= (x5051 x3488) 0)))
(assert (x5553 x2941))
(assert (x4435 3672334990))
(assert (x5553 x4379))
(assert (x5553 x2535))
(assert (= (=> (and (= (> x2226 0) x1614) (= x4813 (x2742 (+ x4623 32))) (= x3641 (ite (< 150 x2291) 150 x2291))) (and (=> (not x1614) x3289) (=> x1614 x3263))) x2987))
(assert (x5553 x882))
(assert (> (x4266 x610 x1443 x3659) 10000))
(assert (x5553 x5621))
(assert (=> (>= 10000 x2144) (= (x5051 x2144) 0)))
(assert (x5553 x4524))
(assert (x5553 x2914))
(assert (x5553 x1965))
(assert (= (x5009 x1098 x5448) (x5051 (x5009 x1098 x5448))))
(assert (=> (<= x3650 10000) (= 0 (x5051 x3650))))
(assert (= x1364 true))
(assert (= (x5051 (x4266 x3137 x1784 x1436)) (x4266 x3137 x1784 x1436)))
(assert (< 10000 (x4960 x3525 x3103 x221 x1270 x2110 x208 x3463 x1914)))
(assert (x5553 x3654))
(assert (= (x3238 (x5009 x610 x5418)) x5418))
(assert (x5553 x1594))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x485 x85 x3804 x1911 x1009 x4882 x1147 x5525)))
(assert (x5553 x4924))
(assert (x5553 x2003))
(assert (x1779 x3765))
(assert (= (and (not x4642) x4113) x3426))
(assert (x5553 x4120))
(assert (x5553 x2281))
(assert (x5553 x1401))
(assert (x5553 x1725))
(assert (x121 x4734))
(assert (< 10000 (x4266 x1098 x4250 x4165)))
(assert (x5553 x3394))
(assert (x5553 x3594))
(assert (x5553 x1966))
(assert (x5553 x5225))
(assert (< 10000 (x269 x4005 x99 x921 x2321)))
(assert (x5553 x2558))
(assert (= x3557 (x722 (x485 x5530 x1177 x1246 x3557 x2466 x5002 x1677))))
(assert (= x4736 (x3238 (x4266 64 x4736 5))))
(assert (= (x894 (x3789 x286 x2817 x3102 x4130 x3436)) x286))
(assert (x5553 x1193))
(assert (= x2938 (=> (and (and (= (x415 128) x5543) (= (= x1098 x5543) x1423)) (or (and (and (= x2733 (ite (> x2272 0) 1 0)) (= (x415 128) x2272)) x1423) (and (not x1423) (= x2733 (ite x1423 1 0))))) x1953)))
(assert (x5553 x943))
(assert (=> (>= 10000 x2878) (= 0 (x5051 x2878))))
(assert (= x2434 (x894 (x5009 x2434 x2244))))
(assert (x5553 x4984))
(assert (= x1088 (and x1958 x1923)))
(assert (x5553 x3178))
(assert (x4435 18446744073709551615))
(check-sat)
(exit)
