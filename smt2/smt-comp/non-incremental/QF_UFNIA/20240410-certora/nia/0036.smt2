(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x112 () Int)
(declare-fun x442 () Int)
(declare-fun x1025 () Int)
(declare-fun x25 () Int)
(declare-fun x352 () Int)
(declare-fun x495 () Bool)
(declare-fun x1299 () Int)
(declare-fun x1348 () Int)
(declare-fun x925 () Int)
(declare-fun x1303 () Bool)
(declare-fun x602 () Int)
(declare-fun x1770 () Int)
(declare-fun x1144 () Int)
(declare-fun x1696 () Int)
(declare-fun x1187 () Bool)
(declare-fun x340 () Int)
(declare-fun x312 () Bool)
(declare-fun x618 () Bool)
(declare-fun x1514 () Int)
(declare-fun x1062 (Int) Int)
(declare-fun x1733 () Int)
(declare-fun x256 () Int)
(declare-fun x536 () Bool)
(declare-fun x998 () Int)
(declare-fun x597 () Int)
(declare-fun x386 () Bool)
(declare-fun x947 () Bool)
(declare-fun x1681 () Int)
(declare-fun x1027 () Int)
(declare-fun x431 () Int)
(declare-fun x1726 () Int)
(declare-fun x1438 () Int)
(declare-fun x1518 () Int)
(declare-fun x1655 () Int)
(declare-fun x410 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x756 () Bool)
(declare-fun x854 () Int)
(declare-fun x1926 () Bool)
(declare-fun x422 () Int)
(declare-fun x387 () Int)
(declare-fun x1355 () Int)
(declare-fun x381 () Int)
(declare-fun x1757 () Int)
(declare-fun x904 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x748 () Int)
(declare-fun x1526 () Int)
(declare-fun x1803 () Int)
(declare-fun x1306 () Bool)
(declare-fun x1283 () Int)
(declare-fun x1469 () Bool)
(declare-fun x450 () Bool)
(declare-fun x1960 () Int)
(declare-fun x572 () Bool)
(declare-fun x455 () Bool)
(declare-fun x302 () Int)
(declare-fun x1258 () Int)
(declare-fun x202 () Int)
(declare-fun x1387 () Int)
(declare-fun x1564 () Int)
(declare-fun x743 () Bool)
(declare-fun x587 () Int)
(declare-fun x23 () Int)
(declare-fun x882 () Int)
(declare-fun x1855 () Int)
(declare-fun x1807 () Bool)
(declare-fun x1837 () Int)
(declare-fun x315 () Int)
(declare-fun x831 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x811 () Int)
(declare-fun x1579 () Int)
(declare-fun x1976 () Bool)
(declare-fun x1042 () Int)
(declare-fun x787 () Int)
(declare-fun x1421 () Int)
(declare-fun x1154 () Int)
(declare-fun x1776 () Int)
(declare-fun x201 () Int)
(declare-fun x1450 () Bool)
(declare-fun x766 () Bool)
(declare-fun x1483 () Int)
(declare-fun x1610 () Int)
(declare-fun x1935 () Int)
(declare-fun x592 () Int)
(declare-fun x1037 () Bool)
(declare-fun x1091 () Int)
(declare-fun x801 () Int)
(declare-fun x846 () Int)
(declare-fun x1909 () Int)
(declare-fun x363 () Int)
(declare-fun x1184 () Int)
(declare-fun x1500 () Int)
(declare-fun x196 () Bool)
(declare-fun x1009 () Int)
(declare-fun x1989 () Int)
(declare-fun x1809 () Int)
(declare-fun x962 () Bool)
(declare-fun x621 () Bool)
(declare-fun x343 () Bool)
(declare-fun x957 () Int)
(declare-fun x1553 () Int)
(declare-fun x643 () Bool)
(declare-fun x1858 () Int)
(declare-fun x292 () Bool)
(declare-fun x1180 () Int)
(declare-fun x849 () Bool)
(declare-fun x9 () Int)
(declare-fun x544 () Int)
(declare-fun x1129 () Bool)
(declare-fun x298 () Int)
(declare-fun x776 () Bool)
(declare-fun x1791 () Int)
(declare-fun x996 () Bool)
(declare-fun x1277 () Int)
(declare-fun x1539 () Int)
(declare-fun x1325 () Bool)
(declare-fun x137 () Int)
(declare-fun x1563 () Bool)
(declare-fun x574 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x1034 () Int)
(declare-fun x1612 () Int)
(declare-fun x850 () Int)
(declare-fun x1647 () Int)
(declare-fun x503 () Int)
(declare-fun x659 () Int)
(declare-fun x1151 () Int)
(declare-fun x681 () Int)
(declare-fun x905 () Int)
(declare-fun x585 () Int)
(declare-fun x542 () Int)
(declare-fun x1693 () Int)
(declare-fun x305 () Int)
(declare-fun x1798 () Int)
(declare-fun x1060 () Int)
(declare-fun x980 () Bool)
(declare-fun x35 () Bool)
(declare-fun x679 () Bool)
(declare-fun x807 () Bool)
(declare-fun x127 () Int)
(declare-fun x1307 () Int)
(declare-fun x1565 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x1191 () Int)
(declare-fun x919 () Int)
(declare-fun x915 () Int)
(declare-fun x41 () Bool)
(declare-fun x272 () Bool)
(declare-fun x1243 () Int)
(declare-fun x365 () Int)
(declare-fun x1205 () Int)
(declare-fun x118 () Int)
(declare-fun x111 () Int)
(declare-fun x1525 () Int)
(declare-fun x930 () Int)
(declare-fun x389 () Bool)
(declare-fun x1020 () Int)
(declare-fun x931 () Bool)
(declare-fun x1601 () Int)
(declare-fun x1443 () Bool)
(declare-fun x937 () Bool)
(declare-fun x606 () Int)
(declare-fun x985 () Bool)
(declare-fun x1779 () Int)
(declare-fun x1734 () Bool)
(declare-fun x608 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1010 () Int)
(declare-fun x984 () Int)
(declare-fun x1704 () Bool)
(declare-fun x230 () Int)
(declare-fun x262 () Int)
(declare-fun x1123 () Int)
(declare-fun x629 () Bool)
(declare-fun x529 () Int)
(declare-fun x411 () Int)
(declare-fun x1690 () Bool)
(declare-fun x526 () Int)
(declare-fun x1066 () Int)
(declare-fun x299 () Int)
(declare-fun x619 () Int)
(declare-fun x1974 () Int)
(declare-fun x1298 () Int)
(declare-fun x1220 () Bool)
(declare-fun x232 () Bool)
(declare-fun x920 () Bool)
(declare-fun x500 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1350 () Int)
(declare-fun x1359 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x1841 () Int)
(declare-fun x225 () Int)
(declare-fun x1221 () Bool)
(declare-fun x1609 (Int) Int)
(declare-fun x62 () Bool)
(declare-fun x825 () Bool)
(declare-fun x672 () Bool)
(declare-fun x194 () Int)
(declare-fun x17 () Int)
(declare-fun x475 () Bool)
(declare-fun x1146 () Int)
(declare-fun x185 () Int)
(declare-fun x1400 () Int)
(declare-fun x1732 () Int)
(declare-fun x1448 () Int)
(declare-fun x689 () Bool)
(declare-fun x1604 () Int)
(declare-fun x1567 () Int)
(declare-fun x652 () Bool)
(declare-fun x704 () Int)
(declare-fun x1006 (Int) Int)
(declare-fun x338 () Int)
(declare-fun x100 () Int)
(declare-fun x153 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1358 () Int)
(declare-fun x714 () Int)
(declare-fun x889 () Int)
(declare-fun x958 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1344 () Int)
(declare-fun x589 () Int)
(declare-fun x647 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1349 () Int)
(declare-fun x1043 () Int)
(declare-fun x1848 () Int)
(declare-fun x1465 () Int)
(declare-fun x264 () Bool)
(declare-fun x1913 () Int)
(declare-fun x1558 () Int)
(declare-fun x1172 () Bool)
(declare-fun x1499 () Int)
(declare-fun x1041 () Int)
(declare-fun x1337 () Int)
(declare-fun x979 () Int)
(declare-fun x1302 () Bool)
(declare-fun x248 () Bool)
(declare-fun x1592 () Int)
(declare-fun x942 () Int)
(declare-fun x1111 () Int)
(declare-fun x1961 () Int)
(declare-fun x1017 (Int) Int)
(declare-fun x1632 () Bool)
(declare-fun x1828 () Int)
(declare-fun x1114 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x109 () Bool)
(declare-fun x108 () Bool)
(declare-fun x1670 () Int)
(declare-fun x1588 () Int)
(declare-fun x1560 () Int)
(declare-fun x1650 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1716 () Int)
(declare-fun x1889 () Int)
(declare-fun x1392 () Int)
(declare-fun x480 () Bool)
(declare-fun x1797 () Int)
(declare-fun x64 () Int)
(declare-fun x1039 () Int)
(declare-fun x903 () Bool)
(declare-fun x838 () Int)
(declare-fun x1824 () Int)
(declare-fun x1370 () Int)
(declare-fun x1390 () Int)
(declare-fun x1139 () Int)
(declare-fun x1210 () Int)
(declare-fun x1591 () Int)
(declare-fun x1543 () Int)
(declare-fun x1274 () Bool)
(declare-fun x1120 () Int)
(declare-fun x38 () Int)
(declare-fun x439 () Bool)
(declare-fun x1555 () Int)
(declare-fun x85 () Int)
(declare-fun x1751 () Int)
(declare-fun x44 () Int)
(declare-fun x1979 () Bool)
(declare-fun x28 () Int)
(declare-fun x682 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x474 () Int)
(declare-fun x1853 () Bool)
(declare-fun x1925 () Int)
(declare-fun x308 () Int)
(declare-fun x744 () Int)
(declare-fun x725 () Int)
(declare-fun x1432 () Int)
(declare-fun x1446 () Int)
(declare-fun x695 () Int)
(declare-fun x246 () Bool)
(declare-fun x341 () Bool)
(declare-fun x623 () Bool)
(declare-fun x233 () Int)
(declare-fun x1929 () Bool)
(declare-fun x1217 () Int)
(declare-fun x200 () Bool)
(declare-fun x1461 () Int)
(declare-fun x1362 () Int)
(declare-fun x346 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x678 () Int)
(declare-fun x84 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1849 () Bool)
(declare-fun x251 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x21 () Int)
(declare-fun x1379 () Int)
(declare-fun x1055 () Int)
(declare-fun x646 () Int)
(declare-fun x1168 () Int)
(declare-fun x1684 () Int)
(declare-fun x1694 () Bool)
(declare-fun x730 () Int)
(declare-fun x718 () Int)
(declare-fun x1165 () Int)
(declare-fun x212 () Int)
(declare-fun x86 () Int)
(declare-fun x1522 () Int)
(declare-fun x490 () Int)
(declare-fun x736 () Int)
(declare-fun x1022 () Int)
(declare-fun x1706 () Int)
(declare-fun x1470 () Int)
(declare-fun x178 () Int)
(declare-fun x313 () Int)
(declare-fun x1253 () Int)
(declare-fun x1036 () Bool)
(declare-fun x1919 () Int)
(declare-fun x116 () Int)
(declare-fun x1023 () Bool)
(declare-fun x1476 () Int)
(declare-fun x891 () Int)
(declare-fun x1244 () Bool)
(declare-fun x534 () Bool)
(declare-fun x360 () Int)
(declare-fun x1873 () Int)
(declare-fun x783 () Int)
(declare-fun x1166 () Int)
(declare-fun x576 () Bool)
(declare-fun x651 () Int)
(declare-fun x1260 () Int)
(declare-fun x222 () Int)
(declare-fun x1559 () Int)
(declare-fun x949 () Int)
(declare-fun x1389 (Int Int) Int)
(declare-fun x1941 () Int)
(declare-fun x1905 () Int)
(declare-fun x583 () Int)
(declare-fun x935 () Int)
(declare-fun x1459 () Bool)
(declare-fun x1044 () Int)
(declare-fun x963 () Bool)
(declare-fun x476 () Int)
(declare-fun x1763 () Int)
(declare-fun x1631 (Int) Int)
(declare-fun x520 () Int)
(declare-fun x1748 () Int)
(declare-fun x384 () Bool)
(declare-fun x342 () Int)
(declare-fun x484 () Bool)
(declare-fun x1128 () Int)
(declare-fun x836 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1401 () Int)
(declare-fun x284 () Int)
(declare-fun x1263 () Bool)
(declare-fun x523 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1942 () Int)
(declare-fun x1775 () Int)
(declare-fun x1316 () Bool)
(declare-fun x933 () Int)
(declare-fun x1702 () Int)
(declare-fun x1426 () Bool)
(declare-fun x423 () Bool)
(declare-fun x898 () Int)
(declare-fun x138 () Int)
(declare-fun x1937 () Int)
(declare-fun x1273 () Int)
(declare-fun x881 () Int)
(declare-fun x1440 () Int)
(declare-fun x1488 () Int)
(declare-fun x451 () Int)
(declare-fun x1605 () Int)
(declare-fun x215 () Int)
(declare-fun x732 () Bool)
(declare-fun x594 () Int)
(declare-fun x880 () Int)
(declare-fun x418 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x501 () Int)
(declare-fun x780 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1636 () Int)
(declare-fun x498 () Bool)
(declare-fun x615 () Int)
(declare-fun x1850 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x136 () Bool)
(declare-fun x1384 () Int)
(declare-fun x482 () Bool)
(declare-fun x1162 () Int)
(declare-fun x1282 () Int)
(declare-fun x1844 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x1955 () Int)
(declare-fun x700 () Bool)
(declare-fun x827 () Int)
(declare-fun x798 () Int)
(declare-fun x514 () Bool)
(declare-fun x1110 () Int)
(declare-fun x247 () Int)
(declare-fun x945 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x1956 () Int)
(declare-fun x1793 () Bool)
(declare-fun x1317 () Int)
(declare-fun x1721 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x711 () Int)
(declare-fun x1741 () Bool)
(declare-fun x1795 () Int)
(declare-fun x497 () Int)
(declare-fun x1236 () Bool)
(declare-fun x1481 () Int)
(declare-fun x1222 () Int)
(declare-fun x485 (Int) Int)
(declare-fun x625 () Bool)
(declare-fun x214 () Int)
(declare-fun x1535 () Bool)
(declare-fun x1493 () Int)
(declare-fun x88 () Bool)
(declare-fun x258 () Int)
(declare-fun x913 () Bool)
(declare-fun x403 (Int) Int)
(declare-fun x104 () Int)
(declare-fun x306 () Bool)
(declare-fun x177 () Bool)
(declare-fun x507 () Bool)
(declare-fun x613 () Int)
(declare-fun x1404 () Int)
(declare-fun x1193 () Bool)
(declare-fun x826 () Int)
(declare-fun x1927 () Bool)
(declare-fun x1215 () Int)
(declare-fun x96 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x1052 () Int)
(declare-fun x8 () Int)
(declare-fun x1301 () Int)
(declare-fun x1714 () Int)
(declare-fun x1802 () Int)
(declare-fun x421 () Int)
(declare-fun x161 () Int)
(declare-fun x909 () Int)
(declare-fun x102 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x1595 () Int)
(declare-fun x1289 () Int)
(declare-fun x1975 () Bool)
(declare-fun x274 () Bool)
(declare-fun x236 () Int)
(declare-fun x1680 () Int)
(declare-fun x1072 () Int)
(declare-fun x1572 () Bool)
(declare-fun x1467 () Int)
(declare-fun x1075 () Bool)
(declare-fun x99 () Int)
(declare-fun x1290 () Int)
(declare-fun x1533 () Int)
(declare-fun x1054 () Bool)
(declare-fun x1209 () Int)
(declare-fun x1857 () Bool)
(declare-fun x661 () Int)
(declare-fun x414 () Bool)
(declare-fun x1197 () Int)
(declare-fun x635 () Int)
(declare-fun x1178 () Int)
(declare-fun x879 () Int)
(declare-fun x170 () Int)
(declare-fun x981 () Bool)
(declare-fun x1279 (Int) Int)
(declare-fun x1882 () Int)
(declare-fun x1699 () Int)
(declare-fun x1270 () Int)
(declare-fun x58 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x649 () Int)
(declare-fun x140 () Int)
(declare-fun x1904 () Int)
(declare-fun x1730 () Int)
(declare-fun x1626 () Int)
(declare-fun x1059 () Int)
(declare-fun x1561 () Bool)
(declare-fun x861 () Int)
(declare-fun x1449 () Int)
(declare-fun x380 () Int)
(declare-fun x1890 () Int)
(declare-fun x1281 () Int)
(declare-fun x1778 () Int)
(declare-fun x1428 () Bool)
(declare-fun x189 () Int)
(declare-fun x210 () Int)
(declare-fun x14 () Bool)
(declare-fun x940 () Bool)
(declare-fun x1157 () Int)
(declare-fun x440 () Int)
(declare-fun x906 () Int)
(declare-fun x892 () Int)
(declare-fun x1854 () Int)
(declare-fun x843 () Bool)
(declare-fun x249 () Int)
(declare-fun x791 () Int)
(declare-fun x219 () Bool)
(declare-fun x537 () Int)
(declare-fun x239 () Bool)
(declare-fun x988 () Bool)
(declare-fun x454 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1351 () Bool)
(declare-fun x1256 () Int)
(declare-fun x374 () Int)
(declare-fun x438 () Int)
(declare-fun x1507 () Int)
(declare-fun x738 () Int)
(declare-fun x1497 () Int)
(declare-fun x1405 () Bool)
(declare-fun x690 () Bool)
(declare-fun x1341 () Int)
(declare-fun x1954 () Bool)
(declare-fun x1886 () Int)
(declare-fun x1179 () Int)
(declare-fun x1369 () Int)
(declare-fun x1838 () Bool)
(declare-fun x900 () Bool)
(declare-fun x1971 () Int)
(declare-fun x1377 () Int)
(declare-fun x550 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x1758 () Int)
(declare-fun x516 () Int)
(declare-fun x1108 () Int)
(declare-fun x1464 () Int)
(declare-fun x1496 () Int)
(declare-fun x1345 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x603 () Bool)
(declare-fun x145 () Int)
(declare-fun x349 () Int)
(declare-fun x525 () Int)
(declare-fun x644 () Bool)
(declare-fun x855 () Bool)
(declare-fun x316 () Bool)
(declare-fun x33 () Int)
(declare-fun x802 () Int)
(declare-fun x1970 () Bool)
(declare-fun x157 () Int)
(declare-fun x1371 () Int)
(declare-fun x1977 () Int)
(declare-fun x1383 () Bool)
(declare-fun x91 () Int)
(declare-fun x1978 () Int)
(declare-fun x1621 () Int)
(declare-fun x1452 () Int)
(declare-fun x1717 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1744 () Int)
(declare-fun x367 () Int)
(declare-fun x1990 () Bool)
(declare-fun x1021 (Int) Int)
(declare-fun x1768 () Bool)
(declare-fun x1304 () Int)
(declare-fun x1259 () Int)
(declare-fun x47 () Bool)
(declare-fun x570 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1338 () Int)
(declare-fun x1611 () Int)
(declare-fun x1501 () Bool)
(declare-fun x39 () Bool)
(declare-fun x1305 () Int)
(declare-fun x948 () Int)
(declare-fun x1722 () Bool)
(declare-fun x22 () Int)
(declare-fun x708 () Int)
(declare-fun x524 () Int)
(declare-fun x932 () Bool)
(declare-fun x1641 () Int)
(declare-fun x430 () Int)
(declare-fun x1331 () Int)
(declare-fun x734 () Bool)
(declare-fun x491 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1101 () Int)
(declare-fun x149 () Int)
(declare-fun x1074 () Int)
(declare-fun x1864 () Int)
(declare-fun x405 () Int)
(declare-fun x1887 () Bool)
(declare-fun x654 () Bool)
(declare-fun x755 () Int)
(declare-fun x1295 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x344 () Bool)
(declare-fun x146 () Int)
(declare-fun x668 () Int)
(declare-fun x1399 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x1219 () Int)
(declare-fun x699 () Int)
(declare-fun x901 () Bool)
(declare-fun x547 () Bool)
(declare-fun x1122 () Int)
(declare-fun x1411 () Int)
(declare-fun x579 () Int)
(declare-fun x875 () Int)
(declare-fun x404 () Bool)
(declare-fun x1516 () Int)
(declare-fun x1509 () Int)
(declare-fun x1398 () Int)
(declare-fun x173 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x777 () Int)
(declare-fun x569 () Int)
(declare-fun x1892 () Int)
(declare-fun x358 () Int)
(declare-fun x1924 () Bool)
(declare-fun x477 () Int)
(declare-fun x1580 () Int)
(declare-fun x1130 () Bool)
(declare-fun x528 () Int)
(declare-fun x764 () Int)
(declare-fun x1084 () Bool)
(declare-fun x366 () Int)
(declare-fun x792 () Int)
(declare-fun x795 () Int)
(declare-fun x1777 () Int)
(declare-fun x1310 () Int)
(declare-fun x1475 () Int)
(declare-fun x758 () Int)
(declare-fun x1957 () Int)
(declare-fun x1885 () Int)
(declare-fun x867 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x275 () Int)
(declare-fun x1517 () Int)
(declare-fun x1104 () Int)
(declare-fun x432 () Bool)
(declare-fun x1827 () Int)
(declare-fun x1336 () Bool)
(declare-fun x675 () Int)
(declare-fun x960 () Int)
(declare-fun x481 () Int)
(declare-fun x390 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x301 () Bool)
(declare-fun x596 () Int)
(declare-fun x816 () Int)
(declare-fun x1239 () Bool)
(declare-fun x952 () Int)
(declare-fun x1334 (Int) Int)
(declare-fun x1308 () Bool)
(declare-fun x1544 () Int)
(declare-fun x1463 () Int)
(declare-fun x950 () Int)
(declare-fun x818 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x877 () Int)
(declare-fun x1024 () Int)
(declare-fun x1782 () Int)
(declare-fun x1710 () Bool)
(declare-fun x650 () Int)
(declare-fun x1729 () Bool)
(declare-fun x1863 () Int)
(declare-fun x926 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x538 () Int)
(declare-fun x368 () Int)
(declare-fun x1322 () Int)
(declare-fun x1556 () Bool)
(declare-fun x655 () Int)
(declare-fun x1508 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1397 () Int)
(declare-fun x509 () Bool)
(declare-fun x762 () Bool)
(declare-fun x607 () Int)
(declare-fun x1107 () Int)
(declare-fun x1920 () Int)
(declare-fun x399 () Bool)
(declare-fun x717 () Bool)
(declare-fun x858 () Int)
(declare-fun x553 () Int)
(declare-fun x1705 () Bool)
(declare-fun x664 () Int)
(declare-fun x973 () Bool)
(declare-fun x142 () Bool)
(declare-fun x26 () Int)
(declare-fun x1663 () Bool)
(declare-fun x132 () Int)
(declare-fun x1132 () Int)
(declare-fun x103 () Int)
(declare-fun x1825 () Bool)
(declare-fun x1727 () Int)
(declare-fun x1363 () Int)
(declare-fun x493 () Int)
(declare-fun x466 () Int)
(declare-fun x1407 () Int)
(declare-fun x673 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1182 () Int)
(declare-fun x1360 () Int)
(declare-fun x1098 () Bool)
(declare-fun x345 () Int)
(declare-fun x1645 () Int)
(declare-fun x401 () Int)
(declare-fun x1772 () Int)
(declare-fun x68 () Bool)
(declare-fun x49 () Int)
(declare-fun x1607 () Int)
(declare-fun x1728 () Int)
(declare-fun x237 () Int)
(declare-fun x122 () Int)
(declare-fun x204 () Int)
(declare-fun x2 () Int)
(declare-fun x1759 () Int)
(declare-fun x293 () Int)
(declare-fun x1948 () Bool)
(declare-fun x1928 () Int)
(declare-fun x716 () Int)
(declare-fun x1100 () Bool)
(declare-fun x101 () Int)
(declare-fun x117 () Bool)
(declare-fun x796 () Bool)
(declare-fun x686 () Int)
(declare-fun x1083 () Int)
(declare-fun x1713 () Int)
(declare-fun x622 () Bool)
(declare-fun x1249 () Int)
(declare-fun x1703 () Int)
(declare-fun x1952 () Int)
(declare-fun x395 () Int)
(declare-fun x1983 () Bool)
(declare-fun x575 () Bool)
(declare-fun x1150 () Int)
(declare-fun x810 () Bool)
(declare-fun x207 () Bool)
(declare-fun x351 () Int)
(declare-fun x626 () Int)
(declare-fun x1911 () Bool)
(declare-fun x1947 () Int)
(declare-fun x1429 () Int)
(declare-fun x1737 () Int)
(declare-fun x193 () Bool)
(declare-fun x899 () Int)
(declare-fun x1061 () Int)
(declare-fun x616 () Int)
(declare-fun x449 () Int)
(declare-fun x966 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1934 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1723 () Int)
(declare-fun x1058 () Int)
(declare-fun x311 () Bool)
(declare-fun x640 () Bool)
(declare-fun x1967 () Int)
(declare-fun x1856 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x186 () Int)
(declare-fun x1479 () Int)
(declare-fun x632 () Int)
(declare-fun x1080 () Int)
(declare-fun x1431 () Int)
(declare-fun x221 () Int)
(declare-fun x1228 () Bool)
(declare-fun x216 () Int)
(declare-fun x1485 () Int)
(declare-fun x1124 () Int)
(declare-fun x561 () Int)
(declare-fun x175 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x446 () Int)
(declare-fun x241 () Int)
(declare-fun x1050 () Int)
(declare-fun x1685 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1868 () Int)
(declare-fun x653 () Int)
(declare-fun x648 () Int)
(declare-fun x712 () Bool)
(declare-fun x1624 () Int)
(declare-fun x66 () Int)
(declare-fun x1620 () Int)
(declare-fun x458 () Int)
(declare-fun x364 () Int)
(declare-fun x13 () Int)
(declare-fun x1806 () Bool)
(declare-fun x1372 () Int)
(declare-fun x199 () Bool)
(declare-fun x82 () Int)
(declare-fun x1575 () Int)
(declare-fun x552 () Int)
(declare-fun x959 () Int)
(declare-fun x1057 () Int)
(declare-fun x1287 () Int)
(declare-fun x840 () Int)
(declare-fun x182 () Int)
(declare-fun x965 () Int)
(declare-fun x916 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x143 () Int)
(declare-fun x1520 () Int)
(declare-fun x397 () Int)
(declare-fun x628 () Bool)
(declare-fun x779 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x658 () Int)
(declare-fun x1901 () Int)
(declare-fun x1335 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1417 () Int)
(declare-fun x283 () Bool)
(declare-fun x1038 () Int)
(declare-fun x469 () Int)
(declare-fun x627 () Int)
(declare-fun x1026 () Int)
(declare-fun x69 () Int)
(declare-fun x93 () Int)
(declare-fun x1436 () Int)
(declare-fun x1746 () Int)
(declare-fun x824 () Bool)
(declare-fun x863 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x1946 () Int)
(declare-fun x1234 () Bool)
(declare-fun x993 () Int)
(declare-fun x1692 () Int)
(declare-fun x645 () Int)
(declare-fun x238 () Int)
(declare-fun x1252 () Bool)
(declare-fun x566 () Int)
(declare-fun x427 () Int)
(declare-fun x1985 () Int)
(declare-fun x1141 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x350 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1964 () Int)
(declare-fun x994 () Bool)
(declare-fun x588 () Int)
(declare-fun x167 () Int)
(declare-fun x845 () Bool)
(declare-fun x757 () Int)
(declare-fun x1096 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x1194 () Int)
(declare-fun x540 () Int)
(declare-fun x1667 () Bool)
(declare-fun x1458 () Int)
(declare-fun x453 () Int)
(declare-fun x1701 () Int)
(declare-fun x1630 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1071 () Bool)
(declare-fun x866 () Int)
(declare-fun x223 () Int)
(declare-fun x774 () Int)
(declare-fun x769 () Bool)
(declare-fun x1950 () Int)
(declare-fun x924 () Int)
(declare-fun x1661 () Int)
(declare-fun x1354 () Int)
(declare-fun x1674 () Bool)
(declare-fun x936 () Int)
(declare-fun x992 () Int)
(declare-fun x324 () Int)
(declare-fun x456 () Int)
(declare-fun x328 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x479 () Bool)
(declare-fun x595 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x562 () Int)
(declare-fun x1538 () Int)
(declare-fun x969 () Bool)
(declare-fun x676 () Int)
(declare-fun x1134 () Bool)
(declare-fun x426 () Int)
(declare-fun x392 () Bool)
(declare-fun x1090 () Int)
(declare-fun x273 () Bool)
(declare-fun x1190 () Int)
(declare-fun x1019 () Bool)
(declare-fun x1427 () Int)
(declare-fun x573 () Int)
(declare-fun x1188 () Int)
(declare-fun x740 () Int)
(declare-fun x217 () Int)
(declare-fun x75 () Int)
(declare-fun x1435 () Int)
(declare-fun x511 () Int)
(declare-fun x1656 () Int)
(declare-fun x74 () Int)
(declare-fun x1720 () Int)
(declare-fun x1285 () Int)
(declare-fun x492 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1753 () Bool)
(declare-fun x1511 () Int)
(declare-fun x1616 () Int)
(declare-fun x1583 () Bool)
(declare-fun x911 (Int) Int)
(declare-fun x1388 () Int)
(declare-fun x1242 () Bool)
(declare-fun x378 () Int)
(declare-fun x1087 () Bool)
(declare-fun x773 () Int)
(declare-fun x1755 () Bool)
(declare-fun x895 () Bool)
(declare-fun x317 () Int)
(declare-fun x1822 () Int)
(declare-fun x532 () Bool)
(declare-fun x1769 () Int)
(declare-fun x1747 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x1103 () Int)
(declare-fun x1412 () Int)
(declare-fun x1504 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x1800 () Int)
(declare-fun x478 () Int)
(declare-fun x713 () Int)
(declare-fun x1477 () Int)
(declare-fun x822 () Int)
(declare-fun x29 () Bool)
(declare-fun x162 () Int)
(declare-fun x747 () Int)
(declare-fun x1718 () Bool)
(declare-fun x976 () Int)
(declare-fun x633 () Bool)
(declare-fun x4 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1257 () Int)
(declare-fun x164 () Int)
(declare-fun x1930 () Bool)
(declare-fun x610 () Int)
(declare-fun x321 () Int)
(declare-fun x814 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x692 () Int)
(declare-fun x1455 () Bool)
(declare-fun x934 () Int)
(declare-fun x228 () Int)
(declare-fun x1442 () Bool)
(declare-fun x70 () Int)
(declare-fun x1264 () Bool)
(declare-fun x1016 () Int)
(declare-fun x356 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1152 () Int)
(declare-fun x1627 () Int)
(declare-fun x1792 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x319 () Bool)
(declare-fun x1695 () Int)
(declare-fun x1587 () Int)
(declare-fun x1851 () Bool)
(declare-fun x310 () Int)
(declare-fun x1936 () Int)
(declare-fun x158 () Int)
(declare-fun x1644 () Int)
(declare-fun x722 () Int)
(declare-fun x388 () Bool)
(declare-fun x1811 () Int)
(declare-fun x259 () Int)
(declare-fun x394 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x280 () Int)
(declare-fun x1724 () Bool)
(declare-fun x115 () Int)
(declare-fun x327 () Int)
(declare-fun x307 () Int)
(declare-fun x462 () Bool)
(declare-fun x739 () Bool)
(declare-fun x698 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1677 () Int)
(declare-fun x577 () Int)
(declare-fun x1671 () Int)
(declare-fun x255 () Bool)
(declare-fun x1648 () Int)
(declare-fun x665 () Int)
(declare-fun x1529 () Bool)
(declare-fun x1801 () Int)
(declare-fun x1340 () Bool)
(declare-fun x57 () Int)
(declare-fun x1891 () Int)
(declare-fun x620 () Bool)
(declare-fun x1871 () Int)
(declare-fun x37 () Bool)
(declare-fun x873 () Bool)
(declare-fun x134 () Bool)
(declare-fun x1453 () Int)
(declare-fun x1189 () Int)
(declare-fun x1007 () Int)
(declare-fun x1988 () Bool)
(declare-fun x334 () Int)
(declare-fun x828 () Int)
(declare-fun x3 () Int)
(declare-fun x943 () Int)
(declare-fun x1582 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x51 () Int)
(declare-fun x318 () Bool)
(declare-fun x1530 () Int)
(declare-fun x707 () Int)
(declare-fun x1608 () Bool)
(declare-fun x402 () Int)
(declare-fun x1170 () Bool)
(declare-fun x444 () Int)
(declare-fun x61 () Int)
(declare-fun x710 () Bool)
(declare-fun x687 () Bool)
(declare-fun x961 () Int)
(declare-fun x1599 () Bool)
(declare-fun x332 () Bool)
(declare-fun x567 () Int)
(declare-fun x1173 () Int)
(declare-fun x772 () Int)
(declare-fun x1571 () Int)
(declare-fun x16 () Bool)
(declare-fun x556 () Int)
(declare-fun x159 () Bool)
(declare-fun x946 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1862 () Int)
(declare-fun x174 () Int)
(declare-fun x1962 () Bool)
(declare-fun x276 () Bool)
(declare-fun x1474 () Int)
(declare-fun x123 () Int)
(declare-fun x1201 () Int)
(declare-fun x731 () Int)
(declare-fun x53 () Bool)
(declare-fun x1651 () Int)
(declare-fun x954 () Bool)
(declare-fun x770 () Int)
(declare-fun x539 () Int)
(declare-fun x1343 () Bool)
(declare-fun x376 () Int)
(declare-fun x1312 () Int)
(declare-fun x799 () Bool)
(declare-fun x296 () Int)
(declare-fun x314 () Bool)
(declare-fun x1148 (Int) Int)
(declare-fun x183 () Int)
(declare-fun x666 () Bool)
(declare-fun x499 () Int)
(declare-fun x295 () Int)
(declare-fun x253 () Int)
(declare-fun x408 () Bool)
(declare-fun x778 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x231 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1223 () Int)
(declare-fun x433 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x754 () Int)
(declare-fun x120 () Int)
(declare-fun x951 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x1510 () Int)
(declare-fun x1836 () Bool)
(declare-fun x1423 () Int)
(declare-fun x119 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x857 () Bool)
(declare-fun x113 () Bool)
(declare-fun x206 () Int)
(declare-fun x1816 () Int)
(declare-fun x94 () Int)
(declare-fun x1981 () Int)
(declare-fun x809 () Int)
(declare-fun x893 () Bool)
(declare-fun x1870 () Int)
(declare-fun x842 () Int)
(declare-fun x1830 () Int)
(declare-fun x1846 (Int) Int)
(declare-fun x425 () Int)
(declare-fun x43 () Int)
(declare-fun x1898 () Int)
(declare-fun x154 () Int)
(declare-fun x1883 () Bool)
(declare-fun x856 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x90 () Int)
(declare-fun x1709 () Int)
(declare-fun x789 () Int)
(declare-fun x198 () Int)
(declare-fun x997 () Int)
(declare-fun x1018 () Bool)
(declare-fun x1011 () Int)
(declare-fun x1923 () Int)
(declare-fun x1566 () Int)
(declare-fun x1327 () Int)
(declare-fun x218 () Int)
(declare-fun x637 () Int)
(declare-fun x1902 () Int)
(declare-fun x1546 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x715 () Bool)
(declare-fun x995 () Bool)
(declare-fun x208 () Int)
(declare-fun x1585 () Int)
(declare-fun x558 () Bool)
(declare-fun x429 () Int)
(declare-fun x1284 () Bool)
(declare-fun x1820 () Int)
(declare-fun x563 () Bool)
(declare-fun x674 () Bool)
(declare-fun x354 (Int) Bool)
(declare-fun x19 () Bool)
(declare-fun x483 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x1505 () Int)
(declare-fun x72 () Bool)
(declare-fun x696 () Int)
(declare-fun x1834 () Int)
(declare-fun x591 () Bool)
(declare-fun x684 () Int)
(declare-fun x624 () Int)
(declare-fun x719 () Bool)
(declare-fun x1860 () Int)
(declare-fun x1861 () Int)
(declare-fun x656 () Int)
(declare-fun x1865 () Int)
(declare-fun x383 () Int)
(declare-fun x1708 () Int)
(declare-fun x694 () Int)
(declare-fun x745 () Int)
(declare-fun x1687 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x1119 () Int)
(declare-fun x813 () Int)
(declare-fun x347 () Int)
(declare-fun x1278 () Int)
(declare-fun x975 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1117 () Int)
(declare-fun x150 () Int)
(declare-fun x1248 () Bool)
(declare-fun x496 () Bool)
(declare-fun x382 () Bool)
(declare-fun x956 () Int)
(declare-fun x1185 () Int)
(declare-fun x1137 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x859 () Bool)
(declare-fun x1569 () Int)
(declare-fun x1376 () Int)
(declare-fun x114 () Int)
(declare-fun x126 () Int)
(declare-fun x79 () Int)
(declare-fun x1315 () Bool)
(declare-fun x921 () Int)
(declare-fun x804 () Int)
(declare-fun x746 () Int)
(declare-fun x871 () Bool)
(declare-fun x584 () Int)
(declare-fun x693 () Int)
(declare-fun x565 () Bool)
(declare-fun x917 () Int)
(declare-fun x1653 () Int)
(declare-fun x1115 () Int)
(declare-fun x213 () Int)
(declare-fun x1490 () Bool)
(declare-fun x42 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1415 () Bool)
(declare-fun x771 () Int)
(declare-fun x768 () Bool)
(declare-fun x786 () Int)
(declare-fun x1966 () Bool)
(declare-fun x244 () Int)
(declare-fun x530 () Int)
(declare-fun x1731 () Bool)
(declare-fun x151 () Int)
(declare-fun x912 () Int)
(declare-fun x1394 () Int)
(declare-fun x808 () Int)
(declare-fun x1419 () Int)
(declare-fun x797 () Bool)
(declare-fun x106 () Int)
(declare-fun x1356 () Bool)
(declare-fun x419 () Int)
(declare-fun x1940 () Int)
(declare-fun x417 () Int)
(declare-fun x192 () Bool)
(declare-fun x1293 () Int)
(declare-fun x87 () Int)
(declare-fun x457 () Int)
(declare-fun x1537 () Bool)
(declare-fun x978 () Bool)
(declare-fun x918 () Int)
(declare-fun x361 () Int)
(declare-fun x1051 () Bool)
(declare-fun x227 () Int)
(declare-fun x1230 () Int)
(declare-fun x1439 () Int)
(declare-fun x372 (Int Int) Int)
(declare-fun x1031 () Int)
(declare-fun x593 () Bool)
(declare-fun x1910 () Int)
(declare-fun x968 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1880 () Int)
(declare-fun x1638 () Int)
(declare-fun x31 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x1437 () Int)
(declare-fun x513 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x844 () Bool)
(declare-fun x812 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x1078 () Int)
(declare-fun x1330 () Int)
(declare-fun x1261 () Bool)
(declare-fun x348 () Int)
(declare-fun x559 () Bool)
(declare-fun x56 () Int)
(declare-fun x1380 () Int)
(declare-fun x1198 () Int)
(declare-fun x1297 () Int)
(declare-fun x1272 () Bool)
(declare-fun x1932 () Int)
(declare-fun x641 () Int)
(declare-fun x437 () Int)
(declare-fun x269 () Int)
(declare-fun x1159 () Bool)
(declare-fun x409 () Int)
(declare-fun x1640 () Int)
(declare-fun x1203 () Bool)
(declare-fun x359 () Bool)
(declare-fun x209 () Bool)
(declare-fun x510 () Int)
(declare-fun x257 () Bool)
(declare-fun x473 () Bool)
(declare-fun x129 () Bool)
(declare-fun x1917 () Int)
(declare-fun x472 () Int)
(declare-fun x24 () Int)
(declare-fun x1008 () Int)
(declare-fun x630 () Bool)
(declare-fun x614 () Int)
(declare-fun x52 () Bool)
(declare-fun x465 () Bool)
(declare-fun x147 () Int)
(declare-fun x662 () Bool)
(declare-fun x1441 () Int)
(declare-fun x379 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x1109 () Int)
(declare-fun x642 () Int)
(declare-fun x883 () Int)
(declare-fun x211 () Bool)
(declare-fun x634 () Int)
(declare-fun x1756 () Int)
(declare-fun x894 () Bool)
(declare-fun x1584 () Int)
(declare-fun x543 () Bool)
(declare-fun x548 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x287 () Int)
(declare-fun x420 () Int)
(declare-fun x1602 () Int)
(declare-fun x568 () Int)
(declare-fun x1652 () Int)
(declare-fun x794 () Int)
(declare-fun x1218 () Bool)
(declare-fun x197 () Int)
(declare-fun x1035 () Int)
(declare-fun x1783 () Int)
(declare-fun x1133 () Int)
(declare-fun x59 () Bool)
(declare-fun x1265 () Int)
(declare-fun x415 () Int)
(declare-fun x371 (Int Int) Int)
(declare-fun x862 () Bool)
(declare-fun x872 () Int)
(declare-fun x1590 () Int)
(declare-fun x1160 () Int)
(declare-fun x1829 () Bool)
(declare-fun x1047 () Int)
(declare-fun x107 () Int)
(declare-fun x1484 () Int)
(declare-fun x165 () Int)
(declare-fun x1498 () Int)
(declare-fun x852 () Int)
(declare-fun x705 () Int)
(declare-fun x1817 (Int) Int)
(declare-fun x1908 () Int)
(declare-fun x741 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x839 () Int)
(declare-fun x1131 () Int)
(declare-fun x1382 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1760 () Bool)
(declare-fun x604 () Bool)
(declare-fun x163 () Int)
(declare-fun x1686 () Int)
(declare-fun x1099 () Bool)
(declare-fun x67 () Bool)
(declare-fun x141 () Bool)
(declare-fun x139 () Bool)
(declare-fun x590 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1945 () Int)
(declare-fun x279 () Bool)
(declare-fun x468 () Int)
(declare-fun x1986 () Int)
(declare-fun x1213 () Int)
(declare-fun x1403 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1127 () Bool)
(declare-fun x169 () Int)
(declare-fun x1613 () Int)
(declare-fun x131 () Int)
(declare-fun x1186 () Int)
(declare-fun x928 () Int)
(declare-fun x1876 () Bool)
(declare-fun x1086 () Int)
(declare-fun x522 () Int)
(declare-fun x335 () Bool)
(declare-fun x362 () Int)
(declare-fun x765 () Bool)
(declare-fun x1852 () Int)
(declare-fun x1113 () Int)
(declare-fun x1235 () Bool)
(declare-fun x459 () Int)
(declare-fun x1596 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x243 () Bool)
(declare-fun x369 () Bool)
(declare-fun x205 () Int)
(declare-fun x1319 () Bool)
(declare-fun x1001 () Int)
(declare-fun x1867 () Bool)
(declare-fun x663 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1065 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1682 () Int)
(declare-fun x1688 () Int)
(declare-fun x121 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x1158 () Int)
(declare-fun x941 (Int) Int)
(declare-fun x1625 () Int)
(declare-fun x330 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x1513 () Int)
(declare-fun x1339 () Int)
(declare-fun x1368 () Int)
(declare-fun x1030 () Int)
(declare-fun x80 () Int)
(declare-fun x1482 () Int)
(declare-fun x1420 () Int)
(declare-fun x701 () Bool)
(declare-fun x518 () Int)
(declare-fun x527 () Bool)
(declare-fun x373 () Bool)
(declare-fun x443 () Bool)
(declare-fun x1409 () Int)
(declare-fun x1534 () Int)
(declare-fun x1232 () Int)
(declare-fun x835 () Bool)
(declare-fun x874 () Int)
(declare-fun x322 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1987 () Int)
(declare-fun x1823 () Bool)
(declare-fun x896 () Int)
(declare-fun x1953 () Int)
(declare-fun x168 () Int)
(declare-fun x775 () Int)
(declare-fun x1669 () Int)
(declare-fun x1815 () Int)
(declare-fun x1845 () Bool)
(declare-fun x1434 () Int)
(declare-fun x1875 () Bool)
(declare-fun x982 () Bool)
(declare-fun x1658 () Int)
(declare-fun x471 () Bool)
(declare-fun x1233 () Int)
(declare-fun x990 () Int)
(declare-fun x781 () Int)
(declare-fun x489 () Int)
(declare-fun x1142 () Int)
(declare-fun x1502 () Int)
(declare-fun x683 () Bool)
(declare-fun x832 () Int)
(declare-fun x250 () Bool)
(declare-fun x1819 () Int)
(declare-fun x1212 () Bool)
(declare-fun x571 () Int)
(declare-fun x1785 () Bool)
(declare-fun x270 () Bool)
(declare-fun x1079 () Int)
(declare-fun x833 () Int)
(declare-fun x1881 () Bool)
(declare-fun x27 () Int)
(declare-fun x190 () Int)
(declare-fun x677 () Int)
(declare-fun x1181 () Bool)
(declare-fun x1615 () Int)
(declare-fun x753 () Int)
(declare-fun x847 () Bool)
(declare-fun x393 () Bool)
(declare-fun x1425 () Int)
(declare-fun x1931 () Int)
(declare-fun x971 () Int)
(declare-fun x1466 () Bool)
(declare-fun x1912 () Int)
(declare-fun x1145 () Bool)
(declare-fun x735 () Int)
(declare-fun x1225 () Int)
(declare-fun x851 () Int)
(declare-fun x970 () Bool)
(declare-fun x703 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x1393 () Int)
(declare-fun x733 () Int)
(declare-fun x234 () Int)
(declare-fun x1227 () Int)
(declare-fun x445 () Int)
(declare-fun x370 () Int)
(declare-fun x1271 () Int)
(declare-fun x5 () Bool)
(declare-fun x868 () Int)
(declare-fun x612 () Bool)
(declare-fun x98 () Bool)
(declare-fun x50 () Int)
(declare-fun x1192 () Int)
(declare-fun x1893 () Int)
(declare-fun x767 () Int)
(declare-fun x782 () Int)
(declare-fun x1634 () Bool)
(declare-fun x89 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1004 () Int)
(declare-fun x441 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x760 () Bool)
(declare-fun x268 () Bool)
(declare-fun x428 () Int)
(declare-fun x991 () Bool)
(declare-fun x1237 () Int)
(declare-fun x1586 () Int)
(declare-fun x546 () Int)
(declare-fun x750 () Int)
(declare-fun x1796 () Bool)
(declare-fun x133 () Int)
(declare-fun x176 () Int)
(declare-fun x724 () Int)
(declare-fun x600 () Int)
(declare-fun x289 () Int)
(declare-fun x285 () Int)
(declare-fun x910 () Int)
(declare-fun x1 () Int)
(declare-fun x580 () Int)
(declare-fun x260 () Bool)
(declare-fun x180 () Bool)
(declare-fun x837 () Int)
(declare-fun x667 () Int)
(declare-fun x890 () Bool)
(declare-fun x841 () Int)
(declare-fun x720 () Int)
(declare-fun x63 () Int)
(declare-fun x1097 () Int)
(declare-fun x671 () Int)
(declare-fun x1675 (Int Int Int Int) Int)
(declare-fun x278 () Int)
(declare-fun x83 () Bool)
(declare-fun x709 () Bool)
(declare-fun x333 () Bool)
(declare-fun x535 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1492 () Int)
(declare-fun x1149 () Int)
(declare-fun x1619 () Bool)
(declare-fun x77 () Bool)
(declare-fun x631 () Int)
(declare-fun x1048 () Int)
(declare-fun x97 () Int)
(declare-fun x1208 () Int)
(declare-fun x967 () Int)
(declare-fun x1068 () Bool)
(declare-fun x1804 () Int)
(declare-fun x81 () Bool)
(declare-fun x11 () Bool)
(declare-fun x582 () Int)
(declare-fun x914 () Bool)
(declare-fun x46 () Int)
(declare-fun x1328 () Int)
(declare-fun x820 () Int)
(declare-fun x110 () Int)
(declare-fun x706 () Int)
(declare-fun x1286 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x252 () Int)
(declare-fun x128 () Bool)
(declare-fun x452 () Int)
(declare-fun x40 () Int)
(declare-fun x617 () Int)
(declare-fun x586 () Bool)
(declare-fun x541 () Bool)
(declare-fun x888 () Int)
(declare-fun x1897 () Int)
(declare-fun x447 () Int)
(declare-fun x355 () Int)
(declare-fun x1869 () Bool)
(declare-fun x282 () Int)
(declare-fun x1668 () Int)
(declare-fun x1603 () Bool)
(declare-fun x669 () Bool)
(declare-fun x300 () Int)
(declare-fun x1707 () Int)
(declare-fun x436 () Int)
(declare-fun x1495 () Int)
(declare-fun x504 () Int)
(declare-fun x1161 () Int)
(declare-fun x1914 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x1657 () Int)
(declare-fun x1593 () Int)
(declare-fun x1578 () Int)
(declare-fun x1177 () Bool)
(declare-fun x1843 () Int)
(declare-fun x124 () Int)
(declare-fun x1833 () Bool)
(declare-fun x412 () Int)
(declare-fun x385 () Int)
(declare-fun x860 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x805 () Bool)
(declare-fun x986 () Bool)
(declare-fun x92 () Bool)
(declare-fun x1551 () Int)
(declare-fun x71 () Int)
(declare-fun x506 () Int)
(declare-fun x1874 () Bool)
(declare-fun x1577 () Int)
(declare-fun x181 () Int)
(declare-fun x160 () Int)
(declare-fun x598 () Int)
(declare-fun x1884 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x685 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x876 () Int)
(declare-fun x1649 () Bool)
(declare-fun x329 () Int)
(declare-fun x152 () Bool)
(declare-fun x864 () Bool)
(declare-fun x1395 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1872 () Int)
(declare-fun x944 () Int)
(declare-fun x1444 () Bool)
(declare-fun x1678 () Int)
(declare-fun x886 () Bool)
(declare-fun x15 () Int)
(declare-fun x1808 () Int)
(declare-fun x1216 () Int)
(declare-fun x36 () Int)
(declare-fun x494 () Int)
(declare-fun x806 () Int)
(declare-fun x303 () Bool)
(declare-fun x737 () Int)
(declare-fun x1683 () Bool)
(declare-fun x1433 () Int)
(declare-fun x1418 () Int)
(declare-fun x702 () Bool)
(declare-fun x1646 () Int)
(declare-fun x1246 () Int)
(declare-fun x467 () Int)
(declare-fun x1581 () Int)
(declare-fun x1381 () Bool)
(declare-fun x148 () Bool)
(declare-fun x1519 () Int)
(declare-fun x245 () Int)
(declare-fun x1531 () Bool)
(declare-fun x1963 () Int)
(declare-fun x680 () Int)
(declare-fun x1255 () Int)
(declare-fun x20 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x557 () Int)
(declare-fun x391 () Int)
(declare-fun x1523 () Int)
(declare-fun x78 () Int)
(declare-fun x545 () Int)
(declare-fun x263 () Int)
(declare-fun x1541 () Int)
(declare-fun x6 () Bool)
(declare-fun x1665 () Int)
(declare-fun x1545 () Bool)
(declare-fun x377 (Int) Int)
(declare-fun x819 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x1207 () Int)
(declare-fun x749 () Bool)
(declare-fun x155 () Int)
(declare-fun x884 () Bool)
(declare-fun x435 () Int)
(declare-fun x1738 () Int)
(declare-fun x323 () Bool)
(declare-fun x1521 () Int)
(declare-fun x723 () Int)
(declare-fun x790 () Int)
(declare-fun x927 () Int)
(declare-fun x271 () Int)
(declare-fun x166 () Bool)
(declare-fun x1288 () Int)
(declare-fun x1831 () Bool)
(declare-fun x1821 () Int)
(declare-fun x1116 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1093 () Int)
(declare-fun x999 () Bool)
(declare-fun x1894 () Bool)
(declare-fun x1314 () Int)
(declare-fun x277 () Int)
(declare-fun x304 () Int)
(declare-fun x1457 () Int)
(declare-fun x1183 () Int)
(declare-fun x1268 () Bool)
(declare-fun x34 () Int)
(declare-fun x434 () Int)
(declare-fun x922 () Bool)
(declare-fun x1200 () Int)
(declare-fun x1814 () Int)
(declare-fun x288 () Int)
(declare-fun x65 (Int) Int)
(declare-fun x1224 () Bool)
(declare-fun x691 () Int)
(declare-fun x1598 () Int)
(declare-fun x1494 () Bool)
(declare-fun x1046 () Int)
(declare-fun x448 () Int)
(declare-fun x1361 () Int)
(declare-fun x297 () Int)
(declare-fun x1313 () Int)
(declare-fun x834 () Int)
(declare-fun x1332 () Bool)
(declare-fun x54 () Bool)
(declare-fun x1766 () Int)
(declare-fun x611 () Int)
(declare-fun x502 () Int)
(declare-fun x578 () Int)
(declare-fun x1835 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1623 () Int)
(declare-fun x1542 () Bool)
(declare-fun x638 () Int)
(declare-fun x267 () Int)
(declare-fun x1787 () Bool)
(declare-fun x220 (Int) Int)
(declare-fun x135 () Int)
(declare-fun x519 (Int) Int)
(declare-fun x203 () Bool)
(declare-fun x1318 () Int)
(declare-fun x512 () Int)
(declare-fun x1211 () Int)
(declare-fun x549 () Int)
(declare-fun x1918 () Int)
(declare-fun x331 () Bool)
(declare-fun x515 () Int)
(declare-fun x286 () Bool)
(declare-fun x1676 () Int)
(declare-fun x964 () Bool)
(declare-fun x761 () Int)
(declare-fun x487 () Bool)
(declare-fun x939 () Int)
(declare-fun x1045 () Int)
(declare-fun x266 () Int)
(declare-fun x1818 () Int)
(declare-fun x1524 () Int)
(declare-fun x599 () Int)
(declare-fun x601 () Int)
(declare-fun x1840 () Bool)
(declare-fun x1847 () Int)
(declare-fun x1573 () Int)
(declare-fun x1968 () Int)
(declare-fun x413 () Int)
(declare-fun x955 () Int)
(declare-fun x1673 () Bool)
(declare-fun x1454 () Int)
(declare-fun x7 () Bool)
(declare-fun x1745 () Int)
(declare-fun x1554 () Int)
(declare-fun x1196 () Int)
(declare-fun x1899 () Int)
(declare-fun x1664 () Int)
(declare-fun x721 () Int)
(declare-fun x517 () Int)
(declare-fun x1600 () Bool)
(declare-fun x406 () Int)
(declare-fun x144 () Bool)
(declare-fun x1106 () Int)
(declare-fun x1984 () Bool)
(declare-fun x848 () Int)
(declare-fun x1374 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1238 () Int)
(declare-fun x191 () Bool)
(declare-fun x488 () Int)
(declare-fun x1697 () Int)
(declare-fun x294 () Int)
(declare-fun x320 () Int)
(declare-fun x1480 () Int)
(declare-fun x1199 () Bool)
(declare-fun x1810 () Int)
(declare-fun x793 () Int)
(declare-fun x424 () Int)
(declare-fun x1903 () Bool)
(declare-fun x508 () Bool)
(declare-fun x784 () Int)
(declare-fun x460 () Int)
(declare-fun x1506 () Int)
(declare-fun x226 () Int)
(declare-fun x853 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x1570 () Int)
(declare-fun x1275 () Bool)
(declare-fun x416 () Int)
(declare-fun x1378 () Bool)
(declare-fun x1691 () Int)
(declare-fun x1568 () Bool)
(declare-fun x291 () Bool)
(declare-fun x759 () Int)
(declare-fun x1965 () Int)
(declare-fun x1938 (Int Int Int) Int)
(declare-fun x1202 () Int)
(declare-fun x977 () Int)
(declare-fun x1076 () Int)
(declare-fun x821 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1081 () Int)
(declare-fun x18 () Int)
(declare-fun x463 () Int)
(declare-fun x697 () Bool)
(declare-fun x1140 () Int)
(declare-fun x1773 () Int)
(declare-fun x290 () Int)
(declare-fun x1739 () Bool)
(declare-fun x803 () Bool)
(declare-fun x581 () Int)
(declare-fun x1085 () Int)
(declare-fun x1794 () Int)
(declare-fun x1171 () Int)
(declare-fun x1789 () Int)
(declare-fun x923 () Bool)
(declare-fun x1267 () Int)
(declare-fun x224 () Bool)
(declare-fun x531 () Int)
(declare-fun x1032 () Int)
(declare-fun x660 () Bool)
(declare-fun x10 () Int)
(declare-fun x972 () Bool)
(declare-fun x30 () Int)
(declare-fun x357 () Bool)
(declare-fun x130 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1562 () Int)
(declare-fun x1550 () Bool)
(declare-fun x555 () Int)
(declare-fun x788 () Bool)
(declare-fun x1352 () Int)
(declare-fun x564 () Bool)
(declare-fun x1309 () Int)
(declare-fun x326 () Int)
(declare-fun x885 () Int)
(declare-fun x1679 () Bool)
(declare-fun x1896 () Bool)
(declare-fun x400 () Int)
(declare-fun x521 () Int)
(declare-fun x929 () Int)
(declare-fun x1842 () Int)
(declare-fun x1462 () Bool)
(declare-fun x281 () Bool)
(declare-fun x235 () Int)
(declare-fun x309 () Int)
(declare-fun x1118 () Bool)
(declare-fun x752 () Int)
(declare-fun x636 () Bool)
(declare-fun x815 () Int)
(declare-fun x1353 () Int)
(declare-fun x407 () Bool)
(declare-fun x1826 () Int)
(declare-fun x1749 () Int)
(declare-fun x1294 () Int)
(declare-fun x1980 () Int)
(declare-fun x726 () Int)
(declare-fun x728 () Int)
(declare-fun x188 () Bool)
(declare-fun x179 () Int)
(declare-fun x229 () Int)
(declare-fun x254 () Bool)
(declare-fun x195 () Bool)
(declare-fun x729 () Int)
(declare-fun x1138 () Int)
(declare-fun x1292 () Int)
(declare-fun x1231 () Int)
(declare-fun x1958 () Int)
(declare-fun x464 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x12 () Bool)
(declare-fun x1839 () Int)
(declare-fun x396 () Bool)
(declare-fun x242 () Int)
(declare-fun x551 () Int)
(declare-fun x751 () Bool)
(declare-fun x1366 () Int)
(declare-fun x1241 () Int)
(declare-fun x1788 () Bool)
(declare-fun x1916 () Int)
(declare-fun x1735 () Int)
(declare-fun x60 () Bool)
(declare-fun x45 () Bool)
(declare-fun x156 () Int)
(declare-fun x325 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1451 () Bool)
(declare-fun x1532 () Int)
(declare-fun x1311 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x470 () Bool)
(declare-fun x505 () Int)
(declare-fun x1460 () Bool)
(declare-fun x1082 () Int)
(declare-fun x1933 () Bool)
(declare-fun x1712 () Int)
(define-fun x1262 ((x609 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609) (>= x609 0)) x609 (- x609 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x560 ((x609 Int)) Int (ite (and (< x609 0) (>= x609 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x609 115792089237316195423570985008687907853269984665640564039457584007913129639936) x609))
(define-fun x800 ((x171 Int)) Bool (and (>= x171 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x171)))
(define-fun x461 ((x171 Int)) Bool (and (= (x1389 x171 115792089237316195423570985008687907853269984665640564039457584007913129639935) x171) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639935 x171) x171)))
(define-fun x1478 ((x171 Int)) Bool (and (= 0 (x1389 x171 0)) (= (x1389 0 x171) 0)))
(define-fun x1226 ((x171 Int)) Bool (= (x1389 x171 x171) x171))
(define-fun x261 ((x171 Int)) Bool (and (x1226 x171) (x461 x171) (x1478 x171)))
(define-fun x657 ((x171 Int) (x1969 Int)) Bool (= (x1389 x171 x1969) (x1389 x1969 x171)))
(define-fun x639 ((x171 Int) (x1969 Int)) Bool (and (=> (>= x171 0) (>= x171 (x1389 x171 x1969))) (<= 0 (x1389 x171 x1969)) (=> (>= x1969 0) (<= (x1389 x171 x1969) x1969))))
(define-fun x1915 ((x171 Int) (x1969 Int)) Bool (and (x639 x171 x1969) (x657 x171 x1969)))
(define-fun x1622 ((x171 Int)) Bool (= (mod x171 26959946667150639794667015087019630673637144422540572481103610249216) (x1389 x171 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x974 ((x171 Int)) Bool (and (x1622 x171) (x1915 x171 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1743 ((x171 Int)) Bool (= (x1389 x171 340282366920938463463374607431768211455) (mod x171 340282366920938463463374607431768211456)))
(define-fun x1176 ((x171 Int)) Bool (and (x1743 x171) (x1915 x171 340282366920938463463374607431768211455)))
(define-fun x1402 ((x32 Int)) Int 0)
(define-fun x1406 ((x32 Int)) Int 0)
(define-fun x1959 ((x32 Int)) Int 0)
(define-fun x1660 ((x32 Int)) Int 0)
(define-fun x1324 ((x32 Int)) Int 0)
(define-fun x870 ((x32 Int)) Int 0)
(define-fun x1323 ((x32 Int)) Int 0)
(define-fun x1321 ((x32 Int)) Int 0)
(define-fun x1077 ((x32 Int)) Int 0)
(define-fun x1486 ((x32 Int)) Int 0)
(define-fun x1799 ((x32 Int)) Int 0)
(define-fun x48 ((x32 Int)) Int 0)
(define-fun x1175 ((x32 Int)) Int 0)
(define-fun x817 ((x32 Int)) Int (ite (< x32 x1978) (x1021 x32) 0))
(define-fun x1414 ((x32 Int)) Int (ite (and (>= x32 0) (< x32 x1978)) (x1279 x32) (x817 x32)))
(define-fun x1540 ((x32 Int)) Int (ite (= x32 x150) x101 (x1148 x32)))
(define-fun x1105 ((x32 Int)) Int (ite (= x131 x32) x1519 (x1540 x32)))
(define-fun x1790 ((x32 Int)) Int (ite (= x32 164) x103 (x1323 x32)))
(define-fun x1548 ((x32 Int)) Int (ite (= x32 196) x131 (x1790 x32)))
(define-fun x1064 ((x32 Int)) Int (ite (= 228 x32) x1636 (x1548 x32)))
(define-fun x1943 ((x32 Int)) Int (ite (= x32 128) 100 (x1406 x32)))
(define-fun x1736 ((x32 Int)) Int (ite (= x32 160) x1968 (x1064 x32)))
(define-fun x878 ((x32 Int)) Int (ite (and (> (+ 324 x1669) x32) (>= x32 324)) (x1736 (- x32 164)) (x1175 x32)))
(define-fun x95 ((x32 Int)) Int (ite (= x32 x131) x107 (x1105 x32)))
(define-fun x1628 ((x32 Int)) Int (ite (= x32 x1770) x1180 (x95 x32)))
(define-fun x1468 ((x32 Int)) Int (ite (= x1940 x32) x889 (x1631 x32)))
(define-fun x1424 ((x32 Int)) Int (ite (= x1457 x32) x1439 (x403 x32)))
(define-fun x265 ((x32 Int)) Int (ite (= x1233 x32) x1461 (x1017 x32)))
(define-fun x1805 ((x32 Int)) Int (ite (= x32 x1233) x740 (x1062 x32)))
(define-fun x1939 ((x32 Int)) Int (ite (= x490 x32) x1592 (x265 x32)))
(define-fun x1089 ((x32 Int)) Int (ite (= x490 x32) x952 (x1805 x32)))
(define-fun x1266 ((x32 Int)) Int (ite (= x827 x32) x610 (x1939 x32)))
(define-fun x1169 ((x32 Int)) Int (ite (= x32 x1657) x545 (x1266 x32)))
(define-fun x486 ((x32 Int)) Int (ite x1550 (ite x16 (x1169 x32) (x265 x32)) (x265 x32)))
(define-fun x989 ((x32 Int)) Int (ite (= x1638 x32) x1076 (x486 x32)))
(define-fun x1762 ((x32 Int)) Int (ite (= x827 x32) x452 (x1089 x32)))
(define-fun x830 ((x32 Int)) Int (ite (= x32 x1657) x1034 (x1762 x32)))
(define-fun x1487 ((x32 Int)) Int (ite x1550 (ite x16 (x830 x32) (x1805 x32)) (x1805 x32)))
(define-fun x375 ((x32 Int)) Int (ite (= x1638 x32) x1050 (x1487 x32)))
(define-fun x865 ((x32 Int)) Int (ite (= x1223 x32) x1676 (x989 x32)))
(define-fun x337 ((x32 Int)) Int (ite (= x1223 x32) x607 (x375 x32)))
(define-fun x184 ((x32 Int)) Int (ite (= x32 x1361) x1184 (x865 x32)))
(define-fun x1347 ((x32 Int)) Int (ite (= x1361 x32) x79 (x337 x32)))
(define-fun x1204 ((x32 Int)) Int (ite (= x32 x1388) x1231 (x1609 x32)))
(define-fun x1385 ((x32 Int)) Int (ite (= x1240 x32) x1328 (x184 x32)))
(define-fun x823 ((x32 Int)) Int (ite (= x32 x1240) x1797 (x1347 x32)))
(define-fun x763 ((x32 Int)) Int (ite x1550 (ite x16 (x1204 x32) (x1609 x32)) (x1609 x32)))
(define-fun x187 ((x32 Int)) Int (ite (= x787 x32) x18 (x763 x32)))
(define-fun x670 ((x32 Int)) Int (ite (= x32 x75) x1154 (x65 x32)))
(define-fun x869 ((x32 Int)) Int (ite x16 (x670 x32) (x65 x32)))
(define-fun x1326 ((x32 Int)) Int (ite x16 (x1169 x32) (x265 x32)))
(define-fun x533 ((x32 Int)) Int (ite x16 (x830 x32) (x1805 x32)))
(define-fun x1750 ((x32 Int)) Int (ite x16 (x1204 x32) (x1609 x32)))
(define-fun x398 ((x32 Int)) Int (ite x1550 (ite x16 (x670 x32) (x65 x32)) (x65 x32)))
(define-fun x1700 ((x32 Int)) Int (ite (= x32 x1213) x1636 (x878 x32)))
(define-fun x987 ((x32 Int)) Int (ite (= x32 x601) x304 (x1700 x32)))
(define-fun x887 ((x32 Int)) Int (ite (= x32 x178) x154 (x987 x32)))
(define-fun x1447 ((x32 Int)) Int (ite (= x503 x32) x304 (x887 x32)))
(define-fun x73 ((x32 Int)) Int (ite (= x898 x32) x943 (x1447 x32)))
(define-fun x1742 ((x32 Int)) Int (ite (= x32 x149) x1369 (x73 x32)))
(define-fun x55 ((x32 Int)) Int (ite (= x32 x1511) x103 (x1959 x32)))
(define-fun x1092 ((x32 Int)) Int (ite (= x32 x1101) x943 (x55 x32)))
(define-fun x1174 ((x32 Int)) Int (ite (= x32 x503) x293 (x1799 x32)))
(define-fun x339 ((x32 Int)) Int (ite (= x32 x501) x786 (x1092 x32)))
(define-fun x829 ((x32 Int)) Int (ite (and (<= x1027 x32) (> (+ x1027 x28) x32)) (x339 (- (+ x501 x32) x1027)) (x1742 x32)))
(define-fun x1859 ((x32 Int)) Int (ite (= x131 x32) x1342 (x1628 x32)))
(define-fun x1698 ((x32 Int)) Int (ite (= x3 x32) x1157 (x220 x32)))
(define-fun x1280 ((x32 Int)) Int (ite (= x1602 x32) x1502 (x1698 x32)))
(define-fun x605 ((x32 Int)) Int (ite x673 (x1280 x32) (x220 x32)))
(define-fun x1877 ((x32 Int)) Int (ite (= x32 x1398) x1484 (x605 x32)))
(define-fun x902 ((x32 Int)) Int (ite (= x32 x540) x1534 (x1877 x32)))
(define-fun x897 ((x32 Int)) Int (ite (= x32 0) 1 (x941 x32)))
(define-fun x336 ((x32 Int)) Int (ite (= x460 x32) x1692 (x1846 x32)))
(define-fun x1069 ((x32 Int)) Int (ite (= x32 x1371) x571 (x336 x32)))
(define-fun x1813 ((x32 Int)) Int (ite x673 (x1846 x32) (x1069 x32)))
(define-fun x125 ((x32 Int)) Int (ite (= x1401 x32) x1265 (x1813 x32)))
(define-fun x1000 ((x32 Int)) Int (ite (= x32 x233) x1536 (x125 x32)))
(define-fun x554 ((x32 Int)) Int (ite (= x32 0) 1 (x941 x32)))
(define-fun x688 ((x32 Int)) Int (ite (= x32 x1412) x1294 (x398 x32)))
(define-fun x1557 ((x32 Int)) Int (ite (= 324 x32) x179 (x48 x32)))
(define-fun x240 ((x32 Int)) Int (ite (= 0 x32) 1 (x1334 x32)))
(define-fun x1906 ((x32 Int)) Int (ite (= x32 0) 1 (x1334 x32)))
(define-fun x1028 ((x32 Int)) Int (ite x673 (x240 x32) (x1906 x32)))
(define-fun x1512 ((x32 Int)) Int (ite (and (< x32 388) (>= x32 356)) (x1028 (- x32 356)) (x1321 x32)))
(define-fun x742 ((x32 Int)) Int (ite (= x32 x1027) x1492 (x1557 x32)))
(define-fun x1346 ((x32 Int)) Int (ite x1694 (x897 x32) (x554 x32)))
(define-fun x785 ((x32 Int)) Int (ite (and (> (+ x1140 32) x32) (<= x1140 x32)) (x1346 (- x32 x1140)) (x1402 x32)))
(assert (= x1 (x1006 (x1938 64 x1 6))))
(assert (=> (= 0 x1500) (= (div x1292 x1500) 0)))
(assert (x800 x529))
(assert (x800 x1070))
(assert (x800 x632))
(assert (x800 x724))
(assert (x800 x1801))
(assert (x800 x315))
(assert (= (and x946 x1345) x644))
(assert (= (div x583 79228162514264337593543950336) (x372 x583 96)))
(assert (x800 x793))
(assert (= x701 (and x1633 (not x1036))))
(assert (x800 x1197))
(assert (=> (>= 10000 x150) (= (x377 x150) 0)))
(assert (=> (= 0 x599) (= 0 (div x400 x599))))
(assert (= (and (not x1214) x1274) x969))
(assert (=> (= 0 (+ x1626 x1795)) (= 0 (div x723 (+ x1795 x1626)))))
(assert (not (x354 (x1938 64 x103 1))))
(assert (= x1572 (and (not x1332) x1546)))
(assert (x800 x809))
(assert (x800 x521))
(assert (x800 x124))
(assert (= 20 (x1006 (x1675 40 20 (x372 x1952 96) (x372 x1418 96)))))
(assert (x800 x1712))
(assert (= (div x334 79228162514264337593543950336) (x372 x334 96)))
(assert (= 0 (x377 57896044618658097711785492504343953926975274699741220483192166611388333031422)))
(assert (= (x372 (+ x726 x1107) 1) (div (+ x726 x1107) 2)))
(assert (= (x377 (x1675 40 20 (x372 x263 96) (x372 x542 96))) (x1675 40 20 (x372 x263 96) (x372 x542 96))))
(assert (x800 x1048))
(assert (x800 x868))
(assert (x800 x293))
(assert (= (=> (and (or (and (not x663) (and (= x1072 x419) (= x1820 0))) (and x663 (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x608) (= x608 (* x304 x611)) (= x1820 (ite (> x1971 100) x1971 0)) (= x1971 (div x608 x1052)) (>= 340282366920938463463374607431768211455 x1052) (= x419 x1072) (>= x608 0) (>= x1052 1)))) (= x663 (= (ite (> 100 x611) (ite (> 100 x611) 1 0) (ite (< x1052 100) 1 0)) 0))) x77) x1306))
(assert (x800 x401))
(assert (not (x354 (x1675 40 20 (x372 x1749 96) (x372 x1510 96)))))
(assert (=> (= 0 x1818) (= 0 (div x917 x1818))))
(assert (= (div x714 2) (x372 x714 1)))
(assert (= x857 (=> (and (and (= x1332 (or (and (< x1453 100) (= true (<= x1453 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1453 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x190 (mod (* x111 x1811) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x1647 x402) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1934) (>= x1746 1) (= x97 (x1262 (+ x426 x111))) (= (x1262 (+ x511 x186)) x1249) (= (div x190 x97) x1644) (= (div x307 x748) x111) (= (mod (* x1637 x675) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x307) (<= 1 x97) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x1746) (= x748 (x1262 (+ x675 x49))) (= x675 (div x1934 x1746)) (= (+ x402 x1577) x1746) (= x402 (x372 x1249 1)) (= (x560 (- x1644 x402)) x1453) (>= x748 1)) (or (and (not x1332) (and (<= 1 x997) (= (mod (* x1811 x1697) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x809) (= (+ 1000000000000000 x402) x598) (= x363 (+ x49 x619)) (= x1061 (ite (or (and (= (<= x1093 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1453 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1093 x1453)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1453) (<= x1093 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x1697 (div x1009 x363)) (= x1093 (x560 (- x1941 x598))) (>= 115792089237316195423571325291054828791733448040247995807669039 x363) (= x1009 (mod (* x1637 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x809 x997) x1941) (= x619 (div x1287 (+ x598 x1577))) (= (mod (* x1647 x598) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1287) (= x997 (x1262 (+ x426 x1697))) (<= 1 x363))) (and (= 0 x1061) x1332))) x1220)))
(assert (=> (>= 10000 (x372 x1952 96)) (= (x377 (x372 x1952 96)) 0)))
(assert (= x536 (and x966 x470)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x583 96) (x372 x253 96))))
(assert (> (x1675 40 20 (x372 x1952 96) (x372 x1418 96)) 10000))
(assert (= 64 (x485 (x1938 64 x579 6))))
(assert (x800 x1678))
(assert (=> (<= x131 10000) (= (x377 x131) 0)))
(assert (< 10000 (x1938 64 x360 6)))
(assert (x800 x165))
(assert (x800 x1044))
(assert (= (x485 (x1675 40 20 (x372 x374 96) (x372 x905 96))) 40))
(assert (x800 x1438))
(assert (x354 3343790536))
(assert (x800 x665))
(assert (x800 x1178))
(assert (= (and x191 x970) x1244))
(assert (not (x354 (x1675 40 20 (x372 x430 96) (x372 x1778 96)))))
(assert (> (x1675 40 20 (x372 x1333 96) (x372 x1123 96)) 10000))
(assert (=> (= x1256 0) (= 0 (div x1437 x1256))))
(assert (=> (<= x1476 10000) (= (x377 x1476) 0)))
(assert (x800 x1386))
(assert (x800 x116))
(assert (= 0 (x377 115792089237316195423571325291054828791733448040247995807669039)))
(assert (= (x377 (x1938 64 x1241 6)) (x1938 64 x1241 6)))
(assert (= x1084 (or x1896 x480)))
(assert (x800 x1585))
(assert (x800 x49))
(assert (x800 x944))
(assert (not (x354 (x1938 64 x131 x1916))))
(assert (= (x1938 64 x131 0) (x377 (x1938 64 x131 0))))
(assert (= (or x379 x916) x491))
(assert (= (or x1836 x29) x1679))
(assert (= (x1006 (x1675 40 20 (x372 x1400 96) (x372 x366 96))) 20))
(assert (x800 x1007))
(assert (x800 x1574))
(assert (x800 x1131))
(assert (not (x354 (x1675 40 20 (x372 x1122 96) (x372 x892 96)))))
(assert (x800 x1480))
(assert (= (x1006 (x1938 64 x1588 6)) x1588))
(assert (x800 x277))
(assert (< 10000 (x1675 40 20 (x372 x277 96) (x372 x146 96))))
(assert (not (x354 (x1675 40 20 (x372 x1407 96) (x372 x833 96)))))
(assert (= (and x432 x1163) x1990))
(assert (= x903 (=> (= (< 0 x387) x1875) (and (=> (and (and (and (= x322 (> x746 x566)) (>= 340282366920938463463374607431768211455 x387)) (or (and (not x322) (and (= x808 x1953) (> x808 x1713) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1713)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1713)) (= x1162 (* 79228162514264337593543950336 x566)) (= 0 x155) (= x808 (x1262 (+ 20 x1353))) (= (* x746 79228162514264337593543950336) x1538) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1713) (= x1470 x1520) (= (x1675 40 20 (x372 x1538 96) (x372 x1162 96)) x1470) (<= x1713 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1353 (x1262 (+ x1562 20))) (<= x1713 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1713 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1562 (x1262 (+ x1713 32))))) (and (and (= (x1675 40 20 (x372 x229 96) (x372 x984 96)) x1394) (= x1394 x1520) (= x229 (* 79228162514264337593543950336 x566)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1713) (= x1656 (x1262 (+ 32 x1713))) (= x1953 x1763) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1713) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1713) (not (= x1713 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x1713 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (* x746 79228162514264337593543950336) x984) (= x155 1) (= x1763 (x1262 (+ x1055 20))) (not (= x1713 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (x1262 (+ x1656 20)) x1055) (> x1763 x1713)) x322))) x1875) x1315) (=> (and (not x1875) (and (= x1090 0) (= x206 x1713))) x1443)))))
(assert (x800 x350))
(assert (x800 x815))
(assert (= x586 (and x1378 x1134)))
(assert (= (x377 (x1938 64 x360 6)) (x1938 64 x360 6)))
(assert (< (x1675 40 20 (x372 x794 96) (x372 x1620 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x802))
(assert (x800 x1209))
(assert (= (x911 (x1675 40 20 (x372 x1707 96) (x372 x1986 96))) (x372 x1986 96)))
(assert (x800 x1862))
(assert (x800 x1481))
(assert (x800 x1886))
(assert (x800 x1255))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x650 96) (x372 x928 96))))
(assert (= x134 (=> (and (and (= (x1389 340282366920938463463374607431768211455 x285) x79) (= (x1389 340282366920938463463374607431768211455 x1886) x1184) (= (ite (not (> 100 x1886)) (ite (not (< x285 100)) 1 0) (ite (not (> 100 x1886)) 1 0)) x147) (= (> x1030 x746) x399) (= 1 x147)) (or (and (and (= x708 (x1262 (+ 20 x1164))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x33)) (= (* 79228162514264337593543950336 x746) x70) (= x367 x1491) (<= x33 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1164 (x1262 (+ 32 x33))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x33)) (= (x1675 40 20 (x372 x549 96) (x372 x70 96)) x1045) (< x33 x367) (<= x33 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1045 x1241) (= 0 x919) (= (* 79228162514264337593543950336 x1030) x549) (= (x1262 (+ x708 20)) x367) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x33)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x33)) (not x399)) (and x399 (and (not (= x33 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1491 x51) (= (x1675 40 20 (x372 x1744 96) (x372 x1665 96)) x1277) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x33)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x33)) (<= x33 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1262 (+ x551 20)) x51) (<= x33 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1665 (* x1030 79228162514264337593543950336)) (= x1277 x1241) (> x51 x33) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x33) (= (x1262 (+ 32 x33)) x1808) (= 1 x919) (= x551 (x1262 (+ x1808 20))) (= (* x746 79228162514264337593543950336) x1744))))) x855)))
(assert (=> (>= 10000 (x372 x263 96)) (= (x377 (x372 x263 96)) 0)))
(assert (x800 x1254))
(assert (= (x372 x1665 96) (div x1665 79228162514264337593543950336)))
(assert (x800 x915))
(assert (= (div x146 79228162514264337593543950336) (x372 x146 96)))
(assert (x1176 x1886))
(assert (x800 x1461))
(assert (= 40 (x485 (x1675 40 20 (x372 x334 96) (x372 x36 96)))))
(assert (= (div x638 79228162514264337593543950336) (x372 x638 96)))
(assert (= 64 (x485 (x1938 64 x1824 6))))
(assert (x800 x118))
(assert (= 6 (x519 (x1938 64 x1520 6))))
(assert (= (x1006 (x1938 64 x1520 6)) x1520))
(assert (x800 x1726))
(assert (x800 x1349))
(assert (= (div x1945 2) (x372 x1945 1)))
(assert (x800 x531))
(assert (x800 x387))
(assert (= (div x137 79228162514264337593543950336) (x372 x137 96)))
(assert (x800 x1103))
(assert (= (x911 (x1675 40 20 (x372 x1122 96) (x372 x892 96))) (x372 x892 96)))
(assert (x800 x1144))
(assert (= (x377 76450787359836037641860180984291677749980919077056822294353438043884394381312) 0))
(assert (=> (= 0 x1452) (= (div x1668 x1452) 0)))
(assert (=> (= 0 x1119) (= 0 (div x1837 x1119))))
(assert (= x1472 (=> (and (= false x1236) (= (x1698 x1602) x1477) (= 1 x1917) (= (x220 x1160) x1595) (not (> x1157 x1595)) (not (< x1502 x1477)) (= x1502 (x1262 (+ x1636 x1477))) (= x179 32) (= x1602 (x1938 64 x131 0)) (= (x1938 64 x103 0) x1160) (= x814 false) (= (x560 (- x1595 x1636)) x1157) (not (> x1636 x1595)) (= (x1938 64 x103 0) x3)) x1894)))
(assert (= (or x644 x1261) x988))
(assert (x800 x1482))
(assert (x800 x1436))
(assert (= x1823 (=> (and (and (= x1390 (div x34 x1681)) (= x34 (mod (* x1811 x1253) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1518 (mod (* x1509 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1642 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x556) true) (> 100 x556)) (> x556 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= 1 x948) (= x1309 (x1262 (+ x1113 x49))) (= (mod (* x1113 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x167) (= (x1262 (+ x516 x221)) x1475) (<= x948 57896044618658097711785492504343953926975274699741220483192166611388333031422) (= (div x1518 x948) x1113) (= x1509 (x372 x1475 1)) (= (+ x1509 x1577) x948) (= (x560 (- x1390 x1509)) x556) (= (div x167 x1309) x1253) (= x1681 (x1262 (+ x1253 x426))) (>= x1309 1) (>= x1681 1)) (or (and x1642 (= x747 0)) (and (and (= x298 (mod (* x342 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (or (and (< x556 x1395) (= (<= x1395 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x556 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x1395 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x556))) 1 0) x747) (<= 1 x1232) (= (div x1956 x412) x1465) (<= x412 115792089237316195423571325291054828791733448040247995807669039) (= (x1262 (+ x426 x1465)) x1232) (= x1485 (mod (* x1811 x1465) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x412 1) (= (+ 1000000000000000 x1509) x342) (= x1716 (div x1485 x1232)) (= (+ x449 x49) x412) (= x1395 (x560 (- x1716 x342))) (= x449 (div x298 (+ x1577 x342))) (= x1956 (mod (* x449 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x1642)))) x1167)))
(assert (not (x354 (x1675 40 20 (x372 x1333 96) (x372 x1123 96)))))
(assert (x800 x104))
(assert (= x203 (and x1068 x683)))
(assert (= x200 (or (and x1155 x1542) x1949)))
(assert (= (div x1641 79228162514264337593543950336) (x372 x1641 96)))
(assert (= x418 (and (not x1422) x1930)))
(assert (x800 x197))
(assert (= 40 (x485 (x1675 40 20 (x372 x1744 96) (x372 x1665 96)))))
(assert (= x893 (and (not x248) x491)))
(assert (= x1568 (or x1990 x276)))
(assert (not (x354 (x1675 40 20 (x372 x1590 96) (x372 x453 96)))))
(assert (x800 x1251))
(assert (= (x485 (x1675 40 20 (x372 x1333 96) (x372 x1123 96))) 40))
(assert (< 10000 (x1938 64 x103 1)))
(assert (not (x354 (x1675 40 20 (x372 x627 96) (x372 x1216 96)))))
(assert (x800 x244))
(assert (x800 x494))
(assert (x800 x1259))
(assert (x800 x1987))
(assert (x800 x1551))
(assert (x800 x692))
(assert (= (x372 x841 96) (x911 (x1675 40 20 (x372 x1830 96) (x372 x841 96)))))
(assert (x261 x1852))
(assert (x261 x826))
(assert (= (div x1475 2) (x372 x1475 1)))
(assert (= (=> (and (or (and x219 (and (= x1431 x616) (< x1072 x616) (= (x1675 40 20 (x372 x794 96) (x372 x1620 96)) x275) (= x275 x297) (= x1919 1) (= x1516 (x1262 (+ x1072 32))) (= (x1262 (+ 20 x1517)) x616) (= (* x746 79228162514264337593543950336) x1620) (not (= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (* x646 79228162514264337593543950336) x794) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1072)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1072) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1072)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1072) (<= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1262 (+ 20 x1516)) x1517))) (and (not x219) (and (< x1072 x641) (= x641 x1431) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1072) (<= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x277 (* 79228162514264337593543950336 x746)) (= x1210 (x1675 40 20 (x372 x277 96) (x372 x146 96))) (not (= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (<= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1072)) (= (* x646 79228162514264337593543950336) x146) (= x1196 (x1262 (+ 32 x1072))) (= x641 (x1262 (+ x1587 20))) (= x1210 x297) (= x1919 0) (= (x1262 (+ 20 x1196)) x1587)))) (= (> x746 x646) x219)) x272) x563))
(assert (= (=> (and (or (and (and (= x761 x1598) (= x811 x1387)) x470) (and (and (= x811 x1598) (= x1387 x1392)) (not x470))) (= x470 (= x120 0))) x674) x697))
(assert (x800 x444))
(assert (= 64 (x485 (x1938 64 x131 x1300))))
(assert (x800 x942))
(assert (=> (<= x103 10000) (= 0 (x377 x103))))
(assert (x800 x777))
(assert (x800 x1669))
(assert (= (and x1159 x414) x1694))
(assert (x800 x891))
(assert (= (x372 x1510 96) (div x1510 79228162514264337593543950336)))
(assert (x800 x1578))
(assert (x800 x1032))
(assert (x800 x1258))
(assert (x800 x675))
(assert (= (and x1247 (not x41)) x318))
(assert (x800 x340))
(assert (= (=> (and (or (and (= x82 0) x1408) (and (not x1408) (and (= x506 (+ 1000000000000000 x1082)) (= (x1262 (+ x426 x848)) x1083) (= (div x530 (+ x506 x1577)) x791) (= (mod (* x1637 x791) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1525) (= x848 (div x1525 x888)) (= x82 (ite (or (and (> x1693 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1120 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1693 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1120 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1693 x1120))) 1 0)) (<= 1 x888) (= (mod (* x1811 x848) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x445) (<= 1 x1083) (= x888 (+ x791 x49)) (= x1120 (x560 (- x998 x506))) (= (mod (* x1647 x506) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x530) (= (div x445 x1083) x998) (<= x888 115792089237316195423571325291054828791733448040247995807669039)))) (and (= (div x764 x1293) x340) (= x1082 (x372 x730 1)) (= x1575 (mod (* x1811 x340) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x944 x1897) x416) (= x1293 (x1262 (+ x416 x49))) (= x730 (x1262 (+ x348 x138))) (= x1693 (x560 (- x642 x1082))) (= (mod (* x1647 x1082) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x944) (= (mod (* x1637 x416) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x764) (>= x1293 1) (>= x912 1) (= (or (> x1693 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1693) true) (< x1693 100))) x1408) (= (+ x1082 x1577) x1897) (>= x1897 1) (= (div x1575 x912) x642) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x1897) (= (x1262 (+ x426 x340)) x912))) x492) x1229))
(assert (x261 x665))
(assert (x800 x1138))
(assert (= (x911 (x1675 40 20 (x372 x137 96) (x372 x1641 96))) (x372 x1641 96)))
(assert (= (and x1206 (not x1172)) x384))
(assert (= x346 (and x1982 x1014)))
(assert (x800 x1947))
(assert (not (x354 (x1675 40 20 (x372 x1830 96) (x372 x841 96)))))
(assert (= x1351 (and (not x1639) x1568)))
(assert (= (x372 x430 96) (x519 (x1675 40 20 (x372 x430 96) (x372 x1778 96)))))
(assert (x800 x1151))
(assert (= (=> (and (and (= x118 (ite (not (> 100 x645)) (ite (not (> 100 x1299)) 1 0) (ite (not (> 100 x645)) 1 0))) (<= x645 340282366920938463463374607431768211455) (= x118 1) (= x972 (= x1344 0)) (= x645 (x1017 x1233)) (= (x1062 x1233) x1299) (= x1233 (x1938 64 x1464 6)) (<= x1299 340282366920938463463374607431768211455)) (or (and (and (= x228 (x1262 (+ x1636 x1299))) (>= 340282366920938463463374607431768211455 x518) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1038) (< (* x645 x1636) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1299 x1636))) (>= x228 1) (= x1852 x518) (= x304 x750) (not (< x645 x518)) (= x750 (div x1038 x228)) (<= x750 340282366920938463463374607431768211455) (= x518 (x560 (- x645 x750))) (= x1038 (* x1636 x645)) (>= x1038 0) (= x665 x228)) (not x972)) (and (and (= x665 x1058) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1299 x1636)) (<= x580 340282366920938463463374607431768211455) (= x304 x580) (not (< x1299 x1058)) (>= 340282366920938463463374607431768211455 x1058) (>= x448 1) (= x448 x1852) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x959) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x645 x1636))) (= (x560 (- x1299 x580)) x1058) (= (div x959 x448) x580) (= (* x1636 x1299) x959) (= (x1262 (+ x1636 x645)) x448) (<= 0 x959)) x972))) x76) x1531))
(assert (not (x354 (x1938 64 x351 1))))
(assert (= (x372 x374 96) (x519 (x1675 40 20 (x372 x374 96) (x372 x905 96)))))
(assert (x1176 x1533))
(assert (x800 x427))
(assert (= (and x159 (not x1381)) x255))
(assert (=> (= (+ x773 x1795) 0) (= 0 (div x427 (+ x1795 x773)))))
(assert (x800 x186))
(assert (= (div x1586 2) (x372 x1586 1)))
(assert (x800 x568))
(assert (x800 x569))
(assert (x800 x1830))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x1241 6)))
(assert (< (x1675 40 20 (x372 x1830 96) (x372 x841 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x607))
(assert (x800 x135))
(assert (x800 x1965))
(assert (= (x519 (x1938 64 x103 1)) 1))
(assert (=> (>= 10000 (x372 x892 96)) (= 0 (x377 (x372 x892 96)))))
(assert (= x1599 (and x958 x423)))
(assert (x800 x1506))
(assert (= (x519 (x1675 40 20 (x372 x627 96) (x372 x1216 96))) (x372 x627 96)))
(assert (= (or x487 x335) x1378))
(assert (x800 x758))
(assert (x800 x1681))
(assert (= (x372 x263 96) (div x263 79228162514264337593543950336)))
(assert (x800 x1946))
(assert (= (x485 (x1938 64 x103 1)) 64))
(assert (=> (= x422 0) (= 0 (div x238 x422))))
(assert (x800 x10))
(assert (x354 54390620042137783201892230262870003591573546648339992470278899908023775395837))
(assert (x800 x106))
(assert (x800 x561))
(assert (= (x1675 40 20 (x372 x1830 96) (x372 x841 96)) (x377 (x1675 40 20 (x372 x1830 96) (x372 x841 96)))))
(assert (x800 x752))
(assert (x800 x425))
(assert (x800 x99))
(assert (= (or x654 x314) x432))
(assert (x800 x428))
(assert (x800 x70))
(assert (x800 x91))
(assert (x800 x1419))
(assert (x800 x694))
(assert (= (x911 (x1675 40 20 (x372 x296 96) (x372 x638 96))) (x372 x638 96)))
(assert (=> (>= 10000 (x372 x1333 96)) (= 0 (x377 (x372 x1333 96)))))
(assert (= (x1006 (x1675 40 20 (x372 x1538 96) (x372 x1162 96))) 20))
(assert (x800 x436))
(assert (= (and x84 (not x843)) x471))
(assert (x800 x1870))
(assert (x800 x457))
(assert (=> (= 0 x858) (= (div x1441 x858) 0)))
(assert (x800 x164))
(assert (= (x1675 40 20 (x372 x1590 96) (x372 x453 96)) (x377 (x1675 40 20 (x372 x1590 96) (x372 x453 96)))))
(assert (= (x519 (x1938 64 x1703 6)) 6))
(assert (x800 x650))
(assert (= (x519 (x1938 64 x1588 6)) 6))
(assert (x800 x1052))
(assert (= (or x1145 x117) x394))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x549 96) (x372 x70 96))))
(assert (= (x911 (x1675 40 20 (x372 x1744 96) (x372 x1665 96))) (x372 x1665 96)))
(assert (= (and x1542 (not x1155)) x4))
(assert (x800 x1958))
(assert (= x109 (=> (and (or (and (and (= x1189 (+ 1000000000000000 x329)) (= x1506 (x1262 (+ x521 x426))) (= x1411 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1757) (<= x245 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1757 x245) (= (<= x1757 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x245 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= x1179 (mod (* x1189 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x782 (mod (* x1066 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1179 (+ x1189 x1577)) x1066) (= x245 (x560 (- x350 x1189))) (>= x1506 1) (= x521 (div x782 x874)) (= x1046 (mod (* x521 x1811) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x874 1) (<= x874 115792089237316195423571325291054828791733448040247995807669039) (= x350 (div x1046 x1506)) (= (+ x1066 x49) x874)) (not x1036)) (and (= 0 x1411) x1036)) (and (= (mod (* x1811 x202) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x215) (= (mod (* x329 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x424) (<= 1 x696) (>= x1522 1) (= x714 (x1262 (+ x1651 x1363))) (= x46 (div x215 x1868)) (= x696 (+ x329 x1577)) (= x1036 (or (and (> 100 x1757) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1757))) (> x1757 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x696 57896044618658097711785492504343953926975274699741220483192166611388333031422) (= x329 (x372 x714 1)) (= (x560 (- x46 x329)) x1757) (<= 1 x1868) (= (div x538 x1522) x202) (= x208 (div x424 x696)) (= x1868 (x1262 (+ x426 x202))) (= (mod (* x208 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x538) (= x1522 (x1262 (+ x49 x208))))) x618)))
(assert (x800 x1682))
(assert (x800 x1676))
(assert (= x1527 (and x1382 x901)))
(assert (x800 x1230))
(assert (x800 x726))
(assert (= x963 (and (not x1071) x1125)))
(assert (=> (<= (x372 x841 96) 10000) (= (x377 (x372 x841 96)) 0)))
(assert (> (x1938 64 x746 x659) 10000))
(assert (x800 x952))
(assert (x800 x1488))
(assert (x800 x1168))
(assert (x800 x1625))
(assert (x800 x1352))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x131 x918)))
(assert (= (x1006 (x1938 64 x297 6)) x297))
(assert (= x982 (or x1263 x318)))
(assert (x800 x811))
(assert (x800 x1516))
(assert (=> (= x1746 0) (= (div x1934 x1746) 0)))
(assert (x800 x791))
(assert (x354 340282366920938463463374607431768211455))
(assert (= x332 (or x701 x301)))
(assert (x800 x1256))
(assert (=> (= 0 x1792) (= (div x1499 x1792) 0)))
(assert (x800 x245))
(assert (x800 x1434))
(assert (=> (= x1255 0) (= (div x1701 x1255) 0)))
(assert (x800 x562))
(assert (x800 x647))
(assert (= x191 (or x922 x630)))
(assert (x800 x1891))
(assert (= (x372 x1653 96) (x911 (x1675 40 20 (x372 x145 96) (x372 x1653 96)))))
(assert (x354 115792089237316195423570985008687907853269984665640564039457584007913129639836))
(assert (x800 x1420))
(assert (= (x1006 (x1938 64 x738 7)) x738))
(assert (x800 x1116))
(assert (x800 x877))
(assert (x800 x1358))
(assert (x800 x1861))
(assert (x800 x1409))
(assert (= x894 (and x1274 x1214)))
(assert (x800 x535))
(assert (= (x377 (x1938 64 x131 x918)) (x1938 64 x131 x918)))
(assert (=> (<= (x372 x229 96) 10000) (= 0 (x377 (x372 x229 96)))))
(assert (x800 x707))
(assert (=> (= (+ x1795 x1320) 0) (= (div x596 (+ x1795 x1320)) 0)))
(assert (< 10000 (x1675 40 20 (x372 x263 96) (x372 x542 96))))
(assert (x800 x434))
(assert (x800 x1586))
(assert (= x1563 (and x1979 x39)))
(assert (=> (= x744 0) (= 0 (div x237 x744))))
(assert (= 20 (x1006 (x1675 40 20 (x372 x430 96) (x372 x1778 96)))))
(assert (= (div x181 79228162514264337593543950336) (x372 x181 96)))
(assert (x800 x94))
(assert (= x853 (=> (and (= (x398 x1412) x2) (= x1412 (x1938 64 x1730 1)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1116 x2))) (= (x1262 (+ x1116 x2)) x1294) (= x1285 x24) (= x1116 x431)) x498)))
(assert (x800 x1912))
(assert (= (x377 (x1675 40 20 (x372 x229 96) (x372 x984 96))) (x1675 40 20 (x372 x229 96) (x372 x984 96))))
(assert (=> (= x185 0) (= 0 (div x368 x185))))
(assert (x800 x706))
(assert (= (x377 (x1675 40 20 (x372 x1815 96) (x372 x22 96))) (x1675 40 20 (x372 x1815 96) (x372 x22 96))))
(assert (x800 x1096))
(assert (x800 x368))
(assert (not (x354 (x1938 64 x746 x1810))))
(assert (=> (>= 10000 (x372 x411 96)) (= 0 (x377 (x372 x411 96)))))
(assert (x800 x1820))
(assert (= x1114 (and x1764 x620)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1538 96) (x372 x1162 96))))
(assert (x354 115792089237316195423570985008687907853269984665640564039457584007913129639864))
(assert (x800 x910))
(assert (x800 x376))
(assert (x800 x1368))
(assert (=> (= x976 0) (= 0 (div x520 x976))))
(assert (x800 x1287))
(assert (=> (= 0 x854) (= (div x1640 x854) 0)))
(assert (= (and x159 x1381) x1606))
(assert (x800 x786))
(assert (x800 x1822))
(assert (not (x354 (x1938 64 x1703 6))))
(assert (=> (<= (x372 x549 96) 10000) (= 0 (x377 (x372 x549 96)))))
(assert (x800 x1362))
(assert (x800 x1953))
(assert (= x1130 (or x1127 x291)))
(assert (= (x372 x229 96) (div x229 79228162514264337593543950336)))
(assert (x800 x1115))
(assert (x800 x1278))
(assert (=> (<= (x372 x1496 96) 10000) (= 0 (x377 (x372 x1496 96)))))
(assert (x800 x1282))
(assert (= (x1675 40 20 (x372 x1048 96) (x372 x531 96)) (x377 (x1675 40 20 (x372 x1048 96) (x372 x531 96)))))
(assert (x800 x581))
(assert (x800 x1530))
(assert (< 10000 (x1938 64 x103 0)))
(assert (x800 x1524))
(assert (x800 x1327))
(assert (x800 x1091))
(assert (x800 x17))
(assert (not (x354 (x1675 40 20 (x372 x794 96) (x372 x1620 96)))))
(assert (= (x372 x1820 7) (div x1820 128)))
(assert (=> (<= (x372 x1714 96) 10000) (= 0 (x377 (x372 x1714 96)))))
(assert (= (div x1714 79228162514264337593543950336) (x372 x1714 96)))
(assert (x800 x1819))
(assert (=> (= 0 x1083) (= (div x445 x1083) 0)))
(assert (= (x485 (x1938 64 x1241 6)) 64))
(assert (= (and (not x845) x807) x871))
(assert (= x1325 (or x1054 x803)))
(assert (x800 x691))
(assert (= (div (+ x1738 x992) 2) (x372 (+ x1738 x992) 1)))
(assert (x800 x634))
(assert (x800 x1158))
(assert (x800 x458))
(assert (=> (= x1712 0) (= (div x1194 x1712) 0)))
(assert (=> (<= (x372 x1355 96) 10000) (= 0 (x377 (x372 x1355 96)))))
(assert (x800 x1479))
(assert (x800 x226))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x327 96) (x372 x230 96))))
(assert (x800 x430))
(assert (= (and x988 (not x257)) x1102))
(assert (x800 x90))
(assert (x800 x782))
(assert (< 10000 (x1675 40 20 (x372 x1407 96) (x372 x833 96))))
(assert (= x1583 (and x4 (not x1674))))
(assert (x800 x222))
(assert (= (and x962 x908) x628))
(assert (x800 x1009))
(assert (x800 x965))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1707 96) (x372 x1986 96))))
(assert (= x1529 (and x491 x248)))
(assert (x354 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (< (x1938 64 x1339 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x1101))
(assert (x800 x846))
(assert (x800 x1030))
(assert (= 40 (x485 (x1675 40 20 (x372 x1830 96) (x372 x841 96)))))
(assert (x800 x1772))
(assert (> (x1938 64 x1824 6) 10000))
(assert (=> (<= (x372 x833 96) 10000) (= (x377 (x372 x833 96)) 0)))
(assert (= (x1938 64 x738 7) (x377 (x1938 64 x738 7))))
(assert (x800 x285))
(assert (x800 x1166))
(assert (x800 x655))
(assert (= (and x1705 (not x1508)) x1054))
(assert (= x818 (and x1099 x1796)))
(assert (x800 x1952))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1333 96) (x372 x1123 96))))
(assert (= (x485 (x1675 40 20 (x372 x457 96) (x372 x181 96))) 40))
(assert (x800 x1671))
(assert (x800 x78))
(assert (< 10000 (x1675 40 20 (x372 x334 96) (x372 x36 96))))
(assert (=> (= x1685 0) (= 0 (div x793 x1685))))
(assert (x261 x634))
(assert (< (x1675 40 20 (x372 x296 96) (x372 x638 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x330) x1768) x392))
(assert (= (x377 (x1675 40 20 (x372 x145 96) (x372 x1653 96))) (x1675 40 20 (x372 x145 96) (x372 x1653 96))))
(assert (= (x911 (x1675 40 20 (x372 x229 96) (x372 x984 96))) (x372 x984 96)))
(assert (x800 x206))
(assert (x800 x1661))
(assert (x800 x1344))
(assert (= 6 (x519 (x1938 64 x934 6))))
(assert (= (x372 x1333 96) (div x1333 79228162514264337593543950336)))
(assert (x800 x1554))
(assert (x800 x143))
(assert (< (x1938 64 x934 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x372 x1219 1) (div x1219 2)))
(assert (= (div x1331 79228162514264337593543950336) (x372 x1331 96)))
(assert (x800 x1117))
(assert (x800 x1701))
(assert (=> (= 0 x624) (= (div x706 x624) 0)))
(assert (x800 x9))
(assert (> (x1938 64 x131 x1300) 10000))
(assert (x800 x606))
(assert (> (x1938 64 x1730 1) 10000))
(assert (x800 x1507))
(assert (= (x911 (x1675 40 20 (x372 x1331 96) (x372 x56 96))) (x372 x56 96)))
(assert (x800 x210))
(assert (= (x377 340282366920938463463374607431768211455) 0))
(assert (not (x354 (x1675 40 20 (x372 x1815 96) (x372 x22 96)))))
(assert (= (div x1707 79228162514264337593543950336) (x372 x1707 96)))
(assert (x800 x1942))
(assert (= (x372 x549 96) (div x549 79228162514264337593543950336)))
(assert (x800 x478))
(assert (= (or x1527 x1948) x819))
(assert (=> (= x91 0) (= 0 (div x1044 x91))))
(assert (x261 340282366920938463463374607431768211455))
(assert (x800 x1808))
(assert (= (x372 x1815 96) (div x1815 79228162514264337593543950336)))
(assert (=> (= x1293 0) (= (div x764 x1293) 0)))
(assert (x800 x1026))
(assert (= (x1675 40 20 (x372 x650 96) (x372 x928 96)) (x377 (x1675 40 20 (x372 x650 96) (x372 x928 96)))))
(assert (=> (<= (x372 x1162 96) 10000) (= 0 (x377 (x372 x1162 96)))))
(assert (= (x519 (x1938 64 x579 6)) 6))
(assert (x800 x1161))
(assert (< 10000 (x1938 64 x1339 6)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x1703 6)))
(assert (= (div x1123 79228162514264337593543950336) (x372 x1123 96)))
(assert (= (x1675 40 20 (x372 x549 96) (x372 x70 96)) (x377 (x1675 40 20 (x372 x549 96) (x372 x70 96)))))
(assert (x800 x1294))
(assert (x261 x285))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x131 x1916)))
(assert (=> (<= (x372 x296 96) 10000) (= (x377 (x372 x296 96)) 0)))
(assert (x800 x1271))
(assert (= (x372 x145 96) (div x145 79228162514264337593543950336)))
(assert (x800 x43))
(assert (= (and x139 x1845) x931))
(assert (= (and (not x1635) x689) x1704))
(assert (x800 x155))
(assert (=> (= x161 0) (= 0 (div x1419 x161))))
(assert (x800 x610))
(assert (x800 x737))
(assert (x800 x1910))
(assert (= (=> (and (or (and (and (= x10 (mod (* x104 x851) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x723 (+ x1795 x1626)) x317) (= (mod (* x17 x317) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x877) (= x510 (div x10 x1671)) (= (x1262 (+ x651 x851)) x1671) (<= 1 x771) (= (div x877 x771) x851) (<= 1 x1671) (>= 115792089237316195423571325291054828791733448040247995807669039 x771) (= (ite (or (and (<= x381 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1541 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x381) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1541)) (< x1541 x381))) 1 0) x1152) (= x1626 (+ x258 1000000000000000)) (= x381 (x560 (- x510 x1626))) (= x771 (+ x967 x317)) (= (mod (* x1626 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x723)) (not x1460)) (and x1460 (= 0 x1152))) (and (<= 1 x169) (= x1766 (x1262 (+ x967 x1801))) (= (div x93 x169) x176) (= (+ x1795 x258) x422) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x422) (= x1281 (mod (* x17 x1801) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x422 1) (= (x560 (- x176 x258)) x1541) (= x1835 (x1262 (+ x362 x600))) (= x169 (x1262 (+ x546 x651))) (= (div x1281 x1766) x546) (= (x372 x1835 1) x258) (= x93 (mod (* x104 x546) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x238 (mod (* x258 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1460 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1541) (and (< x1541 100) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1541))))) (= (div x238 x422) x1801) (<= 1 x1766))) x920) x1831))
(assert (x800 x287))
(assert (= 0 (x377 1000000000000000)))
(assert (x800 x1517))
(assert (=> (= 0 x1789) (= 0 (div x1211 x1789))))
(assert (x800 x1533))
(assert (x800 x510))
(assert (x800 x1543))
(assert (x800 x26))
(assert (= (x377 (x1938 64 x1339 6)) (x1938 64 x1339 6)))
(assert (=> (= 0 x526) (= 0 (div x1425 x526))))
(assert (= 40 (x485 (x1675 40 20 (x372 x1590 96) (x372 x453 96)))))
(assert (= (div x1249 2) (x372 x1249 1)))
(assert (=> (<= (x372 x794 96) 10000) (= 0 (x377 (x372 x794 96)))))
(assert (x800 x1960))
(assert (= (or x407 x559) x39))
(assert (x800 x488))
(assert (= (=> (and (and (= (x184 x1240) x1826) (= x1508 (= 0 x919)) (= 1 x1524) (>= 340282366920938463463374607431768211455 x1826) (>= 340282366920938463463374607431768211455 x122) (= x1240 (x1938 64 x1241 6)) (= (ite (not (> 100 x1826)) (ite (not (< x122 100)) 1 0) (ite (not (> 100 x1826)) 1 0)) x1524) (= (x1347 x1240) x122)) (or (and x1508 (and (>= x347 1) (= x705 (x560 (- x122 x1842))) (= x1842 x1007) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x515) (<= x705 340282366920938463463374607431768211455) (= (+ x1826 x1559) x347) (>= 340282366920938463463374607431768211455 x1842) (<= x347 680564733841876926926749214863536422910) (>= x515 0) (= (div x515 x347) x1842) (= x515 (* x122 x1559)) (not (> x705 x122)) (= x1843 x705) (= x217 x347))) (and (not x1508) (and (= x217 x993) (<= 0 x548) (= x1007 x1652) (= (* x1826 x1559) x548) (>= 680564733841876926926749214863536422910 x1567) (= (x560 (- x1826 x1652)) x993) (= x1843 x1567) (<= x993 340282366920938463463374607431768211455) (<= 1 x1567) (= (+ x1559 x122) x1567) (not (> x993 x1826)) (<= x1652 340282366920938463463374607431768211455) (<= x548 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1652 (div x548 x1567)))))) x209) x855))
(assert (= (x485 (x1938 64 x1703 6)) 64))
(assert (= x999 (and (not x139) x1845)))
(assert (= x1445 (and (not x1135) x200)))
(assert (x800 x355))
(assert (x800 x1985))
(assert (x354 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x800 x1376))
(assert (x800 x1179))
(assert (x800 x992))
(assert (x800 x842))
(assert (= (or x1786 x7) x1159))
(assert (x800 x1350))
(assert (x800 x885))
(assert (= (div x1122 79228162514264337593543950336) (x372 x1122 96)))
(assert (= x396 (and x1319 (not x1690))))
(assert (x800 x451))
(assert (x800 x1243))
(assert (= (div x411 79228162514264337593543950336) (x372 x411 96)))
(assert (x800 x1598))
(assert (x800 x1246))
(assert (x800 x889))
(assert (x800 x1688))
(assert (= (x485 (x1675 40 20 (x372 x1355 96) (x372 x1772 96))) 40))
(assert (x800 x1205))
(assert (=> (= 0 (+ x1923 x1795)) (= 0 (div x26 (+ x1795 x1923)))))
(assert (not (x354 (x1938 64 x103 0))))
(assert (x800 x1890))
(assert (x800 x1180))
(assert (x261 x1843))
(assert (x800 x1925))
(assert (x800 x1342))
(assert (=> (= 0 x1232) (= 0 (div x1485 x1232))))
(assert (= (x377 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x137 96) (x372 x1641 96))))
(assert (x261 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x800 x1707))
(assert (x800 x798))
(assert (= x1494 (=> (and (or (and (and (= x915 x104) (= x1330 x651)) x1796) (and (not x1796) (and (= x104 x1330) (= x651 x915)))) (and (<= x1330 340282366920938463463374607431768211455) (>= 340282366920938463463374607431768211455 x915) (= x1330 (x989 x259)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1222) (= x915 (x375 x259)) (< x1222 x1215) (= (x1938 64 x525 6) x259) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1222) (= (= x1717 0) x1796) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1222)) (not (= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x1222 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1222) (= x1215 (x1262 (+ 64 x1222))))) x932)))
(assert (=> (<= (x372 x627 96) 10000) (= 0 (x377 (x372 x627 96)))))
(assert (x800 x445))
(assert (x800 x415))
(assert (x800 x1310))
(assert (x800 x421))
(assert (x800 x1555))
(assert (= (div x1646 79228162514264337593543950336) (x372 x1646 96)))
(assert (x800 x477))
(assert (x800 x435))
(assert (x261 x1254))
(assert (x800 x422))
(assert (= (and x495 x394) x1252))
(assert (x800 x449))
(assert (=> (= (+ x1795 x1479) 0) (= (div x1521 (+ x1795 x1479)) 0)))
(assert (x800 x1733))
(assert (=> (= x671 0) (= (div x1434 x671) 0)))
(assert (x800 x1646))
(assert (x800 x876))
(assert (= x1263 (and x1247 x41)))
(assert (x800 x212))
(assert (x800 x601))
(assert (= (or x255 x1606) x543))
(assert (=> (= 0 (+ x1380 x1577)) (= 0 (div x1709 (+ x1577 x1380)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1952 96) (x372 x1418 96))))
(assert (x800 x1492))
(assert (= (x372 x1749 96) (div x1749 79228162514264337593543950336)))
(assert (= (div x1355 79228162514264337593543950336) (x372 x1355 96)))
(assert (= (and x1793 x1761) x1490))
(assert (x800 x1590))
(assert (x800 x1453))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x297 6)))
(assert (= (x519 (x1938 64 x131 x1300)) x1300))
(assert (< (x1938 64 x1464 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x804))
(assert (< 10000 (x1675 40 20 (x372 x417 96) (x372 x411 96))))
(assert (= (div x1496 79228162514264337593543950336) (x372 x1496 96)))
(assert (x800 x1186))
(assert (x800 x1427))
(assert (x800 x880))
(assert (= (x372 x1048 96) (div x1048 79228162514264337593543950336)))
(assert (x800 x1500))
(assert (x800 x235))
(assert (x800 x537))
(assert (x800 x1257))
(assert (= (x519 (x1675 40 20 (x372 x1749 96) (x372 x1510 96))) (x372 x1749 96)))
(assert (not (x354 (x1938 64 x1588 6))))
(assert (x800 x1090))
(assert (= (x485 (x1675 40 20 (x372 x1048 96) (x372 x531 96))) 40))
(assert (= (x519 (x1938 64 x525 6)) 6))
(assert (= (x519 (x1675 40 20 (x372 x1190 96) (x372 x850 96))) (x372 x1190 96)))
(assert (x800 x229))
(assert (x800 x600))
(assert (x800 x1618))
(assert (= (x1938 64 x667 6) (x377 (x1938 64 x667 6))))
(assert (not (x354 (x1675 40 20 (x372 x1707 96) (x372 x1986 96)))))
(assert (=> (<= (x372 x1935 96) 10000) (= (x377 (x372 x1935 96)) 0)))
(assert (= 64 (x485 (x1938 64 x934 6))))
(assert (= (or x527 x1037) x62))
(assert (= 64 (x485 (x1938 64 x738 7))))
(assert (= x96 (=> (and (and (= x1104 0) (= (> x1770 x1420) x652)) (or (and (and (= 460 x1735) (= (x1675 40 20 (x372 x1355 96) (x372 x1772 96)) x1081) (= (* x1770 79228162514264337593543950336) x1772) (= 1 x1344) (= x1081 x1464) (= x1355 (* x1420 79228162514264337593543950336))) x652) (and (and (= 460 x1735) (= x1216 (* 79228162514264337593543950336 x1420)) (= 0 x1344) (= x1002 x1464) (= (* 79228162514264337593543950336 x1770) x627) (= x1002 (x1675 40 20 (x372 x627 96) (x372 x1216 96)))) (not x652)))) x1531)))
(assert (x800 x1655))
(assert (x800 x1826))
(assert (= x559 (and (not x1374) x1683)))
(assert (x800 x538))
(assert (x800 x1008))
(assert (=> (<= (x372 x145 96) 10000) (= (x377 (x372 x145 96)) 0)))
(assert (= 40 (x485 (x1675 40 20 (x372 x1952 96) (x372 x1418 96)))))
(assert (= x932 (=> (= (= 0 (ite (> (ite (< 0 (ite (> (ite (< 0 (ite (not (< 100 x1795)) (ite (not (< 100 x1795)) 1 0) (ite (not (< 100 x707)) 1 0))) (ite (not (< 100 x1795)) (ite (not (> x1795 100)) 1 0) (ite (not (< 100 x707)) 1 0)) (ite (not (< 100 x967)) 1 0)) 0) (ite (> (ite (not (> x1795 100)) (ite (not (< 100 x1795)) 1 0) (ite (not (> x707 100)) 1 0)) 0) (ite (not (< 100 x1795)) (ite (not (> x1795 100)) 1 0) (ite (not (> x707 100)) 1 0)) (ite (not (< 100 x967)) 1 0)) (ite (not (> x17 100)) 1 0))) (ite (> (ite (< 0 (ite (not (> x1795 100)) (ite (not (> x1795 100)) 1 0) (ite (not (< 100 x707)) 1 0))) (ite (not (< 100 x1795)) (ite (not (> x1795 100)) 1 0) (ite (not (> x707 100)) 1 0)) (ite (not (< 100 x967)) 1 0)) 0) (ite (> (ite (not (< 100 x1795)) (ite (not (< 100 x1795)) 1 0) (ite (not (> x707 100)) 1 0)) 0) (ite (not (> x1795 100)) (ite (not (> x1795 100)) 1 0) (ite (not (> x707 100)) 1 0)) (ite (not (< 100 x967)) 1 0)) (ite (not (> x17 100)) 1 0)) (ite (not (> x651 100)) 1 0)) 0) (ite (> (ite (> (ite (< 0 (ite (not (> x1795 100)) (ite (not (> x1795 100)) 1 0) (ite (not (< 100 x707)) 1 0))) (ite (not (> x1795 100)) (ite (not (< 100 x1795)) 1 0) (ite (not (< 100 x707)) 1 0)) (ite (not (> x967 100)) 1 0)) 0) (ite (> (ite (not (< 100 x1795)) (ite (not (> x1795 100)) 1 0) (ite (not (< 100 x707)) 1 0)) 0) (ite (not (< 100 x1795)) (ite (not (> x1795 100)) 1 0) (ite (not (< 100 x707)) 1 0)) (ite (not (> x967 100)) 1 0)) (ite (not (> x17 100)) 1 0)) 0) (ite (< 0 (ite (< 0 (ite (not (< 100 x1795)) (ite (not (> x1795 100)) 1 0) (ite (not (< 100 x707)) 1 0))) (ite (not (> x1795 100)) (ite (not (> x1795 100)) 1 0) (ite (not (< 100 x707)) 1 0)) (ite (not (> x967 100)) 1 0))) (ite (< 0 (ite (not (> x1795 100)) (ite (not (< 100 x1795)) 1 0) (ite (not (< 100 x707)) 1 0))) (ite (not (> x1795 100)) (ite (not (> x1795 100)) 1 0) (ite (not (< 100 x707)) 1 0)) (ite (not (< 100 x967)) 1 0)) (ite (not (< 100 x17)) 1 0)) (ite (not (> x651 100)) 1 0)) (ite (not (> x104 100)) 1 0))) x1565) (and (=> (and (not x1565) (= 0 x588)) x35) (=> (and x1565 (and (or (and (and (>= x1733 1) (= (+ 1000000000000000 x1436) x676) (<= x834 115792089237316195423571325291054828791733448040247995807669039) (= (div x61 x1733) x158) (= (+ x1001 x967) x834) (= (x560 (- x158 x676)) x1230) (= x759 (mod (* x17 x1001) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x61 (mod (* x25 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1262 (+ x25 x651)) x1733) (= (div x1920 (+ x1795 x676)) x1001) (= (ite (or (and (> x1230 x924) (= (<= x924 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1230))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1230) (> x924 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1678) (= x25 (div x759 x834)) (>= x834 1) (= (mod (* x676 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1920)) (not x369)) (and x369 (= 0 x1678))) (and (= x801 (x1262 (+ x562 x967))) (= (mod (* x17 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1246) (= x520 (mod (* x1436 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1262 (+ x651 x1648)) x1354) (= (div x1246 x801) x1648) (= x151 (mod (* x1648 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x924) (and (= true (<= x924 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x924 100))) x369) (<= 1 x801) (= x522 (div x151 x1354)) (= (+ x1820 (x372 x1820 2)) x726) (>= x976 1) (= (x372 (+ x726 x1107) 1) x1436) (= x976 (+ x1436 x1795)) (= x1107 (x372 x1820 7)) (= (x560 (- x522 x1436)) x924) (= (div x520 x976) x562) (>= x1354 1) (>= 36411184310952944264052594895310064774513070513733693952433435203670076555261 x976)))) x268)))))
(assert (< (x1675 40 20 (x372 x457 96) (x372 x181 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (= (+ x1795 x676) 0) (= (div x1920 (+ x676 x1795)) 0)))
(assert (not (x354 (x1675 40 20 (x372 x1744 96) (x372 x1665 96)))))
(assert (= x1594 (and x700 (not x153))))
(assert (= 40 (x485 (x1675 40 20 (x372 x229 96) (x372 x984 96)))))
(assert (= (=> (and (and (= x1328 (x1389 340282366920938463463374607431768211455 x217)) (= (x560 (- x1007 x588)) x1116) (>= 1461501637330902918203684832716283019655932542975 x738) (= x1132 (ite (not (> 100 x217)) (ite (not (< x1843 100)) 1 0) (ite (not (< x217 100)) 1 0))) (= 1 x1132) (= (x1938 64 x738 7) x659) (= (< x1030 x646) x232) (= (x1938 64 x746 x659) x787) (= (x1262 (+ x1116 x1022)) x18) (not (> x1116 x1007)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1116 x1022))) (= (x763 x787) x1022) (= x1797 (x1389 340282366920938463463374607431768211455 x1843)) (>= 340282366920938463463374607431768211455 x1116)) (or (and (and (= x1584 (x1262 (+ x698 20))) (not (= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1491)) (<= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x698 (x1262 (+ 32 x1491))) (= x1809 x24) (<= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x833 (* x1030 79228162514264337593543950336)) (= x1664 x1730) (< x1491 x1809) (= x1809 (x1262 (+ x1584 20))) (= x1407 (* x646 79228162514264337593543950336)) (= (x1675 40 20 (x372 x1407 96) (x372 x833 96)) x1664)) (not x232)) (and x232 (and (= (* x646 79228162514264337593543950336) x531) (<= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1730 x1612) (= x1612 (x1675 40 20 (x372 x1048 96) (x372 x531 96))) (= (x1262 (+ x86 20)) x1967) (= x86 (x1262 (+ x1491 32))) (< x1491 x1201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1491) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1491)) (not (= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1048 (* x1030 79228162514264337593543950336)) (= (x1262 (+ x1967 20)) x1201) (= x1201 x24) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1491)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1491))))) x853) x209))
(assert (= x821 (or x856 x937)))
(assert (= (x372 x728 96) (x519 (x1675 40 20 (x372 x728 96) (x372 x1327 96)))))
(assert (x800 x728))
(assert (= 20 (x1006 (x1675 40 20 (x372 x263 96) (x372 x542 96)))))
(assert (= (x372 x1830 96) (x519 (x1675 40 20 (x372 x1830 96) (x372 x841 96)))))
(assert (x1176 x1016))
(assert (= x12 (and (not x81) x969)))
(assert (=> (= x1080 0) (= 0 (div x1613 x1080))))
(assert (not (x354 (x1675 40 20 (x372 x1190 96) (x372 x850 96)))))
(assert (x800 x589))
(assert (x800 x580))
(assert (x800 x1213))
(assert (= 0 (x377 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (= x110 0) (= (div x1318 x110) 0)))
(assert (x800 x1128))
(assert (= x1220 (=> (and (or (and (and (= x699 x402) (= x511 x1758)) x901) (and (and (= x402 x1758) (= x186 x699)) (not x901))) (= x901 (= x1061 0))) x914)))
(assert (=> (= x326 0) (= (div x116 x326) 0)))
(assert (< 10000 (x1675 40 20 (x372 x1744 96) (x372 x1665 96))))
(assert (= (x377 (x1938 64 x934 6)) (x1938 64 x934 6)))
(assert (x800 x584))
(assert (x800 x1085))
(assert (= (x485 (x1675 40 20 (x372 x145 96) (x372 x1653 96))) 40))
(assert (not (x354 (x1938 64 x57 6))))
(assert (= (and x591 (not x574)) x316))
(assert (= x603 (and x1099 (not x1796))))
(assert (not (x354 (x1675 40 20 (x372 x137 96) (x372 x1641 96)))))
(assert (not (x354 (x1938 64 x1086 6))))
(assert (=> (<= (x372 x1407 96) 10000) (= 0 (x377 (x372 x1407 96)))))
(assert (x800 x1783))
(assert (x800 x708))
(assert (x800 x1858))
(assert (x800 x348))
(assert (= 64 (x485 (x1938 64 x1730 1))))
(assert (x800 x1955))
(assert (= (x372 x1778 96) (div x1778 79228162514264337593543950336)))
(assert (= 40 (x485 (x1675 40 20 (x372 x1400 96) (x372 x366 96)))))
(assert (x800 x1493))
(assert (= (x485 (x1675 40 20 (x372 x1815 96) (x372 x22 96))) 40))
(assert (x800 x271))
(assert (=> (<= (x372 x22 96) 10000) (= (x377 (x372 x22 96)) 0)))
(assert (x800 x1104))
(assert (x800 x1413))
(assert (x800 x1027))
(assert (=> (= x140 0) (= (div x1197 x140) 0)))
(assert (= (x1938 64 x297 6) (x377 (x1938 64 x297 6))))
(assert (= (or x1364 x1583 x629 x1445 x513) x689))
(assert (= (and x662 x564) x1687))
(assert (= x1836 (and x550 x825)))
(assert (= (x372 x1510 96) (x911 (x1675 40 20 (x372 x1749 96) (x372 x1510 96)))))
(assert (= (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x661)) (<= x467 340282366920938463463374607431768211455) (> x419 x661) (= x330 (= x883 0)) (= (x375 x955) x602) (>= 340282366920938463463374607431768211455 x602) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x661) (= (x989 x955) x467) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x661) (<= x661 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x661 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x661 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x1938 64 x1339 6) x955) (= (x1262 (+ x661 64)) x419)) (or (and x330 (and (= x602 x1052) (= x611 x467))) (and (and (= x602 x611) (= x1052 x467)) (not x330)))) x1306) x1840))
(assert (=> (= x1133 0) (= 0 (div x1409 x1133))))
(assert (x800 x363))
(assert (< 10000 (x1938 64 x1086 6)))
(assert (x800 x850))
(assert (x800 x1899))
(assert (x800 x158))
(assert (x354 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (= x274 (and (not x369) x1029)))
(assert (x800 x33))
(assert (x354 599290589))
(assert (=> (= 0 x846) (= (div x1904 x846) 0)))
(assert (x800 x2))
(assert (x800 x1329))
(assert (= x1364 (and x768 x1466)))
(assert (= 0 (x377 54390620042137783201892230262870003591573546648339992470278899908023775395837)))
(assert (= 40 (x485 (x1675 40 20 (x372 x549 96) (x372 x70 96)))))
(assert (= (x372 x1935 96) (x519 (x1675 40 20 (x372 x1935 96) (x372 x1496 96)))))
(assert (x800 x419))
(assert (=> (<= (x372 x1778 96) 10000) (= (x377 (x372 x1778 96)) 0)))
(assert (x800 x773))
(assert (= (x372 x277 96) (x519 (x1675 40 20 (x372 x277 96) (x372 x146 96)))))
(assert (x800 x1601))
(assert (x800 x503))
(assert (= (x372 x1620 96) (div x1620 79228162514264337593543950336)))
(assert (> (x1675 40 20 (x372 x1707 96) (x372 x1986 96)) 10000))
(assert (x800 x761))
(assert (x800 x1756))
(assert (= 40 (x485 (x1675 40 20 (x372 x430 96) (x372 x1778 96)))))
(assert (= x1740 (and (not x243) x483)))
(assert (< 10000 (x1938 64 x131 x918)))
(assert (x800 x463))
(assert (x800 x1885))
(assert (x800 x1519))
(assert (x800 x1917))
(assert (= 20 (x1006 (x1675 40 20 (x372 x1815 96) (x372 x22 96)))))
(assert (x800 x653))
(assert (x800 x1355))
(assert (< (x1938 64 x746 x1810) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x347))
(assert (x1176 x1097))
(assert (= (x485 (x1675 40 20 (x372 x1935 96) (x372 x1496 96))) 40))
(assert (= x1125 (or x586 x797)))
(assert (x800 x1047))
(assert (> (x1675 40 20 (x372 x296 96) (x372 x638 96)) 10000))
(assert (x800 x1061))
(assert (= x807 (or x475 x895)))
(assert (x800 x1080))
(assert (x800 x1034))
(assert (=> (= x957 0) (= 0 (div x1207 x957))))
(assert (= (and (not x1715) x532) x386))
(assert (x800 x1735))
(assert (x800 x686))
(assert (x800 x1222))
(assert (x800 x1154))
(assert (x800 x338))
(assert (x800 x304))
(assert (x800 x582))
(assert (= (and x1408 x1879) x314))
(assert (x800 x374))
(assert (= x1037 (and (not x455) x964)))
(assert (=> (= 0 x771) (= 0 (div x877 x771))))
(assert (x800 x1852))
(assert (x800 x1288))
(assert (= (x372 x366 96) (div x366 79228162514264337593543950336)))
(assert (=> (>= 10000 (x372 x1641 96)) (= 0 (x377 (x372 x1641 96)))))
(assert (=> (<= x1918 10000) (= (x377 x1918) 0)))
(assert (x800 x1605))
(assert (=> (= x85 0) (= 0 (div x442 x85))))
(assert (x800 x174))
(assert (x800 x501))
(assert (x800 x1190))
(assert (= (x1006 (x1938 64 x131 0)) x131))
(assert (x800 x1728))
(assert (> (x1675 40 20 (x372 x728 96) (x372 x1327 96)) 10000))
(assert (x800 x51))
(assert (x800 x1354))
(assert (x800 x1471))
(assert (=> (= 0 (+ x1577 x342)) (= (div x298 (+ x1577 x342)) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1048 96) (x372 x531 96))))
(assert (x800 x1390))
(assert (x800 x1708))
(assert (= (=> (and (and (<= x349 340282366920938463463374607431768211455) (= x349 (x1805 x490)) (= (x1938 64 x1520 6) x490) (= (x265 x490) x1200) (= x970 (= 0 x155)) (= 1 x775) (<= x1200 340282366920938463463374607431768211455) (= x775 (ite (not (> 100 x1200)) (ite (not (< x349 100)) 1 0) (ite (not (< x1200 100)) 1 0)))) (or (and (and (= x1776 (x560 (- x1200 x458))) (= x397 (+ x349 x387)) (>= 680564733841876926926749214863536422910 x397) (not (< x1200 x1776)) (<= x458 340282366920938463463374607431768211455) (>= x397 1) (= x458 x1569) (<= x1776 340282366920938463463374607431768211455) (= x397 x1097) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1961) (= x458 (div x1961 x397)) (= (* x1200 x387) x1961) (>= x1961 0) (= x826 x1776)) (not x970)) (and x970 (and (= (+ x1200 x387) x1085) (>= 340282366920938463463374607431768211455 x234) (<= x40 340282366920938463463374607431768211455) (= x1804 (* x387 x349)) (= x234 x1569) (= x40 (x560 (- x349 x234))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1804) (>= x1085 1) (>= 680564733841876926926749214863536422910 x1085) (= x40 x1097) (= x826 x1085) (not (< x349 x40)) (= (div x1804 x1085) x234) (<= 0 x1804))))) x1900) x1315))
(assert (= (and x550 (not x825)) x29))
(assert (not (x354 (x1675 40 20 (x372 x296 96) (x372 x638 96)))))
(assert (x800 x183))
(assert (= (and x1951 x623) x1689))
(assert (=> (= (+ x1723 x1577) 0) (= 0 (div x584 (+ x1723 x1577)))))
(assert (= (and (not x1460) x1672) x475))
(assert (=> (= 0 x745) (= 0 (div x1670 x745))))
(assert (=> (<= (x372 x928 96) 10000) (= (x377 (x372 x928 96)) 0)))
(assert (= (or x1718 x991 x1444 x1755 x1740) x734))
(assert (x800 x642))
(assert (= 1 (x519 (x1938 64 x351 1))))
(assert (x800 x1919))
(assert (= x796 (or x1704 x685)))
(assert (x800 x395))
(assert (x800 x1848))
(assert (x800 x383))
(assert (x800 x861))
(assert (x800 x409))
(assert (x800 x157))
(assert (< 10000 (x1675 40 20 (x372 x1830 96) (x372 x841 96))))
(assert (x800 x1841))
(assert (= x1545 (or x1721 x776)))
(assert (= (x372 x181 96) (x911 (x1675 40 20 (x372 x457 96) (x372 x181 96)))))
(assert (x800 x720))
(assert (x800 x310))
(assert (x800 x1566))
(assert (= (x1006 (x1675 40 20 (x372 x650 96) (x372 x928 96))) 20))
(assert (= 20 (x1006 (x1675 40 20 (x372 x1744 96) (x372 x1665 96)))))
(assert (x800 x1745))
(assert (< (x1938 64 x103 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (or (and x860 (= x1625 0)) (and (not x860) (and (>= 115792089237316195423571325291054828791733448040247995807669039 x1133) (= (div x1822 x289) x94) (<= 1 x289) (= (x560 (- x94 x1865)) x1417) (= (div x1168 (+ x1865 x1795)) x1564) (= x1822 (mod (* x104 x1471) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1262 (+ x651 x1471)) x289) (= (+ x1564 x967) x1133) (>= x1133 1) (= x1865 (+ 1000000000000000 x1156)) (= x1625 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1128) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1417)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1128) (<= x1417 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1417 x1128))) 1 0)) (= (mod (* x707 x1865) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1168) (= (mod (* x17 x1564) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1409) (= (div x1409 x1133) x1471)))) (and (= (mod (* x680 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1658) (>= x1119 1) (= (div x1779 x310) x680) (= (x1262 (+ x680 x967)) x783) (= (x1262 (+ x651 x401)) x1119) (= x310 (+ x1795 x1156)) (= (mod (* x707 x1156) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1779) (= (div x1658 x783) x401) (<= x310 54390620042137783201892230262870003591573546648339992470278899908023775395837) (= x1128 (x560 (- x212 x1156))) (= x860 (or (> x1128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1128) true) (> 100 x1128)))) (= (x372 (+ x992 x1738) 1) x1156) (= (div x1837 x1119) x212) (>= x310 1) (<= 1 x783) (= (mod (* x401 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1837))) x749) x702))
(assert (=> (>= 10000 x930) (= 0 (x377 x930))))
(assert (= x1617 (or x1075 x1888)))
(assert (= (x377 (x1938 64 x131 x1379)) (x1938 64 x131 x1379)))
(assert (x800 x1967))
(assert (= x7 (and x84 x843)))
(assert (= 1 (x519 (x1938 64 x1730 1))))
(assert (= x360 (x1006 (x1938 64 x360 6))))
(assert (= (x377 (x1938 64 x103 0)) (x1938 64 x103 0)))
(assert (= (and (not x1875) x1336) x1754))
(assert (=> (= 0 x1124) (= (div x713 x1124) 0)))
(assert (x800 x1305))
(assert (x800 x1957))
(assert (x800 x1573))
(assert (not (x354 (x1675 40 20 (x372 x650 96) (x372 x928 96)))))
(assert (< (x1938 64 x131 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (= x1964 0) (= 0 (div x1317 x1964))))
(assert (x800 x424))
(assert (x800 x725))
(assert (= (div x230 79228162514264337593543950336) (x372 x230 96)))
(assert (x800 x1526))
(assert (x800 x294))
(assert (x800 x881))
(assert (x800 x781))
(assert (not (x354 (x1675 40 20 (x372 x277 96) (x372 x146 96)))))
(assert (x800 x216))
(assert (=> (= 0 x1681) (= 0 (div x34 x1681))))
(assert (= 40 (x485 (x1675 40 20 (x372 x327 96) (x372 x230 96)))))
(assert (x800 x1097))
(assert (= 20 (x1006 (x1675 40 20 (x372 x583 96) (x372 x253 96)))))
(assert (= (div x1653 79228162514264337593543950336) (x372 x1653 96)))
(assert (= x159 (or x60 x274)))
(assert (= x1597 (and (not x951) x1599)))
(assert (= x991 (and x612 (not x1630))))
(assert (= (x377 (x1938 64 x1703 6)) (x1938 64 x1703 6)))
(assert (x800 x1746))
(assert (x800 x1059))
(assert (x800 x875))
(assert (x800 x1392))
(assert (> (x1675 40 20 (x372 x794 96) (x372 x1620 96)) 10000))
(assert (= (or (and x303 (not x1812)) x679) x196))
(assert (x800 x1653))
(assert (= (=> (and (or (and x1374 (= 0 x1421)) (and (not x1374) (and (>= x681 1) (<= 1 x185) (= x1421 (ite (or (and (> x767 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1138 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x767 x1138) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x767) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1138)))) 1 0)) (= x1217 (div x1173 x681)) (= x1138 (x560 (- x1607 x1380))) (= x1709 (mod (* x1380 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (+ x720 x49) x681) (= x1380 (+ x132 1000000000000000)) (= x1173 (mod (* x720 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x720 (div x1709 (+ x1577 x1380))) (<= x681 115792089237316195423571325291054828791733448040247995807669039) (= x368 (mod (* x1217 x1811) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x368 x185) x1607) (= x185 (x1262 (+ x1217 x426)))))) (and (= (div x1194 x1712) x553) (= (x1262 (+ x655 x426)) x1712) (= (mod (* x655 x1811) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1194) (= x132 (x372 x1585 1)) (= x573 (mod (* x436 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x767) (and (< x767 100) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x767) true))) x1374) (= x1585 (x1262 (+ x1298 x866))) (= x977 (+ x1577 x132)) (= x1043 (mod (* x1647 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x436 (div x1043 x977)) (= x767 (x560 (- x553 x132))) (<= 1 x1553) (= (x1262 (+ x49 x436)) x1553) (= x655 (div x573 x1553)) (>= x977 1) (<= x977 57896044618658097711785492504343953926975274699741220483192166611388333031422) (>= x1712 1))) x188) x1929))
(assert (= (=> (and (= x503 x1285) (= x431 x1369)) x113) x498))
(assert (= (and x543 (not x860)) x710))
(assert (x800 x567))
(assert (< (x1675 40 20 (x372 x1749 96) (x372 x1510 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1099 (or x316 x292)))
(assert (= (x911 (x1675 40 20 (x372 x1590 96) (x372 x453 96))) (x372 x453 96)))
(assert (= (and x640 (not x652)) x856))
(assert (x800 x1285))
(assert (= 0 (x377 79228162514264337593543950336)))
(assert (x800 x1499))
(assert (= (x377 (x1675 40 20 (x372 x1646 96) (x372 x1714 96))) (x1675 40 20 (x372 x1646 96) (x372 x1714 96))))
(assert (x261 x1893))
(assert (= (x372 x1418 96) (div x1418 79228162514264337593543950336)))
(assert (x800 x841))
(assert (x800 x1562))
(assert (x800 x1795))
(assert (x800 x711))
(assert (= x532 (or x985 x418)))
(assert (= x239 (=> (and (= x1404 (x560 (- x1420 x746))) (= x1576 (< 0 x1404))) (and (=> (and (not x1576) (and (= (x560 (- x1031 x872)) x1139) (= (< 0 x1139) x331))) (and (=> x331 x1269) (=> (and (and (= x872 x1030) (= x646 x1870)) (not x331)) x563))) (=> x1576 x1269)))))
(assert (= (div x1162 79228162514264337593543950336) (x372 x1162 96)))
(assert (x800 x1855))
(assert (x800 x1192))
(assert (=> (= 0 x977) (= (div x1043 x977) 0)))
(assert (= (x1675 40 20 (x372 x1331 96) (x372 x56 96)) (x377 (x1675 40 20 (x372 x1331 96) (x372 x56 96)))))
(assert (x800 x1289))
(assert (x800 x599))
(assert (= (x911 (x1675 40 20 (x372 x263 96) (x372 x542 96))) (x372 x542 96)))
(assert (= x1771 (=> (and (or (and (and (= (* x1348 x1569) x320) (= (div x320 x1605) x1702) (>= 680564733841876926926749214863536422910 x1605) (>= 340282366920938463463374607431768211455 x1702) (not (> x241 x1348)) (= (x560 (- x1348 x1702)) x241) (= x1016 x241) (>= x1605 1) (<= x241 340282366920938463463374607431768211455) (>= x320 0) (= x1854 x1702) (<= x320 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (+ x1569 x535) x1605) (= x1533 x1605)) (not x1134)) (and x1134 (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1441) (<= x858 680564733841876926926749214863536422910) (not (< x535 x1158)) (<= 0 x1441) (= x1854 x271) (<= 1 x858) (= x1533 x1158) (= x858 (+ x1348 x1569)) (= x1441 (* x535 x1569)) (>= 340282366920938463463374607431768211455 x1158) (= x271 (div x1441 x858)) (>= 340282366920938463463374607431768211455 x271) (= x1016 x858) (= x1158 (x560 (- x535 x271)))))) (and (>= 340282366920938463463374607431768211455 x1348) (>= 340282366920938463463374607431768211455 x535) (= (x1938 64 x1086 6) x827) (= x535 (x1089 x827)) (= 1 x852) (= x852 (ite (not (> 100 x1348)) (ite (not (< x535 100)) 1 0) (ite (not (> 100 x1348)) 1 0))) (= (= 0 x1352) x1134) (= x1348 (x1939 x827)))) x1193)))
(assert (x800 x506))
(assert (x800 x754))
(assert (x800 x1360))
(assert (x800 x1448))
(assert (x800 x736))
(assert (x800 x1283))
(assert (x800 x1140))
(assert (= x1786 (or x141 x1594)))
(assert (x800 x1111))
(assert (= (x519 (x1675 40 20 (x372 x334 96) (x372 x36 96))) (x372 x334 96)))
(assert (x800 x469))
(assert (x800 x1595))
(assert (= (and x591 x574) x292))
(assert (= (x911 (x1675 40 20 (x372 x1333 96) (x372 x1123 96))) (x372 x1123 96)))
(assert (x800 x497))
(assert (= (x372 x1496 96) (x911 (x1675 40 20 (x372 x1935 96) (x372 x1496 96)))))
(assert (x800 x681))
(assert (x800 x1043))
(assert (= (=> (and (or (and (and (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x735)) (> x210 x735) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x735)) (= x210 (x1262 (+ 20 x1349))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x735)) (= x525 x1616) (= x296 (* 79228162514264337593543950336 x1030)) (= (x1262 (+ 32 x735)) x1885) (= x638 (* x746 79228162514264337593543950336)) (= (x1262 (+ x1885 20)) x1349) (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 0 x1717) (= x1616 (x1675 40 20 (x372 x296 96) (x372 x638 96))) (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1222 x210)) (not x574)) (and x574 (and (= x1510 (* x1030 79228162514264337593543950336)) (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1262 (+ x1039 20)) x1645) (= (x1262 (+ x735 32)) x960) (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x735) (= x1222 x1645) (not (= x735 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x735 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1732 (x1675 40 20 (x372 x1749 96) (x372 x1510 96))) (not (= x735 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x525 x1732) (= 1 x1717) (= (* 79228162514264337593543950336 x746) x1749) (> x1645 x735) (= (x1262 (+ 20 x960)) x1039)))) (= x574 (< x746 x1030))) x1494) x1311))
(assert (x800 x1348))
(assert (x800 x1842))
(assert (x800 x838))
(assert (= (x1938 64 x57 6) (x377 (x1938 64 x57 6))))
(assert (x800 x1968))
(assert (= (and x394 (not x495)) x270))
(assert (x800 x1033))
(assert (x800 x366))
(assert (x800 x1363))
(assert (= (x1675 40 20 (x372 x417 96) (x372 x411 96)) (x377 (x1675 40 20 (x372 x417 96) (x372 x411 96)))))
(assert (= (and (not x766) x796) x83))
(assert (x800 x1304))
(assert (= (x485 (x1938 64 x1339 6)) 64))
(assert (= (div x1585 2) (x372 x1585 1)))
(assert (x800 x356))
(assert (x800 x976))
(assert (=> (= x664 0) (= 0 (div x1482 x664))))
(assert (= (x519 (x1675 40 20 (x372 x1048 96) (x372 x531 96))) (x372 x1048 96)))
(assert (=> (= x1671 0) (= 0 (div x10 x1671))))
(assert (x800 x733))
(assert (x800 x1670))
(assert (< (x1938 64 x738 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (= 0 x1309) (= (div x167 x1309) 0)))
(assert (= (=> (and (= (x560 (- x1420 x746)) x114) (= (x1389 340282366920938463463374607431768211455 x1267) x1076) (= (x1389 340282366920938463463374607431768211455 x435) x1050) (= x691 (ite (not (< x1267 100)) (ite (not (< x435 100)) 1 0) (ite (not (< x1267 100)) 1 0))) (= 1 x691) (= x423 (> x114 0)) (not (> x1769 x943))) (and (=> (and (and (or (and x951 (and (<= x409 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x409) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x409)) (= (* 79228162514264337593543950336 x1420) x1707) (not (= x409 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x409) (= x1791 (x1262 (+ 32 x409))) (> x1166 x409) (= x1986 (* x746 79228162514264337593543950336)) (= x1899 (x1262 (+ x1791 20))) (= (x1675 40 20 (x372 x1707 96) (x372 x1986 96)) x921) (= 1 x883) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x409)) (= x1166 (x1262 (+ x1899 20))) (= x1339 x921) (= x1166 x661))) (and (not x951) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x409) (= x637 (x1262 (+ x78 20))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x409)) (= x1339 x1611) (<= x409 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x409)) (= (x1675 40 20 (x372 x145 96) (x372 x1653 96)) x1611) (= x1653 (* 79228162514264337593543950336 x1420)) (< x409 x637) (= x1737 (x1262 (+ x409 32))) (<= x409 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x409 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x78 (x1262 (+ 20 x1737))) (= x145 (* x746 79228162514264337593543950336)) (= x661 x637) (= x883 0)))) (= x951 (< x1420 x746))) x423) x1840) (=> (and (and (= x1072 x409) (= x1820 x304)) (not x423)) x77))) x1724))
(assert (= x513 (and x1466 (not x768))))
(assert (= x325 (and x1147 (not x1576))))
(assert (= (and x958 (not x423)) x534))
(assert (= (x485 (x1938 64 x131 x1916)) 64))
(assert (x800 x308))
(assert (x974 x1370))
(assert (x800 x740))
(assert (x800 x917))
(assert (x800 x1050))
(assert (x800 x1680))
(assert (x800 x784))
(assert (= 20 (x1006 (x1675 40 20 (x372 x374 96) (x372 x905 96)))))
(assert (x800 x234))
(assert (x800 x1652))
(assert (x800 x1904))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1935 96) (x372 x1496 96))))
(assert (x800 x1307))
(assert (< (x1675 40 20 (x372 x1122 96) (x372 x892 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x354 115792089237316195423571325291054828791733448040247995807669039))
(assert (= x103 (x1006 (x1938 64 x103 0))))
(assert (x800 x1164))
(assert (x800 x1219))
(assert (= (=> (and (and (= x1812 (= x30 0)) (= 324 x631) (= 1 x1957) (= x30 (x1557 324))) (or (and x1812 (and (= 1 x1677) (<= 1 x772) (= x772 (x1817 x1770)))) (not x1812))) x996) x1894))
(assert (= x407 (and x1683 x1374)))
(assert (x800 x1399))
(assert (x800 x566))
(assert (x800 x1615))
(assert (= x177 (=> (and (or (and (not x1663) (and (= x362 x804) (= x1387 x600))) (and x1663 (and (= x362 x1598) (= x804 x600)))) (= x1663 (= x1296 0))) x1831)))
(assert (= x250 (and (not x1051) x196)))
(assert (x800 x1523))
(assert (= (or (and x1049 x621) x281) x1542))
(assert (= x1145 (and x1302 x1642)))
(assert (= (x485 (x1675 40 20 (x372 x277 96) (x372 x146 96))) 40))
(assert (=> (<= (x372 x334 96) 10000) (= (x377 (x372 x334 96)) 0)))
(assert (x800 x8))
(assert (= (x372 x453 96) (div x453 79228162514264337593543950336)))
(assert (= (x1938 64 x131 x1300) (x377 (x1938 64 x131 x1300))))
(assert (< 10000 (x1675 40 20 (x372 x1190 96) (x372 x850 96))))
(assert (= x727 (and x1689 x1063)))
(assert (x800 x511))
(assert (x800 x406))
(assert (x800 x1518))
(assert (x800 x103))
(assert (x800 x730))
(assert (=> (= 0 x1149) (= (div x504 x1149) 0)))
(assert (=> (= x1814 0) (= 0 (div x815 x1814))))
(assert (x800 x221))
(assert (= 20 (x1006 (x1675 40 20 (x372 x457 96) (x372 x181 96)))))
(assert (x800 x1828))
(assert (= x1807 (=> (and (or (and x1715 (and (= x1513 x1637) (= x49 x1901))) (and (and (= x49 x1513) (= x1637 x1901)) (not x1715))) (and (>= 340282366920938463463374607431768211455 x1513) (not (= x164 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x1901 340282366920938463463374607431768211455) (> x1848 x164) (= x1901 (x265 x648)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x164)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x164) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x164)) (= x1848 (x1262 (+ x164 64))) (= (x1938 64 x934 6) x648) (<= x164 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1513 (x1805 x648)) (= (= x1078 0) x1715) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x164))) x1634)))
(assert (x800 x27))
(assert (x354 1461501637330902918203684832716283019655932542975))
(assert (x800 x267))
(assert (= (x1006 (x1938 64 x1339 6)) x1339))
(assert (x800 x1463))
(assert (x800 x549))
(assert (= (x377 (x1938 64 x1 6)) (x1938 64 x1 6)))
(assert (= (x372 x417 96) (div x417 79228162514264337593543950336)))
(assert (= 40 (x485 (x1675 40 20 (x372 x1538 96) (x372 x1162 96)))))
(assert (x800 x442))
(assert (= (x485 (x1938 64 x131 x918)) 64))
(assert (= (x1675 40 20 (x372 x296 96) (x372 x638 96)) (x377 (x1675 40 20 (x372 x296 96) (x372 x638 96)))))
(assert (x261 x1016))
(assert (=> (= 0 x801) (= (div x1246 x801) 0)))
(assert (= x659 (x519 (x1938 64 x746 x659))))
(assert (x800 x695))
(assert (x800 x1644))
(assert (= x803 (and x1508 x1705)))
(assert (=> (>= 10000 (x372 x146 96)) (= (x377 (x372 x146 96)) 0)))
(assert (x354 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x800 x1792))
(assert (= (x377 (x1675 40 20 (x372 x627 96) (x372 x1216 96))) (x1675 40 20 (x372 x627 96) (x372 x1216 96))))
(assert (= (or x1244 x890) x1849))
(assert (< (x1938 64 x1588 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x455 x964) x527))
(assert (= (or x270 x1252) x1633))
(assert (= (and x471 (not x1976)) x483))
(assert (x800 x746))
(assert (= 0 (x377 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x800 x120))
(assert (=> (= x888 0) (= (div x1525 x888) 0)))
(assert (x800 x367))
(assert (x800 x1060))
(assert (x261 x1370))
(assert (= (and x1673 (not x1459)) x1049))
(assert (= (x372 x296 96) (div x296 79228162514264337593543950336)))
(assert (x800 x598))
(assert (= (x1938 64 x131 x1916) (x377 (x1938 64 x131 x1916))))
(assert (x800 x680))
(assert (= (x372 x905 96) (div x905 79228162514264337593543950336)))
(assert (x800 x1057))
(assert (x800 x262))
(assert (x800 x1454))
(assert (< (x1675 40 20 (x372 x627 96) (x372 x1216 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x1709))
(assert (= x1269 (=> (and (or (and x1630 (and (and (= (x560 (- x1031 x746)) x1165) (= (< 0 x1165) x719)) (or (and (and (= x1420 x646) (= x872 x1030)) (not x719)) (and x719 (and (= x1420 x1030) (= x646 x1031)))))) (and (not x1630) (and (= x1031 x1030) (= x646 x872)))) (and (= (x560 (- x1420 x746)) x505) (= x1630 (> x505 0)))) x563)))
(assert (x800 x1986))
(assert (x800 x1150))
(assert (not (x354 (x1938 64 x131 x1300))))
(assert (x800 x1534))
(assert (=> (>= 10000 (x372 x1653 96)) (= (x377 (x372 x1653 96)) 0)))
(assert (= (x372 x1778 96) (x911 (x1675 40 20 (x372 x430 96) (x372 x1778 96)))))
(assert (> (x1675 40 20 (x372 x137 96) (x372 x1641 96)) 10000))
(assert (x800 x693))
(assert (x800 x258))
(assert (x800 x417))
(assert (= (div x1010 2) (x372 x1010 1)))
(assert (= x847 (=> (= x1459 (= 0 x38)) (and (=> (and x1459 (and (= x1977 x1213) (= x154 0))) x1895) (=> (and (and (= (< 0 x569) x621) (= (x560 (- x1770 x872)) x569)) (not x1459)) (and (=> (and (and (= (x560 (- x1420 x746)) x617) (= x152 (> x617 0))) (not x621)) (and (=> x152 x1187) (=> (and (and (= x1870 x899) (= x872 x566)) (not x152)) x1098))) (=> x621 x1187)))))))
(assert (x800 x1934))
(assert (x800 x1440))
(assert (= (x377 2835717307) 0))
(assert (= (x372 x1820 2) (div x1820 4)))
(assert (= (and x575 x819) x1921))
(assert (x800 x1623))
(assert (= 64 (x485 (x1938 64 x351 1))))
(assert (= x1340 (and x1639 x1568)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1407 96) (x372 x833 96))))
(assert (x800 x472))
(assert (=> (= x97 0) (= 0 (div x190 x97))))
(assert (x800 x1142))
(assert (=> (= 0 x1322) (= (div x1773 x1322) 0)))
(assert (not (x354 (x1938 64 x297 6))))
(assert (x800 x1541))
(assert (x800 x1510))
(assert (not (x354 (x1675 40 20 (x372 x549 96) (x372 x70 96)))))
(assert (x800 x24))
(assert (= x131 (x1006 (x1938 64 x131 x1379))))
(assert (=> (>= 10000 (x372 x327 96)) (= 0 (x377 (x372 x327 96)))))
(assert (x800 x147))
(assert (= (x377 (x1938 64 x746 x659)) (x1938 64 x746 x659)))
(assert (x800 x1281))
(assert (x800 x998))
(assert (= (=> (and (= (= 0 x1678) x1381) (or (and (and (= x1738 x726) (= x992 x1436)) (not x1381)) (and (and (= x1107 x992) (= x1738 x1436)) x1381))) x702) x268))
(assert (= (x372 x56 96) (div x56 79228162514264337593543950336)))
(assert (x800 x280))
(assert (= (=> (= (< 0 x588) x153) (and (=> (and (and (or (and (and (= x1454 x1803) (= x728 (* x646 79228162514264337593543950336)) (= x378 x579) (= x194 (x1262 (+ x183 20))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1215)) (> x1803 x1215) (= x133 1) (= x1327 (* x746 79228162514264337593543950336)) (= x1803 (x1262 (+ x194 20))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1215)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1215) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1215) (not (= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x378 (x1675 40 20 (x372 x728 96) (x372 x1327 96))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1215) (= (x1262 (+ 32 x1215)) x183)) x455) (and (and (= 0 x133) (= (x1262 (+ x413 20)) x733) (= x1376 (x1262 (+ 20 x733))) (= (* x746 79228162514264337593543950336) x1935) (not (= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x225 x579) (> x1376 x1215) (<= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x225 (x1675 40 20 (x372 x1935 96) (x372 x1496 96))) (= x1454 x1376) (<= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1262 (+ 32 x1215)) x413) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1215)) (<= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* x646 79228162514264337593543950336) x1496)) (not x455))) (and (= x455 (< x646 x746)) (<= x588 340282366920938463463374607431768211455))) x153) x975) (=> (and (and (= 0 x431) (= x1285 x1215)) (not x153)) x498))) x35))
(assert (x800 x1446))
(assert (x800 x1122))
(assert (x800 x1757))
(assert (x800 x585))
(assert (not (x354 (x1938 64 x579 6))))
(assert (=> (= 0 x594) (= (div x929 x594) 0)))
(assert (= (x911 (x1675 40 20 (x372 x549 96) (x372 x70 96))) (x372 x70 96)))
(assert (x800 x879))
(assert (x800 x939))
(assert (x800 x771))
(assert (=> (= x1480 0) (= 0 (div x557 x1480))))
(assert (x800 x313))
(assert (x800 x215))
(assert (x800 x1525))
(assert (x800 x1872))
(assert (= x700 (or x995 x1141)))
(assert (x800 x950))
(assert (= 40 (x485 (x1675 40 20 (x372 x137 96) (x372 x1641 96)))))
(assert (not (x354 (x1938 64 x667 6))))
(assert (= (x519 (x1938 64 x1 6)) 6))
(assert (x800 x161))
(assert (x800 x1737))
(assert (x800 x61))
(assert (x800 x36))
(assert (x800 x1380))
(assert (= (or x1056 x130) x1705))
(assert (x354 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (or x669 x6) x1247))
(assert (x800 x909))
(assert (x800 x1814))
(assert (= 40 (x485 (x1675 40 20 (x372 x1190 96) (x372 x850 96)))))
(assert (x800 x892))
(assert (x800 x822))
(assert (x800 x522))
(assert (= (x1006 (x1675 40 20 (x372 x145 96) (x372 x1653 96))) 20))
(assert (= (x377 (x1938 64 x1520 6)) (x1938 64 x1520 6)))
(assert (= x1561 (and x1276 x1663)))
(assert (= 64 (x485 (x1938 64 x1086 6))))
(assert (x800 x834))
(assert (= x1416 (and x330 x1768)))
(assert (x800 x594))
(assert (x800 x641))
(assert (x800 x755))
(assert (< (x1675 40 20 (x372 x728 96) (x372 x1327 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (div x1772 79228162514264337593543950336) (x372 x1772 96)))
(assert (> (x1938 64 x579 6) 10000))
(assert (x800 x230))
(assert (= (x1006 (x1675 40 20 (x372 x1407 96) (x372 x833 96))) 20))
(assert (= (x1006 (x1938 64 x746 x659)) x746))
(assert (x800 x236))
(assert (x800 x1132))
(assert (x800 x300))
(assert (x800 x1292))
(assert (< 10000 (x1675 40 20 (x372 x549 96) (x372 x70 96))))
(assert (x800 x528))
(assert (x800 x456))
(assert (= 0 (x519 (x1938 64 x103 0))))
(assert (x800 x517))
(assert (x800 x167))
(assert (x800 x493))
(assert (= (x1006 (x1675 40 20 (x372 x1355 96) (x372 x1772 96))) 20))
(assert (= (x519 (x1675 40 20 (x372 x229 96) (x372 x984 96))) (x372 x229 96)))
(assert (x800 x1188))
(assert (x800 x1763))
(assert (= (or x203 x981) x1126))
(assert (x800 x635))
(assert (=> (<= (x372 x36 96) 10000) (= 0 (x377 (x372 x36 96)))))
(assert (x800 x704))
(assert (= x873 (and x1206 x1172)))
(assert (x800 x1467))
(assert (x800 x79))
(assert (< 10000 (x1938 64 x1241 6)))
(assert (not (x354 (x1675 40 20 (x372 x229 96) (x372 x984 96)))))
(assert (= (div x850 79228162514264337593543950336) (x372 x850 96)))
(assert (x800 x1429))
(assert (x354 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x800 x1834))
(assert (x800 x646))
(assert (x1176 x1852))
(assert (= (x519 (x1675 40 20 (x372 x1590 96) (x372 x453 96))) (x372 x1590 96)))
(assert (x800 x1909))
(assert (x800 x795))
(assert (= (x377 (x1938 64 x103 1)) (x1938 64 x103 1)))
(assert (x800 x1156))
(assert (x800 x278))
(assert (=> (>= 10000 (x372 x1665 96)) (= 0 (x377 (x372 x1665 96)))))
(assert (x800 x1418))
(assert (= (and x152 x1975) x281))
(assert (= x89 (and x1286 x565)))
(assert (x800 x1558))
(assert (x800 x1837))
(assert (= (x1006 (x1675 40 20 (x372 x296 96) (x372 x638 96))) 20))
(assert (= x920 (=> (and (= x845 (= x1152 0)) (or (and (not x845) (and (= x258 x494) (= x653 x600))) (and (and (= x653 x258) (= x494 x362)) x845))) x1589)))
(assert (x800 x1699))
(assert (= x1203 (and x62 (not x389))))
(assert (= x629 (and x1975 (not x152))))
(assert (=> (= x774 0) (= (div x1515 x774) 0)))
(assert (= (and x640 x652) x937))
(assert (x800 x1293))
(assert (x800 x1971))
(assert (x800 x602))
(assert (x800 x1393))
(assert (x354 1000000000000000))
(assert (x800 x1567))
(assert (not (x354 (x1938 64 x1464 6))))
(assert (x800 x18))
(assert (x800 x295))
(assert (x800 x1035))
(assert (= 64 (x485 (x1938 64 x57 6))))
(assert (x800 x1496))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x1730 1)))
(assert (< 10000 (x1938 64 x1588 6)))
(assert (x800 x385))
(assert (x1176 x285))
(assert (x800 x1685))
(assert (= (and x196 x1051) x1291))
(assert (x800 x1270))
(assert (=> (= 0 x716) (= 0 (div x1448 x716))))
(assert (x800 x677))
(assert (x800 x202))
(assert (x800 x1485))
(assert (x800 x957))
(assert (= x77 (=> (= (= 0 x1820) x843) (and (=> (and (and (= x1369 0) (= x1072 x503)) x843) x113) (=> (and (and (= x1976 (< 0 x1571)) (= (x560 (- x1420 x872)) x1571)) (not x843)) (and (=> (and (not x1976) (and (= (> x1304 0) x243) (= (x560 (- x1031 x746)) x1304))) (and (=> x243 x239) (=> (and (and (= x1030 x1870) (= x872 x646)) (not x243)) x563))) (=> x1976 x239)))))))
(assert (= (x372 x36 96) (x911 (x1675 40 20 (x372 x334 96) (x372 x36 96)))))
(assert (=> (<= (x372 x638 96) 10000) (= (x377 (x372 x638 96)) 0)))
(assert (x800 x626))
(assert (x800 x25))
(assert (x800 x1758))
(assert (= (or (and x471 x1976) x812) x1147))
(assert (x800 x1514))
(assert (= 20 (x1006 (x1675 40 20 (x372 x1190 96) (x372 x850 96)))))
(assert (x800 x526))
(assert (x800 x63))
(assert (= (x377 (x1675 40 20 (x372 x374 96) (x372 x905 96))) (x1675 40 20 (x372 x374 96) (x372 x905 96))))
(assert (x800 x1217))
(assert (=> (<= x746 10000) (= (x377 x746) 0)))
(assert (< 10000 (x1938 64 x1464 6)))
(assert (x800 x1011))
(assert (= (x372 x1707 96) (x519 (x1675 40 20 (x372 x1707 96) (x372 x1986 96)))))
(assert (x800 x1713))
(assert (=> (>= 10000 (x372 x1327 96)) (= 0 (x377 (x372 x1327 96)))))
(assert (= (and x734 x219) x291))
(assert (x800 x288))
(assert (= (and (not x564) x662) x938))
(assert (= (and x1849 (not x780)) x335))
(assert (x800 x1511))
(assert (=> (<= (x372 x583 96) 10000) (= (x377 (x372 x583 96)) 0)))
(assert (=> (= 0 x1393) (= (div x632 x1393) 0)))
(assert (x800 x1299))
(assert (x800 x237))
(assert (x800 x1560))
(assert (= x654 (and (not x1408) x1879)))
(assert (= (div x1830 79228162514264337593543950336) (x372 x1830 96)))
(assert (x800 x556))
(assert (x800 x1449))
(assert (= 40 (x485 (x1675 40 20 (x372 x1122 96) (x372 x892 96)))))
(assert (x800 x302))
(assert (x800 x502))
(assert (x261 x1533))
(assert (x800 x1208))
(assert (x800 x1658))
(assert (= (x485 (x1938 64 x525 6)) 64))
(assert (= (x372 x794 96) (div x794 79228162514264337593543950336)))
(assert (x800 x745))
(assert (= (div x1507 2) (x372 x1507 1)))
(assert (x800 x1004))
(assert (x800 x1749))
(assert (x800 x1989))
(assert (x800 x1538))
(assert (x800 x649))
(assert (=> (= 0 (+ x1795 x1865)) (= (div x1168 (+ x1795 x1865)) 0)))
(assert (x261 x1898))
(assert (x800 x627))
(assert (not (x354 (x1938 64 x131 x1379))))
(assert (= x1949 (and x4 x1674)))
(assert (x800 x154))
(assert (x800 x520))
(assert (> (x1675 40 20 (x372 x650 96) (x372 x928 96)) 10000))
(assert (= x895 (and x1460 x1672)))
(assert (x800 x882))
(assert (x800 x114))
(assert (= (x911 (x1675 40 20 (x372 x1407 96) (x372 x833 96))) (x372 x833 96)))
(assert (x800 x252))
(assert (> (x1938 64 x1703 6) 10000))
(assert (x800 x1395))
(assert (> (x1675 40 20 (x372 x430 96) (x372 x1778 96)) 10000))
(assert (=> (<= (x372 x230 96) 10000) (= (x377 (x372 x230 96)) 0)))
(assert (=> (>= 10000 x1770) (= (x377 x1770) 0)))
(assert (x1176 x1898))
(assert (= x1195 (=> (and (or (and (not x1172) (and (= x516 x1435) (= x221 x1960))) (and x1172 (and (= x21 x221) (= x516 x1960)))) (= x1172 (= x27 0))) x1823)))
(assert (x800 x551))
(assert (=> (>= 10000 x752) (= (x377 x752) 0)))
(assert (= x207 (and (not x972) x821)))
(assert (x800 x149))
(assert (< (x1938 64 x131 x1300) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x1536))
(assert (x800 x23))
(assert (x800 x1571))
(assert (= x1673 (or x660 x1015 x1788)))
(assert (= x492 (=> (and (or (and (and (= x1435 x138) (= x1082 x21)) (not x1163)) (and (and (= x1082 x1435) (= x348 x21)) x1163)) (= (= 0 x82) x1163)) x1954)))
(assert (= (and x1029 x369) x60))
(assert (x800 x518))
(assert (= x1755 (and x105 x719)))
(assert (x800 x820))
(assert (=> (= 0 x447) (= (div x1202 x447) 0)))
(assert (x800 x924))
(assert (x800 x984))
(assert (= x1537 (and x332 (not x835))))
(assert (x800 x578))
(assert (x800 x208))
(assert (=> (= x948 0) (= 0 (div x1518 x948))))
(assert (= (x519 (x1675 40 20 (x372 x1646 96) (x372 x1714 96))) (x372 x1646 96)))
(assert (=> (= x704 0) (= 0 (div x1182 x704))))
(assert (x800 x1120))
(assert (x800 x391))
(assert (x800 x1717))
(assert (x800 x1253))
(assert (= 40 (x485 (x1675 40 20 (x372 x296 96) (x372 x638 96)))))
(assert (x800 x716))
(assert (=> (= (+ x1577 x1989) 0) (= (div x1384 (+ x1577 x1989)) 0)))
(assert (=> (= x1655 0) (= (div x668 x1655) 0)))
(assert (= (div x730 2) (x372 x730 1)))
(assert (x800 x1372))
(assert (x800 x1706))
(assert (= (x372 x1935 96) (div x1935 79228162514264337593543950336)))
(assert (x800 x1430))
(assert (x800 x1484))
(assert (x800 x1677))
(assert (x800 x1956))
(assert (=> (>= 10000 (x372 x457 96)) (= 0 (x377 (x372 x457 96)))))
(assert (= (x519 (x1938 64 x738 7)) 7))
(assert (= x1944 (=> (and (and (<= x1192 340282366920938463463374607431768211455) (= x512 (x1938 64 x1588 6)) (>= 340282366920938463463374607431768211455 x1368) (<= x1337 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1337 x1026) (= x1368 (x1805 x512)) (= (= x370 0) x1850) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1337) (= (x265 x512) x1192) (not (= x1337 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1337)) (<= x1337 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1337)) (= (x1262 (+ x1337 64)) x1026)) (or (and (and (= x1936 x1192) (= x1368 x1452)) x1850) (and (and (= x1936 x1368) (= x1452 x1192)) (not x1850)))) x1295)))
(assert (x800 x1843))
(assert (x800 x1936))
(assert (x800 x1978))
(assert (x800 x1207))
(assert (= (x1675 40 20 (x372 x334 96) (x372 x36 96)) (x377 (x1675 40 20 (x372 x334 96) (x372 x36 96)))))
(assert (x800 x1498))
(assert (= (and x72 x231) x844))
(assert (x800 x597))
(assert (x800 x927))
(assert (=> (= x783 0) (= (div x1658 x783) 0)))
(assert (x800 x1923))
(assert (x800 x872))
(assert (=> (>= 10000 (x372 x1986 96)) (= (x377 (x372 x1986 96)) 0)))
(assert (= (or x500 x628) x1887))
(assert (x800 x750))
(assert (x800 x1651))
(assert (x800 x1686))
(assert (=> (= 0 x1777) (= 0 (div x198 x1777))))
(assert (= (div x892 79228162514264337593543950336) (x372 x892 96)))
(assert (= (x519 (x1938 64 x667 6)) 6))
(assert (x800 x790))
(assert (x354 57896044618658097711785492504343953926975274699741220483192166611388333031422))
(assert (= (x377 (x1675 40 20 (x372 x1400 96) (x372 x366 96))) (x1675 40 20 (x372 x1400 96) (x372 x366 96))))
(assert (= (and x1812 x303) x679))
(assert (=> (= 0 x124) (= (div x1358 x124) 0)))
(assert (x800 x431))
(assert (x800 x1232))
(assert (x800 x770))
(assert (x800 x269))
(assert (= (x485 (x1938 64 x131 0)) 64))
(assert (x800 x324))
(assert (= (=> (and (and (>= x434 1) (= (x1262 (+ x1598 x1387)) x421) (<= x1814 57896044618658097711785492504343953926975274699741220483192166611388333031422) (= x139 (or (and (> 100 x635) (= (<= x635 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x635 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (mod (* x861 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1699) (= x434 (x1262 (+ x967 x861))) (= (div x1699 x434) x459) (= (x560 (- x1495 x804)) x635) (<= 1 x1814) (= x1044 (mod (* x104 x459) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x707 x804) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x815) (= x804 (x372 x421 1)) (= x861 (div x815 x1814)) (= (div x1044 x91) x1495) (= (x1262 (+ x459 x651)) x91) (= x1814 (+ x1795 x804)) (<= 1 x91)) (or (and (= 0 x1296) x139) (and (and (= (x560 (- x1289 x773)) x582) (<= 1 x161) (= x1296 (ite (or (and (> x582 x635) (= (<= x582 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x635))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x635) (<= x582 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x427 (mod (* x707 x773) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1448 (mod (* x280 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 1 x716) (= x1289 (div x1419 x161)) (= x773 (+ x804 1000000000000000)) (= (x1262 (+ x651 x1360)) x161) (>= 115792089237316195423571325291054828791733448040247995807669039 x716) (= (+ x280 x967) x716) (= x1419 (mod (* x104 x1360) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1360 (div x1448 x716)) (= (div x427 (+ x1795 x773)) x280)) (not x139)))) x177) x674))
(assert (x800 x1318))
(assert (x800 x1298))
(assert (=> (= x347 0) (= 0 (div x515 x347))))
(assert (x800 x131))
(assert (x800 x1580))
(assert (= x996 (=> (and (or (and (and (= x476 (x1512 356)) (= x1802 (x1557 324)) (= 1 x476) (>= x1802 32) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1802)) (not x1051)) (and (= 1 x1057) x1051)) (and (= x1481 324) (= 324 x1270) (= x1171 324) (= x1225 (x1557 324)) (= x1057 (ite x1051 1 0)) (= x1051 (= 0 x1225)))) x96)))
(assert (x800 x365))
(assert (x800 x86))
(assert (= 20 (x1006 (x1675 40 20 (x372 x728 96) (x372 x1327 96)))))
(assert (x800 x420))
(assert (= 40 (x485 (x1675 40 20 (x372 x627 96) (x372 x1216 96)))))
(assert (= 64 (x485 (x1938 64 x103 0))))
(assert (= x975 (=> (and (or (and (and (>= x668 0) (not (> x262 x1399)) (= (+ x197 x588) x1655) (= x668 (* x1399 x588)) (<= 1 x1655) (>= 340282366920938463463374607431768211455 x1505) (= x1898 x262) (= x1505 (div x668 x1655)) (= (x560 (- x1399 x1505)) x262) (<= x668 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1655 x1985) (>= 680564733841876926926749214863536422910 x1655) (>= 340282366920938463463374607431768211455 x262) (= x1505 x1570)) (not x389)) (and x389 (and (= x757 (div x1871 x1115)) (not (< x197 x1623)) (>= 680564733841876926926749214863536422910 x1115) (= x1871 (* x197 x588)) (>= x1115 1) (<= x1623 340282366920938463463374607431768211455) (= x757 x1570) (= (+ x588 x1399) x1115) (= (x560 (- x197 x757)) x1623) (= x1623 x1985) (>= 340282366920938463463374607431768211455 x757) (<= x1871 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1898 x1115) (>= x1871 0)))) (and (= x1399 (x989 x1223)) (= (ite (not (< x1399 100)) (ite (not (> 100 x197)) 1 0) (ite (not (< x1399 100)) 1 0)) x561) (>= 340282366920938463463374607431768211455 x1399) (= (x375 x1223) x197) (= (x1938 64 x579 6) x1223) (= x389 (= x133 0)) (>= 340282366920938463463374607431768211455 x197) (= x561 1))) x558)))
(assert (= (x377 (x1675 40 20 (x372 x728 96) (x372 x1327 96))) (x1675 40 20 (x372 x728 96) (x372 x1327 96))))
(assert (= (x1006 (x1675 40 20 (x372 x1122 96) (x372 x892 96))) 20))
(assert (x800 x170))
(assert (x800 x840))
(assert (x800 x1648))
(assert (= x301 (and x1633 x1036)))
(assert (x800 x321))
(assert (= (or x396 x1869) x966))
(assert (x800 x1821))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x1 6)))
(assert (x800 x1779))
(assert (= (and x1849 x780) x487))
(assert (x800 x571))
(assert (x800 x1110))
(assert (x800 x1109))
(assert (x800 x539))
(assert (x800 x1458))
(assert (= (x377 (x1675 40 20 (x372 x794 96) (x372 x1620 96))) (x1675 40 20 (x372 x794 96) (x372 x1620 96))))
(assert (not (x354 (x1675 40 20 (x372 x263 96) (x372 x542 96)))))
(assert (= (and x1630 x612) x105))
(assert (=> (<= x738 10000) (= (x377 x738) 0)))
(assert (x800 x1692))
(assert (x800 x1366))
(assert (< (x1675 40 20 (x372 x334 96) (x372 x36 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (= 0 x1766) (= (div x1281 x1766) 0)))
(assert (=> (>= 10000 (x372 x366 96)) (= 0 (x377 (x372 x366 96)))))
(assert (=> (= x1085 0) (= 0 (div x1804 x1085))))
(assert (= (x377 (x1938 64 x351 1)) (x1938 64 x351 1)))
(assert (= (x1006 (x1675 40 20 (x372 x1333 96) (x372 x1123 96))) 20))
(assert (x800 x429))
(assert (x800 x38))
(assert (=> (= x1947 0) (= 0 (div x961 x1947))))
(assert (x800 x613))
(assert (=> (>= 10000 (x372 x417 96)) (= (x377 (x372 x417 96)) 0)))
(assert (x800 x1873))
(assert (= (x1006 (x1938 64 x1730 1)) x1730))
(assert (x800 x929))
(assert (< (x1675 40 20 (x372 x277 96) (x372 x146 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (= x1052 0) (= (div x608 x1052) 0)))
(assert (not (x354 (x1675 40 20 (x372 x1935 96) (x372 x1496 96)))))
(assert (x800 x1782))
(assert (x800 x684))
(assert (x800 x228))
(assert (x800 x1811))
(assert (=> (= x169 0) (= 0 (div x93 x169))))
(assert (not (x354 (x1938 64 x1241 6))))
(assert (= 64 (x485 (x1938 64 x1588 6))))
(assert (x800 x1776))
(assert (x800 x615))
(assert (= (x485 (x1675 40 20 (x372 x263 96) (x372 x542 96))) 40))
(assert (x800 x1328))
(assert (=> (>= 10000 x1031) (= (x377 x1031) 0)))
(assert (x800 x1249))
(assert (= x1068 (or x89 x760)))
(assert (= x812 (and x483 x243)))
(assert (=> (= 0 x289) (= (div x1822 x289) 0)))
(assert (x800 x1964))
(assert (= 20 (x1006 (x1675 40 20 (x372 x229 96) (x372 x984 96)))))
(assert (x800 x624))
(assert (x800 x163))
(assert (x800 x714))
(assert (not (x354 (x1938 64 x934 6))))
(assert (=> (= x380 0) (= (div x1532 x380) 0)))
(assert (< (x1938 64 x667 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x372 x430 96) (div x430 79228162514264337593543950336)))
(assert (x800 x1702))
(assert (= (x1938 64 x1824 6) (x377 (x1938 64 x1824 6))))
(assert (=> (= x1733 0) (= 0 (div x61 x1733))))
(assert (x800 x1880))
(assert (x800 x698))
(assert (x800 x1868))
(assert (= x1012 (and x1071 x1125)))
(assert (= 40 (x485 (x1675 40 20 (x372 x794 96) (x372 x1620 96)))))
(assert (= x981 (and (not x683) x1068)))
(assert (x800 x1397))
(assert (x800 x151))
(assert (> (x1675 40 20 (x372 x1355 96) (x372 x1772 96)) 10000))
(assert (x800 x1317))
(assert (x800 x721))
(assert (= (x519 (x1675 40 20 (x372 x549 96) (x372 x70 96))) (x372 x549 96)))
(assert (x800 x290))
(assert (x800 x1093))
(assert (= (x372 x1407 96) (div x1407 79228162514264337593543950336)))
(assert (x800 x1312))
(assert (x800 x145))
(assert (x261 x1097))
(assert (= true x1274))
(assert (x800 x178))
(assert (> (x1675 40 20 (x372 x1400 96) (x372 x366 96)) 10000))
(assert (x800 x1803))
(assert (x1176 x1985))
(assert (=> (<= (x372 x1538 96) 10000) (= (x377 (x372 x1538 96)) 0)))
(assert (x800 x705))
(assert (x800 x530))
(assert (x800 x1082))
(assert (= 6 (x519 (x1938 64 x1464 6))))
(assert (x800 x402))
(assert (x800 x759))
(assert (x800 x115))
(assert (= (x1006 (x1938 64 x746 x1810)) x746))
(assert (= (x519 (x1675 40 20 (x372 x583 96) (x372 x253 96))) (x372 x583 96)))
(assert (x800 x22))
(assert (= (=> (and (= (x1938 64 x103 0) x1108) (not (< x1161 x1636)) (= false x1924) (= (x560 (- x1161 x1636)) x1692) (= x179 32) (= (x1846 x1108) x1161) (= false x836) (= (x1938 64 x103 0) x460) (not (< x1161 x1692)) (= x571 (x1262 (+ x1636 x1873))) (= x1371 (x1938 64 x131 0)) (not (> x1873 x571)) (= x1151 1) (= (x336 x1371) x1873)) x1894) x462))
(assert (x800 x753))
(assert (not (x354 (x1675 40 20 (x372 x374 96) (x372 x905 96)))))
(assert (x800 x1748))
(assert (not (x354 (x1675 40 20 (x372 x1646 96) (x372 x1714 96)))))
(assert (x800 x1022))
(assert (x800 x1184))
(assert (= (x1006 (x1675 40 20 (x372 x1590 96) (x372 x453 96))) 20))
(assert (x800 x1165))
(assert (x800 x555))
(assert (x800 x1778))
(assert (= (and x1679 (not x121)) x1272))
(assert (= x1242 (=> (= x824 (= (ite (> (ite (< 0 (ite (> (ite (> (ite (not (> x1577 100)) (ite (not (> x1577 100)) 1 0) (ite (not (> x1647 100)) 1 0)) 0) (ite (not (< 100 x1577)) (ite (not (> x1577 100)) 1 0) (ite (not (< 100 x1647)) 1 0)) (ite (not (> x49 100)) 1 0)) 0) (ite (> (ite (not (< 100 x1577)) (ite (not (< 100 x1577)) 1 0) (ite (not (< 100 x1647)) 1 0)) 0) (ite (not (> x1577 100)) (ite (not (> x1577 100)) 1 0) (ite (not (< 100 x1647)) 1 0)) (ite (not (< 100 x49)) 1 0)) (ite (not (> x1637 100)) 1 0))) (ite (< 0 (ite (> (ite (not (< 100 x1577)) (ite (not (< 100 x1577)) 1 0) (ite (not (< 100 x1647)) 1 0)) 0) (ite (not (> x1577 100)) (ite (not (> x1577 100)) 1 0) (ite (not (> x1647 100)) 1 0)) (ite (not (> x49 100)) 1 0))) (ite (> (ite (not (< 100 x1577)) (ite (not (< 100 x1577)) 1 0) (ite (not (< 100 x1647)) 1 0)) 0) (ite (not (> x1577 100)) (ite (not (< 100 x1577)) 1 0) (ite (not (> x1647 100)) 1 0)) (ite (not (> x49 100)) 1 0)) (ite (not (> x1637 100)) 1 0)) (ite (not (< 100 x426)) 1 0)) 0) (ite (> (ite (> (ite (< 0 (ite (not (> x1577 100)) (ite (not (< 100 x1577)) 1 0) (ite (not (< 100 x1647)) 1 0))) (ite (not (> x1577 100)) (ite (not (< 100 x1577)) 1 0) (ite (not (> x1647 100)) 1 0)) (ite (not (< 100 x49)) 1 0)) 0) (ite (< 0 (ite (not (< 100 x1577)) (ite (not (< 100 x1577)) 1 0) (ite (not (> x1647 100)) 1 0))) (ite (not (> x1577 100)) (ite (not (> x1577 100)) 1 0) (ite (not (> x1647 100)) 1 0)) (ite (not (> x49 100)) 1 0)) (ite (not (< 100 x1637)) 1 0)) 0) (ite (< 0 (ite (> (ite (not (< 100 x1577)) (ite (not (< 100 x1577)) 1 0) (ite (not (< 100 x1647)) 1 0)) 0) (ite (not (< 100 x1577)) (ite (not (> x1577 100)) 1 0) (ite (not (< 100 x1647)) 1 0)) (ite (not (< 100 x49)) 1 0))) (ite (< 0 (ite (not (< 100 x1577)) (ite (not (< 100 x1577)) 1 0) (ite (not (> x1647 100)) 1 0))) (ite (not (< 100 x1577)) (ite (not (< 100 x1577)) 1 0) (ite (not (> x1647 100)) 1 0)) (ite (not (< 100 x49)) 1 0)) (ite (not (> x1637 100)) 1 0)) (ite (not (> x426 100)) 1 0)) (ite (not (> x1811 100)) 1 0)) 0)) (and (=> (and (= x387 0) (not x824)) x903) (=> (and (and (or (and (and (= x249 (div x1384 (+ x1989 x1577))) (<= x671 115792089237316195423571325291054828791733448040247995807669039) (<= 1 x671) (= x1989 (+ 1000000000000000 x157)) (= (div x917 x1818) x1111) (= (mod (* x249 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1434) (= (div x1434 x671) x1290) (= (x560 (- x1111 x1989)) x135) (= x278 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x777) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x135)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x777) (<= x135 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x135 x777))) 1 0)) (= x917 (mod (* x1811 x1290) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 1 x1818) (= (x1262 (+ x1290 x426)) x1818) (= (mod (* x1989 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1384) (= (+ x249 x49) x671)) (not x1345)) (and (= x278 0) x1345)) (and (= x729 (div x839 x165)) (= x110 (+ x157 x1577)) (<= 1 x110) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x110) (= (x1262 (+ x49 x385)) x165) (= x839 (mod (* x1637 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1262 (+ x1079 x626)) x1539) (= (x1262 (+ (mod (x372 x38 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x38)) x1079) (= x1532 (mod (* x1811 x729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1532 x380) x816) (= (x372 x1539 1) x157) (= (div x1318 x110) x385) (<= 1 x165) (= (x372 x38 7) x626) (<= 1 x380) (= (x560 (- x816 x157)) x777) (= (mod (* x157 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1318) (= (x1262 (+ x729 x426)) x380) (= (or (and (= true (<= x777 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 100 x777)) (> x777 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1345))) x824) x382)))))
(assert (= 20 (x1006 (x1675 40 20 (x372 x334 96) (x372 x36 96)))))
(assert (not (x354 (x1675 40 20 (x372 x327 96) (x372 x230 96)))))
(assert (x800 x289))
(assert (x800 x204))
(assert (not (x354 (x1938 64 x131 x918))))
(assert (=> (>= 10000 x201) (= (x377 x201) 0)))
(assert (not (x354 (x1938 64 x746 x659))))
(assert (x800 x21))
(assert (x800 x1373))
(assert (=> (= 0 x466) (= 0 (div x692 x466))))
(assert (= x923 (=> (and (or (and (and (= x899 x1420) (= x872 x566)) (not x1135)) (and (and (and (= (x560 (- x1420 x746)) x1041) (= x768 (< 0 x1041))) (or (and (and (= x1770 x566) (= x872 x899)) (not x768)) (and (and (= x566 x1420) (= x899 x1770)) x768))) x1135)) (and (= x1135 (> x1880 0)) (= x1880 (x560 (- x1770 x746))))) x1098)))
(assert (x800 x150))
(assert (x800 x729))
(assert (= (x377 (x1938 64 x1086 6)) (x1938 64 x1086 6)))
(assert (= (and x1135 x200) x1466))
(assert (x800 x1432))
(assert (= 0 (x377 1461501637330902918203684832716283019655932542975)))
(assert (= (and x819 (not x575)) x576))
(assert (x800 x1341))
(assert (=> (>= 10000 (x372 x70 96)) (= 0 (x377 (x372 x70 96)))))
(assert (= (and x966 (not x470)) x978))
(assert (=> (= x1553 0) (= 0 (div x573 x1553))))
(assert (x800 x1185))
(assert (x800 x15))
(assert (x800 x238))
(assert (x800 x1827))
(assert (x800 x412))
(assert (= x1473 (and x232 x1325)))
(assert (= x1187 (=> (and (= x795 (x560 (- x1770 x746))) (= (> x795 0) x1155)) (and (=> x1155 x923) (=> (and (and (= (> x1621 0) x1674) (= x1621 (x560 (- x1420 x872)))) (not x1155)) (and (=> (and (not x1674) (and (= x1870 x566) (= x899 x872))) x1098) (=> x1674 x923)))))))
(assert (x800 x1532))
(assert (x800 x832))
(assert (=> (= x912 0) (= (div x1575 x912) 0)))
(assert (x800 x678))
(assert (= x669 (and (not x1153) x264)))
(assert (= (or x1911 x1572) x1382))
(assert (= (x372 x457 96) (x519 (x1675 40 20 (x372 x457 96) (x372 x181 96)))))
(assert (x800 x1296))
(assert (x800 x505))
(assert (> (x1938 64 x934 6) 10000))
(assert (=> (<= (x372 x137 96) 10000) (= 0 (x377 (x372 x137 96)))))
(assert (x354 4294967295))
(assert (= (x519 (x1938 64 x131 x1916)) x1916))
(assert (= (or x534 x1535 x1137) x84))
(assert (= x57 (x1006 (x1938 64 x57 6))))
(assert (= (x1006 (x1675 40 20 (x372 x627 96) (x372 x1216 96))) 20))
(assert (=> (= 0 x1567) (= 0 (div x548 x1567))))
(assert (=> (= 0 (+ x506 x1577)) (= 0 (div x530 (+ x506 x1577)))))
(assert (=> (= x997 0) (= 0 (div x809 x997))))
(assert (= x1634 (=> (and (= x1153 (< x746 x899)) (or (and (and (= x1059 (x1262 (+ x1848 32))) (<= x1848 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x366 (* 79228162514264337593543950336 x746)) (= x499 (x1675 40 20 (x372 x1400 96) (x372 x366 96))) (= x790 x1748) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1848) (= (* x899 79228162514264337593543950336) x1400) (= (x1262 (+ 20 x1059)) x1397) (= x1 x499) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1848)) (not (= x1848 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1748 (x1262 (+ 20 x1397))) (= 0 x1025) (<= x1848 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1848 x1748) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1848))) (not x1153)) (and x1153 (and (= 1 x1025) (not (= x1848 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (* x746 79228162514264337593543950336) x650) (= (x1262 (+ 20 x1892)) x127) (<= x1848 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* x899 79228162514264337593543950336) x928) (not (= x1848 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1848) (< x1848 x1307) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1848)) (= x1307 x790) (= x1892 (x1262 (+ 32 x1848))) (= (x1675 40 20 (x372 x650 96) (x372 x928 96)) x100) (= x100 x1) (= (x1262 (+ x127 20)) x1307) (<= x1848 115792089237316195423570985008687907853269984665640564039457584007913129639934))))) x224)))
(assert (=> (= 0 x1033) (= 0 (div x1800 x1033))))
(assert (= (x372 x22 96) (x911 (x1675 40 20 (x372 x1815 96) (x372 x22 96)))))
(assert (x800 x1194))
(assert (x800 x46))
(assert (x800 x504))
(assert (=> (<= (x372 x1418 96) 10000) (= (x377 (x372 x1418 96)) 0)))
(assert (x800 x489))
(assert (x800 x1431))
(assert (x800 x1607))
(assert (x800 x948))
(assert (= (x372 x984 96) (div x984 79228162514264337593543950336)))
(assert (=> (>= 10000 (x372 x1048 96)) (= (x377 (x372 x1048 96)) 0)))
(assert (x800 x1333))
(assert (x800 x1980))
(assert (x800 x645))
(assert (= (and (not x953) x1545) x1075))
(assert (x1176 x1843))
(assert (= 64 (x485 (x1938 64 x131 x1379))))
(assert (=> (= 0 x294) (= 0 (div x1191 x294))))
(assert (x800 x440))
(assert (x800 x176))
(assert (x800 x1505))
(assert (=> (= 0 x310) (= 0 (div x1779 x310))))
(assert (x800 x1055))
(assert (= x1683 (or x1537 x1224)))
(assert (= (div x650 79228162514264337593543950336) (x372 x650 96)))
(assert (x800 x573))
(assert (= (x372 x327 96) (div x327 79228162514264337593543950336)))
(assert (= (div x1432 2) (x372 x1432 1)))
(assert (= (x519 (x1675 40 20 (x372 x263 96) (x372 x542 96))) (x372 x263 96)))
(assert (=> (= (+ x1189 x1577) 0) (= 0 (div x1179 (+ x1189 x1577)))))
(assert (x800 x305))
(assert (x800 x1815))
(assert (= (x911 (x1675 40 20 (x372 x277 96) (x372 x146 96))) (x372 x146 96)))
(assert (not x1806))
(assert (= (or x1416 x392) x968))
(assert (= (x372 x1744 96) (x519 (x1675 40 20 (x372 x1744 96) (x372 x1665 96)))))
(assert (x800 x405))
(assert (x800 x1656))
(assert (= (x377 (x1675 40 20 (x372 x1407 96) (x372 x833 96))) (x1675 40 20 (x372 x1407 96) (x372 x833 96))))
(assert (x800 x123))
(assert (= x630 (and x322 x1903)))
(assert (x800 x1791))
(assert (=> (>= 10000 x935) (= (x377 x935) 0)))
(assert (x800 x1697))
(assert (not (x354 (x1675 40 20 (x372 x145 96) (x372 x1653 96)))))
(assert (< (x1675 40 20 (x372 x1646 96) (x372 x1714 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x565) x1286) x760))
(assert (x261 x1886))
(assert (= (x485 (x1675 40 20 (x372 x1707 96) (x372 x1986 96))) 40))
(assert (= (x1675 40 20 (x372 x1952 96) (x372 x1418 96)) (x377 (x1675 40 20 (x372 x1952 96) (x372 x1418 96)))))
(assert (x800 x1483))
(assert (= (x1675 40 20 (x372 x137 96) (x372 x1641 96)) (x377 (x1675 40 20 (x372 x137 96) (x372 x1641 96)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1331 96) (x372 x56 96))))
(assert (x800 x1157))
(assert (< (x1675 40 20 (x372 x229 96) (x372 x984 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1938 64 x57 6)))
(assert (= (not (and (= false x751) (= x832 1) (= x1181 false) (= x1343 false) (= false x58) (= false x672) (= true x404))) x1833))
(assert (= (div x70 79228162514264337593543950336) (x372 x70 96)))
(assert (= x16 (or x867 x844)))
(assert (x1176 x435))
(assert (= (x519 (x1938 64 x131 x1379)) x1379))
(assert (= (div x22 79228162514264337593543950336) (x372 x22 96)))
(assert (< (x1675 40 20 (x372 x374 96) (x372 x905 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x524))
(assert (< 10000 (x1675 40 20 (x372 x1331 96) (x372 x56 96))))
(assert (= (x485 (x1675 40 20 (x372 x417 96) (x372 x411 96))) 40))
(assert (x800 x1198))
(assert (x800 x218))
(assert (x800 x69))
(assert (= x76 (=> (and (= (ite (not (> 100 x1852)) (ite (not (< x665 100)) 1 0) (ite (not (< x1852 100)) 1 0)) x1932) (= x613 (x560 (- x1770 x746))) (= x1932 1) (= x740 (x1389 340282366920938463463374607431768211455 x665)) (= x1951 (< 0 x613)) (= (x1389 340282366920938463463374607431768211455 x1852) x1461)) (and (=> (and x1951 (and (or (and (not x1063) (and (= x1720 x1337) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1735)) (not (= x1735 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (<= x1735 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1735) (= (* 79228162514264337593543950336 x746) x1952) (<= x1735 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 0 x370) (= (x1262 (+ x1735 32)) x204) (= x1588 x223) (not (= x1735 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1258 (x1262 (+ 20 x204))) (= x223 (x1675 40 20 (x372 x1952 96) (x372 x1418 96))) (= (x1262 (+ x1258 20)) x1720) (= x1418 (* 79228162514264337593543950336 x1770)) (> x1720 x1735))) (and (and (= x1889 (x1675 40 20 (x372 x1333 96) (x372 x1123 96))) (= x927 (x1262 (+ x1483 20))) (= (x1262 (+ 32 x1735)) x1794) (not (= x1735 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x927 x1337) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1735) (= (x1262 (+ 20 x1794)) x1483) (not (= x1735 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (<= x1735 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x927 x1735) (= x1333 (* 79228162514264337593543950336 x1770)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1735) (= (* x746 79228162514264337593543950336) x1123) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1735)) (= 1 x370) (= x1889 x1588)) x1063)) (= x1063 (> x746 x1770)))) x1944) (=> (and (and (= x1977 x1735) (= x1636 x38)) (not x1951)) x847)))))
(assert (x800 x1720))
(assert (x800 x282))
(assert (=> (<= (x372 x1590 96) 10000) (= (x377 (x372 x1590 96)) 0)))
(assert (= x1907 (=> (and (or (and (and (<= x529 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1262 (+ 20 x1427)) x481) (= x789 x1824) (= x327 (* x646 79228162514264337593543950336)) (= (* x1030 79228162514264337593543950336) x230) (not (= x529 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x529)) (= x1427 (x1262 (+ x529 32))) (= (x1675 40 20 (x372 x327 96) (x372 x230 96)) x789) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x529) (= x222 x1488) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x529) (= x222 (x1262 (+ x481 20))) (= 0 x885) (< x529 x222) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x529))) (not x953)) (and x953 (and (not (= x529 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x529) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x529)) (<= x529 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x529 x324) (= x468 x1824) (= (* x646 79228162514264337593543950336) x411) (= x885 1) (= x1488 x324) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x529) (= x324 (x1262 (+ x1377 20))) (= (x1675 40 20 (x372 x417 96) (x372 x411 96)) x468) (= (x1262 (+ 20 x684)) x1377) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x529)) (= (x1262 (+ 32 x529)) x684) (= x417 (* 79228162514264337593543950336 x1030))))) (= x953 (> x646 x1030))) x1067)))
(assert (x800 x1641))
(assert (= x1718 (and (not x719) x105)))
(assert (x800 x169))
(assert (x800 x476))
(assert (x800 x839))
(assert (x800 x1509))
(assert (x800 x619))
(assert (x800 x1575))
(assert (= (x377 (x1675 40 20 (x372 x457 96) (x372 x181 96))) (x1675 40 20 (x372 x457 96) (x372 x181 96))))
(assert (x800 x64))
(assert (= (and x953 x1545) x1888))
(assert (=> (= 0 x696) (= (div x424 x696) 0)))
(assert (= (=> (and (or (and (not x1071) (and (= 0 x1558) (= x334 (* 79228162514264337593543950336 x899)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1060)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1060)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1060) (> x1751 x1060) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1060) (= x282 x1751) (= x1703 x587) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1060)) (= x36 (* x746 79228162514264337593543950336)) (= (x1262 (+ x731 20)) x1751) (= (x1262 (+ 32 x1060)) x838) (= x731 (x1262 (+ x838 20))) (<= x1060 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1675 40 20 (x372 x334 96) (x372 x36 96)) x587))) (and x1071 (and (= 1 x1558) (= x583 (* 79228162514264337593543950336 x746)) (= x1205 (x1262 (+ x1060 32))) (not (= x1060 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x364 (x1262 (+ x1205 20))) (= x1497 (x1675 40 20 (x372 x583 96) (x372 x253 96))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1060) (= x437 (x1262 (+ x364 20))) (< x1060 x437) (not (= x1060 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x437 x282) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1060) (= x1497 x1703) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1060)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1060) (= x253 (* 79228162514264337593543950336 x899))))) (and (= x695 1) (= x1071 (> x899 x746)) (= (x1389 340282366920938463463374607431768211455 x1533) x452) (= (x1389 340282366920938463463374607431768211455 x1016) x610) (= x695 (ite (not (> 100 x1016)) (ite (not (< x1533 100)) 1 0) (ite (not (< x1016 100)) 1 0))))) x831) x1193))
(assert (x800 x1113))
(assert (> (x1938 64 x131 0) 10000))
(assert (= (or x1550 x1914) x550))
(assert (x800 x1107))
(assert (= (x1006 (x1675 40 20 (x372 x1935 96) (x372 x1496 96))) 20))
(assert (= x192 (or x1405 x12)))
(assert (x800 x1570))
(assert (x800 x1945))
(assert (x800 x30))
(assert (= x92 (and x988 x257)))
(assert (= (x377 (x1675 40 20 (x372 x1935 96) (x372 x1496 96))) (x1675 40 20 (x372 x1935 96) (x372 x1496 96))))
(assert (= x788 (=> (and (or (and x766 (and (= x881 x1577) (= x1047 x1647))) (and (not x766) (and (= x1647 x881) (= x1047 x1577)))) (and (>= 340282366920938463463374607431768211455 x881) (not (= x1981 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x881 (x265 x66)) (= (= 0 x1560) x766) (= x69 (x1262 (+ 64 x1981))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1981) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1981) (= (x1805 x66) x1047) (< x1981 x69) (<= x1047 340282366920938463463374607431768211455) (not (= x1981 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x1981 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1981) (= x66 (x1938 64 x57 6)))) x769)))
(assert (= (x372 x253 96) (div x253 79228162514264337593543950336)))
(assert (= (and x1635 x689) x685))
(assert (x800 x1897))
(assert (x800 x1981))
(assert (= (=> (and (or (and (not x248) (and (= (+ 1000000000000000 x589) x1923) (= x1042 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1928) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x244)) (and (= (<= x244 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1928)) (> x1928 x244))) 1 0)) (= (+ x925 x967) x854) (= x162 (div x1640 x854)) (= x802 (div x1847 x1103)) (>= x854 1) (= (x560 (- x802 x1923)) x1928) (<= 1 x1103) (= x1847 (mod (* x162 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x17 x925) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1640) (<= x854 115792089237316195423571325291054828791733448040247995807669039) (= (div x26 (+ x1923 x1795)) x925) (= (mod (* x707 x1923) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x26) (= (x1262 (+ x162 x651)) x1103))) (and (= 0 x1042) x248)) (and (= (x1262 (+ x1987 x967)) x1413) (= x1773 (mod (* x589 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x1322 57896044618658097711785492504343953926975274699741220483192166611388333031422) (= x1322 (+ x589 x1795)) (= x589 (x372 x1010 1)) (>= x1777 1) (>= x1322 1) (= (div x198 x1777) x1178) (= x244 (x560 (- x1178 x589))) (= (x1262 (+ x1070 x1910)) x1010) (= x1777 (x1262 (+ x651 x1708))) (= (div x1773 x1322) x1987) (= x1708 (div x1691 x1413)) (<= 1 x1413) (= x248 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x244) true) (< x244 100)) (> x244 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x198 (mod (* x104 x1708) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1691 (mod (* x1987 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x709) x1876))
(assert (x800 x735))
(assert (x800 x1665))
(assert (< (x1675 40 20 (x372 x417 96) (x372 x411 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x349))
(assert (x800 x459))
(assert (x800 x826))
(assert (x800 x466))
(assert (x800 x919))
(assert (= (x1006 (x1675 40 20 (x372 x1646 96) (x372 x1714 96))) 20))
(assert (x800 x1864))
(assert (x800 x906))
(assert (=> (<= x939 10000) (= (x377 x939) 0)))
(assert (= (x372 x928 96) (x911 (x1675 40 20 (x372 x650 96) (x372 x928 96)))))
(assert (= (x1675 40 20 (x372 x327 96) (x372 x230 96)) (x377 (x1675 40 20 (x372 x327 96) (x372 x230 96)))))
(assert (= (or x1752 x1272) x958))
(assert (x800 x1309))
(assert (x800 x416))
(assert (x800 x1475))
(assert (= (x519 (x1938 64 x1241 6)) 6))
(assert (= x496 (and x982 (not x824))))
(assert (not (x354 (x1675 40 20 (x372 x457 96) (x372 x181 96)))))
(assert (x800 x1025))
(assert (= x914 (=> (and (and (= (mod (* x451 x1811) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x929) (= (+ x1577 x1150) x1362) (= x594 (x1262 (+ x426 x451))) (= x686 (x1262 (+ x699 x1758))) (= x575 (or (and (> 100 x820) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x820) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x820))) (>= x846 1) (= x451 (div x1904 x846)) (= (x372 x686 1) x1150) (= (mod (* x1150 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x321) (= (x560 (- x1209 x1150)) x820) (= x1209 (div x929 x594)) (<= 1 x1362) (= x1904 (mod (* x1637 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x1362) (<= 1 x594) (= x846 (x1262 (+ x49 x615))) (= x615 (div x321 x1362))) (or (and (and (= x539 (x560 (- x383 x50))) (= (mod (* x1647 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1430) (= x1317 (mod (* x711 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x1964 1) (<= 1 x1827) (= (mod (* x406 x1811) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1366) (= (+ x1150 1000000000000000) x50) (= (ite (or (and (= (<= x539 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x820)) (< x820 x539)) (and (<= x539 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x820 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1440) (= x1964 (+ x711 x49)) (>= 115792089237316195423571325291054828791733448040247995807669039 x1964) (= x1827 (x1262 (+ x406 x426))) (= x383 (div x1366 x1827)) (= x406 (div x1317 x1964)) (= (div x1430 (+ x50 x1577)) x711)) (not x575)) (and (= 0 x1440) x575))) x765)))
(assert (x800 x866))
(assert (not (x354 (x1675 40 20 (x372 x417 96) (x372 x411 96)))))
(assert (x800 x358))
(assert (x800 x1818))
(assert (= x1177 (and (not x1982) x1014)))
(assert (x800 x1593))
(assert (= 40 (x485 (x1675 40 20 (x372 x1646 96) (x372 x1714 96)))))
(assert (x800 x899))
(assert (= x382 (=> (and (= x257 (= 0 x278)) (or (and (and (= x511 x626) (= x186 x157)) x257) (and (not x257) (and (= x1079 x186) (= x157 x511))))) x857)))
(assert (x800 x935))
(assert (x800 x1225))
(assert (= x709 (=> (and (or (and (not x1600) (and (= x761 x589) (= x1392 x1910))) (and (and (= x1070 x761) (= x589 x1392)) x1600)) (= (= 0 x1042) x1600)) x1019)))
(assert (= (x372 x650 96) (x519 (x1675 40 20 (x372 x650 96) (x372 x928 96)))))
(assert (x800 x993))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1590 96) (x372 x453 96))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x131 x1379)))
(assert (x800 x413))
(assert (= (or x496 x983) x1336))
(assert (x1176 x1267))
(assert (= (div x356 2) (x372 x356 1)))
(assert (= (and x1153 x264) x6))
(assert (x800 x1041))
(assert (= (and x1084 (not x193)) x119))
(assert (= x907 (=> (and (= (div x237 x744) x143) (<= 1 x704) (= (x560 (- x1282 x1278)) x524) (= x744 (+ x1278 x1577)) (= (mod (* x1278 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x237) (>= x744 1) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x524) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x524) true) (< x524 100))) 0 x1278) x387) (= (x1262 (+ x478 x758)) x1945) (= x326 (x1262 (+ x143 x49))) (= x1278 (x372 x1945 1)) (<= x744 57896044618658097711785492504343953926975274699741220483192166611388333031422) (= x1329 (div x116 x326)) (= (mod (* x1811 x1329) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1182) (= x1282 (div x1182 x704)) (<= 1 x326) (= x704 (x1262 (+ x426 x1329))) (= (mod (* x1637 x143) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x116)) x903)))
(assert (= x117 (and (not x1642) x1302)))
(assert (= x916 (and x14 (not x1878))))
(assert (= x1248 (and x1617 (not x1308))))
(assert (x800 x1106))
(assert (=> (>= 10000 (x372 x905 96)) (= 0 (x377 (x372 x905 96)))))
(assert (= (x911 (x1675 40 20 (x372 x1190 96) (x372 x850 96))) (x372 x850 96)))
(assert (= (x1675 40 20 (x372 x1122 96) (x372 x892 96)) (x377 (x1675 40 20 (x372 x1122 96) (x372 x892 96)))))
(assert (= (and x796 x766) x1556))
(assert (x800 x1847))
(assert (x800 x1928))
(assert (= x264 (or x273 x386)))
(assert (x800 x146))
(assert (=> (<= (x372 x1707 96) 10000) (= (x377 (x372 x1707 96)) 0)))
(assert (= (or x590 (and x1576 x1147)) x612))
(assert (= (x911 (x1675 40 20 (x372 x728 96) (x372 x1327 96))) (x372 x1327 96)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x1824 6)))
(assert (x800 x851))
(assert (x800 x1227))
(assert (x800 x127))
(assert (= x1234 (or x172 x1396)))
(assert (=> (= 0 x748) (= (div x307 x748) 0)))
(assert (= (and x835 x332) x1224))
(assert (= (and x1332 x1546) x1911))
(assert (= (x1006 (x1675 40 20 (x372 x1707 96) (x372 x1986 96))) 20))
(assert (= x130 (and (not x399) x1126)))
(assert (= x1948 (and (not x901) x1382)))
(assert (=> (<= (x372 x1190 96) 10000) (= (x377 (x372 x1190 96)) 0)))
(assert (x800 x110))
(assert (= x618 (=> (and (or (and (and (= x1363 x1298) (= x329 x866)) x835) (and (and (= x329 x1298) (= x1651 x866)) (not x835))) (= x835 (= x1411 0))) x1929)))
(assert (x800 x1604))
(assert (= (x1006 (x1938 64 x667 6)) x667))
(assert (= (x519 (x1675 40 20 (x372 x417 96) (x372 x411 96))) (x372 x417 96)))
(assert (= x1141 (and x863 (not x1565))))
(assert (= (=> (and (and (= x395 (div x442 x85)) (= (x560 (- x395 x1610)) x1458) (= x442 (mod (* x104 x1864) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x774 1) (= (x1262 (+ x651 x1864)) x85) (<= 1 x1685) (<= 1 x85) (= x1610 (x372 x1432 1)) (= (mod (* x1610 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1515) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x774) (= x1685 (x1262 (+ x1433 x967))) (= (x1262 (+ x1839 x614)) x1432) (= (div x1515 x774) x1433) (= (div x793 x1685) x1864) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1458) (and (= (<= x1458 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1458 100))) x1722) (= (mod (* x1433 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x793) (= x774 (+ x1795 x1610))) (or (and (= x174 0) x1722) (and (and (>= 115792089237316195423571325291054828791733448040247995807669039 x1393) (= x528 (div x1521 (+ x1795 x1479))) (= (mod (* x104 x489) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x504) (= (x560 (- x1314 x1479)) x315) (= (mod (* x1479 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1521) (= x1149 (x1262 (+ x651 x489))) (= (div x504 x1149) x1314) (= x632 (mod (* x17 x528) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x315) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1458)) (and (> x315 x1458) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1458) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x315)))) 1 0) x174) (= x1479 (+ x1610 1000000000000000)) (>= x1149 1) (= (div x632 x1393) x489) (= (+ x967 x528) x1393) (>= x1393 1)) (not x1722)))) x1988) x1112))
(assert (x800 x1645))
(assert (= (x377 115792089237316195423570985008687907853269984665640564039457584007913129639864) 0))
(assert (= 6 (x519 (x1938 64 x1824 6))))
(assert (x800 x481))
(assert (x800 x437))
(assert (x800 x1800))
(assert (x800 x1766))
(assert (= 0 (x377 3343790536)))
(assert (= (x911 (x1675 40 20 (x372 x627 96) (x372 x1216 96))) (x372 x1216 96)))
(assert (x800 x1452))
(assert (x800 x1913))
(assert (= (=> (and (or (and (not x1878) (and (= x1070 x1610) (= x614 x1910))) (and (and (= x1839 x1070) (= x1910 x1610)) x1878)) (= (= 0 x174) x1878)) x1876) x1988))
(assert (x800 x438))
(assert (=> (<= (x372 x1331 96) 10000) (= 0 (x377 (x372 x1331 96)))))
(assert (=> (<= (x372 x531 96) 10000) (= 0 (x377 (x372 x531 96)))))
(assert (x800 x546))
(assert (x800 x400))
(assert (= (x372 x1772 96) (x911 (x1675 40 20 (x372 x1355 96) (x372 x1772 96)))))
(assert (= (and (not x1663) x1276) x1547))
(assert (x800 x794))
(assert (=> (<= (x372 x1123 96) 10000) (= 0 (x377 (x372 x1123 96)))))
(assert (=> (<= (x372 x542 96) 10000) (= 0 (x377 (x372 x542 96)))))
(assert (= (x377 (x1938 64 x525 6)) (x1938 64 x525 6)))
(assert (= x922 (and x1903 (not x322))))
(assert (= 40 (x485 (x1675 40 20 (x372 x1331 96) (x372 x56 96)))))
(assert (x800 x1935))
(assert (x800 x1290))
(assert (= (or x384 x873) x1302))
(assert (= x286 (or x346 x1177)))
(assert (= (and (not x962) x908) x500))
(assert (x800 x928))
(assert (x800 x107))
(assert (x800 x1439))
(assert (= (and (not x621) x1049) x1975))
(assert (= x1014 (or x1114 (and x1764 (not x620)))))
(assert (= x525 (x1006 (x1938 64 x525 6))))
(assert (=> (= x1354 0) (= (div x151 x1354) 0)))
(assert (> (x1675 40 20 (x372 x327 96) (x372 x230 96)) 10000))
(assert (x800 x56))
(assert (x800 x1173))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1190 96) (x372 x850 96))))
(assert (= x1895 (=> (and (and (= x178 (x1262 (+ x601 32))) (= (< x1031 x1420) x825) (= (x1262 (+ x1213 32)) x601)) (or (and (and (> x43 x1213) (= (* 79228162514264337593543950336 x1420) x374) (<= x1213 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1262 (+ x1213 32)) x1680) (= (x1262 (+ 20 x1198)) x43) (not (= x1213 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (x1675 40 20 (x372 x374 96) (x372 x905 96)) x1238) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1213)) (= x1198 (x1262 (+ 20 x1680))) (= 0 x1271) (= x667 x1238) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1213) (= x409 x43) (= x905 (* x1031 79228162514264337593543950336)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1213) (not (= x1213 115792089237316195423570985008687907853269984665640564039457584007913129639864))) (not x825)) (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1213)) (= x425 (x1262 (+ 32 x1213))) (= x56 (* x1420 79228162514264337593543950336)) (= x160 x667) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1213) (= 1 x1271) (= x189 x409) (<= x1213 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1331 (* x1031 79228162514264337593543950336)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1213)) (= (x1262 (+ x965 20)) x189) (= x160 (x1675 40 20 (x372 x1331 96) (x372 x56 96))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1213)) (> x189 x1213) (= x965 (x1262 (+ 20 x425))) (<= x1213 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x825))) x443)))
(assert (x800 x467))
(assert (x800 x671))
(assert (x800 x1553))
(assert (x800 x552))
(assert (= (x377 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (= x1672 (or x1561 x1547)))
(assert (= (and (not x1951) x623) x660))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x103 1)))
(assert (= x1832 (=> (and (and (= x266 (ite x1982 1 0)) (= x1982 (= x1925 0)) (= x1925 (x742 x1027))) (or (and (= x266 1) x1982) (and (and (<= 32 x1745) (= x1745 (x742 x1027)) (= (x1262 (+ x1027 32)) x376) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1745) (= 1 x1686) (= (x785 x376) x1686)) (not x1982)))) x1833)))
(assert (not (x354 (x1938 64 x1824 6))))
(assert (= 64 (x485 (x1938 64 x1520 6))))
(assert (x800 x1539))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1400 96) (x372 x366 96))))
(assert (= x590 (and x325 x331)))
(assert (x800 x82))
(assert (x354 2835717307))
(assert (x800 x452))
(assert (= (x1938 64 x1588 6) (x377 (x1938 64 x1588 6))))
(assert (= (or x938 x1687) x231))
(assert (= x1806 (=> (and (<= x131 1461501637330902918203684832716283019655932542975) (<= x1259 1461501637330902918203684832716283019655932542975) (= false x1972) (>= x949 0) (not (= x1918 x935)) (<= x1243 127) x180 (not (= x752 x939)) (= x1619 false) (not (= x939 x201)) (not (= x930 x1476)) (>= x131 1) (>= 1461501637330902918203684832716283019655932542975 x1554) (>= x1476 1) (>= 1461501637330902918203684832716283019655932542975 x1476) (<= 1 x792) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1338) (>= x828 0) (= x762 (> (x1817 x131) 0)) (= x1636 x649) (not (= x1918 x939)) (= x357 (> (x1817 x201) 0)) (>= 1461501637330902918203684832716283019655932542975 x792) (not (= x1476 x1918)) (not (= x1476 x201)) (= x1883 (< 0 (x1817 x939))) (not (= x935 x1476)) (= x1782 324) (not (= x131 x930)) (= x474 x1769) (= x1890 (x1262 (+ 324 x1669))) (>= 1461501637330902918203684832716283019655932542975 x205) (= (= x1918 x1770) x1214) (>= x577 0) x142 (>= 1461501637330902918203684832716283019655932542975 x1420) (= x1208 260) (not (= x939 x935)) (= x1004 (x1389 26959946667150639794667015087019630673637144422540572481103610249215 x634)) (>= x930 1) (= x1968 (+ x1004 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= x752 x930)) (<= x930 1461501637330902918203684832716283019655932542975) (= 100 x428) (<= x1769 340282366920938463463374607431768211455) (>= 1461501637330902918203684832716283019655932542975 x1706) (= false x1851) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1978) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1183) (= x1770 (x1279 4)) (>= 1461501637330902918203684832716283019655932542975 x438) (= x472 128) (= false x514) (>= 1461501637330902918203684832716283019655932542975 x746) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x828) (= x755 x1338) (= x355 x649) x254 (= (< 0 (x1817 x930)) x254) (>= 1461501637330902918203684832716283019655932542975 x752) (= x1455 false) (>= x936 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x949) (not (> x755 x71)) (<= 1 x201) (>= 1461501637330902918203684832716283019655932542975 x23) (>= x1581 0) (>= x1978 196) (>= x722 0) (= x1629 (> (x1817 x1476) 0)) (= (x1540 x131) x1312) (<= x440 1461501637330902918203684832716283019655932542975) (= x99 2) (>= 1461501637330902918203684832716283019655932542975 x1373) (not (= x131 x935)) (= x493 x1573) (>= 1461501637330902918203684832716283019655932542975 x1872) (>= 1461501637330902918203684832716283019655932542975 x1909) (not (= x939 x131)) x884 (<= x358 1461501637330902918203684832716283019655932542975) (<= x1756 1461501637330902918203684832716283019655932542975) (= x1682 (x95 x1770)) (= x345 0) (>= x939 1) (>= 1461501637330902918203684832716283019655932542975 x1661) (>= x935 1) (= 3343790536 x1627) (>= 1461501637330902918203684832716283019655932542975 x90) (>= x256 0) (= x1341 x1770) (<= x1726 1461501637330902918203684832716283019655932542975) (not (= x1918 x131)) (>= 1461501637330902918203684832716283019655932542975 x1493) (= x1549 false) (not (= x1918 x201)) (= (x1148 x150) x101) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x936) (>= 1461501637330902918203684832716283019655932542975 x1727) (= x309 6) (>= 1461501637330902918203684832716283019655932542975 x935) (>= 1461501637330902918203684832716283019655932542975 x842) (= x182 x1106) (<= x256 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1591) (<= 0 x837) (>= x1918 1) (= x1312 x1519) (not (= x939 x1476)) (<= x1566 1461501637330902918203684832716283019655932542975) (>= x752 1) (= x1669 (x1943 128)) (= (x1279 68) x1031) (= x1031 x1573) (<= x1841 1461501637330902918203684832716283019655932542975) (not (= x1918 x752)) (<= x577 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x428 (x560 (- x1890 324))) (<= x1031 1461501637330902918203684832716283019655932542975) (>= 4294967295 x722) (= x1544 3343790536) (<= x942 1461501637330902918203684832716283019655932542975) (>= x1338 0) (<= x1770 1461501637330902918203684832716283019655932542975) (not (= x131 x201)) (= x753 x1420) (= x182 (x1279 0)) (= x260 false) (= x474 x1580) (= (> (x1817 x752) 0) x142) (not (= 2 x552)) (>= 1461501637330902918203684832716283019655932542975 x415) (= x1180 x1682) (= (x1279 36) x1420) (>= 1461501637330902918203684832716283019655932542975 x1581) (= x299 x131) (= x71 x1905) (<= x201 1461501637330902918203684832716283019655932542975) (<= 0 x1579) (not (= x131 x752)) (= x107 (x1105 x131)) (= x1769 (x1279 132)) (not (= x930 x201)) (= x792 x150) (<= x1243 127) (>= 1461501637330902918203684832716283019655932542975 x1301) (<= x1188 1461501637330902918203684832716283019655932542975) (= x103 x792) (>= 1461501637330902918203684832716283019655932542975 x939) (<= 1 x163) (not (= x930 x1918)) (<= x606 1461501637330902918203684832716283019655932542975) (<= x1918 1461501637330902918203684832716283019655932542975) (= x71 (x1279 164)) x1629 (= (> (x1817 x1918) 0) x884) (= (x1817 x131) x163) (= (x1279 100) x1636) (not (= x201 x935)) (<= x1446 1461501637330902918203684832716283019655932542975) (not (= x1476 x131)) (= x180 (< 0 (x1817 x935))) (= x1142 x753) (>= 1461501637330902918203684832716283019655932542975 x1902) (= (x1064 160) x634) x357 (not (= x935 x930)) (>= 1461501637330902918203684832716283019655932542975 x837) (= x1908 0) (<= 0 x1183) (= x1032 x1341) x1883 (not (= x935 x752)) (>= 1461501637330902918203684832716283019655932542975 x456) (not (= x752 x1476)) (<= x1870 1461501637330902918203684832716283019655932542975) (<= x1579 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x201 x752)) x762 (not (= x930 x939)) (>= 1461501637330902918203684832716283019655932542975 x872)) (and (=> (and (and (or (and (and (not (> x889 x910)) (not (> x1636 x910)) (= x1940 (x1938 64 x131 x918)) (= x918 (x1938 64 x103 1)) (= (x560 (- x910 x1636)) x889)) (not x622)) x622) (and (= x235 599290589) (= (x1817 x1918) x1604) (= x1593 x267) (>= 127 x721) (= (x1938 64 x131 x1379) x1882) (<= x721 127) (= (x1938 64 x103 1) x1379) (= x226 100) (= x429 x103) (= (x1631 x1882) x910) (= x1578 x429) (= false x410) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x910) x622) (<= 1 x1604) (= x269 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x131 x1288) (= x355 x267) (= x1501 false) (= x694 x1288))) x1214) x1472) (=> (and (and (and (= false x1356) (= x497 (x1817 x939)) (= x1770 x939) (<= x236 127) (= false x1838) (<= 1 x1770) (= x103 x1008) (= x469 x131) (= x1386 x355) (= x1386 x1759) (= x469 x875) (>= 1461501637330902918203684832716283019655932542975 x1770) (<= 1 x497) (= x1008 x1937) (= x1423 (x403 x1146)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x123) (= 100 x168) (= x1146 (x1938 64 x131 x1916)) (= 599290589 x876) (= (x1938 64 x103 1) x1916) (<= x236 127) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1423) x81)) (or (and (and (not (> x1439 x1423)) (not (< x1423 x1636)) (= x1439 (x560 (- x1423 x1636))) (= (x1938 64 x103 1) x1300) (= x1457 (x1938 64 x131 x1300))) (not x81)) x81)) (not x1214)) x462)))))
(assert (x800 x1265))
(assert (= (x1006 (x1938 64 x131 x918)) x131))
(assert (= (x372 x421 1) (div x421 2)))
(assert (x800 x111))
(assert (= (or x893 x1529) x1228))
(assert (x800 x1196))
(assert (= (x372 x1590 96) (div x1590 79228162514264337593543950336)))
(assert (x800 x1770))
(assert (not (x354 (x1675 40 20 (x372 x728 96) (x372 x1327 96)))))
(assert (x261 x435))
(assert (x800 x1313))
(assert (x800 x631))
(assert (= (or x341 x1765) x1319))
(assert (x800 x1078))
(assert (= 20 (x1006 (x1675 40 20 (x372 x1749 96) (x372 x1510 96)))))
(assert (= (and x1234 (not x904)) x1015))
(assert (=> (<= (x372 x1749 96) 10000) (= 0 (x377 (x372 x1749 96)))))
(assert (x800 x808))
(assert (= (and (not x312) x1887) x1896))
(assert (x800 x1902))
(assert (= (and x860 x543) x408))
(assert (= x103 (x1006 (x1938 64 x103 1))))
(assert (x800 x1301))
(assert (x800 x801))
(assert (= x867 (and (not x72) x231)))
(assert (x800 x1835))
(assert (x800 x905))
(assert (x800 x1046))
(assert (= (x485 (x1675 40 20 (x372 x650 96) (x372 x928 96))) 40))
(assert (x800 x933))
(assert (x800 x723))
(assert (x800 x137))
(assert (= (and x1887 x312) x480))
(assert (x800 x1421))
(assert (=> (<= (x372 x56 96) 10000) (= (x377 (x372 x56 96)) 0)))
(assert (x800 x1647))
(assert (= x623 (or x207 x717)))
(assert (= (x1006 (x1938 64 x1703 6)) x1703))
(assert (not (x354 (x1938 64 x1339 6))))
(assert (x800 x1119))
(assert (x800 x1931))
(assert (x800 x1584))
(assert (x800 x1322))
(assert (x800 x1769))
(assert (= (x377 (x1675 40 20 (x372 x277 96) (x372 x146 96))) (x1675 40 20 (x372 x277 96) (x372 x146 96))))
(assert (= (x519 (x1675 40 20 (x372 x296 96) (x372 x638 96))) (x372 x296 96)))
(assert (=> (>= 10000 (x372 x1122 96)) (= (x377 (x372 x1122 96)) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x360 6)))
(assert (x1176 x1254))
(assert (= (div x1327 79228162514264337593543950336) (x372 x1327 96)))
(assert (x800 x214))
(assert (= x1206 (or x1351 x1340)))
(assert (> (x1938 64 x131 x1916) 10000))
(assert (= (x485 (x1938 64 x746 x1810)) 64))
(assert (x800 x453))
(assert (= x303 (or x673 x192)))
(assert (= (x372 x841 96) (div x841 79228162514264337593543950336)))
(assert (= 64 (x485 (x1938 64 x1 6))))
(assert (x800 x943))
(assert (=> (<= (x372 x1815 96) 10000) (= 0 (x377 (x372 x1815 96)))))
(assert (= (=> (and (and (= x1696 (ite (not (> 100 x1828)) (ite (not (> 100 x170)) 1 0) (ite (not (> 100 x1828)) 1 0))) (= x1657 (x1938 64 x1703 6)) (= x1828 (x1266 x1657)) (= x170 (x1762 x1657)) (>= 340282366920938463463374607431768211455 x1828) (<= x170 340282366920938463463374607431768211455) (= x1696 1) (= x564 (= x1558 0))) (or (and x564 (and (<= x1775 680564733841876926926749214863536422910) (>= 340282366920938463463374607431768211455 x979) (= (* x1854 x170) x718) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x718) (= x979 (x560 (- x170 x216))) (>= x1775 1) (>= 340282366920938463463374607431768211455 x216) (= x1775 (+ x1854 x1828)) (= x1775 x1254) (= (div x718 x1775) x216) (not (< x170 x979)) (= x1893 x979) (<= 0 x718) (= x216 x1449))) (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x557) (>= x557 0) (= x1254 x882) (= (div x557 x1480) x1310) (<= x1310 340282366920938463463374607431768211455) (= x1893 x1480) (not (< x1828 x882)) (= x1310 x1449) (= x1480 (+ x1854 x170)) (= (x560 (- x1828 x1310)) x882) (<= x882 340282366920938463463374607431768211455) (= x557 (* x1828 x1854)) (<= x1480 680564733841876926926749214863536422910) (<= 1 x1480)) (not x564)))) x1065) x831))
(assert (x800 x1865))
(assert (x800 x1513))
(assert (x800 x1162))
(assert (=> (<= (x372 x650 96) 10000) (= 0 (x377 (x372 x650 96)))))
(assert (x800 x370))
(assert (= x749 (=> (and (= (= x1625 0) x962) (or (and (and (= x74 x1156) (= x992 x1011)) x962) (and (and (= x1011 x1156) (= x1738 x74)) (not x962)))) x1632)))
(assert (=> (= (+ x1577 x598) 0) (= 0 (div x1287 (+ x598 x1577)))))
(assert (= x199 (and x1159 (not x414))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x57 6)))
(assert (= x113 (=> (and (and (= (x1262 (+ 32 x503)) x501) (= 68 x28) (= (x1262 (+ 64 x1511)) x305) (= (x1389 26959946667150639794667015087019630673637144422540572481103610249215 x1370) x477) (= x1342 (x1628 x131)) (> x1027 x305) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639836 x503)) (not (= x503 115792089237316195423570985008687907853269984665640564039457584007913129639836)) (= x1370 (x1092 x501)) (not (= x305 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x1262 (+ 32 x503)) x898) (= x1543 x1305) (= (x1859 x1031) x1305) (= (x1174 x503) x28) (= (+ x477 76450787359836037641860180984291677749980919077056822294353438043884394381312) x786) (= (x1262 (+ 32 x1511)) x1101) (<= x503 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x503 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x305 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x293 (x560 (- x288 32))) (= x414 (= x1918 x1031)) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x288 (x560 (- x305 x503))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x305) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x305)) (= x956 0) (= x1027 (x1262 (+ x305 64))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639836 x503)) (= x149 (x1262 (+ x898 32))) (> x305 x503) (<= x503 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1262 (+ 36 x503)) x1511)) (or (and x414 (and (= x737 (x605 x361)) (= x1492 32) (not (> x943 x737)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1313) (= x1484 (x560 (- x737 x943))) (= (x1938 64 x103 0) x540) (= x87 (x1817 x1918)) (not (> x1891 x1534)) (= (x1262 (+ x943 x1891)) x1534) (= (x1938 64 x131 0) x1398) (= false x246) (<= x1024 127) (= x103 x770) (<= x1024 127) (= x211 false) (= x943 x1574) (= x1463 1) (= x906 x1574) (= (x1938 64 x131 0) x361) (not (> x1484 x737)) (= 68 x1523) (= (x1877 x540) x1891) (= x251 false) (= x136 false) (= x15 x770) (>= x87 1) (= x1816 2835717307))) (and (and (= x1401 (x1938 64 x131 0)) (= 32 x1492) (= x1265 (x560 (- x463 x943))) (= x126 1) (= x31 false) (<= x1283 127) (= 2835717307 x106) (>= x1031 1) (not (< x463 x943)) (<= 1 x1821) (<= x1283 127) (= false x1710) (= x537 x1257) (not (> x1091 x1536)) (= x420 68) (= (x1938 64 x103 0) x233) (= x1927 false) (= (x1938 64 x131 0) x1273) (= x103 x1257) (= x517 x1858) (= x517 x943) (= (x1813 x1273) x463) (>= 1461501637330902918203684832716283019655932542975 x1031) (= x939 x1031) (= false x703) (not (> x1265 x463)) (= x1821 (x1817 x939)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x568) (= x1091 (x125 x233)) (= (x1262 (+ x943 x1091)) x1536)) (not x414)))) x19)))
(assert (x261 x1985))
(assert (x800 x352))
(assert (x800 x380))
(assert (x800 x656))
(assert (> (x1675 40 20 (x372 x1048 96) (x372 x531 96)) 10000))
(assert (x800 x1693))
(assert (x800 x1010))
(assert (x800 x1564))
(assert (x800 x1411))
(assert (=> (>= 10000 (x372 x1830 96)) (= 0 (x377 (x372 x1830 96)))))
(assert (x800 x1384))
(assert (x800 x1839))
(assert (x800 x661))
(assert (= (x911 (x1675 40 20 (x372 x1952 96) (x372 x1418 96))) (x372 x1418 96)))
(assert (= (x372 x686 1) (div x686 2)))
(assert (not (x354 (x1675 40 20 (x372 x334 96) (x372 x36 96)))))
(assert (x800 x1898))
(assert (x800 x397))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1744 96) (x372 x1665 96))))
(assert (= (x1006 (x1675 40 20 (x372 x794 96) (x372 x1620 96))) 20))
(assert (x800 x1502))
(assert (x800 x553))
(assert (= (x519 (x1675 40 20 (x372 x1952 96) (x372 x1418 96))) (x372 x1952 96)))
(assert (= (x911 (x1675 40 20 (x372 x1048 96) (x372 x531 96))) (x372 x531 96)))
(assert (= (or x92 x1102) x1546))
(assert (< (x1675 40 20 (x372 x1355 96) (x372 x1772 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (or (and x121 (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1211) (= x213 x435) (not (> x213 x725)) (= (* x725 x304) x1211) (= x1789 x1267) (= (div x1211 x1789) x1186) (>= 340282366920938463463374607431768211455 x213) (<= x1186 340282366920938463463374607431768211455) (= x1186 x943) (= x213 (x560 (- x725 x1186))) (>= 680564733841876926926749214863536422910 x1789) (= x1789 (+ x304 x1861)) (>= x1211 0) (<= 1 x1789))) (and (and (= x1267 x1931) (= x1618 (div x1437 x1256)) (not (< x1861 x1931)) (= (x560 (- x1861 x1618)) x1931) (>= 680564733841876926926749214863536422910 x1256) (<= x1437 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1256 x435) (= x1256 (+ x304 x725)) (<= 1 x1256) (= (* x1861 x304) x1437) (<= 0 x1437) (<= x1618 340282366920938463463374607431768211455) (<= x1931 340282366920938463463374607431768211455) (= x943 x1618)) (not x121))) (and (= (x486 x1638) x1861) (<= x1861 340282366920938463463374607431768211455) (>= 340282366920938463463374607431768211455 x725) (= x1638 (x1938 64 x667 6)) (= (= 0 x1271) x121) (= x302 (ite (not (< x1861 100)) (ite (not (> 100 x725)) 1 0) (ite (not (> 100 x1861)) 1 0))) (= 1 x302) (= (x1487 x1638) x725))) x1724) x443))
(assert (x800 x447))
(assert (x800 x1941))
(assert (= x1954 (=> (and (or (and (and (= x581 (div x1425 x526)) (= x578 (x560 (- x1096 x1723))) (= (mod (* x115 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1425) (= (+ x49 x115) x526) (= x1197 (mod (* x581 x1811) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x1647 x1723) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x584) (= x140 (x1262 (+ x581 x426))) (= x1096 (div x1197 x140)) (= x1723 (+ 1000000000000000 x1960)) (<= x526 115792089237316195423571325291054828791733448040247995807669039) (>= x140 1) (= x115 (div x584 (+ x1723 x1577))) (<= 1 x526) (= (ite (or (and (<= x578 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x252)) (and (> x578 x252) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x252) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x578)))) 1 0) x27)) (not x1639)) (and x1639 (= 0 x27))) (and (>= x664 1) (= x1500 (x1262 (+ x840 x49))) (= (mod (* x1811 x1110) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1482) (<= x957 57896044618658097711785492504343953926975274699741220483192166611388333031422) (>= x957 1) (= (div x1292 x1500) x1110) (= (x1262 (+ x21 x1435)) x356) (= (x372 x356 1) x1960) (>= x1500 1) (= (or (and (< x252 100) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x252) true)) (> x252 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1639) (= x1292 (mod (* x840 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x560 (- x1980 x1960)) x252) (= (mod (* x1647 x1960) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1207) (= x840 (div x1207 x957)) (= x957 (+ x1960 x1577)) (= (div x1482 x664) x1980) (= x664 (x1262 (+ x426 x1110))))) x1195)))
(assert (= (x372 x1714 96) (x911 (x1675 40 20 (x372 x1646 96) (x372 x1714 96)))))
(assert (x800 x448))
(assert (= x272 (=> (and (and (not (= x1431 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (> x529 x1431) (= (x1262 (+ x1431 64)) x529) (= (x989 x227) x677) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1431) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1431) (= (= x1919 0) x508) (<= x891 340282366920938463463374607431768211455) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1431)) (>= 340282366920938463463374607431768211455 x677) (<= x1431 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1431)) (= x227 (x1938 64 x297 6)) (= (x375 x227) x891)) (or (and (and (= x707 x677) (= x891 x1795)) (not x508)) (and x508 (and (= x707 x891) (= x1795 x677))))) x1907)))
(assert (= x797 (and (not x1134) x1378)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x1520 6)))
(assert (= (x377 (x1938 64 x1730 1)) (x1938 64 x1730 1)))
(assert (= (x372 x253 96) (x911 (x1675 40 20 (x372 x583 96) (x372 x253 96)))))
(assert (x800 x664))
(assert (x800 x1076))
(assert (x800 x411))
(assert (x800 x896))
(assert (x800 x474))
(assert (= (x377 (x1675 40 20 (x372 x1355 96) (x372 x1772 96))) (x1675 40 20 (x372 x1355 96) (x372 x1772 96))))
(assert (x800 x1066))
(assert (= (x372 x374 96) (div x374 79228162514264337593543950336)))
(assert (= (x377 115792089237316195423570985008687907853269984665640564039457584007913129639836) 0))
(assert (= (=> (and (= (div x1701 x1255) x9) (= (div x1670 x745) x242) (= x1586 (x1262 (+ x653 x494))) (= x745 (x1262 (+ x1109 x967))) (<= 1 x1080) (= (x372 x1586 1) x1855) (= (ite (or (> x879 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x879 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 100 x879))) 0 x1855) x588) (<= 1 x745) (= (mod (* x242 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1701) (= x1613 (mod (* x1855 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1109 (div x1613 x1080)) (= x879 (x560 (- x9 x1855))) (= (mod (* x1109 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1670) (<= x1080 57896044618658097711785492504343953926975274699741220483192166611388333031422) (>= x1255 1) (= (x1262 (+ x651 x242)) x1255) (= x1080 (+ x1855 x1795))) x35) x1589))
(assert (= (=> (and (= x193 (= x218 0)) (or (and x193 (and (= x1839 x1011) (= x1514 x614))) (and (and (= x614 x74) (= x1839 x1514)) (not x193)))) x1112) x53))
(assert (= 0 (x377 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x800 x1640))
(assert (x800 x1794))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x430 96) (x372 x1778 96))))
(assert (< 10000 (x1675 40 20 (x372 x145 96) (x372 x1653 96))))
(assert (x800 x85))
(assert (= 40 (x485 (x1675 40 20 (x372 x583 96) (x372 x253 96)))))
(assert (= (div x457 79228162514264337593543950336) (x372 x457 96)))
(assert (x800 x1042))
(assert (= (x1006 (x1938 64 x1464 6)) x1464))
(assert (x800 x816))
(assert (= (x372 x1620 96) (x911 (x1675 40 20 (x372 x794 96) (x372 x1620 96)))))
(assert (x800 x1515))
(assert (x800 x112))
(assert (x800 x960))
(assert (= (and x622 x894) x1926))
(assert (x800 x182))
(assert (= (x519 (x1675 40 20 (x372 x137 96) (x372 x1641 96))) (x372 x137 96)))
(assert (x800 x1031))
(assert (x800 x1330))
(assert (= (=> (and (= x206 x1213) (= x154 x1090)) x1895) x1443))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x579 6)))
(assert (< (x1675 40 20 (x372 x145 96) (x372 x1653 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x696))
(assert (= (div x1538 79228162514264337593543950336) (x372 x1538 96)))
(assert (x800 x101))
(assert (= x1810 (x519 (x1938 64 x746 x1810))))
(assert (= x579 (x1006 (x1938 64 x579 6))))
(assert (= (and (not x622) x894) x1264))
(assert (x800 x1627))
(assert (x800 x1320))
(assert (x800 x1637))
(assert (x800 x1058))
(assert (< (x1938 64 x525 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x185))
(assert (x800 x1139))
(assert (x800 x1932))
(assert (= x14 (or x88 x59)))
(assert (x800 x1802))
(assert (= (or x1754 x16) x1550))
(assert (x800 x241))
(assert (x800 x854))
(assert (= (=> (and (or (and x495 (and (= x1509 x1651) (= x221 x1363))) (and (not x495) (and (= x516 x1651) (= x1363 x1509)))) (= x495 (= x747 0))) x109) x1167))
(assert (= x224 (=> (and (or (and x41 (and (= x426 x1260) (= x64 x1811))) (and (not x41) (and (= x1260 x1811) (= x64 x426)))) (and (< x790 x1713) (= (x1262 (+ x790 64)) x1713) (= (x1938 64 x1 6) x570) (>= 340282366920938463463374607431768211455 x1260) (= (= 0 x1025) x41) (= (x265 x570) x1260) (not (= x790 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x790)) (<= x790 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1805 x570) x64) (<= x790 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x790 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x790 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x64 340282366920938463463374607431768211455))) x1242)))
(assert (x1176 x1893))
(assert (= (x1006 (x1675 40 20 (x372 x1048 96) (x372 x531 96))) 20))
(assert (= (x372 x38 7) (div x38 128)))
(assert (= x765 (=> (and (or (and x1793 (and (= x1150 x138) (= x348 x1758))) (and (not x1793) (and (= x1150 x348) (= x138 x699)))) (= (= 0 x1440) x1793)) x1229)))
(assert (x800 x133))
(assert (= x946 (and x982 x824)))
(assert (= x1752 (and x121 x1679)))
(assert (= x141 (or x1087 x1473)))
(assert (< 10000 (x1675 40 20 (x372 x229 96) (x372 x984 96))))
(assert (= x1137 (and x663 x968)))
(assert (=> (<= (x372 x1744 96) 10000) (= (x377 (x372 x1744 96)) 0)))
(assert (x261 x217))
(assert (x800 x1369))
(assert (x800 x317))
(assert (= (div x531 79228162514264337593543950336) (x372 x531 96)))
(assert (=> (= 0 x1103) (= (div x1847 x1103) 0)))
(assert (x800 x298))
(assert (= (x372 x1333 96) (x519 (x1675 40 20 (x372 x1333 96) (x372 x1123 96)))))
(assert (x800 x874))
(assert (= (x372 x1952 96) (div x1952 79228162514264337593543950336)))
(assert (= (or x1694 x199) x1764))
(assert (x800 x1893))
(assert (< 10000 (x1675 40 20 (x372 x457 96) (x372 x181 96))))
(assert (= (div x1190 79228162514264337593543950336) (x372 x1190 96)))
(assert (= (x1006 (x1938 64 x131 x1916)) x131))
(assert (= x1295 (=> (and (or (and (and (= 0 x38) (= x1977 x1026)) (not x904)) (and x904 (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1668) (= (div x1668 x1452) x1834) (>= 340282366920938463463374607431768211455 x1452) (= x1668 (* x1936 x1636)) (= x1026 x1977) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1636 x1936)) (= (ite (< 100 x1834) x1834 0) x38) (<= 0 x1668) (>= x1452 1)))) (= x904 (= (ite (< x1936 100) (ite (< x1936 100) 1 0) (ite (< x1452 100) 1 0)) 0))) x847)))
(assert (x800 x213))
(assert (= (and x807 x845) x1853))
(assert (x800 x1152))
(assert (=> (>= 10000 (x372 x1646 96)) (= 0 (x377 (x372 x1646 96)))))
(assert (x800 x1723))
(assert (x800 x883))
(assert (= (x377 (x1675 40 20 (x372 x1190 96) (x372 x850 96))) (x1675 40 20 (x372 x1190 96) (x372 x850 96))))
(assert (=> (= 0 x585) (= (div x1862 x585) 0)))
(assert (x800 x990))
(assert (= (x1675 40 20 (x372 x1333 96) (x372 x1123 96)) (x377 (x1675 40 20 (x372 x1333 96) (x372 x1123 96)))))
(assert (x800 x767))
(assert (= 6 (x519 (x1938 64 x57 6))))
(assert (x800 x588))
(assert (x800 x1477))
(assert (x800 x1387))
(assert (x800 x1216))
(assert (= (div x542 79228162514264337593543950336) (x372 x542 96)))
(assert (= (and x1130 x508) x776))
(assert (x800 x1905))
(assert (not (x354 (x1938 64 x131 0))))
(assert (x800 x1001))
(assert (x800 x132))
(assert (= (x372 x327 96) (x519 (x1675 40 20 (x372 x327 96) (x372 x230 96)))))
(assert (not (x354 (x1938 64 x1520 6))))
(assert (x800 x1171))
(assert (x800 x616))
(assert (x800 x162))
(assert (x800 x1215))
(assert (= (x372 x36 96) (div x36 79228162514264337593543950336)))
(assert (= (x1675 40 20 (x372 x1749 96) (x372 x1510 96)) (x377 (x1675 40 20 (x372 x1749 96) (x372 x1510 96)))))
(assert (x800 x1636))
(assert (x800 x97))
(assert (=> (= x1819 0) (= (div x1117 x1819) 0)))
(assert (=> (= 0 x1522) (= (div x538 x1522) 0)))
(assert (x800 x1074))
(assert (x800 x1425))
(assert (x800 x1610))
(assert (x800 x1918))
(assert (=> (>= 10000 (x372 x1216 96)) (= (x377 (x372 x1216 96)) 0)))
(assert (= x890 (and (not x970) x191)))
(assert (= x148 (and x389 x62)))
(assert (not (x354 (x1938 64 x360 6))))
(assert (= (x377 (x1938 64 x1464 6)) (x1938 64 x1464 6)))
(assert (= (div x1986 79228162514264337593543950336) (x372 x1986 96)))
(assert (=> (= (+ x13 x1795) 0) (= 0 (div x365 (+ x13 x1795)))))
(assert (x800 x596))
(assert (x800 x1353))
(assert (= (and x1234 x904) x1788))
(assert (x800 x542))
(assert (x800 x1522))
(assert (x800 x253))
(assert (x800 x1716))
(assert (= 64 (x485 (x1938 64 x360 6))))
(assert (=> (= x1605 0) (= (div x320 x1605) 0)))
(assert (= (x372 x1331 96) (x519 (x1675 40 20 (x372 x1331 96) (x372 x56 96)))))
(assert (x800 x1465))
(assert (x800 x1691))
(assert (=> (<= (x372 x430 96) 10000) (= (x377 (x372 x430 96)) 0)))
(assert (=> (= x1506 0) (= (div x1046 x1506) 0)))
(assert (=> (<= (x372 x984 96) 10000) (= 0 (x377 (x372 x984 96)))))
(assert (x800 x1591))
(assert (not (x354 (x1675 40 20 (x372 x1355 96) (x372 x1772 96)))))
(assert (= (div x1216 79228162514264337593543950336) (x372 x1216 96)))
(assert (= 20 (x1006 (x1675 40 20 (x372 x549 96) (x372 x70 96)))))
(assert (> (x1938 64 x297 6) 10000))
(assert (x800 x122))
(assert (x800 x179))
(assert (=> (>= 10000 (x372 x277 96)) (= (x377 (x372 x277 96)) 0)))
(assert (x800 x583))
(assert (= (and x153 x700) x964))
(assert (x800 x190))
(assert (= (x372 x728 96) (div x728 79228162514264337593543950336)))
(assert (= (=> (and (and (= (x1389 340282366920938463463374607431768211455 x1898) x1676) (= (x1389 340282366920938463463374607431768211455 x1985) x607) (= x565 (> x646 x1030)) (= (ite (not (> 100 x1898)) (ite (not (> 100 x1985)) 1 0) (ite (not (> 100 x1898)) 1 0)) x678) (= 1 x678)) (or (and x565 (and (= x868 (x1262 (+ x1798 20))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1454) (= x736 (x1262 (+ x868 20))) (= x1798 (x1262 (+ x1454 32))) (= x841 (* x646 79228162514264337593543950336)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1454)) (not (= x1454 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1454) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1454) (= (x1675 40 20 (x372 x1830 96) (x372 x841 96)) x813) (not (= x1454 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x813 x360) (= x1830 (* x1030 79228162514264337593543950336)) (= x33 x736) (= x1955 1) (> x736 x1454))) (and (not x565) (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1454)) (= (x1262 (+ x444 20)) x990) (= x360 x156) (= (x1675 40 20 (x372 x1590 96) (x372 x453 96)) x156) (= 0 x1955) (= (x1262 (+ 20 x391)) x444) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1454)) (<= x1454 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1454 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* 79228162514264337593543950336 x646) x1590) (= x391 (x1262 (+ 32 x1454))) (= (* x1030 79228162514264337593543950336) x453) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1454) (> x990 x1454) (= x990 x33) (not (= x1454 115792089237316195423570985008687907853269984665640564039457584007913129639864)))))) x175) x558))
(assert (=> (= 0 (+ x50 x1577)) (= (div x1430 (+ x50 x1577)) 0)))
(assert (x800 x1123))
(assert (= (or x83 x1556) x1930))
(assert (x800 x247))
(assert (x800 x1039))
(assert (x800 x967))
(assert (x800 x676))
(assert (= x379 (and x1878 x14)))
(assert (x800 x1816))
(assert (= (x485 (x1938 64 x667 6)) 64))
(assert (x354 680564733841876926926749214863536422910))
(assert (x800 x1202))
(assert (= (and x81 x969) x1405))
(assert (x354 79228162514264337593543950336))
(assert (x800 x1476))
(assert (x800 x266))
(assert (= (x485 (x1938 64 x746 x659)) 64))
(assert (< 10000 (x1938 64 x667 6)))
(assert (not (x354 (x1675 40 20 (x372 x1952 96) (x372 x1418 96)))))
(assert (x800 x74))
(assert (x800 x71))
(assert (= x640 (or x1291 x250)))
(assert (not (x354 (x1675 40 20 (x372 x1538 96) (x372 x1162 96)))))
(assert (x800 x1592))
(assert (= x1761 (or x576 x1921)))
(assert (x800 x242))
(assert (=> (= 0 x1362) (= 0 (div x321 x1362))))
(assert (= (=> (and (or (and (not x72) (and (not (= x282 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (< x282 x555) (= (x1262 (+ x282 32)) x656) (= x892 (* 79228162514264337593543950336 x899)) (= x1856 (x1675 40 20 (x372 x1122 96) (x372 x892 96))) (not (= x282 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x282)) (= x351 x1856) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x282) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x282) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x282) (= (x1262 (+ x1429 20)) x555) (= x1122 (* x566 79228162514264337593543950336)) (= x555 x290) (= (x1262 (+ x656 20)) x1429))) (and (and (= x1684 (x1675 40 20 (x372 x1190 96) (x372 x850 96))) (= x544 (x1262 (+ 20 x822))) (< x282 x112) (= x112 x290) (<= x282 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x282)) (= (* x566 79228162514264337593543950336) x850) (<= x282 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x282 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x351 x1684) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x282) (= (x1262 (+ 32 x282)) x822) (= x112 (x1262 (+ 20 x544))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x282)) (= x1190 (* x899 79228162514264337593543950336))) x72)) (and (= 1 x80) (= x1388 (x1938 64 x746 x1810)) (= (x1389 340282366920938463463374607431768211455 x1254) x545) (= x592 (x1609 x1388)) (not (< x1449 x300)) (= (> x566 x899) x72) (>= 340282366920938463463374607431768211455 x300) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x592 x300))) (= x1231 (x1262 (+ x592 x300))) (= x80 (ite (not (< x1254 100)) (ite (not (> 100 x1893)) 1 0) (ite (not (< x1254 100)) 1 0))) (= x300 (x560 (- x1449 x387))) (>= 1461501637330902918203684832716283019655932542975 x738) (= x1034 (x1389 340282366920938463463374607431768211455 x1893)) (= (x1938 64 x738 7) x1810))) x593) x1065))
(assert (x800 x1777))
(assert (x800 x1569))
(assert (x800 x1809))
(assert (= x88 (and x1722 x1415)))
(assert (> (x1938 64 x131 x1379) 10000))
(assert (x800 x1937))
(assert (= (x519 (x1938 64 x131 x918)) x918))
(assert (x800 x1231))
(assert (x800 x205))
(assert (= 6 (x519 (x1938 64 x360 6))))
(assert (> (x1938 64 x351 1) 10000))
(assert (x800 x748))
(assert (= (x1006 (x1675 40 20 (x372 x277 96) (x372 x146 96))) 20))
(assert (= (x372 x794 96) (x519 (x1675 40 20 (x372 x794 96) (x372 x1620 96)))))
(assert (= x1019 (=> (and (and (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x624) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x754) (and (< x754 100) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x754) true))) x1690) (<= 1 x585) (= (x372 x1507 1) x811) (= (+ x1795 x811) x624) (>= x624 1) (<= 1 x1033) (= (mod (* x707 x811) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x706) (= (x560 (- x308 x811)) x754) (= (x1262 (+ x284 x651)) x1033) (= x1862 (mod (* x880 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1800 (mod (* x104 x284) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1862 x585) x284) (= (x1262 (+ x761 x1392)) x1507) (= (div x1800 x1033) x308) (= x880 (div x706 x624)) (= (x1262 (+ x967 x880)) x585)) (or (and (and (= x1117 (mod (* x104 x1624) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x400 x599) x1624) (<= 1 x599) (= x400 (mod (* x17 x1695) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1695 (div x365 (+ x13 x1795))) (= (x1262 (+ x1624 x651)) x1819) (= x13 (+ 1000000000000000 x811)) (>= x1819 1) (= (+ x967 x1695) x599) (= x1530 (x560 (- x295 x13))) (= x120 (ite (or (and (= (<= x754 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1530)) (> x1530 x754)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1530) (> x754 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (<= x599 115792089237316195423571325291054828791733448040247995807669039) (= x365 (mod (* x13 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1117 x1819) x295)) (not x1690)) (and (= x120 0) x1690))) x697)))
(assert (> (x1675 40 20 (x372 x374 96) (x372 x905 96)) 10000))
(assert (= (or x727 x279) x1357))
(assert (= (x372 x1407 96) (x519 (x1675 40 20 (x372 x1407 96) (x372 x833 96)))))
(assert (=> (= 0 x1868) (= 0 (div x215 x1868))))
(assert (= x1241 (x1006 (x1938 64 x1241 6))))
(assert (x800 x614))
(assert (x800 x1759))
(assert (x800 x1696))
(assert (= (x377 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x800 x44))
(assert (= (x372 x1122 96) (x519 (x1675 40 20 (x372 x1122 96) (x372 x892 96)))))
(assert (x800 x1892))
(assert (x800 x1920))
(assert (x800 x617))
(assert (x800 x263))
(assert (x800 x783))
(assert (= (x1006 (x1675 40 20 (x372 x327 96) (x372 x230 96))) 20))
(assert (x800 x979))
(assert (= (x377 (x1675 40 20 (x372 x1707 96) (x372 x1986 96))) (x1675 40 20 (x372 x1707 96) (x372 x1986 96))))
(assert (x800 x1400))
(assert (=> (>= 10000 (x372 x1510 96)) (= (x377 (x372 x1510 96)) 0)))
(assert (x800 x1124))
(assert (not (x354 (x1938 64 x525 6))))
(assert (x800 x1744))
(assert (x800 x1149))
(assert (x800 x1854))
(assert (=> (= 0 x165) (= (div x839 x165) 0)))
(assert (=> (= 0 x412) (= 0 (div x1956 x412))))
(assert (=> (>= 10000 (x372 x1620 96)) (= 0 (x377 (x372 x1620 96)))))
(assert (= (and x1690 x1319) x1869))
(assert (x800 x1620))
(assert (x800 x638))
(assert (= x1261 (and (not x1345) x946)))
(assert (< 10000 (x1675 40 20 (x372 x627 96) (x372 x1216 96))))
(assert (=> (<= (x372 x181 96) 10000) (= 0 (x377 (x372 x181 96)))))
(assert (x800 x168))
(assert (= 20 (x1006 (x1675 40 20 (x372 x1331 96) (x372 x56 96)))))
(assert (= (and (not x1722) x1415) x59))
(assert (x800 x87))
(assert (= (x372 x1538 96) (x519 (x1675 40 20 (x372 x1538 96) (x372 x1162 96)))))
(assert (x800 x1189))
(assert (= x1824 (x1006 (x1938 64 x1824 6))))
(assert (= x983 (or x1563 x1857)))
(assert (= (x377 (x1938 64 x579 6)) (x1938 64 x579 6)))
(assert (x354 36411184310952944264052594895310064774513070513733693952433435203670076555261))
(assert (= 0 (x519 (x1938 64 x131 0))))
(assert (x800 x731))
(assert (x800 x744))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1938 64 x1086 6)))
(assert (= (x372 x905 96) (x911 (x1675 40 20 (x372 x374 96) (x372 x905 96)))))
(assert (x800 x1407))
(assert (> (x1938 64 x525 6) 10000))
(assert (x800 x1789))
(assert (< 10000 (x1675 40 20 (x372 x1749 96) (x372 x1510 96))))
(assert (= x1415 (or x119 x1013)))
(assert (x1176 x665))
(assert (x800 x1491))
(assert (x800 x764))
(assert (x800 x189))
(assert (= (x377 (x1938 64 x746 x1810)) (x1938 64 x746 x1810)))
(assert (= x1087 (and x1325 (not x232))))
(assert (= x279 (and x1689 (not x1063))))
(assert (x800 x1201))
(assert (x800 x1860))
(assert (= (or x1926 x1264) x673))
(assert (= 0 (x377 4294967295)))
(assert (x800 x1738))
(assert (< 10000 (x1675 40 20 (x372 x1590 96) (x372 x453 96))))
(assert (x800 x1577))
(assert (=> (= 0 x434) (= 0 (div x1699 x434))))
(assert (x800 x50))
(assert (x800 x1200))
(assert (=> (= 0 x1775) (= 0 (div x718 x1775))))
(assert (x800 x637))
(assert (< 10000 (x1938 64 x746 x1810)))
(assert (not (x354 (x1675 40 20 (x372 x1048 96) (x372 x531 96)))))
(assert (=> (= x1115 0) (= (div x1871 x1115) 0)))
(assert (=> (<= (x372 x850 96) 10000) (= (x377 (x372 x850 96)) 0)))
(assert (= x175 (=> (and (and (<= x1946 340282366920938463463374607431768211455) (= 1 x784) (= x1361 (x1938 64 x360 6)) (= (x865 x1361) x1946) (= x1498 (x337 x1361)) (<= x1498 340282366920938463463374607431768211455) (= x683 (= 0 x1955)) (= x784 (ite (not (> 100 x1946)) (ite (not (> 100 x1498)) 1 0) (ite (not (< x1946 100)) 1 0)))) (or (and x683 (and (>= x1191 0) (= x285 x1950) (<= 1 x294) (= x781 (div x1191 x294)) (= x294 x1886) (= (+ x1570 x1946) x294) (>= 340282366920938463463374607431768211455 x781) (<= x1191 57896044618658097711785492504343953926634992332820282019728792003956564819967) (not (< x1498 x1950)) (= (* x1498 x1570) x1191) (= x781 x1559) (= x1950 (x560 (- x1498 x781))) (>= 340282366920938463463374607431768211455 x1950) (<= x294 680564733841876926926749214863536422910))) (and (and (= x1559 x1074) (<= 0 x961) (>= 340282366920938463463374607431768211455 x798) (= x1886 x798) (= x1074 (div x961 x1947)) (<= 1 x1947) (= x1947 x285) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x961) (= x961 (* x1570 x1946)) (not (> x798 x1946)) (= x798 (x560 (- x1946 x1074))) (<= x1074 340282366920938463463374607431768211455) (= (+ x1498 x1570) x1947) (>= 680564733841876926926749214863536422910 x1947)) (not x683)))) x134)))
(assert (= (x1675 40 20 (x372 x1538 96) (x372 x1162 96)) (x377 (x1675 40 20 (x372 x1538 96) (x372 x1162 96)))))
(assert (= x940 (and x1599 x951)))
(assert (= 20 (x1006 (x1675 40 20 (x372 x1830 96) (x372 x841 96)))))
(assert (x800 x930))
(assert (x800 x858))
(assert (x800 x1133))
(assert (= (x485 (x1938 64 x1464 6)) 64))
(assert (x800 x1621))
(assert (not (x354 (x1675 40 20 (x372 x583 96) (x372 x253 96)))))
(assert (= (or x1490 x682) x1879))
(assert (x800 x307))
(assert (= x934 (x1006 (x1938 64 x934 6))))
(assert (= (or x148 x1203) x1286))
(assert (x800 x181))
(assert (=> (<= (x372 x453 96) 10000) (= 0 (x377 (x372 x453 96)))))
(assert (x800 x651))
(assert (=> (>= 10000 (x372 x1772 96)) (= (x377 (x372 x1772 96)) 0)))
(assert (= (x372 x38 2) (div x38 4)))
(assert (= (x1006 (x1938 64 x1086 6)) x1086))
(assert (= 64 (x485 (x1938 64 x297 6))))
(assert (= (x372 x411 96) (x911 (x1675 40 20 (x372 x417 96) (x372 x411 96)))))
(assert (x800 x1977))
(assert (= x1444 (and (not x331) x325)))
(assert (x800 x699))
(assert (x800 x1433))
(assert (= x662 (or x963 x1012)))
(assert (x800 x1963))
(assert (= (x1006 (x1938 64 x131 x1300)) x131))
(assert (= 0 (x377 680564733841876926926749214863536422910)))
(assert (x800 x93))
(assert (x800 x852))
(assert (x800 x1521))
(assert (= (x377 (x1675 40 20 (x372 x430 96) (x372 x1778 96))) (x1675 40 20 (x372 x430 96) (x372 x1778 96))))
(assert (x800 x774))
(assert (x800 x1797))
(assert (x800 x249))
(assert (= (and (not x663) x968) x1535))
(assert (= x276 (and (not x1163) x432)))
(assert (x800 x848))
(assert (x800 x326))
(assert (not (x354 (x1938 64 x1730 1))))
(assert (x800 x1435))
(assert (=> (<= (x372 x1400 96) 10000) (= 0 (x377 (x372 x1400 96)))))
(assert (x354 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (> (x1938 64 x1 6) 10000))
(assert (x974 x634))
(assert (=> (= x681 0) (= 0 (div x1173 x681))))
(assert (< 10000 (x1675 40 20 (x372 x1815 96) (x372 x22 96))))
(assert (x800 x888))
(assert (= (x372 x145 96) (x519 (x1675 40 20 (x372 x145 96) (x372 x1653 96)))))
(assert (not (x354 (x1675 40 20 (x372 x1331 96) (x372 x56 96)))))
(assert (x800 x201))
(assert (x800 x1624))
(assert (= x273 (and x532 x1715)))
(assert (< 10000 (x1675 40 20 (x372 x1935 96) (x372 x1496 96))))
(assert (< 10000 (x1938 64 x738 7)))
(assert (x800 x1775))
(assert (= (and x1336 x1875) x1903))
(assert (x800 x138))
(assert (x800 x1182))
(assert (x800 x334))
(assert (x800 x426))
(assert (x800 x772))
(assert (=> (= 0 x1897) (= (div x944 x1897) 0)))
(assert (= (x377 36411184310952944264052594895310064774513070513733693952433435203670076555261) 0))
(assert (=> (= 0 x448) (= (div x959 x448) 0)))
(assert (x800 x1072))
(assert (x800 x1083))
(assert (x800 x1727))
(assert (x800 x1423))
(assert (= 40 (x485 (x1675 40 20 (x372 x1749 96) (x372 x1510 96)))))
(assert (x800 x997))
(assert (= (x911 (x1675 40 20 (x372 x1400 96) (x372 x366 96))) (x372 x366 96)))
(assert (x800 x747))
(assert (= 0 (x377 599290589)))
(assert (= (and x1130 (not x508)) x1721))
(assert (x800 x194))
(assert (= (x485 (x1675 40 20 (x372 x1407 96) (x372 x833 96))) 40))
(assert (= x1029 (and x1565 x863)))
(assert (x800 x592))
(assert (x800 x658))
(assert (= (x377 (x1675 40 20 (x372 x1744 96) (x372 x1665 96))) (x1675 40 20 (x372 x1744 96) (x372 x1665 96))))
(assert (x800 x1337))
(assert (x800 x833))
(assert (=> (>= 10000 (x372 x374 96)) (= 0 (x377 (x372 x374 96)))))
(assert (=> (= x834 0) (= 0 (div x759 x834))))
(assert (< 10000 (x1675 40 20 (x372 x583 96) (x372 x253 96))))
(assert (= (and x1600 x1228) x1765))
(assert (> (x1938 64 x1520 6) 10000))
(assert (= x47 (and x1617 x1308)))
(assert (=> (>= 10000 (x372 x253 96)) (= 0 (x377 (x372 x253 96)))))
(assert (x800 x1559))
(assert (x800 x775))
(assert (x800 x977))
(assert (x800 x126))
(assert (= (div x928 79228162514264337593543950336) (x372 x928 96)))
(assert (x800 x80))
(assert (x800 x1495))
(assert (= x682 (and x1761 (not x1793))))
(assert (x800 x912))
(assert (< (x1938 64 x746 x659) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 x329))
(assert (x800 x738))
(assert (not (x354 (x1938 64 x738 7))))
(assert (x800 x1016))
(assert (x800 x1474))
(assert (x800 x34))
(assert (x800 x1626))
(assert (x800 x1417))
(assert (x800 x1267))
(assert (= x995 (or x1853 x871)))
(assert (x800 x1377))
(assert (= (=> (and (or (and (and (= x478 x132) (= x866 x758)) (not x1979)) (and x1979 (and (= x478 x1298) (= x132 x758)))) (= (= 0 x1421) x1979)) x907) x188))
(assert (= x1013 (and x193 x1084)))
(assert (= (div x1400 79228162514264337593543950336) (x372 x1400 96)))
(assert (x800 x516))
(assert (x800 x284))
(assert (x800 x40))
(assert (= (x1006 (x1938 64 x351 1)) x351))
(assert (=> (= 0 x874) (= (div x782 x874) 0)))
(assert (= 20 (x1006 (x1675 40 20 (x372 x137 96) (x372 x1641 96)))))
(assert (not (x354 (x1938 64 x1 6))))
(assert (x800 x545))
(assert (= (=> (and (or (and (not x780) (and (= x1060 x1913) (<= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1953)) (= (* 79228162514264337593543950336 x899) x181) (< x1953 x1913) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1953)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1953)) (= x457 (* 79228162514264337593543950336 x566)) (= x693 (x1262 (+ x1953 32))) (= x1913 (x1262 (+ 20 x502))) (<= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1675 40 20 (x372 x457 96) (x372 x181 96)) x1297) (= x1297 x1086) (= 0 x1352) (= (x1262 (+ 20 x693)) x502))) (and x780 (and (<= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1675 40 20 (x372 x263 96) (x372 x542 96)) x971) (not (= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (* x566 79228162514264337593543950336) x542) (= x971 x1086) (= (* x899 79228162514264337593543950336) x263) (<= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1953 x909) (= (x1262 (+ x1953 32)) x338) (= 1 x1352) (<= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1262 (+ x1372 20)) x909) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1953)) (= x909 x1060) (not (= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (x1262 (+ x338 20)) x1372)))) (and (= x1474 (ite (not (< x826 100)) (ite (not (> 100 x1097)) 1 0) (ite (not (< x826 100)) 1 0))) (= x1592 (x1389 340282366920938463463374607431768211455 x826)) (= (> x566 x899) x780) (= (x1389 340282366920938463463374607431768211455 x1097) x952) (= 1 x1474))) x1771) x1900))
(assert (x800 x362))
(assert (x800 x544))
(assert (= x19 (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1027)) (= (x742 x1027) x1728) (= 1 x287) (not (= x1027 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x1262 (+ 32 x1027)) x1140) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1027) (= (x1262 (+ x1027 64)) x313) (<= x1027 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1027)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1027) (= (= x1728 0) x620) (> x313 x1027)) (or (and (and (<= 1 x1688) (= (x1817 x1031) x1688) (= 1 x1035)) x620) (not x620))) x1832)))
(assert (= (div x1744 79228162514264337593543950336) (x372 x1744 96)))
(assert (x800 x1751))
(assert (= (div x1539 2) (x372 x1539 1)))
(assert (x800 x898))
(assert (= (or x1248 x47) x591))
(assert (=> (= 0 x397) (= 0 (div x1961 x397))))
(assert (= x593 (=> (and (= x63 (x65 x75)) (= (x1938 64 x351 1) x75) (not (>= (+ x300 x63) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1090 x300) (= x1154 (x1262 (+ x63 x300))) (= x290 x206)) x1443)))
(assert (x800 x28))
(assert (= (x372 x627 96) (div x627 79228162514264337593543950336)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1675 40 20 (x372 x1815 96) (x372 x22 96))))
(assert (x800 x1950))
(assert (= x1914 (and x1673 x1459)))
(assert (= (=> (and (= (< x566 x746) x1635) (or (and (and (= x57 x1974) (= (x1262 (+ x1860 20)) x1131) (not (= x1977 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1977)) (> x567 x1977) (not (= x1977 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x567 (x1262 (+ 20 x1131))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1977) (= (* 79228162514264337593543950336 x566) x137) (= x1860 (x1262 (+ 32 x1977))) (= x1641 (* 79228162514264337593543950336 x746)) (= x1974 (x1675 40 20 (x372 x137 96) (x372 x1641 96))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1977) (<= x1977 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x567 x1981) (= 1 x1560)) x1635) (and (not x1635) (and (= x1981 x1526) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1977)) (= x806 x57) (= 0 x1560) (<= x1977 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1977 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1963 (x1262 (+ 20 x950))) (<= x1977 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x950 (x1262 (+ 32 x1977))) (= (* x566 79228162514264337593543950336) x1778) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1977)) (= x1526 (x1262 (+ x1963 20))) (= (x1675 40 20 (x372 x430 96) (x372 x1778 96)) x806) (= (* 79228162514264337593543950336 x746) x430) (<= x1977 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1977 x1526))))) x788) x1098))
(assert (< 10000 (x1675 40 20 (x372 x1122 96) (x372 x892 96))))
(assert (= (x372 x230 96) (x911 (x1675 40 20 (x372 x327 96) (x372 x230 96)))))
(assert (=> (>= 10000 (x372 x728 96)) (= 0 (x377 (x372 x728 96)))))
(assert (x800 x1587))
(assert (= x1396 (and x1357 (not x1850))))
(assert (=> (= x1827 0) (= 0 (div x1366 x1827))))
(assert (x800 x1908))
(assert (= (=> (and (or (and (not x1422) (and (< x69 x933) (= (x1262 (+ 20 x658)) x1350) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x69)) (= (x1262 (+ x69 32)) x658) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x69)) (= (* x899 79228162514264337593543950336) x1714) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x69)) (= (x1262 (+ x1350 20)) x933) (= 0 x1078) (= x1237 x934) (= x933 x164) (<= x69 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x69 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1237 (x1675 40 20 (x372 x1646 96) (x372 x1714 96))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x69) (= (* 79228162514264337593543950336 x566) x1646))) (and x1422 (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x69)) (= (* x566 79228162514264337593543950336) x22) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x69)) (= (x1262 (+ x69 32)) x1227) (= (x1262 (+ 20 x1227)) x1958) (<= x69 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x934 x1863) (< x69 x214) (not (= x69 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (x1262 (+ x1958 20)) x214) (= 1 x1078) (= (x1675 40 20 (x372 x1815 96) (x372 x22 96)) x1863) (= x1815 (* x899 79228162514264337593543950336)) (<= x69 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x164 x214) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x69)))) (= x1422 (> x566 x899))) x1807) x769))
(assert (x800 x140))
(assert (= x1056 (and x399 x1126)))
(assert (= (or x1597 x940) x1768))
(assert (x800 x198))
(assert (x800 x1314))
(assert (x800 x713))
(assert (x800 x1695))
(assert (x800 x1798))
(assert (= (x377 (x1675 40 20 (x372 x583 96) (x372 x253 96))) (x1675 40 20 (x372 x583 96) (x372 x253 96))))
(assert (=> (= 0 x228) (= (div x1038 x228) 0)))
(assert (= (and (not x1979) x39) x1857))
(assert (x800 x1260))
(assert (x800 x757))
(assert (= x863 (or x603 x818)))
(assert (x800 x1370))
(assert (x800 x13))
(assert (x261 x1267))
(assert (= 20 (x1006 (x1675 40 20 (x372 x417 96) (x372 x411 96)))))
(assert (= x908 (or x710 x408)))
(assert (= 40 (x485 (x1675 40 20 (x372 x728 96) (x372 x1327 96)))))
(assert (> (x1675 40 20 (x372 x1646 96) (x372 x1714 96)) 10000))
(assert (x800 x381))
(assert (= x341 (and (not x1600) x1228)))
(assert (x800 x1079))
(assert (x800 x1901))
(assert (= (or x536 x978) x1845))
(assert (= (x372 x277 96) (div x277 79228162514264337593543950336)))
(assert (< (x1938 64 x351 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1632 (=> (and (or (and x312 (= 0 x218)) (and (not x312) (and (= x218 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x597) (<= x1467 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x597 x1467)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x597) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1467))) 1 0)) (>= x1792 1) (= (div x1202 x447) x1185) (= x896 (div x596 (+ x1795 x1320))) (<= 1 x447) (= x1320 (+ 1000000000000000 x1514)) (= (div x1499 x1792) x1551) (= x597 (x560 (- x1185 x1320))) (= x1792 (+ x967 x896)) (>= 115792089237316195423571325291054828791733448040247995807669039 x1792) (= x447 (x1262 (+ x1551 x651))) (= x596 (mod (* x1320 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x104 x1551) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1202) (= x1499 (mod (* x896 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (<= 1 x124) (= (mod (* x707 x1514) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x692) (= x1467 (x560 (- x488 x1514))) (= (div x713 x1124) x1942) (= (mod (* x104 x1942) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1358) (= x124 (x1262 (+ x651 x1942))) (>= x466 1) (= x312 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1467) (and (> 100 x1467) (= true (<= x1467 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1262 (+ x967 x1438)) x1124) (>= x1124 1) (= x488 (div x1358 x124)) (= x1219 (x1262 (+ x74 x1011))) (= x466 (+ x1795 x1514)) (= (x372 x1219 1) x1514) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x466) (= x1438 (div x692 x466)) (= x713 (mod (* x1438 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x53)))
(assert (x1176 x826))
(assert (x1176 x217))
(assert (= (x372 x1835 1) (div x1835 2)))
(assert (= (x519 (x1938 64 x1339 6)) 6))
(assert (x800 x327))
(assert (=> (= 0 x1413) (= 0 (div x1691 x1413))))
(assert (x800 x296))
(assert (x800 x611))
(assert (= (and x1422 x1930) x985))
(assert (x800 x1024))
(assert (< (x1675 40 20 (x372 x263 96) (x372 x542 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1276 (or x931 x999)))
(assert (= (x372 x1162 96) (x911 (x1675 40 20 (x372 x1538 96) (x372 x1162 96)))))
(assert (x800 x925))
(assert (= (div x833 79228162514264337593543950336) (x372 x833 96)))
(assert (= 6 (x519 (x1938 64 x1086 6))))
(assert (= (and x734 (not x219)) x1127))
(assert (= (=> (and (or (and (and (= x1912 x967) (= x17 x44)) x1308) (and (and (= x17 x1912) (= x44 x967)) (not x1308))) (and (>= 340282366920938463463374607431768211455 x1912) (= (x375 x1020) x44) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1488) (>= 340282366920938463463374607431768211455 x44) (= x735 (x1262 (+ x1488 64))) (<= x1488 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1488)) (= (= x885 0) x1308) (> x735 x1488) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1488) (not (= x1488 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x1488 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x1912 (x989 x1020)) (= (x1938 64 x1824 6) x1020))) x1311) x1067))
(assert (= x717 (and x972 x821)))
(assert (= (x372 x1815 96) (x519 (x1675 40 20 (x372 x1815 96) (x372 x22 96)))))
(assert (x800 x1773))
(assert (not (x354 (x1675 40 20 (x372 x1400 96) (x372 x366 96)))))
(assert (= (x519 (x1675 40 20 (x372 x1355 96) (x372 x1772 96))) (x372 x1355 96)))
(assert (= 6 (x519 (x1938 64 x297 6))))
(assert (x800 x1331))
(assert (= (x372 x1400 96) (x519 (x1675 40 20 (x372 x1400 96) (x372 x366 96)))))
(assert (x800 x217))
(assert (x800 x446))
(assert (= (and x1357 x1850) x172))
(assert (x800 x1714))
(assert (=> (= x363 0) (= 0 (div x1009 x363))))
(assert (x800 x1404))
(assert (< 10000 (x1675 40 20 (x372 x1538 96) (x372 x1162 96))))
(assert (x800 x342))
(assert (x800 x1613))
(assert (x800 x956))
(assert (x800 x364))
(check-sat)
(exit)
