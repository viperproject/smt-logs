(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1039 () Int)
(declare-fun x892 () Int)
(declare-fun x2815 () Int)
(declare-fun x2416 () Int)
(declare-fun x2918 () Int)
(declare-fun x2691 () Bool)
(declare-fun x1431 () Int)
(declare-fun x501 () Bool)
(declare-fun x2747 () Int)
(declare-fun x1459 () Bool)
(declare-fun x838 () Int)
(declare-fun x1003 () Int)
(declare-fun x2669 () Int)
(declare-fun x500 () Int)
(declare-fun x452 (Int) Int)
(declare-fun x124 () Int)
(declare-fun x3098 () Int)
(declare-fun x3060 () Bool)
(declare-fun x2104 () Int)
(declare-fun x2203 () Int)
(declare-fun x2602 (Int) Int)
(declare-fun x1305 () Bool)
(declare-fun x2300 () Int)
(declare-fun x868 () Bool)
(declare-fun x1779 () Int)
(declare-fun x1404 () Int)
(declare-fun x558 () Int)
(declare-fun x2634 () Int)
(declare-fun x860 () Int)
(declare-fun x1482 () Int)
(declare-fun x1336 () Int)
(declare-fun x1049 () Int)
(declare-fun x746 () Int)
(declare-fun x1922 () Int)
(declare-fun x493 () Int)
(declare-fun x1772 () Int)
(declare-fun x2564 () Bool)
(declare-fun x1855 () Int)
(declare-fun x961 () Bool)
(declare-fun x2408 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x942 () Int)
(declare-fun x2743 () Bool)
(declare-fun x754 () Int)
(declare-fun x856 () Int)
(declare-fun x2326 () Int)
(declare-fun x825 () Int)
(declare-fun x1376 () Int)
(declare-fun x1614 () Int)
(declare-fun x537 () Int)
(declare-fun x2584 () Int)
(declare-fun x2632 () Int)
(declare-fun x1310 () Int)
(declare-fun x1524 () Int)
(declare-fun x425 () Bool)
(declare-fun x1402 () Int)
(declare-fun x1134 () Int)
(declare-fun x2407 () Int)
(declare-fun x2129 () Int)
(declare-fun x3035 () Int)
(declare-fun x697 () Bool)
(declare-fun x1390 () Int)
(declare-fun x3082 (Int Int Int Int) Int)
(declare-fun x1050 () Int)
(declare-fun x2311 () Int)
(declare-fun x1578 () Int)
(declare-fun x1269 () Int)
(declare-fun x3063 () Bool)
(declare-fun x216 () Int)
(declare-fun x1605 () Int)
(declare-fun x78 () Int)
(declare-fun x390 () Int)
(declare-fun x2654 () Int)
(declare-fun x1306 () Int)
(declare-fun x1734 () Int)
(declare-fun x1967 () Int)
(declare-fun x2324 () Int)
(declare-fun x3028 () Int)
(declare-fun x1445 () Int)
(declare-fun x1939 () Bool)
(declare-fun x705 () Bool)
(declare-fun x2228 () Int)
(declare-fun x490 () Int)
(declare-fun x2491 () Int)
(declare-fun x2880 () Int)
(declare-fun x440 () Int)
(declare-fun x617 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x1784 () Int)
(declare-fun x414 () Int)
(declare-fun x1182 () Int)
(declare-fun x1032 () Int)
(declare-fun x657 () Bool)
(declare-fun x1111 () Int)
(declare-fun x648 () Int)
(declare-fun x661 () Bool)
(declare-fun x3038 () Int)
(declare-fun x808 () Bool)
(declare-fun x1388 () Int)
(declare-fun x666 () Int)
(declare-fun x2271 () Int)
(declare-fun x2412 () Int)
(declare-fun x653 () Bool)
(declare-fun x2082 () Int)
(declare-fun x1508 () Bool)
(declare-fun x815 () Int)
(declare-fun x3099 () Int)
(declare-fun x1604 () Int)
(declare-fun x2307 () Int)
(declare-fun x2620 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1042 () Int)
(declare-fun x1704 () Int)
(declare-fun x2988 () Int)
(declare-fun x2613 () Int)
(declare-fun x211 () Int)
(declare-fun x2579 () Int)
(declare-fun x1128 () Int)
(declare-fun x1506 () Int)
(declare-fun x1475 () Int)
(declare-fun x2394 () Bool)
(declare-fun x828 () Bool)
(declare-fun x788 () Int)
(declare-fun x1046 () Int)
(declare-fun x2667 () Int)
(declare-fun x1708 () Bool)
(declare-fun x605 () Int)
(declare-fun x995 () Int)
(declare-fun x542 () Int)
(declare-fun x2430 () Int)
(declare-fun x1830 () Int)
(declare-fun x94 () Int)
(declare-fun x313 (Int) Int)
(declare-fun x2117 () Int)
(declare-fun x711 () Int)
(declare-fun x743 () Int)
(declare-fun x1070 () Int)
(declare-fun x2054 () Int)
(declare-fun x247 () Int)
(declare-fun x1142 () Int)
(declare-fun x2202 () Bool)
(declare-fun x41 () Int)
(declare-fun x1037 () Int)
(declare-fun x827 () Int)
(declare-fun x350 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1823 () Int)
(declare-fun x779 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x405 () Int)
(declare-fun x2456 () Int)
(declare-fun x1988 () Int)
(declare-fun x1595 () Bool)
(declare-fun x621 () Bool)
(declare-fun x907 () Int)
(declare-fun x1018 () Int)
(declare-fun x2177 () Int)
(declare-fun x2160 () Int)
(declare-fun x270 () Int)
(declare-fun x3017 () Int)
(declare-fun x1957 () Bool)
(declare-fun x470 () Int)
(declare-fun x1554 () Bool)
(declare-fun x881 () Int)
(declare-fun x2727 () Bool)
(declare-fun x529 () Int)
(declare-fun x2777 () Int)
(declare-fun x96 () Int)
(declare-fun x1316 () Bool)
(declare-fun x2871 () Int)
(declare-fun x469 () Int)
(declare-fun x1255 () Int)
(declare-fun x2279 () Int)
(declare-fun x2322 () Int)
(declare-fun x2193 () Int)
(declare-fun x2853 () Int)
(declare-fun x768 () Int)
(declare-fun x2097 () Int)
(declare-fun x456 () Bool)
(declare-fun x221 () Int)
(declare-fun x1518 () Int)
(declare-fun x2013 () Int)
(declare-fun x1923 () Bool)
(declare-fun x2036 () Int)
(declare-fun x1495 () Int)
(declare-fun x48 () Int)
(declare-fun x1362 () Int)
(declare-fun x2024 () Bool)
(declare-fun x738 () Bool)
(declare-fun x1889 () Int)
(declare-fun x2484 () Int)
(declare-fun x1831 () Int)
(declare-fun x1522 () Int)
(declare-fun x2864 () Int)
(declare-fun x2753 () Int)
(declare-fun x2540 () Int)
(declare-fun x169 () Int)
(declare-fun x3029 () Int)
(declare-fun x770 () Int)
(declare-fun x2090 () Int)
(declare-fun x1318 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x757 () Int)
(declare-fun x2866 () Bool)
(declare-fun x560 () Int)
(declare-fun x801 () Int)
(declare-fun x1885 () Int)
(declare-fun x1853 () Bool)
(declare-fun x997 () Bool)
(declare-fun x57 () Int)
(declare-fun x434 () Int)
(declare-fun x1915 () Bool)
(declare-fun x2318 () Int)
(declare-fun x1178 () Bool)
(declare-fun x944 () Int)
(declare-fun x2462 () Bool)
(declare-fun x1774 () Int)
(declare-fun x2713 () Int)
(declare-fun x2675 () Int)
(declare-fun x1234 () Bool)
(declare-fun x2451 () Bool)
(declare-fun x859 () Int)
(declare-fun x1868 () Bool)
(declare-fun x874 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x2771 () Int)
(declare-fun x438 () Int)
(declare-fun x1793 () Int)
(declare-fun x1340 () Int)
(declare-fun x636 () Int)
(declare-fun x451 () Int)
(declare-fun x1656 () Bool)
(declare-fun x229 () Int)
(declare-fun x1052 () Bool)
(declare-fun x2834 () Int)
(declare-fun x376 () Bool)
(declare-fun x3023 () Int)
(declare-fun x2644 () Int)
(declare-fun x981 () Int)
(declare-fun x785 () Int)
(declare-fun x471 () Int)
(declare-fun x3088 () Bool)
(declare-fun x2887 () Int)
(declare-fun x1680 () Int)
(declare-fun x3051 () Int)
(declare-fun x2986 () Bool)
(declare-fun x2396 () Int)
(declare-fun x2140 () Int)
(declare-fun x2895 () Int)
(declare-fun x2519 () Int)
(declare-fun x1668 () Bool)
(declare-fun x747 () Bool)
(declare-fun x2006 () Int)
(declare-fun x632 () Int)
(declare-fun x358 () Int)
(declare-fun x284 () Bool)
(declare-fun x2597 () Int)
(declare-fun x3010 () Int)
(declare-fun x2784 () Int)
(declare-fun x2238 () Int)
(declare-fun x1137 () Bool)
(declare-fun x955 () Int)
(declare-fun x7 () Int)
(declare-fun x1631 () Int)
(declare-fun x495 () Int)
(declare-fun x2212 () Int)
(declare-fun x2084 () Int)
(declare-fun x1114 () Bool)
(declare-fun x1209 () Int)
(declare-fun x302 () Int)
(declare-fun x2135 () Int)
(declare-fun x855 () Int)
(declare-fun x186 () Int)
(declare-fun x1438 () Int)
(declare-fun x1683 () Int)
(declare-fun x8 () Int)
(declare-fun x1451 () Int)
(declare-fun x957 () Int)
(declare-fun x1264 () Int)
(declare-fun x1148 () Int)
(declare-fun x756 () Int)
(declare-fun x1534 () Int)
(declare-fun x1257 () Bool)
(declare-fun x1747 () Int)
(declare-fun x178 () Int)
(declare-fun x696 () Bool)
(declare-fun x2876 () Int)
(declare-fun x448 () Int)
(declare-fun x1842 () Int)
(declare-fun x2233 () Int)
(declare-fun x1645 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1267 () Int)
(declare-fun x847 () Int)
(declare-fun x2712 () Bool)
(declare-fun x1570 () Int)
(declare-fun x2449 () Int)
(declare-fun x2476 () Int)
(declare-fun x1526 () Int)
(declare-fun x983 () Int)
(declare-fun x1807 () Int)
(declare-fun x895 () Int)
(declare-fun x1302 () Int)
(declare-fun x970 () Bool)
(declare-fun x2923 () Int)
(declare-fun x2073 () Int)
(declare-fun x1213 () Int)
(declare-fun x513 () Int)
(declare-fun x101 () Int)
(declare-fun x1575 () Bool)
(declare-fun x161 () Int)
(declare-fun x1721 () Int)
(declare-fun x1296 () Bool)
(declare-fun x1584 () Int)
(declare-fun x2633 () Int)
(declare-fun x1127 () Int)
(declare-fun x1272 () Int)
(declare-fun x919 () Int)
(declare-fun x2320 () Int)
(declare-fun x2607 () Int)
(declare-fun x841 () Int)
(declare-fun x806 () Int)
(declare-fun x755 () Int)
(declare-fun x2240 () Bool)
(declare-fun x2281 () Int)
(declare-fun x69 () Int)
(declare-fun x2204 () Int)
(declare-fun x972 () Int)
(declare-fun x719 () Int)
(declare-fun x66 () Int)
(declare-fun x858 (Int Int) Int)
(declare-fun x233 () Bool)
(declare-fun x1247 () Int)
(declare-fun x1386 () Int)
(declare-fun x2585 () Int)
(declare-fun x2278 () Int)
(declare-fun x2363 () Int)
(declare-fun x1886 () Int)
(declare-fun x2397 () Int)
(declare-fun x1159 (Int Int Int) Int)
(declare-fun x880 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x918 () Int)
(declare-fun x2810 () Int)
(declare-fun x2835 () Bool)
(declare-fun x3056 () Int)
(declare-fun x2218 () Bool)
(declare-fun x1154 () Int)
(declare-fun x2022 () Bool)
(declare-fun x839 () Int)
(declare-fun x2075 () Int)
(declare-fun x198 () Int)
(declare-fun x3068 () Int)
(declare-fun x2251 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x3046 () Int)
(declare-fun x2837 () Int)
(declare-fun x1806 () Bool)
(declare-fun x1275 () Int)
(declare-fun x394 () Int)
(declare-fun x1927 () Int)
(declare-fun x179 () Bool)
(declare-fun x32 () Int)
(declare-fun x600 () Bool)
(declare-fun x710 () Int)
(declare-fun x1330 () Bool)
(declare-fun x151 () Int)
(declare-fun x554 () Bool)
(declare-fun x2434 () Int)
(declare-fun x2157 () Int)
(declare-fun x1824 () Int)
(declare-fun x1579 () Int)
(declare-fun x953 () Int)
(declare-fun x2153 () Bool)
(declare-fun x566 () Int)
(declare-fun x2023 () Int)
(declare-fun x2843 () Int)
(declare-fun x2431 () Int)
(declare-fun x2315 () Int)
(declare-fun x29 () Int)
(declare-fun x2900 () Bool)
(declare-fun x2883 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x1345 () Int)
(declare-fun x668 () Int)
(declare-fun x1131 () Int)
(declare-fun x1192 () Int)
(declare-fun x1977 () Int)
(declare-fun x1608 () Int)
(declare-fun x316 () Int)
(declare-fun x540 () Bool)
(declare-fun x2615 () Int)
(declare-fun x1561 () Int)
(declare-fun x292 () Bool)
(declare-fun x1659 () Int)
(declare-fun x3075 () Bool)
(declare-fun x1812 () Int)
(declare-fun x2425 () Int)
(declare-fun x3033 () Int)
(declare-fun x368 () Int)
(declare-fun x463 () Bool)
(declare-fun x484 () Bool)
(declare-fun x572 () Int)
(declare-fun x479 () Int)
(declare-fun x2367 () Int)
(declare-fun x68 () Int)
(declare-fun x2928 () Int)
(declare-fun x1450 () Int)
(declare-fun x1124 () Int)
(declare-fun x199 () Bool)
(declare-fun x737 () Int)
(declare-fun x1322 () Int)
(declare-fun x1314 () Int)
(declare-fun x1799 () Int)
(declare-fun x2952 () Int)
(declare-fun x559 () Int)
(declare-fun x2701 () Int)
(declare-fun x123 () Int)
(declare-fun x2214 () Bool)
(declare-fun x602 () Bool)
(declare-fun x2663 () Int)
(declare-fun x2016 () Bool)
(declare-fun x464 () Bool)
(declare-fun x2294 () Int)
(declare-fun x1084 () Int)
(declare-fun x2995 () Int)
(declare-fun x2225 () Int)
(declare-fun x1635 () Int)
(declare-fun x1428 () Int)
(declare-fun x1256 () Int)
(declare-fun x1319 () Bool)
(declare-fun x730 () Bool)
(declare-fun x963 () Bool)
(declare-fun x700 () Bool)
(declare-fun x1232 () Int)
(declare-fun x105 () Int)
(declare-fun x518 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x2465 () Int)
(declare-fun x2961 () Bool)
(declare-fun x1724 () Int)
(declare-fun x2795 () Int)
(declare-fun x1864 () Int)
(declare-fun x2495 () Int)
(declare-fun x2241 () Int)
(declare-fun x826 () Bool)
(declare-fun x1041 () Int)
(declare-fun x2446 () Bool)
(declare-fun x3079 () Int)
(declare-fun x309 () Int)
(declare-fun x802 () Int)
(declare-fun x2191 () Int)
(declare-fun x550 () Int)
(declare-fun x1117 () Int)
(declare-fun x3081 () Int)
(declare-fun x2267 () Int)
(declare-fun x1421 () Int)
(declare-fun x982 () Int)
(declare-fun x366 () Int)
(declare-fun x811 () Bool)
(declare-fun x1930 () Int)
(declare-fun x2661 () Int)
(declare-fun x925 () Bool)
(declare-fun x2955 () Int)
(declare-fun x1757 () Int)
(declare-fun x2582 () Int)
(declare-fun x1681 () Int)
(declare-fun x780 () Int)
(declare-fun x3014 () Bool)
(declare-fun x138 () Int)
(declare-fun x3086 () Int)
(declare-fun x336 () Int)
(declare-fun x144 () Int)
(declare-fun x946 () Int)
(declare-fun x213 () Int)
(declare-fun x3001 () Bool)
(declare-fun x2899 () Int)
(declare-fun x935 () Int)
(declare-fun x1149 () Int)
(declare-fun x664 () Int)
(declare-fun x3039 () Bool)
(declare-fun x1240 () Int)
(declare-fun x2323 () Bool)
(declare-fun x286 () Bool)
(declare-fun x499 () Int)
(declare-fun x2766 () Bool)
(declare-fun x3071 () Int)
(declare-fun x2525 () Bool)
(declare-fun x111 () Int)
(declare-fun x721 () Bool)
(declare-fun x857 () Int)
(declare-fun x3041 () Int)
(declare-fun x893 () Int)
(declare-fun x2312 () Int)
(declare-fun x2256 () Int)
(declare-fun x1233 () Bool)
(declare-fun x1633 () Int)
(declare-fun x2031 () Int)
(declare-fun x214 () Int)
(declare-fun x441 () Int)
(declare-fun x193 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x879 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x1884 () Int)
(declare-fun x209 () Int)
(declare-fun x1700 () Int)
(declare-fun x2729 () Bool)
(declare-fun x1443 () Int)
(declare-fun x2881 () Int)
(declare-fun x2418 () Int)
(declare-fun x1611 () Int)
(declare-fun x581 () Int)
(declare-fun x1648 () Int)
(declare-fun x2176 () Int)
(declare-fun x1171 () Int)
(declare-fun x2357 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x1828 () Int)
(declare-fun x2849 () Int)
(declare-fun x1013 () Bool)
(declare-fun x2913 () Int)
(declare-fun x1580 () Int)
(declare-fun x310 () Int)
(declare-fun x607 () Int)
(declare-fun x1805 () Bool)
(declare-fun x152 () Int)
(declare-fun x1601 () Bool)
(declare-fun x2330 () Int)
(declare-fun x3076 () Int)
(declare-fun x864 () Int)
(declare-fun x2489 () Int)
(declare-fun x1472 () Int)
(declare-fun x1073 () Int)
(declare-fun x720 () Int)
(declare-fun x255 () Int)
(declare-fun x877 () Int)
(declare-fun x979 () Int)
(declare-fun x3100 () Int)
(declare-fun x2612 () Int)
(declare-fun x128 () Int)
(declare-fun x1537 () Int)
(declare-fun x1847 () Bool)
(declare-fun x1785 () Int)
(declare-fun x373 () Int)
(declare-fun x265 () Bool)
(declare-fun x2169 () Int)
(declare-fun x1366 () Bool)
(declare-fun x119 () Bool)
(declare-fun x681 () Int)
(declare-fun x2288 () Int)
(declare-fun x3103 () Int)
(declare-fun x798 () Int)
(declare-fun x162 () Bool)
(declare-fun x934 () Int)
(declare-fun x984 () Bool)
(declare-fun x422 () Int)
(declare-fun x1759 () Int)
(declare-fun x2935 () Int)
(declare-fun x2390 () Int)
(declare-fun x2699 () Int)
(declare-fun x3094 () Int)
(declare-fun x1435 () Int)
(declare-fun x2130 () Int)
(declare-fun x2981 () Int)
(declare-fun x2543 () Int)
(declare-fun x1100 () Int)
(declare-fun x1487 () Int)
(declare-fun x2868 () Int)
(declare-fun x1552 () Int)
(declare-fun x1287 () Int)
(declare-fun x549 () Int)
(declare-fun x1389 () Int)
(declare-fun x1341 () Int)
(declare-fun x2139 () Int)
(declare-fun x1871 () Int)
(declare-fun x2522 () Bool)
(declare-fun x481 () Int)
(declare-fun x2991 () Bool)
(declare-fun x2911 (Int) Int)
(declare-fun x2789 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x589 () Int)
(declare-fun x200 () Bool)
(declare-fun x329 () Bool)
(declare-fun x967 () Int)
(declare-fun x1856 () Int)
(declare-fun x3087 () Int)
(declare-fun x2192 () Int)
(declare-fun x184 () Int)
(declare-fun x33 () Bool)
(declare-fun x2079 () Int)
(declare-fun x2071 () Bool)
(declare-fun x1900 () Int)
(declare-fun x498 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x42 () Int)
(declare-fun x1951 () Int)
(declare-fun x1827 () Int)
(declare-fun x2091 () Int)
(declare-fun x1953 () Int)
(declare-fun x2235 () Int)
(declare-fun x1268 () Int)
(declare-fun x904 () Int)
(declare-fun x149 () Bool)
(declare-fun x3055 () Int)
(declare-fun x2705 () Int)
(declare-fun x1175 () Int)
(declare-fun x1093 () Int)
(declare-fun x514 () Int)
(declare-fun x624 () Int)
(declare-fun x3008 () Int)
(declare-fun x614 () Int)
(declare-fun x733 () Int)
(declare-fun x1135 () Int)
(declare-fun x2380 () Int)
(declare-fun x1222 () Bool)
(declare-fun x741 () Int)
(declare-fun x1974 () Bool)
(declare-fun x1694 () Int)
(declare-fun x728 () Int)
(declare-fun x2785 () Bool)
(declare-fun x2426 () Int)
(declare-fun x2102 () Int)
(declare-fun x295 () Int)
(declare-fun x736 () Int)
(declare-fun x2750 () Int)
(declare-fun x2063 () Bool)
(declare-fun x2610 () Int)
(declare-fun x3119 () Int)
(declare-fun x2892 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x104 () Int)
(declare-fun x1914 () Int)
(declare-fun x1179 () Int)
(declare-fun x2377 () Int)
(declare-fun x673 () Int)
(declare-fun x1346 () Int)
(declare-fun x775 () Int)
(declare-fun x1099 () Int)
(declare-fun x401 () Int)
(declare-fun x662 () Int)
(declare-fun x2365 () Int)
(declare-fun x563 () Int)
(declare-fun x709 () Int)
(declare-fun x2933 () Int)
(declare-fun x2698 () Int)
(declare-fun x2862 () Int)
(declare-fun x784 () Int)
(declare-fun x1669 () Bool)
(declare-fun x2788 () Int)
(declare-fun x3105 () Int)
(declare-fun x2759 () Bool)
(declare-fun x2260 () Int)
(declare-fun x2724 () Bool)
(declare-fun x2263 () Int)
(declare-fun x2671 () Bool)
(declare-fun x2447 () Int)
(declare-fun x2842 () Int)
(declare-fun x367 () Int)
(declare-fun x182 () Int)
(declare-fun x761 () Bool)
(declare-fun x1479 () Int)
(declare-fun x2782 () Int)
(declare-fun x644 () Int)
(declare-fun x1743 () Bool)
(declare-fun x2197 () Int)
(declare-fun x2069 () Bool)
(declare-fun x180 () Int)
(declare-fun x582 () Int)
(declare-fun x1364 () Int)
(declare-fun x2151 () Bool)
(declare-fun x2912 () Int)
(declare-fun x352 () Int)
(declare-fun x1903 () Int)
(declare-fun x2723 () Bool)
(declare-fun x1531 () Int)
(declare-fun x1095 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x2622 () Bool)
(declare-fun x2569 () Bool)
(declare-fun x2706 () Int)
(declare-fun x3121 () Int)
(declare-fun x615 () Bool)
(declare-fun x497 () Int)
(declare-fun x2199 () Int)
(declare-fun x1849 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x2817 () Int)
(declare-fun x428 () Int)
(declare-fun x2687 () Int)
(declare-fun x1550 () Int)
(declare-fun x1184 () Bool)
(declare-fun x603 () Int)
(declare-fun x2141 () Bool)
(declare-fun x2652 () Bool)
(declare-fun x102 () Int)
(declare-fun x2679 () Int)
(declare-fun x585 () Int)
(declare-fun x1848 () Int)
(declare-fun x2150 () Bool)
(declare-fun x2062 () Int)
(declare-fun x285 () Int)
(declare-fun x308 () Int)
(declare-fun x245 () Int)
(declare-fun x2741 () Bool)
(declare-fun x1919 () Int)
(declare-fun x1457 () Int)
(declare-fun x609 () Int)
(declare-fun x502 () Int)
(declare-fun x120 () Int)
(declare-fun x846 () Int)
(declare-fun x1725 () Bool)
(declare-fun x503 () Int)
(declare-fun x222 () Int)
(declare-fun x1961 () Int)
(declare-fun x1055 () Int)
(declare-fun x1112 () Int)
(declare-fun x1764 () Int)
(declare-fun x1413 () Int)
(declare-fun x1970 () Int)
(declare-fun x2907 () Int)
(declare-fun x306 () Int)
(declare-fun x2906 () Int)
(declare-fun x290 () Int)
(declare-fun x633 () Int)
(declare-fun x2526 () Int)
(declare-fun x2684 () Int)
(declare-fun x1071 () Int)
(declare-fun x1895 () Int)
(declare-fun x164 () Bool)
(declare-fun x637 () Int)
(declare-fun x1730 () Int)
(declare-fun x304 () Int)
(declare-fun x2587 () Int)
(declare-fun x643 () Int)
(declare-fun x2282 (Int Int Int Int Int) Int)
(declare-fun x684 () Int)
(declare-fun x39 () Int)
(declare-fun x3118 () Int)
(declare-fun x252 () Int)
(declare-fun x411 () Bool)
(declare-fun x915 () Int)
(declare-fun x1200 () Int)
(declare-fun x750 () Bool)
(declare-fun x489 () Bool)
(declare-fun x940 () Int)
(declare-fun x3 () Bool)
(declare-fun x660 () Bool)
(declare-fun x93 () Int)
(declare-fun x1707 () Bool)
(declare-fun x618 () Int)
(declare-fun x1288 () Int)
(declare-fun x2268 () Int)
(declare-fun x1208 () Bool)
(declare-fun x325 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x508 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x520 () Int)
(declare-fun x2621 () Bool)
(declare-fun x2444 () Int)
(declare-fun x2927 () Int)
(declare-fun x2524 () Int)
(declare-fun x1461 () Bool)
(declare-fun x792 () Int)
(declare-fun x1024 () Int)
(declare-fun x2683 () Bool)
(declare-fun x1979 (Int) Int)
(declare-fun x280 () Int)
(declare-fun x1328 (Int) Int)
(declare-fun x53 () Bool)
(declare-fun x170 () Bool)
(declare-fun x759 () Int)
(declare-fun x1752 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x2437 () Int)
(declare-fun x941 () Bool)
(declare-fun x1034 () Int)
(declare-fun x370 () Bool)
(declare-fun x3123 () Bool)
(declare-fun x2854 () Int)
(declare-fun x1573 () Int)
(declare-fun x1548 () Int)
(declare-fun x1452 () Int)
(declare-fun x594 () Int)
(declare-fun x2875 () Int)
(declare-fun x766 () Int)
(declare-fun x15 () Bool)
(declare-fun x2257 () Int)
(declare-fun x1139 () Int)
(declare-fun x583 () Int)
(declare-fun x2658 () Int)
(declare-fun x1022 () Int)
(declare-fun x23 () Int)
(declare-fun x2688 () Bool)
(declare-fun x2716 () Int)
(declare-fun x2645 () Int)
(declare-fun x2523 () Bool)
(declare-fun x2686 () Int)
(declare-fun x2234 () Bool)
(declare-fun x1540 () Int)
(declare-fun x2905 () Int)
(declare-fun x2803 () Bool)
(declare-fun x794 () Int)
(declare-fun x593 () Int)
(declare-fun x375 () Int)
(declare-fun x1655 () Bool)
(declare-fun x1571 () Int)
(declare-fun x377 () Int)
(declare-fun x2596 () Int)
(declare-fun x3062 () Int)
(declare-fun x1875 () Bool)
(declare-fun x2575 () Int)
(declare-fun x1115 () Int)
(declare-fun x2423 () Int)
(declare-fun x1962 () Int)
(declare-fun x1910 () Int)
(declare-fun x2007 () Int)
(declare-fun x453 () Int)
(declare-fun x2989 () Int)
(declare-fun x2885 () Int)
(declare-fun x315 () Bool)
(declare-fun x993 () Int)
(declare-fun x2956 () Int)
(declare-fun x1228 () Bool)
(declare-fun x2681 () Bool)
(declare-fun x1713 () Int)
(declare-fun x2977 () Bool)
(declare-fun x647 () Bool)
(declare-fun x2827 () Int)
(declare-fun x604 () Int)
(declare-fun x1699 () Int)
(declare-fun x10 () Int)
(declare-fun x867 () Int)
(declare-fun x1248 () Int)
(declare-fun x2159 () Int)
(declare-fun x449 () Int)
(declare-fun x1672 () Int)
(declare-fun x872 () Int)
(declare-fun x1533 () Int)
(declare-fun x2910 () Int)
(declare-fun x574 () Int)
(declare-fun x2565 () Int)
(declare-fun x909 () Int)
(declare-fun x530 () Int)
(declare-fun x1665 () Bool)
(declare-fun x136 () Bool)
(declare-fun x2386 () Int)
(declare-fun x154 () Int)
(declare-fun x954 () Bool)
(declare-fun x98 () Int)
(declare-fun x335 () Bool)
(declare-fun x2331 () Int)
(declare-fun x1711 () Bool)
(declare-fun x1947 () Int)
(declare-fun x1090 () Int)
(declare-fun x1719 () Int)
(declare-fun x146 () Int)
(declare-fun x2113 () Bool)
(declare-fun x112 () Bool)
(declare-fun x1251 () Int)
(declare-fun x2967 () Bool)
(declare-fun x2982 () Int)
(declare-fun x1907 () Int)
(declare-fun x2930 () Int)
(declare-fun x398 () Int)
(declare-fun x3128 () Bool)
(declare-fun x890 () Bool)
(declare-fun x599 () Int)
(declare-fun x2017 () Int)
(declare-fun x1201 () Int)
(declare-fun x1585 () Int)
(declare-fun x2387 () Int)
(declare-fun x2725 () Int)
(declare-fun x901 () Int)
(declare-fun x1276 () Int)
(declare-fun x1406 () Int)
(declare-fun x421 () Int)
(declare-fun x2337 () Int)
(declare-fun x1165 () Int)
(declare-fun x818 () Int)
(declare-fun x1410 () Int)
(declare-fun x3077 () Int)
(declare-fun x2690 () Bool)
(declare-fun x2846 () Int)
(declare-fun x2355 () Int)
(declare-fun x551 () Int)
(declare-fun x1295 () Int)
(declare-fun x2136 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1746 () Bool)
(declare-fun x1980 () Int)
(declare-fun x1543 () Bool)
(declare-fun x2325 () Int)
(declare-fun x2599 () Int)
(declare-fun x3032 () Int)
(declare-fun x539 () Int)
(declare-fun x1891 () Int)
(declare-fun x1536 () Int)
(declare-fun x1557 () Int)
(declare-fun x2811 () Int)
(declare-fun x2859 () Int)
(declare-fun x203 () Bool)
(declare-fun x1950 () Int)
(declare-fun x1176 () Int)
(declare-fun x1380 () Int)
(declare-fun x1698 () Int)
(declare-fun x796 () Int)
(declare-fun x1102 () Int)
(declare-fun x2520 () Int)
(declare-fun x343 () Bool)
(declare-fun x1425 () Int)
(declare-fun x2442 () Int)
(declare-fun x1059 () Int)
(declare-fun x1382 () Int)
(declare-fun x249 () Int)
(declare-fun x2586 () Int)
(declare-fun x248 () Int)
(declare-fun x1588 () Int)
(declare-fun x2805 () Bool)
(declare-fun x2179 () Bool)
(declare-fun x1877 () Int)
(declare-fun x159 () Int)
(declare-fun x1969 () Int)
(declare-fun x1285 () Int)
(declare-fun x2823 () Int)
(declare-fun x1130 () Bool)
(declare-fun x1692 () Int)
(declare-fun x2962 () Int)
(declare-fun x1490 () Int)
(declare-fun x18 () Int)
(declare-fun x1237 () Int)
(declare-fun x1986 () Bool)
(declare-fun x2170 () Int)
(declare-fun x328 () Int)
(declare-fun x516 () Int)
(declare-fun x212 () Int)
(declare-fun x2696 () Bool)
(declare-fun x1718 () Int)
(declare-fun x2369 () Int)
(declare-fun x969 () Int)
(declare-fun x1036 () Bool)
(declare-fun x260 () Int)
(declare-fun x2393 () Int)
(declare-fun x973 () Bool)
(declare-fun x1243 () Int)
(declare-fun x2858 () Int)
(declare-fun x1525 () Int)
(declare-fun x1427 () Int)
(declare-fun x2920 () Int)
(declare-fun x2338 () Int)
(declare-fun x1245 () Bool)
(declare-fun x2590 () Int)
(declare-fun x2914 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x2674 () Int)
(declare-fun x2385 () Int)
(declare-fun x2954 () Int)
(declare-fun x568 () Int)
(declare-fun x3015 () Int)
(declare-fun x1323 () Int)
(declare-fun x3078 () Int)
(declare-fun x686 () Int)
(declare-fun x1881 () Bool)
(declare-fun x137 () Int)
(declare-fun x567 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x1422 () Int)
(declare-fun x330 () Int)
(declare-fun x1214 () Int)
(declare-fun x646 () Int)
(declare-fun x2317 () Bool)
(declare-fun x884 () Bool)
(declare-fun x49 () Int)
(declare-fun x338 () Int)
(declare-fun x45 () Int)
(declare-fun x2664 () Int)
(declare-fun x1125 () Int)
(declare-fun x2379 () Int)
(declare-fun x1971 () Int)
(declare-fun x118 () Int)
(declare-fun x1307 () Int)
(declare-fun x2109 () Int)
(declare-fun x190 () Bool)
(declare-fun x2581 () Int)
(declare-fun x2814 () Int)
(declare-fun x2968 () Int)
(declare-fun x2879 () Int)
(declare-fun x1791 () Int)
(declare-fun x2738 () Bool)
(declare-fun x1697 () Int)
(declare-fun x2435 () Int)
(declare-fun x2822 (Int) Int)
(declare-fun x1212 () Int)
(declare-fun x591 () Int)
(declare-fun x2794 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x1942 () Int)
(declare-fun x2886 () Int)
(declare-fun x1879 () Int)
(declare-fun x1463 () Int)
(declare-fun x2818 () Int)
(declare-fun x55 () Bool)
(declare-fun x548 () Int)
(declare-fun x2932 () Int)
(declare-fun x1703 () Int)
(declare-fun x2095 () Int)
(declare-fun x372 () Int)
(declare-fun x797 () Int)
(declare-fun x2471 () Int)
(declare-fun x795 () Int)
(declare-fun x791 () Int)
(declare-fun x2512 () Int)
(declare-fun x735 () Int)
(declare-fun x1063 () Int)
(declare-fun x2409 () Int)
(declare-fun x1469 () Int)
(declare-fun x2021 () Int)
(declare-fun x2774 () Int)
(declare-fun x1929 () Int)
(declare-fun x2515 () Int)
(declare-fun x1172 () Int)
(declare-fun x475 () Int)
(declare-fun x1000 () Bool)
(declare-fun x844 () Bool)
(declare-fun x2106 () Int)
(declare-fun x1769 () Int)
(declare-fun x3116 () Int)
(declare-fun x2237 () Bool)
(declare-fun x547 () Int)
(declare-fun x2537 () Int)
(declare-fun x3064 () Int)
(declare-fun x2901 () Int)
(declare-fun x1790 () Int)
(declare-fun x2492 () Int)
(declare-fun x1083 () Bool)
(declare-fun x781 () Int)
(declare-fun x1138 () Int)
(declare-fun x175 () Int)
(declare-fun x2987 () Int)
(declare-fun x2402 () Bool)
(declare-fun x2173 () Int)
(declare-fun x532 () Int)
(declare-fun x2103 () Int)
(declare-fun x476 () Int)
(declare-fun x1077 () Int)
(declare-fun x765 () Bool)
(declare-fun x691 () Int)
(declare-fun x2535 () Bool)
(declare-fun x1861 () Int)
(declare-fun x2443 () Int)
(declare-fun x1815 () Bool)
(declare-fun x1527 () Int)
(declare-fun x1205 () Int)
(declare-fun x450 () Bool)
(declare-fun x1448 () Int)
(declare-fun x1940 () Int)
(declare-fun x2200 () Bool)
(declare-fun x1731 () Int)
(declare-fun x665 () Int)
(declare-fun x2606 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x1738 () Int)
(declare-fun x1458 () Int)
(declare-fun x107 () Int)
(declare-fun x2647 () Int)
(declare-fun x2019 () Int)
(declare-fun x2186 () Int)
(declare-fun x2265 () Int)
(declare-fun x777 () Int)
(declare-fun x2898 () Int)
(declare-fun x207 () Int)
(declare-fun x2851 () Int)
(declare-fun x883 () Int)
(declare-fun x3009 () Int)
(declare-fun x1705 () Int)
(declare-fun x354 () Int)
(declare-fun x3104 () Int)
(declare-fun x945 () Bool)
(declare-fun x1301 () Int)
(declare-fun x2216 () Int)
(declare-fun x2697 () Int)
(declare-fun x2838 () Int)
(declare-fun x2127 () Int)
(declare-fun x938 () Bool)
(declare-fun x171 () Int)
(declare-fun x2195 () Bool)
(declare-fun x974 () Int)
(declare-fun x851 () Int)
(declare-fun x1567 () Int)
(declare-fun x1636 () Bool)
(declare-fun x1834 () Int)
(declare-fun x2168 () Int)
(declare-fun x303 () Int)
(declare-fun x3111 () Int)
(declare-fun x2205 () Int)
(declare-fun x2942 () Int)
(declare-fun x1030 () Int)
(declare-fun x882 () Bool)
(declare-fun x601 () Int)
(declare-fun x2703 () Int)
(declare-fun x380 () Int)
(declare-fun x2808 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1497 () Int)
(declare-fun x527 () Int)
(declare-fun x2902 () Int)
(declare-fun x715 () Int)
(declare-fun x2829 () Int)
(declare-fun x1753 (Int) Int)
(declare-fun x2755 () Int)
(declare-fun x1442 () Int)
(declare-fun x109 () Int)
(declare-fun x1716 () Bool)
(declare-fun x2089 () Int)
(declare-fun x1017 () Int)
(declare-fun x1558 () Bool)
(declare-fun x553 () Int)
(declare-fun x299 () Int)
(declare-fun x1678 () Int)
(declare-fun x2666 () Int)
(declare-fun x1882 () Int)
(declare-fun x2403 () Int)
(declare-fun x291 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x2532 () Int)
(declare-fun x1897 () Int)
(declare-fun x2651 () Int)
(declare-fun x1862 () Int)
(declare-fun x2459 () Int)
(declare-fun x1219 () Int)
(declare-fun x1794 () Int)
(declare-fun x1589 () Int)
(declare-fun x174 () Int)
(declare-fun x1565 () Int)
(declare-fun x2371 () Bool)
(declare-fun x586 () Int)
(declare-fun x3096 () Bool)
(declare-fun x748 () Int)
(declare-fun x267 () Int)
(declare-fun x1744 () Int)
(declare-fun x2614 () Int)
(declare-fun x663 () Int)
(declare-fun x2384 () Int)
(declare-fun x2361 () Int)
(declare-fun x474 () Int)
(declare-fun x1582 () Bool)
(declare-fun x704 () Bool)
(declare-fun x1207 () Int)
(declare-fun x2513 () Int)
(declare-fun x63 () Int)
(declare-fun x1775 () Int)
(declare-fun x1560 () Int)
(declare-fun x1639 () Int)
(declare-fun x1854 () Int)
(declare-fun x2745 () Int)
(declare-fun x2976 () Int)
(declare-fun x1921 () Int)
(declare-fun x2953 () Bool)
(declare-fun x2563 () Bool)
(declare-fun x381 () Int)
(declare-fun x1755 () Int)
(declare-fun x409 () Int)
(declare-fun x2999 () Bool)
(declare-fun x2100 () Int)
(declare-fun x1564 () Int)
(declare-fun x990 () Int)
(declare-fun x1797 () Bool)
(declare-fun x956 () Int)
(declare-fun x1332 () Int)
(declare-fun x2050 () Int)
(declare-fun x3110 () Bool)
(declare-fun x1230 () Int)
(declare-fun x3101 () Bool)
(declare-fun x262 () Bool)
(declare-fun x3026 () Int)
(declare-fun x2974 () Int)
(declare-fun x1106 () Int)
(declare-fun x1286 () Int)
(declare-fun x541 () Int)
(declare-fun x1263 () Int)
(declare-fun x1289 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x397 () Bool)
(declare-fun x1657 () Int)
(declare-fun x431 () Int)
(declare-fun x210 () Bool)
(declare-fun x1069 () Int)
(declare-fun x3122 () Bool)
(declare-fun x786 (Int) Int)
(declare-fun x1737 () Int)
(declare-fun x1317 () Int)
(declare-fun x402 () Int)
(declare-fun x1622 () Int)
(declare-fun x2243 () Int)
(declare-fun x2436 () Int)
(declare-fun x1709 () Int)
(declare-fun x612 () Int)
(declare-fun x158 () Int)
(declare-fun x2517 () Int)
(declare-fun x1841 () Int)
(declare-fun x1717 () Int)
(declare-fun x2715 () Bool)
(declare-fun x800 (Int) Bool)
(declare-fun x1674 () Int)
(declare-fun x2383 () Int)
(declare-fun x246 () Int)
(declare-fun x1353 () Int)
(declare-fun x2872 () Int)
(declare-fun x2646 () Int)
(declare-fun x333 () Int)
(declare-fun x2944 () Int)
(declare-fun x293 () Int)
(declare-fun x1027 () Int)
(declare-fun x1607 () Int)
(declare-fun x1056 () Bool)
(declare-fun x80 () Int)
(declare-fun x1851 () Bool)
(declare-fun x157 () Int)
(declare-fun x2656 () Int)
(declare-fun x769 () Int)
(declare-fun x2762 () Int)
(declare-fun x1819 () Int)
(declare-fun x2890 () Bool)
(declare-fun x608 () Int)
(declare-fun x312 () Int)
(declare-fun x2196 () Int)
(declare-fun x1491 () Int)
(declare-fun x1368 () Int)
(declare-fun x148 () Int)
(declare-fun x861 () Int)
(declare-fun x454 () Int)
(declare-fun x2163 () Int)
(declare-fun x2341 () Bool)
(declare-fun x2711 () Int)
(declare-fun x2735 () Int)
(declare-fun x1583 () Bool)
(declare-fun x525 () Int)
(declare-fun x639 () Int)
(declare-fun x19 () Int)
(declare-fun x197 () Int)
(declare-fun x2009 () Int)
(declare-fun x1673 () Int)
(declare-fun x2215 () Int)
(declare-fun x1015 () Int)
(declare-fun x1569 () Bool)
(declare-fun x1687 () Int)
(declare-fun x2554 () Int)
(declare-fun x384 () Int)
(declare-fun x238 () Int)
(declare-fun x1912 () Int)
(declare-fun x3004 () Int)
(declare-fun x2415 () Int)
(declare-fun x2296 () Bool)
(declare-fun x2728 () Int)
(declare-fun x1066 () Bool)
(declare-fun x2314 () Int)
(declare-fun x1121 () Int)
(declare-fun x2756 () Int)
(declare-fun x2309 () Bool)
(declare-fun x1446 () Int)
(declare-fun x2340 () Int)
(declare-fun x2433 () Int)
(declare-fun x2051 () Int)
(declare-fun x2573 () Int)
(declare-fun x1788 () Bool)
(declare-fun x3025 () Int)
(declare-fun x3054 () Bool)
(declare-fun x2414 () Int)
(declare-fun x3108 () Int)
(declare-fun x994 () Int)
(declare-fun x1872 () Int)
(declare-fun x1566 () Int)
(declare-fun x160 () Int)
(declare-fun x1553 () Bool)
(declare-fun x1136 () Int)
(declare-fun x651 () Bool)
(declare-fun x1339 () Int)
(declare-fun x424 () Int)
(declare-fun x2732 () Int)
(declare-fun x243 () Int)
(declare-fun x2058 () Int)
(declare-fun x2531 () Int)
(declare-fun x1297 () Int)
(declare-fun x1294 () Int)
(declare-fun x2398 () Int)
(declare-fun x1098 () Int)
(declare-fun x1097 () Int)
(declare-fun x2284 () Bool)
(declare-fun x3089 () Int)
(declare-fun x444 () Int)
(declare-fun x2718 () Int)
(declare-fun x52 () Bool)
(declare-fun x1771 () Int)
(declare-fun x20 () Int)
(declare-fun x2639 () Bool)
(declare-fun x1696 () Int)
(declare-fun x274 () Int)
(declare-fun x419 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x2624 () Bool)
(declare-fun x2813 () Int)
(declare-fun x1284 () Int)
(declare-fun x1572 () Int)
(declare-fun x206 () Bool)
(declare-fun x443 () Bool)
(declare-fun x2860 () Int)
(declare-fun x3102 () Int)
(declare-fun x1902 () Int)
(declare-fun x1076 () Int)
(declare-fun x2025 () Int)
(declare-fun x361 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x706 () Int)
(declare-fun x392 () Int)
(declare-fun x649 () Int)
(declare-fun x1002 () Int)
(declare-fun x445 () Bool)
(declare-fun x776 () Int)
(declare-fun x1187 () Int)
(declare-fun x2457 () Int)
(declare-fun x2174 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x1151 () Int)
(declare-fun x1195 () Bool)
(declare-fun x2044 () Int)
(declare-fun x108 () Int)
(declare-fun x509 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x698 () Int)
(declare-fun x2194 () Int)
(declare-fun x2903 () Bool)
(declare-fun x1850 () Int)
(declare-fun x2198 () Int)
(declare-fun x2821 () Int)
(declare-fun x996 () Int)
(declare-fun x2609 () Bool)
(declare-fun x1385 () Int)
(declare-fun x1350 () Int)
(declare-fun x1444 () Int)
(declare-fun x557 () Bool)
(declare-fun x2028 () Int)
(declare-fun x400 () Int)
(declare-fun x241 () Int)
(declare-fun x910 () Bool)
(declare-fun x36 () Int)
(declare-fun x129 () Int)
(declare-fun x2534 () Int)
(declare-fun x2979 () Int)
(declare-fun x504 () Int)
(declare-fun x968 () Int)
(declare-fun x1455 () Int)
(declare-fun x2850 () Int)
(declare-fun x677 () Bool)
(declare-fun x2844 () Int)
(declare-fun x1634 () Int)
(declare-fun x1157 () Bool)
(declare-fun x1426 () Int)
(declare-fun x829 () Bool)
(declare-fun x1732 () Int)
(declare-fun x2601 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x412 () Int)
(declare-fun x2360 () Bool)
(declare-fun x403 () Bool)
(declare-fun x342 () Int)
(declare-fun x753 () Int)
(declare-fun x1682 () Int)
(declare-fun x820 () Int)
(declare-fun x2629 () Int)
(declare-fun x2997 () Int)
(declare-fun x2132 () Int)
(declare-fun x2542 () Int)
(declare-fun x83 () Int)
(declare-fun x3045 () Int)
(declare-fun x88 () Bool)
(declare-fun x887 () Bool)
(declare-fun x1507 () Int)
(declare-fun x2404 () Int)
(declare-fun x1183 () Int)
(declare-fun x1043 () Int)
(declare-fun x410 () Int)
(declare-fun x912 () Int)
(declare-fun x365 () Int)
(declare-fun x1246 (Int) Int)
(declare-fun x1956 () Int)
(declare-fun x2500 () Bool)
(declare-fun x1836 () Int)
(declare-fun x337 () Int)
(declare-fun x1539 () Int)
(declare-fun x1816 () Int)
(declare-fun x894 () Int)
(declare-fun x2921 () Bool)
(declare-fun x40 () Int)
(declare-fun x256 () Int)
(declare-fun x3092 () Int)
(declare-fun x3000 () Int)
(declare-fun x2855 () Int)
(declare-fun x2786 () Bool)
(declare-fun x1299 () Int)
(declare-fun x1542 () Bool)
(declare-fun x555 () Int)
(declare-fun x332 () Int)
(declare-fun x268 () Int)
(declare-fun x327 () Int)
(declare-fun x2182 () Int)
(declare-fun x2002 () Int)
(declare-fun x2400 () Int)
(declare-fun x2965 () Int)
(declare-fun x931 () Int)
(declare-fun x2137 () Int)
(declare-fun x1586 () Int)
(declare-fun x1517 () Int)
(declare-fun x2511 () Int)
(declare-fun x783 () Bool)
(declare-fun x2072 () Int)
(declare-fun x1715 () Int)
(declare-fun x1555 () Int)
(declare-fun x2364 () Int)
(declare-fun x1758 () Int)
(declare-fun x629 () Int)
(declare-fun x488 () Int)
(declare-fun x2161 () Bool)
(declare-fun x2217 () Int)
(declare-fun x2313 () Bool)
(declare-fun x237 (Int) Int)
(declare-fun x695 () Int)
(declare-fun x242 () Int)
(declare-fun x486 () Bool)
(declare-fun x1852 () Int)
(declare-fun x1351 () Int)
(declare-fun x2220 () Int)
(declare-fun x1456 () Int)
(declare-fun x1616 () Int)
(declare-fun x1206 () Bool)
(declare-fun x2943 () Int)
(declare-fun x1702 () Int)
(declare-fun x2591 () Bool)
(declare-fun x2832 () Int)
(declare-fun x1811 () Int)
(declare-fun x2662 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x2882 () Bool)
(declare-fun x2064 () Int)
(declare-fun x65 () Int)
(declare-fun x2236 () Int)
(declare-fun x2618 () Bool)
(declare-fun x2208 () Int)
(declare-fun x2138 () Bool)
(declare-fun x2374 () Int)
(declare-fun x2909 () Int)
(declare-fun x620 () Int)
(declare-fun x1110 () Int)
(declare-fun x1326 () Bool)
(declare-fun x2481 () Int)
(declare-fun x2223 () Int)
(declare-fun x318 () Bool)
(declare-fun x1941 () Int)
(declare-fun x814 () Int)
(declare-fun x1620 () Int)
(declare-fun x2848 () Int)
(declare-fun x1164 () Int)
(declare-fun x28 () Int)
(declare-fun x3058 () Int)
(declare-fun x2678 () Int)
(declare-fun x1783 () Int)
(declare-fun x1860 () Bool)
(declare-fun x2819 () Int)
(declare-fun x1728 () Int)
(declare-fun x1016 () Int)
(declare-fun x2343 () Int)
(declare-fun x1968 () Int)
(declare-fun x1948 () Int)
(declare-fun x830 () Int)
(declare-fun x2392 () Int)
(declare-fun x1486 () Int)
(declare-fun x588 () Int)
(declare-fun x1577 () Bool)
(declare-fun x1649 () Int)
(declare-fun x2440 () Int)
(declare-fun x976 () Int)
(declare-fun x2148 () Bool)
(declare-fun x1480 () Int)
(declare-fun x2796 () Int)
(declare-fun x2761 () Int)
(declare-fun x2477 () Int)
(declare-fun x1684 () Bool)
(declare-fun x362 () Bool)
(declare-fun x231 () Int)
(declare-fun x334 () Int)
(declare-fun x2085 () Int)
(declare-fun x712 () Bool)
(declare-fun x2306 () Int)
(declare-fun x2560 () Int)
(declare-fun x163 () Int)
(declare-fun x1229 () Int)
(declare-fun x676 () Bool)
(declare-fun x865 () Int)
(declare-fun x531 () Int)
(declare-fun x1780 () Int)
(declare-fun x133 () Int)
(declare-fun x1058 () Int)
(declare-fun x911 () Bool)
(declare-fun x1393 () Int)
(declare-fun x3003 () Bool)
(declare-fun x2518 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x1529 () Int)
(declare-fun x406 () Int)
(declare-fun x3053 () Int)
(declare-fun x1198 () Int)
(declare-fun x1689 () Int)
(declare-fun x1313 () Int)
(declare-fun x1186 () Int)
(declare-fun x183 () Bool)
(declare-fun x1141 () Int)
(declare-fun x2544 () Bool)
(declare-fun x77 () Bool)
(declare-fun x46 () Int)
(declare-fun x2229 () Int)
(declare-fun x849 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1729 () Int)
(declare-fun x2792 () Int)
(declare-fun x655 () Int)
(declare-fun x1241 () Int)
(declare-fun x1544 () Int)
(declare-fun x2648 () Int)
(declare-fun x1005 () Int)
(declare-fun x2730 () Int)
(declare-fun x1068 () Bool)
(declare-fun x1503 () Int)
(declare-fun x3113 () Int)
(declare-fun x103 (Int) Int)
(declare-fun x82 () Int)
(declare-fun x1144 () Int)
(declare-fun x1236 () Int)
(declare-fun x2861 () Bool)
(declare-fun x1741 () Int)
(declare-fun x269 () Int)
(declare-fun x2904 () Int)
(declare-fun x110 () Int)
(declare-fun x1603 () Int)
(declare-fun x1062 () Int)
(declare-fun x1748 () Bool)
(declare-fun x2143 () Int)
(declare-fun x670 () Int)
(declare-fun x1494 () Int)
(declare-fun x988 () Int)
(declare-fun x810 () Int)
(declare-fun x2630 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1505 () Int)
(declare-fun x1337 () Bool)
(declare-fun x2247 () Int)
(declare-fun x1883 () Int)
(declare-fun x2800 () Bool)
(declare-fun x31 () Int)
(declare-fun x1568 () Int)
(declare-fun x790 () Int)
(declare-fun x2657 () Int)
(declare-fun x2080 () Int)
(declare-fun x356 () Bool)
(declare-fun x1471 (Int) Int)
(declare-fun x688 () Int)
(declare-fun x2839 () Bool)
(declare-fun x512 () Int)
(declare-fun x2155 () Int)
(declare-fun x1701 () Int)
(declare-fun x1814 (Int Int Int Int) Int)
(declare-fun x2889 () Int)
(declare-fun x2611 () Bool)
(declare-fun x215 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x986 () Bool)
(declare-fun x1835 () Int)
(declare-fun x134 () Int)
(declare-fun x430 () Int)
(declare-fun x1156 () Int)
(declare-fun x2937 () Int)
(declare-fun x2608 () Bool)
(declare-fun x562 () Bool)
(declare-fun x2530 () Int)
(declare-fun x869 () Int)
(declare-fun x1693 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x139 () Bool)
(declare-fun x1143 () Int)
(declare-fun x3109 () Int)
(declare-fun x2627 () Int)
(declare-fun x1749 () Bool)
(declare-fun x1010 () Int)
(declare-fun x1520 () Int)
(declare-fun x1760 () Int)
(declare-fun x1031 () Int)
(declare-fun x1803 () Bool)
(declare-fun x2043 () Int)
(declare-fun x524 () Int)
(declare-fun x2768 () Int)
(declare-fun x2938 () Int)
(declare-fun x1500 () Int)
(declare-fun x835 () Int)
(declare-fun x2922 () Bool)
(declare-fun x590 () Int)
(declare-fun x2617 () Bool)
(declare-fun x985 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x2809 () Bool)
(declare-fun x1597 () Int)
(declare-fun x1202 () Int)
(declare-fun x2694 () Int)
(declare-fun x1415 () Int)
(declare-fun x408 () Int)
(declare-fun x3049 () Int)
(declare-fun x1283 () Bool)
(declare-fun x515 () Int)
(declare-fun x458 (Int) Int)
(declare-fun x2510 () Int)
(declare-fun x2401 () Int)
(declare-fun x3031 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x1453 () Int)
(declare-fun x727 () Int)
(declare-fun x2286 () Int)
(declare-fun x2178 () Int)
(declare-fun x122 () Int)
(declare-fun x546 () Bool)
(declare-fun x1189 () Int)
(declare-fun x339 () Int)
(declare-fun x1238 () Int)
(declare-fun x2230 () Bool)
(declare-fun x2731 () Bool)
(declare-fun x2576 () Int)
(declare-fun x1260 () Int)
(declare-fun x1367 () Int)
(declare-fun x2105 () Int)
(declare-fun x622 () Bool)
(declare-fun x2188 () Int)
(declare-fun x1958 () Int)
(declare-fun x1516 () Int)
(declare-fun x843 () Int)
(declare-fun x1185 () Bool)
(declare-fun x1901 () Int)
(declare-fun x3048 () Int)
(declare-fun x263 () Bool)
(declare-fun x764 () Int)
(declare-fun x952 () Int)
(declare-fun x2553 () Int)
(declare-fun x758 () Bool)
(declare-fun x2972 () Int)
(declare-fun x2056 () Int)
(declare-fun x584 () Int)
(declare-fun x2370 () Bool)
(declare-fun x1844 () Int)
(declare-fun x1227 () Bool)
(declare-fun x2452 () Int)
(declare-fun x2568 () Int)
(declare-fun x2570 () Int)
(declare-fun x1278 () Int)
(declare-fun x2856 () Int)
(declare-fun x1628 () Int)
(declare-fun x2381 () Bool)
(declare-fun x487 () Bool)
(declare-fun x837 () Int)
(declare-fun x3030 () Int)
(declare-fun x2529 () Int)
(declare-fun x2181 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1745 () Int)
(declare-fun x1440 () Int)
(declare-fun x2029 () Int)
(declare-fun x1218 () Int)
(declare-fun x1439 () Int)
(declare-fun x2319 (Int) Int)
(declare-fun x1048 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x1726 () Int)
(declare-fun x1949 () Bool)
(declare-fun x2460 () Int)
(declare-fun x1498 () Int)
(declare-fun x1089 () Bool)
(declare-fun x823 () Int)
(declare-fun x2428 () Int)
(declare-fun x2301 () Int)
(declare-fun x1331 () Int)
(declare-fun x2498 () Int)
(declare-fun x2126 () Int)
(declare-fun x1489 () Int)
(declare-fun x702 () Bool)
(declare-fun x2171 () Int)
(declare-fun x3106 () Int)
(declare-fun x1033 () Int)
(declare-fun x2692 () Int)
(declare-fun x2297 () Int)
(declare-fun x751 () Int)
(declare-fun x3016 () Int)
(declare-fun x1132 () Int)
(declare-fun x194 () Int)
(declare-fun x1845 () Bool)
(declare-fun x26 () Int)
(declare-fun x2049 () Bool)
(declare-fun x3065 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x2551 () Int)
(declare-fun x1170 () Int)
(declare-fun x2053 () Int)
(declare-fun x1221 () Int)
(declare-fun x2147 () Int)
(declare-fun x2673 () Int)
(declare-fun x1654 () Int)
(declare-fun x1768 () Int)
(declare-fun x2604 () Int)
(declare-fun x2773 () Int)
(declare-fun x1242 () Int)
(declare-fun x2993 () Int)
(declare-fun x230 () Int)
(declare-fun x714 () Int)
(declare-fun x2389 () Int)
(declare-fun x2561 () Int)
(declare-fun x1011 () Bool)
(declare-fun x1511 () Int)
(declare-fun x1934 () Int)
(declare-fun x1220 () Bool)
(declare-fun x113 () Int)
(declare-fun x1714 () Bool)
(declare-fun x2994 () Int)
(declare-fun x2283 () Int)
(declare-fun x2603 () Int)
(declare-fun x1514 () Int)
(declare-fun x2154 () Int)
(declare-fun x2055 () Int)
(declare-fun x433 () Int)
(declare-fun x1989 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x2845 () Int)
(declare-fun x538 () Int)
(declare-fun x703 () Bool)
(declare-fun x202 () Int)
(declare-fun x701 () Int)
(declare-fun x2353 () Bool)
(declare-fun x760 () Int)
(declare-fun x1837 () Int)
(declare-fun x2925 () Bool)
(declare-fun x2992 () Bool)
(declare-fun x2702 () Int)
(declare-fun x1411 () Bool)
(declare-fun x903 () Int)
(declare-fun x1014 () Int)
(declare-fun x460 () Int)
(declare-fun x99 () Int)
(declare-fun x576 () Int)
(declare-fun x1465 () Int)
(declare-fun x1116 () Int)
(declare-fun x2873 () Bool)
(declare-fun x67 () Int)
(declare-fun x1436 () Int)
(declare-fun x2034 () Bool)
(declare-fun x842 () Bool)
(declare-fun x1433 (Int) Int)
(declare-fun x2649 () Int)
(declare-fun x2321 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1985 () Int)
(declare-fun x1009 () Int)
(declare-fun x1908 () Int)
(declare-fun x1 () Bool)
(declare-fun x2351 () Int)
(declare-fun x2417 () Int)
(declare-fun x971 () Bool)
(declare-fun x832 () Int)
(declare-fun x2867 () Int)
(declare-fun x37 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1173 () Int)
(declare-fun x1327 () Bool)
(declare-fun x446 () Int)
(declare-fun x929 () Int)
(declare-fun x623 (Int) Int)
(declare-fun x2580 () Int)
(declare-fun x2302 () Int)
(declare-fun x717 () Bool)
(declare-fun x86 () Int)
(declare-fun x724 () Int)
(declare-fun x2619 () Bool)
(declare-fun x2144 () Int)
(declare-fun x2304 () Int)
(declare-fun x1964 () Int)
(declare-fun x731 () Int)
(declare-fun x2710 () Bool)
(declare-fun x545 () Int)
(declare-fun x1651 () Bool)
(declare-fun x1865 () Int)
(declare-fun x1987 () Int)
(declare-fun x1087 () Bool)
(declare-fun x707 () Int)
(declare-fun x964 () Bool)
(declare-fun x2411 () Int)
(declare-fun x2362 () Int)
(declare-fun x991 () Int)
(declare-fun x132 () Bool)
(declare-fun x2166 () Int)
(declare-fun x1057 () Int)
(declare-fun x125 () Int)
(declare-fun x1887 () Bool)
(declare-fun x1109 () Int)
(declare-fun x1293 () Int)
(declare-fun x816 () Int)
(declare-fun x2145 () Int)
(declare-fun x1072 () Int)
(declare-fun x1420 () Int)
(declare-fun x2010 () Bool)
(declare-fun x638 () Int)
(declare-fun x1150 () Int)
(declare-fun x2107 () Int)
(declare-fun x172 () Int)
(declare-fun x1652 () Int)
(declare-fun x1280 () Int)
(declare-fun x722 () Int)
(declare-fun x1188 () Bool)
(declare-fun x1801 () Int)
(declare-fun x804 () Int)
(declare-fun x1924 () Int)
(declare-fun x2246 () Int)
(declare-fun x2847 () Int)
(declare-fun x1581 () Int)
(declare-fun x1899 () Int)
(declare-fun x371 () Int)
(declare-fun x72 () Int)
(declare-fun x2566 () Bool)
(declare-fun x2985 () Bool)
(declare-fun x2593 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x2293 () Int)
(declare-fun x1642 () Int)
(declare-fun x363 () Int)
(declare-fun x2508 () Int)
(declare-fun x244 () Int)
(declare-fun x922 () Int)
(declare-fun x340 () Int)
(declare-fun x1085 () Int)
(declare-fun x1629 () Int)
(declare-fun x1216 () Int)
(declare-fun x913 () Int)
(declare-fun x1026 () Int)
(declare-fun x2870 () Int)
(declare-fun x21 () Int)
(declare-fun x1838 () Int)
(declare-fun x1777 () Bool)
(declare-fun x2033 () Int)
(declare-fun x2969 () Int)
(declare-fun x2395 () Int)
(declare-fun x1890 () Int)
(declare-fun x1273 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x645 () Int)
(declare-fun x987 () Bool)
(declare-fun x319 () Int)
(declare-fun x1773 () Bool)
(declare-fun x628 () Bool)
(declare-fun x1203 (Int) Int)
(declare-fun x2549 () Bool)
(declare-fun x522 () Int)
(declare-fun x1311 () Bool)
(declare-fun x2037 () Int)
(declare-fun x1690 () Int)
(declare-fun x2631 () Int)
(declare-fun x2184 () Int)
(declare-fun x2152 () Bool)
(declare-fun x1424 () Int)
(declare-fun x2463 () Int)
(declare-fun x2352 () Int)
(declare-fun x762 () Bool)
(declare-fun x1374 () Int)
(declare-fun x2798 () Int)
(declare-fun x1547 () Bool)
(declare-fun x2685 () Int)
(declare-fun x276 () Int)
(declare-fun x3125 () Int)
(declare-fun x1369 () Int)
(declare-fun x145 () Int)
(declare-fun x1762 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x1343 () Int)
(declare-fun x2119 () Int)
(declare-fun x396 () Int)
(declare-fun x2482 () Bool)
(declare-fun x2758 () Int)
(declare-fun x752 () Int)
(declare-fun x287 () Int)
(declare-fun x360 () Int)
(declare-fun x147 () Int)
(declare-fun x1722 () Int)
(declare-fun x2310 () Int)
(declare-fun x2682 () Int)
(declare-fun x2486 () Int)
(declare-fun x2797 () Bool)
(declare-fun x2528 () Int)
(declare-fun x204 () Bool)
(declare-fun x3012 () Int)
(declare-fun x1361 () Int)
(declare-fun x2499 () Int)
(declare-fun x219 () Int)
(declare-fun x889 () Int)
(declare-fun x281 () Int)
(declare-fun x496 () Int)
(declare-fun x1434 () Bool)
(declare-fun x598 () Int)
(declare-fun x2358 () Bool)
(declare-fun x2804 () Int)
(declare-fun x923 () Int)
(declare-fun x1342 () Int)
(declare-fun x3084 () Int)
(declare-fun x1821 () Bool)
(declare-fun x650 () Int)
(declare-fun x3115 () Int)
(declare-fun x980 () Int)
(declare-fun x239 () Int)
(declare-fun x2717 () Int)
(declare-fun x821 () Bool)
(declare-fun x1023 () Int)
(declare-fun x369 () Bool)
(declare-fun x678 () Int)
(declare-fun x435 () Bool)
(declare-fun x346 () Int)
(declare-fun x1876 () Int)
(declare-fun x570 () Int)
(declare-fun x294 () Int)
(declare-fun x1392 () Int)
(declare-fun x426 () Int)
(declare-fun x459 () Int)
(declare-fun x840 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x2514 () Int)
(declare-fun x2142 () Int)
(declare-fun x1347 () Bool)
(declare-fun x2333 () Int)
(declare-fun x2583 () Int)
(declare-fun x2405 () Int)
(declare-fun x2490 () Bool)
(declare-fun x1822 () Int)
(declare-fun x2478 () Int)
(declare-fun x251 () Int)
(declare-fun x2339 () Int)
(declare-fun x13 () Int)
(declare-fun x2780 () Int)
(declare-fun x2111 () Int)
(declare-fun x2915 () Bool)
(declare-fun x2061 () Int)
(declare-fun x1107 () Int)
(declare-fun x2770 () Int)
(declare-fun x1074 () Int)
(declare-fun x2083 () Int)
(declare-fun x1409 () Int)
(declare-fun x1602 () Int)
(declare-fun x2719 () Int)
(declare-fun x2592 () Int)
(declare-fun x76 () Int)
(declare-fun x1162 () Int)
(declare-fun x640 () Int)
(declare-fun x1483 () Int)
(declare-fun x427 () Int)
(declare-fun x282 () Int)
(declare-fun x2074 () Int)
(declare-fun x2224 () Int)
(declare-fun x535 () Int)
(declare-fun x930 () Int)
(declare-fun x429 () Int)
(declare-fun x2270 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x739 () Int)
(declare-fun x900 () Bool)
(declare-fun x1113 () Int)
(declare-fun x682 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1266 () Int)
(declare-fun x2096 () Int)
(declare-fun x928 () Bool)
(declare-fun x1521 () Int)
(declare-fun x674 () Bool)
(declare-fun x2625 () Int)
(declare-fun x2316 () Int)
(declare-fun x1359 () Bool)
(declare-fun x2424 () Int)
(declare-fun x699 () Int)
(declare-fun x1846 () Bool)
(declare-fun x90 () Bool)
(declare-fun x1946 () Int)
(declare-fun x2189 () Bool)
(declare-fun x2722 () Int)
(declare-fun x253 () Int)
(declare-fun x2348 () Int)
(declare-fun x1740 () Int)
(declare-fun x466 () Int)
(declare-fun x1767 () Int)
(declare-fun x3042 () Int)
(declare-fun x1197 () Int)
(declare-fun x771 () Int)
(declare-fun x577 () Int)
(declare-fun x1231 () Bool)
(declare-fun x1126 () Int)
(declare-fun x205 () Int)
(declare-fun x2709 () Bool)
(declare-fun x2303 () Int)
(declare-fun x1756 () Int)
(declare-fun x1282 () Int)
(declare-fun x1239 () Int)
(declare-fun x298 (Int) Int)
(declare-fun x1488 () Int)
(declare-fun x382 () Bool)
(declare-fun x3073 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1079 () Int)
(declare-fun x1001 () Bool)
(declare-fun x749 () Int)
(declare-fun x2391 () Int)
(declare-fun x2287 () Int)
(declare-fun x2945 () Int)
(declare-fun x1532 () Int)
(declare-fun x613 () Int)
(declare-fun x914 () Int)
(declare-fun x150 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x774 () Bool)
(declare-fun x536 () Int)
(declare-fun x1742 () Int)
(declare-fun x1594 () Int)
(declare-fun x3085 () Int)
(declare-fun x1658 () Bool)
(declare-fun x432 () Int)
(declare-fun x3037 () Int)
(declare-fun x2375 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x2874 () Int)
(declare-fun x1933 () Int)
(declare-fun x725 () Int)
(declare-fun x870 () Int)
(declare-fun x2118 () Int)
(declare-fun x2092 () Bool)
(declare-fun x1945 (Int) Int)
(declare-fun x2101 () Int)
(declare-fun x716 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x12 () Int)
(declare-fun x27 () Bool)
(declare-fun x407 () Bool)
(declare-fun x526 () Int)
(declare-fun x680 () Bool)
(declare-fun x2201 () Int)
(declare-fun x2219 () Int)
(declare-fun x296 () Int)
(declare-fun x947 () Int)
(declare-fun x713 () Int)
(declare-fun x1372 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1403 () Int)
(declare-fun x2653 () Bool)
(declare-fun x742 () Int)
(declare-fun x64 () Bool)
(declare-fun x3066 () Int)
(declare-fun x2149 () Int)
(declare-fun x404 () Int)
(declare-fun x2344 () Int)
(declare-fun x5 () Bool)
(declare-fun x848 () Int)
(declare-fun x232 () Bool)
(declare-fun x1675 () Int)
(declare-fun x91 () Int)
(declare-fun x1196 () Int)
(declare-fun x3057 () Int)
(declare-fun x1363 () Int)
(declare-fun x314 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x998 () Int)
(declare-fun x2093 () Int)
(declare-fun x519 () Bool)
(declare-fun x2572 () Int)
(declare-fun x1199 () Int)
(declare-fun x1225 () Int)
(declare-fun x2726 () Int)
(declare-fun x2638 () Int)
(declare-fun x2689 () Int)
(declare-fun x1993 () Int)
(declare-fun x1535 () Int)
(declare-fun x2110 () Bool)
(declare-fun x1405 () Int)
(declare-fun x2757 () Bool)
(declare-fun x467 () Int)
(declare-fun x1959 () Int)
(declare-fun x2295 () Int)
(declare-fun x2493 () Int)
(declare-fun x863 () Bool)
(declare-fun x960 () Bool)
(declare-fun x2936 () Int)
(declare-fun x1476 () Int)
(declare-fun x875 () Int)
(declare-fun x1888 () Int)
(declare-fun x24 () Int)
(declare-fun x2790 () Bool)
(declare-fun x1081 () Int)
(declare-fun x455 () Int)
(declare-fun x2285 () Bool)
(declare-fun x73 () Int)
(declare-fun x989 () Int)
(declare-fun x2244 () Int)
(declare-fun x1054 () Int)
(declare-fun x921 () Int)
(declare-fun x297 () Int)
(declare-fun x933 () Int)
(declare-fun x2378 () Int)
(declare-fun x2908 () Int)
(declare-fun x2221 () Int)
(declare-fun x1736 () Int)
(declare-fun x341 (Int) Int)
(declare-fun x1432 () Int)
(declare-fun x2242 () Int)
(declare-fun x2497 () Bool)
(declare-fun x1387 () Int)
(declare-fun x1281 () Int)
(declare-fun x1637 () Int)
(declare-fun x2746 () Int)
(declare-fun x2165 () Int)
(declare-fun x1770 () Int)
(declare-fun x1817 () Int)
(declare-fun x2574 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x2114 () Int)
(declare-fun x1249 () Bool)
(declare-fun x2947 () Int)
(declare-fun x708 () Int)
(declare-fun x575 () Int)
(declare-fun x1796 () Int)
(declare-fun x168 () Int)
(declare-fun x234 () Int)
(declare-fun x2052 () Bool)
(declare-fun x126 () Bool)
(declare-fun x2931 () Int)
(declare-fun x1091 () Int)
(declare-fun x2970 () Int)
(declare-fun x240 () Bool)
(declare-fun x258 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x1530 () Int)
(declare-fun x1598 () Int)
(declare-fun x556 () Int)
(declare-fun x2226 () Bool)
(declare-fun x2474 () Int)
(declare-fun x1906 () Int)
(declare-fun x2030 () Bool)
(declare-fun x1612 () Int)
(declare-fun x2721 () Bool)
(declare-fun x2046 () Int)
(declare-fun x1916 () Int)
(declare-fun x1258 (Int Int Int Int Int Int Int) Int)
(declare-fun x4 () Int)
(declare-fun x1338 () Int)
(declare-fun x1960 () Int)
(declare-fun x734 () Int)
(declare-fun x1325 () Int)
(declare-fun x1146 () Int)
(declare-fun x2628 () Int)
(declare-fun x22 () Int)
(declare-fun x744 () Int)
(declare-fun x2108 () Int)
(declare-fun x218 () Int)
(declare-fun x533 (Int) Int)
(declare-fun x1936 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1145 () Int)
(declare-fun x1735 () Int)
(declare-fun x1937 () Int)
(declare-fun x2350 () Int)
(declare-fun x165 () Int)
(declare-fun x2787 () Int)
(declare-fun x1418 () Int)
(declare-fun x908 () Int)
(declare-fun x1481 () Int)
(declare-fun x905 () Int)
(declare-fun x155 () Int)
(declare-fun x2504 () Int)
(declare-fun x2346 () Int)
(declare-fun x266 () Int)
(declare-fun x1308 () Int)
(declare-fun x177 () Bool)
(declare-fun x1606 () Int)
(declare-fun x1470 () Int)
(declare-fun x347 () Int)
(declare-fun x3024 () Int)
(declare-fun x56 () Int)
(declare-fun x1104 () Int)
(declare-fun x226 () Int)
(declare-fun x611 () Int)
(declare-fun x2708 () Int)
(declare-fun x2878 () Int)
(declare-fun x2737 () Int)
(declare-fun x3006 () Int)
(declare-fun x1750 () Int)
(declare-fun x2076 () Bool)
(declare-fun x679 () Int)
(declare-fun x2298 () Bool)
(declare-fun x507 (Int) Int)
(declare-fun x1430 () Int)
(declare-fun x279 () Int)
(declare-fun x288 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1008 () Int)
(declare-fun x2951 () Int)
(declare-fun x1335 () Int)
(declare-fun x58 () Int)
(declare-fun x2372 () Int)
(declare-fun x561 () Bool)
(declare-fun x943 () Int)
(declare-fun x17 () Bool)
(declare-fun x2065 () Int)
(declare-fun x3036 () Int)
(declare-fun x2547 () Int)
(declare-fun x2695 () Int)
(declare-fun x2445 () Int)
(declare-fun x544 () Int)
(declare-fun x610 () Int)
(declare-fun x2917 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x143 () Int)
(declare-fun x87 () Bool)
(declare-fun x939 () Int)
(declare-fun x1140 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x323 () Int)
(declare-fun x1826 () Int)
(declare-fun x2623 () Int)
(declare-fun x121 () Int)
(declare-fun x166 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1235 () Int)
(declare-fun x2466 () Bool)
(declare-fun x1808 () Int)
(declare-fun x1751 () Int)
(declare-fun x1004 () Int)
(declare-fun x1358 () Int)
(declare-fun x886 () Int)
(declare-fun x1556 () Bool)
(declare-fun x2003 () Int)
(declare-fun x383 () Int)
(declare-fun x2222 () Int)
(declare-fun x478 () Int)
(declare-fun x2767 () Int)
(declare-fun x2637 () Int)
(declare-fun x2187 () Int)
(declare-fun x693 () Int)
(declare-fun x1523 () Int)
(declare-fun x1870 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x767 () Bool)
(declare-fun x220 () Int)
(declare-fun x127 () Int)
(declare-fun x1650 () Int)
(declare-fun x311 () Int)
(declare-fun x1843 () Int)
(declare-fun x667 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x675 () Int)
(declare-fun x2479 () Bool)
(declare-fun x1161 () Int)
(declare-fun x2769 () Bool)
(declare-fun x2329 () Int)
(declare-fun x1167 () Int)
(declare-fun x344 () Int)
(declare-fun x1754 () Int)
(declare-fun x1025 () Int)
(declare-fun x2550 () Bool)
(declare-fun x1519 () Int)
(declare-fun x1279 () Int)
(declare-fun x924 () Bool)
(declare-fun x2134 () Int)
(declare-fun x62 () Int)
(declare-fun x348 () Int)
(declare-fun x1398 () Int)
(declare-fun x417 () Int)
(declare-fun x2836 () Bool)
(declare-fun x2211 () Int)
(declare-fun x1833 () Int)
(declare-fun x38 () Bool)
(declare-fun x1720 () Int)
(declare-fun x2589 () Bool)
(declare-fun x2751 () Int)
(declare-fun x1809 () Int)
(declare-fun x2521 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x1820 (Int) Int)
(declare-fun x1349 () Int)
(declare-fun x789 () Int)
(declare-fun x2533 () Int)
(declare-fun x1938 () Bool)
(declare-fun x378 () Int)
(declare-fun x2801 () Int)
(declare-fun x1120 () Int)
(declare-fun x3027 () Bool)
(declare-fun x2359 () Int)
(declare-fun x2963 () Int)
(declare-fun x1168 (Int) Int)
(declare-fun x2305 () Int)
(declare-fun x3021 () Bool)
(declare-fun x3112 () Int)
(declare-fun x805 () Int)
(declare-fun x1324 () Int)
(declare-fun x2472 () Int)
(declare-fun x1354 () Int)
(declare-fun x2680 (Int) Int)
(declare-fun x1893 () Int)
(declare-fun x2164 () Int)
(declare-fun x1152 () Bool)
(declare-fun x50 () Int)
(declare-fun x616 (Int) Int)
(declare-fun x2799 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x2783 () Int)
(declare-fun x14 () Int)
(declare-fun x2455 () Int)
(declare-fun x2206 () Int)
(declare-fun x2060 () Int)
(declare-fun x852 () Int)
(declare-fun x79 () Int)
(declare-fun x2840 () Int)
(declare-fun x2262 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x2099 () Int)
(declare-fun x1462 () Int)
(declare-fun x2133 () Int)
(declare-fun x1911 () Int)
(declare-fun x1265 () Int)
(declare-fun x2422 () Int)
(declare-fun x853 () Int)
(declare-fun x1477 () Int)
(declare-fun x2356 () Int)
(declare-fun x447 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1587 () Int)
(declare-fun x1621 () Int)
(declare-fun x81 (Int) Int)
(declare-fun x2742 () Int)
(declare-fun x927 () Bool)
(declare-fun x833 () Bool)
(declare-fun x2816 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x307 () Int)
(declare-fun x1261 () Int)
(declare-fun x142 () Int)
(declare-fun x224 () Int)
(declare-fun x2290 () Int)
(declare-fun x477 () Int)
(declare-fun x1252 (Int) Int)
(declare-fun x1298 () Bool)
(declare-fun x3127 () Int)
(declare-fun x84 () Int)
(declare-fun x1122 () Int)
(declare-fun x1839 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1147 () Int)
(declare-fun x2825 () Bool)
(declare-fun x2299 () Int)
(declare-fun x2258 () Bool)
(declare-fun x1397 () Int)
(declare-fun x2209 () Bool)
(declare-fun x1954 () Int)
(declare-fun x2185 () Int)
(declare-fun x9 () Int)
(declare-fun x1223 () Int)
(declare-fun x1006 () Int)
(declare-fun x1381 () Bool)
(declare-fun x569 () Int)
(declare-fun x906 () Int)
(declare-fun x1818 () Int)
(declare-fun x552 () Int)
(declare-fun x2998 () Int)
(declare-fun x822 () Int)
(declare-fun x1460 () Int)
(declare-fun x3019 () Int)
(declare-fun x950 () Int)
(declare-fun x140 () Int)
(declare-fun x1423 () Int)
(declare-fun x1549 () Int)
(declare-fun x2035 () Int)
(declare-fun x1019 () Int)
(declare-fun x1155 () Bool)
(declare-fun x2893 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x2948 (Int) Int)
(declare-fun x1596 () Bool)
(declare-fun x836 () Int)
(declare-fun x897 () Int)
(declare-fun x1766 () Int)
(declare-fun x2059 () Int)
(declare-fun x1671 () Int)
(declare-fun x902 () Bool)
(declare-fun x920 () Int)
(declare-fun x1312 () Bool)
(declare-fun x2941 () Int)
(declare-fun x1492 () Int)
(declare-fun x1356 () Bool)
(declare-fun x2291 () Int)
(declare-fun x364 () Int)
(declare-fun x999 () Bool)
(declare-fun x1262 () Int)
(declare-fun x2308 () Int)
(declare-fun x1576 () Int)
(declare-fun x2496 () Int)
(declare-fun x1676 () Int)
(declare-fun x2641 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x3124 () Int)
(declare-fun x2830 () Bool)
(declare-fun x2441 () Int)
(declare-fun x2469 () Int)
(declare-fun x44 () Int)
(declare-fun x543 () Int)
(declare-fun x2577 (Int Int) Int)
(declare-fun x2990 () Int)
(declare-fun x2210 () Bool)
(declare-fun x2959 () Int)
(declare-fun x1712 () Bool)
(declare-fun x2128 () Int)
(declare-fun x2802 () Int)
(declare-fun x1782 () Int)
(declare-fun x966 () Int)
(declare-fun x862 () Int)
(declare-fun x2172 () Int)
(declare-fun x2429 () Int)
(declare-fun x2347 () Int)
(declare-fun x2807 () Bool)
(declare-fun x2502 (Int Int) Int)
(declare-fun x331 () Int)
(declare-fun x778 () Int)
(declare-fun x1020 () Bool)
(declare-fun x257 () Int)
(declare-fun x1377 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x300 () Bool)
(declare-fun x2001 () Int)
(declare-fun x326 () Int)
(declare-fun x1892 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x2373 (Int) Int)
(declare-fun x694 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x3020 () Bool)
(declare-fun x71 () Bool)
(declare-fun x1618 () Int)
(declare-fun x43 () Int)
(declare-fun x345 () Int)
(declare-fun x630 () Bool)
(declare-fun x2410 () Int)
(declare-fun x482 () Int)
(declare-fun x1619 () Bool)
(declare-fun x745 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1800 () Int)
(declare-fun x1007 () Int)
(declare-fun x2004 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x3069 () Int)
(declare-fun x949 () Int)
(declare-fun x2388 () Int)
(declare-fun x1259 () Int)
(declare-fun x1661 () Int)
(declare-fun x2824 () Int)
(declare-fun x3097 () Bool)
(declare-fun x2833 () Bool)
(declare-fun x854 () Int)
(declare-fun x2 () Int)
(declare-fun x2292 () Int)
(declare-fun x2919 () Int)
(declare-fun x2086 () Int)
(declare-fun x2078 () Int)
(declare-fun x2971 () Int)
(declare-fun x1647 () Int)
(declare-fun x2048 () Int)
(declare-fun x635 () Bool)
(declare-fun x1955 () Int)
(declare-fun x1466 (Int) Int)
(declare-fun x2027 () Int)
(declare-fun x1995 () Int)
(declare-fun x1061 () Int)
(declare-fun x1129 () Bool)
(declare-fun x2765 () Int)
(declare-fun x173 () Int)
(declare-fun x642 () Bool)
(declare-fun x2598 () Int)
(declare-fun x3083 () Int)
(declare-fun x2949 () Int)
(declare-fun x2567 () Int)
(declare-fun x468 () Int)
(declare-fun x321 () Int)
(declare-fun x2946 () Int)
(declare-fun x1904 () Int)
(declare-fun x1840 () Int)
(declare-fun x2775 () Int)
(declare-fun x2539 () Int)
(declare-fun x3114 () Bool)
(declare-fun x2038 () Int)
(declare-fun x916 () Int)
(declare-fun x2978 () Int)
(declare-fun x578 () Int)
(declare-fun x1473 () Int)
(declare-fun x1795 () Int)
(declare-fun x1211 () Int)
(declare-fun x1965 () Bool)
(declare-fun x634 () Int)
(declare-fun x2557 () Int)
(declare-fun x1776 () Bool)
(declare-fun x3034 () Int)
(declare-fun x2650 () Int)
(declare-fun x3005 () Int)
(declare-fun x1086 () Bool)
(declare-fun x16 () Int)
(declare-fun x948 () Int)
(declare-fun x2841 () Bool)
(declare-fun x2733 () Bool)
(declare-fun x3044 () Int)
(declare-fun x528 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x2094 () Int)
(declare-fun x2231 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x3007 () Bool)
(declare-fun x6 () Int)
(declare-fun x1292 () Int)
(declare-fun x2509 () Bool)
(declare-fun x1370 () Int)
(declare-fun x1874 () Int)
(declare-fun x2670 () Int)
(declare-fun x1447 () Int)
(declare-fun x2740 () Int)
(declare-fun x1400 () Int)
(declare-fun x1677 () Int)
(declare-fun x2739 () Int)
(declare-fun x1765 () Int)
(declare-fun x2781 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1053 () Int)
(declare-fun x1898 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x2600 () Int)
(declare-fun x2175 () Int)
(declare-fun x1401 () Int)
(declare-fun x2793 () Bool)
(declare-fun x461 () Int)
(declare-fun x2376 () Int)
(declare-fun x3050 () Int)
(declare-fun x1277 () Int)
(declare-fun x395 () Int)
(declare-fun x687 () Bool)
(declare-fun x2266 () Int)
(declare-fun x1105 () Int)
(declare-fun x1733 () Int)
(declare-fun x2450 () Int)
(declare-fun x320 () Int)
(declare-fun x2964 () Int)
(declare-fun x2432 () Int)
(declare-fun x2081 () Bool)
(declare-fun x228 () Bool)
(declare-fun x1360 () Int)
(declare-fun x386 () Int)
(declare-fun x1504 (Int Int Int Int Int Int) Int)
(declare-fun x188 () Int)
(declare-fun x1344 () Bool)
(declare-fun x654 () Int)
(declare-fun x223 () Int)
(declare-fun x2269 () Int)
(declare-fun x2342 () Int)
(declare-fun x876 (Int) Int)
(declare-fun x2421 () Int)
(declare-fun x2259 () Bool)
(declare-fun x2960 () Int)
(declare-fun x3074 () Int)
(declare-fun x75 () Bool)
(declare-fun x1309 () Int)
(declare-fun x437 () Int)
(declare-fun x1101 () Bool)
(declare-fun x1290 () Int)
(declare-fun x2668 () Int)
(declare-fun x2180 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x1378 () Int)
(declare-fun x2616 () Int)
(declare-fun x2983 () Int)
(declare-fun x917 () Int)
(declare-fun x3107 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x1592 () Int)
(declare-fun x2772 (Int Int) Int)
(declare-fun x494 () Int)
(declare-fun x195 () Int)
(declare-fun x631 () Bool)
(declare-fun x2857 () Int)
(declare-fun x2254 () Int)
(declare-fun x812 () Bool)
(declare-fun x2227 () Int)
(declare-fun x2707 () Int)
(declare-fun x1706 () Int)
(declare-fun x1204 () Bool)
(declare-fun x176 () Int)
(declare-fun x732 () Int)
(declare-fun x2595 () Bool)
(declare-fun x1825 () Int)
(declare-fun x2438 () Bool)
(declare-fun x1984 () Int)
(declare-fun x573 () Bool)
(declare-fun x2419 () Int)
(declare-fun x1215 () Int)
(declare-fun x888 () Int)
(declare-fun x34 () Bool)
(declare-fun x1551 () Int)
(declare-fun x2506 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x2545 () Int)
(declare-fun x824 () Bool)
(declare-fun x1441 () Int)
(declare-fun x2255 () Int)
(declare-fun x2467 () Int)
(declare-fun x2399 () Int)
(declare-fun x2672 () Bool)
(declare-fun x2183 () Int)
(declare-fun x1679 () Int)
(declare-fun x349 () Int)
(declare-fun x1663 () Int)
(declare-fun x2939 () Bool)
(declare-fun x659 () Int)
(declare-fun x2752 () Int)
(declare-fun x1932 () Int)
(declare-fun x592 () Int)
(declare-fun x1590 () Int)
(declare-fun x898 () Int)
(declare-fun x187 () Int)
(declare-fun x70 () Int)
(declare-fun x1035 () Int)
(declare-fun x47 () Int)
(declare-fun x2018 () Bool)
(declare-fun x992 () Int)
(declare-fun x656 () Int)
(declare-fun x1399 () Int)
(declare-fun x1119 () Int)
(declare-fun x1644 () Int)
(declare-fun x1710 () Int)
(declare-fun x415 () Int)
(declare-fun x625 () Bool)
(declare-fun x2045 () Int)
(declare-fun x2245 () Int)
(declare-fun x1664 () Int)
(declare-fun x283 () Int)
(declare-fun x1880 () Int)
(declare-fun x2475 () Bool)
(declare-fun x521 () Int)
(declare-fun x2275 () Bool)
(declare-fun x597 () Int)
(declare-fun x2736 () Int)
(declare-fun x1990 () Int)
(declare-fun x1999 () Int)
(declare-fun x2332 () Int)
(declare-fun x117 () Int)
(declare-fun x1303 () Int)
(declare-fun x11 () Int)
(declare-fun x1067 () Bool)
(declare-fun x1177 () Int)
(declare-fun x1501 () Int)
(declare-fun x1925 () Int)
(declare-fun x115 () Int)
(declare-fun x1646 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x1040 () Int)
(declare-fun x379 () Int)
(declare-fun x2494 () Int)
(declare-fun x683 () Int)
(declare-fun x2039 () Int)
(declare-fun x2973 () Int)
(declare-fun x740 () Int)
(declare-fun x1996 () Int)
(declare-fun x1786 () Int)
(declare-fun x926 () Bool)
(declare-fun x718 () Int)
(declare-fun x3061 () Int)
(declare-fun x958 () Int)
(declare-fun x1291 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x135 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x1250 () Int)
(declare-fun x2077 () Int)
(declare-fun x116 () Int)
(declare-fun x845 () Int)
(declare-fun x1896 () Int)
(declare-fun x1686 () Int)
(declare-fun x2957 () Bool)
(declare-fun x2548 () Int)
(declare-fun x2940 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x3080 () Int)
(declare-fun x1160 () Int)
(declare-fun x658 () Int)
(declare-fun x2239 () Int)
(declare-fun x3022 () Int)
(declare-fun x2349 () Int)
(declare-fun x2776 () Int)
(declare-fun x2852 () Bool)
(declare-fun x2505 () Int)
(declare-fun x2636 () Int)
(declare-fun x2779 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x1617 () Int)
(declare-fun x491 () Int)
(declare-fun x1975 () Int)
(declare-fun x1082 () Int)
(declare-fun x2057 () Bool)
(declare-fun x2167 () Int)
(declare-fun x442 () Int)
(declare-fun x2516 () Bool)
(declare-fun x1913 () Int)
(declare-fun x114 () Int)
(define-fun x3072 ((x254 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x254) (>= x254 0)) x254 (- x254 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x511 ((x254 Int)) Int (ite (and (< x254 0) (>= x254 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x254 115792089237316195423570985008687907853269984665640564039457584007913129639936) x254))
(define-fun x2891 ((x2382 Int)) Bool (and (>= x2382 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2382)))
(define-fun x156 ((x2382 Int)) Bool (and (= (x2502 x2382 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2382) (= (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2382) x2382)))
(define-fun x807 ((x2382 Int)) Bool (and (= 0 (x2502 x2382 0)) (= (x2502 0 x2382) 0)))
(define-fun x1973 ((x2382 Int)) Bool (= (x2502 x2382 x2382) x2382))
(define-fun x2327 ((x2382 Int)) Bool (and (x1973 x2382) (x156 x2382) (x807 x2382)))
(define-fun x385 ((x2382 Int) (x2642 Int)) Bool (= (x2502 x2382 x2642) (x2502 x2642 x2382)))
(define-fun x95 ((x2382 Int) (x2642 Int)) Bool (and (=> (>= x2382 0) (>= x2382 (x2502 x2382 x2642))) (<= 0 (x2502 x2382 x2642)) (=> (>= x2642 0) (<= (x2502 x2382 x2642) x2642))))
(define-fun x275 ((x2382 Int) (x2642 Int)) Bool (and (x95 x2382 x2642) (x385 x2382 x2642)))
(define-fun x2714 ((x2382 Int)) Bool (= (mod x2382 1461501637330902918203684832716283019655932542976) (x2502 x2382 1461501637330902918203684832716283019655932542975)))
(define-fun x2700 ((x2382 Int)) Bool (and (x2714 x2382) (x275 x2382 1461501637330902918203684832716283019655932542975)))
(define-fun x3067 ((x2382 Int)) Bool (= (+ (x2502 x2382 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x2382 32)) (mod x2382 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x189 ((x2382 Int)) Bool (and (x3067 x2382) (x275 x2382 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x819 ((x2098 Int)) Int (ite (< x2098 x1759) (x1433 x2098) 0))
(define-fun x1763 ((x2098 Int)) Int 0)
(define-fun x217 ((x2098 Int)) Int (x1252 x2098))
(define-fun x885 ((x2098 Int)) Int (x2373 x2098))
(define-fun x74 ((x2098 Int)) Int (x2822 x2098))
(define-fun x1804 ((x2098 Int)) Int (x1753 x2098))
(define-fun x1966 ((x2098 Int)) Int (x1328 x2098))
(define-fun x2122 ((x2098 Int)) Int 0)
(define-fun x153 ((x2098 Int)) Int (ite (= x2098 4) 32 (x2122 x2098)))
(define-fun x2536 ((x2098 Int)) Int (ite (= 36 x2098) x913 (x153 x2098)))
(define-fun x2665 ((x2098 Int)) Int (ite (= x2098 68) x2607 (x2536 x2098)))
(define-fun x2042 ((x2098 Int)) Int (ite (= x2098 100) x1363 (x2665 x2098)))
(define-fun x1096 ((x2098 Int)) Int (ite (= x2098 132) 352 (x2042 x2098)))
(define-fun x1485 ((x2098 Int)) Int (ite (= 388 x2098) x2460 (x1096 x2098)))
(define-fun x131 ((x2098 Int)) Int (ite (and (>= x2098 420) (< x2098 (+ 420 x1309))) (x217 (- x2098 420)) (x1485 x2098)))
(define-fun x1065 ((x2098 Int)) Int (ite (= 164 x2098) x2858 (x131 x2098)))
(define-fun x483 ((x2098 Int)) Int (ite (= x2098 x1313) x1855 (x1065 x2098)))
(define-fun x2453 ((x2098 Int)) Int (ite (and (>= x2098 x1136) (< x2098 (+ x1050 x1136))) (x885 (- x2098 x1136)) (x483 x2098)))
(define-fun x782 ((x2098 Int)) Int (ite (= 196 x2098) x2310 (x2453 x2098)))
(define-fun x669 ((x2098 Int)) Int (ite (= x2098 x859) x1893 (x782 x2098)))
(define-fun x2121 ((x2098 Int)) Int (ite (and (> (+ x1751 x2850) x2098) (>= x2098 x1751)) (x74 (- x2098 x1751)) (x669 x2098)))
(define-fun x671 ((x2098 Int)) Int (ite (= 228 x2098) x2442 (x2121 x2098)))
(define-fun x2232 ((x2098 Int)) Int (ite (= x2098 x2344) x1645 (x671 x2098)))
(define-fun x1169 ((x2098 Int)) Int (ite (and (> (+ x2352 x1645) x2098) (>= x2098 x2352)) (x1804 (- x2098 x2352)) (x2232 x2098)))
(define-fun x689 ((x2098 Int)) Int (ite (= x2098 260) x1883 (x1169 x2098)))
(define-fun x1662 ((x2098 Int)) Int (ite (= x1199 x2098) x1125 (x689 x2098)))
(define-fun x92 ((x2098 Int)) Int (ite (and (< x2098 (+ x1003 x1491)) (<= x1003 x2098)) (x1966 (- x2098 x1003)) (x1662 x2098)))
(define-fun x1384 ((x2098 Int)) Int (ite (= 292 x2098) x725 (x92 x2098)))
(define-fun x2820 ((x2098 Int)) Int (ite (= 324 x2098) x2773 (x1384 x2098)))
(define-fun x2605 ((x2098 Int)) Int (ite (= x2098 356) x2396 (x2820 x2098)))
(define-fun x1464 ((x2098 Int)) Int (ite (= x234 x2098) x681 (x298 x2098)))
(define-fun x1931 ((x2098 Int)) Int (ite (= x2747 x2098) x3080 (x1464 x2098)))
(define-fun x3117 ((x2098 Int)) Int (ite (= x2098 128) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x1763 x2098)))
(define-fun x2261 ((x2098 Int)) Int (ite (= 132 x2098) x1793 (x3117 x2098)))
(define-fun x250 ((x2098 Int)) Int (ite (= x2098 164) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x2261 x2098)))
(define-fun x2806 ((x2098 Int)) Int (ite (and (> 160 x2098) (>= x2098 128)) (x2602 (- x2098 128)) (x250 x2098)))
(define-fun x1484 ((x2098 Int)) Int (ite x2563 (x2806 x2098) (x250 x2098)))
(define-fun x978 ((x2098 Int)) Int (ite (and (>= x2098 128) (< x2098 160)) (x2602 (- x2098 128)) (x1484 x2098)))
(define-fun x196 ((x2098 Int)) Int (ite (= 288 x2098) x527 (x978 x2098)))
(define-fun x1478 ((x2098 Int)) Int (ite (= 160 x2098) 288 (x196 x2098)))
(define-fun x2754 ((x2098 Int)) Int (ite (= x2098 320) x1424 (x1478 x2098)))
(define-fun x457 ((x2098 Int)) Int (ite (= x2098 352) x1063 (x2754 x2098)))
(define-fun x2272 ((x2098 Int)) Int (ite (= x2098 448) x104 (x457 x2098)))
(define-fun x1562 ((x2098 Int)) Int (ite (= x2988 x2098) x1265 (x2272 x2098)))
(define-fun x1193 ((x2098 Int)) Int (ite (= x898 x2098) x1419 (x1562 x2098)))
(define-fun x2966 ((x2098 Int)) Int (ite (= x2098 x796) x384 (x1193 x2098)))
(define-fun x1075 ((x2098 Int)) Int (ite (and (<= x2818 x2098) (> (+ x384 x2818) x2098)) (x2605 (- (+ x530 x2098) x2818)) (x2966 x2098)))
(define-fun x834 ((x2098 Int)) Int (ite (= x2098 x1555) 0 (x1075 x2098)))
(define-fun x1064 ((x2098 Int)) Int (ite (= x2098 x1445) x796 (x834 x2098)))
(define-fun x473 ((x2098 Int)) Int (ite (= x2098 480) x2988 (x1064 x2098)))
(define-fun x2485 ((x2098 Int)) Int (ite x1417 (x2272 x2098) (x473 x2098)))
(define-fun x423 ((x2098 Int)) Int (ite (= 384 x2098) 448 (x2485 x2098)))
(define-fun x201 ((x2098 Int)) Int (ite (= x1696 x2098) x2099 (x423 x2098)))
(define-fun x1739 ((x2098 Int)) Int (ite (and (> (+ x2758 x2099) x2098) (>= x2098 x2758)) (x2605 (- (+ x1070 x2098) x2758)) (x201 x2098)))
(define-fun x772 ((x2098 Int)) Int (ite (= x2098 x1506) 0 (x1739 x2098)))
(define-fun x1909 ((x2098 Int)) Int (ite (= x2098 416) x1696 (x772 x2098)))
(define-fun x1352 ((x2098 Int)) Int (ite (= 192 x2098) 320 (x1909 x2098)))
(define-fun x1513 ((x2098 Int)) Int (ite (= x2098 224) x283 (x1352 x2098)))
(define-fun x181 ((x2098 Int)) Int (ite (= x2098 256) x218 (x1513 x2098)))
(define-fun x1878 ((x2098 Int)) Int (ite (= x1919 x2098) x47 (x181 x2098)))
(define-fun x2556 ((x2098 Int)) Int (ite (and (<= x1149 x2098) (> (+ x1149 x47) x2098)) (x2605 (- (+ x2098 x3081) x1149)) (x1878 x2098)))
(define-fun x1038 ((x2098 Int)) Int (ite (= x1735 x2098) 0 (x2556 x2098)))
(define-fun x2778 ((x2098 Int)) Int (ite (= x2329 x2098) x2547 (x1038 x2098)))
(define-fun x1468 ((x2098 Int)) Int (ite (= x2098 x982) x1260 (x2778 x2098)))
(define-fun x3091 ((x2098 Int)) Int (ite (= x1941 x2098) x226 (x1468 x2098)))
(define-fun x387 ((x2098 Int)) Int (ite (= x1885 x2098) x956 (x3091 x2098)))
(define-fun x167 ((x2098 Int)) Int (ite (= x1046 x2098) x552 (x387 x2098)))
(define-fun x192 ((x2098 Int)) Int (ite (= x1284 x2098) x2229 (x167 x2098)))
(define-fun x3120 ((x2098 Int)) Int (ite (= x2933 x2098) x1440 (x192 x2098)))
(define-fun x1512 ((x2098 Int)) Int (ite (= x2098 x2062) x1885 (x3120 x2098)))
(define-fun x3052 ((x2098 Int)) Int (ite x3097 (x3091 x2098) (x1512 x2098)))
(define-fun x235 ((x2098 Int)) Int (ite (= x2098 x184) x1941 (x3052 x2098)))
(define-fun x1371 ((x2098 Int)) Int (ite (= x1852 x2098) x3106 (x235 x2098)))
(define-fun x2012 ((x2098 Int)) Int (ite (= x2600 x2098) x3092 (x1371 x2098)))
(define-fun x534 ((x2098 Int)) Int (ite (= x1470 x2098) x2436 (x2012 x2098)))
(define-fun x418 ((x2098 Int)) Int (ite (= x1127 x2098) x1007 (x534 x2098)))
(define-fun x793 ((x2098 Int)) Int (ite (= x2098 x424) x1435 (x418 x2098)))
(define-fun x357 ((x2098 Int)) Int (ite (= x2098 x2388) x101 (x793 x2098)))
(define-fun x1153 ((x2098 Int)) Int (ite (= x409 x2098) x2600 (x357 x2098)))
(define-fun x2280 ((x2098 Int)) Int (ite x1357 (x1371 x2098) (x1153 x2098)))
(define-fun x60 ((x2098 Int)) Int (ite (= x1262 x2098) x1852 (x2280 x2098)))
(define-fun x2468 ((x2098 Int)) Int (ite (= x2098 x612) x134 (x60 x2098)))
(define-fun x359 ((x2098 Int)) Int (ite (= x846 x2098) x2187 (x2468 x2098)))
(define-fun x289 ((x2098 Int)) Int (ite (= x994 x2098) x2697 (x359 x2098)))
(define-fun x2047 ((x2098 Int)) Int (ite (= x2098 x2875) x847 (x289 x2098)))
(define-fun x3090 ((x2098 Int)) Int (ite (= x2291 x2098) x3099 (x2047 x2098)))
(define-fun x2368 ((x2098 Int)) Int (ite (= x159 x2098) x538 (x3090 x2098)))
(define-fun x2366 ((x2098 Int)) Int (ite (= x2098 x663) x846 (x2368 x2098)))
(define-fun x388 ((x2098 Int)) Int (ite x2999 (x2468 x2098) (x2366 x2098)))
(define-fun x301 ((x2098 Int)) Int (ite (= x219 x2098) x612 (x388 x2098)))
(define-fun x787 ((x2098 Int)) Int (ite (= x2401 x2098) x2443 (x301 x2098)))
(define-fun x2950 ((x2098 Int)) Int (ite (= x2098 x2170) x417 (x787 x2098)))
(define-fun x1926 ((x2098 Int)) Int (ite (= x2792 x2098) x1581 (x2950 x2098)))
(define-fun x2213 ((x2098 Int)) Int (ite (= x2098 x2684) x2649 (x1926 x2098)))
(define-fun x2503 ((x2098 Int)) Int (ite (= x2098 x1685) x804 (x2213 x2098)))
(define-fun x2828 ((x2098 Int)) Int (ite (= x2098 x3024) x1154 (x2503 x2098)))
(define-fun x1866 ((x2098 Int)) Int (ite (and (< x2098 (+ x1489 x727)) (>= x2098 x727)) (x2605 (- (+ x2051 x2098) x727)) (x2828 x2098)))
(define-fun x1412 ((x2098 Int)) Int (ite x1195 (x2828 x2098) (x1866 x2098)))
(define-fun x2125 ((x2098 Int)) Int (ite (= x2654 x2098) x875 (x1412 x2098)))
(define-fun x1217 ((x2098 Int)) Int (ite (= x1141 x2098) x2333 (x2125 x2098)))
(define-fun x54 ((x2098 Int)) Int (ite (= x2098 x2774) x2722 (x1217 x2098)))
(define-fun x2473 ((x2098 Int)) Int (ite (= x2098 x1072) 128 (x54 x2098)))
(define-fun x1538 ((x2098 Int)) Int (ite (= x2098 x2834) x1532 (x2473 x2098)))
(define-fun x59 ((x2098 Int)) Int (ite (= x1282 x2098) x1757 (x1538 x2098)))
(define-fun x355 ((x2098 Int)) Int (ite (= x2098 x1530) x553 (x59 x2098)))
(define-fun x2704 ((x2098 Int)) Int (ite (= x2098 x3042) x1214 (x355 x2098)))
(define-fun x2273 ((x2098 Int)) Int (ite (= x2098 x110) x2870 (x2704 x2098)))
(define-fun x571 ((x2098 Int)) Int (ite x945 (x2704 x2098) (ite x2882 (x355 x2098) (ite x1609 (x59 x2098) (ite x3054 (x1538 x2098) (x2273 x2098))))))
(define-fun x896 ((x2098 Int)) Int (ite (= x2761 x2098) 0 (x571 x2098)))
(define-fun x2345 ((x2098 Int)) Int (ite (= x2838 x2098) x1738 (x896 x2098)))
(define-fun x236 ((x2098 Int)) Int (ite (= x2098 x1901) x1280 (x2345 x2098)))
(define-fun x2552 ((x2098 Int)) Int (ite x2231 (x1412 x2098) (x236 x2098)))
(define-fun x1859 ((x2098 Int)) Int (ite (= x2098 x2887) x2579 (x2552 x2098)))
(define-fun x1546 ((x2098 Int)) Int (ite (= x2098 x2028) x246 (x1859 x2098)))
(define-fun x391 ((x2098 Int)) Int (ite (= x2098 x1955) x2058 (x1546 x2098)))
(define-fun x959 ((x2098 Int)) Int (ite (= x2098 x2433) x1620 (x391 x2098)))
(define-fun x2869 ((x2098 Int)) Int (ite x1723 (x391 x2098) (ite x2209 (x1546 x2098) (ite x3075 (x1859 x2098) (ite x1326 (x2552 x2098) (x959 x2098))))))
(define-fun x2538 ((x2098 Int)) Int (ite (= x1292 x2098) x2059 (x2869 x2098)))
(define-fun x2588 ((x2098 Int)) Int (ite (= x2098 x1018) x1535 (x2538 x2098)))
(define-fun x977 ((x2098 Int)) Int (ite (= x2098 x1247) x2859 (x2588 x2098)))
(define-fun x2458 ((x2098 Int)) Int (ite (= x2098 x2440) x2423 (x977 x2098)))
(define-fun x2562 ((x2098 Int)) Int (ite (= x320 x2098) x2080 (x2458 x2098)))
(define-fun x271 ((x2098 Int)) Int (ite (= x2098 x1123) x2254 (x2562 x2098)))
(define-fun x1615 ((x2098 Int)) Int (ite (= x2098 x1947) x1933 (x271 x2098)))
(define-fun x1894 ((x2098 Int)) Int (ite (= x2105 x2098) x160 (x1615 x2098)))
(define-fun x505 ((x2098 Int)) Int (ite (= x2098 x1927) x1516 (x1894 x2098)))
(define-fun x2070 ((x2098 Int)) Int (ite (= x830 x2098) x29 (x505 x2098)))
(define-fun x413 ((x2098 Int)) Int (ite (= x2098 x398) x2075 (x2070 x2098)))
(define-fun x2558 ((x2098 Int)) Int (ite (= x1692 x2098) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x413 x2098)))
(define-fun x936 ((x2098 Int)) Int (ite (= x2098 x1373) x568 (x2558 x2098)))
(define-fun x2420 ((x2098 Int)) Int (ite (= x1587 x2098) x719 (x936 x2098)))
(define-fun x2655 ((x2098 Int)) Int (ite (= x1692 x2098) 0 (x2420 x2098)))
(define-fun x278 ((x2098 Int)) Int (ite (= x2098 x249) x934 (x2655 x2098)))
(define-fun x1304 ((x2098 Int)) Int (ite (= x618 x2098) x857 (x278 x2098)))
(define-fun x261 ((x2098 Int)) Int (ite (= x2098 x2265) x308 (x1304 x2098)))
(define-fun x2863 ((x2098 Int)) Int (ite (= x2098 x3083) x1150 (x261 x2098)))
(define-fun x1905 ((x2098 Int)) Int (ite (= x2098 x718) x18 (x2863 x2098)))
(define-fun x2501 ((x2098 Int)) Int (ite x2729 (ite x863 (x1905 x2098) (ite x879 (x1905 x2098) (x2420 x2098))) (x2420 x2098)))
(define-fun x3018 ((x2098 Int)) Int (ite (= x2098 x1681) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x2501 x2098)))
(define-fun x3002 ((x2098 Int)) Int (ite (= x2098 x3111) x6 (x3018 x2098)))
(define-fun x692 ((x2098 Int)) Int (ite (= x2144 x2098) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x3002 x2098)))
(define-fun x2005 ((x2098 Int)) Int (ite (and (> (+ x1681 32) x2098) (<= x1681 x2098)) (x786 (- x2098 x1681)) (x692 x2098)))
(define-fun x462 ((x2098 Int)) Int (ite x1155 (x2005 x2098) (x692 x2098)))
(define-fun x2123 ((x2098 Int)) Int (ite (and (>= x2098 x1681) (< x2098 (+ 32 x1681))) (x786 (- x2098 x1681)) (x462 x2098)))
(define-fun x773 ((x2098 Int)) Int (ite (= x248 x2098) x722 (x2123 x2098)))
(define-fun x2277 ((x2098 Int)) Int (ite (and (>= x2098 x123) (> (+ x123 x2173) x2098)) (x2605 (- (+ x2098 x2051) x123)) (x773 x2098)))
(define-fun x506 ((x2098 Int)) Int (ite x210 (x773 x2098) (x2277 x2098)))
(define-fun x1274 ((x2098 Int)) Int (ite (= x2098 x2191) x875 (x506 x2098)))
(define-fun x1935 ((x2098 Int)) Int (ite (= x2098 x740) x2493 (x1274 x2098)))
(define-fun x3040 ((x2098 Int)) Int (ite (= x124 x2098) x1059 (x1935 x2098)))
(define-fun x2826 ((x2098 Int)) Int (ite (= x2580 x2098) 128 (x3040 x2098)))
(define-fun x813 ((x2098 Int)) Int (ite (= x2098 x950) x1358 (x2826 x2098)))
(define-fun x1321 ((x2098 Int)) Int (ite (= x2098 x2316) x1811 (x813 x2098)))
(define-fun x305 ((x2098 Int)) Int (ite (= x9 x2098) x713 (x1321 x2098)))
(define-fun x2427 ((x2098 Int)) Int (ite (= x340 x2098) x2017 (x305 x2098)))
(define-fun x1653 ((x2098 Int)) Int (ite (= x2098 x2362) x3022 (x2427 x2098)))
(define-fun x2660 ((x2098 Int)) Int (ite x1249 (x2427 x2098) (ite x2406 (x305 x2098) (ite x2550 (x1321 x2098) (ite x1915 (x813 x2098) (x1653 x2098))))))
(define-fun x1997 ((x2098 Int)) Int (ite (= x1182 x2098) 0 (x2660 x2098)))
(define-fun x1300 ((x2098 Int)) Int (ite (= x2098 x63) x1354 (x1997 x2098)))
(define-fun x436 ((x2098 Int)) Int (ite (= x710 x2098) x810 (x1300 x2098)))
(define-fun x317 ((x2098 Int)) Int (ite x164 (x506 x2098) (x436 x2098)))
(define-fun x817 ((x2098 Int)) Int (ite (= x2098 x665) x1754 (x317 x2098)))
(define-fun x85 ((x2098 Int)) Int (ite (= x2098 x2782) x2585 (x817 x2098)))
(define-fun x351 ((x2098 Int)) Int (ite (= x1392 x2098) x1895 (x85 x2098)))
(define-fun x2812 ((x2098 Int)) Int (ite (= x2098 x823) x2188 (x351 x2098)))
(define-fun x416 ((x2098 Int)) Int (ite x2298 (x351 x2098) (ite x937 (x85 x2098) (ite x2270 (x817 x2098) (ite x1743 (x317 x2098) (x2812 x2098))))))
(define-fun x1254 ((x2098 Int)) Int (ite (= x2098 x1451) x1791 (x416 x2098)))
(define-fun x3126 ((x2098 Int)) Int (ite (= x2098 x675) x1535 (x1254 x2098)))
(define-fun x1640 ((x2098 Int)) Int (ite (= x2056 x2098) x2612 (x3126 x2098)))
(define-fun x565 ((x2098 Int)) Int (ite (= x2098 x2378) x1767 (x1640 x2098)))
(define-fun x2744 ((x2098 Int)) Int (ite (= x1786 x2098) x1912 (x565 x2098)))
(define-fun x510 ((x2098 Int)) Int (ite (= x2098 x513) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x2744 x2098)))
(define-fun x1348 ((x2098 Int)) Int (ite (= x921 x2098) x644 (x510 x2098)))
(define-fun x595 ((x2098 Int)) Int (ite (and (<= x513 x2098) (< x2098 (+ 32 x513))) (x313 (- x2098 x513)) (x1348 x2098)))
(define-fun x2764 ((x2098 Int)) Int (ite x900 (x595 x2098) (x1348 x2098)))
(define-fun x1496 ((x2098 Int)) Int (ite (and (>= x2098 x513) (> (+ 32 x513) x2098)) (x313 (- x2098 x513)) (x2764 x2098)))
(define-fun x1391 ((x2098 Int)) Int (ite (= x2098 x989) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x1496 x2098)))
(define-fun x723 ((x2098 Int)) Int (ite (= x2307 x2098) x2 (x1391 x2098)))
(define-fun x965 ((x2098 Int)) Int (ite (and (> (+ x989 32) x2098) (>= x2098 x989)) (x1203 (- x2098 x989)) (x723 x2098)))
(define-fun x1918 ((x2098 Int)) Int (ite x361 (x965 x2098) (x723 x2098)))
(define-fun x1045 ((x2098 Int)) Int (ite (and (<= x989 x2098) (> (+ 32 x989) x2098)) (x1203 (- x2098 x989)) (x1918 x2098)))
(define-fun x2439 ((x2098 Int)) Int (ite (= x2478 x2098) x1522 (x1045 x2098)))
(define-fun x485 ((x2098 Int)) Int (ite (= x1472 x2098) 0 (x2439 x2098)))
(define-fun x191 ((x2098 Int)) Int (ite (= x2098 x2504) 0 (x485 x2098)))
(define-fun x208 ((x2098 Int)) Int (ite (= x2098 x1005) 0 (x191 x2098)))
(define-fun x517 ((x2098 Int)) Int (ite (= x2098 x1608) 0 (x208 x2098)))
(define-fun x374 ((x2098 Int)) Int (ite (= x56 x2098) 0 (x517 x2098)))
(define-fun x2115 ((x2098 Int)) Int (ite (= x2098 x338) x1472 (x374 x2098)))
(define-fun x1060 ((x2098 Int)) Int (ite (= x2145 x2098) 0 (x2115 x2098)))
(define-fun x185 ((x2098 Int)) Int (ite (= x2098 x659) 0 (x1060 x2098)))
(define-fun x1414 ((x2098 Int)) Int (ite (= x1682 x2098) 0 (x185 x2098)))
(define-fun x1047 ((x2098 Int)) Int (ite (= x2422 x2098) 0 (x1414 x2098)))
(define-fun x2032 ((x2098 Int)) Int (ite (= x2098 x1576) 0 (x1047 x2098)))
(define-fun x2334 ((x2098 Int)) Int (ite (= x2098 x408) x2145 (x2032 x2098)))
(define-fun x1976 ((x2098 Int)) Int (ite x1194 (x2439 x2098) (ite x849 (x2115 x2098) (x2334 x2098))))
(define-fun x2635 ((x2098 Int)) Int (ite (= x79 x2098) x1014 (x1976 x2098)))
(define-fun x322 ((x2098 Int)) Int (ite (= x2098 x2079) 0 (x2635 x2098)))
(define-fun x619 ((x2098 Int)) Int (ite (= x2098 x575) x2534 (x322 x2098)))
(define-fun x2112 ((x2098 Int)) Int (ite (= x2098 x2431) x1266 (x619 x2098)))
(define-fun x873 ((x2098 Int)) Int (ite (= x2598 x2098) x2978 (x2112 x2098)))
(define-fun x626 ((x2098 Int)) Int (ite (= x2098 x1243) x79 (x873 x2098)))
(define-fun x763 ((x2098 Int)) Int (ite x963 (x1976 x2098) (x626 x2098)))
(define-fun x2924 ((x2098 Int)) Int (ite (= x862 x2098) 2 (x763 x2098)))
(define-fun x100 ((x2098 Int)) Int (ite (= x2098 x909) 0 (x2924 x2098)))
(define-fun x1691 ((x2098 Int)) Int (ite (= x1016 x2098) x1132 (x100 x2098)))
(define-fun x25 ((x2098 Int)) Int (ite (= x2098 x1410) x2434 (x1691 x2098)))
(define-fun x2559 ((x2098 Int)) Int (ite (= x1954 x2098) x893 (x25 x2098)))
(define-fun x1375 ((x2098 Int)) Int (ite (= x731 x2098) x862 (x2559 x2098)))
(define-fun x1502 ((x2098 Int)) Int (ite (= x79 x2098) x22 (x1976 x2098)))
(define-fun x2276 ((x2098 Int)) Int (ite (= x2532 x2098) x577 (x1502 x2098)))
(define-fun x2980 ((x2098 Int)) Int (ite (= x2098 x152) x555 (x2276 x2098)))
(define-fun x272 ((x2098 Int)) Int (ite (= x1213 x2098) x495 (x2980 x2098)))
(define-fun x2996 ((x2098 Int)) Int (ite (= x2348 x2098) x3115 (x272 x2098)))
(define-fun x61 ((x2098 Int)) Int (ite (= x2098 x1031) x79 (x2996 x2098)))
(define-fun x641 ((x2098 Int)) Int (ite x677 (x1976 x2098) (x61 x2098)))
(define-fun x1660 ((x2098 Int)) Int (ite x1693 (ite x1051 (x763 x2098) (x1375 x2098)) (ite x1851 (x1976 x2098) (x641 x2098))))
(define-fun x1541 ((x2098 Int)) Int (ite (= x2098 x839) 0 (x1660 x2098)))
(define-fun x227 ((x2098 Int)) Int (ite (= x2098 x99) x1279 (x1541 x2098)))
(define-fun x2884 ((x2098 Int)) Int (ite (= x2098 x2219) x572 (x227 x2098)))
(define-fun x1244 ((x2098 Int)) Int (ite (= x753 x2098) x1648 (x2884 x2098)))
(define-fun x1355 ((x2098 Int)) Int (ite (= x1006 x2098) x1566 (x1244 x2098)))
(define-fun x2749 ((x2098 Int)) Int (ite (= x839 x2098) 32 (x1355 x2098)))
(define-fun x850 ((x2098 Int)) Int (ite (= x2098 x2576) 0 (x2749 x2098)))
(define-fun x1226 ((x2098 Int)) Int (ite x519 (x1355 x2098) (x850 x2098)))
(define-fun x2578 ((x2098 Int)) Int (ite (= x839 x2098) x1659 (x1226 x2098)))
(define-fun x1991 ((x2098 Int)) Int (ite (= x2098 x788) x789 (x2578 x2098)))
(define-fun x1574 ((x2098 Int)) Int (ite (= x366 x2098) x1827 (x1991 x2098)))
(define-fun x1210 ((x2098 Int)) Int (ite (= x1717 x2098) x2808 (x1574 x2098)))
(define-fun x2124 ((x2098 Int)) Int (ite x651 (x1541 x2098) (x1210 x2098)))
(define-fun x2000 ((x2098 Int)) Int (ite x1636 (x1541 x2098) (x2124 x2098)))
(define-fun x1429 ((x2098 Int)) Int (ite (= x2098 x2517) x2912 (x2000 x2098)))
(define-fun x726 ((x2098 Int)) Int (ite (= x2098 x2410) x2478 (x1429 x2098)))
(define-fun x932 ((x2098 Int)) Int (ite (= x23 x2098) x3029 (x726 x2098)))
(define-fun x891 ((x2098 Int)) Int (ite (= x446 x2098) x1270 (x932 x2098)))
(define-fun x225 ((x2098 Int)) Int (ite (= x2098 x658) x3066 (x891 x2098)))
(define-fun x523 ((x2098 Int)) Int (ite (= x1959 x2098) x469 (x225 x2098)))
(define-fun x1080 ((x2098 Int)) Int (ite (= x2055 x2098) x3098 (x523 x2098)))
(define-fun x1467 ((x2098 Int)) Int (ite (= x2098 x2739) x2416 (x1080 x2098)))
(define-fun x1832 ((x2098 Int)) Int (ite (= x1022 x2098) x544 (x1467 x2098)))
(define-fun x1190 ((x2098 Int)) Int (ite (= x2160 x2098) x2236 (x1832 x2098)))
(define-fun x3059 ((x2098 Int)) Int (ite (and (> (+ x2177 x895) x2098) (<= x895 x2098)) (x2605 (- (+ x2098 x2051) x895)) (x1190 x2098)))
(define-fun x2546 ((x2098 Int)) Int (ite x3110 (x2948 x2098) (x458 x2098)))
(define-fun x389 ((x2098 Int)) Int (ite x2799 (x1190 x2098) (x3059 x2098)))
(define-fun x2020 ((x2098 Int)) Int (ite (= x2098 x1285) x287 (x389 x2098)))
(define-fun x2877 ((x2098 Int)) Int (ite (and (> (+ x128 x2510) x2098) (<= x128 x2098)) (x2605 (- (+ x2098 x2051) x128)) (x2020 x2098)))
(define-fun x1437 ((x2098 Int)) Int (ite x2793 (x2020 x2098) (x2877 x2098)))
(define-fun x3043 ((x2098 Int)) Int (ite (= x2098 x2520) x2582 (x1437 x2098)))
(define-fun x2158 ((x2098 Int)) Int (ite (= x2098 x461) x1770 (x3043 x2098)))
(define-fun x2916 ((x2098 Int)) Int (ite (= x229 x2098) x2374 (x2158 x2098)))
(define-fun x1630 ((x2098 Int)) Int (ite (= x2098 x1362) x2339 (x2916 x2098)))
(define-fun x831 ((x2098 Int)) Int (ite (= x2098 x1165) x2320 (x1630 x2098)))
(define-fun x587 ((x2098 Int)) Int (ite (= x1975 x2098) x31 (x831 x2098)))
(define-fun x399 ((x2098 Int)) Int (ite (= x1578 x2098) x1310 (x587 x2098)))
(define-fun x393 ((x2098 Int)) Int (ite (= x2098 x1339) x940 (x399 x2098)))
(define-fun x2763 ((x2098 Int)) Int (ite x1870 (x1437 x2098) (x393 x2098)))
(define-fun x2146 ((x2098 Int)) Int (ite (= x2098 x197) x875 (x2763 x2098)))
(define-fun x2897 ((x2098 Int)) Int (ite (= x2098 x1043) x742 (x2146 x2098)))
(define-fun x2831 ((x2098 Int)) Int (ite (= x2098 x1286) x2898 (x2897 x2098)))
(define-fun x685 ((x2098 Int)) Int (ite (= x775 x2098) 128 (x2831 x2098)))
(define-fun x1944 ((x2098 Int)) Int (ite (= x2098 x221) x957 (x685 x2098)))
(define-fun x264 ((x2098 Int)) Int (ite (= x2098 x2171) x2184 (x1944 x2098)))
(define-fun x3070 ((x2098 Int)) Int (ite (= x1476 x2098) x1302 (x264 x2098)))
(define-fun x729 ((x2098 Int)) Int (ite (= x2292 x2098) x1709 (x3070 x2098)))
(define-fun x2571 ((x2098 Int)) Int (ite (= x73 x2098) x118 (x729 x2098)))
(define-fun x2640 ((x2098 Int)) Int (ite x625 (x729 x2098) (ite x1291 (x3070 x2098) (ite x2929 (x264 x2098) (ite x3001 (x1944 x2098) (x2571 x2098))))))
(define-fun x2015 ((x2098 Int)) Int (ite (= x2098 x1661) 0 (x2640 x2098)))
(define-fun x1798 ((x2098 Int)) Int (ite (= x2098 x459) x2228 (x2015 x2098)))
(define-fun x596 ((x2098 Int)) Int (ite (= x1447 x2098) x373 (x1798 x2098)))
(define-fun x962 ((x2098 Int)) Int (ite x1377 (x2763 x2098) (x596 x2098)))
(define-fun x1625 ((x2098 Int)) Int (ite (= x102 x2098) x1480 (x962 x2098)))
(define-fun x1271 ((x2098 Int)) Int (ite (= x2098 x2221) x36 (x1625 x2098)))
(define-fun x2626 ((x2098 Int)) Int (ite (= x854 x2098) x1399 (x1271 x2098)))
(define-fun x273 ((x2098 Int)) Int (ite (= x2098 x2305) x2711 (x2626 x2098)))
(define-fun x2274 ((x2098 Int)) Int (ite x2549 (x2626 x2098) (ite x1965 (x1271 x2098) (ite x2148 (x1625 x2098) (ite x1231 (x962 x2098) (x273 x2098))))))
(define-fun x2066 ((x2098 Int)) Int (ite (= x1728 x2098) x1622 (x2274 x2098)))
(define-fun x51 ((x2098 Int)) Int (ite (= x643 x2098) x1458 (x2066 x2098)))
(define-fun x1509 ((x2098 Int)) Int (ite (= x2551 x2098) x2682 (x51 x2098)))
(define-fun x878 ((x2098 Int)) Int (ite (= x2036 x2098) x2512 (x1509 x2098)))
(define-fun x1623 ((x2098 Int)) Int (ite (= x2098 x599) x2383 (x878 x2098)))
(define-fun x465 ((x2098 Int)) Int (ite x1665 (x878 x2098) (ite x1083 (x1509 x2098) (ite x1273 (x51 x2098) (ite x407 (x2066 x2098) (x1623 x2098))))))
(define-fun x3095 ((x2098 Int)) Int (ite (= x2098 x377) x2111 (x465 x2098)))
(define-fun x2480 ((x2098 Int)) Int (ite (= x2098 x794) x2998 (x3095 x2098)))
(define-fun x3093 ((x2098 Int)) Int (ite (= x383 x2098) x1448 (x2480 x2098)))
(define-fun x2068 ((x2098 Int)) Int (ite (= x2098 x19) x1565 (x3093 x2098)))
(define-fun x439 ((x2098 Int)) Int (ite (= x2098 x2857) x1275 (x2068 x2098)))
(define-fun x97 ((x2098 Int)) Int (ite (= x1967 x2098) x415 (x439 x2098)))
(define-fun x1863 ((x2098 Int)) Int (ite (= x1618 x2098) x835 (x97 x2098)))
(define-fun x259 ((x2098 Int)) Int (ite (= x2133 x2098) x2108 (x1863 x2098)))
(define-fun x2011 ((x2098 Int)) Int (ite (= x2098 x1041) x1779 (x259 x2098)))
(define-fun x2328 ((x2098 Int)) Int (ite (= x2098 x1336) x163 (x2011 x2098)))
(define-fun x2676 ((x2098 Int)) Int (ite (= x2098 x3058) x666 (x2328 x2098)))
(define-fun x353 ((x2098 Int)) Int (ite (= x2303 x2098) x724 (x2676 x2098)))
(define-fun x277 ((x2098 Int)) Int (ite (= x2098 x500) 0 (x353 x2098)))
(define-fun x1029 ((x2098 Int)) Int (ite (= x2098 x2695) 0 (x277 x2098)))
(define-fun x2250 ((x2098 Int)) Int (ite (= x1115 x2098) x500 (x1029 x2098)))
(define-fun x1810 ((x2098 Int)) Int (ite (= x2098 x304) 0 (x2250 x2098)))
(define-fun x1174 ((x2098 Int)) Int (ite (= x2613 x2098) 0 (x1810 x2098)))
(define-fun x1963 ((x2098 Int)) Int (ite (= x2098 x2119) x304 (x1174 x2098)))
(define-fun x1094 ((x2098 Int)) Int (ite x1220 (x353 x2098) (ite x362 (x2250 x2098) (x1963 x2098))))
(define-fun x2748 ((x2098 Int)) Int (ite (= x1572 x2098) x1345 (x1094 x2098)))
(define-fun x35 ((x2098 Int)) Int (ite (= x2098 x311) x1515 (x2748 x2098)))
(define-fun x1688 ((x2098 Int)) Int (ite (= x983 x2098) x1572 (x35 x2098)))
(define-fun x3011 ((x2098 Int)) Int (ite x2921 (x1094 x2098) (x1688 x2098)))
(define-fun x1600 ((x2098 Int)) Int (ite (= x2098 x2575) 32542679537407071897843112657522291873774333932075415528008786499928730894336 (x3011 x2098)))
(define-fun x2156 ((x2098 Int)) Int (ite (= x2098 x1564) x428 (x1600 x2098)))
(define-fun x2041 ((x2098 Int)) Int (ite (= x1772 x2098) 64 (x2156 x2098)))
(define-fun x2894 ((x2098 Int)) Int (ite (= x2098 x805) x2206 (x2041 x2098)))
(define-fun x799 ((x2098 Int)) Int (ite (= x2098 x2784) x1579 (x2894 x2098)))
(define-fun x480 ((x2098 Int)) Int (ite (= x907 x2098) x1104 (x799 x2098)))
(define-fun x1928 ((x2098 Int)) Int (ite x1646 (x2894 x2098) (x480 x2098)))
(define-fun x89 ((x2098 Int)) Int (ite (and (> x2575 x2098) (<= x2575 x2098)) (x2911 (- x2098 x2575)) (x1928 x2098)))
(define-fun x2555 ((x2098 Int)) Int (ite (= x2098 x2575) 95932229227554293267862761608555258089024927314852490146714677558661980618752 (x89 x2098)))
(define-fun x2026 ((x2098 Int)) Int (ite (= x2098 x1277) x1765 (x2555 x2098)))
(define-fun x2984 ((x2098 Int)) Int (ite (= x2098 x3104) x708 (x2026 x2098)))
(define-fun x1641 ((x2098 Int)) Int (ite (and (>= x2098 x2575) (< x2098 x2575)) (x1945 (- x2098 x2575)) (x2984 x2098)))
(define-fun x1627 ((x2098 Int)) Int (ite x3110 (x89 x2098) (x1641 x2098)))
(define-fun x1528 ((x2098 Int)) Int (ite x335 (x452 x2098) (ite x3110 (x452 x2098) (x1246 x2098))))
(define-fun x580 ((x2098 Int)) Int (ite x335 (x89 x2098) (x1627 x2098)))
(define-fun x324 ((x2098 Int)) Int (ite x335 (x2948 x2098) (ite x3110 (x2948 x2098) (x458 x2098))))
(define-fun x2888 ((x2098 Int)) Int (ite (= x2575 x2098) 0 (x580 x2098)))
(define-fun x2336 ((x2098 Int)) Int (ite (= x1942 x2098) 0 (x2888 x2098)))
(define-fun x1474 ((x2098 Int)) Int (ite (= x2098 x1744) 0 (x2336 x2098)))
(define-fun x1761 ((x2098 Int)) Int (ite (= x2098 x2586) 0 (x1474 x2098)))
(define-fun x2067 ((x2098 Int)) Int (ite (= x1960 x2098) 88383320980755791914082775550597828907713979028428263264130000526486271950848 (x1761 x2098)))
(define-fun x627 ((x2098 Int)) Int (ite (= x2098 x2889) x881 (x2067 x2098)))
(define-fun x2207 ((x2098 Int)) Int (ite (and (<= x1960 x2098) (> (+ x1960 32) x2098)) (x341 (- x2098 x1960)) (x627 x2098)))
(define-fun x1624 ((x2098 Int)) Int (ite x2841 (x2207 x2098) (x627 x2098)))
(define-fun x2249 ((x2098 Int)) Int (ite (and (<= x1960 x2098) (> (+ 32 x1960) x2098)) (x341 (- x2098 x1960)) (x1624 x2098)))
(define-fun x1994 ((x2098 Int)) Int (ite (= x1700 x2098) 111117225372770300986259473995147604481826136133417213952520719377678811004928 (x2249 x2098)))
(define-fun x1972 ((x2098 Int)) Int (ite (= x76 x2098) x1864 (x1994 x2098)))
(define-fun x1591 ((x2098 Int)) Int (ite (= x1838 x2098) x1871 (x1972 x2098)))
(define-fun x672 ((x2098 Int)) Int (ite (= x776 x2098) x908 (x1591 x2098)))
(define-fun x2975 ((x2098 Int)) Int (ite (= x148 x2098) x2964 (x672 x2098)))
(define-fun x579 ((x2098 Int)) Int (ite (= x2183 x2098) 160 (x2975 x2098)))
(define-fun x1012 ((x2098 Int)) Int (ite (= x2098 x1533) x1526 (x579 x2098)))
(define-fun x1610 ((x2098 Int)) Int (ite (= x2098 x2269) x2043 (x1012 x2098)))
(define-fun x1559 ((x2098 Int)) Int (ite (= x2098 x2827) x1527 (x1610 x2098)))
(define-fun x606 ((x2098 Int)) Int (ite (= x2098 x944) x1422 (x1559 x2098)))
(define-fun x420 ((x2098 Int)) Int (ite (= x412 x2098) x2923 (x606 x2098)))
(define-fun x2958 ((x2098 Int)) Int (ite x2852 (x606 x2098) (ite x2354 (x1559 x2098) (ite x812 (x1610 x2098) (ite x2839 (x1012 x2098) (x420 x2098))))))
(define-fun x866 ((x2098 Int)) Int (ite (= x2205 x2098) 0 (x2958 x2098)))
(define-fun x1829 ((x2098 Int)) Int (ite (and (< x2098 x1700) (>= x2098 x1700)) (x1820 (- x2098 x1700)) (x866 x2098)))
(define-fun x1088 ((x2098 Int)) Int (ite x325 (x1829 x2098) (x866 x2098)))
(define-fun x1599 ((x2098 Int)) Int (ite x2462 (x580 x2098) (ite x1133 (x1761 x2098) (x1088 x2098))))
(define-fun x492 ((x2098 Int)) Int (ite x1133 (x324 x2098) (ite x325 (x2680 x2098) (x324 x2098))))
(define-fun x1781 ((x2098 Int)) Int (ite x2462 (x324 x2098) (x492 x2098)))
(define-fun x1787 ((x2098 Int)) Int (ite (= x586 x2098) x428 (x1599 x2098)))
(define-fun x652 ((x2098 Int)) Int (ite (= x2098 x2666) 288 (x1787 x2098)))
(define-fun x2162 ((x2098 Int)) Int (ite (= x2568 x2098) x2342 (x652 x2098)))
(define-fun x2413 ((x2098 Int)) Int (ite (= x2737 x2098) x1074 (x2162 x2098)))
(define-fun x951 ((x2098 Int)) Int (ite (= x2098 x1492) x1444 (x2413 x2098)))
(define-fun x1408 ((x2098 Int)) Int (ite (= x105 x2098) x1314 (x951 x2098)))
(define-fun x1670 ((x2098 Int)) Int (ite x1989 (x1168 x2098) (ite x2462 (x324 x2098) (x492 x2098))))
(define-fun x106 ((x2098 Int)) Int 0)
(define-fun x803 ((x2098 Int)) Int (ite (= x2449 x2098) x1376 (x1408 x2098)))
(define-fun x1028 ((x2098 Int)) Int (ite x2805 (x1408 x2098) (ite x2092 (x951 x2098) (ite x232 (x2413 x2098) (ite x884 (x2162 x2098) (x803 x2098))))))
(define-fun x975 ((x2098 Int)) Int (ite (= x2456 x2098) 0 (x1028 x2098)))
(define-fun x1407 ((x2098 Int)) Int (ite (= x2098 x2211) x2114 (x975 x2098)))
(define-fun x2289 ((x2098 Int)) Int (ite (= x2098 x981) x220 (x1407 x2098)))
(define-fun x564 ((x2098 Int)) Int (ite (= x2920 x2098) x336 (x2289 x2098)))
(define-fun x2335 ((x2098 Int)) Int (x819 x2098))
(define-fun x809 ((x2098 Int)) Int (ite (= x2098 x526) x2002 (x564 x2098)))
(define-fun x1078 ((x2098 Int)) Int (ite (= x252 x2098) x1303 (x809 x2098)))
(define-fun x1118 ((x2098 Int)) Int (ite (= x1819 x2098) x1212 (x1078 x2098)))
(define-fun x690 ((x2098 Int)) Int (ite (= x2098 x967) x901 (x1118 x2098)))
(define-fun x899 ((x2098 Int)) Int (ite (= x2098 x98) x1406 (x690 x2098)))
(define-fun x1695 ((x2098 Int)) Int (ite x1992 (x564 x2098) (x899 x2098)))
(define-fun x2865 ((x2098 Int)) Int (ite (= x2098 x401) x2414 (x1695 x2098)))
(define-fun x2488 ((x2098 Int)) Int (ite (= x2098 x1800) x2279 (x2865 x2098)))
(define-fun x2926 ((x2098 Int)) Int (ite (= x2943 x2098) x1179 (x2488 x2098)))
(define-fun x1108 ((x2098 Int)) Int (ite (= x856 x2098) x1295 (x2926 x2098)))
(define-fun x130 ((x2098 Int)) Int (ite (= x2098 x3086) x1848 (x1108 x2098)))
(define-fun x871 ((x2098 Int)) Int (ite (= x2098 x734) 96 (x130 x2098)))
(define-fun x2677 ((x2098 Int)) Int (ite x325 (x2680 x2098) (x324 x2098)))
(assert (= x617 (and x2759 (not x1312))))
(assert (x2891 x2415))
(assert (x2891 x2083))
(assert (> (x2282 x213 x93 x2128 x3006 x1758) 10000))
(assert (=> (>= 10000 x140) (= (x1471 x140) 0)))
(assert (= 0 (x1471 111717504842162250273123531270270194031611963357183166590777697365354585522176)))
(assert (x2891 x2737))
(assert (x2891 x2702))
(assert (x2891 x1413))
(assert (x2891 x3024))
(assert (x2891 x681))
(assert (= x2799 (and x3020 x397)))
(assert (x2891 x1440))
(assert (= x1958 (x623 (x2577 x1958 x1733))))
(assert (x2891 x777))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (= x1370 (x237 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783))))
(assert (= (x2577 x2614 x2796) (x1471 (x2577 x2614 x2796))))
(assert (x2891 x2108))
(assert (x2891 x2747))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639747)))
(assert (x2891 x251))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755)))
(assert (x2700 x646))
(assert (= (x1466 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707)) x2514))
(assert (x2891 x2663))
(assert (x2891 x869))
(assert (x2891 x2196))
(assert (= (and x1752 x2589) x200))
(assert (x2891 x1539))
(assert (= x2549 (and (not x653) x200)))
(assert (= (x623 (x2282 x3036 x2430 x2829 x1232 x1135)) x3036))
(assert (x2891 x620))
(assert (= (and x2451 x2917) x705))
(assert (x2891 x1406))
(assert (= (and x2683 x2285) x2688))
(assert (x2891 x496))
(assert (x2891 x1242))
(assert (x2891 x218))
(assert (= x2840 (x533 (x1814 x169 x2840 x174 x1250))))
(assert (x2891 x1074))
(assert (x2327 x1335))
(assert (x2891 x2974))
(assert (x2891 x2400))
(assert (= x370 (=> (and (= (x2626 x3028) x2711) (= x2901 (x3072 (+ x3028 32))) (= x1042 (x3072 (+ x2305 32))) (= x3128 (not (> x1876 4)))) (and x3128 (=> (and (= x2901 x2186) (= x2426 4) (= x377 x1042)) x2757)))))
(assert (= (x1471 79228162514264337593543950336) 0))
(assert (x2891 x2879))
(assert (=> (>= 10000 x434) (= (x1471 x434) 0)))
(assert (x2891 x958))
(assert (= (x103 (x1814 x2465 x1170 x1614 x2862)) x1614))
(assert (x2700 x2787))
(assert (= (=> (and (= (x2763 x23) x43) (= (> x883 0) x602) (= (x2763 x43) x883)) (and (=> (and (not x602) (and (= x1728 x459) (= x23 x1322))) x2939) (=> (and (and (= x775 (x3072 (+ 32 x1286))) (= x1286 (x3072 (+ 32 x1043))) (= (x2763 x23) x2392) (= (x3072 (+ x197 32)) x1043) (= (x3072 (+ 32 x2484)) x743) (= (x2763 x2392) x2142) (= x255 (x2763 x1890)) (= (x2763 x2215) x2484) (= (> x957 0) x2621) (= x1675 (x3072 (+ x2392 32))) (= (x3072 (+ x1460 32)) x2215) (= x2898 (x2763 x1460)) (= (x2502 1461501637330902918203684832716283019655932542975 x255) x742) (= x1890 (x2763 x1675)) (= x1460 (x3072 (+ 32 x1890))) (= x221 (x3072 (+ 128 x197))) (= x957 (x685 x2484)) (<= 1 x2142) (= (x3072 (+ 32 x221)) x2171) (= (x3072 (+ x459 32)) x197)) x602) (and (=> (not x2621) x3013) (=> (and (and (= x2285 (< 32 x957)) (= (x1944 x743) x2184)) x2621) (and (=> (not x2285) x3013) (=> (and x2285 (and (= x1302 (x264 x2398)) (= x2398 (x3072 (+ 32 x743))) (= (> x957 64) x2743) (= (x3072 (+ x2171 32)) x1476))) (and (=> (and x2743 (and (= (x3072 (+ x2171 64)) x2292) (= (x3072 (+ x743 64)) x2554) (= x2262 (> x957 96)) (= (x3070 x2554) x1709))) (and (=> x2262 x2733) (=> (not x2262) x3013))) (=> (not x2743) x3013))))))))) x1797))
(assert (=> (<= x2340 10000) (= 0 (x1471 x2340))))
(assert (= x991 (x533 (x1504 x1958 x991 x431 x1015 x1639 x454))))
(assert (x2891 x2847))
(assert (x2891 x2039))
(assert (x2891 x2990))
(assert (=> (>= 10000 x668) (= (x1471 x668) 0)))
(assert (=> (<= x1117 10000) (= 0 (x1471 x1117))))
(assert (= (or x164 x1095) x2052))
(assert (x2891 x675))
(assert (x2891 x2687))
(assert (x2891 x607))
(assert (=> (>= 10000 x245) (= (x1471 x245) 0)))
(assert (x2891 x2765))
(assert (x2891 x1132))
(assert (x2891 x256))
(assert (x2891 x1735))
(assert (= x8 (x103 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754))))
(assert (x2891 x142))
(assert (x2891 x613))
(assert (=> (>= 10000 x2860) (= (x1471 x2860) 0)))
(assert (= (and x2893 (not x2161)) x2462))
(assert (x2891 x2188))
(assert (x2891 x1460))
(assert (x2891 x2576))
(assert (=> (<= x3048 10000) (= (x1471 x3048) 0)))
(assert (= (x1471 (x1159 x1126 x1498 x2867)) (x1159 x1126 x1498 x2867)))
(assert (= (x2319 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)) x1956))
(assert (= (x533 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808)) x2332))
(assert (< 10000 (x2282 x2623 x1340 x2860 x3121 x640)))
(assert (= x93 (x533 (x2282 x213 x93 x2128 x3006 x1758))))
(assert (x2891 x2246))
(assert (= (x623 (x2282 x2623 x1340 x2860 x3121 x640)) x2623))
(assert (x2891 x1211))
(assert (= (x1471 (x2577 x1126 x358)) (x2577 x1126 x358)))
(assert (x2891 x2186))
(assert (x2891 x253))
(assert (= x2623 (x623 (x1159 x2623 x1644 x654))))
(assert (x2891 x1476))
(assert (x2891 x1237))
(assert (x2891 x1472))
(assert (=> (>= 10000 x2093) (= 0 (x1471 x2093))))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639615))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (x2891 x1503))
(assert (x2891 x1871))
(assert (x2891 x1014))
(assert (x2891 x1154))
(assert (= (x1471 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998)) (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998)))
(assert (= (x2282 x1672 x2397 x1980 x1713 x482) (x1471 (x2282 x1672 x2397 x1980 x1713 x482))))
(assert (= (x533 (x2577 x2623 x2802)) x2802))
(assert (=> (>= 10000 x202) (= (x1471 x202) 0)))
(assert (x2891 x1449))
(assert (x800 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x2891 x2874))
(assert (x2891 x76))
(assert (= (or x141 x2799) x2925))
(assert (x2891 x2545))
(assert (x2891 x2667))
(assert (= x3089 (x1466 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347))))
(assert (= (x2577 x7 x912) (x1471 (x2577 x7 x912))))
(assert (x2891 x2472))
(assert (= (and x1656 x288) x2641))
(assert (=> (>= 10000 x1109) (= 0 (x1471 x1109))))
(assert (=> (<= x2486 10000) (= (x1471 x2486) 0)))
(assert (not (x800 (x2282 x1483 x2545 x2565 x422 x2663))))
(assert (= (x237 (x2282 x3036 x2430 x2829 x1232 x1135)) x1232))
(assert (x2891 x323))
(assert (= x2486 (x533 (x2577 x1672 x2486))))
(assert (x2891 x1295))
(assert (=> (>= 10000 x958) (= (x1471 x958) 0)))
(assert (x2891 x1724))
(assert (x2891 x2187))
(assert (x2891 x1518))
(assert (x2891 x1452))
(assert (x2891 x2290))
(assert (= (x533 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)) x2983))
(assert (=> (<= x1441 10000) (= (x1471 x1441) 0)))
(assert (= (and x1330 (not x509)) x1553))
(assert (x2891 x688))
(assert (x2891 x326))
(assert (x2891 x14))
(assert (x2891 x862))
(assert (= (and x403 x1411) x2790))
(assert (= (x1466 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)) x990))
(assert (x2891 x2530))
(assert (x2891 x299))
(assert (x2891 x2512))
(assert (x2891 x2603))
(assert (x2891 x1775))
(assert (= x1649 (x103 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750))))
(assert (= x1920 (or x3003 x2218)))
(assert (x2891 x1696))
(assert (= (x1466 (x1258 x169 x138 x1801 x3057 x421 x1443 x474)) x1443))
(assert (= x1511 (x533 (x2282 x2707 x1511 x1341 x3019 x433))))
(assert (x2891 x1791))
(assert (=> (>= 10000 x993) (= (x1471 x993) 0)))
(assert (x2891 x2633))
(assert (x2891 x1018))
(assert (=> (>= 10000 x1913) (= 0 (x1471 x1913))))
(assert (< 10000 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755)))
(assert (= x2696 (and x2522 x487)))
(assert (x2891 x827))
(assert (x2891 x1687))
(assert (= (and x1716 x1669) x2507))
(assert (= x3036 (x623 (x1504 x3036 x1405 x426 x1138 x1642 x790))))
(assert (x2891 x2573))
(assert (x2891 x1940))
(assert (x2891 x1308))
(assert (x2891 x832))
(assert (x2891 x865))
(assert (= x434 (x1466 (x1504 x1603 x281 x2281 x3118 x2424 x434))))
(assert (x2891 x437))
(assert (x2891 x578))
(assert (x2891 x593))
(assert (= (x103 (x2282 x213 x93 x2128 x3006 x1758)) x2128))
(assert (= (x1471 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808)) (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808)))
(assert (= x2878 (x237 (x1504 x7 x2603 x2561 x2878 x2669 x1308))))
(assert (> (x2282 x3036 x2430 x2829 x1232 x1135) 10000))
(assert (x2891 x1844))
(assert (= x2839 (and (not x1411) x403)))
(assert (x2891 x114))
(assert (x2891 x1680))
(assert (=> (>= 10000 x918) (= (x1471 x918) 0)))
(assert (= (x103 (x2282 x7 x547 x2736 x354 x1320)) x2736))
(assert (=> (<= x455 10000) (= 0 (x1471 x455))))
(assert (x2891 x2361))
(assert (x2891 x1879))
(assert (x2891 x1335))
(assert (x2891 x980))
(assert (x2891 x3084))
(assert (= (x103 (x2282 x2465 x1473 x582 x634 x1162)) x582))
(assert (= (x1471 32542679537407071897843112657522291873774333932075415528008786499928730894336) 0))
(assert (< (x1504 x2623 x1055 x2928 x2391 x1418 x198) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x2756))
(assert (x2891 x1269))
(assert (x2891 x1363))
(assert (x2891 x1199))
(assert (x2700 x255))
(assert (x2891 x538))
(assert (x2891 x6))
(assert (=> (<= x1477 10000) (= 0 (x1471 x1477))))
(assert (=> (<= x2954 10000) (= (x1471 x2954) 0)))
(assert (= (and (not x1613) x1725) x1727))
(assert (x2891 x572))
(assert (< 10000 (x1159 x7 x3046 x395)))
(assert (x2891 x427))
(assert (x2891 x2859))
(assert (= x1773 (or x1870 x300)))
(assert (x2891 x1507))
(assert (x2891 x1657))
(assert (=> (>= 10000 x65) (= 0 (x1471 x65))))
(assert (x2891 x2456))
(assert (x2891 x1294))
(assert (= (x623 (x1159 x1603 x1825 x601)) x1603))
(assert (x2891 x1435))
(assert (= (x237 (x1814 x2465 x1170 x1614 x2862)) x2862))
(assert (x2891 x1145))
(assert (x2891 x65))
(assert (=> (>= 10000 x860) (= 0 (x1471 x860))))
(assert (x2891 x287))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x2891 x733))
(assert (=> (>= 10000 x3034) (= 0 (x1471 x3034))))
(assert (= (x1471 (x1814 x798 x2193 x2864 x1477)) (x1814 x798 x2193 x2864 x1477)))
(assert (x2891 x1486))
(assert (x2891 x2858))
(assert (=> (<= x2669 10000) (= (x1471 x2669) 0)))
(assert (x2891 x1156))
(assert (x2891 x2106))
(assert (x2891 x1947))
(assert (= (x623 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783)) x7))
(assert (x2891 x548))
(assert (x800 18446746139588821059))
(assert (x2891 x950))
(assert (x2891 x1522))
(assert (= 0 (x1471 2065879269316)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707)))
(assert (x2891 x1796))
(assert (x2891 x1555))
(assert (= x754 (x616 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754))))
(assert (= (x623 (x2577 x2623 x2802)) x2623))
(assert (= (x1471 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556)) (x1258 x2623 x1524 x2425 x691 x1930 x614 x556)))
(assert (x2891 x1934))
(assert (x2891 x870))
(assert (x2891 x1742))
(assert (= x2137 (x81 (x2282 x169 x888 x3010 x1142 x2137))))
(assert (=> (>= 10000 x1058) (= 0 (x1471 x1058))))
(assert (=> (>= 10000 x3056) (= 0 (x1471 x3056))))
(assert (= x350 (=> (and (= (< 0 x778) x2451) (= (x2552 x1145) x2859) (= (x3072 (+ x3024 32)) x2906) (= x2887 (x3072 (+ 32 x1292))) (= (x2552 x3024) x778) (= (x3072 (+ x2243 32)) x1145)) (and (=> (and (and (= (x3072 (+ 32 x2906)) x715) (= (< 1 x778) x2317) (= x2028 (x3072 (+ x2887 32))) (= (x2552 x2906) x2579)) x2451) (and (=> (and (not x2317) (and (= x2028 x320) (= x757 1) (= x715 x2592))) x1356) (=> (and x2317 (and (= (< 2 x778) x924) (= (x3072 (+ x715 32)) x2432) (= x1955 (x3072 (+ x2028 32))) (= (x1859 x715) x246))) (and (=> (and (not x924) (and (= x2432 x2592) (= x320 x1955) (= 2 x757))) x1356) (=> (and x924 (and (= x2433 (x3072 (+ 32 x1955))) (= (x1546 x2432) x2058) (= (x3072 (+ 32 x2432)) x330) (= (> x778 3) x38))) (and (=> x38 x562) (=> (and (and (= x330 x2592) (= 3 x757) (= x320 x2433)) (not x38)) x1356))))))) (=> (and (and (= x757 0) (= x2592 x2906) (= x2887 x320)) (not x2451)) x1356)))))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (= (x103 (x1504 x1672 x2007 x1861 x1737 x1964 x2266)) x1861))
(assert (= x2712 (and (not x647) x2258)))
(assert (=> (<= x1980 10000) (= (x1471 x1980) 0)))
(assert (x800 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (x2891 x21))
(assert (x2891 x2417))
(assert (= x376 (and x911 x1873)))
(assert (< (x1504 x213 x581 x339 x1112 x1462 x1033) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x112 (or x849 x5)))
(assert (x2891 x2311))
(assert (=> (<= x2862 10000) (= 0 (x1471 x2862))))
(assert (x2891 x1990))
(assert (= x3036 (x623 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000))))
(assert (x2891 x2228))
(assert (= (x533 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055)) x1494))
(assert (x2891 x2837))
(assert (x2891 x266))
(assert (< (x2282 x1126 x268 x216 x491 x1521) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x2706))
(assert (= x2385 (x533 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536))))
(assert (< 10000 (x2577 x1483 x65)))
(assert (= (x1504 x1603 x281 x2281 x3118 x2424 x434) (x1471 (x1504 x1603 x281 x2281 x3118 x2424 x434))))
(assert (x2891 x585))
(assert (x2891 x309))
(assert (= x923 (x616 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347))))
(assert (= (or x1952 x2406 x1249 x1915 x2550) x1095))
(assert (x2891 x302))
(assert (x2891 x1617))
(assert (=> (>= 10000 x1308) (= 0 (x1471 x1308))))
(assert (=> (>= 10000 x1112) (= (x1471 x1112) 0)))
(assert (x2891 x1960))
(assert (= (x623 (x1159 x7 x3046 x395)) x7))
(assert (x2891 x551))
(assert (x2891 x781))
(assert (=> (<= x2783 10000) (= 0 (x1471 x2783))))
(assert (< (x2282 x2707 x1511 x1341 x3019 x433) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x634 (x237 (x2282 x2465 x1473 x582 x634 x1162))))
(assert (= x3075 (and x705 (not x2317))))
(assert (x2891 x2973))
(assert (x2891 x1175))
(assert (x2891 x1800))
(assert (x2891 x2989))
(assert (= (and x554 (not x2574)) x335))
(assert (< (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x303))
(assert (x2891 x3085))
(assert (not (x800 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055))))
(assert (= x2931 (x237 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628))))
(assert (x2891 x3019))
(assert (< (x2577 x169 x2824) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639832))
(assert (x2891 x898))
(assert (=> (<= x2993 10000) (= 0 (x1471 x2993))))
(assert (= x2944 (x103 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055))))
(assert (= (and x2925 (not x1845)) x615))
(assert (x2891 x1039))
(assert (x2891 x1799))
(assert (x2891 x1015))
(assert (x2891 x176))
(assert (= (x533 (x1159 x2707 x466 x1442)) x466))
(assert (x2891 x1885))
(assert (x2891 x1346))
(assert (=> (>= 10000 x1784) (= (x1471 x1784) 0)))
(assert (x2891 x2431))
(assert (x2891 x134))
(assert (= (x2319 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000)) x3000))
(assert (> (x876 0) 10000))
(assert (= (x1471 (x1504 x1126 x2297 x381 x68 x1441 x1236)) (x1504 x1126 x2297 x381 x68 x1441 x1236)))
(assert (x2891 x105))
(assert (x2891 x1207))
(assert (x2891 x1100))
(assert (x2891 x2773))
(assert (x2891 x2920))
(assert (= x1126 (x623 (x2577 x1126 x358))))
(assert (x2891 x2028))
(assert (x2891 x481))
(assert (x2891 x1027))
(assert (x2891 x2565))
(assert (x2891 x946))
(assert (x2891 x843))
(assert (= (x533 (x1814 x2614 x2164 x2625 x1937)) x2164))
(assert (x800 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (= x1276 (x1466 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755))))
(assert (=> (>= 10000 x2874) (= 0 (x1471 x2874))))
(assert (= x1802 (or x1195 x2116)))
(assert (= (and x2040 (not x1582)) x677))
(assert (x2891 x1069))
(assert (x2891 x2931))
(assert (x2891 x406))
(assert (x2891 x2560))
(assert (= x1162 (x81 (x2282 x2465 x1473 x582 x634 x1162))))
(assert (x2891 x1631))
(assert (x2891 x1620))
(assert (=> (<= x943 10000) (= 0 (x1471 x943))))
(assert (= (and x1157 (not x925)) x199))
(assert (< 10000 (x1814 x1958 x379 x1119 x1378)))
(assert (= (and (not x540) x1114) x411))
(assert (x189 x639))
(assert (x2891 x1969))
(assert (= (x2282 x2623 x1340 x2860 x3121 x640) (x1471 (x2282 x2623 x1340 x2860 x3121 x640))))
(assert (x2891 x2342))
(assert (< 10000 (x1814 x1126 x1287 x591 x1400)))
(assert (x2891 x846))
(assert (=> (>= 10000 x2165) (= (x1471 x2165) 0)))
(assert (x2891 x1694))
(assert (=> (>= 10000 x1950) (= 0 (x1471 x1950))))
(assert (= (and x1366 x1805) x361))
(assert (= (x103 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755)) x448))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (x2891 x1766))
(assert (x2700 x1940))
(assert (x2891 x3111))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1504 x1958 x991 x431 x1015 x1639 x454)))
(assert (=> (>= 10000 x531) (= (x1471 x531) 0)))
(assert (=> (<= x1635 10000) (= (x1471 x1635) 0)))
(assert (x2891 x872))
(assert (= (x1471 (x1814 x3036 x405 x1343 x1490)) (x1814 x3036 x405 x1343 x1490)))
(assert (x2891 x69))
(assert (x2891 x1043))
(assert (=> (>= 10000 x1082) (= 0 (x1471 x1082))))
(assert (x2891 x2719))
(assert (x2891 x1378))
(assert (x2891 x1139))
(assert (x2891 x1165))
(assert (= (x1471 (x1814 x2614 x2164 x2625 x1937)) (x1814 x2614 x2164 x2625 x1937)))
(assert (x2891 x1457))
(assert (x2891 x1442))
(assert (x2891 x1550))
(assert (x2891 x838))
(assert (= (x1814 x1483 x2946 x404 x386) (x1471 (x1814 x1483 x2946 x404 x386))))
(assert (x2891 x3124))
(assert (= (x1471 18446744073709551615) 0))
(assert (x2891 x1266))
(assert (= x1330 (or x2022 x2370)))
(assert (x2891 x2078))
(assert (=> (>= 10000 x1039) (= 0 (x1471 x1039))))
(assert (x2891 x448))
(assert (x2327 x1438))
(assert (=> (>= 10000 x679) (= 0 (x1471 x679))))
(assert (= (x237 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657)) x2705))
(assert (= x1048 (and x987 x828)))
(assert (x2891 x337))
(assert (x2891 x3119))
(assert (= x1721 (x616 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224))))
(assert (= (x1504 x3036 x1405 x426 x1138 x1642 x790) (x1471 (x1504 x3036 x1405 x426 x1138 x1642 x790))))
(assert (x2891 x577))
(assert (x2891 x1645))
(assert (=> (<= x1365 10000) (= 0 (x1471 x1365))))
(assert (x2891 x375))
(assert (= (x623 (x1814 x1672 x2459 x872 x2204)) x1672))
(assert (= (and (not x567) x2313) x1231))
(assert (x2891 x541))
(assert (= x1114 (or x1194 x112)))
(assert (x2891 x124))
(assert (=> (<= x2086 10000) (= 0 (x1471 x2086))))
(assert (=> (<= x1818 10000) (= 0 (x1471 x1818))))
(assert (= x667 (and x15 x1813)))
(assert (=> (>= 10000 x1594) (= 0 (x1471 x1594))))
(assert (=> (>= 10000 x2587) (= (x1471 x2587) 0)))
(assert (=> (>= 10000 x4) (= (x1471 x4) 0)))
(assert (x2891 x2598))
(assert (= (and x2925 x1845) x2793))
(assert (= (and x3 (not x498)) x164))
(assert (x2891 x2166))
(assert (x2891 x2467))
(assert (x2891 x2320))
(assert (x2700 x919))
(assert (x2891 x2220))
(assert (x2891 x221))
(assert (= x1752 (and x1289 x2014)))
(assert (= (x1471 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)) (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)))
(assert (=> (>= 10000 x706) (= (x1471 x706) 0)))
(assert (x2891 x1977))
(assert (x2891 x3053))
(assert (x2891 x2596))
(assert (x2891 x328))
(assert (=> (<= x1701 10000) (= 0 (x1471 x1701))))
(assert (= (x1471 18446746139588821059) 0))
(assert (=> (<= x591 10000) (= 0 (x1471 x591))))
(assert (x2891 x330))
(assert (x2891 x2007))
(assert (= (x1504 x798 x453 x1248 x57 x3102 x1925) (x1471 (x1504 x798 x453 x1248 x57 x3102 x1925))))
(assert (x2891 x297))
(assert (x2891 x260))
(assert (x2327 x1081))
(assert (= x1461 (=> (and (or (and (not x1805) (= x1862 x80)) (and x1805 (and (<= 32 x2117) (= 1 x1862) (>= 4294967295 x2117)))) (and (>= x760 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x513)) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1805 (> x80 0)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2117) (= x760 (x1496 x513)) (= (x3072 (+ 32 x513)) x989) (<= 1 x69) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ x989 4)) x2307) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x513)) (<= 32 x2117) (> x989 x513) (= x2 (x2502 1461501637330902918203684832716283019655932542975 x2429)) (not (= x513 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x2502 1461501637330902918203684832716283019655932542975 x1299) x121))) x557)))
(assert (x2891 x94))
(assert (= (and x712 x1869) x2461))
(assert (= (and (not x34) x2446) x1133))
(assert (x2891 x2407))
(assert (=> (>= 10000 x386) (= (x1471 x386) 0)))
(assert (x2891 x207))
(assert (> (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817) 10000))
(assert (x2891 x1124))
(assert (= x902 (and x2234 (not x868))))
(assert (x2891 x2818))
(assert (x2891 x789))
(assert (= (x237 (x2282 x213 x93 x2128 x3006 x1758)) x3006))
(assert (=> (>= 10000 x714) (= (x1471 x714) 0)))
(assert (x2891 x1436))
(assert (=> (<= x2864 10000) (= (x1471 x2864) 0)))
(assert (x2891 x2870))
(assert (not (x800 (x2282 x2614 x2990 x3078 x2954 x2913))))
(assert (x2891 x2339))
(assert (= (and x2049 x2120) x2240))
(assert (x2891 x137))
(assert (= x1222 (or x325 x926)))
(assert (x2891 x1479))
(assert (= (and (not x1395) x2024) x2406))
(assert (x2891 x1706))
(assert (= (and x1178 x738) x1714))
(assert (= x3020 (or x1636 x2731)))
(assert (=> (>= 10000 x1639) (= (x1471 x1639) 0)))
(assert (x2891 x1699))
(assert (= (x533 (x2577 x1126 x358)) x358))
(assert (=> (>= 10000 x2736) (= 0 (x1471 x2736))))
(assert (=> (<= x2708 10000) (= 0 (x1471 x2708))))
(assert (x2891 x1430))
(assert (x2891 x1774))
(assert (x2891 x1161))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639776)))
(assert (x2891 x2343))
(assert (=> (<= x648 10000) (= 0 (x1471 x648))))
(assert (= (x533 (x1504 x2707 x1219 x476 x1109 x2157 x2673)) x1219))
(assert (x2891 x2787))
(assert (= (x623 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817)) x1603))
(assert (=> (<= x1405 10000) (= (x1471 x1405) 0)))
(assert (x2891 x2881))
(assert (x2891 x1372))
(assert (x2891 x2716))
(assert (x2891 x1007))
(assert (x2891 x2753))
(assert (= (x1471 (x1159 x169 x502 x1409)) (x1159 x169 x502 x1409)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2282 x213 x93 x2128 x3006 x1758)))
(assert (x2891 x2465))
(assert (x2891 x3127))
(assert (x2891 x2511))
(assert (= x2563 (and x286 x258)))
(assert (x2891 x1876))
(assert (x800 1461501637330902918203684832716283019655932542975))
(assert (x2891 x2435))
(assert (not (x800 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935))))
(assert (= x2841 (and x2234 x868)))
(assert (x2891 x1388))
(assert (= (=> (and (= x417 (x2605 100)) (= x2170 (+ x2401 32)) (= x169 (x2503 x1685)) (not (= x1685 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (x2950 160) x3004) (= (+ 32 x219) x2401) (= x1592 (x2502 1461501637330902918203684832716283019655932542975 x82)) (= x2792 (x3072 (+ x1685 32))) (= x1961 (x2502 1461501637330902918203684832716283019655932542975 x2312)) (<= x1685 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2649 (x2502 1461501637330902918203684832716283019655932542975 x2770)) (= x2443 (x2605 68)) (= (x2950 x2401) x82) (< x1685 x3024) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1685) (= x2658 (x511 (- x3024 x1685))) (= (x2950 256) x2312) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1685)) (<= x2443 1461501637330902918203684832716283019655932542975) (= x3024 (x3072 (+ x2792 64))) (= x1592 x1961) (not (< x2346 x2416)) (<= x417 1461501637330902918203684832716283019655932542975) (= (x2950 224) x2346) (= x2770 (x2950 x3004)) (= x2684 (x3072 (+ x2792 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1685)) (= (x3072 (+ 32 x1685)) x1560) (= x804 (x511 (- x2658 32))) (<= x1685 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2866 (<= x169 224))) (and x2866 (=> (and (and (= x1801 (x2503 x1588)) (= (x2503 x2412) x174) (= (x3072 (+ x1560 96)) x2019) (= (x2503 x1293) x494) (= x3057 (x2503 x3012)) (= (x2503 x187) x474) (= (x2503 x1560) x138) (= x1154 (x2503 x494)) (= x117 (x3072 (+ 96 x1560))) (= x2167 (x3072 (+ x1560 96))) (= (x2503 x2167) x2713) (<= x1154 18446744073709551615) (> x2838 x3024) (= (x2503 x2019) x421) (= x3032 (x2503 x784)) (= x1196 (x2503 x2045)) (= x1293 (x3072 (+ x2243 64))) (= x2699 (x876 0)) (= x1443 (x2503 x1427)) (= x955 (x1159 x169 x502 x1409)) (= x1142 (x2503 x933)) (= x1297 (x2503 x1503)) (= x2824 (x2503 x1560)) (= (x3072 (+ 128 x1560)) x1427) (= (x2577 x169 x2824) x1146) (= x1857 (x2282 x169 x888 x3010 x1142 x2137)) (= (x2503 x2974) x1250) (= x2412 (x3072 (+ 32 x1560))) (= (x2503 x2646) x2959) (<= 1 x3024) (= (x2503 x1560) x888) (= (x3072 (+ x1560 192)) x1237) (= (x3072 (+ 64 x1560)) x933) (= x3012 (x3072 (+ x1560 64))) (= (x1504 x169 x238 x1196 x733 x2713 x1297) x2437) (= (x1814 x169 x2840 x174 x1250) x1677) (= x1215 (* 32 x1154)) (= (x2503 x1237) x1224) (= (x2503 x2046) x2169) (= (x2503 x1560) x2340) (= (x3072 (+ 64 x1560)) x2646) (= x2243 (x2503 192)) (= (x2503 x746) x1721) (= x2840 (x2503 x1560)) (<= 2 x2838) (= (x2503 x1560) x238) (= x3053 (x3072 (+ x1560 128))) (= (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224) x2118) (<= x3024 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2838 (x3072 (+ x3024 (mod (+ x1215 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x746 (x3072 (+ x1560 160))) (= (x3072 (+ 128 x1560)) x1503) (= x1202 (x1258 x169 x138 x1801 x3057 x421 x1443 x474)) (= (x2503 x814) x3010) (= x502 (x2503 x1560)) (= x187 (x3072 (+ x1560 160))) (= (x2503 x117) x2137) (= x295 (x3072 (+ 64 x1560))) (= x814 (x3072 (+ x1560 32))) (= x1409 (x2503 x2256)) (= (x3072 (+ 96 x1560)) x2046) (= (= x1154 0) x71) (= x784 (x3072 (+ x1560 32))) (= x1933 (ite (= 0 x169) x2699 (ite (>= 32 x169) x1146 (ite (>= 64 x169) x955 (ite (>= 96 x169) x1677 (ite (>= 128 x169) x1857 (ite (>= 160 x169) x2437 (ite (>= 192 x169) x1202 (ite (>= 224 x169) x2118 x2044))))))))) (= (x3072 (+ x1560 32)) x2045) (= x2974 (x3072 (+ x1560 64))) (= (x2503 x3053) x1780) (= x1588 (x3072 (+ x1560 32))) (= x2256 (x3072 (+ 32 x1560))) (= x733 (x2503 x295))) (or (and (not x71) (and (= x1489 (* 32 x1154)) (= x727 (x3072 (+ 32 x3024))))) x71)) x2797))) x136))
(assert (x2891 x2242))
(assert (x2891 x2061))
(assert (=> (<= x3036 10000) (= (x1471 x3036) 0)))
(assert (x2891 x2840))
(assert (x2891 x2355))
(assert (x2891 x856))
(assert (< (x1159 64 x913 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1130 (and x1344 x2259)))
(assert (= x1306 (x81 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347))))
(assert (x2891 x438))
(assert (x2327 x2411))
(assert (x2891 x2834))
(assert (x2891 x212))
(assert (= 0 (x1471 134217728)))
(assert (=> (<= x923 10000) (= (x1471 x923) 0)))
(assert (= x2623 (x623 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556))))
(assert (x2891 x2670))
(assert (= x1109 (x237 (x1504 x2707 x1219 x476 x1109 x2157 x2673))))
(assert (= (=> (= x509 (= x1110 0)) (and (=> (and x509 (= x477 x1006)) x2034) (=> (not x509) x960))) x425))
(assert (not (x800 (x1159 x2623 x1644 x654))))
(assert (= x2663 (x81 (x2282 x1483 x2545 x2565 x422 x2663))))
(assert (= x547 (x533 (x2282 x7 x547 x2736 x354 x1320))))
(assert (x2891 x2019))
(assert (x2700 x1568))
(assert (= x781 (x237 (x2282 x1958 x1176 x1602 x781 x140))))
(assert (x2891 x1854))
(assert (x2891 x998))
(assert (not (x800 (x1814 x798 x2193 x2864 x1477))))
(assert (x2891 x2292))
(assert (x189 x2185))
(assert (x2891 x159))
(assert (x2891 x785))
(assert (= (x623 (x1159 x169 x502 x1409)) x169))
(assert (x2891 x1470))
(assert (x2891 x98))
(assert (=> (>= 10000 x2878) (= 0 (x1471 x2878))))
(assert (= (x533 (x1159 x213 x245 x943)) x245))
(assert (x2891 x853))
(assert (x2891 x720))
(assert (= x2691 (and x1158 x2030)))
(assert (x2891 x478))
(assert (x2891 x19))
(assert (x2891 x1176))
(assert (> (x2577 x2614 x2796) 10000))
(assert (x2891 x1750))
(assert (> (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707) 10000))
(assert (= x3054 (and (not x2710) x1305)))
(assert (not (x800 (x1814 x1958 x379 x1119 x1378))))
(assert (not (x800 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816))))
(assert (x2891 x1530))
(assert (=> (>= 10000 x756) (= 0 (x1471 x756))))
(assert (=> (>= 10000 x1521) (= (x1471 x1521) 0)))
(assert (x2891 x2993))
(assert (x2891 x2002))
(assert (x2891 x1838))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1504 x2465 x1731 x815 x588 x1822 x2100)))
(assert (x2891 x931))
(assert (x800 88383320980755791914082775550597828907713979028428263264130000526486271950848))
(assert (x2891 x754))
(assert (= (x1159 x2614 x1561 x2993) (x1471 (x1159 x2614 x1561 x2993))))
(assert (= x2681 (=> (and (or (and (and (= (x3072 (+ x248 32)) x123) (= x2173 (* 32 x722))) (not x193)) x193) (and (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x1681) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x1681)) (= x63 (x3072 (+ (mod (+ 32 x2135) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x248))) (= x3071 (x2123 x1756)) (= (x3072 (+ 32 x521)) x1062) (= x193 (= 0 x722)) (= x521 (x2123 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1681) (<= x722 18446744073709551615) (> x248 x1681) (<= 2 x63) (= (x2123 x3071) x722) (= (x2123 x982) x1612) (>= x496 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1681) (= (x2123 x1681) x2326) (or (>= x1681 115792089237316195423570985008687907853269984665640564039457584007913129639905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x1681)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x1681) (<= x1681 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (= (x3072 (+ 32 x1681)) x248) (<= 1 x1799) (= x2135 (* x722 32)) (> x63 x248) (= x2326 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1681) (= x1756 (x3072 (+ 32 x1062))) (= x1799 (x2123 x1062)))) x2516)))
(assert (x2891 x2405))
(assert (not (x800 (x1258 x169 x138 x1801 x3057 x421 x1443 x474))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657)))
(assert (=> (>= 10000 x1644) (= 0 (x1471 x1644))))
(assert (= (and (not x2057) x445) x3097))
(assert (= (and x2179 x2890) x1194))
(assert (x2891 x409))
(assert (x2327 x646))
(assert (> (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061) 10000))
(assert (= (and (not x484) x2712) x2081))
(assert (= (x533 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347)) x792))
(assert (x2891 x1959))
(assert (> (x1814 x2623 x2942 x345 x120) 10000))
(assert (=> (<= x268 10000) (= (x1471 x268) 0)))
(assert (= x94 (x103 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678))))
(assert (= x2340 (x533 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224))))
(assert (= x1288 (x81 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347))))
(assert (x2891 x1336))
(assert (x2891 x2567))
(assert (= x1357 (and x2259 (not x1344))))
(assert (not (x800 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872))))
(assert (x2891 x2205))
(assert (x2891 x2377))
(assert (x2891 x1232))
(assert (x2891 x2412))
(assert (x2891 x701))
(assert (= x312 (x1466 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055))))
(assert (= x1498 (x533 (x1159 x1126 x1498 x2867))))
(assert (= (x533 (x1159 x1672 x714 x202)) x714))
(assert (< 10000 (x2577 x798 x168)))
(assert (= x2465 (x623 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750))))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x81 (x2282 x2707 x1511 x1341 x3019 x433)) x433))
(assert (x2891 x2937))
(assert (= x832 (x237 (x1814 66 x1836 x2165 x832))))
(assert (x2891 x99))
(assert (= x2990 (x533 (x2282 x2614 x2990 x3078 x2954 x2913))))
(assert (x2891 x3028))
(assert (x2891 x198))
(assert (x2891 x1958))
(assert (x2891 x432))
(assert (x2327 x919))
(assert (x2327 x2560))
(assert (= (x1466 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657)) x2380))
(assert (x2891 x2183))
(assert (x800 95932229227554293267862761608555258089024927314852490146714677558661980618752))
(assert (=> (<= x3069 10000) (= (x1471 x3069) 0)))
(assert (= (or x971 x2805 x884 x232 x2092) x2807))
(assert (x2891 x921))
(assert (x2891 x1594))
(assert (not (x800 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347))))
(assert (x2891 x759))
(assert (x2891 x1286))
(assert (x2891 x446))
(assert (=> (<= x3089 10000) (= 0 (x1471 x3089))))
(assert (x2891 x1167))
(assert (= x2719 (x1466 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000))))
(assert (x2891 x845))
(assert (x2891 x888))
(assert (x2891 x2750))
(assert (=> (>= 10000 x1911) (= 0 (x1471 x1911))))
(assert (= x518 (and x2727 x1626)))
(assert (x2891 x402))
(assert (=> (<= x2109 10000) (= (x1471 x2109) 0)))
(assert (= x2731 (or x651 x88)))
(assert (x800 18446744073709551615))
(assert (not (x800 (x2282 x3036 x2430 x2829 x1232 x1135))))
(assert (x2891 x2705))
(assert (x2327 x639))
(assert (= (x1471 (x1258 x169 x138 x1801 x3057 x421 x1443 x474)) (x1258 x169 x138 x1801 x3057 x421 x1443 x474)))
(assert (x2891 x1901))
(assert (x2891 x854))
(assert (x2891 x2827))
(assert (x800 18446744073709551613))
(assert (x2891 x1148))
(assert (x2891 x1819))
(assert (=> (<= x549 10000) (= (x1471 x549) 0)))
(assert (=> (<= x392 10000) (= (x1471 x392) 0)))
(assert (x2891 x1579))
(assert (> (x1504 x213 x581 x339 x1112 x1462 x1033) 10000))
(assert (x2891 x2227))
(assert (x2891 x2031))
(assert (not (x800 (x1504 x1603 x281 x2281 x3118 x2424 x434))))
(assert (x2891 x1682))
(assert (< 10000 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347)))
(assert (x2891 x405))
(assert (= (or x3114 x677) x472))
(assert (x2891 x1401))
(assert (=> (>= 10000 x2931) (= (x1471 x2931) 0)))
(assert (= x421 (x81 (x1258 x169 x138 x1801 x3057 x421 x1443 x474))))
(assert (= x779 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2478) (= (x1045 x184) x2823) (not (>= (+ x633 x1090) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2089 (x1045 x1694)) (= (x1045 x1475) x633) (<= x1522 18446744073709551615) (= (x3072 (+ x633 x1090)) x1522) (<= x2478 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1475 (x1045 x1262)) (>= x1472 1) (= (x1045 192) x1694) (< x2478 x1472) (= x1090 (x1045 x2823)) (= x1472 (x3072 (+ x2478 (mod (+ x1549 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1549 (* 32 x1522)) (= (= x1522 0) x2890) (<= x2478 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (and (not x2890) (and (= (= 1 x1522) x647) (not (= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ 32 x338)) x408) (< x1472 x2145) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1472)) (<= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ x2504 32)) x1005) (= (x3072 (+ 32 x1608)) x56) (= (x3072 (+ x1472 32)) x2504) (= x1608 (x3072 (+ 32 x1005))) (not (= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x511 (- x1522 1)) x1924) (= x2145 (x3072 (+ x1472 160))) (= (x3072 (+ 32 x2478)) x338))) (and (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2145)) (= x484 (= 1 x1924)) (= x659 (x3072 (+ x2145 32))) (= x1682 (x3072 (+ 32 x659))) (= x1576 (x3072 (+ x2422 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2145)) (< x2145 x1281) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2145)) (<= x2145 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2145 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ x2145 160)) x1281) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2145) (= x2422 (x3072 (+ 32 x1682)))) (not x647)) (and (=> (and x484 (= x1281 x2540)) x1227) (=> (not x484) x1777))) (=> (and (= x2145 x2540) x647) x1227))) (=> (and (= x79 x1472) x2890) x3060)))))
(assert (= x1952 (and x1839 x3101)))
(assert (=> (<= x1602 10000) (= (x1471 x1602) 0)))
(assert (x2891 x3077))
(assert (x2891 x28))
(assert (x2327 x2787))
(assert (x2891 x570))
(assert (x2891 x957))
(assert (= x1958 (x623 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956))))
(assert (x2891 x1899))
(assert (x2891 x2050))
(assert (= x268 (x533 (x2282 x1126 x268 x216 x491 x1521))))
(assert (= (=> (and (= (x2502 1461501637330902918203684832716283019655932542975 x2359) x555) (> x2159 x79) (= x3115 (x272 x1687)) (= (x3072 (+ 32 x79)) x2532) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x79)) (= (x3072 (+ x2267 32)) x1164) (= (x2980 x952) x495) (= x1450 (x61 x2823)) (= (x3072 (+ x2478 32)) x1031) (= x2159 (x3072 (+ 160 x79))) (= x2359 (x2276 x1164)) (= x2299 (x2996 x2478)) (= x149 (not (> x1450 1))) (= (x3072 (+ x1164 32)) x1687) (= x952 (x3072 (+ x1164 64))) (= (x3072 (+ x152 32)) x1213) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x79) (= x2348 (x3072 (+ x1213 32))) (<= x79 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x79 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x152 (x3072 (+ x2532 32))) (not (= x79 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= 1 x2299) (not (= x79 115792089237316195423570985008687907853269984665640564039457584007913129639776))) (and x149 (=> (and (= x3005 x2159) (= x1386 x321) (= x737 x1671)) x2785))) x2789))
(assert (= x2614 (x623 (x1159 x2614 x1561 x2993))))
(assert (= (and (not x1333) x2809) x1051))
(assert (= (x237 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055)) x1263))
(assert (= x2014 (and x2313 x567)))
(assert (x2700 x2770))
(assert (x2891 x211))
(assert (x2891 x1864))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1814 x2623 x2942 x345 x120)))
(assert (= (and x2953 x2153) x119))
(assert (=> (<= x360 10000) (= 0 (x1471 x360))))
(assert (x2891 x1597))
(assert (x2891 x421))
(assert (x2891 x1836))
(assert (x2891 x1360))
(assert (= (or x1510 x2507) x3003))
(assert (x2891 x654))
(assert (> (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224) 10000))
(assert (x2891 x558))
(assert (=> (>= 10000 x1872) (= 0 (x1471 x1872))))
(assert (=> (<= x1956 10000) (= (x1471 x1956) 0)))
(assert (= (x533 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707)) x1585))
(assert (x2891 x2798))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2282 x2465 x1473 x582 x634 x1162)))
(assert (= (x1466 (x1504 x169 x238 x1196 x733 x2713 x1297)) x1297))
(assert (x2891 x39))
(assert (= (x616 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783)) x2599))
(assert (x2891 x2654))
(assert (=> (<= x238 10000) (= (x1471 x238) 0)))
(assert (< 10000 (x1159 x169 x502 x1409)))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x2891 x2398))
(assert (x2891 x610))
(assert (= x2999 (and (not x628) x2639)))
(assert (x2891 x835))
(assert (=> (>= 10000 x125) (= 0 (x1471 x125))))
(assert (= (and (not x1716) x1669) x1510))
(assert (> (x1814 x213 x1144 x3008 x1487) 10000))
(assert (= (x81 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935)) x4))
(assert (x2327 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2891 x1855))
(assert (x2891 x1063))
(assert (< 10000 (x1504 x1603 x281 x2281 x3118 x2424 x434)))
(assert (x2891 x2054))
(assert (x2891 x1673))
(assert (x2891 x527))
(assert (x2891 x1642))
(assert (= (x103 (x1258 x169 x138 x1801 x3057 x421 x1443 x474)) x1801))
(assert (x2891 x29))
(assert (x2891 x2585))
(assert (= (x103 (x1504 x798 x453 x1248 x57 x3102 x1925)) x1248))
(assert (x2891 x117))
(assert (x2891 x695))
(assert (x2891 x2788))
(assert (x2891 x1861))
(assert (< 10000 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)))
(assert (x2891 x2745))
(assert (x2891 x2194))
(assert (x2891 x2401))
(assert (=> (<= x474 10000) (= 0 (x1471 x474))))
(assert (=> (<= x2444 10000) (= (x1471 x2444) 0)))
(assert (x2891 x516))
(assert (not (x800 (x1504 x2614 x1049 x1039 x1117 x455 x768))))
(assert (x2891 x2244))
(assert (x2891 x2814))
(assert (= x1647 (x81 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808))))
(assert (x2891 x1848))
(assert (= 0 (x1471 57896044618658097711785492504343953926634992332820282019728792003956564820036)))
(assert (< (x2282 x1958 x1176 x1602 x781 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998) 10000))
(assert (= x1731 (x533 (x1504 x2465 x1731 x815 x588 x1822 x2100))))
(assert (x2891 x1588))
(assert (x2700 x161))
(assert (= x1713 (x237 (x2282 x1672 x2397 x1980 x1713 x482))))
(assert (= (or x1130 x1357) x2639))
(assert (x2891 x550))
(assert (x2891 x31))
(assert (x2891 x1424))
(assert (x2891 x2493))
(assert (= x1822 (x81 (x1504 x2465 x1731 x815 x588 x1822 x2100))))
(assert (x2891 x1115))
(assert (x2891 x1910))
(assert (x2891 x2436))
(assert (x2891 x1293))
(assert (=> (>= 10000 x781) (= 0 (x1471 x781))))
(assert (x2891 x1070))
(assert (x2891 x1568))
(assert (x2891 x715))
(assert (= (and x1583 x170) x2922))
(assert (x2891 x1350))
(assert (> (x1814 x2465 x1170 x1614 x2862) 10000))
(assert (= x1921 (x616 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061))))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639646))
(assert (= x1126 (x623 (x1814 x1126 x1287 x591 x1400))))
(assert (x2891 x1592))
(assert (x2891 x1255))
(assert (x2891 x1883))
(assert (=> (>= 10000 x2192) (= 0 (x1471 x2192))))
(assert (x2891 x1614))
(assert (x2891 x3066))
(assert (x2891 x491))
(assert (x2891 x1235))
(assert (x2891 x1713))
(assert (x2891 x57))
(assert (x2891 x814))
(assert (=> (>= 10000 x1126) (= (x1471 x1126) 0)))
(assert (x2891 x1572))
(assert (x2891 x1019))
(assert (x2891 x1138))
(assert (= x1950 (x237 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290))))
(assert (= x941 (or x2462 x2189)))
(assert (x2891 x629))
(assert (= (=> (and (= (x2502 1461501637330902918203684832716283019655932542975 x822) x688) (= (x3072 (+ 20 x99)) x2219) (= x99 (x3072 (+ 32 x1006))) (= x572 (* x688 79228162514264337593543950336)) (= (x3072 (+ x1192 64)) x2919) (= (x511 (- x2498 32)) x1566) (= (x2502 1461501637330902918203684832716283019655932542975 x2082) x2880) (= (x3072 (+ x753 32)) x2481) (= (x1541 x539) x2082) (= x2264 (>= 224 x7)) (= x1279 (* 79228162514264337593543950336 x2880)) (= x753 (x3072 (+ 20 x2219))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1006) (= x539 (x1541 160)) (= x7 (x1355 x1006)) (= x2687 (x1541 x2478)) (= (x1541 x214) x1192) (not (= x1006 115792089237316195423570985008687907853269984665640564039457584007913129639832)) (not (= x1006 115792089237316195423570985008687907853269984665640564039457584007913129639832)) (< x1006 x2481) (<= 1 x2687) (= x2090 (x3072 (+ x1006 32))) (= (x511 (- x2481 x1006)) x2498) (not (= x1006 115792089237316195423570985008687907853269984665640564039457584007913129639832)) (= x1629 (x3072 (+ x2919 64))) (= x822 (x1541 x2919)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1006) (= x1648 (x1541 x1629)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1006)) (and x2264 (=> (and (and (= (x1355 x364) x1370) (= x609 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783)) (= (x1355 x297) x2878) (= (x1355 x1071) x2238) (= (x1355 x316) x2808) (= (x2577 x7 x912) x655) (= x1093 (x3072 (+ x2090 128))) (= (x1159 x7 x3046 x395) x953) (= (x1355 x307) x780) (= (x1355 x3094) x1225) (= (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808) x2489) (= (x1355 x214) x1372) (= (x3072 (+ x2090 64)) x364) (= (x3072 (+ 96 x2090)) x2689) (= x2603 (x1355 x2090)) (= x3046 (x1355 x2090)) (= x3048 (x1355 x1537)) (= x1537 (x3072 (+ 32 x2090))) (= x636 (x2282 x7 x547 x2736 x354 x1320)) (= x133 (x1355 x1520)) (= (= 0 x2732) x2861) (= x395 (x1355 x251)) (= (x3072 (+ 32 x2090)) x2548) (= x547 (x1355 x2090)) (= x1808 (x1355 x2908)) (= (x3072 (+ 128 x2090)) x1369) (= (x3072 (+ 160 x2090)) x2701) (= x2400 (x3072 (+ x2090 64))) (= x297 (x3072 (+ x2090 64))) (= x2669 (x1355 x2689)) (= (x1355 x2548) x2561) (= x307 (x3072 (+ 32 x2090))) (= x182 (x3072 (+ x2090 96))) (= x1320 (x1355 x182)) (= x1520 (x3072 (+ 64 x2090))) (= (x1355 x2090) x2332) (= x2908 (x3072 (+ 160 x2090))) (= (x1504 x7 x2603 x2561 x2878 x2669 x1308) x1324) (= x1647 (x1355 x827)) (= x2736 (x1355 x1843)) (= (x3072 (+ 32 x2090)) x1843) (= (ite (= 0 x7) x3016 (ite (<= x7 32) x655 (ite (>= 64 x7) x953 (ite (>= 96 x7) x327 (ite (<= x7 128) x636 (ite (<= x7 160) x1324 (ite (>= 192 x7) x2489 (ite (>= 224 x7) x609 x1706)))))))) x1827) (= x912 (x1355 x2090)) (= (x3072 (+ 96 x2090)) x1071) (= x1977 (x3072 (+ x2090 128))) (= (x3072 (+ x2090 32)) x251) (= (x3072 (+ 32 x2090)) x3094) (= x2599 (x1355 x2701)) (= (x3072 (+ x2090 96)) x827) (= (x3072 (+ x1372 96)) x316) (= x1548 (x3072 (+ 64 x2090))) (= x66 (x1355 x2478)) (= x122 (x1355 x2090)) (= x3034 (x1355 x2090)) (= (x1355 x1977) x1308) (= (x1355 x1548) x2293) (= x2970 (x3072 (+ 192 x2090))) (= (x876 0) x3016) (= x1818 (x1355 x1369)) (= (x1355 x2970) x2783) (>= x66 1) (= x354 (x1355 x2400)) (= (x1814 x7 x3034 x780 x133) x327) (= (x1355 x839) x2732) (= (x1355 x1093) x1413)) (or (not x2861) (and x2861 (= x2576 (x3072 (+ x839 32)))))) x1381))) x960))
(assert (x2891 x1022))
(assert (x2891 x1612))
(assert (not (x800 (x1814 x2707 x1722 x1019 x360))))
(assert (< 10000 (x2282 x2465 x1473 x582 x634 x1162)))
(assert (x2891 x3068))
(assert (x2891 x823))
(assert (x2891 x1728))
(assert (x2891 x140))
(assert (x189 x10))
(assert (x2891 x1913))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (=> (<= x345 10000) (= 0 (x1471 x345))))
(assert (x2891 x741))
(assert (x2700 x2429))
(assert (=> (>= 10000 x1288) (= 0 (x1471 x1288))))
(assert (x2891 x2305))
(assert (=> (<= x2204 10000) (= 0 (x1471 x2204))))
(assert (x2891 x116))
(assert (= x1367 (x616 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536))))
(assert (= x213 (x623 (x1814 x213 x1144 x3008 x1487))))
(assert (< 10000 (x1504 x1126 x2297 x381 x68 x1441 x1236)))
(assert (x2891 x1893))
(assert (x2327 x2945))
(assert (x2891 x1914))
(assert (x2891 x3041))
(assert (x2891 x47))
(assert (x2891 x2554))
(assert (= (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816) (x1471 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816))))
(assert (x2891 x2265))
(assert (x2891 x1277))
(assert (x2891 x634))
(assert (= (and x2803 x1849) x971))
(assert (> (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816) 10000))
(assert (not (x800 (x2577 x2465 x348))))
(assert (not (x800 (x2282 x798 x1058 x2981 x2077 x2596))))
(assert (x2891 x771))
(assert (= x1015 (x237 (x1504 x1958 x991 x431 x1015 x1639 x454))))
(assert (= x2874 (x103 (x1159 x3036 x756 x2874))))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639646) 0))
(assert (x2891 x2033))
(assert (= x1887 (and x2574 x554)))
(assert (x2891 x1891))
(assert (x2891 x1150))
(assert (x800 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (x2891 x769))
(assert (= (x2282 x1483 x2545 x2565 x422 x2663) (x1471 (x2282 x1483 x2545 x2565 x422 x2663))))
(assert (x2891 x3079))
(assert (x2891 x2))
(assert (x2891 x2058))
(assert (not (x800 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754))))
(assert (x2327 x1368))
(assert (x2891 x656))
(assert (= (x237 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061)) x2698))
(assert (= x1839 (and x2024 x1395)))
(assert (= (x237 (x1814 x2623 x2942 x345 x120)) x120))
(assert (= (x1504 x1483 x1079 x155 x437 x2103 x142) (x1471 (x1504 x1483 x1079 x155 x437 x2103 x142))))
(assert (not (x800 (x2282 x1126 x268 x216 x491 x1521))))
(assert (x2891 x414))
(assert (= x733 (x237 (x1504 x169 x238 x1196 x733 x2713 x1297))))
(assert (< 10000 (x2577 x213 x608)))
(assert (= (x533 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061)) x1842))
(assert (=> (>= 10000 x354) (= (x1471 x354) 0)))
(assert (x2891 x499))
(assert (< 10000 (x2282 x798 x1058 x2981 x2077 x2596)))
(assert (x2891 x178))
(assert (= x987 (or x2563 x2438)))
(assert (= x1642 (x81 (x1504 x3036 x1405 x426 x1138 x1642 x790))))
(assert (x2891 x837))
(assert (x2891 x2411))
(assert (= x2482 (=> (and (= x2013 (x3072 (+ 96 x3064))) (= x808 (not (< 128 x1532))) (= x110 (x3072 (+ x1282 96))) (= x2870 (x2704 x2013))) (and x808 x2535))))
(assert (x2891 x2433))
(assert (x2891 x2853))
(assert (= x2007 (x533 (x1504 x1672 x2007 x1861 x1737 x1964 x2266))))
(assert (x2891 x1162))
(assert (x2891 x2646))
(assert (=> (>= 10000 x797) (= (x1471 x797) 0)))
(assert (x2891 x1817))
(assert (x2891 x78))
(assert (x2891 x979))
(assert (x2891 x1801))
(assert (x2891 x2796))
(assert (= x1144 (x533 (x1814 x213 x1144 x3008 x1487))))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (x2891 x1339))
(assert (x2891 x847))
(assert (=> (<= x3121 10000) (= (x1471 x3121) 0)))
(assert (x2891 x2623))
(assert (=> (>= 10000 x2656) (= 0 (x1471 x2656))))
(assert (x2891 x2224))
(assert (x2891 x2100))
(assert (x2891 x3037))
(assert (x2891 x532))
(assert (x2891 x2685))
(assert (= x1825 (x533 (x1159 x1603 x1825 x601))))
(assert (= (x533 (x2577 x3036 x1882)) x1882))
(assert (= (x2577 x3036 x1882) (x1471 (x2577 x3036 x1882))))
(assert (not (x800 (x2577 x1603 x993))))
(assert (x2891 x2029))
(assert (x2891 x1040))
(assert (= (=> (= (< 0 x724) x1178) (and (=> x1178 x2601) (=> (and (not x1178) (= x1572 x2575)) x1327))) x2253))
(assert (x2891 x2775))
(assert (x2891 x614))
(assert (x2891 x2823))
(assert (= (x1471 (x1814 x2707 x1722 x1019 x360)) (x1814 x2707 x1722 x1019 x360)))
(assert (x2891 x49))
(assert (= x2113 (=> (and (= (x3072 (+ x2300 64)) x678) (= (< 0 x1331) x2161) (= (x580 x1891) x1331) (= x2300 (x580 192)) (= x1891 (x580 x678))) (and (=> (and (= x2575 x586) (not x2161)) x1396) (=> (and (and (not (= x2575 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (< x2575 x1960) (= x2902 (x580 x184)) (= (x1761 x1482) x3125) (= x1942 (x3072 (+ x2575 32))) (= (x580 x260) x1390) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2575) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2575)) (<= x2575 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x580 x2651) x1482) (= (x3072 (+ 32 x1744)) x2586) (= x430 (x580 192)) (= (> x3125 0) x34) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2575) (not (= x2575 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x1744 (x3072 (+ x1942 32))) (= (x580 160) x260) (= x2651 (x3072 (+ x430 64))) (= x1960 (x3072 (+ 128 x2575)))) x2161) (and (=> (and (= x864 x1960) (not x34)) x2131) (=> (and (and (or (and x868 (and (>= x1131 32) (>= 4294967295 x1131) (= x1102 1))) (and (not x868) (= x1102 x62))) (and (<= 1 x1061) (= x1061 (x1761 x1482)) (<= x1131 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2889 (x3072 (+ x1960 4))) (<= 32 x1131) (= (x1761 x1971) x2147) (= (x3072 (+ 32 x1482)) x1446) (= x868 (< 0 x62)) (= (x1761 x1446) x1971) (= (x2502 1461501637330902918203684832716283019655932542975 x2147) x881))) x34) x811)))))))
(assert (x2891 x1822))
(assert (x2891 x22))
(assert (= (x533 (x1814 x798 x2193 x2864 x1477)) x2193))
(assert (x2891 x1072))
(assert (= x405 (x533 (x1814 x3036 x405 x1343 x1490))))
(assert (= (=> (and (= x220 (x511 (- x2920 x586))) (= (x3072 (+ x2920 32)) x526) (= x981 (x3072 (+ 32 x2211))) (= (x3072 (+ 31 x2342)) x639) (= x336 (x2289 x1826)) (= x1103 (> x336 0)) (= x143 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x639)) (= x2211 (x3072 (+ x2666 32))) (= (x3072 (+ x2342 x2737)) x2456) (= (x3072 (+ 32 x1826)) x1557) (= (x3072 (+ x2737 x143)) x2920)) (and (=> (and (not x1103) (= x1800 x526)) x2992) (=> x1103 x228))) x1543))
(assert (x2891 x3010))
(assert (= x2623 (x623 (x1814 x2623 x2942 x345 x120))))
(assert (=> (<= x656 10000) (= (x1471 x656) 0)))
(assert (=> (>= 10000 x1825) (= (x1471 x1825) 0)))
(assert (= x926 (and x2527 (not x2738))))
(assert (x2891 x2198))
(assert (= (x623 (x1504 x213 x581 x339 x1112 x1462 x1033)) x213))
(assert (x2891 x2739))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808)))
(assert (x2891 x2542))
(assert (x2891 x371))
(assert (= x1413 (x1466 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783))))
(assert (x2891 x1516))
(assert (x2891 x860))
(assert (x2891 x996))
(assert (x2891 x3049))
(assert (x2891 x952))
(assert (x2891 x1110))
(assert (= (x103 (x1504 x1126 x2297 x381 x68 x1441 x1236)) x381))
(assert (=> (>= 10000 x582) (= 0 (x1471 x582))))
(assert (= x174 (x103 (x1814 x169 x2840 x174 x1250))))
(assert (= x1197 (x533 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678))))
(assert (= x155 (x103 (x1504 x1483 x1079 x155 x437 x2103 x142))))
(assert (x2891 x815))
(assert (x2891 x566))
(assert (= (x533 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935)) x2553))
(assert (x2891 x757))
(assert (x2891 x718))
(assert (x2891 x1127))
(assert (x2891 x1276))
(assert (x2891 x2752))
(assert (x2891 x2395))
(assert (= (x533 (x1814 x2707 x1722 x1019 x360)) x1722))
(assert (x2891 x1900))
(assert (= (x237 (x1814 x1603 x531 x3113 x3017)) x3017))
(assert (x800 2189116922))
(assert (=> (>= 10000 x736) (= 0 (x1471 x736))))
(assert (x2891 x279))
(assert (= (=> (and (= x3127 (x1976 x1475)) (= (not (< 1 x3127)) x2611)) (and (=> (and (= x578 x771) (= x41 x488)) x927) x2611)) x716))
(assert (not (x800 (x1814 x2614 x2164 x2625 x1937))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1159 x7 x3046 x395)))
(assert (x2327 x276))
(assert (=> (>= 10000 x2623) (= 0 (x1471 x2623))))
(assert (x2891 x727))
(assert (= x1483 (x623 (x1814 x1483 x2946 x404 x386))))
(assert (> (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628) 10000))
(assert (x2891 x1681))
(assert (x2891 x96))
(assert (x2891 x145))
(assert (=> (>= 10000 x2545) (= (x1471 x2545) 0)))
(assert (x2891 x2638))
(assert (> (x1504 x2623 x1055 x2928 x2391 x1418 x198) 10000))
(assert (x2891 x2130))
(assert (x2891 x1756))
(assert (= x1001 (and x999 (not x2595))))
(assert (=> (>= 10000 x1733) (= 0 (x1471 x1733))))
(assert (x2891 x1561))
(assert (x2891 x2410))
(assert (x2891 x2178))
(assert (=> (<= x155 10000) (= 0 (x1471 x155))))
(assert (x2891 x778))
(assert (=> (>= 10000 x601) (= (x1471 x601) 0)))
(assert (= x3036 (x623 (x2577 x3036 x1882))))
(assert (x2891 x1782))
(assert (x2891 x1160))
(assert (x2891 x1303))
(assert (x2891 x152))
(assert (x2891 x1329))
(assert (=> (<= x1387 10000) (= 0 (x1471 x1387))))
(assert (x2327 x1850))
(assert (x2891 x1189))
(assert (x2891 x1120))
(assert (x2891 x1385))
(assert (=> (>= 10000 x768) (= (x1471 x768) 0)))
(assert (= (x533 (x2282 x798 x1058 x2981 x2077 x2596)) x1058))
(assert (x2891 x2149))
(assert (x2891 x2740))
(assert (= x2954 (x237 (x2282 x2614 x2990 x3078 x2954 x2913))))
(assert (=> (>= 10000 x1232) (= (x1471 x1232) 0)))
(assert (x2891 x1250))
(assert (= (x103 (x1814 x3036 x405 x1343 x1490)) x1343))
(assert (x2327 x2904))
(assert (x2891 x307))
(assert (= (x1471 18446744073709551455) 0))
(assert (= x2391 (x237 (x1504 x2623 x1055 x2928 x2391 x1418 x198))))
(assert (x2891 x1506))
(assert (x2891 x982))
(assert (= (x1471 (x1814 x7 x3034 x780 x133)) (x1814 x7 x3034 x780 x133)))
(assert (x2891 x1786))
(assert (= x1082 (x81 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817))))
(assert (x2891 x857))
(assert (= (x623 (x1504 x1126 x2297 x381 x68 x1441 x1236)) x1126))
(assert (x2891 x2212))
(assert (x2891 x804))
(assert (x2891 x1987))
(assert (x2891 x345))
(assert (x2891 x903))
(assert (x2891 x3071))
(assert (= (x103 (x1159 x2707 x466 x1442)) x1442))
(assert (x2891 x1628))
(assert (= (=> (and (= (x3072 (+ 4 x1700)) x76) (= x1838 (x3072 (+ x76 32))) (= x1680 (x2249 x1446)) (= x2183 (x3072 (+ 32 x148))) (= x919 (x2249 x2155)) (= (x3072 (+ x1680 64)) x2175) (= (x579 x1782) x1526) (= x1411 (> x1526 0)) (= (x3072 (+ 32 x522)) x83) (= (x2502 1461501637330902918203684832716283019655932542975 x2147) x2064) (= x522 (x3072 (+ 32 x2155))) (= (x2502 1461501637330902918203684832716283019655932542975 x919) x1871) (= x2155 (x3072 (+ x1100 32))) (>= x2726 1) (= x2009 1) (= (x2502 1461501637330902918203684832716283019655932542975 x1390) x1864) (= (x3072 (+ 32 x1838)) x776) (= (x3072 (+ 32 x776)) x148) (= (x2249 x1482) x2726) (= (x3072 (+ x1782 32)) x2417) (= x1533 (x3072 (+ x76 160))) (= (x2249 x83) x2964) (= (x2249 x522) x908) (= x1782 (x2249 x2175)) (= x2269 (x3072 (+ 32 x1533)))) (and (=> (and (and (= (> x1526 32) x2709) (= x2043 (x1012 x2417))) x1411) (and (=> (not x2709) x973) (=> (and x2709 (and (= x2827 (x3072 (+ 32 x2269))) (= (> x1526 64) x1545) (= x1988 (x3072 (+ x2417 32))) (= (x1610 x1988) x1527))) (and (=> (and (and (= x698 (x3072 (+ 64 x2417))) (= x1422 (x1559 x698)) (= (x3072 (+ 64 x2269)) x944) (= x1298 (> x1526 96))) x1545) (and (=> x1298 x292) (=> (not x1298) x973))) (=> (not x1545) x973))))) (=> (not x1411) x973))) x2063))
(assert (=> (<= x2885 10000) (= 0 (x1471 x2885))))
(assert (x2891 x41))
(assert (> (x2282 x1672 x2397 x1980 x1713 x482) 10000))
(assert (x2891 x1795))
(assert (=> (>= 10000 x1614) (= 0 (x1471 x1614))))
(assert (x2891 x339))
(assert (x2891 x2038))
(assert (= x1508 (and x2915 (not x694))))
(assert (x2891 x2981))
(assert (x2891 x539))
(assert (x2891 x2964))
(assert (x2891 x394))
(assert (x2891 x732))
(assert (= x1784 (x103 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998))))
(assert (not (x800 (x1814 x169 x2840 x174 x1250))))
(assert (x2891 x229))
(assert (x2891 x1700))
(assert (not (x800 (x1504 x213 x581 x339 x1112 x1462 x1033))))
(assert (=> (>= 10000 x1306) (= (x1471 x1306) 0)))
(assert (=> (<= x912 10000) (= 0 (x1471 x912))))
(assert (= x132 (=> (and (> x946 x304) (= x946 (x3072 (+ x304 64))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x304) (= x2613 (x3072 (+ x304 32))) (not (= x304 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x304) (not (= x304 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (= x1385 1) x356) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x304) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x304))) (and (=> (= x1403 x946) x77) x356))))
(assert (x2891 x2471))
(assert (x2891 x1889))
(assert (not (x800 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536))))
(assert (x800 2065879269444))
(assert (=> (>= 10000 x1487) (= 0 (x1471 x1487))))
(assert (x2891 x2889))
(assert (x2891 x991))
(assert (= (x623 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754)) x798))
(assert (= x165 (x81 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055))))
(assert (< (x1814 x3036 x405 x1343 x1490) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x533 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290)) x1740))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1159 x2614 x1561 x2993)))
(assert (x2891 x1535))
(assert (x2891 x1450))
(assert (x2891 x2887))
(assert (x2891 x1102))
(assert (=> (>= 10000 x520) (= 0 (x1471 x520))))
(assert (= (x2282 x2465 x1473 x582 x634 x1162) (x1471 (x2282 x2465 x1473 x582 x634 x1162))))
(assert (> (x1159 x2707 x466 x1442) 10000))
(assert (=> (>= 10000 x1124) (= 0 (x1471 x1124))))
(assert (x2891 x905))
(assert (x2891 x1975))
(assert (x2891 x836))
(assert (= x2430 (x533 (x2282 x3036 x2430 x2829 x1232 x1135))))
(assert (x2891 x2771))
(assert (x2891 x338))
(assert (x2891 x500))
(assert (x2891 x2184))
(assert (x2891 x1736))
(assert (x2891 x2260))
(assert (= (x1471 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755)) (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755)))
(assert (= (x2319 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061)) x3061))
(assert (= x2917 (or x1013 x2231)))
(assert (=> (<= x1649 10000) (= 0 (x1471 x1649))))
(assert (x2891 x282))
(assert (x2891 x2445))
(assert (= (and x924 x1068) x2618))
(assert (= (x623 (x1814 x1958 x379 x1119 x1378)) x1958))
(assert (x2891 x108))
(assert (x2891 x2713))
(assert (< (x1504 x1603 x281 x2281 x3118 x2424 x434) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1466 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816)) x958))
(assert (= (x623 (x1504 x2614 x1049 x1039 x1117 x455 x768)) x2614))
(assert (= (x1471 2065879269376) 0))
(assert (x2327 1461501637330902918203684832716283019655932542975))
(assert (= x2942 (x533 (x1814 x2623 x2942 x345 x120))))
(assert (x2891 x2082))
(assert (= (or x2566 x2922) x343))
(assert (= (x2282 x3036 x2430 x2829 x1232 x1135) (x1471 (x2282 x3036 x2430 x2829 x1232 x1135))))
(assert (x2891 x2998))
(assert (< 10000 (x1159 x1603 x1825 x601)))
(assert (= (and (not x2593) x2696) x1665))
(assert (x2891 x3036))
(assert (x2327 x1299))
(assert (= (and x487 (not x2522)) x1083))
(assert (x2891 x1833))
(assert (= (x623 (x2282 x1672 x2397 x1980 x1713 x482)) x1672))
(assert (= (x2319 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783)) x2783))
(assert (= (x81 (x1504 x1603 x281 x2281 x3118 x2424 x434)) x2424))
(assert (= (x103 (x1504 x7 x2603 x2561 x2878 x2669 x1308)) x2561))
(assert (x2891 x2885))
(assert (= (x2319 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678)) x1678))
(assert (x2891 x143))
(assert (x2891 x2204))
(assert (x2891 x2421))
(assert (x2891 x1954))
(assert (x2891 x293))
(assert (x2891 x1962))
(assert (= (x623 (x1159 x1126 x1498 x2867)) x1126))
(assert (x2891 x1389))
(assert (= (x237 (x2282 x7 x547 x2736 x354 x1320)) x354))
(assert (x2891 x2225))
(assert (x2891 x3102))
(assert (x2891 x1930))
(assert (x2891 x2376))
(assert (=> (<= x3102 10000) (= (x1471 x3102) 0)))
(assert (x2891 x2801))
(assert (= (and (not x397) x3020) x141))
(assert (= (or x1920 x2323) x1851))
(assert (=> (>= 10000 x1055) (= (x1471 x1055) 0)))
(assert (=> (>= 10000 x404) (= (x1471 x404) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2577 x7 x912)))
(assert (=> (>= 10000 x931) (= 0 (x1471 x931))))
(assert (x2891 x2880))
(assert (=> (<= x2100 10000) (= 0 (x1471 x2100))))
(assert (= x3036 (x623 (x1159 x3036 x756 x2874))))
(assert (not (x800 (x1814 x1672 x2459 x872 x2204))))
(assert (= (=> (= x839 x50) x1575) x2715))
(assert (x2891 x1171))
(assert (x2891 x1633))
(assert (= x1119 (x103 (x1814 x1958 x379 x1119 x1378))))
(assert (x2891 x1886))
(assert (= x1964 (x81 (x1504 x1672 x2007 x1861 x1737 x1964 x2266))))
(assert (= (x623 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347)) x1483))
(assert (= (x237 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556)) x691))
(assert (x2891 x1265))
(assert (=> (>= 10000 x3019) (= (x1471 x3019) 0)))
(assert (x2891 x3033))
(assert (= x1405 (x533 (x1504 x3036 x1405 x426 x1138 x1642 x790))))
(assert (x2891 x163))
(assert (x2891 x2755))
(assert (x2891 x123))
(assert (=> (>= 10000 x290) (= 0 (x1471 x290))))
(assert (= x1847 (=> (= x1550 x839) x1575)))
(assert (= 0 (x1471 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (= (and x2262 x2914) x1558))
(assert (x2891 x91))
(assert (x2891 x839))
(assert (= x2238 (x81 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783))))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639712) 0))
(assert (= x2180 (and x2040 x1582)))
(assert (= x3107 (=> (and (= x1529 (x1437 x3025)) (= (< 0 x1529) x2659) (= x3025 (x1437 x2410))) (and (=> x2659 x657) (=> (and (= x1578 x459) (not x2659)) x1797)))))
(assert (x2891 x1091))
(assert (x2891 x2388))
(assert (x2891 x2529))
(assert (= x562 (=> (and (= x1397 (x3072 (+ x330 32))) (= (x391 x330) x1620) (= (not (> x778 4)) x315) (= (x3072 (+ 32 x2433)) x2450)) (and (=> (and (= 4 x757) (= x2450 x320) (= x2592 x1397)) x1356) x315))))
(assert (x2891 x2425))
(assert (x2891 x3081))
(assert (= x798 (x623 (x1504 x798 x453 x1248 x57 x3102 x1925))))
(assert (x2891 x319))
(assert (not (x800 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755))))
(assert (= (and x2618 x38) x1858))
(assert (< 10000 (x2577 x7 x912)))
(assert (x2891 x1342))
(assert (= x140 (x81 (x2282 x1958 x1176 x1602 x781 x140))))
(assert (=> (<= x2981 10000) (= 0 (x1471 x2981))))
(assert (= x3001 (and x262 (not x2621))))
(assert (x2891 x276))
(assert (x2891 x2682))
(assert (< (x1159 x1958 x2361 x333) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x1090))
(assert (= x1669 (and x1137 x2836)))
(assert (x2891 x101))
(assert (x2891 x1446))
(assert (x2891 x504))
(assert (x2891 x2637))
(assert (=> (<= x216 10000) (= 0 (x1471 x216))))
(assert (x2891 x2460))
(assert (= x1547 (and x628 x2639)))
(assert (=> (<= x2217 10000) (= 0 (x1471 x2217))))
(assert (= (x1466 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061)) x1617))
(assert (= (x623 (x1159 64 x913 1)) 64))
(assert (= (x623 (x2577 x7 x912)) x7))
(assert (= x1010 (x237 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816))))
(assert (= x1672 (x623 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755))))
(assert (x2891 x904))
(assert (= (x533 (x2282 x1483 x2545 x2565 x422 x2663)) x2545))
(assert (=> (>= 10000 x1320) (= (x1471 x1320) 0)))
(assert (x2891 x737))
(assert (x2891 x1081))
(assert (x2891 x1117))
(assert (= x1911 (x1466 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536))))
(assert (x2891 x556))
(assert (not (x800 (x2282 x1603 x3069 x2306 x1628 x2645))))
(assert (= (x616 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998)) x998))
(assert (x2891 x2287))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1159 x213 x245 x943)))
(assert (x2891 x1872))
(assert (x2891 x2971))
(assert (= (x103 (x1504 x2614 x1049 x1039 x1117 x455 x768)) x1039))
(assert (=> (<= x2716 10000) (= 0 (x1471 x2716))))
(assert (x2891 x2612))
(assert (x2891 x1016))
(assert (=> (<= x1287 10000) (= (x1471 x1287) 0)))
(assert (x2891 x2767))
(assert (= x2192 (x1466 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628))))
(assert (x2891 x935))
(assert (x2891 x2281))
(assert (= x1922 (x237 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000))))
(assert (x2891 x252))
(assert (= (x1471 (x1814 x1603 x531 x3113 x3017)) (x1814 x1603 x531 x3113 x3017)))
(assert (= (x1466 (x1504 x213 x581 x339 x1112 x1462 x1033)) x1033))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x2891 x3108))
(assert (x2891 x746))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1504 x7 x2603 x2561 x2878 x2669 x1308)))
(assert (=> (<= x2128 10000) (= 0 (x1471 x2128))))
(assert (x2891 x1345))
(assert (< 10000 (x1814 x798 x2193 x2864 x1477)))
(assert (x2891 x1399))
(assert (x2891 x2673))
(assert (=> (>= 10000 x171) (= 0 (x1471 x171))))
(assert (x2891 x549))
(assert (= x318 (and x2595 x999)))
(assert (x2891 x2997))
(assert (< 10000 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657)))
(assert (x2891 x48))
(assert (=> (>= 10000 x448) (= (x1471 x448) 0)))
(assert (=> (<= x3032 10000) (= 0 (x1471 x3032))))
(assert (x2891 x645))
(assert (x2891 x1085))
(assert (= (x1159 x798 x996 x125) (x1471 (x1159 x798 x996 x125))))
(assert (< 10000 (x1258 x169 x138 x1801 x3057 x421 x1443 x474)))
(assert (x2891 x1003))
(assert (x2891 x1216))
(assert (x2891 x1121))
(assert (=> (>= 10000 x556) (= 0 (x1471 x556))))
(assert (=> (<= x169 10000) (= (x1471 x169) 0)))
(assert (x2891 x1367))
(assert (< (x1814 x1126 x1287 x591 x1400) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x400))
(assert (=> (>= 10000 x2698) (= 0 (x1471 x2698))))
(assert (x2891 x1230))
(assert (= (and x2057 x445) x3096))
(assert (= x2824 (x533 (x2577 x169 x2824))))
(assert (= x600 (=> (and (= (* 32 x2279) x1105) (= x2279 x2781) (>= 2 x2751) (= x856 x1463) (= (x3072 (+ x2674 x1105)) x2106) (or (= x1105 32) (= x1105 0)) (<= x2279 1) (= x2106 x2765)) x833)))
(assert (x2891 x968))
(assert (x2891 x2154))
(assert (=> (<= x1049 10000) (= (x1471 x1049) 0)))
(assert (not (x800 (x2282 x7 x547 x2736 x354 x1320))))
(assert (= 0 (x1471 95932229227554293267862761608555258089024927314852490146714677558661980618752)))
(assert (x2891 x2496))
(assert (x2891 x120))
(assert (= (and x2523 x2800) x487))
(assert (x2891 x1432))
(assert (x2891 x2945))
(assert (= (and x2240 (not x1188)) x937))
(assert (= (and x984 (not x1296)) x2550))
(assert (x800 111117225372770300986259473995147604481826136133417213952520719377678811004928))
(assert (x2891 x82))
(assert (x2891 x1338))
(assert (x2891 x2103))
(assert (x2891 x424))
(assert (= (x103 (x1159 x1958 x2361 x333)) x333))
(assert (x2891 x2528))
(assert (not (x800 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998))))
(assert (= (x81 (x1504 x1126 x2297 x381 x68 x1441 x1236)) x1441))
(assert (x2891 x728))
(assert (=> (>= 10000 x3118) (= 0 (x1471 x3118))))
(assert (x2891 x2109))
(assert (= (x103 (x2282 x1603 x3069 x2306 x1628 x2645)) x2306))
(assert (x2891 x104))
(assert (= x2519 (x103 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536))))
(assert (not (x800 (x1159 x213 x245 x943))))
(assert (x2891 x1431))
(assert (x2891 x2363))
(assert (x2891 x753))
(assert (= x395 (x103 (x1159 x7 x3046 x395))))
(assert (= x984 (and x642 x2643)))
(assert (x2891 x180))
(assert (= x2129 (x237 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872))))
(assert (x2891 x1403))
(assert (= (x1466 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)) x267))
(assert (x2891 x222))
(assert (x2891 x16))
(assert (x2891 x611))
(assert (x2891 x1823))
(assert (x800 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (x2891 x2133))
(assert (x2891 x2838))
(assert (x2891 x2157))
(assert (x2891 x988))
(assert (x2891 x784))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (= x556 (x616 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556))))
(assert (x189 x2969))
(assert (x2327 x161))
(assert (= (and x1508 (not x2284)) x2353))
(assert (=> (<= x1780 10000) (= (x1471 x1780) 0)))
(assert (x2891 x2185))
(assert (x2891 x794))
(assert (x2891 x2211))
(assert (= x2702 (x237 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754))))
(assert (> (x1504 x798 x453 x1248 x57 x3102 x1925) 10000))
(assert (x2891 x1062))
(assert (= x2459 (x533 (x1814 x1672 x2459 x872 x2204))))
(assert (= (x103 (x1504 x1958 x991 x431 x1015 x1639 x454)) x431))
(assert (= (x1471 (x1504 x2623 x1055 x2928 x2391 x1418 x198)) (x1504 x2623 x1055 x2928 x2391 x1418 x198)))
(assert (= x2848 (x237 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536))))
(assert (= x1137 (and x2734 x1792)))
(assert (not (x800 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817))))
(assert (x2891 x588))
(assert (> (x1504 x2614 x1049 x1039 x1117 x455 x768) 10000))
(assert (x2891 x2352))
(assert (x2327 x1902))
(assert (x2891 x1741))
(assert (= (=> (and (= x757 x778) (= x2059 (x511 (- x1317 32))) (<= 1 x320) (< x1292 x320) (= (* x778 32) x2755) (<= x1292 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1086 (<= x2707 224)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1292) (<= 1 x942) (= x320 x942) (= (x3072 (+ x2906 x2973)) x548) (= x2592 x548) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1292) (= x543 (x3072 (+ 32 x1292))) (= (x2538 x1292) x2707) (<= x778 4) (= x942 (x3072 (+ x2755 x2887))) (= x1317 (x511 (- x320 x1292))) (= x2973 (* x778 32))) (and x1086 (=> (and (= x1511 (x2538 x543)) (= (x2538 x543) x549) (= x745 (>= 224 x2465)) (= (x3072 (+ 96 x1018)) x398) (= (x3072 (+ x543 128)) x3026) (= (x3072 (+ x543 192)) x2847) (< x320 x398) (= x2385 (x2538 x543)) (= (x3072 (+ 32 x543)) x1401) (= (x876 0) x892) (= (x2538 x543) x2351) (= (x2538 x607) x1367) (= x1900 (x3072 (+ x543 96))) (or (and (<= x320 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x320)) (and (<= 1 x320) (<= x320 115792089237316195423570985008687907853269984665640564039457584007913129639807))) (= x1124 (x2538 x2846)) (= (x2538 x3038) x2673) (= x433 (x2538 x1900)) (= (x3072 (+ 128 x543)) x2989) (= (x3072 (+ x543 96)) x1360) (= x2080 (x511 (- x1026 32))) (= (x2538 x3033) x2628) (= x1911 (x2538 x3026)) (= x2192 (x2538 x2989)) (= x306 (x2577 x2707 x2351)) (= x2519 (x2538 x2491)) (= x2846 (x3072 (+ x543 32))) (= (x2538 x1238) x3019) (= x2423 (ite (= x2707 0) x892 (ite (<= x2707 32) x306 (ite (>= 64 x2707) x976 (ite (<= x2707 96) x410 (ite (>= 128 x2707) x1147 (ite (>= 160 x2707) x157 (ite (<= x2707 192) x2235 (ite (<= x2707 224) x1689 x2814))))))))) (= x3033 (x3072 (+ 160 x543))) (= x1109 (x2538 x966)) (= x1018 (x3072 (+ x320 32))) (= x2905 (x3072 (+ x543 32))) (= (x3072 (+ x543 32)) x2491) (= (x2538 x2615) x1019) (= (x3072 (+ x543 64)) x791) (= (x3072 (+ 32 x1247)) x2440) (= (x2538 x2528) x145) (= x1481 (x3072 (+ 64 x543))) (= x1689 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536)) (= (x2538 x2847) x536) (= x976 (x1159 x2707 x466 x1442)) (= (x3072 (+ 32 x320)) x2644) (= (x2538 x1401) x1341) (= (x3072 (+ 64 x543)) x1402) (= (x3072 (+ 64 x543)) x1238) (= x2465 (x2562 x320)) (= (x2538 x2837) x2157) (= (x3072 (+ 32 x543)) x2615) (= (x3072 (+ 32 x543)) x293) (= x1442 (x2538 x293)) (= x1219 (x2538 x543)) (= (x2538 x543) x1722) (= x966 (x3072 (+ x543 64))) (= x2235 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628)) (= x2528 (x3072 (+ x543 96))) (= x1026 (x511 (- x398 x320))) (= x2931 (x2538 x1402)) (= (x1504 x2707 x1219 x476 x1109 x2157 x2673) x157) (= (x3072 (+ 96 x543)) x2837) (= x2848 (x2538 x1481)) (= x1247 (x3072 (+ x1018 32))) (= x2330 (x2538 x1360)) (= (x3072 (+ 128 x543)) x3038) (= x476 (x2538 x2905)) (= (x1814 x2707 x1722 x1019 x360) x410) (= (x2282 x2707 x1511 x1341 x3019 x433) x1147) (= x360 (x2538 x791)) (= (x3072 (+ 160 x543)) x607) (= (x2538 x543) x466)) (and x745 (=> (and (= x160 (ite (= x2465 0) x693 (ite (>= 32 x2465) x2505 (ite (>= 64 x2465) x490 (ite (<= x2465 96) x624 (ite (<= x2465 128) x2337 (ite (>= 160 x2465) x111 (ite (<= x2465 192) x1143 (ite (<= x2465 224) x280 x2372))))))))) (= (x3072 (+ x2644 64)) x2311) (= (x2502 1461501637330902918203684832716283019655932542975 x732) x29) (= (x2562 x2644) x1170) (= x2435 (x3072 (+ x2644 32))) (= x2623 (x413 x398)) (= (x3072 (+ 32 x2105)) x1927) (= x1585 (x2562 x2644)) (= (x3072 (+ 192 x2644)) x2364) (= x2667 (x3072 (+ 160 x2644))) (= x1649 (x2562 x2435)) (= (x3072 (+ x1947 32)) x2105) (= (x876 0) x693) (< x398 x1692) (= x1201 (x2562 x2311)) (= (x511 (- x1488 32)) x2075) (= (x2562 x1148) x1614) (= (x3072 (+ x2644 64)) x611) (= x111 (x1504 x2465 x1731 x815 x588 x1822 x2100)) (= (x1814 x2465 x1170 x1614 x2862) x624) (= (x3072 (+ 128 x2644)) x1796) (= x815 (x2562 x2126)) (= (x3072 (+ 64 x2644)) x2804) (= x176 (x3072 (+ 128 x2644))) (= (>= 224 x2623) x1788) (= (x2562 x611) x736) (= (x2562 x1796) x2100) (= x1148 (x3072 (+ x2644 32))) (= x748 (x3072 (+ x2644 96))) (= x2819 (x3072 (+ x2644 32))) (= x108 (x2562 x2644)) (= (x511 (- x1692 x398)) x1488) (= x542 (x3072 (+ x2644 96))) (= (x3072 (+ x2644 96)) x1251) (= (x2577 x2465 x348) x2505) (= x2514 (x2562 x1823)) (= x1947 (x3072 (+ x1123 32))) (= (x2562 x176) x2756) (= x732 (x2562 256)) (= (x2562 x334) x1720) (= (x3072 (+ x2644 64)) x2557) (= (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750) x1143) (= x2126 (x3072 (+ 32 x2644))) (= x3105 (x2562 x542)) (= x1884 (x3072 (+ 160 x2644))) (= x582 (x2562 x2819)) (= x1823 (x3072 (+ x2644 128))) (= x2367 (x3072 (+ 64 x2644))) (= x1387 (x2562 x1519)) (= x2337 (x2282 x2465 x1473 x582 x634 x1162)) (= (x2562 x529) x1431) (= x334 (x3072 (+ 96 x2644))) (= x1519 (x3072 (+ x2644 32))) (or (and (<= 2 x398) (<= x398 126)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x398) (>= x398 115792089237316195423570985008687907853269984665640564039457584007913129639747)) (and (<= x398 115792089237316195423570985008687907853269984665640564039457584007913129639743) (>= x398 129))) (= x1531 (x2562 x2644)) (= (x2562 x2364) x707) (= (x2562 x2644) x1473) (= x1822 (x2562 x1251)) (= x588 (x2562 x2804)) (= x490 (x1159 x2465 x108 x1431)) (= x1162 (x2562 x748)) (= (x2562 x2557) x634) (= x280 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707)) (= x348 (x2562 x2644)) (= x1123 (x3072 (+ 32 x398))) (= x2331 (x3072 (+ x398 32))) (= x1516 (x2562 224)) (= (x3072 (+ 160 x1123)) x1692) (= (x2562 x2644) x1731) (= x529 (x3072 (+ 32 x2644))) (= (x2562 x1884) x1594) (= x2862 (x2562 x2367)) (= x2750 (x2562 x2667)) (= (x3072 (+ 32 x1927)) x830)) (and (=> (and (= (ite (= 0 x2623) x1734 (ite (<= x2623 32) x563 (ite (<= x2623 64) x2163 (ite (<= x2623 96) x1351 (ite (<= x2623 128) x1970 (ite (<= x2623 160) x2304 (ite (>= 192 x2623) x2941 (ite (>= 224 x2623) x2584 x3074)))))))) x719) (= x2050 (x3072 (+ 192 x2331))) (= x2395 (x3072 (+ 32 x2331))) (= x2942 (x413 x2331)) (= x1418 (x413 x1242)) (= x1828 (x3072 (+ x2331 96))) (= (x3072 (+ x2331 96)) x2314) (= (x413 x2474) x198) (= x2584 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055)) (= x2529 (x413 x2363)) (= (x413 x2331) x1524) (= (x2420 x1692) x1836) (= x563 (x2577 x2623 x2802)) (= x1351 (x1814 x2623 x2942 x345 x120)) (= x2686 (x3072 (+ x2331 64))) (= (x3072 (+ 64 x2331)) x1364) (= (x2420 x1730) x832) (= (x413 x2686) x2391) (= (x413 x256) x312) (= x1494 (x413 x2331)) (= (x413 x2395) x2425) (= x2363 (x3072 (+ x2331 160))) (= (x3072 (+ x1692 2)) x1373) (= (x413 x2085) x614) (= (x3072 (+ x2331 128)) x2474) (= x1621 (x3072 (+ x2331 32))) (= (x413 x2268) x120) (= x515 (x3072 (+ x2331 64))) (= x2304 (x1504 x2623 x1055 x2928 x2391 x1418 x198)) (= x2860 (x413 x1690)) (= (x413 x515) x691) (= (x413 x2331) x1055) (= (x3072 (+ x1692 64)) x1730) (= (x413 x1828) x1930) (= (x876 0) x1734) (= (= 65 x2496) x2727) (= (x413 x559) x345) (= (x413 x2314) x165) (= (x2420 x1919) x2496) (= (x413 x1621) x2944) (= x2405 (x3072 (+ 32 x2331))) (= (x3072 (+ 128 x2331)) x2085) (= (x413 x2331) x2802) (= x1242 (x3072 (+ 96 x2331))) (= x256 (x3072 (+ 128 x2331))) (= x1970 (x2282 x2623 x1340 x2860 x3121 x640)) (= x1340 (x413 x2331)) (= x559 (x3072 (+ x2331 32))) (= x1690 (x3072 (+ 32 x2331))) (= x1032 (x3072 (+ 32 x1692))) (= (x2420 x1032) x2165) (= (x413 x2325) x556) (= (x3072 (+ 32 x2331)) x930) (= (x3072 (+ 64 x2331)) x2268) (= x2941 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556)) (= x654 (x413 x2405)) (= (x413 x930) x2928) (= (x1159 x2623 x1644 x654) x2163) (= x1587 (x3072 (+ x1373 32))) (= x3121 (x413 x352)) (= (x3072 (+ x2331 64)) x352) (= x1263 (x413 x1364)) (= x640 (x413 x2876)) (= (x3072 (+ x2331 96)) x2876) (= x3055 (x413 x2050)) (= x2325 (x3072 (+ 160 x2331))) (= x1644 (x413 x2331)) (= x934 (x1814 66 x1836 x2165 x832))) (and (=> (and x2727 (and (and (= (x2420 x1149) x308) (= (+ 32 x1149) x583) (= x857 (x2772 x2377 248)) (= x2035 (+ 32 x583)) (= x1150 (x2420 x583)) (= (x2420 x2035) x2377) (= (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x1150) x1974)) (or (and (and (= x1692 x1218) (= 0 x1790) (= x1948 x1150) (= 3 x903)) x1974) (and (and (and (> x249 x1692) (= x2630 (= 0 x2208)) (= x161 (x1905 x1544)) (= x2025 128) (<= x18 1461501637330902918203684832716283019655932542975) (= (x3072 (+ 32 x1692)) x249) (not (= x1692 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x2863 (x3072 (+ 32 x249))) x1768) (= (x511 (- x249 32)) x1544) (<= x1692 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2265 (x3072 (+ 32 x618))) (= x2735 (x2863 (x3072 (+ 64 x249)))) (not (= x1692 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x2863 (x3072 (+ 96 x249))) x45) (not (= x1692 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x3072 (+ x249 32)) x618) (= (x3072 (+ 32 x2265)) x3083) (= (x3082 x1570 x1768 x2735 x45) x18) (<= x1692 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1570 (x2863 x249)) (= (x2502 1461501637330902918203684832716283019655932542975 x161) x2208) (= (x511 (- x249 32)) x718) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1692)) (or (and (and (= x249 x1218) (= x903 0) (= x161 x1790) (= x1948 0)) (not x2630)) (and (and (= 0 x1948) (= x249 x1218) (= x903 1) (= 0 x1790)) x2630))) (not x1974))))) x3123) (=> (and (not x2727) (and (= x2706 2) (= x2278 x841) (= 0 x2787) (= x1692 x1681) (= x841 (x2420 x1919)))) x1316))) x1788)))))) x1356))
(assert (x2891 x521))
(assert (= (=> (and (= x540 (= x2083 0)) (<= x2089 2) (= (ite (= 0 x2089) 1 0) x2083)) (and (=> (and (and (= x253 (x1976 x2823)) (= x1606 0) (>= x514 1) (= (> x253 0) x2766) (= (x1976 x2823) x514)) (not x540)) (and (=> (and (not x2766) (= x79 x862)) x1554) (=> (and x2766 (and (and (= (ite (= 2 x493) 1 0) x266) (= (= x266 0) x1613) (<= 1 x1896) (= (x1976 x2003) x2515) (= x493 (x1976 x2515)) (= (x1976 x2823) x1896) (<= x493 5) (= x2003 (x3072 (+ 32 x2823)))) (or (and (= 0 x1014) (not x1613)) (and x1613 (and (= x1053 1) (= x1014 1) (= x1837 3) (= (x1976 x2515) x1837)))))) x767))) (=> (and (and (= (= x1278 0) x631) (= (ite (= 1 x2089) 1 0) x1278)) x540) (and (=> (and x631 (and (= 0 x585) (= (x1976 x2823) x585) (= 1 x2315) (= x147 (x1976 x1475)) (= x2089 2) (= x2734 (< 0 x147)))) (and (=> (and (not x2734) (and (= x41 0) (= 0 x771))) x927) (=> (and (and (= x836 (ite (= 1 x2965) 1 0)) (= x3009 (x3072 (+ x1475 32))) (>= 5 x2965) (= x1985 (x1976 x3009)) (= (x1976 x1475) x21) (>= x21 1) (= (x1976 x1985) x2965) (= (= x836 0) x2836)) x2734) (and (=> (and (and (and (= (< 0 x1420) x1716) (= x558 (x1976 x1985)) (<= x558 5) (= (ite (= x558 2) 1 0) x1420)) (or (and (= x1420 1) x1716) (and (not x1716) (and (= x244 3) (= x802 1) (= (x1976 x1985) x244))))) x2836) x2724) (=> (and (not x2836) (and (= x488 1) (= x578 0))) x716))))) (=> (and (not x631) (and (= (x1976 x2823) x2039) (= (> x2039 0) x1582) (= x1889 0))) (and (=> (and (and (= (x1976 x342) x2267) (= x2788 (ite (= x1161 2) 1 0)) (= (= 0 x2788) x501) (= (x1976 x2823) x1657) (<= 1 x1657) (= (x3072 (+ x2823 32)) x342) (= x1161 (x1976 x2267)) (>= 5 x1161)) x1582) (and (=> (and (not x501) (and (= 0 x737) (= 1 x321) (= x22 0) (= x577 0))) x2789) (=> (and x501 (and (and (= (= 0 x1904) x170) (= (ite (= x503 3) 1 0) x1904) (= x503 (x1976 x2267)) (<= x503 5)) (or (and x170 (and (= (x1976 x2267) x2895) (= x1272 1) (= 0 x2650) (= 2 x372) (= x3116 1) (= x2895 1) (= x175 1))) (and (and (= 1 x2650) (= 0 x3116) (= 1 x372) (= 0 x175)) (not x170))))) x2500))) (=> (and (and (= x3005 x79) (= 0 x1671) (= x1386 0)) (not x1582)) x2785))))))) x3060))
(assert (not (x800 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750))))
(assert (x2891 x2173))
(assert (= x2871 (x237 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935))))
(assert (x2891 x1740))
(assert (x2891 x1897))
(assert (x800 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (x2891 x2429))
(assert (=> (>= 10000 x3113) (= 0 (x1471 x3113))))
(assert (=> (>= 10000 x2397) (= 0 (x1471 x2397))))
(assert (x2891 x2135))
(assert (x2891 x202))
(assert (= (x1471 (x1159 x1958 x2361 x333)) (x1159 x1958 x2361 x333)))
(assert (x2891 x2532))
(assert (x2891 x665))
(assert (= x2100 (x1466 (x1504 x2465 x1731 x815 x588 x1822 x2100))))
(assert (x2891 x1686))
(assert (< (x1504 x2614 x1049 x1039 x1117 x455 x768) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x660 (and x1949 x667)))
(assert (x2891 x1141))
(assert (= x2518 (or x758 x1155)))
(assert (x2891 x2271))
(assert (= x2465 (x623 (x1159 x2465 x108 x1431))))
(assert (x2891 x967))
(assert (x2891 x172))
(assert (not (x800 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556))))
(assert (x2891 x1187))
(assert (=> (>= 10000 x2157) (= 0 (x1471 x2157))))
(assert (x2891 x1477))
(assert (x2891 x1196))
(assert (= (and x2688 (not x2743)) x1291))
(assert (=> (<= x3074 10000) (= 0 (x1471 x3074))))
(assert (= x2293 (x237 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808))))
(assert (x2891 x1482))
(assert (=> (>= 10000 x2867) (= (x1471 x2867) 0)))
(assert (=> (<= x2747 10000) (= 0 (x1471 x2747))))
(assert (x2891 x756))
(assert (x2891 x2396))
(assert (x2891 x2392))
(assert (x2891 x3004))
(assert (= (x1471 4294967295) 0))
(assert (= (x1471 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817)) (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817)))
(assert (= (or x1693 x2479) x1656))
(assert (=> (<= x2347 10000) (= 0 (x1471 x2347))))
(assert (x2891 x497))
(assert (=> (<= x2137 10000) (= 0 (x1471 x2137))))
(assert (x2891 x2091))
(assert (=> (>= 10000 x1882) (= 0 (x1471 x1882))))
(assert (x2891 x2338))
(assert (= x1989 (and x925 x1157)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055)))
(assert (x2891 x1285))
(assert (= x707 (x2319 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707))))
(assert (= x3121 (x237 (x2282 x2623 x1340 x2860 x3121 x640))))
(assert (x2891 x994))
(assert (x2891 x2404))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639618) 0))
(assert (< 10000 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935)))
(assert (x2891 x2935))
(assert (x2891 x3029))
(assert (x189 x1438))
(assert (x2891 x3050))
(assert (=> (>= 10000 x2561) (= (x1471 x2561) 0)))
(assert (= (=> (and (or (and x2088 (and (<= x2508 4294967295) (>= x2508 32) (= x496 1))) (and (= x2294 x496) (not x2088))) (and (= x3111 (x3072 (+ 4 x1681))) (>= x2508 32) (= x449 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= (x2502 1461501637330902918203684832716283019655932542975 x2787) x6) (= 30450320296159908085414496432607297912280636920234228256796789313041262968832 x1432) (= x2144 (x3072 (+ 32 x3111))) (= x2088 (> x2294 0)) (<= x2508 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x2681) x87))
(assert (x2891 x2256))
(assert (x2891 x1492))
(assert (x2891 x597))
(assert (= (x623 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816)) x1672))
(assert (=> (>= 10000 x267) (= (x1471 x267) 0)))
(assert (x2891 x1109))
(assert (x2891 x2359))
(assert (=> (<= x1462 10000) (= 0 (x1471 x1462))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1814 x213 x1144 x3008 x1487)))
(assert (= (x1471 (x1814 x1126 x1287 x591 x1400)) (x1814 x1126 x1287 x591 x1400)))
(assert (= (and x705 x2317) x1068))
(assert (x2891 x1177))
(assert (x2891 x1402))
(assert (x2891 x1608))
(assert (= x2596 (x81 (x2282 x798 x1058 x2981 x2077 x2596))))
(assert (=> (>= 10000 x3057) (= 0 (x1471 x3057))))
(assert (= x339 (x103 (x1504 x213 x581 x339 x1112 x1462 x1033))))
(assert (= x491 (x237 (x2282 x1126 x268 x216 x491 x1521))))
(assert (< 10000 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783)))
(assert (x2891 x1659))
(assert (=> (<= x2372 10000) (= 0 (x1471 x2372))))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (not (x800 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706))))
(assert (x2891 x249))
(assert (x2891 x1744))
(assert (x2891 x331))
(assert (= (x533 (x1504 x2623 x1055 x2928 x2391 x1418 x198)) x1055))
(assert (= (x533 (x2577 x1958 x1733)) x1733))
(assert (= x860 (x237 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421))))
(assert (= (x1159 x2623 x1644 x654) (x1471 (x1159 x2623 x1644 x654))))
(assert (= (x1471 57896044618658097711785492504343953926634992332820282019728792003956564820517) 0))
(assert (x2891 x429))
(assert (x2891 x1540))
(assert (=> (>= 10000 x1737) (= 0 (x1471 x1737))))
(assert (x2700 x2904))
(assert (x2891 x1489))
(assert (x2891 x2107))
(assert (=> (<= x1816 10000) (= 0 (x1471 x1816))))
(assert (=> (<= x1301 10000) (= (x1471 x1301) 0)))
(assert (x2891 x601))
(assert (x2891 x1325))
(assert (x2891 x2367))
(assert (= x2131 (=> (= x586 x864) x1396)))
(assert (=> (<= x1721 10000) (= 0 (x1471 x1721))))
(assert (= x546 (or x1558 x2929 x1291 x3001 x625)))
(assert (x2891 x2243))
(assert (x2891 x1564))
(assert (> (x1504 x1672 x2007 x1861 x1737 x1964 x2266) 10000))
(assert (x2891 x1895))
(assert (= x3046 (x533 (x1159 x7 x3046 x395))))
(assert (x2891 x1030))
(assert (x2891 x1837))
(assert (x2891 x859))
(assert (= x2077 (x237 (x2282 x798 x1058 x2981 x2077 x2596))))
(assert (x2891 x1243))
(assert (x2891 x3100))
(assert (=> (>= 10000 x2614) (= (x1471 x2614) 0)))
(assert (= x1163 (and x704 (not x2569))))
(assert (x2891 x2269))
(assert (x2891 x1422))
(assert (x2891 x2645))
(assert (= x2713 (x81 (x1504 x169 x238 x1196 x733 x2713 x1297))))
(assert (not (x800 (x1504 x2707 x1219 x476 x1109 x2157 x2673))))
(assert (x2891 x379))
(assert (< (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= (not (< 1 x226)) x206) (= (x2605 x1200) x1440) (>= 1461501637330902918203684832716283019655932542975 x552) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x1885) (>= 18446744073709551487 x1885)) (or (>= x40 57896044618658097711785492504343953926634992332820282019728792003956564820517) (>= 2065879269316 x40)) (= x968 (x3072 (+ x40 32))) (= (x3072 (+ 32 x968)) x904) (= (x2605 x968) x552) (<= x1885 18446744073709551614) (<= x1885 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2605 x904) x2229) (not (= x1885 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x2933 (x3072 (+ 32 x1284))) (not (< x537 x1885)) (= x956 (x2605 x40)) (or (>= x1885 115792089237316195423570985008687907853269984665640564039457584007913129639809) (>= 18446744073709551487 x1885)) (>= 18446744073709551615 x1885) (<= x1885 18446744073709551615) (= x537 (x3072 (+ x1885 128))) (<= x1106 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1885 18446744073709551614) (= x1106 (x511 (- x2051 x40))) (= (x3072 (+ x1046 32)) x1284) (>= 5 x956) (> x537 x1885) (>= x1106 128) (= (x3072 (+ x904 32)) x1200) (= (x3072 (+ 32 x1885)) x1046)) (and (=> (= x537 x1852) x2985) x206)) x435))
(assert (=> (>= 10000 x1263) (= (x1471 x1263) 0)))
(assert (x2891 x3074))
(assert (x2891 x2857))
(assert (=> (>= 10000 x2513) (= (x1471 x2513) 0)))
(assert (= x963 (and x411 (not x2766))))
(assert (x2891 x2346))
(assert (x2891 x586))
(assert (= x2623 (x623 (x1504 x2623 x1055 x2928 x2391 x1418 x198))))
(assert (= x1400 (x237 (x1814 x1126 x1287 x591 x1400))))
(assert (= (x533 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755)) x2583))
(assert (x2891 x1812))
(assert (x2891 x46))
(assert (x2891 x2832))
(assert (x2891 x663))
(assert (x2891 x664))
(assert (= x767 (=> (and (= x270 (x3072 (+ 64 x1605))) (= (x322 x1605) x1940) (not (= x79 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x3072 (+ x2515 32)) x1605) (= (x3072 (+ 32 x2478)) x1243) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x79)) (= x2598 (x3072 (+ 32 x2431))) (= x402 (x626 x2823)) (= x575 (x3072 (+ x2079 32))) (= x2534 (x2502 1461501637330902918203684832716283019655932542975 x1940)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x79) (<= 1 x1766) (= (x2112 x2290) x2978) (= x1766 (x873 x2478)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x79) (= (x3072 (+ 32 x575)) x2431) (= (x3072 (+ x79 160)) x2537) (< x79 x2537) (= (x3072 (+ x1605 32)) x2290) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x79)) (<= x79 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1266 (x619 x270)) (= (x3072 (+ x79 32)) x2079) (= x826 (not (< 1 x402)))) (and (=> (= x2537 x862) x1554) x826))))
(assert (x2891 x544))
(assert (x2891 x1720))
(assert (= (x237 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)) x257))
(assert (x2891 x1932))
(assert (> (x1504 x1958 x991 x431 x1015 x1639 x454) 10000))
(assert (= (and x2696 x2593) x1936))
(assert (= (x1471 (x1159 x1483 x309 x2716)) (x1159 x1483 x309 x2716)))
(assert (= (x623 (x1504 x1672 x2007 x1861 x1737 x1964 x2266)) x1672))
(assert (= x1337 (and x1011 x199)))
(assert (x2891 x165))
(assert (=> (>= 10000 x67) (= (x1471 x67) 0)))
(assert (=> (<= x1138 10000) (= (x1471 x1138) 0)))
(assert (= (x533 (x2282 x169 x888 x3010 x1142 x2137)) x888))
(assert (= (x623 (x1814 x2707 x1722 x1019 x360)) x2707))
(assert (x2891 x83))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639615)))
(assert (= x588 (x237 (x1504 x2465 x1731 x815 x588 x1822 x2100))))
(assert (x2891 x3106))
(assert (x2891 x219))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1814 x169 x2840 x174 x1250)))
(assert (=> (>= 10000 x1742) (= (x1471 x1742) 0)))
(assert (x2891 x2777))
(assert (x2891 x2147))
(assert (x2891 x494))
(assert (< (x876 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x1738))
(assert (x2891 x1427))
(assert (< (x2577 x2465 x348) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2848) (= (x1471 x2848) 0)))
(assert (= x1066 (=> (and (= (x2605 196) x1027) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x12) (<= x1027 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1027 x12)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1027) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x12))) (= x628 (> x134 0)) (= (x3072 (+ (mod (+ x3077 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x612)) x846) (or (>= 2065879269376 x1027) (>= x1027 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x134 (x2605 x2910)) (= (* 32 x134) x3077) (= (x511 (- x2051 x2477)) x3023) (= x219 (+ 32 x1262)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x612) (= (x3072 (+ x612 32)) x663) (<= x612 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3050) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3023)) (> x3050 x3023)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3023) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3050)))) (= (x3072 (+ 36 x1027)) x2910) (= x2477 (* x134 160)) (< x612 x846) (<= x612 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x134 18446744073709551615) (= x3050 (x3072 (+ 32 x2910))) (<= 1 x846)) (and (=> x628 x844) (=> (and (not x628) (= x1685 x846)) x136)))))
(assert (= x2040 (and x3122 (not x631))))
(assert (x2891 x2776))
(assert (x2891 x2426))
(assert (x2891 x1999))
(assert (= (x533 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754)) x1507))
(assert (x2891 x2976))
(assert (=> (>= 10000 x421) (= (x1471 x421) 0)))
(assert (= x1980 (x103 (x2282 x1672 x2397 x1980 x1713 x482))))
(assert (= x1013 (or x2136 x3054 x945 x2882 x1609)))
(assert (=> (<= x1637 10000) (= (x1471 x1637) 0)))
(assert (=> (>= 10000 x1400) (= 0 (x1471 x1400))))
(assert (= (x616 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808)) x1808))
(assert (= (and x3 x498) x642))
(assert (= (x1471 (x1159 x1603 x1825 x601)) (x1159 x1603 x1825 x601)))
(assert (< 10000 (x1159 x1483 x309 x2716)))
(assert (x2891 x1896))
(assert (x2891 x1780))
(assert (x2891 x110))
(assert (=> (>= 10000 x2424) (= (x1471 x2424) 0)))
(assert (x2891 x2498))
(assert (= (x2577 x169 x2824) (x1471 (x2577 x169 x2824))))
(assert (=> (<= x991 10000) (= (x1471 x991) 0)))
(assert (=> (>= 10000 x2380) (= (x1471 x2380) 0)))
(assert (x2891 x648))
(assert (x2891 x2369))
(assert (=> (<= x2430 10000) (= (x1471 x2430) 0)))
(assert (=> (>= 10000 x1010) (= 0 (x1471 x1010))))
(assert (x2891 x699))
(assert (x2891 x2932))
(assert (=> (>= 10000 x2705) (= 0 (x1471 x2705))))
(assert (x2891 x1967))
(assert (x2891 x245))
(assert (=> (>= 10000 x1135) (= 0 (x1471 x1135))))
(assert (< 10000 (x1504 x2465 x1731 x815 x588 x1822 x2100)))
(assert (x2891 x1590))
(assert (= x2867 (x103 (x1159 x1126 x1498 x2867))))
(assert (x2891 x3032))
(assert (= x2913 (x81 (x2282 x2614 x2990 x3078 x2954 x2913))))
(assert (=> (<= x2421 10000) (= 0 (x1471 x2421))))
(assert (x2891 x128))
(assert (x2891 x2484))
(assert (x2891 x1715))
(assert (x2891 x2905))
(assert (x2891 x1719))
(assert (=> (<= x1219 10000) (= (x1471 x1219) 0)))
(assert (=> (<= x2293 10000) (= 0 (x1471 x2293))))
(assert (= (and x262 x2621) x2683))
(assert (x2891 x468))
(assert (= (and x3065 x2052) x2049))
(assert (x2891 x776))
(assert (=> (>= 10000 x454) (= 0 (x1471 x454))))
(assert (not (x800 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783))))
(assert (x2891 x1405))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (= (x103 (x1814 x2614 x2164 x2625 x1937)) x2625))
(assert (x2891 x1877))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2282 x7 x547 x2736 x354 x1320)))
(assert (= (x2577 x798 x168) (x1471 (x2577 x798 x168))))
(assert (not (x800 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657))))
(assert (= (=> (and (= (x729 x525) x118) (= x525 (x3072 (+ 96 x743))) (= x73 (x3072 (+ x2171 96))) (= x824 (not (< 128 x957)))) (and x3013 x824)) x2733))
(assert (= (x103 (x1814 x1603 x531 x3113 x3017)) x3113))
(assert (x2891 x2988))
(assert (=> (<= x2286 10000) (= 0 (x1471 x2286))))
(assert (= x1483 (x623 (x1504 x1483 x1079 x155 x437 x2103 x142))))
(assert (x2891 x2362))
(assert (= (=> (and (and (= (< 0 x2767) x2738) (= (x507 x2064) x752) (= x2233 (x3072 (+ x2269 x3062))) (= x158 (x511 (- x2233 x1700))) (= x3062 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2185)) (= (x3072 (+ x1526 x2269)) x2205) (>= x752 1) (= x2185 (x3072 (+ 31 x1526)))) (or (not x2738) (and x2738 (and (= (x1528 x2747) x2134) (= (x1528 x2064) x3103) x2622 x489 (= x489 (= x3103 (x1979 x2064))) (>= 4294967295 x1486) (= x2622 (<= x2134 (x1979 x2747))))))) x635) x973))
(assert (= x1250 (x237 (x1814 x169 x2840 x174 x1250))))
(assert (x2700 x39))
(assert (= x1220 (and x2915 x694)))
(assert (x2891 x1840))
(assert (=> (>= 10000 x1436) (= (x1471 x1436) 0)))
(assert (x2327 x1568))
(assert (= (x616 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817)) x1817))
(assert (=> (<= x281 10000) (= 0 (x1471 x281))))
(assert (x2891 x3051))
(assert (> (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678) 10000))
(assert (x2891 x2615))
(assert (> (x1258 x1958 x985 x918 x2129 x3109 x267 x1872) 10000))
(assert (= x738 (or x1220 x3088)))
(assert (x2891 x2583))
(assert (= x1609 (and (not x1158) x2030)))
(assert (x2891 x352))
(assert (x2891 x1916))
(assert (= (and x2226 (not x1298)) x2852))
(assert (= (x103 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657)) x1995))
(assert (x2891 x377))
(assert (x2891 x1551))
(assert (x2891 x2878))
(assert (x2891 x2132))
(assert (x2891 x713))
(assert (=> (>= 10000 x2297) (= 0 (x1471 x2297))))
(assert (=> (>= 10000 x168) (= 0 (x1471 x168))))
(assert (= (=> (and (= x2188 (x351 x2543)) (= (x3072 (+ 32 x2543)) x478) (= x2138 (not (< 4 x3030))) (= x2407 (x3072 (+ x823 32)))) (and (=> (and (= x478 x3051) (= x2407 x1786) (= 4 x2745)) x2394) x2138)) x3073))
(assert (x2891 x1637))
(assert (x2891 x1149))
(assert (= (and (not x1178) x738) x2921))
(assert (x2891 x3103))
(assert (=> (<= x234 10000) (= 0 (x1471 x234))))
(assert (= x362 (and x1508 x2284)))
(assert (=> (>= 10000 x2879) (= (x1471 x2879) 0)))
(assert (= (x103 (x1504 x1603 x281 x2281 x3118 x2424 x434)) x2281))
(assert (not (x800 (x1504 x2465 x1731 x815 x588 x1822 x2100))))
(assert (x2891 x1270))
(assert (= (x623 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290)) x213))
(assert (x2891 x312))
(assert (=> (<= x1225 10000) (= (x1471 x1225) 0)))
(assert (= (and x2807 x1103) x2672))
(assert (x2891 x503))
(assert (not (x800 (x2282 x213 x93 x2128 x3006 x1758))))
(assert (=> (<= x453 10000) (= (x1471 x453) 0)))
(assert (x2891 x1581))
(assert (x2891 x686))
(assert (x2891 x408))
(assert (x2891 x2409))
(assert (=> (>= 10000 x1842) (= 0 (x1471 x1842))))
(assert (x2891 x1272))
(assert (x2327 x1984))
(assert (x2891 x1332))
(assert (= (x623 (x1159 x213 x245 x943)) x213))
(assert (x2891 x1034))
(assert (= x169 (x623 (x1814 x169 x2840 x174 x1250))))
(assert (=> (>= 10000 x1758) (= (x1471 x1758) 0)))
(assert (x2891 x822))
(assert (x2891 x2674))
(assert (= x2217 (x103 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290))))
(assert (not (x800 (x2577 x1483 x65))))
(assert (=> (<= x1409 10000) (= 0 (x1471 x1409))))
(assert (=> (<= x2385 10000) (= 0 (x1471 x2385))))
(assert (= (x2319 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055)) x3055))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1159 x1672 x714 x202)))
(assert (not (x800 (x1504 x2623 x1055 x2928 x2391 x1418 x198))))
(assert (= (x103 (x1159 x2465 x108 x1431)) x1431))
(assert (x2891 x1649))
(assert (=> (<= x122 10000) (= (x1471 x122) 0)))
(assert (x2891 x1880))
(assert (= (x533 (x1504 x7 x2603 x2561 x2878 x2669 x1308)) x2603))
(assert (x800 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (x2891 x662))
(assert (x2891 x469))
(assert (x2891 x2134))
(assert (x2891 x1721))
(assert (x2891 x1737))
(assert (= x2323 (and (not x2734) x1792)))
(assert (= (x237 (x1814 x1958 x379 x1119 x1378)) x1378))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (< 10000 (x1814 66 x1836 x2165 x832)))
(assert (x2891 x2736))
(assert (= (x1471 57896044618658097711785492504343953926634992332820282019728792003956564820100) 0))
(assert (x2891 x2365))
(assert (x2891 x522))
(assert (= (x103 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935)) x1999))
(assert (< (x2577 x1483 x65) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x57 (x237 (x1504 x798 x453 x1248 x57 x3102 x1925))))
(assert (= (x237 (x1814 x3036 x405 x1343 x1490)) x1490))
(assert (x2891 x1201))
(assert (= (and x1366 (not x1805)) x1245))
(assert (x2891 x2982))
(assert (=> (>= 10000 x614) (= (x1471 x614) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1504 x3036 x1405 x426 x1138 x1642 x790)))
(assert (x2327 x1715))
(assert (= (x1466 (x1504 x1483 x1079 x155 x437 x2103 x142)) x142))
(assert (x2891 x2978))
(assert (x2891 x633))
(assert (not (x800 (x1159 x169 x502 x1409))))
(assert (x800 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (=> (>= 10000 x2599) (= 0 (x1471 x2599))))
(assert (=> (>= 10000 x2928) (= (x1471 x2928) 0)))
(assert (= (and (not x2088) x486) x758))
(assert (x189 x276))
(assert (=> (>= 10000 x2944) (= 0 (x1471 x2944))))
(assert (not (x800 (x2577 x1672 x2486))))
(assert (= x648 (x237 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755))))
(assert (= x1176 (x533 (x2282 x1958 x1176 x1602 x781 x140))))
(assert (= x300 (and x1315 x2659)))
(assert (= x1561 (x533 (x1159 x2614 x1561 x2993))))
(assert (=> (<= x2871 10000) (= 0 (x1471 x2871))))
(assert (x2891 x1521))
(assert (x2891 x1082))
(assert (x2891 x1376))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639808)))
(assert (x2891 x1955))
(assert (x2891 x1248))
(assert (= (=> (and (= (< 0 x2206) x1789) (= x2206 (x2041 x2303)) (= x1772 (x3072 (+ x1564 32))) (= (x3072 (+ x2575 4)) x1564) (= (x3072 (+ x1564 64)) x805) (= (x3072 (+ 32 x805)) x2784) (= (x3072 (+ x2303 32)) x1307)) (and (=> x1789 x3027) (=> (and (and (= x1307 x545) (= x638 0) (= x2784 x2638)) (not x1789)) x291))) x1327))
(assert (= (x876 0) (x1471 (x876 0))))
(assert (=> (<= x312 10000) (= 0 (x1471 x312))))
(assert (=> (<= x133 10000) (= (x1471 x133) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2577 x2707 x2351)))
(assert (= (and x484 x2712) x5))
(assert (not (x800 (x2577 x169 x2824))))
(assert (= (=> (and (= x2223 (x3072 (+ 32 x599))) (= (x3072 (+ 32 x2740)) x137) (= (x878 x2740) x2383) (= x1986 (not (< 4 x1674)))) (and x1986 (=> (and (= x1350 x137) (= 4 x310) (= x2223 x3058)) x2195))) x2454))
(assert (x2891 x1779))
(assert (x2891 x2316))
(assert (x2891 x188))
(assert (= (x1471 (x1814 x169 x2840 x174 x1250)) (x1814 x169 x2840 x174 x1250)))
(assert (=> (>= 10000 x1176) (= (x1471 x1176) 0)))
(assert (= x1746 (or x1989 x30)))
(assert (= (x81 (x2282 x1126 x268 x216 x491 x1521)) x1521))
(assert (= x447 (and x90 x166)))
(assert (x2891 x1441))
(assert (x2891 x1906))
(assert (=> (<= x1713 10000) (= (x1471 x1713) 0)))
(assert (x2891 x2965))
(assert (x2891 x1498))
(assert (x2891 x1607))
(assert (= x1776 (=> (and (= x2341 (not (> x2801 1))) (= x2801 (x1045 x394))) (and x2341 x779))))
(assert (x2891 x2782))
(assert (=> (>= 10000 x1276) (= 0 (x1471 x1276))))
(assert (=> (>= 10000 x1370) (= 0 (x1471 x1370))))
(assert (= x202 (x103 (x1159 x1672 x714 x202))))
(assert (x2891 x1993))
(assert (x2891 x1929))
(assert (x2891 x3009))
(assert (x2327 x255))
(assert (x2891 x1354))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639809) 0))
(assert (=> (>= 10000 x1958) (= (x1471 x1958) 0)))
(assert (x2891 x2301))
(assert (= (x237 (x1814 x213 x1144 x3008 x1487)) x1487))
(assert (x2891 x2443))
(assert (x2891 x731))
(assert (x2891 x2056))
(assert (x2891 x3086))
(assert (=> (>= 10000 x479) (= (x1471 x479) 0)))
(assert (x2891 x1968))
(assert (= x811 (=> (and (or (and (and (= (x2249 x1100) x2101) (= x2101 3) (= x302 1)) (not x2595)) (and x2595 (= x992 1))) (and (= x2595 (> x992 0)) (= x2472 (x2249 x709)) (= x1235 1) (= x323 (x2249 x2902)) (<= x1960 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ 32 x1960)) x1700) (= x1034 (mod (* 32 x2472) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1430 (x3072 (+ x2902 x852))) (= (x3072 (+ x1034 32)) x852) (not (= x1960 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x992 (ite (= 2 x1719) 1 0)) (<= x1719 5) (= (x2249 x1430) x1100) (>= x1102 1) (= x368 (x2249 x1446)) (> x323 x2472) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2472) (<= x1960 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1719 (x2249 x1100)) (>= x1290 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1960)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1960)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1960) (= (x2249 x1482) x1290) (>= x323 1) (= (x3072 (+ x368 32)) x709) (= (x2249 x1960) x1235) (> x1700 x1960))) x2063)))
(assert (= (x1471 (x1504 x7 x2603 x2561 x2878 x2669 x1308)) (x1504 x7 x2603 x2561 x2878 x2669 x1308)))
(assert (x2891 x2902))
(assert (x2891 x2780))
(assert (= x797 (x1466 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290))))
(assert (=> (>= 10000 x142) (= (x1471 x142) 0)))
(assert (x2891 x743))
(assert (x2891 x2424))
(assert (x2891 x2802))
(assert (x2891 x194))
(assert (=> (>= 10000 x1861) (= 0 (x1471 x1861))))
(assert (= (x81 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754)) x3100))
(assert (= (x1471 18446744073709551487) 0))
(assert (= x2270 (and (not x2120) x2049)))
(assert (x2891 x246))
(assert (x189 x2947))
(assert (x2891 x2912))
(assert (=> (>= 10000 x1418) (= (x1471 x1418) 0)))
(assert (x2891 x1755))
(assert (x2891 x2970))
(assert (x2891 x2627))
(assert (x2891 x1683))
(assert (x2891 x1818))
(assert (x2891 x2239))
(assert (x2891 x612))
(assert (= (or x2690 x880) x30))
(assert (x2891 x63))
(assert (x2891 x805))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1504 x169 x238 x1196 x733 x2713 x1297)))
(assert (x2327 x2185))
(assert (= (x1471 (x2577 x1672 x2486)) (x2577 x1672 x2486)))
(assert (x2891 x1236))
(assert (x2891 x1941))
(assert (= x1227 (=> (= x2540 x79) x3060)))
(assert (= (x81 (x1504 x2614 x1049 x1039 x1117 x455 x768)) x455))
(assert (not (x800 (x1504 x169 x238 x1196 x733 x2713 x1297))))
(assert (= (and x911 (not x1873)) x2298))
(assert (= (x1471 (x1504 x1958 x991 x431 x1015 x1639 x454)) (x1504 x1958 x991 x431 x1015 x1639 x454)))
(assert (=> (<= x3008 10000) (= (x1471 x3008) 0)))
(assert (= (x237 (x1814 x2707 x1722 x1019 x360)) x360))
(assert (x2891 x304))
(assert (x2891 x1709))
(assert (= x286 true))
(assert (= (or x1727 x2940) x2010))
(assert (x2891 x2416))
(assert (x2891 x2128))
(assert (=> (>= 10000 x1197) (= (x1471 x1197) 0)))
(assert (x2891 x852))
(assert (= x2361 (x533 (x1159 x1958 x2361 x333))))
(assert (= x913 (x533 (x1159 64 x913 1))))
(assert (x2891 x182))
(assert (= x7 (x623 (x2282 x7 x547 x2736 x354 x1320))))
(assert (x2891 x1212))
(assert (x2891 x2707))
(assert (= (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706) (x1471 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706))))
(assert (=> (>= 10000 x1808) (= (x1471 x1808) 0)))
(assert (= (x1471 (x2577 x2707 x2351)) (x2577 x2707 x2351)))
(assert (= (or x2200 x519) x88))
(assert (x2891 x2972))
(assert (x2891 x2664))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)))
(assert (= x169 (x623 (x2577 x169 x2824))))
(assert (= (x1814 x2465 x1170 x1614 x2862) (x1471 (x1814 x2465 x1170 x1614 x2862))))
(assert (x2891 x1529))
(assert (x2891 x2938))
(assert (x2891 x226))
(assert (x2891 x3045))
(assert (x2891 x3006))
(assert (< 10000 (x1504 x2707 x1219 x476 x1109 x2157 x2673)))
(assert (x2891 x855))
(assert (< (x1159 x2623 x1644 x654) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x797))
(assert (=> (>= 10000 x1801) (= (x1471 x1801) 0)))
(assert (x2891 x2600))
(assert (x2891 x883))
(assert (=> (>= 10000 x2332) (= 0 (x1471 x2332))))
(assert (not (x800 (x2577 x1958 x1733))))
(assert (x2891 x1661))
(assert (x2891 x1884))
(assert (x2891 x1218))
(assert (x2891 x174))
(assert (=> (>= 10000 x2425) (= (x1471 x2425) 0)))
(assert (< (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x2572))
(assert (x2891 x639))
(assert (x2891 x1183))
(assert (x2327 x837))
(assert (x2891 x372))
(assert (x2891 x1302))
(assert (x2891 x1537))
(assert (x2891 x1980))
(assert (= (x1471 30450320296159908085414496432607297912280636920234228256796789313041262968832) 0))
(assert (x2891 x531))
(assert (x2891 x2389))
(assert (x2891 x742))
(assert (x2891 x2169))
(assert (=> (<= x1033 10000) (= 0 (x1471 x1033))))
(assert (x2891 x1261))
(assert (= (x1466 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678)) x2260))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1504 x1483 x1079 x155 x437 x2103 x142)))
(assert (x800 2065879269376))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290)))
(assert (=> (<= x2064 10000) (= (x1471 x2064) 0)))
(assert (x2891 x1262))
(assert (x2891 x1676))
(assert (x2891 x2946))
(assert (x2891 x552))
(assert (x2891 x2333))
(assert (=> (>= 10000 x1442) (= (x1471 x1442) 0)))
(assert (= (x623 (x1814 x2614 x2164 x2625 x1937)) x2614))
(assert (= (=> (and (<= x101 1461501637330902918203684832716283019655932542975) (= x3092 (x2605 x662)) (= (x3072 (+ x662 32)) x3084) (= (x3072 (+ x1127 32)) x424) (<= x2600 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ 32 x2600)) x1470) (>= 18446744073709551614 x2600) (or (<= x2600 18446744073709551455) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x2600)) (= x188 (x3072 (+ x1428 32))) (= x2653 (not (> x3106 1))) (not (= x2600 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x3072 (+ 32 x1342)) x1428) (= x101 (x2605 x188)) (= (x3072 (+ x3084 32)) x1342) (= (x511 (- x2051 x662)) x2245) (= (x2605 x1428) x1435) (<= x2436 1461501637330902918203684832716283019655932542975) (= (x3072 (+ x2600 160)) x2404) (>= 18446744073709551615 x2600) (= x2436 (x2605 x3084)) (> x2404 x2600) (or (<= x2600 18446744073709551455) (>= x2600 115792089237316195423570985008687907853269984665640564039457584007913129639777)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820517 x662) (<= x662 2065879269284)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2245) (<= 160 x2245) (not (> x2600 x2404)) (= (x2605 x1342) x1007) (= (x3072 (+ 32 x424)) x2388) (<= x2600 18446744073709551615) (= (x3072 (+ 32 x1470)) x1127) (<= x3092 5) (<= x2600 18446744073709551614)) (and (=> (= x612 x2404) x1066) x2653)) x1778))
(assert (= (and x1553 (not x2861)) x519))
(assert (x2891 x989))
(assert (not (x800 (x2577 x798 x168))))
(assert (= (and x2518 (not x193)) x1253))
(assert (=> (<= x1170 10000) (= 0 (x1471 x1170))))
(assert (x2891 x1678))
(assert (= (x1471 (x2282 x1126 x268 x216 x491 x1521)) (x2282 x1126 x268 x216 x491 x1521)))
(assert (x2891 x1549))
(assert (x2891 x802))
(assert (x2891 x974))
(assert (x2891 x133))
(assert (= x1563 (or x2461 x1846)))
(assert (=> (>= 10000 x2246) (= (x1471 x2246) 0)))
(assert (x2891 x1213))
(assert (x2891 x2751))
(assert (x2891 x2245))
(assert (= x1283 (and x2237 x1789)))
(assert (x2891 x1400))
(assert (=> (<= x1431 10000) (= (x1471 x1431) 0)))
(assert (= (x533 (x1504 x1126 x2297 x381 x68 x1441 x1236)) x2297))
(assert (not (x800 (x1504 x1126 x2297 x381 x68 x1441 x1236))))
(assert (= x2953 (and x2671 x941)))
(assert (x2891 x591))
(assert (= (x533 (x1159 x2623 x1644 x654)) x1644))
(assert (x2891 x1116))
(assert (x2891 x2387))
(assert (= (and x34 x2446) x2234))
(assert (x2891 x537))
(assert (x2327 x822))
(assert (= (x623 (x1504 x2707 x1219 x476 x1109 x2157 x2673)) x2707))
(assert (x2891 x1635))
(assert (x2891 x18))
(assert (x2891 x2987))
(assert (= (x103 (x1159 x213 x245 x943)) x943))
(assert (x2327 x2969))
(assert (x2891 x1370))
(assert (x2891 x2399))
(assert (x2891 x2300))
(assert (=> (>= 10000 x1740) (= (x1471 x1740) 0)))
(assert (x2891 x766))
(assert (= (x103 (x1814 x7 x3034 x780 x133)) x780))
(assert (x2891 x2372))
(assert (< (x1814 66 x1836 x2165 x832) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x103 (x1159 x1603 x1825 x601)) x601))
(assert (x2891 x1919))
(assert (x2891 x2326))
(assert (x2891 x1260))
(assert (x2891 x1890))
(assert (x2891 x274))
(assert (x2891 x575))
(assert (= (x1471 (x1159 x1672 x714 x202)) (x1159 x1672 x714 x202)))
(assert (x2891 x1585))
(assert (=> (<= x8 10000) (= 0 (x1471 x8))))
(assert (= (x1471 (x2282 x1603 x3069 x2306 x1628 x2645)) (x2282 x1603 x3069 x2306 x1628 x2645)))
(assert (x2891 x1842))
(assert (x2891 x3062))
(assert (= (x623 (x2577 x2465 x348)) x2465))
(assert (x2891 x2079))
(assert (x2891 x2850))
(assert (x2891 x1996))
(assert (= (=> (and (= (x3072 (+ 32 x459)) x299) (= x2228 (x511 (- x2636 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x459) (= (x511 (- x475 x459)) x2636) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x459) (= x1518 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x837)) (<= 1 x475) (= (x3072 (+ x2171 x957)) x1661) (= x1184 (<= x213 224)) (> x475 x459) (<= x459 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x475 (x3072 (+ x1518 x2171))) (= (x3072 (+ x957 31)) x837) (= (x1798 x459) x213)) (and (=> (and (= x2302 (x3072 (+ 128 x299))) (= x706 (x1798 x735)) (= (x1798 x1256) x290) (= x3112 (x2577 x213 x608)) (= x608 (x1798 x299)) (= (x1798 x699) x1758) (= x699 (x3072 (+ 96 x299))) (= x2492 (x3072 (+ x299 64))) (<= 1 x2255) (= x1487 (x1798 x1953)) (= (x3072 (+ 160 x299)) x1256) (= (x1798 x299) x245) (= x820 (x3072 (+ x299 96))) (= (x3072 (+ x299 32)) x2542) (= (x3072 (+ x299 32)) x550) (= x931 (x1798 x1008)) (= x373 (ite (= x213 0) x886 (ite (>= 32 x213) x3112 (ite (<= x213 64) x673 (ite (>= 96 x213) x2104 (ite (>= 128 x213) x969 (ite (>= 160 x213) x2762 (ite (<= x213 192) x1495 (ite (<= x213 224) x1634 x1589))))))))) (= x1033 (x1798 x70)) (= (x1798 x299) x581) (= x2216 (x1798 x299)) (= x26 (x3072 (+ x299 64))) (= x1462 (x1798 x820)) (= (x1798 x2469) x943) (= (x1258 x213 x1740 x2217 x1950 x2879 x797 x290) x1495) (= (x3072 (+ 192 x299)) x735) (= x1950 (x1798 x1854)) (= (x3072 (+ 160 x299)) x2471) (= (x3072 (+ x299 32)) x2469) (= x93 (x1798 x299)) (= (x3072 (+ 64 x299)) x1854) (= (x2282 x213 x93 x2128 x3006 x1758) x969) (= (x3072 (+ 32 x299)) x1934) (= x2104 (x1814 x213 x1144 x3008 x1487)) (= x1840 (x3072 (+ 96 x299))) (= x2627 (x596 x1741)) (= (x3072 (+ x299 64)) x1953) (= x2886 (x3072 (+ 96 x299))) (= x1008 (x3072 (+ x299 32))) (= (x1798 x1840) x2879) (= x2255 (x1798 x1285)) (= x1144 (x1798 x299)) (= (x1159 x213 x245 x943) x673) (= (x1798 x2542) x2128) (= x1229 (x1798 x2471)) (= (x1798 x26) x282) (= x1957 (not (< 1 x2627))) (= x3008 (x1798 x1393)) (= x1740 (x1798 x299)) (= x3006 (x1798 x2492)) (= x1393 (x3072 (+ 32 x299))) (= x2972 (x1798 x2886)) (= x70 (x3072 (+ 128 x299))) (= x1447 (x3072 (+ 32 x1285))) (= (x1798 x550) x2217) (= x797 (x1798 x2302)) (= (x1504 x213 x581 x339 x1112 x1462 x1033) x2762) (= (x3072 (+ x299 128)) x1388) (= x2109 (x1798 x1388)) (= x1112 (x1798 x2775)) (= (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706) x1634) (= x2775 (x3072 (+ 64 x299))) (= (x876 0) x886) (= x339 (x1798 x1934)) (= (x596 x23) x1741)) (and (=> (and (= x475 x1728) (= x23 x1322)) x2939) x1957)) x1184)) x3013))
(assert (x2327 x2082))
(assert (x2891 x1225))
(assert (x2891 x2844))
(assert (= x1170 (x533 (x1814 x2465 x1170 x1614 x2862))))
(assert (= (x533 (x2577 x1483 x65)) x65))
(assert (= (x237 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224)) x2959))
(assert (x2891 x1398))
(assert (= (x103 (x1504 x2465 x1731 x815 x588 x1822 x2100)) x815))
(assert (=> (>= 10000 x2824) (= 0 (x1471 x2824))))
(assert (x2891 x147))
(assert (= (and x2296 x2214) x2800))
(assert (x2891 x3116))
(assert (x2700 x2881))
(assert (= 0 (x1471 2189116922)))
(assert (x2891 x173))
(assert (x2891 x1267))
(assert (= x549 (x533 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628))))
(assert (x2891 x547))
(assert (= (x1471 (x1504 x1672 x2007 x1861 x1737 x1964 x2266)) (x1504 x1672 x2007 x1861 x1737 x1964 x2266)))
(assert (x2891 x1186))
(assert (x2891 x118))
(assert (x2891 x1059))
(assert (< (x2282 x798 x1058 x2981 x2077 x2596) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1507 10000) (= (x1471 x1507) 0)))
(assert (x2891 x2254))
(assert (x2891 x1598))
(assert (< (x1814 x1483 x2946 x404 x386) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x2494))
(assert (< 10000 (x1159 x213 x245 x943)))
(assert (x2891 x983))
(assert (= (=> (and (and (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639646 x2517) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639649 x2517)) (= (x891 x2170) x1368) (<= x2517 115792089237316195423570985008687907853269984665640564039457584007913129639933) (not (>= (+ x414 x2416) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x225 256) x2904) (= x1959 (x3072 (+ x658 32))) (= (x3072 (+ x1959 32)) x2055) (= (x1467 x2239) x414) (= (x3072 (+ 64 x1916)) x1886) (= (x3072 (+ 32 x2055)) x2739) (= x980 (x1467 192)) (= x2912 (x2000 x2329)) (= (x3072 (+ x2410 32)) x23) (= x646 (x523 x2324)) (= x2324 (x523 160)) (or (>= x2517 115792089237316195423570985008687907853269984665640564039457584007913129639649) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639646 x2517)) (> x1285 x2160) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639649 x2517) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639646 x2517)) (= x1255 (x932 192)) (<= x2517 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x2239 (x3072 (+ x980 32))) (= x3029 (x726 x1886)) (= (* 32 x2236) x2768) (= (x3072 (+ 32 x2739)) x1022) (= (x3072 (+ x446 32)) x658) (= x469 (x2502 1461501637330902918203684832716283019655932542975 x2904)) (= x1916 (x726 192)) (= (x1832 x2196) x2236) (= (x3072 (+ 32 x23)) x446) (= x2196 (x1832 x2410)) (<= x2236 18446744073709551615) (>= 2 x1270) (= (= x2236 0) x397) (= x2410 (x3072 (+ x2517 32))) (= x3066 (x2502 1461501637330902918203684832716283019655932542975 x1368)) (= (x3072 (+ (mod (+ 32 x2768) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2160)) x1285) (< x2517 x2160) (= x544 (x3072 (+ x2416 x414))) (= (x2502 1461501637330902918203684832716283019655932542975 x646) x3098) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2517) (= x1270 (x932 x1255)) (<= 2 x1285) (= x2160 (x3072 (+ 288 x2517)))) (or (and (not x397) (and (= (* x2236 32) x2177) (= x895 (x3072 (+ 32 x2160))))) x397)) x2786) x1943))
(assert (x2891 x220))
(assert (x2891 x666))
(assert (= (=> (and (= x488 0) (= x375 1) (= 1 x578)) x716) x2724))
(assert (= x2623 (x623 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055))))
(assert (x2891 x912))
(assert (=> (>= 10000 x1378) (= 0 (x1471 x1378))))
(assert (x2891 x395))
(assert (=> (>= 10000 x466) (= (x1471 x466) 0)))
(assert (= (x1814 x2623 x2942 x345 x120) (x1471 (x1814 x2623 x2942 x345 x120))))
(assert (not (x800 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808))))
(assert (= (or x1646 x1283) x554))
(assert (x2891 x1843))
(assert (x2891 x2746))
(assert (= (x533 (x2577 x2614 x2796)) x2796))
(assert (x2891 x347))
(assert (x2891 x744))
(assert (= (x103 (x2282 x1958 x1176 x1602 x781 x140)) x1602))
(assert (=> (<= x1172 10000) (= 0 (x1471 x1172))))
(assert (=> (>= 10000 x2802) (= 0 (x1471 x2802))))
(assert (= x1366 (or x900 x1191)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2282 x2614 x2990 x3078 x2954 x2913)))
(assert (x2891 x2632))
(assert (= x133 (x237 (x1814 x7 x3034 x780 x133))))
(assert (x2891 x679))
(assert (x2891 x1122))
(assert (x2891 x3017))
(assert (x2891 x2728))
(assert (=> (<= x57 10000) (= (x1471 x57) 0)))
(assert (x2891 x1729))
(assert (x2891 x1679))
(assert (not (x800 (x2282 x2707 x1511 x1341 x3019 x433))))
(assert (x2891 x467))
(assert (x800 32542679537407071897843112657522291873774333932075415528008786499928730894336))
(assert (x2891 x378))
(assert (x2891 x1301))
(assert (x2891 x2678))
(assert (= (x533 (x1814 x1126 x1287 x591 x1400)) x1287))
(assert (= (x81 (x1504 x798 x453 x1248 x57 x3102 x1925)) x3102))
(assert (=> (>= 10000 x422) (= 0 (x1471 x422))))
(assert (x2891 x1037))
(assert (=> (>= 10000 x990) (= 0 (x1471 x990))))
(assert (= (x623 (x2282 x798 x1058 x2981 x2077 x2596)) x798))
(assert (x2891 x2616))
(assert (x2891 x1197))
(assert (> (x2282 x1483 x2545 x2565 x422 x2663) 10000))
(assert (x2891 x796))
(assert (x2891 x792))
(assert (= x1124 (x103 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628))))
(assert (x2891 x1578))
(assert (> (x2282 x169 x888 x3010 x1142 x2137) 10000))
(assert (< (x1258 x1126 x1635 x67 x777 x870 x2495 x541) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x650))
(assert (= x1126 (x623 (x1258 x1126 x1635 x67 x777 x870 x2495 x541))))
(assert (= x1583 (and x501 x2180)))
(assert (x2891 x3098))
(assert (not (x800 (x1814 x2623 x2942 x345 x120))))
(assert (= (x81 (x1504 x2623 x1055 x2928 x2391 x1418 x198)) x1418))
(assert (x2891 x3034))
(assert (= x1320 (x81 (x2282 x7 x547 x2736 x354 x1320))))
(assert (= (and x2630 x2564) x879))
(assert (x2891 x1816))
(assert (x2891 x2159))
(assert (=> (<= x780 10000) (= 0 (x1471 x780))))
(assert (x2891 x2201))
(assert (x2891 x2761))
(assert (x2891 x725))
(assert (x2891 x3048))
(assert (x2891 x384))
(assert (x2891 x2656))
(assert (x2891 x1704))
(assert (= x2226 (and x1545 x1923)))
(assert (=> (<= x870 10000) (= (x1471 x870) 0)))
(assert (=> (<= x309 10000) (= (x1471 x309) 0)))
(assert (x2891 x1768))
(assert (x2891 x2519))
(assert (x2891 x2099))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (= (=> (and (= x1333 (< 0 x2976)) (= x1993 (x763 x2823)) (= (x763 x1475) x894) (>= x894 1) (= x2976 (x763 x1475))) (and (=> x1333 x2071) (=> (and (= x862 x1550) (not x1333)) x1847))) x1554))
(assert (=> (>= 10000 x547) (= 0 (x1471 x547))))
(assert (< (x1258 x2623 x1524 x2425 x691 x1930 x614 x556) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2829) (= 0 (x1471 x2829))))
(assert (= (and x1379 x2691) x2076))
(assert (x2891 x2238))
(assert (x2891 x3121))
(assert (x2891 x1469))
(assert (=> (>= 10000 x1647) (= 0 (x1471 x1647))))
(assert (= x3048 (x103 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783))))
(assert (x2700 x1390))
(assert (x2891 x1828))
(assert (x2891 x434))
(assert (= (x1471 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)) (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)))
(assert (= (x81 (x1504 x213 x581 x339 x1112 x1462 x1033)) x1462))
(assert (x2891 x1238))
(assert (= x1743 (and x2052 (not x3065))))
(assert (x2891 x2703))
(assert (x2891 x248))
(assert (x2891 x1071))
(assert (not (x800 (x2577 x1126 x358))))
(assert (x2891 x917))
(assert (=> (>= 10000 x792) (= 0 (x1471 x792))))
(assert (x2891 x576))
(assert (x2891 x599))
(assert (x2891 x2247))
(assert (= (x1466 (x1504 x1958 x991 x431 x1015 x1639 x454)) x454))
(assert (x2891 x2384))
(assert (x2891 x2504))
(assert (x2891 x310))
(assert (= (and x509 x1330) x651))
(assert (x2891 x2701))
(assert (=> (>= 10000 x1524) (= (x1471 x1524) 0)))
(assert (x2891 x3118))
(assert (x2891 x775))
(assert (=> (>= 10000 x1822) (= 0 (x1471 x1822))))
(assert (=> (<= x1836 10000) (= (x1471 x1836) 0)))
(assert (=> (>= 10000 x1019) (= 0 (x1471 x1019))))
(assert (x2891 x1902))
(assert (= (or x1253 x210) x3))
(assert (=> (>= 10000 x2166) (= 0 (x1471 x2166))))
(assert (= (or x2900 (and x3039 (not x721))) x2179))
(assert (x2891 x1751))
(assert (= x2189 (or x2521 x1133)))
(assert (x2891 x2742))
(assert (= (x533 (x2282 x2465 x1473 x582 x634 x1162)) x1473))
(assert (= (x2319 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536)) x536))
(assert (x2891 x383))
(assert (x2891 x1453))
(assert (x2891 x2561))
(assert (x2891 x294))
(assert (x2891 x933))
(assert (x2891 x1514))
(assert (x2891 x2286))
(assert (x2891 x1205))
(assert (x2891 x2644))
(assert (= x2645 (x81 (x2282 x1603 x3069 x2306 x1628 x2645))))
(assert (=> (<= x1144 10000) (= 0 (x1471 x1144))))
(assert (x2891 x752))
(assert (x2891 x3105))
(assert (= x213 (x623 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706))))
(assert (x2891 x73))
(assert (x2700 x2359))
(assert (x2891 x1364))
(assert (x2891 x909))
(assert (x2891 x1365))
(assert (x2891 x780))
(assert (=> (>= 10000 x2645) (= 0 (x1471 x2645))))
(assert (=> (<= x2266 10000) (= 0 (x1471 x2266))))
(assert (= (and x2088 x486) x1155))
(assert (= x1965 (and x1752 (not x2589))))
(assert (< 10000 (x2577 x2707 x2351)))
(assert (= (x1466 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750)) x2756))
(assert (x2891 x2257))
(assert (= (and (not x2671) x941) x884))
(assert (= x2972 (x81 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706))))
(assert (x2891 x1964))
(assert (=> (>= 10000 x1755) (= (x1471 x1755) 0)))
(assert (= x228 (=> (and (= x2002 (x564 x2937)) (= x901 (x1118 x1037)) (= x2937 (x564 x1557)) (= x967 (x3072 (+ x1819 32))) (= x1037 (x3072 (+ 32 x551))) (= x98 (x3072 (+ x967 32))) (= x592 (x3072 (+ x98 32))) (= x1212 (x2502 1461501637330902918203684832716283019655932542975 x2881)) (= (x3072 (+ 32 x526)) x252) (= (x1078 x551) x2881) (= (x3072 (+ x1037 32)) x427) (= x1303 (x809 x349)) (= x349 (x3072 (+ 32 x2937))) (= x1819 (x3072 (+ x252 32))) (= (x690 x427) x1406) (= x551 (x3072 (+ x349 32))) (= x2544 (not (> x336 1))) (>= 2 x2002) (<= x1303 1)) (and x2544 (=> (= x1800 x592) x2992)))))
(assert (= 0 (x1471 18446744073709551613)))
(assert (x2891 x1692))
(assert (= (x1471 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536)) (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536)))
(assert (= (=> (and (= x2342 (x652 x1025)) (= x1025 (x1599 x2074)) (= (x3072 (+ x442 96)) x2074) (= (x1599 x2517) x2114) (= (x1599 192) x442) (= x2568 (x3072 (+ 288 x586))) (= x1452 (x1599 x1322)) (= (x3072 (+ 32 x2568)) x2737) (= x2666 (x3072 (+ x586 32))) (= (< 0 x2342) x2671) (= x1826 (x1599 x2410)) (= x2751 (x1599 x446)) (= (x3072 (+ x1025 32)) x1552)) (and (=> (and x2671 (and (= (< 32 x2342) x2153) (= (x2162 x1552) x1074))) (and (=> (not x2153) x1543) (=> (and (and (= x1492 (x3072 (+ x2737 32))) (= x1444 (x2413 x2832)) (= (x3072 (+ 32 x1552)) x2832) (= (< 64 x2342) x369)) x2153) (and (=> (not x369) x1543) (=> (and x369 (and (= (x3072 (+ 64 x1552)) x144) (= (x951 x144) x1314) (= x105 (x3072 (+ x2737 64))) (= x1849 (< 96 x2342)))) (and (=> (not x1849) x1543) (=> x1849 x126))))))) (=> (not x2671) x1543))) x1396))
(assert (x2891 x1373))
(assert (x2891 x2006))
(assert (x2891 x1256))
(assert (x2891 x2378))
(assert (= (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224) (x1471 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224))))
(assert (=> (<= x7 10000) (= (x1471 x7) 0)))
(assert (x2891 x2959))
(assert (x2891 x1368))
(assert (x2891 x1491))
(assert (x2700 x82))
(assert (x2891 x2105))
(assert (= (or (and x1312 x2759) x617) x486))
(assert (x2891 x1488))
(assert (=> (<= x2194 10000) (= (x1471 x2194) 0)))
(assert (= (x2282 x798 x1058 x2981 x2077 x2596) (x1471 (x2282 x798 x1058 x2981 x2077 x2596))))
(assert (x2327 x2947))
(assert (x2891 x2548))
(assert (= (=> (and (or (and (> x12 x1946) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1946) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x12))) (and (> x1946 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x12))) (= (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x276) x1453) (or (>= x224 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x224)) (or (<= x1946 2065879269376) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1946)) (>= 18446744073709551614 x1696) (= (x3072 (+ 32 x209)) x683) (>= 18446744073709551615 x226) (<= x72 18446744073709551614) (= x3124 (x3072 (+ x1809 31))) (= x1241 (x3072 (+ 32 x2390))) (= (x3072 (+ 32 x224)) x1070) (= (* 128 x226) x2244) (or (<= x1696 18446744073709551614) (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x1696)) (= x1211 (x3072 (+ x683 32))) (> x1885 x1941) (= (+ x2099 31) x1850) (= (+ 63 x303) x276) (= (x2605 x1650) x195) (not (> x2685 x1996)) (= x1186 (x3072 (+ x2099 x1070))) (<= x1696 18446744073709551614) (>= 18446744073709551615 x2099) (= (+ 32 x982) x184) (not (> x1696 x1919)) (= (x2605 x247) x226) (= x218 (x2605 x1211)) (= x2329 (+ x72 x1919)) (<= 1 x1919) (= (+ x47 31) x1438) (or (<= x1696 18446744073709551614) (>= x1696 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (or (and (> x20 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1996)) (and (> x1996 x20) (= (<= x1996 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x20 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (>= 18446744073709551615 x195) (= x1885 (+ x2494 x1941 32)) (= x2547 (x2605 36)) (>= 18446744073709551615 x1449) (= x72 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2969)) (or (>= x1696 115792089237316195423570985008687907853269984665640564039439137263839420088228) (>= 18446744073709551614 x1696)) (<= x2329 18446744073709551615) (= x247 (x3072 (+ x1946 36))) (= x303 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1850)) (= x1650 (x3072 (+ 32 x2029))) (>= 18446744073709551613 x1696) (= x1809 (x3072 (+ x1449 x2390))) (= x2057 (> x226 0)) (> x2329 x1919) (= x1149 (+ x1919 32)) (= x1906 (x511 (- x2051 x2244))) (= x1735 (+ x1149 x47)) (= x283 (x2605 x683)) (< x2329 x1941) (>= 18446744073709551613 x1696) (= (x3072 (+ 32 x247)) x40) (= x2062 (+ 32 x1941)) (= x1449 (x2605 x1241)) (<= x1696 18446744073709551613) (= (+ x2329 224) x1941) (or (>= x1809 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x1809)) (not (> x1186 x1996)) (>= 1461501637330902918203684832716283019655932542975 x218) (not (< x2329 x1919)) (= (x3072 (+ 31 x224)) x20) (= x2099 (x2605 x224)) (not (or (and (= (<= x1906 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x40)) (> x40 x1906)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1906) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x40)))) (= (* x226 32) x2494) (<= x47 18446744073709551615) (= (x2605 132) x1946) (= x711 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1438)) (= x3081 (x3072 (+ x1809 32))) (<= x1696 18446744073709551614) (= x2685 (x3072 (+ x3081 x47))) (= (x2605 356) x1260) (= (x2605 x1809) x47) (= x982 (+ 32 x2329)) (= x2969 (+ 63 x711)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3124) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1996)) (and (> x1996 x3124) (= (<= x1996 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3124)))) (< x1696 x1919) (<= 2 x2329) (= (x3072 (+ 32 x1696)) x2758) (= x1506 (x3072 (+ x2099 x2758))) (= (x3072 (+ x2670 x195)) x224) (= x1919 (x3072 (+ x1696 x1453))) (<= x1919 18446744073709551614)) (and (=> x2057 x435) (=> (and (= x1852 x1885) (not x2057)) x2985))) x730))
(assert (x2891 x20))
(assert (x2891 x476))
(assert (x2891 x2191))
(assert (= x1915 (and x642 (not x2643))))
(assert (x2891 x2096))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816)))
(assert (= (x616 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)) x1637))
(assert (x2891 x1042))
(assert (x2891 x80))
(assert (x2891 x2085))
(assert (x2891 x2391))
(assert (= x183 (=> (= x925 (= 0 x570)) (and (=> (and (not x925) (and (< x839 x1006) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x839) (<= x839 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x839 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ x839 32)) x1006) (= (x1541 x2478) x3049) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x839)) (= (< 0 x3049) x1011) (not (= x839 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x839)))) (and (=> (and x1011 (and (or (and (= x365 x1110) x2497) (and (not x2497) (and (<= x594 2) (= (x1541 x24) x594) (= x1899 x1110) (= (ite (= x594 1) 1 0) x1899)))) (and (= x2497 (> x365 0)) (= (ite (= 0 x1760) 1 0) x365) (>= 2 x1760) (= x1760 (x1541 x24)) (= (x3072 (+ 32 x2478)) x214) (<= 1 x205) (= (x1541 x2478) x205) (= x24 (x1541 x214))))) x425) (=> (and (not x1011) (= x2517 x1006)) x1943))) (=> x925 x833)))))
(assert (x2891 x295))
(assert (=> (<= x2663 10000) (= (x1471 x2663) 0)))
(assert (x2891 x2942))
(assert (x2891 x1685))
(assert (x2891 x1671))
(assert (x2891 x2045))
(assert (= (=> (and (and (= x650 (x1660 192)) (= x13 (ite (= x1469 0) 1 0)) (= x288 (< 0 x13)) (= (x1660 x650) x1469) (<= x1469 2)) (or (and (= x13 x570) x288) (and (and (= (x1660 x3037) x855) (= x2308 x570) (<= x855 2) (= (ite (= 1 x855) 1 0) x2308) (= x3037 (x1660 192))) (not x288)))) x183) x1575))
(assert (=> (<= x2391 10000) (= (x1471 x2391) 0)))
(assert (< 10000 (x1159 64 x913 1)))
(assert (x2891 x1757))
(assert (= x2266 (x1466 (x1504 x1672 x2007 x1861 x1737 x1964 x2266))))
(assert (= x1635 (x533 (x1258 x1126 x1635 x67 x777 x870 x2495 x541))))
(assert (x2891 x1862))
(assert (x2891 x2165))
(assert (x2891 x649))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (x2891 x2457))
(assert (x2891 x2139))
(assert (= (x1471 37664329658542632380461339884011895550187483938955784695590509376205521682432) 0))
(assert (x2891 x2872))
(assert (x2891 x1519))
(assert (x2700 x1081))
(assert (x2891 x1760))
(assert (x2891 x2795))
(assert (x2891 x2657))
(assert (= x2169 (x81 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224))))
(assert (x2891 x985))
(assert (x2891 x1170))
(assert (=> (<= x379 10000) (= (x1471 x379) 0)))
(assert (x2891 x1358))
(assert (=> (<= x1925 10000) (= (x1471 x1925) 0)))
(assert (not (x800 (x1159 x798 x996 x125))))
(assert (x2891 x412))
(assert (x2891 x390))
(assert (=> (>= 10000 x872) (= (x1471 x872) 0)))
(assert (x2891 x2463))
(assert (= (x237 (x2282 x169 x888 x3010 x1142 x2137)) x1142))
(assert (=> (<= x2603 10000) (= 0 (x1471 x2603))))
(assert (x2891 x1463))
(assert (= x2354 (and x1923 (not x1545))))
(assert (x800 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (=> (<= x2629 10000) (= 0 (x1471 x2629))))
(assert (< (x1504 x1126 x2297 x381 x68 x1441 x1236) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x1428))
(assert (x2891 x168))
(assert (= x1191 (and (not x2018) x1868)))
(assert (x2891 x257))
(assert (x2891 x1279))
(assert (x2891 x2137))
(assert (=> (>= 10000 x213) (= 0 (x1471 x213))))
(assert (x2891 x2547))
(assert (x2891 x1421))
(assert (x2891 x2684))
(assert (not (x800 (x1504 x798 x453 x1248 x57 x3102 x1925))))
(assert (< 10000 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750)))
(assert (x2891 x311))
(assert (= (and x1021 (not x71)) x2116))
(assert (x2891 x2962))
(assert (x2891 x1770))
(assert (x2891 x1098))
(assert (= 0 (x1471 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= x2993 (x103 (x1159 x2614 x1561 x2993))))
(assert (x2891 x86))
(assert (x2891 x2073))
(assert (x2327 x2770))
(assert (=> (>= 10000 x1015) (= (x1471 x1015) 0)))
(assert (x2891 x1702))
(assert (x2891 x1307))
(assert (x2891 x1922))
(assert (x2891 x169))
(assert (x2891 x2668))
(assert (not (x800 (x1159 x2614 x1561 x2993))))
(assert (=> (>= 10000 x1142) (= (x1471 x1142) 0)))
(assert (x2891 x3008))
(assert (= x870 (x81 (x1258 x1126 x1635 x67 x777 x870 x2495 x541))))
(assert (x2891 x214))
(assert (= x2061 (x1466 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817))))
(assert (= x1821 (=> (and (<= 1 x2060) (<= x63 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x511 (- x2060 x63)) x28) (= x2350 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2947)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x63) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x63) (= x2060 (x3072 (+ x2316 x2350))) (= (x511 (- x28 32)) x1354) (> x2060 x63) (= (x3072 (+ 31 x1358)) x2947) (= (x1300 x63) x1672) (= (x3072 (+ x1358 x2316)) x1182) (= (>= 224 x1672) x2606) (= (x3072 (+ x63 32)) x516)) (and x2606 (=> (and (= x2266 (x1300 x2752)) (= x1374 (x3072 (+ x516 128))) (= (x436 x2918) x1501) (= (x3072 (+ x516 32)) x116) (= x2441 (x3072 (+ 32 x516))) (= x720 (x3072 (+ 160 x516))) (= x2096 (x1300 x838)) (= (x2282 x1672 x2397 x1980 x1713 x482) x972) (<= 1 x2038) (= x2038 (x1300 x248)) (= x710 (x3072 (+ 32 x248))) (= x2708 (x1300 x645)) (= x632 (x2577 x1672 x2486)) (= x482 (x1300 x929)) (= (x1504 x1672 x2007 x1861 x1737 x1964 x2266) x2963) (= (x3072 (+ x516 160)) x645) (= x2397 (x1300 x516)) (= x2918 (x436 x1756)) (= (x1300 x1523) x958) (= x2073 (x3072 (+ 32 x516))) (= (x876 0) x2476) (= x1964 (x1300 x1702)) (= x1861 (x1300 x116)) (= x1713 (x1300 x16)) (= (x1300 x2441) x1654) (= (x3072 (+ x516 64)) x2647) (= x714 (x1300 x516)) (= x1702 (x3072 (+ 96 x516))) (= (x1300 x516) x2486) (= x1276 (x1300 x1374)) (= x3044 (x1814 x1672 x2459 x872 x2204)) (= x2459 (x1300 x516)) (= x684 (x3072 (+ x516 64))) (= x810 (ite (= x1672 0) x2476 (ite (>= 32 x1672) x632 (ite (<= x1672 64) x569 (ite (>= 96 x1672) x3044 (ite (<= x1672 128) x972 (ite (>= 160 x1672) x2963 (ite (<= x1672 192) x1865 (ite (>= 224 x1672) x1705 x2885))))))))) (= x1116 (x1300 x1323)) (= (x1300 x178) x202) (= (x1300 x396) x448) (= x872 (x1300 x2073)) (= x1816 (x1300 x720)) (= x1755 (x1300 x1540)) (= x838 (x3072 (+ x516 96))) (= (x3072 (+ 32 x516)) x378) (= (x1300 x516) x1910) (= (x1159 x1672 x714 x202) x569) (= (x3072 (+ x516 192)) x1540) (= (x1300 x378) x1980) (= x2007 (x1300 x516)) (= (x3072 (+ 96 x516)) x1323) (= (x3072 (+ x516 32)) x396) (= (x3072 (+ 96 x516)) x929) (= x467 (x3072 (+ x516 64))) (= (x3072 (+ x516 64)) x16) (= x1737 (x1300 x684)) (= x2204 (x1300 x2647)) (= x2835 (not (> x1501 1))) (= x2455 (x3072 (+ x516 64))) (= x1865 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816)) (= (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755) x1705) (= (x1300 x2455) x1010) (= x648 (x1300 x467)) (= x2583 (x1300 x516)) (= x2752 (x3072 (+ 128 x516))) (= (x3072 (+ 32 x516)) x178) (= (x3072 (+ 128 x516)) x1523)) (and x2835 (=> (= x1451 x2060) x1556)))))))
(assert (x2891 x1451))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2577 x213 x608)))
(assert (=> (>= 10000 x1343) (= 0 (x1471 x1343))))
(assert (= x290 (x616 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290))))
(assert (= (and x1708 x447) x890))
(assert (= (x103 (x2282 x2707 x1511 x1341 x3019 x433)) x1341))
(assert (x2891 x993))
(assert (=> (<= x2465 10000) (= (x1471 x2465) 0)))
(assert (< (x1258 x169 x138 x1801 x3057 x421 x1443 x474) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x2177))
(assert (x2891 x466))
(assert (= x7 (x623 (x1814 x7 x3034 x780 x133))))
(assert (x2891 x1589))
(assert (x2891 x1287))
(assert (x2891 x2216))
(assert (= (and (not x288) x1656) x2883))
(assert (x2891 x127))
(assert (= (x81 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998)) x2610))
(assert (=> (<= x770 10000) (= 0 (x1471 x770))))
(assert (x2891 x1251))
(assert (x2891 x2444))
(assert (x2891 x2223))
(assert (= (=> (= (not (> x1098 128)) x2151) (and x2151 x621)) x1596))
(assert (=> (>= 10000 x2840) (= (x1471 x2840) 0)))
(assert (= (x1471 (x2577 x1603 x993)) (x2577 x1603 x993)))
(assert (= (x1504 x2614 x1049 x1039 x1117 x455 x768) (x1471 (x1504 x2614 x1049 x1039 x1117 x455 x768))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2577 x1958 x1733)))
(assert (= (=> (and (<= 1 x2742) (= (not (> x1567 1)) x821) (= x2742 (ite (= x2767 0) x2767 1)) (= (x1088 x1482) x1567)) (and x821 (=> (= x1700 x864) x2131))) x2830))
(assert (x2891 x2441))
(assert (x2891 x816))
(assert (x2891 x2919))
(assert (x2891 x584))
(assert (x189 x837))
(assert (x2891 x590))
(assert (x2891 x1639))
(assert (=> (<= x1413 10000) (= (x1471 x1413) 0)))
(assert (x2891 x2650))
(assert (x2891 x2607))
(assert (x2891 x3083))
(assert (= (x103 (x2282 x1483 x2545 x2565 x422 x2663)) x2565))
(assert (x2891 x1497))
(assert (x2891 x2898))
(assert (x2891 x735))
(assert (= (x1471 (x1159 x2707 x466 x1442)) (x1159 x2707 x466 x1442)))
(assert (x2891 x2325))
(assert (x2891 x231))
(assert (x2891 x2983))
(assert (x2891 x187))
(assert (> (x1258 x1126 x1635 x67 x777 x870 x2495 x541) 10000))
(assert (x2891 x268))
(assert (=> (<= x1224 10000) (= (x1471 x1224) 0)))
(assert (x2891 x2551))
(assert (x2891 x2236))
(assert (x2891 x2176))
(assert (=> (>= 10000 x1731) (= (x1471 x1731) 0)))
(assert (x2891 x2171))
(assert (x2891 x1520))
(assert (= x2893 (or x335 x680)))
(assert (=> (<= x3105 10000) (= (x1471 x3105) 0)))
(assert (= (and x199 (not x1011)) x1636))
(assert (x2891 x2059))
(assert (x2891 x638))
(assert (> (x1504 x7 x2603 x2561 x2878 x2669 x1308) 10000))
(assert (=> (<= x1654 10000) (= (x1471 x1654) 0)))
(assert (x2891 x2524))
(assert (= (x103 (x1504 x2623 x1055 x2928 x2391 x1418 x198)) x2928))
(assert (x2891 x2397))
(assert (x2891 x525))
(assert (= x798 (x623 (x1814 x798 x2193 x2864 x1477))))
(assert (= (x533 (x2577 x798 x168)) x168))
(assert (= x2879 (x81 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290))))
(assert (x2891 x1500))
(assert (x2891 x1310))
(assert (x2891 x3125))
(assert (x2891 x1361))
(assert (x2891 x2531))
(assert (> (x2282 x2614 x2990 x3078 x2954 x2913) 10000))
(assert (x2891 x646))
(assert (x2891 x1911))
(assert (x2891 x2614))
(assert (= x404 (x103 (x1814 x1483 x2946 x404 x386))))
(assert (= x2237 (or x1714 x2921)))
(assert (x2891 x2349))
(assert (x2891 x1387))
(assert (= (x533 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)) x2093))
(assert (=> (<= x608 10000) (= (x1471 x608) 0)))
(assert (= x3032 (x103 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224))))
(assert (=> (<= x2044 10000) (= (x1471 x2044) 0)))
(assert (=> (<= x832 10000) (= (x1471 x832) 0)))
(assert (= x422 (x237 (x2282 x1483 x2545 x2565 x422 x2663))))
(assert (x2891 x320))
(assert (x2891 x1035))
(assert (x2891 x1951))
(assert (x2891 x2048))
(assert (x2891 x3056))
(assert (= (x103 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)) x2286))
(assert (x800 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (> (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536) 10000))
(assert (=> (<= x1119 10000) (= 0 (x1471 x1119))))
(assert (= x2444 (x1466 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754))))
(assert (=> (<= x1703 10000) (= 0 (x1471 x1703))))
(assert (x2891 x2708))
(assert (x2891 x238))
(assert (< 10000 (x1504 x3036 x1405 x426 x1138 x1642 x790)))
(assert (x2891 x67))
(assert (x2891 x2193))
(assert (x2891 x2440))
(assert (x2891 x707))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639902) 0))
(assert (x2891 x678))
(assert (=> (>= 10000 x888) (= 0 (x1471 x888))))
(assert (x2891 x1511))
(assert (= (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783) (x1471 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2577 x1603 x993)))
(assert (x800 18446744073709551614))
(assert (= (x237 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750)) x736))
(assert (x2891 x26))
(assert (x2891 x474))
(assert (< 10000 (x1159 x798 x996 x125)))
(assert (= x1755 (x2319 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755))))
(assert (= x997 (=> (and (= x1830 (x3072 (+ 32 x346))) (= (x3072 (+ x530 x384)) x915) (or (>= 18446746139588821027 x1054) (>= x1054 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= (x2605 x346) x1500) (= (not (< x1830 x1261)) x2617) (not (< x2343 x796)) (= x701 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x10)) (or (>= x1996 57896044618658097711785492504343953926634992332820282019728792003956564820100) (>= 18446746139588821059 x1996)) (<= 2 x2343) (or (<= x346 18446746139588821027) (>= x346 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= x384 (x2605 x1054)) (>= 18446744073709551614 x2988) (= (+ x384 x2818) x1555) (>= 18446744073709551614 x701) (= x1265 (x2605 x2533)) (< x796 x2343) (<= x2988 18446744073709551613) (= x2176 (x2605 x1897)) (<= x2988 18446744073709551613) (= x1419 (x2605 x1932)) (<= x1500 18446744073709551615) (<= x384 18446744073709551615) (not (> x915 x1996)) (= x1897 (x3072 (+ x1932 32))) (> x796 x2988) (= x2288 (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1902)) (or (>= x2988 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 18446744073709551518 x2988)) (= (x3072 (+ x1054 32)) x530) (<= x1598 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x1598 96) (>= 18446744073709551615 x2343) (<= x2988 18446744073709551614) (<= x1265 1461501637330902918203684832716283019655932542975) (or (>= 18446744073709551518 x2988) (>= x2988 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (or (<= x2988 18446744073709551518) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2988)) (= x2343 (+ x701 x796)) (= x10 (+ x2288 63)) (= x1902 (+ 31 x384)) (= x898 (x3072 (+ x2988 32))) (= x1598 (x511 (- x1996 x2533))) (or (>= x2533 57896044618658097711785492504343953926634992332820282019728792003956564820068) (<= x2533 18446746139588821027)) (= x2533 (x3072 (+ x346 x1500))) (= (+ x796 32) x2818) (= (x3072 (+ 32 x2533)) x1932) (>= 18446744073709551613 x2988) (or (and (> x1996 x279) (= (<= x279 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1996 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1996) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x279))) (= (x3072 (+ 32 x898)) x1445) (>= 18446744073709551615 x2176) (= (x3072 (+ 31 x1054)) x279) (= (x3072 (+ x2533 x2176)) x1054) (>= 18446744073709551614 x2988) (= x796 (x3072 (+ x2988 96))) (not (< x796 x2988))) (and (=> (= x1696 x2343) x730) x2617))))
(assert (x2891 x2539))
(assert (=> (<= x2983 10000) (= (x1471 x2983) 0)))
(assert (x2891 x644))
(assert (x2891 x460))
(assert (x2891 x2886))
(assert (= x2785 (=> (and (= 0 x2139) (= x2139 (x641 x1475)) (= x3005 x50) (= x1879 (ite (= 0 x1386) (ite (= x1386 0) 1 0) (ite (= 0 x1671) 1 0))) (= x1879 0)) x2715)))
(assert (x2891 x582))
(assert (= (x103 (x2282 x798 x1058 x2981 x2077 x2596)) x2981))
(assert (x2891 x1353))
(assert (= x993 (x533 (x2577 x1603 x993))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1159 x3036 x756 x2874)))
(assert (=> (<= x2796 10000) (= 0 (x1471 x2796))))
(assert (=> (>= 10000 x1236) (= 0 (x1471 x1236))))
(assert (x2891 x529))
(assert (= x1792 (and x3122 x631)))
(assert (x2891 x2302))
(assert (=> (>= 10000 x1999) (= (x1471 x1999) 0)))
(assert (= (x623 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)) x1958))
(assert (=> (>= 10000 x2935) (= 0 (x1471 x2935))))
(assert (x2891 x1268))
(assert (not (x800 (x2282 x2465 x1473 x582 x634 x1162))))
(assert (> (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706) 10000))
(assert (< (x1814 x2707 x1722 x1019 x360) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x1984))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1504 x2707 x1219 x476 x1109 x2157 x2673)))
(assert (=> (<= x1494 10000) (= (x1471 x1494) 0)))
(assert (x2891 x2613))
(assert (x2891 x1924))
(assert (x2891 x1808))
(assert (x2891 x3012))
(assert (x2891 x2726))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2282 x1603 x3069 x2306 x1628 x2645)))
(assert (= 0 (x1471 88383320980755791914082775550597828907713979028428263264130000526486271950848)))
(assert (x2891 x1142))
(assert (x2891 x2568))
(assert (= (and (not x2836) x1137) x2218))
(assert (x2891 x1825))
(assert (x2891 x2199))
(assert (x2891 x2035))
(assert (= (x1471 (x2577 x2623 x2802)) (x2577 x2623 x2802)))
(assert (= (x1471 (x2282 x2707 x1511 x1341 x3019 x433)) (x2282 x2707 x1511 x1341 x3019 x433)))
(assert (x2891 x2901))
(assert (= x912 (x533 (x2577 x7 x912))))
(assert (x2891 x2969))
(assert (= (x1159 x7 x3046 x395) (x1471 (x1159 x7 x3046 x395))))
(assert (x2891 x2810))
(assert (x2891 x2065))
(assert (= (x623 (x2577 x2707 x2351)) x2707))
(assert (=> (>= 10000 x93) (= 0 (x1471 x93))))
(assert (x2891 x2086))
(assert (x2891 x2586))
(assert (= x541 (x616 (x1258 x1126 x1635 x67 x777 x870 x2495 x541))))
(assert (= x2397 (x533 (x2282 x1672 x2397 x1980 x1713 x482))))
(assert (x2891 x2910))
(assert (not (x800 (x1814 x1126 x1287 x591 x1400))))
(assert (=> (>= 10000 x476) (= 0 (x1471 x476))))
(assert (x2891 x1548))
(assert (= (x1471 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000)) (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000)))
(assert (= x238 (x533 (x1504 x169 x238 x1196 x733 x2713 x1297))))
(assert (= x1201 (x237 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707))))
(assert (x2891 x2294))
(assert (x2891 x2951))
(assert (x2891 x2385))
(assert (=> (<= x2096 10000) (= (x1471 x2096) 0)))
(assert (x2891 x2829))
(assert (= (x623 (x1159 x1483 x309 x2716)) x1483))
(assert (x2891 x1420))
(assert (< (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x316))
(assert (x2891 x1654))
(assert (= (x533 (x1159 x798 x996 x125)) x996))
(assert (= (x1471 (x1814 x213 x1144 x3008 x1487)) (x1814 x213 x1144 x3008 x1487)))
(assert (= x798 (x623 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678))))
(assert (x2891 x1006))
(assert (x2891 x948))
(assert (x2891 x2077))
(assert (x2891 x3094))
(assert (= (x533 (x1504 x213 x581 x339 x1112 x1462 x1033)) x581))
(assert (= (x2319 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224)) x1224))
(assert (x2891 x2129))
(assert (= x1236 (x1466 (x1504 x1126 x2297 x381 x68 x1441 x1236))))
(assert (x2891 x386))
(assert (= x2516 (=> (and (= x498 (> x1812 0)) (= x1812 (x506 x769)) (= x769 (x506 x1756))) (and (=> (and x498 (and (= x124 (x3072 (+ 32 x740))) (= x1697 (x506 x468)) (= x1358 (x2826 x566)) (= (< 0 x1358) x2643) (= x566 (x506 x2247)) (= (x3072 (+ x2191 128)) x950) (= x2191 (x3072 (+ x63 32))) (= x2493 (x2502 1461501637330902918203684832716283019655932542975 x1081)) (= x2580 (x3072 (+ 32 x124))) (= x1465 (x506 x1756)) (= x905 (x3072 (+ x1697 32))) (= (x506 x905) x1059) (= (x3072 (+ 32 x566)) x3076) (= x1081 (x506 x1697)) (= (x3072 (+ 32 x905)) x2247) (= x2316 (x3072 (+ x950 32))) (= (x506 x1465) x1380) (= x740 (x3072 (+ x2191 32))) (= (x3072 (+ x1465 32)) x468) (>= x1380 1))) (and (=> (and (and (= (x813 x3076) x1811) (= (< 32 x1358) x1296)) x2643) (and (=> (and x1296 (and (= x1395 (< 64 x1358)) (= (x3072 (+ 32 x3076)) x2872) (= (x1321 x2872) x713) (= (x3072 (+ x2316 32)) x9))) (and (=> (not x1395) x1821) (=> (and x1395 (and (= x3101 (> x1358 96)) (= (x3072 (+ 64 x2316)) x340) (= (x3072 (+ 64 x3076)) x1455) (= (x305 x1455) x2017))) (and (=> (not x3101) x1821) (=> x3101 x1806))))) (=> (not x1296) x1821))) (=> (not x2643) x1821))) (=> (and (not x498) (= x1451 x63)) x1556)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678)))
(assert (=> (>= 10000 x1367) (= 0 (x1471 x1367))))
(assert (=> (<= x371 10000) (= 0 (x1471 x371))))
(assert (x2891 x2862))
(assert (= x1079 (x533 (x1504 x1483 x1079 x155 x437 x2103 x142))))
(assert (= x1603 (x623 (x2577 x1603 x993))))
(assert (x2891 x2908))
(assert (x2891 x2293))
(assert (x2891 x1025))
(assert (= (x81 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)) x3109))
(assert (x2891 x2060))
(assert (x2891 x360))
(assert (= (and x704 x2569) x1869))
(assert (x2891 x2288))
(assert (x2891 x1104))
(assert (= (x616 (x1258 x169 x138 x1801 x3057 x421 x1443 x474)) x474))
(assert (x2891 x72))
(assert (x2891 x93))
(assert (x2891 x2994))
(assert (x2891 x2854))
(assert (x2891 x2167))
(assert (x2891 x1077))
(assert (= x3118 (x237 (x1504 x1603 x281 x2281 x3118 x2424 x434))))
(assert (= (or x1577 (and (not x1152) x1222)) x2521))
(assert (x2891 x1946))
(assert (x2891 x1948))
(assert (= x1332 (x1466 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347))))
(assert (x2891 x788))
(assert (not (x800 (x1504 x1483 x1079 x155 x437 x2103 x142))))
(assert (x2891 x1481))
(assert (= x3039 (or x1245 x361)))
(assert (x2891 x1008))
(assert (x2891 x1921))
(assert (=> (<= x2519 10000) (= (x1471 x2519) 0)))
(assert (x2891 x3022))
(assert (x2891 x1340))
(assert (= (and (not x2523) x2800) x1273))
(assert (= (x623 (x2282 x1603 x3069 x2306 x1628 x2645)) x1603))
(assert (x2891 x1675))
(assert (=> (<= x426 10000) (= 0 (x1471 x426))))
(assert (=> (<= x1922 10000) (= 0 (x1471 x1922))))
(assert (= (x533 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)) x985))
(assert (x2891 x2848))
(assert (x2891 x1200))
(assert (= (x1471 (x1504 x2707 x1219 x476 x1109 x2157 x2673)) (x1504 x2707 x1219 x476 x1109 x2157 x2673)))
(assert (< 10000 (x1814 x1603 x531 x3113 x3017)))
(assert (= (x103 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556)) x2425))
(assert (x2891 x1444))
(assert (x2891 x1409))
(assert (x2891 x440))
(assert (x2891 x493))
(assert (= (x81 (x2282 x213 x93 x2128 x3006 x1758)) x1758))
(assert (not (x800 (x1159 x1126 x1498 x2867))))
(assert (x2891 x913))
(assert (=> (>= 10000 x1720) (= (x1471 x1720) 0)))
(assert (x2891 x1224))
(assert (x2891 x2145))
(assert (=> (<= x2129 10000) (= (x1471 x2129) 0)))
(assert (= x171 (x103 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061))))
(assert (x2891 x2824))
(assert (=> (<= x1729 10000) (= 0 (x1471 x1729))))
(assert (x2891 x2508))
(assert (= (x1258 x798 x1507 x8 x2702 x3100 x2444 x754) (x1471 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2577 x1672 x2486)))
(assert (not (x800 (x1504 x3036 x1405 x426 x1138 x1642 x790))))
(assert (x2891 x944))
(assert (x2891 x2291))
(assert (x2891 x864))
(assert (x2891 x2434))
(assert (x2891 x2597))
(assert (x2891 x2768))
(assert (=> (>= 10000 x482) (= 0 (x1471 x482))))
(assert (=> (<= x1930 10000) (= 0 (x1471 x1930))))
(assert (x2891 x148))
(assert (< (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x3025))
(assert (x2891 x2871))
(assert (x2891 x2084))
(assert (= x1377 (and (not x602) x1773)))
(assert (= x640 (x81 (x2282 x2623 x1340 x2860 x3121 x640))))
(assert (> (x2577 x1126 x358) 10000))
(assert (x2891 x2119))
(assert (x2891 x2143))
(assert (x2891 x396))
(assert (x2891 x920))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628)))
(assert (= x3078 (x103 (x2282 x2614 x2990 x3078 x2954 x2913))))
(assert (= (x237 (x1814 x1483 x2946 x404 x386)) x386))
(assert (x2891 x3005))
(assert (x2891 x3026))
(assert (x2891 x336))
(assert (x2891 x2875))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x122 (x533 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783))))
(assert (x2891 x2172))
(assert (=> (>= 10000 x282) (= 0 (x1471 x282))))
(assert (= x1225 (x103 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808))))
(assert (= (or x1051 x840) x1693))
(assert (= x1138 (x237 (x1504 x3036 x1405 x426 x1138 x1642 x790))))
(assert (x2891 x1769))
(assert (=> (<= x68 10000) (= (x1471 x68) 0)))
(assert (x2891 x1560))
(assert (= (x533 (x2282 x2623 x1340 x2860 x3121 x640)) x1340))
(assert (x800 2065879269284))
(assert (x2891 x1182))
(assert (x2891 x3099))
(assert (x2891 x2075))
(assert (= (x533 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000)) x770))
(assert (x2891 x1049))
(assert (x2891 x477))
(assert (= (x103 (x1258 x1126 x1635 x67 x777 x870 x2495 x541)) x67))
(assert (> (x1258 x213 x1740 x2217 x1950 x2879 x797 x290) 10000))
(assert (= x7 (x623 (x1504 x7 x2603 x2561 x2878 x2669 x1308))))
(assert (x2891 x3076))
(assert (x2891 x2164))
(assert (= (and x2807 (not x1103)) x1992))
(assert (= (and x2076 x1593) x2136))
(assert (x2891 x1809))
(assert (x2891 x1731))
(assert (=> (<= x1589 10000) (= (x1471 x1589) 0)))
(assert (x2891 x1904))
(assert (x2700 x1368))
(assert (= x426 (x103 (x1504 x3036 x1405 x426 x1138 x1642 x790))))
(assert (< 10000 (x2577 x1958 x1733)))
(assert (x2891 x755))
(assert (x2891 x2843))
(assert (not (x800 (x2282 x1958 x1176 x1602 x781 x140))))
(assert (= 0 (x1471 18446744073709551614)))
(assert (= (x1471 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061)) (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061)))
(assert (x2891 x1023))
(assert (x2891 x161))
(assert (x2891 x2725))
(assert (x2891 x1618))
(assert (x2891 x1811))
(assert (x2891 x234))
(assert (x2891 x1004))
(assert (x2891 x2403))
(assert (= x1958 (x623 (x1159 x1958 x2361 x333))))
(assert (x2891 x722))
(assert (=> (<= x2077 10000) (= (x1471 x2077) 0)))
(assert (x2891 x213))
(assert (= x232 (and (not x2153) x2953)))
(assert (=> (>= 10000 x2361) (= 0 (x1471 x2361))))
(assert (= x2750 (x616 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750))))
(assert (x2891 x2315))
(assert (< 10000 (x2577 x2623 x2802)))
(assert (x2891 x1131))
(assert (x2891 x2784))
(assert (not (x800 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061))))
(assert (< 10000 (x1504 x1483 x1079 x155 x437 x2103 x142)))
(assert (x2891 x2350))
(assert (x2891 x710))
(assert (= (x1258 x213 x1740 x2217 x1950 x2879 x797 x290) (x1471 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290))))
(assert (= (and x1021 x71) x1195))
(assert (x2891 x698))
(assert (= (x623 (x2282 x1958 x1176 x1602 x781 x140)) x1958))
(assert (> (x2577 x169 x2824) 10000))
(assert (x2891 x244))
(assert (= x1381 (=> (and (= (x1226 x839) x1338) (= x789 (x3072 (+ 1 x825))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x366)) (= x2182 (mod (* x789 64) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1717 (x3072 (+ 32 x366))) (= (x3072 (+ 64 x1338)) x1659) (> x441 x2481) (<= x2481 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2631 (x511 (- x2182 32))) (= (x1226 x788) x825) (= x441 (x3072 (+ 32 x1717))) (= x477 x441) (= (x3072 (+ 32 x839)) x788) (<= x2481 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2481 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ x788 x2631)) x366)) x2034)))
(assert (= (x1471 (x2282 x2614 x2990 x3078 x2954 x2913)) (x2282 x2614 x2990 x3078 x2954 x2913)))
(assert (x2891 x2774))
(assert (x2891 x2711))
(assert (= (x533 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556)) x1524))
(assert (= (x1466 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706)) x2109))
(assert (x800 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (x2891 x2206))
(assert (x2891 x1172))
(assert (= x7 (x623 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808))))
(assert (= (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750) (x1471 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750))))
(assert (= (x533 (x2282 x1603 x3069 x2306 x1628 x2645)) x3069))
(assert (x2891 x122))
(assert (x2700 x1984))
(assert (x2891 x2347))
(assert (x2891 x2960))
(assert (x2891 x526))
(assert (x2891 x2955))
(assert (x2700 x2242))
(assert (x2891 x171))
(assert (x2891 x1850))
(assert (= (x616 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347)) x347))
(assert (= x1049 (x533 (x1504 x2614 x1049 x1039 x1117 x455 x768))))
(assert (=> (>= 10000 x1443) (= (x1471 x1443) 0)))
(assert (= (and x1305 x2710) x2030))
(assert (x2891 x1331))
(assert (x2891 x1907))
(assert (=> (>= 10000 x2164) (= 0 (x1471 x2164))))
(assert (= (and x1613 x1725) x2940))
(assert (x2891 x209))
(assert (=> (<= x2007 10000) (= 0 (x1471 x2007))))
(assert (x2891 x1219))
(assert (x2891 x247))
(assert (= (x237 (x1258 x169 x138 x1801 x3057 x421 x1443 x474)) x3057))
(assert (= x945 (and (not x1593) x2076)))
(assert (= x2209 (and x1068 (not x924))))
(assert (=> (>= 10000 x1964) (= 0 (x1471 x1964))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1159 x1483 x309 x2716)))
(assert (x2891 x768))
(assert (=> (>= 10000 x654) (= 0 (x1471 x654))))
(assert (< 10000 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)))
(assert (=> (>= 10000 x640) (= 0 (x1471 x640))))
(assert (x2891 x358))
(assert (= (=> (and (= x2374 (x1437 x848)) (= x1310 (x511 (- x1638 32))) (= (x3072 (+ x848 32)) x1099) (= (x1437 x2776) x1770) (= (x1437 x1099) x1984) (= (x3072 (+ 32 x1578)) x2520) (= x2776 (x1437 x1969)) (= (x3072 (+ x1578 32)) x686) (>= 1 x2374) (= (x3072 (+ 32 x2520)) x461) (= (x2502 1461501637330902918203684832716283019655932542975 x1984) x2339) (<= x1770 2) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639712 x1578)) (= x1362 (x3072 (+ x229 32))) (= x2320 (x1437 x1534)) (= (x3072 (+ x1534 32)) x2198) (= (x1437 x2410) x1874) (>= x2909 1) (= x1534 (x3072 (+ x1099 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639712 x1578)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1578) (<= x1578 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (<= x1958 224) x2190) (= (x511 (- x1294 x1578)) x1638) (> x1294 x1578) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639712 x1578)) (= x848 (x3072 (+ x2776 32))) (= (x1437 x2198) x31) (= x1958 (x399 x1578)) (= x2909 (x1437 x1874)) (= (x3072 (+ 32 x1362)) x1165) (= x1969 (x3072 (+ 32 x1874))) (= x229 (x3072 (+ x461 32))) (= x1294 (x3072 (+ x2520 192))) (= x1975 (x3072 (+ x1165 32))) (<= x1578 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and x2190 (=> (and (= x781 (x399 x2048)) (= x451 (x3072 (+ x686 160))) (= x918 (x399 x1004)) (= x1189 (x3072 (+ 96 x686))) (<= 1 x367) (= (x3072 (+ 64 x686)) x1121) (= (x399 x686) x991) (= x1664 (x3072 (+ x686 32))) (= x1701 (x399 x14)) (= (x3072 (+ 64 x686)) x2201) (= x1732 (x876 0)) (= (x3072 (+ x686 96)) x764) (= (x399 x1167) x454) (= (x399 x2409) x990) (= (x399 x686) x1733) (= (x399 x686) x2983) (= (x399 x1057) x331) (= (x399 x686) x2361) (= (x3072 (+ 160 x686)) x1536) (= (x1258 x1958 x985 x918 x2129 x3109 x267 x1872) x1652) (= x940 (ite (= 0 x1958) x1732 (ite (>= 32 x1958) x1771 (ite (<= x1958 64) x44 (ite (>= 96 x1958) x801 (ite (>= 128 x1958) x949 (ite (<= x1958 160) x1698 (ite (>= 192 x1958) x1652 (ite (<= x1958 224) x1807 x2194))))))))) (= (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956) x1807) (= (x399 x764) x3109) (= x1771 (x2577 x1958 x1733)) (= x1015 (x399 x2201)) (= (x3072 (+ x686 96)) x14) (= (x399 x1189) x140) (= (x1504 x1958 x991 x431 x1015 x1639 x454) x1698) (= (x3072 (+ 32 x686)) x1004) (= (x3072 (+ x2160 32)) x1339) (= x1176 (x399 x686)) (= x801 (x1814 x1958 x379 x1119 x1378)) (= x1057 (x3072 (+ 32 x686))) (= x367 (x399 x2160)) (= (x393 x597) x1107) (= x985 (x399 x686)) (= (x399 x451) x1872) (= (x399 x1517) x2587) (= (x393 x2410) x597) (= (x399 x1073) x1956) (= (x399 x1456) x1378) (= x2409 (x3072 (+ x686 128))) (= (x3072 (+ 32 x686)) x497) (= x1073 (x3072 (+ x686 192))) (= x2048 (x3072 (+ 64 x686))) (= (x399 x1664) x1602) (= x173 (x3072 (+ 96 x686))) (= (x3072 (+ x686 32)) x2907) (= (not (< 1 x1107)) x1815) (= (x399 x211) x267) (= x1119 (x399 x2021)) (= (x1159 x1958 x2361 x333) x44) (= (x2282 x1958 x1176 x1602 x781 x140) x949) (= x1639 (x399 x173)) (= (x399 x2907) x431) (= x333 (x399 x497)) (= x78 (x399 x1536)) (= (x3072 (+ 128 x686)) x211) (= x2021 (x3072 (+ 32 x686))) (= x1517 (x3072 (+ x686 64))) (= x379 (x399 x686)) (= (x399 x1121) x2129) (= (x3072 (+ 128 x686)) x1167) (= x1456 (x3072 (+ x686 64)))) (and (=> (= x1294 x459) x1797) x1815)))) x657))
(assert (= x1409 (x103 (x1159 x169 x502 x1409))))
(assert (x2891 x1525))
(assert (x2891 x1017))
(assert (x2891 x2675))
(assert (< (x2577 x798 x168) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2327 x2242))
(assert (x2891 x2062))
(assert (x2891 x1002))
(assert (x2891 x1690))
(assert (= (x103 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)) x918))
(assert (= x2803 (and x369 x119)))
(assert (x2891 x195))
(assert (x2891 x1322))
(assert (x2891 x1567))
(assert (x2891 x2580))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1504 x1672 x2007 x1861 x1737 x1964 x2266)))
(assert (=> (>= 10000 x198) (= 0 (x1471 x198))))
(assert (= (x1159 x2465 x108 x1431) (x1471 (x1159 x2465 x108 x1431))))
(assert (x2891 x536))
(assert (not (x800 (x1814 66 x1836 x2165 x832))))
(assert (= (x81 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)) x2006))
(assert (=> (>= 10000 x1706) (= 0 (x1471 x1706))))
(assert (= x2805 (and (not x1849) x2803)))
(assert (x2327 x82))
(assert (x2891 x2263))
(assert (= (=> (and (or (and (and (= x128 (x3072 (+ x1285 32))) (= x2510 (* 32 x287))) (not x1845)) x1845) (and (< x1285 x1578) (= x1845 (= x287 0)) (= x1551 (x389 x23)) (<= x287 18446744073709551615) (>= x1578 1) (= x287 (x389 x1551)) (= x1841 (* 32 x287)) (= x1578 (x3072 (+ (mod (+ 32 x1841) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1285))) (<= x1285 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1285) (<= x1285 115792089237316195423570985008687907853269984665640564039457584007913129639934))) x3107) x2786))
(assert (=> (<= x1171 10000) (= (x1471 x1171) 0)))
(assert (x2891 x3023))
(assert (=> (>= 10000 x2610) (= (x1471 x2610) 0)))
(assert (x2891 x1374))
(assert (= (x533 (x1159 x1483 x309 x2716)) x309))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1814 x798 x2193 x2864 x1477)))
(assert (x2891 x146))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (= x3010 (x103 (x2282 x169 x888 x3010 x1142 x2137))))
(assert (x2891 x2449))
(assert (= x2259 (or x3096 x3097)))
(assert (= (x2319 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)) x2347))
(assert (x2891 x2804))
(assert (x2891 x2308))
(assert (= x1937 (x237 (x1814 x2614 x2164 x2625 x1937))))
(assert (= (x103 (x1814 x1126 x1287 x591 x1400)) x591))
(assert (x2891 x966))
(assert (=> (>= 10000 x2946) (= (x1471 x2946) 0)))
(assert (= (x237 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706)) x282))
(assert (= x403 (or x1001 x318)))
(assert (x2891 x592))
(assert (x2891 x224))
(assert (x2891 x981))
(assert (x2891 x2781))
(assert (x2891 x1527))
(assert (=> (>= 10000 x2260) (= 0 (x1471 x2260))))
(assert (x2891 x2229))
(assert (= x931 (x103 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706)))
(assert (not (x800 (x1504 x7 x2603 x2561 x2878 x2669 x1308))))
(assert (= x476 (x103 (x1504 x2707 x1219 x476 x1109 x2157 x2673))))
(assert (x2891 x2197))
(assert (x2891 x2266))
(assert (= (x237 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)) x2587))
(assert (x2891 x608))
(assert (x2891 x1672))
(assert (= (and x1583 (not x170)) x2566))
(assert (=> (<= x145 10000) (= 0 (x1471 x145))))
(assert (x2891 x422))
(assert (x2891 x364))
(assert (x189 x1069))
(assert (not (x800 (x2282 x169 x888 x3010 x1142 x2137))))
(assert (= x573 (and x1887 (not x1020))))
(assert (x2891 x1638))
(assert (x2891 x459))
(assert (= (=> (and (= x2650 x321) (= x3116 x577) (= x737 x175) (= x22 x372)) x2789) x2500))
(assert (x2891 x748))
(assert (=> (>= 10000 x785) (= (x1471 x785) 0)))
(assert (x2891 x186))
(assert (= (x2282 x213 x93 x2128 x3006 x1758) (x1471 (x2282 x213 x93 x2128 x3006 x1758))))
(assert (x2891 x2170))
(assert (= (x616 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816)) x1816))
(assert (x2891 x1229))
(assert (x2700 x2945))
(assert (= (x616 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628)) x2628))
(assert (x2891 x155))
(assert (x2891 x2669))
(assert (=> (<= x2990 10000) (= (x1471 x2990) 0)))
(assert (x2891 x2374))
(assert (not (x800 (x876 0))))
(assert (x2891 x9))
(assert (x2891 x342))
(assert (=> (<= x1642 10000) (= 0 (x1471 x1642))))
(assert (= x2529 (x616 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055))))
(assert (= (x103 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347)) x1742))
(assert (= (and x1974 x518) x284))
(assert (x2891 x1533))
(assert (not (x800 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628))))
(assert (=> (>= 10000 x2351) (= 0 (x1471 x2351))))
(assert (= (x81 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678)) x1913))
(assert (= (x623 (x2282 x169 x888 x3010 x1142 x2137)) x169))
(assert (x2891 x1055))
(assert (= x2759 (or x676 x2729)))
(assert (= x1701 (x81 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956))))
(assert (x2891 x2324))
(assert (x2891 x2689))
(assert (x2891 x2647))
(assert (x2891 x542))
(assert (x2891 x2025))
(assert (x2891 x897))
(assert (x2891 x45))
(assert (> (x2282 x2707 x1511 x1341 x3019 x433) 10000))
(assert (x2891 x2933))
(assert (x2891 x2499))
(assert (x2891 x102))
(assert (x189 x1850))
(assert (< 10000 (x1159 x2465 x108 x1431)))
(assert (x800 79228162514264337593543950336))
(assert (x2700 x2082))
(assert (= (and x1887 x1020) x3110))
(assert (= x479 (x81 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061))))
(assert (x2891 x2543))
(assert (x2891 x825))
(assert (x2891 x354))
(assert (= x1626 (or x1858 x3075 x1326 x2209 x1723)))
(assert (=> (>= 10000 x3017) (= (x1471 x3017) 0)))
(assert (x2891 x1111))
(assert (= x1483 (x623 (x2577 x1483 x65))))
(assert (=> (<= x120 10000) (= 0 (x1471 x120))))
(assert (= x2707 (x623 (x1159 x2707 x466 x1442))))
(assert (x2891 x1772))
(assert (= x2086 (x616 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000))))
(assert (x2891 x1490))
(assert (> (x2577 x3036 x1882) 10000))
(assert (x2891 x574))
(assert (x2891 x23))
(assert (= (x623 (x2282 x2465 x1473 x582 x634 x1162)) x2465))
(assert (= x2204 (x237 (x1814 x1672 x2459 x872 x2204))))
(assert (> (x2282 x1958 x1176 x1602 x781 x140) 10000))
(assert (= (and (not x369) x119) x2092))
(assert (not (x800 (x1258 x213 x1740 x2217 x1950 x2879 x797 x290))))
(assert (x2327 x10))
(assert (not (x800 (x1159 x2707 x466 x1442))))
(assert (x2891 x2868))
(assert (x2891 x2486))
(assert (= x2370 (and x2497 x1337)))
(assert (= (x103 (x1504 x169 x238 x1196 x733 x2713 x1297)) x1196))
(assert (= x2690 (and (not x166) x90)))
(assert (x2327 x1940))
(assert (x2891 x2913))
(assert (= (or x879 x284 x863) x2729))
(assert (x2891 x2380))
(assert (= (and x3039 x721) x704))
(assert (not (x800 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421))))
(assert (x2891 x1480))
(assert (x2891 x1603))
(assert (x2891 x1487))
(assert (x2891 x2590))
(assert (x2891 x1826))
(assert (x2891 x992))
(assert (= x2479 (or x472 x1851)))
(assert (= (or x2999 x1547) x1021))
(assert (x2891 x795))
(assert (= (=> (and (= x2664 (x3072 (+ 32 x2943))) (= x762 (not (< 1 x2279))) (= (x3072 (+ 32 x2674)) x2499)) (and (=> (and (= 1 x2781) (= x2664 x1463) (= x2765 x2499)) x600) x762)) x621))
(assert (x2891 x1971))
(assert (= 0 (x1471 18446746139588821027)))
(assert (x2891 x488))
(assert (x2891 x1135))
(assert (x2891 x956))
(assert (= x2165 (x103 (x1814 66 x1836 x2165 x832))))
(assert (< (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2237 (not x1789)) x1646))
(assert (x2891 x1455))
(assert (= (and x2790 (not x2709)) x812))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x2891 x2140))
(assert (x2891 x1240))
(assert (x2700 x2463))
(assert (x2891 x1587))
(assert (x2891 x1390))
(assert (x2891 x1410))
(assert (= (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421) (x1471 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421))))
(assert (= x1116 (x81 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755))))
(assert (= x706 (x2319 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706))))
(assert (x2891 x107))
(assert (=> (<= x2084 10000) (= 0 (x1471 x2084))))
(assert (x2891 x2093))
(assert (= (x1814 x1958 x379 x1119 x1378) (x1471 (x1814 x1958 x379 x1119 x1378))))
(assert (x2891 x2944))
(assert (x2891 x2241))
(assert (x2891 x10))
(assert (x2891 x1942))
(assert (= x2914 (and x2688 x2743)))
(assert (x2891 x1362))
(assert (= (x1471 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (x2891 x479))
(assert (not (x800 (x2577 x213 x608))))
(assert (x2891 x2651))
(assert (x2891 x68))
(assert (x2891 x1726))
(assert (= x2096 (x81 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816))))
(assert (= x2657 (x616 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657))))
(assert (x2891 x1532))
(assert (< 10000 (x1159 x3036 x756 x2874)))
(assert (< (x1814 x7 x3034 x780 x133) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x1290))
(assert (x2891 x2722))
(assert (not (x800 (x1159 x7 x3046 x395))))
(assert (=> (>= 10000 x2095) (= 0 (x1471 x2095))))
(assert (= x2707 (x623 (x2282 x2707 x1511 x1341 x3019 x433))))
(assert (x2891 x553))
(assert (= (and x2766 x411) x1725))
(assert (x2891 x2695))
(assert (x2891 x1215))
(assert (x2891 x1566))
(assert (x2891 x1465))
(assert (< (x2282 x1672 x2397 x1980 x1713 x482) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x138 10000) (= (x1471 x138) 0)))
(assert (=> (>= 10000 x94) (= 0 (x1471 x94))))
(assert (x2891 x1956))
(assert (= (x1466 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)) x695))
(assert (x2891 x1221))
(assert (= x849 (and x2258 x647)))
(assert (= x198 (x1466 (x1504 x2623 x1055 x2928 x2391 x1418 x198))))
(assert (x2891 x1501))
(assert (not (x800 (x1159 x2465 x108 x1431))))
(assert (= x3008 (x103 (x1814 x213 x1144 x3008 x1487))))
(assert (x2891 x1602))
(assert (=> (>= 10000 x1617) (= 0 (x1471 x1617))))
(assert (=> (>= 10000 x1585) (= (x1471 x1585) 0)))
(assert (x2891 x367))
(assert (=> (<= x1678 10000) (= 0 (x1471 x1678))))
(assert (x2891 x2430))
(assert (= x1346 (x237 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817))))
(assert (x2891 x2089))
(assert (x2891 x470))
(assert (= x2669 (x81 (x1504 x7 x2603 x2561 x2878 x2669 x1308))))
(assert (x2891 x543))
(assert (= x1483 (x623 (x2282 x1483 x2545 x2565 x422 x2663))))
(assert (=> (<= x998 10000) (= 0 (x1471 x998))))
(assert (x800 18446744073709551167))
(assert (x2891 x568))
(assert (x2891 x308))
(assert (x2891 x2422))
(assert (x2891 x7))
(assert (= x654 (x103 (x1159 x2623 x1644 x654))))
(assert (=> (>= 10000 x2216) (= 0 (x1471 x2216))))
(assert (= (x2577 x1483 x65) (x1471 (x2577 x1483 x65))))
(assert (x2891 x1605))
(assert (x2891 x1009))
(assert (not (x800 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000))))
(assert (x2891 x56))
(assert (< 10000 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)))
(assert (x2891 x3080))
(assert (x2891 x1046))
(assert (not x2896))
(assert (not (x800 (x2577 x2623 x2802))))
(assert (=> (>= 10000 x2625) (= (x1471 x2625) 0)))
(assert (=> (>= 10000 x1603) (= (x1471 x1603) 0)))
(assert (=> (>= 10000 x348) (= 0 (x1471 x348))))
(assert (=> (>= 10000 x174) (= (x1471 x174) 0)))
(assert (x2891 x918))
(assert (= (x1466 (x1504 x2614 x1049 x1039 x1117 x455 x768)) x768))
(assert (x2891 x1058))
(assert (x2891 x2579))
(assert (= (x1471 21408440236001274921485009970742555221786587156444570319896389698385254285312) 0))
(assert (=> (>= 10000 x2459) (= (x1471 x2459) 0)))
(assert (x2891 x13))
(assert (x2891 x32))
(assert (= (and x1802 x1917) x1305))
(assert (< 10000 (x1814 x2707 x1722 x1019 x360)))
(assert (=> (>= 10000 x358) (= (x1471 x358) 0)))
(assert (= x2864 (x103 (x1814 x798 x2193 x2864 x1477))))
(assert (=> (<= x1346 10000) (= 0 (x1471 x1346))))
(assert (x2891 x2909))
(assert (x2891 x1107))
(assert (x2891 x739))
(assert (=> (<= x2169 10000) (= (x1471 x2169) 0)))
(assert (x2891 x736))
(assert (= x77 (=> (= x1572 x1403) x2253)))
(assert (= x2673 (x1466 (x1504 x2707 x1219 x476 x1109 x2157 x2673))))
(assert (x2891 x806))
(assert (x2891 x121))
(assert (=> (>= 10000 x2719) (= 0 (x1471 x2719))))
(assert (x2891 x415))
(assert (x2891 x939))
(assert (= (x81 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657)) x2095))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639649)))
(assert (< 10000 (x1159 x1672 x714 x202)))
(assert (x2891 x2344))
(assert (=> (<= x2913 10000) (= 0 (x1471 x2913))))
(assert (x2891 x2923))
(assert (x2891 x1380))
(assert (= x1228 (=> (and (>= 18446744073709551615 x481) (= (x2605 x2530) x104) (= x209 (x3072 (+ 32 x1597))) (>= 1461501637330902918203684832716283019655932542975 x527) (= x843 (x511 (- x1996 x1597))) (= x1261 (x3072 (+ x605 x346))) (= (+ 63 x1423) x2411) (<= 128 x843) (= x1597 (x3072 (+ x2390 x1002))) (= x432 (x511 (- x1996 x2670))) (<= 1 x186) (= (x2605 x1699) x1063) (= x481 (x2605 x209)) (<= x432 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (and (= (<= x2094 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x12 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x12 x2094)) (and (<= x12 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2094))) (<= 1 x1325) (= x346 (x3072 (+ x2530 32))) (or (>= x2670 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x2670 18446746139588821027)) (= (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2411) x1325) (= (x3072 (+ x1597 x481)) x2670) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x1996) (>= 18446746139588821059 x1996)) (= x1831 (x3072 (+ x2094 36))) (>= 18446744073709551615 x48) (<= x1424 2) (<= x843 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2530 (x3072 (+ x48 x2670))) (= (x2605 x2670) x1424) (= 1 x1128) (>= 18446744073709551615 x1111) (= x1002 (x2605 x2390)) (= (x2605 x1831) x1111) (= (x2605 x2029) x48) (= (x2605 x1597) x527) (<= x1325 18446744073709551167) (<= 128 x432) (= (x3072 (+ 32 x1699)) x2029) (= (x3072 (+ x2390 x1111)) x1996) (<= x104 18446744073709551615) (= (x3072 (+ 31 x2530)) x2960) (= x1128 (x978 128)) (not (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2842) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2390)) (and (> x2390 x2842) (= (<= x2390 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2842 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x828 (< x346 x1261)) (or (<= x2530 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x2530)) (= (+ 448 x1325) x2988) (= x1699 (x3072 (+ x2670 32))) (= x2390 (x3072 (+ 32 x1831))) (= x2842 (x511 (- x2051 x1111))) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2094) (>= 2065879269376 x2094)) (= (- x2051 67) x12) (= (* x104 32) x605) (= x2094 (x2605 228)) (= x1423 (* 32 x104)) (or (>= x1597 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x1597 18446746139588821027)) (not (> x1261 x1996)) (>= 18446744073709551615 x1002) (<= x1111 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= 160 x1361) (<= 64 x1111) (or (and (> x2960 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1996 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2960) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1996)) (> x1996 x2960)))) (and (=> (and (= x1696 x2988) (not x828)) x730) (=> x828 x997)))))
(assert (=> (>= 10000 x581) (= 0 (x1471 x581))))
(assert (x2891 x1985))
(assert (< (x1159 x1126 x1498 x2867) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2327 x39))
(assert (x2891 x2876))
(assert (x2891 x1282))
(assert (x2891 x197))
(assert (x2891 x1341))
(assert (=> (<= x405 10000) (= (x1471 x405) 0)))
(assert (= (x1471 2065879269444) 0))
(assert (x2891 x1856))
(assert (x2891 x1831))
(assert (x2891 x2356))
(assert (= (x533 (x1814 66 x1836 x2165 x832)) x1836))
(assert (=> (>= 10000 x1229) (= (x1471 x1229) 0)))
(assert (= (x103 (x1814 x2623 x2942 x345 x120)) x345))
(assert (x2891 x2217))
(assert (x2891 x906))
(assert (x2891 x1426))
(assert (= x1249 (and (not x3101) x1839)))
(assert (=> (<= x541 10000) (= (x1471 x541) 0)))
(assert (x2891 x2478))
(assert (> (x2282 x7 x547 x2736 x354 x1320) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1814 x2465 x1170 x1614 x2862)))
(assert (x2891 x1961))
(assert (= (x81 (x2282 x1672 x2397 x1980 x1713 x482)) x482))
(assert (=> (>= 10000 x395) (= 0 (x1471 x395))))
(assert (= (=> (and (= x935 0) (= (ite (= x771 0) (ite (= 0 x771) 1 0) (ite (= 0 x41) 1 0)) x935) (= x79 x50)) x2715) x927))
(assert (= (x616 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)) x1872))
(assert (x2891 x1717))
(assert (x2891 x790))
(assert (x2891 x3042))
(assert (=> (>= 10000 x2514) (= (x1471 x2514) 0)))
(assert (x2891 x2792))
(assert (x2891 x2636))
(assert (> (x1258 x798 x1507 x8 x2702 x3100 x2444 x754) 10000))
(assert (x2891 x818))
(assert (=> (>= 10000 x1473) (= (x1471 x1473) 0)))
(assert (x2891 x3069))
(assert (x2891 x2954))
(assert (x2891 x3078))
(assert (=> (<= x1910 10000) (= 0 (x1471 x1910))))
(assert (x2891 x916))
(assert (x2891 x1759))
(assert (x2891 x1531))
(assert (=> (<= x1490 10000) (= 0 (x1471 x1490))))
(assert (x2891 x1524))
(assert (x2891 x2046))
(assert (x2891 x2661))
(assert (> (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000) 10000))
(assert (x2891 x2303))
(assert (x2891 x349))
(assert (x2891 x290))
(assert (x2891 x1733))
(assert (x2891 x2182))
(assert (x2891 x2390))
(assert (x2891 x1953))
(assert (x2891 x3092))
(assert (x2891 x1824))
(assert (< (x1504 x798 x453 x1248 x57 x3102 x1925) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x2155))
(assert (x2891 x1073))
(assert (= x138 (x533 (x1258 x169 x138 x1801 x3057 x421 x1443 x474))))
(assert (= (=> (and (= (x3072 (+ x2737 96)) x2449) (= (x1408 x2428) x1376) (= x2428 (x3072 (+ 96 x1552))) (= x2202 (not (< 128 x2342)))) (and x2202 x1543)) x126))
(assert (=> (<= x2330 10000) (= (x1471 x2330) 0)))
(assert (x2891 x990))
(assert (x800 4294967295))
(assert (x2700 x822))
(assert (=> (<= x1116 10000) (= 0 (x1471 x1116))))
(assert (=> (>= 10000 x1498) (= (x1471 x1498) 0)))
(assert (x2891 x740))
(assert (x2891 x2043))
(assert (x2891 x2943))
(assert (= (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628) (x1471 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628))))
(assert (x2891 x2514))
(assert (not (x800 (x2577 x2614 x2796))))
(assert (x2891 x1126))
(assert (= (x1471 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935)) (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935)))
(assert (=> (>= 10000 x1340) (= (x1471 x1340) 0)))
(assert (x2891 x2808))
(assert (= x680 (or x573 x3110)))
(assert (= (x623 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)) x1483))
(assert (= (x1466 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998)) x2629))
(assert (> (x1159 x1126 x1498 x2867) 10000))
(assert (< (x1159 x1603 x1825 x601) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2387) (= 0 (x1471 x2387))))
(assert (=> (>= 10000 x1628) (= (x1471 x1628) 0)))
(assert (= (or x2010 x963) x2809))
(assert (= x2656 (x237 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347))))
(assert (x2891 x2491))
(assert (x2891 x2557))
(assert (= x1126 (x623 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421))))
(assert (= (x1471 77929798818658108206329458850487298488570292587025318323788629963054520467456) 0))
(assert (< 10000 (x1814 x1483 x2946 x404 x386)))
(assert (x2891 x1443))
(assert (x2891 x2208))
(assert (=> (<= x3010 10000) (= (x1471 x3010) 0)))
(assert (=> (<= x536 10000) (= 0 (x1471 x536))))
(assert (x2891 x451))
(assert (x2891 x2867))
(assert (= x798 (x623 (x2577 x798 x168))))
(assert (x2891 x1419))
(assert (= (x623 (x1159 x798 x996 x125)) x798))
(assert (< (x2282 x2623 x1340 x2860 x3121 x640) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x533 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)) x2513))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x798 x1507 x8 x2702 x3100 x2444 x754)))
(assert (x2891 x1927))
(assert (x2891 x2495))
(assert (x2891 x1105))
(assert (= 0 (x1471 57896044618658097711785492504343953926634992332820282019728792003956564820068)))
(assert (x2891 x1053))
(assert (x2891 x426))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347)))
(assert (not (x800 (x1504 x1958 x991 x431 x1015 x1639 x454))))
(assert (x2891 x1458))
(assert (x2891 x270))
(assert (= (=> (and (not (= x1572 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x983 (x3072 (+ x2303 32))) (= (x3072 (+ x1686 32)) x2703) (= x1515 (x1094 x1267)) (= x1267 (x3072 (+ 32 x2703))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1572) (= (x3072 (+ 32 x1572)) x311) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1572) (= x1749 (not (< 1 x724))) (= (x1094 x2703) x1345) (= (x3072 (+ x1572 64)) x988) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1572)) (>= x1539 1) (not (= x1572 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1572) (= (x35 x2303) x1539) (> x988 x1572)) (and x1749 (=> (= x2575 x988) x1327))) x2601))
(assert (x2891 x2001))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)))
(assert (x2891 x2625))
(assert (= (and x2861 x1553) x2200))
(assert (= x2157 (x81 (x1504 x2707 x1219 x476 x1109 x2157 x2673))))
(assert (x2891 x363))
(assert (x2891 x1722))
(assert (x2700 x1715))
(assert (=> (<= x108 10000) (= (x1471 x108) 0)))
(assert (= (x103 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)) x520))
(assert (x2891 x2513))
(assert (x2891 x559))
(assert (x2891 x2846))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1159 x2465 x108 x1431)))
(assert (x2891 x2314))
(assert (= (x623 (x1159 x1672 x714 x202)) x1672))
(assert (x2891 x368))
(assert (x2891 x2312))
(assert (x2891 x1552))
(assert (x2891 x1054))
(assert (x2891 x1223))
(assert (x2891 x1621))
(assert (x2891 x321))
(assert (= (x623 (x1814 x1603 x531 x3113 x3017)) x1603))
(assert (x2891 x2364))
(assert (x2891 x475))
(assert (x2891 x2730))
(assert (=> (>= 10000 x1079) (= 0 (x1471 x1079))))
(assert (x2891 x605))
(assert (= (and x1298 x2226) x528))
(assert (=> (<= x1511 10000) (= 0 (x1471 x1511))))
(assert (=> (>= 10000 x790) (= 0 (x1471 x790))))
(assert (x2891 x1534))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1814 x1958 x379 x1119 x1378)))
(assert (x2891 x2815))
(assert (x2891 x1057))
(assert (x2891 x1343))
(assert (=> (<= x1248 10000) (= 0 (x1471 x1248))))
(assert (= (x533 (x1159 x3036 x756 x2874)) x756))
(assert (= x1387 (x103 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707))))
(assert (= (x623 (x1504 x169 x238 x1196 x733 x2713 x1297)) x169))
(assert (= (and x1152 x1222) x1577))
(assert (x2891 x751))
(assert (< (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2614 (x623 (x2577 x2614 x2796))))
(assert (x2891 x381))
(assert (> (x1814 x169 x2840 x174 x1250) 10000))
(assert (=> (>= 10000 x2657) (= 0 (x1471 x2657))))
(assert (x2327 x732))
(assert (x2891 x895))
(assert (x2891 x659))
(assert (x2891 x1386))
(assert (= x2446 (and x2893 x2161)))
(assert (x2891 x2064))
(assert (x2891 x1622))
(assert (x2891 x2904))
(assert (x2891 x1604))
(assert (=> (<= x815 10000) (= 0 (x1471 x815))))
(assert (= (=> (and (<= x1728 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ x1728 32)) x46) (= x1876 x2426) (<= 1 x377) (= x2868 (* 32 x1876)) (= x1929 (x511 (- x377 x1728))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1728) (<= x1876 4) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1728) (= x869 (* 32 x1876)) (= (x3072 (+ x869 x102)) x1968) (<= 1 x1968) (= x1603 (x2066 x1728)) (= x2186 x2149) (= x1968 x377) (< x1728 x377) (= x1622 (x511 (- x1929 32))) (= (x3072 (+ x2868 x2661)) x2149) (= x1712 (>= 224 x1603))) (and x1712 (=> (and (= x2553 (x2066 x46)) (= x281 (x2066 x46)) (= (x3072 (+ 128 x46)) x2604) (= x2027 (x3072 (+ 160 x46))) (= x460 (x2066 x2027)) (= x2935 (x2066 x400)) (= x1082 (x2066 x649)) (= x2281 (x2066 x2845)) (= (x3072 (+ x46 96)) x649) (= (x3072 (+ x46 128)) x2590) (= (x2066 x3119) x1172) (= (x3072 (+ x46 32)) x795) (= x3113 (x2066 x795)) (= x643 (x3072 (+ 32 x377))) (= x861 (x2282 x1603 x3069 x2306 x1628 x2645)) (= (x2577 x1603 x993) x2102) (= (x3072 (+ 96 x46)) x1764) (= x434 (x2066 x2637)) (= x2061 (x2066 x2590)) (= x1674 (x2066 x1285)) (= x2296 (> x1674 0)) (= x851 (x876 0)) (= x610 (x3072 (+ 96 x46))) (= x1346 (x2066 x2718)) (= (x3072 (+ 32 x46)) x3119) (= x1769 (x3072 (+ 160 x46))) (= x1999 (x2066 x1479)) (= x58 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935)) (= (x2066 x46) x2349) (= (x2066 x2725) x601) (= (x3072 (+ 64 x46)) x629) (= (x2066 x2570) x2306) (= x1825 (x2066 x46)) (= x1479 (x3072 (+ x46 32))) (= (x3072 (+ 32 x1285)) x2853) (= x2718 (x3072 (+ 64 x46))) (= x974 (x3072 (+ x46 64))) (= (x2066 x46) x531) (= x2295 (x1814 x1603 x531 x3113 x3017)) (= x993 (x2066 x46)) (= (x3072 (+ 32 x46)) x2845) (= x1908 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817)) (= x1914 (x3072 (+ 64 x46))) (= x3118 (x2066 x2365)) (= (x1159 x1603 x1825 x601) x1382) (= x2637 (x3072 (+ x46 128))) (= x400 (x3072 (+ 192 x46))) (= (x1504 x1603 x281 x2281 x3118 x2424 x434) x2899) (= (x2066 x2023) x4) (= (x2066 x1914) x3017) (= x1628 (x2066 x629)) (= (ite (= x1603 0) x851 (ite (<= x1603 32) x2102 (ite (>= 64 x1603) x1382 (ite (>= 96 x1603) x2295 (ite (>= 128 x1603) x861 (ite (<= x1603 160) x2899 (ite (>= 192 x1603) x1908 (ite (>= 224 x1603) x58 x668)))))))) x1565) (= x2570 (x3072 (+ 32 x46))) (= (x2066 x974) x2871) (= (x2066 x1764) x2645) (= (x2066 x46) x3069) (= (x2066 x1769) x1817) (= (x3072 (+ 32 x46)) x2725) (= (x2066 x610) x2424) (= (x3072 (+ x46 64)) x2365) (= x3056 (x2066 x2604)) (= (x3072 (+ x46 96)) x2023)) (and (=> (and (and (= x1458 (x2066 x2853)) (= x2523 (> x1674 1)) (= (x3072 (+ x643 32)) x2551) (= x1187 (x3072 (+ x2853 32)))) x2296) (and (=> (and (and (= x310 1) (= x1350 x1187) (= x3058 x2551)) (not x2523)) x2195) (=> (and (and (= (x3072 (+ x2551 32)) x2036) (= (< 2 x1674) x2522) (= x2682 (x51 x1187)) (= x1017 (x3072 (+ 32 x1187)))) x2523) (and (=> (and (and (= x1017 x1350) (= x2036 x3058) (= x310 2)) (not x2522)) x2195) (=> (and (and (= (> x1674 3) x2593) (= x2512 (x1509 x1017)) (= x2740 (x3072 (+ 32 x1017))) (= x599 (x3072 (+ 32 x2036)))) x2522) (and (=> (and (and (= x1350 x2740) (= 3 x310) (= x599 x3058)) (not x2593)) x2195) (=> x2593 x2454))))))) (=> (and (not x2296) (and (= x310 0) (= x2853 x1350) (= x3058 x643))) x2195))))) x2757))
(assert (= (x81 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628)) x2330))
(assert (x2891 x255))
(assert (x2891 x2432))
(assert (= (x623 (x2282 x2614 x2990 x3078 x2954 x2913)) x2614))
(assert (x2891 x760))
(assert (x2891 x2842))
(assert (= (x1466 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808)) x1818))
(assert (x2891 x1317))
(assert (x2891 x1517))
(assert (= x2349 (x533 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817))))
(assert (x2891 x2332))
(assert (=> (<= x691 10000) (= (x1471 x691) 0)))
(assert (x2891 x1320))
(assert (= (x1471 (x2282 x1958 x1176 x1602 x781 x140)) (x2282 x1958 x1176 x1602 x781 x140)))
(assert (x2891 x2928))
(assert (=> (<= x707 10000) (= (x1471 x707) 0)))
(assert (x2891 x1473))
(assert (x2891 x3058))
(assert (x2891 x2783))
(assert (=> (>= 10000 x2628) (= (x1471 x2628) 0)))
(assert (x2891 x113))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2282 x169 x888 x3010 x1142 x2137)))
(assert (not (x800 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347))))
(assert (=> (<= x347 10000) (= (x1471 x347) 0)))
(assert (=> (>= 10000 x985) (= 0 (x1471 x985))))
(assert (x2891 x1438))
(assert (= x676 (and x1626 (not x2727))))
(assert (x2891 x2845))
(assert (x2891 x1214))
(assert (= (x1471 2621382288) 0))
(assert (x2891 x589))
(assert (x2891 x4))
(assert (x2891 x881))
(assert (=> (>= 10000 x381) (= 0 (x1471 x381))))
(assert (= x216 (x103 (x2282 x1126 x268 x216 x491 x1521))))
(assert (=> (<= x2553 10000) (= (x1471 x2553) 0)))
(assert (x2891 x1747))
(assert (= x2707 (x623 (x1258 x2707 x549 x1124 x2931 x2330 x2192 x2628))))
(assert (= 66 (x623 (x1814 66 x1836 x2165 x832))))
(assert (x2891 x283))
(assert (=> (<= x1250 10000) (= 0 (x1471 x1250))))
(assert (= x3105 (x81 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750))))
(assert (x2891 x581))
(assert (= (=> (and (= x2140 (x3072 (+ x1282 x1747))) (<= x2838 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2838) (< x2838 x2140) (= x1738 (x511 (- x1009 32))) (= x1483 (x2345 x2838)) (= (x3072 (+ 31 x1532)) x1069) (= (x2502 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1069) x1747) (= (<= x1483 224) x263) (>= x2140 1) (= (x511 (- x2140 x2838)) x1009) (= (x3072 (+ x2838 32)) x2283) (= x2761 (x3072 (+ x1532 x1282))) (<= x2838 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and x263 (=> (and (= (x3072 (+ x2283 32)) x2632) (= x759 (x3072 (+ x2283 64))) (= x2347 (x2345 x243)) (= x1306 (x2345 x664)) (= x1079 (x2345 x2283)) (= (x2345 x2154) x923) (= x920 (x3072 (+ x2283 64))) (= (x2345 x3068) x404) (= (x3072 (+ 32 x3024)) x1901) (= (x3072 (+ 128 x2283)) x2399) (= x792 (x2345 x2283)) (= (ite (= 0 x1483) x344 (ite (<= x1483 32) x1173 (ite (>= 64 x1483) x2168 (ite (<= x1483 96) x2856 (ite (>= 128 x1483) x1134 (ite (>= 160 x1483) x380 (ite (>= 192 x1483) x598 (ite (>= 224 x1483) x1586 x656)))))))) x1280) (= x437 (x2345 x759)) (= (x2577 x1483 x65) x1173) (= (x2345 x1183) x142) (= (x3072 (+ x2283 32)) x3068) (= x2815 (x3072 (+ x2283 64))) (= (x2345 x1035) x155) (= x520 (x2345 x2632)) (= x2199 (x3072 (+ 64 x2283))) (= (x2345 x2283) x2513) (= (x3072 (+ 160 x2283)) x2154) (= (x2345 x2283) x65) (= (x3072 (+ x2283 192)) x243) (= (x2345 x2283) x2946) (= (x2345 x2936) x1332) (= x2545 (x2345 x2283)) (= x3089 (x2345 x2399)) (= x1160 (x236 x337)) (= x2656 (x2345 x2199)) (= (x3072 (+ x2283 96)) x2241) (= x1177 (x3072 (+ x2283 96))) (= x1035 (x3072 (+ x2283 32))) (= (x2282 x1483 x2545 x2565 x422 x2663) x1134) (= (x3072 (+ 96 x2283)) x2524) (= x2936 (x3072 (+ x2283 128))) (= (x3072 (+ x2283 32)) x1268) (= x1586 (x2408 x1483 x2513 x520 x257 x1288 x3089 x923 x2347)) (= (x1504 x1483 x1079 x155 x437 x2103 x142) x380) (= x344 (x876 0)) (= x422 (x2345 x2815)) (= (not (> x1160 1)) x2720) (= x337 (x236 x1293)) (= (x3072 (+ x2283 64)) x2222) (= (x1159 x1483 x309 x2716) x2168) (= (x2345 x2222) x386) (= (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347) x598) (= (x1814 x1483 x2946 x404 x386) x2856) (= x2103 (x2345 x1177)) (= (x3072 (+ x2283 160)) x1505) (= x2224 (x3072 (+ x2283 32))) (<= 1 x2951) (= (x2345 x2283) x309) (= x1288 (x2345 x2524)) (= x2565 (x2345 x1268)) (= x2951 (x2345 x3024)) (= (x2345 x1505) x347) (= (x3072 (+ 32 x2283)) x2844) (= (x2345 x2241) x2663) (= (x2345 x920) x257) (= (x3072 (+ x2283 128)) x1183) (= x2716 (x2345 x2224)) (= x664 (x3072 (+ 96 x2283))) (= x1742 (x2345 x2844))) (and x2720 (=> (= x1292 x2140) x350))))) x2535))
(assert (x2891 x2114))
(assert (= (x103 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)) x331))
(assert (x2891 x2575))
(assert (x2891 x2474))
(assert (= x291 (=> (and (= (x507 x2318) x593) (= x545 x2854) (= x2854 (x3072 (+ x1307 x1514))) (= x1774 x2638) (>= x2746 1) x2662 (>= 4294967295 x1040) (or (= 64 x172) (= 0 x172)) (= x2574 (> x1207 0)) x2174 (<= x2206 1) (= (* 32 x2206) x1514) (= x172 (* 64 x2206)) (or (= x1514 32) (= x1514 0)) (= x2662 (= x1156 (x452 x2318))) (= x2206 x638) (= (x1931 x2747) x2457) (= (x1931 x2318) x1156) (= x1207 (x89 x2478)) (= (x511 (- x2638 x2575)) x2668) (= (>= (x452 x2747) x2457) x2174) (= (x3072 (+ x172 x2784)) x1774) (>= x593 1)) (and (=> (and x2574 (and (and (= (x89 x2478) x2526) (= (x89 x2467) x1877) (= (x3072 (+ x2478 32)) x1631) (>= 2 x1877) (= (ite (= x1877 2) 1 0) x499) (= x1020 (= x499 0)) (= x2467 (x89 x1631)) (>= x2526 1)) (or (and (not x1020) (and x1569 (= x3035 (x452 x2747)) (= (x507 x1301) x806) (= (>= (x1246 x2747) x3035) x3014) (<= 1 x2511) (= (x89 x613) x2560) (>= x2927 1) (= x2386 (x89 x2478)) (<= 1 x2386) (= x2511 (x89 x2478)) (= x1569 (= x818 (x1246 x1301))) (= x2143 (x89 x1631)) (= x1765 (x2502 1461501637330902918203684832716283019655932542975 x2560)) (= (x3072 (+ x2575 4)) x1277) (>= 4294967295 x49) (= x708 (x89 x2810)) (= (x3072 (+ x296 64)) x613) (>= x806 1) (= (x3072 (+ x1277 32)) x3104) (<= x1301 1461501637330902918203684832716283019655932542975) (= (x3072 (+ 96 x2143)) x2810) (= x296 (x89 x1631)) x3014 (= x818 (x452 x1301)))) x1020))) x1394) (=> (not x2574) x2113)))))
(assert (x2891 x2629))
(assert (x2891 x2770))
(assert (x2891 x1031))
(assert (x2891 x1292))
(assert (x2891 x2055))
(assert (x2891 x798))
(assert (x2891 x1456))
(assert (= (x1504 x213 x581 x339 x1112 x1462 x1033) (x1471 (x1504 x213 x581 x339 x1112 x1462 x1033))))
(assert (x2891 x2849))
(assert (x2891 x1136))
(assert (= x2103 (x81 (x1504 x1483 x1079 x155 x437 x2103 x142))))
(assert (= x1930 (x81 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556))))
(assert (= x1603 (x623 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935))))
(assert (= 0 (x1471 2065879269284)))
(assert (x2891 x820))
(assert (x2891 x2906))
(assert (not (x800 (x2282 x2623 x1340 x2860 x3121 x640))))
(assert (x2700 x2560))
(assert (x2891 x2864))
(assert (x2891 x1005))
(assert (x2891 x1523))
(assert (= (x623 (x1814 x3036 x405 x1343 x1490)) x3036))
(assert (= x2946 (x533 (x1814 x1483 x2946 x404 x386))))
(assert (= x790 (x1466 (x1504 x3036 x1405 x426 x1138 x1642 x790))))
(assert (x2891 x1281))
(assert (x2891 x2221))
(assert (=> (<= x2356 10000) (= (x1471 x2356) 0)))
(assert (x2891 x2027))
(assert (x2891 x1475))
(assert (=> (>= 10000 x333) (= (x1471 x333) 0)))
(assert (x2891 x3109))
(assert (x2327 x1390))
(assert (x2891 x365))
(assert (=> (<= x996 10000) (= 0 (x1471 x996))))
(assert (= x2495 (x1466 (x1258 x1126 x1635 x67 x777 x870 x2495 x541))))
(assert (= (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678) (x1471 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678))))
(assert (=> (<= x3100 10000) (= (x1471 x3100) 0)))
(assert (x2891 x1462))
(assert (x2891 x109))
(assert (x2891 x706))
(assert (x2891 x1745))
(assert (x2891 x2860))
(assert (x2891 x2930))
(assert (x2891 x1697))
(assert (= x281 (x533 (x1504 x1603 x281 x2281 x3118 x2424 x434))))
(assert (=> (>= 10000 x3078) (= 0 (x1471 x3078))))
(assert (not (x800 (x1159 x3036 x756 x2874))))
(assert (=> (>= 10000 x2349) (= (x1471 x2349) 0)))
(assert (x2891 x158))
(assert (not (x800 (x1159 64 x913 1))))
(assert (x2700 x732))
(assert (=> (>= 10000 x1921) (= (x1471 x1921) 0)))
(assert (x2891 x2698))
(assert (> (x1504 x169 x238 x1196 x733 x2713 x1297) 10000))
(assert (x2891 x2758))
(assert (x2891 x2267))
(assert (x2327 x2147))
(assert (x2891 x1784))
(assert (= (=> (and (= (x2502 1461501637330902918203684832716283019655932542975 x1715) x285) (= (x2502 1461501637330902918203684832716283019655932542975 x1568) x440) (= (x3072 (+ 128 x328)) x2031) (= x440 x285) (= x1856 1) (= (x1045 x2031) x1568)) x1776) x2957))
(assert (= (x533 (x1814 x1603 x531 x3113 x3017)) x531))
(assert (x2891 x514))
(assert (=> (>= 10000 x798) (= 0 (x1471 x798))))
(assert (= (x533 (x1159 x169 x502 x1409)) x502))
(assert (x2891 x66))
(assert (=> (<= x3055 10000) (= (x1471 x3055) 0)))
(assert (x2891 x1079))
(assert (x2891 x1544))
(assert (x2891 x62))
(assert (=> (<= x634 10000) (= (x1471 x634) 0)))
(assert (x2891 x1674))
(assert (< (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1126 (x623 (x2282 x1126 x268 x216 x491 x1521))))
(assert (x2891 x2044))
(assert (x2891 x346))
(assert (x2891 x442))
(assert (x2891 x2666))
(assert (x2891 x2203))
(assert (x800 18446744073709551487))
(assert (= x2465 (x623 (x1504 x2465 x1731 x815 x588 x1822 x2100))))
(assert (x2891 x604))
(assert (x2891 x2160))
(assert (= (x533 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998)) x1171))
(assert (x2891 x1703))
(assert (= x460 (x616 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935))))
(assert (x2891 x1664))
(assert (x2891 x1448))
(assert (< (x2577 x2614 x2796) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x520))
(assert (= (and (not x2262) x2914) x625))
(assert (x2891 x2694))
(assert (x2891 x461))
(assert (x2891 x366))
(assert (x2891 x2450))
(assert (x2891 x2570))
(assert (= (x1471 (x1814 66 x1836 x2165 x832)) (x1814 66 x1836 x2165 x832)))
(assert (x2891 x3064))
(assert (= (and x602 x1773) x262))
(assert (x2891 x618))
(assert (=> (>= 10000 x2529) (= (x1471 x2529) 0)))
(assert (x2891 x1701))
(assert (x2891 x3030))
(assert (= (x623 (x1504 x1958 x991 x431 x1015 x1639 x454)) x1958))
(assert (= (x1814 x1672 x2459 x872 x2204) (x1471 (x1814 x1672 x2459 x872 x2204))))
(assert (x800 2065879269316))
(assert (= x3034 (x533 (x1814 x7 x3034 x780 x133))))
(assert (x2891 x2144))
(assert (x2891 x230))
(assert (x2891 x1794))
(assert (= (and x2691 (not x1379)) x2882))
(assert (not (x800 (x2577 x3036 x1882))))
(assert (x2891 x2817))
(assert (x2891 x603))
(assert (x2891 x515))
(assert (=> (>= 10000 x460) (= (x1471 x460) 0)))
(assert (x2891 x2013))
(assert (x2891 x2322))
(assert (x800 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (x2891 x1119))
(assert (= x1628 (x237 (x2282 x1603 x3069 x2306 x1628 x2645))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1159 x169 x502 x1409)))
(assert (x2891 x401))
(assert (= x1806 (=> (and (= (x2427 x1571) x3022) (= (x3072 (+ x2316 96)) x2362) (= (not (> x1358 128)) x179) (= x1571 (x3072 (+ x3076 96)))) (and x1821 x179))))
(assert (= 0 (x1471 111117225372770300986259473995147604481826136133417213952520719377678811004928)))
(assert (x2891 x285))
(assert (x2891 x502))
(assert (x2891 x2895))
(assert (< 10000 (x1159 x2614 x1561 x2993)))
(assert (x2891 x1288))
(assert (= (=> (and (= (x1627 x2478) x326) (= x1092 (not (< 1 x326)))) (and x1092 x2113)) x1394))
(assert (x2891 x1179))
(assert (x2891 x392))
(assert (= x833 (=> (and (= false x1257) (= x1416 false) (= x2447 (x1670 x877)) (= x524 x1775) (= false x1087) (= 2621382288 x2717) (<= x2567 127) (>= x1389 1) (= false x75) (= false x1651) (= false x687) (= x1426 (ite (not (= x2447 0)) 1 0)) (= true x2110) (= x215 false) (= x1269 36) (<= x2447 255) (= x1775 x913) (= x1892 false) (= (x1159 64 x913 1) x877) (= x2833 false) (= x1389 (x507 x2246)) (= x954 (not (= x1426 0))) (= x697 false) (>= 127 x2567)) x954)))
(assert (x2891 x2631))
(assert (x2891 x2592))
(assert (= x608 (x533 (x2577 x213 x608))))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639618))
(assert (x2891 x1888))
(assert (x2891 x2329))
(assert (> (x1159 x1958 x2361 x333) 10000))
(assert (=> (>= 10000 x2795) (= 0 (x1471 x2795))))
(assert (x2891 x431))
(assert (x2891 x1790))
(assert (x2891 x2051))
(assert (x2891 x830))
(assert (x2891 x79))
(assert (x2891 x658))
(assert (=> (>= 10000 x1201) (= 0 (x1471 x1201))))
(assert (= (and (not x828) x987) x1417))
(assert (x2891 x1284))
(assert (x2327 x1069))
(assert (= (x2319 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)) x2421))
(assert (x2700 x1299))
(assert (x2891 x1323))
(assert (=> (>= 10000 x257) (= 0 (x1471 x257))))
(assert (x2891 x433))
(assert (x2891 x2142))
(assert (=> (>= 10000 x2565) (= 0 (x1471 x2565))))
(assert (x2700 x84))
(assert (= x777 (x237 (x1258 x1126 x1635 x67 x777 x870 x2495 x541))))
(assert (= (x1159 x3036 x756 x2874) (x1471 (x1159 x3036 x756 x2874))))
(assert (= (and x984 x1296) x2024))
(assert (= x2231 (and (not x1917) x1802)))
(assert (= (x103 (x1814 x1672 x2459 x872 x2204)) x872))
(assert (x2891 x2175))
(assert (x2891 x640))
(assert (=> (<= x777 10000) (= (x1471 x777) 0)))
(assert (=> (>= 10000 x1332) (= (x1471 x1332) 0)))
(assert (= x2216 (x533 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706))))
(assert (x2891 x1106))
(assert (x2891 x560))
(assert (< (x2577 x2623 x2802) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x3000))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (x2891 x184))
(assert (x2891 x1247))
(assert (x2891 x1123))
(assert (x800 57896044618658097711785492504343953926634992332820282019728792003956564820517))
(assert (x2891 x530))
(assert (=> (>= 10000 x2596) (= 0 (x1471 x2596))))
(assert (x2891 x1494))
(assert (x2891 x594))
(assert (=> (<= x2193 10000) (= 0 (x1471 x2193))))
(assert (= (x623 (x876 0)) 0))
(assert (x2891 x1050))
(assert (< (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1477 (x237 (x1814 x798 x2193 x2864 x1477))))
(assert (x2891 x668))
(assert (x2891 x340))
(assert (x2891 x2017))
(assert (= (x1471 (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347)) (x1258 x1483 x792 x1742 x2656 x1306 x1332 x347)))
(assert (= x210 (and x2518 x193)))
(assert (x2327 x84))
(assert (= x557 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x989) (>= x1862 1) (= (x1045 x394) x1795) (= x1715 (x1045 x2227)) (= x394 (x1045 x219)) (not (= x989 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x989 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x989 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2478 (x3072 (+ 32 x989))) (= x721 (> x1795 0)) (= x2263 1) (> x2478 x989) (= x2227 (x1045 160)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x989)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x989) (= x2263 (x1045 x989))) (and (=> (not x721) x779) (=> (and (and (= x1085 (ite (= x363 1) 1 0)) (= x2054 (x1045 x394)) (<= 1 x2054) (= (x1045 x328) x363) (= x2569 (= 0 x1085)) (<= x363 5) (= x1824 (x3072 (+ 32 x394))) (= x328 (x1045 x1824))) x721) (and (=> (and (not x2569) (and (= (x1045 x294) x84) (= x2415 x1301) (= x294 (x3072 (+ 128 x328))) (= x2415 (x2502 1461501637330902918203684832716283019655932542975 x84)) (<= x1301 1461501637330902918203684832716283019655932542975))) x1776) (=> (and (and (or (and (not x712) (and (= x242 3) (= (x1045 x328) x242) (= x2322 1))) (and x712 (= x223 1))) (and (<= x1205 5) (= (x1045 x328) x1205) (= (> x223 0) x712) (= (ite (= x1205 2) 1 0) x223))) x2569) x2957)))))))
(assert (x2891 x2330))
(assert (= x169 (x623 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224))))
(assert (= (and (not x501) x2180) x882))
(assert (=> (>= 10000 x1341) (= 0 (x1471 x1341))))
(assert (x2891 x2520))
(assert (= (=> (and (= x2771 (x3072 (+ 32 x1307))) (= (x2894 x2197) x1579) (= (x3072 (+ 32 x2197)) x113) (= (x3072 (+ x907 32)) x1710) (= x1104 (x799 x113)) (= x2197 (x2894 x1307)) (= x1319 (not (< 1 x2206))) (= x907 (x3072 (+ x2784 32)))) (and (=> (and (= x638 1) (= x1710 x2638) (= x545 x2771)) x291) x1319)) x3027))
(assert (= x2915 (or x1083 x407 x1665 x1936 x1273)))
(assert (=> (<= x2959 10000) (= (x1471 x2959) 0)))
(assert (x2891 x2537))
(assert (x2891 x1033))
(assert (= x2614 (x623 (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061))))
(assert (=> (>= 10000 x1817) (= (x1471 x1817) 0)))
(assert (x2891 x683))
(assert (= (=> (and (= (> x2279 0) x166) (= (x3072 (+ x981 32)) x401) (= (x3072 (+ x1800 32)) x2943) (= (mod (* 32 x2279) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1179) (= x856 (x3072 (+ x2943 x1179))) (= x2414 (x511 (- x1800 x586))) (= x2279 (x2865 x1452)) (= (x3072 (+ 32 x1452)) x2674)) (and (=> (and x166 (and (= (x1108 x741) x1848) (= x584 (x3072 (+ 32 x741))) (= (x3072 (+ 32 x3086)) x734) (= x1098 (x871 x1844)) (= (x2926 x2338) x2242) (= x1295 (x2502 1461501637330902918203684832716283019655932542975 x2242)) (= x741 (x3072 (+ x2338 32))) (= (x2926 x2674) x2338) (= x3086 (x3072 (+ x856 32))) (= x1844 (x130 x584)) (= (< 0 x1098) x1708))) (and (=> (and (= x1347 (< 32 x1098)) x1708) (and (=> (not x1347) x621) (=> (and (= x15 (< 64 x1098)) x1347) (and (=> (not x15) x621) (=> (and x15 (= x1949 (< 96 x1098))) (and (=> (not x1949) x621) (=> x1949 x1596))))))) (=> (not x1708) x621))) (=> (and (and (= x2781 0) (= x2765 x2674) (= x1463 x2943)) (not x166)) x600))) x2992))
(assert (= x2797 (=> (and (= (< 0 x1240) x1917) (= (x1412 x2531) x1240) (= x2531 (x1412 x1293))) (and (=> (and (= x1292 x2838) (not x1917)) x350) (=> (and (and (= x2834 (x3072 (+ x2654 128))) (= (x3072 (+ 32 x1987)) x2995) (= (x2473 x535) x1532) (= (x1412 x948) x2127) (= x2774 (x3072 (+ x1141 32))) (= x2710 (< 0 x1532)) (= (x3072 (+ x2654 32)) x1141) (= (x3072 (+ x2838 32)) x2654) (= (x1412 x1673) x2369) (= x3064 (x3072 (+ x535 32))) (= x1282 (x3072 (+ x2834 32))) (= (x1412 x2369) x2945) (<= 1 x2127) (= x948 (x1412 x1293)) (= x1987 (x3072 (+ 32 x2369))) (= x1072 (x3072 (+ 32 x2774))) (= x1673 (x3072 (+ 32 x948))) (= (x2502 1461501637330902918203684832716283019655932542975 x2945) x2333) (= (x1412 x1987) x2722) (= (x1412 x2995) x535)) x1917) (and (=> (and x2710 (and (= x1757 (x1538 x3064)) (= (> x1532 32) x1158))) (and (=> (not x1158) x2535) (=> (and x1158 (and (= (x59 x2728) x553) (= (> x1532 64) x1379) (= x2728 (x3072 (+ 32 x3064))) (= x1530 (x3072 (+ 32 x1282))))) (and (=> (and x1379 (and (= x1593 (> x1532 96)) (= x1214 (x355 x1030)) (= (x3072 (+ 64 x3064)) x1030) (= (x3072 (+ 64 x1282)) x3042))) (and (=> (not x1593) x2535) (=> x1593 x2482))) (=> (not x1379) x2535))))) (=> (not x2710) x2535)))))))
(assert (x2891 x764))
(assert (= x614 (x1466 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556))))
(assert (=> (>= 10000 x1531) (= (x1471 x1531) 0)))
(assert (not (x800 (x1159 x1672 x714 x202))))
(assert (=> (>= 10000 x2061) (= 0 (x1471 x2061))))
(assert (< 10000 (x2282 x1603 x3069 x2306 x1628 x2645)))
(assert (x2891 x2534))
(assert (x2891 x1852))
(assert (x2891 x1730))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x2891 x1309))
(assert (x2891 x1793))
(assert (x2891 x875))
(assert (< 10000 (x1258 x7 x2332 x1225 x2293 x1647 x1818 x1808)))
(assert (x2891 x2492))
(assert (= x3019 (x237 (x2282 x2707 x1511 x1341 x3019 x433))))
(assert (x2891 x334))
(assert (x2891 x2459))
(assert (= x1925 (x1466 (x1504 x798 x453 x1248 x57 x3102 x1925))))
(assert (x2891 x709))
(assert (x2891 x1925))
(assert (x2891 x2080))
(assert (=> (>= 10000 x2318) (= 0 (x1471 x2318))))
(assert (= x1019 (x103 (x1814 x2707 x1722 x1019 x360))))
(assert (= x1780 (x1466 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224))))
(assert (x2891 x1710))
(assert (x2891 x2023))
(assert (x2891 x8))
(assert (x2891 x708))
(assert (x2327 x2429))
(assert (x2891 x2477))
(assert (x2700 x1335))
(assert (= (and (not x712) x1869) x1846))
(assert (=> (>= 10000 x3006) (= 0 (x1471 x3006))))
(assert (= x407 (and (not x2296) x2214)))
(assert (= x1157 (or x2883 x2641)))
(assert (x2891 x3113))
(assert (not (x800 (x1814 x213 x1144 x3008 x1487))))
(assert (x2891 x455))
(assert (x800 18446744073709551455))
(assert (x2891 x2517))
(assert (x2891 x2481))
(assert (x189 x1902))
(assert (= x635 (=> (and (or (not x1152) x1152) (= (= 0 x2767) x1152)) x2830)))
(assert (= (x616 (x2408 x213 x2216 x931 x282 x2972 x2109 x1229 x706)) x1229))
(assert (x2891 x2658))
(assert (= x2707 (x623 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536))))
(assert (x2891 x151))
(assert (= (and x2790 x2709) x1923))
(assert (x2891 x1754))
(assert (x2891 x154))
(assert (x2891 x3089))
(assert (= (x81 (x2408 x2707 x2385 x2519 x2848 x145 x1911 x1367 x536)) x145))
(assert (=> (<= x1722 10000) (= (x1471 x1722) 0)))
(assert (x2891 x2732))
(assert (x2891 x841))
(assert (= x2829 (x103 (x2282 x3036 x2430 x2829 x1232 x1135))))
(assert (= (=> (and (= (x1254 x1451) x1126) (= (x3072 (+ x2178 x2130)) x2777) (= (x511 (- x1786 x1451)) x274) (>= x1786 1) (= x2745 x3030) (= (* x3030 32) x2178) (= x2971 (* x3030 32)) (= x816 (x3072 (+ x665 x2971))) (<= x1451 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3051 x2777) (= (x511 (- x274 32)) x1791) (= x1052 (>= 224 x1126)) (= (x3072 (+ x1451 32)) x1421) (= x816 x1786) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1451) (<= x3030 4) (< x1451 x1786) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1451) (<= 1 x816)) (and (=> (and (= (x1254 x1951) x695) (= (x3072 (+ 96 x1421)) x1076) (= x675 (x3072 (+ x1786 32))) (= (x1254 x1421) x2093) (= x2849 (x3072 (+ 32 x1421))) (= x2798 (x3072 (+ 96 x1421))) (= x541 (x1254 x2001)) (< x1786 x513) (= (x3072 (+ x1421 32)) x2065) (= x620 (x511 (- x513 x1786))) (= x381 (x1254 x3079)) (= (x3072 (+ x1421 32)) x906) (= x589 (x3072 (+ x1421 64))) (= (ite (= x1126 0) x2634 (ite (<= x1126 32) x11 (ite (>= 64 x1126) x1198 (ite (>= 96 x1126) x749 (ite (<= x1126 128) x2679 (ite (<= x1126 160) x1113 (ite (<= x1126 192) x1611 (ite (>= 224 x1126) x332 x2356)))))))) x1767) (= x1521 (x1254 x1076)) (= x860 (x1254 x589)) (= x1113 (x1504 x1126 x2297 x381 x68 x1441 x1236)) (= x2867 (x1254 x906)) (= (x1254 x897) x1637) (= x2938 (x3072 (+ 32 x1421))) (= x2006 (x1254 x2798)) (= x216 (x1254 x212)) (or (and (>= x1786 1) (<= x1786 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (and (<= x1786 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1786))) (= x67 (x1254 x2938)) (= (x1254 x2065) x2286) (= x2679 (x2282 x1126 x268 x216 x491 x1521)) (= x1236 (x1254 x865)) (= x2843 (x3072 (+ x1421 96))) (= x332 (x2408 x1126 x2093 x2286 x860 x2006 x695 x1637 x2421)) (= x1635 (x1254 x1421)) (= (x3072 (+ 192 x1421)) x576) (= (x1254 x576) x2421) (= (x3072 (+ x675 32)) x2056) (= (x3072 (+ x1421 128)) x2572) (= x591 (x1254 x2849)) (= (x1254 x1745) x68) (= x870 (x1254 x1590)) (= x268 (x1254 x1421)) (= x1198 (x1159 x1126 x1498 x2867)) (= x1329 (x3072 (+ x1421 64))) (= (x1254 x2843) x1441) (= x2376 (x3072 (+ 64 x1421))) (= (x2577 x1126 x358) x11) (= x2297 (x1254 x1421)) (= x1400 (x1254 x1833)) (= (x3072 (+ x1421 96)) x1590) (= (x3072 (+ 32 x1786)) x917) (= (x1814 x1126 x1287 x591 x1400) x749) (= x865 (x3072 (+ 128 x1421))) (= (x1258 x1126 x1635 x67 x777 x870 x2495 x541) x1611) (= (x3072 (+ 160 x1421)) x2001) (= x897 (x3072 (+ x1421 160))) (= x2495 (x1254 x2572)) (= (x1254 x2376) x777) (= (x3072 (+ 128 x1421)) x1951) (= (x3072 (+ x1421 32)) x212) (= (x3072 (+ 32 x1421)) x3079) (= (>= 224 x3036) x314) (= (x3072 (+ 64 x1421)) x1833) (= x2378 (x3072 (+ x2056 32))) (= x491 (x1254 x1329)) (= (x511 (- x620 32)) x1912) (= x513 (x3072 (+ 96 x675))) (= x1745 (x3072 (+ x1421 64))) (= x3036 (x2744 x1786)) (= x2634 (x876 0)) (= x1498 (x1254 x1421)) (= x358 (x1254 x1421)) (= x1287 (x1254 x1421))) (and x314 (=> (and (or (and (= x69 x2097) (not x2018)) (and (and (>= x107 32) (>= 4294967295 x107) (= 1 x69)) x2018)) (and (= x2086 (x2744 x2962)) (= x1612 x1084) (= (x2744 x917) x2430) (= x1405 (x2744 x917)) (= (x2744 x406) x2095) (= x1175 (x3072 (+ 128 x917))) (= (x2577 x3036 x1882) x42) (= (x2744 x917) x371) (= (x2744 x2401) x2429) (= x2172 (x3072 (+ x917 160))) (= x756 (x2744 x917)) (<= 32 x107) (= x2719 (x2744 x603)) (= x1151 (x3072 (+ x917 128))) (= x207 (x3072 (+ 64 x917))) (= (x3072 (+ x917 32)) x2930) (= (x2744 x2212) x1490) (= x790 (x2744 x1175)) (= x471 (x3072 (+ 96 x917))) (= (x2744 x1151) x2380) (= (x3072 (+ 32 x917)) x1616) (= (x2744 x2821) x1995) (= x1676 (x3072 (+ x917 192))) (= x1299 (x2744 x1724)) (= x406 (x3072 (+ x917 96))) (= (x3072 (+ x917 128)) x603) (= (x2744 x2930) x1343) (= (x2744 x739) x426) (= x1230 (x3072 (+ x917 64))) (= x2091 (x3072 (+ 96 x917))) (= (x3072 (+ 32 x917)) x86) (= x2657 (x2744 x2172)) (= (x1504 x3036 x1405 x426 x1138 x1642 x790) x2851) (= x2817 (x3072 (+ 64 x917))) (= (x2744 x86) x2874) (= x2829 (x2744 x2811)) (= (x2744 x917) x1882) (= (x2744 x390) x1138) (= (x3072 (+ 96 x917)) x319) (<= x2318 1461501637330902918203684832716283019655932542975) (= x670 (x1159 x3036 x756 x2874)) (<= x107 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1922 (x2744 x2817)) (= (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000) x2393) (= x2821 (x3072 (+ 32 x917))) (= (< 0 x2097) x2018) (= (x2282 x3036 x2430 x2829 x1232 x1135) x2979) (= x921 (x3072 (+ x513 4))) (= x2962 (x3072 (+ x917 160))) (= (x2744 x207) x2705) (= x644 (x2502 1461501637330902918203684832716283019655932542975 x1299)) (= (x2744 x1230) x1232) (= (x2744 x319) x1703) (= (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657) x2648) (= (x2744 x1616) x1436) (= x1642 (x2744 x471)) (= (x2744 x2091) x1135) (= (x3072 (+ x917 32)) x2811) (= x739 (x3072 (+ 32 x917))) (= (x876 0) x1580) (= (ite (= x3036 0) x1580 (ite (<= x3036 32) x42 (ite (>= 64 x3036) x670 (ite (<= x3036 96) x1259 (ite (<= x3036 128) x2979 (ite (>= 160 x3036) x2851 (ite (<= x3036 192) x2648 (ite (>= 224 x3036) x2393 x2084)))))))) x1084) (= x405 (x2744 x917)) (= (x3072 (+ 64 x917)) x2212) (= (x2744 160) x1724) (= x1259 (x1814 x3036 x405 x1343 x1490)) (= (x2744 x1676) x3000) (= x390 (x3072 (+ 64 x917))) (= (x2744 x917) x770))) x1461))) x1052)) x2394))
(assert (x2891 x524))
(assert (not (x800 (x1814 x7 x3034 x780 x133))))
(assert (> (x1159 x2623 x1644 x654) 10000))
(assert (x2891 x2383))
(assert (x2891 x2968))
(assert (= x844 (=> (and (= (x3072 (+ x2875 32)) x2291) (= (x2605 x1091) x847) (>= 18446744073709551615 x846) (= x2697 (x2605 x2616)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x846) (= (x2605 x2033) x538) (<= x538 1461501637330902918203684832716283019655932542975) (= x1091 (x3072 (+ x2616 32))) (= x3099 (x2605 x995)) (= x2033 (x3072 (+ x995 32))) (>= 1461501637330902918203684832716283019655932542975 x2697) (= x159 (x3072 (+ 32 x2291))) (>= 18446744073709551614 x846) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x846)) (<= 160 x2932) (>= 18446744073709551615 x846) (< x846 x2997) (>= 5 x2187) (= x2187 (x2605 x3050)) (= x2875 (x3072 (+ x994 32))) (or (>= x846 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x846 18446744073709551455)) (= (x3072 (+ 32 x846)) x994) (= (x3072 (+ x1091 32)) x995) (= x2616 (x3072 (+ x3050 32))) (>= 18446744073709551614 x846) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2932) (= (not (< 1 x134)) x1881) (= x2932 (x511 (- x2051 x3050))) (or (>= 18446744073709551455 x846) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x846)) (= x2997 (x3072 (+ x846 160))) (or (<= x3050 2065879269284) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820517 x3050)) (not (< x2997 x846))) (and x1881 (=> (= x1685 x2997) x136)))))
(assert (< (x2577 x3036 x1882) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x2821))
(assert (= 0 (x1471 11309588061646438093662687302255421419811724423900836950936401294474059186176)))
(assert (x800 18446744073709551518))
(assert (= (x1471 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657)) (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657)))
(assert (x2891 x2442))
(assert (x2891 x2718))
(assert (x2891 x2097))
(assert (x2891 x1041))
(assert (x2891 x1164))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639841)))
(assert (= (x1471 (x2282 x169 x888 x3010 x1142 x2137)) (x2282 x169 x888 x3010 x1142 x2137)))
(assert (not (x800 (x1814 x3036 x405 x1343 x1490))))
(assert (x2891 x430))
(assert (x2891 x3038))
(assert (= x1729 (x237 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678))))
(assert (= (or x1048 x1417) x445))
(assert (x2891 x1834))
(assert (x2891 x281))
(assert (x2891 x1576))
(assert (= (and (not x38) x2618) x1723))
(assert (x2700 x2312))
(assert (=> (<= x1937 10000) (= (x1471 x1937) 0)))
(assert (=> (>= 10000 x2942) (= 0 (x1471 x2942))))
(assert (x2891 x1644))
(assert (x2891 x1297))
(assert (x2891 x2952))
(assert (x2891 x84))
(assert (=> (<= x2583 10000) (= (x1471 x2583) 0)))
(assert (x2891 x482))
(assert (= (=> (and (= x102 (x3072 (+ x1728 32))) (= x567 (< 0 x1876)) (= x1448 (x962 x2517)) (= (x3072 (+ x2160 32)) x2661) (= (x962 x2160) x1876)) (and (=> (and (and (= x2426 0) (= x2661 x2186) (= x102 x377)) (not x567)) x2757) (=> (and (and (= x1704 (x3072 (+ x2661 32))) (= (x3072 (+ x102 32)) x2221) (= x1480 (x962 x2661)) (= (< 1 x1876) x1289)) x567) (and (=> (and x1289 (and (= x2949 (x3072 (+ 32 x1704))) (= (> x1876 2) x2589) (= x854 (x3072 (+ 32 x2221))) (= (x1625 x1704) x36))) (and (=> (and x2589 (and (= (> x1876 3) x653) (= x3028 (x3072 (+ x2949 32))) (= (x3072 (+ 32 x854)) x2305) (= x1399 (x1271 x2949)))) (and (=> (and (and (= x2305 x377) (= x2426 3) (= x2186 x3028)) (not x653)) x2757) (=> x653 x370))) (=> (and (and (= x2949 x2186) (= x377 x854) (= x2426 2)) (not x2589)) x2757))) (=> (and (and (= x2186 x1704) (= x2426 1) (= x2221 x377)) (not x1289)) x2757))))) x2939))
(assert (x2891 x2540))
(assert (=> (<= x2103 10000) (= (x1471 x2103) 0)))
(assert (< 10000 (x2577 x1672 x2486)))
(assert (x2891 x901))
(assert (x2891 x2222))
(assert (x2891 x2717))
(assert (x2891 x471))
(assert (=> (<= x913 10000) (= 0 (x1471 x913))))
(assert (x2891 x2219))
(assert (x2891 x1912))
(assert (= (and x2564 (not x2630)) x863))
(assert (x2891 x3104))
(assert (= x213 (x623 (x2577 x213 x608))))
(assert (x2891 x417))
(assert (x2891 x1144))
(assert (x2891 x404))
(assert (= (and x2014 (not x1289)) x2148))
(assert (x2891 x70))
(assert (x2891 x2947))
(assert (x2891 x1026))
(assert (=> (<= x2006 10000) (= (x1471 x2006) 0)))
(assert (=> (<= x339 10000) (= (x1471 x339) 0)))
(assert (x2891 x2009))
(assert (x2891 x2215))
(assert (x2891 x1841))
(assert (x2891 x1648))
(assert (= (x2577 x2465 x348) (x1471 (x2577 x2465 x348))))
(assert (=> (<= x733 10000) (= 0 (x1471 x733))))
(assert (x2891 x643))
(assert (x2891 x1995))
(assert (= (or x2793 x615) x1315))
(assert (x2891 x449))
(assert (=> (<= x588 10000) (= (x1471 x588) 0)))
(assert (x2891 x2419))
(assert (x2891 x535))
(assert (x2891 x1151))
(assert (x2891 x3055))
(assert (x2891 x1571))
(assert (x2700 x2147))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (= x1436 (x103 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000))))
(assert (=> (<= x491 10000) (= (x1471 x491) 0)))
(assert (= (=> (and (= (x3072 (+ 96 x2417)) x1683) (= (not (> x1526 128)) x2825) (= (x606 x1683) x2923) (= (x3072 (+ 96 x2269)) x412)) (and x2825 x973)) x292))
(assert (= (x237 (x1504 x1483 x1079 x155 x437 x2103 x142)) x437))
(assert (x2891 x907))
(assert (= x2860 (x103 (x2282 x2623 x1340 x2860 x3121 x640))))
(assert (x2891 x12))
(assert (x2891 x1483))
(assert (< (x1159 x2707 x466 x1442) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x2353 x362) x3088))
(assert (=> (<= x2384 10000) (= (x1471 x2384) 0)))
(assert (=> (>= 10000 x2972) (= 0 (x1471 x2972))))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (not (x800 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678))))
(assert (> (x1814 x7 x3034 x780 x133) 10000))
(assert (x2891 x1988))
(assert (< (x2577 x1126 x358) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x1874))
(assert (x2891 x3115))
(assert (=> (<= x437 10000) (= 0 (x1471 x437))))
(assert (x2891 x2348))
(assert (x2891 x848))
(assert (x2891 x1349))
(assert (x2327 x2881))
(assert (x2891 x2649))
(assert (x2891 x2628))
(assert (= x1135 (x81 (x2282 x3036 x2430 x2829 x1232 x1135))))
(assert (= (x616 (x2408 x1672 x2583 x448 x648 x1116 x1276 x2708 x1755)) x2708))
(assert (= x1531 (x533 (x1258 x2465 x1531 x1649 x736 x3105 x2756 x2750))))
(assert (x2891 x2469))
(assert (< (x1159 x798 x996 x125) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x189 x2411))
(assert (x2891 x2095))
(assert (not (x800 (x1258 x1126 x1635 x67 x777 x870 x2495 x541))))
(assert (x2891 x1882))
(assert (=> (<= x165 10000) (= 0 (x1471 x165))))
(assert (x2327 x2463))
(assert (=> (<= x1497 10000) (= 0 (x1471 x1497))))
(assert (x2891 x1445))
(assert (x2891 x243))
(assert (x2891 x1397))
(assert (=> (>= 10000 x2281) (= 0 (x1471 x2281))))
(assert (x2891 x914))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639712))
(assert (=> (>= 10000 x2756) (= 0 (x1471 x2756))))
(assert (= x2071 (=> (and (not (= x862 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x893 (x25 x194)) (= x1595 (not (> x1962 1))) (= (x763 x2678) x590) (= x909 (x3072 (+ 32 x862))) (<= 1 x180) (= x1139 (mod (* x1993 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x862) (= (x3072 (+ x1475 32)) x2678) (<= x862 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3072 (+ x590 32)) x127) (= (x2559 x2478) x3108) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1993) (= x731 (x3072 (+ x1888 x2478))) (= (x3072 (+ 32 x1016)) x1410) (= x1880 1) (not (= x862 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x2502 1461501637330902918203684832716283019655932542975 x39) x1132) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x862) (= (x100 x127) x39) (= x2271 1) (= (x3072 (+ x862 160)) x2403) (>= x3108 1) (< x862 x2403) (= (x3072 (+ 32 x1410)) x1954) (= (x1375 x1475) x1962) (= x2434 (x1691 x1216)) (= x180 (x763 x1475)) (= (x763 x590) x1880) (= (x3072 (+ 32 x909)) x1016) (= x194 (x3072 (+ x127 32))) (< x1993 x3108) (= x1216 (x3072 (+ 64 x127))) (= x1888 (x3072 (+ 32 x1139))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x862))) (and (=> (= x2403 x1550) x1847) x1595))))
(assert (= x2935 (x2319 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935))))
(assert (x2327 x2359))
(assert (x2891 x894))
(assert (= (or x1563 x1163) x2900))
(assert (x2891 x1536))
(assert (x2891 x1505))
(assert (= x1603 (x623 (x1504 x1603 x281 x2281 x3118 x2424 x434))))
(assert (x800 18446746139588821027))
(assert (x2891 x513))
(assert (x2891 x495))
(assert (= (x1471 18446744073709551167) 0))
(assert (not (x800 (x1814 x2465 x1170 x1614 x2862))))
(assert (= (x623 (x2577 x1672 x2486)) x1672))
(assert (x2891 x2599))
(assert (=> (<= x754 10000) (= (x1471 x754) 0)))
(assert (x2891 x454))
(assert (=> (<= x2702 10000) (= (x1471 x2702) 0)))
(assert (=> (<= x695 10000) (= (x1471 x695) 0)))
(assert (x800 2621382288))
(assert (x2891 x2306))
(assert (x2891 x43))
(assert (x2891 x2021))
(assert (x2891 x3046))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1814 x1672 x2459 x872 x2204)))
(assert (= (and (not x2497) x1337) x2022))
(assert (= (x623 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707)) x2465))
(assert (= x900 (and x2018 x1868)))
(assert (x2891 x1314))
(assert (= 0 (x1471 115792089237316195423570985008687907853269984665640564039439137263839420088228)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2408 x7 x122 x3048 x1370 x2238 x1413 x2599 x2783)))
(assert (=> (>= 10000 x502) (= 0 (x1471 x502))))
(assert (x2891 x2351))
(assert (= x999 (or x2841 x902)))
(assert (= (x1471 115792089237316195423570985008687907853269984665640564039457584007913129639832) 0))
(assert (x2891 x684))
(assert (x2891 x915))
(assert (= (or x2148 x1965 x2549 x1101 x1231) x2214))
(assert (x2891 x2192))
(assert (x2891 x930))
(assert (= (or (and x890 (not x1347)) x660 (and (not x1949) x667) (and (not x15) x1813) (and (not x1708) x447)) x880))
(assert (x2891 x2318))
(assert (x2891 x398))
(assert (x2891 x296))
(assert (x2891 x348))
(assert (x2891 x2283))
(assert (= (x1471 (x1159 64 x913 1)) (x1159 64 x913 1)))
(assert (= (x2772 x2377 248) (div x2377 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= (x1471 (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)) (x1258 x1958 x985 x918 x2129 x3109 x267 x1872)))
(assert (x2891 x2526))
(assert (x2891 x2101))
(assert (x2891 x2117))
(assert (= (and (not x2451) x2917) x1326))
(assert (= x1439 (x237 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998))))
(assert (= (x616 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678)) x2387))
(assert (= (and x286 (not x258)) x2438))
(assert (x2891 x2090))
(assert (= (or x2270 x1743 x2298 x937 x376) x1868))
(assert (x2327 x2312))
(assert (x2891 x1515))
(assert (x2891 x2386))
(assert (x2891 x36))
(assert (= (x81 (x2408 x3036 x770 x1436 x1922 x1703 x2719 x2086 x3000)) x1703))
(assert (= (x616 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707)) x1594))
(assert (x2891 x1418))
(assert (x2891 x1937))
(assert (=> (<= x1483 10000) (= (x1471 x1483) 0)))
(assert (x2891 x1061))
(assert (= x840 (and x1333 x2809)))
(assert (< 10000 (x1258 x2623 x1524 x2425 x691 x1930 x614 x556)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2282 x1483 x2545 x2565 x422 x2663)))
(assert (x2891 x2255))
(assert (=> (<= x2306 10000) (= (x1471 x2306) 0)))
(assert (x800 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= x2351 (x533 (x2577 x2707 x2351))))
(assert (x2891 x1093))
(assert (x2891 x3057))
(assert (not (x800 (x2282 x1672 x2397 x1980 x1713 x482))))
(assert (x2891 x2811))
(assert (x2891 x453))
(assert (not (x800 (x1814 x1483 x2946 x404 x386))))
(assert (=> (<= x331 10000) (= 0 (x1471 x331))))
(assert (x2891 x2697))
(assert (x2891 x2553))
(assert (= x1720 (x81 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707))))
(assert (x2891 x2447))
(assert (= (x623 (x1814 x2465 x1170 x1614 x2862)) x2465))
(assert (= (x533 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816)) x1910))
(assert (=> (>= 10000 x1561) (= (x1471 x1561) 0)))
(assert (x2891 x444))
(assert (= (x237 (x1504 x1126 x2297 x381 x68 x1441 x1236)) x68))
(assert (= (x1504 x169 x238 x1196 x733 x2713 x1297) (x1471 (x1504 x169 x238 x1196 x733 x2713 x1297))))
(assert (x2891 x2127))
(assert (= (x237 (x1504 x213 x581 x339 x1112 x1462 x1033)) x1112))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1814 x1603 x531 x3113 x3017)))
(assert (= (x2282 x7 x547 x2736 x354 x1320) (x1471 (x2282 x7 x547 x2736 x354 x1320))))
(assert (x2891 x1278))
(assert (x2891 x1423))
(assert (x2891 x734))
(assert (=> (<= x1672 10000) (= (x1471 x1672) 0)))
(assert (x2891 x1404))
(assert (not (x800 (x2577 x7 x912))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817)))
(assert (= (x1471 (x1159 x213 x245 x943)) (x1159 x213 x245 x943)))
(assert (x2891 x242))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639649))
(assert (x2891 x2126))
(assert (x2891 x223))
(assert (= (x1471 (x2577 x1958 x1733)) (x2577 x1958 x1733)))
(assert (x2891 x919))
(assert (x2891 x1950))
(assert (x2891 x1616))
(assert (< 10000 (x1814 x3036 x405 x1343 x1490)))
(assert (=> (>= 10000 x2673) (= 0 (x1471 x2673))))
(assert (x2891 x3035))
(assert (= (and (not x2285) x2683) x2929))
(assert (< 10000 (x1814 x1672 x2459 x872 x2204)))
(assert (x2891 x2455))
(assert (= x125 (x103 (x1159 x798 x996 x125))))
(assert (x2891 x1125))
(assert (=> (<= x2238 10000) (= (x1471 x2238) 0)))
(assert (x2891 x2610))
(assert (= x108 (x533 (x1159 x2465 x108 x1431))))
(assert (= (x103 (x1159 x1483 x309 x2716)) x2716))
(assert (x2891 x2510))
(assert (x2891 x2907))
(assert (x2891 x1447))
(assert (x2891 x175))
(assert (= (x623 (x1258 x169 x138 x1801 x3057 x421 x1443 x474)) x169))
(assert (= (x103 (x1258 x1603 x2349 x1172 x1346 x1082 x2061 x1817)) x1172))
(assert (x2891 x2297))
(assert (x2891 x1313))
(assert (x2891 x1263))
(assert (x2891 x2686))
(assert (x2891 x2003))
(assert (x2891 x1099))
(assert (= x2313 (or x1377 x546)))
(assert (= x379 (x533 (x1814 x1958 x379 x1119 x1378))))
(assert (x2891 x1393))
(assert (= (and x1188 x2240) x911))
(assert (= x3122 (and x540 x1114)))
(assert (=> (>= 10000 x2750) (= 0 (x1471 x2750))))
(assert (x2891 x943))
(assert (x2891 x583))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (= (or x882 x343) x3114))
(assert (x2891 x2307))
(assert (=> (>= 10000 x2495) (= (x1471 x2495) 0)))
(assert (< (x2282 x3036 x2430 x2829 x1232 x1135) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x800 (x2577 x2707 x2351))))
(assert (x2891 x2918))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x2891 x995))
(assert (=> (>= 10000 x433) (= 0 (x1471 x433))))
(assert (not (x800 (x1159 x1958 x2361 x333))))
(assert (x2891 x908))
(assert (x2891 x1415))
(assert (= 0 (x1471 18446744073709551518)))
(assert (= x2614 (x623 (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998))))
(assert (= x3056 (x1466 (x2408 x1603 x2553 x1999 x2871 x4 x3056 x460 x2935))))
(assert (x2891 x2604))
(assert (= x213 (x623 (x2282 x213 x93 x2128 x3006 x1758))))
(assert (x2891 x770))
(assert (x2891 x216))
(assert (x2891 x714))
(assert (x2891 x2233))
(assert (=> (>= 10000 x1297) (= (x1471 x1297) 0)))
(assert (=> (<= x1162 10000) (= (x1471 x1162) 0)))
(assert (x2891 x3087))
(assert (< 10000 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055)))
(assert (x800 134217728))
(assert (x2891 x2278))
(assert (x2891 x2111))
(assert (x2891 x942))
(assert (= (x1471 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707)) (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707)))
(assert (x2891 x1570))
(assert (not (x800 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956))))
(assert (= x348 (x533 (x2577 x2465 x348))))
(assert (=> (<= x3061 10000) (= (x1471 x3061) 0)))
(assert (x2891 x2949))
(assert (> (x1814 x2614 x2164 x2625 x1937) 10000))
(assert (= (x533 (x1504 x798 x453 x1248 x57 x3102 x1925)) x453))
(assert (x2891 x2074))
(assert (=> (<= x3109 10000) (= 0 (x1471 x3109))))
(assert (=> (>= 10000 x2713) (= 0 (x1471 x2713))))
(assert (= x2985 (=> (and (= (* x3106 32) x2225) (= x146 (x3072 (+ 36 x444))) (= x444 (x2605 164)) (= x409 (x3072 (+ 32 x1852))) (= x1262 (+ 32 x184)) (= (* x3106 160) x2287) (> x2600 x1852) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x444) (<= x12 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x444 x12)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x444) (<= x12 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= x2600 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1852) (= x1344 (< 0 x3106)) (= x2600 (x3072 (+ x1852 (mod (+ x2225 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x3106 18446744073709551615) (not (or (and (= (<= x662 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1679)) (> x662 x1679)) (and (> x1679 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x662 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (or (<= x444 2065879269376) (>= x444 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x3072 (+ 32 x146)) x662) (<= x1852 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3106 (x2605 x146)) (= (x511 (- x2051 x2287)) x1679) (<= x1852 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> x1344 x1778) (=> (and (= x2600 x612) (not x1344)) x1066)))))
(assert (x2891 x1306))
(assert (x2891 x2587))
(assert (x2891 x555))
(assert (x2891 x267))
(assert (= x2896 (=> (and (and (not (= x1497 x679)) (>= 1461501637330902918203684832716283019655932542975 x1497) (<= 1 x2747) (>= x2072 0) (not (= x2747 x785)) x2652 (<= x438 4294967295) (<= 0 x2053) (not (= x1633 x1497)) x464 (>= x2581 0) (not (= x785 x1633)) (<= x2072 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x1497) (not (= x392 x785)) (>= x2246 1) x1867 (>= 1461501637330902918203684832716283019655932542975 x1024) x938 (not (= x785 x1497)) (>= 1461501637330902918203684832716283019655932542975 x2355) (not (= x2246 x2747)) (>= 1461501637330902918203684832716283019655932542975 x2747) (= x1867 (< 0 (x507 x392))) (>= 4294967295 x744) (<= x512 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x922 0) (>= 4294967295 x1855) (not (= x2747 x392)) (not (= x2747 x1365)) (>= 4294967295 x1125) (<= x2581 1461501637330902918203684832716283019655932542975) (= x2166 x2301) (not (= x2246 x1365)) (= x2541 (> (x507 x785) 0)) (not (= x2246 x1497)) (not (= x2747 x2166)) (>= x1607 1) (>= 2065879269444 x2051) (not (= x785 x679)) (= x938 (< 0 (x507 x2747))) (>= 1461501637330902918203684832716283019655932542975 x2246) x2152 x2541 (>= x1365 1) (not (= x679 x1633)) (>= 1461501637330902918203684832716283019655932542975 x679) (not (= x2166 x392)) (not (= x679 x2747)) (<= x1607 1461501637330902918203684832716283019655932542975) (<= x109 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2956) x2967 (<= x2692 1461501637330902918203684832716283019655932542975) (= (> (x507 x1365) 0) x2967) (>= 1461501637330902918203684832716283019655932542975 x785) (not (= x392 x1365)) (>= x2956 0) (= x2152 (> (x507 x1497) 0)) (<= x1645 4294967295) (not (= x2246 x2166)) (not (= x679 x2246)) (not (= x392 x1633)) x2275 (>= x1024 0) (<= 1 x2203) (>= x1239 0) (not (= x1365 x1633)) (>= 4294967295 x230) (not (= x1633 x2246)) (not (= x1497 x2747)) (not (= x785 x2246)) (not (= x1365 x679)) (<= x1785 1461501637330902918203684832716283019655932542975) (not (= x2166 x1365)) (>= 1461501637330902918203684832716283019655932542975 x2166) (= x2246 x1607) (>= x1209 0) (>= x2051 548) (not (= x2166 x785)) (<= 0 x1785) (<= 1 x785) (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1209 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1633 x2166)) (>= x269 0) (not (= x1365 x1497)) (<= x392 1461501637330902918203684832716283019655932542975) (<= x1893 4294967295) (= 0 x1718) (<= 0 x1783) (= x1365 x979) (not (= x1365 x785)) (= x2203 x2166) (not (= x1497 x392)) (>= x679 1) (not (= x1497 x2166)) (<= x2053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1365 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1239) (<= 1 x2166) (>= 1461501637330902918203684832716283019655932542975 x2203) (>= x2301 1) (= (< 0 (x507 x1633)) x464) (<= 1 x979) (not (= x2747 x1633)) (>= x1633 1) (>= 1461501637330902918203684832716283019655932542975 x979) (= (< 0 (x507 x2166)) x674) (= (< 0 (x507 x679)) x2652) (not (= x392 x679)) (>= 4294967295 x2460) (>= x512 0) (<= x1633 1461501637330902918203684832716283019655932542975) (>= x392 1) (= (< 0 (x507 x2246)) x2275) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1783) (<= 0 x2692) (>= 1461501637330902918203684832716283019655932542975 x2301) (not (= x679 x2166)) (= x939 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x922) x674 (not (= x392 x2246))) (and (and (and (= x2053 x725) (and (and (= x1793 x2581) (and (= x2416 x512) (and (and (= x1604 37664329658542632380461339884011895550187483938955784695590509376205521682432) (<= x532 127) (= x2633 (x1464 x2747)) (>= 1461501637330902918203684832716283019655932542975 x1736) (<= 32 x222) (<= 1 x1834) (= x3080 x2633) (<= x532 127) (= x681 (x298 x234)) (= x1457 37664329658542632380461339884011895550187483938955784695590509376205521682432) (<= x222 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x507 x2747) x1834) (= x2581 x234) (= x2448 false) (= (> x1794 0) x258) (= x91 128) (= x1383 false) (= x560 2189116922)) (or (and x258 (and (<= 32 x222) (= x186 1) (>= 4294967295 x222))) (and (not x258) (= x1794 x186)))))) (and (= x922 x2773) (= x3045 x2051) (= x2986 false)))) (and (= (+ x1313 32) x1136) (= x2344 (+ x859 x2850 32)) (= x1313 (+ x1309 420)) (< x947 x1264) (= (+ 32 x1199) x1003) (= (* x1855 160) x1050) (= x2850 (* x1893 160)) (= (* x1125 32) x1491) (= x2418 (* 32 x1425)) (= x2442 (- x2344 36)) (= (- x1313 36) x2858) (= (- x859 36) x2310) (= x1883 (- x1199 36)) (= x1645 x1264) (>= x2418 x1264) (= x1751 (+ 32 x859)) (= (+ x2344 32) x2352) (= x947 (* 32 (- x1425 1))) (>= 134217728 x1425) (= (+ x1050 x1313 32) x859) (= (+ 32 x1491 x1199) x3045) (>= x1425 0) (= x1785 x1363) (= x1309 (* 128 x2460)) (= x1199 (+ x2418 x2344 32)))) (= x2607 x1024))) x1228)))
(assert (x2891 x2299))
(assert (=> (>= 10000 x3046) (= 0 (x1471 x3046))))
(assert (x2891 x125))
(assert (> (x2577 x2465 x348) 10000))
(assert (x2891 x2735))
(assert (=> (<= x78 10000) (= (x1471 x78) 0)))
(assert (not (x800 (x1504 x1672 x2007 x1861 x1737 x1964 x2266))))
(assert (x2891 x1112))
(assert (x2891 x205))
(assert (x2891 x724))
(assert (= x1737 (x237 (x1504 x1672 x2007 x1861 x1737 x1964 x2266))))
(assert (= x3036 (x623 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657))))
(assert (x2891 x1765))
(assert (x2891 x1369))
(assert (x2891 x2936))
(assert (= x2258 (and (not x2890) x2179)))
(assert (= 0 (x1471 1461501637330902918203684832716283019655932542975)))
(assert (=> (<= x1196 10000) (= 0 (x1471 x1196))))
(assert (x2891 x2310))
(assert (= (x81 (x1504 x1958 x991 x431 x1015 x1639 x454)) x1639))
(assert (x2891 x691))
(assert (x2891 x441))
(assert (x2891 x144))
(assert (x2891 x2452))
(assert (= x1777 false))
(assert (= (x103 (x1159 64 x913 1)) 1))
(assert (= (x2577 x213 x608) (x1471 (x2577 x213 x608))))
(assert (x2891 x2927))
(assert (= (and x2738 x2527) x325))
(assert (x2891 x1835))
(assert (x2891 x50))
(assert (x2891 x1032))
(assert (x2891 x1128))
(assert (not (x800 (x1159 x1483 x309 x2716))))
(assert (= x1870 (and x1315 (not x2659))))
(assert (= (x1471 (x1504 x2465 x1731 x815 x588 x1822 x2100)) (x1504 x2465 x1731 x815 x588 x1822 x2100)))
(assert (= x1117 (x237 (x1504 x2614 x1049 x1039 x1117 x455 x768))))
(assert (=> (>= 10000 x3000) (= 0 (x1471 x3000))))
(assert (= x2034 (=> (and (= (not (> x2780 1)) x887) (= (x2124 x2478) x2780)) (and (=> (= x2517 x477) x1943) x887))))
(assert (x2891 x40))
(assert (=> (<= x431 10000) (= 0 (x1471 x431))))
(assert (x2891 x791))
(assert (x2891 x2533))
(assert (= (=> (and (= (= 0 x2706) x1312) (or (and (= x2706 0) (not x1312)) x1312)) x87) x1316))
(assert (= x371 (x533 (x1258 x3036 x371 x1995 x2705 x2095 x2380 x2657))))
(assert (= (=> (and (= x3030 (x317 x248)) (= (x317 x1062) x2612) (= x2130 (x3072 (+ 32 x248))) (= x665 (x3072 (+ 32 x1451))) (= (> x3030 0) x3065)) (and (=> (and (and (= (x3072 (+ x2130 32)) x470) (= x1754 (x317 x2130)) (= x2782 (x3072 (+ x665 32))) (= x2120 (> x3030 1))) x3065) (and (=> (and (and (= x2745 1) (= x470 x3051) (= x2782 x1786)) (not x2120)) x2394) (=> (and x2120 (and (= x3087 (x3072 (+ 32 x470))) (= (> x3030 2) x1188) (= (x817 x470) x2585) (= (x3072 (+ x2782 32)) x1392))) (and (=> (and (not x1188) (and (= x2745 2) (= x1392 x1786) (= x3051 x3087))) x2394) (=> (and (and (= x1895 (x85 x3087)) (= x1873 (> x3030 3)) (= x823 (x3072 (+ 32 x1392))) (= x2543 (x3072 (+ 32 x3087)))) x1188) (and (=> (and (not x1873) (and (= x3051 x2543) (= 3 x2745) (= x1786 x823))) x2394) (=> x1873 x3073))))))) (=> (and (not x3065) (and (= 0 x2745) (= x2130 x3051) (= x665 x1786))) x2394))) x1556))
(assert (x2891 x2094))
(assert (x2891 x1764))
(assert (x2891 x24))
(assert (= (x1466 (x1504 x7 x2603 x2561 x2878 x2669 x1308)) x1308))
(assert (x2891 x138))
(assert (x2891 x1241))
(assert (not (x800 (x2408 x2465 x1585 x1387 x1201 x1720 x2514 x1594 x707))))
(assert (x2891 x1758))
(assert (= (and x200 x653) x1101))
(assert (x2891 x2340))
(assert (x2891 x1629))
(assert (= x3123 (=> (and (= x1948 x2278) (= x2706 x903) (= x1681 x1218) (= x1790 x2787)) x1316)))
(assert (x2891 x333))
(assert (not (x800 (x1814 x1603 x531 x3113 x3017))))
(assert (x2891 x1526))
(assert (x2891 x711))
(assert (x2891 x1647))
(assert (x2891 x923))
(assert (x2891 x1076))
(assert (x2891 x2268))
(assert (x800 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (x2891 x1192))
(assert (=> (>= 10000 x2707) (= (x1471 x2707) 0)))
(assert (x2891 x1299))
(assert (x2891 x2428))
(assert (x2891 x2279))
(assert (=> (>= 10000 x2814) (= (x1471 x2814) 0)))
(assert (not (x800 (x2408 x169 x2340 x3032 x2959 x2169 x1780 x1721 x1224))))
(assert (x2891 x1650))
(assert (= (x616 (x2408 x1958 x2983 x331 x2587 x1701 x990 x78 x1956)) x78))
(assert (x2891 x2515))
(assert (x2891 x1663))
(assert (x2891 x2331))
(assert (x2891 x1606))
(assert (> (x2577 x1603 x993) 10000))
(assert (=> (>= 10000 x1633) (= 0 (x1471 x1633))))
(assert (x2891 x1439))
(assert (= (=> (and (= x2452 (x3072 (+ x2853 x1404))) (= x310 x1674) (= x1907 (x511 (- x3058 x377))) (= (x3095 x377) x2614) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x377) (<= x377 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2452 x1350) (= x1726 x3058) (>= x1726 1) (<= x377 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 4 x1674) (= (x3072 (+ 32 x377)) x2220) (= (x511 (- x1907 32)) x2111) (> x3058 x377) (= x429 (* x1674 32)) (= (<= x2614 224) x970) (= (* x1674 32) x1404) (= (x3072 (+ x643 x429)) x1726) (<= 1 x3058)) (and (=> (and (= (x3095 x154) x1617) (= x415 (x3095 x446)) (= x1750 (x3072 (+ x2220 32))) (<= x415 2) (= x1041 (x3072 (+ x2133 32))) (= (x3095 x1223) x1439) (= x1903 (x1159 x2614 x1561 x2993)) (= (x3095 x1022) x163) (= (x3072 (+ 64 x2220)) x2132) (= x1937 (x3095 x2675)) (= (x3072 (+ 32 x2220)) x114) (= (x3095 x2132) x1117) (= x755 (x3072 (+ 96 x2220))) (= x845 (x3072 (+ 32 x3058))) (= (ite (= x2614 0) x241 (ite (>= 32 x2614) x2037 (ite (<= x2614 64) x1903 (ite (>= 96 x2614) x867 (ite (<= x2614 128) x3015 (ite (<= x2614 160) x2379 (ite (>= 192 x2614) x2813 (ite (>= 224 x2614) x889 x2795)))))))) x1275) (= x798 (x2676 x3058)) (= x2419 (x3072 (+ 64 x2220))) (= x2610 (x3095 x2753)) (= x2037 (x2577 x2614 x2796)) (= (x3095 x2220) x1049) (= (x2502 1461501637330902918203684832716283019655932542975 x1335) x2108) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639615 x3058) (<= 1 x3058)) (and (<= x3058 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639618 x3058))) (= (x3095 x2419) x2954) (= (x3072 (+ 32 x2220)) x32) (= (x3095 x2220) x2164) (= x383 (x3072 (+ 32 x794))) (= (x3072 (+ 32 x383)) x19) (= x1561 (x3095 x2220)) (= x2913 (x3095 x1221)) (= (x3095 x1959) x1335) (= x3041 (x3072 (+ x2220 160))) (= (x3072 (+ 32 x1967)) x1618) (= (x3072 (+ 64 x2220)) x2982) (= x2990 (x3095 x2220)) (= (x3095 x2220) x2796) (= (x3095 x231) x2629) (= (x3072 (+ 192 x2220)) x574) (= (x3095 x755) x479) (= x794 (x3072 (+ 32 x3058))) (= (x3095 x658) x2463) (= (x3072 (+ 32 x1041)) x1336) (= (x3095 x32) x171) (= (x3095 x1077) x455) (= x2753 (x3072 (+ 96 x2220))) (= (x2502 1461501637330902918203684832716283019655932542975 x2463) x835) (= (x1258 x2614 x1171 x1784 x1439 x2610 x2629 x998) x2813) (= x1221 (x3072 (+ 96 x2220))) (= (x3095 x3041) x1921) (= (x3072 (+ 160 x2220)) x2952) (= x914 (x511 (- x2303 x3058))) (= (x3072 (+ 32 x19)) x2857) (= x2993 (x3095 x1835)) (= x241 (x876 0)) (= x1835 (x3072 (+ 32 x2220))) (= (x3095 x2739) x1779) (= (x1814 x2614 x2164 x2625 x1937) x867) (= (x2408 x2614 x1842 x171 x2698 x479 x1617 x1921 x3061) x889) (= (x3072 (+ x2220 32)) x504) (= (x3095 x504) x1039) (= x203 (<= x798 224)) (= (x3072 (+ 32 x2220)) x1349) (= x2625 (x3095 x1750)) (= x666 (x511 (- x914 32))) (= (x3095 x1349) x3078) (= x2379 (x1504 x2614 x1049 x1039 x1117 x455 x768)) (= (x3072 (+ 128 x2220)) x231) (= x2303 (x3072 (+ x794 288))) (= x998 (x3095 x2952)) (= (x3072 (+ 64 x2220)) x2675) (= (x3095 x2220) x1171) (= (x3095 x114) x1784) (= (x2282 x2614 x2990 x3078 x2954 x2913) x3015) (= (x3095 x2573) x768) (= x1077 (x3072 (+ x2220 96))) (= x2133 (x3072 (+ x1618 32))) (= (x3072 (+ 128 x2220)) x2573) (= (x3072 (+ x2220 64)) x1223) (= x2698 (x3095 x2982)) (= (x3095 x2220) x1842) (= x1967 (x3072 (+ 32 x2857))) (= (x3072 (+ 128 x2220)) x154) (< x3058 x2303) (= x3061 (x3095 x574))) (and x203 (=> (and (= (x2676 x2107) x3102) (= (x2676 x845) x1507) (= (x2676 x2078) x3100) (= (x2676 x1415) x8) (= (x2676 x916) x2260) (= x2864 (x2676 x1398)) (= (x2676 x845) x2193) (= x1686 (x3072 (+ 32 x839))) (= (x2676 x2955) x2596) (= (x2577 x798 x168) x1573) (= x1197 (x2676 x845)) (= (x3072 (+ x845 160)) x2257) (= x1663 (x3072 (+ 32 x845))) (or (and (<= 321 x2303) (<= x2303 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (<= x2303 318) (>= x2303 2))) (= (x2676 x845) x453) (= x151 (x3072 (+ 32 x845))) (= x2077 (x2676 x728)) (= x2730 (x3072 (+ 64 x845))) (= (x1814 x798 x2193 x2864 x1477) x239) (= (x2676 x853) x94) (= (x1258 x798 x1507 x8 x2702 x3100 x2444 x754) x637) (= (= x724 0) x694) (= x996 (x2676 x845)) (>= 18446744073709551615 x724) (= x1398 (x3072 (+ x845 32))) (= x1120 (* x724 32)) (= (x3072 (+ 96 x845)) x2078) (= (x3072 (+ x845 64)) x96) (= x2445 (x3072 (+ 128 x845))) (= (x3072 (+ 192 x845)) x3085) (= x1058 (x2676 x845)) (= x604 (x3072 (+ x845 128))) (= x1353 (x3072 (+ x845 64))) (= (x2676 x845) x168) (= x1415 (x3072 (+ x845 32))) (= x1584 (x2408 x798 x1197 x94 x1729 x1913 x2260 x2387 x1678)) (= x2702 (x2676 x2694)) (= x125 (x2676 x1663)) (> x500 x2303) (= (x2676 x2445) x1925) (= (x2676 x151) x1248) (= (x2676 x2994) x1913) (= x724 (x2676 x1686)) (= x428 (ite (= 0 x798) x1097 (ite (<= x798 32) x1573 (ite (>= 64 x798) x115 (ite (<= x798 96) x239 (ite (<= x798 128) x129 (ite (<= x798 160) x2855 (ite (<= x798 192) x637 (ite (>= 224 x798) x1584 x2384))))))))) (= x853 (x3072 (+ 32 x845))) (= x2955 (x3072 (+ 96 x845))) (= x2694 (x3072 (+ 64 x845))) (= x1023 (x3072 (+ 160 x845))) (= x2444 (x2676 x604)) (= (x3072 (+ 96 x845)) x2107) (= (x2676 x1353) x1477) (= (x876 0) x1097) (= x500 (x3072 (+ (mod (+ x1120 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2303))) (= (x1159 x798 x996 x125) x115) (= (x2282 x798 x1058 x2981 x2077 x2596) x129) (= (x2676 x3085) x1678) (= x57 (x2676 x96)) (= (x2676 x1023) x2387) (= x1990 (x3072 (+ 32 x845))) (= x2855 (x1504 x798 x453 x1248 x57 x3102 x1925)) (<= 3 x500) (= x2994 (x3072 (+ x845 96))) (= x728 (x3072 (+ x845 64))) (= (x3072 (+ 128 x845)) x916) (= x754 (x2676 x2257)) (= (x2676 x1990) x2981) (= (x2676 x2730) x1729)) (and (=> (and (and (<= x500 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x500)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x500)) (= (x3072 (+ x500 64)) x304) (= (x3072 (+ x500 32)) x2695) (= x1115 (x3072 (+ x2303 32))) (> x304 x500) (= x1385 (x511 (- x724 1))) (<= x500 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (= x724 1) x2284) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x500)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x500) (= x2119 (x3072 (+ 32 x1115)))) (not x694)) (and (=> (and x2284 (= x304 x1403)) x77) (=> (not x2284) x132))) (=> (and (= x500 x1572) x694) x2253))))) x970)) x2195))
(assert (> (x2282 x1126 x268 x216 x491 x1521) 10000))
(assert (=> (>= 10000 x1439) (= 0 (x1471 x1439))))
(assert (x2891 x545))
(assert (not (x800 (x1159 x1603 x1825 x601))))
(assert (x2891 x2582))
(assert (x2891 x3061))
(assert (= x1654 (x103 (x1258 x1672 x1910 x1654 x1010 x2096 x958 x1816))))
(assert (x2891 x1010))
(assert (=> (<= x1995 10000) (= (x1471 x1995) 0)))
(assert (= (or x2672 x1992) x90))
(assert (= x2564 (and (not x1974) x518)))
(assert (= x2527 (or x2852 x528 x2839 x2354 x812)))
(assert (= (and x1347 x890) x1813))
(assert (= (x1471 (x1258 x1126 x1635 x67 x777 x870 x2495 x541)) (x1258 x1126 x1635 x67 x777 x870 x2495 x541)))
(assert (x2891 x929))
(assert (< (x1814 x2614 x2164 x2625 x1937) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2891 x2036))
(assert (x2891 x2819))
(assert (x2891 x2414))
(assert (x2891 x893))
(assert (x2891 x2995))
(assert (x2891 x1392))
(assert (= (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055) (x1471 (x2408 x2623 x1494 x2944 x1263 x165 x312 x2529 x3055))))
(assert (x2891 x1830))
(assert (x2891 x1557))
(check-sat)
(exit)
