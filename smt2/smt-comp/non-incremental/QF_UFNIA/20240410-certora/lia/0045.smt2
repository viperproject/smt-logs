(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1117 () Int)
(declare-fun x989 () Bool)
(declare-fun x917 () Bool)
(declare-fun x710 () Bool)
(declare-fun x517 () Bool)
(declare-fun x847 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1371 () Int)
(declare-fun x588 () Int)
(declare-fun x1678 () Int)
(declare-fun x1548 () Bool)
(declare-fun x516 () Bool)
(declare-fun x24 () Int)
(declare-fun x511 () Bool)
(declare-fun x624 () Bool)
(declare-fun x378 () Int)
(declare-fun x1534 () Int)
(declare-fun x1327 () Int)
(declare-fun x1645 () Int)
(declare-fun x258 () Bool)
(declare-fun x423 () Bool)
(declare-fun x586 () Bool)
(declare-fun x1648 () Int)
(declare-fun x717 () Bool)
(declare-fun x1616 () Int)
(declare-fun x1326 () Int)
(declare-fun x474 () Int)
(declare-fun x157 () Bool)
(declare-fun x322 () Int)
(declare-fun x598 () Int)
(declare-fun x982 () Bool)
(declare-fun x105 () Int)
(declare-fun x136 () Bool)
(declare-fun x389 () Int)
(declare-fun x445 () Int)
(declare-fun x766 () Bool)
(declare-fun x911 () Int)
(declare-fun x1267 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x63 () Int)
(declare-fun x1301 () Int)
(declare-fun x678 () Int)
(declare-fun x652 () Int)
(declare-fun x1144 () Int)
(declare-fun x831 () Bool)
(declare-fun x899 () Int)
(declare-fun x1170 () Int)
(declare-fun x1191 () Bool)
(declare-fun x1103 (Int) Bool)
(declare-fun x1436 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x931 () Int)
(declare-fun x1304 () Int)
(declare-fun x773 () Int)
(declare-fun x658 () Bool)
(declare-fun x1404 () Int)
(declare-fun x1408 () Bool)
(declare-fun x1050 () Int)
(declare-fun x648 () Bool)
(declare-fun x976 () Int)
(declare-fun x1024 () Int)
(declare-fun x425 () Bool)
(declare-fun x610 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x529 () Int)
(declare-fun x1677 () Int)
(declare-fun x784 () Bool)
(declare-fun x397 () Bool)
(declare-fun x328 () Int)
(declare-fun x167 () Bool)
(declare-fun x721 () Bool)
(declare-fun x238 () Int)
(declare-fun x1366 () Int)
(declare-fun x1637 () Int)
(declare-fun x1582 () Bool)
(declare-fun x1641 () Int)
(declare-fun x1125 () Int)
(declare-fun x43 () Int)
(declare-fun x1312 () Int)
(declare-fun x657 () Int)
(declare-fun x1298 (Int) Int)
(declare-fun x999 () Bool)
(declare-fun x145 () Bool)
(declare-fun x198 () Bool)
(declare-fun x716 () Int)
(declare-fun x779 () Int)
(declare-fun x797 () Int)
(declare-fun x1447 () Int)
(declare-fun x550 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1255 () Int)
(declare-fun x1347 () Int)
(declare-fun x1454 (Int) Int)
(declare-fun x87 () Int)
(declare-fun x708 () Int)
(declare-fun x1413 () Int)
(declare-fun x927 () Int)
(declare-fun x520 () Int)
(declare-fun x609 () Bool)
(declare-fun x138 () Int)
(declare-fun x682 () Bool)
(declare-fun x851 () Bool)
(declare-fun x644 () Int)
(declare-fun x995 () Int)
(declare-fun x1122 () Bool)
(declare-fun x1235 () Int)
(declare-fun x808 () Bool)
(declare-fun x802 () Bool)
(declare-fun x497 () Int)
(declare-fun x1196 () Int)
(declare-fun x21 () Int)
(declare-fun x15 () Int)
(declare-fun x420 () Bool)
(declare-fun x1223 () Int)
(declare-fun x1466 () Bool)
(declare-fun x1195 () Int)
(declare-fun x4 () Bool)
(declare-fun x352 () Int)
(declare-fun x743 () Int)
(declare-fun x330 () Int)
(declare-fun x653 () Bool)
(declare-fun x862 () Bool)
(declare-fun x782 () Int)
(declare-fun x968 () Int)
(declare-fun x914 () Bool)
(declare-fun x956 () Int)
(declare-fun x380 () Int)
(declare-fun x1521 () Int)
(declare-fun x1179 () Int)
(declare-fun x1368 () Int)
(declare-fun x938 () Int)
(declare-fun x1114 () Bool)
(declare-fun x634 () Bool)
(declare-fun x256 () Bool)
(declare-fun x903 () Int)
(declare-fun x599 () Bool)
(declare-fun x508 () Int)
(declare-fun x1477 () Int)
(declare-fun x401 (Int Int) Int)
(declare-fun x75 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1384 () Int)
(declare-fun x1155 () Int)
(declare-fun x1584 () Int)
(declare-fun x25 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x237 () Bool)
(declare-fun x432 () Int)
(declare-fun x1640 () Int)
(declare-fun x547 () Int)
(declare-fun x1092 () Bool)
(declare-fun x1633 () Int)
(declare-fun x1275 () Int)
(declare-fun x1452 () Int)
(declare-fun x740 () Bool)
(declare-fun x470 () Int)
(declare-fun x1416 () Int)
(declare-fun x570 () Bool)
(declare-fun x168 () Bool)
(declare-fun x1422 () Int)
(declare-fun x498 () Bool)
(declare-fun x225 () Int)
(declare-fun x924 () Int)
(declare-fun x22 () Int)
(declare-fun x2 () Int)
(declare-fun x318 () Bool)
(declare-fun x412 () Int)
(declare-fun x987 () Int)
(declare-fun x1156 () Bool)
(declare-fun x204 () Bool)
(declare-fun x370 () Int)
(declare-fun x343 () Bool)
(declare-fun x902 () Int)
(declare-fun x107 () Int)
(declare-fun x202 () Int)
(declare-fun x438 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x1239 () Int)
(declare-fun x1562 () Int)
(declare-fun x472 () Int)
(declare-fun x111 () Int)
(declare-fun x293 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1531 () Bool)
(declare-fun x1396 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1591 () Int)
(declare-fun x1133 () Int)
(declare-fun x1316 () Bool)
(declare-fun x241 () Bool)
(declare-fun x367 () Int)
(declare-fun x809 () Int)
(declare-fun x1395 () Bool)
(declare-fun x577 () Int)
(declare-fun x18 () Int)
(declare-fun x1588 () Int)
(declare-fun x349 () Int)
(declare-fun x1609 () Bool)
(declare-fun x402 () Int)
(declare-fun x502 () Bool)
(declare-fun x1383 (Int) Int)
(declare-fun x1066 () Bool)
(declare-fun x212 () Bool)
(declare-fun x1376 () Int)
(declare-fun x1374 () Int)
(declare-fun x518 () Bool)
(declare-fun x822 () Bool)
(declare-fun x615 () Int)
(declare-fun x966 () Bool)
(declare-fun x170 () Int)
(declare-fun x1434 () Int)
(declare-fun x1033 () Bool)
(declare-fun x1550 () Int)
(declare-fun x641 () Int)
(declare-fun x259 () Int)
(declare-fun x1486 (Int Int) Int)
(declare-fun x619 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1382 () Int)
(declare-fun x1241 () Int)
(declare-fun x1265 () Int)
(declare-fun x1501 () Int)
(declare-fun x280 () Bool)
(declare-fun x329 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x865 (Int Int) Int)
(declare-fun x1566 () Int)
(declare-fun x574 () Int)
(declare-fun x613 () Int)
(declare-fun x361 () Int)
(declare-fun x1112 () Int)
(declare-fun x49 () Int)
(declare-fun x578 () Int)
(declare-fun x1520 () Int)
(declare-fun x687 () Bool)
(declare-fun x707 () Int)
(declare-fun x27 () Int)
(declare-fun x299 () Int)
(declare-fun x442 () Bool)
(declare-fun x181 () Int)
(declare-fun x531 () Bool)
(declare-fun x887 () Bool)
(declare-fun x348 (Int) Int)
(declare-fun x881 () Bool)
(declare-fun x1131 () Int)
(declare-fun x461 () Int)
(declare-fun x660 () Int)
(declare-fun x638 () Bool)
(declare-fun x190 () Bool)
(declare-fun x101 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x406 () Bool)
(declare-fun x583 () Bool)
(declare-fun x853 () Bool)
(declare-fun x452 () Bool)
(declare-fun x269 () Int)
(declare-fun x1285 () Bool)
(declare-fun x232 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x675 () Bool)
(declare-fun x1456 () Int)
(declare-fun x1668 () Bool)
(declare-fun x137 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x121 () Bool)
(declare-fun x458 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1258 () Int)
(declare-fun x1331 () Bool)
(declare-fun x642 () Int)
(declare-fun x210 () Bool)
(declare-fun x1487 (Int) Int)
(declare-fun x1289 () Bool)
(declare-fun x628 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x288 () Bool)
(declare-fun x896 () Int)
(declare-fun x825 () Int)
(declare-fun x48 () Bool)
(declare-fun x1019 () Int)
(declare-fun x757 () Int)
(declare-fun x1546 () Int)
(declare-fun x973 () Int)
(declare-fun x120 () Int)
(declare-fun x110 () Bool)
(declare-fun x712 () Int)
(declare-fun x1480 () Int)
(declare-fun x997 () Int)
(declare-fun x1180 () Bool)
(declare-fun x1150 () Int)
(declare-fun x1610 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x317 () Int)
(declare-fun x1385 () Bool)
(declare-fun x793 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x1358 () Int)
(declare-fun x305 () Int)
(declare-fun x754 () Bool)
(declare-fun x1410 () Int)
(declare-fun x541 () Int)
(declare-fun x8 () Int)
(declare-fun x290 () Int)
(declare-fun x1343 () Bool)
(declare-fun x659 () Bool)
(declare-fun x600 () Int)
(declare-fun x1420 () Int)
(declare-fun x605 () Int)
(declare-fun x274 () Int)
(declare-fun x1359 () Int)
(declare-fun x1549 () Bool)
(declare-fun x955 () Int)
(declare-fun x937 () Int)
(declare-fun x262 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x91 () Bool)
(declare-fun x1666 () Int)
(declare-fun x76 () Int)
(declare-fun x1544 () Int)
(declare-fun x296 () Int)
(declare-fun x400 () Int)
(declare-fun x1647 () Bool)
(declare-fun x1057 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1349 () Int)
(declare-fun x525 () Int)
(declare-fun x1613 () Int)
(declare-fun x257 (Int) Int)
(declare-fun x243 () Bool)
(declare-fun x70 () Int)
(declare-fun x801 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x1671 () Int)
(declare-fun x722 () Int)
(declare-fun x220 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x265 () Int)
(declare-fun x1425 () Int)
(declare-fun x1264 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x1424 () Int)
(declare-fun x1625 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1129 () Int)
(declare-fun x235 () Int)
(declare-fun x1572 () Bool)
(declare-fun x1101 () Int)
(declare-fun x1124 () Int)
(declare-fun x1377 () Bool)
(declare-fun x904 () Int)
(declare-fun x1161 () Int)
(declare-fun x823 () Bool)
(declare-fun x940 () Int)
(declare-fun x240 () Bool)
(declare-fun x325 () Int)
(declare-fun x1003 () Int)
(declare-fun x719 () Bool)
(declare-fun x886 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x446 () Bool)
(declare-fun x607 () Bool)
(declare-fun x1367 () Int)
(declare-fun x492 () Bool)
(declare-fun x1075 () Int)
(declare-fun x35 () Int)
(declare-fun x1212 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x524 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x536 () Int)
(declare-fun x7 () Bool)
(declare-fun x321 () Int)
(declare-fun x1023 () Bool)
(declare-fun x373 () Int)
(declare-fun x978 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x1673 () Int)
(declare-fun x534 () Bool)
(declare-fun x17 () Int)
(declare-fun x3 () Int)
(declare-fun x1622 () Int)
(declare-fun x160 () Bool)
(declare-fun x440 () Int)
(declare-fun x655 () Int)
(declare-fun x424 () Bool)
(declare-fun x833 () Bool)
(declare-fun x208 () Bool)
(declare-fun x1324 (Int) Int)
(declare-fun x1210 () Int)
(declare-fun x1514 () Int)
(declare-fun x1204 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1044 () Bool)
(declare-fun x606 () Int)
(declare-fun x576 () Bool)
(declare-fun x152 () Int)
(declare-fun x761 () Int)
(declare-fun x52 () Int)
(declare-fun x844 () Int)
(declare-fun x735 () Int)
(declare-fun x441 () Int)
(declare-fun x670 () Int)
(declare-fun x792 () Int)
(declare-fun x684 () Int)
(declare-fun x1539 () Bool)
(declare-fun x922 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x1128 () Int)
(declare-fun x1445 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x1029 () Int)
(declare-fun x893 () Int)
(declare-fun x1401 () Int)
(declare-fun x158 () Int)
(declare-fun x933 () Int)
(declare-fun x453 () Int)
(declare-fun x11 () Int)
(declare-fun x521 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x677 (Int) Int)
(declare-fun x182 () Int)
(declare-fun x297 () Int)
(declare-fun x1598 () Bool)
(declare-fun x301 () Int)
(declare-fun x1333 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x671 () Bool)
(declare-fun x798 () Int)
(declare-fun x934 () Int)
(declare-fun x1314 () Int)
(declare-fun x476 () Bool)
(declare-fun x354 () Int)
(declare-fun x880 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1305 () Int)
(declare-fun x223 () Bool)
(declare-fun x703 () Bool)
(declare-fun x82 () Int)
(declare-fun x132 () Bool)
(declare-fun x932 () Bool)
(declare-fun x528 () Bool)
(declare-fun x457 () Int)
(declare-fun x42 () Int)
(declare-fun x1225 () Int)
(declare-fun x975 () Int)
(declare-fun x1570 () Int)
(declare-fun x448 () Bool)
(declare-fun x1669 () Int)
(declare-fun x1594 () Bool)
(declare-fun x56 () Int)
(declare-fun x769 () Int)
(declare-fun x928 () Int)
(declare-fun x1224 () Int)
(declare-fun x1676 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x124 () Int)
(declare-fun x199 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x771 () Int)
(declare-fun x264 () Bool)
(declare-fun x404 () Int)
(declare-fun x804 () Int)
(declare-fun x1074 (Int) Int)
(declare-fun x818 (Int Int) Int)
(declare-fun x1462 () Int)
(declare-fun x465 () Bool)
(declare-fun x512 () Bool)
(declare-fun x679 () Int)
(declare-fun x912 (Int) Int)
(declare-fun x357 () Bool)
(declare-fun x726 () Int)
(declare-fun x730 () Bool)
(declare-fun x172 () Bool)
(declare-fun x612 () Int)
(declare-fun x33 () Bool)
(declare-fun x164 () Int)
(declare-fun x1365 () Bool)
(declare-fun x1405 () Int)
(declare-fun x860 () Bool)
(declare-fun x222 () Int)
(declare-fun x720 () Int)
(declare-fun x388 () Bool)
(declare-fun x666 () Bool)
(declare-fun x1475 () Int)
(declare-fun x811 () Int)
(declare-fun x1020 () Bool)
(declare-fun x320 () Bool)
(declare-fun x79 () Int)
(declare-fun x1665 () Bool)
(declare-fun x499 () Int)
(declare-fun x1511 () Int)
(declare-fun x384 () Int)
(declare-fun x387 () Bool)
(declare-fun x211 () Int)
(declare-fun x817 () Bool)
(declare-fun x114 () Bool)
(declare-fun x665 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1198 () Int)
(declare-fun x1089 () Int)
(declare-fun x1261 () Int)
(declare-fun x885 () Int)
(declare-fun x431 () Bool)
(declare-fun x888 () Int)
(declare-fun x567 () Bool)
(declare-fun x1337 () Int)
(declare-fun x756 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1532 () Int)
(declare-fun x513 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1437 () Int)
(declare-fun x1136 () Bool)
(declare-fun x883 () Int)
(declare-fun x603 () Int)
(declare-fun x494 () Bool)
(declare-fun x410 () Int)
(declare-fun x959 () Int)
(declare-fun x188 () Bool)
(declare-fun x449 () Int)
(declare-fun x748 () Int)
(declare-fun x335 (Int Int Int) Int)
(declare-fun x698 () Int)
(declare-fun x1646 () Int)
(declare-fun x662 () Bool)
(declare-fun x433 () Bool)
(declare-fun x1523 () Int)
(declare-fun x877 () Int)
(declare-fun x714 () Bool)
(declare-fun x40 () Int)
(declare-fun x763 () Int)
(declare-fun x1035 () Int)
(declare-fun x551 () Bool)
(declare-fun x661 () Bool)
(declare-fun x1127 () Int)
(declare-fun x688 () Int)
(declare-fun x1163 () Bool)
(declare-fun x1303 () Int)
(declare-fun x89 () Bool)
(declare-fun x604 () Bool)
(declare-fun x945 () Bool)
(declare-fun x664 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1438 () Int)
(declare-fun x1460 () Bool)
(declare-fun x88 () Bool)
(declare-fun x1292 () Int)
(declare-fun x972 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x359 () Int)
(declare-fun x988 () Int)
(declare-fun x832 () Bool)
(declare-fun x981 () Int)
(declare-fun x1488 () Int)
(declare-fun x1058 () Int)
(declare-fun x390 () Bool)
(declare-fun x1173 () Int)
(declare-fun x331 () Int)
(declare-fun x1459 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x617 () Bool)
(declare-fun x187 () Int)
(declare-fun x1274 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x302 () Int)
(declare-fun x1148 () Int)
(declare-fun x631 () Int)
(declare-fun x948 () Int)
(declare-fun x36 () Int)
(declare-fun x1053 () Int)
(declare-fun x192 () Bool)
(declare-fun x954 () Bool)
(declare-fun x376 () Bool)
(declare-fun x23 () Int)
(declare-fun x1079 () Int)
(declare-fun x1176 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x282 (Int Int) Int)
(declare-fun x462 () Bool)
(declare-fun x319 () Bool)
(declare-fun x113 () Bool)
(declare-fun x909 () Bool)
(declare-fun x571 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x509 () Bool)
(declare-fun x98 () Int)
(declare-fun x1252 () Int)
(declare-fun x742 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1036 () Bool)
(declare-fun x336 () Bool)
(declare-fun x738 (Int) Int)
(declare-fun x906 () Int)
(declare-fun x1220 () Int)
(declare-fun x94 () Int)
(declare-fun x443 () Int)
(declare-fun x1135 () Bool)
(declare-fun x1072 () Int)
(declare-fun x1450 () Int)
(declare-fun x69 () Int)
(declare-fun x1100 () Bool)
(declare-fun x291 () Bool)
(declare-fun x1543 () Int)
(declare-fun x639 () Int)
(declare-fun x455 () Int)
(declare-fun x1084 () Int)
(declare-fun x1499 () Int)
(declare-fun x1390 () Int)
(declare-fun x1527 () Bool)
(declare-fun x760 () Bool)
(declare-fun x84 () Int)
(declare-fun x965 () Bool)
(declare-fun x537 () Bool)
(declare-fun x667 () Int)
(declare-fun x1409 () Int)
(declare-fun x421 () Int)
(declare-fun x281 () Int)
(declare-fun x1600 () Int)
(declare-fun x260 () Int)
(declare-fun x1227 () Int)
(declare-fun x28 () Int)
(declare-fun x399 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1175 () Int)
(declare-fun x789 () Bool)
(declare-fun x64 () Bool)
(declare-fun x1536 () Int)
(declare-fun x503 () Int)
(declare-fun x1569 () Int)
(declare-fun x1642 () Bool)
(declare-fun x271 () Int)
(declare-fun x1231 () Int)
(declare-fun x1151 () Int)
(declare-fun x1134 () Int)
(declare-fun x668 () Int)
(declare-fun x814 () Bool)
(declare-fun x1565 () Int)
(declare-fun x1052 () Int)
(declare-fun x1506 () Int)
(declare-fun x1583 () Int)
(declare-fun x285 () Int)
(declare-fun x337 () Bool)
(declare-fun x159 () Int)
(declare-fun x51 () Int)
(declare-fun x1123 () Int)
(declare-fun x1375 () Int)
(declare-fun x1564 () Int)
(declare-fun x12 () Int)
(declare-fun x350 () Bool)
(declare-fun x1524 () Int)
(declare-fun x596 () Int)
(declare-fun x1655 () Int)
(declare-fun x1307 () Int)
(declare-fun x1286 () Int)
(declare-fun x637 () Int)
(declare-fun x1106 () Bool)
(declare-fun x1599 () Int)
(declare-fun x1076 () Bool)
(declare-fun x1649 () Int)
(declare-fun x715 () Int)
(declare-fun x414 () Int)
(declare-fun x745 () Int)
(declare-fun x747 () Bool)
(declare-fun x580 () Bool)
(declare-fun x409 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1379 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x656 () Bool)
(declare-fun x1659 () Int)
(declare-fun x464 () Int)
(declare-fun x1147 () Int)
(declare-fun x382 () Bool)
(declare-fun x405 () Int)
(declare-fun x621 () Int)
(declare-fun x1077 () Int)
(declare-fun x739 () Bool)
(declare-fun x1535 () Int)
(declare-fun x701 () Bool)
(declare-fun x72 (Int) Int)
(declare-fun x1597 () Bool)
(declare-fun x889 () Int)
(declare-fun x422 () Int)
(declare-fun x1389 () Int)
(declare-fun x930 () Int)
(declare-fun x1021 () Bool)
(declare-fun x217 () Bool)
(declare-fun x38 () Int)
(declare-fun x633 () Int)
(declare-fun x106 () Int)
(declare-fun x770 () Int)
(declare-fun x308 () Int)
(declare-fun x1245 () Int)
(declare-fun x1177 () Bool)
(declare-fun x1493 () Int)
(declare-fun x176 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1250 () Int)
(declare-fun x313 () Bool)
(declare-fun x236 (Int) Int)
(declare-fun x289 () Int)
(declare-fun x216 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1378 () Int)
(declare-fun x197 () Int)
(declare-fun x434 () Int)
(declare-fun x1556 () Int)
(declare-fun x226 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x155 () Int)
(declare-fun x26 () Int)
(declare-fun x104 () Bool)
(declare-fun x207 () Int)
(declare-fun x416 () Bool)
(declare-fun x728 () Bool)
(declare-fun x1140 () Int)
(declare-fun x1631 () Bool)
(declare-fun x866 () Bool)
(declare-fun x1419 () Int)
(declare-fun x694 () Int)
(declare-fun x861 () Bool)
(declare-fun x1118 () Int)
(declare-fun x781 () Int)
(declare-fun x118 () Int)
(declare-fun x669 () Bool)
(declare-fun x403 () Int)
(declare-fun x62 () Int)
(declare-fun x1496 () Bool)
(declare-fun x246 () Int)
(declare-fun x117 () Bool)
(declare-fun x55 () Bool)
(declare-fun x1165 () Int)
(declare-fun x141 () Int)
(declare-fun x1601 () Bool)
(declare-fun x1662 (Int) Int)
(declare-fun x175 () Int)
(declare-fun x247 () Bool)
(declare-fun x383 () Int)
(declare-fun x939 () Int)
(declare-fun x1146 () Int)
(declare-fun x1334 (Int) Int)
(declare-fun x685 () Int)
(declare-fun x1497 () Bool)
(declare-fun x977 () Int)
(declare-fun x856 () Int)
(declare-fun x249 () Int)
(declare-fun x951 () Int)
(declare-fun x923 () Int)
(declare-fun x897 () Bool)
(declare-fun x623 () Bool)
(declare-fun x572 () Int)
(declare-fun x1656 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x764 () Int)
(declare-fun x1067 () Int)
(declare-fun x632 () Int)
(declare-fun x1353 () Int)
(declare-fun x385 () Int)
(declare-fun x100 () Bool)
(declare-fun x522 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x674 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x1318 () Int)
(declare-fun x437 () Bool)
(declare-fun x983 () Bool)
(declare-fun x205 () Int)
(declare-fun x495 () Int)
(declare-fun x1317 () Int)
(declare-fun x1229 () Int)
(declare-fun x60 () Int)
(declare-fun x971 (Int Int) Int)
(declare-fun x1507 () Int)
(declare-fun x693 () Int)
(declare-fun x1214 () Int)
(declare-fun x952 () Bool)
(declare-fun x430 () Int)
(declare-fun x894 () Bool)
(declare-fun x224 () Int)
(declare-fun x920 () Int)
(declare-fun x191 () Bool)
(declare-fun x1568 () Int)
(declare-fun x398 () Bool)
(declare-fun x1503 () Int)
(declare-fun x872 () Int)
(declare-fun x566 () Int)
(declare-fun x1000 () Int)
(declare-fun x697 () Bool)
(declare-fun x201 () Bool)
(declare-fun x758 () Int)
(declare-fun x1158 () Int)
(declare-fun x1352 () Int)
(declare-fun x587 () Int)
(declare-fun x681 () Int)
(declare-fun x1555 () Bool)
(declare-fun x806 () Bool)
(declare-fun x364 () Int)
(declare-fun x1508 () Int)
(declare-fun x1545 () Int)
(declare-fun x41 () Int)
(declare-fun x1306 () Int)
(declare-fun x1357 () Int)
(declare-fun x127 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x231 () Bool)
(declare-fun x1590 () Int)
(declare-fun x92 () Bool)
(declare-fun x1448 () Int)
(declare-fun x705 () Bool)
(declare-fun x702 () Int)
(declare-fun x1330 () Int)
(declare-fun x1315 () Int)
(declare-fun x704 () Int)
(declare-fun x863 () Int)
(declare-fun x1240 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1529 () Int)
(declare-fun x1372 () Bool)
(declare-fun x795 () Int)
(declare-fun x1537 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1246 () Int)
(declare-fun x347 () Int)
(declare-fun x1557 () Int)
(declare-fun x1110 () Bool)
(declare-fun x608 () Int)
(declare-fun x344 () Int)
(declare-fun x1602 (Int) Int)
(declare-fun x597 () Int)
(declare-fun x34 () Int)
(declare-fun x360 (Int) Int)
(declare-fun x1432 () Bool)
(declare-fun x985 () Bool)
(declare-fun x261 () Int)
(declare-fun x500 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x300 () Bool)
(declare-fun x333 () Int)
(declare-fun x139 () Bool)
(declare-fun x480 () Int)
(declare-fun x695 () Bool)
(declare-fun x563 () Int)
(declare-fun x1679 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1064 () Int)
(declare-fun x1643 () Bool)
(declare-fun x691 () Int)
(declare-fun x332 () Int)
(declare-fun x1262 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x504 () Int)
(declare-fun x1041 () Bool)
(declare-fun x486 () Int)
(declare-fun x1093 () Int)
(declare-fun x929 () Bool)
(declare-fun x1200 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x298 () Int)
(declare-fun x31 () Bool)
(declare-fun x57 () Int)
(declare-fun x1636 () Int)
(declare-fun x538 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x1370 () Int)
(declare-fun x575 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x960 () Int)
(declare-fun x417 () Int)
(declare-fun x13 () Bool)
(declare-fun x363 () Int)
(declare-fun x585 () Int)
(declare-fun x1164 () Int)
(declare-fun x353 () Int)
(declare-fun x1319 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x737 () Int)
(declare-fun x1469 () Int)
(declare-fun x165 () Bool)
(declare-fun x1510 () Int)
(declare-fun x394 () Bool)
(declare-fun x643 () Bool)
(declare-fun x174 (Int) Int)
(declare-fun x1120 () Int)
(declare-fun x848 () Bool)
(declare-fun x506 () Int)
(declare-fun x1336 () Bool)
(declare-fun x921 () Int)
(declare-fun x1056 () Int)
(declare-fun x221 () Bool)
(declare-fun x375 () Int)
(declare-fun x1203 () Int)
(declare-fun x1672 () Bool)
(declare-fun x991 (Int) Int)
(declare-fun x487 () Int)
(declare-fun x206 () Bool)
(declare-fun x213 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x625 () Int)
(declare-fun x1323 () Bool)
(declare-fun x228 () Int)
(declare-fun x546 () Bool)
(declare-fun x1014 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1007 () Bool)
(declare-fun x530 () Bool)
(declare-fun x46 () Int)
(declare-fun x1381 () Bool)
(declare-fun x485 () Int)
(declare-fun x408 () Int)
(declare-fun x510 () Bool)
(declare-fun x696 () Int)
(declare-fun x149 () Int)
(declare-fun x1554 () Bool)
(declare-fun x627 () Bool)
(declare-fun x569 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x415 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x255 () Int)
(declare-fun x1494 () Bool)
(declare-fun x526 () Bool)
(declare-fun x1660 () Int)
(declare-fun x813 () Int)
(declare-fun x1226 () Int)
(declare-fun x620 () Int)
(declare-fun x618 () Bool)
(declare-fun x970 () Bool)
(declare-fun x392 () Int)
(declare-fun x6 () Int)
(declare-fun x81 () Int)
(declare-fun x821 () Int)
(declare-fun x276 () Int)
(declare-fun x1658 () Int)
(declare-fun x156 () Bool)
(declare-fun x1561 () Int)
(declare-fun x1388 () Bool)
(declare-fun x796 () Int)
(declare-fun x629 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1607 () Int)
(declare-fun x248 () Int)
(declare-fun x131 () Bool)
(declare-fun x1398 () Int)
(declare-fun x969 () Bool)
(declare-fun x1354 () Int)
(declare-fun x611 () Int)
(declare-fun x1517 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x1492 () Int)
(declare-fun x436 () Bool)
(declare-fun x454 () Int)
(declare-fun x193 () Int)
(declare-fun x875 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x1059 () Int)
(declare-fun x672 () Bool)
(declare-fun x1105 () Int)
(declare-fun x230 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1504 () Int)
(declare-fun x553 () Int)
(declare-fun x1008 () Int)
(declare-fun x1222 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x1474 () Int)
(declare-fun x1335 () Int)
(declare-fun x1431 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x67 () Int)
(declare-fun x411 () Int)
(declare-fun x1042 () Int)
(declare-fun x1153 () Int)
(declare-fun x435 () Int)
(declare-fun x1386 () Bool)
(declare-fun x151 () Int)
(declare-fun x133 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x992 () Int)
(declare-fun x942 () Bool)
(declare-fun x558 () Bool)
(declare-fun x540 () Int)
(declare-fun x351 () Bool)
(declare-fun x957 () Bool)
(declare-fun x413 () Bool)
(declare-fun x640 () Int)
(declare-fun x1435 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x173 () Int)
(declare-fun x777 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1356 () Int)
(declare-fun x245 () Int)
(declare-fun x1484 () Bool)
(declare-fun x467 () Bool)
(declare-fun x99 (Int) Int)
(declare-fun x119 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x195 () Int)
(declare-fun x287 () Int)
(declare-fun x683 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1215 () Bool)
(declare-fun x543 () Int)
(declare-fun x266 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x842 () Int)
(declare-fun x680 () Int)
(declare-fun x790 () Bool)
(declare-fun x29 () Bool)
(declare-fun x1051 () Int)
(declare-fun x1664 () Bool)
(declare-fun x1525 () Int)
(declare-fun x1541 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x1624 () Int)
(declare-fun x1197 () Int)
(declare-fun x80 () Int)
(declare-fun x1038 () Bool)
(declare-fun x73 () Bool)
(declare-fun x810 () Bool)
(declare-fun x116 () Bool)
(declare-fun x601 () Int)
(declare-fun x163 () Int)
(declare-fun x1593 () Int)
(declare-fun x1441 () Int)
(declare-fun x469 () Bool)
(declare-fun x910 () Int)
(declare-fun x840 () Int)
(declare-fun x1055 () Int)
(declare-fun x1248 () Int)
(declare-fun x1612 () Bool)
(declare-fun x97 () Int)
(declare-fun x112 () Bool)
(declare-fun x419 () Int)
(declare-fun x626 () Int)
(declare-fun x326 () Bool)
(declare-fun x1608 () Int)
(declare-fun x418 () Int)
(declare-fun x1171 () Bool)
(declare-fun x143 () Int)
(declare-fun x1505 () Int)
(declare-fun x456 () Int)
(declare-fun x294 () Bool)
(declare-fun x209 () Int)
(declare-fun x1287 () Bool)
(declare-fun x858 () Bool)
(declare-fun x324 () Int)
(declare-fun x126 () Int)
(declare-fun x1355 () Int)
(declare-fun x1187 () Bool)
(declare-fun x734 () Bool)
(declare-fun x1533 () Int)
(declare-fun x488 () Int)
(declare-fun x533 () Bool)
(declare-fun x936 () Int)
(declare-fun x58 () Int)
(declare-fun x581 () Bool)
(declare-fun x250 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x315 () Bool)
(declare-fun x479 () Bool)
(declare-fun x1617 () Int)
(declare-fun x227 () Bool)
(declare-fun x746 () Int)
(declare-fun x1094 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1139 () Bool)
(declare-fun x39 () Bool)
(declare-fun x1005 () Int)
(declare-fun x879 () Int)
(declare-fun x555 () Int)
(declare-fun x1399 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x539 () Int)
(declare-fun x1619 () Bool)
(declare-fun x706 () Int)
(declare-fun x946 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x393 () Int)
(declare-fun x292 () Int)
(declare-fun x1010 () Bool)
(declare-fun x884 () Bool)
(declare-fun x254 () Int)
(declare-fun x803 () Int)
(declare-fun x451 () Int)
(declare-fun x54 () Int)
(declare-fun x1297 () Bool)
(declare-fun x535 () Bool)
(declare-fun x864 () Bool)
(declare-fun x1040 () Int)
(declare-fun x895 () Int)
(declare-fun x130 () Int)
(declare-fun x560 () Int)
(declare-fun x732 () Int)
(declare-fun x549 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x327 () Int)
(declare-fun x1208 () Int)
(declare-fun x219 () Int)
(declare-fun x1022 () Int)
(declare-fun x1018 () Int)
(declare-fun x1207 () Int)
(declare-fun x306 () Int)
(declare-fun x649 () Int)
(declare-fun x1470 () Int)
(declare-fun x377 () Int)
(declare-fun x689 () Int)
(declare-fun x128 () Bool)
(declare-fun x1247 (Int) Int)
(declare-fun x1332 (Int) Int)
(declare-fun x622 () Int)
(declare-fun x429 () Int)
(declare-fun x1414 () Int)
(declare-fun x1321 () Int)
(declare-fun x1277 () Bool)
(declare-fun x556 () Int)
(declare-fun x65 () Int)
(declare-fun x925 () Bool)
(declare-fun x229 () Bool)
(declare-fun x647 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1152 () Int)
(declare-fun x837 () Int)
(declare-fun x148 () Int)
(declare-fun x311 () Bool)
(declare-fun x323 () Int)
(declare-fun x314 () Int)
(declare-fun x918 () Int)
(declare-fun x1154 () Int)
(declare-fun x1276 () Int)
(declare-fun x1542 () Int)
(declare-fun x636 () Int)
(declare-fun x961 () Bool)
(declare-fun x123 () Int)
(declare-fun x1472 () Int)
(declare-fun x447 () Int)
(declare-fun x1116 () Bool)
(declare-fun x1444 () Int)
(declare-fun x1571 (Int) Int)
(declare-fun x807 () Int)
(declare-fun x428 () Int)
(declare-fun x309 () Int)
(declare-fun x444 () Bool)
(declare-fun x755 () Int)
(declare-fun x1439 () Bool)
(declare-fun x147 () Int)
(declare-fun x776 () Bool)
(declare-fun x1653 () Int)
(declare-fun x958 () Int)
(declare-fun x77 () Int)
(declare-fun x1121 () Bool)
(declare-fun x234 () Bool)
(declare-fun x1221 () Int)
(declare-fun x1108 () Int)
(declare-fun x214 () Int)
(declare-fun x915 () Bool)
(declare-fun x1030 (Int) Int)
(declare-fun x964 () Int)
(declare-fun x827 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x950 () Int)
(declare-fun x1580 () Bool)
(declare-fun x310 () Int)
(declare-fun x630 () Int)
(declare-fun x1271 () Int)
(declare-fun x741 () Int)
(declare-fun x947 () Bool)
(declare-fun x1061 () Int)
(declare-fun x733 () Int)
(declare-fun x1540 () Int)
(declare-fun x1091 () Bool)
(declare-fun x355 () Int)
(declare-fun x709 () Int)
(declare-fun x1278 () Int)
(declare-fun x767 () Int)
(declare-fun x1068 () Int)
(declare-fun x514 () Bool)
(declare-fun x845 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1657 () Int)
(declare-fun x19 () Bool)
(declare-fun x50 () Int)
(declare-fun x651 () Int)
(declare-fun x1553 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x799 () Int)
(declare-fun x1415 () Int)
(declare-fun x690 () Bool)
(declare-fun x751 () Bool)
(declare-fun x1393 () Int)
(declare-fun x1078 () Int)
(declare-fun x1206 () Int)
(declare-fun x144 () Int)
(declare-fun x1626 () Int)
(declare-fun x805 () Int)
(declare-fun x1485 () Bool)
(declare-fun x616 () Int)
(declare-fun x519 () Int)
(declare-fun x1293 () Int)
(declare-fun x913 () Int)
(declare-fun x496 () Int)
(declare-fun x1083 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x108 () Int)
(declare-fun x10 () Int)
(declare-fun x815 () Int)
(declare-fun x1211 () Int)
(declare-fun x852 () Bool)
(declare-fun x1063 () Int)
(declare-fun x545 () Int)
(declare-fun x1675 () Int)
(declare-fun x477 () Int)
(declare-fun x749 (Int) Int)
(declare-fun x850 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x338 () Int)
(declare-fun x68 () Int)
(declare-fun x744 () Bool)
(declare-fun x372 () Int)
(declare-fun x342 () Bool)
(declare-fun x557 () Bool)
(declare-fun x908 () Int)
(declare-fun x568 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x944 () Int)
(declare-fun x95 () Int)
(declare-fun x1329 () Bool)
(declare-fun x1141 () Int)
(declare-fun x900 () Int)
(declare-fun x855 () Int)
(declare-fun x1627 (Int) Int)
(declare-fun x1552 () Bool)
(declare-fun x83 () Bool)
(declare-fun x916 () Int)
(declare-fun x1453 () Bool)
(declare-fun x768 () Bool)
(declare-fun x179 () Int)
(declare-fun x967 () Bool)
(declare-fun x699 () Int)
(declare-fun x830 (Int) Int)
(declare-fun x1243 () Int)
(declare-fun x334 () Int)
(declare-fun x272 () Int)
(declare-fun x186 () Int)
(declare-fun x589 () Int)
(declare-fun x239 () Bool)
(declare-fun x507 () Int)
(declare-fun x1192 () Int)
(declare-fun x1238 () Int)
(declare-fun x1236 () Int)
(declare-fun x1629 () Bool)
(declare-fun x718 () Bool)
(declare-fun x1188 () Int)
(declare-fun x794 () Bool)
(declare-fun x780 () Bool)
(declare-fun x579 () Int)
(declare-fun x129 () Int)
(declare-fun x692 () Int)
(declare-fun x891 () Int)
(declare-fun x1253 () Int)
(declare-fun x44 () Bool)
(declare-fun x478 () Bool)
(declare-fun x483 () Int)
(declare-fun x998 () Bool)
(declare-fun x340 () Int)
(declare-fun x892 () Int)
(declare-fun x523 () Int)
(declare-fun x582 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x1254 () Int)
(declare-fun x171 () Int)
(declare-fun x882 () Int)
(declare-fun x200 () Int)
(declare-fun x1394 (Int) Int)
(declare-fun x593 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x253 () Int)
(declare-fun x1338 () Bool)
(declare-fun x762 () Int)
(declare-fun x1578 () Int)
(declare-fun x1667 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x1310 () Int)
(declare-fun x196 () Bool)
(declare-fun x368 () Int)
(declare-fun x723 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1102 () Int)
(declare-fun x548 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x1086 () Int)
(declare-fun x142 () Int)
(declare-fun x1213 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x843 () Int)
(declare-fun x125 () Int)
(declare-fun x267 () Int)
(declare-fun x783 () Int)
(declare-fun x592 () Int)
(declare-fun x943 () Bool)
(declare-fun x78 () Int)
(declare-fun x1032 () Int)
(declare-fun x984 () Int)
(declare-fun x898 () Int)
(declare-fun x471 () Bool)
(declare-fun x1680 () Int)
(declare-fun x1632 () Bool)
(declare-fun x1111 () Int)
(declare-fun x463 () Bool)
(declare-fun x307 () Int)
(declare-fun x1427 () Bool)
(declare-fun x876 () Int)
(declare-fun x295 (Int) Int)
(declare-fun x979 () Int)
(declare-fun x396 () Int)
(declare-fun x1126 () Int)
(declare-fun x1011 () Int)
(declare-fun x1519 () Int)
(declare-fun x1189 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x1589 () Int)
(declare-fun x542 () Int)
(declare-fun x819 () Int)
(declare-fun x1185 () Int)
(declare-fun x366 () Bool)
(declare-fun x1513 () Int)
(declare-fun x358 () Int)
(declare-fun x140 () Bool)
(declare-fun x731 () Bool)
(declare-fun x590 () Int)
(declare-fun x949 () Bool)
(declare-fun x493 () Int)
(declare-fun x663 () Bool)
(declare-fun x391 () Int)
(declare-fun x484 () Int)
(declare-fun x304 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x941 (Int) Int)
(declare-fun x890 () Int)
(declare-fun x878 () Int)
(declare-fun x244 () Int)
(declare-fun x1465 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x286 () Bool)
(declare-fun x778 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x103 () Int)
(declare-fun x1406 () Int)
(declare-fun x727 () Int)
(declare-fun x1237 () Bool)
(declare-fun x791 () Int)
(declare-fun x835 () Bool)
(declare-fun x838 () Int)
(declare-fun x869 () Int)
(declare-fun x765 () Int)
(declare-fun x562 () Int)
(declare-fun x275 () Bool)
(declare-fun x102 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x491 () Int)
(declare-fun x839 () Bool)
(declare-fun x66 () Bool)
(declare-fun x407 () Bool)
(declare-fun x870 () Int)
(declare-fun x1037 () Bool)
(declare-fun x953 () Int)
(declare-fun x1373 () Int)
(declare-fun x565 () Int)
(define-fun x303 ((x270 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270) (>= x270 0)) x270 (- x270 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x564 ((x270 Int)) Int (ite (and (< x270 0) (>= x270 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x270 115792089237316195423570985008687907853269984665640564039457584007913129639936) x270))
(define-fun x1611 ((x270 Int)) Int (ite (and (>= x270 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270)) x270 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x270) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x270)) (- x270 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x270 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x270 0)) (+ x270 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1486 x270 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x183 ((x1284 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1284) (<= 0 x1284)))
(define-fun x1232 ((x1284 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1284) (>= x1284 0)))
(define-fun x169 ((x1284 Int)) Bool (and (<= x1284 20282409603651670423947251286015) (<= 0 x1284)))
(define-fun x362 ((x1284 Int)) Bool (and (= x1284 (x282 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1284)) (= (x282 x1284 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1284)))
(define-fun x466 ((x1284 Int)) Bool (and (= 0 (x282 x1284 0)) (= 0 (x282 0 x1284))))
(define-fun x595 ((x1284 Int)) Bool (= (x282 x1284 x1284) x1284))
(define-fun x816 ((x1284 Int)) Bool (and (x362 x1284) (x466 x1284) (x595 x1284)))
(define-fun x59 ((x1284 Int) (x1143 Int)) Bool (= (x282 x1143 x1284) (x282 x1284 x1143)))
(define-fun x1025 ((x1284 Int) (x1143 Int)) Bool (and (=> (>= x1284 0) (>= x1284 (x282 x1284 x1143))) (=> (<= 0 x1143) (>= x1143 (x282 x1284 x1143))) (>= (x282 x1284 x1143) 0)))
(define-fun x9 ((x1284 Int) (x1143 Int)) Bool (and (x59 x1284 x1143) (x1025 x1284 x1143)))
(define-fun x1341 ((x1284 Int)) Bool (= (x1486 x1284 2) (x282 x1284 1)))
(define-fun x1054 ((x1284 Int)) Bool (and (x1341 x1284) (x9 x1284 1)))
(define-fun x37 ((x1284 Int) (x1143 Int)) Bool (and (> x1143 (x1486 x1284 x1143)) (>= (x1486 x1284 x1143) 0)))
(define-fun x996 ((x1284 Int) (x1143 Int)) Bool (=> (and (< 0 x1143) (>= x1284 0)) (= (> x1143 x1284) (= x1284 (x1486 x1284 x1143)))))
(define-fun x1209 ((x1284 Int) (x1143 Int)) Bool (=> (and (< 0 x1143) (and (> (+ x1143 x1143) x1284) (>= x1284 x1143))) (= (- x1284 x1143) (x1486 x1284 x1143))))
(define-fun x263 ((x1284 Int) (x1143 Int)) Bool (=> (< 0 x1143) (= (+ (* (x818 x1284 x1143) x1143) (x1486 x1284 x1143)) x1284)))
(define-fun x836 ((x1284 Int) (x1143 Int)) Bool (and (x1209 x1284 x1143) (x996 x1284 x1143) (x263 x1284 x1143) (x37 x1284 x1143)))
(define-fun x146 ((x1284 Int)) Bool (= 0 (x1486 0 x1284)))
(define-fun x1325 ((x1284 Int)) Bool (= 0 (x1486 x1284 1)))
(define-fun x1034 ((x1284 Int)) Bool (= (x1486 x1284 x1284) 0))
(define-fun x346 ((x1284 Int)) Bool (and (x1325 x1284) (x146 x1284) (x1034 x1284)))
(define-fun x1339 ((x1284 Int)) Bool (and (>= x1284 0) (>= 105312291668557186697918027683670432318895095400549111254310977535 x1284)))
(define-fun x1481 ((x1284 Int)) Bool (and (<= 0 x1284) (>= 1461501637330902918203684832716283019655932542975 x1284)))
(define-fun x1490 ((x1284 Int)) Bool (and (>= x1284 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1284)))
(define-fun x71 ((x1284 Int) (x1143 Int)) Bool (=> (and (> x1143 0) (> x1284 0)) (and (<= (x818 x1284 x1143) x1284) (>= (x818 x1284 x1143) 0))))
(define-fun x1574 ((x1284 Int) (x1143 Int)) Bool (=> (and (and (<= 0 x1284) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1284)) (and (< x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1143 1))) (and (< (x818 x1284 x1143) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= (x818 x1284 x1143) 0))))
(define-fun x284 ((x1284 Int) (x1143 Int)) Bool (=> (and (< 1 x1143) (> x1284 x1143)) (< (x818 x1284 x1143) x1284)))
(define-fun x1294 ((x1284 Int) (x1143 Int)) Bool (=> (and (< 0 x1143) (> x1284 0)) (= (< x1284 x1143) (= (x818 x1284 x1143) 0))))
(define-fun x1256 ((x1284 Int) (x1143 Int)) Bool (=> (and (> x1143 0) (> x1284 0)) (and (< (- x1284 x1143) (* (x818 x1284 x1143) x1143)) (<= (* (x818 x1284 x1143) x1143) x1284))))
(define-fun x341 ((x1284 Int) (x1143 Int)) Bool (and (x71 x1284 x1143) (x1294 x1284 x1143) (x1256 x1284 x1143) (x284 x1284 x1143) (x1574 x1284 x1143)))
(define-fun x1167 ((x1284 Int)) Bool (= (x818 0 x1284) 0))
(define-fun x700 ((x1284 Int)) Bool (= x1284 (x818 x1284 1)))
(define-fun x268 ((x1284 Int)) Bool (=> (not (= x1284 0)) (= (x818 x1284 x1284) 1)))
(define-fun x787 ((x1284 Int)) Bool (and (x268 x1284) (x1167 x1284) (x700 x1284)))
(define-fun x854 ((x1284 Int) (x1143 Int)) Bool (= (* x1284 x1143) (x401 x1284 x1143)))
(define-fun x1518 ((x1284 Int) (x1143 Int)) Bool (and (= (x401 (- x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* x1284 (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x401 x1284 (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x1284 (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x401 (- x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1143) (- (* x1143 x1284) (* x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1273 ((x1284 Int) (x1143 Int)) Bool (=> (and (< 0 x1284) (< 0 x1143)) (= (< (x401 x1284 x1143) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1143 (x818 (x1611 (x401 x1284 x1143)) x1284)))))
(define-fun x194 ((x1284 Int) (x1143 Int)) Bool (=> (and (not (= x1143 0)) (not (= x1284 0))) (and (= x1143 (x818 (x401 x1284 x1143) x1284)) (= (x818 (x401 x1284 x1143) x1143) x1284))))
(define-fun x1119 ((x1284 Int) (x1143 Int)) Bool (=> (and (< 0 x1284) (< 0 x1143)) (= (< (x818 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1284) x1143) (> (x401 x1284 x1143) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1251 ((x1284 Int) (x1143 Int)) Bool (and (= (x1611 (x401 x1284 x1143)) (x1611 (x401 x1284 (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1611 (x401 (- x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1611 (x401 x1284 x1143))) (= (x1611 (x401 x1284 x1143)) (x1611 (x401 (- x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1143)))))
(define-fun x725 ((x1284 Int) (x1143 Int)) Bool (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1143) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1143)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1284) (> x1284 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143) (x818 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1284)) (>= (x401 x1284 (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (> x1143 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1143)) (and (> x1284 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1284))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x401 (- x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1143)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1284) (x818 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1143)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1143) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1143)) (and (<= x1284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1284))) (= (<= (x401 (- x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x818 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1284)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1143) (< 0 x1143)) (and (> x1284 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1284))) (= (<= x1284 (x818 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1143)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x401 x1284 x1143))))))
(define-fun x1097 ((x1284 Int) (x1143 Int)) Bool (and (x1518 x1284 x1143) (x1273 x1284 x1143) (x1119 x1284 x1143) (x194 x1284 x1143) (x725 x1284 x1143) (x854 x1284 x1143) (x1251 x1284 x1143)))
(define-fun x203 ((x1284 Int)) Bool (and (= 0 (x401 0 x1284)) (= (x401 x1284 0) 0)))
(define-fun x251 ((x1284 Int)) Bool (and (= x1284 (x401 x1284 1)) (= (x401 1 x1284) x1284)))
(define-fun x584 ((x1284 Int)) Bool (and (x251 x1284) (x203 x1284)))
(define-fun x53 ((x1284 Int) (x1143 Int)) Bool (= (x401 x1284 x1143) (x401 x1143 x1284)))
(define-fun x753 ((x1284 Int) (x1143 Int)) Bool (and (=> (and (< x1284 0) (> x1143 0)) (> 0 (x401 x1284 x1143))) (=> (and (> 0 x1143) (> x1284 0)) (< (x401 x1284 x1143) 0)) (=> (and (< 0 x1284) (< 0 x1143)) (> (x401 x1284 x1143) 0)) (=> (and (> 0 x1143) (> 0 x1284)) (< 0 (x401 x1284 x1143)))))
(define-fun x218 ((x1284 Int) (x1143 Int)) Bool (and (x753 x1284 x1143) (x725 x1284 x1143) (x1251 x1284 x1143) (x194 x1284 x1143) (x1119 x1284 x1143) (x1273 x1284 x1143) (x53 x1284 x1143)))
(define-fun x552 ((x1284 Int)) Bool (= (x1486 x1284 26959946667150639794667015087019630673637144422540572481103610249216) (x282 x1284 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1217 ((x1284 Int)) Bool (and (x9 x1284 26959946667150639794667015087019630673637144422540572481103610249215) (x552 x1284)))
(define-fun x1098 ((x1284 Int) (x1143 Int)) Bool (=> (and (< 0 x1284) (> x1143 0)) (and (>= x1284 (x401 (x818 x1284 x1143) x1143)) (> (x401 (x818 x1284 x1143) x1143) (- x1284 x1143)))))
(define-fun x1069 ((x1284 Int) (x1143 Int)) Bool (and (x284 x1284 x1143) (x71 x1284 x1143) (x1574 x1284 x1143) (x1098 x1284 x1143) (x1294 x1284 x1143)))
(define-fun x1652 ((x1284 Int)) Bool (= (x282 x1284 340282366920938463463374607431768211455) (x1486 x1284 340282366920938463463374607431768211456)))
(define-fun x1573 ((x1284 Int)) Bool (and (x9 x1284 340282366920938463463374607431768211455) (x1652 x1284)))
(define-fun x61 ((x1473 Int)) Int 0)
(define-fun x724 ((x1473 Int)) Int 0)
(define-fun x673 ((x1473 Int)) Int 0)
(define-fun x166 ((x1473 Int)) Int 0)
(define-fun x379 ((x1473 Int)) Int 0)
(define-fun x283 ((x1473 Int)) Int 0)
(define-fun x85 ((x1473 Int)) Int 0)
(define-fun x1360 ((x1473 Int)) Int 0)
(define-fun x460 ((x1473 Int)) Int 0)
(define-fun x1614 ((x1473 Int)) Int 0)
(define-fun x859 ((x1473 Int)) Int 0)
(define-fun x233 ((x1473 Int)) Int 0)
(define-fun x1495 ((x1473 Int)) Int 0)
(define-fun x1087 ((x1473 Int)) Int 0)
(define-fun x86 ((x1473 Int)) Int 0)
(define-fun x215 ((x1473 Int)) Int 0)
(define-fun x47 ((x1473 Int)) Int 0)
(define-fun x532 ((x1473 Int)) Int 0)
(define-fun x1547 ((x1473 Int)) Int 0)
(define-fun x1157 ((x1473 Int)) Int 0)
(define-fun x1230 ((x1473 Int)) Int 0)
(define-fun x774 ((x1473 Int)) Int 0)
(define-fun x90 ((x1473 Int)) Int 0)
(define-fun x1242 ((x1473 Int)) Int 0)
(define-fun x1634 ((x1473 Int)) Int 0)
(define-fun x711 ((x1473 Int)) Int 0)
(define-fun x873 ((x1473 Int)) Int 0)
(define-fun x974 ((x1473 Int)) Int 0)
(define-fun x1107 ((x1473 Int)) Int 0)
(define-fun x907 ((x1473 Int)) Int 0)
(define-fun x1244 ((x1473 Int)) Int 0)
(define-fun x371 ((x1473 Int)) Int 0)
(define-fun x1628 ((x1473 Int)) Int 0)
(define-fun x986 ((x1473 Int)) Int 0)
(define-fun x1400 ((x1473 Int)) Int 0)
(define-fun x785 ((x1473 Int)) Int (ite (= x1123 x1473) x678 (x912 x1473)))
(define-fun x505 ((x1473 Int)) Int (ite (= x1473 x896) x678 (x174 x1473)))
(define-fun x252 ((x1473 Int)) Int (ite (= x1473 x1276) x202 (x749 x1473)))
(define-fun x427 ((x1473 Int)) Int (ite (= x1276 x1473) x477 (x1383 x1473)))
(define-fun x1291 ((x1473 Int)) Int (ite (= x1473 x1276) x795 (x785 x1473)))
(define-fun x153 ((x1473 Int)) Int (ite (= x815 x1473) x795 (x505 x1473)))
(define-fun x1190 ((x1473 Int)) Int (ite x604 (x785 x1473) (ite x1485 (x785 x1473) (x1291 x1473))))
(define-fun x857 ((x1473 Int)) Int (ite x604 (x505 x1473) (ite x1485 (x505 x1473) (x153 x1473))))
(define-fun x750 ((x1473 Int)) Int (ite (= x1276 x1473) x811 (x252 x1473)))
(define-fun x1512 ((x1473 Int)) Int (ite x604 (x749 x1473) (ite x1485 (x749 x1473) (x750 x1473))))
(define-fun x1205 ((x1473 Int)) Int (ite (= x1473 x1276) x878 (x427 x1473)))
(define-fun x1551 ((x1473 Int)) Int (ite x604 (x1383 x1473) (ite x1485 (x1383 x1473) (x1205 x1473))))
(define-fun x1392 ((x1473 Int)) Int (ite (= x1473 x1276) x745 (x1298 x1473)))
(define-fun x501 ((x1473 Int)) Int (ite x604 (x1298 x1473) (ite x1485 (x1298 x1473) (x1392 x1473))))
(define-fun x1 ((x1473 Int)) Int (ite (= x1473 x815) x745 (x348 x1473)))
(define-fun x386 ((x1473 Int)) Int (ite x604 (x348 x1473) (ite x1485 (x348 x1473) (x1 x1473))))
(define-fun x1630 ((x1473 Int)) Int (ite (= x1473 x324) x1035 (x1512 x1473)))
(define-fun x635 ((x1473 Int)) Int (ite (= x1473 x324) x1424 (x1551 x1473)))
(define-fun x1028 ((x1473 Int)) Int (ite (= x324 x1473) x1349 (x1190 x1473)))
(define-fun x1402 ((x1473 Int)) Int (ite (= x1473 x1352) x1349 (x857 x1473)))
(define-fun x829 ((x1473 Int)) Int 0)
(define-fun x1407 ((x1473 Int)) Int 0)
(define-fun x544 ((x1473 Int)) Int (ite (< x1473 x1245) (x1454 x1473) 0))
(define-fun x1182 ((x1473 Int)) Int (ite (and (>= x1473 0) (> x1245 x1473)) (x830 x1473) (x544 x1473)))
(define-fun x828 ((x1473 Int)) Int (ite (= x1473 x111) x1005 (x991 x1473)))
(define-fun x729 ((x1473 Int)) Int (ite (= x1473 x1440) x603 (x828 x1473)))
(define-fun x459 ((x1473 Int)) Int 0)
(define-fun x1201 ((x1473 Int)) Int (ite (= x1473 x324) x696 (x501 x1473)))
(define-fun x1380 ((x1473 Int)) Int (ite x1596 (x501 x1473) (ite x643 (x501 x1473) (x1201 x1473))))
(define-fun x1464 ((x1473 Int)) Int (ite x1651 (x1298 x1473) (ite x1216 (x1298 x1473) (x1380 x1473))))
(define-fun x846 ((x1473 Int)) Int (ite (= x1473 x1352) x696 (x386 x1473)))
(define-fun x788 ((x1473 Int)) Int (ite x1596 (x386 x1473) (ite x643 (x386 x1473) (x846 x1473))))
(define-fun x345 ((x1473 Int)) Int (ite x1216 (x348 x1473) (x788 x1473)))
(define-fun x1138 ((x1473 Int)) Int (ite x1651 (x348 x1473) (x345 x1473)))
(define-fun x489 ((x1473 Int)) Int (ite (= x324 x1473) x1411 (x635 x1473)))
(define-fun x867 ((x1473 Int)) Int (ite x1596 (x1551 x1473) (ite x643 (x1551 x1473) (x489 x1473))))
(define-fun x1266 ((x1473 Int)) Int (ite x1651 (x1383 x1473) (ite x1216 (x1383 x1473) (x867 x1473))))
(define-fun x93 ((x1473 Int)) Int (ite (= x324 x1473) x1185 (x1630 x1473)))
(define-fun x646 ((x1473 Int)) Int (ite x1596 (x1512 x1473) (ite x643 (x1512 x1473) (x93 x1473))))
(define-fun x475 ((x1473 Int)) Int (ite x1651 (x749 x1473) (ite x1216 (x749 x1473) (x646 x1473))))
(define-fun x849 ((x1473 Int)) Int (ite x1596 (x1190 x1473) (ite x643 (x1190 x1473) (x1028 x1473))))
(define-fun x1290 ((x1473 Int)) Int (ite x1651 (x912 x1473) (ite x1216 (x785 x1473) (x849 x1473))))
(define-fun x515 ((x1473 Int)) Int (ite x1596 (x857 x1473) (ite x643 (x857 x1473) (x1402 x1473))))
(define-fun x1282 ((x1473 Int)) Int (ite x1216 (x505 x1473) (x515 x1473)))
(define-fun x841 ((x1473 Int)) Int (ite x1651 (x174 x1473) (x1282 x1473)))
(define-fun x994 ((x1473 Int)) Int 0)
(define-fun x1615 ((x1473 Int)) Int 0)
(define-fun x32 ((x1473 Int)) Int (ite (= x1473 128) x419 (x532 x1473)))
(define-fun x1199 ((x1473 Int)) Int (ite x582 (ite x1114 (x86 x1473) (x32 x1473)) (x86 x1473)))
(define-fun x468 ((x1473 Int)) Int (ite (= x1473 128) x1418 (x1199 x1473)))
(define-fun x820 ((x1473 Int)) Int (ite x884 (x468 x1473) (x1199 x1473)))
(define-fun x1482 ((x1473 Int)) Int (ite (= x1473 128) x281 (x820 x1473)))
(define-fun x1026 ((x1473 Int)) Int (ite (= 160 x1473) x691 (x1482 x1473)))
(define-fun x1350 ((x1473 Int)) Int (ite x1076 (x820 x1473) (x1026 x1473)))
(define-fun x736 ((x1473 Int)) Int (ite (= x1473 128) x1238 (x1350 x1473)))
(define-fun x614 ((x1473 Int)) Int (ite x1264 (ite x581 (x1350 x1473) (x736 x1473)) (x1350 x1473)))
(define-fun x1145 ((x1473 Int)) Int (ite (= x1473 128) x977 (x614 x1473)))
(define-fun x1577 ((x1473 Int)) Int (ite x4 (x1145 x1473) (x614 x1473)))
(define-fun x180 ((x1473 Int)) Int (ite (= x1473 128) x281 (x1577 x1473)))
(define-fun x439 ((x1473 Int)) Int (ite (= 160 x1473) x340 (x180 x1473)))
(define-fun x134 ((x1473 Int)) Int (ite x462 (x1577 x1473) (x439 x1473)))
(define-fun x1149 ((x1473 Int)) Int (ite (= 164 x1473) x716 (x61 x1473)))
(define-fun x162 ((x1473 Int)) Int (ite (= x1473 196) x1440 (x1149 x1473)))
(define-fun x426 ((x1473 Int)) Int (ite (= 228 x1473) x144 (x162 x1473)))
(define-fun x1463 ((x1473 Int)) Int (ite (= x1473 160) x1314 (x426 x1473)))
(define-fun x1621 ((x1473 Int)) Int (ite (and (<= 324 x1473) (< x1473 (+ 324 x488))) (x1463 (- x1473 164)) (x134 x1473)))
(define-fun x1563 ((x1473 Int)) Int (ite (= 388 x1473) x144 (x1621 x1473)))
(define-fun x74 ((x1473 Int)) Int (ite (= x1473 388) x372 (x1563 x1473)))
(define-fun x1047 ((x1473 Int)) Int (ite x1228 (ite x929 (x1563 x1473) (x74 x1473)) (x1563 x1473)))
(define-fun x177 ((x1473 Int)) Int (ite (= 388 x1473) x601 (x1047 x1473)))
(define-fun x1650 ((x1473 Int)) Int (ite x242 (x177 x1473) (x1047 x1473)))
(define-fun x1322 ((x1473 Int)) Int (ite (= 388 x1473) x896 (x1650 x1473)))
(define-fun x759 ((x1473 Int)) Int (ite (= 420 x1473) x1330 (x1322 x1473)))
(define-fun x1159 ((x1473 Int)) Int (ite x1386 (x1650 x1473) (x759 x1473)))
(define-fun x1509 ((x1473 Int)) Int (ite (= x1473 424) x1440 (x47 x1473)))
(define-fun x645 ((x1473 Int)) Int (ite (= 456 x1473) x1440 (x1509 x1473)))
(define-fun x473 ((x1473 Int)) Int (ite (= x1473 488) x1286 (x645 x1473)))
(define-fun x775 ((x1473 Int)) Int (ite (= 388 x1473) 100 (x724 x1473)))
(define-fun x919 ((x1473 Int)) Int (ite (= x1473 420) x287 (x473 x1473)))
(define-fun x1603 ((x1473 Int)) Int (ite (and (< x1473 (+ 584 x577)) (>= x1473 584)) (x919 (- x1473 164)) (x1159 x1473)))
(define-fun x800 ((x1473 Int)) Int (ite (= x1473 x1440) x253 (x729 x1473)))
(define-fun x278 ((x1473 Int)) Int (ite (= x1545 x1473) x228 (x800 x1473)))
(define-fun x713 ((x1473 Int)) Int (ite (= x1440 x1473) x70 (x278 x1473)))
(define-fun x115 ((x1473 Int)) Int (ite (= x1473 x384) x62 (x1662 x1473)))
(define-fun x1049 ((x1473 Int)) Int (ite (= x333 x1473) x308 (x115 x1473)))
(define-fun x1663 ((x1473 Int)) Int (ite (= x1105 x1473) x193 (x1049 x1473)))
(define-fun x1558 ((x1473 Int)) Int (ite (= x106 x1473) x1477 (x1663 x1473)))
(define-fun x935 ((x1473 Int)) Int (ite (= x1473 x1226) x520 (x1030 x1473)))
(define-fun x1423 ((x1473 Int)) Int (ite (= x960 x1473) x1472 (x935 x1473)))
(define-fun x559 ((x1473 Int)) Int (ite (= x1473 0) 1 (x1627 x1473)))
(define-fun x96 ((x1473 Int)) Int (ite (= 324 x1473) 32 (x673 x1473)))
(define-fun x1522 ((x1473 Int)) Int (ite (= x1473 584) 32 (x96 x1473)))
(define-fun x591 ((x1473 Int)) Int (ite (and (>= x1473 616) (> 648 x1473)) (x559 (- x1473 616)) (x1244 x1473)))
(define-fun x980 ((x1473 Int)) Int (ite (= x1473 x364) x1418 (x295 x1473)))
(define-fun x1483 ((x1473 Int)) Int (ite x884 (x980 x1473) (x295 x1473)))
(define-fun x826 ((x1473 Int)) Int (ite (= x411 x1473) x977 (x1483 x1473)))
(define-fun x14 ((x1473 Int)) Int (ite x4 (x826 x1473) (x1483 x1473)))
(define-fun x273 ((x1473 Int)) Int (ite (= x1673 x1473) x419 (x360 x1473)))
(define-fun x1016 ((x1473 Int)) Int (ite x582 (ite x1114 (x360 x1473) (x273 x1473)) (x360 x1473)))
(define-fun x1218 ((x1473 Int)) Int (ite (= x1473 x1239) x1238 (x1016 x1473)))
(define-fun x1538 ((x1473 Int)) Int (ite x1264 (ite x581 (x1016 x1473) (x1218 x1473)) (x1016 x1473)))
(define-fun x20 ((x1473 Int)) Int (ite (= x1473 x1124) x694 (x1332 x1473)))
(define-fun x1009 ((x1473 Int)) Int (ite x582 (x20 x1473) (x1332 x1473)))
(define-fun x1467 ((x1473 Int)) Int (ite (= x1473 x625) x956 (x1009 x1473)))
(define-fun x650 ((x1473 Int)) Int (ite x1264 (x1467 x1473) (x1009 x1473)))
(define-fun x554 ((x1473 Int)) Int (ite (= x1473 x331) x596 (x1394 x1473)))
(define-fun x5 ((x1473 Int)) Int (ite x1076 (x1394 x1473) (x554 x1473)))
(define-fun x1526 ((x1473 Int)) Int (ite (= x276 x1473) x1410 (x5 x1473)))
(define-fun x752 ((x1473 Int)) Int (ite (= x1473 128) 100 (x371 x1473)))
(define-fun x1142 ((x1473 Int)) Int (ite (= x1473 0) 1 (x738 x1473)))
(define-fun x1006 ((x1473 Int)) Int (ite (and (< x1473 388) (<= 356 x1473)) (x1142 (- x1473 356)) (x907 x1473)))
(define-fun x573 ((x1473 Int)) Int (ite (= x1473 x267) x626 (x1324 x1473)))
(define-fun x1451 ((x1473 Int)) Int (ite x881 (x1324 x1473) (x573 x1473)))
(define-fun x339 ((x1473 Int)) Int (ite (= x1061 x1473) x1112 (x1451 x1473)))
(define-fun x561 ((x1473 Int)) Int (ite x101 (x1451 x1473) (x339 x1473)))
(define-fun x654 ((x1473 Int)) Int (ite (= x1473 x1671) x125 (x561 x1473)))
(define-fun x1328 ((x1473 Int)) Int (ite x897 (x561 x1473) (x654 x1473)))
(define-fun x45 ((x1473 Int)) Int (ite x604 (x1451 x1473) (ite x1485 (x1451 x1473) (x1328 x1473))))
(define-fun x1478 ((x1473 Int)) Int (ite (= x688 x1473) x1175 (x1602 x1473)))
(define-fun x1560 ((x1473 Int)) Int (ite x336 (x1602 x1473) (x1478 x1473)))
(define-fun x1618 ((x1473 Int)) Int (ite (= x393 x1473) x302 (x1560 x1473)))
(define-fun x901 ((x1473 Int)) Int (ite x1156 (x1560 x1473) (x1618 x1473)))
(define-fun x395 ((x1473 Int)) Int (ite (= x1473 x1438) x1254 (x901 x1473)))
(define-fun x1031 ((x1473 Int)) Int (ite x73 (x901 x1473) (x395 x1473)))
(define-fun x122 ((x1473 Int)) Int (ite x604 (x1560 x1473) (ite x1485 (x1560 x1473) (x1031 x1473))))
(define-fun x1302 ((x1473 Int)) Int (ite (= x1355 x1473) x372 (x1538 x1473)))
(define-fun x30 ((x1473 Int)) Int (ite (= x1473 x1542) x601 (x14 x1473)))
(define-fun x1259 ((x1473 Int)) Int (ite (= x1079 x1473) x207 (x1526 x1473)))
(define-fun x1113 ((x1473 Int)) Int (ite x581 (x1016 x1473) (x1218 x1473)))
(define-fun x1202 ((x1473 Int)) Int (ite (= x1473 x1089) x525 (x650 x1473)))
(define-fun x1345 ((x1473 Int)) Int (ite x1114 (x360 x1473) (x273 x1473)))
(define-fun x316 ((x1473 Int)) Int (ite x1216 (x749 x1473) (x646 x1473)))
(define-fun x1099 ((x1473 Int)) Int (ite x1216 (x1383 x1473) (x867 x1473)))
(define-fun x178 ((x1473 Int)) Int (ite x1216 (x1298 x1473) (x1380 x1473)))
(define-fun x1073 ((x1473 Int)) Int (ite x1216 (x785 x1473) (x849 x1473)))
(define-fun x481 ((x1473 Int)) Int (ite (= 648 x1473) x1474 (x1603 x1473)))
(define-fun x490 ((x1473 Int)) Int (ite (= x1473 x338) 41436628393252172163539528543619094058851530980360706587524068930525597794304 (x481 x1473)))
(define-fun x356 ((x1473 Int)) Int (ite (= x1473 x1513) 0 (x490 x1473)))
(define-fun x686 ((x1473 Int)) Int (ite (= x975 x1473) x896 (x356 x1473)))
(define-fun x1233 ((x1473 Int)) Int (ite (= x1473 x807) 0 (x686 x1473)))
(define-fun x871 ((x1473 Int)) Int (ite (= x755 x1473) x1616 (x1233 x1473)))
(define-fun x1283 ((x1473 Int)) Int (ite (= x1473 x503) x1474 (x871 x1473)))
(define-fun x1001 ((x1473 Int)) Int (ite (= x1008 x1473) x1505 (x45 x1473)))
(define-fun x189 ((x1473 Int)) Int (ite x446 (x45 x1473) (x1001 x1473)))
(define-fun x1476 ((x1473 Int)) Int (ite (= x1434 x1473) x418 (x122 x1473)))
(define-fun x1062 ((x1473 Int)) Int (ite x721 (x122 x1473) (x1476 x1473)))
(define-fun x1604 ((x1473 Int)) Int (ite (= x1195 x1473) x1525 (x189 x1473)))
(define-fun x154 ((x1473 Int)) Int (ite (= x1371 x1473) x910 (x1062 x1473)))
(define-fun x963 ((x205 Int)) Bool (or (not (and (>= x205 0) (>= 1461501637330902918203684832716283019655932542975 x205))) (not (= x216 (x99 x205))) (and (not (= (x348 x205) 3)) (not (= 1 (x348 x205))))))
(define-fun x1340 ((x1638 Int)) Bool (=> (and (>= 1461501637330902918203684832716283019655932542975 x1638) (<= 0 x1638)) (x1481 (x99 x1638))))
(define-fun x482 ((x1636 Int)) Bool (or (= x1636 0) (not (and (>= 1461501637330902918203684832716283019655932542975 x1636) (>= x1636 0))) (not (= x1636 (x99 x1636)))))
(define-fun x1455 ((x877 Int)) Bool (or (and (not (= (x1138 x877) 3)) (not (= (x1138 x877) 1))) (not (= (x99 x877) x216)) (not (and (>= x877 0) (>= 1461501637330902918203684832716283019655932542975 x877)))))
(define-fun x926 ((x181 Int)) Bool (= 0 (x971 0 x181)))
(define-fun x868 ((x1638 Int) (x279 Int)) Bool (x1490 (x971 x1638 x279)))
(define-fun x185 ((x681 Int) (x1396 Int) (x950 Int)) Bool (or (= (- (+ (x971 x950 x681) (x971 x1396 x681)) 1) (x971 (+ x1396 x950) x681)) (= (x971 (+ x1396 x950) x681) (+ (x971 x950 x681) (x971 x1396 x681))) (= (x971 (+ x1396 x950) x681) (+ 1 (x971 x1396 x681) (x971 x950 x681)))))
(define-fun x527 () Bool (and (x963 x737) (x963 x456) (x963 x1352) (x963 x631) (x963 x1303) (x963 x896) (x963 x797) (x963 x1358) (x963 x815) (x963 x1111)))
(define-fun x834 () Bool (and (x963 x737) (x963 x896) (x963 x797) (x963 x1303) (x963 x1111) (x963 x1352) (x963 x1358) (x963 x631) (x963 x456) (x963 x815)))
(define-fun x365 () Bool (and x834 x527))
(define-fun x1461 () Bool (and (x1340 x1303) (x1340 x797) (x1340 x815) (x1340 x1352) (x1340 x456) (x1340 x631) (x1340 x737) (x1340 x1358) (x1340 x896) (x1340 x1111)))
(define-fun x1344 () Bool x1461)
(define-fun x990 () Bool (and (x482 x737) (x482 x1358) (x482 x815) (x482 x1352) (x482 x631) (x482 x1303) (x482 x1111) (x482 x456) (x482 x896) (x482 x797)))
(define-fun x1300 () Bool x990)
(define-fun x374 () Bool (and (x1455 x815) (x1455 x631) (x1455 x1303) (x1455 x456) (x1455 x1352) (x1455 x797) (x1455 x1111) (x1455 x737) (x1455 x896) (x1455 x1358)))
(define-fun x1132 () Bool (and (x1455 x631) (x1455 x896) (x1455 x1111) (x1455 x1358) (x1455 x1303) (x1455 x1352) (x1455 x815) (x1455 x456) (x1455 x737) (x1455 x797)))
(define-fun x184 () Bool (and x374 x1132))
(define-fun x812 () Bool (and (x926 x844) (x926 x992) (x926 x1179)))
(define-fun x1592 () Bool x812)
(define-fun x381 () Bool (and (x868 x1118 x1179) (x868 x770 x1179) (x868 x1188 x992) (x868 x911 x1179) (x868 x148 x844)))
(define-fun x594 () Bool x381)
(define-fun x1013 () Bool (and (x185 x992 x1188 x1188) (x185 x1179 x1118 x911) (x185 x992 x1188 x148) (x185 x992 x1188 x770) (x185 x844 x148 x148) (x185 x844 x148 x1118) (x185 x1179 x1118 x770) (x185 x844 x148 x770) (x185 x1179 x770 x1188) (x185 x1179 x911 x1118) (x185 x1179 x770 x911) (x185 x1179 x911 x911) (x185 x844 x148 x1188) (x185 x1179 x911 x770) (x185 x1179 x770 x148) (x185 x1179 x770 x770) (x185 x1179 x1118 x1118) (x185 x1179 x770 x1118) (x185 x1179 x1118 x1188) (x185 x992 x1188 x911) (x185 x1179 x911 x1188) (x185 x1179 x1118 x148) (x185 x992 x1188 x1118) (x185 x1179 x911 x148) (x185 x844 x148 x911)))
(define-fun x369 () Bool (and (x185 x1179 x1118 x770) (x185 x1179 x1118 x911) (x185 x1179 x148 x911) (x185 x992 x1118 x1188) (x185 x1179 x1188 x770) (x185 x1179 x770 x1118) (x185 x844 x770 x148) (x185 x1179 x770 x770) (x185 x992 x1188 x1188) (x185 x1179 x1188 x1118) (x185 x844 x148 x148) (x185 x992 x770 x1188) (x185 x1179 x911 x911) (x185 x844 x1118 x148) (x185 x1179 x1188 x911) (x185 x1179 x148 x770) (x185 x992 x148 x1188) (x185 x992 x911 x1188) (x185 x1179 x911 x1118) (x185 x844 x1188 x148) (x185 x1179 x1118 x1118) (x185 x1179 x770 x911) (x185 x844 x911 x148) (x185 x1179 x148 x1118) (x185 x1179 x911 x770)))
(define-fun x962 () Bool (and x369 x1013))
(define-fun x1559 ((x1284 Int) (x1143 Int) (x450 Int) (x1048 Int)) Bool (=> (and (<= 0 x1143) (<= 0 x1284) (>= x1048 x1143) (>= x450 x1284)) (<= (x401 x1284 x1143) (x401 x450 x1048))))
(define-fun x602 ((x1284 Int) (x1143 Int) (x450 Int) (x1048 Int)) Bool (=> (= x450 x1284) (= (- (x401 x1284 x1143) (x401 x450 x1048)) (x401 x1284 (- x1143 x1048)))))
(assert (x584 (- x1179 x762)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x1440 x647)))
(assert (= (x1487 (x335 64 x631 0)) (x335 64 x631 0)))
(assert (x602 x255 x1317 x1102 x762))
(assert (x183 x1064))
(assert (= (x1487 (x335 64 x1352 0)) (x335 64 x1352 0)))
(assert (x183 x219))
(assert (x183 x920))
(assert (x218 x34 (- x1024 x1102)))
(assert (x1559 x483 x1042 x1286 x1179))
(assert (x584 (x818 x795 10000000000)))
(assert (x602 x26 x665 x1179 x1286))
(assert (x183 x1511))
(assert (x584 (- x1286 x483)))
(assert (= x91 (and x467 (not x1670))))
(assert (= (or x808 x978) x1094))
(assert (x218 x762 (- x1102 x222)))
(assert (x816 340282366920938463463374607431768211455))
(assert (x183 x1440))
(assert (x218 x255 (- x1317 x26)))
(assert (x183 x1616))
(assert (x183 x1422))
(assert (x183 x913))
(assert (not (x1103 (x335 64 x281 x633))))
(assert (x183 x504))
(assert (x183 x1648))
(assert (x584 (- x665 x856)))
(assert (= 0 (x1487 1016599773)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x281 x633)))
(assert (x584 x1042))
(assert (x218 x26 (- x665 x222)))
(assert (= (=> (and (and (<= x1179 105312291668557186697918027683670432318895095400549111254310977535) (= x453 (* x1227 10000000000)) (<= x375 105312291668557186697918027683670432318895095400549111254310977535) (= x813 x375) (= x1196 x453) (= x1566 x1118) (= (= x1179 x36) x909) (= x375 x36) (= x212 (= x1179 x813)) (= (+ x1196 x54) x1118) (= x1569 (x971 x1118 x1179)) (<= 0 x375) (>= x1569 0) (= x1416 x1179) (= x889 x1440) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1569) x212 x909) (and (and (or (and (= x186 (ite x1581 1 0)) x1581) (and (and (= (= x80 x480) x1065) (= (x1298 x987) x80) (= x332 x608) (>= 3 x80) (<= x480 3) (= x480 (x348 x797)) x1065 (= (x335 64 x797 0) x987) (= (ite (= x80 3) 1 0) x186)) (not x1581))) (and (>= 3 x988) (= (x348 x797) x1236) (= (x1298 x706) x988) (>= x2 1) (= (x335 64 x797 0) x706) (= (x72 x1440) x2) (= x291 false) (= (= x988 1) x1581) (= x39 false) (= x404 x797) (<= x274 127) x607 (<= x1236 3) (= x938 1016599773) (= x607 (= x988 x1236)) (= x1600 x608) (>= 127 x274) (= x797 x608))) (and (= x1100 false) (= false x852) (= x1184 36) (= false x967) (= x976 x1569) (= x1432 false) (= x216 x404) (= x422 x976)))) x1619) x201))
(assert (x584 (x818 x678 10000000000)))
(assert (x183 x159))
(assert (x1559 x1179 x1286 x34 x1024))
(assert (x183 x1545))
(assert (x183 x953))
(assert (x183 x840))
(assert (x1559 x856 x222 x26 x665))
(assert (= (or x662 x1216) x1020))
(assert (x584 (- x34 x1179)))
(assert (x183 x126))
(assert (= (x1487 115792089237316195423570985008687907853269984665640564039457584007913129639837) 0))
(assert (x584 (- x762 x1317)))
(assert (x183 x761))
(assert (x218 x1286 (- x1179 x665)))
(assert (x218 x762 (- x1102 x856)))
(assert (x183 x541))
(assert (x787 10000000000))
(assert (x602 x222 x856 x1042 x483))
(assert (x183 x1480))
(assert (x218 x1286 (- x1179 x1042)))
(assert (= (=> (= x338 x758) x112) x258))
(assert (x584 (- x483 x1317)))
(assert (x183 x1321))
(assert (x584 x297))
(assert (x183 x503))
(assert (x218 x856 (- x222 x483)))
(assert (x584 (- x1102 x665)))
(assert (x183 x274))
(assert (x1559 x1042 x483 x26 x665))
(assert (= true x13))
(assert (x602 x665 x26 x762 x1102))
(assert (x584 (- x1317 x665)))
(assert (x183 x1000))
(assert (x218 x856 (- x222 x1024)))
(assert (x1103 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x183 x923))
(assert (x1103 1461501637330902918203684832716283019655932542975))
(assert (x218 x1102 (- x762 x665)))
(assert (x169 (x505 x815)))
(assert (x602 x255 x1317 x483 x1042))
(assert (< (x335 64 x896 61) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1045 (=> (and (and (>= x1557 0) (= (x236 x815) x1557) (>= 1461501637330902918203684832716283019655932542975 x1438) (>= x1438 0) (= x815 x81) (= x1458 false) (>= x1501 0) (= x563 (x901 x1557)) (= 10000000000 x1292) (>= 1461501637330902918203684832716283019655932542975 x1557) (= x815 x507) (= x435 x815) x1215 (= (x236 x815) x1438) (= (x153 x815) x1501) (>= 20282409603651670423947251286015 x1501)) (and (= x1210 10000000000) (= x298 (* (x818 x1501 10000000000) 10000000000)) (= (+ x298 x563) x1254))) x672)))
(assert (not (x1103 (x335 64 x385 0))))
(assert (not (x1103 (x335 64 x58 0))))
(assert (x218 x34 (- x1024 x26)))
(assert (= (x335 64 x456 0) (x1487 (x335 64 x456 0))))
(assert (= 64 (x1334 (x335 64 x1440 x647))))
(assert (x602 x1042 x483 x1286 x1179))
(assert (x602 x856 x222 x483 x1042))
(assert (= x33 (=> (and (and (= 10000000000 x1398) (= x1364 (* (x818 x959 10000000000) 10000000000)) (= (+ x940 x1364) x1525)) (and (= x1352 x389) (>= x819 0) (= x940 (x189 x819)) (= (x99 x1352) x819) (= x1195 (x99 x1352)) (= (x1402 x1352) x959) x1249 (<= x819 1461501637330902918203684832716283019655932542975) (<= x1195 1461501637330902918203684832716283019655932542975) (= x1523 10000000000) (<= x959 20282409603651670423947251286015) (= x583 false) (<= 0 x1195) (= x545 x1352) (= x1488 x1352) (<= 0 x959))) x1426)))
(assert (x183 x1680))
(assert (x183 x451))
(assert (< (x335 64 x58 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x602 x255 x1317 x222 x856))
(assert (x816 x1064))
(assert (x183 x443))
(assert (= (x1487 (x335 64 x1440 60)) (x335 64 x1440 60)))
(assert (x1559 x1024 x34 x1286 x1179))
(assert (x602 x1317 x255 x34 x1024))
(assert (x218 x1179 (- x1286 x34)))
(assert (x602 x1102 x762 x1286 x1179))
(assert (x183 x1223))
(assert (x183 x911))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x896 71)))
(assert (x1559 x222 x856 x1102 x762))
(assert (x218 x222 (- x856 x762)))
(assert (x183 x1413))
(assert (= (=> (and (= x1011 x1330) (= x1542 (x335 64 x896 x1197))) x136) x778))
(assert (x602 x856 x222 x1102 x762))
(assert (x602 x1102 x762 x222 x856))
(assert (= (x1487 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x183 x197))
(assert (x183 x1534))
(assert (x1069 x592 x38))
(assert (x584 (- x762 x222)))
(assert (x584 (- x1286 x856)))
(assert (x584 (- x665 x1286)))
(assert (= x1465 (and x1215 x1237)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x1352 0)))
(assert (x602 x1102 x762 x1024 x34))
(assert (x183 x290))
(assert (x218 x483 (- x1042 x762)))
(assert (x602 x762 x1102 x1286 x1179))
(assert (x183 x815))
(assert (x218 x222 (- x856 x26)))
(assert (= 64 (x1334 (x335 64 x281 0))))
(assert (x183 x222))
(assert (< (x335 64 x631 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x1440 2)))
(assert (x183 x483))
(assert (x183 x1504))
(assert (x183 x235))
(assert (x816 x238))
(assert (x584 (- x26 x1024)))
(assert (x584 x1354))
(assert (= (x257 (x335 64 x281 61)) 61))
(assert (x183 x934))
(assert (= x281 (x1247 (x335 64 x281 0))))
(assert (x183 x587))
(assert (x602 x762 x1102 x856 x222))
(assert (x183 x577))
(assert (x183 x680))
(assert (x602 x255 x1317 x26 x665))
(assert (x218 x483 (- x1042 x1286)))
(assert (x218 x1102 (- x762 x26)))
(assert (x183 x665))
(assert (x183 x111))
(assert (x218 x762 (- x1102 x255)))
(assert (= x1352 (x1247 (x335 64 x1352 0))))
(assert (x183 x1253))
(assert (x584 (- x1286 x1102)))
(assert (x218 x222 (- x856 x483)))
(assert (x218 x483 (- x1042 x1179)))
(assert (x836 x130 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x602 x26 x665 x34 x1024))
(assert (= (x335 64 x1440 x647) (x1487 (x335 64 x1440 x647))))
(assert (x1103 1000000000000000000))
(assert (x183 x54))
(assert (x1559 x1102 x762 x26 x665))
(assert (x183 x795))
(assert (x584 (- x34 x665)))
(assert (x183 x1593))
(assert (= (x1247 (x335 64 x896 0)) x896))
(assert (x584 (- x483 x26)))
(assert (x183 x38))
(assert (x218 x1042 (- x483 x26)))
(assert (x584 (- x1179 x222)))
(assert (x183 x1354))
(assert (x816 1))
(assert (x346 x1064))
(assert (x602 x665 x26 x1042 x483))
(assert (x183 x1358))
(assert (x183 x1127))
(assert (= 0 (x1487 47223664828696452136950000000000)))
(assert (x218 x26 (- x665 x1317)))
(assert (x584 (- x1042 x1024)))
(assert (x183 x1589))
(assert (= x406 (or x437 (and (not x1178) x128))))
(assert (x584 (- x1286 x762)))
(assert (x183 x709))
(assert (x183 x1134))
(assert (= (x1247 (x335 64 x716 3)) x716))
(assert (x183 x1307))
(assert (x602 x255 x1317 x762 x1102))
(assert (> (x335 64 x1358 0) 10000))
(assert (= (and x315 (not x226)) x101))
(assert (x183 x1533))
(assert (x1559 x26 x665 x222 x856))
(assert (x602 x665 x26 x856 x222))
(assert (= (or x1114 x1260) x582))
(assert (= 0 (x1487 41436628393252172163539528543619094058851530980360706587524068930525597794304)))
(assert (x602 x856 x222 x34 x1024))
(assert (= (=> (= x445 1288) x204) x672))
(assert (x787 x678))
(assert (x183 x2))
(assert (x218 x26 x665))
(assert (x169 (x153 x815)))
(assert (= x1228 (or x860 x929)))
(assert (x1232 x913))
(assert (x218 x665 (- x26 x1179)))
(assert (x183 x1003))
(assert (= (x1487 115792089237316195423570985008687907853269984665640564039457584007913129639619) 0))
(assert (x1103 4294967295))
(assert (= (and x780 x1629) x1114))
(assert (x183 x797))
(assert (x584 (- x483 x762)))
(assert (= 0 (x1487 1000000000000000000)))
(assert (x183 x684))
(assert (= x739 (and x823 x766)))
(assert (x1559 x255 x1317 x1042 x483))
(assert (x584 (- x255 x222)))
(assert (x183 x1624))
(assert (= (x1487 x625) (x1487 (+ x625 1))))
(assert (= 64 (x1334 (x335 64 x281 61))))
(assert (x584 (- x1286 x665)))
(assert (= x1642 (=> (and (= x372 x317) (= x1318 (x818 x592 x38)) (>= x155 0) (not (> x1024 x259)) (< (x401 x34 x1024) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1024 (x564 (- x259 x57))) (= x317 (x303 (+ x1318 x1544))) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1544 x1318))) (= x155 (x401 x34 x1024)) (= x592 (* x155 1000000000000000000)) (<= 1 x38) (>= 57896044618658097711785492504343953926634992332820282019728 x155)) x653)))
(assert (x183 x373))
(assert (x1559 x665 x26 x222 x856))
(assert (x183 x1389))
(assert (x1559 x1042 x483 x34 x1024))
(assert (x218 x34 (- x1024 x762)))
(assert (x602 x856 x222 x255 x1317))
(assert (x1103 3247395738))
(assert (x183 x1529))
(assert (x183 x585))
(assert (= x896 (x1247 (x335 64 x896 72))))
(assert (x183 x1278))
(assert (x602 x222 x856 x762 x1102))
(assert (x183 x402))
(assert (= (x257 (x335 64 x281 x12)) x12))
(assert (x602 x34 x1024 x222 x856))
(assert (= (=> (and (or (and (and (= x975 (x303 (+ x1513 32))) (>= 4294967295 x1678) (= x755 (x303 (+ 32 x807))) (= (x303 (+ x975 32)) x807) (= (x303 (+ 4 x338)) x1513) (= x503 (x303 (+ 32 x755)))) (not x190)) x190) (and (= (= 0 x1393) x190) (>= 1461501637330902918203684832716283019655932542975 x1393))) x394) x112))
(assert (x218 x1102 (- x762 x1286)))
(assert (= (or x801 x89) x1186))
(assert (x787 x63))
(assert (x218 x1179 (- x1286 x222)))
(assert (x602 x483 x1042 x1024 x34))
(assert (> (x335 64 x1440 2) 10000))
(assert (x183 x553))
(assert (x346 x238))
(assert (x183 x429))
(assert (x183 x1374))
(assert (x584 (- x222 x1024)))
(assert (= x1605 (=> (and (= (or x1010 x1379) x1287) (<= x508 3) (= (= 0 x1352) x442) (= x1078 x1352) (= x1352 x715) (= x1010 (= x508 3)) (>= 3 x137) (= (x386 x1352) x508) (= x21 0) (= (= x137 2) x1379) (= (x386 x1352) x137) (= x100 (not x442)) (= (and x1287 x100) x1667)) (and (=> x1667 x793) (=> (and (and (= x1085 true) (not x1667)) (not x1667)) x465)))))
(assert (x218 x255 (- x1317 x34)))
(assert (= (and (not x766) x823) x862))
(assert (= (x335 64 x1440 2) (x1487 (x335 64 x1440 2))))
(assert (x602 x856 x222 x762 x1102))
(assert (x602 x1317 x255 x1102 x762))
(assert (x183 x660))
(assert (x341 x1561 1000000000000000000))
(assert (x183 x506))
(assert (x1559 x1286 x1179 x26 x665))
(assert (x218 x34 (- x1024 x1179)))
(assert (x183 x1591))
(assert (x602 x665 x26 x255 x1317))
(assert (x584 (- x1042 x856)))
(assert (x602 x1179 x1286 x762 x1102))
(assert (x584 (- x1042 x26)))
(assert (x183 x805))
(assert (x218 x34 (- x1024 x1317)))
(assert (x183 x26))
(assert (= 0 (x1487 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x218 x1102 (- x762 x1024)))
(assert (x183 x1314))
(assert (x584 (- x483 x1024)))
(assert (= (=> (and (and (and (= x334 0) (<= x1022 3) (= false x922) (<= 0 x307) (= x350 (= 3 x1022)) (= x216 x1637) (= x1056 0) (= false x538) (= x1303 x216) (<= 0 x1401) (= (x1324 x1192) x1401) (= x472 (ite x431 0 x1370)) (= x1141 x216) (= x1192 x216) (= x1193 false) (>= 47223664828696452136950000000000 x1401) (= 36 x1059) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x307) (>= x1370 0) (= (= x757 1) x294) (= x307 (x971 x1188 x992)) (= x1150 x307) (= (+ x472 x1420) x1188) (= x1470 0) (= x1653 x216) (= x256 (= x1150 x1570)) (= x737 x216) x256 (= x1570 x1462) (= x516 false) (<= x1370 20282409603651670423947251286015) (= x216 x392) (= false x1308) (= true x1387) (= (x174 x1653) x1370) (= x431 (or x350 x294)) (= x375 x992) (>= 3 x757) (= (x1324 x1141) x1420) (= (x348 x1303) x757) (= (x348 x737) x1022) (= true x1516)) (and (and (= x79 x175) (and (= x76 x1064) (and (<= x1102 20282409603651670423947251286015) (= (+ x1124 2) x12) (= x292 (x360 x1673)) (= x1117 (x1332 x1124)) (= 1 x606) (>= 340282366920938463463374607431768211455 x1117) (= x1052 x928) (= (< 0 x1248) x1427) (= (x991 x111) x1005) (>= 127 x1413) (<= x1413 127) (= (x564 (- x1064 x1117)) x1248) (>= x585 1) (= (x335 64 x281 0) x1376) (= (x335 64 2 69) x726) (= x771 (x335 64 x281 x12)) (= x79 x843) (= x1124 (x335 64 x1440 60)) (>= 1461501637330902918203684832716283019655932542975 x843) (= x553 x603) (= x443 x359) (= x620 (x174 x281)) (= 3247395738 x249) (= x1549 false) (= (x941 x726) x843) (= x1534 2) (= x111 x175) (>= x620 0) (= (x295 x771) x1357) (= x585 (x72 x1440)) (= (x912 x1376) x1102) (= (+ 1 x1124) x1673) (<= x620 20282409603651670423947251286015) (= (= x1102 x620) x969) (= x553 (x828 x1440)) (= x1052 x1514) (= x1319 false) (= x566 x543) x969))) (and (= x281 (x830 4)) (= x58 x392) (= x733 (x335 64 x58 0)) (= x1309 true) (= x1354 (x1383 x733)) (= 2129096990 x1313) (<= x896 1461501637330902918203684832716283019655932542975) (= false x695) (= x566 x347) (= (x830 36) x896) (= false x847) (>= x1607 1) (= x359 x896) (<= x1354 4722366482869645213695) (= x347 (x830 68)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1245) (<= x281 1461501637330902918203684832716283019655932542975) (<= 100 x1245) x192 (>= 127 x1120) (= x58 x692) (= (x72 x1440) x1607) (= x1279 false) (= x565 (x830 0)) (= false x1554) (= x281 x928) (= (* x1354 10000000000) x1564) (= 10000000000 x461) (= x1417 false) (= false x229) (= false x1137) (= x632 x565) (= x192 (= x1564 x1401)) (>= 127 x1120)))) (and (= x375 x948) (<= 0 x1462) (= x911 (+ x65 x3)) (= x1275 x1440) (= x94 (* x1220 10000000000)) (= x1462 (x971 x911 x1179)) x832 (= x1645 x911) (= (= x1179 x123) x719) x719 (= x375 x123) (= x832 (= x1179 x948)) (= x3 x94) (= x589 x1179) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1462))) (and (=> (and (not x1427) (= x292 x1418)) x1647) (=> (and (and (or (and (= x451 (ite (= x1064 x1117) 1 0)) (not x83)) (and x83 (= x451 x1086))) (and (= x1086 (ite (= x222 0) (ite (= 0 x222) 1 0) (ite (= x38 0) 1 0))) (>= 340282366920938463463374607431768211455 x222) (= x83 (> x1086 0)) (= x222 (x677 x1124)))) x1427) x546))) x1672))
(assert (= 0 (x1487 20282409603651670423947251286015)))
(assert (x183 x377))
(assert (= (and x1094 x1091) x1580))
(assert (= 0 (x1487 115792089237316195423570985008687907853269984665640564039457584007913129639932)))
(assert (x218 x26 (- x665 x762)))
(assert (x183 x485))
(assert (x183 x605))
(assert (= (x1487 (x335 64 x896 0)) (x335 64 x896 0)))
(assert (x183 x842))
(assert (x584 (- x856 x1024)))
(assert (x218 x762 (- x1102 x1042)))
(assert (x602 x1102 x762 x665 x26))
(assert (= (x335 64 x385 0) (x1487 (x335 64 x385 0))))
(assert (= (=> (and (< (x401 x222 x856) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x297 0) (= (x401 x222 x856) x297) (= (* 1000000000000000000 x297) x1147) (not (> x856 x1404)) (>= x38 1) (not (>= (+ x782 x292) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x564 (- x1404 x1117)) x856) (= x613 x419) (>= 57896044618658097711785492504343953926634992332820282019728 x297) (= x782 (x818 x1147 x38)) (= x613 (x303 (+ x782 x292)))) x326) x1436))
(assert (x183 x447))
(assert (= (and x1466 (not x528)) x1446))
(assert (x183 x696))
(assert (x218 x222 (- x856 x1024)))
(assert (x602 x222 x856 x34 x1024))
(assert (> (x335 64 x631 0) 10000))
(assert (x1217 x693))
(assert (= x92 (and x985 x1408)))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639710))
(assert (= (x1247 (x335 64 x281 x633)) x281))
(assert (x183 x228))
(assert (x183 x1227))
(assert (x602 x222 x856 x26 x665))
(assert (> (x335 64 x1440 x412) 10000))
(assert (= x1041 (=> (and (= x1598 (= 0 x815)) (= x870 0)) (and (=> (and (and (= (= 0 x651) x1160) (= (x564 (- x1616 x1053)) x651)) (not x1598)) (and (=> (and x1160 (= x445 968)) x204) (=> (and (and x160 x1625 (= (x1383 x958) x1125) (<= x27 3) (= x815 x1532) (>= 4722366482869645213695 x1125) (>= 20282409603651670423947251286015 x6) (<= x477 4722366482869645213695) (= (= 0 x815) x1116) (= x124 (x505 x815)) (= x1158 x815) (= x795 x1337) (<= x878 4722366482869645213695) (= (x749 x958) x202) (= x107 (x505 x815)) (= x864 (not x1116)) (= x87 0) (= x815 x539) (<= x486 3) (= (x785 x958) x6) (= x815 x349) (= (= x107 x6) x160) (= x60 x815) (= x27 (x348 x815)) (>= 20282409603651670423947251286015 x124) (= x958 (x335 64 x815 0)) (= x1139 (= x795 x124)) (= x1276 (x335 64 x815 0)) (= x1625 (= x745 x486)) (= (x348 x815) x486) (<= x202 4722366482869645213695) (= x745 (x1298 x958)) (= x805 (x348 x815)) (= x226 (and x864 x133)) (= (x785 x1276) x63) (<= x805 3) x1139 (= (x785 x1276) x795) (= (x818 x1053 10000000000) x1624) (= x811 (x252 x1276)) (>= x107 0) (= x225 x815) (= x878 (x427 x1276)) (<= x795 20282409603651670423947251286015) (= (= x805 1) x1122) (= (or x1553 x1122) x133) (= (+ x1556 x1624) x477) (= x1556 (x564 (- x1125 x825))) (= (= x27 3) x1553) (<= 0 x124) (>= 20282409603651670423947251286015 x63) (= 1192 x921) (<= x745 3) (<= x107 20282409603651670423947251286015) (= x825 (x818 x1616 10000000000)) (>= 4722366482869645213695 x1556) (<= x811 4722366482869645213695)) (not x1160)) (and (=> (and (and (not x226) (= true x617)) (not x226)) x1381) (=> x226 x1212))))) (=> (and x1598 (= 968 x445)) x204)))))
(assert (x602 x665 x26 x1286 x1179))
(assert (x183 x1059))
(assert (= (x1487 (x335 64 x797 0)) (x335 64 x797 0)))
(assert (x1097 10000000000 (x818 x1189 10000000000)))
(assert (x218 x762 (- x1102 x1024)))
(assert (x602 x26 x665 x856 x222))
(assert (not (x1103 (x335 64 x815 0))))
(assert (x218 x1042 (- x483 x762)))
(assert (< 10000 (x335 64 x1111 0)))
(assert (=> (>= 10000 x1440) (= (x1487 x1440) 0)))
(assert (x584 (- x1179 x1317)))
(assert (< 10000 (x335 64 x1440 x916)))
(assert (= x835 (and (not x83) x312)))
(assert (x584 (- x26 x856)))
(assert (= (=> (and (and (<= 0 x393) (= x1546 (x236 x815)) (>= 1461501637330902918203684832716283019655932542975 x393) (>= x1546 0) (= x105 x815) (= x717 false) x1320 (= 10000000000 x588) (= (x1560 x1546) x773) (= x1447 x815) (= x393 (x236 x815)) (>= 1461501637330902918203684832716283019655932542975 x1546)) (and (and (= x659 false) (= x344 (* (x818 x795 10000000000) 10000000000)) (= x224 10000000000) (= (+ x344 x773) x380) (= 10000000000 x1452)) (and (= x1148 (* (x818 x63 10000000000) 10000000000)) (= 10000000000 x1437) (= x302 (- x380 x1148))))) x1329) x1502))
(assert (x183 x1570))
(assert (< (x335 64 x1440 x916) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x584 (- x856 x1286)))
(assert (= (or (and x1240 (not x469)) x1527) x705))
(assert (x584 (- x34 x1286)))
(assert (x1559 x1102 x762 x1286 x1179))
(assert (x183 x608))
(assert (< (x335 64 x1440 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x602 x255 x1317 x1286 x1179))
(assert (x1559 x34 x1024 x222 x856))
(assert (x218 x1179 (- x1286 x665)))
(assert (x183 x1063))
(assert (not (x1103 (x335 64 x896 0))))
(assert (x602 x1042 x483 x222 x856))
(assert (x602 x856 x222 x1179 x1286))
(assert (x1559 x34 x1024 x1317 x255))
(assert (x183 x938))
(assert (x183 x976))
(assert (x183 x260))
(assert (= x701 (=> (= (= (ite (> x1014 0) x1014 (ite (not (> x1246 x57)) 1 0)) 0) x1597) (and (=> (and x1597 (and (= x766 (< x1246 x1064)) (or (and x766 (= x259 x1246)) (and (= x1064 x259) (not x766))))) x1642) (=> (and (not x1597) (= x1544 x372)) x653)))))
(assert (x218 x856 (- x222 x1317)))
(assert (x183 x597))
(assert (= (=> (and (and (and (or (and (not x1517) (= x383 0)) (and x1517 (and (= x1033 (= x499 x1068)) (= x383 x1068) (>= 20282409603651670423947251286015 x499) (= x892 x763) x1033 (= (x1290 x1208) x1068) (= (x335 64 x1111 0) x1208) (>= 20282409603651670423947251286015 x1068) (= (x841 x1111) x499) (<= 0 x499)))) (and (= (x1464 x244) x680) (= x660 (x1290 x244)) (= (x72 x1440) x22) x580 (= (x282 1 x680) x485) (= x840 (x475 x244)) (= (x1138 x1111) x1305) (= x1111 x170) (= x510 (= x680 x1305)) (= x1111 x892) (<= 0 x1565) (>= 20282409603651670423947251286015 x1565) (= x679 0) (= false x1297) (>= 127 x1492) (<= x660 20282409603651670423947251286015) (= x1641 x892) (>= 4722366482869645213695 x840) (= (= x485 0) x1517) (<= x1305 3) (>= x22 1) (= (x841 x1111) x1565) (<= x1589 4722366482869645213695) (= x1000 3002343453) (= x598 352) (= 0 x684) (= x244 (x335 64 x1111 0)) (= x885 x892) x510 (= x1589 (x1266 x244)) (= false x1269) (>= 3 x680) (>= 127 x1492) (= (= x1565 x660) x580))) (and (= x1613 (x841 x385)) (= false x734) (= x906 x385) (= false x1471) (= (x1290 x1312) x1648) (>= x803 1) (>= 20282409603651670423947251286015 x1648) (= false x1027) x165 (= x165 (= x1613 x1648)) (>= 127 x920) (= x448 false) (= x1382 x41) (= x1312 (x335 64 x385 0)) (= x1648 x560) (= x41 x385) (>= 20282409603651670423947251286015 x1613) (= x833 false) (= (x72 x1440) x803) (= x687 false) (= x913 68) (>= 127 x920) (= x216 x170) (= 1889567281 x408) (>= x1613 0))) (and (= x1412 x184) (= x570 false) (= false x191) (= 36 x890) (= x906 x216) (= x1567 false) x1412 (= x198 false))) x1012) x116))
(assert (x183 x1418))
(assert (x836 x238 2))
(assert (x787 x1584))
(assert (= (=> (and (= x372 x601) (= (x282 340282366920938463463374607431768211455 x1064) x525)) x982) x188))
(assert (x1559 x1102 x762 x1317 x255))
(assert (= (and x744 (not x423)) x1484))
(assert (x602 x255 x1317 x1179 x1286))
(assert (x602 x1179 x1286 x255 x1317))
(assert (x346 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= x462 (and x1674 x500)))
(assert (x602 x483 x1042 x1102 x762))
(assert (x584 (- x1042 x1102)))
(assert (x602 x665 x26 x34 x1024))
(assert (= x747 (=> (= x1063 x758) x258)))
(assert (x183 x403))
(assert (x584 (- x1024 x255)))
(assert (x584 (- x1179 x1102)))
(assert (x183 x347))
(assert (x218 x34 (- x1024 x222)))
(assert (= (or x548 x1485 x604) x416))
(assert (x218 x34 (- x1024 x1042)))
(assert (x183 x1583))
(assert (x183 x769))
(assert (x218 x1102 (- x762 x255)))
(assert (x584 (- x1317 x856)))
(assert (x584 (- x856 x483)))
(assert (x218 x762 (- x1102 x483)))
(assert (x169 (x174 x896)))
(assert (= (or x1115 x582) x535))
(assert (x183 x287))
(assert (= x398 (or x1582 x433)))
(assert (x183 x843))
(assert (x183 x292))
(assert (x183 x1384))
(assert (x584 (- x762 x856)))
(assert (x1559 x762 x1102 x1286 x1179))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639615))
(assert (x584 (- x762 x26)))
(assert (= x351 (=> (and (and (= (x818 x272 1000000000000000000) x1474) (= x138 (x335 64 x1440 x647)) (= x916 (x335 64 x1440 3)) (not (< x84 x193)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 x1286 x1179)) (= x934 1) (>= 127 x429) (not (> x1366 x1477)) (= x960 (x335 64 x1440 x916)) (= x1105 (x335 64 x1440 2)) (= x1440 x1301) (= (x564 (- x1480 584)) x173) (>= x541 1) (= x1480 (x303 (+ 584 x577))) (= 584 x783) (= (x401 x1286 x1179) x272) (not (> x1286 x84)) (= x127 100) x1435 (= (x564 (- x748 x1286)) x1472) (= x375 x1367) (= (x278 x1440) x70) (= 0 x904) (not (> x1286 x748)) (>= 20282409603651670423947251286015999999999999999999 x1179) (= x577 (x775 388)) (= x954 false) (= (x282 26959946667150639794667015087019630673637144422540572481103610249215 x693) x434) (= (x473 420) x693) (>= x84 1) (>= 127 x429) (= (x1049 x1050) x84) (= x1422 x1503) (= 599290589 x1511) (= x748 (x935 x138)) (= x593 false) (= x193 (x564 (- x84 x1286))) (= x1422 (x713 x1545)) (not (< x748 x1472)) (>= 20282409603651670423947251286015999999999999999999 x272) (= x629 false) (= (x1663 x876) x1366) (= x35 x1286) (= 388 x260) (= x1440 x219) (= x173 100) (= (x335 64 x1440 2) x106) (= x287 (+ 16156842317565293874272834530371880720966471053262404558597773956279093428224 x434)) (= x587 x35) (= x42 (x1522 584)) (= x541 (x72 x1545)) (= x361 584) (not (< x1477 x1366)) (>= 20282409603651670423947251286015999999999999999999 x375) (= false x531) (= (= 0 x42) x1178) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1419) (= x1477 (x303 (+ x1286 x1366))) (= x1050 (x335 64 x1440 2)) (>= x748 1) (= x1435 (= x1179 x1367)) (= (x335 64 x1440 3) x647) (<= 0 x375) (= (x335 64 x1440 2) x876) (= x246 520) (>= x272 0)) (or (and x1178 (and (= x1153 (x72 x1545)) (= x1235 1) (<= 1 x1153))) (not x1178))) x961)))
(assert (= (=> (= (= x1418 x1357) x806) (and (=> (and (and (or (and (not x231) (and (= (x401 x1102 x762) x1550) (<= 0 x1550) (= (x818 x1550 1000000000000000000) x126) (= x762 (x564 (- x1418 x1357))) (not (> x762 x1418)) (< (x401 x1102 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x126 x642) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1550))) (and x231 (= 0 x642))) (= (= 0 x1102) x231)) (not x806)) x932) (=> (and x806 (= x691 0)) x452))) x1647))
(assert (x218 x856 (- x222 x1286)))
(assert (= (or x862 x739) x210))
(assert (x218 x255 (- x1317 x665)))
(assert (x1097 10000000000 (x818 x1349 10000000000)))
(assert (x1559 x856 x222 x34 x1024))
(assert (x1559 x1286 x1179 x1042 x483))
(assert (x1559 x1317 x255 x34 x1024))
(assert (= (x257 (x335 64 x896 71)) 71))
(assert (x218 x762 (- x1102 x1286)))
(assert (= (x1334 (x335 64 x896 72)) 64))
(assert (x602 x34 x1024 x1179 x1286))
(assert (= (x257 (x335 64 x896 61)) 61))
(assert (x183 x1622))
(assert (= 64 (x1334 (x335 64 x896 61))))
(assert (> (x335 64 x281 x12) 10000))
(assert (x183 x1019))
(assert (x602 x222 x856 x255 x1317))
(assert (x584 (- x665 x1024)))
(assert (= x150 (and x1060 x13)))
(assert (x169 (x174 x271)))
(assert (not (x1103 (x335 64 x1440 x916))))
(assert (x1097 1000000000000000000 x155))
(assert (= x550 (and x479 x776)))
(assert (x1339 x375))
(assert (x1103 20282409603651670423947251286015999999999999999999))
(assert (x183 x67))
(assert (x218 x1179 (- x1286 x26)))
(assert (x1232 x330))
(assert (x1103 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (x787 x1349))
(assert (x602 x1042 x483 x26 x665))
(assert (x1103 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x218 x255 (- x1317 x1024)))
(assert (x183 x892))
(assert (x584 (- x26 x222)))
(assert (x1559 x1042 x483 x1286 x1179))
(assert (= x1440 (x1247 (x335 64 x1440 2))))
(assert (x602 x1179 x1286 x1024 x34))
(assert (x183 x1499))
(assert (x584 (- x255 x1042)))
(assert (x183 x187))
(assert (x183 x689))
(assert (x183 x361))
(assert (x183 x1243))
(assert (> (x335 64 x1440 3) 10000))
(assert (x183 x1537))
(assert (x183 x606))
(assert (x1559 x1024 x34 x1042 x483))
(assert (x1559 x665 x26 x1102 x762))
(assert (= x1541 (or x824 x511)))
(assert (x1232 x1678))
(assert (x584 (- x1024 x1042)))
(assert (x1559 x762 x1102 x1042 x483))
(assert (= x433 (and x517 x942)))
(assert (x341 x1550 1000000000000000000))
(assert (x602 x665 x26 x483 x1042))
(assert (x602 x34 x1024 x762 x1102))
(assert (> (x335 64 x1352 0) 10000))
(assert (= (x1487 115792089237316195423570985008687907853269984665640564039457584007913129639714) 0))
(assert (x584 x665))
(assert (< (x335 64 x1440 60) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x218 x34 (- x1024 x483)))
(assert (x183 x939))
(assert (= x945 (or x875 x92)))
(assert (< (x335 64 x271 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1103 (x335 64 x716 2))))
(assert (x602 x1042 x483 x1024 x34))
(assert (= (and x1288 x802) x471))
(assert (x584 (- x1024 x665)))
(assert (= (or x760 x881) x861))
(assert (x183 x1562))
(assert (x218 x1102 (- x762 x34)))
(assert (= x342 (and x476 x1609)))
(assert (x584 (- x1024 x1102)))
(assert (x183 x1568))
(assert (= (=> (and (= (= x1286 0) x528) (= x1286 (ite (> x347 x596) x596 x347))) (and (=> x528 x116) (=> (and (and (<= x235 340282366920938463463374607431768211455) (= (x1483 x211) x1271) (= x109 (= x712 x1042)) (= (x912 x310) x1042) (= x235 (x1009 x625)) (= x625 (x335 64 x1440 60)) (= x712 (x174 x281)) (>= x712 0) (= x211 (x335 64 x281 x633)) (= (+ x625 2) x633) (>= x1286 1) (= (x1016 x1239) x605) (>= 20282409603651670423947251286015 x1042) (= x1151 0) (= (x564 (- x1064 x235)) x327) (<= x712 20282409603651670423947251286015) (= (x335 64 x281 0) x310) (= (> x327 0) x135) x109 (= (+ x625 1) x1239) (= x615 x1052)) (not x528)) (and (=> (and x135 (and (or (and (= x649 x391) x1080) (and (not x1080) (= x649 (ite (= x235 x1064) 1 0)))) (and (= x391 (ite (= x26 0) (ite (= 0 x26) 1 0) (ite (= 0 x38) 1 0))) (<= x26 340282366920938463463374607431768211455) (= x1080 (< 0 x391)) (= (x677 x625) x26)))) x848) (=> (and (= x605 x977) (not x135)) x822))))) x1343))
(assert (x584 (- x34 x856)))
(assert (= (x1487 10000000000) 0))
(assert (x183 x984))
(assert (x584 (- x255 x665)))
(assert (x584 (- x1317 x483)))
(assert (x602 x1286 x1179 x856 x222))
(assert (x183 x1042))
(assert (= (x1487 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (x218 x665 (- x26 x34)))
(assert (< (x335 64 x281 61) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x341 x1501 10000000000))
(assert (= (x1247 (x335 64 x456 0)) x456))
(assert (= (and x420 x703) x1620))
(assert (= (x1487 2129096990) 0))
(assert (x602 x1286 x1179 x1102 x762))
(assert (= (and (not x231) x300) x1274))
(assert (= (x1247 (x335 64 x1358 0)) x1358))
(assert (x183 x1067))
(assert (x787 x779))
(assert (= (=> (and (or x814 (not x814)) (= x814 (= x1544 x372))) x188) x653))
(assert (x602 x1286 x1179 x483 x1042))
(assert (x218 x762 (- x1102 x665)))
(assert (= x281 (x1247 (x335 64 x281 x12))))
(assert (x169 (x857 x1352)))
(assert (= (=> (and (= x642 x691) (= (x335 64 x281 x12) x364)) x452) x932))
(assert (x1559 x222 x856 x34 x1024))
(assert (x183 x781))
(assert (x584 (- x1024 x26)))
(assert (x602 x1042 x483 x1317 x255))
(assert (x602 x1042 x483 x1102 x762))
(assert (x183 x1093))
(assert (x602 x483 x1042 x255 x1317))
(assert (x1559 x26 x665 x1286 x1179))
(assert (x584 (- x665 x255)))
(assert (x183 x838))
(assert (= x1440 (x1247 (x335 64 x1440 x647))))
(assert (x1481 (x236 x1352)))
(assert (x218 x34 (- x1024 x665)))
(assert (x218 x1179 (- x1286 x856)))
(assert (x602 x1024 x34 x1179 x1286))
(assert (x183 x1271))
(assert (x218 x222 (- x856 x1317)))
(assert (x218 x1024 (- x34 x665)))
(assert (x218 x856 (- x222 x34)))
(assert (= (x257 (x335 64 x797 0)) 0))
(assert (x183 x405))
(assert (x183 x158))
(assert (x816 x358))
(assert (= (x257 (x335 64 x896 x1197)) x1197))
(assert (x183 x305))
(assert (x183 x1410))
(assert (x183 x271))
(assert (x602 x762 x1102 x222 x856))
(assert (x218 x222 (- x856 x255)))
(assert (= (=> (= x776 (= x984 x601)) (and (=> (and x776 (= 0 x1330)) x136) (=> (and (not x776) (and (or (and (= 0 x1011) x132) (and (and (= (x401 x1317 x255) x1561) (= x1011 x939) (not (< x601 x255)) (<= 0 x1561) (<= x1561 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x939 (x818 x1561 1000000000000000000)) (< (x401 x1317 x255) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x255 (x564 (- x601 x984)))) (not x132))) (= x132 (= 0 x1317)))) x778))) x982))
(assert (x183 x22))
(assert (= (=> (and (<= x378 255) (= x745 x163) (= x658 (and x117 x1191)) (= (= x378 3) x104) (= x313 (= x745 1)) (= x1428 (not x239)) (= x524 (not x104)) (= (x1298 x1276) x378) (= (= 3 x745) x1433) (= x668 x815) (= x239 (= x378 1)) (= x1191 (and x524 x1428)) (= (or x1433 x313) x117)) (and (=> (and (and (not x658) (= true x1183)) (not x658)) x989) (=> x658 x223))) x1329))
(assert (x183 x523))
(assert (x584 (- x1042 x1317)))
(assert (x183 x281))
(assert (= (and (not x1249) x1579) x965))
(assert (x183 x27))
(assert (= 64 (x1334 (x335 64 x1358 0))))
(assert (x341 x1584 1000000000000000000))
(assert (x1559 x856 x222 x1102 x762))
(assert (= 64 (x1334 (x335 64 x716 3))))
(assert (= (x1247 (x335 64 x1440 x916)) x1440))
(assert (= (and x1296 x1667) x1272))
(assert (x218 x1042 (- x483 x1024)))
(assert (x1097 10000000000 x1227))
(assert (x602 x1042 x483 x34 x1024))
(assert (x183 x1375))
(assert (x218 x1317 (- x255 x665)))
(assert (x218 x1024 (- x34 x26)))
(assert (x1559 x34 x1024 x1102 x762))
(assert (= (x1334 (x335 64 x896 71)) 64))
(assert (x183 x603))
(assert (x183 x691))
(assert (= (=> (and (or (not x780) x780) (= (= x419 x292) x780)) x382) x326))
(assert (not (x1103 (x335 64 x1440 x1293))))
(assert (x584 (- x26 x34)))
(assert (x1559 x255 x1317 x26 x665))
(assert (x584 (- x222 x1042)))
(assert (x346 x680))
(assert (= (or x242 x550) x467))
(assert (x183 x408))
(assert (x836 x693 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= x502 (or x1162 x101)))
(assert (= x1527 (and x469 x1240)))
(assert (x584 (x818 x720 10000000000)))
(assert x1344)
(assert (x584 x1179))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x896 0)))
(assert (x183 x25))
(assert (x218 x665 (- x26 x483)))
(assert (x584 (- x1286 x26)))
(assert (x602 x255 x1317 x1042 x483))
(assert (= x176 (and x1295 x1580)))
(assert (x584 (- x34 x762)))
(assert (x584 (- x26 x1286)))
(assert (x602 x1317 x255 x1042 x483))
(assert (x183 x127))
(assert (x584 1000000000000000000))
(assert (x602 x1024 x34 x222 x856))
(assert (x183 x358))
(assert (x584 (- x856 x1179)))
(assert (x1559 x665 x26 x34 x1024))
(assert (= x1586 (and x463 (not x44))))
(assert (= x463 (or x1015 x884)))
(assert (= (=> (and (<= x1067 3) (= false x1496) (= x438 (= x1067 3)) (<= x1321 3) (= x443 x1131) (= (= 2 x1321) x280) (= x663 true) (= x1572 (or x438 x280)) (= x417 x443) (= x1321 (x348 x896)) (= (x348 x896) x1067) (= x1004 0)) (and (=> (and (and (not x1572) (= true x866)) (not x1572)) x288) (=> x1572 x232))) x710))
(assert (x183 x1024))
(assert (x584 (- x1042 x665)))
(assert (x341 x272 1000000000000000000))
(assert (x602 x1317 x255 x483 x1042))
(assert (x183 x1117))
(assert (= x1090 (=> (and (and (= (+ x562 x1040) x910) (= 10000000000 x119) (= x562 (* (x818 x1189 10000000000) 10000000000))) (and x476 (= x1040 (x1062 x707)) (= x110 false) (= (x236 x1352) x1371) (= x1352 x1608) (= x1189 (x1402 x1352)) (= x1154 x1352) (= 10000000000 x1133) (<= 0 x707) (<= x1189 20282409603651670423947251286015) (>= 1461501637330902918203684832716283019655932542975 x1371) (<= x707 1461501637330902918203684832716283019655932542975) (>= x1371 0) (= x1352 x575) (= (x236 x1352) x707) (>= x1189 0))) x747)))
(assert (x183 x679))
(assert (x183 x359))
(assert (x183 x1424))
(assert (x218 x762 (- x1102 x34)))
(assert (x346 x130))
(assert (x602 x1024 x34 x1102 x762))
(assert (= x247 (and x13 (not x1060))))
(assert (x183 x641))
(assert (= x1440 (x1247 (x335 64 x1440 60))))
(assert (x1559 x856 x222 x1286 x1179))
(assert (x183 x383))
(assert (x218 x222 (- x856 x665)))
(assert (x183 x1306))
(assert (= x881 (and x1104 (not x1631))))
(assert (x1559 x483 x1042 x1317 x255))
(assert (x218 x483 (- x1042 x1317)))
(assert (x1069 x1214 x38))
(assert (x602 x483 x1042 x34 x1024))
(assert (x183 x783))
(assert (= (=> (and (and (= 584 x56) (= x354 (x1522 584)) (= 584 x1655) (= 584 x1019) (= x241 (< 0 x354))) (or (not x241) (and x241 (and (<= x821 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x821 32) (= x893 (x591 616)) (= 1 x893) (= x821 (x1522 584)))))) x1166) x961))
(assert (x183 x391))
(assert (x584 (- x34 x483)))
(assert (x183 x1248))
(assert (= (and x1468 x1632) x1316))
(assert (x183 x520))
(assert (x218 x1317 (- x255 x762)))
(assert (x218 x26 (- x665 x1024)))
(assert (= (=> (and (= x1528 (= 3 x265)) (= x68 x815) (= (x348 x815) x265) (<= x265 3) (= x113 (= x781 2)) (= (not x1311) x1135) (<= x781 3) (= x781 (x348 x815)) (= x1320 (and x1135 x567)) (= 0 x484) (= (= x815 0) x1311) (= x815 x636) (= (or x1528 x113) x567)) (and (=> (and (and (not x1320) (= true x1363)) (not x1320)) x1329) (=> x1320 x1502))) x1381))
(assert (x602 x1286 x1179 x762 x1102))
(assert (x584 x762))
(assert (x183 x193))
(assert (x183 x921))
(assert (x183 x70))
(assert (x584 (x818 x1501 10000000000)))
(assert (x584 (- x1102 x1286)))
(assert (= 0 (x257 (x335 64 x1352 0))))
(assert (x584 (- x665 x762)))
(assert (x183 x748))
(assert (x218 x255 (- x1317 x856)))
(assert (x183 x1349))
(assert (= x1088 (and x366 (not x1581))))
(assert (x183 x6))
(assert (x1559 x1286 x1179 x34 x1024))
(assert (x183 x529))
(assert (= (x1334 (x335 64 x1440 60)) 64))
(assert (= x801 (and x1194 x946)))
(assert (x584 (- x255 x1286)))
(assert (x218 x856 (- x222 x1179)))
(assert (x183 x642))
(assert (x584 (- x26 x762)))
(assert (x183 x632))
(assert (x584 10000000000))
(assert (x183 x694))
(assert (= x382 (=> (and (= (x282 340282366920938463463374607431768211455 x1064) x694) (= x419 x1418)) x1647)))
(assert (= (=> (and (= x1310 x340) (= x411 (x335 64 x281 x633))) x628) x522))
(assert (x584 (- x1317 x26)))
(assert (x341 x959 10000000000))
(assert (x183 x762))
(assert (x602 x222 x856 x1317 x255))
(assert (x218 x1042 x483))
(assert (x183 x1086))
(assert (x218 x1102 (- x762 x1317)))
(assert (= (=> (and (and (<= x902 1461501637330902918203684832716283019655932542975) (= x1084 0) (<= 0 x704) (>= 1461501637330902918203684832716283019655932542975 x216) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x704) (<= 1 x1545) (= x216 x1347) (>= x175 0) (not (= x1545 x1440)) x571 (>= 1461501637330902918203684832716283019655932542975 x716) (not (= x716 x1440)) (>= x296 0) (= x1500 (> (x72 x1545) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x17) x390 (>= 1461501637330902918203684832716283019655932542975 x1440) (= (> (x72 x1440) 0) x390) (<= x1545 1461501637330902918203684832716283019655932542975) (= x1336 false) (= 3247395738 x301) (= 36 x330) (<= 0 x199) (not (= x1545 x716)) (<= x644 1461501637330902918203684832716283019655932542975) (<= 0 x902) (= false x1497) (= x882 3) (<= x296 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x159 1461501637330902918203684832716283019655932542975) (<= x175 1461501637330902918203684832716283019655932542975) (<= 0 x353) (= x1440 x899) (<= 1 x216) (= false x1668) (<= 0 x17) (<= x1077 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x199) (<= 0 x1077) (>= x1373 0) (>= 1461501637330902918203684832716283019655932542975 x1680) (= x1669 0) (<= x353 4294967295) (<= x314 1461501637330902918203684832716283019655932542975) (>= x314 0) (>= x76 0) (<= x1373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x716 1) (<= x76 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x644 0) (= x216 x708) (= x1176 false) (= false x114) (= true x1289) x1500 (= (< 0 (x72 x716)) x571) (<= 1 x1440)) (and (and (= x754 false) (= false x756) (= x40 x82) (>= x556 1) (= x1253 68) (<= x879 127) (= x709 x621) (= x271 x82) (= x1007 (= x141 x709)) (= false x947) (>= 127 x879) (= (x335 64 x271 0) x667) (= x293 false) (= false x88) (= x746 x216) (= false x530) (<= x709 20282409603651670423947251286015) (= (x72 x1440) x556) (>= 20282409603651670423947251286015 x141) (= x709 (x912 x667)) (= (x174 x271) x141) (= x1347 x271) x1007 (<= 0 x141) (= 1889567281 x869)) (and (and x1187 (= x953 (x749 x1540)) (= (x335 64 x1358 0) x1540) (= x722 (x912 x1540)) x1594 (>= 20282409603651670423947251286015 x799) (= (= 0 x195) x1060) (<= 0 x799) (= 0 x1622) (= (x348 x1358) x1140) (= (x72 x1440) x506) (= x444 false) (= x1358 x1389) (= x1389 x1617) (= x746 x1358) (>= 127 x1306) (<= x1227 4722366482869645213695) (<= x1140 3) (>= 3 x1583) (= (x174 x1358) x799) (= (x1298 x1540) x1583) (= false x772) (= x67 352) (= x195 (x282 1 x1583)) (= 3002343453 x519) (= x1227 (x1383 x1540)) (= x179 x1389) (= (= x722 x799) x1187) (<= x1306 127) (<= x722 20282409603651670423947251286015) (>= 4722366482869645213695 x953) (= 0 x1032) (= x1594 (= x1140 x1583)) (>= x506 1)) (or (and (= x54 0) (not x1060)) (and (and (<= 0 x1221) (= (x174 x1358) x1221) (= x1389 x611) (= (= x1221 x97) x683) (= (x335 64 x1358 0) x630) x683 (<= x97 20282409603651670423947251286015) (= x97 x54) (= (x912 x630) x97) (>= 20282409603651670423947251286015 x1221)) x1060))))) x201) x1333))
(assert (x183 x130))
(assert (= (or x208 x4) x1674))
(assert (= x281 (x1247 (x335 64 x281 61))))
(assert (= (x1247 (x335 64 x797 0)) x797))
(assert (> (x335 64 x1440 x1293) 10000))
(assert (x602 x34 x1024 x856 x222))
(assert (x183 x253))
(assert (x584 (- x222 x1179)))
(assert (x602 x1179 x1286 x856 x222))
(assert (x183 x578))
(assert (x218 x1179 (- x1286 x762)))
(assert (x169 (x174 x1358)))
(assert (x602 x665 x26 x222 x856))
(assert (x584 (- x1179 x483)))
(assert (x1559 x26 x665 x1317 x255))
(assert (x183 x1164))
(assert (=> (<= x456 10000) (= (x1487 x456) 0)))
(assert (x584 (- x1179 x856)))
(assert (x183 x1425))
(assert (x584 x222))
(assert (x602 x26 x665 x1102 x762))
(assert (x602 x1102 x762 x1317 x255))
(assert (x602 x1042 x483 x255 x1317))
(assert (= 0 (x1487 20282409603651670423947251286015999999999999999999)))
(assert (x183 x1153))
(assert (x169 (x505 x896)))
(assert (not (x1103 (x335 64 x716 3))))
(assert (x183 x368))
(assert (x218 x222 x856))
(assert (= (and x806 x535) x1015))
(assert (> (x335 64 x716 3) 10000))
(assert (x218 x1024 (- x34 x762)))
(assert (= (x1487 (+ x625 2)) (x1487 x625)))
(assert (x602 x1179 x1286 x1042 x483))
(assert (x183 x41))
(assert (x346 340282366920938463463374607431768211456))
(assert (x218 x483 (- x1042 x34)))
(assert (x584 (- x222 x26)))
(assert (= (x1487 (+ x1124 1)) (x1487 x1124)))
(assert (x183 x129))
(assert (= (and x1580 (not x1295)) x671))
(assert (x584 (- x856 x665)))
(assert (= 64 (x1334 (x335 64 x1111 0))))
(assert (x183 x927))
(assert (=> (>= 10000 x1545) (= 0 (x1487 x1545))))
(assert (x1559 x665 x26 x1317 x255))
(assert (x584 (- x1042 x762)))
(assert (x602 x34 x1024 x26 x665))
(assert (= (and x357 x850) x1596))
(assert (x1097 10000000000 (x818 x959 10000000000)))
(assert (not (x1103 (x335 64 x1440 3))))
(assert (x602 x34 x1024 x1317 x255))
(assert (x218 x1042 (- x483 x34)))
(assert (> (x335 64 x456 0) 10000))
(assert (= (x1247 (x335 64 x271 0)) x271))
(assert (x1054 x238))
(assert (x183 x97))
(assert (x584 (- x1042 x255)))
(assert (< 10000 (x335 64 x281 0)))
(assert (x1559 x665 x26 x1042 x483))
(assert (x816 x1583))
(assert (= 0 (x257 (x335 64 x631 0))))
(assert (x1559 x665 x26 x1286 x1179))
(assert (= x823 (and x1541 x1597)))
(assert (x341 x720 10000000000))
(assert (x584 (x818 x1349 10000000000)))
(assert (x183 x893))
(assert (x602 x856 x222 x1024 x34))
(assert (x183 x1111))
(assert (x584 x1024))
(assert (x584 (- x222 x762)))
(assert (x183 x259))
(assert (x183 x1411))
(assert (x602 x255 x1317 x34 x1024))
(assert (x218 x1179 (- x1286 x1317)))
(assert (= x648 (or x1664 x342)))
(assert (x584 (- x1102 x1024)))
(assert (x584 (- x483 x1102)))
(assert (x584 (- x1024 x222)))
(assert (< (x335 64 x1358 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x584 (- x762 x255)))
(assert (x584 (- x1179 x26)))
(assert (x183 x63))
(assert (< 10000 (x335 64 x1440 x647)))
(assert (< (x335 64 x815 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x183 x933))
(assert (x584 (- x1179 x1042)))
(assert (= (or x1076 x1586) x1466))
(assert (x183 x955))
(assert (x183 x716))
(assert (x602 x1024 x34 x762 x1102))
(assert (x584 (- x1042 x34)))
(assert (x584 (- x1179 x34)))
(assert (= (and (not x658) x172) x897))
(assert (x218 x255 (- x1317 x762)))
(assert (x602 x1024 x34 x1286 x1179))
(assert (x584 (- x255 x1102)))
(assert (x183 x1184))
(assert (< (x335 64 x1440 x1293) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x602 x1179 x1286 x26 x665))
(assert (x584 x155))
(assert (x218 x1042 (- x483 x1179)))
(assert (x584 (- x26 x1102)))
(assert (=> (>= 10000 x385) (= (x1487 x385) 0)))
(assert (= (x1334 (x335 64 2 69)) 64))
(assert (x183 x144))
(assert (x584 (- x26 x1042)))
(assert (= (x1334 (x335 64 x456 0)) 64))
(assert (x584 (- x1102 x222)))
(assert (= (and x1316 (not x1280)) x824))
(assert (=> (>= 10000 x896) (= (x1487 x896) 0)))
(assert (x836 x358 2))
(assert (x602 x1286 x1179 x255 x1317))
(assert (= x89 (and x1194 (not x946))))
(assert (x602 x1317 x255 x26 x665))
(assert (< 10000 (x335 64 x281 61)))
(assert (x787 x1561))
(assert (= x628 (=> (and (or x500 (not x500)) (and (= (x303 (+ x1051 x340)) x151) (= (x5 x1649) x1051) (= x500 (= x340 0)) (= x1649 (x335 64 x281 61)) (not (>= (+ x1051 x340) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x140)))
(assert (x1559 x856 x222 x1042 x483))
(assert (x602 x856 x222 x1317 x255))
(assert (x584 (- x665 x1042)))
(assert (x602 x34 x1024 x1102 x762))
(assert (x584 (- x665 x483)))
(assert (= x223 (=> (and (and (= x815 x1173) (= 10000000000 x1444) (= (x99 x815) x1671) (>= x779 0) (= x815 x765) (= x103 (x561 x400)) (= x815 x1588) (>= x1671 0) (>= 1461501637330902918203684832716283019655932542975 x400) (= x779 (x153 x815)) (>= x400 0) (= (x99 x815) x400) x658 (= x1110 false) (>= 20282409603651670423947251286015 x779) (>= 1461501637330902918203684832716283019655932542975 x1671)) (and (= (+ x95 x103) x125) (= 10000000000 x98) (= x95 (* (x818 x779 10000000000) 10000000000)))) x989)))
(assert (= 64 (x1334 (x335 64 x815 0))))
(assert (= (or x1385 x1479) x399))
(assert (= x839 (and (not x436) x416)))
(assert (x602 x1102 x762 x856 x222))
(assert (x602 x762 x1102 x1042 x483))
(assert (x584 (- x1286 x255)))
(assert (x218 x483 (- x1042 x665)))
(assert (x1559 x762 x1102 x222 x856))
(assert (x218 x665 (- x26 x222)))
(assert (= 0 (x257 (x335 64 x896 0))))
(assert (x584 (- x1179 x665)))
(assert (= (x1487 (x335 64 x716 3)) (x335 64 x716 3)))
(assert (x183 x202))
(assert (x218 x255 (- x1317 x222)))
(assert (x183 x1286))
(assert (x218 x255 (- x1317 x1286)))
(assert (= (or x336 x810) x576))
(assert (x1559 x34 x1024 x26 x665))
(assert (x218 x1286 (- x1179 x34)))
(assert (x183 x1318))
(assert (x584 x856))
(assert (x1559 x762 x1102 x34 x1024))
(assert (x183 x924))
(assert (> (x335 64 x281 x633) 10000))
(assert (x183 x878))
(assert (x602 x1102 x762 x1179 x1286))
(assert (= x860 (and x1494 (not x814))))
(assert (< (x335 64 x716 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x787 x1501))
(assert (x1097 10000000000 (x818 x63 10000000000)))
(assert (x183 x164))
(assert (= (=> (and x1348 (= (= x1616 x23) x1449) (= (x348 x896) x352) (= x470 (x303 (+ x1474 x38))) (= (= x309 x1229) x1348) (= x464 x443) (= x410 x443) x1449 (>= x1229 0) (= x443 x900) (= x443 x50) (>= 20282409603651670423947251286015 x309) (= x1616 (x912 x1520)) (= true x887) (= (x174 x896) x1229) (= (x912 x1123) x863) (= (x912 x1123) x309) (>= 20282409603651670423947251286015 x678) (= (= x352 1) x1430) (= (x303 (+ x38 x1474)) x1374) (= x1631 (or x1168 x1430)) (= x1123 (x335 64 x896 0)) (= x678 x328) (<= x1229 20282409603651670423947251286015) (<= x590 3) (= (+ x309 x1474) x678) (<= x1616 20282409603651670423947251286015) (= x23 (x174 x896)) (= x1520 (x335 64 x896 0)) (= x590 (x348 x896)) (= x1129 0) (not (>= (+ x1474 x38) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x863 20282409603651670423947251286015) (>= 20282409603651670423947251286015 x23) (= x474 x443) (>= 3 x352) (<= 0 x23) (= (= 3 x590) x1168) (= x206 false)) (and (=> (and (not x1631) (and (not x1631) (= x1665 true))) x710) (=> x1631 x266))) x1166))
(assert (x602 x1024 x34 x26 x665))
(assert (x584 (- x1317 x1286)))
(assert (= (x1247 (x335 64 x1111 0)) x1111))
(assert (x218 x34 x1024))
(assert (x787 x38))
(assert (x183 x35))
(assert (x218 x483 (- x1042 x222)))
(assert (x602 x1024 x34 x1042 x483))
(assert (x183 x543))
(assert (x1559 x34 x1024 x1042 x483))
(assert (not (x1103 (x335 64 x896 71))))
(assert (< 10000 (x335 64 x815 0)))
(assert (= (or x581 x1484) x1264))
(assert (x183 x692))
(assert (x183 x1246))
(assert (x787 x1189))
(assert (x1559 x255 x1317 x34 x1024))
(assert (= (and x1674 (not x500)) x943))
(assert (x183 x1506))
(assert (x1097 10000000000 (x818 x1501 10000000000)))
(assert (x218 x222 (- x856 x1042)))
(assert (=> (<= x716 10000) (= (x1487 x716) 0)))
(assert (x602 x762 x1102 x1024 x34))
(assert (= x662 (or x643 x648 x1596)))
(assert (= x312 (and x1427 x1186)))
(assert (not (x1103 (x335 64 x1358 0))))
(assert (= x631 (x1247 (x335 64 x631 0))))
(assert (x1097 1000000000000000000 x297))
(assert (= x546 (=> (= x19 (= 0 (ite (> x451 0) x451 (ite (not (< x1117 x1246)) 1 0)))) (and (=> (and (not x19) (= x419 x292)) x326) (=> (and (and (or (and (= x1404 x1064) (not x1408)) (and x1408 (= x1404 x1246))) (= (< x1246 x1064) x1408)) x19) x1436)))))
(assert (x584 (- x1317 x1179)))
(assert (x218 x1024 (- x34 x1317)))
(assert (x183 x904))
(assert (x218 x1317 (- x255 x856)))
(assert (= 64 (x1334 (x335 64 x631 0))))
(assert (x183 x62))
(assert (x183 x1474))
(assert (x602 x26 x665 x1042 x483))
(assert (x1559 x1179 x1286 x26 x665))
(assert (x169 (x174 x281)))
(assert (x816 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x346 x693))
(assert (= (x335 64 x896 72) (x1487 (x335 64 x896 72))))
(assert (x183 x1265))
(assert (= x1440 (x1247 (x335 64 x1440 x1293))))
(assert (= x716 (x1247 (x335 64 x716 2))))
(assert (= x366 (or x247 x150)))
(assert (x218 x1102 (- x762 x1179)))
(assert (x1054 x680))
(assert (x584 (- x1179 x1024)))
(assert (= x1109 (or x839 x730)))
(assert (x1559 x1286 x1179 x1317 x255))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639619))
(assert (x584 (- x665 x34)))
(assert (x183 x1236))
(assert (x218 x255 (- x1317 x1179)))
(assert (x183 x1678))
(assert (x1103 47223664828696452136950000000000))
(assert (x584 (- x762 x1042)))
(assert (x183 x1472))
(assert (x183 x372))
(assert (= (or x1651 x1095) x1443))
(assert (x218 x665 (- x26 x255)))
(assert (= (x257 (x335 64 x1440 x916)) x916))
(assert (x183 x856))
(assert (x1232 x43))
(assert (x584 (- x255 x856)))
(assert (x346 x358))
(assert (x1103 340282366920938463463374607431768211455))
(assert (x183 x1419))
(assert (x218 x1179 (- x1286 x1024)))
(assert (x218 x856 (- x222 x762)))
(assert (x584 (- x1317 x1024)))
(assert (not (x1103 (x335 64 x896 61))))
(assert (x218 x1317 (- x255 x1179)))
(assert (x183 x803))
(assert (x584 (- x1024 x1179)))
(assert (x218 x483 (- x1042 x26)))
(assert (x1559 x762 x1102 x26 x665))
(assert (= (and (not x420) x703) x446))
(assert (= x172 (or x827 x1156)))
(assert (x1232 x890))
(assert (x584 (- x255 x1024)))
(assert (x584 (x818 x63 10000000000)))
(assert (= (x335 64 x1440 x412) (x1487 (x335 64 x1440 x412))))
(assert (= (x1487 (x335 64 x281 61)) (x335 64 x281 61)))
(assert (x183 x1477))
(assert (= x140 (=> (and (and (= false x599) (= (x335 64 x1440 2) x333) (= (= x698 0) x469) (= (x335 64 x716 3) x1293) (<= 1 x837) (= (x96 324) x698) (= x78 x228) (= x144 x597) (>= 127 x1515) (= x78 (x800 x1545)) (= x240 false) (<= 1 x171) (= x384 (x335 64 x716 2)) (not (< x308 x1127)) (= 260 x1075) (= x1169 x1440) (= (x1030 x1224) x837) (= (ite (> x1286 x151) x151 x1286) x144) (= (x564 (- x171 x144)) x62) (= (x335 64 x1440 x412) x1224) (not (> x520 x837)) (not (> x1410 x151)) (= false x619) (= x130 (x426 160)) (not (< x837 x144)) (= x1591 (x564 (- x290 324))) (= (x115 x1390) x1127) (= x488 (x752 128)) (= x937 324) (= (x72 x1545) x1241) (not (> x1127 x308)) (= 100 x1591) (= x1226 (x335 64 x1440 x1293)) (= x447 324) (= (+ x927 16156842317565293874272834530371880720966471053262404558597773956279093428224) x1314) (= 128 x732) (= x405 x597) (= (x564 (- x151 x144)) x1410) (= x253 (x729 x1440)) (>= 127 x1515) (= x716 x640) (= x412 (x335 64 x716 3)) (= x43 100) (= false x494) (= (x335 64 x281 61) x276) (= (x282 26959946667150639794667015087019630673637144422540572481103610249215 x130) x927) (= x520 (x564 (- x837 x144))) (= 0 x1450) (= x147 599290589) (= x308 (x303 (+ x1127 x144))) (= x1243 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x290 (x303 (+ 324 x488))) (= (x335 64 x716 2) x367) (= x1307 1) (not (< x171 x62)) (>= x144 1) (not (> x144 x171)) (<= 1 x1241) (= (x1662 x367) x171) (= x1390 (x335 64 x1440 2))) (or (not x469) (and x469 (and (>= x1568 1) (= x1568 (x72 x1545)) (= x1378 1))))) x1365)))
(assert (x183 x370))
(assert (x183 x1057))
(assert (x183 x968))
(assert (x183 x352))
(assert (> (x335 64 x716 2) 10000))
(assert (x218 x1024 (- x34 x483)))
(assert (x218 x26 (- x665 x34)))
(assert (= (x335 64 x896 61) (x1487 (x335 64 x896 61))))
(assert (x602 x483 x1042 x856 x222))
(assert (x183 x1503))
(assert (x183 x486))
(assert (= (and (not x1320) x502) x1156))
(assert (= (=> (and (or (not x423) x423) (= x423 (= x1238 x605))) x319) x1391))
(assert (x218 x665 (- x26 x1102)))
(assert (x602 x1024 x34 x255 x1317))
(assert (x183 x11))
(assert (x183 x1029))
(assert (x183 x508))
(assert (x183 x1052))
(assert (x602 x1317 x255 x1286 x1179))
(assert (x183 x28))
(assert (x1559 x1286 x1179 x222 x856))
(assert (x602 x1042 x483 x1179 x1286))
(assert (x183 x1666))
(assert (x584 (- x1042 x1286)))
(assert (x218 x483 (- x1042 x856)))
(assert (x584 (- x255 x26)))
(assert (x183 x890))
(assert (x1097 10000000000 x1354))
(assert (x602 x762 x1102 x34 x1024))
(assert (> (x335 64 x896 61) 10000))
(assert (x183 x3))
(assert (= x1362 (and x398 (not x1598))))
(assert (x584 x34))
(assert (x341 x1616 10000000000))
(assert (= (and x1020 (not x190)) x1585))
(assert (x1097 10000000000 (x818 x863 10000000000)))
(assert (= x1609 (or x1656 x965)))
(assert (x183 x137))
(assert (x584 (- x34 x1102)))
(assert (x183 x891))
(assert (x602 x483 x1042 x1317 x255))
(assert (= (x1334 (x335 64 x58 0)) 64))
(assert (x602 x1317 x255 x1179 x1286))
(assert (= x568 (and x1581 x366)))
(assert (x218 x26 (- x665 x856)))
(assert (= (=> (and (= (+ x1474 x1616) x1053) (= x1459 (= x238 0)) (>= x1165 0) (= x1211 (x785 x540)) (= x1415 0) (= x1666 (x749 x540)) (= x238 (x1298 x540)) (= x1072 x443) (= x540 (x335 64 x896 0)) (= x139 (= x1165 x1211)) (= x443 x120) (= x1057 0) x1539 (>= 20282409603651670423947251286015 x1165) (= (x348 x896) x245) (= (= x238 x245) x1539) (= x1165 (x505 x896)) (>= 20282409603651670423947251286015 x1211) (>= 3 x238) (= x49 (x1383 x540)) (<= x1666 4722366482869645213695) x139 (= 872 x432) (>= 3 x245) (<= x49 4722366482869645213695)) (and (=> (and (= 968 x338) x1459) x112) (=> (and (and (or (and (not x517) (and (= (x99 x896) x493) (<= x1029 1461501637330902918203684832716283019655932542975) (= x1029 x815) (<= x493 1461501637330902918203684832716283019655932542975) x514 (= (x1571 x396) x1029) (= (= x493 x1029) x514) (>= x493 0) (= x443 x1261) (= (x335 64 x896 71) x396))) (and (= 0 x815) x517)) (and (= x517 (= 0 x1375)) (= (x282 1 x238) x1375) (= x764 0))) (not x1459)) x1041))) x288))
(assert (x183 x195))
(assert (x584 x1220))
(assert (= (and x1446 (not x135)) x275))
(assert (x183 x1068))
(assert (x584 (- x34 x26)))
(assert (x218 x1024 (- x34 x255)))
(assert (< (x335 64 x385 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x183 x811))
(assert (x1103 2129096990))
(assert (> (x335 64 x1440 60) 10000))
(assert (= x1240 (or x943 x462)))
(assert (x183 x807))
(assert (x183 x207))
(assert (x218 x1317 (- x255 x1024)))
(assert (x602 x222 x856 x665 x26))
(assert (x787 x959))
(assert (x1054 x1583))
(assert (x169 (x841 x385)))
(assert (x218 x1317 (- x255 x1102)))
(assert (x183 x338))
(assert (x602 x34 x1024 x1286 x1179))
(assert (= x1619 (=> (and (and (or (and x946 (and (= x1304 x1658) (>= 20282409603651670423947251286015 x944) (= x158 x65) x1299 (= (x912 x931) x158) (<= 0 x944) (= x944 (x174 x631)) (= (x335 64 x631 0) x931) (<= x158 20282409603651670423947251286015) (= x1299 (= x158 x944)))) (and (not x946) (= 0 x65))) (and (<= x1578 127) x1136 (= x1037 (= x1657 x689)) (= (x912 x536) x689) (= x1658 x1406) (= x504 (x749 x536)) (<= x689 20282409603651670423947251286015) (>= 3 x358) (= x946 (= 0 x997)) (= (x174 x631) x1657) (>= 4722366482869645213695 x504) (= 0 x377) (= x496 x631) (= x142 x1658) (= (x282 1 x358) x997) (= x637 3002343453) x1037 (= x702 (x72 x1440)) (= (x335 64 x631 0) x536) (= x1220 (x1383 x536)) (>= 4722366482869645213695 x1220) (= x1164 0) (= x1136 (= x358 x1562)) (<= 1 x702) (= x631 x1658) (= (x348 x631) x1562) (= false x925) (<= x1562 3) (>= 127 x1578) (= 352 x143) (= (x1298 x536) x358) (<= 0 x1657) (= false x845) (<= x1657 20282409603651670423947251286015))) (and (= x888 68) (= x320 false) (= 0 x1353) (= x365 x638) (= false x557) x638 (= x376 (not (= 0 x46))) (= false x407) (= true x972) x874 (= x1036 false) (= x375 x1469) (= x1152 x216) (= x1300 x874) (= false x1575) (= x216 x496) (= (ite (not (= x186 0)) 1 0) x46))) x1672)))
(assert (x1054 x358))
(assert (x584 (- x762 x483)))
(assert (= 64 (x1334 (x335 64 x385 0))))
(assert (x183 x1301))
(assert (=> (<= x281 10000) (= (x1487 x281) 0)))
(assert (x1559 x483 x1042 x1102 x762))
(assert (x183 x445))
(assert (x183 x265))
(assert (x584 (- x1286 x1317)))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639714))
(assert (x584 (- x1042 x222)))
(assert (> (x335 64 x896 0) 10000))
(assert (x218 x1042 (- x483 x1286)))
(assert (= (x1487 340282366920938463463374607431768211455) 0))
(assert (not (x1103 (x335 64 x1440 2))))
(assert (x218 x856 (- x222 x1102)))
(assert (x602 x1179 x1286 x222 x856))
(assert (x218 x1102 (- x762 x856)))
(assert (= (x1487 (x335 64 x815 0)) (x335 64 x815 0)))
(assert (= 0 (x1487 105312291668557186697918027683670432318895095400549111254310977535)))
(assert (= (x1487 (x335 64 x896 71)) (x335 64 x896 71)))
(assert (x341 x795 10000000000))
(assert (x602 x1286 x1179 x1024 x34))
(assert (= x1104 (or x1548 (and (not x241) x406))))
(assert (= (x1487 (+ x1089 1)) (x1487 x1089)))
(assert (x183 x245))
(assert (x183 x255))
(assert (x218 x665 (- x26 x762)))
(assert (x1559 x762 x1102 x1317 x255))
(assert (x183 x80))
(assert (x584 x1286))
(assert (= (x257 (x335 64 2 69)) 69))
(assert (x787 x1214))
(assert (x1103 599290589))
(assert (> (x335 64 2 69) 10000))
(assert (x584 (- x222 x1102)))
(assert (x1559 x1179 x1286 x1042 x483))
(assert (x183 x981))
(assert (x183 x613))
(assert (x341 x678 10000000000))
(assert (x183 x1211))
(assert (= (x1334 (x335 64 x271 0)) 64))
(assert (= 0 (x257 (x335 64 x385 0))))
(assert (= x1440 (x1247 (x335 64 x1440 x412))))
(assert (= (x257 (x335 64 x1440 60)) 60))
(assert (x218 x26 (- x665 x1286)))
(assert (x183 x631))
(assert (x1559 x1317 x255 x1102 x762))
(assert (=> (<= x815 10000) (= (x1487 x815) 0)))
(assert (x218 x1042 (- x483 x856)))
(assert (x584 (- x1286 x1024)))
(assert (x183 x79))
(assert (x183 x685))
(assert (x183 x741))
(assert (= x999 (=> (= (ite x121 x1066 x751) x16) (and x16 (=> (and (= (= x18 x422) x1038) (= (or (not x1204) x1038) x1171)) x1171)))))
(assert (x183 x330))
(assert (x584 (- x665 x1317)))
(assert (not (x1103 (x335 64 x271 0))))
(assert (x218 x34 (- x1024 x856)))
(assert (x584 (- x222 x34)))
(assert (x584 (- x1042 x1179)))
(assert (x1097 10000000000 x1589))
(assert (= (x1487 (x335 64 x1440 3)) (x335 64 x1440 3)))
(assert (x183 x327))
(assert (x584 (- x1179 x255)))
(assert (= (=> (and (= (not x31) x1587) (= (and x831 x1587) x789) (= (and x512 x789) x1215) (= (or x1219 x1234) x512) (= (= x378 3) x31) (= x1277 (= 2 x378)) (= (= 3 x745) x1234) (= x1219 (= 2 x745)) (= x831 (not x1277))) (and (=> (and (and (= x318 true) (not x1215)) (not x1215)) x672) (=> x1215 x1045))) x989))
(assert (x584 (- x26 x1179)))
(assert (x183 x1607))
(assert (x584 (- x1102 x26)))
(assert (x584 (- x1024 x483)))
(assert (x1559 x483 x1042 x26 x665))
(assert (x1559 x1179 x1286 x1317 x255))
(assert (x1103 57896044618658097711785492504343953926634992332820282019728))
(assert (x602 x483 x1042 x222 x856))
(assert (x183 x440))
(assert (= (x1247 (x335 64 x58 0)) x58))
(assert (x218 x26 (- x665 x255)))
(assert (=> (>= 10000 x797) (= (x1487 x797) 0)))
(assert (x183 x378))
(assert (= (and x942 (not x517)) x1582))
(assert (x584 (- x1024 x1317)))
(assert (x1559 x1102 x762 x1042 x483))
(assert (x602 x1102 x762 x1042 x483))
(assert (x183 x979))
(assert (x183 x640))
(assert (x584 (- x255 x1179)))
(assert (x584 (- x762 x1024)))
(assert (= (and x398 x1598) x1485))
(assert (x218 x1286 (- x1179 x856)))
(assert (x584 (- x483 x665)))
(assert (x602 x26 x665 x222 x856))
(assert (x836 x1583 2))
(assert (x183 x519))
(assert (= (and x1320 x502) x827))
(assert (x183 x430))
(assert (x1232 x127))
(assert (= x808 (and (not x1080) x264)))
(assert (x1481 (x236 x896)))
(assert (x183 x565))
(assert (x602 x1024 x34 x1317 x255))
(assert (x183 x1203))
(assert (not (x1103 (x335 64 x797 0))))
(assert (x183 x1357))
(assert (= (=> (and (and (>= x1434 0) (>= 1461501637330902918203684832716283019655932542975 x1434) (= x1126 10000000000) (= x1352 x1521) (= (x236 x1352) x1258) x1667 (= x1434 (x236 x1352)) (<= x1258 1461501637330902918203684832716283019655932542975) (>= x1258 0) (= x1352 x454) (= x1595 false) (= x657 (x122 x1258))) (and (and (= 10000000000 x77) (= (* 10000000000 (x818 x720 10000000000)) x269) (= (- x323 x269) x418)) (and (= (* (x818 x1349 10000000000) 10000000000) x995) (= x323 (+ x995 x657)) (= x612 10000000000) (= false x949) (= x579 10000000000)))) x465) x793))
(assert (x218 x1024 (- x34 x1102)))
(assert (x218 x1042 (- x483 x665)))
(assert (x183 x1235))
(assert (x183 x837))
(assert (x1559 x1317 x255 x26 x665))
(assert (=> (<= x631 10000) (= 0 (x1487 x631))))
(assert (x584 (x818 x779 10000000000)))
(assert (x183 x209))
(assert (x602 x222 x856 x1286 x1179))
(assert (= x1385 (and x478 (not x121))))
(assert (x183 x143))
(assert (x218 x34 (- x1024 x255)))
(assert (= (and (not x1667) x1296) x721))
(assert (x1559 x1179 x1286 x222 x856))
(assert (x787 x1053))
(assert (x183 x340))
(assert (x218 x1042 (- x483 x1317)))
(assert (x183 x1556))
(assert (x584 (- x762 x34)))
(assert (= x1386 (and x467 x1670)))
(assert (x602 x1286 x1179 x222 x856))
(assert (x218 x222 (- x856 x1179)))
(assert (x1103 1889567281))
(assert (x183 x1255))
(assert (x584 (- x1024 x1286)))
(assert (and (= 9 (x401 3 3)) (= 81 (x401 27 3)) (= 27 (x401 9 3)) (= (x401 9 9) 81)))
(assert (x183 x385))
(assert (x183 x1118))
(assert (= x1457 (=> (and (or (and x121 (and (= (+ x1128 x422) x1055) (= x414 x1543) (= x355 x1055) (= x1177 (or x29 x196)) (= x355 x796) (= x196 (= x1543 x796)) (= x794 x751) (= x844 x375) (= (or x534 x1177) x1002) (= x1519 x355) (= x18 x414) (= x670 1) (= (+ 1 x1519) x1599) (= x414 x918) (= (+ x918 1) x52) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1128) (= x1128 (x971 x148 x844)) (= x1002 x1066) (= (= x1599 x497) x29) (= x497 x414) (= x1508 1) (= x148 x743) (= (= x52 x1441) x534) (<= 0 x1128) (= x355 x1441))) (and (and (= x1070 x1066) (= x1346 x751) (= true x1346)) (not x121))) (and x424 (= x1593 (ite (not (= 0 x1425)) 1 0)) (= x1161 x1469) (= x1654 (= x1161 x363)) x1654 (= (- x560 x621) x743) (= x1204 (not (= x1593 0))) (= x375 x1524) (= x121 (not x1204)) (= false x1361) (= x1369 false) (= x363 x1524) (= (= x376 x1204) x424) (= false x1270) (= x518 false))) x999)))
(assert (= (or x568 x1088) x1194))
(assert (x183 x477))
(assert (x1559 x26 x665 x1042 x483))
(assert (= 0 (x1487 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x183 x863))
(assert (x602 x856 x222 x26 x665))
(assert (x602 x1024 x34 x483 x1042))
(assert (x787 x592))
(assert (x183 x46))
(assert (x602 x255 x1317 x856 x222))
(assert (x1559 x1317 x255 x1042 x483))
(assert (x602 x26 x665 x255 x1317))
(assert (x183 x937))
(assert (x183 x1011))
(assert (= (and x231 x300) x1021))
(assert (x602 x26 x665 x762 x1102))
(assert (x787 x863))
(assert (= x815 (x1247 (x335 64 x815 0))))
(assert (= (x335 64 x1440 x916) (x1487 (x335 64 x1440 x916))))
(assert (= 64 (x1334 (x335 64 x281 x12))))
(assert (x183 x1544))
(assert (x183 x1120))
(assert (x584 (- x856 x34)))
(assert (x836 x680 2))
(assert (x1559 x222 x856 x26 x665))
(assert (x183 x470))
(assert (x183 x770))
(assert (x602 x1102 x762 x255 x1317))
(assert (x183 x997))
(assert (= (and x156 x676) x131))
(assert (x183 x809))
(assert (x183 x542))
(assert (= 0 (x257 (x335 64 x1111 0))))
(assert (x584 x299))
(assert (= x569 (and x558 x132)))
(assert x594)
(assert (= x1548 (and x241 x406)))
(assert (x602 x222 x856 x1024 x34))
(assert (x1559 x1024 x34 x1102 x762))
(assert (x602 x1102 x762 x483 x1042))
(assert (x183 x720))
(assert (x602 x483 x1042 x1286 x1179))
(assert (= x896 (x1247 (x335 64 x896 71))))
(assert (x183 x1352))
(assert (> (x335 64 x896 72) 10000))
(assert (x183 x555))
(assert (x183 x1310))
(assert (x787 x1550))
(assert (= (and x1186 (not x1427)) x1115))
(assert (= (=> (and (and (= (x236 x896) x688) (<= 0 x688) (<= x1144 1461501637330902918203684832716283019655932542975) (= x321 x443) (<= x688 1461501637330902918203684832716283019655932542975) (= (x236 x896) x1144) (= x1359 (x1602 x1144)) (= 10000000000 x1405) (= false x343) (>= x1144 0) (= x24 x443) x1572) (and (and (= x1175 (- x1507 x152)) (= x261 10000000000) (= x152 (* 10000000000 (x818 x863 10000000000)))) (and (= false x217) (= x441 10000000000) (= (+ x1359 x1510) x1507) (= (* 10000000000 (x818 x678 10000000000)) x1510) (= 10000000000 x1448)))) x288) x232))
(assert (x584 (- x26 x483)))
(assert (x183 x732))
(assert (x602 x1179 x1286 x665 x26))
(assert (x183 x432))
(assert (x183 x735))
(assert (= x850 (and (not x387) x1109)))
(assert (x584 (- x34 x222)))
(assert (x183 x1626))
(assert (= (or x537 x569) x242))
(assert (not (x1103 (x335 64 2 69))))
(assert (x584 (- x856 x26)))
(assert (x584 (- x222 x665)))
(assert (x183 x652))
(assert (x218 x1024 (- x34 x222)))
(assert (not (x1103 (x335 64 x281 x12))))
(assert (= (=> (= (= x977 x1271) x498) (and (=> (and (= x340 0) x498) x628) (=> (and (not x498) (and (or (and (and (= (x401 x1042 x483) x1584) (= x483 (x564 (- x977 x1271))) (= x209 (x818 x1584 1000000000000000000)) (= x209 x1310) (not (< x977 x483)) (< (x401 x1042 x483) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1584 0) (<= x1584 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not x1288)) (and x1288 (= 0 x1310))) (= (= 0 x1042) x1288))) x522))) x822))
(assert (x584 (- x1024 x762)))
(assert (x183 x678))
(assert (= (x1334 (x335 64 x797 0)) 64))
(assert (x218 x1286 (- x1179 x762)))
(assert (x218 x255 (- x1317 x1042)))
(assert (x183 x317))
(assert (x183 x1655))
(assert (= x848 (=> (= (= (ite (> x649 0) x649 (ite (not (< x235 x1246)) 1 0)) 0) x1091) (and (=> (and (= x605 x1238) (not x1091)) x1391) (=> (and x1091 (and (or (and (not x1295) (= x641 x1064)) (and x1295 (= x1246 x641))) (= x1295 (< x1246 x1064)))) x551)))))
(assert (= 64 (x1334 (x335 64 x896 x1197))))
(assert (x1559 x1317 x255 x222 x856))
(assert (x218 x1317 (- x255 x34)))
(assert (= (and x135 x1446) x264))
(assert (x183 x566))
(assert (= x300 (and x535 (not x806))))
(assert (not (x1103 (x335 64 x896 x1197))))
(assert (x183 x758))
(assert (x183 x56))
(assert (x584 (- x1102 x34)))
(assert (x1097 10000000000 x1220))
(assert (= (=> (and (= x1044 (= 2 x696)) (= x64 (= 2 x457)) (= x220 (not x513)) (= (= 3 x696) x1174) (= x237 (and x220 x952)) (= x476 (and x237 x521)) (= (= x457 3) x513) (= x521 (or x1044 x1174)) (= x952 (not x64))) (and (=> (and (and (not x476) (= true x1606)) (not x476)) x747) (=> x476 x1090))) x1426))
(assert (x816 x680))
(assert (x602 x1042 x483 x856 x222))
(assert (= x1676 (or x415 x835)))
(assert (= (x1487 599290589) 0))
(assert (= (or (and x1020 x190) x1585) x1095))
(assert (x218 x1286 (- x1179 x1102)))
(assert (x1217 x130))
(assert (x183 x649))
(assert (x169 (x1402 x1352)))
(assert (x183 x1125))
(assert (x183 x745))
(assert (x183 x951))
(assert (x584 x1102))
(assert (x602 x1286 x1179 x1317 x255))
(assert (x602 x1179 x1286 x1317 x255))
(assert (x218 x665 (- x26 x856)))
(assert (x183 x1241))
(assert (x218 x1024 (- x34 x856)))
(assert (= (x1487 4722366482869645213695) 0))
(assert (x218 x255 (- x1317 x1102)))
(assert (x183 x82))
(assert (x602 x483 x1042 x26 x665))
(assert (x183 x1578))
(assert (= (=> (and (and (= x187 (x96 324)) (= x1106 (< 0 x187)) (= 324 x761) (= x699 324) (= x129 324)) (or (and (and (= 1 x895) (= x685 (x96 324)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x685) (<= 32 x685) (= x895 (x1006 356))) x1106) (not x1106))) x1453) x1365))
(assert (x183 x727))
(assert (x584 (- x483 x1179)))
(assert (x1559 x222 x856 x1042 x483))
(assert (x584 (- x1317 x222)))
(assert (not x1333))
(assert (x602 x1286 x1179 x26 x665))
(assert (x602 x1042 x483 x762 x1102))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x183 x1238))
(assert (= (x257 (x335 64 x1440 x647)) x647))
(assert (> (x335 64 x385 0) 10000))
(assert (x602 x1179 x1286 x1102 x762))
(assert (x183 x1404))
(assert (x602 x665 x26 x1179 x1286))
(assert (= x1260 (and (not x780) x1629)))
(assert (x183 x1305))
(assert (x602 x762 x1102 x1179 x1286))
(assert (x602 x1317 x255 x856 x222))
(assert (x1232 x888))
(assert (x602 x222 x856 x1102 x762))
(assert (x602 x762 x1102 x26 x665))
(assert (x584 (- x1286 x222)))
(assert (= x4 (or x1121 x471)))
(assert (x218 x1286 (- x1179 x222)))
(assert (x602 x1317 x255 x665 x26))
(assert (= x957 (or x1264 x275)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x1440 x412)))
(assert (x584 (- x1102 x856)))
(assert (x218 x26 (- x665 x1102)))
(assert (= (x257 (x335 64 x815 0)) 0))
(assert (= (x1487 (x335 64 x58 0)) (x335 64 x58 0)))
(assert (x183 x149))
(assert (x183 x214))
(assert (x602 x483 x1042 x762 x1102))
(assert (and x1592 x962))
(assert (x1103 10000000000))
(assert (x602 x665 x26 x1317 x255))
(assert (x602 x34 x1024 x1042 x483))
(assert (= 64 (x1334 (x335 64 x281 x633))))
(assert (x218 x1286 x1179))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639837))
(assert (x183 x51))
(assert (= x136 (=> (and (or (and (and (= (x1526 x1327) x1659) (= (x303 (+ x1659 x1330)) x207) (not (>= (+ x1330 x1659) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1079 (x335 64 x896 61)) (= x1327 (x335 64 x896 61))) (not x1670)) x1670) (= x1670 (= 0 x1330))) x351)))
(assert (x183 x246))
(assert (x602 x856 x222 x665 x26))
(assert (x584 (- x1317 x34)))
(assert (x584 (- x762 x1179)))
(assert (x183 x1659))
(assert (= (and (not x19) x1676) x853))
(assert (x218 x1042 (- x483 x222)))
(assert (not (x1103 (x335 64 x281 61))))
(assert (= x311 (and x1094 (not x1091))))
(assert (x584 x1589))
(assert (x602 x762 x1102 x255 x1317))
(assert (= (and (not x498) x957) x802))
(assert (x183 x908))
(assert (x584 (- x34 x1317)))
(assert (x1232 x1184))
(assert (< (x335 64 x797 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x875 (and x985 (not x1408))))
(assert (x218 x1024 (- x34 x1042)))
(assert (x218 x1317 (- x255 x1286)))
(assert (x183 x488))
(assert (x787 x795))
(assert (x584 (- x1024 x856)))
(assert (x602 x1317 x255 x762 x1102))
(assert (x183 x419))
(assert (= x208 (and x498 x957)))
(assert (= x1632 (or (and x705 (not x1106)) x1643)))
(assert (x584 (- x665 x222)))
(assert (x183 x757))
(assert (= (=> (and (and (>= x622 0) x690 (= x981 x547) (= (= x1356 x1179) x1429) (= x491 x1440) (= x770 x574) (= (+ x383 x981) x770) (= x622 (x971 x770 x1179)) (= (* x1589 10000000000) x547) (= x1108 x375) (= x1356 x375) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x622) (= x690 (= x1108 x1179)) x1429 (= x1179 x1206)) (and (and (or (and (not x676) (and (= (x1464 x1326) x741) (>= 3 x741) (= (x335 64 x456 0) x1326) (= (ite (= x741 3) 1 0) x1425) (= x664 (= x305 x741)) (= (x1138 x456) x305) x664 (= x1414 x838) (<= x305 3))) (and (= x1425 (ite x676 1 0)) x676)) (and (<= x197 127) (= (x1138 x456) x529) (= (x72 x1440) x1537) (= x838 x930) (>= 127 x197) (= (x1464 x1250) x1646) (= x456 x1677) x1489 (= x838 x456) (>= x1537 1) (= x998 false) (<= x1646 3) (= x676 (= x1646 1)) (= x1489 (= x1646 x529)) (= false x983) (= (x335 64 x456 0) x1250) (>= 3 x529) (= x289 1016599773))) (and (= x18 x11) (= x164 36) (= false x886) (= x11 x622) (= x627 false) (= x1677 x216) (= x966 false) (= false x723)))) x1457) x1012))
(assert (= (x1487 x1089) (x1487 (+ x1089 2))))
(assert (x218 x1317 (- x255 x26)))
(assert (x183 x1032))
(assert (x183 x879))
(assert (x1559 x1102 x762 x34 x1024))
(assert (x1097 1000000000000000000 x299))
(assert (x183 x1035))
(assert (x1103 1016599773))
(assert (x602 x26 x665 x1317 x255))
(assert (not (x1103 (x335 64 x1111 0))))
(assert (= 0 (x1487 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (x1247 (x335 64 x1440 3)) x1440))
(assert (x183 x764))
(assert (= x1579 (or x1272 x721)))
(assert (x183 x825))
(assert (x183 x173))
(assert (x218 x1042 (- x483 x1102)))
(assert (x183 x1185))
(assert (= (and x1609 (not x476)) x1664))
(assert (x1097 10000000000 (x818 x678 10000000000)))
(assert (x1559 x856 x222 x1317 x255))
(assert (= (and (not x1288) x802) x1121))
(assert (x584 (- x1102 x1179)))
(assert (x218 x26 (- x665 x483)))
(assert (x183 x1313))
(assert (x183 x449))
(assert (= (or x176 x671) x55))
(assert (= x1162 (and x226 x315)))
(assert (x816 x693))
(assert (x218 x483 (- x1042 x1102)))
(assert (x218 x1179 (- x1286 x483)))
(assert (x183 x1169))
(assert (x584 (- x1317 x1042)))
(assert (x602 x34 x1024 x255 x1317))
(assert (x1559 x1102 x762 x222 x856))
(assert (x183 x525))
(assert (= x1092 (and (not x1597) x1541)))
(assert (x183 x10))
(assert (x183 x888))
(assert (x602 x665 x26 x1024 x34))
(assert (x218 x255 (- x1317 x483)))
(assert (x183 x456))
(assert (x183 x655))
(assert (= (x257 (x335 64 x271 0)) 0))
(assert (= x942 (and (not x1459) x576)))
(assert (x602 x762 x1102 x665 x26))
(assert (x584 (- x222 x1317)))
(assert (= (x335 64 x1358 0) (x1487 (x335 64 x1358 0))))
(assert (=> (<= x111 10000) (= (x1487 x111) 0)))
(assert (x218 x1102 (- x762 x483)))
(assert (= (and x1443 (not x1517)) x157))
(assert (x183 x782))
(assert (x218 x222 (- x856 x1102)))
(assert (= x744 (or x311 x55)))
(assert (x602 x26 x665 x483 x1042))
(assert (x602 x856 x222 x1286 x1179))
(assert (x218 x856 (- x222 x1042)))
(assert (x584 (- x1286 x34)))
(assert (x183 x1053))
(assert (x584 (- x483 x34)))
(assert (x183 x896))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (= (and (not x357) x850) x703))
(assert (x341 x1349 10000000000))
(assert (= 0 (x1487 4294967295)))
(assert (= 64 (x1334 (x335 64 x1440 2))))
(assert (x1573 x1064))
(assert (x183 x1151))
(assert (x1481 (x236 x815)))
(assert (x183 x309))
(assert (x183 x821))
(assert (x183 x78))
(assert (x218 x1317 (- x255 x1042)))
(assert (x218 x1024 (- x34 x1286)))
(assert (x584 (x818 x959 10000000000)))
(assert (x584 (- x1317 x762)))
(assert (x183 x1492))
(assert (= (and x1362 (not x1160)) x315))
(assert (x183 x698))
(assert (x183 x702))
(assert (x584 (- x26 x255)))
(assert (x584 (- x222 x483)))
(assert (x602 x255 x1317 x665 x26))
(assert (x1232 x1059))
(assert (< 10000 (x335 64 x797 0)))
(assert (= (or x853 x945) x1629))
(assert (x183 x988))
(assert (x183 x49))
(assert (not (x1103 (x335 64 x631 0))))
(assert (x183 x928))
(assert (x602 x1286 x1179 x34 x1024))
(assert (= (or x1465 x73) x548))
(assert (x218 x26 (- x665 x1042)))
(assert (x584 (- x856 x1042)))
(assert (= x412 (x257 (x335 64 x1440 x412))))
(assert (x836 x1064 340282366920938463463374607431768211456))
(assert (= x478 (or x131 x718)))
(assert (x218 x26 (- x665 x1179)))
(assert (x183 x1245))
(assert (> (x335 64 x58 0) 10000))
(assert (x218 x665 (- x26 x1042)))
(assert (x1559 x1179 x1286 x1102 x762))
(assert (x218 x762 (- x1102 x1179)))
(assert (x584 (- x1102 x255)))
(assert (= (and x1579 x1249) x1656))
(assert (x183 x600))
(assert (= (and x436 x416) x730))
(assert (x183 x903))
(assert (= (x335 64 x281 x12) (x1487 (x335 64 x281 x12))))
(assert (= (x1487 (x335 64 x1111 0)) (x335 64 x1111 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x456 0)))
(assert (x183 x1220))
(assert (x183 x1393))
(assert (x602 x856 x222 x1042 x483))
(assert (x1559 x1317 x255 x1286 x1179))
(assert (x169 (x174 x631)))
(assert (x602 x255 x1317 x1024 x34))
(assert (x218 x856 (- x222 x665)))
(assert (x584 (- x483 x255)))
(assert (x787 x272))
(assert (x584 (- x222 x255)))
(assert (= x1212 (=> (and (and (= x791 (x99 x815)) (= x1198 x815) (= x421 (x1451 x791)) (<= 0 x1061) (= (x99 x815) x1061) x226 (>= 1461501637330902918203684832716283019655932542975 x791) (<= 0 x791) (= false x1181) (>= 1461501637330902918203684832716283019655932542975 x1061) (= x1535 x815) (= 10000000000 x767)) (and (and (= x1112 (- x8 x487)) (= (* (x818 x63 10000000000) 10000000000) x487) (= x792 10000000000)) (and (= x8 (+ x421 x964)) (= x1130 false) (= 10000000000 x69) (= (* 10000000000 (x818 x795 10000000000)) x964) (= x1409 10000000000)))) x1381)))
(assert (= x896 (x1247 (x335 64 x896 x1197))))
(assert (x346 x1583))
(assert (x1232 x1253))
(assert (x816 x130))
(assert (= (=> (and (= x1544 (x1538 x1355)) (>= 340282366920938463463374607431768211455 x57) (= x1089 (x335 64 x1440 60)) x1531 (= x1197 (+ x1089 2)) (>= x1675 0) (= (x335 64 x896 0) x572) (= x984 (x14 x1633)) (= (+ x1089 1) x1355) (= x57 (x650 x1089)) (>= 20282409603651670423947251286015 x1675) (= x1531 (= x1317 x1675)) (= x1633 (x335 64 x896 x1197)) (= x1317 (x912 x572)) (>= x896 1) (= x1675 (x174 x896)) (= x523 0) (= x443 x200) (<= x896 1461501637330902918203684832716283019655932542975) (= x1468 (> x214 0)) (= (x564 (- x1064 x57)) x214) (>= 20282409603651670423947251286015 x1317)) (and (=> (and x1468 (and (and (= (< 0 x1506) x1280) (>= 340282366920938463463374607431768211455 x34) (= (x677 x1089) x34) (= (ite (= x34 0) (ite (= x34 0) 1 0) (ite (= 0 x38) 1 0)) x1506)) (or (and (not x1280) (= x1014 (ite (= x57 x1064) 1 0))) (and x1280 (= x1014 x1506))))) x701) (=> (and (= x601 x1544) (not x1468)) x982))) x1453))
(assert (x183 x755))
(assert (= x768 (and x1632 (not x1468))))
(assert (x602 x483 x1042 x665 x26))
(assert (= (or x666 x157) x156))
(assert (x584 (- x483 x222)))
(assert (= (x1487 (+ 2 x1124)) (x1487 x1124)))
(assert (= (x1247 (x335 64 x385 0)) x385))
(assert (= (=> (and (and (= x248 (x1324 x1257)) x1631 (>= 1461501637330902918203684832716283019655932542975 x1257) (= (x99 x896) x267) (= 10000000000 x1640) (= x1046 false) (<= 0 x1257) (= x443 x254) (= x1257 (x99 x896)) (= x883 x443) (>= x267 0) (>= 1461501637330902918203684832716283019655932542975 x267)) (and (and (= x1399 10000000000) (= x1043 (* 10000000000 (x818 x863 10000000000))) (= x626 (- x798 x1043))) (and (= 10000000000 x495) (= x285 10000000000) (= x1335 (* (x818 x678 10000000000) 10000000000)) (= (+ x248 x1335) x798) (= x786 false)))) x710) x266))
(assert (= (=> (and (and (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x691 x1093))) (= (x1394 x1200) x1093) (= (= 0 x691) x44) (= x596 (x303 (+ x1093 x691))) (= x1200 (x335 64 x281 61))) (or x44 (and (not x44) (= (x335 64 x281 61) x331)))) x1343) x452))
(assert (x1559 x483 x1042 x222 x856))
(assert (= 64 (x1334 (x335 64 x716 2))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x896 x1197)))
(assert (x183 x1075))
(assert (x218 x34 (- x1024 x1286)))
(assert (= (x335 64 x716 2) (x1487 (x335 64 x716 2))))
(assert (x341 x63 10000000000))
(assert (not (x1103 (x335 64 x1440 60))))
(assert (x183 x249))
(assert (x183 x869))
(assert (x602 x222 x856 x483 x1042))
(assert (x1103 20282409603651670423947251286015))
(assert (= (or x897 x656) x1237))
(assert (x584 (- x856 x762)))
(assert (x602 x1042 x483 x665 x26))
(assert (x218 x222 (- x856 x34)))
(assert (= 2 (x257 (x335 64 x1440 2))))
(assert (= (=> (and (and (= x1533 1) (= (> 2 x238) x436)) (or (and (and (= x1352 x923) (= (= x923 x1146) x1083) (= x923 (x1074 x306)) (>= x1146 0) x1083 (= x306 (x335 64 x896 72)) (= x443 x1660) (<= x1146 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x923) (= (x236 x896) x1146)) (not x436)) (and (= x1352 0) x436))) x221) x204))
(assert (x183 x163))
(assert (x584 (- x34 x255)))
(assert (= (=> (and (= (and x1491 x1576) x817) (= x804 x1352) (<= x457 255) (= (not x790) x1491) (= (= 3 x696) x262) (= x1249 (and x329 x817)) (= x457 (x501 x324)) (= (= 1 x457) x790) (= (= x696 1) x286) (= x1023 (= 3 x457)) (= (not x1023) x1576) (= x955 x696) (= (or x286 x262) x329)) (and (=> (and (not x1249) (and (= x1612 true) (not x1249))) x1426) (=> x1249 x33))) x465))
(assert (x183 x151))
(assert (not (x1103 (x335 64 x281 0))))
(assert (=> (>= 10000 x1352) (= (x1487 x1352) 0)))
(assert (x183 x434))
(assert (x183 x975))
(assert (= x1293 (x257 (x335 64 x1440 x1293))))
(assert (x183 x1058))
(assert (= (x1487 1461501637330902918203684832716283019655932542975) 0))
(assert (x584 x1227))
(assert (= x1643 (and x1106 x705)))
(assert (= x1281 (=> (and (and x420 (= 10000000000 x1475) (<= 0 x1008) (>= x118 0) (<= x118 1461501637330902918203684832716283019655932542975) (= x1008 (x99 x1352)) (= (x45 x118) x1225) (= x325 x1352) (<= x1008 1461501637330902918203684832716283019655932542975) (= (x99 x1352) x118) (= x1352 x973) (= x337 false)) (and (and (= x1101 10000000000) (= x1536 (* (x818 x1349 10000000000) 10000000000)) (= x914 false) (= 10000000000 x1368) (= x322 (+ x1536 x1225))) (and (= (- x322 x428) x1505) (= x108 10000000000) (= x428 (* 10000000000 (x818 x720 10000000000)))))) x1605)))
(assert (x169 (x841 x1111)))
(assert (x218 x1024 (- x34 x1179)))
(assert (x584 (- x222 x1286)))
(assert (= (and x1316 x1280) x511))
(assert (= (x1334 (x335 64 x1440 x1293)) 64))
(assert (x183 x693))
(assert (x602 x34 x1024 x483 x1042))
(assert (x183 x1140))
(assert (< (x335 64 x896 72) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x602 x1317 x255 x1024 x34))
(assert (x584 (- x26 x1317)))
(assert (x1559 x26 x665 x1102 x762))
(assert (x183 x1102))
(assert (x341 x863 10000000000))
(assert (= (and x478 x121) x1479))
(assert (= x479 (or x768 x1228)))
(assert (x183 x354))
(assert (x183 x1207))
(assert (x341 x1189 10000000000))
(assert (x218 x222 (- x856 x1286)))
(assert (x1232 x164))
(assert (x602 x1024 x34 x856 x222))
(assert (x1559 x222 x856 x1286 x1179))
(assert (x602 x1179 x1286 x483 x1042))
(assert (= x1216 (and x576 x1459)))
(assert (x183 x171))
(assert (x1559 x26 x665 x34 x1024))
(assert (x218 x856 (- x222 x255)))
(assert (x218 x1317 x255))
(assert (x183 x42))
(assert (= x551 (=> (and (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1207 x605))) (<= 1 x38) (= x1493 x1238) (= (x401 x26 x665) x299) (= x1207 (x818 x1214 x38)) (>= x299 0) (= x1493 (x303 (+ x1207 x605))) (not (> x665 x641)) (= x665 (x564 (- x641 x235))) (= (* 1000000000000000000 x299) x1214) (>= 57896044618658097711785492504343953926634992332820282019728 x299) (< (x401 x26 x665) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1391)))
(assert (x1559 x255 x1317 x1102 x762))
(assert (x1069 x1147 x38))
(assert (not (x1103 (x335 64 x1440 x647))))
(assert (= x1651 (and x1466 x528)))
(assert (= (x335 64 x281 x633) (x1487 (x335 64 x281 x633))))
(assert (x183 x601))
(assert (= (x335 64 x271 0) (x1487 (x335 64 x271 0))))
(assert (= (x257 (x335 64 x716 2)) 2))
(assert (x787 x1147))
(assert (x1559 x1042 x483 x1317 x255))
(assert (x183 x895))
(assert (x584 x483))
(assert (x183 x956))
(assert (< (x335 64 x281 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x183 x1378))
(assert (x169 (x174 x1653)))
(assert (< 10000 (x335 64 x271 0)))
(assert (x584 (- x856 x1102)))
(assert (= 64 (x1334 (x335 64 x1440 3))))
(assert (= 72 (x257 (x335 64 x896 72))))
(assert (x183 x58))
(assert (x218 x1102 x762))
(assert (x1559 x1286 x1179 x1102 x762))
(assert (= (x335 64 x1440 x1293) (x1487 (x335 64 x1440 x1293))))
(assert (= 3 (x257 (x335 64 x1440 3))))
(assert (= x666 (and x1443 x1517)))
(assert (x183 x872))
(assert (x602 x1102 x762 x34 x1024))
(assert (x183 x1005))
(assert (= x810 (and x861 x1572)))
(assert (x183 x1179))
(assert (x602 x26 x665 x1024 x34))
(assert (x584 (- x483 x1286)))
(assert (x218 x483 (- x1042 x255)))
(assert (x218 x1286 (- x1179 x1317)))
(assert (x584 (x818 x863 10000000000)))
(assert (not (x1103 (x335 64 x1440 x412))))
(assert (x183 x1022))
(assert (= x656 (and x658 x172)))
(assert (x584 (- x1102 x1317)))
(assert (x602 x762 x1102 x483 x1042))
(assert (x1559 x222 x856 x1317 x255))
(assert (x218 x1102 (- x762 x222)))
(assert (x183 x1493))
(assert (x183 x65))
(assert (x183 x637))
(assert (x183 x1155))
(assert (x218 x1286 (- x1179 x1024)))
(assert (= (x257 (x335 64 x281 0)) 0))
(assert (x183 x15))
(assert (= (x1247 (x335 64 x896 61)) x896))
(assert (x183 x898))
(assert (x183 x147))
(assert (x183 x1646))
(assert (x218 x762 (- x1102 x26)))
(assert (x1559 x1024 x34 x1317 x255))
(assert (= (x1487 (x335 64 2 69)) (x335 64 2 69)))
(assert (x341 x779 10000000000))
(assert (x183 x84))
(assert (x584 (- x856 x255)))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639932))
(assert (x218 x483 (- x1042 x1024)))
(assert (x584 (- x1286 x1042)))
(assert (x584 (- x1102 x483)))
(assert (x183 x457))
(assert (x584 (- x665 x1102)))
(assert (not (x1103 (x335 64 x1352 0))))
(assert (x218 x1286 (- x1179 x483)))
(assert (=> (<= x1358 10000) (= 0 (x1487 x1358))))
(assert (= x415 (and x83 x312)))
(assert (= 0 (x1487 57896044618658097711785492504343953926634992332820282019728)))
(assert (x1559 x255 x1317 x1286 x1179))
(assert (x183 x1366))
(assert (= (and x1104 x1631) x760))
(assert (x218 x1042 (- x483 x255)))
(assert (x1559 x483 x1042 x34 x1024))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x716 3)))
(assert (x183 x57))
(assert (x218 x856 (- x222 x26)))
(assert (= (=> (and (= 1 x933) (= x387 (= x1352 0))) (and (=> (and (and (= x1499 (x564 (- x1616 x1053))) (= (= x1499 0) x357)) (not x387)) (and (=> (and (not x357) (and (>= 20282409603651670423947251286015 x720) x970 (= x1349 x182) (<= x855 20282409603651670423947251286015) (= (or x784 x1397) x1403) (>= 4722366482869645213695 x1185) (<= x1424 4722366482869645213695) (= x1352 x639) (= (x635 x324) x1411) (<= x1035 4722366482869645213695) (= x696 (x501 x1456)) (or (>= x445 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639615 x445) (and (>= x445 115792089237316195423570985008687907853269984665640564039457584007913129639619) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639710 x445)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639837 x445) (>= x445 115792089237316195423570985008687907853269984665640564039457584007913129639714))) (= (= x968 3) x1397) (= x777 (x857 x1352)) (= x1456 (x335 64 x1352 0)) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639932) (<= x968 3) (= x1352 x616) (>= 4722366482869645213695 x15) (> x1504 x1626) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639932) (= (= x855 x430) x970) (<= x1231 3) (= x1421 (= x1590 x696)) (= x1252 0) (>= 4722366482869645213695 x1411) (> x1063 x1504) (= x1185 (x1630 x324)) (= x720 (x1190 x324)) (= x936 x1352) (= x1352 x1315) (or (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639615) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639619 x445) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639710 x445)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639837 x445) (>= x445 115792089237316195423570985008687907853269984665640564039457584007913129639714)) (>= x445 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (> x1626 x445) (<= x1590 3) (= x1035 (+ x1003 x898)) (= x898 (x818 x1053 10000000000)) (= x682 (not x1323)) (= x1626 (x303 (+ 96 x445))) (>= 3 x696) (>= 20282409603651670423947251286015 x1349) (>= x777 0) (= x420 (and x682 x1403)) (= x1590 (x386 x1352)) (= x1352 x455) (>= 4722366482869645213695 x1003) (= x1170 x1352) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639615 x445) (>= x445 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (>= x445 115792089237316195423570985008687907853269984665640564039457584007913129639619) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639710 x445)) (and (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639837) (>= x445 115792089237316195423570985008687907853269984665640564039457584007913129639714))) (= x1504 (x303 (+ x1626 128))) (= x15 (x1512 x1456)) x413 (= x1231 (x386 x1352)) (= x1063 (x303 (+ x1504 96))) (= x1003 (x564 (- x15 x735))) (>= x855 0) (= x735 (x818 x1616 10000000000)) (>= 20282409603651670423947251286015 x430) (= x1349 (x1190 x324)) (>= 20282409603651670423947251286015 x777) (= (x1551 x1456) x1424) (= (= x1352 0) x1323) (= (= x1231 1) x784) (= (x857 x1352) x855) (= x968 (x386 x1352)) (= x324 (x335 64 x1352 0)) (= x413 (= x1349 x777)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x445) x1421 (= x430 (x1190 x1456)))) (and (=> x420 x1281) (=> (and (not x420) (and (= true x1601) (not x420))) x1605))) (=> (and (= x445 x758) x357) x258))) (=> (and (= x445 x758) x387) x258))) x221))
(assert (x602 x1286 x1179 x1042 x483))
(assert (x183 x1014))
(assert (x183 x34))
(assert (x584 (- x255 x34)))
(assert (x183 x1515))
(assert (x787 1000000000000000000))
(assert (x183 x1018))
(assert (x218 x1179 (- x1286 x255)))
(assert (= 2 (x1247 (x335 64 2 69))))
(assert (x183 x596))
(assert (=> (<= x1111 10000) (= 0 (x1487 x1111))))
(assert (x183 x1017))
(assert (x183 x1051))
(assert (= (x1487 3247395738) 0))
(assert (= x116 x394))
(assert (= (and x814 x1494) x929))
(assert (x218 x1179 (- x1286 x1102)))
(assert (x602 x665 x26 x1102 x762))
(assert (x183 x1513))
(assert (= (x1334 (x335 64 x1352 0)) 64))
(assert (= (and x744 x423) x581))
(assert (x183 x651))
(assert (x584 x255))
(assert (=> (>= 10000 x271) (= (x1487 x271) 0)))
(assert (= 0 (x1487 3002343453)))
(assert (x218 x762 (- x1102 x1317)))
(assert (= x319 (=> (and (= x977 x1238) (= (x282 340282366920938463463374607431768211455 x1064) x956)) x822)))
(assert (x1097 10000000000 (x818 x795 10000000000)))
(assert (x584 x26))
(assert (x1103 105312291668557186697918027683670432318895095400549111254310977535))
(assert (x183 x1231))
(assert (= (and x1178 x128) x437))
(assert (= (x335 64 x896 x1197) (x1487 (x335 64 x896 x1197))))
(assert (= 0 (x1487 115792089237316195423570985008687907853269984665640564039457584007913129639615)))
(assert (x584 (- x34 x1042)))
(assert (= (and (not x132) x558) x537))
(assert (= 64 (x1334 (x335 64 x1440 x412))))
(assert (x183 x1196))
(assert (= (and x156 (not x676)) x718))
(assert (x584 x1317))
(assert (x218 x1179 (- x1286 x1042)))
(assert (x218 x665 (- x26 x1286)))
(assert (x1559 x34 x1024 x1286 x1179))
(assert (= x643 (and x387 x1109)))
(assert (x584 (- x255 x762)))
(assert (x183 x590))
(assert (x602 x1317 x255 x222 x856))
(assert (x584 (- x856 x1317)))
(assert (= x558 (and (not x776) x479)))
(assert (= (and x861 (not x1572)) x336))
(assert (x602 x1102 x762 x26 x665))
(assert (x183 x699))
(assert (x183 x598))
(assert (x584 (- x483 x856)))
(assert (= x978 (and x264 x1080)))
(assert (=> (<= x58 10000) (= (x1487 x58) 0)))
(assert (x1103 4722366482869645213695))
(assert (x1559 x255 x1317 x222 x856))
(assert (x1559 x1024 x34 x222 x856))
(assert (not (x1103 (x335 64 x896 72))))
(assert (x787 x720))
(assert (= x884 (or x1274 x1021)))
(assert (x787 x1616))
(assert (x183 x1317))
(assert (< (x335 64 2 69) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1103 3002343453))
(assert (= (x1487 115792089237316195423570985008687907853269984665640564039457584007913129639710) 0))
(assert (x584 (- x255 x483)))
(assert (x1559 x1042 x483 x222 x856))
(assert (= (x257 (x335 64 x58 0)) 0))
(assert (= 64 (x1334 (x335 64 x896 0))))
(assert (x1097 10000000000 (x818 x779 10000000000)))
(assert (x218 x665 (- x26 x1024)))
(assert (x183 x870))
(assert (= x128 (or x1386 x91)))
(assert (= x633 (x257 (x335 64 x281 x633))))
(assert (x218 x1102 (- x762 x1042)))
(assert (x183 x722))
(assert (x218 x1317 (- x255 x483)))
(assert (x602 x1024 x34 x665 x26))
(assert (= (x257 (x335 64 x456 0)) 0))
(assert (x218 x1317 (- x255 x222)))
(assert (x584 (- x1317 x1102)))
(assert (x602 x1286 x1179 x665 x26))
(assert (x183 x186))
(assert (x584 (- x762 x665)))
(assert (> (x335 64 x896 71) 10000))
(assert (= (or x446 x1620) x1296))
(assert (x602 x1179 x1286 x34 x1024))
(assert (x183 x977))
(assert (x602 x762 x1102 x1317 x255))
(assert (x183 x1590))
(assert (x584 (x818 x1189 10000000000)))
(assert (not (x1103 (x335 64 x456 0))))
(assert (< (x335 64 x281 x12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x218 x665 (- x26 x1317)))
(assert (> (x335 64 x896 x1197) 10000))
(assert (x1559 x1042 x483 x1102 x762))
(assert (= (or x1092 x210) x1494))
(assert (x183 x480))
(assert (= (x257 (x335 64 x1358 0)) 0))
(assert (x183 x238))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x335 64 x1111 0)))
(assert (x341 x1053 10000000000))
(assert (x346 2))
(assert (x183 x43))
(assert (x183 x1658))
(assert (x1559 x1024 x34 x26 x665))
(assert (= 0 (x1487 1889567281)))
(assert (x602 x222 x856 x1179 x1286))
(assert (x584 (- x1102 x1042)))
(assert (x183 x1450))
(assert (= (x335 64 x281 0) (x1487 (x335 64 x281 0))))
(assert (= x73 (and x1237 (not x1215))))
(assert (x602 x26 x665 x1286 x1179))
(assert (x218 x1286 (- x1179 x26)))
(assert (x183 x308))
(assert (x218 x1286 (- x1179 x255)))
(assert (x602 x483 x1042 x1179 x1286))
(assert (x1097 10000000000 (x818 x720 10000000000)))
(assert (x602 x34 x1024 x665 x26))
(assert (x1103 41436628393252172163539528543619094058851530980360706587524068930525597794304))
(assert (x584 (- x762 x1286)))
(assert (x183 x289))
(assert (= x604 (and x1362 x1160)))
(assert (x183 x1415))
(assert (= (and x1676 x19) x985))
(assert (x183 x1330))
(assert (x584 (- x665 x1179)))
(assert (= 3 (x257 (x335 64 x716 3))))
(assert (x183 x556))
(assert (= (x1334 (x335 64 x1440 x916)) 64))
(assert (= x1076 (and x44 x463)))
(check-sat)
(exit)
