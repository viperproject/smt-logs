(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x323 (Int) Int)
(declare-fun x457 () Int)
(declare-fun x2548 () Bool)
(declare-fun x4252 () Int)
(declare-fun x5892 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x8889 () Int)
(declare-fun x7387 () Int)
(declare-fun x8447 () Bool)
(declare-fun x3632 () Bool)
(declare-fun x8839 () Int)
(declare-fun x1695 () Int)
(declare-fun x4427 () Bool)
(declare-fun x2227 () Int)
(declare-fun x7049 () Bool)
(declare-fun x4607 () Int)
(declare-fun x827 () Bool)
(declare-fun x3193 () Int)
(declare-fun x4592 () Int)
(declare-fun x4740 (Int) Int)
(declare-fun x6209 () Int)
(declare-fun x5991 () Bool)
(declare-fun x3008 (Int) Int)
(declare-fun x201 () Int)
(declare-fun x4505 () Bool)
(declare-fun x7008 () Bool)
(declare-fun x8511 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x6870 () Int)
(declare-fun x7041 () Int)
(declare-fun x6600 () Bool)
(declare-fun x2253 () Int)
(declare-fun x335 () Int)
(declare-fun x8133 () Bool)
(declare-fun x5321 () Bool)
(declare-fun x1542 () Int)
(declare-fun x6941 (Int) Int)
(declare-fun x499 () Bool)
(declare-fun x1959 () Int)
(declare-fun x6083 () Bool)
(declare-fun x7233 () Bool)
(declare-fun x4956 () Int)
(declare-fun x8616 () Bool)
(declare-fun x5394 () Int)
(declare-fun x2920 () Int)
(declare-fun x1832 () Int)
(declare-fun x8660 () Int)
(declare-fun x4924 () Int)
(declare-fun x7637 () Int)
(declare-fun x4910 () Bool)
(declare-fun x3044 () Int)
(declare-fun x2751 () Int)
(declare-fun x1155 (Int) Int)
(declare-fun x3548 () Int)
(declare-fun x2425 () Bool)
(declare-fun x280 () Int)
(declare-fun x5507 () Bool)
(declare-fun x2279 () Int)
(declare-fun x1772 () Bool)
(declare-fun x3387 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x7683 (Int) Int)
(declare-fun x7784 () Bool)
(declare-fun x2736 () Int)
(declare-fun x6217 (Int) Int)
(declare-fun x8215 () Bool)
(declare-fun x3258 () Int)
(declare-fun x1727 () Bool)
(declare-fun x560 () Int)
(declare-fun x8048 () Int)
(declare-fun x1483 () Bool)
(declare-fun x2692 () Int)
(declare-fun x5186 () Bool)
(declare-fun x4651 () Int)
(declare-fun x8737 () Int)
(declare-fun x8654 () Int)
(declare-fun x643 () Bool)
(declare-fun x6035 (Int) Int)
(declare-fun x1682 () Int)
(declare-fun x577 () Int)
(declare-fun x8405 () Int)
(declare-fun x4683 () Bool)
(declare-fun x549 () Int)
(declare-fun x1474 () Bool)
(declare-fun x8864 () Int)
(declare-fun x6012 () Bool)
(declare-fun x8092 () Int)
(declare-fun x7911 () Bool)
(declare-fun x4355 () Int)
(declare-fun x938 () Int)
(declare-fun x4009 () Bool)
(declare-fun x108 () Int)
(declare-fun x5074 () Int)
(declare-fun x7727 () Int)
(declare-fun x3741 () Int)
(declare-fun x902 () Bool)
(declare-fun x6723 () Int)
(declare-fun x5311 () Int)
(declare-fun x1157 () Bool)
(declare-fun x6563 () Bool)
(declare-fun x8656 () Int)
(declare-fun x2649 () Int)
(declare-fun x7214 () Bool)
(declare-fun x1651 () Int)
(declare-fun x5882 (Int) Int)
(declare-fun x6237 () Int)
(declare-fun x1723 () Bool)
(declare-fun x2682 () Int)
(declare-fun x8976 () Int)
(declare-fun x4595 () Bool)
(declare-fun x8079 () Bool)
(declare-fun x6521 () Int)
(declare-fun x9128 () Int)
(declare-fun x3881 () Int)
(declare-fun x592 () Int)
(declare-fun x8875 () Int)
(declare-fun x4029 () Int)
(declare-fun x315 () Bool)
(declare-fun x9052 () Int)
(declare-fun x88 () Bool)
(declare-fun x3120 () Int)
(declare-fun x3534 () Bool)
(declare-fun x819 () Int)
(declare-fun x7210 () Bool)
(declare-fun x7547 (Int) Int)
(declare-fun x6064 () Bool)
(declare-fun x285 () Int)
(declare-fun x1788 () Int)
(declare-fun x7894 () Int)
(declare-fun x9045 () Int)
(declare-fun x6701 () Int)
(declare-fun x7209 () Bool)
(declare-fun x6409 () Bool)
(declare-fun x509 () Int)
(declare-fun x7521 () Bool)
(declare-fun x8408 (Int) Int)
(declare-fun x6456 () Int)
(declare-fun x3692 () Int)
(declare-fun x284 () Bool)
(declare-fun x4561 () Int)
(declare-fun x6997 (Int) Int)
(declare-fun x4247 () Bool)
(declare-fun x7690 () Bool)
(declare-fun x2520 () Int)
(declare-fun x855 () Int)
(declare-fun x3110 () Int)
(declare-fun x5184 () Int)
(declare-fun x3703 () Int)
(declare-fun x2014 () Int)
(declare-fun x8779 () Bool)
(declare-fun x4079 () Bool)
(declare-fun x5564 () Int)
(declare-fun x3635 () Int)
(declare-fun x8156 () Bool)
(declare-fun x7772 (Int) Int)
(declare-fun x8426 () Bool)
(declare-fun x7108 () Int)
(declare-fun x8944 () Int)
(declare-fun x627 () Int)
(declare-fun x1016 () Int)
(declare-fun x9101 () Int)
(declare-fun x3618 () Int)
(declare-fun x2445 () Bool)
(declare-fun x7002 () Int)
(declare-fun x5551 () Bool)
(declare-fun x208 () Bool)
(declare-fun x1072 () Int)
(declare-fun x7831 () Int)
(declare-fun x8663 () Bool)
(declare-fun x8714 () Int)
(declare-fun x8923 () Bool)
(declare-fun x3063 () Int)
(declare-fun x2869 () Int)
(declare-fun x4288 () Int)
(declare-fun x52 () Int)
(declare-fun x2779 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x3142 () Int)
(declare-fun x6574 () Bool)
(declare-fun x7419 () Int)
(declare-fun x3336 () Int)
(declare-fun x4299 () Int)
(declare-fun x6332 (Int) Int)
(declare-fun x5706 () Int)
(declare-fun x3662 (Int) Int)
(declare-fun x7364 () Bool)
(declare-fun x1767 () Int)
(declare-fun x975 () Int)
(declare-fun x7795 () Int)
(declare-fun x346 () Int)
(declare-fun x4055 () Bool)
(declare-fun x4564 () Int)
(declare-fun x1561 () Int)
(declare-fun x5315 () Int)
(declare-fun x4488 () Int)
(declare-fun x4811 () Bool)
(declare-fun x8466 (Int) Int)
(declare-fun x163 (Int) Int)
(declare-fun x2434 () Bool)
(declare-fun x2191 () Int)
(declare-fun x2576 () Bool)
(declare-fun x8832 () Bool)
(declare-fun x7866 () Bool)
(declare-fun x1406 () Int)
(declare-fun x5220 () Int)
(declare-fun x4093 () Bool)
(declare-fun x8830 () Bool)
(declare-fun x3402 () Bool)
(declare-fun x7427 () Int)
(declare-fun x2146 () Bool)
(declare-fun x8126 () Bool)
(declare-fun x6037 () Int)
(declare-fun x9055 () Bool)
(declare-fun x435 () Int)
(declare-fun x150 () Int)
(declare-fun x4513 () Int)
(declare-fun x448 () Int)
(declare-fun x3305 (Int Int Int) Int)
(declare-fun x1924 () Int)
(declare-fun x3213 () Int)
(declare-fun x635 () Int)
(declare-fun x282 () Bool)
(declare-fun x6656 () Int)
(declare-fun x2803 () Bool)
(declare-fun x3744 () Bool)
(declare-fun x7651 (Int) Int)
(declare-fun x5089 () Int)
(declare-fun x790 (Int) Int)
(declare-fun x6008 () Int)
(declare-fun x1500 () Bool)
(declare-fun x8485 () Bool)
(declare-fun x838 () Int)
(declare-fun x1950 () Bool)
(declare-fun x5290 () Bool)
(declare-fun x8284 () Bool)
(declare-fun x2395 (Int) Int)
(declare-fun x6810 () Bool)
(declare-fun x2967 () Bool)
(declare-fun x5031 () Int)
(declare-fun x5897 () Int)
(declare-fun x6841 () Bool)
(declare-fun x5549 () Int)
(declare-fun x2677 () Bool)
(declare-fun x8090 () Int)
(declare-fun x5323 () Int)
(declare-fun x1441 () Bool)
(declare-fun x7757 () Bool)
(declare-fun x5640 () Int)
(declare-fun x4466 () Int)
(declare-fun x4732 () Int)
(declare-fun x4604 () Int)
(declare-fun x6909 () Bool)
(declare-fun x8958 () Bool)
(declare-fun x5841 () Int)
(declare-fun x6565 () Bool)
(declare-fun x7858 () Bool)
(declare-fun x1153 () Int)
(declare-fun x631 () Bool)
(declare-fun x7629 (Int) Int)
(declare-fun x2105 () Int)
(declare-fun x914 () Int)
(declare-fun x8112 () Bool)
(declare-fun x3338 () Int)
(declare-fun x2790 () Bool)
(declare-fun x684 () Bool)
(declare-fun x4682 () Int)
(declare-fun x2510 () Int)
(declare-fun x1687 () Int)
(declare-fun x3511 () Int)
(declare-fun x1644 (Int) Int)
(declare-fun x127 (Int) Int)
(declare-fun x6685 () Bool)
(declare-fun x7534 () Int)
(declare-fun x4888 () Bool)
(declare-fun x5040 () Bool)
(declare-fun x3645 () Bool)
(declare-fun x4866 () Bool)
(declare-fun x1258 () Int)
(declare-fun x2623 () Bool)
(declare-fun x6468 () Int)
(declare-fun x7252 () Bool)
(declare-fun x8061 () Int)
(declare-fun x1506 () Int)
(declare-fun x1668 (Int) Int)
(declare-fun x5764 () Bool)
(declare-fun x6926 () Bool)
(declare-fun x217 () Int)
(declare-fun x1721 () Int)
(declare-fun x5983 () Int)
(declare-fun x8047 () Bool)
(declare-fun x8388 () Bool)
(declare-fun x1726 () Int)
(declare-fun x915 () Int)
(declare-fun x7581 () Int)
(declare-fun x8197 () Int)
(declare-fun x8821 () Int)
(declare-fun x2337 () Bool)
(declare-fun x8574 () Int)
(declare-fun x2713 (Int) Int)
(declare-fun x1427 () Bool)
(declare-fun x7873 () Bool)
(declare-fun x3963 () Int)
(declare-fun x2404 () Bool)
(declare-fun x6137 () Bool)
(declare-fun x7079 () Bool)
(declare-fun x482 () Int)
(declare-fun x6899 () Int)
(declare-fun x1405 () Int)
(declare-fun x5481 (Int) Int)
(declare-fun x4155 () Int)
(declare-fun x2651 () Bool)
(declare-fun x77 () Int)
(declare-fun x4630 () Int)
(declare-fun x8495 () Int)
(declare-fun x2277 () Bool)
(declare-fun x2505 () Int)
(declare-fun x5082 (Int) Int)
(declare-fun x6684 () Int)
(declare-fun x3904 (Int) Int)
(declare-fun x7768 () Int)
(declare-fun x1046 () Int)
(declare-fun x1940 () Bool)
(declare-fun x3508 () Bool)
(declare-fun x5993 () Bool)
(declare-fun x8940 () Bool)
(declare-fun x5899 () Int)
(declare-fun x7365 () Bool)
(declare-fun x9107 () Int)
(declare-fun x6201 () Int)
(declare-fun x7952 () Int)
(declare-fun x6268 () Bool)
(declare-fun x442 (Int) Int)
(declare-fun x5103 () Int)
(declare-fun x2236 (Int) Int)
(declare-fun x5335 () Int)
(declare-fun x1681 () Int)
(declare-fun x2005 () Int)
(declare-fun x4796 () Int)
(declare-fun x6411 () Bool)
(declare-fun x5012 () Int)
(declare-fun x921 () Bool)
(declare-fun x4057 () Int)
(declare-fun x2204 () Int)
(declare-fun x575 () Int)
(declare-fun x1873 () Bool)
(declare-fun x7814 () Bool)
(declare-fun x7131 () Int)
(declare-fun x4753 () Bool)
(declare-fun x2900 () Int)
(declare-fun x762 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x7711 () Bool)
(declare-fun x6737 () Bool)
(declare-fun x5637 () Bool)
(declare-fun x5151 () Int)
(declare-fun x4524 () Bool)
(declare-fun x1854 () Int)
(declare-fun x613 () Int)
(declare-fun x6836 () Int)
(declare-fun x1991 (Int) Int)
(declare-fun x1220 () Bool)
(declare-fun x8348 () Bool)
(declare-fun x4228 () Bool)
(declare-fun x8328 () Bool)
(declare-fun x4013 () Int)
(declare-fun x4289 () Bool)
(declare-fun x778 () Int)
(declare-fun x6935 () Int)
(declare-fun x4246 () Int)
(declare-fun x1299 () Bool)
(declare-fun x7280 () Bool)
(declare-fun x4369 () Int)
(declare-fun x3203 () Int)
(declare-fun x6849 () Int)
(declare-fun x3887 () Int)
(declare-fun x5240 () Int)
(declare-fun x2985 () Int)
(declare-fun x3788 () Int)
(declare-fun x2142 () Int)
(declare-fun x4014 () Bool)
(declare-fun x500 () Int)
(declare-fun x4296 () Int)
(declare-fun x6762 () Int)
(declare-fun x1168 () Int)
(declare-fun x5545 () Int)
(declare-fun x5181 () Bool)
(declare-fun x8150 () Int)
(declare-fun x1544 () Bool)
(declare-fun x8632 () Int)
(declare-fun x223 () Bool)
(declare-fun x1379 () Int)
(declare-fun x7474 () Int)
(declare-fun x7900 () Bool)
(declare-fun x4915 () Int)
(declare-fun x8480 () Int)
(declare-fun x2335 () Int)
(declare-fun x3600 () Int)
(declare-fun x7011 () Bool)
(declare-fun x6700 () Int)
(declare-fun x5477 () Bool)
(declare-fun x7720 () Int)
(declare-fun x3614 () Int)
(declare-fun x741 () Int)
(declare-fun x7044 (Int) Int)
(declare-fun x8355 () Int)
(declare-fun x6172 () Int)
(declare-fun x6793 () Int)
(declare-fun x4091 () Int)
(declare-fun x519 () Bool)
(declare-fun x1496 () Int)
(declare-fun x3218 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x6180 () Bool)
(declare-fun x8344 () Int)
(declare-fun x8271 () Bool)
(declare-fun x7594 () Int)
(declare-fun x4781 () Int)
(declare-fun x3644 () Int)
(declare-fun x4449 () Bool)
(declare-fun x3973 (Int) Int)
(declare-fun x1431 () Int)
(declare-fun x2300 () Int)
(declare-fun x2122 () Bool)
(declare-fun x515 () Int)
(declare-fun x4780 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x7470 () Bool)
(declare-fun x5669 () Int)
(declare-fun x8670 () Bool)
(declare-fun x8380 (Int) Int)
(declare-fun x1146 () Int)
(declare-fun x3771 () Bool)
(declare-fun x5088 () Int)
(declare-fun x3899 () Int)
(declare-fun x460 () Int)
(declare-fun x2821 () Bool)
(declare-fun x5622 () Int)
(declare-fun x6512 () Int)
(declare-fun x6242 () Int)
(declare-fun x7483 () Bool)
(declare-fun x6284 () Int)
(declare-fun x6796 () Int)
(declare-fun x3805 () Int)
(declare-fun x5517 () Bool)
(declare-fun x7161 (Int) Int)
(declare-fun x1572 () Int)
(declare-fun x3661 () Int)
(declare-fun x7143 (Int) Int)
(declare-fun x4442 () Int)
(declare-fun x5926 () Int)
(declare-fun x4508 () Bool)
(declare-fun x7421 () Bool)
(declare-fun x1966 () Int)
(declare-fun x169 () Int)
(declare-fun x1627 () Int)
(declare-fun x2561 () Bool)
(declare-fun x818 () Int)
(declare-fun x3994 () Bool)
(declare-fun x3507 () Int)
(declare-fun x2077 () Int)
(declare-fun x5101 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x7804 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x7302 (Int) Int)
(declare-fun x4447 () Bool)
(declare-fun x832 () Int)
(declare-fun x2658 (Int) Int)
(declare-fun x2721 () Bool)
(declare-fun x672 () Int)
(declare-fun x6754 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x7428 () Int)
(declare-fun x2580 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x5793 () Bool)
(declare-fun x5160 () Bool)
(declare-fun x4675 () Bool)
(declare-fun x7223 () Int)
(declare-fun x8144 () Bool)
(declare-fun x8273 () Bool)
(declare-fun x5532 () Int)
(declare-fun x1372 () Bool)
(declare-fun x8568 () Int)
(declare-fun x6344 () Bool)
(declare-fun x8703 () Int)
(declare-fun x1366 () Int)
(declare-fun x4221 () Bool)
(declare-fun x8801 () Bool)
(declare-fun x3072 () Int)
(declare-fun x7560 () Bool)
(declare-fun x4396 () Int)
(declare-fun x6744 () Bool)
(declare-fun x514 () Int)
(declare-fun x3403 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x6128 () Bool)
(declare-fun x1445 (Int) Int)
(declare-fun x8418 () Bool)
(declare-fun x7492 () Bool)
(declare-fun x5642 () Bool)
(declare-fun x6040 () Int)
(declare-fun x7639 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x7089 () Int)
(declare-fun x4253 () Int)
(declare-fun x2168 () Bool)
(declare-fun x1154 () Int)
(declare-fun x5462 () Bool)
(declare-fun x7759 () Int)
(declare-fun x6893 () Bool)
(declare-fun x5634 () Bool)
(declare-fun x5208 () Int)
(declare-fun x2700 () Int)
(declare-fun x8609 () Bool)
(declare-fun x3272 () Bool)
(declare-fun x2870 () Int)
(declare-fun x6198 () Bool)
(declare-fun x7568 () Int)
(declare-fun x5969 () Bool)
(declare-fun x371 () Bool)
(declare-fun x4717 () Int)
(declare-fun x1801 () Int)
(declare-fun x1548 (Int) Int)
(declare-fun x7476 () Bool)
(declare-fun x4571 () Int)
(declare-fun x92 () Int)
(declare-fun x8099 () Int)
(declare-fun x5939 () Bool)
(declare-fun x7625 () Bool)
(declare-fun x5128 () Int)
(declare-fun x5592 () Int)
(declare-fun x860 () Bool)
(declare-fun x6241 () Int)
(declare-fun x8065 () Int)
(declare-fun x8251 () Bool)
(declare-fun x8787 () Int)
(declare-fun x6323 () Int)
(declare-fun x6886 () Int)
(declare-fun x2912 () Bool)
(declare-fun x3274 () Bool)
(declare-fun x7742 () Int)
(declare-fun x3011 (Int) Int)
(declare-fun x4953 () Int)
(declare-fun x4028 () Bool)
(declare-fun x2313 () Int)
(declare-fun x5580 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x8435 () Int)
(declare-fun x9077 () Int)
(declare-fun x2554 () Int)
(declare-fun x3697 () Int)
(declare-fun x735 () Int)
(declare-fun x1360 () Int)
(declare-fun x1883 () Int)
(declare-fun x7119 () Int)
(declare-fun x5676 (Int) Int)
(declare-fun x245 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x7555 () Bool)
(declare-fun x565 () Int)
(declare-fun x3077 () Int)
(declare-fun x3742 () Int)
(declare-fun x3501 () Bool)
(declare-fun x7073 () Int)
(declare-fun x8393 () Bool)
(declare-fun x4169 () Bool)
(declare-fun x82 () Bool)
(declare-fun x7715 () Int)
(declare-fun x7184 () Int)
(declare-fun x8152 () Bool)
(declare-fun x886 () Int)
(declare-fun x6458 () Bool)
(declare-fun x5317 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x6350 () Bool)
(declare-fun x7748 () Int)
(declare-fun x5557 () Int)
(declare-fun x95 () Bool)
(declare-fun x5708 () Bool)
(declare-fun x2144 () Int)
(declare-fun x1902 () Bool)
(declare-fun x5958 () Int)
(declare-fun x929 () Int)
(declare-fun x6168 () Bool)
(declare-fun x9088 () Int)
(declare-fun x4201 () Int)
(declare-fun x2765 () Int)
(declare-fun x7215 () Int)
(declare-fun x2619 () Int)
(declare-fun x1845 () Bool)
(declare-fun x4366 () Int)
(declare-fun x3634 () Int)
(declare-fun x3413 () Int)
(declare-fun x7686 () Int)
(declare-fun x8299 () Int)
(declare-fun x7658 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x4175 () Int)
(declare-fun x5973 () Bool)
(declare-fun x6100 () Bool)
(declare-fun x2989 () Int)
(declare-fun x3869 () Int)
(declare-fun x4816 () Int)
(declare-fun x4569 () Int)
(declare-fun x3537 () Bool)
(declare-fun x5404 () Int)
(declare-fun x1344 () Int)
(declare-fun x5755 () Bool)
(declare-fun x3850 () Int)
(declare-fun x2804 () Int)
(declare-fun x140 () Int)
(declare-fun x1980 () Int)
(declare-fun x7835 () Bool)
(declare-fun x2120 () Int)
(declare-fun x1606 () Int)
(declare-fun x112 () Int)
(declare-fun x4376 () Int)
(declare-fun x4752 () Int)
(declare-fun x957 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x1259 () Int)
(declare-fun x5011 () Int)
(declare-fun x3158 () Int)
(declare-fun x4121 () Int)
(declare-fun x7989 () Bool)
(declare-fun x2347 () Bool)
(declare-fun x7823 () Int)
(declare-fun x146 () Bool)
(declare-fun x3474 () Bool)
(declare-fun x4733 () Bool)
(declare-fun x8989 () Int)
(declare-fun x2147 () Int)
(declare-fun x6921 () Int)
(declare-fun x1307 () Int)
(declare-fun x4562 () Bool)
(declare-fun x340 () Int)
(declare-fun x8060 () Int)
(declare-fun x3893 () Bool)
(declare-fun x6484 () Int)
(declare-fun x4998 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x4834 () Bool)
(declare-fun x2955 () Int)
(declare-fun x8225 () Int)
(declare-fun x1309 () Bool)
(declare-fun x6475 () Int)
(declare-fun x3178 () Int)
(declare-fun x2378 () Int)
(declare-fun x342 () Int)
(declare-fun x5651 () Bool)
(declare-fun x2280 () Int)
(declare-fun x8695 (Int) Int)
(declare-fun x3586 () Int)
(declare-fun x3727 () Bool)
(declare-fun x1397 () Int)
(declare-fun x1818 () Bool)
(declare-fun x1911 () Int)
(declare-fun x7888 () Int)
(declare-fun x8803 () Int)
(declare-fun x1880 () Int)
(declare-fun x469 () Int)
(declare-fun x4431 () Int)
(declare-fun x1505 () Bool)
(declare-fun x7881 (Int) Int)
(declare-fun x8087 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x5828 () Int)
(declare-fun x6061 () Int)
(declare-fun x1839 () Int)
(declare-fun x4517 () Int)
(declare-fun x5733 (Int) Int)
(declare-fun x3993 () Int)
(declare-fun x9050 () Int)
(declare-fun x8373 () Int)
(declare-fun x7536 () Bool)
(declare-fun x5448 () Int)
(declare-fun x8846 () Int)
(declare-fun x4985 () Int)
(declare-fun x6056 () Bool)
(declare-fun x3580 () Int)
(declare-fun x917 () Int)
(declare-fun x4842 () Int)
(declare-fun x6183 () Bool)
(declare-fun x6978 () Int)
(declare-fun x7947 () Bool)
(declare-fun x464 () Int)
(declare-fun x7371 () Int)
(declare-fun x8935 () Int)
(declare-fun x3365 () Bool)
(declare-fun x6595 () Int)
(declare-fun x5741 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x5091 () Bool)
(declare-fun x2543 () Bool)
(declare-fun x7563 () Bool)
(declare-fun x8541 () Int)
(declare-fun x5506 () Int)
(declare-fun x700 () Bool)
(declare-fun x7893 () Int)
(declare-fun x1740 (Int) Int)
(declare-fun x7918 () Bool)
(declare-fun x56 () Bool)
(declare-fun x883 () Bool)
(declare-fun x7340 () Int)
(declare-fun x4423 () Int)
(declare-fun x3594 () Bool)
(declare-fun x4817 () Int)
(declare-fun x1131 () Bool)
(declare-fun x1586 () Int)
(declare-fun x8015 () Bool)
(declare-fun x8973 () Int)
(declare-fun x17 () Int)
(declare-fun x6786 () Int)
(declare-fun x6021 () Int)
(declare-fun x4558 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x8283 () Int)
(declare-fun x3039 () Bool)
(declare-fun x5742 () Int)
(declare-fun x6174 () Int)
(declare-fun x7904 () Int)
(declare-fun x5752 () Int)
(declare-fun x3042 () Bool)
(declare-fun x4102 () Int)
(declare-fun x287 () Bool)
(declare-fun x8148 () Int)
(declare-fun x3290 () Bool)
(declare-fun x8321 () Int)
(declare-fun x1857 () Int)
(declare-fun x4453 () Bool)
(declare-fun x6703 () Int)
(declare-fun x1501 () Int)
(declare-fun x5119 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x8196 () Bool)
(declare-fun x7798 () Bool)
(declare-fun x3294 (Int) Int)
(declare-fun x1631 () Bool)
(declare-fun x2213 () Int)
(declare-fun x7781 () Bool)
(declare-fun x7599 () Int)
(declare-fun x2665 () Int)
(declare-fun x3985 () Int)
(declare-fun x8313 () Bool)
(declare-fun x8367 () Bool)
(declare-fun x4232 () Int)
(declare-fun x6583 () Bool)
(declare-fun x2975 () Int)
(declare-fun x1953 () Int)
(declare-fun x8406 () Bool)
(declare-fun x6769 () Int)
(declare-fun x1525 () Int)
(declare-fun x7763 () Bool)
(declare-fun x5163 () Bool)
(declare-fun x5215 () Int)
(declare-fun x8884 () Int)
(declare-fun x1718 () Bool)
(declare-fun x7158 () Int)
(declare-fun x152 (Int) Int)
(declare-fun x4507 () Bool)
(declare-fun x4140 () Bool)
(declare-fun x2463 () Int)
(declare-fun x6331 () Bool)
(declare-fun x8297 () Int)
(declare-fun x7607 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x5587 () Int)
(declare-fun x6635 () Int)
(declare-fun x6860 () Bool)
(declare-fun x2735 () Bool)
(declare-fun x6395 () Int)
(declare-fun x878 () Int)
(declare-fun x2935 () Int)
(declare-fun x8312 () Int)
(declare-fun x6533 () Int)
(declare-fun x8365 () Int)
(declare-fun x4195 () Bool)
(declare-fun x4204 () Bool)
(declare-fun x3561 () Bool)
(declare-fun x7007 () Bool)
(declare-fun x4766 (Int Int) Int)
(declare-fun x5120 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x1820 () Int)
(declare-fun x1511 () Bool)
(declare-fun x5765 () Int)
(declare-fun x2069 () Bool)
(declare-fun x4348 () Int)
(declare-fun x5408 () Int)
(declare-fun x6319 () Int)
(declare-fun x7621 () Int)
(declare-fun x8302 () Int)
(declare-fun x2575 () Int)
(declare-fun x7150 () Int)
(declare-fun x6145 (Int) Int)
(declare-fun x2940 () Bool)
(declare-fun x2844 () Int)
(declare-fun x7924 () Int)
(declare-fun x4327 () Int)
(declare-fun x4611 () Bool)
(declare-fun x4135 () Int)
(declare-fun x6842 () Bool)
(declare-fun x8536 () Int)
(declare-fun x4906 () Bool)
(declare-fun x4774 () Int)
(declare-fun x3844 () Int)
(declare-fun x8433 () Int)
(declare-fun x4478 () Int)
(declare-fun x1529 () Int)
(declare-fun x2098 () Int)
(declare-fun x4746 () Int)
(declare-fun x5910 () Bool)
(declare-fun x41 () Int)
(declare-fun x1962 () Bool)
(declare-fun x6532 (Int) Int)
(declare-fun x996 () Bool)
(declare-fun x7909 () Bool)
(declare-fun x3857 () Bool)
(declare-fun x6337 () Int)
(declare-fun x424 () Bool)
(declare-fun x8311 (Int) Int)
(declare-fun x3331 () Bool)
(declare-fun x6471 () Int)
(declare-fun x1928 () Bool)
(declare-fun x7300 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x5401 () Int)
(declare-fun x673 () Int)
(declare-fun x3395 () Bool)
(declare-fun x3889 () Bool)
(declare-fun x5975 () Int)
(declare-fun x3383 () Bool)
(declare-fun x3172 () Bool)
(declare-fun x8812 () Int)
(declare-fun x4461 () Int)
(declare-fun x7525 () Int)
(declare-fun x4657 () Int)
(declare-fun x7390 () Int)
(declare-fun x8641 () Int)
(declare-fun x4126 () Bool)
(declare-fun x4053 () Bool)
(declare-fun x7056 () Bool)
(declare-fun x5403 () Int)
(declare-fun x6112 () Bool)
(declare-fun x505 () Bool)
(declare-fun x2344 () Int)
(declare-fun x2685 () Int)
(declare-fun x4380 () Int)
(declare-fun x6745 () Bool)
(declare-fun x2212 () Int)
(declare-fun x5399 () Bool)
(declare-fun x206 () Int)
(declare-fun x6427 () Bool)
(declare-fun x4329 () Bool)
(declare-fun x3589 () Bool)
(declare-fun x8781 () Bool)
(declare-fun x7828 () Bool)
(declare-fun x9108 () Bool)
(declare-fun x3876 () Bool)
(declare-fun x7083 () Int)
(declare-fun x5139 () Int)
(declare-fun x1502 () Bool)
(declare-fun x4391 () Bool)
(declare-fun x5602 () Int)
(declare-fun x1912 () Int)
(declare-fun x7053 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x3116 () Bool)
(declare-fun x3168 () Int)
(declare-fun x5584 () Int)
(declare-fun x630 () Int)
(declare-fun x1568 () Int)
(declare-fun x8494 () Bool)
(declare-fun x2495 () Int)
(declare-fun x9085 () Int)
(declare-fun x6397 () Int)
(declare-fun x6632 () Int)
(declare-fun x6461 () Bool)
(declare-fun x6822 (Int) Int)
(declare-fun x1125 () Bool)
(declare-fun x6963 () Int)
(declare-fun x6587 () Int)
(declare-fun x5329 () Bool)
(declare-fun x6042 () Bool)
(declare-fun x2644 () Int)
(declare-fun x6891 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x8504 () Bool)
(declare-fun x8326 () Bool)
(declare-fun x7762 () Int)
(declare-fun x6271 () Int)
(declare-fun x6464 () Int)
(declare-fun x7822 () Int)
(declare-fun x4521 () Bool)
(declare-fun x3104 () Int)
(declare-fun x2139 () Bool)
(declare-fun x7164 () Bool)
(declare-fun x7320 () Bool)
(declare-fun x5133 () Bool)
(declare-fun x5904 () Int)
(declare-fun x8170 () Int)
(declare-fun x935 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x6854 () Int)
(declare-fun x3320 () Bool)
(declare-fun x3199 () Int)
(declare-fun x4843 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x5047 () Int)
(declare-fun x8762 () Int)
(declare-fun x3027 () Int)
(declare-fun x161 () Int)
(declare-fun x802 () Int)
(declare-fun x7229 () Bool)
(declare-fun x2366 () Int)
(declare-fun x1809 () Int)
(declare-fun x8129 () Bool)
(declare-fun x775 () Bool)
(declare-fun x7693 () Int)
(declare-fun x1872 () Bool)
(declare-fun x3915 () Bool)
(declare-fun x5747 () Bool)
(declare-fun x4769 () Int)
(declare-fun x8642 () Int)
(declare-fun x5681 () Int)
(declare-fun x1975 () Int)
(declare-fun x4977 (Int) Int)
(declare-fun x2704 () Bool)
(declare-fun x215 () Int)
(declare-fun x589 (Int) Int)
(declare-fun x7809 () Int)
(declare-fun x9060 () Int)
(declare-fun x5544 () Int)
(declare-fun x1635 () Int)
(declare-fun x961 (Int) Int)
(declare-fun x4120 () Bool)
(declare-fun x233 () Bool)
(declare-fun x3306 () Int)
(declare-fun x6541 () Int)
(declare-fun x1581 () Bool)
(declare-fun x5930 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x5639 () Bool)
(declare-fun x4437 () Bool)
(declare-fun x859 () Bool)
(declare-fun x8537 () Int)
(declare-fun x6950 () Int)
(declare-fun x3428 () Int)
(declare-fun x8137 () Int)
(declare-fun x742 () Int)
(declare-fun x7170 () Bool)
(declare-fun x1208 (Int) Int)
(declare-fun x8078 () Bool)
(declare-fun x8704 () Int)
(declare-fun x4797 () Bool)
(declare-fun x5369 () Int)
(declare-fun x8794 () Bool)
(declare-fun x5417 () Bool)
(declare-fun x3769 () Bool)
(declare-fun x7949 () Bool)
(declare-fun x6794 () Bool)
(declare-fun x7436 () Int)
(declare-fun x2579 () Bool)
(declare-fun x5248 () Int)
(declare-fun x937 () Int)
(declare-fun x4092 () Bool)
(declare-fun x2657 () Int)
(declare-fun x5500 () Bool)
(declare-fun x2588 (Int) Int)
(declare-fun x2777 () Bool)
(declare-fun x8903 () Int)
(declare-fun x7437 () Int)
(declare-fun x6661 () Bool)
(declare-fun x5410 () Bool)
(declare-fun x7943 () Bool)
(declare-fun x5159 () Bool)
(declare-fun x6494 () Int)
(declare-fun x3649 () Bool)
(declare-fun x4758 () Int)
(declare-fun x6759 () Int)
(declare-fun x2743 () Bool)
(declare-fun x2019 () Int)
(declare-fun x6428 (Int) Int)
(declare-fun x2099 () Int)
(declare-fun x2792 () Int)
(declare-fun x18 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x2485 () Int)
(declare-fun x8121 () Bool)
(declare-fun x6096 () Int)
(declare-fun x7288 () Int)
(declare-fun x2400 () Int)
(declare-fun x3520 () Bool)
(declare-fun x1890 () Bool)
(declare-fun x6719 () Int)
(declare-fun x8688 () Bool)
(declare-fun x4127 () Bool)
(declare-fun x6176 () Int)
(declare-fun x8455 () Int)
(declare-fun x2206 () Bool)
(declare-fun x6123 () Bool)
(declare-fun x7494 () Int)
(declare-fun x4900 () Bool)
(declare-fun x5589 () Int)
(declare-fun x8245 () Int)
(declare-fun x3940 () Int)
(declare-fun x27 () Bool)
(declare-fun x7673 () Int)
(declare-fun x4419 () Int)
(declare-fun x6603 () Bool)
(declare-fun x6341 () Int)
(declare-fun x1369 () Bool)
(declare-fun x9059 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x5442 () Int)
(declare-fun x9037 () Bool)
(declare-fun x4917 () Int)
(declare-fun x4566 () Bool)
(declare-fun x1368 () Int)
(declare-fun x7992 () Bool)
(declare-fun x5202 () Int)
(declare-fun x7648 () Int)
(declare-fun x3626 () Int)
(declare-fun x358 () Int)
(declare-fun x8166 () Int)
(declare-fun x3363 () Bool)
(declare-fun x5306 () Bool)
(declare-fun x6009 () Int)
(declare-fun x5252 () Int)
(declare-fun x8778 () Int)
(declare-fun x6629 () Bool)
(declare-fun x8182 () Int)
(declare-fun x2302 (Int) Int)
(declare-fun x1898 () Bool)
(declare-fun x5102 () Bool)
(declare-fun x744 () Int)
(declare-fun x708 () Bool)
(declare-fun x6573 () Bool)
(declare-fun x2368 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x2499 () Bool)
(declare-fun x8515 () Int)
(declare-fun x3750 () Int)
(declare-fun x615 () Bool)
(declare-fun x2696 () Int)
(declare-fun x4379 () Bool)
(declare-fun x3759 () Int)
(declare-fun x8023 () Bool)
(declare-fun x2717 () Int)
(declare-fun x3657 () Bool)
(declare-fun x3412 (Int) Int)
(declare-fun x9119 () Bool)
(declare-fun x852 () Int)
(declare-fun x5788 () Bool)
(declare-fun x3684 () Bool)
(declare-fun x3519 () Bool)
(declare-fun x5471 () Bool)
(declare-fun x533 () Int)
(declare-fun x3602 () Bool)
(declare-fun x1972 () Int)
(declare-fun x4216 () Int)
(declare-fun x7081 () Int)
(declare-fun x3575 () Int)
(declare-fun x2603 () Bool)
(declare-fun x8329 () Int)
(declare-fun x2524 () Bool)
(declare-fun x779 () Int)
(declare-fun x1797 () Bool)
(declare-fun x7576 () Bool)
(declare-fun x7260 () Bool)
(declare-fun x4967 () Int)
(declare-fun x5588 () Int)
(declare-fun x3447 () Bool)
(declare-fun x709 () Bool)
(declare-fun x2840 () Int)
(declare-fun x4955 () Int)
(declare-fun x3359 () Int)
(declare-fun x5912 () Int)
(declare-fun x2323 () Int)
(declare-fun x2965 () Bool)
(declare-fun x3410 (Int) Int)
(declare-fun x7133 () Bool)
(declare-fun x5762 () Int)
(declare-fun x541 () Int)
(declare-fun x2556 (Int) Int)
(declare-fun x979 () Bool)
(declare-fun x297 () Bool)
(declare-fun x7635 () Int)
(declare-fun x7843 () Int)
(declare-fun x3241 () Int)
(declare-fun x5965 () Int)
(declare-fun x2812 () Bool)
(declare-fun x4116 (Int) Int)
(declare-fun x4980 () Int)
(declare-fun x2919 () Bool)
(declare-fun x5196 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x5600 () Bool)
(declare-fun x8680 () Bool)
(declare-fun x9032 () Bool)
(declare-fun x3980 () Int)
(declare-fun x4491 () Int)
(declare-fun x6003 () Int)
(declare-fun x1450 () Int)
(declare-fun x661 () Int)
(declare-fun x1826 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x2729 () Bool)
(declare-fun x3612 () Bool)
(declare-fun x2164 () Bool)
(declare-fun x1577 () Int)
(declare-fun x3882 () Int)
(declare-fun x135 () Int)
(declare-fun x6390 () Int)
(declare-fun x3312 () Int)
(declare-fun x1345 () Int)
(declare-fun x7060 () Bool)
(declare-fun x1469 (Int) Int)
(declare-fun x1167 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x220 () Bool)
(declare-fun x6142 () Bool)
(declare-fun x2421 () Int)
(declare-fun x8721 () Int)
(declare-fun x6497 () Bool)
(declare-fun x3283 () Int)
(declare-fun x6717 () Bool)
(declare-fun x7442 () Int)
(declare-fun x6718 () Int)
(declare-fun x6249 () Int)
(declare-fun x8916 () Bool)
(declare-fun x3922 (Int) Int)
(declare-fun x6420 () Bool)
(declare-fun x1477 () Int)
(declare-fun x6349 () Int)
(declare-fun x8359 () Int)
(declare-fun x5424 () Bool)
(declare-fun x5347 () Int)
(declare-fun x3890 () Int)
(declare-fun x1933 () Bool)
(declare-fun x7640 () Bool)
(declare-fun x5782 () Bool)
(declare-fun x602 () Int)
(declare-fun x2784 () Int)
(declare-fun x14 () Int)
(declare-fun x8190 () Int)
(declare-fun x9026 () Bool)
(declare-fun x2738 () Bool)
(declare-fun x1747 () Int)
(declare-fun x5340 () Int)
(declare-fun x8354 () Bool)
(declare-fun x6492 () Int)
(declare-fun x1647 () Int)
(declare-fun x6693 () Int)
(declare-fun x3845 (Int) Int)
(declare-fun x7438 () Int)
(declare-fun x1796 () Bool)
(declare-fun x2291 () Int)
(declare-fun x4674 () Int)
(declare-fun x439 () Int)
(declare-fun x7341 () Bool)
(declare-fun x5125 () Int)
(declare-fun x1489 () Int)
(declare-fun x6215 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x2850 () Int)
(declare-fun x136 () Int)
(declare-fun x5418 (Int) Int)
(declare-fun x3934 () Bool)
(declare-fun x3177 () Int)
(declare-fun x1584 () Bool)
(declare-fun x7964 () Bool)
(declare-fun x2854 () Int)
(declare-fun x5427 () Int)
(declare-fun x5492 () Bool)
(declare-fun x1243 () Int)
(declare-fun x4361 () Bool)
(declare-fun x168 () Int)
(declare-fun x2656 () Int)
(declare-fun x2771 () Bool)
(declare-fun x7466 () Int)
(declare-fun x5643 () Bool)
(declare-fun x1348 () Int)
(declare-fun x3964 (Int) Int)
(declare-fun x928 () Int)
(declare-fun x4078 () Int)
(declare-fun x8999 () Int)
(declare-fun x7313 () Bool)
(declare-fun x7938 (Int) Int)
(declare-fun x3247 () Bool)
(declare-fun x5921 () Int)
(declare-fun x7197 () Bool)
(declare-fun x43 () Bool)
(declare-fun x5426 () Int)
(declare-fun x7845 () Bool)
(declare-fun x3883 () Bool)
(declare-fun x3500 () Bool)
(declare-fun x3075 () Bool)
(declare-fun x5314 () Int)
(declare-fun x2052 () Bool)
(declare-fun x51 () Bool)
(declare-fun x417 () Bool)
(declare-fun x3733 () Int)
(declare-fun x6597 () Int)
(declare-fun x8848 (Int) Int)
(declare-fun x4764 () Bool)
(declare-fun x8631 () Bool)
(declare-fun x3595 () Int)
(declare-fun x4238 () Int)
(declare-fun x8898 () Int)
(declare-fun x5021 () Int)
(declare-fun x5060 () Bool)
(declare-fun x2247 () Bool)
(declare-fun x2408 () Bool)
(declare-fun x8213 () Int)
(declare-fun x8805 () Int)
(declare-fun x2691 () Int)
(declare-fun x9005 () Int)
(declare-fun x8202 () Int)
(declare-fun x6478 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x175 () Int)
(declare-fun x1952 () Bool)
(declare-fun x3891 () Int)
(declare-fun x6594 () Int)
(declare-fun x740 () Int)
(declare-fun x4670 () Int)
(declare-fun x1486 () Int)
(declare-fun x7932 () Int)
(declare-fun x3246 () Bool)
(declare-fun x7486 () Int)
(declare-fun x2401 () Int)
(declare-fun x6897 () Bool)
(declare-fun x5498 () Int)
(declare-fun x7743 () Int)
(declare-fun x6294 () Int)
(declare-fun x688 () Int)
(declare-fun x2755 () Bool)
(declare-fun x6413 () Int)
(declare-fun x977 () Int)
(declare-fun x7275 () Int)
(declare-fun x5388 () Int)
(declare-fun x3024 () Bool)
(declare-fun x6900 () Int)
(declare-fun x939 () Int)
(declare-fun x6774 () Bool)
(declare-fun x2370 () Int)
(declare-fun x8856 () Bool)
(declare-fun x281 (Int) Int)
(declare-fun x1761 () Int)
(declare-fun x1462 () Int)
(declare-fun x3965 () Int)
(declare-fun x2002 () Bool)
(declare-fun x7497 () Bool)
(declare-fun x410 () Int)
(declare-fun x5297 () Bool)
(declare-fun x6651 () Int)
(declare-fun x4381 () Int)
(declare-fun x5346 (Int) Int)
(declare-fun x6876 () Bool)
(declare-fun x4591 () Bool)
(declare-fun x2922 () Int)
(declare-fun x1132 () Int)
(declare-fun x5730 () Bool)
(declare-fun x4854 () Int)
(declare-fun x7754 () Bool)
(declare-fun x9062 () Int)
(declare-fun x8943 () Bool)
(declare-fun x6520 () Int)
(declare-fun x633 () Bool)
(declare-fun x1413 () Int)
(declare-fun x6947 () Int)
(declare-fun x4426 () Int)
(declare-fun x7573 () Int)
(declare-fun x444 () Bool)
(declare-fun x7256 () Bool)
(declare-fun x4290 (Int) Int)
(declare-fun x8216 () Int)
(declare-fun x2873 () Bool)
(declare-fun x6119 (Int) Int)
(declare-fun x4887 () Int)
(declare-fun x7889 () Int)
(declare-fun x8429 () Int)
(declare-fun x1138 () Bool)
(declare-fun x6297 (Int) Int)
(declare-fun x4578 () Bool)
(declare-fun x6679 () Int)
(declare-fun x3691 () Bool)
(declare-fun x6085 () Int)
(declare-fun x4685 () Bool)
(declare-fun x971 () Int)
(declare-fun x6322 () Int)
(declare-fun x8947 () Int)
(declare-fun x5987 () Bool)
(declare-fun x7228 () Bool)
(declare-fun x4979 () Int)
(declare-fun x2778 () Int)
(declare-fun x7551 () Int)
(declare-fun x7612 () Bool)
(declare-fun x7146 () Bool)
(declare-fun x2338 () Int)
(declare-fun x881 () Int)
(declare-fun x1418 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x7758 () Bool)
(declare-fun x5653 () Int)
(declare-fun x4401 () Bool)
(declare-fun x4501 (Int) Int)
(declare-fun x4896 () Int)
(declare-fun x2439 () Int)
(declare-fun x1915 () Bool)
(declare-fun x8749 () Bool)
(declare-fun x513 () Bool)
(declare-fun x6791 () Int)
(declare-fun x91 () Bool)
(declare-fun x8580 () Int)
(declare-fun x5156 (Int) Int)
(declare-fun x3050 () Bool)
(declare-fun x4629 () Int)
(declare-fun x5528 () Int)
(declare-fun x4047 () Int)
(declare-fun x5726 () Bool)
(declare-fun x1324 () Int)
(declare-fun x4489 () Bool)
(declare-fun x7995 () Int)
(declare-fun x3786 () Int)
(declare-fun x2746 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x6800 () Bool)
(declare-fun x8163 () Int)
(declare-fun x8735 () Int)
(declare-fun x1583 () Bool)
(declare-fun x8906 () Int)
(declare-fun x8318 () Int)
(declare-fun x8939 () Int)
(declare-fun x4520 () Bool)
(declare-fun x7117 (Int) Int)
(declare-fun x3968 () Bool)
(declare-fun x7455 () Int)
(declare-fun x7760 () Int)
(declare-fun x5496 () Bool)
(declare-fun x5131 () Int)
(declare-fun x7173 () Int)
(declare-fun x8475 () Bool)
(declare-fun x8928 () Int)
(declare-fun x4570 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x8049 () Int)
(declare-fun x2587 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x324 () Int)
(declare-fun x5117 () Int)
(declare-fun x1677 () Int)
(declare-fun x1384 () Int)
(declare-fun x1376 () Int)
(declare-fun x7543 () Int)
(declare-fun x7803 () Int)
(declare-fun x1716 (Int) Int)
(declare-fun x2538 () Int)
(declare-fun x598 () Bool)
(declare-fun x8303 () Int)
(declare-fun x2130 () Bool)
(declare-fun x8748 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x5941 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x5915 () Int)
(declare-fun x537 () Int)
(declare-fun x6157 () Int)
(declare-fun x1160 () Bool)
(declare-fun x2350 () Int)
(declare-fun x3056 () Bool)
(declare-fun x2629 () Int)
(declare-fun x6124 (Int) Int)
(declare-fun x7066 (Int) Int)
(declare-fun x7236 () Bool)
(declare-fun x7354 () Int)
(declare-fun x5932 () Bool)
(declare-fun x5548 () Int)
(declare-fun x5659 () Int)
(declare-fun x2234 () Bool)
(declare-fun x7004 () Int)
(declare-fun x4319 () Int)
(declare-fun x7318 () Int)
(declare-fun x466 () Int)
(declare-fun x3924 () Int)
(declare-fun x5303 () Int)
(declare-fun x9091 () Int)
(declare-fun x2334 () Int)
(declare-fun x2816 () Bool)
(declare-fun x4992 () Int)
(declare-fun x4159 () Bool)
(declare-fun x5191 () Int)
(declare-fun x6150 () Int)
(declare-fun x3659 () Int)
(declare-fun x1024 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x8191 () Int)
(declare-fun x814 () Int)
(declare-fun x5674 () Bool)
(declare-fun x5618 (Int) Int)
(declare-fun x7451 () Int)
(declare-fun x3443 () Int)
(declare-fun x2932 () Bool)
(declare-fun x9010 () Int)
(declare-fun x7230 (Int) Int)
(declare-fun x6289 () Bool)
(declare-fun x1700 () Int)
(declare-fun x1514 () Bool)
(declare-fun x7549 () Bool)
(declare-fun x2429 () Int)
(declare-fun x6135 () Int)
(declare-fun x306 () Int)
(declare-fun x4891 () Int)
(declare-fun x5972 (Int) Int)
(declare-fun x1460 () Bool)
(declare-fun x1113 () Int)
(declare-fun x1111 () Int)
(declare-fun x436 () Int)
(declare-fun x130 (Int) Int)
(declare-fun x7570 () Int)
(declare-fun x142 () Int)
(declare-fun x1535 () Bool)
(declare-fun x7286 () Int)
(declare-fun x9007 () Int)
(declare-fun x2240 () Int)
(declare-fun x7687 () Int)
(declare-fun x7202 () Int)
(declare-fun x7306 () Bool)
(declare-fun x7015 () Bool)
(declare-fun x7155 () Int)
(declare-fun x5048 () Int)
(declare-fun x7273 () Bool)
(declare-fun x8907 () Bool)
(declare-fun x7072 () Bool)
(declare-fun x7976 () Bool)
(declare-fun x3499 () Int)
(declare-fun x5237 () Int)
(declare-fun x251 () Bool)
(declare-fun x1451 () Int)
(declare-fun x4943 () Bool)
(declare-fun x2085 () Int)
(declare-fun x8505 () Int)
(declare-fun x9076 () Bool)
(declare-fun x7847 () Int)
(declare-fun x73 () Bool)
(declare-fun x8892 () Int)
(declare-fun x2616 () Bool)
(declare-fun x6973 () Int)
(declare-fun x1539 () Int)
(declare-fun x5697 () Bool)
(declare-fun x3209 () Int)
(declare-fun x3471 () Int)
(declare-fun x5475 () Int)
(declare-fun x5006 () Int)
(declare-fun x5439 () Bool)
(declare-fun x4831 () Bool)
(declare-fun x4631 () Int)
(declare-fun x5382 () Bool)
(declare-fun x38 () Int)
(declare-fun x8621 () Bool)
(declare-fun x5775 (Int) Int)
(declare-fun x7802 () Int)
(declare-fun x3098 () Int)
(declare-fun x6993 () Int)
(declare-fun x7796 () Int)
(declare-fun x7473 () Bool)
(declare-fun x5201 () Bool)
(declare-fun x259 () Int)
(declare-fun x6018 () Bool)
(declare-fun x6333 () Bool)
(declare-fun x5282 () Int)
(declare-fun x2737 () Int)
(declare-fun x758 () Int)
(declare-fun x7769 () Bool)
(declare-fun x4931 () Bool)
(declare-fun x322 () Int)
(declare-fun x5338 () Int)
(declare-fun x7867 () Int)
(declare-fun x5913 () Int)
(declare-fun x5154 () Int)
(declare-fun x4335 () Bool)
(declare-fun x8561 () Bool)
(declare-fun x4544 () Int)
(declare-fun x3462 () Bool)
(declare-fun x3334 () Int)
(declare-fun x4186 () Int)
(declare-fun x7662 () Int)
(declare-fun x6487 () Bool)
(declare-fun x6433 () Bool)
(declare-fun x8064 () Int)
(declare-fun x5322 () Bool)
(declare-fun x590 () Bool)
(declare-fun x7268 () Bool)
(declare-fun x2578 (Int) Int)
(declare-fun x6347 () Bool)
(declare-fun x5540 () Int)
(declare-fun x4923 () Int)
(declare-fun x4515 () Int)
(declare-fun x8679 () Bool)
(declare-fun x8194 () Int)
(declare-fun x7141 () Int)
(declare-fun x1810 () Int)
(declare-fun x1569 () Int)
(declare-fun x726 () Int)
(declare-fun x7036 () Int)
(declare-fun x4217 () Int)
(declare-fun x3853 () Int)
(declare-fun x8764 () Bool)
(declare-fun x8646 () Int)
(declare-fun x2744 () Bool)
(declare-fun x2795 () Int)
(declare-fun x3390 () Int)
(declare-fun x1922 () Int)
(declare-fun x4149 () Int)
(declare-fun x3819 () Int)
(declare-fun x6238 () Bool)
(declare-fun x5233 () Bool)
(declare-fun x5657 () Int)
(declare-fun x6820 () Int)
(declare-fun x4300 () Int)
(declare-fun x7540 () Bool)
(declare-fun x8552 () Int)
(declare-fun x2891 () Int)
(declare-fun x6528 () Bool)
(declare-fun x6818 () Int)
(declare-fun x1698 () Bool)
(declare-fun x4365 () Int)
(declare-fun x1737 () Bool)
(declare-fun x8110 () Int)
(declare-fun x2126 () Bool)
(declare-fun x9047 () Int)
(declare-fun x7422 () Int)
(declare-fun x1983 () Int)
(declare-fun x2521 () Bool)
(declare-fun x5200 () Int)
(declare-fun x8533 () Bool)
(declare-fun x7253 () Int)
(declare-fun x6423 () Bool)
(declare-fun x5182 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x3571 () Int)
(declare-fun x1493 () Int)
(declare-fun x6192 () Int)
(declare-fun x4304 () Bool)
(declare-fun x4070 () Bool)
(declare-fun x6654 () Int)
(declare-fun x4145 () Bool)
(declare-fun x7249 () Int)
(declare-fun x2916 () Int)
(declare-fun x6812 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x8527 () Bool)
(declare-fun x5283 () Bool)
(declare-fun x5264 () Bool)
(declare-fun x4686 () Bool)
(declare-fun x373 () Bool)
(declare-fun x9 () Int)
(declare-fun x941 () Int)
(declare-fun x8510 () Int)
(declare-fun x787 () Bool)
(declare-fun x8965 () Int)
(declare-fun x7167 () Int)
(declare-fun x3107 () Int)
(declare-fun x7615 () Int)
(declare-fun x1180 () Int)
(declare-fun x5353 () Int)
(declare-fun x5519 () Int)
(declare-fun x4034 () Bool)
(declare-fun x5799 (Int) Int)
(declare-fun x8298 () Int)
(declare-fun x2447 () Bool)
(declare-fun x8904 () Int)
(declare-fun x7668 () Int)
(declare-fun x6923 () Int)
(declare-fun x7655 () Int)
(declare-fun x7567 () Int)
(declare-fun x1291 () Bool)
(declare-fun x1995 () Int)
(declare-fun x2397 () Bool)
(declare-fun x134 () Int)
(declare-fun x2983 () Bool)
(declare-fun x4662 () Int)
(declare-fun x6424 () Bool)
(declare-fun x8169 () Bool)
(declare-fun x3045 () Bool)
(declare-fun x1004 () Int)
(declare-fun x2934 () Bool)
(declare-fun x5856 () Int)
(declare-fun x6659 () Int)
(declare-fun x784 () Bool)
(declare-fun x60 () Int)
(declare-fun x6980 () Bool)
(declare-fun x2976 () Int)
(declare-fun x6544 (Int) Int)
(declare-fun x7479 () Int)
(declare-fun x8669 () Int)
(declare-fun x1129 () Bool)
(declare-fun x5919 () Int)
(declare-fun x7415 () Bool)
(declare-fun x3487 () Int)
(declare-fun x2500 () Bool)
(declare-fun x4293 () Bool)
(declare-fun x7622 () Int)
(declare-fun x1641 () Bool)
(declare-fun x4043 () Int)
(declare-fun x7309 () Int)
(declare-fun x5308 () Int)
(declare-fun x4103 (Int) Int)
(declare-fun x2269 () Int)
(declare-fun x7914 () Int)
(declare-fun x484 (Int) Int)
(declare-fun x5405 () Int)
(declare-fun x1245 () Int)
(declare-fun x3651 () Bool)
(declare-fun x7061 () Bool)
(declare-fun x5362 () Int)
(declare-fun x5034 () Bool)
(declare-fun x994 () Bool)
(declare-fun x4976 () Int)
(declare-fun x7221 () Int)
(declare-fun x7530 () Bool)
(declare-fun x7034 () Int)
(declare-fun x5293 () Bool)
(declare-fun x4519 () Int)
(declare-fun x8926 () Bool)
(declare-fun x7815 () Int)
(declare-fun x7181 () Bool)
(declare-fun x125 () Int)
(declare-fun x3982 () Bool)
(declare-fun x7877 () Int)
(declare-fun x6014 () Bool)
(declare-fun x5079 () Int)
(declare-fun x2600 (Int) Int)
(declare-fun x1175 () Int)
(declare-fun x3731 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x2948 () Int)
(declare-fun x3212 () Bool)
(declare-fun x1461 () Int)
(declare-fun x325 () Bool)
(declare-fun x3975 () Bool)
(declare-fun x6136 () Bool)
(declare-fun x6972 () Int)
(declare-fun x1463 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x8210 () Bool)
(declare-fun x75 () Bool)
(declare-fun x7106 () Bool)
(declare-fun x3467 () Bool)
(declare-fun x310 () Bool)
(declare-fun x3952 (Int) Int)
(declare-fun x6435 () Int)
(declare-fun x1297 () Int)
(declare-fun x3676 () Int)
(declare-fun x6624 () Bool)
(declare-fun x3760 () Bool)
(declare-fun x6664 () Int)
(declare-fun x2266 () Int)
(declare-fun x6131 () Int)
(declare-fun x8317 () Bool)
(declare-fun x7327 () Bool)
(declare-fun x7035 () Bool)
(declare-fun x5920 () Bool)
(declare-fun x199 () Int)
(declare-fun x5857 () Bool)
(declare-fun x759 () Int)
(declare-fun x7383 () Int)
(declare-fun x628 () Bool)
(declare-fun x4042 () Int)
(declare-fun x4440 () Bool)
(declare-fun x3277 () Int)
(declare-fun x393 () Int)
(declare-fun x5045 () Int)
(declare-fun x4995 () Bool)
(declare-fun x2874 () Int)
(declare-fun x4477 () Int)
(declare-fun x7449 () Int)
(declare-fun x362 () Int)
(declare-fun x5736 () Int)
(declare-fun x3794 () Bool)
(declare-fun x3079 () Int)
(declare-fun x3999 () Int)
(declare-fun x7879 () Bool)
(declare-fun x5487 () Int)
(declare-fun x8315 () Int)
(declare-fun x3816 () Bool)
(declare-fun x5684 () Int)
(declare-fun x8479 () Int)
(declare-fun x5934 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x8683 () Bool)
(declare-fun x4306 () Int)
(declare-fun x967 (Int) Int)
(declare-fun x7478 () Bool)
(declare-fun x2417 () Int)
(declare-fun x8268 () Bool)
(declare-fun x6452 () Int)
(declare-fun x1104 () Bool)
(declare-fun x2259 () Int)
(declare-fun x6378 () Int)
(declare-fun x4311 () Int)
(declare-fun x8548 () Bool)
(declare-fun x7331 () Int)
(declare-fun x6376 () Bool)
(declare-fun x8524 () Int)
(declare-fun x7220 () Int)
(declare-fun x5107 () Bool)
(declare-fun x4937 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x4167 () Int)
(declare-fun x4673 () Bool)
(declare-fun x6615 () Int)
(declare-fun x2615 () Bool)
(declare-fun x3875 () Bool)
(declare-fun x4351 () Int)
(declare-fun x2942 () Int)
(declare-fun x5547 () Bool)
(declare-fun x8591 () Int)
(declare-fun x6944 () Bool)
(declare-fun x2351 (Int) Int)
(declare-fun x4446 () Bool)
(declare-fun x3755 () Int)
(declare-fun x2231 () Bool)
(declare-fun x6690 () Int)
(declare-fun x5763 () Int)
(declare-fun x2195 () Int)
(declare-fun x9046 () Int)
(declare-fun x5260 () Int)
(declare-fun x5 () Bool)
(declare-fun x7779 () Int)
(declare-fun x4068 (Int) Int)
(declare-fun x5979 () Int)
(declare-fun x1850 () Int)
(declare-fun x4986 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x433 () Int)
(declare-fun x769 () Bool)
(declare-fun x1334 () Int)
(declare-fun x5393 () Bool)
(declare-fun x600 () Int)
(declare-fun x7159 () Bool)
(declare-fun x518 () Bool)
(declare-fun x1692 () Int)
(declare-fun x3705 () Bool)
(declare-fun x4059 () Bool)
(declare-fun x8901 () Bool)
(declare-fun x2724 () Int)
(declare-fun x1057 () Int)
(declare-fun x8240 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x2628 () Int)
(declare-fun x7403 () Int)
(declare-fun x4118 () Bool)
(declare-fun x1171 () Int)
(declare-fun x829 () Bool)
(declare-fun x588 () Bool)
(declare-fun x6473 () Int)
(declare-fun x6781 () Int)
(declare-fun x2321 () Bool)
(declare-fun x7183 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x1640 () Int)
(declare-fun x5881 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x6747 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x7463 () Int)
(declare-fun x2841 () Bool)
(declare-fun x4659 () Int)
(declare-fun x7219 () Int)
(declare-fun x3884 () Bool)
(declare-fun x7186 () Bool)
(declare-fun x7484 () Bool)
(declare-fun x6387 () Int)
(declare-fun x2165 () Int)
(declare-fun x5438 () Bool)
(declare-fun x2255 () Bool)
(declare-fun x7529 () Int)
(declare-fun x8384 (Int) Int)
(declare-fun x6437 () Int)
(declare-fun x932 (Int) Int)
(declare-fun x5385 (Int) Int)
(declare-fun x7240 () Bool)
(declare-fun x7477 () Bool)
(declare-fun x3339 () Bool)
(declare-fun x3049 () Int)
(declare-fun x4132 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x3906 () Bool)
(declare-fun x909 () Int)
(declare-fun x3581 () Bool)
(declare-fun x6394 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x7752 () Int)
(declare-fun x3265 () Int)
(declare-fun x1617 (Int) Int)
(declare-fun x8227 () Int)
(declare-fun x850 () Bool)
(declare-fun x887 () Int)
(declare-fun x5122 () Bool)
(declare-fun x6959 () Bool)
(declare-fun x7696 () Bool)
(declare-fun x395 () Int)
(declare-fun x6799 () Bool)
(declare-fun x195 () Bool)
(declare-fun x6440 () Bool)
(declare-fun x6981 () Int)
(declare-fun x7723 () Bool)
(declare-fun x8104 () Bool)
(declare-fun x9097 () Int)
(declare-fun x7171 () Int)
(declare-fun x851 () Bool)
(declare-fun x5235 () Bool)
(declare-fun x8118 () Int)
(declare-fun x4737 () Int)
(declare-fun x934 () Int)
(declare-fun x6156 () Int)
(declare-fun x7297 () Bool)
(declare-fun x3009 () Bool)
(declare-fun x7282 () Bool)
(declare-fun x8858 () Bool)
(declare-fun x8753 () Bool)
(declare-fun x479 () Bool)
(declare-fun x6175 () Bool)
(declare-fun x7111 () Bool)
(declare-fun x6920 () Int)
(declare-fun x7070 () Int)
(declare-fun x4410 () Bool)
(declare-fun x8431 () Int)
(declare-fun x2933 () Int)
(declare-fun x1087 () Int)
(declare-fun x4850 () Bool)
(declare-fun x4918 () Int)
(declare-fun x6454 (Int) Int)
(declare-fun x950 () Int)
(declare-fun x2374 (Int) Int)
(declare-fun x1205 () Int)
(declare-fun x1979 () Int)
(declare-fun x7966 () Int)
(declare-fun x2086 () Bool)
(declare-fun x2398 () Bool)
(declare-fun x6840 () Bool)
(declare-fun x3426 (Int) Int)
(declare-fun x8167 () Bool)
(declare-fun x308 () Int)
(declare-fun x1974 () Int)
(declare-fun x4704 () Bool)
(declare-fun x3448 () Bool)
(declare-fun x5464 () Int)
(declare-fun x7501 () Int)
(declare-fun x5244 () Int)
(declare-fun x452 () Int)
(declare-fun x4262 () Int)
(declare-fun x4568 () Bool)
(declare-fun x619 () Int)
(declare-fun x3482 () Bool)
(declare-fun x5180 () Bool)
(declare-fun x4599 () Bool)
(declare-fun x1457 () Int)
(declare-fun x5158 (Int) Int)
(declare-fun x7681 () Int)
(declare-fun x5327 () Int)
(declare-fun x1321 () Bool)
(declare-fun x4952 () Bool)
(declare-fun x5754 () Int)
(declare-fun x1271 () Bool)
(declare-fun x7855 () Bool)
(declare-fun x895 () Bool)
(declare-fun x7728 () Int)
(declare-fun x2076 () Int)
(declare-fun x2106 () Int)
(declare-fun x2067 () Int)
(declare-fun x7192 (Int) Int)
(declare-fun x7495 () Bool)
(declare-fun x5594 () Int)
(declare-fun x5616 () Bool)
(declare-fun x3469 () Bool)
(declare-fun x8512 () Bool)
(declare-fun x1281 () Int)
(declare-fun x3935 () Bool)
(declare-fun x4178 () Int)
(declare-fun x4779 () Int)
(declare-fun x2586 () Bool)
(declare-fun x1025 () Int)
(declare-fun x7416 () Bool)
(declare-fun x6328 () Bool)
(declare-fun x3846 () Int)
(declare-fun x5148 () Bool)
(declare-fun x6158 () Int)
(declare-fun x3240 () Bool)
(declare-fun x7785 () Bool)
(declare-fun x3016 () Int)
(declare-fun x5853 () Bool)
(declare-fun x5851 () Bool)
(declare-fun x6403 () Bool)
(declare-fun x5411 () Bool)
(declare-fun x162 () Int)
(declare-fun x6848 () Int)
(declare-fun x5865 () Bool)
(declare-fun x5168 (Int) Int)
(declare-fun x7789 () Int)
(declare-fun x8729 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x5242 () Int)
(declare-fun x5954 (Int) Int)
(declare-fun x6024 () Bool)
(declare-fun x404 () Int)
(declare-fun x3525 () Int)
(declare-fun x8650 () Bool)
(declare-fun x4840 () Int)
(declare-fun x5495 () Bool)
(declare-fun x8894 () Int)
(declare-fun x798 () Int)
(declare-fun x5612 () Int)
(declare-fun x4743 () Int)
(declare-fun x15 () Bool)
(declare-fun x4760 () Int)
(declare-fun x6159 () Bool)
(declare-fun x3568 () Int)
(declare-fun x2630 () Int)
(declare-fun x5928 () Int)
(declare-fun x2194 () Bool)
(declare-fun x262 () Int)
(declare-fun x8233 () Int)
(declare-fun x5718 () Int)
(declare-fun x2174 () Bool)
(declare-fun x5097 () Int)
(declare-fun x2956 () Bool)
(declare-fun x7028 () Bool)
(declare-fun x6004 (Int) Int)
(declare-fun x6964 () Int)
(declare-fun x5784 () Int)
(declare-fun x4179 () Bool)
(declare-fun x738 () Bool)
(declare-fun x5352 () Int)
(declare-fun x7235 () Int)
(declare-fun x821 () Int)
(declare-fun x5263 () Int)
(declare-fun x616 () Bool)
(declare-fun x4444 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x7520 () Int)
(declare-fun x5476 () Int)
(declare-fun x8217 (Int) Int)
(declare-fun x8158 () Int)
(declare-fun x9134 () Int)
(declare-fun x6960 () Bool)
(declare-fun x7920 () Bool)
(declare-fun x1141 () Int)
(declare-fun x6082 () Int)
(declare-fun x4824 () Bool)
(declare-fun x6226 () Int)
(declare-fun x2367 () Int)
(declare-fun x4690 () Int)
(declare-fun x3563 () Int)
(declare-fun x4833 () Bool)
(declare-fun x7357 () Bool)
(declare-fun x1053 () Int)
(declare-fun x2853 () Int)
(declare-fun x3888 () Int)
(declare-fun x4893 () Bool)
(declare-fun x7335 () Int)
(declare-fun x4250 () Int)
(declare-fun x7 (Int) Int)
(declare-fun x6811 (Int) Int)
(declare-fun x198 () Int)
(declare-fun x8655 () Bool)
(declare-fun x7489 () Int)
(declare-fun x6480 () Bool)
(declare-fun x7756 () Int)
(declare-fun x4882 () Bool)
(declare-fun x5449 () Bool)
(declare-fun x5690 () Int)
(declare-fun x5711 () Int)
(declare-fun x4846 (Int) Int)
(declare-fun x5864 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x8734 () Int)
(declare-fun x7707 (Int) Int)
(declare-fun x4400 () Int)
(declare-fun x6798 () Bool)
(declare-fun x5946 () Int)
(declare-fun x5611 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x5723 () Bool)
(declare-fun x5155 () Bool)
(declare-fun x3000 () Bool)
(declare-fun x7332 () Bool)
(declare-fun x4033 () Int)
(declare-fun x5241 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x7165 () Int)
(declare-fun x2638 () Int)
(declare-fun x3074 () Bool)
(declare-fun x777 () Int)
(declare-fun x21 () Int)
(declare-fun x3633 () Bool)
(declare-fun x8350 (Int) Int)
(declare-fun x3103 () Bool)
(declare-fun x2027 () Int)
(declare-fun x3134 () Bool)
(declare-fun x5852 () Int)
(declare-fun x7590 () Bool)
(declare-fun x2519 (Int) Int)
(declare-fun x1779 () Bool)
(declare-fun x1272 () Int)
(declare-fun x5009 () Bool)
(declare-fun x6655 () Bool)
(declare-fun x4534 () Int)
(declare-fun x4298 () Int)
(declare-fun x4490 () Int)
(declare-fun x3811 () Int)
(declare-fun x4783 () Int)
(declare-fun x3488 () Int)
(declare-fun x3530 () Bool)
(declare-fun x3958 () Bool)
(declare-fun x4852 () Int)
(declare-fun x6588 () Int)
(declare-fun x7051 () Int)
(declare-fun x3810 () Int)
(declare-fun x2851 () Int)
(declare-fun x8117 () Bool)
(declare-fun x1101 () Int)
(declare-fun x3349 (Int) Int)
(declare-fun x8381 () Int)
(declare-fun x4533 () Int)
(declare-fun x7767 (Int) Int)
(declare-fun x8759 () Bool)
(declare-fun x4890 () Int)
(declare-fun x4408 () Int)
(declare-fun x8577 () Bool)
(declare-fun x1287 () Int)
(declare-fun x5480 () Int)
(declare-fun x9096 () Int)
(declare-fun x6732 () Int)
(declare-fun x166 () Int)
(declare-fun x766 () Bool)
(declare-fun x8880 (Int) Int)
(declare-fun x2238 () Int)
(declare-fun x4772 () Int)
(declare-fun x595 () Int)
(declare-fun x746 () Int)
(declare-fun x8585 () Bool)
(declare-fun x1783 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x54 () Int)
(declare-fun x5130 () Int)
(declare-fun x6275 () Int)
(declare-fun x4456 () Int)
(declare-fun x5787 () Int)
(declare-fun x2825 () Int)
(declare-fun x4112 () Bool)
(declare-fun x143 () Int)
(declare-fun x3446 () Int)
(declare-fun x4274 () Int)
(declare-fun x6968 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1814 () Int)
(declare-fun x6205 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1875 () Int)
(declare-fun x1620 () Bool)
(declare-fun x7358 () Int)
(declare-fun x3066 () Int)
(declare-fun x2284 () Bool)
(declare-fun x3593 () Int)
(declare-fun x8705 () Int)
(declare-fun x4095 () Int)
(declare-fun x5070 () Bool)
(declare-fun x2531 () Int)
(declare-fun x6234 () Int)
(declare-fun x899 () Int)
(declare-fun x8113 (Int) Int)
(declare-fun x8587 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x8115 () Int)
(declare-fun x8280 () Bool)
(declare-fun x3065 () Int)
(declare-fun x6358 () Int)
(declare-fun x7813 () Int)
(declare-fun x7864 () Bool)
(declare-fun x8573 () Int)
(declare-fun x5123 () Bool)
(declare-fun x2314 () Int)
(declare-fun x4821 () Bool)
(declare-fun x3020 () Int)
(declare-fun x2471 () Int)
(declare-fun x7839 () Bool)
(declare-fun x5285 () Bool)
(declare-fun x807 () Int)
(declare-fun x2943 () Int)
(declare-fun x1453 () Int)
(declare-fun x3653 () Int)
(declare-fun x5195 () Int)
(declare-fun x843 () Bool)
(declare-fun x6991 () Bool)
(declare-fun x3560 () Int)
(declare-fun x2557 () Int)
(declare-fun x2257 () Int)
(declare-fun x5797 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x2809 () Int)
(declare-fun x8140 () Int)
(declare-fun x5900 () Bool)
(declare-fun x7883 () Bool)
(declare-fun x3198 () Bool)
(declare-fun x8910 () Bool)
(declare-fun x6255 () Int)
(declare-fun x3892 () Int)
(declare-fun x8716 () Int)
(declare-fun x5425 () Bool)
(declare-fun x5433 () Int)
(declare-fun x8351 () Int)
(declare-fun x107 () Bool)
(declare-fun x5358 () Int)
(declare-fun x3119 () Bool)
(declare-fun x1701 () Int)
(declare-fun x6524 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x8885 () Bool)
(declare-fun x5568 () Int)
(declare-fun x6716 () Int)
(declare-fun x7636 () Bool)
(declare-fun x5776 () Bool)
(declare-fun x5276 () Int)
(declare-fun x3877 () Bool)
(declare-fun x2514 () Int)
(declare-fun x1960 () Bool)
(declare-fun x7441 () Bool)
(declare-fun x7692 () Bool)
(declare-fun x2635 () Int)
(declare-fun x2572 () Int)
(declare-fun x5761 (Int) Int)
(declare-fun x1340 () Bool)
(declare-fun x5820 () Int)
(declare-fun x3328 () Bool)
(declare-fun x1054 () Int)
(declare-fun x19 () Bool)
(declare-fun x871 () Bool)
(declare-fun x4035 () Bool)
(declare-fun x6538 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x1173 () Int)
(declare-fun x8804 () Bool)
(declare-fun x4548 () Int)
(declare-fun x5310 () Bool)
(declare-fun x3677 () Int)
(declare-fun x5018 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x3251 () Int)
(declare-fun x908 (Int) Int)
(declare-fun x203 () Int)
(declare-fun x3296 () Int)
(declare-fun x5277 () Bool)
(declare-fun x8519 () Int)
(declare-fun x8865 () Bool)
(declare-fun x176 () Int)
(declare-fun x8391 () Int)
(declare-fun x7457 () Int)
(declare-fun x3394 () Bool)
(declare-fun x1356 () Int)
(declare-fun x4472 () Bool)
(declare-fun x8513 () Int)
(declare-fun x8562 () Int)
(declare-fun x8575 () Int)
(declare-fun x1702 () Bool)
(declare-fun x8145 () Bool)
(declare-fun x6604 () Bool)
(declare-fun x6688 () Bool)
(declare-fun x7857 () Bool)
(declare-fun x3315 () Bool)
(declare-fun x663 () Int)
(declare-fun x745 () Bool)
(declare-fun x1679 () Int)
(declare-fun x5698 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x5491 () Int)
(declare-fun x9068 () Bool)
(declare-fun x6869 () Bool)
(declare-fun x1256 () Int)
(declare-fun x7239 () Int)
(declare-fun x4731 () Bool)
(declare-fun x7231 () Int)
(declare-fun x4198 () Bool)
(declare-fun x6276 () Int)
(declare-fun x8353 () Bool)
(declare-fun x408 () Bool)
(declare-fun x3929 () Int)
(declare-fun x7908 () Bool)
(declare-fun x4565 () Int)
(declare-fun x235 () Int)
(declare-fun x1553 () Bool)
(declare-fun x5396 () Int)
(declare-fun x8046 () Bool)
(declare-fun x5452 () Int)
(declare-fun x7384 () Int)
(declare-fun x6755 () Int)
(declare-fun x3262 () Bool)
(declare-fun x8708 () Int)
(declare-fun x5367 () Int)
(declare-fun x8478 () Bool)
(declare-fun x5819 () Int)
(declare-fun x8658 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x6757 () Int)
(declare-fun x6749 () Bool)
(declare-fun x656 () Bool)
(declare-fun x5994 () Bool)
(declare-fun x9105 () Int)
(declare-fun x6590 () Int)
(declare-fun x3828 () Int)
(declare-fun x8967 () Int)
(declare-fun x2928 () Int)
(declare-fun x4870 () Int)
(declare-fun x5950 () Int)
(declare-fun x638 () Int)
(declare-fun x4263 () Int)
(declare-fun x3734 () Int)
(declare-fun x681 () Bool)
(declare-fun x2494 () Int)
(declare-fun x7168 () Bool)
(declare-fun x3669 () Int)
(declare-fun x3380 () Int)
(declare-fun x9098 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1100 () Int)
(declare-fun x2448 () Bool)
(declare-fun x3207 () Int)
(declare-fun x1292 () Int)
(declare-fun x6649 () Int)
(declare-fun x3153 () Int)
(declare-fun x6439 () Int)
(declare-fun x7104 () Int)
(declare-fun x8230 () Bool)
(declare-fun x3936 () Int)
(declare-fun x4038 () Int)
(declare-fun x5348 () Bool)
(declare-fun x2388 () Int)
(declare-fun x2026 () Bool)
(declare-fun x7725 (Int) Int)
(declare-fun x8083 () Int)
(declare-fun x900 () Int)
(declare-fun x8106 () Bool)
(declare-fun x8930 () Int)
(declare-fun x8450 () Bool)
(declare-fun x8491 () Int)
(declare-fun x879 () Int)
(declare-fun x3551 () Bool)
(declare-fun x6224 () Bool)
(declare-fun x5597 () Bool)
(declare-fun x8554 () Bool)
(declare-fun x599 () Bool)
(declare-fun x8428 () Int)
(declare-fun x4066 () Bool)
(declare-fun x8919 () Bool)
(declare-fun x8662 () Bool)
(declare-fun x5259 () Int)
(declare-fun x8472 () Int)
(declare-fun x2973 () Int)
(declare-fun x511 () Bool)
(declare-fun x5845 () Bool)
(declare-fun x3058 () Int)
(declare-fun x8878 () Int)
(declare-fun x1494 () Bool)
(declare-fun x8005 () Bool)
(declare-fun x1588 () Int)
(declare-fun x89 () Bool)
(declare-fun x8824 () Bool)
(declare-fun x5221 () Int)
(declare-fun x6961 () Bool)
(declare-fun x642 () Bool)
(declare-fun x6626 () Bool)
(declare-fun x1822 () Int)
(declare-fun x7293 () Int)
(declare-fun x7960 () Int)
(declare-fun x1009 () Int)
(declare-fun x7773 () Int)
(declare-fun x4965 () Int)
(declare-fun x6074 (Int) Int)
(declare-fun x7071 () Bool)
(declare-fun x8139 () Bool)
(declare-fun x7381 () Bool)
(declare-fun x8059 (Int) Int)
(declare-fun x7468 () Bool)
(declare-fun x7528 () Bool)
(declare-fun x1421 () Int)
(declare-fun x7571 () Int)
(declare-fun x3437 () Int)
(declare-fun x6887 () Int)
(declare-fun x7022 () Bool)
(declare-fun x2930 () Int)
(declare-fun x8918 () Int)
(declare-fun x5318 () Bool)
(declare-fun x7591 () Bool)
(declare-fun x955 () Bool)
(declare-fun x6254 () Int)
(declare-fun x823 () Int)
(declare-fun x5722 () Bool)
(declare-fun x1227 () Int)
(declare-fun x2330 () Bool)
(declare-fun x5391 () Bool)
(declare-fun x8661 () Int)
(declare-fun x3885 (Int) Int)
(declare-fun x6537 () Bool)
(declare-fun x4260 () Bool)
(declare-fun x4934 () Bool)
(declare-fun x252 () Int)
(declare-fun x8507 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x6367 () Int)
(declare-fun x7680 () Int)
(declare-fun x6722 () Int)
(declare-fun x1876 (Int) Int)
(declare-fun x2611 () Bool)
(declare-fun x1520 () Int)
(declare-fun x6020 () Int)
(declare-fun x7730 () Bool)
(declare-fun x5213 () Int)
(declare-fun x7140 () Int)
(declare-fun x8184 () Int)
(declare-fun x2143 () Int)
(declare-fun x4560 () Bool)
(declare-fun x3054 () Int)
(declare-fun x1678 () Bool)
(declare-fun x9070 () Bool)
(declare-fun x7572 (Int) Int)
(declare-fun x5041 () Bool)
(declare-fun x6368 () Bool)
(declare-fun x7912 (Int) Int)
(declare-fun x8193 () Int)
(declare-fun x7731 () Bool)
(declare-fun x4949 () Bool)
(declare-fun x7101 () Bool)
(declare-fun x8469 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x2639 () Int)
(declare-fun x7160 () Bool)
(declare-fun x8067 () Int)
(declare-fun x6653 () Int)
(declare-fun x1977 () Int)
(declare-fun x5807 () Int)
(declare-fun x3719 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x407 () Int)
(declare-fun x4835 () Int)
(declare-fun x7010 () Bool)
(declare-fun x6185 () Int)
(declare-fun x189 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x2148 () Bool)
(declare-fun x3140 () Int)
(declare-fun x6392 () Int)
(declare-fun x1213 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1802 (Int) Int)
(declare-fun x7147 () Bool)
(declare-fun x4532 () Int)
(declare-fun x7130 (Int) Int)
(declare-fun x3713 () Bool)
(declare-fun x6953 () Int)
(declare-fun x2435 (Int) Int)
(declare-fun x5743 () Bool)
(declare-fun x4804 () Bool)
(declare-fun x7732 () Bool)
(declare-fun x6642 () Int)
(declare-fun x2402 () Bool)
(declare-fun x2806 () Int)
(declare-fun x8395 () Bool)
(declare-fun x8443 () Int)
(declare-fun x7647 () Bool)
(declare-fun x958 () Int)
(declare-fun x4619 () Int)
(declare-fun x9090 () Int)
(declare-fun x5397 () Int)
(declare-fun x2961 () Bool)
(declare-fun x4930 () Bool)
(declare-fun x7988 () Int)
(declare-fun x7029 () Int)
(declare-fun x2705 () Int)
(declare-fun x1657 () Int)
(declare-fun x4080 () Bool)
(declare-fun x5860 (Int) Int)
(declare-fun x5531 () Bool)
(declare-fun x8147 () Int)
(declare-fun x754 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x7990 (Int) Int)
(declare-fun x5503 () Int)
(declare-fun x1276 () Int)
(declare-fun x6995 () Int)
(declare-fun x3473 () Bool)
(declare-fun x7093 (Int) Int)
(declare-fun x8613 () Int)
(declare-fun x7766 () Int)
(declare-fun x5822 () Bool)
(declare-fun x637 () Int)
(declare-fun x4901 () Bool)
(declare-fun x1216 () Int)
(declare-fun x3083 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x7185 () Bool)
(declare-fun x1795 () Int)
(declare-fun x5539 (Int) Int)
(declare-fun x8726 () Bool)
(declare-fun x4158 () Int)
(declare-fun x8270 () Bool)
(declare-fun x3800 () Bool)
(declare-fun x5971 () Bool)
(declare-fun x4234 () Int)
(declare-fun x155 () Bool)
(declare-fun x4484 () Int)
(declare-fun x3578 () Int)
(declare-fun x7638 () Int)
(declare-fun x8489 () Int)
(declare-fun x7431 () Bool)
(declare-fun x7514 () Int)
(declare-fun x4244 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x2886 () Int)
(declare-fun x3347 () Int)
(declare-fun x6784 () Int)
(declare-fun x2865 () Int)
(declare-fun x6546 (Int) Int)
(declare-fun x5456 () Bool)
(declare-fun x8608 () Int)
(declare-fun x1145 (Int) Int)
(declare-fun x1159 () Bool)
(declare-fun x3377 () Int)
(declare-fun x3384 () Int)
(declare-fun x3798 () Int)
(declare-fun x8016 () Bool)
(declare-fun x1414 (Int) Int)
(declare-fun x1086 () Int)
(declare-fun x2134 () Bool)
(declare-fun x9021 () Bool)
(declare-fun x69 () Int)
(declare-fun x3114 () Int)
(declare-fun x2883 (Int) Int)
(declare-fun x4613 () Bool)
(declare-fun x2577 () Bool)
(declare-fun x3532 () Bool)
(declare-fun x4256 () Bool)
(declare-fun x7588 () Bool)
(declare-fun x1377 () Int)
(declare-fun x667 () Int)
(declare-fun x2461 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x2999 () Int)
(declare-fun x7942 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x8352 () Int)
(declare-fun x3316 () Int)
(declare-fun x4154 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x3611 () Bool)
(declare-fun x6669 (Int) Int)
(declare-fun x2592 () Int)
(declare-fun x309 () Int)
(declare-fun x1285 () Int)
(declare-fun x7596 () Bool)
(declare-fun x7941 (Int) Int)
(declare-fun x1193 () Int)
(declare-fun x6640 (Int) Int)
(declare-fun x2726 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x4266 () Int)
(declare-fun x662 () Bool)
(declare-fun x2018 () Int)
(declare-fun x5756 () Bool)
(declare-fun x1033 () Int)
(declare-fun x2361 () Int)
(declare-fun x7666 () Int)
(declare-fun x2813 () Bool)
(declare-fun x1567 () Int)
(declare-fun x4107 () Int)
(declare-fun x3411 () Int)
(declare-fun x845 () Int)
(declare-fun x5998 (Int) Int)
(declare-fun x1181 () Int)
(declare-fun x5791 (Int) Int)
(declare-fun x1830 () Int)
(declare-fun x5898 () Bool)
(declare-fun x7586 () Int)
(declare-fun x725 () Int)
(declare-fun x1636 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x701 () Bool)
(declare-fun x6708 () Bool)
(declare-fun x3954 () Int)
(declare-fun x2415 () Int)
(declare-fun x2136 () Int)
(declare-fun x2200 () Int)
(declare-fun x6647 () Int)
(declare-fun x6783 () Int)
(declare-fun x8461 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x5530 () Bool)
(declare-fun x333 () Int)
(declare-fun x7404 () Int)
(declare-fun x8895 () Int)
(declare-fun x8929 () Bool)
(declare-fun x7541 () Bool)
(declare-fun x6988 () Bool)
(declare-fun x8535 () Bool)
(declare-fun x3425 () Int)
(declare-fun x5923 () Bool)
(declare-fun x5319 () Bool)
(declare-fun x8924 () Bool)
(declare-fun x5258 () Bool)
(declare-fun x461 () Int)
(declare-fun x2697 () Int)
(declare-fun x7026 () Int)
(declare-fun x2797 () Int)
(declare-fun x7278 (Int) Int)
(declare-fun x224 () Bool)
(declare-fun x4530 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x7817 () Int)
(declare-fun x6099 () Int)
(declare-fun x3 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1955 () Int)
(declare-fun x200 () Int)
(declare-fun x2750 () Int)
(declare-fun x601 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x8633 () Bool)
(declare-fun x1179 () Int)
(declare-fun x397 () Bool)
(declare-fun x1757 (Int) Int)
(declare-fun x587 () Int)
(declare-fun x9081 () Int)
(declare-fun x1642 () Int)
(declare-fun x3434 () Int)
(declare-fun x768 () Int)
(declare-fun x5354 () Int)
(declare-fun x3302 () Bool)
(declare-fun x6442 () Int)
(declare-fun x2031 () Bool)
(declare-fun x5854 () Bool)
(declare-fun x5885 () Int)
(declare-fun x3837 () Int)
(declare-fun x580 () Bool)
(declare-fun x7395 () Bool)
(declare-fun x5668 () Bool)
(declare-fun x4241 () Int)
(declare-fun x4309 (Int) Int)
(declare-fun x209 () Bool)
(declare-fun x4209 () Bool)
(declare-fun x5649 () Int)
(declare-fun x4794 () Int)
(declare-fun x8920 () Bool)
(declare-fun x7829 () Int)
(declare-fun x882 () Int)
(declare-fun x312 () Int)
(declare-fun x6782 () Bool)
(declare-fun x7001 () Bool)
(declare-fun x7604 () Bool)
(declare-fun x6710 () Bool)
(declare-fun x3894 () Int)
(declare-fun x6441 (Int) Int)
(declare-fun x7098 () Bool)
(declare-fun x7840 () Bool)
(declare-fun x2864 () Bool)
(declare-fun x4557 () Int)
(declare-fun x8010 () Int)
(declare-fun x931 () Bool)
(declare-fun x4908 () Int)
(declare-fun x1388 () Int)
(declare-fun x8264 () Int)
(declare-fun x1429 () Bool)
(declare-fun x8397 () Bool)
(declare-fun x5140 () Int)
(declare-fun x3785 () Bool)
(declare-fun x3235 () Int)
(declare-fun x865 () Int)
(declare-fun x7125 () Bool)
(declare-fun x7931 () Int)
(declare-fun x6298 () Int)
(declare-fun x4185 (Int) Int)
(declare-fun x9004 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x6063 () Int)
(declare-fun x8769 () Bool)
(declare-fun x6500 () Bool)
(declare-fun x916 () Int)
(declare-fun x4589 () Bool)
(declare-fun x2710 () Bool)
(declare-fun x475 () Bool)
(declare-fun x6936 () Int)
(declare-fun x733 () Bool)
(declare-fun x7740 () Int)
(declare-fun x4458 () Bool)
(declare-fun x2937 () Bool)
(declare-fun x8482 () Int)
(declare-fun x7902 (Int) Int)
(declare-fun x5227 () Int)
(declare-fun x2810 () Int)
(declare-fun x2431 () Int)
(declare-fun x6927 () Int)
(declare-fun x6410 () Bool)
(declare-fun x5572 () Int)
(declare-fun x4432 () Int)
(declare-fun x2796 () Int)
(declare-fun x2040 () Int)
(declare-fun x2597 () Bool)
(declare-fun x7279 () Int)
(declare-fun x3567 () Int)
(declare-fun x5421 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x4305 () Int)
(declare-fun x4638 () Int)
(declare-fun x6240 () Bool)
(declare-fun x7617 () Bool)
(declare-fun x1724 (Int) Int)
(declare-fun x5014 () Bool)
(declare-fun x8333 () Int)
(declare-fun x6455 (Int) Int)
(declare-fun x30 () Int)
(declare-fun x8072 () Bool)
(declare-fun x33 () Int)
(declare-fun x48 () Bool)
(declare-fun x4610 () Bool)
(declare-fun x5004 () Bool)
(declare-fun x1251 () Int)
(declare-fun x8149 () Bool)
(declare-fun x5942 () Bool)
(declare-fun x4094 () Int)
(declare-fun x8974 () Bool)
(declare-fun x796 () Int)
(declare-fun x7770 () Int)
(declare-fun x5901 () Int)
(declare-fun x4991 () Bool)
(declare-fun x1288 () Int)
(declare-fun x8712 () Int)
(declare-fun x6301 () Int)
(declare-fun x7675 () Int)
(declare-fun x2113 () Int)
(declare-fun x8526 () Int)
(declare-fun x3102 (Int) Int)
(declare-fun x7458 () Bool)
(declare-fun x3852 () Bool)
(declare-fun x2458 () Bool)
(declare-fun x5172 () Int)
(declare-fun x4867 () Int)
(declare-fun x4502 () Bool)
(declare-fun x65 () Bool)
(declare-fun x7926 () Int)
(declare-fun x2654 () Int)
(declare-fun x2819 () Int)
(declare-fun x4243 () Int)
(declare-fun x7324 () Bool)
(declare-fun x6479 () Int)
(declare-fun x4874 () Int)
(declare-fun x4090 () Int)
(declare-fun x3345 () Bool)
(declare-fun x2079 () Int)
(declare-fun x1081 () Int)
(declare-fun x8159 () Int)
(declare-fun x3424 () Int)
(declare-fun x4672 () Int)
(declare-fun x8266 () Bool)
(declare-fun x2653 () Bool)
(declare-fun x1828 () Int)
(declare-fun x7561 () Int)
(declare-fun x4248 () Int)
(declare-fun x3515 () Int)
(declare-fun x8871 () Bool)
(declare-fun x2282 () Int)
(declare-fun x7461 () Bool)
(declare-fun x4292 () Int)
(declare-fun x4971 () Int)
(declare-fun x8476 () Int)
(declare-fun x4065 () Int)
(declare-fun x6278 () Bool)
(declare-fun x8560 () Int)
(declare-fun x4240 () Bool)
(declare-fun x1785 () Int)
(declare-fun x3737 () Bool)
(declare-fun x7274 () Int)
(declare-fun x7211 () Int)
(declare-fun x8077 () Int)
(declare-fun x7656 () Bool)
(declare-fun x3990 () Int)
(declare-fun x6552 () Int)
(declare-fun x3295 () Int)
(declare-fun x4007 () Int)
(declare-fun x6994 () Int)
(declare-fun x3459 () Int)
(declare-fun x5601 () Bool)
(declare-fun x4640 () Bool)
(declare-fun x5454 () Int)
(declare-fun x8643 () Bool)
(declare-fun x5275 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x4646 () Int)
(declare-fun x4594 () Bool)
(declare-fun x3124 () Int)
(declare-fun x1552 () Bool)
(declare-fun x1910 () Int)
(declare-fun x1475 () Int)
(declare-fun x930 () Int)
(declare-fun x8724 () Bool)
(declare-fun x4851 () Int)
(declare-fun x4713 (Int) Int)
(declare-fun x4454 () Int)
(declare-fun x7940 () Bool)
(declare-fun x3132 () Bool)
(declare-fun x5504 () Bool)
(declare-fun x801 () Int)
(declare-fun x1623 () Bool)
(declare-fun x3974 () Int)
(declare-fun x8842 () Int)
(declare-fun x8022 () Int)
(declare-fun x7162 () Bool)
(declare-fun x347 () Int)
(declare-fun x2272 () Bool)
(declare-fun x6788 () Int)
(declare-fun x5550 () Int)
(declare-fun x2124 () Int)
(declare-fun x5985 () Bool)
(declare-fun x3726 (Int) Int)
(declare-fun x5541 () Bool)
(declare-fun x8687 () Bool)
(declare-fun x5666 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x3427 () Int)
(declare-fun x5621 () Int)
(declare-fun x8740 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x7118 () Int)
(declare-fun x3033 () Bool)
(declare-fun x7296 () Bool)
(declare-fun x1897 () Int)
(declare-fun x3135 () Int)
(declare-fun x7092 () Int)
(declare-fun x984 () Bool)
(declare-fun x586 () Int)
(declare-fun x3591 () Bool)
(declare-fun x5520 () Bool)
(declare-fun x5095 (Int) Int)
(declare-fun x9126 () Bool)
(declare-fun x6534 () Int)
(declare-fun x8777 () Int)
(declare-fun x129 () Bool)
(declare-fun x4134 () Bool)
(declare-fun x7691 () Bool)
(declare-fun x212 () Bool)
(declare-fun x6568 () Int)
(declare-fun x4382 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x7443 () Int)
(declare-fun x6756 () Bool)
(declare-fun x5943 (Int) Int)
(declare-fun x8404 () Bool)
(declare-fun x4647 () Int)
(declare-fun x9039 () Int)
(declare-fun x6092 () Int)
(declare-fun x1204 () Bool)
(declare-fun x8095 () Int)
(declare-fun x229 (Int) Int)
(declare-fun x7587 (Int) Int)
(declare-fun x8933 (Int) Int)
(declare-fun x1650 () Int)
(declare-fun x2244 () Int)
(declare-fun x3496 () Bool)
(declare-fun x2990 () Int)
(declare-fun x5725 () Bool)
(declare-fun x7078 () Bool)
(declare-fun x2409 () Int)
(declare-fun x4326 () Int)
(declare-fun x6451 () Int)
(declare-fun x3905 () Int)
(declare-fun x3509 () Bool)
(declare-fun x2035 (Int) Int)
(declare-fun x3621 () Int)
(declare-fun x6683 () Int)
(declare-fun x8132 () Bool)
(declare-fun x6895 () Int)
(declare-fun x4265 () Bool)
(declare-fun x8499 () Int)
(declare-fun x4735 () Int)
(declare-fun x274 () Int)
(declare-fun x3564 () Int)
(declare-fun x3762 () Bool)
(declare-fun x4684 () Bool)
(declare-fun x2676 () Bool)
(declare-fun x954 () Bool)
(declare-fun x5626 () Int)
(declare-fun x3206 () Int)
(declare-fun x7598 () Bool)
(declare-fun x5826 () Int)
(declare-fun x1674 () Int)
(declare-fun x4860 () Int)
(declare-fun x7592 (Int) Int)
(declare-fun x897 () Int)
(declare-fun x4168 () Bool)
(declare-fun x2931 () Bool)
(declare-fun x5801 () Int)
(declare-fun x1320 () Bool)
(declare-fun x6230 () Int)
(declare-fun x4837 () Int)
(declare-fun x2868 () Int)
(declare-fun x1223 () Bool)
(declare-fun x4579 (Int) Int)
(declare-fun x2180 () Int)
(declare-fun x8699 () Bool)
(declare-fun x9018 () Bool)
(declare-fun x6335 () Int)
(declare-fun x8041 () Bool)
(declare-fun x5641 () Bool)
(declare-fun x8074 (Int) Int)
(declare-fun x3073 () Bool)
(declare-fun x8114 (Int) Int)
(declare-fun x3364 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x5090 () Int)
(declare-fun x9109 () Bool)
(declare-fun x4044 () Int)
(declare-fun x8 () Int)
(declare-fun x1997 () Int)
(declare-fun x7745 () Bool)
(declare-fun x4641 () Int)
(declare-fun x9036 () Bool)
(declare-fun x2802 () Int)
(declare-fun x2365 () Bool)
(declare-fun x7504 () Bool)
(declare-fun x5922 () Bool)
(declare-fun x5309 (Int) Int)
(declare-fun x4294 () Int)
(declare-fun x3909 () Bool)
(declare-fun x6489 () Bool)
(declare-fun x7292 () Bool)
(declare-fun x6221 () Int)
(declare-fun x6432 () Int)
(declare-fun x3034 () Bool)
(declare-fun x367 () Int)
(declare-fun x6557 () Int)
(declare-fun x5868 () Int)
(declare-fun x120 () Int)
(declare-fun x8186 () Int)
(declare-fun x4003 () Bool)
(declare-fun x3763 () Bool)
(declare-fun x3898 () Int)
(declare-fun x8481 () Bool)
(declare-fun x7979 (Int) Int)
(declare-fun x2093 () Bool)
(declare-fun x4421 () Int)
(declare-fun x7206 () Bool)
(declare-fun x4725 () Int)
(declare-fun x3818 () Int)
(declare-fun x1704 () Bool)
(declare-fun x692 () Bool)
(declare-fun x4321 () Int)
(declare-fun x5356 () Bool)
(declare-fun x6389 () Int)
(declare-fun x512 () Int)
(declare-fun x8265 () Int)
(declare-fun x4147 () Bool)
(declare-fun x8441 () Bool)
(declare-fun x3799 () Bool)
(declare-fun x4844 () Int)
(declare-fun x1731 () Bool)
(declare-fun x6691 () Bool)
(declare-fun x891 () Bool)
(declare-fun x2427 () Int)
(declare-fun x3912 () Int)
(declare-fun x6327 () Bool)
(declare-fun x2063 () Int)
(declare-fun x6598 () Int)
(declare-fun x8346 () Int)
(declare-fun x3289 () Int)
(declare-fun x7400 () Int)
(declare-fun x1306 () Int)
(declare-fun x7163 () Int)
(declare-fun x2470 () Bool)
(declare-fun x7737 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x5936 () Int)
(declare-fun x4073 () Int)
(declare-fun x1409 () Bool)
(declare-fun x8003 () Int)
(declare-fun x706 () Int)
(declare-fun x6858 () Bool)
(declare-fun x8700 () Int)
(declare-fun x4000 (Int) Int)
(declare-fun x6905 () Bool)
(declare-fun x111 (Int) Int)
(declare-fun x4385 () Int)
(declare-fun x686 () Int)
(declare-fun x8080 () Int)
(declare-fun x2601 () Bool)
(declare-fun x3941 () Int)
(declare-fun x1989 (Int) Int)
(declare-fun x7316 (Int) Int)
(declare-fun x3297 () Bool)
(declare-fun x3698 () Int)
(declare-fun x1170 () Int)
(declare-fun x6218 () Bool)
(declare-fun x517 () Bool)
(declare-fun x3606 () Bool)
(declare-fun x8605 () Int)
(declare-fun x4969 () Int)
(declare-fun x1794 () Int)
(declare-fun x5961 () Bool)
(declare-fun x4226 () Int)
(declare-fun x7659 () Int)
(declare-fun x1943 () Bool)
(declare-fun x2369 () Int)
(declare-fun x3841 (Int) Int)
(declare-fun x2104 () Bool)
(declare-fun x6488 () Int)
(declare-fun x5230 () Bool)
(declare-fun x776 () Int)
(declare-fun x1871 () Int)
(declare-fun x8868 () Int)
(declare-fun x7584 () Int)
(declare-fun x4947 () Int)
(declare-fun x117 () Int)
(declare-fun x5631 () Bool)
(declare-fun x8774 () Int)
(declare-fun x7448 () Bool)
(declare-fun x6007 () Bool)
(declare-fun x6843 () Bool)
(declare-fun x5010 () Int)
(declare-fun x4601 () Int)
(declare-fun x3991 () Int)
(declare-fun x4011 () Int)
(declare-fun x7631 () Int)
(declare-fun x3604 () Bool)
(declare-fun x5829 () Int)
(declare-fun x1592 () Bool)
(declare-fun x9111 () Bool)
(declare-fun x1838 () Int)
(declare-fun x6801 () Int)
(declare-fun x4045 () Int)
(declare-fun x7739 () Int)
(declare-fun x7800 () Bool)
(declare-fun x5324 () Bool)
(declare-fun x3541 () Bool)
(declare-fun x649 () Bool)
(declare-fun x3689 () Bool)
(declare-fun x356 () Int)
(declare-fun x6913 () Int)
(declare-fun x1273 () Int)
(declare-fun x7899 () Bool)
(declare-fun x1649 () Int)
(declare-fun x1089 () Int)
(declare-fun x1248 () Bool)
(declare-fun x382 () Bool)
(declare-fun x2125 () Int)
(declare-fun x5075 () Int)
(declare-fun x6146 () Int)
(declare-fun x4819 () Int)
(declare-fun x6779 () Bool)
(declare-fun x5072 () Int)
(declare-fun x1031 () Int)
(declare-fun x2127 () Int)
(declare-fun x5850 () Int)
(declare-fun x8124 () Int)
(declare-fun x7973 () Int)
(declare-fun x8881 () Bool)
(declare-fun x3758 () Int)
(declare-fun x8306 () Int)
(declare-fun x5313 () Bool)
(declare-fun x5839 () Int)
(declare-fun x4051 () Int)
(declare-fun x8287 () Bool)
(declare-fun x8731 () Int)
(declare-fun x4024 () Int)
(declare-fun x3822 () Int)
(declare-fun x8358 () Int)
(declare-fun x4829 () Int)
(declare-fun x6556 () Int)
(declare-fun x6006 () Bool)
(declare-fun x5265 () Int)
(declare-fun x50 () Int)
(declare-fun x1574 () Bool)
(declare-fun x3121 () Int)
(declare-fun x8471 () Bool)
(declare-fun x165 () Int)
(declare-fun x4394 () Int)
(declare-fun x4814 () Bool)
(declare-fun x4872 () Bool)
(declare-fun x6639 (Int) Int)
(declare-fun x454 () Int)
(declare-fun x4218 () Int)
(declare-fun x8362 () Int)
(declare-fun x7539 () Int)
(declare-fun x6631 () Bool)
(declare-fun x8004 (Int) Int)
(declare-fun x6118 () Int)
(declare-fun x4342 () Bool)
(declare-fun x6050 (Int) Int)
(declare-fun x8062 () Bool)
(declare-fun x6809 () Int)
(declare-fun x5077 (Int) Int)
(declare-fun x7180 () Bool)
(declare-fun x8464 () Int)
(declare-fun x4036 () Bool)
(declare-fun x3076 () Int)
(declare-fun x5415 () Bool)
(declare-fun x6095 () Bool)
(declare-fun x2268 () Bool)
(declare-fun x7807 () Bool)
(declare-fun x536 () Int)
(declare-fun x896 () Int)
(declare-fun x7509 (Int) Int)
(declare-fun x2769 () Int)
(declare-fun x1312 () Int)
(declare-fun x2571 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x5076 () Bool)
(declare-fun x3325 (Int) Int)
(declare-fun x4063 () Int)
(declare-fun x158 () Int)
(declare-fun x6434 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x1408 () Int)
(declare-fun x3276 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x6232 () Bool)
(declare-fun x7094 () Int)
(declare-fun x1158 () Bool)
(declare-fun x283 () Bool)
(declare-fun x7058 () Int)
(declare-fun x4909 () Int)
(declare-fun x3161 () Int)
(declare-fun x5488 () Int)
(declare-fun x2354 () Int)
(declare-fun x6239 () Int)
(declare-fun x1888 () Int)
(declare-fun x7556 () Bool)
(declare-fun x5675 () Bool)
(declare-fun x4338 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x6743 () Bool)
(declare-fun x5927 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x496 () Bool)
(declare-fun x8091 () Int)
(declare-fun x2950 (Int) Int)
(declare-fun x3967 () Int)
(declare-fun x5149 () Int)
(declare-fun x7021 () Int)
(declare-fun x8518 () Int)
(declare-fun x4503 () Bool)
(declare-fun x7967 () Int)
(declare-fun x1003 () Int)
(declare-fun x37 () Int)
(declare-fun x8290 () Bool)
(declare-fun x494 () Int)
(declare-fun x2553 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x6357 () Int)
(declare-fun x4643 () Bool)
(declare-fun x3255 () Int)
(declare-fun x728 () Bool)
(declare-fun x359 () Bool)
(declare-fun x3723 () Int)
(declare-fun x6623 () Bool)
(declare-fun x434 () Int)
(declare-fun x7367 () Int)
(declare-fun x7524 () Int)
(declare-fun x275 () Int)
(declare-fun x6807 () Int)
(declare-fun x1715 () Bool)
(declare-fun x8341 () Bool)
(declare-fun x4417 () Bool)
(declare-fun x2012 () Int)
(declare-fun x591 () Int)
(declare-fun x912 (Int) Int)
(declare-fun x1194 () Int)
(declare-fun x1646 () Int)
(declare-fun x6195 (Int) Int)
(declare-fun x5381 () Int)
(declare-fun x6602 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x655 () Bool)
(declare-fun x2971 () Int)
(declare-fun x4131 () Bool)
(declare-fun x7224 () Int)
(declare-fun x432 () Int)
(declare-fun x596 () Bool)
(declare-fun x7968 () Bool)
(declare-fun x352 (Int) Int)
(declare-fun x4849 () Int)
(declare-fun x5710 () Int)
(declare-fun x7432 () Int)
(declare-fun x1050 () Bool)
(declare-fun x5115 () Int)
(declare-fun x3085 () Int)
(declare-fun x840 () Bool)
(declare-fun x336 () Int)
(declare-fun x2150 () Bool)
(declare-fun x105 () Int)
(declare-fun x8500 () Bool)
(declare-fun x99 () Int)
(declare-fun x2636 () Bool)
(declare-fun x100 () Int)
(declare-fun x1490 () Int)
(declare-fun x3855 () Bool)
(declare-fun x5664 () Int)
(declare-fun x6592 (Int) Int)
(declare-fun x437 () Bool)
(declare-fun x7624 () Int)
(declare-fun x5970 () Int)
(declare-fun x8439 () Int)
(declare-fun x5407 () Int)
(declare-fun x3574 () Int)
(declare-fun x9125 () Bool)
(declare-fun x5007 () Bool)
(declare-fun x966 () Bool)
(declare-fun x2028 () Int)
(declare-fun x6138 () Bool)
(declare-fun x2731 () Bool)
(declare-fun x5990 () Int)
(declare-fun x2652 () Int)
(declare-fun x669 (Int) Bool)
(declare-fun x64 () Bool)
(declare-fun x6436 () Int)
(declare-fun x5974 () Int)
(declare-fun x5061 () Bool)
(declare-fun x5886 () Bool)
(declare-fun x3510 () Bool)
(declare-fun x5917 (Int Int) Int)
(declare-fun x5537 () Int)
(declare-fun x1986 () Int)
(declare-fun x3565 () Int)
(declare-fun x6306 () Bool)
(declare-fun x3006 () Int)
(declare-fun x1343 () Bool)
(declare-fun x5671 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x2003 () Int)
(declare-fun x1279 () Int)
(declare-fun x6384 () Int)
(declare-fun x5063 () Bool)
(declare-fun x1038 () Int)
(declare-fun x503 () Int)
(declare-fun x7818 () Bool)
(declare-fun x5581 () Int)
(declare-fun x5092 () Int)
(declare-fun x6247 () Int)
(declare-fun x6543 () Int)
(declare-fun x8978 () Bool)
(declare-fun x3082 (Int) Int)
(declare-fun x3920 () Bool)
(declare-fun x4652 () Int)
(declare-fun x1703 () Int)
(declare-fun x4 () Bool)
(declare-fun x6942 () Int)
(declare-fun x7424 () Int)
(declare-fun x2740 () Int)
(declare-fun x612 () Int)
(declare-fun x666 () Bool)
(declare-fun x5849 (Int) Int)
(declare-fun x7505 () Int)
(declare-fun x1416 () Int)
(declare-fun x7663 () Bool)
(declare-fun x5552 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x5704 () Int)
(declare-fun x5650 () Int)
(declare-fun x940 () Bool)
(declare-fun x949 () Int)
(declare-fun x3660 () Int)
(declare-fun x4702 () Int)
(declare-fun x3392 () Bool)
(declare-fun x5326 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x9017 () Bool)
(declare-fun x5750 () Int)
(declare-fun x4628 () Int)
(declare-fun x5518 () Int)
(declare-fun x2483 () Bool)
(declare-fun x8146 () Bool)
(declare-fun x8752 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x7064 () Int)
(declare-fun x254 () Int)
(declare-fun x7887 () Int)
(declare-fun x8493 () Bool)
(declare-fun x7342 () Int)
(declare-fun x3239 () Int)
(declare-fun x2170 () Int)
(declare-fun x1311 () Bool)
(declare-fun x5716 () Int)
(declare-fun x1798 () Int)
(declare-fun x3545 () Int)
(declare-fun x1969 () Bool)
(declare-fun x6904 () Int)
(declare-fun x7148 () Int)
(declare-fun x8448 () Int)
(declare-fun x7616 () Int)
(declare-fun x4076 () Int)
(declare-fun x7955 () Bool)
(declare-fun x6386 () Int)
(declare-fun x4654 () Bool)
(declare-fun x8415 () Int)
(declare-fun x5795 () Int)
(declare-fun x5703 () Int)
(declare-fun x2544 () Int)
(declare-fun x1090 () Int)
(declare-fun x7227 () Bool)
(declare-fun x3573 () Int)
(declare-fun x3528 () Bool)
(declare-fun x2078 () Int)
(declare-fun x7247 () Int)
(declare-fun x5949 () Int)
(declare-fun x6572 (Int) Int)
(declare-fun x6406 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x8377 () Int)
(declare-fun x329 () Bool)
(declare-fun x4476 () Int)
(declare-fun x1442 () Int)
(declare-fun x3344 () Int)
(declare-fun x4171 () Int)
(declare-fun x8316 () Int)
(declare-fun x1174 () Bool)
(declare-fun x4098 () Bool)
(declare-fun x730 () Int)
(declare-fun x7032 () Bool)
(declare-fun x210 () Bool)
(declare-fun x7700 () Bool)
(declare-fun x5933 () Int)
(declare-fun x53 () Int)
(declare-fun x8242 () Int)
(declare-fun x5036 () Bool)
(declare-fun x5436 () Bool)
(declare-fun x8165 (Int) Int)
(declare-fun x7726 () Int)
(declare-fun x2188 () Int)
(declare-fun x472 () Int)
(declare-fun x2745 (Int) Int)
(declare-fun x2569 () Int)
(declare-fun x1639 () Bool)
(declare-fun x8267 () Bool)
(declare-fun x6377 () Int)
(declare-fun x7080 () Bool)
(declare-fun x7325 (Int) Int)
(declare-fun x7389 () Bool)
(declare-fun x6486 () Bool)
(declare-fun x8954 () Bool)
(declare-fun x913 () Int)
(declare-fun x6555 () Bool)
(declare-fun x5299 () Bool)
(declare-fun x6962 () Bool)
(declare-fun x2582 () Int)
(declare-fun x273 () Int)
(declare-fun x6027 () Int)
(declare-fun x3175 () Int)
(declare-fun x7177 () Int)
(declare-fun x7710 () Int)
(declare-fun x3714 () Int)
(declare-fun x764 () Int)
(declare-fun x4341 (Int) Int)
(declare-fun x128 () Bool)
(declare-fun x7090 () Int)
(declare-fun x1210 () Int)
(declare-fun x6133 () Int)
(declare-fun x2457 () Bool)
(declare-fun x875 () Int)
(declare-fun x2829 () Int)
(declare-fun x1059 () Bool)
(declare-fun x1354 () Int)
(declare-fun x351 () Bool)
(declare-fun x7533 () Bool)
(declare-fun x5450 () Bool)
(declare-fun x4603 () Bool)
(declare-fun x5827 () Int)
(declare-fun x3106 () Bool)
(declare-fun x3847 () Bool)
(declare-fun x4904 () Int)
(declare-fun x7363 () Bool)
(declare-fun x4317 () Bool)
(declare-fun x8797 () Int)
(declare-fun x4270 () Bool)
(declare-fun x8833 () Int)
(declare-fun x3234 () Bool)
(declare-fun x786 () Int)
(declare-fun x8279 () Bool)
(declare-fun x1133 () Int)
(declare-fun x429 () Bool)
(declare-fun x3998 () Int)
(declare-fun x8400 () Int)
(declare-fun x5665 () Bool)
(declare-fun x4550 () Int)
(declare-fun x4729 () Int)
(declare-fun x2100 () Bool)
(declare-fun x86 () Int)
(declare-fun x7377 () Bool)
(declare-fun x5083 () Bool)
(declare-fun x6522 () Int)
(declare-fun x5402 () Int)
(declare-fun x5876 () Bool)
(declare-fun x5831 () Bool)
(declare-fun x6028 () Bool)
(declare-fun x6516 () Bool)
(declare-fun x9104 () Bool)
(declare-fun x326 () Int)
(declare-fun x1993 () Int)
(declare-fun x1296 () Bool)
(declare-fun x5813 () Int)
(declare-fun x3171 () Int)
(declare-fun x6906 () Int)
(declare-fun x6245 () Int)
(declare-fun x1685 () Bool)
(declare-fun x1255 () Int)
(declare-fun x3057 () Int)
(declare-fun x581 () Int)
(declare-fun x3956 () Int)
(declare-fun x6084 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x492 () Bool)
(declare-fun x3582 () Int)
(declare-fun x7204 () Bool)
(declare-fun x3179 () Int)
(declare-fun x1015 (Int) Int)
(declare-fun x2422 () Int)
(declare-fun x4543 () Int)
(declare-fun x5806 () Bool)
(declare-fun x8690 () Bool)
(declare-fun x7610 () Bool)
(declare-fun x8992 () Int)
(declare-fun x863 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x4143 (Int) Int)
(declare-fun x3702 () Int)
(declare-fun x695 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x837 () Bool)
(declare-fun x6509 () Int)
(declare-fun x4388 () Int)
(declare-fun x2051 () Int)
(declare-fun x4555 () Int)
(declare-fun x4445 (Int) Int)
(declare-fun x2845 () Bool)
(declare-fun x5457 () Bool)
(declare-fun x676 () Int)
(declare-fun x489 () Int)
(declare-fun x7948 () Bool)
(declare-fun x4331 () Int)
(declare-fun x243 () Int)
(declare-fun x8915 () Int)
(declare-fun x180 () Int)
(declare-fun x9087 () Int)
(declare-fun x4574 () Bool)
(declare-fun x5043 () Bool)
(declare-fun x7619 () Bool)
(declare-fun x2152 () Int)
(declare-fun x8592 () Bool)
(declare-fun x5553 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x607 () Int)
(declare-fun x2843 () Int)
(declare-fun x7676 () Int)
(declare-fun x2183 () Int)
(declare-fun x4462 () Bool)
(declare-fun x760 () Int)
(declare-fun x2258 (Int) Int)
(declare-fun x926 () Bool)
(declare-fun x2730 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x481 () Bool)
(declare-fun x2960 () Int)
(declare-fun x3266 () Int)
(declare-fun x4632 () Bool)
(declare-fun x9034 () Int)
(declare-fun x6342 (Int) Int)
(declare-fun x5699 () Int)
(declare-fun x1689 () Int)
(declare-fun x3388 () Bool)
(declare-fun x5273 () Bool)
(declare-fun x3481 () Int)
(declare-fun x7776 () Int)
(declare-fun x3536 () Bool)
(declare-fun x9008 () Int)
(declare-fun x4054 () Bool)
(declare-fun x3824 () Int)
(declare-fun x894 () Int)
(declare-fun x7042 () Int)
(declare-fun x2405 () Int)
(declare-fun x5512 () Int)
(declare-fun x9064 () Int)
(declare-fun x8501 () Bool)
(declare-fun x6707 () Int)
(declare-fun x4734 () Int)
(declare-fun x788 () Bool)
(declare-fun x8744 () Bool)
(declare-fun x10 () Int)
(declare-fun x3766 () Bool)
(declare-fun x7107 () Int)
(declare-fun x3497 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x5911 () Bool)
(declare-fun x8044 () Int)
(declare-fun x5546 () Int)
(declare-fun x8390 () Bool)
(declare-fun x7806 () Int)
(declare-fun x4196 () Int)
(declare-fun x3679 () Int)
(declare-fun x1290 () Int)
(declare-fun x6210 () Int)
(declare-fun x3254 (Int) Int)
(declare-fun x6481 () Int)
(declare-fun x3740 (Int) Int)
(declare-fun x3512 () Bool)
(declare-fun x4206 () Int)
(declare-fun x2053 () Int)
(declare-fun x7849 () Int)
(declare-fun x6264 () Bool)
(declare-fun x5071 () Bool)
(declare-fun x1082 () Int)
(declare-fun x6931 () Bool)
(declare-fun x9042 () Bool)
(declare-fun x5440 () Int)
(declare-fun x1881 () Int)
(declare-fun x2074 () Bool)
(declare-fun x8374 () Int)
(declare-fun x7319 () Int)
(declare-fun x1481 () Bool)
(declare-fun x8335 () Int)
(declare-fun x8039 () Int)
(declare-fun x3414 () Int)
(declare-fun x1214 () Bool)
(declare-fun x7969 () Int)
(declare-fun x7062 () Bool)
(declare-fun x3861 () Int)
(declare-fun x3753 () Bool)
(declare-fun x2767 () Int)
(declare-fun x8239 () Int)
(declare-fun x4284 () Int)
(declare-fun x8783 () Bool)
(declare-fun x6169 () Int)
(declare-fun x4109 () Bool)
(declare-fun x6687 () Bool)
(declare-fun x606 () Int)
(declare-fun x7833 () Bool)
(declare-fun x2092 () Int)
(declare-fun x3590 () Bool)
(declare-fun x1433 () Int)
(declare-fun x4897 (Int) Int)
(declare-fun x7263 () Bool)
(declare-fun x7238 () Bool)
(declare-fun x4119 () Bool)
(declare-fun x8596 () Int)
(declare-fun x5907 () Int)
(declare-fun x4430 () Bool)
(declare-fun x2413 () Int)
(declare-fun x7391 () Int)
(declare-fun x718 (Int) Int)
(declare-fun x5811 () Int)
(declare-fun x7714 () Int)
(declare-fun x264 () Int)
(declare-fun x3250 () Int)
(declare-fun x3084 () Int)
(declare-fun x6845 () Int)
(declare-fun x7706 () Bool)
(declare-fun x3658 () Bool)
(declare-fun x6830 () Bool)
(declare-fun x6329 () Int)
(declare-fun x1720 () Bool)
(declare-fun x6901 () Int)
(declare-fun x1432 () Bool)
(declare-fun x3329 () Int)
(declare-fun x3150 () Int)
(declare-fun x4556 () Bool)
(declare-fun x5013 () Bool)
(declare-fun x8525 () Bool)
(declare-fun x3518 () Int)
(declare-fun x4108 () Int)
(declare-fun x6229 () Bool)
(declare-fun x8422 () Int)
(declare-fun x7956 () Bool)
(declare-fun x3873 () Int)
(declare-fun x6260 () Bool)
(declare-fun x261 () Int)
(declare-fun x4806 () Int)
(declare-fun x1836 () Int)
(declare-fun x1425 () Int)
(declare-fun x1063 () Int)
(declare-fun x8802 (Int) Int)
(declare-fun x5721 () Int)
(declare-fun x2477 () Bool)
(declare-fun x732 () Int)
(declare-fun x7110 () Bool)
(declare-fun x2329 (Int) Int)
(declare-fun x3638 () Int)
(declare-fun x6711 () Bool)
(declare-fun x6579 () Int)
(declare-fun x3712 () Int)
(declare-fun x9025 () Bool)
(declare-fun x5033 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x4982 () Int)
(declare-fun x8942 () Int)
(declare-fun x5766 () Bool)
(declare-fun x5871 () Bool)
(declare-fun x3219 () Bool)
(declare-fun x8657 () Bool)
(declare-fun x8959 () Bool)
(declare-fun x7775 () Int)
(declare-fun x1336 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x4023 () Int)
(declare-fun x477 () Bool)
(declare-fun x4942 () Bool)
(declare-fun x4026 () Int)
(declare-fun x2353 () Int)
(declare-fun x6561 () Bool)
(declare-fun x2303 () Int)
(declare-fun x6772 () Bool)
(declare-fun x403 () Int)
(declare-fun x3722 () Int)
(declare-fun x2847 () Int)
(declare-fun x391 () Bool)
(declare-fun x8951 () Int)
(declare-fun x6813 () Bool)
(declare-fun x4071 () Bool)
(declare-fun x7672 () Bool)
(declare-fun x5422 () Int)
(declare-fun x1755 () Bool)
(declare-fun x6884 () Int)
(declare-fun x7048 () Int)
(declare-fun x1383 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x6283 () Int)
(declare-fun x3382 () Bool)
(declare-fun x1412 () Int)
(declare-fun x2927 () Int)
(declare-fun x7105 () Int)
(declare-fun x4264 () Int)
(declare-fun x6692 () Int)
(declare-fun x2380 () Int)
(declare-fun x8538 () Int)
(declare-fun x6566 () Int)
(declare-fun x2620 () Bool)
(declare-fun x5359 () Int)
(declare-fun x5590 () Int)
(declare-fun x5688 () Int)
(declare-fun x8530 () Bool)
(declare-fun x705 () Bool)
(declare-fun x5751 () Int)
(declare-fun x5479 () Int)
(declare-fun x7491 () Bool)
(declare-fun x7557 () Bool)
(declare-fun x4393 () Bool)
(declare-fun x5223 () Int)
(declare-fun x6258 () Int)
(declare-fun x4616 () Bool)
(declare-fun x4334 (Int) Int)
(declare-fun x7291 () Int)
(declare-fun x1249 () Bool)
(declare-fun x5472 () Bool)
(declare-fun x6382 () Int)
(declare-fun x2861 () Int)
(declare-fun x8275 () Int)
(declare-fun x4614 () Int)
(declare-fun x4961 () Bool)
(declare-fun x4425 () Int)
(declare-fun x4645 () Int)
(declare-fun x187 () Int)
(declare-fun x7009 () Int)
(declare-fun x2327 () Int)
(declare-fun x3190 () Int)
(declare-fun x4403 () Int)
(declare-fun x4435 () Int)
(declare-fun x8168 () Int)
(declare-fun x7750 () Bool)
(declare-fun x1084 () Int)
(declare-fun x5171 () Bool)
(declare-fun x6045 () Bool)
(declare-fun x1499 () Int)
(declare-fun x5085 () Bool)
(declare-fun x4027 () Int)
(declare-fun x4056 () Int)
(declare-fun x2034 () Int)
(declare-fun x5294 () Int)
(declare-fun x3151 () Int)
(declare-fun x7003 () Bool)
(declare-fun x5769 () Int)
(declare-fun x5224 () Bool)
(declare-fun x5660 () Int)
(declare-fun x4301 () Bool)
(declare-fun x526 () Bool)
(declare-fun x8615 () Int)
(declare-fun x1852 (Int) Int)
(declare-fun x4481 () Int)
(declare-fun x7923 () Int)
(declare-fun x6508 () Int)
(declare-fun x1357 () Int)
(declare-fun x998 () Int)
(declare-fun x7226 () Int)
(declare-fun x8111 () Bool)
(declare-fun x1186 () Int)
(declare-fun x2356 () Int)
(declare-fun x186 () Bool)
(declare-fun x5745 () Bool)
(declare-fun x1199 () Int)
(declare-fun x5859 (Int) Int)
(declare-fun x8253 () Bool)
(declare-fun x211 () Int)
(declare-fun x848 () Bool)
(declare-fun x6144 () Int)
(declare-fun x2793 (Int) Int)
(declare-fun x1402 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x7848 () Int)
(declare-fun x8550 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x6954 () Int)
(declare-fun x8081 () Bool)
(declare-fun x8402 () Bool)
(declare-fun x7243 () Bool)
(declare-fun x1759 () Int)
(declare-fun x1621 () Int)
(declare-fun x2774 () Int)
(declare-fun x174 () Int)
(declare-fun x2910 () Int)
(declare-fun x3647 () Int)
(declare-fun x6472 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x7729 () Int)
(declare-fun x8614 () Int)
(declare-fun x2911 () Int)
(declare-fun x2938 () Bool)
(declare-fun x5906 () Int)
(declare-fun x1589 () Int)
(declare-fun x4008 () Int)
(declare-fun x3789 () Int)
(declare-fun x467 () Bool)
(declare-fun x3544 () Int)
(declare-fun x7751 () Int)
(declare-fun x2820 () Bool)
(declare-fun x1607 () Int)
(declare-fun x7953 () Int)
(declare-fun x2243 () Bool)
(declare-fun x2706 () Int)
(declare-fun x62 () Bool)
(declare-fun x584 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1215 () Int)
(declare-fun x4467 () Int)
(declare-fun x1065 () Bool)
(declare-fun x5884 () Int)
(declare-fun x7916 () Int)
(declare-fun x5573 () Bool)
(declare-fun x1097 () Int)
(declare-fun x7579 () Int)
(declare-fun x3671 () Bool)
(declare-fun x5768 () Int)
(declare-fun x2837 (Int) Int)
(declare-fun x6354 () Int)
(declare-fun x5717 () Bool)
(declare-fun x1594 () Int)
(declare-fun x698 () Int)
(declare-fun x7411 () Int)
(declare-fun x1371 (Int) Int)
(declare-fun x4077 () Int)
(declare-fun x3862 () Int)
(declare-fun x5446 () Bool)
(declare-fun x3680 () Int)
(declare-fun x2359 () Int)
(declare-fun x2897 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x487 () Int)
(declare-fun x2454 () Int)
(declare-fun x7347 () Int)
(declare-fun x2270 () Bool)
(declare-fun x7654 () Int)
(declare-fun x4889 () Bool)
(declare-fun x8035 () Bool)
(declare-fun x2080 () Int)
(declare-fun x8599 () Bool)
(declare-fun x7336 () Int)
(declare-fun x5570 (Int) Int)
(declare-fun x6089 () Bool)
(declare-fun x7199 () Int)
(declare-fun x2209 () Bool)
(declare-fun x2304 () Bool)
(declare-fun x5058 () Int)
(declare-fun x4576 () Bool)
(declare-fun x389 () Bool)
(declare-fun x3340 () Int)
(declare-fun x3389 () Int)
(declare-fun x1690 () Int)
(declare-fun x7987 () Int)
(declare-fun x6548 () Int)
(declare-fun x5474 () Int)
(declare-fun x5022 () Bool)
(declare-fun x8025 () Int)
(declare-fun x230 () Int)
(declare-fun x9083 () Bool)
(declare-fun x5780 () Int)
(declare-fun x3486 () Bool)
(declare-fun x4229 () Int)
(declare-fun x2699 () Int)
(declare-fun x8579 () Bool)
(declare-fun x6503 () Int)
(declare-fun x4813 () Int)
(declare-fun x2775 () Int)
(declare-fun x654 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x9031 () Int)
(declare-fun x1000 () Int)
(declare-fun x2173 () Int)
(declare-fun x7182 () Bool)
(declare-fun x6177 () Int)
(declare-fun x20 (Int) Int)
(declare-fun x6270 () Int)
(declare-fun x4707 () Bool)
(declare-fun x4374 () Bool)
(declare-fun x2073 () Int)
(declare-fun x5267 () Bool)
(declare-fun x3160 () Int)
(declare-fun x2129 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x6070 () Bool)
(declare-fun x6362 () Int)
(declare-fun x2905 () Int)
(declare-fun x5874 () Bool)
(declare-fun x3369 () Int)
(declare-fun x1163 () Int)
(declare-fun x6352 () Bool)
(declare-fun x750 () Int)
(declare-fun x2997 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x7805 () Int)
(declare-fun x1467 () Int)
(declare-fun x2614 () Int)
(declare-fun x1064 () Int)
(declare-fun x2872 () Bool)
(declare-fun x7344 () Int)
(declare-fun x96 () Bool)
(declare-fun x3610 () Int)
(declare-fun x7702 () Bool)
(declare-fun x118 () Int)
(declare-fun x2668 () Int)
(declare-fun x8937 () Bool)
(declare-fun x8602 () Int)
(declare-fun x4858 () Int)
(declare-fun x6166 () Bool)
(declare-fun x543 () Int)
(declare-fun x2159 () Int)
(declare-fun x8416 () Bool)
(declare-fun x6496 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x5607 () Bool)
(declare-fun x7290 () Int)
(declare-fun x5225 () Int)
(declare-fun x1415 () Bool)
(declare-fun x8770 () Bool)
(declare-fun x6725 () Int)
(declare-fun x4716 () Bool)
(declare-fun x4069 () Int)
(declare-fun x4194 (Int) Int)
(declare-fun x8142 () Int)
(declare-fun x7553 () Bool)
(declare-fun x4803 () Bool)
(declare-fun x4948 () Bool)
(declare-fun x8473 () Bool)
(declare-fun x8543 () Bool)
(declare-fun x5753 () Int)
(declare-fun x7469 () Int)
(declare-fun x1990 () Int)
(declare-fun x1224 () Int)
(declare-fun x6510 () Bool)
(declare-fun x5499 () Bool)
(declare-fun x5527 () Int)
(declare-fun x8873 () Int)
(declare-fun x4984 () Int)
(declare-fun x6862 () Int)
(declare-fun x8449 () Bool)
(declare-fun x9048 () Int)
(declare-fun x2664 () Int)
(declare-fun x5976 () Bool)
(declare-fun x5894 () Int)
(declare-fun x1738 () Int)
(declare-fun x809 () Int)
(declare-fun x317 () Bool)
(declare-fun x7379 () Bool)
(declare-fun x6383 () Int)
(declare-fun x3540 () Int)
(declare-fun x7412 () Int)
(declare-fun x426 () Bool)
(declare-fun x9099 () Int)
(declare-fun x8054 () Int)
(declare-fun x3670 () Bool)
(declare-fun x816 (Int) Int)
(declare-fun x1947 () Int)
(declare-fun x6672 () Int)
(declare-fun x8691 () Int)
(declare-fun x6570 () Int)
(declare-fun x678 () Bool)
(declare-fun x216 () Int)
(declare-fun x3088 () Int)
(declare-fun x4916 () Int)
(declare-fun x8932 () Int)
(declare-fun x9115 () Bool)
(declare-fun x465 () Bool)
(declare-fun x2283 () Int)
(declare-fun x8371 () Bool)
(declare-fun x5377 () Int)
(declare-fun x3166 () Bool)
(declare-fun x8741 () Bool)
(declare-fun x4605 () Bool)
(declare-fun x1821 () Int)
(declare-fun x5406 () Int)
(declare-fun x7317 () Int)
(declare-fun x8565 () Int)
(declare-fun x719 () Int)
(declare-fun x4392 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x5842 () Bool)
(declare-fun x360 () Int)
(declare-fun x2856 () Int)
(declare-fun x4067 () Int)
(declare-fun x8259 () Int)
(declare-fun x7207 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x6787 () Bool)
(declare-fun x8775 () Int)
(declare-fun x8678 () Bool)
(declare-fun x2670 () Int)
(declare-fun x8829 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x3538 () Int)
(declare-fun x2199 () Int)
(declare-fun x933 () Int)
(declare-fun x1482 () Int)
(declare-fun x265 () Bool)
(declare-fun x6088 () Int)
(declare-fun x5714 () Int)
(declare-fun x1867 () Bool)
(declare-fun x5398 () Bool)
(declare-fun x1684 () Int)
(declare-fun x5800 () Int)
(declare-fun x3019 () Int)
(declare-fun x2689 () Bool)
(declare-fun x6055 () Int)
(declare-fun x4832 () Bool)
(declare-fun x943 () Int)
(declare-fun x1848 () Int)
(declare-fun x7018 () Int)
(declare-fun x4905 () Bool)
(declare-fun x1899 (Int) Int)
(declare-fun x7450 () Int)
(declare-fun x3173 () Int)
(declare-fun x1528 () Int)
(declare-fun x6361 () Bool)
(declare-fun x1807 () Int)
(declare-fun x8606 () Int)
(declare-fun x4624 () Bool)
(declare-fun x944 () Int)
(declare-fun x6949 () Int)
(declare-fun x9102 () Bool)
(declare-fun x40 () Bool)
(declare-fun x3521 () Bool)
(declare-fun x5000 () Bool)
(declare-fun x7459 () Bool)
(declare-fun x1428 () Int)
(declare-fun x799 () Bool)
(declare-fun x7303 () Bool)
(declare-fun x2646 () Int)
(declare-fun x4087 () Int)
(declare-fun x6767 () Int)
(declare-fun x6399 () Int)
(declare-fun x546 () Bool)
(declare-fun x4518 () Int)
(declare-fun x2418 (Int) Int)
(declare-fun x7827 () Bool)
(declare-fun x3318 () Bool)
(declare-fun x6052 () Int)
(declare-fun x4687 () Bool)
(declare-fun x3090 () Bool)
(declare-fun x8123 () Int)
(declare-fun x4676 () Int)
(declare-fun x7154 () Int)
(declare-fun x6248 () Bool)
(declare-fun x4219 () Int)
(declare-fun x1037 () Bool)
(declare-fun x204 () Int)
(declare-fun x6674 () Int)
(declare-fun x7689 () Int)
(declare-fun x4962 () Int)
(declare-fun x8755 () Bool)
(declare-fun x1492 () Int)
(declare-fun x553 () Int)
(declare-fun x8514 () Bool)
(declare-fun x7312 () Bool)
(declare-fun x6514 (Int) Int)
(declare-fun x6460 () Int)
(declare-fun x1532 () Int)
(declare-fun x7251 () Bool)
(declare-fun x7777 () Int)
(declare-fun x3685 () Int)
(declare-fun x3449 () Int)
(declare-fun x4110 () Bool)
(declare-fun x8727 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x3944 () Bool)
(declare-fun x5636 () Bool)
(declare-fun x4237 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x8557 () Int)
(declare-fun x246 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x2714 () Int)
(declare-fun x4983 () Bool)
(declare-fun x6326 () Int)
(declare-fun x659 () Int)
(declare-fun x1485 () Int)
(declare-fun x4839 () Bool)
(declare-fun x3152 () Bool)
(declare-fun x2138 () Int)
(declare-fun x4273 () Int)
(declare-fun x3400 () Int)
(declare-fun x3442 () Bool)
(declare-fun x7138 (Int) Int)
(declare-fun x6223 () Bool)
(declare-fun x39 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x6975 () Bool)
(declare-fun x1613 () Int)
(declare-fun x8877 () Int)
(declare-fun x5333 () Int)
(declare-fun x7172 () Int)
(declare-fun x3981 () Bool)
(declare-fun x8155 () Bool)
(declare-fun x2308 () Int)
(declare-fun x3802 () Int)
(declare-fun x6673 () Bool)
(declare-fun x5162 () Bool)
(declare-fun x8211 () Int)
(declare-fun x6790 () Bool)
(declare-fun x4688 () Bool)
(declare-fun x559 () Int)
(declare-fun x7305 () Int)
(declare-fun x7485 () Int)
(declare-fun x2896 () Int)
(declare-fun x2469 () Bool)
(declare-fun x8950 () Bool)
(declare-fun x6599 () Int)
(declare-fun x45 () Int)
(declare-fun x5749 (Int) Int)
(declare-fun x5673 () Int)
(declare-fun x5161 () Bool)
(declare-fun x6038 () Int)
(declare-fun x6261 () Bool)
(declare-fun x4225 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x562 () Bool)
(declare-fun x3795 () Int)
(declare-fun x3301 () Int)
(declare-fun x3146 () Bool)
(declare-fun x4438 (Int) Int)
(declare-fun x8024 () Int)
(declare-fun x3452 () Int)
(declare-fun x4245 (Int) Int)
(declare-fun x3148 () Bool)
(declare-fun x4268 () Int)
(declare-fun x1382 () Int)
(declare-fun x2513 () Int)
(declare-fun x7447 () Int)
(declare-fun x6330 (Int) Int)
(declare-fun x4876 () Bool)
(declare-fun x3918 () Bool)
(declare-fun x2161 () Int)
(declare-fun x147 () Bool)
(declare-fun x1863 () Int)
(declare-fun x2711 () Bool)
(declare-fun x9054 () Int)
(declare-fun x5729 () Bool)
(declare-fun x4695 () Int)
(declare-fun x5378 () Int)
(declare-fun x7959 () Int)
(declare-fun x1655 () Int)
(declare-fun x225 () Bool)
(declare-fun x1472 () Int)
(declare-fun x1419 () Bool)
(declare-fun x7950 () Int)
(declare-fun x5245 () Bool)
(declare-fun x276 () Int)
(declare-fun x1114 () Bool)
(declare-fun x6630 () Bool)
(declare-fun x4495 () Int)
(declare-fun x1257 () Bool)
(declare-fun x372 () Bool)
(declare-fun x8685 () Int)
(declare-fun x1560 () Int)
(declare-fun x83 () Int)
(declare-fun x3577 () Int)
(declare-fun x1787 () Bool)
(declare-fun x8141 () Bool)
(declare-fun x2289 () Int)
(declare-fun x1900 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x3221 () Int)
(declare-fun x8630 () Int)
(declare-fun x6252 () Int)
(declare-fun x7322 () Int)
(declare-fun x5606 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x3656 () Bool)
(declare-fun x4406 () Int)
(declare-fun x7653 () Bool)
(declare-fun x7334 () Int)
(declare-fun x4933 () Int)
(declare-fun x8331 () Bool)
(declare-fun x3752 () Int)
(declare-fun x5960 () Bool)
(declare-fun x8953 () Int)
(declare-fun x4700 () Int)
(declare-fun x3666 () Bool)
(declare-fun x3951 () Int)
(declare-fun x3137 (Int Int) Int)
(declare-fun x7574 () Bool)
(declare-fun x6162 () Int)
(declare-fun x3748 () Int)
(declare-fun x7087 () Bool)
(declare-fun x6263 (Int) Int)
(declare-fun x6614 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x7998 () Bool)
(declare-fun x5284 () Int)
(declare-fun x8887 () Bool)
(declare-fun x6214 () Bool)
(declare-fun x7289 () Bool)
(declare-fun x927 () Bool)
(declare-fun x6418 (Int) Int)
(declare-fun x4792 () Int)
(declare-fun x1766 () Bool)
(declare-fun x8888 (Int) Int)
(declare-fun x8546 () Int)
(declare-fun x8323 (Int) Int)
(declare-fun x8838 () Bool)
(declare-fun x6726 () Int)
(declare-fun x3988 () Bool)
(declare-fun x3343 () Bool)
(declare-fun x9011 () Int)
(declare-fun x5977 () Bool)
(declare-fun x3754 () Int)
(declare-fun x5226 () Int)
(declare-fun x3997 () Bool)
(declare-fun x3091 () Int)
(declare-fun x6071 () Int)
(declare-fun x2776 () Bool)
(declare-fun x7788 () Int)
(declare-fun x9079 () Int)
(declare-fun x3026 () Int)
(declare-fun x5848 () Bool)
(declare-fun x8941 () Bool)
(declare-fun x885 () Int)
(declare-fun x904 () Bool)
(declare-fun x657 () Int)
(declare-fun x2978 () Int)
(declare-fun x1420 () Int)
(declare-fun x2072 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x4648 () Int)
(declare-fun x781 () Int)
(declare-fun x3454 () Int)
(declare-fun x1446 () Int)
(declare-fun x7298 () Bool)
(declare-fun x4755 () Bool)
(declare-fun x4773 () Bool)
(declare-fun x8002 (Int) Int)
(declare-fun x6259 () Int)
(declare-fun x2634 (Int) Int)
(declare-fun x6591 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1736 () Int)
(declare-fun x1840 () Bool)
(declare-fun x7134 () Bool)
(declare-fun x366 () Int)
(declare-fun x2462 () Bool)
(declare-fun x5002 () Int)
(declare-fun x4276 (Int) Int)
(declare-fun x7136 () Int)
(declare-fun x8979 () Bool)
(declare-fun x3263 () Int)
(declare-fun x257 () Int)
(declare-fun x4864 () Int)
(declare-fun x8900 () Bool)
(declare-fun x3782 () Int)
(declare-fun x5980 () Int)
(declare-fun x5042 () Int)
(declare-fun x4727 () Int)
(declare-fun x6280 () Bool)
(declare-fun x4847 () Int)
(declare-fun x1861 () Int)
(declare-fun x5925 () Bool)
(declare-fun x3506 () Int)
(declare-fun x3608 () Bool)
(declare-fun x8677 () Bool)
(declare-fun x3408 () Int)
(declare-fun x2211 () Int)
(declare-fun x2693 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x8980 () Int)
(declare-fun x6204 () Bool)
(declare-fun x6047 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x9038 () Int)
(declare-fun x1061 () Bool)
(declare-fun x6002 () Int)
(declare-fun x1660 () Bool)
(declare-fun x8995 () Bool)
(declare-fun x8456 (Int) Int)
(declare-fun x5931 () Int)
(declare-fun x3572 () Bool)
(declare-fun x6575 () Int)
(declare-fun x644 () Int)
(declare-fun x1071 () Int)
(declare-fun x8208 () Int)
(declare-fun x3269 () Int)
(declare-fun x8822 () Int)
(declare-fun x4455 () Int)
(declare-fun x3625 () Int)
(declare-fun x4663 () Int)
(declare-fun x2509 () Bool)
(declare-fun x3257 (Int) Int)
(declare-fun x5654 () Bool)
(declare-fun x6371 (Int) Int)
(declare-fun x3913 () Bool)
(declare-fun x4137 () Int)
(declare-fun x1209 () Int)
(declare-fun x1364 () Int)
(declare-fun x6113 () Bool)
(declare-fun x5300 () Int)
(declare-fun x8066 () Bool)
(declare-fun x4018 () Bool)
(declare-fun x4482 () Int)
(declare-fun x2898 () Int)
(declare-fun x1107 () Int)
(declare-fun x8387 () Int)
(declare-fun x3932 () Int)
(declare-fun x4553 () Int)
(declare-fun x702 () Int)
(declare-fun x4939 () Int)
(declare-fun x3416 () Int)
(declare-fun x5360 () Bool)
(declare-fun x6645 (Int) Int)
(declare-fun x6173 () Bool)
(declare-fun x5981 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x5173 () Int)
(declare-fun x5246 () Int)
(declare-fun x7593 () Bool)
(declare-fun x566 () Int)
(declare-fun x3827 () Int)
(declare-fun x3069 () Bool)
(declare-fun x5238 () Bool)
(declare-fun x5647 () Int)
(declare-fun x1329 () Int)
(declare-fun x5234 () Int)
(declare-fun x4499 () Bool)
(declare-fun x3048 () Bool)
(declare-fun x2410 () Int)
(declare-fun x7397 () Int)
(declare-fun x6011 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x3194 () Bool)
(declare-fun x8840 () Int)
(declare-fun x1464 () Bool)
(declare-fun x9071 () Bool)
(declare-fun x6102 () Int)
(declare-fun x6864 () Bool)
(declare-fun x1554 () Int)
(declare-fun x8589 () Int)
(declare-fun x5571 () Int)
(declare-fun x3111 () Int)
(declare-fun x617 () Int)
(declare-fun x6312 () Int)
(declare-fun x5124 () Int)
(declare-fun x414 () Int)
(declare-fun x690 () Bool)
(declare-fun x6305 () Int)
(declare-fun x7664 () Int)
(declare-fun x721 () Int)
(declare-fun x3342 () Int)
(declare-fun x1751 (Int) Int)
(declare-fun x1523 () Bool)
(declare-fun x4951 () Int)
(declare-fun x3796 () Int)
(declare-fun x7373 () Int)
(declare-fun x625 () Int)
(declare-fun x1825 () Int)
(declare-fun x5615 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x3280 () Int)
(declare-fun x7120 (Int) Int)
(declare-fun x2612 () Int)
(declare-fun x3678 (Int) Int)
(declare-fun x7502 () Int)
(declare-fun x3127 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x951 () Int)
(declare-fun x8013 () Int)
(declare-fun x1444 () Int)
(declare-fun x3858 () Int)
(declare-fun x1927 () Int)
(declare-fun x5256 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x6952 () Int)
(declare-fun x4434 () Int)
(declare-fun x5478 () Bool)
(declare-fun x5270 () Int)
(declare-fun x8073 () Int)
(declare-fun x3992 () Int)
(declare-fun x3070 () Int)
(declare-fun x443 () Int)
(declare-fun x7445 (Int) Int)
(declare-fun x2452 () Int)
(declare-fun x867 () Bool)
(declare-fun x1753 () Int)
(declare-fun x7946 () Int)
(declare-fun x7086 () Bool)
(declare-fun x5135 () Bool)
(declare-fun x4940 () Int)
(declare-fun x8990 () Int)
(declare-fun x772 () Int)
(declare-fun x3704 () Int)
(declare-fun x6106 () Int)
(declare-fun x7000 () Int)
(declare-fun x4187 (Int) Int)
(declare-fun x8549 () Int)
(declare-fun x6733 () Int)
(declare-fun x3373 () Int)
(declare-fun x6918 () Int)
(declare-fun x24 (Int) Int)
(declare-fun x569 () Int)
(declare-fun x453 () Int)
(declare-fun x1148 () Bool)
(declare-fun x7685 () Bool)
(declare-fun x6369 () Bool)
(declare-fun x8796 () Bool)
(declare-fun x6853 (Int) Int)
(declare-fun x4768 () Int)
(declare-fun x1293 () Int)
(declare-fun x6730 () Int)
(declare-fun x3210 () Int)
(declare-fun x6405 () Int)
(declare-fun x3639 () Int)
(declare-fun x5596 () Bool)
(declare-fun x2490 () Int)
(declare-fun x4277 () Bool)
(declare-fun x968 () Bool)
(declare-fun x6695 () Bool)
(declare-fun x8138 () Bool)
(declare-fun x8667 () Bool)
(declare-fun x6076 () Bool)
(declare-fun x1526 () Bool)
(declare-fun x9013 () Int)
(declare-fun x1752 () Int)
(declare-fun x1244 () Int)
(declare-fun x3165 (Int) Int)
(declare-fun x948 () Bool)
(declare-fun x6535 () Bool)
(declare-fun x734 () Bool)
(declare-fun x6115 () Int)
(declare-fun x6015 () Int)
(declare-fun x4810 () Int)
(declare-fun x7464 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x1722 () Int)
(declare-fun x2328 () Int)
(declare-fun x8235 () Int)
(declare-fun x573 () Int)
(declare-fun x9072 () Bool)
(declare-fun x6057 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x3735 (Int) Int)
(declare-fun x2107 () Bool)
(declare-fun x8338 () Int)
(declare-fun x6069 (Int) Int)
(declare-fun x5909 () Bool)
(declare-fun x1235 () Int)
(declare-fun x3214 () Int)
(declare-fun x4504 (Int) Int)
(declare-fun x7652 () Bool)
(declare-fun x3983 () Bool)
(declare-fun x7910 () Int)
(declare-fun x9084 () Int)
(declare-fun x8922 () Int)
(declare-fun x4886 () Int)
(declare-fun x6120 () Int)
(declare-fun x2757 () Int)
(declare-fun x7797 () Bool)
(declare-fun x7623 () Int)
(declare-fun x552 () Int)
(declare-fun x300 () Bool)
(declare-fun x8238 () Int)
(declare-fun x6569 () Bool)
(declare-fun x1093 () Int)
(declare-fun x7099 () Bool)
(declare-fun x3543 () Bool)
(declare-fun x7859 () Bool)
(declare-fun x5577 () Int)
(declare-fun x6856 () Int)
(declare-fun x7537 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x1112 () Int)
(declare-fun x8470 () Int)
(declare-fun x5526 () Bool)
(declare-fun x1632 () Int)
(declare-fun x4032 () Int)
(declare-fun x5902 () Bool)
(declare-fun x2591 () Int)
(declare-fun x4040 (Int) Int)
(declare-fun x6385 () Bool)
(declare-fun x2358 () Int)
(declare-fun x4213 () Int)
(declare-fun x3013 () Bool)
(declare-fun x2993 () Bool)
(declare-fun x8214 () Int)
(declare-fun x2944 () Int)
(declare-fun x5646 () Bool)
(declare-fun x7761 () Int)
(declare-fun x839 () Bool)
(declare-fun x2207 (Int) Int)
(declare-fun x7257 () Int)
(declare-fun x6764 () Bool)
(declare-fun x1335 () Int)
(declare-fun x4312 () Int)
(declare-fun x7023 () Int)
(declare-fun x3717 () Bool)
(declare-fun x2681 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x6835 (Int) Int)
(declare-fun x2786 (Int) Int)
(declare-fun x3808 () Int)
(declare-fun x5635 () Int)
(declare-fun x124 () Bool)
(declare-fun x8085 () Int)
(declare-fun x5349 () Int)
(declare-fun x5535 () Int)
(declare-fun x7396 () Bool)
(declare-fun x4703 () Int)
(declare-fun x531 () Bool)
(declare-fun x6093 () Int)
(declare-fun x5760 () Int)
(declare-fun x5847 () Bool)
(declare-fun x5870 () Int)
(declare-fun x5732 () Int)
(declare-fun x548 () Bool)
(declare-fun x516 () Bool)
(declare-fun x5121 () Bool)
(declare-fun x4748 () Int)
(declare-fun x6610 () Bool)
(declare-fun x997 () Bool)
(declare-fun x8445 () Int)
(declare-fun x993 () Bool)
(declare-fun x4313 () Bool)
(declare-fun x2953 () Bool)
(declare-fun x3299 () Int)
(declare-fun x5138 () Int)
(declare-fun x3187 () Int)
(declare-fun x4911 () Int)
(declare-fun x6222 () Int)
(declare-fun x2949 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x853 () Int)
(declare-fun x5262 () Int)
(declare-fun x197 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x1551 () Int)
(declare-fun x5514 () Int)
(declare-fun x159 () Int)
(declare-fun x1728 () Int)
(declare-fun x2764 () Int)
(declare-fun x1697 (Int) Int)
(declare-fun x2373 () Bool)
(declare-fun x3830 () Bool)
(declare-fun x1710 () Int)
(declare-fun x3971 () Int)
(declare-fun x2117 () Int)
(declare-fun x4608 () Int)
(declare-fun x8988 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x6752 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x1725 () Int)
(declare-fun x2218 () Int)
(declare-fun x7602 (Int) Int)
(declare-fun x8177 () Int)
(declare-fun x6567 () Int)
(declare-fun x6001 () Bool)
(declare-fun x1778 () Int)
(declare-fun x190 (Int) Int)
(declare-fun x7063 () Bool)
(declare-fun x2158 () Int)
(declare-fun x2647 () Bool)
(declare-fun x2145 () Int)
(declare-fun x6453 () Bool)
(declare-fun x244 () Int)
(declare-fun x7901 () Int)
(declare-fun x5944 () Bool)
(declare-fun x8220 () Int)
(declare-fun x7360 () Bool)
(declare-fun x3078 () Bool)
(declare-fun x6705 () Int)
(declare-fun x2393 () Int)
(declare-fun x6720 () Bool)
(declare-fun x2991 () Int)
(declare-fun x6578 () Bool)
(declare-fun x8635 () Int)
(declare-fun x942 () Bool)
(declare-fun x6770 () Int)
(declare-fun x2807 () Int)
(declare-fun x2345 () Bool)
(declare-fun x5339 () Bool)
(declare-fun x5628 () Bool)
(declare-fun x6804 () Int)
(declare-fun x7679 () Int)
(declare-fun x1565 () Int)
(declare-fun x5877 () Int)
(declare-fun x1792 () Int)
(declare-fun x7660 () Bool)
(declare-fun x4525 () Int)
(declare-fun x4999 () Bool)
(declare-fun x682 () Int)
(declare-fun x6155 () Bool)
(declare-fun x6880 () Bool)
(declare-fun x81 () Int)
(declare-fun x1537 () Bool)
(declare-fun x327 () Int)
(declare-fun x3917 (Int) Int)
(declare-fun x1591 () Int)
(declare-fun x7114 () Int)
(declare-fun x55 () Int)
(declare-fun x8713 () Int)
(declare-fun x6890 () Int)
(declare-fun x1600 () Int)
(declare-fun x8717 () Int)
(declare-fun x1283 () Int)
(declare-fun x2558 () Int)
(declare-fun x7780 () Int)
(declare-fun x9030 () Int)
(declare-fun x4667 () Bool)
(declare-fun x8424 () Bool)
(declare-fun x9063 () Int)
(declare-fun x9073 () Bool)
(declare-fun x6982 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x193 () Bool)
(declare-fun x8984 () Int)
(declare-fun x3354 () Int)
(declare-fun x34 () Int)
(declare-fun x4721 () Int)
(declare-fun x4567 () Int)
(declare-fun x6246 () Int)
(declare-fun x7538 () Int)
(declare-fun x7401 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x485 () Bool)
(declare-fun x8890 () Int)
(declare-fun x7124 () Int)
(declare-fun x6612 () Int)
(declare-fun x8261 () Bool)
(declare-fun x301 () Int)
(declare-fun x2907 () Int)
(declare-fun x5617 (Int) Int)
(declare-fun x1688 () Int)
(declare-fun x8851 () Int)
(declare-fun x5767 () Bool)
(declare-fun x2518 () Int)
(declare-fun x8094 () Int)
(declare-fun x3930 () Bool)
(declare-fun x7542 (Int) Int)
(declare-fun x8069 () Bool)
(declare-fun x1616 () Int)
(declare-fun x7853 () Int)
(declare-fun x6662 () Bool)
(declare-fun x4176 () Int)
(declare-fun x3017 () Int)
(declare-fun x2573 () Int)
(declare-fun x369 () Bool)
(declare-fun x5026 (Int) Int)
(declare-fun x8516 () Int)
(declare-fun x3202 () Bool)
(declare-fun x826 () Bool)
(declare-fun x556 () Bool)
(declare-fun x7499 () Int)
(declare-fun x528 () Int)
(declare-fun x4457 () Int)
(declare-fun x3569 () Int)
(declare-fun x3279 () Int)
(declare-fun x3813 () Int)
(declare-fun x4085 () Bool)
(declare-fun x2862 () Int)
(declare-fun x7746 () Int)
(declare-fun x7493 () Bool)
(declare-fun x6025 () Int)
(declare-fun x5447 () Int)
(declare-fun x5325 () Bool)
(declare-fun x8607 () Int)
(declare-fun x4075 () Bool)
(declare-fun x291 () Int)
(declare-fun x5081 () Int)
(declare-fun x2815 () Bool)
(declare-fun x7374 () Bool)
(declare-fun x2606 () Int)
(declare-fun x4775 () Bool)
(declare-fun x5707 () Int)
(declare-fun x8256 () Int)
(declare-fun x3184 () Int)
(declare-fun x6005 () Int)
(declare-fun x5217 (Int) Int)
(declare-fun x2109 () Int)
(declare-fun x5035 () Int)
(declare-fun x6545 () Int)
(declare-fun x8084 (Int) Int)
(declare-fun x6425 () Int)
(declare-fun x6216 () Bool)
(declare-fun x5502 () Bool)
(declare-fun x141 () Int)
(declare-fun x3870 () Int)
(declare-fun x106 () Int)
(declare-fun x8964 () Int)
(declare-fun x6748 (Int) Int)
(declare-fun x4825 () Bool)
(declare-fun x3243 () Bool)
(declare-fun x4106 () Bool)
(declare-fun x736 () Int)
(declare-fun x8908 () Bool)
(declare-fun x2982 () Int)
(declare-fun x4048 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x8277 () Bool)
(declare-fun x2340 () Int)
(declare-fun x1301 () Bool)
(declare-fun x8462 () Bool)
(declare-fun x4136 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x6735 () Bool)
(declare-fun x7040 (Int) Int)
(declare-fun x294 () Int)
(declare-fun x4625 () Int)
(declare-fun x665 () Bool)
(declare-fun x5988 () Bool)
(declare-fun x2715 () Int)
(declare-fun x4211 () Bool)
(declare-fun x3517 () Int)
(declare-fun x3128 () Bool)
(declare-fun x990 () Int)
(declare-fun x4356 () Int)
(declare-fun x5027 () Bool)
(declare-fun x4577 () Int)
(declare-fun x982 () Int)
(declare-fun x4873 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x5080 (Int) Int)
(declare-fun x1028 () Bool)
(declare-fun x2478 () Int)
(declare-fun x3533 () Bool)
(declare-fun x5296 () Int)
(declare-fun x1014 () Bool)
(declare-fun x4058 () Int)
(declare-fun x5167 () Bool)
(declare-fun x6374 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x5709 () Bool)
(declare-fun x7276 () Int)
(declare-fun x237 () Bool)
(declare-fun x3223 () Int)
(declare-fun x7860 () Int)
(declare-fun x4820 () Bool)
(declare-fun x1837 () Int)
(declare-fun x6202 () Bool)
(declare-fun x1870 () Int)
(declare-fun x4372 () Int)
(declare-fun x4868 () Int)
(declare-fun x3939 () Int)
(declare-fun x861 () Int)
(declare-fun x5938 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x5555 () Bool)
(declare-fun x4823 () Int)
(declare-fun x1252 () Int)
(declare-fun x7688 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x6343 () Bool)
(declare-fun x5451 () Bool)
(declare-fun x8869 () Int)
(declare-fun x2245 () Int)
(declare-fun x5419 () Bool)
(declare-fun x8582 () Bool)
(declare-fun x4801 () Bool)
(declare-fun x3484 () Bool)
(declare-fun x5435 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x7241 (Int) Int)
(declare-fun x8709 () Int)
(declare-fun x877 () Int)
(declare-fun x8970 () Bool)
(declare-fun x5351 () Int)
(declare-fun x25 () Int)
(declare-fun x1346 () Int)
(declare-fun x4207 () Bool)
(declare-fun x1907 () Int)
(declare-fun x3843 () Bool)
(declare-fun x1590 () Int)
(declare-fun x3663 () Bool)
(declare-fun x1149 () Int)
(declare-fun x5794 () Int)
(declare-fun x1851 () Bool)
(declare-fun x2814 () Int)
(declare-fun x5269 () Int)
(declare-fun x2460 () Int)
(declare-fun x5266 () Int)
(declare-fun x4692 () Int)
(declare-fun x8847 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x8948 () Int)
(declare-fun x406 () Bool)
(declare-fun x4060 () Int)
(declare-fun x3113 () Int)
(declare-fun x6078 () Bool)
(declare-fun x438 () Int)
(declare-fun x2210 () Bool)
(declare-fun x5069 () Bool)
(declare-fun x5872 () Bool)
(declare-fun x425 () Bool)
(declare-fun x3429 () Bool)
(declare-fun x6989 () Int)
(declare-fun x7523 () Int)
(declare-fun x7266 (Int) Int)
(declare-fun x7375 () Int)
(declare-fun x1596 () Int)
(declare-fun x4320 () Bool)
(declare-fun x7076 () Int)
(declare-fun x421 () Bool)
(declare-fun x22 () Int)
(declare-fun x4397 () Int)
(declare-fun x3060 (Int) Int)
(declare-fun x6721 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x7513 () Int)
(declare-fun x3216 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x4128 () Int)
(declare-fun x812 () Bool)
(declare-fun x8517 () Bool)
(declare-fun x1937 () Int)
(declare-fun x8036 () Bool)
(declare-fun x330 () Int)
(declare-fun x4303 () Bool)
(declare-fun x1045 () Int)
(declare-fun x4197 () Bool)
(declare-fun x3950 () Int)
(declare-fun x6109 () Int)
(declare-fun x1051 () Int)
(declare-fun x7074 () Int)
(declare-fun x8523 () Int)
(declare-fun x7250 () Bool)
(declare-fun x7834 () Bool)
(declare-fun x1580 (Int) Int)
(declare-fun x2570 () Int)
(declare-fun x1887 () Bool)
(declare-fun x7386 () Bool)
(declare-fun x7896 () Int)
(declare-fun x1358 () Int)
(declare-fun x3409 () Bool)
(declare-fun x5057 () Int)
(declare-fun x8375 () Bool)
(declare-fun x4634 (Int) Int)
(declare-fun x3531 () Bool)
(declare-fun x7103 () Bool)
(declare-fun x6465 () Int)
(declare-fun x2033 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x8849 () Int)
(declare-fun x1099 () Int)
(declare-fun x3379 () Int)
(declare-fun x7515 (Int) Int)
(declare-fun x3053 () Bool)
(declare-fun x4653 (Int) Int)
(declare-fun x5563 () Bool)
(declare-fun x8819 () Int)
(declare-fun x8789 () Bool)
(declare-fun x7020 () Bool)
(declare-fun x2023 () Int)
(declare-fun x2382 () Bool)
(declare-fun x4720 () Int)
(declare-fun x5940 () Bool)
(declare-fun x6525 () Bool)
(declare-fun x5046 () Int)
(declare-fun x3721 () Int)
(declare-fun x36 () Int)
(declare-fun x2986 () Int)
(declare-fun x6896 () Int)
(declare-fun x3464 () Int)
(declare-fun x2171 () Bool)
(declare-fun x8998 () Int)
(declare-fun x6646 () Bool)
(declare-fun x8531 () Int)
(declare-fun x1128 () Bool)
(declare-fun x3554 () Int)
(declare-fun x5132 () Bool)
(declare-fun x8161 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x5287 () Bool)
(declare-fun x1853 () Int)
(declare-fun x8618 () Int)
(declare-fun x7522 () Int)
(declare-fun x6490 () Bool)
(declare-fun x3664 () Int)
(declare-fun x2533 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x6421 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x4139 () Bool)
(declare-fun x6667 () Int)
(declare-fun x4115 () Int)
(declare-fun x8576 () Int)
(declare-fun x4227 () Bool)
(declare-fun x7786 () Bool)
(declare-fun x6049 () Int)
(declare-fun x8750 () Bool)
(declare-fun x7977 () Bool)
(declare-fun x6194 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x8454 () Int)
(declare-fun x207 () Int)
(declare-fun x4527 (Int) Int)
(declare-fun x2430 () Int)
(declare-fun x6699 (Int) Int)
(declare-fun x815 () Int)
(declare-fun x1827 () Int)
(declare-fun x2749 () Int)
(declare-fun x4883 () Bool)
(declare-fun x8334 () Bool)
(declare-fun x6666 () Int)
(declare-fun x483 () Int)
(declare-fun x3093 () Int)
(declare-fun x3242 () Int)
(declare-fun x2030 () Int)
(declare-fun x7435 () Bool)
(declare-fun x4626 () Int)
(declare-fun x7793 () Bool)
(declare-fun x4710 () Bool)
(declare-fun x9095 () Bool)
(declare-fun x3435 () Bool)
(declare-fun x6619 () Int)
(declare-fun x683 () Int)
(declare-fun x3945 () Int)
(declare-fun x8241 () Int)
(declare-fun x7644 () Int)
(declare-fun x3131 () Int)
(declare-fun x5604 () Int)
(declare-fun x7699 () Bool)
(declare-fun x5466 (Int) Int)
(declare-fun x5680 () Int)
(declare-fun x6191 () Bool)
(declare-fun x2532 () Int)
(declare-fun x1219 () Int)
(declare-fun x247 () Int)
(declare-fun x5576 () Int)
(declare-fun x4990 () Int)
(declare-fun x3256 () Bool)
(declare-fun x3465 (Int) Int)
(declare-fun x8301 () Bool)
(declare-fun x1666 () Int)
(declare-fun x8872 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x2602 () Int)
(declare-fun x7472 () Int)
(declare-fun x3021 () Bool)
(declare-fun x4836 () Bool)
(declare-fun x5855 () Bool)
(declare-fun x4711 () Int)
(declare-fun x1648 () Bool)
(declare-fun x6628 () Bool)
(declare-fun x8173 (Int) Int)
(declare-fun x530 (Int) Int)
(declare-fun x3463 () Int)
(declare-fun x5053 () Bool)
(declare-fun x9057 (Int) Int)
(declare-fun x3849 () Int)
(declare-fun x121 () Int)
(declare-fun x8101 () Bool)
(declare-fun x1612 () Int)
(declare-fun x7627 () Int)
(declare-fun x7582 () Int)
(declare-fun x1626 () Bool)
(declare-fun x8057 () Int)
(declare-fun x3513 () Int)
(declare-fun x3372 () Int)
(declare-fun x8189 () Int)
(declare-fun x6671 () Bool)
(declare-fun x5374 (Int) Int)
(declare-fun x4678 () Int)
(declare-fun x7285 () Int)
(declare-fun x4323 () Int)
(declare-fun x3314 (Int) Int)
(declare-fun x6892 () Bool)
(declare-fun x5216 (Int) Int)
(declare-fun x6797 () Bool)
(declare-fun x5363 () Int)
(declare-fun x5278 () Int)
(declare-fun x5059 () Bool)
(declare-fun x4203 () Bool)
(declare-fun x3143 () Int)
(declare-fun x6505 () Int)
(declare-fun x3492 () Int)
(declare-fun x6768 () Int)
(declare-fun x2534 () Int)
(declare-fun x6105 () Bool)
(declare-fun x4826 () Int)
(declare-fun x4223 () Bool)
(declare-fun x4479 () Bool)
(declare-fun x6111 () Bool)
(declare-fun x221 () Int)
(declare-fun x4644 () Bool)
(declare-fun x4785 () Bool)
(declare-fun x6315 () Bool)
(declare-fun x5578 () Int)
(declare-fun x8982 () Int)
(declare-fun x5104 () Int)
(declare-fun x1027 () Bool)
(declare-fun x4082 () Int)
(declare-fun x9056 () Int)
(declare-fun x6016 () Int)
(declare-fun x2679 () Bool)
(declare-fun x510 () Bool)
(declare-fun x7927 () Int)
(declare-fun x5609 () Bool)
(declare-fun x1605 () Int)
(declare-fun x2249 () Bool)
(declare-fun x2941 () Int)
(declare-fun x8698 () Int)
(declare-fun x5511 () Int)
(declare-fun x6213 () Bool)
(declare-fun x4433 () Int)
(declare-fun x677 () Int)
(declare-fun x5692 () Bool)
(declare-fun x1030 () Int)
(declare-fun x8594 () Bool)
(declare-fun x755 () Int)
(declare-fun x4539 () Bool)
(declare-fun x7038 () Int)
(declare-fun x253 () Int)
(declare-fun x4884 (Int) Int)
(declare-fun x5731 () Int)
(declare-fun x8183 () Int)
(declare-fun x4921 () Int)
(declare-fun x5964 () Int)
(declare-fun x6531 () Int)
(declare-fun x7890 () Int)
(declare-fun x903 () Bool)
(declare-fun x836 () Int)
(declare-fun x561 () Bool)
(declare-fun x4497 () Int)
(declare-fun x1207 () Bool)
(declare-fun x8624 () Bool)
(declare-fun x911 () Int)
(declare-fun x2752 () Bool)
(declare-fun x936 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x5453 () Bool)
(declare-fun x1378 () Int)
(declare-fun x4666 () Int)
(declare-fun x1976 () Int)
(declare-fun x8957 () Bool)
(declare-fun x5833 (Int) Int)
(declare-fun x8032 () Int)
(declare-fun x3960 () Int)
(declare-fun x8053 () Bool)
(declare-fun x4395 () Int)
(declare-fun x980 () Bool)
(declare-fun x5605 () Bool)
(declare-fun x7113 () Int)
(declare-fun x2275 () Int)
(declare-fun x1945 () Int)
(declare-fun x5305 () Bool)
(declare-fun x2563 () Int)
(declare-fun x272 () Bool)
(declare-fun x7986 () Int)
(declare-fun x8682 () Bool)
(declare-fun x5247 () Bool)
(declare-fun x8119 (Int) Int)
(declare-fun x2114 () Int)
(declare-fun x2154 () Int)
(declare-fun x3037 () Int)
(declare-fun x8413 (Int) Int)
(declare-fun x4130 () Int)
(declare-fun x2753 () Int)
(declare-fun x6044 () Int)
(declare-fun x8860 () Int)
(declare-fun x1615 () Bool)
(declare-fun x1436 () Int)
(declare-fun x3260 () Int)
(declare-fun x1234 () Int)
(declare-fun x5630 () Bool)
(declare-fun x7583 () Int)
(declare-fun x523 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x1144 () Int)
(declare-fun x8203 () Bool)
(declare-fun x3562 () Int)
(declare-fun x668 () Int)
(declare-fun x5644 () Int)
(declare-fun x1756 () Bool)
(declare-fun x3984 () Bool)
(declare-fun x7392 () Bool)
(declare-fun x196 () Int)
(declare-fun x7129 () Int)
(declare-fun x5144 () Bool)
(declare-fun x2666 () Int)
(declare-fun x266 () Int)
(declare-fun x1274 () Int)
(declare-fun x8045 () Int)
(declare-fun x2176 () Bool)
(declare-fun x8718 () Int)
(declare-fun x1195 () Int)
(declare-fun x2342 () Bool)
(declare-fun x3979 () Int)
(declare-fun x1438 () Int)
(declare-fun x8322 () Int)
(declare-fun x423 () Int)
(declare-fun x2546 (Int) Int)
(declare-fun x7884 (Int) Int)
(declare-fun x4754 () Int)
(declare-fun x2498 () Bool)
(declare-fun x5331 () Int)
(declare-fun x8564 () Bool)
(declare-fun x8011 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x4144 () Bool)
(declare-fun x3264 () Int)
(declare-fun x2608 () Int)
(declare-fun x8276 () Bool)
(declare-fun x2762 () Bool)
(declare-fun x8668 () Bool)
(declare-fun x3453 () Bool)
(declare-fun x3367 () Int)
(declare-fun x8696 () Int)
(declare-fun x6163 () Int)
(declare-fun x3817 () Bool)
(declare-fun x7510 () Bool)
(declare-fun x5206 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x2178 (Int) Int)
(declare-fun x623 () Int)
(declare-fun x7984 () Int)
(declare-fun x1198 () Bool)
(declare-fun x7939 () Bool)
(declare-fun x2271 () Int)
(declare-fun x2741 () Bool)
(declare-fun x8305 () Bool)
(declare-fun x6416 () Bool)
(declare-fun x8671 () Int)
(declare-fun x1269 () Bool)
(declare-fun x4989 () Int)
(declare-fun x8286 () Bool)
(declare-fun x463 () Bool)
(declare-fun x5423 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x6125 () Int)
(declare-fun x7169 () Int)
(declare-fun x188 () Bool)
(declare-fun x2566 () Int)
(declare-fun x2250 () Bool)
(declare-fun x9124 () Bool)
(declare-fun x8249 () Bool)
(declare-fun x2504 () Bool)
(declare-fun x2994 () Int)
(declare-fun x7957 () Int)
(declare-fun x3711 () Int)
(declare-fun x4031 () Int)
(declare-fun x1192 () Int)
(declare-fun x8075 () Int)
(declare-fun x1278 () Int)
(declare-fun x2996 () Int)
(declare-fun x6855 () Int)
(declare-fun x3675 () Bool)
(declare-fun x8728 () Bool)
(declare-fun x4722 () Int)
(declare-fun x1522 () Int)
(declare-fun x8376 () Bool)
(declare-fun x2381 () Int)
(declare-fun x7783 () Bool)
(declare-fun x3248 () Int)
(declare-fun x3109 () Int)
(declare-fun x6819 () Int)
(declare-fun x173 () Bool)
(declare-fun x6650 () Bool)
(declare-fun x6665 () Int)
(declare-fun x5700 (Int) Int)
(declare-fun x2489 () Int)
(declare-fun x94 () Bool)
(declare-fun x178 () Int)
(declare-fun x7487 () Int)
(declare-fun x4593 () Int)
(declare-fun x3249 () Int)
(declare-fun x3129 () Bool)
(declare-fun x4354 () Bool)
(declare-fun x5228 () Int)
(declare-fun x3696 () Bool)
(declare-fun x8082 () Bool)
(declare-fun x6613 () Int)
(declare-fun x4005 () Int)
(declare-fun x5110 () Bool)
(declare-fun x7084 () Int)
(declare-fun x368 () Int)
(declare-fun x2262 () Int)
(declare-fun x8863 () Bool)
(declare-fun x4895 () Int)
(declare-fun x7100 () Bool)
(declare-fun x5096 () Int)
(declare-fun x6789 () Int)
(declare-fun x1629 () Bool)
(declare-fun x6463 () Int)
(declare-fun x621 (Int) Int)
(declare-fun x6457 () Int)
(declare-fun x5271 () Int)
(declare-fun x8467 () Bool)
(declare-fun x770 () Bool)
(declare-fun x7139 () Bool)
(declare-fun x8612 () Bool)
(declare-fun x7753 (Int) Int)
(declare-fun x4723 () Int)
(declare-fun x3738 () Bool)
(declare-fun x5734 () Bool)
(declare-fun x4827 () Bool)
(declare-fun x8757 () Bool)
(declare-fun x5020 () Int)
(declare-fun x8542 () Bool)
(declare-fun x6780 () Bool)
(declare-fun x4414 () Int)
(declare-fun x6318 () Int)
(declare-fun x8206 () Int)
(declare-fun x8857 () Int)
(declare-fun x4017 (Int) Int)
(declare-fun x1487 () Int)
(declare-fun x5116 () Int)
(declare-fun x1310 () Int)
(declare-fun x7667 () Bool)
(declare-fun x5574 () Int)
(declare-fun x8444 () Int)
(declare-fun x4963 () Int)
(declare-fun x773 () Bool)
(declare-fun x978 () Int)
(declare-fun x7151 () Bool)
(declare-fun x7006 () Bool)
(declare-fun x7787 () Bool)
(declare-fun x5997 () Bool)
(declare-fun x4510 () Int)
(declare-fun x4912 () Int)
(declare-fun x2594 () Int)
(declare-fun x1375 () Int)
(declare-fun x394 () Int)
(declare-fun x4398 () Int)
(declare-fun x6186 () Bool)
(declare-fun x5591 () Bool)
(declare-fun x1398 () Int)
(declare-fun x2407 () Bool)
(declare-fun x4308 () Int)
(declare-fun x1447 () Bool)
(declare-fun x5830 () Bool)
(declare-fun x8648 (Int) Int)
(declare-fun x8231 () Bool)
(declare-fun x3797 () Int)
(declare-fun x2299 (Int) Int)
(declare-fun x6914 () Bool)
(declare-fun x2980 () Int)
(declare-fun x2242 () Int)
(declare-fun x3391 () Int)
(declare-fun x7217 () Int)
(declare-fun x6179 () Int)
(declare-fun x7380 () Int)
(declare-fun x6554 () Int)
(declare-fun x7922 () Int)
(declare-fun x7519 () Bool)
(declare-fun x8014 () Int)
(declare-fun x3125 () Int)
(declare-fun x3955 () Int)
(declare-fun x4701 (Int) Int)
(declare-fun x1919 () Int)
(declare-fun x1931 () Bool)
(declare-fun x5486 () Int)
(declare-fun x5028 () Bool)
(declare-fun x8399 () Int)
(declare-fun x2878 () Bool)
(declare-fun x59 () Int)
(declare-fun x2995 () Bool)
(declare-fun x6359 () Int)
(declare-fun x8626 () Int)
(declare-fun x2267 () Int)
(declare-fun x1316 () Int)
(declare-fun x2760 () Bool)
(declare-fun x3480 () Bool)
(declare-fun x3749 () Int)
(declare-fun x2179 () Int)
(declare-fun x4600 () Bool)
(declare-fun x6311 () Bool)
(declare-fun x2756 (Int) Int)
(declare-fun x3946 (Int) Int)
(declare-fun x6627 () Bool)
(declare-fun x870 () Int)
(declare-fun x6616 () Bool)
(declare-fun x4554 () Bool)
(declare-fun x7832 () Bool)
(declare-fun x3654 () Bool)
(declare-fun x4862 () Int)
(declare-fun x488 () Int)
(declare-fun x1497 () Int)
(declare-fun x3355 () Int)
(declare-fun x1352 () Bool)
(declare-fun x5625 () Int)
(declare-fun x6806 () Int)
(declare-fun x956 () Int)
(declare-fun x271 () Int)
(declare-fun x3420 () Int)
(declare-fun x8539 () Int)
(declare-fun x8309 () Int)
(declare-fun x2226 (Int) Int)
(declare-fun x3360 () Int)
(declare-fun x8463 () Int)
(declare-fun x299 () Int)
(declare-fun x6529 () Bool)
(declare-fun x5682 (Int) Int)
(declare-fun x4404 () Bool)
(declare-fun x5645 () Int)
(declare-fun x9093 () Bool)
(declare-fun x8850 () Bool)
(declare-fun x3145 () Bool)
(declare-fun x3015 () Int)
(declare-fun x810 () Int)
(declare-fun x3629 () Int)
(declare-fun x8324 () Int)
(declare-fun x1029 () Int)
(declare-fun x5205 () Int)
(declare-fun x8021 () Int)
(declare-fun x6067 () Int)
(declare-fun x5858 () Int)
(declare-fun x2261 () Bool)
(declare-fun x2977 () Bool)
(declare-fun x1508 () Int)
(declare-fun x8597 () Int)
(declare-fun x8051 () Int)
(declare-fun x1326 () Int)
(declare-fun x2924 () Int)
(declare-fun x1750 () Bool)
(declare-fun x3641 () Bool)
(declare-fun x8497 () Bool)
(declare-fun x7329 () Int)
(declare-fun x8029 () Bool)
(declare-fun x2346 (Int) Int)
(declare-fun x3708 () Int)
(declare-fun x1185 () Bool)
(declare-fun x6753 () Int)
(declare-fun x8756 () Int)
(declare-fun x1468 () Bool)
(declare-fun x6625 () Int)
(declare-fun x4339 () Int)
(declare-fun x8255 () Int)
(declare-fun x2016 () Int)
(declare-fun x9041 () Bool)
(declare-fun x5183 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x2386 () Int)
(declare-fun x8221 () Int)
(declare-fun x603 () Int)
(declare-fun x8187 () Int)
(declare-fun x570 () Bool)
(declare-fun x8001 () Int)
(declare-fun x3556 () Bool)
(declare-fun x3007 () Int)
(declare-fun x8254 () Bool)
(declare-fun x8055 () Int)
(declare-fun x7283 () Bool)
(declare-fun x5999 () Bool)
(declare-fun x8394 () Bool)
(declare-fun x8465 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x1403 () Int)
(declare-fun x2006 () Int)
(declare-fun x2201 () Int)
(declare-fun x345 () Bool)
(declare-fun x3494 () Int)
(declare-fun x8966 () Int)
(declare-fun x831 () Int)
(declare-fun x8107 () Int)
(declare-fun x8816 () Int)
(declare-fun x2624 () Bool)
(declare-fun x707 () Int)
(declare-fun x6017 () Int)
(declare-fun x1088 () Int)
(declare-fun x1404 (Int) Int)
(declare-fun x1362 () Int)
(declare-fun x6948 () Bool)
(declare-fun x7724 () Int)
(declare-fun x2655 () Int)
(declare-fun x7413 () Bool)
(declare-fun x3431 () Bool)
(declare-fun x3450 () Bool)
(declare-fun x6493 () Int)
(declare-fun x2119 () Int)
(declare-fun x7945 () Int)
(declare-fun x3867 () Int)
(declare-fun x2661 () Int)
(declare-fun x1538 () Bool)
(declare-fun x2988 () Int)
(declare-fun x583 () Int)
(declare-fun x7935 () Int)
(declare-fun x3686 () Bool)
(declare-fun x6984 () Int)
(declare-fun x8458 () Int)
(declare-fun x847 () Int)
(declare-fun x7608 () Int)
(declare-fun x8686 () Bool)
(declare-fun x8672 (Int) Int)
(declare-fun x1670 () Int)
(declare-fun x3729 () Int)
(declare-fun x4286 () Bool)
(declare-fun x7620 (Int) Int)
(declare-fun x3244 () Bool)
(declare-fun x7127 () Bool)
(declare-fun x3527 () Bool)
(declare-fun x7195 () Bool)
(declare-fun x6448 () Int)
(declare-fun x2984 () Int)
(declare-fun x5947 () Int)
(declare-fun x8800 () Bool)
(declare-fun x2157 () Int)
(declare-fun x3607 () Int)
(declare-fun x4898 () Int)
(declare-fun x8327 () Int)
(declare-fun x6065 () Int)
(declare-fun x5560 () Bool)
(declare-fun x1282 () Int)
(declare-fun x6277 () Int)
(declare-fun x6498 () Bool)
(declare-fun x2024 () Int)
(declare-fun x5459 () Int)
(declare-fun x3141 () Bool)
(declare-fun x5066 () Int)
(declare-fun x2135 () Bool)
(declare-fun x3854 () Int)
(declare-fun x8086 () Bool)
(declare-fun x498 () Int)
(declare-fun x3189 () Int)
(declare-fun x783 (Int) Int)
(declare-fun x1110 () Int)
(declare-fun x3774 () Bool)
(declare-fun x8529 () Bool)
(declare-fun x1633 () Int)
(declare-fun x1318 () Bool)
(declare-fun x5279 () Int)
(declare-fun x7671 () Bool)
(declare-fun x6939 () Int)
(declare-fun x3164 () Int)
(declare-fun x5875 () Bool)
(declare-fun x3081 () Bool)
(declare-fun x1686 () Int)
(declare-fun x5802 () Bool)
(declare-fun x6576 () Bool)
(declare-fun x2071 () Int)
(declare-fun x1941 () Bool)
(declare-fun x2739 () Int)
(declare-fun x1176 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x7999 () Bool)
(declare-fun x4377 () Int)
(declare-fun x7741 () Bool)
(declare-fun x1503 () Int)
(declare-fun x7417 () Int)
(declare-fun x5218 () Int)
(declare-fun x8304 () Bool)
(declare-fun x3001 () Int)
(declare-fun x4470 () Bool)
(declare-fun x4100 () Bool)
(declare-fun x4691 () Bool)
(declare-fun x2372 () Int)
(declare-fun x2690 () Bool)
(declare-fun x2718 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x7314 () Bool)
(declare-fun x5655 () Bool)
(declare-fun x3303 () Bool)
(declare-fun x5508 () Int)
(declare-fun x8945 () Bool)
(declare-fun x1393 () Int)
(declare-fun x8701 () Int)
(declare-fun x5003 () Bool)
(declare-fun x2438 () Int)
(declare-fun x6933 (Int) Int)
(declare-fun x1985 () Int)
(declare-fun x8831 () Bool)
(declare-fun x5051 () Bool)
(declare-fun x6231 () Int)
(declare-fun x6670 () Bool)
(declare-fun x4125 (Int) Int)
(declare-fun x8289 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x7052 () Int)
(declare-fun x3745 () Int)
(declare-fun x3309 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x4061 () Bool)
(declare-fun x6236 () Bool)
(declare-fun x131 () Bool)
(declare-fun x3311 () Int)
(declare-fun x4231 () Int)
(declare-fun x268 () Bool)
(declare-fun x7498 () Bool)
(declare-fun x1961 () Int)
(declare-fun x9078 () Int)
(declare-fun x6714 () Bool)
(declare-fun x1968 (Int) Int)
(declare-fun x1151 () Int)
(declare-fun x8817 () Int)
(declare-fun x4202 () Bool)
(declare-fun x470 () Int)
(declare-fun x6643 () Int)
(declare-fun x9020 () Int)
(declare-fun x4464 () Int)
(declare-fun x4039 () Int)
(declare-fun x3268 () Int)
(declare-fun x1929 () Int)
(declare-fun x3273 (Int) Int)
(declare-fun x3154 () Bool)
(declare-fun x3834 () Int)
(declare-fun x4046 () Bool)
(declare-fun x430 () Int)
(declare-fun x7137 () Bool)
(declare-fun x9022 (Int) Int)
(declare-fun x2265 () Int)
(declare-fun x8993 () Int)
(declare-fun x1367 () Int)
(declare-fun x6086 () Int)
(declare-fun x8739 () Int)
(declare-fun x1935 () Int)
(declare-fun x2596 () Bool)
(declare-fun x7554 () Int)
(declare-fun x2088 () Int)
(declare-fun x8209 () Int)
(declare-fun x2115 () Int)
(declare-fun x5361 () Int)
(declare-fun x6380 () Int)
(declare-fun x4249 () Int)
(declare-fun x3623 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x2491 () Int)
(declare-fun x3169 () Bool)
(declare-fun x7407 () Bool)
(declare-fun x7013 () Bool)
(declare-fun x5222 () Int)
(declare-fun x4978 () Bool)
(declare-fun x8366 () Bool)
(declare-fun x6872 () Int)
(declare-fun x7460 () Bool)
(declare-fun x3229 () Int)
(declare-fun x3278 () Int)
(declare-fun x8430 () Int)
(declare-fun x4970 () Bool)
(declare-fun x7516 (Int) Int)
(declare-fun x5416 () Int)
(declare-fun x3872 () Int)
(declare-fun x1182 () Int)
(declare-fun x545 () Bool)
(declare-fun x4174 () Bool)
(declare-fun x1139 () Int)
(declare-fun x4405 () Bool)
(declare-fun x4782 () Int)
(declare-fun x8634 () Int)
(declare-fun x238 () Bool)
(declare-fun x1638 () Int)
(declare-fun x365 (Int) Int)
(declare-fun x1956 () Bool)
(declare-fun x8520 () Bool)
(declare-fun x7488 () Bool)
(declare-fun x226 () Bool)
(declare-fun x8116 (Int) Int)
(declare-fun x1834 () Bool)
(declare-fun x5229 (Int) Int)
(declare-fun x4972 () Int)
(declare-fun x3398 () Int)
(declare-fun x2507 () Int)
(declare-fun x46 () Bool)
(declare-fun x8567 () Int)
(declare-fun x4612 (Int) Int)
(declare-fun x5023 () Int)
(declare-fun x1380 () Int)
(declare-fun x756 (Int) Int)
(declare-fun x3123 () Bool)
(declare-fun x7771 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x8905 () Int)
(declare-fun x5542 () Int)
(declare-fun x5332 () Int)
(declare-fun x5062 () Bool)
(declare-fun x3440 () Int)
(declare-fun x792 () Int)
(declare-fun x6868 (Int) Int)
(declare-fun x8813 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x5757 () Int)
(declare-fun x5166 () Int)
(declare-fun x923 () Int)
(declare-fun x7774 () Int)
(declare-fun x1123 () Bool)
(declare-fun x5078 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x2502 (Int) Int)
(declare-fun x2855 () Int)
(declare-fun x6098 () Int)
(declare-fun x3642 () Bool)
(declare-fun x5152 () Int)
(declare-fun x5460 () Bool)
(declare-fun x2663 () Int)
(declare-fun x3927 (Int) Int)
(declare-fun x5175 () Bool)
(declare-fun x4959 () Int)
(declare-fun x7978 () Bool)
(declare-fun x7475 (Int) Int)
(declare-fun x1744 () Int)
(declare-fun x4706 () Bool)
(declare-fun x3230 () Int)
(declare-fun x671 () Bool)
(declare-fun x1263 () Int)
(declare-fun x4412 () Bool)
(declare-fun x893 () Int)
(declare-fun x2371 () Int)
(declare-fun x8252 () Bool)
(declare-fun x1289 () Int)
(declare-fun x2456 () Int)
(declare-fun x302 () Int)
(declare-fun x7975 (Int) Int)
(declare-fun x791 () Int)
(declare-fun x1096 () Bool)
(declare-fun x9023 () Int)
(declare-fun x3747 () Bool)
(declare-fun x8224 () Int)
(declare-fun x3516 () Bool)
(declare-fun x6611 () Int)
(declare-fun x361 () Int)
(declare-fun x6527 () Bool)
(declare-fun x486 () Bool)
(declare-fun x8719 (Int) Int)
(declare-fun x2963 () Bool)
(declare-fun x5620 () Int)
(declare-fun x7944 () Int)
(declare-fun x8845 () Bool)
(declare-fun x8269 () Int)
(declare-fun x4541 () Bool)
(declare-fun x7096 () Bool)
(declare-fun x571 () Int)
(declare-fun x1598 () Bool)
(declare-fun x3304 () Int)
(declare-fun x747 () Int)
(declare-fun x7962 () Int)
(declare-fun x3777 () Int)
(declare-fun x3061 () Bool)
(declare-fun x4343 () Int)
(declare-fun x7566 () Int)
(declare-fun x890 () Int)
(declare-fun x1411 () Bool)
(declare-fun x5566 (Int) Int)
(declare-fun x6364 () Bool)
(declare-fun x5001 () Bool)
(declare-fun x4617 () Int)
(declare-fun x3350 () Bool)
(declare-fun x3539 () Bool)
(declare-fun x5982 () Int)
(declare-fun x2050 () Int)
(declare-fun x6178 () Int)
(declare-fun x7356 () Int)
(declare-fun x2894 () Int)
(declare-fun x378 () Bool)
(declare-fun x7892 () Int)
(declare-fun x3848 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x8681 () Int)
(declare-fun x7595 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x8180 () Bool)
(declare-fun x7993 () Int)
(declare-fun x6618 () Bool)
(declare-fun x4609 () Bool)
(declare-fun x5330 () Bool)
(declare-fun x4199 () Int)
(declare-fun x497 () Bool)
(declare-fun x1473 () Int)
(declare-fun x6438 () Int)
(declare-fun x6750 (Int) Int)
(declare-fun x8453 () Int)
(declare-fun x2169 () Int)
(declare-fun x6857 () Bool)
(declare-fun x5093 () Int)
(declare-fun x8357 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x3859 () Int)
(declare-fun x1656 () Bool)
(declare-fun x473 () Bool)
(declare-fun x8037 () Bool)
(declare-fun x5029 () Int)
(declare-fun x6101 () Int)
(declare-fun x1115 () Int)
(declare-fun x6660 () Int)
(declare-fun x6542 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x1774 () Int)
(declare-fun x2595 () Int)
(declare-fun x5678 () Bool)
(declare-fun x422 () Int)
(declare-fun x7869 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x567 () Int)
(declare-fun x5633 (Int) Int)
(declare-fun x296 () Int)
(declare-fun x8201 () Bool)
(declare-fun x3907 () Int)
(declare-fun x2082 () Int)
(declare-fun x3479 () Bool)
(declare-fun x8809 () Bool)
(declare-fun x2648 () Bool)
(declare-fun x2383 () Int)
(declare-fun x3352 () Int)
(declare-fun x2009 () Bool)
(declare-fun x5887 () Int)
(declare-fun x6182 () Int)
(declare-fun x8665 () Int)
(declare-fun x6167 () Bool)
(declare-fun x555 () Bool)
(declare-fun x5536 () Bool)
(declare-fun x585 () Bool)
(declare-fun x8125 () Int)
(declare-fun x7682 () Bool)
(declare-fun x8570 () Bool)
(declare-fun x8963 () Bool)
(declare-fun x3407 () Int)
(declare-fun x2849 () Bool)
(declare-fun x3366 () Int)
(declare-fun x1948 () Bool)
(declare-fun x3860 () Bool)
(declare-fun x8034 () Int)
(declare-fun x7674 () Int)
(declare-fun x5895 () Bool)
(declare-fun x6206 () Int)
(declare-fun x1566 () Bool)
(declare-fun x8442 () Int)
(declare-fun x6833 () Int)
(declare-fun x3205 () Bool)
(declare-fun x2824 (Int) Int)
(declare-fun x782 () Bool)
(declare-fun x44 () Bool)
(declare-fun x6814 () Int)
(declare-fun x3757 () Int)
(declare-fun x7399 () Bool)
(declare-fun x704 () Bool)
(declare-fun x3307 () Int)
(declare-fun x8673 () Int)
(declare-fun x1440 () Int)
(declare-fun x5501 () Int)
(declare-fun x3087 () Int)
(declare-fun x8427 () Int)
(declare-fun x8098 () Bool)
(declare-fun x2604 () Int)
(declare-fun x400 () Bool)
(declare-fun x4318 () Bool)
(declare-fun x6945 () Int)
(declare-fun x4903 () Bool)
(declare-fun x6023 () Int)
(declare-fun x3553 () Bool)
(declare-fun x4336 () Int)
(declare-fun x6965 () Int)
(declare-fun x3117 () Int)
(declare-fun x717 () Int)
(declare-fun x4214 () Bool)
(declare-fun x3346 () Int)
(declare-fun x4310 () Bool)
(declare-fun x4113 () Bool)
(declare-fun x7270 () Int)
(declare-fun x455 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x1579 () Int)
(declare-fun x1381 () Int)
(declare-fun x1603 () Bool)
(declare-fun x8644 () Int)
(declare-fun x8160 () Bool)
(declare-fun x314 (Int) Int)
(declare-fun x7713 () Int)
(declare-fun x8157 () Int)
(declare-fun x6251 () Int)
(declare-fun x1350 () Bool)
(declare-fun x4498 () Bool)
(declare-fun x4191 (Int) Int)
(declare-fun x1023 () Int)
(declare-fun x2090 () Int)
(declare-fun x6090 () Int)
(declare-fun x5056 () Bool)
(declare-fun x3374 () Bool)
(declare-fun x8743 () Int)
(declare-fun x646 () Int)
(declare-fun x1817 (Int) Int)
(declare-fun x918 () Int)
(declare-fun x7350 () Bool)
(declare-fun x4892 () Int)
(declare-fun x5772 () Int)
(declare-fun x8962 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x5064 () Int)
(declare-fun x2783 () Int)
(declare-fun x5112 () Int)
(declare-fun x808 () Int)
(declare-fun x7747 () Int)
(declare-fun x6865 () Bool)
(declare-fun x7016 () Bool)
(declare-fun x4314 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x1833 () Int)
(declare-fun x7349 () Int)
(declare-fun x1026 () Int)
(declare-fun x6956 () Bool)
(declare-fun x6000 () Int)
(declare-fun x835 () Int)
(declare-fun x334 (Int) Int)
(declare-fun x5837 () Int)
(declare-fun x8162 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x6269 () Bool)
(declare-fun x5129 () Int)
(declare-fun x5174 (Int) Int)
(declare-fun x6609 () Int)
(declare-fun x3928 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x6140 () Bool)
(declare-fun x604 () Int)
(declare-fun x6742 () Int)
(declare-fun x6429 () Int)
(declare-fun x6190 () Int)
(declare-fun x5482 () Bool)
(declare-fun x1341 () Int)
(declare-fun x2140 () Bool)
(declare-fun x3099 () Int)
(declare-fun x4726 () Bool)
(declare-fun x5015 () Int)
(declare-fun x6882 () Int)
(declare-fun x6977 () Bool)
(declare-fun x2723 () Bool)
(declare-fun x3592 () Bool)
(declare-fun x1963 () Int)
(declare-fun x7265 () Int)
(declare-fun x5145 () Int)
(declare-fun x4668 () Int)
(declare-fun x49 () Int)
(declare-fun x6847 () Bool)
(declare-fun x5534 () Int)
(declare-fun x5255 () Int)
(declare-fun x6053 () Int)
(declare-fun x6908 () Bool)
(declare-fun x6300 () Int)
(declare-fun x3694 () Int)
(declare-fun x7480 () Int)
(declare-fun x8109 () Int)
(declare-fun x2333 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x6308 () Bool)
(declare-fun x7994 () Bool)
(declare-fun x1614 () Int)
(declare-fun x5232 () Int)
(declare-fun x1120 () Int)
(declare-fun x5392 () Int)
(declare-fun x7077 () Bool)
(declare-fun x650 () Int)
(declare-fun x5344 () Bool)
(declare-fun x7372 () Bool)
(declare-fun x6501 () Int)
(declare-fun x8260 () Bool)
(declare-fun x1789 (Int) Int)
(declare-fun x2858 () Int)
(declare-fun x7565 () Int)
(declare-fun x7295 () Int)
(declare-fun x7558 () Bool)
(declare-fun x70 () Int)
(declare-fun x4157 () Int)
(declare-fun x1394 () Int)
(declare-fun x2263 () Int)
(declare-fun x7355 () Int)
(declare-fun x184 (Int) Int)
(declare-fun x2914 () Bool)
(declare-fun x4037 () Bool)
(declare-fun x101 () Bool)
(declare-fun x2474 () Bool)
(declare-fun x999 () Int)
(declare-fun x824 () Bool)
(declare-fun x972 () Int)
(declare-fun x2131 () Bool)
(declare-fun x7116 () Bool)
(declare-fun x4346 () Int)
(declare-fun x6303 () Int)
(declare-fun x4105 () Bool)
(declare-fun x3100 () Int)
(declare-fun x8676 () Bool)
(declare-fun x8532 () Int)
(declare-fun x7425 () Bool)
(declare-fun x7820 () Bool)
(declare-fun x8886 () Int)
(declare-fun x7705 () Int)
(declare-fun x1780 () Bool)
(declare-fun x8368 () Int)
(declare-fun x2248 () Bool)
(declare-fun x8598 () Int)
(declare-fun x6740 () Int)
(declare-fun x4322 () Int)
(declare-fun x3101 () Int)
(declare-fun x7819 () Int)
(declare-fun x5289 () Int)
(declare-fun x2428 () Int)
(declare-fun x3835 (Int) Int)
(declare-fun x270 () Bool)
(declare-fun x8569 () Int)
(declare-fun x5758 () Int)
(declare-fun x396 () Bool)
(declare-fun x5914 () Int)
(declare-fun x7237 () Bool)
(declare-fun x7517 () Int)
(declare-fun x9000 (Int) Int)
(declare-fun x2787 () Int)
(declare-fun x4084 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x6348 () Int)
(declare-fun x7905 () Int)
(declare-fun x3333 () Int)
(declare-fun x7868 () Int)
(declare-fun x5141 () Int)
(declare-fun x2536 (Int) Int)
(declare-fun x1669 (Int) Int)
(declare-fun x5384 () Bool)
(declare-fun x115 () Bool)
(declare-fun x6951 () Bool)
(declare-fun x9009 () Int)
(declare-fun x449 (Int) Int)
(declare-fun x57 () Bool)
(declare-fun x910 () Int)
(declare-fun x8477 () Bool)
(declare-fun x2414 () Bool)
(declare-fun x170 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x4580 () Int)
(declare-fun x3743 () Int)
(declare-fun x3570 () Int)
(declare-fun x6108 () Bool)
(declare-fun x4443 () Bool)
(declare-fun x3874 () Bool)
(declare-fun x8228 () Int)
(declare-fun x611 () Int)
(declare-fun x4022 () Int)
(declare-fun x8640 () Int)
(declare-fun x2909 () Bool)
(declare-fun x3768 () Bool)
(declare-fun x5197 () Int)
(declare-fun x8007 () Bool)
(declare-fun x2094 () Int)
(declare-fun x8914 () Bool)
(declare-fun x2759 () Int)
(declare-fun x3784 () Int)
(declare-fun x8814 () Int)
(declare-fun x7846 () Bool)
(declare-fun x5432 () Int)
(declare-fun x2716 () Int)
(declare-fun x6304 () Int)
(declare-fun x8143 () Int)
(declare-fun x6360 () Bool)
(declare-fun x3043 () Bool)
(declare-fun x1970 () Int)
(declare-fun x3419 () Int)
(declare-fun x2968 () Int)
(declare-fun x8340 () Int)
(declare-fun x7031 () Int)
(declare-fun x3404 () Bool)
(declare-fun x8349 () Int)
(declare-fun x5219 () Int)
(declare-fun x1763 () Int)
(declare-fun x4529 () Int)
(declare-fun x5844 () Bool)
(declare-fun x7187 () Bool)
(declare-fun x3584 () Int)
(declare-fun x2116 () Int)
(declare-fun x4350 () Int)
(declare-fun x6839 () Bool)
(declare-fun x5192 () Int)
(declare-fun x2537 () Bool)
(declare-fun x4712 () Int)
(declare-fun x3232 () Int)
(declare-fun x5209 () Int)
(declare-fun x7394 () Int)
(declare-fun x2220 () Int)
(declare-fun x5409 () Bool)
(declare-fun x3170 () Bool)
(declare-fun x5959 () Int)
(declare-fun x9129 () Int)
(declare-fun x2449 (Int) Int)
(declare-fun x8212 () Int)
(declare-fun x2958 () Int)
(declare-fun x6777 () Int)
(declare-fun x3780 () Int)
(declare-fun x5170 () Bool)
(declare-fun x8854 (Int) Int)
(declare-fun x6228 () Int)
(declare-fun x6736 () Int)
(declare-fun x9065 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x3972 () Int)
(declare-fun x6832 () Int)
(declare-fun x234 () Int)
(declare-fun x2032 () Int)
(declare-fun x3776 () Bool)
(declare-fun x5720 () Bool)
(declare-fun x4958 () Int)
(declare-fun x8058 () Bool)
(declare-fun x66 () Bool)
(declare-fun x5866 () Int)
(declare-fun x278 () Bool)
(declare-fun x1916 () Int)
(declare-fun x2732 () Bool)
(declare-fun x2081 () Int)
(declare-fun x4302 () Int)
(declare-fun x4838 () Int)
(declare-fun x3094 () Int)
(declare-fun x5825 () Int)
(declare-fun x2061 () Int)
(declare-fun x639 () Bool)
(declare-fun x5049 () Int)
(declare-fun x4333 () Int)
(declare-fun x6969 () Int)
(declare-fun x6852 () Bool)
(declare-fun x3605 () Int)
(declare-fun x2437 () Int)
(declare-fun x7937 () Int)
(declare-fun x2182 () Int)
(declare-fun x4328 () Int)
(declare-fun x6032 () Int)
(declare-fun x959 () Int)
(declare-fun x415 () Int)
(declare-fun x5905 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x47 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x6581 () Bool)
(declare-fun x7736 () Int)
(declare-fun x3495 () Bool)
(declare-fun x6080 () Int)
(declare-fun x3503 () Bool)
(declare-fun x4165 (Int) Int)
(declare-fun x3829 () Int)
(declare-fun x4875 () Bool)
(declare-fun x4705 () Int)
(declare-fun x3787 () Int)
(declare-fun x3062 (Int) Int)
(declare-fun x866 () Int)
(declare-fun x7216 () Bool)
(declare-fun x6889 () Bool)
(declare-fun x3962 () Int)
(declare-fun x5867 () Int)
(declare-fun x7709 () Bool)
(declare-fun x973 () Bool)
(declare-fun x7135 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x5878 () Int)
(declare-fun x7810 () Int)
(declare-fun x4699 (Int) Int)
(declare-fun x303 () Int)
(declare-fun x4192 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x3903 () Int)
(declare-fun x8258 () Int)
(declare-fun x1892 () Bool)
(declare-fun x7891 () Int)
(declare-fun x508 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x241 () Bool)
(declare-fun x5803 (Int) Int)
(declare-fun x1816 () Bool)
(declare-fun x2835 () Bool)
(declare-fun x2885 () Bool)
(declare-fun x5118 () Int)
(declare-fun x8474 () Int)
(declare-fun x8610 () Bool)
(declare-fun x4153 () Int)
(declare-fun x4473 () Bool)
(declare-fun x3397 () Bool)
(declare-fun x8647 () Int)
(declare-fun x8837 () Int)
(declare-fun x540 () Bool)
(declare-fun x6817 () Bool)
(declare-fun x4345 () Int)
(declare-fun x2166 (Int) Int)
(declare-fun x7005 () Bool)
(declare-fun x1771 () Int)
(declare-fun x7085 () Int)
(declare-fun x8981 () Bool)
(declare-fun x8009 () Bool)
(declare-fun x1007 () Int)
(declare-fun x2318 () Bool)
(declare-fun x5016 () Bool)
(declare-fun x4235 () Bool)
(declare-fun x6373 () Int)
(declare-fun x2133 () Int)
(declare-fun x6678 () Int)
(declare-fun x6907 () Bool)
(declare-fun x363 () Int)
(declare-fun x7315 () Int)
(declare-fun x4152 () Int)
(declare-fun x3772 () Int)
(declare-fun x8593 () Bool)
(declare-fun x5685 () Int)
(declare-fun x93 () Bool)
(declare-fun x7665 () Int)
(declare-fun x3761 () Int)
(declare-fun x8834 () Int)
(declare-fun x4945 () Int)
(declare-fun x1191 () Bool)
(declare-fun x3282 () Int)
(declare-fun x1663 () Int)
(declare-fun x8799 () Bool)
(declare-fun x795 () Int)
(declare-fun x3445 () Bool)
(declare-fun x2887 () Int)
(declare-fun x2326 () Bool)
(declare-fun x4448 () Bool)
(declare-fun x5815 (Int) Int)
(declare-fun x6370 () Bool)
(declare-fun x8296 () Int)
(declare-fun x2025 () Bool)
(declare-fun x4182 () Bool)
(declare-fun x4463 () Bool)
(declare-fun x7985 () Int)
(declare-fun x9117 () Int)
(declare-fun x6039 () Int)
(declare-fun x2419 (Int) Int)
(declare-fun x7339 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x1434 () Int)
(declare-fun x13 (Int) Int)
(declare-fun x4791 () Bool)
(declare-fun x5835 () Int)
(declare-fun x7929 () Int)
(declare-fun x2377 () Bool)
(declare-fun x5400 (Int Int) Int)
(declare-fun x7287 () Int)
(declare-fun x6911 () Int)
(declare-fun x2297 () Bool)
(declare-fun x8281 () Int)
(declare-fun x763 () Bool)
(declare-fun x6715 () Int)
(declare-fun x969 () Int)
(declare-fun x2389 () Int)
(declare-fun x2442 () Int)
(declare-fun x4474 () Int)
(declare-fun x2011 () Int)
(declare-fun x3430 () Bool)
(declare-fun x5789 () Bool)
(declare-fun x1021 () Int)
(declare-fun x2952 () Bool)
(declare-fun x5812 () Bool)
(declare-fun x5738 () Bool)
(declare-fun x4830 () Bool)
(declare-fun x8949 () Bool)
(declare-fun x3725 () Int)
(declare-fun x4975 () Bool)
(declare-fun x6658 () Bool)
(declare-fun x5341 () Int)
(declare-fun x7067 () Int)
(declare-fun x420 () Bool)
(declare-fun x8043 () Int)
(declare-fun x8434 () Bool)
(declare-fun x6580 () Bool)
(declare-fun x6134 () Bool)
(declare-fun x2492 (Int) Int)
(declare-fun x2954 () Bool)
(declare-fun x2530 () Int)
(declare-fun x2728 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x5624 () Bool)
(declare-fun x7153 (Int) Int)
(declare-fun x8659 () Int)
(declare-fun x4635 () Int)
(declare-fun x1237 () Int)
(declare-fun x7368 () Int)
(declare-fun x5084 () Int)
(declare-fun x7174 () Int)
(declare-fun x2432 () Int)
(declare-fun x4030 () Int)
(declare-fun x4389 () Bool)
(declare-fun x817 (Int) Int)
(declare-fun x1804 () Int)
(declare-fun x6430 () Bool)
(declare-fun x522 () Int)
(declare-fun x6955 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x5737 () Bool)
(declare-fun x3284 () Int)
(declare-fun x1314 () Bool)
(declare-fun x3444 () Bool)
(declare-fun x5773 () Bool)
(declare-fun x1008 () Int)
(declare-fun x110 () Bool)
(declare-fun x5672 () Int)
(declare-fun x5785 () Bool)
(declare-fun x2348 () Int)
(declare-fun x6309 () Bool)
(declare-fun x5992 () Int)
(declare-fun x2041 () Int)
(declare-fun x8506 () Int)
(declare-fun x2475 () Bool)
(declare-fun x5177 () Int)
(declare-fun x8176 () Int)
(declare-fun x2446 () Int)
(declare-fun x5065 () Int)
(declare-fun x4285 () Int)
(declare-fun x9127 () Int)
(declare-fun x1250 () Int)
(declare-fun x6307 () Bool)
(declare-fun x5379 () Int)
(declare-fun x4016 () Int)
(declare-fun x3911 () Int)
(declare-fun x576 () Int)
(declare-fun x5198 () Bool)
(declare-fun x2827 () Int)
(declare-fun x102 () Int)
(declare-fun x4549 () Int)
(declare-fun x3921 () Int)
(declare-fun x6910 () Int)
(declare-fun x4283 () Bool)
(declare-fun x6449 () Int)
(declare-fun x5610 () Int)
(declare-fun x7614 () Int)
(declare-fun x2859 () Bool)
(declare-fun x4511 () Int)
(declare-fun x6586 (Int) Int)
(declare-fun x7097 () Int)
(declare-fun x1456 () Int)
(declare-fun x6760 () Bool)
(declare-fun x3718 () Bool)
(declare-fun x670 () Int)
(declare-fun x392 () Bool)
(declare-fun x7694 () Bool)
(declare-fun x729 (Int) Int)
(declare-fun x4622 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x2411 () Int)
(declare-fun x2062 () Int)
(declare-fun x3871 () Int)
(declare-fun x8791 () Int)
(declare-fun x4693 () Int)
(declare-fun x4540 () Int)
(declare-fun x3970 () Bool)
(declare-fun x1049 () Int)
(declare-fun x5652 () Int)
(declare-fun x8793 () Int)
(declare-fun x7046 () Bool)
(declare-fun x2908 () Bool)
(declare-fun x8559 () Int)
(declare-fun x6731 () Bool)
(declare-fun x7880 () Int)
(declare-fun x3321 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x2219 (Int) Int)
(declare-fun x7919 () Bool)
(declare-fun x6851 () Int)
(declare-fun x2669 () Int)
(declare-fun x6273 () Int)
(declare-fun x2017 () Int)
(declare-fun x6958 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x1576 () Int)
(declare-fun x6121 () Int)
(declare-fun x377 () Int)
(declare-fun x2605 () Int)
(declare-fun x7603 () Bool)
(declare-fun x242 () Int)
(declare-fun x5024 () Bool)
(declare-fun x116 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x3947 () Int)
(declare-fun x2241 () Int)
(declare-fun x864 () Int)
(declare-fun x250 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x2508 () Int)
(declare-fun x4089 () Int)
(declare-fun x7982 () Int)
(declare-fun x4649 () Bool)
(declare-fun x5658 () Int)
(declare-fun x412 () Int)
(declare-fun x5455 () Int)
(declare-fun x4865 () Int)
(declare-fun x4428 () Bool)
(declare-fun x8653 () Int)
(declare-fun x3559 () Bool)
(declare-fun x7299 () Bool)
(declare-fun x6966 () Bool)
(declare-fun x544 () Int)
(declare-fun x6928 () Int)
(declare-fun x651 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x5019 () Int)
(declare-fun x4364 () Int)
(declare-fun x5328 () Bool)
(declare-fun x771 (Int) Int)
(declare-fun x7577 () Bool)
(declare-fun x7562 () Bool)
(declare-fun x7123 () Bool)
(declare-fun x4932 () Bool)
(declare-fun x3406 () Bool)
(declare-fun x8063 () Bool)
(declare-fun x963 () Bool)
(declare-fun x9058 () Bool)
(declare-fun x6116 () Int)
(declare-fun x1884 () Int)
(declare-fun x5337 () Bool)
(declare-fun x7496 () Bool)
(declare-fun x731 () Bool)
(declare-fun x6445 () Int)
(declare-fun x2626 () Bool)
(declare-fun x5957 (Int) Int)
(declare-fun x6778 () Int)
(declare-fun x7050 () Bool)
(declare-fun x164 () Int)
(declare-fun x6589 () Bool)
(declare-fun x4590 () Int)
(declare-fun x5783 () Bool)
(declare-fun x2001 () Int)
(declare-fun x919 () Bool)
(declare-fun x830 () Int)
(declare-fun x5390 () Int)
(declare-fun x7684 () Bool)
(declare-fun x5838 () Int)
(declare-fun x1102 () Bool)
(declare-fun x6073 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x7196 () Bool)
(declare-fun x144 () Bool)
(declare-fun x4855 () Int)
(declare-fun x148 () Int)
(declare-fun x2137 () Int)
(declare-fun x2070 () Int)
(declare-fun x3895 () Int)
(declare-fun x5869 () Bool)
(declare-fun x2357 () Int)
(declare-fun x6051 () Bool)
(declare-fun x6596 () Int)
(declare-fun x6938 () Int)
(declare-fun x5608 () Int)
(declare-fun x2385 () Int)
(declare-fun x720 () Int)
(declare-fun x7382 () Int)
(declare-fun x714 () Int)
(declare-fun x1860 () Int)
(declare-fun x7014 () Int)
(declare-fun x6196 () Int)
(declare-fun x8403 () Int)
(declare-fun x6990 () Int)
(declare-fun x6539 () Bool)
(declare-fun x5108 () Int)
(declare-fun x5968 (Int) Int)
(declare-fun x5778 () Int)
(declare-fun x1556 () Int)
(declare-fun x7861 () Int)
(declare-fun x8694 () Int)
(declare-fun x2613 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x828 () Bool)
(declare-fun x7816 () Bool)
(declare-fun x5929 () Int)
(declare-fun x4715 () Int)
(declare-fun x1124 () Int)
(declare-fun x614 () Bool)
(declare-fun x5963 (Int) Int)
(declare-fun x6765 () Int)
(declare-fun x3856 () Bool)
(declare-fun x6771 () Bool)
(declare-fun x4877 () Bool)
(declare-fun x5055 () Int)
(declare-fun x3707 () Bool)
(declare-fun x8076 () Bool)
(declare-fun x5463 () Int)
(declare-fun x4193 () Bool)
(declare-fun x2987 () Int)
(declare-fun x618 () Int)
(declare-fun x68 () Int)
(declare-fun x3245 () Int)
(declare-fun x2936 () Int)
(declare-fun x7790 () Int)
(declare-fun x5342 () Int)
(declare-fun x4184 () Bool)
(declare-fun x1849 () Int)
(declare-fun x6199 () Int)
(declare-fun x1733 () Int)
(declare-fun x1866 () Bool)
(declare-fun x6621 () Int)
(declare-fun x7698 () Bool)
(declare-fun x3030 () Int)
(declare-fun x629 () Int)
(declare-fun x2512 () Int)
(declare-fun x6937 () Bool)
(declare-fun x8867 (Int) Int)
(declare-fun x4506 () Bool)
(declare-fun x811 () Int)
(declare-fun x1073 () Int)
(declare-fun x4763 () Int)
(declare-fun x7027 () Int)
(declare-fun x3878 () Int)
(declare-fun x9121 (Int) Int)
(declare-fun x1094 () Int)
(declare-fun x4111 () Int)
(declare-fun x3023 () Int)
(declare-fun x4719 () Int)
(declare-fun x7870 (Int) Int)
(declare-fun x4757 () Int)
(declare-fun x5770 () Int)
(declare-fun x751 () Int)
(declare-fun x8522 () Bool)
(declare-fun x8968 () Bool)
(declare-fun x7406 () Int)
(declare-fun x1242 () Bool)
(declare-fun x7378 () Int)
(declare-fun x231 () Bool)
(declare-fun x1098 () Int)
(declare-fun x2205 () Int)
(declare-fun x6644 () Int)
(declare-fun x5525 () Int)
(declare-fun x8263 () Int)
(declare-fun x123 () Bool)
(declare-fun x925 () Bool)
(declare-fun x3308 () Bool)
(declare-fun x4988 (Int) Int)
(declare-fun x4954 () Int)
(declare-fun x789 () Bool)
(declare-fun x5862 () Bool)
(declare-fun x5236 () Int)
(declare-fun x6 () Int)
(declare-fun x4968 () Int)
(declare-fun x5312 () Bool)
(declare-fun x151 () Int)
(declare-fun x5798 () Int)
(declare-fun x3756 () Int)
(declare-fun x5817 () Bool)
(declare-fun x4799 () Int)
(declare-fun x3200 () Bool)
(declare-fun x8702 () Bool)
(declare-fun x901 () Bool)
(declare-fun x4215 () Int)
(declare-fun x7248 () Int)
(declare-fun x74 () Bool)
(declare-fun x5948 () Int)
(declare-fun x8432 () Int)
(declare-fun x32 () Int)
(declare-fun x8622 () Bool)
(declare-fun x6068 () Int)
(declare-fun x4973 () Bool)
(declare-fun x1846 () Int)
(declare-fun x3313 () Int)
(declare-fun x8033 () Bool)
(declare-fun x774 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x8364 () Int)
(declare-fun x293 () Int)
(declare-fun x344 () Int)
(declare-fun x7812 () Int)
(declare-fun x3286 () Int)
(declare-fun x6296 () Bool)
(declare-fun x1246 (Int) Int)
(declare-fun x6188 () Bool)
(declare-fun x8925 () Int)
(declare-fun x1230 () Int)
(declare-fun x6290 () Int)
(declare-fun x8961 () Int)
(declare-fun x1748 () Int)
(declare-fun x2650 () Int)
(declare-fun x3491 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x4316 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x8026 () Int)
(declare-fun x418 () Int)
(declare-fun x2683 (Int) Int)
(declare-fun x1035 () Int)
(declare-fun x2096 () Bool)
(declare-fun x4863 () Int)
(declare-fun x2486 () Int)
(declare-fun x3064 () Bool)
(declare-fun x3720 () Bool)
(declare-fun x3147 () Int)
(declare-fun x8438 () Bool)
(declare-fun x5648 () Bool)
(declare-fun x4415 () Int)
(declare-fun x6467 () Bool)
(declare-fun x450 () Int)
(declare-fun x1582 () Int)
(declare-fun x8490 () Int)
(declare-fun x4099 () Bool)
(declare-fun x1610 () Int)
(declare-fun x1095 () Bool)
(declare-fun x8278 () Int)
(declare-fun x2455 () Int)
(declare-fun x6983 () Bool)
(declare-fun x6805 () Int)
(declare-fun x3868 () Int)
(declare-fun x3986 () Int)
(declare-fun x7218 () Bool)
(declare-fun x227 () Bool)
(declare-fun x5986 (Int) Int)
(declare-fun x7981 () Bool)
(declare-fun x2416 () Int)
(declare-fun x8604 () Bool)
(declare-fun x7191 () Int)
(declare-fun x2046 () Int)
(declare-fun x7418 () Int)
(declare-fun x3455 () Int)
(declare-fun x4096 () Bool)
(declare-fun x6815 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x7512 () Bool)
(declare-fun x4913 () Int)
(declare-fun x2839 () Int)
(declare-fun x6013 () Int)
(declare-fun x6391 () Int)
(declare-fun x8785 () Int)
(declare-fun x7343 () Bool)
(declare-fun x4582 () Bool)
(declare-fun x6511 () Int)
(declare-fun x7697 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x7144 () Int)
(declare-fun x1824 () Int)
(declare-fun x4545 () Int)
(declare-fun x4950 () Bool)
(declare-fun x691 () Int)
(declare-fun x5484 () Int)
(declare-fun x3549 () Int)
(declare-fun x7272 () Bool)
(declare-fun x4581 () Bool)
(declare-fun x7068 () Int)
(declare-fun x7467 () Bool)
(declare-fun x6212 () Int)
(declare-fun x67 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x4815 () Int)
(declare-fun x5193 () Int)
(declare-fun x529 () Int)
(declare-fun x8486 () Int)
(declare-fun x1304 () Int)
(declare-fun x2037 () Int)
(declare-fun x7605 () Int)
(declare-fun x3029 () Int)
(declare-fun x4596 () Bool)
(declare-fun x4698 () Bool)
(declare-fun x3433 () Int)
(declare-fun x1661 () Int)
(declare-fun x3790 () Bool)
(declare-fun x5586 () Bool)
(declare-fun x2187 () Int)
(declare-fun x1760 () Int)
(declare-fun x8767 () Bool)
(declare-fun x1044 () Int)
(declare-fun x2190 (Int) Int)
(declare-fun x84 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x7718 () Int)
(declare-fun x7852 () Int)
(declare-fun x4633 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x5836 () Bool)
(declare-fun x7402 () Int)
(declare-fun x3995 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x3071 () Int)
(declare-fun x2103 () Bool)
(declare-fun x5695 () Int)
(declare-fun x8946 () Int)
(declare-fun x7854 () Bool)
(declare-fun x8460 (Int) Int)
(declare-fun x1040 () Bool)
(declare-fun x502 () Int)
(declare-fun x9014 () Int)
(declare-fun x7531 () Bool)
(declare-fun x1353 () Int)
(declare-fun x4661 () Int)
(declare-fun x4357 () Bool)
(declare-fun x5336 (Int) Int)
(declare-fun x5599 () Bool)
(declare-fun x2175 () Int)
(declare-fun x3422 () Bool)
(declare-fun x4742 () Bool)
(declare-fun x8056 () Bool)
(declare-fun x3599 () Int)
(declare-fun x256 () Int)
(declare-fun x7222 () Bool)
(declare-fun x6295 () Bool)
(declare-fun x2083 () Int)
(declare-fun x557 () Bool)
(declare-fun x8975 () Int)
(declare-fun x3417 () Int)
(declare-fun x8396 () Int)
(declare-fun x5696 () Bool)
(declare-fun x4242 () Bool)
(declare-fun x7109 () Bool)
(declare-fun x5705 () Int)
(declare-fun x3368 () Int)
(declare-fun x2273 () Int)
(declare-fun x7234 () Int)
(declare-fun x2525 () Bool)
(declare-fun x5490 () Bool)
(declare-fun x7738 () Int)
(declare-fun x4696 () Bool)
(declare-fun x3421 () Int)
(declare-fun x5687 () Int)
(declare-fun x9012 () Bool)
(declare-fun x3451 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x7722 () Bool)
(declare-fun x8960 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x7321 () Bool)
(declare-fun x8345 () Int)
(declare-fun x6469 () Bool)
(declare-fun x5781 () Int)
(declare-fun x3767 () Int)
(declare-fun x6513 () Bool)
(declare-fun x2375 () Int)
(declare-fun x685 () Int)
(declare-fun x7821 (Int) Int)
(declare-fun x8040 () Bool)
(declare-fun x9086 () Bool)
(declare-fun x104 () Bool)
(declare-fun x5185 () Bool)
(declare-fun x7420 (Int) Int)
(declare-fun x156 () Bool)
(declare-fun x9043 () Bool)
(declare-fun x405 () Int)
(declare-fun x182 () Int)
(declare-fun x3673 () Bool)
(declare-fun x8883 () Int)
(declare-fun x4402 () Int)
(declare-fun x8361 () Int)
(declare-fun x7194 () Int)
(declare-fun x3504 () Int)
(declare-fun x4879 () Int)
(declare-fun x1011 () Int)
(declare-fun x6866 () Int)
(declare-fun x1920 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x4941 () Int)
(declare-fun x2516 () Bool)
(declare-fun x6282 () Int)
(declare-fun x3706 () Int)
(declare-fun x8068 (Int) Int)
(declare-fun x9035 () Int)
(declare-fun x6302 () Int)
(declare-fun x8172 () Int)
(declare-fun x6577 (Int) Int)
(declare-fun x953 (Int) Int)
(declare-fun x3989 () Int)
(declare-fun x7650 () Int)
(declare-fun x4170 () Int)
(declare-fun x4741 () Bool)
(declare-fun x4621 () Bool)
(declare-fun x5373 () Int)
(declare-fun x4920 () Int)
(declare-fun x2890 () Int)
(declare-fun x3674 () Int)
(declare-fun x85 () Int)
(declare-fun x4689 () Int)
(declare-fun x9003 () Int)
(declare-fun x7082 () Bool)
(declare-fun x6601 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x4730 () Bool)
(declare-fun x7544 () Bool)
(declare-fun x2687 () Int)
(declare-fun x3597 () Int)
(declare-fun x2913 () Bool)
(declare-fun x4230 () Int)
(declare-fun x8707 () Bool)
(declare-fun x5619 () Bool)
(declare-fun x6320 () Bool)
(declare-fun x6519 () Int)
(declare-fun x4258 () Bool)
(declare-fun x5916 () Bool)
(declare-fun x1443 (Int) Int)
(declare-fun x8050 () Bool)
(declare-fun x7128 () Int)
(declare-fun x2541 () Int)
(declare-fun x1803 () Int)
(declare-fun x4765 () Int)
(declare-fun x3358 () Int)
(declare-fun x6875 (Int) Int)
(declare-fun x4352 () Bool)
(declare-fun x2167 () Int)
(declare-fun x4141 () Int)
(declare-fun x2443 () Int)
(declare-fun x7244 () Bool)
(declare-fun x4800 () Int)
(declare-fun x3018 () Bool)
(declare-fun x58 () Bool)
(declare-fun x6902 () Bool)
(declare-fun x126 () Bool)
(declare-fun x6220 () Bool)
(declare-fun x5893 () Int)
(declare-fun x3086 (Int) Int)
(declare-fun x4208 () Bool)
(declare-fun x6250 () Int)
(declare-fun x4254 () Int)
(declare-fun x3764 () Int)
(declare-fun x4441 () Bool)
(declare-fun x563 () Bool)
(declare-fun x8566 () Bool)
(declare-fun x7175 () Int)
(declare-fun x6499 () Bool)
(declare-fun x8192 () Int)
(declare-fun x991 () Bool)
(declare-fun x8675 () Int)
(declare-fun x8835 () Int)
(declare-fun x4927 () Int)
(declare-fun x5239 () Bool)
(declare-fun x7311 () Bool)
(declare-fun x3652 () Int)
(declare-fun x3371 () Bool)
(declare-fun x4655 () Int)
(declare-fun x2945 () Int)
(declare-fun x3163 () Bool)
(declare-fun x6686 () Int)
(declare-fun x4828 () Bool)
(declare-fun x8784 () Int)
(declare-fun x6081 () Bool)
(declare-fun x2830 () Int)
(declare-fun x2671 () Int)
(declare-fun x5955 () Bool)
(declare-fun x5127 () Int)
(declare-fun x4025 () Int)
(declare-fun x2216 () Int)
(declare-fun x4798 () Int)
(declare-fun x6404 () Bool)
(declare-fun x8314 () Int)
(declare-fun x1729 () Int)
(declare-fun x7345 (Int) Int)
(declare-fun x2768 (Int) Int)
(declare-fun x8401 () Bool)
(declare-fun x534 () Bool)
(declare-fun x780 () Bool)
(declare-fun x8706 () Int)
(declare-fun x2229 () Int)
(declare-fun x6702 () Bool)
(declare-fun x8798 () Int)
(declare-fun x8761 () Bool)
(declare-fun x6029 () Int)
(declare-fun x8763 () Bool)
(declare-fun x7398 () Bool)
(declare-fun x1517 () Int)
(declare-fun x468 (Int) Int)
(declare-fun x8742 () Int)
(declare-fun x1359 () Bool)
(declare-fun x4162 () Int)
(declare-fun x3976 () Bool)
(declare-fun x4894 () Int)
(declare-fun x2160 () Bool)
(declare-fun x5521 () Int)
(declare-fun x3672 () Bool)
(declare-fun x8105 () Int)
(declare-fun x2264 () Bool)
(declare-fun x7281 () Int)
(declare-fun x7838 () Int)
(declare-fun x1143 () Bool)
(declare-fun x5724 () Bool)
(declare-fun x6363 () Bool)
(declare-fun x6447 () Bool)
(declare-fun x2068 () Int)
(declare-fun x4928 () Bool)
(declare-fun x5434 () Bool)
(declare-fun x2294 () Int)
(declare-fun x6919 () Int)
(declare-fun x1103 () Int)
(declare-fun x4359 (Int) Int)
(declare-fun x5516 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x8874 () Int)
(declare-fun x7330 () Int)
(declare-fun x1770 () Int)
(declare-fun x2888 () Int)
(declare-fun x6967 () Int)
(declare-fun x1509 () Int)
(declare-fun x5896 (Int) Int)
(declare-fun x4697 () Int)
(declare-fun x3863 () Int)
(declare-fun x5444 () Int)
(declare-fun x4436 () Bool)
(declare-fun x267 () Int)
(declare-fun x4526 () Bool)
(declare-fun x8392 () Int)
(declare-fun x5662 () Int)
(declare-fun x752 () Int)
(declare-fun x4222 () Bool)
(declare-fun x3535 () Bool)
(declare-fun x765 () Bool)
(declare-fun x582 () Bool)
(declare-fun x5543 () Int)
(declare-fun x6871 () Int)
(declare-fun x4353 () Bool)
(declare-fun x6281 () Int)
(declare-fun x1696 () Bool)
(declare-fun x4759 (Int) Int)
(declare-fun x6257 () Int)
(declare-fun x5420 () Int)
(declare-fun x8969 () Int)
(declare-fun x2089 () Int)
(declare-fun x5810 () Bool)
(declare-fun x1719 () Int)
(declare-fun x1930 () Bool)
(declare-fun x4848 (Int) Int)
(declare-fun x7152 () Int)
(declare-fun x1645 () Int)
(declare-fun x7069 () Bool)
(declare-fun x6986 () Bool)
(declare-fun x7792 () Bool)
(declare-fun x4133 (Int) Int)
(declare-fun x8571 (Int) Int)
(declare-fun x8617 () Int)
(declare-fun x506 () Int)
(declare-fun x1546 () Int)
(declare-fun x5250 () Bool)
(declare-fun x3996 () Int)
(declare-fun x1225 () Int)
(declare-fun x6558 () Int)
(declare-fun x97 () Int)
(declare-fun x2087 () Int)
(declare-fun x3188 (Int) Int)
(declare-fun x5268 () Int)
(declare-fun x3724 () Int)
(declare-fun x4337 () Int)
(declare-fun x4793 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x5157 () Bool)
(declare-fun x5883 () Int)
(declare-fun x1479 () Bool)
(declare-fun x8899 () Bool)
(declare-fun x5295 () Int)
(declare-fun x2848 () Bool)
(declare-fun x6151 () Int)
(declare-fun x7338 () Int)
(declare-fun x7102 () Bool)
(declare-fun x138 () Int)
(declare-fun x3259 () Int)
(declare-fun x7936 () Int)
(declare-fun x6353 () Bool)
(declare-fun x4420 () Bool)
(declare-fun x945 () Int)
(declare-fun x7872 () Bool)
(declare-fun x1672 () Int)
(declare-fun x3324 () Int)
(declare-fun x6072 () Int)
(declare-fun x1768 () Int)
(declare-fun x1305 () Bool)
(declare-fun x5686 () Int)
(declare-fun x8508 () Int)
(declare-fun x7882 () Bool)
(declare-fun x3732 () Int)
(declare-fun x727 () Int)
(declare-fun x7996 () Int)
(declare-fun x153 () Bool)
(declare-fun x7600 () Int)
(declare-fun x4173 () Bool)
(declare-fun x376 () Int)
(declare-fun x5598 () Int)
(declare-fun x1893 () Int)
(declare-fun x5483 () Int)
(declare-fun x4677 () Int)
(declare-fun x6114 (Int) Int)
(declare-fun x1712 () Bool)
(declare-fun x7019 () Int)
(declare-fun x4588 (Int Int) Int)
(declare-fun x2426 () Int)
(declare-fun x7609 () Int)
(declare-fun x3546 () Int)
(declare-fun x1034 (Int) Int)
(declare-fun x7886 () Int)
(declare-fun x3631 () Int)
(declare-fun x1541 () Int)
(declare-fun x3319 () Bool)
(declare-fun x7055 () Int)
(declare-fun x1563 () Int)
(declare-fun x5728 () Int)
(declare-fun x8971 () Int)
(declare-fun x5937 () Int)
(declare-fun x1921 () Bool)
(declare-fun x2307 () Int)
(declare-fun x5469 () Int)
(declare-fun x2929 () Bool)
(declare-fun x5370 () Int)
(declare-fun x4200 () Int)
(declare-fun x7075 () Int)
(declare-fun x3468 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x353 () Int)
(declare-fun x995 () Int)
(declare-fun x4966 () Bool)
(declare-fun x3478 () Bool)
(declare-fun x5627 () Int)
(declare-fun x179 () Bool)
(declare-fun x5575 () Int)
(declare-fun x154 () Int)
(declare-fun x2632 () Int)
(declare-fun x8720 () Bool)
(declare-fun x6393 () Bool)
(declare-fun x214 () Bool)
(declare-fun x4584 () Int)
(declare-fun x320 () Int)
(declare-fun x5712 () Int)
(declare-fun x2020 () Int)
(declare-fun x4275 () Int)
(declare-fun x4531 () Bool)
(declare-fun x4151 () Int)
(declare-fun x6724 () Int)
(declare-fun x8332 () Bool)
(declare-fun x7189 () Bool)
(declare-fun x1999 () Int)
(declare-fun x1869 () Bool)
(declare-fun x5199 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x9006 () Int)
(declare-fun x4349 () Bool)
(declare-fun x7578 () Int)
(declare-fun x5748 () Int)
(declare-fun x5523 () Bool)
(declare-fun x160 () Bool)
(declare-fun x854 () Int)
(declare-fun x5286 (Int) Int)
(declare-fun x1074 () Int)
(declare-fun x7618 () Int)
(declare-fun x4257 () Bool)
(declare-fun x2607 () Int)
(declare-fun x1116 () Bool)
(declare-fun x7142 () Bool)
(declare-fun x8407 () Bool)
(declare-fun x8425 () Int)
(declare-fun x2970 () Int)
(declare-fun x6932 () Int)
(declare-fun x8956 () Int)
(declare-fun x2879 () Int)
(declare-fun x2384 () Int)
(declare-fun x1573 () Bool)
(declare-fun x5109 () Bool)
(declare-fun x6741 () Int)
(declare-fun x5211 () Int)
(declare-fun x2782 () Bool)
(declare-fun x7842 () Int)
(declare-fun x7645 () Int)
(declare-fun x5189 () Bool)
(declare-fun x8108 () Int)
(declare-fun x2708 () Int)
(declare-fun x6262 () Bool)
(declare-fun x6582 () Bool)
(declare-fun x5861 () Bool)
(declare-fun x5818 () Bool)
(declare-fun x905 () Int)
(declare-fun x6844 () Int)
(declare-fun x7717 () Bool)
(declare-fun x3097 () Int)
(declare-fun x888 () Bool)
(declare-fun x822 () Bool)
(declare-fun x1142 () Int)
(declare-fun x7983 () Int)
(declare-fun x7408 () Int)
(declare-fun x7801 () Int)
(declare-fun x8292 () Bool)
(declare-fun x1315 () Int)
(declare-fun x8806 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x4164 () Int)
(declare-fun x4297 () Bool)
(declare-fun x3630 () Int)
(declare-fun x4994 () Bool)
(declare-fun x3977 () Int)
(declare-fun x192 (Int) Int)
(declare-fun x1762 () Bool)
(declare-fun x7456 () Int)
(declare-fun x8666 () Int)
(declare-fun x605 () Int)
(declare-fun x3948 () Bool)
(declare-fun x3615 () Bool)
(declare-fun x8711 () Int)
(declare-fun x5231 () Bool)
(declare-fun x3949 () Int)
(declare-fun x4020 () Int)
(declare-fun x6375 (Int) Int)
(declare-fun x1147 () Bool)
(declare-fun x1513 () Int)
(declare-fun x4925 () Int)
(declare-fun x8991 () Bool)
(declare-fun x1226 () Int)
(declare-fun x6041 () Bool)
(declare-fun x2818 () Bool)
(declare-fun x8853 () Int)
(declare-fun x6585 () Bool)
(declare-fun x6620 () Int)
(declare-fun x4522 () Bool)
(declare-fun x6184 () Bool)
(declare-fun x2773 () Int)
(declare-fun x833 () Bool)
(declare-fun x4996 () Bool)
(declare-fun x6518 () Int)
(declare-fun x6339 () Int)
(declare-fun x2834 () Int)
(declare-fun x4547 () Int)
(declare-fun x8071 () Int)
(declare-fun x3919 () Int)
(declare-fun x5098 () Bool)
(declare-fun x7149 () Int)
(declare-fun x8234 () Int)
(declare-fun x6450 () Int)
(declare-fun x2440 () Bool)
(declare-fun x524 (Int) Int)
(declare-fun x6355 () Int)
(declare-fun x3224 () Int)
(declare-fun x2584 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x7913 () Bool)
(declare-fun x3693 () Int)
(declare-fun x4845 () Bool)
(declare-fun x8540 () Int)
(declare-fun x2466 () Bool)
(declare-fun x5094 () Int)
(declare-fun x922 () Int)
(declare-fun x205 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x7569 () Int)
(declare-fun x7258 () Int)
(declare-fun x1587 () Int)
(declare-fun x2186 () Int)
(declare-fun x9051 () Int)
(declare-fun x6164 () Int)
(declare-fun x4269 () Bool)
(declare-fun x2846 () Int)
(declare-fun x6110 () Int)
(declare-fun x8747 () Int)
(declare-fun x4471 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x1385 () Int)
(declare-fun x441 () Int)
(declare-fun x2550 () Bool)
(declare-fun x357 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x9123 () Int)
(declare-fun x4856 () Int)
(declare-fun x3730 () Int)
(declare-fun x889 () Int)
(declare-fun x1971 () Bool)
(declare-fun x263 () Int)
(declare-fun x5100 () Bool)
(declare-fun x2239 () Int)
(declare-fun x2643 () Int)
(declare-fun x4086 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x5304 () Int)
(declare-fun x2118 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x797 () Int)
(declare-fun x7597 () Bool)
(declare-fun x2805 () Bool)
(declare-fun x1868 () Int)
(declare-fun x7193 () Int)
(declare-fun x2581 () Bool)
(declare-fun x8766 () Int)
(declare-fun x5567 () Int)
(declare-fun x4188 () Int)
(declare-fun x6738 () Int)
(declare-fun x5214 () Int)
(declare-fun x3522 () Int)
(declare-fun x952 () Bool)
(declare-fun x2747 () Int)
(declare-fun x269 () Int)
(declare-fun x8174 () Int)
(declare-fun x4802 () Bool)
(declare-fun x593 () Bool)
(declare-fun x8188 () Int)
(declare-fun x7361 () Bool)
(declare-fun x3025 () Int)
(declare-fun x1585 () Int)
(declare-fun x4714 () Bool)
(declare-fun x4279 () Int)
(declare-fun x8042 (Int) Int)
(declare-fun x381 () Int)
(declare-fun x386 () Bool)
(declare-fun x9053 () Int)
(declare-fun x1790 () Int)
(declare-fun x2923 () Int)
(declare-fun x3298 () Int)
(declare-fun x5243 () Int)
(declare-fun x6540 () Bool)
(declare-fun x8555 () Bool)
(declare-fun x535 () Bool)
(declare-fun x1448 () Int)
(declare-fun x5796 () Int)
(declare-fun x5395 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x5146 () Int)
(declare-fun x6924 () Int)
(declare-fun x8521 () Int)
(declare-fun x5364 () Bool)
(declare-fun x5365 () Bool)
(declare-fun x1618 (Int) Int)
(declare-fun x5357 () Int)
(declare-fun x8693 () Bool)
(declare-fun x493 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x4528 () Int)
(declare-fun x9103 () Int)
(declare-fun x6785 () Int)
(declare-fun x6823 () Int)
(declare-fun x1322 () Bool)
(declare-fun x471 () Int)
(declare-fun x9029 () Bool)
(declare-fun x2794 () Int)
(declare-fun x2224 () Int)
(declare-fun x4841 () Int)
(declare-fun x2064 () Int)
(declare-fun x7359 () Int)
(declare-fun x5533 () Int)
(declare-fun x4542 () Int)
(declare-fun x328 () Int)
(declare-fun x5792 () Int)
(declare-fun x427 () Int)
(declare-fun x3765 () Int)
(declare-fun x183 () Bool)
(declare-fun x5257 () Int)
(declare-fun x6324 () Bool)
(declare-fun x6381 () Bool)
(declare-fun x1189 (Int) Int)
(declare-fun x3059 () Int)
(declare-fun x413 () Bool)
(declare-fun x8629 () Bool)
(declare-fun x3716 () Int)
(declare-fun x90 () Int)
(declare-fun x7895 () Int)
(declare-fun x5759 () Int)
(declare-fun x6734 (Int) Int)
(declare-fun x6826 () Int)
(declare-fun x2754 () Int)
(declare-fun x3197 () Int)
(declare-fun x5702 () Int)
(declare-fun x568 () Bool)
(declare-fun x660 () Int)
(declare-fun x2678 () Bool)
(declare-fun x6408 () Bool)
(declare-fun x8038 () Bool)
(declare-fun x2947 () Bool)
(declare-fun x4665 () Int)
(declare-fun x35 () Int)
(declare-fun x3866 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x113 () Int)
(declare-fun x722 () Int)
(declare-fun x5739 () Bool)
(declare-fun x806 () Bool)
(declare-fun x4324 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x8171 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x4146 () Int)
(declare-fun x7255 () Bool)
(declare-fun x132 () Int)
(declare-fun x1363 () Int)
(declare-fun x7808 () Bool)
(declare-fun x3156 () Int)
(declare-fun x5044 () Int)
(declare-fun x6154 () Int)
(declare-fun x8977 () Int)
(declare-fun x7264 () Bool)
(declare-fun x5880 () Int)
(declare-fun x1504 () Int)
(declare-fun x6233 () Int)
(declare-fun x4117 () Int)
(declare-fun x6010 () Bool)
(declare-fun x4736 () Int)
(declare-fun x2564 () Int)
(declare-fun x6181 () Bool)
(declare-fun x2882 () Int)
(declare-fun x8127 () Int)
(declare-fun x5693 () Bool)
(declare-fun x8866 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x7353 () Bool)
(declare-fun x4680 () Bool)
(declare-fun x7095 () Int)
(declare-fun x9067 () Int)
(declare-fun x723 () Int)
(declare-fun x1286 () Int)
(declare-fun x2390 () Int)
(declare-fun x2884 () Int)
(declare-fun x5371 () Int)
(declare-fun x6698 () Int)
(declare-fun x2826 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x2252 () Int)
(declare-fun x5565 () Bool)
(declare-fun x8870 () Bool)
(declare-fun x842 () Int)
(declare-fun x6365 () Bool)
(declare-fun x8627 () Bool)
(declare-fun x4267 (Int) Int)
(declare-fun x6712 () Int)
(declare-fun x962 () Bool)
(declare-fun x4509 () Int)
(declare-fun x7701 () Int)
(declare-fun x9015 () Int)
(declare-fun x7837 () Int)
(declare-fun x1070 () Int)
(declare-fun x4552 () Int)
(declare-fun x8987 () Int)
(declare-fun x7641 (Int) Int)
(declare-fun x6211 () Bool)
(declare-fun x3226 () Int)
(declare-fun x2529 () Bool)
(declare-fun x6152 () Int)
(declare-fun x72 () Bool)
(declare-fun x9075 () Int)
(declare-fun x5935 () Int)
(declare-fun x5316 () Int)
(declare-fun x1708 () Bool)
(declare-fun x4585 () Int)
(declare-fun x767 () Bool)
(declare-fun x6808 () Int)
(declare-fun x2132 () Bool)
(declare-fun x3122 () Int)
(declare-fun x8986 (Int) Int)
(declare-fun x5903 () Bool)
(declare-fun x2128 () Int)
(declare-fun x8786 () Bool)
(declare-fun x446 () Bool)
(declare-fun x6292 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x6979 (Int) Int)
(declare-fun x248 () Int)
(declare-fun x8440 () Int)
(declare-fun x6676 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x8715 () Bool)
(declare-fun x6727 () Int)
(declare-fun x696 () Bool)
(declare-fun x380 () Int)
(declare-fun x1270 (Int) Int)
(declare-fun x2379 () Int)
(declare-fun x4373 () Int)
(declare-fun x6491 () Int)
(declare-fun x3227 () Int)
(declare-fun x279 () Bool)
(declare-fun x8300 () Bool)
(declare-fun x398 () Int)
(declare-fun x9044 () Bool)
(declare-fun x5291 () Bool)
(declare-fun x5593 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1212 () Int)
(declare-fun x6829 () Int)
(declare-fun x6915 () Int)
(declare-fun x5178 () Int)
(declare-fun x2301 () Bool)
(declare-fun x3040 () Int)
(declare-fun x4485 () Bool)
(declare-fun x8733 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x7156 () Int)
(declare-fun x1313 (Int) Int)
(declare-fun x8917 () Int)
(declare-fun x7906 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x924 () Int)
(declare-fun x8385 () Int)
(declare-fun x474 () Int)
(declare-fun x2110 () Int)
(declare-fun x813 () Int)
(declare-fun x1355 () Int)
(declare-fun x5995 () Bool)
(declare-fun x6682 () Int)
(declare-fun x2822 () Int)
(declare-fun x3502 () Bool)
(declare-fun x219 () Bool)
(declare-fun x7925 () Bool)
(declare-fun x4460 () Bool)
(declare-fun x5613 (Int) Int)
(declare-fun x462 () Int)
(declare-fun x892 () Int)
(declare-fun x2772 () Int)
(declare-fun x8237 () Bool)
(declare-fun x9061 () Int)
(declare-fun x2364 (Int) Int)
(declare-fun x699 () Bool)
(declare-fun x7606 () Bool)
(declare-fun x1878 () Int)
(declare-fun x7550 () Bool)
(declare-fun x2472 (Int) Int)
(declare-fun x7633 () Int)
(declare-fun x9024 () Bool)
(declare-fun x2198 () Int)
(declare-fun x8639 () Int)
(declare-fun x724 () Bool)
(declare-fun x7351 () Int)
(declare-fun x2214 () Int)
(declare-fun x7410 () Int)
(declare-fun x1134 () Bool)
(declare-fun x5038 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x6536 () Int)
(declare-fun x8583 () Bool)
(declare-fun x9066 () Bool)
(declare-fun x2075 () Int)
(declare-fun x7434 () Bool)
(declare-fun x4307 () Int)
(declare-fun x3695 () Int)
(declare-fun x2197 () Int)
(declare-fun x8649 () Int)
(declare-fun x652 () Int)
(declare-fun x2363 () Bool)
(declare-fun x5595 () Bool)
(declare-fun x8745 () Int)
(declare-fun x1713 () Int)
(declare-fun x1988 () Int)
(declare-fun x4469 () Bool)
(declare-fun x2189 () Int)
(declare-fun x849 () Bool)
(declare-fun x8841 (Int) Int)
(declare-fun x6285 () Bool)
(declare-fun x3925 () Int)
(declare-fun x1117 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x4761 () Int)
(declare-fun x4383 () Bool)
(declare-fun x5443 () Int)
(declare-fun x6885 () Int)
(declare-fun x6338 () Int)
(declare-fun x2295 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x4001 () Int)
(declare-fun x3555 () Int)
(declare-fun x8547 () Int)
(declare-fun x5111 () Bool)
(declare-fun x3825 () Bool)
(declare-fun x8320 (Int) Int)
(declare-fun x538 () Int)
(declare-fun x98 () Bool)
(declare-fun x4899 (Int) Int)
(declare-fun x6235 () Bool)
(declare-fun x3667 () Bool)
(declare-fun x431 (Int) Int)
(declare-fun x8412 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x8409 () Int)
(declare-fun x177 () Int)
(declare-fun x8934 () Int)
(declare-fun x5966 () Int)
(declare-fun x2316 () Bool)
(declare-fun x6048 () Int)
(declare-fun x970 (Int) Int)
(declare-fun x6351 (Int) Int)
(declare-fun x2593 () Int)
(declare-fun x2121 () Int)
(declare-fun x4805 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x213 () Bool)
(declare-fun x313 () Int)
(declare-fun x9002 () Int)
(declare-fun x981 () Int)
(declare-fun x8012 () Int)
(declare-fun x6999 () Int)
(declare-fun x7376 () Bool)
(declare-fun x5087 () Int)
(declare-fun x2642 () Int)
(declare-fun x7963 () Int)
(declare-fun x6346 () Bool)
(declare-fun x1332 () Int)
(declare-fun x8181 (Int) Int)
(declare-fun x3617 () Int)
(declare-fun x8807 () Bool)
(declare-fun x1858 () Int)
(declare-fun x4452 () Int)
(declare-fun x5561 () Int)
(declare-fun x6030 (Int) Int)
(declare-fun x6075 (Int) Int)
(declare-fun x2823 () Bool)
(declare-fun x3201 () Bool)
(declare-fun x476 () Int)
(declare-fun x3228 () Int)
(declare-fun x4974 (Int) Int)
(declare-fun x8446 () Int)
(declare-fun x3139 () Int)
(declare-fun x7526 () Int)
(declare-fun x4487 () Bool)
(declare-fun x181 () Int)
(declare-fun x7907 () Bool)
(declare-fun x8545 () Int)
(declare-fun x716 () Bool)
(declare-fun x6148 () Bool)
(declare-fun x7267 () Int)
(declare-fun x292 () Bool)
(declare-fun x4166 () Int)
(declare-fun x3335 () Bool)
(declare-fun x1811 () Int)
(declare-fun x2789 () Int)
(declare-fun x6689 () Int)
(declare-fun x307 (Int) Int)
(declare-fun x8308 () Int)
(declare-fun x6219 () Int)
(declare-fun x2962 () Bool)
(declare-fun x8288 () Bool)
(declare-fun x7898 () Int)
(declare-fun x1844 () Int)
(declare-fun x7778 () Bool)
(declare-fun x8773 () Int)
(declare-fun x1791 () Int)
(declare-fun x7791 () Int)
(declare-fun x3804 () Int)
(declare-fun x4181 () Int)
(declare-fun x7678 () Bool)
(declare-fun x5473 () Int)
(declare-fun x5485 () Int)
(declare-fun x8828 () Int)
(declare-fun x7225 () Bool)
(declare-fun x6132 (Int) Int)
(declare-fun x1454 (Int) Int)
(declare-fun x2325 () Bool)
(declare-fun x2476 () Int)
(declare-fun x8250 () Int)
(declare-fun x1091 () Int)
(declare-fun x3688 () Int)
(declare-fun x7527 () Bool)
(declare-fun x5280 () Int)
(declare-fun x4739 (Int) Int)
(declare-fun x4407 () Int)
(declare-fun x6431 () Int)
(declare-fun x2881 () Int)
(declare-fun x7677 () Int)
(declare-fun x6709 () Int)
(declare-fun x3923 () Bool)
(declare-fun x7735 () Int)
(declare-fun x318 () Bool)
(declare-fun x6883 () Int)
(declare-fun x1819 () Int)
(declare-fun x1694 () Bool)
(declare-fun x3637 () Int)
(declare-fun x5554 () Int)
(declare-fun x6681 () Bool)
(declare-fun x7974 () Bool)
(declare-fun x9027 (Int) Int)
(declare-fun x4960 () Bool)
(declare-fun x202 () Int)
(declare-fun x3436 () Int)
(declare-fun x6402 () Int)
(declare-fun x7535 () Bool)
(declare-fun x5179 () Bool)
(declare-fun x2871 () Int)
(declare-fun x3838 () Int)
(declare-fun x8897 () Int)
(declare-fun x749 () Int)
(declare-fun x1047 (Int) Int)
(declare-fun x2959 () Bool)
(declare-fun x7841 () Bool)
(declare-fun x76 () Int)
(declare-fun x632 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x7826 () Bool)
(declare-fun x6476 () Bool)
(declare-fun x3916 () Int)
(declare-fun x5873 () Int)
(declare-fun x5840 () Int)
(declare-fun x5372 () Bool)
(declare-fun x1166 () Int)
(declare-fun x3558 () Int)
(declare-fun x236 () Bool)
(declare-fun x6287 () Bool)
(declare-fun x6992 () Int)
(declare-fun x6694 () Bool)
(declare-fun x1136 () Int)
(declare-fun x8483 () Int)
(declare-fun x8223 () Bool)
(declare-fun x8437 () Bool)
(declare-fun x4371 () Int)
(declare-fun x880 () Bool)
(declare-fun x4869 (Int) Int)
(declare-fun x5579 (Int) Int)
(declare-fun x5956 () Int)
(declare-fun x2733 () Bool)
(declare-fun x3332 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1480 () Int)
(declare-fun x5350 () Int)
(declare-fun x1775 () Bool)
(declare-fun x1593 (Int) Int)
(declare-fun x5164 () Bool)
(declare-fun x5068 () Bool)
(declare-fun x490 () Int)
(declare-fun x5153 () Int)
(declare-fun x1602 () Int)
(declare-fun x7703 () Bool)
(declare-fun x3438 () Int)
(declare-fun x5984 () Int)
(declare-fun x3028 () Int)
(declare-fun x3133 () Bool)
(declare-fun x9122 () Int)
(define-fun x7405 ((x277 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x277) (>= x277 0)) x277 (- x277 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x7190 ((x277 Int)) Int (ite (and (< x277 0) (>= x277 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x277 115792089237316195423570985008687907853269984665640564039457584007913129639936) x277))
(define-fun x834 ((x277 Int)) Int (ite (and (>= x277 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x277)) x277 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x277) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x277)) (- x277 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x277 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x277 0)) (+ x277 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4588 x277 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2673 ((x137 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x137) (<= 0 x137)))
(define-fun x9110 ((x137 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x137) (>= x137 0)))
(define-fun x8528 ((x137 Int) (x3460 Int)) Bool (= (* x3460 x137) (x4766 x137 x3460)))
(define-fun x5494 ((x137 Int) (x3460 Int)) Bool (and (= (- (* (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936) x137) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4766 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4766 x137 (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x137 (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x3460 x137) (* x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x4766 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3460))))
(define-fun x3959 ((x137 Int) (x3460 Int)) Bool (=> (and (< 0 x137) (< 0 x3460)) (= (= x3460 (x3137 (x834 (x4766 x137 x3460)) x137)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4766 x137 x3460)))))
(define-fun x7836 ((x137 Int) (x3460 Int)) Bool (=> (and (not (= x3460 0)) (not (= 0 x137))) (and (= (x3137 (x4766 x137 x3460) x137) x3460) (= (x3137 (x4766 x137 x3460) x3460) x137))))
(define-fun x1776 ((x137 Int) (x3460 Int)) Bool (=> (and (< 0 x3460) (> x137 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4766 x137 x3460)) (< (x3137 115792089237316195423570985008687907853269984665640564039457584007913129639935 x137) x3460))))
(define-fun x4411 ((x137 Int) (x3460 Int)) Bool (and (= (x834 (x4766 x137 x3460)) (x834 (x4766 x137 (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x834 (x4766 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3460)) (x834 (x4766 x137 x3460))) (= (x834 (x4766 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x834 (x4766 x137 x3460)))))
(define-fun x7934 ((x137 Int) (x3460 Int)) Bool (and (=> (and (and (<= x3460 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x3460)) (and (> x137 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x137))) (= (>= (x3137 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3460) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x137)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x4766 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3460)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3460) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3460)) (and (> x137 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x137))) (= (<= (x4766 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x3137 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3460)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x137)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3460) (> x3460 0)) (and (< 0 x137) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x137))) (= (>= (x3137 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3460) x137) (<= (x4766 x137 x3460) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3460) (<= x3460 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x137) (> x137 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3460) (x3137 57896044618658097711785492504343953926634992332820282019728792003956564819968 x137)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x4766 x137 (- x3460 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x8912 ((x137 Int) (x3460 Int)) Bool (and (x8528 x137 x3460) (x7934 x137 x3460) (x7836 x137 x3460) (x4411 x137 x3460) (x5494 x137 x3460) (x3959 x137 x3460) (x1776 x137 x3460)))
(define-fun x2481 ((x137 Int)) Bool (and (= 0 (x4766 0 x137)) (= 0 (x4766 x137 0))))
(define-fun x8243 ((x137 Int)) Bool (and (= (x4766 x137 1) x137) (= (x4766 1 x137) x137)))
(define-fun x8502 ((x137 Int)) Bool (and (x8243 x137) (x2481 x137)))
(define-fun x5307 ((x137 Int) (x3460 Int)) Bool (and (> x3460 (x4588 x137 x3460)) (>= (x4588 x137 x3460) 0)))
(define-fun x6888 ((x137 Int) (x3460 Int)) Bool (=> (and (> x3460 0) (<= 0 x137)) (= (= (x4588 x137 x3460) x137) (< x137 x3460))))
(define-fun x7271 ((x137 Int) (x3460 Int)) Bool (=> (and (> x3460 0) (and (<= x3460 x137) (> (+ x3460 x3460) x137))) (= (x4588 x137 x3460) (- x137 x3460))))
(define-fun x2192 ((x137 Int) (x3460 Int)) Bool (=> (> x3460 0) (= x137 (+ (* (x3137 x137 x3460) x3460) (x4588 x137 x3460)))))
(define-fun x4097 ((x137 Int) (x3460 Int)) Bool (and (x6888 x137 x3460) (x7271 x137 x3460) (x2192 x137 x3460) (x5307 x137 x3460)))
(define-fun x491 ((x137 Int)) Bool (= (x4588 0 x137) 0))
(define-fun x5194 ((x137 Int)) Bool (= (x4588 x137 1) 0))
(define-fun x5461 ((x137 Int)) Bool (= 0 (x4588 x137 x137)))
(define-fun x8339 ((x137 Int)) Bool (and (x5194 x137) (x491 x137) (x5461 x137)))
(define-fun x6019 ((x137 Int)) Bool (and (= (x5917 x137 115792089237316195423570985008687907853269984665640564039457584007913129639935) x137) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639935 x137) x137)))
(define-fun x884 ((x137 Int)) Bool (and (= 0 (x5917 0 x137)) (= (x5917 x137 0) 0)))
(define-fun x6564 ((x137 Int)) Bool (= x137 (x5917 x137 x137)))
(define-fun x4744 ((x137 Int)) Bool (and (x6564 x137) (x884 x137) (x6019 x137)))
(define-fun x2172 ((x137 Int) (x3460 Int)) Bool (= (x5917 x137 x3460) (x5917 x3460 x137)))
(define-fun x4019 ((x137 Int) (x3460 Int)) Bool (and (=> (<= 0 x137) (<= (x5917 x137 x3460) x137)) (<= 0 (x5917 x137 x3460)) (=> (<= 0 x3460) (>= x3460 (x5917 x137 x3460)))))
(define-fun x4997 ((x137 Int) (x3460 Int)) Bool (and (x2172 x137 x3460) (x4019 x137 x3460)))
(define-fun x844 ((x137 Int)) Bool (= (x5917 x137 31) (x4588 x137 32)))
(define-fun x5050 ((x137 Int)) Bool (and (x4997 x137 31) (x844 x137)))
(define-fun x4919 ((x137 Int)) Bool (= (x834 x137) (+ (x4588 x137 32) (x5917 x137 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x1240 ((x137 Int)) Bool (and (x4997 x137 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x4919 x137)))
(define-fun x647 ((x137 Int)) Bool (= (x4588 x137 256) (x5917 x137 255)))
(define-fun x7454 ((x137 Int)) Bool (and (x647 x137) (x4997 x137 255)))
(define-fun x3880 ((x8972 Int)) Int 0)
(define-fun x375 ((x8972 Int)) Int 0)
(define-fun x305 ((x8972 Int)) Int 0)
(define-fun x2712 ((x8972 Int)) Int 0)
(define-fun x6838 ((x8972 Int)) Int 0)
(define-fun x7362 ((x8972 Int)) Int 0)
(define-fun x5203 ((x8972 Int)) Int 0)
(define-fun x3267 ((x8972 Int)) Int 0)
(define-fun x7825 ((x8972 Int)) Int 0)
(define-fun x343 ((x8972 Int)) Int 0)
(define-fun x6459 ((x8972 Int)) Int 0)
(define-fun x5113 ((x8972 Int)) Int 0)
(define-fun x9133 ((x8972 Int)) Int 0)
(define-fun x4738 ((x8972 Int)) Int 0)
(define-fun x856 ((x8972 Int)) Int 0)
(define-fun x3566 ((x8972 Int)) Int 0)
(define-fun x4282 ((x8972 Int)) Int 0)
(define-fun x4261 ((x8972 Int)) Int 0)
(define-fun x2901 ((x8972 Int)) Int 0)
(define-fun x7429 ((x8972 Int)) Int 0)
(define-fun x7393 ((x8972 Int)) Int 0)
(define-fun x6379 ((x8972 Int)) Int 0)
(define-fun x8226 ((x8972 Int)) Int (ite (= x8972 x3960) x8025 (x3412 x8972)))
(define-fun x4514 ((x8972 Int)) Int (ite (= x1306 x8972) x7638 (x8226 x8972)))
(define-fun x1908 ((x8972 Int)) Int 0)
(define-fun x501 ((x8972 Int)) Int (ite (= x8972 x5248) x1380 (x3412 x8972)))
(define-fun x3183 ((x8972 Int)) Int (ite (= x8972 x1306) x3408 (x501 x8972)))
(define-fun x2695 ((x8972 Int)) Int (ite (= x8972 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x4738 x8972)))
(define-fun x8414 ((x8972 Int)) Int (ite (= x8972 132) x6887 (x2695 x8972)))
(define-fun x8097 ((x8972 Int)) Int (ite (= x8972 0) x2928 (x2364 x8972)))
(define-fun x1730 ((x8972 Int)) Int (ite (= 128 x8972) x2928 (x8414 x8972)))
(define-fun x2095 ((x8972 Int)) Int (ite (= 0 x8972) x7644 (x2364 x8972)))
(define-fun x9135 ((x8972 Int)) Int (ite (= x8972 128) x7644 (x8414 x8972)))
(define-fun x4439 ((x8972 Int)) Int (ite (= 128 x8972) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x4738 x8972)))
(define-fun x1527 ((x8972 Int)) Int (ite (= 132 x8972) x6887 (x4439 x8972)))
(define-fun x988 ((x8972 Int)) Int (ite (= x8972 0) x2518 (x1789 x8972)))
(define-fun x4220 ((x8972 Int)) Int (ite (= 128 x8972) x2518 (x1527 x8972)))
(define-fun x5376 ((x8972 Int)) Int (ite (= x8972 0) x7644 (x1789 x8972)))
(define-fun x504 ((x8972 Int)) Int (ite (= 128 x8972) x7644 (x1527 x8972)))
(define-fun x4049 ((x8972 Int)) Int (ite (= x8972 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x856 x8972)))
(define-fun x2748 ((x8972 Int)) Int (ite (= 132 x8972) x6887 (x4049 x8972)))
(define-fun x1754 ((x8972 Int)) Int (ite (= 0 x8972) x2119 (x2299 x8972)))
(define-fun x1865 ((x8972 Int)) Int (ite (= x8972 128) x2119 (x2748 x8972)))
(define-fun x456 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x6838 x8972)))
(define-fun x6617 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> 36 x8972)) (x456 x8972) (x2299 x8972)))
(define-fun x2640 ((x8972 Int)) Int (ite (= 0 x8972) x7644 (x2299 x8972)))
(define-fun x458 ((x8972 Int)) Int (ite (= x8972 128) x7644 (x2748 x8972)))
(define-fun x8710 ((x8972 Int)) Int (ite (= 128 x8972) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x856 x8972)))
(define-fun x6802 ((x8972 Int)) Int (ite (= 132 x8972) x6887 (x8710 x8972)))
(define-fun x6400 ((x8972 Int)) Int (ite (= 0 x8972) x5946 (x1644 x8972)))
(define-fun x7511 ((x8972 Int)) Int (ite (= 128 x8972) x5946 (x6802 x8972)))
(define-fun x8952 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7362 x8972)))
(define-fun x6207 ((x8972 Int)) Int (ite (and (> 36 x8972) (<= 0 x8972)) (x8952 x8972) (x1644 x8972)))
(define-fun x8017 ((x8972 Int)) Int (ite (= x8972 0) x7644 (x1644 x8972)))
(define-fun x3031 ((x8972 Int)) Int (ite (= 128 x8972) x7644 (x6802 x8972)))
(define-fun x1619 ((x8972 Int)) Int (ite x62 (ite x6858 (x4220 x8972) (x504 x8972)) (ite x3069 (x1730 x8972) (x9135 x8972))))
(define-fun x6761 ((x8972 Int)) Int (ite (= x8972 x476) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x1619 x8972)))
(define-fun x4088 ((x8972 Int)) Int (ite (= x8314 x8972) x1306 (x6761 x8972)))
(define-fun x9028 ((x8972 Int)) Int (ite (= x8972 x1306) x8187 (x4514 x8972)))
(define-fun x2332 ((x8972 Int)) Int (ite (= x8972 x3979) x6101 (x9028 x8972)))
(define-fun x4180 ((x8972 Int)) Int (ite (= x8972 x5266) x6156 (x6418 x8972)))
(define-fun x8383 ((x8972 Int)) Int (ite (= 128 x8972) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x5113 x8972)))
(define-fun x4101 ((x8972 Int)) Int (ite (= x8972 132) x5850 (x8383 x8972)))
(define-fun x1317 ((x8972 Int)) Int (ite (= x8972 164) x865 (x4101 x8972)))
(define-fun x1557 ((x8972 Int)) Int (ite (= 196 x8972) x6086 (x1317 x8972)))
(define-fun x63 ((x8972 Int)) Int (ite (= x8972 228) x5974 (x1557 x8972)))
(define-fun x87 ((x8972 Int)) Int (ite (= x8972 160) x3017 (x5113 x8972)))
(define-fun x2833 ((x8972 Int)) Int (ite (= x8972 192) x454 (x87 x8972)))
(define-fun x550 ((x8972 Int)) Int (ite (= 224 x8972) x8835 (x2833 x8972)))
(define-fun x1390 ((x8972 Int)) Int (ite (= x8972 256) x2870 (x550 x8972)))
(define-fun x7933 ((x8972 Int)) Int (ite (= x8972 288) x6884 (x1390 x8972)))
(define-fun x2022 ((x8972 Int)) Int (ite (= 320 x8972) x2759 (x7933 x8972)))
(define-fun x1164 ((x8972 Int)) Int (ite (= x8972 352) x150 (x2022 x8972)))
(define-fun x7482 ((x8972 Int)) Int (ite (= 384 x8972) x3888 (x1164 x8972)))
(define-fun x6141 ((x8972 Int)) Int (ite (= x8972 416) x8716 (x7482 x8972)))
(define-fun x8293 ((x8972 Int)) Int (ite (= 448 x8972) x3286 (x6141 x8972)))
(define-fun x6898 ((x8972 Int)) Int (ite (= x8972 128) 320 (x8293 x8972)))
(define-fun x8342 ((x8972 Int)) Int (ite (= 480 x8972) 0 (x6898 x8972)))
(define-fun x3270 ((x8972 Int)) Int (ite (= 160 x8972) x3869 (x5113 x8972)))
(define-fun x1013 ((x8972 Int)) Int (ite (= 192 x8972) x5151 (x3270 x8972)))
(define-fun x1083 ((x8972 Int)) Int (ite (= x8972 224) x3171 (x1013 x8972)))
(define-fun x6208 ((x8972 Int)) Int (ite (= 256 x8972) x5533 (x1083 x8972)))
(define-fun x2444 ((x8972 Int)) Int (ite (= 288 x8972) x4327 (x6208 x8972)))
(define-fun x4375 ((x8972 Int)) Int (ite (= 320 x8972) x2612 (x2444 x8972)))
(define-fun x7269 ((x8972 Int)) Int (ite (= x8972 352) x7766 (x4375 x8972)))
(define-fun x5890 ((x8972 Int)) Int (ite (= x8972 384) x3639 (x7269 x8972)))
(define-fun x4788 ((x8972 Int)) Int (ite (= x8972 416) x1353 (x5890 x8972)))
(define-fun x1659 ((x8972 Int)) Int (ite (= 448 x8972) x7568 (x4788 x8972)))
(define-fun x5106 ((x8972 Int)) Int (ite (= x8972 128) 320 (x1659 x8972)))
(define-fun x7452 ((x8972 Int)) Int (ite (= x8972 480) 0 (x5106 x8972)))
(define-fun x8645 ((x8972 Int)) Int (ite (= 128 x8972) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x5113 x8972)))
(define-fun x402 ((x8972 Int)) Int (ite (= x8972 132) x113 (x8645 x8972)))
(define-fun x2084 ((x8972 Int)) Int (ite (= 164 x8972) x5672 (x402 x8972)))
(define-fun x185 ((x8972 Int)) Int (ite (= 128 x8972) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x5113 x8972)))
(define-fun x6874 ((x8972 Int)) Int (ite (= x8972 132) x3570 (x185 x8972)))
(define-fun x4050 ((x8972 Int)) Int (ite (= x8972 164) x3131 (x6874 x8972)))
(define-fun x3627 ((x8972 Int)) Int (ite (= x8972 x4894) x3870 (x2332 x8972)))
(define-fun x2527 ((x8972 Int)) Int (ite (= x8972 x8869) x8396 (x3627 x8972)))
(define-fun x1773 ((x8972 Int)) Int (ite (and (<= 128 x8972) (> 160 x8972)) (x6577 (- x8972 128)) (x4050 x8972)))
(define-fun x5505 ((x8972 Int)) Int (ite (= x8972 160) x3767 (x5113 x8972)))
(define-fun x3287 ((x8972 Int)) Int (ite (= x8972 192) x2454 (x5505 x8972)))
(define-fun x249 ((x8972 Int)) Int (ite (= 224 x8972) x8092 (x3287 x8972)))
(define-fun x2010 ((x8972 Int)) Int (ite (= x8972 256) x3965 (x249 x8972)))
(define-fun x1847 ((x8972 Int)) Int (ite (= x8972 288) x5104 (x2010 x8972)))
(define-fun x1877 ((x8972 Int)) Int (ite (= x8972 320) x3940 (x1847 x8972)))
(define-fun x7850 ((x8972 Int)) Int (ite (= x8972 352) x3213 (x1877 x8972)))
(define-fun x8020 ((x8972 Int)) Int (ite (= x8972 384) x5873 (x7850 x8972)))
(define-fun x9033 ((x8972 Int)) Int (ite (= x8972 416) x2796 (x8020 x8972)))
(define-fun x7115 ((x8972 Int)) Int (ite (= x8972 448) x1420 (x9033 x8972)))
(define-fun x7871 ((x8972 Int)) Int (ite (= 128 x8972) 320 (x7115 x8972)))
(define-fun x7430 ((x8972 Int)) Int (ite (= 480 x8972) 0 (x7871 x8972)))
(define-fun x6776 ((x8972 Int)) Int (ite (= x8972 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x5113 x8972)))
(define-fun x5489 ((x8972 Int)) Int (ite (= x8972 132) x6705 (x6776 x8972)))
(define-fun x61 ((x8972 Int)) Int (ite (= x8972 164) x2478 (x5489 x8972)))
(define-fun x4210 ((x8972 Int)) Int (ite (= x8972 196) x4951 (x61 x8972)))
(define-fun x255 ((x8972 Int)) Int (ite (= x4894 x8972) x5825 (x2332 x8972)))
(define-fun x5165 ((x8972 Int)) Int (ite (= x8869 x8972) x4033 (x255 x8972)))
(define-fun x8684 ((x8972 Int)) Int (ite (= x8972 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x5113 x8972)))
(define-fun x2453 ((x8972 Int)) Int (ite (= 132 x8972) x5092 (x8684 x8972)))
(define-fun x3191 ((x8972 Int)) Int (ite (= x8972 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x5113 x8972)))
(define-fun x7262 ((x8972 Int)) Int (ite (= 132 x8972) x2227 (x3191 x8972)))
(define-fun x579 ((x8972 Int)) Int (x8841 x8972))
(define-fun x1295 ((x8972 Int)) Int (x6546 x8972))
(define-fun x2798 ((x8972 Int)) Int (x7445 x8972))
(define-fun x7708 ((x8972 Int)) Int (x5676 x8972))
(define-fun x539 ((x8972 Int)) Int (x1991 x8972))
(define-fun x8563 ((x8972 Int)) Int (ite x6624 (ite x8353 (x1865 x8972) (ite x8593 (x2748 x8972) (x458 x8972))) (ite x5171 (x7511 x8972) (ite x8702 (x6802 x8972) (x3031 x8972)))))
(define-fun x1926 ((x8972 Int)) Int (x3465 x8972))
(define-fun x1570 ((x8972 Int)) Int (x4125 x8972))
(define-fun x6648 ((x8972 Int)) Int (x4017 x8972))
(define-fun x8019 ((x8972 Int)) Int (x1443 x8972))
(define-fun x6034 ((x8972 Int)) Int (x1817 x8972))
(define-fun x1077 ((x8972 Int)) Int (x2190 x8972))
(define-fun x1518 ((x8972 Int)) Int (x6418 x8972))
(define-fun x6502 ((x8972 Int)) Int (x4739 x8972))
(define-fun x7856 ((x8972 Int)) Int (x3011 x8972))
(define-fun x3514 ((x8972 Int)) Int (x2502 x8972))
(define-fun x3791 ((x8972 Int)) Int (x4445 x8972))
(define-fun x6170 ((x8972 Int)) Int (x6342 x8972))
(define-fun x5719 ((x8972 Int)) Int (x2419 x8972))
(define-fun x5879 ((x8972 Int)) Int (x8042 x8972))
(define-fun x8330 ((x8972 Int)) Int (x7192 x8972))
(define-fun x748 ((x8972 Int)) Int (x5943 x8972))
(define-fun x6139 ((x8972 Int)) Int (x7941 x8972))
(define-fun x7642 ((x8972 Int)) Int (ite (= x8972 x14) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x8563 x8972)))
(define-fun x2029 ((x8972 Int)) Int (ite (= x998 x8972) x1306 (x7642 x8972)))
(define-fun x6560 ((x8972 Int)) Int (ite (= x1306 x8972) x215 (x3183 x8972)))
(define-fun x5493 ((x8972 Int)) Int (ite (= x8972 x6226) x6919 (x6560 x8972)))
(define-fun x8938 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4261 x8972)))
(define-fun x5274 ((x8972 Int)) Int (ite (and (< x8972 36) (>= x8972 0)) (x8938 x8972) (x6195 x8972)))
(define-fun x1495 ((x8972 Int)) Int (ite (= x8972 x5612) x30 (x6418 x8972)))
(define-fun x5431 ((x8972 Int)) Int (ite (= x8972 4) 17 (x4282 x8972)))
(define-fun x898 ((x8972 Int)) Int (ite (and (> 36 x8972) (>= x8972 0)) (x5431 x8972) (x6195 x8972)))
(define-fun x2698 ((x8972 Int)) Int (ite (= x8972 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x9133 x8972)))
(define-fun x2060 ((x8972 Int)) Int (ite (= 132 x8972) x5002 (x2698 x8972)))
(define-fun x4378 ((x8972 Int)) Int (ite (= x8972 164) x335 (x2060 x8972)))
(define-fun x5978 ((x8972 Int)) Int (ite (= 196 x8972) x8948 (x4378 x8972)))
(define-fun x2281 ((x8972 Int)) Int (ite (= 228 x8972) x7738 (x5978 x8972)))
(define-fun x4642 ((x8972 Int)) Int (ite (= 160 x8972) x8549 (x9133 x8972)))
(define-fun x3237 ((x8972 Int)) Int (ite (= 192 x8972) x9050 (x4642 x8972)))
(define-fun x6372 ((x8972 Int)) Int (ite (= x8972 224) x7681 (x3237 x8972)))
(define-fun x710 ((x8972 Int)) Int (ite (= x8972 256) x1274 (x6372 x8972)))
(define-fun x7176 ((x8972 Int)) Int (ite (= 288 x8972) x1632 (x710 x8972)))
(define-fun x597 ((x8972 Int)) Int (ite (= x8972 320) x3221 (x7176 x8972)))
(define-fun x7799 ((x8972 Int)) Int (ite (= 352 x8972) x8003 (x597 x8972)))
(define-fun x1879 ((x8972 Int)) Int (ite (= x8972 384) x2973 (x7799 x8972)))
(define-fun x4190 ((x8972 Int)) Int (ite (= 416 x8972) x5351 (x1879 x8972)))
(define-fun x8389 ((x8972 Int)) Int (ite (= 448 x8972) x274 (x4190 x8972)))
(define-fun x3330 ((x8972 Int)) Int (ite (= x8972 128) 320 (x8389 x8972)))
(define-fun x4857 ((x8972 Int)) Int (ite (= x8972 480) 0 (x3330 x8972)))
(define-fun x1781 ((x8972 Int)) Int (ite (= x8972 160) x4984 (x9133 x8972)))
(define-fun x6917 ((x8972 Int)) Int (ite (= x8972 192) x6950 (x1781 x8972)))
(define-fun x7878 ((x8972 Int)) Int (ite (= 224 x8972) x5984 (x6917 x8972)))
(define-fun x2355 ((x8972 Int)) Int (ite (= x8972 256) x870 (x7878 x8972)))
(define-fun x7246 ((x8972 Int)) Int (ite (= x8972 288) x5394 (x2355 x8972)))
(define-fun x5515 ((x8972 Int)) Int (ite (= x8972 320) x3621 (x7246 x8972)))
(define-fun x2838 ((x8972 Int)) Int (ite (= x8972 352) x99 (x5515 x8972)))
(define-fun x2196 ((x8972 Int)) Int (ite (= x8972 384) x2563 (x2838 x8972)))
(define-fun x9082 ((x8972 Int)) Int (ite (= 416 x8972) x6027 (x2196 x8972)))
(define-fun x679 ((x8972 Int)) Int (ite (= x8972 448) x5388 (x9082 x8972)))
(define-fun x2551 ((x8972 Int)) Int (ite (= x8972 128) 320 (x679 x8972)))
(define-fun x8636 ((x8972 Int)) Int (ite (= x8972 480) 0 (x2551 x8972)))
(define-fun x6286 ((x8972 Int)) Int (ite (= 128 x8972) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x9133 x8972)))
(define-fun x8070 ((x8972 Int)) Int (ite (= x8972 132) x5443 (x6286 x8972)))
(define-fun x1895 ((x8972 Int)) Int (ite (= x8972 164) x2944 (x8070 x8972)))
(define-fun x1396 ((x8972 Int)) Int (ite (= 128 x8972) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x9133 x8972)))
(define-fun x4255 ((x8972 Int)) Int (ite (= x8972 132) x8137 (x1396 x8972)))
(define-fun x7518 ((x8972 Int)) Int (ite (= 164 x8972) x4306 (x4255 x8972)))
(define-fun x8955 ((x8972 Int)) Int (ite (= x8972 x4894) x4509 (x5493 x8972)))
(define-fun x3879 ((x8972 Int)) Int (ite (= x464 x8972) x5257 (x8955 x8972)))
(define-fun x794 ((x8972 Int)) Int (ite (and (< x8972 160) (>= x8972 128)) (x8802 (- x8972 128)) (x7518 x8972)))
(define-fun x7589 ((x8972 Int)) Int 0)
(define-fun x8122 ((x8972 Int)) Int (ite (= x8972 160) x6910 (x9133 x8972)))
(define-fun x1601 ((x8972 Int)) Int (ite (= 192 x8972) x1133 (x8122 x8972)))
(define-fun x7611 ((x8972 Int)) Int (ite (= x8972 224) x52 (x1601 x8972)))
(define-fun x6466 ((x8972 Int)) Int (ite (= 256 x8972) x8703 (x7611 x8972)))
(define-fun x6863 ((x8972 Int)) Int (ite (= x8972 288) x6241 (x6466 x8972)))
(define-fun x8931 ((x8972 Int)) Int (ite (= 320 x8972) x6900 (x6863 x8972)))
(define-fun x4745 ((x8972 Int)) Int (ite (= 352 x8972) x7309 (x8931 x8972)))
(define-fun x6253 ((x8972 Int)) Int (ite (= x8972 384) x2724 (x4745 x8972)))
(define-fun x9100 ((x8972 Int)) Int (ite (= x8972 416) x2697 (x6253 x8972)))
(define-fun x9001 ((x8972 Int)) Int (ite (= x8972 448) x8608 (x9100 x8972)))
(define-fun x6077 ((x8972 Int)) Int (ite (= x8972 128) 320 (x9001 x8972)))
(define-fun x6547 ((x8972 Int)) Int (ite (= 480 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4282 x8972)))
(define-fun x2918 ((x8972 Int)) Int (ite (= 484 x8972) 32 (x6547 x8972)))
(define-fun x3803 ((x8972 Int)) Int (ite (= 516 x8972) 14 (x2918 x8972)))
(define-fun x873 ((x8972 Int)) Int (ite (= x8972 548) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x3803 x8972)))
(define-fun x7764 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> 100 x8972)) (x873 (+ x8972 480)) (x6195 x8972)))
(define-fun x906 ((x8972 Int)) Int (ite (= x8972 480) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4282 x8972)))
(define-fun x6130 ((x8972 Int)) Int (ite (= 484 x8972) 32 (x906 x8972)))
(define-fun x2049 ((x8972 Int)) Int (ite (= 516 x8972) 17 (x6130 x8972)))
(define-fun x1578 ((x8972 Int)) Int (ite (= x8972 548) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x2049 x8972)))
(define-fun x2589 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 100)) (x1578 (+ x8972 480)) (x6195 x8972)))
(define-fun x8030 ((x8972 Int)) Int (ite (= x8972 480) 0 (x6077 x8972)))
(define-fun x8544 ((x8972 Int)) Int (ite (= 128 x8972) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x9133 x8972)))
(define-fun x3292 ((x8972 Int)) Int (ite (= 132 x8972) x3967 (x8544 x8972)))
(define-fun x7232 ((x8972 Int)) Int (ite (= 164 x8972) x3063 (x3292 x8972)))
(define-fun x2193 ((x8972 Int)) Int (ite (= x8972 196) x4226 (x7232 x8972)))
(define-fun x4041 ((x8972 Int)) Int (ite (= x4894 x8972) x1408 (x5493 x8972)))
(define-fun x869 ((x8972 Int)) Int (ite (= x8972 x464) x2080 (x4041 x8972)))
(define-fun x5212 ((x8972 Int)) Int 0)
(define-fun x5953 ((x8972 Int)) Int (ite (= x8972 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x9133 x8972)))
(define-fun x8746 ((x8972 Int)) Int (ite (= 132 x8972) x4346 (x5953 x8972)))
(define-fun x4081 ((x8972 Int)) Int (ite (= x8972 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x9133 x8972)))
(define-fun x6828 ((x8972 Int)) Int (ite (= x8972 132) x1701 (x4081 x8972)))
(define-fun x3701 ((x8972 Int)) Int 0)
(define-fun x2322 ((x8972 Int)) Int (ite x1176 (x953 x8972) (x4739 x8972)))
(define-fun x4012 ((x8972 Int)) Int (ite x4910 (ite x3326 (x4739 x8972) (x2322 x8972)) (ite x5971 (x771 x8972) (x4739 x8972))))
(define-fun x4620 ((x8972 Int)) Int (ite x3478 (ite x6905 (x20 x8972) (x4739 x8972)) (ite x5364 (ite x6905 (x20 x8972) (x4739 x8972)) (x4739 x8972))))
(define-fun x5204 ((x8972 Int)) Int (ite x1559 (x3740 x8972) (x4739 x8972)))
(define-fun x2433 ((x8972 Int)) Int (ite x1134 (ite x2878 (x4012 x8972) (x4620 x8972)) (ite x4316 (x5204 x8972) (ite x7227 (x5204 x8972) (x4739 x8972)))))
(define-fun x5786 ((x8972 Int)) Int (ite x4092 (x4739 x8972) (ite x5206 (x1270 x8972) (x4739 x8972))))
(define-fun x4770 ((x8972 Int)) Int (ite x7236 (ite x6510 (x2433 x8972) (x5786 x8972)) (ite x3474 (x5466 x8972) (x4739 x8972))))
(define-fun x3826 ((x8972 Int)) Int (ite x3527 (x1015 x8972) (x4739 x8972)))
(define-fun x6107 ((x8972 Int)) Int (ite x4227 (ite x5041 (x4770 x8972) (x3826 x8972)) (ite x3848 (x6734 x8972) (x4739 x8972))))
(define-fun x5412 ((x8972 Int)) Int (ite x4228 (x4977 x8972) (x4739 x8972)))
(define-fun x3809 ((x8972 Int)) Int (ite x7590 (x4739 x8972) (ite x2516 (x6107 x8972) (x5412 x8972))))
(define-fun x3293 ((x8972 Int)) Int (ite x4839 (ite x4235 (x4739 x8972) (x3809 x8972)) (ite x4600 (x4739 x8972) (ite x4235 (x4739 x8972) (x3809 x8972)))))
(define-fun x5670 ((x8972 Int)) Int (ite x1176 (x9000 x8972) (x3465 x8972)))
(define-fun x4623 ((x8972 Int)) Int (ite x4910 (ite x3326 (x3465 x8972) (x5670 x8972)) (ite x5971 (x4000 x8972) (x3465 x8972))))
(define-fun x6550 ((x8972 Int)) Int (ite x3478 (ite x6905 (x13 x8972) (x3465 x8972)) (ite x5364 (ite x6905 (x13 x8972) (x3465 x8972)) (x3465 x8972))))
(define-fun x3211 ((x8972 Int)) Int (ite x1559 (x5833 x8972) (x3465 x8972)))
(define-fun x331 ((x8972 Int)) Int (ite x1134 (ite x2878 (x4623 x8972) (x6550 x8972)) (ite x4316 (x3211 x8972) (ite x7227 (x3211 x8972) (x3465 x8972)))))
(define-fun x5428 ((x8972 Int)) Int (ite x4092 (x3465 x8972) (ite x5206 (x790 x8972) (x3465 x8972))))
(define-fun x6551 ((x8972 Int)) Int (ite x7236 (ite x6510 (x331 x8972) (x5428 x8972)) (ite x3474 (x8084 x8972) (x3465 x8972))))
(define-fun x2423 ((x8972 Int)) Int (ite x3527 (x4653 x8972) (x3465 x8972)))
(define-fun x9019 ((x8972 Int)) Int (ite x4227 (ite x5041 (x6551 x8972) (x2423 x8972)) (ite x3848 (x4143 x8972) (x3465 x8972))))
(define-fun x2038 ((x8972 Int)) Int (ite x4228 (x442 x8972) (x3465 x8972)))
(define-fun x4360 ((x8972 Int)) Int (ite x7590 (x3465 x8972) (ite x2516 (x9019 x8972) (x2038 x8972))))
(define-fun x1764 ((x8972 Int)) Int (ite x4839 (ite x4235 (x3465 x8972) (x4360 x8972)) (ite x4600 (x3465 x8972) (ite x4235 (x3465 x8972) (x4360 x8972)))))
(define-fun x7695 ((x8972 Int)) Int (ite x1176 (x912 x8972) (x2502 x8972)))
(define-fun x4929 ((x8972 Int)) Int (ite x4910 (ite x3326 (x2502 x8972) (x7695 x8972)) (ite x5971 (x1617 x8972) (x2502 x8972))))
(define-fun x3833 ((x8972 Int)) Int (ite x3478 (ite x6905 (x2435 x8972) (x2502 x8972)) (ite x5364 (ite x6905 (x2435 x8972) (x2502 x8972)) (x2502 x8972))))
(define-fun x5821 ((x8972 Int)) Int (ite x1559 (x4267 x8972) (x2502 x8972)))
(define-fun x133 ((x8972 Int)) Int (ite x1134 (ite x2878 (x4929 x8972) (x3833 x8972)) (ite x4316 (x5821 x8972) (ite x7227 (x5821 x8972) (x2502 x8972)))))
(define-fun x7716 ((x8972 Int)) Int (ite x4092 (x2502 x8972) (ite x5206 (x3410 x8972) (x2502 x8972))))
(define-fun x2450 ((x8972 Int)) Int (ite x7236 (ite x6510 (x133 x8972) (x7716 x8972)) (ite x3474 (x8059 x8972) (x2502 x8972))))
(define-fun x3815 ((x8972 Int)) Int (ite x3527 (x5168 x8972) (x2502 x8972)))
(define-fun x907 ((x8972 Int)) Int (ite x4227 (ite x5041 (x2450 x8972) (x3815 x8972)) (ite x3848 (x3062 x8972) (x2502 x8972))))
(define-fun x713 ((x8972 Int)) Int (ite x4228 (x6371 x8972) (x2502 x8972)))
(define-fun x5846 ((x8972 Int)) Int (ite x7590 (x2502 x8972) (ite x2516 (x907 x8972) (x713 x8972))))
(define-fun x7481 ((x8972 Int)) Int (ite x4839 (ite x4235 (x2502 x8972) (x5846 x8972)) (ite x4600 (x2502 x8972) (ite x4235 (x2502 x8972) (x5846 x8972)))))
(define-fun x6299 ((x8972 Int)) Int (ite x4943 (x6418 x8972) (x1495 x8972)))
(define-fun x4789 ((x8972 Int)) Int (ite x1176 (x7117 x8972) (x6418 x8972)))
(define-fun x3300 ((x8972 Int)) Int (ite x4910 (ite x3326 (x6418 x8972) (x4789 x8972)) (ite x5971 (x5082 x8972) (x6418 x8972))))
(define-fun x1925 ((x8972 Int)) Int (ite x3478 (ite x6905 (x2683 x8972) (x6418 x8972)) (ite x5364 (ite x6905 (x2683 x8972) (x6418 x8972)) (x6418 x8972))))
(define-fun x3375 ((x8972 Int)) Int (ite x1559 (x6645 x8972) (x6418 x8972)))
(define-fun x3322 ((x8972 Int)) Int (ite x1134 (ite x2878 (x3300 x8972) (x1925 x8972)) (ite x4316 (x3375 x8972) (ite x7227 (x3375 x8972) (x6418 x8972)))))
(define-fun x3182 ((x8972 Int)) Int (ite x4092 (x6418 x8972) (ite x5206 (x3314 x8972) (x6418 x8972))))
(define-fun x521 ((x8972 Int)) Int (ite x7236 (ite x6510 (x3322 x8972) (x3182 x8972)) (ite x3474 (x4185 x8972) (x6418 x8972))))
(define-fun x7545 ((x8972 Int)) Int (ite x3527 (x6997 x8972) (x6418 x8972)))
(define-fun x319 ((x8972 Int)) Int (ite x4227 (ite x5041 (x521 x8972) (x7545 x8972)) (ite x3848 (x2219 x8972) (x6418 x8972))))
(define-fun x7471 ((x8972 Int)) Int (ite x4228 (x7938 x8972) (x6418 x8972)))
(define-fun x3038 ((x8972 Int)) Int (ite x7590 (x6418 x8972) (ite x2516 (x319 x8972) (x7471 x8972))))
(define-fun x7991 ((x8972 Int)) Int (ite x4839 (ite x4235 (x6299 x8972) (x3038 x8972)) (ite x4600 (x6418 x8972) (ite x4235 (x6299 x8972) (x3038 x8972)))))
(define-fun x6998 ((x8972 Int)) Int (ite x1176 (x4884 x8972) (x1817 x8972)))
(define-fun x8319 ((x8972 Int)) Int (ite x4910 (ite x3326 (x1817 x8972) (x6998 x8972)) (ite x5971 (x2713 x8972) (x1817 x8972))))
(define-fun x525 ((x8972 Int)) Int (ite x3478 (ite x6905 (x1469 x8972) (x1817 x8972)) (ite x5364 (ite x6905 (x1469 x8972) (x1817 x8972)) (x1817 x8972))))
(define-fun x8652 ((x8972 Int)) Int (ite x1559 (x8181 x8972) (x1817 x8972)))
(define-fun x6773 ((x8972 Int)) Int (ite x1134 (ite x2878 (x8319 x8972) (x525 x8972)) (ite x4316 (x8652 x8972) (ite x7227 (x8652 x8972) (x1817 x8972)))))
(define-fun x6401 ((x8972 Int)) Int (ite x4092 (x1817 x8972) (ite x5206 (x8116 x8972) (x1817 x8972))))
(define-fun x341 ((x8972 Int)) Int (ite x7236 (ite x6510 (x6773 x8972) (x6401 x8972)) (ite x3474 (x152 x8972) (x1817 x8972))))
(define-fun x1169 ((x8972 Int)) Int (ite x3527 (x8165 x8972) (x1817 x8972)))
(define-fun x2957 ((x8972 Int)) Int (ite x4227 (ite x5041 (x341 x8972) (x1169 x8972)) (ite x3848 (x4133 x8972) (x1817 x8972))))
(define-fun x2315 ((x8972 Int)) Int (ite x4228 (x621 x8972) (x1817 x8972)))
(define-fun x5105 ((x8972 Int)) Int (ite x7590 (x1817 x8972) (ite x2516 (x2957 x8972) (x2315 x8972))))
(define-fun x6879 ((x8972 Int)) Int (ite x4839 (ite x4235 (x1817 x8972) (x5105 x8972)) (ite x4600 (x1817 x8972) (ite x4235 (x1817 x8972) (x5105 x8972)))))
(define-fun x295 ((x8972 Int)) Int (ite x1176 (x7420 x8972) (x2419 x8972)))
(define-fun x1058 ((x8972 Int)) Int (ite x4910 (ite x3326 (x2419 x8972) (x295 x8972)) (ite x5971 (x2588 x8972) (x2419 x8972))))
(define-fun x7178 ((x8972 Int)) Int (ite x3478 (ite x6905 (x6132 x8972) (x2419 x8972)) (ite x5364 (ite x6905 (x6132 x8972) (x2419 x8972)) (x2419 x8972))))
(define-fun x5292 ((x8972 Int)) Int (ite x1559 (x3973 x8972) (x2419 x8972)))
(define-fun x4399 ((x8972 Int)) Int (ite x1134 (ite x2878 (x1058 x8972) (x7178 x8972)) (ite x4316 (x5292 x8972) (ite x7227 (x5292 x8972) (x2419 x8972)))))
(define-fun x3643 ((x8972 Int)) Int (ite x4092 (x2419 x8972) (ite x5206 (x6750 x8972) (x2419 x8972))))
(define-fun x409 ((x8972 Int)) Int (ite x7236 (ite x6510 (x4399 x8972) (x3643 x8972)) (ite x3474 (x2578 x8972) (x2419 x8972))))
(define-fun x1118 ((x8972 Int)) Int (ite x3527 (x756 x8972) (x2419 x8972)))
(define-fun x31 ((x8972 Int)) Int (ite x4227 (ite x5041 (x409 x8972) (x1118 x8972)) (ite x3848 (x163 x8972) (x2419 x8972))))
(define-fun x8738 ((x8972 Int)) Int (ite x4228 (x3735 x8972) (x2419 x8972)))
(define-fun x3836 ((x8972 Int)) Int (ite x7590 (x2419 x8972) (ite x2516 (x31 x8972) (x8738 x8972))))
(define-fun x3831 ((x8972 Int)) Int (ite x4839 (ite x4235 (x2419 x8972) (x3836 x8972)) (ite x4600 (x2419 x8972) (ite x4235 (x2419 x8972) (x3836 x8972)))))
(define-fun x5740 ((x8972 Int)) Int (x7941 x8972))
(define-fun x8120 ((x8972 Int)) Int (ite x1176 (x6332 x8972) (x2190 x8972)))
(define-fun x3036 ((x8972 Int)) Int (ite x4910 (ite x3326 (x2190 x8972) (x8120 x8972)) (ite x5971 (x4848 x8972) (x2190 x8972))))
(define-fun x1917 ((x8972 Int)) Int (ite x3478 (ite x6905 (x5998 x8972) (x2190 x8972)) (ite x5364 (ite x6905 (x5998 x8972) (x2190 x8972)) (x2190 x8972))))
(define-fun x1253 ((x8972 Int)) Int (ite x1559 (x7979 x8972) (x2190 x8972)))
(define-fun x2788 ((x8972 Int)) Int (ite x1134 (ite x2878 (x3036 x8972) (x1917 x8972)) (ite x4316 (x1253 x8972) (ite x7227 (x1253 x8972) (x2190 x8972)))))
(define-fun x3640 ((x8972 Int)) Int (ite x4092 (x2190 x8972) (ite x5206 (x2302 x8972) (x2190 x8972))))
(define-fun x572 ((x8972 Int)) Int (ite x7236 (ite x6510 (x2788 x8972) (x3640 x8972)) (ite x3474 (x7975 x8972) (x2190 x8972))))
(define-fun x2892 ((x8972 Int)) Int (ite x3527 (x8880 x8972) (x2190 x8972)))
(define-fun x5623 ((x8972 Int)) Int (ite x4227 (ite x5041 (x572 x8972) (x2892 x8972)) (ite x3848 (x8350 x8972) (x2190 x8972))))
(define-fun x4598 ((x8972 Int)) Int (ite x4228 (x4334 x8972) (x2190 x8972)))
(define-fun x1455 ((x8972 Int)) Int (ite x7590 (x2190 x8972) (ite x2516 (x5623 x8972) (x4598 x8972))))
(define-fun x399 ((x8972 Int)) Int (ite x4839 (ite x4235 (x2190 x8972) (x1455 x8972)) (ite x4600 (x2190 x8972) (ite x4235 (x2190 x8972) (x1455 x8972)))))
(define-fun x3157 ((x8972 Int)) Int (ite x1176 (x2236 x8972) (x4125 x8972)))
(define-fun x3598 ((x8972 Int)) Int (ite x4910 (ite x3326 (x4125 x8972) (x3157 x8972)) (ite x5971 (x4276 x8972) (x4125 x8972))))
(define-fun x7965 ((x8972 Int)) Int (ite x3478 (ite x6905 (x961 x8972) (x4125 x8972)) (ite x5364 (ite x6905 (x961 x8972) (x4125 x8972)) (x4125 x8972))))
(define-fun x3337 ((x8972 Int)) Int (ite x1559 (x3008 x8972) (x4125 x8972)))
(define-fun x7294 ((x8972 Int)) Int (ite x1134 (ite x2878 (x3598 x8972) (x7965 x8972)) (ite x4316 (x3337 x8972) (ite x7227 (x3337 x8972) (x4125 x8972)))))
(define-fun x9089 ((x8972 Int)) Int (ite x4092 (x4125 x8972) (ite x5206 (x8114 x8972) (x4125 x8972))))
(define-fun x1805 ((x8972 Int)) Int (ite x7236 (ite x6510 (x7294 x8972) (x9089 x8972)) (ite x3474 (x5968 x8972) (x4125 x8972))))
(define-fun x7734 ((x8972 Int)) Int (ite x3527 (x1724 x8972) (x4125 x8972)))
(define-fun x3483 ((x8972 Int)) Int (ite x4227 (ite x5041 (x1805 x8972) (x7734 x8972)) (ite x3848 (x3922 x8972) (x4125 x8972))))
(define-fun x2278 ((x8972 Int)) Int (ite x4228 (x365 x8972) (x4125 x8972)))
(define-fun x3180 ((x8972 Int)) Int (ite x7590 (x4125 x8972) (ite x2516 (x3483 x8972) (x2278 x8972))))
(define-fun x6641 ((x8972 Int)) Int (ite x4839 (ite x4235 (x4125 x8972) (x3180 x8972)) (ite x4600 (x4125 x8972) (ite x4235 (x4125 x8972) (x3180 x8972)))))
(define-fun x7564 ((x8972 Int)) Int (x8841 x8972))
(define-fun x8891 ((x8972 Int)) Int (x8042 x8972))
(define-fun x7980 ((x8972 Int)) Int (ite x1176 (x7044 x8972) (x6546 x8972)))
(define-fun x7440 ((x8972 Int)) Int (ite x4910 (ite x3326 (x6546 x8972) (x7980 x8972)) (ite x5971 (x8571 x8972) (x6546 x8972))))
(define-fun x2828 ((x8972 Int)) Int (ite x3478 (ite x6905 (x5791 x8972) (x6546 x8972)) (ite x5364 (ite x6905 (x5791 x8972) (x6546 x8972)) (x6546 x8972))))
(define-fun x6225 ((x8972 Int)) Int (ite x1559 (x5539 x8972) (x6546 x8972)))
(define-fun x5629 ((x8972 Int)) Int (ite x1134 (ite x2878 (x7440 x8972) (x2828 x8972)) (ite x4316 (x6225 x8972) (ite x7227 (x6225 x8972) (x6546 x8972)))))
(define-fun x5147 ((x8972 Int)) Int (ite x4092 (x6546 x8972) (ite x5206 (x7620 x8972) (x6546 x8972))))
(define-fun x6974 ((x8972 Int)) Int (ite x7236 (ite x6510 (x5629 x8972) (x5147 x8972)) (ite x3474 (x2786 x8972) (x6546 x8972))))
(define-fun x5345 ((x8972 Int)) Int (ite x3527 (x323 x8972) (x6546 x8972)))
(define-fun x8836 ((x8972 Int)) Int (ite x4227 (ite x5041 (x6974 x8972) (x5345 x8972)) (ite x3848 (x718 x8972) (x6546 x8972))))
(define-fun x4281 ((x8972 Int)) Int (ite x4228 (x1371 x8972) (x6546 x8972)))
(define-fun x228 ((x8972 Int)) Int (ite x7590 (x6546 x8972) (ite x2516 (x8836 x8972) (x4281 x8972))))
(define-fun x4907 ((x8972 Int)) Int (ite x4839 (ite x4235 (x6546 x8972) (x228 x8972)) (ite x4600 (x6546 x8972) (ite x4235 (x6546 x8972) (x228 x8972)))))
(define-fun x4409 ((x8972 Int)) Int (ite x6905 (x5026 x8972) (x869 x8972)))
(define-fun x2946 ((x8972 Int)) Int (ite (= x464 x8972) x8673 (x4409 x8972)))
(define-fun x1389 ((x8972 Int)) Int (ite (= x4894 x8972) x5117 (x2946 x8972)))
(define-fun x6316 ((x8972 Int)) Int (ite (= x8972 x4894) x5464 (x5493 x8972)))
(define-fun x9094 ((x8972 Int)) Int (ite (= x464 x8972) x6080 (x6316 x8972)))
(define-fun x6795 ((x8972 Int)) Int (ite x1559 (x4187 x8972) (x9094 x8972)))
(define-fun x348 ((x8972 Int)) Int (ite (= x464 x8972) x6851 (x6795 x8972)))
(define-fun x6523 ((x8972 Int)) Int (ite (= x8972 x4894) x6456 (x348 x8972)))
(define-fun x8795 ((x8972 Int)) Int (ite x5206 (x184 x8972) (x3879 x8972)))
(define-fun x4694 ((x8972 Int)) Int (ite (= x464 x8972) x8704 (x8795 x8972)))
(define-fun x4344 ((x8972 Int)) Int (ite (= x8972 x4894) x6017 (x4694 x8972)))
(define-fun x6066 ((x8972 Int)) Int (ite x4235 (x5493 x8972) (ite x7590 (x5493 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x5493 x8972) (ite x1176 (x8004 x8972) (x5493 x8972))) (ite x5971 (x1047 x8972) (x5493 x8972))) (ite x3478 (x4409 x8972) (ite x5364 (x1389 x8972) (x5493 x8972)))) (ite x4316 (x6795 x8972) (ite x7227 (x6523 x8972) (x5493 x8972)))) (ite x4092 (x5493 x8972) (ite x6631 (x8795 x8972) (x4344 x8972)))) (ite x3474 (x8173 x8972) (x5493 x8972))) (ite x3527 (x6868 x8972) (x5493 x8972))) (ite x3848 (x8986 x8972) (x5493 x8972))) (ite x4228 (x7345 x8972) (x5493 x8972))))))
(define-fun x2123 ((x8972 Int)) Int (ite (= x8972 x6226) x8932 (x6066 x8972)))
(define-fun x1373 ((x8972 Int)) Int (ite (= x8972 x1306) x8939 (x2123 x8972)))
(define-fun x622 ((x8972 Int)) Int (ite x4839 (x6066 x8972) (ite x4600 (x3183 x8972) (x1373 x8972))))
(define-fun x1543 ((x8972 Int)) Int (ite x1176 (x3102 x8972) (x7192 x8972)))
(define-fun x8363 ((x8972 Int)) Int (ite x4910 (ite x3326 (x7192 x8972) (x1543 x8972)) (ite x5971 (x2351 x8972) (x7192 x8972))))
(define-fun x7025 ((x8972 Int)) Int (ite x3478 (ite x6905 (x7516 x8972) (x7192 x8972)) (ite x5364 (ite x6905 (x7516 x8972) (x7192 x8972)) (x7192 x8972))))
(define-fun x2617 ((x8972 Int)) Int (ite x1559 (x783 x8972) (x7192 x8972)))
(define-fun x7122 ((x8972 Int)) Int (ite x1134 (ite x2878 (x8363 x8972) (x7025 x8972)) (ite x4316 (x2617 x8972) (ite x7227 (x2617 x8972) (x7192 x8972)))))
(define-fun x321 ((x8972 Int)) Int (ite x4092 (x7192 x8972) (ite x5206 (x6004 x8972) (x7192 x8972))))
(define-fun x6022 ((x8972 Int)) Int (ite x7236 (ite x6510 (x7122 x8972) (x321 x8972)) (ite x3474 (x8648 x8972) (x7192 x8972))))
(define-fun x5816 ((x8972 Int)) Int (ite x3527 (x6699 x8972) (x7192 x8972)))
(define-fun x2501 ((x8972 Int)) Int (ite x4227 (ite x5041 (x6022 x8972) (x5816 x8972)) (ite x3848 (x3917 x8972) (x7192 x8972))))
(define-fun x6426 ((x8972 Int)) Int (ite x4228 (x281 x8972) (x7192 x8972)))
(define-fun x4451 ((x8972 Int)) Int (ite x7590 (x7192 x8972) (ite x2516 (x2501 x8972) (x6426 x8972))))
(define-fun x1277 ((x8972 Int)) Int (ite x4839 (ite x4235 (x7192 x8972) (x4451 x8972)) (ite x4600 (x7192 x8972) (ite x4235 (x7192 x8972) (x4451 x8972)))))
(define-fun x739 ((x8972 Int)) Int (ite x1176 (x130 x8972) (x4445 x8972)))
(define-fun x5529 ((x8972 Int)) Int (ite x4910 (ite x3326 (x4445 x8972) (x739 x8972)) (ite x5971 (x2449 x8972) (x4445 x8972))))
(define-fun x194 ((x8972 Int)) Int (ite x3478 (ite x6905 (x6933 x8972) (x4445 x8972)) (ite x5364 (ite x6905 (x6933 x8972) (x4445 x8972)) (x4445 x8972))))
(define-fun x7917 ((x8972 Int)) Int (ite x1559 (x6030 x8972) (x4445 x8972)))
(define-fun x1707 ((x8972 Int)) Int (ite x1134 (ite x2878 (x5529 x8972) (x194 x8972)) (ite x4316 (x7917 x8972) (ite x7227 (x7917 x8972) (x4445 x8972)))))
(define-fun x2895 ((x8972 Int)) Int (ite x4092 (x4445 x8972) (ite x5206 (x7138 x8972) (x4445 x8972))))
(define-fun x2688 ((x8972 Int)) Int (ite x7236 (ite x6510 (x1707 x8972) (x2895 x8972)) (ite x3474 (x6514 x8972) (x4445 x8972))))
(define-fun x920 ((x8972 Int)) Int (ite x3527 (x4194 x8972) (x4445 x8972)))
(define-fun x4664 ((x8972 Int)) Int (ite x4227 (ite x5041 (x2688 x8972) (x920 x8972)) (ite x3848 (x1034 x8972) (x4445 x8972))))
(define-fun x3715 ((x8972 Int)) Int (ite x4228 (x1876 x8972) (x4445 x8972)))
(define-fun x6444 ((x8972 Int)) Int (ite x7590 (x4445 x8972) (ite x2516 (x4664 x8972) (x3715 x8972))))
(define-fun x2058 ((x8972 Int)) Int (ite x4839 (ite x4235 (x4445 x8972) (x6444 x8972)) (ite x4600 (x4445 x8972) (ite x4235 (x4445 x8972) (x6444 x8972)))))
(define-fun x5663 ((x8972 Int)) Int (x3011 x8972))
(define-fun x4784 ((x8972 Int)) Int (x1991 x8972))
(define-fun x6593 ((x8972 Int)) Int (ite x1176 (x2883 x8972) (x4017 x8972)))
(define-fun x6571 ((x8972 Int)) Int (ite x4910 (ite x3326 (x4017 x8972) (x6593 x8972)) (ite x5971 (x1313 x8972) (x4017 x8972))))
(define-fun x6033 ((x8972 Int)) Int (ite x3478 (ite x6905 (x7241 x8972) (x4017 x8972)) (ite x5364 (ite x6905 (x7241 x8972) (x4017 x8972)) (x4017 x8972))))
(define-fun x4878 ((x8972 Int)) Int (ite x1559 (x5418 x8972) (x4017 x8972)))
(define-fun x3596 ((x8972 Int)) Int (ite x1134 (ite x2878 (x6571 x8972) (x6033 x8972)) (ite x4316 (x4878 x8972) (ite x7227 (x4878 x8972) (x4017 x8972)))))
(define-fun x7045 ((x8972 Int)) Int (ite x4092 (x4017 x8972) (ite x5206 (x5896 x8972) (x4017 x8972))))
(define-fun x1491 ((x8972 Int)) Int (ite x7236 (ite x6510 (x3596 x8972) (x7045 x8972)) (ite x3474 (x5229 x8972) (x4017 x8972))))
(define-fun x976 ((x8972 Int)) Int (ite x3527 (x2035 x8972) (x4017 x8972)))
(define-fun x8600 ((x8972 Int)) Int (ite x4227 (ite x5041 (x1491 x8972) (x976 x8972)) (ite x3848 (x7767 x8972) (x4017 x8972))))
(define-fun x8751 ((x8972 Int)) Int (ite x4228 (x7725 x8972) (x4017 x8972)))
(define-fun x1183 ((x8972 Int)) Int (ite x7590 (x4017 x8972) (ite x2516 (x8600 x8972) (x8751 x8972))))
(define-fun x3897 ((x8972 Int)) Int (ite x4839 (ite x4235 (x4017 x8972) (x1183 x8972)) (ite x4600 (x4017 x8972) (ite x4235 (x4017 x8972) (x1183 x8972)))))
(define-fun x7201 ((x8972 Int)) Int (ite x1176 (x8408 x8972) (x1443 x8972)))
(define-fun x6636 ((x8972 Int)) Int (ite x4910 (ite x3326 (x1443 x8972) (x7201 x8972)) (ite x5971 (x9027 x8972) (x1443 x8972))))
(define-fun x42 ((x8972 Int)) Int (ite x3478 (ite x6905 (x3165 x8972) (x1443 x8972)) (ite x5364 (ite x6905 (x3165 x8972) (x1443 x8972)) (x1443 x8972))))
(define-fun x761 ((x8972 Int)) Int (ite x1559 (x2556 x8972) (x1443 x8972)))
(define-fun x7670 ((x8972 Int)) Int (ite x1134 (ite x2878 (x6636 x8972) (x42 x8972)) (ite x4316 (x761 x8972) (ite x7227 (x761 x8972) (x1443 x8972)))))
(define-fun x8997 ((x8972 Int)) Int (ite x4092 (x1443 x8972) (ite x5206 (x5859 x8972) (x1443 x8972))))
(define-fun x8651 ((x8972 Int)) Int (ite x7236 (ite x6510 (x7670 x8972) (x8997 x8972)) (ite x3474 (x334 x8972) (x1443 x8972))))
(define-fun x3840 ((x8972 Int)) Int (ite x3527 (x5158 x8972) (x1443 x8972)))
(define-fun x6193 ((x8972 Int)) Int (ite x4227 (ite x5041 (x8651 x8972) (x3840 x8972)) (ite x3848 (x2519 x8972) (x1443 x8972))))
(define-fun x9118 ((x8972 Int)) Int (ite x4228 (x5849 x8972) (x1443 x8972)))
(define-fun x4123 ((x8972 Int)) Int (ite x7590 (x1443 x8972) (ite x2516 (x6193 x8972) (x9118 x8972))))
(define-fun x1982 ((x8972 Int)) Int (ite x4839 (ite x4235 (x1443 x8972) (x4123 x8972)) (ite x4600 (x1443 x8972) (ite x4235 (x1443 x8972) (x4123 x8972)))))
(define-fun x6929 ((x8972 Int)) Int (ite x1176 (x8002 x8972) (x5676 x8972)))
(define-fun x6559 ((x8972 Int)) Int (ite x4910 (ite x3326 (x5676 x8972) (x6929 x8972)) (ite x5971 (x5617 x8972) (x5676 x8972))))
(define-fun x1829 ((x8972 Int)) Int (ite x3478 (ite x6905 (x7316 x8972) (x5676 x8972)) (ite x5364 (ite x6905 (x7316 x8972) (x5676 x8972)) (x5676 x8972))))
(define-fun x507 ((x8972 Int)) Int (ite x1559 (x589 x8972) (x5676 x8972)))
(define-fun x532 ((x8972 Int)) Int (ite x1134 (ite x2878 (x6559 x8972) (x1829 x8972)) (ite x4316 (x507 x8972) (ite x7227 (x507 x8972) (x5676 x8972)))))
(define-fun x2232 ((x8972 Int)) Int (ite x4092 (x5676 x8972) (ite x5206 (x8695 x8972) (x5676 x8972))))
(define-fun x5744 ((x8972 Int)) Int (ite x7236 (ite x6510 (x532 x8972) (x2232 x8972)) (ite x3474 (x6375 x8972) (x5676 x8972))))
(define-fun x2473 ((x8972 Int)) Int (ite x3527 (x7683 x8972) (x5676 x8972)))
(define-fun x8623 ((x8972 Int)) Int (ite x4227 (ite x5041 (x5744 x8972) (x2473 x8972)) (ite x3848 (x3841 x8972) (x5676 x8972))))
(define-fun x7559 ((x8972 Int)) Int (ite x4228 (x1580 x8972) (x5676 x8972)))
(define-fun x3405 ((x8972 Int)) Int (ite x7590 (x5676 x8972) (ite x2516 (x8623 x8972) (x7559 x8972))))
(define-fun x7972 ((x8972 Int)) Int (ite x4839 (ite x4235 (x5676 x8972) (x3405 x8972)) (ite x4600 (x5676 x8972) (ite x4235 (x5676 x8972) (x3405 x8972)))))
(define-fun x8603 ((x8972 Int)) Int (ite x1176 (x6592 x8972) (x6342 x8972)))
(define-fun x4881 ((x8972 Int)) Int (ite x4910 (ite x3326 (x6342 x8972) (x8603 x8972)) (ite x5971 (x6330 x8972) (x6342 x8972))))
(define-fun x8295 ((x8972 Int)) Int (ite x3478 (ite x6905 (x8217 x8972) (x6342 x8972)) (ite x5364 (ite x6905 (x8217 x8972) (x6342 x8972)) (x6342 x8972))))
(define-fun x3136 ((x8972 Int)) Int (ite x1559 (x5954 x8972) (x6342 x8972)))
(define-fun x3579 ((x8972 Int)) Int (ite x1134 (ite x2878 (x4881 x8972) (x8295 x8972)) (ite x4316 (x3136 x8972) (ite x7227 (x3136 x8972) (x6342 x8972)))))
(define-fun x5777 ((x8972 Int)) Int (ite x4092 (x6342 x8972) (ite x5206 (x190 x8972) (x6342 x8972))))
(define-fun x8204 ((x8972 Int)) Int (ite x7236 (ite x6510 (x3579 x8972) (x5777 x8972)) (ite x3474 (x7093 x8972) (x6342 x8972))))
(define-fun x1459 ((x8972 Int)) Int (ite x3527 (x908 x8972) (x6342 x8972)))
(define-fun x9113 ((x8972 Int)) Int (ite x4227 (ite x5041 (x8204 x8972) (x1459 x8972)) (ite x3848 (x5882 x8972) (x6342 x8972))))
(define-fun x6485 ((x8972 Int)) Int (ite x4228 (x5077 x8972) (x6342 x8972)))
(define-fun x3225 ((x8972 Int)) Int (ite x7590 (x6342 x8972) (ite x2516 (x9113 x8972) (x6485 x8972))))
(define-fun x4122 ((x8972 Int)) Int (ite x4839 (ite x4235 (x6342 x8972) (x3225 x8972)) (ite x4600 (x6342 x8972) (ite x4235 (x6342 x8972) (x3225 x8972)))))
(define-fun x7212 ((x8972 Int)) Int (x7445 x8972))
(define-fun x5134 ((x8972 Int)) Int (ite x1176 (x4701 x8972) (x5943 x8972)))
(define-fun x4362 ((x8972 Int)) Int (ite x4910 (ite x3326 (x5943 x8972) (x5134 x8972)) (ite x5971 (x6544 x8972) (x5943 x8972))))
(define-fun x119 ((x8972 Int)) Int (ite x3478 (ite x6905 (x6835 x8972) (x5943 x8972)) (ite x5364 (ite x6905 (x6835 x8972) (x5943 x8972)) (x5943 x8972))))
(define-fun x7370 ((x8972 Int)) Int (ite x1559 (x7066 x8972) (x5943 x8972)))
(define-fun x3130 ((x8972 Int)) Int (ite x1134 (ite x2878 (x4362 x8972) (x119 x8972)) (ite x4316 (x7370 x8972) (ite x7227 (x7370 x8972) (x5943 x8972)))))
(define-fun x1236 ((x8972 Int)) Int (ite x4092 (x5943 x8972) (ite x5206 (x3060 x8972) (x5943 x8972))))
(define-fun x5389 ((x8972 Int)) Int (ite x7236 (ite x6510 (x3130 x8972) (x1236 x8972)) (ite x3474 (x5803 x8972) (x5943 x8972))))
(define-fun x1859 ((x8972 Int)) Int (ite x3527 (x8068 x8972) (x5943 x8972)))
(define-fun x7388 ((x8972 Int)) Int (ite x4227 (ite x5041 (x5389 x8972) (x1859 x8972)) (ite x3848 (x5579 x8972) (x5943 x8972))))
(define-fun x7047 ((x8972 Int)) Int (ite x4228 (x8672 x8972) (x5943 x8972)))
(define-fun x2392 ((x8972 Int)) Int (ite x7590 (x5943 x8972) (ite x2516 (x7388 x8972) (x7047 x8972))))
(define-fun x1545 ((x8972 Int)) Int (ite x4839 (ite x4235 (x5943 x8972) (x2392 x8972)) (ite x4600 (x5943 x8972) (ite x4235 (x5943 x8972) (x2392 x8972)))))
(define-fun x3195 ((x8972 Int)) Int (ite (= x8972 x14) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x2029 x8972)))
(define-fun x5414 ((x8972 Int)) Int (ite (= x5983 x8972) x2239 (x3195 x8972)))
(define-fun x5614 ((x8972 Int)) Int (ite (= x8972 4) 17 (x3566 x8972)))
(define-fun x3186 ((x8972 Int)) Int (ite (and (>= x8972 0) (> 36 x8972)) (x5614 x8972) (x8456 x8972)))
(define-fun x8808 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x171 ((x8972 Int)) Int (ite (and (> 36 x8972) (>= x8972 0)) (x8808 x8972) (x8456 x8972)))
(define-fun x3792 ((x8972 Int)) Int (ite (= 128 x8972) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x7429 x8972)))
(define-fun x1842 ((x8972 Int)) Int (ite (= x8972 132) x2508 (x3792 x8972)))
(define-fun x3115 ((x8972 Int)) Int (ite (= 164 x8972) x86 (x1842 x8972)))
(define-fun x2766 ((x8972 Int)) Int (ite (= x8972 196) x1212 (x3115 x8972)))
(define-fun x636 ((x8972 Int)) Int (ite (= x8972 228) x1907 (x2766 x8972)))
(define-fun x7166 ((x8972 Int)) Int (ite (= 160 x8972) x4355 (x7429 x8972)))
(define-fun x4944 ((x8972 Int)) Int (ite (= x8972 192) x6039 (x7166 x8972)))
(define-fun x5715 ((x8972 Int)) Int (ite (= x8972 224) x3019 (x4944 x8972)))
(define-fun x3271 ((x8972 Int)) Int (ite (= 256 x8972) x3805 (x5715 x8972)))
(define-fun x8879 ((x8972 Int)) Int (ite (= x8972 288) x7342 (x3271 x8972)))
(define-fun x4606 ((x8972 Int)) Int (ite (= x8972 320) x894 (x8879 x8972)))
(define-fun x4987 ((x8972 Int)) Int (ite (= x8972 352) x910 (x4606 x8972)))
(define-fun x4859 ((x8972 Int)) Int (ite (= 384 x8972) x4659 (x4987 x8972)))
(define-fun x6043 ((x8972 Int)) Int (ite (= x8972 416) x4549 (x4859 x8972)))
(define-fun x6605 ((x8972 Int)) Int (ite (= x8972 448) x3264 (x6043 x8972)))
(define-fun x8689 ((x8972 Int)) Int (ite (= 128 x8972) 320 (x6605 x8972)))
(define-fun x3987 ((x8972 Int)) Int (ite (= x8972 480) 0 (x8689 x8972)))
(define-fun x109 ((x8972 Int)) Int (ite (= x8972 160) x168 (x7429 x8972)))
(define-fun x3108 ((x8972 Int)) Int (ite (= 192 x8972) x7988 (x109 x8972)))
(define-fun x2979 ((x8972 Int)) Int (ite (= x8972 224) x853 (x3108 x8972)))
(define-fun x1042 ((x8972 Int)) Int (ite (= 256 x8972) x7847 (x2979 x8972)))
(define-fun x8347 ((x8972 Int)) Int (ite (= x8972 288) x1258 (x1042 x8972)))
(define-fun x5735 ((x8972 Int)) Int (ite (= x8972 320) x5081 (x8347 x8972)))
(define-fun x4728 ((x8972 Int)) Int (ite (= 352 x8972) x5506 (x5735 x8972)))
(define-fun x2904 ((x8972 Int)) Int (ite (= x8972 384) x5338 (x4728 x8972)))
(define-fun x2709 ((x8972 Int)) Int (ite (= 416 x8972) x8245 (x2904 x8972)))
(define-fun x5136 ((x8972 Int)) Int (ite (= x8972 448) x1556 (x2709 x8972)))
(define-fun x8370 ((x8972 Int)) Int (ite (= 128 x8972) 320 (x5136 x8972)))
(define-fun x4597 ((x8972 Int)) Int (ite (= x8972 480) 0 (x8370 x8972)))
(define-fun x1203 ((x8972 Int)) Int (ite (= x8972 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x7429 x8972)))
(define-fun x694 ((x8972 Int)) Int (ite (= x8972 132) x2053 (x1203 x8972)))
(define-fun x11 ((x8972 Int)) Int (ite (= x8972 164) x7155 (x694 x8972)))
(define-fun x8417 ((x8972 Int)) Int (ite (= 128 x8972) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x7429 x8972)))
(define-fun x6398 ((x8972 Int)) Int (ite (= 132 x8972) x253 (x8417 x8972)))
(define-fun x7112 ((x8972 Int)) Int (ite (= 164 x8972) x5906 (x6398 x8972)))
(define-fun x6607 ((x8972 Int)) Int (ite (= x8972 x4894) x6770 (x622 x8972)))
(define-fun x2559 ((x8972 Int)) Int (ite (= x8972 x7655) x917 (x6607 x8972)))
(define-fun x5509 ((x8972 Int)) Int (ite (and (>= x8972 128) (< x8972 160)) (x5682 (- x8972 128)) (x7112 x8972)))
(define-fun x370 ((x8972 Int)) Int 0)
(define-fun x2562 ((x8972 Int)) Int (ite (= x8972 160) x3072 (x7429 x8972)))
(define-fun x3736 ((x8972 Int)) Int (ite (= x8972 192) x2430 (x2562 x8972)))
(define-fun x820 ((x8972 Int)) Int (ite (= x8972 224) x8258 (x3736 x8972)))
(define-fun x298 ((x8972 Int)) Int (ite (= 256 x8972) x2380 (x820 x8972)))
(define-fun x5387 ((x8972 Int)) Int (ite (= x8972 288) x2167 (x298 x8972)))
(define-fun x1165 ((x8972 Int)) Int (ite (= 320 x8972) x875 (x5387 x8972)))
(define-fun x3357 ((x8972 Int)) Int (ite (= 352 x8972) x1647 (x1165 x8972)))
(define-fun x6987 ((x8972 Int)) Int (ite (= x8972 384) x573 (x3357 x8972)))
(define-fun x3648 ((x8972 Int)) Int (ite (= 416 x8972) x8649 (x6987 x8972)))
(define-fun x2488 ((x8972 Int)) Int (ite (= 448 x8972) x5919 (x3648 x8972)))
(define-fun x4492 ((x8972 Int)) Int (ite (= 128 x8972) 320 (x2488 x8972)))
(define-fun x4914 ((x8972 Int)) Int (ite (= 480 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7825 x8972)))
(define-fun x7348 ((x8972 Int)) Int (ite (= 484 x8972) 32 (x4914 x8972)))
(define-fun x1325 ((x8972 Int)) Int (ite (= 516 x8972) 14 (x7348 x8972)))
(define-fun x4627 ((x8972 Int)) Int (ite (= 548 x8972) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x1325 x8972)))
(define-fun x1330 ((x8972 Int)) Int (ite (and (> 100 x8972) (<= 0 x8972)) (x4627 (+ x8972 480)) (x8456 x8972)))
(define-fun x7352 ((x8972 Int)) Int (ite (= 480 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7825 x8972)))
(define-fun x4015 ((x8972 Int)) Int (ite (= x8972 484) 32 (x7352 x8972)))
(define-fun x1530 ((x8972 Int)) Int (ite (= 516 x8972) 17 (x4015 x8972)))
(define-fun x3476 ((x8972 Int)) Int (ite (= x8972 548) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x1530 x8972)))
(define-fun x2155 ((x8972 Int)) Int (ite (and (> 100 x8972) (>= x8972 0)) (x3476 (+ x8972 480)) (x8456 x8972)))
(define-fun x5603 ((x8972 Int)) Int (ite (= 480 x8972) 0 (x4492 x8972)))
(define-fun x7712 ((x8972 Int)) Int (ite (= 128 x8972) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x7429 x8972)))
(define-fun x2288 ((x8972 Int)) Int (ite (= 132 x8972) x4121 (x7712 x8972)))
(define-fun x385 ((x8972 Int)) Int (ite (= x8972 164) x6032 (x2288 x8972)))
(define-fun x5281 ((x8972 Int)) Int (ite (= 196 x8972) x8 (x385 x8972)))
(define-fun x2057 ((x8972 Int)) Int (ite (= x4894 x8972) x7293 (x622 x8972)))
(define-fun x6036 ((x8972 Int)) Int (ite (= x8972 x7655) x3438 (x2057 x8972)))
(define-fun x1841 ((x8972 Int)) Int 0)
(define-fun x5497 ((x8972 Int)) Int (ite (= x8972 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x7429 x8972)))
(define-fun x3783 ((x8972 Int)) Int (ite (= x8972 132) x9087 (x5497 x8972)))
(define-fun x1896 ((x8972 Int)) Int (ite (= x8972 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x7429 x8972)))
(define-fun x80 ((x8972 Int)) Int (ite (= x8972 132) x1791 (x1896 x8972)))
(define-fun x4551 ((x8972 Int)) Int (ite (= x8972 4) 17 (x3566 x8972)))
(define-fun x6203 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> 36 x8972)) (x4551 x8972) (x8456 x8972)))
(define-fun x6054 ((x8972 Int)) Int (ite (= 128 x8972) 48755886422350550937420582033662272622158303343164848365600209189876434731008 (x3566 x8972)))
(define-fun x2156 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 4)) (x6054 (+ x8972 128)) (x8456 x8972)))
(define-fun x8200 ((x8972 Int)) Int (ite x4821 (x8456 x8972) (ite x593 (x6203 x8972) (ite x3361 (x2156 x8972) (x3186 x8972)))))
(define-fun x3477 ((x8972 Int)) Int (ite (= x8972 0) x3730 (x8456 x8972)))
(define-fun x8291 ((x8972 Int)) Int (ite x2247 (x8200 x8972) (x3477 x8972)))
(define-fun x6143 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x7825 x8972)))
(define-fun x6161 ((x8972 Int)) Int (ite (and (< x8972 36) (<= 0 x8972)) (x6143 x8972) (x8456 x8972)))
(define-fun x5569 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x3052 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 36)) (x5569 x8972) (x8456 x8972)))
(define-fun x447 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x2235 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 36)) (x447 x8972) (x8456 x8972)))
(define-fun x743 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x103 ((x8972 Int)) Int (ite (and (> 36 x8972) (>= x8972 0)) (x743 x8972) (x8456 x8972)))
(define-fun x6062 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x1964 ((x8972 Int)) Int (ite (and (< x8972 36) (>= x8972 0)) (x6062 x8972) (x8456 x8972)))
(define-fun x3900 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x7825 x8972)))
(define-fun x7439 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 36)) (x3900 x8972) (x8456 x8972)))
(define-fun x5465 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x8772 ((x8972 Int)) Int (ite (and (< x8972 36) (>= x8972 0)) (x5465 x8972) (x8456 x8972)))
(define-fun x7755 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x1882 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 36)) (x7755 x8972) (x8456 x8972)))
(define-fun x6272 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x7825 x8972)))
(define-fun x609 ((x8972 Int)) Int (ite (and (< x8972 36) (<= 0 x8972)) (x6272 x8972) (x8456 x8972)))
(define-fun x7649 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x6094 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 36)) (x7649 x8972) (x8456 x8972)))
(define-fun x3253 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x7825 x8972)))
(define-fun x4287 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> 36 x8972)) (x3253 x8972) (x8456 x8972)))
(define-fun x3839 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x383 ((x8972 Int)) Int (ite (and (< x8972 36) (>= x8972 0)) (x3839 x8972) (x8456 x8972)))
(define-fun x7490 ((x8972 Int)) Int (ite (= x8972 x6378) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7825 x8972)))
(define-fun x8088 ((x8972 Int)) Int (ite (= x8972 x3079) 32 (x7490 x8972)))
(define-fun x1161 ((x8972 Int)) Int (ite (= x5778 x8972) 17 (x8088 x8972)))
(define-fun x6366 ((x8972 Int)) Int (ite (= x8972 x2705) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x1161 x8972)))
(define-fun x4205 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x8193)) (x6366 (+ x8972 x6378)) (x8456 x8972)))
(define-fun x3067 ((x8972 Int)) Int (ite (= x4628 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7825 x8972)))
(define-fun x1172 ((x8972 Int)) Int (ite (= x8972 x7726) 32 (x3067 x8972)))
(define-fun x4486 ((x8972 Int)) Int (ite (= x362 x8972) 17 (x1172 x8972)))
(define-fun x3112 ((x8972 Int)) Int (ite (= x8972 x823) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x4486 x8972)))
(define-fun x2286 ((x8972 Int)) Int (ite (and (> x5153 x8972) (<= 0 x8972)) (x3112 (+ x4628 x8972)) (x8456 x8972)))
(define-fun x6058 ((x8972 Int)) Int (ite (= x8972 x1251) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7825 x8972)))
(define-fun x5251 ((x8972 Int)) Int (ite (= x8972 x3094) 32 (x6058 x8972)))
(define-fun x4259 ((x8972 Int)) Int (ite (= x8972 x4474) 17 (x5251 x8972)))
(define-fun x4368 ((x8972 Int)) Int (ite (= x6323 x8972) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x4259 x8972)))
(define-fun x4150 ((x8972 Int)) Int (ite (and (>= x8972 0) (> x1695 x8972)) (x4368 (+ x8972 x1251)) (x8456 x8972)))
(define-fun x648 ((x8972 Int)) Int (ite (= x549 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7825 x8972)))
(define-fun x1422 ((x8972 Int)) Int (ite (= x8972 x1990) 32 (x648 x8972)))
(define-fun x3351 ((x8972 Int)) Int (ite (= x6512 x8972) 14 (x1422 x8972)))
(define-fun x946 ((x8972 Int)) Int (ite (= x6718 x8972) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x3351 x8972)))
(define-fun x1319 ((x8972 Int)) Int (ite (and (< x8972 x7569) (>= x8972 0)) (x946 (+ x549 x8972)) (x8456 x8972)))
(define-fun x3812 ((x8972 Int)) Int (ite (= x4151 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7825 x8972)))
(define-fun x3192 ((x8972 Int)) Int (ite (= x8972 x8711) 32 (x3812 x8972)))
(define-fun x3181 ((x8972 Int)) Int (ite (= x8972 x3158) 14 (x3192 x8972)))
(define-fun x4468 ((x8972 Int)) Int (ite (= x8972 x6493) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x3181 x8972)))
(define-fun x4148 ((x8972 Int)) Int (ite (and (< x8972 x1846) (<= 0 x8972)) (x4468 (+ x4151 x8972)) (x8456 x8972)))
(define-fun x2153 ((x8972 Int)) Int (ite (= x8972 x1251) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7825 x8972)))
(define-fun x8638 ((x8972 Int)) Int (ite (= x8972 x405) 32 (x2153 x8972)))
(define-fun x3362 ((x8972 Int)) Int (ite (= x1975 x8972) 14 (x8638 x8972)))
(define-fun x6153 ((x8972 Int)) Int (ite (= x2861 x8972) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x3362 x8972)))
(define-fun x5142 ((x8972 Int)) Int (ite (and (> x7666 x8972) (>= x8972 0)) (x6153 (+ x8972 x1251)) (x8456 x8972)))
(define-fun x8487 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x6985 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 36)) (x8487 x8972) (x8456 x8972)))
(define-fun x1984 ((x8972 Int)) Int (ite (and (< x8972 x6163) (>= x8972 0)) (x7821 x8972) (x7825 x8972)))
(define-fun x1609 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x6163)) (x1984 x8972) (x8456 x8972)))
(define-fun x4602 ((x8972 Int)) Int (ite (and (< x8972 x4626) (<= 0 x8972)) (x3885 x8972) (x7825 x8972)))
(define-fun x316 ((x8972 Int)) Int (ite (and (>= x8972 0) (> x4626 x8972)) (x4602 x8972) (x8456 x8972)))
(define-fun x2254 ((x8972 Int)) Int (ite x5875 (x1404 x8972) (ite x7252 (x1404 x8972) (x1841 x8972))))
(define-fun x8153 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> x4543 x8972)) (x2254 x8972) (x7825 x8972)))
(define-fun x8771 ((x8972 Int)) Int (ite (and (< x8972 x4543) (>= x8972 0)) (x8153 x8972) (x8456 x8972)))
(define-fun x3778 ((x8972 Int)) Int 0)
(define-fun x5834 ((x8972 Int)) Int (ite x3589 (x1155 x8972) (ite x1818 (x1155 x8972) (x3778 x8972))))
(define-fun x8581 ((x8972 Int)) Int (ite (and (< x8972 x6568) (>= x8972 0)) (x5834 x8972) (x7825 x8972)))
(define-fun x2707 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> x6568 x8972)) (x8581 x8972) (x8456 x8972)))
(define-fun x6971 ((x8972 Int)) Int (ite x8804 (x370 x8972) (x5682 x8972)))
(define-fun x7301 ((x8972 Int)) Int (ite (and (> x5116 x8972) (>= x8972 0)) (x6971 x8972) (x7825 x8972)))
(define-fun x6147 ((x8972 Int)) Int (ite (and (>= x8972 0) (> x5116 x8972)) (x7301 x8972) (x8456 x8972)))
(define-fun x8983 ((x8972 Int)) Int (ite (and (< x8972 x4135) (<= 0 x8972)) (x1145 x8972) (x7825 x8972)))
(define-fun x6340 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x4135)) (x8983 x8972) (x8456 x8972)))
(define-fun x79 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> x852 x8972)) (x2768 x8972) (x7825 x8972)))
(define-fun x4074 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 x852)) (x79 x8972) (x8456 x8972)))
(define-fun x6877 ((x8972 Int)) Int (ite (and (< x8972 x5327) (>= x8972 0)) (x4504 x8972) (x7825 x8972)))
(define-fun x8282 ((x8972 Int)) Int (ite (and (> x5327 x8972) (<= 0 x8972)) (x6877 x8972) (x8456 x8972)))
(define-fun x1260 ((x8972 Int)) Int (ite (and (< x8972 x2358) (>= x8972 0)) (x6075 x8972) (x7825 x8972)))
(define-fun x5632 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> x2358 x8972)) (x1260 x8972) (x8456 x8972)))
(define-fun x1625 ((x8972 Int)) Int (ite (= x8972 4) 17 (x7825 x8972)))
(define-fun x7179 ((x8972 Int)) Int (ite (and (< x8972 36) (<= 0 x8972)) (x1625 x8972) (x8456 x8972)))
(define-fun x9074 ((x8972 Int)) Int (ite x1085 (x6161 x8972) (ite x2733 (x3052 x8972) (ite x7974 (x2235 x8972) (ite x7353 (x103 x8972) (ite x2160 (x1964 x8972) (ite x4444 (x7439 x8972) (ite x7658 (x8772 x8972) (ite x7652 (x1882 x8972) (ite x6047 (x609 x8972) (ite x8916 (x6094 x8972) (ite x6081 (x4287 x8972) (ite x6671 (x383 x8972) (ite x5836 (x4205 x8972) (ite x1714 (x2155 x8972) (ite x8960 (x2286 x8972) (ite x2857 (x4150 x8972) (ite x695 (x8456 x8972) (ite x4120 (x1319 x8972) (ite x7879 (x1330 x8972) (ite x859 (x4148 x8972) (ite x5462 (x5142 x8972) (ite x8473 (x6985 x8972) (ite x2479 (x1609 x8972) (ite x3542 (x8456 x8972) (ite x4096 (x316 x8972) (ite x8169 (x8456 x8972) (ite x8477 (x8771 x8972) (ite x7470 (x8456 x8972) (ite x1114 (x2707 x8972) (ite x3218 (x8456 x8972) (ite x8280 (x8456 x8972) (ite x5802 (x6147 x8972) (ite x3934 (x6340 x8972) (ite x4303 (x8456 x8972) (ite x7459 (x4074 x8972) (ite x4260 (x8456 x8972) (ite x8945 (x8282 x8972) (ite x6937 (x8456 x8972) (ite x300 (x5632 x8972) (ite x7125 (x8456 x8972) (ite x762 (x7179 x8972) (ite x1892 (x171 x8972) (x8456 x8972))))))))))))))))))))))))))))))))))))))))))))
(define-fun x8336 ((x8972 Int)) Int (ite (= 0 x8972) x6391 (x8456 x8972)))
(define-fun x2545 ((x8972 Int)) Int (ite x6585 (x9074 x8972) (x8336 x8972)))
(define-fun x4618 ((x8972 Int)) Int (ite x7964 (x8291 x8972) (x2545 x8972)))
(define-fun x2276 ((x8972 Int)) Int (ite (and (>= x8972 x14) (< x8972 (+ x14 32))) (x4618 (- x8972 x14)) (x3880 x8972)))
(define-fun x4064 ((x8972 Int)) Int (ite x5565 (x4122 x8972) (ite x1220 (x127 x8972) (x4122 x8972))))
(define-fun x6916 ((x8972 Int)) Int (ite x7238 (x6441 x8972) (x4122 x8972)))
(define-fun x2686 ((x8972 Int)) Int (ite x2677 (x3964 x8972) (x4122 x8972)))
(define-fun x3002 ((x8972 Int)) Int (ite x585 (ite x4383 (x4064 x8972) (x6916 x8972)) (ite x5875 (x2686 x8972) (ite x7252 (x2686 x8972) (x4122 x8972)))))
(define-fun x7414 ((x8972 Int)) Int (ite x3589 (ite x3387 (x3257 x8972) (x4122 x8972)) (ite x1818 (ite x3387 (x3257 x8972) (x4122 x8972)) (x4122 x8972))))
(define-fun x3601 ((x8972 Int)) Int (ite x496 (x8466 x8972) (x4122 x8972)))
(define-fun x8185 ((x8972 Int)) Int (ite x8471 (ite x8830 (x3002 x8972) (x7414 x8972)) (ite x8804 (x4122 x8972) (x3601 x8972))))
(define-fun x5888 ((x8972 Int)) Int (ite x2977 (x449 x8972) (x4122 x8972)))
(define-fun x5538 ((x8972 Int)) Int (ite x8149 (ite x1050 (x8185 x8972) (x5888 x8972)) (ite x4192 (x524 x8972) (x4122 x8972))))
(define-fun x7506 ((x8972 Int)) Int (ite x2576 (x5761 x8972) (x4122 x8972)))
(define-fun x6200 ((x8972 Int)) Int (ite x2997 (ite x3763 (x5538 x8972) (x7506 x8972)) (ite x8858 (x1593 x8972) (x4122 x8972))))
(define-fun x5677 ((x8972 Int)) Int (ite x7964 (x4122 x8972) (ite x6585 (x4122 x8972) (x6200 x8972))))
(define-fun x5510 ((x8972 Int)) Int (ite x7964 (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))) (ite x6585 (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))) (ite x2997 (ite x3763 (ite x8149 (ite x1050 (ite x8471 (ite x8830 (ite x585 (ite x4383 (ite x5565 (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))) (ite x1220 (x5346 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))))) (ite x7238 (x8854 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))))) (ite x5875 (ite x2677 (x3726 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972)))))))) (ite x7252 (ite x2677 (x3726 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972)))))))) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972)))))))))) (ite x3589 (ite x3387 (x6454 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972)))))))) (ite x1818 (ite x3387 (x6454 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972)))))))) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972)))))))))) (ite x8804 (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))) (ite x496 (x3254 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972)))))))))) (ite x2977 (x111 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))))) (ite x4192 (x1899 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))))) (ite x2576 (x4191 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))))) (ite x8858 (x3845 x8972) (ite x4839 (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))) (ite x4600 (x4634 x8972) (ite x4235 (x4634 x8972) (ite x7590 (x4634 x8972) (ite x2516 (ite x4227 (ite x5041 (ite x7236 (ite x6510 (ite x1134 (ite x2878 (ite x4910 (ite x3326 (x4634 x8972) (ite x1176 (x5216 x8972) (x4634 x8972))) (ite x5971 (x1669 x8972) (x4634 x8972))) (ite x3478 (ite x6905 (x2258 x8972) (x4634 x8972)) (ite x5364 (ite x6905 (x2258 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4316 (ite x1559 (x5156 x8972) (x4634 x8972)) (ite x7227 (ite x1559 (x5156 x8972) (x4634 x8972)) (x4634 x8972)))) (ite x4092 (x4634 x8972) (ite x5206 (x6586 x8972) (x4634 x8972)))) (ite x3474 (x7990 x8972) (x4634 x8972))) (ite x3527 (x8933 x8972) (x4634 x8972))) (ite x3848 (x7884 x8972) (x4634 x8972))) (ite x4228 (x468 x8972) (x4634 x8972))))))))))))
(define-fun x2036 ((x8972 Int)) Int (ite x5565 (x1764 x8972) (ite x1220 (x2395 x8972) (x1764 x8972))))
(define-fun x1119 ((x8972 Int)) Int (ite x7238 (x2837 x8972) (x1764 x8972)))
(define-fun x1302 ((x8972 Int)) Int (ite x2677 (x8074 x8972) (x1764 x8972)))
(define-fun x1630 ((x8972 Int)) Int (ite x585 (ite x4383 (x2036 x8972) (x1119 x8972)) (ite x5875 (x1302 x8972) (ite x7252 (x1302 x8972) (x1764 x8972)))))
(define-fun x387 ((x8972 Int)) Int (ite x3589 (ite x3387 (x7602 x8972) (x1764 x8972)) (ite x1818 (ite x3387 (x7602 x8972) (x1764 x8972)) (x1764 x8972))))
(define-fun x564 ((x8972 Int)) Int (ite x496 (x8323 x8972) (x1764 x8972)))
(define-fun x5137 ((x8972 Int)) Int (ite x8471 (ite x8830 (x1630 x8972) (x387 x8972)) (ite x8804 (x1764 x8972) (x564 x8972))))
(define-fun x8788 ((x8972 Int)) Int (ite x2977 (x7475 x8972) (x1764 x8972)))
(define-fun x5261 ((x8972 Int)) Int (ite x8149 (ite x1050 (x5137 x8972) (x8788 x8972)) (ite x4192 (x8380 x8972) (x1764 x8972))))
(define-fun x3092 ((x8972 Int)) Int (ite x2576 (x1716 x8972) (x1764 x8972)))
(define-fun x3327 ((x8972 Int)) Int (ite x2997 (ite x3763 (x5261 x8972) (x3092 x8972)) (ite x8858 (x5286 x8972) (x1764 x8972))))
(define-fun x384 ((x8972 Int)) Int (ite x7964 (x1764 x8972) (ite x6585 (x1764 x8972) (x3327 x8972))))
(define-fun x6912 ((x8972 Int)) Int (ite (= x1929 x8972) 0 (x384 x8972)))
(define-fun x803 ((x8972 Int)) Int (ite (= x8972 x892) 1 (x5677 x8972)))
(define-fun x2511 ((x8972 Int)) Int (ite x5565 (x2058 x8972) (ite x1220 (x2634 x8972) (x2058 x8972))))
(define-fun x6243 ((x8972 Int)) Int (ite x7238 (x5174 x8972) (x2058 x8972)))
(define-fun x4280 ((x8972 Int)) Int (ite x2677 (x6639 x8972) (x2058 x8972)))
(define-fun x6903 ((x8972 Int)) Int (ite x585 (ite x4383 (x2511 x8972) (x6243 x8972)) (ite x5875 (x4280 x8972) (ite x7252 (x4280 x8972) (x2058 x8972)))))
(define-fun x4332 ((x8972 Int)) Int (ite x3589 (ite x3387 (x4116 x8972) (x2058 x8972)) (ite x1818 (ite x3387 (x4116 x8972) (x2058 x8972)) (x2058 x8972))))
(define-fun x4922 ((x8972 Int)) Int (ite x496 (x1751 x8972) (x2058 x8972)))
(define-fun x2523 ((x8972 Int)) Int (ite x8471 (ite x8830 (x6903 x8972) (x4332 x8972)) (ite x8804 (x2058 x8972) (x4922 x8972))))
(define-fun x964 ((x8972 Int)) Int (ite x2977 (x7230 x8972) (x2058 x8972)))
(define-fun x6117 ((x8972 Int)) Int (ite x8149 (ite x1050 (x2523 x8972) (x964 x8972)) (ite x4192 (x24 x8972) (x2058 x8972))))
(define-fun x8790 ((x8972 Int)) Int (ite x2576 (x816 x8972) (x2058 x8972)))
(define-fun x2306 ((x8972 Int)) Int (ite x2997 (ite x3763 (x6117 x8972) (x8790 x8972)) (ite x8858 (x7629 x8972) (x2058 x8972))))
(define-fun x2598 ((x8972 Int)) Int (ite x7964 (x2058 x8972) (ite x6585 (x2058 x8972) (x2306 x8972))))
(define-fun x3291 ((x8972 Int)) Int (ite (= x8972 x6164) x9127 (x2598 x8972)))
(define-fun x1806 ((x8972 Int)) Int (ite x5565 (x1982 x8972) (ite x1220 (x2824 x8972) (x1982 x8972))))
(define-fun x2496 ((x8972 Int)) Int (ite x7238 (x8113 x8972) (x1982 x8972)))
(define-fun x7507 ((x8972 Int)) Int (ite x2677 (x6119 x8972) (x1982 x8972)))
(define-fun x6763 ((x8972 Int)) Int (ite x585 (ite x4383 (x1806 x8972) (x2496 x8972)) (ite x5875 (x7507 x8972) (ite x7252 (x7507 x8972) (x1982 x8972)))))
(define-fun x4762 ((x8972 Int)) Int (ite x3589 (ite x3387 (x1454 x8972) (x1982 x8972)) (ite x1818 (ite x3387 (x1454 x8972) (x1982 x8972)) (x1982 x8972))))
(define-fun x658 ((x8972 Int)) Int (ite x496 (x8119 x8972) (x1982 x8972)))
(define-fun x2464 ((x8972 Int)) Int (ite x8471 (ite x8830 (x6763 x8972) (x4762 x8972)) (ite x8804 (x1982 x8972) (x658 x8972))))
(define-fun x715 ((x8972 Int)) Int (ite x2977 (x2346 x8972) (x1982 x8972)))
(define-fun x8130 ((x8972 Int)) Int (ite x8149 (ite x1050 (x2464 x8972) (x715 x8972)) (ite x4192 (x5481 x8972) (x1982 x8972))))
(define-fun x785 ((x8972 Int)) Int (ite x2576 (x3927 x8972) (x1982 x8972)))
(define-fun x8000 ((x8972 Int)) Int (ite x2997 (ite x3763 (x8130 x8972) (x785 x8972)) (ite x8858 (x6124 x8972) (x1982 x8972))))
(define-fun x6267 ((x8972 Int)) Int (ite x7964 (x1982 x8972) (ite x6585 (x1982 x8972) (x8000 x8972))))
(define-fun x4812 ((x8972 Int)) Int (ite (= x8972 x6242) 0 (x6267 x8972)))
(define-fun x640 ((x8972 Int)) Int (ite x4235 (x3465 x8972) (x4360 x8972)))
(define-fun x4660 ((x8972 Int)) Int (ite x4235 (x4739 x8972) (x3809 x8972)))
(define-fun x5320 ((x8972 Int)) Int (ite x4235 (x2419 x8972) (x3836 x8972)))
(define-fun x4370 ((x8972 Int)) Int (ite x4235 (x2502 x8972) (x5846 x8972)))
(define-fun x4679 ((x8972 Int)) Int (ite x4235 (x1817 x8972) (x5105 x8972)))
(define-fun x8199 ((x8972 Int)) Int (x6139 x8972))
(define-fun x445 ((x8972 Int)) Int (ite x4235 (x2190 x8972) (x1455 x8972)))
(define-fun x8811 ((x8972 Int)) Int (ite x4235 (x4125 x8972) (x3180 x8972)))
(define-fun x641 ((x8972 Int)) Int (x5879 x8972))
(define-fun x2889 ((x8972 Int)) Int (ite x4235 (x6546 x8972) (x228 x8972)))
(define-fun x6706 ((x8972 Int)) Int (x579 x8972))
(define-fun x3886 ((x8972 Int)) Int (ite x4235 (x7192 x8972) (x4451 x8972)))
(define-fun x6881 ((x8972 Int)) Int (ite x4235 (x6299 x8972) (x3038 x8972)))
(define-fun x8862 ((x8972 Int)) Int (ite x4235 (x4445 x8972) (x6444 x8972)))
(define-fun x7971 ((x8972 Int)) Int (ite x4235 (x4017 x8972) (x1183 x8972)))
(define-fun x1512 ((x8972 Int)) Int (x7856 x8972))
(define-fun x2836 ((x8972 Int)) Int (x539 x8972))
(define-fun x825 ((x8972 Int)) Int (ite x4235 (x1443 x8972) (x4123 x8972)))
(define-fun x2799 ((x8972 Int)) Int (ite x4235 (x5676 x8972) (x3405 x8972)))
(define-fun x610 ((x8972 Int)) Int (ite x4235 (x6342 x8972) (x3225 x8972)))
(define-fun x6334 ((x8972 Int)) Int (x2798 x8972))
(define-fun x2112 ((x8972 Int)) Int (ite x4235 (x5943 x8972) (x2392 x8972)))
(define-fun x4807 ((x8972 Int)) Int (ite x6583 (ite x5646 (x4445 x8972) (x817 x8972)) (x1189 x8972)))
(define-fun x5996 ((x8972 Int)) Int (ite x7263 (x5633 x8972) (ite x8995 (x4807 x8972) (x192 x8972))))
(define-fun x5683 ((x8972 Int)) Int (ite x2150 (ite x2949 (x5996 x8972) (x7120 x8972)) (x4245 x8972)))
(define-fun x1934 ((x8972 Int)) Int (ite x1137 (x2178 x8972) (ite x5855 (x5618 x8972) (x5683 x8972))))
(define-fun x8578 ((x8972 Int)) Int (ite x2362 (x1934 x8972) (x3082 x8972)))
(define-fun x1643 ((x8972 Int)) Int (ite x6583 (ite x5646 (x6342 x8972) (x1414 x8972)) (x4869 x8972)))
(define-fun x6103 ((x8972 Int)) Int (ite x7263 (x7912 x8972) (ite x8995 (x1643 x8972) (x2492 x8972))))
(define-fun x1190 ((x8972 Int)) Int (ite x2150 (ite x2949 (x6103 x8972) (x3662 x8972)) (x9022 x8972)))
(define-fun x3458 ((x8972 Int)) Int (ite x1137 (x6640 x8972) (ite x5855 (x7753 x8972) (x1190 x8972))))
(define-fun x8852 ((x8972 Int)) Int (ite x2362 (x3458 x8972) (x229 x8972)))
(define-fun x7054 ((x8972 Int)) Int (ite x6583 (ite x5646 (x7192 x8972) (x6263 x8972)) (x6217 x8972)))
(define-fun x8861 ((x8972 Int)) Int (ite x7263 (x6145 x8972) (ite x8995 (x7054 x8972) (x5570 x8972))))
(define-fun x4156 ((x8972 Int)) Int (ite x2150 (ite x2949 (x8861 x8972) (x4740 x8972)) (x5566 x8972)))
(define-fun x2672 ((x8972 Int)) Int (ite x1137 (x5733 x8972) (ite x5855 (x2600 x8972) (x4156 x8972))))
(define-fun x8018 ((x8972 Int)) Int (ite x2362 (x2672 x8972) (x7572 x8972)))
(define-fun x8509 ((x8972 Int)) Int (ite x6583 (ite x5646 (x1817 x8972) (x5385 x8972)) (x3086 x8972)))
(define-fun x4750 ((x8972 Int)) Int (ite x7263 (x3678 x8972) (ite x8995 (x8509 x8972) (x3904 x8972))))
(define-fun x7198 ((x8972 Int)) Int (ite x2150 (ite x2949 (x4750 x8972) (x2418 x8972)) (x5613 x8972)))
(define-fun x145 ((x8972 Int)) Int (ite x1137 (x7278 x8972) (ite x5855 (x4359 x8972) (x7198 x8972))))
(define-fun x7203 ((x8972 Int)) Int (ite x2362 (x145 x8972) (x5957 x8972)))
(define-fun x6925 ((x8972 Int)) Int (ite x6583 (ite x5646 (x2190 x8972) (x5217 x8972)) (x8888 x8972)))
(define-fun x3902 ((x8972 Int)) Int (ite x7263 (x2950 x8972) (ite x8995 (x6925 x8972) (x7902 x8972))))
(define-fun x5039 ((x8972 Int)) Int (ite x2150 (ite x2949 (x3902 x8972) (x7651 x8972)) (x7772 x8972)))
(define-fun x8768 ((x8972 Int)) Int (ite x1137 (x4438 x8972) (ite x5855 (x5309 x8972) (x5039 x8972))))
(define-fun x8294 ((x8972 Int)) Int (ite x2362 (x8768 x8972) (x729 x8972)))
(define-fun x8307 ((x8972 Int)) Int (ite x6583 (ite x5646 (x6418 x8972) (x352 x8972)) (x2472 x8972)))
(define-fun x4538 ((x8972 Int)) Int (ite x7263 (x5374 x8972) (ite x8995 (x8307 x8972) (x6748 x8972))))
(define-fun x5413 ((x8972 Int)) Int (ite x2150 (ite x2949 (x4538 x8972) (x2207 x8972)) (x5860 x8972)))
(define-fun x7630 ((x8972 Int)) Int (ite x1137 (x1208 x8972) (ite x5855 (x6428 x8972) (x5413 x8972))))
(define-fun x2811 ((x8972 Int)) Int (ite x2362 (x7630 x8972) (x8719 x8972)))
(define-fun x2163 ((x8972 Int)) Int (ite x6583 (ite x5646 (x1443 x8972) (x4846 x8972)) (x3952 x8972)))
(define-fun x3378 ((x8972 Int)) Int (ite x7263 (x4103 x8972) (ite x8995 (x2163 x8972) (x5972 x8972))))
(define-fun x4500 ((x8972 Int)) Int (ite x2150 (ite x2949 (x3378 x8972) (x2374 x8972)) (x314 x8972)))
(define-fun x5099 ((x8972 Int)) Int (ite x1137 (x7302 x8972) (ite x5855 (x7143 x8972) (x4500 x8972))))
(define-fun x3937 ((x8972 Int)) Int (ite x2362 (x5099 x8972) (x6035 x8972)))
(define-fun x7865 ((x8972 Int)) Int (ite x6583 (ite x5646 (x3465 x8972) (x2793 x8972)) (x1246 x8972)))
(define-fun x2560 ((x8972 Int)) Int (ite x7263 (x8848 x8972) (ite x8995 (x7865 x8972) (x431 x8972))))
(define-fun x5814 ((x8972 Int)) Int (ite x2150 (ite x2949 (x2560 x8972) (x8867 x8972)) (x2536 x8972)))
(define-fun x7765 ((x8972 Int)) Int (ite x1137 (x7587 x8972) (ite x5855 (x6532 x8972) (x5814 x8972))))
(define-fun x5863 ((x8972 Int)) Int (ite x2362 (x7765 x8972) (x932 x8972)))
(define-fun x7997 ((x8972 Int)) Int (ite x5855 (x7753 x8972) (x1190 x8972)))
(define-fun x2969 ((x8972 Int)) Int (ite x5855 (x5618 x8972) (x5683 x8972)))
(define-fun x554 ((x8972 Int)) Int (ite x5855 (x4359 x8972) (x7198 x8972)))
(define-fun x8285 ((x8972 Int)) Int (ite x5855 (x2600 x8972) (x4156 x8972)))
(define-fun x7465 ((x8972 Int)) Int (ite x5855 (x5309 x8972) (x5039 x8972)))
(define-fun x8590 ((x8972 Int)) Int (ite x5855 (x6532 x8972) (x5814 x8972)))
(define-fun x1793 ((x8972 Int)) Int (ite x5855 (x6428 x8972) (x5413 x8972)))
(define-fun x7921 ((x8972 Int)) Int (ite x5855 (x7143 x8972) (x4500 x8972)))
(define-fun x3914 ((x8972 Int)) Int (ite x8995 (x8307 x8972) (x6748 x8972)))
(define-fun x7065 ((x8972 Int)) Int (ite x8995 (x7865 x8972) (x431 x8972)))
(define-fun x2880 ((x8972 Int)) Int (ite x8995 (x2163 x8972) (x5972 x8972)))
(define-fun x4138 ((x8972 Int)) Int (ite x8995 (x1643 x8972) (x2492 x8972)))
(define-fun x2875 ((x8972 Int)) Int (ite x8995 (x8509 x8972) (x3904 x8972)))
(define-fun x2583 ((x8972 Int)) Int (ite x8995 (x6925 x8972) (x7902 x8972)))
(define-fun x804 ((x8972 Int)) Int (ite x8995 (x4807 x8972) (x192 x8972)))
(define-fun x5952 ((x8972 Int)) Int (ite x8995 (x7054 x8972) (x5570 x8972)))
(define-fun x3933 ((x8972 Int)) Int (ite x5646 (x1817 x8972) (x5385 x8972)))
(define-fun x428 ((x8972 Int)) Int (ite x5646 (x4445 x8972) (x817 x8972)))
(define-fun x3317 ((x8972 Int)) Int (ite x5646 (x6342 x8972) (x1414 x8972)))
(define-fun x2256 ((x8972 Int)) Int (ite x5646 (x7192 x8972) (x6263 x8972)))
(define-fun x9092 ((x8972 Int)) Int (ite x5646 (x3465 x8972) (x2793 x8972)))
(define-fun x8820 ((x8972 Int)) Int (ite x5646 (x2190 x8972) (x5217 x8972)))
(define-fun x4777 ((x8972 Int)) Int (ite x5646 (x1443 x8972) (x4846 x8972)))
(define-fun x5585 ((x8972 Int)) Int (ite x5646 (x6418 x8972) (x352 x8972)))
(define-fun x7500 ((x8972 Int)) Int (ite x2949 (x5996 x8972) (x7120 x8972)))
(define-fun x7669 ((x8972 Int)) Int (ite x2949 (x8861 x8972) (x4740 x8972)))
(define-fun x2925 ((x8972 Int)) Int (ite x2949 (x6103 x8972) (x3662 x8972)))
(define-fun x3896 ((x8972 Int)) Int (ite x2949 (x3378 x8972) (x2374 x8972)))
(define-fun x8551 ((x8972 Int)) Int (ite x2949 (x4750 x8972) (x2418 x8972)))
(define-fun x608 ((x8972 Int)) Int (ite x2949 (x3902 x8972) (x7651 x8972)))
(define-fun x3485 ((x8972 Int)) Int (ite x2949 (x4538 x8972) (x2207 x8972)))
(define-fun x1484 ((x8972 Int)) Int (ite x2949 (x2560 x8972) (x8867 x8972)))
(define-fun x260 ((x8972 Int)) Int (ite (= x714 x8972) x6973 (x7871 x8972)))
(define-fun x6446 ((x8972 Int)) Int (ite x8809 (x7871 x8972) (x260 x8972)))
(define-fun x286 ((x8972 Int)) Int (ite (= 480 x8972) x8745 (x6446 x8972)))
(define-fun x7346 ((x8972 Int)) Int (ite x9104 (x286 x8972) (x7430 x8972)))
(define-fun x478 ((x8972 Int)) Int (ite (= x4442 x8972) x5407 (x7346 x8972)))
(define-fun x3683 ((x8972 Int)) Int (ite (= x4246 x8972) x5373 (x478 x8972)))
(define-fun x8896 ((x8972 Int)) Int (ite (= x4162 x8972) x4369 (x3683 x8972)))
(define-fun x7059 ((x8972 Int)) Int (ite (= x8972 x8602) x247 (x8896 x8972)))
(define-fun x7304 ((x8972 Int)) Int (ite (= x4592 x8972) x8241 (x7059 x8972)))
(define-fun x2228 ((x8972 Int)) Int (ite (= x6686 x8972) x4268 (x7304 x8972)))
(define-fun x6345 ((x8972 Int)) Int (ite (= x7677 x8972) x1790 (x2228 x8972)))
(define-fun x1575 ((x8972 Int)) Int (ite (= x1209 x8972) x7051 (x6345 x8972)))
(define-fun x7453 ((x8972 Int)) Int (ite (= x4426 x8972) x8250 (x1575 x8972)))
(define-fun x7661 ((x8972 Int)) Int (ite (= x8972 x3342) x2411 (x7453 x8972)))
(define-fun x5689 ((x8972 Int)) Int (ite (= x3175 x8972) x2240 (x7661 x8972)))
(define-fun x1267 ((x8972 Int)) Int (ite (= x4923 x8972) x7191 (x5689 x8972)))
(define-fun x2305 ((x8972 Int)) Int (ite x1611 (x5689 x8972) (x1267 x8972)))
(define-fun x3910 ((x8972 Int)) Int (ite (= x8972 x6174) x3745 (x2305 x8972)))
(define-fun x6104 ((x8972 Int)) Int (ite (= x6174 x8972) 0 (x5689 x8972)))
(define-fun x5302 ((x8972 Int)) Int (ite x6095 (x3910 x8972) (x6104 x8972)))
(define-fun x3588 ((x8972 Int)) Int (ite (= x8972 x4678) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x5302 x8972)))
(define-fun x5067 ((x8972 Int)) Int (ite (= x7338 x8972) x3577 (x3588 x8972)))
(define-fun x7254 ((x8972 Int)) Int (ite (= x1503 x8972) 128 (x5067 x8972)))
(define-fun x6197 ((x8972 Int)) Int (ite (= x8972 x7937) x4023 (x7254 x8972)))
(define-fun x5143 ((x8972 Int)) Int (ite (= x7927 x8972) x8299 (x6197 x8972)))
(define-fun x4386 ((x8972 Int)) Int (ite (= x8972 x500) x5084 (x5143 x8972)))
(define-fun x1055 ((x8972 Int)) Int (ite (= x8972 x299) x5262 (x4386 x8972)))
(define-fun x4347 ((x8972 Int)) Int (ite (= x7622 x8972) x3907 (x6898 x8972)))
(define-fun x6803 ((x8972 Int)) Int (ite x1311 (x6898 x8972) (x4347 x8972)))
(define-fun x1507 ((x8972 Int)) Int (ite (= 480 x8972) x8742 (x6803 x8972)))
(define-fun x9016 ((x8972 Int)) Int (ite x5344 (x1507 x8972) (x8342 x8972)))
(define-fun x6957 ((x8972 Int)) Int (ite (= x3494 x8972) x7888 (x9016 x8972)))
(define-fun x2763 ((x8972 Int)) Int (ite (= x8972 x178) x3898 (x6957 x8972)))
(define-fun x6758 ((x8972 Int)) Int (ite (= x8972 x5284) x8523 (x2763 x8972)))
(define-fun x697 ((x8972 Int)) Int (ite (= x3301 x8972) x9062 (x6758 x8972)))
(define-fun x3687 ((x8972 Int)) Int (ite (= x4577 x8972) x151 (x697 x8972)))
(define-fun x1658 ((x8972 Int)) Int (ite (= x5315 x8972) x5046 (x3687 x8972)))
(define-fun x1010 ((x8972 Int)) Int (ite (= x6432 x8972) x5057 (x1658 x8972)))
(define-fun x3288 ((x8972 Int)) Int (ite (= x1607 x8972) x267 (x1010 x8972)))
(define-fun x3842 ((x8972 Int)) Int (ite (= x4567 x8972) x7469 (x3288 x8972)))
(define-fun x8488 ((x8972 Int)) Int (ite (= x7935 x8972) x5124 (x3842 x8972)))
(define-fun x6553 ((x8972 Int)) Int (ite (= x4153 x8972) x7889 (x8488 x8972)))
(define-fun x4537 ((x8972 Int)) Int (ite (= x8972 x1107) x3259 (x6553 x8972)))
(define-fun x8913 ((x8972 Int)) Int (ite x4342 (x6553 x8972) (x4537 x8972)))
(define-fun x4790 ((x8972 Int)) Int (ite (= x8972 x2797) x2628 (x8913 x8972)))
(define-fun x1521 ((x8972 Int)) Int (ite (= x8972 x2797) 0 (x6553 x8972)))
(define-fun x6059 ((x8972 Int)) Int (ite x7483 (x4790 x8972) (x1521 x8972)))
(define-fun x4424 ((x8972 Int)) Int (ite (= x4670 x8972) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x6059 x8972)))
(define-fun x4957 ((x8972 Int)) Int (ite (= x1467 x8972) x4108 (x4424 x8972)))
(define-fun x4160 ((x8972 Int)) Int (ite (= x3818 x8972) 128 (x4957 x8972)))
(define-fun x5945 ((x8972 Int)) Int (ite (= x489 x8972) x7829 (x4160 x8972)))
(define-fun x7863 ((x8972 Int)) Int (ite (= x8972 x2263) x1914 (x5945 x8972)))
(define-fun x6079 ((x8972 Int)) Int (ite (= x8972 x676) x3837 (x7863 x8972)))
(define-fun x5188 ((x8972 Int)) Int (ite (= x8972 x1811) x1181 (x6079 x8972)))
(define-fun x6165 ((x8972 Int)) Int (ite (= x8972 x581) x7400 (x5106 x8972)))
(define-fun x4183 ((x8972 Int)) Int (ite x2333 (x5106 x8972) (x6165 x8972)))
(define-fun x2493 ((x8972 Int)) Int (ite (= 480 x8972) x5762 (x4183 x8972)))
(define-fun x8620 ((x8972 Int)) Int (ite x994 (x2493 x8972) (x7452 x8972)))
(define-fun x4559 ((x8972 Int)) Int (ite (= x5367 x8972) x8431 (x8620 x8972)))
(define-fun x6637 ((x8972 Int)) Int (ite (= x3698 x8972) x3992 (x4559 x8972)))
(define-fun x1231 ((x8972 Int)) Int (ite (= x8972 x4909) x2147 (x6637 x8972)))
(define-fun x5254 ((x8972 Int)) Int (ite (= x8972 x5659) x5316 (x1231 x8972)))
(define-fun x645 ((x8972 Int)) Int (ite (= x8972 x924) x2494 (x5254 x8972)))
(define-fun x5638 ((x8972 Int)) Int (ite (= x8972 x2933) x1038 (x645 x8972)))
(define-fun x6766 ((x8972 Int)) Int (ite (= x8972 x1729) x6435 (x5638 x8972)))
(define-fun x2791 ((x8972 Int)) Int (ite (= x6596 x8972) x6102 (x6766 x8972)))
(define-fun x693 ((x8972 Int)) Int (ite (= x8972 x2113) x4373 (x2791 x8972)))
(define-fun x6996 ((x8972 Int)) Int (ite (= x1375 x8972) x4630 (x693 x8972)))
(define-fun x2701 ((x8972 Int)) Int (ite (= x5608 x8972) x7950 (x6996 x8972)))
(define-fun x9132 ((x8972 Int)) Int (ite (= x5795 x8972) x3625 (x2701 x8972)))
(define-fun x6031 ((x8972 Int)) Int (ite x7087 (x2701 x8972) (x9132 x8972)))
(define-fun x5253 ((x8972 Int)) Int (ite (= x8972 x5937) x4837 (x6031 x8972)))
(define-fun x4212 ((x8972 Int)) Int (ite (= x5937 x8972) 0 (x2701 x8972)))
(define-fun x5805 ((x8972 Int)) Int (ite x3290 (x5253 x8972) (x4212 x8972)))
(define-fun x6087 ((x8972 Int)) Int (ite (= x8972 x6337) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x5805 x8972)))
(define-fun x862 ((x8972 Int)) Int (ite (= x8972 x8065) x6883 (x6087 x8972)))
(define-fun x5556 ((x8972 Int)) Int (ite (= x8972 x1844) 128 (x862 x8972)))
(define-fun x2702 ((x8972 Int)) Int (ite (= x322 x8972) x1910 (x5556 x8972)))
(define-fun x26 ((x8972 Int)) Int (ite (= x8972 x7914) x5234 (x2702 x8972)))
(define-fun x3779 ((x8972 Int)) Int (ite (= x8972 x8045) x8898 (x26 x8972)))
(define-fun x6293 ((x8972 Int)) Int (ite (= x8972 x1219) x53 (x3779 x8972)))
(define-fun x5017 ((x8972 Int)) Int (ite (= x4047 x8972) x2685 (x1055 x8972)))
(define-fun x6824 ((x8972 Int)) Int (ite x2726 (x1055 x8972) (ite x8478 (x4386 x8972) (ite x7519 (x5143 x8972) (ite x7196 (x6197 x8972) (x5017 x8972))))))
(define-fun x4615 ((x8972 Int)) Int (ite (= x257 x8972) 0 (x6824 x8972)))
(define-fun x8823 ((x8972 Int)) Int (ite (= x707 x8972) x262 (x4615 x8972)))
(define-fun x4493 ((x8972 Int)) Int (ite (= x4351 x8972) x7762 (x8823 x8972)))
(define-fun x2625 ((x8972 Int)) Int (ite (= x8972 x8894) x1645 (x4493 x8972)))
(define-fun x8420 ((x8972 Int)) Int (ite (= x69 x8972) x7004 (x2625 x8972)))
(define-fun x7385 ((x8972 Int)) Int (ite (= x7068 x8972) x7742 (x8420 x8972)))
(define-fun x6291 ((x8972 Int)) Int (ite (= x949 x8972) x5341 (x7385 x8972)))
(define-fun x6680 ((x8972 Int)) Int (ite (= x1966 x8972) x7114 (x6291 x8972)))
(define-fun x2223 ((x8972 Int)) Int (ite x5932 (x6291 x8972) (ite x6056 (x7385 x8972) (ite x5310 (x8420 x8972) (ite x5905 (x2625 x8972) (x6680 x8972))))))
(define-fun x8723 ((x8972 Int)) Int (ite (= x8972 x798) 0 (x2223 x8972)))
(define-fun x2831 ((x8972 Int)) Int (ite (= x4894 x8972) x933 (x2332 x8972)))
(define-fun x8134 ((x8972 Int)) Int (ite (= x8869 x8972) x4419 (x2831 x8972)))
(define-fun x542 ((x8972 Int)) Int (ite (= x7194 x8972) x4916 (x5188 x8972)))
(define-fun x4416 ((x8972 Int)) Int (ite x9044 (x5188 x8972) (ite x8407 (x6079 x8972) (ite x561 (x7863 x8972) (ite x2118 (x5945 x8972) (x542 x8972))))))
(define-fun x8207 ((x8972 Int)) Int (ite (= x8972 x36) 0 (x4416 x8972)))
(define-fun x1032 ((x8972 Int)) Int (ite (= x8607 x8972) x8309 (x8207 x8972)))
(define-fun x8103 ((x8972 Int)) Int (ite (= x8972 x2367) x8812 (x1032 x8972)))
(define-fun x1604 ((x8972 Int)) Int (ite (= x8972 x1959) x7149 (x8103 x8972)))
(define-fun x1122 ((x8972 Int)) Int (ite (= x8972 x9128) x6354 (x1604 x8972)))
(define-fun x6515 ((x8972 Int)) Int (ite (= x8972 x2507) x8874 (x1122 x8972)))
(define-fun x3526 ((x8972 Int)) Int (ite (= x8972 x1063) x4425 (x6515 x8972)))
(define-fun x2217 ((x8972 Int)) Int (ite (= x8972 x3702) x7267 (x6293 x8972)))
(define-fun x4786 ((x8972 Int)) Int (ite x6743 (x6293 x8972) (ite x9115 (x3779 x8972) (ite x3893 (x26 x8972) (ite x5417 (x2702 x8972) (x2217 x8972))))))
(define-fun x3089 ((x8972 Int)) Int (ite (= x6534 x8972) 0 (x4786 x8972)))
(define-fun x5430 ((x8972 Int)) Int (ite (= x8972 x5546) x8335 (x3089 x8972)))
(define-fun x4325 ((x8972 Int)) Int (ite (= x8972 x5561) x4065 (x5430 x8972)))
(define-fun x8722 ((x8972 Int)) Int (ite (= x8972 x808) x725 (x4325 x8972)))
(define-fun x5808 ((x8972 Int)) Int (ite (= x8972 x6520) x5255 (x8722 x8972)))
(define-fun x1254 ((x8972 Int)) Int (ite (= x8972 x9056) x4395 (x5808 x8972)))
(define-fun x8006 ((x8972 Int)) Int (ite (= x2170 x8972) x2165 (x1254 x8972)))
(define-fun x7875 ((x8972 Int)) Int (ite (= x8972 x2110) x8565 (x3526 x8972)))
(define-fun x8089 ((x8972 Int)) Int (ite x9065 (x3526 x8972) (ite x8036 (x6515 x8972) (ite x6977 (x1122 x8972) (ite x8395 (x1604 x8972) (x7875 x8972))))))
(define-fun x8378 ((x8972 Int)) Int (ite (= x8972 x8934) 0 (x8089 x8972)))
(define-fun x122 ((x8972 Int)) Int (ite (= x842 x8972) x1457 (x8006 x8972)))
(define-fun x1062 ((x8972 Int)) Int (ite x3219 (x8006 x8972) (ite x2777 (x1254 x8972) (ite x5773 (x5808 x8972) (ite x3365 (x8722 x8972) (x122 x8972))))))
(define-fun x3144 ((x8972 Int)) Int (ite (= x8972 x6906) 0 (x1062 x8972)))
(define-fun x1693 ((x8972 Int)) Int (x6139 x8972))
(define-fun x5249 ((x8972 Int)) Int (x5879 x8972))
(define-fun x12 ((x8972 Int)) Int (x7856 x8972))
(define-fun x8135 ((x8972 Int)) Int (x539 x8972))
(define-fun x337 ((x8972 Int)) Int (x579 x8972))
(define-fun x6266 ((x8972 Int)) Int (x2798 x8972))
(define-fun x6407 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4282 x8972)))
(define-fun x8911 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> 36 x8972)) (x6407 x8972) (x6195 x8972)))
(define-fun x8131 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x6575)) (x8460 x8972) (x4282 x8972)))
(define-fun x7928 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x6575)) (x8131 x8972) (x6195 x8972)))
(define-fun x4142 ((x8972 Int)) Int (ite x2516 (x6107 x8972) (x5412 x8972)))
(define-fun x374 ((x8972 Int)) Int (ite x2516 (x5623 x8972) (x4598 x8972)))
(define-fun x8826 ((x8972 Int)) Int (ite x2516 (x2957 x8972) (x2315 x8972)))
(define-fun x2111 ((x8972 Int)) Int (ite x2516 (x3483 x8972) (x2278 x8972)))
(define-fun x8553 ((x8972 Int)) Int (ite x2516 (x907 x8972) (x713 x8972)))
(define-fun x7433 ((x8972 Int)) Int (ite x2516 (x9019 x8972) (x2038 x8972)))
(define-fun x7580 ((x8972 Int)) Int (ite x2516 (x8836 x8972) (x4281 x8972)))
(define-fun x3583 ((x8972 Int)) Int (ite x2516 (x2501 x8972) (x6426 x8972)))
(define-fun x8337 ((x8972 Int)) Int (ite x2516 (x4664 x8972) (x3715 x8972)))
(define-fun x3441 ((x8972 Int)) Int (ite x2516 (x8600 x8972) (x8751 x8972)))
(define-fun x2482 ((x8972 Int)) Int (ite x2516 (x7388 x8972) (x7047 x8972)))
(define-fun x2680 ((x8972 Int)) Int (ite x2516 (x319 x8972) (x7471 x8972)))
(define-fun x8218 ((x8972 Int)) Int (ite x2516 (x8623 x8972) (x7559 x8972)))
(define-fun x8205 ((x8972 Int)) Int (ite x2516 (x6193 x8972) (x9118 x8972)))
(define-fun x7308 ((x8972 Int)) Int (ite x2516 (x9113 x8972) (x6485 x8972)))
(define-fun x5437 ((x8972 Int)) Int (ite x2516 (x31 x8972) (x8738 x8972)))
(define-fun x7811 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 x1501)) (x4699 x8972) (x4282 x8972)))
(define-fun x8855 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 x1501)) (x7811 x8972) (x6195 x8972)))
(define-fun x1233 ((x8972 Int)) Int (ite (and (< x8972 x1827) (<= 0 x8972)) (x5336 x8972) (x4282 x8972)))
(define-fun x8588 ((x8972 Int)) Int (ite (and (> x1827 x8972) (<= 0 x8972)) (x1233 x8972) (x6195 x8972)))
(define-fun x349 ((x8972 Int)) Int (ite x5041 (x5389 x8972) (x1859 x8972)))
(define-fun x7037 ((x8972 Int)) Int (ite x5041 (x2450 x8972) (x3815 x8972)))
(define-fun x8468 ((x8972 Int)) Int (ite x5041 (x8651 x8972) (x3840 x8972)))
(define-fun x2877 ((x8972 Int)) Int (ite x5041 (x6974 x8972) (x5345 x8972)))
(define-fun x3773 ((x8972 Int)) Int (ite x5041 (x6022 x8972) (x5816 x8972)))
(define-fun x2660 ((x8972 Int)) Int (ite x5041 (x2688 x8972) (x920 x8972)))
(define-fun x876 ((x8972 Int)) Int (ite x5041 (x1805 x8972) (x7734 x8972)))
(define-fun x986 ((x8972 Int)) Int (ite x5041 (x1491 x8972) (x976 x8972)))
(define-fun x6507 ((x8972 Int)) Int (ite x5041 (x521 x8972) (x7545 x8972)))
(define-fun x2574 ((x8972 Int)) Int (ite x5041 (x8204 x8972) (x1459 x8972)))
(define-fun x379 ((x8972 Int)) Int (ite x5041 (x572 x8972) (x2892 x8972)))
(define-fun x8843 ((x8972 Int)) Int (ite x5041 (x4770 x8972) (x3826 x8972)))
(define-fun x8451 ((x8972 Int)) Int (ite x5041 (x6551 x8972) (x2423 x8972)))
(define-fun x8619 ((x8972 Int)) Int (ite x5041 (x409 x8972) (x1118 x8972)))
(define-fun x2341 ((x8972 Int)) Int (ite x5041 (x5744 x8972) (x2473 x8972)))
(define-fun x28 ((x8972 Int)) Int (ite x5041 (x341 x8972) (x1169 x8972)))
(define-fun x8584 ((x8972 Int)) Int (ite (and (>= x8972 0) (> x9011 x8972)) (x2745 x8972) (x4282 x8972)))
(define-fun x4880 ((x8972 Int)) Int (ite (and (> x9011 x8972) (<= 0 x8972)) (x8584 x8972) (x6195 x8972)))
(define-fun x4787 ((x8972 Int)) Int (ite x4092 (x7589 x8972) (x8802 x8972)))
(define-fun x7126 ((x8972 Int)) Int (ite x4092 (x7518 x8972) (ite x5206 (x794 x8972) (x7518 x8972))))
(define-fun x6775 ((x8972 Int)) Int (ite (and (> x293 x8972) (>= x8972 0)) (x4787 x8972) (x4282 x8972)))
(define-fun x1706 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> x293 x8972)) (x6775 x8972) (x6195 x8972)))
(define-fun x2222 ((x8972 Int)) Int (ite x4316 (x7917 x8972) (ite x7227 (x7917 x8972) (x4445 x8972))))
(define-fun x8096 ((x8972 Int)) Int (ite x4316 (x7370 x8972) (ite x7227 (x7370 x8972) (x5943 x8972))))
(define-fun x4822 ((x8972 Int)) Int (ite x4316 (x4878 x8972) (ite x7227 (x4878 x8972) (x4017 x8972))))
(define-fun x7548 ((x8972 Int)) Int (ite x4316 (x3337 x8972) (ite x7227 (x3337 x8972) (x4125 x8972))))
(define-fun x1665 ((x8972 Int)) Int (ite x4316 (x2617 x8972) (ite x7227 (x2617 x8972) (x7192 x8972))))
(define-fun x258 ((x8972 Int)) Int (ite x4316 (x3211 x8972) (ite x7227 (x3211 x8972) (x3465 x8972))))
(define-fun x1799 ((x8972 Int)) Int 0)
(define-fun x4636 ((x8972 Int)) Int (ite x4316 (x6069 x8972) (ite x7227 (x6069 x8972) (x1799 x8972))))
(define-fun x3055 ((x8972 Int)) Int (ite x4316 (x507 x8972) (ite x7227 (x507 x8972) (x5676 x8972))))
(define-fun x1471 ((x8972 Int)) Int (ite x4316 (x3375 x8972) (ite x7227 (x3375 x8972) (x6418 x8972))))
(define-fun x2926 ((x8972 Int)) Int (ite x4316 (x5292 x8972) (ite x7227 (x5292 x8972) (x2419 x8972))))
(define-fun x5190 ((x8972 Int)) Int (ite x4316 (x1253 x8972) (ite x7227 (x1253 x8972) (x2190 x8972))))
(define-fun x1894 ((x8972 Int)) Int (ite x4316 (x6225 x8972) (ite x7227 (x6225 x8972) (x6546 x8972))))
(define-fun x8844 ((x8972 Int)) Int (ite x4316 (x5821 x8972) (ite x7227 (x5821 x8972) (x2502 x8972))))
(define-fun x2552 ((x8972 Int)) Int (ite x4316 (x5204 x8972) (ite x7227 (x5204 x8972) (x4739 x8972))))
(define-fun x594 ((x8972 Int)) Int (ite x4316 (x8652 x8972) (ite x7227 (x8652 x8972) (x1817 x8972))))
(define-fun x7205 ((x8972 Int)) Int (ite x4316 (x761 x8972) (ite x7227 (x761 x8972) (x1443 x8972))))
(define-fun x1742 ((x8972 Int)) Int (ite x4316 (x3136 x8972) (ite x7227 (x3136 x8972) (x6342 x8972))))
(define-fun x1673 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 x3714)) (x4636 x8972) (x4282 x8972)))
(define-fun x4671 ((x8972 Int)) Int (ite (and (> x3714 x8972) (>= x8972 0)) (x1673 x8972) (x6195 x8972)))
(define-fun x5441 ((x8972 Int)) Int (ite x3478 (x7509 x8972) (ite x5364 (x7509 x8972) (x5212 x8972))))
(define-fun x7277 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x4781)) (x5441 x8972) (x4282 x8972)))
(define-fun x6126 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x4781)) (x7277 x8972) (x6195 x8972)))
(define-fun x4465 ((x8972 Int)) Int (ite x2878 (x7440 x8972) (x2828 x8972)))
(define-fun x5467 ((x8972 Int)) Int (ite x2878 (x8319 x8972) (x525 x8972)))
(define-fun x8601 ((x8972 Int)) Int (ite x2878 (x3036 x8972) (x1917 x8972)))
(define-fun x7145 ((x8972 Int)) Int (ite x2878 (x4929 x8972) (x3833 x8972)))
(define-fun x2343 ((x8972 Int)) Int (ite x2878 (x4881 x8972) (x8295 x8972)))
(define-fun x1067 ((x8972 Int)) Int (ite x2878 (x1058 x8972) (x7178 x8972)))
(define-fun x687 ((x8972 Int)) Int (ite x2878 (x4012 x8972) (x4620 x8972)))
(define-fun x1745 ((x8972 Int)) Int (ite x2878 (x3598 x8972) (x7965 x8972)))
(define-fun x8792 ((x8972 Int)) Int (ite x2878 (x6636 x8972) (x42 x8972)))
(define-fun x6495 ((x8972 Int)) Int (ite x2878 (x8363 x8972) (x7025 x8972)))
(define-fun x7874 ((x8972 Int)) Int (ite x2878 (x6571 x8972) (x6033 x8972)))
(define-fun x8198 ((x8972 Int)) Int (ite x2878 (x3300 x8972) (x1925 x8972)))
(define-fun x1562 ((x8972 Int)) Int (ite x2878 (x4623 x8972) (x6550 x8972)))
(define-fun x6697 ((x8972 Int)) Int (ite x2878 (x5529 x8972) (x194 x8972)))
(define-fun x1238 ((x8972 Int)) Int (ite x2878 (x6559 x8972) (x1829 x8972)))
(define-fun x3215 ((x8972 Int)) Int (ite x2878 (x4362 x8972) (x119 x8972)))
(define-fun x3126 ((x8972 Int)) Int (ite (and (>= x8972 0) (> x1101 x8972)) (x5815 x8972) (x4282 x8972)))
(define-fun x2781 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x1101)) (x3126 x8972) (x6195 x8972)))
(define-fun x5355 ((x8972 Int)) Int (ite x3326 (x4125 x8972) (x3157 x8972)))
(define-fun x674 ((x8972 Int)) Int (ite x3326 (x4445 x8972) (x739 x8972)))
(define-fun x8262 ((x8972 Int)) Int (ite x3326 (x3465 x8972) (x5670 x8972)))
(define-fun x71 ((x8972 Int)) Int (ite x3326 (x4017 x8972) (x6593 x8972)))
(define-fun x2336 ((x8972 Int)) Int (ite x3326 (x1817 x8972) (x6998 x8972)))
(define-fun x1906 ((x8972 Int)) Int (ite x3326 (x5943 x8972) (x5134 x8972)))
(define-fun x8421 ((x8972 Int)) Int (ite x3326 (x5676 x8972) (x6929 x8972)))
(define-fun x2800 ((x8972 Int)) Int (ite x3326 (x6418 x8972) (x4789 x8972)))
(define-fun x4808 ((x8972 Int)) Int (ite x3326 (x4739 x8972) (x2322 x8972)))
(define-fun x5779 ((x8972 Int)) Int (ite x3326 (x7192 x8972) (x1543 x8972)))
(define-fun x7366 ((x8972 Int)) Int (ite x3326 (x2419 x8972) (x295 x8972)))
(define-fun x711 ((x8972 Int)) Int (ite x3326 (x2502 x8972) (x7695 x8972)))
(define-fun x1079 ((x8972 Int)) Int (ite x3326 (x6342 x8972) (x8603 x8972)))
(define-fun x1624 ((x8972 Int)) Int (ite x3326 (x1443 x8972) (x7201 x8972)))
(define-fun x1200 ((x8972 Int)) Int (ite x3326 (x2190 x8972) (x8120 x8972)))
(define-fun x6274 ((x8972 Int)) Int (ite x3326 (x6546 x8972) (x7980 x8972)))
(define-fun x7575 ((x8972 Int)) Int (ite (and (< x8972 x652) (<= 0 x8972)) (x6822 x8972) (x4282 x8972)))
(define-fun x6861 ((x8972 Int)) Int (ite (and (> x652 x8972) (<= 0 x8972)) (x7575 x8972) (x6195 x8972)))
(define-fun x4871 ((x8972 Int)) Int (ite x6510 (x3579 x8972) (x5777 x8972)))
(define-fun x8343 ((x8972 Int)) Int (ite x6510 (x2433 x8972) (x5786 x8972)))
(define-fun x451 ((x8972 Int)) Int (ite x6510 (x4399 x8972) (x3643 x8972)))
(define-fun x401 ((x8972 Int)) Int (ite x6510 (x7670 x8972) (x8997 x8972)))
(define-fun x6622 ((x8972 Int)) Int (ite x6510 (x6773 x8972) (x6401 x8972)))
(define-fun x4384 ((x8972 Int)) Int (ite x6510 (x2788 x8972) (x3640 x8972)))
(define-fun x6026 ((x8972 Int)) Int (ite x6510 (x5629 x8972) (x5147 x8972)))
(define-fun x2599 ((x8972 Int)) Int (ite x6510 (x331 x8972) (x5428 x8972)))
(define-fun x1017 ((x8972 Int)) Int (ite x6510 (x7294 x8972) (x9089 x8972)))
(define-fun x8902 ((x8972 Int)) Int (ite x6510 (x3130 x8972) (x1236 x8972)))
(define-fun x3261 ((x8972 Int)) Int (ite x6510 (x133 x8972) (x7716 x8972)))
(define-fun x240 ((x8972 Int)) Int (ite x6510 (x532 x8972) (x2232 x8972)))
(define-fun x2972 ((x8972 Int)) Int (ite x6510 (x1707 x8972) (x2895 x8972)))
(define-fun x3493 ((x8972 Int)) Int (ite x6510 (x7122 x8972) (x321 x8972)))
(define-fun x8175 ((x8972 Int)) Int (ite x6510 (x3596 x8972) (x7045 x8972)))
(define-fun x8419 ((x8972 Int)) Int (ite x6510 (x3322 x8972) (x3182 x8972)))
(define-fun x6859 ((x8972 Int)) Int (ite (= x2643 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4282 x8972)))
(define-fun x3456 ((x8972 Int)) Int (ite (= x8972 x1728) 32 (x6859 x8972)))
(define-fun x1664 ((x8972 Int)) Int (ite (= x8972 x5486) 14 (x3456 x8972)))
(define-fun x3196 ((x8972 Int)) Int (ite (= x8972 x2303) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x1664 x8972)))
(define-fun x2208 ((x8972 Int)) Int (ite (and (> x9061 x8972) (<= 0 x8972)) (x3196 (+ x8972 x2643)) (x6195 x8972)))
(define-fun x1202 ((x8972 Int)) Int (ite (= x8972 x4407) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4282 x8972)))
(define-fun x7012 ((x8972 Int)) Int (ite (= x1142 x8972) 32 (x1202 x8972)))
(define-fun x8052 ((x8972 Int)) Int (ite (= x8878 x8972) 14 (x7012 x8972)))
(define-fun x1855 ((x8972 Int)) Int (ite (= x8077 x8972) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x8052 x8972)))
(define-fun x1909 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 x1585)) (x1855 (+ x4407 x8972)) (x6195 x8972)))
(define-fun x4936 ((x8972 Int)) Int (ite (= x6690 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4282 x8972)))
(define-fun x7782 ((x8972 Int)) Int (ite (= x1149 x8972) 32 (x4936 x8972)))
(define-fun x1973 ((x8972 Int)) Int (ite (= x8972 x4030) 17 (x7782 x8972)))
(define-fun x6606 ((x8972 Int)) Int (ite (= x8972 x9031) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x1973 x8972)))
(define-fun x23 ((x8972 Int)) Int (ite (and (< x8972 x3772) (<= 0 x8972)) (x6606 (+ x6690 x8972)) (x6195 x8972)))
(define-fun x6336 ((x8972 Int)) Int (ite (= x1588 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4282 x8972)))
(define-fun x5746 ((x8972 Int)) Int (ite (= x3070 x8972) 32 (x6336 x8972)))
(define-fun x3739 ((x8972 Int)) Int (ite (= x8972 x5796) 17 (x5746 x8972)))
(define-fun x8736 ((x8972 Int)) Int (ite (= x3487 x8972) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x3739 x8972)))
(define-fun x4512 ((x8972 Int)) Int (ite (and (> x3804 x8972) (<= 0 x8972)) (x8736 (+ x1588 x8972)) (x6195 x8972)))
(define-fun x1958 ((x8972 Int)) Int (ite (= x8972 x3280) x3891 (x6077 x8972)))
(define-fun x1022 ((x8972 Int)) Int (ite x208 (x6077 x8972) (x1958 x8972)))
(define-fun x5458 ((x8972 Int)) Int (ite (= x8972 480) x3759 (x1022 x8972)))
(define-fun x3138 ((x8972 Int)) Int (ite x7758 (x5458 x8972) (x8030 x8972)))
(define-fun x4809 ((x8972 Int)) Int (ite (= x4697 x8972) x8021 (x3138 x8972)))
(define-fun x4639 ((x8972 Int)) Int (ite (= x6656 x8972) x8641 (x4809 x8972)))
(define-fun x8815 ((x8972 Int)) Int (ite (= x8993 x8972) x7916 (x4639 x8972)))
(define-fun x1338 ((x8972 Int)) Int (ite (= x32 x8972) x6755 (x8815 x8972)))
(define-fun x2387 ((x8972 Int)) Int (ite (= x8972 x1382) x3373 (x1338 x8972)))
(define-fun x7546 ((x8972 Int)) Int (ite (= x8972 x7650) x2714 (x2387 x8972)))
(define-fun x8498 ((x8972 Int)) Int (ite (= x8917 x8972) x3189 (x7546 x8972)))
(define-fun x411 ((x8972 Int)) Int (ite (= x3084 x8972) x6405 (x8498 x8972)))
(define-fun x4010 ((x8972 Int)) Int (ite (= x8972 x8976) x8539 (x411 x8972)))
(define-fun x1 ((x8972 Int)) Int (ite (= x8972 x4029) x8814 (x4010 x8972)))
(define-fun x78 ((x8972 Int)) Int (ite (= x8972 x5534) x3518 (x1 x8972)))
(define-fun x4964 ((x8972 Int)) Int (ite (= x8972 x7894) x1670 (x78 x8972)))
(define-fun x8558 ((x8972 Int)) Int (ite x7477 (x78 x8972) (x4964 x8972)))
(define-fun x3472 ((x8972 Int)) Int (ite (= x9060 x8972) x2564 (x8558 x8972)))
(define-fun x2785 ((x8972 Int)) Int (ite (= x9060 x8972) 0 (x78 x8972)))
(define-fun x3353 ((x8972 Int)) Int (ite x2533 (x3472 x8972) (x2785 x8972)))
(define-fun x620 ((x8972 Int)) Int (ite (= x3481 x8972) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x3353 x8972)))
(define-fun x1856 ((x8972 Int)) Int (ite (= x8972 x70) x736 (x620 x8972)))
(define-fun x5032 ((x8972 Int)) Int (ite (= x5528 x8972) 128 (x1856 x8972)))
(define-fun x4006 ((x8972 Int)) Int (ite (= x8972 x7662) x2856 (x5032 x8972)))
(define-fun x9040 ((x8972 Int)) Int (ite (= x2670 x8972) x6762 (x4006 x8972)))
(define-fun x3926 ((x8972 Int)) Int (ite (= x8972 x4700) x5208 (x9040 x8972)))
(define-fun x3957 ((x8972 Int)) Int (ite (= x8972 x2700) x206 (x3926 x8972)))
(define-fun x388 ((x8972 Int)) Int (ite (= x8972 x5540) x1008 (x3330 x8972)))
(define-fun x7970 ((x8972 Int)) Int (ite x628 (x3330 x8972) (x388 x8972)))
(define-fun x6638 ((x8972 Int)) Int (ite (= x8972 480) x7305 (x7970 x8972)))
(define-fun x5150 ((x8972 Int)) Int (ite x2298 (x6638 x8972) (x4857 x8972)))
(define-fun x2876 ((x8972 Int)) Int (ite (= x8972 x4348) x6972 (x5150 x8972)))
(define-fun x6129 ((x8972 Int)) Int (ite (= x8573 x8972) x1532 (x2876 x8972)))
(define-fun x5470 ((x8972 Int)) Int (ite (= x8972 x6505) x6777 (x6129 x8972)))
(define-fun x2215 ((x8972 Int)) Int (ite (= x7810 x8972) x4249 (x5470 x8972)))
(define-fun x6414 ((x8972 Int)) Int (ite (= x8972 x3867) x5377 (x2215 x8972)))
(define-fun x1370 ((x8972 Int)) Int (ite (= x1761 x8972) x8391 (x6414 x8972)))
(define-fun x4278 ((x8972 Int)) Int (ite (= x1100 x8972) x1416 (x1370 x8972)))
(define-fun x7951 ((x8972 Int)) Int (ite (= x7265 x8972) x9122 (x4278 x8972)))
(define-fun x4496 ((x8972 Int)) Int (ite (= x8972 x1146) x5770 (x7951 x8972)))
(define-fun x4021 ((x8972 Int)) Int (ite (= x8972 x3741) x6044 (x4496 x8972)))
(define-fun x2406 ((x8972 Int)) Int (ite (= x8972 x5948) x7770 (x4021 x8972)))
(define-fun x5008 ((x8972 Int)) Int (ite (= x3313 x8972) x3868 (x2406 x8972)))
(define-fun x332 ((x8972 Int)) Int (ite x6581 (x2406 x8972) (x5008 x8972)))
(define-fun x6663 ((x8972 Int)) Int (ite (= x8972 x7579) x4394 (x332 x8972)))
(define-fun x6970 ((x8972 Int)) Int (ite (= x7579 x8972) 0 (x2406 x8972)))
(define-fun x6675 ((x8972 Int)) Int (ite x3667 (x6663 x8972) (x6970 x8972)))
(define-fun x6930 ((x8972 Int)) Int (ite (= x2413 x8972) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x6675 x8972)))
(define-fun x2951 ((x8972 Int)) Int (ite (= x6964 x8972) x7543 (x6930 x8972)))
(define-fun x5366 ((x8972 Int)) Int (ite (= x8972 x4890) 128 (x2951 x8972)))
(define-fun x805 ((x8972 Int)) Int (ite (= x8972 x6177) x5139 (x5366 x8972)))
(define-fun x7744 ((x8972 Int)) Int (ite (= x8972 x6442) x3156 (x805 x8972)))
(define-fun x2893 ((x8972 Int)) Int (ite (= x8972 x3749) x8358 (x7744 x8972)))
(define-fun x2065 ((x8972 Int)) Int (ite (= x644 x8972) x6678 (x2893 x8972)))
(define-fun x1938 ((x8972 Int)) Int (ite (= x4768 x8972) x7751 (x2551 x8972)))
(define-fun x7261 ((x8972 Int)) Int (ite x6360 (x2551 x8972) (x1938 x8972)))
(define-fun x2230 ((x8972 Int)) Int (ite (= 480 x8972) x735 (x7261 x8972)))
(define-fun x4363 ((x8972 Int)) Int (ite x6948 (x2230 x8972) (x8636 x8972)))
(define-fun x7462 ((x8972 Int)) Int (ite (= x8972 x8176) x4829 (x4363 x8972)))
(define-fun x7337 ((x8972 Int)) Int (ite (= x8972 x3379) x7026 (x7462 x8972)))
(define-fun x6816 ((x8972 Int)) Int (ite (= x7788 x8972) x5352 (x7337 x8972)))
(define-fun x8247 ((x8972 Int)) Int (ite (= x8972 x4782) x5992 (x6816 x8972)))
(define-fun x7830 ((x8972 Int)) Int (ite (= x1377 x8972) x3446 (x8247 x8972)))
(define-fun x7601 ((x8972 Int)) Int (ite (= x8972 x5363) x3578 (x7830 x8972)))
(define-fun x1266 ((x8972 Int)) Int (ite (= x4305 x8972) x8552 (x7601 x8972)))
(define-fun x664 ((x8972 Int)) Int (ite (= x8972 x3513) x5484 (x1266 x8972)))
(define-fun x2981 ((x8972 Int)) Int (ite (= x8905 x8972) x8640 (x664 x8972)))
(define-fun x3746 ((x8972 Int)) Int (ite (= x2357 x8972) x5751 (x2981 x8972)))
(define-fun x2547 ((x8972 Int)) Int (ite (= x8972 x814) x8660 (x3746 x8972)))
(define-fun x2054 ((x8972 Int)) Int (ite (= x8972 x312) x6199 (x2547 x8972)))
(define-fun x114 ((x8972 Int)) Int (ite x3343 (x2547 x8972) (x2054 x8972)))
(define-fun x5037 ((x8972 Int)) Int (ite (= x1767 x8972) x466 (x114 x8972)))
(define-fun x5030 ((x8972 Int)) Int (ite (= x8972 x1767) 0 (x2547 x8972)))
(define-fun x4708 ((x8972 Int)) Int (ite x8261 (x5037 x8972) (x5030 x8972)))
(define-fun x1152 ((x8972 Int)) Int (ite (= x8972 x4254) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x4708 x8972)))
(define-fun x6325 ((x8972 Int)) Int (ite (= x296 x8972) x2120 (x1152 x8972)))
(define-fun x6713 ((x8972 Int)) Int (ite (= x8972 x5271) 128 (x6325 x8972)))
(define-fun x8637 ((x8972 Int)) Int (ite (= x8972 x5621) x8409 (x6713 x8972)))
(define-fun x2539 ((x8972 Int)) Int (ite (= x2338 x8972) x3368 (x8637 x8972)))
(define-fun x1196 ((x8972 Int)) Int (ite (= x5535 x8972) x1193 (x2539 x8972)))
(define-fun x6837 ((x8972 Int)) Int (ite (= x8972 x6732) x7019 (x1196 x8972)))
(define-fun x6060 ((x8972 Int)) Int (ite (= x8972 4) 17 (x4282 x8972)))
(define-fun x5298 ((x8972 Int)) Int (ite (and (> 36 x8972) (>= x8972 0)) (x6060 x8972) (x6195 x8972)))
(define-fun x7632 ((x8972 Int)) Int (ite (= x8972 x9060) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4282 x8972)))
(define-fun x1308 ((x8972 Int)) Int (ite (= x8972 x2188) 32 (x7632 x8972)))
(define-fun x2801 ((x8972 Int)) Int (ite (= x8972 x1642) 14 (x1308 x8972)))
(define-fun x7057 ((x8972 Int)) Int (ite (= x1412 x8972) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x2801 x8972)))
(define-fun x4771 ((x8972 Int)) Int (ite (and (>= x8972 0) (> x672 x8972)) (x7057 (+ x9060 x8972)) (x6195 x8972)))
(define-fun x8179 ((x8972 Int)) Int (ite (= x9060 x8972) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4282 x8972)))
(define-fun x1417 ((x8972 Int)) Int (ite (= x8972 x8642) 32 (x8179 x8972)))
(define-fun x4776 ((x8972 Int)) Int (ite (= x4178 x8972) 17 (x1417 x8972)))
(define-fun x1823 ((x8972 Int)) Int (ite (= x8972 x8989) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x4776 x8972)))
(define-fun x8382 ((x8972 Int)) Int (ite (and (>= x8972 0) (> x6150 x8972)) (x1823 (+ x9060 x8972)) (x6195 x8972)))
(define-fun x868 ((x8972 Int)) Int (ite (= x8972 4) 17 (x4282 x8972)))
(define-fun x737 ((x8972 Int)) Int (ite (and (>= x8972 0) (> 36 x8972)) (x868 x8972) (x6195 x8972)))
(define-fun x3603 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4282 x8972)))
(define-fun x6396 ((x8972 Int)) Int (ite (and (> 36 x8972) (<= 0 x8972)) (x3603 x8972) (x6195 x8972)))
(define-fun x2899 ((x8972 Int)) Int (ite (= x8972 x3971) x8010 (x3957 x8972)))
(define-fun x7552 ((x8972 Int)) Int (ite x1708 (x3957 x8972) (ite x7363 (x3926 x8972) (ite x7521 (x9040 x8972) (ite x7332 (x4006 x8972) (x2899 x8972))))))
(define-fun x4583 ((x8972 Int)) Int (ite (= x8972 x5784) 0 (x7552 x8972)))
(define-fun x5843 ((x8972 Int)) Int (ite (= x8972 x8013) x3333 (x4583 x8972)))
(define-fun x338 ((x8972 Int)) Int (ite (= x887 x8972) x878 (x5843 x8972)))
(define-fun x8625 ((x8972 Int)) Int (ite (= x8972 x4406) x1115 (x338 x8972)))
(define-fun x3381 ((x8972 Int)) Int (ite (= x2030 x8972) x3754 (x8625 x8972)))
(define-fun x3105 ((x8972 Int)) Int (ite (= x2198 x8972) x2180 (x3381 x8972)))
(define-fun x753 ((x8972 Int)) Int (ite (= x2409 x8972) x6484 (x3105 x8972)))
(define-fun x4946 ((x8972 Int)) Int (ite (= x8972 x8361) x7748 (x753 x8972)))
(define-fun x4523 ((x8972 Int)) Int (ite x2790 (x753 x8972) (ite x1928 (x3105 x8972) (ite x5911 (x3381 x8972) (ite x93 (x8625 x8972) (x4946 x8972))))))
(define-fun x8996 ((x8972 Int)) Int (ite (= x2283 x8972) 0 (x4523 x8972)))
(define-fun x1399 ((x8972 Int)) Int (ite (= x8972 x92) x4476 (x2065 x8972)))
(define-fun x547 ((x8972 Int)) Int (ite x3394 (x2065 x8972) (ite x7204 (x2893 x8972) (ite x2420 (x7744 x8972) (ite x3297 (x805 x8972) (x1399 x8972))))))
(define-fun x574 ((x8972 Int)) Int (ite (= x6808 x8972) 0 (x547 x8972)))
(define-fun x7794 ((x8972 Int)) Int (ite (= x8972 x7898) x7890 (x574 x8972)))
(define-fun x355 ((x8972 Int)) Int (ite (= x7616 x8972) x4273 (x7794 x8972)))
(define-fun x8760 ((x8972 Int)) Int (ite (= x8972 x3599) x1661 (x355 x8972)))
(define-fun x8102 ((x8972 Int)) Int (ite (= x6349 x8972) x1023 (x8760 x8972)))
(define-fun x4724 ((x8972 Int)) Int (ite (= x8972 x9010) x2087 (x8102 x8972)))
(define-fun x7132 ((x8972 Int)) Int (ite (= x8972 x6554) x8349 (x4724 x8972)))
(define-fun x7532 ((x8972 Int)) Int (ite (= x7351 x8972) x487 (x6837 x8972)))
(define-fun x3466 ((x8972 Int)) Int (ite x1239 (x6837 x8972) (ite x2521 (x1196 x8972) (ite x6011 (x2539 x8972) (ite x2445 (x8637 x8972) (x7532 x8972))))))
(define-fun x8229 ((x8972 Int)) Int (ite (= x8972 x2975) 0 (x3466 x8972)))
(define-fun x5962 ((x8972 Int)) Int (ite (= x1049 x8972) x8255 (x8229 x8972)))
(define-fun x4002 ((x8972 Int)) Int (ite (= x607 x8972) x8951 (x5962 x8972)))
(define-fun x8674 ((x8972 Int)) Int (ite (= x8972 x7578) x3135 (x4002 x8972)))
(define-fun x8411 ((x8972 Int)) Int (ite (= x8972 x7727) x5075 (x8674 x8972)))
(define-fun x6244 ((x8972 Int)) Int (ite (= x5154 x8972) x8177 (x8411 x8972)))
(define-fun x6417 ((x8972 Int)) Int (ite (= x8972 x3544) x5031 (x6244 x8972)))
(define-fun x5804 ((x8972 Int)) Int (ite (= x8972 x2279) x2999 (x7132 x8972)))
(define-fun x6279 ((x8972 Int)) Int (ite x3768 (x7132 x8972) (ite x582 (x4724 x8972) (ite x7013 (x8102 x8972) (ite x5490 (x8760 x8972) (x5804 x8972))))))
(define-fun x6934 ((x8972 Int)) Int (ite (= x8972 x7107) 0 (x6279 x8972)))
(define-fun x4418 ((x8972 Int)) Int (ite (= x1461 x8972) x8626 (x6417 x8972)))
(define-fun x4390 ((x8972 Int)) Int (ite x6860 (x6417 x8972) (ite x1027 (x6244 x8972) (ite x2391 (x8411 x8972) (ite x6108 (x8674 x8972) (x4418 x8972))))))
(define-fun x2761 ((x8972 Int)) Int (ite (= x8972 x7867) 0 (x4390 x8972)))
(define-fun x8008 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4282 x8972)))
(define-fun x2659 ((x8972 Int)) Int (ite (and (>= x8972 0) (< x8972 36)) (x8008 x8972) (x6195 x8972)))
(define-fun x6633 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4282 x8972)))
(define-fun x1401 ((x8972 Int)) Int (ite (and (> 36 x8972) (>= x8972 0)) (x6633 x8972) (x6195 x8972)))
(define-fun x3068 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4282 x8972)))
(define-fun x3005 ((x8972 Int)) Int (ite (and (< x8972 36) (>= x8972 0)) (x3068 x8972) (x6195 x8972)))
(define-fun x6976 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4282 x8972)))
(define-fun x5054 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 36)) (x6976 x8972) (x6195 x8972)))
(define-fun x6288 ((x8972 Int)) Int (ite (= x8972 4) 17 (x4282 x8972)))
(define-fun x8128 ((x8972 Int)) Int (ite (and (<= 0 x8972) (< x8972 36)) (x6288 x8972) (x6195 x8972)))
(define-fun x222 ((x8972 Int)) Int (ite (= x8972 4) 17 (x4282 x8972)))
(define-fun x1069 ((x8972 Int)) Int (ite (and (> 36 x8972) (<= 0 x8972)) (x222 x8972) (x6195 x8972)))
(define-fun x6477 ((x8972 Int)) Int (ite (= x8972 4) 17 (x4282 x8972)))
(define-fun x2292 ((x8972 Int)) Int (ite (and (<= 0 x8972) (> 36 x8972)) (x6477 x8972) (x6195 x8972)))
(define-fun x3401 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4282 x8972)))
(define-fun x289 ((x8972 Int)) Int (ite (and (>= x8972 0) (> 36 x8972)) (x3401 x8972) (x6195 x8972)))
(define-fun x4818 ((x8972 Int)) Int (ite (= 4 x8972) 17 (x4282 x8972)))
(define-fun x1349 ((x8972 Int)) Int (ite (and (>= x8972 0) (> 36 x8972)) (x4818 x8972) (x6195 x8972)))
(define-fun x3821 ((x8972 Int)) Int (x539 x8972))
(define-fun x2535 ((x8972 Int)) Int (x748 x8972))
(define-fun x6728 ((x8972 Int)) Int (x3514 x8972))
(define-fun x9049 ((x8972 Int)) Int (x5879 x8972))
(define-fun x1597 ((x8972 Int)) Int (x5719 x8972))
(define-fun x4459 ((x8972 Int)) Int (x6170 x8972))
(define-fun x4480 ((x8972 Int)) Int (x7856 x8972))
(define-fun x5522 ((x8972 Int)) Int (x3791 x8972))
(define-fun x7958 ((x8972 Int)) Int (x1295 x8972))
(define-fun x8093 ((x8972 Int)) Int (x8330 x8972))
(define-fun x2542 ((x8972 Int)) Int (x6648 x8972))
(define-fun x8810 ((x8972 Int)) Int (x579 x8972))
(define-fun x6388 ((x8972 Int)) Int (x6139 x8972))
(define-fun x3185 ((x8972 Int)) Int (x1570 x8972))
(define-fun x8936 ((x8972 Int)) Int (x6502 x8972))
(define-fun x1201 ((x8972 Int)) Int (x7708 x8972))
(define-fun x1247 ((x8972 Int)) Int (x2798 x8972))
(define-fun x2915 ((x8972 Int)) Int (x6034 x8972))
(define-fun x1130 ((x8972 Int)) Int (x1926 x8972))
(define-fun x3490 ((x8972 Int)) Int (x8019 x8972))
(define-fun x8164 ((x8972 Int)) Int (x1077 x8972))
(define-fun x4004 ((x8972 Int)) Int (ite x4420 (x3465 x8972) (ite x2362 (x7765 x8972) (x932 x8972))))
(define-fun x3814 ((x8972 Int)) Int (ite x4003 (ite x325 (x4004 x8972) (x1989 x8972)) (x6941 x8972)))
(define-fun x2441 ((x8972 Int)) Int (ite x2466 (x7161 x8972) (ite x7723 (x3814 x8972) (x4899 x8972))))
(define-fun x5272 ((x8972 Int)) Int (ite x8680 (ite x4458 (x2441 x8972) (x6875 x8972)) (x307 x8972)))
(define-fun x191 ((x8972 Int)) Int (ite x1639 (x4612 x8972) (ite x7111 (x1618 x8972) (x5272 x8972))))
(define-fun x2727 ((x8972 Int)) Int (ite x283 (x191 x8972) (x1740 x8972)))
(define-fun x9130 ((x8972 Int)) Int (ite x4420 (x1443 x8972) (ite x2362 (x5099 x8972) (x6035 x8972))))
(define-fun x7824 ((x8972 Int)) Int (ite x4003 (ite x325 (x9130 x8972) (x3325 x8972)) (x5080 x8972)))
(define-fun x9120 ((x8972 Int)) Int (ite x2466 (x6979 x8972) (ite x7723 (x7824 x8972) (x7542 x8972))))
(define-fun x5334 ((x8972 Int)) Int (ite x8680 (ite x4458 (x9120 x8972) (x9121 x8972)) (x3835 x8972)))
(define-fun x6422 ((x8972 Int)) Int (ite x1639 (x2166 x8972) (ite x7111 (x4309 x8972) (x5334 x8972))))
(define-fun x2468 ((x8972 Int)) Int (ite x283 (x6422 x8972) (x7040 x8972)))
(define-fun x989 ((x8972 Int)) Int (ite x4420 (x4445 x8972) (ite x2362 (x1934 x8972) (x3082 x8972))))
(define-fun x3931 ((x8972 Int)) Int (ite x4003 (ite x325 (x989 x8972) (x7707 x8972)) (x7 x8972)))
(define-fun x793 ((x8972 Int)) Int (ite x2466 (x1668 x8972) (ite x7723 (x3931 x8972) (x1968 x8972))))
(define-fun x6943 ((x8972 Int)) Int (ite x8680 (ite x4458 (x793 x8972) (x6669 x8972)) (x1757 x8972)))
(define-fun x7307 ((x8972 Int)) Int (ite x1639 (x7130 x8972) (ite x7111 (x5986 x8972) (x6943 x8972))))
(define-fun x4885 ((x8972 Int)) Int (ite x283 (x7307 x8972) (x4759 x8972)))
(define-fun x8248 ((x8972 Int)) Int (ite x4420 (x6342 x8972) (ite x2362 (x3458 x8972) (x229 x8972))))
(define-fun x7423 ((x8972 Int)) Int (ite x4003 (ite x325 (x8248 x8972) (x5700 x8972)) (x1445 x8972)))
(define-fun x2860 ((x8972 Int)) Int (ite x2466 (x7547 x8972) (ite x7723 (x7423 x8972) (x3426 x8972))))
(define-fun x8219 ((x8972 Int)) Int (ite x8680 (ite x4458 (x2860 x8972) (x7153 x8972)) (x2226 x8972)))
(define-fun x8492 ((x8972 Int)) Int (ite x1639 (x1852 x8972) (ite x7111 (x6572 x8972) (x8219 x8972))))
(define-fun x8232 ((x8972 Int)) Int (ite x283 (x8492 x8972) (x2329 x8972)))
(define-fun x3399 ((x8972 Int)) Int (ite (= x8972 0) x4011 (x7266 x8972)))
(define-fun x3938 ((x8972 Int)) Int (ite x7111 (x5986 x8972) (x6943 x8972)))
(define-fun x8100 ((x8972 Int)) Int (ite x7111 (x1618 x8972) (x5272 x8972)))
(define-fun x4756 ((x8972 Int)) Int (ite x7111 (x4309 x8972) (x5334 x8972)))
(define-fun x1361 ((x8972 Int)) Int (ite x7111 (x6572 x8972) (x8219 x8972)))
(define-fun x7426 ((x8972 Int)) Int (ite x7723 (x7824 x8972) (x7542 x8972)))
(define-fun x6894 ((x8972 Int)) Int (ite x7723 (x3814 x8972) (x4899 x8972)))
(define-fun x1699 ((x8972 Int)) Int (ite x7723 (x7423 x8972) (x3426 x8972)))
(define-fun x6834 ((x8972 Int)) Int (ite x7723 (x3931 x8972) (x1968 x8972)))
(define-fun x5558 ((x8972 Int)) Int (ite x325 (x9130 x8972) (x3325 x8972)))
(define-fun x2251 ((x8972 Int)) Int (ite x325 (x4004 x8972) (x1989 x8972)))
(define-fun x3547 ((x8972 Int)) Int (ite x325 (x989 x8972) (x7707 x8972)))
(define-fun x2590 ((x8972 Int)) Int (ite x325 (x8248 x8972) (x5700 x8972)))
(define-fun x1524 ((x8972 Int)) Int (ite x4458 (x9120 x8972) (x9121 x8972)))
(define-fun x4681 ((x8972 Int)) Int (ite x4458 (x2860 x8972) (x7153 x8972)))
(define-fun x1634 ((x8972 Int)) Int (ite x4458 (x2441 x8972) (x6875 x8972)))
(define-fun x8272 ((x8972 Int)) Int (ite x4458 (x793 x8972) (x6669 x8972)))
(define-fun x5445 ((x8972 Int)) Int (ite (= x8972 160) x4763 (x2901 x8972)))
(define-fun x288 ((x8972 Int)) Int (ite (= 192 x8972) x4954 (x5445 x8972)))
(define-fun x3823 ((x8972 Int)) Int (ite (= x8972 224) x9005 (x288 x8972)))
(define-fun x2610 ((x8972 Int)) Int (ite (= 256 x8972) x5542 (x3823 x8972)))
(define-fun x4709 ((x8972 Int)) Int (ite (= 288 x8972) x4385 (x2610 x8972)))
(define-fun x4387 ((x8972 Int)) Int (ite (= x8972 320) x2602 (x4709 x8972)))
(define-fun x4330 ((x8972 Int)) Int (ite (= x8972 352) x2607 (x4387 x8972)))
(define-fun x3159 ((x8972 Int)) Int (ite (= x8972 384) x2884 (x4330 x8972)))
(define-fun x8246 ((x8972 Int)) Int (ite (= 416 x8972) x5177 (x3159 x8972)))
(define-fun x4669 ((x8972 Int)) Int (ite (= 448 x8972) x5246 (x8246 x8972)))
(define-fun x5187 ((x8972 Int)) Int (ite (= x8972 128) 320 (x4669 x8972)))
(define-fun x4177 ((x8972 Int)) Int (ite (= x3153 x8972) x8302 (x5187 x8972)))
(define-fun x8031 ((x8972 Int)) Int (ite x65 (x5187 x8972) (x4177 x8972)))
(define-fun x6149 ((x8972 Int)) Int (ite (= x8972 480) x3993 (x8031 x8972)))
(define-fun x3851 ((x8972 Int)) Int (ite (= 480 x8972) 0 (x5187 x8972)))
(define-fun x3310 ((x8972 Int)) Int (ite x7528 (x6149 x8972) (x3851 x8972)))
(define-fun x7323 ((x8972 Int)) Int (ite (= x5657 x8972) x259 (x3310 x8972)))
(define-fun x4938 ((x8972 Int)) Int (ite (= x6176 x8972) x2717 (x7323 x8972)))
(define-fun x3220 ((x8972 Int)) Int (ite (= x4810 x8972) x2882 (x4938 x8972)))
(define-fun x7188 ((x8972 Int)) Int (ite (= x752 x8972) x2825 (x3220 x8972)))
(define-fun x872 ((x8972 Int)) Int (ite (= x8972 x6246) x5311 (x7188 x8972)))
(define-fun x139 ((x8972 Int)) Int (ite (= x6234 x8972) x7397 (x872 x8972)))
(define-fun x8586 ((x8972 Int)) Int (ite (= x5072 x8972) x2463 (x139 x8972)))
(define-fun x3775 ((x8972 Int)) Int (ite (= x8972 x2366) x5463 (x8586 x8972)))
(define-fun x2567 ((x8972 Int)) Int (ite (= x7517 x8972) x1199 (x3775 x8972)))
(define-fun x5918 ((x8972 Int)) Int (ite (= x8972 x6503) x4302 (x2567 x8972)))
(define-fun x7657 ((x8972 Int)) Int (ite (= x8972 x6923) x6620 (x5918 x8972)))
(define-fun x8325 ((x8972 Int)) Int (ite (= x2372 x8972) x6689 (x7657 x8972)))
(define-fun x2694 ((x8972 Int)) Int (ite x4361 (x7657 x8972) (x8325 x8972)))
(define-fun x5126 ((x8972 Int)) Int (ite (= x9020 x8972) x5379 (x2694 x8972)))
(define-fun x3806 ((x8972 Int)) Int (ite (= x9020 x8972) 0 (x7657 x8972)))
(define-fun x6160 ((x8972 Int)) Int (ite x8180 (x5126 x8972) (x3806 x8972)))
(define-fun x6462 ((x8972 Int)) Int (ite (= x5736 x8972) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x6160 x8972)))
(define-fun x5924 ((x8972 Int)) Int (ite (= x8972 x2638) x8463 (x6462 x8972)))
(define-fun x7030 ((x8972 Int)) Int (ite (= x8972 x1356) 128 (x5924 x8972)))
(define-fun x8572 ((x8972 Int)) Int (ite (= x2769 x8972) x6724 (x7030 x8972)))
(define-fun x846 ((x8972 Int)) Int (ite (= x8972 x6992) x7895 (x8572 x8972)))
(define-fun x5656 ((x8972 Int)) Int (ite (= x5567 x8972) x1854 (x846 x8972)))
(define-fun x7954 ((x8972 Int)) Int (ite (= x8972 x7502) x3340 (x5656 x8972)))
(define-fun x7121 ((x8972 Int)) Int (ite (= 160 x8972) x105 (x2901 x8972)))
(define-fun x5832 ((x8972 Int)) Int (ite (= 192 x8972) x8054 (x7121 x8972)))
(define-fun x6415 ((x8972 Int)) Int (ite (= x8972 224) x6659 (x5832 x8972)))
(define-fun x8257 ((x8972 Int)) Int (ite (= x8972 256) x4343 (x6415 x8972)))
(define-fun x3682 ((x8972 Int)) Int (ite (= 288 x8972) x2661 (x8257 x8972)))
(define-fun x3162 ((x8972 Int)) Int (ite (= x8972 320) x791 (x3682 x8972)))
(define-fun x290 ((x8972 Int)) Int (ite (= 352 x8972) x5416 (x3162 x8972)))
(define-fun x3585 ((x8972 Int)) Int (ite (= 384 x8972) x6719 (x290 x8972)))
(define-fun x8921 ((x8972 Int)) Int (ite (= x8972 416) x2083 (x3585 x8972)))
(define-fun x7242 ((x8972 Int)) Int (ite (= 448 x8972) x8526 (x8921 x8972)))
(define-fun x8782 ((x8972 Int)) Int (ite (= x8972 128) 320 (x7242 x8972)))
(define-fun x8776 ((x8972 Int)) Int (ite (= x8972 x4218) x2020 (x8782 x8972)))
(define-fun x4163 ((x8972 Int)) Int (ite x4654 (x8782 x8972) (x8776 x8972)))
(define-fun x3966 ((x8972 Int)) Int (ite (= x8972 480) x2378 (x4163 x8972)))
(define-fun x8628 ((x8972 Int)) Int (ite (= x8972 480) 0 (x8782 x8972)))
(define-fun x4494 ((x8972 Int)) Int (ite x4960 (x3966 x8972) (x8628 x8972)))
(define-fun x974 ((x8972 Int)) Int (ite (= x3197 x8972) x7675 (x4494 x8972)))
(define-fun x1127 ((x8972 Int)) Int (ite (= x2865 x8972) x5362 (x974 x8972)))
(define-fun x8154 ((x8972 Int)) Int (ite (= x5959 x8972) x4456 (x1127 x8972)))
(define-fun x1746 ((x8972 Int)) Int (ite (= x8972 x3424) x7957 (x8154 x8972)))
(define-fun x5301 ((x8972 Int)) Int (ite (= x8972 x140) x2125 (x1746 x8972)))
(define-fun x5562 ((x8972 Int)) Int (ite (= x8972 x8739) x8547 (x5301 x8972)))
(define-fun x4767 ((x8972 Int)) Int (ite (= x7838 x8972) x1911 (x5562 x8972)))
(define-fun x7646 ((x8972 Int)) Int (ite (= x6945 x8972) x8123 (x4767 x8972)))
(define-fun x7284 ((x8972 Int)) Int (ite (= x8972 x3564) x3100 (x7646 x8972)))
(define-fun x6171 ((x8972 Int)) Int (ite (= x8972 x2077) x4478 (x7284 x8972)))
(define-fun x3238 ((x8972 Int)) Int (ite (= x8972 x5645) x8048 (x6171 x8972)))
(define-fun x6922 ((x8972 Int)) Int (ite (= x7983 x8972) x1736 (x3238 x8972)))
(define-fun x7862 ((x8972 Int)) Int (ite x8078 (x3238 x8972) (x6922 x8972)))
(define-fun x6746 ((x8972 Int)) Int (ite (= x7074 x8972) x5237 (x7862 x8972)))
(define-fun x2055 ((x8972 Int)) Int (ite (= x8972 x7074) 0 (x3238 x8972)))
(define-fun x1328 ((x8972 Int)) Int (ite x2906 (x6746 x8972) (x2055 x8972)))
(define-fun x6419 ((x8972 Int)) Int (ite (= x8972 x3555) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x1328 x8972)))
(define-fun x6506 ((x8972 Int)) Int (ite (= x483 x8972) x6373 (x6419 x8972)))
(define-fun x6946 ((x8972 Int)) Int (ite (= x1801 x8972) 128 (x6506 x8972)))
(define-fun x5661 ((x8972 Int)) Int (ite (= x8972 x1759) x7609 (x6946 x8972)))
(define-fun x7844 ((x8972 Int)) Int (ite (= x7177 x8972) x6788 (x5661 x8972)))
(define-fun x3807 ((x8972 Int)) Int (ite (= x5369 x8972) x5295 (x7844 x8972)))
(define-fun x1039 ((x8972 Int)) Int (ite (= x8972 x5936) x7659 (x3807 x8972)))
(define-fun x6313 ((x8972 Int)) Int (ite (= x8972 160) x8747 (x2901 x8972)))
(define-fun x1652 ((x8972 Int)) Int (ite (= 192 x8972) x5880 (x6313 x8972)))
(define-fun x2312 ((x8972 Int)) Int (ite (= 224 x8972) x4433 (x1652 x8972)))
(define-fun x3046 ((x8972 Int)) Int (ite (= 256 x8972) x2204 (x2312 x8972)))
(define-fun x3096 ((x8972 Int)) Int (ite (= x8972 288) x6037 (x3046 x8972)))
(define-fun x757 ((x8972 Int)) Int (ite (= 320 x8972) x7083 (x3096 x8972)))
(define-fun x1156 ((x8972 Int)) Int (ite (= x8972 352) x3093 (x757 x8972)))
(define-fun x3167 ((x8972 Int)) Int (ite (= 384 x8972) x565 (x1156 x8972)))
(define-fun x2722 ((x8972 Int)) Int (ite (= 416 x8972) x7701 (x3167 x8972)))
(define-fun x8556 ((x8972 Int)) Int (ite (= 448 x8972) x896 (x2722 x8972)))
(define-fun x6412 ((x8972 Int)) Int (ite (= 128 x8972) 320 (x8556 x8972)))
(define-fun x4535 ((x8972 Int)) Int (ite (= x5780 x8972) x1492 (x6412 x8972)))
(define-fun x7444 ((x8972 Int)) Int (ite x3133 (x6412 x8972) (x4535 x8972)))
(define-fun x1769 ((x8972 Int)) Int (ite (= x8972 480) x5401 (x7444 x8972)))
(define-fun x1957 ((x8972 Int)) Int (ite (= x8972 480) 0 (x6412 x8972)))
(define-fun x800 ((x8972 Int)) Int (ite x3484 (x1769 x8972) (x1957 x8972)))
(define-fun x4935 ((x8972 Int)) Int (ite (= x7819 x8972) x3425 (x800 x8972)))
(define-fun x4272 ((x8972 Int)) Int (ite (= x5125 x8972) x3269 (x4935 x8972)))
(define-fun x6729 ((x8972 Int)) Int (ite (= x3282 x8972) x5370 (x4272 x8972)))
(define-fun x4291 ((x8972 Int)) Int (ite (= x202 x8972) x5811 (x6729 x8972)))
(define-fun x8825 ((x8972 Int)) Int (ite (= x8972 x2982) x3124 (x4291 x8972)))
(define-fun x8244 ((x8972 Int)) Int (ite (= x8972 x5226) x2070 (x8825 x8972)))
(define-fun x4637 ((x8972 Int)) Int (ite (= x1182 x8972) x6049 (x8244 x8972)))
(define-fun x7851 ((x8972 Int)) Int (ite (= x303 x8972) x6805 (x4637 x8972)))
(define-fun x7208 ((x8972 Int)) Int (ite (= x8972 x427) x7329 (x7851 x8972)))
(define-fun x4751 ((x8972 Int)) Int (ite (= x4186 x8972) x2386 (x7208 x8972)))
(define-fun x3498 ((x8972 Int)) Int (ite (= x7664 x8972) x1112 (x4751 x8972)))
(define-fun x7719 ((x8972 Int)) Int (ite (= x7085 x8972) x685 (x3498 x8972)))
(define-fun x857 ((x8972 Int)) Int (ite x8978 (x3498 x8972) (x7719 x8972)))
(define-fun x6696 ((x8972 Int)) Int (ite (= x8972 x4077) x8340 (x857 x8972)))
(define-fun x1005 ((x8972 Int)) Int (ite (= x8972 x4077) 0 (x3498 x8972)))
(define-fun x1717 ((x8972 Int)) Int (ite x2246 (x6696 x8972) (x1005 x8972)))
(define-fun x5774 ((x8972 Int)) Int (ite (= x7959 x8972) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x1717 x8972)))
(define-fun x5468 ((x8972 Int)) Int (ite (= x8972 x7608) x2941 (x5774 x8972)))
(define-fun x6584 ((x8972 Int)) Int (ite (= x2242 x8972) 128 (x5468 x8972)))
(define-fun x3376 ((x8972 Int)) Int (ite (= x929 x8972) x441 (x6584 x8972)))
(define-fun x3587 ((x8972 Int)) Int (ite (= x749 x8972) x5557 (x3376 x8972)))
(define-fun x339 ((x8972 Int)) Int (ite (= x8972 x2027) x1596 (x3587 x8972)))
(define-fun x5908 ((x8972 Int)) Int (ite (= x8972 x566) x3653 (x339 x8972)))
(define-fun x2403 ((x8972 Int)) Int (ite (= x8972 x5686) x5487 (x7954 x8972)))
(define-fun x2296 ((x8972 Int)) Int (ite x6797 (x7954 x8972) (ite x5531 (x5656 x8972) (ite x4667 (x846 x8972) (ite x828 (x8572 x8972) (x2403 x8972))))))
(define-fun x2331 ((x8972 Int)) Int (ite (= x8972 x730) 0 (x2296 x8972)))
(define-fun x6878 ((x8972 Int)) Int (ite (= x2089 x8972) x8980 (x2331 x8972)))
(define-fun x5967 ((x8972 Int)) Int (ite (= x8972 x4800) x77 (x6878 x8972)))
(define-fun x4575 ((x8972 Int)) Int (ite (= x6501 x8972) x1090 (x5967 x8972)))
(define-fun x2497 ((x8972 Int)) Int (ite (= x8972 x1853) x5837 (x4575 x8972)))
(define-fun x4295 ((x8972 Int)) Int (ite (= x2868 x8972) x629 (x2497 x8972)))
(define-fun x2202 ((x8972 Int)) Int (ite (= x2019 x8972) x7984 (x4295 x8972)))
(define-fun x4052 ((x8972 Int)) Int (ite (= x8972 x159) x4992 (x2202 x8972)))
(define-fun x5823 ((x8972 Int)) Int (ite x1147 (x2202 x8972) (ite x2171 (x4295 x8972) (ite x4382 (x2497 x8972) (ite x3119 (x4575 x8972) (x4052 x8972))))))
(define-fun x6097 ((x8972 Int)) Int (ite (= x8972 x2443) 0 (x5823 x8972)))
(define-fun x4778 ((x8972 Int)) Int (ite x4420 (x2332 x8972) (ite x2362 (ite x1137 (x6811 x8972) (ite x5855 (x5095 x8972) (ite x2150 (ite x2949 (ite x7263 (x8311 x8972) (ite x8995 (ite x6583 (ite x5646 (x2332 x8972) (x5775 x8972)) (x970 x8972)) (x6114 x8972))) (x4527 x8972)) (x8384 x8972)))) (x1548 x8972))))
(define-fun x841 ((x8972 Int)) Int (ite (= x8972 x4894) x4912 (x4778 x8972)))
(define-fun x8697 ((x8972 Int)) Int (ite (= x8869 x8972) x1830 (x841 x8972)))
(define-fun x5524 ((x8972 Int)) Int (ite (= x7931 x8972) x7679 (x1039 x8972)))
(define-fun x4861 ((x8972 Int)) Int (ite x7096 (x1039 x8972) (ite x767 (x3807 x8972) (ite x6333 (x7844 x8972) (ite x8872 (x5661 x8972) (x5524 x8972))))))
(define-fun x8985 ((x8972 Int)) Int (ite (= x8972 x1795) 0 (x4861 x8972)))
(define-fun x2568 ((x8972 Int)) Int (ite (= x5514 x8972) x721 (x8985 x8972)))
(define-fun x8484 ((x8972 Int)) Int (ite (= x8972 x4799) x2075 (x2568 x8972)))
(define-fun x3668 ((x8972 Int)) Int (ite (= x8972 x8918) x5545 (x8484 x8972)))
(define-fun x4718 ((x8972 Int)) Int (ite (= x8972 x8964) x7554 (x3668 x8972)))
(define-fun x4650 ((x8972 Int)) Int (ite (= x8972 x6304) x1440 (x4718 x8972)))
(define-fun x2842 ((x8972 Int)) Int (ite (= x5408 x8972) x433 (x4650 x8972)))
(define-fun x8310 ((x8972 Int)) Int (ite (= x443 x8972) x6281 (x5908 x8972)))
(define-fun x8236 ((x8972 Int)) Int (ite x5517 (x5908 x8972) (ite x5788 (x339 x8972) (ite x4805 (x3587 x8972) (ite x4836 (x3376 x8972) (x8310 x8972))))))
(define-fun x7039 ((x8972 Int)) Int (ite (= x5191 x8972) 0 (x8236 x8972)))
(define-fun x7033 ((x8972 Int)) Int (ite (= x8972 x4481) x5473 (x7039 x8972)))
(define-fun x3032 ((x8972 Int)) Int (ite (= x8972 x4652) x1252 (x7033 x8972)))
(define-fun x3014 ((x8972 Int)) Int (ite (= x5699 x8972) x750 (x3032 x8972)))
(define-fun x1229 ((x8972 Int)) Int (ite (= x8972 x2990) x6221 (x3014 x8972)))
(define-fun x3457 ((x8972 Int)) Int (ite (= x8972 x5840) x6437 (x1229 x8972)))
(define-fun x1466 ((x8972 Int)) Int (ite (= x5602 x8972) x7946 (x3457 x8972)))
(define-fun x7157 ((x8972 Int)) Int (ite (= x8972 x861) x2775 (x2842 x8972)))
(define-fun x675 ((x8972 Int)) Int (ite x7314 (x2842 x8972) (ite x8426 (x4650 x8972) (ite x2641 (x4718 x8972) (ite x3013 (x3668 x8972) (x7157 x8972))))))
(define-fun x1092 ((x8972 Int)) Int (ite (= x7633 x8972) 0 (x675 x8972)))
(define-fun x7903 ((x8972 Int)) Int (ite (= x7141 x8972) x242 (x1466 x8972)))
(define-fun x1465 ((x8972 Int)) Int (ite x1138 (x1466 x8972) (ite x1629 (x3457 x8972) (ite x4429 (x1229 x8972) (ite x8058 (x3014 x8972) (x7903 x8972))))))
(define-fun x1519 ((x8972 Int)) Int (ite (= x3016 x8972) 0 (x1465 x8972)))
(define-fun x520 ((x8972 Int)) Int (ite x4420 (x1817 x8972) (ite x2362 (x145 x8972) (x5957 x8972))))
(define-fun x1241 ((x8972 Int)) Int (ite (= x8972 x2432) x5130 (x520 x8972)))
(define-fun x6474 ((x8972 Int)) Int (ite x4420 (x2190 x8972) (ite x2362 (x8768 x8972) (x729 x8972))))
(define-fun x1075 ((x8972 Int)) Int (ite (= x8972 x4743) x4798 (x6474 x8972)))
(define-fun x6827 ((x8972 Int)) Int (ite x4420 (x7192 x8972) (ite x2362 (x2672 x8972) (x7572 x8972))))
(define-fun x5694 ((x8972 Int)) Int (ite (= x8972 x971) x1306 (x6827 x8972)))
(define-fun x3801 ((x8972 Int)) Int (ite (= x8972 0) x8700 (x7266 x8972)))
(define-fun x5891 ((x8972 Int)) Int (ite x6585 (x4122 x8972) (x6200 x8972)))
(define-fun x4114 ((x8972 Int)) Int (ite x6585 (x1982 x8972) (x8000 x8972)))
(define-fun x1571 ((x8972 Int)) Int (ite x6585 (x1764 x8972) (x3327 x8972)))
(define-fun x4546 ((x8972 Int)) Int (ite x6585 (x2058 x8972) (x2306 x8972)))
(define-fun x1391 ((x8972 Int)) Int (ite x3763 (x8130 x8972) (x785 x8972)))
(define-fun x3080 ((x8972 Int)) Int (ite x3763 (x5261 x8972) (x3092 x8972)))
(define-fun x2339 ((x8972 Int)) Int (ite x3763 (x5538 x8972) (x7506 x8972)))
(define-fun x558 ((x8972 Int)) Int (ite x3763 (x6117 x8972) (x8790 x8972)))
(define-fun x6187 ((x8972 Int)) Int (ite x1050 (x5137 x8972) (x8788 x8972)))
(define-fun x8994 ((x8972 Int)) Int (ite x1050 (x2464 x8972) (x715 x8972)))
(define-fun x7749 ((x8972 Int)) Int (ite x1050 (x8185 x8972) (x5888 x8972)))
(define-fun x3252 ((x8972 Int)) Int (ite x1050 (x2523 x8972) (x964 x8972)))
(define-fun x5727 ((x8972 Int)) Int (ite x8804 (x2058 x8972) (x4922 x8972)))
(define-fun x8503 ((x8972 Int)) Int (ite x8804 (x1982 x8972) (x658 x8972)))
(define-fun x2059 ((x8972 Int)) Int (ite x8804 (x4122 x8972) (x3601 x8972)))
(define-fun x5667 ((x8972 Int)) Int (ite x8804 (x7112 x8972) (ite x496 (x5509 x8972) (x7112 x8972))))
(define-fun x2320 ((x8972 Int)) Int (ite x8804 (x1764 x8972) (x564 x8972)))
(define-fun x5701 ((x8972 Int)) Int (ite x8830 (x6903 x8972) (x4332 x8972)))
(define-fun x6310 ((x8972 Int)) Int (ite x8830 (x6763 x8972) (x4762 x8972)))
(define-fun x3489 ((x8972 Int)) Int (ite x8830 (x3002 x8972) (x7414 x8972)))
(define-fun x2484 ((x8972 Int)) Int (ite x8830 (x1630 x8972) (x387 x8972)))
(define-fun x5429 ((x8972 Int)) Int (ite x5875 (x7507 x8972) (ite x7252 (x7507 x8972) (x1982 x8972))))
(define-fun x8859 ((x8972 Int)) Int (ite x5875 (x2686 x8972) (ite x7252 (x2686 x8972) (x4122 x8972))))
(define-fun x1735 ((x8972 Int)) Int (ite x5875 (x4280 x8972) (ite x7252 (x4280 x8972) (x2058 x8972))))
(define-fun x9116 ((x8972 Int)) Int (ite x5875 (x1302 x8972) (ite x7252 (x1302 x8972) (x1764 x8972))))
(define-fun x350 ((x8972 Int)) Int (ite x4383 (x4064 x8972) (x6916 x8972)))
(define-fun x2633 ((x8972 Int)) Int (ite x4383 (x2511 x8972) (x6243 x8972)))
(define-fun x1066 ((x8972 Int)) Int (ite x4383 (x2036 x8972) (x1119 x8972)))
(define-fun x2998 ((x8972 Int)) Int (ite x4383 (x1806 x8972) (x2496 x8972)))
(define-fun x8893 ((x8972 Int)) Int (ite (= x8972 x1525) x3846 (x4492 x8972)))
(define-fun x2 ((x8972 Int)) Int (ite x2009 (x4492 x8972) (x8893 x8972)))
(define-fun x8372 ((x8972 Int)) Int (ite (= 480 x8972) x9088 (x2 x8972)))
(define-fun x16 ((x8972 Int)) Int (ite x1228 (x8372 x8972) (x5603 x8972)))
(define-fun x1001 ((x8972 Int)) Int (ite (= x7058 x8972) x2211 (x16 x8972)))
(define-fun x8369 ((x8972 Int)) Int (ite (= x2668 x8972) x7842 (x1001 x8972)))
(define-fun x7200 ((x8972 Int)) Int (ite (= x8972 x2557) x4856 (x8369 x8972)))
(define-fun x4587 ((x8972 Int)) Int (ite (= x6305 x8972) x2514 (x7200 x8972)))
(define-fun x992 ((x8972 Int)) Int (ite (= x8972 x8698) x2663 (x4587 x8972)))
(define-fun x1784 ((x8972 Int)) Int (ite (= x1627 x8972) x5427 (x992 x8972)))
(define-fun x2102 ((x8972 Int)) Int (ite (= x3044 x8972) x6882 (x1784 x8972)))
(define-fun x6189 ((x8972 Int)) Int (ite (= x3336 x8972) x4089 (x2102 x8972)))
(define-fun x2684 ((x8972 Int)) Int (ite (= x1425 x8972) x1388 (x6189 x8972)))
(define-fun x5383 ((x8972 Int)) Int (ite (= x8972 x4816) x5480 (x2684 x8972)))
(define-fun x1595 ((x8972 Int)) Int (ite (= x864 x8972) x1768 (x5383 x8972)))
(define-fun x2540 ((x8972 Int)) Int (ite (= x8972 x8977) x7761 (x1595 x8972)))
(define-fun x1734 ((x8972 Int)) Int (ite x4507 (x1595 x8972) (x2540 x8972)))
(define-fun x6504 ((x8972 Int)) Int (ite (= x8972 x1251) x1334 (x1734 x8972)))
(define-fun x8398 ((x8972 Int)) Int (ite (= x8972 x1251) 0 (x1595 x8972)))
(define-fun x364 ((x8972 Int)) Int (ite x5175 (x6504 x8972) (x8398 x8972)))
(define-fun x7733 ((x8972 Int)) Int (ite (= x8972 x8233) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x364 x8972)))
(define-fun x2399 ((x8972 Int)) Int (ite (= x1594 x8972) x7922 (x7733 x8972)))
(define-fun x6751 ((x8972 Int)) Int (ite (= x4137 x8972) 128 (x2399 x8972)))
(define-fun x5583 ((x8972 Int)) Int (ite (= x8972 x5687) x2604 (x6751 x8972)))
(define-fun x4536 ((x8972 Int)) Int (ite (= x2715 x8972) x6169 (x5583 x8972)))
(define-fun x1998 ((x8972 Int)) Int (ite (= x1824 x8972) x811 (x4536 x8972)))
(define-fun x3646 ((x8972 Int)) Int (ite (= x8972 x2591) x8694 (x1998 x8972)))
(define-fun x1671 ((x8972 Int)) Int (ite (= x6664 x8972) x5807 (x8689 x8972)))
(define-fun x2149 ((x8972 Int)) Int (ite x4318 (x8689 x8972) (x1671 x8972)))
(define-fun x960 ((x8972 Int)) Int (ite (= 480 x8972) x5710 (x2149 x8972)))
(define-fun x6046 ((x8972 Int)) Int (ite x2597 (x960 x8972) (x3987 x8972)))
(define-fun x6356 ((x8972 Int)) Int (ite (= x4288 x8972) x3629 (x6046 x8972)))
(define-fun x3943 ((x8972 Int)) Int (ite (= x657 x8972) x4321 (x6356 x8972)))
(define-fun x5207 ((x8972 Int)) Int (ite (= x8972 x6152) x3380 (x3943 x8972)))
(define-fun x8730 ((x8972 Int)) Int (ite (= x3087 x8972) x1590 (x5207 x8972)))
(define-fun x1150 ((x8972 Int)) Int (ite (= x8972 x5781) x4201 (x8730 x8972)))
(define-fun x1449 ((x8972 Int)) Int (ite (= x8972 x6252) x1205 (x1150 x8972)))
(define-fun x4413 ((x8972 Int)) Int (ite (= x358 x8972) x1285 (x1449 x8972)))
(define-fun x8423 ((x8972 Int)) Int (ite (= x8972 x4482) x7330 (x4413 x8972)))
(define-fun x6850 ((x8972 Int)) Int (ite (= x1179 x8972) x5838 (x8423 x8972)))
(define-fun x8692 ((x8972 Int)) Int (ite (= x8972 x5308) x2308 (x6850 x8972)))
(define-fun x6321 ((x8972 Int)) Int (ite (= x8972 x8705) x3607 (x8692 x8972)))
(define-fun x4251 ((x8972 Int)) Int (ite (= x8972 x8735) x5669 (x6321 x8972)))
(define-fun x4124 ((x8972 Int)) Int (ite x4883 (x6321 x8972) (x4251 x8972)))
(define-fun x5052 ((x8972 Int)) Int (ite (= x8972 x3849) x6013 (x4124 x8972)))
(define-fun x7876 ((x8972 Int)) Int (ite (= x3849 x8972) 0 (x6321 x8972)))
(define-fun x2317 ((x8972 Int)) Int (ite x4994 (x5052 x8972) (x7876 x8972)))
(define-fun x7091 ((x8972 Int)) Int (ite (= x8972 x1972) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x2317 x8972)))
(define-fun x947 ((x8972 Int)) Int (ite (= x5094 x8972) x5982 (x7091 x8972)))
(define-fun x4586 ((x8972 Int)) Int (ite (= x3338 x8972) 128 (x947 x8972)))
(define-fun x6608 ((x8972 Int)) Int (ite (= x8972 x3838) x3245 (x4586 x8972)))
(define-fun x7915 ((x8972 Int)) Int (ite (= x8972 x6254) x5610 (x6608 x8972)))
(define-fun x304 ((x8972 Int)) Int (ite (= x2410 x8972) x7953 (x7915 x8972)))
(define-fun x1675 ((x8972 Int)) Int (ite (= x8972 x6954) x7055 (x304 x8972)))
(define-fun x2101 ((x8972 Int)) Int (ite (= x198 x8972) x3177 (x8370 x8972)))
(define-fun x3222 ((x8972 Int)) Int (ite x4159 (x8370 x8972) (x2101 x8972)))
(define-fun x8452 ((x8972 Int)) Int (ite (= x8972 480) x6814 (x3222 x8972)))
(define-fun x5086 ((x8972 Int)) Int (ite x6238 (x8452 x8972) (x4597 x8972)))
(define-fun x4516 ((x8972 Int)) Int (ite (= x5044 x8972) x9046 (x5086 x8972)))
(define-fun x7704 ((x8972 Int)) Int (ite (= x831 x8972) x8675 (x4516 x8972)))
(define-fun x1550 ((x8972 Int)) Int (ite (= x8972 x3828) x6509 (x7704 x8972)))
(define-fun x5176 ((x8972 Int)) Int (ite (= x2344 x8972) x1506 (x1550 x8972)))
(define-fun x7585 ((x8972 Int)) Int (ite (= x8972 x6703) x6275 (x5176 x8972)))
(define-fun x3174 ((x8972 Int)) Int (ite (= x8972 x3107) x1163 (x7585 x8972)))
(define-fun x4573 ((x8972 Int)) Int (ite (= x8972 x5578) x4980 (x3174 x8972)))
(define-fun x1536 ((x8972 Int)) Int (ite (= x8972 x4206) x3377 (x4573 x8972)))
(define-fun x7446 ((x8972 Int)) Int (ite (= x6625 x8972) x9045 (x1536 x8972)))
(define-fun x149 ((x8972 Int)) Int (ite (= x8972 x4593) x112 (x7446 x8972)))
(define-fun x2808 ((x8972 Int)) Int (ite (= x8805 x8972) x5200 (x149 x8972)))
(define-fun x1331 ((x8972 Int)) Int (ite (= x308 x8972) x5342 (x2808 x8972)))
(define-fun x218 ((x8972 Int)) Int (ite x2462 (x2808 x8972) (x1331 x8972)))
(define-fun x1187 ((x8972 Int)) Int (ite (= x8972 x230) x847 (x218 x8972)))
(define-fun x5713 ((x8972 Int)) Int (ite (= x8972 x230) 0 (x2808 x8972)))
(define-fun x5343 ((x8972 Int)) Int (ite x7398 (x1187 x8972) (x5713 x8972)))
(define-fun x2637 ((x8972 Int)) Int (ite (= x8972 x978) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x5343 x8972)))
(define-fun x1178 ((x8972 Int)) Int (ite (= x8972 x7743) x7275 (x2637 x8972)))
(define-fun x2004 ((x8972 Int)) Int (ite (= x2124 x8972) 128 (x1178 x8972)))
(define-fun x8459 ((x8972 Int)) Int (ite (= x1880 x8972) x1151 (x2004 x8972)))
(define-fun x8595 ((x8972 Int)) Int (ite (= x8972 x4584) x280 (x8459 x8972)))
(define-fun x8386 ((x8972 Int)) Int (ite (= x1605 x8972) x1180 (x8595 x8972)))
(define-fun x3832 ((x8972 Int)) Int (ite (= x8972 x1582) x2157 (x8386 x8972)))
(define-fun x8136 ((x8972 Int)) Int (ite (= x8972 x8214) x5990 (x3646 x8972)))
(define-fun x4926 ((x8972 Int)) Int (ite x2818 (x3646 x8972) (ite x2679 (x1998 x8972) (ite x8781 (x4536 x8972) (ite x5693 (x5583 x8972) (x8136 x8972))))))
(define-fun x3953 ((x8972 Int)) Int (ite (= x8532 x8972) 0 (x4926 x8972)))
(define-fun x7508 ((x8972 Int)) Int (ite (= x8972 x3492) x845 (x3953 x8972)))
(define-fun x6739 ((x8972 Int)) Int (ite (= x8972 x3522) x1071 (x7508 x8972)))
(define-fun x4236 ((x8972 Int)) Int (ite (= x8972 x5877) x1168 (x6739 x8972)))
(define-fun x7503 ((x8972 Int)) Int (ite (= x8972 x6644) x4232 (x4236 x8972)))
(define-fun x4981 ((x8972 Int)) Int (ite (= x3862 x8972) x6322 (x7503 x8972)))
(define-fun x1488 ((x8972 Int)) Int (ite (= x8972 x6257) x6765 (x4981 x8972)))
(define-fun x5582 ((x8972 Int)) Int (ite (= x8486 x8972) x7929 (x1488 x8972)))
(define-fun x653 ((x8972 Int)) Int (ite x4888 (x1488 x8972) (ite x110 (x4981 x8972) (ite x2044 (x7503 x8972) (ite x7978 (x4236 x8972) (x5582 x8972))))))
(define-fun x8457 ((x8972 Int)) Int (ite (= x8972 x4200) 0 (x653 x8972)))
(define-fun x987 ((x8972 Int)) Int (ite (= x4894 x8972) x4553 (x622 x8972)))
(define-fun x6530 ((x8972 Int)) Int (ite (= x7655 x8972) x1666 (x987 x8972)))
(define-fun x3236 ((x8972 Int)) Int (ite (= x8972 x8405) x3091 (x1675 x8972)))
(define-fun x1954 ((x8972 Int)) Int (ite x7816 (x1675 x8972) (ite x4147 (x304 x8972) (ite x4541 (x7915 x8972) (ite x2952 (x6608 x8972) (x3236 x8972))))))
(define-fun x8780 ((x8972 Int)) Int (ite (= x344 x8972) 0 (x1954 x8972)))
(define-fun x3620 ((x8972 Int)) Int (ite (= x252 x8972) x275 (x8780 x8972)))
(define-fun x4224 ((x8972 Int)) Int (ite (= x2431 x8972) x8864 (x3620 x8972)))
(define-fun x4658 ((x8972 Int)) Int (ite (= x2853 x8972) x5218 (x4224 x8972)))
(define-fun x3636 ((x8972 Int)) Int (ite (= x273 x8972) x3077 (x4658 x8972)))
(define-fun x8496 ((x8972 Int)) Int (ite (= x8972 x741) x854 (x3636 x8972)))
(define-fun x2917 ((x8972 Int)) Int (ite (= x3743 x8972) x8519 (x8496 x8972)))
(define-fun x2184 ((x8972 Int)) Int (ite (= x8972 x8368) x6384 (x3832 x8972)))
(define-fun x6470 ((x8972 Int)) Int (ite x7612 (x3832 x8972) (ite x5922 (x8386 x8972) (ite x3501 (x8595 x8972) (ite x5472 (x8459 x8972) (x2184 x8972))))))
(define-fun x7245 ((x8972 Int)) Int (ite (= x4754 x8972) 0 (x6470 x8972)))
(define-fun x6122 ((x8972 Int)) Int (ite (= x8972 x1672) x6911 (x7245 x8972)))
(define-fun x7897 ((x8972 Int)) Int (ite (= x8972 x7715) x187 (x6122 x8972)))
(define-fun x2451 ((x8972 Int)) Int (ite (= x8972 x2650) x4152 (x7897 x8972)))
(define-fun x3969 ((x8972 Int)) Int (ite (= x8972 x4693) x1635 (x2451 x8972)))
(define-fun x1333 ((x8972 Int)) Int (ite (= x1046 x8972) x528 (x3969 x8972)))
(define-fun x7088 ((x8972 Int)) Int (ite (= x3704 x8972) x3777 (x1333 x8972)))
(define-fun x712 ((x8972 Int)) Int (ite (= x5006 x8972) x4668 (x2917 x8972)))
(define-fun x9069 ((x8972 Int)) Int (ite x3083 (x2917 x8972) (ite x9021 (x8496 x8972) (ite x3531 (x3636 x8972) (ite x3033 (x4658 x8972) (x712 x8972))))))
(define-fun x8754 ((x8972 Int)) Int (ite (= x2830 x8972) 0 (x9069 x8972)))
(define-fun x1835 ((x8972 Int)) Int (ite (= x8972 x2898) x5485 (x7088 x8972)))
(define-fun x6821 ((x8972 Int)) Int (ite x973 (x7088 x8972) (ite x5091 (x1333 x8972) (ite x5995 (x3969 x8972) (ite x7557 (x2451 x8972) (x1835 x8972))))))
(define-fun x5989 ((x8972 Int)) Int (ite (= x8972 x3295) 0 (x6821 x8972)))
(define-fun x7634 ((x8972 Int)) Int (x4122 x8972))
(define-fun x419 ((x8972 Int)) Int (x2058 x8972))
(define-fun x527 ((x8972 Int)) Int (x1982 x8972))
(define-fun x4993 ((x8972 Int)) Int (x1764 x8972))
(define-fun x7213 ((x8972 Int)) Int (ite (= x7419 x8972) x8803 (x6879 x8972)))
(define-fun x2141 ((x8972 Int)) Int (ite (= x8972 x928) x4796 (x399 x8972)))
(define-fun x2992 ((x8972 Int)) Int (ite (= x8972 x5970) x1306 (x1277 x8972)))
(define-fun x232 ((x8972 Int)) Int (ite x3848 (x7767 x8972) (x4017 x8972)))
(define-fun x4795 ((x8972 Int)) Int (ite x3848 (x3062 x8972) (x2502 x8972)))
(define-fun x2151 ((x8972 Int)) Int (ite x3848 (x5579 x8972) (x5943 x8972)))
(define-fun x7369 ((x8972 Int)) Int (ite x3848 (x2519 x8972) (x1443 x8972)))
(define-fun x6634 ((x8972 Int)) Int (ite x3848 (x1034 x8972) (x4445 x8972)))
(define-fun x2185 ((x8972 Int)) Int (ite x3848 (x3917 x8972) (x7192 x8972)))
(define-fun x8758 ((x8972 Int)) Int (ite x3848 (x3922 x8972) (x4125 x8972)))
(define-fun x578 ((x8972 Int)) Int (ite x3848 (x2219 x8972) (x6418 x8972)))
(define-fun x2903 ((x8972 Int)) Int (ite x3848 (x6734 x8972) (x4739 x8972)))
(define-fun x1622 ((x8972 Int)) Int (ite x3848 (x8350 x8972) (x2190 x8972)))
(define-fun x8410 ((x8972 Int)) Int (ite x3848 (x5882 x8972) (x6342 x8972)))
(define-fun x7930 ((x8972 Int)) Int (ite x3848 (x718 x8972) (x6546 x8972)))
(define-fun x7613 ((x8972 Int)) Int (ite x3848 (x4133 x8972) (x1817 x8972)))
(define-fun x7961 ((x8972 Int)) Int (ite x3848 (x3841 x8972) (x5676 x8972)))
(define-fun x8818 ((x8972 Int)) Int (ite x3848 (x163 x8972) (x2419 x8972)))
(define-fun x1410 ((x8972 Int)) Int (ite x3848 (x4143 x8972) (x3465 x8972)))
(define-fun x7326 ((x8972 Int)) Int (ite x3474 (x4185 x8972) (x6418 x8972)))
(define-fun x6443 ((x8972 Int)) Int (ite x3474 (x334 x8972) (x1443 x8972)))
(define-fun x6482 ((x8972 Int)) Int (ite x3474 (x8059 x8972) (x2502 x8972)))
(define-fun x7024 ((x8972 Int)) Int (ite x3474 (x8648 x8972) (x7192 x8972)))
(define-fun x6517 ((x8972 Int)) Int (ite x3474 (x2786 x8972) (x6546 x8972)))
(define-fun x480 ((x8972 Int)) Int (ite x3474 (x6514 x8972) (x4445 x8972)))
(define-fun x2349 ((x8972 Int)) Int (ite x3474 (x5968 x8972) (x4125 x8972)))
(define-fun x3323 ((x8972 Int)) Int (ite x3474 (x5229 x8972) (x4017 x8972)))
(define-fun x4853 ((x8972 Int)) Int (ite x3474 (x7093 x8972) (x6342 x8972)))
(define-fun x983 ((x8972 Int)) Int (ite x3474 (x5803 x8972) (x5943 x8972)))
(define-fun x4315 ((x8972 Int)) Int (ite x3474 (x5466 x8972) (x4739 x8972)))
(define-fun x5210 ((x8972 Int)) Int (ite x3474 (x7975 x8972) (x2190 x8972)))
(define-fun x1808 ((x8972 Int)) Int (ite x3474 (x2578 x8972) (x2419 x8972)))
(define-fun x8611 ((x8972 Int)) Int (ite x3474 (x8084 x8972) (x3465 x8972)))
(define-fun x5073 ((x8972 Int)) Int (ite x3474 (x6375 x8972) (x5676 x8972)))
(define-fun x3529 ((x8972 Int)) Int (ite x3474 (x152 x8972) (x1817 x8972)))
(define-fun x1531 ((x8972 Int)) Int (ite x5206 (x7620 x8972) (x6546 x8972)))
(define-fun x2503 ((x8972 Int)) Int (ite x5206 (x1270 x8972) (x4739 x8972)))
(define-fun x6562 ((x8972 Int)) Int (ite x5206 (x190 x8972) (x6342 x8972)))
(define-fun x2177 ((x8972 Int)) Int (ite x5206 (x3060 x8972) (x5943 x8972)))
(define-fun x7721 ((x8972 Int)) Int (ite x5206 (x2302 x8972) (x2190 x8972)))
(define-fun x1843 ((x8972 Int)) Int (ite x5206 (x5859 x8972) (x1443 x8972)))
(define-fun x5025 ((x8972 Int)) Int (ite x5206 (x8116 x8972) (x1817 x8972)))
(define-fun x4422 ((x8972 Int)) Int (ite x5206 (x6750 x8972) (x2419 x8972)))
(define-fun x8827 ((x8972 Int)) Int (ite x5206 (x8114 x8972) (x4125 x8972)))
(define-fun x6873 ((x8972 Int)) Int (ite x5206 (x7138 x8972) (x4445 x8972)))
(define-fun x5889 ((x8972 Int)) Int (ite x5206 (x790 x8972) (x3465 x8972)))
(define-fun x8876 ((x8972 Int)) Int (ite x5206 (x8695 x8972) (x5676 x8972)))
(define-fun x311 ((x8972 Int)) Int (ite x5206 (x3410 x8972) (x2502 x8972)))
(define-fun x985 ((x8972 Int)) Int (ite x5206 (x6004 x8972) (x7192 x8972)))
(define-fun x4172 ((x8972 Int)) Int (ite x5206 (x3314 x8972) (x6418 x8972)))
(define-fun x858 ((x8972 Int)) Int (ite x5206 (x5896 x8972) (x4017 x8972)))
(define-fun x2622 ((x8972 Int)) Int (ite x6905 (x5791 x8972) (x6546 x8972)))
(define-fun x3709 ((x8972 Int)) Int (ite x6905 (x5998 x8972) (x2190 x8972)))
(define-fun x2091 ((x8972 Int)) Int (ite x6905 (x1469 x8972) (x1817 x8972)))
(define-fun x8909 ((x8972 Int)) Int (ite x6905 (x20 x8972) (x4739 x8972)))
(define-fun x4104 ((x8972 Int)) Int (ite x6905 (x2435 x8972) (x2502 x8972)))
(define-fun x495 ((x8972 Int)) Int (ite x6905 (x8217 x8972) (x6342 x8972)))
(define-fun x689 ((x8972 Int)) Int (ite x6905 (x6132 x8972) (x2419 x8972)))
(define-fun x390 ((x8972 Int)) Int (ite x6905 (x961 x8972) (x4125 x8972)))
(define-fun x4450 ((x8972 Int)) Int (ite x6905 (x6933 x8972) (x4445 x8972)))
(define-fun x4483 ((x8972 Int)) Int (ite x6905 (x6835 x8972) (x5943 x8972)))
(define-fun x3655 ((x8972 Int)) Int (ite x6905 (x7516 x8972) (x7192 x8972)))
(define-fun x9131 ((x8972 Int)) Int (ite x6905 (x7241 x8972) (x4017 x8972)))
(define-fun x1831 ((x8972 Int)) Int (ite x6905 (x3165 x8972) (x1443 x8972)))
(define-fun x3470 ((x8972 Int)) Int (ite x6905 (x2683 x8972) (x6418 x8972)))
(define-fun x6526 ((x8972 Int)) Int (ite x6905 (x13 x8972) (x3465 x8972)))
(define-fun x4129 ((x8972 Int)) Int (ite x6905 (x7316 x8972) (x5676 x8972)))
(define-fun x6483 ((x8972 Int)) Int (ite x5971 (x2713 x8972) (x1817 x8972)))
(define-fun x5169 ((x8972 Int)) Int (ite x5971 (x4276 x8972) (x4125 x8972)))
(define-fun x4656 ((x8972 Int)) Int (ite x5971 (x5617 x8972) (x5676 x8972)))
(define-fun x3348 ((x8972 Int)) Int (ite x5971 (x4000 x8972) (x3465 x8972)))
(define-fun x4747 ((x8972 Int)) Int (ite x5971 (x771 x8972) (x4739 x8972)))
(define-fun x6227 ((x8972 Int)) Int (ite x5971 (x9027 x8972) (x1443 x8972)))
(define-fun x8664 ((x8972 Int)) Int (ite x5971 (x2351 x8972) (x7192 x8972)))
(define-fun x1885 ((x8972 Int)) Int (ite x5971 (x1617 x8972) (x2502 x8972)))
(define-fun x7643 ((x8972 Int)) Int (ite x5971 (x2588 x8972) (x2419 x8972)))
(define-fun x5559 ((x8972 Int)) Int (ite x5971 (x5082 x8972) (x6418 x8972)))
(define-fun x157 ((x8972 Int)) Int (ite x5971 (x6544 x8972) (x5943 x8972)))
(define-fun x6549 ((x8972 Int)) Int (ite x5971 (x4848 x8972) (x2190 x8972)))
(define-fun x3864 ((x8972 Int)) Int (ite x5971 (x1313 x8972) (x4017 x8972)))
(define-fun x6091 ((x8972 Int)) Int (ite x5971 (x6330 x8972) (x6342 x8972)))
(define-fun x6127 ((x8972 Int)) Int (ite x5971 (x8571 x8972) (x6546 x8972)))
(define-fun x6831 ((x8972 Int)) Int (ite x5971 (x2449 x8972) (x4445 x8972)))
(define-fun x8732 ((x8972 Int)) Int (ite x8858 (x1593 x8972) (x4122 x8972)))
(define-fun x8028 ((x8972 Int)) Int (ite x8858 (x6124 x8972) (x1982 x8972)))
(define-fun x7310 ((x8972 Int)) Int (ite x8858 (x5286 x8972) (x1764 x8972)))
(define-fun x5375 ((x8972 Int)) Int (ite x8858 (x7629 x8972) (x2058 x8972)))
(define-fun x6652 ((x8972 Int)) Int (ite x4192 (x8380 x8972) (x1764 x8972)))
(define-fun x7043 ((x8972 Int)) Int (ite x4192 (x5481 x8972) (x1982 x8972)))
(define-fun x1323 ((x8972 Int)) Int (ite x4192 (x24 x8972) (x2058 x8972)))
(define-fun x6825 ((x8972 Int)) Int (ite x4192 (x524 x8972) (x4122 x8972)))
(define-fun x1691 ((x8972 Int)) Int (ite x496 (x4988 x8972) (x2559 x8972)))
(define-fun x3155 ((x8972 Int)) Int (ite (= x7655 x8972) x5172 (x1691 x8972)))
(define-fun x6265 ((x8972 Int)) Int (ite x3387 (x4116 x8972) (x2058 x8972)))
(define-fun x7628 ((x8972 Int)) Int (ite x3387 (x1454 x8972) (x1982 x8972)))
(define-fun x7259 ((x8972 Int)) Int (ite x3387 (x6351 x8972) (x6530 x8972)))
(define-fun x5951 ((x8972 Int)) Int (ite x3387 (x3257 x8972) (x4122 x8972)))
(define-fun x2867 ((x8972 Int)) Int (ite x3387 (x7602 x8972) (x1764 x8972)))
(define-fun x1365 ((x8972 Int)) Int (ite (= x7655 x8972) x1980 (x7259 x8972)))
(define-fun x6940 ((x8972 Int)) Int (ite x2677 (x1697 x8972) (x6036 x8972)))
(define-fun x3370 ((x8972 Int)) Int (ite (= x7655 x8972) x5593 (x6940 x8972)))
(define-fun x459 ((x8972 Int)) Int (ite x1220 (x2395 x8972) (x1764 x8972)))
(define-fun x8222 ((x8972 Int)) Int (ite x1220 (x2824 x8972) (x1982 x8972)))
(define-fun x8725 ((x8972 Int)) Int (ite x1220 (x2634 x8972) (x2058 x8972)))
(define-fun x2506 ((x8972 Int)) Int (ite x1220 (x127 x8972) (x4122 x8972)))
(define-fun x2047 ((x8972 Int)) Int (ite x3069 (x8097 x8972) (x2095 x8972)))
(define-fun x6256 ((x8972 Int)) Int (ite (and (>= x8972 128) (< x8972 160)) (x2047 (- x8972 128)) (x3267 x8972)))
(define-fun x6792 ((x8972 Int)) Int (x8841 x8972))
(define-fun x7626 ((x8972 Int)) Int (x6546 x8972))
(define-fun x7328 ((x8972 Int)) Int (x5676 x8972))
(define-fun x5824 ((x8972 Int)) Int (x7445 x8972))
(define-fun x29 ((x8972 Int)) Int (x3465 x8972))
(define-fun x5691 ((x8972 Int)) Int (x4125 x8972))
(define-fun x2293 ((x8972 Int)) Int (x4017 x8972))
(define-fun x8379 ((x8972 Int)) Int (ite x8353 (x1754 x8972) (ite x8593 (x6617 x8972) (x2640 x8972))))
(define-fun x8151 ((x8972 Int)) Int (x1991 x8972))
(define-fun x1439 ((x8972 Int)) Int (x2190 x8972))
(define-fun x3622 ((x8972 Int)) Int (x1443 x8972))
(define-fun x2528 ((x8972 Int)) Int (x1817 x8972))
(define-fun x5513 ((x8972 Int)) Int (x6418 x8972))
(define-fun x1056 ((x8972 Int)) Int (x4739 x8972))
(define-fun x7333 ((x8972 Int)) Int (x2502 x8972))
(define-fun x1939 ((x8972 Int)) Int (x3011 x8972))
(define-fun x8927 ((x8972 Int)) Int (x4445 x8972))
(define-fun x703 ((x8972 Int)) Int (x6342 x8972))
(define-fun x6867 ((x8972 Int)) Int (x2419 x8972))
(define-fun x6846 ((x8972 Int)) Int (x8042 x8972))
(define-fun x8534 ((x8972 Int)) Int (x7192 x8972))
(define-fun x4189 ((x8972 Int)) Int (x5943 x8972))
(define-fun x5809 ((x8972 Int)) Int (x7941 x8972))
(define-fun x1564 ((x8972 Int)) Int (ite (and (< x8972 160) (>= x8972 128)) (x8379 (- x8972 128)) (x5203 x8972)))
(define-fun x7409 ((x8972 Int)) Int (ite x6858 (x988 x8972) (x5376 x8972)))
(define-fun x239 ((x8972 Int)) Int (ite (and (< x8972 160) (>= x8972 128)) (x7409 (- x8972 128)) (x2712 x8972)))
(define-fun x7885 ((x8972 Int)) Int (x2502 x8972))
(define-fun x6314 ((x8972 Int)) Int (x5943 x8972))
(define-fun x3908 ((x8972 Int)) Int (x3011 x8972))
(define-fun x5368 ((x8972 Int)) Int (x4739 x8972))
(define-fun x3524 ((x8972 Int)) Int (x8841 x8972))
(define-fun x4083 ((x8972 Int)) Int (x3465 x8972))
(define-fun x5771 ((x8972 Int)) Int (x6418 x8972))
(define-fun x634 ((x8972 Int)) Int (x6546 x8972))
(define-fun x4572 ((x8972 Int)) Int (x1817 x8972))
(define-fun x8436 ((x8972 Int)) Int (x1991 x8972))
(define-fun x6317 ((x8972 Int)) Int (x7941 x8972))
(define-fun x2939 ((x8972 Int)) Int (ite x5171 (x6400 x8972) (ite x8702 (x6207 x8972) (x8017 x8972))))
(define-fun x2621 ((x8972 Int)) Int (x4017 x8972))
(define-fun x6677 ((x8972 Int)) Int (x1443 x8972))
(define-fun x354 ((x8972 Int)) Int (x4125 x8972))
(define-fun x8765 ((x8972 Int)) Int (x4445 x8972))
(define-fun x9106 ((x8972 Int)) Int (x7445 x8972))
(define-fun x4749 ((x8972 Int)) Int (x5676 x8972))
(define-fun x5380 ((x8972 Int)) Int (x8042 x8972))
(define-fun x3710 ((x8972 Int)) Int (x2419 x8972))
(define-fun x1662 ((x8972 Int)) Int (x7192 x8972))
(define-fun x3523 ((x8972 Int)) Int (x2190 x8972))
(define-fun x8360 ((x8972 Int)) Int (x6342 x8972))
(define-fun x3901 ((x8972 Int)) Int (ite (and (>= x8972 128) (> 160 x8972)) (x2939 (- x8972 128)) (x305 x8972)))
(define-fun x5790 ((x8972 Int)) Int (ite x4420 (x4180 x8972) (ite x2362 (x7630 x8972) (x8719 x8972))))
(define-fun x4271 ((x8972 Int)) Int (ite (= x476 x8972) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x4088 x8972)))
(define-fun x4902 ((x8972 Int)) Int (ite (= x1554 x8972) x3015 (x4271 x8972)))
(define-fun x3385 ((x8972 Int)) Int (ite (= 128 x8972) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x2901 x8972)))
(define-fun x1540 ((x8972 Int)) Int (ite (= 132 x8972) x7525 (x3385 x8972)))
(define-fun x1987 ((x8972 Int)) Int (ite (= 164 x8972) x1849 (x1540 x8972)))
(define-fun x8027 ((x8972 Int)) Int (ite (= x8972 196) x786 (x1987 x8972)))
(define-fun x440 ((x8972 Int)) Int (ite (= x8972 228) x3644 (x8027 x8972)))
(define-fun x7017 ((x8972 Int)) Int (ite (= 128 x8972) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2901 x8972)))
(define-fun x8178 ((x8972 Int)) Int (ite (= 132 x8972) x4663 (x7017 x8972)))
(define-fun x5679 ((x8972 Int)) Int (ite (= x8972 164) x3143 (x8178 x8972)))
(define-fun x2817 ((x8972 Int)) Int (ite (= x8972 128) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x2901 x8972)))
(define-fun x8882 ((x8972 Int)) Int (ite (= x8972 132) x1860 (x2817 x8972)))
(define-fun x624 ((x8972 Int)) Int (ite (= 164 x8972) x2942 (x8882 x8972)))
(define-fun x6657 ((x8972 Int)) Int (ite (= x4894 x8972) x5403 (x4778 x8972)))
(define-fun x6668 ((x8972 Int)) Int (ite (= x8972 x8869) x5658 (x6657 x8972)))
(define-fun x5114 ((x8972 Int)) Int (ite (and (>= x8972 128) (> 160 x8972)) (x7870 (- x8972 128)) (x624 x8972)))
(define-fun x1435 ((x8972 Int)) Int (ite (= x8972 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2901 x8972)))
(define-fun x8195 ((x8972 Int)) Int (ite (= 132 x8972) x2040 (x1435 x8972)))
(define-fun x3004 ((x8972 Int)) Int (ite (= 164 x8972) x8049 (x8195 x8972)))
(define-fun x3233 ((x8972 Int)) Int (ite (= 196 x8972) x4927 (x3004 x8972)))
(define-fun x2517 ((x8972 Int)) Int (ite (= x4894 x8972) x7945 (x4778 x8972)))
(define-fun x3690 ((x8972 Int)) Int (ite (= x8869 x8972) x3260 (x2517 x8972)))
(define-fun x2285 ((x8972 Int)) Int (ite (= 128 x8972) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2901 x8972)))
(define-fun x5288 ((x8972 Int)) Int (ite (= 132 x8972) x7724 (x2285 x8972)))
(define-fun x4475 ((x8972 Int)) Int (ite (= x8972 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2901 x8972)))
(define-fun x5386 ((x8972 Int)) Int (ite (= 132 x8972) x667 (x4475 x8972)))
(define-fun x2631 ((x8972 Int)) Int (ite x849 (x4004 x8972) (ite x283 (x191 x8972) (x1740 x8972))))
(define-fun x2618 ((x8972 Int)) Int (ite x849 (x9130 x8972) (ite x283 (x6422 x8972) (x7040 x8972))))
(define-fun x9080 ((x8972 Int)) Int (ite x849 (ite x4420 (x4634 x8972) (ite x2362 (ite x1137 (x3273 x8972) (ite x5855 (x4501 x8972) (ite x2150 (ite x2949 (ite x7263 (x3946 x8972) (ite x8995 (ite x6583 (ite x5646 (x4634 x8972) (x2658 x8972)) (x4341 x8972)) (x8320 x8972))) (x7515 x8972)) (x5799 x8972)))) (x2546 x8972))) (ite x283 (ite x1639 (x7881 x8972) (ite x7111 (x4068 x8972) (ite x8680 (ite x4458 (ite x2466 (x4713 x8972) (ite x7723 (ite x4003 (ite x325 (ite x4420 (x4634 x8972) (ite x2362 (ite x1137 (x3273 x8972) (ite x5855 (x4501 x8972) (ite x2150 (ite x2949 (ite x7263 (x3946 x8972) (ite x8995 (ite x6583 (ite x5646 (x4634 x8972) (x2658 x8972)) (x4341 x8972)) (x8320 x8972))) (x7515 x8972)) (x5799 x8972)))) (x2546 x8972))) (x8413 x8972)) (x2756 x8972)) (x5963 x8972))) (x5749 x8972)) (x7325 x8972)))) (x6297 x8972))))
(define-fun x2921 ((x8972 Int)) Int (ite x849 (x8248 x8972) (ite x283 (x8492 x8972) (x2329 x8972))))
(define-fun x2045 ((x8972 Int)) Int (ite x849 (x3801 x8972) (x3399 x8972)))
(define-fun x9114 ((x8972 Int)) Int (ite x849 (x989 x8972) (ite x283 (x7307 x8972) (x4759 x8972))))
(define-fun x8274 ((x8972 Int)) Int (ite (and (<= x476 x8972) (> (+ 32 x476) x8972)) (x2045 (- x8972 x476)) (x375 x8972)))
(define-fun x6704 ((x8972 Int)) Int (ite (= x1788 x8972) 0 (x2631 x8972)))
(define-fun x1217 ((x8972 Int)) Int (ite (= x3099 x8972) 1 (x2921 x8972)))
(define-fun x3942 ((x8972 Int)) Int (ite (= x8972 x2569) x8142 (x9114 x8972)))
(define-fun x3770 ((x8972 Int)) Int (ite (= x8972 x3228) 0 (x2618 x8972)))
(define-fun x8356 ((x8972 Int)) Int 0)
(define-fun x3552 ((x8972 Int)) Int (ite (= x8972 128) x4719 (x7393 x8972)))
(define-fun x4367 ((x8972 Int)) Int (ite (= x8972 160) x8344 (x3552 x8972)))
(define-fun x9112 ((x8972 Int)) Int (ite (= x8972 192) x638 (x4367 x8972)))
(define-fun x416 ((x8972 Int)) Int 0)
(define-fun x3550 ((x8972 Int)) Int 0)
(assert (= x7238 (and x9126 x867)))
(assert (= (or x2762 x6583) x8995))
(assert (x8339 x1690))
(assert (x2673 x1209))
(assert (x4097 x2819 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x3560 256))
(assert (not (x669 (x3305 64 x162 100))))
(assert (x2673 x7029))
(assert (= (and (not x3435) x6670) x8407))
(assert (x2673 x8956))
(assert (= (and (not x3200) x1772) x3170))
(assert (= (and x5321 x1430) x4764))
(assert (x5050 x9088))
(assert (x2673 x4842))
(assert (not (x669 (x3305 64 x1306 2))))
(assert (not (x669 (x3305 64 x6651 100))))
(assert (x2673 x652))
(assert (= (x1802 (x3305 64 x8946 100)) 100))
(assert (x2673 x2032))
(assert (=> (>= 10000 x3724) (= 0 (x530 x3724))))
(assert (x2673 x509))
(assert (= x5511 (x4290 (x3305 64 x5511 100))))
(assert (= x6618 (and x639 (not x6787))))
(assert (x2673 x2283))
(assert (x2673 x3239))
(assert (not (x669 (x3305 64 x3214 36))))
(assert (x4744 x7211))
(assert (x2673 x623))
(assert (= (x530 (x3305 64 x8387 36)) (x3305 64 x8387 36)))
(assert (x2673 x2383))
(assert (= x5680 (x4290 (x3305 64 x5680 100))))
(assert (= (x4290 (x3305 64 x2273 100)) x2273))
(assert (not (x669 (x3305 64 x8352 2))))
(assert (x4744 x8211))
(assert (=> (>= 10000 x8032) (= 0 (x530 x8032))))
(assert (< 10000 (x3305 64 x8777 100)))
(assert (x2673 x2699))
(assert (x2673 x8703))
(assert (= (or x6858 x4161) x62))
(assert (= x1731 (=> (= x4506 (= x6741 0)) (and (=> x4506 x1012) (=> (and (and (= (x7190 (- x5215 x14)) x3912) (= x3912 36) (= (= x8701 x2252) x1478) (= (x7405 (+ x14 4)) x5983) (>= 1461501637330902918203684832716283019655932542975 x8701) (= x5215 (x7405 (+ x5983 32)))) (not x4506)) (and (=> (and (and (= x4599 false) (>= x4657 1) (<= x5035 127) (= x7223 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= 3628442803 x6339) (<= 1 x8701) (= x8701 x4894) (>= 1461501637330902918203684832716283019655932542975 x8701) (= x4657 (x484 x4894)) (= x2239 x1462) (<= x5035 127) (= x8112 false) (= (= x1306 x7655) x6626) (= x2257 36)) (not x1478)) (and (=> (and x6626 (and (= (= x4365 255) x1350) (>= 255 x4365))) (and (=> (and x1350 (and (= x7801 36) (= x4317 false) (= true x4961))) x8273) (=> (and (not x1350) (and (= x4435 (x5917 255 x1690)) (= x8807 (= 0 x559)) (= (x8042 x6) x559) (= x6 (x3305 64 x4365 36)) (= (x5917 255 x1690) x683) (= (+ 1 x4365) x1690))) (and (=> (and (not x8807) (= x4233 (= x559 1))) (and (=> (and (not x4233) (= (= x559 2) x8920)) (and (=> (and (= (= 3 x559) x4258) (not x8920)) (and (=> (and (= x615 (= x559 4)) (not x4258)) (and (=> (and (= (= 5 x559) x4293) (not x615)) (and (=> (and (= (= x683 255) x9026) x4293) (and (=> x9026 x5059) (=> (and (not x9026) (and (= x7432 (x5917 255 x3360)) (= x7676 (x8042 x923)) (= x5742 (x5917 255 x3360)) (= x7020 (= 255 x7432)) (= x3360 (+ x683 1)) (= x923 (x3305 64 x683 36)))) (and (=> (and (and (= x5939 (= 255 x7822)) (= (x5917 255 x4540) x9084) (= x797 (x3305 64 x7432 6)) (= x7922 (x7445 x797)) (= x4540 (+ 1 x7432)) (>= 65535 x7922) (= (x5917 255 x4540) x7822)) (not x7020)) (and (=> (and (not x5939) (and (= x8270 (= x3278 255)) (= x3626 (x5917 255 x2980)) (= x3278 (x5917 255 x2980)) (= x2980 (+ x7822 1)) (= x7154 (x3305 64 x7822 36)) (= x9088 (x4588 x8479 300)) (= (x8042 x7154) x8479))) (and (=> x8270 x4793) (=> (and (not x8270) (and (= x141 (+ 1 x3278)) (= x5202 (x3305 64 x3278 100)) (= x3072 (x7941 x5202)) (= x6115 (x5917 255 x141)) (= (= x6939 255) x5040) (= (x5917 255 x141) x6939))) (and (=> x5040 x4793) (=> (and (not x5040) (and (= (x7941 x7674) x2430) (= (x3305 64 x6939 100) x7674) (= (= x3932 255) x1930) (= x5353 (+ 1 x6939)) (= (x5917 255 x5353) x3932) (= (x5917 255 x5353) x2390))) (and (=> x1930 x4793) (=> (and (not x1930) (and (= x164 (x3305 64 x3932 100)) (= x8258 (x7941 x164)) (= (= x5721 255) x3856) (= (+ 1 x3932) x7993) (= x5721 (x5917 255 x7993)) (= x4213 (x5917 255 x7993)))) (and (=> (and (not x3856) (and (= (x5917 255 x7371) x537) (= x4832 (= x2133 255)) (= (x3305 64 x5721 100) x6781) (= (x5917 255 x7371) x2133) (= (+ x5721 1) x7371) (= x2380 (x7941 x6781)))) (and (=> x4832 x3906) (=> (and (and (= x2167 (x7941 x8971)) (= (x3305 64 x2133 100) x8971) (= (x5917 255 x120) x3808) (= (x5917 255 x120) x7892) (= x4684 (= 255 x7892)) (= (+ 1 x2133) x120)) (not x4832)) (and (=> x4684 x812) (=> (and (not x4684) (and (= x3056 (= x6099 255)) (= x6099 (x5917 255 x2767)) (= x2767 (+ x7892 1)) (= x8524 (x3305 64 x7892 100)) (= (x5917 255 x2767) x5527) (= x875 (x7941 x8524)))) (and (=> (and (and (= x5912 (+ 1 x6099)) (= (= 255 x4027) x7102) (= (x3305 64 x6099 100) x821) (= (x5917 255 x5912) x5728) (= (x5917 255 x5912) x4027) (= x1647 (x7941 x821))) (not x3056)) (and (=> (and (not x7102) (and (= x573 (x7941 x6733)) (= x4813 (x5917 255 x6110)) (= x318 (= x439 255)) (= (+ 1 x4027) x6110) (= x6733 (x3305 64 x4027 100)) (= x439 (x5917 255 x6110)))) (and (=> x318 x3719) (=> (and (and (= x5550 (x5917 255 x4166)) (= (+ x439 1) x4166) (= (x3305 64 x439 100) x7780) (= x8649 (x7941 x7780)) (= (x5917 255 x4166) x4841) (= x1060 (= 255 x5550))) (not x318)) (and (=> (and (and (= 0 x1576) (= (x5917 255 x3712) x6587) (= x3974 (+ x9088 31)) (= x5919 (x7941 x1884)) (= x6782 (> x9088 x3974)) (= (x3305 64 x5550 100) x1884) (= x2989 128) (= x3712 (+ 1 x5550)) (= x7686 (x5917 255 x3712))) (not x1060)) (and (=> (and (= x6215 (< x3974 x9088)) (not x6782)) (and (=> (and x6215 (and (= false x3486) (= 100 x7801) (= x1339 true))) x8273) (=> (and (not x6215) (and (= x8474 (x4492 128)) (= x2549 (< x8474 x9088)))) (and (=> (and (and (= x4485 true) (= x7801 100) (= false x8824)) x2549) x8273) (=> (and (not x2549) (= (= 0 x9088) x6745)) (and (=> (and (not x6745) (and (= (x5917 31 x9088) x5706) (or (= 0 x2205) (= x2205 32)) (= x1525 (+ x5706 480 x8439)) (= (+ 128 x5706 x2205) x8973) (or (= x8439 32) (= x8439 0)) (= (* (ite (= x5706 0) 1 0) 32) x8439) (= x2205 (* (ite (= 0 x5706) 1 0) 32)) (= (< x1525 x418) x3533) (= (+ x1525 x9088) x418))) (and (=> (and (not x3533) (= x6021 x1525)) x5022) (=> x3533 x3557))) (=> (and (= x864 512) x6745) x7182))))))) (=> x6782 x4793))) (=> x1060 x2848))))) (=> x7102 x1177))) (=> x3056 x5500))))))) (=> x3856 x4437))))))))) (=> x5939 x4793))) (=> x7020 x89))))) (=> (and (not x4293) (= x1264 (= 6 x559))) (and (=> (and (= (= x559 7) x8076) (not x1264)) (and (=> (and x8076 (= (= x683 255) x6966)) (and (=> x6966 x5059) (=> (and (and (= (x484 x7655) x8567) (= x3921 (x5917 255 x7257)) (>= 1461501637330902918203684832716283019655932542975 x9087) (= x7257 (+ 1 x683)) (= (x8841 x1381) x9087) (= x1031 (x5917 255 x7257)) (= x2667 (= x8567 0)) (= x1381 (x3305 64 x683 2)) (= 128 x3206)) (not x6966)) (and (=> (and (not x2667) (and (= (< 0 x2262) x867) (or (and (and x8693 (= (= x6548 (x6455 x7655)) x5290) x5290 (= x595 (x622 x4894)) (= x8693 (<= x595 (x6455 x4894))) (= x6548 (x622 x7655)) (<= x4626 4294967295)) x867) (not x867)))) x265) (=> (and (and (= x7389 false) (= x7801 0) (= x1900 true)) x2667) x8273))))) (=> (and (= x833 (= 8 x559)) (not x8076)) (and (=> (and (= x683 x5112) (not x833)) x4975) (=> (and (= (= 255 x683) x5596) x833) (and (=> (and (and (= (x8042 x2594) x1791) (= x2594 (x3305 64 x683 36)) (= 128 x7089) (= x1386 (= x8090 0)) (= (x5917 255 x7768) x6052) (= (x5917 255 x7768) x3120) (= x8090 (x484 x7655)) (= (+ x683 1) x7768)) (not x5596)) (and (=> (and (and (or (not x3475) (and x3475 (and (= x7736 (x622 x4894)) (= x7886 (x622 x7655)) x8832 x2007 (>= 4294967295 x6163) (= x8832 (<= x7736 (x4897 x4894))) (= (= x7886 (x4897 x7655)) x2007)))) (= x3475 (> x4090 0))) (not x1386)) x2297) (=> (and (and (= x7256 true) (= x7801 0) (= x6078 false)) x1386) x8273))) (=> x5596 x5059))))))) (=> (and (= (= 255 x683) x4075) x1264) (and (=> (and (not x4075) (and (= x7163 (x3305 64 x683 36)) (= x1035 (x8042 x7163)) (= (+ 1 x683) x3887) (= (x5917 255 x3887) x8157) (= x6248 (= 255 x324)) (= x324 (x5917 255 x3887)))) (and (=> x6248 x89) (=> (and (not x6248) (and (= (x5917 255 x6599) x5331) (= x4301 (= x5331 255)) (= (x3305 64 x324 36) x6326) (= x6599 (+ 1 x324)) (= (x5917 255 x6599) x2573) (= x4121 (x8042 x6326)))) (and (=> x4301 x3247) (=> (and (not x4301) (and (= (x8042 x6545) x6032) (= (x5917 255 x3344) x5096) (= (x5917 255 x3344) x2986) (= (x3305 64 x5331 36) x6545) (= x3520 (= x2986 255)) (= x3344 (+ 1 x5331)))) (and (=> (and (not x3520) (and (= x5941 (= x4959 0)) (= 128 x8392) (= x8 (x8042 x7489)) (= x4959 (x484 x7655)) (= x4956 (x5917 255 x8140)) (= x3436 (x5917 255 x8140)) (= x8140 (+ x2986 1)) (= x7489 (x3305 64 x2986 36)))) (and (=> (and x5941 (and (= x8331 true) (= x7007 false) (= 0 x7801))) x8273) (=> (and (and (= x7837 (x622 x4894)) (= x227 (>= x7837 x1035)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2869 x1035)) x871) (= x2869 (x622 x7655)) (= x3874 (and x871 x227))) (not x5941)) (and (=> (and (and (= 0 x2175) (= x4543 0)) (not x3874)) x4118) (=> (and x3874 (and (and (= x1194 (+ x1035 x4415)) (= x1194 x3438) (= (x2057 x7655) x4415) (>= x1194 0) (= x3630 (x622 x4894)) (<= x1194 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6287 (> x9034 0)) (< (+ x1035 x4415) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x3630 x1035) x7293)) (or (not x6287) (and (and x1296 (<= x1394 4294967295) (= (x6036 x7655) x7868) (= x8156 (<= x4403 (x1697 x4894))) x8156 (= x4403 (x6036 x4894)) (= (= x7868 (x1697 x7655)) x1296)) x6287)))) x2525))))) (=> x3520 x1498))))))) (=> x4075 x5059))))))) (=> (and x615 (= x1494 (= x683 255))) (and (=> x1494 x5059) (=> (and (not x1494) (and (= (x3305 64 x683 36) x1638) (= (= x5913 255) x7858) (= x4925 (x5917 255 x7480)) (= x7480 (+ x683 1)) (= (x5917 255 x7480) x5913) (= x90 (x8042 x1638)))) (and (=> x7858 x89) (=> (and (and (= x5835 (x5917 255 x8839)) (= x253 (x7941 x8546)) (= (= 255 x8613) x3371) (= x8546 (x3305 64 x5913 100)) (= x8839 (+ x5913 1)) (= x8613 (x5917 255 x8839))) (not x7858)) (and (=> (and (and (= x1441 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x90 x1335))) (= x4024 (x3305 64 x8613 36)) (= (x5917 255 x2136) x6611) (= (x622 x7655) x1335) (= x2136 (+ 1 x8613)) (= (and x1441 x6010) x1135) (= (x8042 x4024) x5906) (= x6938 (x5917 255 x2136)) (= x727 128) (= (>= x8756 x90) x6010) (= x8756 (x622 x4894))) (not x3371)) (and (=> (and (and (= 0 x577) (= x5116 0)) (not x1135)) x455) (=> (and (and (or (not x5299) (and (and (= (= (x4988 x7655) x1794) x4136) x4136 (= (x2559 x7655) x1794) (<= x8312 4294967295) (= (x2559 x4894) x1363) x8079 (= (<= x1363 (x4988 x4894)) x8079)) x5299)) (and (= x8415 (x6607 x7655)) (<= x8206 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5299 (< 0 x8515)) (= (x622 x4894) x4676) (= x8206 (+ x90 x8415)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8415 x90)) (>= x8206 0) (= x6770 (- x4676 x90)) (= x917 x8206))) x1135) x231))) (=> x3371 x3247))))))))) (=> (and x4258 (= (= 255 x683) x9098)) (and (=> (and (not x9098) (and (= x934 (x3305 64 x683 36)) (= (+ 1 x683) x2575) (= (= 255 x8359) x3656) (= x8359 (x5917 255 x2575)) (= (x8042 x934) x2053) (= x569 (x5917 255 x2575)))) (and (=> x3656 x89) (=> (and (not x3656) (and (= (x5917 255 x5652) x899) (= x536 (x3305 64 x8359 100)) (= x2144 128) (= x6038 (x484 x7655)) (= x7155 (x7941 x536)) (= (= 0 x6038) x4028) (= (+ 1 x8359) x5652) (= x6151 (x5917 255 x5652)))) (and (=> (and (not x4028) (and (or (not x6790) (and x6790 (and (>= 4294967295 x4135) (= x5089 (x622 x7655)) x1104 (= x1985 (x622 x4894)) x4803 (= x1104 (>= (x7641 x4894) x1985)) (= x4803 (= x5089 (x7641 x7655)))))) (= (> x7042 0) x6790))) x5895) (=> (and (and (= 0 x7801) (= x700 true) (= x272 false)) x4028) x8273))))) (=> x9098 x5059))))) (=> (and x8920 (= (= 255 x683) x4581)) (and (=> x4581 x5059) (=> (and (and (= x9009 (x5917 255 x7893)) (= x3407 (x3305 64 x683 6)) (>= 65535 x7275) (= (x7445 x3407) x7275) (= (= 255 x9009) x1694) (= x5975 (x5917 255 x7893)) (= (+ 1 x683) x7893)) (not x4581)) (and (=> (and (not x1694) (and (= x7406 (x8042 x7034)) (= x7034 (x3305 64 x9009 36)) (= (+ 1 x9009) x9002) (= (x4588 x7406 300) x6814) (= x6476 (= 255 x5518)) (= x5518 (x5917 255 x9002)) (= (x5917 255 x9002) x1838))) (and (=> (and (not x6476) (and (= (x5917 255 x2006) x6700) (= x168 (x7941 x398)) (= x5852 (x5917 255 x2006)) (= (= 255 x6700) x2074) (= (x3305 64 x5518 100) x398) (= x2006 (+ 1 x5518)))) (and (=> (and (and (= (x7941 x1235) x7988) (= x568 (= x2273 255)) (= x2273 (x5917 255 x6067)) (= x4337 (x5917 255 x6067)) (= (x3305 64 x6700 100) x1235) (= x6067 (+ x6700 1))) (not x2074)) (and (=> x568 x4793) (=> (and (and (= x4874 (+ x2273 1)) (= x853 (x7941 x4723)) (= x1424 (= 255 x2619)) (= (x5917 255 x4874) x6157) (= (x5917 255 x4874) x2619) (= x4723 (x3305 64 x2273 100))) (not x568)) (and (=> x1424 x4793) (=> (and (not x1424) (and (= x7847 (x7941 x4712)) (= x1354 (x5917 255 x3659)) (= x3659 (+ 1 x2619)) (= (x5917 255 x3659) x6682) (= x4712 (x3305 64 x2619 100)) (= x3200 (= x1354 255)))) (and (=> x3200 x4437) (=> (and (and (= (+ 1 x1354) x6429) (= (x7941 x5904) x1258) (= (x5917 255 x6429) x4879) (= x1953 (x5917 255 x6429)) (= x4037 (= 255 x1953)) (= x5904 (x3305 64 x1354 100))) (not x3200)) (and (=> x4037 x3906) (=> (and (not x4037) (and (= x1486 (x5917 255 x1091)) (= (= 255 x1486) x155) (= x1091 (+ x1953 1)) (= (x3305 64 x1953 100) x6300) (= x7803 (x5917 255 x1091)) (= x5081 (x7941 x6300)))) (and (=> x155 x812) (=> (and (not x155) (and (= x8085 (x5917 255 x3546)) (= x2974 (= x8085 255)) (= (x7941 x8842) x5506) (= (x3305 64 x1486 100) x8842) (= x3546 (+ 1 x1486)) (= (x5917 255 x3546) x6020))) (and (=> (and (and (= x6494 (x5917 255 x435)) (= x8793 (x3305 64 x8085 100)) (= x435 (+ 1 x8085)) (= x5338 (x7941 x8793)) (= (x5917 255 x435) x8886) (= x2500 (= x6494 255))) (not x2974)) (and (=> (and (not x2500) (and (= x8245 (x7941 x5019)) (= (x5917 255 x5590) x7390) (= x497 (= x7390 255)) (= (x5917 255 x5590) x5754) (= (+ 1 x6494) x5590) (= x5019 (x3305 64 x6494 100)))) (and (=> (and (not x497) (and (= 128 x5588) (= x1848 0) (= (> x6814 x34) x6128) (= x8516 (+ 1 x7390)) (= x8345 (x5917 255 x8516)) (= x6967 (x3305 64 x7390 100)) (= x5404 (x5917 255 x8516)) (= x34 (+ 31 x6814)) (= x1556 (x7941 x6967)))) (and (=> x6128 x4793) (=> (and (= x2498 (< x34 x6814)) (not x6128)) (and (=> (and (= x549 480) x2498) x2221) (=> (and (and (= (< x3307 x6814) x6198) (= x3307 (x8370 128))) (not x2498)) (and (=> (and (not x6198) (= x1942 (= x6814 0))) (and (=> (and (not x1942) (and (= (+ x5820 128 x3750) x8851) (= (+ x6814 x198) x990) (or (= x3750 32) (= 0 x3750)) (= x5820 (x5917 31 x6814)) (= x3750 (* 32 (ite (= 0 x5820) 1 0))) (= (> x990 x198) x1452) (= x6479 (* 32 (ite (= x5820 0) 1 0))) (= x198 (+ x5820 x6479 480)) (or (= 0 x6479) (= x6479 32)))) (and (=> (and (= x198 x5303) (not x1452)) x1918) (=> x1452 x1218))) (=> (and x1942 (= x8805 512)) x3592))) (=> (and (= x6378 480) x6198) x8512))))))) (=> x497 x3719))) (=> x2500 x1177))) (=> x2974 x5500))))))))))))) (=> x2074 x4793))) (=> x6476 x4793))) (=> x1694 x4793))))))) (=> (and x4233 (= x8254 (= 255 x683))) (and (=> x8254 x5059) (=> (and (and (= (x5917 255 x6615) x1355) (= x4932 (= x68 255)) (= x6615 (+ 1 x683)) (= x3454 (x3305 64 x683 6)) (= x5982 (x7445 x3454)) (>= 65535 x5982) (= (x5917 255 x6615) x68)) (not x8254)) (and (=> x4932 x4793) (=> (and (and (= x758 (x8042 x2245)) (= (= x930 255) x3865) (= (x4588 x758 300) x5710) (= (x3305 64 x68 36) x2245) (= (x5917 255 x8377) x8385) (= (x5917 255 x8377) x930) (= x8377 (+ x68 1))) (not x4932)) (and (=> x3865 x4793) (=> (and (and (= x1460 (= x5868 255)) (= x6921 (x3305 64 x930 100)) (= (x7941 x6921) x4355) (= (x5917 255 x2085) x5868) (= (x5917 255 x2085) x1286) (= x2085 (+ x930 1))) (not x3865)) (and (=> (and (not x1460) (and (= (+ 1 x5868) x5935) (= (x3305 64 x5868 100) x5447) (= (= x6598 255) x6772) (= (x5917 255 x5935) x6460) (= x6039 (x7941 x5447)) (= x6598 (x5917 255 x5935)))) (and (=> (and (not x6772) (and (= x3019 (x7941 x1710)) (= (x5917 255 x7932) x3150) (= (+ 1 x6598) x7932) (= x1710 (x3305 64 x6598 100)) (= (x5917 255 x7932) x1752) (= (= 255 x3150) x3009))) (and (=> (and (and (= x5015 (x5917 255 x6924)) (= (+ x3150 1) x6924) (= x3997 (= 255 x5680)) (= (x7941 x8455) x3805) (= (x3305 64 x3150 100) x8455) (= x5680 (x5917 255 x6924))) (not x3009)) (and (=> x3997 x4437) (=> (and (not x3997) (and (= x256 (x3305 64 x5680 100)) (= x5516 (= 255 x1725)) (= (x7941 x256) x7342) (= x1725 (x5917 255 x5184)) (= x4721 (x5917 255 x5184)) (= x5184 (+ x5680 1)))) (and (=> (and (not x5516) (and (= (+ x1725 1) x8513) (= (= x2976 255) x1476) (= (x5917 255 x8513) x17) (= x2976 (x5917 255 x8513)) (= x894 (x7941 x4968)) (= (x3305 64 x1725 100) x4968))) (and (=> x1476 x812) (=> (and (not x1476) (and (= x4452 (x5917 255 x2314)) (= (= 255 x462) x6600) (= (x5917 255 x2314) x462) (= (x7941 x7279) x910) (= (+ 1 x2976) x2314) (= x7279 (x3305 64 x2976 100)))) (and (=> x6600 x5500) (=> (and (not x6600) (and (= x8922 (x5917 255 x4920)) (= (x5917 255 x4920) x4661) (= (+ 1 x462) x4920) (= (x7941 x4826) x4659) (= x3559 (= x4661 255)) (= x4826 (x3305 64 x462 100)))) (and (=> (and (not x3559) (and (= (= x1084 255) x2233) (= x1273 (+ 1 x4661)) (= x6402 (x5917 255 x1273)) (= x5757 (x3305 64 x4661 100)) (= x4549 (x7941 x5757)) (= x1084 (x5917 255 x1273)))) (and (=> (and (not x2233) (and (= x4528 (x5917 255 x6283)) (= (x7941 x8216) x3264) (= (x5917 255 x6283) x4087) (= 128 x4794) (= x1787 (> x5710 x2138)) (= 0 x2649) (= (+ x1084 1) x6283) (= (+ 31 x5710) x2138) (= x8216 (x3305 64 x1084 100)))) (and (=> (and (not x1787) (= x1116 (< x2138 x5710))) (and (=> (and (and (= (> x5710 x673) x5934) (= (x8689 128) x673)) (not x1116)) (and (=> (and (= x1921 (= x5710 0)) (not x5934)) (and (=> (and (not x1921) (and (or (= x4319 32) (= x4319 0)) (= x6664 (+ x430 480 x6182)) (or (= 32 x6182) (= x6182 0)) (= x7170 (> x8425 x6664)) (= (* 32 (ite (= 0 x430) 1 0)) x4319) (= (+ x5710 x6664) x8425) (= (* 32 (ite (= x430 0) 1 0)) x6182) (= (x5917 31 x5710) x430) (= x7052 (+ x4319 128 x430)))) (and (=> x7170 x2803) (=> (and (not x7170) (= x4792 x6664)) x6676))) (=> (and x1921 (= 512 x8705)) x548))) (=> (and x5934 (= x6378 480)) x8512))) (=> (and x1116 (= x549 480)) x2221))) (=> x1787 x4793))) (=> x2233 x3719))) (=> x3559 x1177))))))) (=> x5516 x3906))))) (=> x3009 x4793))) (=> x6772 x4793))) (=> x1460 x4793))))))))))) (=> (and x8807 (= x5001 (= 255 x683))) (and (=> (and (and (= x2508 (x8841 x3227)) (= (x5917 255 x7861) x8148) (= x7703 (= 255 x8148)) (= (+ 1 x683) x7861) (= (x3305 64 x683 2) x3227) (<= x2508 1461501637330902918203684832716283019655932542975) (= x4345 (x5917 255 x7861))) (not x5001)) (and (=> x7703 x89) (=> (and (not x7703) (and (= (+ x8148 1) x3989) (= (x7445 x6452) x86) (<= x86 65535) (= x2179 (x5917 255 x3989)) (= x3149 (= x4171 255)) (= x4171 (x5917 255 x3989)) (= x6452 (x3305 64 x8148 6)))) (and (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x1212) (= (= 255 x7581) x2467) (= (x3305 64 x4171 2) x6392) (= x7336 (x5917 255 x7219)) (= x7219 (+ 1 x4171)) (= x1212 (x8841 x6392)) (= (x5917 255 x7219) x7581)) (not x3149)) (and (=> x2467 x1498) (=> (and (not x2467) (and (= (+ x7581 1) x4067) (= x4062 (= 0 x285)) (= x1907 (x8042 x1577)) (= (x484 x7655) x285) (= (x3305 64 x7581 36) x1577) (= x5066 (x5917 255 x4067)) (= x8064 (x5917 255 x4067)) (= x723 128))) (and (=> (and x4062 (and (= true x8279) (= x2093 false) (= 0 x7801))) x8273) (=> (and (and (= (< 0 x5956) x1028) (or (and x1028 (and (>= 4294967295 x2358) (= (= x7526 (x7592 x7655)) x15) x15 (= (x622 x4894) x4057) (= x1294 (<= x4057 (x7592 x4894))) x1294 (= (x622 x7655) x7526))) (not x1028))) (not x4062)) x5697))))) (=> x3149 x3247))))) (=> x5001 x5059))))))) (=> (and (not x6626) (and (= x7801 0) (= x7558 false) (= x590 true))) x8273))) (=> (and x1478 (and (= (and x1511 x5848) x7395) (>= 127 x8212) (= x7647 false) (= x3894 x8365) (= x2239 x3894) (<= x8212 127) (= 3628442803 x7813) (= x5926 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= x1567 36) (= x1511 (<= x5685 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (>= x7394 1) (= (x484 x2252) x7394) (= (* 1000000000 x2239) x5685) (= x5848 (< (* x2239 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= false x7678))) (and (=> (and x7395 (and (= (x3305 64 x1306 2) x8605) (= x5205 (x6879 x8605)) (= x4796 x5685) (<= 0 x5685) (= x746 (x3305 64 x1306 1)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5685) (= x9015 (x7991 x746)) (= x5100 (> x5205 x9015)))) (and (=> (and (and (= x3447 (> x3827 x9015)) (= x3827 (x7190 (- x9015 x5205)))) (not x5100)) (and (=> (and (= x8714 (ite (< x3827 x4796) 1 0)) (not x3447)) x310) (=> (and (and (= x7415 false) (= true x4503) (= 36 x2978)) x3447) x8926))) (=> (and (= (ite x5100 1 0) x8714) x5100) x310))) (=> (not x7395) x8770)))))))))
(assert (= x6937 (and x2826 x4973)))
(assert (= (x4290 (x3305 64 x8352 36)) x8352))
(assert (x7454 x2980))
(assert (x2673 x5010))
(assert (x4097 x6110 256))
(assert (= 64 (x967 (x3305 64 x4519 36))))
(assert (= x3995 (and x7866 x519)))
(assert (not (x669 (x3305 64 x6494 100))))
(assert (x1240 x2361))
(assert (x2673 x2218))
(assert (> (x3305 64 x1650 100) 10000))
(assert (x7454 x5652))
(assert (x2673 x6298))
(assert (= (and (not x4393) x2995) x8101))
(assert (= (and x4716 (not x2934)) x3531))
(assert (x8339 x3097))
(assert (x2673 x2968))
(assert (x2673 x7605))
(assert (x2673 x8013))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8860 36)))
(assert (< (x3305 64 x2986 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x530 (x3305 64 x4985 100)) (x3305 64 x4985 100)))
(assert (x2673 x5426))
(assert (= x4361 (and x5183 (not x5767))))
(assert (= (x1802 (x3305 64 x7390 100)) 100))
(assert (x2673 x1088))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6730 100)))
(assert (x4744 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2673 x5829))
(assert (x2673 x4408))
(assert (x4097 x313 256))
(assert (x2673 x3570))
(assert (= (x967 (x3305 64 x5870 100)) 64))
(assert (= (=> (and (= x1053 x814) (<= x1053 606) (= x1053 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1927)) (= x1927 (+ 31 x9052)) (<= 481 x1053)) x5619) x3319))
(assert (=> (>= 10000 x4248) (= 0 (x530 x4248))))
(assert (> (x3305 64 x8026 6) 10000))
(assert (= x8968 (=> (and (>= 606 x1444) (= x5948 x1444) (>= x1444 481) (= x1444 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2361)) (= x2361 (+ x5279 31))) x4487)))
(assert (x2673 x2650))
(assert (x2673 x8422))
(assert (= x8729 (=> (and (= x5980 x100) (= x3567 x2199) (= x5358 x6250) (= x6399 x415) (= x410 x3114) (= x7095 x8630) (= x4518 x5949) (= x6055 x5716) (= x3346 x6701) (= x3786 x453) (= x1919 x1616) (= x7960 x3618) (= x6866 x4328)) x6891)))
(assert (x1240 x6093))
(assert (= 100 (x1802 (x3305 64 x439 100))))
(assert (x2673 x6144))
(assert (x2673 x6848))
(assert (x2673 x3193))
(assert (x2673 x8211))
(assert (x1240 x4388))
(assert (= (x530 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (= x1400 (=> (and (= x4023 (x7254 480)) (= x1503 (x7405 (+ 32 x7338))) (= (x7405 (+ 32 x7937)) x7927) (= (x7405 (+ x7338 128)) x7937) (= (x7405 (+ 4 x4678)) x7338) (= x3010 (< 0 x4023))) (and (=> (and (and (= x8299 (x6197 512)) (= x4576 (< 32 x4023))) x3010) (and (=> (not x4576) x2287) (=> (and x4576 (and (= x2440 (< 64 x4023)) (= (x5143 544) x5084) (= x500 (x7405 (+ 32 x7927))))) (and (=> (not x2440) x2287) (=> (and (and (= x4 (< 96 x4023)) (= (x4386 576) x5262) (= (x7405 (+ x7927 64)) x299)) x2440) (and (=> x4 x1920) (=> (not x4) x2287))))))) (=> (not x3010) x2287)))))
(assert (not (x669 (x3305 64 x3956 100))))
(assert (x4097 x4394 32))
(assert (x2673 x2213))
(assert (= (and x7264 (not x4195)) x1780))
(assert (= (and x212 (not x5317)) x774))
(assert (x7454 x5426))
(assert (x2673 x347))
(assert (= 64 (x967 (x3305 64 x7403 100))))
(assert (=> (>= 10000 x7718) (= (x530 x7718) 0)))
(assert (x2673 x6492))
(assert (=> (<= x5404 10000) (= (x530 x5404) 0)))
(assert (= (and x82 x8755) x7185))
(assert (> (x3305 64 x1281 100) 10000))
(assert (x2673 x8340))
(assert (x4744 x8083))
(assert (x2673 x866))
(assert (= x8267 (=> (= x1689 x6245) x7940)))
(assert (= x6260 (=> (and (= x8405 (x7405 (+ 96 x6254))) (= (not (< 128 x3245)) x3503) (= x3091 (x1675 608))) (and x3944 x3503))))
(assert (= 100 (x1802 (x3305 64 x3617 100))))
(assert (=> (<= x7791 10000) (= (x530 x7791) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8580 100)))
(assert (x2673 x4774))
(assert (x2673 x6716))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8700) (= x3054 (x520 x2432)) (= (x7405 (+ x4798 x3054)) x5130) (= (+ 1 x8700) x7756) (= x4297 false) (= (+ x4743 1) x971) (= false x9004) (= x4038 (+ 1 x8700)) (= x2432 (x3305 64 x1306 2)) (not (< x5130 x3054)) (= (x3305 64 x8700 0) x4743)) x382) x8981))
(assert (=> (<= x7584 10000) (= (x530 x7584) 0)))
(assert (x2673 x1035))
(assert (x2673 x8953))
(assert (= (x1802 (x3305 64 x977 6)) 6))
(assert (= (and (not x5299) x5038) x7364))
(assert (x2673 x8351))
(assert (x2673 x3143))
(assert (x2673 x8734))
(assert (> (x3305 64 x7184 36) 10000))
(assert (x2673 x3020))
(assert (= (x1802 (x3305 64 x7877 100)) 100))
(assert (x2673 x4769))
(assert (=> (<= x8194 10000) (= 0 (x530 x8194))))
(assert (x2673 x1440))
(assert (x4097 x4953 256))
(assert (x2673 x6992))
(assert (not (x669 (x3305 64 x6531 100))))
(assert (= (or x5171 x2584 x8702) x8979))
(assert (= (and x2319 x5421) x7189))
(assert (x1240 x3669))
(assert (= x2297 (=> (and (= x2097 (= x4090 0)) (or x2097 (not x2097))) x1948)))
(assert (x4097 x914 256))
(assert (= (x4290 (x3305 64 x4617 100)) x4617))
(assert (= 64 (x967 (x3305 64 x7718 2))))
(assert (> (x3305 64 x1237 100) 10000))
(assert (x4097 x6597 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x7447 256))
(assert (= (and x1481 (not x3439)) x4839))
(assert (> (x3305 64 x930 100) 10000))
(assert (x2673 x2890))
(assert (> (x3305 64 x7358 100) 10000))
(assert (x2673 x5152))
(assert (x2673 x1795))
(assert (x2673 x5378))
(assert (= 64 (x967 (x3305 64 x1621 100))))
(assert (x2673 x4909))
(assert (= (x3305 64 x2253 100) (x530 (x3305 64 x2253 100))))
(assert (= (and x6361 x1851) x3163))
(assert (= (x967 (x3305 64 x1486 100)) 64))
(assert (x2673 x4031))
(assert (= 100 (x1802 (x3305 64 x2976 100))))
(assert (x4744 x4552))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5440 36)))
(assert (= (x967 (x3305 64 x6273 36)) 64))
(assert (x2673 x1272))
(assert (x2673 x4567))
(assert (x4097 x4552 32))
(assert (x2673 x9038))
(assert (x2673 x3209))
(assert (= x1065 (or x7639 (and x5144 (not x8863)))))
(assert (x8339 x7805))
(assert (x4097 x174 32))
(assert (= (x4290 (x3305 64 x8897 11)) x8897))
(assert (= x6710 (and x3800 x7807)))
(assert (x4097 x3586 300))
(assert (x2673 x1690))
(assert (=> (<= x4655 10000) (= (x530 x4655) 0)))
(assert (= (x3305 64 x7358 100) (x530 (x3305 64 x7358 100))))
(assert (> (x3305 64 x5219 36) 10000))
(assert (= (x530 (x3305 64 x2216 12)) (x3305 64 x2216 12)))
(assert (= x1584 (and (not x8270) x5747)))
(assert (= (x967 (x3305 64 x8142 10)) 64))
(assert (x4744 x2980))
(assert (x2673 x4030))
(assert (x4097 x2136 256))
(assert (x4744 x7447))
(assert (= x6090 (x4290 (x3305 64 x6090 100))))
(assert (x2673 x3084))
(assert (= x7877 (x4290 (x3305 64 x7877 100))))
(assert (= (x530 (x3305 64 x1113 100)) (x3305 64 x1113 100)))
(assert (x4097 x2294 256))
(assert (x2673 x1916))
(assert (x2673 x6611))
(assert (x2673 x3639))
(assert (x2673 x9008))
(assert (x8339 x2628))
(assert (x2673 x1467))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x977 6)))
(assert (x2673 x2646))
(assert (x2673 x1563))
(assert (x2673 x1937))
(assert (=> (>= 10000 x4087) (= (x530 x4087) 0)))
(assert (x2673 x6460))
(assert (= (and x8367 x6737) x1140))
(assert (= (and (not x4624) x925) x5531))
(assert (x7454 x4842))
(assert (x2673 x8137))
(assert (x8502 x2239))
(assert (x2673 x7806))
(assert (x7454 x6999))
(assert (x2673 x1861))
(assert (x8339 x3716))
(assert (= x6370 (=> (and (= x4128 x3006) (= x3504 x8235) (= x3861 x471) (= x8491 x6425)) x1680)))
(assert (x7454 x6615))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5269 100)))
(assert (=> (<= x981 10000) (= (x530 x981) 0)))
(assert (x2673 x4544))
(assert (x4097 x3850 256))
(assert (x2673 x6255))
(assert (= x4107 (x4290 (x3305 64 x4107 100))))
(assert (= (x4290 (x3305 64 x462 100)) x462))
(assert (x2673 x1701))
(assert (= (x1802 (x3305 64 x2051 100)) 100))
(assert (x8339 x8083))
(assert (x2673 x3015))
(assert (= x5365 (and x8910 (not x317))))
(assert (= (x530 (x3305 64 x5340 100)) (x3305 64 x5340 100)))
(assert (x2673 x4366))
(assert (x2673 x6040))
(assert (= (and x3163 x2690) x8901))
(assert (not (x669 (x3305 64 x760 100))))
(assert (x2673 x7403))
(assert (not (x669 (x3305 64 x8238 100))))
(assert (= x642 (=> (and (= (x7405 (+ 32 x8977)) x688) (= x7761 (x1595 x7524)) (= (not (< x688 x6249)) x6486)) (and (=> (= x457 x688) x8388) x6486))))
(assert (= x1680 (=> (and (= x471 x38) (= x8235 x1490) (= x7573 x4128) (= x3419 x6425)) x3048)))
(assert (x2673 x4008))
(assert (x2673 x2359))
(assert (x9110 x7801))
(assert (x2673 x6273))
(assert (x2673 x4063))
(assert (x2673 x6533))
(assert (= (=> (and (= x8819 0) (= x395 x2978)) x1812) x8926))
(assert (x2673 x162))
(assert (= (x1802 (x3305 64 x3066 100)) 100))
(assert (> (x3305 64 x8032 100) 10000))
(assert (x2673 x3139))
(assert (= x6159 (and x7872 x5069)))
(assert (x2673 x3849))
(assert (x2673 x5672))
(assert (x4097 x9085 256))
(assert (x7454 x7996))
(assert (x8339 x1273))
(assert (x2673 x801))
(assert (= (and x1430 (not x5321)) x7612))
(assert (= x1442 (x4290 (x3305 64 x1442 100))))
(assert (=> (<= x4761 10000) (= (x530 x4761) 0)))
(assert (x2673 x6968))
(assert (x2673 x1993))
(assert (not (x669 (x3305 64 x1725 100))))
(assert (x2673 x2428))
(assert (x2673 x1094))
(assert (x2673 x8010))
(assert (= (and x519 (not x7866)) x7814))
(assert (= x5855 (or x3219 x2777 x5773 x2770 x3365)))
(assert (x8339 x6471))
(assert (> (x3305 64 x760 100) 10000))
(assert (> (x3305 64 x6848 100) 10000))
(assert (= (x1802 (x3305 64 x4488 36)) 36))
(assert (= (x967 (x3305 64 x813 100)) 64))
(assert (x2673 x3226))
(assert (=> (>= 10000 x5518) (= 0 (x530 x5518))))
(assert (x2673 x9039))
(assert (= x7816 (and x6959 (not x8504))))
(assert (x2673 x5711))
(assert (x8339 x7090))
(assert (x2673 x4201))
(assert (x2673 x8630))
(assert (x4097 x8965 256))
(assert (= x8473 (and x7797 x1762)))
(assert (> (x3305 64 x6693 100) 10000))
(assert (= (and (not x5939) x5597) x5747))
(assert (x2673 x3546))
(assert (= (x530 x892) (x530 (+ 1 x892))))
(assert (x2673 x8108))
(assert (< (x3305 64 x4519 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5057))
(assert (> (x3305 64 x462 100) 10000))
(assert (x7454 x6599))
(assert (< 10000 (x3305 64 x8713 100)))
(assert (x2673 x683))
(assert (x2673 x3725))
(assert (x2673 x471))
(assert (x2673 x7202))
(assert (= (and x9095 x4675) x1148))
(assert (x2673 x7986))
(assert (x2673 x4181))
(assert (not (x669 (x3305 64 x7735 100))))
(assert (x4097 x972 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2558))
(assert (not (x669 (x3305 64 x1935 36))))
(assert (> (x3305 64 x5868 100) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x930 100)))
(assert (x2673 x5753))
(assert (x2673 x5195))
(assert (x2673 x981))
(assert (< (x3305 64 x6531 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8339 x9088))
(assert (= (x3305 64 x7463 36) (x530 (x3305 64 x7463 36))))
(assert (= (and x2164 (not x8375)) x6799))
(assert (= (x530 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (= (x530 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (= x189 (and x1019 (not x3176))))
(assert (= (and x7207 (not x7079)) x973))
(assert (x2673 x2344))
(assert (= x5851 (and (not x5312) x7180)))
(assert (x2673 x4069))
(assert (= x3580 (x4290 (x3305 64 x3580 100))))
(assert (< 10000 (x3305 64 x6730 100)))
(assert (x2673 x9091))
(assert (x4744 x4056))
(assert (x9110 x5635))
(assert (< 10000 (x3305 64 x3232 100)))
(assert (= (x967 (x3305 64 x3652 100)) 64))
(assert (= (x4290 (x3305 64 x4648 100)) x4648))
(assert (= (x1802 (x3305 64 x4913 100)) 100))
(assert (x2673 x741))
(assert (= (x4290 (x3305 64 x5575 100)) x5575))
(assert (x2673 x362))
(assert (< 10000 (x3305 64 x8099 100)))
(assert (x2673 x7485))
(assert (x2673 x5784))
(assert (x2673 x3506))
(assert (x2673 x8798))
(assert (not (x669 (x3305 64 x8580 100))))
(assert (= (x4290 (x3305 64 x8903 100)) x8903))
(assert (> (x3305 64 x4662 100) 10000))
(assert (x2673 x2109))
(assert (= (x3305 64 x8499 100) (x530 (x3305 64 x8499 100))))
(assert (x8339 x2241))
(assert (x2673 x7090))
(assert (x4097 x5690 256))
(assert (= 64 (x967 (x3305 64 x2313 100))))
(assert (= (and x46 x6220) x5171))
(assert (= 64 (x967 (x3305 64 x5577 100))))
(assert (x2673 x6436))
(assert (x2673 x8946))
(assert (< (x3305 64 x8044 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x967 (x3305 64 x2774 100))))
(assert (x2673 x6169))
(assert (x2673 x8615))
(assert (x2673 x3733))
(assert (not (x669 (x3305 64 x5331 36))))
(assert (= x2565 (and x788 x8023)))
(assert (x2673 x2061))
(assert (x2673 x4331))
(assert (x4097 x6298 256))
(assert (= (x1802 (x3305 64 x8075 36)) 36))
(assert (x4097 x7136 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x967 (x3305 64 x309 12))))
(assert (x2673 x7199))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7038 100)))
(assert (x2673 x1099))
(assert (= x2145 (x4290 (x3305 64 x2145 36))))
(assert (=> (>= 10000 x8869) (= 0 (x530 x8869))))
(assert (= x3830 (and (not x2815) x9111)))
(assert (= 64 (x967 (x3305 64 x4107 100))))
(assert (= x6563 (and x6618 x8086)))
(assert (x2673 x815))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x2673 x6642))
(assert (not (x669 (x3305 64 x3066 100))))
(assert (=> (<= x1528 10000) (= (x530 x1528) 0)))
(assert (x2673 x1567))
(assert (x4744 x2426))
(assert (x2673 x8190))
(assert (= x2652 (x4290 (x3305 64 x2652 100))))
(assert (x2673 x7390))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6210 100)))
(assert (= x7299 (and (not x3371) x5070)))
(assert (x7454 x7274))
(assert (x2673 x5710))
(assert (x7454 x5935))
(assert (x2673 x8666))
(assert (= x6602 (and (not x5024) x7697)))
(assert (x4097 x4388 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5714))
(assert (x2673 x1728))
(assert (x2673 x8607))
(assert (= x8085 (x4290 (x3305 64 x8085 100))))
(assert (x2673 x7089))
(assert (x4744 x3782))
(assert (x2673 x3582))
(assert (= (x4290 (x3305 64 x1281 100)) x1281))
(assert (> (x3305 64 x2538 100) 10000))
(assert (x2673 x5408))
(assert (= 64 (x967 (x3305 64 x6700 100))))
(assert (= x8655 (and x8461 x3983)))
(assert (x8339 x7668))
(assert (=> (<= x1166 10000) (= (x530 x1166) 0)))
(assert (< (x3305 64 x5173 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x6695 (not x5101)) x7978))
(assert (x2673 x6178))
(assert (= x9048 (x4290 (x3305 64 x9048 100))))
(assert (= (x4290 (x3305 64 x4299 100)) x4299))
(assert (x2673 x8256))
(assert (= (x967 (x3305 64 x4662 100)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1073 100)))
(assert (= 100 (x1802 (x3305 64 x346 100))))
(assert (x2673 x2685))
(assert (x2673 x274))
(assert (not (x669 (x3305 64 x8615 100))))
(assert (not (x669 (x3305 64 x4044 100))))
(assert (x2673 x3980))
(assert (x2673 x7752))
(assert (x2673 x8803))
(assert (= (=> (and (= (x7405 (+ 32 x6718)) x3525) (= x6512 (x7405 (+ x1990 32))) (= (x7405 (+ x549 4)) x1990) (= x7801 x7569) (= x2577 true) (= false x5398) (= x6718 (x7405 (+ x6512 32))) (= x7569 (x7190 (- x3525 x549)))) x8273) x2221))
(assert (=> (>= 10000 x8099) (= (x530 x8099) 0)))
(assert (not (x669 (x3305 64 x4285 100))))
(assert (x4097 x3517 300))
(assert (x2673 x1360))
(assert (not (x669 (x3305 64 x8352 36))))
(assert (= x4444 (or (and x7102 x6538) (and x4304 x4499) (and x5551 x2500) (and x8582 x1505) (and x1758 x3559) (and x1232 x3041))))
(assert (= (x530 48755886422350550937420582033662272622158303343164848365600209189876434731008) 0))
(assert (< (x3305 64 x8225 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7729))
(assert (= (and (not x3632) x4389) x5925))
(assert (x2673 x8105))
(assert (=> (<= x4617 10000) (= 0 (x530 x4617))))
(assert (x2673 x2308))
(assert (= (x1802 (x3305 64 x1110 100)) 100))
(assert (< 10000 (x3305 64 x2356 100)))
(assert (x2673 x5590))
(assert (=> (<= x7806 10000) (= 0 (x530 x7806))))
(assert (= (x530 (x3305 64 x2032 100)) (x3305 64 x2032 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1237 100)))
(assert (= (x967 (x3305 64 x4087 12)) 64))
(assert (=> (>= 10000 x2619) (= 0 (x530 x2619))))
(assert (x2673 x4216))
(assert (x4744 x2692))
(assert (= (x4290 (x3305 64 x3421 36)) x3421))
(assert (x8339 x972))
(assert (> (x3305 64 x8903 100) 10000))
(assert (not (x669 (x3305 64 x5511 100))))
(assert (x2673 x7538))
(assert (= x1409 (and x9070 x8525)))
(assert (= (x530 (x3305 64 x8073 100)) (x3305 64 x8073 100)))
(assert (x2673 x1783))
(assert (not (x669 (x3305 64 x6053 2))))
(assert (x2673 x3065))
(assert (= x940 (and (not x6433) x6472)))
(assert (=> (>= 10000 x8849) (= (x530 x8849) 0)))
(assert (= 100 (x1802 (x3305 64 x6848 100))))
(assert (= x2770 (and x5233 x5734)))
(assert (> (x3305 64 x2795 100) 10000))
(assert (not (x669 (x3305 64 x3652 100))))
(assert (> (x3305 64 x7686 12) 10000))
(assert (x2673 x5947))
(assert (x2673 x5081))
(assert (x4097 x3745 32))
(assert (= x3906 (=> (and (= 36 x7801) (= x4463 false) (= x4134 true)) x8273)))
(assert (x2673 x4077))
(assert (x2673 x8922))
(assert (x2673 x1210))
(assert (x8339 x5964))
(assert (= (x1802 (x3305 64 x5012 100)) 100))
(assert (x8339 x8956))
(assert (x2673 x8193))
(assert (> (x3305 64 x1272 36) 10000))
(assert (x2673 x8713))
(assert (x2673 x6814))
(assert (< 10000 (x3305 64 x4614 6)))
(assert (x2673 x3223))
(assert (= 100 (x1802 (x3305 64 x2098 100))))
(assert (x8339 x8209))
(assert (= (and x1386 x1214) x3542))
(assert (x2673 x9079))
(assert (x2673 x5528))
(assert (< (x3305 64 x3956 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x6344 (= 255 x755)) (= 480 x3168) (= x1099 480)) (and (=> (and (and (= (= 255 x6767) x5231) (= x6767 (x5917 255 x5483)) (= (x3011 x3184) x3333) (= x3184 (x3305 64 x755 12)) (>= 18446744073709551615 x3333) (= (x5917 255 x5483) x1651) (= x5483 (+ x755 1))) (not x6344)) (and (=> x5231 x3877) (=> (and (and (= (x3305 64 x6767 36) x5765) (= x2564 (x4588 x7322 300)) (= x7322 (x8042 x5765)) (= (= x7586 255) x1123) (= (+ x6767 1) x3097) (= (x5917 255 x3097) x7586) (= x4705 (x5917 255 x3097))) (not x5231)) (and (=> (and (not x1123) (and (= (+ 1 x7586) x7274) (= x4605 (= 255 x2642)) (= (x5917 255 x7274) x3950) (= x5392 (x3305 64 x7586 100)) (= x8021 (x7941 x5392)) (= x2642 (x5917 255 x7274)))) (and (=> (and (and (= x8067 (x3305 64 x2642 100)) (= (= x959 255) x4119) (= x8641 (x7941 x8067)) (= x959 (x5917 255 x7668)) (= x778 (x5917 255 x7668)) (= (+ x2642 1) x7668)) (not x4605)) (and (=> (and (and (= x7916 (x7941 x2994)) (= (x5917 255 x8734) x4898) (= (x5917 255 x8734) x4307) (= x8734 (+ 1 x959)) (= x5552 (= 255 x4898)) (= (x3305 64 x959 100) x2994)) (not x4119)) (and (=> (and (not x5552) (and (= (x3305 64 x4898 100) x7171) (= x3723 (+ x4898 1)) (= (x5917 255 x3723) x6801) (= (x7941 x7171) x6755) (= (x5917 255 x3723) x3580) (= x8542 (= x3580 255)))) (and (=> (and (and (= x3109 (x5917 255 x5644)) (= (x3305 64 x3580 100) x1657) (= (x5917 255 x5644) x2862) (= x5644 (+ 1 x3580)) (= (x7941 x1657) x3373) (= (= 255 x3109) x3686)) (not x8542)) (and (=> x3686 x378) (=> (and (not x3686) (and (= (x5917 255 x8127) x6932) (= x2714 (x7941 x2592)) (= x499 (= 255 x6932)) (= x2592 (x3305 64 x3109 100)) (= (x5917 255 x8127) x2115) (= (+ x3109 1) x8127))) (and (=> (and (and (= x2031 (= 255 x6854)) (= x6854 (x5917 255 x8965)) (= x6778 (x5917 255 x8965)) (= x3189 (x7941 x4262)) (= (x3305 64 x6932 100) x4262) (= (+ 1 x6932) x8965)) (not x499)) (and (=> x2031 x4313) (=> (and (and (= (x3305 64 x6854 100) x810) (= (x7941 x810) x6405) (= (+ 1 x6854) x2173) (= (x5917 255 x2173) x7281) (= (x5917 255 x2173) x8562) (= x5637 (= 255 x7281))) (not x2031)) (and (=> (and (and (= x351 (= x7354 255)) (= x3635 (x3305 64 x7281 100)) (= (x7941 x3635) x8539) (= x7354 (x5917 255 x7538)) (= (x5917 255 x7538) x5858) (= x7538 (+ 1 x7281))) (not x5637)) (and (=> (and (not x351) (and (= x7382 (x3305 64 x7354 100)) (= x9060 (x7405 (+ x4029 32))) (= x6892 (> x2564 x4376)) (= x8917 (x7405 (+ 32 x7650))) (= x1382 (x7405 (+ 32 x32))) (< x5534 x9060) (= x7447 (+ 1 x7354)) (= (x7941 x7382) x8814) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x5534)) (= (x7405 (+ x6656 32)) x8993) (= x4029 (x7405 (+ 32 x8976))) (= (x7190 (- x9060 x5534)) x6382) (= (x7405 (+ x1382 32)) x7650) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5534) (= (x7190 (- x6382 32)) x3518) (= 0 x4619) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x5534)) (= (x7405 (+ x4697 32)) x6656) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5534) (= x4990 (x5917 255 x7447)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x5534)) (<= x5534 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (+ 31 x2564) x4376) (= (x7405 (+ x5534 32)) x4697) (= (x7405 (+ 32 x8993)) x32) (= (x7405 (+ x3084 32)) x8976) (= x1974 (x5917 255 x7447)) (= x3084 (x7405 (+ x8917 32))))) (and (=> (and (not x6892) (= x6433 (< x4376 x2564))) (and (=> (and (and (= (x78 x5534) x4467) (= x6374 (> x2564 x4467))) (not x6433)) (and (=> (and (= x400 (= 0 x2564)) (not x6374)) (and (=> (and (not x400) (and (= x5544 (x7405 (+ x5534 x4045))) (or (= x553 32) (= 0 x553)) (= x553 (* 32 (ite (= x4045 0) 1 0))) (= (x5917 31 x2564) x4045) (= (x7405 (+ x5544 x4736)) x7410) (= x2181 (> x33 x7894)) (or (= 32 x4736) (= 0 x4736)) (= x4736 (* (ite (= 0 x4045) 1 0) 32)) (= (x7405 (+ x2564 x7894)) x33) (= x7894 (x7405 (+ x5118 x553))) (= x5118 (x7405 (+ x4045 x9060))))) (and (=> x2181 x2703) (=> (and (not x2181) (= x2753 x7894)) x5120))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x9060) (not (= x9060 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x3481 x8659) (< x9060 x8659) (not (= x9060 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x9060 x4229) (<= x9060 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x9060 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x9060) (= x8659 (x7405 (+ x9060 32)))) x400) x3205))) (=> (and x6374 (and (= (x7190 (- x6742 x9060)) x6150) (= (x7405 (+ x4178 32)) x8989) (= false x4086) (= (x7405 (+ 4 x9060)) x8642) (= x6742 (x7405 (+ 32 x8989))) (= (x7405 (+ x8642 32)) x4178) (= true x902))) x3445))) (=> (and x6433 (and (= x4448 true) (= x1642 (x7405 (+ x2188 32))) (= (x7405 (+ x1412 32)) x3268) (= (x7405 (+ 32 x1642)) x1412) (= (x7405 (+ x9060 4)) x2188) (= (x7190 (- x3268 x9060)) x672) (= x4035 false))) x3445))) (=> x6892 x3877))) (=> (and x351 (and (= true x8056) (= x8687 false))) x3445))) (=> x5637 x2776))))) (=> x499 x2932))))) (=> x8542 x8138))) (=> x5552 x7577))) (=> x4119 x5028))) (=> x4605 x8724))) (=> x1123 x3877))))) (=> x6344 x731))) x4949))
(assert (x2673 x1462))
(assert (x8339 x9123))
(assert (x2673 x5763))
(assert (x2673 x5065))
(assert (x2673 x8238))
(assert (x4744 x6615))
(assert (x2673 x7104))
(assert (= (and (not x318) x1913) x3024))
(assert (x2673 x4607))
(assert (x4097 x4732 32))
(assert (= x2675 (and x8807 x8424)))
(assert (=> (<= x6090 10000) (= (x530 x6090) 0)))
(assert (not (x669 (x3305 64 x8387 36))))
(assert (< (x3305 64 x4299 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3305 64 x3088 2) (x530 (x3305 64 x3088 2))))
(assert (x4097 x835 256))
(assert (not (x669 (x3305 64 x7193 100))))
(assert (not (x669 (x3305 64 x4488 36))))
(assert (x4097 x3242 256))
(assert (= (x4290 (x3305 64 x830 36)) x830))
(assert (x8339 x4529))
(assert (x2673 x4816))
(assert (x9110 x4806))
(assert (x2673 x4026))
(assert (x2673 x7400))
(assert (x2673 x3093))
(assert (x2673 x4388))
(assert (x2673 x7031))
(assert (x2673 x533))
(assert (x2673 x4372))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7791 12)))
(assert (x2673 x4894))
(assert (x2673 x854))
(assert (= x4821 (or (and x7168 x5766) (and (not x7395) x3889))))
(assert (= (and x4785 x952) x1931))
(assert (x2673 x5367))
(assert (< (x3305 64 x5340 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4467))
(assert (= 100 (x1802 (x3305 64 x5550 100))))
(assert (x9110 x2784))
(assert (= x633 (and x8348 (not x3856))))
(assert (= (x1802 (x3305 64 x606 100)) 100))
(assert (x2673 x611))
(assert (= (x530 (x3305 64 x1586 100)) (x3305 64 x1586 100)))
(assert (x2673 x2179))
(assert (= (x1802 (x3305 64 x4216 100)) 100))
(assert (x2673 x1970))
(assert (x2673 x8505))
(assert (x4744 x2173))
(assert (< 10000 (x3305 64 x7113 100)))
(assert (x2673 x4971))
(assert (= x8328 (and x6527 x615)))
(assert (x2673 x2303))
(assert (x8339 x1364))
(assert (< 10000 (x3305 64 x7773 100)))
(assert (= (x967 (x3305 64 x7571 100)) 64))
(assert (=> (>= 10000 x1290) (= 0 (x530 x1290))))
(assert (x2673 x3597))
(assert (x2673 x8275))
(assert (< (x3305 64 x2032 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x1774))
(assert (x2673 x8061))
(assert (= (x530 (x3305 64 x7290 100)) (x3305 64 x7290 100)))
(assert (= (=> (and (= (x9028 x3979) x2778) (= (x7405 (+ x476 4)) x8314) (<= x3916 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x4847) (= x6101 x3916) (<= x83 x3511) (= x3916 (+ x83 x2778)) (= (x484 x3979) x4847) (= x1210 (x4514 x1306)) (< (+ x83 x2778) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x1210 x83) x8187) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5138 x83)) (= (x7405 (+ x8314 32)) x8568) (<= 0 x3916) (= (= x3979 x2252) x3356) (= (x7190 (- x8568 x476)) x4735) (= (x4514 x1306) x3511) (= (x4514 x3979) x5138) (= x4735 36)) (and (=> (and x3356 (and (= false x8682) (= x3015 x6887) (= x3722 x8700) (<= x6348 127) (= x3679 x1166) (= x1306 x5042) (not (< x6156 x7092)) (= false x4937) (= x4525 x3979) (= x2784 36) (= x2595 (x484 x2252)) (>= 127 x6348) (= (x7405 (+ x7092 x83)) x6156) (= (x3305 64 x1306 1) x5266) (= x6029 1341992515) (= (x6418 x5266) x7092) (>= x2595 1) (= x148 36180046632115354981904271164172418022085455641023445553456023893925156618240))) x4417) (=> (and (not x3356) (and (>= 254 x3679) (= x720 1341992515) (= (+ 1 x3679) x7718) (<= 1 x3979) (>= 127 x8374) (= x5128 (x484 x4894)) (= false x1284) (= (x3305 64 x3679 36) x522) (<= x8374 127) (= 36 x1614) (<= x3979 1461501637330902918203684832716283019655932542975) (= x1306 x8869) (>= x5128 1) (= x8191 36180046632115354981904271164172418022085455641023445553456023893925156618240) (= x4894 x3979) (= x5772 x1306) (= (x8042 x522) x4495) (= x1343 false) (= (+ 1 x3679) x5604) (= x4014 (= 0 x4495)))) (and (=> (and (= (= 1 x4495) x1320) (not x4014)) (and (=> (and (= (= x4495 2) x1683) (not x1320)) (and (=> (and x1683 (and (= x4327 (x7941 x5695)) (>= 65535 x6883) (= (= x5762 0) x7807) (= x4989 (+ x2644 1)) (= x4117 (+ 1 x2708)) (= x7443 (+ 1 x2708)) (= x3306 (x3305 64 x8666 100)) (= (x7941 x3207) x3171) (= x4533 (+ x2644 1)) (<= x7718 243) (= (+ 1 x7571) x1945) (= x7747 (x3305 64 x4689 36)) (= x4421 0) (= (+ 1 x4958) x7152) (= (+ x8143 1) x2708) (= (x7445 x1760) x6883) (= x4958 (+ 1 x4689)) (= (+ x5762 31) x2810) (= (+ x7152 1) x2843) (= x4275 (+ x7718 1)) (= x3459 (+ x7175 1)) (= x4043 (x5106 128)) (= (x8042 x7747) x1747) (= (x7941 x1606) x7568) (= (x3305 64 x7718 6) x1760) (= x2612 (x7941 x4565)) (= x5108 (x3305 64 x7175 100)) (= (+ 1 x7718) x4689) (= (+ 1 x8666) x2644) (= (+ x7571 1) x8143) (= (x7941 x8435) x5533) (= (+ 1 x7443) x7175) (= x5584 (+ 1 x4689)) (= (x3305 64 x3459 100) x1082) (= (+ x3459 1) x8666) (not (> x5762 x2810)) (= x3027 (+ x8143 1)) (= (x3305 64 x7443 100) x4565) (not (< x4043 x5762)) (= (+ x7443 1) x166) (= x3869 (x7941 x7812)) (= x3207 (x3305 64 x7571 100)) (= (+ x3459 1) x584) (= x3639 (x7941 x1082)) (= (x4588 x1747 300) x5762) (= (+ x7175 1) x4915) (= (x3305 64 x8143 100) x8435) (>= x7718 1) (= 128 x4007) (= (+ x7152 1) x7571) (not (< x2810 x5762)) (= (+ x8666 1) x2747) (= x7812 (x3305 64 x4958 100)) (= x1606 (x3305 64 x2644 100)) (= x7766 (x7941 x5108)) (= x5695 (x3305 64 x2708 100)) (= (x7941 x6386) x5151) (= x6386 (x3305 64 x7152 100)) (= (x7941 x3306) x1353) (= (+ 1 x4958) x2773))) (and (=> (and x7807 (= x5608 512)) x7698) (=> (and (not x7807) (and (= x3122 (* 32 (ite (= x6116 0) 1 0))) (= (* (ite (= 0 x6116) 1 0) 32) x2300) (= x2439 (+ x581 x5762)) (= (+ x6116 x2300 480) x581) (or (= 0 x2300) (= 32 x2300)) (= x6116 (x5917 31 x5762)) (= x2277 (< x581 x2439)) (or (= x3122 0) (= x3122 32)) (= x2654 (+ x6116 128 x3122)))) (and (=> x2277 x8959) (=> (and (= x7985 x581) (not x2277)) x1162))))) (=> (and (= x7106 (= 3 x4495)) (not x1683)) (and (=> (and (not x7106) (= x4830 (= x4495 4))) (and (=> (and x4830 (and (= x8875 (x2527 x4894)) (= (+ x7718 1) x5750) (= x4284 (x8042 x393)) (= x6541 128) (>= x1897 1) (= (+ x5750 1) x1883) (>= 4294967295 x682) (< (+ x3853 x4284) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x5640 x6968) (>= 4294967326 x1403) (<= x6953 1461501637330902918203684832716283019655932542975) (= x3570 (x7941 x3985)) (= x393 (x3305 64 x7718 36)) (= x8202 x7472) (= (+ 1 x5750) x6978) (= x1986 (+ x3853 x4284)) (= (x2332 x4894) x7600) (= x8396 x1986) (= (x3627 x8869) x3853) (<= 32 x682) (= x7604 (<= x8875 (x4527 x4894))) x4169 (= x3985 (x3305 64 x5750 100)) (= x6209 (x2527 x8869)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1986) (= x8190 (+ x1883 1)) (= (x1773 128) x1569) (= x4169 (= (x4527 x8869) x6209)) (= x1403 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7539)) (= (+ x7718 1) x5469) (= x169 (x2332 x4894)) x7604 (= x263 (x3305 64 x1883 36)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4284 x5626)) (= (x2332 x8869) x5626) (= x3870 (- x169 x4284)) (= x6953 x4115) (<= 0 x1986) (= (x8042 x263) x3131) (= (+ x1883 1) x8883) (<= x7718 252) (= x6793 (+ 1 x1883)) (>= x7718 1) (<= x4284 x7600) (<= 1 x1403) (= (+ x682 31) x7539))) x1873) (=> (and (= x8755 (= 5 x4495)) (not x4830)) (and (=> (and (and (= x8574 (x3305 64 x1110 100)) (= x3210 (+ x7290 1)) (= x7331 (x3305 64 x7718 36)) (= x5149 (x8042 x1681)) (= x7802 (x8042 x7331)) (= x2454 (x7941 x9101)) (= x8387 (+ x5931 1)) (= x3977 (+ 1 x1113)) (= x3767 (x7941 x2455)) (= (x3305 64 x7129 100) x2455) (= x5873 (x7941 x6679)) (= x235 (+ x6667 1)) (= (+ 1 x8115) x5390) (= x3577 (x7445 x4264)) (= (+ x5390 1) x45) (= (+ 1 x235) x1073) (= x2796 (x7941 x1344)) (= (x7941 x8791) x1420) (not (> x8745 x1098)) (not (< x1098 x8745)) (= x4544 (+ x3210 1)) (<= 1 x7718) (= (x7941 x8574) x3213) (= x3940 (x7941 x2327)) (= x1113 (+ x5390 1)) (= (x3305 64 x3210 100) x6829) (= x7129 (+ 1 x8387)) (= x1098 (+ 31 x8745)) (= (x7941 x7529) x3965) (= (+ x7290 1) x7566) (>= 65535 x3577) (= (+ 1 x7129) x7290) (= (+ 1 x8387) x5801) (= (+ x235 1) x3708) (= x1344 (x3305 64 x5390 100)) (= 0 x7982) (= x6679 (x3305 64 x8115 100)) (= (x3305 64 x1073 100) x2327) (= x4969 (+ x6667 1)) (= (+ 1 x1110) x8115) (= x885 (x7871 128)) (= x7791 (+ x1113 1)) (= x1646 (+ x5931 1)) (= x7529 (x3305 64 x6667 100)) (= (x3305 64 x235 100) x7105) (= (+ x1073 1) x161) (= x8092 (x7941 x6829)) (= x8654 (+ 1 x7129)) (>= 242 x7718) (= x5931 (+ 1 x7718)) (= (= x8745 0) x1971) (= (x3305 64 x1113 100) x8791) (not (< x885 x8745)) (= x5104 (x7941 x7105)) (= x6667 (+ 1 x3210)) (= x9101 (x3305 64 x7290 100)) (= x8745 (x4588 x5149 300)) (= (+ x7718 1) x2370) (= x4264 (x3305 64 x5931 6)) (= (+ 1 x1073) x1110) (= (+ x1110 1) x4434) (= x1681 (x3305 64 x8387 36)) (= (+ x8115 1) x4917) (= 128 x3844)) x8755) (and (=> (and x1971 (= x3175 512)) x8767) (=> (and (not x1971) (and (= x1044 (* (ite (= x6740 0) 1 0) 32)) (= (* 32 (ite (= 0 x6740) 1 0)) x7924) (= x8174 (+ 128 x6740 x7924)) (= (+ x6740 x1044 480) x714) (= x6740 (x5917 31 x8745)) (or (= 0 x7924) (= 32 x7924)) (or (= x1044 0) (= x1044 32)) (= x4625 (+ x8745 x714)) (= (> x4625 x714) x1458))) (and (=> x1458 x5250) (=> (and (= x714 x6301) (not x1458)) x5415))))) (=> (and (= x8366 (= x4495 6)) (not x8755)) (and (=> (and (not x8366) (= x942 (= 7 x4495))) (and (=> (and (not x942) (and (or (and (and (= x7156 x4817) (<= 1 x7718) (= (+ x7718 1) x1778) (= (+ x7718 1) x5856) (= x5707 x4517) (<= 1 x8518) (= (x2332 x4894) x7285) (= 128 x8306) (>= x2082 1) (= x8355 (x2332 x8869)) x705 (= (x8042 x732) x2227) (= x6088 x1259) (= (+ 1 x7718) x1726) (= (x3305 64 x7718 36) x732) (= (= (x5775 x8869) x8355) x705) (<= x6088 1461501637330902918203684832716283019655932542975) (<= x7718 254) (>= 4294967295 x8034) x822 (= (<= x7285 (x5775 x4894)) x822) (= x8518 (x484 x8869))) x6497) (and (not x6497) (and (= x3979 x1259) (= x7718 x1778) (= x3722 x7156) (= x6887 x4517)))) (= (= x4495 8) x6497))) x7303) (=> (and x942 (and (<= 1 x7718) (= x1480 (+ 1 x7718)) (<= 1 x8220) x651 (= x8220 (x484 x8869)) (= (x3305 64 x7718 2) x8480) (>= 254 x7718) (= (x8841 x8480) x5092) (<= x5092 1461501637330902918203684832716283019655932542975) (<= x8259 1461501637330902918203684832716283019655932542975) (= x2323 x5543) (= x6390 (x2332 x8869)) (= x2687 x2558) (>= x3563 1) (= (x2332 x4894) x5361) (<= x8442 4294967295) x3642 (= x4769 (+ x7718 1)) (= x4073 x8259) (= x4774 (+ x7718 1)) (= (= (x970 x8869) x6390) x3642) (= 128 x8915) (= (>= (x970 x4894) x5361) x651))) x4686))) (=> (and (and (<= x2888 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 251 x7718) (= x1086 (x2332 x8869)) (= (x2332 x4894) x4058) x708 (= x54 (x3305 64 x7718 36)) (= (+ 1 x1528) x8576) (= x2794 (x3305 64 x4545 36)) (= (+ x4545 1) x1528) (= x7848 (+ x7718 1)) (= (+ x8576 1) x60) (= x2888 (+ x5020 x1171)) (= x4033 x2888) (= x6705 (x8042 x2794)) (= x7247 (x2332 x4894)) (>= x4058 x5020) (= x3101 x4711) (= x3780 (+ 1 x4545)) (= (x3305 64 x1528 36) x7167) (<= 1 x3226) (= x4545 (+ 1 x7718)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1171 x5020)) (= (x8042 x54) x5020) (= (- x7247 x5020) x5825) (<= 1 x7718) (= (x8042 x7167) x2478) (= x1792 x6201) (= x708 (= (x6114 x8869) x5763)) (= x8308 (+ x1528 1)) x96 (= (+ x8576 1) x7438) (= x1171 (x255 x8869)) (>= x6276 1) (= x4951 (x8042 x4870)) (= x4870 (x3305 64 x8576 36)) (>= x2888 0) (= (+ x8576 1) x795) (= (x5165 x4894) x5097) (= x2850 x6258) (= x5794 128) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1086 x5020)) (= x3226 (x484 x8869)) (>= 4294967295 x6570) (= x5763 (x5165 x8869)) (= (>= (x6114 x4894) x5097) x96) (<= x6258 1461501637330902918203684832716283019655932542975)) x8366) x213))))))) (=> (and x7106 (and (>= 4294967295 x5635) (= (+ x6642 1) x3861) (= x81 (x2332 x8869)) (= (x7941 x938) x5672) (= x2142 (+ 1 x6642)) (>= x1016 1) (= x3230 x3504) (= x8491 x3433) (= x3595 x3006) (= (x8042 x1820) x113) (= x9067 (+ 1 x6642)) (= x6642 (+ 1 x7718)) (= x6771 (>= (x8384 x4894) x9064)) (<= x3433 1461501637330902918203684832716283019655932542975) (>= 253 x7718) x6771 (= (x3305 64 x7718 36) x1820) x2132 (= x8422 (x484 x8869)) (>= x8422 1) (= 128 x8834) (>= x7718 1) (= x938 (x3305 64 x6642 100)) (= x9064 (x2332 x4894)) (= x2132 (= (x8384 x8869) x81)) (= (+ x7718 1) x4296))) x6370))))) (=> (and x1320 (and (<= 1 x7718) (= (x7941 x4234) x3888) (= x470 (x3305 64 x5012 100)) (= (+ 1 x8225) x407) (= (x7941 x6518) x8716) (= x7631 (x3305 64 x8225 100)) (= x5537 (+ x5012 1)) (= (x7941 x7631) x3286) (= x1009 (x3305 64 x1586 100)) (= x8197 (+ x5537 1)) (= (+ 1 x7718) x3955) (<= x7718 243) (= x8124 (+ x5537 1)) (not (> x8742 x1565)) (= x7097 (+ x5575 1)) (= x8080 (+ 1 x8197)) (= x2090 (+ 1 x8225)) (= x6219 (x3305 64 x5537 100)) (= (+ x2079 1) x3026) (= x150 (x7941 x1009)) (= x6518 (x3305 64 x8615 100)) (not (< x8351 x8742)) (= x7455 (+ 1 x2079)) (= x8095 (+ 1 x1586)) (= (x6898 128) x8351) (= x2079 (+ 1 x5575)) (= (x4588 x6475 300) x8742) (not (< x1565 x8742)) (= (+ x8615 1) x4921) (= (x7941 x4170) x6884) (= (+ x4217 1) x5512) (= x8835 (x7941 x5223)) (= x3017 (x7941 x470)) (= x5223 (x3305 64 x8197 100)) (= x4234 (x3305 64 x4217 100)) (= x600 0) (= (x3305 64 x3026 100) x2572) (>= 65535 x4108) (= (+ x8197 1) x5575) (= (x7941 x1367) x2870) (= x1586 (+ 1 x3026)) (= (+ 31 x8742) x1565) (= x4217 (+ x1586 1)) (= x4519 (+ x7718 1)) (= (+ 1 x4217) x8615) (= (x3305 64 x7718 6) x893) (= (x7941 x6219) x454) (= (+ x5012 1) x6566) (= (+ x3026 1) x4838) (= (= 0 x8742) x517) (= x7615 (+ x4519 1)) (= (x3305 64 x2079 100) x4170) (= (x3305 64 x5575 100) x1367) (= (+ 1 x8615) x8225) (= (+ x4519 1) x5012) (= x4108 (x7445 x893)) (= x6072 (x3305 64 x4519 36)) (= x5592 128) (= (x7941 x2572) x2759) (= x6475 (x8042 x6072)))) (and (=> (and x517 (= 512 x4153)) x1534) (=> (and (not x517) (and (= x6886 (+ x7622 x8742)) (= x1310 (* (ite (= 0 x3369) 1 0) 32)) (= x425 (> x6886 x7622)) (= (x5917 31 x8742) x3369) (or (= 32 x1310) (= 0 x1310)) (= (* (ite (= x3369 0) 1 0) 32) x3265) (= x7622 (+ x3369 x3265 480)) (or (= x3265 32) (= x3265 0)) (= x5222 (+ x1310 128 x3369)))) (and (=> (and (= x8495 x7622) (not x425)) x359) (=> x425 x7407))))))) (=> (and (and (<= x7718 251) (>= x7718 1) (= x2189 (+ 1 x6053)) (= x146 (= (x1548 x8869) x611)) (= x611 (x2332 x8869)) (= (x8841 x2182) x5850) (= x6086 (x8841 x1438)) (= (x3305 64 x7718 2) x2182) (= (+ x8026 1) x7119) (= (x7445 x6899) x865) (= x6053 (+ x8026 1)) (= (+ x7718 1) x8026) (= x403 (+ 1 x6172)) (<= x5850 1461501637330902918203684832716283019655932542975) (= x3562 128) (= (+ 1 x6172) x2094) (<= x3147 4294967295) (>= x8318 1) (= x1438 (x3305 64 x6053 2)) (= x7158 (x3305 64 x6172 36)) (= x8303 x5213) (= (x484 x8869) x5878) (<= x8303 1461501637330902918203684832716283019655932542975) (= (x3305 64 x8026 6) x6899) (<= x6086 1461501637330902918203684832716283019655932542975) (= (x2332 x4894) x5759) (= x4734 x4326) x4055 (= (+ x7718 1) x5074) (<= 1 x5878) (= (+ x6172 1) x1995) (= (>= (x1548 x4894) x5759) x4055) (= (+ 1 x6053) x6172) x146 (= x5532 x4911) (<= x865 65535) (= (x8042 x7158) x5974)) x4014) x535))))) x6148))
(assert (=> (<= x3266 10000) (= 0 (x530 x3266))))
(assert (x4744 x1819))
(assert (x2673 x6923))
(assert (< (x3305 64 x5913 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4296))
(assert (x2673 x2242))
(assert (not (x669 (x3305 64 x8506 36))))
(assert (= (x1802 (x3305 64 x4519 36)) 36))
(assert (= x7435 (and x3737 x3747)))
(assert (x2673 x5402))
(assert (x1240 x5673))
(assert (x4744 x815))
(assert (x2673 x5103))
(assert (x2673 x49))
(assert (< 10000 (x3305 64 x3911 100)))
(assert (= (x530 (x3305 64 x606 100)) (x3305 64 x606 100)))
(assert (< 10000 (x3305 64 x4322 36)))
(assert (= x1051 (x4290 (x3305 64 x1051 100))))
(assert (x2673 x7571))
(assert (= (and x5692 x6173) x9108))
(assert (x4097 x5442 300))
(assert (= x3406 (or x8326 x8261)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5907 100)))
(assert (x8339 x1091))
(assert (x2673 x5542))
(assert (x7454 x5448))
(assert (= (x530 (x3305 64 x4545 36)) (x3305 64 x4545 36)))
(assert (x2673 x1283))
(assert (= (or x2414 (and (not x8554) x5785)) x5018))
(assert (= (x530 (x3305 64 x1486 100)) (x3305 64 x1486 100)))
(assert (x2673 x2386))
(assert (x4744 x8956))
(assert (= x5995 (and (not x6842) x8497)))
(assert (not (x669 (x3305 64 x2400 100))))
(assert (=> (<= x3210 10000) (= 0 (x530 x3210))))
(assert (< 10000 (x3305 64 x5404 12)))
(assert (< (x3305 64 x2749 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1802 (x3305 64 x2273 100)) 100))
(assert (= (and x2270 (not x1291)) x6681))
(assert (x2673 x5592))
(assert (x2673 x482))
(assert (x8339 x2426))
(assert (=> (<= x4107 10000) (= 0 (x530 x4107))))
(assert (x2673 x3580))
(assert (not (x669 (x3305 64 x2976 100))))
(assert (= (x967 (x3305 64 x7581 36)) 64))
(assert (x4097 x5912 256))
(assert (x7454 x4953))
(assert (x8339 x835))
(assert (x8339 x7173))
(assert (= x7872 (and x6670 x3435)))
(assert (x2673 x9134))
(assert (< (x3305 64 x668 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4533 12)))
(assert (x4744 x4032))
(assert (x2673 x1744))
(assert (< 10000 (x3305 64 x6767 36)))
(assert (x2673 x889))
(assert (x2673 x7000))
(assert (x2673 x8644))
(assert (= (and (not x6220) x46) x8702))
(assert (x2673 x4736))
(assert (x2673 x4333))
(assert (x2673 x8510))
(assert (= x6839 (and x3482 (not x5637))))
(assert (x2673 x3250))
(assert (> (x3305 64 x1084 100) 10000))
(assert (x2673 x4779))
(assert (= (x1802 (x3305 64 x2106 100)) 100))
(assert (= (x1802 (x3305 64 x3548 36)) 36))
(assert (= 64 (x967 (x3305 64 x8148 6))))
(assert (x7454 x7861))
(assert (x2673 x2117))
(assert (x2673 x1142))
(assert (x2673 x271))
(assert (x2673 x8918))
(assert (< 10000 (x3305 64 x8399 100)))
(assert (= x2400 (x4290 (x3305 64 x2400 100))))
(assert (x2673 x7567))
(assert (x2673 x1070))
(assert (x2673 x5097))
(assert (x7454 x914))
(assert (x2673 x3301))
(assert (= x4207 (or x4222 x2533)))
(assert (= (or x7096 x6333 x767 x4099 x8872) x8139))
(assert (x4097 x7406 300))
(assert (= (x3305 64 x142 100) (x530 (x3305 64 x142 100))))
(assert (x2673 x6221))
(assert (x2673 x4082))
(assert (< 10000 (x3305 64 x7791 12)))
(assert (= 36 (x1802 (x3305 64 x4365 36))))
(assert (= 100 (x1802 (x3305 64 x2354 100))))
(assert (x2673 x2211))
(assert (= (x530 36180046632115354981904271164172418022085455641023445553456023893925156618240) 0))
(assert (x9110 x6757))
(assert (x4744 x8742))
(assert (x4744 x7969))
(assert (x2673 x100))
(assert (not (x669 (x3305 64 x6135 36))))
(assert (x4744 x5673))
(assert (= 64 (x967 (x3305 64 x4533 12))))
(assert (= (or x7477 x3793) x2533))
(assert (x8339 x120))
(assert (< 10000 (x3305 64 x261 100)))
(assert (x8339 x6093))
(assert (= (x4290 (x3305 64 x4519 36)) x4519))
(assert (x2673 x3158))
(assert (= (x530 (x3305 64 x7581 36)) (x3305 64 x7581 36)))
(assert (= 0 (x530 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (x2673 x154))
(assert (x2673 x3266))
(assert (x2673 x4171))
(assert (x8502 (ite (= 0 x1033) 1 0)))
(assert (x2673 x1627))
(assert (= 0 (x530 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (x2673 x1356))
(assert (x2673 x7877))
(assert (x2673 x7950))
(assert (x2673 x4630))
(assert (= 0 (x530 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x2673 x6508))
(assert (x8339 x2757))
(assert (x5050 x3759))
(assert (= (x4290 (x3305 64 x3066 100)) x3066))
(assert (x2673 x8400))
(assert (x2673 x4692))
(assert (x2673 x3867))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x9039 100)))
(assert (x2673 x6362))
(assert (x2673 x2629))
(assert (x2673 x8709))
(assert (= x2408 (=> (and (= (x484 x8869) x3676) x2771 (>= 1461501637330902918203684832716283019655932542975 x7466) (= x1263 x7573) (= (x7405 (+ x9128 x2195)) x2218) (= (x2332 x8869) x502) (= x3419 x7466) (= (x2332 x4894) x106) (= x5036 (= x502 (x6811 x8869))) (<= x2422 4294967295) (>= x3676 1) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3610) x2195) (= (+ x8946 1) x38) (>= x423 1) x5036 (= x3610 (x7405 (+ 31 x7149))) (= x2696 x1490) (= (x7190 (- x2218 x4670)) x7286) (= x8934 (x7405 (+ x7149 x9128))) (= (<= x106 (x6811 x4894)) x2771)) x3048)))
(assert (x4097 x1297 32))
(assert (x2673 x5093))
(assert (x8339 x2575))
(assert (x2673 x7599))
(assert (= x3033 (and x7560 (not x2261))))
(assert (= x8713 (x4290 (x3305 64 x8713 100))))
(assert (x2673 x8115))
(assert (= x4235 (or x4374 x4943)))
(assert (= (x3305 64 x8225 100) (x530 (x3305 64 x8225 100))))
(assert (x2673 x4617))
(assert (x8339 x4394))
(assert (x2673 x407))
(assert (= (or x3876 x8577) x4943))
(assert (x2673 x3548))
(assert (= (x3305 64 x3742 36) (x530 (x3305 64 x3742 36))))
(assert (x2673 x4107))
(assert (x669 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x2673 x2348))
(assert (x2673 x3263))
(assert (x2673 x8312))
(assert (not (x669 (x3305 64 x1528 36))))
(assert (> (x3305 64 x7571 100) 10000))
(assert (= x3576 (and (not x5822) x7413)))
(assert (= (x3305 64 x6832 100) (x530 (x3305 64 x6832 100))))
(assert (=> (<= x7686 10000) (= 0 (x530 x7686))))
(assert (= (and x225 x4430) x8670))
(assert (= x2154 (x4290 (x3305 64 x2154 100))))
(assert (x2673 x4670))
(assert (> (x3305 64 x8225 100) 10000))
(assert (= x1526 (and x7464 (not x5053))))
(assert (x8339 x1747))
(assert (x2673 x7910))
(assert (x7454 x6890))
(assert (< 10000 (x3305 64 x6090 100)))
(assert (> (x3305 64 x8849 36) 10000))
(assert (= (x3305 64 x8777 100) (x530 (x3305 64 x8777 100))))
(assert (not (x669 (x3305 64 x8115 100))))
(assert (x2673 x8491))
(assert (= x2032 (x4290 (x3305 64 x2032 100))))
(assert (> (x3305 64 x8576 36) 10000))
(assert (= 64 (x967 (x3305 64 x1073 100))))
(assert (= (x530 (x3305 64 x1256 100)) (x3305 64 x1256 100)))
(assert (x4744 x5278))
(assert (=> (<= x5868 10000) (= 0 (x530 x5868))))
(assert (= (and x2550 x851) x8690))
(assert (< (x3305 64 x7113 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x309 (x4290 (x3305 64 x309 12))))
(assert (x2673 x7270))
(assert (= (and x5027 x4506) x1052))
(assert (=> (>= 10000 x2253) (= 0 (x530 x2253))))
(assert (= (and x250 (not x3874)) x1426))
(assert (= x4428 (and (not x6024) x4903)))
(assert (x8339 x8433))
(assert (x2673 x3810))
(assert (x669 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (x4097 x6890 256))
(assert (= (x3305 64 x8194 100) (x530 (x3305 64 x8194 100))))
(assert (not (x669 (x3305 64 x4689 36))))
(assert (x5050 x735))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3214 36)))
(assert (x9110 x1551))
(assert (x2673 x8303))
(assert (x2673 x7987))
(assert (x2673 x7819))
(assert (= (x3305 64 x2986 36) (x530 (x3305 64 x2986 36))))
(assert (= (=> (and (or (not x5496) x5496) (= x5496 (= 0 x5357))) x8949) x7610))
(assert (x8339 x8362))
(assert (> (x3305 64 x8506 36) 10000))
(assert (x2673 x8194))
(assert (x7454 x6666))
(assert (= 64 (x967 (x3305 64 x1406 100))))
(assert (= (and x8497 x6842) x5615))
(assert (x2673 x1650))
(assert (x2673 x4794))
(assert (x2673 x1276))
(assert (= (x967 (x3305 64 x6090 100)) 64))
(assert (= (x967 (x3305 64 x3892 12)) 64))
(assert (x2673 x3797))
(assert (= (x1802 (x3305 64 x5331 36)) 36))
(assert (x7454 x3344))
(assert (=> (>= 10000 x346) (= (x530 x346) 0)))
(assert (x2673 x4414))
(assert (= x7919 (=> (= x6714 (= x5826 0)) (and (=> x6714 x4775) (=> (and (and (= x2664 x3347) (= x2214 x2894) (= (x1564 128) x4967) (= x4967 x4005) (= x2012 x1738) (= 160 x14) (= x8857 x4398) (= x1836 x464) (= x2513 x6226) (= x7253 x8091) (= x3685 x6154) (= x740 x2765) (= x5839 x8906) (= x8333 x1988) (= x1007 x1935)) (not x6714)) x2469)))))
(assert (x4097 x7371 256))
(assert (= 64 (x967 (x3305 64 x6730 100))))
(assert (x2673 x1860))
(assert (not (x669 (x3305 64 x8073 100))))
(assert (=> (<= x5012 10000) (= (x530 x5012) 0)))
(assert (= (x4290 (x3305 64 x6206 100)) x6206))
(assert (x2673 x4648))
(assert (x9110 x7217))
(assert (x2673 x8898))
(assert (x2673 x4543))
(assert (= x4209 (=> (and (= (x7405 (+ x2338 96)) x7351) (= (not (< 128 x8409)) x5235) (= x487 (x6837 608))) (and x5235 x763))))
(assert (x2673 x8868))
(assert (= (x530 (x3305 64 x7584 100)) (x3305 64 x7584 100)))
(assert (=> (<= x2356 10000) (= 0 (x530 x2356))))
(assert (= (x4290 (x3305 64 x176 100)) x176))
(assert (x2673 x498))
(assert (x4097 x8024 256))
(assert (x2673 x7887))
(assert (x2673 x2098))
(assert (= x3106 (=> (and (= x2429 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6597)) (<= x2429 606) (>= x2429 481) (= (+ x461 31) x6597) (= x5645 x2429)) x3497)))
(assert (x2673 x1292))
(assert (x4744 x1297))
(assert (= (x967 (x3305 64 x3026 100)) 64))
(assert (not (x669 (x3305 64 x2749 100))))
(assert (= (x967 (x3305 64 x3278 100)) 64))
(assert (= x7690 (and x2448 (not x1014))))
(assert (x8339 x2570))
(assert (x2673 x6886))
(assert (x4097 x1924 32))
(assert (= (x530 (x3305 64 x2212 100)) (x3305 64 x2212 100)))
(assert (x2673 x5342))
(assert (= x1587 (x4290 (x3305 64 x1587 100))))
(assert (x8339 x5047))
(assert (= x1176 (and x3341 x5495)))
(assert (= (x530 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (=> (>= 10000 x9096) (= (x530 x9096) 0)))
(assert (x8339 x6283))
(assert (x4097 x5548 256))
(assert (not (x669 (x3305 64 x3026 100))))
(assert (= (x3305 64 x3266 100) (x530 (x3305 64 x3266 100))))
(assert (x2673 x5268))
(assert (x2673 x5394))
(assert (= 64 (x967 (x3305 64 x2356 100))))
(assert (x2673 x435))
(assert (x2673 x6302))
(assert (x2673 x612))
(assert (= 100 (x1802 (x3305 64 x3499 100))))
(assert (x2673 x1405))
(assert (= (and x4632 x8133) x3448))
(assert (x2673 x2187))
(assert (= x1873 (=> (and (= x3006 x5640) (= x3504 x7472) (= x8491 x4115) (= x6793 x3861)) x6370)))
(assert (x2673 x879))
(assert (= x2216 (x4290 (x3305 64 x2216 12))))
(assert (= 64 (x967 (x3305 64 x2608 100))))
(assert (x2673 x1480))
(assert (x7454 x1451))
(assert (x7454 x7257))
(assert (x4097 x815 256))
(assert (x4097 x3610 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7287))
(assert (= (or x2368 x585) x8830))
(assert (not (x669 (x3305 64 x6172 36))))
(assert (= x1535 (and x1148 x4998)))
(assert (= x2194 (=> (and (= x7023 x1977) (= x5769 x1493) (= x3796 x7759) (= x2632 x6965) (= x6387 x1825) (= x4765 x221) (= x6862 x4727) (= x1475 x4715) (= x5087 x412) (= x1937 x6190)) x3335)))
(assert (= (x4290 (x3305 64 x3499 100)) x3499))
(assert (x2673 x3077))
(assert (x2673 x216))
(assert (< 10000 (x3305 64 x7175 100)))
(assert (= (x3305 64 x744 100) (x530 (x3305 64 x744 100))))
(assert (x2673 x3854))
(assert (= x3876 (and x8082 x2434)))
(assert (= x8040 (=> (and (= (x7405 (+ 31 x1090)) x4388) (= x2530 (x7190 (- x394 x5736))) (= x8947 (x484 x8869)) (< (+ x4534 x1963) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x3711 0) (= x8873 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4388)) (= x3711 x1830) (= (+ x4266 1) x7654) (= x2807 (x4778 x4894)) (= (x4778 x4894) x4908) (<= x4534 x2807) x8612 (= (>= (x9057 x4894) x4464) x3717) (= x8612 (= (x9057 x8869) x7520)) (= (x8697 x8869) x7520) (= x4912 (- x4908 x4534)) (>= x8947 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3711) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4381 x4534)) (= x4464 (x8697 x4894)) (= x4381 (x841 x8869)) (>= x1677 1) (= (x7405 (+ x8873 x1853)) x394) (= (x4778 x8869) x1963) x3717 (= x2443 (x7405 (+ x1853 x1090))) (= x3711 (+ x4381 x4534)) (<= x6845 4294967295)) x3409)))
(assert (x2673 x2797))
(assert (x2673 x2335))
(assert (= (x530 (x3305 64 x2534 100)) (x3305 64 x2534 100)))
(assert (x8339 x3139))
(assert (x2673 x8073))
(assert (x4097 x8966 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2115))
(assert (= (and x2434 (not x8082)) x4374))
(assert (= x5508 (x4290 (x3305 64 x5508 36))))
(assert (x2673 x5211))
(assert (=> (>= 10000 x6939) (= 0 (x530 x6939))))
(assert (> (x3305 64 x5270 100) 10000))
(assert (x2673 x1560))
(assert (= (x967 (x3305 64 x1237 100)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4146 36)))
(assert (x2673 x2070))
(assert (x2673 x6115))
(assert (< (x3305 64 x6804 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x967 (x3305 64 x6651 100)) 64))
(assert (< 10000 (x3305 64 x4217 100)))
(assert (not (x669 (x3305 64 x5269 100))))
(assert (=> (<= x7443 10000) (= (x530 x7443) 0)))
(assert (not (x669 (x3305 64 x7239 36))))
(assert (x2673 x7842))
(assert (= 64 (x967 (x3305 64 x3109 100))))
(assert (x2673 x6020))
(assert (x2673 x6367))
(assert (x4097 x8340 32))
(assert (x7454 x8083))
(assert (x8339 x1822))
(assert (x2673 x7892))
(assert (x2673 x7584))
(assert (x2673 x3872))
(assert (x7454 x2314))
(assert (= x3445 (=> (and (= x8630 x2214) (= x6866 x8906) (= x4398 x3567) (= x1935 x6055) (= x5980 2) (= x453 x8333) (= x8091 x5358) (= 0 x6399) (= x410 x464) (= x3347 x4518) (= x1616 x6226) (= x3685 x3618) (= 2 x6918) (= x3346 x2765)) x8729)))
(assert (x2673 x1506))
(assert (x2673 x2323))
(assert (=> (<= x4648 10000) (= (x530 x4648) 0)))
(assert (= (and (not x6344) x6352) x5446))
(assert (x2673 x8344))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4027 100)))
(assert (x2673 x3869))
(assert (x2673 x8560))
(assert (= (and x8304 (not x5258)) x325))
(assert (x2673 x4585))
(assert (= (x3305 64 x8580 100) (x530 (x3305 64 x8580 100))))
(assert (x2673 x285))
(assert (= x129 (and (not x6393) x984)))
(assert (x2673 x1074))
(assert (< (x3305 64 x918 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1802 (x3305 64 x8576 36)) 36))
(assert (x669 18446744073709551615))
(assert (x2673 x7867))
(assert (= x9104 (or x8809 x2290)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1051 100)))
(assert (= x8781 (and x8016 (not x3432))))
(assert (x1240 x5048))
(assert (x7454 x435))
(assert (= x3496 (and x7994 (not x463))))
(assert (=> (>= 10000 x2161) (= (x530 x2161) 0)))
(assert (= (x3305 64 x5488 100) (x530 (x3305 64 x5488 100))))
(assert (x2673 x3837))
(assert (x2673 x4431))
(assert (= (x967 (x3305 64 x4655 36)) 64))
(assert (=> (<= x2379 10000) (= 0 (x530 x2379))))
(assert (x2673 x735))
(assert (x2673 x4557))
(assert (x2673 x7258))
(assert (= x4144 (and x2135 (not x2626))))
(assert (x2673 x6093))
(assert (x8339 x8012))
(assert (= 64 (x967 (x3305 64 x3742 36))))
(assert (x8339 x1287))
(assert (=> (<= x2216 10000) (= 0 (x530 x2216))))
(assert (x4744 x5483))
(assert (= 36 (x1802 (x3305 64 x8387 36))))
(assert (x2673 x781))
(assert (x8339 x2136))
(assert (=> (<= x9039 10000) (= (x530 x9039) 0)))
(assert (= (or x4471 x5517 x4836 x4805 x5788) x860))
(assert (= (and x5496 x1944) x716))
(assert (= (and x7949 (not x6223)) x6042))
(assert (= (=> (and (= x4351 (x7405 (+ 32 x707))) (= (x7405 (+ 31 x4023)) x5048) (= x8821 (x7405 (+ x9008 32))) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5048) x3757) (= x69 (x7405 (+ x8894 32))) (= (x7190 (- x8894 x7338)) x7762) (= (> x1645 0) x3303) (= x707 (x7405 (+ 32 x1503))) (= x8894 (x7405 (+ x7927 x3757))) (= (x7405 (+ x7927 x4023)) x257) (= (x4493 x9008) x1645)) (and (=> (and (and (= (< 32 x1645) x3285) (= (x2625 x8821) x7004)) x3303) (and (=> (not x3285) x2693) (=> (and x3285 (and (= (x7405 (+ 32 x8821)) x2871) (= (x8420 x2871) x7742) (= x7068 (x7405 (+ x69 32))) (= x8434 (> x1645 64)))) (and (=> (not x8434) x2693) (=> (and (and (= (x7405 (+ x69 64)) x949) (= x1366 (x7405 (+ 64 x8821))) (= (> x1645 96) x3169) (= x5341 (x7385 x1366))) x8434) (and (=> x3169 x6083) (=> (not x3169) x2693))))))) (=> (not x3303) x2693))) x2287))
(assert (= 100 (x1802 (x3305 64 x5577 100))))
(assert (= (and (not x775) x5900) x3501))
(assert (x8339 x2438))
(assert (=> (<= x4894 10000) (= (x530 x4894) 0)))
(assert (= (x1802 (x3305 64 x6730 100)) 100))
(assert (x4097 x1927 32))
(assert (x2673 x4917))
(assert (x2673 x7534))
(assert (not (x669 (x3305 64 x4867 100))))
(assert (x7454 x6981))
(assert (< 10000 (x3305 64 x3729 100)))
(assert (= (or x4342 x5854) x7483))
(assert (not (x669 (x3305 64 x4027 100))))
(assert (x2673 x8213))
(assert (= (and x3166 x6650) x2938))
(assert (= 100 (x1802 (x3305 64 x2024 100))))
(assert (x2673 x3560))
(assert (x7454 x7668))
(assert (x2673 x202))
(assert (x2673 x8853))
(assert (not (x669 (x3305 64 x4171 2))))
(assert (x2673 x845))
(assert (x2673 x2431))
(assert (x2673 x3714))
(assert (x2673 x5173))
(assert (x2673 x5658))
(assert (= x2603 (and x1967 (not x2272))))
(assert (x2673 x3283))
(assert (= (x4290 (x3305 64 x2750 100)) x2750))
(assert (x2673 x7570))
(assert (x2673 x6258))
(assert (x2673 x4076))
(assert (= (and (not x4106) x546) x3948))
(assert (x2673 x1794))
(assert (= (and x3753 x6790) x2977))
(assert (x2673 x3390))
(assert (x2673 x8513))
(assert (x2673 x6732))
(assert (= (x1802 (x3305 64 x7140 100)) 100))
(assert (not (x669 (x3305 64 x1807 100))))
(assert (=> (<= x7571 10000) (= (x530 x7571) 0)))
(assert (= x5294 (x4290 (x3305 64 x5294 36))))
(assert (x2673 x159))
(assert (= (x4290 (x3305 64 x3459 100)) x3459))
(assert (x8339 x8709))
(assert (x2673 x6567))
(assert (x4097 x866 32))
(assert (< (x3305 64 x6848 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x880 (and (not x2826) x4973)))
(assert (= x3042 (=> (and (= x3507 (+ 1 x2774)) (= (x7941 x529) x259) (= (+ x309 1) x6273) (= x4810 (x7405 (+ x6176 32))) (= (x7405 (+ x5657 32)) x6176) (= (x3305 64 x8194 100) x4400) (= x8194 (+ 1 x1406)) (= x2882 (x7941 x1081)) (= x6791 (x3305 64 x8322 100)) (= (+ x5379 31) x6856) (= x5311 (x7941 x7523)) (= x6234 (x7405 (+ x6246 32))) (= (+ x8194 1) x4266) (= x3996 (+ 1 x6273)) (= x3452 (x3305 64 x6273 36)) (= (+ 1 x309) x6665) (= (x7941 x3871) x5463) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x6923) (= (+ x606 1) x9103) (not (= x6923 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x3305 64 x606 100) x4940) (= x7075 (+ x1406 1)) (= x7673 (+ 1 x7358)) (= x5379 (x4588 x1362 300)) (= x5625 (+ x7673 1)) (= 0 x8150) (= x5664 (+ x7358 1)) (< x6923 x9020) (= x8322 (+ x7673 1)) (= (x7405 (+ 32 x6923)) x5657) (= (x7941 x7221) x2717) (= (x7405 (+ x2366 32)) x7517) (= x9020 (x7405 (+ 32 x6503))) (= (x7405 (+ x752 32)) x6246) (not (< x6856 x5379)) (= x6284 480) (= (x3011 x2764) x8980) (= x3241 (+ x6273 1)) (= x117 (x3305 64 x2161 100)) (= (= 0 x5379) x6155) (= (x7405 (+ x7517 32)) x6503) (= x2764 (x3305 64 x309 12)) (>= 18446744073709551615 x8980) (>= x309 14) (= x941 (x7657 x6923)) (= x2161 (+ 1 x606)) (= x752 (x7405 (+ 32 x4810))) (<= x6923 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x7523 (x3305 64 x2774 100)) (= (+ x2161 1) x4608) (not (< x941 x5379)) (= (+ x4266 1) x8892) (= x2463 (x7941 x117)) (= (x7405 (+ x6234 32)) x5072) (= (x3305 64 x3241 100) x529) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x6923) (= x4302 (x7941 x488)) (= 480 x2754) (= x1406 (+ 1 x2161)) (= x8172 (+ 1 x8322)) (= (x7941 x4400) x1199) (= x2512 (+ 1 x8194)) (not (< x6856 x5379)) (= x7397 (x7941 x4940)) (= (+ 1 x4266) x8557) (not (= x6923 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x7941 x6791) x2825) (= (x3305 64 x7673 100) x1081) (= (+ x3241 1) x7358) (<= x309 243) (= x4380 (x7190 (- x9020 x6923))) (= x606 (+ 1 x2774)) (= x1362 (x8042 x3452)) (= x6915 (+ 1 x3241)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x6923)) (= x7221 (x3305 64 x7358 100)) (= x2774 (+ x8322 1)) (= (x7405 (+ 32 x5072)) x2366) (= (x3305 64 x4266 100) x488) (= (x3305 64 x1406 100) x3871) (= (x7190 (- x4380 32)) x6620)) (and (=> (and x6155 (and (= x5736 x4955) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x9020) (not (= x9020 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x9020 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x3575 x9020) (< x9020 x4955) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x9020)) (= x4955 (x7405 (+ 32 x9020))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x9020) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x9020))) x1667) (=> (and (not x6155) (and (= (x7405 (+ x2372 x5379)) x4250) (or (= 32 x9013) (= 0 x9013)) (= x8125 (* (ite (= x1033 0) 1 0) 32)) (= (> x4250 x2372) x5767) (or (= x8125 0) (= x8125 32)) (= (x7405 (+ x1033 x6923)) x3111) (= x2372 (x7405 (+ x9013 x7000))) (= x9013 (* 32 (ite (= x1033 0) 1 0))) (= x1033 (x5917 31 x5379)) (= x7000 (x7405 (+ x1033 x9020))) (= (x7405 (+ x8125 x3111)) x6511))) (and (=> x5767 x7504) (=> (and (= x2372 x8184) (not x5767)) x6142)))))))
(assert (= (x4290 (x3305 64 x668 100)) x668))
(assert (> (x3305 64 x1113 100) 10000))
(assert (x2673 x432))
(assert (x2673 x6882))
(assert (x2673 x3610))
(assert (x4744 x1546))
(assert (x2673 x6450))
(assert (x2673 x2907))
(assert (x2673 x4213))
(assert (= (=> (and (= false x8215) (= true x5247)) x3445) x378))
(assert (x2673 x1038))
(assert (= x6711 (=> (and (= x1384 (+ x474 1)) (= (+ 1 x9023) x2098) (= (+ 1 x1587) x7534) (= x474 (+ 1 x1442)) (= (x7405 (+ x1182 32)) x303) (= (x3305 64 x2098 100) x2834) (= (x3305 64 x8499 100) x1687) (= x5473 (x3011 x7335)) (not (= x7664 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= x8430 480) (= (x3305 64 x4241 12) x7335) (= x3661 (x3305 64 x1587 100)) (= x9023 (+ x8499 1)) (= x6805 (x7941 x8596)) (= (+ 1 x4241) x4655) (= 480 x1803) (= (+ x8340 31) x4783) (= (x7405 (+ x7664 32)) x7819) (= (+ 1 x2847) x2532) (= (+ x8499 1) x6844) (<= x5473 18446744073709551615) (= (+ 1 x1587) x176) (= x1587 (+ 1 x4648)) (= 0 x7220) (= (+ x176 1) x855) (= (x7941 x3999) x3269) (<= x7664 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x7664 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x7941 x2350) x6049) (= (x3305 64 x9023 100) x3999) (= x5370 (x7941 x2834)) (= x4746 (+ 1 x4655)) (= x2736 (+ 1 x474)) (= x427 (x7405 (+ x303 32))) (< x7664 x4077) (= (x7405 (+ 32 x5125)) x3282) (= x5396 (x3305 64 x2736 100)) (= (x7405 (+ x5226 32)) x1182) (= (+ 1 x2847) x4648) (= (x7941 x3661) x7329) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x7664) (= x8224 (+ x9023 1)) (= x4077 (x7405 (+ x4186 32))) (= x6335 (x3305 64 x474 100)) (= x2070 (x7941 x5396)) (not (= x7664 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x3305 64 x4648 100) x8596) (= (x3498 x7664) x2062) (= x7027 (x3305 64 x4655 36)) (not (= x7664 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (+ x2736 1) x2334) (= x8499 (+ 1 x4655)) (= (x7190 (- x4077 x7664)) x3506) (= (x7941 x3878) x2386) (= (x7941 x7124) x5811) (>= 243 x4241) (>= x4241 13) (= x2081 (+ 1 x1442)) (= (+ x176 1) x7729) (= x2804 (x8042 x7027)) (not (< x4783 x8340)) (= x5226 (x7405 (+ 32 x2982))) (not (> x8340 x2062)) (= (x4588 x2804 300) x8340) (= (x3305 64 x1442 100) x7124) (= (x7941 x6335) x3124) (= (x7405 (+ 32 x427)) x4186) (= (+ 1 x4648) x7567) (= x202 (x7405 (+ 32 x3282))) (= (x3305 64 x2847 100) x2350) (= (x7190 (- x3506 32)) x1112) (= (x7941 x1687) x3425) (not (> x8340 x4783)) (= x8606 (+ 1 x4241)) (= (x7405 (+ 32 x7819)) x5125) (= (+ 1 x2098) x2213) (= (x7405 (+ x202 32)) x2982) (= x1777 (= x8340 0)) (= (+ x2098 1) x1442) (= x3878 (x3305 64 x176 100)) (= (+ 1 x2736) x2847)) (and (=> (and x1777 (and (<= x4077 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x7648 (x7405 (+ x4077 32))) (< x4077 x7648) (= x4077 x5090) (<= x4077 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4077)) (= x7648 x7959) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4077) (not (= x4077 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4077)))) x3172) (=> (and (not x1777) (and (or (= 0 x6271) (= x6271 32)) (= x6723 (x7405 (+ x8340 x7085))) (= (x7405 (+ x1054 x7664)) x6558) (= x6192 (x7405 (+ x4077 x1054))) (= x1698 (> x6723 x7085)) (= (x7405 (+ x6271 x6192)) x7085) (or (= 32 x4402) (= 0 x4402)) (= (x5917 31 x8340) x1054) (= (* 32 (ite (= 0 x1054) 1 0)) x4402) (= (* (ite (= 0 x1054) 1 0) 32) x6271) (= x8208 (x7405 (+ x6558 x4402))))) (and (=> x1698 x7540) (=> (and (= x1798 x7085) (not x1698)) x4072)))))))
(assert (x4744 31))
(assert (= (=> (and (= x7177 (x7405 (+ 32 x1759))) (= x1759 (x7405 (+ 128 x483))) (= (x7405 (+ 4 x3555)) x483) (= (x7405 (+ 32 x483)) x1801) (= x4404 (> x7609 0)) (= (x6946 480) x7609)) (and (=> (not x4404) x4610) (=> (and (and (= (x5661 512) x6788) (= (< 32 x7609) x3762)) x4404) (and (=> (not x3762) x4610) (=> (and x3762 (and (= (x7844 544) x5295) (= (x7405 (+ 32 x7177)) x5369) (= x4472 (> x7609 64)))) (and (=> (not x4472) x4610) (=> (and (and (= x5642 (> x7609 96)) (= (x7405 (+ 64 x7177)) x5936) (= (x3807 576) x7659)) x4472) (and (=> x5642 x57) (=> (not x5642) x4610))))))))) x8511))
(assert (< (x3305 64 x7718 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8712))
(assert (x2673 x7451))
(assert (= x4958 (x4290 (x3305 64 x4958 100))))
(assert (= (x530 (x3305 64 x4617 100)) (x3305 64 x4617 100)))
(assert (= (x967 (x3305 64 x2379 11)) 64))
(assert (x2673 x7175))
(assert (x7454 x5548))
(assert (x2673 x7140))
(assert (< 10000 (x3305 64 x3617 100)))
(assert (x4097 x6597 32))
(assert (x8339 x8839))
(assert (= (and (not x1458) x513) x8809))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5680 100)))
(assert (= (and x4524 x8662) x4613))
(assert (= x1306 (x4290 (x3305 64 x1306 2))))
(assert (x2673 x3780))
(assert (x2673 x2017))
(assert (x2673 x5361))
(assert (=> (>= 10000 x760) (= (x530 x760) 0)))
(assert (x2673 x3076))
(assert (= (x4290 (x3305 64 x9009 36)) x9009))
(assert (x2673 x2159))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7140 100)))
(assert (< 10000 (x3305 64 x436 100)))
(assert (= (x967 (x3305 64 x8580 100)) 64))
(assert (x9110 x3110))
(assert (= 64 (x967 (x3305 64 x4322 36))))
(assert (= (x3305 64 x977 6) (x530 (x3305 64 x977 6))))
(assert (x2673 x4655))
(assert (x2673 x461))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7184 36)))
(assert (= x2174 (and x7214 (not x5725))))
(assert (=> (>= 10000 x7501) (= (x530 x7501) 0)))
(assert (< (x3305 64 x6099 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8694))
(assert (x2673 x8428))
(assert (= 64 (x967 (x3305 64 x2750 100))))
(assert (= (x4290 (x3305 64 x8143 100)) x8143))
(assert (= (and x6902 x4685) x2553))
(assert (x2673 x6911))
(assert (= (x530 (x3305 64 x4285 100)) (x3305 64 x4285 100)))
(assert (x2673 x6163))
(assert (x4097 x4748 256))
(assert (x2673 x3545))
(assert (x2673 x7131))
(assert (x2673 x1166))
(assert (x2673 x7904))
(assert (x2673 x55))
(assert (x2673 x2868))
(assert (x2673 x6862))
(assert (= (x530 (x3305 64 x3729 100)) (x3305 64 x3729 100)))
(assert (x4097 x4388 32))
(assert (=> (>= 10000 x6212) (= 0 (x530 x6212))))
(assert (=> (>= 10000 x2273) (= 0 (x530 x2273))))
(assert (= (x967 (x3305 64 x7354 100)) 64))
(assert (x2673 x1803))
(assert (= (x530 (+ x6164 1)) (x530 x6164)))
(assert (= 64 (x967 (x3305 64 x5680 100))))
(assert (x2673 x4395))
(assert (= (or x91 x5041) x4227))
(assert (x2673 x6920))
(assert (= 64 (x967 (x3305 64 x3580 100))))
(assert (x8339 x975))
(assert (x2673 x506))
(assert (x2673 x3175))
(assert (= (or x4127 x7964) x5144))
(assert (= x5250 (=> (and (= (not (> x4625 x1329)) x1314) (= (+ x714 32) x1329) (= x6973 (x7871 x8174))) (and (=> (= x6301 x1329) x5415) x1314))))
(assert (x2673 x7275))
(assert (x2673 x7801))
(assert (x2673 x581))
(assert (x2673 x1985))
(assert (x9110 x682))
(assert (x4097 x8513 256))
(assert (x2673 x1770))
(assert (= (x1802 (x3305 64 x8352 6)) 6))
(assert (= (x967 (x3305 64 x2273 100)) 64))
(assert (= (x1802 (x3305 64 x6767 36)) 36))
(assert (x4744 x6599))
(assert (x2673 x1073))
(assert (= (and x517 x8924) x3616))
(assert (= x104 (=> (and (= x5686 (x7405 (+ x6992 96))) (= x7416 (not (< 128 x6724))) (= x5487 (x7954 608))) (and x7416 x1826))))
(assert (x7454 x3568))
(assert (x2673 x6354))
(assert (not (x669 (x3305 64 x6642 100))))
(assert (= (x3305 64 x7673 100) (x530 (x3305 64 x7673 100))))
(assert (x2673 x3369))
(assert (x2673 x7586))
(assert (x2673 x8840))
(assert (x7454 x7779))
(assert (= (x1802 (x3305 64 x3104 100)) 100))
(assert (x8339 x7219))
(assert (x9110 x6575))
(assert (x4744 x6013))
(assert (= (=> (and (= x1490 x4326) (= x7573 x4911) (= x5213 x3419) (= x38 x403)) x535) x3048))
(assert (< 10000 (x3305 64 x132 100)))
(assert (= (x967 (x3305 64 x5390 100)) 64))
(assert (x2673 x8617))
(assert (x2673 x1561))
(assert (x7454 x6870))
(assert (x2673 x6250))
(assert (= x6499 (and x5365 x5163)))
(assert (x2673 x7128))
(assert (x2673 x6927))
(assert (x4744 x2570))
(assert (= x6289 (and x3505 (not x6966))))
(assert (x2673 x7165))
(assert (x4097 x120 256))
(assert (x2673 x5576))
(assert (= (or (and x9111 x2815) (and x6057 x4061) (and x3482 x5637)) x601))
(assert (= (and x2397 (not x7858)) x5070))
(assert (=> (<= x271 10000) (= (x530 x271) 0)))
(assert (not (x669 (x3305 64 x2644 100))))
(assert (x1240 x8327))
(assert (x2673 x4166))
(assert (x4097 x6615 256))
(assert (= (x3305 64 x309 12) (x530 (x3305 64 x309 12))))
(assert (x2673 x6689))
(assert (x2673 x5841))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x235 100)))
(assert (< 10000 (x3305 64 x2273 100)))
(assert (x2673 x7623))
(assert (x2673 x5282))
(assert (x2673 x7514))
(assert (= (x530 (x3305 64 x4867 100)) (x3305 64 x4867 100)))
(assert (x2673 x6048))
(assert (x2673 x2705))
(assert (< 10000 (x3305 64 x2400 100)))
(assert (x7454 x6231))
(assert (x2673 x4879))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8085 100)))
(assert (x4097 x243 32))
(assert (x2673 x2353))
(assert (x7454 x5047))
(assert (x2673 x2429))
(assert (= (and x4780 x3132) x8326))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2051 100)))
(assert (= 64 (x967 (x3305 64 x9078 12))))
(assert (x2673 x8391))
(assert (x2673 x5104))
(assert (x9110 x1360))
(assert (= (and x1904 x6453) x4948))
(assert (=> (<= x7354 10000) (= 0 (x530 x7354))))
(assert (= x4382 (and x8707 (not x6524))))
(assert (x7454 x3723))
(assert (not (x669 (x3305 64 x1650 100))))
(assert (not (x669 (x3305 64 x8928 6))))
(assert (= (x530 18446744073709551615) 0))
(assert (x2673 x1871))
(assert (x2673 x5209))
(assert (x4744 x3887))
(assert (x2673 x4373))
(assert (x2673 x7191))
(assert (= (and (not x7396) x5886) x2641))
(assert (= (x3305 64 x1084 100) (x530 (x3305 64 x1084 100))))
(assert (= x1862 (and x7109 (not x6626))))
(assert (= x8615 (x4290 (x3305 64 x8615 100))))
(assert (< 10000 (x3305 64 x8580 100)))
(assert (x8339 x847))
(assert (x2673 x5760))
(assert (x8339 x3759))
(assert (x2673 x5035))
(assert (= (and (not x3611) x1159) x2171))
(assert (x2673 x7616))
(assert (x8339 x4552))
(assert (x2673 x8263))
(assert (= (x4290 (x3305 64 x6172 36)) x6172))
(assert (x2673 x4377))
(assert (< 10000 (x3305 64 x5913 100)))
(assert (x2673 x7356))
(assert (x4097 x3732 256))
(assert (= (x1802 (x3305 64 x2642 100)) 100))
(assert (=> (>= 10000 x2986) (= 0 (x530 x2986))))
(assert (x2673 x7962))
(assert (=> (<= x5219 10000) (= (x530 x5219) 0)))
(assert (x2673 x4856))
(assert (x8339 x320))
(assert (x2673 x512))
(assert (x8339 x6615))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8928 36)))
(assert (x2673 x2980))
(assert (x2673 x2375))
(assert (x4744 x4692))
(assert (x2673 x8314))
(assert (= (and x7656 (not x4684)) x5482))
(assert (x2673 x3336))
(assert (= x359 (=> (and (<= x498 606) (= x498 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x9123)) (<= 481 x498) (= x9123 (+ x8495 31)) (= x4153 x498)) x1534)))
(assert (x2673 x410))
(assert (=> (>= 10000 x3499) (= 0 (x530 x3499))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x606 100)))
(assert (= x981 (x4290 (x3305 64 x981 100))))
(assert (= 100 (x1802 (x3305 64 x3911 100))))
(assert (= (=> (and (= x7436 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3669)) (= x3666 (= x7891 0)) (= x7107 (x7405 (+ x6349 x1661))) (= (x7190 (- x7144 x2413)) x2970) (= (x484 x464) x7891) (= x3669 (x7405 (+ 31 x1661))) (= (x7405 (+ x7436 x6349)) x7144)) (and (=> (and (and (= x5133 (< 0 x7014)) (or (and (not x5133) (and (= x3347 x1450) (= x8333 x7356) (= x3685 x4515) (= x6488 x6226) (= x8817 x8906) (= x6491 x1738) (= x8775 x8091) (= x2765 x726) (= x4398 x5571))) (and x5133 (and (= x2710 (= x747 (x8986 x464))) (= x8617 x6491) (= x4396 (x5493 x4894)) (= (x5493 x464) x747) x2710 (= x4515 x4725) (= x1450 x6692) (= x6488 x1810) (= (<= x4396 (x8986 x4894)) x7072) (= x8953 x8817) (= x2639 x726) (>= 4294967295 x1501) (= x8775 x1610) (= x7356 x3390) x7072 (= x5571 x5145))))) (not x3666)) x643) (=> (and x3666 (and (= false x51) (= x5016 true))) x3445))) x8668))
(assert (< (x3305 64 x544 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5514))
(assert (x2673 x5897))
(assert (x2673 x8805))
(assert (x2673 x3862))
(assert (x2673 x368))
(assert (x9110 x6609))
(assert (x2673 x5545))
(assert (x5050 x2628))
(assert (< (x3305 64 x7432 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1481 x3439) x3512))
(assert (x2673 x3756))
(assert (= (x3305 64 x1725 100) (x530 (x3305 64 x1725 100))))
(assert (= (and x5853 (not x7667)) x2470))
(assert (= (x967 (x3305 64 x5508 36)) 64))
(assert (not (x669 (x3305 64 x7718 6))))
(assert (x2673 x3428))
(assert (x2673 x7457))
(assert (x2673 x2927))
(assert (x2673 x2858))
(assert (x2673 x2083))
(assert (< (x3305 64 x1953 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x5048 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x1064))
(assert (= (x967 (x3305 64 x9039 100)) 64))
(assert (x2673 x6984))
(assert (< 10000 (x3305 64 x3278 100)))
(assert (x4097 x6303 256))
(assert (= (x967 (x3305 64 x2415 100)) 64))
(assert (x4744 x8516))
(assert (= (x3305 64 x5931 6) (x530 (x3305 64 x5931 6))))
(assert (x2673 x7662))
(assert (< 10000 (x3305 64 x2774 100)))
(assert (x2673 x3377))
(assert (x2673 x3366))
(assert (x2673 x4060))
(assert (x2673 x3280))
(assert (x2673 x5265))
(assert (=> (<= x324 10000) (= (x530 x324) 0)))
(assert (x2673 x6491))
(assert (x2673 x1846))
(assert (x9110 x7021))
(assert (x2673 x7276))
(assert (= (and x2509 (not x425)) x1311))
(assert (= x9115 (and (not x3988) x3799)))
(assert (x2673 x835))
(assert (= (and x6516 (not x8592)) x6743))
(assert (x9110 x1175))
(assert (= x1105 (=> (and (= x6324 true) (= x4358 false)) x3445)))
(assert (x2673 x749))
(assert (x2673 x3652))
(assert (= (x1802 (x3305 64 x8860 36)) 36))
(assert (x2673 x4837))
(assert (x4744 x6833))
(assert (x2673 x7155))
(assert (not (x669 (x3305 64 x1110 100))))
(assert (= x3984 (=> (and (or (and x4563 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1612) (= (- x8373 x6178) x8673) (<= 0 x1612) (= x6823 x2071) (= (x2946 x4894) x2655) (= (+ x6178 x2655) x1612) (= (ite (= 0 x6823) x8227 0) x6178) (= x8828 x4176) (= x1357 x5402) (= x8373 (x4409 x464)) (= x1487 x7739) (= x3758 x8990) (= x6367 x2740) (= x4031 x2699) (= x6092 x4781) (= x9054 x7599) (= x1771 x8837) (= x2656 x7387) (< (+ x6178 x2655) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x5117 x1612))) (and (and (= x1357 x5402) (= x2071 x6823) (= x6367 x2740) (= x1487 x7739) (= x7387 x2656) (= x4031 x2699) (= x4176 x8828) (= x8837 x1771) (= x8990 x3758) (= x4781 x6092) (= x7599 x9054)) (not x4563))) (= (= 0 x6823) x4563)) x205)))
(assert (x2673 x7397))
(assert (x2673 x2279))
(assert (x4744 x1837))
(assert (not (x669 (x3305 64 x2090 12))))
(assert (= (=> (and (= (x7405 (+ 31 x6724)) x3813) (= x4800 (x7405 (+ x2089 32))) (= (> x1090 0) x3064) (= (x7405 (+ 32 x1356)) x2089) (= x6501 (x7405 (+ x604 x6992))) (= x1090 (x5967 x3575)) (= (x7405 (+ 32 x6501)) x1853) (= x77 (x7190 (- x6501 x2638))) (= (x7405 (+ x3575 32)) x8575) (= x604 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3813)) (= (x7405 (+ x6724 x6992)) x730)) (and (=> (and (and (= (x4575 x8575) x5837) (= x6524 (> x1090 32))) x3064) (and (=> (not x6524) x8040) (=> (and x6524 (and (= x380 (x7405 (+ x8575 32))) (= x3611 (< 64 x1090)) (= x2868 (x7405 (+ x1853 32))) (= (x2497 x380) x629))) (and (=> (not x3611) x8040) (=> (and x3611 (and (= (x4295 x6438) x7984) (= (x7405 (+ x1853 64)) x2019) (= (> x1090 96) x7709) (= x6438 (x7405 (+ x8575 64))))) (and (=> (not x7709) x8040) (=> x7709 x1280))))))) (=> (not x3064) x8040))) x1826))
(assert (x4744 x8709))
(assert (x2673 x3951))
(assert (x2673 x2575))
(assert (=> (>= 10000 x4958) (= 0 (x530 x4958))))
(assert (x2673 x7926))
(assert (x4097 x5652 256))
(assert (not (x669 (x3305 64 x5508 36))))
(assert (x2673 x4584))
(assert (x4097 x8433 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x6528 x391) x5526))
(assert (x2673 x8964))
(assert (x2673 x4796))
(assert (x4097 x4692 256))
(assert (x2673 x7802))
(assert (= (and (not x7146) x5471) x895))
(assert (x2673 x3282))
(assert (x2673 x668))
(assert (< (x3305 64 x1272 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x262))
(assert (= 0 (x530 4044338564)))
(assert (=> (<= x2051 10000) (= 0 (x530 x2051))))
(assert (= x1301 (and x4716 x2934)))
(assert (= (and x7468 (not x7671)) x1782))
(assert (=> (<= x5577 10000) (= (x530 x5577) 0)))
(assert (x2673 x2252))
(assert (x2673 x8197))
(assert (= (x1802 (x3305 64 x368 100)) 100))
(assert (x7454 x3360))
(assert (x2673 x807))
(assert (not (x669 (x3305 64 x4107 100))))
(assert (x2673 x6063))
(assert (x4744 x3515))
(assert (x2673 x3932))
(assert (x2673 x6479))
(assert (x2673 x1493))
(assert (= (x3305 64 x3278 100) (x530 (x3305 64 x3278 100))))
(assert (= 64 (x967 (x3305 64 x8671 100))))
(assert (= (and (not x5678) x3961) x3365))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x142 100)))
(assert (= (x1802 (x3305 64 x6131 100)) 100))
(assert (x2673 x4519))
(assert (x9110 x3098))
(assert (= 64 (x967 (x3305 64 x2253 100))))
(assert (x2673 x7235))
(assert (> (x3305 64 x4094 100) 10000))
(assert (= (or x1134 x2561) x6510))
(assert (x8339 x1195))
(assert (x2673 x4867))
(assert (x2673 x1827))
(assert (< (x3305 64 x4661 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x1953))
(assert (x2673 x808))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x9078 12)))
(assert (= (and (not x8950) x3129) x219))
(assert (x4744 x7173))
(assert (= (x530 (+ 1 x2569)) (x530 x2569)))
(assert (x2673 x5075))
(assert (= 64 (x967 (x3305 64 x9096 11))))
(assert (= (x3305 64 x1281 100) (x530 (x3305 64 x1281 100))))
(assert (x2673 x2518))
(assert (x2673 x2697))
(assert (x2673 x8977))
(assert (= (and x952 (not x4785)) x5421))
(assert (x4744 x2564))
(assert (x2673 x3891))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x7074) (= (x7405 (+ 31 x3229)) x2819) (<= x7074 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x5732 x7074) (< x7074 x1405) (<= x1405 115792089237316195423570985008687907853269984665640564039457584007913129639904) (<= 1 x1405) (<= x7074 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2819) x1405) (= x3555 x1405)) x8511) x1965))
(assert (x2673 x3688))
(assert (= (x967 (x3305 64 x6457 100)) 64))
(assert (x2673 x2958))
(assert (x2673 x7455))
(assert (x2673 x2417))
(assert (x7454 x2294))
(assert (x8912 32 (ite (= x1054 0) 1 0)))
(assert (< 10000 (x3305 64 x4661 100)))
(assert (= (or (and x3095 x397) (and x4832 x633) (and x7555 x7496) (and x4037 x3170) (and x4174 x5516) (and x188 x3521)) x7974))
(assert (= x3681 (and x1432 x8434)))
(assert (= x5330 (=> (and (= x7929 (x1488 x3427)) (= x2103 (not (> x1168 128))) (= x8486 (x7405 (+ 96 x6644))) (= x3427 (x7405 (+ x7687 96)))) (and x2103 x7218))))
(assert (x2673 x6377))
(assert (x4744 x6048))
(assert (= (x3305 64 x8352 2) (x530 (x3305 64 x8352 2))))
(assert (= (and x7906 x5477) x7828))
(assert (< (x3305 64 x6854 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x4365) (= 0 (x530 x4365))))
(assert (x2673 x7849))
(assert (< (x3305 64 x2356 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3723))
(assert (= (x967 (x3305 64 x6939 100)) 64))
(assert (x4744 x8965))
(assert (= x6576 (=> (= (= x4095 0) x2458) (and (=> (and (and (= (x7405 (+ 31 x293)) x2692) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2692) x2416) (<= 1 x2416) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x2416) (= (or (> x293 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x293) true) (> 32 x293))) x4524)) (not x2458)) (and (=> (and (and (= x5079 x3085) (= x7258 x6071) (= x482 x3765) (= x4858 x4497) (= x6121 x5300) (= (x7126 128) x1809) (= x4298 x2073) (= x5768 x7367) (= x3334 x3571) (= x4677 x6885) (= x2046 x1482)) (not x4524)) x8677) (=> (and x4524 (and (= true x6986) (= x4706 false))) x3445))) (=> (and x2458 (and (= x3663 true) (= false x7233))) x3445)))))
(assert (x2673 x4398))
(assert (x2673 x3230))
(assert (x2673 x6481))
(assert (x2673 x2145))
(assert (x2673 x1348))
(assert (x2673 x7823))
(assert (x4097 x3764 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3204 (and x2526 x3556)))
(assert (x4744 x3850))
(assert (x2673 x8099))
(assert (= (and x2940 x1452) x8900))
(assert (= x6959 (and x1157 x3623)))
(assert (x2673 x1341))
(assert (x8339 x815))
(assert (x2673 x802))
(assert (= (x4290 (x3305 64 x1110 100)) x1110))
(assert (x2673 x7149))
(assert (not (x669 (x3305 64 x8903 100))))
(assert (x2673 x8425))
(assert (x2673 x6209))
(assert (x2673 x830))
(assert (= x3382 (and x7496 (not x7555))))
(assert (= (x3305 64 x6319 100) (x530 (x3305 64 x6319 100))))
(assert (x4744 x5703))
(assert (x2673 x6247))
(assert (= x1406 (x4290 (x3305 64 x1406 100))))
(assert (= (x967 (x3305 64 x8903 100)) 64))
(assert (x2673 x2775))
(assert (= x8210 (and (not x7441) x6931)))
(assert (= (x967 (x3305 64 x271 100)) 64))
(assert (= x213 (=> (and (= x4167 x60) (= x108 x1792) (= x4711 x1861) (= x3936 x2850)) x2499)))
(assert (x2673 x5554))
(assert (x4744 x276))
(assert (x2673 x1225))
(assert (= (x530 (x3305 64 x4533 12)) (x3305 64 x4533 12)))
(assert (x2673 x1403))
(assert (x2673 x5690))
(assert (x2673 x587))
(assert (= (=> (and (= 36 x7801) (= false x7977) (= x1608 true)) x8273) x3247))
(assert (= x1280 (=> (and (= x909 (x7405 (+ x8575 96))) (= x159 (x7405 (+ x1853 96))) (= (not (> x1090 128)) x780) (= (x2202 x909) x4992)) (and x780 x8040))))
(assert (x2673 x3554))
(assert (x4097 x8211 256))
(assert (not (x669 (x3305 64 x8897 11))))
(assert (= 100 (x1802 (x3305 64 x7586 100))))
(assert (x2673 x3730))
(assert (not (x669 (x3305 64 x2415 100))))
(assert (x2673 x1252))
(assert (x2673 x5084))
(assert (= (and x3447 x5726) x8806))
(assert (x2673 x8641))
(assert (x4097 x5444 256))
(assert (x2673 x7983))
(assert (x4744 x5652))
(assert (= (and x7854 x3303) x6646))
(assert (x2673 x2426))
(assert (= x2402 (and x699 x4866)))
(assert (x2673 x4849))
(assert (x1240 x1783))
(assert (= (and x7492 (not x614)) x8761))
(assert (x2673 x8756))
(assert (x4097 x6599 256))
(assert (< 10000 (x3305 64 x2534 100)))
(assert (x2673 x7177))
(assert (x2673 x5483))
(assert (x2673 x2652))
(assert (= (x3305 64 x4044 100) (x530 (x3305 64 x4044 100))))
(assert (x2673 x4908))
(assert (x7454 x4529))
(assert (x2673 x8816))
(assert (x7454 x815))
(assert (x2673 x8245))
(assert (x2673 x1286))
(assert (x2673 x5589))
(assert (> (x3305 64 x8615 100) 10000))
(assert (= (and x7300 x6497) x5356))
(assert (= (x530 (x3305 64 x951 100)) (x3305 64 x951 100)))
(assert (x2673 x6722))
(assert (x2673 x7743))
(assert (= x3848 (and x1423 x5133)))
(assert (x2673 x569))
(assert (x1240 x4366))
(assert (= 64 (x967 (x3305 64 x6832 100))))
(assert (x669 53968831973089624780961702553170747426560148566936995398294956610382735605760))
(assert (= x3129 (and (not x5043) x2744)))
(assert (= x596 (and x954 (not x3656))))
(assert (x2673 x4356))
(assert (= (and x3602 (not x3762)) x6333))
(assert (x7454 x8935))
(assert (= 100 (x1802 (x3305 64 x7584 100))))
(assert (= (x530 (x3305 64 x8322 100)) (x3305 64 x8322 100)))
(assert (< (x3305 64 x2795 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4228 (and x3451 x3948)))
(assert (< 10000 (x3305 64 x3104 100)))
(assert (x2673 x1289))
(assert (x2673 x5401))
(assert (=> (>= 10000 x6854) (= 0 (x530 x6854))))
(assert (x2673 x4608))
(assert (x4744 x8560))
(assert (= x1935 (x4290 (x3305 64 x1935 36))))
(assert (x2673 x3338))
(assert (= (x1802 (x3305 64 x4013 100)) 100))
(assert (x2673 x7371))
(assert (x2673 x4078))
(assert (= 36 (x1802 (x3305 64 x4655 36))))
(assert (= x526 (=> (and (= x4815 (+ 32 x5540)) (= x5256 (not (< x4815 x1315))) (= x1008 (x3330 x2789))) (and x5256 (=> (= x4815 x5279) x8968)))))
(assert (x2673 x5511))
(assert (x2673 x4042))
(assert (x2673 x5780))
(assert (= x1500 (and (not x2897) x1676)))
(assert (x2673 x1486))
(assert (= (x1802 (x3305 64 x1587 100)) 100))
(assert (= x132 (x4290 (x3305 64 x132 100))))
(assert (= (x530 (x3305 64 x3459 100)) (x3305 64 x3459 100)))
(assert (= x6832 (x4290 (x3305 64 x6832 100))))
(assert (x2673 x600))
(assert (x2673 x3694))
(assert (x2673 x5640))
(assert (x2673 x5208))
(assert (x2673 x108))
(assert (x2673 x4268))
(assert (= (=> (= x3638 x1721) x5724) x7544))
(assert (not (x669 (x3305 64 x8026 6))))
(assert (x2673 x6906))
(assert (x2673 x4711))
(assert (= 100 (x1802 (x3305 64 x8499 100))))
(assert (= (x4290 (x3305 64 x4614 6)) x4614))
(assert (x4097 x4874 256))
(assert (= x3628 (and (not x9017) x4611)))
(assert (x2673 x8186))
(assert (x2673 x8576))
(assert (x2673 x7076))
(assert (x7454 x2173))
(assert (= (x530 (x3305 64 x474 100)) (x3305 64 x474 100)))
(assert (x2673 x5094))
(assert (= x3394 (and x238 (not x701))))
(assert (= (or x3527 x7082) x7553))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4266 100)))
(assert (x7454 x4477))
(assert (x2673 x7002))
(assert (= (or x2906 x1704) x7711))
(assert (x8339 x3813))
(assert (x8339 x5574))
(assert (= (and x473 (not x7531)) x6847))
(assert (=> (<= x3956 10000) (= (x530 x3956) 0)))
(assert (= 100 (x1802 (x3305 64 x6651 100))))
(assert (= x2051 (x4290 (x3305 64 x2051 100))))
(assert (x2673 x6597))
(assert (not (x669 (x3305 64 x9105 100))))
(assert (= 100 (x1802 (x3305 64 x136 100))))
(assert (x2673 x5149))
(assert (< (x3305 64 x1725 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x136 (x4290 (x3305 64 x136 100))))
(assert (= (x530 (x3305 64 x4662 100)) (x3305 64 x4662 100)))
(assert (= x5434 (and x3152 (not x9109))))
(assert (=> (>= 10000 x2133) (= (x530 x2133) 0)))
(assert (x2673 x4727))
(assert (x2673 x2157))
(assert (= (x3305 64 x1406 100) (x530 (x3305 64 x1406 100))))
(assert (x2673 x6283))
(assert (=> (<= x2145 10000) (= 0 (x530 x2145))))
(assert (> (x3305 64 x4985 100) 10000))
(assert (= x2150 (or x2949 x5743)))
(assert (x7454 x4032))
(assert (x2673 x1000))
(assert (= (or (and x173 x153) (and x4379 x2373) (and x5502 x2779) (and x6573 x6960) (and x5273 x4119) (and x233 x2206)) x4473))
(assert (x2673 x138))
(assert (x2673 x8148))
(assert (x2673 x7578))
(assert (= (x4290 (x3305 64 x5718 100)) x5718))
(assert (x2673 x6133))
(assert (x2673 x7638))
(assert (= (x530 4294967295) 0))
(assert (x2673 x2989))
(assert (= (x4290 (x3305 64 x68 36)) x68))
(assert (= x5460 (and x3423 x5643)))
(assert (not (x669 (x3305 64 x5340 100))))
(assert (x2673 x3504))
(assert (= (x3305 64 x3724 36) (x530 (x3305 64 x3724 36))))
(assert (= (or x7263 x8919) x2949))
(assert (< 10000 (x3305 64 x4044 100)))
(assert (=> (<= x3932 10000) (= 0 (x530 x3932))))
(assert (x2673 x433))
(assert (x2673 x9122))
(assert (x2673 x4355))
(assert (x7454 x1546))
(assert (x2673 x1287))
(assert (x2673 x2532))
(assert (x2673 x6945))
(assert (=> (>= 10000 x1281) (= 0 (x530 x1281))))
(assert (x669 52207524433148634526794681841911218724012555196680520750525547801574629179392))
(assert (= x2813 (or x6860 x6108 x1027 x2391 x3201)))
(assert (= x1322 (and x4197 x6630)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8613 36)))
(assert (x2673 x5840))
(assert (x2673 x4155))
(assert (x2673 x2413))
(assert (x2673 x6701))
(assert (= (x967 (x3305 64 x9105 100)) 64))
(assert (x2673 x9035))
(assert (= (and x6604 x5817) x3527))
(assert (x4097 x6818 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5152 100)))
(assert (= (x967 (x3305 64 x5511 100)) 64))
(assert (= (x4290 (x3305 64 x7791 12)) x7791))
(assert (x2673 x4663))
(assert (x4744 x6093))
(assert (x2673 x8333))
(assert (x2673 x1517))
(assert (= (and x6478 (not x5874)) x1928))
(assert (= (x4290 (x3305 64 x5340 100)) x5340))
(assert (x8912 32 (ite (= x3369 0) 1 0)))
(assert (= 100 (x1802 (x3305 64 x5870 100))))
(assert (x4744 x7996))
(assert (x2673 x7073))
(assert (x4097 x8956 256))
(assert (> (x3305 64 x142 100) 10000))
(assert (= (x967 (x3305 64 x132 100)) 64))
(assert (x2673 x4495))
(assert (= x2026 (and x8901 x839)))
(assert (= 100 (x1802 (x3305 64 x8903 100))))
(assert (x2673 x3786))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6667 100)))
(assert (= x755 (x4290 (x3305 64 x755 12))))
(assert (= x849 (or x6430 x3519)))
(assert (= (x530 (x3305 64 x2273 100)) (x3305 64 x2273 100)))
(assert (= 100 (x1802 (x3305 64 x5907 100))))
(assert (not (x669 (x3305 64 x3150 100))))
(assert (x2673 x7569))
(assert (= (x530 (x3305 64 x7735 100)) (x3305 64 x7735 100)))
(assert (= (x3305 64 x6651 100) (x530 (x3305 64 x6651 100))))
(assert (x7454 x5681))
(assert (x2673 x9096))
(assert (x1240 x1195))
(assert (< 10000 (x3305 64 x1935 36)))
(assert (= (and (not x160) x5339) x1204))
(assert (< (x3305 64 x4689 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3104))
(assert (x2673 x8536))
(assert (= 100 (x1802 (x3305 64 x235 100))))
(assert (x2673 x6904))
(assert (x2673 x4351))
(assert (x4744 x5710))
(assert (x2673 x8976))
(assert (x2673 x8537))
(assert (= x7096 (and x3388 (not x5642))))
(assert (= (x1802 (x3305 64 x8613 36)) 36))
(assert (x2673 x487))
(assert (x4097 x2804 300))
(assert (x4097 x4477 256))
(assert (not (x669 (x3305 64 x3278 100))))
(assert (x4097 x975 300))
(assert (= x7239 (x4290 (x3305 64 x7239 36))))
(assert (x669 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (x2673 x7701))
(assert (= 0 (x530 57896044618658097711785492504343953926634992332820282019728792003956)))
(assert (=> (>= 10000 x2354) (= (x530 x2354) 0)))
(assert (= x5012 (x4290 (x3305 64 x5012 100))))
(assert (= (and x372 (not x3751)) x4389))
(assert (= (or x3343 x3448) x8261))
(assert (x2673 x4722))
(assert (= x57 (=> (and (= x4554 (not (< 128 x7609))) (= (x1039 608) x7679) (= (x7405 (+ 96 x7177)) x7931)) (and x4610 x4554))))
(assert (x2673 x8973))
(assert (x2673 x8172))
(assert (= 100 (x1802 (x3305 64 x776 100))))
(assert (x4744 x2063))
(assert (x2673 x3016))
(assert (= (or x2576 x4184) x2345))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x9048 100)))
(assert (x2673 x3625))
(assert (= (x3305 64 x9023 100) (x530 (x3305 64 x9023 100))))
(assert (= x6977 (and (not x5287) x505)))
(assert (= (x3305 64 x4241 12) (x530 (x3305 64 x4241 12))))
(assert (x2673 x3171))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x2673 x5340))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3730 0)))
(assert (= (=> (and (= x2604 (x6751 480)) (= x1594 (x7405 (+ 4 x8233))) (= x4137 (x7405 (+ x1594 32))) (= x1732 (> x2604 0)) (= x5687 (x7405 (+ x1594 128))) (= (x7405 (+ x5687 32)) x2715)) (and (=> (and (and (= x6169 (x5583 512)) (= x3432 (> x2604 32))) x1732) (and (=> (not x3432) x6865) (=> (and x3432 (and (= x811 (x4536 544)) (= (> x2604 64) x7183) (= (x7405 (+ 32 x2715)) x1824))) (and (=> (and (and (= (x1998 576) x8694) (= x2591 (x7405 (+ x2715 64))) (= (> x2604 96) x6041)) x7183) (and (=> (not x6041) x6865) (=> x6041 x8167))) (=> (not x7183) x6865))))) (=> (not x1732) x6865))) x8564))
(assert (= (and x75 (not x4882)) x8251))
(assert (< 10000 (x3305 64 x3733 100)))
(assert (x4744 x818))
(assert (= x3343 (and (not x4632) x8133)))
(assert (x8339 x8024))
(assert (= (=> (and (= (x7405 (+ x9128 96)) x2110) (= (x3526 x6786) x8565) (= x7077 (not (> x7149 128))) (= (x7405 (+ 96 x2061)) x6786)) (and x2408 x7077)) x413))
(assert (x4097 x5278 32))
(assert (x2673 x7224))
(assert (= (=> (= (= 255 x7378) x7797) (and (=> (and x7797 (and (= true x5372) (= x7801 36) (= x4198 false))) x8273) (=> (and (not x7797) (and (= (x5917 255 x8083) x2143) (= false x284) (= x4548 1) (= x1537 false) (= (x5917 255 x8083) x905) (= (x3305 64 x7378 36) x3178) (= x1436 32) (= (x8042 x3178) x6391) (= x8083 (+ 1 x7378)))) x8870))) x4688))
(assert (x2673 x1736))
(assert (= (x530 (x3305 64 x6939 100)) (x3305 64 x6939 100)))
(assert (= (x3305 64 x5868 100) (x530 (x3305 64 x5868 100))))
(assert (x2673 x2708))
(assert (x7454 x3659))
(assert (not (x669 (x3305 64 x3104 100))))
(assert (x2673 x8368))
(assert (= (x530 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (< 10000 (x3305 64 x981 100)))
(assert (= (and x2667 x6289) x8169))
(assert (x8339 x6924))
(assert (=> (>= 10000 x7655) (= 0 (x530 x7655))))
(assert (= (and x4132 (not x3356)) x4621))
(assert (= 2 (x1802 (x3305 64 x8352 2))))
(assert (x2673 x8184))
(assert (=> (<= x2032 10000) (= (x530 x2032) 0)))
(assert (x2673 x6554))
(assert (x2673 x4001))
(assert (x4744 x2809))
(assert (x2673 x5381))
(assert (x2673 x8001))
(assert (= 64 (x967 (x3305 64 x939 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4171 2)))
(assert (= 36 (x1802 (x3305 64 x1935 36))))
(assert (x2673 x439))
(assert (x2673 x6789))
(assert (= 64 (x967 (x3305 64 x4617 100))))
(assert (> (x3305 64 x2379 11) 10000))
(assert (x2673 x7539))
(assert (> (x3305 64 x7735 100) 10000))
(assert (x2673 x969))
(assert (x2673 x4248))
(assert (x9110 x6845))
(assert (< (x3305 64 x6651 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5112))
(assert (not (x669 (x3305 64 x8537 100))))
(assert (= 36 (x1802 (x3305 64 x5219 36))))
(assert (x2673 x3788))
(assert (x2673 x1216))
(assert (= x7854 (or x4354 x7196 x7519 x8478 x2726)))
(assert (x2673 x7075))
(assert (x8339 x2804))
(assert (x2673 x9010))
(assert (=> (<= x4171 10000) (= 0 (x530 x4171))))
(assert (= 100 (x1802 (x3305 64 x6769 100))))
(assert (= 100 (x1802 (x3305 64 x2749 100))))
(assert (x2673 x3235))
(assert (x4097 x7257 256))
(assert (> (x3305 64 x4155 100) 10000))
(assert (x669 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (= (x3305 64 x8928 36) (x530 (x3305 64 x8928 36))))
(assert (not (x669 (x3305 64 x1000 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5012 100)))
(assert (not (x669 (x3305 64 x8860 36))))
(assert (= (=> (and (= (not (< x6395 x897)) x1131) (= x3259 (x6553 x1173)) (= (x7405 (+ 32 x1107)) x6395)) (and x1131 (=> (= x6395 x8598) x6181))) x2304))
(assert (= (x967 (x3305 64 x5537 100)) 64))
(assert (= 64 (x967 (x3305 64 x432 6))))
(assert (x4097 x4695 300))
(assert (= (x3305 64 x3421 36) (x530 (x3305 64 x3421 36))))
(assert (x2673 x3120))
(assert (= x5098 (=> (and (= x3818 (x7405 (+ 32 x1467))) (= (x7405 (+ 4 x4670)) x1467) (= x7350 (> x7829 0)) (= (x7405 (+ x1467 128)) x489) (= (x7405 (+ x489 32)) x2263) (= (x4160 480) x7829)) (and (=> (and x7350 (and (= x1914 (x5945 512)) (= (< 32 x7829) x7137))) (and (=> (and (and (= x3837 (x7863 544)) (= (x7405 (+ x2263 32)) x676) (= x3435 (< 64 x7829))) x7137) (and (=> (not x3435) x1470) (=> (and x3435 (and (= x5069 (> x7829 96)) (= (x6079 576) x1181) (= (x7405 (+ x2263 64)) x1811))) (and (=> (not x5069) x1470) (=> x5069 x1641))))) (=> (not x7137) x1470))) (=> (not x7350) x1470)))))
(assert (= x94 (and (not x5133) x1423)))
(assert (x4744 x2772))
(assert (< 10000 (x3305 64 x6672 100)))
(assert (= x6700 (x4290 (x3305 64 x6700 100))))
(assert (= (and (not x1631) x7110) x6360))
(assert (x2673 x4425))
(assert (x2673 x8048))
(assert (x7454 x6040))
(assert (x2673 x4652))
(assert (x2673 x6151))
(assert (= x4489 (and x7395 x3889)))
(assert (= (or x6905 x2042) x7769))
(assert (x2673 x6121))
(assert (x2673 x2120))
(assert (x2673 x1149))
(assert (x4744 x6666))
(assert (x4744 x2575))
(assert (= (or x5875 x1426 x7252) x1102))
(assert (x2673 x8598))
(assert (= x2414 (and x8554 x5785)))
(assert (< 10000 (x3305 64 x7586 100)))
(assert (= (x967 (x3305 64 x6598 100)) 64))
(assert (x8339 x1087))
(assert (x7454 x4874))
(assert (= 64 (x967 (x3305 64 x2471 100))))
(assert (< (x3305 64 x8399 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2906 (or x8078 x7828)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x436 100)))
(assert (= 100 (x1802 (x3305 64 x5680 100))))
(assert (x4097 x7932 256))
(assert (x4744 x2628))
(assert (x2673 x5926))
(assert (x2673 x5781))
(assert (= (x530 (x3305 64 x8075 36)) (x3305 64 x8075 36)))
(assert (x2673 x7937))
(assert (= x205 (=> (= (= x2071 0) x8929) (and (=> (and (and (= x4896 x2783) (= x6367 x5214) (= x154 x4176) (= x1771 x6993) (= x661 x2699) (= x7594 x8990) (= x5304 x7599) (= x3951 x1487) (= x5402 x3065) (= x3312 x2656)) (not x8929)) x6006) (=> (and (and (= x1184 true) (= false x7619)) x8929) x3445)))))
(assert (x4097 x2361 32))
(assert (= 0 (x530 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (= x3954 (x4290 (x3305 64 x3954 2))))
(assert (x4744 x6814))
(assert (x2673 x899))
(assert (x2673 x8552))
(assert (x8339 x4837))
(assert (x2673 x8814))
(assert (= (and x2872 x7808) x1160))
(assert (= (x530 (x3305 64 x7403 100)) (x3305 64 x7403 100)))
(assert (x2673 x7922))
(assert (= x3388 (and x4472 x3651)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6832 100)))
(assert (x2673 x1919))
(assert (= (or x1928 x4824 x5911 x2790 x93) x4098))
(assert (x1240 x6597))
(assert (not (x669 (x3305 64 x6854 100))))
(assert (x2673 x3006))
(assert (x2673 x5742))
(assert (=> (<= x2858 10000) (= 0 (x530 x2858))))
(assert (x669 4044338564))
(assert (= x6764 (and (not x5313) x5851)))
(assert (x2673 x6359))
(assert (x2673 x3695))
(assert (< (x3305 64 x8644 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x253))
(assert (x4744 x4279))
(assert (x2673 x7418))
(assert (= (x530 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (x2673 x6005))
(assert (x2673 x45))
(assert (x2673 x3787))
(assert (x7454 x4279))
(assert (= (x4290 (x3305 64 x5537 100)) x5537))
(assert (x9110 x4543))
(assert (x2673 x7668))
(assert (not (x669 (x3305 64 x8499 100))))
(assert (= x7846 (or x8680 x1931)))
(assert (x2673 x3507))
(assert (= (x1802 (x3305 64 x324 36)) 36))
(assert (= (or x8958 x8007) x6731))
(assert (x2673 x3259))
(assert (x2673 x3070))
(assert (= x2098 (x4290 (x3305 64 x2098 100))))
(assert (x2673 x3858))
(assert (x2673 x776))
(assert (= x2720 (or x6014 x8180)))
(assert (x2673 x35))
(assert (= (or x4227 x5909) x2516))
(assert (= x3528 (and x3689 (not x7606))))
(assert (=> (>= 10000 x7193) (= (x530 x7193) 0)))
(assert (x2673 x2089))
(assert (x2673 x2566))
(assert (= (or x1409 x1685) x4173))
(assert (= (x530 (x3305 64 x7718 36)) (x3305 64 x7718 36)))
(assert (= (x4290 (x3305 64 x4662 100)) x4662))
(assert (x2673 x7456))
(assert (= (x967 (x3305 64 x4285 100)) 64))
(assert (x2673 x9063))
(assert (x2673 x515))
(assert (= (and x7216 (not x1515)) x2008))
(assert (= (and (not x1851) x6361) x5490))
(assert (= (and (not x6268) x3047) x4805))
(assert (x2673 x982))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7281 100)))
(assert (= (or x6315 x3645) x859))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x744 100)))
(assert (x2673 x2856))
(assert (x4097 x6448 256))
(assert (x2673 x2896))
(assert (x2673 x4232))
(assert (= (and x7448 x3392) x5900))
(assert (not (x669 (x3305 64 x881 100))))
(assert (x2673 x7724))
(assert (x4744 x2665))
(assert (x2673 x4279))
(assert (x4744 x6924))
(assert (x2673 x301))
(assert (x2673 x6061))
(assert (= (and x6630 (not x4197)) x2993))
(assert (= x7808 (and (not x2148) x7783)))
(assert (x4744 x2085))
(assert (x2673 x8837))
(assert (< 10000 (x3305 64 x4958 100)))
(assert (=> (<= x3026 10000) (= (x530 x3026) 0)))
(assert (< 10000 (x3305 64 x6806 100)))
(assert (x4097 x1064 32))
(assert (not (x669 (x3305 64 x1621 100))))
(assert (= x9065 (and (not x4430) x225)))
(assert (= x6780 (=> (and (= x5260 (x7405 (+ x8077 32))) (= true x8963) (= (x7405 (+ 32 x8878)) x8077) (= x1585 (x7190 (- x5260 x4407))) (= (x7405 (+ 4 x4407)) x1142) (= x8878 (x7405 (+ x1142 32))) (= x4508 false)) x3445)))
(assert (x2673 x5432))
(assert (x2673 x7402))
(assert (x8339 x5644))
(assert (x2673 x4117))
(assert (> (x3305 64 x7239 36) 10000))
(assert (= (or x1573 x1228) x6779))
(assert (= x7216 (and (not x5847) x4843)))
(assert (x2673 x5758))
(assert (x2673 x2094))
(assert (x2673 x3692))
(assert (x2673 x7718))
(assert (x2673 x4992))
(assert (x2673 x2612))
(assert (= (and x5482 (not x3056)) x6538))
(assert (x4744 x3989))
(assert (x8339 x2378))
(assert (x2673 x8569))
(assert (x4744 x466))
(assert (x9110 x1567))
(assert (= (x1802 (x3305 64 x2154 100)) 100))
(assert (= (and x3202 x6681) x6980))
(assert (x4097 x7322 300))
(assert (= (and x5018 x1898) x6166))
(assert (= (x967 (x3305 64 x6237 100)) 64))
(assert (=> (>= 10000 x8359) (= (x530 x8359) 0)))
(assert (x2673 x7340))
(assert (x4097 x4484 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x18 (and (not x6772) x1018)))
(assert (= (x3305 64 x2098 100) (x530 (x3305 64 x2098 100))))
(assert (= (=> (= x3638 x1916) x7544) x1869))
(assert (= (x530 (x3305 64 x2018 100)) (x3305 64 x2018 100)))
(assert (= 64 (x967 (x3305 64 x7773 100))))
(assert (x2673 x4510))
(assert (= (or x6956 x4507) x5175))
(assert (= x2878 (or x8050 x4910)))
(assert (x4097 x7317 256))
(assert (= (x1802 (x3305 64 x2874 100)) 100))
(assert (= 64 (x967 (x3305 64 x8225 100))))
(assert (x2673 x175))
(assert (= x7022 (and x5900 x775)))
(assert (x4097 x4067 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3724 36)))
(assert (= (x530 (x3305 64 x5518 100)) (x3305 64 x5518 100)))
(assert (x2673 x6659))
(assert (= x1018 (and (not x1460) x2480)))
(assert (< (x3305 64 x9096 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x1945))
(assert (= (and x5631 (not x1921)) x2013))
(assert (x2673 x3912))
(assert (x2673 x941))
(assert (= x292 (and (not x6962) x3246)))
(assert (x2673 x3712))
(assert (x2673 x247))
(assert (x2673 x1947))
(assert (= (x967 (x3305 64 x5488 100)) 64))
(assert (= (=> (and (= x6100 (= x5956 0)) (or x6100 (not x6100))) x6813) x5697))
(assert (x2673 x6558))
(assert (x2673 x2114))
(assert (=> (<= x2749 10000) (= (x530 x2749) 0)))
(assert (x2673 x335))
(assert (x2673 x6319))
(assert (x2673 x8506))
(assert (x2673 x5390))
(assert (= (x530 (x3305 64 x8115 100)) (x3305 64 x8115 100)))
(assert (x8339 x6890))
(assert (= (x967 (x3305 64 x4545 36)) 64))
(assert (x4097 x8055 32))
(assert (x4744 x6448))
(assert (= x9124 (and x129 x1574)))
(assert (x4097 x2996 256))
(assert (not (x669 (x3305 64 x3789 100))))
(assert (= (and (not x3146) x357) x2777))
(assert (x2673 x6395))
(assert (= 64 (x967 (x3305 64 x6494 100))))
(assert (= (and x3615 (not x8542)) x5264))
(assert (x2673 x5280))
(assert (x8339 x141))
(assert (x2673 x7742))
(assert (> (x3305 64 x951 100) 10000))
(assert (=> (>= 10000 x813) (= 0 (x530 x813))))
(assert (x2673 x9062))
(assert (x2673 x2437))
(assert (x2673 x5125))
(assert (x4744 x141))
(assert (x669 1000000000))
(assert (= x4420 (and x3356 x4132)))
(assert (x2673 x7042))
(assert (x2673 x958))
(assert (x2673 x83))
(assert (x2673 x6088))
(assert (x2673 x2604))
(assert (x8912 32 (ite (= 0 x1033) 1 0)))
(assert (= (x530 (x3305 64 x6531 100)) (x3305 64 x6531 100)))
(assert (x2673 x8969))
(assert (x2673 x414))
(assert (x2673 x6709))
(assert (x7454 x5644))
(assert (x2673 x1663))
(assert (not (x669 (x3305 64 x8777 100))))
(assert (= 100 (x1802 (x3305 64 x3109 100))))
(assert (x2673 x4146))
(assert (x2673 x7795))
(assert (= (x967 (x3305 64 x8928 2)) 64))
(assert (x4097 x3993 32))
(assert (x2673 x2439))
(assert (= x3623 (and x5902 x3345)))
(assert (x2673 x6884))
(assert (x2673 x4783))
(assert (= 100 (x1802 (x3305 64 x9105 100))))
(assert (x2673 x8123))
(assert (= (x1802 (x3305 64 x8073 100)) 100))
(assert (= x4242 (and (not x2140) x2100)))
(assert (x4097 x3669 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3329))
(assert (x2673 x882))
(assert (< (x3305 64 x1113 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x376))
(assert (x2673 x148))
(assert (> (x3305 64 x2032 100) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2750 100)))
(assert (x2673 x5571))
(assert (x4097 x1287 256))
(assert (= x7989 (and x2345 x4179)))
(assert (= 6 (x1802 (x3305 64 x7718 6))))
(assert (x2673 x2216))
(assert (= (x967 (x3305 64 x1166 36)) 64))
(assert (x4097 x9123 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x967 (x3305 64 x6642 100))))
(assert (x4097 x5554 256))
(assert (=> (<= x2098 10000) (= (x530 x2098) 0)))
(assert (=> (>= 10000 x1621) (= 0 (x530 x1621))))
(assert (x8339 256))
(assert (x2673 x3030))
(assert (x2673 x3224))
(assert (x8339 x5762))
(assert (= x220 (=> (and (= (x6417 x8453) x8626) (= (x7405 (+ 96 x5525)) x8453) (= (not (< 128 x3135)) x3541) (= x1461 (x7405 (+ x7727 96)))) (and x3240 x3541))))
(assert (= x3013 (and x8139 (not x7116))))
(assert (= (x967 (x3305 64 x9023 100)) 64))
(assert (=> (>= 10000 x6642) (= 0 (x530 x6642))))
(assert (x2673 x5669))
(assert (= x1498 (=> (and (= true x6864) (= 36 x7801) (= false x3790)) x8273)))
(assert (= (and x3475 x8305) x1220))
(assert (= (and (not x8582) x1505) x7180))
(assert (=> (<= x8115 10000) (= 0 (x530 x8115))))
(assert (x8339 x2665))
(assert (x2673 x2887))
(assert (x2673 x2591))
(assert (=> (>= 10000 x4013) (= (x530 x4013) 0)))
(assert (x9110 x5327))
(assert (x2673 x5950))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6642 100)))
(assert (=> (<= x7673 10000) (= (x530 x7673) 0)))
(assert (x8339 x3761))
(assert (not (x669 (x3305 64 x3748 100))))
(assert (= (and x8141 x1096) x5971))
(assert (not (x669 (x3305 64 x7184 36))))
(assert (= 64 (x967 (x3305 64 x2032 100))))
(assert (= (and (not x4966) x7750) x6011))
(assert (= x4365 (x4290 (x3305 64 x4365 36))))
(assert (x4744 x2438))
(assert (x2673 x2822))
(assert (= x8359 (x4290 (x3305 64 x8359 100))))
(assert (x2673 x2632))
(assert (= (and (not x5553) x8655) x4888))
(assert (= (x3305 64 x5537 100) (x530 (x3305 64 x5537 100))))
(assert (x2673 x6999))
(assert (x2673 x7774))
(assert (x2673 x5433))
(assert (= (and x4489 (not x5100)) x5726))
(assert (x2673 x1554))
(assert (not (x669 (x3305 64 x8359 100))))
(assert (=> (<= x2154 10000) (= 0 (x530 x2154))))
(assert (x2673 x4149))
(assert (=> (<= x3892 10000) (= (x530 x3892) 0)))
(assert (x2673 x7996))
(assert (not (x669 (x3305 64 x3911 100))))
(assert (not (x669 (x3305 64 x7358 100))))
(assert (x4744 x6303))
(assert (x8339 x4692))
(assert (x2673 x2942))
(assert (x2673 x187))
(assert (> (x3305 64 x4689 36) 10000))
(assert (= (or x2677 x8111) x3453))
(assert (< 10000 (x3305 64 x3679 36)))
(assert (x2673 x8362))
(assert (= x1048 (or x849 x5737)))
(assert (< 10000 (x3305 64 x7718 6)))
(assert (x2673 x2422))
(assert (x2673 x6150))
(assert (x2673 x5574))
(assert (< (x3305 64 x4545 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 100 (x1802 (x3305 64 x8713 100))))
(assert (x2673 x4137))
(assert (x2673 x5276))
(assert (= (x4290 (x3305 64 x2415 100)) x2415))
(assert (= (and x8305 (not x3475)) x4479))
(assert (= x6319 (x4290 (x3305 64 x6319 100))))
(assert (= (x1802 (x3305 64 x2253 100)) 100))
(assert (x2673 x2987))
(assert (x2673 x4336))
(assert (x2673 x6520))
(assert (= x829 (and x1159 x3611)))
(assert (x2673 x4311))
(assert (x2673 x1358))
(assert (= 100 (x1802 (x3305 64 x719 100))))
(assert (x4097 x3764 32))
(assert (x2673 x2930))
(assert (x2673 x8975))
(assert (x2673 x141))
(assert (x1240 x1837))
(assert (= (and x696 (not x540)) x241))
(assert (x4744 x7257))
(assert (x2673 x3693))
(assert (x2673 x3956))
(assert (= x2210 (and (not x8755) x82)))
(assert (< (x3305 64 x3499 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x3305 64 x1306 2)))
(assert (x2673 x3822))
(assert (=> (<= x132 10000) (= 0 (x530 x132))))
(assert (= x926 (or x7723 x4801)))
(assert (= (x1802 (x3305 64 x1306 2)) 2))
(assert (= (x1802 (x3305 64 x7463 36)) 36))
(assert (x2673 x5937))
(assert (< 10000 (x3305 64 x2133 100)))
(assert (x2673 x7973))
(assert (= x2033 (=> (and (= (+ 32 x5780) x2920) (= x2209 (not (< x2920 x2495))) (= (x6412 x5268) x1492)) (and (=> (= x6106 x2920) x8587) x2209))))
(assert (x2673 x1274))
(assert (> (x3305 64 x3748 100) 10000))
(assert (x2673 x5363))
(assert (not (x669 (x3305 64 x136 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8026 6)))
(assert (x2673 x4874))
(assert (x7454 x1364))
(assert (x2673 x8642))
(assert (x4097 x2375 256))
(assert (not (x669 (x3305 64 x606 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6131 100)))
(assert (= x5091 (and (not x8441) x5615)))
(assert (x2673 x5459))
(assert (x2673 x9085))
(assert (x2673 x4844))
(assert (not (x669 (x3305 64 x5518 100))))
(assert (=> (>= 10000 x2608) (= 0 (x530 x2608))))
(assert (x2673 x5728))
(assert (x2673 x2928))
(assert (x2673 x8014))
(assert (= 0 (x530 53968831973089624780961702553170747426560148566936995398294956610382735605760)))
(assert (= (and x7672 x5738) x357))
(assert (x2673 x158))
(assert (= (and x1320 x3321) x8924))
(assert (x4744 x8140))
(assert (not (x669 (x3305 64 x8352 6))))
(assert (=> (<= x432 10000) (= 0 (x530 x432))))
(assert (= x4217 (x4290 (x3305 64 x4217 100))))
(assert (x7454 x6283))
(assert (x2673 x1586))
(assert (= (or (and x4684 x7656) (and x1476 x4211) (and x8627 x3382) (and x3246 x6962) (and x7492 x614) (and x155 x9025)) x7353))
(assert (x2673 x9020))
(assert (x2673 x6883))
(assert (x2673 x5138))
(assert (x8339 x6619))
(assert (= (=> (= x7531 (= x577 0)) (and (=> (and x7531 (and (= x4521 true) (= false x3332) (= x5116 x7801))) x8273) (=> (and (not x7531) (and (<= x2814 115792089237316195423570985008687907853269984665640564039457584007913129639807) (= x2814 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1195)) (= x7804 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5116)) (< x5116 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5116))) (= x1195 (x7405 (+ 31 x5116))) (<= 1 x2814))) (and (=> (and (not x7804) (and (= x3991 (x5667 128)) (= x6938 x1721))) x5724) (=> (and x7804 (and (= true x4696) (= 0 x7801) (= false x4338))) x8273))))) x455))
(assert (= (x530 (x3305 64 x4689 36)) (x3305 64 x4689 36)))
(assert (=> (>= 10000 x2976) (= (x530 x2976) 0)))
(assert (x2673 x2012))
(assert (x2673 x7422))
(assert (x2673 x2605))
(assert (x2673 x4735))
(assert (= (and x4028 x596) x4303))
(assert (x2673 x377))
(assert (x4097 x5379 32))
(assert (x2673 x537))
(assert (x2673 x346))
(assert (x7454 x3437))
(assert (x2673 x8967))
(assert (= x3276 (and x9126 (not x867))))
(assert (x7454 x6471))
(assert (x4744 x3813))
(assert (= x531 (and x7421 x518)))
(assert (x2673 x3101))
(assert (< (x3305 64 x2018 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x186) x6983) x372))
(assert (x2673 x5602))
(assert (x2673 x5584))
(assert (x2673 x7373))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4155 100)))
(assert (x2673 x814))
(assert (x2673 x6099))
(assert (x2673 x6568))
(assert (x2673 x6656))
(assert (x2673 x52))
(assert (x2673 x8191))
(assert (= (x1802 (x3305 64 x8026 6)) 6))
(assert (= (x967 (x3305 64 x1528 36)) 64))
(assert (x2673 x6740))
(assert (x2673 x3307))
(assert (= (and x5446 (not x5231)) x5439))
(assert (x4097 x2085 256))
(assert (x2673 x795))
(assert (= (x4290 (x3305 64 x2212 100)) x2212))
(assert (x2673 x7748))
(assert (= x6416 (and x5793 x3533)))
(assert (x8339 x2819))
(assert (x2673 x5546))
(assert (x2673 x6598))
(assert (x2673 x2143))
(assert (x2673 x5064))
(assert (x8339 x5714))
(assert (< (x3305 64 x8352 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3518))
(assert (= (and (not x921) x895) x4257))
(assert (< 10000 (x3305 64 x8085 100)))
(assert (x4744 x1255))
(assert (= x1629 (and (not x5609) x197)))
(assert (x4744 x6283))
(assert (not (x669 (x3305 64 x3580 100))))
(assert (x4097 x1783 32))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x462 100)))
(assert (= (x1802 (x3305 64 x2415 100)) 100))
(assert (= x7541 (or x2324 x6948)))
(assert (x2673 x1610))
(assert (= (x530 (x3305 64 x3617 100)) (x3305 64 x3617 100)))
(assert (x2673 x1651))
(assert (= x82 (and (not x4830) x6113)))
(assert (= (and x5382 (not x6694)) x6467))
(assert (x2673 x2783))
(assert (x2673 x3859))
(assert (not (x669 (x3305 64 x4299 100))))
(assert (x2673 x6660))
(assert (x2673 x7953))
(assert (x2673 x3438))
(assert (x2673 x4626))
(assert (=> (<= x2847 10000) (= (x530 x2847) 0)))
(assert (x2673 x6724))
(assert (x2673 x8308))
(assert (x2673 x3562))
(assert (x7454 x1508))
(assert (x2673 x7952))
(assert (x2673 x6252))
(assert (x9110 x7963))
(assert (x2673 x5867))
(assert (= x3589 (and (not x4558) x2812)))
(assert (not (x669 (x3305 64 x4216 100))))
(assert (= x6676 (=> (and (>= 606 x2887) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7136) x2887) (<= 481 x2887) (= (+ 31 x4792) x7136) (= x2887 x8705)) x548)))
(assert (=> (<= x9023 10000) (= (x530 x9023) 0)))
(assert (x2673 x750))
(assert (= x3753 (and x596 (not x4028))))
(assert (= (or x3467 x7087) x3290))
(assert (< 10000 (x3305 64 x3652 100)))
(assert (x1240 x4056))
(assert (x2673 x8874))
(assert (= x7358 (x4290 (x3305 64 x7358 100))))
(assert (x2673 x3026))
(assert (= x208 (and (not x4931) x2008)))
(assert (x2673 x6092))
(assert (= (x4290 (x3305 64 x4898 100)) x4898))
(assert (x2673 x4927))
(assert (= (x4290 (x3305 64 x3733 100)) x3733))
(assert (x2673 x7680))
(assert (x2673 x4266))
(assert (x4744 x6298))
(assert (not (x669 (x3305 64 x6939 100))))
(assert (x2673 x2175))
(assert (x2673 x8892))
(assert (x4097 x141 256))
(assert (x4097 x3669 32))
(assert (x2673 x8233))
(assert (x2673 x1763))
(assert (x2673 x6463))
(assert (=> (>= 10000 x2313) (= 0 (x530 x2313))))
(assert (x8339 x5166))
(assert (x2673 x336))
(assert (x2673 x142))
(assert (= x1903 (and (not x3447) x5726)))
(assert (x2673 x5139))
(assert (not (x669 (x3305 64 x6319 100))))
(assert (x2673 x1195))
(assert (x2673 x3249))
(assert (= (=> (and (= x866 (x7405 (+ x2911 31))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x6174) (<= x6684 115792089237316195423570985008687907853269984665640564039457584007913129639904) (= x6684 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x866)) (= x9008 x6174) (= x4678 x6684) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x6174) (>= x6684 1) (> x6684 x6174) (<= x6174 115792089237316195423570985008687907853269984665640564039457584007913129639903)) x1400) x968))
(assert (> (x3305 64 x9096 11) 10000))
(assert (x2673 x8470))
(assert (x2673 x6146))
(assert (x2673 x1273))
(assert (= (x967 (x3305 64 x6212 100)) 64))
(assert (= (x1802 (x3305 64 x8142 10)) 10))
(assert (> (x3305 64 x7443 100) 10000))
(assert (x2673 x2239))
(assert (= (x4290 (x3305 64 x918 100)) x918))
(assert (x2673 x5407))
(assert (= (and x6955 x2760) x3315))
(assert (= (x4290 (x3305 64 x235 100)) x235))
(assert (= (x3305 64 x7140 100) (x530 (x3305 64 x7140 100))))
(assert (x2673 x2724))
(assert (x2673 x6501))
(assert (x2673 x6154))
(assert (= (x1802 (x3305 64 x5335 100)) 100))
(assert (x8339 x6429))
(assert (x2673 x1499))
(assert (x2673 x7174))
(assert (x2673 x8283))
(assert (x8339 x7932))
(assert (x2673 x3203))
(assert (not (x669 (x3305 64 x3210 100))))
(assert (< 10000 (x3305 64 x4285 100)))
(assert (x2673 x5866))
(assert (x2673 x528))
(assert (= x473 (or x8804 x2162 x7365)))
(assert (x2673 x3334))
(assert (x2673 x2753))
(assert (= (and x3468 (not x3875)) x2741))
(assert (x2673 x7650))
(assert (= x2130 (and (not x5842) x6489)))
(assert (=> (<= x2750 10000) (= (x530 x2750) 0)))
(assert (not (x669 (x3305 64 x8849 36))))
(assert (= (x967 (x3305 64 x3956 100)) 64))
(assert (= (x967 (x3305 64 x4146 36)) 64))
(assert (x2673 x855))
(assert (not (x669 (x3305 64 x2795 100))))
(assert (= x2679 (and (not x7183) x8106)))
(assert (= x593 (and x8104 x5504)))
(assert (x2673 x3574))
(assert (= (=> (= (= x619 0) x444) (and (=> x444 x4775) (=> (and (and (= (< x7570 x9097) x7671) (= (x3901 128) x9097)) (not x444)) (and (=> (and (not x7671) (and (= x7570 x4005) (= x8091 x1613) (= x59 x1935) (= x2041 x464) (= x3347 x2428) (= x6942 x8906) (= 160 x14) (= x8762 x4398) (= x533 x1738) (= x2214 x4461) (= x3316 x6226) (= x8333 x7777) (= x8061 x2765) (= x3685 x4091))) x2469) (=> x7671 x1012))))) x8750))
(assert (=> (>= 10000 x5711) (= (x530 x5711) 0)))
(assert (= (x4290 (x3305 64 x4146 36)) x4146))
(assert (= (x3305 64 x432 6) (x530 (x3305 64 x432 6))))
(assert (x2673 x4254))
(assert (= (and x3163 (not x2690)) x7013))
(assert (x2673 x2191))
(assert (x2673 x1226))
(assert (=> (>= 10000 x4241) (= 0 (x530 x4241))))
(assert (x9110 x4781))
(assert (= x4470 (and x3747 (not x3737))))
(assert (x2673 x7136))
(assert (not (x669 (x3305 64 x6099 100))))
(assert (< 10000 (x3305 64 x8115 100)))
(assert (= (x4290 (x3305 64 x8499 100)) x8499))
(assert (= x3776 (and x3341 (not x5495))))
(assert (x4097 x37 300))
(assert (x2673 x3962))
(assert (x2673 x105))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3026 100)))
(assert (x2673 x5140))
(assert (x2673 x6002))
(assert (= 64 (x967 (x3305 64 x136 100))))
(assert (= x5109 (and x5101 x6695)))
(assert (= x436 (x4290 (x3305 64 x436 100))))
(assert (x2673 x10))
(assert (x2673 x3028))
(assert (x2673 x657))
(assert (x4744 x922))
(assert (= (x1802 (x3305 64 x7806 100)) 100))
(assert (x2673 x7728))
(assert (x2673 x1003))
(assert (= (x3305 64 x1587 100) (x530 (x3305 64 x1587 100))))
(assert (x2673 x8065))
(assert (x2673 x698))
(assert (= x5471 (and x6960 (not x6573))))
(assert (< (x3305 64 x4958 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8883))
(assert (x2673 x221))
(assert (x2673 x33))
(assert (x2673 x1525))
(assert (x2673 x4029))
(assert (=> (<= x5294 10000) (= (x530 x5294) 0)))
(assert (x8339 x4953))
(assert (x4744 x3344))
(assert (x2673 x3575))
(assert (x2673 x1146))
(assert (x8339 x7539))
(assert (> (x3305 64 x3066 100) 10000))
(assert (x2673 x7829))
(assert (x2673 x266))
(assert (= 100 (x1802 (x3305 64 x544 100))))
(assert (< (x3305 64 x9023 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3277))
(assert (=> (>= 10000 x4146) (= (x530 x4146) 0)))
(assert (x2673 x3722))
(assert (not (x669 (x3305 64 x8143 100))))
(assert (= (x1802 (x3305 64 x5537 100)) 100))
(assert (x2673 x7368))
(assert (x7454 x5714))
(assert (not (x669 (x3305 64 x346 100))))
(assert (x2673 x6329))
(assert (= (and x7999 x6720) x8353))
(assert (= (and x2404 x4204) x984))
(assert (x2673 x5044))
(assert (x8339 x6303))
(assert (x7454 x3515))
(assert (x7454 x1819))
(assert (x2673 x7344))
(assert (= x6131 (x4290 (x3305 64 x6131 100))))
(assert (x4744 x7305))
(assert (x2673 x8538))
(assert (x2673 x886))
(assert (x2673 x7543))
(assert (= (x530 (x3305 64 x2313 100)) (x3305 64 x2313 100)))
(assert (x2673 x248))
(assert (x5050 x2378))
(assert (x4744 x7861))
(assert (x2673 x3911))
(assert (x2673 x1700))
(assert (> (x3305 64 x3459 100) 10000))
(assert (= (and (not x2458) x6191) x8662))
(assert (x2673 x1492))
(assert (=> (>= 10000 x439) (= (x530 x439) 0)))
(assert (= (x3305 64 x8026 6) (x530 (x3305 64 x8026 6))))
(assert (x4097 x2006 256))
(assert (= (x530 (x3305 64 x7443 100)) (x3305 64 x7443 100)))
(assert (x2673 x5117))
(assert (x2673 x7092))
(assert (= (and (not x4286) x8161) x3720))
(assert (> (x3305 64 x7281 100) 10000))
(assert (x2673 x3638))
(assert (x2673 x8057))
(assert (> (x3305 64 x4868 100) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7584 100)))
(assert (= (and (not x7607) x3453) x5875))
(assert (x2673 x838))
(assert (= (or x5739 x3484) x5586))
(assert (x4744 x7274))
(assert (x2673 x2294))
(assert (= (x4290 (x3305 64 x2737 100)) x2737))
(assert (x2673 x99))
(assert (x2673 x7929))
(assert (< (x3305 64 x8897 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2847))
(assert (not (x669 (x3305 64 x436 100))))
(assert (= 64 (x967 (x3305 64 x3266 100))))
(assert (x2673 x2253))
(assert (x2673 x8539))
(assert (x2673 x344))
(assert (x2673 x3745))
(assert (x4097 x4529 256))
(assert (x2673 x5011))
(assert (= (=> (and (= (+ x176 1) x7404) x4707 x2537 (= x7031 (x7405 (+ x2990 x8188))) (<= 1 x3905) (= x4308 (x4778 x8869)) (>= 4294967295 x3416) (= (>= (x3188 x4894) x3986) x4707) (<= 1 x3822) (= x3986 (x4778 x4894)) (= x2537 (= (x3188 x8869) x4308)) (= x8188 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1837)) (= x3822 (x484 x8869)) (= (x7405 (+ 31 x750)) x1837) (= (x7190 (- x7031 x7959)) x6963) (= x3016 (x7405 (+ x750 x2990)))) x8679) x8663))
(assert (= (and x8988 (not x649)) x2162))
(assert (=> (<= x8576 10000) (= (x530 x8576) 0)))
(assert (= (and x4633 (not x7737)) x3297))
(assert (= (x530 (x3305 64 x6807 100)) (x3305 64 x6807 100)))
(assert (x2673 x5975))
(assert (= (x1802 (x3305 64 x8060 6)) 6))
(assert (x2673 x7055))
(assert (< 10000 (x3305 64 x7193 100)))
(assert (x2673 x7969))
(assert (x2673 x8349))
(assert (x2673 x8812))
(assert (= (x967 (x3305 64 x9048 100)) 64))
(assert (> (x3305 64 x3742 36) 10000))
(assert (x8339 x7274))
(assert (= (x1802 (x3305 64 x3088 2)) 2))
(assert (x2673 x8166))
(assert (= (x1802 (x3305 64 x7373 100)) 100))
(assert (x4744 x6294))
(assert (x8502 (ite (= 0 x7843) 1 0)))
(assert (= (and x4574 (not x7401)) x7557))
(assert (= 64 (x967 (x3305 64 x436 100))))
(assert (x2673 x8966))
(assert (x2673 x2186))
(assert (= x7082 (and (not x5817) x6604)))
(assert (= 100 (x1802 (x3305 64 x7735 100))))
(assert (= (x530 (x3305 64 x6642 100)) (x3305 64 x6642 100)))
(assert (x1240 x174))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8073 100)))
(assert (= (x3305 64 x9039 100) (x530 (x3305 64 x9039 100))))
(assert (x2673 x3019))
(assert (=> (>= 10000 x8903) (= 0 (x530 x8903))))
(assert (= (and x8332 x833) x4221))
(assert (x2673 x322))
(assert (x2673 x1421))
(assert (= (x1802 (x3305 64 x4867 100)) 100))
(assert (> (x3305 64 x8359 100) 10000))
(assert (x2673 x3808))
(assert (x4097 x8377 256))
(assert (= x8073 (x4290 (x3305 64 x8073 100))))
(assert (= x6236 (and x7841 (not x446))))
(assert (x2673 x2367))
(assert (x8339 x8377))
(assert (= (x4290 (x3305 64 x1354 100)) x1354))
(assert (x2673 x313))
(assert (x2673 x7404))
(assert (x4744 x3732))
(assert (= 64 (x967 (x3305 64 x3499 100))))
(assert (x2673 x1205))
(assert (= x6702 (=> (and (and (= 68 x3110) (= x8646 x9127)) (and (and (and (= x2092 x1244) (and (or (and (= (ite x5861 1 0) x4025) (not x5861)) (and (and (>= 1461501637330902918203684832716283019655932542975 x571) (= x4025 (ite (not (= x4423 x571)) 1 0))) x5861)) (and (= x6754 false) (= (- x294 x2092) x1380) (= x294 (x3412 x5248)) (= x8646 x7926) (>= x1446 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7249 x2092)) (= x1415 false) (= x3408 x1446) (= x7570 x8263) (= 2001815235 x2716) (>= 127 x4672) (>= 127 x4672) (= x1446 (+ x2092 x7249)) (= x3647 (x484 x1306)) (= x7009 2) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1446) (= x5248 x686) (>= x3647 1) (= (x501 x1306) x7249) (= (not (= x4423 x1306)) x5861)))) (= x4423 x686)) (and (= false x7597) (= x7570 x366)))) x8748)))
(assert (= (and x3675 x6350) x965))
(assert (x2673 x5707))
(assert (= x762 (or (and x8328 x1494) (and x4075 x2611) (and x3641 x9026) (and x2675 x5001) (and x4581 x7617) (and x3505 x6966) (and x3018 x9098) (and x4392 x8254) (and x5596 x4221))))
(assert (not (x669 (x3305 64 x4913 100))))
(assert (= x8849 (x4290 (x3305 64 x8849 36))))
(assert (= (x530 (x3305 64 x8506 36)) (x3305 64 x8506 36)))
(assert (x2673 x1825))
(assert (x4097 x5426 256))
(assert (x2673 x3567))
(assert (x2673 x7673))
(assert (x2673 x5146))
(assert (x2673 x6653))
(assert (not (x669 (x3305 64 x8142 10))))
(assert (= 100 (x1802 (x3305 64 x8666 100))))
(assert (x2673 x7349))
(assert (= (and x7197 x3728) x2131))
(assert (x2673 x951))
(assert (x2673 x5116))
(assert (x2673 x7895))
(assert (x2673 x1451))
(assert (x2673 x7614))
(assert (=> (<= x8928 10000) (= 0 (x530 x8928))))
(assert (x2673 x7985))
(assert (= x3978 (and x7814 x8794)))
(assert (not (x669 (x3305 64 x4655 36))))
(assert (x2673 x8737))
(assert (x2673 x7009))
(assert (x8339 x6597))
(assert (x2673 x2769))
(assert (x2673 x2716))
(assert (x2673 x8559))
(assert (x4744 x1924))
(assert (not (x669 (x3305 64 x3892 12))))
(assert (= x8223 (and x4683 x7289)))
(assert (= x5 (and (not x1264) x2002)))
(assert (= (x4290 (x3305 64 x142 100)) x142))
(assert (x2673 x1120))
(assert (x2673 x4887))
(assert (x2673 x959))
(assert (= 64 (x967 (x3305 64 x4094 100))))
(assert (x2673 x53))
(assert (x2673 x9128))
(assert (not (x669 (x3305 64 x5577 100))))
(assert (x2673 x330))
(assert (x9110 x2978))
(assert (x2673 x1912))
(assert (x4097 x7136 32))
(assert (x2673 x8242))
(assert (< 10000 (x3305 64 x755 12)))
(assert (x2673 x9046))
(assert (> (x3305 64 x8197 100) 10000))
(assert (x2673 x5543))
(assert (x8339 x7996))
(assert (x2673 x8864))
(assert (> (x3305 64 x1256 100) 10000))
(assert (x4097 x4279 256))
(assert (= (or x144 x7186) x4120))
(assert (x2673 x3804))
(assert (x2673 x178))
(assert (x2673 x3752))
(assert (x2673 x5750))
(assert (= (and x5871 x5977) x4260))
(assert (x2673 x8299))
(assert (< (x3305 64 x7735 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7428))
(assert (= (and x7672 (not x5738)) x5773))
(assert (not (x669 (x3305 64 x2133 100))))
(assert (x4097 x2955 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x5348 x62) x4132))
(assert (x2673 x3111))
(assert (> (x3305 64 x5575 100) 10000))
(assert (= (=> (and (= (x3183 x6226) x3784) (>= x8432 1) (= (x7405 (+ 4 x14)) x998) (= x7682 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4005 x3784))) (= (x7190 (- x8531 x14)) x8505) (= (x484 x6226) x8432) (= x3981 (>= x4629 x4005)) (= x3462 (and x7682 x3981)) (= x4629 (x3183 x1306)) (= x8531 (x7405 (+ x998 32)))) (and (=> (and x3462 (and (= x215 (- x7809 x4005)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4141) (< (+ x4005 x8192) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3183 x1306) x7809) (= (= x6226 x2252) x1108) (= x4141 (+ x4005 x8192)) (= x4141 x6919) (<= 0 x4141) (= x8192 (x6560 x6226)))) (and (=> (and (and (= 1341992515 x363) (>= x6226 1) (= x1306 x6380) (= false x6427) (= x4894 x6226) (<= x742 127) (>= x2635 1) (>= 127 x742) (= x7730 true) (<= x6226 1461501637330902918203684832716283019655932542975) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x7018) (= false x1369) (= x6768 36) (= (x484 x4894) x2635) (= 36 x8505)) (not x1108)) (and (=> (and (and (= true x8394) (= x6909 false)) (not x7730)) x3445) (=> (and (= (= x464 x1306) x8023) x7730) (and (=> (and (and (= false x3968) (= x7377 true)) (not x8023)) x3445) (=> (and (and (= (= 255 x1935) x6794) (>= 255 x1935)) x8023) (and (=> (and (and (= x1463 true) (= x963 false)) x6794) x3445) (=> (and (not x6794) (and (= x7527 (= 0 x3125)) (= x3125 (x8042 x4941)) (= x8242 (x5917 255 x6981)) (= (x5917 255 x6981) x8928) (= (+ x1935 1) x6981) (= (x3305 64 x1935 36) x4941))) (and (=> (and (= x186 (= x8928 255)) x7527) (and (=> (and (and (= (+ 1 x8928) x7090) (= (x5917 255 x7090) x4614) (<= x5002 1461501637330902918203684832716283019655932542975) (= x3751 (= x4614 255)) (= (x5917 255 x7090) x3755) (= x490 (x3305 64 x8928 2)) (= (x8841 x490) x5002)) (not x186)) (and (=> (and (not x3751) (and (= (x7445 x1144) x335) (= (x5917 255 x4953) x3954) (= (x3305 64 x4614 6) x1144) (= x4953 (+ x4614 1)) (>= 65535 x335) (= x3632 (= 255 x3954)) (= (x5917 255 x4953) x2505))) (and (=> (and (and (<= x8948 1461501637330902918203684832716283019655932542975) (= (+ x3954 1) x5792) (= (x5917 255 x5792) x7795) (= (x5917 255 x5792) x3548) (= x766 (= 255 x3548)) (= x8948 (x8841 x7118)) (= (x3305 64 x3954 2) x7118)) (not x3632)) (and (=> x766 x731) (=> (and (and (= x772 (x3305 64 x3548 36)) (= x8448 (x5917 255 x1819)) (= x1819 (+ x3548 1)) (= 128 x8540) (= x7738 (x8042 x772)) (= (x5917 255 x1819) x2016) (= x5650 (x484 x464)) (= x4106 (= x5650 0))) (not x766)) (and (=> (and (not x4106) (and (or (and x3451 (and (= x9090 x4849) (= x4703 (x5493 x464)) (= (= (x7345 x464) x4703) x3274) (= x8653 x5221) x3274 (= (x5493 x4894) x8510) (= x4230 x3706) (= x8316 x5280) (= (>= (x7345 x4894) x8510) x3073) (= x7418 x7522) x3073 (= x8014 x4060) (<= x6575 4294967295) (= x1753 x8269) (= x41 x1857) (= x5065 x5897))) (and (not x3451) (and (= x5065 x1738) (= x8091 x4060) (= x4398 x4230) (= x7418 x6226) (= x8653 x8333) (= x8906 x1857) (= x3685 x9090) (= x5280 x2765) (= x3347 x1753)))) (= (> x5357 0) x3451))) x7610) (=> (and (and (= false x2914) (= x3785 true)) x4106) x3445))))) (=> x3632 x2461))) (=> x3751 x1105))) (=> x186 x745))) (=> (and (not x7527) (= x2321 (= 1 x3125))) (and (=> (and x2321 (= x6616 (= x8928 255))) (and (=> x6616 x745) (=> (and (and (<= x7543 65535) (= (+ 1 x8928) x8211) (= x7343 (= 255 x8506)) (= (x3305 64 x8928 6) x9051) (= (x7445 x9051) x7543) (= (x5917 255 x8211) x6162) (= (x5917 255 x8211) x8506)) (not x6616)) (and (=> (and (not x7343) (and (= (+ x8506 1) x5347) (= (x8042 x9077) x5800) (= (x5917 255 x5347) x6819) (= (x3305 64 x8506 36) x9077) (= (x5917 255 x5347) x2400) (= x7159 (= x2400 255)) (= (x4588 x5800 300) x7305))) (and (=> x7159 x3877) (=> (and (and (= (x3305 64 x2400 100) x9030) (= (x5917 255 x5548) x6730) (= (+ 1 x2400) x5548) (= x3444 (= x6730 255)) (= x5378 (x5917 255 x5548)) (= (x7941 x9030) x8549)) (not x7159)) (and (=> (and (not x3444) (and (= (= 255 x4867) x5053) (= (x3305 64 x6730 100) x340) (= x3224 (x5917 255 x1682)) (= (x5917 255 x1682) x4867) (= x9050 (x7941 x340)) (= (+ 1 x6730) x1682))) (and (=> x5053 x3877) (=> (and (and (= x1040 (= x2313 255)) (= (x7941 x361) x7681) (= x8297 (x5917 255 x6999)) (= (x3305 64 x4867 100) x361) (= x6999 (+ x4867 1)) (= x2313 (x5917 255 x6999))) (not x5053)) (and (=> (and (not x1040) (and (= x4585 (x5917 255 x3716)) (= x7036 (x3305 64 x2313 100)) (= (x7941 x7036) x1274) (= x8713 (x5917 255 x3716)) (= (= 255 x8713) x733) (= x3716 (+ 1 x2313)))) (and (=> x733 x8724) (=> (and (not x733) (and (= x1632 (x7941 x6239)) (= (x5917 255 x6063) x4985) (= x21 (x5917 255 x6063)) (= x6063 (+ 1 x8713)) (= x6573 (= 255 x4985)) (= x6239 (x3305 64 x8713 100)))) (and (=> x6573 x5028) (=> (and (not x6573) (and (= (+ x4985 1) x1517) (= x3221 (x7941 x1288)) (= x7146 (= 255 x7038)) (= (x5917 255 x1517) x5242) (= (x3305 64 x4985 100) x1288) (= (x5917 255 x1517) x7038))) (and (=> x7146 x7577) (=> (and (not x7146) (and (= x8399 (x5917 255 x6890)) (= (= 255 x8399) x921) (= x1124 (x3305 64 x7038 100)) (= x6890 (+ 1 x7038)) (= (x7941 x1124) x8003) (= (x5917 255 x6890) x4311))) (and (=> (and (not x921) (and (= (x7941 x9047) x2973) (= x2996 (+ 1 x8399)) (= (x5917 255 x2996) x3729) (= (= 255 x3729) x728) (= (x5917 255 x2996) x2971) (= x9047 (x3305 64 x8399 100)))) (and (=> x728 x378) (=> (and (and (= x4292 (x5917 255 x2438)) (= (x7941 x2446) x5351) (= (x5917 255 x2438) x2415) (= (= x2415 255) x7700) (= x2446 (x3305 64 x3729 100)) (= (+ 1 x3729) x2438)) (not x728)) (and (=> (and (and (= x4032 (+ 1 x2415)) (= x2352 (> x7305 x3296)) (= x9081 (x3305 64 x2415 100)) (= 0 x625) (= (x5917 255 x4032) x958) (= (x7941 x9081) x274) (= 128 x404) (= x2216 (x5917 255 x4032)) (= x3296 (+ x7305 31))) (not x7700)) (and (=> x2352 x3877) (=> (and (not x2352) (= (> x7305 x3296) x6453)) (and (=> (and x6453 (= x4407 480)) x6780) (=> (and (not x6453) (and (= (< x1472 x7305) x9070) (= (x3330 128) x1472))) (and (=> (and (= x1588 480) x9070) x948) (=> (and (= (= x7305 0) x6658) (not x9070)) (and (=> (and (= 512 x5948) x6658) x4487) (=> (and (not x6658) (and (or (= 0 x4026) (= x4026 32)) (= x3030 (* 32 (ite (= 0 x4016) 1 0))) (= (> x1315 x5540) x4578) (= (+ x5540 x7305) x1315) (= (x5917 31 x7305) x4016) (= (+ 128 x4016 x3030) x2789) (= x5540 (+ 480 x4016 x4026)) (or (= 32 x3030) (= x3030 0)) (= x4026 (* (ite (= 0 x4016) 1 0) 32)))) (and (=> x4578 x526) (=> (and (= x5540 x5279) (not x4578)) x8968))))))))))) (=> x7700 x2932))))) (=> x921 x8138))))))))) (=> x1040 x3877))))) (=> x3444 x3877))))) (=> x7343 x3877))))) (=> (and (= (= 2 x3125) x4393) (not x2321)) (and (=> (and (= x329 (= 255 x8928)) x4393) (and (=> x329 x745) (=> (and (and (= (x3305 64 x8928 6) x333) (= x6133 (+ 1 x8928)) (= (= x4146 255) x7139) (= (x5917 255 x6133) x8969) (= x4146 (x5917 255 x6133)) (>= 65535 x2120) (= (x7445 x333) x2120)) (not x329)) (and (=> (and (not x7139) (and (= x7823 (x5917 255 x6818)) (= (+ x4146 1) x6818) (= x735 (x4588 x5442 300)) (= (x8042 x1814) x5442) (= (x3305 64 x4146 36) x1814) (= x1499 (x5917 255 x6818)) (= x3281 (= 255 x1499)))) (and (=> (and (and (= x1878 (x5917 255 x914)) (= x4984 (x7941 x8158)) (= (+ 1 x1499) x914) (= x8158 (x3305 64 x1499 100)) (= (x5917 255 x914) x5152) (= (= 255 x5152) x9109)) (not x3281)) (and (=> x9109 x3877) (=> (and (not x9109) (and (= (x5917 255 x5690) x7485) (= x6950 (x7941 x7760)) (= (+ x5152 1) x5690) (= (x5917 255 x5690) x2534) (= (x3305 64 x5152 100) x7760) (= (= x2534 255) x4877))) (and (=> (and (not x4877) (and (= (x5917 255 x1087) x6210) (= x1087 (+ 1 x2534)) (= (x3305 64 x2534 100) x3929) (= (= x6210 255) x4833) (= (x7941 x3929) x5984) (= x1850 (x5917 255 x1087)))) (and (=> x4833 x3877) (=> (and (not x4833) (and (= (x3305 64 x6210 100) x6901) (= (x5917 255 x3242) x7735) (= x3242 (+ 1 x6210)) (= x879 (x5917 255 x3242)) (= (x7941 x6901) x870) (= x5277 (= x7735 255)))) (and (=> x5277 x8724) (=> (and (not x5277) (and (= x6131 (x5917 255 x2772)) (= (x3305 64 x7735 100) x460) (= x2772 (+ x7735 1)) (= x1192 (x5917 255 x2772)) (= (= 255 x6131) x173) (= (x7941 x460) x5394))) (and (=> x173 x5028) (=> (and (and (= (x5917 255 x8362) x7064) (= x8362 (+ 1 x6131)) (= (x3305 64 x6131 100) x4564) (= (x5917 255 x8362) x132) (= x3875 (= 255 x132)) (= (x7941 x4564) x3621)) (not x173)) (and (=> (and (not x3875) (and (= x4891 (x3305 64 x132 100)) (= (x5917 255 x4356) x2652) (= x943 (x5917 255 x4356)) (= x99 (x7941 x4891)) (= x4356 (+ x132 1)) (= x2849 (= x2652 255)))) (and (=> x2849 x8138) (=> (and (not x2849) (and (= x5620 (x3305 64 x2652 100)) (= x5131 (x5917 255 x4692)) (= x2563 (x7941 x5620)) (= x4692 (+ 1 x2652)) (= x5907 (x5917 255 x4692)) (= x7685 (= 255 x5907)))) (and (=> x7685 x378) (=> (and (not x7685) (and (= x7173 (+ 1 x5907)) (= x8110 (x5917 255 x7173)) (= (= x8591 255) x3176) (= x8591 (x5917 255 x7173)) (= x6027 (x7941 x6647)) (= x6647 (x3305 64 x5907 100)))) (and (=> x3176 x2932) (=> (and (not x3176) (and (= (+ 31 x735) x7479) (= (+ 1 x8591) x4252) (= x4665 128) (= x8221 (x3305 64 x8591 100)) (= x3428 0) (= (> x735 x7479) x3081) (= x5388 (x7941 x8221)) (= (x5917 255 x4252) x1030) (= x9078 (x5917 255 x4252)))) (and (=> (and (not x3081) (= (> x735 x7479) x6591)) (and (=> (and x6591 (= 480 x4407)) x6780) (=> (and (not x6591) (and (= x2001 (x2551 128)) (= x8686 (> x735 x2001)))) (and (=> (and x8686 (= x1588 480)) x948) (=> (and (= x6202 (= 0 x735)) (not x8686)) (and (=> (and (and (= (+ x472 x8256 480) x4768) (or (= x472 32) (= 0 x472)) (= x472 (* 32 (ite (= 0 x8256) 1 0))) (= (+ x4768 x735) x4219) (or (= 0 x450) (= 32 x450)) (= (+ x8256 x450 128) x5598) (= x450 (* (ite (= 0 x8256) 1 0) 32)) (= x8256 (x5917 31 x735)) (= (< x4768 x4219) x1631)) (not x6202)) (and (=> (and (= x9052 x4768) (not x1631)) x3319) (=> x1631 x7078))) (=> (and (= x814 512) x6202) x5619))))))) (=> x3081 x3877))))))))) (=> x3875 x7577))))))))) (=> x4877 x3877))))) (=> x3281 x3877))) (=> x7139 x3877))))) (=> (and (not x4393) (= (= x3125 3) x4353)) (and (=> (and (= x7123 (= 4 x3125)) (not x4353)) (and (=> (and (not x7123) (= x8974 (= 5 x3125))) (and (=> (and (= x5600 (= 255 x8928)) x8974) (and (=> (and (not x5600) (and (= x3187 (x8042 x3834)) (= x3834 (x3305 64 x8928 36)) (= x160 (= x8060 255)) (= (+ x8928 1) x5731) (= x8060 (x5917 255 x5731)) (= (x5917 255 x5731) x4979))) (and (=> x160 x1105) (=> (and (not x160) (and (= x8860 (x5917 255 x2985)) (<= x736 65535) (= x4188 (x3305 64 x8060 6)) (= x6413 (x5917 255 x2985)) (= (= x8860 255) x4996) (= (+ x8060 1) x2985) (= (x7445 x4188) x736))) (and (=> (and (not x4996) (and (= x3413 (x8042 x3990)) (= (x3305 64 x8860 36) x3990) (= (x5917 255 x2375) x6579) (= x2608 (x5917 255 x2375)) (= (x4588 x3413 300) x3759) (= (+ 1 x8860) x2375) (= x7798 (= 255 x2608)))) (and (=> (and (not x7798) (and (= (+ 1 x2608) x8712) (= (= 255 x4216) x2056) (= (x5917 255 x8712) x1397) (= (x5917 255 x8712) x4216) (= x6085 (x3305 64 x2608 100)) (= x6910 (x7941 x6085)))) (and (=> x2056 x3877) (=> (and (and (= x8935 (+ x4216 1)) (= x881 (x5917 255 x8935)) (= x2630 (x3305 64 x4216 100)) (= x2139 (= x881 255)) (= x7287 (x5917 255 x8935)) (= x1133 (x7941 x2630))) (not x2056)) (and (=> x2139 x3877) (=> (and (not x2139) (and (= x6068 (x3305 64 x881 100)) (= (x5917 255 x7779) x2737) (= (+ 1 x881) x7779) (= (x5917 255 x7779) x1700) (= (x7941 x6068) x52) (= x1552 (= x2737 255)))) (and (=> x1552 x8724) (=> (and (and (= x271 (x5917 255 x6870)) (= x233 (= x271 255)) (= x3721 (x3305 64 x2737 100)) (= x8703 (x7941 x3721)) (= (+ x2737 1) x6870) (= x1489 (x5917 255 x6870))) (not x1552)) (and (=> x233 x5028) (=> (and (and (= x1364 (+ 1 x271)) (= x2520 (x3305 64 x271 100)) (= x4285 (x5917 255 x1364)) (= x4112 (= x4285 255)) (= (x5917 255 x1364) x915) (= x6241 (x7941 x2520))) (not x233)) (and (=> x4112 x7577) (=> (and (and (= (x5917 255 x1451) x6715) (= (+ 1 x4285) x1451) (= (x7941 x76) x6900) (= x446 (= x4662 255)) (= x4662 (x5917 255 x1451)) (= x76 (x3305 64 x4285 100))) (not x4112)) (and (=> (and (not x446) (and (= x223 (= x2032 255)) (= x8209 (+ x4662 1)) (= x6984 (x5917 255 x8209)) (= (x3305 64 x4662 100) x1345) (= (x5917 255 x8209) x2032) (= x7309 (x7941 x1345)))) (and (=> x223 x378) (=> (and (not x223) (and (= x5883 (x5917 255 x2241)) (= (x5917 255 x2241) x4013) (= (x7941 x5405) x2724) (= x5317 (= x4013 255)) (= x5405 (x3305 64 x2032 100)) (= (+ x2032 1) x2241))) (and (=> (and (and (= x2697 (x7941 x2238)) (= (x5917 255 x7402) x4933) (= (x5917 255 x7402) x2749) (= (x3305 64 x4013 100) x2238) (= (= 255 x2749) x9043) (= x7402 (+ x4013 1))) (not x5317)) (and (=> x9043 x4313) (=> (and (not x9043) (and (= x3568 (+ x2749 1)) (= x1477 (+ 31 x3759)) (= x5842 (< x1477 x3759)) (= 128 x2924) (= x755 (x5917 255 x3568)) (= (x5917 255 x3568) x3488) (= (x7941 x4851) x8608) (= x4377 0) (= x4851 (x3305 64 x2749 100)))) (and (=> x5842 x3877) (=> (and (= x7142 (> x3759 x1477)) (not x5842)) (and (=> (and (and (= x3673 false) (= x2863 true)) x7142) x3445) (=> (and (not x7142) (and (= (> x3759 x5088) x5847) (= (x6077 128) x5088))) (and (=> (and (and (= x1905 true) (= x4928 false)) x5847) x3445) (=> (and (not x5847) (= (= x3759 0) x1515)) (and (=> (and (= 512 x5534) x1515) x4949) (=> (and (not x1515) (and (= (+ 480 x7565 x1089) x3280) (or (= 32 x7565) (= x7565 0)) (= (* (ite (= x1089 0) 1 0) 32) x5704) (= x1089 (x5917 31 x3759)) (= x7565 (* (ite (= x1089 0) 1 0) 32)) (= (+ x3280 x3759) x6783) (or (= x5704 32) (= x5704 0)) (= (+ x1089 x5704 128) x2384) (= (< x3280 x6783) x4931))) (and (=> (and (= x3280 x6362) (not x4931)) x6578) (=> x4931 x1262))))))))))))) (=> x5317 x2932))))) (=> x446 x8138))))))))))))) (=> x7798 x3877))) (=> x4996 x3877))))) (=> x5600 x745))) (=> (and (= (= 6 x3125) x4530) (not x8974)) (and (=> (and x4530 (= (= x8928 255) x2140)) (and (=> x2140 x745) (=> (and (and (= x5350 (x3305 64 x8928 36)) (= (x5917 255 x882) x5508) (= (+ 1 x8928) x882) (= (x8042 x5350) x8227) (= x5655 (= x5508 255)) (= (x5917 255 x882) x1839)) (not x2140)) (and (=> (and (not x5655) (and (= x6683 (x3305 64 x5508 36)) (= x3967 (x8042 x6683)) (= (x5917 255 x3732) x3421) (= (x5917 255 x3732) x4645) (= (+ 1 x5508) x3732) (= x5024 (= 255 x3421)))) (and (=> x5024 x2461) (=> (and (and (= x927 (= 255 x5219)) (= x1572 (x3305 64 x3421 36)) (= (+ 1 x3421) x6448) (= (x5917 255 x6448) x5452) (= x5219 (x5917 255 x6448)) (= (x8042 x1572) x3063)) (not x5024)) (and (=> x927 x731) (=> (and (and (= x4226 (x8042 x1029)) (= x2076 (x484 x464)) (= x1561 (x5917 255 x5166)) (= x2783 (x5917 255 x5166)) (= (x3305 64 x5219 36) x1029) (= (= 0 x2076) x7046) (= (+ x5219 1) x5166) (= x5589 128)) (not x927)) (and (=> (and (not x7046) (and (= (x5493 x464) x5662) (= (<= x8227 x7790) x827) (= x3423 (and x8801 x827)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8227 x5662)) x8801) (= x7790 (x5493 x4894)))) (and (=> (and (and (and (= (x5493 x4894) x8107) (= x2080 x2486) (= (+ x4607 x8227) x2486) (= x557 (< 0 x6823)) (= (x4041 x464) x4607) (= (- x8107 x8227) x1408) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2486) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8227 x4607)) (>= x2486 0)) (or (and (and (= x9014 x7387) (= x5140 x1357) (= x4945 x2740) (= x4231 x7739) (= x9083 (= (x5026 x464) x3919)) (= x3190 (x869 x4894)) (= x8837 x6098) (= (x869 x464) x3919) (>= 4294967295 x6092) (= x9054 x6436) (= x8051 x4031) (= x2460 x8828) x7512 (= (<= x3190 (x5026 x4894)) x7512) (= x7457 x3758) x9083) x557) (and (and (= x8091 x9054) (= x8828 x3347) (= x7387 x4398) (= x2740 x6226) (= x8837 x1738) (= x2765 x4031) (= x3758 x8333) (= x1357 x8906) (= x3685 x7739)) (not x557)))) x3423) x3984) (=> (and (and (= 0 x4781) (= 0 x2071) (= x4398 x2656) (= x1771 x1738) (= x6226 x6367) (= x5402 x8906) (= x3685 x1487) (= x8333 x8990) (= x3347 x4176) (= x2699 x2765) (= x7599 x8091)) (not x3423)) x205))) (=> (and (and (= x5085 true) (= x2967 false)) x7046) x3445))))))) (=> x5655 x1105))))) (=> (and (= (= 7 x3125) x2404) (not x4530)) (and (=> (and (not x2404) (= x6194 (= 8 x3125))) (and (=> (and (not x6194) (and (= x8928 x7680) (= x1120 x3347) (= x1686 x6226) (= x8906 x6643) (= x6849 x1738) (= x8454 x4398) (= x5899 x3685) (= x3941 x2765) (= x8333 x8589) (= x8091 x6557))) x4340) (=> (and x6194 (= x8550 (= x8928 255))) (and (=> x8550 x745) (=> (and (not x8550) (and (= x660 (x5917 255 x2757)) (= (= x6061 0) x518) (= x1701 (x8042 x8797)) (= (x3305 64 x8928 36) x8797) (= x7720 (x5917 255 x2757)) (= x6061 (x484 x464)) (= (+ x8928 1) x2757) (= 128 x4895))) (and (=> (and x518 (and (= true x9093) (= x8494 false))) x3445) (=> (and (and (or (and (and (= x5564 x8816) (= x1139 (x5493 x464)) (= x6612 x8766) (= x612 x7887) (= x2988 (x5493 x4894)) (= x2442 x5064) (= x4371 x7665) (= (= (x8004 x464) x1139) x4531) (= x7551 x1744) (= x5653 x3001) (= x5058 x2383) (= x125 x2960) x4531 x7240 (<= x652 4294967295) (= x7240 (>= (x8004 x4894) x2988))) x5495) (and (and (= x6226 x6612) (= x7551 x8091) (= x2765 x4371) (= x2383 x8906) (= x4398 x2960) (= x1738 x612) (= x5653 x3347) (= x8333 x2442) (= x3685 x5564)) (not x5495))) (= x5495 (< 0 x8213))) (not x518)) x919))))))) (=> (and x2404 (= (= x8928 255) x6393)) (and (=> (and (not x6393) (and (= (+ 1 x8928) x5047) (= (x5917 255 x5047) x3329) (= x1568 (x5917 255 x5047)) (>= 1461501637330902918203684832716283019655932542975 x4346) (= x2109 128) (= x6065 (x3305 64 x8928 2)) (= (x484 x464) x5146) (= (x8841 x6065) x4346) (= (= x5146 0) x1574))) (and (=> (and (and (or (and x8141 (and (= x7623 x5475) (= x6595 x6377) (= x4604 x8464) (= x3694 x8618) (= x6621 x2922) x5624 x1261 (= (x5493 x4894) x8186) (<= x1101 4294967295) (= x1070 x1326) (= (= x2666 (x1047 x464)) x5624) (= x2822 x1679) (= x1261 (>= (x1047 x4894) x8186)) (= x438 x7437) (= x2987 x3829) (= x2666 (x5493 x464)))) (and (and (= x4604 x3347) (= x4398 x6377) (= x6226 x8618) (= x3829 x3685) (= x1738 x6621) (= x8333 x5475) (= x1070 x8906) (= x2765 x438) (= x2822 x8091)) (not x8141))) (= (< 0 x3258) x8141)) (not x1574)) x1941) (=> (and x1574 (and (= x6561 true) (= x467 false))) x3445))) (=> x6393 x745))))))))) (=> (and (= (= x8928 255) x5822) x7123) (and (=> x5822 x745) (=> (and (not x5822) (and (= x4687 (= 255 x1237)) (= (+ 1 x8928) x5444) (= x1413 (x8042 x4022)) (= x4300 (x5917 255 x5444)) (= (x5917 255 x5444) x1237) (= (x3305 64 x8928 36) x4022))) (and (=> (and (not x4687) (and (= (= x830 255) x8375) (= x5263 (x3305 64 x1237 100)) (= (x5917 255 x6298) x8597) (= x8137 (x7941 x5263)) (= x830 (x5917 255 x6298)) (= (+ 1 x1237) x6298))) (and (=> x8375 x2461) (=> (and (not x8375) (and (= (x5917 255 x7996) x2073) (= x4306 (x8042 x1312)) (= (>= x646 x1413) x1336) (= x2128 (x5917 255 x7996)) (= x1979 128) (= (x5493 x464) x7789) (= (x3305 64 x830 36) x1312) (= x3244 (and x4811 x1336)) (= x7996 (+ x830 1)) (= (x5493 x4894) x646) (= x4811 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1413 x7789))))) (and (=> (and (and (or (and (and (= x1649 x138) (= x3540 x538) (= (= (x184 x464) x1722) x3857) (= x4263 x8541) (= x7944 x4323) (= x6498 (>= (x184 x4894) x5011)) x6498 (= x4331 x4454) (= x6445 x1074) (= (x3879 x4894) x5011) (= x945 x3121) x3857 (>= 4294967295 x1088) (= x4939 x6785) (= (x3879 x464) x1722) (= x3366 x4069)) x993) (and (not x993) (and (= x8541 x1738) (= x4939 x8091) (= x8333 x3121) (= x8906 x3366) (= x4398 x4454) (= x138 x3347) (= x2765 x4323) (= x6226 x1074) (= x3685 x3540)))) (and (= x4509 (- x2282 x1413)) (<= x630 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5493 x4894) x2282) (= (< 0 x175) x993) (<= 0 x630) (< (+ x2017 x1413) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x5257 x630) (= x630 (+ x2017 x1413)) (= (x8955 x464) x2017))) x3244) x8450) (=> (and (not x3244) (and (= x4095 0) (= x2765 x1482) (= x3085 x8906) (= x3765 x4398) (= x3347 x5300) (= x6885 x6226) (= x8091 x7258) (= x5768 x8333) (= x4858 x3685) (= x1738 x3334) (= 0 x293))) x6576))))) (=> x4687 x1105))))))) (=> (and x4353 (= x4286 (= 255 x8928))) (and (=> (and (not x4286) (and (= x3057 (x3305 64 x8928 36)) (= x8032 (x5917 255 x1633)) (= x8286 (= 255 x8032)) (= x5443 (x8042 x3057)) (= (+ x8928 1) x1633) (= (x5917 255 x1633) x2827))) (and (=> x8286 x1105) (=> (and (and (= x2751 (x484 x464)) (= x5195 (x5917 255 x2593)) (= 128 x2851) (= x3463 (x3305 64 x8032 100)) (= (x5917 255 x2593) x266) (= (= 0 x2751) x3737) (= x2944 (x7941 x3463)) (= (+ x8032 1) x2593)) (not x8286)) (and (=> (and (not x3737) (and (= (< 0 x1093) x8783) (or (and x8783 (and (= x6855 x937) (= x1763 x6654) (= x2854 x8998) (= x1592 (>= (x8173 x4894) x6002)) x1592 (= x6989 (x5493 x464)) (<= x9011 4294967295) (= x6002 (x5493 x4894)) (= x7073 x2159) (= x6952 x6000) x7006 (= x5055 x8614) (= x7006 (= (x8173 x464) x6989)) (= x248 x3391) (= x7986 x1428) (= x8721 x2829))) (and (not x8783) (and (= x6952 x8333) (= x3685 x3391) (= x3347 x2159) (= x6654 x4398) (= x8091 x8721) (= x5055 x1738) (= x2765 x7986) (= x6226 x8998) (= x6855 x8906)))))) x8667) (=> (and (and (= false x279) (= x8376 true)) x3737) x3445))))) (=> x4286 x745))))))))))))))))) (=> (and x1108 (and (= x5129 36180046632115354981904271164172418022085455641023445553456023893925156618240) (>= x5705 1) (= x5914 x1306) (= x2881 1341992515) (= 36 x4806) (= 36 x8505) (>= 127 x5594) (= false x193) (<= x5594 127) (= true x5648) (= (x484 x2252) x5705) (= false x6673))) (and (=> (and (and (= x3534 false) (= x4828 true)) (not x5648)) x4239) (=> (and (and (= (> x515 x30) x8082) (= x30 (x7405 (+ x515 x4005))) (= (x6418 x5612) x515) (= x5612 (x3305 64 x1306 1))) x5648) (and (=> (and (and (= x8538 x4398) (= x8508 x8333) (= x5572 x2214) (= x751 x8906) (= x1738 x4840) (= x5243 x1935) (= x3347 x8108) (= x6935 x2765) (= x2005 x6226) (= x506 1) (= x6005 x8091) (= x3685 x4779) (= x5197 x464)) (not x8082)) x5812) (=> (and (and (= false x6434) (= true x7598)) x8082) x4239))))))) (=> (and (and (= x3347 x8833) (= x4398 x7094) (= x2239 x8333) (= x6753 x2214) (= x3730 x8906) (= x464 x7655) (= x4365 x1935) (= x6741 0) (= x8440 x1738) (= x6226 x8701) (= x512 x3685) (= x2765 x6990) (= x8091 x5887)) (not x3462)) x1731))) x2469))
(assert (x2673 x4817))
(assert (= x7306 (and (not x8366) x2210)))
(assert (= x1470 (=> (and (= (x8103 x8275) x7149) (= (x7405 (+ x8275 32)) x2061) (= x8812 (x7190 (- x1959 x1467))) (= (x7405 (+ x8607 32)) x2367) (= (x7405 (+ x7829 x2263)) x36) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7319) x8536) (= x8607 (x7405 (+ x3818 32))) (= x9128 (x7405 (+ 32 x1959))) (= x7319 (x7405 (+ x7829 31))) (= (< 0 x7149) x4589) (= x1959 (x7405 (+ x8536 x2263)))) (and (=> (and (and (= (< 32 x7149) x5287) (= x6354 (x1604 x2061))) x4589) (and (=> (not x5287) x2408) (=> (and x5287 (and (= (x7405 (+ x9128 32)) x2507) (= (x1122 x2265) x8874) (= (< 64 x7149) x6601) (= x2265 (x7405 (+ 32 x2061))))) (and (=> (and (and (= x4425 (x6515 x7411)) (= (x7405 (+ 64 x9128)) x1063) (= (> x7149 96) x4430) (= x7411 (x7405 (+ x2061 64)))) x6601) (and (=> (not x4430) x2408) (=> x4430 x413))) (=> (not x6601) x2408))))) (=> (not x4589) x2408)))))
(assert (x2673 x2142))
(assert (= (x967 (x3305 64 x4216 100)) 64))
(assert (= (x530 (x3305 64 x2749 100)) (x3305 64 x2749 100)))
(assert (x2673 x3187))
(assert (= x2986 (x4290 (x3305 64 x2986 36))))
(assert (x2673 x5564))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3076 36)))
(assert (x8339 x3413))
(assert (x2673 x4719))
(assert (x8339 x5731))
(assert (= (and x5874 x6478) x6721))
(assert (x2673 x7681))
(assert (= (x3305 64 x3892 12) (x530 (x3305 64 x3892 12))))
(assert (> (x3305 64 x2145 36) 10000))
(assert (=> (>= 10000 x8142) (= 0 (x530 x8142))))
(assert (not (x669 (x3305 64 x2212 100))))
(assert (> (x3305 64 x5577 100) 10000))
(assert (< 10000 (x3305 64 x6667 100)))
(assert (= (x530 (x3305 64 x2024 100)) (x3305 64 x2024 100)))
(assert (> (x3305 64 x5711 100) 10000))
(assert (x2673 x8700))
(assert (= (x3305 64 x5577 100) (x530 (x3305 64 x5577 100))))
(assert (< 10000 (x3305 64 x4013 100)))
(assert (not (x669 (x3305 64 x5711 100))))
(assert (x2673 x864))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2874 100)))
(assert (x2673 x2282))
(assert (x4097 x2593 256))
(assert (x4097 x8745 32))
(assert (x2673 x2739))
(assert (x2673 x5333))
(assert (x2673 x4980))
(assert (x4097 x6093 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3305 64 x7432 6) 10000))
(assert (x8339 x4904))
(assert (x2673 x667))
(assert (< 10000 (x3305 64 x1486 100)))
(assert (x2673 x6503))
(assert (= x3883 (and x6024 x4903)))
(assert (= x6081 (or (and x1327 x5107) (and x6694 x5382) (and x3371 x5070) (and x3537 x3149) (and x4301 x4453))))
(assert (x2673 x3449))
(assert (= x4883 (and (not x6737) x8367)))
(assert (= x8525 (and (not x6453) x1904)))
(assert (x2673 x5801))
(assert (x2673 x136))
(assert (= (x3305 64 x3652 100) (x530 (x3305 64 x3652 100))))
(assert (x4744 x1091))
(assert (= (=> (and (>= x6707 1) (= x6707 x978) (= x5278 (x7405 (+ 31 x3637))) (<= x230 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5278) x6707) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x230) (= x1011 x230) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x230) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6707) (< x230 x6707)) x3847) x4093))
(assert (x2673 x4319))
(assert (x8502 (ite (= x5820 0) 1 0)))
(assert (x8912 32 (ite (= x8256 0) 1 0)))
(assert (x2673 x3749))
(assert (=> (<= x6769 10000) (= 0 (x530 x6769))))
(assert (x2673 x8043))
(assert (x2673 x3637))
(assert (= (x530 (x3305 64 x1499 100)) (x3305 64 x1499 100)))
(assert (< (x3305 64 x5550 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4744 x1690))
(assert (x2673 x6793))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x683 6)))
(assert (= (and (not x2966) x2938) x5911))
(assert (= (=> (and (<= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x8233 x717) (= x717 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7969)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x717) (= x1251 x7041) (<= 1 x717) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x1251) (< x1251 x717) (= x7969 (x7405 (+ 31 x457))) (<= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639903)) x8564) x8388))
(assert (x4097 x866 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3305 64 x4655 36) (x530 (x3305 64 x4655 36))))
(assert (x2673 x6226))
(assert (x8339 x2980))
(assert (= (=> (= (= x2262 0) x2954) (and (=> (and x2954 (and (= x7801 x4626) (= x126 true) (= false x8162))) x8273) (=> (and (not x2954) (= x2105 x3921)) x5830))) x5230))
(assert (x2673 x905))
(assert (x2673 x1086))
(assert (= 100 (x1802 (x3305 64 x8537 100))))
(assert (x2673 x1607))
(assert (= (and (not x2913) x997) x7361))
(assert (x4744 x5893))
(assert (x2673 x8589))
(assert (x2673 x4306))
(assert (= x5696 (and x5586 (not x1777))))
(assert (< 10000 (x3305 64 x7290 100)))
(assert (x2673 x1672))
(assert (x2673 x8573))
(assert (= (x1802 (x3305 64 x2847 100)) 100))
(assert (= (and x1291 x2270) x4801))
(assert (=> (<= x4285 10000) (= 0 (x530 x4285))))
(assert (= x2420 (and x1347 (not x4440))))
(assert (= 6 (x1802 (x3305 64 x7432 6))))
(assert (= x1641 (=> (and (= x172 (not (< 128 x7829))) (= (x7405 (+ 96 x2263)) x7194) (= x4916 (x5188 608))) (and x1470 x172))))
(assert (= (x967 (x3305 64 x8115 100)) 64))
(assert (=> (<= x8671 10000) (= 0 (x530 x8671))))
(assert (< 10000 (x3305 64 x6251 100)))
(assert (= x3321 (and x4621 (not x4014))))
(assert (x2673 x6337))
(assert (= (x1802 (x3305 64 x7038 100)) 100))
(assert (= (x530 (x3305 64 x7239 36)) (x3305 64 x7239 36)))
(assert (x2673 x8281))
(assert (< (x3305 64 x1499 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x8479 300))
(assert (not (x669 (x3305 64 x7773 100))))
(assert (x9110 x7896))
(assert (x2673 x5508))
(assert (= (x1802 (x3305 64 x2079 100)) 100))
(assert (= (and (not x5789) x6975) x7521))
(assert (not (x669 (x3305 64 x8489 100))))
(assert (x2673 x2606))
(assert (< (x3305 64 x4614 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x967 (x3305 64 x6807 100)) 64))
(assert (= (and x2626 x2135) x3645))
(assert (not (x669 (x3305 64 x2018 100))))
(assert (x2673 x6612))
(assert (x2673 x943))
(assert (= x3889 (and x7133 x1478)))
(assert (x2673 x8948))
(assert (x2673 x764))
(assert (x4097 x7969 32))
(assert (x4097 x7274 256))
(assert (x2673 x4219))
(assert (x2673 x5705))
(assert (x1240 x8055))
(assert (= (or x3995 x7398) x3392))
(assert (x2673 x8209))
(assert (x2673 x4396))
(assert (x2673 x5626))
(assert (x2673 x929))
(assert (x8339 x5673))
(assert (= x6583 (or x5356 x5646)))
(assert (= x7735 (x4290 (x3305 64 x7735 100))))
(assert (= 100 (x1802 (x3305 64 x8731 100))))
(assert (x2673 x3100))
(assert (> (x3305 64 x1528 36) 10000))
(assert (x4097 x4732 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x1655))
(assert (= (and x3988 x3799) x6516))
(assert (= x5239 (and x7939 x1048)))
(assert (not (x669 (x3305 64 x8700 0))))
(assert (< 10000 (x3305 64 x8928 36)))
(assert (x8339 x4279))
(assert (x2673 x7687))
(assert (x2673 x1995))
(assert (x2673 x5958))
(assert (= x683 (x4290 (x3305 64 x683 2))))
(assert (x2673 x544))
(assert (x2673 x577))
(assert (x2673 x1878))
(assert (= x5739 (and x6563 x5999)))
(assert (x2673 x8003))
(assert (x2673 x2655))
(assert (x8339 x5893))
(assert (x2673 x7432))
(assert (x2673 x2666))
(assert (= (x1802 (x3305 64 x5718 100)) 100))
(assert (x4097 x3515 256))
(assert (x2673 x2696))
(assert (x2673 x1290))
(assert (x7454 x5444))
(assert (x4744 x914))
(assert (x2673 x6205))
(assert (x2673 x2691))
(assert (x2673 x4020))
(assert (x2673 x5020))
(assert (x8912 32 (ite (= 0 x4547) 1 0)))
(assert (= x8666 (x4290 (x3305 64 x8666 100))))
(assert (= x4611 (and (not x7103) x3528)))
(assert (> (x3305 64 x6598 100) 10000))
(assert (= (and x6839 x351) x2623))
(assert (x2673 x8626))
(assert (= x8160 (=> (and (= x8665 x503) (= x5950 x2456) (= x7235 x5354) (= x8737 x3963) (= x2307 x3569) (= x4339 x889) (= x3810 x8853) (= x7375 x8999) (= x591 x8183) (= x1868 x6277)) x2260)))
(assert (= (and (not x2732) x3619) x3418))
(assert (x7454 x5574))
(assert (x2673 x619))
(assert (x2673 x7359))
(assert (= (x3305 64 x7390 100) (x530 (x3305 64 x7390 100))))
(assert (=> (>= 10000 x6693) (= (x530 x6693) 0)))
(assert (x2673 x1153))
(assert (x2673 x4705))
(assert (x2673 x2082))
(assert (=> (>= 10000 x4545) (= 0 (x530 x4545))))
(assert (x4097 x4356 256))
(assert (x2673 x1809))
(assert (x4097 x7319 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7644))
(assert (x2673 x7094))
(assert (< 10000 (x3305 64 x3954 2)))
(assert (x2673 x4406))
(assert (x2673 x4477))
(assert (x2673 x605))
(assert (= (and x4624 x925) x7660))
(assert (= 64 (x967 (x3305 64 x8026 6))))
(assert (x4744 x8055))
(assert (= (x967 (x3305 64 x3748 100)) 64))
(assert (x2673 x4813))
(assert (x2673 x779))
(assert (x2673 x7803))
(assert (= (x3305 64 x2736 100) (x530 (x3305 64 x2736 100))))
(assert (x2673 x8508))
(assert (x2673 x5351))
(assert (= (x967 (x3305 64 x2642 100)) 64))
(assert (= (x530 (x3305 64 x683 2)) (x3305 64 x683 2)))
(assert (x2673 x644))
(assert (x2673 x3241))
(assert (x2673 x7993))
(assert (= (x4290 (x3305 64 x3911 100)) x3911))
(assert (x2673 x2639))
(assert (x1240 x7319))
(assert (x2673 x176))
(assert (x2673 x7809))
(assert (x2673 x1767))
(assert (x2673 x3573))
(assert (= (x3305 64 x6099 100) (x530 (x3305 64 x6099 100))))
(assert (= 0 (x530 65535)))
(assert (x2673 x4984))
(assert (x2673 x5448))
(assert (= 0 (x530 310283853)))
(assert (= (x967 (x3305 64 x4867 100)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3059 100)))
(assert (= (or x6980 x4003) x7723))
(assert (x2673 x4230))
(assert (< 10000 (x3305 64 x1953 100)))
(assert (x2673 x5304))
(assert (not (x669 (x3305 64 x2750 100))))
(assert (x4744 x7442))
(assert (x2673 x8531))
(assert (x1240 x972))
(assert (x2673 x2784))
(assert (= (or x2524 x5995 x7557 x973 x5091) x5977))
(assert (> (x3305 64 x813 100) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2313 100)))
(assert (x2673 x1112))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8148 6)))
(assert (x2673 x1988))
(assert (x2673 x5732))
(assert (x2673 x4456))
(assert (= (and x4683 (not x7289)) x5417))
(assert (= (x4290 (x3305 64 x2608 100)) x2608))
(assert (> (x3305 64 x6804 36) 10000))
(assert (=> (<= x3232 10000) (= 0 (x530 x3232))))
(assert (x2673 x7805))
(assert (x2673 x2067))
(assert (x2673 x8235))
(assert (x2673 x875))
(assert (x2673 x8024))
(assert (x2673 x8147))
(assert (x2673 x8352))
(assert (x2673 x9052))
(assert (=> (>= 10000 x1113) (= 0 (x530 x1113))))
(assert (= x5041 (or x7236 x6812)))
(assert (x2673 x646))
(assert (not (x669 (x3305 64 x3088 2))))
(assert (x2673 x4326))
(assert (< (x3305 64 x3241 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x2379 11))))
(assert (x2673 x1173))
(assert (= 64 (x967 (x3305 64 x8032 100))))
(assert (x9110 x2068))
(assert (= (x530 (x3305 64 x4868 100)) (x3305 64 x4868 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x939 36)))
(assert (= x3519 (and x1743 (not x1337))))
(assert (x2673 x8083))
(assert (=> (<= x8499 10000) (= (x530 x8499) 0)))
(assert (x2673 x1684))
(assert (= x2762 (and x7306 x942)))
(assert (x4097 x2772 256))
(assert (= (x530 (x3305 64 x8591 100)) (x3305 64 x8591 100)))
(assert (x4744 x2241))
(assert (= x5868 (x4290 (x3305 64 x5868 100))))
(assert (x2673 x174))
(assert (x2673 x1666))
(assert (x5050 x4394))
(assert (x2673 x4051))
(assert (x2673 x3251))
(assert (x2673 x6429))
(assert (< 10000 (x3305 64 x2986 36)))
(assert (x8912 32 (ite (= x6312 0) 1 0)))
(assert (> (x3305 64 x7129 100) 10000))
(assert (< (x3305 64 x136 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5884))
(assert (x2673 x5706))
(assert (= (and x6467 (not x4820)) x2744))
(assert (x7454 x8140))
(assert (= (x967 (x3305 64 x7390 100)) 64))
(assert (x2673 x887))
(assert (x2673 x483))
(assert (x2673 x6135))
(assert (= 100 (x1802 (x3305 64 x7281 100))))
(assert (x2673 x5357))
(assert (= x8928 (x4290 (x3305 64 x8928 36))))
(assert (x7454 x8712))
(assert (x2673 x1212))
(assert (x2673 x2053))
(assert (= x3326 (and (not x6194) x8500)))
(assert (= x8599 (and (not x5692) x6173)))
(assert (x2673 x2970))
(assert (= (x4290 (x3305 64 x7152 100)) x7152))
(assert (= (x967 (x3305 64 x5270 100)) 64))
(assert (= (x530 35425322552009646506518338594398286811668114190755561836384294568426616127488) 0))
(assert (x2673 x6896))
(assert (x1240 x8012))
(assert (x2673 x8264))
(assert (= (=> (and (= x92 (x7405 (+ x6442 96))) (= x4476 (x2065 608)) (= (not (> x5139 128)) x6232)) (and x6216 x6232)) x1221))
(assert (x2673 x3829))
(assert (x2673 x4162))
(assert (x4097 x1682 256))
(assert (< 10000 (x3305 64 x5294 36)))
(assert (x4744 x7136))
(assert (x2673 x7173))
(assert (= (and x6215 x6840) x7879))
(assert (x2673 x1670))
(assert (=> (<= x2652 10000) (= (x530 x2652) 0)))
(assert (= x2160 (or (and x1636 x5563) (and x5997 x2974) (and x6961 x8761) (and x292 x5453) (and x6600 x1197) (and x5482 x3056))))
(assert (= (and x6408 (not x2549)) x8604))
(assert (x2673 x566))
(assert (x2673 x6196))
(assert (< (x3305 64 x8666 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x502))
(assert (= (x3305 64 x4958 100) (x530 (x3305 64 x4958 100))))
(assert (= x3041 (and (not x5453) x292)))
(assert (not (x669 (x3305 64 x4087 12))))
(assert (x2673 x4461))
(assert (x2673 x6456))
(assert (x2673 x4482))
(assert (x2673 x41))
(assert (= (and x656 x5189) x2729))
(assert (x2673 x1366))
(assert (= (and x8974 x2407) x1483))
(assert (= (x1802 (x3305 64 x1073 100)) 100))
(assert (x2673 x7081))
(assert (= (x1802 (x3305 64 x3932 100)) 100))
(assert (x2673 x5377))
(assert (x2673 x5581))
(assert (= (or x5102 x1639) x283))
(assert (not (x669 (x3305 64 x5931 6))))
(assert (x4744 x5681))
(assert (x4097 x5483 256))
(assert (< 10000 (x3305 64 x1354 100)))
(assert (< 10000 (x3305 64 x2749 100)))
(assert (x2673 x4781))
(assert (x2673 x5191))
(assert (= (x967 (x3305 64 x760 100)) 64))
(assert (x2673 x930))
(assert (= (x3305 64 x3232 100) (x530 (x3305 64 x3232 100))))
(assert (=> (<= x2534 10000) (= 0 (x530 x2534))))
(assert (not (x669 (x3305 64 x1587 100))))
(assert (= x582 (and x8901 (not x839))))
(assert (x2673 x5341))
(assert (x2673 x1729))
(assert (x2673 x3107))
(assert (=> (>= 10000 x176) (= 0 (x530 x176))))
(assert (x4744 x1783))
(assert (x2673 x3743))
(assert (x2673 x1594))
(assert (= (x967 (x3305 64 x5269 100)) 64))
(assert (x8339 x6475))
(assert (x2673 x112))
(assert (not (x669 (x3305 64 x6457 100))))
(assert (= x8748 (=> (= (= x4025 0) x492) (and (=> (and (and (<= x543 255) (= x543 (x3465 x22)) (= (< 0 x543) x8447) (= (x3305 64 x9127 10) x22)) x492) (and (=> (not x8447) x1012) (=> (and (= x7757 (= x7570 0)) x8447) (and (=> (and (and (and (= 128 x2476) (= (= x3979 x2252) x2913)) (or (and x2913 (and (or (and x6720 (and (= x8869 x1836) (= x3722 x5839) (= x2664 x7627) (= x4522 false) (= x2513 x3979) (= x2894 x7644) (= x1007 x3679) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3117) (= x2119 x3117) (= false x1654) (= x6887 x1988) (= x6154 x6329) (= x8857 x9075) (= x2012 2) (= x7253 x571) (>= x3117 0) (= x740 x7583) (= 1 x5826))) (and (and (= x2664 x7627) (= x49 2) (= x571 x7253) (= x9075 x8857) (= x8869 x1836) (= x6329 x6154) (= x5839 x3722) (= x2012 2) (= x7644 x2894) (= x3979 x2513) (= x2377 true) (= x5826 0) (= x740 x7583) (= false x891) (= x1007 x3679) (= x6887 x1988)) (not x6720))) (and (>= x4102 1) (= x2879 x3142) (= false x5241) (= x6660 310283853) (= (and x1678 x8616) x6720) (= false x4054) (= x3117 (* 1000000000 x6887)) (<= x6920 127) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x2244) (= (<= x3117 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1678) (= x3142 x6887) (= x8616 (< (* x6887 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x484 x2252) x4102) (= 36 x7217) (>= 127 x6920)))) (and (not x2913) (and (= false x5942) (<= 1 x2855) (= x1988 x6887) (= x1007 x3679) (= x5930 false) (= x4894 x3979) (>= 1461501637330902918203684832716283019655932542975 x3979) (= x5839 x3722) (= false x8847) (>= 127 x4569) (= x7583 x740) (>= 127 x4569) (= x7644 x2894) (= x8869 x1836) (= (x484 x4894) x2855) (= 310283853 x2034) (= x7627 x2664) (= x3582 36) (= x1479 false) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x6302) (= x2012 2) (= x2513 x3979) (= x6887 x5933) (<= 1 x3979) (= x6154 x6329) (= x571 x7253) (= x8857 x9075) (= x5826 1))))) x7757) x7919) (=> (and (and (and (= x4505 (= x2252 x3979)) (= x3903 128)) (or (and (and (or (and (not x6220) (and (= x3722 x6942) (= x3679 x59) (= x6329 x4091) (= x2428 x7627) (= x4461 x7644) (= x619 0) (= x8061 x7583) (= x2041 x8869) (= x4978 true) (= x9075 x8762) (= x7777 x6887) (= x6632 2) (= x2382 false) (= x571 x1613) (= 2 x533) (= x3316 x3979))) (and (and (= x7644 x4461) (= x1613 x571) (= x3316 x3979) (= x3679 x59) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x180) (= x180 x5946) (= 1 x619) (= x8061 x7583) (= x7627 x2428) (= x9075 x8762) (<= 0 x180) (= x6329 x4091) (= x5507 false) (= 2 x533) (= x6887 x7777) (= x8869 x2041) (= false x7603) (= x3722 x6942)) x6220)) (and (= (* 1000000000 x6887) x180) (= x1211 false) (= x8315 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x3277 310283853) (= x3160 x3854) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000 x6887)) x7942) (>= 127 x5406) (= 36 x3298) (= (x484 x2252) x6904) (>= x6904 1) (= x6887 x3160) (= (<= x180 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2681) (= false x7653) (= (and x2681 x7942) x6220) (>= 127 x5406))) x4505) (and (and (= x3316 x3979) (= x2428 x7627) (>= x3979 1) (= x4091 x6329) (= false x5155) (>= 1461501637330902918203684832716283019655932542975 x3979) (<= 1 x2271) (= x8009 false) (<= x2510 127) (= x2117 36) (= (x484 x4894) x2271) (= x6942 x3722) (= x7583 x8061) (= x59 x3679) (= x2613 false) (= x6887 x2023) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x6383) (>= 127 x2510) (= false x7981) (= x4461 x7644) (= x571 x1613) (= x8869 x2041) (= x9075 x8762) (= 2 x533) (= x3979 x4894) (= x6887 x7777) (= 310283853 x2385) (= 1 x619)) (not x4505)))) (not x7757)) x8750))))) (=> (not x492) x1012)))))
(assert (= 100 (x1802 (x3305 64 x2858 100))))
(assert (x8339 x7779))
(assert (x4097 x7768 256))
(assert (= (and x8066 (not x7685)) x1019))
(assert (x2673 x5519))
(assert (< 10000 (x3305 64 x432 6)))
(assert (= (x967 (x3305 64 x1306 2)) 64))
(assert (x4097 x4164 32))
(assert (= x8007 (and (not x6368) x6347)))
(assert (= (x1802 (x3305 64 x8194 100)) 100))
(assert (not (x669 (x3305 64 x9078 12))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2608 100)))
(assert (x2673 x6522))
(assert (= (and x2720 x406) x5068))
(assert (= (and x7299 x1135) x5038))
(assert (x2673 x6052))
(assert (= 36 (x1802 (x3305 64 x1528 36))))
(assert (< (x3305 64 x3210 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8339 x4732))
(assert (=> (<= x1256 10000) (= (x530 x1256) 0)))
(assert (= x3729 (x4290 (x3305 64 x3729 100))))
(assert (x2673 x6700))
(assert (x2673 x6692))
(assert (> (x3305 64 x9127 10) 10000))
(assert (x2673 x4339))
(assert (= (x4290 (x3305 64 x760 100)) x760))
(assert (x2673 x673))
(assert (=> (<= x1073 10000) (= 0 (x530 x1073))))
(assert (x2673 x9045))
(assert (x2673 x1263))
(assert (= (x1802 (x3305 64 x6642 100)) 100))
(assert (x8339 x6999))
(assert (x4744 x8513))
(assert (= (and x4324 x4596) x3982))
(assert (x8339 x7136))
(assert (= (x1802 (x3305 64 x2652 100)) 100))
(assert (x2673 x7184))
(assert (x2673 x8228))
(assert (x4097 x3610 32))
(assert (x2673 x450))
(assert (x2673 x7894))
(assert (x2673 x3433))
(assert (not (x669 (x3305 64 x6848 100))))
(assert (= (=> (and (= false x3430) (= true x3884)) x3445) x8724))
(assert (= 100 (x1802 (x3305 64 x8115 100))))
(assert (x8339 x7768))
(assert (=> (>= 10000 x136) (= 0 (x530 x136))))
(assert (x8502 (ite (= x4918 0) 1 0)))
(assert (x2673 x3565))
(assert (= x1715 (and x7183 x8106)))
(assert (=> (<= x2018 10000) (= (x530 x2018) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3066 100)))
(assert (= (and x7804 x6847) x8280))
(assert (=> (>= 10000 x6672) (= (x530 x6672) 0)))
(assert (=> (<= x448 10000) (= 0 (x530 x448))))
(assert (x2673 x5964))
(assert (= 100 (x1802 (x3305 64 x4868 100))))
(assert (< (x3305 64 x6767 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5770))
(assert (x2673 x9007))
(assert (x2673 x6176))
(assert (x2673 x1907))
(assert (not (x669 (x3305 64 x8591 100))))
(assert (= (x530 (x3305 64 x5913 100)) (x3305 64 x5913 100)))
(assert (= (x3305 64 x5680 100) (x530 (x3305 64 x5680 100))))
(assert (x2673 x1768))
(assert (x7454 x1141))
(assert (= (and (not x7778) x1095) x9111))
(assert (= (=> (and (= (x2808 x7248) x5342) (= x995 (x7405 (+ x308 32))) (= (not (> x781 x995)) x4755)) (and x4755 (=> (= x995 x3637) x4093))) x4741))
(assert (= x4447 (and x3010 x3450)))
(assert (x2673 x8762))
(assert (not (x669 (x3305 64 x668 100))))
(assert (x4097 x435 256))
(assert (x4744 x7219))
(assert (x2673 x7378))
(assert (= 100 (x1802 (x3305 64 x6700 100))))
(assert (x2673 x8355))
(assert (x8339 x3560))
(assert (x4744 x7768))
(assert (x4744 x5554))
(assert (x2673 x3071))
(assert (x2673 x791))
(assert (x8339 x276))
(assert (= (and x2026 x3393) x1129))
(assert (x4744 x4842))
(assert (= (and x5977 (not x5871)) x1676))
(assert (= (x3305 64 x5721 100) (x530 (x3305 64 x5721 100))))
(assert (x1240 x8189))
(assert (= x1725 (x4290 (x3305 64 x1725 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x760 100)))
(assert (= (x967 (x3305 64 x8946 100)) 64))
(assert (= x3728 (or x1143 x5206)))
(assert (x2673 x6246))
(assert (< (x3305 64 x8671 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3305 64 x744 100) 10000))
(assert (x2673 x3311))
(assert (< 10000 (x3305 64 x2212 100)))
(assert (= x8399 (x4290 (x3305 64 x8399 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6807 100)))
(assert (= x2726 (and (not x4) x2425)))
(assert (= 64 (x967 (x3305 64 x3076 36))))
(assert (= 11 (x1802 (x3305 64 x8897 11))))
(assert (not (x669 (x3305 64 x439 100))))
(assert (x2673 x1368))
(assert (x2673 x4323))
(assert (= 100 (x1802 (x3305 64 x4898 100))))
(assert (= x4545 (x4290 (x3305 64 x4545 36))))
(assert (= x3556 true))
(assert (x2673 x59))
(assert (= (x967 (x3305 64 x8352 36)) 64))
(assert (= (x4290 (x3305 64 x8580 100)) x8580))
(assert (x2673 x2489))
(assert (x2673 x8090))
(assert (= (and x7690 (not x3034)) x8643))
(assert (x2673 x1053))
(assert (= x7940 (=> (= x6245 x8846) x3536)))
(assert (x2673 x4629))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x9105 100)))
(assert (x4097 x5166 256))
(assert (x4744 x6890))
(assert (x2673 x1911))
(assert (=> (>= 10000 x1883) (= (x530 x1883) 0)))
(assert (x4744 x4732))
(assert (x2673 x8188))
(assert (x2673 x1990))
(assert (x2673 x924))
(assert (= x5619 (=> (and (= x6259 480) (= x4126 (= x9078 255)) (= x4157 480)) (and (=> (and (not x4126) (and (= (x5917 255 x5426) x7184) (= (x3305 64 x9078 12) x4752) (>= 18446744073709551615 x8255) (= (x5917 255 x5426) x7202) (= (+ 1 x9078) x5426) (= (x3011 x4752) x8255) (= (= x7184 255) x2732))) (and (=> x2732 x3877) (=> (and (and (= x1508 (+ x7184 1)) (= (x4588 x4695 300) x466) (= x4865 (x3305 64 x7184 36)) (= x5519 (x5917 255 x1508)) (= x2874 (x5917 255 x1508)) (= (x8042 x4865) x4695) (= x9076 (= x2874 255))) (not x2732)) (and (=> (and (and (= (= x2354 255) x7667) (= x2354 (x5917 255 x6294)) (= x6969 (x5917 255 x6294)) (= x6294 (+ x2874 1)) (= (x7941 x5688) x4829) (= x5688 (x3305 64 x2874 100))) (not x9076)) (and (=> x7667 x3877) (=> (and (not x7667) (and (= (x7941 x1828) x7026) (= (+ x2354 1) x3139) (= (x5917 255 x3139) x1448) (= x1828 (x3305 64 x2354 100)) (= x6574 (= x1448 255)) (= (x5917 255 x3139) x5103))) (and (=> (and (not x6574) (and (= x9134 (x5917 255 x1822)) (= x6212 (x5917 255 x1822)) (= x5352 (x7941 x2269)) (= (+ 1 x1448) x1822) (= x4379 (= 255 x6212)) (= x2269 (x3305 64 x1448 100)))) (and (=> (and (and (= (x3305 64 x6212 100) x617) (= (x5917 255 x6048) x719) (= x2983 (= x719 255)) (= (+ x6212 1) x6048) (= (x5917 255 x6048) x7995) (= (x7941 x617) x5992)) (not x4379)) (and (=> x2983 x7577) (=> (and (not x2983) (and (= (= x4044 255) x5061) (= (x7941 x6318) x3446) (= (x3305 64 x719 100) x6318) (= x4044 (x5917 255 x7805)) (= x7805 (+ x719 1)) (= (x5917 255 x7805) x1433))) (and (=> x5061 x8138) (=> (and (not x5061) (and (= x2943 (x3305 64 x4044 100)) (= (x5917 255 x6471) x5870) (= (x5917 255 x6471) x3239) (= (x7941 x2943) x3578) (= (+ x4044 1) x6471) (= x6424 (= x5870 255)))) (and (=> (and (not x6424) (and (= x1718 (= x4617 255)) (= (x7941 x1379) x8552) (= (x5917 255 x7211) x4617) (= (x3305 64 x5870 100) x1379) (= x8458 (x5917 255 x7211)) (= (+ x5870 1) x7211))) (and (=> (and (and (= x7514 (x5917 255 x1255)) (= (x7941 x4854) x5484) (= (+ 1 x4617) x1255) (= (x5917 255 x1255) x3748) (= x4854 (x3305 64 x4617 100)) (= x7778 (= x3748 255))) (not x1718)) (and (=> x7778 x4313) (=> (and (not x7778) (and (= (+ 1 x3748) x1287) (= x3179 (x5917 255 x1287)) (= x8640 (x7941 x7427)) (= x6693 (x5917 255 x1287)) (= (x3305 64 x3748 100) x7427) (= (= x6693 255) x2815))) (and (=> (and (and (= x7788 (x7405 (+ 32 x3379))) (not (= x814 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (not (= x814 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x7405 (+ x814 32)) x8176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x814) (= (< x4641 x466) x2250) (= x1377 (x7405 (+ 32 x4782))) (= x6009 0) (= (x7190 (- x7172 32)) x8660) (= (x7405 (+ 32 x8176)) x3379) (= (x7405 (+ x3513 32)) x8905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x814) (= x4279 (+ 1 x6693)) (= x5751 (x7941 x1541)) (= (x7190 (- x1767 x814)) x7172) (= (x7405 (+ 32 x4305)) x3513) (> x1767 x814) (= (x7405 (+ x2357 32)) x1767) (= (+ x466 31) x4641) (= (x5917 255 x4279) x5244) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x814) (= (x7405 (+ x7788 32)) x4782) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x814)) (= (x7405 (+ 32 x5363)) x4305) (= (x7405 (+ 32 x8905)) x2357) (= (x5917 255 x4279) x6120) (= (x7405 (+ 32 x1377)) x5363) (= (x3305 64 x6693 100) x1541)) (not x2815)) (and (=> (and (= (< x4641 x466) x6024) (not x2250)) (and (=> (and (not x6024) (and (= (x2547 x814) x2787) (= x8733 (> x466 x2787)))) (and (=> (and (= (= x466 0) x3132) (not x8733)) (and (=> (and (and (= (* 32 (ite (= 0 x7843) 1 0)) x7852) (= x7843 (x5917 31 x466)) (= (x7405 (+ x1767 x7843)) x4431) (= (x7405 (+ x2682 x7605)) x5921) (= x9099 (x7405 (+ x312 x466))) (= (x7405 (+ x4431 x7852)) x312) (= x7605 (* 32 (ite (= 0 x7843) 1 0))) (or (= x7852 0) (= 32 x7852)) (or (= x7605 0) (= 32 x7605)) (= (x7405 (+ x7843 x814)) x2682) (= x4632 (> x9099 x312))) (not x3132)) (and (=> x4632 x4622) (=> (and (= x3756 x312) (not x4632)) x3128))) (=> (and (and (= (x7405 (+ x1767 32)) x956) (<= x1767 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1767) (not (= x1767 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1767)) (= x3113 x1767) (not (= x1767 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x4254 x956) (> x956 x1767) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1767)) x3132) x5013))) (=> (and (= x6690 x1767) x8733) x7060))) (=> (and x6024 (= x1767 x2643)) x666))) (=> x2250 x3877))) (=> x2815 x2776))))) (=> x1718 x2932))) (=> x6424 x378))))))) (=> x4379 x5028))) (=> x6574 x8724))))) (=> x9076 x3877))))) (=> x4126 x2461)))))
(assert (= (x3305 64 x2847 100) (x530 (x3305 64 x2847 100))))
(assert (= 64 (x967 (x3305 64 x6531 100))))
(assert (x2673 x910))
(assert (x8339 x9002))
(assert (not (x669 (x3305 64 x8928 36))))
(assert (= (and (not x9076) x3418) x5853))
(assert (= (x530 (x3305 64 x1354 100)) (x3305 64 x1354 100)))
(assert (x8912 32 (ite (= 0 x4016) 1 0)))
(assert (x2673 x823))
(assert (x7454 x4692))
(assert (x4744 x3764))
(assert (x2673 x7822))
(assert (< (x3305 64 x1883 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1240 x818))
(assert (x2673 x7654))
(assert (x2673 x3161))
(assert (= (=> (and (= x4339 x3618) (= x7375 x5358) (= x453 x3963) (= x503 x5980) (= x6399 1) (= x8630 x2214) (= x591 x3567) (= x3810 x3346) (= x6055 x3569) (= x7235 x4518) (= x6866 x5950) (= x464 x410) (= x6277 x1616)) x8729) x2260))
(assert (= (=> (and (= x3439 (= 0 x415)) (or (and (and (= x5887 x6250) (= x6990 x6701) (= x4328 x3730) (= x3114 x7655) (= x3786 x2239) (= x512 x7960) (= x576 x8939) (= x7094 x2199) (= (ite (= 0 x415) x4005 0) x6233) (<= x576 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5716 x4365) (= x6144 (x6066 x6226)) (<= 0 x576) (= x7095 x6753) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6233 x602)) (= x5949 x8833) (= x1919 x8701) (= (+ x602 x6233) x576) (= x8932 (- x6144 x6233)) (= x8440 x100) (= x415 x6741) (= x602 (x2123 x1306))) x3439) (and (not x3439) (and (= x6250 x5887) (= x4328 x3730) (= x100 x8440) (= x6753 x7095) (= x7655 x3114) (= x2239 x3786) (= x415 x6741) (= x7960 x512) (= x8833 x5949) (= x6990 x6701) (= x4365 x5716) (= x8701 x1919) (= x7094 x2199))))) x1731) x6891))
(assert (x2673 x8225))
(assert (> (x3305 64 x1000 100) 10000))
(assert (x2673 x8409))
(assert (x4744 x9123))
(assert (x2673 x5949))
(assert (=> (<= x5340 10000) (= 0 (x530 x5340))))
(assert (= (x530 2177969240) 0))
(assert (= (x967 (x3305 64 x4958 100)) 64))
(assert (x4097 x1334 32))
(assert (= 64 (x967 (x3305 64 x7184 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4867 100)))
(assert (= x4994 (or x4883 x1140)))
(assert (x4744 x6231))
(assert (x8339 x2739))
(assert (< 10000 (x3305 64 x4027 100)))
(assert (> (x3305 64 x8644 100) 10000))
(assert (x2673 x4732))
(assert (< 10000 (x3305 64 x4545 36)))
(assert (x2673 x7129))
(assert (= (and x7053 (not x5723)) x1138))
(assert (= (x4290 (x3305 64 x4087 12)) x4087))
(assert (x2673 x5820))
(assert (x2673 x2736))
(assert (= (x1802 (x3305 64 x6210 100)) 100))
(assert (< (x3305 64 x3421 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x1436 x2605) (= x4548 x1713)) x599) x8870))
(assert (=> (>= 10000 x3911) (= (x530 x3911) 0)))
(assert (< 10000 (x3305 64 x4241 12)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5511 100)))
(assert (x8339 x7257))
(assert (x2673 x4939))
(assert (x2673 x2361))
(assert (not (x669 (x3305 64 x3932 100))))
(assert (x2673 x6190))
(assert (< 10000 (x3305 64 x9105 100)))
(assert (x2673 x6442))
(assert (x2673 x5242))
(assert (x2673 x7738))
(assert (=> (<= x142 10000) (= (x530 x142) 0)))
(assert (= x643 (=> (and (= (= x7014 0) x8554) (or x8554 (not x8554))) x1533)))
(assert (= (x4290 (x3305 64 x6854 100)) x6854))
(assert (= (x530 (x3305 64 x8731 100)) (x3305 64 x8731 100)))
(assert (= (and x4014 x4621) x1962))
(assert (x2673 x6512))
(assert (x2673 x6348))
(assert (= x2373 (and (not x6574) x2470)))
(assert (x2673 x2385))
(assert (x2673 x4241))
(assert (= x7186 (and x2498 x3422)))
(assert (x669 4294967326))
(assert (=> (<= x1725 10000) (= 0 (x530 x1725))))
(assert (x2673 x5485))
(assert (> (x3305 64 x2253 100) 10000))
(assert (=> (<= x8897 10000) (= 0 (x530 x8897))))
(assert (x2673 x6736))
(assert (= x696 (and x6779 (not x3606))))
(assert (x7454 x8839))
(assert (x2673 x7391))
(assert (x2673 x4073))
(assert (x2673 x2199))
(assert (x2673 x3151))
(assert (= (x3305 64 x8700 0) (x530 (x3305 64 x8700 0))))
(assert (x2673 x6511))
(assert (= (and x424 x2653) x7459))
(assert (= 64 (x967 (x3305 64 x1084 100))))
(assert (x2673 x8034))
(assert (= (and x1076 x2069) x3047))
(assert (x8912 32 (ite (= 0 x587) 1 0)))
(assert (not (x669 (x3305 64 x2534 100))))
(assert (x4744 x5574))
(assert (x9110 x4626))
(assert (= (=> (= (= x5357 0) x6140) (and (=> (and (not x6140) (and (= x4339 x9090) (= x4230 x591) (= x5950 x1857) (= x503 x5065) (= x7418 x6277) (= x8653 x3963) (= x4060 x7375) (= x3569 x8448) (= x3810 x5280) (= x7235 x1753))) x2260) (=> (and (and (= x8831 false) (= true x6111)) x6140) x3445))) x8949))
(assert (x2673 x5246))
(assert (x2673 x4023))
(assert (= (and (not x7807) x3800) x3141))
(assert (not (x669 (x3305 64 x8044 100))))
(assert (x2673 x937))
(assert (x4097 x5762 32))
(assert (= 100 (x1802 (x3305 64 x4617 100))))
(assert (= (x3305 64 x3076 36) (x530 (x3305 64 x3076 36))))
(assert (= x850 (and x1108 x631)))
(assert (x2673 x688))
(assert (x2673 x7645))
(assert (x2673 x944))
(assert (x2673 x14))
(assert (= 64 (x967 (x3305 64 x8075 36))))
(assert (= x2270 (and x8397 (not x1960))))
(assert (= (x967 (x3305 64 x8591 100)) 64))
(assert (not (x669 (x3305 64 x2652 100))))
(assert (=> (>= 10000 x4044) (= 0 (x530 x4044))))
(assert (= x7078 (=> (and (= (not (< x9053 x4219)) x4999) (= x9053 (+ 32 x4768)) (= x7751 (x2551 x5598))) (and x4999 (=> (= x9052 x9053) x3319)))))
(assert (x4744 x2767))
(assert (x2673 x1186))
(assert (x2673 x2443))
(assert (x2673 x3963))
(assert (x2673 x4829))
(assert (x2673 x2538))
(assert (x2673 x6380))
(assert (x2673 x6305))
(assert (= x3478 (and (not x4563) x7769)))
(assert (= (=> (and (= x362 (x7405 (+ x7726 32))) (= (x7405 (+ x4628 4)) x7726) (= x823 (x7405 (+ 32 x362))) (= x5153 x7801) (= x5153 (x7190 (- x4149 x4628))) (= false x8529) (= (x7405 (+ 32 x823)) x4149) (= true x7786)) x8273) x4900))
(assert (x2673 x5177))
(assert (= (and (not x7046) x8201) x5643))
(assert (= 64 (x967 (x3305 64 x6210 100))))
(assert (x2673 x4604))
(assert (x2673 x6730))
(assert (x7454 x7768))
(assert (x2673 x4918))
(assert (= x6535 (=> (and (= x8428 (x4778 x8869)) (= x4491 (x484 x8869)) (= x6282 (x4778 x4894)) (= x8317 (= x8428 (x6853 x8869))) (= x6556 (x7190 (- x2114 x3555))) (= (x7405 (+ x8964 x5545)) x7633) (<= 1 x4491) x8317 (= x9012 (>= (x6853 x4894) x6282)) (<= x7901 4294967295) (= (x7405 (+ x5545 31)) x1924) (= x2114 (x7405 (+ x8964 x2991))) (= (+ x4248 1) x5491) x9012 (= x2991 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1924)) (>= x6357 1)) x3930)))
(assert (not (x669 (x3305 64 x7390 100))))
(assert (not (x669 (x3305 64 x7038 100))))
(assert (x2673 x1097))
(assert (x4097 x8966 32))
(assert (= (and (not x492) x7754) x6500))
(assert (x7454 x1517))
(assert (x2673 x2356))
(assert (x4097 x7993 256))
(assert (x2673 x8982))
(assert (x2673 x7932))
(assert (= x5364 (and x7769 x4563)))
(assert (= (x4290 (x3305 64 x5711 100)) x5711))
(assert (x2673 x6304))
(assert (x4744 x4166))
(assert (x2673 x5653))
(assert (= (and x7533 x4293) x3641))
(assert (not (x669 (x3305 64 x719 100))))
(assert (x4097 x5828 256))
(assert (x2673 x469))
(assert (= (=> (and (= x276 (x7405 (+ x1798 31))) (= x5090 x4077) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x4077) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x4077) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8708) (<= 1 x8708) (= x7959 x8708) (> x8708 x4077) (= x8708 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x276)) (<= x4077 115792089237316195423570985008687907853269984665640564039457584007913129639903)) x3172) x4072))
(assert (x2673 x3772))
(assert (=> (<= x2644 10000) (= 0 (x530 x2644))))
(assert (x9110 x395))
(assert (=> (>= 10000 x7038) (= (x530 x7038) 0)))
(assert (x2673 x7790))
(assert (= 64 (x967 (x3305 64 x918 100))))
(assert (not (x669 (x3305 64 x2253 100))))
(assert (= (x4290 (x3305 64 x7463 36)) x7463))
(assert (x4097 x6133 256))
(assert (=> (>= 10000 x4322) (= 0 (x530 x4322))))
(assert (= (and x2711 (not x4589)) x8395))
(assert (x2673 x2882))
(assert (x2673 x2064))
(assert (= x3932 (x4290 (x3305 64 x3932 100))))
(assert (=> (<= x8666 10000) (= 0 (x530 x8666))))
(assert (x2673 x3313))
(assert (x8339 x174))
(assert (x2673 x567))
(assert (x8502 (ite (= 0 x4823) 1 0)))
(assert (= (=> (and (= (+ 32 x198) x8982) (= x3177 (x8370 x8851)) (= x116 (not (< x8982 x990)))) (and (=> (= x5303 x8982) x1918) x116)) x1218))
(assert (= (x3305 64 x68 36) (x530 (x3305 64 x68 36))))
(assert (= (x3305 64 x5269 100) (x530 (x3305 64 x5269 100))))
(assert (< (x3305 64 x6693 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2976 100)))
(assert (x2673 x3971))
(assert (= (=> (and (or (not x3633) x3633) (= (= x2262 0) x3633)) x5230) x265))
(assert (< (x3305 64 x8849 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x418))
(assert (= x2611 (and x2002 x1264)))
(assert (= x4814 (and x4578 x8005)))
(assert (=> (<= x462 10000) (= 0 (x530 x462))))
(assert (x2673 x7249))
(assert (=> (<= x2400 10000) (= (x530 x2400) 0)))
(assert (= (and x3762 x3602) x3651))
(assert (x8339 x7538))
(assert (x7454 x4166))
(assert (x2673 x3419))
(assert (= 64 (x967 (x3305 64 x2354 100))))
(assert (x8339 x8965))
(assert (x2673 x4327))
(assert (x669 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (= (x530 (x3305 64 x9096 11)) (x3305 64 x9096 11)))
(assert (= x9029 (or (and x5925 x766) (and x6602 x927) (and x6344 x6352))))
(assert (= x3763 (or x8149 x2885)))
(assert (x2673 x4176))
(assert (x2673 x8429))
(assert (x2673 x8258))
(assert (=> (>= 10000 x7432) (= (x530 x7432) 0)))
(assert (x2673 x235))
(assert (x2673 x4343))
(assert (x2673 x457))
(assert (< (x3305 64 x9127 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8339 x5426))
(assert (x2673 x6206))
(assert (=> (<= x7358 10000) (= 0 (x530 x7358))))
(assert (=> (>= 10000 x8387) (= (x530 x8387) 0)))
(assert (x2673 x6855))
(assert (x2673 x4474))
(assert (= (x1802 (x3305 64 x5750 100)) 100))
(assert (= x7698 (=> (and (= x7002 (+ 1 x3617)) (= x1522 480) (>= 18446744073709551615 x8335) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5608) (= (+ 1 x4533) x586) (= (x7941 x613) x6102) (= x4542 (+ 1 x2356)) (< x5608 x5937) (= (x3305 64 x2356 100) x613) (= x924 (x7405 (+ x5659 32))) (= x5659 (x7405 (+ 32 x4909))) (= (x7941 x2541) x4373) (= (x3011 x6465) x8335) (not (= x5608 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (+ x4533 1) x4488) (= x2113 (x7405 (+ x6596 32))) (not (= x5608 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= x8877 (x3305 64 x8580 100)) (= x8639 (+ x3617 1)) (= x5915 (x3305 64 x3789 100)) (= x3789 (+ 1 x2106)) (= (x3305 64 x1281 100) x6179) (= x8580 (+ x7796 1)) (= x1038 (x7941 x5647)) (= x6082 (x3305 64 x3652 100)) (= (x7405 (+ x3698 32)) x4909) (= (+ 1 x3789) x7796) (= x2933 (x7405 (+ 32 x924))) (= (+ x3652 1) x1281) (= (+ x1281 1) x5660) (= (+ x4837 31) x807) (= x6567 (+ x2356 1)) (= x6465 (x3305 64 x4533 12)) (= (x7941 x7710) x8431) (= x1729 (x7405 (+ 32 x2933))) (= x7740 (+ 1 x4542)) (= (x8042 x367) x6619) (= (x7190 (- x8166 32)) x7950) (= x4350 (+ x1650 1)) (= x3698 (x7405 (+ x5367 32))) (= (+ 1 x4542) x3617) (= x3992 (x7941 x6082)) (= x135 480) (= (x3305 64 x7796 100) x5647) (= x2106 (+ x1281 1)) (= (x7941 x5915) x2494) (= x5937 (x7405 (+ 32 x1375))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5608) (= (+ 1 x2106) x8773) (<= 13 x4533) (= (+ 1 x1650) x3652) (= x2147 (x7941 x6179)) (= x5367 (x7405 (+ x5608 32))) (= (+ 1 x7796) x2050) (>= 243 x4533) (not (< x3251 x4837)) (not (< x807 x4837)) (= (x3305 64 x4488 36) x367) (= x2356 (+ 1 x8580)) (= (x7941 x8877) x6435) (= x2541 (x3305 64 x4542 100)) (= (x2701 x5608) x3251) (not (= x5608 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= x4630 (x7941 x6003)) (= (x3305 64 x3617 100) x6003) (= x6596 (x7405 (+ 32 x1729))) (not (> x4837 x807)) (= (+ 1 x3652) x722) (= (+ 1 x4488) x1513) (= x1021 (x3305 64 x2106 100)) (<= x5608 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x4834 (= x4837 0)) (= x1375 (x7405 (+ 32 x2113))) (= (+ x8580 1) x6928) (= x4837 (x4588 x6619 300)) (= x1650 (+ x4488 1)) (= (x7190 (- x5937 x5608)) x8166) (= x5316 (x7941 x1021)) (= (x3305 64 x1650 100) x7710) (= x7450 0) (= (+ x3789 1) x2657)) (and (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5937)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5937)) (= (x7405 (+ x5937 32)) x3811) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5937)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5937) (= x6594 x5937) (> x3811 x5937) (= x3811 x6337) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5937) (<= x5937 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x4834) x1544) (=> (and (not x4834) (and (= (* (ite (= x2028 0) 1 0) 32) x2968) (= x6994 (x7405 (+ x2028 x5937))) (= x5209 (x7405 (+ x5608 x2028))) (= (x5917 31 x4837) x2028) (or (= x2968 0) (= 32 x2968)) (= x3193 (x7405 (+ x5795 x4837))) (= (< x5795 x3193) x6204) (= x8890 (x7405 (+ x5209 x2968))) (or (= x6709 32) (= x6709 0)) (= (x7405 (+ x6709 x6994)) x5795) (= (* (ite (= x2028 0) 1 0) 32) x6709))) (and (=> (and (= x5795 x7199) (not x6204)) x5674) (=> x6204 x8203)))))))
(assert (x2673 x553))
(assert (< 10000 (x3305 64 x3932 100)))
(assert (x2673 x2106))
(assert (x2673 x2005))
(assert (not (x669 (x3305 64 x2273 100))))
(assert (=> (<= x6804 10000) (= (x530 x6804) 0)))
(assert (x2673 x2922))
(assert (x8912 32 (ite (= 0 x4045) 1 0)))
(assert (x2673 x199))
(assert (= x3667 (or x6581 x8856)))
(assert (< (x3305 64 x755 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4744 x2378))
(assert (x4744 x6870))
(assert (= (x4290 (x3305 64 x719 100)) x719))
(assert (= x2818 (and x1715 (not x6041))))
(assert (= x5183 (and (not x6155) x1656)))
(assert (< 10000 (x3305 64 x2098 100)))
(assert (= x5931 (x4290 (x3305 64 x5931 6))))
(assert (= (x4290 (x3305 64 x4044 100)) x4044))
(assert (= (or x8395 x9065 x8670 x8036 x6977) x1137))
(assert (x2673 x5839))
(assert (x4097 x7480 256))
(assert (= 100 (x1802 (x3305 64 x8359 100))))
(assert (= (and x4986 (not x8447)) x386))
(assert (= 36 (x1802 (x3305 64 x830 36))))
(assert (x2673 x2478))
(assert (x2673 x120))
(assert (= (=> (and (= x6493 (x7405 (+ x3158 32))) (= x8711 (x7405 (+ 4 x4151))) (= (x7405 (+ 32 x8711)) x3158) (= false x9068) (= x7801 x1846) (= x8493 true) (= (x7190 (- x3858 x4151)) x1846) (= x3858 (x7405 (+ x6493 32)))) x8273) x9041))
(assert (x2673 x6505))
(assert (< (x3305 64 x1621 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x3305 64 x176 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x368 100))))
(assert (x2673 x7946))
(assert (= (x530 (x3305 64 x5870 100)) (x3305 64 x5870 100)))
(assert (x2673 x1425))
(assert (not (x669 (x3305 64 x8399 100))))
(assert (=> (>= 10000 x8060) (= (x530 x8060) 0)))
(assert (> (x3305 64 x8897 11) 10000))
(assert (= (and x8988 x649) x7365))
(assert (x2673 x917))
(assert (x2673 x5226))
(assert (x2673 x4033))
(assert (x8339 x1927))
(assert (x2673 x6284))
(assert (x1240 x8966))
(assert (= (and x8733 x4428) x5639))
(assert (x2673 x5979))
(assert (x2673 x5598))
(assert (= 64 (x967 (x3305 64 x2400 100))))
(assert (x2673 x6806))
(assert (= x4070 (and x4595 x5927)))
(assert (= x4437 (=> (and (= x3500 false) (= 36 x7801) (= x4066 true)) x8273)))
(assert (x2673 x1090))
(assert (= x3742 (x4290 (x3305 64 x3742 36))))
(assert (x2673 x1590))
(assert (= 100 (x1802 (x3305 64 x4958 100))))
(assert (x2673 x4571))
(assert (x2673 x5534))
(assert (= x4239 (=> (and (= x6005 x8091) (= x2214 x5572) (= 0 x506) (= x8108 x3347) (= 2 x4840) (= x464 x5197) (= x4398 x8538) (= x8508 x8333) (= x4779 x3685) (= x8906 x751) (= x6226 x2005) (= x6935 x2765) (= x5243 x1935) (= 2 x567)) x5812)))
(assert (< 10000 (x3305 64 x5331 36)))
(assert (x8339 x243))
(assert (x2673 x1632))
(assert (x2673 x6534))
(assert (= x4265 (and (not x3684) x421)))
(assert (x2673 x3974))
(assert (x4097 x8742 32))
(assert (x2673 x2267))
(assert (x5050 x2564))
(assert (= (and x2311 (not x8686)) x6214))
(assert (= 100 (x1802 (x3305 64 x176 100))))
(assert (x2673 x5870))
(assert (x2673 x3607))
(assert (x2673 x8835))
(assert (x2673 x9103))
(assert (= (x3305 64 x1935 36) (x530 (x3305 64 x1935 36))))
(assert (=> (>= 10000 x5870) (= 0 (x530 x5870))))
(assert (= (and x6137 x2813) x7098))
(assert (x2673 x6172))
(assert (= (x3305 64 x683 6) (x530 (x3305 64 x683 6))))
(assert (= (x4290 (x3305 64 x7390 100)) x7390))
(assert (not (x669 (x3305 64 x7140 100))))
(assert (x2673 x5588))
(assert (= (and (not x9070) x8525) x74))
(assert (= (x4290 (x3305 64 x3652 100)) x3652))
(assert (x2673 x5484))
(assert (not (x669 (x3305 64 x6730 100))))
(assert (x2673 x6027))
(assert (x7454 x7447))
(assert (x2673 x6762))
(assert (= (and x2321 x6889) x5976))
(assert (= 100 (x1802 (x3305 64 x3652 100))))
(assert (= x7468 (and (not x444) x8979)))
(assert (x2673 x5959))
(assert (x2673 x1310))
(assert (x2673 x8878))
(assert (= (and x6214 x6202) x2324))
(assert (x8339 x3993))
(assert (= (and (not x2962) x8210) x888))
(assert (= (x530 (x3305 64 x2154 100)) (x3305 64 x2154 100)))
(assert (not (x669 (x3305 64 x5575 100))))
(assert (> (x3305 64 x5127 100) 10000))
(assert (x2673 x6942))
(assert (= x2746 (and (not x3081) x189)))
(assert (= 64 (x967 (x3305 64 x2847 100))))
(assert (= x8577 (and x850 (not x5648))))
(assert (x2673 x1293))
(assert (= x919 (=> (and (= (= x8213 0) x6628) (or (not x6628) x6628)) x7160)))
(assert (x2673 x3286))
(assert (x2673 x625))
(assert (x2673 x2657))
(assert (x2673 x7609))
(assert (x2673 x5518))
(assert (x2673 x1888))
(assert (= (and (not x4379) x2373) x4412))
(assert (x2673 x1868))
(assert (x2673 x8124))
(assert (=> (<= x1486 10000) (= (x530 x1486) 0)))
(assert (= x397 (and x219 (not x8688))))
(assert (x2673 x1087))
(assert (x2673 x3824))
(assert (= 64 (x967 (x3305 64 x2216 12))))
(assert (x2673 x211))
(assert (= (x530 (x3305 64 x8897 11)) (x3305 64 x8897 11)))
(assert (x2673 x6757))
(assert (= x8752 (and x1065 x8744)))
(assert (< (x3305 64 x6273 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x967 (x3305 64 x5173 100)) 64))
(assert (x2673 x4896))
(assert (x1240 x4552))
(assert (= 64 (x967 (x3305 64 x1935 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x68 36)))
(assert (x2673 x796))
(assert (x2673 x2241))
(assert (x2673 x1539))
(assert (= x1237 (x4290 (x3305 64 x1237 100))))
(assert (=> (>= 10000 x5680) (= 0 (x530 x5680))))
(assert (x7454 x2985))
(assert (> (x3305 64 x4648 100) 10000))
(assert (= (x3305 64 x776 100) (x530 (x3305 64 x776 100))))
(assert (= (x1802 (x3305 64 x6251 100)) 100))
(assert (x2673 x9009))
(assert (x2673 x3605))
(assert (= 64 (x967 (x3305 64 x6172 36))))
(assert (= x5720 (and x2615 x1840)))
(assert (= 64 (x967 (x3305 64 x4648 100))))
(assert (x4097 x9123 32))
(assert (= (or x7332 x598 x7521 x1708 x7363) x6650))
(assert (= x8033 (and x7313 x860)))
(assert (x2673 x7622))
(assert (x2673 x5278))
(assert (x2673 x1016))
(assert (not (x669 (x3305 64 x271 100))))
(assert (x2673 x768))
(assert (x8339 x3568))
(assert (x2673 x2024))
(assert (x2673 x7759))
(assert (= (or x3665 x6238) x5107))
(assert (x4744 x2930))
(assert (= (x967 (x3305 64 x142 100)) 64))
(assert (x2673 x3578))
(assert (x2673 x3828))
(assert (x2673 x8523))
(assert (x2673 x1565))
(assert (x4097 x8189 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8339 x4252))
(assert (x2673 x1753))
(assert (= x2534 (x4290 (x3305 64 x2534 100))))
(assert (= (and x8424 (not x8807)) x8753))
(assert (= (and x2741 (not x2849)) x8066))
(assert (x2673 x6632))
(assert (= (x3305 64 x981 100) (x530 (x3305 64 x981 100))))
(assert (x2673 x2670))
(assert (= (or x1137 x5159) x2362))
(assert (x2673 x7449))
(assert (= x4704 (and x4144 x5920)))
(assert (= x5322 (and (not x1040) x1526)))
(assert (x4097 x2955 32))
(assert (= x4342 (and x1249 (not x5318))))
(assert (not (x669 (x3305 64 x68 36))))
(assert (= x8959 (=> (and (= (not (< x3634 x2439)) x7327) (= (+ 32 x581) x3634) (= x7400 (x5106 x2654))) (and x7327 (=> (= x7985 x3634) x1162)))))
(assert (x2673 x7982))
(assert (x2673 x5218))
(assert (x2673 x3464))
(assert (x2673 x1822))
(assert (= (x530 x4743) (x530 (+ 1 x4743))))
(assert (= (x4290 (x3305 64 x1256 100)) x1256))
(assert (= x7110 (and (not x6202) x6214)))
(assert (x2673 x132))
(assert (= (x1802 (x3305 64 x8044 100)) 100))
(assert (= (x4290 (x3305 64 x5152 100)) x5152))
(assert (x7454 x6448))
(assert (< 10000 (x3305 64 x1499 100)))
(assert (= (x4290 (x3305 64 x4985 100)) x4985))
(assert (= (x530 (x3305 64 x7806 100)) (x3305 64 x7806 100)))
(assert (= 36 (x1802 (x3305 64 x68 36))))
(assert (=> (>= 10000 x5508) (= 0 (x530 x5508))))
(assert (= x4913 (x4290 (x3305 64 x4913 100))))
(assert (= (x530 (x3305 64 x6131 100)) (x3305 64 x6131 100)))
(assert (= x1533 (=> (= x1898 (= x7014 0)) (and (=> (and (and (= x4034 false) (= x4731 true)) x1898) x3445) (=> (and (not x1898) (and (= x1450 x5354) (= x7356 x8737) (= x8403 x2307) (= x8775 x8999) (= x2456 x8817) (= x726 x8853) (= x5571 x8183) (= x6488 x1868) (= x4515 x889) (= x6491 x8665))) x8160)))))
(assert (x2673 x4238))
(assert (= (x4290 (x3305 64 x7038 100)) x7038))
(assert (= (and (not x4687) x3576) x2164))
(assert (x4744 x3568))
(assert (x2673 x2165))
(assert (x4097 x4032 256))
(assert (x8339 x2809))
(assert (x2673 x6237))
(assert (x2673 x8671))
(assert (x2673 x1819))
(assert (< (x3305 64 x7571 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3017))
(assert (x2673 x4464))
(assert (= (x530 (+ 1 x3949)) (x530 x3949)))
(assert (x2673 x3358))
(assert (= (and x1816 x6908) x3817))
(assert (x2673 x3685))
(assert (= (and x6787 x639) x6630))
(assert (> (x3305 64 x544 100) 10000))
(assert (x2673 x9127))
(assert (= (x3305 64 x261 100) (x530 (x3305 64 x261 100))))
(assert (x2673 x453))
(assert (x2673 x2505))
(assert (x4097 x2692 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7463 36)))
(assert (< 10000 (x3305 64 x2090 12)))
(assert (= x8741 (and x5766 (not x7168))))
(assert (x2673 x8396))
(assert (= x4354 (and x4 x2425)))
(assert (x2673 x8374))
(assert (x2673 x6038))
(assert (= (x530 (x3305 64 x5331 36)) (x3305 64 x5331 36)))
(assert (= (x1802 (x3305 64 x6693 100)) 100))
(assert (= (x1802 (x3305 64 x1650 100)) 100))
(assert (x2673 x1258))
(assert (= x3341 (and (not x518) x7421)))
(assert (x8339 x5548))
(assert (x2673 x1450))
(assert (x2673 x5118))
(assert (x2673 x978))
(assert (x2673 x4321))
(assert (= x8500 (and (not x2404) x4204)))
(assert (x2673 x7424))
(assert (x8339 x3515))
(assert (= x3450 (or x1637 x6095)))
(assert (x8339 x914))
(assert (not (x669 (x3305 64 x132 100))))
(assert (= (=> (and (= x4497 x2275) (= x3571 x3255) (= x6071 x7276) (= x3703 x482) (= x2046 x8681) (= x5079 x7923) (= x7367 x5979) (= x4298 x1496) (= x6121 x6255) (= x4677 x3223)) x8677) x5451))
(assert (x2673 x4892))
(assert (= (and (not x396) x5068) x4667))
(assert (> (x3305 64 x2608 100) 10000))
(assert (x2673 x4677))
(assert (x2673 x294))
(assert (x2673 x7487))
(assert (x7454 x3560))
(assert (x2673 x2220))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7290 100)))
(assert (x4744 x8935))
(assert (= x5348 (or x2953 x3069)))
(assert (= (x4290 (x3305 64 x683 36)) x683))
(assert (x2673 x8373))
(assert (= (x3305 64 x6932 100) (x530 (x3305 64 x6932 100))))
(assert (= x3521 (and (not x1427) x1395)))
(assert (x2673 x7566))
(assert (= x7314 (and x5189 (not x656))))
(assert (x1240 x7136))
(assert (x2673 x5933))
(assert (< 10000 (x3305 64 x8666 100)))
(assert (= x4184 (and x880 (not x8011))))
(assert (=> (<= x2874 10000) (= 0 (x530 x2874))))
(assert (x4097 x2757 256))
(assert (= (x1802 (x3305 64 x1442 100)) 100))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2619 100)))
(assert (not (x669 (x3305 64 x5680 100))))
(assert (not (x669 (x3305 64 x2145 36))))
(assert (x4744 x6429))
(assert (x8339 x3360))
(assert (x2673 x3001))
(assert (x7454 x7219))
(assert (x2673 x2189))
(assert (= x8138 (=> (and (= false x8276) (= true x7968)) x3445)))
(assert (= 64 (x967 (x3305 64 x7735 100))))
(assert (x1240 x4484))
(assert (x2673 x3882))
(assert (x2673 x5486))
(assert (= x1944 (or x8676 x4228)))
(assert (x2673 x5983))
(assert (x2673 x2001))
(assert (x8339 x5237))
(assert (x2673 x4423))
(assert (= x936 (and (not x7139) x6944)))
(assert (= (x3305 64 x2090 12) (x530 (x3305 64 x2090 12))))
(assert (= (x967 (x3305 64 x7358 100)) 64))
(assert (= (x4290 (x3305 64 x2774 100)) x2774))
(assert (x2673 x2714))
(assert (x4744 x6063))
(assert (x669 2177969240))
(assert (= x8026 (x4290 (x3305 64 x8026 6))))
(assert (= x1143 (and x7357 (not x993))))
(assert (=> (>= 10000 x8946) (= (x530 x8946) 0)))
(assert (x8339 x5554))
(assert (x2673 x3977))
(assert (= (x4290 (x3305 64 x776 100)) x776))
(assert (x2673 x6556))
(assert (= 100 (x1802 (x3305 64 x1586 100))))
(assert (< 10000 (x3305 64 x6854 100)))
(assert (=> (<= x544 10000) (= 0 (x530 x544))))
(assert (= (x967 (x3305 64 x368 100)) 64))
(assert (x2673 x8316))
(assert (= (x1802 (x3305 64 x4217 100)) 100))
(assert (= 64 (x967 (x3305 64 x8700 0))))
(assert (= (and x5033 (not x3843)) x1249))
(assert (= x1419 (=> (= x6528 (= 0 x1093)) (and (=> (and x6528 (and (= x3134 true) (= false x6565))) x3445) (=> (and (not x6528) (and (= x5087 x5055) (= x6190 x5195) (= x7986 x4765) (= x8998 x3796) (= x4715 x6855) (= x1977 x2159) (= x8721 x1825) (= x6952 x5769) (= x3391 x6965) (= x4727 x6654))) x2194)))))
(assert (x2673 x6055))
(assert (= x2018 (x4290 (x3305 64 x2018 100))))
(assert (=> (>= 10000 x5931) (= (x530 x5931) 0)))
(assert (= (or x8240 x655) x7754))
(assert (not (x669 (x3305 64 x1448 100))))
(assert (x2673 x2099))
(assert (x2673 x7436))
(assert (x2673 x720))
(assert (= x2858 (x4290 (x3305 64 x2858 100))))
(assert (x2673 x4863))
(assert (x8339 x1924))
(assert (= (x4290 (x3305 64 x813 100)) x813))
(assert (x2673 x324))
(assert (x2673 x6185))
(assert (x2673 x1234))
(assert (= x4099 (and x5642 x3388)))
(assert (x2673 x6494))
(assert (= x7571 (x4290 (x3305 64 x7571 100))))
(assert (= 64 (x967 (x3305 64 x8352 2))))
(assert (x7454 x7538))
(assert (= (x4290 (x3305 64 x4655 36)) x4655))
(assert (x7454 x4082))
(assert (= (x1802 (x3305 64 x7581 36)) 36))
(assert (= x6662 (and x2947 x6100)))
(assert (x2673 x5736))
(assert (x8339 300))
(assert (x2673 x7450))
(assert (x2673 x3179))
(assert (x8339 x3745))
(assert (= x519 (and x4866 (not x699))))
(assert (x2673 x2358))
(assert (= (x530 (x3305 64 x4661 100)) (x3305 64 x4661 100)))
(assert (x2673 x1836))
(assert (= 100 (x1802 (x3305 64 x4761 100))))
(assert (= (x967 (x3305 64 x2145 36)) 64))
(assert (x2673 x565))
(assert (= (=> (and (= (x7405 (+ 96 x2187)) x4757) (= (x753 x4757) x7748) (= x4570 (not (> x1115 128))) (= (x7405 (+ 96 x2030)) x8361)) (and x4570 x863)) x5729))
(assert (x2673 x5455))
(assert (x2673 x6509))
(assert (x2673 x2740))
(assert (x7454 x9002))
(assert (not (x669 (x3305 64 x5335 100))))
(assert (x2673 x8464))
(assert (x2673 x1546))
(assert (= x8075 (x4290 (x3305 64 x8075 36))))
(assert (= x7584 (x4290 (x3305 64 x7584 100))))
(assert (=> (>= 10000 x8615) (= 0 (x530 x8615))))
(assert (not (x669 (x3305 64 x261 100))))
(assert (= (and x3920 (not x2181)) x7477))
(assert (x7454 x3887))
(assert (x2673 x8159))
(assert (= 64 (x967 (x3305 64 x2024 100))))
(assert (x4744 x7319))
(assert (= (and x4589 x2711) x505))
(assert (= (x3305 64 x2608 100) (x530 (x3305 64 x2608 100))))
(assert (= x3116 (and x2277 x3141)))
(assert (x2673 x5681))
(assert (x4744 x1822))
(assert (x2673 x3621))
(assert (= 100 (x1802 (x3305 64 x1621 100))))
(assert (= (or x5393 (and x477 (not x4876))) x424))
(assert (x2673 x707))
(assert (x2673 x1227))
(assert (= (x530 (x3305 64 x7877 100)) (x3305 64 x7877 100)))
(assert (x4097 x7319 32))
(assert (= 64 (x967 (x3305 64 x261 100))))
(assert (x2673 x2257))
(assert (x2673 x5680))
(assert (= x5056 (=> (and (= x7067 (x7405 (+ x5829 96))) (= (x8006 x7067) x1457) (= x5196 (not (< 128 x725))) (= (x7405 (+ x6520 96)) x842)) (and x5196 x1185))))
(assert (x2673 x549))
(assert (= 36 (x1802 (x3305 64 x3742 36))))
(assert (= (and x5068 x396) x925))
(assert (> (x3305 64 x683 36) 10000))
(assert (= x4556 (or x1052 x128 x6500 x8752 x7781 x386 x7476 x7717)))
(assert (= (x1802 (x3305 64 x5340 100)) 100))
(assert (= (or x2878 x1547) x1134))
(assert (= (and x2752 x4730) x3218))
(assert (x4744 x6040))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2652 100)))
(assert (not (x669 (x3305 64 x2313 100))))
(assert (= (x4290 (x3305 64 x1166 36)) x1166))
(assert (x2673 x6609))
(assert (x2673 x3425))
(assert (= (x4290 (x3305 64 x5488 100)) x5488))
(assert (x8339 x1362))
(assert (x2673 x3679))
(assert (x2673 x1384))
(assert (=> (>= 10000 x9078) (= (x530 x9078) 0)))
(assert (=> (>= 10000 x3109) (= 0 (x530 x3109))))
(assert (x2673 x2077))
(assert (x2673 x7248))
(assert (x4097 x434 256))
(assert (x2673 x4540))
(assert (x2673 x1251))
(assert (= x5500 (=> (and (= x8268 true) (= 36 x7801) (= x4256 false)) x8273)))
(assert (x2673 x7338))
(assert (x2673 x2654))
(assert (x2673 x3156))
(assert (x4097 x7779 256))
(assert (= x8072 (or (and x5328 (not x6628)) x3145)))
(assert (= (and x153 (not x173)) x3468))
(assert (x2673 x1281))
(assert (x2673 x5594))
(assert (x2673 x8947))
(assert (x2673 x5300))
(assert (x2673 x2663))
(assert (x2673 x2757))
(assert (= x6537 (and x965 x1538)))
(assert (x2673 x5371))
(assert (=> (>= 10000 x8777) (= (x530 x8777) 0)))
(assert (x2673 x3758))
(assert (< (x3305 64 x7892 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4866 (and (not x4850) x5161)))
(assert (x4744 x3723))
(assert (x2673 x4638))
(assert (x2673 x1243))
(assert (= x2461 (=> (and (= true x7911) (= false x3208)) x3445)))
(assert (= (x4290 (x3305 64 x3548 36)) x3548))
(assert (x2673 x3421))
(assert (x2673 x1677))
(assert (x4744 x4082))
(assert (x2673 x1897))
(assert (x2673 x5404))
(assert (= (and x4195 x7264) x1637))
(assert (x2673 x2087))
(assert (= x8887 (=> (= x463 (= 0 x7728)) (and (=> (and x463 (and (= x1078 false) (= true x6365) (= x7801 x6568))) x8273) (=> (and (= x3638 x7380) (not x463)) x7544)))))
(assert (= (=> (and (= (+ 31 x2371) x6833) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6833) x7231) (<= 481 x7231) (>= 606 x7231) (= x7231 x6923)) x3042) x6134))
(assert (= (x1802 (x3305 64 x1272 36)) 36))
(assert (x2673 x5550))
(assert (< (x3305 64 x3911 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8298))
(assert (x2673 x489))
(assert (x4097 x5574 256))
(assert (x8339 x6666))
(assert (= (and x8366 x2210) x6064))
(assert (x2673 x200))
(assert (x2673 x3114))
(assert (< 10000 (x3305 64 x5718 100)))
(assert (x2673 x6116))
(assert (x4744 x1927))
(assert (x4744 x2985))
(assert (x4097 x7861 256))
(assert (x7454 x2085))
(assert (= (and x5696 (not x1698)) x8978))
(assert (= (x4290 (x3305 64 x930 100)) x930))
(assert (x8339 x6298))
(assert (x2673 x5503))
(assert (= x5270 (x4290 (x3305 64 x5270 100))))
(assert (x2673 x1098))
(assert (= x2009 (and x5793 (not x3533))))
(assert (> (x3305 64 x4761 100) 10000))
(assert (=> (<= x5440 10000) (= 0 (x530 x5440))))
(assert (= (and (not x8678) x2203) x7214))
(assert (= (=> (and (= (= x4525 x2252) x6138) (= x1554 (x7405 (+ x476 4))) (= (x7405 (+ x1554 32)) x6519) (= 36 x8787) (= x8787 (x7190 (- x6519 x476)))) (and (=> (and (and (= x8352 (+ 1 x1166)) (>= 127 x4702) (= x2342 false) (= false x4950) (= (x8042 x7624) x541) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x2896) (>= 253 x1166) (= x7624 (x3305 64 x1166 36)) (= x1306 x8869) (= 36 x5813) (= (x484 x4894) x7614) (= (= x541 0) x2760) (>= 127 x4702) (<= 1 x7614) (= x2340 x3015) (= (+ 1 x1166) x4175) (<= x4525 1461501637330902918203684832716283019655932542975) (= x4525 x4894) (>= x4525 1) (= 3628442803 x1004)) (not x6138)) (and (=> (and (= x6787 (= x541 1)) (not x2760)) (and (=> (and (and (= (+ 1 x981) x7904) (= (+ x346 1) x9039) (= x1591 (+ 1 x136)) (= (x3305 64 x136 100) x244) (= x6481 (+ x8352 1)) (= (x4588 x4904 300) x2378) (= (x3305 64 x2212 100) x637) (= (+ x6531 1) x3892) (= x8163 128) (= (= 0 x2378) x4197) (= x2083 (x7941 x7318)) (= (+ x1591 1) x346) (not (> x2378 x1045)) (= x136 (+ 1 x2471)) (= x4343 (x7941 x244)) (= x2145 (+ x8352 1)) (= x6373 (x7445 x7693)) (= (+ 1 x6531) x5827) (= (x3305 64 x2145 36) x1961) (= x791 (x7941 x2840)) (not (< x1045 x2378)) (= (+ x346 1) x7428) (<= x8352 243) (= (x8042 x1961) x4904) (= (+ x2378 31) x1045) (= x706 (x3305 64 x2471 100)) (= x6719 (x7941 x637)) (= (x3305 64 x162 100) x7318) (= (+ 1 x162) x6531) (= (x7941 x706) x6659) (= (+ x9039 1) x2212) (= (x7941 x3674) x105) (= x7637 (x3305 64 x981 100)) (= x9105 (+ 1 x2145)) (= x8283 (+ 1 x2145)) (= x3872 (x8782 128)) (= (+ x9105 1) x981) (= x2099 (+ x9105 1)) (= (+ x2212 1) x3161) (= (x3305 64 x9039 100) x5232) (= x8054 (x7941 x7637)) (= x162 (+ 1 x2212)) (= (x3305 64 x8352 6) x7693) (= x302 (+ 1 x162)) (= x134 (x3305 64 x1591 100)) (= (x3305 64 x6531 100) x2923) (= (+ 1 x136) x4364) (= (x7941 x5232) x5416) (not (> x2378 x3872)) (= x8490 0) (= (+ x2471 1) x3250) (= (+ 1 x9039) x5455) (= x2471 (+ x981 1)) (= x2661 (x7941 x134)) (= x3725 (+ x1591 1)) (= (x7941 x2923) x8526) (>= 65535 x6373) (= (x3305 64 x9105 100) x3674) (<= 1 x8352) (= x2840 (x3305 64 x346 100))) x6787) (and (=> (and (= 512 x5645) x4197) x3497) (=> (and (and (= x1875 (+ x2378 x4218)) (= (x5917 31 x2378) x9006) (= x7967 (* 32 (ite (= 0 x9006) 1 0))) (= (+ 128 x1947 x9006) x5476) (= x1947 (* 32 (ite (= x9006 0) 1 0))) (= (+ x9006 x7967 480) x4218) (or (= 0 x1947) (= 32 x1947)) (or (= x7967 32) (= x7967 0)) (= (> x1875 x4218) x8416)) (not x4197)) (and (=> x8416 x6327) (=> (and (not x8416) (= x461 x4218)) x3106))))) (=> (and (= x8086 (= x541 2)) (not x6787)) (and (=> (and (= (= x541 3) x4785) (not x8086)) (and (=> (and (= (= x541 4) x2319) (not x4785)) (and (=> (and (= x1960 (= x541 5)) (not x2319)) (and (=> (and (not x1960) (= x1291 (= x541 6))) (and (=> (and x1291 (and (= (x2517 x8869) x6725) (< (+ x4638 x1529) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x8042 x1398) x4927) (>= x3235 x4638) (= x1398 (x3305 64 x7239 36)) (= (x484 x8869) x5568) (= 128 x768) (= x10 (+ 1 x7239)) (<= x8352 250) (= x8049 (x8042 x6820)) (= (+ 1 x8352) x3895) (<= 0 x575) (>= x2491 1) x7181 (>= 4294967295 x5454) (= x7239 (+ 1 x3076)) (>= x5568 1) (= x6820 (x3305 64 x3076 36)) (= (x4778 x4894) x8429) x2274 (= (+ x4638 x6725) x575) (= x2806 (x3305 64 x4322 36)) (= (x3690 x4894) x342) (= (+ 1 x8352) x4322) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4638 x6725)) (= (x4778 x8869) x1529) (= x2274 (<= x342 (x4165 x4894))) (= (x8042 x2806) x2040) (= (x3305 64 x8352 36) x3398) (= (+ x4322 1) x3076) (= x7424 (+ 1 x7239)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x575) (>= x8352 1) (= (+ 1 x4322) x2078) (= x4243 (+ 1 x7239)) (= (x3690 x8869) x1346) (= x7084 (+ x3076 1)) (= (- x8429 x4638) x7945) (= (x8042 x3398) x4638) (= x3235 (x4778 x4894)) (= x3260 x575) (= x7181 (= x1346 (x4165 x8869))))) x2902) (=> (and (= (= 7 x541) x3202) (not x1291)) (and (=> (and x3202 (and (>= x8352 1) (= x1230 (x3305 64 x8352 2)) x6381 (= (x484 x8869) x3824) (>= x5947 1) (<= 1 x3824) (= (+ x8352 1) x3203) (<= x6536 4294967295) (= x7724 (x8841 x1230)) (= (= x4647 (x3349 x8869)) x5132) (= x5581 (+ x8352 1)) (= x6381 (>= (x3349 x4894) x7234)) (= (+ x8352 1) x3311) (= (x4778 x8869) x4647) x5132 (<= x8352 253) (= x779 128) (<= x7724 1461501637330902918203684832716283019655932542975) (= (x4778 x4894) x7234))) x5783) (=> (and (and (= x5258 (= 8 x541)) (or (and (and x4791 (>= 253 x8352) (<= 1 x7344) (<= 1 x8352) (= (x484 x8869) x1132) (= x7775 (x3305 64 x8352 36)) (= x5748 (+ 1 x8352)) x1936 (<= x6609 4294967295) (<= 1 x1132) (= (x4778 x4894) x8632) (= x1936 (>= (x4974 x4894) x8632)) (= x7076 (+ x8352 1)) (= 128 x1504) (= (= x1385 (x4974 x8869)) x4791) (= (+ x8352 1) x4971) (= (x8042 x7775) x667) (= (x4778 x8869) x1385)) x5258) (and (not x5258) (= x5748 x8352)))) (not x3202)) x4566))))) (=> (and x1960 (and (= 128 x1955) (= (+ 1 x977) x3742) (= x4763 (x7941 x6230)) (<= x8352 242) (= (+ 1 x6090) x3059) (= (x7941 x1278) x2607) (= x3104 (+ 1 x142)) (= x7373 (+ x8099 1)) (= x5474 (x3305 64 x977 6)) (= (+ x8099 1) x4510) (= (x3305 64 x6806 100) x121) (= x4855 (+ x142 1)) (= x3020 (x8042 x5521)) (= (+ 1 x3733) x6896) (= x3863 (x3305 64 x3733 100)) (= (x3305 64 x7373 100) x1278) (= (x8042 x4039) x4534) (= (+ 1 x7113) x3733) (= x5511 (+ x7373 1)) (= x5246 (x7941 x5649)) (= x4130 (x3305 64 x3104 100)) (= x6806 (+ 1 x3733)) (= (+ x3059 1) x3980) (= x2437 (+ x7113 1)) (= (= x3993 0) x5692) (= x196 (+ x6090 1)) (= x3945 (+ x5511 1)) (= (+ x3742 1) x142) (= x2014 (x3305 64 x8099 100)) (= (x7941 x3384) x2884) (= (+ x3993 31) x8264) (= x5177 (x7941 x4466)) (not (< x8264 x3993)) (= (x4588 x3020 300) x3993) (= x5649 (x3305 64 x3059 100)) (= (+ 1 x6806) x8099) (= x2602 (x7941 x2014)) (not (< x8264 x3993)) (= (x5187 128) x182) (= x8463 (x7445 x5474)) (= x5542 (x7941 x3863)) (= x4954 (x7941 x4130)) (= x6090 (+ x5511 1)) (= x8925 0) (<= 1 x8352) (= (+ 1 x3742) x7815) (= x9005 (x7941 x7384)) (not (> x3993 x182)) (= x977 (+ x8352 1)) (= x1804 (+ 1 x977)) (= x5521 (x3305 64 x3742 36)) (= (+ 1 x3059) x309) (= (+ 1 x8352) x2011) (= x8717 (+ 1 x3104)) (= (x3305 64 x142 100) x6230) (= x3384 (x3305 64 x5511 100)) (= x4466 (x3305 64 x6090 100)) (= x4039 (x3305 64 x8352 36)) (= (+ 1 x6806) x8239) (= (x3305 64 x7113 100) x7384) (= (+ 1 x3104) x7113) (= x605 (+ x7373 1)) (>= 65535 x8463) (= (x7941 x121) x4385))) (and (=> (and (not x5692) (and (= x4079 (< x3153 x7215)) (= (+ x3153 x3993) x7215) (= x4547 (x5917 31 x3993)) (= (* 32 (ite (= 0 x4547) 1 0)) x8944) (= (* (ite (= 0 x4547) 1 0) 32) x3881) (= x2706 (+ x4547 x8944 128)) (or (= x8944 0) (= 32 x8944)) (= (+ 480 x3881 x4547) x3153) (or (= 0 x3881) (= x3881 32)))) (and (=> x4079 x3194) (=> (and (= x2371 x3153) (not x4079)) x6134))) (=> (and (= x6923 512) x5692) x3042))))) (=> (and x2319 (and (= x670 (+ 1 x951)) (= (x7941 x326) x1860) (>= x8352 1) (>= x1360 32) (<= x8352 251) (= x4511 (+ x5294 1)) (< (+ x6726 x5296) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x5114 128) x3367) (= x951 (+ 1 x8352)) (<= 1 x5115) (>= 4294967295 x1360) (= (+ 1 x951) x5294) (<= 1 x7987) (>= x452 0) (= (x8042 x25) x2942) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x452) (= (x4778 x4894) x8785) (= x5296 (x8042 x6543)) (= (x4778 x8869) x6726) (= x422 128) (= x8265 (+ x5294 1)) x246 (= x5403 (- x6716 x5296)) (= x246 (= x1922 (x6050 x8869))) (= (<= x3660 (x6050 x4894)) x3539) (= x25 (x3305 64 x5294 36)) (<= x5296 x8785) (< (+ x5753 x5296) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x6716 (x4778 x4894)) (= (x3305 64 x951 100) x326) (= x6543 (x3305 64 x8352 36)) x3539 (= (+ x8352 1) x6895) (= x5753 (x6657 x8869)) (= (x6668 x4894) x3660) (= x5658 x452) (= x1922 (x6668 x8869)) (= (+ 1 x5294) x7412) (= (+ 31 x1360) x4552) (= (+ x5753 x5296) x452) (>= 4294967326 x7987) (= x7987 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4552)))) x6798))) (=> (and (and (= x2264 (>= (x6074 x4894) x7070)) (= (x484 x8869) x3443) (<= x8352 252) (= (+ 1 x5270) x3558) (>= x8352 1) (= (+ 1 x5270) x6358) x8046 (= (x3305 64 x8352 36) x7713) (= x3143 (x7941 x5684)) (= 128 x7487) (= x7070 (x4778 x4894)) x2264 (= (x8042 x7713) x4663) (>= x3443 1) (= (x4778 x8869) x8427) (<= x4333 4294967295) (= (x3305 64 x5270 100) x5684) (<= 1 x3037) (= x8046 (= (x6074 x8869) x8427)) (= x5270 (+ x8352 1)) (= (+ x5270 1) x376) (= x254 (+ x8352 1))) x4785) x7292))) (=> (and (and (= (x3305 64 x7193 100) x6809) (= x896 (x7941 x5045)) (not (> x5401 x4864)) (= (+ 1 x2750) x2858) (= (x7941 x3584) x5880) (= (+ 1 x8238) x7193) (= x3248 (x3305 64 x4761 100)) (= x5999 (= 0 x5401)) (= (x7941 x6355) x8747) (= x1485 (+ x8238 1)) (= x1272 (+ x8352 1)) (not (< x4864 x5401)) (= x6146 (+ x6251 1)) (= x4590 (+ x7193 1)) (= (x7941 x6809) x7083) (= (+ 1 x744) x2750) (= (+ 1 x5127) x2064) (= x6251 (+ 1 x1272)) (= (x3305 64 x2750 100) x691) (= (x3305 64 x744 100) x5901) (= (+ 1 x7193) x744) (= x2614 (x3305 64 x368 100)) (= x9117 (x3305 64 x1272 36)) (= x6712 0) (= x3584 (x3305 64 x5127 100)) (= x5401 (x4588 x3586 300)) (= (x6412 128) x3440) (= (+ x368 1) x2191) (= (x8042 x9117) x3586) (<= x8352 243) (= (+ 1 x2750) x1307) (= (+ x6251 1) x5127) (= (x3305 64 x8238 100) x4666) (= (x3305 64 x6251 100) x6355) (= x5193 (+ x744 1)) (= x2941 (x7445 x177)) (= (x3305 64 x2858 100) x1832) (= (+ x8352 1) x4947) (= (+ x5127 1) x368) (= x7701 (x7941 x1832)) (= x4241 (+ x1051 1)) (= (+ 1 x1051) x8400) (>= x8352 1) (= (+ 1 x4761) x8238) (>= 65535 x2941) (not (< x3440 x5401)) (= x565 (x7941 x691)) (= x2905 128) (= x177 (x3305 64 x8352 6)) (= x3797 (+ 1 x1272)) (= x6247 (+ x2858 1)) (= (+ x5401 31) x4864) (= x1051 (+ x2858 1)) (= (x7941 x3248) x2204) (= x6037 (x7941 x4666)) (= (x7941 x2614) x4433) (= (+ 1 x4761) x7962) (= x4761 (+ 1 x368)) (= x5045 (x3305 64 x1051 100)) (= x3093 (x7941 x5901))) x8086) (and (=> (and (= x7664 512) x5999) x6711) (=> (and (not x5999) (and (= (+ x8109 128 x2003) x5268) (= (x5917 31 x5401) x8109) (or (= x2003 32) (= x2003 0)) (= (* (ite (= x8109 0) 1 0) 32) x838) (or (= x838 32) (= x838 0)) (= x2003 (* 32 (ite (= x8109 0) 1 0))) (= (+ x5780 x5401) x2495) (= (< x5780 x2495) x2025) (= x5780 (+ 480 x838 x8109)))) (and (=> x2025 x2033) (=> (and (= x6106 x5780) (not x2025)) x8587))))))))) (=> (and x2760 (and (= (+ 1 x3724) x4852) (= x3644 (x8042 x8338)) (= (+ 1 x3088) x2169) (= x5884 (+ x3724 1)) (>= 65535 x1849) (= (+ x8352 1) x432) (= x3088 (+ x432 1)) (= x8098 (<= x1279 (x4579 x4894))) (= (x8841 x3939) x786) (<= x786 1461501637330902918203684832716283019655932542975) (= (+ x3088 1) x3724) (<= x7525 1461501637330902918203684832716283019655932542975) x2237 (= x7525 (x8841 x1057)) (<= x8352 250) (= x1663 (x484 x8869)) (= (+ x8352 1) x5787) (= (x7445 x2582) x1849) (= (x3305 64 x8352 2) x1057) (= (x4778 x8869) x7048) (= x8338 (x3305 64 x3724 36)) (<= x7966 4294967295) (= (+ x432 1) x3372) (= (x4778 x4894) x1279) (= x2582 (x3305 64 x432 6)) x8098 (<= 1 x1692) (= 128 x7081) (<= 1 x8352) (>= x1663 1) (= (x3305 64 x3088 2) x3939) (= (+ x3724 1) x3214) (= (= x7048 (x4579 x8869)) x2237))) x3707))) (=> (and x6138 (and (and (= (x520 x8685) x2197) (= (x3305 64 x1306 2) x8685) (= x8445 x3015) (= x2452 3628442803) (= x4391 false) (<= x3015 57896044618658097711785492504343953926634992332820282019728792003956) (= false x214) (= (ite x1337 1 0) x2335) (= x8445 x9035) (= x5332 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= x4798 x8094) (= (x484 x2252) x2839) (<= x4532 127) (= x3574 36) (= (< x4972 x2197) x1337) (= x8022 (x3305 64 x1306 1)) (<= 1 x2839) (= (x5790 x8022) x4972) (>= 127 x4532) (= (* x3015 1000000000) x8094)) (or (and (= 0 x2335) x1337) (and (not x1337) (and (not (> x702 x4972)) (= x702 (x7190 (- x4972 x2197))) (not (> x4798 x702))))))) x8981))) x4417))
(assert (x2673 x4094))
(assert (x2673 x3907))
(assert (= 36 (x1802 (x3305 64 x8849 36))))
(assert (= (x1802 (x3305 64 x6237 100)) 100))
(assert (x4744 x120))
(assert (= (x1802 (x3305 64 x7290 100)) 100))
(assert (= (and x993 x7357) x5206))
(assert (= x9039 (x4290 (x3305 64 x9039 100))))
(assert (x2673 x2271))
(assert (< 10000 (x3305 64 x5750 100)))
(assert (x7454 x5166))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7239 36)))
(assert (x7454 x7211))
(assert (=> (>= 10000 x6319) (= (x530 x6319) 0)))
(assert (x2673 x8239))
(assert (x2673 x4481))
(assert (x4744 x7779))
(assert (not (x669 (x3305 64 x2619 100))))
(assert (x2673 x2936))
(assert (= (x1802 (x3305 64 x981 100)) 100))
(assert (x2673 x198))
(assert (> (x3305 64 x176 100) 10000))
(assert (x2673 x2003))
(assert (= (x530 (x3305 64 x1442 100)) (x3305 64 x1442 100)))
(assert (= (and x8920 x7100) x7617))
(assert (x2673 x9088))
(assert (x2673 x8324))
(assert (x669 1341992515))
(assert (= (x3305 64 x3911 100) (x530 (x3305 64 x3911 100))))
(assert (= 12 (x1802 (x3305 64 x4533 12))))
(assert (= (and (not x6287) x2234) x8111))
(assert (x2673 x7627))
(assert (x669 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (not (x669 (x3305 64 x4248 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6090 100)))
(assert (x2673 x4217))
(assert (=> (>= 10000 x7281) (= (x530 x7281) 0)))
(assert (= x65 (and (not x4079) x8599)))
(assert (x2673 x865))
(assert (= (=> (= x2586 (= 0 x4090)) (and (=> (and (= x3120 x5112) (not x2586)) x4975) (=> (and x2586 (and (= x5940 false) (= x7801 x6163) (= x7839 true))) x8273))) x1948))
(assert (x7454 x8127))
(assert (x8339 x6231))
(assert (x2673 x2608))
(assert (= (x4290 (x3305 64 x4542 100)) x4542))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1587 100)))
(assert (> (x3305 64 x6206 100) 10000))
(assert (x8502 x6887))
(assert (> (x3305 64 x4216 100) 10000))
(assert (x2673 x1927))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2736 100)))
(assert (x2673 x7751))
(assert (= x4905 (or (and x7413 x5822) (and x6616 x5976) (and x5600 x1483) (and x3035 x329) (and x186 x6983) (and x8940 x8550) (and x6393 x984) (and x4286 x8161) (and x2140 x2100))))
(assert (x4097 x5964 256))
(assert (x2673 x1362))
(assert (= x3422 (and x5831 (not x6128))))
(assert (x2673 x1761))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6932 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x324 36)))
(assert (x2673 x3729))
(assert (x2673 x7443))
(assert (x2673 x6475))
(assert (= (=> (and (or x8863 (not x8863)) (= (= x1713 0) x8863)) x6852) x599))
(assert (= 64 (x967 (x3305 64 x176 100))))
(assert (= x585 (or x4383 x5857)))
(assert (x2673 x8939))
(assert (x2673 x8735))
(assert (= 100 (x1802 (x3305 64 x1113 100))))
(assert (x2673 x4186))
(assert (x4097 x1091 256))
(assert (> (x3305 64 x3421 36) 10000))
(assert (= (x4290 (x3305 64 x4761 100)) x4761))
(assert (= x4053 (and (not x7757) x6307)))
(assert (x2673 x1752))
(assert (x4744 x5762))
(assert (x2673 x8711))
(assert (= x2499 (=> (and (= x5640 x1861) (= x3936 x4115) (= x7472 x108) (= x6793 x4167)) x1873)))
(assert (= x5737 (or x3315 x283)))
(assert (= x382 (=> (and (and (<= x8278 3) (or (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639807) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x476) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x476) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x476))) (= x2835 false) (= (x9080 x2379) x5432) (= 1 x7474) (> x1224 x3692) (= (+ 1 x3099) x2569) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x476) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x476)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x476) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (= x1224 (x7405 (+ 96 x3692))) (= x7150 (x3305 64 x2379 11)) (or (>= x476 115792089237316195423570985008687907853269984665640564039457584007913129639905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x476) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x476) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x476))) (= x2379 x6451) (> x3692 x476) (= x8769 false) (= x3228 (+ x2569 1)) (= x5432 0) (= x1788 (x3305 64 x8142 10)) (= x3099 (x3305 64 x2379 11)) (= x7251 false) (= false x8763) (= x203 x2379) (= x3692 (x7405 (+ x476 32))) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x3389 0) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x3389 (x2921 x7150)) (= 1 x5265) (= (x8274 x476) x2379) (= true x4247) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639933)) (and (and (= x7939 (<= x1244 x7714)) (and (= x7714 (x3412 x7501)) (= x7501 x686))) (and (<= 1 x8696) (>= x7561 1) (= x7561 (x484 x1306)) (= x8850 false) (= x200 4) (<= x2266 127) (= x3860 false) (>= 127 x1733) (= false x980) (= false x485) (= (+ x1434 1) x3949) (= false x2474) (>= x2067 1) (= x2068 4) (>= 3 x4561) (= x6926 (= x7583 x3979)) (= x1341 x8483) (= false x704) (= (+ x3949 1) x6949) (= (x484 x1306) x8696) (= false x3262) (<= x8868 127) (= true x6070) (= (x3305 64 x9096 11) x1434) (= (x1443 x6949) x638) (>= 3 x4719) (= x7833 false) (= false x1712) (= x437 true) (= x9096 x1341) (= false x5636) (= (x4445 x3949) x8344) (= (= x4561 x4719) x4562) (= x366 x3538) (= x911 2177969240) (= x7250 false) (= x3624 false) (>= 127 x8868) (= 36 x7896) (= x570 false) (>= 127 x1733) (= false x5955) (= x9096 x203) (<= 1 x7645) (= x7494 x9127) (= false x7268) (not x6926) (= false x236) (= x8152 false) (= x3581 false) (= false x40) (= 4044338564 x4181) (= (x484 x1306) x2067) (= (x6342 x1434) x4719) x4562 (= 3008604839 x5141) (>= 127 x2266) (= x4561 (x4634 x9096)) (= (x9112 128) x7645)))) (and (=> x7939 x6702) (=> (and (and (= x883 true) (= x1198 false) (= x6368 x883)) (not x7939)) x5994)))))
(assert (= x7686 (x4290 (x3305 64 x7686 12))))
(assert (x2673 x8399))
(assert (x2673 x5311))
(assert (x2673 x1297))
(assert (x2673 x8784))
(assert (x2673 x9050))
(assert (< 10000 (x3305 64 x68 36)))
(assert (= (or x1303 x5364 x3478) x2436))
(assert (x2673 x2871))
(assert (< 10000 (x3305 64 x439 100)))
(assert (x2673 x303))
(assert (=> (<= x4094 10000) (= (x530 x4094) 0)))
(assert (= x6240 (or (and x1014 x2448) (and x3632 x4389) (and x5024 x7697) (and x2164 x8375) (and x4126 x7541))))
(assert (not (x669 (x3305 64 x142 100))))
(assert (= (x967 (x3305 64 x2858 100)) 64))
(assert (< (x3305 64 x3892 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2850))
(assert (x2673 x5023))
(assert (x4744 x3659))
(assert (x2673 x308))
(assert (x2673 x5673))
(assert (x2673 x3087))
(assert (= (x1802 (x3305 64 x2212 100)) 100))
(assert (x2673 x7019))
(assert (x7454 x6067))
(assert (=> (<= x2736 10000) (= 0 (x530 x2736))))
(assert (x7454 x5483))
(assert (x2673 x3664))
(assert (x8502 (ite (= x4045 0) 1 0)))
(assert (not (x669 (x3305 64 x8075 36))))
(assert (x2673 x259))
(assert (x2673 x1416))
(assert (not (x669 (x3305 64 x6693 100))))
(assert (x2673 x7074))
(assert (x2673 x1033))
(assert (x2673 x7739))
(assert (x2673 x7813))
(assert (= (x4290 (x3305 64 x8225 100)) x8225))
(assert (x2673 x3659))
(assert (x4097 x5401 32))
(assert (x5050 x466))
(assert (= x373 (=> (and (= x5669 (x6321 x1997)) (= (x7405 (+ x8735 32)) x7849) (= (not (< x7849 x3355)) x7696)) (and (=> (= x7849 x3354) x1059) x7696))))
(assert (x4097 x5448 256))
(assert (= (x3305 64 x544 100) (x530 (x3305 64 x544 100))))
(assert (x4744 x5731))
(assert (x4097 x2314 256))
(assert (x1240 x276))
(assert (= (or x4436 x7590) x9055))
(assert (x2673 x8377))
(assert (= (x967 (x3305 64 x8099 100)) 64))
(assert (x2673 x2891))
(assert (x4744 x9002))
(assert (= (x4290 (x3305 64 x9096 11)) x9096))
(assert (= (x967 (x3305 64 x6769 100)) 64))
(assert (not (x669 (x3305 64 x5913 100))))
(assert (= 100 (x1802 (x3305 64 x5173 100))))
(assert (= (x1802 (x3305 64 x7193 100)) 100))
(assert (x2673 x1444))
(assert (not (x669 (x3305 64 x830 36))))
(assert (= (x4290 (x3305 64 x2253 100)) x2253))
(assert (=> (<= x1272 10000) (= 0 (x530 x1272))))
(assert (x2673 x3894))
(assert (not (x669 (x3305 64 x7673 100))))
(assert (x2673 x4715))
(assert (x8339 x1517))
(assert (< 10000 (x3305 64 x2736 100)))
(assert (x2673 x2839))
(assert (x4097 x4366 32))
(assert (= (x967 (x3305 64 x5750 100)) 64))
(assert (x2673 x4651))
(assert (= 6 (x1802 (x3305 64 x8148 6))))
(assert (= (and x5916 x6589) x6858))
(assert (< (x3305 64 x162 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x8644 10000) (= (x530 x8644) 0)))
(assert (x8339 x466))
(assert (not (x669 (x3305 64 x9127 10))))
(assert (= (and x4576 x4447) x7195))
(assert (= (and x8543 (not x7137)) x561))
(assert (x2673 x9064))
(assert (x8339 x7317))
(assert (= x3210 (x4290 (x3305 64 x3210 100))))
(assert (= (and (not x4112) x6403) x7841))
(assert (= x2752 (or x2044 x110 x88 x4888 x7978)))
(assert (= (x1802 (x3305 64 x2379 11)) 11))
(assert (x2673 x3443))
(assert (x8339 x1215))
(assert (x2673 x6801))
(assert (x5050 x5237))
(assert (= (x530 (x3305 64 x2642 100)) (x3305 64 x2642 100)))
(assert (x2673 x4958))
(assert (x2673 x5092))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x132 100)))
(assert (= (or x5932 x5905 x5310 x1901 x6056) x7263))
(assert (x4097 x3140 32))
(assert (= (x1802 (x3305 64 x132 100)) 100))
(assert (x4744 x6597))
(assert (= (x967 (x3305 64 x5294 36)) 64))
(assert (x2673 x2204))
(assert (x2673 x5257))
(assert (x1240 x1215))
(assert (x2673 x4672))
(assert (x2673 x759))
(assert (= (x3305 64 x176 100) (x530 (x3305 64 x176 100))))
(assert (< (x3305 64 x7354 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5838))
(assert (= (x967 (x3305 64 x719 100)) 64))
(assert (x2673 x9107))
(assert (x2673 x6254))
(assert (= x7063 (=> (= x4324 (= 0 x6759)) (and (=> (and (not x4324) (and (= x8569 x221) (= x6387 x7422) (= x7746 x412) (= x7023 x8346) (= x6862 x6468) (= x6120 x1937) (= x7759 x4238) (= x1475 x7973) (= x2632 x301) (= x1493 x3199))) x3335) (=> (and x4324 (and (= x9119 false) (= true x2225))) x3445)))))
(assert (= x2133 (x4290 (x3305 64 x2133 100))))
(assert (= 100 (x1802 (x3305 64 x4094 100))))
(assert (x8502 (ite (= x3752 0) 1 0)))
(assert (x8502 (ite (= x8109 0) 1 0)))
(assert (x2673 x494))
(assert (x2673 x4913))
(assert (= (x967 (x3305 64 x7718 6)) 64))
(assert (= (or x7530 x4905 x3612 x5991 x2623 x7098 x245 x2543 x3982 x5526 x9029 x5573 x1750 x601 x8501 x8594 x8866 x531 x64 x1372 x6369 x3766 x4173 x7793 x5651 x1813 x4473 x6166 x7591 x7237 x7435 x8970 x1387 x4613 x6076 x6240 x6580 x6747 x7625 x9124 x4872 x3502 x6951) x7590))
(assert (= (x1802 (x3305 64 x2313 100)) 100))
(assert (not (x669 (x3305 64 x1406 100))))
(assert (=> (<= x977 10000) (= 0 (x530 x977))))
(assert (< (x3305 64 x2642 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8777))
(assert (x2673 x6753))
(assert (= (=> (and (= x6689 (x7657 x6511)) (= (x7405 (+ x2372 32)) x8521) (= (not (> x4250 x8521)) x4640)) (and (=> (= x8184 x8521) x6142) x4640)) x7504))
(assert (x2673 x7014))
(assert (= x6007 (and x7061 (not x1213))))
(assert (x2673 x5532))
(assert (= x2268 (=> (and (not (> x1870 x7128)) (= x83 x7128) (= (x239 128) x1870) (= 160 x476)) x6148)))
(assert (< (x3305 64 x881 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3679 36)))
(assert (= 100 (x1802 (x3305 64 x2471 100))))
(assert (= (x530 (x3305 64 x813 100)) (x3305 64 x813 100)))
(assert (= 64 (x967 (x3305 64 x5931 6))))
(assert (x2673 x7330))
(assert (not (x669 (x3305 64 x462 100))))
(assert (x2673 x3755))
(assert (= x6142 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x9020) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x9020) (= x5736 x3283) (> x3283 x9020) (<= x9020 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x3283 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8189)) (= x9020 x3575) (>= x3283 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3283) (= x8189 (x7405 (+ x8184 31)))) x1667)))
(assert (x8339 x7442))
(assert (x2673 x5487))
(assert (x2673 x3522))
(assert (x2673 x1858))
(assert (= (x967 (x3305 64 x8860 36)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5750 100)))
(assert (x2673 x4397))
(assert (not (x669 (x3305 64 x7877 100))))
(assert (x2673 x9123))
(assert (= (and x6113 x4830) x5743))
(assert (x2673 x3059))
(assert (= (or x1559 x6042) x7374))
(assert (= (and x6538 (not x7102)) x1913))
(assert (x2673 x4619))
(assert (x8502 (ite (= x6312 0) 1 0)))
(assert (x2673 x1674))
(assert (= x6598 (x4290 (x3305 64 x6598 100))))
(assert (< (x3305 64 x7822 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x5703 32))
(assert (x2673 x8731))
(assert (x2673 x77))
(assert (x2673 x5621))
(assert (x2673 x1115))
(assert (= (x3305 64 x7822 36) (x530 (x3305 64 x7822 36))))
(assert (x4097 x6231 256))
(assert (= (x530 (x3305 64 x4155 100)) (x3305 64 x4155 100)))
(assert (= 64 (x967 (x3305 64 x930 100))))
(assert (x4744 x5444))
(assert (= (x3305 64 x5219 36) (x530 (x3305 64 x5219 36))))
(assert (x2673 x4760))
(assert (= x144 (and x8923 x1116)))
(assert (x7454 x2006))
(assert (x2673 x3993))
(assert (x2673 x1966))
(assert (x2673 x6635))
(assert (= x1242 (=> (and (= x4668 (x2917 x4432)) (= x4432 (x7405 (+ x6492 96))) (= (x7405 (+ x273 96)) x5006) (= x3727 (not (> x5218 128)))) (and x6857 x3727))))
(assert (< (x3305 64 x1528 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x6281))
(assert (< (x3305 64 x5335 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x140))
(assert (= (x530 (x3305 64 x4365 36)) (x3305 64 x4365 36)))
(assert (x2673 x8439))
(assert (= (x530 (x3305 64 x368 100)) (x3305 64 x368 100)))
(assert (x2673 x1224))
(assert (x2673 x8358))
(assert (x2673 x635))
(assert (< (x3305 64 x776 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x1237 100))))
(assert (x2673 x5243))
(assert (x2673 x7322))
(assert (x2673 x618))
(assert (x8339 x8479))
(assert (x2673 x1914))
(assert (x4744 x3712))
(assert (x2673 x403))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1256 100)))
(assert (x2673 x3844))
(assert (x2673 x913))
(assert (x8339 x2985))
(assert (x2673 x1635))
(assert (x4097 x5893 256))
(assert (x2673 x8516))
(assert (= (x530 3963877391197344453575983046348115674221700746820753546331534351508065746944) 0))
(assert (x2673 x853))
(assert (x4744 x3669))
(assert (x669 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (< 10000 (x3305 64 x3210 100)))
(assert (x2673 x5718))
(assert (= (and x7818 (not x3666)) x1423))
(assert (= (x967 (x3305 64 x2795 100)) 64))
(assert (x2673 x4542))
(assert (x8339 x1064))
(assert (x7454 x6063))
(assert (x4744 x8024))
(assert (= (x3305 64 x271 100) (x530 (x3305 64 x271 100))))
(assert (x7454 x8560))
(assert (=> (>= 10000 x368) (= (x530 x368) 0)))
(assert (= x1085 (or (and x7702 x7703) (and x3656 x954) (and x7858 x2397) (and x7020 x8035) (and x6248 x7869))))
(assert (x2673 x275))
(assert (x2673 x1376))
(assert (x4744 x8327))
(assert (x2673 x8935))
(assert (x2673 x8075))
(assert (x2673 x4646))
(assert (= (x1802 (x3305 64 x6457 100)) 100))
(assert (x4097 x8362 256))
(assert (x9110 x3582))
(assert (x2673 x8602))
(assert (x2673 x5645))
(assert (x2673 x1682))
(assert (not (x669 (x3305 64 x7686 12))))
(assert (x2673 x92))
(assert (x2673 x4703))
(assert (x2673 x2300))
(assert (x2673 x1100))
(assert (not (x669 (x3305 64 x3548 36))))
(assert (= 100 (x1802 (x3305 64 x6807 100))))
(assert (x2673 x2916))
(assert (x2673 x1679))
(assert (x2673 x5662))
(assert (x2673 x4419))
(assert (x2673 x8849))
(assert (x2673 x2006))
(assert (= (x530 (x3305 64 x1953 100)) (x3305 64 x1953 100)))
(assert (= 100 (x1802 (x3305 64 x930 100))))
(assert (x2673 x8472))
(assert (x2673 x8906))
(assert (x2673 x717))
(assert (x2673 x3890))
(assert (x8339 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3679 (x4290 (x3305 64 x3679 36))))
(assert (= (=> (and (= (= 0 x1655) x6480) (or (and (and (= x216 x8001) (= x3352 x5712) (= (x6795 x464) x7880) (= x6653 (x348 x4894)) (= x1655 x1216) (= x3714 x7021) (= x204 x6588) (= x1563 (ite (= x1655 0) x3187 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x999) (= x1368 x353) (= x6205 x7910) (= x999 (+ x6653 x1563)) (= x8296 x2359) (= x143 x4215) (<= 0 x999) (= x944 x1072) (= (- x7880 x1563) x6851) (< (+ x6653 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x7288 x3449) (= x6456 x999)) x6480) (and (not x6480) (and (= x7910 x6205) (= x8296 x2359) (= x4215 x143) (= x216 x8001) (= x1216 x1655) (= x7021 x3714) (= x944 x1072) (= x204 x6588) (= x7288 x3449) (= x353 x1368) (= x3352 x5712))))) x7162) x183))
(assert (x4744 x5184))
(assert (=> (>= 10000 x7773) (= (x530 x7773) 0)))
(assert (< 10000 (x3305 64 x6832 100)))
(assert (< 10000 (x3305 64 x8499 100)))
(assert (x2673 x8392))
(assert (x2673 x4369))
(assert (x2673 x1357))
(assert (x2673 x8696))
(assert (x2673 x3131))
(assert (x7454 x6429))
(assert (x2673 x1501))
(assert (x2673 x7004))
(assert (x2673 x6357))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7806 100)))
(assert (x2673 x5090))
(assert (x2673 x4090))
(assert (< 10000 (x3305 64 x8591 100)))
(assert (< (x3305 64 x5404 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x530 (x3305 64 x939 36)) (x3305 64 x939 36)))
(assert (x2673 x8049))
(assert (x2673 x4491))
(assert (= x5892 (and x1915 x7660)))
(assert (x2673 x3296))
(assert (< (x3305 64 x5711 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7463))
(assert (x2673 x5222))
(assert (x8339 x818))
(assert (= (=> (and (not (< x2891 x3745)) (= (+ 1 x8644) x6789) (= (x7405 (+ 32 x4246)) x4162) (= (+ x5340 1) x4078) (= x306 480) (>= 243 x7791) (= (x3305 64 x5340 100) x3998) (= x3873 (+ 1 x217)) (= (+ x6807 1) x217) (= x4442 (x7405 (+ x3175 32))) (= (+ x2389 1) x759) (>= 18446744073709551615 x262) (<= 14 x7791) (= x4426 (x7405 (+ x1209 32))) (= x1000 (+ x813 1)) (= x1893 (x3305 64 x6672 100)) (= (+ 1 x1000) x6096) (= x2240 (x7190 (- x2846 32))) (<= x3175 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3305 64 x6135 36) x6125) (= x8559 (+ 1 x6135)) (= x261 (+ 1 x6672)) (= (x7405 (+ x4442 32)) x4246) (> x6174 x3175) (= (+ 1 x6807) x8706) (= x7831 480) (not (> x3745 x4397)) (= (x3305 64 x261 100) x5479) (= (x3011 x4635) x262) (= (+ x8644 1) x8073) (= x6174 (x7405 (+ x3342 32))) (= (+ 1 x5340) x813) (= (+ x7791 1) x4737) (= x975 (x8042 x6125)) (= x4195 (= 0 x3745)) (= (+ x217 1) x6672) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x3175)) (= x5259 (x3305 64 x8644 100)) (= 0 x6290) (not (= x3175 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= x5340 (+ 1 x261)) (= (x7941 x6464) x5407) (= x4592 (x7405 (+ x8602 32))) (= (+ 1 x8073) x2389) (= (+ 1 x6135) x6807) (= (x7941 x5479) x247) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3175) (= x4717 (x3305 64 x217 100)) (= x8602 (x7405 (+ x4162 32))) (= (x3305 64 x8073 100) x1245) (= (x7190 (- x6174 x3175)) x2846) (= (x4588 x975 300) x3745) (= (+ 1 x6672) x6473) (= x7677 (x7405 (+ x6686 32))) (= (x3305 64 x1000 100) x592) (= x8250 (x7941 x1245)) (= x8644 (+ x1000 1)) (= (x3305 64 x813 100) x4835) (= (+ x813 1) x8470) (= (x7941 x4835) x4268) (= x4635 (x3305 64 x7791 12)) (= (x3305 64 x2389 100) x1976) (= (+ 1 x261) x2691) (= (x7405 (+ 32 x7677)) x1209) (= x1790 (x7941 x592)) (not (< x4397 x3745)) (= (+ x7791 1) x6135) (= x7051 (x7941 x5259)) (= (x7941 x1976) x2411) (= x2891 (x5689 x3175)) (<= x3175 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x7941 x4717) x5373) (= (+ x3745 31) x4397) (not (= x3175 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= x8241 (x7941 x3998)) (= x3342 (x7405 (+ 32 x4426))) (= (+ x8073 1) x6338) (= (x7941 x1893) x4369) (= (x7405 (+ x4592 32)) x6686) (= x650 (+ 1 x2389)) (= x6464 (x3305 64 x6807 100))) (and (=> (and x4195 (and (= x3819 x4678) (<= x6174 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x9008 x6174) (<= x6174 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x6174 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x3819 x6174) (not (= x6174 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x6174 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6174)) (= (x7405 (+ x6174 32)) x3819))) x1400) (=> (and (not x4195) (and (or (= x1094 0) (= 32 x1094)) (= (x7405 (+ x3745 x4923)) x8975) (or (= x291 0) (= 32 x291)) (= x7270 (x7405 (+ x291 x7817))) (= x6635 (x7405 (+ x6174 x4823))) (= (x7405 (+ x6635 x1094)) x4923) (= x1094 (* (ite (= x4823 0) 1 0) 32)) (= x291 (* (ite (= x4823 0) 1 0) 32)) (= (< x4923 x8975) x6623) (= (x7405 (+ x4823 x3175)) x7817) (= x4823 (x5917 31 x3745)))) (and (=> x6623 x2108) (=> (and (= x2911 x4923) (not x6623)) x968))))) x8767))
(assert (x2673 x37))
(assert (x2673 x4307))
(assert (= (and x7864 x5944) x6747))
(assert (not (x669 (x3305 64 x1486 100))))
(assert (x8339 x3782))
(assert (x4097 x1297 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3459 10000) (= 0 (x530 x3459))))
(assert (= 0 (x530 51607134309459761954548520284799282329936326410793501951915747293203005440)))
(assert (x2673 x6625))
(assert (x2673 x4550))
(assert (x2673 x2773))
(assert (= x110 (and (not x8461) x3983)))
(assert (x8339 x3850))
(assert (x2673 x5491))
(assert (x2673 x6587))
(assert (x2673 x3577))
(assert (< 10000 (x3305 64 x1073 100)))
(assert (= x2736 (x4290 (x3305 64 x2736 100))))
(assert (x2673 x4548))
(assert (=> (>= 10000 x8225) (= 0 (x530 x8225))))
(assert (= (and x8555 (not x5806)) x8050))
(assert (x2673 x4292))
(assert (x2673 x1256))
(assert (=> (<= x5721 10000) (= 0 (x530 x5721))))
(assert (x2673 x5966))
(assert (= (and (not x223) x6236) x212))
(assert (x2673 x3955))
(assert (= (x967 (x3305 64 x6848 100)) 64))
(assert (= (x4290 (x3305 64 x8238 100)) x8238))
(assert (x2673 x8140))
(assert (x2673 x3420))
(assert (not (x669 (x3305 64 x5219 36))))
(assert (> (x3305 64 x1725 100) 10000))
(assert (= x3893 (and (not x7164) x8223)))
(assert (= (x530 (x3305 64 x8060 6)) (x3305 64 x8060 6)))
(assert (> (x3305 64 x6939 100) 10000))
(assert (x2673 x4452))
(assert (= x88 (and x5553 x8655)))
(assert (x4744 x2314))
(assert (x2673 x5533))
(assert (= (x530 1341992515) 0))
(assert (x2673 x2390))
(assert (= (x4290 (x3305 64 x959 100)) x959))
(assert (x2673 x2985))
(assert (x8502 (ite (= 0 x1054) 1 0)))
(assert (x2673 x4956))
(assert (= 36 (x1802 (x3305 64 x2986 36))))
(assert (= 100 (x1802 (x3305 64 x2389 100))))
(assert (x8339 x5912))
(assert (x2673 x1163))
(assert (x7454 x6294))
(assert (x2673 x2212))
(assert (x4744 x2375))
(assert (= x7750 (and x3406 x1558)))
(assert (x2673 x1844))
(assert (not (x669 (x3305 64 x4217 100))))
(assert (=> (<= x4913 10000) (= 0 (x530 x4913))))
(assert (x2673 x4792))
(assert (not (x669 (x3305 64 x7175 100))))
(assert (x4744 x5237))
(assert (x8912 1000000000 x6887))
(assert (= (x530 (x3305 64 x8615 100)) (x3305 64 x8615 100)))
(assert (= x1432 (and x3285 x6646)))
(assert (< (x3305 64 x5127 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4290 (x3305 64 x7822 36)) x7822))
(assert (x2673 x8675))
(assert (> (x3305 64 x8700 0) 10000))
(assert (x2673 x1497))
(assert (x2673 x1999))
(assert (x8339 x2361))
(assert (= x2042 (and x5460 (not x557))))
(assert (x4744 x6981))
(assert (x8339 x2375))
(assert (x7454 x5912))
(assert (= x3059 (x4290 (x3305 64 x3059 100))))
(assert (= (x4290 (x3305 64 x3241 100)) x3241))
(assert (not (x669 (x3305 64 x4241 12))))
(assert (x2673 x1972))
(assert (= (x4290 (x3305 64 x7378 36)) x7378))
(assert (x2673 x86))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2090 12)))
(assert (x2673 x591))
(assert (= x217 (x4290 (x3305 64 x217 100))))
(assert (< 10000 (x3305 64 x4655 36)))
(assert (x2673 x5454))
(assert (= 6 (x1802 (x3305 64 x683 6))))
(assert (x2673 x8665))
(assert (= (=> (and (= x7801 36) (= x806 true) (= false x1305)) x8273) x5869))
(assert (x2673 x2935))
(assert (= x1481 (or x4235 x9055)))
(assert (= 0 (x530 115792089237316195423570985008687907853269984665640564039457584007913129639902)))
(assert (x4097 x2819 32))
(assert (x2673 x1025))
(assert (x2673 x7469))
(assert (= (and x7694 (not x1694)) x8962))
(assert (= (x967 (x3305 64 x2079 100)) 64))
(assert (= (=> (= (= 0 x5956) x1213) (and (=> (and (and (= x8404 false) (= x5981 true) (= x7801 x2358)) x1213) x8273) (=> (and (= x8064 x7378) (not x1213)) x4688))) x6813))
(assert (< (x3305 64 x951 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8339 x313))
(assert (x2673 x2829))
(assert (x2673 x6435))
(assert (= (x3305 64 x2538 100) (x530 (x3305 64 x2538 100))))
(assert (x2673 x7447))
(assert (x2673 x8747))
(assert (= (x967 (x3305 64 x1883 36)) 64))
(assert (x2673 x4231))
(assert (x4097 x3716 256))
(assert (x5050 x8742))
(assert (= x4127 (or x6585 x3339)))
(assert (x2673 x3168))
(assert (x2673 x8302))
(assert (= (x530 (x3305 64 x136 100)) (x3305 64 x136 100)))
(assert (< (x3305 64 x4013 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8339 x6599))
(assert (= x7869 (and x2611 (not x4075))))
(assert (= (and x1249 x5318) x5854))
(assert (= (and x7671 x7468) x7781))
(assert (= x7691 (or x828 x5892 x4667 x5531 x6797)))
(assert (=> (>= 10000 x1591) (= (x530 x1591) 0)))
(assert (= (x530 (x3305 64 x668 100)) (x3305 64 x668 100)))
(assert (x4097 x2378 32))
(assert (x2673 x2430))
(assert (x669 52207524433148634532707337042868834046575769438058807509068660137114659192832))
(assert (x4744 x5379))
(assert (x2673 x8575))
(assert (x2673 x5703))
(assert (= x2509 (and (not x517) x8924)))
(assert (x4744 x8745))
(assert (= x8923 (and x4560 (not x1787))))
(assert (=> (<= x2471 10000) (= (x530 x2471) 0)))
(assert (= (x4290 (x3305 64 x1306 1)) x1306))
(assert (x2673 x5315))
(assert (< 10000 (x3305 64 x8060 6)))
(assert (< 10000 (x3305 64 x7796 100)))
(assert (x2673 x8177))
(assert (x2673 x6973))
(assert (x4097 x1546 256))
(assert (x2673 x607))
(assert (x2673 x8515))
(assert (> (x3305 64 x1448 100) 10000))
(assert (x2673 x5129))
(assert (x8339 x2006))
(assert (not (x669 (x3305 64 x2051 100))))
(assert (= (x3305 64 x1306 2) (x530 (x3305 64 x1306 2))))
(assert (x2673 x8640))
(assert (= (x967 (x3305 64 x4155 100)) 64))
(assert (=> (>= 10000 x8399) (= 0 (x530 x8399))))
(assert (x2673 x5228))
(assert (= (x967 (x3305 64 x4217 100)) 64))
(assert (x2673 x7334))
(assert (x8912 32 (ite (= 0 x430) 1 0)))
(assert (x2673 x6199))
(assert (= (and x8397 x1960) x6173))
(assert (not (x669 (x3305 64 x776 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6457 100)))
(assert (x2673 x7960))
(assert (x2673 x1175))
(assert (= (and x2742 x6410) x66))
(assert (x8339 x4366))
(assert (x8339 x2692))
(assert (x2673 x4365))
(assert (x2673 x6978))
(assert (= (x3305 64 x6053 2) (x530 (x3305 64 x6053 2))))
(assert (= x5886 (and x7116 x8139)))
(assert (= (x967 (x3305 64 x2736 100)) 64))
(assert (x2673 x4569))
(assert (x2673 x1695))
(assert (x2673 x6954))
(assert (= 12 (x1802 (x3305 64 x9078 12))))
(assert (x2673 x4305))
(assert (=> (<= x1586 10000) (= 0 (x530 x1586))))
(assert (= (and (not x4353) x8101) x5201))
(assert (x2673 x2976))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2154 100)))
(assert (not (x669 (x3305 64 x683 2))))
(assert (x2673 x1285))
(assert (x2673 x462))
(assert (x669 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (x2673 x8905))
(assert (x2673 x595))
(assert (x2673 x1854))
(assert (x2673 x2401))
(assert (= (x3305 64 x1306 1) (x530 (x3305 64 x1306 1))))
(assert (x2673 x2378))
(assert (x8339 x5935))
(assert (x2673 x6759))
(assert (x2673 x8091))
(assert (x1240 x243))
(assert (= (x530 (x3305 64 x3748 100)) (x3305 64 x3748 100)))
(assert (x2673 x6965))
(assert (= x7999 (and x997 x2913)))
(assert (x2673 x5452))
(assert (x2673 x4916))
(assert (not (x669 (x3305 64 x1883 36))))
(assert (> (x3305 64 x4365 36) 10000))
(assert (= (=> (and (= 36 x7801) (= false x3118) (= true x3003)) x8273) x89))
(assert (x2673 x3986))
(assert (= (and (not x5502) x2779) x7692))
(assert (x8912 32 (ite (= x4760 0) 1 0)))
(assert (x2673 x2173))
(assert (= x3076 (x4290 (x3305 64 x3076 36))))
(assert (= x5631 (and x3090 (not x5934))))
(assert (x2673 x672))
(assert (= (x530 (x3305 64 x6457 100)) (x3305 64 x6457 100)))
(assert (not (x669 (x3305 64 x1256 100))))
(assert (x2673 x9061))
(assert (x2673 x6387))
(assert (> (x3305 64 x5680 100) 10000))
(assert (x4097 x3344 256))
(assert (x1240 x5703))
(assert (= (x530 (x3305 64 x5012 100)) (x3305 64 x5012 100)))
(assert (x2673 x1830))
(assert (x4097 x8327 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3305 64 x162 100) (x530 (x3305 64 x162 100))))
(assert (x2673 x404))
(assert (> (x3305 64 x2106 100) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7390 100)))
(assert (= x4633 (or x3667 x7425)))
(assert (< 10000 (x3305 64 x7718 36)))
(assert (x2673 x7472))
(assert (x2673 x6989))
(assert (=> (>= 10000 x6598) (= (x530 x6598) 0)))
(assert (x8339 x3437))
(assert (= x7237 (or x3654 x3883)))
(assert (< (x3305 64 x4488 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2861))
(assert (=> (<= x2795 10000) (= (x530 x2795) 0)))
(assert (x1240 x3610))
(assert (= x5518 (x4290 (x3305 64 x5518 100))))
(assert (x4097 x174 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x5001) x2675) x7702))
(assert (< (x3305 64 x4542 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x6268 x3047) x4595))
(assert (> (x3305 64 x6531 100) 10000))
(assert (> (x3305 64 x8731 100) 10000))
(assert (x4097 x2554 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1505 (and x8761 (not x6961))))
(assert (x4097 x3962 256))
(assert (= (x530 (x3305 64 x5511 100)) (x3305 64 x5511 100)))
(assert (x2673 x1084))
(assert (= (x3305 64 x4248 100) (x530 (x3305 64 x4248 100))))
(assert (x2673 x7380))
(assert (x8339 x4695))
(assert (= (x530 (x3305 64 x3214 36)) (x3305 64 x3214 36)))
(assert (not (x669 (x3305 64 x3059 100))))
(assert (x4097 x5353 256))
(assert (= (x530 (x3305 64 x235 100)) (x3305 64 x235 100)))
(assert (< (x3305 64 x4217 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x2216 12))))
(assert (x2673 x5873))
(assert (x7454 x8956))
(assert (= (x1802 (x3305 64 x4299 100)) 100))
(assert (x2673 x5561))
(assert (x5050 x3745))
(assert (= x4843 (and (not x7142) x2130)))
(assert (x4744 x8712))
(assert (x2673 x8364))
(assert (x2673 x1180))
(assert (x4744 x2554))
(assert (x2673 x7070))
(assert (x2673 x6786))
(assert (= 100 (x1802 (x3305 64 x7129 100))))
(assert (not (x669 (x3305 64 x4898 100))))
(assert (x2673 x8278))
(assert (= x5783 (=> (= x3311 x7424) x2902)))
(assert (x4744 x5548))
(assert (x4097 x1362 300))
(assert (x4744 x6067))
(assert (x669 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (x2673 x2456))
(assert (x2673 x3629))
(assert (x2673 x8486))
(assert (x2673 x2778))
(assert (< (x3305 64 x4913 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4290 (x3305 64 x3109 100)) x3109))
(assert (= (and x317 x8910) x2857))
(assert (x2673 x1071))
(assert (x2673 x5525))
(assert (x8339 x3140))
(assert (x8339 x3610))
(assert (x2673 x1719))
(assert (x2673 x3049))
(assert (x2673 x6741))
(assert (x2673 x280))
(assert (= x1197 (and (not x1476) x4211)))
(assert (x9110 x8324))
(assert (x8339 x1451))
(assert (x2673 x949))
(assert (x2673 x6131))
(assert (= x5634 (=> (and (= (x7405 (+ 96 x749)) x443) (= (x5908 608) x6281) (= x4901 (not (> x441 128)))) (and x2909 x4901))))
(assert (x2673 x8518))
(assert (x4744 x7668))
(assert (x2673 x5575))
(assert (x2673 x7354))
(assert (x2673 x5608))
(assert (x8339 x3242))
(assert (x2673 x3427))
(assert (= (x530 (x3305 64 x4217 100)) (x3305 64 x4217 100)))
(assert (x2673 x9013))
(assert (= (or x3078 x1611) x6095))
(assert (x8339 x7893))
(assert (< (x3305 64 x5870 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x3305 64 x3150 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x755))
(assert (> (x3305 64 x9023 100) 10000))
(assert (x7454 x7480))
(assert (x2673 x6212))
(assert (= (and x5421 (not x2319)) x8397))
(assert (< (x3305 64 x439 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x3305 64 x7806 100)))
(assert (x2673 x6995))
(assert (x2673 x135))
(assert (= (x967 (x3305 64 x5718 100)) 64))
(assert (x7454 x4920))
(assert (x2673 x2200))
(assert (= (x967 (x3305 64 x1281 100)) 64))
(assert (x7454 x8734))
(assert (x2673 x6437))
(assert (x2673 x1645))
(assert (x2673 x7217))
(assert (= 100 (x1802 (x3305 64 x5868 100))))
(assert (= x8941 (=> (and (and (and (= (x3412 x1290) x3359) (= x686 x1290)) (and (and (= x1244 x2353) (= x2427 x8142) (= 68 x6757) (<= x2353 x3359)) (and (and (and (and (or (and (and (= x5228 x571) (<= x571 1461501637330902918203684832716283019655932542975)) x2526) (and (not x2526) (= x5276 0))) (and (<= 0 x9003) (= x7638 x9003) (= false x2310) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9003) (= (x484 x1306) x777) (>= 127 x5349) (< (+ x3677 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x5349 127) (>= x777 1) (= x2526 (not (= x1306 x5228))) (= x7128 x8228) (= x8025 (- x6228 x3677)) (= x5433 x2427) (= (+ x3677 x1348) x9003) (= x6158 2001815235) (= x5276 (ite x2526 1 0)) (= x3960 x686) (= false x420) (= (x8226 x1306) x1348) (= (x3412 x3960) x6228) (= 2 x4772))) (= x1244 x3677)) (= x686 x5228)) (and (= x7128 x2802) (= x7596 false))))) (and (<= 1 x2252) (<= x1244 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x3631 x2252)) (<= x1306 1461501637330902918203684832716283019655932542975) (= (< 0 (x484 x1306)) x765) (>= 1461501637330902918203684832716283019655932542975 x8869) (>= x7583 1) (>= x2405 0) (>= x6936 0) x2609 (= x3816 (> (x484 x3631) 0)) (>= x2910 0) (<= x4894 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3979) (= x8142 x7494) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6936) (>= x8869 1) (not (= x3631 x1306)) (>= x3538 0) (<= 0 x1244) (>= x2531 0) (>= x381 0) (>= x4894 1) (= (< 0 (x484 x2252)) x7835) (>= 1461501637330902918203684832716283019655932542975 x5252) (>= x5252 0) x765 (= x2802 x3538) (>= 1461501637330902918203684832716283019655932542975 x3631) x3816 (<= x7583 1461501637330902918203684832716283019655932542975) (= (> (x484 x4894) 0) x2609) (<= 0 x4758) (not (= x4894 x1306)) (<= 0 x686) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4758) (= x4860 1) (<= x2531 1461501637330902918203684832716283019655932542975) (<= x2485 115792089237316195423570985008687907853269984665640564039457584007913129639935) x7835 (<= x2405 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x686) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x381) (<= 0 x2485) (not (= x2252 x1306)) (= x1306 x8869) (<= 1 x3631) (<= x3538 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x1306) (<= x2252 1461501637330902918203684832716283019655932542975) (not (= x4894 x2252)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2910) (not (= x3631 x4894)) (= x7583 x3631))) x131)))
(assert (= x2234 (and x3874 x250)))
(assert (= (and x6368 x6347) x8958))
(assert (x2673 x2941))
(assert (x2673 x1792))
(assert (x8339 x1508))
(assert (x2673 x5215))
(assert (= (x530 (x3305 64 x2079 100)) (x3305 64 x2079 100)))
(assert (x8339 x5178))
(assert (x2673 x4951))
(assert (x7454 x7402))
(assert (= (x4290 (x3305 64 x6494 100)) x6494))
(assert (x2673 x2494))
(assert (= (x3305 64 x1073 100) (x530 (x3305 64 x1073 100))))
(assert (x2673 x6849))
(assert (x2673 x3669))
(assert (= (x530 (x3305 64 x324 36)) (x3305 64 x324 36)))
(assert (= x8860 (x4290 (x3305 64 x8860 36))))
(assert (x2673 x714))
(assert (= (x530 (x3305 64 x8903 100)) (x3305 64 x8903 100)))
(assert (x2673 x5878))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3932 100)))
(assert (= (x1802 (x3305 64 x8506 36)) 36))
(assert (= 64 (x967 (x3305 64 x4013 100))))
(assert (not (x669 (x3305 64 x4542 100))))
(assert (= 100 (x1802 (x3305 64 x1499 100))))
(assert (< (x3305 64 x6135 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8502 (ite (= 0 x3369) 1 0)))
(assert (= x8161 (and x4353 x8101)))
(assert (< (x3305 64 x2098 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3979 10000) (= (x530 x3979) 0)))
(assert (x2673 x252))
(assert (x2673 x4967))
(assert (= x3920 (and (not x400) x7015)))
(assert (x2673 x8961))
(assert (= (x4290 (x3305 64 x4027 100)) x4027))
(assert (x2673 x5130))
(assert (x2673 x5178))
(assert (= (x4290 (x3305 64 x6237 100)) x6237))
(assert (x2673 x4840))
(assert (=> (>= 10000 x668) (= 0 (x530 x668))))
(assert (= (and x7137 x8543) x6670))
(assert (= (x3305 64 x2471 100) (x530 (x3305 64 x2471 100))))
(assert (x8912 32 (ite (= 0 x7843) 1 0)))
(assert (= (x967 (x3305 64 x6932 100)) 64))
(assert (= x481 (=> (and (= (x6256 128) x7226) (= x83 x7226) (= x476 160)) x6148)))
(assert (x2673 x7901))
(assert (=> (>= 10000 x6848) (= 0 (x530 x6848))))
(assert (=> (<= x7175 10000) (= 0 (x530 x7175))))
(assert (x669 48755886422350550937420582033662272622158303343164848365600209189876434731008))
(assert (x2673 x3586))
(assert (x4097 x8140 256))
(assert (= (x4290 (x3305 64 x5127 100)) x5127))
(assert (x2673 x5948))
(assert (x2673 x7219))
(assert (x2673 x1461))
(assert (=> (<= x5335 10000) (= 0 (x530 x5335))))
(assert (x2673 x3888))
(assert (x2673 x2944))
(assert (x2673 x5115))
(assert (x8339 x4920))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6598 100)))
(assert (< (x3305 64 x8352 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3305 64 x8537 100) (x530 (x3305 64 x8537 100))))
(assert (= (x3305 64 x5152 100) (x530 (x3305 64 x5152 100))))
(assert (x4744 x7932))
(assert (=> (>= 10000 x1587) (= 0 (x530 x1587))))
(assert (= (x4290 (x3305 64 x881 100)) x881))
(assert (x2673 x977))
(assert (= (or x4556 x1160 x1653) x6347))
(assert (x2673 x7021))
(assert (= (and (not x8416) x2993) x4654))
(assert (x2673 x7387))
(assert (x4097 x8209 256))
(assert (x2673 x8656))
(assert (> (x3305 64 x4898 100) 10000))
(assert (x2673 x1997))
(assert (x2673 x5572))
(assert (= 100 (x1802 (x3305 64 x9023 100))))
(assert (x2673 x2016))
(assert (not (x669 (x3305 64 x5404 12))))
(assert (< 10000 (x3305 64 x8073 100)))
(assert (= x1387 (or (and x7225 x4605) (and x5322 x733) (and x3308 x5277) (and x2470 x6574) (and x7050 x1552) (and x4649 x5182))))
(assert (x2673 x264))
(assert (x2673 x8327))
(assert (= 100 (x1802 (x3305 64 x2534 100))))
(assert (= (and (not x4524) x8662) x4934))
(assert (x2673 x97))
(assert (x4744 x243))
(assert (= x270 (=> (and (= x7267 (x6293 608)) (= x3702 (x7405 (+ 96 x7914))) (= (not (< 128 x1910)) x7556)) (and x7556 x4726))))
(assert (x2673 x8182))
(assert (x2673 x5237))
(assert (= x3654 (and x8357 x369)))
(assert (x7454 x1273))
(assert (x2673 x5811))
(assert (=> (<= x4299 10000) (= (x530 x4299) 0)))
(assert (x8339 x8513))
(assert (= (x3305 64 x6494 100) (x530 (x3305 64 x6494 100))))
(assert (x2673 x4933))
(assert (= (x3305 64 x8142 10) (x530 (x3305 64 x8142 10))))
(assert (= x2790 (and x6721 (not x465))))
(assert (x2673 x2765))
(assert (= 64 (x967 (x3305 64 x959 100))))
(assert (= (and x3462 x3958) x631))
(assert (= (x967 (x3305 64 x8928 36)) 64))
(assert (x2673 x1101))
(assert (x4097 x336 300))
(assert (x2673 x6924))
(assert (x4097 x4082 256))
(assert (x2673 x7315))
(assert (x2673 x1192))
(assert (= 64 (x967 (x3305 64 x462 100))))
(assert (x2673 x5193))
(assert (x4097 x3989 256))
(assert (= (or x2466 x926) x4458))
(assert (= (x967 (x3305 64 x4365 36)) 64))
(assert (x2673 x1661))
(assert (=> (>= 10000 x6531) (= 0 (x530 x6531))))
(assert (= (and (not x6296) x5449) x6376))
(assert (x4097 x8327 32))
(assert (x4097 x7668 256))
(assert (x1240 x9123))
(assert (x2673 x5358))
(assert (= x788 (and x3103 x7730)))
(assert (x2673 x4151))
(assert (not (x669 (x3305 64 x7581 36))))
(assert (x2673 x6228))
(assert (x2673 x5625))
(assert (x2673 x7502))
(assert (x2673 x2338))
(assert (= x5344 (or x1311 x2718)))
(assert (= x8273 (=> (and (= x7801 x1436) (= x4548 0)) x8870)))
(assert (x5050 x6013))
(assert (= (x1802 (x3305 64 x6667 100)) 100))
(assert (x2673 x5501))
(assert (< 10000 (x3305 64 x8387 36)))
(assert (= (x530 (x3305 64 x9078 12)) (x3305 64 x9078 12)))
(assert (x2673 x2127))
(assert (x2673 x8562))
(assert (= x2118 (and x8585 (not x7350))))
(assert (< (x3305 64 x5577 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x9110 x9011))
(assert (> (x3305 64 x4542 100) 10000))
(assert (= x4202 (and (not x5530) x2174)))
(assert (= x1027 (and (not x9059) x1535)))
(assert (= x8478 (and (not x2440) x7195)))
(assert (x2673 x8721))
(assert (not (x669 (x3305 64 x8946 100))))
(assert (x4744 x5178))
(assert (x2673 x7257))
(assert (x2673 x6777))
(assert (x8339 x4484))
(assert (x8339 x8055))
(assert (= 64 (x967 (x3305 64 x8731 100))))
(assert (x2673 x353))
(assert (x2673 x5279))
(assert (x2673 x3525))
(assert (x2673 x3411))
(assert (x2673 x1863))
(assert (= x6840 (and x7312 (not x6782))))
(assert (= (x967 (x3305 64 x2389 100)) 64))
(assert (x8339 x5448))
(assert (x2673 x3312))
(assert (x2673 x4628))
(assert (x2673 x6755))
(assert (x2673 x4555))
(assert (= x8680 (or x4458 x7189)))
(assert (x2673 x5721))
(assert (x7454 x3712))
(assert (= (x1802 (x3305 64 x7152 100)) 100))
(assert (=> (>= 10000 x8489) (= 0 (x530 x8489))))
(assert (x2673 x1329))
(assert (x4097 x1819 256))
(assert (x2673 x7923))
(assert (x2673 x5992))
(assert (x2673 x3798))
(assert (= (and (not x6714) x8418) x6624))
(assert (x2673 x5271))
(assert (x2673 x6241))
(assert (x2673 x2205))
(assert (= (and x5580 (not x8260)) x5182))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x4097 x3813 32))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2538 100)))
(assert (= x1812 (=> (and (= x1713 x8819) (= x2605 x395)) x599)))
(assert (x2673 x6952))
(assert (x2673 x5379))
(assert (= (x1802 (x3305 64 x8399 100)) 100))
(assert (= 100 (x1802 (x3305 64 x1953 100))))
(assert (x2673 x3767))
(assert (= (and (not x7197) x3728) x6631))
(assert (= 100 (x1802 (x3305 64 x9048 100))))
(assert (x2673 x6807))
(assert (x2673 x1839))
(assert (x2673 x4959))
(assert (=> (<= x6099 10000) (= 0 (x530 x6099))))
(assert (x7454 x7173))
(assert (= (x3305 64 x4322 36) (x530 (x3305 64 x4322 36))))
(assert (= 64 (x967 (x3305 64 x3954 2))))
(assert (x9110 x1088))
(assert (= x421 (and x4098 (not x1464))))
(assert (=> (>= 10000 x3548) (= (x530 x3548) 0)))
(assert (not (x669 (x3305 64 x8731 100))))
(assert (x8339 x4540))
(assert (> (x3305 64 x4248 100) 10000))
(assert (= 100 (x1802 (x3305 64 x3733 100))))
(assert (= (and x2008 x4931) x1125))
(assert (x4744 x1064))
(assert (= 2 (x1802 (x3305 64 x7718 2))))
(assert (=> (>= 10000 x8700) (= (x530 x8700) 0)))
(assert (=> (>= 10000 x606) (= 0 (x530 x606))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3742 36)))
(assert (= (and x7015 x400) x4222))
(assert (= (and x6539 (not x8401)) x8357))
(assert (= (x530 (x3305 64 x6598 100)) (x3305 64 x6598 100)))
(assert (= (and x3431 (not x7106)) x6113))
(assert (= x7403 (x4290 (x3305 64 x7403 100))))
(assert (= (x1802 (x3305 64 x1281 100)) 100))
(assert (= x3768 (and x2026 (not x3393))))
(assert (x2673 x2853))
(assert (x8339 x5760))
(assert (< (x3305 64 x2216 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x8555 (or x3817 (and (not x6908) x1816))))
(assert (> (x3305 64 x8044 100) 10000))
(assert (< (x3305 64 x8928 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4529))
(assert (=> (>= 10000 x1354) (= (x530 x1354) 0)))
(assert (not (x669 (x3305 64 x8099 100))))
(assert (= 6 (x1802 (x3305 64 x4614 6))))
(assert (x2673 x5234))
(assert (= 100 (x1802 (x3305 64 x4027 100))))
(assert (x2673 x5131))
(assert (x2673 x3063))
(assert (= x3497 (=> (and (= (+ 1 x5488) x5335) (= (x3305 64 x8671 100) x514) (= (x3011 x2158) x721) (>= 18446744073709551615 x721) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5645) (= (x7941 x6613) x3100) (= x5959 (x7405 (+ 32 x2865))) (not (= x5645 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (+ x9048 1) x4248) (= (x7405 (+ x140 32)) x8739) (= (x3305 64 x4248 100) x7705) (not (> x5237 x9107)) (= (x7941 x8039) x5362) (= (x7941 x514) x1911) (= (x7405 (+ 32 x7838)) x6945) (= x4456 (x7941 x5420)) (= x2865 (x7405 (+ x3197 32))) (= (x7941 x877) x7675) (= (+ 1 x6237) x6450) (= (+ x8903 1) x659) (= (x3305 64 x3892 12) x2158) (= x3197 (x7405 (+ x5645 32))) (= x3007 (+ 1 x4094)) (not (< x9107 x5237)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x5645)) (= x4478 (x7941 x7705)) (<= x3892 243) (= (+ 1 x544) x9048) (= x7905 (x3305 64 x5335 100)) (= 0 x5958) (= (+ 1 x5173) x360) (= (+ 31 x5237) x9107) (= (x7405 (+ 32 x5959)) x3424) (>= x3892 13) (= x2077 (x7405 (+ 32 x3564))) (= x2393 480) (= (x7405 (+ x3424 32)) x140) (= x2886 (x3305 64 x8849 36)) (= (+ 1 x8671) x3947) (= (+ x9048 1) x6270) (= x5173 (+ 1 x8849)) (= (+ 1 x8903) x4094) (= x877 (x3305 64 x5173 100)) (= x8547 (x7941 x7905)) (= (x3305 64 x9048 100) x6613) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5645) (= (+ 1 x544) x4976) (= (x4588 x3517 300) x5237) (= x8123 (x7941 x4729)) (= x4196 480) (= (+ x4094 1) x5488) (= (x7405 (+ x2077 32)) x7074) (= x1003 (+ 1 x3892)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5645) (= x8671 (+ x5335 1)) (= (+ 1 x3892) x8849) (= (x7190 (- x916 32)) x8048) (= (x3238 x5645) x3025) (= x5628 (= 0 x5237)) (= (+ 1 x5173) x6237) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x5645)) (= x7838 (x7405 (+ 32 x8739))) (= x4729 (x3305 64 x544 100)) (not (> x5237 x3025)) (= (x7190 (- x7074 x5645)) x916) (= x7957 (x7941 x8545)) (= x8039 (x3305 64 x6237 100)) (= (x7405 (+ x6945 32)) x3564) (= x544 (+ x8671 1)) (= (+ x5335 1) x3299) (= x4631 (+ x4248 1)) (= (+ x4248 1) x5627) (= (x7941 x583) x2125) (= (+ 1 x5488) x3549) (= x8903 (+ 1 x6237)) (< x5645 x7074) (= x5420 (x3305 64 x8903 100)) (= (x3305 64 x5488 100) x583) (= (+ x8849 1) x3795) (= x8545 (x3305 64 x4094 100)) (= (x8042 x2886) x3517)) (and (=> (and (and (= x5220 (x7405 (+ x3688 x3249))) (= (x7405 (+ x7074 x6312)) x5702) (= x7983 (x7405 (+ x1888 x5702))) (= (x5917 31 x5237) x6312) (= (x7405 (+ x5645 x6312)) x3688) (or (= x3249 32) (= 0 x3249)) (= x3249 (* (ite (= 0 x6312) 1 0) 32)) (or (= 32 x1888) (= 0 x1888)) (= (> x3605 x7983) x5477) (= x1888 (* (ite (= 0 x6312) 1 0) 32)) (= x3605 (x7405 (+ x5237 x7983)))) (not x5628)) (and (=> x5477 x3731) (=> (and (= x7983 x3229) (not x5477)) x1965))) (=> (and (and (= (x7405 (+ x7074 32)) x4674) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x7074) (= x4674 x3555) (<= x7074 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x7074 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x7074 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x7074 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (< x7074 x4674) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7074)) (= x7074 x5732)) x5628) x8511)))))
(assert (< 10000 (x3305 64 x2154 100)))
(assert (= x3731 (=> (and (= x7499 (x7405 (+ 32 x7983))) (= x6262 (not (> x3605 x7499))) (= x1736 (x3238 x5220))) (and (=> (= x7499 x3229) x1965) x6262))))
(assert (= x3665 (and x1942 x1024)))
(assert (x2673 x8614))
(assert (x2673 x1472))
(assert (= x46 (and x4053 x4505)))
(assert (x2673 x5868))
(assert (x2673 x4614))
(assert (= x6315 (and x4850 x5161)))
(assert (= (x3305 64 x5718 100) (x530 (x3305 64 x5718 100))))
(assert (x2673 x4645))
(assert (= (and x1102 (not x2820)) x2368))
(assert (x2673 x7579))
(assert (= (and (not x942) x7306) x7300))
(assert (= x4096 (and x2134 x2954)))
(assert (x2673 x7288))
(assert (= (and x1921 x5631) x8301))
(assert (not (x669 (x3305 64 x8060 6))))
(assert (= (and x5439 (not x1123)) x7225))
(assert (x2673 x7305))
(assert (= (x967 (x3305 64 x7822 36)) 64))
(assert (x2673 x4737))
(assert (< 10000 (x3305 64 x7038 100)))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639584))
(assert (x2673 x4056))
(assert (not (x669 (x3305 64 x1354 100))))
(assert (x4744 x1087))
(assert (= x8960 (or x2402 x4704)))
(assert (= (x530 3008604839) 0))
(assert (x2673 x1922))
(assert (x2673 x3853))
(assert (= (x1802 (x3305 64 x9127 10)) 10))
(assert (= x1159 (and x8707 x6524)))
(assert (x2673 x995))
(assert (= (and (not x3169) x3681) x5932))
(assert (x2673 x604))
(assert (x2673 x3614))
(assert (= x4383 (or x5565 x2477)))
(assert (= x2480 (and x562 (not x3865))))
(assert (= x2044 (and x5109 (not x1268))))
(assert (x2673 x1473))
(assert (x2673 x911))
(assert (= (or x4092 x6631 x2131) x6191))
(assert (x2673 x4045))
(assert (x8339 x336))
(assert (x9110 x3279))
(assert (x2673 x7837))
(assert (x2673 x8521))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6237 100)))
(assert (= x1901 (and x3169 x3681)))
(assert (= (x3305 64 x2652 100) (x530 (x3305 64 x2652 100))))
(assert (= (and (not x5162) x6764) x147))
(assert (x2673 x1556))
(assert (x2673 x4517))
(assert (< 10000 (x3305 64 x8352 2)))
(assert (x2673 x8183))
(assert (= (and x1483 (not x5600)) x5339))
(assert (x2673 x8654))
(assert (> (x3305 64 x3088 2) 10000))
(assert (> (x3305 64 x5335 100) 10000))
(assert (< (x3305 64 x8359 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7454 x6110))
(assert (x4097 x1215 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7454 x2575))
(assert (x2673 x6596))
(assert (not (x669 (x3305 64 x5270 100))))
(assert (x7454 x8211))
(assert (= x8700 (x4290 (x3305 64 x8700 0))))
(assert (x2673 x2900))
(assert (= x8829 (and (not x2526) x3556)))
(assert (not (x669 (x3305 64 x4614 6))))
(assert (x4097 x5237 32))
(assert (= (and x4453 (not x4301)) x4644))
(assert (x2673 x4302))
(assert (x2673 x430))
(assert (= (or x3204 x8829) x5730))
(assert (x9110 x5454))
(assert (x2673 x2602))
(assert (= x2525 (=> (and (or (and (and (= x1394 x4543) (= x2175 x9034)) (not x7607)) (and x7607 (and (= x4543 x1394) (= x5593 (- x2984 x3788)) (<= 0 x1282) (= x623 x1282) (<= x1282 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3788 (ite (= x9034 0) x1035 0)) (= (+ x9129 x3788) x1282) (= x9034 x2175) (= (x6940 x7655) x2984) (= x9129 (x3370 x4894)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x9129 x3788))))) (= (= 0 x9034) x7607)) x4118)))
(assert (x2673 x6448))
(assert (x2673 x5388))
(assert (= 100 (x1802 (x3305 64 x5575 100))))
(assert (x2673 x6666))
(assert (= x261 (x4290 (x3305 64 x261 100))))
(assert (> (x3305 64 x2415 100) 10000))
(assert (< 10000 (x3305 64 x3026 100)))
(assert (x2673 x1722))
(assert (x669 4294967295))
(assert (= x5449 (and x4499 (not x4304))))
(assert (x2673 x4911))
(assert (x2673 x6025))
(assert (x2673 x8989))
(assert (x2673 x721))
(assert (< 10000 (x3305 64 x162 100)))
(assert (= (and x3018 (not x9098)) x954))
(assert (< (x3305 64 x2133 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7746))
(assert (= x4780 (and (not x8733) x4428)))
(assert (x2673 x6651))
(assert (x2673 x5473))
(assert (x2673 x6938))
(assert (= x8856 (and x2249 x2330)))
(assert (= x1636 (and (not x8627) x3382)))
(assert (not (x669 (x3305 64 x3742 36))))
(assert (x2673 x7581))
(assert (x4744 x4388))
(assert (=> (>= 10000 x7463) (= (x530 x7463) 0)))
(assert (= 100 (x1802 (x3305 64 x8580 100))))
(assert (x2673 x6156))
(assert (= x8197 (x4290 (x3305 64 x8197 100))))
(assert (= 64 (x967 (x3305 64 x4299 100))))
(assert (x8339 x4748))
(assert (= 64 (x967 (x3305 64 x8322 100))))
(assert (x2673 x7817))
(assert (x2673 x1237))
(assert (= (x530 (x3305 64 x4087 12)) (x3305 64 x4087 12)))
(assert (x2673 x8234))
(assert (=> (>= 10000 x9105) (= 0 (x530 x9105))))
(assert (= x1303 (and x5643 (not x3423))))
(assert (x2673 x5006))
(assert (= (x967 (x3305 64 x5012 100)) 64))
(assert (x2673 x363))
(assert (x2673 x2507))
(assert (x2673 x3265))
(assert (x2673 x3066))
(assert (not (x669 (x3305 64 x918 100))))
(assert (x2673 x5079))
(assert (< (x3305 64 x4655 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3499))
(assert (x2673 x6725))
(assert (x7454 x8965))
(assert (= x4986 (and x492 x7754)))
(assert (= (and x4845 (not x5941)) x250))
(assert (= x2445 (and (not x1558) x3406)))
(assert (x4744 x1273))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8387 36)))
(assert (= (=> (and (= x2338 (x7405 (+ x5621 32))) (= (< 0 x8409) x1558) (= (x7405 (+ 128 x296)) x5621) (= (x7405 (+ x296 32)) x5271) (= x8409 (x6713 480)) (= (x7405 (+ 4 x4254)) x296)) (and (=> (and x1558 (and (= (x8637 512) x3368) (= x4966 (> x8409 32)))) (and (=> (and (and (= (< 64 x8409) x6350) (= x1193 (x2539 544)) (= (x7405 (+ 32 x2338)) x5535)) x4966) (and (=> (not x6350) x763) (=> (and (and (= (> x8409 96) x1538) (= x7019 (x1196 576)) (= (x7405 (+ 64 x2338)) x6732)) x6350) (and (=> x1538 x4209) (=> (not x1538) x763))))) (=> (not x4966) x763))) (=> (not x1558) x763))) x5013))
(assert (= (x3305 64 x2858 100) (x530 (x3305 64 x2858 100))))
(assert (x4097 x1633 256))
(assert (= x4566 (=> (= x3311 x5748) x5783)))
(assert (= 64 (x967 (x3305 64 x439 100))))
(assert (> (x3305 64 x683 6) 10000))
(assert (x8339 x4082))
(assert (x2673 x6032))
(assert (x2673 x6552))
(assert (x2673 x6805))
(assert (x2673 x1353))
(assert (= (=> (= x5806 (= x3258 0)) (and (=> (and (not x5806) (and (= x2822 x8170) (= x3890 x3329) (= x4604 x886) (= x6621 x6722) (= x1070 x2183) (= x8634 x438) (= x5798 x3829) (= x4844 x8618) (= x5475 x4063) (= x4555 x6377))) x1265) (=> (and x5806 (and (= true x4906) (= false x3590))) x3445))) x2723))
(assert (x4097 x6833 32))
(assert (= x8593 (and x7999 (not x6720))))
(assert (x2673 x1508))
(assert (< (x3305 64 x6172 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x6615))
(assert (x2673 x2154))
(assert (not (x669 (x3305 64 x683 6))))
(assert (< 10000 (x3305 64 x2471 100)))
(assert (x2673 x5296))
(assert (x8339 x4965))
(assert (x2673 x3555))
(assert (x2673 x2991))
(assert (= 36 (x1802 (x3305 64 x7718 36))))
(assert (= 100 (x1802 (x3305 64 x8322 100))))
(assert (x2673 x3245))
(assert (not (x669 (x3305 64 x1084 100))))
(assert (x4744 x1451))
(assert (= (and (not x3672) x888) x8910))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5718 100)))
(assert (x2673 x3210))
(assert (x2673 x7494))
(assert (not (x669 (x3305 64 x2847 100))))
(assert (x8502 (ite (= x9006 0) 1 0)))
(assert (x2673 x5512))
(assert (< (x3305 64 x2644 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4087))
(assert (= (and x357 x3146) x5233))
(assert (= (and x6289 (not x2667)) x9126))
(assert (x4744 x5792))
(assert (x4097 x3813 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8241))
(assert (=> (<= x9048 10000) (= 0 (x530 x9048))))
(assert (= (x1802 (x3305 64 x1166 36)) 36))
(assert (= (and (not x1930) x979) x8348))
(assert (x7454 x6048))
(assert (= x2389 (x4290 (x3305 64 x2389 100))))
(assert (= 64 (x967 (x3305 64 x3421 36))))
(assert (not (x669 (x3305 64 x755 12))))
(assert (x2673 x6233))
(assert (x2673 x342))
(assert (x8339 x3732))
(assert (not (x669 (x3305 64 x176 100))))
(assert (= (=> (and (= (= x4042 0) x1464) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8012) x1103) (= (x7405 (+ x2030 x1103)) x1293) (= (x7405 (+ 31 x1115)) x8012) (= x764 (x7190 (- x1293 x3481))) (= (x7405 (+ x2030 x1115)) x2283) (= x4042 (x484 x464))) (and (=> (and (and (= (and x9073 x3469) x3684) (= (x5493 x464) x8961) (= (x5493 x4894) x2267) (= x9073 (< (+ x8961 x3187) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3469 (<= x3187 x2267))) (not x1464)) (and (=> (and x3684 (and (and (<= x4963 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4963 (+ x4550 x3187)) (= x4550 (x6316 x464)) (= x6080 x4963) (= (< 0 x1655) x6223) (= x4601 (x5493 x4894)) (= x5464 (- x4601 x3187)) (>= x4963 0) (< (+ x3187 x4550) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (and (= x5712 x3347) (= x4215 x8906) (= x6205 x3685) (= x2359 x6226) (= x8001 x1738) (= x204 x8333) (= x1072 x8091) (= x3449 x2765) (= x4398 x1368)) (not x6223)) (and x6223 (and x5536 (= x8889 x204) (= x1072 x2348) (= x3400 x1368) (<= x7021 4294967295) (= x8001 x1026) (= x5966 x6205) (= (x9094 x464) x1684) (= x1912 x4215) (= x3680 x3449) (= x8321 (x9094 x4894)) (= (>= (x4187 x4894) x8321) x734) (= x5536 (= (x4187 x464) x1684)) (= x5712 x5023) x734 (= x2359 x8043)))))) x183) (=> (and (and (= x6588 x8333) (= x944 x8091) (= 0 x1216) (= x216 x1738) (= 0 x3714) (= x2765 x7288) (= x3685 x7910) (= x3352 x3347) (= x8906 x143) (= x353 x4398) (= x6226 x8296)) (not x3684)) x7162))) (=> (and x1464 (and (= true x4680) (= x770 false))) x3445))) x863))
(assert (< 10000 (x3305 64 x6212 100)))
(assert (< (x3305 64 x4107 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x1334))
(assert (= (x1802 (x3305 64 x4044 100)) 100))
(assert (= (and (not x7488) x6376) x2805))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8352 6)))
(assert (x2673 x7779))
(assert (x2673 x4275))
(assert (< 10000 (x3305 64 x2079 100)))
(assert (x2673 x8415))
(assert (= x6331 (and x505 x5287)))
(assert (= x9044 (and x7872 (not x5069))))
(assert (= x7111 (or x4429 x1138 x7800 x8058 x1629)))
(assert (= x7162 (=> (= x7864 (= x1216 0)) (and (=> (and (not x7864) (and (= x7288 x8681) (= x6588 x5979) (= x3352 x6255) (= x2275 x7910) (= x1974 x1496) (= x8296 x3223) (= x3255 x216) (= x3703 x353) (= x7923 x143) (= x944 x7276))) x5451) (=> (and (and (= x8799 true) (= false x1994)) x7864) x3445)))))
(assert (x2673 x2124))
(assert (= (x967 (x3305 64 x1807 100)) 64))
(assert (x2673 x1582))
(assert (x2673 x3333))
(assert (= (x3305 64 x5440 36) (x530 (x3305 64 x5440 36))))
(assert (= x3278 (x4290 (x3305 64 x3278 100))))
(assert (not (x669 (x3305 64 x5294 36))))
(assert (< 10000 (x3305 64 x3076 36)))
(assert (x2673 x1046))
(assert (= 64 (x967 (x3305 64 x8399 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8903 100)))
(assert (x2673 x1307))
(assert (= (x967 (x3305 64 x8666 100)) 64))
(assert (= (and (not x8254) x4392) x563))
(assert (x4097 x5347 256))
(assert (= (x967 (x3305 64 x2051 100)) 64))
(assert (x2673 x5880))
(assert (= (x967 (x3305 64 x8928 6)) 64))
(assert (= (x530 (x3305 64 x1110 100)) (x3305 64 x1110 100)))
(assert (x2673 x151))
(assert (x2673 x5124))
(assert (= (x4290 (x3305 64 x7373 100)) x7373))
(assert (> (x3305 64 x3499 100) 10000))
(assert (x2673 x1031))
(assert (= (x4290 (x3305 64 x7718 2)) x7718))
(assert (= x1095 (and x2964 (not x1718))))
(assert (x2673 x4108))
(assert (= x4061 (and (not x7827) x4202)))
(assert (= (or x8871 (and (not x7741) x2107)) x1967))
(assert (=> (<= x8044 10000) (= 0 (x530 x8044))))
(assert (x2673 x7676))
(assert (x4744 x4540))
(assert (= (=> (and (<= x7579 115792089237316195423570985008687907853269984665640564039457584007913129639903) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x7579) (= (x7405 (+ x5501 31)) x3764) (<= x5459 115792089237316195423570985008687907853269984665640564039457584007913129639904) (= x7579 x7689) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x7579) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3764) x5459) (= x5459 x2413) (< x7579 x5459) (<= 1 x5459)) x2376) x8520))
(assert (x2673 x3748))
(assert (= 100 (x1802 (x3305 64 x8644 100))))
(assert (x2673 x6049))
(assert (x2673 x243))
(assert (x2673 x5702))
(assert (x2673 x1613))
(assert (not (x669 (x3305 64 x2986 36))))
(assert (x2673 x5284))
(assert (x2673 x4128))
(assert (x4097 x5590 256))
(assert (x4744 x1364))
(assert (= (x530 (x3305 64 x719 100)) (x3305 64 x719 100)))
(assert (= (x1802 (x3305 64 x1448 100)) 100))
(assert (x2673 x8618))
(assert (x2673 x4815))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4868 100)))
(assert (= x7363 (and x2615 (not x1840))))
(assert (=> (>= 10000 x7239) (= 0 (x530 x7239))))
(assert (x2673 x8540))
(assert (= 64 (x967 (x3305 64 x5868 100))))
(assert (= (and x7110 x1631) x4995))
(assert (= (x4290 (x3305 64 x7290 100)) x7290))
(assert (= (x530 (x3305 64 x8352 36)) (x3305 64 x8352 36)))
(assert (not (x669 (x3305 64 x3617 100))))
(assert (=> (<= x2642 10000) (= (x530 x2642) 0)))
(assert (x2673 x6557))
(assert (x2673 x4810))
(assert (not (x669 (x3305 64 x7281 100))))
(assert (= x7806 (x4290 (x3305 64 x7806 100))))
(assert (= (and (not x6424) x3572) x2964))
(assert (x2673 x8454))
(assert (x2673 x7679))
(assert (= (and (not x4037) x3170) x9025))
(assert (x7454 x6133))
(assert (x2673 x3413))
(assert (x2673 x6964))
(assert (x2673 x4841))
(assert (x4744 x8362))
(assert (not (x669 (x3305 64 x977 6))))
(assert (= x2504 (and x3090 x5934)))
(assert (x2673 x2544))
(assert (= (or x6499 x5175) x5630))
(assert (x7454 x3242))
(assert (not (x669 (x3305 64 x5488 100))))
(assert (= (x3305 64 x6090 100) (x530 (x3305 64 x6090 100))))
(assert (x2673 x6866))
(assert (x2673 x3121))
(assert (x2673 x2427))
(assert (x2673 x8895))
(assert (x2673 x2372))
(assert (> (x3305 64 x5440 36) 10000))
(assert (x2673 x328))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x981 100)))
(assert (x2673 x2772))
(assert (x7454 x7371))
(assert (x2673 x1642))
(assert (x2673 x4381))
(assert (= x7656 (and (not x4832) x633)))
(assert (x2673 x2862))
(assert (x2673 x5984))
(assert (x2673 x3455))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8075 36)))
(assert (x8912 32 (ite (= 0 x8109) 1 0)))
(assert (= x5450 (and (not x8920) x7100)))
(assert (x2673 x5990))
(assert (x2673 x1759))
(assert (=> (>= 10000 x2737) (= 0 (x530 x2737))))
(assert (x2673 x3765))
(assert (x2673 x8433))
(assert (x2673 x4246))
(assert (> (x3305 64 x9009 36) 10000))
(assert (< 10000 (x3305 64 x1166 36)))
(assert (x2673 x8071))
(assert (= (and x5767 x5183) x7206))
(assert (=> (>= 10000 x4542) (= 0 (x530 x4542))))
(assert (x2673 x1875))
(assert (=> (<= x2024 10000) (= (x530 x2024) 0)))
(assert (= (and x7360 (not x568)) x7008))
(assert (= (x1802 (x3305 64 x8928 2)) 2))
(assert (< (x3305 64 x346 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x751))
(assert (= (x530 (x3305 64 x7175 100)) (x3305 64 x7175 100)))
(assert (=> (>= 10000 x830) (= (x530 x830) 0)))
(assert (= (x3305 64 x2051 100) (x530 (x3305 64 x2051 100))))
(assert (= 0 (x530 52207524433148634532707337042868834046575769438058807509068660137114659192832)))
(assert (x2673 x8817))
(assert (= x8970 (or (and x4412 x2983) (and x4112 x6403) (and x5471 x7146) (and x6229 x7692) (and x3875 x3468) (and x5552 x7785))))
(assert (not (x669 (x3305 64 x7718 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x271 100)))
(assert (x2673 x682))
(assert (x8339 x5590))
(assert (x2673 x5347))
(assert (> (x3305 64 x1051 100) 10000))
(assert (x2673 x7108))
(assert (= (x967 (x3305 64 x776 100)) 64))
(assert (x2673 x5444))
(assert (x2673 x5807))
(assert (x2673 x3754))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4761 100)))
(assert (= (and (not x4324) x4596) x91))
(assert (x7454 x2241))
(assert (> (x3305 64 x5550 100) 10000))
(assert (= (x3305 64 x1883 36) (x530 (x3305 64 x1883 36))))
(assert (x2673 x436))
(assert (x2673 x273))
(assert (x2673 x3027))
(assert (x2673 x6174))
(assert (x2673 x1151))
(assert (= (x530 (x3305 64 x8671 100)) (x3305 64 x8671 100)))
(assert (not (x669 (x3305 64 x6131 100))))
(assert (= (x3305 64 x4107 100) (x530 (x3305 64 x4107 100))))
(assert (= 64 (x967 (x3305 64 x7443 100))))
(assert (= x2015 (or x2150 x6603)))
(assert (x2673 x676))
(assert (= (x967 (x3305 64 x2212 100)) 64))
(assert (x2673 x7608))
(assert (= (and (not x3444) x8522) x7464))
(assert (x4097 x3759 32))
(assert (= (or x7111 x7846) x5102))
(assert (= x5565 (and x8332 (not x833))))
(assert (x2673 x7097))
(assert (x2673 x81))
(assert (x2673 x5440))
(assert (=> (<= x6832 10000) (= 0 (x530 x6832))))
(assert (x2673 x5921))
(assert (x8339 x7371))
(assert (= (and (not x7798) x6843) x4952))
(assert (x4097 x2570 256))
(assert (x4744 x7317))
(assert (x8339 x6294))
(assert (x2673 x6678))
(assert (=> (<= x1953 10000) (= 0 (x530 x1953))))
(assert (x7454 x2375))
(assert (= x2290 (and x513 x1458)))
(assert (x2673 x6391))
(assert (not (x669 (x3305 64 x7718 2))))
(assert (x2673 x267))
(assert (x2673 x7796))
(assert (= x6108 (and (not x4675) x9095)))
(assert (= (and (not x72) x5755) x6860))
(assert (= x6525 (or x2553 x4994)))
(assert (x2673 x6993))
(assert (= x8032 (x4290 (x3305 64 x8032 100))))
(assert (x2673 x3511))
(assert (= 36 (x1802 (x3305 64 x6135 36))))
(assert (x2673 x8440))
(assert (= (x530 (x3305 64 x9009 36)) (x3305 64 x9009 36)))
(assert (x7454 x1682))
(assert (x2673 x3782))
(assert (x2673 x2855))
(assert (x2673 x2656))
(assert (x5050 x7305))
(assert (x2673 x5699))
(assert (= 100 (x1802 (x3305 64 x217 100))))
(assert (= 64 (x967 (x3305 64 x5335 100))))
(assert (=> (<= x7290 10000) (= (x530 x7290) 0)))
(assert (x2673 x6210))
(assert (> (x3305 64 x719 100) 10000))
(assert (x2673 x1346))
(assert (x2673 x3813))
(assert (= 64 (x967 (x3305 64 x8615 100))))
(assert (= (x967 (x3305 64 x8489 100)) 64))
(assert (= (and (not x8783) x4470) x4942))
(assert (= (x967 (x3305 64 x4488 36)) 64))
(assert (x2673 x4455))
(assert (= x5793 (and x8604 (not x6745))))
(assert (= 36 (x1802 (x3305 64 x3724 36))))
(assert (x4097 x8935 256))
(assert (= (x4290 (x3305 64 x2379 11)) x2379))
(assert (x2673 x7285))
(assert (= 100 (x1802 (x3305 64 x436 100))))
(assert (= (x530 x928) (x530 (+ x928 1))))
(assert (x4744 x882))
(assert (x2673 x915))
(assert (= (x4290 (x3305 64 x4266 100)) x4266))
(assert (x2673 x1110))
(assert (= 100 (x1802 (x3305 64 x8238 100))))
(assert (= (x4290 (x3305 64 x6769 100)) x6769))
(assert (= x8277 (or x1962 x2362)))
(assert (= (=> (= x287 (= 0 x7408)) (and (=> (and x287 (and (= x6880 true) (= x3061 false) (= x7801 x5327))) x8273) (=> (and (not x287) (= x4720 x8846)) x3536))) x4059))
(assert (x7454 x1287))
(assert (= (x3305 64 x4913 100) (x530 (x3305 64 x4913 100))))
(assert (x9110 x1436))
(assert (< 10000 (x3305 64 x8148 6)))
(assert (not (x669 (x3305 64 x5173 100))))
(assert (x2673 x1428))
(assert (x2673 x6536))
(assert (x2673 x638))
(assert (not (x669 (x3305 64 x474 100))))
(assert (x2673 x2128))
(assert (< 10000 (x3305 64 x6769 100)))
(assert (x2673 x5914))
(assert (x2673 x5066))
(assert (x2673 x7274))
(assert (not (x669 (x3305 64 x4519 36))))
(assert (= x429 (=> (= x2653 (= 0 x3787)) (and (=> (and x2653 (and (= x7801 x852) (= x3217 true) (= false x7497))) x8273) (=> (and (not x2653) (= x6245 x6439)) x7940)))))
(assert (x2673 x2198))
(assert (x2673 x4601))
(assert (x2673 x7466))
(assert (x4744 x5048))
(assert (x2673 x3991))
(assert (= x3374 (=> (and (= (x7405 (+ 31 x4152)) x8055) (= x3295 (x7405 (+ x4693 x4152))) (= x2489 (x484 x7655)) (= x6552 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8055)) (= x5871 (= 0 x2489)) (= (x7405 (+ x6552 x4693)) x4819) (= (x7190 (- x4819 x978)) x5929)) (and (=> (and (and (= x7321 true) (= false x1523) (= 0 x7801)) x5871) x8273) (=> (and (not x5871) (and (or (and x2897 (and x7431 (= (= (x3294 x7655) x3434) x1943) (= x3434 (x622 x7655)) (>= 4294967295 x852) (= (<= x4863 (x3294 x4894)) x7431) x1943 (= x4863 (x622 x4894)))) (not x2897)) (= x2897 (> x3787 0)))) x3021)))))
(assert (=> (>= 10000 x4661) (= 0 (x530 x4661))))
(assert (x2673 x586))
(assert (=> (<= x1237 10000) (= (x530 x1237) 0)))
(assert (x2673 x685))
(assert (x2673 x4858))
(assert (= (x4290 (x3305 64 x474 100)) x474))
(assert (x2673 x6599))
(assert (= (and x7185 (not x1971)) x513))
(assert (= x7943 (=> (and (= (= 0 x6759) x5595) (or x5595 (not x5595))) x7063)))
(assert (= x6307 (and x4986 x8447)))
(assert (=> (>= 10000 x8026) (= (x530 x8026) 0)))
(assert (x2673 x5837))
(assert (x8339 x2294))
(assert (x2673 x5221))
(assert (=> (>= 10000 x744) (= 0 (x530 x744))))
(assert (x2673 x777))
(assert (= 100 (x1802 (x3305 64 x8197 100))))
(assert (x2673 x4920))
(assert (=> (<= x8506 10000) (= 0 (x530 x8506))))
(assert (= (x1802 (x3305 64 x6939 100)) 100))
(assert (= x2471 (x4290 (x3305 64 x2471 100))))
(assert (x2673 x6765))
(assert (not (x669 (x3305 64 x9039 100))))
(assert (x2673 x2495))
(assert (not (x669 (x3305 64 x2874 100))))
(assert (= 64 (x967 (x3305 64 x7239 36))))
(assert (x2673 x8613))
(assert (= (x967 (x3305 64 x4266 100)) 64))
(assert (= (and (not x8683) x5730) x5916))
(assert (x2673 x2661))
(assert (x2673 x8489))
(assert (x2673 x8547))
(assert (< (x3305 64 x5721 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5029))
(assert (x2673 x8597))
(assert (= x5390 (x4290 (x3305 64 x5390 100))))
(assert (x2673 x4263))
(assert (x2673 x670))
(assert (x2673 x5289))
(assert (= (x1802 (x3305 64 x1725 100)) 100))
(assert (not (x669 (x3305 64 x324 36))))
(assert (x2673 x2999))
(assert (= (x3305 64 x4542 100) (x530 (x3305 64 x4542 100))))
(assert (x8912 1000000000 x2239))
(assert (= (x530 (x3305 64 x8928 2)) (x3305 64 x8928 2)))
(assert (= x128 (and x7783 x2148)))
(assert (x2673 x8032))
(assert (x8339 x6448))
(assert (x2673 x3706))
(assert (= x7892 (x4290 (x3305 64 x7892 100))))
(assert (x2673 x7565))
(assert (x4744 x5166))
(assert (x2673 x8479))
(assert (x2673 x6719))
(assert (> (x3305 64 x3266 100) 10000))
(assert (x2673 x5549))
(assert (= (x4290 (x3305 64 x7718 6)) x7718))
(assert (= (and x2436 x8929) x6076))
(assert (= x709 (and x1096 (not x8141))))
(assert (x2673 x606))
(assert (x9110 x8034))
(assert (x2673 x4135))
(assert (= (x3305 64 x4094 100) (x530 (x3305 64 x4094 100))))
(assert (x2673 x4721))
(assert (< 10000 (x3305 64 x830 36)))
(assert (x2673 x6399))
(assert (x4097 x4166 256))
(assert (= (=> (and (= (x2701 x8890) x3625) (= (not (> x3193 x2121)) x7706) (= x2121 (x7405 (+ x5795 32)))) (and x7706 (=> (= x2121 x7199) x5674))) x8203))
(assert (x4097 x6429 256))
(assert (x2673 x6804))
(assert (x2673 x8361))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3266 100)))
(assert (x2673 x3242))
(assert (x8339 x4032))
(assert (= 64 (x967 (x3305 64 x9127 10))))
(assert (= (x1802 (x3305 64 x3459 100)) 100))
(assert (x2673 x2421))
(assert (x4744 x8734))
(assert (x4744 x313))
(assert (= (x967 (x3305 64 x2538 100)) 64))
(assert (x2673 x3764))
(assert (x2673 x8170))
(assert (= (and x7808 (not x2872)) x7717))
(assert (x2673 x4647))
(assert (x2673 x1614))
(assert (x2673 x1363))
(assert (x5050 x5379))
(assert (x7454 x141))
(assert (= (x530 (x3305 64 x4519 36)) (x3305 64 x4519 36)))
(assert (not (x669 (x3305 64 x2736 100))))
(assert (x2673 x4288))
(assert (x2673 x3868))
(assert (not (x669 (x3305 64 x6251 100))))
(assert (x2673 x6644))
(assert (x2673 x7114))
(assert (= (x4290 (x3305 64 x6642 100)) x6642))
(assert (= (and x1775 (not x2352)) x1904))
(assert (x2673 x5567))
(assert (x2673 x842))
(assert (not (x669 (x3305 64 x2642 100))))
(assert (x5050 x8745))
(assert (x2673 x2700))
(assert (x2673 x3631))
(assert (= x4436 (or x2516 x1872)))
(assert (x2673 x5031))
(assert (x2673 x6570))
(assert (= (x1802 (x3305 64 x8928 36)) 36))
(assert (not (x669 (x3305 64 x1591 100))))
(assert (x2673 x5852))
(assert (= x7236 (or x6510 x4934)))
(assert (x4097 x7539 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4806))
(assert (x2673 x3569))
(assert (= x548 (=> (and (= 480 x5841) (= (= 255 x4087) x6694) (= 480 x969)) (and (=> (and (not x6694) (and (= x207 (x5917 255 x2294)) (= x7621 (x3305 64 x4087 12)) (= (+ 1 x4087) x2294) (= x4820 (= 255 x6804)) (= (x5917 255 x2294) x6804) (= (x3011 x7621) x275) (<= x275 18446744073709551615))) (and (=> x4820 x4793) (=> (and (not x4820) (and (= x8784 (x5917 255 x4842)) (= x3911 (x5917 255 x4842)) (= (x4588 x2116 300) x6013) (= x8446 (x3305 64 x6804 36)) (= x5043 (= 255 x3911)) (= (x8042 x8446) x2116) (= x4842 (+ x6804 1)))) (and (=> (and (not x5043) (and (= x102 (x3305 64 x3911 100)) (= x3629 (x7941 x102)) (= x8950 (= x2795 255)) (= x8560 (+ x3911 1)) (= (x5917 255 x8560) x2795) (= x7291 (x5917 255 x8560)))) (and (=> (and (not x8950) (and (= (x3305 64 x2795 100) x1136) (= x4321 (x7941 x1136)) (= x3266 (x5917 255 x2665)) (= (+ x2795 1) x2665) (= (x5917 255 x2665) x1881) (= x8688 (= 255 x3266)))) (and (=> x8688 x4437) (=> (and (and (= (= 255 x4155) x3095) (= x3380 (x7941 x6913)) (= (+ 1 x3266) x5964) (= x6913 (x3305 64 x3266 100)) (= (x5917 255 x5964) x201) (= x4155 (x5917 255 x5964))) (not x8688)) (and (=> (and (and (= x6848 (x5917 255 x815)) (= x8884 (x3305 64 x4155 100)) (= x1590 (x7941 x8884)) (= (+ 1 x4155) x815) (= (= x6848 255) x614) (= x3324 (x5917 255 x815))) (not x3095)) (and (=> (and (not x614) (and (= (+ x6848 1) x8956) (= x6961 (= x6651 255)) (= x1703 (x3305 64 x6848 100)) (= (x5917 255 x8956) x6651) (= x5371 (x5917 255 x8956)) (= x4201 (x7941 x1703)))) (and (=> x6961 x5500) (=> (and (not x6961) (and (= x3437 (+ 1 x6651)) (= (x5917 255 x3437) x1154) (= (x3305 64 x6651 100) x1748) (= (= 255 x6832) x8582) (= x6832 (x5917 255 x3437)) (= x1205 (x7941 x1748)))) (and (=> (and (and (= (x3305 64 x6832 100) x9) (= x3499 (x5917 255 x3850)) (= (+ 1 x6832) x3850) (= x5312 (= 255 x3499)) (= (x5917 255 x3850) x4076) (= (x7941 x9) x1285)) (not x8582)) (and (=> x5312 x3719) (=> (and (not x5312) (and (= x6521 (x5917 255 x6666)) (= (x3305 64 x3499 100) x5227) (= x8537 (x5917 255 x6666)) (= x7330 (x7941 x5227)) (= x6666 (+ 1 x3499)) (= (= x8537 255) x5313))) (and (=> (and (not x5313) (and (= x802 (x5917 255 x8709)) (= (x3305 64 x8537 100) x4862) (= (+ 1 x8537) x8709) (= x5162 (= 255 x1256)) (= x1256 (x5917 255 x8709)) (= (x7941 x4862) x5838))) (and (=> (and (and (= (+ x6013 31) x9091) (= x6152 (x7405 (+ x657 32))) (= (x7405 (+ x1179 32)) x5308) (= x3849 (x7405 (+ x5308 32))) (= (x7405 (+ 32 x4288)) x657) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8705) (= (x7190 (- x3849 x8705)) x6463) (not (= x8705 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x7405 (+ 32 x6252)) x358) (= x3087 (x7405 (+ 32 x6152))) (= x6252 (x7405 (+ x5781 32))) (= x835 (+ 1 x1256)) (= x7486 (x5917 255 x835)) (< x8705 x3849) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x8705)) (= (x5917 255 x835) x4720) (= (x7405 (+ x358 32)) x4482) (= (x7405 (+ x3087 32)) x5781) (not (= x8705 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= x2308 (x7941 x6698)) (= x3607 (x7190 (- x6463 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8705) (= x6698 (x3305 64 x1256 100)) (= (x7405 (+ 32 x4482)) x1179) (= x4288 (x7405 (+ x8705 32))) (= x6218 (< x9091 x6013)) (<= x8705 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 0 x5240)) (not x5162)) (and (=> x6218 x4793) (=> (and (not x6218) (= x2626 (< x9091 x6013))) (and (=> (and x2626 (= x3849 x4151)) x9041) (=> (and (not x2626) (and (= x5920 (> x6013 x1473)) (= x1473 (x6321 x8705)))) (and (=> (and x5920 (= x3849 x4628)) x4900) (=> (and (= x4685 (= 0 x6013)) (not x5920)) (and (=> (and (not x4685) (and (or (= 0 x3358) (= x3358 32)) (= x1421 (x7405 (+ x3849 x7334))) (= x2421 (* 32 (ite (= x7334 0) 1 0))) (= (x7405 (+ x3358 x1421)) x8735) (= (* (ite (= 0 x7334) 1 0) 32) x3358) (or (= 0 x2421) (= 32 x2421)) (= x1997 (x7405 (+ x2421 x698))) (= x7334 (x5917 31 x6013)) (= x6737 (< x8735 x3355)) (= x698 (x7405 (+ x7334 x8705))) (= x3355 (x7405 (+ x8735 x6013))))) (and (=> x6737 x373) (=> (and (= x8735 x3354) (not x6737)) x1059))) (=> (and x4685 (and (= x4722 x1972) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3849) (= x3849 x4646) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3849)) (= (x7405 (+ 32 x3849)) x4722) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3849) (<= x3849 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3849)) (not (= x3849 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (< x3849 x4722))) x1727))))))))) (=> x5162 x5869))) (=> x5313 x2848))))) (=> x8582 x1177))))) (=> x614 x812))) (=> x3095 x3906))))) (=> x8950 x4793))) (=> x5043 x4793))))) (=> x6694 x3247)))))
(assert (x7454 x120))
(assert (x9110 x8312))
(assert (x2673 x6667))
(assert (x4097 x6093 32))
(assert (x2673 x740))
(assert (x2673 x1141))
(assert (= x3930 (=> (= x5491 x3214) x3707)))
(assert (= (x3305 64 x6672 100) (x530 (x3305 64 x6672 100))))
(assert (= (x1802 (x3305 64 x7113 100)) 100))
(assert (= (and x7185 x1971) x8266))
(assert (= x7800 (and x7053 x5723)))
(assert (x2673 x8430))
(assert (x2673 x8639))
(assert (x4097 x8712 256))
(assert (x7454 x2570))
(assert (= (x530 (x3305 64 x8928 6)) (x3305 64 x8928 6)))
(assert (x2673 x7317))
(assert (x2673 x2717))
(assert (=> (>= 10000 x6226) (= (x530 x6226) 0)))
(assert (x1240 x6833))
(assert (= (or x8517 x5639) x3502))
(assert (x8339 x7993))
(assert (x2673 x5087))
(assert (= (and x7079 x7207) x2524))
(assert (x7454 x5760))
(assert (x2673 x1259))
(assert (x2673 x7525))
(assert (x2673 x1316))
(assert (= (=> (and (= x471 (+ x3617 1)) (= x4020 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1064)) (>= x3304 1) (= x4580 (x7190 (- x3614 x6337))) (= x9079 (x2332 x8869)) (= x2566 x4128) (<= x7963 4294967295) (<= x8105 1461501637330902918203684832716283019655932542975) x5157 (= x6425 x8105) (= (x7405 (+ x6520 x725)) x6906) x3516 (= (x7405 (+ x725 31)) x1064) (>= x2907 1) (= (x7405 (+ x6520 x4020)) x3614) (= x8235 x2900) (= (x2332 x4894) x8984) (= (<= x8984 (x5095 x4894)) x3516) (= x5157 (= (x5095 x8869) x9079)) (= (x484 x8869) x2907)) x1680) x1185))
(assert (= (x4290 (x3305 64 x4013 100)) x4013))
(assert (x2673 x8659))
(assert (x2673 x2275))
(assert (x2673 x8315))
(assert (=> (<= x3742 10000) (= 0 (x530 x3742))))
(assert (x2673 x5213))
(assert (x2673 x1807))
(assert (= (and (not x4998) x1148) x2391))
(assert (= (and x4558 x2812) x1818))
(assert (x7454 x4540))
(assert (x8339 x2930))
(assert (= (x4290 (x3305 64 x1486 100)) x1486))
(assert (= x3983 (and x1268 x5109)))
(assert (x2673 x6767))
(assert (x2673 x4274))
(assert (> (x3305 64 x1883 36) 10000))
(assert (x4097 x2767 256))
(assert (x7454 x5828))
(assert (x2673 x4577))
(assert (x2673 x5883))
(assert (x4097 x922 256))
(assert (=> (>= 10000 x881) (= 0 (x530 x881))))
(assert (= 2 (x1802 (x3305 64 x683 2))))
(assert (= (or x7320 x7758) x6352))
(assert (x2673 x8714))
(assert (x2673 x8499))
(assert (< 10000 (x3305 64 x6651 100)))
(assert (=> (<= x930 10000) (= (x530 x930) 0)))
(assert (x8912 32 (ite (= 0 x3752) 1 0)))
(assert (=> (>= 10000 x3088) (= (x530 x3088) 0)))
(assert (= x6581 (and x2330 (not x2249))))
(assert (=> (<= x7735 10000) (= 0 (x530 x7735))))
(assert (> (x3305 64 x3109 100) 10000))
(assert (not (x669 (x3305 64 x3076 36))))
(assert (not (x669 (x3305 64 x1073 100))))
(assert (= (or x716 (and x1944 (not x5496))) x8393))
(assert (= x1918 (=> (and (= x8805 x8992) (<= 481 x8992) (>= 606 x8992) (= x8992 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4366)) (= x4366 (+ 31 x5303))) x3592)))
(assert (=> (>= 10000 x6932) (= (x530 x6932) 0)))
(assert (= 64 (x967 (x3305 64 x6053 2))))
(assert (x2673 x4044))
(assert (x2673 x6120))
(assert (= x1920 (=> (and (= x2685 (x1055 608)) (= (x7405 (+ 96 x7927)) x4047) (= (not (< 128 x4023)) x3350)) (and x2287 x3350))))
(assert (= 36 (x1802 (x3305 64 x8352 36))))
(assert (x4744 x3437))
(assert (not (x669 (x3305 64 x2471 100))))
(assert (x2673 x8980))
(assert (x2673 x1093))
(assert (= x731 (=> (and (= true x8786) (= x27 false)) x3445)))
(assert (x2673 x6819))
(assert (x4097 x1927 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x3305 64 x6319 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1050 (or x8471 x8579)))
(assert (= (and x74 x6658) x8657))
(assert (x2673 x6672))
(assert (= (x3305 64 x6806 100) (x530 (x3305 64 x6806 100))))
(assert (x2673 x4690))
(assert (< (x3305 64 x8537 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2687))
(assert (x2673 x571))
(assert (x2673 x206))
(assert (=> (>= 10000 x1442) (= 0 (x530 x1442))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x261 100)))
(assert (= (and x4257 (not x728)) x1623))
(assert (x2673 x5604))
(assert (x2673 x1007))
(assert (=> (<= x162 10000) (= 0 (x530 x162))))
(assert (x7454 x3546))
(assert (x2673 x1008))
(assert (x2673 x38))
(assert (= 64 (x967 (x3305 64 x1256 100))))
(assert (x2673 x1810))
(assert (x2673 x3391))
(assert (= x5674 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x5937) (<= 1 x4690) (= x5937 x6594) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4690) (< x5937 x4690) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8327) x4690) (= x8327 (x7405 (+ 31 x7199))) (= x6337 x4690) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x5937) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x5937)) x1544)))
(assert (x2673 x3199))
(assert (= (x3305 64 x6212 100) (x530 (x3305 64 x6212 100))))
(assert (=> (>= 10000 x261) (= (x530 x261) 0)))
(assert (x2673 x1113))
(assert (x2673 x9023))
(assert (x2673 x36))
(assert (x2673 x1850))
(assert (not (x669 (x3305 64 x3733 100))))
(assert (= (and x2458 x6191) x3612))
(assert (x2673 x5480))
(assert (= x8945 (and x3231 x287)))
(assert (x1240 x1927))
(assert (= (x1802 (x3305 64 x7673 100)) 100))
(assert (x4097 x8433 32))
(assert (= (x1802 (x3305 64 x6273 36)) 36))
(assert (=> (>= 10000 x2252) (= (x530 x2252) 0)))
(assert (x2673 x6118))
(assert (x2673 x7966))
(assert (x4097 x4842 256))
(assert (= 64 (x967 (x3305 64 x2976 100))))
(assert (x4744 x3745))
(assert (x2673 x2767))
(assert (x2673 x2960))
(assert (= (x4290 (x3305 64 x7443 100)) x7443))
(assert (x2673 x60))
(assert (x2673 x395))
(assert (x2673 x5907))
(assert (not (x669 (x3305 64 x8225 100))))
(assert (= x2354 (x4290 (x3305 64 x2354 100))))
(assert (x2673 x8335))
(assert (x2673 x2062))
(assert (= (x4290 (x3305 64 x8644 100)) x8644))
(assert (x2673 x6541))
(assert (x7454 x4111))
(assert (x9110 x1394))
(assert (= (or x6064 x8995) x8919))
(assert (= (x3305 64 x3499 100) (x530 (x3305 64 x3499 100))))
(assert (= x828 (and x2720 (not x406))))
(assert (x2673 x4965))
(assert (x8339 x3764))
(assert (= x4836 (and (not x1076) x2069)))
(assert (x2673 x380))
(assert (x2673 x34))
(assert (=> (>= 10000 x7796) (= (x530 x7796) 0)))
(assert (x2673 x7351))
(assert (x2673 x2750))
(assert (= 100 (x1802 (x3305 64 x4248 100))))
(assert (x4097 x6283 256))
(assert (= 64 (x967 (x3305 64 x7432 6))))
(assert (x2673 x276))
(assert (x2673 x4364))
(assert (= (x1802 (x3305 64 x162 100)) 100))
(assert (x2673 x150))
(assert (= x5198 (and (not x2873) x8072)))
(assert (x2673 x1489))
(assert (< (x3305 64 x6053 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x7625 (and x4843 x5847)))
(assert (= (x3305 64 x7129 100) (x530 (x3305 64 x7129 100))))
(assert (x4097 x2575 256))
(assert (= x7015 (and x940 (not x6374))))
(assert (x8912 32 (ite (= x5820 0) 1 0)))
(assert (x2673 x8851))
(assert (= 64 (x967 (x3305 64 x6854 100))))
(assert (= x7652 (or (and x6376 x7488) (and x5313 x5851) (and x3024 x1060) (and x4882 x75))))
(assert (x2673 x360))
(assert (x2673 x1771))
(assert (x2673 x4528))
(assert (x2673 x5980))
(assert (=> (<= x7152 10000) (= 0 (x530 x7152))))
(assert (< 10000 (x3305 64 x5012 100)))
(assert (= (and x5630 x1732) x8016))
(assert (x2673 x6654))
(assert (> (x3305 64 x6457 100) 10000))
(assert (x2673 x7058))
(assert (x8502 (ite (= 0 x6740) 1 0)))
(assert (< 10000 (x3305 64 x5508 36)))
(assert (= 64 (x967 (x3305 64 x1442 100))))
(assert (x4744 x5353))
(assert (= (x3305 64 x4648 100) (x530 (x3305 64 x4648 100))))
(assert (= 64 (x967 (x3305 64 x8060 6))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2079 100)))
(assert (x4097 x5644 256))
(assert (x2673 x2195))
(assert (x7454 x8709))
(assert (x2673 x6016))
(assert (x2673 x4337))
(assert (= (x3305 64 x3730 0) (x530 (x3305 64 x3730 0))))
(assert (x2673 x2263))
(assert (x2673 x291))
(assert (x2673 x1513))
(assert (x2673 x4693))
(assert (x4097 x6833 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x530 (x3305 64 x8099 100)) (x3305 64 x8099 100)))
(assert (x4097 x2401 300))
(assert (x2673 x106))
(assert (= x2576 (and x880 x8011)))
(assert (=> (>= 10000 x951) (= 0 (x530 x951))))
(assert (= 64 (x967 (x3305 64 x7378 36))))
(assert (= x2477 (and (not x2586) x7495)))
(assert (x8339 x1837))
(assert (=> (>= 10000 x6053) (= (x530 x6053) 0)))
(assert (x2673 x7247))
(assert (x2673 x1974))
(assert (x4744 x1287))
(assert (= x8858 (and x1028 x4310)))
(assert (= (x1802 (x3305 64 x6172 36)) 36))
(assert (x2673 x8646))
(assert (x2673 x3819))
(assert (x2673 x8476))
(assert (x2673 x2982))
(assert (= 64 (x967 (x3305 64 x3730 0))))
(assert (x4097 x6814 32))
(assert (= x3719 (=> (and (= x6188 true) (= x6988 false) (= x7801 36)) x8273)))
(assert (= x5517 (and (not x2248) x4070)))
(assert (x2673 x4534))
(assert (x2673 x113))
(assert (= (x3305 64 x2644 100) (x530 (x3305 64 x2644 100))))
(assert (x2673 x2706))
(assert (= (and x8683 x5730) x3928))
(assert (=> (<= x8731 10000) (= 0 (x530 x8731))))
(assert (x2673 x1406))
(assert (< (x3305 64 x5488 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x9110 x3574))
(assert (= 64 (x967 (x3305 64 x1306 1))))
(assert (= (x1802 (x3305 64 x7822 36)) 36))
(assert (x2673 x4484))
(assert (= 0 (x530 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= x1321 (and x2013 x7170)))
(assert (x2673 x8427))
(assert (= (x530 1000000000) 0))
(assert (= (x1802 (x3305 64 x4648 100)) 100))
(assert (x2673 x1133))
(assert (x4097 x3140 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x7378 10000) (= (x530 x7378) 0)))
(assert (x2673 x4890))
(assert (x2673 x5012))
(assert (= x2749 (x4290 (x3305 64 x2749 100))))
(assert (= (and x6839 (not x351)) x632))
(assert (x669 3628442803))
(assert (x2673 x7048))
(assert (= (x3305 64 x6273 36) (x530 (x3305 64 x6273 36))))
(assert (= x392 (and x5033 x3843)))
(assert (= x5022 (=> (and (<= x1785 606) (= x2955 (+ x6021 31)) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2955) x1785) (>= x1785 481) (= x1785 x864)) x7182)))
(assert (x2673 x3702))
(assert (x2673 x5141))
(assert (= x3707 (=> (and (>= 254 x3214) (>= x3214 1) (= x1890 false) (= (+ x3214 1) x3471) (= x4011 (x8042 x8661)) (= (x3305 64 x3214 36) x8661) (= (+ 1 x3214) x603) (= false x3935)) x382)))
(assert (x8339 x1255))
(assert (x4744 x3097))
(assert (x2673 x744))
(assert (x4744 x5964))
(assert (= (x4290 (x3305 64 x6932 100)) x6932))
(assert (= (x967 (x3305 64 x4027 100)) 64))
(assert (x2673 x412))
(assert (= (and x3321 (not x1320)) x2725))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= 64 (x967 (x3305 64 x2737 100))))
(assert (x2673 x1649))
(assert (x2673 x831))
(assert (x2673 x4925))
(assert (= (x967 (x3305 64 x3104 100)) 64))
(assert (=> (>= 10000 x7586) (= 0 (x530 x7586))))
(assert (= 100 (x1802 (x3305 64 x8489 100))))
(assert (x7454 x7442))
(assert (x2673 x1529))
(assert (=> (>= 10000 x719) (= 0 (x530 x719))))
(assert (x2673 x1382))
(assert (= (x967 (x3305 64 x744 100)) 64))
(assert (=> (>= 10000 x6807) (= 0 (x530 x6807))))
(assert (x2673 x5127))
(assert (not (x669 (x3305 64 x6212 100))))
(assert (x2673 x3924))
(assert (= x7227 (and x6480 x7374)))
(assert (x2673 x8051))
(assert (x2673 x6000))
(assert (= (and (not x3462) x3958) x4600))
(assert (x2673 x4904))
(assert (= (x1802 (x3305 64 x9039 100)) 100))
(assert (x7454 x922))
(assert (= 64 (x967 (x3305 64 x3729 100))))
(assert (=> (<= x9127 10000) (= 0 (x530 x9127))))
(assert (x4097 x1451 256))
(assert (not (x669 (x3305 64 x5127 100))))
(assert (= 100 (x1802 (x3305 64 x3580 100))))
(assert (= x6944 (and x3035 (not x329))))
(assert (x2673 x3007))
(assert (> (x3305 64 x3241 100) 10000))
(assert (x2673 x5762))
(assert (x2673 x6619))
(assert (x2673 x3344))
(assert (not (x669 (x3305 64 x7796 100))))
(assert (= x535 (=> (and (= x1166 x403) (= x3015 x4911) (= x4326 x8700) (= x4525 x5213)) x4417)))
(assert (x2673 x3189))
(assert (= x8471 (or x8830 x3496)))
(assert (x4097 x1195 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x9110 x2422))
(assert (= x4872 (or (and x5842 x6489) (and x2250 x3830) (and x8401 x6539) (and x6264 x7159) (and x5446 x5231) (and x8522 x3444) (and x2056 x4952) (and x7343 x2620) (and x2732 x3619) (and x6892 x632) (and x8643 x3328) (and x1933 x4833) (and x3034 x7690) (and x3418 x9076) (and x5439 x1123) (and x6944 x7139) (and x1867 x2139) (and x5053 x7464) (and x5580 x8260) (and x4877 x5434) (and x5853 x7667) (and x1204 x4996) (and x6843 x7798) (and x3081 x189) (and x936 x3281) (and x1526 x1040) (and x3152 x9109) (and x1775 x2352))))
(assert (x2673 x9006))
(assert (not (x669 (x3305 64 x6667 100))))
(assert (> (x3305 64 x7877 100) 10000))
(assert (= x8240 (and x5239 x5861)))
(assert (= (and x477 x4876) x5393))
(assert (x2673 x8474))
(assert (x4097 x6471 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4985 100)))
(assert (x2673 x6438))
(assert (x2673 x9087))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6212 100)))
(assert (= (x967 (x3305 64 x1272 36)) 64))
(assert (x8339 x9085))
(assert (x2673 x7253))
(assert (x2673 x2262))
(assert (x2673 x4043))
(assert (x2673 x1477))
(assert (x2673 x306))
(assert (x2673 x2023))
(assert (= x4009 (and x829 x7709)))
(assert (= (and (not x6600) x1197) x1758))
(assert (x2673 x4969))
(assert (x4097 x7893 256))
(assert (x2673 x1528))
(assert (= (=> (and (>= 606 x2945) (= x6093 (+ x6362 31)) (= x5534 x2945) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6093) x2945) (<= 481 x2945)) x4949) x6578))
(assert (x2673 x254))
(assert (x2673 x885))
(assert (= (x4290 (x3305 64 x5907 100)) x5907))
(assert (x4744 x7539))
(assert (= x5269 (x4290 (x3305 64 x5269 100))))
(assert (not (x669 (x3305 64 x7571 100))))
(assert (x4097 x8839 256))
(assert (x4097 x4056 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3757))
(assert (= (and x5997 (not x2974)) x5551))
(assert (x2673 x1004))
(assert (x2673 x7107))
(assert (x2673 x2955))
(assert (x2673 x1385))
(assert (< 10000 (x3305 64 x2313 100)))
(assert (> (x3305 64 x1586 100) 10000))
(assert (not (x669 (x3305 64 x4617 100))))
(assert (= (x4290 (x3305 64 x6531 100)) x6531))
(assert (not (x669 (x3305 64 x4661 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8499 100)))
(assert (x2673 x2945))
(assert (x4744 x5644))
(assert (x2673 x798))
(assert (x8339 x7319))
(assert (x4097 x4484 32))
(assert (=> (<= x1650 10000) (= 0 (x530 x1650))))
(assert (= x1265 (=> (and (= x5798 x3951) (= x4896 x3890) (= x2183 x3065) (= x4844 x5214) (= x886 x154) (= x6722 x6993) (= x4555 x3312) (= x8634 x661) (= x8170 x5304) (= x4063 x7594)) x6006)))
(assert (x4097 x3782 256))
(assert (= 64 (x967 (x3305 64 x1586 100))))
(assert (x2673 x5537))
(assert (= (x967 (x3305 64 x2708 100)) 64))
(assert (x2673 x2415))
(assert (x7454 x6924))
(assert (x2673 x7916))
(assert (x2673 x4860))
(assert (x2673 x1335))
(assert (= (x3305 64 x3210 100) (x530 (x3305 64 x3210 100))))
(assert (x4097 x5673 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x6237 10000) (= 0 (x530 x6237))))
(assert (x2673 x2379))
(assert (= (and x2206 (not x233)) x6403))
(assert (x2673 x1975))
(assert (x2673 x6071))
(assert (= x2412 (and x2025 x4139)))
(assert (< (x3305 64 x4285 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x727))
(assert (x2673 x5535))
(assert (x2673 x2063))
(assert (= (=> (= x7404 x3558) x8679) x7292))
(assert (x2673 x6493))
(assert (not (x669 (x3305 64 x309 12))))
(assert (x2673 x7615))
(assert (x1240 x1924))
(assert (x2673 x661))
(assert (x2673 x8176))
(assert (x2673 x6674))
(assert (= (x3305 64 x6206 100) (x530 (x3305 64 x6206 100))))
(assert (x2673 x4725))
(assert (x2673 x3324))
(assert (x2673 x4532))
(assert (x2673 x1504))
(assert (x8339 x434))
(assert (x2673 x2138))
(assert (x1240 x4164))
(assert (x2673 x7144))
(assert (= (x1802 (x3305 64 x4661 100)) 100))
(assert (x8339 x5184))
(assert (x2673 x9060))
(assert (=> (>= 10000 x3617) (= (x530 x3617) 0)))
(assert (x2673 x3599))
(assert (x2673 x8567))
(assert (x2673 x1044))
(assert (x2673 x6053))
(assert (= (x4290 (x3305 64 x7673 100)) x7673))
(assert (= x8149 (or x1050 x2603)))
(assert (x2673 x2638))
(assert (x4097 x735 32))
(assert (x2673 x5469))
(assert (= (x530 (x3305 64 x4146 36)) (x3305 64 x4146 36)))
(assert (x2673 x2759))
(assert (= x6817 (and x2746 x6591)))
(assert (x4097 x9088 32))
(assert (= (x3305 64 x1166 36) (x530 (x3305 64 x1166 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4087 12)))
(assert (not (x669 (x3305 64 x5440 36))))
(assert (< 10000 (x3305 64 x474 100)))
(assert (= x1177 (=> (and (= x7801 36) (= x4357 false) (= true x6278)) x8273)))
(assert (x2673 x897))
(assert (=> (>= 10000 x8197) (= 0 (x530 x8197))))
(assert (x2673 x5929))
(assert (x2673 x836))
(assert (= 36 (x1802 (x3305 64 x4146 36))))
(assert (= (or x4654 x7392) x4960))
(assert (< (x3305 64 x3954 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x530 (x3305 64 x6251 100)) (x3305 64 x6251 100)))
(assert (=> (>= 10000 x5750) (= (x530 x5750) 0)))
(assert (not (x669 (x3305 64 x7354 100))))
(assert (x2673 x3892))
(assert (= (and x3510 x3543) x6956))
(assert (x2673 x1733))
(assert (= (and x6155 x1656) x6014))
(assert (< 10000 (x3305 64 x4488 36)))
(assert (x2673 x2454))
(assert (x2673 x4661))
(assert (= (and x5322 (not x733)) x6960))
(assert (x2673 x5796))
(assert (x2673 x4990))
(assert (= (and (not x3095) x397) x7492))
(assert (x2673 x5835))
(assert (= x7906 (and x2780 (not x5628))))
(assert (= x8707 (and x3064 x7691)))
(assert (= 64 (x967 (x3305 64 x8537 100))))
(assert (= x6368 x5337))
(assert (=> (<= x4614 10000) (= 0 (x530 x4614))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2379 11)))
(assert (= (x3305 64 x2145 36) (x530 (x3305 64 x2145 36))))
(assert (= 100 (x1802 (x3305 64 x8671 100))))
(assert (x2673 x6432))
(assert (= (and x1741 x7022) x1430))
(assert (x4744 x8012))
(assert (not (x669 (x3305 64 x8194 100))))
(assert (= (x4290 (x3305 64 x1621 100)) x1621))
(assert (= (x3305 64 x4488 36) (x530 (x3305 64 x4488 36))))
(assert (= x767 (and (not x4472) x3651)))
(assert (= (and (not x4119) x5273) x7785))
(assert (x2673 x2471))
(assert (= (x967 (x3305 64 x3210 100)) 64))
(assert (not (x669 (x3305 64 x1051 100))))
(assert (x2673 x5858))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4365 36)))
(assert (= (x530 (x3305 64 x5575 100)) (x3305 64 x5575 100)))
(assert (< 10000 (x3305 64 x8352 36)))
(assert (x2673 x8819))
(assert (x8339 x2401))
(assert (x2673 x2795))
(assert (x7454 x2772))
(assert (x8339 x7402))
(assert (= x4845 (and x4644 (not x3520))))
(assert (x2673 x8329))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3104 100)))
(assert (x2673 x6358))
(assert (x2673 x1596))
(assert (x2673 x1132))
(assert (x4097 x4904 300))
(assert (x2673 x8681))
(assert (x2673 x3838))
(assert (x4744 x5690))
(assert (x4744 x4874))
(assert (x2673 x6323))
(assert (x2673 x1568))
(assert (= (x4290 (x3305 64 x5173 100)) x5173))
(assert (x2673 x6588))
(assert (= (x3305 64 x8576 36) (x530 (x3305 64 x8576 36))))
(assert (< 10000 (x3305 64 x324 36)))
(assert (x2673 x5219))
(assert (x7454 x6303))
(assert (> (x3305 64 x217 100) 10000))
(assert (x2673 x5936))
(assert (not (x669 (x3305 64 x8613 36))))
(assert (=> (<= x2708 10000) (= (x530 x2708) 0)))
(assert (x8339 x5828))
(assert (= x5641 (and x5297 (not x2467))))
(assert (> (x3305 64 x5931 6) 10000))
(assert (x4097 x8516 256))
(assert (x7454 x4252))
(assert (= x2909 (=> (and (= x2990 (x7405 (+ 32 x5699))) (= (x7405 (+ 32 x5090)) x158) (= (x7405 (+ x441 31)) x243) (= x7313 (< 0 x750)) (= (x3032 x5090) x750) (= x5699 (x7405 (+ x749 x3028))) (= x4652 (x7405 (+ x4481 32))) (= x1252 (x7190 (- x5699 x7608))) (= x5191 (x7405 (+ x749 x441))) (= (x7405 (+ 32 x2242)) x4481) (= x3028 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x243))) (and (=> (and (and (= (x3014 x158) x6221) (= x9037 (> x750 32))) x7313) (and (=> (not x9037) x8663) (=> (and (and (= x5609 (< 64 x750)) (= (x7405 (+ x2990 32)) x5840) (= x3802 (x7405 (+ 32 x158))) (= x6437 (x1229 x3802))) x9037) (and (=> (not x5609) x8663) (=> (and (and (= (x7405 (+ 64 x2990)) x5602) (= x7946 (x3457 x2381)) (= (> x750 96) x5723) (= x2381 (x7405 (+ 64 x158)))) x5609) (and (=> x5723 x7010) (=> (not x5723) x8663))))))) (=> (not x7313) x8663)))))
(assert (= x3730 (x4290 (x3305 64 x3730 0))))
(assert (x4744 x3560))
(assert (x2673 x3190))
(assert (x2673 x2078))
(assert (not (x669 (x3305 64 x1166 36))))
(assert (= (x1802 (x3305 64 x6854 100)) 100))
(assert (x4097 x6981 256))
(assert (x669 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (=> (and (= (x2406 x3151) x3868) (= x6185 (x7405 (+ x3313 32))) (= x7845 (not (> x6727 x6185)))) (and (=> (= x5501 x6185) x8520) x7845)) x4539))
(assert (x4097 x5278 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x6013))
(assert (x7454 x1690))
(assert (= (=> (and (= (x7405 (+ 32 x70)) x5528) (= (x7405 (+ 128 x70)) x7662) (= (x7405 (+ x7662 32)) x2670) (= x2856 (x5032 480)) (= x6213 (> x2856 0)) (= (x7405 (+ x3481 4)) x70)) (and (=> (and x6213 (and (= (x4006 512) x6762) (= (< 32 x2856) x5789))) (and (=> (not x5789) x1061) (=> (and (and (= x1840 (< 64 x2856)) (= x4700 (x7405 (+ 32 x2670))) (= x5208 (x9040 544))) x5789) (and (=> (not x1840) x1061) (=> (and (and (= x5541 (> x2856 96)) (= x206 (x3926 576)) (= (x7405 (+ 64 x2670)) x2700)) x1840) (and (=> (not x5541) x1061) (=> x5541 x9018))))))) (=> (not x6213) x1061))) x3205))
(assert (= (x3305 64 x918 100) (x530 (x3305 64 x918 100))))
(assert (x2673 x6383))
(assert (= (x967 (x3305 64 x6135 36)) 64))
(assert (x2673 x894))
(assert (x2673 x6201))
(assert (x2673 x2411))
(assert (x2673 x870))
(assert (x2673 x3895))
(assert (x2673 x201))
(assert (= x6905 (and x557 x5460)))
(assert (x2673 x998))
(assert (x9110 x3714))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3733 100)))
(assert (x2673 x7329))
(assert (x2673 x2244))
(assert (x2673 x5362))
(assert (x2673 x4954))
(assert (= 100 (x1802 (x3305 64 x2750 100))))
(assert (x2673 x8296))
(assert (x4744 x5760))
(assert (= (x1802 (x3305 64 x5518 100)) 100))
(assert (x2673 x3703))
(assert (= x2466 (or x4009 x1147 x4382 x3119 x2171)))
(assert (x2673 x3295))
(assert (= (x1802 (x3305 64 x881 100)) 100))
(assert (x4097 x276 32))
(assert (x2673 x207))
(assert (= (x967 (x3305 64 x3617 100)) 64))
(assert (= (x3305 64 x3104 100) (x530 (x3305 64 x3104 100))))
(assert (= x2376 (=> (and (= x6964 (x7405 (+ x2413 4))) (= (x7405 (+ x6177 32)) x6442) (= (x7405 (+ x6964 128)) x6177) (= (> x5139 0) x7737) (= x5139 (x5366 480)) (= (x7405 (+ x6964 32)) x4890)) (and (=> (and x7737 (and (= (x805 512) x3156) (= x4440 (< 32 x5139)))) (and (=> (and (and (= (> x5139 64) x1036) (= (x7405 (+ 32 x6442)) x3749) (= (x7744 544) x8358)) x4440) (and (=> (and (and (= (x2893 576) x6678) (= (> x5139 96) x701) (= x644 (x7405 (+ 64 x6442)))) x1036) (and (=> (not x701) x6216) (=> x701 x1221))) (=> (not x1036) x6216))) (=> (not x4440) x6216))) (=> (not x7737) x6216)))))
(assert (> (x3305 64 x939 36) 10000))
(assert (x4097 x2564 32))
(assert (x2673 x5442))
(assert (< 10000 (x3305 64 x3150 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5508 36)))
(assert (x8339 x6040))
(assert (= x3335 (=> (and (= x6862 x8183) (= x1475 x2456) (= x8999 x6387) (= x412 x8665) (= x8853 x221) (= x7023 x5354) (= x2307 x1937) (= x2632 x889) (= x1493 x8737) (= x7759 x1868)) x8160)))
(assert (x8339 x8140))
(assert (= x1750 (or x4948 x6817)))
(assert (= (x530 (x3305 64 x4027 100)) (x3305 64 x4027 100)))
(assert (x2673 x5751))
(assert (x2673 x4007))
(assert (x2673 x8992))
(assert (x4097 x3139 256))
(assert (= (and (not x4685) x6902) x8367))
(assert (= (x530 (x3305 64 x2161 100)) (x3305 64 x2161 100)))
(assert (< (x3305 64 x7673 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x6953))
(assert (x2673 x4511))
(assert (x7454 x1633))
(assert (x2673 x3354))
(assert (x2673 x7788))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4617 100)))
(assert (= 100 (x1802 (x3305 64 x2538 100))))
(assert (x4097 x2063 256))
(assert (x4744 x4067))
(assert (= (x4290 (x3305 64 x2024 100)) x2024))
(assert (< (x3305 64 x3748 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x1822 256))
(assert (x2673 x4229))
(assert (x2673 x5800))
(assert (< 10000 (x3305 64 x3580 100)))
(assert (x7454 x434))
(assert (x2673 x1456))
(assert (< 10000 (x3305 64 x4299 100)))
(assert (x8339 x866))
(assert (x2673 x552))
(assert (= x7252 (and x7607 x3453)))
(assert (x2673 x1721))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8777 100)))
(assert (x8502 x3015))
(assert (= x2976 (x4290 (x3305 64 x2976 100))))
(assert (x2673 x8385))
(assert (x2673 x3269))
(assert (= x3150 (x4290 (x3305 64 x3150 100))))
(assert (= x4726 (=> (and (= x808 (x7405 (+ x7752 x7914))) (= (x7405 (+ 32 x6594)) x5829) (= x725 (x4325 x6594)) (= (> x725 0) x5678) (= x4065 (x7190 (- x808 x8065))) (= x6534 (x7405 (+ x7914 x1910))) (= x8433 (x7405 (+ x1910 31))) (= (x7405 (+ x808 32)) x6520) (= x5561 (x7405 (+ 32 x5546))) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8433) x7752) (= (x7405 (+ x1844 32)) x5546)) (and (=> (and x5678 (and (= (x8722 x5829) x5255) (= (> x725 32) x5738))) (and (=> (and (and (= x4395 (x5808 x469)) (= (x7405 (+ x5829 32)) x469) (= (< 64 x725) x3146) (= (x7405 (+ 32 x6520)) x9056)) x5738) (and (=> (not x3146) x1185) (=> (and x3146 (and (= x5734 (< 96 x725)) (= (x7405 (+ 64 x5829)) x2958) (= (x1254 x2958) x2165) (= x2170 (x7405 (+ 64 x6520))))) (and (=> (not x5734) x1185) (=> x5734 x5056))))) (=> (not x5738) x1185))) (=> (not x5678) x1185)))))
(assert (x4097 x7402 256))
(assert (= (x967 (x3305 64 x977 6)) 64))
(assert (x2673 x2595))
(assert (= (x4290 (x3305 64 x5331 36)) x5331))
(assert (x2673 x7888))
(assert (x2673 x1689))
(assert (x2673 x2388))
(assert (x2673 x3232))
(assert (= (=> (and (= x5599 (not (< x8942 x1875))) (= (x8782 x5476) x2020) (= x8942 (+ x4218 32))) (and x5599 (=> (= x8942 x461) x3106))) x6327))
(assert (x2673 x6017))
(assert (= x7581 (x4290 (x3305 64 x7581 36))))
(assert (not (x669 (x3305 64 x5537 100))))
(assert (= (x967 (x3305 64 x7796 100)) 64))
(assert (x2673 x4380))
(assert (< 10000 (x3305 64 x7140 100)))
(assert (x8339 x6833))
(assert (x2673 x2988))
(assert (> (x3305 64 x6807 100) 10000))
(assert (= 64 (x967 (x3305 64 x8044 100))))
(assert (x4744 x3140))
(assert (= x5219 (x4290 (x3305 64 x5219 36))))
(assert (< 10000 (x3305 64 x1591 100)))
(assert (x2673 x7815))
(assert (= x195 (and x8357 (not x369))))
(assert (x8502 (ite (= x1089 0) 1 0)))
(assert (x2673 x1963))
(assert (= (x530 102788308552044517260959567728648622381392053106279845986800620074717893623808) 0))
(assert (x2673 x7600))
(assert (x7454 x2665))
(assert (x2673 x573))
(assert (= x8387 (x4290 (x3305 64 x8387 36))))
(assert (x2673 x3677))
(assert (x4097 x2554 32))
(assert (x7454 x3962))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7378 36)))
(assert (x4744 x3610))
(assert (= x3536 (=> (= x7378 x8846) x4688)))
(assert (x2673 x5046))
(assert (x2673 x2273))
(assert (x7454 x5184))
(assert (= 64 (x967 (x3305 64 x4614 6))))
(assert (x2673 x2090))
(assert (= 64 (x967 (x3305 64 x7686 12))))
(assert (= (x4290 (x3305 64 x1113 100)) x1113))
(assert (x2673 x3025))
(assert (x2673 x7666))
(assert (x2673 x4746))
(assert (x2673 x2668))
(assert (x2673 x3258))
(assert (= 100 (x1802 (x3305 64 x2018 100))))
(assert (x2673 x8580))
(assert (= (x530 52207524433148634526794681841911218724012555196680520750525547801574629179392) 0))
(assert (x2673 x8787))
(assert (=> (>= 10000 x5127) (= (x530 x5127) 0)))
(assert (> (x3305 64 x4519 36) 10000))
(assert (x2673 x5373))
(assert (x2673 x4153))
(assert (x2673 x6939))
(assert (x2673 x4547))
(assert (x2673 x1111))
(assert (= (x967 (x3305 64 x474 100)) 64))
(assert (x2673 x1551))
(assert (not (x669 (x3305 64 x7373 100))))
(assert (x8502 (ite (= x430 0) 1 0)))
(assert (x4744 x7805))
(assert (< (x3305 64 x683 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7454 x5590))
(assert (x2673 x8706))
(assert (= (x3305 64 x439 100) (x530 (x3305 64 x439 100))))
(assert (= x8078 (and (not x5477) x7906)))
(assert (x2673 x4298))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3459 100)))
(assert (x2673 x8309))
(assert (x2673 x4800))
(assert (x2673 x8839))
(assert (= (x1802 (x3305 64 x6494 100)) 100))
(assert (x2673 x2357))
(assert (=> (<= x8537 10000) (= 0 (x530 x8537))))
(assert (x2673 x8701))
(assert (= x3339 (and (not x7797) x1762)))
(assert (not (x669 (x3305 64 x3232 100))))
(assert (=> (>= 10000 x8238) (= 0 (x530 x8238))))
(assert (= (x530 (x3305 64 x8085 100)) (x3305 64 x8085 100)))
(assert (< 10000 (x3305 64 x8352 6)))
(assert (x7454 x1091))
(assert (< (x3305 64 x6251 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 100 (x1802 (x3305 64 x7773 100))))
(assert (< 10000 (x3305 64 x5870 100)))
(assert (x2673 x8766))
(assert (not (x669 (x3305 64 x2161 100))))
(assert (x2673 x6192))
(assert (x4097 x8709 256))
(assert (x8339 x3669))
(assert (= (x1802 (x3305 64 x8099 100)) 100))
(assert (= (or x66 (and (not x6410) x2742)) x391))
(assert (x2673 x7406))
(assert (=> (>= 10000 x2538) (= 0 (x530 x2538))))
(assert (= (x1802 (x3305 64 x432 6)) 6))
(assert (x2673 x896))
(assert (= (x530 (x3305 64 x7184 36)) (x3305 64 x7184 36)))
(assert (< 10000 (x3305 64 x235 100)))
(assert (< (x3305 64 x8506 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4013))
(assert (= (x4290 (x3305 64 x6135 36)) x6135))
(assert (x2673 x4252))
(assert (= x7496 (and (not x5007) x3628)))
(assert (= 12 (x1802 (x3305 64 x4241 12))))
(assert (= (x3305 64 x6135 36) (x530 (x3305 64 x6135 36))))
(assert (x2673 x4525))
(assert (< (x3305 64 x8194 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4290 (x3305 64 x1591 100)) x1591))
(assert (= (x530 (x3305 64 x7718 2)) (x3305 64 x7718 2)))
(assert (x2673 x6044))
(assert (> (x3305 64 x8671 100) 10000))
(assert (x8339 x6063))
(assert (x8912 32 (ite (= 0 x9006) 1 0)))
(assert (x8339 x2554))
(assert (= (or x4140 x2246) x2069))
(assert (= 100 (x1802 (x3305 64 x3789 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5931 6)))
(assert (x2673 x8915))
(assert (x2673 x2682))
(assert (x9110 x6570))
(assert (= (x530 (x3305 64 x4171 2)) (x3305 64 x4171 2)))
(assert (x9110 x2358))
(assert (x2673 x2508))
(assert (not (x669 (x3305 64 x7290 100))))
(assert (< 10000 (x3305 64 x6642 100)))
(assert (x4744 x8127))
(assert (=> (>= 10000 x4488) (= 0 (x530 x4488))))
(assert (x2673 x2334))
(assert (x8339 x1819))
(assert (= (x4290 (x3305 64 x1586 100)) x1586))
(assert (x2673 x7474))
(assert (x2673 x7026))
(assert (=> (>= 10000 x6767) (= (x530 x6767) 0)))
(assert (x2673 x2370))
(assert (= (and x425 x2509) x2718))
(assert (x4744 x2955))
(assert (< 10000 (x3305 64 x4107 100)))
(assert (= (x967 (x3305 64 x346 100)) 64))
(assert (x2673 x2924))
(assert (= (or x8806 x593 x4821 x3361) x2247))
(assert (x2673 x1924))
(assert (x2673 x3088))
(assert (x4097 x3097 256))
(assert (= (=> (and (= (x7405 (+ x2638 128)) x2769) (= x6724 (x7030 480)) (= x1356 (x7405 (+ x2638 32))) (= x406 (< 0 x6724)) (= (x7405 (+ x2769 32)) x6992) (= x2638 (x7405 (+ x5736 4)))) (and (=> (and x406 (and (= x396 (> x6724 32)) (= (x8572 512) x7895))) (and (=> (not x396) x1826) (=> (and x396 (and (= (x7405 (+ 32 x6992)) x5567) (= (x846 544) x1854) (= (> x6724 64) x4624))) (and (=> (and (and (= x7502 (x7405 (+ 64 x6992))) (= (x5656 576) x3340) (= (> x6724 96) x1915)) x4624) (and (=> (not x1915) x1826) (=> x1915 x104))) (=> (not x4624) x1826))))) (=> (not x406) x1826))) x1667))
(assert (= (x1802 (x3305 64 x261 100)) 100))
(assert (= (and x5925 (not x766)) x546))
(assert (x2673 x4864))
(assert (x8339 x2955))
(assert (x8339 x8966))
(assert (= (x1802 (x3305 64 x4689 36)) 36))
(assert (x2673 x8691))
(assert (x4744 x866))
(assert (x2673 x2180))
(assert (x2673 x4676))
(assert (= x4683 (or x3290 x2363)))
(assert (=> (>= 10000 x8352) (= (x530 x8352) 0)))
(assert (x2673 x1509))
(assert (x4097 x7996 256))
(assert (x2673 x2825))
(assert (x2673 x293))
(assert (x2673 x8606))
(assert (x2673 x5906))
(assert (not (x669 (x3305 64 x7822 36))))
(assert (x4744 x4111))
(assert (x2673 x5795))
(assert (x2673 x1496))
(assert (= (x3305 64 x9105 100) (x530 (x3305 64 x9105 100))))
(assert (x2673 x1049))
(assert (x2673 x6290))
(assert (x2673 x4947))
(assert (= x3799 (and x7164 x8223)))
(assert (x2673 x5338))
(assert (x5050 x8340))
(assert (x2673 x3487))
(assert (< 10000 (x3305 64 x8489 100)))
(assert (= x2795 (x4290 (x3305 64 x2795 100))))
(assert (x2673 x3680))
(assert (x4097 x8083 256))
(assert (not (x669 (x3305 64 x5870 100))))
(assert (x2673 x5153))
(assert (= (and (not x615) x6527) x7533))
(assert (x2673 x2040))
(assert (< (x3305 64 x6494 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6672 100)))
(assert (x4744 x3759))
(assert (x2673 x5772))
(assert (x2673 x1725))
(assert (x2673 x1355))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3617 100)))
(assert (= (and (not x1157) x3623) x4147))
(assert (= (x1802 (x3305 64 x2400 100)) 100))
(assert (x2673 x356))
(assert (x2673 x9067))
(assert (= (x530 (x3305 64 x8238 100)) (x3305 64 x8238 100)))
(assert (x7454 x1087))
(assert (x2673 x7727))
(assert (= (x3305 64 x7432 6) (x530 (x3305 64 x7432 6))))
(assert (= 100 (x1802 (x3305 64 x2795 100))))
(assert (< 10000 (x3305 64 x881 100)))
(assert (x2673 x5931))
(assert (x2673 x6341))
(assert (x8339 x5278))
(assert (x2673 x6566))
(assert (x4744 x1517))
(assert (= (=> (and (or x6410 (not x6410)) (= (= 0 x1093) x6410)) x1419) x8667))
(assert (> (x3305 64 x2652 100) 10000))
(assert (x1240 x7539))
(assert (= (=> (and (= x7197 (= 0 x175)) (or (and (not x7197) (and (= x1088 x293) (= x175 x4095) (= x3121 x5768) (= x6885 x1074) (= x7258 x4939) (= x3765 x4454) (= x3366 x3085) (= x3540 x4858) (= x8541 x3334) (= x138 x5300) (= x1482 x4323))) (and (and (= x552 (ite (= 0 x175) x1413 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6947 x552)) (= x6885 x1074) (<= x7169 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8541 x3334) (= (x4694 x4894) x6947) (= x7169 x6017) (= x4454 x3765) (= x7169 (+ x552 x6947)) (= x4095 x175) (= (x8795 x464) x1378) (= x3540 x4858) (= x3085 x3366) (= x5300 x138) (= x293 x1088) (<= 0 x7169) (= x7258 x4939) (= x5768 x3121) (= x1482 x4323) (= x8704 (- x1378 x552))) x7197))) x6576) x8450))
(assert (x2673 x1955))
(assert (x2673 x5850))
(assert (x2673 x543))
(assert (= x5785 (or x3848 x94)))
(assert (x2673 x5798))
(assert (x2673 x3298))
(assert (x2673 x3759))
(assert (x4097 x1064 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5731))
(assert (x4097 x1508 256))
(assert (= (x4290 (x3305 64 x7175 100)) x7175))
(assert (x2673 x3268))
(assert (> (x3305 64 x7390 100) 10000))
(assert (= (x3305 64 x7718 6) (x530 (x3305 64 x7718 6))))
(assert (= (x4290 (x3305 64 x324 36)) x324))
(assert (= x7087 (and x1300 (not x6204))))
(assert (x2673 x8444))
(assert (x2673 x4038))
(assert (x8339 x4111))
(assert (x2673 x3135))
(assert (x8502 (ite (= x2028 0) 1 0)))
(assert (=> (<= x4985 10000) (= (x530 x4985) 0)))
(assert (= (x967 (x3305 64 x7673 100)) 64))
(assert (= (and x4053 (not x4505)) x2584))
(assert (< (x3305 64 x1935 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x950))
(assert (= (and x1464 x4098) x5651))
(assert (x2673 x2530))
(assert (x2673 x1979))
(assert (= (x967 (x3305 64 x8499 100)) 64))
(assert (x1240 x2554))
(assert (x2673 x1585))
(assert (x2673 x3919))
(assert (= 0 (x530 115792089237316195423570985008687907853269984665640564039457584007913129639584)))
(assert (= (and x555 (not x6269)) x2330))
(assert (= (x4290 (x3305 64 x2356 100)) x2356))
(assert (x2673 x1072))
(assert (< 10000 (x3305 64 x2051 100)))
(assert (= x493 (and x7396 x5886)))
(assert (x2673 x3647))
(assert (x2673 x5498))
(assert (x2673 x4206))
(assert (= (x1802 (x3305 64 x3892 12)) 12))
(assert (x2673 x4273))
(assert (x2673 x3488))
(assert (= x1162 (=> (and (= (+ x7985 31) x4732) (= x2646 x5608) (<= x2646 606) (<= 481 x2646) (= x2646 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4732))) x7698)))
(assert (x2673 x2554))
(assert (x5050 x847))
(assert (x1240 x3140))
(assert (x7454 x7993))
(assert (= (x530 (x3305 64 x462 100)) (x3305 64 x462 100)))
(assert (= 100 (x1802 (x3305 64 x3059 100))))
(assert (not (x669 (x3305 64 x813 100))))
(assert (x7454 x4356))
(assert (= 100 (x1802 (x3305 64 x4542 100))))
(assert (= x951 (x4290 (x3305 64 x951 100))))
(assert (x2673 x2512))
(assert (= (and x5806 x8555) x8501))
(assert (= (and (not x4530) x3976) x4204))
(assert (x2673 x5752))
(assert (= x3201 (and x5755 x72)))
(assert (x4744 x4366))
(assert (< 10000 (x3305 64 x8928 6)))
(assert (x9110 x6163))
(assert (x2673 x2197))
(assert (= (or (and (not x5595) x7553) x3594) x4596))
(assert (x2673 x8526))
(assert (= 64 (x967 (x3305 64 x4761 100))))
(assert (= 64 (x967 (x3305 64 x8194 100))))
(assert (x2673 x6110))
(assert (x2673 x7119))
(assert (x2673 x7417))
(assert (= (and x197 x5609) x7053))
(assert (x2673 x3789))
(assert (x2673 x3054))
(assert (x8502 (ite (= x5706 0) 1 0)))
(assert (x2673 x3861))
(assert (not (x669 (x3305 64 x4146 36))))
(assert (< 10000 (x3305 64 x1621 100)))
(assert (> (x3305 64 x8928 2) 10000))
(assert (=> (<= x4689 10000) (= 0 (x530 x4689))))
(assert (= (and (not x6476) x8962) x7386))
(assert (x1240 x866))
(assert (x669 2001815235))
(assert (x4097 x5703 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3652 10000) (= (x530 x3652) 0)))
(assert (=> (<= x5511 10000) (= 0 (x530 x5511))))
(assert (x4097 x2930 32))
(assert (x2673 x2491))
(assert (x8339 x4388))
(assert (x4097 x5178 32))
(assert (= x8522 (and (not x7159) x6264)))
(assert (< (x3305 64 x5868 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5722 (=> (and (= (x7405 (+ 96 x8964)) x861) (= (x2842 x165) x2775) (= (not (> x5545 128)) x837) (= x165 (x7405 (+ x5549 96)))) (and x837 x6535))))
(assert (x2673 x2920))
(assert (x2673 x5443))
(assert (x4097 x6475 300))
(assert (= (x1802 (x3305 64 x7791 12)) 12))
(assert (x2673 x3373))
(assert (= (x3305 64 x1051 100) (x530 (x3305 64 x1051 100))))
(assert (x4097 x3568 256))
(assert (not (x669 (x3305 64 x2032 100))))
(assert (x4744 x5590))
(assert (x9110 x5813))
(assert (x2673 x4549))
(assert (x2673 x1646))
(assert (x9110 x2257))
(assert (= x8418 (or x7361 x8593 x8353)))
(assert (x2673 x5887))
(assert (= (x530 (x3305 64 x217 100)) (x3305 64 x217 100)))
(assert (x2673 x3563))
(assert (=> (<= x6251 10000) (= 0 (x530 x6251))))
(assert (= (x4290 (x3305 64 x368 100)) x368))
(assert (x2673 x2894))
(assert (x2673 x742))
(assert (x2673 x1182))
(assert (x4744 x4394))
(assert (x2673 x6322))
(assert (x5050 x1334))
(assert (x8339 x2173))
(assert (< (x3305 64 x5575 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x5184 256))
(assert (=> (>= 10000 x5537) (= (x530 x5537) 0)))
(assert (x2673 x7768))
(assert (x2673 x7052))
(assert (= x5273 (and x7225 (not x4605))))
(assert (x2673 x2827))
(assert (= 64 (x967 (x3305 64 x7806 100))))
(assert (not (x669 (x3305 64 x3421 36))))
(assert (= (and (not x8929) x2436) x1547))
(assert (= (=> (and (= x3606 (= x7686 255)) (= 480 x3695) (= x6109 480)) (and (=> (and (not x3606) (and (= x8669 (x3305 64 x7686 12)) (= (x3011 x8669) x845) (<= x845 18446744073709551615) (= x540 (= x7463 255)) (= (x5917 255 x7442) x8234) (= x7442 (+ x7686 1)) (= (x5917 255 x7442) x7463))) (and (=> (and (and (= (= x8044 255) x3509) (= (+ 1 x7463) x2739) (= x8044 (x5917 255 x2739)) (= x1334 (x4588 x37 300)) (= x37 (x8042 x1640)) (= (x5917 255 x2739) x5894) (= x1640 (x3305 64 x7463 36))) (not x540)) (and (=> x3509 x4793) (=> (and (and (= (+ x8044 1) x4748) (= x4107 (x5917 255 x4748)) (= x5021 (x5917 255 x4748)) (= (x3305 64 x8044 100) x7853) (= (x7941 x7853) x2211) (= x1427 (= x4107 255))) (not x3509)) (and (=> (and (and (= x188 (= 255 x3956)) (= (x5917 255 x5714) x3956) (= x7842 (x7941 x5885)) (= (+ x4107 1) x5714) (= (x3305 64 x4107 100) x5885) (= x5587 (x5917 255 x5714))) (not x1427)) (and (=> (and (not x188) (and (= (x5917 255 x5760) x7403) (= (x7941 x1600) x4856) (= (+ x3956 1) x5760) (= x2186 (x5917 255 x5760)) (= (x3305 64 x3956 100) x1600) (= (= x7403 255) x6962))) (and (=> (and (not x6962) (and (= x3420 (x5917 255 x3782)) (= x5453 (= 255 x2253)) (= x3782 (+ x7403 1)) (= (x5917 255 x3782) x2253) (= (x7941 x3600) x2514) (= (x3305 64 x7403 100) x3600))) (and (=> x5453 x5500) (=> (and (not x5453) (and (= (x5917 255 x5554) x7391) (= (+ x2253 1) x5554) (= (x3305 64 x2253 100) x8930) (= x8489 (x5917 255 x5554)) (= x1232 (= x8489 255)) (= x2663 (x7941 x8930)))) (and (=> x1232 x1177) (=> (and (not x1232) (and (= x5427 (x7941 x1833)) (= x1833 (x3305 64 x8489 100)) (= (= x4913 255) x1174) (= (x5917 255 x3560) x6016) (= (x5917 255 x3560) x4913) (= x3560 (+ x8489 1)))) (and (=> x1174 x3719) (=> (and (and (= (+ 1 x4913) x5448) (= x414 (x5917 255 x5448)) (= (= x448 255) x4882) (= x1520 (x3305 64 x4913 100)) (= x448 (x5917 255 x5448)) (= (x7941 x1520) x6882)) (not x1174)) (and (=> x4882 x2848) (=> (and (not x4882) (and (= (x7941 x2037) x4089) (= x2037 (x3305 64 x448 100)) (= x935 (= x6206 255)) (= (x5917 255 x313) x792) (= (x5917 255 x313) x6206) (= x313 (+ 1 x448)))) (and (=> x935 x5869) (=> (and (not x935) (and (= x4299 (x5917 255 x2809)) (= (x5917 255 x2809) x7349) (= (x7941 x1821) x1388) (= (x3305 64 x6206 100) x1821) (= x2809 (+ x6206 1)) (= (= x4299 255) x7441))) (and (=> (and (not x7441) (and (= x3336 (x7405 (+ 32 x3044))) (= (+ x4299 1) x4111) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x864) (= (> x1334 x3023) x2962) (= x2668 (x7405 (+ 32 x7058))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x864)) (= (x3305 64 x4299 100) x4158) (= (x5917 255 x4111) x2289) (= x1768 (x7190 (- x7860 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x864) (= (x7405 (+ x864 32)) x7058) (= (x7405 (+ 32 x8698)) x1627) (not (= x864 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x7405 (+ x2668 32)) x2557) (= (x7405 (+ 32 x6305)) x8698) (= (x7405 (+ x1425 32)) x4816) (= x7380 (x5917 255 x4111)) (<= x864 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x864 x1251) (= x1425 (x7405 (+ x3336 32))) (= x3044 (x7405 (+ 32 x1627))) (= x5480 (x7941 x4158)) (= x3023 (+ x1334 31)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x864)) (= x1324 0) (= x7860 (x7190 (- x1251 x864))) (= x6305 (x7405 (+ 32 x2557))) (= (x7405 (+ x4816 32)) x1251))) (and (=> (and (not x2962) (= x3672 (> x1334 x3023))) (and (=> (and (and (= x1770 (x1595 x864)) (= x317 (< x1770 x1334))) (not x3672)) (and (=> (and (= x5163 (= x1334 0)) (not x317)) (and (=> (and (and (< x1251 x3029) (= x8233 x3029) (= (x7405 (+ x1251 32)) x3029) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1251) (not (= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1251) (= x7041 x1251) (<= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639904))) x5163) x8564) (=> (and (not x5163) (and (= x118 (* 32 (ite (= 0 x3752) 1 0))) (= (x7405 (+ x3752 x864)) x356) (= x7524 (x7405 (+ x1999 x356))) (= x8977 (x7405 (+ x347 x118))) (= x1999 (* (ite (= x3752 0) 1 0) 32)) (or (= x118 32) (= x118 0)) (= x6249 (x7405 (+ x1334 x8977))) (= x347 (x7405 (+ x3752 x1251))) (= (> x6249 x8977) x3510) (= x3752 (x5917 31 x1334)) (or (= x1999 0) (= 32 x1999)))) (and (=> (and (= x457 x8977) (not x3510)) x8388) (=> x3510 x642))))) (=> (and x317 (and (= x4474 (x7405 (+ x3094 32))) (= x6958 true) (= false x6529) (= (x7190 (- x7104 x1251)) x1695) (= (x7405 (+ x6323 32)) x7104) (= (x7405 (+ x1251 4)) x3094) (= x7801 x1695) (= x6323 (x7405 (+ 32 x4474))))) x8273))) (=> (and x3672 (and (= (x7405 (+ 32 x405)) x1975) (= (x7405 (+ 32 x2861)) x5010) (= false x8041) (= x7801 x7666) (= (x7190 (- x5010 x1251)) x7666) (= (x7405 (+ x1251 4)) x405) (= (x7405 (+ x1975 32)) x2861) (= true x3738))) x8273))) (=> x2962 x4793))) (=> (and x7441 (and (= 36 x7801) (= x4983 true) (= x1041 false))) x8273))))))))))))) (=> x6962 x812))) (=> x188 x3906))) (=> x1427 x4437))))) (=> x540 x4793))) (=> x3606 x1498))) x7182))
(assert (x2673 x1420))
(assert (x2673 x6684))
(assert (x9110 x4333))
(assert (x2673 x3989))
(assert (x2673 x4285))
(assert (< (x3305 64 x8032 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x967 (x3305 64 x4248 100))))
(assert (x4744 x4953))
(assert (= (x3305 64 x2354 100) (x530 (x3305 64 x2354 100))))
(assert (> (x3305 64 x6494 100) 10000))
(assert (x2673 x5089))
(assert (= (x1802 (x3305 64 x474 100)) 100))
(assert (x2673 x7408))
(assert (x2673 x3515))
(assert (= (x1802 (x3305 64 x6531 100)) 100))
(assert (x1240 x5278))
(assert (= (x1802 (x3305 64 x7358 100)) 100))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1354 100)))
(assert (x4097 x6013 32))
(assert (< (x3305 64 x2024 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8339 x6814))
(assert (x2673 x4915))
(assert (x7454 x3139))
(assert (x2673 x7064))
(assert (x2673 x2152))
(assert (=> (<= x1110 10000) (= (x530 x1110) 0)))
(assert (x4744 x2996))
(assert (< 10000 (x3305 64 x7152 100)))
(assert (=> (>= 10000 x7403) (= 0 (x530 x7403))))
(assert (= (x967 (x3305 64 x3911 100)) 64))
(assert (x4097 x818 32))
(assert (= (x3305 64 x7796 100) (x530 (x3305 64 x7796 100))))
(assert (=> (<= x5152 10000) (= 0 (x530 x5152))))
(assert (= (x530 (x3305 64 x8359 100)) (x3305 64 x8359 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8615 100)))
(assert (x2673 x3097))
(assert (x669 65535))
(assert (x2673 x6445))
(assert (x8339 x3546))
(assert (= (x530 (x3305 64 x5335 100)) (x3305 64 x5335 100)))
(assert (x4744 x5828))
(assert (= x7763 (and x156 (not x499))))
(assert (= (and x7553 x5595) x3594))
(assert (= x3572 (and x3429 (not x5061))))
(assert (x2673 x5255))
(assert (x2673 x8828))
(assert (x2673 x8519))
(assert (x2673 x8708))
(assert (x2673 x3459))
(assert (= (x3305 64 x5404 12) (x530 (x3305 64 x5404 12))))
(assert (= (or x2952 x3051 x7816 x4541 x4147) x7560))
(assert (= (x4290 (x3305 64 x2079 100)) x2079))
(assert (x2673 x2643))
(assert (= (x530 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (= x3474 (and x8783 x4470)))
(assert (> (x3305 64 x2216 12) 10000))
(assert (x2673 x2671))
(assert (x2673 x1605))
(assert (x2673 x3618))
(assert (= x8477 (and x1102 x2820)))
(assert (= (x4290 (x3305 64 x6099 100)) x6099))
(assert (> (x3305 64 x4171 2) 10000))
(assert (x2673 x2380))
(assert (< (x3305 64 x2106 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2570))
(assert (x8912 32 (ite (= x4823 0) 1 0)))
(assert (= (x1802 (x3305 64 x4155 100)) 100))
(assert (= x1714 (and x6408 x2549)))
(assert (x2673 x7437))
(assert (= x997 (and x6307 x7757)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1586 100)))
(assert (< 10000 (x3305 64 x1406 100)))
(assert (x2673 x230))
(assert (= x9078 (x4290 (x3305 64 x9078 12))))
(assert (x2673 x3697))
(assert (not (x669 (x3305 64 x7892 100))))
(assert (not (x669 (x3305 64 x6832 100))))
(assert (x9110 x652))
(assert (x2673 x1215))
(assert (x2673 x6844))
(assert (= (and (not x1028) x4310) x904))
(assert (x2673 x2851))
(assert (x4744 x2757))
(assert (= x6975 (and x6213 x4207)))
(assert (x2673 x2986))
(assert (not (x669 (x3305 64 x7586 100))))
(assert (< (x3305 64 x813 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7095))
(assert (= 64 (x967 (x3305 64 x5152 100))))
(assert (x7454 x8377))
(assert (x2673 x4761))
(assert (=> (>= 10000 x8148) (= (x530 x8148) 0)))
(assert (x2673 x3653))
(assert (x2673 x2593))
(assert (x2673 x2125))
(assert (x4097 x972 32))
(assert (x2673 x3221))
(assert (not (x669 (x3305 64 x6807 100))))
(assert (x8339 x8189))
(assert (= x3431 (and x2725 (not x1683))))
(assert (< (x3305 64 x2858 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x3679 36))))
(assert (x2673 x7084))
(assert (= (x1802 (x3305 64 x2619 100)) 100))
(assert (x2673 x5759))
(assert (= (and x6563 (not x5999)) x4139))
(assert (x2673 x752))
(assert (x2673 x3846))
(assert (< (x3305 64 x5294 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5794))
(assert (x8339 x1682))
(assert (x2673 x6950))
(assert (x4097 x7539 32))
(assert (= x5788 (and x4595 (not x5927))))
(assert (not (x669 (x3305 64 x1953 100))))
(assert (x669 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (= 100 (x1802 (x3305 64 x3748 100))))
(assert (=> (<= x6135 10000) (= (x530 x6135) 0)))
(assert (not (x669 (x3305 64 x951 100))))
(assert (x2673 x602))
(assert (=> (>= 10000 x6667) (= (x530 x6667) 0)))
(assert (x2673 x2092))
(assert (x2673 x3568))
(assert (x8339 x2767))
(assert (x2673 x7665))
(assert (= (and (not x5563) x1636) x4499))
(assert (x2673 x6275))
(assert (x4744 x7993))
(assert (x2673 x2884))
(assert (x2673 x2085))
(assert (x2673 x6158))
(assert (= 64 (x967 (x3305 64 x7373 100))))
(assert (= x8679 (=> (= x7404 x5491) x3930)))
(assert (x2673 x7442))
(assert (x2673 x956))
(assert (=> (<= x7877 10000) (= 0 (x530 x7877))))
(assert (x2673 x1688))
(assert (x2673 x196))
(assert (x2673 x6715))
(assert (= (or x2247 x8741) x7964))
(assert (= x8585 (or x7483 x392)))
(assert (= 64 (x967 (x3305 64 x5404 12))))
(assert (x2673 x8125))
(assert (x2673 x1199))
(assert (x2673 x6778))
(assert (= 64 (x967 (x3305 64 x5711 100))))
(assert (= 64 (x967 (x3305 64 x8359 100))))
(assert (= (x4290 (x3305 64 x8194 100)) x8194))
(assert (= (or x3774 x2504) x5836))
(assert (x2673 x8259))
(assert (x4097 x5681 256))
(assert (x2673 x5627))
(assert (=> (>= 10000 x68) (= 0 (x530 x68))))
(assert (= x7718 (x4290 (x3305 64 x7718 36))))
(assert (x2673 x1375))
(assert (x2673 x9011))
(assert (x2673 x3887))
(assert (x8339 x8127))
(assert (< 10000 (x3305 64 x5721 100)))
(assert (= (x4290 (x3305 64 x6939 100)) x6939))
(assert (x2673 x3346))
(assert (= 64 (x967 (x3305 64 x3088 2))))
(assert (x2673 x5072))
(assert (x8502 (ite (= x4016 0) 1 0)))
(assert (not (x669 (x3305 64 x7463 36))))
(assert (= (x530 (x3305 64 x3241 100)) (x3305 64 x3241 100)))
(assert (not (x669 (x3305 64 x2608 100))))
(assert (x4097 x8734 256))
(assert (x2673 x6270))
(assert (x2673 x8773))
(assert (x2673 x7789))
(assert (= (and x4168 x2097) x4314))
(assert (= x226 (and x8304 x5258)))
(assert (x2673 x3424))
(assert (x4744 x7090))
(assert (x2673 x4668))
(assert (x2673 x3368))
(assert (= x3231 (or x7989 (and x2345 (not x4179)))))
(assert (= 0 (x530 1461501637330902918203684832716283019655932542975)))
(assert (x4097 x8560 256))
(assert (not (x669 (x3305 64 x4648 100))))
(assert (> (x3305 64 x7718 2) 10000))
(assert (x1240 x2930))
(assert (= 64 (x967 (x3305 64 x7892 100))))
(assert (= 64 (x967 (x3305 64 x6806 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2389 100)))
(assert (x8339 x6110))
(assert (= (and (not x6601) x6331) x8036))
(assert (= (and x8033 (not x9037)) x4429))
(assert (x2673 x7963))
(assert (= (x530 (x3305 64 x2737 100)) (x3305 64 x2737 100)))
(assert (= 36 (x1802 (x3305 64 x5294 36))))
(assert (x2673 x3954))
(assert (< (x3305 64 x8322 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x1824))
(assert (= (and x5586 x1777) x4140))
(assert (not (x669 (x3305 64 x744 100))))
(assert (=> (>= 10000 x7373) (= 0 (x530 x7373))))
(assert (= 100 (x1802 (x3305 64 x2708 100))))
(assert (= (x3305 64 x1807 100) (x530 (x3305 64 x1807 100))))
(assert (x2673 x302))
(assert (< (x3305 64 x8115 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x7969 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x8512 (=> (and (= (x7405 (+ x6378 4)) x3079) (= false x7147) (= (x7405 (+ 32 x2705)) x2927) (= x8193 x7801) (= true x6012) (= (x7405 (+ 32 x5778)) x2705) (= (x7405 (+ 32 x3079)) x5778) (= (x7190 (- x2927 x6378)) x8193)) x8273)))
(assert (< (x3305 64 x2253 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7454 x4748))
(assert (x2673 x2080))
(assert (x2673 x6579))
(assert (= x7264 (or x8266 x9104)))
(assert (x2673 x3742))
(assert (x2673 x3595))
(assert (x2673 x8743))
(assert (x7454 x5690))
(assert (= x448 (x4290 (x3305 64 x448 100))))
(assert (x2673 x7889))
(assert (x2673 x2476))
(assert (x2673 x7740))
(assert (x2673 x4284))
(assert (= x695 (or (and x8171 x8069) (and x7312 x6782) (and x2744 x5043) (and x979 x1930) (and x1694 x7694) (and x147 x6218) (and x3528 x7103) (and x9017 x4611) (and x1460 x2480) (and x8210 x2962) (and x8270 x5747) (and x696 x540) (and x4820 x6467) (and x4932 x563) (and x6772 x1018) (and x3129 x8950) (and x7360 x568) (and x7386 x2074) (and x5597 x5939) (and x7606 x3689) (and x5040 x1584) (and x562 x3865) (and x4560 x1787) (and x7008 x1424) (and x6128 x5831) (and x8962 x6476) (and x241 x3509) (and x3009 x18))))
(assert (x2673 x3372))
(assert (x2673 x8541))
(assert (x2673 x7383))
(assert (x2673 x7931))
(assert (= 100 (x1802 (x3305 64 x3210 100))))
(assert (x7454 x6818))
(assert (< (x3305 64 x8197 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x967 (x3305 64 x4542 100))))
(assert (x2673 x1490))
(assert (< 10000 (x3305 64 x7373 100)))
(assert (= x3543 (and (not x5163) x5365)))
(assert (x2673 x7438))
(assert (x2673 x5332))
(assert (x2673 x5778))
(assert (x2673 x2314))
(assert (x2673 x5353))
(assert (x2673 x6349))
(assert (x2673 x6969))
(assert (not (x669 (x3305 64 x3459 100))))
(assert (= 64 (x967 (x3305 64 x3232 100))))
(assert (x2673 x1011))
(assert (x2673 x2081))
(assert (x2673 x6015))
(assert (= (x967 (x3305 64 x6672 100)) 64))
(assert (> (x3305 64 x606 100) 10000))
(assert (= x1096 (and x129 (not x1574))))
(assert (not (x669 (x3305 64 x930 100))))
(assert (x2673 x6595))
(assert (= (and (not x1898) x5018) x5909))
(assert (x2673 x69))
(assert (= x5161 (and x8069 (not x8171))))
(assert (x2673 x8875))
(assert (= (x4290 (x3305 64 x5750 100)) x5750))
(assert (x2673 x70))
(assert (= (x3305 64 x6854 100) (x530 (x3305 64 x6854 100))))
(assert (x2673 x8660))
(assert (x4097 x6294 256))
(assert (= (x4290 (x3305 64 x3088 2)) x3088))
(assert (= x2677 (and x2234 x6287)))
(assert (= x2733 (or (and x5007 x3628) (and x3997 x1298) (and x8348 x3856) (and x1395 x1427) (and x8688 x219) (and x1772 x3200))))
(assert (x7454 x4965))
(assert (x2673 x8775))
(assert (= x5905 (and (not x3303) x7854)))
(assert (x2673 x2265))
(assert (x8339 x3517))
(assert (= (and x9025 (not x155)) x5997))
(assert (x9110 x1614))
(assert (= (x530 (x3305 64 x6667 100)) (x3305 64 x6667 100)))
(assert (x2673 x758))
(assert (x2673 x6177))
(assert (= x93 (and (not x3166) x6650)))
(assert (= 100 (x1802 (x3305 64 x5511 100))))
(assert (x2673 x4434))
(assert (x4744 x4920))
(assert (= (x530 (x3305 64 x5711 100)) (x3305 64 x5711 100)))
(assert (= (x4290 (x3305 64 x4285 100)) x4285))
(assert (x4097 x1517 256))
(assert (= x1598 (and x5551 (not x2500))))
(assert (x2673 x3724))
(assert (= (or x7314 x2641 x8426 x3013 x2729) x1639))
(assert (= (x530 (x3305 64 x7373 100)) (x3305 64 x7373 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8143 100)))
(assert (x2673 x4757))
(assert (= x7407 (=> (and (= (not (> x6886 x1304)) x1981) (= (+ x7622 32) x1304) (= (x6898 x5222) x3907)) (and x1981 (=> (= x1304 x8495) x359)))))
(assert (< 10000 (x3305 64 x7584 100)))
(assert (x2673 x3732))
(assert (x4097 x1837 32))
(assert (= (and (not x7700) x1623) x1775))
(assert (= 100 (x1802 (x3305 64 x6319 100))))
(assert (x2673 x1983))
(assert (> (x3305 64 x3789 100) 10000))
(assert (= (x4290 (x3305 64 x1499 100)) x1499))
(assert (= (x3305 64 x2750 100) (x530 (x3305 64 x2750 100))))
(assert (= x6273 (x4290 (x3305 64 x6273 36))))
(assert (x2673 x4748))
(assert (= x5189 (and x493 x4698)))
(assert (= x7204 (and (not x1036) x4269)))
(assert (= (x530 (x3305 64 x2415 100)) (x3305 64 x2415 100)))
(assert (x2673 x6067))
(assert (x2673 x7762))
(assert (x2673 x3264))
(assert (x2673 x7479))
(assert (= (x530 (x3305 64 x8713 100)) (x3305 64 x8713 100)))
(assert (> (x3305 64 x6273 36) 10000))
(assert (x2673 x6484))
(assert (= x2776 (=> (and (= false x5881) (= true x5245)) x3445)))
(assert (=> (>= 10000 x235) (= (x530 x235) 0)))
(assert (x2673 x9053))
(assert (x2673 x1475))
(assert (> (x3305 64 x8142 10) 10000))
(assert (x2673 x2307))
(assert (= (x3305 64 x1621 100) (x530 (x3305 64 x1621 100))))
(assert (x2673 x5416))
(assert (=> (>= 10000 x776) (= 0 (x530 x776))))
(assert (= (and x6955 (not x2760)) x639))
(assert (x2673 x8785))
(assert (=> (<= x2774 10000) (= 0 (x530 x2774))))
(assert (x4097 x7211 256))
(assert (x2673 x7936))
(assert (x2673 x990))
(assert (x2673 x7935))
(assert (= (=> (and (= x6461 (not (< 128 x750))) (= (x7405 (+ x158 96)) x8443) (= x7141 (x7405 (+ x2990 96))) (= x242 (x1466 x8443))) (and x8663 x6461)) x7010))
(assert (= 100 (x1802 (x3305 64 x6832 100))))
(assert (x2673 x1448))
(assert (x2673 x5042))
(assert (= x7392 (and x8416 x2993)))
(assert (< (x3305 64 x2737 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4067))
(assert (x2673 x7067))
(assert (x4744 x2361))
(assert (= x6671 (or (and x4644 x3520) (and x3606 x6779) (and x5297 x2467))))
(assert (x2673 x1139))
(assert (= x8928 (x4290 (x3305 64 x8928 2))))
(assert (=> (<= x5248 10000) (= 0 (x530 x5248))))
(assert (= x994 (or x2333 x3116)))
(assert (x2673 x1107))
(assert (x2673 x5262))
(assert (x2673 x5965))
(assert (= x4159 (and (not x1452) x2940)))
(assert (= x2407 (and (not x7123) x5201)))
(assert (x8339 x5401))
(assert (= 100 (x1802 (x3305 64 x3956 100))))
(assert (not (x669 (x3305 64 x7403 100))))
(assert (x2673 x3122))
(assert (= (and x6331 x6601) x225))
(assert (= (x1802 (x3305 64 x6090 100)) 100))
(assert (= 36 (x1802 (x3305 64 x2145 36))))
(assert (x2673 x1790))
(assert (< 10000 (x3305 64 x1442 100)))
(assert (=> (<= x4868 10000) (= (x530 x4868) 0)))
(assert (x2673 x6915))
(assert (x2673 x4157))
(assert (x2673 x169))
(assert (=> (<= x7390 10000) (= 0 (x530 x7390))))
(assert (x2673 x5354))
(assert (x2673 x320))
(assert (x2673 x5704))
(assert (x2673 x3492))
(assert (x2673 x7347))
(assert (=> (>= 10000 x7129) (= 0 (x530 x7129))))
(assert (= (x967 (x3305 64 x1354 100)) 64))
(assert (x669 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (= 100 (x1802 (x3305 64 x4285 100))))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x2673 x916))
(assert (x2673 x8445))
(assert (x4097 x8189 32))
(assert (= (x4290 (x3305 64 x1807 100)) x1807))
(assert (x4097 x3659 256))
(assert (= (x3305 64 x8946 100) (x530 (x3305 64 x8946 100))))
(assert (not (x669 (x3305 64 x4545 36))))
(assert (x8339 x1546))
(assert (> (x3305 64 x3214 36) 10000))
(assert (x2673 x3284))
(assert (x2673 x7281))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x959 100)))
(assert (x2673 x5323))
(assert (= (x967 (x3305 64 x1113 100)) 64))
(assert (x2673 x7898))
(assert (x2673 x5088))
(assert (< 10000 (x3305 64 x7822 36)))
(assert (= (and x147 (not x6218)) x2135))
(assert (=> (<= x918 10000) (= (x530 x918) 0)))
(assert (=> (>= 10000 x8580) (= 0 (x530 x8580))))
(assert (x2673 x2905))
(assert (= (x530 (x3305 64 x3932 100)) (x3305 64 x3932 100)))
(assert (x2673 x4674))
(assert (x2673 x7988))
(assert (x2673 x2266))
(assert (x2673 x6887))
(assert (= x8322 (x4290 (x3305 64 x8322 100))))
(assert (not (x669 (x3305 64 x683 36))))
(assert (x2673 x6703))
(assert (x2673 x3881))
(assert (= 36 (x1802 (x3305 64 x7184 36))))
(assert (= (x4290 (x3305 64 x1528 36)) x1528))
(assert (= (=> (and (= (not (< x3859 x8425)) x3364) (= (x8689 x7052) x5807) (= (+ x6664 32) x3859)) (and x3364 (=> (= x4792 x3859) x6676))) x2803))
(assert (= (x530 (x3305 64 x7113 100)) (x3305 64 x7113 100)))
(assert (= 64 (x967 (x3305 64 x981 100))))
(assert (x2673 x2137))
(assert (= x7783 (and x1065 (not x8744))))
(assert (x2673 x3342))
(assert (x2673 x4982))
(assert (= (x4290 (x3305 64 x162 100)) x162))
(assert (= 64 (x967 (x3305 64 x5518 100))))
(assert (= (or x994 x6710) x39))
(assert (= x5027 (or x3512 x4839 x4600)))
(assert (= x3484 (or x2412 x3133)))
(assert (x2673 x466))
(assert (= (x967 (x3305 64 x1587 100)) 64))
(assert (x4097 x2241 256))
(assert (x2673 x1837))
(assert (not (x669 (x3305 64 x217 100))))
(assert (= 36 (x1802 (x3305 64 x7239 36))))
(assert (not (x669 (x3305 64 x9009 36))))
(assert (= (x3305 64 x4614 6) (x530 (x3305 64 x4614 6))))
(assert (x2673 x3124))
(assert (= (and (not x5655) x4242) x7697))
(assert (= 0 (x530 8365236128558009046904410293209581292053118695343348878262597880337030709248)))
(assert (x2673 x5769))
(assert (= 64 (x967 (x3305 64 x3733 100))))
(assert (= (x4290 (x3305 64 x8142 10)) x8142))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4648 100)))
(assert (= (and x7640 x1350) x1892))
(assert (< 10000 (x3305 64 x2161 100)))
(assert (x2673 x2088))
(assert (x2673 x3058))
(assert (x8339 x3887))
(assert (x2673 x4426))
(assert (x7454 x5893))
(assert (= (x530 (x3305 64 x1528 36)) (x3305 64 x1528 36)))
(assert (x2673 x161))
(assert (= (and x1298 (not x3997)) x4174))
(assert (= (x1802 (x3305 64 x6598 100)) 100))
(assert (x4744 x4164))
(assert (x4097 x243 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4716 (and x7560 x2261)))
(assert (= x5159 (or x5855 x2015)))
(assert (x4097 x7173 256))
(assert (x4097 x5935 256))
(assert (= (x4290 (x3305 64 x3617 100)) x3617))
(assert (x2673 x8214))
(assert (= (and (not x3244) x6799) x4092))
(assert (x2673 x296))
(assert (not (x669 (x3305 64 x1281 100))))
(assert (= (x967 (x3305 64 x2154 100)) 64))
(assert (= (and (not x2277) x3141) x2333))
(assert (x2673 x1569))
(assert (x2673 x5316))
(assert (x2673 x8889))
(assert (x4097 x2438 256))
(assert (x2673 x922))
(assert (x1240 x2955))
(assert (= (x530 115792089237316195423570985008687907853269984665640564039457584007913129639903) 0))
(assert (> (x3305 64 x6932 100) 10000))
(assert (= x3675 (and x4966 x7750)))
(assert (x2673 x2050))
(assert (x2673 x8942))
(assert (x2673 x7843))
(assert (not (x669 (x3305 64 x9096 11))))
(assert (=> (<= x3059 10000) (= (x530 x3059) 0)))
(assert (=> (<= x4898 10000) (= 0 (x530 x4898))))
(assert (not (x669 (x3305 64 x6237 100))))
(assert (= (x1802 (x3305 64 x1591 100)) 100))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (=> (and (= (x7405 (+ 32 x5796)) x3487) (= x5796 (x7405 (+ 32 x3070))) (= (x7405 (+ 32 x3487)) x35) (= x3804 (x7190 (- x35 x1588))) (= x7080 false) (= true x7918) (= (x7405 (+ x1588 4)) x3070)) x3445) x948))
(assert (x7454 x2809))
(assert (= (x3305 64 x4013 100) (x530 (x3305 64 x4013 100))))
(assert (x2673 x7342))
(assert (x8502 (ite (= x7334 0) 1 0)))
(assert (< 10000 (x3305 64 x3730 0)))
(assert (x2673 x8045))
(assert (= (x4290 (x3305 64 x3214 36)) x3214))
(assert (x2673 x7220))
(assert (= (and (not x7527) x5457) x6889))
(assert (=> (<= x8713 10000) (= (x530 x8713) 0)))
(assert (= x2847 (x4290 (x3305 64 x2847 100))))
(assert (x1240 x1064))
(assert (> (x3305 64 x3892 12) 10000))
(assert (< (x3305 64 x719 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x7095 x5572) (= x8108 x5949) (= x2005 x1919) (= x6250 x6005) (= x2199 x8538) (= x5243 x5716) (= x3114 x5197) (= x8508 x3786) (= x415 x506) (= x6935 x6701) (= x4840 x100) (= x4328 x751) (= x7960 x4779)) x6891) x5812))
(assert (x2673 x4985))
(assert (> (x3305 64 x2750 100) 10000))
(assert (x2673 x2870))
(assert (x2673 x4300))
(assert (x2673 x1413))
(assert (= 64 (x967 (x3305 64 x951 100))))
(assert (x2673 x1589))
(assert (x2673 x4625))
(assert (=> (<= x3733 10000) (= (x530 x3733) 0)))
(assert (x2673 x8405))
(assert (= 36 (x1802 (x3305 64 x9009 36))))
(assert (= (and x8599 x4079) x5969))
(assert (x2673 x6823))
(assert (x2673 x2442))
(assert (x2673 x2869))
(assert (x2673 x6575))
(assert (=> (>= 10000 x9009) (= 0 (x530 x9009))))
(assert (x2673 x584))
(assert (< (x3305 64 x683 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x1087 256))
(assert (x2673 x2119))
(assert (x2673 x4089))
(assert (=> (>= 10000 x6457) (= (x530 x6457) 0)))
(assert (x2673 x8077))
(assert (x2673 x4250))
(assert (= x2940 (and (not x1942) x1024)))
(assert (x2673 x4697))
(assert (x8339 x2593))
(assert (= x1867 (and x4952 (not x2056))))
(assert (x4744 x6110))
(assert (x2673 x7766))
(assert (x2673 x8442))
(assert (=> (>= 10000 x6273) (= (x530 x6273) 0)))
(assert (= (x967 (x3305 64 x755 12)) 64))
(assert (= 100 (x1802 (x3305 64 x3729 100))))
(assert (x2673 x8742))
(assert (= (x1802 (x3305 64 x951 100)) 100))
(assert (x8339 x7406))
(assert (= (x4290 (x3305 64 x606 100)) x606))
(assert (x2673 x4016))
(assert (x2673 x8109))
(assert (x2673 x7023))
(assert (= x4487 (=> (and (= x1014 (= 255 x2216)) (= x4294 480) (= x8071 480)) (and (=> x1014 x2461) (=> (and (not x1014) (and (= (x3305 64 x2216 12) x3593) (= (x5917 255 x3962) x8075) (= (x3011 x3593) x7890) (= (x5917 255 x3962) x5211) (>= 18446744073709551615 x7890) (= x3962 (+ 1 x2216)) (= (= x8075 255) x3034))) (and (=> x3034 x3877) (=> (and (not x3034) (and (= (= x7773 255) x3328) (= (+ 1 x8075) x6231) (= x7774 (x5917 255 x6231)) (= (x5917 255 x6231) x7773) (= (x8042 x2229) x7383) (= (x4588 x7383 300) x4394) (= (x3305 64 x8075 36) x2229))) (and (=> (and (not x3328) (and (= x6972 (x7941 x2490)) (= x3925 (x5917 255 x5681)) (= x5681 (+ 1 x7773)) (= (x3305 64 x7773 100) x2490) (= (x5917 255 x5681) x6457) (= (= x6457 255) x8260))) (and (=> x8260 x3877) (=> (and (not x8260) (and (= x6927 (x5917 255 x7317)) (= x1170 (x3305 64 x6457 100)) (= x4649 (= 255 x7877)) (= (+ 1 x6457) x7317) (= x7877 (x5917 255 x7317)) (= x1532 (x7941 x1170)))) (and (=> x4649 x8724) (=> (and (not x4649) (and (= x434 (+ 1 x7877)) (= x7108 (x5917 255 x434)) (= (= x6769 255) x5502) (= x6777 (x7941 x7148)) (= (x3305 64 x7877 100) x7148) (= x6769 (x5917 255 x434)))) (and (=> x5502 x5028) (=> (and (and (= x6229 (= x3066 255)) (= x3066 (x5917 255 x5828)) (= (+ x6769 1) x5828) (= x2792 (x3305 64 x6769 100)) (= (x5917 255 x5828) x1289) (= (x7941 x2792) x4249)) (not x5502)) (and (=> (and (and (= x8678 (= 255 x760)) (= (x3305 64 x3066 100) x819) (= (+ x3066 1) x1141) (= (x5917 255 x1141) x760) (= x5377 (x7941 x819)) (= (x5917 255 x1141) x8691)) (not x6229)) (and (=> (and (not x8678) (and (= x776 (x5917 255 x1546)) (= (x7941 x4312) x8391) (= (= x776 255) x5725) (= x1546 (+ 1 x760)) (= x3414 (x5917 255 x1546)) (= x4312 (x3305 64 x760 100)))) (and (=> x5725 x378) (=> (and (and (= (= 255 x1621) x5530) (= x890 (x3305 64 x776 100)) (= (+ x776 1) x4529) (= (x5917 255 x4529) x1621) (= (x5917 255 x4529) x50) (= x1416 (x7941 x890))) (not x5725)) (and (=> (and (not x5530) (and (= x6397 (x3305 64 x1621 100)) (= x9122 (x7941 x6397)) (= x7827 (= 255 x3232)) (= x2063 (+ 1 x1621)) (= (x5917 255 x2063) x3232) (= x6118 (x5917 255 x2063)))) (and (=> x7827 x4313) (=> (and (and (= x2154 (x5917 255 x8024)) (= x6057 (= x2154 255)) (= x8024 (+ 1 x3232)) (= (x3305 64 x3232 100) x8118) (= x8444 (x5917 255 x8024)) (= x5770 (x7941 x8118))) (not x7827)) (and (=> (and (and (= x6040 (+ 1 x2154)) (= (x7405 (+ x1146 32)) x3741) (= (x5917 255 x6040) x8403) (= x4051 (+ x4394 31)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x5948)) (= x8401 (> x4394 x4051)) (= x4348 (x7405 (+ 32 x5948))) (= (x3305 64 x2154 100) x3899) (= (x7405 (+ 32 x1761)) x1100) (= (x7405 (+ 32 x6505)) x7810) (= (x7405 (+ 32 x8573)) x6505) (<= x5948 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5948) (= x6044 (x7941 x3899)) (< x5948 x7579) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5948) (= x8329 0) (= x1761 (x7405 (+ 32 x3867))) (= x7265 (x7405 (+ 32 x1100))) (= x3867 (x7405 (+ 32 x7810))) (= (x7190 (- x7579 x5948)) x6389) (= (x5917 255 x6040) x7952) (not (= x5948 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= x1146 (x7405 (+ 32 x7265))) (not (= x5948 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x7405 (+ x4348 32)) x8573) (= x7579 (x7405 (+ x3741 32))) (= (x7190 (- x6389 32)) x7770)) (not x6057)) (and (=> x8401 x3877) (=> (and (= (> x4394 x4051) x369) (not x8401)) (and (=> (and (and (= (x2406 x5948) x6995) (= (> x4394 x6995) x1949)) (not x369)) (and (=> (and x1949 (= x6690 x7579)) x7060) (=> (and (= (= x4394 0) x6269) (not x1949)) (and (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7579)) (= x7689 x7579) (= x6836 (x7405 (+ x7579 32))) (= x6836 x2413) (<= x7579 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x7579 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x7579 x6836) (not (= x7579 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x7579) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7579))) x6269) x2376) (=> (and (and (= (x7405 (+ x7936 x7029)) x3151) (= (x7405 (+ x7579 x4918)) x5381) (= (x7405 (+ x5948 x4918)) x7936) (= x2249 (> x6727 x3313)) (or (= x7029 0) (= x7029 32)) (= x7582 (* (ite (= x4918 0) 1 0) 32)) (= (* 32 (ite (= x4918 0) 1 0)) x7029) (= x3313 (x7405 (+ x5381 x7582))) (= x6727 (x7405 (+ x4394 x3313))) (or (= 32 x7582) (= x7582 0)) (= (x5917 31 x4394) x4918)) (not x6269)) (and (=> (and (not x2249) (= x5501 x3313)) x8520) (=> x2249 x4539))))))) (=> (and x369 (= x7579 x2643)) x666))))) (=> x6057 x2776))))) (=> x5530 x2932))))) (=> x8678 x8138))) (=> x6229 x7577))))))))) (=> x3328 x3877)))))))))
(assert (not (x669 (x3305 64 x6672 100))))
(assert (= x1300 (and (not x4834) x39)))
(assert (x2673 x1811))
(assert (not (x669 (x3305 64 x1586 100))))
(assert (= x4161 (and x5916 (not x6589))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3232 100)))
(assert (= x6210 (x4290 (x3305 64 x6210 100))))
(assert (x2673 x1576))
(assert (= x2479 (and x2586 x7495)))
(assert (x2673 x7686))
(assert (= (x3305 64 x3954 2) (x530 (x3305 64 x3954 2))))
(assert (> (x3305 64 x5518 100) 10000))
(assert (x2673 x1686))
(assert (x2673 x5610))
(assert (= (and x6041 x1715) x1037))
(assert (=> (>= 10000 x3104) (= (x530 x3104) 0)))
(assert (= (x1802 (x3305 64 x142 100)) 100))
(assert (= (x967 (x3305 64 x235 100)) 64))
(assert (= (x967 (x3305 64 x544 100)) 64))
(assert (x2673 x8202))
(assert (x2673 x5826))
(assert (= (x967 (x3305 64 x7877 100)) 64))
(assert (x2673 x3617))
(assert (not (x669 (x3305 64 x9048 100))))
(assert (= (and x8393 x6140) x3766))
(assert (= 0 (x530 2001815235)))
(assert (= x3602 (and x4404 x7711)))
(assert (= x6955 (and x1374 (not x6138))))
(assert (x4097 x4552 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4665))
(assert (= 64 (x967 (x3305 64 x8506 36))))
(assert (= 100 (x1802 (x3305 64 x8591 100))))
(assert (x2673 x6548))
(assert (= x655 (and x5239 (not x5861))))
(assert (x2673 x5295))
(assert (x2673 x30))
(assert (=> (>= 10000 x2106) (= 0 (x530 x2106))))
(assert (= x3537 (and (not x7703) x7702)))
(assert (x8339 x4477))
(assert (= (x1802 (x3305 64 x5721 100)) 100))
(assert (x2673 x6301))
(assert (= 100 (x1802 (x3305 64 x3266 100))))
(assert (= 100 (x1802 (x3305 64 x3241 100))))
(assert (= x7694 (and (not x4581) x7617)))
(assert (= (=> (= x7654 x7424) x3409) x2902))
(assert (x2673 x3571))
(assert (> (x3305 64 x9039 100) 10000))
(assert (x2673 x2409))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x368 100)))
(assert (= (x530 (x3305 64 x7378 36)) (x3305 64 x7378 36)))
(assert (= (x1802 (x3305 64 x2216 12)) 12))
(assert (x2673 x4662))
(assert (x2673 x8463))
(assert (x2673 x7880))
(assert (x2673 x4178))
(assert (x4097 x2361 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1802 (x3305 64 x6099 100)) 100))
(assert (= (x530 (x3305 64 x6700 100)) (x3305 64 x6700 100)))
(assert (= x8497 (and x7401 x4574)))
(assert (= 64 (x967 (x3305 64 x4985 100))))
(assert (x2673 x8928))
(assert (=> (>= 10000 x1084) (= (x530 x1084) 0)))
(assert (x2673 x627))
(assert (= x3232 (x4290 (x3305 64 x3232 100))))
(assert (x8339 x8745))
(assert (=> (>= 10000 x6730) (= 0 (x530 x6730))))
(assert (= (or x7206 x4361) x8180))
(assert (=> (<= x3066 10000) (= (x530 x3066) 0)))
(assert (= x7818 (or x582 x1129 x3768 x7013 x5490)))
(assert (= 64 (x967 (x3305 64 x6099 100))))
(assert (not (x669 (x3305 64 x7378 36))))
(assert (x2673 x8157))
(assert (x2673 x2810))
(assert (= (x1802 (x3305 64 x3421 36)) 36))
(assert (= x3958 (or x6624 x1782)))
(assert (=> (<= x7184 10000) (= (x530 x7184) 0)))
(assert (= (x530 (x3305 64 x2356 100)) (x3305 64 x2356 100)))
(assert (= 12 (x1802 (x3305 64 x4087 12))))
(assert (x8339 x4164))
(assert (x2673 x415))
(assert (= x7432 (x4290 (x3305 64 x7432 6))))
(assert (= (and x8585 x7350) x8543))
(assert (x2673 x7810))
(assert (< (x3305 64 x6700 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3177))
(assert (x4097 x3413 300))
(assert (x2673 x1804))
(assert (x2673 x3811))
(assert (not (x669 (x3305 64 x8322 100))))
(assert (x2673 x4478))
(assert (< 10000 (x3305 64 x9078 12)))
(assert (= (and x7660 (not x1915)) x6797))
(assert (x2673 x4111))
(assert (= (x967 (x3305 64 x5440 36)) 64))
(assert (x2673 x659))
(assert (=> (>= 10000 x217) (= (x530 x217) 0)))
(assert (x2673 x5506))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3109 100)))
(assert (x2673 x2075))
(assert (x2673 x4953))
(assert (x2673 x2787))
(assert (= x8613 (x4290 (x3305 64 x8613 36))))
(assert (=> (<= x959 10000) (= (x530 x959) 0)))
(assert (= (=> (and (= false x4240) (= x1468 true)) x3445) x3877))
(assert (not (x669 (x3305 64 x6806 100))))
(assert (= (x4290 (x3305 64 x544 100)) x544))
(assert (x2673 x2381))
(assert (x2673 x6836))
(assert (x2673 x5813))
(assert (x2673 x3925))
(assert (= x9127 (x4290 (x3305 64 x9127 10))))
(assert (x8339 x4356))
(assert (= (and x2725 x1683) x3800))
(assert (not (x669 (x3305 64 x7113 100))))
(assert (x4744 x174))
(assert (= (x530 (x3305 64 x9127 10)) (x3305 64 x9127 10)))
(assert (x4744 x5047))
(assert (not (x669 (x3305 64 x4868 100))))
(assert (> (x3305 64 x6319 100) 10000))
(assert (x8339 x6870))
(assert (> (x3305 64 x2354 100) 10000))
(assert (= x5944 (or x7227 x4316 x4265)))
(assert (= x3266 (x4290 (x3305 64 x3266 100))))
(assert (x4744 x5347))
(assert (= x3083 (and x2039 (not x5034))))
(assert (x2673 x7831))
(assert (x2673 x443))
(assert (x2673 x3229))
(assert (< (x3305 64 x309 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x2930 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4433))
(assert (= (x3305 64 x346 100) (x530 (x3305 64 x346 100))))
(assert (= x7100 (and x8753 (not x4233))))
(assert (x4097 x8127 256))
(assert (= x8305 (and x1214 (not x1386))))
(assert (x8339 x4067))
(assert (x2673 x4403))
(assert (x2673 x7152))
(assert (x2673 x4199))
(assert (x4097 x818 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4290 (x3305 64 x1650 100)) x1650))
(assert (= (x1802 (x3305 64 x5270 100)) 100))
(assert (= 100 (x1802 (x3305 64 x6206 100))))
(assert (= x939 (x4290 (x3305 64 x939 36))))
(assert (< (x3305 64 x2354 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x6011 x1239 x2445 x2521 x6537) x9095))
(assert (= (x3305 64 x830 36) (x530 (x3305 64 x830 36))))
(assert (x8339 x5710))
(assert (x2673 x5768))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2415 100)))
(assert (x2673 x5260))
(assert (< (x3305 64 x8060 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x9075))
(assert (x2673 x3549))
(assert (x2673 x3716))
(assert (x4097 x5149 300))
(assert (x2673 x3044))
(assert (x2673 x8635))
(assert (= (and (not x6591) x2746) x2311))
(assert (x2673 x8999))
(assert (= (=> (and (= x7741 (= 0 x7042)) (or (not x7741) x7741)) x2585) x5895))
(assert (x8339 x5800))
(assert (> (x3305 64 x6135 36) 10000))
(assert (not (x669 (x3305 64 x7432 6))))
(assert (x8339 x4166))
(assert (= (x1802 (x3305 64 x8615 100)) 100))
(assert (= (and (not x4506) x5027) x7133))
(assert (= (and (not x1392) x6525) x2952))
(assert (x2673 x8993))
(assert (x2673 x5544))
(assert (x2673 x7375))
(assert (x2673 x747))
(assert (x2673 x8095))
(assert (= (and x829 (not x7709)) x1147))
(assert (= x6806 (x4290 (x3305 64 x6806 100))))
(assert (= (x1802 (x3305 64 x2608 100)) 100))
(assert (x4744 x2294))
(assert (x2673 x8012))
(assert (= (x4290 (x3305 64 x1000 100)) x1000))
(assert (= 64 (x967 (x3305 64 x1499 100))))
(assert (x2673 x2814))
(assert (x2673 x8944))
(assert (x2673 x6098))
(assert (> (x3305 64 x5511 100) 10000))
(assert (x2673 x5048))
(assert (= 64 (x967 (x3305 64 x7791 12))))
(assert (x2673 x7551))
(assert (x2673 x2051))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7443 100)))
(assert (x2673 x3967))
(assert (x7454 x9085))
(assert (x2673 x6259))
(assert (= x9023 (x4290 (x3305 64 x9023 100))))
(assert (x2673 x6222))
(assert (= x3026 (x4290 (x3305 64 x3026 100))))
(assert (x4097 x9002 256))
(assert (= (and x848 (not x1696)) x3361))
(assert (x2673 x7480))
(assert (= 100 (x1802 (x3305 64 x6672 100))))
(assert (> (x3305 64 x4913 100) 10000))
(assert (= x598 (and x5720 x5541)))
(assert (= 64 (x967 (x3305 64 x1448 100))))
(assert (not (x669 (x3305 64 x544 100))))
(assert (= x8449 (and (not x2498) x3422)))
(assert (x2673 x4962))
(assert (x2673 x8984))
(assert (x2673 x809))
(assert (= (x1802 (x3305 64 x959 100)) 100))
(assert (= (and (not x4996) x1204) x6843))
(assert (< 10000 (x3305 64 x1587 100)))
(assert (x9110 x4135))
(assert (= x6767 (x4290 (x3305 64 x6767 36))))
(assert (x2673 x6338))
(assert (x4097 x5714 256))
(assert (= (or (and x4168 (not x2097)) x4314) x7495))
(assert (x2673 x4005))
(assert (= (x530 106705613605932439001713296114446454776331749937047859905631657259250407702528) 0))
(assert (x2673 x7582))
(assert (x2673 x3400))
(assert (= (and (not x4730) x2752) x2550))
(assert (x8339 x1633))
(assert (x2673 x6620))
(assert (x2673 x1883))
(assert (x2673 x1935))
(assert (x2673 x3750))
(assert (x8339 x8712))
(assert (= 64 (x967 (x3305 64 x6693 100))))
(assert (x4097 x1924 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x2079 100))))
(assert (= (=> (and (= x5899 x5798) (= x7680 x3890) (= x1120 x886) (= x6557 x8170) (= x4844 x1686) (= x8589 x4063) (= x6849 x6722) (= x4555 x8454) (= x8634 x3941) (= x2183 x6643)) x1265) x4340))
(assert (< 10000 (x3305 64 x7463 36)))
(assert (= (x1802 (x3305 64 x7796 100)) 100))
(assert (=> (>= 10000 x4519) (= (x530 x4519) 0)))
(assert (x2673 x5303))
(assert (= x4541 (and (not x3345) x5902)))
(assert (x2673 x4497))
(assert (= x2363 (and x4834 x39)))
(assert (= 100 (x1802 (x3305 64 x462 100))))
(assert (x2673 x1412))
(assert (= 64 (x967 (x3305 64 x8238 100))))
(assert (x2673 x3164))
(assert (x2673 x4346))
(assert (x2673 x2019))
(assert (= x2711 (or x6159 x2118 x8407 x9044 x561)))
(assert (x8339 x6981))
(assert (=> (>= 10000 x2415) (= 0 (x530 x2415))))
(assert (x2673 x8092))
(assert (x669 310283853))
(assert (x4097 x1690 256))
(assert (x2673 x8026))
(assert (x2673 x50))
(assert (= (or x3394 x2420 x3297 x7099 x7204) x6361))
(assert (not (x669 (x3305 64 x6700 100))))
(assert (= (and (not x8434) x1432) x6056))
(assert (x2673 x3630))
(assert (x2673 x7038))
(assert (x2673 x4921))
(assert (x2673 x5657))
(assert (x2673 x3316))
(assert (x2673 x8894))
(assert (x2673 x2984))
(assert (x2673 x3941))
(assert (x2673 x8250))
(assert (=> (<= x7113 10000) (= (x530 x7113) 0)))
(assert (x2673 x4590))
(assert (x2673 x5058))
(assert (= (and x5434 (not x4877)) x1933))
(assert (x2673 x6854))
(assert (x2673 x2975))
(assert (< 10000 (x3305 64 x2018 100)))
(assert (x1240 x3764))
(assert (x2673 x5622))
(assert (= (x3305 64 x7686 12) (x530 (x3305 64 x7686 12))))
(assert (x2673 x8987))
(assert (= 100 (x1802 (x3305 64 x8032 100))))
(assert (x2673 x6693))
(assert (x2673 x3940))
(assert (x2673 x1279))
(assert (x7454 x5792))
(assert (x2673 x3992))
(assert (not (x669 (x3305 64 x3109 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7373 100)))
(assert (x2673 x3440))
(assert (= (x530 (+ 1 x3099)) (x530 x3099)))
(assert (x2673 x7957))
(assert (x2673 x4047))
(assert (= 0 (x530 4294967326)))
(assert (< (x3305 64 x474 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7412))
(assert (x2673 x9056))
(assert (> (x3305 64 x368 100) 10000))
(assert (x2673 x7231))
(assert (x2673 x2715))
(assert (x2673 x4823))
(assert (x8339 x1334))
(assert (= (x4290 (x3305 64 x432 6)) x432))
(assert (x2673 x7677))
(assert (x9110 x852))
(assert (x4097 x7538 256))
(assert (x2673 x4152))
(assert (x2673 x5200))
(assert (= x2585 (=> (= (= x7042 0) x2272) (and (=> (and (not x2272) (= x1689 x899)) x8267) (=> (and (and (= x4135 x7801) (= true x7883) (= false x1786)) x2272) x8273)))))
(assert (x2673 x5787))
(assert (x4097 x2173 256))
(assert (= (x967 (x3305 64 x668 100)) 64))
(assert (= x2561 (and (not x7864) x5944)))
(assert (= (x1802 (x3305 64 x7686 12)) 12))
(assert (= x7061 (or (and (not x6100) x2947) x6662)))
(assert (x4097 x4965 256))
(assert (x2673 x1255))
(assert (= (x1802 (x3305 64 x1051 100)) 100))
(assert (= (x4290 (x3305 64 x6212 100)) x6212))
(assert (x8339 x7211))
(assert (x2673 x2183))
(assert (< 10000 (x3305 64 x2847 100)))
(assert (= x1872 (and (not x6140) x8393)))
(assert (< (x3305 64 x8238 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x6745 x8604) x1573))
(assert (x2673 x4765))
(assert (x2673 x3761))
(assert (x4097 x7090 256))
(assert (x2673 x7852))
(assert (x5050 x5762))
(assert (not (x669 (x3305 64 x4533 12))))
(assert (x4097 x5048 32))
(assert (= x2090 (x4290 (x3305 64 x2090 12))))
(assert (x2673 x725))
(assert (= (and x888 x3672) x5462))
(assert (< 10000 (x3305 64 x8143 100)))
(assert (x2673 x5660))
(assert (x8502 1000000000))
(assert (= x5310 (and (not x3285) x6646)))
(assert (= x1953 (x4290 (x3305 64 x1953 100))))
(assert (= x7160 (=> (= (= 0 x8213) x2873) (and (=> (and (and (= false x3713) (= x5675 true)) x2873) x3445) (=> (and (not x2873) (and (= x8589 x2442) (= x7680 x7720) (= x1120 x5653) (= x6612 x1686) (= x2960 x8454) (= x7551 x6557) (= x5564 x5899) (= x6849 x612) (= x2383 x6643) (= x4371 x3941))) x4340)))))
(assert (x2673 x4689))
(assert (> (x3305 64 x7403 100) 10000))
(assert (x2673 x5335))
(assert (x2673 x5021))
(assert (not (x669 (x3305 64 x8085 100))))
(assert (= x3128 (=> (and (<= x5225 115792089237316195423570985008687907853269984665640564039457584007913129639904) (< x1767 x5225) (= (x7405 (+ x3756 31)) x1215) (= x1767 x3113) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x1767) (>= x5225 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x1767) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1215) x5225) (<= x1767 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x5225 x4254)) x5013)))
(assert (x2673 x1801))
(assert (x2673 x4782))
(assert (x2673 x9097))
(assert (= 64 (x967 (x3305 64 x2619 100))))
(assert (= x1214 (and x4221 (not x5596))))
(assert (= (x1802 (x3305 64 x2356 100)) 100))
(assert (> (x3305 64 x5173 100) 10000))
(assert (= x6478 (and x2966 x2938)))
(assert (x2673 x8549))
(assert (x2673 x3634))
(assert (x8339 x3020))
(assert (x7454 x5731))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2161 100)))
(assert (> (x3305 64 x5340 100) 10000))
(assert (x8339 x2996))
(assert (= x271 (x4290 (x3305 64 x271 100))))
(assert (x2673 x3784))
(assert (< 10000 (x3305 64 x668 100)))
(assert (= (x4290 (x3305 64 x5577 100)) x5577))
(assert (x2673 x8220))
(assert (x2673 x7215))
(assert (=> (>= 10000 x6651) (= (x530 x6651) 0)))
(assert (x2673 x5244))
(assert (= (and x74 (not x6658)) x8005))
(assert (=> (>= 10000 x5550) (= (x530 x5550) 0)))
(assert (x2673 x454))
(assert (> (x3305 64 x4266 100) 10000))
(assert (x2673 x4476))
(assert (x2673 x3037))
(assert (x4097 x4837 32))
(assert (= x6580 (and x7818 x3666)))
(assert (= (and x5450 (not x4258)) x6527))
(assert (= (x3305 64 x3956 100) (x530 (x3305 64 x3956 100))))
(assert (x2673 x2214))
(assert (x2673 x3698))
(assert (x2673 x2313))
(assert (x2673 x8055))
(assert (= (x3305 64 x3679 36) (x530 (x3305 64 x3679 36))))
(assert (x2673 x2749))
(assert (x2673 x5002))
(assert (x2673 x299))
(assert (= 64 (x967 (x3305 64 x4689 36))))
(assert (= (x530 (x3305 64 x5550 100)) (x3305 64 x5550 100)))
(assert (= x5870 (x4290 (x3305 64 x5870 100))))
(assert (< (x3305 64 x1084 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3544))
(assert (= 64 (x967 (x3305 64 x8576 36))))
(assert (x4744 x3993))
(assert (= (x530 (x3305 64 x1448 100)) (x3305 64 x1448 100)))
(assert (x2673 x4432))
(assert (x2673 x2514))
(assert (= (x3305 64 x5390 100) (x530 (x3305 64 x5390 100))))
(assert (x2673 x3140))
(assert (x2673 x2136))
(assert (= (and x5107 (not x1327)) x3689))
(assert (< (x3305 64 x5537 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3214))
(assert (not (x669 (x3305 64 x6598 100))))
(assert (> (x3305 64 x6053 2) 10000))
(assert (x2673 x5974))
(assert (not (x669 (x3305 64 x6804 36))))
(assert (x2673 x5369))
(assert (x2673 x2751))
(assert (x2673 x1436))
(assert (x2673 x7715))
(assert (x2673 x5406))
(assert (x2673 x2819))
(assert (x2673 x8044))
(assert (= x7994 (or x3589 x1818 x8914)))
(assert (x2673 x3979))
(assert (x4744 x3761))
(assert (< (x3305 64 x7718 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7554))
(assert (= (=> (and (= x1792 x2323) (= x60 x4774) (= x4073 x2850) (= x4711 x2558)) x213) x4686))
(assert (= (x4290 (x3305 64 x6651 100)) x6651))
(assert (x8339 x37))
(assert (= 100 (x1802 (x3305 64 x7354 100))))
(assert (= (and x4174 (not x5516)) x4211))
(assert (x2673 x2259))
(assert (x2673 x5659))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7581 36)))
(assert (= (x3305 64 x6804 36) (x530 (x3305 64 x6804 36))))
(assert (= x7011 (and x5696 x1698)))
(assert (x2673 x2389))
(assert (x2673 x975))
(assert (= x3760 (and x3041 (not x1232))))
(assert (x2673 x1045))
(assert (x2673 x6303))
(assert (= x6539 (and (not x6057) x4061)))
(assert (x2673 x1542))
(assert (= (x4290 (x3305 64 x2642 100)) x2642))
(assert (x2673 x4898))
(assert (x4744 x5426))
(assert (x8912 32 (ite (= x4918 0) 1 0)))
(assert (x4744 x5935))
(assert (x2673 x5856))
(assert (x2673 x4167))
(assert (x2673 x4226))
(assert (x2673 x6705))
(assert (not (x669 (x3305 64 x4013 100))))
(assert (= x744 (x4290 (x3305 64 x744 100))))
(assert (x7454 x7893))
(assert (x2673 x3289))
(assert (= (x967 (x3305 64 x5721 100)) 64))
(assert (= x7060 (=> (and (= x7449 (x7405 (+ x9031 32))) (= false x5985) (= x4030 (x7405 (+ 32 x1149))) (= x1149 (x7405 (+ x6690 4))) (= x9031 (x7405 (+ x4030 32))) (= x3772 (x7190 (- x7449 x6690))) (= x7187 true)) x3445)))
(assert (= (and x6204 x1300) x3467))
(assert (= x6216 (=> (and (= (x7405 (+ x5139 x6442)) x6808) (= x1661 (x355 x7689)) (= (x7405 (+ x7451 x6442)) x3599) (= (x7405 (+ x5139 31)) x2930) (= x4273 (x7190 (- x3599 x6964))) (= x7898 (x7405 (+ x4890 32))) (= x7616 (x7405 (+ x7898 32))) (= x6349 (x7405 (+ x3599 32))) (= (< 0 x1661) x1851) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2930) x7451) (= (x7405 (+ x7689 32)) x9007)) (and (=> (and (and (= (x8760 x9007) x1023) (= x2690 (> x1661 32))) x1851) (and (=> (and x2690 (and (= x9010 (x7405 (+ x6349 32))) (= x3164 (x7405 (+ x9007 32))) (= x839 (< 64 x1661)) (= x2087 (x8102 x3164)))) (and (=> (not x839) x8668) (=> (and x839 (and (= (x7405 (+ x9007 64)) x7513) (= x8349 (x4724 x7513)) (= x6554 (x7405 (+ x6349 64))) (= (> x1661 96) x3393))) (and (=> x3393 x2601) (=> (not x3393) x8668))))) (=> (not x2690) x8668))) (=> (not x1851) x8668)))))
(assert (x2673 x2933))
(assert (x2673 x1602))
(assert (x9110 x1501))
(assert (x2673 x7517))
(assert (x2673 x1522))
(assert (x2673 x6871))
(assert (x4097 x847 32))
(assert (x2673 x945))
(assert (x2673 x9078))
(assert (and (= 81 (x4766 9 9)) (= (x4766 27 3) 81) (= 27 (x4766 9 3)) (= (x4766 3 3) 9)))
(assert (x4744 x6999))
(assert (x2673 x7984))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3278 100)))
(assert (= (and x8940 (not x8550)) x7421))
(assert (not (x669 (x3305 64 x7443 100))))
(assert (= (x1802 (x3305 64 x1486 100)) 100))
(assert (= (x1802 (x3305 64 x1406 100)) 100))
(assert (= x8506 (x4290 (x3305 64 x8506 36))))
(assert (=> (<= x6131 10000) (= 0 (x530 x6131))))
(assert (x2673 x4763))
(assert (= (and x2440 x7195) x2425))
(assert (= (x530 (x3305 64 x755 12)) (x3305 64 x755 12)))
(assert (= (x967 (x3305 64 x7193 100)) 64))
(assert (x2673 x5352))
(assert (x2673 x650))
(assert (x2673 x3125))
(assert (x4744 x2006))
(assert (x2673 x8532))
(assert (not (x669 (x3305 64 x9023 100))))
(assert (< (x3305 64 x7686 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3928 (not x6028)) x2953))
(assert (x8502 (ite (= x4760 0) 1 0)))
(assert (x2673 x7524))
(assert (= (and (not x8086) x6618) x952))
(assert (= (and (not x3009) x18) x1298))
(assert (x4744 x3242))
(assert (= x5857 (and x2134 (not x2954))))
(assert (x2673 x7223))
(assert (x2673 x8227))
(assert (x2673 x9014))
(assert (x2673 x4249))
(assert (x2673 x4196))
(assert (< (x3305 64 x1000 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8318))
(assert (x2673 x7068))
(assert (x2673 x6686))
(assert (x2673 x3304))
(assert (x9110 x7966))
(assert (< (x3305 64 x7718 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1802 (x3305 64 x1883 36)) 36))
(assert (x8339 x3962))
(assert (< 10000 (x3305 64 x2874 100)))
(assert (= (x4290 (x3305 64 x4868 100)) x4868))
(assert (= (x967 (x3305 64 x683 6)) 64))
(assert (x2673 x818))
(assert (x2673 x4518))
(assert (= x3152 (and (not x3281) x936)))
(assert (=> (>= 10000 x5488) (= 0 (x530 x5488))))
(assert (x2673 x3446))
(assert (< 10000 (x3305 64 x776 100)))
(assert (x2673 x6682))
(assert (= (x967 (x3305 64 x8897 11)) 64))
(assert (x2673 x7861))
(assert (= 64 (x967 (x3305 64 x2874 100))))
(assert (x2673 x8021))
(assert (x2673 x5540))
(assert (x2673 x2438))
(assert (< (x3305 64 x1448 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7454 x8516))
(assert (x2673 x7193))
(assert (=> (<= x8322 10000) (= (x530 x8322) 0)))
(assert (= (and x701 x238) x7099))
(assert (x2673 x8647))
(assert (x2673 x2619))
(assert (x2673 x9090))
(assert (x2673 x2664))
(assert (x2673 x4695))
(assert (= (x967 (x3305 64 x7129 100)) 64))
(assert (x2673 x1332))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2471 100)))
(assert (= (and x465 x6721) x4824))
(assert (x2673 x7594))
(assert (x2673 x1485))
(assert (not (x669 (x3305 64 x3241 100))))
(assert (= (x1802 (x3305 64 x1354 100)) 100))
(assert (x2673 x4734))
(assert (< 10000 (x3305 64 x2642 100)))
(assert (x8339 x8211))
(assert (= (and x1036 x4269) x238))
(assert (x4744 x7893))
(assert (x2673 x1063))
(assert (= 100 (x1802 (x3305 64 x5488 100))))
(assert (= x5059 (=> (and (= true x3769) (= false x5111) (= x7801 36)) x8273)))
(assert (x2673 x2079))
(assert (x2673 x1089))
(assert (x2673 x2384))
(assert (x4097 x5178 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3517))
(assert (< 10000 (x3305 64 x4617 100)))
(assert (x7454 x3716))
(assert (= (x1802 (x3305 64 x3679 36)) 36))
(assert (= (x4290 (x3305 64 x6804 36)) x6804))
(assert (x7454 x320))
(assert (x2673 x2642))
(assert (= (x1802 (x3305 64 x4322 36)) 36))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5390 100)))
(assert (x2673 x3481))
(assert (not (x669 (x3305 64 x235 100))))
(assert (x2673 x8224))
(assert (x2673 x3936))
(assert (= (x1802 (x3305 64 x3232 100)) 100))
(assert (= 100 (x1802 (x3305 64 x6806 100))))
(assert (< (x3305 64 x7175 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4097 x1195 32))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7403 100)))
(assert (x2673 x9031))
(assert (= (and x7133 (not x1478)) x7109))
(assert (=> (<= x3789 10000) (= 0 (x530 x3789))))
(assert (x2673 x2807))
(assert (= x1272 (x4290 (x3305 64 x1272 36))))
(assert (= (and x5641 (not x4062)) x4310))
(assert (x2673 x5049))
(assert (x2673 x6768))
(assert (= (x967 (x3305 64 x7152 100)) 64))
(assert (x2673 x4027))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4094 100)))
(assert (x7454 x3732))
(assert (= (x1802 (x3305 64 x309 12)) 12))
(assert (= (x530 (x3305 64 x8489 100)) (x3305 64 x8489 100)))
(assert (> (x3305 64 x7354 100) 10000))
(assert (= (and x9059 x1535) x5755))
(assert (=> (>= 10000 x3241) (= (x530 x3241) 0)))
(assert (= 12 (x1802 (x3305 64 x2090 12))))
(assert (= (x1802 (x3305 64 x1237 100)) 100))
(assert (< (x3305 64 x432 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7454 x2996))
(assert (= 64 (x967 (x3305 64 x1725 100))))
(assert (> (x3305 64 x4867 100) 10000))
(assert (x8339 x6133))
(assert (= 36 (x1802 (x3305 64 x7378 36))))
(assert (= (x967 (x3305 64 x2644 100)) 64))
(assert (= x3976 (and x2407 (not x8974))))
(assert (x7454 x882))
(assert (x2673 x4799))
(assert (= (=> (or (not x6368) (and x6368 (= x1431 1))) x5337) x5994))
(assert (< 10000 (x3305 64 x5537 100)))
(assert (> (x3305 64 x3059 100) 10000))
(assert (= (x1802 (x3305 64 x6212 100)) 100))
(assert (x2673 x6621))
(assert (= x237 (or x7238 x3276)))
(assert (x2673 x8381))
(assert (x2673 x7689))
(assert (x2673 x165))
(assert (x8339 x758))
(assert (=> (>= 10000 x5913) (= (x530 x5913) 0)))
(assert (= x8916 (and x6931 x7441)))
(assert (x2673 x2371))
(assert (= x5297 (and x3537 (not x3149))))
(assert (x4097 x7305 32))
(assert (> (x3305 64 x448 100) 10000))
(assert (= x2002 (and (not x4293) x7533)))
(assert (=> (<= x2079 10000) (= (x530 x2079) 0)))
(assert (x4744 x1508))
(assert (x2673 x3278))
(assert (x2673 x4371))
(assert (x8339 x5652))
(assert (= 64 (x967 (x3305 64 x5219 36))))
(assert (x5050 x5710))
(assert (< (x3305 64 x8099 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2534))
(assert (x2673 x3626))
(assert (not (x669 (x3305 64 x4322 36))))
(assert (x2673 x5145))
(assert (x2673 x8653))
(assert (= x1073 (x4290 (x3305 64 x1073 100))))
(assert (x8339 x3586))
(assert (= x3387 (and x7859 x8690)))
(assert (= x8728 (and (not x287) x3231)))
(assert (x4744 x3546))
(assert (not (x669 (x3305 64 x3730 0))))
(assert (x2673 x8873))
(assert (= (x967 (x3305 64 x3241 100)) 64))
(assert (x2673 x6277))
(assert (x2673 x4976))
(assert (x4744 x6133))
(assert (= (x3305 64 x8399 100) (x530 (x3305 64 x8399 100))))
(assert (= (x1802 (x3305 64 x8143 100)) 100))
(assert (x8339 x5048))
(assert (x2673 x1091))
(assert (= (x967 (x3305 64 x3214 36)) 64))
(assert (not (x669 (x3305 64 x3266 100))))
(assert (< 10000 (x3305 64 x977 6)))
(assert (= (x967 (x3305 64 x3789 100)) 64))
(assert (= x2107 (or x2977 x6542)))
(assert (= x3892 (x4290 (x3305 64 x3892 12))))
(assert (= 2 (x1802 (x3305 64 x6053 2))))
(assert (= 64 (x967 (x3305 64 x6319 100))))
(assert (x1240 x8433))
(assert (not (x669 (x3305 64 x8148 6))))
(assert (= x8594 (or (and x5264 x3686) (and x7685 x8066) (and x223 x6236) (and x6424 x3572) (and x5725 x7214) (and x728 x4257))))
(assert (=> (>= 10000 x3076) (= (x530 x3076) 0)))
(assert (x2673 x5650))
(assert (= (x967 (x3305 64 x6206 100)) 64))
(assert (= 64 (x967 (x3305 64 x2133 100))))
(assert (x2673 x5644))
(assert (x2673 x878))
(assert (x2673 x4025))
(assert (x2673 x3996))
(assert (= (x4290 (x3305 64 x2619 100)) x2619))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3652 100)))
(assert (x4744 x8377))
(assert (x4744 x6818))
(assert (x2673 x8495))
(assert (= x8517 (and x195 x1949)))
(assert (x2673 x1621))
(assert (x1240 x2426))
(assert (= x2039 (and x1978 x1301)))
(assert (= x7398 (or x2462 x3978)))
(assert (x2673 x6251))
(assert (= (=> (and (= (x7405 (+ 96 x8821)) x3734) (= x1966 (x7405 (+ x69 96))) (= x5003 (not (< 128 x1645))) (= x7114 (x6291 x3734))) (and x5003 x2693)) x6083))
(assert (< (x3305 64 x217 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x6384))
(assert (x2673 x5819))
(assert (x2673 x476))
(assert (x9110 x199))
(assert (x2673 x6090))
(assert (x2673 x3437))
(assert (x2673 x5792))
(assert (= (x530 (x3305 64 x8197 100)) (x3305 64 x8197 100)))
(assert (= x5573 (and x2873 x8072)))
(assert (x2673 x4218))
(assert (x7454 x7805))
(assert (x2673 x6413))
(assert (x2673 x3160))
(assert (= (or (and x5530 x2174) (and x1019 x3176) (and x1718 x2964) (and x1623 x7700) (and x5317 x212) (and x156 x499)) x1372))
(assert (= (x4290 (x3305 64 x1448 100)) x1448))
(assert (x2673 x3704))
(assert (= (x1802 (x3305 64 x5711 100)) 100))
(assert (< 10000 (x3305 64 x3724 36)))
(assert (x8912 1000000000 x3015))
(assert (= (x967 (x3305 64 x7281 100)) 64))
(assert (= (x3305 64 x3789 100) (x530 (x3305 64 x3789 100))))
(assert (x2673 x6182))
(assert (x8339 x8340))
(assert (= x8144 (=> (and (or x4179 (not x4179)) (= x4179 (= 0 x7408))) x4059)))
(assert (x2673 x3352))
(assert (= x4610 (=> (and (= (x7405 (+ x7177 x2152)) x8918) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1783) x2152) (= x1795 (x7405 (+ x7177 x7609))) (= (x7190 (- x8918 x483)) x2075) (= (x7405 (+ 32 x5732)) x5549) (= x5545 (x8484 x5732)) (= x1783 (x7405 (+ 31 x7609))) (= (> x5545 0) x7116) (= x8964 (x7405 (+ x8918 32))) (= x4799 (x7405 (+ 32 x5514))) (= (x7405 (+ 32 x1801)) x5514)) (and (=> (not x7116) x6535) (=> (and (and (= (x3668 x5549) x7554) (= x7396 (> x5545 32))) x7116) (and (=> (and x7396 (and (= x5323 (x7405 (+ 32 x5549))) (= x6304 (x7405 (+ 32 x8964))) (= x1440 (x4718 x5323)) (= (> x5545 64) x4698))) (and (=> (not x4698) x6535) (=> (and (and (= x2629 (x7405 (+ 64 x5549))) (= (x4650 x2629) x433) (= x656 (> x5545 96)) (= (x7405 (+ x8964 64)) x5408)) x4698) (and (=> (not x656) x6535) (=> x656 x5722))))) (=> (not x7396) x6535)))))))
(assert (= x4574 (or x5922 x4764 x5472 x3501 x7612)))
(assert (x2673 x5488))
(assert (= x8115 (x4290 (x3305 64 x8115 100))))
(assert (= x7360 (and (not x2074) x7386)))
(assert (x4097 x7219 256))
(assert (x2673 x1798))
(assert (= (x1802 (x3305 64 x5931 6)) 6))
(assert (x2673 x2635))
(assert (< 10000 (x3305 64 x5269 100)))
(assert (x2673 x438))
(assert (=> (<= x3748 10000) (= (x530 x3748) 0)))
(assert (x4097 x4111 256))
(assert (x4097 x3887 256))
(assert (x2673 x1304))
(assert (= 64 (x967 (x3305 64 x5127 100))))
(assert (x2673 x4631))
(assert (x8912 32 (ite (= 0 x5706) 1 0)))
(assert (x2673 x1870))
(assert (x2673 x3827))
(assert (= 36 (x1802 (x3305 64 x3214 36))))
(assert (x2673 x7290))
(assert (= x7658 (or (and x6296 x5449) (and x2233 x4100) (and x1913 x318) (and x7180 x5312) (and x1598 x497) (and x3760 x1174))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2400 100)))
(assert (x2673 x2971))
(assert (= (and x4233 x8753) x4392))
(assert (= x763 (=> (and (= (x7405 (+ x1049 32)) x607) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5178) x6008) (= (x7405 (+ 32 x3113)) x5525) (= (x7405 (+ 32 x7578)) x7727) (= x5178 (x7405 (+ 31 x8409))) (= x1049 (x7405 (+ x5271 32))) (= x7578 (x7405 (+ x6008 x2338))) (= x8951 (x7190 (- x7578 x296))) (= x3135 (x4002 x3113)) (= (x7405 (+ x8409 x2338)) x2975) (= (> x3135 0) x4675)) (and (=> (not x4675) x3240) (=> (and (and (= x5075 (x8674 x5525)) (= (> x3135 32) x4998)) x4675) (and (=> (and (and (= x8743 (x7405 (+ 32 x5525))) (= x8177 (x8411 x8743)) (= (x7405 (+ 32 x7727)) x5154) (= (> x3135 64) x9059)) x4998) (and (=> (not x9059) x3240) (=> (and x9059 (and (= (x7405 (+ 64 x7727)) x3544) (= x1560 (x7405 (+ 64 x5525))) (= x72 (> x3135 96)) (= x5031 (x6244 x1560)))) (and (=> x72 x220) (=> (not x72) x3240))))) (=> (not x4998) x3240)))))))
(assert (= (x967 (x3305 64 x8073 100)) 64))
(assert (x2673 x17))
(assert (x4744 x1141))
(assert (=> (<= x6206 10000) (= 0 (x530 x6206))))
(assert (x8339 x8935))
(assert (x2673 x6707))
(assert (x2673 x3660))
(assert (x8339 x5149))
(assert (x4097 x6666 256))
(assert (= (x530 (x3305 64 x3733 100)) (x3305 64 x3733 100)))
(assert (not (x669 (x3305 64 x5718 100))))
(assert (= x5440 (x4290 (x3305 64 x5440 36))))
(assert (x2673 x1378))
(assert (= x3090 (and (not x1116) x8923)))
(assert (= (x3305 64 x2619 100) (x530 (x3305 64 x2619 100))))
(assert (x4744 x835))
(assert (x2673 x7773))
(assert (x8339 x7305))
(assert (> (x3305 64 x8860 36) 10000))
(assert (= (or x7528 x9108) x1656))
(assert (=> (>= 10000 x6494) (= 0 (x530 x6494))))
(assert (x2673 x7394))
(assert (x2673 x4299))
(assert (x2673 x1324))
(assert (x2673 x8739))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639903))
(assert (=> (<= x3580 10000) (= (x530 x3580) 0)))
(assert (x2673 x8698))
(assert (= x6672 (x4290 (x3305 64 x6672 100))))
(assert (x2673 x6245))
(assert (x4097 x6870 256))
(assert (= (and x3431 x7106) x6603))
(assert (x2673 x2665))
(assert (x2673 x8163))
(assert (x7454 x3850))
(assert (= (and (not x1741) x7022) x5922))
(assert (=> (>= 10000 x309) (= 0 (x530 x309))))
(assert (= x6948 (or x6360 x4995)))
(assert (x2673 x423))
(assert (not (x669 (x3305 64 x7584 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8713 100)))
(assert (= (or x4420 x8277) x1374))
(assert (x2673 x6471))
(assert (not (x669 (x3305 64 x4094 100))))
(assert (x4097 x8012 32))
(assert (> (x3305 64 x1110 100) 10000))
(assert (=> (<= x3679 10000) (= (x530 x3679) 0)))
(assert (x2673 x4065))
(assert (x8912 32 (ite (= 0 x1089) 1 0)))
(assert (x2673 x2369))
(assert (= (x3305 64 x7354 100) (x530 (x3305 64 x7354 100))))
(assert (= (x1802 (x3305 64 x8225 100)) 100))
(assert (x2673 x309))
(assert (< (x3305 64 x8946 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4513))
(assert (x4097 x4366 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8339 x8327))
(assert (= 100 (x1802 (x3305 64 x5913 100))))
(assert (x2673 x7501))
(assert (= (x4290 (x3305 64 x4248 100)) x4248))
(assert (= (=> (and (= (x7405 (+ x3664 x2715)) x5877) (= x8532 (x7405 (+ x2604 x2715))) (= x1071 (x7190 (- x5877 x1594))) (= (x6739 x7041) x1168) (= (< 0 x1168) x5101) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5673) x3664) (= (x7405 (+ x3492 32)) x3522) (= (x7405 (+ x5877 32)) x6644) (= x5673 (x7405 (+ x2604 31))) (= (x7405 (+ x7041 32)) x7687) (= x3492 (x7405 (+ x4137 32)))) (and (=> (not x5101) x7218) (=> (and (and (= (> x1168 32) x1268) (= (x4236 x7687) x4232)) x5101) (and (=> (not x1268) x7218) (=> (and (and (= x3862 (x7405 (+ x6644 32))) (= x8461 (> x1168 64)) (= x3554 (x7405 (+ 32 x7687))) (= x6322 (x7503 x3554))) x1268) (and (=> (and (and (= (< 96 x1168) x5553) (= (x7405 (+ 64 x7687)) x7131) (= (x7405 (+ 64 x6644)) x6257) (= x6765 (x4981 x7131))) x8461) (and (=> (not x5553) x7218) (=> x5553 x5330))) (=> (not x8461) x7218))))))) x6865))
(assert (x2673 x2161))
(assert (= (and x5720 (not x5541)) x1708))
(assert (= (or (and x8418 x6714) (and x444 x8979)) x7476))
(assert (x5050 x6814))
(assert (x2673 x5074))
(assert (not (x669 (x3305 64 x8644 100))))
(assert (x2673 x813))
(assert (x2673 x9054))
(assert (x2673 x6468))
(assert (x2673 x9002))
(assert (< 10000 (x3305 64 x2619 100)))
(assert (= 6 (x1802 (x3305 64 x8928 6))))
(assert (x2673 x6932))
(assert (x2673 x4847))
(assert (=> (<= x4867 10000) (= 0 (x530 x4867))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x9009 36)))
(assert (x7454 x7932))
(assert (x4744 x1215))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8731 100)))
(assert (x2673 x358))
(assert (< (x3305 64 x2847 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x5941 x4845) x7470))
(assert (> (x3305 64 x8322 100) 10000))
(assert (x4097 x2985 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x5518 100)))
(assert (= (and x3928 x6028) x3069))
(assert (x2673 x7226))
(assert (x8339 x7969))
(assert (= (x3305 64 x8032 100) (x530 (x3305 64 x8032 100))))
(assert (=> (<= x5575 10000) (= 0 (x530 x5575))))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x4290 (x3305 64 x8777 100)) x8777))
(assert (= (x1802 (x3305 64 x3076 36)) 36))
(assert (= (=> (and (= (x3498 x8208) x685) (= x8885 (not (< x1283 x6723))) (= (x7405 (+ x7085 32)) x1283)) (and (=> (= x1283 x1798) x4072) x8885)) x7540))
(assert (x2673 x6885))
(assert (= x439 (x4290 (x3305 64 x439 100))))
(assert (x2673 x3644))
(assert (not (x669 (x3305 64 x5390 100))))
(assert (x4744 x1195))
(assert (= x6264 (and x2620 (not x7343))))
(assert (= (and x2039 x5034) x7925))
(assert (x2673 x7265))
(assert (not (x669 (x3305 64 x2737 100))))
(assert (= (x530 (x3305 64 x6172 36)) (x3305 64 x6172 36)))
(assert (x669 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (= (x530 (x3305 64 x7152 100)) (x3305 64 x7152 100)))
(assert (x2673 x2881))
(assert (x2673 x2649))
(assert (x2673 x8064))
(assert (x8912 32 (ite (= x2028 0) 1 0)))
(assert (x2673 x6918))
(assert (x2673 x32))
(assert (x2673 x2973))
(assert (= x7949 (and x421 x3684)))
(assert (x2673 x2737))
(assert (= (and x6681 (not x3202)) x8304))
(assert (= (or (and x2849 x2741) (and x5061 x3429) (and x2203 x8678) (and x446 x7841) (and x895 x921) (and x3615 x8542)) x6951))
(assert (x9110 x3298))
(assert (x2673 x6856))
(assert (= (x4290 (x3305 64 x7193 100)) x7193))
(assert (> (x3305 64 x7378 36) 10000))
(assert (= 100 (x1802 (x3305 64 x760 100))))
(assert (x2673 x5327))
(assert (= x6369 (and (not x7730) x3103)))
(assert (< (x3305 64 x4662 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x6086))
(assert (= (x530 (x3305 64 x8849 36)) (x3305 64 x8849 36)))
(assert (x7454 x2739))
(assert (x2673 x7156))
(assert (x2673 x2280))
(assert (x2673 x6008))
(assert (x2673 x538))
(assert (= (x1802 (x3305 64 x4545 36)) 36))
(assert (= 64 (x967 (x3305 64 x1110 100))))
(assert (= (x967 (x3305 64 x830 36)) 64))
(assert (x2673 x8904))
(assert (= x3104 (x4290 (x3305 64 x3104 100))))
(assert (x2673 x8443))
(assert (x2673 x3945))
(assert (= (x967 (x3305 64 x4913 100)) 64))
(assert (x2673 x7172))
(assert (x7454 x313))
(assert (x2673 x5214))
(assert (x2673 x4348))
(assert (x4097 x2980 256))
(assert (x7454 x5353))
(assert (= x683 (x4290 (x3305 64 x683 6))))
(assert (x9110 x1827))
(assert (= (x967 (x3305 64 x3150 100)) 64))
(assert (not (x669 (x3305 64 x5750 100))))
(assert (x2673 x6339))
(assert (x2673 x2452))
(assert (= (x1802 (x3305 64 x5390 100)) 100))
(assert (x8339 x5444))
(assert (= 64 (x967 (x3305 64 x3548 36))))
(assert (x2673 x6521))
(assert (= x3915 (and x8592 x6516)))
(assert (x8502 (ite (= x587 0) 1 0)))
(assert (x2673 x5096))
(assert (= x6053 (x4290 (x3305 64 x6053 2))))
(assert (< (x3305 64 x2212 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4322))
(assert (x9110 x2117))
(assert (x8339 x3723))
(assert (x2673 x1026))
(assert (x2673 x217))
(assert (x4097 x5047 256))
(assert (= (x967 (x3305 64 x3459 100)) 64))
(assert (= x7303 (=> (and (= x7156 x2323) (= x4073 x1259) (= x4774 x1778) (= x4517 x2558)) x4686)))
(assert (x2673 x6833))
(assert (= x5033 (or x5344 x3616)))
(assert (x2673 x1168))
(assert (x669 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (x2673 x181))
(assert (x2673 x1023))
(assert (x7454 x7090))
(assert (x2673 x7211))
(assert (= (=> (= x2820 (= 0 x2175)) (and (=> (and x2820 (and (= false x6496) (= true x4214) (= x7801 x4543))) x8273) (=> (and (= x1916 x4956) (not x2820)) x1869))) x4118))
(assert (x4097 x3712 256))
(assert (x2673 x8321))
(assert (x2673 x8565))
(assert (x7454 x3761))
(assert (x9110 x3147))
(assert (x8339 x5483))
(assert (= (x3305 64 x4266 100) (x530 (x3305 64 x4266 100))))
(assert (= (and x940 x6374) x245))
(assert (x2673 x4838))
(assert (= (and x4530 x3976) x2100))
(assert (x2673 x7720))
(assert (= x7354 (x4290 (x3305 64 x7354 100))))
(assert (= x8148 (x4290 (x3305 64 x8148 6))))
(assert (x2673 x1849))
(assert (= (and (not x7170) x2013) x4318))
(assert (x2673 x8453))
(assert (= (x1802 (x3305 64 x6932 100)) 100))
(assert (x2673 x7583))
(assert (x4744 x847))
(assert (x7454 x2757))
(assert (< 10000 (x3305 64 x6099 100)))
(assert (x2673 x2030))
(assert (= (x3305 64 x5508 36) (x530 (x3305 64 x5508 36))))
(assert (x2673 x4895))
(assert (> (x3305 64 x683 2) 10000))
(assert (x2673 x6712))
(assert (x2673 x8897))
(assert (x2673 x1591))
(assert (x4744 x735))
(assert (not (x669 (x3305 64 x2098 100))))
(assert (= (=> (and (= x4876 (= x3787 0)) (or x4876 (not x4876))) x429) x3021))
(assert (= (and (not x6892) x632) x6472))
(assert (x2673 x6972))
(assert (x2673 x5716))
(assert (= (and x493 (not x4698)) x8426))
(assert (not (x669 (x3305 64 x2154 100))))
(assert (x7454 x3097))
(assert (x4097 x2692 32))
(assert (x8339 x2772))
(assert (x2673 x4772))
(assert (= x1024 (and (not x6198) x8449)))
(assert (x2673 x2460))
(assert (x2673 x3260))
(assert (= (x3305 64 x1000 100) (x530 (x3305 64 x1000 100))))
(assert (= (and (not x1732) x5630) x5693))
(assert (= (or x4192 x1500) x477))
(assert (not (x669 (x3305 64 x6210 100))))
(assert (= x4661 (x4290 (x3305 64 x4661 100))))
(assert (x2673 x5956))
(assert (x2673 x7561))
(assert (x2673 x6021))
(assert (x2673 x2607))
(assert (x2673 x8903))
(assert (x2673 x2844))
(assert (x2673 x8890))
(assert (x2673 x4702))
(assert (x2673 x2224))
(assert (= 100 (x1802 (x3305 64 x7571 100))))
(assert (= x6848 (x4290 (x3305 64 x6848 100))))
(assert (x2673 x7896))
(assert (= (x4290 (x3305 64 x8671 100)) x8671))
(assert (x2673 x3109))
(assert (x7454 x5554))
(assert (x4744 x3360))
(assert (= (or (and x935 x8251) (and x5162 x6764) (and x2805 x824)) x6047))
(assert (x8339 x8560))
(assert (x2673 x3347))
(assert (< (x3305 64 x4322 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3305 64 x2774 100) (x530 (x3305 64 x2774 100))))
(assert (= (x4290 (x3305 64 x6807 100)) x6807))
(assert (x2673 x5475))
(assert (x2673 x881))
(assert (x2673 x2354))
(assert (x2673 x5248))
(assert (x2673 x7675))
(assert (= (x3305 64 x8044 100) (x530 (x3305 64 x8044 100))))
(assert (x2673 x5331))
(assert (= (x3305 64 x6769 100) (x530 (x3305 64 x6769 100))))
(assert (= (x1802 (x3305 64 x7175 100)) 100))
(assert (= x2780 (or x4960 x1322)))
(assert (x8339 x1297))
(assert (x2673 x3094))
(assert (x2673 x5370))
(assert (x8339 x8742))
(assert (= 100 (x1802 (x3305 64 x2644 100))))
(assert (x4097 x320 256))
(assert (x2673 x6890))
(assert (= 64 (x967 (x3305 64 x2534 100))))
(assert (not (x669 (x3305 64 x2024 100))))
(assert (= (and x7061 x1213) x300))
(assert (x2673 x2121))
(assert (not (x669 (x3305 64 x5012 100))))
(assert (x2673 x8265))
(assert (x2673 x8886))
(assert (x4744 x4529))
(assert (=> (>= 10000 x1448) (= 0 (x530 x1448))))
(assert (x2673 x2076))
(assert (= x2298 (or x4814 x628)))
(assert (x2673 x2843))
(assert (=> (>= 10000 x6210) (= 0 (x530 x6210))))
(assert (x2673 x2996))
(assert (= (x3305 64 x8666 100) (x530 (x3305 64 x8666 100))))
(assert (x2673 x7664))
(assert (= (=> (and (= x4497 x6965) (= x7367 x5769) (= x4298 x6190) (= x5087 x3571) (= x3796 x4677) (= x4715 x5079) (= x4765 x2046) (= x4727 x482) (= x1825 x6071) (= x6121 x1977)) x2194) x8677))
(assert (= (x967 (x3305 64 x7586 100)) 64))
(assert (= (and x1048 (not x7939)) x1653))
(assert (x2673 x7714))
(assert (= (or x7364 x496) x8988))
(assert (x2673 x5577))
(assert (x2673 x914))
(assert (= (x530 (x3305 64 x3580 100)) (x3305 64 x3580 100)))
(assert (= (and x6194 x8500) x8940))
(assert (x2673 x118))
(assert (x4744 x4356))
(assert (x2673 x7756))
(assert (= (x530 (x3305 64 x6210 100)) (x3305 64 x6210 100)))
(assert (x5050 x3993))
(assert (> (x3305 64 x6131 100) 10000))
(assert (x2673 x1397))
(assert (= (=> (and (= true x1418) (= false x251)) x3445) x2932))
(assert (x2673 x7891))
(assert (> (x3305 64 x5907 100) 10000))
(assert (=> (<= x3278 10000) (= (x530 x3278) 0)))
(assert (= (and (not x3686) x5264) x156))
(assert (x2673 x4923))
(assert (= (=> (and (= x6254 (x7405 (+ 32 x3838))) (= (> x3245 0) x1392) (= (x4586 480) x3245) (= x3838 (x7405 (+ x5094 128))) (= (x7405 (+ 4 x1972)) x5094) (= (x7405 (+ 32 x5094)) x3338)) (and (=> (not x1392) x3944) (=> (and x1392 (and (= x3345 (< 32 x3245)) (= x5610 (x6608 512)))) (and (=> (not x3345) x3944) (=> (and x3345 (and (= (x7405 (+ 32 x6254)) x2410) (= (x7915 544) x7953) (= (< 64 x3245) x1157))) (and (=> (and x1157 (and (= x8504 (> x3245 96)) (= x6954 (x7405 (+ 64 x6254))) (= x7055 (x304 576)))) (and (=> (not x8504) x3944) (=> x8504 x6260))) (=> (not x1157) x3944))))))) x1727))
(assert (x2673 x4641))
(assert (x2673 x6382))
(assert (x2673 x3805))
(assert (x2673 x832))
(assert (< 10000 (x3305 64 x2976 100)))
(assert (= (=> (and (= (x7405 (+ x7743 32)) x2124) (= x4584 (x7405 (+ x1880 32))) (= (x2004 480) x1151) (= x7743 (x7405 (+ 4 x978))) (= x7448 (< 0 x1151)) (= (x7405 (+ x7743 128)) x1880)) (and (=> (not x7448) x8037) (=> (and (and (= x280 (x8459 512)) (= (> x1151 32) x775)) x7448) (and (=> (not x775) x8037) (=> (and x775 (and (= (x8595 544) x1180) (= (x7405 (+ 32 x4584)) x1605) (= (< 64 x1151) x1741))) (and (=> (not x1741) x8037) (=> (and x1741 (and (= (x7405 (+ x4584 64)) x1582) (= x5321 (< 96 x1151)) (= x2157 (x8386 576)))) (and (=> (not x5321) x8037) (=> x5321 x8402))))))))) x3847))
(assert (x4097 x6999 256))
(assert (= x2703 (=> (and (= x1670 (x78 x7410)) (= (x7405 (+ 32 x7894)) x5289) (= (not (> x33 x5289)) x5492)) (and (=> (= x5289 x2753) x5120) x5492))))
(assert (x2673 x405))
(assert (not (x669 (x3305 64 x4365 36))))
(assert (= (x967 (x3305 64 x8197 100)) 64))
(assert (not (x669 (x3305 64 x8666 100))))
(assert (x5050 x5401))
(assert (x8339 x435))
(assert (x8912 32 (ite (= 0 x6740) 1 0)))
(assert (x4097 x5731 256))
(assert (= (x4290 (x3305 64 x7586 100)) x7586))
(assert (not (x669 (x3305 64 x6206 100))))
(assert (x4744 x320))
(assert (x2673 x8174))
(assert (= (x967 (x3305 64 x683 2)) 64))
(assert (= 64 (x967 (x3305 64 x5575 100))))
(assert (x8502 32))
(assert (x2673 x760))
(assert (= (x967 (x3305 64 x324 36)) 64))
(assert (x2673 x4972))
(assert (= x5478 (=> (and (= (not (> x4152 128)) x8991) (= (x7405 (+ 96 x3565)) x181) (= x5485 (x7088 x181)) (= x2898 (x7405 (+ x4693 96)))) (and x8991 x3374))))
(assert (x2673 x2573))
(assert (= (and x2565 (not x6794)) x5457))
(assert (x7454 x8362))
(assert (x2673 x5712))
(assert (x2673 x5912))
(assert (= x7591 (and x4106 x546)))
(assert (x4744 x9085))
(assert (= (and x1758 (not x3559)) x4100))
(assert (= x562 (and (not x4932) x563)))
(assert (= (x530 3628442803) 0))
(assert (x7454 x8209))
(assert (= (=> (and (= (x7405 (+ 32 x5486)) x2303) (= x8904 (x7405 (+ x2303 32))) (= true x4520) (= false x7563) (= (x7190 (- x8904 x2643)) x9061) (= x1728 (x7405 (+ 4 x2643))) (= (x7405 (+ 32 x1728)) x5486)) x3445) x666))
(assert (x2673 x2796))
(assert (< 10000 (x3305 64 x346 100)))
(assert (x2673 x6271))
(assert (= (x4290 (x3305 64 x7113 100)) x7113))
(assert (x2673 x7847))
(assert (= (=> (and (= 0 x7801) (= false x8341) (= true x7028)) x8273) x4793))
(assert (= x7672 (and x5678 x3961)))
(assert (x2673 x5192))
(assert (= (x530 (x3305 64 x2400 100)) (x3305 64 x2400 100)))
(assert (x2673 x3142))
(assert (x2673 x2028))
(assert (= 64 (x967 (x3305 64 x6804 36))))
(assert (not (x669 (x3305 64 x4761 100))))
(assert (x2673 x4011))
(assert (= (and x4258 x5450) x3018))
(assert (= x2397 (and (not x1494) x8328)))
(assert (not (x669 (x3305 64 x981 100))))
(assert (x2673 x3389))
(assert (x2673 x6788))
(assert (x2673 x5422))
(assert (= x8060 (x4290 (x3305 64 x8060 6))))
(assert (x4097 x882 256))
(assert (x2673 x5154))
(assert (x2673 x6769))
(assert (x2673 x1171))
(assert (x2673 x3153))
(assert (= 64 (x967 (x3305 64 x7463 36))))
(assert (= (and (not x497) x1598) x5831))
(assert (= (x3305 64 x3026 100) (x530 (x3305 64 x3026 100))))
(assert (= x7640 (and x6626 x7109)))
(assert (= 0 (x530 13123866003235860548192500634644069355060014211693331341089165407210616913920)))
(assert (x4744 x1334))
(assert (x8502 (ite (= x8256 0) 1 0)))
(assert (x2673 x1487))
(assert (x2673 x5754))
(assert (=> (>= 10000 x3631) (= (x530 x3631) 0)))
(assert (x2673 x7336))
(assert (= (x3305 64 x8860 36) (x530 (x3305 64 x8860 36))))
(assert (x2673 x7410))
(assert (x2673 x6947))
(assert (= x8907 (=> (and (or (and x4558 (and (= x1774 x677) (= x677 (+ x3798 x5758)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x677) (<= 0 x677) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5758 x3798)) (= (x1365 x4894) x5758) (= (- x1316 x3798) x1980) (= (ite (= 0 x8147) x7676 0) x3798) (= x8147 x7728) (= (x7259 x7655) x1316) (= x6568 x1551))) (and (and (= x8147 x7728) (= x1551 x6568)) (not x4558))) (= x4558 (= 0 x8147))) x8887)))
(assert (= x3078 (and x6623 x1780)))
(assert (x2673 x1219))
(assert (= (or (and (not x3633) x237) x2398) x2134))
(assert (= (x530 (x3305 64 x7038 100)) (x3305 64 x7038 100)))
(assert (x2673 x7286))
(assert (x2673 x5982))
(assert (= x1262 (=> (and (= (not (> x6783 x6508)) x5224) (= x3891 (x6077 x2384)) (= (+ x3280 32) x6508)) (and (=> (= x6362 x6508) x6578) x5224))))
(assert (x2673 x939))
(assert (= (or x7011 x8978) x2246))
(assert (> (x3305 64 x2708 100) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7129 100)))
(assert (x2673 x3564))
(assert (x2673 x3417))
(assert (x2673 x3098))
(assert (x2673 x8632))
(assert (= (and (not x851) x2550) x8914))
(assert (= (x1802 (x3305 64 x5127 100)) 100))
(assert (x2673 x3960))
(assert (x2673 x6900))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1442 100)))
(assert (x2673 x2011))
(assert (x2673 x8365))
(assert (x4097 x2809 256))
(assert (x2673 x2188))
(assert (x2673 x6282))
(assert (x9110 x3416))
(assert (< (x3305 64 x1281 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7454 x3782))
(assert (< (x3305 64 x7796 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8127))
(assert (x4744 x4477))
(assert (= (x4290 (x3305 64 x2106 100)) x2106))
(assert (= (x530 (x3305 64 x6767 36)) (x3305 64 x6767 36)))
(assert (x2673 x1431))
(assert (= (or (and x372 x3751) (and x4687 x3576) (and x160 x5339) (and x8286 x3720) (and x4242 x5655)) x64))
(assert (not (x669 (x3305 64 x8713 100))))
(assert (x2673 x2147))
(assert (= (and (not x6480) x7374) x4316))
(assert (x2673 x7239))
(assert (x2673 x6457))
(assert (x2673 x2041))
(assert (= 64 (x967 (x3305 64 x7584 100))))
(assert (x2673 x166))
(assert (x2673 x125))
(assert (= 64 (x967 (x3305 64 x8713 100))))
(assert (= (x3305 64 x5750 100) (x530 (x3305 64 x5750 100))))
(assert (x2673 x5151))
(assert (= (=> (and (= (x7405 (+ 96 x2670)) x3971) (= x8010 (x3957 608)) (= (not (< 128 x2856)) x4203)) (and x4203 x1061)) x9018))
(assert (x2673 x2879))
(assert (= (x967 (x3305 64 x2161 100)) 64))
(assert (< 10000 (x3305 64 x4087 12)))
(assert (= (=> (= x1721 x1689) x8267) x5724))
(assert (x2673 x3777))
(assert (< (x3305 64 x2774 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 100 (x1802 (x3305 64 x7443 100))))
(assert (x4097 x4252 256))
(assert (= x5913 (x4290 (x3305 64 x5913 100))))
(assert (x4097 x2739 256))
(assert (x8339 x1141))
(assert (x2673 x2289))
(assert (= x2885 (and x424 (not x2653))))
(assert (= (and x7737 x4633) x1347))
(assert (= x8804 (and x7299 (not x1135))))
(assert (not (x669 (x3305 64 x1113 100))))
(assert (x2673 x6643))
(assert (= (x530 (x3305 64 x760 100)) (x3305 64 x760 100)))
(assert (x2673 x1326))
(assert (= x7196 (and (not x3010) x3450)))
(assert (= (and x4144 (not x5920)) x6902))
(assert (= (x530 (x3305 64 x2106 100)) (x3305 64 x2106 100)))
(assert (=> (>= 10000 x6806) (= 0 (x530 x6806))))
(assert (= (x967 (x3305 64 x606 100)) 64))
(assert (x8339 x8734))
(assert (x2673 x4415))
(assert (= (x3305 64 x4898 100) (x530 (x3305 64 x4898 100))))
(assert (=> (<= x4217 10000) (= (x530 x4217) 0)))
(assert (=> (>= 10000 x436) (= (x530 x436) 0)))
(assert (=> (<= x474 10000) (= (x530 x474) 0)))
(assert (=> (<= x8143 10000) (= (x530 x8143) 0)))
(assert (x9110 x6568))
(assert (x2673 x4580))
(assert (x2673 x3255))
(assert (x2673 x3434))
(assert (=> (>= 10000 x2212) (= (x530 x2212) 0)))
(assert (= (and x7527 x5457) x6983))
(assert (x2673 x3795))
(assert (= (x3305 64 x4761 100) (x530 (x3305 64 x4761 100))))
(assert (> (x3305 64 x5390 100) 10000))
(assert (= x2434 (and x850 x5648)))
(assert (= (x967 (x3305 64 x2986 36)) 64))
(assert (x2673 x2034))
(assert (x2673 x8998))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8928 2)))
(assert (= 100 (x1802 (x3305 64 x7403 100))))
(assert (x4744 x8839))
(assert (x2673 x6994))
(assert (not (x669 (x3305 64 x2389 100))))
(assert (= x8106 (and x3432 x8016)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7773 100)))
(assert (x4097 x1747 300))
(assert (x2673 x8448))
(assert (> (x3305 64 x6700 100) 10000))
(assert (= x8069 (and x2805 (not x824))))
(assert (= (=> (= x5112 x2105) x5830) x4975))
(assert (x2673 x5205))
(assert (x2673 x204))
(assert (x4744 x4837))
(assert (x2673 x7573))
(assert (= x2398 (and x237 x3633)))
(assert (= (x967 (x3305 64 x2090 12)) 64))
(assert (> (x3305 64 x2024 100) 10000))
(assert (x2673 x811))
(assert (= (x1802 (x3305 64 x8085 100)) 100))
(assert (= x7577 (=> (and (= false x2919) (= true x2832)) x3445)))
(assert (=> (<= x2389 10000) (= (x530 x2389) 0)))
(assert (=> (<= x5173 10000) (= 0 (x530 x5173))))
(assert (= (and x463 x7994) x1114))
(assert (= (x967 (x3305 64 x3679 36)) 64))
(assert (x2673 x6106))
(assert (= (x3305 64 x4299 100) (x530 (x3305 64 x4299 100))))
(assert (= 64 (x967 (x3305 64 x7140 100))))
(assert (=> (>= 10000 x1499) (= (x530 x1499) 0)))
(assert (x2673 x8432))
(assert (= x2601 (=> (and (= (x7132 x1186) x2999) (= (x7405 (+ x9007 96)) x1186) (= (x7405 (+ x6349 96)) x2279) (= x3535 (not (> x1661 128)))) (and x3535 x8668))))
(assert (x2673 x8917))
(assert (= (x530 (x3305 64 x3150 100)) (x3305 64 x3150 100)))
(assert (x2673 x5893))
(assert (x2673 x4592))
(assert (= 64 (x967 (x3305 64 x217 100))))
(assert (= (and (not x927) x6602) x8201))
(assert (x2673 x6488))
(assert (> (x3305 64 x1306 1) 10000))
(assert (= (x3305 64 x6693 100) (x530 (x3305 64 x6693 100))))
(assert (x2673 x434))
(assert (= x3619 (and x7541 (not x4126))))
(assert (x2673 x4754))
(assert (x2673 x4402))
(assert (x2673 x5568))
(assert (x2673 x7085))
(assert (= x7129 (x4290 (x3305 64 x7129 100))))
(assert (= x3409 (=> (= x7654 x4511) x6798)))
(assert (=> (<= x1406 10000) (= 0 (x530 x1406))))
(assert (x2673 x2754))
(assert (= (x530 (x3305 64 x2795 100)) (x3305 64 x2795 100)))
(assert (x4744 x7480))
(assert (x2673 x3950))
(assert (x2673 x7848))
(assert (x2673 x3676))
(assert (= x6408 (and x6840 (not x6215))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8489 100)))
(assert (x2673 x3072))
(assert (= x6542 (and (not x6790) x3753)))
(assert (x2673 x1193))
(assert (x4097 x2426 32))
(assert (x2673 x2557))
(assert (x2673 x7522))
(assert (x2673 x5359))
(assert (= (x4290 (x3305 64 x9105 100)) x9105))
(assert (= (x530 46442213778836376901753710468615024683576072693327014300388496345503314739200) 0))
(assert (x4097 x1255 256))
(assert (= 64 (x967 (x3305 64 x7290 100))))
(assert (= (x1802 (x3305 64 x1306 1)) 1))
(assert (> (x3305 64 x4533 12) 10000))
(assert (=> (>= 10000 x3214) (= (x530 x3214) 0)))
(assert (x2673 x723))
(assert (= (and x3675 (not x6350)) x2521))
(assert (x4744 x2819))
(assert (x2673 x8387))
(assert (= (x1802 (x3305 64 x4266 100)) 100))
(assert (x2673 x7194))
(assert (= 64 (x967 (x3305 64 x7718 36))))
(assert (x2673 x1503))
(assert (x8339 x4056))
(assert (x2673 x1315))
(assert (x2673 x2167))
(assert (= 100 (x1802 (x3305 64 x3150 100))))
(assert (=> (>= 10000 x4266) (= (x530 x4266) 0)))
(assert (=> (>= 10000 x7892) (= 0 (x530 x7892))))
(assert (x2673 x6718))
(assert (x2673 x4720))
(assert (= (and x7692 (not x6229)) x2203))
(assert (= x3944 (=> (and (= x344 (x7405 (+ x6254 x3245))) (= (x7405 (+ x3245 31)) x4164) (= x273 (x7405 (+ x2853 32))) (= x252 (x7405 (+ 32 x3338))) (= x2853 (x7405 (+ x6254 x3071))) (= (x7405 (+ 32 x252)) x2431) (= x5218 (x4224 x4646)) (= x8864 (x7190 (- x2853 x5094))) (= x3071 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4164)) (= (x7405 (+ 32 x4646)) x6492) (= (> x5218 0) x2261)) (and (=> (not x2261) x6857) (=> (and x2261 (and (= (x4658 x6492) x3077) (= (< 32 x5218) x2934))) (and (=> (and (and (= x854 (x3636 x1153)) (= x741 (x7405 (+ 32 x273))) (= x1153 (x7405 (+ x6492 32))) (= x1978 (> x5218 64))) x2934) (and (=> (not x1978) x6857) (=> (and (and (= (x7405 (+ 64 x6492)) x2948) (= x5034 (< 96 x5218)) (= x3743 (x7405 (+ x273 64))) (= (x8496 x2948) x8519)) x1978) (and (=> x5034 x1242) (=> (not x5034) x6857))))) (=> (not x2934) x6857)))))))
(assert (= (x967 (x3305 64 x8613 36)) 64))
(assert (x2673 x8717))
(assert (x8339 x735))
(assert (= (x1802 (x3305 64 x2774 100)) 100))
(assert (x2673 x427))
(assert (= (and x5038 x5299) x496))
(assert (x2673 x629))
(assert (x2673 x7995))
(assert (= (and (not x8286) x3720) x3747))
(assert (= 64 (x967 (x3305 64 x1051 100))))
(assert (x2673 x8107))
(assert (x2673 x6742))
(assert (x4097 x1273 256))
(assert (x2673 x8359))
(assert (x2673 x1393))
(assert (x8339 x3344))
(assert (= (x967 (x3305 64 x2098 100)) 64))
(assert (x9110 x6768))
(assert (> (x3305 64 x6210 100) 10000))
(assert (= x6604 (and x2813 (not x6137))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3729 100)))
(assert (> (x3305 64 x6172 36) 10000))
(assert (=> (<= x4662 10000) (= (x530 x4662) 0)))
(assert (x7454 x5347))
(assert (x2673 x8))
(assert (= 12 (x1802 (x3305 64 x5404 12))))
(assert (x2673 x8142))
(assert (> (x3305 64 x3548 36) 10000))
(assert (x2673 x6294))
(assert (=> (<= x5907 10000) (= 0 (x530 x5907))))
(assert (= 64 (x967 (x3305 64 x4661 100))))
(assert (x2673 x4032))
(assert (x2673 x4095))
(assert (x2673 x4678))
(assert (= 100 (x1802 (x3305 64 x3026 100))))
(assert (= x3194 (=> (and (= (x5187 x2706) x8302) (= x4008 (+ 32 x3153)) (= (not (> x7215 x4008)) x1739)) (and x1739 (=> (= x2371 x4008) x6134)))))
(assert (not (x669 (x3305 64 x8576 36))))
(assert (= x4453 (and (not x6248) x7869)))
(assert (= (and (not x935) x8251) x6931))
(assert (x4097 x3546 256))
(assert (= x5504 (and x848 x1696)))
(assert (not (x669 (x3305 64 x7129 100))))
(assert (x8502 (ite (= 0 x4547) 1 0)))
(assert (x2673 x6389))
(assert (x2673 x3355))
(assert (> (x3305 64 x7892 100) 10000))
(assert (x2673 x4955))
(assert (x4097 x3360 256))
(assert (= x4171 (x4290 (x3305 64 x4171 2))))
(assert (x2673 x6009))
(assert (x2673 x6234))
(assert (= (x3305 64 x7892 100) (x530 (x3305 64 x7892 100))))
(assert (= 100 (x1802 (x3305 64 x2032 100))))
(assert (= (x3305 64 x8613 36) (x530 (x3305 64 x8613 36))))
(assert (= x4973 (or x9021 x7925 x3531 x3083 x3033)))
(assert (= 36 (x1802 (x3305 64 x6804 36))))
(assert (x2673 x422))
(assert (x2673 x3796))
(assert (x2673 x6665))
(assert (x2673 x8322))
(assert (x8339 x4842))
(assert (x8339 x5792))
(assert (x2673 x4328))
(assert (x2673 x6152))
(assert (= (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7802 x1688)) (= (x2332 x4894) x635) (= x5523 (= x6784 (x8311 x8869))) (= x2669 x4419) (= x2259 (x7405 (+ x1025 x69))) (<= x2669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2088 (x484 x8869)) (= (x7405 (+ x1645 31)) x5703) (<= 1 x4892) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7802 x4490)) x5523 (= x798 (x7405 (+ x1645 x69))) (>= 1461501637330902918203684832716283019655932542975 x5093) (= x3936 x5093) (>= x2088 1) (= (x2332 x4894) x2137) (= x108 x8635) (>= x635 x7802) (= x1940 (<= x1226 (x8311 x4894))) (= x2606 (x7190 (- x2259 x4678))) (= (- x2137 x7802) x933) (= x4167 (+ 1 x2389)) (= x1226 (x8134 x4894)) (= x1861 x7224) (= x2669 (+ x4490 x7802)) x1940 (= (x2831 x8869) x4490) (= x1688 (x2332 x8869)) (>= x2669 0) (= x1025 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5703)) (= (x8134 x8869) x6784) (<= x8324 4294967295)) x2499) x2693))
(assert (= x3145 (and x5328 x6628)))
(assert (= (x4290 (x3305 64 x4488 36)) x4488))
(assert (x2673 x3494))
(assert (not (x669 (x3305 64 x7791 12))))
(assert (x2673 x1853))
(assert (x2673 x4533))
(assert (x8339 x5347))
(assert (x2673 x8608))
(assert (= (x3305 64 x132 100) (x530 (x3305 64 x132 100))))
(assert (> (x3305 64 x5152 100) 10000))
(assert (= x2597 (or x4318 x1321)))
(assert (x4744 x3716))
(assert (x4744 255))
(assert (= (and x3244 x6799) x7357))
(assert (x2673 x8846))
(assert (x2673 x448))
(assert (= (x4290 (x3305 64 x8576 36)) x8576))
(assert (= 64 (x967 (x3305 64 x6251 100))))
(assert (x8339 x2085))
(assert (not (x669 (x3305 64 x5907 100))))
(assert (not (x669 (x3305 64 x1272 36))))
(assert (= (=> (and (= x8368 (x7405 (+ 96 x4584))) (= x6384 (x3832 608)) (= x7255 (not (< 128 x1151)))) (and x8037 x7255)) x8402))
(assert (x2673 x4852))
(assert (= x1059 (=> (and (= x1497 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x818)) (= (x7405 (+ 31 x3354)) x818) (<= 1 x1497) (<= x3849 115792089237316195423570985008687907853269984665640564039457584007913129639903) (<= x3849 115792089237316195423570985008687907853269984665640564039457584007913129639903) (<= x3849 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x1497 x1972) (> x1497 x3849) (= x4646 x3849) (<= x1497 115792089237316195423570985008687907853269984665640564039457584007913129639904)) x1727)))
(assert (= (x967 (x3305 64 x4898 100)) 64))
(assert (x4097 x6619 300))
(assert (x2673 x5877))
(assert (= (x530 (x3305 64 x1650 100)) (x3305 64 x1650 100)))
(assert (= x5721 (x4290 (x3305 64 x5721 100))))
(assert (= (x967 (x3305 64 x68 36)) 64))
(assert (= x6251 (x4290 (x3305 64 x6251 100))))
(assert (x2673 x1738))
(assert (not (x669 (x3305 64 x3499 100))))
(assert (x2673 x4945))
(assert (x2673 x4886))
(assert (x7454 x4067))
(assert (x2673 x660))
(assert (x2673 x6373))
(assert (x2673 x6818))
(assert (= x5830 (=> (= x1916 x2105) x1869)))
(assert (x2673 x8431))
(assert (x2673 x2328))
(assert (x4097 x5710 32))
(assert (x8339 x2564))
(assert (= (x530 (x3305 64 x7281 100)) (x3305 64 x7281 100)))
(assert (x4744 x7371))
(assert (x2673 x3197))
(assert (x2673 x6990))
(assert (= (x3305 64 x881 100) (x530 (x3305 64 x881 100))))
(assert (x4744 x4748))
(assert (=> (>= 10000 x7822) (= (x530 x7822) 0)))
(assert (= x745 (=> (and (= x901 false) (= x3127 true)) x3445)))
(assert (x2673 x3947))
(assert (x4744 x7538))
(assert (x2673 x9034))
(assert (x4097 x4540 256))
(assert (= 64 (x967 (x3305 64 x5331 36))))
(assert (x2673 x6784))
(assert (x2673 x3380))
(assert (x2673 x2020))
(assert (x2673 x6029))
(assert (= 100 (x1802 (x3305 64 x1807 100))))
(assert (x2673 x3414))
(assert (x2673 x474))
(assert (x2673 x7860))
(assert (= 100 (x1802 (x3305 64 x5152 100))))
(assert (not (x669 (x3305 64 x448 100))))
(assert (x2673 x1103))
(assert (= 64 (x967 (x3305 64 x2749 100))))
(assert (=> (<= x6700 10000) (= 0 (x530 x6700))))
(assert (x4097 x1364 256))
(assert (x2673 x503))
(assert (= 100 (x1802 (x3305 64 x4107 100))))
(assert (x7454 x2136))
(assert (x2673 x8080))
(assert (x8339 x5690))
(assert (x2673 x2809))
(assert (not x8941))
(assert (= x1813 (and x8201 x7046)))
(assert (x2673 x1848))
(assert (x2673 x7890))
(assert (x2673 x3340))
(assert (= (and x7763 (not x2031)) x3482))
(assert (< 10000 (x3305 64 x6237 100)))
(assert (x2673 x7041))
(assert (x2673 x6531))
(assert (x7454 x6298))
(assert (= (or x4270 x1903) x848))
(assert (x8339 x2116))
(assert (= 36 (x1802 (x3305 64 x5440 36))))
(assert (=> (>= 10000 x3960) (= (x530 x3960) 0)))
(assert (x2673 x1881))
(assert (x2673 x4058))
(assert (x2673 x3040))
(assert (x2673 x90))
(assert (= x75 (and (not x1174) x3760)))
(assert (= x7050 (and x1867 (not x2139))))
(assert (x2673 x2416))
(assert (x4744 x8209))
(assert (= 100 (x1802 (x3305 64 x1000 100))))
(assert (=> (<= x683 10000) (= (x530 x683) 0)))
(assert (x4744 x5401))
(assert (not (x669 (x3305 64 x2354 100))))
(assert (x2673 x1880))
(assert (= (and x4447 (not x4576)) x7519))
(assert (x8339 x7447))
(assert (x4097 x758 300))
(assert (< 10000 (x3305 64 x2389 100)))
(assert (< (x3305 64 x8576 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x6102))
(assert (= (and x6198 x8449) x3774))
(assert (x2673 x2366))
(assert (x2673 x6109))
(assert (= x7218 (=> (and (= x5866 (x484 x7655)) (= x4200 (x7405 (+ x1168 x6644))) (= x2890 (x7190 (- x1863 x8233))) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x972) x6431) (= (x7405 (+ x1168 31)) x972) (= x1863 (x7405 (+ x6431 x6644))) (= (= x5866 0) x4730)) (and (=> (and x4730 (and (= true x6627) (= 0 x7801) (= false x5395))) x8273) (=> (and (and (= (x622 x4894) x4199) (= x851 (and x6991 x345)) (= (x622 x7655) x4651) (= x345 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4651 x7676))) (= x6991 (>= x4199 x7676))) (not x4730)) (and (=> (and (not x851) (and (= x6568 0) (= x7728 0))) x8887) (=> (and (and (and (< (+ x7676 x234) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4553 (- x1871 x7676)) (= x5236 (+ x7676 x234)) (= x234 (x987 x7655)) (= x1666 x5236) (<= x5236 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5236 0) (= (> x8147 0) x7859) (= (x622 x4894) x1871)) (or (and (and (= x6533 (x6530 x4894)) (= x6385 (= (x6351 x7655) x8159)) (= (<= x6533 (x6351 x4894)) x1188) x6385 (>= 4294967295 x1551) x1188 (= x8159 (x6530 x7655))) x7859) (not x7859))) x851) x8907)))))))
(assert (x2673 x8951))
(assert (x2673 x6101))
(assert (= (x967 (x3305 64 x8644 100)) 64))
(assert (x2673 x1051))
(assert (< 10000 (x3305 64 x2858 100)))
(assert (x4097 x3437 256))
(assert (x2673 x1977))
(assert (< (x3305 64 x6206 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x2708 100))))
(assert (x2673 x603))
(assert (= (x3305 64 x7773 100) (x530 (x3305 64 x7773 100))))
(assert (> (x3305 64 x271 100) 10000))
(assert (x2673 x7267))
(assert (x2673 x2393))
(assert (> (x3305 64 x7581 36) 10000))
(assert (x2673 x168))
(assert (= x2812 (or x3387 x224)))
(assert (x2673 x1433))
(assert (x2673 x6785))
(assert (< (x3305 64 x1306 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4454))
(assert (x2673 x8297))
(assert (not (x669 (x3305 64 x1499 100))))
(assert (x4097 x6040 256))
(assert (x2673 x8716))
(assert (= (x4290 (x3305 64 x2538 100)) x2538))
(assert (x2673 x4308))
(assert (> (x3305 64 x2644 100) 10000))
(assert (< (x3305 64 x7877 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4200))
(assert (x2673 x9048))
(assert (x2673 x1778))
(assert (< 10000 (x3305 64 x8613 36)))
(assert (= (x3305 64 x2389 100) (x530 (x3305 64 x2389 100))))
(assert (x4097 x2116 300))
(assert (= (x3305 64 x6848 100) (x530 (x3305 64 x6848 100))))
(assert (= (and (not x4833) x1933) x3308))
(assert (x2673 x8192))
(assert (x8339 x922))
(assert (x4744 x8340))
(assert (x2673 x1442))
(assert (x2673 x7526))
(assert (x2673 x7659))
(assert (= (and x4440 x1347) x4269))
(assert (= x9021 (and x1301 (not x1978))))
(assert (= x6857 (=> (and (= (x7405 (+ x273 x5218)) x2830) (= (= 0 x4962) x2826) (= (x7405 (+ x4682 x273)) x3058) (= x950 (x7190 (- x3058 x1972))) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4056) x4682) (= x4962 (x484 x7655)) (= x4056 (x7405 (+ 31 x5218)))) (and (=> (and x2826 (and (= x3074 false) (= x7801 0) (= true x1006))) x8273) (=> (and (and (= (> x7408 0) x8011) (or (and x8011 (and (= x5422 (x622 x4894)) x1705 (<= x5327 4294967295) (= x2844 (x622 x7655)) x4873 (= x4873 (<= x5422 (x4040 x4894))) (= x1705 (= (x4040 x7655) x2844)))) (not x8011))) (not x2826)) x8144)))))
(assert (= x2708 (x4290 (x3305 64 x2708 100))))
(assert (x2673 x8085))
(assert (=> (<= x755 10000) (= (x530 x755) 0)))
(assert (x4744 x8189))
(assert (not (x669 (x3305 64 x6932 100))))
(assert (x2673 x394))
(assert (= x2206 (and (not x1552) x7050)))
(assert (=> (>= 10000 x5269) (= (x530 x5269) 0)))
(assert (= (x530 (x3305 64 x6730 100)) (x3305 64 x6730 100)))
(assert (x2673 x1179))
(assert (x2673 x3436))
(assert (x4744 x972))
(assert (= x5028 (=> (and (= true x8789) (= x8881 false)) x3445)))
(assert (x4097 x7805 256))
(assert (= (x4290 (x3305 64 x4533 12)) x4533))
(assert (x2673 x8346))
(assert (x2673 x541))
(assert (x4744 x4965))
(assert (x2673 x3903))
(assert (x8339 x3989))
(assert (= (and x5182 (not x4649)) x2779))
(assert (= x5404 (x4290 (x3305 64 x5404 12))))
(assert (x2673 x2340))
(assert (= (and x5 (not x8076)) x8332))
(assert (x8339 x7383))
(assert (= x8872 (and (not x4404) x7711)))
(assert (x2673 x5166))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3088 2)))
(assert (x7454 x2593))
(assert (x9110 x2605))
(assert (= (and x2995 x4393) x3035))
(assert (x2673 x4102))
(assert (x2673 x2463))
(assert (x2673 x2116))
(assert (x2673 x1647))
(assert (x4744 x5714))
(assert (= (and x7785 (not x5552)) x3615))
(assert (x2673 x7959))
(assert (x4097 x6048 256))
(assert (=> (>= 10000 x2090) (= (x530 x2090) 0)))
(assert (= (or x4942 x3474) x2742))
(assert (x2673 x4091))
(assert (not (x669 (x3305 64 x8197 100))))
(assert (x8339 x7322))
(assert (= x4270 (and x5100 x4489)))
(assert (x2673 x786))
(assert (x4744 x434))
(assert (x2673 x7967))
(assert (= x4775 x1012))
(assert (= (or x226 x325) x4003))
(assert (= x7796 (x4290 (x3305 64 x7796 100))))
(assert (=> (<= x1000 10000) (= 0 (x530 x1000))))
(assert (not (x669 (x3305 64 x1306 1))))
(assert (x2673 x8212))
(assert (= x3789 (x4290 (x3305 64 x3789 100))))
(assert (x2673 x5220))
(assert (x2673 x1791))
(assert (x2673 x6162))
(assert (x8502 (ite (= x6116 0) 1 0)))
(assert (x2673 x9005))
(assert (< 10000 (x3305 64 x7673 100)))
(assert (= (and x9037 x8033) x197))
(assert (= 64 (x967 (x3305 64 x162 100))))
(assert (not (x669 (x3305 64 x6769 100))))
(assert (=> (>= 10000 x3954) (= (x530 x3954) 0)))
(assert (x2673 x3150))
(assert (x2673 x6276))
(assert (x2673 x2628))
(assert (x4097 x3020 300))
(assert (< 10000 (x3305 64 x5488 100)))
(assert (x2673 x7018))
(assert (= (or x8900 x4159) x6238))
(assert (x2673 x4442))
(assert (< 10000 (x3305 64 x309 12)))
(assert (x8339 x8516))
(assert (= x3748 (x4290 (x3305 64 x3748 100))))
(assert (x2673 x4115))
(assert (x9110 x6536))
(assert (= x7773 (x4290 (x3305 64 x7773 100))))
(assert (x8339 x2063))
(assert (= x7332 (and x4207 (not x6213))))
(assert (x2673 x2169))
(assert (= (x4290 (x3305 64 x8591 100)) x8591))
(assert (x4097 x6063 256))
(assert (= x3961 (or x6743 x3915 x3893 x9115 x5417)))
(assert (x2673 x6664))
(assert (= (and x7008 (not x1424)) x1772))
(assert (x2673 x2046))
(assert (= (x530 (x3305 64 x4216 100)) (x3305 64 x4216 100)))
(assert (x2673 x8150))
(assert (= (x4290 (x3305 64 x8928 6)) x8928))
(assert (= 100 (x1802 (x3305 64 x1256 100))))
(assert (x2673 x4121))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7152 100)))
(assert (x2673 x7486))
(assert (= x5382 (or x2597 x8301)))
(assert (x2673 x4515))
(assert (x2673 x8403))
(assert (not (x669 (x3305 64 x5721 100))))
(assert (x2673 x2563))
(assert (= x1544 (=> (and (= x1910 (x5556 480)) (= (> x1910 0) x7289) (= (x7405 (+ x322 32)) x7914) (= (x7405 (+ x8065 128)) x322) (= (x7405 (+ 32 x8065)) x1844) (= (x7405 (+ x6337 4)) x8065)) (and (=> (not x7289) x4726) (=> (and (and (= (x2702 512) x5234) (= x7164 (< 32 x1910))) x7289) (and (=> (not x7164) x4726) (=> (and x7164 (and (= (> x1910 64) x3988) (= x8898 (x26 544)) (= (x7405 (+ 32 x7914)) x8045))) (and (=> (and (and (= x8592 (< 96 x1910)) (= x1219 (x7405 (+ x7914 64))) (= x53 (x3779 576))) x3988) (and (=> (not x8592) x4726) (=> x8592 x270))) (=> (not x3988) x4726)))))))))
(assert (=> (>= 10000 x4533) (= (x530 x4533) 0)))
(assert (=> (<= x1807 10000) (= 0 (x530 x1807))))
(assert (= (x3305 64 x9048 100) (x530 (x3305 64 x9048 100))))
(assert (x2673 x7141))
(assert (x4097 x5800 300))
(assert (x2673 x7736))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8700 0)))
(assert (x4744 x6471))
(assert (= (=> (and (= x6368 x4710) (= false x8535) (= x73 false) (= true x2731) (= true x4710)) x5994) x1012))
(assert (x2673 x3379))
(assert (= x7639 (and x5144 x8863)))
(assert (= (x4290 (x3305 64 x8537 100)) x8537))
(assert (x2673 x2240))
(assert (= x4313 (=> (and (= x19 true) (= x3075 false)) x3445)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6769 100)))
(assert (not (x669 (x3305 64 x3724 36))))
(assert (= (and (not x5734) x5233) x3219))
(assert (x7454 x5964))
(assert (= (x530 (x3305 64 x7791 12)) (x3305 64 x7791 12)))
(assert (x4744 x5448))
(assert (x2673 x4421))
(assert (< 10000 (x3305 64 x8238 100)))
(assert (< 10000 (x3305 64 x3956 100)))
(assert (=> (>= 10000 x7581) (= 0 (x530 x7581))))
(assert (x2673 x2400))
(assert (x4744 x8966))
(assert (x2673 x3850))
(assert (=> (<= x7140 10000) (= 0 (x530 x7140))))
(assert (x669 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4248 100)))
(assert (not (x669 (x3305 64 x7806 100))))
(assert (= x3133 (and x4139 (not x2025))))
(assert (x2673 x2110))
(assert (x2673 x1616))
(assert (x4097 x2426 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x778))
(assert (x2673 x9084))
(assert (x2673 x3023))
(assert (x2673 x4868))
(assert (x2673 x3558))
(assert (= 100 (x1802 (x3305 64 x918 100))))
(assert (= (x530 (x3305 64 x5173 100)) (x3305 64 x5173 100)))
(assert (= (and x8504 x6959) x3051))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1650 100)))
(assert (not (x669 (x3305 64 x5550 100))))
(assert (= (or x904 x8858) x2947))
(assert (x2673 x4545))
(assert (x2673 x1785))
(assert (x2673 x1747))
(assert (not (x669 (x3305 64 x2106 100))))
(assert (= x2543 (and x788 (not x8023))))
(assert (= (x530 (x3305 64 x448 100)) (x3305 64 x448 100)))
(assert (x9110 x200))
(assert (= (and x7949 x6223) x1559))
(assert (not (x669 (x3305 64 x2356 100))))
(assert (= (x4290 (x3305 64 x8099 100)) x8099))
(assert (= (or x1125 x208) x7758))
(assert (= (x4290 (x3305 64 x5550 100)) x5550))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1807 100)))
(assert (= (x967 (x3305 64 x4241 12)) 64))
(assert (x2673 x7633))
(assert (= (x530 (x3305 64 x3066 100)) (x3305 64 x3066 100)))
(assert (x2673 x2071))
(assert (= 64 (x967 (x3305 64 x3932 100))))
(assert (= 100 (x1802 (x3305 64 x1084 100))))
(assert (x4744 x4484))
(assert (x2673 x5548))
(assert (x2673 x2144))
(assert (x2673 x3085))
(assert (x4097 x8012 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x6767 36))))
(assert (x2673 x900))
(assert (= (and x8076 x5) x3505))
(assert (= (and (not x5277) x3308) x153))
(assert (x2673 x5827))
(assert (x2673 x7791))
(assert (x2673 x2898))
(assert (= (and x7741 x2107) x8871))
(assert (x4097 x2628 32))
(assert (< 10000 (x3305 64 x8946 100)))
(assert (x4744 x2739))
(assert (= x4867 (x4290 (x3305 64 x4867 100))))
(assert (= (x530 (x3305 64 x6237 100)) (x3305 64 x6237 100)))
(assert (x2673 x6845))
(assert (= x7184 (x4290 (x3305 64 x7184 36))))
(assert (= 64 (x967 (x3305 64 x448 100))))
(assert (x2673 x8833))
(assert (x2673 x7499))
(assert (x2673 x1030))
(assert (< (x3305 64 x4241 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x4552))
(assert (= x1534 (=> (and (< x4153 x2797) (= (x3305 64 x668 100) x4924) (= (+ 1 x7140) x8472) (= x3843 (= 0 x2628)) (= (x7405 (+ 32 x3301)) x4577) (not (> x2628 x1276)) (= (x7405 (+ x4567 32)) x7935) (= (+ 1 x2051) x918) (not (= x4153 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= x2051 (+ x5718 1)) (= x7618 (x3305 64 x5718 100)) (= x8523 (x7941 x6872)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x4153)) (>= 243 x2090) (= (+ 1 x8731) x3455) (= x5440 (+ x2090 1)) (= x1332 (+ x8946 1)) (not (= x4153 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x3305 64 x8946 100) x6796) (= (x7405 (+ x5315 32)) x6432) (= (+ x1807 1) x627) (not (< x7456 x2628)) (= x2628 (x4588 x336 300)) (= x7776 (x3305 64 x4868 100)) (= x8946 (+ 1 x4868)) (not (< x1276 x2628)) (= x7469 (x7941 x7776)) (= x267 (x7941 x6649)) (= x3301 (x7405 (+ 32 x5284))) (= (x3011 x1250) x8309) (= x9062 (x7941 x5928)) (= (+ x7140 1) x1807) (= x3494 (x7405 (+ x4153 32))) (= x2671 (+ x918 1)) (= x6872 (x3305 64 x918 100)) (= x1607 (x7405 (+ 32 x6432))) (= x5718 (+ x5440 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4153) (= x6319 (+ 1 x918)) (= x8731 (+ 1 x668)) (= x7456 (x6553 x4153)) (= x151 (x7941 x4924)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4153) (= (x7941 x4457) x3898) (= x913 (+ 1 x5718)) (= x668 (+ x6319 1)) (= x5046 (x7941 x3173)) (= (x3305 64 x5440 36) x85) (= x1250 (x3305 64 x2090 12)) (= (+ x5440 1) x7368) (= (+ 1 x8946) x1111) (= (x3305 64 x1807 100) x6649) (= (+ x2051 1) x2220) (= 480 x3882) (= x7140 (+ 1 x8731)) (<= x8309 18446744073709551615) (= x5284 (x7405 (+ 32 x178))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4153) (= (+ x4868 1) x328) (= x7889 (x7190 (- x6826 32))) (= x5057 (x7941 x1453)) (= (+ x6319 1) x8647) (= x4868 (+ 1 x1807)) (<= 13 x2090) (= (x7941 x7618) x7888) (= (x7941 x6796) x5124) (= x336 (x8042 x85)) (= (+ 1 x668) x6359) (= x1453 (x3305 64 x7140 100)) (= (x3305 64 x2051 100) x4457) (= (x7405 (+ 32 x4577)) x5315) (= (x7405 (+ 32 x7935)) x2797) (= x4567 (x7405 (+ 32 x1607))) (= (x3305 64 x6319 100) x5928) (= (x7405 (+ x3494 32)) x178) (= x1276 (+ x2628 31)) (= x3173 (x3305 64 x8731 100)) (= (x7190 (- x2797 x4153)) x6826) (= (+ 1 x2090) x1376) (= x5819 0) (= x4887 480)) (and (=> (and (not x3843) (and (= (x7405 (+ x1292 x1225)) x1173) (= (x5917 31 x2628) x587) (= x1225 (* 32 (ite (= x587 0) 1 0))) (= (* 32 (ite (= x587 0) 1 0)) x1234) (or (= x1234 0) (= 32 x1234)) (= (x7405 (+ x587 x2797)) x3263) (= (x7405 (+ x4153 x587)) x1292) (or (= 0 x1225) (= x1225 32)) (= (> x897 x1107) x5318) (= x1107 (x7405 (+ x3263 x1234))) (= (x7405 (+ x1107 x2628)) x897))) (and (=> (and (not x5318) (= x1107 x8598)) x6181) (=> x5318 x2304))) (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2797)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2797)) (<= x2797 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x4670 x5576) (= (x7405 (+ 32 x2797)) x5576) (= x2797 x8275) (< x2797 x5576) (<= x2797 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x2797 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x2797 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x3843) x5098)))))
(assert (= (x967 (x3305 64 x6131 100)) 64))
(assert (= (and x4062 x5641) x7125))
(assert (= x5120 (=> (and (<= x9060 115792089237316195423570985008687907853269984665640564039457584007913129639903) (<= x9060 115792089237316195423570985008687907853269984665640564039457584007913129639903) (< x9060 x982) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x982) (= x4229 x9060) (= x3481 x982) (= x2554 (x7405 (+ 31 x2753))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x9060) (>= x982 1) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2554) x982)) x3205)))
(assert (x4744 x4252))
(assert (x2673 x3029))
(assert (x2673 x7924))
(assert (= (x967 (x3305 64 x7113 100)) 64))
(assert (x2673 x559))
(assert (x2673 x5687))
(assert (x2673 x7291))
(assert (= (x1802 (x3305 64 x9096 11)) 11))
(assert (x2673 x3279))
(assert (x2673 x500))
(assert (= (x530 (x3305 64 x8148 6)) (x3305 64 x8148 6)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3548 36)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6806 100)))
(assert (x2673 x257))
(assert (= (=> (and (<= x3049 115792089237316195423570985008687907853269984665640564039457584007913129639904) (>= x3049 1) (<= x2797 115792089237316195423570985008687907853269984665640564039457584007913129639903) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x2797) (> x3049 x2797) (= x3140 (x7405 (+ x8598 31))) (= x3049 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3140)) (<= x2797 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x2797 x8275) (= x3049 x4670)) x5098) x6181))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4044 100)))
(assert (x2673 x6023))
(assert (x2673 x6257))
(assert (x2673 x1588))
(assert (x2673 x3734))
(assert (not (x669 (x3305 64 x5152 100))))
(assert (x2673 x9015))
(assert (= x8058 (and x860 (not x7313))))
(assert (= (x967 (x3305 64 x2652 100)) 64))
(assert (< (x3305 64 x448 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7868))
(assert (x2673 x5197))
(assert (x2673 x5578))
(assert (x2673 x3213))
(assert (x2673 x6727))
(assert (not (x669 (x3305 64 x2538 100))))
(assert (x7454 x2438))
(assert (= (x4290 (x3305 64 x8946 100)) x8946))
(assert (x8339 x882))
(assert (x2673 x2073))
(assert (x2673 x7051))
(assert (= 100 (x1802 (x3305 64 x271 100))))
(assert (x2673 x7777))
(assert (= x628 (and x8005 (not x4578))))
(assert (= (x3305 64 x5294 36) (x530 (x3305 64 x5294 36))))
(assert (= (x1802 (x3305 64 x3954 2)) 2))
(assert (= 100 (x1802 (x3305 64 x7892 100))))
(assert (x2673 x68))
(assert (= x4322 (x4290 (x3305 64 x4322 36))))
(assert (= x4471 (and x2248 x4070)))
(assert (x2673 x7655))
(assert (= 64 (x967 (x3305 64 x3059 100))))
(assert (= 64 (x967 (x3305 64 x3724 36))))
(assert (= (x967 (x3305 64 x7038 100)) 64))
(assert (x2673 x242))
(assert (x2673 x1692))
(assert (x8339 x1783))
(assert (= (x4290 (x3305 64 x6667 100)) x6667))
(assert (not (x669 (x3305 64 x8032 100))))
(assert (x2673 x8860))
(assert (= x8676 (and (not x3451) x3948)))
(assert (x2673 x2068))
(assert (= (and (not x6528) x391) x6812))
(assert (x2673 x8705))
(assert (x4097 x4056 32))
(assert (x2673 x4294))
(assert (< 10000 (x3305 64 x1807 100)))
(assert (= 64 (x967 (x3305 64 x881 100))))
(assert (x2673 x7648))
(assert (not (x669 (x3305 64 x4662 100))))
(assert (x2673 x3367))
(assert (= 100 (x1802 (x3305 64 x813 100))))
(assert (x2673 x3113))
(assert (x2673 x4855))
(assert (= 36 (x1802 (x3305 64 x5508 36))))
(assert (x2673 x3360))
(assert (= (x967 (x3305 64 x683 36)) 64))
(assert (x4097 x3723 256))
(assert (x2673 x6519))
(assert (x2673 x6096))
(assert (= (x967 (x3305 64 x4868 100)) 64))
(assert (x8339 x6048))
(assert (x2673 x1857))
(assert (x2673 x792))
(assert (x2673 x4561))
(assert (x8339 x5681))
(assert (= (=> (and (= x2201 (+ x1525 32)) (= x3846 (x4492 x8973)) (= (not (> x418 x2201)) x5818)) (and (=> (= x2201 x6021) x5022) x5818)) x3557))
(assert (x2673 x2874))
(assert (= (x967 (x3305 64 x8352 6)) 64))
(assert (= (or (and x1095 x7778) (and x7763 x2031) (and x7827 x4202) (and x774 x9043)) x7530))
(assert (= (x4290 (x3305 64 x6457 100)) x6457))
(assert (x2673 x5463))
(assert (x2673 x4490))
(assert (x7454 x1822))
(assert (x2673 x8189))
(assert (= x5335 (x4290 (x3305 64 x5335 100))))
(assert (x8339 x5703))
(assert (x2673 x4376))
(assert (x2673 x5913))
(assert (= (x4290 (x3305 64 x3956 100)) x3956))
(assert (= 64 (x967 (x3305 64 x1953 100))))
(assert (x2673 x6590))
(assert (not (x669 (x3305 64 x7152 100))))
(assert (= (=> (and (= (x338 x4229) x1115) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4484) x7359) (= (x7405 (+ 32 x5528)) x8013) (= (x7405 (+ x2670 x7359)) x4406) (= x3166 (< 0 x1115)) (= x887 (x7405 (+ 32 x8013))) (= x2030 (x7405 (+ x4406 32))) (= x2187 (x7405 (+ 32 x4229))) (= x5784 (x7405 (+ x2670 x2856))) (= x878 (x7190 (- x4406 x70))) (= x4484 (x7405 (+ x2856 31)))) (and (=> (not x3166) x863) (=> (and (and (= x3754 (x8625 x2187)) (= x2966 (< 32 x1115))) x3166) (and (=> (not x2966) x863) (=> (and x2966 (and (= x2198 (x7405 (+ 32 x2030))) (= (x3381 x2369) x2180) (= x5874 (> x1115 64)) (= (x7405 (+ 32 x2187)) x2369))) (and (=> (not x5874) x863) (=> (and (and (= (x3105 x8987) x6484) (= x465 (> x1115 96)) (= (x7405 (+ 64 x2030)) x2409) (= x8987 (x7405 (+ 64 x2187)))) x5874) (and (=> x465 x5729) (=> (not x465) x863))))))))) x1061))
(assert (x2673 x3416))
(assert (= (x3305 64 x8143 100) (x530 (x3305 64 x8143 100))))
(assert (x2673 x8649))
(assert (= (=> (and (= 36 x7801) (= x1946 false) (= true x8658)) x8273) x812))
(assert (= (and (not x9026) x3641) x8035))
(assert (= (x967 (x3305 64 x8849 36)) 64))
(assert (= (and x4412 (not x2983)) x3429))
(assert (=> (<= x8085 10000) (= (x530 x8085) 0)))
(assert (x8339 x4874))
(assert (x4097 x1215 32))
(assert (= (x4290 (x3305 64 x8352 6)) x8352))
(assert (x2673 x6808))
(assert (x2673 x5557))
(assert (x2673 x4819))
(assert (=> (<= x8075 10000) (= (x530 x8075) 0)))
(assert (x4097 x1837 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x8345))
(assert (= 64 (x967 (x3305 64 x1650 100))))
(assert (x4744 x3962))
(assert (< 10000 (x3305 64 x8537 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4898 100)))
(assert (= (and x2311 x8686) x1685))
(assert (= x979 (and x1584 (not x5040))))
(assert (x2673 x722))
(assert (x2673 x4682))
(assert (x2673 x4435))
(assert (x2673 x4768))
(assert (x2673 x3513))
(assert (not (x669 (x3305 64 x3729 100))))
(assert (not (x669 (x3305 64 x2858 100))))
(assert (> (x3305 64 x918 100) 10000))
(assert (x4744 x5912))
(assert (x2673 x143))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x4216 100)))
(assert (= (x4290 (x3305 64 x6730 100)) x6730))
(assert (x2673 x6895))
(assert (x2673 x9099))
(assert (= 64 (x967 (x3305 64 x9009 36))))
(assert (x2673 x5055))
(assert (x2673 x7927))
(assert (x8912 32 (ite (= x7334 0) 1 0)))
(assert (= (and (not x3510) x3543) x4507))
(assert (x4097 x8055 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x1350) x7640) x8424))
(assert (= (x1802 (x3305 64 x2133 100)) 100))
(assert (x2673 x5269))
(assert (= 64 (x967 (x3305 64 x6667 100))))
(assert (= (and x4780 (not x3132)) x8133))
(assert (= 64 (x967 (x3305 64 x7175 100))))
(assert (= x1395 (and (not x3509) x241)))
(assert (x8339 x3659))
(assert (=> (<= x8860 10000) (= (x530 x8860) 0)))
(assert (x2673 x5919))
(assert (=> (<= x6172 10000) (= (x530 x6172) 0)))
(assert (x1240 x3813))
(assert (= x4155 (x4290 (x3305 64 x4155 100))))
(assert (= (x3305 64 x1237 100) (x530 (x3305 64 x1237 100))))
(assert (= x6006 (=> (and (= x7276 x5304) (= x1496 x4896) (= x3223 x5214) (= x3312 x3703) (= x7594 x5979) (= x8681 x661) (= x6993 x3255) (= x3951 x2275) (= x7923 x3065) (= x6255 x154)) x5451)))
(assert (x2673 x8834))
(assert (x2673 x2948))
(assert (x2673 x1482))
(assert (=> (>= 10000 x1306) (= 0 (x530 x1306))))
(assert (x2673 x5476))
(assert (= x2874 (x4290 (x3305 64 x2874 100))))
(assert (x8339 x5379))
(assert (=> (>= 10000 x939) (= 0 (x530 x939))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x7193 100)))
(assert (= (and x6472 x6433) x8866))
(assert (=> (>= 10000 x3150) (= 0 (x530 x3150))))
(assert (= x4560 (and x4100 (not x2233))))
(assert (= x8037 (=> (and (= (x7405 (+ x1011 32)) x3565) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x174) x2544) (= (x7405 (+ x1672 32)) x7715) (= (x7897 x1011) x4152) (= (x7405 (+ x1151 x4584)) x4754) (= (x7405 (+ x1151 31)) x174) (= (x7190 (- x2650 x7743)) x187) (= x2650 (x7405 (+ x2544 x4584))) (= (x7405 (+ x2124 32)) x1672) (= (< 0 x4152) x7401) (= x4693 (x7405 (+ x2650 32)))) (and (=> (and (and (= (x2451 x3565) x1635) (= (< 32 x4152) x6842)) x7401) (and (=> (not x6842) x3374) (=> (and (and (= (x7405 (+ 32 x3565)) x3284) (= (x7405 (+ x4693 32)) x1046) (= (x3969 x3284) x528) (= x8441 (< 64 x4152))) x6842) (and (=> (not x8441) x3374) (=> (and x8441 (and (= x8656 (x7405 (+ 64 x3565))) (= x7079 (> x4152 96)) (= x3704 (x7405 (+ 64 x4693))) (= x3777 (x1333 x8656)))) (and (=> x7079 x5478) (=> (not x7079) x3374))))))) (=> (not x7401) x3374)))))
(assert (> (x3305 64 x136 100) 10000))
(assert (x2673 x6231))
(assert (= x8587 (=> (and (= x2200 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2426)) (= x7664 x2200) (>= x2200 481) (>= 606 x2200) (= x2426 (+ 31 x6106))) x6711)))
(assert (x2673 x472))
(assert (x2673 x972))
(assert (x2673 x1354))
(assert (x2673 x7083))
(assert (x2673 x3873))
(assert (not (x669 (x3305 64 x1442 100))))
(assert (=> (<= x8613 10000) (= 0 (x530 x8613))))
(assert (< 10000 (x3305 64 x9048 100)))
(assert (x2673 x5270))
(assert (x2673 x4175))
(assert (= (x530 (x3305 64 x3059 100)) (x3305 64 x3059 100)))
(assert (= x555 (and x195 (not x1949))))
(assert (=> (>= 10000 x4216) (= 0 (x530 x4216))))
(assert (x2673 x5015))
(assert (x2673 x4057))
(assert (= (x530 (x3305 64 x7193 100)) (x3305 64 x7193 100)))
(assert (x2673 x2854))
(assert (= (=> (and (= x4603 false) (= x8583 true) (= x7801 36)) x8273) x2848))
(assert (x2673 x4657))
(assert (x2673 x5652))
(assert (x2673 x8821))
(assert (x7454 x8513))
(assert (not (x669 (x3305 64 x6090 100))))
(assert (= x5802 (and x473 x7531)))
(assert (x2673 x7309))
(assert (= (and x7300 (not x6497)) x5646))
(assert (= x1941 (=> (and (or (not x6908) x6908) (= (= 0 x3258) x6908)) x2723)))
(assert (= (x3305 64 x683 36) (x530 (x3305 64 x683 36))))
(assert (= (x530 (x3305 64 x2874 100)) (x3305 64 x2874 100)))
(assert (< (x3305 64 x7358 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x7411))
(assert (= x5472 (and (not x7448) x3392)))
(assert (x2673 x5946))
(assert (= (x530 (x3305 64 x1591 100)) (x3305 64 x1591 100)))
(assert (x2673 x3091))
(assert (= x7140 (x4290 (x3305 64 x7140 100))))
(assert (not (x669 (x3305 64 x4266 100))))
(assert (x4097 x7383 300))
(assert (x2673 x1532))
(assert (= 64 (x967 (x3305 64 x8387 36))))
(assert (x2673 x6910))
(assert (x2673 x2978))
(assert (x2673 x4407))
(assert (x2673 x8634))
(assert (x2673 x6981))
(assert (= (x3305 64 x7571 100) (x530 (x3305 64 x7571 100))))
(assert (x2673 x2105))
(assert (= (x3305 64 x5270 100) (x530 (x3305 64 x5270 100))))
(assert (x2673 x2747))
(assert (x2673 x1633))
(assert (= (x4290 (x3305 64 x977 6)) x977))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2273 100)))
(assert (x1240 x7969))
(assert (x2673 x8269))
(assert (x2673 x8591))
(assert (x7454 x7317))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x8142 10)))
(assert (x2673 x3079))
(assert (x2673 x6390))
(assert (= 64 (x967 (x3305 64 x4171 2))))
(assert (x2673 x719))
(assert (= (x1802 (x3305 64 x668 100)) 100))
(assert (= (x530 (x3305 64 x436 100)) (x3305 64 x436 100)))
(assert (< (x3305 64 x1110 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x830 36)))
(assert (x2673 x6832))
(assert (x2673 x6594))
(assert (= (x3305 64 x3548 36) (x530 (x3305 64 x3548 36))))
(assert (= 100 (x1802 (x3305 64 x2161 100))))
(assert (x2673 x5748))
(assert (x2673 x5635))
(assert (= (x4290 (x3305 64 x6693 100)) x6693))
(assert (= x7207 (and x5615 x8441)))
(assert (= (x967 (x3305 64 x8143 100)) 64))
(assert (> (x3305 64 x4146 36) 10000))
(assert (= x2448 (or x8657 x2298)))
(assert (x8339 x6067))
(assert (x2673 x3818))
(assert (not (x669 (x3305 64 x4155 100))))
(assert (x4097 x276 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4744 x7402))
(assert (x4744 x2136))
(assert (= (x3305 64 x2133 100) (x530 (x3305 64 x2133 100))))
(assert (< 10000 (x3305 64 x2737 100)))
(assert (x2673 x6826))
(assert (x2673 x8060))
(assert (x2673 x5240))
(assert (= (x4290 (x3305 64 x2161 100)) x2161))
(assert (x2673 x8557))
(assert (= (=> (and (= 480 x796) (= x2935 480) (= (= x5404 255) x1327)) (and (=> x1327 x3247) (=> (and (and (= x939 (x5917 255 x2570)) (= x2570 (+ x5404 1)) (>= 18446744073709551615 x6911) (= (= 255 x939) x7606) (= x4253 (x3305 64 x5404 12)) (= x6911 (x3011 x4253)) (= x1097 (x5917 255 x2570))) (not x1327)) (and (=> x7606 x4793) (=> (and (not x7606) (and (= (= 255 x436) x7103) (= x7505 (x3305 64 x939 36)) (= x847 (x4588 x2401 300)) (= x5574 (+ 1 x939)) (= (x5917 255 x5574) x436) (= x6025 (x5917 255 x5574)) (= (x8042 x7505) x2401))) (and (=> (and (not x7103) (and (= (x7941 x8774) x9046) (= (+ x436 1) x6303) (= (x5917 255 x6303) x5711) (= (= 255 x5711) x9017) (= x8774 (x3305 64 x436 100)) (= (x5917 255 x6303) x809))) (and (=> x9017 x4793) (=> (and (not x9017) (and (= x8777 (x5917 255 x4477)) (= (= x8777 255) x5007) (= (x7941 x3972) x8675) (= x1719 (x5917 255 x4477)) (= (+ x5711 1) x4477) (= x3972 (x3305 64 x5711 100)))) (and (=> (and (not x5007) (and (= (+ 1 x8777) x9085) (= x6509 (x7941 x8778)) (= (= x2024 255) x7555) (= (x5917 255 x9085) x2388) (= (x5917 255 x9085) x2024) (= x8778 (x3305 64 x8777 100)))) (and (=> x7555 x3906) (=> (and (not x7555) (and (= x320 (+ x2024 1)) (= (x5917 255 x320) x7806) (= x8627 (= 255 x7806)) (= x1506 (x7941 x8482)) (= (x3305 64 x2024 100) x8482) (= x1243 (x5917 255 x320)))) (and (=> (and (and (= x5563 (= x7584 255)) (= x4965 (+ x7806 1)) (= x6275 (x7941 x6738)) (= x7584 (x5917 255 x4965)) (= x377 (x5917 255 x4965)) (= x6738 (x3305 64 x7806 100))) (not x8627)) (and (=> (and (and (= (x5917 255 x5893) x6196) (= x2018 (x5917 255 x5893)) (= (= 255 x2018) x4304) (= (x7941 x8168) x1163) (= x8168 (x3305 64 x7584 100)) (= x5893 (+ 1 x7584))) (not x5563)) (and (=> (and (not x4304) (and (= x5269 (x5917 255 x922)) (= (x5917 255 x922) x1674) (= (= 255 x5269) x6296) (= (x7941 x7355) x4980) (= x7355 (x3305 64 x2018 100)) (= (+ 1 x2018) x922))) (and (=> (and (and (= (= 255 x2538) x7488) (= x3377 (x7941 x7635)) (= x3924 (x5917 255 x3515)) (= (x5917 255 x3515) x2538) (= (x3305 64 x5269 100) x7635) (= (+ x5269 1) x3515)) (not x6296)) (and (=> x7488 x2848) (=> (and (and (= (x3305 64 x2538 100) x327) (= x8182 (x5917 255 x4082)) (= (x7941 x327) x9045) (= (x5917 255 x4082) x5577) (= x824 (= 255 x5577)) (= x4082 (+ x2538 1))) (not x7488)) (and (=> x824 x5869) (=> (and (and (= (x7405 (+ 32 x4206)) x6625) (= x3828 (x7405 (+ 32 x831))) (= (x7405 (+ x6625 32)) x4593) (= (x7190 (- x5965 32)) x5200) (= x6439 (x5917 255 x3761)) (= 0 x6341) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x8805)) (= (x7405 (+ 32 x8805)) x5044) (> x230 x8805) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x8805)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x8805)) (= x3761 (+ 1 x5577)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8805) (= x4206 (x7405 (+ 32 x5578))) (<= x8805 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x7405 (+ x4593 32)) x230) (= x831 (x7405 (+ 32 x5044))) (= (x7405 (+ x2344 32)) x6703) (= (> x847 x1456) x8171) (= (x3305 64 x5577 100) x269) (= x5578 (x7405 (+ x3107 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8805) (= x3107 (x7405 (+ 32 x6703))) (= x1456 (+ x847 31)) (= (x7405 (+ 32 x3828)) x2344) (= (x7190 (- x230 x8805)) x5965) (= (x7941 x269) x112) (= x4571 (x5917 255 x3761))) (not x824)) (and (=> (and (= (> x847 x1456) x4850) (not x8171)) (and (=> (and (not x4850) (and (= x2224 (x2808 x8805)) (= x699 (< x2224 x847)))) (and (=> (and (= (= 0 x847) x7866) (not x699)) (and (=> (and (not x7866) (and (or (= x3209 32) (= x3209 0)) (= x781 (x7405 (+ x847 x308))) (= (x7405 (+ x5333 x8281)) x308) (= x5333 (x7405 (+ x4760 x230))) (= x3209 (* (ite (= 0 x4760) 1 0) 32)) (= x6449 (x7405 (+ x4760 x8805))) (= (x7405 (+ x6449 x3209)) x7248) (= x4760 (x5917 31 x847)) (= (> x781 x308) x8794) (= (* 32 (ite (= 0 x4760) 1 0)) x8281) (or (= 32 x8281) (= 0 x8281)))) (and (=> (and (not x8794) (= x3637 x308)) x4093) (=> x8794 x4741))) (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x230)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x230) (= x230 x1011) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x230)) (= x978 x55) (< x230 x55) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x230) (= x55 (x7405 (+ x230 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x230)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x230)) x7866) x3847))) (=> (and (= x4628 x230) x699) x4900))) (=> (and (= x230 x4151) x4850) x9041))) (=> x8171 x4793))))))) (=> x6296 x3719))) (=> x4304 x1177))) (=> x5563 x5500))) (=> x8627 x812))))) (=> x5007 x4437))))) (=> x7103 x4793))))))) x3592))
(assert (x2673 x2804))
(assert (< (x3305 64 x8591 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x967 (x3305 64 x5913 100)) 64))
(assert (= 64 (x967 (x3305 64 x8085 100))))
(assert (x1240 x4732))
(assert (= x131 (=> (and (= (x3465 x2291) x8381) (= (x3305 64 x8142 10) x2291) (>= 255 x8381) (= x8683 (= 0 x7128)) (>= x8381 1)) (and (=> (and (not x8683) (and (or (and (and (= x8967 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x1579 (* x6887 1000000000)) (<= 1 x8895) (= 36 x199) (= x6590 x6887) (<= x6871 127) (= x3479 false) (= x7315 310283853) (<= x6871 127) (= (x484 x2252) x8895) (= x1579 x2518) (= x8087 false) (= false x7784) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x6887) (= x6590 x1509) (= x4498 false)) x6589) (and (and (= 36 x3098) (= x7731 false) (>= 127 x1227) (<= 1 x3597) (= false x3970) (= x8764 false) (= x3597 (x484 x4894)) (>= x3979 1) (= x4557 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x5029 x6887) (= x836 310283853) (= x4894 x3979) (<= x1227 127) (<= x3979 1461501637330902918203684832716283019655932542975) (= false x8237)) (not x6589))) (and (= x1358 128) (= (= x2252 x3979) x6589)))) x2268) (=> (and x8683 (and (and (= 128 x8364) (= x6028 (= x3979 x2252))) (or (and (not x6028) (and (= x2475 false) (= false x2096) (>= x3979 1) (= x5135 false) (>= 1461501637330902918203684832716283019655932542975 x3979) (<= x7165 127) (= x389 false) (= 36 x3279) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x4982) (= x211 310283853) (<= 1 x6736) (= (x484 x4894) x6736) (<= x7165 127) (= x3979 x4894) (= x1589 x6887))) (and (and (= 36 x1175) (<= x6222 127) (= x663 x2928) (= x6887 x832) (= x97 (x484 x2252)) (= x3573 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= false x3216) (= false x545) (= x5752 310283853) (= false x2146) (>= 127 x6222) (<= x6887 57896044618658097711785492504343953926634992332820282019728792003956) (= x7273 false) (= x1539 x832) (= x663 (* 1000000000 x6887)) (>= x97 1)) x6028)))) x481)))))
(assert (= (x1802 (x3305 64 x8777 100)) 100))
(assert (= x5580 (and x8643 (not x3328))))
(assert (not (x669 (x3305 64 x432 6))))
(assert (x2673 x6249))
(assert (= (and x5976 (not x6616)) x2620))
(assert (x2673 x5128))
(assert (= 100 (x1802 (x3305 64 x2737 100))))
(assert (< 10000 (x3305 64 x8075 36)))
(assert (x2673 x1377))
(assert (= (x4290 (x3305 64 x1084 100)) x1084))
(assert (x2673 x1713))
(assert (x2673 x5664))
(assert (= (x3305 64 x5907 100) (x530 (x3305 64 x5907 100))))
(assert (= 0 (x1802 (x3305 64 x3730 0))))
(assert (x2673 x6690))
(assert (x9110 x7901))
(assert (= x6852 (=> (= (= 0 x1713) x8744) (and (=> (and (and (= x2148 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2605) (and (> 32 x2605) (= true (<= x2605 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (> x900 x14) (= x900 (x7405 (+ 32 x14))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x14) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x14)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x14)) (<= x14 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x14) (not (= x14 115792089237316195423570985008687907853269984665640564039457584007913129639904))) (not x8744)) (and (=> (and (and (= (x5510 x8897) x5397) (= x7417 (x5677 x5314)) (= x8718 x8897) (= x2872 (= x7417 0)) (= (= x5397 x7417) x8561) (>= 3 x5397) x8561 (= (x3305 64 x8897 11) x5314) (<= x7417 3) (= (x2276 x14) x8897)) (not x2148)) (and (=> (and x2872 (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x900)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x900) (= (+ x6164 1) x6242) (= false x5409) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x900)) (> x1983 x900) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x900) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x900)) (= x1929 (x3305 64 x9127 10)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x900) (= x1983 (x7405 (+ 96 x900))) (= false x7588) (= false x2122) (= x5409 x6368) (= x6164 (+ 1 x892)) (= (x3305 64 x8897 11) x892) (= x3697 1) (= x7576 false))) x5994) (=> (not x2872) x1012))) (=> x2148 x1012))) (=> x8744 x1012)))))
(assert (x5050 x4837))
(assert (= (and (not x3064) x7691) x3119))
(assert (x2673 x726))
(assert (= x2313 (x4290 (x3305 64 x2313 100))))
(assert (x2673 x8869))
(assert (x2673 x6449))
(assert (x9110 x8442))
(assert (= (x1802 (x3305 64 x744 100)) 100))
(assert (x8339 x6818))
(assert (not (x669 (x3305 64 x2774 100))))
(assert (not (x669 (x3305 64 x4958 100))))
(assert (x2673 x4345))
(assert (= (and x6138 x1374) x1743))
(assert (x2673 x1910))
(assert (= (x4290 (x3305 64 x4689 36)) x4689))
(assert (=> (>= 10000 x3730) (= (x530 x3730) 0)))
(assert (x2673 x7319))
(assert (= (x530 (x3305 64 x930 100)) (x3305 64 x930 100)))
(assert (x2673 x909))
(assert (x2673 x5294))
(assert (= 100 (x1802 (x3305 64 x5269 100))))
(assert (= x6430 (and x1337 x1743)))
(assert (= 64 (x967 (x3305 64 x1591 100))))
(assert (x4097 x4920 256))
(assert (= 2 (x1802 (x3305 64 x4171 2))))
(assert (x2673 x730))
(assert (x2673 x2510))
(assert (= (and x1392 x6525) x5902))
(assert (x669 3008604839))
(assert (= x6489 (and (not x9043) x774)))
(assert (x2673 x8857))
(assert (= (=> (and (= x7867 (x7405 (+ x3135 x7727))) (= (= 0 x8476) x6137) (= (x7190 (- x2328 x4254)) x7347) (= (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1297) x330) (= (x7405 (+ x330 x7727)) x2328) (= x8476 (x484 x464)) (= x1297 (x7405 (+ 31 x3135)))) (and (=> (and (and (= false x426) (= true x2678)) x6137) x3445) (=> (and (not x6137) (and (= x5817 (> x6759 0)) (or (and (not x5817) (and (= x6226 x4238) (= x4398 x6468) (= x7746 x1738) (= x2765 x8569) (= x3347 x8346) (= x8333 x3199) (= x7973 x8906) (= x8091 x7422) (= x301 x3685))) (and x5817 (and (= x7746 x1993) (= x6468 x5867) (= x4513 x7973) (= x5282 x4238) (= x4001 x3199) (= (>= (x6868 x4894) x4886) x9042) (= x8569 x5498) (= x7422 x4274) (= (x5493 x464) x5359) (= x8346 x4414) (= (= x5359 (x6868 x464)) x2021) (= x1602 x301) x2021 (>= 4294967295 x1827) (= (x5493 x4894) x4886) x9042))))) x7943))) x3240))
(assert (> (x3305 64 x8194 100) 10000))
(assert (x2673 x2830))
(assert (x8339 x5353))
(assert (= x346 (x4290 (x3305 64 x346 100))))
(assert (= (x4290 (x3305 64 x4241 12)) x4241))
(assert (not (x669 (x3305 64 x939 36))))
(assert (x2673 x6312))
(assert (< (x3305 64 x2534 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x5270 10000) (= 0 (x530 x5270))))
(assert (x2673 x1838))
(assert (x2673 x2227))
(assert (x2673 x7770))
(assert (=> (>= 10000 x3729) (= (x530 x3729) 0)))
(assert (x2673 x8054))
(assert (x7454 x1255))
(assert (x2673 x6726))
(assert (= x8044 (x4290 (x3305 64 x8044 100))))
(assert (x2673 x4350))
(assert (= (or x3776 x1176) x5328))
(assert (x4744 x1633))
(assert (x2673 x21))
(assert (x2673 x1154))
(assert (= (and x5504 (not x8104)) x5766))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x2708 100)))
(assert (not (x669 (x3305 64 x959 100))))
(assert (= (x3305 64 x1272 36) (x530 (x3305 64 x1272 36))))
(assert (x2673 x3921))
(assert (= (x4290 (x3305 64 x4094 100)) x4094))
(assert (= (x967 (x3305 64 x2106 100)) 64))
(assert (> (x3305 64 x959 100) 10000))
(assert (x2673 x2410))
(assert (x2673 x8925))
(assert (x2673 x261))
(assert (x4097 x5792 256))
(assert (= (=> (and (= x7056 (not (> x9099 x4408))) (= x4408 (x7405 (+ 32 x312))) (= x6199 (x2547 x5921))) (and x7056 (=> (= x4408 x3756) x3128))) x4622))
(assert (= (x530 (+ 1 x1434)) (x530 x1434)))
(assert (x2673 x5308))
(assert (not (x669 (x3305 64 x6273 36))))
(assert (= 64 (x967 (x3305 64 x5550 100))))
(assert (= (=> (and (= x7191 (x5689 x7270)) (= x6292 (not (> x8975 x509))) (= (x7405 (+ 32 x4923)) x509)) (and x6292 (=> (= x509 x2911) x968))) x2108))
(assert (= (and x631 (not x1108)) x3103))
(assert (= 100 (x1802 (x3305 64 x448 100))))
(assert (x2673 x4385))
(assert (x2673 x8306))
(assert (x2673 x4798))
(assert (= 64 (x967 (x3305 64 x4044 100))))
(assert (x2673 x9129))
(assert (x8339 x5442))
(assert (x4744 x2593))
(assert (x2673 x6870))
(assert (x8912 32 (ite (= x6116 0) 1 0)))
(assert (x1240 x1297))
(assert (not (x669 (x3305 64 x8671 100))))
(assert (x4097 x1141 256))
(assert (< (x3305 64 x7586 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x669 (x3305 64 x8928 2))))
(assert (x2673 x6402))
(assert (x2673 x2113))
(assert (x2673 x5587))
(assert (< (x3305 64 x5270 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1780 (not x6623)) x1611))
(assert (= (x530 (x3305 64 x2379 11)) (x3305 64 x2379 11)))
(assert (= (and x6975 x5789) x2615))
(assert (x1240 x2819))
(assert (x2673 x8745))
(assert (x2673 x7893))
(assert (x2673 x7367))
(assert (x2673 x847))
(assert (= (or x2997 x6007) x1762))
(assert (= x8731 (x4290 (x3305 64 x8731 100))))
(assert (x2673 x7113))
(assert (= (and x6847 (not x7804)) x8579))
(assert (x2673 x6439))
(assert (x2673 x3708))
(assert (x2673 x7944))
(assert (x8339 x7480))
(assert (= (=> (and (= (x7405 (+ 32 x7608)) x2242) (= (x7405 (+ x7959 4)) x7608) (= x1076 (> x441 0)) (= (x6584 480) x441) (= (x7405 (+ x7608 128)) x929) (= x749 (x7405 (+ x929 32)))) (and (=> (not x1076) x2909) (=> (and (and (= (x3376 512) x5557) (= x6268 (< 32 x441))) x1076) (and (=> (not x6268) x2909) (=> (and x6268 (and (= (x3587 544) x1596) (= x2027 (x7405 (+ x749 32))) (= x5927 (> x441 64)))) (and (=> (and x5927 (and (= x3653 (x339 576)) (= (< 96 x441) x2248) (= x566 (x7405 (+ 64 x749))))) (and (=> (not x2248) x2909) (=> x2248 x5634))) (=> (not x5927) x2909))))))) x3172))
(assert (= x1239 (and (not x1538) x965)))
(assert (< (x3305 64 x1306 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5828))
(assert (x2673 x918))
(assert (x2673 x234))
(assert (x4744 x435))
(assert (x2673 x3206))
(assert (x2673 x5899))
(assert (x2673 x3905))
(assert (=> (<= x464 10000) (= 0 (x530 x464))))
(assert (x7454 x8024))
(assert (x2673 x6037))
(assert (= (x1802 (x3305 64 x3278 100)) 100))
(assert (< (x3305 64 x3580 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x6939 100)))
(assert (x4097 x6924 256))
(assert (x2673 x7358))
(assert (x2673 x4488))
(assert (x4097 x6067 256))
(assert (= 64 (x967 (x3305 64 x5340 100))))
(assert (= 36 (x1802 (x3305 64 x683 36))))
(assert (x2673 x2692))
(assert (x2673 x7735))
(assert (x9110 x6092))
(assert (x2673 x7520))
(assert (x2673 x8934))
(assert (= (x530 (x3305 64 x2708 100)) (x3305 64 x2708 100)))
(assert (= (x530 (x3305 64 x7586 100)) (x3305 64 x7586 100)))
(assert (x2673 x3408))
(assert (= (x1802 (x3305 64 x755 12)) 12))
(assert (= x2644 (x4290 (x3305 64 x2644 100))))
(assert (=> (<= x1051 10000) (= (x530 x1051) 0)))
(assert (= (x1802 (x3305 64 x4985 100)) 100))
(assert (x8339 32))
(assert (= (and x8035 (not x7020)) x5597))
(assert (x4744 x9088))
(assert (= (and x5201 x7123) x7413))
(assert (x2673 x5894))
(assert (x2673 x6473))
(assert (= (x4290 (x3305 64 x4216 100)) x4216))
(assert (x2673 x6425))
(assert (x2673 x3359))
(assert (x2673 x8208))
(assert (x2673 x4394))
(assert (= (or x2009 x6416) x1228))
(assert (x2673 x7761))
(assert (x2673 x8143))
(assert (= x2995 (and x6889 (not x2321))))
(assert (x2673 x1959))
(assert (x2673 x7234))
(assert (x2673 x4593))
(assert (x2673 x1457))
(assert (x2673 x6723))
(assert (x4097 x5760 256))
(assert (x2673 x8255))
(assert (x2673 x3299))
(assert (= (and x5628 x2780) x1704))
(assert (= x310 (=> (= (= 0 x8714) x1696) (and (=> (and (not x1696) (and (= x2845 true) (= 4 x2978) (= false x3825))) x8926) (=> (and (and (= x7419 (x3305 64 x1306 2)) (= x8803 (x7405 (+ x4796 x8057))) (= (> x8057 x8803) x8104) (= (x6879 x7419) x8057)) x1696) (and (=> (and (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3730) x7168) (not x8104)) (and (=> (and (and (= false x3402) (= x9024 false) (= 32 x395) (= x8819 1) (= x5970 (+ 1 x928)) (= x928 (x3305 64 x3730 0)) (= x5192 (x7405 (+ x3730 1))) (= (x7405 (+ 1 x3730)) x5503)) (not x7168)) x1812) (=> x7168 x8770))) (=> (and (and (= x7134 true) (= 36 x2978) (= false x5078)) x8104) x8926)))))))
(assert (x2673 x1364))
(assert (x2673 x7513))
(assert (x2673 x5397))
(assert (x2673 x5686))
(assert (x2673 x182))
(assert (= (or x5971 x709) x1816))
(assert (x2673 x8568))
(assert (x4744 x1682))
(assert (x2673 x6928))
(assert (= 64 (x967 (x3305 64 x8777 100))))
(assert (x2673 x6431))
(assert (= (x530 (x3305 64 x8352 6)) (x3305 64 x8352 6)))
(assert (not (x669 (x3305 64 x5868 100))))
(assert (x2673 x1388))
(assert (< (x3305 64 x2145 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4168 (or x1220 x4479)))
(assert (x2673 x852))
(assert (x4744 x8433))
(assert (x2673 x8990))
(assert (x2673 x8965))
(assert (x9110 x293))
(assert (x2673 x560))
(assert (x2673 x6378))
(assert (= 36 (x1802 (x3305 64 x939 36))))
(assert (x2673 x8490))
(assert (not (x669 (x3305 64 x4985 100))))
(assert (x2673 x8822))
(assert (x2673 x2133))
(assert (x4097 x3761 256))
(assert (= x7528 (or x5969 x65)))
(assert (x2673 x2789))
(assert (= 64 (x967 (x3305 64 x2018 100))))
(assert (x2673 x7838))
(assert (x2673 x4700))
(assert (x2673 x861))
(assert (x2673 x1306))
(assert (x2673 x5349))
(assert (x2673 x1181))
(assert (x4097 x4164 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6585 (or x762 x7353 x8477 x1862 x695 x3934 x7125 x3218 x4120 x6081 x8960 x7459 x7652 x2479 x4303 x7974 x8473 x6047 x6671 x4444 x5802 x7470 x7658 x6937 x5836 x5462 x1085 x4096 x4260 x1892 x300 x1714 x8169 x2733 x2160 x7879 x8916 x1114 x8280 x8945 x3542 x2857 x859)))
(assert (x2673 x8458))
(assert (= (x967 (x3305 64 x3066 100)) 64))
(assert (= x1883 (x4290 (x3305 64 x1883 36))))
(assert (x2673 x1394))
(assert (x2673 x2027))
(assert (x2673 x4164))
(assert (= x8352 (x4290 (x3305 64 x8352 2))))
(assert (= (and x2130 x7142) x7793))
(assert (x2673 x5225))
(assert (= (or x8728 x3763) x2997))
(assert (x8339 x6013))
(assert (x2673 x2911))
(assert (=> (>= 10000 x4027) (= 0 (x530 x4027))))
(assert (x9110 x5116))
(assert (x2673 x3802))
(assert (x2673 x2513))
(assert (x8339 x2314))
(assert (x4097 x5673 32))
(assert (x2673 x6080))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x3789 100)))
(assert (= x8770 (=> (and (= x8720 true) (= x8699 false) (= x2978 0)) x8926)))
(assert (x2673 x6039))
(assert (= x5991 (and x6794 x2565)))
(assert (x4097 x2665 256))
(assert (= x7320 (and x7216 x1515)))
(assert (x2673 x2990))
(assert (x2673 x6935))
(assert (x2673 x8110))
(assert (x2673 x7914))
(assert (= x231 (=> (and (or (and (not x649) (and (= x8515 x577) (= x5116 x8312))) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7295) (= x8312 x5116) (= (ite (= x8515 0) x90 0) x3411) (< (+ x3411 x4455) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x7295) (= (x1691 x7655) x2916) (= x8515 x577) (= (- x2916 x3411) x5172) (= (+ x3411 x4455) x7295) (= x4372 x7295) (= (x3155 x4894) x4455)) x649)) (= x649 (= x8515 0))) x455)))
(assert (= 64 (x967 (x3305 64 x1000 100))))
(assert (x2673 x3741))
(assert (=> (>= 10000 x5718) (= 0 (x530 x5718))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1166 36)))
(assert (= (x4290 (x3305 64 x8489 100)) x8489))
(assert (< (x3305 64 x1486 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3305 64 x5127 100) (x530 (x3305 64 x5127 100))))
(assert (= 64 (x967 (x3305 64 x6767 36))))
(assert (x9110 x1101))
(assert (= (=> (= x3558 x4511) x7292) x6798))
(assert (x2673 x5047))
(assert (x2673 x4243))
(assert (=> (>= 10000 x5390) (= 0 (x530 x5390))))
(assert (=> (>= 10000 x5331) (= 0 (x530 x5331))))
(assert (x2673 x312))
(assert (x2673 x702))
(assert (x2673 x4989))
(assert (= (and (not x8794) x7814) x2462))
(assert (= x3246 (and (not x188) x3521)))
(assert (x2673 x4979))
(assert (= x3724 (x4290 (x3305 64 x3724 36))))
(assert (x2673 x7886))
(assert (x1240 x2692))
(assert (=> (>= 10000 x8591) (= (x530 x8591) 0)))
(assert (x2673 x1054))
(assert (x669 1461501637330902918203684832716283019655932542975))
(assert (= x7312 (and x3024 (not x1060))))
(assert (x2673 x6783))
(assert (x2673 x5527))
(assert (x4097 x1783 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x2865))
(assert (x2673 x1726))
(assert (= x6695 (or x5693 x2818 x1037 x8781 x2679)))
(assert (= x4910 (or x5198 x3326)))
(assert (x2673 x9105))
(assert (= (and x2181 x3920) x3793))
(assert (x4097 x466 32))
(assert (x2673 x5184))
(assert (= (and x555 x6269) x7425))
(assert (= 64 (x967 (x3305 64 x5907 100))))
(assert (x2673 x7726))
(assert (=> (>= 10000 x4155) (= 0 (x530 x4155))))
(assert (=> (>= 10000 x8073) (= (x530 x8073) 0)))
(assert (x2673 x5427))
(assert (= x3934 (and x2272 x1967)))
(assert (= x4903 (and (not x2250) x3830)))
(assert (x7454 x3989))
(assert (x7454 x2063))
(assert (x2673 x3965))
(assert (x2673 x4215))
(assert (x2673 x6157))
(assert (< (x3305 64 x5219 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x3898))
(assert (x2673 x2018))
(assert (x2673 x464))
(assert (= (x1802 (x3305 64 x2736 100)) 100))
(assert (x4097 x7442 256))
(assert (x2673 x1587))
(assert (= (x3305 64 x2976 100) (x530 (x3305 64 x2976 100))))
(assert (= (x3305 64 x8644 100) (x530 (x3305 64 x8644 100))))
(assert (x7454 x835))
(assert (x2673 x2846))
(assert (not (x669 (x3305 64 x3954 2))))
(assert (x2673 x4659))
(assert (x2673 x6919))
(assert (x2673 x2774))
(assert (= (and (not x7859) x8690) x224))
(assert (x2673 x2564))
(assert (x2673 x3147))
(assert (= x8167 (=> (and (= (x7405 (+ 96 x2715)) x8214) (= x3473 (not (< 128 x2604))) (= x5990 (x3646 608))) (and x6865 x3473))))
(assert (x7454 x2767))
(assert (=> (<= x1935 10000) (= 0 (x530 x1935))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3305 64 x1406 100)))
(assert (= (x4290 (x3305 64 x7281 100)) x7281))
(assert (= (x3305 64 x959 100) (x530 (x3305 64 x959 100))))
(assert (< (x3305 64 x5331 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4744 x3139))
(assert (x2673 x441))
(assert (= x4192 (and x1676 x2897)))
(assert (x2673 x7568))
(assert (=> (<= x3421 10000) (= 0 (x530 x3421))))
(assert (x2673 x3540))
(assert (x8339 x7861))
(assert (x2673 x6405))
(assert (= (x1802 (x3305 64 x4662 100)) 100))
(assert (= x5415 (=> (and (= x3175 x2127) (= (+ 31 x6301) x8966) (<= 481 x2127) (>= 606 x2127) (= x2127 (x5917 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8966))) x8767)))
(assert (x2673 x3110))
(assert (x2673 x2201))
(assert (x2673 x3471))
(assert (x2673 x736))
(assert (= (x530 (x3305 64 x3109 100)) (x3305 64 x3109 100)))
(assert (x1240 x5178))
(assert (x8339 x3712))
(assert (x2673 x6963))
(assert (x2673 x2644))
(assert (x2673 x2170))
(assert (= (x1802 (x3305 64 x8700 0)) 0))
(assert (< (x3305 64 x1591 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2673 x5935))
(check-sat)
(exit)
