(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1514 () Int)
(declare-fun x1414 () Int)
(declare-fun x57 (Int) Int)
(declare-fun x1897 () Int)
(declare-fun x436 () Int)
(declare-fun x1684 () Int)
(declare-fun x68 () Int)
(declare-fun x1767 () Int)
(declare-fun x1517 () Int)
(declare-fun x1549 () Bool)
(declare-fun x752 () Bool)
(declare-fun x1602 () Int)
(declare-fun x401 () Int)
(declare-fun x1030 () Bool)
(declare-fun x76 () Int)
(declare-fun x262 () Int)
(declare-fun x1371 () Int)
(declare-fun x1756 () Int)
(declare-fun x866 () Int)
(declare-fun x500 () Bool)
(declare-fun x698 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x374 () Bool)
(declare-fun x949 () Int)
(declare-fun x120 () Int)
(declare-fun x1125 (Int) Int)
(declare-fun x1261 () Int)
(declare-fun x64 () Int)
(declare-fun x19 () Int)
(declare-fun x1114 () Int)
(declare-fun x1430 () Int)
(declare-fun x1076 () Int)
(declare-fun x1126 () Bool)
(declare-fun x329 (Int) Int)
(declare-fun x947 () Bool)
(declare-fun x745 () Int)
(declare-fun x673 () Int)
(declare-fun x1296 () Int)
(declare-fun x58 () Bool)
(declare-fun x522 () Int)
(declare-fun x1802 () Int)
(declare-fun x110 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1354 () Int)
(declare-fun x130 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x1912 () Int)
(declare-fun x1804 () Int)
(declare-fun x606 (Int) Int)
(declare-fun x105 () Int)
(declare-fun x882 () Bool)
(declare-fun x1679 () Int)
(declare-fun x1564 () Int)
(declare-fun x1769 () Int)
(declare-fun x723 () Bool)
(declare-fun x363 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1704 () Int)
(declare-fun x155 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x1942 () Int)
(declare-fun x1320 () Int)
(declare-fun x756 () Bool)
(declare-fun x1180 () Int)
(declare-fun x1236 () Int)
(declare-fun x874 () Int)
(declare-fun x1703 () Int)
(declare-fun x1300 (Int Int Int Int Int) Int)
(declare-fun x100 () Int)
(declare-fun x1686 () Int)
(declare-fun x836 () Int)
(declare-fun x1070 () Int)
(declare-fun x1561 () Int)
(declare-fun x14 () Int)
(declare-fun x1067 () Bool)
(declare-fun x1958 () Int)
(declare-fun x1719 () Bool)
(declare-fun x234 () Int)
(declare-fun x470 () Bool)
(declare-fun x1590 () Int)
(declare-fun x308 () Int)
(declare-fun x1260 () Bool)
(declare-fun x387 () Int)
(declare-fun x59 () Bool)
(declare-fun x1950 () Int)
(declare-fun x1685 () Int)
(declare-fun x321 () Bool)
(declare-fun x1135 () Int)
(declare-fun x1585 () Int)
(declare-fun x1510 () Int)
(declare-fun x1779 () Int)
(declare-fun x1362 () Int)
(declare-fun x1596 () Int)
(declare-fun x197 () Int)
(declare-fun x963 () Int)
(declare-fun x348 () Int)
(declare-fun x1297 () Int)
(declare-fun x1347 () Int)
(declare-fun x1783 () Int)
(declare-fun x1592 () Int)
(declare-fun x667 () Int)
(declare-fun x1174 () Int)
(declare-fun x1311 () Int)
(declare-fun x952 () Int)
(declare-fun x1828 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1699 () Int)
(declare-fun x1208 () Int)
(declare-fun x135 () Int)
(declare-fun x435 () Int)
(declare-fun x1569 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x445 () Int)
(declare-fun x1691 () Int)
(declare-fun x1356 () Int)
(declare-fun x380 () Int)
(declare-fun x185 () Int)
(declare-fun x1960 () Int)
(declare-fun x957 () Int)
(declare-fun x758 () Int)
(declare-fun x1536 () Int)
(declare-fun x1748 (Int) Int)
(declare-fun x1342 () Bool)
(declare-fun x48 () Int)
(declare-fun x1105 () Int)
(declare-fun x761 (Int Int) Int)
(declare-fun x1029 () Int)
(declare-fun x1065 () Int)
(declare-fun x7 () Int)
(declare-fun x1235 () Int)
(declare-fun x1878 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x977 () Int)
(declare-fun x572 () Int)
(declare-fun x1544 () Int)
(declare-fun x270 () Int)
(declare-fun x1795 () Int)
(declare-fun x1717 () Int)
(declare-fun x1255 () Int)
(declare-fun x1496 () Bool)
(declare-fun x576 () Int)
(declare-fun x1693 () Bool)
(declare-fun x199 () Int)
(declare-fun x998 () Bool)
(declare-fun x555 () Int)
(declare-fun x833 () Int)
(declare-fun x444 () Int)
(declare-fun x193 () Bool)
(declare-fun x2012 () Int)
(declare-fun x1917 () Int)
(declare-fun x194 () Bool)
(declare-fun x987 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1481 () Int)
(declare-fun x984 () Int)
(declare-fun x446 () Int)
(declare-fun x1644 () Int)
(declare-fun x1676 () Int)
(declare-fun x1139 () Bool)
(declare-fun x966 () Int)
(declare-fun x438 () Int)
(declare-fun x1792 () Int)
(declare-fun x440 () Int)
(declare-fun x280 (Int Int) Int)
(declare-fun x843 () Int)
(declare-fun x1817 () Int)
(declare-fun x1712 () Int)
(declare-fun x164 () Int)
(declare-fun x730 () Int)
(declare-fun x801 () Int)
(declare-fun x303 () Int)
(declare-fun x1052 () Int)
(declare-fun x515 () Int)
(declare-fun x189 () Int)
(declare-fun x1210 () Int)
(declare-fun x33 () Int)
(declare-fun x236 () Int)
(declare-fun x1217 () Int)
(declare-fun x1133 () Int)
(declare-fun x1764 () Int)
(declare-fun x792 () Int)
(declare-fun x245 () Bool)
(declare-fun x887 () Int)
(declare-fun x1595 () Int)
(declare-fun x815 () Bool)
(declare-fun x858 () Int)
(declare-fun x1331 () Int)
(declare-fun x634 () Int)
(declare-fun x1647 (Int) Int)
(declare-fun x230 () Int)
(declare-fun x1064 () Int)
(declare-fun x518 () Bool)
(declare-fun x1773 () Int)
(declare-fun x842 () Int)
(declare-fun x275 () Int)
(declare-fun x469 () Int)
(declare-fun x1741 () Int)
(declare-fun x1061 () Int)
(declare-fun x2001 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1232 () Int)
(declare-fun x1760 () Int)
(declare-fun x1338 () Int)
(declare-fun x805 () Int)
(declare-fun x1440 () Int)
(declare-fun x1143 () Int)
(declare-fun x1964 () Int)
(declare-fun x1416 (Int) Int)
(declare-fun x558 () Int)
(declare-fun x251 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1922 () Int)
(declare-fun x1732 () Bool)
(declare-fun x55 () Bool)
(declare-fun x571 () Int)
(declare-fun x1088 () Int)
(declare-fun x1346 () Bool)
(declare-fun x90 () Int)
(declare-fun x988 () Int)
(declare-fun x588 () Int)
(declare-fun x325 () Int)
(declare-fun x964 (Int) Int)
(declare-fun x868 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1042 () Int)
(declare-fun x353 () Int)
(declare-fun x1230 () Int)
(declare-fun x1402 () Int)
(declare-fun x1190 () Bool)
(declare-fun x56 () Int)
(declare-fun x1901 () Int)
(declare-fun x1374 () Int)
(declare-fun x1479 () Int)
(declare-fun x27 () Int)
(declare-fun x1244 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x967 () Int)
(declare-fun x688 () Int)
(declare-fun x783 () Int)
(declare-fun x675 () Bool)
(declare-fun x1241 () Int)
(declare-fun x255 () Int)
(declare-fun x331 () Int)
(declare-fun x976 () Int)
(declare-fun x1363 () Int)
(declare-fun x1223 () Bool)
(declare-fun x15 () Int)
(declare-fun x1516 () Int)
(declare-fun x138 () Int)
(declare-fun x1276 () Int)
(declare-fun x809 () Int)
(declare-fun x1824 () Int)
(declare-fun x1106 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x780 () Int)
(declare-fun x81 () Bool)
(declare-fun x1335 () Int)
(declare-fun x400 () Int)
(declare-fun x246 () Int)
(declare-fun x1508 () Int)
(declare-fun x1179 () Int)
(declare-fun x1552 () Int)
(declare-fun x687 () Int)
(declare-fun x540 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x1680 () Int)
(declare-fun x1754 () Int)
(declare-fun x898 () Int)
(declare-fun x1252 () Int)
(declare-fun x1571 () Int)
(declare-fun x1436 () Bool)
(declare-fun x1071 () Int)
(declare-fun x924 () Int)
(declare-fun x1673 () Int)
(declare-fun x499 () Int)
(declare-fun x1446 () Bool)
(declare-fun x1266 () Int)
(declare-fun x1720 () Bool)
(declare-fun x1167 () Int)
(declare-fun x1066 () Int)
(declare-fun x240 () Bool)
(declare-fun x853 () Int)
(declare-fun x1579 () Int)
(declare-fun x529 () Int)
(declare-fun x6 () Int)
(declare-fun x289 () Bool)
(declare-fun x1863 () Int)
(declare-fun x1929 () Int)
(declare-fun x973 () Bool)
(declare-fun x1303 () Int)
(declare-fun x253 () Bool)
(declare-fun x1471 () Int)
(declare-fun x221 () Int)
(declare-fun x1925 () Int)
(declare-fun x630 () Int)
(declare-fun x803 () Bool)
(declare-fun x1013 () Int)
(declare-fun x333 () Int)
(declare-fun x1006 () Int)
(declare-fun x362 () Int)
(declare-fun x5 () Int)
(declare-fun x1697 () Int)
(declare-fun x1220 () Int)
(declare-fun x276 () Int)
(declare-fun x956 () Int)
(declare-fun x423 () Bool)
(declare-fun x941 () Bool)
(declare-fun x652 () Int)
(declare-fun x1614 () Int)
(declare-fun x28 () Bool)
(declare-fun x905 () Int)
(declare-fun x1398 () Int)
(declare-fun x1350 () Bool)
(declare-fun x1944 () Int)
(declare-fun x1858 () Int)
(declare-fun x668 () Int)
(declare-fun x393 () Int)
(declare-fun x923 () Int)
(declare-fun x1681 () Int)
(declare-fun x709 () Int)
(declare-fun x1027 () Int)
(declare-fun x1033 () Int)
(declare-fun x584 () Int)
(declare-fun x1916 () Int)
(declare-fun x1665 () Int)
(declare-fun x922 () Int)
(declare-fun x417 () Int)
(declare-fun x1045 () Int)
(declare-fun x1162 () Int)
(declare-fun x1803 () Int)
(declare-fun x386 () Bool)
(declare-fun x1821 () Int)
(declare-fun x341 () Bool)
(declare-fun x1108 () Int)
(declare-fun x309 () Int)
(declare-fun x1909 () Int)
(declare-fun x126 () Int)
(declare-fun x1211 (Int) Int)
(declare-fun x697 () Bool)
(declare-fun x620 () Int)
(declare-fun x647 () Int)
(declare-fun x313 () Int)
(declare-fun x915 () Int)
(declare-fun x1505 () Int)
(declare-fun x233 () Int)
(declare-fun x49 () Int)
(declare-fun x315 () Int)
(declare-fun x621 () Int)
(declare-fun x127 () Int)
(declare-fun x658 () Int)
(declare-fun x1182 () Int)
(declare-fun x29 () Int)
(declare-fun x1195 () Int)
(declare-fun x292 () Bool)
(declare-fun x1943 () Int)
(declare-fun x892 () Int)
(declare-fun x516 () Bool)
(declare-fun x1654 () Int)
(declare-fun x649 () Int)
(declare-fun x1169 () Int)
(declare-fun x447 () Int)
(declare-fun x1734 () Int)
(declare-fun x370 () Int)
(declare-fun x1503 () Int)
(declare-fun x885 () Int)
(declare-fun x1801 () Int)
(declare-fun x911 () Bool)
(declare-fun x1530 (Int Int) Int)
(declare-fun x605 () Int)
(declare-fun x1626 () Int)
(declare-fun x552 () Int)
(declare-fun x1209 () Int)
(declare-fun x260 () Bool)
(declare-fun x1085 () Int)
(declare-fun x1766 () Int)
(declare-fun x1060 () Int)
(declare-fun x349 () Int)
(declare-fun x1216 () Int)
(declare-fun x1932 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x1068 () Int)
(declare-fun x616 () Int)
(declare-fun x228 () Int)
(declare-fun x462 () Int)
(declare-fun x1383 () Bool)
(declare-fun x871 () Int)
(declare-fun x291 () Int)
(declare-fun x1482 () Int)
(declare-fun x927 () Int)
(declare-fun x1245 () Bool)
(declare-fun x415 () Bool)
(declare-fun x1059 (Int) Int)
(declare-fun x1360 () Bool)
(declare-fun x1005 (Int) Int)
(declare-fun x1566 () Int)
(declare-fun x1991 () Int)
(declare-fun x1480 () Int)
(declare-fun x2010 () Bool)
(declare-fun x252 () Int)
(declare-fun x1630 () Int)
(declare-fun x1336 () Int)
(declare-fun x1966 () Int)
(declare-fun x1556 () Int)
(declare-fun x1411 () Int)
(declare-fun x505 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1019 () Int)
(declare-fun x1780 () Bool)
(declare-fun x1669 () Int)
(declare-fun x307 () Int)
(declare-fun x1800 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x177 () Bool)
(declare-fun x352 () Bool)
(declare-fun x1113 () Int)
(declare-fun x1798 (Int Int Int Int Int Int Int) Int)
(declare-fun x617 () Int)
(declare-fun x852 () Int)
(declare-fun x835 () Bool)
(declare-fun x378 () Int)
(declare-fun x1770 () Bool)
(declare-fun x799 () Bool)
(declare-fun x108 () Int)
(declare-fun x141 () Bool)
(declare-fun x1018 () Int)
(declare-fun x115 () Int)
(declare-fun x1871 () Int)
(declare-fun x269 () Int)
(declare-fun x495 () Bool)
(declare-fun x489 () Bool)
(declare-fun x1848 () Int)
(declare-fun x1468 () Int)
(declare-fun x1584 () Bool)
(declare-fun x372 () Bool)
(declare-fun x1945 () Int)
(declare-fun x1594 () Int)
(declare-fun x1625 () Int)
(declare-fun x1458 () Int)
(declare-fun x389 () Bool)
(declare-fun x1034 () Int)
(declare-fun x1090 () Int)
(declare-fun x1689 () Bool)
(declare-fun x950 () Bool)
(declare-fun x1753 () Int)
(declare-fun x243 () Int)
(declare-fun x209 () Bool)
(declare-fun x1267 () Int)
(declare-fun x1325 () Int)
(declare-fun x528 () Int)
(declare-fun x1551 () Int)
(declare-fun x1889 () Int)
(declare-fun x204 () Int)
(declare-fun x1323 () Int)
(declare-fun x1011 () Bool)
(declare-fun x1153 () Int)
(declare-fun x356 () Bool)
(declare-fun x451 () Bool)
(declare-fun x1851 () Int)
(declare-fun x1841 () Bool)
(declare-fun x38 () Int)
(declare-fun x855 () Int)
(declare-fun x1668 () Int)
(declare-fun x402 () Bool)
(declare-fun x153 () Int)
(declare-fun x1888 () Int)
(declare-fun x1740 () Int)
(declare-fun x1490 () Bool)
(declare-fun x1651 () Int)
(declare-fun x945 () Int)
(declare-fun x169 () Int)
(declare-fun x699 () Int)
(declare-fun x1981 () Int)
(declare-fun x944 () Int)
(declare-fun x1846 () Int)
(declare-fun x1924 () Bool)
(declare-fun x1743 () Int)
(declare-fun x1884 () Int)
(declare-fun x951 () Int)
(declare-fun x1971 () Int)
(declare-fun x707 () Int)
(declare-fun x25 () Bool)
(declare-fun x403 () Int)
(declare-fun x213 () Int)
(declare-fun x547 () Int)
(declare-fun x1698 () Int)
(declare-fun x79 () Int)
(declare-fun x822 () Int)
(declare-fun x1752 () Bool)
(declare-fun x1890 () Int)
(declare-fun x1256 () Int)
(declare-fun x1635 () Int)
(declare-fun x1959 () Int)
(declare-fun x978 () Bool)
(declare-fun x1393 () Int)
(declare-fun x146 () Int)
(declare-fun x1017 () Int)
(declare-fun x1145 (Int) Int)
(declare-fun x134 () Int)
(declare-fun x845 () Int)
(declare-fun x1934 () Int)
(declare-fun x103 () Int)
(declare-fun x1349 () Int)
(declare-fun x1656 () Bool)
(declare-fun x1014 () Int)
(declare-fun x1214 () Int)
(declare-fun x1086 () Int)
(declare-fun x1280 () Int)
(declare-fun x1439 () Int)
(declare-fun x1368 () Bool)
(declare-fun x2000 () Int)
(declare-fun x659 () Bool)
(declare-fun x50 () Bool)
(declare-fun x582 () Int)
(declare-fun x930 () Int)
(declare-fun x602 () Int)
(declare-fun x991 () Int)
(declare-fun x311 () Int)
(declare-fun x1415 () Int)
(declare-fun x1358 () Int)
(declare-fun x1254 () Int)
(declare-fun x1948 () Int)
(declare-fun x1765 () Bool)
(declare-fun x1206 () Int)
(declare-fun x1322 () Int)
(declare-fun x1359 () Int)
(declare-fun x404 () Int)
(declare-fun x876 () Bool)
(declare-fun x225 () Int)
(declare-fun x1768 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x1037 () Int)
(declare-fun x589 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x907 () Int)
(declare-fun x104 () Int)
(declare-fun x1509 () Int)
(declare-fun x89 () Bool)
(declare-fun x1221 () Int)
(declare-fun x283 () Int)
(declare-fun x456 () Int)
(declare-fun x1661 () Int)
(declare-fun x544 () Bool)
(declare-fun x1247 () Int)
(declare-fun x1781 () Int)
(declare-fun x1176 () Bool)
(declare-fun x1063 () Int)
(declare-fun x1882 () Int)
(declare-fun x450 () Int)
(declare-fun x116 () Int)
(declare-fun x1555 () Int)
(declare-fun x285 () Int)
(declare-fun x290 () Int)
(declare-fun x474 () Int)
(declare-fun x1563 () Int)
(declare-fun x597 () Int)
(declare-fun x1744 () Int)
(declare-fun x844 (Int) Int)
(declare-fun x1589 () Bool)
(declare-fun x1142 () Int)
(declare-fun x1619 () Bool)
(declare-fun x171 () Int)
(declare-fun x722 () Int)
(declare-fun x891 () Int)
(declare-fun x360 () Bool)
(declare-fun x969 () Bool)
(declare-fun x1875 () Int)
(declare-fun x1541 () Bool)
(declare-fun x1591 () Int)
(declare-fun x1442 () Bool)
(declare-fun x526 () Int)
(declare-fun x1972 () Int)
(declare-fun x1677 () Int)
(declare-fun x237 () Int)
(declare-fun x1423 () Int)
(declare-fun x411 () Int)
(declare-fun x519 () Bool)
(declare-fun x851 () Int)
(declare-fun x784 () Int)
(declare-fun x1905 () Int)
(declare-fun x345 () Int)
(declare-fun x1789 () Int)
(declare-fun x72 () Int)
(declare-fun x1806 () Int)
(declare-fun x159 () Int)
(declare-fun x1834 () Int)
(declare-fun x1499 () Bool)
(declare-fun x149 () Bool)
(declare-fun x390 () Int)
(declare-fun x412 () Int)
(declare-fun x1291 () Bool)
(declare-fun x934 () Int)
(declare-fun x398 () Int)
(declare-fun x550 () Int)
(declare-fun x1370 () Bool)
(declare-fun x788 () Int)
(declare-fun x318 () Int)
(declare-fun x1629 () Int)
(declare-fun x1946 () Int)
(declare-fun x1914 () Int)
(declare-fun x1940 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1364 () Int)
(declare-fun x695 (Int) Int)
(declare-fun x840 (Int) Int)
(declare-fun x201 () Bool)
(declare-fun x2007 () Int)
(declare-fun x883 () Bool)
(declare-fun x78 () Int)
(declare-fun x300 () Int)
(declare-fun x1718 () Int)
(declare-fun x690 () Int)
(declare-fun x1886 () Int)
(declare-fun x1992 () Bool)
(declare-fun x508 () Int)
(declare-fun x1907 () Int)
(declare-fun x302 () Int)
(declare-fun x797 () Int)
(declare-fun x1657 () Int)
(declare-fun x808 () Int)
(declare-fun x1663 () Int)
(declare-fun x1520 () Bool)
(declare-fun x91 () Int)
(declare-fun x112 () Int)
(declare-fun x1285 () Int)
(declare-fun x548 () Int)
(declare-fun x299 () Int)
(declare-fun x69 () Bool)
(declare-fun x257 () Int)
(declare-fun x1885 () Int)
(declare-fun x1282 () Int)
(declare-fun x827 () Int)
(declare-fun x1757 () Int)
(declare-fun x1122 () Bool)
(declare-fun x1487 () Int)
(declare-fun x173 () Int)
(declare-fun x312 () Bool)
(declare-fun x1729 () Int)
(declare-fun x165 () Int)
(declare-fun x1203 () Int)
(declare-fun x375 () Bool)
(declare-fun x1227 () Int)
(declare-fun x1426 () Int)
(declare-fun x1204 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x1205 () Int)
(declare-fun x1189 () Int)
(declare-fun x102 () Int)
(declare-fun x1051 () Int)
(declare-fun x1588 () Int)
(declare-fun x1104 () Bool)
(declare-fun x142 () Int)
(declare-fun x99 () Int)
(declare-fun x273 () Int)
(declare-fun x1470 () Bool)
(declare-fun x414 () Int)
(declare-fun x897 () Int)
(declare-fun x47 (Int) Int)
(declare-fun x343 () Bool)
(declare-fun x406 () Bool)
(declare-fun x1570 () Int)
(declare-fun x938 () Int)
(declare-fun x1263 () Bool)
(declare-fun x575 () Int)
(declare-fun x1463 () Bool)
(declare-fun x1 () Int)
(declare-fun x1721 () Int)
(declare-fun x216 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x1615 () Int)
(declare-fun x119 () Bool)
(declare-fun x254 () Int)
(declare-fun x1915 () Int)
(declare-fun x385 () Int)
(declare-fun x454 () Int)
(declare-fun x1299 () Bool)
(declare-fun x640 () Int)
(declare-fun x98 () Bool)
(declare-fun x527 () Int)
(declare-fun x1407 () Int)
(declare-fun x828 () Int)
(declare-fun x633 () Int)
(declare-fun x755 () Int)
(declare-fun x525 () Int)
(declare-fun x231 () Bool)
(declare-fun x983 () Int)
(declare-fun x578 () Int)
(declare-fun x1250 () Int)
(declare-fun x1092 () Int)
(declare-fun x1805 () Int)
(declare-fun x1098 () Int)
(declare-fun x408 () Int)
(declare-fun x1489 () Bool)
(declare-fun x838 () Int)
(declare-fun x1715 () Bool)
(declare-fun x1138 () Int)
(declare-fun x638 () Int)
(declare-fun x229 () Int)
(declare-fun x1188 () Int)
(declare-fun x1628 () Int)
(declare-fun x1609 () Int)
(declare-fun x478 () Int)
(declare-fun x1301 () Int)
(declare-fun x1008 () Int)
(declare-fun x395 () Bool)
(declare-fun x1120 () Int)
(declare-fun x554 () Int)
(declare-fun x895 () Int)
(declare-fun x1512 () Bool)
(declare-fun x1459 () Int)
(declare-fun x960 () Bool)
(declare-fun x304 () Int)
(declare-fun x717 () Int)
(declare-fun x426 () Int)
(declare-fun x427 (Int) Int)
(declare-fun x1420 () Int)
(declare-fun x974 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x581 () Bool)
(declare-fun x586 () Int)
(declare-fun x1144 () Bool)
(declare-fun x381 () Int)
(declare-fun x1279 () Bool)
(declare-fun x1161 () Int)
(declare-fun x1431 () Bool)
(declare-fun x810 () Bool)
(declare-fun x1369 () Int)
(declare-fun x918 () Int)
(declare-fun x604 () Int)
(declare-fun x106 () Int)
(declare-fun x679 () Int)
(declare-fun x1461 () Int)
(declare-fun x486 () Int)
(declare-fun x463 () Bool)
(declare-fun x1598 () Int)
(declare-fun x83 () Int)
(declare-fun x990 () Int)
(declare-fun x713 () Int)
(declare-fun x1328 () Int)
(declare-fun x1219 () Int)
(declare-fun x472 () Int)
(declare-fun x1894 () Int)
(declare-fun x1965 () Int)
(declare-fun x1224 () Int)
(declare-fun x1443 () Int)
(declare-fun x1147 () Int)
(declare-fun x188 () Int)
(declare-fun x1155 () Bool)
(declare-fun x215 () Int)
(declare-fun x1814 () Bool)
(declare-fun x935 () Int)
(declare-fun x1616 () Int)
(declare-fun x970 () Int)
(declare-fun x881 () Int)
(declare-fun x1587 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x520 () Int)
(declare-fun x985 () Int)
(declare-fun x1302 () Int)
(declare-fun x1159 () Int)
(declare-fun x1911 () Int)
(declare-fun x1639 () Int)
(declare-fun x455 () Int)
(declare-fun x1816 () Bool)
(declare-fun x1326 () Int)
(declare-fun x753 () Bool)
(declare-fun x418 () Int)
(declare-fun x706 () Int)
(declare-fun x683 (Int) Int)
(declare-fun x1794 () Int)
(declare-fun x1731 () Int)
(declare-fun x1999 () Int)
(declare-fun x1055 () Int)
(declare-fun x114 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x2003 () Int)
(declare-fun x382 () Int)
(declare-fun x1183 () Int)
(declare-fun x1837 () Int)
(declare-fun x624 () Int)
(declare-fun x577 () Int)
(declare-fun x914 () Int)
(declare-fun x250 () Int)
(declare-fun x475 () Int)
(declare-fun x1304 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x1633 () Int)
(declare-fun x332 () Int)
(declare-fun x1082 () Int)
(declare-fun x1450 () Int)
(declare-fun x1389 () Int)
(declare-fun x1818 () Bool)
(declare-fun x774 () Bool)
(declare-fun x568 () Int)
(declare-fun x1181 () Bool)
(declare-fun x937 () Int)
(declare-fun x1035 () Int)
(declare-fun x877 () Int)
(declare-fun x322 () Int)
(declare-fun x860 () Int)
(declare-fun x1643 () Int)
(declare-fun x832 () Int)
(declare-fun x1306 () Int)
(declare-fun x61 () Bool)
(declare-fun x249 () Int)
(declare-fun x1409 () Int)
(declare-fun x1321 () Int)
(declare-fun x1201 () Int)
(declare-fun x1955 () Int)
(declare-fun x1096 () Int)
(declare-fun x287 () Int)
(declare-fun x1962 () Int)
(declare-fun x1294 () Int)
(declare-fun x712 () Int)
(declare-fun x391 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1853 () Int)
(declare-fun x1467 () Int)
(declare-fun x772 () Int)
(declare-fun x595 () Int)
(declare-fun x975 () Int)
(declare-fun x1022 () Bool)
(declare-fun x202 () Int)
(declare-fun x1839 () Int)
(declare-fun x1124 () Int)
(declare-fun x600 () Int)
(declare-fun x181 (Int) Int)
(declare-fun x1953 () Int)
(declare-fun x1315 () Int)
(declare-fun x1343 () Int)
(declare-fun x10 () Int)
(declare-fun x1778 () Int)
(declare-fun x1535 () Int)
(declare-fun x133 () Int)
(declare-fun x530 () Int)
(declare-fun x1648 () Int)
(declare-fun x266 () Int)
(declare-fun x1527 () Int)
(declare-fun x513 () Int)
(declare-fun x97 () Int)
(declare-fun x777 () Int)
(declare-fun x31 () Bool)
(declare-fun x1904 () Int)
(declare-fun x1667 () Bool)
(declare-fun x351 () Int)
(declare-fun x493 () Int)
(declare-fun x1313 () Bool)
(declare-fun x484 () Bool)
(declare-fun x603 () Bool)
(declare-fun x762 () Int)
(declare-fun x1860 () Int)
(declare-fun x1191 () Bool)
(declare-fun x557 () Int)
(declare-fun x1820 () Int)
(declare-fun x767 () Int)
(declare-fun x13 () Int)
(declare-fun x1845 () Int)
(declare-fun x26 () Bool)
(declare-fun x1464 () Int)
(declare-fun x502 () Bool)
(declare-fun x626 () Int)
(declare-fun x232 () Bool)
(declare-fun x928 () Int)
(declare-fun x383 () Int)
(declare-fun x590 () Bool)
(declare-fun x729 () Int)
(declare-fun x1746 () Int)
(declare-fun x75 () Int)
(declare-fun x9 () Bool)
(declare-fun x2005 () Int)
(declare-fun x1394 () Int)
(declare-fun x1292 () Int)
(declare-fun x585 () Bool)
(declare-fun x910 () Int)
(declare-fun x1003 () Int)
(declare-fun x1578 () Int)
(declare-fun x1696 () Int)
(declare-fun x1456 () Int)
(declare-fun x997 () Int)
(declare-fun x1954 () Bool)
(declare-fun x1465 () Int)
(declare-fun x421 () Int)
(declare-fun x1961 () Int)
(declare-fun x413 () Int)
(declare-fun x1876 () Int)
(declare-fun x1577 () Bool)
(declare-fun x857 () Int)
(declare-fun x205 () Int)
(declare-fun x1559 () Int)
(declare-fun x186 () Int)
(declare-fun x1607 () Int)
(declare-fun x1057 () Bool)
(declare-fun x1565 () Int)
(declare-fun x1833 () Bool)
(declare-fun x703 () Int)
(declare-fun x354 () Int)
(declare-fun x556 () Bool)
(declare-fun x899 () Bool)
(declare-fun x94 () Int)
(declare-fun x1558 () Bool)
(declare-fun x1187 () Int)
(declare-fun x901 () Int)
(declare-fun x563 () Int)
(declare-fun x549 () Int)
(declare-fun x210 () Int)
(declare-fun x77 () Bool)
(declare-fun x460 () Bool)
(declare-fun x742 () Int)
(declare-fun x1938 () Int)
(declare-fun x1421 () Bool)
(declare-fun x738 () Int)
(declare-fun x657 () Int)
(declare-fun x559 () Int)
(declare-fun x1998 () Int)
(declare-fun x1334 () Int)
(declare-fun x1831 () Int)
(declare-fun x196 () Bool)
(declare-fun x593 () Int)
(declare-fun x720 () Int)
(declare-fun x1422 (Int) Int)
(declare-fun x158 () Int)
(declare-fun x759 () Int)
(declare-fun x490 () Int)
(declare-fun x1484 () Int)
(declare-fun x1040 () Int)
(declare-fun x74 () Int)
(declare-fun x347 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1378 () Int)
(declare-fun x536 () Int)
(declare-fun x869 () Int)
(declare-fun x512 () Int)
(declare-fun x524 () Int)
(declare-fun x1483 () Int)
(declare-fun x794 () Int)
(declare-fun x650 () Int)
(declare-fun x425 () Int)
(declare-fun x567 () Int)
(declare-fun x117 () Bool)
(declare-fun x1437 () Int)
(declare-fun x608 () Int)
(declare-fun x994 () Int)
(declare-fun x1557 () Bool)
(declare-fun x355 () Int)
(declare-fun x1844 () Int)
(declare-fun x373 () Int)
(declare-fun x1554 () Bool)
(declare-fun x261 (Int Int Int Int) Int)
(declare-fun x369 () Int)
(declare-fun x841 () Int)
(declare-fun x1385 () Bool)
(declare-fun x908 () Int)
(declare-fun x749 () Int)
(declare-fun x211 () Bool)
(declare-fun x611 () Int)
(declare-fun x1268 () Bool)
(declare-fun x535 () Int)
(declare-fun x1865 () Int)
(declare-fun x1457 () Bool)
(declare-fun x921 () Int)
(declare-fun x768 () Int)
(declare-fun x574 (Int) Int)
(declare-fun x464 () Int)
(declare-fun x145 () Int)
(declare-fun x972 () Int)
(declare-fun x965 () Bool)
(declare-fun x1314 () Int)
(declare-fun x1116 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x711 () Int)
(declare-fun x654 () Int)
(declare-fun x86 () Int)
(declare-fun x644 () Bool)
(declare-fun x1973 () Int)
(declare-fun x996 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1199 () Int)
(declare-fun x1829 () Int)
(declare-fun x1951 () Int)
(declare-fun x771 () Int)
(declare-fun x872 (Int) Int)
(declare-fun x1404 () Int)
(declare-fun x1140 () Bool)
(declare-fun x533 () Int)
(declare-fun x1977 () Int)
(declare-fun x710 () Bool)
(declare-fun x641 (Int Int Int Int) Int)
(declare-fun x814 (Int) Int)
(declare-fun x629 () Int)
(declare-fun x35 () Bool)
(declare-fun x719 () Int)
(declare-fun x1130 () Bool)
(declare-fun x282 () Int)
(declare-fun x821 () Int)
(declare-fun x218 () Int)
(declare-fun x1988 () Int)
(declare-fun x1494 (Int) Bool)
(declare-fun x716 () Bool)
(declare-fun x672 () Int)
(declare-fun x1474 () Int)
(declare-fun x653 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x1318 () Int)
(declare-fun x123 () Int)
(declare-fun x1610 () Int)
(declare-fun x16 () Int)
(declare-fun x168 () Int)
(declare-fun x40 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x298 () Int)
(declare-fun x441 () Int)
(declare-fun x1928 () Int)
(declare-fun x125 () Int)
(declare-fun x1672 () Int)
(declare-fun x1337 () Bool)
(declare-fun x662 () Int)
(declare-fun x1089 () Int)
(declare-fun x220 () Int)
(declare-fun x1222 () Int)
(declare-fun x288 () Int)
(declare-fun x1275 () Bool)
(declare-fun x773 () Int)
(declare-fun x1441 () Int)
(declare-fun x1056 () Int)
(declare-fun x942 () Int)
(declare-fun x1172 () Int)
(declare-fun x715 () Int)
(declare-fun x936 (Int) Int)
(declare-fun x943 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x1475 () Int)
(declare-fun x1935 () Int)
(declare-fun x140 () Int)
(declare-fun x259 () Int)
(declare-fun x268 () Bool)
(declare-fun x875 () Int)
(declare-fun x328 () Int)
(declare-fun x1345 () Int)
(declare-fun x1919 () Int)
(declare-fun x129 () Int)
(declare-fun x1192 () Int)
(declare-fun x1513 () Int)
(declare-fun x1427 () Int)
(declare-fun x1290 () Int)
(declare-fun x1178 () Int)
(declare-fun x545 () Int)
(declare-fun x671 () Bool)
(declare-fun x1146 () Int)
(declare-fun x798 () Int)
(declare-fun x487 () Int)
(declare-fun x925 () Int)
(declare-fun x101 () Int)
(declare-fun x1788 () Int)
(declare-fun x816 () Int)
(declare-fun x1062 () Int)
(declare-fun x831 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1382 () Int)
(declare-fun x294 () Bool)
(declare-fun x775 () Int)
(declare-fun x63 () Int)
(declare-fun x1228 () Int)
(declare-fun x743 () Int)
(declare-fun x939 () Int)
(declare-fun x1859 (Int) Int)
(declare-fun x1012 () Int)
(declare-fun x147 () Int)
(declare-fun x961 () Int)
(declare-fun x618 () Int)
(declare-fun x830 () Int)
(declare-fun x1491 () Int)
(declare-fun x1015 () Int)
(declare-fun x223 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1453 () Int)
(declare-fun x596 (Int) Int)
(declare-fun x424 () Int)
(declare-fun x1079 () Int)
(declare-fun x665 () Int)
(declare-fun x176 () Int)
(declare-fun x1522 () Int)
(declare-fun x850 () Int)
(declare-fun x856 () Int)
(declare-fun x511 () Bool)
(declare-fun x770 () Bool)
(declare-fun x886 () Bool)
(declare-fun x248 () Bool)
(declare-fun x109 () Int)
(declare-fun x1194 () Int)
(declare-fun x739 () Int)
(declare-fun x639 () Int)
(declare-fun x1112 () Bool)
(declare-fun x916 () Bool)
(declare-fun x787 () Int)
(declare-fun x1293 () Int)
(declare-fun x1880 () Int)
(declare-fun x1137 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x212 () Int)
(declare-fun x437 () Int)
(declare-fun x172 (Int Int) Int)
(declare-fun x1339 () Bool)
(declare-fun x636 () Int)
(declare-fun x651 () Int)
(declare-fun x1763 () Int)
(declare-fun x41 () Int)
(declare-fun x1534 () Int)
(declare-fun x1410 () Int)
(declare-fun x754 () Int)
(declare-fun x740 () Int)
(declare-fun x1742 () Int)
(declare-fun x1612 () Int)
(declare-fun x854 () Bool)
(declare-fun x955 () Int)
(declare-fun x1375 () Int)
(declare-fun x1854 () Int)
(declare-fun x1097 () Int)
(declare-fun x166 () Bool)
(declare-fun x1526 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x297 () Int)
(declare-fun x8 () Int)
(declare-fun x1728 () Int)
(declare-fun x718 () Bool)
(declare-fun x503 () Int)
(declare-fun x1723 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1486 () Int)
(declare-fun x594 () Int)
(declare-fun x737 (Int) Int)
(declare-fun x317 () Int)
(declare-fun x222 () Int)
(declare-fun x319 () Int)
(declare-fun x286 () Int)
(declare-fun x1445 () Int)
(declare-fun x1050 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x459 () Int)
(declare-fun x175 () Int)
(declare-fun x813 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x678 () Int)
(declare-fun x894 () Int)
(declare-fun x1406 () Int)
(declare-fun x980 () Bool)
(declare-fun x765 () Int)
(declare-fun x1937 () Int)
(declare-fun x643 () Int)
(declare-fun x986 () Bool)
(declare-fun x890 () Bool)
(declare-fun x1730 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1036 () Int)
(declare-fun x534 () Int)
(declare-fun x1670 () Bool)
(declare-fun x1640 () Int)
(declare-fun x1893 () Bool)
(declare-fun x553 () Int)
(declare-fun x1119 (Int) Int)
(declare-fun x1253 () Int)
(declare-fun x179 () Int)
(declare-fun x1872 () Int)
(declare-fun x152 () Bool)
(declare-fun x1233 () Int)
(declare-fun x1662 () Int)
(declare-fun x1855 () Int)
(declare-fun x804 () Bool)
(declare-fun x1286 () Int)
(declare-fun x1379 () Int)
(declare-fun x1207 () Int)
(declare-fun x917 () Int)
(declare-fun x1902 () Int)
(declare-fun x1032 () Int)
(declare-fun x1171 () Int)
(declare-fun x1168 () Int)
(declare-fun x1007 () Int)
(declare-fun x1692 () Int)
(declare-fun x1688 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x583 () Int)
(declare-fun x579 () Bool)
(declare-fun x180 () Int)
(declare-fun x1838 () Int)
(declare-fun x335 () Int)
(declare-fun x1432 () Int)
(declare-fun x430 (Int) Int)
(declare-fun x1158 () Int)
(declare-fun x507 () Int)
(declare-fun x449 () Int)
(declare-fun x741 () Int)
(declare-fun x782 () Bool)
(declare-fun x1469 () Int)
(declare-fun x144 () Int)
(declare-fun x358 () Int)
(declare-fun x217 (Int) Int)
(declare-fun x20 () Int)
(declare-fun x1921 () Int)
(declare-fun x1873 () Int)
(declare-fun x1272 (Int) Int)
(declare-fun x619 () Int)
(declare-fun x51 (Int) Int)
(declare-fun x906 () Int)
(declare-fun x279 () Int)
(declare-fun x1969 (Int) Int)
(declare-fun x796 () Int)
(declare-fun x416 () Bool)
(declare-fun x1843 (Int) Int)
(declare-fun x336 () Int)
(declare-fun x326 () Int)
(declare-fun x1485 () Int)
(declare-fun x1327 () Int)
(declare-fun x1353 () Int)
(declare-fun x1797 () Int)
(declare-fun x642 () Int)
(declare-fun x1836 () Int)
(declare-fun x467 () Int)
(declare-fun x613 () Int)
(declare-fun x880 () Int)
(declare-fun x1269 () Int)
(declare-fun x88 () Int)
(declare-fun x1963 () Int)
(declare-fun x912 () Int)
(declare-fun x452 () Bool)
(declare-fun x587 () Int)
(declare-fun x443 () Bool)
(declare-fun x340 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1083 () Int)
(declare-fun x71 () Int)
(declare-fun x705 () Int)
(declare-fun x184 () Bool)
(declare-fun x1751 () Int)
(declare-fun x1995 () Int)
(declare-fun x1288 () Int)
(declare-fun x1996 () Bool)
(declare-fun x296 () Int)
(declare-fun x776 () Bool)
(declare-fun x1403 () Int)
(declare-fun x896 () Bool)
(declare-fun x889 () Int)
(declare-fun x954 () Int)
(declare-fun x1620 () Bool)
(declare-fun x744 () Bool)
(declare-fun x1132 () Int)
(declare-fun x1524 () Int)
(declare-fun x1316 () Int)
(declare-fun x1927 () Int)
(declare-fun x1687 () Int)
(declare-fun x541 () Int)
(declare-fun x384 () Int)
(declare-fun x1460 () Int)
(declare-fun x1243 () Int)
(declare-fun x1931 () Int)
(declare-fun x1546 (Int) Int)
(declare-fun x1674 () Int)
(declare-fun x483 () Int)
(declare-fun x206 () Bool)
(declare-fun x1417 () Int)
(declare-fun x702 () Int)
(declare-fun x632 () Int)
(declare-fun x226 () Int)
(declare-fun x151 () Int)
(declare-fun x829 () Bool)
(declare-fun x631 () Int)
(declare-fun x539 () Bool)
(declare-fun x1164 () Int)
(declare-fun x32 () Int)
(declare-fun x1920 () Int)
(declare-fun x1307 () Bool)
(declare-fun x622 () Int)
(declare-fun x510 () Int)
(declare-fun x1613 () Bool)
(declare-fun x735 () Bool)
(declare-fun x607 () Bool)
(declare-fun x661 () Int)
(declare-fun x361 () Int)
(declare-fun x1949 () Int)
(declare-fun x235 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1274 () Int)
(declare-fun x121 () Int)
(declare-fun x1539 () Int)
(declare-fun x1281 () Int)
(declare-fun x1455 () Int)
(declare-fun x904 (Int) Int)
(declare-fun x757 () Bool)
(declare-fun x693 () Int)
(declare-fun x1861 () Int)
(declare-fun x1900 () Bool)
(declare-fun x1196 () Int)
(declare-fun x1819 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1386 () Bool)
(declare-fun x837 () Int)
(declare-fun x1110 () Int)
(declare-fun x1856 () Int)
(declare-fun x1983 () Int)
(declare-fun x763 () Int)
(declare-fun x1101 () Int)
(declare-fun x1786 () Bool)
(declare-fun x95 () Int)
(declare-fun x1507 () Int)
(declare-fun x1952 () Int)
(declare-fun x409 () Int)
(declare-fun x364 () Int)
(declare-fun x1428 () Int)
(declare-fun x566 () Int)
(declare-fun x926 () Int)
(declare-fun x60 () Int)
(declare-fun x1478 () Int)
(declare-fun x859 () Bool)
(declare-fun x1772 () Int)
(declare-fun x1622 () Int)
(declare-fun x1862 () Int)
(declare-fun x981 () Int)
(declare-fun x368 () Bool)
(declare-fun x1671 () Int)
(declare-fun x573 () Int)
(declare-fun x1028 () Int)
(declare-fun x1395 () Int)
(declare-fun x241 () Int)
(declare-fun x1424 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x1156 () Int)
(declare-fun x995 () Bool)
(declare-fun x1811 () Int)
(declare-fun x1994 () Int)
(declare-fun x800 () Int)
(declare-fun x1419 () Int)
(declare-fun x327 () Int)
(declare-fun x946 () Int)
(declare-fun x1538 () Bool)
(declare-fun x1047 () Int)
(declare-fun x1540 (Int Int) Int)
(declare-fun x1553 () Int)
(declare-fun x1531 () Bool)
(declare-fun x465 () Int)
(declare-fun x187 () Int)
(declare-fun x1170 () Int)
(declare-fun x1157 () Int)
(declare-fun x1273 () Int)
(declare-fun x485 () Int)
(declare-fun x509 () Int)
(declare-fun x1621 () Bool)
(declare-fun x334 () Bool)
(declare-fun x45 () Int)
(declare-fun x1515 () Int)
(declare-fun x692 () Int)
(declare-fun x865 (Int) Int)
(declare-fun x200 () Int)
(declare-fun x1521 () Int)
(declare-fun x1054 () Int)
(declare-fun x388 () Bool)
(declare-fun x1452 () Int)
(declare-fun x1072 () Bool)
(declare-fun x766 () Int)
(declare-fun x1265 () Int)
(declare-fun x1049 () Int)
(declare-fun x1724 () Int)
(declare-fun x1735 () Int)
(declare-fun x1710 () Int)
(declare-fun x305 () Bool)
(declare-fun x701 () Int)
(declare-fun x139 () Bool)
(declare-fun x504 (Int) Int)
(declare-fun x1850 () Int)
(declare-fun x1976 () Int)
(declare-fun x1425 () Bool)
(declare-fun x1215 () Int)
(declare-fun x979 () Int)
(declare-fun x867 () Bool)
(declare-fun x909 () Int)
(declare-fun x350 () Bool)
(declare-fun x1642 () Int)
(declare-fun x811 () Int)
(declare-fun x1202 () Int)
(declare-fun x1348 () Int)
(declare-fun x306 () Bool)
(declare-fun x817 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1986 () Int)
(declare-fun x1044 () Bool)
(declare-fun x1073 () Int)
(declare-fun x793 (Int) Int)
(declare-fun x1377 () Int)
(declare-fun x66 () Bool)
(declare-fun x2004 () Int)
(declare-fun x610 () Int)
(declare-fun x1774 () Int)
(declare-fun x674 () Int)
(declare-fun x1652 () Int)
(declare-fun x43 () Int)
(declare-fun x1989 () Int)
(declare-fun x1165 () Bool)
(declare-fun x958 (Int) Int)
(declare-fun x623 () Int)
(declare-fun x1094 () Bool)
(declare-fun x1283 () Int)
(declare-fun x21 () Int)
(declare-fun x42 (Int) Int)
(declare-fun x546 () Int)
(declare-fun x795 () Int)
(declare-fun x1397 () Int)
(declare-fun x1429 () Bool)
(declare-fun x664 () Int)
(declare-fun x422 () Int)
(declare-fun x736 () Int)
(declare-fun x1641 () Int)
(declare-fun x480 () Int)
(declare-fun x1867 () Int)
(declare-fun x4 (Int) Int)
(declare-fun x1038 () Bool)
(declare-fun x1324 () Int)
(declare-fun x479 () Bool)
(declare-fun x182 () Int)
(declare-fun x1649 () Bool)
(declare-fun x1295 () Int)
(declare-fun x1694 () Int)
(declare-fun x1782 () Bool)
(declare-fun x453 () Int)
(declare-fun x696 () Int)
(declare-fun x1887 () Int)
(declare-fun x913 () Bool)
(declare-fun x725 () Int)
(declare-fun x764 () Int)
(declare-fun x1631 () Bool)
(declare-fun x18 () Int)
(declare-fun x1100 () Bool)
(declare-fun x1532 () Int)
(declare-fun x396 () Bool)
(declare-fun x760 () Bool)
(declare-fun x477 () Bool)
(declare-fun x433 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1868 () Int)
(declare-fun x1705 () Bool)
(declare-fun x726 () Int)
(declare-fun x1874 () Int)
(declare-fun x599 () Int)
(declare-fun x989 () Int)
(declare-fun x1918 () Int)
(declare-fun x1968 () Bool)
(declare-fun x324 (Int Int Int) Int)
(declare-fun x301 () Int)
(declare-fun x1835 () Int)
(declare-fun x1434 () Int)
(declare-fun x1808 () Bool)
(declare-fun x1109 () Int)
(declare-fun x625 () Int)
(declare-fun x1444 () Int)
(declare-fun x1608 () Bool)
(declare-fun x1149 () Int)
(declare-fun x1451 () Int)
(declare-fun x429 () Int)
(declare-fun x466 () Int)
(declare-fun x1810 () Int)
(declare-fun x1413 () Int)
(declare-fun x570 () Int)
(declare-fun x615 () Bool)
(declare-fun x1218 () Int)
(declare-fun x1077 () Int)
(declare-fun x1308 () Int)
(declare-fun x239 () Int)
(declare-fun x627 () Int)
(declare-fun x1645 () Int)
(declare-fun x1891 () Int)
(declare-fun x542 () Int)
(declare-fun x1892 () Int)
(declare-fun x468 () Int)
(declare-fun x1367 () Bool)
(declare-fun x263 () Int)
(declare-fun x3 () Int)
(declare-fun x1405 (Int) Int)
(declare-fun x256 () Int)
(declare-fun x531 () Int)
(declare-fun x560 () Int)
(declare-fun x1899 () Int)
(declare-fun x2006 () Int)
(declare-fun x346 () Int)
(declare-fun x691 () Int)
(declare-fun x592 () Int)
(declare-fun x428 () Int)
(declare-fun x689 () Int)
(declare-fun x1877 () Int)
(declare-fun x929 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x1121 () Int)
(declare-fun x1502 () Bool)
(declare-fun x170 () Int)
(declare-fun x337 () Int)
(declare-fun x1675 () Int)
(declare-fun x1956 () Int)
(declare-fun x1825 () Int)
(declare-fun x1418 () Int)
(declare-fun x1583 () Int)
(declare-fun x1084 () Bool)
(declare-fun x750 () Int)
(declare-fun x694 () Int)
(declare-fun x959 () Int)
(declare-fun x85 () Bool)
(declare-fun x267 () Int)
(declare-fun x564 () Int)
(declare-fun x1396 () Int)
(declare-fun x265 () Bool)
(declare-fun x128 () Bool)
(declare-fun x1381 () Int)
(declare-fun x1048 () Int)
(declare-fun x628 () Int)
(declare-fun x728 () Int)
(declare-fun x1074 () Int)
(declare-fun x407 () Int)
(declare-fun x663 () Int)
(declare-fun x1947 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x157 () Int)
(declare-fun x365 () Int)
(declare-fun x1936 () Bool)
(declare-fun x1600 () Int)
(declare-fun x1879 () Int)
(declare-fun x227 () Int)
(declare-fun x1702 () Bool)
(declare-fun x67 () Int)
(declare-fun x1573 () Int)
(declare-fun x834 () Bool)
(declare-fun x244 () Int)
(declare-fun x1433 () Int)
(declare-fun x92 () Bool)
(declare-fun x1258 (Int) Int)
(declare-fun x1984 () Int)
(declare-fun x1330 () Int)
(declare-fun x684 (Int Int Int Int Int Int) Int)
(declare-fun x1289 () Bool)
(declare-fun x700 () Bool)
(declare-fun x864 () Int)
(declare-fun x1173 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x191 () Bool)
(declare-fun x1341 () Int)
(declare-fun x1807 () Int)
(declare-fun x1081 () Int)
(declare-fun x637 () Int)
(declare-fun x1618 () Int)
(declare-fun x277 () Int)
(declare-fun x1745 () Bool)
(declare-fun x323 (Int Int) Int)
(declare-fun x1601 () Bool)
(declare-fun x819 () Int)
(declare-fun x1987 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x131 () Bool)
(declare-fun x646 (Int) Int)
(declare-fun x669 () Bool)
(declare-fun x1739 () Int)
(declare-fun x1636 () Int)
(declare-fun x1391 () Int)
(declare-fun x1567 () Bool)
(declare-fun x591 () Int)
(declare-fun x1560 () Int)
(declare-fun x284 () Int)
(declare-fun x523 () Bool)
(declare-fun x971 () Int)
(declare-fun x1039 () Int)
(declare-fun x1529 (Int) Int)
(declare-fun x80 () Int)
(declare-fun x366 () Int)
(declare-fun x1930 () Bool)
(declare-fun x419 () Int)
(declare-fun x1593 () Int)
(declare-fun x192 () Int)
(declare-fun x1842 () Int)
(declare-fun x1498 () Int)
(declare-fun x1791 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x1733 () Int)
(declare-fun x1939 () Int)
(declare-fun x278 () Int)
(declare-fun x1115 () Int)
(declare-fun x1148 () Bool)
(declare-fun x190 () Bool)
(declare-fun x2009 () Int)
(declare-fun x1357 () Int)
(declare-fun x1193 () Bool)
(declare-fun x496 () Int)
(declare-fun x1117 () Int)
(declare-fun x1278 () Int)
(declare-fun x514 () Bool)
(declare-fun x569 () Bool)
(declare-fun x434 () Int)
(declare-fun x122 () Int)
(declare-fun x878 () Int)
(declare-fun x825 () Bool)
(declare-fun x769 () Int)
(declare-fun x113 () Int)
(declare-fun x1095 () Bool)
(declare-fun x676 () Int)
(declare-fun x344 () Int)
(declare-fun x862 () Int)
(declare-fun x1864 () Int)
(declare-fun x660 (Int) Int)
(declare-fun x1857 () Int)
(declare-fun x24 () Int)
(declare-fun x1242 () Int)
(declare-fun x1497 () Bool)
(declare-fun x1023 () Int)
(declare-fun x1659 () Int)
(declare-fun x281 () Int)
(declare-fun x1771 () Int)
(declare-fun x1175 () Int)
(declare-fun x295 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1277 () Int)
(declare-fun x379 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1617 () Int)
(declare-fun x178 () Int)
(declare-fun x314 () Int)
(declare-fun x17 () Int)
(declare-fun x96 () Int)
(declare-fun x167 () Int)
(declare-fun x1435 () Int)
(declare-fun x1759 () Int)
(declare-fun x580 () Int)
(declare-fun x1708 () Int)
(declare-fun x645 () Int)
(declare-fun x1041 () Bool)
(declare-fun x714 () Int)
(declare-fun x1518 () Int)
(declare-fun x1160 () Int)
(declare-fun x1627 () Bool)
(declare-fun x655 () Bool)
(declare-fun x367 () Int)
(declare-fun x1852 () Bool)
(declare-fun x207 () Bool)
(declare-fun x214 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1910 () Int)
(declare-fun x1941 () Int)
(declare-fun x1898 (Int) Int)
(declare-fun x471 () Int)
(declare-fun x1713 () Int)
(declare-fun x1913 () Int)
(declare-fun x940 () Bool)
(declare-fun x405 () Int)
(declare-fun x748 () Int)
(declare-fun x143 () Bool)
(declare-fun x1758 () Int)
(declare-fun x734 () Int)
(declare-fun x1075 () Int)
(declare-fun x1093 () Int)
(declare-fun x677 () Bool)
(declare-fun x1582 () Int)
(declare-fun x790 () Int)
(declare-fun x751 () Int)
(declare-fun x601 () Int)
(declare-fun x781 () Int)
(declare-fun x670 (Int) Int)
(declare-fun x789 () Int)
(declare-fun x394 () Int)
(declare-fun x342 () Int)
(declare-fun x420 () Int)
(declare-fun x1711 (Int) Int)
(declare-fun x481 () Int)
(declare-fun x727 () Int)
(declare-fun x968 () Int)
(define-fun x1355 ((x812 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x812) (>= x812 0)) x812 (- x812 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x920 ((x812 Int)) Int (ite (and (< x812 0) (>= x812 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x812 115792089237316195423570985008687907853269984665640564039457584007913129639936) x812))
(define-fun x1454 ((x812 Int)) Int (ite (and (>= x812 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x812)) x812 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x812) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x812)) (- x812 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x812 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x812 0)) (+ x812 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x280 x812 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x902 ((x148 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x148) (<= 0 x148)))
(define-fun x30 ((x148 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x148) (>= x148 0)))
(define-fun x1606 ((x148 Int)) Bool (and (= x148 (x761 x148 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x761 115792089237316195423570985008687907853269984665640564039457584007913129639935 x148) x148)))
(define-fun x458 ((x148 Int)) Bool (and (= 0 (x761 0 x148)) (= 0 (x761 x148 0))))
(define-fun x1525 ((x148 Int)) Bool (= x148 (x761 x148 x148)))
(define-fun x410 ((x148 Int)) Bool (and (x458 x148) (x1525 x148) (x1606 x148)))
(define-fun x532 ((x148 Int) (x53 Int)) Bool (= (x761 x148 x53) (x761 x53 x148)))
(define-fun x293 ((x148 Int) (x53 Int)) Bool (and (<= 0 (x761 x148 x53)) (=> (<= 0 x148) (<= (x761 x148 x53) x148)) (=> (<= 0 x53) (>= x53 (x761 x148 x53)))))
(define-fun x656 ((x148 Int) (x53 Int)) Bool (and (x532 x148 x53) (x293 x148 x53)))
(define-fun x993 ((x148 Int)) Bool (= (x1454 x148) (+ (x761 x148 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x280 x148 32))))
(define-fun x1727 ((x148 Int)) Bool (and (x656 x148 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x993 x148)))
(define-fun x488 ((x148 Int) (x53 Int)) Bool (and (<= 0 (x280 x148 x53)) (> x53 (x280 x148 x53))))
(define-fun x1799 ((x148 Int) (x53 Int)) Bool (=> (and (>= x148 0) (> x53 0)) (= (= x148 (x280 x148 x53)) (< x148 x53))))
(define-fun x1793 ((x148 Int) (x53 Int)) Bool (=> (and (and (<= x53 x148) (> (+ x53 x53) x148)) (> x53 0)) (= (- x148 x53) (x280 x148 x53))))
(define-fun x1637 ((x148 Int) (x53 Int)) Bool (=> (< 0 x53) (= x148 (+ (x280 x148 x53) (* (x1530 x148 x53) x53)))))
(define-fun x1251 ((x148 Int) (x53 Int)) Bool (and (x1793 x148 x53) (x1799 x148 x53) (x1637 x148 x53) (x488 x148 x53)))
(define-fun x1212 ((x148 Int)) Bool (= (x280 0 x148) 0))
(define-fun x1543 ((x148 Int)) Bool (= (x280 x148 1) 0))
(define-fun x1329 ((x148 Int)) Bool (= 0 (x280 x148 x148)))
(define-fun x1111 ((x148 Int)) Bool (and (x1329 x148) (x1212 x148) (x1543 x148)))
(define-fun x1701 ((x148 Int) (x53 Int)) Bool (= (x323 x148 x53) (* x53 x148)))
(define-fun x492 ((x148 Int) (x53 Int)) Bool (and (= (* (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936) x148) (x323 x148 (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x323 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936) x53) (- (* x148 x53) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x53))) (= (- (* (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936) x148) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x323 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1449 ((x148 Int) (x53 Int)) Bool (=> (and (> x53 0) (< 0 x148)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x323 x148 x53)) (= (x1530 (x1454 (x323 x148 x53)) x148) x53))))
(define-fun x1185 ((x148 Int) (x53 Int)) Bool (=> (and (not (= 0 x53)) (not (= 0 x148))) (and (= x148 (x1530 (x323 x148 x53) x53)) (= (x1530 (x323 x148 x53) x148) x53))))
(define-fun x1990 ((x148 Int) (x53 Int)) Bool (=> (and (< 0 x53) (< 0 x148)) (= (< (x1530 115792089237316195423570985008687907853269984665640564039457584007913129639935 x148) x53) (> (x323 x148 x53) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1926 ((x148 Int) (x53 Int)) Bool (and (= (x1454 (x323 x148 (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1454 (x323 x148 x53))) (= (x1454 (x323 x148 x53)) (x1454 (x323 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1454 (x323 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936) x53)) (x1454 (x323 x148 x53)))))
(define-fun x1823 ((x148 Int) (x53 Int)) Bool (and (=> (and (and (<= x53 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x53 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x148) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x148))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x323 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936) x53)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x148) (x1530 57896044618658097711785492504343953926634992332820282019728792003956564819968 x53)))) (=> (and (and (> x148 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x148)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x53) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x53))) (= (<= (x323 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1530 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x53)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x148)))) (=> (and (and (< 0 x148) (<= x148 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x53) (<= x53 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x323 x148 (- x53 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x53) (x1530 57896044618658097711785492504343953926634992332820282019728792003956564819968 x148)))) (=> (and (and (< 0 x53) (<= x53 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 0 x148) (<= x148 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1530 57896044618658097711785492504343953926634992332820282019728792003956564819967 x53) x148) (<= (x323 x148 x53) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))
(define-fun x1186 ((x148 Int) (x53 Int)) Bool (and (x1823 x148 x53) (x1185 x148 x53) (x1926 x148 x53) (x492 x148 x53) (x1449 x148 x53) (x1990 x148 x53) (x1701 x148 x53)))
(define-fun x1361 ((x148 Int)) Bool (and (= (x323 x148 0) 0) (= 0 (x323 0 x148))))
(define-fun x779 ((x148 Int)) Bool (and (= x148 (x323 1 x148)) (= (x323 x148 1) x148)))
(define-fun x807 ((x148 Int)) Bool (and (x779 x148) (x1361 x148)))
(define-fun x208 ((x148 Int)) Bool (= (x280 x148 1461501637330902918203684832716283019655932542976) (x761 x148 1461501637330902918203684832716283019655932542975)))
(define-fun x376 ((x148 Int)) Bool (and (x656 x148 1461501637330902918203684832716283019655932542975) (x208 x148)))
(define-fun x1166 ((x148 Int)) Bool (= (x280 x148 1099511627776) (x761 x148 1099511627775)))
(define-fun x1623 ((x148 Int)) Bool (and (x1166 x148) (x656 x148 1099511627775)))
(define-fun x1576 ((x247 Int)) Int (ite (> x1208 x247) (x181 x247) 0))
(define-fun x1761 ((x247 Int)) Int 0)
(define-fun x1231 ((x247 Int)) Int 0)
(define-fun x1974 ((x247 Int)) Int 0)
(define-fun x1690 ((x247 Int)) Int 0)
(define-fun x1257 ((x247 Int)) Int 0)
(define-fun x1528 ((x247 Int)) Int 0)
(define-fun x1177 ((x247 Int)) Int 0)
(define-fun x87 ((x247 Int)) Int 0)
(define-fun x1053 ((x247 Int)) Int 0)
(define-fun x1790 ((x247 Int)) Int 0)
(define-fun x635 ((x247 Int)) Int 0)
(define-fun x1881 ((x247 Int)) Int 0)
(define-fun x497 ((x247 Int)) Int 0)
(define-fun x1785 ((x247 Int)) Int 0)
(define-fun x1575 ((x247 Int)) Int 0)
(define-fun x1580 ((x247 Int)) Int 0)
(define-fun x258 ((x247 Int)) Int 0)
(define-fun x274 ((x247 Int)) Int 0)
(define-fun x11 ((x247 Int)) Int 0)
(define-fun x1229 ((x247 Int)) Int 0)
(define-fun x36 ((x247 Int)) Int 0)
(define-fun x933 ((x247 Int)) Int 0)
(define-fun x686 ((x247 Int)) Int (ite (= 704 x247) x1180 (x1053 x247)))
(define-fun x1666 ((x247 Int)) Int (ite (= x247 736) x1855 (x686 x247)))
(define-fun x73 ((x247 Int)) Int (ite (= x247 768) x1327 (x1666 x247)))
(define-fun x506 ((x247 Int)) Int (ite (= x247 800) x613 (x73 x247)))
(define-fun x1813 ((x247 Int)) Int (ite (= x247 832) x1945 (x506 x247)))
(define-fun x1107 ((x247 Int)) Int (ite (= x247 864) x1778 (x1813 x247)))
(define-fun x1447 ((x247 Int)) Int (ite (= 896 x247) x1973 (x1107 x247)))
(define-fun x562 ((x247 Int)) Int (ite (= 928 x247) x1911 (x1447 x247)))
(define-fun x1826 ((x247 Int)) Int (ite (= x247 960) x621 (x562 x247)))
(define-fun x431 ((x247 Int)) Int (x606 x247))
(define-fun x733 ((x247 Int)) Int (x51 x247))
(define-fun x1982 ((x247 Int)) Int (x504 x247))
(define-fun x992 ((x247 Int)) Int (x670 x247))
(define-fun x1658 ((x247 Int)) Int (x1211 x247))
(define-fun x537 ((x247 Int)) Int (x958 x247))
(define-fun x704 ((x247 Int)) Int (x793 x247))
(define-fun x111 ((x247 Int)) Int (x1145 x247))
(define-fun x1511 ((x247 Int)) Int (x4 x247))
(define-fun x609 ((x247 Int)) Int (x1898 x247))
(define-fun x1660 ((x247 Int)) Int (x427 x247))
(define-fun x1678 ((x247 Int)) Int (x1546 x247))
(define-fun x1750 ((x247 Int)) Int (x217 x247))
(define-fun x1351 ((x247 Int)) Int (x904 x247))
(define-fun x806 ((x247 Int)) Int (x1119 x247))
(define-fun x371 ((x247 Int)) Int (x1647 x247))
(define-fun x1305 ((x247 Int)) Int (x646 x247))
(define-fun x1408 ((x247 Int)) Int (x1005 x247))
(define-fun x900 ((x247 Int)) Int (x1059 x247))
(define-fun x1477 ((x247 Int)) Int (x865 x247))
(define-fun x1501 ((x247 Int)) Int (x1405 x247))
(define-fun x724 ((x247 Int)) Int (x42 x247))
(define-fun x377 ((x247 Int)) Int (x844 x247))
(define-fun x1131 ((x247 Int)) Int (x1125 x247))
(define-fun x1736 ((x247 Int)) Int 0)
(define-fun x1866 ((x247 Int)) Int (ite (= 256 x247) x1196 (x1974 x247)))
(define-fun x884 ((x247 Int)) Int (ite (= x247 288) x575 (x1866 x247)))
(define-fun x685 ((x247 Int)) Int 0)
(define-fun x1784 ((x247 Int)) Int (ite (= 704 x247) x1622 (x1790 x247)))
(define-fun x785 ((x247 Int)) Int (ite (= x247 736) x1836 (x1784 x247)))
(define-fun x1317 ((x247 Int)) Int (ite (= x247 768) x1766 (x785 x247)))
(define-fun x731 ((x247 Int)) Int (ite (= 800 x247) x963 (x1317 x247)))
(define-fun x1586 ((x247 Int)) Int (ite (= x247 832) x930 (x731 x247)))
(define-fun x1957 ((x247 Int)) Int (ite (= 864 x247) x626 (x1586 x247)))
(define-fun x1099 ((x247 Int)) Int (ite (= 896 x247) x33 (x1957 x247)))
(define-fun x1993 ((x247 Int)) Int (ite (= 928 x247) x741 (x1099 x247)))
(define-fun x1213 ((x247 Int)) Int (ite (= 960 x247) x1724 (x1993 x247)))
(define-fun x666 ((x247 Int)) Int 0)
(define-fun x1002 ((x247 Int)) Int (ite (= x247 256) x674 (x1690 x247)))
(define-fun x224 ((x247 Int)) Int (ite (= x247 288) x792 (x1002 x247)))
(define-fun x1043 ((x247 Int)) Int 0)
(define-fun x1796 ((x247 Int)) Int (ite (= x247 128) 85963009616197036880240088340724629170983710335684291091497906406952890531840 (x1761 x247)))
(define-fun x1896 ((x247 Int)) Int (ite (= x247 132) x558 (x1796 x247)))
(define-fun x1632 ((x247 Int)) Int (ite (= 128 x247) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x1229 x247)))
(define-fun x1284 ((x247 Int)) Int (ite (= 132 x247) 729466174051048026939049150500379070045048658665 (x1632 x247)))
(define-fun x826 ((x247 Int)) Int (ite (= 164 x247) x558 (x1284 x247)))
(define-fun x1883 ((x247 Int)) Int (ite (= 0 x247) x1322 (x964 x247)))
(define-fun x150 ((x247 Int)) Int (ite (= 128 x247) x1322 (x826 x247)))
(define-fun x1726 ((x247 Int)) Int (ite (and (>= x247 128) (> 160 x247)) (x1883 (- x247 128)) (x274 x247)))
(define-fun x1025 ((x247 Int)) Int (ite (= x247 224) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x150 x247)))
(define-fun x1200 ((x247 Int)) Int (ite (= 228 x247) 443215666480553238610125355434898879895743000821 (x1025 x247)))
(define-fun x1809 ((x247 Int)) Int (ite (= x247 260) x558 (x1200 x247)))
(define-fun x873 ((x247 Int)) Int (ite (= x247 0) x1326 (x683 x247)))
(define-fun x1198 ((x247 Int)) Int (ite (= 224 x247) x1326 (x1809 x247)))
(define-fun x1400 ((x247 Int)) Int (ite (and (> 256 x247) (<= 224 x247)) (x873 (- x247 224)) (x1580 x247)))
(define-fun x1046 ((x247 Int)) Int (ite (= x247 320) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x1198 x247)))
(define-fun x948 ((x247 Int)) Int (ite (= x247 324) 953417218992365150631206543442508943947348309705 (x1046 x247)))
(define-fun x1832 ((x247 Int)) Int (ite (= x247 356) x558 (x948 x247)))
(define-fun x1980 ((x247 Int)) Int (ite (= 0 x247) x72 (x936 x247)))
(define-fun x1016 ((x247 Int)) Int (ite (= x247 320) x72 (x1832 x247)))
(define-fun x1682 ((x247 Int)) Int (ite (and (< x247 352) (>= x247 320)) (x1980 (- x247 320)) (x1785 x247)))
(define-fun x1319 ((x247 Int)) Int (ite (= x247 416) 85421856841599162343179548931066850070836787616102889281506983661126589349888 (x1016 x247)))
(define-fun x1822 ((x247 Int)) Int (ite (= 420 x247) x558 (x1319 x247)))
(define-fun x432 ((x247 Int)) Int (ite (= x247 452) 443215666480553238610125355434898879895743000821 (x1822 x247)))
(define-fun x195 ((x247 Int)) Int (ite (= x247 484) 81 (x432 x247)))
(define-fun x1847 ((x247 Int)) Int (ite (= 0 x247) x1943 (x840 x247)))
(define-fun x52 ((x247 Int)) Int (ite (and (> 448 x247) (<= 416 x247)) (x1847 (- x247 416)) (x1881 x247)))
(define-fun x442 ((x247 Int)) Int (x504 x247))
(define-fun x888 ((x247 Int)) Int (x1405 x247))
(define-fun x1812 ((x247 Int)) Int (x670 x247))
(define-fun x820 ((x247 Int)) Int (x606 x247))
(define-fun x1975 ((x247 Int)) Int (x958 x247))
(define-fun x1545 ((x247 Int)) Int (x51 x247))
(define-fun x156 ((x247 Int)) Int (x793 x247))
(define-fun x870 ((x247 Int)) Int (x427 x247))
(define-fun x1380 ((x247 Int)) Int (x217 x247))
(define-fun x1714 ((x247 Int)) Int (x1546 x247))
(define-fun x1737 ((x247 Int)) Int (x4 x247))
(define-fun x1087 ((x247 Int)) Int (x1059 x247))
(define-fun x561 ((x247 Int)) Int (x904 x247))
(define-fun x1599 ((x247 Int)) Int (x1119 x247))
(define-fun x839 ((x247 Int)) Int (x1898 x247))
(define-fun x1581 ((x247 Int)) Int (x646 x247))
(define-fun x1709 ((x247 Int)) Int (x1647 x247))
(define-fun x1492 ((x247 Int)) Int (x1125 x247))
(define-fun x1020 ((x247 Int)) Int (x1145 x247))
(define-fun x1542 ((x247 Int)) Int (x1211 x247))
(define-fun x1184 ((x247 Int)) Int (x1005 x247))
(define-fun x498 ((x247 Int)) Int (x865 x247))
(define-fun x1550 ((x247 Int)) Int (x42 x247))
(define-fun x721 ((x247 Int)) Int (x844 x247))
(define-fun x242 ((x247 Int)) Int (ite (< x247 x1093) (x1748 x247) 0))
(define-fun x1466 ((x247 Int)) Int (ite (and (> x1093 x247) (<= 0 x247)) (x814 x247) (x242 x247)))
(define-fun x338 ((x247 Int)) Int (ite (= x926 x247) x673 (x737 x247)))
(define-fun x219 ((x247 Int)) Int (ite (= x247 128) x676 (x1528 x247)))
(define-fun x598 ((x247 Int)) Int (ite (and (<= 160 x247) (> (+ x676 160) x247)) (x1466 (- (+ x353 x247) 160)) (x219 x247)))
(define-fun x1967 ((x247 Int)) Int (ite (= x247 x1875) 0 (x598 x247)))
(define-fun x357 ((x247 Int)) Int (ite (= x1960 x247) x1989 (x1967 x247)))
(define-fun x62 ((x247 Int)) Int (ite (and (>= x247 x2009) (< x247 (+ x2009 x996))) (x1466 (- (+ x1093 x247) x2009)) (x357 x247)))
(define-fun x1547 ((x247 Int)) Int 0)
(define-fun x1870 ((x247 Int)) Int (ite (= 256 x247) x407 (x1257 x247)))
(define-fun x999 ((x247 Int)) Int (ite (= 288 x247) x1358 (x1870 x247)))
(define-fun x614 ((x247 Int)) Int 0)
(define-fun x1997 ((x247 Int)) Int (ite (= 128 x247) 85963009616197036880240088340724629170983710335684291091497906406952890531840 (x1231 x247)))
(define-fun x1634 ((x247 Int)) Int (ite (= 132 x247) x1927 (x1997 x247)))
(define-fun x1597 ((x247 Int)) Int (ite (= x247 128) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x36 x247)))
(define-fun x1716 ((x247 Int)) Int (ite (= 132 x247) 729466174051048026939049150500379070045048658665 (x1597 x247)))
(define-fun x1978 ((x247 Int)) Int (ite (= x247 164) x1927 (x1716 x247)))
(define-fun x823 ((x247 Int)) Int (ite (= x247 0) x299 (x1416 x247)))
(define-fun x1091 ((x247 Int)) Int (ite (= x247 128) x299 (x1978 x247)))
(define-fun x1830 ((x247 Int)) Int (ite (and (>= x247 128) (> 160 x247)) (x823 (- x247 128)) (x11 x247)))
(define-fun x1849 ((x247 Int)) Int (ite (= x247 224) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x1091 x247)))
(define-fun x1388 ((x247 Int)) Int (ite (= x247 228) 443215666480553238610125355434898879895743000821 (x1849 x247)))
(define-fun x517 ((x247 Int)) Int (ite (= 260 x247) x1927 (x1388 x247)))
(define-fun x84 ((x247 Int)) Int (ite (= 0 x247) x1771 (x430 x247)))
(define-fun x54 ((x247 Int)) Int (ite (= x247 224) x1771 (x517 x247)))
(define-fun x903 ((x247 Int)) Int (ite (and (>= x247 224) (< x247 256)) (x84 (- x247 224)) (x258 x247)))
(define-fun x160 ((x247 Int)) Int (ite (= x247 320) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x54 x247)))
(define-fun x682 ((x247 Int)) Int (ite (= x247 324) 953417218992365150631206543442508943947348309705 (x160 x247)))
(define-fun x879 ((x247 Int)) Int (ite (= x247 356) x1927 (x682 x247)))
(define-fun x1151 ((x247 Int)) Int (ite (= x247 0) x75 (x1859 x247)))
(define-fun x931 ((x247 Int)) Int (ite (= 320 x247) x75 (x879 x247)))
(define-fun x565 ((x247 Int)) Int (ite (and (> 352 x247) (<= 320 x247)) (x1151 (- x247 320)) (x1575 x247)))
(define-fun x1128 ((x247 Int)) Int (ite (= x247 416) 85421856841599162343179548931066850070836787616102889281506983661126589349888 (x931 x247)))
(define-fun x1136 ((x247 Int)) Int (ite (= x247 420) x1927 (x1128 x247)))
(define-fun x1226 ((x247 Int)) Int (ite (= 452 x247) 443215666480553238610125355434898879895743000821 (x1136 x247)))
(define-fun x1344 ((x247 Int)) Int (ite (= x247 484) 81 (x1226 x247)))
(define-fun x1572 ((x247 Int)) Int (ite (= x247 0) x165 (x1258 x247)))
(define-fun x491 ((x247 Int)) Int (ite (and (<= 416 x247) (< x247 448)) (x1572 (- x247 416)) (x497 x247)))
(define-fun x1869 ((x247 Int)) Int (ite x943 (x357 x247) (x62 x247)))
(define-fun x1664 ((x247 Int)) Int (ite (= x78 x247) 57 (x1869 x247)))
(define-fun x44 ((x247 Int)) Int (ite (= x636 x247) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x1664 x247)))
(define-fun x1683 ((x247 Int)) Int (ite (= x531 x247) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x44 x247)))
(define-fun x1646 ((x247 Int)) Int (ite (= x247 x135) x699 (x1683 x247)))
(define-fun x1058 ((x247 Int)) Int (ite (= x247 x592) x234 (x1646 x247)))
(define-fun x746 ((x247 Int)) Int (ite (= x1203 x247) x860 (x1058 x247)))
(define-fun x1903 ((x247 Int)) Int (ite (= x247 x1115) x1188 (x746 x247)))
(define-fun x501 ((x247 Int)) Int (ite x1786 (x746 x247) (ite x659 (x1058 x247) (ite x1026 (x1646 x247) (ite x1489 (x1683 x247) (x1903 x247))))))
(define-fun x848 ((x247 Int)) Int (ite (= x1157 x247) 0 (x501 x247)))
(define-fun x1488 ((x247 Int)) Int (ite (= x304 x247) x821 (x848 x247)))
(define-fun x1163 ((x247 Int)) Int (ite (= x1175 x247) x6 (x1488 x247)))
(define-fun x747 ((x247 Int)) Int (ite (= x528 x247) x595 (x1163 x247)))
(define-fun x39 ((x247 Int)) Int (ite (= x247 x1563) x997 (x747 x247)))
(define-fun x1262 ((x247 Int)) Int (ite (= x247 x1157) x1971 (x39 x247)))
(define-fun x824 ((x247 Int)) Int (ite (= x1045 x247) x901 (x1262 x247)))
(define-fun x778 ((x247 Int)) Int (ite x194 (x1869 x247) (x824 x247)))
(define-fun x12 ((x247 Int)) Int (ite (= x1769 x247) 57 (x778 x247)))
(define-fun x1332 ((x247 Int)) Int (ite (= x247 x1890) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x12 x247)))
(define-fun x1271 ((x247 Int)) Int (ite (= x758 x247) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x1332 x247)))
(define-fun x339 ((x247 Int)) Int (ite (= x1331 x247) 37749366859872002549862985897619888669665948435824635674531347399775013991474 (x1271 x247)))
(define-fun x1775 ((x247 Int)) Int (ite (= x247 x1321) 24068214603859720034826088920346711864364023158142564334732402816841156945010 (x339 x247)))
(define-fun x1707 ((x247 Int)) Int (ite (= x247 x243) 45887579694954924622689847950937698470056863744033464196450664576267108643884 (x1775 x247)))
(define-fun x46 ((x247 Int)) Int (ite (= x247 x1532) 39095828447348766818467541868648093896559026265977760979361568868651215582053 (x1707 x247)))
(define-fun x264 ((x247 Int)) Int (ite (= x247 x588) 52672081143094129087634851003622940732604441515226977473621344926390909140992 (x46 x247)))
(define-fun x849 ((x247 Int)) Int (ite (= x836 x247) x279 (x264 x247)))
(define-fun x320 ((x247 Int)) Int (ite (= x247 x1879) x287 (x849 x247)))
(define-fun x1246 ((x247 Int)) Int (ite (= x247 x1357) x576 (x320 x247)))
(define-fun x861 ((x247 Int)) Int (ite (= x247 x658) x21 (x1246 x247)))
(define-fun x183 ((x247 Int)) Int (ite x35 (x1246 x247) (ite x1442 (x320 x247) (ite x803 (x849 x247) (ite x2 (x264 x247) (x861 x247))))))
(define-fun x953 ((x247 Int)) Int (ite (= x247 x1316) 0 (x183 x247)))
(define-fun x1749 ((x247 Int)) Int (ite (= x247 x1934) x1779 (x953 x247)))
(define-fun x708 ((x247 Int)) Int (ite (= x247 x229) x1810 (x1749 x247)))
(define-fun x919 ((x247 Int)) Int (ite (= x1643 x247) x624 (x708 x247)))
(define-fun x1448 ((x247 Int)) Int (ite (= x247 x692) x1665 (x919 x247)))
(define-fun x612 ((x247 Int)) Int (ite (= x247 x244) x421 (x1448 x247)))
(define-fun x107 ((x247 Int)) Int (ite x1372 (x1448 x247) (ite x177 (x919 x247) (ite x782 (x708 x247) (ite x1100 (x1749 x247) (x612 x247))))))
(define-fun x1472 ((x247 Int)) Int (ite (= x247 x1316) x1270 (x107 x247)))
(define-fun x818 ((x247 Int)) Int (ite (= x1265 x247) x739 (x1472 x247)))
(define-fun x1390 ((x247 Int)) Int (ite (= x1639 x247) x915 (x818 x247)))
(define-fun x439 ((x247 Int)) Int (ite (= x122 x247) x956 (x1390 x247)))
(define-fun x137 ((x247 Int)) Int (ite (= x286 x247) x1120 (x439 x247)))
(define-fun x392 ((x247 Int)) Int (ite (= x247 x1795) x121 (x137 x247)))
(define-fun x82 ((x247 Int)) Int (ite (= x880 x247) x991 (x392 x247)))
(define-fun x1725 ((x247 Int)) Int (ite (= x1464 x247) x1509 (x82 x247)))
(define-fun x132 ((x247 Int)) Int (ite (= x247 x850) 63076024560530113402979550242307453568063438748328787417531900361828837441551 (x1725 x247)))
(define-fun x1010 ((x247 Int)) Int (ite (= x1744 x247) x1033 (x132 x247)))
(define-fun x1906 ((x247 Int)) Int (ite (= x1461 x247) x1075 (x1010 x247)))
(define-fun x23 ((x247 Int)) Int (ite (= x1721 x247) x1657 (x1906 x247)))
(define-fun x847 ((x247 Int)) Int (ite (= x1303 x247) x32 (x23 x247)))
(define-fun x962 ((x247 Int)) Int (ite (= x1146 x247) x358 (x847 x247)))
(define-fun x1118 ((x247 Int)) Int (ite x770 (x962 x247) (x1725 x247)))
(define-fun x163 ((x247 Int)) Int (ite (= x530 x247) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x1118 x247)))
(define-fun x1747 ((x247 Int)) Int (ite (= x1468 x247) x711 (x163 x247)))
(define-fun x1504 ((x247 Int)) Int (ite (= x828 x247) x1187 (x1747 x247)))
(define-fun x272 ((x247 Int)) Int (ite (= x530 x247) 0 (x1504 x247)))
(define-fun x1309 ((x247 Int)) Int (ite (= x918 x247) x27 (x272 x247)))
(define-fun x982 ((x247 Int)) Int (ite (= x247 x1964) x1133 (x1309 x247)))
(define-fun x1259 ((x247 Int)) Int (ite (= x1480 x247) x566 (x982 x247)))
(define-fun x1738 ((x247 Int)) Int (ite (= x247 x1636) x1415 (x1259 x247)))
(define-fun x1103 ((x247 Int)) Int (x1576 x247))
(define-fun x1985 ((x247 Int)) Int (ite (= x1853 x247) x1035 (x1738 x247)))
(define-fun x1412 ((x247 Int)) Int (ite x1649 (x1985 x247) (ite x214 (x1985 x247) (x1504 x247))))
(define-fun x1238 ((x247 Int)) Int (ite (= x1420 x247) 2 (x1412 x247)))
(define-fun x1248 ((x247 Int)) Int (ite (= x247 x942) 22260506169142864168419965211860030380910469616735923253374116530085716557824 (x1238 x247)))
(define-fun x198 ((x247 Int)) Int (ite (= x247 x1868) 2 (x1248 x247)))
(define-fun x1895 ((x247 Int)) Int (ite (= x928 x247) 24522070412059196110286586012810966081169649004736715519769772467740269871104 (x198 x247)))
(define-fun x1031 ((x247 Int)) Int (ite (= x1253 x247) x956 (x1895 x247)))
(define-fun x1476 ((x247 Int)) Int (ite (= x1288 x247) 9 (x1031 x247)))
(define-fun x1102 ((x247 Int)) Int (ite (= x247 x1862) x1522 (x1476 x247)))
(define-fun x1154 ((x247 Int)) Int (ite (= x1153 x247) x1657 (x1102 x247)))
(define-fun x476 ((x247 Int)) Int (ite (= x247 x634) x715 (x1154 x247)))
(define-fun x461 ((x247 Int)) Int (ite (= x247 x127) x1851 (x476 x247)))
(define-fun x330 ((x247 Int)) Int (ite (= x159 x247) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x461 x247)))
(define-fun x1473 ((x247 Int)) Int (ite (= x247 x462) x1036 (x330 x247)))
(define-fun x863 ((x247 Int)) Int (ite (= x247 x1735) x630 (x1473 x247)))
(define-fun x203 ((x247 Int)) Int (ite (= x1633 x247) x1733 (x863 x247)))
(define-fun x37 ((x247 Int)) Int (ite (= x1848 x247) 128 (x203 x247)))
(define-fun x732 ((x247 Int)) Int (ite (= x1441 x247) x1428 (x37 x247)))
(define-fun x1287 ((x247 Int)) Int (ite (= x247 x1628) x679 (x732 x247)))
(define-fun x1827 ((x247 Int)) Int (ite (= x247 x555) x429 (x1287 x247)))
(define-fun x70 ((x247 Int)) Int (ite (= x1308 x247) x1669 (x1827 x247)))
(define-fun x34 ((x247 Int)) Int (ite (= x247 x970) x276 (x70 x247)))
(define-fun x1605 ((x247 Int)) Int (ite x1933 (x70 x247) (ite x1987 (x1827 x247) (ite x671 (x1287 x247) (ite x1122 (x732 x247) (x34 x247))))))
(define-fun x1815 ((x247 Int)) Int (ite (= x650 x247) 0 (x1605 x247)))
(define-fun x154 ((x247 Int)) Int (ite (and (>= x247 x159) (< x247 (+ 64 x159))) (x1272 (- x247 x159)) (x1815 x247)))
(define-fun x359 ((x247 Int)) Int (ite x1770 (x154 x247) (x1815 x247)))
(define-fun x1134 ((x247 Int)) Int (ite (and (<= x159 x247) (> (+ x159 64) x247)) (x1272 (- x247 x159)) (x359 x247)))
(define-fun x136 ((x247 Int)) Int (ite (= x247 x1143) 2 (x1134 x247)))
(define-fun x1462 ((x247 Int)) Int (ite (= x247 x535) 25877242110744216891076975195880784582809329153640315260649044424131709239296 (x136 x247)))
(define-fun x846 ((x247 Int)) Int (ite (= x1508 x247) 2 (x1462 x247)))
(define-fun x1078 ((x247 Int)) Int (ite (= x247 x1241) 22264039863272420937079131806861516217942124584529674491290359742488301797376 (x846 x247)))
(define-fun x648 ((x247 Int)) Int (ite (= x247 x1113) 2 (x1078 x247)))
(define-fun x932 ((x247 Int)) Int (ite (= x1652 x247) 22700451088272681866486206289545017091351513107057952373946396474207578882048 (x648 x247)))
(define-fun x680 ((x247 Int)) Int (ite (= x1913 x247) 2 (x932 x247)))
(define-fun x65 ((x247 Int)) Int (ite (= x1914 x247) 22702217935337460250815789587045760009867340590954827992904518080408871501824 (x680 x247)))
(define-fun x1604 ((x247 Int)) Int (ite x1493 (x932 x247) (x65 x247)))
(define-fun x448 ((x247 Int)) Int (ite (= x247 x226) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x1604 x247)))
(define-fun x543 ((x247 Int)) Int (ite (= x247 x1397) x1079 (x448 x247)))
(define-fun x1755 ((x247 Int)) Int (ite (= x247 x108) x1871 (x543 x247)))
(define-fun x1638 ((x247 Int)) Int (ite (= x247 x783) x297 (x1755 x247)))
(define-fun x22 ((x247 Int)) Int (ite (= x1085 x247) 128 (x1638 x247)))
(define-fun x457 ((x247 Int)) Int (ite (= x855 x247) x568 (x22 x247)))
(define-fun x1249 ((x247 Int)) Int (ite (and (>= x247 x987) (< x247 (+ x987 x568))) (x1466 (- (+ x91 x247) x987)) (x457 x247)))
(define-fun x1562 ((x247 Int)) Int (ite (= x247 x102) 0 (x1249 x247)))
(define-fun x473 ((x247 Int)) Int (ite (and (< x247 (+ x226 64)) (<= x226 x247)) (x47 (- x247 x226)) (x1562 x247)))
(define-fun x118 ((x247 Int)) Int (ite (= x247 x1062) x1123 (x1647 x247)))
(define-fun x1574 ((x247 Int)) Int (ite (= x247 x843) x1946 (x504 x247)))
(define-fun x521 ((x247 Int)) Int (ite x343 (x504 x247) (x1574 x247)))
(define-fun x174 ((x247 Int)) Int (ite x343 (x118 x247) (x1647 x247)))
(define-fun x93 ((x247 Int)) Int (ite (= x247 x1991) x1172 (x1125 x247)))
(define-fun x1653 ((x247 Int)) Int (ite (= x247 x1991) x921 (x1059 x247)))
(define-fun x1495 ((x247 Int)) Int 0)
(define-fun x271 ((x247 Int)) Int (ite (= x247 704) x1276 (x635 x247)))
(define-fun x791 ((x247 Int)) Int (ite (= x247 736) x325 (x271 x247)))
(define-fun x399 ((x247 Int)) Int (ite (= x247 768) x459 (x791 x247)))
(define-fun x1722 ((x247 Int)) Int (ite (= x247 800) x5 (x399 x247)))
(define-fun x1365 ((x247 Int)) Int (ite (= x247 832) x263 (x1722 x247)))
(define-fun x681 ((x247 Int)) Int (ite (= x247 864) x1369 (x1365 x247)))
(define-fun x482 ((x247 Int)) Int (ite (= x247 896) x763 (x681 x247)))
(define-fun x162 ((x247 Int)) Int (ite (= 928 x247) x1393 (x482 x247)))
(define-fun x893 ((x247 Int)) Int (ite (= x247 960) x1224 (x162 x247)))
(define-fun x124 ((x247 Int)) Int (ite x155 (x473 x247) (x1562 x247)))
(define-fun x1234 ((x247 Int)) Int (ite (and (>= x247 x226) (< x247 (+ 64 x226))) (x47 (- x247 x226)) (x124 x247)))
(define-fun x1127 ((x247 Int)) Int (ite (= x247 x340) 2 (x1234 x247)))
(define-fun x310 ((x247 Int)) Int (ite (= x1651 x247) 22703984782402238635145372884546502928383168074851703611862639686610164121600 (x1127 x247)))
(define-fun x397 ((x247 Int)) Int (ite (= x145 x247) 19198514131333069964808701557143768876432618777570657477111002777175690575872 (x310 x247)))
(define-fun x1000 ((x247 Int)) Int (ite (= x247 x924) x1629 (x397 x247)))
(define-fun x802 ((x247 Int)) Int (ite (= x247 x1860) x1014 (x1000 x247)))
(define-fun x538 ((x247 Int)) Int (ite (= x247 x510) x1348 (x802 x247)))
(define-fun x494 ((x247 Int)) Int (ite (= x247 x445) x1871 (x538 x247)))
(define-fun x316 ((x247 Int)) Int (ite (and (>= x247 x145) (< x247 (+ x145 32))) (x695 (- x247 x145)) (x494 x247)))
(define-fun x1152 ((x247 Int)) Int (ite x1368 (x316 x247) (x494 x247)))
(define-fun x1655 ((x247 Int)) Int (ite (and (< x247 (+ x145 32)) (>= x247 x145)) (x695 (- x247 x145)) (x1152 x247)))
(assert (not (x1494 (x684 x1364 x631 x610 x527 x313 x1514))))
(assert (x902 x378))
(assert (< 10000 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373)))
(assert (=> (<= x1290 10000) (= 0 (x1529 x1290))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)))
(assert (x902 x726))
(assert (= (x1798 x905 x428 x1864 x570 x1440 x1081 x1097) (x1529 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097))))
(assert (x1494 39095828447348766818467541868648093896559026261938444753180772323039453799525))
(assert (x902 x1242))
(assert (x902 x180))
(assert (x902 x725))
(assert (= (=> (and (= (+ x955 5) x1513) (>= 16777215 x382) (= x186 (x1059 x1991)) (= x186 0) (> x1143 x1614) (or (<= x159 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x159)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1143) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1143)) (= x1241 (x1355 (+ x1508 32))) (or (>= x159 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x159 18446744073709551487)) (= (x1134 x159) x1458) (= (x1355 (+ x1753 64)) x526) (= (x1119 x843) x564) (>= 1099511627775 x564) (= x1579 1) (= x1377 (ite (= x1120 x167) (ite (not (= 0 x1120)) 1 0) (ite (= x167 x1120) 1 0))) (not (= x1143 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= 1 x1377) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x159) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x159)) (<= x159 18446744073709551550) (= (x324 64 x956 x1513) x1991) (= x955 (x324 64 x915 3)) (not (= x1143 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1143) (>= 1 x1458) (<= x159 18446744073709551550) (= x167 (x761 1461501637330902918203684832716283019655932542975 x450)) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639931) (= x2012 (x324 64 x915 4)) (or (and (>= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639684) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639742)) (and (>= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639747) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x1508)) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639679) (and (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639868) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1508)) (>= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= x382 (x670 x2012)) (= x1913 (x1355 (+ 64 x526))) (< x1143 x1508) (<= 1 x1) (< x1113 x1753) (= x1458 x483) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1143) (= x483 (ite (not (= x1458 0)) 1 0)) (not (> x536 x564)) (< x1508 x1113) (< x1753 x526) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x1508) (= (< 0 x1989) x396) (= (x1211 x1039) x1871) (= (x1119 x843) x1) (= (x761 1099511627775 x1399) x536) (< x526 x1913) (>= x1759 1) (= x843 (+ x955 1)) (< x159 x1614) (= x1143 (+ 64 x1614)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x1508) (= x1039 (+ 1 x2012)) (not (> x1614 x1143)) (= (x1355 (+ 64 x159)) x1614) (= (x1355 (+ 32 x1113)) x1652) (or (>= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (>= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639684) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639742 x1508)) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639679) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1508) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639868 x1508)) (and (>= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639747) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639805))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639870 x159) (= x1508 (x1355 (+ 64 x1143))) (= x535 (x1355 (+ 32 x1143))) (= x1510 (x1355 (+ x159 32))) (>= 1099511627775 x1) (= (x1355 (+ x1113 64)) x1753) (= x450 (x1134 x1510)) (= x1113 (x1355 (+ x1508 64))) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639684 x1508) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639742)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x1508) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639747 x1508)) (>= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639868) (>= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639679))) (and (=> (and x396 (and (>= 18446744073709551615 x1989) (= x196 (> x1989 1)) (>= x1989 1))) (and (=> (and x196 (and (and (= (x1466 x550) x309) (= (x1466 x707) x1297) (= (x1355 (+ 32 x639)) x1958) (= x569 (not (= x309 x1887))) (= x1048 (x1466 x1565)) (= (x1355 (+ x1565 x1297)) x541) (<= x309 340282366920938463463374607431768211455) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1297) (<= x76 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1297 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x76 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x76 x1297))) (>= 340282366920938463463374607431768211455 x1887) (= (+ 32 x1565) x707) (<= 2 x1989) (= x1944 (x920 (- x1093 x1565))) (or (<= x1297 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x1297 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x1355 (+ x541 32)) x550) (= x639 (x1355 (+ x1048 x1565))) (= x418 (ite x569 1 0)) (= (x1466 x1958) x1887) (>= 18446744073709551615 x1989) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1048) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1048)) (= x76 (x920 (- x1944 95))) (or (and (> x1048 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x76 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x76 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1048)) (< x1048 x76)))) (or (and (and (or (and (< x256 x76) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x76) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x256))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x76) (> x256 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1437) (<= x76 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1437 x76)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x76) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1437))) (not (= x1250 x202)) (= (x1466 x275) x202) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1437) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1437)) (>= 1461501637330902918203684832716283019655932542975 x1250) (= x1479 (x1355 (+ x256 x1565))) (= x1437 (x1466 x707)) (= x275 (x1355 (+ x1565 x1437))) (= (x1466 x1565) x256) (<= x202 1461501637330902918203684832716283019655932542975) (or (<= x256 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x256)) (= (x1466 x1479) x1250)) (not x569)) (and x569 (= 1 x418))))) x452) (=> (and (= x226 x1913) (not x196)) x603))) (=> (and (not x396) (and (= x1746 0) (= x1913 x719))) x913))) x334))
(assert (= 0 (x1529 3686331914)))
(assert (x902 x1751))
(assert (x902 x676))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (x902 x1594))
(assert (=> (<= x1515 10000) (= 0 (x1529 x1515))))
(assert (x902 x186))
(assert (x902 x1222))
(assert (x902 x179))
(assert (=> (<= x558 10000) (= (x1529 x558) 0)))
(assert (= 64 (x574 (x324 64 x1180 3))))
(assert (x902 x151))
(assert (=> (>= 10000 x1616) (= (x1529 x1616) 0)))
(assert (x902 x1744))
(assert (x902 x1247))
(assert (= x1858 (x329 (x641 x797 x572 x1343 x1858))))
(assert (x902 x1081))
(assert (< (x324 64 x811 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x1994))
(assert (= (x1529 (x324 64 x915 4)) (x324 64 x915 4)))
(assert (x902 x1098))
(assert (= (x1300 x1364 x967 x109 x972 x1164) (x1529 (x1300 x1364 x967 x109 x972 x1164))))
(assert (= (x1529 911662625) 0))
(assert (x902 x984))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639684))
(assert (=> (<= x935 10000) (= (x1529 x935) 0)))
(assert (= x1513 (x596 (x324 64 x956 x1513))))
(assert (= (x596 (x1300 x1018 x369 x1892 x1088 x164)) x1892))
(assert (= (x596 (x324 x1845 x454 x1037)) x1037))
(assert (< 10000 (x324 64 x1927 x640)))
(assert (x902 x1075))
(assert (x902 x1374))
(assert (=> (>= 10000 x1774) (= (x1529 x1774) 0)))
(assert (x902 x1120))
(assert (x902 x1821))
(assert (> (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981) 10000))
(assert (not (x1494 (x324 x905 x1498 x1065))))
(assert (= 64 (x574 (x324 64 81 x1535))))
(assert (x902 x1458))
(assert (x902 x534))
(assert (= x723 (and (not x1603) x1519)))
(assert (= x1654 (x1843 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433))))
(assert (x902 x145))
(assert (= (x872 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433)) x1433))
(assert (=> (>= 10000 x1214) (= (x1529 x1214) 0)))
(assert (x902 x1998))
(assert (> (x324 x905 x1498 x1065) 10000))
(assert (=> (<= x1507 10000) (= (x1529 x1507) 0)))
(assert (= 0 (x1529 953417218992365150631206543442508943947348309705)))
(assert (x902 x1415))
(assert (x902 x71))
(assert (= x905 (x574 (x1540 x905 x1228))))
(assert (=> (>= 10000 x109) (= 0 (x1529 x109))))
(assert (= (x1843 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173)) x542))
(assert (=> (>= 10000 x1330) (= (x1529 x1330) 0)))
(assert (x902 x795))
(assert (x1494 16777215))
(assert (not (x1494 (x1300 x1794 x168 x285 x1783 x1356))))
(assert (not (x1494 (x1300 x1845 x437 x1290 x1763 x1593))))
(assert (x902 x1320))
(assert (=> (<= x712 10000) (= (x1529 x712) 0)))
(assert (= (x574 (x1540 x1018 x1612)) x1018))
(assert (= x1502 (=> (and (and (>= 255 x1741) (= false x677) (= x591 x525) (= x1901 x1891) (<= x5 1099511627775) (= (= 0 x1948) x360) (= x325 (ite (not (= (ite (not (= 0 x1741)) 1 0) 0)) 1 0)) (= (x893 800) x642) (= (x174 x1972) x763) (= (+ 1 x951) x1256) (= (x42 x380) x1741) (= (x893 928) x1218) (= (+ 1 x1972) x951) (= x263 (x1005 x380)) (= (x793 x380) x459) (= x581 false) (= 0 x422) (= x1394 (x893 896)) (= (x893 960) x301) (= x1276 x1170) (= false x859) (= x301 x336) (= x786 false) (<= 1 x43) (= x1286 (x893 704)) (>= 340282366920938463463374607431768211455 x763) (= x1850 (x324 64 x1276 3)) (= x1901 (x893 864)) (= (not x360) x1116) (= x333 x1394) (= x1393 (x427 x951)) (>= 127 x1645) (>= 1099511627775 x459) (= (x57 x32) x43) (= x1218 x1465) (= x1972 (+ 1 x380)) (= false x1244) (<= x1369 340282366920938463463374607431768211455) (= (+ x1850 1) x380) (= (x893 832) x1403) (= x1369 (x521 x380)) (= x312 false) (= x1403 x1274) (<= x1645 127) (= x5 (x1119 x380)) (= x1286 x252) (= x642 x1948) (= (x893 768) x525) (= x1224 (x1145 x1256)) (= x308 911662625) (>= 1099511627775 x263)) (and (= x1781 x284) (= x1162 x1170) (= 36 x1995) (= x950 false) (= x1172 (ite (not (= x2005 0)) 1 0)) (= false x350) (= x284 x1162))) (and (=> x1116 x305) (=> (and (not x1116) (and (= x1310 x143) (= x143 true) (= x1667 x55))) x1567)))))
(assert (=> (<= x64 10000) (= (x1529 x64) 0)))
(assert (x902 x385))
(assert (x902 x987))
(assert (= (x1529 22703984782402238635145372884546502928383168074851703611862639686610164121600) 0))
(assert (x1494 3168472768))
(assert (x30 x403))
(assert (= (or (and (not x1656) x161) (and x831 x1291) (and x484 x1044) (and x1144 x1730)) x697))
(assert (x902 x1083))
(assert (x902 x459))
(assert (=> (>= 10000 x1318) (= (x1529 x1318) 0)))
(assert (not (x1494 (x324 64 x1927 x868))))
(assert (= (x1843 (x684 x797 x1734 x1910 x1121 x1804 x97)) x1734))
(assert (= x1023 (x596 (x1798 x1877 x691 x1023 x889 x1834 x608 x580))))
(assert (x902 x1708))
(assert (x410 x1132))
(assert (> (x684 x797 x1734 x1910 x1121 x1804 x97) 10000))
(assert (x902 x1029))
(assert (x902 x864))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x1276 3)))
(assert (= (x1529 (+ x298 1)) (x1529 x298)))
(assert (=> (<= x1596 10000) (= (x1529 x1596) 0)))
(assert (= (x1843 (x1540 x1789 x291)) x291))
(assert (=> (>= 10000 x1571) (= 0 (x1529 x1571))))
(assert (= (x596 (x324 64 x1828 4)) 4))
(assert (x902 x1964))
(assert (= x1983 (x1711 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047))))
(assert (x902 x1842))
(assert (=> (<= x246 10000) (= 0 (x1529 x246))))
(assert (x902 x709))
(assert (= (x1529 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047)) (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047)))
(assert (=> (>= 10000 x1825) (= 0 (x1529 x1825))))
(assert (x902 x1984))
(assert (=> (>= 10000 x1064) (= (x1529 x1064) 0)))
(assert (= x1489 (and x607 (not x238))))
(assert (= (x660 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)) x712))
(assert (=> (<= x1121 10000) (= (x1529 x1121) 0)))
(assert (=> (>= 10000 x1474) (= (x1529 x1474) 0)))
(assert (=> (>= 10000 x1612) (= (x1529 x1612) 0)))
(assert (x902 x714))
(assert (= x1927 (x1843 (x324 64 x1927 x775))))
(assert (= x1313 (or x1442 x756 x2 x803 x35)))
(assert (x1111 32))
(assert (=> (>= 10000 x49) (= 0 (x1529 x49))))
(assert (x902 x1868))
(assert (=> (>= 10000 x1356) (= (x1529 x1356) 0)))
(assert (x902 x229))
(assert (= (x1529 (x684 x1789 x912 x319 x540 x1064 x1797)) (x684 x1789 x912 x319 x540 x1064 x1797)))
(assert (x902 x628))
(assert (= 0 (x1529 58652715557392481136322917363278564085642169142198350659161099264462031945728)))
(assert (= (x329 (x641 x1364 x355 x1402 x2001)) x2001))
(assert (x902 x1407))
(assert (x902 x1651))
(assert (= (x324 64 x915 3) (x1529 (x324 64 x915 3))))
(assert (x902 x1874))
(assert (= x1236 (x1711 (x1798 x1794 x221 x795 x60 x1301 x586 x1236))))
(assert (=> (>= 10000 x952) (= (x1529 x952) 0)))
(assert (x1494 45887579694954924622689847950937698470056863744033464196450664576267108643884))
(assert (x30 x13))
(assert (x902 x165))
(assert (= x1239 (=> (and (= (< 0 (ite (= x1486 0) x1486 1)) x235) (or (and x235 (= 1 x1019)) (and (= 0 x1019) (not x235)))) x1940)))
(assert (x902 x1283))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 x1845 x454 x1037)))
(assert (=> (>= 10000 x533) (= (x1529 x533) 0)))
(assert (not (x1494 (x641 x1364 x355 x1402 x2001))))
(assert (x902 x946))
(assert (= (x641 66 x385 x1029 x210) (x1529 (x641 66 x385 x1029 x210))))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639844) 0))
(assert (x902 x1397))
(assert (x902 x1590))
(assert (= x1886 (x596 (x324 64 x558 x1886))))
(assert (= 3 (x596 (x324 64 x1180 3))))
(assert (x902 x1171))
(assert (x902 x1183))
(assert (= (x574 (x324 64 81 x2003)) 64))
(assert (x902 x1552))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335)))
(assert (x902 x1971))
(assert (=> (<= x643 10000) (= 0 (x1529 x643))))
(assert (=> (>= 10000 x1820) (= 0 (x1529 x1820))))
(assert (x902 x540))
(assert (x902 x1986))
(assert (=> (<= x440 10000) (= 0 (x1529 x440))))
(assert (x902 x1699))
(assert (=> (<= x1804 10000) (= 0 (x1529 x1804))))
(assert (x902 x529))
(assert (x902 x926))
(assert (x902 x743))
(assert (=> (>= 10000 x146) (= (x1529 x146) 0)))
(assert (= (=> (and (<= x145 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x1024 x145) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x145)) (= x726 (x1655 x145)) (= (not (< 1 x1989)) x1386) (<= x145 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1024 (x1355 (+ x145 32))) (not (= x145 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x145) (not (= x145 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= x1959 1)) (and x1386 (=> (and (= x719 x1024) (= x1746 x726)) x913))) x443))
(assert (x902 x1286))
(assert (=> (>= 10000 x694) (= (x1529 x694) 0)))
(assert (x902 x906))
(assert (=> (<= x1252 10000) (= 0 (x1529 x1252))))
(assert (x902 x1308))
(assert (= (x1798 x1877 x691 x1023 x889 x1834 x608 x580) (x1529 (x1798 x1877 x691 x1023 x889 x1834 x608 x580))))
(assert (= x1833 (=> (and (= (not (< 4 x842)) x1531) (= (x1448 x618) x421) (= (x1355 (+ x244 32)) x227)) (and x1531 (=> (and (= x1464 x227) (= x745 4) (= (+ 32 x618) x192)) x1557)))))
(assert (= (x1798 x1794 x221 x795 x60 x1301 x586 x1236) (x1529 (x1798 x1794 x221 x795 x60 x1301 x586 x1236))))
(assert (= x1845 (x574 (x1300 x1845 x437 x1290 x1763 x1593))))
(assert (x902 x885))
(assert (x902 x1935))
(assert (not (x1494 (x324 64 x915 3))))
(assert (x1494 4294967295))
(assert (x902 x485))
(assert (= x1697 (x1711 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433))))
(assert (x902 x1573))
(assert (< (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x981 (x1422 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902))))
(assert (= x696 (x1422 (x684 x1845 x594 x1824 x1551 x696 x1453))))
(assert (x902 x60))
(assert (not (x1494 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335))))
(assert (x902 x109))
(assert (x902 x1591))
(assert (x902 x1381))
(assert (= (x596 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173)) x1515))
(assert (x902 x68))
(assert (= x572 (x1843 (x641 x797 x572 x1343 x1858))))
(assert (x902 x1328))
(assert (=> (<= x705 10000) (= (x1529 x705) 0)))
(assert (not (x1494 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047))))
(assert (= (x660 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)) x278))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639715)))
(assert (= (x1422 (x684 x1364 x631 x610 x527 x313 x1514)) x313))
(assert (not (x1494 (x324 x1018 x1704 x633))))
(assert (= (=> (and (and (= x650 (x1355 (+ x1428 x1628))) (= (> x546 0) x1268) (= (x1355 (+ x1628 x1821)) x1124) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x563) (= x1426 (x920 (- x1124 x159))) (= (x1355 (+ x1428 31)) x288) (>= x563 64) (= (x761 115792089237316195423570985008687907853269984665640564039457584007913129639904 x288) x1821)) (or (and (and (= x1759 1) (>= x563 64) (<= x563 4294967295)) x1268) (and (= x1759 x546) (not x1268)))) x334) x232))
(assert (< 10000 (x324 64 81 x1535)))
(assert (x902 x1379))
(assert (x902 x1487))
(assert (=> (>= 10000 x361) (= 0 (x1529 x361))))
(assert (x902 x1687))
(assert (x902 x1326))
(assert (x30 x1527))
(assert (= (x1529 (x324 64 x1927 x868)) (x324 64 x1927 x868)))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (= x720 (x329 (x1300 x905 x1417 x1340 x720 x440))))
(assert (= (x574 (x324 64 x1927 x583)) 64))
(assert (= (x1529 (x641 x1789 x1474 x1061 x1389)) (x641 x1789 x1474 x1061 x1389)))
(assert (x902 x1912))
(assert (= (and x1670 x396) x1279))
(assert (= (x660 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335)) x14))
(assert (= x319 (x596 (x684 x1789 x912 x319 x540 x1064 x1797))))
(assert (= x852 (x596 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694))))
(assert (= x554 (x1843 (x324 x797 x554 x1378))))
(assert (x902 x1795))
(assert (> (x324 64 81 x2003) 10000))
(assert (not (x1494 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902))))
(assert (x902 x1063))
(assert (= x305 (=> (and (and (>= x487 1) (= (x57 x381) x1573) (= x1325 729466174051048026939049150500379070045048658665) (= (x324 64 x1828 4) x663) (= x228 (x324 64 x1927 x583)) (= x622 36) (= x375 false) (= false x716) (= x265 false) (= x1776 false) (= false x760) (= x853 36) (= (x57 x1856) x1013) (= x1927 x346) (= x1294 (x57 x1856)) (= (+ 1 x663) x10) (= x771 128) (>= x1573 1) (= x1937 x512) (>= x1013 1) (<= x327 127) (<= x327 127) (= x346 x897) (<= x937 127) (<= 1 x1570) (= 2175550133 x1615) (= x1685 (x1830 128)) (= false x511) (= x299 (x1898 x228)) (= x589 false) (= 729466174051048026939049150500379070045048658665 x456) (= (x1211 x10) x1358) (= false x1818) (= 85963009616197036880240088340724629170983710335684291091497906406952890531840 x420) (>= 127 x937) (= (x670 x663) x407) (= x144 x1873) (>= 127 x1585) (= false x1992) (= false x388) (= false x539) (= (x57 x1856) x1570) (= x830 4067465820) (= false x1112) (= x1117 58652715557392481136322917363278564085642169142198350659161099264462031945728) (= x83 128) (>= 16777215 x407) (= (x999 256) x1873) (= x700 false) (<= x1182 127) (= x512 x236) (= (= 0 x1685) x1841) (<= 1 x1294) (= x1937 x897) (= x1828 x833) (= (x324 64 729466174051048026939049150500379070045048658665 0) x583) (= (x999 288) x1927) (= x1767 3188545240) (>= 127 x1182) (= x157 1551562514) (= x406 false) (= x487 (x57 x32)) (= x403 68) (<= x1585 127)) (and (= x1950 x1781) (= x1950 x927) (= x857 36) (= x927 x833))) (and (=> x1841 x502) (=> (and (not x1841) (and (= x1090 224) (= x990 x512) (>= 127 x332) (>= 127 x332) (= 443215666480553238610125355434898879895743000821 x1003) (= false x804) (= false x1700) (= 2175550133 x1909) (= (= x851 0) x995) (= (x903 224) x851) (>= x557 1) (= x775 (x324 64 443215666480553238610125355434898879895743000821 0)) (= x672 443215666480553238610125355434898879895743000821) (= false x1768) (= x557 (x57 x381)) (= false x1155) (= (x1898 x171) x1771) (= (x324 64 x1927 x775) x171) (= x877 68) (= x71 58652715557392481136322917363278564085642169142198350659161099264462031945728))) (and (=> (and (and (= 320 x212) (= x419 (x324 64 x1927 x868)) (= false x1352) (<= x1233 127) (= x1395 (x565 320)) (= (x1898 x419) x75) (= (x324 64 953417218992365150631206543442508943947348309705 0) x868) (= x1617 x512) (= x119 false) (= x657 58652715557392481136322917363278564085642169142198350659161099264462031945728) (= x1601 false) (>= x822 1) (= (x57 x381) x822) (= 953417218992365150631206543442508943947348309705 x1928) (= 953417218992365150631206543442508943947348309705 x1728) (= 2175550133 x1199) (= false x191) (= 68 x638) (= (= x1395 0) x940) (>= 127 x1233)) (not x995)) (and (=> x940 x502) (=> (and (and (= false x2008) (= x115 100) (= x505 81) (= (> x628 0) x1619) (= x449 (x57 x381)) (= x94 3168472768) (= (x324 64 443215666480553238610125355434898879895743000821 1) x640) (>= 127 x780) (= x1535 (x324 64 x1927 x640)) (= x1191 false) (<= x780 127) (= x668 443215666480553238610125355434898879895743000821) (= x74 85421856841599162343179548931066850070836787616102889281506983661126589349888) (= x512 x1056) (= x1444 (x324 64 81 x1535)) (= 443215666480553238610125355434898879895743000821 x1965) (= false x386) (= x1027 416) (= false x1350) (= (x958 x1444) x165) (= x628 (x491 416)) (>= x449 1)) (not x940)) (and (=> (not x1619) x502) (=> (and (= x1486 1) x1619) x1239))))) (=> x995 x502)))))))
(assert (= (x596 (x324 64 x1927 x583)) x583))
(assert (= x515 (x596 (x1300 x1877 x384 x515 x768 x411))))
(assert (< (x684 x1364 x631 x610 x527 x313 x1514) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1727 x985))
(assert (x902 x1571))
(assert (x410 x450))
(assert (x902 x56))
(assert (x1494 4067465820))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x1845 x437 x1290 x1763 x1593)))
(assert (x902 x1914))
(assert (= (and x1720 x1268) x1770))
(assert (not (x1494 (x324 64 443215666480553238610125355434898879895743000821 1))))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (= (x329 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596)) x1216))
(assert (= (x1529 39095828447348766818467541868648093896559026261938444753180772323039453799525) 0))
(assert (= (x1529 (x641 x1794 x1167 x1205 x1677)) (x641 x1794 x1167 x1205 x1677)))
(assert (x902 x364))
(assert (x902 x353))
(assert (x902 x1108))
(assert (x902 x304))
(assert (=> (<= x1236 10000) (= (x1529 x1236) 0)))
(assert (not (x1494 (x641 x1018 x79 x717 x1407))))
(assert (= (x1422 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433)) x1718))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 81 x1535)))
(assert (x902 x1219))
(assert (x902 x225))
(assert (x1251 x985 32))
(assert (x902 x344))
(assert (= x797 (x574 (x1300 x797 x1435 x1571 x1998 x1040))))
(assert (x902 x1096))
(assert (= 0 (x1529 340282366920938463463374607431768211454)))
(assert (= (x574 (x324 x1845 x454 x1037)) x1845))
(assert (not (x1494 (x641 x1845 x414 x755 x170))))
(assert (x30 x115))
(assert (= (x1843 (x641 66 x385 x1029 x210)) x385))
(assert (=> (<= x1389 10000) (= 0 (x1529 x1389))))
(assert (= (x1529 (x324 64 x811 4)) (x324 64 x811 4)))
(assert (x902 x758))
(assert (x902 x618))
(assert (x902 x1920))
(assert (= x125 (x1422 (x684 x1794 x784 x1396 x1318 x125 x1625))))
(assert (not (x1494 (x1540 x1789 x291))))
(assert (> (x324 64 x558 x1905) 10000))
(assert (x902 x1901))
(assert (x1494 22702217935337460250815789587045760009867340590954827992904518080408871501824))
(assert (> (x1798 x1877 x691 x1023 x889 x1834 x608 x580) 10000))
(assert (< (x1300 x797 x1435 x1571 x1998 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x1983))
(assert (= x797 (x574 (x641 x797 x572 x1343 x1858))))
(assert (=> (<= x1697 10000) (= (x1529 x1697) 0)))
(assert (= (x574 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)) x1877))
(assert (= (x329 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694)) x1517))
(assert (= x1081 (x660 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097))))
(assert (x902 x1267))
(assert (= x335 (x872 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335))))
(assert (= (and (not x569) x653) x190))
(assert (= (x1843 (x641 x905 x1083 x1373 x509)) x1083))
(assert (x902 x734))
(assert (=> (<= x889 10000) (= (x1529 x889) 0)))
(assert (< (x1300 x905 x1417 x1340 x720 x440) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1122 (and x1245 (not x69))))
(assert (x902 x935))
(assert (x902 x688))
(assert (x902 x1728))
(assert (=> (>= 10000 x852) (= (x1529 x852) 0)))
(assert (x902 x1517))
(assert (=> (<= x1797 10000) (= (x1529 x1797) 0)))
(assert (x902 x1671))
(assert (x902 x730))
(assert (x902 x528))
(assert (x902 x409))
(assert (not (x1494 (x324 64 81 x2003))))
(assert (x902 x1688))
(assert (=> (>= 10000 x1164) (= 0 (x1529 x1164))))
(assert (x902 x420))
(assert (x902 x1652))
(assert (not (x1494 (x324 64 81 x1535))))
(assert (=> (>= 10000 x1210) (= (x1529 x1210) 0)))
(assert (= (x1843 (x1540 x1018 x1612)) x1612))
(assert (= (=> (and (= (x1355 (+ 32 x1934)) x486) (= (x920 (- x1316 x1934)) x176) (= x1954 (>= 224 x797)) (= (x1749 x1934) x797) (<= 1 x1316) (= (x1355 (+ x836 x1404)) x1316) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1934) (<= x1934 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x920 (- x176 32)) x1779) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1934) (> x1316 x1934)) (and x1954 (=> (and (= x1734 (x1749 x486)) (= x1230 (x1355 (+ x486 96))) (= (x1749 x486) x1202) (= (x1355 (+ x486 128)) x1423) (= (x1749 x1445) x1865) (= x1435 (x1749 x486)) (= (x1355 (+ 32 x486)) x1691) (= (x1355 (+ 96 x486)) x1451) (= x1609 (x1355 (+ 160 x486))) (= (x1749 x1423) x787) (= (x1749 x894) x1804) (= (x1749 x1960) x842) (= (x1749 x95) x1998) (= (x1540 x797 x283) x1953) (= (x1749 x486) x572) (= x1829 (x1969 0)) (= x1343 (x1749 x946)) (= (x1749 x1171) x1040) (= (x1355 (+ 192 x486)) x1578) (= x1553 (x1355 (+ x486 64))) (= x129 (x684 x797 x1734 x1910 x1121 x1804 x97)) (= (x1749 x110) x97) (= (x1355 (+ 32 x486)) x1147) (= x739 (ite (= 0 x797) x1829 (ite (<= x797 32) x1953 (ite (<= x797 64) x307 (ite (<= x797 96) x632 (ite (<= x797 128) x441 (ite (>= 160 x797) x129 (ite (>= 192 x797) x1345 (ite (<= x797 224) x315 x1867))))))))) (= x441 (x1300 x797 x1435 x1571 x1998 x1040)) (= x1556 (x1749 x1230)) (= (x1749 x1017) x1692) (= x701 (x1355 (+ 128 x486))) (= (x1749 x1451) x100) (= (x1749 x914) x1571) (= x1445 (x1355 (+ 64 x486))) (= x805 (x1749 x1409)) (= (x1749 x1609) x1583) (= x1378 (x1749 x1691)) (= x632 (x641 x797 x572 x1343 x1858)) (= (x1749 x689) x1910) (= (< 0 x842) x1384) (= (x1355 (+ 64 x486)) x142) (= x1283 (+ 32 x1960)) (= (x1355 (+ 64 x486)) x95) (= x1409 (x1355 (+ x486 160))) (= x1345 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)) (= (x1355 (+ 32 x1316)) x229) (= (x1749 x1578) x373) (= x110 (x1355 (+ x486 128))) (= (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373) x315) (= x917 (x1355 (+ 64 x486))) (= (x1749 x486) x283) (= (x1749 x917) x1121) (= (x1355 (+ x486 32)) x689) (= (x1749 x142) x1858) (= x554 (x1749 x486)) (= (x1355 (+ 32 x486)) x914) (= (x1749 x1147) x703) (= (x1749 x486) x1743) (= x894 (x1355 (+ x486 96))) (= (x1355 (+ 96 x486)) x1171) (= (x324 x797 x554 x1378) x307) (= (x1749 x1553) x961) (= x946 (x1355 (+ 32 x486))) (= x278 (x1749 x701)) (= x1017 (x1355 (+ x486 32)))) (and (=> (and (and (= x229 x1464) (= x192 x1283) (= 0 x745)) (not x1384)) x1557) (=> (and x1384 (and (= (+ 32 x1283) x545) (= x1810 (x1749 x1283)) (= (> x842 1) x1072) (= x1643 (x1355 (+ 32 x229))))) (and (=> (and (not x1072) (and (= x1464 x1643) (= 1 x745) (= x545 x192))) x1557) (=> (and (and (= (< 2 x842) x1307) (= x624 (x708 x545)) (= x1220 (+ x545 32)) (= x692 (x1355 (+ 32 x1643)))) x1072) (and (=> (and (and (= (x1355 (+ x692 32)) x244) (= (x919 x1220) x1665) (= (> x842 3) x248) (= x618 (+ x1220 32))) x1307) (and (=> x248 x1833) (=> (and (not x248) (and (= 3 x745) (= x1464 x244) (= x192 x618))) x1557))) (=> (and (and (= 2 x745) (= x692 x1464) (= x192 x1220)) (not x1307)) x1557))))))))) x1611))
(assert (x902 x1045))
(assert (=> (<= x16 10000) (= (x1529 x16) 0)))
(assert (< (x1540 x1877 x1221) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x558 x1630)))
(assert (= (x1529 (+ 1 x1282)) (x1529 x1282)))
(assert (=> (<= x608 10000) (= (x1529 x608) 0)))
(assert (< 10000 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097)))
(assert (= (x1529 (x1969 0)) (x1969 0)))
(assert (= (x329 (x684 x797 x1734 x1910 x1121 x1804 x97)) x1121))
(assert (= x1364 (x574 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433))))
(assert (= 0 (x1529 3168472768)))
(assert (= x519 (=> (= (= 0 x178) x1438) (and (=> (and (not x1438) (and (= x530 x1146) (= x711 x16))) x25) (=> x1438 x26)))))
(assert (=> (<= x967 10000) (= (x1529 x967) 0)))
(assert (= x1470 (and (not x477) x1366)))
(assert (= x146 (x1422 (x1300 x1789 x1381 x935 x1876 x146))))
(assert (=> (>= 10000 x1845) (= 0 (x1529 x1845))))
(assert (x902 x202))
(assert (x902 x408))
(assert (= (x574 (x1540 x797 x283)) x797))
(assert (x902 x1539))
(assert (x902 x1836))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1540 x1794 x1214)))
(assert (not (x1494 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097))))
(assert (x902 x1033))
(assert (> (x324 64 x1622 3) 10000))
(assert (x902 x570))
(assert (< 10000 (x641 x1018 x79 x717 x1407)))
(assert (= (x1843 (x641 x1877 x259 x370 x1315)) x259))
(assert (x902 x1480))
(assert (x902 x636))
(assert (x902 x283))
(assert (not (x1494 (x324 64 x558 x1713))))
(assert (=> (<= x1498 10000) (= (x1529 x1498) 0)))
(assert (< 10000 (x1300 x1794 x168 x285 x1783 x1356)))
(assert (=> (<= x790 10000) (= 0 (x1529 x790))))
(assert (x30 x638))
(assert (=> (<= x414 10000) (= (x1529 x414) 0)))
(assert (= (x1540 x905 x1228) (x1529 (x1540 x905 x1228))))
(assert (= (x1422 (x684 x797 x1734 x1910 x1121 x1804 x97)) x1804))
(assert (x902 x407))
(assert (x902 x1482))
(assert (= (x1843 (x684 x1789 x912 x319 x540 x1064 x1797)) x912))
(assert (x902 x1105))
(assert (x902 x241))
(assert (x902 x1290))
(assert (x902 x566))
(assert (not (x1494 (x1798 x1794 x221 x795 x60 x1301 x586 x1236))))
(assert (= x775 (x596 (x324 64 x1927 x775))))
(assert (x902 x1753))
(assert (x1251 x450 1461501637330902918203684832716283019655932542976))
(assert (x902 x1079))
(assert (x902 x649))
(assert (=> (<= x14 10000) (= (x1529 x14) 0)))
(assert (x30 x945))
(assert (= (x596 (x324 64 x558 x1713)) x1713))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x1877 (x574 (x684 x1877 x1582 x1774 x300 x1977 x1598))))
(assert (x902 x1717))
(assert (< (x324 64 x558 x1713) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x596 (x324 x1364 x1269 x424)) x424))
(assert (=> (>= 10000 x1582) (= (x1529 x1582) 0)))
(assert (x902 x672))
(assert (x902 x819))
(assert (x902 x1024))
(assert (= (x329 (x1798 x1845 x345 x788 x966 x1740 x1555 x647)) x966))
(assert (x902 x1616))
(assert (= (x1529 x738) (x1529 (+ 1 x738))))
(assert (x902 x170))
(assert (x902 x652))
(assert (=> (>= 10000 x717) (= (x1529 x717) 0)))
(assert (x902 x1456))
(assert (= (x1422 (x1798 x1845 x345 x788 x966 x1740 x1555 x647)) x1740))
(assert (x902 x595))
(assert (x902 x417))
(assert (x902 x218))
(assert (x902 x1304))
(assert (x902 x908))
(assert (x902 x1006))
(assert (x902 x788))
(assert (x902 x256))
(assert (x902 x1615))
(assert (x902 x637))
(assert (x902 x1503))
(assert (x902 x490))
(assert (x902 x1316))
(assert (x902 x1696))
(assert (=> (<= x1718 10000) (= (x1529 x1718) 0)))
(assert (= (x574 (x324 64 x915 4)) 64))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x902 x1414))
(assert (= 64 (x574 (x324 64 x63 4))))
(assert (x902 x1522))
(assert (x902 x1174))
(assert (not (x1494 (x324 64 x1828 4))))
(assert (x902 x1665))
(assert (= (x596 (x324 64 x915 3)) 3))
(assert (= x1927 (x1843 (x324 64 x1927 x868))))
(assert (=> (>= 10000 x764) (= (x1529 x764) 0)))
(assert (x902 x1209))
(assert (=> (>= 10000 x369) (= 0 (x1529 x369))))
(assert (x902 x1003))
(assert (x902 x1301))
(assert (x902 x1124))
(assert (x902 x594))
(assert (=> (>= 10000 x864) (= 0 (x1529 x864))))
(assert (x902 x2007))
(assert (= (x641 x1877 x259 x370 x1315) (x1529 (x641 x1877 x259 x370 x1315))))
(assert (x902 x1306))
(assert (x902 x13))
(assert (x1494 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x902 x1740))
(assert (= (x1843 (x1300 x1877 x384 x515 x768 x411)) x384))
(assert (=> (<= x1018 10000) (= (x1529 x1018) 0)))
(assert (= x1794 (x574 (x1300 x1794 x168 x285 x1783 x1356))))
(assert (x902 x657))
(assert (x902 x625))
(assert (x902 x1844))
(assert (= (x1529 (x324 64 x1180 3)) (x324 64 x1180 3)))
(assert (x902 x1851))
(assert (x902 x608))
(assert (x902 x97))
(assert (x902 x580))
(assert (x902 x910))
(assert (= x1435 (x1843 (x1300 x797 x1435 x1571 x1998 x1040))))
(assert (x902 x1178))
(assert (x902 x8))
(assert (= x28 (=> (and (= (x1355 (+ x304 32)) x1712) (= (>= 224 x1794) x251) (<= x304 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x821 (x920 (- x645 32))) (= x645 (x920 (- x1157 x304))) (= x1157 (x1355 (+ x135 x1021))) (> x1157 x304) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x304) (<= x304 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1488 x304) x1794) (<= 1 x1157)) (and x251 (=> (and (= (x1300 x1794 x168 x285 x1783 x1356) x328) (= (x1466 x1565) x1986) (= (x1488 x1857) x1205) (= x769 (x1355 (+ x1712 128))) (= (x1488 x401) x1356) (= (x1488 x1712) x1595) (= (x1355 (+ x1157 32)) x1917) (= (x1488 x734) x938) (= (x1488 x662) x285) (= x784 (x1488 x1712)) (= (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915) x1254) (= x1459 (x1466 x1565)) (or (and (<= x1157 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1157)) (and (>= x1157 1) (<= x1157 115792089237316195423570985008687907853269984665640564039457584007913129639807))) (= (x1355 (+ x1986 x1565)) x126) (= (x1355 (+ x1712 160)) x1674) (= x48 (x1355 (+ 128 x1712))) (= x1430 (x920 (- x1328 x1157))) (= (x1488 x1712) x120) (= x1857 (x1355 (+ x1712 32))) (= (x1488 x769) x722) (= (x1355 (+ 32 x1157)) x1175) (= (x1355 (+ 32 x1712)) x734) (= (x1355 (+ 96 x1712)) x1772) (= x1600 (x324 x1794 x1595 x938)) (>= 340282366920938463463374607431768211455 x997) (= x1915 (x1488 x354)) (= (x920 (- x1093 x1565)) x1921) (= (x1355 (+ 32 x1175)) x528) (= (x1488 x1674) x534) (= (x1488 x1712) x168) (= x1318 (x1488 x1688)) (= x1590 (x1355 (+ 64 x1712))) (= x1672 (x1355 (+ 96 x1712))) (= (x1355 (+ 64 x1712)) x1471) (= x1805 (x1969 0)) (= x125 (x1488 x1772)) (= x1625 (x1488 x1074)) (= (x1488 x759) x795) (= (x1466 x1306) x595) (= (x1355 (+ x1712 64)) x1688) (= x1074 (x1355 (+ 128 x1712))) (= x662 (x1355 (+ 32 x1712))) (= x221 (x1488 x1712)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x781) (<= x1459 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1459 x781)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x781) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1459))) (= x6 (ite (= 0 x1794) x1805 (ite (<= x1794 32) x367 (ite (>= 64 x1794) x1600 (ite (<= x1794 96) x1560 (ite (<= x1794 128) x328 (ite (<= x1794 160) x1418 (ite (<= x1794 192) x250 (ite (>= 224 x1794) x1254 x1217))))))))) (= (x1466 x1076) x997) (>= 18446744073709551615 x1989) (= (x1355 (+ x1712 160)) x348) (>= x1989 1) (or (<= x1986 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x1986 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (>= 224 x1364) x899) (= x1418 (x684 x1794 x784 x1396 x1318 x125 x1625)) (= (x1355 (+ 32 x1712)) x464) (= x1306 (x1355 (+ x1459 x1565))) (= (x1488 x1712) x1167) (= x749 (x1355 (+ x1712 32))) (= (x1355 (+ x1712 64)) x1757) (= x1783 (x1488 x1590)) (= x64 (x1488 x314)) (= x1484 (x1355 (+ 96 x1712))) (= x1330 (x1488 x464)) (= x367 (x1540 x1794 x1214)) (= x1563 (x1355 (+ 32 x528))) (= x1236 (x1488 x348)) (= x1301 (x1488 x1484)) (= x401 (x1355 (+ x1712 96))) (= (x1355 (+ 32 x126)) x1076) (= (x641 x1794 x1167 x1205 x1677) x1560) (or (>= x1459 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x1459 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= x1328 (x1355 (+ x1175 96))) (> x1328 x1157) (= (x1262 x1157) x1364) (= x1396 (x1488 x749)) (= (x1488 x1672) x906) (= x314 (x1355 (+ x1712 64))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1986) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x781)) (< x1986 x781)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1986) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x781))) (= x354 (x1355 (+ 192 x1712))) (= (x1488 x48) x586) (= x759 (x1355 (+ 32 x1712))) (= x781 (x920 (- x1921 95))) (= (x920 (- x1430 32)) x1971) (<= x595 1461501637330902918203684832716283019655932542975) (= (x1798 x1794 x221 x795 x60 x1301 x586 x1236) x250) (= x1214 (x1488 x1712)) (= x1677 (x1488 x1471)) (= x60 (x1488 x1757))) (and x899 (=> (and (= x845 (x1262 x1183)) (= x1269 (x1262 x1917)) (= x972 (x1262 x1687)) (= x533 (x1262 x959)) (= (x641 x1364 x355 x1402 x2001) x875) (= x1341 (x324 x1364 x1269 x424)) (= x109 (x1262 x1912)) (= (x1262 x1917) x631) (= x1675 (x1355 (+ x1917 160))) (= (x1262 x1917) x520) (= (x1355 (+ x1917 32)) x959) (= x1183 (x1355 (+ 64 x1917))) (= (ite (= x1364 0) x508 (ite (<= x1364 32) x1710 (ite (<= x1364 64) x1341 (ite (<= x1364 96) x875 (ite (>= 128 x1364) x1942 (ite (>= 160 x1364) x99 (ite (<= x1364 192) x567 (ite (<= x1364 224) x105 x1642)))))))) x901) (= x508 (x1969 0)) (= x547 (x1262 x714)) (= x967 (x1262 x1917)) (= (x1262 x1071) x1718) (= x1710 (x1540 x1364 x520)) (= (x1262 x968) x2001) (= (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433) x105) (= (x1262 x96) x643) (= (x1355 (+ 64 x1917)) x1687) (= (x1262 x1854) x610) (= x1402 (x1262 x417)) (= x706 (x1355 (+ x1917 64))) (= x99 (x684 x1364 x631 x610 x527 x313 x1514)) (<= 1 x1806) (= x944 (x1355 (+ x1917 32))) (= (x1262 x794) x1697) (= (x1262 x706) x1216) (= x968 (x1355 (+ x1917 64))) (= x730 (x1355 (+ x1917 96))) (= x417 (x1355 (+ 32 x1917))) (= (x1262 x303) x153) (= x1912 (x1355 (+ 32 x1917))) (= (x1262 x1917) x355) (= (x1262 x1675) x1596) (= (x1355 (+ x1917 192)) x1215) (= (x1262 x730) x1825) (= x281 (x1355 (+ x1917 96))) (= (x1262 x1379) x1514) (= x1379 (x1355 (+ 128 x1917))) (= (x1262 x944) x424) (= (x1355 (+ x1917 64)) x1108) (= (x1300 x1364 x967 x109 x972 x1164) x1942) (= x1045 (+ x1960 32)) (= x1071 (x1355 (+ x1917 96))) (= x313 (x1262 x277)) (= (x1262 x1215) x1433) (= x794 (x1355 (+ 160 x1917))) (= (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596) x567) (= x96 (x1355 (+ x1917 128))) (= (x1355 (+ x1917 96)) x277) (= (not (> x1989 1)) x1298) (= (x1262 x1917) x1654) (= x1164 (x1262 x281)) (= x714 (x1355 (+ x1917 128))) (= (x1262 x1917) x1362) (= x1854 (x1355 (+ x1917 32))) (= (x1262 x1960) x1806) (= (x1262 x1108) x527) (= (x1355 (+ x1917 32)) x303)) (and (=> (= x1328 x1769) x518) x1298))))))))
(assert (=> (<= x527 10000) (= (x1529 x527) 0)))
(assert (= (x1711 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)) x1583))
(assert (x902 x1138))
(assert (x902 x1803))
(assert (x902 x979))
(assert (= x1442 (and (not x1392) x1385)))
(assert (x902 x524))
(assert (x902 x1820))
(assert (= (x574 (x324 64 x1276 3)) 64))
(assert (x902 x125))
(assert (=> (<= x540 10000) (= (x1529 x540) 0)))
(assert (= (x596 (x324 64 729466174051048026939049150500379070045048658665 0)) 0))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x902 x1925))
(assert (= (x1529 (x1300 x1018 x369 x1892 x1088 x164)) (x1300 x1018 x369 x1892 x1088 x164)))
(assert (=> (>= 10000 x1828) (= (x1529 x1828) 0)))
(assert (= 64 (x574 (x324 64 x558 x1886))))
(assert (x902 x32))
(assert (not (x1494 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (= (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596) (x1529 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596))))
(assert (= x149 (=> (and (and (= x1792 x1159) (= 36 x18) x1932 (= (ite x1520 x1204 x1141) x1932) (= x1159 x413) (= x413 x1781)) (and (>= 1099511627775 x1766) (= x363 (+ 1 x503)) (= x854 false) (= 0 x342) (= (+ 1 x363) x571) (>= 127 x922) (= x1952 (+ 1 x103)) (= x1968 false) (= (x1647 x503) x33) (= (= 0 x773) x206) (= (x1213 832) x1195) (= x1066 x1482) (<= x33 340282366920938463463374607431768211455) (<= x963 1099511627775) (= (+ x1952 1) x503) (= x896 false) (= x975 (x42 x1952)) (= 911662625 x1703) (>= 255 x975) (= (not x206) x1421) (= x798 x549) (>= 340282366920938463463374607431768211455 x626) (= x963 (x1119 x1952)) (<= x922 127) (= (x1145 x571) x1724) (= (x427 x363) x741) (= (x324 64 x1622 3) x103) (= x1919 x773) (= x245 false) (= x1773 x383) (= false x960) (= x317 x1195) (= (x1213 928) x1092) (= x626 (x504 x1952)) (>= x158 1) (= x984 x425) (= (x1213 896) x1482) (= (x57 x32) x158) (= x1792 x1622) (= false x1782) (= x1919 (x1213 800)) (= (x793 x1952) x1766) (= (x1213 960) x984) (= x549 (x1213 864)) (= x957 x1680) (= x383 (x1213 704)) (= x930 (x1005 x1952)) (= x1092 x468) (= x957 (x1213 768)) (<= x930 1099511627775) (= (ite (not (= 0 (ite (not (= 0 x975)) 1 0))) 1 0) x1836))) (and (=> (and (and (= x1541 x1193) (= x1541 true) (= x218 x765) (= x480 x1885) (= x201 x1732) (= x1359 x1592) (= x254 x1055) (= x1277 x1491)) (not x1421)) x85) (=> x1421 x1490)))))
(assert (x902 x1343))
(assert (x902 x1255))
(assert (=> (<= x345 10000) (= (x1529 x345) 0)))
(assert (x902 x994))
(assert (= (and x152 x1057) x1385))
(assert (x1494 52672081143094129087634851003622940732604441515226977473621344926390909140992))
(assert (= (and x416 x1438) x770))
(assert (< 10000 (x641 x1794 x1167 x1205 x1677)))
(assert (< (x324 64 x1927 x640) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639870))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694)))
(assert (x902 x1109))
(assert (=> (<= x205 10000) (= 0 (x1529 x205))))
(assert (x902 x766))
(assert (x902 x750))
(assert (x902 x678))
(assert (x902 x370))
(assert (= (x1843 (x684 x1877 x1582 x1774 x300 x1977 x1598)) x1582))
(assert (x30 x605))
(assert (x902 x1015))
(assert (x902 x1419))
(assert (=> (<= x542 10000) (= (x1529 x542) 0)))
(assert (x902 x912))
(assert (x376 x1132))
(assert (not (x1494 (x641 x1877 x259 x370 x1315))))
(assert (= (x1529 (+ 1 x380)) (x1529 x380)))
(assert (=> (>= 10000 x1694) (= 0 (x1529 x1694))))
(assert (=> (>= 10000 x652) (= (x1529 x652) 0)))
(assert (x902 x15))
(assert (x902 x133))
(assert (= (x596 (x324 64 81 x2003)) x2003))
(assert (= x608 (x660 (x1798 x1877 x691 x1023 x889 x1834 x608 x580))))
(assert (= 1 (x596 (x324 64 443215666480553238610125355434898879895743000821 1))))
(assert (x902 x230))
(assert (= (x1843 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)) x120))
(assert (= (and x58 (not x940)) x1693))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x902 x622))
(assert (= (=> (= (ite x1116 x1667 x1310) x500) x500) x1567))
(assert (x902 x1491))
(assert (= (x1422 (x1798 x1794 x221 x795 x60 x1301 x586 x1236)) x1301))
(assert (x1251 x1089 32))
(assert (= (x574 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)) x1794))
(assert (x902 x771))
(assert (=> (<= x471 10000) (= (x1529 x471) 0)))
(assert (= (x1422 (x1300 x1877 x384 x515 x768 x411)) x411))
(assert (x902 x1797))
(assert (= x915 (x1843 (x324 64 x915 4))))
(assert (= x520 (x1843 (x1540 x1364 x520))))
(assert (x902 x122))
(assert (x902 x720))
(assert (x902 x1264))
(assert (= x1786 (and x941 (not x973))))
(assert (< 10000 (x1969 0)))
(assert (= (x329 (x641 x1794 x1167 x1205 x1677)) x1677))
(assert (x902 x558))
(assert (=> (<= x1551 10000) (= (x1529 x1551) 0)))
(assert (< (x1540 x1364 x520) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x691))
(assert (x902 x1718))
(assert (x902 x1311))
(assert (x902 x925))
(assert (x902 x1635))
(assert (x902 x1201))
(assert (x902 x1734))
(assert (x902 x1625))
(assert (x902 x560))
(assert (x902 x435))
(assert (x902 x1977))
(assert (=> (>= 10000 x691) (= 0 (x1529 x691))))
(assert (x902 x80))
(assert (= (x1529 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)) (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)))
(assert (= x831 (and x1421 x974)))
(assert (x902 x1410))
(assert (= x1918 (x660 (x684 x1018 x934 x629 x705 x856 x1918))))
(assert (x902 x115))
(assert (= (x1529 (+ 1 x663)) (x1529 x663)))
(assert (x902 x429))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x684 x1794 x784 x1396 x1318 x125 x1625)))
(assert (< (x324 x797 x554 x1378) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1618) (= (x1529 x1618) 0)))
(assert (x902 x830))
(assert (> (x324 x1018 x1704 x633) 10000))
(assert (x902 x821))
(assert (= (x1843 (x1798 x1794 x221 x795 x60 x1301 x586 x1236)) x221))
(assert (= x460 (or x1816 x1558)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x1794 x168 x285 x1783 x1356)))
(assert (= x969 (=> (= x1030 (< 0 x1989)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x78) (= (> x1021 0) x238) (= (x1355 (+ 32 x78)) x636) (= x135 (x1355 (+ x304 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x78) (not (= x78 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (not (= x78 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (x1355 (+ 96 x78)) x304) (> x304 x78) (= x531 (x1355 (+ 32 x636))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x78)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x78) (= x1021 (x1683 x78))) x1030) (and (=> (and (and (= x699 (x1683 x636)) (= (< 32 x1021) x372)) x238) (and (=> (not x372) x28) (=> (and (and (= (x1355 (+ 32 x135)) x592) (= x1689 (> x1021 64)) (= (x1355 (+ x636 32)) x702) (= (x1646 x702) x234)) x372) (and (=> (and (and (= (x1355 (+ 64 x636)) x233) (= x860 (x1058 x233)) (= (x1355 (+ x135 64)) x1203) (= (< 96 x1021) x973)) x1689) (and (=> (not x973) x28) (=> x973 x1499))) (=> (not x1689) x28))))) (=> (not x238) x28))) (=> (and (= x1769 x78) (not x1030)) x518)))))
(assert (x902 x1253))
(assert (x902 x337))
(assert (= x1463 (and x1072 x89)))
(assert (x902 x1363))
(assert (= (x872 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373)) x373))
(assert (x902 x456))
(assert (> (x324 64 x1828 4) 10000))
(assert (x1251 x288 32))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639931) 0))
(assert (x902 x426))
(assert (not (x1494 (x324 x1845 x454 x1037))))
(assert (= x1794 (x574 (x641 x1794 x1167 x1205 x1677))))
(assert (x1111 1099511627776))
(assert (x902 x952))
(assert (=> (<= x1402 10000) (= (x1529 x1402) 0)))
(assert (x902 x1789))
(assert (x902 x175))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 x1794 x1595 x938)))
(assert (= x85 (=> (and (and (and (and (= x1663 x637) (< x1960 x78) (= x1679 x1068) (not (> x789 x1960)) (= x1875 (+ 160 x676)) (= (x338 x32) x1663) (= (x57 x32) x1640) (>= 127 x578) (= x1989 (x1466 x1414)) (= x1588 x1042) (= (+ x1414 32) x1565) (not (< x1093 x524)) (= x353 (+ x1354 32)) (= x1142 x1594) (= x78 (+ 32 x434 x1960)) (= 3686331914 x1831) (= (x761 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1089) x2004) (= x1354 (+ 4 x1243)) (not (> x270 x1093)) (= x67 (+ x676 31)) (= x1197 (= 0 x1989)) (< x331 x1093) (= x1984 (* x1989 32)) (= x1255 x1659) (<= 1 x1640) (< x602 x1093) (= false x356) (= x331 (+ 31 x1414)) (<= x578 127) (= x1089 (+ x895 63)) (= x1414 (+ x436 4)) (= x147 x1696) (= x673 (x737 x926)) (= x1996 false) (>= x2004 1) (= x602 (+ 31 x1354)) (= x1844 x1801) (= (x761 115792089237316195423570985008687907853269984665640564039457584007913129639904 x67) x895) (= x262 x1098) (= x789 (+ 128 x2004)) (< x789 x1960) (= x270 (+ x1565 x1984)) (>= 18446744073709551615 x1989) (= x926 x983) (= (x1466 x1354) x676) (= 128 x1178) (<= x2004 18446744073709551391) (= x434 (* 32 x1989)) (>= 18446744073709551615 x676) (= x1960 (+ x789 96)) (= x524 (+ x676 x353))) (or x1197 (and (and (= (* x1989 32) x996) (= (+ 32 x1960) x2009)) (not x1197)))) (= x1399 x1008)) (and (= x1120 x262) (= x1900 (ite x1421 x201 x1193)) (= x1679 x1133) x1900 (= (x814 4) x915) (= x956 x1844) (= x751 x405) (= (x814 36) x956) (= (x814 196) x1133) (= x1696 x1415) (>= 1461501637330902918203684832716283019655932542975 x956) (= x2005 (x814 100)) (= x1415 (x814 260)) (= x351 x1243) (= (x814 0) x405) (>= 255 x1133) (= x436 x619) (= (x814 228) x566) (<= x436 18446744073709551615) (<= x1243 18446744073709551615) (= x40 false) (= x1594 x566) (= x1042 x915) (>= 1461501637330902918203684832716283019655932542975 x1120) (= (x814 132) x1243) (= x1255 x2005) (= (x814 68) x1120) (= x436 (x814 164)))) x969)))
(assert (x902 x112))
(assert (= (x574 (x641 x1018 x79 x717 x1407)) x1018))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x684 x1789 x912 x319 x540 x1064 x1797)))
(assert (x902 x1515))
(assert (x902 x1989))
(assert (x902 x889))
(assert (x902 x1149))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (x902 x638))
(assert (x902 x164))
(assert (x902 x1236))
(assert (x902 x434))
(assert (x902 x1931))
(assert (= (x329 (x1798 x1794 x221 x795 x60 x1301 x586 x1236)) x60))
(assert (x902 x1862))
(assert (= x495 (or x190 x1706)))
(assert (> (x684 x1877 x1582 x1774 x300 x1977 x1598) 10000))
(assert (x902 x286))
(assert (=> (<= x490 10000) (= 0 (x1529 x490))))
(assert (= x1018 (x574 (x684 x1018 x934 x629 x705 x856 x1918))))
(assert (=> (<= x1877 10000) (= 0 (x1529 x1877))))
(assert (=> (<= x411 10000) (= (x1529 x411) 0)))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639869))
(assert (x902 x1371))
(assert (= 64 (x574 (x324 64 x558 x1630))))
(assert (x902 x741))
(assert (x902 x75))
(assert (x902 x1622))
(assert (x902 x1565))
(assert (= (x1529 (x684 x1018 x934 x629 x705 x856 x1918)) (x684 x1018 x934 x629 x705 x856 x1918)))
(assert (x902 x1455))
(assert (x902 x236))
(assert (= (x324 64 x558 x1630) (x1529 (x324 64 x558 x1630))))
(assert (x902 x1427))
(assert (x902 x41))
(assert (=> (>= 10000 x1364) (= (x1529 x1364) 0)))
(assert (x902 x1055))
(assert (x902 x74))
(assert (> (x324 64 953417218992365150631206543442508943947348309705 0) 10000))
(assert (x902 x536))
(assert (= x1018 (x574 (x324 x1018 x1704 x633))))
(assert (x902 x1686))
(assert (x902 x1871))
(assert (x902 x1864))
(assert (x902 x1032))
(assert (x902 x1846))
(assert (x902 x1210))
(assert (= (x1529 22264039863272420937079131806861516217942124584529674491290359742488301797376) 0))
(assert (=> (<= x1023 10000) (= 0 (x1529 x1023))))
(assert (x902 x856))
(assert (not (x1494 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471))))
(assert (< 10000 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902)))
(assert (= 4 (x596 (x324 64 x915 4))))
(assert (x1494 18446744073709551391))
(assert (x902 x1364))
(assert (= (x1843 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373)) x1743))
(assert (=> (>= 10000 x1977) (= 0 (x1529 x1977))))
(assert (=> (<= x1662 10000) (= (x1529 x1662) 0)))
(assert (x902 x1892))
(assert (=> (<= x1654 10000) (= 0 (x1529 x1654))))
(assert (not (x1494 (x641 x1794 x1167 x1205 x1677))))
(assert (= (and x460 (not x675)) x470))
(assert (=> (<= x1595 10000) (= (x1529 x1595) 0)))
(assert (< 10000 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694)))
(assert (= 0 (x1529 37749366859872002549862985897619888669665948435824635674531347399775013991474)))
(assert (= (x1529 x923) (x1529 (+ x923 1))))
(assert (x902 x1318))
(assert (= x647 (x1711 (x1798 x1845 x345 x788 x966 x1740 x1555 x647))))
(assert (=> (<= x1867 10000) (= (x1529 x1867) 0)))
(assert (= (x1422 (x684 x1018 x934 x629 x705 x856 x1918)) x856))
(assert (x902 x740))
(assert (x902 x610))
(assert (=> (<= x1783 10000) (= 0 (x1529 x1783))))
(assert (= (x324 64 x1276 3) (x1529 (x324 64 x1276 3))))
(assert (= x1018 (x574 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694))))
(assert (=> (>= 10000 x1052) (= (x1529 x1052) 0)))
(assert (x902 x1593))
(assert (= (and x974 (not x1421)) x815))
(assert (not x1840))
(assert (=> (<= x1556 10000) (= 0 (x1529 x1556))))
(assert (x902 x297))
(assert (x902 x1164))
(assert (not (x1494 (x324 x1789 x1034 x366))))
(assert (= (x1798 x1789 x542 x1515 x1758 x652 x205 x1173) (x1529 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173))))
(assert (= x1364 (x574 (x1540 x1364 x520))))
(assert (= (x574 (x324 64 x1927 x868)) 64))
(assert (x902 x1801))
(assert (=> (>= 10000 x594) (= (x1529 x594) 0)))
(assert (= x1364 (x574 (x324 x1364 x1269 x424))))
(assert (=> (<= x1381 10000) (= 0 (x1529 x1381))))
(assert (x902 x200))
(assert (= (x1843 (x641 x1845 x414 x755 x170)) x414))
(assert (x902 x630))
(assert (x902 x1417))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (x902 x246))
(assert (x902 x146))
(assert (x902 x938))
(assert (x902 x1093))
(assert (=> (<= x355 10000) (= (x1529 x355) 0)))
(assert (< 10000 (x684 x1364 x631 x610 x527 x313 x1514)))
(assert (x1494 24522070412059196110286586012810966081169649004736715519769772467740269871104))
(assert (x1727 x1089))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x1877 x384 x515 x768 x411)))
(assert (not (x1494 (x684 x1794 x784 x1396 x1318 x125 x1625))))
(assert (x902 x722))
(assert (= (and x810 x1030) x607))
(assert (x902 x895))
(assert (not (x1494 (x324 x1794 x1595 x938))))
(assert (x902 x472))
(assert (x902 x1677))
(assert (< (x684 x1018 x934 x629 x705 x856 x1918) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1064 (x1422 (x684 x1789 x912 x319 x540 x1064 x1797))))
(assert (x902 x197))
(assert (x30 x563))
(assert (> (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596) 10000))
(assert (x902 x437))
(assert (x902 x1532))
(assert (x902 x1636))
(assert (=> (<= x97 10000) (= (x1529 x97) 0)))
(assert (= (x329 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981)) x1252))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639715))
(assert (x902 x1810))
(assert (x902 x96))
(assert (= x915 (x1843 (x324 64 x915 3))))
(assert (x902 x1085))
(assert (x902 x1835))
(assert (> (x1300 x1018 x369 x1892 x1088 x164) 10000))
(assert (=> (>= 10000 x1216) (= 0 (x1529 x1216))))
(assert (= (x1843 (x324 x1794 x1595 x938)) x1595))
(assert (x902 x1486))
(assert (= (and (not x372) x776) x1026))
(assert (x902 x1375))
(assert (< (x324 64 443215666480553238610125355434898879895743000821 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x838))
(assert (=> (>= 10000 x509) (= (x1529 x509) 0)))
(assert (=> (<= x1407 10000) (= (x1529 x1407) 0)))
(assert (= x1631 (and x161 x1656)))
(assert (x902 x602))
(assert (= x1402 (x596 (x641 x1364 x355 x1402 x2001))))
(assert (= (x1843 (x324 x1845 x454 x1037)) x454))
(assert (= 0 (x1529 22702217935337460250815789587045760009867340590954827992904518080408871501824)))
(assert (=> (<= x428 10000) (= 0 (x1529 x428))))
(assert (x902 x1882))
(assert (x902 x909))
(assert (= (x1529 (x324 64 x63 4)) (x324 64 x63 4)))
(assert (= x558 (x1843 (x324 64 x558 x1886))))
(assert (< 10000 (x684 x1789 x912 x319 x540 x1064 x1797)))
(assert (=> (>= 10000 x1276) (= 0 (x1529 x1276))))
(assert (x902 x1837))
(assert (x1251 x1132 1461501637330902918203684832716283019655932542976))
(assert (= (x1529 24068214603859720034826088920346711864364023158142564334732402816841156945010) 0))
(assert (< (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x188))
(assert (x902 x243))
(assert (= (x324 64 x956 x1513) (x1529 (x324 64 x956 x1513))))
(assert (=> (<= x837 10000) (= 0 (x1529 x837))))
(assert (x902 x1943))
(assert (x902 x989))
(assert (x902 x1857))
(assert (x902 x1518))
(assert (x1111 x450))
(assert (= (x1529 (x324 x1877 x230 x837)) (x324 x1877 x230 x837)))
(assert (= (x1843 (x641 x1794 x1167 x1205 x1677)) x1167))
(assert (x902 x582))
(assert (x902 x1536))
(assert (= x1347 (x1843 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694))))
(assert (=> (<= x1347 10000) (= (x1529 x1347) 0)))
(assert (x902 x63))
(assert (x902 x586))
(assert (=> (>= 10000 x1301) (= 0 (x1529 x1301))))
(assert (x902 x976))
(assert (= (x1529 (x1798 x1845 x345 x788 x966 x1740 x1555 x647)) (x1798 x1845 x345 x788 x966 x1740 x1555 x647)))
(assert (= (x324 64 x1927 x640) (x1529 (x324 64 x1927 x640))))
(assert (x902 x777))
(assert (not (x1494 (x324 x1877 x230 x837))))
(assert (= (x1422 (x1300 x1018 x369 x1892 x1088 x164)) x164))
(assert (=> (>= 10000 x1173) (= (x1529 x1173) 0)))
(assert (x902 x411))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639711) 0))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639684) 0))
(assert (= (x1843 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)) x246))
(assert (x902 x588))
(assert (=> (<= x845 10000) (= (x1529 x845) 0)))
(assert (=> (<= x1396 10000) (= (x1529 x1396) 0)))
(assert (= (and (not x196) x1279) x1493))
(assert (= (x1711 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)) x169))
(assert (=> (<= x225 10000) (= (x1529 x225) 0)))
(assert (> (x1300 x797 x1435 x1571 x1998 x1040) 10000))
(assert (x902 x1273))
(assert (x902 x971))
(assert (x902 x1206))
(assert (x902 x1004))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 81 x2003)))
(assert (= (x574 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373)) x797))
(assert (= x1754 (x1843 (x1540 x1845 x1754))))
(assert (= (or x815 x1337) x131))
(assert (= (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373) (x1529 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373))))
(assert (not (x1494 (x1300 x1364 x967 x109 x972 x1164))))
(assert (= (x1529 (x324 64 x558 x1713)) (x324 64 x558 x1713)))
(assert (= (x1529 (x324 64 729466174051048026939049150500379070045048658665 0)) (x324 64 729466174051048026939049150500379070045048658665 0)))
(assert (x902 x658))
(assert (and (= 81 (x323 9 9)) (= (x323 3 3) 9) (= 27 (x323 9 3)) (= 81 (x323 27 3))))
(assert (x902 x1357))
(assert (=> (>= 10000 x1455) (= 0 (x1529 x1455))))
(assert (= (or x1333 x1429) x1715))
(assert (=> (>= 10000 x587) (= (x1529 x587) 0)))
(assert (=> (<= x1517 10000) (= 0 (x1529 x1517))))
(assert (x902 x1338))
(assert (= x805 (x1711 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373))))
(assert (= x345 (x1843 (x1798 x1845 x345 x788 x966 x1740 x1555 x647))))
(assert (not (x1494 (x324 64 953417218992365150631206543442508943947348309705 0))))
(assert (= (x1529 1099511627775) 0))
(assert (= (x684 x1794 x784 x1396 x1318 x125 x1625) (x1529 (x684 x1794 x784 x1396 x1318 x125 x1625))))
(assert (x902 x138))
(assert (x902 x1879))
(assert (= (or x207 x1080) x1723))
(assert (x1111 x985))
(assert (= 0 (x1529 2175550133)))
(assert (= 0 (x1529 18446744073709551391)))
(assert (< (x324 x1018 x1704 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x1250))
(assert (x902 x1409))
(assert (x410 x1089))
(assert (=> (>= 10000 x554) (= (x1529 x554) 0)))
(assert (=> (>= 10000 x153) (= (x1529 x153) 0)))
(assert (=> (<= x629 10000) (= 0 (x1529 x629))))
(assert (=> (>= 10000 x1754) (= 0 (x1529 x1754))))
(assert (x902 x768))
(assert (x1494 953417218992365150631206543442508943947348309705))
(assert (x902 x1514))
(assert (x902 x772))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x63 4)))
(assert (= x633 (x596 (x324 x1018 x1704 x633))))
(assert (x902 x1089))
(assert (x1111 x67))
(assert (x902 x1014))
(assert (=> (>= 10000 x278) (= 0 (x1529 x278))))
(assert (not (x1494 (x324 64 443215666480553238610125355434898879895743000821 0))))
(assert (= (or x1493 x495) x1387))
(assert (x902 x1928))
(assert (= (x1529 (x324 x797 x554 x1378)) (x324 x797 x554 x1378)))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639839))
(assert (x902 x322))
(assert (< (x324 64 x915 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x222))
(assert (x902 x1088))
(assert (=> (<= x1037 10000) (= (x1529 x1037) 0)))
(assert (= (and x1366 x477) x1038))
(assert (x902 x449))
(assert (x902 x1214))
(assert (= (x1529 (x1300 x1877 x384 x515 x768 x411)) (x1300 x1877 x384 x515 x768 x411)))
(assert (= (x596 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)) x1694))
(assert (=> (<= x1435 10000) (= (x1529 x1435) 0)))
(assert (x902 x1639))
(assert (x902 x1672))
(assert (x807 x1989))
(assert (x902 x1070))
(assert (= x1209 (x1843 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (x902 x345))
(assert (= (x574 (x1300 x1364 x967 x109 x972 x1164)) x1364))
(assert (x902 x1441))
(assert (=> (>= 10000 x1311) (= (x1529 x1311) 0)))
(assert (not (x1494 (x1969 0))))
(assert (x902 x1435))
(assert (x902 x1269))
(assert (x902 x1662))
(assert (= (=> (and (= x201 x1140) (= x80 x1359) (= x480 x273) (= x1247 x765) (= x379 x1193) (= false x1577) (= false x579) (= x151 x254) (= (ite (not (= 0 x1109)) 1 0) x1232) (= x1491 x713) (= false x556) (= false x1549) (= (not (= 0 x1232)) x1140)) x85) x1787))
(assert (x902 x412))
(assert (x902 x1281))
(assert (x902 x1674))
(assert (= (x574 (x324 64 443215666480553238610125355434898879895743000821 0)) 64))
(assert (x410 x1399))
(assert (=> (>= 10000 x934) (= (x1529 x934) 0)))
(assert (x902 x1135))
(assert (= 443215666480553238610125355434898879895743000821 (x1843 (x324 64 443215666480553238610125355434898879895743000821 0))))
(assert (=> (>= 10000 x1876) (= 0 (x1529 x1876))))
(assert (= x1670 (or x1770 x1523)))
(assert (x902 x1179))
(assert (= (x1843 (x324 64 x1927 x640)) x1927))
(assert (= x585 (=> (and (or (and (= 0 x1109) (not x1603)) (and (= x1109 1) x1603)) (= (< 0 (ite (= x1082 0) x1082 1)) x1603)) x1787)))
(assert (= x440 (x1422 (x1300 x905 x1417 x1340 x720 x440))))
(assert (x902 x1018))
(assert (= x1649 (and (not x231) x289)))
(assert (x902 x1712))
(assert (x902 x1551))
(assert (x902 x975))
(assert (not (x1494 (x324 64 x1927 x775))))
(assert (=> (<= x291 10000) (= (x1529 x291) 0)))
(assert (x902 x1432))
(assert (= x631 (x1843 (x684 x1364 x631 x610 x527 x313 x1514))))
(assert (> (x1300 x1364 x967 x109 x972 x1164) 10000))
(assert (= (x1711 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694)) x694))
(assert (=> (>= 10000 x906) (= 0 (x1529 x906))))
(assert (= x35 (and (not x817) x66)))
(assert (x902 x1483))
(assert (x902 x1293))
(assert (= (x574 (x1300 x1789 x1381 x935 x1876 x146)) x1789))
(assert (x1494 1551562514))
(assert (x902 x401))
(assert (= x972 (x329 (x1300 x1364 x967 x109 x972 x1164))))
(assert (x902 x1440))
(assert (x807 32))
(assert (< 10000 (x324 x1364 x1269 x424)))
(assert (x902 x1555))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x1927 x868)))
(assert (=> (>= 10000 x1221) (= (x1529 x1221) 0)))
(assert (x902 x535))
(assert (< 10000 (x641 66 x385 x1029 x210)))
(assert (x902 x930))
(assert (= x1820 (x660 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (< 10000 (x324 64 x558 x1630)))
(assert (=> (<= x631 10000) (= (x1529 x631) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)))
(assert (x902 x1673))
(assert (x1494 1461501637330902918203684832716283019655932542975))
(assert (x902 x1040))
(assert (< (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x194 (and (not x1030) x810)))
(assert (x902 x1595))
(assert (x902 x1161))
(assert (x902 x1771))
(assert (= (x1422 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)) x906))
(assert (< 10000 (x324 x797 x554 x1378)))
(assert (=> (>= 10000 x755) (= (x1529 x755) 0)))
(assert (x902 x1034))
(assert (=> (<= x283 10000) (= 0 (x1529 x283))))
(assert (x902 x627))
(assert (x902 x421))
(assert (x902 x928))
(assert (x902 x696))
(assert (x902 x674))
(assert (x902 x1865))
(assert (= (=> (and (or x911 (and (not x911) (= x1559 0))) (= (= x1559 0) x911)) x1446) x295))
(assert (x902 x549))
(assert (= (x574 (x641 x1845 x414 x755 x170)) x1845))
(assert (x902 x215))
(assert (x902 x662))
(assert (= x787 (x660 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373))))
(assert (= x790 (x596 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047))))
(assert (x902 x48))
(assert (= x1947 (and x260 (not x911))))
(assert (not (x1494 (x684 x1789 x912 x319 x540 x1064 x1797))))
(assert (x902 x1564))
(assert (x902 x83))
(assert (x902 x719))
(assert (=> (<= x1892 10000) (= (x1529 x1892) 0)))
(assert (x902 x557))
(assert (x902 x314))
(assert (x902 x707))
(assert (x902 x651))
(assert (= (x1843 (x684 x1018 x934 x629 x705 x856 x1918)) x934))
(assert (x902 x907))
(assert (x902 x1303))
(assert (= x207 (and x1693 x1619)))
(assert (=> (<= x1902 10000) (= (x1529 x1902) 0)))
(assert (x902 x1484))
(assert (= x811 (x1843 (x324 64 x811 4))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x1364 x967 x109 x972 x1164)))
(assert (= x1364 (x574 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596))))
(assert (x902 x1510))
(assert (= x1789 (x574 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047))))
(assert (x902 x1323))
(assert (= 0 (x574 (x1969 0))))
(assert (x902 x262))
(assert (= x1512 (and x1519 x1603)))
(assert (x902 x1074))
(assert (=> (<= x1514 10000) (= (x1529 x1514) 0)))
(assert (not (x1494 (x1540 x1018 x1612))))
(assert (x902 x1498))
(assert (= (x574 (x1300 x1018 x369 x1892 x1088 x164)) x1018))
(assert (= (x1422 (x684 x1877 x1582 x1774 x300 x1977 x1598)) x1977))
(assert (x902 x970))
(assert (x30 x1478))
(assert (x1494 85421856841599162343179548931066850070836787616102889281506983661126589349888))
(assert (= (x1540 x1018 x1612) (x1529 (x1540 x1018 x1612))))
(assert (x902 x121))
(assert (< (x641 x797 x572 x1343 x1858) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x959))
(assert (=> (>= 10000 x1040) (= (x1529 x1040) 0)))
(assert (= x1828 (x1843 (x324 64 x1828 4))))
(assert (x902 x1759))
(assert (= (x596 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)) x703))
(assert (x902 x881))
(assert (x902 x76))
(assert (= x214 (and x231 x289)))
(assert (x902 x1612))
(assert (=> (<= x1453 10000) (= 0 (x1529 x1453))))
(assert (= (x596 (x641 x905 x1083 x1373 x509)) x1373))
(assert (= 3 (x596 (x324 64 x1276 3))))
(assert (x902 x1334))
(assert (x902 x14))
(assert (= x230 (x1843 (x324 x1877 x230 x837))))
(assert (= (x574 (x1540 x1845 x1754)) x1845))
(assert (not (x1494 (x324 64 x1927 x640))))
(assert (= (x1529 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433)) (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433)))
(assert (= (x1529 3188545240) 0))
(assert (=> (<= x313 10000) (= (x1529 x313) 0)))
(assert (x902 x1217))
(assert (x902 x1349))
(assert (=> (<= x981 10000) (= 0 (x1529 x981))))
(assert (< (x641 x1845 x414 x755 x170) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1877 (x574 (x1300 x1877 x384 x515 x768 x411))))
(assert (x902 x1757))
(assert (x902 x1563))
(assert (x902 x790))
(assert (x902 x325))
(assert (x902 x1778))
(assert (=> (>= 10000 x909) (= (x1529 x909) 0)))
(assert (x902 x38))
(assert (= (x1529 (x324 64 81 x2003)) (x324 64 81 x2003)))
(assert (= (x1422 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)) x977))
(assert (x902 x159))
(assert true)
(assert (= (x324 x1794 x1595 x938) (x1529 (x324 x1794 x1595 x938))))
(assert (x902 x158))
(assert (< (x1540 x1845 x1754) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x792))
(assert (> (x641 x905 x1083 x1373 x509) 10000))
(assert (=> (>= 10000 x720) (= (x1529 x720) 0)))
(assert (x902 x841))
(assert (x1186 32 x1989))
(assert (< 10000 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)))
(assert (x902 x108))
(assert (x1494 85963009616197036880240088340724629170983710335684291091497906406952890531840))
(assert (not (x1494 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173))))
(assert (x902 x629))
(assert (x902 x702))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x684 x797 x1734 x1910 x1121 x1804 x97)))
(assert (x1251 x1411 1461501637330902918203684832716283019655932542976))
(assert (> (x1300 x1845 x437 x1290 x1763 x1593) 10000))
(assert (x1494 18446744073709551487))
(assert (= (x324 64 x558 x1886) (x1529 (x324 64 x558 x1886))))
(assert (=> (<= x529 10000) (= 0 (x1529 x529))))
(assert (x902 x1021))
(assert (= x1933 (and x1584 (not x59))))
(assert (> (x324 x1789 x1034 x366) 10000))
(assert (= x1524 (x329 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902))))
(assert (x902 x1157))
(assert (x902 x1588))
(assert (x902 x285))
(assert (=> (>= 10000 x259) (= 0 (x1529 x259))))
(assert (x902 x270))
(assert (x1494 25877242110744216891076975195880784582809329153640315260649044424131709239296))
(assert (= (=> (and (= (x1355 (+ x1744 32)) x1461) (= (x920 (- x349 x1146)) x1516) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1146) (= (x1355 (+ x1146 32)) x850) (= (x1355 (+ 160 x850)) x349) (= (x1355 (+ x1461 32)) x1721) (= x358 (x920 (- x1516 32))) (= x1814 (<= x1789 224)) (= x600 (x1355 (+ 32 x1146))) (= x1744 (x1355 (+ x850 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1146)) (<= x1146 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1146 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (< x1146 x349) (= x1303 (x1355 (+ x1721 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1146)) (= (x962 x1146) x1789) (<= x1146 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (and (= x1086 x711) (= x652 (x962 x387)) (= (x1355 (+ 32 x600)) x1314) (= (x962 x736) x1758) (= (x962 x1760) x49) (= x1544 (x324 x1789 x1034 x366)) (= x1760 (x1355 (+ x600 64))) (= (x641 x1789 x1474 x1061 x1389) x729) (= x1028 (x1355 (+ 64 x600))) (= x1381 (x962 x600)) (= (x1969 0) x239) (= x1061 (x962 x1261)) (= x530 x349) (= (x684 x1789 x912 x319 x540 x1064 x1797) x499) (= (x962 x869) x1876) (= (x962 x187) x1064) (= x146 (x962 x446)) (= x1949 (x1540 x1789 x291)) (= x1515 (x962 x1314)) (= (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047) x394) (= x935 (x962 x1267)) (= (x1798 x1789 x542 x1515 x1758 x652 x205 x1173) x1916) (= x205 (x962 x255)) (= (x1355 (+ x600 32)) x1267) (= x542 (x962 x600)) (= (x962 x600) x909) (= (x962 x1788) x678) (= x912 (x962 x600)) (= x29 (x1355 (+ 192 x600))) (= (x1355 (+ 96 x600)) x187) (= x540 (x962 x269)) (= x1788 (x1355 (+ 128 x600))) (= (x962 x994) x1173) (= x1389 (x962 x1028)) (= (x1355 (+ x600 64)) x869) (= x446 (x1355 (+ x600 96))) (= x1842 (x1355 (+ x600 32))) (= x1034 (x962 x600)) (= (x962 x600) x1474) (= (x962 x777) x366) (= x582 (x1355 (+ x600 128))) (= x1261 (x1355 (+ x600 32))) (= (x962 x862) x1983) (= x255 (x1355 (+ x600 128))) (= x387 (x1355 (+ 96 x600))) (= x777 (x1355 (+ x600 32))) (= (x962 x1929) x1662) (= x1797 (x962 x582)) (= x319 (x962 x1842)) (= x1047 (x962 x29)) (= (x1355 (+ x600 160)) x862) (= x1929 (x1355 (+ 96 x600))) (= (x1355 (+ x600 64)) x736) (= (x962 x600) x291) (= x989 (x1355 (+ 32 x600))) (= (x962 x989) x790) (= x573 (x1300 x1789 x1381 x935 x1876 x146)) (= x269 (x1355 (+ 64 x600))) (= (x1355 (+ 160 x600)) x994) (= x1086 (ite (= x1789 0) x239 (ite (<= x1789 32) x1949 (ite (<= x1789 64) x1544 (ite (>= 96 x1789) x729 (ite (>= 128 x1789) x573 (ite (>= 160 x1789) x499 (ite (<= x1789 192) x1916 (ite (>= 224 x1789) x394 x220)))))))))) x25) x1814)) x26))
(assert (not (x1494 (x1540 x1364 x520))))
(assert (= (x329 (x684 x1364 x631 x610 x527 x313 x1514)) x527))
(assert (= (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694) (x1529 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694))))
(assert (= (x574 (x324 64 x1927 x775)) 64))
(assert (x1494 39095828447348766818467541868648093896559026265977760979361568868651215582053))
(assert (x902 x244))
(assert (= (x1529 x503) (x1529 (+ x503 1))))
(assert (x902 x220))
(assert (x902 x78))
(assert (x902 x169))
(assert (x902 x365))
(assert (= x1210 (x660 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902))))
(assert (= (x1540 x1364 x520) (x1529 (x1540 x1364 x520))))
(assert (= x1783 (x329 (x1300 x1794 x168 x285 x1783 x1356))))
(assert (x902 x369))
(assert (= (or x1022 x943) x810))
(assert (=> (>= 10000 x552) (= 0 (x1529 x552))))
(assert (= (and x1011 x1520) x867))
(assert (not (x1494 (x324 64 x558 x1630))))
(assert (= (x324 64 x1828 4) (x1529 (x324 64 x1828 4))))
(assert (x902 x319))
(assert (x902 x1056))
(assert (=> (<= x454 10000) (= 0 (x1529 x454))))
(assert (x902 x19))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639839) 0))
(assert (x902 x977))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639806) 0))
(assert (= (and x1584 x59) x209))
(assert (< (x324 64 x558 x1905) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x382))
(assert (x902 x871))
(assert (x30 x1935))
(assert (= (x1711 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902)) x188))
(assert (x902 x436))
(assert (=> (>= 10000 x1635) (= 0 (x1529 x1635))))
(assert (not (x1494 (x1300 x1877 x384 x515 x768 x411))))
(assert (x902 x531))
(assert (=> (<= x1642 10000) (= 0 (x1529 x1642))))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639742))
(assert (= x366 (x596 (x324 x1789 x1034 x366))))
(assert (x410 x1411))
(assert (> (x1540 x1845 x1754) 10000))
(assert (x902 x892))
(assert (x902 x1507))
(assert (= x1902 (x872 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902))))
(assert (x902 x620))
(assert (x1251 x1089 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1529 (x324 x905 x1498 x1065)) (x324 x905 x1498 x1065)))
(assert (x902 x1478))
(assert (x902 x1028))
(assert (x902 x1907))
(assert (x902 x1207))
(assert (=> (>= 10000 x210) (= (x1529 x210) 0)))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639679))
(assert (= x1797 (x660 (x684 x1789 x912 x319 x540 x1064 x1797))))
(assert (= (x1529 52672081143094129087634851003622940732604441515226977473621344926390909140992) 0))
(assert (= x1011 true))
(assert (=> (>= 10000 x168) (= 0 (x1529 x168))))
(assert (= (x1529 (+ x363 1)) (x1529 x363)))
(assert (x902 x842))
(assert (= (x1529 (x324 x1789 x1034 x366)) (x324 x1789 x1034 x366)))
(assert (= (=> (and (= 0 x1082) (= x1055 x151) (= x273 x1885) (= x1592 x80) (= x218 x1247) (= x1277 x713) (= x389 true) (= false x216)) x585) x1425))
(assert (< 10000 (x324 64 443215666480553238610125355434898879895743000821 1)))
(assert (x902 x1437))
(assert (x902 x90))
(assert (x30 x453))
(assert (x902 x1348))
(assert (= x1001 (and (not x235) x1723)))
(assert (= (x1422 (x684 x905 x1335 x472 x952 x529 x1507)) x529))
(assert (=> (>= 10000 x1734) (= 0 (x1529 x1734))))
(assert (= (x324 64 x1622 3) (x1529 (x324 64 x1622 3))))
(assert (x902 x530))
(assert (x902 x742))
(assert (= (x1529 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335)) (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335)))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (=> (>= 10000 x385) (= 0 (x1529 x385))))
(assert (x902 x1064))
(assert (x902 x332))
(assert (=> (<= x1081 10000) (= (x1529 x1081) 0)))
(assert (= (and x551 x248) x1367))
(assert (x902 x1101))
(assert (= (x1529 18446744073709551487) 0))
(assert (= x905 (x574 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902))))
(assert (x902 x1420))
(assert (x902 x1654))
(assert (x902 x1147))
(assert (x902 x578))
(assert (=> (>= 10000 x285) (= (x1529 x285) 0)))
(assert (= (x1422 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694)) x1644))
(assert (=> (>= 10000 x572) (= 0 (x1529 x572))))
(assert (x902 x1697))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639711))
(assert (x902 x1642))
(assert (= x1692 (x596 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373))))
(assert (=> (<= x1927 10000) (= (x1529 x1927) 0)))
(assert (= (x872 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)) x471))
(assert (= (x1529 (x1300 x1845 x437 x1290 x1763 x1593)) (x1300 x1845 x437 x1290 x1763 x1593)))
(assert (=> (<= x1167 10000) (= (x1529 x1167) 0)))
(assert (x902 x1561))
(assert (x902 x988))
(assert (=> (>= 10000 x221) (= (x1529 x221) 0)))
(assert (= (x324 x1018 x1704 x633) (x1529 (x324 x1018 x1704 x633))))
(assert (= (x574 (x324 x797 x554 x1378)) x797))
(assert (= x509 (x329 (x641 x905 x1083 x1373 x509))))
(assert (= x1556 (x1422 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583))))
(assert (x902 x1019))
(assert (= (=> (and (= (x746 x620) x1188) (= (x1355 (+ x636 96)) x620) (= (x1355 (+ 96 x135)) x1115) (= (not (< 128 x1021)) x1339)) (and x1339 x28)) x1499))
(assert (x902 x1218))
(assert (x902 x288))
(assert (= (x1529 57896044618658097711785492504343953926634992332820282019728792003956564819999) 0))
(assert (x902 x705))
(assert (= x889 (x329 (x1798 x1877 x691 x1023 x889 x1834 x608 x580))))
(assert (= (x574 (x1798 x1845 x345 x788 x966 x1740 x1555 x647)) x1845))
(assert (x902 x1633))
(assert (x902 x1679))
(assert (x902 x1769))
(assert (= (and x569 x653) x1706))
(assert (x902 x282))
(assert (=> (<= x1217 10000) (= 0 (x1529 x1217))))
(assert (=> (<= x1097 10000) (= (x1529 x1097) 0)))
(assert (= x1065 (x596 (x324 x905 x1498 x1065))))
(assert (= (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981) (x1529 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (= (x1529 (+ 1 x1861)) (x1529 x1861)))
(assert (x902 x269))
(assert (x902 x1426))
(assert (= x1164 (x1422 (x1300 x1364 x967 x109 x972 x1164))))
(assert (x902 x712))
(assert (= x1180 (x1843 (x324 64 x1180 3))))
(assert (x902 x1068))
(assert (x902 x1356))
(assert (x902 x2001))
(assert (x902 x1391))
(assert (= (x1843 (x1300 x1794 x168 x285 x1783 x1356)) x168))
(assert (x902 x1657))
(assert (=> (<= x1180 10000) (= (x1529 x1180) 0)))
(assert (= x1555 (x660 (x1798 x1845 x345 x788 x966 x1740 x1555 x647))))
(assert (x902 x1508))
(assert (> (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915) 10000))
(assert (= (x1422 (x1300 x1794 x168 x285 x1783 x1356)) x1356))
(assert (> (x324 64 x558 x1886) 10000))
(assert (x1111 1461501637330902918203684832716283019655932542976))
(assert (x902 x968))
(assert (x902 x1195))
(assert (x902 x1411))
(assert (x902 x1398))
(assert (x902 x1215))
(assert (x902 x1872))
(assert (x902 x1288))
(assert (x902 x1875))
(assert (=> (<= x1763 10000) (= 0 (x1529 x1763))))
(assert (x902 x858))
(assert (=> (>= 10000 x1315) (= 0 (x1529 x1315))))
(assert (=> (>= 10000 x961) (= 0 (x1529 x961))))
(assert (x902 x668))
(assert (=> (>= 10000 x856) (= (x1529 x856) 0)))
(assert (x902 x1890))
(assert (x902 x1452))
(assert (x902 x424))
(assert (x902 x972))
(assert (x902 x1402))
(assert (= (x660 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596)) x547))
(assert (=> (<= x1433 10000) (= 0 (x1529 x1433))))
(assert (x902 x1965))
(assert (=> (>= 10000 x915) (= (x1529 x915) 0)))
(assert (x30 x1518))
(assert (= 0 (x1529 103603067176188370116793463780953604340491603117933565163376133325037439549440)))
(assert (= (x324 64 953417218992365150631206543442508943947348309705 0) (x1529 (x324 64 953417218992365150631206543442508943947348309705 0))))
(assert (< 10000 (x1300 x1877 x384 x515 x768 x411)))
(assert (=> (>= 10000 x230) (= (x1529 x230) 0)))
(assert (x902 x7))
(assert (=> (>= 10000 x1981) (= 0 (x1529 x1981))))
(assert (= x1228 (x1843 (x1540 x905 x1228))))
(assert (not (x1494 (x1540 x797 x283))))
(assert (x902 x361))
(assert (x902 x1774))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173)))
(assert (x902 x717))
(assert (x902 x1884))
(assert (= (x574 (x684 x1794 x784 x1396 x1318 x125 x1625)) x1794))
(assert (= (x596 (x1300 x1789 x1381 x935 x1876 x146)) x935))
(assert (= 66 (x574 (x641 66 x385 x1029 x210))))
(assert (x902 x522))
(assert (> (x324 64 x1927 x868) 10000))
(assert (= x803 (and x152 (not x1057))))
(assert (< 10000 (x324 64 x1276 3)))
(assert (= (x1843 (x324 x1018 x1704 x633)) x1704))
(assert (= (x1422 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373)) x100))
(assert (= (x1422 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335)) x1311))
(assert (= x1584 (and x829 x1130)))
(assert (x902 x1927))
(assert (x902 x405))
(assert (x902 x64))
(assert (x902 x1643))
(assert (> (x684 x1845 x594 x1824 x1551 x696 x1453) 10000))
(assert (x902 x650))
(assert (x902 x545))
(assert (x902 x780))
(assert (x902 x277))
(assert (x902 x587))
(assert (x902 x1146))
(assert (= (x1529 57896044618658097711785492504343953926418782139537452191302581570759080747168) 0))
(assert (x902 x1461))
(assert (x410 1099511627775))
(assert (= x1221 (x1843 (x1540 x1877 x1221))))
(assert (x902 x701))
(assert (=> (>= 10000 x1524) (= (x1529 x1524) 0)))
(assert (not (x1494 (x684 x1877 x1582 x1774 x300 x1977 x1598))))
(assert (not (x1494 (x324 64 x915 4))))
(assert (< (x1300 x1018 x369 x1892 x1088 x164) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x50 (=> (and (and (= (x57 x32) x1872) (>= 127 x522) (<= x1196 16777215) (= x1196 (x670 x738)) (= x811 x891) (= 4067465820 x651) (= false x1094) (= x1811 x344) (= x738 (x324 64 x811 4)) (= false x1500) (= x1275 false) (>= 127 x522) (= (not x1568) x1237) (= (x884 256) x344) (= (x884 288) x1371) (= x575 (x1211 x404)) (= false x1263) (= x9 x1141) (>= x1872 1) (= x1568 (= x1371 0)) (= false x890) (= (+ x738 1) x404) (= x1702 false) (= x1237 x1204)) (and (= 36 x1561) (= x1469 x553) (= x891 x1469) (= x1781 x553))) x149)))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639873)))
(assert (= (x1843 (x324 64 81 x2003)) 81))
(assert (x902 x465))
(assert (x902 x21))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1798 x1877 x691 x1023 x889 x1834 x608 x580)))
(assert (x902 x1433))
(assert (= x1789 (x574 (x1540 x1789 x291))))
(assert (x902 x1423))
(assert (x902 x313))
(assert (x902 x428))
(assert (x902 x1468))
(assert (=> (<= x966 10000) (= 0 (x1529 x966))))
(assert (= (x574 (x324 64 x956 x1513)) 64))
(assert (= x1455 (x596 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902))))
(assert (not (x1494 (x324 64 x558 x1905))))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639742)))
(assert (x902 x781))
(assert (=> (>= 10000 x805) (= 0 (x1529 x805))))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= (x1529 x1850) (x1529 (+ x1850 1))))
(assert (=> (<= x912 10000) (= 0 (x1529 x912))))
(assert (x902 x613))
(assert (x30 x173))
(assert (= x1884 (x1843 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x1622 3)))
(assert (x902 x1955))
(assert (= (x1529 x1602) (x1529 (+ 1 x1602))))
(assert (x902 x1579))
(assert (not (x1494 (x324 64 x956 x1513))))
(assert (=> (>= 10000 x1865) (= 0 (x1529 x1865))))
(assert (x902 x1354))
(assert (x902 x104))
(assert (x902 x694))
(assert (x902 x213))
(assert (x902 x94))
(assert (x902 x398))
(assert (not (x1494 (x1300 x1018 x369 x1892 x1088 x164))))
(assert (x902 x554))
(assert (x902 x1956))
(assert (= (x1843 (x1300 x905 x1417 x1340 x720 x440)) x1417))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639714) 0))
(assert (x902 x866))
(assert (= (x1422 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596)) x1825))
(assert (x902 x1911))
(assert (< 10000 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433)))
(assert (x902 x276))
(assert (x902 x1199))
(assert (=> (>= 10000 x1856) (= (x1529 x1856) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1540 x797 x283)))
(assert (= x652 (x1422 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173))))
(assert (< (x324 64 x1828 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x954))
(assert (x902 x1880))
(assert (= (x1529 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)) (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)))
(assert (not (x1494 (x1540 x1877 x1221))))
(assert (x902 x18))
(assert (= x2006 (x1711 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (x902 x1082))
(assert (= x452 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1913) (< x1913 x409) (<= x1913 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1913 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x409 (x1355 (+ x1913 64))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1913)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1913)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1913)) (= (not (> x1989 2)) x1765) (= x1914 (x1355 (+ x1913 32)))) (and (=> (= x409 x226) x603) x1765))))
(assert (x902 x924))
(assert (< 10000 (x1540 x797 x283)))
(assert (=> (<= x1555 10000) (= (x1529 x1555) 0)))
(assert (= (and x1044 (not x484)) x161))
(assert (x902 x1746))
(assert (= (x596 (x1300 x1364 x967 x109 x972 x1164)) x109))
(assert (= x1498 (x1843 (x324 x905 x1498 x1065))))
(assert (x902 x1919))
(assert (= (x1843 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596)) x1362))
(assert (= (x1529 24522070412059196110286586012810966081169649004736715519769772467740269871104) 0))
(assert (x902 x373))
(assert (= (x329 (x1300 x1789 x1381 x935 x1876 x146)) x1876))
(assert (= (x660 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)) x722))
(assert (x902 x1464))
(assert (= (x1843 (x1300 x1789 x1381 x935 x1876 x146)) x1381))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639679)))
(assert (x902 x699))
(assert (x410 x985))
(assert (= (x1529 (x324 64 x558 x1905)) (x324 64 x558 x1905)))
(assert (x30 x18))
(assert (x902 x547))
(assert (= (x1529 (x1300 x1794 x168 x285 x1783 x1356)) (x1300 x1794 x168 x285 x1783 x1356)))
(assert (x902 x654))
(assert (= 0 (x1529 443215666480553238610125355434898879895743000821)))
(assert (= (x596 (x324 64 81 x1535)) x1535))
(assert (x902 x1485))
(assert (= (x596 (x324 64 x63 4)) 4))
(assert (x902 x1614))
(assert (x902 x1295))
(assert (x902 x1915))
(assert (=> (>= 10000 x1824) (= (x1529 x1824) 0)))
(assert (x1494 22260506169142864168419965211860030380910469616735923253374116530085716557824))
(assert (= (x574 (x324 64 x1927 x640)) 64))
(assert (> (x324 64 x915 4) 10000))
(assert (= (or x671 x1933 x1987 x209 x1122) x1720))
(assert (x902 x1669))
(assert (x902 x1743))
(assert (x902 x894))
(assert (= (x1529 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)) (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471)))
(assert (x902 x1913))
(assert (x902 x110))
(assert (< 10000 (x684 x905 x1335 x472 x952 x529 x1507)))
(assert (x902 x860))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x915 4)))
(assert (= (x1540 x1877 x1221) (x1529 (x1540 x1877 x1221))))
(assert (x902 x963))
(assert (x30 x1995))
(assert (=> (<= x170 10000) (= (x1529 x170) 0)))
(assert (x902 x1739))
(assert (= (x1529 4067465820) 0))
(assert (x902 x1395))
(assert (=> (>= 10000 x1583) (= (x1529 x1583) 0)))
(assert (= x1557 (=> (and (= (* 32 x842) x1207) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1316) (= x745 x842) (>= 4 x842) (= x478 x192) (= (x1355 (+ x229 x1207)) x513) (= x1374 (* x842 32)) (= x478 (+ x1283 x1374)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1316) (= x1270 (x920 (- x881 32))) (= x1533 (>= 224 x1845)) (< x1316 x1464) (<= 1 x513) (= (x1472 x1316) x1845) (= x1464 x513) (>= x1464 1) (= (x920 (- x1464 x1316)) x881) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1316) (= (x1355 (+ x1316 32)) x222)) (and x1533 (=> (and (= x1639 (x1355 (+ 32 x1265))) (= (x1355 (+ x222 128)) x1552) (= (x1472 x866) x1453) (= x1824 (x1472 x1460)) (= (x1355 (+ 32 x1464)) x1265) (= x788 (x1472 x1281)) (= (x1355 (+ x222 64)) x390) (= (x1472 x1976) x1551) (= (x1472 x390) x1763) (= (x1472 x197) x1037) (= x667 (x684 x1845 x594 x1824 x1551 x696 x1453)) (= (x1355 (+ 96 x222)) x801) (= (x1472 x1049) x647) (= (x1355 (+ x222 160)) x611) (= x1839 (x1300 x1845 x437 x1290 x1763 x1593)) (= (x1355 (+ 32 x222)) x1566) (= (x1355 (+ x222 32)) x197) (= x1976 (x1355 (+ 64 x222))) (= x1311 (x1472 x688)) (= (x1355 (+ x1795 32)) x880) (= x170 (x1472 x296)) (= (x1472 x222) x1635) (= (x920 (- x15 32)) x1509) (= (x1472 x1802) x552) (= x490 (x1472 x1751)) (= (x1355 (+ 64 x222)) x1802) (= x266 (x324 x1845 x454 x1037)) (= x437 (x1472 x222)) (= (x1472 x101) x966) (= x1751 (x1355 (+ x222 32))) (= (x1355 (+ 32 x122)) x286) (= (x1798 x1845 x345 x788 x966 x1740 x1555 x647) x496) (= x414 (x1472 x222)) (= x644 (>= 224 x1018)) (= (x1355 (+ x222 96)) x1837) (= (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335) x1607) (= (x1355 (+ x222 32)) x1281) (= x1169 (x1969 0)) (= (x1355 (+ x222 96)) x688) (= x696 (x1472 x1837)) (= x122 (x1355 (+ 32 x1639))) (= (x1472 x222) x454) (= x1641 (x641 x1845 x414 x755 x170)) (= x1052 (x1472 x611)) (= x866 (x1355 (+ 128 x222))) (= x1018 (x1725 x1464)) (= (x1355 (+ 192 x1265)) x1146) (= (x1355 (+ x1464 32)) x1004) (= (x1472 x222) x1754) (= x1740 (x1472 x625)) (= x594 (x1472 x222)) (= x1795 (x1355 (+ x286 32))) (> x1146 x1464) (= x345 (x1472 x222)) (= (x1355 (+ 64 x222)) x101) (= x693 (x1540 x1845 x1754)) (or (and (>= x1464 1) (<= x1464 115792089237316195423570985008687907853269984665640564039457584007913129639711)) (and (<= x1464 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1464 115792089237316195423570985008687907853269984665640564039457584007913129639714))) (= x335 (x1472 x1920)) (= (x1472 x1671) x755) (= (x1355 (+ 128 x222)) x1413) (= (x1355 (+ x222 96)) x625) (= (x1472 x801) x1593) (= (ite (= x1845 0) x1169 (ite (<= x1845 32) x693 (ite (<= x1845 64) x266 (ite (>= 96 x1845) x1641 (ite (<= x1845 128) x1839 (ite (>= 160 x1845) x667 (ite (>= 192 x1845) x496 (ite (<= x1845 224) x1607 x1616)))))))) x991) (= (x920 (- x1146 x1464)) x15) (= (x1472 x1552) x1555) (= (x1355 (+ 32 x222)) x1460) (= (x1355 (+ x222 160)) x1049) (= (x1472 x1413) x14) (= x1671 (x1355 (+ 32 x222))) (= x1290 (x1472 x1566)) (= (ite (not (= x2005 0)) 1 0) x121) (= (x1355 (+ 192 x222)) x1920) (= (x1355 (+ 64 x222)) x296)) (and x644 (=> (and (and (= x88 (x324 x1018 x1704 x633)) (= x1475 (x1355 (+ 96 x1004))) (= x1070 (x1355 (+ x1004 32))) (= x1201 (x1355 (+ 64 x1004))) (= x1644 (x1725 x1336)) (= (x1725 x1320) x717) (= (x1355 (+ x1004 128)) x1278) (= x694 (x1725 x1505)) (= x1505 (x1355 (+ 160 x1004))) (= x1336 (x1355 (+ 96 x1004))) (= x1897 (x1355 (+ 160 x1004))) (= (x1725 x1201) x705) (= x1892 (x1725 x1503)) (= x1252 (x1725 x326)) (= x856 (x1725 x1475)) (= x976 (x1355 (+ 64 x1004))) (= (x1355 (+ x1004 32)) x362) (= x1187 (ite (= 0 x1018) x1077 (ite (>= 32 x1018) x687 (ite (<= x1018 64) x88 (ite (<= x1018 96) x665 (ite (>= 128 x1018) x754 (ite (<= x1018 160) x1280 (ite (<= x1018 192) x249 (ite (<= x1018 224) x1114 x892))))))))) (= x1704 (x1725 x1004)) (= x764 (x1725 x819)) (= (x1300 x1018 x369 x1892 x1088 x164) x754) (= x225 (x1725 x1951)) (= (x1725 x2000) x1820) (= x852 (x1725 x362)) (= x477 (= x318 x32)) (= (x1725 x1004) x1347) (= (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981) x1114) (= (x1355 (+ x1004 32)) x1951) (= (x1355 (+ 32 x1004)) x1521) (= (x1969 0) x1077) (= x1503 (x1355 (+ 32 x1004))) (= x1939 (x1355 (+ 192 x1004))) (= x1320 (x1355 (+ x1004 32))) (= x1209 (x1725 x1004)) (= (x1355 (+ x1004 64)) x326) (= x665 (x641 x1018 x79 x717 x1407)) (= x1280 (x684 x1018 x934 x629 x705 x856 x1918)) (= x1517 (x1725 x1007)) (= (x1725 x1278) x1918) (= x629 (x1725 x1070)) (= (x1355 (+ x1004 96)) x1439) (= (x1355 (+ 128 x1004)) x1338) (= x934 (x1725 x1004)) (= (x1725 x182) x1407) (= x2006 (x1725 x1897)) (= (x1540 x1018 x1612) x687) (= (x1725 x1338) x1443) (= (x1725 x1521) x633) (= (x1725 x1004) x79) (= x182 (x1355 (+ x1004 64))) (= (x1725 x1004) x1612) (= (x1355 (+ 96 x1004)) x819) (= x369 (x1725 x1004)) (= (x1355 (+ x1004 128)) x2000) (= x249 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694)) (= (x1725 x1939) x1981) (= x164 (x1725 x1439)) (= x1088 (x1725 x976)) (= x1007 (x1355 (+ x1004 64)))) (or (and (= x178 (ite (= x1729 x1657) 1 0)) x477) (and (not x477) (= x178 (ite x477 1 0))))) x519)))))))
(assert (x902 x1203))
(assert (=> (<= x437 10000) (= (x1529 x437) 0)))
(assert (x902 x205))
(assert (= (x324 64 81 x1535) (x1529 (x324 64 81 x1535))))
(assert (=> (<= x972 10000) (= 0 (x1529 x972))))
(assert (x902 x1092))
(assert (= (x684 x1845 x594 x1824 x1551 x696 x1453) (x1529 (x684 x1845 x594 x1824 x1551 x696 x1453))))
(assert (x902 x996))
(assert (x902 x541))
(assert (x902 x828))
(assert (= (and x980 (not x1116)) x1333))
(assert (x1494 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639805))
(assert (= (x872 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)) x1915))
(assert (x902 x1951))
(assert (x902 x127))
(assert (=> (>= 10000 x120) (= 0 (x1529 x120))))
(assert (=> (<= x1228 10000) (= (x1529 x1228) 0)))
(assert (< (x324 x905 x1498 x1065) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x30 x1208))
(assert (< (x324 64 x558 x1886) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1494 2175550133))
(assert (= (and x1463 x1307) x551))
(assert (= (x1529 18446744073709551550) 0))
(assert (x902 x278))
(assert (= (x1843 (x324 64 x956 x1513)) x956))
(assert (= x1624 (and x1181 x757)))
(assert (x902 x617))
(assert (= (x596 (x684 x1364 x631 x610 x527 x313 x1514)) x610))
(assert (x902 x1959))
(assert (= (=> (and (or (and (not x675) (and (<= 1 x1946) (>= 340282366920938463463374607431768211455 x1946) (>= 340282366920938463463374607431768211454 x874) (= (+ x1746 x874) x1946) (= x874 (x504 x843)) (= x921 x1746))) (and (and (<= x1123 340282366920938463463374607431768211455) (= x1746 x921) (= x1062 (+ x843 1)) (= x1817 (x1647 x1062)) (<= x1817 340282366920938463463374607431768211454) (<= 1 x1123) (= x1123 (+ x1746 x1817))) x675)) (and (not (= x719 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x719)) (= (x1355 (+ x719 64)) x189) (< x719 x189) (>= x1746 1) (<= x719 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x719)) (>= 340282366920938463463374607431768211455 x1746) (= x675 (= 0 x2005)) (<= x719 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x719))) x1502) x913))
(assert (= x1372 (and x551 (not x248))))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639870) 0))
(assert (x902 x1758))
(assert (=> (>= 10000 x580) (= 0 (x1529 x580))))
(assert (= (x596 (x684 x797 x1734 x1910 x1121 x1804 x97)) x1910))
(assert (= 0 (x1529 63076024560530113402979550242307453568063438748328787417531900361828837441551)))
(assert (= x1061 (x596 (x641 x1789 x1474 x1061 x1389))))
(assert (x902 x1327))
(assert (x902 x1894))
(assert (= (x329 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433)) x845))
(assert (x902 x331))
(assert (= (and x1130 (not x829)) x1987))
(assert (x902 x1358))
(assert (x902 x1403))
(assert (x376 x1411))
(assert (x1251 x985 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639844))
(assert (> (x324 64 x63 4) 10000))
(assert (=> (>= 10000 x472) (= (x1529 x472) 0)))
(assert (= x1981 (x872 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (x902 x797))
(assert (x902 x837))
(assert (x1494 51755322175217624492750805572474109157238378692794855914282927279451288895488))
(assert (x902 x1196))
(assert (x902 x287))
(assert (x902 x1817))
(assert (x902 x1704))
(assert (x902 x762))
(assert (= x285 (x596 (x1300 x1794 x168 x285 x1783 x1356))))
(assert (x902 x887))
(assert (x1494 103603067176188370116793463780953604340491603117933565163376133325037439549440))
(assert (x902 x1230))
(assert (x902 x961))
(assert (= (=> (and (= (x264 x1769) x1404) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1769)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1769)) (= (x1355 (+ x1769 32)) x1890) (> x1934 x1769) (<= x1769 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1355 (+ 139 x1331)) x836) (= (x1355 (+ 32 x243)) x1532) (= x588 (x1355 (+ x1532 32))) (= x243 (x1355 (+ 32 x1321))) (= (x1355 (+ 32 x1331)) x1321) (= (> x1404 0) x516) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1769)) (= x1331 (x1355 (+ 32 x1934))) (= x758 (x1355 (+ 32 x1890))) (<= x1769 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1769 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1934 (x1355 (+ 96 x1769)))) (and (=> (and (and (= x1057 (> x1404 32)) (= (x264 x1890) x279)) x516) (and (=> (not x1057) x1611) (=> (and (and (= (x1355 (+ 32 x836)) x1879) (= x1392 (> x1404 64)) (= (x1355 (+ 32 x1890)) x1264) (= x287 (x849 x1264))) x1057) (and (=> (and x1392 (and (= (x1355 (+ 64 x836)) x1357) (= x1698 (x1355 (+ x1890 64))) (= (x320 x1698) x576) (= x817 (> x1404 96)))) (and (=> x817 x1705) (=> (not x817) x1611))) (=> (not x1392) x1611))))) (=> (not x516) x1611))) x518))
(assert (x902 x1389))
(assert (=> (<= x32 10000) (= (x1529 x32) 0)))
(assert (x1251 x288 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x548))
(assert (=> (>= 10000 x1915) (= 0 (x1529 x1915))))
(assert (x902 x173))
(assert (x902 x1929))
(assert (= x967 (x1843 (x1300 x1364 x967 x109 x972 x1164))))
(assert (x902 x176))
(assert (x902 x1042))
(assert (x902 x1939))
(assert (= (x1529 (x684 x905 x1335 x472 x952 x529 x1507)) (x684 x905 x1335 x472 x952 x529 x1507)))
(assert (x902 x1845))
(assert (not (x1494 (x324 64 x1276 3))))
(assert (x902 x765))
(assert (x1111 x1411))
(assert (x902 x862))
(assert (= (x1529 (x684 x797 x1734 x1910 x1121 x1804 x97)) (x684 x797 x1734 x1910 x1121 x1804 x97)))
(assert (x902 x1735))
(assert (x902 x576))
(assert (x902 x210))
(assert (x902 x1017))
(assert (=> (>= 10000 x1918) (= 0 (x1529 x1918))))
(assert (x902 x836))
(assert (= (=> (and (and (not (= x381 x1618)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1008) (>= x433 0) (not (= x587 x1856)) (= 7 x447) x1620 (<= 0 x3) (<= x623 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x864 x1856)) (>= x32 1) x2013 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1781) (= x1878 false) (not (= x32 x587)) x1383 (>= x1353 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x664) (not (= x1618 x1856)) (not (= x32 x1618)) (= (< 0 (x57 x864)) x1383) (<= 1 x1618) (= x395 (< 0 (x57 x32))) (= 36 x1518) x395 (= x199 0) (>= x587 1) (>= 1461501637330902918203684832716283019655932542975 x318) (>= x475 0) (>= x623 0) (>= 1461501637330902918203684832716283019655932542975 x864) (<= x475 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1994) (= x1302 x466) (not (= x32 x381)) (not (= x1856 x32)) (not (= x587 x381)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1093) (= false x128) (>= x832 0) (<= 0 x1008) (<= x1618 1461501637330902918203684832716283019655932542975) (<= x1856 1461501637330902918203684832716283019655932542975) (= x886 false) (not (= x381 x1856)) (<= x32 1461501637330902918203684832716283019655932542975) (<= 0 x664) (<= x433 1461501637330902918203684832716283019655932542975) (>= x864 1) x1979 (>= x1093 356) (>= x1856 1) (<= 0 x1681) (not (= x864 x381)) (<= x311 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x864 x32)) x1548 (<= 1 x381) (not (= x587 x1618)) (= x1382 3686331914) (= x1548 (< 0 (x57 x1618))) (= x1781 x1302) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3) (<= x587 1461501637330902918203684832716283019655932542975) (<= x832 1461501637330902918203684832716283019655932542975) (<= x381 1461501637330902918203684832716283019655932542975) (>= x311 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x493) (= x1225 x32) (not (= x1618 x864)) (= false x1506) (= (> (x57 x381) 0) x2013) (not (= x864 x587)) (<= 0 x1781) (>= 1461501637330902918203684832716283019655932542975 x983) (<= x1353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x983) (>= 4294967295 x1681) (= x466 x593) (= (> (x57 x1856) 0) x1620) (= (> (x57 x587) 0) x1979) (>= x493 0) (>= 1461501637330902918203684832716283019655932542975 x1036)) (and (>= 1099511627775 x1945) (= 911662625 x766) (= (x42 x923) x200) (<= 1 x1717) (<= x885 127) (= (x1826 768) x1349) (= x871 (x1826 800)) (= false x799) (= x1731 (x1826 832)) (= (+ x1962 1) x923) (= x1911 (x427 x1602)) (>= 1099511627775 x613) (= x1282 (+ 1 x923)) (= x617 (x1826 960)) (= x1661 (+ x1602 1)) (= false x1346) (= x1180 x593) (= (x1119 x923) x613) (= x1434 x1349) (= x1962 (x324 64 x1180 3)) (= x1819 false) (<= x1327 1099511627775) (<= x1973 340282366920938463463374607431768211455) (= (x57 x32) x1717) (= x1945 (x1005 x923)) (= x1327 (x793 x923)) (= 0 x577) (<= x1778 340282366920938463463374607431768211455) (= x1731 x1676) (= x438 x1536) (= x1520 (not x1537)) (= x1536 (x1826 896)) (= (= x661 0) x1537) (<= x885 127) (= x426 x474) (= (+ x1282 1) x1602) (= false x752) (= (x504 x923) x1778) (<= x200 255) (= (x1647 x1282) x1973) (= x1855 (ite (not (= (ite (not (= x200 0)) 1 0) 0)) 1 0)) (= x916 false) (= x621 (x1145 x1661)) (= (x1826 864) x1334) (= x661 x871) (= x1296 (x1826 928)) (= (x1826 704) x426) (= x617 x748) (= false x655) (= x481 x1296) (= x185 x1334))) (and (=> (and (not x1520) (and (= x1360 x1204) (= x31 true) (= x31 x1141))) x149) (=> x1520 x50))) x1840))
(assert (x902 x1336))
(assert (x902 x147))
(assert (= (x1529 22260506169142864168419965211860030380910469616735923253374116530085716557824) 0))
(assert (=> (>= 10000 x381) (= 0 (x1529 x381))))
(assert (x902 x942))
(assert (x902 x513))
(assert (=> (>= 10000 x938) (= 0 (x1529 x938))))
(assert (=> (>= 10000 x366) (= (x1529 x366) 0)))
(assert (x902 x944))
(assert (x902 x1824))
(assert (x902 x1806))
(assert (x902 x1396))
(assert (= x788 (x596 (x1798 x1845 x345 x788 x966 x1740 x1555 x647))))
(assert (< (x1540 x1018 x1612) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x1232))
(assert (x1111 x1089))
(assert (= (x596 (x684 x1877 x1582 x1774 x300 x1977 x1598)) x1774))
(assert (x902 x878))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639932) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x641 x1789 x1474 x1061 x1389)))
(assert (= (x1529 x1962) (x1529 (+ 1 x1962))))
(assert (x902 x505))
(assert (x1494 18446744073709551550))
(assert (< 10000 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047)))
(assert (x902 x234))
(assert (x902 x1479))
(assert (=> (<= x1209 10000) (= (x1529 x1209) 0)))
(assert (x902 x1598))
(assert (< (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x1182))
(assert (= (x1422 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097)) x1440))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x641 66 x385 x1029 x210)))
(assert (x902 x921))
(assert (= (x1540 x1845 x1754) (x1529 (x1540 x1845 x1754))))
(assert (= (x1843 (x324 64 729466174051048026939049150500379070045048658665 0)) 729466174051048026939049150500379070045048658665))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (x902 x1592))
(assert (x902 x1960))
(assert (x807 x842))
(assert (= x25 (=> (and (and (= x210 (x1504 x1219)) (= (x1355 (+ x530 32)) x1285) (= x757 (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x1415)) (= x1029 (x1504 x1285)) (= x828 (x1355 (+ 32 x1468))) (= x1219 (x1355 (+ 64 x530))) (= (x1355 (+ 2 x530)) x1468) (= x27 (x641 66 x385 x1029 x210)) (= x385 (x1504 x530))) (or (and x757 (and (= x1559 3) (= x530 x1420) (= x1132 0))) (and (and (or (and (and (= x1559 1) (= x918 x1420) (= x1132 0)) x231) (and (and (= x918 x1420) (= x1132 x1411) (= x1559 0)) (not x231))) (and (= 128 x1610) (= x1964 (x1355 (+ 32 x918))) (= (x1738 (x1355 (+ 96 x918))) x1158) (= (x761 1461501637330902918203684832716283019655932542975 x1411) x1168) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x530)) (= x1853 (x920 (- x918 32))) (= (x1355 (+ 32 x1964)) x1480) (= (x920 (- x918 32)) x322) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x530) (= x231 (= 0 x1168)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x530) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x530) (>= 1461501637330902918203684832716283019655932542975 x1035) (= (x1738 x918) x1054) (> x918 x530) (= x1636 (x1355 (+ x1480 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x530)) (= x1189 (x1738 (x1355 (+ x918 32)))) (= x1323 (x1738 (x1355 (+ 64 x918)))) (not (= x530 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x1355 (+ x530 32)) x918) (= x1035 (x261 x1054 x1189 x1323 x1158)) (= (x1985 x322) x1411))) (not x757)))) x295)))
(assert (x902 x1887))
(assert (not (x1494 (x324 64 x1927 x583))))
(assert (x902 x1854))
(assert (=> (<= x926 10000) (= (x1529 x926) 0)))
(assert (x902 x1377))
(assert (x902 x1856))
(assert (< (x1300 x1789 x1381 x935 x1876 x146) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x1540 x905 x1228) 10000))
(assert (x902 x1220))
(assert (= x768 (x329 (x1300 x1877 x384 x515 x768 x411))))
(assert (x902 x1897))
(assert (x902 x584))
(assert (= (x1529 (+ 1 x955)) (x1529 x955)))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639806))
(assert (= x1097 (x1711 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097))))
(assert (x902 x1596))
(assert (x902 x226))
(assert (x902 x1582))
(assert (x902 x102))
(assert (= (x641 x1845 x414 x755 x170) (x1529 (x641 x1845 x414 x755 x170))))
(assert (= x1789 (x574 (x641 x1789 x1474 x1061 x1389))))
(assert (x902 x1090))
(assert (x902 x1073))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x956 x1513)))
(assert (= x974 (or x867 x1129)))
(assert (not (x1494 (x641 x1789 x1474 x1061 x1389))))
(assert (x902 x1618))
(assert (x902 x564))
(assert (x902 x221))
(assert (=> (<= x1884 10000) (= 0 (x1529 x1884))))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639714))
(assert (> (x1300 x905 x1417 x1340 x720 x440) 10000))
(assert (x902 x1860))
(assert (x902 x1439))
(assert (x30 x877))
(assert (x902 x1922))
(assert (x902 x1691))
(assert (x902 x568))
(assert (< 10000 (x1540 x1877 x1221)))
(assert (x902 x869))
(assert (= x1205 (x596 (x641 x1794 x1167 x1205 x1677))))
(assert (= x1052 (x1711 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335))))
(assert (= (x660 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047)) x678))
(assert (x902 x355))
(assert (x376 x450))
(assert (x902 x1475))
(assert (x902 x1051))
(assert (= x211 (and x372 x776)))
(assert (= x558 (x1843 (x324 64 x558 x1905))))
(assert (x902 x1048))
(assert (= (x324 64 x1927 x583) (x1529 (x324 64 x1927 x583))))
(assert (x902 x1467))
(assert (=> (<= x892 10000) (= 0 (x1529 x892))))
(assert (not (x1494 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x684 x1877 x1582 x1774 x300 x1977 x1598)))
(assert (= (and (not x1072) x89) x782))
(assert (= (x1529 (+ 1 x103)) (x1529 x103)))
(assert (=> (>= 10000 x1743) (= 0 (x1529 x1743))))
(assert (x1111 x1132))
(assert (x902 x187))
(assert (x902 x1885))
(assert (= 64 (x574 (x324 64 x915 3))))
(assert (x902 x510))
(assert (not (x1494 (x324 64 729466174051048026939049150500379070045048658665 0))))
(assert (x902 x1324))
(assert (x902 x1889))
(assert (not (x1494 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373))))
(assert (x902 x981))
(assert (x902 x1804))
(assert (= x1558 (or x1368 x1312)))
(assert (x1111 x1399))
(assert (x902 x1208))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 729466174051048026939049150500379070045048658665 0)))
(assert (x902 x1828))
(assert (x902 x1938))
(assert (= x472 (x596 (x684 x905 x1335 x472 x952 x529 x1507))))
(assert (x902 x440))
(assert (= x343 (and x460 x675)))
(assert (x1494 340282366920938463463374607431768211454))
(assert (x902 x135))
(assert (x902 x619))
(assert (not (x1494 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694))))
(assert (=> (>= 10000 x63) (= (x1529 x63) 0)))
(assert (= (or x1001 x835) x1429))
(assert (< (x324 x1789 x1034 x366) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x1838))
(assert (=> (>= 10000 x2001) (= 0 (x1529 x2001))))
(assert (> (x1540 x1794 x1214) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 953417218992365150631206543442508943947348309705 0)))
(assert (= (x1529 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902)) (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902)))
(assert (x1494 729466174051048026939049150500379070045048658665))
(assert (x902 x1035))
(assert (= x1794 (x574 (x1798 x1794 x221 x795 x60 x1301 x586 x1236))))
(assert (x902 x126))
(assert (x902 x308))
(assert (= (x324 64 443215666480553238610125355434898879895743000821 1) (x1529 (x324 64 443215666480553238610125355434898879895743000821 1))))
(assert (= x1330 (x596 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915))))
(assert (x902 x845))
(assert (x902 x1394))
(assert (x902 x1173))
(assert (x902 x1873))
(assert (= (x1540 x1794 x1214) (x1529 (x1540 x1794 x1214))))
(assert (x902 x1428))
(assert (=> (<= x977 10000) (= 0 (x1529 x977))))
(assert (x902 x1175))
(assert (x902 x1188))
(assert (x902 x1296))
(assert (x902 x1945))
(assert (x902 x2004))
(assert (x902 x1867))
(assert (= x58 (and (not x995) x253)))
(assert (x902 x167))
(assert (=> (<= x795 10000) (= (x1529 x795) 0)))
(assert (x902 x279))
(assert (= x552 (x329 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335))))
(assert (x902 x1966))
(assert (x902 x1378))
(assert (< 10000 (x1798 x1845 x345 x788 x966 x1740 x1555 x647)))
(assert (= x2 (and (not x516) x1176)))
(assert (x1494 57896044618658097711785492504343953926634992332820282019728792003956564819835))
(assert (x902 x227))
(assert (= (or x141 x770) x1181))
(assert (x902 x852))
(assert (not (x1494 (x324 64 x811 4))))
(assert (=> (<= x586 10000) (= 0 (x1529 x586))))
(assert (x902 x486))
(assert (x902 x354))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (< 10000 (x641 x1877 x259 x370 x1315)))
(assert (= x1762 (or x1401 x659 x1026 x1489 x1786)))
(assert (= x1047 (x872 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047))))
(assert (= (x1843 (x324 64 953417218992365150631206543442508943947348309705 0)) 953417218992365150631206543442508943947348309705))
(assert (= x797 (x574 (x684 x797 x1734 x1910 x1121 x1804 x97))))
(assert (x902 x483))
(assert (x902 x134))
(assert (x902 x575))
(assert (x902 x1694))
(assert (x902 x383))
(assert (= x289 (and (not x757) x1181)))
(assert (x902 x1917))
(assert (x902 x633))
(assert (x902 x736))
(assert (= (x1843 (x1300 x1845 x437 x1290 x1763 x1593)) x437))
(assert (x902 x643))
(assert (= 0 (x1529 57896044618658097711785492504343953926634992332820282019728792003956564819835)))
(assert (x902 x72))
(assert (x902 x616))
(assert (x902 x255))
(assert (x902 x1180))
(assert (x902 x751))
(assert (=> (>= 10000 x1061) (= (x1529 x1061) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x641 x1364 x355 x1402 x2001)))
(assert (x1727 x288))
(assert (x1494 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (= (and x66 x817) x756))
(assert (=> (<= x1202 10000) (= 0 (x1529 x1202))))
(assert (= (or x1631 x697) x1519))
(assert (=> (>= 10000 x905) (= 0 (x1529 x905))))
(assert (=> (>= 10000 x370) (= 0 (x1529 x370))))
(assert (x902 x1741))
(assert (= (x329 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173)) x1758))
(assert (x902 x296))
(assert (< 10000 (x324 64 x1927 x583)))
(assert (=> (<= x1789 10000) (= 0 (x1529 x1789))))
(assert (x902 x512))
(assert (= (x1529 51755322175217624492750805572474109157238378692794855914282927279451288895488) 0))
(assert (=> (<= x1335 10000) (= 0 (x1529 x1335))))
(assert (x902 x784))
(assert (x30 x1610))
(assert (= (or x214 x1649 x1624) x260))
(assert (x902 x390))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x641 x1877 x259 x370 x1315)))
(assert (x902 x997))
(assert (x902 x346))
(assert (< 10000 (x1798 x1794 x221 x795 x60 x1301 x586 x1236)))
(assert (= (x329 (x641 x1877 x259 x370 x1315)) x1315))
(assert (= (x660 (x684 x1364 x631 x610 x527 x313 x1514)) x1514))
(assert (= 0 (x1529 729466174051048026939049150500379070045048658665)))
(assert (= x1789 (x574 (x324 x1789 x1034 x366))))
(assert (x902 x340))
(assert (x902 x985))
(assert (x902 x572))
(assert (x902 x851))
(assert (= x1908 (=> (and (= x1526 (not (> x1428 128))) (= (x70 256) x276) (= (x1355 (+ x1628 96)) x970)) (and x1526 x232))))
(assert (x902 x33))
(assert (x902 x1644))
(assert (x902 x1899))
(assert (not (x1494 (x1300 x1789 x1381 x935 x1876 x146))))
(assert (x902 x1609))
(assert (not (x1494 (x1300 x905 x1417 x1340 x720 x440))))
(assert (x902 x631))
(assert (x902 x645))
(assert (=> (>= 10000 x696) (= (x1529 x696) 0)))
(assert (=> (<= x1417 10000) (= (x1529 x1417) 0)))
(assert (= (x596 (x641 x1018 x79 x717 x1407)) x717))
(assert (=> (>= 10000 x1834) (= 0 (x1529 x1834))))
(assert (= (x574 (x1540 x1794 x1214)) x1794))
(assert (= (x1529 19198514131333069964808701557143768876432618777570657477111002777175690575872) 0))
(assert (x902 x487))
(assert (x902 x801))
(assert (= x659 (and x211 (not x1689))))
(assert (x902 x1556))
(assert (x902 x1123))
(assert (x902 x1534))
(assert (x902 x1937))
(assert (x902 x763))
(assert (x902 x1158))
(assert (x902 x1049))
(assert (=> (<= x1983 10000) (= (x1529 x1983) 0)))
(assert (x902 x1235))
(assert (< 10000 (x684 x1018 x934 x629 x705 x856 x1918)))
(assert (= (x329 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)) x64))
(assert (x902 x1877))
(assert (x902 x1325))
(assert (= x1752 (and x1116 x980)))
(assert (x902 x1876))
(assert (= (x1300 x905 x1417 x1340 x720 x440) (x1529 (x1300 x905 x1417 x1340 x720 x440))))
(assert (x902 x1121))
(assert (x902 x1404))
(assert (x902 x1373))
(assert (> (x1540 x1789 x291) 10000))
(assert (x902 x626))
(assert (= (x1529 (x1540 x797 x283)) (x1540 x797 x283)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x684 x905 x1335 x472 x952 x529 x1507)))
(assert (x902 x811))
(assert (= (x596 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097)) x1864))
(assert (x902 x1369))
(assert (x1494 18446744073709551615))
(assert (x902 x592))
(assert (x902 x299))
(assert (= x1269 (x1843 (x324 x1364 x1269 x424))))
(assert (=> (>= 10000 x520) (= 0 (x1529 x520))))
(assert (= x97 (x660 (x684 x797 x1734 x1910 x1121 x1804 x97))))
(assert (= (x574 (x684 x1845 x594 x1824 x1551 x696 x1453)) x1845))
(assert (= (x660 (x1798 x1794 x221 x795 x60 x1301 x586 x1236)) x586))
(assert (x902 x1330))
(assert (x902 x120))
(assert (x902 x1340))
(assert (x902 x1314))
(assert (= (x1529 1551562514) 0))
(assert (< 10000 (x324 64 x811 4)))
(assert (x902 x555))
(assert (x902 x639))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1798 x1794 x221 x795 x60 x1301 x586 x1236)))
(assert (x902 x318))
(assert (=> (>= 10000 x1593) (= 0 (x1529 x1593))))
(assert (= (x329 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047)) x49))
(assert (not (x1494 (x684 x797 x1734 x1910 x1121 x1804 x97))))
(assert (x902 x351))
(assert (x1251 x1399 1099511627776))
(assert (= (x1529 (x684 x1364 x631 x610 x527 x313 x1514)) (x684 x1364 x631 x610 x527 x313 x1514)))
(assert (x902 x874))
(assert (x902 x1760))
(assert (=> (>= 10000 x335) (= 0 (x1529 x335))))
(assert (x902 x189))
(assert (x902 x1855))
(assert (=> (<= x1269 10000) (= 0 (x1529 x1269))))
(assert (x902 x1227))
(assert (= (x574 (x684 x1364 x631 x610 x527 x313 x1514)) x1364))
(assert (x902 x1481))
(assert (x30 x857))
(assert (= x961 (x329 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373))))
(assert (x902 x945))
(assert (x902 x1668))
(assert (x902 x809))
(assert (= (x1711 (x1798 x1877 x691 x1023 x889 x1834 x608 x580)) x580))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (= (x596 (x324 64 x1927 x640)) x640))
(assert (= (x641 x905 x1083 x1373 x509) (x1529 (x641 x905 x1083 x1373 x509))))
(assert (x902 x1060))
(assert (= x1378 (x596 (x324 x797 x554 x1378))))
(assert (x902 x857))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1969 0)))
(assert (= (x596 (x641 x797 x572 x1343 x1858)) x1343))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639805)))
(assert (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x902 x1153))
(assert (= x876 (=> (and (or (and (and (= x1959 1) (>= 4294967295 x173) (>= x173 32)) x184) (and (not x184) (= x38 x1959))) (and (= (+ x340 64) x145) (= (x1355 (+ 32 x510)) x445) (< x925 x340) (or (<= x226 115792089237316195423570985008687907853269984665640564039457584007913129639743) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x226)) (= (+ 64 x925) x340) (= x1014 (x1466 x1138)) (= x925 (x1355 (+ x226 64))) (<= x173 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x226) (< x340 x145) (= x393 (x1466 x1565)) (= (x1355 (+ x1860 32)) x510) (or (and (> x24 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x627 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x24 x627) (= (<= x627 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x24)))) (<= 32 x173) (<= x1629 1461501637330902918203684832716283019655932542975) (<= 1 x180) (= (x1355 (+ 32 x924)) x1860) (= x924 (x1355 (+ 4 x145))) (<= x226 18446744073709551550) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x226) (>= 18446744073709551487 x226)) (= (< 0 x38) x184) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x393) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x393)) (= x68 (x1355 (+ x1565 x393))) (or (>= 18446744073709551487 x226) (>= x226 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= x1899 (x1355 (+ x226 32))) (<= x1014 340282366920938463463374607431768211455) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x627) (> x393 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x393 x627) (= (<= x393 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x627 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (<= x226 18446744073709551550) (= (x1466 x1565) x24) (= x1348 (x1234 x1899)) (not (< x340 x925)) (<= 1 x1348) (= x1060 (x1355 (+ x24 x1565))) (< x226 x925) (= (+ 32 x340) x1651) (= x1138 (x1355 (+ x1060 32))) (or (>= x24 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x24)) (= (x1466 x68) x1629) (= (x1234 x226) x282) (= x282 1))) x443)))
(assert (x1494 22700451088272681866486206289545017091351513107057952373946396474207578882048))
(assert (x902 x327))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x1927 x775)))
(assert (< 10000 (x641 x797 x572 x1343 x1858)))
(assert (x902 x462))
(assert (= x941 (and x211 x1689)))
(assert (x902 x647))
(assert (x902 x1113))
(assert (x902 x471))
(assert (= (and (not x1268) x1720) x1523))
(assert (= x905 (x574 (x684 x905 x1335 x472 x952 x529 x1507))))
(assert (x902 x1453))
(assert (not (x1494 (x1798 x1845 x345 x788 x966 x1740 x1555 x647))))
(assert (< 10000 (x1540 x1018 x1612)))
(assert (x902 x914))
(assert (x902 x600))
(assert (x902 x1684))
(assert (x902 x257))
(assert (=> (>= 10000 x722) (= (x1529 x722) 0)))
(assert (= x416 (or x1038 x1470)))
(assert (x902 x690))
(assert (x902 x1266))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639872)))
(assert (= x1834 (x1422 (x1798 x1877 x691 x1023 x889 x1834 x608 x580))))
(assert (= (x324 64 443215666480553238610125355434898879895743000821 0) (x1529 (x324 64 443215666480553238610125355434898879895743000821 0))))
(assert (x1727 x67))
(assert (x902 x525))
(assert (x902 x822))
(assert (x1494 1099511627775))
(assert (x902 x1721))
(assert (x902 x79))
(assert (x902 x853))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1798 x1845 x345 x788 x966 x1740 x1555 x647)))
(assert (= (x1843 (x324 64 x558 x1713)) x558))
(assert (x902 x1233))
(assert (= (x1529 (x641 x1018 x79 x717 x1407)) (x641 x1018 x79 x717 x1407)))
(assert (not (x1494 (x1300 x797 x1435 x1571 x1998 x1040))))
(assert (= 0 (x1529 16777215)))
(assert (not (x1494 (x324 64 x558 x1886))))
(assert (= x225 (x596 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (< 10000 (x1540 x1364 x520)))
(assert (= (and x1313 (not x1384)) x1100))
(assert (x902 x393))
(assert (x902 x1413))
(assert (< 10000 (x324 x1845 x454 x1037)))
(assert (x902 x808))
(assert (x902 x43))
(assert (= (x1529 18446744073709551615) 0))
(assert (= (x574 (x1540 x1877 x1221)) x1877))
(assert (= (x1843 (x684 x905 x1335 x472 x952 x529 x1507)) x1335))
(assert (= (x1843 (x641 x1018 x79 x717 x1407)) x79))
(assert (= 0 (x1529 39095828447348766818467541868648093896559026265977760979361568868651215582053)))
(assert (x902 x1779))
(assert (x1494 57896044618658097711785492504343953926634992332820282019728792003956564819999))
(assert (x1494 19198514131333069964808701557143768876432618777570657477111002777175690575872))
(assert (x902 x520))
(assert (= (x596 (x684 x1794 x784 x1396 x1318 x125 x1625)) x1396))
(assert (= (and (not x1613) x368) x671))
(assert (x902 x552))
(assert (x902 x1270))
(assert (x902 x783))
(assert (= (x1529 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x902 x1321))
(assert (< 10000 (x1300 x1789 x1381 x935 x1876 x146)))
(assert (= (x574 (x324 64 729466174051048026939049150500379070045048658665 0)) 64))
(assert (x902 x1763))
(assert (x902 x1224))
(assert (x902 x101))
(assert (x902 x302))
(assert (= (x1711 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915)) x534))
(assert (= x1389 (x329 (x641 x1789 x1474 x1061 x1389))))
(assert (x902 x1509))
(assert (x902 x1807))
(assert (x902 x1825))
(assert (> (x324 x1877 x230 x837) 10000))
(assert (=> (<= x610 10000) (= 0 (x1529 x610))))
(assert (x902 x157))
(assert (x902 x1645))
(assert (x902 x1976))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639932))
(assert (< 10000 (x641 x1789 x1474 x1061 x1389)))
(assert (= (x1529 45887579694954924622689847950937698470056863744033464196450664576267108643884) 0))
(assert (= 0 (x1529 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= x155 (and x978 x1387)))
(assert (x1494 22703984782402238635145372884546502928383168074851703611862639686610164121600))
(assert (= (x574 (x324 64 x1828 4)) 64))
(assert (= x368 (and x1245 x69)))
(assert (x902 x348))
(assert (not (x1494 (x324 x797 x554 x1378))))
(assert (not (x1494 (x1587 x1794 x120 x1330 x64 x906 x722 x534 x1915))))
(assert (x902 x1241))
(assert (x902 x527))
(assert (< 10000 (x684 x1794 x784 x1396 x1318 x125 x1625)))
(assert (x902 x418))
(assert (x902 x1766))
(assert (= x1705 (=> (and (= (x1246 x1807) x21) (= (x1355 (+ 96 x1890)) x1807) (= (x1355 (+ x836 96)) x658) (= (not (< 128 x1404)) x423)) (and x1611 x423))))
(assert (> (x324 64 443215666480553238610125355434898879895743000821 0) 10000))
(assert (x1623 x1399))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639840)))
(assert (x902 x1944))
(assert (x902 x1065))
(assert (x902 x123))
(assert (= (x329 (x641 66 x385 x1029 x210)) x210))
(assert (=> (>= 10000 x2006) (= (x1529 x2006) 0)))
(assert (x902 x1888))
(assert (x902 x291))
(assert (=> (>= 10000 x547) (= (x1529 x547) 0)))
(assert (x902 x713))
(assert (= (and x368 x1613) x1130))
(assert (= (x574 (x324 x905 x1498 x1065)) x905))
(assert (x902 x1729))
(assert (x902 x24))
(assert (=> (<= x1443 10000) (= (x1529 x1443) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1540 x1789 x291)))
(assert (= x1598 (x660 (x684 x1877 x1582 x1774 x300 x1977 x1598))))
(assert (=> (<= x1362 10000) (= 0 (x1529 x1362))))
(assert (x902 x1629))
(assert (x1494 443215666480553238610125355434898879895743000821))
(assert (= 64 (x574 (x324 64 443215666480553238610125355434898879895743000821 1))))
(assert (x902 x178))
(assert (x902 x1335))
(assert (x902 x956))
(assert (= x1202 (x1843 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583))))
(assert (x902 x800))
(assert (= (or x194 x1762) x1176))
(assert (x902 x381))
(assert (=> (<= x1625 10000) (= 0 (x1529 x1625))))
(assert (x1494 58652715557392481136322917363278564085642169142198350659161099264462031945728))
(assert (x902 x366))
(assert (= (x596 (x684 x1018 x934 x629 x705 x856 x1918)) x629))
(assert (= x1777 (or x155 x1431)))
(assert (x902 x755))
(assert (=> (>= 10000 x1677) (= 0 (x1529 x1677))))
(assert (=> (>= 10000 x1029) (= (x1529 x1029) 0)))
(assert (= (and (not x1307) x1463) x177))
(assert (=> (<= x1047 10000) (= (x1529 x1047) 0)))
(assert (x902 x204))
(assert (x902 x1189))
(assert (= (x329 (x684 x905 x1335 x472 x952 x529 x1507)) x952))
(assert (= x1366 (or x1100 x782 x177 x1372 x1367)))
(assert (= (x596 (x1300 x1845 x437 x1290 x1763 x1593)) x1290))
(assert (x902 x1724))
(assert (= x1551 (x329 (x684 x1845 x594 x1824 x1551 x696 x1453))))
(assert (= (x574 (x1798 x1877 x691 x1023 x889 x1834 x608 x580)) x1877))
(assert (= (x574 (x641 x1877 x259 x370 x1315)) x1877))
(assert (x902 x453))
(assert (= x153 (x596 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596))))
(assert (x902 x1168))
(assert (x1494 3188545240))
(assert (= x905 (x574 (x641 x905 x1083 x1373 x509))))
(assert (= (and x1777 x184) x1368))
(assert (x902 x1228))
(assert (= x1596 (x1711 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596))))
(assert (= (x1711 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173)) x1173))
(assert (= (x596 (x324 64 953417218992365150631206543442508943947348309705 0)) 0))
(assert (= (x574 (x324 64 x558 x1905)) 64))
(assert (x902 x1946))
(assert (x410 x67))
(assert (x902 x1981))
(assert (= 0 (x1529 4294967295)))
(assert (x902 x1331))
(assert (= x1789 (x574 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173))))
(assert (x902 x1252))
(assert (x902 x1858))
(assert (x902 x362))
(assert (= 64 (x574 (x324 64 x811 4))))
(assert (= x1018 (x574 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (not (x1494 (x324 x1364 x1269 x424))))
(assert (x902 x454))
(assert (= (x660 (x684 x1845 x594 x1824 x1551 x696 x1453)) x1453))
(assert (=> (>= 10000 x647) (= 0 (x1529 x647))))
(assert (x902 x599))
(assert (x902 x990))
(assert (x902 x1265))
(assert (x902 x91))
(assert (x902 x1362))
(assert (x902 x855))
(assert (=> (<= x60 10000) (= (x1529 x60) 0)))
(assert (x902 x1347))
(assert (x902 x759))
(assert (x1494 63076024560530113402979550242307453568063438748328787417531900361828837441551))
(assert (=> (<= x788 10000) (= (x1529 x788) 0)))
(assert (x902 x515))
(assert (= x795 (x596 (x1798 x1794 x221 x795 x60 x1301 x586 x1236))))
(assert (not (x1494 (x1798 x1877 x691 x1023 x889 x1834 x608 x580))))
(assert (=> (<= x1205 10000) (= 0 (x1529 x1205))))
(assert (x902 x1783))
(assert (= 0 (x1529 25877242110744216891076975195880784582809329153640315260649044424131709239296)))
(assert (x902 x1261))
(assert (x902 x1692))
(assert (= (x1529 1461501637330902918203684832716283019655932542975) 0))
(assert (=> (>= 10000 x1440) (= 0 (x1529 x1440))))
(assert (= 0 (x1529 85963009616197036880240088340724629170983710335684291091497906406952890531840)))
(assert (x902 x692))
(assert (x1494 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x1843 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097)) x428))
(assert (x902 x450))
(assert (= x1080 (or (and x1841 x1752) (and x940 x58) (and (not x1619) x1693) (and x995 x253))))
(assert (x902 x1628))
(assert (= 0 (x1529 85421856841599162343179548931066850070836787616102889281506983661126589349888)))
(assert (x902 x1471))
(assert (=> (<= x1378 10000) (= (x1529 x1378) 0)))
(assert (x30 x1882))
(assert (not (x1494 (x641 x797 x572 x1343 x1858))))
(assert (x902 x1742))
(assert (= x1088 (x329 (x1300 x1018 x369 x1892 x1088 x164))))
(assert (=> (>= 10000 x1998) (= 0 (x1529 x1998))))
(assert (x902 x1995))
(assert (x1251 x67 32))
(assert (x902 x1583))
(assert (not (x1494 (x324 64 x63 4))))
(assert (= (x1529 (x684 x1877 x1582 x1774 x300 x1977 x1598)) (x684 x1877 x1582 x1774 x300 x1977 x1598)))
(assert (< (x641 x1018 x79 x717 x1407) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x2009))
(assert (x1494 911662625))
(assert (x902 x1934))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097)))
(assert (x902 x1848))
(assert (= x594 (x1843 (x684 x1845 x594 x1824 x1551 x696 x1453))))
(assert (x902 x1132))
(assert (=> (<= x1622 10000) (= 0 (x1529 x1622))))
(assert (=> (>= 10000 x1340) (= (x1529 x1340) 0)))
(assert (= x776 (and x607 x238)))
(assert (=> (>= 10000 x956) (= (x1529 x956) 0)))
(assert (= x1474 (x1843 (x641 x1789 x1474 x1061 x1389))))
(assert (x902 x1521))
(assert (= x370 (x596 (x641 x1877 x259 x370 x1315))))
(assert (> (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 64 x1927 x583)))
(assert (x902 x957))
(assert (= x1401 (and x973 x941)))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639868))
(assert (x902 x182))
(assert (x902 x934))
(assert (= x643 (x660 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433))))
(assert (= (x596 (x1300 x797 x1435 x1571 x1998 x1040)) x1571))
(assert (= x66 (and x1392 x1385)))
(assert (=> (>= 10000 x1644) (= (x1529 x1644) 0)))
(assert (x410 1461501637330902918203684832716283019655932542975))
(assert (x902 x877))
(assert (x902 x1167))
(assert (x902 x1445))
(assert (x902 x1767))
(assert (= x1040 (x1422 (x1300 x797 x1435 x1571 x1998 x1040))))
(assert (= (x1529 (x324 64 x1927 x775)) (x324 64 x1927 x775)))
(assert (= (x1843 (x324 64 81 x1535)) 81))
(assert (= (x1529 (x641 x797 x572 x1343 x1858)) (x641 x797 x572 x1343 x1858)))
(assert (not (x1494 (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596))))
(assert (x902 x850))
(assert (= x1662 (x1422 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047))))
(assert (x1111 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x403))
(assert (x902 x1172))
(assert (= (x1529 (+ 1 x1952)) (x1529 x1952)))
(assert (=> (>= 10000 x373) (= 0 (x1529 x373))))
(assert (= x1337 (or x723 x1512)))
(assert (x902 x358))
(assert (x902 x526))
(assert (= x1845 (x574 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335))))
(assert (x902 x1061))
(assert (=> (>= 10000 x515) (= 0 (x1529 x515))))
(assert (x902 x1640))
(assert (x902 x1115))
(assert (x902 x467))
(assert (x902 x673))
(assert (= x1877 (x574 (x324 x1877 x230 x837))))
(assert (x902 x1292))
(assert (x902 x275))
(assert (> (x641 x1364 x355 x1402 x2001) 10000))
(assert (= x1276 (x1843 (x324 64 x1276 3))))
(assert (x902 x192))
(assert (x902 x1963))
(assert (x902 x1909))
(assert (=> (>= 10000 x204) (= (x1529 x204) 0)))
(assert (x902 x805))
(assert (x902 x273))
(assert (=> (>= 10000 x784) (= 0 (x1529 x784))))
(assert (x902 x1192))
(assert (x902 x237))
(assert (x902 x303))
(assert (=> (>= 10000 x1794) (= 0 (x1529 x1794))))
(assert (x902 x2005))
(assert (=> (<= x1858 10000) (= 0 (x1529 x1858))))
(assert (x902 x749))
(assert (x902 x922))
(assert (= (x1529 x951) (x1529 (+ x951 1))))
(assert (x902 x116))
(assert (x902 x1027))
(assert (= x1927 (x1843 (x324 64 x1927 x583))))
(assert (= (x574 (x641 x1364 x355 x1402 x2001)) x1364))
(assert (x902 x1393))
(assert (x902 x1731))
(assert (=> (<= x811 10000) (= (x1529 x811) 0)))
(assert (= x1625 (x660 (x684 x1794 x784 x1396 x1318 x125 x1625))))
(assert (= x764 (x1422 (x1587 x1018 x1209 x225 x1252 x764 x1820 x2006 x1981))))
(assert (not (x1494 (x641 x905 x1083 x1373 x509))))
(assert (x902 x1958))
(assert (= (x329 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)) x1865))
(assert (=> (>= 10000 x570) (= (x1529 x570) 0)))
(assert (x902 x1685))
(assert (= x1446 (=> (and (= x928 (x1355 (+ x1868 32))) (< x1868 x1862) (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639932) (= x1522 (x920 (- x939 32))) (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639932) (or (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639711) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1420) (and (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639869) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1420)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x1420) (>= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639715))) (= (x920 (- x127 x1862)) x939) (= x1288 (x1355 (+ x1253 32))) (= 9 x1391) (= (ite (= x1194 x1120) (ite (not (= (x761 1461501637330902918203684832716283019655932542975 x1132) 0)) 1 0) (ite (= x1120 x1194) 1 0)) x116) (= (x1355 (+ x1420 32)) x942) (= (x761 1461501637330902918203684832716283019655932542975 x1132) x1194) (or (and (>= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639810) (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639869)) (and (>= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639715) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x1420)) (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639711) (>= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= x127 (x1355 (+ x1288 32))) (= x1868 (x1355 (+ 64 x1420))) (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639932) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x1420) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x1420) (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639806)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1420) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1420) (<= x1420 115792089237316195423570985008687907853269984665640564039457584007913129639869))) (<= x956 1461501637330902918203684832716283019655932542975) (= x1222 (x1355 (+ x1862 32))) (= (x1102 x1862) x905) (<= 1 x956) (= x1253 (x1355 (+ 32 x1862))) (< x1862 x127) (= (x1355 (+ 64 x1868)) x1862) (= x116 1) (= x1450 (+ 1 x1861)) (= x630 (x1211 x1450)) (= x1861 (x324 64 x915 4)) (= (>= 224 x905) x965) (> x1868 x1420)) (and x965 (=> (and (= (x1355 (+ 32 x127)) x1153) (= x1210 (x1102 x1894)) (= (x1102 x1686) x529) (= (x1102 x1427) x1864) (= (x1355 (+ x1222 128)) x467) (= x1427 (x1355 (+ x1222 32))) (= (x1355 (+ 32 x1222)) x365) (= x440 (x1102 x808)) (= (x1102 x1222) x428) (= x1524 (x1102 x1966)) (= (x1355 (+ x127 32)) x800) (= x1081 (x1102 x1266)) (= (x324 x905 x1498 x1065) x1648) (= (x1355 (+ x1222 32)) x215) (= x1456 (x920 (- x159 x127))) (= x952 (x1102 x1874)) (= (x1969 0) x727) (= (>= 224 x1877) x81) (= (x1355 (+ x1222 64)) x1803) (= (x1355 (+ 64 x1222)) x1874) (= (x1102 x1483) x1440) (= x634 (x1355 (+ x1153 32))) (= x1956 (x1355 (+ x1222 160))) (= x1097 (x1102 x1273)) (= (x1355 (+ 128 x1222)) x1894) (= (x1102 x1222) x1498) (= (x1102 x1803) x720) (> x159 x127) (= (x1355 (+ 64 x1222)) x1235) (= (x1102 x1222) x1228) (= (x920 (- x1456 32)) x1851) (= x1373 (x1102 x1032)) (= (x1102 x365) x1065) (= x981 (x1102 x742)) (= (x1355 (+ 64 x1222)) x1966) (= x1483 (x1355 (+ 96 x1222))) (= (x1355 (+ x1222 32)) x1032) (= (x1102 x1222) x1417) (= (x1102 x90) x472) (= x1192 (x1355 (+ x1222 192))) (= (x1102 x133) x509) (= (x1355 (+ 64 x1222)) x133) (= x507 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097)) (= x601 (x1300 x905 x1417 x1340 x720 x440)) (= (x1355 (+ 32 x1222)) x90) (or (and (>= x127 161) (<= x127 115792089237316195423570985008687907853269984665640564039457584007913129639839)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639844 x127) (<= x127 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (<= 98 x127) (>= 157 x127)) (and (<= x127 94) (>= x127 3))) (= x1455 (x1102 x1174)) (= (x641 x905 x1083 x1373 x509) x949) (= (x1102 x1192) x1902) (= (ite (= x905 0) x727 (ite (>= 32 x905) x400 (ite (<= x905 64) x1648 (ite (<= x905 96) x949 (ite (<= x905 128) x601 (ite (<= x905 160) x1012 (ite (<= x905 192) x507 (ite (<= x905 224) x20 x204)))))))) x715) (= x1083 (x1102 x1222)) (= x159 (x1355 (+ 32 x634))) (= x1884 (x1102 x1222)) (= x1340 (x1102 x215)) (= (x1355 (+ x1222 32)) x1174) (= x570 (x1102 x1235)) (= x808 (x1355 (+ x1222 96))) (= (x1355 (+ x1222 96)) x1686) (= x1507 (x1102 x467)) (= (x1102 x1956) x188) (= (x1355 (+ x1222 96)) x742) (= x1877 (x461 x127)) (= (x1355 (+ x1222 160)) x1273) (= (x1355 (+ x1222 128)) x1266) (= x20 (x1587 x905 x1884 x1455 x1524 x981 x1210 x188 x1902)) (= x1012 (x684 x905 x1335 x472 x952 x529 x1507)) (= (x1540 x905 x1228) x400) (= x1335 (x1102 x1222))) (and (=> (and (= x768 (x461 x1668)) (= (x1355 (+ 96 x800)) x241) (= (x1355 (+ 32 x1441)) x1628) (= (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471) x1988) (= (ite (= x1877 0) x1961 (ite (>= 32 x1877) x728 (ite (>= 64 x1877) x1626 (ite (<= x1877 96) x559 (ite (>= 128 x1877) x1156 (ite (>= 160 x1877) x1240 (ite (<= x1877 192) x827 (ite (>= 224 x1877) x1988 x361)))))))) x1733) (= x954 (x1355 (+ x800 64))) (= (x1300 x1877 x384 x515 x768 x411) x1156) (= (x1798 x1877 x691 x1023 x889 x1834 x608 x580) x827) (= (x1355 (+ 32 x800)) x1105) (= x1221 (x461 x800)) (= x1977 (x461 x241)) (= (x461 x800) x246) (= x690 (x1355 (+ 64 x800))) (= x515 (x461 x134)) (= (x1355 (+ 32 x800)) x597) (= (x1355 (+ 64 x800)) x1534) (= x2007 (x461 x1534)) (= (x1540 x1877 x1221) x728) (= x1242 (x1355 (+ x800 64))) (= (x1969 0) x1961) (= x411 (x461 x584)) (= x608 (x461 x878)) (= x1428 (x37 128)) (= x1023 (x461 x1160)) (= (x1355 (+ x800 128)) x1363) (= (x461 x1073) x1834) (= (x1355 (+ x800 128)) x1673) (= (x461 x1363) x712) (= x977 (x461 x1293)) (= (x461 x690) x889) (= x1598 (x461 x1673)) (= (x461 x1708) x1694) (= (x461 x1838) x169) (= x1888 (x1355 (+ x800 192))) (= x1838 (x1355 (+ x800 160))) (= x1756 (x1355 (+ 160 x800))) (= x1240 (x684 x1877 x1582 x1774 x300 x1977 x1598)) (= (x1355 (+ x800 96)) x584) (= x1684 (x1355 (+ 32 x800))) (= x462 (x1355 (+ 4 x159))) (= x230 (x461 x800)) (= (x461 x1888) x471) (= (x461 x800) x691) (= x1774 (x461 x1684)) (= x1441 (x1355 (+ 128 x462))) (= (> x1428 0) x69) (= x259 (x461 x800)) (= x370 (x461 x1105)) (= x1582 (x461 x800)) (= (x1355 (+ 128 x800)) x878) (= x1633 (x1355 (+ x1735 32))) (= x1708 (x1355 (+ 32 x800))) (= (x461 x597) x837) (= (x461 x800) x384) (= (x324 x1877 x230 x837) x1626) (= (x1355 (+ x462 32)) x1735) (= x1160 (x1355 (+ 32 x800))) (= x1848 (x1355 (+ 32 x1633))) (= (x1355 (+ x800 96)) x1073) (= x134 (x1355 (+ x800 32))) (= (x461 x1242) x1315) (= x559 (x641 x1877 x259 x370 x1315)) (= x580 (x461 x1756)) (= x300 (x461 x954)) (= (x1355 (+ x800 64)) x1668) (= x1293 (x1355 (+ 96 x800)))) (and (=> (not x69) x232) (=> (and (and (= x1613 (> x1428 32)) (= (x732 160) x679)) x69) (and (=> (not x1613) x232) (=> (and (and (= (x1355 (+ 32 x1628)) x555) (= (x1287 192) x429) (= x829 (< 64 x1428))) x1613) (and (=> (not x829) x232) (=> (and (and (= (x1827 224) x1669) (= x59 (< 96 x1428)) (= (x1355 (+ x1628 64)) x1308)) x829) (and (=> x59 x1908) (=> (not x59) x232))))))))) x81))))))
(assert (x902 x1754))
(assert (x902 x563))
(assert (= (x596 (x1300 x905 x1417 x1340 x720 x440)) x1340))
(assert (= (x329 (x684 x1018 x934 x629 x705 x856 x1918)) x705))
(assert (=> (>= 10000 x787) (= (x1529 x787) 0)))
(assert (x902 x142))
(assert (x902 x1097))
(assert (= (x329 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097)) x570))
(assert (= (x596 (x324 x1794 x1595 x938)) x938))
(assert (x902 x1202))
(assert (= (x641 x1364 x355 x1402 x2001) (x1529 (x641 x1364 x355 x1402 x2001))))
(assert (not (x1494 (x641 66 x385 x1029 x210))))
(assert (x902 x1474))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1540 x905 x1228)))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (not (x1494 (x324 64 x1622 3))))
(assert (= (x596 (x324 64 x1622 3)) 3))
(assert (x902 x1566))
(assert (not (x1494 (x684 x905 x1335 x472 x952 x529 x1507))))
(assert (x902 x455))
(assert (x902 x764))
(assert (x902 x1443))
(assert (= (x329 (x684 x1877 x1582 x1774 x300 x1977 x1598)) x300))
(assert (= (x329 (x641 x1845 x414 x755 x170)) x170))
(assert (x902 x464))
(assert (= (x1843 (x1798 x1877 x691 x1023 x889 x1834 x608 x580)) x691))
(assert (= x558 (x1843 (x324 64 x558 x1630))))
(assert (x902 x1054))
(assert (= (x329 (x1300 x797 x1435 x1571 x1998 x1040)) x1998))
(assert (=> (<= x678 10000) (= 0 (x1529 x678))))
(assert (x902 x1941))
(assert (= 0 (x596 (x324 64 443215666480553238610125355434898879895743000821 0))))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x902 x469))
(assert (= (x574 (x1300 x905 x1417 x1340 x720 x440)) x905))
(assert (x902 x1834))
(assert (x902 x106))
(assert (=> (>= 10000 x220) (= (x1529 x220) 0)))
(assert (= x1940 (=> (and (= false x463) (= false x352) (= x1852 x1667) (= x753 x1310) (= x1106 false) (= false x1342) (= x1852 (not (= x1432 0))) (= (ite (not (= x1019 0)) 1 0) x1432)) x1567)))
(assert (= (and x516 x1176) x152))
(assert (=> (<= x300 10000) (= 0 (x1529 x300))))
(assert (x1494 22264039863272420937079131806861516217942124584529674491290359742488301797376))
(assert (x902 x624))
(assert (x902 x384))
(assert (> (x324 64 x915 3) 10000))
(assert (= (x324 x1845 x454 x1037) (x1529 (x324 x1845 x454 x1037))))
(assert (x902 x1659))
(assert (x902 x1276))
(assert (= (x329 (x1300 x1845 x437 x1290 x1763 x1593)) x1763))
(assert (x902 x1406))
(assert (x902 x1794))
(assert (x902 x1451))
(assert (= (x596 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335)) x490))
(assert (not (x1494 (x684 x1845 x594 x1824 x1551 x696 x1453))))
(assert (x902 x1052))
(assert (=> (>= 10000 x1083) (= (x1529 x1083) 0)))
(assert (=> (>= 10000 x169) (= 0 (x1529 x169))))
(assert (= x205 (x660 (x1798 x1789 x542 x1515 x1758 x652 x205 x1173))))
(assert (x902 x1999))
(assert (=> (<= x768 10000) (= 0 (x1529 x768))))
(assert (x902 x542))
(assert (< (x641 x1794 x1167 x1205 x1677) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x797 10000) (= (x1529 x797) 0)))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639868) 0))
(assert (x902 x1788))
(assert (x902 x1007))
(assert (x902 x1133))
(assert (= (x1843 (x324 64 x63 4)) x63))
(assert (x902 x898))
(assert (x902 x168))
(assert (x902 x2000))
(assert (= (x1529 (+ x1972 1)) (x1529 x1972)))
(assert (= x1129 (and (not x1520) x1011)))
(assert (x902 x634))
(assert (= 0 (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639869)))
(assert (x902 x1047))
(assert (=> (<= x1088 10000) (= 0 (x1529 x1088))))
(assert (= x603 (=> (and (or (and (= x838 x180) (not x978)) (and x978 (and (<= 64 x1527) (>= 4294967295 x1527) (= x180 1)))) (and (= (x1466 x1904) x1375) (not (or (and (<= x91 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x213 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x213) (<= x91 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x91 x213)))) (= x910 (x761 115792089237316195423570985008687907853269984665640564039457584007913129639904 x985)) (= x1397 (x1355 (+ 4 x226))) (= (< 0 x838) x978) (= x1406 (x1466 x1565)) (= (x1355 (+ x108 32)) x783) (= (x1355 (+ 32 x855)) x987) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1375)) (= x1941 (x920 (- x1093 x1295))) (= x102 (x1355 (+ x568 x987))) (= x1931 (x1466 x485)) (= (x1355 (+ x1375 x1295)) x1410) (or (>= x979 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x979)) (<= x1527 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x1355 (+ x910 x987)) x337) (= (x1355 (+ x1406 x1565)) x1863) (<= x1079 1461501637330902918203684832716283019655932542975) (= x485 (x1355 (+ x907 32))) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x709) (<= x709 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= x709 (x1466 x1565)) (= x568 (x1466 x1410)) (= x627 (x920 (- x796 95))) (or (and (< x709 x627) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x627) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x709))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x709) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x627))) (= (x920 (- x1941 31)) x1015) (= (x920 (- x337 x226)) x1846) (= x855 (x1355 (+ x1397 128))) (= x91 (x1355 (+ 32 x1410))) (= (x1355 (+ x783 32)) x1085) (not (= x1941 57896044618658097711785492504343953926634992332820282019728792003956564819999)) (<= 64 x1527) (<= x1931 340282366920938463463374607431768211455) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1015) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1375)) (> x1015 x1375)) (and (> x1375 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1015 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1355 (+ x1295 64)) x1904) (= (x1355 (+ x979 x1565)) x907) (>= 18446744073709551615 x568) (= x213 (x920 (- x1093 x568))) (= (x1355 (+ x709 x1565)) x1295) (= (x1466 x1565) x979) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1406) (<= x1406 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1406) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x627)) (> x627 x1406)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1406) (<= x627 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (and (< x979 x627) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x627) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x979))) (and (> x979 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x627 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x985 (+ 31 x568)) (= (x1466 x1863) x1079) (= (x920 (- x1093 x1565)) x796) (= (x1355 (+ 32 x1397)) x108))) x876)))
(assert (x902 x1802))
(assert (=> (<= x100 10000) (= 0 (x1529 x100))))
(assert (= x835 (and x1723 x235)))
(assert (x902 x796))
(assert (=> (<= x703 10000) (= (x1529 x703) 0)))
(assert (x902 x1142))
(assert (< 10000 (x324 64 x558 x1713)))
(assert (x902 x1194))
(assert (x902 x1459))
(assert (x902 x1071))
(assert (= (x574 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)) x797))
(assert (x902 x1076))
(assert (x902 x254))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639931))
(assert (x902 x1772))
(assert (= (x1529 22700451088272681866486206289545017091351513107057952373946396474207578882048) 0))
(assert (= x1144 (and (not x1291) x831)))
(assert (x902 x1117))
(assert (=> (>= 10000 x125) (= (x1529 x125) 0)))
(assert (x902 x1322))
(assert (x902 x642))
(assert (x902 x1023))
(assert (not (x1494 (x1540 x1845 x1754))))
(assert (x902 x1527))
(assert (= (x574 (x324 64 x558 x1713)) 64))
(assert (= x1044 (and (not x1730) x1144)))
(assert (x902 x905))
(assert (x902 x1524))
(assert (x902 x794))
(assert (=> (<= x1704 10000) (= 0 (x1529 x1704))))
(assert (= (x1540 x1789 x291) (x1529 (x1540 x1789 x291))))
(assert (= (=> (and (and (= x558 (x224 288)) (= (x324 64 x63 4) x298) (= x809 (x57 x381)) (= x816 (+ 1 x298)) (= false x813) (= x408 2175550133) (= x674 (x670 x298)) (>= x465 1) (= x1227 58652715557392481136322917363278564085642169142198350659161099264462031945728) (= (x1898 x45) x1322) (>= x809 1) (= false x166) (= x117 false) (= x1206 (x57 x32)) (<= 1 x175) (= x1304 (x224 256)) (= false x1041) (<= 1 x1206) (>= 127 x1481) (= x56 x1999) (= x750 729466174051048026939049150500379070045048658665) (= x1999 x772) (= false x114) (= (x57 x1856) x465) (= x792 (x1211 x816)) (= x1907 729466174051048026939049150500379070045048658665) (= x735 false) (= false x998) (= 128 x1739) (= 128 x123) (= x1564 (x1726 128)) (= x774 false) (>= 127 x908) (= false x1923) (= (x324 64 x558 x1886) x45) (<= 1 x1063) (= 85963009616197036880240088340724629170983710335684291091497906406952890531840 x1452) (>= 127 x444) (= x63 x1110) (= (= 0 x1564) x1291) (>= 127 x444) (= 3188545240 x1096) (= x140 x1135) (= x1886 (x324 64 729466174051048026939049150500379070045048658665 0)) (= x718 false) (= false x1808) (= (x57 x1856) x175) (>= 127 x1101) (= 36 x605) (>= 16777215 x674) (= x1063 (x57 x1856)) (= x1478 36) (>= 127 x1481) (<= x908 127) (= false x825) (= false x402) (= x398 4067465820) (= x1135 x772) (= 68 x1935) (<= x1101 127) (= x267 x1304) (= 1551562514 x7) (= x882 false) (= x140 x558)) (and (= x453 36) (= x290 x17) (= x17 x1781) (= x290 x1110))) (and (=> (and (not x1291) (and (= x19 224) (= false x1608) (>= x1539 1) (= x1922 (x1400 224)) (= x1999 x1179) (= x945 68) (= x590 false) (= false x544) (= x138 443215666480553238610125355434898879895743000821) (= (x324 64 x558 x1630) x113) (= 58652715557392481136322917363278564085642169142198350659161099264462031945728 x257) (= x1326 (x1898 x113)) (= (x324 64 443215666480553238610125355434898879895743000821 0) x1630) (= x743 443215666480553238610125355434898879895743000821) (<= x1467 127) (<= x1467 127) (= x1539 (x57 x381)) (= x1730 (= 0 x1922)) (= x294 false) (= x435 2175550133))) (and (=> x1730 x1425) (=> (and (and (>= 127 x649) (>= x858 1) (= (x324 64 953417218992365150631206543442508943947348309705 0) x1905) (= false x1376) (= x347 false) (= x86 (x324 64 x558 x1905)) (= 953417218992365150631206543442508943947348309705 x1324) (= false x1970) (= x1999 x1591) (= x72 (x1898 x86)) (= x412 320) (= (x1682 320) x8) (= x858 (x57 x381)) (<= x649 127) (= false x1370) (= x13 68) (= 953417218992365150631206543442508943947348309705 x1925) (= 2175550133 x1292) (= (= x8 0) x484) (= 58652715557392481136322917363278564085642169142198350659161099264462031945728 x604)) (not x1730)) (and (=> x484 x1425) (=> (and (and (= x1943 (x958 x767)) (= 85421856841599162343179548931066850070836787616102889281506983661126589349888 x1006) (= 81 x654) (<= x887 127) (= x1963 3168472768) (= (x52 416) x1051) (= 443215666480553238610125355434898879895743000821 x971) (= x1882 100) (= (x324 64 443215666480553238610125355434898879895743000821 1) x1713) (= (> x1051 0) x1656) (= x479 false) (= x1742 x1999) (= (x57 x381) x1764) (= x2003 (x324 64 x558 x1713)) (<= 1 x1764) (= x98 false) (= 416 x1398) (>= 127 x887) (= x740 443215666480553238610125355434898879895743000821) (= x929 false) (= (x324 64 81 x2003) x767) (= false x1289)) (not x484)) (and (=> (not x1656) x1425) (=> (and x1656 (and (= x1885 x273) (= x1592 x80) (= x218 x1247) (= x1277 x713) (= x1055 x151) (= x1082 1))) x585))))))) (=> x1291 x1425))) x1490))
(assert (> (x641 x1845 x414 x755 x170) 10000))
(assert (x902 x621))
(assert (x902 x349))
(assert (x902 x1675))
(assert (< (x684 x1845 x594 x1824 x1551 x696 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x5))
(assert (= x355 (x1843 (x641 x1364 x355 x1402 x2001))))
(assert (x1494 24068214603859720034826088920346711864364023158142564334732402816841156945010))
(assert (=> (>= 10000 x1343) (= (x1529 x1343) 0)))
(assert (x902 x1277))
(assert (= x755 (x596 (x641 x1845 x414 x755 x170))))
(assert (x902 x918))
(assert (not (x1494 (x1540 x905 x1228))))
(assert (= (x329 (x641 x1018 x79 x717 x1407)) x1407))
(assert (x902 x1904))
(assert (x902 x1585))
(assert (x902 x897))
(assert (x902 x1399))
(assert (x902 x1698))
(assert (x902 x2006))
(assert (= x253 (and x1752 (not x1841))))
(assert (= (x1529 (x324 x1364 x1269 x424)) (x324 x1364 x1269 x424)))
(assert (x410 x288))
(assert (= x1630 (x596 (x324 64 x558 x1630))))
(assert (x1251 x67 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1529 (x1300 x1789 x1381 x935 x1876 x146)) (x1300 x1789 x1381 x935 x1876 x146)))
(assert (=> (>= 10000 x1910) (= 0 (x1529 x1910))))
(assert (=> (>= 10000 x1692) (= 0 (x1529 x1692))))
(assert (x902 x1559))
(assert (= x1507 (x660 (x684 x905 x1335 x472 x952 x529 x1507))))
(assert (x902 x1863))
(assert (x902 x917))
(assert (= (x1529 (+ x843 1)) (x1529 x843)))
(assert (> (x1798 x1789 x542 x1515 x1758 x652 x205 x1173) 10000))
(assert (x902 x263))
(assert (< 10000 (x324 64 729466174051048026939049150500379070045048658665 0)))
(assert (x902 x140))
(assert (x902 x533))
(assert (x1494 340282366920938463463374607431768211455))
(assert (x30 x1561))
(assert (x902 x1973))
(assert (=> (<= x384 10000) (= (x1529 x384) 0)))
(assert (x902 x301))
(assert (= x868 (x596 (x324 64 x1927 x868))))
(assert (x902 x1))
(assert (x902 x1505))
(assert (x902 x1430))
(assert (x902 x1359))
(assert (x902 x1460))
(assert (= x141 (and x416 (not x1438))))
(assert (x902 x446))
(assert (x902 x787))
(assert (x902 x95))
(assert (x902 x966))
(assert (x902 x387))
(assert (x902 x1578))
(assert (x902 x1756))
(assert (x1186 32 x842))
(assert (= (x1843 (x1587 x1789 x909 x790 x49 x1662 x678 x1983 x1047)) x909))
(assert (< 10000 (x324 64 x1927 x775)))
(assert (x1494 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x902 x326))
(assert (= (x329 (x684 x1794 x784 x1396 x1318 x125 x1625)) x1318))
(assert (= x784 (x1843 (x684 x1794 x784 x1396 x1318 x125 x1625))))
(assert (= x1635 (x1843 (x1587 x1845 x1635 x490 x552 x1311 x14 x1052 x335))))
(assert (x902 x1315))
(assert (x902 x915))
(assert (= (x1843 (x324 64 x1622 3)) x1622))
(assert (= x540 (x329 (x684 x1789 x912 x319 x540 x1064 x1797))))
(assert (= (and x1313 x1384) x89))
(assert (x902 x1297))
(assert (=> (>= 10000 x1598) (= 0 (x1529 x1598))))
(assert (= x1029 (x596 (x641 66 x385 x1029 x210))))
(assert (x902 x233))
(assert (= (and x131 x1197) x943))
(assert (= (x574 (x324 64 953417218992365150631206543442508943947348309705 0)) 64))
(assert (= (x574 (x1798 x905 x428 x1864 x570 x1440 x1081 x1097)) x905))
(assert (= x1214 (x1843 (x1540 x1794 x1214))))
(assert (=> (<= x188 10000) (= (x1529 x188) 0)))
(assert (x902 x1037))
(assert (= x1789 (x574 (x684 x1789 x912 x319 x540 x1064 x1797))))
(assert (not (x1494 (x324 64 x1180 3))))
(assert (x902 x1910))
(assert (x1494 3686331914))
(assert (x902 x1221))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1587 x797 x1743 x1692 x961 x100 x787 x805 x373)))
(assert (x902 x309))
(assert (x902 x1278))
(assert (= (x1843 (x1540 x797 x283)) x283))
(assert (= x369 (x1843 (x1300 x1018 x369 x1892 x1088 x164))))
(assert (= (x1529 (+ x2012 1)) (x1529 x2012)))
(assert (< (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x478))
(assert (= (x1529 (+ x955 5)) (x1529 x955)))
(assert (x902 x1764))
(assert (not (x1494 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433))))
(assert (x902 x1553))
(assert (x902 x445))
(assert (= x2007 (x329 (x1587 x1877 x246 x1694 x2007 x977 x712 x169 x471))))
(assert (x902 x212))
(assert (= x1794 (x574 (x324 x1794 x1595 x938))))
(assert (x902 x1216))
(assert (x902 x259))
(assert (= x502 (=> (and (= x1486 0) (= false x1069) (= x1084 true)) x1239)))
(assert (x902 x509))
(assert (=> (>= 10000 x164) (= (x1529 x164) 0)))
(assert (x902 x335))
(assert (x902 x1205))
(assert (x902 x546))
(assert (= x653 (and x1279 x196)))
(assert (= (x1843 (x324 64 443215666480553238610125355434898879895743000821 1)) 443215666480553238610125355434898879895743000821))
(assert (= x837 (x596 (x324 x1877 x230 x837))))
(assert (x902 x1013))
(assert (= x1312 (and (not x184) x1777)))
(assert (x902 x605))
(assert (=> (>= 10000 x1740) (= 0 (x1529 x1740))))
(assert (= (x574 (x324 64 x1622 3)) 64))
(assert (=> (>= 10000 x424) (= 0 (x1529 x424))))
(assert (= (and (not x396) x1670) x1816))
(assert (x902 x703))
(assert (x902 x679))
(assert (=> (<= x319 10000) (= (x1529 x319) 0)))
(assert (x902 x29))
(assert (x902 x550))
(assert (=> (>= 10000 x1758) (= (x1529 x1758) 0)))
(assert (x902 x1902))
(assert (= (and x131 (not x1197)) x1022))
(assert (x1494 37749366859872002549862985897619888669665948435824635674531347399775013991474))
(assert (< (x324 64 x1180 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x1160))
(assert (= (x1529 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (x902 x706))
(assert (x902 x16))
(assert (< 10000 (x324 64 x1180 3)))
(assert (= x1824 (x596 (x684 x1845 x594 x1824 x1551 x696 x1453))))
(assert (x902 x153))
(assert (x902 x880))
(assert (x902 x689))
(assert (x902 x1570))
(assert (= x1431 (and (not x978) x1387)))
(assert (< (x324 x1364 x1269 x424) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x67))
(assert (= (x596 (x1587 x1364 x1654 x533 x845 x1718 x643 x1697 x1433)) x533))
(assert (x902 x1703))
(assert (< (x1798 x1364 x1362 x153 x1216 x1825 x547 x1596) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x281))
(assert (x30 x622))
(assert (= (x596 (x324 64 x811 4)) 4))
(assert (x902 x769))
(assert (= (x596 (x324 64 x558 x1905)) x1905))
(assert (x902 x1831))
(assert (x902 x967))
(assert (x902 x604))
(assert (=> (<= x633 10000) (= (x1529 x633) 0)))
(assert (= (or x343 x470) x980))
(assert (x902 x49))
(assert (x902 x1294))
(assert (x902 x939))
(assert (< (x641 x905 x1083 x1373 x509) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x30 x853))
(assert (x902 x414))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x324 x1877 x230 x837)))
(assert (=> (>= 10000 x79) (= 0 (x1529 x79))))
(assert (= (x1843 (x324 x1789 x1034 x366)) x1034))
(assert (= (x1300 x797 x1435 x1571 x1998 x1040) (x1529 (x1300 x797 x1435 x1571 x1998 x1040))))
(assert (x902 x937))
(assert (= (x1529 11309588061646438093662687302255421419811724423900836950936401294474059186176) 0))
(assert (< 10000 (x1798 x797 x1202 x703 x1865 x1556 x278 x1583)))
(assert (x902 x1285))
(assert (x902 x1610))
(assert (x902 x745))
(assert (x902 x1921))
(assert (x902 x597))
(assert (x902 x444))
(assert (< (x324 64 443215666480553238610125355434898879895743000821 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x902 x1853))
(assert (=> (>= 10000 x1034) (= (x1529 x1034) 0)))
(assert (x902 x300))
(assert (x902 x1243))
(assert (x902 x1617))
(assert (x902 x1036))
(assert (not (x1494 (x1540 x1794 x1214))))
(assert (x1111 x288))
(assert (=> (>= 10000 x534) (= (x1529 x534) 0)))
(assert (= (x1529 340282366920938463463374607431768211455) 0))
(assert (x902 x1516))
(assert (< 10000 (x324 x1794 x1595 x938)))
(assert (not (x1494 (x684 x1018 x934 x629 x705 x856 x1918))))
(assert (x902 x1663))
(assert (=> (>= 10000 x2007) (= (x1529 x2007) 0)))
(assert (x902 x611))
(assert (= (x660 (x1798 x1018 x1347 x852 x1517 x1644 x1443 x694)) x1443))
(assert (x902 x789))
(assert (< 10000 (x324 64 x956 x1513)))
(assert (=> (>= 10000 x1373) (= 0 (x1529 x1373))))
(assert (x902 x480))
(assert (x902 x100))
(assert (= (x1422 (x1300 x1845 x437 x1290 x1763 x1593)) x1593))
(assert (=> (>= 10000 x1065) (= 0 (x1529 x1065))))
(assert (= (or x1947 (and x911 x260)) x1245))
(assert (=> (>= 10000 x1864) (= (x1529 x1864) 0)))
(assert (x902 x1143))
(assert (x902 x1918))
(check-sat)
(exit)
