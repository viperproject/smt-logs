(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x4662 () Int)
(declare-fun x4392 () Int)
(declare-fun x6845 () Int)
(declare-fun x5625 () Int)
(declare-fun x6169 () Int)
(declare-fun x2761 () Bool)
(declare-fun x863 () Int)
(declare-fun x5499 () Bool)
(declare-fun x3935 () Bool)
(declare-fun x8208 () Int)
(declare-fun x2857 () Int)
(declare-fun x604 () Bool)
(declare-fun x7294 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x8397 () Bool)
(declare-fun x5577 () Int)
(declare-fun x2239 () Bool)
(declare-fun x1829 () Int)
(declare-fun x5914 () Bool)
(declare-fun x4245 () Bool)
(declare-fun x2890 () Int)
(declare-fun x5037 () Bool)
(declare-fun x7237 () Bool)
(declare-fun x3484 () Bool)
(declare-fun x2801 () Int)
(declare-fun x117 () Bool)
(declare-fun x451 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x2238 () Int)
(declare-fun x7200 () Int)
(declare-fun x59 () Int)
(declare-fun x2955 () Int)
(declare-fun x3974 () Bool)
(declare-fun x4427 () Int)
(declare-fun x1648 () Int)
(declare-fun x7510 () Int)
(declare-fun x2609 () Int)
(declare-fun x5072 () Int)
(declare-fun x6404 () Bool)
(declare-fun x3932 () Int)
(declare-fun x4401 () Bool)
(declare-fun x8292 () Bool)
(declare-fun x363 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x992 () Int)
(declare-fun x884 () Int)
(declare-fun x2854 () Bool)
(declare-fun x5442 () Bool)
(declare-fun x6905 () Int)
(declare-fun x4612 () Int)
(declare-fun x4903 () Int)
(declare-fun x1797 () Int)
(declare-fun x3092 () Int)
(declare-fun x956 () Bool)
(declare-fun x8474 () Int)
(declare-fun x632 () Int)
(declare-fun x1472 () Int)
(declare-fun x5983 () Int)
(declare-fun x4268 () Int)
(declare-fun x931 () Bool)
(declare-fun x6537 () Bool)
(declare-fun x3697 () Int)
(declare-fun x55 () Int)
(declare-fun x8561 () Bool)
(declare-fun x139 () Bool)
(declare-fun x6917 () Bool)
(declare-fun x5264 () Bool)
(declare-fun x5018 (Int Int Int Int Int) Int)
(declare-fun x529 () Int)
(declare-fun x3188 () Int)
(declare-fun x2973 () Bool)
(declare-fun x2296 () Int)
(declare-fun x3318 () Bool)
(declare-fun x3143 () Int)
(declare-fun x7108 () Bool)
(declare-fun x6353 () Bool)
(declare-fun x6837 () Bool)
(declare-fun x6054 () Int)
(declare-fun x4503 () Int)
(declare-fun x74 () Int)
(declare-fun x4213 () Int)
(declare-fun x5436 () Bool)
(declare-fun x7253 () Int)
(declare-fun x1122 () Bool)
(declare-fun x5278 () Bool)
(declare-fun x6306 () Int)
(declare-fun x6927 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x4203 () Bool)
(declare-fun x6829 () Int)
(declare-fun x4289 (Int) Int)
(declare-fun x3938 () Bool)
(declare-fun x6907 () Bool)
(declare-fun x5769 () Int)
(declare-fun x5921 () Int)
(declare-fun x1551 () Bool)
(declare-fun x844 () Bool)
(declare-fun x152 () Bool)
(declare-fun x8565 () Int)
(declare-fun x6495 () Bool)
(declare-fun x8247 () Int)
(declare-fun x1140 () Bool)
(declare-fun x8158 () Int)
(declare-fun x5136 () Bool)
(declare-fun x875 () Int)
(declare-fun x7443 () Bool)
(declare-fun x3841 () Bool)
(declare-fun x1014 () Int)
(declare-fun x3596 () Bool)
(declare-fun x626 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x3791 () Bool)
(declare-fun x5260 () Int)
(declare-fun x8174 () Bool)
(declare-fun x7314 () Int)
(declare-fun x1926 () Bool)
(declare-fun x7461 () Int)
(declare-fun x5355 () Int)
(declare-fun x2279 () Int)
(declare-fun x6775 () Int)
(declare-fun x2637 (Int) Int)
(declare-fun x6583 () Int)
(declare-fun x4209 () Int)
(declare-fun x8010 () Bool)
(declare-fun x5960 () Bool)
(declare-fun x98 () Bool)
(declare-fun x7821 () Bool)
(declare-fun x3401 () Int)
(declare-fun x6984 () Int)
(declare-fun x5766 () Int)
(declare-fun x4699 () Int)
(declare-fun x3513 () Int)
(declare-fun x245 () Int)
(declare-fun x6502 () Int)
(declare-fun x8278 () Int)
(declare-fun x214 () Int)
(declare-fun x8012 () Bool)
(declare-fun x3213 () Int)
(declare-fun x5441 () Bool)
(declare-fun x5428 () Bool)
(declare-fun x3301 () Int)
(declare-fun x1563 () Int)
(declare-fun x7091 () Int)
(declare-fun x4370 () Bool)
(declare-fun x4134 () Bool)
(declare-fun x158 () Int)
(declare-fun x3415 () Int)
(declare-fun x3647 () Int)
(declare-fun x3914 () Int)
(declare-fun x2795 () Bool)
(declare-fun x7598 (Int) Int)
(declare-fun x5459 () Int)
(declare-fun x7647 () Int)
(declare-fun x6549 () Int)
(declare-fun x7739 () Int)
(declare-fun x7972 () Int)
(declare-fun x124 () Bool)
(declare-fun x7115 () Bool)
(declare-fun x8124 () Int)
(declare-fun x4680 () Int)
(declare-fun x4312 () Bool)
(declare-fun x2776 () Int)
(declare-fun x7051 () Int)
(declare-fun x1723 () Int)
(declare-fun x2320 () Bool)
(declare-fun x3533 () Int)
(declare-fun x8577 () Int)
(declare-fun x1405 () Bool)
(declare-fun x6388 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x5879 () Int)
(declare-fun x4860 () Int)
(declare-fun x3656 () Int)
(declare-fun x2077 () Bool)
(declare-fun x1787 () Int)
(declare-fun x4084 () Int)
(declare-fun x140 () Int)
(declare-fun x5021 () Bool)
(declare-fun x5162 () Int)
(declare-fun x4204 () Bool)
(declare-fun x3719 () Bool)
(declare-fun x6410 () Bool)
(declare-fun x4551 () Bool)
(declare-fun x4420 () Int)
(declare-fun x5993 () Int)
(declare-fun x3817 () Int)
(declare-fun x2791 () Int)
(declare-fun x6538 () Bool)
(declare-fun x4031 () Int)
(declare-fun x7058 () Int)
(declare-fun x4760 () Int)
(declare-fun x723 () Int)
(declare-fun x2871 () Int)
(declare-fun x6684 () Int)
(declare-fun x1768 () Int)
(declare-fun x2291 () Int)
(declare-fun x3875 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x5944 () Bool)
(declare-fun x7362 () Int)
(declare-fun x6053 () Bool)
(declare-fun x4199 () Int)
(declare-fun x916 () Int)
(declare-fun x1876 () Int)
(declare-fun x2078 () Int)
(declare-fun x5734 () Int)
(declare-fun x4559 () Int)
(declare-fun x5901 () Bool)
(declare-fun x7377 () Bool)
(declare-fun x6872 () Bool)
(declare-fun x5666 () Int)
(declare-fun x2193 () Bool)
(declare-fun x7218 () Int)
(declare-fun x165 () Int)
(declare-fun x783 () Bool)
(declare-fun x389 () Int)
(declare-fun x7569 () Int)
(declare-fun x1086 () Int)
(declare-fun x4508 () Int)
(declare-fun x7711 () Bool)
(declare-fun x5356 () Int)
(declare-fun x5115 () Int)
(declare-fun x285 () Int)
(declare-fun x7045 () Int)
(declare-fun x6732 () Int)
(declare-fun x6078 () Bool)
(declare-fun x3215 () Bool)
(declare-fun x7335 () Int)
(declare-fun x2227 () Int)
(declare-fun x7920 () Bool)
(declare-fun x6992 () Bool)
(declare-fun x4228 () Bool)
(declare-fun x5107 () Int)
(declare-fun x1897 (Int) Int)
(declare-fun x6207 (Int Int Int Int Int Int) Int)
(declare-fun x2356 () Int)
(declare-fun x2314 () Bool)
(declare-fun x3586 () Int)
(declare-fun x4884 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x7130 () Int)
(declare-fun x3553 () Int)
(declare-fun x5926 () Bool)
(declare-fun x5000 () Bool)
(declare-fun x7382 () Int)
(declare-fun x6301 () Int)
(declare-fun x8108 () Bool)
(declare-fun x1091 () Int)
(declare-fun x6714 () Int)
(declare-fun x3615 () Int)
(declare-fun x1263 () Int)
(declare-fun x8138 () Int)
(declare-fun x7954 () Int)
(declare-fun x2448 () Int)
(declare-fun x894 () Int)
(declare-fun x3151 () Bool)
(declare-fun x1329 () Int)
(declare-fun x6194 () Int)
(declare-fun x3644 () Int)
(declare-fun x2341 () Bool)
(declare-fun x3058 () Bool)
(declare-fun x1130 () Int)
(declare-fun x2058 () Int)
(declare-fun x6043 (Int) Int)
(declare-fun x2968 () Bool)
(declare-fun x4201 () Int)
(declare-fun x5630 () Int)
(declare-fun x6297 () Int)
(declare-fun x5613 () Int)
(declare-fun x4720 () Bool)
(declare-fun x6216 () Bool)
(declare-fun x3091 () Bool)
(declare-fun x814 () Int)
(declare-fun x7956 () Bool)
(declare-fun x30 () Int)
(declare-fun x3429 () Bool)
(declare-fun x6720 () Int)
(declare-fun x5774 (Int) Int)
(declare-fun x5808 () Int)
(declare-fun x7257 () Int)
(declare-fun x1057 () Bool)
(declare-fun x4597 () Bool)
(declare-fun x7618 () Int)
(declare-fun x6553 () Int)
(declare-fun x2174 () Int)
(declare-fun x1769 () Bool)
(declare-fun x6465 () Int)
(declare-fun x7607 () Int)
(declare-fun x147 () Int)
(declare-fun x4633 () Bool)
(declare-fun x337 () Int)
(declare-fun x8498 () Bool)
(declare-fun x4963 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x917 () Int)
(declare-fun x2569 () Bool)
(declare-fun x4998 () Int)
(declare-fun x4644 () Int)
(declare-fun x284 () Int)
(declare-fun x3877 () Int)
(declare-fun x5777 () Int)
(declare-fun x6625 () Bool)
(declare-fun x5361 () Bool)
(declare-fun x5350 () Int)
(declare-fun x1502 () Int)
(declare-fun x4452 () Bool)
(declare-fun x3005 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x127 () Int)
(declare-fun x4813 () Int)
(declare-fun x5468 () Int)
(declare-fun x4866 () Int)
(declare-fun x4085 () Int)
(declare-fun x1425 () Int)
(declare-fun x7926 () Int)
(declare-fun x8026 () Bool)
(declare-fun x7192 () Int)
(declare-fun x3456 () Int)
(declare-fun x1167 () Bool)
(declare-fun x653 () Int)
(declare-fun x7365 () Bool)
(declare-fun x3279 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x5056 () Int)
(declare-fun x8486 () Int)
(declare-fun x8400 () Bool)
(declare-fun x3983 () Bool)
(declare-fun x210 () Int)
(declare-fun x5560 () Bool)
(declare-fun x2590 () Int)
(declare-fun x734 () Bool)
(declare-fun x2472 () Int)
(declare-fun x955 () Int)
(declare-fun x2362 () Int)
(declare-fun x3391 (Int) Int)
(declare-fun x1246 () Int)
(declare-fun x5102 () Bool)
(declare-fun x5329 () Int)
(declare-fun x5690 () Bool)
(declare-fun x1407 (Int) Int)
(declare-fun x1969 () Int)
(declare-fun x1319 () Int)
(declare-fun x3607 () Int)
(declare-fun x497 () Int)
(declare-fun x4088 () Int)
(declare-fun x5398 () Bool)
(declare-fun x5645 () Int)
(declare-fun x3808 () Int)
(declare-fun x3046 () Bool)
(declare-fun x1736 (Int) Int)
(declare-fun x3042 () Int)
(declare-fun x2800 () Bool)
(declare-fun x7613 () Bool)
(declare-fun x2474 () Bool)
(declare-fun x4372 () Bool)
(declare-fun x3310 () Bool)
(declare-fun x6114 () Bool)
(declare-fun x5793 () Bool)
(declare-fun x6928 () Bool)
(declare-fun x7205 () Bool)
(declare-fun x2578 () Bool)
(declare-fun x8578 () Int)
(declare-fun x7339 () Int)
(declare-fun x5518 () Int)
(declare-fun x3562 () Bool)
(declare-fun x836 () Int)
(declare-fun x998 () Bool)
(declare-fun x7399 () Int)
(declare-fun x7347 () Int)
(declare-fun x6906 () Int)
(declare-fun x5817 () Bool)
(declare-fun x8405 () Int)
(declare-fun x2882 () Int)
(declare-fun x347 () Int)
(declare-fun x1089 () Bool)
(declare-fun x7398 () Int)
(declare-fun x2878 () Int)
(declare-fun x229 () Int)
(declare-fun x5981 () Bool)
(declare-fun x2544 () Int)
(declare-fun x8003 () Bool)
(declare-fun x4379 () Int)
(declare-fun x4415 () Int)
(declare-fun x1896 () Bool)
(declare-fun x1914 () Int)
(declare-fun x8475 () Int)
(declare-fun x7751 () Int)
(declare-fun x8072 () Bool)
(declare-fun x2308 () Int)
(declare-fun x6215 () Int)
(declare-fun x1256 () Int)
(declare-fun x6390 () Int)
(declare-fun x6311 () Int)
(declare-fun x8377 () Bool)
(declare-fun x1858 () Int)
(declare-fun x5984 () Bool)
(declare-fun x832 () Bool)
(declare-fun x5842 () Int)
(declare-fun x5565 () Int)
(declare-fun x6820 () Int)
(declare-fun x738 () Int)
(declare-fun x2807 () Int)
(declare-fun x2140 () Bool)
(declare-fun x5857 () Int)
(declare-fun x1658 () Int)
(declare-fun x3508 () Bool)
(declare-fun x2593 () Int)
(declare-fun x5274 () Int)
(declare-fun x6304 () Bool)
(declare-fun x7582 () Bool)
(declare-fun x125 () Bool)
(declare-fun x571 () Int)
(declare-fun x2158 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x4316 () Bool)
(declare-fun x8098 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x5455 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x3785 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x756 () Bool)
(declare-fun x8027 () Bool)
(declare-fun x3414 () Int)
(declare-fun x6258 () Bool)
(declare-fun x3954 () Bool)
(declare-fun x3956 () Bool)
(declare-fun x2778 () Bool)
(declare-fun x1886 () Int)
(declare-fun x80 () Int)
(declare-fun x2565 () Int)
(declare-fun x2895 () Int)
(declare-fun x1020 () Int)
(declare-fun x1958 () Int)
(declare-fun x6117 () Int)
(declare-fun x5781 () Int)
(declare-fun x8037 () Int)
(declare-fun x6602 () Int)
(declare-fun x3447 () Bool)
(declare-fun x2747 () Int)
(declare-fun x8368 () Int)
(declare-fun x4397 () Bool)
(declare-fun x1667 () Int)
(declare-fun x5319 () Bool)
(declare-fun x2198 () Int)
(declare-fun x6324 () Int)
(declare-fun x4772 () Bool)
(declare-fun x6498 () Int)
(declare-fun x3329 () Int)
(declare-fun x2624 () Int)
(declare-fun x8513 () Bool)
(declare-fun x1505 () Int)
(declare-fun x7078 () Int)
(declare-fun x3338 () Bool)
(declare-fun x4311 () Int)
(declare-fun x5066 () Bool)
(declare-fun x1789 () Int)
(declare-fun x4754 (Int) Int)
(declare-fun x4352 () Int)
(declare-fun x6290 () Bool)
(declare-fun x4471 () Int)
(declare-fun x479 () Int)
(declare-fun x5823 () Int)
(declare-fun x6873 () Int)
(declare-fun x2694 () Int)
(declare-fun x7775 () Int)
(declare-fun x5185 () Bool)
(declare-fun x280 () Int)
(declare-fun x365 () Int)
(declare-fun x5535 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x5512 () Bool)
(declare-fun x3504 () Int)
(declare-fun x7343 () Bool)
(declare-fun x4109 () Int)
(declare-fun x2336 () Bool)
(declare-fun x8152 () Bool)
(declare-fun x6772 () Int)
(declare-fun x4144 () Int)
(declare-fun x3354 () Int)
(declare-fun x2353 () Int)
(declare-fun x4315 (Int) Int)
(declare-fun x7464 () Int)
(declare-fun x6777 () Int)
(declare-fun x2900 () Int)
(declare-fun x4112 () Int)
(declare-fun x7186 () Bool)
(declare-fun x594 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x8444 () Int)
(declare-fun x7773 () Int)
(declare-fun x6321 () Int)
(declare-fun x2421 () Int)
(declare-fun x1944 () Bool)
(declare-fun x6271 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1251 () Int)
(declare-fun x1887 () Bool)
(declare-fun x8351 () Bool)
(declare-fun x535 () Bool)
(declare-fun x7846 () Int)
(declare-fun x5618 () Int)
(declare-fun x597 () Bool)
(declare-fun x7276 () Bool)
(declare-fun x7013 () Int)
(declare-fun x7421 () Int)
(declare-fun x4208 () Int)
(declare-fun x6097 () Int)
(declare-fun x7211 () Int)
(declare-fun x7581 () Int)
(declare-fun x2730 () Int)
(declare-fun x2942 () Int)
(declare-fun x2222 () Int)
(declare-fun x858 () Int)
(declare-fun x3609 () Bool)
(declare-fun x7263 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x2665 () Int)
(declare-fun x358 () Int)
(declare-fun x2826 () Int)
(declare-fun x8328 () Int)
(declare-fun x2584 () Int)
(declare-fun x7089 () Int)
(declare-fun x3620 () Bool)
(declare-fun x3926 () Int)
(declare-fun x6079 () Bool)
(declare-fun x7285 () Bool)
(declare-fun x1832 () Int)
(declare-fun x1489 () Bool)
(declare-fun x484 () Int)
(declare-fun x4412 () Int)
(declare-fun x8148 () Int)
(declare-fun x6048 () Bool)
(declare-fun x5409 () Int)
(declare-fun x4739 () Bool)
(declare-fun x359 () Bool)
(declare-fun x7232 () Bool)
(declare-fun x4339 () Bool)
(declare-fun x2836 () Int)
(declare-fun x3214 () Int)
(declare-fun x6739 () Int)
(declare-fun x4523 () Int)
(declare-fun x1610 () Int)
(declare-fun x7776 () Bool)
(declare-fun x6316 () Int)
(declare-fun x8601 () Int)
(declare-fun x7508 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x4237 () Int)
(declare-fun x2189 () Bool)
(declare-fun x3824 () Bool)
(declare-fun x4297 () Int)
(declare-fun x2585 () Int)
(declare-fun x1739 () Bool)
(declare-fun x3510 () Int)
(declare-fun x3721 () Int)
(declare-fun x6674 () Bool)
(declare-fun x625 () Int)
(declare-fun x5498 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x7643 () Bool)
(declare-fun x3986 () Int)
(declare-fun x3366 () Int)
(declare-fun x4307 () Bool)
(declare-fun x2881 () Bool)
(declare-fun x4863 () Int)
(declare-fun x7574 () Int)
(declare-fun x396 () Int)
(declare-fun x4761 () Bool)
(declare-fun x6601 () Int)
(declare-fun x6669 () Int)
(declare-fun x1409 () Int)
(declare-fun x7472 () Int)
(declare-fun x254 () Int)
(declare-fun x294 () Int)
(declare-fun x7309 () Bool)
(declare-fun x4040 () Int)
(declare-fun x6188 () Bool)
(declare-fun x7720 (Int) Int)
(declare-fun x7277 () Bool)
(declare-fun x5867 () Bool)
(declare-fun x255 () Bool)
(declare-fun x5451 () Bool)
(declare-fun x7665 () Int)
(declare-fun x3730 () Int)
(declare-fun x4651 () Bool)
(declare-fun x573 () Int)
(declare-fun x1540 () Bool)
(declare-fun x1232 () Int)
(declare-fun x3649 () Bool)
(declare-fun x7014 () Int)
(declare-fun x2365 () Bool)
(declare-fun x3375 () Int)
(declare-fun x4153 () Int)
(declare-fun x3565 () Int)
(declare-fun x7029 () Bool)
(declare-fun x4257 () Bool)
(declare-fun x8332 () Int)
(declare-fun x4357 () Int)
(declare-fun x5463 () Int)
(declare-fun x5219 () Int)
(declare-fun x1240 () Bool)
(declare-fun x8042 () Bool)
(declare-fun x3327 () Bool)
(declare-fun x221 () Int)
(declare-fun x924 (Int) Int)
(declare-fun x816 () Int)
(declare-fun x8245 () Int)
(declare-fun x5209 () Int)
(declare-fun x6138 () Bool)
(declare-fun x7157 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x8380 () Int)
(declare-fun x3241 () Int)
(declare-fun x3217 () Int)
(declare-fun x2847 () Int)
(declare-fun x2679 () Int)
(declare-fun x1293 () Int)
(declare-fun x7624 () Bool)
(declare-fun x3201 () Int)
(declare-fun x2116 () Bool)
(declare-fun x1693 () Int)
(declare-fun x6647 () Int)
(declare-fun x2479 () Int)
(declare-fun x6746 () Int)
(declare-fun x1079 () Bool)
(declare-fun x5259 () Bool)
(declare-fun x3827 () Bool)
(declare-fun x4721 () Int)
(declare-fun x8191 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x2743 () Int)
(declare-fun x8582 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x7109 (Int) Int)
(declare-fun x2369 () Int)
(declare-fun x4907 () Bool)
(declare-fun x7580 () Bool)
(declare-fun x390 () Int)
(declare-fun x1410 () Int)
(declare-fun x935 () Int)
(declare-fun x1976 () Int)
(declare-fun x838 () Int)
(declare-fun x6472 () Bool)
(declare-fun x7586 () Bool)
(declare-fun x5486 () Int)
(declare-fun x5210 () Int)
(declare-fun x1083 () Int)
(declare-fun x562 (Int) Int)
(declare-fun x2476 () Int)
(declare-fun x691 () Bool)
(declare-fun x6197 () Int)
(declare-fun x2190 () Bool)
(declare-fun x3126 () Int)
(declare-fun x8074 () Bool)
(declare-fun x7592 () Int)
(declare-fun x5772 () Bool)
(declare-fun x6901 () Bool)
(declare-fun x8176 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1915 () Int)
(declare-fun x7674 () Int)
(declare-fun x7679 () Int)
(declare-fun x4251 () Bool)
(declare-fun x1668 () Int)
(declare-fun x2732 () Int)
(declare-fun x5880 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x5586 () Int)
(declare-fun x2233 () Int)
(declare-fun x2936 () Bool)
(declare-fun x6259 () Int)
(declare-fun x2964 () Bool)
(declare-fun x559 () Bool)
(declare-fun x4303 () Bool)
(declare-fun x1491 () Int)
(declare-fun x6317 () Bool)
(declare-fun x2111 () Int)
(declare-fun x1811 () Bool)
(declare-fun x324 () Bool)
(declare-fun x424 () Int)
(declare-fun x6703 () Bool)
(declare-fun x7007 () Int)
(declare-fun x2664 () Int)
(declare-fun x2903 () Bool)
(declare-fun x8584 () Bool)
(declare-fun x7008 () Int)
(declare-fun x4566 () Int)
(declare-fun x8101 () Int)
(declare-fun x7379 () Int)
(declare-fun x6082 () Bool)
(declare-fun x545 () Int)
(declare-fun x7478 () Bool)
(declare-fun x281 () Int)
(declare-fun x2947 () Bool)
(declare-fun x4781 () Int)
(declare-fun x3605 () Int)
(declare-fun x1450 () Bool)
(declare-fun x4621 () Int)
(declare-fun x4038 () Int)
(declare-fun x7541 () Int)
(declare-fun x8342 () Int)
(declare-fun x8449 () Int)
(declare-fun x4524 () Bool)
(declare-fun x2707 () Int)
(declare-fun x1708 () Int)
(declare-fun x5509 () Bool)
(declare-fun x6036 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x5116 () Int)
(declare-fun x1848 () Bool)
(declare-fun x2993 () Int)
(declare-fun x5114 () Bool)
(declare-fun x7441 () Int)
(declare-fun x6552 () Int)
(declare-fun x2592 () Int)
(declare-fun x6659 () Int)
(declare-fun x7818 () Int)
(declare-fun x2267 () Int)
(declare-fun x1374 () Int)
(declare-fun x6629 () Int)
(declare-fun x8204 () Bool)
(declare-fun x7949 () Int)
(declare-fun x2728 () Int)
(declare-fun x3699 () Int)
(declare-fun x7425 () Int)
(declare-fun x3575 () Bool)
(declare-fun x513 () Bool)
(declare-fun x45 () Int)
(declare-fun x7656 () Bool)
(declare-fun x1182 () Int)
(declare-fun x6539 () Bool)
(declare-fun x7279 () Bool)
(declare-fun x4541 () Int)
(declare-fun x656 () Bool)
(declare-fun x539 () Bool)
(declare-fun x6176 () Int)
(declare-fun x874 () Int)
(declare-fun x2750 () Bool)
(declare-fun x4693 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x13 () Int)
(declare-fun x3287 () Int)
(declare-fun x1780 () Bool)
(declare-fun x6531 () Int)
(declare-fun x3749 () Bool)
(declare-fun x6558 () Bool)
(declare-fun x7849 () Bool)
(declare-fun x5229 () Int)
(declare-fun x7326 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x5207 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x5261 () Bool)
(declare-fun x3834 () Int)
(declare-fun x7612 () Bool)
(declare-fun x7146 () Int)
(declare-fun x8365 () Bool)
(declare-fun x7530 () Int)
(declare-fun x7963 () Bool)
(declare-fun x1179 () Int)
(declare-fun x8504 () Bool)
(declare-fun x4937 () Bool)
(declare-fun x5818 () Int)
(declare-fun x7686 () Bool)
(declare-fun x7681 () Int)
(declare-fun x4832 () Bool)
(declare-fun x3545 () Int)
(declare-fun x673 () Bool)
(declare-fun x6467 () Int)
(declare-fun x7893 (Int) Int)
(declare-fun x516 () Bool)
(declare-fun x4395 () Bool)
(declare-fun x4377 () Int)
(declare-fun x3135 () Int)
(declare-fun x6352 () Int)
(declare-fun x4317 () Int)
(declare-fun x2118 () Bool)
(declare-fun x3219 () Bool)
(declare-fun x4276 () Int)
(declare-fun x5537 () Bool)
(declare-fun x1936 () Int)
(declare-fun x6086 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x6327 () Int)
(declare-fun x1417 () Int)
(declare-fun x8487 () Bool)
(declare-fun x1073 () Int)
(declare-fun x4253 () Int)
(declare-fun x4004 () Int)
(declare-fun x1321 () Int)
(declare-fun x6228 () Int)
(declare-fun x1521 () Int)
(declare-fun x7405 () Bool)
(declare-fun x244 () Bool)
(declare-fun x4808 () Bool)
(declare-fun x8323 () Int)
(declare-fun x1177 () Bool)
(declare-fun x4630 () Bool)
(declare-fun x7521 () Int)
(declare-fun x4748 () Bool)
(declare-fun x1622 () Int)
(declare-fun x3525 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x6181 () Bool)
(declare-fun x2390 () Int)
(declare-fun x6017 () Bool)
(declare-fun x5292 () Int)
(declare-fun x2414 () Int)
(declare-fun x4915 () Int)
(declare-fun x8149 () Bool)
(declare-fun x4773 () Int)
(declare-fun x8032 () Int)
(declare-fun x6310 () Bool)
(declare-fun x4611 () Bool)
(declare-fun x7539 () Bool)
(declare-fun x357 () Int)
(declare-fun x227 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x1629 () Int)
(declare-fun x4625 () Bool)
(declare-fun x8162 () Bool)
(declare-fun x1677 () Int)
(declare-fun x5003 () Int)
(declare-fun x6125 () Int)
(declare-fun x1553 () Int)
(declare-fun x5283 () Int)
(declare-fun x918 () Bool)
(declare-fun x4880 () Bool)
(declare-fun x4755 () Int)
(declare-fun x5500 () Bool)
(declare-fun x3369 () Int)
(declare-fun x4977 () Bool)
(declare-fun x1718 () Int)
(declare-fun x2892 () Int)
(declare-fun x1956 () Int)
(declare-fun x7706 () Int)
(declare-fun x4579 () Bool)
(declare-fun x7066 () Int)
(declare-fun x5031 () Int)
(declare-fun x6009 () Int)
(declare-fun x7662 () Int)
(declare-fun x5869 (Int) Int)
(declare-fun x2138 () Int)
(declare-fun x8357 () Int)
(declare-fun x349 () Bool)
(declare-fun x6861 () Bool)
(declare-fun x5277 () Int)
(declare-fun x5750 () Bool)
(declare-fun x4535 () Bool)
(declare-fun x6581 () Bool)
(declare-fun x772 () Int)
(declare-fun x7994 () Bool)
(declare-fun x4155 () Int)
(declare-fun x1245 () Bool)
(declare-fun x3277 () Int)
(declare-fun x2478 () Int)
(declare-fun x2218 () Int)
(declare-fun x2200 () Int)
(declare-fun x4465 () Bool)
(declare-fun x763 () Bool)
(declare-fun x6589 () Int)
(declare-fun x867 () Int)
(declare-fun x8128 () Int)
(declare-fun x8446 () Int)
(declare-fun x5344 () Bool)
(declare-fun x4277 () Bool)
(declare-fun x3013 () Int)
(declare-fun x5719 () Bool)
(declare-fun x6488 () Int)
(declare-fun x2783 () Int)
(declare-fun x6713 () Int)
(declare-fun x6944 () Int)
(declare-fun x450 () Bool)
(declare-fun x6911 () Bool)
(declare-fun x5515 () Int)
(declare-fun x7446 () Bool)
(declare-fun x8078 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x7731 () Bool)
(declare-fun x3177 () Int)
(declare-fun x1022 () Int)
(declare-fun x6551 () Bool)
(declare-fun x5685 () Bool)
(declare-fun x4070 () Bool)
(declare-fun x1221 () Int)
(declare-fun x993 () Int)
(declare-fun x6364 () Int)
(declare-fun x830 () Bool)
(declare-fun x7020 (Int) Int)
(declare-fun x564 () Int)
(declare-fun x3800 () Bool)
(declare-fun x6006 () Int)
(declare-fun x7709 () Bool)
(declare-fun x7524 () Bool)
(declare-fun x2449 () Bool)
(declare-fun x8596 () Int)
(declare-fun x6981 () Int)
(declare-fun x6355 () Int)
(declare-fun x3028 () Bool)
(declare-fun x2457 () Bool)
(declare-fun x6666 () Int)
(declare-fun x893 () Bool)
(declare-fun x6940 () Int)
(declare-fun x3941 () Int)
(declare-fun x2525 () Int)
(declare-fun x3146 () Int)
(declare-fun x6859 () Int)
(declare-fun x1541 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x6577 () Int)
(declare-fun x2926 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x5154 () Bool)
(declare-fun x5546 () Int)
(declare-fun x2946 () Int)
(declare-fun x3742 () Int)
(declare-fun x5232 () Int)
(declare-fun x1292 () Int)
(declare-fun x5567 () Int)
(declare-fun x5492 () Int)
(declare-fun x7234 () Int)
(declare-fun x837 () Bool)
(declare-fun x5917 () Bool)
(declare-fun x735 () Int)
(declare-fun x378 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x6980 () Int)
(declare-fun x8311 () Int)
(declare-fun x4380 () Int)
(declare-fun x2652 () Bool)
(declare-fun x3884 () Bool)
(declare-fun x1653 () Int)
(declare-fun x8163 (Int) Int)
(declare-fun x2646 () Bool)
(declare-fun x8431 () Int)
(declare-fun x500 () Int)
(declare-fun x6594 () Bool)
(declare-fun x5813 () Int)
(declare-fun x6374 () Int)
(declare-fun x821 () Int)
(declare-fun x5097 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x6333 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x3948 () Int)
(declare-fun x2509 () Bool)
(declare-fun x8050 () Int)
(declare-fun x8521 () Int)
(declare-fun x1104 () Int)
(declare-fun x8030 () Int)
(declare-fun x6135 () Int)
(declare-fun x6343 () Int)
(declare-fun x5353 () Bool)
(declare-fun x72 () Int)
(declare-fun x8510 () Int)
(declare-fun x7865 () Int)
(declare-fun x2400 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x4223 () Int)
(declare-fun x2399 () Bool)
(declare-fun x6504 () Bool)
(declare-fun x1600 () Int)
(declare-fun x7946 () Int)
(declare-fun x1155 () Bool)
(declare-fun x4120 () Int)
(declare-fun x3737 () Int)
(declare-fun x572 () Int)
(declare-fun x8549 () Bool)
(declare-fun x182 () Bool)
(declare-fun x8509 () Bool)
(declare-fun x242 () Bool)
(declare-fun x3674 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x3712 () Int)
(declare-fun x4877 () Bool)
(declare-fun x2163 () Bool)
(declare-fun x4328 () Bool)
(declare-fun x5191 () Bool)
(declare-fun x4783 () Int)
(declare-fun x7313 () Bool)
(declare-fun x4525 () Int)
(declare-fun x7937 () Bool)
(declare-fun x6759 () Int)
(declare-fun x6802 () Int)
(declare-fun x2644 () Int)
(declare-fun x3324 () Int)
(declare-fun x2382 () Int)
(declare-fun x4667 () Bool)
(declare-fun x761 () Int)
(declare-fun x1401 () Bool)
(declare-fun x3860 () Int)
(declare-fun x6968 () Bool)
(declare-fun x4733 () Bool)
(declare-fun x3164 () Int)
(declare-fun x8067 () Int)
(declare-fun x2916 () Int)
(declare-fun x6073 () Int)
(declare-fun x6750 () Bool)
(declare-fun x1927 () Int)
(declare-fun x4302 () Bool)
(declare-fun x2967 (Int) Int)
(declare-fun x8297 (Int Int) Int)
(declare-fun x515 () Bool)
(declare-fun x8462 () Int)
(declare-fun x8359 () Int)
(declare-fun x1595 () Int)
(declare-fun x6046 () Int)
(declare-fun x3849 () Int)
(declare-fun x7316 () Int)
(declare-fun x2312 () Bool)
(declare-fun x7182 () Int)
(declare-fun x7160 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x3985 () Int)
(declare-fun x5791 () Bool)
(declare-fun x3924 () Bool)
(declare-fun x1528 () Int)
(declare-fun x6378 () Bool)
(declare-fun x1882 () Int)
(declare-fun x1290 () Int)
(declare-fun x563 () Int)
(declare-fun x7229 () Int)
(declare-fun x4584 () Int)
(declare-fun x1548 () Bool)
(declare-fun x960 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x7460 () Int)
(declare-fun x5346 () Bool)
(declare-fun x6455 () Int)
(declare-fun x3685 () Bool)
(declare-fun x41 () Int)
(declare-fun x5717 () Int)
(declare-fun x504 () Bool)
(declare-fun x4002 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x8583 () Bool)
(declare-fun x1726 () Int)
(declare-fun x8434 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x5130 () Int)
(declare-fun x4846 () Bool)
(declare-fun x628 () Bool)
(declare-fun x7391 () Int)
(declare-fun x7155 () Int)
(declare-fun x1607 () Int)
(declare-fun x6496 () Int)
(declare-fun x3228 () Int)
(declare-fun x5715 () Bool)
(declare-fun x7299 () Int)
(declare-fun x3129 () Int)
(declare-fun x7505 () Int)
(declare-fun x2869 () Int)
(declare-fun x3170 () Int)
(declare-fun x2930 (Int Int) Int)
(declare-fun x1533 () Int)
(declare-fun x6050 () Int)
(declare-fun x8130 () Bool)
(declare-fun x1400 () Int)
(declare-fun x3101 () Int)
(declare-fun x6641 () Bool)
(declare-fun x4917 () Int)
(declare-fun x2551 () Bool)
(declare-fun x1363 () Int)
(declare-fun x586 () Bool)
(declare-fun x8260 () Bool)
(declare-fun x260 () Int)
(declare-fun x2003 () Bool)
(declare-fun x5557 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x7977 () Int)
(declare-fun x224 () Int)
(declare-fun x3876 () Int)
(declare-fun x5311 () Bool)
(declare-fun x5998 () Bool)
(declare-fun x6543 () Int)
(declare-fun x1050 () Bool)
(declare-fun x3765 () Int)
(declare-fun x2214 () Bool)
(declare-fun x6761 () Bool)
(declare-fun x8485 () Bool)
(declare-fun x2397 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x8543 () Int)
(declare-fun x7069 () Int)
(declare-fun x2506 () Bool)
(declare-fun x5611 () Int)
(declare-fun x6268 () Bool)
(declare-fun x2797 () Int)
(declare-fun x5420 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1754 (Int) Int)
(declare-fun x1154 () Int)
(declare-fun x6235 () Bool)
(declare-fun x5635 () Bool)
(declare-fun x6514 () Int)
(declare-fun x5856 () Bool)
(declare-fun x8143 () Bool)
(declare-fun x3166 (Int) Int)
(declare-fun x4615 () Bool)
(declare-fun x6085 () Bool)
(declare-fun x7962 () Bool)
(declare-fun x8076 () Int)
(declare-fun x2433 () Bool)
(declare-fun x8046 () Bool)
(declare-fun x987 () Bool)
(declare-fun x5657 () Int)
(declare-fun x3079 () Bool)
(declare-fun x5431 () Bool)
(declare-fun x3831 () Bool)
(declare-fun x8393 () Int)
(declare-fun x6529 () Int)
(declare-fun x4896 () Int)
(declare-fun x3679 () Int)
(declare-fun x7030 () Bool)
(declare-fun x5028 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x5529 () Bool)
(declare-fun x7628 () Bool)
(declare-fun x4810 () Bool)
(declare-fun x6468 () Int)
(declare-fun x4369 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x799 () Int)
(declare-fun x5224 () Int)
(declare-fun x3333 () Int)
(declare-fun x6511 () Bool)
(declare-fun x5732 () Int)
(declare-fun x1236 () Int)
(declare-fun x87 () Bool)
(declare-fun x577 () Int)
(declare-fun x2689 () Int)
(declare-fun x3189 () Bool)
(declare-fun x5684 () Bool)
(declare-fun x7810 () Int)
(declare-fun x1013 () Int)
(declare-fun x1487 () Int)
(declare-fun x8261 () Bool)
(declare-fun x3636 () Int)
(declare-fun x3809 () Int)
(declare-fun x753 () Int)
(declare-fun x6323 () Bool)
(declare-fun x5369 () Int)
(declare-fun x5197 () Int)
(declare-fun x6930 () Bool)
(declare-fun x4715 (Int) Int)
(declare-fun x2208 () Bool)
(declare-fun x5256 () Bool)
(declare-fun x3626 () Bool)
(declare-fun x7381 () Bool)
(declare-fun x2695 () Int)
(declare-fun x7853 () Bool)
(declare-fun x3802 () Int)
(declare-fun x413 () Int)
(declare-fun x1378 () Int)
(declare-fun x5906 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x6022 () Int)
(declare-fun x7122 () Bool)
(declare-fun x3220 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x5878 () Bool)
(declare-fun x3240 () Int)
(declare-fun x1150 () Int)
(declare-fun x4216 () Bool)
(declare-fun x3389 () Int)
(declare-fun x4066 () Int)
(declare-fun x5287 () Int)
(declare-fun x5680 () Int)
(declare-fun x2759 () Int)
(declare-fun x2613 () Int)
(declare-fun x785 () Int)
(declare-fun x7210 () Int)
(declare-fun x2346 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x7845 (Int) Int)
(declare-fun x8429 () Int)
(declare-fun x4874 () Int)
(declare-fun x2640 () Int)
(declare-fun x1000 () Int)
(declare-fun x8455 () Int)
(declare-fun x4196 () Int)
(declare-fun x840 () Int)
(declare-fun x2223 () Int)
(declare-fun x1207 () Int)
(declare-fun x8097 () Int)
(declare-fun x7061 () Int)
(declare-fun x1792 () Bool)
(declare-fun x1732 () Int)
(declare-fun x2328 () Int)
(declare-fun x5063 () Bool)
(declare-fun x7509 () Bool)
(declare-fun x6368 () Int)
(declare-fun x431 () Int)
(declare-fun x7762 () Int)
(declare-fun x4097 () Int)
(declare-fun x3978 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x7828 () Int)
(declare-fun x5991 () Bool)
(declare-fun x8246 () Int)
(declare-fun x6232 () Bool)
(declare-fun x5510 () Int)
(declare-fun x2260 () Int)
(declare-fun x5016 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x6276 () Int)
(declare-fun x5202 () Bool)
(declare-fun x8054 () Int)
(declare-fun x1597 () Bool)
(declare-fun x97 () Int)
(declare-fun x6422 () Int)
(declare-fun x7515 () Int)
(declare-fun x1160 () Int)
(declare-fun x679 () Int)
(declare-fun x8556 () Int)
(declare-fun x4410 () Bool)
(declare-fun x3578 () Int)
(declare-fun x1704 () Int)
(declare-fun x1906 () Int)
(declare-fun x5321 () Int)
(declare-fun x2317 () Int)
(declare-fun x3195 () Bool)
(declare-fun x6916 () Int)
(declare-fun x8146 () Int)
(declare-fun x2575 () Int)
(declare-fun x2039 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x1813 () Int)
(declare-fun x7769 () Int)
(declare-fun x1063 () Int)
(declare-fun x1771 () Int)
(declare-fun x2617 () Int)
(declare-fun x5832 () Bool)
(declare-fun x7217 () Int)
(declare-fun x8304 () Int)
(declare-fun x121 () Int)
(declare-fun x8483 () Bool)
(declare-fun x7727 () Int)
(declare-fun x8550 () Int)
(declare-fun x7412 () Int)
(declare-fun x5178 () Bool)
(declare-fun x7408 () Bool)
(declare-fun x639 (Int Int) Int)
(declare-fun x3554 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x4642 () Bool)
(declare-fun x354 () Int)
(declare-fun x5011 () Int)
(declare-fun x3500 () Int)
(declare-fun x4522 () Int)
(declare-fun x2580 () Bool)
(declare-fun x2367 (Int) Int)
(declare-fun x645 () Int)
(declare-fun x4780 () Int)
(declare-fun x8409 () Int)
(declare-fun x1985 () Int)
(declare-fun x2299 () Bool)
(declare-fun x8282 () Int)
(declare-fun x2599 () Bool)
(declare-fun x6978 () Bool)
(declare-fun x2220 () Int)
(declare-fun x7168 () Bool)
(declare-fun x4819 () Int)
(declare-fun x2178 () Int)
(declare-fun x2280 () Int)
(declare-fun x258 () Int)
(declare-fun x115 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x2949 () Int)
(declare-fun x481 () Int)
(declare-fun x3251 () Bool)
(declare-fun x190 () Int)
(declare-fun x7547 () Int)
(declare-fun x4565 () Int)
(declare-fun x5145 () Int)
(declare-fun x972 (Int) Int)
(declare-fun x7178 () Int)
(declare-fun x2249 () Bool)
(declare-fun x716 () Bool)
(declare-fun x1430 () Int)
(declare-fun x7272 () Int)
(declare-fun x4160 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x4011 () Int)
(declare-fun x101 () Int)
(declare-fun x3080 () Int)
(declare-fun x6068 () Int)
(declare-fun x4676 () Int)
(declare-fun x4438 () Int)
(declare-fun x6342 () Int)
(declare-fun x7870 () Int)
(declare-fun x733 () Int)
(declare-fun x5248 () Bool)
(declare-fun x7084 () Bool)
(declare-fun x1194 () Int)
(declare-fun x1598 () Bool)
(declare-fun x3934 () Int)
(declare-fun x560 () Bool)
(declare-fun x2259 () Int)
(declare-fun x4737 () Int)
(declare-fun x5534 () Bool)
(declare-fun x5069 () Bool)
(declare-fun x4898 () Int)
(declare-fun x530 () Int)
(declare-fun x3621 () Int)
(declare-fun x5617 () Int)
(declare-fun x3331 () Int)
(declare-fun x5987 () Bool)
(declare-fun x6665 () Bool)
(declare-fun x1878 () Int)
(declare-fun x1045 () Bool)
(declare-fun x7707 () Int)
(declare-fun x2816 () Int)
(declare-fun x3874 () Int)
(declare-fun x3111 () Bool)
(declare-fun x7346 () Int)
(declare-fun x8349 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x6624 () Int)
(declare-fun x1324 () Bool)
(declare-fun x7683 () Bool)
(declare-fun x3007 () Int)
(declare-fun x7861 () Int)
(declare-fun x2323 () Int)
(declare-fun x7554 () Int)
(declare-fun x7135 () Int)
(declare-fun x7451 () Bool)
(declare-fun x3209 () Int)
(declare-fun x736 () Int)
(declare-fun x3147 () Bool)
(declare-fun x4688 () Int)
(declare-fun x4463 () Bool)
(declare-fun x4867 () Int)
(declare-fun x1332 () Int)
(declare-fun x4904 () Int)
(declare-fun x1403 () Bool)
(declare-fun x5051 () Int)
(declare-fun x6943 () Bool)
(declare-fun x7428 () Int)
(declare-fun x8256 () Bool)
(declare-fun x4384 () Bool)
(declare-fun x6751 () Int)
(declare-fun x3483 () Bool)
(declare-fun x3300 () Int)
(declare-fun x1634 () Int)
(declare-fun x1647 () Int)
(declare-fun x8125 () Int)
(declare-fun x8395 () Bool)
(declare-fun x3990 () Bool)
(declare-fun x336 () Int)
(declare-fun x2429 () Bool)
(declare-fun x5345 () Bool)
(declare-fun x3021 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x5380 () Int)
(declare-fun x4103 () Bool)
(declare-fun x3882 () Int)
(declare-fun x7873 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x5700 () Int)
(declare-fun x7355 () Bool)
(declare-fun x6074 () Int)
(declare-fun x8505 () Bool)
(declare-fun x2650 () Int)
(declare-fun x201 () Bool)
(declare-fun x7523 () Int)
(declare-fun x6072 () Int)
(declare-fun x8066 () Int)
(declare-fun x5094 () Int)
(declare-fun x6921 () Bool)
(declare-fun x8560 () Int)
(declare-fun x3479 () Bool)
(declare-fun x5432 () Bool)
(declare-fun x3920 () Int)
(declare-fun x6471 () Bool)
(declare-fun x8482 () Int)
(declare-fun x6446 () Bool)
(declare-fun x6536 () Bool)
(declare-fun x871 () Bool)
(declare-fun x8599 () Int)
(declare-fun x6841 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x6432 () Int)
(declare-fun x7467 () Int)
(declare-fun x8236 () Int)
(declare-fun x7786 () Bool)
(declare-fun x6701 () Int)
(declare-fun x669 () Bool)
(declare-fun x6020 () Int)
(declare-fun x8553 () Int)
(declare-fun x3901 () Int)
(declare-fun x1939 (Int) Int)
(declare-fun x4219 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x2957 () Bool)
(declare-fun x2156 () Int)
(declare-fun x6451 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x4681 () Int)
(declare-fun x1383 () Int)
(declare-fun x862 () Int)
(declare-fun x1181 () Bool)
(declare-fun x5245 () Bool)
(declare-fun x4823 () Int)
(declare-fun x624 () Int)
(declare-fun x49 () Int)
(declare-fun x6362 () Int)
(declare-fun x3650 () Int)
(declare-fun x4043 () Int)
(declare-fun x6153 () Int)
(declare-fun x5923 () Bool)
(declare-fun x5646 () Int)
(declare-fun x3462 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x1657 () Int)
(declare-fun x304 (Int) Int)
(declare-fun x8150 () Int)
(declare-fun x8039 () Int)
(declare-fun x7305 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x3221 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x4685 () Bool)
(declare-fun x379 () Int)
(declare-fun x6902 () Int)
(declare-fun x7459 () Int)
(declare-fun x2095 () Int)
(declare-fun x8503 () Int)
(declare-fun x3917 () Bool)
(declare-fun x7117 () Bool)
(declare-fun x2841 () Int)
(declare-fun x1336 () Bool)
(declare-fun x92 () Int)
(declare-fun x915 () Bool)
(declare-fun x5020 () Int)
(declare-fun x1579 () Int)
(declare-fun x2753 () Bool)
(declare-fun x6407 () Int)
(declare-fun x2831 () Int)
(declare-fun x2177 () Int)
(declare-fun x5748 () Bool)
(declare-fun x5838 () Int)
(declare-fun x6387 () Bool)
(declare-fun x7985 () Int)
(declare-fun x7887 () Bool)
(declare-fun x8171 () Int)
(declare-fun x276 () Int)
(declare-fun x5877 () Int)
(declare-fun x2682 () Int)
(declare-fun x3395 () Bool)
(declare-fun x4304 () Int)
(declare-fun x962 () Bool)
(declare-fun x3367 () Bool)
(declare-fun x4343 () Bool)
(declare-fun x5526 () Int)
(declare-fun x3810 () Bool)
(declare-fun x8136 () Int)
(declare-fun x3336 () Int)
(declare-fun x4385 () Int)
(declare-fun x8569 () Int)
(declare-fun x3202 () Bool)
(declare-fun x4365 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1603 () Int)
(declare-fun x3161 () Bool)
(declare-fun x2017 () Bool)
(declare-fun x2278 () Int)
(declare-fun x3844 (Int) Int)
(declare-fun x1354 () Int)
(declare-fun x6635 () Int)
(declare-fun x3951 () Bool)
(declare-fun x291 () Bool)
(declare-fun x7388 () Int)
(declare-fun x1392 () Int)
(declare-fun x3919 () Int)
(declare-fun x6011 () Int)
(declare-fun x8481 () Bool)
(declare-fun x5026 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x8082 () Bool)
(declare-fun x4022 () Int)
(declare-fun x5082 () Int)
(declare-fun x4683 () Int)
(declare-fun x7948 () Int)
(declare-fun x6724 () Int)
(declare-fun x1496 () Int)
(declare-fun x4176 () Bool)
(declare-fun x6926 () Int)
(declare-fun x3661 () Bool)
(declare-fun x6166 () Int)
(declare-fun x1996 () Bool)
(declare-fun x6899 () Int)
(declare-fun x6510 () Bool)
(declare-fun x5410 () Int)
(declare-fun x1516 () Int)
(declare-fun x1174 () Int)
(declare-fun x1873 () Bool)
(declare-fun x652 () Int)
(declare-fun x6726 () Bool)
(declare-fun x8231 () Int)
(declare-fun x4802 () Int)
(declare-fun x266 () Bool)
(declare-fun x5651 () Int)
(declare-fun x6658 () Int)
(declare-fun x4825 () Bool)
(declare-fun x7202 () Bool)
(declare-fun x6127 () Bool)
(declare-fun x1968 () Int)
(declare-fun x6145 () Int)
(declare-fun x3476 () Int)
(declare-fun x1186 () Bool)
(declare-fun x5913 () Int)
(declare-fun x1905 () Bool)
(declare-fun x3672 () Int)
(declare-fun x8388 () Int)
(declare-fun x4521 () Int)
(declare-fun x496 () Int)
(declare-fun x7449 () Int)
(declare-fun x1239 () Int)
(declare-fun x7199 () Int)
(declare-fun x6564 () Bool)
(declare-fun x212 () Int)
(declare-fun x6939 () Bool)
(declare-fun x2110 () Int)
(declare-fun x995 () Int)
(declare-fun x6246 () Int)
(declare-fun x99 () Int)
(declare-fun x6319 () Int)
(declare-fun x808 () Bool)
(declare-fun x8069 () Int)
(declare-fun x5589 () Int)
(declare-fun x4531 () Int)
(declare-fun x7517 () Int)
(declare-fun x1669 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x8370 (Int) Int)
(declare-fun x6526 () Int)
(declare-fun x7301 () Int)
(declare-fun x6660 () Int)
(declare-fun x6384 () Bool)
(declare-fun x5936 () Int)
(declare-fun x8361 () Int)
(declare-fun x7724 () Int)
(declare-fun x4854 () Int)
(declare-fun x3833 () Bool)
(declare-fun x6060 () Bool)
(declare-fun x5242 () Int)
(declare-fun x6035 () Int)
(declare-fun x1440 () Bool)
(declare-fun x4506 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x3558 () Bool)
(declare-fun x6655 () Int)
(declare-fun x7964 () Bool)
(declare-fun x8421 () Bool)
(declare-fun x4891 () Bool)
(declare-fun x7288 () Int)
(declare-fun x161 () Bool)
(declare-fun x7599 () Int)
(declare-fun x5216 () Int)
(declare-fun x8018 () Bool)
(declare-fun x4641 () Bool)
(declare-fun x1434 () Int)
(declare-fun x7434 (Int) Int)
(declare-fun x2195 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x5697 () Int)
(declare-fun x33 () Int)
(declare-fun x8528 () Bool)
(declare-fun x3286 () Int)
(declare-fun x5290 () Bool)
(declare-fun x3357 () Bool)
(declare-fun x5384 () Bool)
(declare-fun x5583 () Bool)
(declare-fun x8170 () Int)
(declare-fun x7196 () Bool)
(declare-fun x405 () Bool)
(declare-fun x8015 (Int) Int)
(declare-fun x7874 () Int)
(declare-fun x1243 () Int)
(declare-fun x3579 () Int)
(declare-fun x3852 () Int)
(declare-fun x2123 () Int)
(declare-fun x2668 () Bool)
(declare-fun x6628 () Int)
(declare-fun x4167 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x6544 () Bool)
(declare-fun x408 () Int)
(declare-fun x5038 () Int)
(declare-fun x6774 () Bool)
(declare-fun x3984 () Bool)
(declare-fun x2088 () Int)
(declare-fun x1971 () Bool)
(declare-fun x6780 () Int)
(declare-fun x1995 () Int)
(declare-fun x3264 () Int)
(declare-fun x472 () Int)
(declare-fun x3392 () Int)
(declare-fun x4406 () Int)
(declare-fun x3547 () Bool)
(declare-fun x5349 () Int)
(declare-fun x1200 () Int)
(declare-fun x2508 () Int)
(declare-fun x3532 () Bool)
(declare-fun x4035 () Int)
(declare-fun x7138 () Int)
(declare-fun x4390 () Bool)
(declare-fun x1907 () Int)
(declare-fun x2216 () Bool)
(declare-fun x6454 () Int)
(declare-fun x8354 () Bool)
(declare-fun x7796 () Int)
(declare-fun x1917 () Bool)
(declare-fun x8052 () Int)
(declare-fun x5466 () Bool)
(declare-fun x687 () Int)
(declare-fun x6132 (Int) Int)
(declare-fun x3418 () Int)
(declare-fun x7947 () Int)
(declare-fun x1753 () Int)
(declare-fun x8463 () Bool)
(declare-fun x7376 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x5206 () Bool)
(declare-fun x7896 (Int) Int)
(declare-fun x2047 () Bool)
(declare-fun x261 () Int)
(declare-fun x4230 () Int)
(declare-fun x4090 () Int)
(declare-fun x3655 () Int)
(declare-fun x8159 () Int)
(declare-fun x1031 () Int)
(declare-fun x797 () Int)
(declare-fun x1308 () Int)
(declare-fun x4017 () Int)
(declare-fun x790 () Bool)
(declare-fun x8025 () Int)
(declare-fun x4635 () Bool)
(declare-fun x5761 () Int)
(declare-fun x1205 () Bool)
(declare-fun x686 () Bool)
(declare-fun x6503 () Int)
(declare-fun x775 () Bool)
(declare-fun x2757 () Bool)
(declare-fun x3838 () Int)
(declare-fun x879 () Bool)
(declare-fun x6689 () Int)
(declare-fun x4333 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x3995 () Int)
(declare-fun x3654 () Int)
(declare-fun x969 () Int)
(declare-fun x1992 () Bool)
(declare-fun x2961 () Bool)
(declare-fun x831 () Bool)
(declare-fun x2806 () Bool)
(declare-fun x2430 () Int)
(declare-fun x4374 () Int)
(declare-fun x2756 () Int)
(declare-fun x5337 () Int)
(declare-fun x2344 () Int)
(declare-fun x4320 () Int)
(declare-fun x5168 () Bool)
(declare-fun x8188 () Int)
(declare-fun x1988 () Bool)
(declare-fun x3497 () Int)
(declare-fun x4062 () Int)
(declare-fun x2254 (Int) Int)
(declare-fun x3404 () Int)
(declare-fun x5327 () Bool)
(declare-fun x5012 () Int)
(declare-fun x6481 () Bool)
(declare-fun x6395 () Int)
(declare-fun x7188 () Int)
(declare-fun x5602 () Int)
(declare-fun x7694 () Int)
(declare-fun x3424 () Int)
(declare-fun x609 () Int)
(declare-fun x4894 () Bool)
(declare-fun x6997 () Bool)
(declare-fun x5561 () Int)
(declare-fun x1102 () Bool)
(declare-fun x5076 () Int)
(declare-fun x3440 () Bool)
(declare-fun x7114 () Int)
(declare-fun x1124 () Bool)
(declare-fun x4744 () Bool)
(declare-fun x2281 () Int)
(declare-fun x5450 () Int)
(declare-fun x6109 () Bool)
(declare-fun x4943 () Int)
(declare-fun x2620 () Bool)
(declare-fun x1151 () Int)
(declare-fun x5406 () Int)
(declare-fun x5071 () Bool)
(declare-fun x6195 () Int)
(declare-fun x2559 () Bool)
(declare-fun x4704 () Int)
(declare-fun x197 () Int)
(declare-fun x5480 () Int)
(declare-fun x3156 () Int)
(declare-fun x2786 () Bool)
(declare-fun x8219 () Int)
(declare-fun x1222 () Int)
(declare-fun x6140 (Int) Int)
(declare-fun x6520 () Bool)
(declare-fun x792 () Int)
(declare-fun x886 () Bool)
(declare-fun x2327 () Int)
(declare-fun x5284 () Bool)
(declare-fun x7934 () Bool)
(declare-fun x1692 () Int)
(declare-fun x1074 () Bool)
(declare-fun x570 () Int)
(declare-fun x7814 (Int) Int)
(declare-fun x4246 () Bool)
(declare-fun x2464 () Int)
(declare-fun x8600 () Bool)
(declare-fun x2798 () Int)
(declare-fun x3323 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x6754 () Bool)
(declare-fun x3666 () Bool)
(declare-fun x7808 () Int)
(declare-fun x747 () Bool)
(declare-fun x3751 () Int)
(declare-fun x4962 () Int)
(declare-fun x7227 () Int)
(declare-fun x5885 () Bool)
(declare-fun x29 () Int)
(declare-fun x6874 () Int)
(declare-fun x5892 () Int)
(declare-fun x6889 () Int)
(declare-fun x7736 () Bool)
(declare-fun x4202 () Int)
(declare-fun x3781 () Int)
(declare-fun x3832 () Bool)
(declare-fun x2850 () Bool)
(declare-fun x3509 () Bool)
(declare-fun x6864 () Int)
(declare-fun x6778 () Bool)
(declare-fun x868 () Int)
(declare-fun x4164 () Int)
(declare-fun x1744 () Int)
(declare-fun x7172 () Int)
(declare-fun x8095 () Int)
(declare-fun x7785 () Int)
(declare-fun x6049 () Int)
(declare-fun x8430 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x7283 () Bool)
(declare-fun x3239 () Int)
(declare-fun x7304 () Int)
(declare-fun x384 () Int)
(declare-fun x3118 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x185 () Int)
(declare-fun x2269 () Int)
(declare-fun x3520 () Int)
(declare-fun x4403 () Int)
(declare-fun x2601 () Bool)
(declare-fun x769 () Int)
(declare-fun x4811 () Bool)
(declare-fun x3291 () Int)
(declare-fun x4501 () Bool)
(declare-fun x6561 () Int)
(declare-fun x1227 () Bool)
(declare-fun x1348 () Int)
(declare-fun x6492 () Bool)
(declare-fun x3763 () Bool)
(declare-fun x4982 () Bool)
(declare-fun x3496 () Bool)
(declare-fun x1730 () Int)
(declare-fun x773 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x2318 () Int)
(declare-fun x6116 () Int)
(declare-fun x1606 () Int)
(declare-fun x2851 () Bool)
(declare-fun x2228 () Int)
(declare-fun x5171 () Int)
(declare-fun x1824 () Int)
(declare-fun x8100 () Int)
(declare-fun x2063 () Bool)
(declare-fun x5758 () Bool)
(declare-fun x398 () Int)
(declare-fun x1504 () Int)
(declare-fun x7737 () Bool)
(declare-fun x5279 () Bool)
(declare-fun x7838 () Int)
(declare-fun x1307 () Int)
(declare-fun x5992 () Bool)
(declare-fun x6947 () Bool)
(declare-fun x920 () Int)
(declare-fun x2297 () Bool)
(declare-fun x7390 () Bool)
(declare-fun x7817 () Int)
(declare-fun x5179 () Bool)
(declare-fun x4930 () Int)
(declare-fun x7433 () Bool)
(declare-fun x5070 () Int)
(declare-fun x5010 () Int)
(declare-fun x1418 () Bool)
(declare-fun x8192 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x1684 () Int)
(declare-fun x6672 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x5430 () Bool)
(declare-fun x1575 () Int)
(declare-fun x5315 () Int)
(declare-fun x243 () Int)
(declare-fun x8226 () Int)
(declare-fun x939 () Int)
(declare-fun x6187 () Bool)
(declare-fun x1715 () Int)
(declare-fun x1420 () Int)
(declare-fun x5255 () Int)
(declare-fun x1993 () Int)
(declare-fun x5331 () Bool)
(declare-fun x7414 () Bool)
(declare-fun x6392 () Int)
(declare-fun x2145 () Int)
(declare-fun x550 () Int)
(declare-fun x6592 () Bool)
(declare-fun x3519 () Int)
(declare-fun x1675 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x566 () Bool)
(declare-fun x8181 () Int)
(declare-fun x1415 () Bool)
(declare-fun x5886 () Int)
(declare-fun x690 () Int)
(declare-fun x1559 () Int)
(declare-fun x4624 () Bool)
(declare-fun x302 () Int)
(declare-fun x3787 () Int)
(declare-fun x470 () Int)
(declare-fun x8360 () Int)
(declare-fun x5175 () Int)
(declare-fun x4995 () Bool)
(declare-fun x7836 () Bool)
(declare-fun x4018 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x5964 () Bool)
(declare-fun x8241 () Bool)
(declare-fun x48 () Bool)
(declare-fun x123 () Int)
(declare-fun x526 () Int)
(declare-fun x4439 () Bool)
(declare-fun x2998 () Int)
(declare-fun x7710 () Bool)
(declare-fun x7983 () Int)
(declare-fun x5854 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x2517 () Bool)
(declare-fun x8438 () Int)
(declare-fun x6794 () Int)
(declare-fun x5043 () Bool)
(declare-fun x6303 () Int)
(declare-fun x4882 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1345 () Int)
(declare-fun x4077 () Bool)
(declare-fun x1877 () Bool)
(declare-fun x1469 () Int)
(declare-fun x7852 () Bool)
(declare-fun x6420 () Int)
(declare-fun x1193 () Bool)
(declare-fun x1953 () Int)
(declare-fun x8389 () Bool)
(declare-fun x7623 () Int)
(declare-fun x3501 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x4189 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x5995 () Int)
(declare-fun x2932 () Int)
(declare-fun x5339 () Int)
(declare-fun x8572 () Int)
(declare-fun x6789 () Int)
(declare-fun x6047 () Int)
(declare-fun x3939 () Bool)
(declare-fun x73 () Int)
(declare-fun x2274 () Int)
(declare-fun x2874 () Int)
(declare-fun x5057 () Int)
(declare-fun x485 () Int)
(declare-fun x7637 () Bool)
(declare-fun x1898 () Int)
(declare-fun x4562 () Int)
(declare-fun x1766 () Int)
(declare-fun x2814 () Int)
(declare-fun x6147 () Bool)
(declare-fun x7487 () Bool)
(declare-fun x6028 () Int)
(declare-fun x5553 () Int)
(declare-fun x4844 () Int)
(declare-fun x181 (Int) Int)
(declare-fun x6574 () Int)
(declare-fun x7900 () Int)
(declare-fun x4792 () Int)
(declare-fun x1871 () Int)
(declare-fun x5728 () Int)
(declare-fun x945 () Int)
(declare-fun x4110 () Bool)
(declare-fun x8134 () Int)
(declare-fun x3438 () Int)
(declare-fun x2014 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x6024 () Int)
(declare-fun x5 () Int)
(declare-fun x2530 () Bool)
(declare-fun x2128 () Int)
(declare-fun x5458 () Int)
(declare-fun x5819 () Bool)
(declare-fun x8222 () Bool)
(declare-fun x7540 () Int)
(declare-fun x1950 () Bool)
(declare-fun x6801 () Bool)
(declare-fun x5623 () Bool)
(declare-fun x6417 () Int)
(declare-fun x6350 () Int)
(declare-fun x7137 () Int)
(declare-fun x1042 () Int)
(declare-fun x3711 () Int)
(declare-fun x2788 () Bool)
(declare-fun x6824 () Int)
(declare-fun x6429 () Bool)
(declare-fun x643 () Int)
(declare-fun x2733 () Int)
(declare-fun x5953 () Int)
(declare-fun x4364 () Int)
(declare-fun x187 () Int)
(declare-fun x8452 (Int Int Int) Int)
(declare-fun x6335 () Int)
(declare-fun x8606 () Int)
(declare-fun x331 () Int)
(declare-fun x3051 () Int)
(declare-fun x1874 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x4918 () Int)
(declare-fun x7432 () Int)
(declare-fun x4830 () Bool)
(declare-fun x6347 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x3936 () Int)
(declare-fun x4255 () Int)
(declare-fun x7047 () Bool)
(declare-fun x4938 () Int)
(declare-fun x5601 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x2527 () Int)
(declare-fun x3455 () Bool)
(declare-fun x107 () Bool)
(declare-fun x7537 () Bool)
(declare-fun x4603 () Int)
(declare-fun x4079 () Bool)
(declare-fun x7193 () Bool)
(declare-fun x5792 () Bool)
(declare-fun x3124 () Int)
(declare-fun x1147 () Int)
(declare-fun x7563 () Int)
(declare-fun x7576 () Int)
(declare-fun x5962 () Bool)
(declare-fun x8443 () Int)
(declare-fun x1746 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x2941 () Int)
(declare-fun x5215 () Int)
(declare-fun x5225 () Bool)
(declare-fun x2232 () Int)
(declare-fun x794 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1838 () Int)
(declare-fun x906 () Int)
(declare-fun x4567 () Int)
(declare-fun x2169 () Int)
(declare-fun x4530 () Bool)
(declare-fun x890 () Int)
(declare-fun x6512 () Int)
(declare-fun x3886 () Int)
(declare-fun x2550 () Int)
(declare-fun x3386 () Int)
(declare-fun x6312 () Bool)
(declare-fun x467 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x5241 () Int)
(declare-fun x7758 () Int)
(declare-fun x3563 () Int)
(declare-fun x897 () Int)
(declare-fun x5647 () Bool)
(declare-fun x889 () Int)
(declare-fun x6462 () Bool)
(declare-fun x5767 () Int)
(declare-fun x7669 () Bool)
(declare-fun x4975 () Bool)
(declare-fun x8544 () Bool)
(declare-fun x5340 () Int)
(declare-fun x3858 () Bool)
(declare-fun x2135 () Int)
(declare-fun x439 () Int)
(declare-fun x7167 () Int)
(declare-fun x7871 () Int)
(declare-fun x6278 () Bool)
(declare-fun x3657 () Int)
(declare-fun x53 () Int)
(declare-fun x7820 () Int)
(declare-fun x1538 () Int)
(declare-fun x317 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x899 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x2922 () Bool)
(declare-fun x4026 () Bool)
(declare-fun x6976 () Bool)
(declare-fun x283 () Bool)
(declare-fun x4454 () Bool)
(declare-fun x3531 () Int)
(declare-fun x2647 () Bool)
(declare-fun x3231 () Int)
(declare-fun x395 () Bool)
(declare-fun x5448 () Int)
(declare-fun x2008 () Int)
(declare-fun x7649 () Int)
(declare-fun x5295 () Bool)
(declare-fun x7027 () Bool)
(declare-fun x3397 () Bool)
(declare-fun x904 () Bool)
(declare-fun x282 () Int)
(declare-fun x52 () Bool)
(declare-fun x5606 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x6934 () Bool)
(declare-fun x7746 () Int)
(declare-fun x1375 () Int)
(declare-fun x1545 () Int)
(declare-fun x4980 () Int)
(declare-fun x7197 () Bool)
(declare-fun x839 () Int)
(declare-fun x4170 () Int)
(declare-fun x7484 () Int)
(declare-fun x4186 () Int)
(declare-fun x4184 () Bool)
(declare-fun x5578 () Bool)
(declare-fun x4417 () Int)
(declare-fun x5217 () Bool)
(declare-fun x3121 () Int)
(declare-fun x4424 () Int)
(declare-fun x4878 () Int)
(declare-fun x5323 (Int) Int)
(declare-fun x8605 () Int)
(declare-fun x7141 () Int)
(declare-fun x3252 () Int)
(declare-fun x824 () Bool)
(declare-fun x6413 () Int)
(declare-fun x3671 () Int)
(declare-fun x8456 () Bool)
(declare-fun x8123 () Int)
(declare-fun x6830 () Bool)
(declare-fun x2785 () Int)
(declare-fun x440 () Bool)
(declare-fun x8285 () Int)
(declare-fun x1816 () Int)
(declare-fun x5390 () Int)
(declare-fun x5820 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x7176 () Int)
(declare-fun x6012 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x1309 () Int)
(declare-fun x5688 () Int)
(declare-fun x4413 () Bool)
(declare-fun x7603 () Bool)
(declare-fun x6938 () Bool)
(declare-fun x8135 () Int)
(declare-fun x3845 () Bool)
(declare-fun x2598 () Int)
(declare-fun x6424 () Int)
(declare-fun x852 () Int)
(declare-fun x767 () Bool)
(declare-fun x4743 () Int)
(declare-fun x943 () Int)
(declare-fun x8165 () Bool)
(declare-fun x6894 () Bool)
(declare-fun x5768 () Bool)
(declare-fun x635 () Bool)
(declare-fun x2773 () Int)
(declare-fun x8271 () Int)
(declare-fun x5786 () Bool)
(declare-fun x6357 () Int)
(declare-fun x5753 () Int)
(declare-fun x4335 () Int)
(declare-fun x1760 () Bool)
(declare-fun x715 (Int) Int)
(declare-fun x1656 () Int)
(declare-fun x2758 () Bool)
(declare-fun x7930 () Int)
(declare-fun x5580 () Int)
(declare-fun x5836 () Bool)
(declare-fun x4602 () Int)
(declare-fun x4345 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x2497 () Int)
(declare-fun x2130 () Int)
(declare-fun x721 () Int)
(declare-fun x6334 () Bool)
(declare-fun x6963 () Int)
(declare-fun x3487 () Int)
(declare-fun x5915 () Bool)
(declare-fun x4234 () Bool)
(declare-fun x8092 () Bool)
(declare-fun x4472 () Bool)
(declare-fun x698 () Bool)
(declare-fun x7067 () Int)
(declare-fun x1531 () Bool)
(declare-fun x5948 () Bool)
(declare-fun x3698 () Int)
(declare-fun x610 () Int)
(declare-fun x5342 () Int)
(declare-fun x2933 () Bool)
(declare-fun x380 () Int)
(declare-fun x7840 () Int)
(declare-fun x5013 () Int)
(declare-fun x1408 () Int)
(declare-fun x810 () Bool)
(declare-fun x8527 () Int)
(declare-fun x7088 () Bool)
(declare-fun x7675 () Bool)
(declare-fun x1465 () Int)
(declare-fun x7835 () Int)
(declare-fun x5905 () Int)
(declare-fun x6397 () Int)
(declare-fun x4771 () Bool)
(declare-fun x638 () Bool)
(declare-fun x1467 () Int)
(declare-fun x8184 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x7052 () Bool)
(declare-fun x4888 () Int)
(declare-fun x3665 () Int)
(declare-fun x7790 () Int)
(declare-fun x1065 () Int)
(declare-fun x1554 () Bool)
(declare-fun x6099 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x4466 () Int)
(declare-fun x453 () Bool)
(declare-fun x7270 () Bool)
(declare-fun x2989 () Bool)
(declare-fun x235 () Bool)
(declare-fun x2366 () Int)
(declare-fun x5396 () Int)
(declare-fun x7053 () Int)
(declare-fun x4767 () Int)
(declare-fun x3633 () Int)
(declare-fun x668 () Int)
(declare-fun x4393 () Bool)
(declare-fun x1432 () Int)
(declare-fun x7634 () Bool)
(declare-fun x6915 () Bool)
(declare-fun x6075 () Bool)
(declare-fun x5408 () Bool)
(declare-fun x598 () Int)
(declare-fun x106 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x173 () Bool)
(declare-fun x7585 () Int)
(declare-fun x3292 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x3413 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x5088 () Bool)
(declare-fun x5417 () Int)
(declare-fun x6707 () Bool)
(declare-fun x4640 () Int)
(declare-fun x3616 () Bool)
(declare-fun x4936 () Int)
(declare-fun x7037 () Bool)
(declare-fun x5780 () Int)
(declare-fun x3529 () Int)
(declare-fun x7872 () Int)
(declare-fun x2571 () Int)
(declare-fun x2036 () Int)
(declare-fun x3127 () Int)
(declare-fun x2394 () Bool)
(declare-fun x4919 () Int)
(declare-fun x4889 () Bool)
(declare-fun x7183 () Int)
(declare-fun x6104 () Bool)
(declare-fun x3172 () Bool)
(declare-fun x7396 () Bool)
(declare-fun x6055 () Int)
(declare-fun x2117 () Bool)
(declare-fun x8002 () Int)
(declare-fun x518 () Int)
(declare-fun x8118 () Int)
(declare-fun x1300 () Int)
(declare-fun x3772 () Bool)
(declare-fun x7333 () Int)
(declare-fun x7883 () Bool)
(declare-fun x940 () Int)
(declare-fun x3207 () Int)
(declare-fun x1165 () Bool)
(declare-fun x3076 () Int)
(declare-fun x1077 () Int)
(declare-fun x6521 () Int)
(declare-fun x505 () Int)
(declare-fun x4497 () Bool)
(declare-fun x3793 () Int)
(declare-fun x7653 () Int)
(declare-fun x2676 () Int)
(declare-fun x603 () Int)
(declare-fun x1710 () Int)
(declare-fun x6657 () Int)
(declare-fun x1268 () Bool)
(declare-fun x5756 () Bool)
(declare-fun x5947 () Int)
(declare-fun x8372 () Int)
(declare-fun x6612 () Bool)
(declare-fun x6523 () Bool)
(declare-fun x1364 () Int)
(declare-fun x4818 () Int)
(declare-fun x2105 () Int)
(declare-fun x548 () Int)
(declare-fun x6910 () Bool)
(declare-fun x1340 () Int)
(declare-fun x741 () Bool)
(declare-fun x854 () Int)
(declare-fun x8254 () Int)
(declare-fun x1366 () Int)
(declare-fun x996 () Int)
(declare-fun x8534 (Int) Int)
(declare-fun x8394 () Int)
(declare-fun x2202 () Int)
(declare-fun x3396 () Int)
(declare-fun x3502 () Int)
(declare-fun x7921 () Int)
(declare-fun x8093 () Bool)
(declare-fun x2738 () Bool)
(declare-fun x7645 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x914 () Bool)
(declare-fun x2526 () Int)
(declare-fun x1826 () Int)
(declare-fun x143 () Bool)
(declare-fun x7829 () Bool)
(declare-fun x6597 () Bool)
(declare-fun x148 () Bool)
(declare-fun x2642 () Int)
(declare-fun x6081 () Bool)
(declare-fun x2502 () Int)
(declare-fun x6143 () Bool)
(declare-fun x7596 () Bool)
(declare-fun x2442 () Int)
(declare-fun x4396 () Int)
(declare-fun x8339 () Int)
(declare-fun x120 () Int)
(declare-fun x215 () Int)
(declare-fun x4675 () Int)
(declare-fun x4826 () Int)
(declare-fun x3493 () Bool)
(declare-fun x2887 () Bool)
(declare-fun x4703 () Int)
(declare-fun x4605 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x3668 () Int)
(declare-fun x3137 () Bool)
(declare-fun x1493 () Int)
(declare-fun x8274 () Int)
(declare-fun x853 () Bool)
(declare-fun x4924 () Int)
(declare-fun x5861 () Bool)
(declare-fun x4694 () Int)
(declare-fun x1490 () Int)
(declare-fun x6023 () Int)
(declare-fun x6341 () Int)
(declare-fun x1576 () Int)
(declare-fun x7614 () Int)
(declare-fun x5404 () Bool)
(declare-fun x2081 () Int)
(declare-fun x4839 () Int)
(declare-fun x1283 () Int)
(declare-fun x4790 () Int)
(declare-fun x352 () Int)
(declare-fun x4481 () Int)
(declare-fun x2080 () Int)
(declare-fun x3899 () Bool)
(declare-fun x2022 () Int)
(declare-fun x2391 () Int)
(declare-fun x7354 () Int)
(declare-fun x6878 () Bool)
(declare-fun x748 () Int)
(declare-fun x4013 () Int)
(declare-fun x4398 () Bool)
(declare-fun x3133 () Int)
(declare-fun x6027 () Bool)
(declare-fun x576 () Int)
(declare-fun x7175 () Int)
(declare-fun x128 () Int)
(declare-fun x662 () Bool)
(declare-fun x1662 () Int)
(declare-fun x2917 () Int)
(declare-fun x5485 () Int)
(declare-fun x4692 () Bool)
(declare-fun x5551 () Int)
(declare-fun x5328 () Bool)
(declare-fun x8061 () Int)
(declare-fun x1087 () Int)
(declare-fun x6555 () Int)
(declare-fun x2477 () Int)
(declare-fun x851 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x223 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x35 () Bool)
(declare-fun x1157 () Int)
(declare-fun x2085 () Bool)
(declare-fun x7916 () Bool)
(declare-fun x6445 () Bool)
(declare-fun x6565 () Int)
(declare-fun x2181 () Int)
(declare-fun x4344 () Bool)
(declare-fun x412 () Bool)
(declare-fun x5426 () Int)
(declare-fun x7166 () Int)
(declare-fun x6 () Int)
(declare-fun x1523 () Int)
(declare-fun x2352 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x6196 (Int Int) Int)
(declare-fun x7323 () Int)
(declare-fun x4259 () Bool)
(declare-fun x6929 () Int)
(declare-fun x5109 () Bool)
(declare-fun x984 () Bool)
(declare-fun x6773 () Bool)
(declare-fun x351 () Int)
(declare-fun x8426 () Int)
(declare-fun x2257 () Bool)
(declare-fun x232 () Int)
(declare-fun x5045 () Bool)
(declare-fun x4104 () Int)
(declare-fun x4981 () Bool)
(declare-fun x7609 () Bool)
(declare-fun x8112 () Bool)
(declare-fun x40 () Int)
(declare-fun x8418 () Bool)
(declare-fun x5272 () Int)
(declare-fun x7177 () Bool)
(declare-fun x3425 () Bool)
(declare-fun x5014 () Int)
(declare-fun x7402 () Int)
(declare-fun x8283 () Bool)
(declare-fun x3060 () Int)
(declare-fun x630 () Bool)
(declare-fun x8200 () Int)
(declare-fun x6996 () Int)
(declare-fun x1590 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x6033 () Bool)
(declare-fun x5174 () Int)
(declare-fun x895 () Bool)
(declare-fun x5383 () Int)
(declare-fun x651 () Int)
(declare-fun x7429 () Bool)
(declare-fun x6826 () Int)
(declare-fun x4933 () Int)
(declare-fun x7676 (Int) Int)
(declare-fun x2879 () Int)
(declare-fun x6609 () Int)
(declare-fun x5201 () Bool)
(declare-fun x8049 () Int)
(declare-fun x2908 () Int)
(declare-fun x1068 () Bool)
(declare-fun x7827 () Bool)
(declare-fun x5288 () Int)
(declare-fun x6243 () Int)
(declare-fun x4569 () Bool)
(declare-fun x2827 () Bool)
(declare-fun x5015 () Bool)
(declare-fun x842 (Int) Int)
(declare-fun x278 () Int)
(declare-fun x2653 () Int)
(declare-fun x7356 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x6008 () Bool)
(declare-fun x1567 () Int)
(declare-fun x4777 (Int) Int)
(declare-fun x7470 () Int)
(declare-fun x4956 () Int)
(declare-fun x953 () Bool)
(declare-fun x6679 () Bool)
(declare-fun x5520 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x5425 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x5742 () Int)
(declare-fun x1823 (Int) Int)
(declare-fun x8301 () Int)
(declare-fun x4507 () Int)
(declare-fun x7494 () Bool)
(declare-fun x268 () Bool)
(declare-fun x6087 () Int)
(declare-fun x6230 () Bool)
(declare-fun x7651 () Int)
(declare-fun x2558 () Int)
(declare-fun x8179 () Bool)
(declare-fun x4408 () Bool)
(declare-fun x5087 () Bool)
(declare-fun x990 () Int)
(declare-fun x3628 () Int)
(declare-fun x7876 () Bool)
(declare-fun x456 () Bool)
(declare-fun x8302 () Bool)
(declare-fun x4114 () Int)
(declare-fun x4852 () Bool)
(declare-fun x6205 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x8175 () Bool)
(declare-fun x6025 () Int)
(declare-fun x1933 () Int)
(declare-fun x944 () Int)
(declare-fun x4654 () Int)
(declare-fun x6569 () Int)
(declare-fun x4698 () Int)
(declare-fun x1279 () Int)
(declare-fun x861 () Int)
(declare-fun x8156 () Int)
(declare-fun x4387 () Int)
(declare-fun x6065 () Int)
(declare-fun x2995 () Int)
(declare-fun x2658 () Int)
(declare-fun x7888 () Bool)
(declare-fun x2170 () Int)
(declare-fun x6850 (Int) Int)
(declare-fun x71 () Bool)
(declare-fun x8172 () Int)
(declare-fun x6705 () Int)
(declare-fun x5246 () Int)
(declare-fun x493 () Bool)
(declare-fun x8056 () Bool)
(declare-fun x3716 () Bool)
(declare-fun x4589 () Bool)
(declare-fun x3701 () Bool)
(declare-fun x3743 () Int)
(declare-fun x3769 () Int)
(declare-fun x1714 () Int)
(declare-fun x5119 () Int)
(declare-fun x2683 () Bool)
(declare-fun x3437 () Int)
(declare-fun x2678 () Int)
(declare-fun x1053 () Bool)
(declare-fun x7527 () Bool)
(declare-fun x5033 () Bool)
(declare-fun x5496 () Int)
(declare-fun x3492 () Int)
(declare-fun x692 () Int)
(declare-fun x220 () Int)
(declare-fun x1431 () Int)
(declare-fun x5176 () Int)
(declare-fun x3465 () Int)
(declare-fun x657 () Int)
(declare-fun x2532 () Int)
(declare-fun x2458 () Int)
(declare-fun x4188 () Int)
(declare-fun x7395 () Bool)
(declare-fun x6890 () Bool)
(declare-fun x7630 () Int)
(declare-fun x5718 () Int)
(declare-fun x4726 () Int)
(declare-fun x6473 () Int)
(declare-fun x8065 () Bool)
(declare-fun x3652 () Bool)
(declare-fun x4053 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x4666 () Int)
(declare-fun x199 () Int)
(declare-fun x522 () Bool)
(declare-fun x2736 () Int)
(declare-fun x355 () Int)
(declare-fun x1476 () Bool)
(declare-fun x5640 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x86 () Int)
(declare-fun x192 () Int)
(declare-fun x5743 () Int)
(declare-fun x1312 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x3250 () Bool)
(declare-fun x7507 () Int)
(declare-fun x7760 () Int)
(declare-fun x6615 () Bool)
(declare-fun x2416 () Int)
(declare-fun x7035 () Int)
(declare-fun x8538 () Bool)
(declare-fun x256 () Bool)
(declare-fun x787 () Bool)
(declare-fun x5805 () Bool)
(declare-fun x5030 () Bool)
(declare-fun x1075 () Int)
(declare-fun x8299 () Bool)
(declare-fun x7672 () Bool)
(declare-fun x1503 () Int)
(declare-fun x4001 () Int)
(declare-fun x5712 () Int)
(declare-fun x6722 () Int)
(declare-fun x5403 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x7882 () Bool)
(declare-fun x5473 () Bool)
(declare-fun x2197 () Int)
(declare-fun x3473 () Bool)
(declare-fun x4336 () Int)
(declare-fun x3680 () Bool)
(declare-fun x825 () Int)
(declare-fun x427 () Int)
(declare-fun x3095 () Bool)
(declare-fun x1698 () Int)
(declare-fun x4287 () Int)
(declare-fun x4072 () Int)
(declare-fun x7462 () Int)
(declare-fun x7590 () Int)
(declare-fun x7361 () Bool)
(declare-fun x6101 () Int)
(declare-fun x5839 () Int)
(declare-fun x333 () Bool)
(declare-fun x6262 () Bool)
(declare-fun x430 () Bool)
(declare-fun x8607 () Int)
(declare-fun x6172 () Int)
(declare-fun x7397 () Bool)
(declare-fun x3431 () Int)
(declare-fun x1005 (Int) Int)
(declare-fun x3358 () Bool)
(declare-fun x1899 () Int)
(declare-fun x8198 () Int)
(declare-fun x1009 () Int)
(declare-fun x6200 () Int)
(declare-fun x3682 () Int)
(declare-fun x5103 () Bool)
(declare-fun x4461 () Int)
(declare-fun x5077 () Int)
(declare-fun x5893 () Int)
(declare-fun x3957 () Bool)
(declare-fun x8602 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x547 () Int)
(declare-fun x8106 () Bool)
(declare-fun x2618 () Int)
(declare-fun x3371 () Int)
(declare-fun x3807 () Bool)
(declare-fun x397 () Int)
(declare-fun x118 () Bool)
(declare-fun x8289 () Int)
(declare-fun x270 () Int)
(declare-fun x1833 () Bool)
(declare-fun x7085 () Bool)
(declare-fun x6160 () Int)
(declare-fun x7597 () Int)
(declare-fun x4568 () Bool)
(declare-fun x5453 () Int)
(declare-fun x6227 () Int)
(declare-fun x3216 () Bool)
(declare-fun x6970 () Int)
(declare-fun x8229 () Bool)
(declare-fun x2245 () Bool)
(declare-fun x8206 () Int)
(declare-fun x360 () Bool)
(declare-fun x2147 () Int)
(declare-fun x7147 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x372 () Int)
(declare-fun x5312 () Bool)
(declare-fun x7680 () Bool)
(declare-fun x392 () Int)
(declare-fun x6972 () Bool)
(declare-fun x7416 () Int)
(declare-fun x1859 () Int)
(declare-fun x5533 (Int) Int)
(declare-fun x8043 () Bool)
(declare-fun x6421 () Int)
(declare-fun x6367 () Int)
(declare-fun x4075 () Int)
(declare-fun x8091 () Bool)
(declare-fun x7077 () Bool)
(declare-fun x5022 () Int)
(declare-fun x8445 () Bool)
(declare-fun x8048 () Int)
(declare-fun x1960 () Int)
(declare-fun x7678 () Bool)
(declare-fun x4091 () Bool)
(declare-fun x693 () Int)
(declare-fun x7657 () Bool)
(declare-fun x332 () Bool)
(declare-fun x3345 () Int)
(declare-fun x5794 () Int)
(declare-fun x2244 () Int)
(declare-fun x6696 () Bool)
(declare-fun x2229 () Int)
(declare-fun x8398 () Int)
(declare-fun x4949 () Int)
(declare-fun x1391 () Bool)
(declare-fun x5801 () Int)
(declare-fun x7477 () Int)
(declare-fun x3918 () Bool)
(declare-fun x6867 () Int)
(declare-fun x1728 () Int)
(declare-fun x6427 () Int)
(declare-fun x4446 () Bool)
(declare-fun x8276 () Int)
(declare-fun x5126 () Bool)
(declare-fun x6961 () Int)
(declare-fun x2001 () Bool)
(declare-fun x7173 () Int)
(declare-fun x4647 () Bool)
(declare-fun x2997 () Int)
(declare-fun x674 () Bool)
(declare-fun x4528 () Bool)
(declare-fun x6252 () Int)
(declare-fun x7120 () Bool)
(declare-fun x3106 () Int)
(declare-fun x771 () Bool)
(declare-fun x7984 () Bool)
(declare-fun x6743 () Bool)
(declare-fun x4069 () Bool)
(declare-fun x740 () Int)
(declare-fun x8598 () Bool)
(declare-fun x2904 () Int)
(declare-fun x3618 () Bool)
(declare-fun x1254 () Int)
(declare-fun x6463 () Int)
(declare-fun x8364 () Bool)
(declare-fun x4801 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x7098 () Int)
(declare-fun x4628 () Bool)
(declare-fun x4728 () Int)
(declare-fun x2549 () Bool)
(declare-fun x3383 () Int)
(declare-fun x287 () Int)
(declare-fun x1002 () Int)
(declare-fun x6069 () Int)
(declare-fun x2013 () Int)
(declare-fun x7855 () Int)
(declare-fun x3255 () Int)
(declare-fun x7400 () Int)
(declare-fun x1717 () Int)
(declare-fun x1695 () Int)
(declare-fun x2079 () Int)
(declare-fun x5298 () Bool)
(declare-fun x7938 () Int)
(declare-fun x7273 () Int)
(declare-fun x1435 () Bool)
(declare-fun x111 () Bool)
(declare-fun x1719 () Int)
(declare-fun x8436 () Int)
(declare-fun x1003 () Int)
(declare-fun x2626 () Int)
(declare-fun x5352 () Int)
(declare-fun x4139 () Int)
(declare-fun x6381 () Bool)
(declare-fun x6646 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x1582 () Int)
(declare-fun x1511 () Int)
(declare-fun x4187 () Bool)
(declare-fun x4553 () Int)
(declare-fun x1924 () Bool)
(declare-fun x5159 () Bool)
(declare-fun x3282 () Bool)
(declare-fun x7471 () Int)
(declare-fun x5963 () Int)
(declare-fun x5670 () Int)
(declare-fun x2843 () Bool)
(declare-fun x6177 () Bool)
(declare-fun x1676 () Int)
(declare-fun x2295 () Int)
(declare-fun x7997 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x370 () Bool)
(declare-fun x6608 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x7050 () Int)
(declare-fun x3290 () Bool)
(declare-fun x8303 () Bool)
(declare-fun x6439 () Bool)
(declare-fun x556 () Bool)
(declare-fun x646 () Bool)
(declare-fun x4705 () Bool)
(declare-fun x1253 () Int)
(declare-fun x1235 () Int)
(declare-fun x3933 () Int)
(declare-fun x7439 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x1311 () Int)
(declare-fun x1850 () Bool)
(declare-fun x6363 () Int)
(declare-fun x4376 () Bool)
(declare-fun x415 () Int)
(declare-fun x3731 () Bool)
(declare-fun x4489 () Int)
(declare-fun x3432 () Int)
(declare-fun x110 () Int)
(declare-fun x4019 () Int)
(declare-fun x5863 () Int)
(declare-fun x1810 () Int)
(declare-fun x4920 () Int)
(declare-fun x7230 () Int)
(declare-fun x7802 () Int)
(declare-fun x4660 () Int)
(declare-fun x6090 () Bool)
(declare-fun x6784 () Int)
(declare-fun x7420 () Int)
(declare-fun x3022 () Int)
(declare-fun x3713 () Bool)
(declare-fun x6675 () Int)
(declare-fun x2122 () Int)
(declare-fun x4999 () Int)
(declare-fun x5265 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x7024 () Bool)
(declare-fun x2149 () Int)
(declare-fun x8338 () Bool)
(declare-fun x8258 () Bool)
(declare-fun x5047 () Bool)
(declare-fun x28 () Bool)
(declare-fun x1059 () Int)
(declare-fun x5755 () Int)
(declare-fun x3740 () Int)
(declare-fun x2718 (Int) Int)
(declare-fun x4672 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x4864 () Int)
(declare-fun x7632 () Int)
(declare-fun x3379 () Int)
(declare-fun x2284 () Int)
(declare-fun x5146 () Bool)
(declare-fun x2343 () Int)
(declare-fun x6489 () Int)
(declare-fun x2275 () Int)
(declare-fun x475 () Int)
(declare-fun x7140 () Int)
(declare-fun x7161 () Int)
(declare-fun x279 () Int)
(declare-fun x129 () Int)
(declare-fun x3459 () Bool)
(declare-fun x3131 () Int)
(declare-fun x791 () Bool)
(declare-fun x2623 () Int)
(declare-fun x3063 () Bool)
(declare-fun x5393 () Bool)
(declare-fun x4402 () Int)
(declare-fun x5573 () Int)
(declare-fun x4532 () Int)
(declare-fun x3542 () Bool)
(declare-fun x239 () Bool)
(declare-fun x5437 () Bool)
(declare-fun x8314 () Bool)
(declare-fun x2596 () Int)
(declare-fun x7860 () Bool)
(declare-fun x7442 () Int)
(declare-fun x6134 () Bool)
(declare-fun x4464 () Bool)
(declare-fun x3893 () Bool)
(declare-fun x1918 () Int)
(declare-fun x4148 () Bool)
(declare-fun x3999 () Int)
(declare-fun x1333 () Bool)
(declare-fun x7012 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x6798 () Int)
(declare-fun x5414 () Bool)
(declare-fun x6221 () Bool)
(declare-fun x619 () Int)
(declare-fun x7862 () Bool)
(declare-fun x16 () Int)
(declare-fun x7039 () Int)
(declare-fun x4404 () Int)
(declare-fun x4419 () Bool)
(declare-fun x2706 () Bool)
(declare-fun x2378 () Int)
(declare-fun x5677 () Bool)
(declare-fun x6958 () Bool)
(declare-fun x3522 () Int)
(declare-fun x5556 () Bool)
(declare-fun x8209 () Bool)
(declare-fun x4210 () Bool)
(declare-fun x5144 () Bool)
(declare-fun x7732 () Int)
(declare-fun x4475 () Int)
(declare-fun x6061 () Bool)
(declare-fun x1779 () Int)
(declare-fun x6879 () Int)
(declare-fun x6781 () Int)
(declare-fun x7759 () Int)
(declare-fun x6578 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x5782 () Bool)
(declare-fun x3052 () Bool)
(declare-fun x6242 () Int)
(declare-fun x1288 () Bool)
(declare-fun x1975 () Int)
(declare-fun x3913 () Bool)
(declare-fun x616 () Bool)
(declare-fun x983 () Int)
(declare-fun x981 () Bool)
(declare-fun x6102 () Int)
(declare-fun x7452 () Int)
(declare-fun x8103 () Bool)
(declare-fun x6614 () Int)
(declare-fun x6731 (Int) Int)
(declare-fun x4853 () Int)
(declare-fun x6816 () Bool)
(declare-fun x8329 () Bool)
(declare-fun x6844 () Int)
(declare-fun x3684 () Bool)
(declare-fun x3312 () Bool)
(declare-fun x2485 () Int)
(declare-fun x1510 () Bool)
(declare-fun x217 () Bool)
(declare-fun x543 () Bool)
(declare-fun x5221 () Bool)
(declare-fun x4119 () Bool)
(declare-fun x2060 () Int)
(declare-fun x2793 () Bool)
(declare-fun x6622 () Int)
(declare-fun x151 () Bool)
(declare-fun x6513 () Int)
(declare-fun x5182 () Int)
(declare-fun x6694 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x3546 () Int)
(declare-fun x323 () Bool)
(declare-fun x2685 () Int)
(declare-fun x6336 () Bool)
(declare-fun x381 () Bool)
(declare-fun x2611 () Int)
(declare-fun x5831 () Int)
(declare-fun x6903 () Bool)
(declare-fun x2388 () Bool)
(declare-fun x44 () Int)
(declare-fun x4177 () Int)
(declare-fun x5604 () Int)
(declare-fun x4883 () Int)
(declare-fun x5699 () Int)
(declare-fun x6485 () Bool)
(declare-fun x3422 () Int)
(declare-fun x531 () Int)
(declare-fun x7127 () Int)
(declare-fun x5293 () Int)
(declare-fun x5481 () Int)
(declare-fun x6699 () Int)
(declare-fun x7868 () Bool)
(declare-fun x8029 () Int)
(declare-fun x5547 () Bool)
(declare-fun x4242 () Bool)
(declare-fun x7000 () Bool)
(declare-fun x8381 () Int)
(declare-fun x400 () Bool)
(declare-fun x6989 () Bool)
(declare-fun x5148 () Int)
(declare-fun x6070 () Bool)
(declare-fun x2789 () Bool)
(declare-fun x7256 (Int) Int)
(declare-fun x2672 () Int)
(declare-fun x8585 () Int)
(declare-fun x5223 () Bool)
(declare-fun x177 () Int)
(declare-fun x1066 () Int)
(declare-fun x4198 () Int)
(declare-fun x7349 () Int)
(declare-fun x3523 () Int)
(declare-fun x4516 () Int)
(declare-fun x1106 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x681 () Int)
(declare-fun x4426 (Int) Int)
(declare-fun x527 () Bool)
(declare-fun x618 () Bool)
(declare-fun x1399 () Int)
(declare-fun x2641 () Bool)
(declare-fun x5952 () Int)
(declare-fun x4082 () Int)
(declare-fun x685 () Int)
(declare-fun x2112 () Bool)
(declare-fun x6804 () Int)
(declare-fun x2412 () Bool)
(declare-fun x5372 () Int)
(declare-fun x3945 () Int)
(declare-fun x3030 () Bool)
(declare-fun x722 () Int)
(declare-fun x3360 () Int)
(declare-fun x3511 () Bool)
(declare-fun x4325 () Int)
(declare-fun x7418 () Int)
(declare-fun x1580 () Bool)
(declare-fun x1591 () Int)
(declare-fun x2309 () Bool)
(declare-fun x5894 () Int)
(declare-fun x6603 () Bool)
(declare-fun x387 () Int)
(declare-fun x5266 () Int)
(declare-fun x4986 () Int)
(declare-fun x3433 () Int)
(declare-fun x1640 () Int)
(declare-fun x8315 () Int)
(declare-fun x1361 () Int)
(declare-fun x7295 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x7342 () Int)
(declare-fun x6575 () Bool)
(declare-fun x8484 () Bool)
(declare-fun x3757 () Bool)
(declare-fun x3859 () Bool)
(declare-fun x7103 () Int)
(declare-fun x1571 () Bool)
(declare-fun x2921 () Int)
(declare-fun x3208 () Int)
(declare-fun x2630 () Int)
(declare-fun x249 () Int)
(declare-fun x1317 () Bool)
(declare-fun x1737 () Int)
(declare-fun x1803 () Bool)
(declare-fun x5574 () Bool)
(declare-fun x2855 () Int)
(declare-fun x8272 () Bool)
(declare-fun x7348 () Int)
(declare-fun x167 () Int)
(declare-fun x6164 () Bool)
(declare-fun x8412 () Int)
(declare-fun x3335 () Bool)
(declare-fun x6482 () Bool)
(declare-fun x7353 () Int)
(declare-fun x7754 () Int)
(declare-fun x5592 () Int)
(declare-fun x1989 () Bool)
(declare-fun x5490 () Bool)
(declare-fun x4750 () Bool)
(declare-fun x4301 () Bool)
(declare-fun x3890 () Bool)
(declare-fun x6757 () Bool)
(declare-fun x7979 () Bool)
(declare-fun x6217 () Bool)
(declare-fun x2002 () Int)
(declare-fun x1281 () Int)
(declare-fun x5654 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x492 () Int)
(declare-fun x4988 () Int)
(declare-fun x6599 () Bool)
(declare-fun x6440 () Bool)
(declare-fun x1416 () Int)
(declare-fun x8041 (Int) Int)
(declare-fun x8501 () Int)
(declare-fun x8225 () Bool)
(declare-fun x2166 (Int) Int)
(declare-fun x8177 () Int)
(declare-fun x1509 () Bool)
(declare-fun x6344 () Int)
(declare-fun x991 () Int)
(declare-fun x3968 () Bool)
(declare-fun x8242 () Int)
(declare-fun x5083 () Int)
(declare-fun x2283 () Int)
(declare-fun x6167 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x7057 () Int)
(declare-fun x4614 () Bool)
(declare-fun x5920 () Int)
(declare-fun x2937 () Bool)
(declare-fun x4786 () Int)
(declare-fun x6706 () Int)
(declare-fun x7163 () Bool)
(declare-fun x7767 () Int)
(declare-fun x7040 () Int)
(declare-fun x1941 () Bool)
(declare-fun x3736 () Bool)
(declare-fun x7543 () Bool)
(declare-fun x4594 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x5671 () Int)
(declare-fun x5840 () Int)
(declare-fun x1475 () Bool)
(declare-fun x6257 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x22 () Bool)
(declare-fun x3782 () Bool)
(declare-fun x1794 () Int)
(declare-fun x5744 () Bool)
(declare-fun x4564 () Int)
(declare-fun x166 () Int)
(declare-fun x3460 () Bool)
(declare-fun x8511 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x6881 () Int)
(declare-fun x7245 () Int)
(declare-fun x345 () Int)
(declare-fun x3733 () Bool)
(declare-fun x8051 () Int)
(declare-fun x599 () Bool)
(declare-fun x7803 () Bool)
(declare-fun x426 () Bool)
(declare-fun x473 () Bool)
(declare-fun x1385 () Int)
(declare-fun x7740 () Int)
(declare-fun x7239 () Bool)
(declare-fun x3526 () Bool)
(declare-fun x634 () Int)
(declare-fun x3337 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x8593 () Int)
(declare-fun x3771 () Bool)
(declare-fun x3265 () Int)
(declare-fun x730 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x7501 () Bool)
(declare-fun x1111 () Int)
(declare-fun x6052 () Int)
(declare-fun x5668 () Bool)
(declare-fun x6715 () Int)
(declare-fun x207 () Int)
(declare-fun x617 () Bool)
(declare-fun x58 () Int)
(declare-fun x7116 () Int)
(declare-fun x7005 () Bool)
(declare-fun x5330 () Int)
(declare-fun x4300 () Bool)
(declare-fun x3269 () Int)
(declare-fun x4872 () Bool)
(declare-fun x5555 () Int)
(declare-fun x4652 () Bool)
(declare-fun x1054 () Int)
(declare-fun x6786 () Bool)
(declare-fun x1139 () Int)
(declare-fun x422 () Int)
(declare-fun x5536 () Bool)
(declare-fun x3796 () Bool)
(declare-fun x8016 () Int)
(declare-fun x519 () Bool)
(declare-fun x6175 () Int)
(declare-fun x90 () Bool)
(declare-fun x7978 (Int) Int)
(declare-fun x6198 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x2153 () Int)
(declare-fun x8197 () Bool)
(declare-fun x1015 () Int)
(declare-fun x5183 () Int)
(declare-fun x191 () Int)
(declare-fun x4494 () Int)
(declare-fun x6524 () Bool)
(declare-fun x272 () Bool)
(declare-fun x4983 () Bool)
(declare-fun x2875 () Int)
(declare-fun x3996 () Int)
(declare-fun x3232 () Bool)
(declare-fun x6886 () Int)
(declare-fun x3421 () Int)
(declare-fun x6855 () Int)
(declare-fun x3894 () Int)
(declare-fun x1201 () Bool)
(declare-fun x7553 (Int) Int)
(declare-fun x6307 () Bool)
(declare-fun x4948 () Bool)
(declare-fun x2294 () Int)
(declare-fun x5827 () Int)
(declare-fun x3116 () Int)
(declare-fun x315 () Int)
(declare-fun x2825 () Bool)
(declare-fun x5629 () Int)
(declare-fun x1854 () Int)
(declare-fun x2403 () Bool)
(declare-fun x4967 () Bool)
(declare-fun x6204 () Int)
(declare-fun x7542 () Bool)
(declare-fun x7220 () Bool)
(declare-fun x5474 () Bool)
(declare-fun x329 () Bool)
(declare-fun x6863 () Bool)
(declare-fun x3768 () Int)
(declare-fun x5405 () Bool)
(declare-fun x8508 () Int)
(declare-fun x5721 () Bool)
(declare-fun x8187 () Int)
(declare-fun x1948 () Int)
(declare-fun x6123 () Int)
(declare-fun x2870 () Bool)
(declare-fun x7952 () Int)
(declare-fun x7410 () Bool)
(declare-fun x5335 () Int)
(declare-fun x5707 () Int)
(declare-fun x2302 () Int)
(declare-fun x1406 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x2395 () Int)
(declare-fun x605 () Int)
(declare-fun x5254 () Int)
(declare-fun x1211 () Bool)
(declare-fun x4840 () Int)
(declare-fun x1845 () Bool)
(declare-fun x6791 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x3068 () Bool)
(declare-fun x135 () Int)
(declare-fun x764 () Int)
(declare-fun x3779 () Bool)
(declare-fun x8089 () Int)
(declare-fun x5080 () Int)
(declare-fun x4249 () Bool)
(declare-fun x4533 () Bool)
(declare-fun x6076 () Int)
(declare-fun x4429 () Bool)
(declare-fun x5730 () Int)
(declare-fun x4113 () Int)
(declare-fun x4576 () Int)
(declare-fun x3038 () Int)
(declare-fun x3812 () Int)
(declare-fun x6456 () Bool)
(declare-fun x2234 () Int)
(declare-fun x1233 () Int)
(declare-fun x6673 () Bool)
(declare-fun x4909 () Int)
(declare-fun x7100 () Bool)
(declare-fun x2422 () Bool)
(declare-fun x7341 () Int)
(declare-fun x7384 () Int)
(declare-fun x8530 () Bool)
(declare-fun x5636 () Int)
(declare-fun x5227 () Bool)
(declare-fun x2563 () Int)
(declare-fun x2655 () Bool)
(declare-fun x4425 () Int)
(declare-fun x4264 () Int)
(declare-fun x5639 () Int)
(declare-fun x1544 () Int)
(declare-fun x7456 () Bool)
(declare-fun x1132 () Int)
(declare-fun x2311 () Bool)
(declare-fun x5222 () Bool)
(declare-fun x5294 () Int)
(declare-fun x7076 () Int)
(declare-fun x7999 () Int)
(declare-fun x6369 () Int)
(declare-fun x4794 () Bool)
(declare-fun x314 () Bool)
(declare-fun x3949 () Bool)
(declare-fun x4964 () Bool)
(declare-fun x3090 () Bool)
(declare-fun x6019 () Int)
(declare-fun x4724 () Bool)
(declare-fun x4430 () Bool)
(declare-fun x6853 () Int)
(declare-fun x6248 () Int)
(declare-fun x912 () Bool)
(declare-fun x3883 () Int)
(declare-fun x4156 () Int)
(declare-fun x7093 () Bool)
(declare-fun x4627 () Int)
(declare-fun x3722 () Int)
(declare-fun x2142 () Bool)
(declare-fun x6913 () Int)
(declare-fun x3270 () Int)
(declare-fun x4244 () Bool)
(declare-fun x2009 () Int)
(declare-fun x4656 () Bool)
(declare-fun x8558 () Bool)
(declare-fun x327 () Bool)
(declare-fun x3426 () Int)
(declare-fun x6842 () Int)
(declare-fun x801 () Bool)
(declare-fun x3412 () Bool)
(declare-fun x3706 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x4941 () Bool)
(declare-fun x7145 () Bool)
(declare-fun x614 () Bool)
(declare-fun x7106 () Int)
(declare-fun x5701 () Int)
(declare-fun x3840 () Int)
(declare-fun x8142 () Bool)
(declare-fun x6433 () Bool)
(declare-fun x5220 () Bool)
(declare-fun x1448 () Int)
(declare-fun x793 () Int)
(declare-fun x6010 () Int)
(declare-fun x7223 () Bool)
(declare-fun x3267 () Int)
(declare-fun x3549 () Int)
(declare-fun x5362 () Int)
(declare-fun x5440 () Int)
(declare-fun x3093 () Bool)
(declare-fun x103 () Bool)
(declare-fun x7275 () Int)
(declare-fun x5139 () Int)
(declare-fun x1689 () Int)
(declare-fun x7566 () Int)
(declare-fun x2347 () Bool)
(declare-fun x3086 () Bool)
(declare-fun x7267 () Bool)
(declare-fun x1028 () Int)
(declare-fun x6736 () Int)
(declare-fun x7945 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x5751 () Bool)
(declare-fun x974 () Bool)
(declare-fun x7654 () Bool)
(declare-fun x3610 () Int)
(declare-fun x1426 () Int)
(declare-fun x3136 () Int)
(declare-fun x8277 () Bool)
(declare-fun x8008 () Int)
(declare-fun x926 () Int)
(declare-fun x301 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x4294 () Bool)
(declare-fun x7864 () Bool)
(declare-fun x5986 () Int)
(declare-fun x1537 () Bool)
(declare-fun x8424 () Bool)
(declare-fun x5445 () Int)
(declare-fun x289 () Int)
(declare-fun x4926 () Int)
(declare-fun x248 () Bool)
(declare-fun x7847 () Bool)
(declare-fun x3559 () Int)
(declare-fun x4295 () Int)
(declare-fun x5950 () Bool)
(declare-fun x6767 () Bool)
(declare-fun x4060 (Int) Int)
(declare-fun x4571 () Bool)
(declare-fun x3786 () Int)
(declare-fun x7639 () Bool)
(declare-fun x6416 () Int)
(declare-fun x4292 () Int)
(declare-fun x8374 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x1778 () Int)
(declare-fun x7126 () Int)
(declare-fun x1912 (Int) Int)
(declare-fun x4418 () Int)
(declare-fun x4970 () Int)
(declare-fun x2853 () Int)
(declare-fun x7259 () Int)
(declare-fun x4314 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x5007 () Bool)
(declare-fun x3728 () Int)
(declare-fun x2522 () Bool)
(declare-fun x1784 () Int)
(declare-fun x5899 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x6585 () Int)
(declare-fun x5001 () Bool)
(declare-fun x7593 () Int)
(declare-fun x6846 () Bool)
(declare-fun x4613 () Int)
(declare-fun x695 () Bool)
(declare-fun x7466 () Int)
(declare-fun x8075 () Int)
(declare-fun x3031 () Int)
(declare-fun x7317 () Int)
(declare-fun x4837 () Bool)
(declare-fun x2604 () Int)
(declare-fun x5338 () Bool)
(declare-fun x4107 () Bool)
(declare-fun x494 () Int)
(declare-fun x1517 () Bool)
(declare-fun x2691 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x8141 () Int)
(declare-fun x1672 () Int)
(declare-fun x1175 () Bool)
(declare-fun x5192 () Bool)
(declare-fun x2781 () Int)
(declare-fun x2896 () Int)
(declare-fun x6370 () Bool)
(declare-fun x8224 () Int)
(declare-fun x3732 () Int)
(declare-fun x4515 () Bool)
(declare-fun x6236 () Bool)
(declare-fun x7989 () Bool)
(declare-fun x5469 () Bool)
(declare-fun x3467 () Bool)
(declare-fun x7748 () Bool)
(declare-fun x5199 () Int)
(declare-fun x2528 () Bool)
(declare-fun x3319 () Bool)
(declare-fun x7691 () Int)
(declare-fun x7600 () Int)
(declare-fun x5881 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x5544 () Bool)
(declare-fun x4730 () Bool)
(declare-fun x32 () Bool)
(declare-fun x8161 () Int)
(declare-fun x1055 () Bool)
(declare-fun x7880 () Bool)
(declare-fun x6428 () Int)
(declare-fun x5585 () Int)
(declare-fun x5542 () Int)
(declare-fun x2289 () Int)
(declare-fun x7334 () Int)
(declare-fun x1064 () Bool)
(declare-fun x7469 () Int)
(declare-fun x1608 () Bool)
(declare-fun x8533 () Bool)
(declare-fun x1836 () Int)
(declare-fun x5286 () Int)
(declare-fun x3988 () Bool)
(declare-fun x8306 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x4900 () Bool)
(declare-fun x198 () Bool)
(declare-fun x5927 () Bool)
(declare-fun x1943 () Int)
(declare-fun x340 () Int)
(declare-fun x3592 () Bool)
(declare-fun x5775 () Bool)
(declare-fun x658 (Int Int Int Int) Int)
(declare-fun x3869 () Int)
(declare-fun x2542 (Int) Int)
(declare-fun x4158 () Bool)
(declare-fun x4895 () Bool)
(declare-fun x7859 () Bool)
(declare-fun x7324 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x1191 () Int)
(declare-fun x6291 () Int)
(declare-fun x6309 () Bool)
(declare-fun x7392 () Int)
(declare-fun x3530 () Int)
(declare-fun x3307 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x1967 () Int)
(declare-fun x3200 () Int)
(declare-fun x6122 () Bool)
(declare-fun x6505 () Bool)
(declare-fun x3601 () Int)
(declare-fun x5714 () Int)
(declare-fun x8469 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x709 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x5644 () Bool)
(declare-fun x1588 () Int)
(declare-fun x5100 () Bool)
(declare-fun x1526 () Int)
(declare-fun x3881 () Bool)
(declare-fun x3907 () Int)
(declare-fun x1507 () Int)
(declare-fun x3600 () Int)
(declare-fun x4453 () Bool)
(declare-fun x7083 () Int)
(declare-fun x7286 () Int)
(declare-fun x592 () Int)
(declare-fun x2583 () Int)
(declare-fun x419 () Bool)
(declare-fun x8207 () Int)
(declare-fun x1266 () Bool)
(declare-fun x5093 () Bool)
(declare-fun x385 () Int)
(declare-fun x4128 () Int)
(declare-fun x1274 () Int)
(declare-fun x6729 () Int)
(declare-fun x7248 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x4441 () Int)
(declare-fun x7917 () Int)
(declare-fun x3466 () Int)
(declare-fun x6762 () Bool)
(declare-fun x7858 () Int)
(declare-fun x3964 () Int)
(declare-fun x4491 () Bool)
(declare-fun x4734 () Int)
(declare-fun x4135 () Bool)
(declare-fun x4102 () Bool)
(declare-fun x7320 () Bool)
(declare-fun x463 () Int)
(declare-fun x7907 () Int)
(declare-fun x3253 () Bool)
(declare-fun x1981 () Int)
(declare-fun x3927 () Bool)
(declare-fun x4588 () Bool)
(declare-fun x1360 () Int)
(declare-fun x3377 () Bool)
(declare-fun x1269 () Int)
(declare-fun x7881 () Int)
(declare-fun x6852 () Int)
(declare-fun x7496 () Int)
(declare-fun x4687 () Int)
(declare-fun x5282 () Int)
(declare-fun x3065 () Bool)
(declare-fun x5803 () Int)
(declare-fun x2016 () Int)
(declare-fun x6476 () Int)
(declare-fun x3008 () Int)
(declare-fun x356 () Bool)
(declare-fun x476 () Bool)
(declare-fun x4519 (Int) Int)
(declare-fun x134 () Int)
(declare-fun x7144 () Bool)
(declare-fun x6318 () Int)
(declare-fun x1921 () Bool)
(declare-fun x4710 () Bool)
(declare-fun x8489 () Int)
(declare-fun x5251 () Int)
(declare-fun x6651 () Bool)
(declare-fun x6299 () Bool)
(declare-fun x2884 () Bool)
(declare-fun x2467 () Int)
(declare-fun x8331 () Int)
(declare-fun x5934 () Int)
(declare-fun x501 () Int)
(declare-fun x4711 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x7203 () Bool)
(declare-fun x6490 () Bool)
(declare-fun x782 () Int)
(declare-fun x6644 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x8307 () Bool)
(declare-fun x5660 () Bool)
(declare-fun x6466 () Int)
(declare-fun x6914 () Bool)
(declare-fun x7025 () Bool)
(declare-fun x8468 () Bool)
(declare-fun x194 () Int)
(declare-fun x193 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x3380 () Int)
(declare-fun x3320 () Int)
(declare-fun x3798 (Int) Int)
(declare-fun x8120 () Int)
(declare-fun x1561 () Int)
(declare-fun x5990 () Bool)
(declare-fun x8352 () Int)
(declare-fun x5332 () Bool)
(declare-fun x1781 () Int)
(declare-fun x2865 () Int)
(declare-fun x8211 () Int)
(declare-fun x6300 () Bool)
(declare-fun x2420 () Int)
(declare-fun x784 () Int)
(declare-fun x3223 () Int)
(declare-fun x4618 () Int)
(declare-fun x5828 () Int)
(declare-fun x5424 () Int)
(declare-fun x7236 () Bool)
(declare-fun x2113 () Int)
(declare-fun x5073 () Bool)
(declare-fun x2396 () Int)
(declare-fun x1131 () Int)
(declare-fun x6966 () Int)
(declare-fun x403 () Bool)
(declare-fun x5106 () Bool)
(declare-fun x6685 () Bool)
(declare-fun x2226 () Int)
(declare-fun x4717 () Int)
(declare-fun x7111 () Bool)
(declare-fun x3408 () Bool)
(declare-fun x8493 () Bool)
(declare-fun x7843 () Int)
(declare-fun x2848 () Int)
(declare-fun x5059 () Bool)
(declare-fun x6983 () Int)
(declare-fun x2954 () Int)
(declare-fun x6918 () Int)
(declare-fun x1352 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x6632 () Int)
(declare-fun x1461 () Int)
(declare-fun x2712 () Int)
(declare-fun x3581 () Bool)
(declare-fun x664 () Int)
(declare-fun x2894 () Bool)
(declare-fun x3009 () Int)
(declare-fun x8090 () Int)
(declare-fun x3961 () Int)
(declare-fun x1220 () Bool)
(declare-fun x342 () Int)
(declare-fun x2471 () Int)
(declare-fun x6470 () Int)
(declare-fun x6478 () Int)
(declare-fun x4607 () Bool)
(declare-fun x5773 () Bool)
(declare-fun x6107 () Int)
(declare-fun x3346 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x2699 () Bool)
(declare-fun x811 () Bool)
(declare-fun x2010 () Int)
(declare-fun x2196 () Int)
(declare-fun x3788 () Bool)
(declare-fun x727 () Bool)
(declare-fun x532 () Int)
(declare-fun x2125 () Int)
(declare-fun x8346 () Bool)
(declare-fun x2271 () Bool)
(declare-fun x6838 () Bool)
(declare-fun x3794 () Int)
(declare-fun x2868 () Bool)
(declare-fun x8378 () Int)
(declare-fun x4254 () Bool)
(declare-fun x2898 () Int)
(declare-fun x3632 () Int)
(declare-fun x3681 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x6396 () Int)
(declare-fun x7998 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x1991 () Bool)
(declare-fun x3154 () Int)
(declare-fun x85 () Int)
(declare-fun x2073 () Int)
(declare-fun x2713 () Bool)
(declare-fun x4753 () Int)
(declare-fun x353 () Int)
(declare-fun x364 () Bool)
(declare-fun x1038 () Int)
(declare-fun x3478 () Bool)
(declare-fun x6760 () Int)
(declare-fun x7898 () Int)
(declare-fun x3864 () Int)
(declare-fun x4775 () Int)
(declare-fun x206 () Bool)
(declare-fun x2597 () Int)
(declare-fun x2152 () Int)
(declare-fun x2104 () Int)
(declare-fun x8343 () Int)
(declare-fun x2335 () Bool)
(declare-fun x3057 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x6900 () Bool)
(declare-fun x5669 () Int)
(declare-fun x3448 () Bool)
(declare-fun x5720 () Int)
(declare-fun x2120 () Int)
(declare-fun x3311 () Bool)
(declare-fun x4653 () Bool)
(declare-fun x3370 () Int)
(declare-fun x2413 () Int)
(declare-fun x4989 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x3157 () Int)
(declare-fun x1441 () Int)
(declare-fun x4080 () Bool)
(declare-fun x1558 () Int)
(declare-fun x4707 () Int)
(declare-fun x8000 () Bool)
(declare-fun x4966 () Bool)
(declare-fun x234 () Int)
(declare-fun x7048 () Bool)
(declare-fun x3469 () Int)
(declare-fun x5341 () Bool)
(declare-fun x5475 () Int)
(declare-fun x4414 () Int)
(declare-fun x5461 () Int)
(declare-fun x5275 () Bool)
(declare-fun x3162 () Int)
(declare-fun x2577 () Int)
(declare-fun x3114 (Int Int) Int)
(declare-fun x5653 () Int)
(declare-fun x6692 () Int)
(declare-fun x5590 () Int)
(declare-fun x3332 () Bool)
(declare-fun x3115 () Int)
(declare-fun x575 () Bool)
(declare-fun x5411 () Int)
(declare-fun x4787 () Int)
(declare-fun x2673 () Int)
(declare-fun x3572 () Bool)
(declare-fun x6925 () Int)
(declare-fun x6284 () Bool)
(declare-fun x3110 () Int)
(declare-fun x3097 () Int)
(declare-fun x1934 () Bool)
(declare-fun x3048 () Int)
(declare-fun x1883 () Int)
(declare-fun x5741 () Bool)
(declare-fun x3835 () Int)
(declare-fun x2265 () Int)
(declare-fun x5507 () Bool)
(declare-fun x411 () Bool)
(declare-fun x7620 () Bool)
(declare-fun x8316 () Int)
(declare-fun x6936 () Int)
(declare-fun x1743 () Int)
(declare-fun x3480 () Int)
(declare-fun x1123 () Bool)
(declare-fun x5375 () Int)
(declare-fun x2426 () Bool)
(declare-fun x257 () Int)
(declare-fun x1686 () Int)
(declare-fun x2176 () Int)
(declare-fun x5250 () Int)
(declare-fun x5075 () Int)
(declare-fun x63 () Bool)
(declare-fun x5988 () Bool)
(declare-fun x57 () Bool)
(declare-fun x766 () Bool)
(declare-fun x4089 () Int)
(declare-fun x1135 () Int)
(declare-fun x5365 () Bool)
(declare-fun x7918 () Bool)
(declare-fun x8286 () Bool)
(declare-fun x3359 () Int)
(declare-fun x4171 () Int)
(declare-fun x444 () Int)
(declare-fun x5872 () Int)
(declare-fun x1749 () Bool)
(declare-fun x7925 () Int)
(declare-fun x5870 () Int)
(declare-fun x3450 () Int)
(declare-fun x2451 () Bool)
(declare-fun x5302 () Int)
(declare-fun x8579 () Bool)
(declare-fun x1107 () Int)
(declare-fun x5835 () Int)
(declare-fun x976 (Int) Int)
(declare-fun x5865 () Int)
(declare-fun x2723 () Int)
(declare-fun x1088 () Int)
(declare-fun x4848 () Int)
(declare-fun x1611 () Bool)
(declare-fun x6320 () Int)
(declare-fun x4529 () Int)
(declare-fun x322 () Bool)
(declare-fun x3909 () Int)
(declare-fun x7022 () Int)
(declare-fun x6813 () Bool)
(declare-fun x7957 () Bool)
(declare-fun x7725 () Int)
(declare-fun x7297 () Int)
(declare-fun x6691 () Bool)
(declare-fun x5397 () Bool)
(declare-fun x554 () Bool)
(declare-fun x5575 () Int)
(declare-fun x7636 () Bool)
(declare-fun x3482 () Bool)
(declare-fun x4669 () Int)
(declare-fun x5972 () Int)
(declare-fun x1674 () Int)
(declare-fun x3306 () Bool)
(declare-fun x5851 () Bool)
(declare-fun x1962 () Int)
(declare-fun x4138 () Bool)
(declare-fun x5776 () Int)
(declare-fun x6045 () Bool)
(declare-fun x307 () Bool)
(declare-fun x4477 () Int)
(declare-fun x4262 () Int)
(declare-fun x4701 () Bool)
(declare-fun x5247 () Bool)
(declare-fun x3094 () Bool)
(declare-fun x537 () Int)
(declare-fun x205 () Bool)
(declare-fun x5930 () Bool)
(declare-fun x2885 () Int)
(declare-fun x4487 () Int)
(declare-fun x6833 () Int)
(declare-fun x5400 () Bool)
(declare-fun x5875 () Bool)
(declare-fun x5452 () Int)
(declare-fun x5079 () Bool)
(declare-fun x5238 () Int)
(declare-fun x561 () Bool)
(declare-fun x6115 () Int)
(declare-fun x5228 () Int)
(declare-fun x2690 () Bool)
(declare-fun x8502 () Int)
(declare-fun x2098 () Bool)
(declare-fun x6359 () Int)
(declare-fun x4668 () Int)
(declare-fun x3535 () Int)
(declare-fun x2688 () Int)
(declare-fun x113 () Int)
(declare-fun x4697 () Bool)
(declare-fun x8507 () Int)
(declare-fun x2762 () Int)
(declare-fun x3604 () Int)
(declare-fun x7075 () Bool)
(declare-fun x5737 () Int)
(declare-fun x7080 () Bool)
(declare-fun x122 () Bool)
(declare-fun x627 () Bool)
(declare-fun x2873 () Int)
(declare-fun x7219 () Bool)
(declare-fun x711 () Int)
(declare-fun x3669 () Bool)
(declare-fun x6800 () Int)
(declare-fun x2463 () Int)
(declare-fun x8019 () Int)
(declare-fun x2206 () Int)
(declare-fun x23 () Int)
(declare-fun x7621 () Int)
(declare-fun x3642 () Bool)
(declare-fun x6244 () Bool)
(declare-fun x8131 () Bool)
(declare-fun x202 () Int)
(declare-fun x5703 () Bool)
(declare-fun x7728 () Bool)
(declare-fun x3905 () Int)
(declare-fun x7673 () Int)
(declare-fun x3548 () Int)
(declare-fun x3975 () Bool)
(declare-fun x5326 () Int)
(declare-fun x4046 () Int)
(declare-fun x4796 () Bool)
(declare-fun x2488 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x7550 () Int)
(declare-fun x6425 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x434 () Bool)
(declare-fun x2038 () Int)
(declare-fun x8262 () Bool)
(declare-fun x5626 () Int)
(declare-fun x5324 () Int)
(declare-fun x8488 () Bool)
(declare-fun x2230 () Int)
(declare-fun x699 () Bool)
(declare-fun x4987 () Int)
(declare-fun x902 () Bool)
(declare-fun x7363 () Int)
(declare-fun x2912 () Bool)
(declare-fun x7976 () Int)
(declare-fun x1395 () Int)
(declare-fun x4800 () Bool)
(declare-fun x2455 () Int)
(declare-fun x7910 () Bool)
(declare-fun x7095 () Bool)
(declare-fun x7708 () Int)
(declare-fun x5928 () Int)
(declare-fun x3165 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x3623 () Int)
(declare-fun x4757 () Bool)
(declare-fun x5798 () Bool)
(declare-fun x6788 () Int)
(declare-fun x5932 () Bool)
(declare-fun x7689 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x3417 () Int)
(declare-fun x7086 () Int)
(declare-fun x2493 () Int)
(declare-fun x3979 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x2976 () Int)
(declare-fun x3470 () Bool)
(declare-fun x2556 () Bool)
(declare-fun x306 (Int) Int)
(declare-fun x3754 () Int)
(declare-fun x6733 () Int)
(declare-fun x5949 () Bool)
(declare-fun x4791 () Int)
(declare-fun x8448 (Int) Int)
(declare-fun x3003 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x4478 () Int)
(declare-fun x834 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x1327 () Int)
(declare-fun x7971 () Bool)
(declare-fun x7856 () Int)
(declare-fun x4947 () Bool)
(declare-fun x1120 (Int) Int)
(declare-fun x4151 () Bool)
(declare-fun x6356 () Bool)
(declare-fun x4537 () Bool)
(declare-fun x5814 (Int) Int)
(declare-fun x6144 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x8232 () Bool)
(declare-fun x4712 () Bool)
(declare-fun x3692 () Bool)
(declare-fun x8233 () Bool)
(declare-fun x7698 () Int)
(declare-fun x7491 () Int)
(declare-fun x7475 () Bool)
(declare-fun x2726 () Int)
(declare-fun x6742 () Bool)
(declare-fun x6460 () Int)
(declare-fun x4752 () Int)
(declare-fun x1818 () Int)
(declare-fun x5359 () Bool)
(declare-fun x5538 () Bool)
(declare-fun x7522 () Bool)
(declare-fun x8459 () Bool)
(declare-fun x2019 () Int)
(declare-fun x3843 () Int)
(declare-fun x3325 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x6823 () Bool)
(declare-fun x2159 () Bool)
(declare-fun x5632 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x583 () Bool)
(declare-fun x7844 () Int)
(declare-fun x2935 () Bool)
(declare-fun x5637 () Int)
(declare-fun x3302 () Int)
(declare-fun x4067 () Bool)
(declare-fun x3651 () Int)
(declare-fun x7034 () Bool)
(declare-fun x8417 () Int)
(declare-fun x6157 () Int)
(declare-fun x2625 () Int)
(declare-fun x7837 () Bool)
(declare-fun x10 () Bool)
(declare-fun x6738 () Int)
(declare-fun x6828 () Int)
(declare-fun x4293 () Bool)
(declare-fun x3940 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x5746 () Int)
(declare-fun x869 () Int)
(declare-fun x7124 () Bool)
(declare-fun x8460 () Bool)
(declare-fun x6222 () Bool)
(declare-fun x8214 () Bool)
(declare-fun x4291 () Int)
(declare-fun x3880 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x6634 () Int)
(declare-fun x6858 () Bool)
(declare-fun x6795 () Int)
(declare-fun x4298 () Bool)
(declare-fun x7611 () Int)
(declare-fun x2319 () Bool)
(declare-fun x1012 () Int)
(declare-fun x5244 () Int)
(declare-fun x1631 () Bool)
(declare-fun x6870 () Bool)
(declare-fun x7545 () Int)
(declare-fun x88 (Int) Int)
(declare-fun x7191 () Int)
(declare-fun x26 () Int)
(declare-fun x4391 () Bool)
(declare-fun x5120 () Int)
(declare-fun x8500 () Int)
(declare-fun x4044 () Int)
(declare-fun x6664 () Int)
(declare-fun x2581 () Int)
(declare-fun x8532 () Int)
(declare-fun x8367 () Int)
(declare-fun x3276 () Int)
(declare-fun x6225 () Bool)
(declare-fun x2708 () Bool)
(declare-fun x5711 () Int)
(declare-fun x6782 () Int)
(declare-fun x3134 () Bool)
(declare-fun x7551 () Bool)
(declare-fun x7695 () Bool)
(declare-fun x1974 () Int)
(declare-fun x6103 () Int)
(declare-fun x2338 () Bool)
(declare-fun x6973 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x5554 () Bool)
(declare-fun x6535 () Int)
(declare-fun x5479 () Bool)
(declare-fun x5127 (Int) Int)
(declare-fun x1276 () Bool)
(declare-fun x5686 () Int)
(declare-fun x7132 () Int)
(declare-fun x4100 () Bool)
(declare-fun x7714 () Int)
(declare-fun x1550 () Int)
(declare-fun x3745 () Int)
(declare-fun x5759 () Int)
(declare-fun x7809 () Int)
(declare-fun x528 () Int)
(declare-fun x2864 () Bool)
(declare-fun x6326 () Int)
(declare-fun x5833 () Bool)
(declare-fun x7807 () Bool)
(declare-fun x3747 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x3972 () Int)
(declare-fun x8525 () Int)
(declare-fun x3823 () Bool)
(declare-fun x3789 () Bool)
(declare-fun x1341 () Int)
(declare-fun x4824 () Int)
(declare-fun x7841 () Int)
(declare-fun x7322 () Int)
(declare-fun x7791 () Bool)
(declare-fun x4994 () Bool)
(declare-fun x7514 () Bool)
(declare-fun x7004 () Bool)
(declare-fun x4431 () Bool)
(declare-fun x5620 () Int)
(declare-fun x8063 () Bool)
(declare-fun x7924 () Bool)
(declare-fun x3173 () Int)
(declare-fun x2911 () Int)
(declare-fun x7719 () Int)
(declare-fun x1353 () Int)
(declare-fun x6854 () Bool)
(declare-fun x5074 () Bool)
(declare-fun x866 () Int)
(declare-fun x8110 () Int)
(declare-fun x7240 () Int)
(declare-fun x2735 () Bool)
(declare-fun x7912 () Int)
(declare-fun x7019 () Bool)
(declare-fun x5211 () Int)
(declare-fun x3259 (Int) Int)
(declare-fun x4706 () Bool)
(declare-fun x8116 () Int)
(declare-fun x7763 () Bool)
(declare-fun x4793 () Bool)
(declare-fun x8045 () Bool)
(declare-fun x3567 () Int)
(declare-fun x1113 () Bool)
(declare-fun x2137 () Int)
(declare-fun x7572 () Bool)
(declare-fun x1034 () Int)
(declare-fun x6686 () Int)
(declare-fun x4868 () Int)
(declare-fun x1862 () Int)
(declare-fun x7721 () Int)
(declare-fun x1021 () Bool)
(declare-fun x6528 () Bool)
(declare-fun x6037 () Bool)
(declare-fun x1043 (Int) Int)
(declare-fun x5112 () Int)
(declare-fun x3784 () Bool)
(declare-fun x5770 () Bool)
(declare-fun x7529 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x2886 () Bool)
(declare-fun x4803 () Int)
(declare-fun x4590 () Int)
(declare-fun x6783 () Int)
(declare-fun x3928 () Int)
(declare-fun x348 () Bool)
(declare-fun x6668 () Bool)
(declare-fun x7327 () Int)
(declare-fun x5779 () Int)
(declare-fun x5713 () Int)
(declare-fun x7371 () Bool)
(declare-fun x4953 () Int)
(declare-fun x8139 () Int)
(declare-fun x2639 () Bool)
(declare-fun x1997 () Bool)
(declare-fun x1219 () Int)
(declare-fun x2872 () Int)
(declare-fun x7633 () Int)
(declare-fun x1016 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x525 () Int)
(declare-fun x4012 () Bool)
(declare-fun x5095 () Int)
(declare-fun x5710 () Int)
(declare-fun x1807 () Bool)
(declare-fun x8022 () Int)
(declare-fun x4347 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x406 () Bool)
(declare-fun x2924 () Int)
(declare-fun x1614 () Int)
(declare-fun x7743 () Bool)
(declare-fun x6631 () Bool)
(declare-fun x4770 () Int)
(declare-fun x5313 () Int)
(declare-fun x4273 () Int)
(declare-fun x8024 () Int)
(declare-fun x2744 () Int)
(declare-fun x795 () Int)
(declare-fun x7319 () Bool)
(declare-fun x7023 () Int)
(declare-fun x5270 () Bool)
(declare-fun x4879 () Int)
(declare-fun x1776 () Bool)
(declare-fun x4833 () Bool)
(declare-fun x6851 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x950 () Bool)
(declare-fun x6486 () Int)
(declare-fun x7575 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1196 () Int)
(declare-fun x1697 () Bool)
(declare-fun x3064 () Int)
(declare-fun x6409 () Bool)
(declare-fun x8009 () Bool)
(declare-fun x6785 () Int)
(declare-fun x2495 () Int)
(declare-fun x7208 () Bool)
(declare-fun x8068 () Bool)
(declare-fun x8491 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x8442 () Int)
(declare-fun x6711 () Int)
(declare-fun x6676 () Int)
(declare-fun x8432 () Bool)
(declare-fun x2876 () Int)
(declare-fun x8062 () Bool)
(declare-fun x4955 (Int) Int)
(declare-fun x3570 () Bool)
(declare-fun x1865 () Int)
(declare-fun x3911 () Bool)
(declare-fun x4165 () Int)
(declare-fun x4434 () Bool)
(declare-fun x5691 () Int)
(declare-fun x4965 () Bool)
(declare-fun x2988 () Int)
(declare-fun x1696 () Bool)
(declare-fun x919 () Bool)
(declare-fun x5113 () Int)
(declare-fun x5539 () Int)
(declare-fun x3258 () Bool)
(declare-fun x5155 () Bool)
(declare-fun x4310 () Int)
(declare-fun x4674 () Int)
(declare-fun x6202 () Int)
(declare-fun x7573 () Int)
(declare-fun x4006 () Bool)
(declare-fun x7018 () Bool)
(declare-fun x8391 () Int)
(declare-fun x5488 () Int)
(declare-fun x7815 () Bool)
(declare-fun x744 () Bool)
(declare-fun x4645 () Bool)
(declare-fun x654 () Int)
(declare-fun x4250 () Int)
(declare-fun x5214 () Bool)
(declare-fun x4555 () Int)
(declare-fun x4925 () Int)
(declare-fun x3982 () Int)
(declare-fun x1514 () Int)
(declare-fun x5804 () Bool)
(declare-fun x2867 () Bool)
(declare-fun x3445 () Int)
(declare-fun x7661 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x8415 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x7238 () Bool)
(declare-fun x7664 () Bool)
(declare-fun x5128 () Int)
(declare-fun x1721 () Int)
(declare-fun x5825 () Int)
(declare-fun x2148 () Int)
(declare-fun x5843 () Int)
(declare-fun x3446 () Bool)
(declare-fun x7328 () Bool)
(declare-fun x6152 () Int)
(declare-fun x7171 () Bool)
(declare-fun x5301 () Int)
(declare-fun x3574 () Int)
(declare-fun x5263 () Bool)
(declare-fun x8205 () Bool)
(declare-fun x5716 () Int)
(declare-fun x3614 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x222 () Int)
(declare-fun x8433 () Bool)
(declare-fun x8547 () Int)
(declare-fun x5435 () Bool)
(declare-fun x1745 () Bool)
(declare-fun x2115 () Bool)
(declare-fun x5006 () Int)
(declare-fun x8239 () Bool)
(declare-fun x7215 () Int)
(declare-fun x6113 () Int)
(declare-fun x308 () Bool)
(declare-fun x7303 () Bool)
(declare-fun x8023 () Bool)
(declare-fun x8005 () Int)
(declare-fun x6044 () Int)
(declare-fun x5204 () Int)
(declare-fun x8356 () Int)
(declare-fun x4847 () Int)
(declare-fun x2398 () Int)
(declare-fun x2656 () Bool)
(declare-fun x4873 () Int)
(declare-fun x388 () Bool)
(declare-fun x7638 () Bool)
(declare-fun x60 () Int)
(declare-fun x579 () Int)
(declare-fun x295 () Int)
(declare-fun x7666 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x3105 () Int)
(declare-fun x2437 () Bool)
(declare-fun x4885 () Bool)
(declare-fun x4383 () Bool)
(declare-fun x2560 () Int)
(declare-fun x391 () Int)
(declare-fun x1788 () Int)
(declare-fun x620 () Bool)
(declare-fun x5572 () Bool)
(declare-fun x5708 () Bool)
(declare-fun x4552 () Int)
(declare-fun x1322 () Bool)
(declare-fun x3299 () Int)
(declare-fun x8517 () Bool)
(declare-fun x3182 () Int)
(declare-fun x6493 () Bool)
(declare-fun x4657 () Bool)
(declare-fun x8371 () Bool)
(declare-fun x3139 () Int)
(declare-fun x3123 () Int)
(declare-fun x2768 () Int)
(declare-fun x2765 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x1930 () Int)
(declare-fun x213 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x386 () Int)
(declare-fun x3826 () Int)
(declare-fun x1573 () Int)
(declare-fun x7518 () Bool)
(declare-fun x655 () Int)
(declare-fun x1007 () Bool)
(declare-fun x5739 () Int)
(declare-fun x4691 () Int)
(declare-fun x3024 () Int)
(declare-fun x4445 () Int)
(declare-fun x7712 () Bool)
(declare-fun x7282 () Bool)
(declare-fun x694 () Bool)
(declare-fun x5971 () Bool)
(declare-fun x362 () Int)
(declare-fun x6265 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x2514 () Int)
(declare-fun x4423 () Int)
(declare-fun x316 () Bool)
(declare-fun x8369 () Bool)
(declare-fun x1027 () Int)
(declare-fun x2905 () Int)
(declare-fun x2660 () Int)
(declare-fun x130 () Bool)
(declare-fun x2763 () Bool)
(declare-fun x5158 () Int)
(declare-fun x4643 () Bool)
(declare-fun x2277 () Int)
(declare-fun x649 () Int)
(declare-fun x1843 () Int)
(declare-fun x5195 () Int)
(declare-fun x7310 () Int)
(declare-fun x469 () Int)
(declare-fun x7560 () Int)
(declare-fun x3109 () Bool)
(declare-fun x6993 () Int)
(declare-fun x7207 () Bool)
(declare-fun x4996 () Int)
(declare-fun x6626 () Int)
(declare-fun x2978 () Bool)
(declare-fun x4185 () Bool)
(declare-fun x2505 () Bool)
(declare-fun x5628 () Int)
(declare-fun x859 () Int)
(declare-fun x5616 () Int)
(declare-fun x7488 () Int)
(declare-fun x5689 () Int)
(declare-fun x3179 () Bool)
(declare-fun x7615 () Int)
(declare-fun x5754 () Int)
(declare-fun x1935 () Bool)
(declare-fun x5489 () Int)
(declare-fun x2748 () Bool)
(declare-fun x1961 () Bool)
(declare-fun x5336 () Int)
(declare-fun x4906 () Int)
(declare-fun x608 () Int)
(declare-fun x6560 () Bool)
(declare-fun x7562 () Bool)
(declare-fun x5333 () Int)
(declare-fun x3829 () Bool)
(declare-fun x5460 () Int)
(declare-fun x6501 () Int)
(declare-fun x751 () Int)
(declare-fun x8419 () Bool)
(declare-fun x6606 () Int)
(declare-fun x4869 () Bool)
(declare-fun x2419 () Int)
(declare-fun x5826 () Bool)
(declare-fun x334 () Int)
(declare-fun x4606 () Int)
(declare-fun x5053 () Bool)
(declare-fun x184 () Int)
(declare-fun x2162 () Int)
(declare-fun x4836 () Bool)
(declare-fun x7190 () Int)
(declare-fun x1678 () Int)
(declare-fun x8383 () Bool)
(declare-fun x7079 () Int)
(declare-fun x4510 () Bool)
(declare-fun x4578 () Bool)
(declare-fun x1172 () Int)
(declare-fun x2004 () Bool)
(declare-fun x5643 () Int)
(declare-fun x5029 () Bool)
(declare-fun x293 () Int)
(declare-fun x6389 () Int)
(declare-fun x4851 (Int Int Int Int Int Int Int) Int)
(declare-fun x3889 () Int)
(declare-fun x6847 () Bool)
(declare-fun x5090 () Bool)
(declare-fun x4731 () Int)
(declare-fun x5563 () Bool)
(declare-fun x4444 () Int)
(declare-fun x247 () Int)
(declare-fun x8496 () Int)
(declare-fun x4122 () Int)
(declare-fun x1437 () Bool)
(declare-fun x4400 () Int)
(declare-fun x4127 () Bool)
(declare-fun x5415 () Bool)
(declare-fun x4499 () Bool)
(declare-fun x460 () Bool)
(declare-fun x7367 () Int)
(declare-fun x7519 () Bool)
(declare-fun x3878 () Int)
(declare-fun x3001 () Bool)
(declare-fun x8313 () Bool)
(declare-fun x5381 () Int)
(declare-fun x1596 () Bool)
(declare-fun x4116 () Bool)
(declare-fun x8450 () Bool)
(declare-fun x4942 () Bool)
(declare-fun x1497 () Int)
(declare-fun x5545 () Int)
(declare-fun x2963 () Bool)
(declare-fun x1103 () Int)
(declare-fun x6500 () Int)
(declare-fun x8318 () Bool)
(declare-fun x5135 () Int)
(declare-fun x7826 () Bool)
(declare-fun x5735 () Int)
(declare-fun x3342 () Bool)
(declare-fun x2811 () Int)
(declare-fun x483 () Int)
(declare-fun x2821 () Int)
(declare-fun x8595 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x251 () Int)
(declare-fun x133 () Bool)
(declare-fun x238 () Int)
(declare-fun x1627 () Int)
(declare-fun x2325 () Bool)
(declare-fun x3439 () Int)
(declare-fun x3866 () Int)
(declare-fun x5399 () Int)
(declare-fun x7564 () Bool)
(declare-fun x346 () Bool)
(declare-fun x4502 () Bool)
(declare-fun x5163 () Int)
(declare-fun x3708 () Int)
(declare-fun x1419 () Int)
(declare-fun x2504 () Int)
(declare-fun x1727 () Bool)
(declare-fun x3468 () Int)
(declare-fun x1019 () Int)
(declare-fun x7913 () Bool)
(declare-fun x2975 () Bool)
(declare-fun x4266 () Int)
(declare-fun x2136 () Int)
(declare-fun x1556 () Bool)
(declare-fun x7894 () Bool)
(declare-fun x7268 () Int)
(declare-fun x2752 () Int)
(declare-fun x5447 () Int)
(declare-fun x7105 () Int)
(declare-fun x4505 () Int)
(declare-fun x6338 () Int)
(declare-fun x1121 () Int)
(declare-fun x2986 () Int)
(declare-fun x1115 () Bool)
(declare-fun x3305 () Bool)
(declare-fun x7359 () Bool)
(declare-fun x7901 () Int)
(declare-fun x3181 () Int)
(declare-fun x8255 () Bool)
(declare-fun x3420 () Bool)
(declare-fun x407 () Int)
(declare-fun x8470 () Int)
(declare-fun x6302 () Bool)
(declare-fun x2792 () Int)
(declare-fun x5662 () Int)
(declare-fun x6866 () Int)
(declare-fun x7504 () Bool)
(declare-fun x8218 () Int)
(declare-fun x6745 () Bool)
(declare-fun x7816 () Int)
(declare-fun x3892 () Int)
(declare-fun x789 () Bool)
(declare-fun x6868 () Bool)
(declare-fun x5550 () Int)
(declare-fun x3155 () Int)
(declare-fun x7854 () Int)
(declare-fun x588 (Int) Int)
(declare-fun x6189 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x377 () Int)
(declare-fun x2700 () Int)
(declare-fun x3364 (Int) Int)
(declare-fun x1092 () Int)
(declare-fun x7280 () Int)
(declare-fun x7423 () Int)
(declare-fun x5443 () Int)
(declare-fun x4834 () Int)
(declare-fun x754 () Int)
(declare-fun x1613 () Int)
(declare-fun x3148 () Int)
(declare-fun x3662 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x3365 () Int)
(declare-fun x6712 () Bool)
(declare-fun x8325 () Bool)
(declare-fun x3993 () Bool)
(declare-fun x4409 () Int)
(declare-fun x701 () Int)
(declare-fun x584 () Bool)
(declare-fun x8133 () Bool)
(declare-fun x4536 () Bool)
(declare-fun x5503 () Int)
(declare-fun x6371 () Int)
(declare-fun x1937 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x6112 () Int)
(declare-fun x3206 () Bool)
(declare-fun x5945 () Bool)
(declare-fun x8 () Bool)
(declare-fun x5269 () Int)
(declare-fun x6349 () Int)
(declare-fun x4083 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x441 () Bool)
(declare-fun x5571 () Int)
(declare-fun x6994 () Int)
(declare-fun x2262 () Bool)
(declare-fun x8336 () Bool)
(declare-fun x5236 () Int)
(declare-fun x3393 () Bool)
(declare-fun x2636 () Bool)
(declare-fun x6190 () Int)
(declare-fun x319 () Int)
(declare-fun x8060 () Bool)
(declare-fun x4944 () Int)
(declare-fun x209 () Int)
(declare-fun x1096 () Int)
(declare-fun x1618 () Int)
(declare-fun x7729 () Int)
(declare-fun x6814 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x3987 () Bool)
(declare-fun x4789 () Bool)
(declare-fun x622 () Int)
(declare-fun x6598 () Int)
(declare-fun x4599 () Bool)
(declare-fun x2830 () Int)
(declare-fun x5121 () Int)
(declare-fun x5516 () Int)
(declare-fun x633 () Int)
(declare-fun x361 () Int)
(declare-fun x6718 () Bool)
(declare-fun x7552 () Int)
(declare-fun x12 () Int)
(declare-fun x7311 () Int)
(declare-fun x5966 () Bool)
(declare-fun x4927 () Int)
(declare-fun x1273 () Bool)
(declare-fun x732 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x3814 () Int)
(declare-fun x8382 () Int)
(declare-fun x3619 () Bool)
(declare-fun x5318 () Bool)
(declare-fun x2151 () Int)
(declare-fun x6945 () Bool)
(declare-fun x4556 () Int)
(declare-fun x83 () Int)
(declare-fun x7287 () Bool)
(declare-fun x3472 () Int)
(declare-fun x6171 () Int)
(declare-fun x6977 () Int)
(declare-fun x5694 () Bool)
(declare-fun x8526 () Int)
(declare-fun x2901 () Bool)
(declare-fun x480 () Bool)
(declare-fun x6563 () Int)
(declare-fun x7959 () Bool)
(declare-fun x5484 () Bool)
(declare-fun x2405 () Int)
(declare-fun x4732 () Int)
(declare-fun x5184 () Int)
(declare-fun x4547 () Int)
(declare-fun x5203 () Bool)
(declare-fun x2701 () Bool)
(declare-fun x7031 () Bool)
(declare-fun x155 () Bool)
(declare-fun x6839 () Int)
(declare-fun x6809 () Bool)
(declare-fun x7771 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x325 () Bool)
(declare-fun x8520 () Int)
(declare-fun x180 () Bool)
(declare-fun x246 () Bool)
(declare-fun x1271 () Int)
(declare-fun x6159 () Int)
(declare-fun x4192 () Int)
(declare-fun x6931 (Int) Int)
(declare-fun x2784 () Bool)
(declare-fun x7869 () Bool)
(declare-fun x6639 () Bool)
(declare-fun x6239 () Bool)
(declare-fun x6256 () Int)
(declare-fun x6322 () Bool)
(declare-fun x7716 () Bool)
(declare-fun x7094 () Bool)
(declare-fun x1412 () Int)
(declare-fun x2453 () Bool)
(declare-fun x6954 () Int)
(declare-fun x3089 () Int)
(declare-fun x4129 () Bool)
(declare-fun x6108 () Bool)
(declare-fun x8228 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x8324 () Bool)
(declare-fun x7113 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x7772 () Int)
(declare-fun x5958 () Int)
(declare-fun x416 () Bool)
(declare-fun x6912 () Bool)
(declare-fun x6748 () Bool)
(declare-fun x5907 () Int)
(declare-fun x3854 () Int)
(declare-fun x7685 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x580 () Bool)
(declare-fun x4015 () Int)
(declare-fun x2794 () Int)
(declare-fun x1577 () Bool)
(declare-fun x585 () Int)
(declare-fun x7448 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x6530 (Int) Int)
(declare-fun x881 () Bool)
(declare-fun x8586 () Int)
(declare-fun x1030 () Int)
(declare-fun x2387 () Int)
(declare-fun x4968 () Bool)
(declare-fun x4682 () Int)
(declare-fun x4024 () Int)
(declare-fun x6118 () Int)
(declare-fun x7082 () Int)
(declare-fun x3061 () Bool)
(declare-fun x4778 () Int)
(declare-fun x2084 () Bool)
(declare-fun x540 () Int)
(declare-fun x5023 () Int)
(declare-fun x3908 () Bool)
(declare-fun x1035 () Int)
(declare-fun x1673 () Bool)
(declare-fun x6062 () Int)
(declare-fun x5968 () Bool)
(declare-fun x4394 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x7733 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x615 () Bool)
(declare-fun x3539 () Int)
(declare-fun x66 () Int)
(declare-fun x8006 () Bool)
(declare-fun x7546 () Bool)
(declare-fun x3055 () Int)
(declare-fun x593 () Int)
(declare-fun x2663 () Int)
(declare-fun x8145 () Int)
(declare-fun x20 () Bool)
(declare-fun x8094 (Int) Int)
(declare-fun x4193 () Bool)
(declare-fun x7561 () Int)
(declare-fun x4539 () Int)
(declare-fun x3227 () Int)
(declare-fun x1840 () Bool)
(declare-fun x6611 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x2093 () Int)
(declare-fun x5569 () Int)
(declare-fun x642 () Int)
(declare-fun x2213 () Int)
(declare-fun x8266 () Bool)
(declare-fun x373 () Bool)
(declare-fun x7909 () Int)
(declare-fun x1212 () Bool)
(declare-fun x6260 () Int)
(declare-fun x7010 () Bool)
(declare-fun x5042 () Int)
(declare-fun x1501 () Bool)
(declare-fun x5268 () Int)
(declare-fun x2406 () Int)
(declare-fun x5423 () Bool)
(declare-fun x8221 () Bool)
(declare-fun x8327 () Int)
(declare-fun x1593 () Int)
(declare-fun x6836 () Bool)
(declare-fun x6541 () Bool)
(declare-fun x3611 () Bool)
(declare-fun x7951 () Bool)
(declare-fun x4348 () Int)
(declare-fun x3067 () Int)
(declare-fun x6545 () Bool)
(declare-fun x4483 () Int)
(declare-fun x2381 () Bool)
(declare-fun x3677 () Bool)
(declare-fun x112 () Int)
(declare-fun x8249 () Bool)
(declare-fun x6546 () Bool)
(declare-fun x6255 () Bool)
(declare-fun x2643 () Int)
(declare-fun x6296 () Int)
(declare-fun x2852 () Bool)
(declare-fun x4353 () Int)
(declare-fun x5785 () Int)
(declare-fun x820 () Bool)
(declare-fun x2799 () Int)
(declare-fun x399 () Bool)
(declare-fun x758 () Int)
(declare-fun x5918 () Int)
(declare-fun x2635 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x491 () Int)
(declare-fun x7139 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x277 () Bool)
(declare-fun x5860 () Bool)
(declare-fun x4850 () Int)
(declare-fun x1081 () Int)
(declare-fun x6974 () Int)
(declare-fun x3485 () Int)
(declare-fun x3132 () Int)
(declare-fun x6201 () Bool)
(declare-fun x262 () Int)
(declare-fun x967 () Bool)
(declare-fun x3463 () Int)
(declare-fun x4261 () Int)
(declare-fun x7532 () Int)
(declare-fun x3583 () Int)
(declare-fun x7044 () Int)
(declare-fun x1166 () Bool)
(declare-fun x3895 () Bool)
(declare-fun x6999 () Bool)
(declare-fun x7170 () Bool)
(declare-fun x6805 () Int)
(declare-fun x3635 () Int)
(declare-fun x5307 () Int)
(declare-fun x7617 () Bool)
(declare-fun x7644 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x56 () Bool)
(declare-fun x5530 () Int)
(declare-fun x3078 () Bool)
(declare-fun x7090 () Int)
(declare-fun x7254 () Int)
(declare-fun x5841 () Int)
(declare-fun x7556 () Int)
(declare-fun x6810 () Bool)
(declare-fun x4517 () Bool)
(declare-fun x5664 () Bool)
(declare-fun x3977 () Int)
(declare-fun x1474 () Bool)
(declare-fun x7134 () Int)
(declare-fun x5896 () Int)
(declare-fun x2846 () Int)
(declare-fun x8253 () Bool)
(declare-fun x4648 () Bool)
(declare-fun x759 () Bool)
(declare-fun x4407 () Int)
(declare-fun x2705 () Bool)
(declare-fun x4065 () Int)
(declare-fun x5848 () Int)
(declare-fun x607 () Bool)
(declare-fun x2931 () Int)
(declare-fun x2804 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x6443 () Int)
(declare-fun x985 (Int) Int)
(declare-fun x4331 () Bool)
(declare-fun x4092 () Int)
(declare-fun x1700 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x2322 () Int)
(declare-fun x1289 () Int)
(declare-fun x4327 () Int)
(declare-fun x1620 () Int)
(declare-fun x932 () Int)
(declare-fun x4133 () Int)
(declare-fun x2602 () Bool)
(declare-fun x7226 () Bool)
(declare-fun x2824 () Int)
(declare-fun x4520 () Bool)
(declare-fun x957 () Int)
(declare-fun x1980 () Int)
(declare-fun x1984 () Bool)
(declare-fun x1047 () Int)
(declare-fun x4714 () Int)
(declare-fun x1889 () Bool)
(declare-fun x8223 () Bool)
(declare-fun x3339 () Int)
(declare-fun x6728 () Int)
(declare-fun x963 () Bool)
(declare-fun x5740 (Int) Int)
(declare-fun x3815 () Bool)
(declare-fun x3759 () Int)
(declare-fun x1006 () Int)
(declare-fun x3087 () Bool)
(declare-fun x5978 () Int)
(declare-fun x7096 () Int)
(declare-fun x3648 () Bool)
(declare-fun x4954 () Bool)
(declare-fun x1520 () Int)
(declare-fun x4200 () Int)
(declare-fun x5233 (Int) Int)
(declare-fun x1108 () Int)
(declare-fun x1987 () Int)
(declare-fun x1144 () Bool)
(declare-fun x3205 () Int)
(declare-fun x3235 () Int)
(declare-fun x4493 () Bool)
(declare-fun x4032 () Int)
(declare-fun x489 () Int)
(declare-fun x3705 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x7360 () Int)
(declare-fun x8287 () Int)
(declare-fun x250 () Bool)
(declare-fun x4543 () Bool)
(declare-fun x4807 () Int)
(declare-fun x3946 () Int)
(declare-fun x2923 () Bool)
(declare-fun x3521 () Int)
(declare-fun x6883 () Int)
(declare-fun x7723 () Int)
(declare-fun x2837 () Int)
(declare-fun x5358 () Int)
(declare-fun x6264 () Int)
(declare-fun x6041 () Int)
(declare-fun x7631 () Int)
(declare-fun x1499 () Bool)
(declare-fun x1282 () Int)
(declare-fun x6130 (Int) Int)
(declare-fun x1301 () Int)
(declare-fun x4620 () Int)
(declare-fun x1244 () Int)
(declare-fun x328 (Int) Int)
(declare-fun x6313 () Int)
(declare-fun x3403 () Int)
(declare-fun x2612 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x714 () Int)
(declare-fun x452 () Int)
(declare-fun x6949 () Int)
(declare-fun x823 () Bool)
(declare-fun x6173 () Bool)
(declare-fun x621 (Int) Int)
(declare-fun x3402 () Bool)
(declare-fun x5173 () Bool)
(declare-fun x1158 () Int)
(declare-fun x5725 () Int)
(declare-fun x1259 () Bool)
(declare-fun x4912 () Int)
(declare-fun x8122 () Int)
(declare-fun x2849 () Int)
(declare-fun x2101 () Bool)
(declare-fun x2511 () Int)
(declare-fun x1278 () Bool)
(declare-fun x798 () Int)
(declare-fun x6474 () Bool)
(declare-fun x8559 () Bool)
(declare-fun x2828 () Int)
(declare-fun x1192 () Int)
(declare-fun x6507 () Int)
(declare-fun x1178 () Int)
(declare-fun x2657 () Int)
(declare-fun x6638 () Int)
(declare-fun x3594 () Bool)
(declare-fun x6637 () Int)
(declare-fun x6142 () Bool)
(declare-fun x2914 () Bool)
(declare-fun x435 () Bool)
(declare-fun x6141 () Int)
(declare-fun x8140 () Int)
(declare-fun x6377 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x1423 () Int)
(declare-fun x6596 () Int)
(declare-fun x68 () Bool)
(declare-fun x3196 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x7819 () Int)
(declare-fun x7655 () Bool)
(declare-fun x4511 () Int)
(declare-fun x7364 () Bool)
(declare-fun x8180 () Int)
(declare-fun x601 () Bool)
(declare-fun x2408 () Bool)
(declare-fun x8350 () Bool)
(declare-fun x703 () Int)
(declare-fun x910 () Bool)
(declare-fun x3725 () Bool)
(declare-fun x8477 () Bool)
(declare-fun x3356 () Int)
(declare-fun x1215 () Bool)
(declare-fun x7225 () Bool)
(declare-fun x5924 () Int)
(declare-fun x2018 () Bool)
(declare-fun x2796 () Bool)
(declare-fun x865 () Bool)
(declare-fun x7806 () Int)
(declare-fun x2102 () Bool)
(declare-fun x3122 () Bool)
(declare-fun x5910 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x5378 () Int)
(declare-fun x1048 () Int)
(declare-fun x70 () Int)
(declare-fun x7271 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x8495 () Int)
(declare-fun x5541 () Int)
(declare-fun x4007 () Int)
(declare-fun x7625 () Bool)
(declare-fun x3738 () Int)
(declare-fun x21 () Bool)
(declare-fun x486 () Bool)
(declare-fun x4368 () Bool)
(declare-fun x311 () Int)
(declare-fun x8126 () Int)
(declare-fun x5052 () Int)
(declare-fun x933 () Int)
(declare-fun x2536 () Bool)
(declare-fun x1821 () Int)
(declare-fun x2438 () Bool)
(declare-fun x3825 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x4702 () Bool)
(declare-fun x5912 () Int)
(declare-fun x231 () Int)
(declare-fun x5065 () Int)
(declare-fun x7988 () Bool)
(declare-fun x3584 () Int)
(declare-fun x3271 () Int)
(declare-fun x4816 () Bool)
(declare-fun x6995 () Int)
(declare-fun x4224 () Int)
(declare-fun x8479 () Int)
(declare-fun x1060 () Bool)
(declare-fun x7104 () Bool)
(declare-fun x502 () Bool)
(declare-fun x8164 () Int)
(declare-fun x1380 () Bool)
(declare-fun x826 () Int)
(declare-fun x6532 () Int)
(declare-fun x6998 () Int)
(declare-fun x5009 (Int) Int)
(declare-fun x8512 () Int)
(declare-fun x7730 () Bool)
(declare-fun x6346 () Int)
(declare-fun x7587 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x921 () Bool)
(declare-fun x4179 () Int)
(declare-fun x7291 () Int)
(declare-fun x2822 () Bool)
(declare-fun x5749 () Bool)
(declare-fun x5731 () Int)
(declare-fun x3198 () Bool)
(declare-fun x6126 () Bool)
(declare-fun x6821 () Int)
(declare-fun x1759 () Int)
(declare-fun x259 () Bool)
(declare-fun x3043 () Bool)
(declare-fun x5055 () Int)
(declare-fun x6548 () Int)
(declare-fun x8321 () Bool)
(declare-fun x7752 () Bool)
(declare-fun x3998 () Bool)
(declare-fun x18 () Bool)
(declare-fun x510 () Int)
(declare-fun x541 () Bool)
(declare-fun x5889 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x5705 () Int)
(declare-fun x7944 () Int)
(declare-fun x5909 () Int)
(declare-fun x4696 () Int)
(declare-fun x1868 () Bool)
(declare-fun x2858 () Bool)
(declare-fun x2687 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x4729 () Int)
(declare-fun x2261 () Int)
(declare-fun x3374 () Int)
(declare-fun x2680 () Int)
(declare-fun x2862 () Bool)
(declare-fun x5695 () Int)
(declare-fun x7595 () Bool)
(declare-fun x6289 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x8234 () Int)
(declare-fun x4432 () Int)
(declare-fun x4513 () Int)
(declare-fun x6871 () Bool)
(declare-fun x7015 () Int)
(declare-fun x93 () Int)
(declare-fun x1812 () Int)
(declare-fun x4227 () Bool)
(declare-fun x2255 () Bool)
(declare-fun x4610 () Int)
(declare-fun x3373 () Bool)
(declare-fun x833 () Int)
(declare-fun x6161 () Bool)
(declare-fun x8490 () Int)
(declare-fun x941 () Int)
(declare-fun x2520 () Bool)
(declare-fun x1919 () Int)
(declare-fun x8028 () Bool)
(declare-fun x8182 () Bool)
(declare-fun x4388 () Bool)
(declare-fun x5656 () Bool)
(declare-fun x2714 () Int)
(declare-fun x1444 () Int)
(declare-fun x2424 () Int)
(declare-fun x7492 () Int)
(declare-fun x2339 () Int)
(declare-fun x8396 () Int)
(declare-fun x6223 () Int)
(declare-fun x1377 () Bool)
(declare-fun x1389 () Int)
(declare-fun x7886 () Int)
(declare-fun x1916 () Int)
(declare-fun x3226 () Bool)
(declare-fun x4979 () Bool)
(declare-fun x6203 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x6919 () Int)
(declare-fun x6933 () Bool)
(declare-fun x4538 () Int)
(declare-fun x4960 () Int)
(declare-fun x3686 () Int)
(declare-fun x1100 () Bool)
(declare-fun x6294 () Bool)
(declare-fun x4663 () Bool)
(declare-fun x7526 () Int)
(declare-fun x3419 () Int)
(declare-fun x1796 () Int)
(declare-fun x5815 () Int)
(declare-fun x7026 () Int)
(declare-fun x4337 () Int)
(declare-fun x6509 () Int)
(declare-fun x5289 () Int)
(declare-fun x2210 () Bool)
(declare-fun x7151 () Bool)
(declare-fun x3184 () Int)
(declare-fun x4 () Int)
(declare-fun x153 () Int)
(declare-fun x8201 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x7987 () Int)
(declare-fun x2724 () Int)
(declare-fun x2326 () Int)
(declare-fun x7692 () Bool)
(declare-fun x2835 () Bool)
(declare-fun x5608 () Int)
(declare-fun x6948 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x4279 () Bool)
(declare-fun x7996 () Bool)
(declare-fun x6591 () Int)
(declare-fun x5902 () Int)
(declare-fun x6385 () Bool)
(declare-fun x7531 () Bool)
(declare-fun x5559 () Int)
(declare-fun x4071 () Int)
(declare-fun x3561 () Bool)
(declare-fun x1294 () Int)
(declare-fun x4619 () Bool)
(declare-fun x4616 () Bool)
(declare-fun x4971 () Bool)
(declare-fun x8581 () Int)
(declare-fun x5634 () Int)
(declare-fun x4934 () Bool)
(declare-fun x3645 () Bool)
(declare-fun x4285 () Int)
(declare-fun x3622 () Bool)
(declare-fun x6621 () Int)
(declare-fun x4422 () Int)
(declare-fun x2240 () Bool)
(declare-fun x7406 () Int)
(declare-fun x3295 () Int)
(declare-fun x7129 () Int)
(declare-fun x4381 () Bool)
(declare-fun x6018 () Int)
(declare-fun x3152 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x1208 () Int)
(declare-fun x3113 () Int)
(declare-fun x8199 () Int)
(declare-fun x3847 () Bool)
(declare-fun x1655 () Int)
(declare-fun x5231 () Int)
(declare-fun x4617 () Int)
(declare-fun x2246 () Int)
(declare-fun x5693 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x7749 () Int)
(declare-fun x8440 () Int)
(declare-fun x5762 () Int)
(declare-fun x4855 () Bool)
(declare-fun x3117 () Int)
(declare-fun x6182 () Bool)
(declare-fun x6162 () Int)
(declare-fun x8132 () Int)
(declare-fun x3244 () Bool)
(declare-fun x1382 () Int)
(declare-fun x3192 () Int)
(declare-fun x5938 () Bool)
(declare-fun x4935 () Bool)
(declare-fun x3902 () Int)
(declare-fun x4000 () Int)
(declare-fun x4812 () Int)
(declare-fun x6849 () Bool)
(declare-fun x1285 () Int)
(declare-fun x2092 () Int)
(declare-fun x925 () Int)
(declare-fun x5790 () Int)
(declare-fun x6308 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x1644 () Int)
(declare-fun x5829 () Int)
(declare-fun x8358 () Int)
(declare-fun x2595 () Bool)
(declare-fun x3193 () Int)
(declare-fun x1470 () Bool)
(declare-fun x6568 () Int)
(declare-fun x5687 () Int)
(declare-fun x3461 () Int)
(declare-fun x7009 () Int)
(declare-fun x7832 () Int)
(declare-fun x7559 () Bool)
(declare-fun x3102 () Int)
(declare-fun x3199 () Int)
(declare-fun x2649 () Int)
(declare-fun x3630 (Int) Int)
(declare-fun x4713 () Bool)
(declare-fun x4862 () Bool)
(declare-fun x1127 () Int)
(declare-fun x7164 () Bool)
(declare-fun x119 () Bool)
(declare-fun x8347 () Int)
(declare-fun x704 () Int)
(declare-fun x2677 () Int)
(declare-fun x5681 () Int)
(declare-fun x7761 () Int)
(declare-fun x5388 () Bool)
(declare-fun x6687 () Int)
(declare-fun x4125 () Int)
(declare-fun x3955 () Int)
(declare-fun x5348 () Bool)
(declare-fun x7823 () Int)
(declare-fun x602 () Int)
(declare-fun x5564 () Int)
(declare-fun x34 () Int)
(declare-fun x965 () Bool)
(declare-fun x8160 () Bool)
(declare-fun x3969 () Bool)
(declare-fun x4609 () Int)
(declare-fun x4288 () Int)
(declare-fun x5273 () Int)
(declare-fun x394 () Int)
(declare-fun x8147 () Int)
(declare-fun x2573 () Int)
(declare-fun x4225 () Bool)
(declare-fun x1148 () Int)
(declare-fun x7960 () Int)
(declare-fun x7070 () Int)
(declare-fun x51 () Bool)
(declare-fun x6254 () Bool)
(declare-fun x4175 () Bool)
(declare-fun x5351 () Bool)
(declare-fun x4527 () Int)
(declare-fun x8522 () Int)
(declare-fun x5866 (Int) Int)
(declare-fun x6946 () Int)
(declare-fun x8594 () Int)
(declare-fun x2258 () Bool)
(declare-fun x7950 () Bool)
(declare-fun x4087 () Bool)
(declare-fun x8523 () Int)
(declare-fun x6274 () Bool)
(declare-fun x8203 () Int)
(declare-fun x6275 () Int)
(declare-fun x5523 () Bool)
(declare-fun x3150 () Int)
(declare-fun x2906 () Int)
(declare-fun x6477 () Int)
(declare-fun x4358 () Int)
(declare-fun x3174 () Bool)
(declare-fun x5663 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x659 () Int)
(declare-fun x163 () Bool)
(declare-fun x448 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x5659 () Bool)
(declare-fun x7750 () Bool)
(declare-fun x6882 () Bool)
(declare-fun x6431 () Int)
(declare-fun x3555 () Bool)
(declare-fun x3830 () Int)
(declare-fun x14 () Bool)
(declare-fun x7605 () Bool)
(declare-fun x2494 () Bool)
(declare-fun x3947 () Bool)
(declare-fun x2711 () Int)
(declare-fun x7825 () Int)
(declare-fun x4921 () Int)
(declare-fun x507 () Int)
(declare-fun x7201 () Int)
(declare-fun x2833 () Bool)
(declare-fun x512 () Bool)
(declare-fun x4437 () Bool)
(declare-fun x3746 () Bool)
(declare-fun x3185 () Bool)
(declare-fun x275 () Int)
(declare-fun x62 () Int)
(declare-fun x1690 () Int)
(declare-fun x7506 () Bool)
(declare-fun x8375 () Int)
(declare-fun x5497 () Int)
(declare-fun x4580 () Int)
(declare-fun x7567 () Int)
(declare-fun x8300 () Int)
(declare-fun x7805 () Bool)
(declare-fun x490 () Int)
(declare-fun x2114 () Bool)
(declare-fun x5276 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x7726 () Int)
(declare-fun x2423 () Bool)
(declare-fun x1837 (Int) Int)
(declare-fun x5979 () Bool)
(declare-fun x3942 () Int)
(declare-fun x150 () Bool)
(declare-fun x8466 () Int)
(declare-fun x4020 () Int)
(declare-fun x5131 () Int)
(declare-fun x6756 () Bool)
(declare-fun x4534 () Int)
(declare-fun x4746 () Int)
(declare-fun x5638 () Int)
(declare-fun x226 () Int)
(declare-fun x3758 () Int)
(declare-fun x2539 () Int)
(declare-fun x7380 () Bool)
(declare-fun x5078 () Bool)
(declare-fun x6484 () Bool)
(declare-fun x4284 () Int)
(declare-fun x689 () Int)
(declare-fun x5257 () Int)
(declare-fun x1566 () Int)
(declare-fun x5672 () Int)
(declare-fun x1702 () Bool)
(declare-fun x5449 () Int)
(declare-fun x4050 () Int)
(declare-fun x1740 () Int)
(declare-fun x2915 () Bool)
(declare-fun x781 () Int)
(declare-fun x5784 () Bool)
(declare-fun x8281 () Bool)
(declare-fun x7822 () Int)
(declare-fun x6986 () Bool)
(declare-fun x980 () Bool)
(declare-fun x2927 () Int)
(declare-fun x3667 () Bool)
(declare-fun x7142 () Bool)
(declare-fun x749 () Int)
(declare-fun x410 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x17 () Int)
(declare-fun x5444 () Bool)
(declare-fun x611 () Bool)
(declare-fun x8114 () Bool)
(declare-fun x6740 () Int)
(declare-fun x1483 () Int)
(declare-fun x6360 (Int) Int)
(declare-fun x4243 () Bool)
(declare-fun x3506 () Bool)
(declare-fun x2897 () Bool)
(declare-fun x4735 () Int)
(declare-fun x5812 () Int)
(declare-fun x183 () Bool)
(declare-fun x5239 () Int)
(declare-fun x4776 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x1879 () Int)
(declare-fun x1452 () Bool)
(declare-fun x4008 () Bool)
(declare-fun x437 () Bool)
(declare-fun x8309 () Int)
(declare-fun x2920 () Int)
(declare-fun x5086 () Int)
(declare-fun x76 () Bool)
(declare-fun x5416 () Int)
(declare-fun x665 () Int)
(declare-fun x5661 () Int)
(declare-fun x8288 () Bool)
(declare-fun x8548 () Bool)
(declare-fun x3678 () Bool)
(declare-fun x320 () Int)
(declare-fun x5696 () Int)
(declare-fun x6286 () Bool)
(declare-fun x4784 () Int)
(declare-fun x3568 () Int)
(declare-fun x688 () Bool)
(declare-fun x141 () Int)
(declare-fun x6957 () Int)
(declare-fun x6066 () Bool)
(declare-fun x7500 () Int)
(declare-fun x5467 () Int)
(declare-fun x2902 () Int)
(declare-fun x5724 () Int)
(declare-fun x1334 () Int)
(declare-fun x3966 () Int)
(declare-fun x5439 () Int)
(declare-fun x3308 () Bool)
(declare-fun x2780 () Int)
(declare-fun x4309 () Bool)
(declare-fun x8322 () Bool)
(declare-fun x1463 () Int)
(declare-fun x7571 () Bool)
(declare-fun x5704 () Bool)
(declare-fun x6822 () Int)
(declare-fun x43 () Int)
(declare-fun x5595 () Int)
(declare-fun x1568 () Int)
(declare-fun x7255 () Int)
(declare-fun x6662 () Bool)
(declare-fun x5956 () Bool)
(declare-fun x5698 () Int)
(declare-fun x6067 () Int)
(declare-fun x7125 () Int)
(declare-fun x581 () Bool)
(declare-fun x1001 () Int)
(declare-fun x1894 () Int)
(declare-fun x5937 () Int)
(declare-fun x7006 () Int)
(declare-fun x1609 () Int)
(declare-fun x6211 () Int)
(declare-fun x1458 () Int)
(declare-fun x7038 () Int)
(declare-fun x7788 () Int)
(declare-fun x5882 () Int)
(declare-fun x5598 () Int)
(declare-fun x5929 () Int)
(declare-fun x1386 () Int)
(declare-fun x5252 () Int)
(declare-fun x8326 () Bool)
(declare-fun x700 () Int)
(declare-fun x2919 () Int)
(declare-fun x4272 () Bool)
(declare-fun x3073 () Bool)
(declare-fun x7866 () Int)
(declare-fun x7850 () Int)
(declare-fun x4765 () Int)
(declare-fun x667 () Int)
(declare-fun x6580 () Int)
(declare-fun x168 (Int Int) Int)
(declare-fun x5142 () Bool)
(declare-fun x5847 () Int)
(declare-fun x1310 () Bool)
(declare-fun x7659 () Bool)
(declare-fun x7905 () Int)
(declare-fun x7099 () Int)
(declare-fun x7258 () Int)
(declare-fun x6032 (Int) Int)
(declare-fun x1666 (Int) Int)
(declare-fun x5562 () Int)
(declare-fun x7966 () Int)
(declare-fun x6249 () Bool)
(declare-fun x236 () Bool)
(declare-fun x5933 () Int)
(declare-fun x5641 () Bool)
(declare-fun x2217 () Int)
(declare-fun x5438 () Bool)
(declare-fun x3072 () Bool)
(declare-fun x8296 () Int)
(declare-fun x6955 () Int)
(declare-fun x726 () Int)
(declare-fun x5122 () Bool)
(declare-fun x7165 () Int)
(declare-fun x1626 () Int)
(declare-fun x1457 () Int)
(declare-fun x3727 () Bool)
(declare-fun x3489 () Bool)
(declare-fun x3010 () Int)
(declare-fun x7028 () Bool)
(declare-fun x848 () Bool)
(declare-fun x3861 () Bool)
(declare-fun x3006 () Bool)
(declare-fun x5594 () Int)
(declare-fun x169 () Bool)
(declare-fun x2606 () Bool)
(declare-fun x4021 () Int)
(declare-fun x7041 () Bool)
(declare-fun x433 () Bool)
(declare-fun x2150 () Int)
(declare-fun x590 () Bool)
(declare-fun x3296 () Bool)
(declare-fun x4928 () Int)
(declare-fun x5165 () Int)
(declare-fun x1660 () Int)
(declare-fun x755 () Bool)
(declare-fun x3243 () Bool)
(declare-fun x6479 () Int)
(declare-fun x7243 () Int)
(declare-fun x1839 () Int)
(declare-fun x7081 () Int)
(declare-fun x6719 () Int)
(declare-fun x4360 () Bool)
(declare-fun x6212 (Int) Int)
(declare-fun x2141 () Bool)
(declare-fun x6180 () Bool)
(declare-fun x1109 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1951 () Int)
(declare-fun x5568 () Int)
(declare-fun x4232 () Int)
(declare-fun x4911 () Int)
(declare-fun x5942 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x776 () Bool)
(declare-fun x5317 () Int)
(declare-fun x8404 () Int)
(declare-fun x6723 () Bool)
(declare-fun x6084 () Int)
(declare-fun x5310 () Bool)
(declare-fun x4118 () Bool)
(declare-fun x6702 () Int)
(declare-fun x8416 () Int)
(declare-fun x6298 () Int)
(declare-fun x2007 () Bool)
(declare-fun x5973 () Bool)
(declare-fun x4723 () Int)
(declare-fun x3820 () Int)
(declare-fun x4769 () Int)
(declare-fun x5161 () Bool)
(declare-fun x5471 () Bool)
(declare-fun x1748 () Int)
(declare-fun x1853 () Int)
(declare-fun x4142 () Int)
(declare-fun x5888 () Int)
(declare-fun x713 () Bool)
(declare-fun x7525 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x5253 () Int)
(declare-fun x2300 () Int)
(declare-fun x2518 () Int)
(declare-fun x4105 () Bool)
(declare-fun x7891 () Bool)
(declare-fun x1110 () Int)
(declare-fun x7340 () Bool)
(declare-fun x6648 () Bool)
(declare-fun x2622 () Int)
(declare-fun x3606 () Bool)
(declare-fun x2059 () Int)
(declare-fun x5521 () Bool)
(declare-fun x2236 () Int)
(declare-fun x5591 () Int)
(declare-fun x6345 () Int)
(declare-fun x46 () Bool)
(declare-fun x6094 () Int)
(declare-fun x6405 () Bool)
(declare-fun x3363 () Int)
(declare-fun x5089 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x855 () Bool)
(declare-fun x6860 () Int)
(declare-fun x8153 () Int)
(declare-fun x5980 () Bool)
(declare-fun x7660 () Int)
(declare-fun x582 () Int)
(declare-fun x7482 () Bool)
(declare-fun x5511 () Int)
(declare-fun x5844 () Bool)
(declare-fun x7032 () Int)
(declare-fun x8406 () Int)
(declare-fun x1456 () Bool)
(declare-fun x3857 () Int)
(declare-fun x1763 () Int)
(declare-fun x5262 () Int)
(declare-fun x5821 () Bool)
(declare-fun x5675 () Bool)
(declare-fun x5387 () Int)
(declare-fun x4480 () Bool)
(declare-fun x6158 () Int)
(declare-fun x6430 () Int)
(declare-fun x6149 () Int)
(declare-fun x524 () Int)
(declare-fun x640 () Int)
(declare-fun x4990 () Int)
(declare-fun x2049 () Bool)
(declare-fun x4686 () Bool)
(declare-fun x5205 () Bool)
(declare-fun x5975 () Int)
(declare-fun x1741 () Bool)
(declare-fun x7055 () Int)
(declare-fun x7889 () Int)
(declare-fun x6682 (Int) Int)
(declare-fun x6567 () Int)
(declare-fun x4447 () Int)
(declare-fun x2737 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x5194 () Bool)
(declare-fun x4034 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x6282 () Bool)
(declare-fun x5941 () Bool)
(declare-fun x7929 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x4010 () Bool)
(declare-fun x6950 () Bool)
(declare-fun x5147 () Int)
(declare-fun x2411 () Int)
(declare-fun x7942 () Int)
(declare-fun x7065 () Bool)
(declare-fun x1280 () Int)
(declare-fun x7242 () Bool)
(declare-fun x3334 () Int)
(declare-fun x4166 () Int)
(declare-fun x4631 () Bool)
(declare-fun x7473 () Int)
(declare-fun x4608 (Int) Int)
(declare-fun x2452 () Int)
(declare-fun x2808 () Int)
(declare-fun x2099 () Bool)
(declare-fun x7701 () Bool)
(declare-fun x905 () Bool)
(declare-fun x975 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x6457 () Bool)
(declare-fun x7919 () Bool)
(declare-fun x6064 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x4486 () Int)
(declare-fun x3906 () Bool)
(declare-fun x3915 () Bool)
(declare-fun x4742 () Int)
(declare-fun x4546 () Int)
(declare-fun x3943 () Int)
(declare-fun x7498 () Int)
(declare-fun x6096 () Int)
(declare-fun x1641 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x4504 () Bool)
(declare-fun x5673 () Bool)
(declare-fun x7281 () Int)
(declare-fun x4362 () Int)
(declare-fun x1904 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x8590 () Bool)
(declare-fun x3879 () Int)
(declare-fun x613 () Int)
(declare-fun x211 () Int)
(declare-fun x7344 () Bool)
(declare-fun x6588 () Bool)
(declare-fun x3744 () Int)
(declare-fun x569 () Bool)
(declare-fun x1261 () Int)
(declare-fun x7489 () Bool)
(declare-fun x8267 () Int)
(declare-fun x6358 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x2096 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x5110 () Int)
(declare-fun x8597 () Int)
(declare-fun x4831 () Int)
(declare-fun x2523 () Bool)
(declare-fun x6627 () Bool)
(declare-fun x2439 () Int)
(declare-fun x6667 () Int)
(declare-fun x2820 () Bool)
(declare-fun x6379 () Int)
(declare-fun x2276 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x2720 () Int)
(declare-fun x1249 () Int)
(declare-fun x5607 () Bool)
(declare-fun x2619 () Int)
(declare-fun x1320 () Bool)
(declare-fun x8084 () Int)
(declare-fun x5177 () Bool)
(declare-fun x6617 () Int)
(declare-fun x2899 () Int)
(declare-fun x5977 () Bool)
(declare-fun x4886 () Int)
(declare-fun x8109 () Int)
(declare-fun x1213 () Int)
(declare-fun x729 () Int)
(declare-fun x4458 () Int)
(declare-fun x1560 () Bool)
(declare-fun x1652 () Int)
(declare-fun x6021 () Int)
(declare-fun x3585 () Int)
(declare-fun x4063 () Int)
(declare-fun x402 () Bool)
(declare-fun x3527 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x4861 () Int)
(declare-fun x5615 () Bool)
(declare-fun x5778 () Bool)
(declare-fun x3634 () Bool)
(declare-fun x7330 () Bool)
(declare-fun x4191 () Bool)
(declare-fun x1913 () Int)
(declare-fun x7693 (Int) Int)
(declare-fun x4518 () Int)
(declare-fun x1530 () Int)
(declare-fun x5133 () Int)
(declare-fun x2587 () Int)
(declare-fun x54 () Bool)
(declare-fun x7252 () Int)
(declare-fun x1605 () Bool)
(declare-fun x1206 () Int)
(declare-fun x5955 () Int)
(declare-fun x5850 () Bool)
(declare-fun x7967 () Bool)
(declare-fun x3348 () Int)
(declare-fun x1761 () Bool)
(declare-fun x8439 () Int)
(declare-fun x3873 () Bool)
(declare-fun x7150 () Int)
(declare-fun x4180 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x8119 () Int)
(declare-fun x2531 () Bool)
(declare-fun x4322 () Bool)
(declare-fun x2263 () Int)
(declare-fun x2787 () Int)
(declare-fun x2572 () Int)
(declare-fun x2704 (Int) Int)
(declare-fun x6952 () Bool)
(declare-fun x5401 () Int)
(declare-fun x2907 () Int)
(declare-fun x6129 () Bool)
(declare-fun x149 () Int)
(declare-fun x7782 () Bool)
(declare-fun x5477 () Int)
(declare-fun x4958 () Bool)
(declare-fun x5240 () Bool)
(declare-fun x6110 () Bool)
(declare-fun x4740 () Int)
(declare-fun x2048 () Int)
(declare-fun x6218 () Int)
(declare-fun x7745 () Int)
(declare-fun x1453 () Bool)
(declare-fun x6897 () Int)
(declare-fun x1547 () Int)
(declare-fun x2716 () Int)
(declare-fun x929 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x5584 () Bool)
(declare-fun x6277 (Int) Int)
(declare-fun x5032 () Int)
(declare-fun x7407 () Int)
(declare-fun x765 () Bool)
(declare-fun x4016 () Int)
(declare-fun x8240 () Bool)
(declare-fun x4350 () Bool)
(declare-fun x7415 () Bool)
(declare-fun x8376 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x959 () Bool)
(declare-fun x3388 () Bool)
(declare-fun x478 () Bool)
(declare-fun x5382 () Int)
(declare-fun x265 () Int)
(declare-fun x6133 () Int)
(declare-fun x8085 () Bool)
(declare-fun x5067 () Int)
(declare-fun x2020 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x5935 () Int)
(declare-fun x4047 () Int)
(declare-fun x4238 () Int)
(declare-fun x7394 () Int)
(declare-fun x3190 () Int)
(declare-fun x2861 () Bool)
(declare-fun x4280 () Bool)
(declare-fun x3153 () Bool)
(declare-fun x1890 () Bool)
(declare-fun x7738 () Int)
(declare-fun x742 () Bool)
(declare-fun x6862 () Bool)
(declare-fun x6716 () Int)
(declare-fun x2839 () Int)
(declare-fun x7450 () Bool)
(declare-fun x1592 () Int)
(declare-fun x4843 () Bool)
(declare-fun x5190 () Int)
(declare-fun x6325 () Bool)
(declare-fun x5726 () Int)
(declare-fun x1029 () Bool)
(declare-fun x458 () Bool)
(declare-fun x4479 () Int)
(declare-fun x888 () Int)
(declare-fun x2121 () Bool)
(declare-fun x5702 () Bool)
(declare-fun x6518 () Int)
(declare-fun x5959 () Int)
(declare-fun x1963 () Int)
(declare-fun x860 () Int)
(declare-fun x4841 () Int)
(declare-fun x8546 () Int)
(declare-fun x2368 () Int)
(declare-fun x383 () Bool)
(declare-fun x4876 () Int)
(declare-fun x5187 () Int)
(declare-fun x6016 () Bool)
(declare-fun x5989 () Int)
(declare-fun x5982 () Int)
(declare-fun x5320 () Bool)
(declare-fun x3362 () Int)
(declare-fun x7368 () Int)
(declare-fun x3444 () Int)
(declare-fun x3887 () Bool)
(declare-fun x3707 () Int)
(declare-fun x4512 () Int)
(declare-fun x7939 () Int)
(declare-fun x3842 () Int)
(declare-fun x7284 () Bool)
(declare-fun x5243 () Bool)
(declare-fun x4440 () Bool)
(declare-fun x7935 () Bool)
(declare-fun x857 () Int)
(declare-fun x4235 () Int)
(declare-fun x6269 () Bool)
(declare-fun x768 () Bool)
(declare-fun x5795 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x4974 () Bool)
(declare-fun x5495 () Bool)
(declare-fun x717 () Int)
(declare-fun x8189 () Bool)
(declare-fun x4540 () Bool)
(declare-fun x8183 () Int)
(declare-fun x5806 () Int)
(declare-fun x1616 () Bool)
(declare-fun x114 () Int)
(declare-fun x3544 () Int)
(declare-fun x8210 () Int)
(declare-fun x4435 () Int)
(declare-fun x3119 () Bool)
(declare-fun x7289 () Int)
(declare-fun x8344 () Int)
(declare-fun x2633 () Int)
(declare-fun x4658 () Int)
(declare-fun x6263 () Int)
(declare-fun x2172 () Int)
(declare-fun x818 () Int)
(declare-fun x4482 () Bool)
(declare-fun x3211 () Int)
(declare-fun x1632 () Int)
(declare-fun x2741 () Bool)
(declare-fun x8059 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x7350 () Bool)
(declare-fun x8157 () Int)
(declare-fun x5916 () Int)
(declare-fun x5810 () Int)
(declare-fun x5212 () Int)
(declare-fun x3040 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x1562 () Int)
(declare-fun x7646 () Bool)
(declare-fun x4206 () Int)
(declare-fun x4363 () Bool)
(declare-fun x7072 () Bool)
(declare-fun x3020 () Int)
(declare-fun x2361 () Bool)
(declare-fun x6840 () Int)
(declare-fun x5747 () Bool)
(declare-fun x3792 () Int)
(declare-fun x409 () Int)
(declare-fun x8193 () Bool)
(declare-fun x8235 () Bool)
(declare-fun x1404 () Int)
(declare-fun x5129 () Int)
(declare-fun x3518 () Int)
(declare-fun x4779 () Bool)
(declare-fun x4768 () Bool)
(declare-fun x8529 () Int)
(declare-fun x3451 () Bool)
(declare-fun x5619 () Int)
(declare-fun x7584 () Int)
(declare-fun x7435 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x8353 () Int)
(declare-fun x7991 () Int)
(declare-fun x2654 () Bool)
(declare-fun x647 () Int)
(declare-fun x1966 () Bool)
(declare-fun x8355 () Int)
(declare-fun x3107 () Bool)
(declare-fun x6717 () Int)
(declare-fun x4236 () Int)
(declare-fun x907 () Int)
(declare-fun x670 () Int)
(declare-fun x1277 () Bool)
(declare-fun x3959 () Int)
(declare-fun x204 () Bool)
(declare-fun x3577 () Bool)
(declare-fun x8333 () Bool)
(declare-fun x6527 () Bool)
(declare-fun x707 () Bool)
(declare-fun x6698 () Bool)
(declare-fun x5764 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x5002 () Int)
(declare-fun x6295 () Int)
(declare-fun x6191 () Bool)
(declare-fun x6497 () Bool)
(declare-fun x892 () Bool)
(declare-fun x2579 () Int)
(declare-fun x4514 () Int)
(declare-fun x7302 () Bool)
(declare-fun x6803 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x3963 () Int)
(declare-fun x5366 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x6014 () Int)
(declare-fun x1195 () Bool)
(declare-fun x2666 () Bool)
(declare-fun x7143 () Bool)
(declare-fun x6251 () Int)
(declare-fun x5531 () Int)
(declare-fun x6654 () Bool)
(declare-fun x2510 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x3011 () Int)
(declare-fun x7884 () Int)
(declare-fun x6105 () Int)
(declare-fun x4759 () Bool)
(declare-fun x3750 () Int)
(declare-fun x4939 () Bool)
(declare-fun x4375 () Bool)
(declare-fun x8070 () Int)
(declare-fun x162 () Int)
(declare-fun x2256 () Int)
(declare-fun x7231 () Int)
(declare-fun x4323 () Bool)
(declare-fun x3315 () Int)
(declare-fun x8129 () Bool)
(declare-fun x595 () Bool)
(declare-fun x5658 () Int)
(declare-fun x6832 () Int)
(declare-fun x1765 () Int)
(declare-fun x8562 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x3256 () Int)
(declare-fun x951 () Bool)
(declare-fun x8290 () Bool)
(declare-fun x2944 () Int)
(declare-fun x2287 () Int)
(declare-fun x843 () Int)
(declare-fun x2155 () Bool)
(declare-fun x7427 () Bool)
(declare-fun x2482 () Int)
(declare-fun x1738 () Bool)
(declare-fun x5081 () Bool)
(declare-fun x6448 () Int)
(declare-fun x438 () Int)
(declare-fun x7119 () Int)
(declare-fun x6515 () Int)
(declare-fun x7601 () Int)
(declare-fun x5169 () Int)
(declare-fun x5552 () Int)
(declare-fun x5904 () Int)
(declare-fun x5153 () Int)
(declare-fun x1524 () Int)
(declare-fun x6464 () Int)
(declare-fun x4905 () Int)
(declare-fun x2070 () Int)
(declare-fun x2533 () Int)
(declare-fun x666 () Int)
(declare-fun x1252 (Int) Int)
(declare-fun x7713 () Bool)
(declare-fun x7741 () Int)
(declare-fun x3967 () Int)
(declare-fun x887 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x1062 () Int)
(declare-fun x7744 () Int)
(declare-fun x549 () Int)
(declare-fun x4061 () Int)
(declare-fun x4449 () Bool)
(declare-fun x846 () Int)
(declare-fun x578 () Bool)
(declare-fun x186 () Bool)
(declare-fun x568 () Int)
(declare-fun x5170 () Bool)
(declare-fun x4329 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x6542 () Int)
(declare-fun x2393 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x4829 () Bool)
(declare-fun x7154 () Bool)
(declare-fun x7233 () Int)
(declare-fun x6825 () Int)
(declare-fun x1982 () Int)
(declare-fun x3595 () Int)
(declare-fun x4278 () Int)
(declare-fun x4526 () Int)
(declare-fun x8273 () Int)
(declare-fun x4574 () Int)
(declare-fun x4313 () Int)
(declare-fun x8178 () Bool)
(declare-fun x4095 () Int)
(declare-fun x5412 () Bool)
(declare-fun x2034 () Int)
(declare-fun x7568 () Int)
(declare-fun x2143 () Int)
(declare-fun x6005 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x2348 () Int)
(declare-fun x6234 () Bool)
(declare-fun x1095 (Int) Int)
(declare-fun x6876 () Bool)
(declare-fun x8155 () Bool)
(declare-fun x3309 () Int)
(declare-fun x4346 () Int)
(declare-fun x5969 () Int)
(declare-fun x3104 () Int)
(declare-fun x6749 () Int)
(declare-fun x3382 () Bool)
(declare-fun x2486 () Int)
(declare-fun x3435 () Int)
(declare-fun x2670 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1429 () Int)
(declare-fun x1670 () Bool)
(declare-fun x5303 () Int)
(declare-fun x706 () Int)
(declare-fun x3775 () Bool)
(declare-fun x4722 () Int)
(declare-fun x1379 () Int)
(declare-fun x6590 () Int)
(declare-fun x7374 () Int)
(declare-fun x4308 () Bool)
(declare-fun x3658 () Int)
(declare-fun x1790 () Bool)
(declare-fun x5946 () Int)
(declare-fun x1439 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x4052 () Bool)
(declare-fun x5367 () Int)
(declare-fun x3407 () Int)
(declare-fun x2041 () Int)
(declare-fun x4359 () Int)
(declare-fun x6337 () Int)
(declare-fun x8457 () Int)
(declare-fun x4485 () Int)
(declare-fun x3799 () Int)
(declare-fun x5797 () Int)
(declare-fun x6661 () Int)
(declare-fun x2301 () Int)
(declare-fun x6623 () Int)
(declare-fun x8058 () Bool)
(declare-fun x131 () Int)
(declare-fun x8252 () Int)
(declare-fun x4670 () Bool)
(declare-fun x6643 () Bool)
(declare-fun x8425 () Bool)
(declare-fun x3142 () Bool)
(declare-fun x7555 () Bool)
(declare-fun x271 () Bool)
(declare-fun x8071 () Bool)
(declare-fun x4433 () Int)
(declare-fun x2012 () Bool)
(declare-fun x6399 () Int)
(declare-fun x2465 () Int)
(declare-fun x2545 () Int)
(declare-fun x5208 () Bool)
(declare-fun x8105 () Int)
(declare-fun x6056 () Int)
(declare-fun x310 () Bool)
(declare-fun x4086 () Bool)
(declare-fun x5858 () Int)
(declare-fun x8127 () Bool)
(declare-fun x6790 () Int)
(declare-fun x1459 () Int)
(declare-fun x1633 () Bool)
(declare-fun x5650 () Int)
(declare-fun x69 () Int)
(declare-fun x1436 () Bool)
(declare-fun x8362 () Bool)
(declare-fun x555 () Bool)
(declare-fun x7533 () Bool)
(declare-fun x7682 () Bool)
(declare-fun x8531 () Int)
(declare-fun x7640 () Bool)
(declare-fun x4460 () Bool)
(declare-fun x100 () Int)
(declare-fun x2803 () Bool)
(declare-fun x1323 () Int)
(declare-fun x2337 () Int)
(declare-fun x3566 () Bool)
(declare-fun x1834 () Int)
(declare-fun x678 () Int)
(declare-fun x1846 () Bool)
(declare-fun x7608 () Int)
(declare-fun x4146 () Bool)
(declare-fun x1197 () Int)
(declare-fun x3197 () Int)
(declare-fun x7329 () Int)
(declare-fun x2860 () Int)
(declare-fun x7159 () Bool)
(declare-fun x1847 () Int)
(declare-fun x5994 () Bool)
(declare-fun x7787 () Int)
(declare-fun x6077 () Bool)
(declare-fun x6681 () Int)
(declare-fun x7973 () Int)
(declare-fun x2164 () Bool)
(declare-fun x4145 () Bool)
(declare-fun x3077 (Int) Int)
(declare-fun x3194 () Bool)
(declare-fun x5044 () Bool)
(declare-fun x5627 () Int)
(declare-fun x6366 () Int)
(declare-fun x8220 () Bool)
(declare-fun x7216 () Int)
(declare-fun x7059 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x7306 () Bool)
(declare-fun x5281 () Int)
(declare-fun x3387 () Int)
(declare-fun x1137 () Int)
(declare-fun x612 () Int)
(declare-fun x7663 () Int)
(declare-fun x7968 () Int)
(declare-fun x8514 () Int)
(declare-fun x3350 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x2990 () Bool)
(declare-fun x8478 () Bool)
(declare-fun x3965 () Int)
(declare-fun x3000 () Int)
(declare-fun x2087 () Bool)
(declare-fun x3617 () Bool)
(declare-fun x7833 () Bool)
(declare-fun x5285 () Bool)
(declare-fun x952 () Int)
(declare-fun x5196 () Bool)
(declare-fun x8387 () Bool)
(declare-fun x551 (Int) Int)
(declare-fun x3528 () Int)
(declare-fun x4054 () Int)
(declare-fun x2645 () Bool)
(declare-fun x5706 () Bool)
(declare-fun x6219 () Bool)
(declare-fun x4229 () Int)
(declare-fun x8007 () Int)
(declare-fun x4700 () Bool)
(declare-fun x7453 () Bool)
(declare-fun x6137 () Int)
(declare-fun x1534 () Bool)
(declare-fun x3261 () Bool)
(declare-fun x567 () Int)
(declare-fun x6209 () Bool)
(declare-fun x1786 () Int)
(declare-fun x3082 () Int)
(declare-fun x8540 () Int)
(declare-fun x7369 () Int)
(declare-fun x7370 () Bool)
(declare-fun x986 () Int)
(declare-fun x1842 () Int)
(declare-fun x2610 () Bool)
(declare-fun x4558 (Int) Int)
(declare-fun x4719 () Int)
(declare-fun x4785 () Bool)
(declare-fun x2634 () Int)
(declare-fun x299 () Int)
(declare-fun x5873 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1223 () Bool)
(declare-fun x19 () Int)
(declare-fun x2432 () Bool)
(declare-fun x5483 () Bool)
(declare-fun x5648 () Bool)
(declare-fun x3870 () Int)
(declare-fun x5931 () Bool)
(declare-fun x1357 () Int)
(declare-fun x8480 () Bool)
(declare-fun x6808 () Int)
(declare-fun x2991 () Int)
(declare-fun x982 () Bool)
(declare-fun x1649 () Int)
(declare-fun x200 () Int)
(declare-fun x7063 () Int)
(declare-fun x465 () Bool)
(declare-fun x5789 () Bool)
(declare-fun x263 () Bool)
(declare-fun x8340 () Int)
(declare-fun x297 (Int) Int)
(declare-fun x2548 () Bool)
(declare-fun x1701 () Int)
(declare-fun x3778 (Int) Int)
(declare-fun x4650 () Int)
(declare-fun x1869 () Bool)
(declare-fun x5961 () Int)
(declare-fun x7690 () Bool)
(declare-fun x2960 () Int)
(declare-fun x5377 () Int)
(declare-fun x553 () Int)
(declare-fun x835 () Bool)
(declare-fun x7577 () Int)
(declare-fun x6556 () Int)
(declare-fun x1942 () Bool)
(declare-fun x5513 () Int)
(declare-fun x2745 () Bool)
(declare-fun x5579 () Int)
(declare-fun x1814 () Int)
(declare-fun x6279 () Bool)
(declare-fun x1805 () Int)
(declare-fun x7278 () Bool)
(declare-fun x8539 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x4893 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x7062 () Int)
(declare-fun x1949 () Int)
(declare-fun x6559 () Bool)
(declare-fun x8194 () Int)
(declare-fun x5566 () Bool)
(declare-fun x252 () Bool)
(declare-fun x3278 () Bool)
(declare-fun x3888 () Int)
(declare-fun x7699 () Int)
(declare-fun x5305 () Int)
(declare-fun x4141 (Int) Int)
(declare-fun x6461 () Int)
(declare-fun x4117 (Int) Int)
(declare-fun x7017 () Bool)
(declare-fun x7784 () Bool)
(declare-fun x7839 () Int)
(declare-fun x544 () Bool)
(declare-fun x1680 () Int)
(declare-fun x6812 () Bool)
(declare-fun x5456 () Int)
(declare-fun x2119 () Bool)
(declare-fun x5140 () Int)
(declare-fun x719 () Int)
(declare-fun x1636 () Bool)
(declare-fun x2605 () Int)
(declare-fun x7033 () Bool)
(declare-fun x3027 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x436 () Bool)
(declare-fun x5891 () Int)
(declare-fun x1806 () Bool)
(declare-fun x5576 () Bool)
(declare-fun x8086 () Bool)
(declare-fun x2953 () Int)
(declare-fun x1799 () Bool)
(declare-fun x1402 () Int)
(declare-fun x4973 () Bool)
(declare-fun x7074 () Int)
(declare-fun x574 () Int)
(declare-fun x1299 () Bool)
(declare-fun x7511 () Bool)
(declare-fun x471 () Int)
(declare-fun x7107 () Bool)
(declare-fun x5985 () Int)
(declare-fun x8447 () Bool)
(declare-fun x8497 () Bool)
(declare-fun x6128 () Int)
(declare-fun x2186 () Bool)
(declare-fun x2241 () Int)
(declare-fun x6737 () Int)
(declare-fun x4023 () Int)
(declare-fun x1071 () Int)
(declare-fun x3589 () Bool)
(declare-fun x7757 () Int)
(declare-fun x6593 () Bool)
(declare-fun x8080 () Int)
(declare-fun x5164 () Bool)
(declare-fun x203 () Bool)
(declare-fun x3717 () Bool)
(declare-fun x4544 () Int)
(declare-fun x6120 () Bool)
(declare-fun x8568 () Bool)
(declare-fun x5783 () Int)
(declare-fun x5098 () Int)
(declare-fun x7296 () Bool)
(declare-fun x2982 () Bool)
(declare-fun x5624 () Int)
(declare-fun x7479 () Int)
(declare-fun x3225 () Bool)
(declare-fun x1145 () Int)
(declare-fun x5108 () Int)
(declare-fun x1356 () Bool)
(declare-fun x7417 () Int)
(declare-fun x7497 () Int)
(declare-fun x5180 () Bool)
(declare-fun x7778 () Int)
(declare-fun x8334 () Int)
(declare-fun x7878 () Bool)
(declare-fun x4797 () Int)
(declare-fun x4378 () Int)
(declare-fun x1368 () Int)
(declare-fun x7087 () Int)
(declare-fun x3780 () Bool)
(declare-fun x8279 () Bool)
(declare-fun x8414 () Int)
(declare-fun x4306 () Bool)
(declare-fun x2183 () Int)
(declare-fun x6896 () Bool)
(declare-fun x4814 () Int)
(declare-fun x1025 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x1508 () Int)
(declare-fun x343 () Int)
(declare-fun x5787 () Int)
(declare-fun x3274 () Int)
(declare-fun x6962 () Bool)
(declare-fun x4899 () Int)
(declare-fun x6437 () Int)
(declare-fun x7789 () Int)
(declare-fun x7445 () Bool)
(declare-fun x8373 () Bool)
(declare-fun x5692 () Bool)
(declare-fun x432 () Int)
(declare-fun x6391 () Bool)
(declare-fun x7358 () Int)
(declare-fun x3718 () Bool)
(declare-fun x4428 () Int)
(declare-fun x2981 () Int)
(declare-fun x4096 () Int)
(declare-fun x8317 () Int)
(declare-fun x3210 () Int)
(declare-fun x4490 () Int)
(declare-fun x7671 () Int)
(declare-fun x739 () Int)
(declare-fun x1506 () Int)
(declare-fun x7970 () Bool)
(declare-fun x7102 () Int)
(declare-fun x800 (Int) Int)
(declare-fun x8471 () Int)
(declare-fun x2719 () Int)
(declare-fun x1328 () Bool)
(declare-fun x7974 () Int)
(declare-fun x3702 () Int)
(declare-fun x3715 () Bool)
(declare-fun x2199 () Int)
(declare-fun x175 () Bool)
(declare-fun x7483 () Int)
(declare-fun x5019 () Int)
(declare-fun x5765 () Bool)
(declare-fun x6618 () Bool)
(declare-fun x189 () Int)
(declare-fun x3756 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x5504 () Bool)
(declare-fun x4550 () Bool)
(declare-fun x1637 () Int)
(declare-fun x335 () Int)
(declare-fun x4821 () Bool)
(declare-fun x2734 () Int)
(declare-fun x5522 () Int)
(declare-fun x8345 () Int)
(declare-fun x5096 () Int)
(declare-fun x6226 () Int)
(declare-fun x5876 () Int)
(declare-fun x898 () Bool)
(declare-fun x8458 () Int)
(declare-fun x743 () Bool)
(declare-fun x7179 () Int)
(declare-fun x6315 () Int)
(declare-fun x5682 () Bool)
(declare-fun x4215 () Int)
(declare-fun x8151 () Int)
(declare-fun x3242 () Int)
(declare-fun x7797 () Int)
(declare-fun x2360 () Bool)
(declare-fun x3394 () Int)
(declare-fun x6982 () Bool)
(declare-fun x7895 () Int)
(declare-fun x1427 () Int)
(declare-fun x6690 () Int)
(declare-fun x3075 () Bool)
(declare-fun x6797 () Bool)
(declare-fun x6163 () Int)
(declare-fun x5325 () Int)
(declare-fun x1224 () Int)
(declare-fun x6856 () Bool)
(declare-fun x2161 () Int)
(declare-fun x374 () Bool)
(declare-fun x7194 () Int)
(declare-fun x5433 () Int)
(declare-fun x1612 () Int)
(declare-fun x2999 () Int)
(declare-fun x2332 () Int)
(declare-fun x6650 () Int)
(declare-fun x7419 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x7 () Bool)
(declare-fun x8244 () Int)
(declare-fun x2554 () Bool)
(declare-fun x4842 () Int)
(declare-fun x2910 () Bool)
(declare-fun x4897 () Int)
(declare-fun x1262 () Int)
(declare-fun x91 () Bool)
(declare-fun x7528 () Int)
(declare-fun x954 () Int)
(declare-fun x6332 () Int)
(declare-fun x8011 () Bool)
(declare-fun x8014 () Int)
(declare-fun x7307 () Bool)
(declare-fun x4321 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x6835 () Bool)
(declare-fun x3352 () Int)
(declare-fun x6136 () Bool)
(declare-fun x3821 () Bool)
(declare-fun x4595 () Int)
(declare-fun x7430 () Int)
(declare-fun x2064 () Int)
(declare-fun x600 () Bool)
(declare-fun x4126 () Int)
(declare-fun x2035 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x6965 () Int)
(declare-fun x7936 () Int)
(declare-fun x7722 () Int)
(declare-fun x1734 () Int)
(declare-fun x2832 () Bool)
(declare-fun x4366 () Int)
(declare-fun x849 () Bool)
(declare-fun x5887 () Bool)
(declare-fun x587 () Int)
(declare-fun x1008 () Int)
(declare-fun x6764 () Int)
(declare-fun x5678 () Int)
(declare-fun x6708 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x84 () Int)
(declare-fun x3695 () Int)
(declare-fun x6793 () Int)
(declare-fun x4282 () Int)
(declare-fun x3564 () Int)
(declare-fun x7222 () Bool)
(declare-fun x4159 () Int)
(declare-fun x5655 () Int)
(declare-fun x3471 () Int)
(declare-fun x498 () Int)
(declare-fun x2069 () Int)
(declare-fun x8506 () Bool)
(declare-fun x455 () Bool)
(declare-fun x7830 () Bool)
(declare-fun x1820 () Int)
(declare-fun x7687 () Bool)
(declare-fun x3910 () Bool)
(declare-fun x4957 () Bool)
(declare-fun x2127 () Int)
(declare-fun x8265 () Bool)
(declare-fun x4269 () Bool)
(declare-fun x4137 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x428 () Int)
(declare-fun x5226 () Bool)
(declare-fun x171 () Int)
(declare-fun x1785 () Int)
(declare-fun x3991 () Int)
(declare-fun x4969 () Bool)
(declare-fun x300 () Int)
(declare-fun x8402 () Int)
(declare-fun x3612 () Int)
(declare-fun x6534 () Bool)
(declare-fun x1625 () Int)
(declare-fun x423 () Bool)
(declare-fun x6891 (Int) Int)
(declare-fun x136 () Int)
(declare-fun x7915 () Int)
(declare-fun x2407 () Int)
(declare-fun x806 () Int)
(declare-fun x5895 () Int)
(declare-fun x3410 () Bool)
(declare-fun x7481 () Bool)
(declare-fun x8275 () Bool)
(declare-fun x1433 () Int)
(declare-fun x3343 () Int)
(declare-fun x4573 () Bool)
(declare-fun x8216 () Bool)
(declare-fun x4332 (Int) Int)
(declare-fun x2893 () Bool)
(declare-fun x6330 () Int)
(declare-fun x8047 () Bool)
(declare-fun x5156 () Bool)
(declare-fun x2083 () Int)
(declare-fun x4604 () Int)
(declare-fun x6959 () Int)
(declare-fun x5360 () Int)
(declare-fun x1964 () Bool)
(declare-fun x6769 () Int)
(declare-fun x7447 () Int)
(declare-fun x7262 () Bool)
(declare-fun x5609 () Bool)
(declare-fun x4952 () Int)
(declare-fun x4283 () Int)
(declare-fun x1082 () Int)
(declare-fun x1176 () Int)
(declare-fun x8348 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2076 (Int) Int)
(declare-fun x2473 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1296 () Int)
(declare-fun x538 () Int)
(declare-fun x2984 (Int) Int)
(declare-fun x7068 () Int)
(declare-fun x1815 () Bool)
(declare-fun x6584 () Bool)
(declare-fun x5124 () Bool)
(declare-fun x8410 () Bool)
(declare-fun x807 () Bool)
(declare-fun x6002 () Int)
(declare-fun x2207 () Int)
(declare-fun x137 () Int)
(declare-fun x3664 () Bool)
(declare-fun x7290 () Int)
(declare-fun x7315 () Bool)
(declare-fun x4205 () Bool)
(declare-fun x4256 () Bool)
(declare-fun x2040 () Int)
(declare-fun x2431 () Bool)
(declare-fun x4326 () Bool)
(declare-fun x8064 () Int)
(declare-fun x5582 () Int)
(declare-fun x7688 () Int)
(declare-fun x557 () Int)
(declare-fun x4451 () Int)
(declare-fun x4804 () Int)
(declare-fun x7241 () Bool)
(declare-fun x6351 () Int)
(declare-fun x4560 () Int)
(declare-fun x4593 () Int)
(declare-fun x2925 () Bool)
(declare-fun x8366 () Int)
(declare-fun x5470 () Bool)
(declare-fun x382 () Int)
(declare-fun x4152 () Bool)
(declare-fun x6250 () Bool)
(declare-fun x1621 () Int)
(declare-fun x7626 () Int)
(declare-fun x2877 () Int)
(declare-fun x2970 () Int)
(declare-fun x8330 () Bool)
(declare-fun x3443 () Bool)
(declare-fun x5062 () Bool)
(declare-fun x4586 () Bool)
(declare-fun x2939 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x7221 () Bool)
(declare-fun x4049 () Int)
(declare-fun x2553 () Bool)
(declare-fun x7318 () Int)
(declare-fun x5172 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x1449 () Int)
(declare-fun x3569 () Bool)
(declare-fun x6080 () Bool)
(declare-fun x4922 () Int)
(declare-fun x3689 () Int)
(declare-fun x6007 () Bool)
(declare-fun x5309 () Int)
(declare-fun x3272 () Int)
(declare-fun x366 () Int)
(declare-fun x1 () Int)
(declare-fun x5796 () Int)
(declare-fun x1462 () Int)
(declare-fun x6469 () Int)
(declare-fun x3032 () Bool)
(declare-fun x3246 () Bool)
(declare-fun x462 () Bool)
(declare-fun x8020 () Int)
(declare-fun x805 () Int)
(declare-fun x495 () Int)
(declare-fun x6604 () Bool)
(declare-fun x2386 () Int)
(declare-fun x3729 () Int)
(declare-fun x7774 () Bool)
(declare-fun x3262 () Int)
(declare-fun x4782 () Int)
(declare-fun x5581 () Bool)
(declare-fun x1314 () Int)
(declare-fun x4207 () Bool)
(declare-fun x7260 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x4805 () Int)
(declare-fun x218 () Int)
(declare-fun x7158 () Int)
(declare-fun x2358 () Bool)
(declare-fun x7747 () Bool)
(declare-fun x64 () Bool)
(declare-fun x2842 () Int)
(declare-fun x50 () Bool)
(declare-fun x267 () Int)
(declare-fun x5137 () Bool)
(declare-fun x7235 () Int)
(declare-fun x5830 () Bool)
(declare-fun x6373 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x4695 () Int)
(declare-fun x2285 () Int)
(declare-fun x2043 () Bool)
(declare-fun x7251 () Int)
(declare-fun x3994 () Bool)
(declare-fun x2031 () Int)
(declare-fun x4950 () Int)
(declare-fun x3025 () Int)
(declare-fun x6400 () Int)
(declare-fun x3340 () Int)
(declare-fun x4495 () Int)
(declare-fun x4172 () Bool)
(declare-fun x2810 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x1468 () Int)
(declare-fun x2503 () Bool)
(declare-fun x216 () Int)
(declare-fun x7911 () Int)
(declare-fun x7755 () Bool)
(declare-fun x3280 () Int)
(declare-fun x5549 () Int)
(declare-fun x1488 () Bool)
(declare-fun x964 () Int)
(declare-fun x5354 () Int)
(declare-fun x2489 () Int)
(declare-fun x3273 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x7152 () Int)
(declare-fun x6620 () Bool)
(declare-fun x4632 () Int)
(declare-fun x4342 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x4258 () Int)
(declare-fun x4549 () Bool)
(declare-fun x4591 () Bool)
(declare-fun x2628 () Bool)
(declare-fun x8420 () Int)
(declare-fun x4817 () Bool)
(declare-fun x3430 () Int)
(declare-fun x3054 () Bool)
(declare-fun x8454 () Int)
(declare-fun x1552 () Bool)
(declare-fun x3120 () Int)
(declare-fun x7777 () Int)
(declare-fun x7411 () Int)
(declare-fun x4286 () Bool)
(declare-fun x3316 () Bool)
(declare-fun x5347 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x1856 () Int)
(declare-fun x5402 () Bool)
(declare-fun x6154 () Int)
(declare-fun x7965 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x5667 () Int)
(declare-fun x6920 () Int)
(declare-fun x9 () Int)
(declare-fun x1791 () Bool)
(declare-fun x7940 () Int)
(declare-fun x5816 () Int)
(declare-fun x4003 () Bool)
(declare-fun x7783 () Int)
(declare-fun x1938 () Int)
(declare-fun x6354 () Bool)
(declare-fun x4655 () Int)
(declare-fun x468 () Bool)
(declare-fun x1136 () Int)
(declare-fun x6796 () Bool)
(declare-fun x7629 () Int)
(declare-fun x8217 () Int)
(declare-fun x5041 () Int)
(declare-fun x3971 () Int)
(declare-fun x7387 () Bool)
(declare-fun x4154 () Int)
(declare-fun x2950 () Bool)
(declare-fun x971 () Int)
(declare-fun x970 () Int)
(declare-fun x2469 () Int)
(declare-fun x39 () Int)
(declare-fun x8603 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x8031 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x3862 () Int)
(declare-fun x2374 () Bool)
(declare-fun x710 () Int)
(declare-fun x7128 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x637 () Bool)
(declare-fun x546 (Int) Int)
(declare-fun x6895 () Int)
(declare-fun x6941 () Int)
(declare-fun x5849 () Int)
(declare-fun x3015 () Bool)
(declare-fun x5434 () Int)
(declare-fun x5524 () Int)
(declare-fun x208 () Int)
(declare-fun x1067 () Bool)
(declare-fun x702 () Int)
(declare-fun x6942 () Int)
(declare-fun x2498 () Int)
(declare-fun x6213 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x7982 () Int)
(declare-fun x7548 () Int)
(declare-fun x6619 () Bool)
(declare-fun x5064 () Bool)
(declare-fun x3921 () Bool)
(declare-fun x5679 () Bool)
(declare-fun x5395 () Bool)
(declare-fun x237 () Int)
(declare-fun x896 () Bool)
(declare-fun x3098 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x3741 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x8055 () Int)
(declare-fun x273 () Int)
(declare-fun x1248 () Bool)
(declare-fun x3819 () Int)
(declare-fun x5593 () Int)
(declare-fun x2209 () Int)
(declare-fun x7704 () Int)
(declare-fun x7579 () Bool)
(declare-fun x7465 () Int)
(declare-fun x708 () Int)
(declare-fun x4758 () Int)
(declare-fun x6270 () Bool)
(declare-fun x4081 () Bool)
(declare-fun x6904 () Bool)
(declare-fun x796 () Int)
(declare-fun x1841 (Int) Int)
(declare-fun x7224 () Bool)
(declare-fun x6447 () Bool)
(declare-fun x2025 () Int)
(declare-fun x1875 () Int)
(declare-fun x788 () Int)
(declare-fun x4296 () Bool)
(declare-fun x7904 () Int)
(declare-fun x841 () Bool)
(declare-fun x5296 () Int)
(declare-fun x2033 () Bool)
(declare-fun x4766 () Bool)
(declare-fun x8166 () Int)
(declare-fun x1646 () Bool)
(declare-fun x2938 () Int)
(declare-fun x8515 () Int)
(declare-fun x1863 () Bool)
(declare-fun x6571 () Bool)
(declare-fun x6893 () Int)
(declare-fun x3125 () Bool)
(declare-fun x5132 () Bool)
(declare-fun x6273 () Int)
(declare-fun x7332 () Int)
(declare-fun x6168 () Int)
(declare-fun x3494 () Bool)
(declare-fun x7544 () Int)
(declare-fun x1892 () Int)
(declare-fun x3002 () Int)
(declare-fun x4290 () Int)
(declare-fun x6208 () Bool)
(declare-fun x3140 () Bool)
(declare-fun x4496 () Int)
(declare-fun x2570 () Bool)
(declare-fun x6406 () Int)
(declare-fun x188 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x1664 () Int)
(declare-fun x7121 () Int)
(declare-fun x8575 () Int)
(declare-fun x4093 () Int)
(declare-fun x2627 () Bool)
(declare-fun x8212 () Bool)
(declare-fun x2543 () Bool)
(declare-fun x6909 () Bool)
(declare-fun x3641 () Int)
(declare-fun x1851 () Bool)
(declare-fun x7437 () Bool)
(declare-fun x6063 () Int)
(declare-fun x5008 () Int)
(declare-fun x7953 () Int)
(declare-fun x4149 () Int)
(declare-fun x2674 (Int) Bool)
(declare-fun x4984 () Int)
(declare-fun x8524 () Int)
(declare-fun x2966 () Bool)
(declare-fun x228 () Int)
(declare-fun x6015 () Int)
(declare-fun x4865 () Int)
(declare-fun x67 () Int)
(declare-fun x1932 () Int)
(declare-fun x2409 () Int)
(declare-fun x5506 () Int)
(declare-fun x4545 () Int)
(declare-fun x5104 () Int)
(declare-fun x2384 () Bool)
(declare-fun x1116 (Int) Int)
(declare-fun x8494 () Int)
(declare-fun x1735 () Int)
(declare-fun x1931 () Int)
(declare-fun x8111 () Int)
(declare-fun x3514 () Bool)
(declare-fun x1945 () Int)
(declare-fun x3283 () Int)
(declare-fun x2061 () Bool)
(declare-fun x8592 () Int)
(declare-fun x8464 () Bool)
(declare-fun x1393 () Int)
(declare-fun x2273 () Int)
(declare-fun x7753 () Bool)
(declare-fun x6415 () Int)
(declare-fun x7042 () Int)
(declare-fun x2615 () Int)
(declare-fun x4991 () Bool)
(declare-fun x6709 () Bool)
(declare-fun x4764 () Bool)
(declare-fun x7174 () Int)
(declare-fun x746 () Int)
(declare-fun x5897 () Bool)
(declare-fun x4473 () Bool)
(declare-fun x4450 () Int)
(declare-fun x4056 () Int)
(declare-fun x1758 () Int)
(declare-fun x3588 () Int)
(declare-fun x5465 () Int)
(declare-fun x7213 () Bool)
(declare-fun x8036 () Int)
(declare-fun x8437 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x2994 () Int)
(declare-fun x5519 () Int)
(declare-fun x5101 () Int)
(declare-fun x4488 () Int)
(declare-fun x3855 () Bool)
(declare-fun x5457 () Bool)
(declare-fun x4275 () Int)
(declare-fun x3088 () Int)
(declare-fun x4806 () Bool)
(declare-fun x5048 () Bool)
(declare-fun x4470 () Bool)
(declare-fun x8413 () Int)
(declare-fun x3872 () Bool)
(declare-fun x6238 () Bool)
(declare-fun x4745 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x8435 () Bool)
(declare-fun x3828 () Bool)
(declare-fun x7422 () Int)
(declare-fun x2192 () Int)
(declare-fun x8541 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x4498 () Int)
(declare-fun x6487 () Bool)
(declare-fun x3690 () Int)
(declare-fun x339 () Bool)
(declare-fun x7436 () Int)
(declare-fun x2537 () Int)
(declare-fun x8399 () Bool)
(declare-fun x2564 () Int)
(declare-fun x6848 () Int)
(declare-fun x6121 () Int)
(declare-fun x876 () Bool)
(declare-fun x4997 () Int)
(declare-fun x7851 () Int)
(declare-fun x1965 () Bool)
(declare-fun x6285 () Bool)
(declare-fun x7650 () Int)
(declare-fun x1217 () Bool)
(declare-fun x5024 () Int)
(declare-fun x8295 () Int)
(declare-fun x3753 () Int)
(declare-fun x6305 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x6969 () Bool)
(declare-fun x145 () Bool)
(declare-fun x2100 () Int)
(declare-fun x5811 () Int)
(declare-fun x4099 () Bool)
(declare-fun x6438 () Int)
(declare-fun x2943 () Int)
(declare-fun x1304 () Int)
(declare-fun x5846 () Bool)
(declare-fun x368 () Int)
(declare-fun x5621 () Bool)
(declare-fun x6892 () Int)
(declare-fun x3103 () Int)
(declare-fun x6088 () Int)
(declare-fun x2891 () Bool)
(declare-fun x3593 () Int)
(define-fun x5665 ((x4027 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4027) (>= x4027 0)) x4027 (- x4027 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x4456 ((x4027 Int)) Int (ite (and (< x4027 0) (>= x4027 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x4027 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4027))
(define-fun x3846 ((x4027 Int)) Int (ite (and (>= x4027 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4027)) x4027 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4027) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x4027)) (- x4027 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x4027 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x4027 0)) (+ x4027 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2930 x4027 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x4101 ((x6988 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6988) (<= 0 x6988)))
(define-fun x2496 ((x6988 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6988) (>= x6988 0)))
(define-fun x6765 ((x6988 Int) (x3385 Int)) Bool (= (* x3385 x6988) (x6196 x6988 x3385)))
(define-fun x5745 ((x6988 Int) (x3385 Int)) Bool (and (= (- (* (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936) x6988) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x6196 (- x6988 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x6196 x6988 (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x6988 (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x3385 x6988) (* x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x6196 (- x6988 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3385))))
(define-fun x8453 ((x6988 Int) (x3385 Int)) Bool (=> (and (< 0 x6988) (< 0 x3385)) (= (= x3385 (x8297 (x3846 (x6196 x6988 x3385)) x6988)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6196 x6988 x3385)))))
(define-fun x6382 ((x6988 Int) (x3385 Int)) Bool (=> (and (not (= x3385 0)) (not (= 0 x6988))) (and (= (x8297 (x6196 x6988 x3385) x6988) x3385) (= (x8297 (x6196 x6988 x3385) x3385) x6988))))
(define-fun x5157 ((x6988 Int) (x3385 Int)) Bool (=> (and (< 0 x3385) (> x6988 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x6196 x6988 x3385)) (< (x8297 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6988) x3385))))
(define-fun x8403 ((x6988 Int) (x3385 Int)) Bool (and (= (x3846 (x6196 x6988 x3385)) (x3846 (x6196 x6988 (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x3846 (x6196 (- x6988 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3385)) (x3846 (x6196 x6988 x3385))) (= (x3846 (x6196 (- x6988 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3846 (x6196 x6988 x3385)))))
(define-fun x3112 ((x6988 Int) (x3385 Int)) Bool (and (=> (and (and (<= x3385 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x3385)) (and (> x6988 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6988))) (= (>= (x8297 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3385) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6988)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x6196 (- x6988 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3385)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3385) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3385)) (and (> x6988 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6988))) (= (<= (x6196 (- x6988 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x8297 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3385)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6988)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3385) (> x3385 0)) (and (< 0 x6988) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6988))) (= (>= (x8297 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3385) x6988) (<= (x6196 x6988 x3385) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3385) (<= x3385 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6988) (> x6988 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3385) (x8297 57896044618658097711785492504343953926634992332820282019728792003956564819968 x6988)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x6196 x6988 (- x3385 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x25 ((x6988 Int) (x3385 Int)) Bool (and (x6765 x6988 x3385) (x3112 x6988 x3385) (x6382 x6988 x3385) (x8403 x6988 x3385) (x5745 x6988 x3385) (x8453 x6988 x3385) (x5157 x6988 x3385)))
(define-fun x5357 ((x6988 Int)) Bool (and (= 0 (x6196 0 x6988)) (= 0 (x6196 x6988 0))))
(define-fun x6339 ((x6988 Int)) Bool (and (= (x6196 x6988 1) x6988) (= (x6196 1 x6988) x6988)))
(define-fun x2371 ((x6988 Int)) Bool (and (x6339 x6988) (x5357 x6988)))
(define-fun x1286 ((x6988 Int)) Bool (and (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6988) x6988) (= x6988 (x639 x6988 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x3704 ((x6988 Int)) Bool (and (= 0 (x639 0 x6988)) (= 0 (x639 x6988 0))))
(define-fun x6444 ((x6988 Int)) Bool (= x6988 (x639 x6988 x6988)))
(define-fun x725 ((x6988 Int)) Bool (and (x1286 x6988) (x3704 x6988) (x6444 x6988)))
(define-fun x5494 ((x6988 Int) (x3385 Int)) Bool (= (x639 x6988 x3385) (x639 x3385 x6988)))
(define-fun x2856 ((x6988 Int) (x3385 Int)) Bool (and (=> (<= 0 x6988) (>= x6988 (x639 x6988 x3385))) (<= 0 (x639 x6988 x3385)) (=> (<= 0 x3385) (>= x3385 (x639 x6988 x3385)))))
(define-fun x5068 ((x6988 Int) (x3385 Int)) Bool (and (x2856 x6988 x3385) (x5494 x6988 x3385)))
(define-fun x989 ((x6988 Int)) Bool (= (x2930 x6988 256) (x639 x6988 255)))
(define-fun x8137 ((x6988 Int)) Bool (and (x989 x6988) (x5068 x6988 255)))
(define-fun x8044 ((x6988 Int) (x3385 Int)) Bool (and (> x3385 (x2930 x6988 x3385)) (>= (x2930 x6988 x3385) 0)))
(define-fun x2512 ((x6988 Int) (x3385 Int)) Bool (=> (and (<= 0 x6988) (> x3385 0)) (= (> x3385 x6988) (= (x2930 x6988 x3385) x6988))))
(define-fun x7385 ((x6988 Int) (x3385 Int)) Bool (=> (and (and (>= x6988 x3385) (< x6988 (+ x3385 x3385))) (< 0 x3385)) (= (- x6988 x3385) (x2930 x6988 x3385))))
(define-fun x6735 ((x6988 Int) (x3385 Int)) Bool (=> (< 0 x3385) (= x6988 (+ (* x3385 (x8297 x6988 x3385)) (x2930 x6988 x3385)))))
(define-fun x3760 ((x6988 Int) (x3385 Int)) Bool (and (x8044 x6988 x3385) (x6735 x6988 x3385) (x7385 x6988 x3385) (x2512 x6988 x3385)))
(define-fun x3074 ((x6988 Int)) Bool (= (x2930 0 x6988) 0))
(define-fun x2357 ((x6988 Int)) Bool (= 0 (x2930 x6988 1)))
(define-fun x8574 ((x6988 Int)) Bool (= (x2930 x6988 x6988) 0))
(define-fun x5391 ((x6988 Int)) Bool (and (x2357 x6988) (x8574 x6988) (x3074 x6988)))
(define-fun x3293 ((x6988 Int) (x3385 Int)) Bool (=> (and (> x3385 0) (< 0 x6988)) (and (>= x6988 (x8297 x6988 x3385)) (>= (x8297 x6988 x3385) 0))))
(define-fun x7499 ((x6988 Int) (x3385 Int)) Bool (=> (and (and (<= 1 x3385) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3385)) (and (< x6988 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x6988))) (and (>= (x8297 x6988 x3385) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8297 x6988 x3385)))))
(define-fun x922 ((x6988 Int) (x3385 Int)) Bool (=> (and (> x6988 x3385) (< 1 x3385)) (> x6988 (x8297 x6988 x3385))))
(define-fun x7444 ((x6988 Int) (x3385 Int)) Bool (=> (and (> x6988 0) (< 0 x3385)) (= (< x6988 x3385) (= 0 (x8297 x6988 x3385)))))
(define-fun x4581 ((x6988 Int) (x3385 Int)) Bool (=> (and (< 0 x3385) (< 0 x6988)) (and (<= (* x3385 (x8297 x6988 x3385)) x6988) (< (- x6988 x3385) (* x3385 (x8297 x6988 x3385))))))
(define-fun x8291 ((x6988 Int) (x3385 Int)) Bool (= (- x6988 (x639 (- x3385 1) x6988)) (* (x8297 x6988 x3385) x3385)))
(define-fun x5189 ((x6988 Int) (x3385 Int)) Bool (and (x8291 x6988 x3385) (x3293 x6988 x3385) (x7499 x6988 x3385) (x7444 x6988 x3385) (x922 x6988 x3385) (x4581 x6988 x3385)))
(define-fun x3720 ((x6988 Int)) Bool (= 0 (x8297 0 x6988)))
(define-fun x7697 ((x6988 Int)) Bool (= x6988 (x8297 x6988 1)))
(define-fun x2631 ((x6988 Int)) Bool (=> (not (= 0 x6988)) (= (x8297 x6988 x6988) 1)))
(define-fun x4057 ((x6988 Int)) Bool (and (x3720 x6988) (x2631 x6988) (x7697 x6988)))
(define-fun x7781 ((x6988 Int)) Bool (= (x639 x6988 1) (x2930 x6988 2)))
(define-fun x4910 ((x6988 Int)) Bool (and (x5068 x6988 1) (x7781 x6988)))
(define-fun x2965 ((x6988 Int)) Bool (= (x639 x6988 127) (x2930 x6988 128)))
(define-fun x5528 ((x6988 Int)) Bool (and (x5068 x6988 127) (x2965 x6988)))
(define-fun x4561 ((x6988 Int)) Bool (= (x3846 x6988) (+ (x639 x6988 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x2930 x6988 256))))
(define-fun x864 ((x6988 Int)) Bool (and (x5068 x6988 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x4561 x6988)))
(define-fun x5134 ((x6988 Int)) Bool (= (x3846 x6988) (+ (x639 x6988 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2930 x6988 32))))
(define-fun x3481 ((x6988 Int)) Bool (and (x5068 x6988 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x5134 x6988)))
(define-fun x2608 ((x6988 Int)) Bool (= (x2930 x6988 26959946667150639794667015087019630673637144422540572481103610249216) (x639 x6988 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x5997 ((x6988 Int)) Bool (and (x2608 x6988) (x5068 x6988 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x5105 ((x2188 Int)) Int 0)
(define-fun x159 ((x2188 Int)) Int 0)
(define-fun x2270 ((x2188 Int)) Int 0)
(define-fun x2521 ((x2188 Int)) Int 0)
(define-fun x6752 ((x2188 Int)) Int 0)
(define-fun x6843 ((x2188 Int)) Int 0)
(define-fun x2055 ((x2188 Int)) Int 0)
(define-fun x5940 ((x2188 Int)) Int (ite (< x2188 x8296) (x4777 x2188) 0))
(define-fun x3238 ((x2188 Int)) Int (ite (< x2188 x2223) (x2967 x2188) 0))
(define-fun x4241 ((x2188 Int)) Int (ite (< x2188 x2816) (x985 x2188) 0))
(define-fun x1884 ((x2188 Int)) Int (ite (< x2188 x7714) (x1912 x2188) 0))
(define-fun x5900 ((x2188 Int)) Int (ite (< x2188 x710) (x1095 x2188) 0))
(define-fun x6766 ((x2188 Int)) Int (ite (< x2188 x3386) (x1005 x2188) 0))
(define-fun x3084 ((x2188 Int)) Int (ite (< x2188 x2783) (x1043 x2188) 0))
(define-fun x908 ((x2188 Int)) Int (ite (> x4093 x2188) (x7109 x2188) 0))
(define-fun x2813 ((x2188 Int)) Int (ite (< x2188 x257) (x588 x2188) 0))
(define-fun x2065 ((x2188 Int)) Int (ite (> x3695 x2188) (x4754 x2188) 0))
(define-fun x7156 ((x2188 Int)) Int (ite (> x5567 x2188) (x800 x2188) 0))
(define-fun x4220 ((x2188 Int)) Int (ite (> x852 x2188) (x4060 x2188) 0))
(define-fun x3576 ((x2188 Int)) Int (ite (> x6041 x2188) (x4715 x2188) 0))
(define-fun x2962 ((x2188 Int)) Int (ite (< x2188 x1135) (x3630 x2188) 0))
(define-fun x3571 ((x2188 Int)) Int 0)
(define-fun x8121 ((x2188 Int)) Int 0)
(define-fun x2428 ((x2188 Int)) Int 0)
(define-fun x2182 ((x2188 Int)) Int 0)
(define-fun x3675 ((x2188 Int)) Int 0)
(define-fun x5722 ((x2188 Int)) Int 0)
(define-fun x1891 ((x2188 Int)) Int 0)
(define-fun x2501 ((x2188 Int)) Int 0)
(define-fun x1250 ((x2188 Int)) Int 0)
(define-fun x5852 ((x2188 Int)) Int 0)
(define-fun x7622 ((x2188 Int)) Int 0)
(define-fun x3931 ((x2188 Int)) Int 0)
(define-fun x3498 ((x2188 Int)) Int 0)
(define-fun x2681 ((x2188 Int)) Int 0)
(define-fun x1339 ((x2188 Int)) Int 0)
(define-fun x1793 ((x2188 Int)) Int 0)
(define-fun x8570 ((x2188 Int)) Int 0)
(define-fun x4140 ((x2188 Int)) Int 0)
(define-fun x1849 ((x2188 Int)) Int 0)
(define-fun x5343 ((x2188 Int)) Int 0)
(define-fun x309 ((x2188 Int)) Int 0)
(define-fun x2389 ((x2188 Int)) Int 0)
(define-fun x6547 ((x2188 Int)) Int 0)
(define-fun x3428 ((x2188 Int)) Int 0)
(define-fun x901 ((x2188 Int)) Int 0)
(define-fun x2046 ((x2188 Int)) Int 0)
(define-fun x109 ((x2188 Int)) Int 0)
(define-fun x3640 ((x2188 Int)) Int 0)
(define-fun x3023 ((x2188 Int)) Int 0)
(define-fun x6697 ((x2188 Int)) Int 0)
(define-fun x7798 ((x2188 Int)) Int 0)
(define-fun x4025 ((x2188 Int)) Int 0)
(define-fun x5603 ((x2188 Int)) Int 0)
(define-fun x6267 ((x2188 Int)) Int 0)
(define-fun x697 ((x2188 Int)) Int 0)
(define-fun x2809 ((x2188 Int)) Int 0)
(define-fun x5314 ((x2188 Int)) Int 0)
(define-fun x341 ((x2188 Int)) Int 0)
(define-fun x4157 ((x2188 Int)) Int 0)
(define-fun x1687 ((x2188 Int)) Int 0)
(define-fun x5834 ((x2188 Int)) Int 0)
(define-fun x3801 ((x2188 Int)) Int 0)
(define-fun x2974 ((x2188 Int)) Int 0)
(define-fun x2492 ((x2188 Int)) Int 0)
(define-fun x8423 ((x2188 Int)) Int 0)
(define-fun x6093 ((x2188 Int)) Int 0)
(define-fun x4871 ((x2188 Int)) Int 0)
(define-fun x5709 ((x2188 Int)) Int 0)
(define-fun x104 ((x2188 Int)) Int 0)
(define-fun x6111 ((x2188 Int)) Int 0)
(define-fun x5919 ((x2188 Int)) Int 0)
(define-fun x1257 ((x2188 Int)) Int 0)
(define-fun x827 ((x2188 Int)) Int 0)
(define-fun x4596 ((x2188 Int)) Int 0)
(define-fun x2201 ((x2188 Int)) Int 0)
(define-fun x3159 ((x2188 Int)) Int 0)
(define-fun x3590 ((x2188 Int)) Int 0)
(define-fun x3867 ((x2188 Int)) Int 0)
(define-fun x4194 ((x2188 Int)) Int 0)
(define-fun x7036 ((x2188 Int)) Int 0)
(define-fun x3237 ((x2188 Int)) Int 0)
(define-fun x803 ((x2188 Int)) Int 0)
(define-fun x2996 ((x2188 Int)) Int 0)
(define-fun x7641 ((x2188 Int)) Int 0)
(define-fun x7875 ((x2188 Int)) Int 0)
(define-fun x1713 ((x2188 Int)) Int 0)
(define-fun x1998 ((x2188 Int)) Int 0)
(define-fun x757 ((x2188 Int)) Int 0)
(define-fun x2292 ((x2188 Int)) Int 0)
(define-fun x6595 ((x2188 Int)) Int 0)
(define-fun x2775 ((x2188 Int)) Int 0)
(define-fun x2782 ((x2188 Int)) Int 0)
(define-fun x1237 ((x2188 Int)) Int 0)
(define-fun x95 ((x2188 Int)) Int 0)
(define-fun x847 ((x2188 Int)) Int 0)
(define-fun x138 ((x2188 Int)) Int 0)
(define-fun x3029 ((x2188 Int)) Int 0)
(define-fun x6001 ((x2188 Int)) Int 0)
(define-fun x5999 ((x2188 Int)) Int 0)
(define-fun x3761 ((x2188 Int)) Int 0)
(define-fun x7097 ((x2188 Int)) Int 0)
(define-fun x3049 ((x2188 Int)) Int 0)
(define-fun x6031 ((x2188 Int)) Int 0)
(define-fun x4857 ((x2188 Int)) Int 0)
(define-fun x8310 ((x2188 Int)) Int 0)
(define-fun x1994 ((x2188 Int)) Int 0)
(define-fun x958 ((x2188 Int)) Int 0)
(define-fun x4318 ((x2188 Int)) Int 0)
(define-fun x8186 ((x2188 Int)) Int 0)
(define-fun x1209 ((x2188 Int)) Int 0)
(define-fun x6237 ((x2188 Int)) Int 0)
(define-fun x6314 ((x2188 Int)) Int 0)
(define-fun x4575 ((x2188 Int)) Int 0)
(define-fun x6570 ((x2188 Int)) Int 0)
(define-fun x3171 ((x2188 Int)) Int 0)
(define-fun x2817 ((x2188 Int)) Int 0)
(define-fun x2316 ((x2188 Int)) Int 0)
(define-fun x8567 ((x2188 Int)) Int 0)
(define-fun x1049 ((x2188 Int)) Int 0)
(define-fun x6328 ((x2188 Int)) Int 0)
(define-fun x1424 ((x2188 Int)) Int 0)
(define-fun x5822 ((x2188 Int)) Int 0)
(define-fun x7933 ((x2188 Int)) Int 0)
(define-fun x988 ((x2188 Int)) Int (ite (= x2188 x1566) x4412 (x5533 x2188)))
(define-fun x5807 ((x2188 Int)) Int (ite (= x666 x2188) x1721 (x988 x2188)))
(define-fun x6700 ((x2188 Int)) Int 0)
(define-fun x8536 ((x2188 Int)) Int (ite (= 128 x2188) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x1849 x2188)))
(define-fun x8337 ((x2188 Int)) Int (ite (= x2188 132) x5452 (x8536 x2188)))
(define-fun x3723 ((x2188 Int)) Int (ite (= x2188 0) x202 (x6850 x2188)))
(define-fun x1584 ((x2188 Int)) Int (ite (= 0 x2188) x3647 (x6850 x2188)))
(define-fun x1099 ((x2188 Int)) Int (ite (= 128 x2188) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x5834 x2188)))
(define-fun x7799 ((x2188 Int)) Int (ite (= 132 x2188) x3007 (x1099 x2188)))
(define-fun x6220 ((x2188 Int)) Int (ite (= x2188 0) x6171 (x304 x2188)))
(define-fun x1585 ((x2188 Int)) Int (ite (= 128 x2188) x6171 (x7799 x2188)))
(define-fun x4386 ((x2188 Int)) Int (ite (= x2188 4) 17 (x8186 x2188)))
(define-fun x3178 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 36)) (x4386 x2188) (x304 x2188)))
(define-fun x3454 ((x2188 Int)) Int (ite (= x2188 0) x4527 (x304 x2188)))
(define-fun x8096 ((x2188 Int)) Int (ite (= 128 x2188) x4527 (x7799 x2188)))
(define-fun x8040 ((x2188 Int)) Int (ite x1351 (ite x8348 (x5814 x2188) (x7553 x2188)) (ite x7533 (ite x8348 (x5814 x2188) (x7553 x2188)) (x7553 x2188))))
(define-fun x961 ((x2188 Int)) Int (ite x4026 (x7553 x2188) (ite x2600 (x7553 x2188) (x8040 x2188))))
(define-fun x5446 ((x2188 Int)) Int (ite x8174 (ite x6560 (x7553 x2188) (x961 x2188)) (x7553 x2188)))
(define-fun x3638 ((x2188 Int)) Int (ite x2531 (x4558 x2188) (x7553 x2188)))
(define-fun x8202 ((x2188 Int)) Int (ite x2506 (ite x3079 (x5446 x2188) (x7553 x2188)) (ite x4079 (x7553 x2188) (x3638 x2188))))
(define-fun x7495 ((x2188 Int)) Int (ite x3859 (x7553 x2188) (ite x953 (x7553 x2188) (ite x6208 (x7553 x2188) (ite x4724 (x7553 x2188) (ite x2757 (x7553 x2188) (ite x111 (x7553 x2188) (ite x2789 (x7553 x2188) (ite x5217 (x7553 x2188) (ite x2216 (x7553 x2188) (ite x5694 (x7553 x2188) (ite x2160 (x7553 x2188) (ite x4344 (x7553 x2188) (ite x4779 (x7553 x2188) (ite x2239 (x7553 x2188) (ite x5500 (x7553 x2188) (ite x2066 (x7553 x2188) (ite x3065 (x7553 x2188) (ite x333 (x7553 x2188) (ite x8303 (x7553 x2188) (ite x7437 (x7553 x2188) (ite x8011 (x7553 x2188) (ite x6358 (ite x6546 (x8202 x2188) (x7553 x2188)) (x7553 x2188))))))))))))))))))))))))
(define-fun x8516 ((x2188 Int)) Int (ite x5208 (ite x775 (x7553 x2188) (x7495 x2188)) (ite x4306 (x7553 x2188) (ite x775 (x7553 x2188) (x7495 x2188)))))
(define-fun x241 ((x2188 Int)) Int (ite x1351 (ite x8348 (x972 x2188) (x5866 x2188)) (ite x7533 (ite x8348 (x972 x2188) (x5866 x2188)) (x5866 x2188))))
(define-fun x290 ((x2188 Int)) Int (ite x4026 (x5866 x2188) (ite x2600 (x5866 x2188) (x241 x2188))))
(define-fun x8537 ((x2188 Int)) Int (ite x8174 (ite x6560 (x5866 x2188) (x290 x2188)) (x5866 x2188)))
(define-fun x5853 ((x2188 Int)) Int (ite x2531 (x715 x2188) (x5866 x2188)))
(define-fun x326 ((x2188 Int)) Int (ite x2506 (ite x3079 (x8537 x2188) (x5866 x2188)) (ite x4079 (x5866 x2188) (x5853 x2188))))
(define-fun x675 ((x2188 Int)) Int (ite x3859 (x5866 x2188) (ite x953 (x5866 x2188) (ite x6208 (x5866 x2188) (ite x4724 (x5866 x2188) (ite x2757 (x5866 x2188) (ite x111 (x5866 x2188) (ite x2789 (x5866 x2188) (ite x5217 (x5866 x2188) (ite x2216 (x5866 x2188) (ite x5694 (x5866 x2188) (ite x2160 (x5866 x2188) (ite x4344 (x5866 x2188) (ite x4779 (x5866 x2188) (ite x2239 (x5866 x2188) (ite x5500 (x5866 x2188) (ite x2066 (x5866 x2188) (ite x3065 (x5866 x2188) (ite x333 (x5866 x2188) (ite x8303 (x5866 x2188) (ite x7437 (x5866 x2188) (ite x8011 (x5866 x2188) (ite x6358 (ite x6546 (x326 x2188) (x5866 x2188)) (x5866 x2188))))))))))))))))))))))))
(define-fun x696 ((x2188 Int)) Int (ite x5208 (ite x775 (x5866 x2188) (x675 x2188)) (ite x4306 (x5866 x2188) (ite x775 (x5866 x2188) (x675 x2188)))))
(define-fun x4211 ((x2188 Int)) Int (ite x1351 (ite x8348 (x6682 x2188) (x2984 x2188)) (ite x7533 (ite x8348 (x6682 x2188) (x2984 x2188)) (x2984 x2188))))
(define-fun x82 ((x2188 Int)) Int (ite x4026 (x2984 x2188) (ite x2600 (x2984 x2188) (x4211 x2188))))
(define-fun x3268 ((x2188 Int)) Int (ite x8174 (ite x6560 (x2984 x2188) (x82 x2188)) (x2984 x2188)))
(define-fun x1241 ((x2188 Int)) Int (ite x2531 (x7020 x2188) (x2984 x2188)))
(define-fun x3627 ((x2188 Int)) Int (ite x2506 (ite x3079 (x3268 x2188) (x2984 x2188)) (ite x4079 (x2984 x2188) (x1241 x2188))))
(define-fun x3739 ((x2188 Int)) Int (ite x3859 (x2984 x2188) (ite x953 (x2984 x2188) (ite x6208 (x2984 x2188) (ite x4724 (x2984 x2188) (ite x2757 (x2984 x2188) (ite x111 (x2984 x2188) (ite x2789 (x2984 x2188) (ite x5217 (x2984 x2188) (ite x2216 (x2984 x2188) (ite x5694 (x2984 x2188) (ite x2160 (x2984 x2188) (ite x4344 (x2984 x2188) (ite x4779 (x2984 x2188) (ite x2239 (x2984 x2188) (ite x5500 (x2984 x2188) (ite x2066 (x2984 x2188) (ite x3065 (x2984 x2188) (ite x333 (x2984 x2188) (ite x8303 (x2984 x2188) (ite x7437 (x2984 x2188) (ite x8011 (x2984 x2188) (ite x6358 (ite x6546 (x3627 x2188) (x2984 x2188)) (x2984 x2188))))))))))))))))))))))))
(define-fun x8401 ((x2188 Int)) Int (ite x5208 (ite x775 (x2984 x2188) (x3739 x2188)) (ite x4306 (x2984 x2188) (ite x775 (x2984 x2188) (x3739 x2188)))))
(define-fun x6281 ((x2188 Int)) Int (ite (= x2188 x8382) x4903 (x1116 x2188)))
(define-fun x4108 ((x2188 Int)) Int (ite x4452 (x1116 x2188) (x6281 x2188)))
(define-fun x466 ((x2188 Int)) Int (ite x2506 (x1116 x2188) (ite x4079 (x1116 x2188) (x4108 x2188))))
(define-fun x146 ((x2188 Int)) Int (ite x3859 (x1116 x2188) (ite x953 (x1116 x2188) (ite x6208 (x1116 x2188) (ite x4724 (x1116 x2188) (ite x2757 (x1116 x2188) (ite x111 (x1116 x2188) (ite x2789 (x1116 x2188) (ite x5217 (x1116 x2188) (ite x2216 (x1116 x2188) (ite x5694 (x1116 x2188) (ite x2160 (x1116 x2188) (ite x4344 (x1116 x2188) (ite x4779 (x1116 x2188) (ite x2239 (x1116 x2188) (ite x5500 (x1116 x2188) (ite x2066 (x1116 x2188) (ite x3065 (x1116 x2188) (ite x333 (x1116 x2188) (ite x8303 (x1116 x2188) (ite x7437 (x1116 x2188) (ite x8011 (x1116 x2188) (ite x6358 (ite x6546 (x466 x2188) (x1116 x2188)) (x1116 x2188))))))))))))))))))))))))
(define-fun x5371 ((x2188 Int)) Int (ite x5208 (ite x775 (x1116 x2188) (x146 x2188)) (ite x4306 (x1116 x2188) (ite x775 (x1116 x2188) (x146 x2188)))))
(define-fun x2767 ((x2188 Int)) Int (x5009 x2188))
(define-fun x6923 ((x2188 Int)) Int (ite x1351 (ite x8348 (x3166 x2188) (x2367 x2188)) (ite x7533 (ite x8348 (x3166 x2188) (x2367 x2188)) (x2367 x2188))))
(define-fun x1313 ((x2188 Int)) Int (ite x4026 (x2367 x2188) (ite x2600 (x2367 x2188) (x6923 x2188))))
(define-fun x7765 ((x2188 Int)) Int (ite x8174 (ite x6560 (x2367 x2188) (x1313 x2188)) (x2367 x2188)))
(define-fun x6436 ((x2188 Int)) Int (ite x2531 (x6032 x2188) (x2367 x2188)))
(define-fun x7857 ((x2188 Int)) Int (ite x2506 (ite x3079 (x7765 x2188) (x2367 x2188)) (ite x4079 (x2367 x2188) (x6436 x2188))))
(define-fun x8280 ((x2188 Int)) Int (ite x3859 (x2367 x2188) (ite x953 (x2367 x2188) (ite x6208 (x2367 x2188) (ite x4724 (x2367 x2188) (ite x2757 (x2367 x2188) (ite x111 (x2367 x2188) (ite x2789 (x2367 x2188) (ite x5217 (x2367 x2188) (ite x2216 (x2367 x2188) (ite x5694 (x2367 x2188) (ite x2160 (x2367 x2188) (ite x4344 (x2367 x2188) (ite x4779 (x2367 x2188) (ite x2239 (x2367 x2188) (ite x5500 (x2367 x2188) (ite x2066 (x2367 x2188) (ite x3065 (x2367 x2188) (ite x333 (x2367 x2188) (ite x8303 (x2367 x2188) (ite x7437 (x2367 x2188) (ite x8011 (x2367 x2188) (ite x6358 (ite x6546 (x7857 x2188) (x2367 x2188)) (x2367 x2188))))))))))))))))))))))))
(define-fun x414 ((x2188 Int)) Int (ite x5208 (ite x775 (x2367 x2188) (x8280 x2188)) (ite x4306 (x2367 x2188) (ite x775 (x2367 x2188) (x8280 x2188)))))
(define-fun x8088 ((x2188 Int)) Int (ite (= x1468 x2188) x5288 (x1897 x2188)))
(define-fun x1372 ((x2188 Int)) Int (ite x5457 (x1897 x2188) (x8088 x2188)))
(define-fun x5143 ((x2188 Int)) Int (ite x1351 (ite x8348 (x328 x2188) (x1897 x2188)) (ite x7533 (ite x8348 (x328 x2188) (x1897 x2188)) (x1897 x2188))))
(define-fun x949 ((x2188 Int)) Int (ite x4026 (x1897 x2188) (ite x2600 (x1897 x2188) (x5143 x2188))))
(define-fun x4690 ((x2188 Int)) Int (ite x8174 (ite x6560 (x1897 x2188) (x949 x2188)) (x1897 x2188)))
(define-fun x4319 ((x2188 Int)) Int (ite x2531 (x3259 x2188) (x1897 x2188)))
(define-fun x8230 ((x2188 Int)) Int (ite x2506 (ite x3079 (x4690 x2188) (x1897 x2188)) (ite x4079 (x1897 x2188) (x4319 x2188))))
(define-fun x8518 ((x2188 Int)) Int (ite x3859 (x1897 x2188) (ite x953 (x1897 x2188) (ite x6208 (x1897 x2188) (ite x4724 (x1897 x2188) (ite x2757 (x1897 x2188) (ite x111 (x1897 x2188) (ite x2789 (x1897 x2188) (ite x5217 (x1897 x2188) (ite x2216 (x1897 x2188) (ite x5694 (x1897 x2188) (ite x2160 (x1897 x2188) (ite x4344 (x1897 x2188) (ite x4779 (x1897 x2188) (ite x2239 (x1897 x2188) (ite x5500 (x1897 x2188) (ite x2066 (x1897 x2188) (ite x3065 (x1897 x2188) (ite x333 (x1897 x2188) (ite x8303 (x1897 x2188) (ite x7437 (x1897 x2188) (ite x8011 (x1897 x2188) (ite x6358 (ite x6546 (x8230 x2188) (x1897 x2188)) (x1897 x2188))))))))))))))))))))))))
(define-fun x829 ((x2188 Int)) Int (ite x5208 (ite x775 (x1372 x2188) (x8518 x2188)) (ite x4306 (x1897 x2188) (ite x775 (x1372 x2188) (x8518 x2188)))))
(define-fun x3434 ((x2188 Int)) Int (x924 x2188))
(define-fun x5363 ((x2188 Int)) Int (ite x1351 (ite x8348 (x1120 x2188) (x3364 x2188)) (ite x7533 (ite x8348 (x1120 x2188) (x3364 x2188)) (x3364 x2188))))
(define-fun x264 ((x2188 Int)) Int (ite x4026 (x3364 x2188) (ite x2600 (x3364 x2188) (x5363 x2188))))
(define-fun x5493 ((x2188 Int)) Int (ite x8174 (ite x6560 (x3364 x2188) (x264 x2188)) (x3364 x2188)))
(define-fun x3180 ((x2188 Int)) Int (ite x2531 (x5774 x2188) (x3364 x2188)))
(define-fun x401 ((x2188 Int)) Int (ite x2506 (ite x3079 (x5493 x2188) (x3364 x2188)) (ite x4079 (x3364 x2188) (x3180 x2188))))
(define-fun x6880 ((x2188 Int)) Int (ite x3859 (x3364 x2188) (ite x953 (x3364 x2188) (ite x6208 (x3364 x2188) (ite x4724 (x3364 x2188) (ite x2757 (x3364 x2188) (ite x111 (x3364 x2188) (ite x2789 (x3364 x2188) (ite x5217 (x3364 x2188) (ite x2216 (x3364 x2188) (ite x5694 (x3364 x2188) (ite x2160 (x3364 x2188) (ite x4344 (x3364 x2188) (ite x4779 (x3364 x2188) (ite x2239 (x3364 x2188) (ite x5500 (x3364 x2188) (ite x2066 (x3364 x2188) (ite x3065 (x3364 x2188) (ite x333 (x3364 x2188) (ite x8303 (x3364 x2188) (ite x7437 (x3364 x2188) (ite x8011 (x3364 x2188) (ite x6358 (ite x6546 (x401 x2188) (x3364 x2188)) (x3364 x2188))))))))))))))))))))))))
(define-fun x5125 ((x2188 Int)) Int (ite x5208 (ite x775 (x3364 x2188) (x6880 x2188)) (ite x4306 (x3364 x2188) (ite x775 (x3364 x2188) (x6880 x2188)))))
(define-fun x1819 ((x2188 Int)) Int (x6132 x2188))
(define-fun x421 ((x2188 Int)) Int (x621 x2188))
(define-fun x3663 ((x2188 Int)) Int (ite (= x5257 x2188) 3 (x6360 x2188)))
(define-fun x3490 ((x2188 Int)) Int (ite x7111 (x6360 x2188) (x3663 x2188)))
(define-fun x8587 ((x2188 Int)) Int (ite x8174 (x6360 x2188) (ite x7072 (x3490 x2188) (ite x7168 (x3490 x2188) (x6360 x2188)))))
(define-fun x7768 ((x2188 Int)) Int (ite (= x5972 x2188) 2 (x6360 x2188)))
(define-fun x8270 ((x2188 Int)) Int (ite (= x2188 x1690) 3 (x7768 x2188)))
(define-fun x1583 ((x2188 Int)) Int (ite x1489 (x6360 x2188) (ite x7603 (x7768 x2188) (x8270 x2188))))
(define-fun x7148 ((x2188 Int)) Int (ite x2506 (ite x3079 (x8587 x2188) (x1583 x2188)) (x6360 x2188)))
(define-fun x3144 ((x2188 Int)) Int (ite x3859 (x6360 x2188) (ite x953 (x6360 x2188) (ite x6208 (x6360 x2188) (ite x4724 (x6360 x2188) (ite x2757 (x6360 x2188) (ite x111 (x6360 x2188) (ite x2789 (x6360 x2188) (ite x5217 (x6360 x2188) (ite x2216 (x6360 x2188) (ite x5694 (x6360 x2188) (ite x2160 (x6360 x2188) (ite x4344 (x6360 x2188) (ite x4779 (x6360 x2188) (ite x2239 (x6360 x2188) (ite x5500 (x6360 x2188) (ite x2066 (x6360 x2188) (ite x3065 (x6360 x2188) (ite x333 (x6360 x2188) (ite x8303 (x6360 x2188) (ite x7437 (x6360 x2188) (ite x8011 (x6360 x2188) (ite x6358 (ite x6546 (x7148 x2188) (x6360 x2188)) (x6360 x2188))))))))))))))))))))))))
(define-fun x1539 ((x2188 Int)) Int (ite x5208 (ite x775 (x6360 x2188) (x3144 x2188)) (ite x4306 (x6360 x2188) (ite x775 (x6360 x2188) (x3144 x2188)))))
(define-fun x47 ((x2188 Int)) Int (x4426 x2188))
(define-fun x3399 ((x2188 Int)) Int (ite x1351 (ite x8348 (x1736 x2188) (x7598 x2188)) (ite x7533 (ite x8348 (x1736 x2188) (x7598 x2188)) (x7598 x2188))))
(define-fun x817 ((x2188 Int)) Int (ite x4026 (x7598 x2188) (ite x2600 (x7598 x2188) (x3399 x2188))))
(define-fun x2108 ((x2188 Int)) Int (ite x8174 (ite x6560 (x7598 x2188) (x817 x2188)) (x7598 x2188)))
(define-fun x5308 ((x2188 Int)) Int (ite x2531 (x5869 x2188) (x7598 x2188)))
(define-fun x8227 ((x2188 Int)) Int (ite x2506 (ite x3079 (x2108 x2188) (x7598 x2188)) (ite x4079 (x7598 x2188) (x5308 x2188))))
(define-fun x38 ((x2188 Int)) Int (ite x3859 (x7598 x2188) (ite x953 (x7598 x2188) (ite x6208 (x7598 x2188) (ite x4724 (x7598 x2188) (ite x2757 (x7598 x2188) (ite x111 (x7598 x2188) (ite x2789 (x7598 x2188) (ite x5217 (x7598 x2188) (ite x2216 (x7598 x2188) (ite x5694 (x7598 x2188) (ite x2160 (x7598 x2188) (ite x4344 (x7598 x2188) (ite x4779 (x7598 x2188) (ite x2239 (x7598 x2188) (ite x5500 (x7598 x2188) (ite x2066 (x7598 x2188) (ite x3065 (x7598 x2188) (ite x333 (x7598 x2188) (ite x8303 (x7598 x2188) (ite x7437 (x7598 x2188) (ite x8011 (x7598 x2188) (ite x6358 (ite x6546 (x8227 x2188) (x7598 x2188)) (x7598 x2188))))))))))))))))))))))))
(define-fun x2165 ((x2188 Int)) Int (ite x5208 (ite x775 (x7598 x2188) (x38 x2188)) (ite x4306 (x7598 x2188) (ite x775 (x7598 x2188) (x38 x2188)))))
(define-fun x8073 ((x2188 Int)) Int (x2637 x2188))
(define-fun x6744 ((x2188 Int)) Int (ite x1351 (ite x8348 (x1666 x2188) (x6130 x2188)) (ite x7533 (ite x8348 (x1666 x2188) (x6130 x2188)) (x6130 x2188))))
(define-fun x5482 ((x2188 Int)) Int (ite x4026 (x6130 x2188) (ite x2600 (x6130 x2188) (x6744 x2188))))
(define-fun x3266 ((x2188 Int)) Int (ite x8174 (ite x6560 (x6130 x2188) (x5482 x2188)) (x6130 x2188)))
(define-fun x8588 ((x2188 Int)) Int (ite x2531 (x306 x2188) (x6130 x2188)))
(define-fun x3944 ((x2188 Int)) Int (ite x2506 (ite x3079 (x3266 x2188) (x6130 x2188)) (ite x4079 (x6130 x2188) (x8588 x2188))))
(define-fun x3175 ((x2188 Int)) Int (ite x3859 (x6130 x2188) (ite x953 (x6130 x2188) (ite x6208 (x6130 x2188) (ite x4724 (x6130 x2188) (ite x2757 (x6130 x2188) (ite x111 (x6130 x2188) (ite x2789 (x6130 x2188) (ite x5217 (x6130 x2188) (ite x2216 (x6130 x2188) (ite x5694 (x6130 x2188) (ite x2160 (x6130 x2188) (ite x4344 (x6130 x2188) (ite x4779 (x6130 x2188) (ite x2239 (x6130 x2188) (ite x5500 (x6130 x2188) (ite x2066 (x6130 x2188) (ite x3065 (x6130 x2188) (ite x333 (x6130 x2188) (ite x8303 (x6130 x2188) (ite x7437 (x6130 x2188) (ite x8011 (x6130 x2188) (ite x6358 (ite x6546 (x3944 x2188) (x6130 x2188)) (x6130 x2188))))))))))))))))))))))))
(define-fun x102 ((x2188 Int)) Int (ite x5208 (ite x775 (x6130 x2188) (x3175 x2188)) (ite x4306 (x6130 x2188) (ite x775 (x6130 x2188) (x3175 x2188)))))
(define-fun x3416 ((x2188 Int)) Int (ite x1351 (ite x8348 (x6043 x2188) (x8015 x2188)) (ite x7533 (ite x8348 (x6043 x2188) (x8015 x2188)) (x8015 x2188))))
(define-fun x5890 ((x2188 Int)) Int (ite x4026 (x8015 x2188) (ite x2600 (x8015 x2188) (x3416 x2188))))
(define-fun x2815 ((x2188 Int)) Int (ite x8174 (ite x6560 (x8015 x2188) (x5890 x2188)) (x8015 x2188)))
(define-fun x1229 ((x2188 Int)) Int (ite x2531 (x7720 x2188) (x8015 x2188)))
(define-fun x4659 ((x2188 Int)) Int (ite x2506 (ite x3079 (x2815 x2188) (x8015 x2188)) (ite x4079 (x8015 x2188) (x1229 x2188))))
(define-fun x8083 ((x2188 Int)) Int (ite x3859 (x8015 x2188) (ite x953 (x8015 x2188) (ite x6208 (x8015 x2188) (ite x4724 (x8015 x2188) (ite x2757 (x8015 x2188) (ite x111 (x8015 x2188) (ite x2789 (x8015 x2188) (ite x5217 (x8015 x2188) (ite x2216 (x8015 x2188) (ite x5694 (x8015 x2188) (ite x2160 (x8015 x2188) (ite x4344 (x8015 x2188) (ite x4779 (x8015 x2188) (ite x2239 (x8015 x2188) (ite x5500 (x8015 x2188) (ite x2066 (x8015 x2188) (ite x3065 (x8015 x2188) (ite x333 (x8015 x2188) (ite x8303 (x8015 x2188) (ite x7437 (x8015 x2188) (ite x8011 (x8015 x2188) (ite x6358 (ite x6546 (x4659 x2188) (x8015 x2188)) (x8015 x2188))))))))))))))))))))))))
(define-fun x4838 ((x2188 Int)) Int (ite x5208 (ite x775 (x8015 x2188) (x8083 x2188)) (ite x4306 (x8015 x2188) (ite x775 (x8015 x2188) (x8083 x2188)))))
(define-fun x292 ((x2188 Int)) Int (ite x1351 (ite x8348 (x2166 x2188) (x4141 x2188)) (ite x7533 (ite x8348 (x2166 x2188) (x4141 x2188)) (x4141 x2188))))
(define-fun x7842 ((x2188 Int)) Int (ite x4026 (x4141 x2188) (ite x2600 (x4141 x2188) (x292 x2188))))
(define-fun x6721 ((x2188 Int)) Int (ite x8174 (ite x6560 (x4141 x2188) (x7842 x2188)) (x4141 x2188)))
(define-fun x2662 ((x2188 Int)) Int (ite x2531 (x7256 x2188) (x4141 x2188)))
(define-fun x459 ((x2188 Int)) Int (ite x2506 (ite x3079 (x6721 x2188) (x4141 x2188)) (ite x4079 (x4141 x2188) (x2662 x2188))))
(define-fun x376 ((x2188 Int)) Int (ite x3859 (x4141 x2188) (ite x953 (x4141 x2188) (ite x6208 (x4141 x2188) (ite x4724 (x4141 x2188) (ite x2757 (x4141 x2188) (ite x111 (x4141 x2188) (ite x2789 (x4141 x2188) (ite x5217 (x4141 x2188) (ite x2216 (x4141 x2188) (ite x5694 (x4141 x2188) (ite x2160 (x4141 x2188) (ite x4344 (x4141 x2188) (ite x4779 (x4141 x2188) (ite x2239 (x4141 x2188) (ite x5500 (x4141 x2188) (ite x2066 (x4141 x2188) (ite x3065 (x4141 x2188) (ite x333 (x4141 x2188) (ite x8303 (x4141 x2188) (ite x7437 (x4141 x2188) (ite x8011 (x4141 x2188) (ite x6358 (ite x6546 (x459 x2188) (x4141 x2188)) (x4141 x2188))))))))))))))))))))))))
(define-fun x2315 ((x2188 Int)) Int (ite x5208 (ite x775 (x4141 x2188) (x376 x2188)) (ite x4306 (x4141 x2188) (ite x775 (x4141 x2188) (x376 x2188)))))
(define-fun x3313 ((x2188 Int)) Int (ite x1351 (ite x8348 (x3778 x2188) (x6731 x2188)) (ite x7533 (ite x8348 (x3778 x2188) (x6731 x2188)) (x6731 x2188))))
(define-fun x2576 ((x2188 Int)) Int (ite x4026 (x6731 x2188) (ite x2600 (x6731 x2188) (x3313 x2188))))
(define-fun x3709 ((x2188 Int)) Int (ite x8174 (ite x6560 (x6731 x2188) (x2576 x2188)) (x6731 x2188)))
(define-fun x968 ((x2188 Int)) Int (ite x2531 (x7978 x2188) (x6731 x2188)))
(define-fun x511 ((x2188 Int)) Int (ite x2506 (ite x3079 (x3709 x2188) (x6731 x2188)) (ite x4079 (x6731 x2188) (x968 x2188))))
(define-fun x6401 ((x2188 Int)) Int (ite x3859 (x6731 x2188) (ite x953 (x6731 x2188) (ite x6208 (x6731 x2188) (ite x4724 (x6731 x2188) (ite x2757 (x6731 x2188) (ite x111 (x6731 x2188) (ite x2789 (x6731 x2188) (ite x5217 (x6731 x2188) (ite x2216 (x6731 x2188) (ite x5694 (x6731 x2188) (ite x2160 (x6731 x2188) (ite x4344 (x6731 x2188) (ite x4779 (x6731 x2188) (ite x2239 (x6731 x2188) (ite x5500 (x6731 x2188) (ite x2066 (x6731 x2188) (ite x3065 (x6731 x2188) (ite x333 (x6731 x2188) (ite x8303 (x6731 x2188) (ite x7437 (x6731 x2188) (ite x8011 (x6731 x2188) (ite x6358 (ite x6546 (x511 x2188) (x6731 x2188)) (x6731 x2188))))))))))))))))))))))))
(define-fun x1908 ((x2188 Int)) Int (ite x5208 (ite x775 (x6731 x2188) (x6401 x2188)) (ite x4306 (x6731 x2188) (ite x775 (x6731 x2188) (x6401 x2188)))))
(define-fun x7735 ((x2188 Int)) Int (ite (= x571 x2188) x6918 (x7845 x2188)))
(define-fun x2557 ((x2188 Int)) Int (ite x1489 (x7845 x2188) (x7735 x2188)))
(define-fun x7804 ((x2188 Int)) Int (ite x2506 (ite x3079 (x7845 x2188) (x2557 x2188)) (x7845 x2188)))
(define-fun x4150 ((x2188 Int)) Int (ite x3859 (x7845 x2188) (ite x953 (x7845 x2188) (ite x6208 (x7845 x2188) (ite x4724 (x7845 x2188) (ite x2757 (x7845 x2188) (ite x111 (x7845 x2188) (ite x2789 (x7845 x2188) (ite x5217 (x7845 x2188) (ite x2216 (x7845 x2188) (ite x5694 (x7845 x2188) (ite x2160 (x7845 x2188) (ite x4344 (x7845 x2188) (ite x4779 (x7845 x2188) (ite x2239 (x7845 x2188) (ite x5500 (x7845 x2188) (ite x2066 (x7845 x2188) (ite x3065 (x7845 x2188) (ite x333 (x7845 x2188) (ite x8303 (x7845 x2188) (ite x7437 (x7845 x2188) (ite x8011 (x7845 x2188) (ite x6358 (ite x6546 (x7804 x2188) (x7845 x2188)) (x7845 x2188))))))))))))))))))))))))
(define-fun x1623 ((x2188 Int)) Int (ite x5208 (ite x775 (x7845 x2188) (x4150 x2188)) (ite x4306 (x7845 x2188) (ite x775 (x7845 x2188) (x4150 x2188)))))
(define-fun x3014 ((x2188 Int)) Int (x297 x2188))
(define-fun x3950 ((x2188 Int)) Int (ite x1351 (ite x8348 (x4332 x2188) (x7893 x2188)) (ite x7533 (ite x8348 (x4332 x2188) (x7893 x2188)) (x7893 x2188))))
(define-fun x6671 ((x2188 Int)) Int (ite x4026 (x7893 x2188) (ite x2600 (x7893 x2188) (x3950 x2188))))
(define-fun x7246 ((x2188 Int)) Int (ite x8174 (ite x6560 (x7893 x2188) (x6671 x2188)) (x7893 x2188)))
(define-fun x318 ((x2188 Int)) Int (ite x2531 (x5127 x2188) (x7893 x2188)))
(define-fun x7897 ((x2188 Int)) Int (ite x2506 (ite x3079 (x7246 x2188) (x7893 x2188)) (ite x4079 (x7893 x2188) (x318 x2188))))
(define-fun x3495 ((x2188 Int)) Int (ite x3859 (x7893 x2188) (ite x953 (x7893 x2188) (ite x6208 (x7893 x2188) (ite x4724 (x7893 x2188) (ite x2757 (x7893 x2188) (ite x111 (x7893 x2188) (ite x2789 (x7893 x2188) (ite x5217 (x7893 x2188) (ite x2216 (x7893 x2188) (ite x5694 (x7893 x2188) (ite x2160 (x7893 x2188) (ite x4344 (x7893 x2188) (ite x4779 (x7893 x2188) (ite x2239 (x7893 x2188) (ite x5500 (x7893 x2188) (ite x2066 (x7893 x2188) (ite x3065 (x7893 x2188) (ite x333 (x7893 x2188) (ite x8303 (x7893 x2188) (ite x7437 (x7893 x2188) (ite x8011 (x7893 x2188) (ite x6358 (ite x6546 (x7897 x2188) (x7893 x2188)) (x7893 x2188))))))))))))))))))))))))
(define-fun x6449 ((x2188 Int)) Int (ite x5208 (ite x775 (x7893 x2188) (x3495 x2188)) (ite x4306 (x7893 x2188) (ite x775 (x7893 x2188) (x3495 x2188)))))
(define-fun x6034 ((x2188 Int)) Int (ite x1351 (ite x8348 (x3077 x2188) (x1841 x2188)) (ite x7533 (ite x8348 (x3077 x2188) (x1841 x2188)) (x1841 x2188))))
(define-fun x6013 ((x2188 Int)) Int (ite x4026 (x1841 x2188) (ite x2600 (x1841 x2188) (x6034 x2188))))
(define-fun x429 ((x2188 Int)) Int (ite x8174 (ite x6560 (x1841 x2188) (x6013 x2188)) (x1841 x2188)))
(define-fun x2179 ((x2188 Int)) Int (ite x2531 (x3844 x2188) (x1841 x2188)))
(define-fun x417 ((x2188 Int)) Int (ite x2506 (ite x3079 (x429 x2188) (x1841 x2188)) (ite x4079 (x1841 x2188) (x2179 x2188))))
(define-fun x5733 ((x2188 Int)) Int (ite x3859 (x1841 x2188) (ite x953 (x1841 x2188) (ite x6208 (x1841 x2188) (ite x4724 (x1841 x2188) (ite x2757 (x1841 x2188) (ite x111 (x1841 x2188) (ite x2789 (x1841 x2188) (ite x5217 (x1841 x2188) (ite x2216 (x1841 x2188) (ite x5694 (x1841 x2188) (ite x2160 (x1841 x2188) (ite x4344 (x1841 x2188) (ite x4779 (x1841 x2188) (ite x2239 (x1841 x2188) (ite x5500 (x1841 x2188) (ite x2066 (x1841 x2188) (ite x3065 (x1841 x2188) (ite x333 (x1841 x2188) (ite x8303 (x1841 x2188) (ite x7437 (x1841 x2188) (ite x8011 (x1841 x2188) (ite x6358 (ite x6546 (x417 x2188) (x1841 x2188)) (x1841 x2188))))))))))))))))))))))))
(define-fun x1169 ((x2188 Int)) Int (ite x5208 (ite x775 (x1841 x2188) (x5733 x2188)) (ite x4306 (x1841 x2188) (ite x775 (x1841 x2188) (x5733 x2188)))))
(define-fun x2771 ((x2188 Int)) Int (ite x1351 (ite x8348 (x4315 x2188) (x7434 x2188)) (ite x7533 (ite x8348 (x4315 x2188) (x7434 x2188)) (x7434 x2188))))
(define-fun x2215 ((x2188 Int)) Int (ite x4026 (x7434 x2188) (ite x2600 (x7434 x2188) (x2771 x2188))))
(define-fun x4330 ((x2188 Int)) Int (ite x8174 (ite x6560 (x7434 x2188) (x2215 x2188)) (x7434 x2188)))
(define-fun x2481 ((x2188 Int)) Int (ite x2531 (x2704 x2188) (x7434 x2188)))
(define-fun x8268 ((x2188 Int)) Int (ite x2506 (ite x3079 (x4330 x2188) (x7434 x2188)) (ite x4079 (x7434 x2188) (x2481 x2188))))
(define-fun x7734 ((x2188 Int)) Int (ite x3859 (x7434 x2188) (ite x953 (x7434 x2188) (ite x6208 (x7434 x2188) (ite x4724 (x7434 x2188) (ite x2757 (x7434 x2188) (ite x111 (x7434 x2188) (ite x2789 (x7434 x2188) (ite x5217 (x7434 x2188) (ite x2216 (x7434 x2188) (ite x5694 (x7434 x2188) (ite x2160 (x7434 x2188) (ite x4344 (x7434 x2188) (ite x4779 (x7434 x2188) (ite x2239 (x7434 x2188) (ite x5500 (x7434 x2188) (ite x2066 (x7434 x2188) (ite x3065 (x7434 x2188) (ite x333 (x7434 x2188) (ite x8303 (x7434 x2188) (ite x7437 (x7434 x2188) (ite x8011 (x7434 x2188) (ite x6358 (ite x6546 (x8268 x2188) (x7434 x2188)) (x7434 x2188))))))))))))))))))))))))
(define-fun x8168 ((x2188 Int)) Int (ite x5208 (ite x775 (x7434 x2188) (x7734 x2188)) (ite x4306 (x7434 x2188) (ite x775 (x7434 x2188) (x7734 x2188)))))
(define-fun x7513 ((x2188 Int)) Int (ite (= x666 x2188) x3396 (x5807 x2188)))
(define-fun x7594 ((x2188 Int)) Int (ite (= x3595 x2188) x5390 (x7513 x2188)))
(define-fun x937 ((x2188 Int)) Int (ite (= x666 x2188) x30 (x7594 x2188)))
(define-fun x7195 ((x2188 Int)) Int (ite (= x2188 x1717) x4790 (x937 x2188)))
(define-fun x2425 ((x2188 Int)) Int (ite x8348 (x181 x2188) (x7195 x2188)))
(define-fun x6426 ((x2188 Int)) Int (ite (= x1717 x2188) x3820 (x2425 x2188)))
(define-fun x42 ((x2188 Int)) Int (ite (= x666 x2188) x8585 (x6426 x2188)))
(define-fun x7793 ((x2188 Int)) Int (ite (= x729 x2188) x8055 (x7594 x2188)))
(define-fun x7401 ((x2188 Int)) Int (ite (= x4760 x2188) x7215 (x7793 x2188)))
(define-fun x4005 ((x2188 Int)) Int (ite (= x666 x2188) x7150 (x7401 x2188)))
(define-fun x5117 ((x2188 Int)) Int (ite (= x2188 x127) x5324 (x4005 x2188)))
(define-fun x4115 ((x2188 Int)) Int (ite (= x127 x2188) x2644 (x5117 x2188)))
(define-fun x8554 ((x2188 Int)) Int (ite (= x666 x2188) x7966 (x4115 x2188)))
(define-fun x3452 ((x2188 Int)) Int (ite x7111 (x7401 x2188) (ite x6534 (x5117 x2188) (ite x2786 (x8554 x2188) (x7401 x2188)))))
(define-fun x6506 ((x2188 Int)) Int (ite (= x4760 x2188) x8345 (x3452 x2188)))
(define-fun x6119 ((x2188 Int)) Int (ite (= x2188 x729) x2269 (x6506 x2188)))
(define-fun x2614 ((x2188 Int)) Int (ite (= x666 x2188) x608 (x7594 x2188)))
(define-fun x2589 ((x2188 Int)) Int (ite (= x1618 x2188) x5307 (x2614 x2188)))
(define-fun x1519 ((x2188 Int)) Int (ite (= x2188 x1618) x1894 (x2589 x2188)))
(define-fun x4629 ((x2188 Int)) Int (ite (= x2188 x666) x6422 (x1519 x2188)))
(define-fun x7073 ((x2188 Int)) Int (ite x775 (x7594 x2188) (ite x3859 (x7594 x2188) (ite x953 (x7594 x2188) (ite x6208 (x7594 x2188) (ite x4724 (x7594 x2188) (ite x2757 (x7594 x2188) (ite x111 (x7594 x2188) (ite x2789 (x7594 x2188) (ite x5217 (x7594 x2188) (ite x2216 (x7594 x2188) (ite x5694 (x7594 x2188) (ite x2160 (x7594 x2188) (ite x4344 (x7594 x2188) (ite x4779 (x7594 x2188) (ite x2239 (x7594 x2188) (ite x5500 (x7594 x2188) (ite x2066 (x7594 x2188) (ite x3065 (x7594 x2188) (ite x333 (x7594 x2188) (ite x8303 (x7594 x2188) (ite x7437 (x7594 x2188) (ite x8011 (x7594 x2188) (ite x6358 (ite x6546 (ite x2506 (ite x3079 (ite x8174 (ite x6560 (x7594 x2188) (ite x4026 (x7594 x2188) (ite x2600 (x7594 x2188) (ite x1351 (x2425 x2188) (ite x7533 (x42 x2188) (x7594 x2188)))))) (ite x7072 (x3452 x2188) (ite x7168 (x6119 x2188) (x7594 x2188)))) (ite x1489 (x7594 x2188) (ite x7603 (x7594 x2188) (ite x7018 (x2589 x2188) (ite x2708 (x4629 x2188) (x7594 x2188)))))) (ite x4079 (x7594 x2188) (ite x2531 (x7693 x2188) (x7594 x2188)))) (x7594 x2188)) (x7594 x2188)))))))))))))))))))))))))
(define-fun x4587 ((x2188 Int)) Int (ite (= x3595 x2188) x4632 (x7073 x2188)))
(define-fun x6869 ((x2188 Int)) Int (ite (= x2188 x666) x8301 (x4587 x2188)))
(define-fun x2329 ((x2188 Int)) Int (ite x5208 (x7073 x2188) (ite x4306 (x5807 x2188) (x6869 x2188))))
(define-fun x7457 ((x2188 Int)) Int (ite x6754 (x1585 x2188) (ite x5765 (x7799 x2188) (x8096 x2188))))
(define-fun x5407 ((x2188 Int)) Int (ite (= x2188 160) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x7457 x2188)))
(define-fun x3580 ((x2188 Int)) Int (ite (= x2188 164) x666 (x5407 x2188)))
(define-fun x5922 ((x2188 Int)) Int (ite (= x2188 160) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x3580 x2188)))
(define-fun x461 ((x2188 Int)) Int (ite (= x2188 164) x4112 (x5922 x2188)))
(define-fun x7516 ((x2188 Int)) Int (ite (= 4 x2188) 17 (x1257 x2188)))
(define-fun x3839 ((x2188 Int)) Int (ite (and (> 36 x2188) (>= x2188 0)) (x7516 x2188) (x1407 x2188)))
(define-fun x6730 ((x2188 Int)) Int (ite (= 4 x2188) 17 (x7097 x2188)))
(define-fun x3673 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 36)) (x6730 x2188) (x1407 x2188)))
(define-fun x3347 ((x2188 Int)) Int (ite (= x2188 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x104 x2188)))
(define-fun x1117 ((x2188 Int)) Int (ite (= x2188 132) x2828 (x3347 x2188)))
(define-fun x4601 ((x2188 Int)) Int (ite (= x2188 164) x6413 (x1117 x2188)))
(define-fun x2045 ((x2188 Int)) Int (ite (= x2188 196) x8273 (x4601 x2188)))
(define-fun x5421 ((x2188 Int)) Int (ite (= x2188 228) x1856 (x2045 x2188)))
(define-fun x3326 ((x2188 Int)) Int (ite (= x2188 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x3023 x2188)))
(define-fun x1923 ((x2188 Int)) Int (ite (and (> 4 x2188) (>= x2188 0)) (x3326 (+ 128 x2188)) (x6891 x2188)))
(define-fun x7426 ((x2188 Int)) Int (ite (= 128 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3023 x2188)))
(define-fun x5004 ((x2188 Int)) Int (ite (= x2188 132) 32 (x7426 x2188)))
(define-fun x5558 ((x2188 Int)) Int (ite (= 164 x2188) 12 (x5004 x2188)))
(define-fun x6885 ((x2188 Int)) Int (ite (= x2188 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x5558 x2188)))
(define-fun x2770 ((x2188 Int)) Int (ite (and (> 100 x2188) (>= x2188 0)) (x6885 (+ x2188 128)) (x6891 x2188)))
(define-fun x5837 ((x2188 Int)) Int (ite (= x2188 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x104 x2188)))
(define-fun x880 ((x2188 Int)) Int (ite (= 132 x2188) x4803 (x5837 x2188)))
(define-fun x4340 ((x2188 Int)) Int (ite (= x2188 164) 128 (x880 x2188)))
(define-fun x3081 ((x2188 Int)) Int (ite (= x2188 260) x6118 (x4340 x2188)))
(define-fun x7677 ((x2188 Int)) Int (ite (= 292 x2188) x379 (x3081 x2188)))
(define-fun x2979 ((x2188 Int)) Int (ite (= x2188 292) x2207 (x3081 x2188)))
(define-fun x4476 ((x2188 Int)) Int (ite (= x2188 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x104 x2188)))
(define-fun x948 ((x2188 Int)) Int (ite (= 132 x2188) x5958 (x4476 x2188)))
(define-fun x4405 ((x2188 Int)) Int (ite (= x2188 164) 128 (x948 x2188)))
(define-fun x517 ((x2188 Int)) Int (ite (= x2188 260) x3510 (x4405 x2188)))
(define-fun x3059 ((x2188 Int)) Int (ite (= x2188 292) x3654 (x517 x2188)))
(define-fun x4492 ((x2188 Int)) Int (ite (= 292 x2188) x3914 (x517 x2188)))
(define-fun x4582 ((x2188 Int)) Int (ite (= x2188 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x104 x2188)))
(define-fun x3602 ((x2188 Int)) Int (ite (= x2188 132) x5710 (x4582 x2188)))
(define-fun x1903 ((x2188 Int)) Int (ite (= 164 x2188) x2078 (x3602 x2188)))
(define-fun x1638 ((x2188 Int)) Int (ite (= x2188 4) 33 (x5919 x2188)))
(define-fun x499 ((x2188 Int)) Int (ite (and (> 36 x2188) (<= 0 x2188)) (x1638 x2188) (x7896 x2188)))
(define-fun x2006 ((x2188 Int)) Int (ite (= x2188 x7062) 2 (x1539 x2188)))
(define-fun x6442 ((x2188 Int)) Int (ite (= x7856 x2188) x2078 (x1623 x2188)))
(define-fun x6185 ((x2188 Int)) Int (ite (= x2188 128) x2078 (x2055 x2188)))
(define-fun x3019 ((x2188 Int)) Int (ite (= x2188 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x6185 x2188)))
(define-fun x2987 ((x2188 Int)) Int (ite (= 132 x2188) x5710 (x3019 x2188)))
(define-fun x449 ((x2188 Int)) Int (ite (= x2188 164) 0 (x2987 x2188)))
(define-fun x6779 ((x2188 Int)) Int (ite (= 196 x2188) 0 (x449 x2188)))
(define-fun x3355 ((x2188 Int)) Int (ite (= x2188 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x5919 x2188)))
(define-fun x6755 ((x2188 Int)) Int (ite (and (< x2188 4) (>= x2188 0)) (x3355 (+ 128 x2188)) (x7896 x2188)))
(define-fun x6566 ((x2188 Int)) Int (ite (= x2188 128) 50226347614966974677930900640024090345938424853691168920094736542366852710400 (x5919 x2188)))
(define-fun x1298 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 4)) (x6566 (+ 128 x2188)) (x7896 x2188)))
(define-fun x6516 ((x2188 Int)) Int 0)
(define-fun x3694 ((x2188 Int)) Int (ite (= x2188 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x104 x2188)))
(define-fun x5050 ((x2188 Int)) Int (ite (= 132 x2188) x1544 (x3694 x2188)))
(define-fun x7549 ((x2188 Int)) Int (ite (= x2188 164) 128 (x5050 x2188)))
(define-fun x946 ((x2188 Int)) Int (ite (= 260 x2188) x2511 (x7549 x2188)))
(define-fun x3537 ((x2188 Int)) Int (ite (= x2188 292) x4644 (x946 x2188)))
(define-fun x3863 ((x2188 Int)) Int (ite (= x2188 292) x4435 (x946 x2188)))
(define-fun x6653 ((x2188 Int)) Int (ite (= x2188 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x104 x2188)))
(define-fun x4373 ((x2188 Int)) Int (ite (= 132 x2188) x110 (x6653 x2188)))
(define-fun x5597 ((x2188 Int)) Int (ite (= 164 x2188) x6617 (x4373 x2188)))
(define-fun x8294 ((x2188 Int)) Int (ite (= x2188 196) x4236 (x5597 x2188)))
(define-fun x4382 ((x2188 Int)) Int (ite (= x729 x2188) x8116 (x2329 x2188)))
(define-fun x3458 ((x2188 Int)) Int (ite (= x2188 x3286) x7132 (x4382 x2188)))
(define-fun x1291 ((x2188 Int)) Int 0)
(define-fun x3543 ((x2188 Int)) Int (ite (= 128 x2188) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x104 x2188)))
(define-fun x3378 ((x2188 Int)) Int (ite (= x2188 132) x2414 (x3543 x2188)))
(define-fun x8238 ((x2188 Int)) Int (ite (= x666 x2188) x6363 (x2329 x2188)))
(define-fun x4972 ((x2188 Int)) Int (ite (= x2188 x2414) x8311 (x8238 x2188)))
(define-fun x1857 ((x2188 Int)) Int 0)
(define-fun x1651 ((x2188 Int)) Int (ite (= 128 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2974 x2188)))
(define-fun x7811 ((x2188 Int)) Int (ite (= x2188 132) 32 (x1651 x2188)))
(define-fun x5150 ((x2188 Int)) Int (ite (= 164 x2188) 12 (x7811 x2188)))
(define-fun x1272 ((x2188 Int)) Int (ite (= x2188 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x5150 x2188)))
(define-fun x7308 ((x2188 Int)) Int (ite (and (> 100 x2188) (<= 0 x2188)) (x1272 (+ 128 x2188)) (x562 x2188)))
(define-fun x3163 ((x2188 Int)) Int (ite (= 128 x2188) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x104 x2188)))
(define-fun x1783 ((x2188 Int)) Int (ite (= 132 x2188) x2665 (x3163 x2188)))
(define-fun x3070 ((x2188 Int)) Int (ite (= x2188 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x697 x2188)))
(define-fun x2417 ((x2188 Int)) Int (ite (and (< x2188 4) (<= 0 x2188)) (x3070 (+ x2188 128)) (x5233 x2188)))
(define-fun x1685 ((x2188 Int)) Int (ite (= 128 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x697 x2188)))
(define-fun x5908 ((x2188 Int)) Int (ite (= 132 x2188) 32 (x1685 x2188)))
(define-fun x8467 ((x2188 Int)) Int (ite (= 164 x2188) 12 (x5908 x2188)))
(define-fun x3191 ((x2188 Int)) Int (ite (= x2188 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x8467 x2188)))
(define-fun x3486 ((x2188 Int)) Int (ite (and (> 100 x2188) (<= 0 x2188)) (x3191 (+ x2188 128)) (x5233 x2188)))
(define-fun x4029 ((x2188 Int)) Int (ite (= x2188 4) 17 (x1257 x2188)))
(define-fun x4042 ((x2188 Int)) Int (ite (and (< x2188 36) (>= x2188 0)) (x4029 x2188) (x1407 x2188)))
(define-fun x1498 ((x2188 Int)) Int (ite (= x2188 128) 48755886422350550937420582033662272622158303343164848365600209189876434731008 (x1257 x2188)))
(define-fun x6725 ((x2188 Int)) Int (ite (and (> 4 x2188) (<= 0 x2188)) (x1498 (+ 128 x2188)) (x1407 x2188)))
(define-fun x7700 ((x2188 Int)) Int (ite x6986 (x1407 x2188) (ite x3176 (x4042 x2188) (ite x91 (x6725 x2188) (x3839 x2188)))))
(define-fun x4845 ((x2188 Int)) Int (ite (= x2188 0) x4936 (x1407 x2188)))
(define-fun x1495 ((x2188 Int)) Int (ite x3975 (x7700 x2188) (x4845 x2188)))
(define-fun x477 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x958 x2188)))
(define-fun x3885 ((x2188 Int)) Int (ite (= 132 x2188) 32 (x477 x2188)))
(define-fun x661 ((x2188 Int)) Int (ite (= 164 x2188) 38 (x3885 x2188)))
(define-fun x4240 ((x2188 Int)) Int (ite (= x2188 196) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x661 x2188)))
(define-fun x446 ((x2188 Int)) Int (ite (= 228 x2188) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x4240 x2188)))
(define-fun x4271 ((x2188 Int)) Int (ite (and (>= x2188 0) (> 132 x2188)) (x446 (+ 128 x2188)) (x546 x2188)))
(define-fun x1756 ((x2188 Int)) Int (ite x2505 (x546 x2188) (ite x615 (x546 x2188) (ite x578 (x546 x2188) (ite x5490 (x546 x2188) (x4271 x2188))))))
(define-fun x89 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> x5713 x2188)) (x1756 x2188) (x7097 x2188)))
(define-fun x3400 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 x5713)) (x89 x2188) (x1407 x2188)))
(define-fun x1699 ((x2188 Int)) Int (ite (= x2188 4) 17 (x7097 x2188)))
(define-fun x4570 ((x2188 Int)) Int (ite (and (< x2188 36) (<= 0 x2188)) (x1699 x2188) (x1407 x2188)))
(define-fun x1149 ((x2188 Int)) Int (ite (= 4 x2188) 17 (x7097 x2188)))
(define-fun x6991 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 36)) (x1149 x2188) (x1407 x2188)))
(define-fun x8305 ((x2188 Int)) Int (ite (= 4 x2188) 17 (x7097 x2188)))
(define-fun x1827 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 36)) (x8305 x2188) (x1407 x2188)))
(define-fun x6763 ((x2188 Int)) Int (ite (= x2188 4) 34 (x7097 x2188)))
(define-fun x7209 ((x2188 Int)) Int (ite (and (< x2188 36) (<= 0 x2188)) (x6763 x2188) (x1407 x2188)))
(define-fun x7667 ((x2188 Int)) Int (ite (= 4 x2188) 34 (x7097 x2188)))
(define-fun x2717 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 36)) (x7667 x2188) (x1407 x2188)))
(define-fun x7375 ((x2188 Int)) Int (ite (= 0 x2188) x4813 (x1407 x2188)))
(define-fun x3321 ((x2188 Int)) Int (ite (= 4 x2188) 17 (x7097 x2188)))
(define-fun x5034 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 36)) (x3321 x2188) (x1407 x2188)))
(define-fun x482 ((x2188 Int)) Int (ite x1024 (x2417 x2188) (x3486 x2188)))
(define-fun x4371 ((x2188 Int)) Int (ite x835 (x482 x2188) (x5233 x2188)))
(define-fun x6924 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 x7599)) (x4371 x2188) (x7097 x2188)))
(define-fun x142 ((x2188 Int)) Int (ite (and (>= x2188 0) (> x7599 x2188)) (x6924 x2188) (x1407 x2188)))
(define-fun x2883 ((x2188 Int)) Int (ite (= x2188 x704) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x2974 x2188)))
(define-fun x3923 ((x2188 Int)) Int (ite (and (< x2188 4) (<= 0 x2188)) (x2883 (+ x2188 x704)) (x562 x2188)))
(define-fun x3603 ((x2188 Int)) Int (ite x759 (x3923 x2188) (x7308 x2188)))
(define-fun x6083 ((x2188 Int)) Int (ite x5554 (x3603 x2188) (x562 x2188)))
(define-fun x1422 ((x2188 Int)) Int (ite (and (< x2188 x1340) (>= x2188 0)) (x6083 x2188) (x7097 x2188)))
(define-fun x3960 ((x2188 Int)) Int (ite (and (>= x2188 0) (> x1340 x2188)) (x1422 x2188) (x1407 x2188)))
(define-fun x6753 ((x2188 Int)) Int (ite (= x2188 4) 34 (x3761 x2188)))
(define-fun x7795 ((x2188 Int)) Int (ite (and (> 36 x2188) (>= x2188 0)) (x6753 x2188) (x1252 x2188)))
(define-fun x8451 ((x2188 Int)) Int (ite (= x6320 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3761 x2188)))
(define-fun x5532 ((x2188 Int)) Int (ite (= x2188 x137) 32 (x8451 x2188)))
(define-fun x1645 ((x2188 Int)) Int (ite (= x2188 x3283) 32 (x5532 x2188)))
(define-fun x7812 ((x2188 Int)) Int (ite (= x2111 x2188) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x1645 x2188)))
(define-fun x8250 ((x2188 Int)) Int (ite (and (> 100 x2188) (<= 0 x2188)) (x7812 (+ x2188 x6320)) (x1252 x2188)))
(define-fun x4916 ((x2188 Int)) Int (ite (= x2188 x6320) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3761 x2188)))
(define-fun x4098 ((x2188 Int)) Int (ite (= x4044 x2188) 32 (x4916 x2188)))
(define-fun x1659 ((x2188 Int)) Int (ite (= x7251 x2188) 48 (x4098 x2188)))
(define-fun x1214 ((x2188 Int)) Int (ite (= x1251 x2188) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x1659 x2188)))
(define-fun x79 ((x2188 Int)) Int (ite (= x4544 x2188) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x1214 x2188)))
(define-fun x5596 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> 132 x2188)) (x79 (+ x2188 x6320)) (x1252 x2188)))
(define-fun x5427 ((x2188 Int)) Int (ite (= 0 x2188) x1081 (x551 x2188)))
(define-fun x7403 ((x2188 Int)) Int (ite (= 32 x2188) x2060 (x5427 x2188)))
(define-fun x4679 ((x2188 Int)) Int (ite x1440 (x551 x2188) (x7403 x2188)))
(define-fun x8117 ((x2188 Int)) Int (ite (and (< x2188 x2879) (<= 0 x2188)) (x4679 x2188) (x3761 x2188)))
(define-fun x4661 ((x2188 Int)) Int (ite (and (> x2879 x2188) (>= x2188 0)) (x8117 x2188) (x1252 x2188)))
(define-fun x5723 ((x2188 Int)) Int (ite (= x2188 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x3761 x2188)))
(define-fun x521 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 4)) (x5723 (+ x2188 128)) (x1252 x2188)))
(define-fun x5027 ((x2188 Int)) Int (ite (= 128 x2188) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x3761 x2188)))
(define-fun x4051 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 4)) (x5027 (+ x2188 128)) (x1252 x2188)))
(define-fun x2441 ((x2188 Int)) Int (ite (= 4 x2188) 33 (x3761 x2188)))
(define-fun x3477 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 36)) (x2441 x2188) (x1252 x2188)))
(define-fun x2540 ((x2188 Int)) Int (ite (= x2188 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x3761 x2188)))
(define-fun x5757 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 4)) (x2540 (+ 128 x2188)) (x1252 x2188)))
(define-fun x1978 ((x2188 Int)) Int (ite x3701 (x7795 x2188) (ite x7678 (x8250 x2188) (ite x6545 (x1252 x2188) (ite x7052 (x1252 x2188) (ite x614 (x5596 x2188) (ite x3046 (x1252 x2188) (ite x766 (x4661 x2188) (ite x5298 (x521 x2188) (ite x411 (x4051 x2188) (ite x7030 (x3477 x2188) (x5757 x2188))))))))))))
(define-fun x7635 ((x2188 Int)) Int (ite x7396 (x1978 x2188) (x1252 x2188)))
(define-fun x2740 ((x2188 Int)) Int (ite x2612 (x7635 x2188) (ite x834 (x7635 x2188) (x1291 x2188))))
(define-fun x6956 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 x5477)) (x2740 x2188) (x7097 x2188)))
(define-fun x6806 ((x2188 Int)) Int (ite (and (> x5477 x2188) (>= x2188 0)) (x6956 x2188) (x1407 x2188)))
(define-fun x5502 ((x2188 Int)) Int (ite x3478 (ite x6947 (x946 x2188) (x3863 x2188)) (x3537 x2188)))
(define-fun x7800 ((x2188 Int)) Int (ite (= x2188 196) x6760 (x5502 x2188)))
(define-fun x7591 ((x2188 Int)) Int (ite (= x2188 228) x4523 (x7800 x2188)))
(define-fun x5085 ((x2188 Int)) Int (ite (= x2188 x258) x5380 (x7591 x2188)))
(define-fun x2205 ((x2188 Int)) Int (ite (= x2188 x7235) x3926 (x5085 x2188)))
(define-fun x7627 ((x2188 Int)) Int (ite (= x7235 x2188) x1006 (x5085 x2188)))
(define-fun x7204 ((x2188 Int)) Int (ite x130 (ite x1873 (x5085 x2188) (x2205 x2188)) (x7627 x2188)))
(define-fun x3818 ((x2188 Int)) Int (ite (and (> x3765 x2188) (<= 164 x2188)) (x7204 (+ x2188 128)) (x2065 x2188)))
(define-fun x2242 ((x2188 Int)) Int (ite (and (<= 128 x2188) (> (+ x3131 128) x2188)) (x3818 (+ x2188 36)) (x5603 x2188)))
(define-fun x4131 ((x2188 Int)) Int (ite (= x2188 x4547) 0 (x2242 x2188)))
(define-fun x4014 ((x2188 Int)) Int (ite (= x2188 x2217) x4602 (x4131 x2188)))
(define-fun x8057 ((x2188 Int)) Int (ite (and (<= 128 x2188) (< x2188 (+ x74 128))) (x3818 (- (+ x1505 x2188) 128)) (x4014 x2188)))
(define-fun x6770 ((x2188 Int)) Int (ite (= x8486 x2188) 0 (x8057 x2188)))
(define-fun x7879 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6770 x2188)))
(define-fun x3851 ((x2188 Int)) Int (ite (= 132 x2188) 32 (x7879 x2188)))
(define-fun x809 ((x2188 Int)) Int (ite (= 164 x2188) 33 (x3851 x2188)))
(define-fun x5788 ((x2188 Int)) Int (ite (= 196 x2188) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x809 x2188)))
(define-fun x5491 ((x2188 Int)) Int (ite (= x2188 228) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x5788 x2188)))
(define-fun x3168 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> 132 x2188)) (x5491 (+ x2188 128)) (x3798 x2188)))
(define-fun x3349 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4014 x2188)))
(define-fun x2696 ((x2188 Int)) Int (ite (= 132 x2188) 32 (x3349 x2188)))
(define-fun x3044 ((x2188 Int)) Int (ite (= x2188 164) 35 (x2696 x2188)))
(define-fun x2818 ((x2188 Int)) Int (ite (= 196 x2188) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x3044 x2188)))
(define-fun x6491 ((x2188 Int)) Int (ite (= 228 x2188) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x2818 x2188)))
(define-fun x6937 ((x2188 Int)) Int (ite (and (< x2188 132) (>= x2188 0)) (x6491 (+ 128 x2188)) (x3798 x2188)))
(define-fun x534 ((x2188 Int)) Int (ite x3828 (x3798 x2188) (ite x1337 (x3798 x2188) (ite x2377 (x3798 x2188) (ite x2333 (x3798 x2188) (ite x2426 (x3168 x2188) (x6937 x2188)))))))
(define-fun x2909 ((x2188 Int)) Int 0)
(define-fun x4457 ((x2188 Int)) Int (ite x2190 (x534 x2188) (x2909 x2188)))
(define-fun x4709 ((x2188 Int)) Int (ite (and (< x2188 x7166) (<= 0 x2188)) (x4457 x2188) (x7097 x2188)))
(define-fun x7438 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 x7166)) (x4709 x2188) (x1407 x2188)))
(define-fun x5111 ((x2188 Int)) Int (ite x7830 (x7896 x2188) (ite x851 (x6755 x2188) (ite x7307 (x499 x2188) (x1298 x2188)))))
(define-fun x2739 ((x2188 Int)) Int (ite x3015 (x5111 x2188) (x7896 x2188)))
(define-fun x7352 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> x7785 x2188)) (x2739 x2188) (x7097 x2188)))
(define-fun x3992 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 x7785)) (x7352 x2188) (x1407 x2188)))
(define-fun x7046 ((x2188 Int)) Int (ite (= 4 x2188) 34 (x4025 x2188)))
(define-fun x2769 ((x2188 Int)) Int (ite (and (> 36 x2188) (<= 0 x2188)) (x7046 x2188) (x8163 x2188)))
(define-fun x6174 ((x2188 Int)) Int (ite (= x2188 128) x2732 (x4025 x2188)))
(define-fun x2812 ((x2188 Int)) Int (ite (= 160 x2188) x5011 (x6174 x2188)))
(define-fun x195 ((x2188 Int)) Int (ite (= x2188 192) x6936 (x2812 x2188)))
(define-fun x6922 ((x2188 Int)) Int (ite (= 160 x2188) x2058 (x6174 x2188)))
(define-fun x947 ((x2188 Int)) Int (ite x8373 (x6174 x2188) (ite x4272 (ite x1167 (x2812 x2188) (x195 x2188)) (x6922 x2188))))
(define-fun x5760 ((x2188 Int)) Int (ite x1317 (ite x3515 (x3081 x2188) (x2979 x2188)) (x7677 x2188)))
(define-fun x1376 ((x2188 Int)) Int (ite (= x2188 196) x4447 (x5760 x2188)))
(define-fun x3552 ((x2188 Int)) Int (ite (= 228 x2188) x5480 (x1376 x2188)))
(define-fun x6233 ((x2188 Int)) Int (ite (= x8025 x2188) x2919 (x3552 x2188)))
(define-fun x6771 ((x2188 Int)) Int (ite (= x8367 x2188) x7982 (x6233 x2188)))
(define-fun x774 ((x2188 Int)) Int (ite (= x8367 x2188) x4327 (x6233 x2188)))
(define-fun x2075 ((x2188 Int)) Int (ite x8009 (ite x2894 (x6233 x2188) (x6771 x2188)) (x774 x2188)))
(define-fun x3275 ((x2188 Int)) Int (ite (and (<= 164 x2188) (< x2188 x1758)) (x2075 (+ x2188 128)) (x908 x2188)))
(define-fun x4946 ((x2188 Int)) Int (ite (and (> (+ x4567 x3299) x2188) (<= x3299 x2188)) (x3275 (- (+ 164 x2188) x3299)) (x947 x2188)))
(define-fun x3989 ((x2188 Int)) Int (ite (= x8592 x2188) 0 (x4946 x2188)))
(define-fun x3693 ((x2188 Int)) Int (ite x535 (x3989 x2188) (x947 x2188)))
(define-fun x4849 ((x2188 Int)) Int (ite (= x3299 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3693 x2188)))
(define-fun x777 ((x2188 Int)) Int (ite (= x2188 x6509) 32 (x4849 x2188)))
(define-fun x6266 ((x2188 Int)) Int (ite (= x3737 x2188) 38 (x777 x2188)))
(define-fun x4500 ((x2188 Int)) Int (ite (= x8242 x2188) 34591783479076665078880830389440322441076534786459098783165778951140825654127 (x6266 x2188)))
(define-fun x5099 ((x2188 Int)) Int (ite (= x2188 x7498) 49960157028345592648530624234191905822321225401495951855107091972775720517632 (x4500 x2188)))
(define-fun x6004 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 132)) (x5099 (+ x3299 x2188)) (x8163 x2188)))
(define-fun x660 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4025 x2188)))
(define-fun x3503 ((x2188 Int)) Int (ite (= x2188 132) 32 (x660 x2188)))
(define-fun x454 ((x2188 Int)) Int (ite (= x2188 164) 30 (x3503 x2188)))
(define-fun x1230 ((x2188 Int)) Int (ite (= x2188 196) 34591783479076665078880830389440322436311164112910831269305739813291000201216 (x454 x2188)))
(define-fun x3517 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 100)) (x1230 (+ 128 x2188)) (x8163 x2188)))
(define-fun x4548 ((x2188 Int)) Int (ite x5071 (x2769 x2188) (ite x637 (x8163 x2188) (ite x1557 (x8163 x2188) (ite x1541 (x8163 x2188) (ite x3949 (x6004 x2188) (x3517 x2188)))))))
(define-fun x4736 ((x2188 Int)) Int (ite x6597 (x4548 x2188) (x8163 x2188)))
(define-fun x7463 ((x2188 Int)) Int (ite (and (> x7045 x2188) (<= 0 x2188)) (x4736 x2188) (x7097 x2188)))
(define-fun x5862 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> x7045 x2188)) (x7463 x2188) (x1407 x2188)))
(define-fun x7619 ((x2188 Int)) Int (ite x4816 (x1923 x2188) (x2770 x2188)))
(define-fun x1722 ((x2188 Int)) Int (ite x5205 (x7619 x2188) (x6891 x2188)))
(define-fun x7185 ((x2188 Int)) Int (ite (and (>= x2188 0) (> x1307 x2188)) (x1722 x2188) (x7097 x2188)))
(define-fun x7300 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> x1307 x2188)) (x7185 x2188) (x1407 x2188)))
(define-fun x780 ((x2188 Int)) Int (ite (= x2188 4) 17 (x7097 x2188)))
(define-fun x4815 ((x2188 Int)) Int (ite (and (> 36 x2188) (>= x2188 0)) (x780 x2188) (x1407 x2188)))
(define-fun x6386 ((x2188 Int)) Int (ite x217 (x3400 x2188) (ite x4316 (x1407 x2188) (ite x4185 (x4570 x2188) (ite x1817 (x6991 x2188) (ite x7640 (x1827 x2188) (ite x5750 (x7209 x2188) (ite x5109 (x2717 x2188) (ite x256 (x7375 x2188) (ite x6691 (x5034 x2188) (ite x4491 (x142 x2188) (ite x7829 (x1407 x2188) (ite x4586 (x3960 x2188) (ite x3257 (x1407 x2188) (ite x2384 (x6806 x2188) (ite x707 (x1407 x2188) (ite x7837 (x7438 x2188) (ite x581 (x1407 x2188) (ite x10 (x3992 x2188) (ite x3411 (x1407 x2188) (ite x7997 (x1407 x2188) (ite x6917 (x5862 x2188) (ite x1697 (x1407 x2188) (ite x4053 (x7300 x2188) (ite x3979 (x1407 x2188) (ite x3717 (x4815 x2188) (ite x1556 (x3673 x2188) (x1407 x2188))))))))))))))))))))))))))))
(define-fun x3930 ((x2188 Int)) Int (ite x2089 (x1495 x2188) (x6386 x2188)))
(define-fun x3536 ((x2188 Int)) Int (ite (and (> 192 x2188) (>= x2188 160)) (x3930 (- x2188 160)) (x2492 x2188)))
(define-fun x7558 ((x2188 Int)) Int (ite (= x141 x2188) 3 (x1539 x2188)))
(define-fun x5454 ((x2188 Int)) Int (ite x2612 (ite x7396 (x1539 x2188) (x7558 x2188)) (ite x834 (ite x7396 (x1539 x2188) (x7558 x2188)) (x1539 x2188))))
(define-fun x5046 ((x2188 Int)) Int (ite (= x3060 x2188) 3 (x2006 x2188)))
(define-fun x7890 ((x2188 Int)) Int (ite x1852 (x2006 x2188) (x5046 x2188)))
(define-fun x4324 ((x2188 Int)) Int (ite x4222 (ite x4254 (x1539 x2188) (x5454 x2188)) (ite x3015 (x1539 x2188) (x7890 x2188))))
(define-fun x1707 ((x2188 Int)) Int (ite x2969 (ite x2324 (x4324 x2188) (x1539 x2188)) (x1539 x2188)))
(define-fun x8308 ((x2188 Int)) Int (ite x2089 (x1539 x2188) (ite x217 (x1539 x2188) (ite x4316 (x1539 x2188) (ite x4185 (x1539 x2188) (ite x1817 (x1539 x2188) (ite x7640 (x1539 x2188) (ite x5750 (x1539 x2188) (ite x5109 (x1539 x2188) (ite x256 (x1707 x2188) (x1539 x2188)))))))))))
(define-fun x2669 ((x2188 Int)) Int (ite (= x5670 x2188) 0 (x5009 x2188)))
(define-fun x5729 ((x2188 Int)) Int (ite (= x2188 x6242) 1 (x8308 x2188)))
(define-fun x2507 ((x2188 Int)) Int (ite (= x3605 x2188) x1526 (x621 x2188)))
(define-fun x2171 ((x2188 Int)) Int (ite x4222 (x1623 x2188) (ite x3015 (x1623 x2188) (x6442 x2188))))
(define-fun x2484 ((x2188 Int)) Int (ite x2969 (ite x2324 (x2171 x2188) (x1623 x2188)) (x1623 x2188)))
(define-fun x5884 ((x2188 Int)) Int (ite x2089 (x1623 x2188) (ite x217 (x1623 x2188) (ite x4316 (x1623 x2188) (ite x4185 (x1623 x2188) (ite x1817 (x1623 x2188) (ite x7640 (x1623 x2188) (ite x5750 (x1623 x2188) (ite x5109 (x1623 x2188) (ite x256 (x2484 x2188) (x1623 x2188)))))))))))
(define-fun x1615 ((x2188 Int)) Int (ite (= x2188 x2921) 0 (x5884 x2188)))
(define-fun x6165 ((x2188 Int)) Int (ite x775 (x7553 x2188) (x7495 x2188)))
(define-fun x6293 ((x2188 Int)) Int (ite x775 (x2367 x2188) (x8280 x2188)))
(define-fun x4226 ((x2188 Int)) Int (ite x775 (x5866 x2188) (x675 x2188)))
(define-fun x3069 ((x2188 Int)) Int (ite x775 (x2984 x2188) (x3739 x2188)))
(define-fun x5883 ((x2188 Int)) Int (ite x775 (x1116 x2188) (x146 x2188)))
(define-fun x5316 ((x2188 Int)) Int (x5009 x2188))
(define-fun x3897 ((x2188 Int)) Int (ite x775 (x1372 x2188) (x8518 x2188)))
(define-fun x172 ((x2188 Int)) Int (x924 x2188))
(define-fun x3659 ((x2188 Int)) Int (x6132 x2188))
(define-fun x2582 ((x2188 Int)) Int (ite x775 (x3364 x2188) (x6880 x2188)))
(define-fun x3248 ((x2188 Int)) Int (ite x775 (x6360 x2188) (x3144 x2188)))
(define-fun x720 ((x2188 Int)) Int (x621 x2188))
(define-fun x269 ((x2188 Int)) Int (x4426 x2188))
(define-fun x6199 ((x2188 Int)) Int (ite x775 (x7598 x2188) (x38 x2188)))
(define-fun x7133 ((x2188 Int)) Int (x2637 x2188))
(define-fun x6030 ((x2188 Int)) Int (ite x775 (x4141 x2188) (x376 x2188)))
(define-fun x3591 ((x2188 Int)) Int (ite x775 (x6130 x2188) (x3175 x2188)))
(define-fun x1542 ((x2188 Int)) Int (ite x775 (x7845 x2188) (x4150 x2188)))
(define-fun x2427 ((x2188 Int)) Int (ite x775 (x6731 x2188) (x6401 x2188)))
(define-fun x321 ((x2188 Int)) Int (ite x775 (x8015 x2188) (x8083 x2188)))
(define-fun x6975 ((x2188 Int)) Int (x297 x2188))
(define-fun x1866 ((x2188 Int)) Int (ite x775 (x1841 x2188) (x5733 x2188)))
(define-fun x5368 ((x2188 Int)) Int (ite x775 (x7434 x2188) (x7734 x2188)))
(define-fun x2651 ((x2188 Int)) Int (ite x775 (x7893 x2188) (x3495 x2188)))
(define-fun x4212 ((x2188 Int)) Int (x421 x2188))
(define-fun x6418 ((x2188 Int)) Int (x2767 x2188))
(define-fun x8563 ((x2188 Int)) Int (x5009 x2188))
(define-fun x6150 ((x2188 Int)) Int (x6132 x2188))
(define-fun x393 ((x2188 Int)) Int (x621 x2188))
(define-fun x5160 ((x2188 Int)) Int (x924 x2188))
(define-fun x6932 ((x2188 Int)) Int (x4426 x2188))
(define-fun x4263 ((x2188 Int)) Int (x2637 x2188))
(define-fun x3047 ((x2188 Int)) Int (x297 x2188))
(define-fun x1076 ((x2188 Int)) Int (ite (= x2188 4) 17 (x2501 x2188)))
(define-fun x5859 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 36)) (x1076 x2188) (x1837 x2188)))
(define-fun x2298 ((x2188 Int)) Int (ite (= 128 x2188) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x3640 x2188)))
(define-fun x7336 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> 4 x2188)) (x2298 (+ x2188 128)) (x2076 x2188)))
(define-fun x7383 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3640 x2188)))
(define-fun x7092 ((x2188 Int)) Int (ite (= x2188 132) 32 (x7383 x2188)))
(define-fun x4214 ((x2188 Int)) Int (ite (= x2188 164) 12 (x7092 x2188)))
(define-fun x196 ((x2188 Int)) Int (ite (= x2188 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x4214 x2188)))
(define-fun x6452 ((x2188 Int)) Int (ite (and (> 100 x2188) (>= x2188 0)) (x196 (+ 128 x2188)) (x2076 x2188)))
(define-fun x4665 ((x2188 Int)) Int (ite x8023 (x7336 x2188) (x6452 x2188)))
(define-fun x4039 ((x2188 Int)) Int (ite x5214 (x4665 x2188) (x2076 x2188)))
(define-fun x5280 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 x33)) (x4039 x2188) (x2501 x2188)))
(define-fun x5300 ((x2188 Int)) Int (ite (and (> x33 x2188) (>= x2188 0)) (x5280 x2188) (x1837 x2188)))
(define-fun x606 ((x2188 Int)) Int (x621 x2188))
(define-fun x1870 ((x2188 Int)) Int (ite x6546 (x417 x2188) (x1841 x2188)))
(define-fun x6517 ((x2188 Int)) Int (ite x6546 (x4659 x2188) (x8015 x2188)))
(define-fun x8386 ((x2188 Int)) Int (x4426 x2188))
(define-fun x8542 ((x2188 Int)) Int (ite x6546 (x7857 x2188) (x2367 x2188)))
(define-fun x2648 ((x2188 Int)) Int (x924 x2188))
(define-fun x4585 ((x2188 Int)) Int (ite x6546 (x3944 x2188) (x6130 x2188)))
(define-fun x6951 ((x2188 Int)) Int (ite x6546 (x401 x2188) (x3364 x2188)))
(define-fun x1394 ((x2188 Int)) Int (x2637 x2188))
(define-fun x3041 ((x2188 Int)) Int (ite x6546 (x3627 x2188) (x2984 x2188)))
(define-fun x4976 ((x2188 Int)) Int (ite x6546 (x7897 x2188) (x7893 x2188)))
(define-fun x2541 ((x2188 Int)) Int (ite x6546 (x459 x2188) (x4141 x2188)))
(define-fun x6857 ((x2188 Int)) Int (ite x6546 (x7148 x2188) (x6360 x2188)))
(define-fun x2840 ((x2188 Int)) Int (ite x6546 (x326 x2188) (x5866 x2188)))
(define-fun x2146 ((x2188 Int)) Int (x5009 x2188))
(define-fun x5476 ((x2188 Int)) Int (ite x6546 (x7804 x2188) (x7845 x2188)))
(define-fun x6967 ((x2188 Int)) Int (ite x6546 (x8230 x2188) (x1897 x2188)))
(define-fun x2880 ((x2188 Int)) Int (ite x6546 (x8268 x2188) (x7434 x2188)))
(define-fun x4111 ((x2188 Int)) Int (x6132 x2188))
(define-fun x3409 ((x2188 Int)) Int (ite x6546 (x511 x2188) (x6731 x2188)))
(define-fun x1180 ((x2188 Int)) Int (ite x6546 (x8227 x2188) (x7598 x2188)))
(define-fun x5517 ((x2188 Int)) Int (x297 x2188))
(define-fun x4751 ((x2188 Int)) Int (ite x6546 (x8202 x2188) (x7553 x2188)))
(define-fun x2684 ((x2188 Int)) Int (ite x6546 (x466 x2188) (x1116 x2188)))
(define-fun x5166 ((x2188 Int)) Int (ite (= 4 x2188) 34 (x6697 x2188)))
(define-fun x3218 ((x2188 Int)) Int (ite (and (>= x2188 0) (> 36 x2188)) (x5166 x2188) (x976 x2188)))
(define-fun x3141 ((x2188 Int)) Int (ite (= x2188 128) x4726 (x6697 x2188)))
(define-fun x3822 ((x2188 Int)) Int (ite (= x2188 160) x6332 (x3141 x2188)))
(define-fun x4600 ((x2188 Int)) Int (ite (= x2188 192) x8343 (x3822 x2188)))
(define-fun x1572 ((x2188 Int)) Int (ite (= x2188 160) x5219 (x3141 x2188)))
(define-fun x5394 ((x2188 Int)) Int (ite x8338 (x3141 x2188) (ite x7226 (ite x905 (x3822 x2188) (x4600 x2188)) (x1572 x2188))))
(define-fun x683 ((x2188 Int)) Int (ite (= 128 x2188) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x5105 x2188)))
(define-fun x3016 ((x2188 Int)) Int (ite (= 132 x2188) x6260 (x683 x2188)))
(define-fun x6834 ((x2188 Int)) Int (ite (= 164 x2188) 128 (x3016 x2188)))
(define-fun x5374 ((x2188 Int)) Int (ite (= x2188 260) x7188 (x6834 x2188)))
(define-fun x425 ((x2188 Int)) Int (ite (= 292 x2188) x8111 (x5374 x2188)))
(define-fun x1643 ((x2188 Int)) Int (ite (= x2188 292) x3946 (x5374 x2188)))
(define-fun x3441 ((x2188 Int)) Int (ite x4701 (ite x1555 (x5374 x2188) (x425 x2188)) (x1643 x2188)))
(define-fun x994 ((x2188 Int)) Int (ite (= x2188 196) x3712 (x3441 x2188)))
(define-fun x1777 ((x2188 Int)) Int (ite (= x2188 228) x3635 (x994 x2188)))
(define-fun x6459 ((x2188 Int)) Int (ite (= x7394 x2188) x3207 (x1777 x2188)))
(define-fun x2621 ((x2188 Int)) Int (ite (= x1726 x2188) x6635 (x6459 x2188)))
(define-fun x6241 ((x2188 Int)) Int (ite (= x1726 x2188) x5165 (x6459 x2188)))
(define-fun x724 ((x2188 Int)) Int (ite x4454 (ite x7004 (x6459 x2188) (x2621 x2188)) (x6241 x2188)))
(define-fun x1162 ((x2188 Int)) Int (ite (and (> x7391 x2188) (<= 164 x2188)) (x724 (+ 128 x2188)) (x5940 x2188)))
(define-fun x819 ((x2188 Int)) Int (ite (and (< x2188 (+ x494 x6609)) (<= x494 x2188)) (x1162 (- (+ 164 x2188) x494)) (x5394 x2188)))
(define-fun x7250 ((x2188 Int)) Int (ite (= x2188 x7304) 0 (x819 x2188)))
(define-fun x4557 ((x2188 Int)) Int (ite x3373 (x7250 x2188) (x5394 x2188)))
(define-fun x6245 ((x2188 Int)) Int (ite (= x2188 x494) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4557 x2188)))
(define-fun x1481 ((x2188 Int)) Int (ite (= x2188 x4196) 32 (x6245 x2188)))
(define-fun x6649 ((x2188 Int)) Int (ite (= x2229 x2188) 38 (x1481 x2188)))
(define-fun x1586 ((x2188 Int)) Int (ite (= x647 x2188) 34591783479076665078880830389440322441076534786459098783165778951140825654127 (x6649 x2188)))
(define-fun x4073 ((x2188 Int)) Int (ite (= x2188 x6702) 49960157028345592648530624234191905822321225401495951855107091972775720517632 (x1586 x2188)))
(define-fun x7187 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 132)) (x4073 (+ x2188 x494)) (x976 x2188)))
(define-fun x2829 ((x2188 Int)) Int (ite (= 128 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6697 x2188)))
(define-fun x1187 ((x2188 Int)) Int (ite (= x2188 132) 32 (x2829 x2188)))
(define-fun x1973 ((x2188 Int)) Int (ite (= 164 x2188) 30 (x1187 x2188)))
(define-fun x3353 ((x2188 Int)) Int (ite (= 196 x2188) 34591783479076665078880830389440322436311164112910831269305739813291000201216 (x1973 x2188)))
(define-fun x2376 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 100)) (x3353 (+ x2188 128)) (x976 x2188)))
(define-fun x5091 ((x2188 Int)) Int (ite x6294 (x3218 x2188) (ite x6462 (x976 x2188) (ite x1673 (x976 x2188) (ite x8184 (x976 x2188) (ite x841 (x7187 x2188) (x2376 x2188)))))))
(define-fun x3160 ((x2188 Int)) Int (ite x4079 (x5091 x2188) (x976 x2188)))
(define-fun x5771 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> x2908 x2188)) (x3160 x2188) (x2501 x2188)))
(define-fun x5017 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 x2908)) (x5771 x2188) (x1837 x2188)))
(define-fun x4931 ((x2188 Int)) Int (x4426 x2188))
(define-fun x5422 ((x2188 Int)) Int (x924 x2188))
(define-fun x5600 ((x2188 Int)) Int (x621 x2188))
(define-fun x5151 ((x2188 Int)) Int (x2637 x2188))
(define-fun x4684 ((x2188 Int)) Int (x6132 x2188))
(define-fun x6398 ((x2188 Int)) Int (x5009 x2188))
(define-fun x288 ((x2188 Int)) Int (x297 x2188))
(define-fun x6985 ((x2188 Int)) Int (ite (= 128 x2188) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x6111 x2188)))
(define-fun x4270 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 4)) (x6985 (+ x2188 128)) (x8534 x2188)))
(define-fun x4190 ((x2188 Int)) Int (ite (= 4 x2188) 33 (x6111 x2188)))
(define-fun x2729 ((x2188 Int)) Int (ite (and (> 36 x2188) (>= x2188 0)) (x4190 x2188) (x8534 x2188)))
(define-fun x2235 ((x2188 Int)) Int (ite (= 128 x2188) 50226347614966974677930900640024090345938424853691168920094736542366852710400 (x6111 x2188)))
(define-fun x3997 ((x2188 Int)) Int (ite (and (>= x2188 0) (> 4 x2188)) (x2235 (+ x2188 128)) (x8534 x2188)))
(define-fun x1295 ((x2188 Int)) Int (ite x7305 (x8534 x2188) (ite x7117 (x4270 x2188) (ite x6594 (x2729 x2188) (x3997 x2188)))))
(define-fun x4162 ((x2188 Int)) Int (ite x1489 (x1295 x2188) (x8534 x2188)))
(define-fun x8407 ((x2188 Int)) Int (ite (and (> x4775 x2188) (>= x2188 0)) (x4162 x2188) (x2501 x2188)))
(define-fun x5633 ((x2188 Int)) Int (ite (and (< x2188 x4775) (<= 0 x2188)) (x8407 x2188) (x1837 x2188)))
(define-fun x5501 ((x2188 Int)) Int (x5009 x2188))
(define-fun x3550 ((x2188 Int)) Int (ite x3079 (x4330 x2188) (x7434 x2188)))
(define-fun x4351 ((x2188 Int)) Int (ite x3079 (x6721 x2188) (x4141 x2188)))
(define-fun x7269 ((x2188 Int)) Int (ite x3079 (x4690 x2188) (x1897 x2188)))
(define-fun x4399 ((x2188 Int)) Int (ite x3079 (x2108 x2188) (x7598 x2188)))
(define-fun x225 ((x2188 Int)) Int (ite x3079 (x5493 x2188) (x3364 x2188)))
(define-fun x1518 ((x2188 Int)) Int (ite x3079 (x8587 x2188) (x1583 x2188)))
(define-fun x1682 ((x2188 Int)) Int (ite x3079 (x3266 x2188) (x6130 x2188)))
(define-fun x4074 ((x2188 Int)) Int (ite x3079 (x3268 x2188) (x2984 x2188)))
(define-fun x5186 ((x2188 Int)) Int (x621 x2188))
(define-fun x5525 ((x2188 Int)) Int (ite x3079 (x5446 x2188) (x7553 x2188)))
(define-fun x8013 ((x2188 Int)) Int (ite x3079 (x7246 x2188) (x7893 x2188)))
(define-fun x5570 ((x2188 Int)) Int (ite x3079 (x3709 x2188) (x6731 x2188)))
(define-fun x4636 ((x2188 Int)) Int (ite x3079 (x7765 x2188) (x2367 x2188)))
(define-fun x1747 ((x2188 Int)) Int (ite x3079 (x7845 x2188) (x2557 x2188)))
(define-fun x4689 ((x2188 Int)) Int (x4426 x2188))
(define-fun x3145 ((x2188 Int)) Int (ite x3079 (x429 x2188) (x1841 x2188)))
(define-fun x6151 ((x2188 Int)) Int (x297 x2188))
(define-fun x552 ((x2188 Int)) Int (x924 x2188))
(define-fun x31 ((x2188 Int)) Int (x2637 x2188))
(define-fun x4136 ((x2188 Int)) Int (x1116 x2188))
(define-fun x4858 ((x2188 Int)) Int (x6132 x2188))
(define-fun x1017 ((x2188 Int)) Int (ite x3079 (x2815 x2188) (x8015 x2188)))
(define-fun x8259 ((x2188 Int)) Int (ite x3079 (x8537 x2188) (x5866 x2188)))
(define-fun x2180 ((x2188 Int)) Int (ite (= x2188 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x5105 x2188)))
(define-fun x5376 ((x2188 Int)) Int (ite (= x2188 132) x5625 (x2180 x2188)))
(define-fun x4788 ((x2188 Int)) Int (ite (= x2188 164) 128 (x5376 x2188)))
(define-fun x2030 ((x2188 Int)) Int (ite (= x2188 260) x2504 (x4788 x2188)))
(define-fun x2715 ((x2188 Int)) Int (ite (= 292 x2188) x4192 (x2030 x2188)))
(define-fun x7824 ((x2188 Int)) Int (ite (= x2188 292) x4703 (x2030 x2188)))
(define-fun x8519 ((x2188 Int)) Int (ite x3018 (ite x1470 (x2030 x2188) (x2715 x2188)) (x7824 x2188)))
(define-fun x3773 ((x2188 Int)) Int (ite (= x2188 196) x518 (x8519 x2188)))
(define-fun x4572 ((x2188 Int)) Int (ite (= 228 x2188) x7496 (x3773 x2188)))
(define-fun x8269 ((x2188 Int)) Int (ite (= x3009 x2188) x4199 (x4572 x2188)))
(define-fun x3734 ((x2188 Int)) Int (ite (= x5051 x2188) x5594 (x8269 x2188)))
(define-fun x6815 ((x2188 Int)) Int (ite (= x5051 x2188) x818 (x8269 x2188)))
(define-fun x4890 ((x2188 Int)) Int (ite x6108 (ite x6005 (x8269 x2188) (x3734 x2188)) (x6815 x2188)))
(define-fun x1902 ((x2188 Int)) Int (ite (and (< x2188 x6464) (<= 164 x2188)) (x4890 (+ x2188 128)) (x4241 x2188)))
(define-fun x3233 ((x2188 Int)) Int (ite (and (> (+ 128 x2218) x2188) (>= x2188 128)) (x1902 (+ 36 x2188)) (x7798 x2188)))
(define-fun x2661 ((x2188 Int)) Int (ite (= x7584 x2188) 0 (x3233 x2188)))
(define-fun x3538 ((x2188 Int)) Int (ite (= x2188 x6589) x1108 (x2661 x2188)))
(define-fun x503 ((x2188 Int)) Int (ite (and (<= 128 x2188) (< x2188 (+ 128 x5518))) (x1902 (- (+ x3689 x2188) 128)) (x3538 x2188)))
(define-fun x6811 ((x2188 Int)) Int (ite (= x2188 x8523) 0 (x503 x2188)))
(define-fun x4124 ((x2188 Int)) Int (ite (= 128 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6811 x2188)))
(define-fun x8167 ((x2188 Int)) Int (ite (= 132 x2188) 32 (x4124 x2188)))
(define-fun x6383 ((x2188 Int)) Int (ite (= 164 x2188) 33 (x8167 x2188)))
(define-fun x6435 ((x2188 Int)) Int (ite (= x2188 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x6383 x2188)))
(define-fun x4870 ((x2188 Int)) Int (ite (= 228 x2188) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x6435 x2188)))
(define-fun x81 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> 132 x2188)) (x4870 (+ x2188 128)) (x8041 x2188)))
(define-fun x7404 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3538 x2188)))
(define-fun x5610 ((x2188 Int)) Int (ite (= 132 x2188) 32 (x7404 x2188)))
(define-fun x4542 ((x2188 Int)) Int (ite (= x2188 164) 35 (x5610 x2188)))
(define-fun x2032 ((x2188 Int)) Int (ite (= 196 x2188) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x4542 x2188)))
(define-fun x160 ((x2188 Int)) Int (ite (= x2188 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x2032 x2188)))
(define-fun x5614 ((x2188 Int)) Int (ite (and (> 132 x2188) (<= 0 x2188)) (x160 (+ 128 x2188)) (x8041 x2188)))
(define-fun x5025 ((x2188 Int)) Int (ite x7575 (x8041 x2188) (ite x1480 (x8041 x2188) (ite x5279 (x8041 x2188) (ite x601 (x8041 x2188) (ite x4187 (x81 x2188) (x5614 x2188)))))))
(define-fun x7214 ((x2188 Int)) Int 0)
(define-fun x3138 ((x2188 Int)) Int (ite x7826 (x5025 x2188) (x7214 x2188)))
(define-fun x7054 ((x2188 Int)) Int (ite (and (< x2188 x3862) (<= 0 x2188)) (x3138 x2188) (x2501 x2188)))
(define-fun x5802 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 x3862)) (x7054 x2188) (x1837 x2188)))
(define-fun x6670 ((x2188 Int)) Int (x924 x2188))
(define-fun x2212 ((x2188 Int)) Int (x6130 x2188))
(define-fun x37 ((x2188 Int)) Int (x7553 x2188))
(define-fun x5389 ((x2188 Int)) Int (ite (= x2188 4) 34 (x6001 x2188)))
(define-fun x8476 ((x2188 Int)) Int (ite (and (> 36 x2188) (<= 0 x2188)) (x5389 x2188) (x2254 x2188)))
(define-fun x2754 ((x2188 Int)) Int (ite (= x1048 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6001 x2188)))
(define-fun x3186 ((x2188 Int)) Int (ite (= x3129 x2188) 32 (x2754 x2188)))
(define-fun x7455 ((x2188 Int)) Int (ite (= x5816 x2188) 32 (x3186 x2188)))
(define-fun x2349 ((x2188 Int)) Int (ite (= x2188 x5815) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x7455 x2188)))
(define-fun x3767 ((x2188 Int)) Int (ite (and (< x2188 100) (<= 0 x2188)) (x2349 (+ x2188 x1048)) (x2254 x2188)))
(define-fun x5234 ((x2188 Int)) Int (ite (= x1048 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6001 x2188)))
(define-fun x8441 ((x2188 Int)) Int (ite (= x2188 x6473) 32 (x5234 x2188)))
(define-fun x312 ((x2188 Int)) Int (ite (= x2188 x5023) 48 (x8441 x2188)))
(define-fun x5054 ((x2188 Int)) Int (ite (= x2188 x5695) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x312 x2188)))
(define-fun x7043 ((x2188 Int)) Int (ite (= x2188 x6784) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x5054 x2188)))
(define-fun x8427 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 132)) (x7043 (+ x1048 x2188)) (x2254 x2188)))
(define-fun x488 ((x2188 Int)) Int (ite (= x2188 0) x6389 (x1939 x2188)))
(define-fun x4716 ((x2188 Int)) Int (ite (= x2188 32) x2362 (x488 x2188)))
(define-fun x5306 ((x2188 Int)) Int (ite x6129 (x1939 x2188) (x4716 x2188)))
(define-fun x5868 ((x2188 Int)) Int (ite (and (> x2283 x2188) (<= 0 x2188)) (x5306 x2188) (x6001 x2188)))
(define-fun x4218 ((x2188 Int)) Int (ite (and (> x2283 x2188) (<= 0 x2188)) (x5868 x2188) (x2254 x2188)))
(define-fun x1654 ((x2188 Int)) Int (ite (= 128 x2188) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x6001 x2188)))
(define-fun x6380 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 4)) (x1654 (+ x2188 128)) (x2254 x2188)))
(define-fun x3263 ((x2188 Int)) Int (ite (= 128 x2188) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x6001 x2188)))
(define-fun x6613 ((x2188 Int)) Int (ite (and (< x2188 4) (>= x2188 0)) (x3263 (+ x2188 128)) (x2254 x2188)))
(define-fun x2401 ((x2188 Int)) Int (ite (= x2188 4) 33 (x6001 x2188)))
(define-fun x313 ((x2188 Int)) Int (ite (and (< x2188 36) (>= x2188 0)) (x2401 x2188) (x2254 x2188)))
(define-fun x2638 ((x2188 Int)) Int (ite (= 128 x2188) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x6001 x2188)))
(define-fun x4828 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 4)) (x2638 (+ x2188 128)) (x2254 x2188)))
(define-fun x5386 ((x2188 Int)) Int (ite x1380 (x8476 x2188) (ite x5792 (x3767 x2188) (ite x349 (x2254 x2188) (ite x3626 (x2254 x2188) (ite x6907 (x8427 x2188) (ite x886 (x2254 x2188) (ite x1299 (x4218 x2188) (ite x4148 (x6380 x2188) (ite x6258 (x6613 x2188) (ite x400 (x313 x2188) (x4828 x2188))))))))))))
(define-fun x1990 ((x2188 Int)) Int (ite x7111 (x5386 x2188) (x2254 x2188)))
(define-fun x5464 ((x2188 Int)) Int 0)
(define-fun x2050 ((x2188 Int)) Int (ite x7072 (x1990 x2188) (ite x7168 (x1990 x2188) (x5464 x2188))))
(define-fun x4305 ((x2188 Int)) Int (x7434 x2188))
(define-fun x3608 ((x2188 Int)) Int (x3364 x2188))
(define-fun x2772 ((x2188 Int)) Int (x1897 x2188))
(define-fun x3328 ((x2188 Int)) Int (x6731 x2188))
(define-fun x2552 ((x2188 Int)) Int (x4141 x2188))
(define-fun x6636 ((x2188 Int)) Int (x7893 x2188))
(define-fun x338 ((x2188 Int)) Int (x7845 x2188))
(define-fun x2272 ((x2188 Int)) Int (x1841 x2188))
(define-fun x5123 ((x2188 Int)) Int (x297 x2188))
(define-fun x1795 ((x2188 Int)) Int (x5866 x2188))
(define-fun x7703 ((x2188 Int)) Int (ite x7072 (x3490 x2188) (ite x7168 (x3490 x2188) (x6360 x2188))))
(define-fun x3071 ((x2188 Int)) Int (x621 x2188))
(define-fun x928 ((x2188 Int)) Int (x5009 x2188))
(define-fun x7512 ((x2188 Int)) Int (x6132 x2188))
(define-fun x3499 ((x2188 Int)) Int (x1116 x2188))
(define-fun x253 ((x2188 Int)) Int (x2637 x2188))
(define-fun x6987 ((x2188 Int)) Int (x2367 x2188))
(define-fun x4718 ((x2188 Int)) Int (x4426 x2188))
(define-fun x6979 ((x2188 Int)) Int (x7598 x2188))
(define-fun x2435 ((x2188 Int)) Int (x8015 x2188))
(define-fun x7247 ((x2188 Int)) Int (x2984 x2188))
(define-fun x3130 ((x2188 Int)) Int (ite (and (>= x2188 0) (> x1875 x2188)) (x2050 x2188) (x2501 x2188)))
(define-fun x2321 ((x2188 Int)) Int (ite (and (< x2188 x1875) (>= x2188 0)) (x3130 x2188) (x1837 x2188)))
(define-fun x4174 ((x2188 Int)) Int (x924 x2188))
(define-fun x2721 ((x2188 Int)) Int (x7845 x2188))
(define-fun x6124 ((x2188 Int)) Int (x297 x2188))
(define-fun x1267 ((x2188 Int)) Int (x621 x2188))
(define-fun x6231 ((x2188 Int)) Int (x5009 x2188))
(define-fun x3488 ((x2188 Int)) Int (x6132 x2188))
(define-fun x4389 ((x2188 Int)) Int (x1116 x2188))
(define-fun x7668 ((x2188 Int)) Int (x4426 x2188))
(define-fun x1466 ((x2188 Int)) Int (x2637 x2188))
(define-fun x7928 ((x2188 Int)) Int (ite (= x1576 x2188) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x3801 x2188)))
(define-fun x6695 ((x2188 Int)) Int (ite (and (>= x2188 0) (> 4 x2188)) (x7928 (+ x1576 x2188)) (x1823 x2188)))
(define-fun x3236 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3801 x2188)))
(define-fun x7431 ((x2188 Int)) Int (ite (= 132 x2188) 32 (x3236 x2188)))
(define-fun x728 ((x2188 Int)) Int (ite (= x2188 164) 12 (x7431 x2188)))
(define-fun x5752 ((x2188 Int)) Int (ite (= x2188 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x728 x2188)))
(define-fun x2379 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 100)) (x5752 (+ x2188 128)) (x1823 x2188)))
(define-fun x2838 ((x2188 Int)) Int (ite x291 (x6695 x2188) (x2379 x2188)))
(define-fun x1478 ((x2188 Int)) Int (ite x4026 (x2838 x2188) (x1823 x2188)))
(define-fun x1342 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 x7577)) (x1478 x2188) (x2501 x2188)))
(define-fun x2499 ((x2188 Int)) Int (ite (and (> x7577 x2188) (<= 0 x2188)) (x1342 x2188) (x1837 x2188)))
(define-fun x3405 ((x2188 Int)) Int (x6132 x2188))
(define-fun x4197 ((x2188 Int)) Int (ite x6560 (x1897 x2188) (x949 x2188)))
(define-fun x3423 ((x2188 Int)) Int (x2637 x2188))
(define-fun x3457 ((x2188 Int)) Int (ite x6560 (x6130 x2188) (x5482 x2188)))
(define-fun x7764 ((x2188 Int)) Int (ite x6560 (x7598 x2188) (x817 x2188)))
(define-fun x1767 ((x2188 Int)) Int (ite x6560 (x3364 x2188) (x264 x2188)))
(define-fun x4349 ((x2188 Int)) Int (x7845 x2188))
(define-fun x2211 ((x2188 Int)) Int (ite x6560 (x7434 x2188) (x2215 x2188)))
(define-fun x6229 ((x2188 Int)) Int (x297 x2188))
(define-fun x4267 ((x2188 Int)) Int (x6360 x2188))
(define-fun x2203 ((x2188 Int)) Int (ite x6560 (x2984 x2188) (x82 x2188)))
(define-fun x474 ((x2188 Int)) Int (ite x6560 (x6731 x2188) (x2576 x2188)))
(define-fun x1297 ((x2188 Int)) Int (ite x6560 (x2367 x2188) (x1313 x2188)))
(define-fun x3676 ((x2188 Int)) Int (ite x6560 (x1841 x2188) (x6013 x2188)))
(define-fun x4961 ((x2188 Int)) Int (x621 x2188))
(define-fun x3916 ((x2188 Int)) Int (ite x6560 (x7893 x2188) (x6671 x2188)))
(define-fun x1146 ((x2188 Int)) Int (ite x6560 (x4141 x2188) (x7842 x2188)))
(define-fun x6210 ((x2188 Int)) Int (ite x6560 (x8015 x2188) (x5890 x2188)))
(define-fun x5478 ((x2188 Int)) Int (ite x6560 (x7553 x2188) (x961 x2188)))
(define-fun x7476 ((x2188 Int)) Int (ite x6560 (x5866 x2188) (x290 x2188)))
(define-fun x6693 ((x2188 Int)) Int (x1116 x2188))
(define-fun x7652 ((x2188 Int)) Int (x4426 x2188))
(define-fun x1725 ((x2188 Int)) Int (x5009 x2188))
(define-fun x7908 ((x2188 Int)) Int (x924 x2188))
(define-fun x6519 ((x2188 Int)) Int (x2984 x2188))
(define-fun x7534 ((x2188 Int)) Int (x4141 x2188))
(define-fun x4474 ((x2188 Int)) Int (x6360 x2188))
(define-fun x2351 ((x2188 Int)) Int (x5009 x2188))
(define-fun x6106 ((x2188 Int)) Int (x7845 x2188))
(define-fun x1228 ((x2188 Int)) Int (x7598 x2188))
(define-fun x7877 ((x2188 Int)) Int (x4426 x2188))
(define-fun x3660 ((x2188 Int)) Int (x3364 x2188))
(define-fun x4820 ((x2188 Int)) Int (x621 x2188))
(define-fun x6040 ((x2188 Int)) Int (x1841 x2188))
(define-fun x1210 ((x2188 Int)) Int (x7434 x2188))
(define-fun x7766 ((x2188 Int)) Int (x5866 x2188))
(define-fun x6557 ((x2188 Int)) Int (x2367 x2188))
(define-fun x6412 ((x2188 Int)) Int (x1116 x2188))
(define-fun x4978 ((x2188 Int)) Int (x8015 x2188))
(define-fun x2945 ((x2188 Int)) Int (x297 x2188))
(define-fun x6331 ((x2188 Int)) Int (x7553 x2188))
(define-fun x2053 ((x2188 Int)) Int (x924 x2188))
(define-fun x8411 ((x2188 Int)) Int (x2637 x2188))
(define-fun x4583 ((x2188 Int)) Int (x6130 x2188))
(define-fun x2731 ((x2188 Int)) Int (x1897 x2188))
(define-fun x7003 ((x2188 Int)) Int (x7893 x2188))
(define-fun x745 ((x2188 Int)) Int (x6132 x2188))
(define-fun x4459 ((x2188 Int)) Int (x6731 x2188))
(define-fun x5258 ((x2188 Int)) Int (ite (= x2188 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x6267 x2188)))
(define-fun x4822 ((x2188 Int)) Int (ite (and (> 4 x2188) (>= x2188 0)) (x5258 (+ x2188 128)) (x2718 x2188)))
(define-fun x4094 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6267 x2188)))
(define-fun x8248 ((x2188 Int)) Int (ite (= 132 x2188) 32 (x4094 x2188)))
(define-fun x2948 ((x2188 Int)) Int (ite (= 164 x2188) 12 (x8248 x2188)))
(define-fun x330 ((x2188 Int)) Int (ite (= 196 x2188) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2948 x2188)))
(define-fun x8102 ((x2188 Int)) Int (ite (and (< x2188 100) (>= x2188 0)) (x330 (+ x2188 128)) (x2718 x2188)))
(define-fun x7149 ((x2188 Int)) Int (ite x22 (x4822 x2188) (x8102 x2188)))
(define-fun x6680 ((x2188 Int)) Int (ite x6334 (x7149 x2188) (x2718 x2188)))
(define-fun x3351 ((x2188 Int)) Int (ite (and (> x1311 x2188) (<= 0 x2188)) (x6680 x2188) (x2501 x2188)))
(define-fun x2307 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> x1311 x2188)) (x3351 x2188) (x1837 x2188)))
(define-fun x7943 ((x2188 Int)) Int (ite (= 4 x2188) 34 (x2501 x2188)))
(define-fun x4231 ((x2188 Int)) Int (ite (and (< x2188 36) (<= 0 x2188)) (x7943 x2188) (x1837 x2188)))
(define-fun x3050 ((x2188 Int)) Int (ite (= 4 x2188) 34 (x2501 x2188)))
(define-fun x8492 ((x2188 Int)) Int (ite (and (< x2188 36) (>= x2188 0)) (x3050 x2188) (x1837 x2188)))
(define-fun x682 ((x2188 Int)) Int (ite (= x729 x2188) x3860 (x7594 x2188)))
(define-fun x154 ((x2188 Int)) Int (ite (= x4760 x2188) x7651 (x682 x2188)))
(define-fun x156 ((x2188 Int)) Int (ite (and (>= x2188 128) (< x2188 (+ x2218 128))) (x1902 (+ x2188 36)) (x6811 x2188)))
(define-fun x8580 ((x2188 Int)) Int (ite (= x2188 x2092) 0 (x156 x2188)))
(define-fun x4028 ((x2188 Int)) Int (ite (= x7835 x2188) x7477 (x8580 x2188)))
(define-fun x6057 ((x2188 Int)) Int (ite (= x4268 x2188) 0 (x1116 x2188)))
(define-fun x1775 ((x2188 Int)) Int (ite (= 128 x2188) x2218 (x4028 x2188)))
(define-fun x4738 ((x2188 Int)) Int (ite (and (< x2188 (+ 160 x2218)) (<= 160 x2188)) (x1902 (+ 4 x2188)) (x1775 x2188)))
(define-fun x3096 ((x2188 Int)) Int (ite (= x4287 x2188) 0 (x4738 x2188)))
(define-fun x6640 ((x2188 Int)) Int (ite (= x2188 x917) x5518 (x3096 x2188)))
(define-fun x6375 ((x2188 Int)) Int (ite (and (< x2188 (+ x593 x5518)) (<= x593 x2188)) (x1902 (- (+ x2188 x3689) x593)) (x6640 x2188)))
(define-fun x7980 ((x2188 Int)) Int (ite (= x2657 x2188) 0 (x6375 x2188)))
(define-fun x6089 ((x2188 Int)) Int (ite (= x2188 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x5105 x2188)))
(define-fun x1203 ((x2188 Int)) Int (ite (= x2188 132) x6319 (x6089 x2188)))
(define-fun x1733 ((x2188 Int)) Int (ite (= x2188 164) 128 (x1203 x2188)))
(define-fun x1578 ((x2188 Int)) Int (ite (= x2188 260) x7234 (x1733 x2188)))
(define-fun x7986 ((x2188 Int)) Int (ite (= 292 x2188) x6275 (x1578 x2188)))
(define-fun x2702 ((x2188 Int)) Int (ite (= 292 x2188) x3362 (x1578 x2188)))
(define-fun x4763 ((x2188 Int)) Int (ite x4530 (ite x1406 (x1578 x2188) (x7986 x2188)) (x2702 x2188)))
(define-fun x514 ((x2188 Int)) Int (ite (= x2188 196) x4358 (x4763 x2188)))
(define-fun x1411 ((x2188 Int)) Int (ite (= 228 x2188) x1379 (x514 x2188)))
(define-fun x4281 ((x2188 Int)) Int (ite (= x5239 x2188) x8177 (x1411 x2188)))
(define-fun x631 ((x2188 Int)) Int (ite (= x2188 x1075) x6097 (x4281 x2188)))
(define-fun x6408 ((x2188 Int)) Int (ite (= x1075 x2188) x7694 (x4281 x2188)))
(define-fun x7071 ((x2188 Int)) Int (ite x6279 (ite x5049 (x4281 x2188) (x6408 x2188)) (x631 x2188)))
(define-fun x8107 ((x2188 Int)) Int (ite (and (> x293 x2188) (>= x2188 164)) (x7071 (+ 128 x2188)) (x3238 x2188)))
(define-fun x7770 ((x2188 Int)) Int (ite (= x2188 x1907) x7592 (x8570 x2188)))
(define-fun x6139 ((x2188 Int)) Int (ite (and (> (+ x7630 x7592) x2188) (>= x2188 x7630)) (x8107 (- (+ x2188 x1603) x7630)) (x3675 x2188)))
(define-fun x443 ((x2188 Int)) Int (ite (= x2188 x7363) 0 (x6139 x2188)))
(define-fun x7792 ((x2188 Int)) Int (ite (= x2188 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1994 x2188)))
(define-fun x7293 ((x2188 Int)) Int (ite (= x2188 132) 32 (x7792 x2188)))
(define-fun x6831 ((x2188 Int)) Int (ite (= x2188 164) 38 (x7293 x2188)))
(define-fun x4554 ((x2188 Int)) Int (ite (= 196 x2188) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x6831 x2188)))
(define-fun x997 ((x2188 Int)) Int (ite (= 228 x2188) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x4554 x2188)))
(define-fun x978 ((x2188 Int)) Int (ite (and (> 132 x2188) (>= x2188 0)) (x997 (+ 128 x2188)) (x2542 x2188)))
(define-fun x2574 ((x2188 Int)) Int (ite (= 4 x2188) 17 (x2501 x2188)))
(define-fun x911 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 36)) (x2574 x2188) (x1837 x2188)))
(define-fun x1315 ((x2188 Int)) Int (ite (= x2188 4) 17 (x2501 x2188)))
(define-fun x7337 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 36)) (x1315 x2188) (x1837 x2188)))
(define-fun x3249 ((x2188 Int)) Int (ite (= x2188 4) 17 (x2501 x2188)))
(define-fun x885 ((x2188 Int)) Int (ite (and (< x2188 36) (<= 0 x2188)) (x3249 x2188) (x1837 x2188)))
(define-fun x7409 ((x2188 Int)) Int (x3364 x2188))
(define-fun x1801 ((x2188 Int)) Int (x7409 x2188))
(define-fun x4762 ((x2188 Int)) Int (x4141 x2188))
(define-fun x6192 ((x2188 Int)) Int (x4762 x2188))
(define-fun x8571 ((x2188 Int)) Int (x621 x2188))
(define-fun x7485 ((x2188 Int)) Int (x8571 x2188))
(define-fun x5036 ((x2188 Int)) Int (x8015 x2188))
(define-fun x3764 ((x2188 Int)) Int (x5036 x2188))
(define-fun x1804 ((x2188 Int)) Int (x924 x2188))
(define-fun x828 ((x2188 Int)) Int (x1804 x2188))
(define-fun x6499 ((x2188 Int)) Int (x4426 x2188))
(define-fun x7557 ((x2188 Int)) Int (x6499 x2188))
(define-fun x3297 ((x2188 Int)) Int (x7434 x2188))
(define-fun x1683 ((x2188 Int)) Int (x3297 x2188))
(define-fun x6971 ((x2188 Int)) Int (x2637 x2188))
(define-fun x3085 ((x2188 Int)) Int (x6971 x2188))
(define-fun x7718 ((x2188 Int)) Int (x1116 x2188))
(define-fun x7189 ((x2188 Int)) Int (x7718 x2188))
(define-fun x4749 ((x2188 Int)) Int (x6731 x2188))
(define-fun x7923 ((x2188 Int)) Int (x4749 x2188))
(define-fun x1774 ((x2188 Int)) Int (x7893 x2188))
(define-fun x2983 ((x2188 Int)) Int (x1774 x2188))
(define-fun x6029 ((x2188 Int)) Int (x7553 x2188))
(define-fun x1023 ((x2188 Int)) Int (x6029 x2188))
(define-fun x2268 ((x2188 Int)) Int (x5866 x2188))
(define-fun x8298 ((x2188 Int)) Int (x2268 x2188))
(define-fun x7393 ((x2188 Int)) Int (x5009 x2188))
(define-fun x3298 ((x2188 Int)) Int (x7393 x2188))
(define-fun x4649 ((x2188 Int)) Int (x1841 x2188))
(define-fun x6817 ((x2188 Int)) Int (x4649 x2188))
(define-fun x7468 ((x2188 Int)) Int (x7845 x2188))
(define-fun x2052 ((x2188 Int)) Int (x7468 x2188))
(define-fun x7016 ((x2188 Int)) Int (x6132 x2188))
(define-fun x3774 ((x2188 Int)) Int (x7016 x2188))
(define-fun x6587 ((x2188 Int)) Int (x7598 x2188))
(define-fun x4959 ((x2188 Int)) Int (x6587 x2188))
(define-fun x8499 ((x2188 Int)) Int (x1897 x2188))
(define-fun x4639 ((x2188 Int)) Int (x8499 x2188))
(define-fun x5188 ((x2188 Int)) Int (x6360 x2188))
(define-fun x5799 ((x2188 Int)) Int (x5188 x2188))
(define-fun x6414 ((x2188 Int)) Int (x6130 x2188))
(define-fun x1072 ((x2188 Int)) Int (x6414 x2188))
(define-fun x2305 ((x2188 Int)) Int (x2367 x2188))
(define-fun x3344 ((x2188 Int)) Int (x2305 x2188))
(define-fun x3560 ((x2188 Int)) Int (x297 x2188))
(define-fun x4195 ((x2188 Int)) Int (x3560 x2188))
(define-fun x4638 ((x2188 Int)) Int (x2984 x2188))
(define-fun x6148 ((x2188 Int)) Int (x4638 x2188))
(define-fun x2845 ((x2188 Int)) Int (ite x4079 (x1841 x2188) (x2179 x2188)))
(define-fun x8263 ((x2188 Int)) Int (ite x4079 (x8015 x2188) (x1229 x2188)))
(define-fun x233 ((x2188 Int)) Int (ite x4079 (x4141 x2188) (x2662 x2188)))
(define-fun x6348 ((x2188 Int)) Int (x6499 x2188))
(define-fun x6483 ((x2188 Int)) Int (ite x4079 (x1116 x2188) (x4108 x2188)))
(define-fun x4411 ((x2188 Int)) Int (ite x4079 (x2367 x2188) (x6436 x2188)))
(define-fun x4455 ((x2188 Int)) Int (x8571 x2188))
(define-fun x8251 ((x2188 Int)) Int (ite x4079 (x6130 x2188) (x8588 x2188)))
(define-fun x230 ((x2188 Int)) Int (x1804 x2188))
(define-fun x2470 ((x2188 Int)) Int (ite x4079 (x2984 x2188) (x1241 x2188)))
(define-fun x5058 ((x2188 Int)) Int (x6971 x2188))
(define-fun x7903 ((x2188 Int)) Int (x7016 x2188))
(define-fun x5864 ((x2188 Int)) Int (ite x4079 (x7893 x2188) (x318 x2188)))
(define-fun x3398 ((x2188 Int)) Int (ite x4079 (x3364 x2188) (x3180 x2188)))
(define-fun x2460 ((x2188 Int)) Int (ite x4079 (x5866 x2188) (x5853 x2188)))
(define-fun x3687 ((x2188 Int)) Int (x7393 x2188))
(define-fun x6179 ((x2188 Int)) Int (x7468 x2188))
(define-fun x1325 ((x2188 Int)) Int (ite x4079 (x1897 x2188) (x4319 x2188)))
(define-fun x6616 ((x2188 Int)) Int (ite x4079 (x7434 x2188) (x2481 x2188)))
(define-fun x5092 ((x2188 Int)) Int (ite x4079 (x6731 x2188) (x968 x2188)))
(define-fun x8113 ((x2188 Int)) Int (x3560 x2188))
(define-fun x2519 ((x2188 Int)) Int (ite x4079 (x7598 x2188) (x5308 x2188)))
(define-fun x676 ((x2188 Int)) Int (x5188 x2188))
(define-fun x4163 ((x2188 Int)) Int (ite x4079 (x7553 x2188) (x3638 x2188)))
(define-fun x5418 ((x2188 Int)) Int (ite (= x494 x2188) x6609 (x4557 x2188)))
(define-fun x3099 ((x2188 Int)) Int (ite (and (> (+ x3116 x6609) x2188) (>= x2188 x3116)) (x1162 (- (+ 164 x2188) x3116)) (x5418 x2188)))
(define-fun x3039 ((x2188 Int)) Int (ite (= x2188 x6166) 0 (x3099 x2188)))
(define-fun x369 ((x2188 Int)) Int (ite (= x23 x2188) x4758 (x3039 x2188)))
(define-fun x7958 ((x2188 Int)) Int (ite (and (< x2188 (+ x4088 x4758)) (>= x2188 x4088)) (x1162 (- (+ x7233 x2188) x4088)) (x369 x2188)))
(define-fun x2074 ((x2188 Int)) Int (ite (= x2752 x2188) 0 (x7958 x2188)))
(define-fun x6184 ((x2188 Int)) Int (ite (= x5139 x2188) x6260 (x2074 x2188)))
(define-fun x7780 ((x2188 Int)) Int (ite (= x2188 x5542) 128 (x6184 x2188)))
(define-fun x7535 ((x2188 Int)) Int (ite (= x2188 x4420) x3439 (x7780 x2188)))
(define-fun x15 ((x2188 Int)) Int (ite (= x2188 x5787) x7505 (x7535 x2188)))
(define-fun x8190 ((x2188 Int)) Int (ite (= x6371 x2188) x4660 (x15 x2188)))
(define-fun x8335 ((x2188 Int)) Int (ite (= x654 x2188) x3549 (x8190 x2188)))
(define-fun x7578 ((x2188 Int)) Int (ite (= x8048 x2188) x1425 (x8335 x2188)))
(define-fun x641 ((x2188 Int)) Int (ite x1642 (x8335 x2188) (ite x2433 (x8190 x2188) (ite x1330 (x15 x2188) (ite x5499 (x7535 x2188) (x7578 x2188))))))
(define-fun x3551 ((x2188 Int)) Int (ite (= x2188 x5678) 0 (x641 x2188)))
(define-fun x1639 ((x2188 Int)) Int (ite (= x1035 x2188) x3712 (x3551 x2188)))
(define-fun x6042 ((x2188 Int)) Int (ite (= x5268 x2188) x5115 (x1639 x2188)))
(define-fun x1134 ((x2188 Int)) Int (ite (= x2188 x8188) x210 (x6042 x2188)))
(define-fun x3903 ((x2188 Int)) Int (ite (= x1609 x2188) x2762 (x1134 x2188)))
(define-fun x7298 ((x2188 Int)) Int (ite (= x2188 x3356) x2590 (x3903 x2188)))
(define-fun x8385 ((x2188 Int)) Int (ite (= x2188 x1427) x5905 (x7298 x2188)))
(define-fun x4045 ((x2188 Int)) Int (ite (= x2188 x1357) x6486 (x8385 x2188)))
(define-fun x5874 ((x2188 Int)) Int (ite x6164 (x8385 x2188) (ite x7371 (x7298 x2188) (ite x2795 (x3903 x2188) (ite x7919 (x1134 x2188) (x4045 x2188))))))
(define-fun x375 ((x2188 Int)) Int (ite (= x2188 x3753) 0 (x5874 x2188)))
(define-fun x7180 ((x2188 Int)) Int (ite (= x2188 x1708) x758 (x375 x2188)))
(define-fun x5676 ((x2188 Int)) Int (ite (= x7540 x2188) x5184 (x7180 x2188)))
(define-fun x8461 ((x2188 Int)) Int (ite (= x2188 x1426) 150 (x5676 x2188)))
(define-fun x6522 ((x2188 Int)) Int (ite (and (< x2188 (+ x229 150)) (<= x229 x2188)) (x1162 (- (+ x8531 x2188) x229)) (x8461 x2188)))
(define-fun x4708 ((x2188 Int)) Int (ite (and (< x2188 0) (<= 0 x2188)) (x6277 x2188) (x6522 x2188)))
(define-fun x6247 ((x2188 Int)) Int (ite x2531 (x4708 x2188) (x6522 x2188)))
(define-fun x1359 ((x2188 Int)) Int (ite (= x2188 x1426) x2458 (x6247 x2188)))
(define-fun x909 ((x2188 Int)) Int (ite (and (>= x2188 x4063) (> (+ x2458 x4063) x2188)) (x6277 (- x2188 x4063)) (x1359 x2188)))
(define-fun x6494 ((x2188 Int)) Int (ite (= x5661 x2188) x1449 (x909 x2188)))
(define-fun x3149 ((x2188 Int)) Int (ite (= x2188 x7698) x4669 (x6494 x2188)))
(define-fun x6261 ((x2188 Int)) Int (ite (= x3521 x2188) x7464 (x3149 x2188)))
(define-fun x2462 ((x2188 Int)) Int (ite (= x4970 x2188) x634 (x6261 x2188)))
(define-fun x3284 ((x2188 Int)) Int (ite x1175 (x6261 x2188) (ite x2490 (x3149 x2188) (ite x7450 (x6494 x2188) (ite x837 (x909 x2188) (x2462 x2188))))))
(define-fun x6146 ((x2188 Int)) Int (ite (= x7297 x2188) 0 (x3284 x2188)))
(define-fun x164 ((x2188 Int)) Int (ite (= x2188 x4853) x3024 (x6146 x2188)))
(define-fun x2251 ((x2188 Int)) Int (ite (= x5661 x2188) x6260 (x164 x2188)))
(define-fun x8038 ((x2188 Int)) Int (ite (= x1511 x2188) 160 (x2251 x2188)))
(define-fun x2466 ((x2188 Int)) Int (ite (= x4866 x2188) x2125 (x8038 x2188)))
(define-fun x6776 ((x2188 Int)) Int (ite (= x5019 x2188) x4235 (x2466 x2188)))
(define-fun x883 ((x2188 Int)) Int (ite (= x2188 x6366) x8304 (x6776 x2188)))
(define-fun x8390 ((x2188 Int)) Int (ite (= x4650 x2188) x1065 (x883 x2188)))
(define-fun x7373 ((x2188 Int)) Int (ite (= x2188 x4780) x8440 (x8390 x2188)))
(define-fun x5198 ((x2188 Int)) Int (ite x1964 (x8390 x2188) (ite x1288 (x883 x2188) (ite x5930 (x6776 x2188) (ite x5185 (x2466 x2188) (x7373 x2188))))))
(define-fun x7990 ((x2188 Int)) Int (ite (= x3435 x2188) 0 (x5198 x2188)))
(define-fun x4592 ((x2188 Int)) Int (ite (= x4054 x2188) x3712 (x7990 x2188)))
(define-fun x3790 ((x2188 Int)) Int (ite (= x2188 x7828) x7311 (x4592 x2188)))
(define-fun x1105 ((x2188 Int)) Int (ite (= x7257 x2188) x3205 (x3790 x2188)))
(define-fun x1188 ((x2188 Int)) Int (ite (= x2188 x992) x1771 (x1105 x2188)))
(define-fun x7169 ((x2188 Int)) Int (ite (= x45 x2188) x5732 (x1188 x2188)))
(define-fun x7056 ((x2188 Int)) Int (ite (= x2188 x8119) x396 (x7169 x2188)))
(define-fun x3925 ((x2188 Int)) Int (ite (= x2188 x4032) x2278 (x7056 x2188)))
(define-fun x7684 ((x2188 Int)) Int (ite x4180 (x7056 x2188) (ite x7994 (x7169 x2188) (ite x4205 (x1188 x2188) (ite x7279 (x1105 x2188) (x3925 x2188))))))
(define-fun x3384 ((x2188 Int)) Int (ite (= x3564 x2188) 0 (x7684 x2188)))
(define-fun x5903 ((x2188 Int)) Int (ite (= x7843 x2188) x3593 (x3384 x2188)))
(define-fun x5039 ((x2188 Int)) Int (x5009 x2188))
(define-fun x7266 ((x2188 Int)) Int (x5866 x2188))
(define-fun x5218 ((x2188 Int)) Int (x1897 x2188))
(define-fun x4945 ((x2188 Int)) Int (x1841 x2188))
(define-fun x8099 ((x2188 Int)) Int (x7598 x2188))
(define-fun x219 ((x2188 Int)) Int (x6130 x2188))
(define-fun x1861 ((x2188 Int)) Int (x2984 x2188))
(define-fun x877 ((x2188 Int)) Int (x7553 x2188))
(define-fun x6579 ((x2188 Int)) Int (x8015 x2188))
(define-fun x7969 ((x2188 Int)) Int (x621 x2188))
(define-fun x977 ((x2188 Int)) Int (x4141 x2188))
(define-fun x7060 ((x2188 Int)) Int (x4426 x2188))
(define-fun x8004 ((x2188 Int)) Int (x7434 x2188))
(define-fun x2306 ((x2188 Int)) Int (x297 x2188))
(define-fun x4992 ((x2188 Int)) Int (x2367 x2188))
(define-fun x6562 ((x2188 Int)) Int (x1116 x2188))
(define-fun x5271 ((x2188 Int)) Int (x924 x2188))
(define-fun x7480 ((x2188 Int)) Int (x2637 x2188))
(define-fun x6582 ((x2188 Int)) Int (x6731 x2188))
(define-fun x1358 ((x2188 Int)) Int (x6132 x2188))
(define-fun x1126 ((x2188 Int)) Int (x3364 x2188))
(define-fun x5392 ((x2188 Int)) Int (x7893 x2188))
(define-fun x822 ((x2188 Int)) Int (x7434 x2188))
(define-fun x6394 ((x2188 Int)) Int (x7893 x2188))
(define-fun x1864 ((x2188 Int)) Int (x1841 x2188))
(define-fun x296 ((x2188 Int)) Int (x4141 x2188))
(define-fun x4123 ((x2188 Int)) Int (x7553 x2188))
(define-fun x442 ((x2188 Int)) Int (x2367 x2188))
(define-fun x7264 ((x2188 Int)) Int (x7735 x2188))
(define-fun x4036 ((x2188 Int)) Int (x4426 x2188))
(define-fun x371 ((x2188 Int)) Int (x8015 x2188))
(define-fun x75 ((x2188 Int)) Int (x6731 x2188))
(define-fun x5149 ((x2188 Int)) Int (x5009 x2188))
(define-fun x3582 ((x2188 Int)) Int (x621 x2188))
(define-fun x6058 ((x2188 Int)) Int (x924 x2188))
(define-fun x752 ((x2188 Int)) Int (x3364 x2188))
(define-fun x812 ((x2188 Int)) Int (x7598 x2188))
(define-fun x7011 ((x2188 Int)) Int (x2637 x2188))
(define-fun x3317 ((x2188 Int)) Int (x297 x2188))
(define-fun x3034 ((x2188 Int)) Int (x2984 x2188))
(define-fun x7702 ((x2188 Int)) Int (x1897 x2188))
(define-fun x7801 ((x2188 Int)) Int (x6130 x2188))
(define-fun x6758 ((x2188 Int)) Int (x5866 x2188))
(define-fun x1809 ((x2188 Int)) Int (x1116 x2188))
(define-fun x8169 ((x2188 Int)) Int (x6132 x2188))
(define-fun x2375 ((x2188 Int)) Int (ite x7603 (x7768 x2188) (x8270 x2188)))
(define-fun x644 ((x2188 Int)) Int (ite (= x2188 4) 33 (x3029 x2188)))
(define-fun x7906 ((x2188 Int)) Int (ite (and (< x2188 36) (>= x2188 0)) (x644 x2188) (x1754 x2188)))
(define-fun x4913 ((x2188 Int)) Int (ite (= x2188 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3428 x2188)))
(define-fun x6419 ((x2188 Int)) Int (ite (= 192 x2188) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4913 x2188)))
(define-fun x3230 ((x2188 Int)) Int (ite (= 128 x2188) 64 (x3498 x2188)))
(define-fun x8576 ((x2188 Int)) Int (ite (= x2188 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3571 x2188)))
(define-fun x3390 ((x2188 Int)) Int (ite (= 258 x2188) x4617 (x8576 x2188)))
(define-fun x3795 ((x2188 Int)) Int (ite (= x2188 224) 34 (x8567 x2188)))
(define-fun x3806 ((x2188 Int)) Int (ite (= x2188 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x2809 x2188)))
(define-fun x7922 ((x2188 Int)) Int (ite (= x2188 294) x1648 (x3806 x2188)))
(define-fun x3212 ((x2188 Int)) Int (ite (= 326 x2188) x666 (x7922 x2188)))
(define-fun x3770 ((x2188 Int)) Int (ite (= x2188 358) 160 (x3212 x2188)))
(define-fun x8185 ((x2188 Int)) Int (ite (= x2188 454) x6202 (x3770 x2188)))
(define-fun x4173 ((x2188 Int)) Int (ite (and (> (+ x6202 486) x2188) (<= 486 x2188)) (x6419 (- x2188 326)) (x8185 x2188)))
(define-fun x1112 ((x2188 Int)) Int (ite (= 390 x2188) 0 (x4173 x2188)))
(define-fun x2561 ((x2188 Int)) Int (ite (= x2188 422) x6424 (x1112 x2188)))
(define-fun x5508 ((x2188 Int)) Int (ite (= x2188 x29) x194 (x2561 x2188)))
(define-fun x2444 ((x2188 Int)) Int (ite (and (<= x431 x2188) (> (+ x194 x431) x2188)) (x3390 (- (+ x2188 256) x431)) (x5508 x2188)))
(define-fun x4664 ((x2188 Int)) Int (ite (and (>= x2188 292) (> x1826 x2188)) (x2444 (+ x2188 290)) (x5900 x2188)))
(define-fun x4181 ((x2188 Int)) Int (ite (= x2188 128) 0 (x3049 x2188)))
(define-fun x6887 ((x2188 Int)) Int (ite (= 160 x2188) 0 (x4181 x2188)))
(define-fun x3037 ((x2188 Int)) Int (ite (= 290 x2188) x5541 (x2444 x2188)))
(define-fun x7902 ((x2188 Int)) Int (ite (= 322 x2188) x247 (x3037 x2188)))
(define-fun x3629 ((x2188 Int)) Int (ite (= 0 x2188) x857 (x4289 x2188)))
(define-fun x3803 ((x2188 Int)) Int (ite (= 32 x2188) x3874 (x3629 x2188)))
(define-fun x305 ((x2188 Int)) Int (ite (= x2188 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x3029 x2188)))
(define-fun x5527 ((x2188 Int)) Int (ite (and (< x2188 4) (<= 0 x2188)) (x305 (+ 128 x2188)) (x1754 x2188)))
(define-fun x6787 ((x2188 Int)) Int (ite (= 128 x2188) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x3029 x2188)))
(define-fun x1141 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 4)) (x6787 (+ x2188 128)) (x1754 x2188)))
(define-fun x3970 ((x2188 Int)) Int (ite (= 548 x2188) x5912 (x8423 x2188)))
(define-fun x4985 ((x2188 Int)) Int (ite (= 580 x2188) x7839 (x3970 x2188)))
(define-fun x2051 ((x2188 Int)) Int (ite (= 548 x2188) x4142 (x8423 x2188)))
(define-fun x445 ((x2188 Int)) Int (ite x984 (x7641 x2188) (ite x7882 (ite x1986 (x3970 x2188) (x4985 x2188)) (x2051 x2188))))
(define-fun x2456 ((x2188 Int)) Int (ite (= 516 x2188) x547 (x1237 x2188)))
(define-fun x3187 ((x2188 Int)) Int (ite (= x2188 x2391) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3029 x2188)))
(define-fun x2290 ((x2188 Int)) Int (ite (= x2188 x603) 32 (x3187 x2188)))
(define-fun x6441 ((x2188 Int)) Int (ite (= x8596 x2188) 48 (x2290 x2188)))
(define-fun x878 ((x2188 Int)) Int (ite (= x2188 x1743) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x6441 x2188)))
(define-fun x4248 ((x2188 Int)) Int (ite (= x2188 x4612) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x878 x2188)))
(define-fun x5957 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 132)) (x4248 (+ x2188 x2391)) (x1754 x2188)))
(define-fun x1729 ((x2188 Int)) Int (ite (= x2188 354) 64 (x159 x2188)))
(define-fun x1171 ((x2188 Int)) Int (ite (= x2188 x2391) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3029 x2188)))
(define-fun x2303 ((x2188 Int)) Int (ite (= x1368 x2188) 32 (x1171 x2188)))
(define-fun x872 ((x2188 Int)) Int (ite (= x8546 x2188) 32 (x2303 x2188)))
(define-fun x4334 ((x2188 Int)) Int (ite (= x6056 x2188) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x872 x2188)))
(define-fun x5322 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 100)) (x4334 (+ x2391 x2188)) (x1754 x2188)))
(define-fun x2248 ((x2188 Int)) Int (ite x5438 (x2444 x2188) (x7902 x2188)))
(define-fun x1477 ((x2188 Int)) Int (ite (= x2188 x2391) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x2248 x2188)))
(define-fun x4355 ((x2188 Int)) Int (ite (= x2188 x7199) x1648 (x1477 x2188)))
(define-fun x5237 ((x2188 Int)) Int (ite (= x2188 x3469) 192 (x4355 x2188)))
(define-fun x3613 ((x2188 Int)) Int (ite (= x2188 x7230) x4046 (x5237 x2188)))
(define-fun x4467 ((x2188 Int)) Int (ite (and (> (+ x4046 x1930) x2188) (>= x2188 x1930)) (x445 (- (+ x2188 548) x1930)) (x3613 x2188)))
(define-fun x2342 ((x2188 Int)) Int (ite (= x2188 x2396) x7399 (x4467 x2188)))
(define-fun x2253 ((x2188 Int)) Int (ite (= x2188 x4737) x5742 (x2342 x2188)))
(define-fun x663 ((x2188 Int)) Int (ite (= 386 x2188) x4016 (x1250 x2188)))
(define-fun x7604 ((x2188 Int)) Int (ite (= 418 x2188) x2991 (x663 x2188)))
(define-fun x636 ((x2188 Int)) Int (ite (and (> (+ x5742 x1715) x2188) (<= x1715 x2188)) (x7604 (- (+ x2188 386) x1715)) (x2253 x2188)))
(define-fun x8237 ((x2188 Int)) Int (ite (= x5065 x2188) x666 (x636 x2188)))
(define-fun x623 ((x2188 Int)) Int (ite (= x4960 x2188) 0 (x8237 x2188)))
(define-fun x3491 ((x2188 Int)) Int (ite (= x222 x2188) x1382 (x623 x2188)))
(define-fun x1058 ((x2188 Int)) Int (ite (= 450 x2188) 34 (x1209 x2188)))
(define-fun x3848 ((x2188 Int)) Int (ite (= x2188 x7544) x7704 (x3491 x2188)))
(define-fun x2480 ((x2188 Int)) Int (ite (= 482 x2188) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x6570 x2188)))
(define-fun x5084 ((x2188 Int)) Int (ite (= x2188 484) x4617 (x2480 x2188)))
(define-fun x8428 ((x2188 Int)) Int (ite (and (>= x2188 x8134) (< x2188 (+ x7704 x8134))) (x5084 (- (+ x2188 482) x8134)) (x3848 x2188)))
(define-fun x6540 ((x2188 Int)) Int (ite (and (< x2188 x2848) (>= x2188 228)) (x8428 (- (+ (x5665 (+ x2391 228)) x2188) 228)) (x1884 x2188)))
(define-fun x4859 ((x2188 Int)) Int 0)
(define-fun x7244 ((x2188 Int)) Int (x5866 x2188))
(define-fun x4260 ((x2188 Int)) Int (x8270 x2188))
(define-fun x7378 ((x2188 Int)) Int (x7893 x2188))
(define-fun x6186 ((x2188 Int)) Int (x4426 x2188))
(define-fun x3322 ((x2188 Int)) Int (x1897 x2188))
(define-fun x1529 ((x2188 Int)) Int (x621 x2188))
(define-fun x6091 ((x2188 Int)) Int (x6731 x2188))
(define-fun x934 ((x2188 Int)) Int (x2637 x2188))
(define-fun x4265 ((x2188 Int)) Int (x1116 x2188))
(define-fun x5683 ((x2188 Int)) Int (x8015 x2188))
(define-fun x6572 ((x2188 Int)) Int (x5009 x2188))
(define-fun x5800 ((x2188 Int)) Int (x924 x2188))
(define-fun x1772 ((x2188 Int)) Int (x7434 x2188))
(define-fun x3083 ((x2188 Int)) Int (x7598 x2188))
(define-fun x3260 ((x2188 Int)) Int (x4141 x2188))
(define-fun x2109 ((x2188 Int)) Int (x6132 x2188))
(define-fun x7110 ((x2188 Int)) Int (x1841 x2188))
(define-fun x629 ((x2188 Int)) Int (x2367 x2188))
(define-fun x5871 ((x2188 Int)) Int (x2984 x2188))
(define-fun x7570 ((x2188 Int)) Int (x6130 x2188))
(define-fun x542 ((x2188 Int)) Int (x297 x2188))
(define-fun x77 ((x2188 Int)) Int (x7553 x2188))
(define-fun x672 ((x2188 Int)) Int (x7735 x2188))
(define-fun x7261 ((x2188 Int)) Int (x3364 x2188))
(define-fun x3512 ((x2188 Int)) Int (x1774 x2188))
(define-fun x2928 ((x2188 Int)) Int (x3512 x2188))
(define-fun x6877 ((x2188 Int)) Int (x4749 x2188))
(define-fun x2028 ((x2188 Int)) Int (x6877 x2188))
(define-fun x1808 ((x2188 Int)) Int (x6499 x2188))
(define-fun x5167 ((x2188 Int)) Int (x1808 x2188))
(define-fun x1757 ((x2188 Int)) Int (x8499 x2188))
(define-fun x8021 ((x2188 Int)) Int (x1757 x2188))
(define-fun x105 ((x2188 Int)) Int (x8571 x2188))
(define-fun x6663 ((x2188 Int)) Int (x105 x2188))
(define-fun x7001 ((x2188 Int)) Int (x2268 x2188))
(define-fun x7372 ((x2188 Int)) Int (x7001 x2188))
(define-fun x3224 ((x2188 Int)) Int (x6971 x2188))
(define-fun x8573 ((x2188 Int)) Int (x3224 x2188))
(define-fun x7658 ((x2188 Int)) Int (x7718 x2188))
(define-fun x4875 ((x2188 Int)) Int (x7658 x2188))
(define-fun x7502 ((x2188 Int)) Int (x5036 x2188))
(define-fun x2175 ((x2188 Int)) Int (x7502 x2188))
(define-fun x8379 ((x2188 Int)) Int (x7393 x2188))
(define-fun x3755 ((x2188 Int)) Int (x8379 x2188))
(define-fun x1705 ((x2188 Int)) Int (x1804 x2188))
(define-fun x1671 ((x2188 Int)) Int (x1705 x2188))
(define-fun x731 ((x2188 Int)) Int (x4762 x2188))
(define-fun x274 ((x2188 Int)) Int (x731 x2188))
(define-fun x873 ((x2188 Int)) Int (x6587 x2188))
(define-fun x344 ((x2188 Int)) Int (x873 x2188))
(define-fun x4951 ((x2188 Int)) Int (x3297 x2188))
(define-fun x5652 ((x2188 Int)) Int (x4951 x2188))
(define-fun x5599 ((x2188 Int)) Int (x7016 x2188))
(define-fun x4132 ((x2188 Int)) Int (x5599 x2188))
(define-fun x4892 ((x2188 Int)) Int (x2305 x2188))
(define-fun x1152 ((x2188 Int)) Int (x4892 x2188))
(define-fun x4076 ((x2188 Int)) Int (x4638 x2188))
(define-fun x7136 ((x2188 Int)) Int (x4076 x2188))
(define-fun x4795 ((x2188 Int)) Int (x4649 x2188))
(define-fun x6361 ((x2188 Int)) Int (x4795 x2188))
(define-fun x286 ((x2188 Int)) Int (x6029 x2188))
(define-fun x3597 ((x2188 Int)) Int (x286 x2188))
(define-fun x2359 ((x2188 Int)) Int (x3560 x2188))
(define-fun x7831 ((x2188 Int)) Int (x2359 x2188))
(define-fun x4901 ((x2188 Int)) Int (x7735 x2188))
(define-fun x8589 ((x2188 Int)) Int (x4901 x2188))
(define-fun x648 ((x2188 Int)) Int (x7409 x2188))
(define-fun x3045 ((x2188 Int)) Int (x648 x2188))
(define-fun x4887 ((x2188 Int)) Int (x6414 x2188))
(define-fun x536 ((x2188 Int)) Int (x4887 x2188))
(define-fun x3637 ((x2188 Int)) Int (x8270 x2188))
(define-fun x6214 ((x2188 Int)) Int (x7768 x2188))
(define-fun x4637 ((x2188 Int)) Int (ite x5438 (x4289 x2188) (x3803 x2188)))
(define-fun x3929 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 x3210)) (x4637 x2188) (x3029 x2188)))
(define-fun x7228 ((x2188 Int)) Int (ite (and (> x3210 x2188) (>= x2188 0)) (x3929 x2188) (x1754 x2188)))
(define-fun x7941 ((x2188 Int)) Int (ite (and (>= x2188 290) (< x2188 354)) (x4637 (- x2188 290)) (x5343 x2188)))
(define-fun x7274 ((x2188 Int)) Int (ite (= 4 x2188) 34 (x3029 x2188)))
(define-fun x2373 ((x2188 Int)) Int (ite (and (<= 0 x2188) (> 36 x2188)) (x7274 x2188) (x1754 x2188)))
(define-fun x6340 ((x2188 Int)) Int (x924 x2188))
(define-fun x2971 ((x2188 Int)) Int (x6130 x2188))
(define-fun x7995 ((x2188 Int)) Int (x7553 x2188))
(define-fun x7064 ((x2188 Int)) Int (x7434 x2188))
(define-fun x1955 ((x2188 Int)) Int (x3364 x2188))
(define-fun x4183 ((x2188 Int)) Int (x1897 x2188))
(define-fun x6898 ((x2188 Int)) Int (x6731 x2188))
(define-fun x1630 ((x2188 Int)) Int (x4141 x2188))
(define-fun x7049 ((x2188 Int)) Int (x297 x2188))
(define-fun x1398 ((x2188 Int)) Int (x7845 x2188))
(define-fun x8144 ((x2188 Int)) Int (x1841 x2188))
(define-fun x7520 ((x2188 Int)) Int (x7893 x2188))
(define-fun x6411 ((x2188 Int)) Int (x5866 x2188))
(define-fun x144 ((x2188 Int)) Int (x1116 x2188))
(define-fun x6393 ((x2188 Int)) Int (x621 x2188))
(define-fun x6098 ((x2188 Int)) Int (x6132 x2188))
(define-fun x350 ((x2188 Int)) Int (x2984 x2188))
(define-fun x7536 ((x2188 Int)) Int (x5009 x2188))
(define-fun x8564 ((x2188 Int)) Int (x4426 x2188))
(define-fun x6423 ((x2188 Int)) Int (x2367 x2188))
(define-fun x1118 ((x2188 Int)) Int (x2637 x2188))
(define-fun x1835 ((x2188 Int)) Int (x7598 x2188))
(define-fun x523 ((x2188 Int)) Int (x8015 x2188))
(define-fun x4274 ((x2188 Int)) Int (ite (= 160 x2188) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x901 x2188)))
(define-fun x1844 ((x2188 Int)) Int (ite (= x2188 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4274 x2188)))
(define-fun x2139 ((x2188 Int)) Int (ite (= x2188 128) 64 (x2681 x2188)))
(define-fun x7538 ((x2188 Int)) Int (ite (= x2188 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x8121 x2188)))
(define-fun x712 ((x2188 Int)) Int (ite (= 258 x2188) x1066 (x7538 x2188)))
(define-fun x1202 ((x2188 Int)) Int (ite (= 224 x2188) 34 (x1049 x2188)))
(define-fun x3639 ((x2188 Int)) Int (ite (= 290 x2188) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x5314 x2188)))
(define-fun x1056 ((x2188 Int)) Int (ite (= x2188 294) x1648 (x3639 x2188)))
(define-fun x6792 ((x2188 Int)) Int (ite (= 326 x2188) x666 (x1056 x2188)))
(define-fun x1628 ((x2188 Int)) Int (ite (= x2188 358) 160 (x6792 x2188)))
(define-fun x6272 ((x2188 Int)) Int (ite (= x2188 454) x5171 (x1628 x2188)))
(define-fun x2459 ((x2188 Int)) Int (ite (and (>= x2188 486) (> (+ 486 x5171) x2188)) (x1844 (- x2188 326)) (x6272 x2188)))
(define-fun x930 ((x2188 Int)) Int (ite (= 390 x2188) 0 (x2459 x2188)))
(define-fun x7424 ((x2188 Int)) Int (ite (= 422 x2188) x1898 (x930 x2188)))
(define-fun x6071 ((x2188 Int)) Int (ite (= x8475 x2188) x4988 (x7424 x2188)))
(define-fun x5540 ((x2188 Int)) Int (ite (and (> (+ x4988 x7347) x2188) (<= x7347 x2188)) (x712 (- (+ 256 x2188) x7347)) (x6071 x2188)))
(define-fun x3066 ((x2188 Int)) Int (ite (and (> x1235 x2188) (<= 292 x2188)) (x5540 (+ 290 x2188)) (x3084 x2188)))
(define-fun x1026 ((x2188 Int)) Int (ite (= x2188 128) 0 (x6031 x2188)))
(define-fun x6710 ((x2188 Int)) Int (ite (= 160 x2188) 0 (x1026 x2188)))
(define-fun x2286 ((x2188 Int)) Int (ite (= x2188 290) x6368 (x5540 x2188)))
(define-fun x1471 ((x2188 Int)) Int (ite (= 322 x2188) x5707 (x2286 x2188)))
(define-fun x565 ((x2188 Int)) Int (x8499 x2188))
(define-fun x7493 ((x2188 Int)) Int (x1774 x2188))
(define-fun x3026 ((x2188 Int)) Int (x6499 x2188))
(define-fun x8545 ((x2188 Int)) Int (x2268 x2188))
(define-fun x8081 ((x2188 Int)) Int (x8571 x2188))
(define-fun x4622 ((x2188 Int)) Int (x5036 x2188))
(define-fun x4509 ((x2188 Int)) Int (x1804 x2188))
(define-fun x6403 ((x2188 Int)) Int (x7016 x2188))
(define-fun x750 ((x2188 Int)) Int (x7718 x2188))
(define-fun x5200 ((x2188 Int)) Int (x6587 x2188))
(define-fun x6003 ((x2188 Int)) Int (x6971 x2188))
(define-fun x3541 ((x2188 Int)) Int (x7393 x2188))
(define-fun x1198 ((x2188 Int)) Int (x7409 x2188))
(define-fun x2446 ((x2188 Int)) Int (x3297 x2188))
(define-fun x1691 ((x2188 Int)) Int (x4762 x2188))
(define-fun x7932 ((x2188 Int)) Int (x7468 x2188))
(define-fun x4993 ((x2188 Int)) Int (x6414 x2188))
(define-fun x815 ((x2188 Int)) Int (x2305 x2188))
(define-fun x6908 ((x2188 Int)) Int (x4638 x2188))
(define-fun x4634 ((x2188 Int)) Int (ite x363 (ite x6129 (x5540 x2188) (x1471 x2188)) (x3237 x2188)))
(define-fun x6525 ((x2188 Int)) Int (x4749 x2188))
(define-fun x8320 ((x2188 Int)) Int (x6029 x2188))
(define-fun x850 ((x2188 Int)) Int (x4649 x2188))
(define-fun x1370 ((x2188 Int)) Int (x5188 x2188))
(define-fun x1473 ((x2188 Int)) Int (x3560 x2188))
(define-fun x4626 ((x2188 Int)) Int (ite (= x7461 x2188) x7013 (x5852 x2188)))
(define-fun x61 ((x2188 Int)) Int (ite (= x8344 x2188) x5728 (x4626 x2188)))
(define-fun x8557 ((x2188 Int)) Int (ite (= x2188 x6301) x2348 (x2270 x2188)))
(define-fun x2454 ((x2188 Int)) Int (ite (= x1244 x2188) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3171 x2188)))
(define-fun x2918 ((x2188 Int)) Int (ite (= x2188 x5952) x1066 (x2454 x2188)))
(define-fun x4217 ((x2188 Int)) Int (ite (= x2188 x4987) x7422 (x6237 x2188)))
(define-fun x4143 ((x2188 Int)) Int (ite (= x2188 x2477) x4200 (x95 x2188)))
(define-fun x3599 ((x2188 Int)) Int (ite (= x2188 x7861) x6460 (x6093 x2188)))
(define-fun x6178 ((x2188 Int)) Int (ite (= x2188 x5766) x357 (x3599 x2188)))
(define-fun x27 ((x2188 Int)) Int (ite (= x7861 x2188) x5367 (x6093 x2188)))
(define-fun x2629 ((x2188 Int)) Int (ite x2219 (x7875 x2188) (ite x3562 (ite x5466 (x3599 x2188) (x6178 x2188)) (x27 x2188))))
(define-fun x1594 ((x2188 Int)) Int (ite (= x2188 x1048) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x4634 x2188)))
(define-fun x2766 ((x2188 Int)) Int (ite (= x4717 x2188) x1648 (x1594 x2188)))
(define-fun x5230 ((x2188 Int)) Int (ite (= x2188 x4956) 192 (x2766 x2188)))
(define-fun x5727 ((x2188 Int)) Int (ite (= x2188 x72) x6844 (x5230 x2188)))
(define-fun x8154 ((x2188 Int)) Int (ite (and (<= x2300 x2188) (< x2188 (+ x2300 x6844))) (x2629 (- (+ x7861 x2188) x2300)) (x5727 x2188)))
(define-fun x3816 ((x2188 Int)) Int (ite (= x6467 x2188) x4674 (x8154 x2188)))
(define-fun x6280 ((x2188 Int)) Int (ite (= x3886 x2188) x3879 (x3816 x2188)))
(define-fun x447 ((x2188 Int)) Int (ite (and (<= x1693 x2188) (> (+ x3879 x1693) x2188)) (x61 (- (+ x4357 x2188) x1693)) (x6280 x2188)))
(define-fun x5587 ((x2188 Int)) Int (ite (= x1838 x2188) x666 (x447 x2188)))
(define-fun x2475 ((x2188 Int)) Int (ite (= x3354 x2188) 0 (x5587 x2188)))
(define-fun x3891 ((x2188 Int)) Int (ite (= x6629 x2188) x1558 (x2475 x2188)))
(define-fun x4354 ((x2188 Int)) Int (ite (= x2188 x2954) x1326 (x3891 x2188)))
(define-fun x3376 ((x2188 Int)) Int (ite (and (> (+ x1326 x7462) x2188) (>= x2188 x7462)) (x2918 (- (+ x2188 x1664) x7462)) (x4354 x2188)))
(define-fun x6888 ((x2188 Int)) Int (ite (and (<= 228 x2188) (< x2188 x1858)) (x3376 (- (+ x2188 (x5665 (+ 228 x1048))) 228)) (x6766 x2188)))
(define-fun x7834 ((x2188 Int)) Int 0)
(define-fun x1264 ((x2188 Int)) Int (x7598 x2188))
(define-fun x7899 ((x2188 Int)) Int (x4141 x2188))
(define-fun x2173 ((x2188 Int)) Int (x2984 x2188))
(define-fun x7458 ((x2188 Int)) Int (x3663 x2188))
(define-fun x4221 ((x2188 Int)) Int (x5009 x2188))
(define-fun x7292 ((x2188 Int)) Int (x7845 x2188))
(define-fun x7794 ((x2188 Int)) Int (x6130 x2188))
(define-fun x7386 ((x2188 Int)) Int (x5866 x2188))
(define-fun x5138 ((x2188 Int)) Int (x7434 x2188))
(define-fun x3474 ((x2188 Int)) Int (x1841 x2188))
(define-fun x5005 ((x2188 Int)) Int (x3364 x2188))
(define-fun x5736 ((x2188 Int)) Int (x621 x2188))
(define-fun x8422 ((x2188 Int)) Int (x2367 x2188))
(define-fun x5974 ((x2188 Int)) Int (x1897 x2188))
(define-fun x7779 ((x2188 Int)) Int (x8015 x2188))
(define-fun x2535 ((x2188 Int)) Int (x2637 x2188))
(define-fun x6039 ((x2188 Int)) Int (x6731 x2188))
(define-fun x4055 ((x2188 Int)) Int (x7553 x2188))
(define-fun x3696 ((x2188 Int)) Int (x1116 x2188))
(define-fun x8604 ((x2188 Int)) Int (x4426 x2188))
(define-fun x5674 ((x2188 Int)) Int (x297 x2188))
(define-fun x1384 ((x2188 Int)) Int (x924 x2188))
(define-fun x4341 ((x2188 Int)) Int (x6132 x2188))
(define-fun x3714 ((x2188 Int)) Int (x7893 x2188))
(define-fun x506 ((x2188 Int)) Int (x5200 x2188))
(define-fun x7184 ((x2188 Int)) Int (x3663 x2188))
(define-fun x2086 ((x2188 Int)) Int (x3541 x2188))
(define-fun x7325 ((x2188 Int)) Int (x8545 x2188))
(define-fun x2547 ((x2188 Int)) Int (x4993 x2188))
(define-fun x8087 ((x2188 Int)) Int (x2446 x2188))
(define-fun x6095 ((x2188 Int)) Int (x3026 x2188))
(define-fun x6990 ((x2188 Int)) Int (x850 x2188))
(define-fun x7848 ((x2188 Int)) Int (x815 x2188))
(define-fun x1004 ((x2188 Int)) Int (x6908 x2188))
(define-fun x5588 ((x2188 Int)) Int (x8081 x2188))
(define-fun x7198 ((x2188 Int)) Int (x1198 x2188))
(define-fun x7021 ((x2188 Int)) Int (x4622 x2188))
(define-fun x5429 ((x2188 Int)) Int (x6003 x2188))
(define-fun x5738 ((x2188 Int)) Int (x4509 x2188))
(define-fun x2293 ((x2188 Int)) Int (x6525 x2188))
(define-fun x1447 ((x2188 Int)) Int (x6403 x2188))
(define-fun x5364 ((x2188 Int)) Int (x8320 x2188))
(define-fun x3169 ((x2188 Int)) Int (x750 x2188))
(define-fun x5487 ((x2188 Int)) Int (x1473 x2188))
(define-fun x779 ((x2188 Int)) Int (x7932 x2188))
(define-fun x8566 ((x2188 Int)) Int (x565 x2188))
(define-fun x8551 ((x2188 Int)) Int (x1691 x2188))
(define-fun x3625 ((x2188 Int)) Int (x7493 x2188))
(define-fun x6365 ((x2188 Int)) Int (x4749 x2188))
(define-fun x7474 ((x2188 Int)) Int (x1774 x2188))
(define-fun x4725 ((x2188 Int)) Int (x8499 x2188))
(define-fun x2440 ((x2188 Int)) Int (x6499 x2188))
(define-fun x973 ((x2188 Int)) Int (x2268 x2188))
(define-fun x2591 ((x2188 Int)) Int (x7718 x2188))
(define-fun x7961 ((x2188 Int)) Int (x8571 x2188))
(define-fun x3953 ((x2188 Int)) Int (x1804 x2188))
(define-fun x4037 ((x2188 Int)) Int (x5036 x2188))
(define-fun x4299 ((x2188 Int)) Int (x7016 x2188))
(define-fun x3724 ((x2188 Int)) Int (x6971 x2188))
(define-fun x7212 ((x2188 Int)) Int (x7393 x2188))
(define-fun x174 ((x2188 Int)) Int (x4762 x2188))
(define-fun x770 ((x2188 Int)) Int (x3297 x2188))
(define-fun x7975 ((x2188 Int)) Int (x7468 x2188))
(define-fun x7863 ((x2188 Int)) Int (x6414 x2188))
(define-fun x5505 ((x2188 Int)) Int (x6587 x2188))
(define-fun x2 ((x2188 Int)) Int (x2305 x2188))
(define-fun x7331 ((x2188 Int)) Int (x4638 x2188))
(define-fun x589 ((x2188 Int)) Int (x3560 x2188))
(define-fun x3777 ((x2188 Int)) Int (x6029 x2188))
(define-fun x6533 ((x2188 Int)) Int (x4649 x2188))
(define-fun x7503 ((x2188 Int)) Int (x7409 x2188))
(define-fun x6170 ((x2188 Int)) Int (x5188 x2188))
(define-fun x7813 ((x2188 Int)) Int (ite (and (<= 290 x2188) (> 354 x2188)) (x5306 (- x2188 290)) (x309 x2188)))
(define-fun x6038 ((x2188 Int)) Int (x7016 x2188))
(define-fun x94 ((x2188 Int)) Int (x5188 x2188))
(define-fun x7454 ((x2188 Int)) Int (x3560 x2188))
(define-fun x4443 ((x2188 Int)) Int (x7468 x2188))
(define-fun x6768 ((x2188 Int)) Int (x8571 x2188))
(define-fun x7413 ((x2188 Int)) Int (x6971 x2188))
(define-fun x8001 ((x2188 Int)) Int (x7718 x2188))
(define-fun x1535 ((x2188 Int)) Int (x7393 x2188))
(define-fun x5548 ((x2188 Int)) Int (x6499 x2188))
(define-fun x4747 ((x2188 Int)) Int (x1804 x2188))
(define-fun x5898 ((x2188 Int)) Int (ite x2600 (x1897 x2188) (x5143 x2188)))
(define-fun x2709 ((x2188 Int)) Int (ite x2600 (x6130 x2188) (x6744 x2188)))
(define-fun x7867 ((x2188 Int)) Int (ite x2600 (x7598 x2188) (x3399 x2188)))
(define-fun x4048 ((x2188 Int)) Int (ite x2600 (x7434 x2188) (x2771 x2188)))
(define-fun x4356 ((x2188 Int)) Int (ite x2600 (x2984 x2188) (x4211 x2188)))
(define-fun x802 ((x2188 Int)) Int (ite x2600 (x3364 x2188) (x5363 x2188)))
(define-fun x178 ((x2188 Int)) Int (ite x2600 (x2367 x2188) (x6923 x2188)))
(define-fun x4678 ((x2188 Int)) Int (ite x2600 (x5866 x2188) (x241 x2188)))
(define-fun x2746 ((x2188 Int)) Int (ite x2600 (x6731 x2188) (x3313 x2188)))
(define-fun x7642 ((x2188 Int)) Int (ite x2600 (x1841 x2188) (x6034 x2188)))
(define-fun x2355 ((x2188 Int)) Int (ite x2600 (x7893 x2188) (x3950 x2188)))
(define-fun x8341 ((x2188 Int)) Int (ite x2600 (x8015 x2188) (x3416 x2188)))
(define-fun x8312 ((x2188 Int)) Int (ite x2600 (x7553 x2188) (x8040 x2188)))
(define-fun x8293 ((x2188 Int)) Int (ite x2600 (x4141 x2188) (x292 x2188)))
(define-fun x303 ((x2188 Int)) Int (x5188 x2188))
(define-fun x1711 ((x2188 Int)) Int (x7468 x2188))
(define-fun x7131 ((x2188 Int)) Int (x7393 x2188))
(define-fun x3330 ((x2188 Int)) Int (x6587 x2188))
(define-fun x7610 ((x2188 Int)) Int (x6499 x2188))
(define-fun x4914 ((x2188 Int)) Int (x7409 x2188))
(define-fun x2132 ((x2188 Int)) Int (x8571 x2188))
(define-fun x7992 ((x2188 Int)) Int (x3297 x2188))
(define-fun x3766 ((x2188 Int)) Int (x4649 x2188))
(define-fun x420 ((x2188 Int)) Int (x4638 x2188))
(define-fun x684 ((x2188 Int)) Int (x2268 x2188))
(define-fun x6287 ((x2188 Int)) Int (x2305 x2188))
(define-fun x4059 ((x2188 Int)) Int (x7718 x2188))
(define-fun x6240 ((x2188 Int)) Int (x3560 x2188))
(define-fun x1142 ((x2188 Int)) Int (x5036 x2188))
(define-fun x179 ((x2188 Int)) Int (x7016 x2188))
(define-fun x8392 ((x2188 Int)) Int (x6971 x2188))
(define-fun x6329 ((x2188 Int)) Int (x6029 x2188))
(define-fun x7312 ((x2188 Int)) Int (x1804 x2188))
(define-fun x2749 ((x2188 Int)) Int (x6414 x2188))
(define-fun x3710 ((x2188 Int)) Int (x8499 x2188))
(define-fun x7931 ((x2188 Int)) Int (x1774 x2188))
(define-fun x116 ((x2188 Int)) Int (x4749 x2188))
(define-fun x5152 ((x2188 Int)) Int (x4762 x2188))
(define-fun x464 ((x2188 Int)) Int (x4638 x2188))
(define-fun x6747 ((x2188 Int)) Int (x6587 x2188))
(define-fun x5622 ((x2188 Int)) Int (x6971 x2188))
(define-fun x3436 ((x2188 Int)) Int (x7016 x2188))
(define-fun x2167 ((x2188 Int)) Int (x2268 x2188))
(define-fun x1543 ((x2188 Int)) Int (x3560 x2188))
(define-fun x7606 ((x2188 Int)) Int (x2305 x2188))
(define-fun x1635 ((x2188 Int)) Int (x7468 x2188))
(define-fun x4856 ((x2188 Int)) Int (x3297 x2188))
(define-fun x4671 ((x2188 Int)) Int (x5188 x2188))
(define-fun x1972 ((x2188 Int)) Int (x6414 x2188))
(define-fun x6283 ((x2188 Int)) Int (x4762 x2188))
(define-fun x3033 ((x2188 Int)) Int (x7409 x2188))
(define-fun x4009 ((x2188 Int)) Int (x6499 x2188))
(define-fun x5297 ((x2188 Int)) Int (x5036 x2188))
(define-fun x6600 ((x2188 Int)) Int (x6029 x2188))
(define-fun x4646 ((x2188 Int)) Int (x8571 x2188))
(define-fun x8552 ((x2188 Int)) Int (x1774 x2188))
(define-fun x6610 ((x2188 Int)) Int (x1804 x2188))
(define-fun x533 ((x2188 Int)) Int (x7393 x2188))
(define-fun x6807 ((x2188 Int)) Int (x4649 x2188))
(define-fun x2513 ((x2188 Int)) Int (x7718 x2188))
(define-fun x1156 ((x2188 Int)) Int (x4749 x2188))
(define-fun x5996 ((x2188 Int)) Int (x421 x2188))
(define-fun x966 ((x2188 Int)) Int (x2767 x2188))
(define-fun x1536 ((x2188 Int)) Int (ite x217 (x1623 x2188) (ite x4316 (x1623 x2188) (ite x4185 (x1623 x2188) (ite x1817 (x1623 x2188) (ite x7640 (x1623 x2188) (ite x5750 (x1623 x2188) (ite x5109 (x1623 x2188) (ite x256 (x2484 x2188) (x1623 x2188))))))))))
(define-fun x5925 ((x2188 Int)) Int (ite x217 (x1539 x2188) (ite x4316 (x1539 x2188) (ite x4185 (x1539 x2188) (ite x1817 (x1539 x2188) (ite x7640 (x1539 x2188) (ite x5750 (x1539 x2188) (ite x5109 (x1539 x2188) (ite x256 (x1707 x2188) (x1539 x2188))))))))))
(define-fun x650 ((x2188 Int)) Int (ite x5124 (x5323 x2188) (x8516 x2188)))
(define-fun x4182 ((x2188 Int)) Int (ite x8318 (x8516 x2188) (ite x7750 (x650 x2188) (ite x3775 (x650 x2188) (x8516 x2188)))))
(define-fun x7715 ((x2188 Int)) Int (ite x7748 (x8516 x2188) (ite x5554 (x8516 x2188) (x4182 x2188))))
(define-fun x2072 ((x2188 Int)) Int (ite x4222 (ite x4254 (x7715 x2188) (x8516 x2188)) (x8516 x2188)))
(define-fun x1318 ((x2188 Int)) Int (ite x6597 (x8516 x2188) (ite x3335 (x7814 x2188) (x8516 x2188))))
(define-fun x5419 ((x2188 Int)) Int (ite x2969 (ite x2324 (x2072 x2188) (x1318 x2188)) (x8516 x2188)))
(define-fun x2029 ((x2188 Int)) Int (x421 x2188))
(define-fun x8243 ((x2188 Int)) Int (x2767 x2188))
(define-fun x6645 ((x2188 Int)) Int (ite x2324 (x2072 x2188) (x1318 x2188)))
(define-fun x4598 ((x2188 Int)) Int (x2767 x2188))
(define-fun x298 ((x2188 Int)) Int (x421 x2188))
(define-fun x4416 ((x2188 Int)) Int (ite x2324 (x2171 x2188) (x1623 x2188)))
(define-fun x7338 ((x2188 Int)) Int (ite x2324 (x4324 x2188) (x1539 x2188)))
(define-fun x2157 ((x2188 Int)) Int (x421 x2188))
(define-fun x4923 ((x2188 Int)) Int (x2767 x2188))
(define-fun x7717 ((x2188 Int)) Int (x1623 x2188))
(define-fun x6688 ((x2188 Int)) Int (x2767 x2188))
(define-fun x1442 ((x2188 Int)) Int (x421 x2188))
(define-fun x7588 ((x2188 Int)) Int (x8516 x2188))
(define-fun x680 ((x2188 Int)) Int (x1623 x2188))
(define-fun x7490 ((x2188 Int)) Int (ite x4254 (x7715 x2188) (x8516 x2188)))
(define-fun x8465 ((x2188 Int)) Int (x2767 x2188))
(define-fun x2985 ((x2188 Int)) Int (x421 x2188))
(define-fun x1484 ((x2188 Int)) Int (ite x4254 (x1539 x2188) (x5454 x2188)))
(define-fun x1587 ((x2188 Int)) Int (x1623 x2188))
(define-fun x6059 ((x2188 Int)) Int (x1539 x2188))
(define-fun x4809 ((x2188 Int)) Int (x2767 x2188))
(define-fun x718 ((x2188 Int)) Int (x421 x2188))
(define-fun x6480 ((x2188 Int)) Int (x8516 x2188))
(define-fun x3108 ((x2188 Int)) Int (x1539 x2188))
(define-fun x6607 ((x2188 Int)) Int (x1623 x2188))
(define-fun x1161 ((x2188 Int)) Int (x2767 x2188))
(define-fun x7705 ((x2188 Int)) Int (x421 x2188))
(define-fun x7162 ((x2188 Int)) Int (ite (= x2188 x729) x2711 (x2329 x2188)))
(define-fun x2603 ((x2188 Int)) Int (ite (= x2188 x3286) x6062 (x7162 x2188)))
(define-fun x2062 ((x2188 Int)) Int (ite (and (< x2188 (+ 128 x3131)) (>= x2188 128)) (x3818 (+ 36 x2188)) (x6770 x2188)))
(define-fun x3183 ((x2188 Int)) Int (ite (= x2188 x2970) 0 (x2062 x2188)))
(define-fun x5514 ((x2188 Int)) Int (ite (= x2188 x5669) x4687 (x3183 x2188)))
(define-fun x96 ((x2188 Int)) Int (ite (= x2188 x6406) 0 (x5371 x2188)))
(define-fun x8591 ((x2188 Int)) Int (ite (= x2188 128) x3131 (x5514 x2188)))
(define-fun x2126 ((x2188 Int)) Int (ite (and (>= x2188 160) (> (+ 160 x3131) x2188)) (x3818 (+ x2188 4)) (x8591 x2188)))
(define-fun x913 ((x2188 Int)) Int (ite (= x2188 x3533) 0 (x2126 x2188)))
(define-fun x6656 ((x2188 Int)) Int (ite (= x2188 x3936) x74 (x913 x2188)))
(define-fun x3976 ((x2188 Int)) Int (ite (and (< x2188 (+ x6326 x74)) (<= x6326 x2188)) (x3818 (- (+ x2188 x1505) x6326)) (x6656 x2188)))
(define-fun x3850 ((x2188 Int)) Int (ite (= x3150 x2188) 0 (x3976 x2188)))
(define-fun x6092 ((x2188 Int)) Int (ite x3226 (ite x686 (x517 x2188) (x4492 x2188)) (x3059 x2188)))
(define-fun x7345 ((x2188 Int)) Int (ite (= 196 x2188) x7507 (x6092 x2188)))
(define-fun x8079 ((x2188 Int)) Int (ite (= 228 x2188) x3239 (x7345 x2188)))
(define-fun x1751 ((x2188 Int)) Int (ite (= x2188 x8474) x957 (x8079 x2188)))
(define-fun x7206 ((x2188 Int)) Int (ite (= x2188 x4004) x5094 (x1751 x2188)))
(define-fun x108 ((x2188 Int)) Int (ite (= x4004 x2188) x8406 (x1751 x2188)))
(define-fun x5373 ((x2188 Int)) Int (ite x6284 (ite x4440 (x1751 x2188) (x108 x2188)) (x7206 x2188)))
(define-fun x7351 ((x2188 Int)) Int (ite (and (< x2188 x5785) (>= x2188 164)) (x5373 (+ 128 x2188)) (x2813 x2188)))
(define-fun x3453 ((x2188 Int)) Int (ite (= x2188 x2781) x8295 (x4140 x2188)))
(define-fun x3557 ((x2188 Int)) Int (ite (and (<= x84 x2188) (< x2188 (+ x84 x8295))) (x7351 (- (+ x2188 x5993) x84)) (x5722 x2188)))
(define-fun x3303 ((x2188 Int)) Int (ite (= x171 x2188) 0 (x3557 x2188)))
(define-fun x1371 ((x2188 Int)) Int (x8516 x2188))
(define-fun x2005 ((x2188 Int)) Int (x421 x2188))
(define-fun x927 ((x2188 Int)) Int (x2767 x2188))
(define-fun x705 ((x2188 Int)) Int (x1539 x2188))
(define-fun x2026 ((x2188 Int)) Int (x1623 x2188))
(define-fun x786 ((x2188 Int)) Int (x1539 x2188))
(define-fun x1546 ((x2188 Int)) Int (x1623 x2188))
(define-fun x5118 ((x2188 Int)) Int (x2767 x2188))
(define-fun x6935 ((x2188 Int)) Int (x421 x2188))
(define-fun x8264 ((x2188 Int)) Int (ite (= x3299 x2188) x4567 (x3693 x2188)))
(define-fun x7101 ((x2188 Int)) Int (ite (and (>= x2188 x5195) (> (+ x4567 x5195) x2188)) (x3275 (- (+ 164 x2188) x5195)) (x8264 x2188)))
(define-fun x4677 ((x2188 Int)) Int (ite (= x7660 x2188) 0 (x7101 x2188)))
(define-fun x3573 ((x2188 Int)) Int (ite (= x2188 x6152) x3563 (x4677 x2188)))
(define-fun x65 ((x2188 Int)) Int (ite (and (< x2188 (+ x351 x3563)) (>= x2188 x351)) (x3275 (- (+ x2188 x3889) x351)) (x3573 x2188)))
(define-fun x3587 ((x2188 Int)) Int (ite (= x6732 x2188) 0 (x65 x2188)))
(define-fun x1421 ((x2188 Int)) Int (ite (= x4743 x2188) x4803 (x3587 x2188)))
(define-fun x78 ((x2188 Int)) Int (ite (= x2188 x7939) 128 (x1421 x2188)))
(define-fun x942 ((x2188 Int)) Int (ite (= x1927 x2188) x4 (x78 x2188)))
(define-fun x5462 ((x2188 Int)) Int (ite (= x5978 x2188) x7726 (x942 x2188)))
(define-fun x1940 ((x2188 Int)) Int (ite (= x2188 x8520) x530 (x5462 x2188)))
(define-fun x2529 ((x2188 Int)) Int (ite (= x2188 x4876) x2390 (x1940 x2188)))
(define-fun x3797 ((x2188 Int)) Int (ite (= x2188 x6733) x3255 (x2529 x2188)))
(define-fun x2250 ((x2188 Int)) Int (ite x1074 (x2529 x2188) (ite x1992 (x1940 x2188) (ite x7427 (x5462 x2188) (ite x455 (x942 x2188) (x3797 x2188))))))
(define-fun x6458 ((x2188 Int)) Int (ite (= x2188 x5651) 0 (x2250 x2188)))
(define-fun x2952 ((x2188 Int)) Int (ite (= x7342 x2188) x4447 (x6458 x2188)))
(define-fun x2959 ((x2188 Int)) Int (ite (= x2188 x4886) x2369 (x2952 x2188)))
(define-fun x7696 ((x2188 Int)) Int (ite (= x3022 x2188) x5377 (x2959 x2188)))
(define-fun x6550 ((x2188 Int)) Int (ite (= x2188 x5411) x6470 (x7696 x2188)))
(define-fun x5370 ((x2188 Int)) Int (ite (= x5302 x2188) x1127 (x6550 x2188)))
(define-fun x6100 ((x2188 Int)) Int (ite (= x2188 x4450) x4404 (x5370 x2188)))
(define-fun x5967 ((x2188 Int)) Int (ite (= x4770 x2188) x3468 (x6100 x2188)))
(define-fun x8408 ((x2188 Int)) Int (ite x5259 (x6100 x2188) (ite x8205 (x5370 x2188) (ite x2403 (x6550 x2188) (ite x203 (x7696 x2188) (x5967 x2188))))))
(define-fun x2863 ((x2188 Int)) Int (ite (= x2188 x1644) 0 (x8408 x2188)))
(define-fun x3540 ((x2188 Int)) Int (ite (= x2188 x7597) x868 (x2863 x2188)))
(define-fun x5976 ((x2188 Int)) Int (ite (= x7460 x2188) x282 (x3540 x2188)))
(define-fun x5631 ((x2188 Int)) Int (ite (= x2188 x6675) 150 (x5976 x2188)))
(define-fun x3254 ((x2188 Int)) Int (ite (and (> (+ x7286 150) x2188) (>= x2188 x7286)) (x3275 (- (+ x8245 x2188) x7286)) (x5631 x2188)))
(define-fun x7756 ((x2188 Int)) Int (ite (and (>= x2188 0) (> 0 x2188)) (x8094 x2188) (x3254 x2188)))
(define-fun x6734 ((x2188 Int)) Int (ite x3335 (x7756 x2188) (x3254 x2188)))
(define-fun x6741 ((x2188 Int)) Int (ite (= x6675 x2188) x6502 (x6734 x2188)))
(define-fun x856 ((x2188 Int)) Int (ite (and (<= x3698 x2188) (> (+ x3698 x6502) x2188)) (x8094 (- x2188 x3698)) (x6741 x2188)))
(define-fun x3304 ((x2188 Int)) Int (ite (= x5375 x2188) x4844 (x856 x2188)))
(define-fun x2779 ((x2188 Int)) Int (ite (= x7009 x2188) x2892 (x3304 x2188)))
(define-fun x4827 ((x2188 Int)) Int (ite (= x1821 x2188) x1614 (x2779 x2188)))
(define-fun x4908 ((x2188 Int)) Int (ite (= x6529 x2188) x875 (x4827 x2188)))
(define-fun x4041 ((x2188 Int)) Int (ite x1815 (x4827 x2188) (ite x6694 (x2779 x2188) (ite x7414 (x3304 x2188) (ite x6627 (x856 x2188) (x4908 x2188))))))
(define-fun x7321 ((x2188 Int)) Int (ite (= x6200 x2188) 0 (x4041 x2188)))
(define-fun x6727 ((x2188 Int)) Int (ite (= x2188 x3309) x7058 (x7321 x2188)))
(define-fun x4252 ((x2188 Int)) Int (ite (= x5375 x2188) x4803 (x6727 x2188)))
(define-fun x7914 ((x2188 Int)) Int (ite (= x2188 x2995) 160 (x4252 x2188)))
(define-fun x1367 ((x2188 Int)) Int (ite (= x2188 x5714) x7841 (x7914 x2188)))
(define-fun x2106 ((x2188 Int)) Int (ite (= x2188 x6052) x4731 (x1367 x2188)))
(define-fun x591 ((x2188 Int)) Int (ite (= x5448 x2188) x5121 (x2106 x2188)))
(define-fun x8196 ((x2188 Int)) Int (ite (= x6553 x2188) x6211 (x591 x2188)))
(define-fun x2187 ((x2188 Int)) Int (ite (= x8132 x2188) x7473 (x8196 x2188)))
(define-fun x1464 ((x2188 Int)) Int (ite x152 (x8196 x2188) (ite x1011 (x591 x2188) (ite x3153 (x2106 x2188) (ite x4460 (x1367 x2188) (x2187 x2188))))))
(define-fun x367 ((x2188 Int)) Int (ite (= x3272 x2188) 0 (x1464 x2188)))
(define-fun x2586 ((x2188 Int)) Int (ite (= x2188 x6957) x4447 (x367 x2188)))
(define-fun x6704 ((x2188 Int)) Int (ite (= x2188 x6050) x6476 (x2586 x2188)))
(define-fun x8077 ((x2188 Int)) Int (ite (= x3055 x2188) x5934 (x6704 x2188)))
(define-fun x4033 ((x2188 Int)) Int (ite (= x2583 x2188) x5918 (x8077 x2188)))
(define-fun x1604 ((x2188 Int)) Int (ite (= x2188 x859) x8097 (x4033 x2188)))
(define-fun x36 ((x2188 Int)) Int (ite (= x2188 x3387) x100 (x1604 x2188)))
(define-fun x2727 ((x2188 Int)) Int (ite (= x2424 x2188) x8443 (x36 x2188)))
(define-fun x6372 ((x2188 Int)) Int (ite x2645 (x36 x2188) (ite x7847 (x1604 x2188) (ite x899 (x4033 x2188) (ite x3482 (x8077 x2188) (x2727 x2188))))))
(define-fun x2760 ((x2188 Int)) Int (ite (= x1567 x2188) 0 (x6372 x2188)))
(define-fun x813 ((x2188 Int)) Int (ite (= x2188 x4721) x7467 (x2760 x2188)))
(define-fun x4442 ((x2188 Int)) Int (ite (= x986 x2188) x926 (x5371 x2188)))
(define-fun x5304 ((x2188 Int)) Int (x421 x2188))
(define-fun x6508 ((x2188 Int)) Int (ite x3015 (x1623 x2188) (x6442 x2188)))
(define-fun x6642 ((x2188 Int)) Int (x2767 x2188))
(define-fun x3314 ((x2188 Int)) Int (x8516 x2188))
(define-fun x596 ((x2188 Int)) Int (ite x3015 (x1539 x2188) (x7890 x2188)))
(define-fun x8034 ((x2188 Int)) Int (x421 x2188))
(define-fun x4468 ((x2188 Int)) Int (x8516 x2188))
(define-fun x7602 ((x2188 Int)) Int (x2767 x2188))
(define-fun x4178 ((x2188 Int)) Int (x6442 x2188))
(define-fun x5855 ((x2188 Int)) Int (ite (= x2188 4) 33 (x5999 x2188)))
(define-fun x7589 ((x2188 Int)) Int (ite (and (> 36 x2188) (>= x2188 0)) (x5855 x2188) (x4608 x2188)))
(define-fun x3912 ((x2188 Int)) Int (ite (= 160 x2188) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2046 x2188)))
(define-fun x2129 ((x2188 Int)) Int (ite (= 192 x2188) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3912 x2188)))
(define-fun x3937 ((x2188 Int)) Int (ite (= x2188 128) 64 (x1339 x2188)))
(define-fun x2889 ((x2188 Int)) Int (ite (= 256 x2188) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2428 x2188)))
(define-fun x3556 ((x2188 Int)) Int (ite (= 258 x2188) x3942 (x2889 x2188)))
(define-fun x2805 ((x2188 Int)) Int (ite (= 224 x2188) 34 (x6328 x2188)))
(define-fun x1500 ((x2188 Int)) Int (ite (= 290 x2188) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x341 x2188)))
(define-fun x5299 ((x2188 Int)) Int (ite (= x2188 294) x4807 (x1500 x2188)))
(define-fun x6156 ((x2188 Int)) Int (ite (= x2188 326) x666 (x5299 x2188)))
(define-fun x3898 ((x2188 Int)) Int (ite (= x2188 358) 160 (x6156 x2188)))
(define-fun x6224 ((x2188 Int)) Int (ite (= x2188 454) x2907 (x3898 x2188)))
(define-fun x6964 ((x2188 Int)) Int (ite (and (< x2188 (+ x2907 486)) (>= x2188 486)) (x2129 (- x2188 326)) (x6224 x2188)))
(define-fun x7249 ((x2188 Int)) Int (ite (= x2188 390) 0 (x6964 x2188)))
(define-fun x5809 ((x2188 Int)) Int (ite (= x2188 422) x1219 (x7249 x2188)))
(define-fun x2445 ((x2188 Int)) Int (ite (= x2857 x2188) x1082 (x5809 x2188)))
(define-fun x3167 ((x2188 Int)) Int (ite (and (<= x3600 x2188) (< x2188 (+ x3600 x1082))) (x3556 (- (+ 256 x2188) x3600)) (x2445 x2188)))
(define-fun x6376 ((x2188 Int)) Int (ite (and (<= 292 x2188) (< x2188 x1402)) (x3167 (+ 290 x2188)) (x4220 x2188)))
(define-fun x5970 ((x2188 Int)) Int (ite (= x2188 128) 0 (x4857 x2188)))
(define-fun x3804 ((x2188 Int)) Int (ite (= x2188 160) 0 (x5970 x2188)))
(define-fun x1909 ((x2188 Int)) Int (ite (= 290 x2188) x3971 (x3167 x2188)))
(define-fun x4361 ((x2188 Int)) Int (ite (= x2188 322) x5396 (x1909 x2188)))
(define-fun x4106 ((x2188 Int)) Int (ite (= x2188 0) x4000 (x6530 x2188)))
(define-fun x3981 ((x2188 Int)) Int (ite (= 32 x2188) x2198 (x4106 x2188)))
(define-fun x1957 ((x2188 Int)) Int (ite (= 128 x2188) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x5999 x2188)))
(define-fun x1855 ((x2188 Int)) Int (ite (and (> 4 x2188) (<= 0 x2188)) (x1957 (+ 128 x2188)) (x4608 x2188)))
(define-fun x5035 ((x2188 Int)) Int (ite (= x2188 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x5999 x2188)))
(define-fun x6827 ((x2188 Int)) Int (ite (and (> 4 x2188) (<= 0 x2188)) (x5035 (+ 128 x2188)) (x4608 x2188)))
(define-fun x6288 ((x2188 Int)) Int (ite (= 548 x2188) x7954 (x4871 x2188)))
(define-fun x804 ((x2188 Int)) Int (ite (= x2188 580) x6602 (x6288 x2188)))
(define-fun x5267 ((x2188 Int)) Int (ite (= x2188 548) x3343 (x4871 x2188)))
(define-fun x3962 ((x2188 Int)) Int (ite x2015 (x803 x2188) (ite x3791 (ite x1316 (x6288 x2188) (x804 x2188)) (x5267 x2188))))
(define-fun x2491 ((x2188 Int)) Int (ite (= x2188 516) x6338 (x847 x2188)))
(define-fun x1164 ((x2188 Int)) Int (ite (= x2188 x5595) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5999 x2188)))
(define-fun x2042 ((x2188 Int)) Int (ite (= x3105 x2188) 32 (x1164 x2188)))
(define-fun x936 ((x2188 Int)) Int (ite (= x8522 x2188) 48 (x2042 x2188)))
(define-fun x2354 ((x2188 Int)) Int (ite (= x2188 x2421) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x936 x2188)))
(define-fun x8115 ((x2188 Int)) Int (ite (= x2953 x2188) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x2354 x2188)))
(define-fun x4338 ((x2188 Int)) Int (ite (and (>= x2188 0) (< x2188 132)) (x8115 (+ x5595 x2188)) (x4608 x2188)))
(define-fun x4247 ((x2188 Int)) Int (ite (= 354 x2188) 64 (x2521 x2188)))
(define-fun x3222 ((x2188 Int)) Int (ite (= x5595 x2188) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5999 x2188)))
(define-fun x6573 ((x2188 Int)) Int (ite (= x2188 x2486) 32 (x3222 x2188)))
(define-fun x3973 ((x2188 Int)) Int (ite (= x409 x2188) 32 (x6573 x2188)))
(define-fun x1331 ((x2188 Int)) Int (ite (= x2188 x1559) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x3973 x2188)))
(define-fun x5235 ((x2188 Int)) Int (ite (and (>= x2188 0) (> 100 x2188)) (x1331 (+ x2188 x5595)) (x4608 x2188)))
(define-fun x4169 ((x2188 Int)) Int (ite x8590 (x3167 x2188) (x4361 x2188)))
(define-fun x6253 ((x2188 Int)) Int (ite (= x5595 x2188) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x4169 x2188)))
(define-fun x6051 ((x2188 Int)) Int (ite (= x2188 x5627) x4807 (x6253 x2188)))
(define-fun x2288 ((x2188 Int)) Int (ite (= x2188 x8355) 192 (x6051 x2188)))
(define-fun x170 ((x2188 Int)) Int (ite (= x2188 x5579) x7039 (x2288 x2188)))
(define-fun x2402 ((x2188 Int)) Int (ite (and (< x2188 (+ x7039 x3421)) (>= x2188 x3421)) (x3962 (- (+ 548 x2188) x3421)) (x170 x2188)))
(define-fun x2487 ((x2188 Int)) Int (ite (= x6899 x2188) x7141 (x2402 x2188)))
(define-fun x5845 ((x2188 Int)) Int (ite (= x2188 x1672) x4918 (x2487 x2188)))
(define-fun x1885 ((x2188 Int)) Int (ite (= 386 x2188) x5162 (x7622 x2188)))
(define-fun x671 ((x2188 Int)) Int (ite (= 418 x2188) x1963 (x1885 x2188)))
(define-fun x1599 ((x2188 Int)) Int (ite (and (<= x2605 x2188) (> (+ x4918 x2605) x2188)) (x671 (- (+ 386 x2188) x2605)) (x5845 x2188)))
(define-fun x7265 ((x2188 Int)) Int (ite (= x5902 x2188) x666 (x1599 x2188)))
(define-fun x6131 ((x2188 Int)) Int (ite (= x7318 x2188) 0 (x7265 x2188)))
(define-fun x2844 ((x2188 Int)) Int (ite (= x2188 x5550) x1059 (x6131 x2188)))
(define-fun x1396 ((x2188 Int)) Int (ite (= 450 x2188) 34 (x6314 x2188)))
(define-fun x8384 ((x2188 Int)) Int (ite (= x2188 x6805) x4912 (x2844 x2188)))
(define-fun x3062 ((x2188 Int)) Int (ite (= x2188 482) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2817 x2188)))
(define-fun x2131 ((x2188 Int)) Int (ite (= x2188 484) x3942 (x3062 x2188)))
(define-fun x8173 ((x2188 Int)) Int (ite (and (< x2188 (+ x4912 x6345)) (>= x2188 x6345)) (x2131 (- (+ 482 x2188) x6345)) (x8384 x2188)))
(define-fun x6605 ((x2188 Int)) Int (ite (= x666 x2188) x2865 (x2329 x2188)))
(define-fun x5181 ((x2188 Int)) Int (ite (= x2081 x2188) x5975 (x6605 x2188)))
(define-fun x3896 ((x2188 Int)) Int (ite (and (<= 228 x2188) (> x5671 x2188)) (x8173 (- (+ x2188 (x5665 (+ 228 x5595))) 228)) (x7156 x2188)))
(define-fun x3245 ((x2188 Int)) Int 0)
(define-fun x1706 ((x2188 Int)) Int (x5046 x2188))
(define-fun x2247 ((x2188 Int)) Int (x8516 x2188))
(define-fun x3598 ((x2188 Int)) Int (x421 x2188))
(define-fun x1694 ((x2188 Int)) Int (x2767 x2188))
(define-fun x5413 ((x2188 Int)) Int (x6442 x2188))
(define-fun x6026 ((x2188 Int)) Int (x5046 x2188))
(define-fun x5385 ((x2188 Int)) Int (x8516 x2188))
(define-fun x8319 ((x2188 Int)) Int (x5385 x2188))
(define-fun x3952 ((x2188 Int)) Int (x421 x2188))
(define-fun x1716 ((x2188 Int)) Int (x3952 x2188))
(define-fun x7366 ((x2188 Int)) Int (x2767 x2188))
(define-fun x1752 ((x2188 Int)) Int (x7366 x2188))
(define-fun x5939 ((x2188 Int)) Int (x6442 x2188))
(define-fun x8257 ((x2188 Int)) Int (x5939 x2188))
(define-fun x2546 ((x2188 Int)) Int (ite (= x2188 x2081) x2386 (x5181 x2188)))
(define-fun x5954 ((x2188 Int)) Int (x102 x2188))
(define-fun x5040 ((x2188 Int)) Int (x5371 x2188))
(define-fun x1159 ((x2188 Int)) Int (x8401 x2188))
(define-fun x7123 ((x2188 Int)) Int (x8168 x2188))
(define-fun x938 ((x2188 Int)) Int (x696 x2188))
(define-fun x2929 ((x2188 Int)) Int (x1819 x2188))
(define-fun x1365 ((x2188 Int)) Int (x3014 x2188))
(define-fun x2304 ((x2188 Int)) Int (x8073 x2188))
(define-fun x8017 ((x2188 Int)) Int (x414 x2188))
(define-fun x7440 ((x2188 Int)) Int (x1908 x2188))
(define-fun x8053 ((x2188 Int)) Int (x2006 x2188))
(define-fun x3856 ((x2188 Int)) Int (x6449 x2188))
(define-fun x558 ((x2188 Int)) Int (x5125 x2188))
(define-fun x457 ((x2188 Int)) Int (x4838 x2188))
(define-fun x2710 ((x2188 Int)) Int (x829 x2188))
(define-fun x6206 ((x2188 Int)) Int (x2315 x2188))
(define-fun x1880 ((x2188 Int)) Int (x1169 x2188))
(define-fun x2380 ((x2188 Int)) Int (x2165 x2188))
(define-fun x2243 ((x2188 Int)) Int (x47 x2188))
(define-fun x11 ((x2188 Int)) Int (x3434 x2188))
(define-fun x2372 ((x2188 Int)) Int (ite x8590 (x6530 x2188) (x3981 x2188)))
(define-fun x3783 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 x3909)) (x2372 x2188) (x5999 x2188)))
(define-fun x3805 ((x2188 Int)) Int (ite (and (<= 0 x2188) (< x2188 x3909)) (x3783 x2188) (x4608 x2188)))
(define-fun x4068 ((x2188 Int)) Int (ite (and (<= 290 x2188) (> 354 x2188)) (x2372 (- x2188 290)) (x2389 x2188)))
(define-fun x3056 ((x2188 Int)) Int (ite (= 4 x2188) 34 (x5999 x2188)))
(define-fun x3653 ((x2188 Int)) Int (ite (and (< x2188 36) (>= x2188 0)) (x3056 x2188) (x4608 x2188)))
(define-fun x520 ((x2188 Int)) Int (ite (= x2188 x666) x4834 (x3458 x2188)))
(define-fun x2024 ((x2188 Int)) Int (ite (= x2188 x7820) x7459 (x520 x2188)))
(define-fun x6799 ((x2188 Int)) Int (ite (= x7820 x2188) x4017 (x2024 x2188)))
(define-fun x7565 ((x2188 Int)) Int (ite (= x2188 x666) x8360 (x6799 x2188)))
(define-fun x4130 ((x2188 Int)) Int (ite x7396 (x3458 x2188) (ite x1741 (x2024 x2188) (ite x399 (x7565 x2188) (x3458 x2188)))))
(define-fun x7616 ((x2188 Int)) Int (x2767 x2188))
(define-fun x1094 ((x2188 Int)) Int (x421 x2188))
(define-fun x6450 ((x2188 Int)) Int (x8516 x2188))
(define-fun x5543 ((x2188 Int)) Int (x1623 x2188))
(define-fun x2675 ((x2188 Int)) Int (ite x7396 (x1539 x2188) (x7558 x2188)))
(define-fun x1709 ((x2188 Int)) Int (ite (= x3286 x2188) x6622 (x4130 x2188)))
(define-fun x2888 ((x2188 Int)) Int (ite (= 160 x2188) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x109 x2188)))
(define-fun x3683 ((x2188 Int)) Int (ite (= 192 x2188) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2888 x2188)))
(define-fun x6434 ((x2188 Int)) Int (ite (= 128 x2188) 64 (x1793 x2188)))
(define-fun x1018 ((x2188 Int)) Int (ite (= 256 x2188) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2182 x2188)))
(define-fun x6677 ((x2188 Int)) Int (ite (= 258 x2188) x4584 (x1018 x2188)))
(define-fun x6155 ((x2188 Int)) Int (ite (= 224 x2188) 34 (x1424 x2188)))
(define-fun x2107 ((x2188 Int)) Int (ite (= x2188 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x4157 x2188)))
(define-fun x5249 ((x2188 Int)) Int (ite (= x2188 294) x4807 (x2107 x2188)))
(define-fun x1564 ((x2188 Int)) Int (ite (= x2188 326) x666 (x5249 x2188)))
(define-fun x8535 ((x2188 Int)) Int (ite (= 358 x2188) 160 (x1564 x2188)))
(define-fun x7389 ((x2188 Int)) Int (ite (= x2188 454) x438 (x8535 x2188)))
(define-fun x3381 ((x2188 Int)) Int (ite (and (> (+ 486 x438) x2188) (>= x2188 486)) (x3683 (- x2188 326)) (x7389 x2188)))
(define-fun x1033 ((x2188 Int)) Int (ite (= x2188 390) 0 (x3381 x2188)))
(define-fun x3813 ((x2188 Int)) Int (ite (= x2188 422) x4826 (x1033 x2188)))
(define-fun x1750 ((x2188 Int)) Int (ite (= x2188 x5592) x8525 (x3813 x2188)))
(define-fun x4756 ((x2188 Int)) Int (ite (and (>= x2188 x5794) (< x2188 (+ x5794 x8525))) (x6677 (- (+ 256 x2188) x5794)) (x1750 x2188)))
(define-fun x240 ((x2188 Int)) Int (ite (and (>= x2188 292) (< x2188 x7106)) (x4756 (+ x2188 290)) (x2962 x2188)))
(define-fun x7742 ((x2188 Int)) Int (ite (= x2188 128) 0 (x8310 x2188)))
(define-fun x4940 ((x2188 Int)) Int (ite (= x2188 160) 0 (x7742 x2188)))
(define-fun x404 ((x2188 Int)) Int (ite (= 290 x2188) x2759 (x4756 x2188)))
(define-fun x6453 ((x2188 Int)) Int (ite (= x2188 322) x3964 (x404 x2188)))
(define-fun x4623 ((x2188 Int)) Int (x2767 x2188))
(define-fun x6193 ((x2188 Int)) Int (x2165 x2188))
(define-fun x4798 ((x2188 Int)) Int (x102 x2188))
(define-fun x4577 ((x2188 Int)) Int (x5125 x2188))
(define-fun x1928 ((x2188 Int)) Int (ite x3661 (ite x1440 (x4756 x2188) (x6453 x2188)) (x7036 x2188)))
(define-fun x8555 ((x2188 Int)) Int (x8168 x2188))
(define-fun x3811 ((x2188 Int)) Int (x414 x2188))
(define-fun x845 ((x2188 Int)) Int (x2315 x2188))
(define-fun x4932 ((x2188 Int)) Int (x1819 x2188))
(define-fun x3631 ((x2188 Int)) Int (x1169 x2188))
(define-fun x5763 ((x2188 Int)) Int (x3014 x2188))
(define-fun x8035 ((x2188 Int)) Int (x8516 x2188))
(define-fun x6000 ((x2188 Int)) Int (x1623 x2188))
(define-fun x6960 ((x2188 Int)) Int (x47 x2188))
(define-fun x5605 ((x2188 Int)) Int (x1539 x2188))
(define-fun x5642 ((x2188 Int)) Int (x421 x2188))
(define-fun x4799 ((x2188 Int)) Int (x696 x2188))
(define-fun x3670 ((x2188 Int)) Int (x6449 x2188))
(define-fun x5291 ((x2188 Int)) Int (x1908 x2188))
(define-fun x1946 ((x2188 Int)) Int (x829 x2188))
(define-fun x5213 ((x2188 Int)) Int (x8073 x2188))
(define-fun x7981 ((x2188 Int)) Int (x8401 x2188))
(define-fun x6633 ((x2188 Int)) Int (x5371 x2188))
(define-fun x1369 ((x2188 Int)) Int (x4838 x2188))
(define-fun x3691 ((x2188 Int)) Int (x3434 x2188))
(define-fun x7670 ((x2188 Int)) Int (ite (= x2188 x7819) x4414 (x3931 x2188)))
(define-fun x1163 ((x2188 Int)) Int (ite (= x4011 x2188) x3793 (x7670 x2188)))
(define-fun x5334 ((x2188 Int)) Int (ite (= x1432 x2188) x5580 (x6752 x2188)))
(define-fun x760 ((x2188 Int)) Int (ite (= x2188 x5953) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2316 x2188)))
(define-fun x3688 ((x2188 Int)) Int (ite (= x2188 x6777) x4584 (x760 x2188)))
(define-fun x6652 ((x2188 Int)) Int (ite (= x2188 x3164) x39 (x4575 x2188)))
(define-fun x4902 ((x2188 Int)) Int (ite (= x2188 x3742) x2997 (x138 x2188)))
(define-fun x5193 ((x2188 Int)) Int (ite (= x2188 x7076) x4654 (x5709 x2188)))
(define-fun x1925 ((x2188 Int)) Int (ite (= x4655 x2188) x4546 (x5193 x2188)))
(define-fun x3534 ((x2188 Int)) Int (ite (= x2188 x7076) x1503 (x5709 x2188)))
(define-fun x126 ((x2188 Int)) Int (ite x1227 (x2996 x2188) (ite x7270 (ite x1113 (x5193 x2188) (x1925 x2188)) (x3534 x2188))))
(define-fun x6683 ((x2188 Int)) Int (ite (= x2188 x6320) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x1928 x2188)))
(define-fun x1238 ((x2188 Int)) Int (ite (= x6399 x2188) x4807 (x6683 x2188)))
(define-fun x979 ((x2188 Int)) Int (ite (= x2188 x3826) 192 (x1238 x2188)))
(define-fun x4741 ((x2188 Int)) Int (ite (= x8019 x2188) x7532 (x979 x2188)))
(define-fun x2418 ((x2188 Int)) Int (ite (and (> (+ x7532 x3106) x2188) (<= x3106 x2188)) (x126 (- (+ x2188 x7076) x3106)) (x4741 x2188)))
(define-fun x5911 ((x2188 Int)) Int (ite (= x2188 x4278) x53 (x2418 x2188)))
(define-fun x7357 ((x2188 Int)) Int (ite (= x2188 x1919) x1020 (x5911 x2188)))
(define-fun x1093 ((x2188 Int)) Int (ite (and (>= x2188 x769) (< x2188 (+ x769 x1020))) (x1163 (- (+ x2188 x7354) x769)) (x7357 x2188)))
(define-fun x2468 ((x2188 Int)) Int (ite (= x2188 x3492) x666 (x1093 x2188)))
(define-fun x4367 ((x2188 Int)) Int (ite (= x4888 x2188) 0 (x2468 x2188)))
(define-fun x3464 ((x2188 Int)) Int (ite (= x2188 x1810) x4297 (x4367 x2188)))
(define-fun x6554 ((x2188 Int)) Int (ite (= x407 x2188) x231 (x3464 x2188)))
(define-fun x2977 ((x2188 Int)) Int (ite (and (< x2188 (+ x2177 x231)) (<= x2177 x2188)) (x3688 (- (+ x2188 x7810) x2177)) (x6554 x2188)))
(define-fun x900 ((x2188 Int)) Int (ite (and (>= x2188 228) (> x4387 x2188)) (x2977 (- (+ x2188 (x5665 (+ 228 x6320))) 228)) (x3576 x2188)))
(define-fun x762 ((x2188 Int)) Int 0)
(define-fun x1101 ((x2188 Int)) Int (x7558 x2188))
(define-fun x6884 ((x2188 Int)) Int (x8516 x2188))
(define-fun x2450 ((x2188 Int)) Int (x1623 x2188))
(define-fun x6630 ((x2188 Int)) Int (x421 x2188))
(define-fun x5472 ((x2188 Int)) Int (x2767 x2188))
(define-fun x7927 ((x2188 Int)) Int (x6000 x2188))
(define-fun x5649 ((x2188 Int)) Int (x7558 x2188))
(define-fun x1226 ((x2188 Int)) Int (x8035 x2188))
(define-fun x882 ((x2188 Int)) Int (x4623 x2188))
(define-fun x2370 ((x2188 Int)) Int (x5642 x2188))
(define-fun x1970 ((x2188 Int)) Int (x2767 x2188))
(define-fun x1362 ((x2188 Int)) Int (x414 x2188))
(define-fun x5943 ((x2188 Int)) Int (x2165 x2188))
(define-fun x1305 ((x2188 Int)) Int (x102 x2188))
(define-fun x8033 ((x2188 Int)) Int (x1623 x2188))
(define-fun x7118 ((x2188 Int)) Int (x5125 x2188))
(define-fun x8363 ((x2188 Int)) Int (x1819 x2188))
(define-fun x4673 ((x2188 Int)) Int (x8168 x2188))
(define-fun x1479 ((x2188 Int)) Int (x2315 x2188))
(define-fun x1275 ((x2188 Int)) Int (x8516 x2188))
(define-fun x6586 ((x2188 Int)) Int (x1169 x2188))
(define-fun x3853 ((x2188 Int)) Int (x1539 x2188))
(define-fun x7583 ((x2188 Int)) Int (x3014 x2188))
(define-fun x6818 ((x2188 Int)) Int (x47 x2188))
(define-fun x8195 ((x2188 Int)) Int (x421 x2188))
(define-fun x5061 ((x2188 Int)) Int (x696 x2188))
(define-fun x903 ((x2188 Int)) Int (x6449 x2188))
(define-fun x6865 ((x2188 Int)) Int (x829 x2188))
(define-fun x5951 ((x2188 Int)) Int (x4838 x2188))
(define-fun x3980 ((x2188 Int)) Int (x1908 x2188))
(define-fun x7885 ((x2188 Int)) Int (x5371 x2188))
(define-fun x7486 ((x2188 Int)) Int (x8401 x2188))
(define-fun x677 ((x2188 Int)) Int (x3434 x2188))
(define-fun x6475 ((x2188 Int)) Int (x8073 x2188))
(define-fun x2940 ((x2188 Int)) Int (ite (and (< x2188 354) (>= x2188 290)) (x4679 (- x2188 290)) (x6547 x2188)))
(define-fun x737 ((x2188 Int)) Int (ite x5554 (x8516 x2188) (x4182 x2188)))
(define-fun x870 ((x2188 Int)) Int (x1623 x2188))
(define-fun x2568 ((x2188 Int)) Int (x1539 x2188))
(define-fun x8473 ((x2188 Int)) Int (x421 x2188))
(define-fun x8213 ((x2188 Int)) Int (x2767 x2188))
(define-fun x1343 ((x2188 Int)) Int (ite x7750 (x650 x2188) (ite x3775 (x650 x2188) (x8516 x2188))))
(define-fun x2231 ((x2188 Int)) Int (x1539 x2188))
(define-fun x4436 ((x2188 Int)) Int (x8516 x2188))
(define-fun x7112 ((x2188 Int)) Int (x1623 x2188))
(define-fun x8215 ((x2188 Int)) Int (x421 x2188))
(define-fun x508 ((x2188 Int)) Int (x2767 x2188))
(define-fun x487 ((x2188 Int)) Int (x421 x2188))
(define-fun x3958 ((x2188 Int)) Int (x1623 x2188))
(define-fun x8472 ((x2188 Int)) Int (x2767 x2188))
(define-fun x4168 ((x2188 Int)) Int (x1539 x2188))
(define-fun x7181 ((x2188 Int)) Int (ite (= x7068 x2188) x5841 (x5125 x2188)))
(define-fun x1189 ((x2188 Int)) Int (ite (= x2188 x492) x4898 (x414 x2188)))
(define-fun x7153 ((x2188 Int)) Int (ite (= x34 x2188) x666 (x2315 x2188)))
(define-fun x7955 ((x2188 Int)) Int (ite x8348 (x328 x2188) (x1897 x2188)))
(define-fun x6576 ((x2188 Int)) Int (ite x8348 (x6682 x2188) (x2984 x2188)))
(define-fun x4058 ((x2188 Int)) Int (ite x8348 (x4315 x2188) (x7434 x2188)))
(define-fun x6402 ((x2188 Int)) Int (ite x8348 (x1736 x2188) (x7598 x2188)))
(define-fun x509 ((x2188 Int)) Int (ite x8348 (x1120 x2188) (x3364 x2188)))
(define-fun x7993 ((x2188 Int)) Int (ite x8348 (x972 x2188) (x5866 x2188)))
(define-fun x8284 ((x2188 Int)) Int (ite x8348 (x3166 x2188) (x2367 x2188)))
(define-fun x4484 ((x2188 Int)) Int (ite x8348 (x1666 x2188) (x6130 x2188)))
(define-fun x1455 ((x2188 Int)) Int (ite x8348 (x6043 x2188) (x8015 x2188)))
(define-fun x3406 ((x2188 Int)) Int (ite x8348 (x3778 x2188) (x6731 x2188)))
(define-fun x2632 ((x2188 Int)) Int (ite x8348 (x4332 x2188) (x7893 x2188)))
(define-fun x1037 ((x2188 Int)) Int (ite x8348 (x5814 x2188) (x7553 x2188)))
(define-fun x5824 ((x2188 Int)) Int (ite x8348 (x3077 x2188) (x1841 x2188)))
(define-fun x7648 ((x2188 Int)) Int (ite x8348 (x2166 x2188) (x4141 x2188)))
(define-fun x7892 ((x2188 Int)) Int (ite x3335 (x7814 x2188) (x8516 x2188)))
(define-fun x7002 ((x2188 Int)) Int (ite x5124 (x6931 x2188) (x4972 x2188)))
(define-fun x891 ((x2188 Int)) Int (ite (= x2188 x2414) x2593 (x7002 x2188)))
(define-fun x3158 ((x2188 Int)) Int (ite x4551 (x3723 x2188) (x1584 x2188)))
(define-fun x4448 ((x2188 Int)) Int (ite (and (<= 128 x2188) (< x2188 160)) (x3158 (- x2188 128)) (x1891 x2188)))
(define-fun x5141 ((x2188 Int)) Int (ite x6754 (x6220 x2188) (ite x5765 (x3178 x2188) (x3454 x2188))))
(define-fun x999 ((x2188 Int)) Int (ite (and (>= x2188 128) (> 160 x2188)) (x5141 (- x2188 128)) (x5822 x2188)))
(define-fun x5379 ((x2188 Int)) Int (ite (= x2188 4) 17 (x4318 x2188)))
(define-fun x6875 ((x2188 Int)) Int (ite (and (< x2188 36) (>= x2188 0)) (x5379 x2188) (x1837 x2188)))
(define-fun x418 ((x2188 Int)) Int (ite (= 4 x2188) 17 (x2501 x2188)))
(define-fun x2616 ((x2188 Int)) Int (ite (and (> 36 x2188) (<= 0 x2188)) (x418 x2188) (x1837 x2188)))
(define-fun x5060 ((x2188 Int)) Int (ite (= x2188 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x5105 x2188)))
(define-fun x1061 ((x2188 Int)) Int (ite (= 132 x2188) x8547 (x5060 x2188)))
(define-fun x6819 ((x2188 Int)) Int (ite (= x2188 164) x490 (x1061 x2188)))
(define-fun x4421 ((x2188 Int)) Int (ite (= x2188 196) x2353 (x6819 x2188)))
(define-fun x4469 ((x2188 Int)) Int (ite (= 228 x2188) x311 (x4421 x2188)))
(define-fun x6183 ((x2188 Int)) Int (ite (= 128 x2188) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x5105 x2188)))
(define-fun x4929 ((x2188 Int)) Int (ite (= 132 x2188) x723 (x6183 x2188)))
(define-fun x6292 ((x2188 Int)) Int (ite (= x2188 164) x6918 (x4929 x2188)))
(define-fun x5965 ((x2188 Int)) Int (ite (= x2188 128) x6918 (x6843 x2188)))
(define-fun x157 ((x2188 Int)) Int (ite (= 128 x2188) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x5965 x2188)))
(define-fun x778 ((x2188 Int)) Int (ite (= x2188 132) x723 (x157 x2188)))
(define-fun x2555 ((x2188 Int)) Int (ite (= 164 x2188) 0 (x778 x2188)))
(define-fun x923 ((x2188 Int)) Int (ite (= 196 x2188) 0 (x2555 x2188)))
(define-fun x3128 ((x2188 Int)) Int 0)
(define-fun x1802 ((x2188 Int)) Int (ite (= 128 x2188) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x5105 x2188)))
(define-fun x8104 ((x2188 Int)) Int (ite (= x2188 132) x2677 (x1802 x2188)))
(define-fun x3762 ((x2188 Int)) Int (ite (= 164 x2188) x6781 (x8104 x2188)))
(define-fun x6678 ((x2188 Int)) Int (ite (= 196 x2188) x7158 (x3762 x2188)))
(define-fun x4835 ((x2188 Int)) Int (ite (= x2188 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x5105 x2188)))
(define-fun x4727 ((x2188 Int)) Int (ite (= x2188 132) x1717 (x4835 x2188)))
(define-fun x1052 ((x2188 Int)) Int 0)
(define-fun x3646 ((x2188 Int)) Int (ite (= 128 x2188) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x5105 x2188)))
(define-fun x2204 ((x2188 Int)) Int (ite (= 132 x2188) x3102 (x3646 x2188)))
(define-fun x5612 ((x2188 Int)) Int 0)
(define-fun x2443 ((x2188 Int)) Int (ite x1401 (x2542 x2188) (ite x1225 (x2542 x2188) (ite x6270 (x2542 x2188) (ite x2725 (x2542 x2188) (x978 x2188))))))
(define-fun x4147 ((x2188 Int)) Int (ite (and (< x2188 x4209) (<= 0 x2188)) (x2443 x2188) (x2501 x2188)))
(define-fun x176 ((x2188 Int)) Int (ite (and (>= x2188 0) (> x4209 x2188)) (x4147 x2188) (x1837 x2188)))
(define-fun x6953 ((x2188 Int)) Int (ite (= x4760 x2188) x2747 (x154 x2188)))
(define-fun x2992 ((x2188 Int)) Int (ite (= x2188 x3286) x897 (x2603 x2188)))
(assert (x4101 x5140))
(assert (= (=> (and (= x3239 (- x8474 132)) (= (x8297 x7673 2) x6496) (= x957 (ite (> x3615 0) x6496 (x639 127 x6496))) (= (> x964 0) x2850) (= x964 (x4456 (- x3615 (mod (ite (< x957 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x639 1 x7673) x3615)) (and (=> (not x2850) x1560) (=> (and (and (= (x639 1 x7673) x3519) (= x4004 (+ 32 x8474)) (= (= 0 x3519) x1212)) x2850) (and (=> (and (and (and (= x4104 (x3114 32 104)) (= x1344 (< 0 x957))) (or (and (and (= 32 x7379) (= x8406 (x6449 x4104)) (<= x957 32)) x1344) (and (not x1344) (= x7379 0)))) (not x1212)) x6814) (=> (and x1212 (and (= (+ x4040 x4004) x5519) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7673) x5094) (or (= 32 x4040) (= 0 x4040)) (= x4040 (* 32 (ite (not (= 0 x957)) 1 0))))) x4739))))) x982))
(assert (=> (>= 10000 x5564) (= 0 (x3391 x5564))))
(assert (x4101 x1200))
(assert (x5189 x4676 32))
(assert (= (and (not x8261) x1124) x837))
(assert (x4101 x2694))
(assert (x4101 x279))
(assert (x4101 x3132))
(assert (=> (<= x2743 10000) (= (x3391 x2743) 0)))
(assert (x8137 x4114))
(assert (= x7783 (x6212 (x6207 x1404 x1434 x7783 x2653 x69 x8128))))
(assert (x4101 x7858))
(assert (= (or x7533 x1351 x1589) x5081))
(assert (x4101 x740))
(assert (x4101 x7417))
(assert (x4101 x19))
(assert (= (and x744 (not x4830)) x7072))
(assert (x4101 x5266))
(assert (= x8598 (=> (and (= x6619 (= 0 x3843)) (or (and (and (= x4807 x1182) (= x3768 (x7073 x3595)) (<= x7119 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7119 (+ x3209 x1092)) (>= x7119 0) (= x6194 x8274) (= x7673 x7909) (= x7631 x3286) (= x1256 x6437) (= x7119 x8301) (= x8285 x2558) (= (- x3768 x3209) x4632) (= x2743 x2776) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1092 x3209)) (= x8353 x4944) (= x8442 x3843) (= x4023 x3545) (= x3209 (ite (= 0 x3843) x6159 0)) (= x1092 (x4587 x666)) (= x6542 x5076) (= x4518 x4112) (= x2633 x6141) (= x5522 x4936)) x6619) (and (and (= x3286 x7631) (= x1182 x4807) (= x2776 x2743) (= x8353 x4944) (= x7673 x7909) (= x1256 x6437) (= x4518 x4112) (= x8285 x2558) (= x3843 x8442) (= x5076 x6542) (= x6194 x8274) (= x5522 x4936) (= x2633 x6141) (= x4023 x3545)) (not x6619)))) x6801)))
(assert (= (and x7805 x7147) x2652))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x2674 1084734224))
(assert (= (and (not x8579) x1532) x6189))
(assert (not (x2674 (x8452 x954 x3276 x4483))))
(assert (= x502 (and x5431 (not x2140))))
(assert (not (x2674 (x8452 64 x6260 7))))
(assert (x4101 x7759))
(assert (= x3728 (x4519 (x6207 x3728 x6176 x1012 x365 x1345 x6842))))
(assert (not (x2674 (x6207 x954 x2088 x1088 x7472 x5281 x2463))))
(assert (= x2057 (and x1021 x5405)))
(assert (x2674 45231284858326638837332416019018714005183587760015845327913118753091066265600))
(assert (x4101 x1031))
(assert (x4101 x8449))
(assert (= 0 (x3391 102788308552044517260959567728648622381392053106279845986800620074717893623808)))
(assert (x4101 x5810))
(assert (x5391 x5445))
(assert (x4101 x7452))
(assert (= (x3391 (x6207 x2327 x3240 x576 x6659 x4505 x8420)) (x6207 x2327 x3240 x576 x6659 x4505 x8420)))
(assert (= (x5740 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817)) x2174))
(assert (x4101 x8339))
(assert (=> (<= x6346 10000) (= 0 (x3391 x6346))))
(assert (x4101 x605))
(assert (x4101 x5269))
(assert (= (or x2190 x3674) x7837))
(assert (= (x6212 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817)) x2104))
(assert (= (or x8373 x4272 x1850) x7878))
(assert (> (x8452 64 x518 (ite (<= x1404 32) x320 (ite (>= 64 x1404) x4133 (ite (<= x1404 96) x1002 (ite (>= 128 x1404) x4746 (ite (>= 160 x1404) x8578 (ite (>= 192 x1404) x996 x7067))))))) 10000))
(assert (x5391 x3535))
(assert (= x7669 (and x6037 x3678)))
(assert (x4101 x4576))
(assert (= x3479 (=> (= (+ x7758 x1075) x4038) x6317)))
(assert (= x4381 (=> (and (= 0 x4930) (= true x3161) (= x1140 false)) x2914)))
(assert (= x3601 (x842 (x5018 x6655 x7778 x3104 x3601 x1789))))
(assert (not (x2674 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300))))
(assert (= x733 (x6140 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733))))
(assert (x4101 x6463))
(assert (x4101 x2792))
(assert (=> (>= 10000 x2658) (= (x3391 x2658) 0)))
(assert (= (x4519 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)) x7483))
(assert (x4101 x6532))
(assert (x4101 x4854))
(assert (x4101 x7593))
(assert (= x4464 (and x5544 (not x3202))))
(assert (= (x6212 (x8452 x2493 x5680 x3170)) x3170))
(assert (x4101 x6019))
(assert (x4101 x1640))
(assert (x4101 x1430))
(assert (= x5064 (and x5826 x7085)))
(assert (x4101 x1676))
(assert (< 10000 (x8452 x6609 x5827 x1042)))
(assert (= x60 (x6212 (x8452 x7301 x8339 x60))))
(assert (x25 32 (ite (not (= 0 x8177)) 1 0)))
(assert (x3760 x209 32))
(assert (= (and x6856 (not x3542)) x3648))
(assert (x4101 x2458))
(assert (x4101 x2508))
(assert (= (x3114 32 x238) (x3391 (x3114 32 x238))))
(assert (x4101 x7233))
(assert (x4101 x1826))
(assert (x4101 x1735))
(assert (= (and x4129 x1669) x4151))
(assert (= (or x1010 x6279) x4893))
(assert (= x1941 (and x7582 (not x1641))))
(assert (= (and x1482 (not x4502)) x5856))
(assert (< 10000 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)))
(assert (= (x6212 (x8452 64 x4024 6)) 6))
(assert (= (and x981 x5136) x5393))
(assert (= (x5740 (x8452 x5456 x7626 x2592)) x7626))
(assert (< (x3114 x2493 x4089) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x6153))
(assert (> (x8452 64 x4084 12) 10000))
(assert (x4101 x8357))
(assert (x4101 x5380))
(assert (x4101 x917))
(assert (=> (<= x7904 10000) (= 0 (x3391 x7904))))
(assert (= (x4519 (x5018 x3728 x7647 x2836 x4072 x2598)) x3728))
(assert (x4101 x8596))
(assert (x4101 x6407))
(assert (> (x8452 64 x4807 5) 10000))
(assert (= x7678 (and x1731 x3873)))
(assert (x4101 x2768))
(assert (x4101 x5847))
(assert (x2674 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (x4101 x7556))
(assert (< (x658 x4567 x8100 x1458 x7760) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5888))
(assert (x4101 x7884))
(assert (x4101 x3579))
(assert (= (x8452 64 1 x7411) (x3391 (x8452 64 1 x7411))))
(assert (=> (<= x6515 10000) (= 0 (x3391 x6515))))
(assert (x4101 x8601))
(assert (x4101 x5936))
(assert (x4101 x7999))
(assert (x4101 x16))
(assert (x4101 x4155))
(assert (x3760 x6 32))
(assert (x4101 x1015))
(assert (x4101 x3487))
(assert (x4101 x185))
(assert (x4101 x5916))
(assert (= (or (and x5795 (not x1739)) x4110) x7408))
(assert (x4101 x869))
(assert (= x8490 (x4955 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153))))
(assert (= x8538 (=> (and (= x1151 x5215) (= x8161 x6638) (= x6886 x8289) (= x4841 x622)) x8493)))
(assert (= x4759 (and x3993 (not x1688))))
(assert (=> (<= x1592 10000) (= (x3391 x1592) 0)))
(assert (x4101 x2105))
(assert (x4101 x8067))
(assert (= (x6207 x5456 x254 x2993 x2587 x5865 x5646) (x3391 (x6207 x5456 x254 x2993 x2587 x5865 x5646))))
(assert (x4101 x1784))
(assert (= x1404 (x4519 (x658 x1404 x6591 x1588 x6117))))
(assert (x4101 x2874))
(assert (x3760 x826 256))
(assert (< (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x8452 64 x4417 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x1148))
(assert (x4101 x1378))
(assert (x4101 x6357))
(assert (= x6558 (and x1950 (not x7390))))
(assert (x4101 x6355))
(assert (=> (<= x136 10000) (= (x3391 x136) 0)))
(assert (= x7859 (and x324 x5007)))
(assert (< (x3114 x6256 x2579) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x725 x2650))
(assert (= x5256 (and (not x7868) x7634)))
(assert (x4101 x6088))
(assert (x8137 x2791))
(assert (x4101 x8231))
(assert (=> (<= x4415 10000) (= 0 (x3391 x4415))))
(assert (< (x658 x8236 x2222 x6395 x5287) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3760 x8429 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x2327 x7905)))
(assert (= x7508 (and x6816 x4233)))
(assert (x4101 x1768))
(assert (< 10000 (x8452 64 x6260 7)))
(assert (= (and x3307 x3810) x2858))
(assert (x3760 x2773 32))
(assert (x4101 x2366))
(assert (x4101 x8148))
(assert (x2496 x1360))
(assert (x4101 x6867))
(assert (x4101 x8036))
(assert (< (x5018 x2327 x4522 x2439 x7183 x8482) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x6067))
(assert (x4101 x432))
(assert (= (and x1248 (not x5059)) x2082))
(assert (x4101 x2200))
(assert (= x2437 (=> (and (= 2 x2246) (= (x639 255 x1487) x2625) (= x6049 x4112) (= 2 x4406) (= x8357 x6141) (= x5172 false) (= 0 x7573) (= x7614 x5713) (= x3545 x4512) (= x7572 true)) x2843)))
(assert (= x2347 (or (and x6608 x4568) (and x1776 x6786) (and x5607 x18))))
(assert (= x1390 (=> (and (= false x2522) (= x2571 x846) (= x8234 x4760) (= 2 x2723) (= x337 x3595) (= x7103 x40) (= x8014 x816) (= x5893 x4445) (= x8495 x826) (= x1648 x3819) (= x2244 x1196) (= x5204 0) (= x7904 x2398) (= true x1624) (= x1859 x7632) (= x3365 x3529) (= x2814 x1395)) x2534)))
(assert (x4101 x4089))
(assert (=> (<= x113 10000) (= (x3391 x113) 0)))
(assert (= (and x5860 x3727) x6618))
(assert (= (and x2656 x5248) x3137))
(assert (x4101 x2406))
(assert (= 12 (x6212 (x8452 64 x4084 12))))
(assert (= (and (not x7998) x64) x7511))
(assert (= x3291 (x4117 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291))))
(assert (x4101 x3578))
(assert (x4101 x4559))
(assert (= (x5740 (x8452 64 x2123 100)) x2123))
(assert (x4101 x5465))
(assert (x4101 x6169))
(assert (x4101 x8361))
(assert (= (=> (and (= x1395 x2814) (= false x5341) (= x1361 2) (= x4445 x5893) (= x7103 x40) (= 2 x2332) (= x826 x8495) (= 0 x5204) (= x7904 x2398) (= x1859 x7632) (= x3819 x1648) (= true x4624) (= x4760 x8234) (= x8014 x816) (= x2571 x846) (= x2244 x1196) (= x337 x3595) (= x1148 (x639 255 x5839)) (= x3529 x3365)) x2534) x3910))
(assert (x4101 x131))
(assert (x4101 x3708))
(assert (x4101 x7176))
(assert (=> (>= 10000 x2104) (= (x3391 x2104) 0)))
(assert (= x3225 (=> (= x4303 (< 0 x1301)) (and (=> (and (and (= x2068 true) (= x2811 4) (= x5991 false)) (not x4303)) x3705) (=> (and x4303 (and (= x3156 x5378) (= x4904 x4574))) x7197)))))
(assert (> (x8452 64 x4024 36) 10000))
(assert (x4101 x4609))
(assert (x3760 x6775 256))
(assert (x4101 x80))
(assert (x4101 x7599))
(assert (x4101 x5767))
(assert (= (x842 (x6207 x8066 x1862 x2624 x99 x6072 x1363)) x99))
(assert (= x3527 (and x8459 x3054)))
(assert (x4101 x3120))
(assert (=> (>= 10000 x7258) (= 0 (x3391 x7258))))
(assert (x4101 x4516))
(assert (= x3507 (=> (and (or (and (and (<= 0 x3699) (<= x3699 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (= 0 x6905) x6897 0) x1834) (= x3699 x8585) (< (+ x1834 x1714) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x8466 x1834) x3820) (= x7510 x439) (= (x6426 x666) x1714) (= x7744 x7442) (= x8466 (x2425 x1717)) (= x1958 x2799) (= x4752 x3539) (= x6344 x2275) (= x3699 (+ x1834 x1714)) (= x1224 x991) (= x5317 x8148) (= x8267 x6905)) x6066) (and (and (= x2799 x1958) (= x5317 x8148) (= x439 x7510) (= x2275 x6344) (= x991 x1224) (= x7442 x7744) (= x3539 x4752) (= x6905 x8267)) (not x6066))) (= (= 0 x6905) x6066)) x3091)))
(assert (= x801 (=> (and (= x2265 x6944) (= x7523 x2577) (= x6116 x993) (= x5743 x6556)) x124)))
(assert (= (x4519 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190)) x2327))
(assert (= x3140 (or (and x4607 x1050) (and x1413 x4152) (and x3247 x2098))))
(assert (= x2366 (x6140 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239))))
(assert (= (x3391 x8409) (x3391 (+ x8409 1))))
(assert (= (and x4176 x6440) x5490))
(assert (= (x3391 (x8452 64 x7055 6)) (x8452 64 x7055 6)))
(assert (x3760 x826 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x3984 x3975) x2089))
(assert (= x8236 (x4519 (x5018 x8236 x8496 x1779 x7671 x5130))))
(assert (x4101 x2478))
(assert (x8137 x5273))
(assert (= x3294 (and (not x7034) x6484)))
(assert (= (and x277 x2000) x8369))
(assert (x4101 x6775))
(assert (=> (>= 10000 x4804) (= 0 (x3391 x4804))))
(assert (< 10000 (x8452 64 x2824 2)))
(assert (= (and x5830 (not x1577)) x6258))
(assert (x4101 x5485))
(assert (=> (<= x4522 10000) (= (x3391 x4522) 0)))
(assert (x4101 x2222))
(assert (x4101 x260))
(assert (< (x8452 64 x1648 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3760 x7087 32))
(assert (x4101 x1853))
(assert (x8137 x1071))
(assert (x4101 x2544))
(assert (x4101 x3835))
(assert (x4101 x1417))
(assert (x4101 x4215))
(assert (= (x3391 (x6207 x2493 x4433 x971 x4380 x3792 x6585)) (x6207 x2493 x4433 x971 x4380 x3792 x6585)))
(assert (=> (<= x7022 10000) (= (x3391 x7022) 0)))
(assert (x4101 x8440))
(assert (x4101 x7268))
(assert (=> (<= x167 10000) (= (x3391 x167) 0)))
(assert (x4101 x3439))
(assert (x4101 x4918))
(assert (x8137 x2855))
(assert (not (x2674 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239))))
(assert (= (=> (and (or (and (not x694) (and (= x7940 x128) (= x13 x6141))) (and (and (= (x2329 x666) x2199) (<= x2734 4294967295) (= x8391 x128) x5069 (= (x2329 x666) x6833) x8214 (= (<= x6833 (x88 x666)) x8214) (= x5069 (= x2199 (x88 x666))) (= x13 x237)) x694)) (and (= (x4456 (- x1820 32)) x868) (= x5375 (x5665 (+ 192 x6675))) (= x1820 (x4456 (- x6675 x7597))) (= x5140 (x639 26959946667150639794667015087019630673637144422540572481103610249215 x1314)) (not (= x6675 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x7597) (<= x6675 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x5140) x282) (= x1644 (x5665 (+ x5377 x5411))) (= x995 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2630)) (< x7597 x6675) (= x2630 (x5665 (+ 31 x5377))) (= x6675 (x5665 (+ x5411 x995))) (= x1314 (x3540 x7460)) (= x7286 (x5665 (+ x6675 32))) (= (< 0 x2719) x694) (> x5375 x6675) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x6675) (not (= x6675 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (not (= x6675 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (<= x7597 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x7597 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x6675 1) (= (x5665 (+ x7597 32)) x7460) (<= x6675 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3254 x7597) x1172))) x1277) x5654))
(assert (= (x6212 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263)) x8426))
(assert (= x7807 (and x6599 x4259)))
(assert (= (x5740 (x3114 x7483 x7006)) x7006))
(assert (=> (>= 10000 x8381) (= 0 (x3391 x8381))))
(assert (x4101 x300))
(assert (< (x8452 64 x66 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3828 (or (and x7675 x2400) (and x4571 x5994))))
(assert (= x1377 (and (not x6053) x4808)))
(assert (= (and (not x3526) x8326) x7962))
(assert (x5391 x2482))
(assert (x4101 x3941))
(assert (= x7289 (x842 (x658 x6601 x8352 x7125 x7289))))
(assert (> (x8452 64 x5586 100) 10000))
(assert (x4101 x2368))
(assert (=> (<= x3702 10000) (= 0 (x3391 x3702))))
(assert (=> (<= x3708 10000) (= 0 (x3391 x3708))))
(assert (= (and (not x7359) x6504) x7559))
(assert (x4101 x5211))
(assert (x4101 x1951))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x6251 12)))
(assert (x4101 x2322))
(assert (x4101 x2259))
(assert (x4101 x101))
(assert (x4101 x3389))
(assert (x4101 x1520))
(assert (x4101 x6461))
(assert (= (and x4314 (not x5366)) x4939))
(assert (= (x6212 (x8452 64 x518 (ite (<= x1404 32) x320 (ite (>= 64 x1404) x4133 (ite (<= x1404 96) x1002 (ite (<= x1404 128) x4746 (ite (>= 160 x1404) x8578 (ite (>= 192 x1404) x996 x7067)))))))) (ite (>= 32 x1404) x320 (ite (<= x1404 64) x4133 (ite (<= x1404 96) x1002 (ite (<= x1404 128) x4746 (ite (>= 160 x1404) x8578 (ite (>= 192 x1404) x996 x7067))))))))
(assert (= (and x7656 x3957) x7997))
(assert (= (and x2742 (not x7996)) x1021))
(assert (< 10000 (x8452 64 x4803 3)))
(assert (x4101 x8444))
(assert (x4101 x549))
(assert (= (and x2056 x1996) x1598))
(assert (x4101 x2369))
(assert (x4101 x8139))
(assert (= x5503 (x6212 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551))))
(assert (x4101 x1363))
(assert (= 64 (x4519 (x8452 64 x2677 11))))
(assert (x8137 x1431))
(assert (= x7959 (=> (and (= x7874 (x8297 x2571 2)) (= x7355 (> x7465 0)) (= x7465 (x4456 (- x8378 (mod (ite (> 32 x8177) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (- x5239 132) x1379) (= x8378 (x639 1 x2571)) (= x8177 (ite (< 0 x8378) x7874 (x639 127 x7874)))) (and (=> (not x7355) x5684) (=> (and (and (= (= x3656 0) x7695) (= (+ 32 x5239) x1075) (= x3656 (x639 1 x2571))) x7355) (and (=> (and (and (= x4038 (+ x2070 x1075)) (or (= x2070 32) (= x2070 0)) (= x6097 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2571)) (= x2070 (* 32 (ite (not (= 0 x8177)) 1 0)))) x7695) x6317) (=> (and (not x7695) (and (and (= (< 0 x8177) x5826) (= (x3114 32 104) x3136)) (or (and (not x5826) (= 0 x7758)) (and (and (= (x7893 x3136) x7694) (= 32 x7758) (<= x8177 32)) x5826)))) x3479)))))))
(assert (= x2419 (x842 (x5018 x5857 x8219 x4949 x2419 x5524))))
(assert (= x6510 (and x3784 x6236)))
(assert (x4101 x2976))
(assert (x4101 x5121))
(assert (x4101 x5841))
(assert (x4101 x5891))
(assert (x5391 x4149))
(assert (x4101 x6470))
(assert (x4101 x8140))
(assert (= x7904 (x5740 (x8452 64 x7904 36))))
(assert (= (=> (and (= x4083 true) (= x1787 x3902) (= x1192 x8147) (= 2 x8361) (= x8252 x3991) (= 0 x5354) (= x3334 x4896) (= (x639 255 x6795) x3902) (= x6912 false)) x5867) x4482))
(assert (> (x8452 64 x5231 2) 10000))
(assert (= (x3391 4294967295) 0))
(assert (not (x2674 (x3114 x3485 x8140))))
(assert (= x6343 (x4955 (x5018 x8247 x7491 x7316 x1399 x6343))))
(assert (= 0 (x3391 2001815235)))
(assert (= (and x3035 (not x6045)) x2827))
(assert (< 10000 (x8452 x4567 x2927 x1457)))
(assert (x4101 x8300))
(assert (x4101 x3286))
(assert (= (x5740 (x8452 64 x723 11)) x723))
(assert (x4101 x1224))
(assert (x3760 x2236 32))
(assert (x4101 x6424))
(assert (x4101 x954))
(assert (x4101 x5215))
(assert (x4101 x1459))
(assert (= (and (not x115) x4010) x8410))
(assert (= x7491 (x5740 (x5018 x8247 x7491 x7316 x1399 x6343))))
(assert (x4101 x5701))
(assert (= (x4519 (x3114 x6256 x2579)) x6256))
(assert (= x1640 (x6140 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640))))
(assert (x4101 x4658))
(assert (=> (<= x5658 10000) (= (x3391 x5658) 0)))
(assert (x4101 x3485))
(assert (= x1457 (x6212 (x8452 x4567 x2927 x1457))))
(assert (x4101 x1544))
(assert (x4101 x8515))
(assert (= x6325 (and x7849 x8387)))
(assert (x4101 x3963))
(assert (= (and x6668 x2423) x2245))
(assert (x4101 x5447))
(assert (x2674 2088793519))
(assert (x725 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= (x3114 32 x8200) (x3391 (x3114 32 x8200))))
(assert (x4101 x6223))
(assert (= x2320 (=> (and (= (x4456 (- x6246 128)) x1758) (= 128 x7769) (= x3472 (x7676 x3286)) (= (= 0 x3472) x4502)) (and (=> (and (not x4502) (and x2266 (= x1258 (> x4567 18446744073709551615)) (>= x1758 196) (= x6501 51607134309459761954548520284799282329936326410793501951915747293203005440) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8245) (>= x8245 196) (= x4447 x4061) (= false x6962) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1758) (<= x4120 127) (= x5083 128) (>= x278 1) (= x3093 false) (= x278 (x7676 x666)) (= x4567 (x3275 132)) (= x1573 x4803) (= 1914215 x5650) (>= 127 x4120) (= x1758 x8245) (= x5480 x479) (= x2266 (= (x908 132) x6118)))) (and (=> x1258 x4381) (=> (and (not x1258) (and (= x2297 (> x6919 x8245)) (= x6919 (x5665 (+ x4567 164))) (= x805 164))) (and (=> x2297 x2020) (=> (and (and (= x1753 (+ 4 x5480)) (= (> x8245 (+ 31 x1753)) x1929)) (not x2297)) (and (=> (and (and (= (> x3563 18446744073709551615) x5000) (= (x3275 x1753) x3563)) x1929) (and (=> x5000 x4381) (=> (and (and (= x1913 (x5665 (+ x3889 x3563))) (= x2549 (> x1913 x8245)) (= x3889 (+ x1753 32))) (not x5000)) (and (=> x2549 x2020) (=> (and (= x7916 (= x2558 x729)) (not x2549)) (and (=> (and x7916 (and (= x5486 (x4426 x3565)) (= x1745 (< 0 x2172)) (= x2482 (x8297 x5486 2)) (= (ite (> x3948 0) x2482 (x639 127 x2482)) x2732) (= (x4456 (- x3948 (mod (ite (< x2732 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2172) (= (x639 1 x5486) x3948) (= (x8452 64 x4803 3) x3565))) (and (=> (and (not x1745) (and (= x4930 36) (= x6774 false) (= true x1650))) x2914) (=> (and x1745 (and (= (x8297 (+ 31 x2732) 32) x2038) (= x3927 (= x2732 0)) (= x8126 (* x2038 32)) (= (+ 160 x8126) x3299))) (and (=> x3927 x6742) (=> (and (= x8333 (> x2732 31)) (not x3927)) (and (=> (and (not x8333) (and (= (* 256 x6324) x2058) (= (x4426 x3565) x3586) (= (x8297 x3586 256) x6324))) x6742) (=> (and x8333 (and (or (and x1485 (and (>= x4566 160) (= (x2637 x1600) x6936) (<= x4566 224))) (not x1485)) (and (= (+ x5655 1) x1600) (= x4566 (+ x2732 160)) (= x5011 (x2637 x5655)) (= x1485 (< 192 x4566)) (= (x3114 32 x3565) x5655)))) x1306))))))) (=> (and (not x7916) (and (= x4930 100) (= false x7713) (= true x8006))) x2914))))))) (=> (and (not x1929) (and (= x5048 true) (= 0 x4930) (= x519 false))) x2914))))))) (=> (and (and (= x4112 x6049) (= x8357 x6141) (= x7573 0) (= true x5347) (= x1689 2) (= false x1040) (= x3545 x4512) (= 0 x7614)) x4502) x2843)))))
(assert (= x4480 (and (not x855) x7494)))
(assert (= 0 (x3391 50226347614966974677930900640024090345938424853691168920094736542366852710400)))
(assert (< (x8452 64 x4024 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x5625 7)))
(assert (x4101 x5339))
(assert (=> (<= x5551 10000) (= (x3391 x5551) 0)))
(assert (x4101 x3852))
(assert (x5391 x7621))
(assert (= (and x8082 (not x4768)) x2832))
(assert (x4101 x4999))
(assert (=> (>= 10000 x80) (= 0 (x3391 x80))))
(assert (< 10000 (x8452 x5857 x8356 x6054)))
(assert (= x7469 (x5740 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665))))
(assert (x3760 x1712 128))
(assert (=> (<= x2596 10000) (= (x3391 x2596) 0)))
(assert (= x601 (and x456 x468)))
(assert (x4101 x5849))
(assert (x2674 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (= x166 (x5740 (x658 x3485 x166 x719 x2339))))
(assert (x4101 x6777))
(assert (> (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190) 10000))
(assert (x4101 x6396))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x3252 36)))
(assert (=> (>= 10000 x4424) (= 0 (x3391 x4424))))
(assert (x4101 x4095))
(assert (= x8496 (x5740 (x5018 x8236 x8496 x1779 x7671 x5130))))
(assert (x4101 x7126))
(assert (=> (>= 10000 x1862) (= (x3391 x1862) 0)))
(assert (not (x2674 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961))))
(assert (=> (>= 10000 x8061) (= 0 (x3391 x8061))))
(assert (x4101 x278))
(assert (=> (>= 10000 x4237) (= (x3391 x4237) 0)))
(assert (x4101 x3133))
(assert (x4101 x1797))
(assert (x4101 x4617))
(assert (=> (<= x6829 10000) (= (x3391 x6829) 0)))
(assert (= 36 (x6212 (x8452 64 x66 36))))
(assert (= (and x7962 x1414) x4010))
(assert (x4101 x8122))
(assert (not (x2674 (x5018 x5857 x8219 x4949 x2419 x5524))))
(assert (=> (>= 10000 x287) (= (x3391 x287) 0)))
(assert (x4101 x5876))
(assert (= x4942 (and x1745 x1911)))
(assert (x3760 x7673 2))
(assert (x4101 x1326))
(assert (x4101 x5396))
(assert (x2496 x5687))
(assert (x4101 x5608))
(assert (= (x3391 107317874183463056701504662589741776198067464202343767264461527615735374807040) 0))
(assert (= (x6212 (x8452 x5857 x8356 x6054)) x6054))
(assert (=> (>= 10000 x7125) (= (x3391 x7125) 0)))
(assert (x4101 x5872))
(assert (x4101 x215))
(assert (< 10000 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)))
(assert (x4101 x7039))
(assert (=> (>= 10000 x7070) (= (x3391 x7070) 0)))
(assert (x4101 x6157))
(assert (= x5659 (and x2341 x8262)))
(assert (x4101 x379))
(assert (x4101 x7342))
(assert (x4101 x4428))
(assert (not (x2674 (x8452 64 x1649 36))))
(assert (= x3278 (=> (and (= x8234 x4760) (= x4445 x5893) (= x1196 x2244) (= x1648 x3819) (= x3365 x3529) (= x8014 x816) (= 0 x5204) (= x1429 2) (= x3815 true) (= x2398 x7904) (= x5749 false) (= x846 x2571) (= x8495 x826) (= x40 x7103) (= x7632 x1859) (= x2814 x1395) (= x3595 x337)) x2534)))
(assert (= (and x2517 x1064) x3622))
(assert (=> (>= 10000 x5277) (= (x3391 x5277) 0)))
(assert (x2496 x7200))
(assert (= (x8370 (x6207 x6256 x690 x1813 x3211 x2826 x8101)) x8101))
(assert (x4101 x6681))
(assert (x3760 x7921 2))
(assert (= x2861 (or x5146 x775)))
(assert (= (=> (and (= x6660 x2558) (= x8080 x5076) (= x6141 x1684) (= 2 x6719) (= true x71) (= x4112 x5762) (= x2281 0) (= (x639 255 x6795) x2955) (= x4807 x5590) (= x2716 x6437) (= x3286 x5818) (= x7673 x6769) (= x6194 x5008) (= x2904 x4936) (= x2955 x12) (= x820 false) (= x8353 x1386) (= x2879 0) (= x1579 x3545)) x3086) x2886))
(assert (x4101 x2079))
(assert (< 10000 (x8452 64 x1544 7)))
(assert (= (and x54 (not x2114)) x8042))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4807 4)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x666 2)))
(assert (x4101 x8051))
(assert (= (x6140 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707)) x3707))
(assert (x4101 x736))
(assert (x4101 x7402))
(assert (x2496 x6804))
(assert (x4101 x4853))
(assert (x4101 x8522))
(assert (x4101 x5019))
(assert (x4101 x4620))
(assert (x4101 x3644))
(assert (x4101 x8301))
(assert (< 10000 (x8452 64 x6137 36)))
(assert (x4101 x3563))
(assert (= (x3391 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551)) (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551)))
(assert (= (and (not x2989) x6333) x5279))
(assert (= 0 (x3391 57896044618658097711785492504343953926634992332820282019728792003956)))
(assert (x4101 x2877))
(assert (x4101 x6994))
(assert (x4101 x7946))
(assert (x4101 x7464))
(assert (x4101 x1429))
(assert (= x1555 (and x8178 (not x346))))
(assert (x3481 x3535))
(assert (=> (<= x2463 10000) (= 0 (x3391 x2463))))
(assert (= (x4117 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819)) x4819))
(assert (x4101 x26))
(assert (= x3431 (x4955 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300))))
(assert (x4101 x6859))
(assert (x4101 x8020))
(assert (= (and x5721 (not x1080)) x1589))
(assert (x4101 x342))
(assert (x4101 x3574))
(assert (= x5792 (and x4599 x8197)))
(assert (x4101 x838))
(assert (x4101 x7040))
(assert (x4101 x4574))
(assert (= (x4955 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825)) x1899))
(assert (x4101 x7422))
(assert (=> (>= 10000 x444) (= (x3391 x444) 0)))
(assert (x4101 x5712))
(assert (x4101 x3217))
(assert (< 10000 (x8452 64 x8607 12)))
(assert (= (or x3515 x879) x1317))
(assert (x5391 x5330))
(assert (= 0 (x3391 13123866003235860548192500634644069355060014211693331341089165407210616913920)))
(assert (x4101 x4062))
(assert (= x1074 (and (not x6391) x5179)))
(assert (= x8220 (and x1738 x169)))
(assert (= (=> (and (= x7636 (= x2565 0)) (or x7636 (not x7636))) x1540) x7287))
(assert (= x4803 (x5740 (x8452 64 x4803 7))))
(assert (< 10000 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819)))
(assert (x4101 x7323))
(assert (not (x2674 (x4851 x954 x585 x540 x5724 x3612 x557 x1197))))
(assert (=> (>= 10000 x8444) (= 0 (x3391 x8444))))
(assert (x4101 x7070))
(assert (x4101 x6897))
(assert (x4101 x7349))
(assert (x4101 x5518))
(assert (x25 32 (ite (not (= x4199 0)) 1 0)))
(assert (x3760 x6455 128))
(assert (= (and x1739 x5795) x4110))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4084 12)))
(assert (=> (<= x3262 10000) (= 0 (x3391 x3262))))
(assert (x4101 x1366))
(assert (x4057 x2650))
(assert (x4101 x4166))
(assert (< 10000 (x6207 x5456 x254 x2993 x2587 x5865 x5646)))
(assert (x4101 x2736))
(assert (= (x5740 (x8452 64 x2824 2)) x2824))
(assert (x4101 x861))
(assert (x5189 x6351 32))
(assert (not (x2674 (x8452 64 x3252 36))))
(assert (x4101 x2274))
(assert (= x5806 (x842 (x5018 x5456 x3051 x6313 x5806 x1348))))
(assert (x4101 x6853))
(assert (x4101 x3009))
(assert (= (and (not x4540) x2374) x4808))
(assert (= x1460 (and x4246 x6269)))
(assert (x4101 x5882))
(assert (x4101 x7545))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x1459 100)))
(assert (x4101 x6714))
(assert (= x4417 (x5740 (x8452 64 x4417 36))))
(assert (x4101 x7762))
(assert (= (=> (= (= 0 x475) x8415) (and (=> (and (and (= x5870 x4864) (= x8417 x8070) (= x5604 x2025) (= x2323 x8359) (= x5568 x3658) (= x3928 x220) (= x1763 x7526) (= x6223 x2695) (= x1892 x3817) (= x8309 x1423) (= x5681 x4213) (= x4422 x7825) (= x7452 x2581)) (not x8415)) x6541) (=> (and x8415 (and (= x2398 x7904) (= x3529 x3365) (= x826 x8495) (= x2814 x1395) (= x3595 x337) (= x2244 x1196) (= x5204 0) (= x4445 x5893) (= x8014 x816) (= x40 x7103) (= x656 false) (= x2571 x846) (= x4760 x8234) (= x3819 x1648) (= x7632 x1859) (= x3681 true) (= x860 2))) x2534))) x68))
(assert (= (x3391 (x6207 x7301 x481 x345 x5672 x4986 x5616)) (x6207 x7301 x481 x345 x5672 x4986 x5616)))
(assert (= (=> (and (= x7400 x668) (= false x3204) (= true x1068) (= x4534 x4164) (= (x639 255 x5273) x668) (= x2095 x4925) (= 0 x5700) (= x2941 x6729) (= x6783 2)) x5028) x441))
(assert (x2371 (ite (not (= 0 x6118)) 1 0)))
(assert (= (and x7278 (not x6066)) x1351))
(assert (x4101 x2442))
(assert (= (x5740 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828)) x7560))
(assert (x4101 x8597))
(assert (= (x4955 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814)) x6463))
(assert (=> (<= x3291 10000) (= 0 (x3391 x3291))))
(assert (= x4692 (and (not x4384) x4569)))
(assert (x4101 x7466))
(assert (= x8459 (or x434 x3661)))
(assert (= (x4519 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814)) x3485))
(assert (> (x8452 64 x1528 36) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x954 x3276 x4483)))
(assert (x4101 x231))
(assert (= 0 (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= x1530 (x8370 (x6207 x5857 x681 x1632 x5447 x2128 x1530))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)))
(assert (=> (>= 10000 x4823) (= 0 (x3391 x4823))))
(assert (x4101 x4422))
(assert (x4101 x7936))
(assert (= (and (not x7776) x1868) x1470))
(assert (=> (<= x5313 10000) (= (x3391 x5313) 0)))
(assert (= (and x1212 x4766) x6104))
(assert (x4101 x2998))
(assert (= (x4519 (x6207 x7301 x481 x345 x5672 x4986 x5616)) x7301))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x3712 (ite (>= 32 x3728) x4071 (ite (>= 64 x3728) x6751 (ite (<= x3728 96) x8471 (ite (>= 128 x3728) x5582 (ite (>= 160 x3728) x7240 (ite (<= x3728 192) x5937 x894)))))))))
(assert (< (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x8452 64 x2232 100) 10000))
(assert (= x1216 (and x2257 x4591)))
(assert (=> (<= x7472 10000) (= (x3391 x7472) 0)))
(assert (x4101 x5481))
(assert (> (x3114 32 x3565) 10000))
(assert (= x4614 (and x2832 x1029)))
(assert (= x3031 (x6212 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828))))
(assert (x4101 x3531))
(assert (= (or x5992 (and (not x373) x7219)) x5001))
(assert (= x893 (and (not x8106) x4280)))
(assert (= x2636 (and x5846 x5345)))
(assert (x4101 x58))
(assert (= x1165 (and x1537 x1234)))
(assert (x4101 x6195))
(assert (x4101 x739))
(assert (x4101 x5929))
(assert (x4101 x8138))
(assert (x3760 x6892 128))
(assert (x4101 x6598))
(assert (x3760 x8532 2))
(assert (x2496 x2783))
(assert (= (and x6876 (not x1867)) x7733))
(assert (= (x4519 (x6207 x1404 x1434 x7783 x2653 x69 x8128)) x1404))
(assert (x4101 x6996))
(assert (= x3515 (and (not x3484) x3884)))
(assert (x4101 x585))
(assert (= (x3391 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)) (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)))
(assert (x4101 x4604))
(assert (= x1556 (and x1333 x1869)))
(assert (= x5879 (x4955 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393))))
(assert (x2496 x2533))
(assert (x4101 x3265))
(assert (x3760 x2855 256))
(assert (x4101 x990))
(assert (x4101 x6276))
(assert (= x6485 x5775))
(assert (=> (<= x3110 10000) (= (x3391 x3110) 0)))
(assert (x3760 x6920 32))
(assert (< 10000 (x8452 64 1 x3502)))
(assert (= (x3391 (x8452 64 x3712 (ite (<= x3728 32) x4071 (ite (>= 64 x3728) x6751 (ite (>= 96 x3728) x8471 (ite (>= 128 x3728) x5582 (ite (>= 160 x3728) x7240 (ite (>= 192 x3728) x5937 x894)))))))) (x8452 64 x3712 (ite (<= x3728 32) x4071 (ite (<= x3728 64) x6751 (ite (>= 96 x3728) x8471 (ite (>= 128 x3728) x5582 (ite (>= 160 x3728) x7240 (ite (>= 192 x3728) x5937 x894)))))))))
(assert (=> (<= x4084 10000) (= (x3391 x4084) 0)))
(assert (=> (>= 10000 x352) (= 0 (x3391 x352))))
(assert (x4101 x1655))
(assert (x4101 x5383))
(assert (x5391 x4114))
(assert (x4101 x3740))
(assert (x4101 x2405))
(assert (x4101 x5539))
(assert (x4101 x4769))
(assert (not (x2674 (x3114 32 103))))
(assert (x4101 x1664))
(assert (= (x658 x8066 x7449 x526 x4927) (x3391 (x658 x8066 x7449 x526 x4927))))
(assert (=> (<= x6011 10000) (= (x3391 x6011) 0)))
(assert (= x3277 (x5740 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707))))
(assert (< 10000 (x5018 x8105 x3604 x1200 x7816 x7663)))
(assert (=> (<= x5929 10000) (= 0 (x3391 x5929))))
(assert (x2674 14609135308879574245051756109060786979925523914932377087145621868633940557824))
(assert (= 0 (x3391 1914215)))
(assert (x4101 x5555))
(assert (x4101 x4674))
(assert (x4101 x8359))
(assert (x4101 x2657))
(assert (x4101 x7761))
(assert (= (and x7929 x3325) x3098))
(assert (x2496 x8327))
(assert (x4101 x7273))
(assert (x5189 x3586 256))
(assert (x4101 x5785))
(assert (= x6018 (x5740 (x8452 64 x6018 36))))
(assert (x4101 x6574))
(assert (x3760 x826 2))
(assert (x4101 x5695))
(assert (x4101 x1082))
(assert (x4101 x3386))
(assert (= (and x7034 x6484) x349))
(assert (= x2843 (=> (and (= x4512 x7210) (= x1606 x8357) (= x2949 x7614) (= x7573 x2565) (= x6049 x4921)) x7287)))
(assert (=> (>= 10000 x736) (= (x3391 x736) 0)))
(assert (x4101 x4403))
(assert (x4101 x5254))
(assert (= (x4519 (x8452 x2327 x708 x4778)) x2327))
(assert (= x7472 (x842 (x6207 x954 x2088 x1088 x7472 x5281 x2463))))
(assert (x4101 x4093))
(assert (= (x3391 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640)) (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640)))
(assert (x3760 x5891 128))
(assert (= x8046 x2886))
(assert (=> (<= x4552 10000) (= (x3391 x4552) 0)))
(assert (= (x3391 (x5018 x5857 x8219 x4949 x2419 x5524)) (x5018 x5857 x8219 x4949 x2419 x5524)))
(assert (x4101 x8170))
(assert (= x1515 (and (not x2523) x5897)))
(assert (x4101 x6614))
(assert (x4101 x258))
(assert (=> (<= x6949 10000) (= 0 (x3391 x6949))))
(assert (= (and x4628 (not x7771)) x2588))
(assert (x4101 x5080))
(assert (x4101 x5008))
(assert (x4101 x387))
(assert (= 64 (x4519 (x8452 64 x6760 (ite (>= 32 x954) x664 (ite (<= x954 64) x2514 (ite (>= 96 x954) x5577 (ite (>= 128 x954) x1131 (ite (>= 160 x954) x5628 (ite (>= 192 x954) x1262 x6705))))))))))
(assert (x4101 x4904))
(assert (= (x3391 (x8452 x6601 x7528 x3162)) (x8452 x6601 x7528 x3162)))
(assert (x3760 x3133 256))
(assert (x2371 (ite (not (= x2504 0)) 1 0)))
(assert (not (x2674 (x8452 64 x2677 11))))
(assert (= (and x7525 x3624) x8175))
(assert (x4101 x1859))
(assert (x4101 x4984))
(assert (< 10000 (x3114 x5857 x7740)))
(assert (= (and x7555 (not x2701)) x5677))
(assert (x4101 x8159))
(assert (x4101 x8546))
(assert (x4101 x8274))
(assert (= x2871 (x4955 (x5018 x6601 x1538 x2378 x3456 x2871))))
(assert (= x5930 (and x3358 (not x4891))))
(assert (x4101 x5003))
(assert (= (and x1124 x8261) x1989))
(assert (= x7415 (and (not x1258) x5856)))
(assert (< 10000 (x8452 x3485 x5701 x2008)))
(assert (x5391 2))
(assert (= (=> (and (= false x5601) (= x7051 0) (= true x4470)) x3924) x6823))
(assert (x4101 x4278))
(assert (x4101 x602))
(assert (=> (>= 10000 x6014) (= (x3391 x6014) 0)))
(assert (=> (>= 10000 x4868) (= (x3391 x4868) 0)))
(assert (x4101 x944))
(assert (not (x2674 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153))))
(assert (x4101 x3067))
(assert (= x4535 (and (not x5910) x555)))
(assert (= (and x6868 (not x2935)) x7919))
(assert (= (and x2683 x4078) x6456))
(assert (> (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803) 10000))
(assert (x4101 x5158))
(assert (= x2789 (or (and (not x1537) x1234) (and x4710 (not x6457)))))
(assert (x4101 x7399))
(assert (= x5384 (and x3316 (not x5647))))
(assert (x4101 x7407))
(assert (x4101 x6101))
(assert (x4101 x1838))
(assert (x4101 x758))
(assert (x4101 x2860))
(assert (=> (>= 10000 x4595) (= 0 (x3391 x4595))))
(assert (x4101 x1606))
(assert (x4101 x6689))
(assert (> (x658 x8276 x8404 x5313 x424) 10000))
(assert (= (or x3938 x8435) x4103))
(assert (x2496 x33))
(assert (= (=> (and (= x3985 (x2992 x729)) (= (+ x3985 x2924) x564) (= x897 (- x5619 x2924)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x564) (>= x564 0) (= x4352 (x639 255 x1816)) (= x7200 x7166) (= x5619 (x2603 x3286)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2924 x3985)) (= x564 x2138) (= 2 x6514)) x3611) x8176))
(assert (x4101 x5969))
(assert (=> (>= 10000 x3286) (= 0 (x3391 x3286))))
(assert (=> (<= x6137 10000) (= 0 (x3391 x6137))))
(assert (= x614 (and x7160 x2761)))
(assert (x4101 x5630))
(assert (x4101 x444))
(assert (x725 x1334))
(assert (x4101 x8358))
(assert (x4101 x1982))
(assert (x4101 x5439))
(assert (x4101 x4475))
(assert (x725 x5863))
(assert (=> (<= x8159 10000) (= 0 (x3391 x8159))))
(assert (x25 32 (ite (not (= x2919 0)) 1 0)))
(assert (x5391 x4538))
(assert (= (x4955 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832)) x952))
(assert (= x581 (and x698 x1663)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x666 1)))
(assert (= x7117 (and x5102 (not x4493))))
(assert (= x4417 (x5740 (x8452 64 x4417 2))))
(assert (= x4549 (=> (and (or (and (and (or (and x4308 (and (= x1608 (> x3657 64)) (or (not x1608) (and x1608 (and (= x4393 (< 96 x3657)) (or (not x4393) (and (<= x3657 128) x4393))))))) (not x4308)) (= (> x3657 32) x4308)) x2683) (not x2683)) (and (= x2280 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1865)) (= (x5665 (+ x2583 x2280)) x382) (= (x813 x6675) x3657) (= x4721 (x5665 (+ 32 x6050))) (= (x5665 (+ x5934 x2583)) x1567) (= (x4456 (- x382 x5375)) x7467) (= (> x3657 0) x2683) (= x1865 (x5665 (+ x5934 31))))) x5469)))
(assert (= (x6140 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751)) x7751))
(assert (x725 x5330))
(assert (x4101 x7035))
(assert (x725 x1431))
(assert (x4101 x2192))
(assert (= (x5740 (x658 x6601 x8352 x7125 x7289)) x8352))
(assert (x4101 x1712))
(assert (x5391 x5199))
(assert (x4101 x3564))
(assert (x4101 x5409))
(assert (x2496 x8510))
(assert (not (x2674 (x6207 x5456 x254 x2993 x2587 x5865 x5646))))
(assert (x4101 x6291))
(assert (x4101 x748))
(assert (x4101 x5892))
(assert (= x254 (x5740 (x6207 x5456 x254 x2993 x2587 x5865 x5646))))
(assert (x4101 x863))
(assert (> (x658 x4567 x8100 x1458 x7760) 10000))
(assert (x725 x1674))
(assert (x4101 x366))
(assert (x4101 x7983))
(assert (x4101 x8029))
(assert (= x2725 (and x7232 x1454)))
(assert (x4101 x2878))
(assert (x4101 x1314))
(assert (= x2530 (and x3496 x2503)))
(assert (=> (>= 10000 x1528) (= (x3391 x1528) 0)))
(assert (x4101 x5165))
(assert (=> (<= x8066 10000) (= (x3391 x8066) 0)))
(assert (= (x3391 x5510) (x3391 (+ x5510 1))))
(assert (x5391 x5024))
(assert (x4101 x3781))
(assert (x4057 x8532))
(assert (= (=> (and (= x3935 (> x2719 0)) (= (ite (> x2734 150) 150 x2734) x6502) (= (x5665 (+ 32 x6675)) x3698)) (and (=> x3935 x5944) (=> (and (and (or (not x6236) (and (and (and (= (x856 x5195) x4844) (= (< 32 x4013) x8397)) (or (and x8397 (and (or (and x307 (and (or (and (and (<= x4013 128) (= x6154 (x5665 (+ x5195 96))) (= (x5665 (+ x5375 96)) x6529) (= x875 (x4827 x6154))) x3319) (not x3319)) (and (= x3371 (x5665 (+ x5195 64))) (= x3319 (> x4013 96)) (= (x2779 x3371) x1614) (= (x5665 (+ x5375 64)) x1821)))) (not x307)) (and (= x7009 (x5665 (+ x5375 32))) (= (< 64 x4013) x307) (= x2892 (x3304 x3433)) (= (x5665 (+ 32 x5195)) x3433)))) (not x8397))) x6236)) (and (= (x5665 (+ x351 64)) x3008) (= (x856 x3933) x7999) (= (x8452 64 x4803 7) x7058) (= x6500 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153)) (= x8502 (x5018 x7483 x7258 x567 x3375 x3585)) (= x5209 (x5665 (+ x351 32))) (= (x5665 (+ 128 x351)) x6916) (= x1354 (x5665 (+ 128 x351))) (= (x5665 (+ x351 192)) x6044) (= (x856 x8110) x670) (= (x856 x1354) x7858) (= x8207 (x856 x3193)) (= (x856 x1796) x2877) (= x567 (x856 x8141)) (= x4728 (x3114 x7483 x7006)) (= (x856 x351) x8282) (= x4694 (x5665 (+ 96 x351))) (= x6236 (< 0 x4013)) (= x1796 (x5665 (+ x351 32))) (= x6995 (x5665 (+ x351 160))) (= x6628 (x856 x7790)) (= (x856 x1969) x2575) (= (x5665 (+ x351 32)) x3193) (= x5169 (x856 x351)) (= x4488 (x658 x7483 x3123 x2877 x670)) (= x8141 (x5665 (+ 32 x351))) (= (x5665 (+ x351 128)) x7790) (= (x856 x3008) x134) (= (x856 x6916) x5629) (<= x7483 224) (= x6664 (x856 x351)) (= (x856 x351) x7258) (= (x5665 (+ 96 x351)) x531) (= x5989 (x8452 x7483 x8282 x5639)) (= (x5665 (+ x351 32)) x4156) (= (x5665 (+ x351 64)) x3933) (= (x5665 (+ 160 x351)) x3852) (= (x856 x5209) x854) (= (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075) x7253) (= x8110 (x5665 (+ 64 x351))) (= x1419 (x5665 (+ x351 64))) (= x3651 (x5665 (+ 32 x351))) (= x1969 (x5665 (+ 64 x351))) (= x7022 (x856 x6995)) (= (x856 x4156) x5639) (= x251 (x8448 0)) (= (x5665 (+ 96 x351)) x5014) (= x4415 (x856 x351)) (= x7006 (x856 x351)) (= (x856 x3651) x1668) (= x5720 (x856 x531)) (= x6153 (x856 x3852)) (= x8490 (x856 x5014)) (= x3123 (x856 x351)) (= (x5665 (+ x351 96)) x1420) (= x4013 (x856 x3299)) (= (ite (= x7483 0) x251 (ite (<= x7483 32) x4728 (ite (>= 64 x7483) x5989 (ite (<= x7483 96) x4488 (ite (<= x7483 128) x8502 (ite (>= 160 x7483) x2497 (ite (>= 192 x7483) x6500 x7253))))))) x926) (= x2497 (x6207 x7483 x4415 x1668 x2575 x5720 x7858)) (= (x856 x6044) x4075) (= (x856 x4694) x7615) (= x3375 (x856 x1419)) (= (x856 x6152) x7483) (= x3585 (x856 x1420)))) (not x3935)) x6191))) x2141))
(assert (x4101 x833))
(assert (x3481 x2585))
(assert (x4101 x6609))
(assert (x3481 x5020))
(assert (x4101 x1794))
(assert (x4101 x1975))
(assert (= x5241 (x6212 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751))))
(assert (< 10000 (x8452 64 x7797 36)))
(assert (x5391 x221))
(assert (= x3240 (x5740 (x6207 x2327 x3240 x576 x6659 x4505 x8420))))
(assert (=> (>= 10000 x3240) (= (x3391 x3240) 0)))
(assert (x4101 x7688))
(assert (x4101 x5573))
(assert (= (x4519 (x6207 x4567 x5929 x4238 x5321 x5266 x4424)) x4567))
(assert (x4101 x4213))
(assert (x2496 x2209))
(assert (= x3662 x3440))
(assert (x4101 x6936))
(assert (x4101 x4818))
(assert (x3481 x6920))
(assert (not (x2674 (x3114 32 x3750))))
(assert (x4101 x5550))
(assert (x4101 x7191))
(assert (=> (>= 10000 x1533) (= 0 (x3391 x1533))))
(assert (= x5063 (and x5673 (not x4801))))
(assert (x725 x4854))
(assert (=> (<= x212 10000) (= 0 (x3391 x212))))
(assert (= x8074 (and x6943 x5170)))
(assert (= (=> (= (< 0 (ite (= 0 x798) x798 1)) x5366) (and (=> (and (not x5366) (and (or (not x32) x32) (= (= x6598 0) x32))) x4012) (=> x5366 x3908))) x3312))
(assert (= (x842 (x5018 x6609 x6555 x8300 x3110 x7629)) x3110))
(assert (= (x5740 (x3114 x3485 x8140)) x8140))
(assert (x4101 x8457))
(assert (x4101 x7968))
(assert (x4101 x2143))
(assert (= (and x6377 (not x1924)) x5227))
(assert (= (x6212 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)) x854))
(assert (x4101 x5902))
(assert (x4101 x6970))
(assert (= x471 (x6212 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819))))
(assert (not (x2674 (x6207 x6256 x690 x1813 x3211 x2826 x8101))))
(assert (= (x8452 64 x666 2) (x3391 (x8452 64 x666 2))))
(assert (x4101 x1936))
(assert (= (and x8074 (not x6060)) x3118))
(assert (x4101 x4896))
(assert (x4101 x3117))
(assert (= x5438 (or x1799 x3715 x6588 x8142 x119)))
(assert (x4101 x427))
(assert (> (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825) 10000))
(assert (=> (<= x1612 10000) (= (x3391 x1612) 0)))
(assert (=> (<= x3031 10000) (= 0 (x3391 x3031))))
(assert (= (x5740 (x6207 x4567 x5929 x4238 x5321 x5266 x4424)) x5929))
(assert (x4101 x8593))
(assert (x4101 x6264))
(assert (x4101 x7584))
(assert (x4101 x5281))
(assert (= (x5018 x8247 x7491 x7316 x1399 x6343) (x3391 (x5018 x8247 x7491 x7316 x1399 x6343))))
(assert (x4101 x2816))
(assert (not (x2674 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665))))
(assert (x4101 x7517))
(assert (x4101 x1723))
(assert (x4101 x1075))
(assert (= (x3391 34591783479076665078880830389440322436311164112910831269305739813291000201216) 0))
(assert (x4101 x1506))
(assert (= (or (and (not x5066) x887) x4070) x7088))
(assert (x4101 x1034))
(assert (x5391 x7040))
(assert (=> (<= x6407 10000) (= 0 (x3391 x6407))))
(assert (=> (<= x8356 10000) (= 0 (x3391 x8356))))
(assert (x4101 x6371))
(assert (x4101 x5755))
(assert (> (x5018 x2493 x6149 x1732 x3117 x8016) 10000))
(assert (= x5618 (x5740 (x6207 x8236 x5618 x2344 x5489 x7255 x1096))))
(assert (= x6609 (x4519 (x5018 x6609 x6555 x8300 x3110 x7629))))
(assert (= x4300 (=> (and (= x4209 0) (= x6584 true) (= false x360)) x3910)))
(assert (=> (<= x5618 10000) (= (x3391 x5618) 0)))
(assert (x4101 x1065))
(assert (x4101 x6367))
(assert (x4101 x2615))
(assert (x4101 x4479))
(assert (x4101 x3650))
(assert (x4101 x6159))
(assert (= (or x6129 x2823) x8533))
(assert (x4101 x8219))
(assert (x5391 x1086))
(assert (= 0 (x3391 46442213778836376901753710468615024683576072693327014300388496345503314739200)))
(assert (= x4702 (=> (and (= x6802 (x7676 x4760)) (= x4836 (= 0 x6802)) (= x6464 (x4456 (- x838 128))) (= 128 x2256)) (and (=> (and (and (= (x7594 x729) x8109) (= (>= x8109 x3438) x4189) (= (< (+ x7358 x3438) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5331) (= x3833 (and x5331 x4189)) (= x7358 (x7594 x4760))) (not x4836)) (and (=> (and (not x3833) (= 0 x3862)) x1390) (=> (and (and (= x4773 x7651) (<= 196 x6464) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3438 x8599)) (<= 196 x659) x6651 (>= 127 x4782) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x659) (<= 0 x4773) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6464) (= x6464 x659) (= (+ x3438 x8599) x4773) (= x518 x796) (= x5625 x2900) (= false x7024) (= false x3871) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4773) (= (x7594 x729) x7773) (= x3860 (- x7773 x3438)) (= x6651 (= x2504 (x4241 132))) (>= x7281 1) (= 128 x2368) (= 3521034783 x7554) (= x4165 x7496) (= (x1902 132) x2218) (= (< 18446744073709551615 x2218) x1679) (= (x682 x4760) x8599) (= 94926909962862326217726538024181891405690106632559804934698421914364834480128 x3208) (<= x4782 127) (= x7281 (x7676 x666))) x3833) (and (=> x1679 x7) (=> (and (not x1679) (and (= (x5665 (+ 164 x2218)) x1293) (= 164 x2564) (= (< x659 x1293) x7445))) (and (=> (and (not x7445) (and (= x6068 (+ x7496 4)) (= x2989 (> x659 (+ x6068 31))))) (and (=> (and (and (= true x3782) (= 0 x7051) (= x4872 false)) (not x2989)) x3924) (=> (and (and (= (x1902 x6068) x5518) (= x6854 (> x5518 18446744073709551615))) x2989) (and (=> (and (and (= x322 (> x5645 x659)) (= x5645 (x5665 (+ x3689 x5518))) (= (+ x6068 32) x3689)) (not x6854)) (and (=> (and (not x322) (and (and (= (x3538 320) x2613) (= (= 0 x1246) x3003) (= x7521 (x3538 160)) (= x1657 (x3538 160)) (= x69 (x3538 224)) (= x3702 (x3538 128)) (= (x8452 x1404 x549 x1883) x4133) (= x5524 (x3538 224)) (= x866 (x5018 x5857 x8219 x4949 x2419 x5524)) (= (x8452 x5857 x8356 x6054) x4290) (= (x3538 192) x5447) (= (x3538 288) x6084) (= (x3538 160) x6054) (= x7584 (x5665 (+ 128 x2218))) (= x1434 (x3538 128)) (= (x3538 224) x4282) (= (x8448 0) x1028) (= (x3538 288) x7550) (= (x6207 x5857 x681 x1632 x5447 x2128 x1530) x2801) (= x1404 (x4456 (- x6248 128))) (= x8356 (x3538 128)) (= (x3538 160) x2267) (= x1530 (x3538 256)) (= (x3538 128) x8219) (= x1246 (x1116 x2019)) (= (x8452 64 x5625 7) x1108) (= x6067 (x3538 160)) (= x2469 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640)) (= x4310 (x3114 x5857 x7740)) (= x8036 (x3538 128)) (= x1640 (x3538 288)) (= (x3538 128) x8316) (= (x8452 64 x518 (ite (<= x1404 32) x320 (ite (>= 64 x1404) x4133 (ite (<= x1404 96) x1002 (ite (<= x1404 128) x4746 (ite (>= 160 x1404) x8578 (ite (>= 192 x1404) x996 x7067))))))) x2019) (= (x5665 (+ 32 x6589)) x6248) (= x5443 (x3538 256)) (= x6794 (x3538 192)) (>= 224 x1404) (= (x3538 128) x681) (= (x3538 192) x8526) (= x5857 (- x1404 32)) (= (x658 x5857 x2673 x2267 x6794) x7719) (= (x3538 224) x153) (= (x3538 256) x3497) (= x996 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550)) (= (x3538 192) x8002) (= (x3538 128) x2673) (= x2419 (x3538 192)) (= x4949 (x3538 160)) (= x320 (x3114 x1404 x3702)) (= (x3538 224) x408) (= (x5018 x1404 x8231 x7521 x8002 x408) x4746) (= (x3538 224) x2128) (= (x6207 x1404 x1434 x7783 x2653 x69 x8128) x8578) (= x8128 (x3538 256)) (= x8122 (x3538 160)) (= (x3538 128) x7740) (= x1588 (x3538 160)) (= x1002 (x658 x1404 x6591 x1588 x6117)) (= (x3538 128) x549) (= (x3538 160) x7783) (= (x3538 160) x1632) (>= x1404 32) (= (x3538 128) x1374) (= x1883 (x3538 160)) (= (x3538 128) x6591) (= x8231 (x3538 128)) (= x5936 (x3538 224)) (= x4396 (x3538 192)) (= x6589 (x5665 (+ x2218 128))) (= x6117 (x3538 192)) (= x3274 (x3538 256)) (= (x3538 192) x3139) (= (x3538 192) x2653) (= x2994 (ite (= 0 x5857) x1028 (ite (<= x5857 32) x4310 (ite (>= 64 x5857) x4290 (ite (>= 96 x5857) x7719 (ite (>= 128 x5857) x866 (ite (<= x5857 160) x2801 x2469))))))) (= (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613) x7067)) (or (and (and (or (and x468 (and (= x7574 (x4028 224)) (= x6866 (x658 x3485 x166 x719 x2339)) (= x2008 (x4028 160)) (= x4823 (x4028 128)) (= x5632 false) (= x1104 (x8448 0)) (= x7569 (x4028 256)) (= (* x642 32) x7884) (= true x4720) (= (* 32 x2220) x3214) (= (x4028 128) x5658) (= (x4028 224) x6463) (>= x3485 32) (= (x4028 192) x3211) (= (x4028 256) x334) (= (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300) x749) (= x8388 (x4028 128)) (= x7835 (x5665 (+ x2218 128))) (= x8575 (ite (= 0 x6256) x1104 (ite (>= 32 x6256) x1995 (ite (>= 64 x6256) x5372 (ite (>= 96 x6256) x6893 (ite (>= 128 x6256) x6840 (ite (<= x6256 160) x4477 x5530))))))) (= (x4028 160) x5174) (= x2120 (x5665 (+ x7884 32))) (= x352 (x4028 192)) (or (>= x2218 115792089237316195423570985008687907853269984665640564039457584007913129639905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x2218)) (= (x4028 160) x1813) (= (x6207 x6256 x690 x1813 x3211 x2826 x8101) x4477) (= x3977 (x4028 160)) (= (x4028 256) x8101) (= x6840 (x5018 x6256 x112 x2259 x6535 x7432)) (= x8123 128) (= x5701 (x4028 128)) (= x1995 (x3114 x6256 x2579)) (= (x4028 256) x7911) (= x7346 (x4028 128)) (= x2657 (x5665 (+ x593 x5518))) (= x2220 (x8297 x5485 32)) (= x3300 (x4028 320)) (= x4287 (x5665 (+ 160 x2218))) (<= x3485 224) (= x652 (x4028 288)) (= x8380 (x4028 160)) (= (x4028 192) x6172) (= x4268 (x8452 64 x518 (ite (<= x3485 32) x2064 (ite (<= x3485 64) x4186 (ite (<= x3485 96) x6866 (ite (>= 128 x3485) x49 (ite (<= x3485 160) x6094 (ite (>= 192 x3485) x8413 x749)))))))) (= x166 (x4028 128)) (= 0 x7051) (= (x5665 (+ x917 x2120)) x7721) (= x2339 (x4028 192)) (= x5274 (x4028 160)) (= x917 (+ x3214 160)) (= (x4028 224) x2826) (= (x4028 160) x6998) (= (x4028 160) x719) (= x8413 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814)) (= (x8452 x6256 x5658 x7172) x5372) (<= 161 x7721) (= (x4028 224) x6346) (= x2579 (x4028 128)) (= x8145 (x4028 192)) (= (x4028 128) x8140) (= x5530 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733)) (= x6256 (- x3485 32)) (= x3995 (x4028 160)) (or (>= 31 x5475) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x5475)) (= (x4028 128) x7745) (= (x5018 x3485 x4823 x5174 x8145 x7574) x49) (= x3444 (x4028 224)) (= (x5665 (+ x2218 128)) x2092) (= x2064 (x3114 x3485 x8140)) (= (x4028 128) x690) (= x5475 (x7980 x917)) (= (x4028 192) x302) (= x136 (x4028 128)) (= x733 (x4028 288)) (= (x8297 x6561 32) x642) (= x6094 (x6207 x3485 x136 x3977 x352 x6346 x7911)) (= (x4028 224) x7432) (= (x4028 128) x4804) (= (x4028 288) x3814) (= x6518 (x4028 192)) (= (x4028 160) x7172) (= (x5665 (+ x5518 31)) x6561) (= (x5665 (+ x2218 31)) x5485) (= x1462 (x4028 256)) (= x7477 (x8452 64 x5625 7)) (= x3431 (x4028 224)) (< x917 x7721) (= (x4028 192) x6390) (= x593 (x5665 (+ 32 x917))) (= x112 (x4028 128)) (= x4186 (x8452 x3485 x5701 x2008)) (= (x4028 160) x2259) (= (x4028 192) x6535) (= (x658 x6256 x7745 x8380 x6390) x6893) (= x3485 (x4456 (- (mod (+ 32 x7835) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128))))) (and (and (= 132 x7051) (= x5566 false) (= true x7564)) (not x468))) (and (= x6925 (x8452 x8105 x3148 x7367)) (= x7926 (x6811 256)) (= (= x1246 (ite (= 0 x8105) x1980 (ite (<= x8105 32) x792 (ite (<= x8105 64) x6925 (ite (<= x8105 96) x1658 (ite (>= 128 x8105) x5183 (ite (>= 160 x8105) x843 (ite (<= x8105 192) x3127 x1)))))))) x468) (= (x6811 128) x1516) (= x7691 (x6811 256)) (= (x6811 128) x649) (= (x6811 128) x3148) (= x7816 (x6811 192)) (= x4425 (x6811 224)) (>= 224 x8105) (= x3291 (x6811 320)) (= x1658 (x658 x8105 x1516 x7217 x2649)) (= (x6811 192) x3759) (= (x6811 128) x4237) (= (x6811 160) x4144) (= (x6811 192) x41) (= (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291) x1) (= x3604 (x6811 128)) (= x6689 (x6811 192)) (= (x3114 x8105 x4237) x792) (= x7751 (x6811 288)) (= x5183 (x5018 x8105 x3604 x1200 x7816 x7663)) (= x8105 (x4456 (- x8523 128))) (= x1200 (x6811 160)) (= x1263 (x6811 224)) (= (x6811 224) x3838) (= x7217 (x6811 160)) (= (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751) x3127) (= x8523 (x5665 (+ 128 x5518))) (= x6010 (x6811 288)) (= x8457 (x6811 160)) (= x5667 (x6811 128)) (= x2649 (x6811 192)) (= (x6811 128) x941) (= x1980 (x8448 0)) (= x3972 (x6811 256)) (= x7367 (x6811 160)) (= (x6207 x8105 x941 x8457 x6689 x1263 x3972) x843) (= (x6811 160) x5241) (= x7663 (x6811 224)))) (not x3003)) (and x3003 (and (= false x6234) (= 132 x7051) (= true x921)))))) x3924) (=> x322 x6823))) (=> x6854 x7))))) (=> x7445 x6823))))))) (=> (and x4836 (and (= x1395 x2814) (= x816 x8014) (= x6959 2) (= x3365 x3529) (= x7632 x1859) (= x2571 x846) (= x1196 x2244) (= x5204 0) (= x4760 x8234) (= x337 x3595) (= x7103 x40) (= x4445 x5893) (= x8495 x826) (= x7904 x2398) (= x1648 x3819) (= x6836 true) (= x4116 false))) x2534)))))
(assert (x4101 x3102))
(assert (x4101 x1431))
(assert (x3760 x2537 256))
(assert (x4101 x8120))
(assert (= (and (not x2091) x1800) x6644))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x5456 x7626 x2592)))
(assert (=> (<= x127 10000) (= (x3391 x127) 0)))
(assert (=> (>= 10000 x5174) (= 0 (x3391 x5174))))
(assert (x4101 x6400))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (= x2804 (and (not x7451) x6304)))
(assert (x4101 x8066))
(assert (= (=> (= x4895 (= x1461 0)) (and (=> (and (and (= (> x1147 x5841) x4801) (= (x5125 x7068) x1147) (= (x5665 (+ x4898 x1147)) x5841) (= (x8452 64 x666 2) x7068)) x4895) (and (=> (and (and (= x764 36) (= x4333 false) (= true x4429)) x4801) x7883) (=> (and (not x4801) (= (= x4936 115792089237316195423570985008687907853269984665640564039457584007913129639935) x6257)) (and (=> x6257 x8477) (=> (and (and (= x4564 (x5665 (+ x4936 1))) (= x3471 x3545) (= false x6639) (= x4112 x4423) (= x6141 x3920) (= (+ 1 x492) x34) (= x5697 32) (= x1504 1) (= (x8452 64 x4936 0) x492) (= false x3524) (= x3487 (x5665 (+ x4936 1)))) (not x6257)) x3554))))) (=> (and (not x4895) (and (= false x46) (= x1825 true) (= x764 4))) x7883))) x5535))
(assert (=> (>= 10000 x2988) (= (x3391 x2988) 0)))
(assert (= (x5740 (x3114 x8105 x4237)) x4237))
(assert (= (or x1565 x8009) x1482))
(assert (= x833 (x4955 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070))))
(assert (= (x4519 (x8452 x7483 x8282 x5639)) x7483))
(assert (= (x5740 (x8452 x4567 x2927 x1457)) x2927))
(assert (x4101 x5377))
(assert (x4101 x888))
(assert (= (and x5721 x1080) x1248))
(assert (x4101 x4925))
(assert (=> (>= 10000 x5524) (= (x3391 x5524) 0)))
(assert (= (x8370 (x6207 x6601 x1154 x6468 x2260 x2279 x5339)) x5339))
(assert (= x4748 (=> (and (= x8014 x3231) (= x826 x5358) (= 2 x224) (= x2571 x8120) (= x2031 x40) (= x3595 x5823) (= x1196 x4215) (= 0 x5382) (= x4760 x1595) (= x33 x8347) (= x1967 (x639 255 x4818)) (= x4812 x1395) (= x7632 x5362) (= x1701 x1648) (= x3121 x4445) (= x4755 x1967) (= x5916 x3365)) x5979)))
(assert (= (or x4187 x601 x7575 x5279 x4234 x1480) x7826))
(assert (x4101 x8553))
(assert (= (and (not x1089) x21) x363))
(assert (x2674 2001815235))
(assert (not (x2674 (x8452 64 x4417 36))))
(assert (x4101 x3588))
(assert (x4101 x2563))
(assert (< 10000 (x3114 x8247 x8500)))
(assert (x2496 x7329))
(assert (= (x3391 (x8452 x6609 x5827 x1042)) (x8452 x6609 x5827 x1042)))
(assert (x4101 x8532))
(assert (= (x8452 64 x5586 100) (x3391 (x8452 64 x5586 100))))
(assert (x4101 x345))
(assert (x4101 x6782))
(assert (= x6648 (=> (and (= x427 (x2456 516)) (= x7429 (= x427 0))) (and (=> (and (and (= true x6180) (= (x5665 (+ x603 32)) x8596) (= (x5665 (+ 32 x1743)) x4612) (= x603 (x5665 (+ 4 x2391))) (= false x4242) (= (x5665 (+ x8596 32)) x1743) (= x7288 132)) x7429) x2687) (=> (and (not x7429) (and (= (x1729 354) x4802) (= x6023 (x8452 64 x1648 5)) (= x8124 (x297 x6023)) (= x3368 (< (ite (= 0 x8124) 10000 x8124) x4802)))) (and (=> (and x3368 (and (= x6056 (x5665 (+ 32 x8546))) (= x8371 true) (= x7288 100) (= x8546 (x5665 (+ x1368 32))) (= x6274 false) (= x1368 (x5665 (+ 4 x2391))))) x2687) (=> (and (and (= (x4456 (- x3892 x2391)) x2848) (= (x5665 (+ x3469 32)) x2396) (= (= x4541 0) x6896) (= x222 (x5665 (+ x4960 32))) (= x7399 (x4456 (- x4737 x7199))) (= x4541 (x7676 x1618)) (= x8134 (x5665 (+ 32 x7544))) (= x4737 (x5665 (+ x1930 x5909))) (= x5742 (x1729 354)) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3535) x5909) (= x1715 (x5665 (+ x4737 32))) (= x1382 (x4456 (- x7544 x7199))) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2839) x6341) (= (x5665 (+ 32 x5065)) x4960) (= (x5665 (+ 32 x7230)) x1930) (= x5260 (x5665 (+ 31 x5742))) (= (x5665 (+ 31 x7704)) x2839) (= x7544 (x5665 (+ x1715 x8151))) (= (x5665 (+ x2391 4)) x7199) (= x3535 (x5665 (+ x4046 31))) (= (x2456 516) x4046) (= (x5665 (+ x2396 32)) x5065) (= (x5665 (+ 32 x7199)) x3469) (= (x5665 (+ 192 x7199)) x7230) (= x8151 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5260)) (= (x5665 (+ x6341 x8134)) x3892) (= x7704 (x1058 450))) (not x3368)) (and (=> (and (and (= 0 x7288) (= true x5397) (= x3832 false)) x6896) x2687) (=> (and (not x6896) (and (= x5006 (x7594 x666)) (= x2972 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x101 x5309))) (= (x7594 x1618) x101) (= x8349 (<= x5309 x5006)) (= x7294 (and x2972 x8349)))) (and (=> (and (and (= x6955 0) (= x5506 x1648) (= x7541 x1382) (= (+ x5309 x4153) x1788) (= x666 x2873) (= x5689 (x7594 x666)) x7238 (= x4466 x7399) (<= x4769 127) (>= x5611 1) (= 3313512704 x6303) (= x608 (- x5689 x5309)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4153 x5309)) (= x4528 (or (and (> 192 (- x5012 4)) (= true (<= (- x5012 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> (- x5012 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x5307 x1788) (<= x1788 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= false x3831) (<= 420 x5012) (<= x4769 127) (= x4153 (x2614 x1618)) (= 192 x7722) (= x2848 x5012) (= x5611 (x7676 x8315)) (<= 0 x1788) (>= x2848 420) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x6874) (= (= (x1884 196) x4046) x7238) (= false x6958)) x7294) (and (=> x4528 x3662) (=> (and (= x63 true) (not x4528)) (and (=> (and x63 (= x3442 (and (> x5012 227) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5012) true)))) (and (=> (and (and (= x122 (< 18446744073709551615 x7952)) (= (x6540 196) x7952)) x3442) (and (=> x122 x3440) (=> (and (and (= x7868 (> x7091 x5012)) (= (x5665 (+ 228 x7952)) x7091)) (not x122)) (and (=> (and (not x7868) (= x776 (> x7399 18446744073709551615))) (and (=> x776 x3662) (=> (and (not x776) (and (= x5248 (or (and (< x92 x5012) (= (<= x92 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5012))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5012) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x92)))) (= x177 (x5665 (+ x7399 4))) (= (x5665 (+ x177 31)) x92))) (and (=> (and x5248 (and (= x2647 (> x2720 18446744073709551615)) (= (x6540 x177) x2720))) (and (=> x2647 x3440) (=> (and (not x2647) (and (= x319 (x5665 (+ x2720 x1392))) (= (x5665 (+ 32 x177)) x1392) (= (> x319 x5012) x3617))) (and (=> x3617 x2346) (=> (and (not x3617) (= x3526 (> x1382 18446744073709551615))) (and (=> x3526 x3662) (=> (and (not x3526) (and (= (x5665 (+ x7114 31)) x1034) (= x7114 (x5665 (+ x1382 4))) (= x1414 (or (and (<= x5012 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1034)) (and (= (<= x1034 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x5012 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x5012 x1034)))))) (and (=> (not x1414) x2966) (=> (and x1414 (and (= (> x753 18446744073709551615) x115) (= (x6540 x7114) x753))) (and (=> (and (and (= (x5665 (+ x753 x4096)) x6169) (= (< x5012 x6169) x7747) (= x4096 (x5665 (+ 32 x7114)))) (not x115)) (and (=> (and (and (= x5796 x2452) (= x3623 x1618) (= x735 x2196) (= x4461 x6438) (= x8153 x5872) (= x4507 x2416) (= x7561 x8340) (= x7227 x353) (= x5810 x4688) (= x6397 1) (= x2714 x2920) (= x3758 x6580) (= x7254 x1960) (= x6021 x3682)) (not x7747)) x6750) (=> x7747 x2346))) (=> x115 x3440))))))))))) (=> (not x5248) x2966))))) (=> x7868 x2346))))) (=> (not x3442) x2966))) (=> (not x63) x3662))))) (=> (and (and (= x3722 x1618) (= x735 x5057) (= x6580 x6076) (= 0 x8187) (= x2452 x5129) (= x3120 x6438) (= x1547 x1960) (= x2942 x2416) (= x7479 x2920) (= x2680 x8153) (= x714 x8340) (= x4688 x2545) (= x6021 x5120) (= x353 x5790)) (not x7294)) x6982)))))))))))
(assert (= (x3391 51607134309459761954548520284799282329936326410793501951915747293203005440) 0))
(assert (x4101 x4407))
(assert (x3760 x5020 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x2010))
(assert (x4057 x1054))
(assert (x3760 x386 256))
(assert (x4101 x5801))
(assert (x4101 x2999))
(assert (x4101 x4683))
(assert (x2496 x7846))
(assert (=> (<= x4927 10000) (= 0 (x3391 x4927))))
(assert (x4101 x7079))
(assert (=> (<= x4949 10000) (= (x3391 x4949) 0)))
(assert (< 10000 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285)))
(assert (x4101 x1409))
(assert (= (x3391 35425322552009646506518338594398286811668114190755561836384294568426616127488) 0))
(assert (x4101 x3635))
(assert (> (x8452 64 x1649 36) 10000))
(assert (x4101 x550))
(assert (=> (>= 10000 x6149) (= 0 (x3391 x6149))))
(assert (x4101 x7353))
(assert (x4101 x7789))
(assert (x8137 x5232))
(assert (x5189 x4525 256))
(assert (= (x3391 (x3114 32 x3565)) (x3114 32 x3565)))
(assert (x4101 x1127))
(assert (= x1042 (x6212 (x8452 x6609 x5827 x1042))))
(assert (= x576 (x6212 (x6207 x2327 x3240 x576 x6659 x4505 x8420))))
(assert (=> (>= 10000 x2634) (= (x3391 x2634) 0)))
(assert (x4101 x2485))
(assert (x2371 (ite (not (= x5380 0)) 1 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4807 5)))
(assert (=> (<= x8388 10000) (= 0 (x3391 x8388))))
(assert (x4101 x1962))
(assert (> (x8452 x954 x3276 x4483) 10000))
(assert (=> (<= x5803 10000) (= 0 (x3391 x5803))))
(assert (= (x3391 (x658 x1404 x6591 x1588 x6117)) (x658 x1404 x6591 x1588 x6117)))
(assert (= x1404 (x4519 (x5018 x1404 x8231 x7521 x8002 x408))))
(assert (x4101 x8049))
(assert (x4101 x5273))
(assert (= (and x7315 (not x2237)) x7994))
(assert (x4101 x6638))
(assert (< (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x6597 x308) x887))
(assert (x4101 x7912))
(assert (= (x3391 (x5018 x3728 x7647 x2836 x4072 x2598)) (x5018 x3728 x7647 x2836 x4072 x2598)))
(assert (x3481 x4149))
(assert (not (x2674 (x8452 64 1 x7411))))
(assert (> (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550) 10000))
(assert (x725 x4783))
(assert (= (x842 (x5018 x8276 x2797 x2069 x4860 x7334)) x4860))
(assert (= (x3391 x4905) (x3391 (+ 2 x4905))))
(assert (x4101 x337))
(assert (x4101 x2409))
(assert (=> (>= 10000 x2871) (= 0 (x3391 x2871))))
(assert (< 10000 (x5018 x2327 x4522 x2439 x7183 x8482)))
(assert (= (x3391 (+ x3383 1)) (x3391 x3383)))
(assert (x4101 x6397))
(assert (not (x2674 (x8452 64 x7797 36))))
(assert (x4101 x2002))
(assert (x4101 x4447))
(assert (x4101 x2137))
(assert (x4101 x593))
(assert (= x163 x441))
(assert (x4101 x788))
(assert (x4101 x5133))
(assert (x4101 x6889))
(assert (= x8174 (or x6560 x6216)))
(assert (= x1064 (or x5885 x8437)))
(assert (= x4807 (x5740 (x8452 64 x4807 4))))
(assert (x4101 x3894))
(assert (=> (<= x7751 10000) (= 0 (x3391 x7751))))
(assert (= (x6212 (x6207 x6601 x1154 x6468 x2260 x2279 x5339)) x6468))
(assert (= (and x437 x317) x4491))
(assert (x3760 x7050 256))
(assert (x4101 x2584))
(assert (= x2327 (x4519 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385))))
(assert (= x6858 (and x5015 x7170)))
(assert (> (x5018 x8066 x5753 x4487 x1987 x5269) 10000))
(assert (x4101 x1280))
(assert (= x1227 (and x3527 x771)))
(assert (x4101 x4997))
(assert (= x1404 (x4519 (x8452 x1404 x549 x1883))))
(assert (> (x8452 64 1 x7411) 10000))
(assert (= (or x5044 x4026) x3496))
(assert (x725 x4723))
(assert (x4101 x6443))
(assert (x4101 x3103))
(assert (x4101 x1785))
(assert (= (x6212 (x5018 x8247 x7491 x7316 x1399 x6343)) x7316))
(assert (x4101 x4898))
(assert (= (x8370 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825)) x3401))
(assert (= x7926 (x8370 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291))))
(assert (= x2232 (x5740 (x8452 64 x2232 100))))
(assert (x4101 x6650))
(assert (x4101 x4043))
(assert (> (x8452 x5456 x7626 x2592) 10000))
(assert (x3481 x4854))
(assert (= (and (not x776) x5256) x2656))
(assert (x4101 x8540))
(assert (x4101 x5716))
(assert (x4101 x5818))
(assert (x3760 x7621 256))
(assert (= (and (not x3824) x5971) x3063))
(assert (= x6655 (x4519 (x5018 x6655 x7778 x3104 x3601 x1789))))
(assert (= (x5740 (x8452 64 x8514 36)) x8514))
(assert (x4101 x4144))
(assert (= (x842 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239)) x1130))
(assert (x4101 x3340))
(assert (= (x6212 (x8452 x6601 x7528 x3162)) x3162))
(assert (x4101 x5065))
(assert (=> (<= x1632 10000) (= 0 (x3391 x1632))))
(assert (x4101 x2720))
(assert (= (x5740 (x3114 32 x8200)) x8200))
(assert (x8137 x5839))
(assert (x4101 x6055))
(assert (=> (>= 10000 x3878) (= (x3391 x3878) 0)))
(assert (= (and (not x7988) x4995) x2457))
(assert (= (or x1598 x203 x2403 x8205 x5259) x8544))
(assert (= (x842 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961)) x5229))
(assert (x725 x5486))
(assert (x4101 x5277))
(assert (not (x2674 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190))))
(assert (=> (>= 10000 x8236) (= (x3391 x8236) 0)))
(assert (not (x2674 (x8452 x7301 x8339 x60))))
(assert (= (and x5114 (not x5715)) x4205))
(assert (x4101 x3267))
(assert (= (x4955 (x5018 x4567 x7844 x3878 x6416 x1409)) x1409))
(assert (= x6655 (x4519 (x6207 x6655 x3754 x1280 x8438 x8159 x1634))))
(assert (= x5326 (x842 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825))))
(assert (x4101 x532))
(assert (x2496 x7166))
(assert (= x2403 (and x7142 (not x406))))
(assert (= (x6212 (x658 x6655 x1562 x2988 x4015)) x2988))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x6601 x7528 x3162)))
(assert (x5391 x8532))
(assert (x4101 x6941))
(assert (= (x3391 (x3114 x3485 x8140)) (x3114 x3485 x8140)))
(assert (x4101 x3520))
(assert (= (and (not x2393) x4971) x2061))
(assert (= 0 (x3391 3963877391197344453575983046348115674221700746820753546331534351508065746944)))
(assert (not (x2674 (x8452 64 x983 6))))
(assert (= (and x1247 (not x7012)) x4628))
(assert (x4101 x4165))
(assert (= (x3391 (x3114 x3728 x1784)) (x3114 x3728 x1784)))
(assert (x4101 x3604))
(assert (= (x8448 0) (x3391 (x8448 0))))
(assert (x2496 x7785))
(assert (x4101 x5075))
(assert (= (x3391 (x658 x7301 x6879 x5406 x821)) (x658 x7301 x6879 x5406 x821)))
(assert (x4101 x6486))
(assert (= (x8370 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551)) x6273))
(assert (not (x2674 (x3114 x3728 x1784))))
(assert (x4101 x1281))
(assert (x4101 x4790))
(assert (x4101 x4538))
(assert (x4101 x4545))
(assert (= (x5740 (x8452 x8066 x6941 x7545)) x6941))
(assert (x25 1000000000 x4112))
(assert (x4101 x7673))
(assert (x4057 x3097))
(assert (= x667 (x6212 (x6207 x8276 x7633 x667 x44 x579 x2604))))
(assert (x4101 x7281))
(assert (=> (>= 10000 x2493) (= 0 (x3391 x2493))))
(assert (= x5456 (x4519 (x5018 x5456 x3051 x6313 x5806 x1348))))
(assert (x4101 x4153))
(assert (=> (>= 10000 x7626) (= 0 (x3391 x7626))))
(assert (x4101 x7289))
(assert (x4101 x4680))
(assert (= x1247 (and x374 x2864)))
(assert (> (x3114 32 x3750) 10000))
(assert (x4057 2))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x2824 2)))
(assert (not (x2674 (x8452 64 x4024 6))))
(assert (= (x6212 (x8452 x8276 x6717 x3740)) x3740))
(assert (= x2634 (x5740 (x658 x2493 x2634 x165 x5303))))
(assert (= (x4519 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832)) x8066))
(assert (=> (>= 10000 x7647) (= (x3391 x7647) 0)))
(assert (x2674 35477284059277649309253622239531857712935939630608236286772267603529442882419))
(assert (= 0 (x3391 1084734224)))
(assert (x4101 x4313))
(assert (x4101 x7423))
(assert (x4101 x2836))
(assert (= x1193 (=> (and (= 0 x1412) (= x8340 x5561) (= x1960 x826) (= x1497 2) (= x4760 x6021) (= x3210 0) (= true x1696) (= x3595 x735) (= x8153 x3365) (= x4445 x4688) (= x2416 x1648) (= x7632 x1618) (= x40 x2920) (= x2452 x1395) (= x2571 x353) (= x5561 (x639 255 x4171)) (= false x7852) (= x6438 x1196) (= x6580 x8014)) x4210)))
(assert (=> (>= 10000 x2279) (= (x3391 x2279) 0)))
(assert (x725 x7762))
(assert (= x8362 (and x2963 (not x3998))))
(assert (= (and x2569 (not x4473)) x4306))
(assert (= x6601 (x4519 (x5018 x6601 x1538 x2378 x3456 x2871))))
(assert (= (x4519 (x5018 x8276 x2797 x2069 x4860 x7334)) x8276))
(assert (x4101 x5593))
(assert (= x7976 (x5740 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263))))
(assert (x4101 x6430))
(assert (= x618 (=> (and (or (and (= 128 x704) x2140) (and (and (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5020) x5636) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x5636) (= x704 (+ x5636 128)) (<= 1 x5636) (= (x5665 (+ x1467 63)) x5020)) (not x2140))) (= (= 0 x1467) x2140)) x3225)))
(assert (= 32 (x4519 (x3114 32 103))))
(assert (x25 32 (ite (not (= x6118 0)) 1 0)))
(assert (= (x5740 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865)) x1533))
(assert (x4101 x226))
(assert (= 11 (x6212 (x8452 64 x110 11))))
(assert (=> (>= 10000 x952) (= (x3391 x952) 0)))
(assert (x4101 x1087))
(assert (=> (>= 10000 x1668) (= 0 (x3391 x1668))))
(assert (= x7871 (x4955 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819))))
(assert (x4101 x7165))
(assert (= (x842 (x6207 x2493 x4433 x971 x4380 x3792 x6585)) x4380))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639773))
(assert (x4101 x6297))
(assert (x4101 x2398))
(assert (x725 x386))
(assert (x4101 x7966))
(assert (= x4900 (and x7776 x1868)))
(assert (x4101 x3657))
(assert (=> (<= x7663 10000) (= 0 (x3391 x7663))))
(assert (x4101 x7078))
(assert (= x2239 (and x7827 x3618)))
(assert (= x7396 (or x411 x614 x3046 x7030 x766 x7678 x3701 x3296 x6545 x5298 x7052)))
(assert (x4101 x4928))
(assert (x4101 x6720))
(assert (= (and x2193 x8012) x3040))
(assert (x4101 x127))
(assert (x5391 x5232))
(assert (x4101 x4109))
(assert (x4101 x3435))
(assert (x4101 x5480))
(assert (x4101 x670))
(assert (=> (<= x1566 10000) (= (x3391 x1566) 0)))
(assert (=> (<= x5241 10000) (= 0 (x3391 x5241))))
(assert (x3481 x7087))
(assert (x4101 x2414))
(assert (x4101 x5070))
(assert (= x4482 x6997))
(assert (x4101 x5924))
(assert (= (=> (and (= (= x3967 0) x3575) (or x3575 (not x3575))) x4957) x7260))
(assert (x4101 x7400))
(assert (x4101 x920))
(assert (x4101 x6415))
(assert (= (and x1619 x2666) x7935))
(assert (x4101 x60))
(assert (x4101 x3162))
(assert (x4101 x8100))
(assert (x2674 1313998243))
(assert (=> (<= x8036 10000) (= 0 (x3391 x8036))))
(assert (x4101 x655))
(assert (x4101 x6977))
(assert (x4101 x2199))
(assert (x4101 x3808))
(assert (= x646 (and x6325 x2358)))
(assert (x4101 x7215))
(assert (= x7528 (x5740 (x8452 x6601 x7528 x3162))))
(assert (x4101 x6072))
(assert (=> (<= x6018 10000) (= 0 (x3391 x6018))))
(assert (x2496 x26))
(assert (x4101 x1662))
(assert (= (x3114 x8247 x8500) (x3391 (x3114 x8247 x8500))))
(assert (x4101 x6676))
(assert (x2674 3313512704))
(assert (= (x4519 (x6207 x5857 x681 x1632 x5447 x2128 x1530)) x5857))
(assert (x4101 x1778))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x8247 x1044 x6011)))
(assert (x4101 x4949))
(assert (= x5344 (and x5170 (not x6943))))
(assert (=> (>= 10000 x3612) (= (x3391 x3612) 0)))
(assert (= x2800 (and x4710 x6457)))
(assert (= (and x6809 (not x8430)) x3771))
(assert (x4101 x3742))
(assert (= (and (not x7387) x5677) x6250))
(assert (> (x5018 x5857 x8219 x4949 x2419 x5524) 10000))
(assert (= (x3391 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733)) (x4851 x6256 x8388 x5274 x302 x3444 x334 x733)))
(assert (= (x8370 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814)) x1462))
(assert (x4101 x1504))
(assert (= (and (not x378) x2195) x6947))
(assert (x4101 x1728))
(assert (= x2604 (x8370 (x6207 x8276 x7633 x667 x44 x579 x2604))))
(assert (=> (<= x3456 10000) (= 0 (x3391 x3456))))
(assert (= (and x4103 x3988) x5988))
(assert (x4101 x6772))
(assert (x4101 x3366))
(assert (= x5984 (and x8042 x2819)))
(assert (x4101 x3600))
(assert (= (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345) (x3391 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345))))
(assert (x4101 x1943))
(assert (= (or (and x6257 x5063) (and (not x6835) x8235)) x6986))
(assert (x4101 x1408))
(assert (= (x6212 (x8452 64 x6260 7)) 7))
(assert (=> (<= x2575 10000) (= 0 (x3391 x2575))))
(assert (=> (<= x6461 10000) (= (x3391 x6461) 0)))
(assert (x4101 x7739))
(assert (x4101 x2382))
(assert (x725 x2236))
(assert (x2674 3628442803))
(assert (x4101 x8183))
(assert (x4101 x29))
(assert (x4101 x4523))
(assert (= x2950 (or x4551 x5384)))
(assert (= x2797 (x5740 (x5018 x8276 x2797 x2069 x4860 x7334))))
(assert (=> (<= x2598 10000) (= 0 (x3391 x2598))))
(assert (=> (>= 10000 x3241) (= 0 (x3391 x3241))))
(assert (x4101 x3438))
(assert (= (x4955 (x6207 x8276 x7633 x667 x44 x579 x2604)) x579))
(assert (= (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639773) 0))
(assert (x4101 x5176))
(assert (x4101 x3177))
(assert (=> (>= 10000 x8207) (= (x3391 x8207) 0)))
(assert (x4101 x7921))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x4567 x2927 x1457)))
(assert (x4101 x4778))
(assert (= (x6212 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550)) x8122))
(assert (= x6014 (x842 (x5018 x954 x8198 x1612 x6014 x4062))))
(assert (x4101 x6473))
(assert (=> (<= x8016 10000) (= (x3391 x8016) 0)))
(assert (x4101 x5287))
(assert (x4101 x3892))
(assert (not (x2674 (x8452 64 x4417 6))))
(assert (= x5721 (and x1984 x6726)))
(assert (= (and x4502 x1482) x1697))
(assert (x725 x8135))
(assert (x4101 x3668))
(assert (x4101 x7886))
(assert (x4101 x991))
(assert (x4101 x7665))
(assert (x4101 x1674))
(assert (x4101 x6940))
(assert (= (=> (= x3988 (> x8267 0)) (and (=> (and (and (= x1433 x3539) (= x2799 x7420) (= x7699 x1224) (= x7442 x86) (= x5292 x7510) (= x6344 x563)) x3988) x8228) (=> (and (not x3988) (and (= true x691) (= x1704 4) (= false x5270))) x7920))) x8112))
(assert (x4101 x5204))
(assert (= x5638 (x5740 (x8452 x6655 x5638 x3262))))
(assert (x4101 x6154))
(assert (= x2073 (x6140 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (x4101 x945))
(assert (x4101 x6629))
(assert (= (and x2057 (not x1453)) x3189))
(assert (x3760 x6920 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x6209 x6947) x3478))
(assert (x4101 x1174))
(assert (x4101 x1684))
(assert (= (x6212 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707)) x5440))
(assert (x4101 x5255))
(assert (x4101 x5825))
(assert (= (and x6726 (not x1984)) x2600))
(assert (x4101 x1235))
(assert (= (x3391 (x6207 x8066 x1862 x2624 x99 x6072 x1363)) (x6207 x8066 x1862 x2624 x99 x6072 x1363)))
(assert (x4101 x2954))
(assert (= (or x905 x4745) x7226))
(assert (x4101 x6171))
(assert (=> (>= 10000 x1348) (= (x3391 x1348) 0)))
(assert (x4101 x5829))
(assert (x4101 x5720))
(assert (x4101 x207))
(assert (> (x8452 64 x2041 36) 10000))
(assert (=> (<= x1197 10000) (= 0 (x3391 x1197))))
(assert (x4101 x4288))
(assert (= x6555 (x5740 (x5018 x6609 x6555 x8300 x3110 x7629))))
(assert (x4101 x7822))
(assert (x4101 x6416))
(assert (= x3829 (=> (= x1157 (+ x1744 x1726)) x3372)))
(assert (x4101 x5896))
(assert (= (and x2350 x8415) x7437))
(assert (= (x5740 (x3114 x954 x2658)) x2658))
(assert (= x5296 (x5740 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803))))
(assert (x8137 x1816))
(assert (= 0 (x3391 59118985759084958080972419199848406897631161684926069324597705158744233476096)))
(assert (x4101 x408))
(assert (x4101 x992))
(assert (x4101 x553))
(assert (=> (>= 10000 x2797) (= (x3391 x2797) 0)))
(assert (x4101 x2279))
(assert (=> (>= 10000 x2327) (= (x3391 x2327) 0)))
(assert (= (x842 (x658 x6655 x1562 x2988 x4015)) x4015))
(assert (x4101 x4032))
(assert (x4101 x2814))
(assert (> (x658 x6609 x5108 x6949 x5158) 10000))
(assert (x4101 x3201))
(assert (x4101 x5324))
(assert (< (x8452 64 x4024 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x2734))
(assert (< (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x4498))
(assert (x4101 x273))
(assert (= (x3391 (x3114 x1404 x3702)) (x3114 x1404 x3702)))
(assert (x4101 x5116))
(assert (x725 x331))
(assert (x4101 x4004))
(assert (=> (>= 10000 x1012) (= (x3391 x1012) 0)))
(assert (x2371 x4019))
(assert (x4101 x481))
(assert (x4101 x1622))
(assert (x4101 x6116))
(assert (> (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961) 10000))
(assert (x3760 x2839 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x545 10000) (= (x3391 x545) 0)))
(assert (x4057 x5052))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x954 x2088 x1088 x7472 x5281 x2463)))
(assert (= 0 (x3391 89332125780766104441357105940599211734484755930370930871569612501041822040064)))
(assert (x4101 x3786))
(assert (= (x4519 (x5018 x3485 x4823 x5174 x8145 x7574)) x3485))
(assert (< (x6207 x6655 x3754 x1280 x8438 x8159 x1634) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x6212 (x8452 64 x6137 36)) 36))
(assert (x4101 x3418))
(assert (= 3 (x6212 (x8452 64 x6260 3))))
(assert (x4101 x5541))
(assert (= 64 (x4519 (x8452 64 x4521 36))))
(assert (= (x4519 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733)) x6256))
(assert (= x3107 (and x2338 x3899)))
(assert (=> (>= 10000 x5410) (= (x3391 x5410) 0)))
(assert (x2371 x4159))
(assert (= (x3391 (+ 1 x4919)) (x3391 x4919)))
(assert (= (x6212 (x8452 64 x3252 36)) 36))
(assert (= x3358 (and x1966 x1611)))
(assert (=> (<= x7816 10000) (= 0 (x3391 x7816))))
(assert (= x2923 (and x5873 (not x2429))))
(assert (= x5551 (x4117 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551))))
(assert (x4057 (+ x4726 31)))
(assert (x4101 x3544))
(assert (x4101 x3530))
(assert (x4101 x1176))
(assert (x4101 x7096))
(assert (= (and x4030 x1965) x555))
(assert (= x7748 (or x2436 x1665)))
(assert (x4101 x2081))
(assert (x4101 x7647))
(assert (x4101 x5131))
(assert (x4101 x7473))
(assert (= (=> (= (= 0 x3076) x8027) (and (=> (and (and (= x1730 x7523) (= x7191 x6116) (= x4874 x5743) (= x2265 x935)) (not x8027)) x124) (=> (and x8027 (and (= x7886 2) (= x1340 x7614) (= x1920 true) (= x7573 0) (= x4112 x6049) (= false x7924) (= x8357 x6141) (= x3545 x4512))) x2843))) x1509))
(assert (not (x2674 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751))))
(assert (x4101 x1930))
(assert (= (x3391 (x8452 x3485 x5701 x2008)) (x8452 x3485 x5701 x2008)))
(assert (x4101 x6832))
(assert (x4101 x4826))
(assert (= x5751 (and x7891 x2184)))
(assert (x4101 x1948))
(assert (= (x4955 (x5018 x2327 x4522 x2439 x7183 x8482)) x8482))
(assert (x4101 x3707))
(assert (not (x2674 (x8452 x3728 x6829 x267))))
(assert (x5391 x3424))
(assert (x4101 x7954))
(assert (= (x3391 486791245) 0))
(assert (x4101 x1818))
(assert (= x2713 (=> (and (= 0 x7573) (= x6141 x8357) (= x7614 36) (= x4112 x6049) (= x3004 true) (= x2422 false) (= x3545 x4512) (= x4495 2)) x2843)))
(assert (x2496 x7725))
(assert (=> (<= x7889 10000) (= 0 (x3391 x7889))))
(assert (= x7301 (x4519 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961))))
(assert (x4101 x5611))
(assert (= x549 (x5740 (x8452 x1404 x549 x1883))))
(assert (=> (>= 10000 x8500) (= 0 (x3391 x8500))))
(assert (x5391 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8137 x4261))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x6760 (ite (>= 32 x8247) x7566 (ite (>= 64 x8247) x4627 (ite (>= 96 x8247) x7341 (ite (>= 128 x8247) x4092 (ite (>= 160 x8247) x6845 (ite (>= 192 x8247) x692 x7767)))))))))
(assert (x4101 x469))
(assert (=> (<= x1263 10000) (= 0 (x3391 x1263))))
(assert (x4101 x7820))
(assert (x8137 x3424))
(assert (=> (>= 10000 x3401) (= (x3391 x3401) 0)))
(assert (x4101 x7216))
(assert (x4101 x557))
(assert (< (x6207 x8105 x941 x8457 x6689 x1263 x3972) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x725 x6920))
(assert (= x5851 (or (and x3526 x8326) x559 x6492 x5520 (and x776 x5256) x2049 x2063)))
(assert (= (x8370 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300)) x7569))
(assert (x5391 128))
(assert (x4101 x1412))
(assert (x4101 x8353))
(assert (x4101 x1933))
(assert (= (x6212 (x6207 x6609 x665 x2145 x377 x444 x8061)) x2145))
(assert (= (and x7661 x4161) x5114))
(assert (x4101 x8287))
(assert (x4101 x3302))
(assert (=> (>= 10000 x5210) (= (x3391 x5210) 0)))
(assert (< (x8452 64 x1544 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x5740 (x658 x6256 x7745 x8380 x6390)) x7745))
(assert (x4101 x5803))
(assert (x2674 35477284059277649309253622239531857712935939406416048698883813673932370764389))
(assert (= 64 (x4519 (x8452 64 x723 11))))
(assert (x4101 x7089))
(assert (= x3252 (x5740 (x8452 64 x3252 36))))
(assert (=> (<= x1194 10000) (= (x3391 x1194) 0)))
(assert (x725 x4850))
(assert (= x7019 (and x7733 (not x6505))))
(assert (= (or (and x6903 (not x4293)) x3785) x6927))
(assert (=> (<= x8420 10000) (= (x3391 x8420) 0)))
(assert (x4101 x6895))
(assert (x4101 x1096))
(assert (x725 x1653))
(assert (= x3665 (x4117 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665))))
(assert (< (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x7797) (= 0 (x3391 x7797))))
(assert (x4101 x357))
(assert (= (and (not x3988) x4103) x291))
(assert (=> (<= x8404 10000) (= (x3391 x8404) 0)))
(assert (x4101 x3759))
(assert (= x2350 (or (and (not x5973) x6300) x3614)))
(assert (x4101 x365))
(assert (x2496 x5253))
(assert (not (x2674 (x8452 64 x6760 (ite (>= 32 x8247) x7566 (ite (<= x8247 64) x4627 (ite (<= x8247 96) x7341 (ite (>= 128 x8247) x4092 (ite (>= 160 x8247) x6845 (ite (>= 192 x8247) x692 x7767))))))))))
(assert (< (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x3665))
(assert (x4101 x2797))
(assert (x4101 x1151))
(assert (= x2961 (=> (and (or (and (= x6291 x4620) x3509) (and (not x3509) (and (= x6190 (x947 320)) (= (x3989 x3299) x2079) (= (x3989 x6657) x4424) (= x5777 (x6207 x4567 x5929 x4238 x5321 x5266 x4424)) (= (x947 224) x6374) (= (x658 x4567 x8100 x1458 x7760) x3101) (= x655 (x5665 (+ x3299 96))) (= x4508 (x5665 (+ x3299 128))) (= (x5018 x2327 x4522 x2439 x7183 x8482) x2744) (= (x5665 (+ 64 x3299)) x505) (= (x3114 x2327 x7905) x839) (= x8592 (x5665 (+ x4567 x3299))) (= (x5665 (+ 160 x3299)) x5759) (= x2560 (x947 256)) (= x1130 (x3989 x2618)) (= x4505 (x947 256)) (= x2927 (x3989 x3299)) (= (ite (= (ite (= 0 x4567) x295 (ite (>= 32 x4567) x3697 (ite (>= 64 x4567) x3173 (ite (<= x4567 96) x3101 (ite (>= 128 x4567) x5886 (ite (>= 160 x4567) x5777 (ite (>= 192 x4567) x2502 x5591))))))) (ite (= x2327 0) x2532 (ite (>= 32 x2327) x839 (ite (>= 64 x2327) x1781 (ite (<= x2327 96) x3522 (ite (>= 128 x2327) x2744 (ite (<= x2327 160) x5110 (ite (<= x2327 192) x1686 x5643)))))))) 1 0) x6291) (= x3711 (x5665 (+ x3299 64))) (= (x5665 (+ x3299 32)) x8508) (= x3697 (x3114 x4567 x2079)) (= x869 (x947 320)) (= x576 (x947 192)) (= (x3989 x3299) x2615) (= x5326 (x3989 x3067)) (= (x947 192) x4778) (= x3842 (x5665 (+ x3299 192))) (= (x3989 x655) x1899) (= x6808 (x947 288)) (= x1458 (x3989 x1550)) (= (x947 256) x4719) (= (x947 160) x3217) (= x2439 (x947 192)) (= (x8452 x4567 x2927 x1457) x3173) (= (x947 128) x2327) (= (x947 224) x4915) (= (x947 160) x7905) (<= x4567 224) (= (x3989 x3197) x1457) (= x1592 (x947 224)) (= (x3989 x3299) x8100) (= (x5665 (+ x3299 64)) x6168) (= x4097 (x5665 (+ x3299 32))) (= x2618 (x5665 (+ x3299 64))) (= (x5665 (+ x3299 128)) x6657) (= x3240 (x947 160)) (= x3197 (x5665 (+ x3299 32))) (= (x947 192) x5236) (= (x947 224) x7183) (= (x5665 (+ x3299 160)) x7102) (= (x947 160) x708) (= x4238 (x3989 x387)) (= (x3989 x3299) x7079) (= x761 (x3989 x1378)) (= x2366 (x3989 x7102)) (= (x5665 (+ 128 x3299)) x2539) (= x7844 (x3989 x3299)) (<= x2327 224) (= (x947 192) x5564) (= x1936 (x5665 (+ 96 x3299))) (= x2294 (x947 160)) (= x5886 (x5018 x4567 x7844 x3878 x6416 x1409)) (= x1409 (x3989 x6614)) (= (x658 x2327 x3217 x5002 x4915) x3522) (= x8482 (x947 256)) (= (x8452 x2327 x708 x4778) x1781) (= x5929 (x3989 x3299)) (= x295 (x8448 0)) (= (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825) x2502) (= (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190) x1686) (= (x3989 x7679) x2685) (= x2083 (x947 160)) (= x4522 (x947 160)) (= (x8448 0) x2532) (= (x3989 x5759) x5825) (= (x947 224) x6659) (= (x5665 (+ 64 x3299)) x3067) (= (x3989 x2539) x3401) (= x3878 (x3989 x8508)) (= (x5665 (+ 32 x3299)) x1550) (= x7679 (x5665 (+ x3299 32))) (= x1239 (x3989 x3842)) (= (x3989 x4508) x8444) (= (x3989 x4097) x1945) (= x6416 (x3989 x3711)) (= (x947 288) x8420) (= (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239) x5591) (= x5321 (x3989 x505)) (= x385 (x947 352)) (= (x3989 x1936) x5266) (= (x947 192) x5002) (= (x5665 (+ x3299 96)) x1378) (= x6722 (x947 288)) (= (x5665 (+ x3299 32)) x387) (= x7760 (x3989 x6168)) (= (x6207 x2327 x3240 x576 x6659 x4505 x8420) x5110) (= (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385) x5643) (= (x5665 (+ x3299 96)) x6614)))) (= x3509 (= 0 x4620))) x1328)))
(assert (x4101 x3380))
(assert (= x1345 (x4955 (x6207 x3728 x6176 x1012 x365 x1345 x6842))))
(assert (< 10000 (x3114 32 x8200)))
(assert (=> (<= x2824 10000) (= 0 (x3391 x2824))))
(assert (x4101 x7479))
(assert (= x686 (and x5583 (not x4431))))
(assert (x3481 x6107))
(assert (> (x3114 x2493 x4089) 10000))
(assert (x4101 x3387))
(assert (x4101 x8188))
(assert (x4101 x1892))
(assert (> (x8452 64 x7904 36) 10000))
(assert (x4101 x6783))
(assert (x4101 x2949))
(assert (= x4245 (and (not x4994) x8062)))
(assert (= (and (not x3810) x3307) x556))
(assert (x4101 x6123))
(assert (x4101 x6785))
(assert (x4101 x1263))
(assert (x5391 x1314))
(assert (x8137 x4171))
(assert (x4101 x3585))
(assert (= x7410 (and x63 x3501)))
(assert (> (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665) 10000))
(assert (< 10000 (x8452 x6655 x5638 x3262)))
(assert (x4101 x5921))
(assert (= (x6212 (x658 x2493 x2634 x165 x5303)) x165))
(assert (x4101 x4743))
(assert (x4101 x390))
(assert (= (and x1122 (not x2451)) x4995))
(assert (x4101 x7708))
(assert (= (x3391 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263)) (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263)))
(assert (x725 x5891))
(assert (x4101 x2776))
(assert (x3760 x3535 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x1753))
(assert (x4101 x1816))
(assert (x4101 x6018))
(assert (x4101 x4584))
(assert (x725 x4171))
(assert (x4101 x7318))
(assert (x4101 x4483))
(assert (= (x3391 (x8452 64 x723 11)) (x8452 64 x723 11)))
(assert (x4101 x6563))
(assert (= (x3391 (x8452 64 x1459 100)) (x8452 64 x1459 100)))
(assert (=> (<= x7569 10000) (= 0 (x3391 x7569))))
(assert (= x8114 (or (and (not x5504) x1831) (and x6625 (not x1055)) (and x7970 (not x7361)))))
(assert (= (x5018 x8105 x3604 x1200 x7816 x7663) (x3391 (x5018 x8105 x3604 x1200 x7816 x7663))))
(assert (x5391 x573))
(assert (=> (<= x3422 10000) (= (x3391 x3422) 0)))
(assert (x4101 x4888))
(assert (= x7483 (x4519 (x5018 x7483 x7258 x567 x3375 x3585))))
(assert (= (=> (and (= x3574 x6141) (= x5211 x1019) (= x472 x4112) (= x8037 0) (= x1019 (x639 255 x793)) (= 2 x197) (= x3545 x8565) (= x7599 x4001)) x7193) x5706))
(assert (x4101 x4990))
(assert (x4101 x6137))
(assert (=> (>= 10000 x5326) (= 0 (x3391 x5326))))
(assert (x3760 x2630 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x25 32 x4933))
(assert (= x2506 (or x2185 x3079)))
(assert (x4101 x5119))
(assert (=> (<= x110 10000) (= (x3391 x110) 0)))
(assert (= (and x3100 x1702) x6225))
(assert (x4101 x6321))
(assert (x4101 x5313))
(assert (x3481 x1865))
(assert (x4101 x4200))
(assert (=> (<= x2302 10000) (= (x3391 x2302) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x7797 36)))
(assert (x4101 x6263))
(assert (x725 x2787))
(assert (x4101 x7521))
(assert (= (x6207 x8105 x941 x8457 x6689 x1263 x3972) (x3391 (x6207 x8105 x941 x8457 x6689 x1263 x3972))))
(assert (=> (>= 10000 x8282) (= 0 (x3391 x8282))))
(assert (x4101 x3164))
(assert (= x6655 (x4519 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717))))
(assert (x4101 x3370))
(assert (< 10000 (x6207 x8066 x1862 x2624 x99 x6072 x1363)))
(assert (= (x5740 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814)) x4804))
(assert (= (x6212 (x8452 x5456 x7626 x2592)) x2592))
(assert (x4101 x8592))
(assert (= x6609 (x4519 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819))))
(assert (x4101 x2202))
(assert (x4101 x4192))
(assert (= (=> (and (= x1423 x2831) (= x1763 x1222) (= x8136 x2323) (= x1145 x8417) (= x6223 x612) (= x121 x4864) (= x3658 x300) (= x6996 x5681) (= x5604 x1677) (= x7825 x867) (= x3928 x4952) (= x3817 x3132) (= x7452 x2846)) x6748) x6541))
(assert (x4101 x3371))
(assert (x725 255))
(assert (x5391 x372))
(assert (= (and x3990 (not x255)) x2185))
(assert (x4101 x6021))
(assert (x25 32 x4159))
(assert (= (x4519 (x3114 32 x3750)) 32))
(assert (x4101 x2289))
(assert (x4101 x5586))
(assert (= x287 (x8370 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707))))
(assert (x4101 x187))
(assert (= x7255 (x4955 (x6207 x8236 x5618 x2344 x5489 x7255 x1096))))
(assert (x3760 x2571 2))
(assert (x4101 x265))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x723 11)))
(assert (x8137 x6321))
(assert (=> (>= 10000 x983) (= 0 (x3391 x983))))
(assert (=> (>= 10000 x6463) (= 0 (x3391 x6463))))
(assert (= (x6212 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613)) x1657))
(assert (x4101 x567))
(assert (=> (<= x1374 10000) (= 0 (x3391 x1374))))
(assert (x4101 x5492))
(assert (= x3990 (or (and x3367 (not x2750)) x8322)))
(assert (= x2434 (and x2447 x1983)))
(assert (x4101 x2732))
(assert (x4101 x5145))
(assert (< (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x2267))
(assert (=> (>= 10000 x8316) (= (x3391 x8316) 0)))
(assert (=> (<= x6251 10000) (= (x3391 x6251) 0)))
(assert (=> (<= x2649 10000) (= (x3391 x2649) 0)))
(assert (=> (>= 10000 x941) (= 0 (x3391 x941))))
(assert (= x1211 (and x8362 x3449)))
(assert (x4101 x5681))
(assert (x5391 x8180))
(assert (x4101 x3744))
(assert (= (and x8314 (not x4375)) x3307))
(assert (= (x658 x5857 x2673 x2267 x6794) (x3391 (x658 x5857 x2673 x2267 x6794))))
(assert (< (x8452 64 x2677 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x6152))
(assert (=> (<= x579 10000) (= 0 (x3391 x579))))
(assert (= (x4955 (x5018 x8066 x5753 x4487 x1987 x5269)) x5269))
(assert (= (x842 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708)) x1493))
(assert (x2496 x5317))
(assert (x4101 x3262))
(assert (not (x2674 (x8452 64 x4803 7))))
(assert (x4101 x2781))
(assert (x4101 x7132))
(assert (= x7629 (x4955 (x5018 x6609 x6555 x8300 x3110 x7629))))
(assert (= (and (not x771) x3527) x1532))
(assert (=> (<= x2495 10000) (= 0 (x3391 x2495))))
(assert (x4101 x1530))
(assert (x4101 x1239))
(assert (x4101 x2060))
(assert (= (x3391 (x658 x2327 x3217 x5002 x4915)) (x658 x2327 x3217 x5002 x4915)))
(assert (x4101 x3964))
(assert (x4101 x4780))
(assert (x4101 x3421))
(assert (= x7546 (and (not x2978) x6007)))
(assert (x4101 x6141))
(assert (x4101 x4699))
(assert (x4101 x7866))
(assert (= (and x5471 (not x6147)) x4102))
(assert (x4101 x6344))
(assert (x8137 x8429))
(assert (x4101 x5426))
(assert (x4101 x7790))
(assert (not (x2674 (x8452 64 x212 11))))
(assert (= (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665) (x3391 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665))))
(assert (not (x2674 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550))))
(assert (x4101 x8156))
(assert (x4101 x6252))
(assert (= (x842 (x6207 x3728 x6176 x1012 x365 x1345 x6842)) x365))
(assert (= (x5740 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) x585))
(assert (x4101 x6626))
(assert (= (x6212 (x8452 64 x1308 36)) 36))
(assert (x4101 x112))
(assert (x4101 x2908))
(assert (x4101 x8352))
(assert (= (x5740 (x5018 x6601 x1538 x2378 x3456 x2871)) x1538))
(assert (= (x842 (x658 x1404 x6591 x1588 x6117)) x6117))
(assert (= x3785 (and x6903 x4293)))
(assert (x4101 x6864))
(assert (x4101 x7939))
(assert (= 6 (x6212 (x8452 64 x983 6))))
(assert (< 10000 (x3114 x3485 x8140)))
(assert (=> (>= 10000 x3117) (= (x3391 x3117) 0)))
(assert (= x8207 (x6212 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153))))
(assert (x4101 x6427))
(assert (x4101 x7940))
(assert (= x6153 (x6140 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153))))
(assert (= (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803) (x3391 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803))))
(assert (x725 x7874))
(assert (= x5682 (and x4370 (not x1486))))
(assert (x2496 x1340))
(assert (x3760 x4114 256))
(assert (not (x2674 (x8452 64 x1526 10))))
(assert (=> (<= x3995 10000) (= 0 (x3391 x3995))))
(assert (not (x2674 (x8452 64 x8494 6))))
(assert (< 10000 (x658 x954 x8553 x4050 x8396)))
(assert (x4101 x7704))
(assert (x4101 x3356))
(assert (x4101 x3985))
(assert (x4101 x8543))
(assert (= (and x7878 x5221) x3195))
(assert (= (x6212 (x658 x8066 x7449 x526 x4927)) x526))
(assert (=> (<= x4483 10000) (= (x3391 x4483) 0)))
(assert (< 10000 (x8452 64 x4807 4)))
(assert (=> (<= x2123 10000) (= (x3391 x2123) 0)))
(assert (= x22 (and x5455 x8374)))
(assert (= (x5740 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239)) x7079))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x6260 3)))
(assert (x4101 x2665))
(assert (x4101 x6886))
(assert (x4101 x7841))
(assert (x2674 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (x4101 x3123))
(assert (x4101 x6502))
(assert (= (x8452 64 1 x2328) (x3391 (x8452 64 1 x2328))))
(assert (x4101 x1516))
(assert (= (x4955 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817)) x1430))
(assert (x4101 x4021))
(assert (x4101 x2581))
(assert (= (x842 (x658 x7483 x3123 x2877 x670)) x670))
(assert (not (x2674 (x8452 x8276 x6717 x3740))))
(assert (not (x2674 (x5018 x1404 x8231 x7521 x8002 x408))))
(assert (x8137 x7621))
(assert (= (x6212 (x8452 x1404 x549 x1883)) x1883))
(assert (x4101 x1692))
(assert (= 6 (x6212 (x8452 64 x6515 6))))
(assert (x4101 x7199))
(assert (= (x8370 (x6207 x954 x2088 x1088 x7472 x5281 x2463)) x2463))
(assert (< (x8452 64 x8514 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x8157))
(assert (> (x8452 64 x5625 7) 10000))
(assert (x4101 x5067))
(assert (x4910 x8532))
(assert (x4101 x4662))
(assert (x4101 x8166))
(assert (=> (<= x6160 10000) (= (x3391 x6160) 0)))
(assert (= x6949 (x6212 (x658 x6609 x5108 x6949 x5158))))
(assert (x4101 x3426))
(assert (x4101 x92))
(assert (> (x6207 x3485 x136 x3977 x352 x6346 x7911) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707)))
(assert (= (and (not x2364) x3172) x3780))
(assert (=> (>= 10000 x2836) (= 0 (x3391 x2836))))
(assert (x4101 x1677))
(assert (x4101 x5707))
(assert (x3760 x208 256))
(assert (x4101 x1629))
(assert (not (x2674 (x6207 x8247 x2495 x8394 x2135 x4427 x5325))))
(assert (x4101 x4731))
(assert (= x2778 (and x8074 x6060)))
(assert (=> (<= x385 10000) (= (x3391 x385) 0)))
(assert (= (and x6968 (not x7395)) x8603))
(assert (not (x2674 (x8452 64 x3712 (ite (>= 32 x3728) x4071 (ite (<= x3728 64) x6751 (ite (<= x3728 96) x8471 (ite (>= 128 x3728) x5582 (ite (>= 160 x3728) x7240 (ite (<= x3728 192) x5937 x894))))))))))
(assert (=> (<= x5281 10000) (= 0 (x3391 x5281))))
(assert (x4101 x311))
(assert (= (and (not x2566) x2667) x3147))
(assert (x3760 x2110 128))
(assert (x4101 x428))
(assert (=> (>= 10000 x3604) (= (x3391 x3604) 0)))
(assert (x2674 18446744073709551615))
(assert (= (x4519 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) x954))
(assert (= x441 x1910))
(assert (= x7832 (x6140 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832))))
(assert (= x7675 (and (not x52) x6618)))
(assert (=> (<= x8231 10000) (= (x3391 x8231) 0)))
(assert (x725 x5445))
(assert (= (and (not x6854) x1790) x4832))
(assert (= x3908 x4012))
(assert (x4101 x1553))
(assert (= (and x1284 (not x1220)) x5170))
(assert (= (x6207 x1404 x1434 x7783 x2653 x69 x8128) (x3391 (x6207 x1404 x1434 x7783 x2653 x69 x8128))))
(assert (= (x3391 (x658 x4567 x8100 x1458 x7760)) (x658 x4567 x8100 x1458 x7760)))
(assert (= (and x3316 x5647) x4551))
(assert (= x6946 (x5740 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717))))
(assert (x4101 x7507))
(assert (x4101 x1132))
(assert (= x7167 (x8370 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708))))
(assert (x4101 x4031))
(assert (x4101 x3309))
(assert (x4057 x2525))
(assert (=> (>= 10000 x3759) (= 0 (x3391 x3759))))
(assert (x4101 x1191))
(assert (x4101 x2942))
(assert (x4101 x377))
(assert (x4101 x197))
(assert (= (x6212 (x8452 64 x4447 (ite (>= 32 x8276) x1918 (ite (>= 64 x8276) x2640 (ite (>= 96 x8276) x3301 (ite (>= 128 x8276) x7339 (ite (<= x8276 160) x4113 (ite (<= x8276 192) x933 x7974)))))))) (ite (<= x8276 32) x1918 (ite (>= 64 x8276) x2640 (ite (<= x8276 96) x3301 (ite (>= 128 x8276) x7339 (ite (>= 160 x8276) x4113 (ite (<= x8276 192) x933 x7974))))))))
(assert (x4101 x2583))
(assert (x4101 x4236))
(assert (= (x5740 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613)) x1374))
(assert (x725 x6775))
(assert (= (x658 x6601 x8352 x7125 x7289) (x3391 (x658 x6601 x8352 x7125 x7289))))
(assert (= x4745 (and x4099 x1211)))
(assert (= x3840 (x842 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336))))
(assert (x5528 x2482))
(assert (x4101 x6112))
(assert (= (x5740 (x8452 64 x983 6)) x983))
(assert (= (or x5538 x291) x4026))
(assert (= 0 (x3391 106705613605932439001713296114446454776331749937047859905631657259250407702528)))
(assert (= x8380 (x6212 (x658 x6256 x7745 x8380 x6390))))
(assert (x725 x8246))
(assert (x4101 x254))
(assert (=> (<= x1732 10000) (= (x3391 x1732) 0)))
(assert (=> (<= x7820 10000) (= (x3391 x7820) 0)))
(assert (x4101 x7783))
(assert (x4101 x2848))
(assert (x5391 x1816))
(assert (= (x6207 x954 x2088 x1088 x7472 x5281 x2463) (x3391 (x6207 x954 x2088 x1088 x7472 x5281 x2463))))
(assert (= x481 (x5740 (x6207 x7301 x481 x345 x5672 x4986 x5616))))
(assert (= (or x6108 x3736) x3273))
(assert (x4101 x491))
(assert (= (or x1074 x7487 x455 x1992 x7427) x5285))
(assert (> (x8452 64 x6260 3) 10000))
(assert (=> (<= x7255 10000) (= 0 (x3391 x7255))))
(assert (x2496 x7599))
(assert (x4101 x3840))
(assert (x4101 x4311))
(assert (x4101 x249))
(assert (= (x4519 (x6207 x8105 x941 x8457 x6689 x1263 x3972)) x8105))
(assert (= x1489 (or x8056 x7117 x7305 x6594)))
(assert (=> (<= x8396 10000) (= (x3391 x8396) 0)))
(assert (= (x5740 (x8452 64 x4521 36)) x4521))
(assert (x4101 x2875))
(assert (< 10000 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832)))
(assert (x4101 x4650))
(assert (x4101 x613))
(assert (x5391 x1653))
(assert (< 10000 (x5018 x6655 x7778 x3104 x3601 x1789)))
(assert (not (x2674 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291))))
(assert (= (x4519 (x658 x2327 x3217 x5002 x4915)) x2327))
(assert (= x1991 (and x7964 x6708)))
(assert (x4101 x526))
(assert (x4101 x1610))
(assert (x2674 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (=> (>= 10000 x2673) (= (x3391 x2673) 0)))
(assert (not (x2674 (x5018 x954 x8198 x1612 x6014 x4062))))
(assert (x4101 x3324))
(assert (x4101 x40))
(assert (x4101 x4682))
(assert (= x6090 (or x448 x1143)))
(assert (x4101 x7760))
(assert (x3760 x5260 32))
(assert (= x5897 (and x3624 (not x7525))))
(assert (= x7830 (and x6939 x8307)))
(assert (= (or x8505 x2778 x3140 (and x5677 x7387) (and x2594 x4764) x1581 x4631) x2255))
(assert (x4101 x362))
(assert (x4101 x2539))
(assert (x4101 x1357))
(assert (x4101 x3235))
(assert (x8137 x6795))
(assert (x4101 x8095))
(assert (x4101 x3513))
(assert (not (x2674 (x8452 64 x1308 36))))
(assert (= (and x3589 x7088) x6917))
(assert (= (and x310 (not x2559)) x4968))
(assert (x4101 x3135))
(assert (x4101 x8523))
(assert (x4101 x275))
(assert (= (or x8108 x3195) x960))
(assert (=> (<= x5638 10000) (= 0 (x3391 x5638))))
(assert (x4101 x5242))
(assert (x4101 x3743))
(assert (x3760 x2571 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5313 (x6212 (x658 x8276 x8404 x5313 x424))))
(assert (x4101 x1842))
(assert (x4101 x3105))
(assert (x4101 x2906))
(assert (= (x8370 (x6207 x4567 x5929 x4238 x5321 x5266 x4424)) x4424))
(assert (x4101 x2207))
(assert (x4101 x1514))
(assert (= (or x2708 x7397 x7018) x1988))
(assert (= x3373 (and x7964 (not x6708))))
(assert (= x1619 (and x8062 x4994)))
(assert (x4101 x136))
(assert (x4101 x2138))
(assert (x4101 x7081))
(assert (x4101 x2040))
(assert (x4101 x6319))
(assert (x5391 x1431))
(assert (x2371 256))
(assert (=> (>= 10000 x5303) (= 0 (x3391 x5303))))
(assert (x8137 x4409))
(assert (= x7107 (and (not x6181) x716)))
(assert (= (and (not x2193) x8012) x2115))
(assert (x5391 x361))
(assert (= (or (and x6167 x6410) (and x1867 x6876)) x1673))
(assert (not (x2674 (x5018 x2493 x6149 x1732 x3117 x8016))))
(assert (x4101 x1491))
(assert (= x3501 (and (not x4528) x5949)))
(assert (= (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300) (x3391 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300))))
(assert (x4101 x1886))
(assert (x4101 x2176))
(assert (= (and x1352 x4145) x2956))
(assert (= (and x4589 (not x3935)) x3784))
(assert (x4101 x1261))
(assert (=> (>= 10000 x7745) (= 0 (x3391 x7745))))
(assert (x4101 x1718))
(assert (x725 x2537))
(assert (=> (>= 10000 x7574) (= (x3391 x7574) 0)))
(assert (x725 x4606))
(assert (= (and x21 x1089) x886))
(assert (x4101 x8207))
(assert (x4101 x340))
(assert (x4101 x1441))
(assert (= (x4955 (x5018 x5857 x8219 x4949 x2419 x5524)) x5524))
(assert (x4101 x6041))
(assert (= x666 (x5740 (x8452 64 x666 2))))
(assert (=> (<= x6555 10000) (= (x3391 x6555) 0)))
(assert (x8137 x573))
(assert (x4101 x2907))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (= (and x2140 x5431) x5016))
(assert (x4101 x654))
(assert (< (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3760 x7040 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x7314))
(assert (= (x5740 (x3114 x2327 x7905)) x7905))
(assert (x4101 x8454))
(assert (x725 x6496))
(assert (not (x2674 (x8452 64 x6251 12))))
(assert (= x7680 (=> (= (= x2876 0) x3525) (and (=> (and (and (= x566 false) (= x1356 true) (= x5253 x2283)) x3525) x959) (=> (and (= (> 64 x2283) x1089) (not x3525)) (and (=> (and (not x1089) (and (= x3802 x6047) (= x390 x5847) (= x4765 x7808) (= x4560 x2413) (= x5935 x5399) (= x1385 x1292) (= x6764 x5488) (= x6069 x5946) (= x5113 x7930) (= x6713 x2986) (= 354 x6301) (= x7032 x7838) (= x2756 x127) (= x343 x4526) (= x6103 x7708) (= x6096 (x7813 322)) (= (x7813 290) x343))) x5547) (=> (and (and (= 0 x5253) (= true x2021) (= false x1905)) x1089) x959)))))))
(assert (= (=> (and (and (= (= x4567 x19) x5221) (= x19 (x947 128))) (or (and (not x5221) (= x4620 (ite x5221 1 0))) (and x5221 (and (= (ite (< 0 x2768) 1 0) x4620) (= (x947 128) x2768))))) x2961) x6742))
(assert (x4101 x3830))
(assert (= (x5740 (x8452 64 x4417 6)) x4417))
(assert (=> (>= 10000 x667) (= (x3391 x667) 0)))
(assert (= (and x3618 (not x7827)) x4370))
(assert (not (x2674 (x5018 x8105 x3604 x1200 x7816 x7663))))
(assert (x4101 x5378))
(assert (< 10000 (x8452 64 x110 11)))
(assert (x4101 x120))
(assert (= (and x8333 x8085) x2595))
(assert (x4101 x6883))
(assert (= (x5740 (x3114 x8236 x270)) x270))
(assert (x4101 x7726))
(assert (x4101 x5843))
(assert (=> (<= x5336 10000) (= (x3391 x5336) 0)))
(assert (= (x6140 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)) x7022))
(assert (=> (>= 10000 x8145) (= (x3391 x8145) 0)))
(assert (x4101 x1309))
(assert (x4101 x6825))
(assert (x4101 x2885))
(assert (= x8228 (=> (and (= x120 x8014) (= x1196 x1309) (= 0 x7577) (= x7699 x5876) (= x7349 x1648) (= x4576 x1433) (= x3365 x6711) (= x1395 x6772) (= x563 x6666) (= x7632 x7946) (= 1 x785) (= x5292 x7333) (= x7925 x3595) (= x1038 x86) (= x6428 x7420)) x6571)))
(assert (x4101 x2919))
(assert (< (x8452 64 x6760 (ite (<= x954 32) x664 (ite (>= 64 x954) x2514 (ite (>= 96 x954) x5577 (ite (<= x954 128) x1131 (ite (>= 160 x954) x5628 (ite (>= 192 x954) x1262 x6705))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5604))
(assert (= (=> (= (= x6443 0) x7295) (and (=> (and (not x7295) (= x4536 (> 64 x3909))) (and (=> (and (and (= x2806 true) (= x1531 false) (= 0 x4122)) x4536) x2163) (=> (and (and (= (x8297 x3786 2) x5891) (= (x8452 64 x4807 3) x238) (= x1641 (> x55 0)) (= (x4426 x238) x3786) (= (x8452 64 x5710 11) x8409) (= x6338 (ite (> x6759 0) x5891 (x639 127 x5891))) (= x3192 354) (= x1728 0) (= x6965 (+ x4899 2)) (= x6759 (x639 1 x3786)) (= (x4068 322) x602) (= x799 450) (= x4781 (+ x8409 1)) (= x3060 (x8452 64 x5710 11)) (= (x621 x4781) x5162) (= (x4068 290) x265) (= (x4456 (- x6759 (mod (ite (> 32 x6338) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x55) (= (x6442 x6965) x1963) (= x4899 (x8452 64 x5710 11))) (not x4536)) (and (=> (and (and (= (= x6338 0) x3232) (= x5595 (+ 548 x3941)) (= x3941 (* x2960 32)) (= (x8297 (+ 31 x6338) 32) x2960)) x1641) (and (=> (and (not x3232) (= x1231 (> x6338 31))) (and (=> (and (and (or (not x7313) (and x7313 (and (<= x2161 612) (= (x2637 x6350) x6602) (>= x2161 548)))) (and (= (x3114 32 x238) x1014) (= (+ 548 x6338) x2161) (= x7954 (x2637 x1014)) (= x6350 (+ 1 x1014)) (= x7313 (< 580 x2161)))) x1231) x6027) (=> (and (and (= x5907 (x8297 x6101 256)) (= (x4426 x238) x6101) (= x3343 (* 256 x5907))) (not x1231)) x5521))) (=> x3232 x5521))) (=> (and (not x1641) (and (= x5931 true) (= false x1181) (= x4122 36))) x2163))))) (=> (and x7295 (and (= x3909 x4122) (= false x2538) (= true x3954))) x2163))) x4390))
(assert (=> (<= x8300 10000) (= 0 (x3391 x8300))))
(assert (x4101 x6364))
(assert (x4101 x5766))
(assert (x4101 x6489))
(assert (= (or x2089 x227) x8313))
(assert (x3481 x4444))
(assert (= x2708 (and x4003 x8229)))
(assert (= (or x2509 x2506) x6546))
(assert (= (and x3776 x1184) x830))
(assert (= (=> (and (= x1625 0) (= x7556 x2048) (= x7216 2) (= x3359 x7785) (= x4283 x3545) (= x1136 x6141) (= x4112 x3578) (= x2048 (x639 255 x5273))) x1007) x2802))
(assert (=> (>= 10000 x723) (= (x3391 x723) 0)))
(assert (x4101 x1678))
(assert (x4101 x5634))
(assert (x4101 x1334))
(assert (= (and x4628 x7771) x8330))
(assert (= (and x2319 (not x2870)) x2488))
(assert (= (and (not x1807) x7546) x5226))
(assert (x5391 x5486))
(assert (not (x2674 (x3114 32 x8158))))
(assert (x4101 x1461))
(assert (x4101 x1393))
(assert (< (x6207 x6256 x690 x1813 x3211 x2826 x8101) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x484))
(assert (x4101 x6009))
(assert (= (and x346 x8178) x5444))
(assert (= x615 (or (and x7519 x2735) (and x106 x962))))
(assert (x2496 x4489))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x4567 x7844 x3878 x6416 x1409)))
(assert (= x7483 (x4519 (x658 x7483 x3123 x2877 x670))))
(assert (= 5 (x6212 (x8452 64 x1648 5))))
(assert (= (x4519 (x3114 x6609 x6160)) x6609))
(assert (= (x5740 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733)) x8388))
(assert (x4101 x5700))
(assert (=> (>= 10000 x954) (= 0 (x3391 x954))))
(assert (x25 32 (ite (not (= x3207 0)) 1 0)))
(assert (x4101 x2981))
(assert (x4101 x158))
(assert (x4101 x3907))
(assert (x2496 x5012))
(assert (x725 x7057))
(assert (= (x5740 (x5018 x8066 x5753 x4487 x1987 x5269)) x5753))
(assert (= (and x5764 (not x1601)) x2686))
(assert (=> (>= 10000 x761) (= (x3391 x761) 0)))
(assert (x3760 x8135 256))
(assert (= (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336) (x3391 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336))))
(assert (=> (>= 10000 x5629) (= (x3391 x5629) 0)))
(assert (=> (>= 10000 x8380) (= (x3391 x8380) 0)))
(assert (< 10000 (x3114 x8236 x270)))
(assert (= (x5740 (x8452 64 x1648 4)) x1648))
(assert (= (and x1773 x6085) x6545))
(assert (x4101 x8141))
(assert (= x4089 (x5740 (x3114 x2493 x4089))))
(assert (= x1632 (x6212 (x6207 x5857 x681 x1632 x5447 x2128 x1530))))
(assert (= x7367 (x6212 (x8452 x8105 x3148 x7367))))
(assert (= x3624 (and (not x1863) x2457)))
(assert (x4101 x3020))
(assert (= (and x5770 x4642) x7305))
(assert (= x3316 (or x5744 x7107)))
(assert (= (x6212 (x8452 64 x1649 36)) 36))
(assert (> (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817) 10000))
(assert (x4057 x3738))
(assert (x4101 x5434))
(assert (= (or x4615 x2894) x8009))
(assert (= x518 (x5740 (x8452 64 x518 (ite (>= 32 x3485) x2064 (ite (>= 64 x3485) x4186 (ite (<= x3485 96) x6866 (ite (<= x3485 128) x49 (ite (>= 160 x3485) x6094 (ite (<= x3485 192) x8413 x749))))))))))
(assert (not (x2674 (x658 x2493 x2634 x165 x5303))))
(assert (x4101 x8007))
(assert (= (x4117 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)) x385))
(assert (x4101 x7288))
(assert (x4101 x612))
(assert (< 10000 (x658 x7483 x3123 x2877 x670)))
(assert (x4101 x2613))
(assert (x4101 x5978))
(assert (= (x4955 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345)) x1261))
(assert (x4101 x2723))
(assert (=> (<= x1784 10000) (= (x3391 x1784) 0)))
(assert (= 0 (x3391 35477284059277649309253622239531857712935939406416048698883813673932370764389)))
(assert (= (and x4761 (not x3388)) x6198))
(assert (x4101 x7926))
(assert (=> (<= x907 10000) (= 0 (x3391 x907))))
(assert (x4101 x7406))
(assert (< 10000 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345)))
(assert (= (and x3784 (not x6236)) x6627))
(assert (=> (<= x6273 10000) (= 0 (x3391 x6273))))
(assert (x4101 x1550))
(assert (= x8082 (and x7489 (not x2659))))
(assert (x4101 x7982))
(assert (= (x4519 (x5018 x2327 x4522 x2439 x7183 x8482)) x2327))
(assert (x3760 x209 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x7045 0) (= x7618 x128) (= x8030 x3545) (= x2036 x4112) (= x5608 1) (= x8342 x13)) x4301) x5944))
(assert (= (x3391 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285)) (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285)))
(assert (= x6138 (and x7579 x3147)))
(assert (x4101 x3129))
(assert (= x1517 (and x4891 x3358)))
(assert (x4101 x5497))
(assert (x4101 x2617))
(assert (= (and x4768 x8082) x8255))
(assert (=> (>= 10000 x5002) (= 0 (x3391 x5002))))
(assert (= x4072 (x842 (x5018 x3728 x7647 x2836 x4072 x2598))))
(assert (x4101 x7379))
(assert (x4101 x7844))
(assert (x4101 x531))
(assert (= (x4519 (x658 x6609 x5108 x6949 x5158)) x6609))
(assert (= (x5740 (x6207 x6655 x3754 x1280 x8438 x8159 x1634)) x3754))
(assert (x4101 x7787))
(assert (= (x8370 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) x557))
(assert (x4101 x1576))
(assert (= (x8370 (x6207 x8247 x2495 x8394 x2135 x4427 x5325)) x5325))
(assert (= (or x1941 x6138 x6188 x1138 x7095 x5290 x881 x426 x133 x7115) x1852))
(assert (x4101 x2680))
(assert (x4101 x93))
(assert (x4101 x5147))
(assert (x4101 x1160))
(assert (x4057 x6318))
(assert (x2371 x2038))
(assert (x4101 x5056))
(assert (x4101 x6961))
(assert (x4101 x12))
(assert (x725 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= 0 (x3391 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (> (x8452 64 x6251 12) 10000))
(assert (= x6313 (x6212 (x5018 x5456 x3051 x6313 x5806 x1348))))
(assert (=> (>= 10000 x3814) (= 0 (x3391 x3814))))
(assert (=> (<= x7585 10000) (= (x3391 x7585) 0)))
(assert (x4101 x3864))
(assert (x4101 x2069))
(assert (> (x8452 64 x1648 4) 10000))
(assert (x4101 x1207))
(assert (= (x842 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) x5724))
(assert (= x7786 (=> (and (or (and (and (= x7573 0) (= 2 x3315) (= x4112 x6049) (= x3134 false) (= x4512 x3545) (= x6141 x8357) (= true x6851) (= x7614 36)) x5768) (and (and (= false x2854) (= 32 x7614) (= x3781 x8357) (= x7573 1) (= false x1335) (= (x639 255 x3424) x1785) (= x7466 (x639 255 x3424)) (= x6049 x2206) (= x4813 (x5419 x6942)) (= x3424 (+ x3252 1)) (= x6942 (x8452 64 x3252 36)) (= x4512 x4085)) (not x5768))) (and (>= 255 x3252) (= (= x3252 255) x5768))) x2843)))
(assert (= x2338 (and x5142 x7319)))
(assert (= (x6212 (x5018 x2327 x4522 x2439 x7183 x8482)) x2439))
(assert (x4101 x667))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x8236 x270)))
(assert (= x352 (x842 (x6207 x3485 x136 x3977 x352 x6346 x7911))))
(assert (= (=> (or (and x6181 (and (= x4513 x7392) (<= x4513 1461501637330902918203684832716283019655932542975) (= x5452 x3007) (= x4527 x3647))) (and (and (= x7901 x7392) (= x5452 x7872) (= x3647 x294)) (not x6181))) x6523) x3664))
(assert (x4101 x4726))
(assert (= (x842 (x658 x8247 x335 x6736 x939)) x939))
(assert (x4101 x7699))
(assert (x4101 x4170))
(assert (x4101 x192))
(assert (= x426 (and x2429 x5873)))
(assert (= (=> (and (= false x2077) (= x4112 x6049) (= x6620 true) (= 0 x7573) (= x8357 x6141) (= x7983 2) (= x7614 36) (= x4512 x3545)) x2843) x3473))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x7904 36)))
(assert (> (x658 x2493 x2634 x165 x5303) 10000))
(assert (x4101 x2378))
(assert (x4101 x2579))
(assert (x4101 x8605))
(assert (x4101 x1416))
(assert (=> (>= 10000 x2653) (= 0 (x3391 x2653))))
(assert (= x5180 (and x2867 (not x151))))
(assert (= (x5740 (x8452 x7483 x8282 x5639)) x8282))
(assert (= (=> (= (+ x7991 292) x7394) x244) x2852))
(assert (x4101 x1269))
(assert (x3760 x793 256))
(assert (x4101 x4714))
(assert (x4101 x2387))
(assert (= 36 (x6212 (x8452 64 x2743 36))))
(assert (= (x5740 (x8452 64 x4024 2)) x4024))
(assert (= (or x7847 x3482 x4121 x2645 x899) x4078))
(assert (x4101 x6243))
(assert (x3760 x7057 256))
(assert (x4101 x2228))
(assert (x4101 x1496))
(assert (= (or (and x7747 x8410) (and x7634 x7868) (and x3246 x3617)) x5520))
(assert (=> (>= 10000 x1516) (= 0 (x3391 x1516))))
(assert (= x791 (and x106 (not x962))))
(assert (= x6837 (or x7807 x5578)))
(assert (= (x8370 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865)) x8381))
(assert (x4101 x5459))
(assert (x4101 x5055))
(assert (=> (<= x971 10000) (= 0 (x3391 x971))))
(assert (x4101 x3010))
(assert (x4101 x232))
(assert (x4101 x5107))
(assert (= (x6212 (x5018 x6601 x1538 x2378 x3456 x2871)) x2378))
(assert (x2674 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (x4101 x8527))
(assert (x4101 x2390))
(assert (x4101 x5241))
(assert (x2674 34591783479076665122502074927488338969190252781858077677016911635275368785765))
(assert (= (x3391 x6218) (x3391 (+ x6218 1))))
(assert (x4101 x6345))
(assert (x4101 x2169))
(assert (= (x4519 (x8452 64 x6760 (ite (<= x8247 32) x7566 (ite (<= x8247 64) x4627 (ite (>= 96 x8247) x7341 (ite (<= x8247 128) x4092 (ite (>= 160 x8247) x6845 (ite (<= x8247 192) x692 x7767)))))))) 64))
(assert (x4101 x7846))
(assert (x725 x4529))
(assert (= x374 (or x2956 x2121)))
(assert (x2496 x4753))
(assert (= x6609 (x4519 (x6207 x6609 x665 x2145 x377 x444 x8061))))
(assert (x4101 x200))
(assert (= (=> (and (= x6141 x7497) (= x3271 x5698) (= x3545 x1698) (= x470 x1307) (= (x639 255 x8135) x3271) (= x4112 x2143) (= 2 x1985) (= 0 x4320)) x7157) x7956))
(assert (x3760 x1086 32))
(assert (= (and (not x1310) x6235) x5817))
(assert (= x1096 (x8370 (x6207 x8236 x5618 x2344 x5489 x7255 x1096))))
(assert (x4101 x7127))
(assert (x4101 x505))
(assert (= (x4519 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828)) x8276))
(assert (= x2505 (or (and x741 x1097) (and x8517 x791))))
(assert (=> (>= 10000 x2993) (= 0 (x3391 x2993))))
(assert (not (x2674 (x658 x6655 x1562 x2988 x4015))))
(assert (x4101 x8342))
(assert (= (and (not x4158) x2330) x5102))
(assert (=> (<= x5503 10000) (= 0 (x3391 x5503))))
(assert (x4101 x4612))
(assert (= (x4519 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153)) x7483))
(assert (=> (<= x5879 10000) (= 0 (x3391 x5879))))
(assert (x4101 x3886))
(assert (x2496 x2611))
(assert (x4101 x6569))
(assert (= (=> (= x4540 (= x1412 0)) (and (=> (and (not x4540) (= x6053 (< x3210 64))) (and (=> (and (and (= (x7941 290) x5309) (= (x639 1 x8532) x5145) (= x6738 (x4456 (- x5145 (mod (ite (> 32 x547) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= 354 x5337) (= (x8452 64 x723 11) x1690) (= x4635 (< 0 x6738)) (= x4905 (x8452 64 x723 11)) (= x547 (ite (< 0 x5145) x6306 (x639 127 x6306))) (= 450 x8436) (= (x8452 64 x1648 3) x5769) (= (x8452 64 x723 11) x3383) (= x6306 (x8297 x8532 2)) (= 0 x7688) (= x6087 (+ 1 x3383)) (= x8529 (x7941 322)) (= x4016 (x621 x6087)) (= x8532 (x4426 x5769)) (= x2147 (+ 2 x4905)) (= x2991 (x7735 x2147))) (not x6053)) (and (=> (and (and (= x151 (= 0 x547)) (= x2391 (+ x3227 548)) (= (* 32 x6785) x3227) (= x6785 (x8297 (+ 31 x547) 32))) x4635) (and (=> x151 x6648) (=> (and (= (> x547 31) x6268) (not x151)) (and (=> (and x6268 (and (and (= (x2637 x5510) x5912) (= (+ 1 x5510) x3672) (= (< 580 x7310) x6282) (= x7310 (+ 548 x547)) (= (x3114 32 x5769) x5510)) (or (and (and (>= 612 x7310) (= x7839 (x2637 x3672)) (<= 548 x7310)) x6282) (not x6282)))) x3581) (=> (and (not x6268) (and (= x990 (x8297 x4675 256)) (= (x4426 x5769) x4675) (= (* x990 256) x4142))) x6648))))) (=> (and (and (= true x4954) (= 36 x7288) (= x1199 false)) (not x4635)) x2687))) (=> (and (and (= x635 false) (= x7288 0) (= true x7241)) x6053) x2687))) (=> (and (and (= x1098 false) (= x6187 true) (= x7288 x3210)) x4540) x2687))) x4210))
(assert (= (and x1322 x7222) x1436))
(assert (x4101 x666))
(assert (x3760 x1487 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x5586 100)))
(assert (= x8247 (x4519 (x6207 x8247 x2495 x8394 x2135 x4427 x5325))))
(assert (= (x6212 (x8452 64 x4807 5)) 5))
(assert (x4101 x8039))
(assert (x2496 x2672))
(assert (not (x2674 (x3114 x5456 x8164))))
(assert (> (x3114 32 x8158) 10000))
(assert (= (or x984 x7882 x204) x4520))
(assert (< (x6207 x8247 x2495 x8394 x2135 x4427 x5325) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5274))
(assert (x4101 x2565))
(assert (x4101 x3889))
(assert (x4101 x1883))
(assert (x4101 x6655))
(assert (x4101 x8076))
(assert (= x3995 (x6212 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814))))
(assert (x4101 x6368))
(assert (x4101 x1296))
(assert (= (and (not x1123) x4052) x6373))
(assert (x2496 x2949))
(assert (x4101 x4874))
(assert (= x4187 (and (not x468) x456)))
(assert (= (x3391 x2597) (x3391 (+ 2 x2597))))
(assert (= x6601 (x4519 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (= (x4519 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345)) x6609))
(assert (x4101 x1419))
(assert (= (and x5764 x1601) x2933))
(assert (x4101 x8181))
(assert (= (or x3176 x2698 x6986 x91) x3975))
(assert (= x7301 (x4519 (x8452 x7301 x8339 x60))))
(assert (x4101 x2916))
(assert (x4101 x4927))
(assert (= (and x3509 x960) x7262))
(assert (x4101 x8431))
(assert (= x8247 (x4519 (x3114 x8247 x8500))))
(assert (x4101 x5542))
(assert (< 10000 (x8452 x7483 x8282 x5639)))
(assert (=> (<= x5961 10000) (= 0 (x3391 x5961))))
(assert (x4101 x5651))
(assert (x4101 x7905))
(assert (= x1175 (and (not x3899) x2338)))
(assert (x4101 x8198))
(assert (x4101 x2356))
(assert (= (x8452 x954 x3276 x4483) (x3391 (x8452 x954 x3276 x4483))))
(assert (= x1800 (and x6536 x2822)))
(assert (x4101 x7741))
(assert (x725 x2110))
(assert (x4101 x3878))
(assert (> (x6207 x6601 x1154 x6468 x2260 x2279 x5339) 10000))
(assert (= (or (and x583 (not x283)) (and x7028 (not x1959)) x1977 (and (not x242) x2102) (and (not x1670) x3290)) x1534))
(assert (x4101 x7947))
(assert (= (or x7029 x6694 x1815 x6627 x7414) x7405))
(assert (= (x4519 (x8452 x8236 x4552 x7152)) x8236))
(assert (x4101 x3866))
(assert (x4101 x4000))
(assert (x3760 x6496 128))
(assert (= (x8452 64 x4936 0) (x3391 (x8452 64 x4936 0))))
(assert (x4101 x693))
(assert (x2496 x5477))
(assert (x2674 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (= (x842 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733)) x302))
(assert (x2496 x8347))
(assert (=> (<= x2135 10000) (= 0 (x3391 x2135))))
(assert (x4101 x1916))
(assert (= x1476 (=> (= x2751 (= x2875 0)) (and (=> (and (and (= (x8452 64 x1526 10) x3280) (<= x1575 255) (= x1575 (x5009 x3280)) (= x1184 (< 0 x1575))) x2751) (and (=> (and (and (or (and (not x6487) (and (= false x7918) (= x740 x4760) (= x4527 x40) (= x5086 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x6658 x7632) (<= x4273 127) (= x4284 x1648) (= x4445 x5726) (<= x4273 127) (<= 1 x4513) (= 1 x3394) (= x5882 x3365) (>= x7053 1) (= 310283853 x4007) (= x1087 x7904) (= x1395 x3007) (= x4513 x3595) (= (x7676 x729) x7053) (= 36 x4610) (= false x423) (= x6081 false) (= x4513 x729) (= false x1512) (>= 1461501637330902918203684832716283019655932542975 x4513) (= x826 x6526) (= x3548 x2571) (= x3007 x6427) (= x8014 x6342) (= x1629 x1196))) (and x6487 (and (and (= x5122 false) (= x8503 x7563) (= x2705 (and x956 x4712)) (= x4712 (<= x8368 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x8503 x3007) (= (* x3007 1000000000) x8368) (>= 127 x1132) (= x8067 (x7676 x8278)) (= (< (* x3007 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x956) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x4556) (= 310283853 x906) (<= 1 x8067) (= false x148) (>= 127 x1132) (= 36 x5409)) (or (and (not x2705) (and (= x3007 x1395) (= x826 x6526) (= x4445 x5726) (= x3548 x2571) (= x740 x4760) (= x4284 x1648) (= true x1569) (= x7632 x6658) (= x4513 x3595) (= x3394 0) (= x6342 x8014) (= x4527 x40) (= x7904 x1087) (= x702 2) (= x2641 false) (= x5882 x3365) (= x1629 x1196))) (and (and (= x3548 x2571) (= x4445 x5726) (= x1629 x1196) (= x8368 x6171) (= x740 x4760) (<= x8368 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x3595 x4513) (= x3700 false) (= x7904 x1087) (= x3394 1) (= x4527 x40) (= false x6221) (= x4284 x1648) (= x6342 x8014) (= x7632 x6658) (= x5882 x3365) (= x6526 x826) (= x3007 x1395) (>= x8368 0)) x2705))))) (and (= 128 x4486) (= (= x4513 x8278) x6487) (>= 1461501637330902918203684832716283019655932542975 x4513))) x1184) x7205) (=> (and (not x1184) (and (= x3256 x4513) (= x261 x4527) (= x3360 x3007))) x6679))) (=> (and (not x2751) (and (= x4513 x3256) (= x3360 x3007) (= x4527 x261))) x6679)))))
(assert (= (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819) (x3391 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819))))
(assert (x4101 x4387))
(assert (=> (>= 10000 x3300) (= 0 (x3391 x3300))))
(assert (x3760 x1334 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1911 (and x3731 x7916)))
(assert (x4101 x3492))
(assert (x4101 x4513))
(assert (x4101 x1626))
(assert (= x1336 (and (not x600) x5817)))
(assert (x4101 x5546))
(assert (= (and x6225 x2548) x2219))
(assert (x4101 x3854))
(assert (not (x2674 (x6207 x3728 x6176 x1012 x365 x1345 x6842))))
(assert (= x8066 (x4519 (x8452 x8066 x6941 x7545))))
(assert (x4101 x1012))
(assert (x4101 x2871))
(assert (x4101 x1458))
(assert (= (and x2935 x6868) x2562))
(assert (x4101 x4273))
(assert (x4101 x1821))
(assert (x4101 x7183))
(assert (x4101 x2808))
(assert (=> (>= 10000 x365) (= 0 (x3391 x365))))
(assert (x4101 x2526))
(assert (x4101 x7416))
(assert (= x2102 (and x583 x283)))
(assert (x4101 x1730))
(assert (x4101 x4359))
(assert (= (and x6061 (not x3596)) x8056))
(assert (not (x2674 (x6207 x6601 x1154 x6468 x2260 x2279 x5339))))
(assert (=> (<= x5613 10000) (= 0 (x3391 x5613))))
(assert (x725 x7673))
(assert (x4101 x4238))
(assert (x4101 x6789))
(assert (x4101 x8494))
(assert (x3760 x5863 128))
(assert (x4101 x6724))
(assert (x4101 x8607))
(assert (= (x3391 1461501637330902918203684832716283019655932542975) 0))
(assert (x5391 x5020))
(assert (not (x2674 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070))))
(assert (x4101 x5669))
(assert (x3760 x4444 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x2831))
(assert (x725 x1294))
(assert (x4101 x2853))
(assert (= (x6212 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803)) x2596))
(assert (x4101 x6197))
(assert (x4101 x3792))
(assert (= (or (and x2451 x1122) (and x8277 x5435) (and x3572 x1438) (and x5784 x5741) (and x963 x1387)) x6208))
(assert (x4101 x5350))
(assert (x4101 x702))
(assert (x4101 x3339))
(assert (x5189 x3786 2))
(assert (> (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751) 10000))
(assert (= (x4519 (x8452 64 x5128 12)) 64))
(assert (x4101 x8246))
(assert (x4101 x7751))
(assert (= (and (not x5132) x8220) x2765))
(assert (x4101 x3977))
(assert (x4101 x4866))
(assert (x4101 x4253))
(assert (= x7671 (x842 (x5018 x8236 x8496 x1779 x7671 x5130))))
(assert (= (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291) (x3391 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291))))
(assert (x4101 x7777))
(assert (x4101 x7006))
(assert (x4101 x2395))
(assert (x5528 x5072))
(assert (= (=> (and (= x3679 (x639 255 x2478)) (= x788 (x154 x4760)) (= x7051 x3862) (= x4848 (x6953 x729)) (< (+ x3438 x4848) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x216 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x4848 x3438) x216) (= (- x788 x3438) x2747) (>= x216 0) (= x3901 2) (= x5838 x216)) x1390) x3924))
(assert (x725 x6892))
(assert (x4101 x4432))
(assert (x3481 x5330))
(assert (x4101 x5182))
(assert (x4101 x261))
(assert (x4101 x229))
(assert (=> (>= 10000 x60) (= 0 (x3391 x60))))
(assert (x4101 x7347))
(assert (x4101 x6833))
(assert (= (x3391 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393)) (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393)))
(assert (< 10000 (x6207 x8247 x2495 x8394 x2135 x4427 x5325)))
(assert (x4101 x4565))
(assert (> (x8452 64 x4024 6) 10000))
(assert (x4101 x7141))
(assert (x4101 x243))
(assert (not (x2674 (x6207 x8236 x5618 x2344 x5489 x7255 x1096))))
(assert (x864 x7673))
(assert (=> (>= 10000 x7968) (= 0 (x3391 x7968))))
(assert (=> (>= 10000 x6260) (= 0 (x3391 x6260))))
(assert (=> (<= x9 10000) (= (x3391 x9) 0)))
(assert (x4101 x6097))
(assert (= (x4519 (x658 x4567 x8100 x1458 x7760)) x4567))
(assert (x4101 x2842))
(assert (x4101 x1765))
(assert (x4101 x3277))
(assert (x4101 x2993))
(assert (not (x2674 (x8452 x1404 x549 x1883))))
(assert (x4101 x6699))
(assert (=> (>= 10000 x2344) (= (x3391 x2344) 0)))
(assert (= (=> (= x5519 (+ x7379 x4004)) x4739) x6814))
(assert (x4101 x3586))
(assert (x4101 x6518))
(assert (= (or x5988 x2600) x5044))
(assert (x4101 x6959))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 32 103)))
(assert (= (x842 (x658 x8066 x7449 x526 x4927)) x4927))
(assert (x4101 x8161))
(assert (= x4483 (x6212 (x8452 x954 x3276 x4483))))
(assert (x4101 x3444))
(assert (= x2527 (x5740 (x3114 x8066 x2527))))
(assert (= (x6212 (x8452 64 1 x7411)) x7411))
(assert (x3760 x4149 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x7164 (and x5451 (not x8047))))
(assert (= x652 (x6140 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300))))
(assert (x4101 x8420))
(assert (= 0 (x3391 35477284059277649309253622239531857712935939529143554018288893216769000107873)))
(assert (x5391 x2787))
(assert (= x3759 (x842 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751))))
(assert (=> (<= x665 10000) (= (x3391 x665) 0)))
(assert (x4101 x3375))
(assert (x4101 x7930))
(assert (x4101 x5739))
(assert (= (x3391 (x5018 x8066 x5753 x4487 x1987 x5269)) (x5018 x8066 x5753 x4487 x1987 x5269)))
(assert (= (and x430 (not x1428)) x7970))
(assert (= x7301 (x4519 (x5018 x7301 x6276 x3370 x6512 x4475))))
(assert (x4101 x577))
(assert (not (x2674 (x5018 x3728 x7647 x2836 x4072 x2598))))
(assert (= (and x1872 x4151) x5179))
(assert (= (x3391 (+ x3605 1)) (x3391 x3605)))
(assert (= (x6212 (x6207 x8105 x941 x8457 x6689 x1263 x3972)) x8457))
(assert (=> (>= 10000 x153) (= 0 (x3391 x153))))
(assert (= (and x5984 x7223) x3165))
(assert (=> (<= x2081 10000) (= (x3391 x2081) 0)))
(assert (= (x4519 (x8452 x4567 x2927 x1457)) x4567))
(assert (= x7278 (or x2082 x8348)))
(assert (x4101 x5699))
(assert (x4101 x7917))
(assert (x8137 x4606))
(assert (x4101 x2855))
(assert (x4101 x5515))
(assert (= (x6212 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239)) x2685))
(assert (=> (>= 10000 x6941) (= (x3391 x6941) 0)))
(assert (x4101 x4755))
(assert (x4101 x8474))
(assert (x4101 x66))
(assert (=> (>= 10000 x6374) (= (x3391 x6374) 0)))
(assert (x4101 x1354))
(assert (x4101 x1088))
(assert (x4101 x798))
(assert (= (x8370 (x6207 x2327 x3240 x576 x6659 x4505 x8420)) x8420))
(assert (x4101 x6076))
(assert (=> (<= x719 10000) (= (x3391 x719) 0)))
(assert (= (x3391 (+ 2 x2896)) (x3391 x2896)))
(assert (= (x3391 (x5018 x2493 x6149 x1732 x3117 x8016)) (x5018 x2493 x6149 x1732 x3117 x8016)))
(assert (x4101 x1644))
(assert (x4101 x44))
(assert (= (x8452 64 x7797 36) (x3391 (x8452 64 x7797 36))))
(assert (x4101 x1919))
(assert (x4101 x5115))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 1 x2328)))
(assert (x4101 x2890))
(assert (x3481 x5260))
(assert (= (and x8085 (not x8333)) x1850))
(assert (x4101 x6606))
(assert (=> (>= 10000 x6489) (= 0 (x3391 x6489))))
(assert (= (and x2933 x1153) x522))
(assert (x4101 x3584))
(assert (x4101 x5219))
(assert (= (x8452 64 x1649 36) (x3391 (x8452 64 x1649 36))))
(assert (=> (<= x3345 10000) (= (x3391 x3345) 0)))
(assert (= x1813 (x6212 (x6207 x6256 x690 x1813 x3211 x2826 x8101))))
(assert (= x7501 (and x1255 x4360)))
(assert (=> (>= 10000 x3707) (= 0 (x3391 x3707))))
(assert (= x6390 (x842 (x658 x6256 x7745 x8380 x6390))))
(assert (x4101 x7235))
(assert (x4101 x525))
(assert (x4101 x1423))
(assert (= (and (not x7755) x8425) x1122))
(assert (x4101 x5691))
(assert (x4101 x3738))
(assert (x4101 x6202))
(assert (x4101 x3007))
(assert (= x6395 (x6212 (x658 x8236 x2222 x6395 x5287))))
(assert (not (x2674 (x8452 64 x6515 6))))
(assert (x4101 x3518))
(assert (x4101 x6852))
(assert (x2674 34591783479076665078880830389440322441076534786459098783165778951140825654127))
(assert (= x1522 (and x7935 x1605)))
(assert (= (x5740 (x8452 64 x6260 7)) x6260))
(assert (x4101 x4047))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x1404 x1434 x7783 x2653 x69 x8128)))
(assert (x3760 x8507 256))
(assert (not (x2674 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551))))
(assert (x4101 x4525))
(assert (x5189 x2571 2))
(assert (x4101 x3200))
(assert (= (=> (and (= x6626 128) (= (x7676 x3286) x1364) (= (= x1364 0) x3957) (= (x4456 (- x5519 128)) x5785)) (and (=> (and (and (>= x1030 1) (= x962 (< 18446744073709551615 x4516)) (= 46442213778836376901753710468615024683576072693327014300388496345503314739200 x7567) (= x537 1722637450) (>= x5785 196) (>= 127 x4346) x3900 (= x5958 x5894) (>= 127 x4346) (= x6714 x5785) (= false x8086) (= x1030 (x7676 x666)) (= x1818 128) (= x3239 x1882) (<= x6714 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x5785 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (= (x2813 132) x3510) x3900) (= x2442 x7507) (= (x7351 132) x4516) (= false x1934) (<= 196 x6714)) (not x3957)) (and (=> (and (and (= x8517 (> x6379 x6714)) (= x6379 (x5665 (+ x4516 164))) (= x3267 164)) (not x962)) (and (=> (and (not x8517) (and (= x276 (+ 4 x3239)) (= (> x6714 (+ 31 x276)) x5097))) (and (=> (and (and (= false x594) (= x8 true) (= 0 x5713)) (not x5097)) x2437) (=> (and x5097 (and (= (x7351 x276) x8295) (= x2735 (< 18446744073709551615 x8295)))) (and (=> (and (and (= x5993 (+ 32 x276)) (= (> x5896 x6714) x741) (= (x5665 (+ x5993 x8295)) x5896)) (not x2735)) (and (=> x741 x2087) (=> (and (not x741) (and (= x4176 (= x666 x729)) (or (and (not x4176) (and (= x5713 132) (= x1492 false) (= true x486))) (and x4176 (and (>= x3403 161) (= x171 (x5665 (+ x84 x8295))) (= x6669 (x3453 x2781)) (= x5333 (* 32 x4125)) (= x2781 (+ 160 x5333)) (= x4933 (x8297 x2525 32)) (= 0 x5713) (= (x5665 (+ x8295 31)) x2525) (> x3403 x2781) (= (x5665 (+ 32 x6852)) x1906) (= x2314 true) (= x507 128) (or (>= x6669 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x6669 31)) (= x84 (x5665 (+ x2781 32))) (= x3403 (x5665 (+ x1906 x2781))) (= x6852 (* 32 x4933)) (= x4125 (x8297 x5052 32)) (or (<= x4516 115792089237316195423570985008687907853269984665640564039457584007913129639744) (>= x4516 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= (x5665 (+ x4516 31)) x5052) (= x4342 false)))))) x2437))) (=> x2735 x1527))))) (=> x8517 x2087))) (=> x962 x1527))) (=> (and x3957 (and (= false x4543) (= x6049 x4112) (= x3545 x4512) (= x7573 0) (= 2 x1710) (= true x7609) (= x7614 0) (= x8357 x6141))) x2843))) x4739))
(assert (x4101 x4291))
(assert (= x113 (x5740 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (x4101 x5863))
(assert (= (and x3947 (not x5090)) x411))
(assert (x4101 x2127))
(assert (not (x2674 (x8452 64 1 x2328))))
(assert (x4101 x6063))
(assert (= (and x7405 (not x5408)) x4460))
(assert (x4101 x3842))
(assert (= x6191 (=> (and (and (= x1987 (x6727 x432)) (= x3379 (x5665 (+ x5375 128))) (= (x5665 (+ x5714 32)) x6052) (= (x8452 64 x4447 (ite (>= 32 x8276) x1918 (ite (<= x8276 64) x2640 (ite (>= 96 x8276) x3301 (ite (<= x8276 128) x7339 (ite (<= x8276 160) x4113 (ite (<= x8276 192) x933 x7974))))))) x986) (= (x6207 x8276 x7633 x667 x44 x579 x2604) x4113) (= (x6727 x2842) x424) (= x952 (x6727 x2455)) (= x5112 (x5665 (+ 64 x5375))) (= x2624 (x6727 x6162)) (= (x5665 (+ 64 x5375)) x6102) (= x7334 (x6727 x4208)) (= x8404 (x6727 x5375)) (= (x6727 x8183) x4860) (= x2842 (x5665 (+ x5375 64))) (= (x6727 x7218) x1582) (= x8066 (- x8276 32)) (= (x8452 x8276 x6717 x3740) x2640) (= x933 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828)) (= x4022 (x5665 (+ 96 x5375))) (= (x5665 (+ x5375 160)) x5714) (= x3422 (x6727 x3200)) (= (x5018 x8276 x2797 x2069 x4860 x7334) x7339) (= x3126 (x5665 (+ x5375 128))) (= (x8448 0) x5286) (= (x5665 (+ x5375 32)) x5369) (= (x5665 (+ 32 x5375)) x1824) (= (x5665 (+ 32 x5375)) x4229) (= (x6727 x7126) x526) (= (x5665 (+ x5375 32)) x7126) (= (x5665 (+ x5375 32)) x7746) (= x44 (x6727 x491)) (= (x6727 x2169) x3531) (= (x6727 x6970) x4325) (= (x6727 x4229) x4487) (= (x7914 x3299) x7841) (= x657 (x5018 x8066 x5753 x4487 x1987 x5269)) (= (x5665 (+ x5375 32)) x1063) (= x685 (x5665 (+ x5375 32))) (= x1918 (x3114 x8276 x7070)) (= (x5665 (+ 128 x5375)) x3418) (= x5269 (x6727 x3426)) (= x8276 (x4456 (- x5516 x5375))) (= (x5665 (+ 32 x3309)) x5516) (= x4223 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832)) (= x7070 (x6727 x5375)) (= (x658 x8066 x7449 x526 x4927) x6135) (= x2069 (x6727 x5369)) (= x3301 (x658 x8276 x8404 x5313 x424)) (= x3324 (x5665 (+ 160 x5375))) (= (x5665 (+ 64 x5375)) x432) (= x6941 (x6727 x5375)) (= x7568 (x8452 x8066 x6941 x7545)) (= (x5665 (+ x5375 32)) x6162) (= x5753 (x6727 x5375)) (= x2034 (x6727 x5375)) (= (x6727 x6465) x3031) (= x8183 (x5665 (+ x5375 64))) (= x5589 (x6207 x8066 x1862 x2624 x99 x6072 x1363)) (= (x6727 x5375) x1533) (= (x5665 (+ 96 x5375)) x2455) (= x7218 (x5665 (+ 64 x5375))) (= x6465 (x5665 (+ 32 x5375))) (= (x6727 x6790) x7865) (= (x5665 (+ x5375 64)) x7176) (= x3200 (x5665 (+ 160 x5375))) (= x7449 (x6727 x5375)) (= x2995 (x5665 (+ x5375 32))) (>= 224 x8276) (= (x6727 x1824) x5313) (= (x6727 x2022) x4928) (= (x6727 x5375) x7560) (= (x6727 x5375) x1862) (= x491 (x5665 (+ x5375 64))) (= (x6727 x6102) x422) (= (x6727 x4022) x579) (= (x5665 (+ x5375 96)) x6970) (= (x5665 (+ x4013 x5375)) x3309) (= (x6727 x5688) x7545) (= (x6727 x7176) x99) (= x7974 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865)) (= (x5665 (+ x5375 x4013)) x6200) (= x3740 (x6727 x685)) (= (x6727 x3379) x1363) (<= 32 x8276) (= x7832 (x6727 x3437)) (= x2022 (x5665 (+ x5375 64))) (= x4927 (x6727 x5112)) (= (x5665 (+ x5375 96)) x3426) (= x6790 (x5665 (+ 192 x5375))) (= x7633 (x6727 x5375)) (= x2169 (x5665 (+ 128 x5375))) (= (x6727 x7746) x667) (= (x6727 x1063) x7192) (= x67 (x5665 (+ x5375 96))) (= x6461 (x6727 x5216)) (= x3182 (x6727 x3048)) (= x2527 (x6727 x5375)) (= (ite (= x8066 0) x5286 (ite (>= 32 x8066) x7140 (ite (>= 64 x8066) x7568 (ite (>= 96 x8066) x6135 (ite (<= x8066 128) x657 (ite (<= x8066 160) x5589 x4223)))))) x1993) (= (> x7841 0) x5408) (= x2797 (x6727 x5375)) (= (x6727 x3126) x59) (= x3437 (x5665 (+ 160 x5375))) (= (x5665 (+ x5375 96)) x4208) (= x5335 (x5665 (+ 128 x5375))) (= (x6727 x5335) x2604) (= (x5665 (+ 32 x5375)) x5688) (= (x5665 (+ 96 x5375)) x5216) (= x3048 (x5665 (+ 32 x5375))) (= x8381 (x6727 x3418)) (= (x6727 x3324) x5828) (= x6717 (x6727 x5375)) (= x6072 (x6727 x67)) (= x7140 (x3114 x8066 x2527))) (or (and (and (or (and x7159 (and (and (= (x5665 (+ 32 x5195)) x1766) (= (x2106 x1766) x5121) (= (> x7841 64) x1617) (= (x5665 (+ 32 x6052)) x5448)) (or (not x1617) (and (and (and (= (x5665 (+ 64 x5195)) x8206) (= x6211 (x591 x8206)) (= x6553 (x5665 (+ 64 x6052))) (= (< 96 x7841) x6973)) (or (not x6973) (and x6973 (and (= (x5665 (+ 96 x5195)) x6123) (= (x5665 (+ 96 x6052)) x8132) (= (x8196 x6123) x7473) (<= x7841 128))))) x1617)))) (not x7159)) (and (= x4731 (x1367 x5195)) (= x7159 (< 32 x7841)))) x5408) (not x5408))) x5161)))
(assert (= x6707 (and x1055 x6625)))
(assert (x4101 x472))
(assert (=> (<= x6054 10000) (= (x3391 x6054) 0)))
(assert (= (x6140 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070)) x5070))
(assert (x4101 x1136))
(assert (> (x5018 x6256 x112 x2259 x6535 x7432) 10000))
(assert (= (x3391 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) (x4851 x954 x585 x540 x5724 x3612 x557 x1197)))
(assert (= (and x263 x3725) x808))
(assert (x4101 x7334))
(assert (x4101 x5387))
(assert (x4101 x7633))
(assert (=> (<= x2128 10000) (= (x3391 x2128) 0)))
(assert (x5391 x4818))
(assert (x2496 x2816))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x3760 x8020 256))
(assert (= x6209 (and x2195 x378)))
(assert (= (x4955 (x5018 x6655 x7778 x3104 x3601 x1789)) x1789))
(assert (x4101 x4156))
(assert (x4101 x7155))
(assert (x5528 x1712))
(assert (x4101 x2206))
(assert (x2496 x3862))
(assert (x4101 x3758))
(assert (x2496 x1307))
(assert (= (x5740 (x8452 64 x1459 100)) x1459))
(assert (= x1557 (or (and x1258 x5856) (and x5000 x7328))))
(assert (= (x3391 (x8452 64 1 x7211)) (x8452 64 1 x7211)))
(assert (< 10000 (x8452 64 x2123 100)))
(assert (not (x2674 (x8452 x8105 x3148 x7367))))
(assert (= x6760 (x5740 (x8452 64 x6760 (ite (>= 32 x954) x664 (ite (>= 64 x954) x2514 (ite (<= x954 96) x5577 (ite (<= x954 128) x1131 (ite (<= x954 160) x5628 (ite (<= x954 192) x1262 x6705))))))))))
(assert (not (x2674 (x8452 64 x4807 3))))
(assert (x4101 x6118))
(assert (x4101 x422))
(assert (x4101 x3671))
(assert (not (x2674 (x8452 64 x5625 7))))
(assert (x4101 x3838))
(assert (= x3893 (and x7355 x248)))
(assert (x3760 x4854 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x5137 x3680) x5873))
(assert (not (x2674 (x5018 x4567 x7844 x3878 x6416 x1409))))
(assert (x4101 x494))
(assert (=> (<= x8352 10000) (= (x3391 x8352) 0)))
(assert (= 0 (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x8137 x4818))
(assert (x4101 x2946))
(assert (x4101 x7188))
(assert (= x2673 (x5740 (x658 x5857 x2673 x2267 x6794))))
(assert (x4101 x1620))
(assert (= (x3391 (x8452 64 x1648 5)) (x8452 64 x1648 5)))
(assert (not (x2674 (x6207 x3485 x136 x3977 x352 x6346 x7911))))
(assert (x4101 x2728))
(assert (x4101 x563))
(assert (= (and x3861 (not x1344)) x4440))
(assert (= x6809 (or (and (not x2410) x4138) x4594)))
(assert (= 0 (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (x2674 (x8452 64 x518 (ite (>= 32 x3485) x2064 (ite (<= x3485 64) x4186 (ite (>= 96 x3485) x6866 (ite (>= 128 x3485) x49 (ite (>= 160 x3485) x6094 (ite (>= 192 x3485) x8413 x749))))))))))
(assert (x4101 x6342))
(assert (x4101 x3403))
(assert (< 10000 (x3114 x5456 x8164)))
(assert (= (x3391 (x6207 x8247 x2495 x8394 x2135 x4427 x5325)) (x6207 x8247 x2495 x8394 x2135 x4427 x5325)))
(assert (= (or x152 x3153 x4460 x1011 x4810) x7612))
(assert (x4101 x3264))
(assert (=> (>= 10000 x5857) (= 0 (x3391 x5857))))
(assert (= (x5740 (x8452 64 x1648 3)) x1648))
(assert (= (x5740 (x3114 x6609 x6160)) x6160))
(assert (> (x5018 x8236 x8496 x1779 x7671 x5130) 10000))
(assert (= (and x7415 (not x2297)) x8241))
(assert (x4101 x7835))
(assert (x4101 x7976))
(assert (=> (<= x7905 10000) (= (x3391 x7905) 0)))
(assert (x4101 x7178))
(assert (x2371 x2572))
(assert (= (and x2488 (not x4706)) x617))
(assert (x4101 x6298))
(assert (x4101 x1427))
(assert (= x8326 (and (not x3617) x3246)))
(assert (x4101 x8510))
(assert (x4101 x3188))
(assert (x4101 x3794))
(assert (= x7172 (x6212 (x8452 x6256 x5658 x7172))))
(assert (x4101 x2413))
(assert (x4101 x1457))
(assert (x4101 x2571))
(assert (= (and x1032 x7010) x8011))
(assert (x4101 x228))
(assert (x4101 x5128))
(assert (< (x6207 x8276 x7633 x667 x44 x579 x2604) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2674 (x8452 x6256 x5658 x7172))))
(assert (= 64 (x4519 (x8452 64 1 x3502))))
(assert (x2674 2770781680))
(assert (x4101 x1637))
(assert (x4101 x2658))
(assert (= 0 (x3391 44057028636630039105102054091366763171729008530599747929804322044178077843456)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x7055 6)))
(assert (= (x5740 (x8452 64 x1308 36)) x1308))
(assert (x4101 x3348))
(assert (x4101 x1375))
(assert (x3760 x361 256))
(assert (=> (<= x1366 10000) (= 0 (x3391 x1366))))
(assert (x3760 x2839 32))
(assert (= (or x7262 x535) x2184))
(assert (x4101 x74))
(assert (x4101 x5812))
(assert (x4101 x2577))
(assert (= x455 (and x5751 (not x1168))))
(assert (= x5885 (and x5441 x5923)))
(assert (= (and (not x7481) x4744) x223))
(assert (x4101 x3110))
(assert (x2371 x5340))
(assert (< (x6207 x7483 x4415 x1668 x2575 x5720 x7858) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x5018 x6601 x1538 x2378 x3456 x2871)))
(assert (not (x2674 (x3114 32 x8200))))
(assert (x4101 x208))
(assert (x4101 x7621))
(assert (= (=> (and (= x2750 (= x4938 0)) (or x2750 (not x2750))) x7143) x8182))
(assert (= x5169 (x5740 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153))))
(assert (= x6930 (and (not x2915) x2282)))
(assert (= (x4519 (x8452 64 x1648 5)) 64))
(assert (x4101 x592))
(assert (x4101 x5823))
(assert (x4910 x4850))
(assert (= (and x3706 (not x4006)) x3788))
(assert (x2674 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (x4101 x5602))
(assert (= (x4519 (x658 x6256 x7745 x8380 x6390)) x6256))
(assert (x725 x6902))
(assert (x2674 34591783479076665047274362116096262703299809091723987870014818727818681087008))
(assert (not (x2674 (x8452 x6601 x7528 x3162))))
(assert (= x2449 x2886))
(assert (x4101 x8254))
(assert (= (or x502 x5016) x4670))
(assert (x4101 x5077))
(assert (x4101 x7022))
(assert (x4101 x796))
(assert (x2674 89332125780766104441357105940599211734484755930370930871569612501041822040064))
(assert (x725 x361))
(assert (= x7487 (and x6391 x5179)))
(assert (not (x2674 (x8452 x8247 x1044 x6011))))
(assert (> (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075) 10000))
(assert (x4101 x6068))
(assert (x4101 x1672))
(assert (x4101 x6311))
(assert (= (x6212 (x8452 64 x4024 36)) 36))
(assert (x4101 x4125))
(assert (x2674 1766847064778384329583297500742918515827483896875618958121606201292619776))
(assert (x4101 x6438))
(assert (x4101 x6125))
(assert (x25 32 x3644))
(assert (x8137 x2869))
(assert (x4101 x2572))
(assert (not (x2674 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613))))
(assert (= x5819 (and x3511 x6356)))
(assert (not (x2674 (x8452 64 x4803 3))))
(assert (x4101 x3877))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x4101 x6105))
(assert (x4101 x1107))
(assert (x4101 x1575))
(assert (x725 x1816))
(assert (= (and (not x6439) x2827) x1665))
(assert (x4101 x7461))
(assert (x4101 x3315))
(assert (x4101 x645))
(assert (x4101 x573))
(assert (= 36 (x6212 (x8452 64 x4521 36))))
(assert (x3760 x372 32))
(assert (x4101 x7430))
(assert (= 64 (x4519 (x8452 64 x3252 36))))
(assert (= x7270 (or x1113 x1259)))
(assert (x4101 x5171))
(assert (= (x3391 (x8452 64 x2743 36)) (x8452 64 x2743 36)))
(assert (= (and x4533 x2461) x8484))
(assert (x4101 x1810))
(assert (= x1560 (=> (and (= x4512 x3545) (= true x1437) (= x7573 0) (= 2 x2999) (= x4981 false) (= x4112 x6049) (= x8357 x6141) (= 36 x7614)) x2843)))
(assert (=> (>= 10000 x5447) (= 0 (x3391 x5447))))
(assert (x4101 x184))
(assert (x4101 x4159))
(assert (not (x2674 (x8452 64 x6260 3))))
(assert (=> (<= x335 10000) (= 0 (x3391 x335))))
(assert (= (=> (and (= x93 x2776) (= x2633 x3461) (= x8439 x6542) (= x577 x1182) (= x4944 x6175) (= x8287 x8274) (= x8285 x8594) (= x3843 x633) (= x5522 x5461) (= x7631 x2794) (= x7909 x3320) (= x2798 x4023) (= x1256 x7822) (= x4021 x4518)) x8598) x5915))
(assert (x4101 x7130))
(assert (= (x3391 (x8452 64 x8607 12)) (x8452 64 x8607 12)))
(assert (=> (<= x666 10000) (= (x3391 x666) 0)))
(assert (x4101 x1796))
(assert (x4101 x5913))
(assert (x4101 x100))
(assert (x4101 x4049))
(assert (> (x8452 x8105 x3148 x7367) 10000))
(assert (x4101 x2300))
(assert (= (x5740 (x8452 x5857 x8356 x6054)) x8356))
(assert (not (x2674 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819))))
(assert (= x5646 (x8370 (x6207 x5456 x254 x2993 x2587 x5865 x5646))))
(assert (= (and (not x4635) x1377) x4395))
(assert (x4057 (+ x547 31)))
(assert (x725 x7851))
(assert (=> (<= x4024 10000) (= 0 (x3391 x4024))))
(assert (= (x4955 (x6207 x7483 x4415 x1668 x2575 x5720 x7858)) x5720))
(assert (x4101 x1856))
(assert (not (x2674 (x5018 x8066 x5753 x4487 x1987 x5269))))
(assert (x4101 x2932))
(assert (= x707 (and x7934 x3685)))
(assert (x2371 x2663))
(assert (=> (>= 10000 x166) (= 0 (x3391 x166))))
(assert (= (x4519 (x3114 x8236 x270)) x8236))
(assert (x5189 x4675 256))
(assert (= x1366 (x842 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551))))
(assert (x4101 x3934))
(assert (x4101 x1092))
(assert (x4101 x4336))
(assert (x4101 x687))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x8247 x7491 x7316 x1399 x6343)))
(assert (x2371 (ite (not (= x2511 0)) 1 0)))
(assert (= (x658 x6655 x1562 x2988 x4015) (x3391 (x658 x6655 x1562 x2988 x4015))))
(assert (not (x2674 (x6207 x7301 x481 x345 x5672 x4986 x5616))))
(assert (x4101 x7796))
(assert (= (x6212 (x8452 64 x4024 2)) 2))
(assert (= (x8452 64 x2677 11) (x3391 (x8452 64 x2677 11))))
(assert (x5391 x4444))
(assert (x4101 x784))
(assert (= x8232 (and (not x6896) x7124)))
(assert (= (and (not x3727) x5860) x2377))
(assert (=> (>= 10000 x7006) (= (x3391 x7006) 0)))
(assert (= (x5740 (x8452 64 x4807 3)) x4807))
(assert (x4101 x4953))
(assert (= x4325 (x4955 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865))))
(assert (< (x3114 x6655 x5210) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4057 x7673))
(assert (x4101 x6702))
(assert (= (x3391 (x8452 64 x4803 3)) (x8452 64 x4803 3)))
(assert (= x3662 (=> (and (= x3623 x1618) (= 2 x4496) (= x2196 x735) (= x2416 x4507) (= x7561 x7042) (= x3682 x6021) (= x5796 x2452) (= x5103 true) (= x7227 x353) (= x4688 x5810) (= x6580 x3758) (= x2714 x2920) (= (x639 255 x4171) x7042) (= x5872 x8153) (= x4461 x6438) (= x6397 0) (= x7562 false) (= x7254 x1960)) x6750)))
(assert (= x4254 (or x7748 x5192)))
(assert (= (x3114 x8276 x7070) (x3391 (x3114 x8276 x7070))))
(assert (= x1263 (x4955 (x6207 x8105 x941 x8457 x6689 x1263 x3972))))
(assert (=> (<= x7172 10000) (= (x3391 x7172) 0)))
(assert (= (x3391 (x8452 64 x518 (ite (>= 32 x1404) x320 (ite (>= 64 x1404) x4133 (ite (>= 96 x1404) x1002 (ite (<= x1404 128) x4746 (ite (<= x1404 160) x8578 (ite (<= x1404 192) x996 x7067)))))))) (x8452 64 x518 (ite (<= x1404 32) x320 (ite (>= 64 x1404) x4133 (ite (<= x1404 96) x1002 (ite (>= 128 x1404) x4746 (ite (>= 160 x1404) x8578 (ite (>= 192 x1404) x996 x7067)))))))))
(assert (=> (<= x2409 10000) (= (x3391 x2409) 0)))
(assert (=> (>= 10000 x854) (= 0 (x3391 x854))))
(assert (> (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640) 10000))
(assert (x4101 x1395))
(assert (= (x8452 x4567 x2927 x1457) (x3391 (x8452 x4567 x2927 x1457))))
(assert (x4101 x39))
(assert (x4101 x1545))
(assert (> (x658 x6256 x7745 x8380 x6390) 10000))
(assert (= (x8452 64 x8494 6) (x3391 (x8452 64 x8494 6))))
(assert (x4101 x5678))
(assert (x4057 x4850))
(assert (= (x6212 (x8452 64 x6251 12)) 12))
(assert (x4101 x1748))
(assert (= 0 (x3391 38584857114614344130707641774870441135179346817440091772946614992565446901760)))
(assert (= (x4519 (x5018 x8066 x5753 x4487 x1987 x5269)) x8066))
(assert (= (x5740 (x658 x2327 x3217 x5002 x4915)) x3217))
(assert (= (x4519 (x8452 x8276 x6717 x3740)) x8276))
(assert (= x4936 (x5740 (x8452 64 x4936 0))))
(assert (x4101 x2285))
(assert (x4101 x4061))
(assert (x4101 x3461))
(assert (x4101 x5513))
(assert (not (x2674 (x3114 x2493 x4089))))
(assert (x4101 x4374))
(assert (= (x4519 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708)) x8247))
(assert (= 7 (x6212 (x8452 64 x5625 7))))
(assert (x4101 x3193))
(assert (x4101 x8022))
(assert (x4101 x2533))
(assert (x4101 x1714))
(assert (< (x6207 x3485 x136 x3977 x352 x6346 x7911) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5250))
(assert (=> (>= 10000 x5266) (= (x3391 x5266) 0)))
(assert (x4101 x640))
(assert (x4101 x3092))
(assert (= (=> (and (= x4401 (= 0 x5317)) (or (and (= 128 x1576) x4401) (and (and (= (+ 128 x6980) x1576) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x6980) (= x6980 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5330)) (<= 1 x6980) (= x5330 (x5665 (+ x5317 63)))) (not x4401)))) x8112) x3091))
(assert (=> (<= x8100 10000) (= 0 (x3391 x8100))))
(assert (= x8607 (x5740 (x8452 64 x8607 12))))
(assert (= x2653 (x842 (x6207 x1404 x1434 x7783 x2653 x69 x8128))))
(assert (x4101 x5761))
(assert (=> (>= 10000 x8140) (= 0 (x3391 x8140))))
(assert (= (and (not x3058) x8000) x8262))
(assert (= x699 (=> (and (and (= x6115 (x164 x3999)) (= x5618 (x164 x5661)) (= (x164 x284) x4072) (= x7889 (x164 x6226)) (= (x3114 x8236 x270) x4883) (= (x5665 (+ x5661 128)) x7362) (= x2409 (x164 x5661)) (= (x5665 (+ 160 x5661)) x4732) (= (x164 x8244) x1779) (= (x5665 (+ x5661 32)) x6448) (= x8496 (x164 x5661)) (<= x3728 224) (= x6395 (x164 x228)) (= (x164 x5661) x4680) (= x3392 (x5665 (+ 128 x5661))) (= (x5665 (+ 32 x5661)) x135) (= (x164 x1047) x3579) (= (x5665 (+ 96 x5661)) x814) (= x1353 (x5665 (+ x5661 64))) (= x5582 (x5018 x3728 x7647 x2836 x4072 x2598)) (= (x164 x1375) x4438) (= x4662 (x164 x8577)) (= x8236 (- x3728 32)) (= (x5665 (+ 128 x5661)) x3999) (= (x5665 (+ x5661 160)) x6121) (= (x5665 (+ 192 x5661)) x7942) (= x358 (x5665 (+ x5661 32))) (= (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551) x894) (= x4552 (x164 x5661)) (= x1191 (x5665 (+ 96 x5661))) (= (x8448 0) x4392) (= (x658 x8236 x2222 x6395 x5287) x5095) (= (x164 x772) x365) (= x5551 (x164 x7942)) (= (x164 x5661) x2222) (= (x164 x5630) x5503) (= (x5665 (+ 64 x5661)) x6469) (= (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707) x5937) (= x1981 (x5665 (+ 64 x5661))) (= (x5665 (+ x5661 64)) x6226) (= x6176 (x164 x5661)) (= (x164 x358) x7152) (= (x8038 x494) x2125) (= x538 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070)) (= x6751 (x8452 x3728 x6829 x267)) (= (x164 x3392) x1096) (= x267 (x164 x572)) (= (x5665 (+ x5661 64)) x1047) (= x8471 (x658 x3728 x4680 x8449 x7889)) (= (x3114 x3728 x1784) x4071) (= (x164 x1353) x1366) (= (x5665 (+ 96 x5661)) x1375) (= x284 (x5665 (+ x5661 64))) (= (x5665 (+ 96 x5661)) x6780) (= x6842 (x164 x191)) (= (x164 x5661) x3632) (= (x164 x5661) x270) (= (x5665 (+ 32 x5661)) x5630) (= x6273 (x164 x7362)) (= x2563 (x164 x1981)) (= (x164 x6469) x5489) (= (x164 x5101) x5287) (= x2836 (x164 x135)) (= (x5665 (+ x5661 32)) x228) (= x1345 (x164 x587)) (= x2730 (x5665 (+ 32 x5661))) (= (x164 x6121) x5546) (= x8479 (x5665 (+ x4853 32))) (= x3277 (x164 x5661)) (<= 32 x3728) (= x6055 (x5665 (+ x5661 32))) (= (x8452 64 x3712 (ite (<= x3728 32) x4071 (ite (<= x3728 64) x6751 (ite (<= x3728 96) x8471 (ite (>= 128 x3728) x5582 (ite (<= x3728 160) x7240 (ite (>= 192 x3728) x5937 x894))))))) x8382) (= x2344 (x164 x2285)) (= x8244 (x5665 (+ 32 x5661))) (= (x5665 (+ 64 x5661)) x772) (= x355 (x5665 (+ x5661 96))) (= (x6207 x8236 x5618 x2344 x5489 x7255 x1096) x368) (= x1383 (ite (= 0 x8236) x4392 (ite (<= x8236 32) x4883 (ite (>= 64 x8236) x6828 (ite (<= x8236 96) x5095 (ite (<= x8236 128) x4494 (ite (>= 160 x8236) x368 x538))))))) (= (x5665 (+ 32 x4866)) x5019) (= x6829 (x164 x5661)) (= (< 0 x2125) x1966) (= x587 (x5665 (+ x5661 96))) (= (x164 x6448) x8449) (= x833 (x164 x355)) (= (x164 x5661) x1784) (= x1511 (x5665 (+ x5661 32))) (= x721 (x5665 (+ 128 x5661))) (= (x164 x4311) x7671) (= (x164 x814) x7255) (= (x5665 (+ 64 x5661)) x5101) (= (x5665 (+ x5661 32)) x7530) (= x3707 (x164 x4740)) (= (x164 x6055) x5440) (= x8577 (x5665 (+ 96 x5661))) (= (x164 x721) x287) (= (x164 x2730) x1109) (= (x6207 x3728 x6176 x1012 x365 x1345 x6842) x7240) (= x7647 (x164 x5661)) (= x5070 (x164 x4732)) (= x4866 (x5665 (+ 160 x5661))) (= x2285 (x5665 (+ 32 x5661))) (= x4311 (x5665 (+ 64 x5661))) (= (x164 x7530) x1012) (= x3728 (x4456 (- x8479 x5661))) (= x7297 (x5665 (+ x3082 x5661))) (= x6828 (x8452 x8236 x4552 x7152)) (= x572 (x5665 (+ x5661 32))) (= x4494 (x5018 x8236 x8496 x1779 x7671 x5130)) (= x5130 (x164 x1191)) (= (x164 x6780) x2598) (= (x5665 (+ x5661 128)) x191) (= (x5665 (+ 160 x5661)) x4740) (= (x5665 (+ x3082 x5661)) x4853)) (or (not x1966) (and x1966 (and (and (= x4235 (x2466 x3116)) (= x4891 (> x2125 32))) (or (not x4891) (and x4891 (and (and (= x6366 (x5665 (+ x5019 32))) (= x8304 (x6776 x4565)) (= (> x2125 64) x5087) (= x4565 (x5665 (+ x3116 32)))) (or (not x5087) (and (and (or (and x2035 (and (= (x8390 x4049) x8440) (<= x2125 128) (= x4780 (x5665 (+ x5019 96))) (= x4049 (x5665 (+ 96 x3116))))) (not x2035)) (and (= x4650 (x5665 (+ 64 x5019))) (= (< 96 x2125) x2035) (= x1065 (x883 x8024)) (= x8024 (x5665 (+ 64 x3116))))) x5087))))))))) x6109)))
(assert (=> (<= x66 10000) (= (x3391 x66) 0)))
(assert (x2496 x2223))
(assert (= 1 (x5740 (x8452 64 1 x2328))))
(assert (x4101 x1726))
(assert (x4101 x1758))
(assert (x4101 x7348))
(assert (= (=> (and (= x3883 (x4456 (- x3742 x3164))) (= x6022 (x8452 64 x110 11)) (= (x621 x6661) x4414) (= (x8452 64 x4807 3) x8200) (= x2650 (x4426 x8200)) (= (x4456 (- x6364 32)) x5580) (= (x5665 (+ 32 x3164)) x5953) (= (< 0 x7314) x3054) (= (x8452 64 x110 11) x141) (= x3164 (x5665 (+ x4011 32))) (= (x639 1 x2650) x6112) (= x7819 (x5665 (+ x1432 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1432) (or (and (<= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639841) (<= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639773)) (= (x5665 (+ 32 x6777)) x3742) (> x3742 x3164) (= (x5665 (+ x5953 2)) x6777) (= (x4456 (- x3164 x1432)) x6364) (= x415 (+ x6022 2)) (= (x1623 x415) x3793) (= x6218 (x8452 64 x110 11)) (= x3668 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1432) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1432) (= (x4456 (- x6112 (mod (ite (< x2997 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x7314) (= (x8297 x2650 2) x2110) (> x3164 x1432) (or (<= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639773) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x1432) (>= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x4011 (x5665 (+ x7819 32))) (= (+ 1 x6218) x6661) (= x39 (x4456 (- x3883 32))) (= x2997 (ite (< 0 x6112) x2110 (x639 127 x2110))) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x1432) (>= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x1432) (>= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639841))) (and (=> (and x3054 (and (< x3742 x6320) (<= x3742 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x6320 (x5665 (+ x3742 (mod (+ 32 x7268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= x6320 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3742) (= x7268 (* x5767 32)) (= x771 (= x2997 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3742) (= x7076 (x5665 (+ 32 x3742))) (= x5767 (x8297 (+ x2997 31) 32)))) (and (=> (and (= x8579 (< 31 x2997)) (not x771)) (and (=> (and (and (or (and (and (= (x5665 (+ x4655 32)) x7161) (= x4546 (x2637 x6227)) (not (< x7161 x3546))) x2738) (not x2738)) (and (= x4654 (x2637 x4020)) (= (x3114 32 x8200) x4020) (= x4655 (x5665 (+ 32 x7076))) (= (+ 1 x4020) x6227) (= x2738 (< x4655 x3546)) (= x3546 (x5665 (+ x2997 x7076))))) x8579) x2755) (=> (and (not x8579) (and (= (x8297 x4525 256) x7492) (= (x4426 x8200) x4525) (= x1503 (* 256 x7492)))) x6674))) (=> x771 x6674))) (=> (and (not x3054) (and (= x4239 true) (= false x3185) (= 36 x26))) x395))) x4656))
(assert (x4101 x6993))
(assert (= x4227 (=> (and (= true x5420) (= false x7887) (= 0 x2533)) x5581)))
(assert (=> (>= 10000 x8553) (= 0 (x3391 x8553))))
(assert (= x6674 (=> (and (= x1319 (x4902 x3742)) (= (= x1319 0) x2761)) (and (=> (and (and (= (x8452 64 x4807 5) x4681) (= x3873 (> x8328 (ite (= 0 x2227) 10000 x2227))) (= (x297 x4681) x2227) (= (x5334 x1432) x8328)) (not x2761)) (and (=> (and (and (= x3283 (x5665 (+ x137 32))) (= x26 100) (= x2111 (x5665 (+ x3283 32))) (= x137 (x5665 (+ x6320 4))) (= x7605 true) (= false x1320)) x3873) x395) (=> (and (and (= (x4902 x3742) x7532) (= (x5665 (+ x3106 x8054)) x1919) (= (x5665 (+ 32 x3492)) x4888) (= x3826 (x5665 (+ 32 x6399))) (= x2114 (= 0 x189)) (= x3492 (x5665 (+ 32 x4278))) (= (x4456 (- x407 x6399)) x4297) (= x8019 (x5665 (+ 192 x6399))) (= x7810 (x5665 (+ 32 x3164))) (= x2676 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4538)) (= (x5665 (+ x2162 x769)) x407) (= x2162 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4854)) (= x7354 (x5665 (+ x1432 32))) (= x4854 (x5665 (+ x1020 31))) (= (x5665 (+ 32 x8019)) x3106) (= x769 (x5665 (+ x1919 32))) (= x4278 (x5665 (+ 32 x3826))) (= x8054 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1086)) (= x189 (x7676 x7820)) (= (x4456 (- x1919 x6399)) x53) (= (x5665 (+ 32 x4888)) x1810) (= (x6652 x3164) x231) (= x6399 (x5665 (+ 4 x6320))) (= x1086 (x5665 (+ x7532 31))) (= x1020 (x5334 x1432)) (= (x5665 (+ x2177 x2676)) x7069) (= (x5665 (+ x231 31)) x4538) (= (x4456 (- x7069 x6320)) x4387) (= (x5665 (+ x407 32)) x2177)) (not x3873)) (and (=> (and (and (= 0 x26) (= x2158 true) (= x206 false)) x2114) x395) (=> (and (and (= (and x3713 x8091) x2819) (= x1003 (x3458 x666)) (= x8091 (>= x1003 x5135)) (= (x3458 x7820) x2830) (= x3713 (< (+ x2830 x5135) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x2114)) (and (=> (and (and (= (x520 x7820) x3744) (= 3313512704 x7083) (= x7418 0) (= (= (x3576 196) x7532) x5648) (>= x7674 1) (<= 420 x4387) (= x7223 (or (and (= true (<= (- x6046 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (- x6046 4) 192)) (> (- x6046 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x751 x7459) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x4742) x5648 (= false x5240) (<= x890 127) (= x4834 (- x874 x5135)) (= (x7676 x8315) x7674) (= x6929 x53) (= x874 (x3458 x666)) (= x5433 x4807) (< (+ x3744 x5135) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x751 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 127 x890) (<= 420 x6046) (= x751 (+ x3744 x5135)) (= false x6308) (>= x751 0) (= x6498 192) (= x4297 x500) (= x666 x5067) (= x4387 x6046)) x2819) (and (=> (and (= true x662) (not x7223)) (and (=> (not x662) x4482) (=> (and x662 (= (and (> x6046 227) (= (<= x6046 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x3361)) (and (=> (not x3361) x8221) (=> (and x3361 (and (= x2411 (x900 196)) (= (> x2411 18446744073709551615) x3028))) (and (=> (and (not x3028) (and (= x7365 (< x6046 x162)) (= (x5665 (+ 228 x2411)) x162))) (and (=> x7365 x3868) (=> (and (not x7365) (= (< 18446744073709551615 x53) x6551)) (and (=> x6551 x4482) (=> (and (and (= (x5665 (+ 31 x3888)) x4432) (= (x5665 (+ 4 x53)) x3888) (= (or (and (> x4432 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x6046 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6046) (<= x4432 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4432 x6046))) x3939)) (not x6551)) (and (=> (not x3939) x8221) (=> (and x3939 (and (= x272 (> x8139 18446744073709551615)) (= x8139 (x900 x3888)))) (and (=> (and (not x272) (and (= x2882 (x5665 (+ x916 x8139))) (= x916 (x5665 (+ 32 x3888))) (= x3413 (> x2882 x6046)))) (and (=> (and (not x3413) (= (< 18446744073709551615 x4297) x3542)) (and (=> (and (and (= x5196 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6046) (> x2623 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x2623 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x6046 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2623 x6046)))) (= x2623 (x5665 (+ 31 x495))) (= x495 (x5665 (+ x4297 4)))) (not x3542)) (and (=> (not x5196) x8221) (=> (and (and (= x7749 (x900 x495)) (= (< 18446744073709551615 x7749) x2870)) x5196) (and (=> (and (not x2870) (and (= (x5665 (+ x7471 x7749)) x2664) (= x4706 (> x2664 x6046)) (= (x5665 (+ 32 x495)) x7471))) (and (=> (and (not x4706) (and (= x4896 x3334) (= x5354 1) (= x1192 x8147) (= x3991 x8252) (= x6549 x1787))) x5867) (=> x4706 x3868))) (=> x2870 x6997))))) (=> x3542 x4482))) (=> x3413 x3868))) (=> x272 x6997))))))))) (=> x3028 x6997))))))) (=> x7223 x4482))) (=> (and (not x2819) (and (= x8252 x7398) (= x4896 x6963) (= x8147 x3135) (= 0 x3042) (= x6549 x5924))) x2085))))))) (=> (and (and (= x4544 (x5665 (+ x1251 32))) (= true x2957) (= false x2335) (= x26 132) (= x4044 (x5665 (+ 4 x6320))) (= (x5665 (+ x4044 32)) x7251) (= (x5665 (+ x7251 32)) x1251)) x2761) x395)))))
(assert (x4101 x2650))
(assert (x4101 x8123))
(assert (x2371 x4933))
(assert (x4101 x6162))
(assert (= (or x835 x8216) x2224))
(assert (x4101 x7548))
(assert (= (x658 x7483 x3123 x2877 x670) (x3391 (x658 x7483 x3123 x2877 x670))))
(assert (= x400 (and x6082 x3622)))
(assert (x4101 x6784))
(assert (x2371 x7492))
(assert (x4101 x2773))
(assert (= (x3391 (x8452 x7301 x8339 x60)) (x8452 x7301 x8339 x60)))
(assert (x4101 x4414))
(assert (< (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x5773) x6803) x6504))
(assert (x4101 x3819))
(assert (= (=> (and (= x5245 true) (= 0 x7200) (= false x4991)) x8176) x1833))
(assert (= (and x6077 (not x5932)) x3053))
(assert (x4101 x2183))
(assert (x2674 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (x4101 x2337))
(assert (= (x6212 (x8452 64 x8494 6)) 6))
(assert (= x3868 x4482))
(assert (x4057 x6101))
(assert (x4101 x5686))
(assert (x4101 x5262))
(assert (= x8387 (and x4979 x301)))
(assert (x3760 x4179 32))
(assert (x725 x5072))
(assert (x4101 x5613))
(assert (x4101 x4758))
(assert (x2371 x2200))
(assert (x4057 x2571))
(assert (= x8105 (x4519 (x3114 x8105 x4237))))
(assert (=> (>= 10000 x4427) (= 0 (x3391 x4427))))
(assert (x4101 x8500))
(assert (x5391 x4640))
(assert (x4101 x3632))
(assert (x4101 x5797))
(assert (= (x4955 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)) x7615))
(assert (x4101 x5260))
(assert (x4101 x2619))
(assert (x5997 x3374))
(assert (=> (>= 10000 x2260) (= (x3391 x2260) 0)))
(assert (x2371 1000000000))
(assert (< (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x6140 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803)) x5803))
(assert (> (x8452 64 x6515 6) 10000))
(assert (= (x4519 (x3114 x7483 x7006)) x7483))
(assert (= 11 (x6212 (x8452 64 x5710 11))))
(assert (not (x2674 (x8452 64 x666 2))))
(assert (=> (<= x6395 10000) (= 0 (x3391 x6395))))
(assert (= x841 (and (not x6278) x6665)))
(assert (x4101 x452))
(assert (x4101 x4066))
(assert (= (x6212 (x8452 64 x1544 7)) 7))
(assert (x5528 x4640))
(assert (x4101 x3905))
(assert (x4101 x7173))
(assert (=> (>= 10000 x7317) (= (x3391 x7317) 0)))
(assert (x4101 x753))
(assert (x3760 x1865 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x3271))
(assert (x4101 x1981))
(assert (x725 x8507))
(assert (x4101 x7074))
(assert (x4101 x6804))
(assert (= x7797 (x5740 (x8452 64 x7797 36))))
(assert (x25 256 x6324))
(assert (=> (>= 10000 x8607) (= 0 (x3391 x8607))))
(assert (=> (>= 10000 x1538) (= 0 (x3391 x1538))))
(assert (x4101 x1824))
(assert (x5189 x5920 32))
(assert (= (x4519 (x5018 x2493 x6149 x1732 x3117 x8016)) x2493))
(assert (= x7533 (and x6066 x7278)))
(assert (x2371 (ite (not (= x957 0)) 1 0)))
(assert (x725 x6795))
(assert (x4101 x7810))
(assert (= x1215 (and x8497 x4506)))
(assert (x4101 x4987))
(assert (x4101 x6176))
(assert (x4101 x4366))
(assert (= (and (not x2461) x4533) x5029))
(assert (x8137 x1674))
(assert (=> (>= 10000 x2259) (= 0 (x3391 x2259))))
(assert (x4101 x1244))
(assert (=> (>= 10000 x7316) (= 0 (x3391 x7316))))
(assert (x4101 x8089))
(assert (x4101 x5568))
(assert (x4101 x1323))
(assert (x4101 x4209))
(assert (< 10000 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x5456 x254 x2993 x2587 x5865 x5646)))
(assert (= x5100 (or x8292 x3206)))
(assert (= (x842 (x6207 x8105 x941 x8457 x6689 x1263 x3972)) x6689))
(assert (= 12 (x6212 (x8452 64 x8458 12))))
(assert (x4101 x2302))
(assert (x4101 x1294))
(assert (x4101 x4304))
(assert (= (=> (and (= 0 x1340) (= x3545 x935) (= x4874 x4574) (= x3156 x1730) (= x3076 1) (= x7191 x4112)) x402) x7197))
(assert (= x8105 (x4519 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291))))
(assert (x4101 x3966))
(assert (x4101 x1648))
(assert (x4101 x4735))
(assert (x5391 x1712))
(assert (=> (<= x7865 10000) (= (x3391 x7865) 0)))
(assert (x4101 x2343))
(assert (= (x6212 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708)) x2917))
(assert (= x3065 (and x255 x3990)))
(assert (x4101 x8211))
(assert (x4101 x8586))
(assert (=> (>= 10000 x5827) (= (x3391 x5827) 0)))
(assert (x4101 x5342))
(assert (x4101 x7614))
(assert (< (x8452 x7301 x8339 x60) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x8452 64 x666 1) 10000))
(assert (x4101 x4275))
(assert (= (and (not x1078) x2388) x3489))
(assert (=> (>= 10000 x5667) (= 0 (x3391 x5667))))
(assert (x4101 x1836))
(assert (=> (<= x5274 10000) (= (x3391 x5274) 0)))
(assert (x4101 x2092))
(assert (not (x2674 (x8452 64 x4024 2))))
(assert (= x2190 (or x1337 x2377 x5393 x2426 x2333 x3828)))
(assert (= (and x7232 (not x1454)) x6604))
(assert (= (x8370 (x6207 x8066 x1862 x2624 x99 x6072 x1363)) x1363))
(assert (x2496 x6598))
(assert (x3760 x5199 32))
(assert (x3481 x5199))
(assert (= x7911 (x8370 (x6207 x3485 x136 x3977 x352 x6346 x7911))))
(assert (x4101 x7631))
(assert (not (x2674 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733))))
(assert (x2371 x6785))
(assert (= (or x3771 x4222) x2324))
(assert (= (and x1549 x6837) x7494))
(assert (= x2493 (x4519 (x3114 x2493 x4089))))
(assert (x4101 x8531))
(assert (x4101 x4171))
(assert (= x5765 (and x5033 (not x2705))))
(assert (x4101 x529))
(assert (x3760 x4409 256))
(assert (x4101 x782))
(assert (x4101 x8367))
(assert (= (x4519 (x8452 64 x7904 36)) 64))
(assert (> (x8452 64 x6788 12) 10000))
(assert (x4101 x6711))
(assert (x4101 x2145))
(assert (x4101 x2714))
(assert (x4101 x4040))
(assert (x4101 x3682))
(assert (= x8444 (x8370 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239))))
(assert (= x8458 (x5740 (x8452 64 x8458 12))))
(assert (= x3626 (and x2742 x7996)))
(assert (x725 x4444))
(assert (x3760 x1674 256))
(assert (= (and x6182 x5878) x6849))
(assert (=> (<= x4924 10000) (= 0 (x3391 x4924))))
(assert (x4101 x2448))
(assert (x4101 x6107))
(assert (= x2990 (and x1773 (not x6085))))
(assert (not (x2674 (x5018 x7301 x6276 x3370 x6512 x4475))))
(assert (x4101 x5011))
(assert (= (x5740 (x3114 32 x238)) x238))
(assert (= x8322 (and x3367 x2750)))
(assert (x4101 x4164))
(assert (=> (<= x8101 10000) (= (x3391 x8101) 0)))
(assert (= x2667 (or x4219 x2015 x3791)))
(assert (x4101 x1426))
(assert (< (x8452 64 x1649 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x7116))
(assert (=> (<= x8393 10000) (= 0 (x3391 x8393))))
(assert (x4101 x2489))
(assert (=> (>= 10000 x1462) (= (x3391 x1462) 0)))
(assert (= (and x2381 (not x915)) x4744))
(assert (= (and x7805 (not x7147)) x5144))
(assert (= (=> (= (+ x4613 292) x3009) x2835) x8602))
(assert (= (and (not x2341) x8262) x180))
(assert (x4101 x8217))
(assert (= (and (not x4323) x2214) x5295))
(assert (x4101 x5626))
(assert (=> (>= 10000 x7167) (= 0 (x3391 x7167))))
(assert (x4101 x8105))
(assert (x3760 x4529 256))
(assert (> (x8452 64 x8494 6) 10000))
(assert (x4101 x4567))
(assert (x3481 x2773))
(assert (x4101 x6056))
(assert (x4101 x4970))
(assert (x4101 x3729))
(assert (x4101 x3214))
(assert (= x3021 (=> (= (= x1948 0) x7034) (and (=> (and (not x7034) (and (= 1 x497) (= x4879 x2792) (= x640 x1508) (= x6252 x6966) (= x5598 x7252) (= x4953 x1842) (= x8008 x1812) (= x653 x2938) (= x6568 x8170) (= x8203 x1283) (= 0 x4090) (= x6650 x1022) (= x7488 x825) (= x1976 x1568) (= x4553 x738))) x5223) (=> (and (and (= x987 false) (= x5253 0) (= x4977 true)) x7034) x959)))))
(assert (= (x4117 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865)) x7865))
(assert (not (x2674 (x8452 x6655 x5638 x3262))))
(assert (x5391 x6496))
(assert (x4101 x8366))
(assert (> (x6207 x8105 x941 x8457 x6689 x1263 x3972) 10000))
(assert (x4101 x5617))
(assert (=> (<= x1657 10000) (= 0 (x3391 x1657))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 32 x8200)))
(assert (x4101 x6905))
(assert (x4101 x6902))
(assert (= (and x1646 x8450) x727))
(assert (= (and x8149 x7518) x8012))
(assert (= x7301 (x4519 (x658 x7301 x6879 x5406 x821))))
(assert (= x8393 (x6140 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393))))
(assert (x4101 x7252))
(assert (= x6334 (or x22 x5415)))
(assert (x4101 x2849))
(assert (= (x5740 (x8452 64 x4024 36)) x4024))
(assert (= (x6212 (x8452 64 x1528 36)) 36))
(assert (=> (>= 10000 x8606) (= (x3391 x8606) 0)))
(assert (x4101 x8347))
(assert (> (x8452 64 x983 6) 10000))
(assert (= (and (not x2037) x5791) x1741))
(assert (x4101 x6892))
(assert (x3760 x3786 2))
(assert (not (x2674 (x8452 64 x6788 12))))
(assert (= x2891 (and (not x607) x201)))
(assert (= (and x4401 x5081) x3938))
(assert (x8137 x793))
(assert (x4101 x4283))
(assert (x4101 x5012))
(assert (x4101 x5130))
(assert (= (x5018 x6655 x7778 x3104 x3601 x1789) (x3391 (x5018 x6655 x7778 x3104 x3601 x1789))))
(assert (= (x4519 (x8452 64 x6788 12)) 64))
(assert (= (x5740 (x5018 x2493 x6149 x1732 x3117 x8016)) x6149))
(assert (=> (<= x6072 10000) (= (x3391 x6072) 0)))
(assert (x4101 x701))
(assert (x4101 x2689))
(assert (x4101 x8572))
(assert (x4101 x2564))
(assert (= (=> (and (= (x2491 516) x3146) (= x2566 (= x3146 0))) (and (=> (and (and (= (x5665 (+ x8522 32)) x2421) (= 132 x4122) (= (x5665 (+ 4 x5595)) x3105) (= true x6743) (= x8522 (x5665 (+ x3105 32))) (= false x4579) (= (x5665 (+ 32 x2421)) x2953)) x2566) x2163) (=> (and (and (= x2301 (x4247 354)) (= x955 (x8452 64 x4807 5)) (= (> x2301 (ite (= 0 x2295) 10000 x2295)) x7579) (= x2295 (x297 x955))) (not x2566)) (and (=> (and x7579 (and (= x5563 true) (= x1559 (x5665 (+ 32 x409))) (= x7456 false) (= 100 x4122) (= x2486 (x5665 (+ 4 x5595))) (= x409 (x5665 (+ 32 x2486))))) x2163) (=> (and (not x7579) (and (= x8355 (x5665 (+ 32 x5627))) (= x8414 (x7676 x2081)) (= (x5665 (+ x1062 x6345)) x4481) (= x5627 (x5665 (+ x5595 4))) (= x7318 (x5665 (+ x5902 32))) (= (x5665 (+ x5579 32)) x3421) (= x1059 (x4456 (- x6805 x5627))) (= (= 0 x8414) x1220) (= x5671 (x4456 (- x4481 x5595))) (= x7141 (x4456 (- x1672 x5627))) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1294) x2382) (= (x5665 (+ 31 x4918)) x331) (= (x2491 516) x7039) (= x6899 (x5665 (+ 32 x8355))) (= (x4247 354) x4918) (= x1294 (x5665 (+ x7039 31))) (= (x5665 (+ x7318 32)) x5550) (= x4696 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x331)) (= (x1396 450) x4912) (= x6805 (x5665 (+ x4696 x2605))) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4149) x1062) (= (x5665 (+ x4912 31)) x4149) (= x1672 (x5665 (+ x2382 x3421))) (= (x5665 (+ x6899 32)) x5902) (= (x5665 (+ 192 x5627)) x5579) (= x6345 (x5665 (+ 32 x6805))) (= x2605 (x5665 (+ 32 x1672))))) (and (=> (and (and (= x4463 (<= x265 x6737)) (= (x2329 x2081) x739) (= (x2329 x666) x6737) (= x2018 (< (+ x265 x739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x6943 (and x4463 x2018))) (not x1220)) (and (=> (and (and (= x2728 x6729) (= x3011 0) (= x1253 x2356) (= x1077 x4534) (= x1107 x2095)) (not x6943)) x7945) (=> (and (and (= x8462 (x7676 x8315)) (= (= x7039 (x7156 196)) x3429) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5531 x265)) (= x701 192) (= x3480 3313512704) (>= x8462 1) (= x4807 x1938) (= x5671 x1327) (= (- x1886 x265) x2865) (= x2793 false) (>= x5671 420) (= x7141 x5549) (= (x6605 x2081) x5531) (= x83 x666) (= x1059 x1652) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x8156) (= (or (and (= true (<= (- x1327 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (- x1327 4) 192)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1327 4))) x6060) (<= 0 x3463) (= (+ x5531 x265) x3463) (= x1886 (x2329 x666)) (<= x3463 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x4264 127) (= false x5403) (= 0 x1400) (= x5975 x3463) (>= x1327 420) (<= x4264 127) x3429) x6943) (and (=> x6060 x441) (=> (and (not x6060) (= true x4322)) (and (=> (not x4322) x441) (=> (and (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1327) true) (< 227 x1327)) x7446) x4322) (and (=> (and x7446 (and (= (< 18446744073709551615 x3242) x1050) (= (x3896 196) x3242))) (and (=> (and (not x1050) (and (= x2701 (< x1327 x4402)) (= x4402 (x5665 (+ 228 x3242))))) (and (=> x2701 x1910) (=> (and (= x7387 (< 18446744073709551615 x7141)) (not x2701)) (and (=> (and (not x7387) (and (= x1408 (x5665 (+ x1465 31))) (= (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1408) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1327)) (and (< x1408 x1327) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1408) (<= x1327 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x4806) (= x1465 (x5665 (+ 4 x7141))))) (and (=> (and x4806 (and (= x3247 (< 18446744073709551615 x8540)) (= x8540 (x3896 x1465)))) (and (=> (and (not x3247) (and (= (x5665 (+ x1465 32)) x5355) (= x5679 (< x1327 x6197)) (= (x5665 (+ x8540 x5355)) x6197))) (and (=> x5679 x1910) (=> (and (not x5679) (= (> x1059 18446744073709551615) x4764)) (and (=> (and (not x4764) (and (= (x5665 (+ x1059 4)) x211) (= (or (and (<= x1327 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x299)) (and (= (<= x1327 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x299)) (< x299 x1327))) x7104) (= (x5665 (+ x211 31)) x299))) (and (=> (not x7104) x1997) (=> (and x7104 (and (= x4152 (> x7611 18446744073709551615)) (= x7611 (x3896 x211)))) (and (=> x4152 x163) (=> (and (not x4152) (and (= (x5665 (+ 32 x211)) x1121) (= x5116 (x5665 (+ x7611 x1121))) (= x7395 (> x5116 x1327)))) (and (=> (and (not x7395) (and (= x4164 x4534) (= x5700 1) (= x1253 x7400) (= x4925 x2095) (= x2941 x6729))) x5028) (=> x7395 x1910))))))) (=> x4764 x441))))) (=> x3247 x163))) (=> (not x4806) x1997))) (=> x7387 x441))))) (=> x1050 x163))) (=> (not x7446) x1997))))))))) (=> (and x1220 (and (= x4122 0) (= x2543 false) (= true x3756))) x2163))))))) x5521))
(assert (= (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073) (x3391 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (=> (<= x7432 10000) (= (x3391 x7432) 0)))
(assert (= x4928 (x842 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828))))
(assert (x4101 x7297))
(assert (x4101 x7316))
(assert (x25 32 x4125))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665)))
(assert (x4101 x1511))
(assert (x4101 x5467))
(assert (= (x5740 (x8452 64 x6251 12)) x6251))
(assert (= (x3391 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190)) (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190)))
(assert (x4101 x3870))
(assert (x4101 x3874))
(assert (= 0 (x3391 34591783479076665122502074927488338969190252781858077677016911635275368785765)))
(assert (x4101 x153))
(assert (x4101 x4486))
(assert (x4101 x3360))
(assert (x4101 x7526))
(assert (= (x8452 64 x4417 6) (x3391 (x8452 64 x4417 6))))
(assert (x4101 x2128))
(assert (= x8128 (x8370 (x6207 x1404 x1434 x7783 x2653 x69 x8128))))
(assert (x4101 x479))
(assert (=> (<= x428 10000) (= 0 (x3391 x428))))
(assert (= (x4519 (x8452 64 x4024 36)) 64))
(assert (x4101 x7152))
(assert (= x6120 (and x2861 x6619)))
(assert (x4101 x5120))
(assert (x4101 x6337))
(assert (> (x5018 x4567 x7844 x3878 x6416 x1409) 10000))
(assert (x4101 x8048))
(assert (x4101 x3048))
(assert (= x256 (and (not x5768) x2763)))
(assert (x4101 x302))
(assert (x4101 x6002))
(assert (x4101 x7317))
(assert (< 10000 (x3114 32 104)))
(assert (x4101 x5401))
(assert (= (and (not x4895) x7951) x91))
(assert (= (x842 (x658 x2327 x3217 x5002 x4915)) x4915))
(assert (= (or x5100 x3015) x4138))
(assert (= (=> (and (= x1735 x3181) (= x2284 x5831) (= x5381 x7129) (= x7406 x1832) (= x1483 x7417) (= x1179 x5725) (= x5467 x529) (= x5511 x553) (= x3743 x1506) (= x2885 x6327) (= x7900 x1759) (= x232 x5293) (= x4441 x7327)) x4884) x186))
(assert (x4101 x5780))
(assert (x3760 x6194 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x8134))
(assert (= x7585 (x842 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (not (x2674 (x5018 x6601 x1538 x2378 x3456 x2871))))
(assert (x4101 x1157))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x7483 x7006)))
(assert (= x7284 (=> (and (= x4313 x6713) (= 2 x2626) (= x7930 x3595) (= x1196 x390) (= x5488 x8014) (= x4313 (x639 255 x6321)) (= x4445 x5399) (= false x5702) (= x1395 x1292) (= x7632 x2756) (= x3802 x2571) (= x4560 x1648) (= 0 x2876) (= x7032 x40) (= 0 x2283) (= x3365 x5946) (= x4760 x7708) (= true x2654) (= x7808 x826)) x7680)))
(assert (= (x842 (x6207 x6609 x665 x2145 x377 x444 x8061)) x377))
(assert (= x6037 (and (not x8179) x7511)))
(assert (not (x2674 (x6207 x7483 x4415 x1668 x2575 x5720 x7858))))
(assert (= (x842 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717)) x8606))
(assert (x4101 x6740))
(assert (x4101 x8245))
(assert (=> (<= x2837 10000) (= 0 (x3391 x2837))))
(assert (x4101 x7091))
(assert (x4101 x3601))
(assert (x4101 x7392))
(assert (x4101 x5303))
(assert (=> (<= x2615 10000) (= (x3391 x2615) 0)))
(assert (x4101 x3583))
(assert (x4101 x3042))
(assert (x4101 x2344))
(assert (x4101 x5724))
(assert (> (x8452 64 x4417 2) 10000))
(assert (x4101 x5909))
(assert (x4101 x2295))
(assert (x4101 x2498))
(assert (x4101 x8125))
(assert (=> (>= 10000 x1493) (= (x3391 x1493) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551)))
(assert (x4101 x3679))
(assert (x4101 x1374))
(assert (x4101 x8606))
(assert (= x1316 (and x8558 (not x7313))))
(assert (x4101 x7174))
(assert (x4101 x1425))
(assert (= (x6140 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665)) x3943))
(assert (x4101 x5293))
(assert (= (x4519 (x6207 x8276 x7633 x667 x44 x579 x2604)) x8276))
(assert (= (x4955 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) x3612))
(assert (x4101 x7491))
(assert (x4101 x1763))
(assert (> (x658 x6655 x1562 x2988 x4015) 10000))
(assert (x2496 x3386))
(assert (= (x8452 64 x4803 7) (x3391 (x8452 64 x4803 7))))
(assert (x4101 x3116))
(assert (=> (>= 10000 x5439) (= 0 (x3391 x5439))))
(assert (x4101 x4546))
(assert (=> (<= x7469 10000) (= 0 (x3391 x7469))))
(assert (x4101 x7838))
(assert (= x7317 (x842 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665))))
(assert (x4057 x5920))
(assert (x8137 x221))
(assert (x4101 x389))
(assert (x4101 x4224))
(assert (= x6416 (x842 (x5018 x4567 x7844 x3878 x6416 x1409))))
(assert (x4101 x624))
(assert (= (or (and x2488 x4706) (and x3643 x3413) (and x3858 x7365)) x5854))
(assert (= x7574 (x4955 (x5018 x3485 x4823 x5174 x8145 x7574))))
(assert (< 10000 (x8452 64 x518 (ite (<= x3485 32) x2064 (ite (>= 64 x3485) x4186 (ite (>= 96 x3485) x6866 (ite (<= x3485 128) x49 (ite (<= x3485 160) x6094 (ite (>= 192 x3485) x8413 x749)))))))))
(assert (= (x4519 (x6207 x6601 x1154 x6468 x2260 x2279 x5339)) x6601))
(assert (x4101 x7925))
(assert (x4101 x1875))
(assert (not (x2674 (x3114 x1404 x3702))))
(assert (x4101 x7649))
(assert (= (x8370 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640)) x3274))
(assert (x4101 x2642))
(assert (x2674 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (= (and x2431 (not x2751)) x2737))
(assert (< 10000 (x8452 64 x4447 (ite (<= x8276 32) x1918 (ite (>= 64 x8276) x2640 (ite (>= 96 x8276) x3301 (ite (>= 128 x8276) x7339 (ite (>= 160 x8276) x4113 (ite (<= x8276 192) x933 x7974)))))))))
(assert (x4101 x162))
(assert (x3760 x384 128))
(assert (x4101 x1906))
(assert (x4101 x582))
(assert (= x3497 (x8370 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613))))
(assert (= x434 (and x374 (not x2864))))
(assert (x4101 x7749))
(assert (= (and x7859 (not x3327)) x6322))
(assert (x4101 x3476))
(assert (x8137 x8556))
(assert (x725 x384))
(assert (x4101 x4532))
(assert (=> (>= 10000 x3907) (= (x3391 x3907) 0)))
(assert (= x7055 (x5740 (x8452 64 x7055 6))))
(assert (< (x8452 64 x1308 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x4022))
(assert (x4101 x4804))
(assert (=> (<= x5108 10000) (= (x3391 x5108) 0)))
(assert (x4101 x5895))
(assert (x4101 x1974))
(assert (=> (<= x377 10000) (= (x3391 x377) 0)))
(assert (x25 256 x990))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x2493 x5680 x3170)))
(assert (= (and x4398 (not x388)) x6904))
(assert (x4101 x5453))
(assert (=> (<= x3211 10000) (= 0 (x3391 x3211))))
(assert (=> (>= 10000 x2008) (= 0 (x3391 x2008))))
(assert (< (x3114 32 x8158) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5076))
(assert (x25 32 x2572))
(assert (= (=> (and (= x4112 x6243) (= x6141 x6477) (= 0 x8226) (= x4609 x3545) (= (x639 255 x5273) x7035) (= x5458 x7035) (= 2 x380) (= x4122 x2672)) x327) x2163))
(assert (x4101 x8172))
(assert (x4101 x3241))
(assert (x3760 x7851 32))
(assert (x4101 x1508))
(assert (> (x3114 x954 x2658) 10000))
(assert (x4101 x2941))
(assert (x4101 x2902))
(assert (=> (<= x5236 10000) (= 0 (x3391 x5236))))
(assert (x4101 x4944))
(assert (x4101 x1653))
(assert (= x8026 x4989))
(assert (= x6907 (and x7869 x1025)))
(assert (x4101 x6706))
(assert (= (x5740 (x8452 64 x6760 (ite (<= x8247 32) x7566 (ite (>= 64 x8247) x4627 (ite (>= 96 x8247) x7341 (ite (<= x8247 128) x4092 (ite (<= x8247 160) x6845 (ite (>= 192 x8247) x692 x7767)))))))) x6760))
(assert (= x761 (x4955 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239))))
(assert (= (and x4314 x5366) x1415))
(assert (x4101 x2927))
(assert (= x7685 (and x5180 x6268)))
(assert (x5391 x1865))
(assert (not (x2674 (x3114 x6609 x6160))))
(assert (= (x3391 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828)) (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828)))
(assert (= (and x1168 x5751) x4129))
(assert (x25 32 x5767))
(assert (x4101 x4112))
(assert (= x907 (x5740 (x3114 x7301 x907))))
(assert (x4101 x7388))
(assert (= x6571 (=> (and (or x2503 (not x2503)) (= x2503 (= 0 x785))) x5887)))
(assert (= x310 (and x5203 x4663)))
(assert (x4101 x7125))
(assert (x4101 x7275))
(assert (= x5336 (x4117 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336))))
(assert (x4101 x5762))
(assert (x4101 x5894))
(assert (= x5015 (or x2524 x5214)))
(assert (x725 x4980))
(assert (x4101 x409))
(assert (< 10000 (x8452 64 x7055 6)))
(assert (x4101 x6617))
(assert (x4101 x2643))
(assert (x4101 x2785))
(assert (x2496 x852))
(assert (=> (<= x4803 10000) (= (x3391 x4803) 0)))
(assert (x4101 x6479))
(assert (x4101 x7243))
(assert (= x2039 x7284))
(assert (x4101 x3211))
(assert (= (x8452 64 x1648 4) (x3391 (x8452 64 x1648 4))))
(assert (x4101 x4644))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717)))
(assert (not (x2674 (x658 x8236 x2222 x6395 x5287))))
(assert (x25 32 x1417))
(assert (x4101 x2986))
(assert (x3481 x2630))
(assert (x4101 x1660))
(assert (x4910 x2571))
(assert (x4101 x2244))
(assert (x4101 x1399))
(assert (x4101 x3352))
(assert (= (and x1165 x3951) x3736))
(assert (x4101 x3025))
(assert (=> (>= 10000 x1648) (= (x3391 x1648) 0)))
(assert (x4101 x5732))
(assert (=> (>= 10000 x2476) (= 0 (x3391 x2476))))
(assert (x4101 x4906))
(assert (= x5109 (or (and (not x5641) x5226) (and (not x7929) x3325))))
(assert (= x6129 (or x5338 x6472 x5615 x5758 x5819)))
(assert (x4101 x4196))
(assert (x5528 x5024))
(assert (x725 x2869))
(assert (= (and x8364 x8456) x4816))
(assert (x4101 x1858))
(assert (= (x5740 (x3114 x6601 x80)) x80))
(assert (x4101 x3834))
(assert (x4101 x4676))
(assert (x4101 x8438))
(assert (= x3776 (and x2431 x2751)))
(assert (x4101 x952))
(assert (x3760 x372 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x668))
(assert (x725 x6306))
(assert (x4101 x4250))
(assert (x4101 x4562))
(assert (x4101 x6362))
(assert (= x8000 (and (not x4663) x5203)))
(assert (x4101 x221))
(assert (x725 x8180))
(assert (= (x6212 (x8452 64 x1648 3)) 3))
(assert (= (x3391 (x3114 x6256 x2579)) (x3114 x6256 x2579)))
(assert (= x5194 (and x3289 x8010)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x3728 x7647 x2836 x4072 x2598)))
(assert (= (and (not x2133) x5474) x2823))
(assert (= (x842 (x6207 x8247 x2495 x8394 x2135 x4427 x5325)) x2135))
(assert (x3760 x5699 256))
(assert (x5391 x1294))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x6609 x5827 x1042)))
(assert (x3760 x2478 256))
(assert (=> (>= 10000 x41) (= (x3391 x41) 0)))
(assert (x2496 x470))
(assert (= x4238 (x6212 (x6207 x4567 x5929 x4238 x5321 x5266 x4424))))
(assert (= 3 (x6212 (x8452 64 x4807 3))))
(assert (not (x2674 (x8452 64 1 x7211))))
(assert (x4101 x5272))
(assert (= (x3391 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550)) (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550)))
(assert (= x6712 (=> (= (+ x8367 x3986) x6246) x2320)))
(assert (x4057 32))
(assert (=> (>= 10000 x2780) (= (x3391 x2780) 0)))
(assert (= (x3391 1000000000) 0))
(assert (x4101 x7663))
(assert (x4101 x5585))
(assert (x4101 x4782))
(assert (x4101 x5416))
(assert (not (x2674 (x6207 x6609 x665 x2145 x377 x444 x8061))))
(assert (x4101 x6555))
(assert (= (x8452 64 x2123 100) (x3391 (x8452 64 x2123 100))))
(assert (=> (>= 10000 x3162) (= (x3391 x3162) 0)))
(assert (not (x2674 (x3114 32 x238))))
(assert (x4101 x5522))
(assert (x4101 x916))
(assert (= x6788 (x5740 (x8452 64 x6788 12))))
(assert (x4101 x287))
(assert (= x1259 (and x2738 x2144)))
(assert (x4101 x3022))
(assert (x4101 x6657))
(assert (= x1527 (=> (and (= x5640 true) (= false x8511) (= 0 x5713)) x2437)))
(assert (x4101 x7310))
(assert (x4101 x5232))
(assert (x4101 x3450))
(assert (x4101 x7069))
(assert (= x4869 (and (not x8583) x3098)))
(assert (x4101 x5113))
(assert (x4101 x2174))
(assert (x4101 x5288))
(assert (x4101 x6190))
(assert (=> (>= 10000 x270) (= (x3391 x270) 0)))
(assert (= (and x8060 (not x3323)) x7934))
(assert (= (x8370 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)) x6722))
(assert (x5391 x8556))
(assert (= x2071 (and (not x7365) x3858)))
(assert (= (and x6262 (not x8281)) x953))
(assert (= (and x7685 x6282) x4934))
(assert (= x3562 (or x7508 x5466)))
(assert (= x6164 (and x4591 (not x2257))))
(assert (x4101 x7311))
(assert (= (and (not x7445) x7302) x6333))
(assert (= (x5740 (x6207 x8247 x2495 x8394 x2135 x4427 x5325)) x2495))
(assert (x4101 x2275))
(assert (=> (>= 10000 x690) (= 0 (x3391 x690))))
(assert (x4101 x5592))
(assert (= (x4519 (x8452 64 x4417 6)) 64))
(assert (= (x6212 (x8452 64 x3712 (ite (<= x3728 32) x4071 (ite (<= x3728 64) x6751 (ite (<= x3728 96) x8471 (ite (<= x3728 128) x5582 (ite (>= 160 x3728) x7240 (ite (>= 192 x3728) x5937 x894)))))))) (ite (<= x3728 32) x4071 (ite (>= 64 x3728) x6751 (ite (>= 96 x3728) x8471 (ite (>= 128 x3728) x5582 (ite (<= x3728 160) x7240 (ite (<= x3728 192) x5937 x894))))))))
(assert (x5189 x5486 2))
(assert (x4101 x3131))
(assert (x8137 x8507))
(assert (x4101 x6246))
(assert (x4101 x5382))
(assert (= (and x1881 x8027) x4586))
(assert (x4101 x836))
(assert (x4101 x2525))
(assert (x5391 x2650))
(assert (x4101 x1279))
(assert (x4101 x6346))
(assert (x4101 x8394))
(assert (x4101 x5390))
(assert (x4101 x4154))
(assert (x4101 x7554))
(assert (= (and x2144 (not x2738)) x1113))
(assert (x4101 x1048))
(assert (x4101 x4503))
(assert (x4101 x8331))
(assert (x5391 x793))
(assert (= x327 (=> (and (= x373 (= x8226 0)) (or x373 (not x373))) x6761)))
(assert (x4101 x5549))
(assert (x4101 x2265))
(assert (= (and x143 (not x8152)) x3847))
(assert (x5189 x6318 32))
(assert (< (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x842 (x5018 x8105 x3604 x1200 x7816 x7663)) x7816))
(assert (> (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613) 10000))
(assert (x4101 x2218))
(assert (= (and x1344 x3861) x1270))
(assert (x25 32 x6785))
(assert (=> (>= 10000 x8278) (= 0 (x3391 x8278))))
(assert (x4101 x165))
(assert (= (x4955 (x5018 x8105 x3604 x1200 x7816 x7663)) x7663))
(assert (x4101 x4694))
(assert (x4101 x8247))
(assert (x4101 x1077))
(assert (x2371 (ite (not (= 0 x3207)) 1 0)))
(assert (x4101 x7653))
(assert (x4101 x6690))
(assert (x4101 x5317))
(assert (not (x2674 (x8452 64 x723 11))))
(assert (x4101 x121))
(assert (x4101 x6469))
(assert (x4101 x4496))
(assert (= (x4519 (x8452 x3485 x5701 x2008)) x3485))
(assert (x5189 x5052 32))
(assert (x4101 x1533))
(assert (= 64 (x4519 (x8452 64 x1308 36))))
(assert (= (x8452 64 x6788 12) (x3391 (x8452 64 x6788 12))))
(assert (x4101 x490))
(assert (x4101 x6341))
(assert (x4101 x4198))
(assert (= x736 (x5740 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345))))
(assert (x4101 x2362))
(assert (= (=> (= (= x8187 0) x5156) (and (=> (and (not x5156) (and (= x7479 x3721) (= x5120 x5634) (= x3366 x3722) (= x7866 x5790) (= x5718 x714) (= x6076 x7823) (= x4478 x5057) (= x1547 x4128) (= x6598 0) (= 1 x798) (= x2942 x2943) (= x6330 x2545) (= x1914 x3120) (= x5129 x8597) (= x2680 x8521))) x5966) (=> (and (and (= x239 false) (= x2101 true) (= 0 x7288)) x5156) x2687))) x6982))
(assert (x4101 x3369))
(assert (x4101 x4478))
(assert (x4101 x7013))
(assert (not (x2674 (x8452 64 x5710 11))))
(assert (= x3565 (x5740 (x3114 32 x3565))))
(assert (x5391 x5072))
(assert (= x7328 (and x8241 x1929)))
(assert (x4101 x1472))
(assert (x4101 x3914))
(assert (x2371 x5907))
(assert (x4101 x8164))
(assert (x3760 x1865 32))
(assert (=> (>= 10000 x1613) (= 0 (x3391 x1613))))
(assert (= x1010 (and x3893 x7695)))
(assert (= x6260 (x5740 (x8452 64 x6260 3))))
(assert (x4101 x1027))
(assert (x4101 x1463))
(assert (x4101 x5754))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x1404 x3702)))
(assert (x5391 x1487))
(assert (x4101 x2301))
(assert (x4101 x7611))
(assert (x4101 x2955))
(assert (= x5684 (=> (and (= x5204 0) (= x7632 x1859) (= x4789 false) (= x826 x8495) (= x2571 x846) (= x4760 x8234) (= x8584 true) (= x5848 2) (= x8014 x816) (= x5893 x4445) (= x3595 x337) (= x2398 x7904) (= x3365 x3529) (= x3819 x1648) (= x1395 x2814) (= x40 x7103) (= x1196 x2244)) x2534)))
(assert (x4101 x7103))
(assert (= 64 (x4519 (x8452 64 x4417 2))))
(assert (= (x3391 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613)) (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613)))
(assert (= x4924 (x842 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285))))
(assert (= (and x1996 (not x2056)) x5259))
(assert (x4101 x7488))
(assert (= x4497 (and (not x5455) x8374)))
(assert (x4101 x8276))
(assert (= (x658 x3485 x166 x719 x2339) (x3391 (x658 x3485 x166 x719 x2339))))
(assert (x2496 x6046))
(assert (= (and x5142 (not x7319)) x2490))
(assert (= x6300 (or x4079 x7059)))
(assert (x4101 x8187))
(assert (x4101 x6464))
(assert (x4101 x3711))
(assert (= (and (not x5405) x1021) x5523))
(assert (= (and (not x5007) x324) x6270))
(assert (=> (>= 10000 x8514) (= (x3391 x8514) 0)))
(assert (x3760 x6107 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2534 (=> (and (= x337 x4023) (= x2398 x2776) (= x4518 x2814) (= x5522 x5893) (= x846 x7909) (= x8274 x8495) (= x816 x4944) (= x8234 x7631) (= x1182 x3819) (= x3843 x5204) (= x2633 x7103) (= x2244 x1256) (= x3529 x6542) (= x1859 x8285)) x8598)))
(assert (x725 x221))
(assert (x4101 x496))
(assert (x4101 x1197))
(assert (= (and x768 x6791) x766))
(assert (x4101 x3567))
(assert (x4101 x862))
(assert (x4101 x761))
(assert (= (x8370 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751)) x7691))
(assert (x4101 x6448))
(assert (x4101 x6248))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x658 x1404 x6591 x1588 x6117)))
(assert (x725 x5020))
(assert (x4101 x572))
(assert (= (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961) (x3391 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961))))
(assert (x4101 x1503))
(assert (x4101 x2931))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 1 x7411)))
(assert (= x2344 (x6212 (x6207 x8236 x5618 x2344 x5489 x7255 x1096))))
(assert (= (=> (and (= (= x1625 0) x2410) (or (not x2410) x2410)) x4757) x1007))
(assert (= (and x6322 (not x7077)) x7232))
(assert (x4101 x6467))
(assert (x4101 x3414))
(assert (x4101 x7382))
(assert (= (x3391 (x658 x954 x8553 x4050 x8396)) (x658 x954 x8553 x4050 x8396)))
(assert (x4101 x5961))
(assert (x4101 x6984))
(assert (= (or x8223 x2118) x5846))
(assert (> (x8452 x8247 x1044 x6011) 10000))
(assert (= x7220 x1488))
(assert (x4101 x2471))
(assert (x4101 x5411))
(assert (= (or x7270 x1227 x6189) x7160))
(assert (x4101 x3656))
(assert (x4101 x3768))
(assert (= (x842 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)) x6374))
(assert (x4101 x7229))
(assert (= x2493 (x4519 (x8452 x2493 x5680 x3170))))
(assert (x2674 48755886422350550937420582033662272622158303343164848365600209189876434731008))
(assert (x5391 x8020))
(assert (= (x6212 (x658 x5857 x2673 x2267 x6794)) x2267))
(assert (not (x2674 (x5018 x8247 x7491 x7316 x1399 x6343))))
(assert (= x6536 (and x1388 x1106)))
(assert (< (x5018 x8105 x3604 x1200 x7816 x7663) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x8296))
(assert (= x5625 (x5740 (x8452 64 x5625 7))))
(assert (x4101 x3961))
(assert (= x1950 (and x3063 (not x4537))))
(assert (x4101 x1047))
(assert (x4101 x1251))
(assert (x4101 x8328))
(assert (x5391 x2839))
(assert (x4101 x5503))
(assert (x3760 x7874 128))
(assert (=> (>= 10000 x7521) (= 0 (x3391 x7521))))
(assert (= (or x3788 x7864 x5344) x7836))
(assert (= x5704 (or x4648 x5938)))
(assert (=> (>= 10000 x1409) (= (x3391 x1409) 0)))
(assert (x4101 x5811))
(assert (= x8497 (and x223 x3341)))
(assert (=> (<= x2267 10000) (= (x3391 x2267) 0)))
(assert (x4101 x1307))
(assert (x4101 x1593))
(assert (x4101 x4621))
(assert (= x5860 (and x5994 (not x4571))))
(assert (x4101 x5212))
(assert (x4101 x8599))
(assert (x4101 x3205))
(assert (=> (<= x5287 10000) (= (x3391 x5287) 0)))
(assert (x4101 x386))
(assert (x4101 x7772))
(assert (x4101 x5905))
(assert (= (x6212 (x658 x8247 x335 x6736 x939)) x6736))
(assert (x4101 x284))
(assert (= (and x451 x7446) x4607))
(assert (x4101 x5153))
(assert (= (or x3012 x1489) x3367))
(assert (x4101 x5636))
(assert (= 64 (x4519 (x8452 64 x2232 100))))
(assert (x4101 x5955))
(assert (= (and x3501 (not x63)) x2049))
(assert (=> (<= x7926 10000) (= 0 (x3391 x7926))))
(assert (x4101 x424))
(assert (=> (<= x5231 10000) (= 0 (x3391 x5231))))
(assert (x4101 x8267))
(assert (x4101 x1695))
(assert (x4101 x1304))
(assert (=> (<= x2604 10000) (= (x3391 x2604) 0)))
(assert (x8137 x3133))
(assert (= (x4955 (x5018 x8236 x8496 x1779 x7671 x5130)) x5130))
(assert (x4101 x4819))
(assert (= true x1106))
(assert (x864 x826))
(assert (= 0 (x3391 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (= 36 (x6212 (x8452 64 x6018 36))))
(assert (x4101 x6428))
(assert (= x4501 (and x6456 x4308)))
(assert (x4101 x4960))
(assert (x2496 x8531))
(assert (= x7448 (=> (and (= (= 0 x7706) x5693) (or (and (and (= x8170 x5) (= x7818 x653) (= x4553 x3965) (= x1568 x5453) (= x1842 x5731) (= x1812 x5496) (= x3834 x2792) (= x1948 x7706) (= x6859 x7488) (= x1283 x1341) (= x6966 x2736) (= x4714 x1508) (= x6650 x3610) (= x4198 x7252)) (not x5693)) (and (and (< (+ x795 x3419) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4553 x3965) (= x3419 (x4115 x666)) (= x7966 x149) (<= x149 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7252 x4198) (= x5731 x1842) (= x7706 x1948) (= x653 x7818) (<= 0 x149) (= x1341 x1283) (= (- x4336 x795) x2644) (= x6966 x2736) (= x7488 x6859) (= x6650 x3610) (= (+ x3419 x795) x149) (= x1812 x5496) (= x5 x8170) (= x2792 x3834) (= x1568 x5453) (= x4336 (x5117 x127)) (= x4714 x1508) (= (ite (= 0 x7706) x4526 0) x795)) x5693))) x3021)))
(assert (x4101 x7775))
(assert (x4101 x7938))
(assert (= (and x3087 (not x5679)) x2594))
(assert (= x5108 (x5740 (x658 x6609 x5108 x6949 x5158))))
(assert (=> (<= x1044 10000) (= (x3391 x1044) 0)))
(assert (x4101 x7567))
(assert (not (x2674 (x8452 64 x2743 36))))
(assert (< (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5731))
(assert (x4101 x2150))
(assert (x4101 x2034))
(assert (= x7453 (and x1803 (not x24))))
(assert (x5391 x1674))
(assert (= (x5018 x8236 x8496 x1779 x7671 x5130) (x3391 (x5018 x8236 x8496 x1779 x7671 x5130))))
(assert (= x3718 (or (and x8155 x2054) (and x4384 x4569))))
(assert (< 10000 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300)))
(assert (x4101 x7550))
(assert (= x6067 (x6212 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640))))
(assert (x3760 x4171 256))
(assert (x4101 x8398))
(assert (x4101 x4696))
(assert (x4101 x5559))
(assert (x4101 x7944))
(assert (x4101 x3295))
(assert (x4101 x4325))
(assert (= x2531 (and x2214 x4323)))
(assert (= (and (not x4642) x5770) x6599))
(assert (= 0 (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639776)))
(assert (x4101 x3208))
(assert (x4101 x1497))
(assert (= x7419 x1193))
(assert (x2674 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x5528 x6496))
(assert (= x8395 (=> (and (= x3765 (x4456 (- x192 128))) (= (= 0 x8146) x698) (= (x7676 x3286) x8146) (= x3092 128)) (and (=> (and (not x698) (and (= x8383 (and x433 x3194)) (= (x2329 x729) x6567) (= (x2329 x3286) x1962) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1962 x2924)) x3194) (= (<= x2924 x6567) x433))) (and (=> (and (and (= (x7162 x3286) x5779) (= (= (x2065 132) x2511) x2866) (>= x3765 196) (>= x4734 0) (>= 127 x5315) (= (- x5272 x2924) x2711) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4734) (= x5941 false) x2866 (= x3765 x1139) (<= 1 x6204) (= x3131 (x3818 132)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5779 x2924)) (= (x7676 x666) x6204) (= x4428 x4523) (<= 196 x1139) (= 128 x4545) (= x1544 x5360) (= x6760 x6297) (<= x3765 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 127 x5315) (= (< 18446744073709551615 x3131) x4852) (= x4734 (+ x2924 x5779)) (<= x1139 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x2329 x729) x5272) (= x5426 3521034783) (= x6062 x4734) (= x8543 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x4693 false)) x8383) (and (=> (and (and (= 164 x58) (= x4571 (> x5098 x1139)) (= x5098 (x5665 (+ x3131 164)))) (not x4852)) (and (=> (and (not x4571) (and (= x6715 (+ x4523 4)) (= (< (+ 31 x6715) x1139) x3727))) (and (=> (and x3727 (and (= x52 (< 18446744073709551615 x74)) (= (x3818 x6715) x74))) (and (=> x52 x3918) (=> (and (not x52) (and (= (x5665 (+ x1505 x74)) x1514) (= x1505 (+ x6715 32)) (= (> x1514 x1139) x2400))) (and (=> (and (and (and (= x2871 (x4014 224)) (= x4092 (x5018 x8247 x7491 x7316 x1399 x6343)) (= x6749 (x658 x6601 x8352 x7125 x7289)) (= x8247 (x4456 (- x4695 128))) (= x6601 (- x8247 32)) (= (x4014 128) x7528) (= x6845 (x6207 x8247 x2495 x8394 x2135 x4427 x5325)) (= (x4014 128) x2495) (= x545 (x4014 160)) (= (x4014 224) x2279) (= (x5371 x4266) x7470) (= (x4014 128) x335) (>= x8247 32) (= (x4014 192) x7585) (= (x4014 256) x5339) (= x4924 (x4014 192)) (= x5187 (x5018 x6601 x1538 x2378 x3456 x2871)) (= x5277 (x4014 128)) (= x6913 (x8452 x6601 x7528 x3162)) (= x3456 (x4014 192)) (= (x4014 192) x7289) (= x2217 (x5665 (+ x3131 128))) (= x7125 (x4014 160)) (= (x4014 256) x1137) (= x4427 (x4014 224)) (= x3241 (x4014 224)) (= (x4014 160) x7316) (= (x4014 192) x939) (= x8500 (x4014 128)) (= x692 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285)) (= x2040 (x4014 128)) (= (x4014 128) x113) (= x389 (x4014 288)) (= (x4014 128) x1154) (= (x5665 (+ 128 x3131)) x4547) (= x7491 (x4014 128)) (= x3331 (ite (= 0 x6601) x7960 (ite (>= 32 x6601) x6503 (ite (>= 64 x6601) x6913 (ite (<= x6601 96) x6749 (ite (>= 128 x6601) x5187 (ite (<= x6601 160) x5238 x2226))))))) (>= 224 x8247) (= x6468 (x4014 160)) (= (x4014 288) x285) (= (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073) x2226) (= (x8448 0) x7960) (= x981 (= 0 x7470)) (= (x4014 160) x6736) (= x2073 (x4014 288)) (= (x4014 128) x8352) (= x4602 (x8452 64 x1544 7)) (= x6343 (x4014 224)) (= (x4014 320) x3708) (= (x4014 160) x2917) (= (x6207 x6601 x1154 x6468 x2260 x2279 x5339) x5238) (= x4627 (x8452 x8247 x1044 x6011)) (= (x3114 x8247 x8500) x7566) (= (x4014 192) x1399) (= (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708) x7767) (= (x3114 x6601 x80) x6503) (= (x4014 128) x1044) (= x4695 (x5665 (+ x2217 32))) (= (x4014 256) x1194) (= (x4014 128) x1538) (= x2135 (x4014 192)) (= x5613 (x4014 160)) (= x7167 (x4014 256)) (= (x4014 160) x6011) (= (x4014 192) x1493) (= x5325 (x4014 256)) (= (x4014 160) x2378) (= (x4014 224) x3907) (= (x4014 128) x80) (= (x4014 192) x2260) (= (x8452 64 x6760 (ite (>= 32 x8247) x7566 (ite (>= 64 x8247) x4627 (ite (>= 96 x8247) x7341 (ite (>= 128 x8247) x4092 (ite (<= x8247 160) x6845 (ite (>= 192 x8247) x692 x7767))))))) x4266) (= x7341 (x658 x8247 x335 x6736 x939)) (= x3162 (x4014 160)) (= (x4014 160) x8394) (= (x4014 224) x4201)) (or (and (and (and (= x2898 (x8452 x2493 x5680 x3170)) (= x3943 (x6770 288)) (= (x3114 x2493 x4089) x4867) (= (x6770 320) x3665) (= (x8448 0) x3500) (= x2302 (x6770 128)) (= (x6770 128) x2634) (= (x6770 192) x4380) (>= 224 x2493) (= (x6770 160) x3170) (= x6149 (x6770 128)) (= (x6770 224) x8016) (= (= x7470 (ite (= 0 x2493) x3500 (ite (<= x2493 32) x4867 (ite (>= 64 x2493) x2898 (ite (<= x2493 96) x570 (ite (<= x2493 128) x1083 (ite (>= 160 x2493) x5711 (ite (<= x2493 192) x1178 x6596)))))))) x5964) (= x165 (x6770 160)) (= (x6770 224) x613) (= x7317 (x6770 192)) (= x2837 (x6770 160)) (= (x6770 224) x3792) (= x1083 (x5018 x2493 x6149 x1732 x3117 x8016)) (= (x6770 256) x5439) (= x971 (x6770 160)) (= (x6770 192) x3117) (= (x6770 256) x5735) (= x4089 (x6770 128)) (= x6585 (x6770 256)) (= (x6770 160) x1732) (= x1178 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393)) (= x4433 (x6770 128)) (= x570 (x658 x2493 x2634 x165 x5303)) (= (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665) x6596) (= x5303 (x6770 192)) (= x8486 (x5665 (+ 128 x74))) (= (x6207 x2493 x4433 x971 x4380 x3792 x6585) x5711) (= (x6770 160) x1174) (= x167 (x6770 192)) (= (x6770 128) x5680) (= x5879 (x6770 224)) (= (x6770 288) x8393) (= x2493 (x4456 (- x8486 128))) (= x7469 (x6770 128))) (or (and (and (= 132 x7200) (= x2249 false) (= x4465 true)) (not x5964)) (and (and (= (x5665 (+ 31 x74)) x6318) (= x6406 (x8452 64 x6760 (ite (>= 32 x954) x664 (ite (>= 64 x954) x2514 (ite (<= x954 96) x5577 (ite (<= x954 128) x1131 (ite (>= 160 x954) x5628 (ite (>= 192 x954) x1262 x6705)))))))) (= (x5514 192) x7472) (= x2088 (x5514 128)) (= (x8297 x6318 32) x1417) (= x7301 (- x954 32)) (= x821 (x5514 192)) (= (x5514 128) x6276) (= (x5514 192) x6512) (>= x954 32) (= x1389 (x658 x7301 x6879 x5406 x821)) (= (x5514 224) x2476) (= (x6207 x7301 x481 x345 x5672 x4986 x5616) x2296) (= (x5665 (+ x3799 x3936)) x1621) (= (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263) x6705) (< x3936 x1621) (= x5672 (x5514 192)) (>= x1621 161) (= x1521 (x8452 x7301 x8339 x60)) (= (x5665 (+ x3131 31)) x5920) (= x7944 (x5514 192)) (= x8375 (* x1417 32)) (= x8396 (x5514 192)) (= (x5514 224) x4062) (= (x5514 128) x481) (= x3276 (x5514 128)) (= x8198 (x5514 128)) (= (x6207 x954 x2088 x1088 x7472 x5281 x2463) x5628) (= x2550 (x5514 128)) (= (x5665 (+ 128 x3131)) x5669) (or (<= x1718 31) (>= x1718 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x3850 x3936) x1718) (= x5042 (x8448 0)) (= (x3114 x954 x2658) x664) (= x5013 (ite (= x7301 0) x5042 (ite (<= x7301 32) x6634 (ite (<= x7301 64) x1521 (ite (>= 96 x7301) x1389 (ite (<= x7301 128) x5449 (ite (>= 160 x7301) x2296 x8501))))))) (= x5449 (x5018 x7301 x6276 x3370 x6512 x4475)) (= (x5514 192) x5724) (= x5961 (x5514 288)) (= x5577 (x658 x954 x8553 x4050 x8396)) (= x3799 (x5665 (+ x8375 32))) (= x345 (x5514 160)) (= (x5514 288) x1197) (= x2514 (x8452 x954 x3276 x4483)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x3131) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x3131)) (= x4588 true) (= x557 (x5514 256)) (= x5229 (x5514 192)) (= (x5514 256) x1723) (= (x5018 x954 x8198 x1612 x6014 x4062) x1131) (= x907 (x5514 128)) (= (x8297 x5920 32) x336) (= (x5514 128) x585) (= x6879 (x5514 128)) (= 128 x8166) (= x6014 (x5514 192)) (= (+ x4262 160) x3936) (= x2463 (x5514 256)) (= x8339 (x5514 128)) (= (x5514 320) x6263) (= (x5514 160) x8426) (= (x5514 160) x5406) (= x4483 (x5514 160)) (= x3363 (x5514 224)) (= x8501 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961)) (= (* 32 x336) x4262) (= x3370 (x5514 160)) (= (x5514 160) x60) (= x4986 (x5514 224)) (= x4687 (x8452 64 x1544 7)) (= (x5665 (+ x3131 128)) x2970) (= (x5514 160) x1088) (= (x5514 224) x3612) (= x8553 (x5514 128)) (= (x3114 x7301 x907) x6634) (= x4475 (x5514 224)) (= x6839 (x5514 288)) (= (x5514 160) x1612) (= (x5665 (+ 32 x3936)) x6326) (= x4595 (x5514 256)) (= (x5514 128) x2658) (<= x954 224) (= x7976 (x5514 128)) (= (x5514 160) x3025) (= (x4456 (- (mod (+ x5669 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x954) (= x3533 (x5665 (+ x3131 160))) (= x1262 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) (= 0 x7200) (= x540 (x5514 160)) (= x5616 (x5514 256)) (= x4050 (x5514 160)) (= x314 false) (= x3150 (x5665 (+ x74 x6326))) (= x5281 (x5514 224))) x5964))) (not x981)) (and x981 (and (= x5703 false) (= x14 true) (= 132 x7200))))) (not x2400)) x8176) (=> x2400 x1833))))) (=> (and (not x3727) (and (= 0 x7200) (= false x1494) (= x4907 true))) x8176))) (=> x4571 x1833))) (=> x4852 x3918))) (=> (and (= 0 x7166) (not x8383)) x3611))) (=> (and x698 (and (= x6141 x8357) (= 0 x7573) (= false x7242) (= x6940 2) (= x3545 x4512) (= x4112 x6049) (= true x5875) (= x7614 0))) x2843)))))
(assert (> (x8452 64 1 x2328) 10000))
(assert (x4101 x7909))
(assert (= (and x2693 x7104) x1413))
(assert (x4101 x2229))
(assert (x4101 x7870))
(assert (x4101 x1595))
(assert (= x4279 (and x1381 x2562)))
(assert (not (x2674 (x8452 64 x4521 36))))
(assert (x4101 x2673))
(assert (x4101 x7327))
(assert (x8137 x6902))
(assert (x4101 x7560))
(assert (x725 x2585))
(assert (x8137 x6775))
(assert (= x3726 (and (not x6487) x830)))
(assert (x4101 x489))
(assert (= 0 (x3391 310283853)))
(assert (= (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (= (x5740 (x6207 x8066 x1862 x2624 x99 x6072 x1363)) x1862))
(assert (= (x3391 (x3114 x5456 x8164)) (x3114 x5456 x8164)))
(assert (x4101 x932))
(assert (x4101 x4481))
(assert (x3760 x8180 128))
(assert (x4101 x413))
(assert (> (x6207 x954 x2088 x1088 x7472 x5281 x2463) 10000))
(assert (x2496 x2283))
(assert (x4101 x6194))
(assert (= 11 (x6212 (x8452 64 x212 11))))
(assert (= x1983 (and (not x3561) x6290)))
(assert (> (x8452 64 x5710 11) 10000))
(assert (x4101 x2649))
(assert (x4101 x2895))
(assert (x4101 x177))
(assert (x3760 x5445 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5672))
(assert (x4101 x2811))
(assert (x4101 x2970))
(assert (= x1646 (and x8447 x7709)))
(assert (= (or (and x2240 x560) (and x2117 x2334)) x2859))
(assert (=> (<= x2041 10000) (= (x3391 x2041) 0)))
(assert (=> (>= 10000 x1261) (= 0 (x3391 x1261))))
(assert (x4101 x781))
(assert (not (x2674 (x3114 x6655 x5210))))
(assert (= (x5740 (x3114 32 x8158)) x8158))
(assert (x4101 x2327))
(assert (x2371 x2220))
(assert (not (x2674 (x8452 64 x8458 12))))
(assert (=> (<= x3363 10000) (= (x3391 x3363) 0)))
(assert (= x1987 (x842 (x5018 x8066 x5753 x4487 x1987 x5269))))
(assert (x4101 x1290))
(assert (= (x5740 (x5018 x5857 x8219 x4949 x2419 x5524)) x8219))
(assert (= (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (= (x4519 (x3114 x6655 x5210)) x6655))
(assert (x4101 x2826))
(assert (< 10000 (x5018 x3485 x4823 x5174 x8145 x7574)))
(assert (x4101 x1591))
(assert (not (x2674 (x6207 x2493 x4433 x971 x4380 x3792 x6585))))
(assert (= (or (and x7559 x107) (and x8060 x3323) (and x1807 x7546)) x7640))
(assert (x4101 x814))
(assert (x4101 x7574))
(assert (x4101 x2634))
(assert (=> (>= 10000 x6390) (= (x3391 x6390) 0)))
(assert (= (and x3525 x8533) x1299))
(assert (=> (>= 10000 x2308) (= (x3391 x2308) 0)))
(assert (= 36 (x6212 (x8452 64 x4417 36))))
(assert (> (x6207 x2493 x4433 x971 x4380 x3792 x6585) 10000))
(assert (x4101 x2209))
(assert (x4101 x4721))
(assert (x4101 x2088))
(assert (x4101 x7809))
(assert (=> (>= 10000 x4505) (= (x3391 x4505) 0)))
(assert (x4101 x8547))
(assert (= (or x1102 x5124) x4881))
(assert (= (and x522 x794) x453))
(assert (x4101 x1566))
(assert (= (x3391 (x8452 x8276 x6717 x3740)) (x8452 x8276 x6717 x3740)))
(assert (x3760 x2630 32))
(assert (= (and x4766 (not x1212)) x3861))
(assert (x725 x4114))
(assert (x4101 x2161))
(assert (=> (<= x7192 10000) (= 0 (x3391 x7192))))
(assert (= x217 (or x5490 x578 x8098 x615 x2505)))
(assert (x4101 x319))
(assert (= x2327 (x4519 (x6207 x2327 x3240 x576 x6659 x4505 x8420))))
(assert (= (x5740 (x6207 x2493 x4433 x971 x4380 x3792 x6585)) x4433))
(assert (x4101 x4926))
(assert (x4101 x7467))
(assert (x4101 x5329))
(assert (x4101 x5456))
(assert (x5391 x4850))
(assert (> (x8452 x2327 x708 x4778) 10000))
(assert (x4101 x2682))
(assert (= (x3391 (x8452 64 x666 1)) (x8452 64 x666 1)))
(assert (x4101 x2332))
(assert (> (x6207 x8276 x7633 x667 x44 x579 x2604) 10000))
(assert (x4101 x4831))
(assert (= (x6212 (x658 x7301 x6879 x5406 x821)) x5406))
(assert (= (x5740 (x658 x5456 x3223 x2642 x3866)) x3223))
(assert (x4101 x5096))
(assert (x4101 x8119))
(assert (x4101 x5209))
(assert (x4101 x7547))
(assert (x4101 x1353))
(assert (x4101 x7053))
(assert (= (x5740 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751)) x5667))
(assert (< (x8452 64 1 x7211) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4955 (x5018 x5456 x3051 x6313 x5806 x1348)) x1348))
(assert (= x6601 (x4519 (x8452 x6601 x7528 x3162))))
(assert (=> (>= 10000 x2197) (= 0 (x3391 x2197))))
(assert (x4101 x8110))
(assert (x4101 x4704))
(assert (x5391 x2773))
(assert (= x3292 (and x259 (not x6838))))
(assert (= x8404 (x5740 (x658 x8276 x8404 x5313 x424))))
(assert (= (and x7075 x929) x516))
(assert (= x5616 (x8370 (x6207 x7301 x481 x345 x5672 x4986 x5616))))
(assert (= (=> (and (= (x639 1 x7673) x6906) (= (> x6632 0) x7929) (= (x8297 x7673 2) x4980) (= (- x258 132) x4523) (= (x4456 (- x6906 (mod (ite (> 32 x5380) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x6632) (= x5380 (ite (> x6906 0) x4980 (x639 127 x4980)))) (and (=> (and x7929 (and (= x8583 (= x2202 0)) (= x7235 (+ x258 32)) (= x2202 (x639 1 x7673)))) (and (=> (and (and (or (and x5977 (and (<= x5380 32) (= (x6449 x8512) x3926) (= x6860 32))) (and (= x6860 0) (not x5977))) (and (= x8512 (x3114 32 104)) (= (< 0 x5380) x5977))) (not x8583)) x5889) (=> (and x8583 (and (= x1006 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7673)) (or (= x7898 32) (= x7898 0)) (= (+ x7235 x7898) x192) (= (* 32 (ite (not (= x5380 0)) 1 0)) x7898))) x8395))) (=> (not x7929) x3473))) x7716))
(assert (x4101 x7254))
(assert (x4101 x4425))
(assert (= (or x6754 x5765 x3726) x8010))
(assert (= x8105 (x4519 (x658 x8105 x1516 x7217 x2649))))
(assert (x4101 x7778))
(assert (x4101 x5014))
(assert (> (x8452 64 x3712 (ite (>= 32 x3728) x4071 (ite (>= 64 x3728) x6751 (ite (<= x3728 96) x8471 (ite (<= x3728 128) x5582 (ite (<= x3728 160) x7240 (ite (>= 192 x3728) x5937 x894))))))) 10000))
(assert (x4101 x4560))
(assert (= (x3391 (x5018 x3485 x4823 x5174 x8145 x7574)) (x5018 x3485 x4823 x5174 x8145 x7574)))
(assert (= x3866 (x842 (x658 x5456 x3223 x2642 x3866))))
(assert (= x2294 (x5740 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385))))
(assert (x4101 x4666))
(assert (= x4648 (and x4939 x32)))
(assert (x4101 x1987))
(assert (= (x4117 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613)) x2613))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x2123 100)))
(assert (= x6276 (x5740 (x5018 x7301 x6276 x3370 x6512 x4475))))
(assert (x4101 x7286))
(assert (= (and x1100 x2116) x2336))
(assert (x4101 x5759))
(assert (x4101 x5975))
(assert (= (and x307 x7027) x8209))
(assert (x4101 x7901))
(assert (x4101 x6))
(assert (= (x6212 (x8452 64 x4807 4)) 4))
(assert (x4101 x1196))
(assert (x3760 x4538 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3760 x7851 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2674 (x3114 x5857 x7740))))
(assert (x4101 x2036))
(assert (x5391 x2537))
(assert (= (and x3796 x2636) x7030))
(assert (=> (<= x1717 10000) (= (x3391 x1717) 0)))
(assert (> (x6207 x6256 x690 x1813 x3211 x2826 x8101) 10000))
(assert (= (and x7085 (not x5826)) x5049))
(assert (= x3125 (and (not x8162) x727)))
(assert (x2496 x1467))
(assert (x4101 x537))
(assert (= 100 (x6212 (x8452 64 x5586 100))))
(assert (x2371 (ite (not (= 0 x2919)) 1 0)))
(assert (x4101 x941))
(assert (x3760 x7040 32))
(assert (x4101 x3354))
(assert (= (x4519 (x8452 64 1 x7411)) 64))
(assert (x25 32 (ite (not (= 0 x3510)) 1 0)))
(assert (x4101 x7904))
(assert (x4101 x3002))
(assert (= (x5740 (x6207 x5857 x681 x1632 x5447 x2128 x1530)) x681))
(assert (x5391 x3374))
(assert (= x5857 (x4519 (x658 x5857 x2673 x2267 x6794))))
(assert (x4101 x5553))
(assert (x4101 x9))
(assert (not (x2674 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708))))
(assert (= x8016 (x4955 (x5018 x2493 x6149 x1732 x3117 x8016))))
(assert (x4101 x5697))
(assert (x4101 x1054))
(assert (x4101 x2807))
(assert (x2496 x7714))
(assert (x2496 x7374))
(assert (=> (>= 10000 x4417) (= (x3391 x4417) 0)))
(assert (x4101 x8550))
(assert (= (=> (and (= x5066 (= 0 x5608)) (or x5066 (not x5066))) x6493) x4301))
(assert (x25 1000000000 x5452))
(assert (x4101 x7825))
(assert (=> (<= x1544 10000) (= (x3391 x1544) 0)))
(assert (x4101 x1567))
(assert (= (x3114 32 104) (x3391 (x3114 32 104))))
(assert (x5528 x8180))
(assert (= (x658 x5456 x3223 x2642 x3866) (x3391 (x658 x5456 x3223 x2642 x3866))))
(assert (x4101 x2611))
(assert (x4101 x166))
(assert (x4101 x3528))
(assert (= (and (not x5221) x7878) x8108))
(assert (x4101 x3227))
(assert (< (x3114 x5456 x8164) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5174))
(assert (x2674 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (x4101 x6168))
(assert (= x133 (and x1792 x4536)))
(assert (< 10000 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153)))
(assert (= x5456 (x4519 (x6207 x5456 x254 x2993 x2587 x5865 x5646))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073)))
(assert (= (x6212 (x6207 x954 x2088 x1088 x7472 x5281 x2463)) x1088))
(assert (= x2121 (and (not x1242) x2825)))
(assert (x4101 x7420))
(assert (= (and (not x5833) x2858) x8216))
(assert (x4101 x7301))
(assert (x4101 x8289))
(assert (x4101 x2791))
(assert (x4101 x5488))
(assert (= (x4519 (x8452 64 x3712 (ite (>= 32 x3728) x4071 (ite (>= 64 x3728) x6751 (ite (<= x3728 96) x8471 (ite (>= 128 x3728) x5582 (ite (>= 160 x3728) x7240 (ite (<= x3728 192) x5937 x894)))))))) 64))
(assert (=> (<= x2550 10000) (= (x3391 x2550) 0)))
(assert (x4101 x6713))
(assert (= (and (not x5320) x4397) x4243))
(assert (= (and (not x1966) x1611) x5185))
(assert (x3760 x7673 256))
(assert (=> (<= x6172 10000) (= 0 (x3391 x6172))))
(assert (= (x4519 (x3114 32 104)) 32))
(assert (=> (<= x7545 10000) (= 0 (x3391 x7545))))
(assert (x4101 x8032))
(assert (x3760 x5232 256))
(assert (x4101 x3148))
(assert (= (x3391 (x3114 x6601 x80)) (x3114 x6601 x80)))
(assert (x4101 x6175))
(assert (x4101 x806))
(assert (x4101 x7874))
(assert (= (and x2800 x6921) x1287))
(assert (x4101 x5336))
(assert (=> (<= x3943 10000) (= 0 (x3391 x3943))))
(assert (= (x3391 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817)) (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817)))
(assert (= (x5018 x1404 x8231 x7521 x8002 x408) (x3391 (x5018 x1404 x8231 x7521 x8002 x408))))
(assert (x4101 x8332))
(assert (= (=> (and (or (and (and (= x7400 x2356) (= x4925 x1107) (= x2728 x2941) (= x3011 x5700) (= x1077 x4164)) (not x4006)) (and (and (= x3751 (x5181 x2081)) (= x4593 x4490) (= (- x3751 x5746) x2386) (= x1107 x4925) (= x1077 x4164) (= x2728 x2941) (= x5746 (ite (= x5700 0) x265 0)) (< (+ x5746 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3011 x5700) (<= x4593 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1491 (x2546 x666)) (= (+ x5746 x1491) x4593) (<= 0 x4593) (= x7400 x2356)) x4006)) (= x4006 (= 0 x5700))) x7945) x5028))
(assert (x725 x6107))
(assert (= x2302 (x5740 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393))))
(assert (= (x3391 x3996) (x3391 (+ 2 x3996))))
(assert (= (=> (and (= x2423 (= x2719 0)) (or (not x2423) x2423)) x2141) x1277))
(assert (= (x8452 64 x5231 2) (x3391 (x8452 64 x5231 2))))
(assert (x4101 x7465))
(assert (x4101 x1150))
(assert (x4101 x2287))
(assert (x4101 x1194))
(assert (x4101 x5934))
(assert (= (and x6373 (not x6544)) x851))
(assert (x4101 x6759))
(assert (x4101 x8436))
(assert (x725 x1865))
(assert (x4101 x1931))
(assert (x4101 x4786))
(assert (= (or (and x4225 x1798) (and x727 x8162)) x5338))
(assert (x4101 x3862))
(assert (x4101 x5838))
(assert (x4101 x3359))
(assert (x4101 x5595))
(assert (x2496 x5626))
(assert (x725 x1637))
(assert (= x2677 (x5740 (x8452 64 x2677 11))))
(assert (x4101 x5627))
(assert (x4101 x875))
(assert (= (x3391 (x8452 64 x3252 36)) (x8452 64 x3252 36)))
(assert (= x3674 (and (not x8383) x6723)))
(assert (= (x8452 64 x1544 7) (x3391 (x8452 64 x1544 7))))
(assert (= x1174 (x6212 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393))))
(assert (x4101 x4695))
(assert (= x7152 (x6212 (x8452 x8236 x4552 x7152))))
(assert (x4101 x7083))
(assert (not (x2674 (x8452 64 x6018 36))))
(assert (x4101 x2626))
(assert (= x5961 (x6140 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961))))
(assert (= (and x620 x3368) x7221))
(assert (= (and x381 (not x271)) x5203))
(assert (x4101 x7601))
(assert (x4101 x2148))
(assert (x4101 x3967))
(assert (x4101 x7942))
(assert (x4101 x3730))
(assert (= x6703 (=> (= (= 0 x4236) x2864) (and (=> (and (not x2864) (and (= x7820 x2558) (= x2395 x4807) (= x3286 x3849) (= x8147 x4112) (= x6549 x342) (= x4936 x3769) (= x5076 x3177) (= 128 x1432) (= x8353 x7074) (= x4236 x5135) (= x3545 x8252) (= x6141 x4896) (= x6194 x6430) (= x7673 x7732) (= x6437 x7135))) x4656) (=> (and (and (<= x1737 127) (= (or (> (- x6804 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= (- x6804 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 (- x6804 4)))) x7012) (= (x5665 (+ 32 x5592)) x5794) (<= x1737 127) (= 290 x687) (= x666 x7081) (= x4179 (x5665 (+ 31 x438))) (= 0 x129) x1548 (= (= (x2962 260) 34) x7587) (= x8525 (x6155 224)) (= 256 x5289) (= (x7676 x8315) x6983) (= x1276 (= (x4756 518) (x2962 228))) (= x1719 0) (= (= (x2962 164) 64) x1554) (= x7106 x6804) (= x372 (x5665 (+ 31 x8525))) (= x4562 1084734224) (= x2788 false) (= (x4456 (- x5592 294)) x4826) (= x5592 (x5665 (+ 486 x5842))) (<= 356 x6804) (= x438 (x6434 128)) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x2821) x1276 (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x372) x7096) x1554 (= x4807 x3445) (= (x5665 (+ x7096 x5794)) x5808) (= (x4456 (- x5808 290)) x7106) (>= x7106 356) (= x2606 false) x7587 (= 160 x7985) (= x1548 (= (x4756 486) (x2962 196))) (= x5842 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4179)) (<= 1 x6983)) x2864) (and (=> x7012 x2886) (=> (and (= x7771 true) (not x7012)) (and (=> (and (= x2913 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6804) true) (> x6804 195))) x7771) (and (=> (not x2913) x2886) (=> (and (and (= (x240 164) x5031) (= x1078 (< 18446744073709551615 x5031))) x2913) (and (=> x1078 x8046) (=> (and (not x1078) (and (= (x5665 (+ 196 x5031)) x7665) (= (< x6804 x7665) x5062))) (and (=> (and (and (= x5320 (> x7895 18446744073709551615)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6804) (>= x6804 356) (= (x240 260) x7895)) (not x5062)) (and (=> x5320 x8046) (=> (and (and (= x3877 (x5665 (+ x7895 292))) (= (< x6804 x3877) x6203)) (not x5320)) (and (=> x6203 x2449) (=> (and (not x6203) (and (= x1081 (x4940 128)) (= 64 x2879) (= x12 x342) (= x6769 x7673) (= x2716 x6437) (= x5590 x4807) (= (x4940 160) x3964) (= x5076 x8080) (= x6660 x2558) (= x3545 x1579) (= x1684 x6141) (= x5818 x3286) (= x8353 x1386) (= x8130 false) (= (x4940 160) x2060) (= x5008 x6194) (= x2759 (x4940 128)) (= x4112 x5762) (= x2904 x4936) (= x2758 false) (= x2281 1))) x3086))))) (=> x5062 x2449))))))) (=> (not x7771) x2886)))))))))
(assert (x725 x2773))
(assert (= x8066 (x4519 (x658 x8066 x7449 x526 x4927))))
(assert (= (or x2415 x8286 x2982 x2588 x6756) x1440))
(assert (x5391 256))
(assert (x2496 x4093))
(assert (x4101 x7632))
(assert (x4101 x2232))
(assert (= (x3391 (x8452 64 x4447 (ite (>= 32 x8276) x1918 (ite (<= x8276 64) x2640 (ite (<= x8276 96) x3301 (ite (<= x8276 128) x7339 (ite (<= x8276 160) x4113 (ite (>= 192 x8276) x933 x7974)))))))) (x8452 64 x4447 (ite (<= x8276 32) x1918 (ite (>= 64 x8276) x2640 (ite (>= 96 x8276) x3301 (ite (>= 128 x8276) x7339 (ite (>= 160 x8276) x4113 (ite (>= 192 x8276) x933 x7974)))))))))
(assert (x4101 x3345))
(assert (x4101 x5947))
(assert (x4101 x1613))
(assert (x4101 x4082))
(assert (x4910 x3786))
(assert (x5391 x5839))
(assert (x4101 x1526))
(assert (x4101 x114))
(assert (> (x4851 x6256 x8388 x5274 x302 x3444 x334 x733) 10000))
(assert (x4101 x2664))
(assert (= x5447 (x842 (x6207 x5857 x681 x1632 x5447 x2128 x1530))))
(assert (x4101 x3106))
(assert (x4101 x3401))
(assert (= x7571 (and x5408 x7405)))
(assert (= (and x8544 (not x694)) x713))
(assert (x4101 x3104))
(assert (=> (<= x7183 10000) (= (x3391 x7183) 0)))
(assert (x4101 x3919))
(assert (x4101 x4824))
(assert (not (x2674 (x6207 x8105 x941 x8457 x6689 x1263 x3972))))
(assert (not (x2674 (x8452 64 x4024 36))))
(assert (= (x4519 (x8452 64 x1459 100)) 64))
(assert (x4101 x7362))
(assert (= x3643 (and (not x272) x8469)))
(assert (= (x4519 (x658 x6655 x1562 x2988 x4015)) x6655))
(assert (x4101 x6477))
(assert (x4101 x6338))
(assert (= (and x8047 x5451) x6356))
(assert (< (x8452 64 x4803 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x8370 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961)) x1723))
(assert (x4101 x4564))
(assert (= x3276 (x5740 (x8452 x954 x3276 x4483))))
(assert (x4101 x1139))
(assert (x4101 x1907))
(assert (x2496 x1327))
(assert (= (and x5897 x2523) x3142))
(assert (x4101 x5417))
(assert (= (and x3993 x1688) x2384))
(assert (x2674 3521034783))
(assert (x4101 x3754))
(assert (= x2914 (=> (and (= x2981 x7618) (= x2036 x4112) (= x6141 x8342) (= 0 x5608) (= x3545 x8030) (= x7045 x4930) (= x2981 (x639 255 x4261)) (= 2 x2899)) x4301)))
(assert (= (x6212 (x658 x2327 x3217 x5002 x4915)) x5002))
(assert (x4101 x7421))
(assert (= (or x3107 x7450 x1175 x837 x2490) x1611))
(assert (= (x4955 (x5018 x954 x8198 x1612 x6014 x4062)) x4062))
(assert (= x2144 (and x8579 x1532)))
(assert (x4101 x6295))
(assert (= x1779 (x6212 (x5018 x8236 x8496 x1779 x7671 x5130))))
(assert (= x954 (x4519 (x8452 x954 x3276 x4483))))
(assert (x4101 x8037))
(assert (x4101 x8486))
(assert (x5391 x2630))
(assert (x4101 x1311))
(assert (= (x5740 (x8452 64 x4024 6)) x4024))
(assert (x4101 x3228))
(assert (x8137 x4783))
(assert (x4101 x4063))
(assert (x5391 x8429))
(assert (= (and x744 x4830) x7168))
(assert (x4101 x7384))
(assert (= (and (not x7207) x3847) x8184))
(assert (x4101 x6476))
(assert (= (x5740 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291)) x649))
(assert (= (x3391 (x8452 64 x1308 36)) (x8452 64 x1308 36)))
(assert (x4101 x1030))
(assert (< 10000 (x8452 64 x1526 10)))
(assert (x4101 x5718))
(assert (x4101 x2924))
(assert (x4101 x1568))
(assert (= x4882 (and x7361 x7970)))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x4101 x7816))
(assert (= (x5740 (x5018 x4567 x7844 x3878 x6416 x1409)) x7844))
(assert (> (x8452 64 x723 11) 10000))
(assert (= (=> (and (= x1552 (= 0 x3905)) (or (and x1552 (and (= (+ x2093 x4295) x5352) (= x4814 x4904) (= x2617 x5352) (< (+ x4295 x2093) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x5352 0) (= x1467 x7374) (= x4295 (ite (= 0 x3905) x5829 0)) (<= x5352 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2093 (x891 x666)) (= x5378 x2234) (= (x7002 x2414) x8334) (= x1301 x3905) (= x2593 (- x8334 x4295)))) (and (and (= x5378 x2234) (= x7374 x1467) (= x4814 x4904) (= x1301 x3905)) (not x1552)))) x618) x5026))
(assert (x3760 x8556 256))
(assert (x4101 x3113))
(assert (x5189 x3738 32))
(assert (= x1592 (x842 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190))))
(assert (= x6304 (or x7072 x5682 x7168)))
(assert (x4101 x4396))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x8066 x2527)))
(assert (x4101 x5661))
(assert (x4101 x1222))
(assert (= (or x3373 x1991) x6665))
(assert (x3760 x2236 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x8452 64 x1648 5)))
(assert (x4101 x6548))
(assert (x4101 x5562))
(assert (=> (>= 10000 x2069) (= (x3391 x2069) 0)))
(assert (x4101 x3407))
(assert (= (=> (= x2361 (= x4320 0)) (and (=> (and x2361 (and (= x5498 false) (= x1307 x7614) (= x4512 x3545) (= 0 x7573) (= x6049 x4112) (= x8357 x6141) (= x1879 2) (= x595 true))) x2843) (=> (and (and (= x2206 x2143) (= x5698 x3252) (= x1698 x4085) (= x7497 x3781)) (not x2361)) x7786))) x3558))
(assert (x4101 x6848))
(assert (= x8292 (and x5001 x7017)))
(assert (= (x4519 (x8452 64 x4447 (ite (>= 32 x8276) x1918 (ite (<= x8276 64) x2640 (ite (<= x8276 96) x3301 (ite (<= x8276 128) x7339 (ite (<= x8276 160) x4113 (ite (>= 192 x8276) x933 x7974)))))))) 64))
(assert (x4101 x4508))
(assert (= x2642 (x6212 (x658 x5456 x3223 x2642 x3866))))
(assert (x4101 x5746))
(assert (= (x8452 x8236 x4552 x7152) (x3391 (x8452 x8236 x4552 x7152))))
(assert (= (x4519 (x8452 64 x8607 12)) 64))
(assert (x4101 x3595))
(assert (x5391 x7673))
(assert (= x3908 (=> (and (= x6330 x394) (= x4478 x4400) (= x7517 x5718) (= x3366 x3504) (= x8521 x6296) (= 0 x4775) (= x3721 x8601) (= x5555 x7866) (= x1740 x5634) (= x4128 x8005) (= x7789 x2943) (= x5526 x1914) (= x7823 x5075) (= x8597 x2847) (= x4938 1)) x8182)))
(assert (= (x4519 (x8452 64 x212 11)) 64))
(assert (= x476 (and (not x5861) x4480)))
(assert (= (and (not x8045) x7537) x6142))
(assert (x4101 x7985))
(assert (x3481 x209))
(assert (= (x4519 (x3114 x3485 x8140)) x3485))
(assert (x4101 x8285))
(assert (= (x5740 (x6207 x6609 x665 x2145 x377 x444 x8061)) x665))
(assert (= (x3391 (x6207 x6609 x665 x2145 x377 x444 x8061)) (x6207 x6609 x665 x2145 x377 x444 x8061)))
(assert (= (x3391 (x8452 x6256 x5658 x7172)) (x8452 x6256 x5658 x7172)))
(assert (= (and (not x2240) x560) x4569))
(assert (x4101 x4669))
(assert (x4101 x209))
(assert (x4101 x8524))
(assert (x4101 x7459))
(assert (= (x4955 (x5018 x6256 x112 x2259 x6535 x7432)) x7432))
(assert (x4101 x5325))
(assert (x4101 x3946))
(assert (x4101 x6602))
(assert (= x2877 (x6212 (x658 x7483 x3123 x2877 x670))))
(assert (not (x2674 (x3114 x8236 x270))))
(assert (x4101 x2911))
(assert (= (x6212 (x8452 64 x2232 100)) 100))
(assert (x4101 x6675))
(assert (= x560 (and (not x2054) x8155)))
(assert (= (and x5226 x5641) x277))
(assert (x4101 x6684))
(assert (x4101 x6918))
(assert (= x2687 (=> (and (= x8597 x1395) (= 0 x798) (= x1196 x1914) (= x7632 x3366) (= x7866 x2571) (= x4128 x826) (= x7823 x8014) (= 2 x3633) (= (x639 255 x4171) x7806) (= x5718 x7806) (= x4760 x5634) (= x8521 x3365) (= x1648 x2943) (= x3721 x40) (= x3595 x4478) (= x6598 x7288) (= x6330 x4445)) x5966)))
(assert (x2674 1914215))
(assert (= (x3114 x5857 x7740) (x3391 (x3114 x5857 x7740))))
(assert (= (x4519 (x6207 x8066 x1862 x2624 x99 x6072 x1363)) x8066))
(assert (x4101 x8388))
(assert (=> (>= 10000 x2145) (= (x3391 x2145) 0)))
(assert (x25 256 x5340))
(assert (=> (<= x471 10000) (= (x3391 x471) 0)))
(assert (x4101 x1022))
(assert (= (=> (= (= x4938 0) x255) (and (=> (and (not x255) (and (= x8005 x1463) (= x5526 x4362) (= x6296 x8064) (= x4359 x8601) (= x394 x884) (= x4291 x5075) (= x1740 x1243) (= x6994 x7789) (= x3504 x2181) (= x2228 x7517) (= x2847 x6028) (= x7173 x4400) (= x2874 x5555))) x6370) (=> (and x255 (and (= false x1845) (= x1859 x7632) (= x5204 0) (= x826 x8495) (= x846 x2571) (= true x7433) (= x7904 x2398) (= x5893 x4445) (= 2 x889) (= x2244 x1196) (= x3819 x1648) (= x4760 x8234) (= x1395 x2814) (= x8014 x816) (= x3595 x337) (= x3365 x3529) (= x7103 x40))) x2534))) x7143))
(assert (= (and (not x7539) x7774) x6294))
(assert (x4057 x3302))
(assert (=> (<= x6664 10000) (= 0 (x3391 x6664))))
(assert (x5391 x7921))
(assert (x4101 x935))
(assert (x4101 x4235))
(assert (x4101 x4803))
(assert (x4101 x547))
(assert (x4101 x6561))
(assert (x4101 x2830))
(assert (x4101 x2464))
(assert (x2674 4294967295))
(assert (< (x8448 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3189 (not x8253)) x6286))
(assert (x4101 x1693))
(assert (x3481 x331))
(assert (= (and (not x6939) x8307) x4885))
(assert (x2674 44057028636630039105102054091366763171729008530599747929804322044178077843456))
(assert (x4101 x3213))
(assert (x4101 x4813))
(assert (=> (>= 10000 x869) (= 0 (x3391 x869))))
(assert (x4101 x4400))
(assert (x5391 x4723))
(assert (x4101 x6046))
(assert (=> (>= 10000 x6659) (= 0 (x3391 x6659))))
(assert (= x7142 (and x1039 x5285)))
(assert (= (or x6534 x2786 x5523) x6484))
(assert (=> (>= 10000 x7491) (= (x3391 x7491) 0)))
(assert (x4101 x3343))
(assert (= x4031 (x842 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345))))
(assert (= (x3391 (x8452 64 x5625 7)) (x8452 64 x5625 7)))
(assert (x4101 x840))
(assert (x4101 x2479))
(assert (x4101 x4035))
(assert (x4101 x6906))
(assert (= 0 (x3391 2088793519)))
(assert (x5391 x4606))
(assert (= (x3114 32 103) (x3391 (x3114 32 103))))
(assert (= (or x3335 x713) x6668))
(assert (= (x6212 (x8452 64 x4417 2)) 2))
(assert (x4101 x7483))
(assert (x725 x4538))
(assert (x4101 x483))
(assert (x4101 x7650))
(assert (x3760 x7087 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x389) (= (x3391 x389) 0)))
(assert (x4101 x2465))
(assert (x4101 x5006))
(assert (= (or x1440 x6900) x6791))
(assert (=> (>= 10000 x7367) (= 0 (x3391 x7367))))
(assert (x25 32 x4019))
(assert (x4101 x2025))
(assert (= (x8452 64 x4807 5) (x3391 (x8452 64 x4807 5))))
(assert (x4101 x4556))
(assert (x2496 x5463))
(assert (x4101 x1465))
(assert (x4101 x5307))
(assert (x4101 x8145))
(assert (= (and x5033 x2705) x6754))
(assert (=> (<= x585 10000) (= 0 (x3391 x585))))
(assert (x4101 x2048))
(assert (=> (>= 10000 x3838) (= (x3391 x3838) 0)))
(assert (x4101 x5477))
(assert (=> (<= x2826 10000) (= (x3391 x2826) 0)))
(assert (x4101 x3686))
(assert (x4101 x439))
(assert (= (x4519 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751)) x8105))
(assert (= (and x2913 x8330) x2388))
(assert (x2496 x5697))
(assert (= (and x5544 x3202) x8425))
(assert (=> (<= x5158 10000) (= 0 (x3391 x5158))))
(assert (= x6370 (=> (and (= x2181 x3817) (= x3658 x4359) (= x2874 x1763) (= x3928 x2228) (= x884 x4864) (= x2323 x1463) (= x8064 x1423) (= x7452 x7173) (= x6028 x8417) (= x1243 x5604) (= x6994 x7825) (= x4362 x6223) (= x5681 x4291)) x6541)))
(assert (x4101 x4188))
(assert (= x7027 (and x8397 x6510)))
(assert (not (x2674 (x8452 64 1 x3502))))
(assert (x4101 x649))
(assert (=> (<= x7832 10000) (= 0 (x3391 x7832))))
(assert (x3481 x7040))
(assert (= x6262 (and x1387 (not x963))))
(assert (= (and x4889 x4434) x4343))
(assert (not (x2674 (x8452 x5857 x8356 x6054))))
(assert (=> (<= x6842 10000) (= 0 (x3391 x6842))))
(assert (= (x4955 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285)) x3907))
(assert (x4101 x7541))
(assert (x4101 x5169))
(assert (x4101 x6981))
(assert (x4101 x8315))
(assert (x4101 x7797))
(assert (x4101 x6468))
(assert (= x4052 (and x5470 x7743)))
(assert (x4101 x3728))
(assert (< 10000 (x658 x5456 x3223 x2642 x3866)))
(assert (x4101 x4085))
(assert (x4101 x2837))
(assert (x2371 x280))
(assert (x4101 x2419))
(assert (= x2299 (and x2001 (not x2620))))
(assert (= (x4519 (x8452 64 x8514 36)) 64))
(assert (=> (>= 10000 x2366) (= (x3391 x2366) 0)))
(assert (= 64 (x4519 (x8452 64 x2041 36))))
(assert (x4101 x7732))
(assert (x4101 x7280))
(assert (= x6377 (and x808 (not x755))))
(assert (= (or x1167 x8299) x4272))
(assert (x4101 x2846))
(assert (x4101 x6422))
(assert (x5391 x3786))
(assert (= (and x7774 x7539) x2963))
(assert (< (x658 x2493 x2634 x165 x5303) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2674 65459779515086145227071195481915504640854538040456829512690024447692440076288))
(assert (x4101 x190))
(assert (x4101 x45))
(assert (= (x6212 (x658 x8105 x1516 x7217 x2649)) x7217))
(assert (x4101 x1582))
(assert (= (and x4893 x4643) x8303))
(assert (< (x658 x5456 x3223 x2642 x3866) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x3170))
(assert (x5391 x7057))
(assert (x4101 x6591))
(assert (x4101 x4886))
(assert (= x5159 (=> (and (= x7173 x1676) (= x2619 x4362) (= x6994 x5921) (= x3961 x2874) (= x7134 x4291) (= x2181 x7650) (= x1243 x207) (= x7809 x4359) (= x5133 x6028) (= x1463 x510) (= x8064 x7870) (= x598 x884) (= x2228 x4374)) x6370)))
(assert (x4101 x2869))
(assert (= x6307 (and x2091 x1800)))
(assert (x3760 x2136 128))
(assert (x5189 x3097 32))
(assert (x4101 x7332))
(assert (> (x6207 x4567 x5929 x4238 x5321 x5266 x4424) 10000))
(assert (> (x658 x8247 x335 x6736 x939) 10000))
(assert (= x1200 (x6212 (x5018 x8105 x3604 x1200 x7816 x7663))))
(assert (x4101 x6332))
(assert (x4101 x6010))
(assert (x2674 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x4101 x957))
(assert (x4101 x6226))
(assert (x4101 x2104))
(assert (x2496 x4683))
(assert (x4101 x6660))
(assert (= (and x8232 (not x7294)) x7397))
(assert (=> (<= x1723 10000) (= (x3391 x1723) 0)))
(assert (x4101 x3849))
(assert (x4101 x4445))
(assert (= (x6212 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733)) x5274))
(assert (= x69 (x4955 (x6207 x1404 x1434 x7783 x2653 x69 x8128))))
(assert (x4101 x7045))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x8236 x4552 x7152)))
(assert (= 64 (x4519 (x8452 64 x5231 2))))
(assert (=> (>= 10000 x3632) (= (x3391 x3632) 0)))
(assert (x4101 x8309))
(assert (= (or x7803 x2194 x5854 x8365 x3165 (and x6856 x3542) (and x2071 x6551)) x5609))
(assert (=> (<= x59 10000) (= (x3391 x59) 0)))
(assert (= x4662 (x4955 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551))))
(assert (x4101 x633))
(assert (=> (>= 10000 x5456) (= (x3391 x5456) 0)))
(assert (=> (>= 10000 x6256) (= 0 (x3391 x6256))))
(assert (x5528 x5863))
(assert (< 10000 (x8452 64 x666 2)))
(assert (=> (>= 10000 x1987) (= (x3391 x1987) 0)))
(assert (= x2066 (and x3273 x4836)))
(assert (=> (<= x2040 10000) (= 0 (x3391 x2040))))
(assert (x4101 x2685))
(assert (=> (>= 10000 x2439) (= 0 (x3391 x2439))))
(assert (x4101 x5489))
(assert (x3481 x2839))
(assert (=> (<= x6313 10000) (= 0 (x3391 x6313))))
(assert (x4101 x3088))
(assert (= x5033 (and x830 x6487)))
(assert (=> (>= 10000 x821) (= 0 (x3391 x821))))
(assert (x4101 x276))
(assert (= x7070 (x5740 (x3114 x8276 x7070))))
(assert (= (and x7084 (not x8487)) x4316))
(assert (< (x658 x7301 x6879 x5406 x821) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x939 10000) (= 0 (x3391 x939))))
(assert (= (x6212 (x5018 x7301 x6276 x3370 x6512 x4475)) x3370))
(assert (x4101 x4011))
(assert (=> (<= x7055 10000) (= (x3391 x7055) 0)))
(assert (= (and x8362 (not x3449)) x4825))
(assert (= (x4955 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665)) x613))
(assert (=> (>= 10000 x4807) (= 0 (x3391 x4807))))
(assert (= (or x4958 x5457) x775))
(assert (x5189 x6194 2))
(assert (x4101 x6318))
(assert (= (x3391 (x8452 x2493 x5680 x3170)) (x8452 x2493 x5680 x3170)))
(assert (= x1138 (and (not x3680) x5137)))
(assert (< (x8452 x8276 x6717 x3740) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x99))
(assert (= x3547 (and x4672 x4245)))
(assert (=> (>= 10000 x7844) (= 0 (x3391 x7844))))
(assert (> (x8452 64 x1308 36) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x110 11)))
(assert (= (and x4965 (not x3833)) x440))
(assert (= (x3391 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (x4101 x5725))
(assert (x4101 x8005))
(assert (x4101 x6062))
(assert (= x3246 (and x3137 (not x2647))))
(assert (= x8338 (and x3998 x2963)))
(assert (x4101 x3272))
(assert (x5391 x2791))
(assert (= (and (not x301) x4979) x1330))
(assert (x4101 x5023))
(assert (x4101 x5783))
(assert (= (=> (and (= x6638 x3064) (= x2153 x6886) (= x7775 x5215) (= x1974 x4841)) x6381) x8493))
(assert (x4101 x4876))
(assert (= (x6212 (x5018 x7483 x7258 x567 x3375 x3585)) x567))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x6609 x6160)))
(assert (= x5456 (x4519 (x8452 x5456 x7626 x2592))))
(assert (x4101 x8360))
(assert (x4101 x361))
(assert (x4101 x860))
(assert (=> (<= x8490 10000) (= (x3391 x8490) 0)))
(assert (< 10000 (x3114 32 x238)))
(assert (x4101 x8327))
(assert (x4101 x8391))
(assert (= (x5740 (x5018 x3728 x7647 x2836 x4072 x2598)) x7647))
(assert (x4101 x1073))
(assert (x4101 x4791))
(assert (= (or x6208 x953 x2160 x7437 x2652 x333 x5694 x2789 x2336 x2216 x2066 x3065 x6358 x2340 x2239 x5500 x2757 x4779 x8303 x111 x4724 x8011 x3859 x8175 x4344 x3514 x5217) x5146))
(assert (x4101 x8355))
(assert (x4101 x8273))
(assert (x4101 x6919))
(assert (x4101 x5575))
(assert (x4101 x1829))
(assert (= (and (not x1388) x1106) x5644))
(assert (=> (>= 10000 x1649) (= (x3391 x1649) 0)))
(assert (x4101 x4409))
(assert (= x2079 (x5740 (x3114 x4567 x2079))))
(assert (x4101 x4199))
(assert (= (x3391 x7948) (x3391 (+ 1 x7948))))
(assert (= (and (not x1153) x2933) x8318))
(assert (< (x6207 x3728 x6176 x1012 x365 x1345 x6842) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2047 (and x4647 x2923)))
(assert (x4101 x5689))
(assert (= x4505 (x4955 (x6207 x2327 x3240 x576 x6659 x4505 x8420))))
(assert (= (=> (and (= true x7687) (= x6049 x4112) (= x7614 36) (= x4512 x3545) (= x7573 0) (= x5481 2) (= false x6219) (= x8357 x6141)) x2843) x7613))
(assert (x2496 x5713))
(assert (x4101 x4126))
(assert (x3760 x6321 256))
(assert (= x8553 (x5740 (x658 x954 x8553 x4050 x8396))))
(assert (x4101 x2585))
(assert (= (x6212 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291)) x4144))
(assert (= (and x5673 x4801) x3176))
(assert (not (x2674 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640))))
(assert (= x2098 (and x6250 x4806)))
(assert (= x153 (x4955 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550))))
(assert (x4101 x6739))
(assert (= x954 (x4519 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263))))
(assert (x8137 x2478))
(assert (x4101 x4527))
(assert (x4101 x5620))
(assert (x4101 x8317))
(assert (= x4733 (and (not x3951) x1165)))
(assert (< (x8452 64 x4417 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3391 (x8452 64 x6018 36)) (x8452 64 x6018 36)))
(assert (x4101 x1145))
(assert (x4101 x1914))
(assert (= x6378 (=> (and (or (and (and (= x7063 x4348) (= x3430 (+ x1647 x3235)) (= x7548 x2902) (= (x1709 x729) x1647) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3235 x1647)) (<= x3430 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5459 x5032) (= x4489 x5477) (= (- x7130 x3235) x6622) (= (x4130 x3286) x7130) (= x7382 x6478) (= x3235 (ite (= 0 x5459) x4253 0)) (<= 0 x3430) (= x3955 x6789) (= x3430 x4276)) x5220) (and (and (= x7548 x2902) (= x7063 x4348) (= x7382 x6478) (= x5477 x4489) (= x3955 x6789) (= x5032 x5459)) (not x5220))) (= (= 0 x5459) x5220)) x1724)))
(assert (=> (<= x7633 10000) (= (x3391 x7633) 0)))
(assert (x4101 x4046))
(assert (x4101 x2799))
(assert (x4101 x6374))
(assert (not (x2674 (x8452 64 x1459 100))))
(assert (x4101 x5920))
(assert (= (x6212 (x6207 x3728 x6176 x1012 x365 x1345 x6842)) x1012))
(assert (= x6462 (or (and x8152 x143) (and x6505 x7733))))
(assert (x4101 x4139))
(assert (= x8469 (and x5053 x3939)))
(assert (x4101 x3593))
(assert (x725 x2136))
(assert (=> (<= x518 10000) (= 0 (x3391 x518))))
(assert (x4101 x7471))
(assert (= x5217 (and x4245 (not x4672))))
(assert (= (x3114 x8236 x270) (x3391 (x3114 x8236 x270))))
(assert (not (x2674 (x658 x7301 x6879 x5406 x821))))
(assert (=> (<= x6512 10000) (= (x3391 x6512) 0)))
(assert (< (x5018 x8236 x8496 x1779 x7671 x5130) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x5554 x7731) x7222))
(assert (not (x2674 (x8452 x8066 x6941 x7545))))
(assert (= (or (and x6707 x7690) (and x1205 x4882) (and x1452 x504)) x2774))
(assert (x4101 x6431))
(assert (=> (>= 10000 x7629) (= 0 (x3391 x7629))))
(assert (x4101 x470))
(assert (x4101 x4850))
(assert (x4101 x1832))
(assert (x25 32 (ite (not (= 0 x2511)) 1 0)))
(assert (x4101 x5083))
(assert (x4101 x579))
(assert (< 10000 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073)))
(assert (< 10000 (x3114 x6655 x5210)))
(assert (not (x2674 (x3114 32 104))))
(assert (> (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865) 10000))
(assert (=> (<= x1588 10000) (= (x3391 x1588) 0)))
(assert (x4101 x6327))
(assert (= x7633 (x5740 (x6207 x8276 x7633 x667 x44 x579 x2604))))
(assert (x4101 x6509))
(assert (x4101 x2031))
(assert (= x2975 (or (and (not x4393) x7340) x1893 (and x4078 (not x2683)) (and (not x4308) x6456) (and (not x1608) x4501))))
(assert (x3760 x4444 32))
(assert (= (x5740 (x3114 x6655 x5210)) x5210))
(assert (= (x842 (x6207 x6655 x3754 x1280 x8438 x8159 x1634)) x8438))
(assert (= (x6212 (x8452 64 x2123 100)) 100))
(assert (x4101 x2876))
(assert (=> (<= x8339 10000) (= (x3391 x8339) 0)))
(assert (x4101 x2308))
(assert (x4057 x6351))
(assert (= x7449 (x5740 (x658 x8066 x7449 x526 x4927))))
(assert (x4101 x5475))
(assert (= x4246 (or x7603 x3913)))
(assert (x4101 x3689))
(assert (x4101 x3612))
(assert (x2496 x4930))
(assert (x2496 x3966))
(assert (= (and x6110 x6904) x3257))
(assert (x4101 x6659))
(assert (x4101 x3329))
(assert (x4101 x7608))
(assert (x4101 x4424))
(assert (x5391 x2110))
(assert (x4101 x1246))
(assert (x4101 x3955))
(assert (= 64 (x4519 (x8452 64 x2743 36))))
(assert (x4101 x6526))
(assert (< 10000 (x6207 x2327 x3240 x576 x6659 x4505 x8420)))
(assert (=> (>= 10000 x8128) (= 0 (x3391 x8128))))
(assert (=> (>= 10000 x2613) (= 0 (x3391 x2613))))
(assert (=> (>= 10000 x4915) (= 0 (x3391 x4915))))
(assert (x725 x7040))
(assert (=> (>= 10000 x5546) (= 0 (x3391 x5546))))
(assert (= (x842 (x5018 x2327 x4522 x2439 x7183 x8482)) x7183))
(assert (x4101 x6273))
(assert (x4101 x4038))
(assert (x4101 x3146))
(assert (x4101 x1233))
(assert (=> (>= 10000 x112) (= (x3391 x112) 0)))
(assert (= 64 (x4519 (x8452 64 x1528 36))))
(assert (x5391 x6892))
(assert (x4101 x4522))
(assert (= (and (not x6410) x6167) x143))
(assert (x4101 x2059))
(assert (x4057 x4676))
(assert (> (x6207 x3728 x6176 x1012 x365 x1345 x6842) 10000))
(assert (=> (>= 10000 x7778) (= 0 (x3391 x7778))))
(assert (= 0 (x3391 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (= x1044 (x5740 (x8452 x8247 x1044 x6011))))
(assert (x4101 x6983))
(assert (= x2473 (and x6837 (not x1549))))
(assert (x4101 x7895))
(assert (x4101 x3843))
(assert (x4101 x7727))
(assert (= (x3114 x6609 x6160) (x3391 (x3114 x6609 x6160))))
(assert (=> (>= 10000 x4521) (= 0 (x3391 x4521))))
(assert (= (and (not x4363) x180) x3035))
(assert (x4101 x6737))
(assert (= x3807 (and x7571 x7159)))
(assert (x4101 x2016))
(assert (=> (>= 10000 x3808) (= 0 (x3391 x3808))))
(assert (x4101 x86))
(assert (x3760 x5330 32))
(assert (= (and (not x6921) x2800) x1868))
(assert (x4101 x1449))
(assert (= (x6212 (x5018 x6655 x7778 x3104 x3601 x1789)) x3104))
(assert (= (x5740 (x658 x3728 x4680 x8449 x7889)) x4680))
(assert (x4101 x463))
(assert (not (x2674 (x3114 x8066 x2527))))
(assert (x4057 x8050))
(assert (x4101 x3362))
(assert (not (x2674 (x8452 x8236 x4552 x7152))))
(assert (x4101 x171))
(assert (x4101 x2938))
(assert (= (x8452 64 x983 6) (x3391 (x8452 64 x983 6))))
(assert (x4101 x2482))
(assert (x2371 (ite (not (= x4199 0)) 1 0)))
(assert (x4101 x7510))
(assert (x4101 x2550))
(assert (= (x3391 (x8452 64 x1528 36)) (x8452 64 x1528 36)))
(assert (= (x5740 (x8452 x3728 x6829 x267)) x6829))
(assert (x3760 x4149 32))
(assert (x4101 x1652))
(assert (x4101 x4812))
(assert (x4101 x5506))
(assert (x4101 x3283))
(assert (x25 32 x2200))
(assert (= x1280 (x6212 (x6207 x6655 x3754 x1280 x8438 x8159 x1634))))
(assert (x4101 x4377))
(assert (= (and (not x1438) x3572) x118))
(assert (x4101 x6228))
(assert (=> (<= x6010 10000) (= 0 (x3391 x6010))))
(assert (= x905 (and (not x4099) x1211)))
(assert (= x6856 (and (not x3413) x3643)))
(assert (x4101 x8180))
(assert (= x6284 (or x4440 x1270)))
(assert (= (x4519 (x8452 x8105 x3148 x7367)) x8105))
(assert (= (or x4759 x4254) x4222))
(assert (=> (>= 10000 x2414) (= (x3391 x2414) 0)))
(assert (x4101 x7367))
(assert (x4101 x8019))
(assert (x4101 x8016))
(assert (x4101 x1001))
(assert (= (or (and x7077 x6322) (and x5483 x893)) x1401))
(assert (x4101 x3456))
(assert (= (x3391 (x658 x3728 x4680 x8449 x7889)) (x658 x3728 x4680 x8449 x7889)))
(assert (= x5992 (and x7219 x373)))
(assert (x4101 x7055))
(assert (x4101 x5224))
(assert (x5391 x2869))
(assert (x2371 x4112))
(assert (x4101 x7671))
(assert (= x1399 (x842 (x5018 x8247 x7491 x7316 x1399 x6343))))
(assert (x4101 x5983))
(assert (x4101 x8479))
(assert (x2674 3812630263))
(assert (= (x8370 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803)) x6621))
(assert (= (x8370 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190)) x6808))
(assert (= (x3391 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070)) (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070)))
(assert (= 64 (x4519 (x8452 64 x2824 2))))
(assert (= x3296 (and (not x5345) x5846)))
(assert (= (x3391 (x5018 x7301 x6276 x3370 x6512 x4475)) (x5018 x7301 x6276 x3370 x6512 x4475)))
(assert (x3760 x1071 256))
(assert (= (x4519 (x3114 x4567 x2079)) x4567))
(assert (=> (<= x1640 10000) (= 0 (x3391 x1640))))
(assert (= (and x2595 (not x1485)) x1167))
(assert (x2496 x3730))
(assert (x4101 x5302))
(assert (x4101 x294))
(assert (x4101 x7051))
(assert (= x8477 (=> (and (= 0 x764) (= x2745 false) (= true x3532)) x7883)))
(assert (x4101 x1469))
(assert (x3760 x5020 32))
(assert (x4101 x2707))
(assert (x4101 x6117))
(assert (= (=> (= x8430 (= x1625 0)) (and (=> (and x8430 (and (= x4512 x3545) (= x7614 x7785) (= x6141 x8357) (= x6049 x4112) (= x5264 true) (= x3845 false) (= x7573 0) (= 2 x2724))) x2843) (=> (and (and (= x7556 x4841) (= x1136 x6886) (= x6638 x3578) (= x4283 x5215)) (not x8430)) x8493))) x4757))
(assert (= x1406 (and (not x7075) x929)))
(assert (= (or x5021 x4100 x5644) x716))
(assert (x4101 x6926))
(assert (x4101 x2280))
(assert (x4057 x6561))
(assert (x4101 x5072))
(assert (x4101 x6995))
(assert (x4101 x2113))
(assert (x4101 x826))
(assert (x4101 x7217))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825)))
(assert (=> (>= 10000 x2222) (= (x3391 x2222) 0)))
(assert (x4101 x7194))
(assert (x2674 38584857114614344130707641774870441135179346817440091772946614992565446901760))
(assert (x4101 x6929))
(assert (= x44 (x842 (x6207 x8276 x7633 x667 x44 x579 x2604))))
(assert (> (x3114 x6256 x2579) 10000))
(assert (x4101 x6879))
(assert (= x3485 (x4519 (x658 x3485 x166 x719 x2339))))
(assert (= x8276 (x4519 (x658 x8276 x8404 x5313 x424))))
(assert (< (x5018 x3485 x4823 x5174 x8145 x7574) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5251))
(assert (x3760 x2585 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x6892 (x8297 x2571 2)) (= x3635 (- x7394 132)) (= (x639 1 x2571) x7384) (= x3207 (ite (< 0 x7384) x6892 (x639 127 x6892))) (= x8149 (> x4337 0)) (= (x4456 (- x7384 (mod (ite (< x3207 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x4337)) (and (=> (and x8149 (and (= x1726 (+ 32 x7394)) (= (= 0 x2508) x2193) (= x2508 (x639 1 x2571)))) (and (=> (and (and (= x2998 (* (ite (not (= 0 x3207)) 1 0) 32)) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2571) x5165) (or (= 0 x2998) (= 32 x2998)) (= (+ x1726 x2998) x1157)) x2193) x3372) (=> (and (not x2193) (and (and (= (< 0 x3207) x3911) (= x6974 (x3114 32 104))) (or (and (not x3911) (= x1744 0)) (and (and (>= 32 x3207) (= (x7893 x6974) x6635) (= 32 x1744)) x3911)))) x3829))) (=> (not x8149) x5684))) x244))
(assert (x4101 x3197))
(assert (x5189 x826 2))
(assert (= 64 (x4519 (x8452 64 x6251 12))))
(assert (x4101 x372))
(assert (= x6115 (x8370 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070))))
(assert (= x1588 (x6212 (x658 x1404 x6591 x1588 x6117))))
(assert (x4101 x2904))
(assert (x4101 x7394))
(assert (x4101 x3621))
(assert (x4101 x7758))
(assert (x4101 x1219))
(assert (x4101 x5032))
(assert (x4101 x1392))
(assert (x4101 x7105))
(assert (= (and x7408 (not x2361)) x2903))
(assert (x4101 x1963))
(assert (x4101 x2424))
(assert (= (and x4372 x5220) x834))
(assert (not (x2674 (x6207 x2327 x3240 x576 x6659 x4505 x8420))))
(assert (x4101 x5309))
(assert (> (x8452 64 x8514 36) 10000))
(assert (= x2197 (x8370 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717))))
(assert (not (x2674 (x8452 64 x2232 100))))
(assert (= x8316 (x5740 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550))))
(assert (x4101 x2100))
(assert (x4101 x6052))
(assert (< (x8452 x2327 x708 x4778) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5519))
(assert (x4101 x2120))
(assert (x4101 x2217))
(assert (= 0 (x4519 (x8448 0))))
(assert (not (x2674 (x658 x8247 x335 x6736 x939))))
(assert (= x6290 (and x5861 x4480)))
(assert (=> (>= 10000 x3370) (= (x3391 x3370) 0)))
(assert (x4101 x8090))
(assert (x4101 x1000))
(assert (x4101 x1743))
(assert (= x5053 (and x2071 (not x6551))))
(assert (= x6594 (and x4158 x2330)))
(assert (= (or x616 x8318) x7731))
(assert (= x6762 (and x1988 x5156)))
(assert (x4101 x8109))
(assert (= (x8452 x2327 x708 x4778) (x3391 (x8452 x2327 x708 x4778))))
(assert (x4101 x5458))
(assert (x4101 x7192))
(assert (= (x4955 (x6207 x6601 x1154 x6468 x2260 x2279 x5339)) x2279))
(assert (x4101 x4362))
(assert (x4101 x6844))
(assert (= (and x8209 (not x3319)) x1815))
(assert (x4101 x2495))
(assert (= x5456 (x4519 (x658 x5456 x3223 x2642 x3866))))
(assert (=> (>= 10000 x4282) (= 0 (x3391 x4282))))
(assert (x4101 x3549))
(assert (x4101 x6512))
(assert (=> (>= 10000 x6628) (= 0 (x3391 x6628))))
(assert (x4101 x1740))
(assert (< (x3114 x8276 x7070) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x8406))
(assert (= x1986 (and (not x6282) x7685)))
(assert (x4101 x8295))
(assert (not (x2674 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828))))
(assert (x4101 x6515))
(assert (= x869 (x6140 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385))))
(assert (x4101 x1062))
(assert (x4101 x3943))
(assert (x4101 x3184))
(assert (x4101 x6133))
(assert (x8137 x1487))
(assert (= x2598 (x4955 (x5018 x3728 x7647 x2836 x4072 x2598))))
(assert (=> (<= x3840 10000) (= 0 (x3391 x3840))))
(assert (x4101 x3156))
(assert (x4101 x397))
(assert (x4101 x5355))
(assert (x3760 x1314 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (x3391 x5655) (x3391 (+ 1 x5655))))
(assert (x4101 x4458))
(assert (x3760 x3535 32))
(assert (x4101 x5808))
(assert (= x8085 (and (not x3927) x4942)))
(assert (=> (<= x2079 10000) (= 0 (x3391 x2079))))
(assert (x4057 (+ x4200 31)))
(assert (= x6523 (=> (and (or (and (not x5647) (and (= x3919 (x7676 x729)) (>= 1461501637330902918203684832716283019655932542975 x7392) (= x8193 false) (= x729 x7392) (>= x7392 1) (= x4160 false) (= x5452 x6195) (= x3621 310283853) (>= 127 x1593) (= 36 x2611) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x8029) (>= x3919 1) (= x1954 false) (<= x1593 127) (= false x1895))) (and x5647 (and (>= 57896044618658097711785492504343953926634992332820282019728792003956 x5452) (= x7478 false) (= x1496 36) (>= 127 x3655) (>= x2326 1) (= x8358 x2785) (= x202 x6822) (>= 127 x3655) (= x6822 (* 1000000000 x5452)) (= (x7676 x8278) x2326) (= x3830 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x7344 false) (= x332 false) (= x5452 x2785) (= false x8249) (= x4909 310283853)))) (and (= 128 x2322) (= x1232 2088793519) (= x7377 false) (<= 1 x2150) (= false x3109) (= x5647 (= x8278 x7392)) (>= 127 x85) (<= x85 127) (<= x7392 1461501637330902918203684832716283019655932542975) (= (x7676 x666) x2150) (= x1360 4))) x2090)))
(assert (x4101 x3363))
(assert (x4101 x6585))
(assert (x4101 x3559))
(assert (< 10000 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707)))
(assert (x4101 x6306))
(assert (= (x5740 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300)) x7346))
(assert (x4101 x2170))
(assert (= x399 (and x5791 x2037)))
(assert (x3760 x4723 256))
(assert (x3760 x4783 256))
(assert (= x4180 (and x2691 (not x6910))))
(assert (= x8276 (x4519 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865))))
(assert (x4101 x4534))
(assert (x4057 x4525))
(assert (x4101 x1256))
(assert (x4101 x2743))
(assert (= (x3391 (x3114 32 x3750)) (x3114 32 x3750)))
(assert (x4101 x735))
(assert (= (and x4535 (not x5844)) x2894))
(assert (x4101 x4879))
(assert (x4101 x4531))
(assert (x4101 x1505))
(assert (x4101 x2988))
(assert (x25 32 x2038))
(assert (x4101 x6531))
(assert (x4101 x5985))
(assert (= (and x7951 x4895) x5673))
(assert (x4101 x1603))
(assert (= (and x1123 x4052) x7307))
(assert (x4101 x4930))
(assert (not (x2674 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817))))
(assert (= 36 (x6212 (x8452 64 x8514 36))))
(assert (x5391 x6))
(assert (x4101 x1805))
(assert (= (x5740 (x658 x8105 x1516 x7217 x2649)) x1516))
(assert (x4101 x3256))
(assert (= 6 (x6212 (x8452 64 x7055 6))))
(assert (x2371 x4125))
(assert (x4101 x846))
(assert (x4101 x1329))
(assert (x2371 x990))
(assert (= (x8452 64 x2232 100) (x3391 (x8452 64 x2232 100))))
(assert (x4101 x4526))
(assert (x4101 x8577))
(assert (= (x3391 (x3114 x8066 x2527)) (x3114 x8066 x2527)))
(assert (x4101 x1066))
(assert (x4101 x4122))
(assert (= x5554 (or x2686 x759)))
(assert (x4101 x497))
(assert (=> (>= 10000 x2587) (= (x3391 x2587) 0)))
(assert (=> (>= 10000 x3585) (= 0 (x3391 x3585))))
(assert (=> (<= x6794 10000) (= (x3391 x6794) 0)))
(assert (= (x3391 (x8452 64 x5128 12)) (x8452 64 x5128 12)))
(assert (x4101 x733))
(assert (= x4396 (x842 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550))))
(assert (x4101 x4417))
(assert (x4101 x7915))
(assert (= x1944 (=> (= x8047 (= 0 x7158)) (and (=> (and (and (= x5847 x1196) (= x4526 x7158) (= x8014 x6764) (= x7632 x127) (= x6069 x3365) (= 128 x6301) (= x6047 x2571) (= x1385 x1395) (= x40 x7838) (= x5113 x3595) (= x2986 x4998) (= x826 x4765) (= x4445 x5935) (= x6103 x4760) (= x1648 x2413)) (not x8047)) x5547) (=> (and (and (= x5926 (= (x3084 260) 34)) (= x5888 x1648) (= x3057 (= (x3084 196) (x5540 486))) x6409 (= x5445 (x5665 (+ x5171 31))) (>= 127 x5080) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x6701) (= x1898 (x4456 (- x8475 294))) (= (x4456 (- x8138 290)) x1235) (= x4811 false) (<= 1 x920) (>= x1235 356) (>= 127 x5080) (= x1235 x4753) (= (x2139 128) x5171) (<= 356 x4753) x5926 x3057 (= (x5665 (+ 32 x8475)) x7347) (= 0 x7447) (= x1695 0) (= x5776 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5445)) (= 290 x3407) (= x1780 false) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4444) x7738) (= (= (x3084 164) 64) x6409) (= 160 x711) (= (x1202 224) x4988) (= (= (x5540 518) (x3084 228)) x8103) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x4753 4))) (> 160 (- x4753 4))) (> (- x4753 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3511) (= x3932 256) (= (x5665 (+ x4988 31)) x4444) (= (x5665 (+ 486 x5776)) x8475) (= 1084734224 x5434) (= (x7676 x8315) x920) (= (x5665 (+ x7738 x7347)) x8138) x8103 (= x592 x666)) x8047) (and (=> (and (= true x8447) (not x3511)) (and (=> (not x8447) x7284) (=> (and x8447 (= x8450 (and (= true (<= x4753 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 195 x4753)))) (and (=> (not x8450) x7284) (=> (and (and (= (< 18446744073709551615 x5995) x8162) (= x5995 (x3066 164))) x8450) (and (=> (and (and (= (< x4753 x5416) x6830) (= x5416 (x5665 (+ x5995 196)))) (not x8162)) (and (=> x6830 x6008) (=> (and (not x6830) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4753) (<= 356 x4753) (= x4225 (< 18446744073709551615 x693)) (= (x3066 260) x693))) (and (=> (and (not x4225) (and (= (x5665 (+ x693 292)) x1207) (= (< x4753 x1207) x2133))) (and (=> (and (not x2133) (and (= x6389 (x6710 128)) (= x1395 x1292) (= x8014 x5488) (= x2283 64) (= false x7639) (= false x1060) (= x390 x1196) (= x4998 x6713) (= (x6710 160) x2362) (= x7808 x826) (= x5399 x4445) (= x1648 x4560) (= x40 x7032) (= x2571 x3802) (= (x6710 128) x6368) (= x3595 x7930) (= x2876 1) (= x5707 (x6710 160)) (= x3365 x5946) (= x7708 x4760) (= x2756 x7632))) x7680) (=> x2133 x6008))) (=> x4225 x2039))))) (=> x8162 x2039))))))) (=> x3511 x7284)))))))
(assert (= x1193 x2168))
(assert (x4101 x3076))
(assert (=> (>= 10000 x7944) (= (x3391 x7944) 0)))
(assert (x4101 x167))
(assert (x4101 x8323))
(assert (x4101 x1632))
(assert (= x3750 (x5740 (x3114 32 x3750))))
(assert (x4101 x5228))
(assert (x4101 x7346))
(assert (x4101 x2178))
(assert (x4101 x6542))
(assert (x4101 x8278))
(assert (x4101 x280))
(assert (= x2436 (and (not x317) x437)))
(assert (= x4219 (and x50 (not x1231))))
(assert (=> (<= x2034 10000) (= 0 (x3391 x2034))))
(assert (=> (<= x4567 10000) (= (x3391 x4567) 0)))
(assert (= x545 (x6212 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (x2674 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (x4101 x6839))
(assert (x4101 x8496))
(assert (x4101 x6465))
(assert (x2371 x1417))
(assert (x3760 x2571 256))
(assert (x4101 x4936))
(assert (x4101 x1467))
(assert (x4101 x717))
(assert (=> (<= x5646 10000) (= (x3391 x5646) 0)))
(assert (x4101 x2153))
(assert (x2496 x710))
(assert (x4101 x289))
(assert (= (x5740 (x6207 x6601 x1154 x6468 x2260 x2279 x5339)) x1154))
(assert (x4101 x6824))
(assert (x4101 x825))
(assert (x2496 x4122))
(assert (x5528 x7874))
(assert (x4101 x3936))
(assert (x5391 x2585))
(assert (x4101 x6096))
(assert (= x8325 (and x7743 (not x5470))))
(assert (x4101 x6074))
(assert (= (x4519 (x5018 x8247 x7491 x7316 x1399 x6343)) x8247))
(assert (=> (>= 10000 x6084) (= 0 (x3391 x6084))))
(assert (= x5342 (x842 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819))))
(assert (x4101 x3545))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x658 x5857 x2673 x2267 x6794)))
(assert (= x5658 (x5740 (x8452 x6256 x5658 x7172))))
(assert (= (and x4939 (not x32)) x5938))
(assert (x2496 x7051))
(assert (= x7059 (or x1534 x4452)))
(assert (x4101 x4770))
(assert (x4101 x8507))
(assert (=> (>= 10000 x729) (= (x3391 x729) 0)))
(assert (x4101 x3469))
(assert (x4101 x3695))
(assert (= x3123 (x5740 (x658 x7483 x3123 x2877 x670))))
(assert (=> (<= x1899 10000) (= 0 (x3391 x1899))))
(assert (= (and x4528 x5949) x6492))
(assert (= x1404 (x4519 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550))))
(assert (= x4447 (x5740 (x8452 64 x4447 (ite (<= x8276 32) x1918 (ite (>= 64 x8276) x2640 (ite (>= 96 x8276) x3301 (ite (<= x8276 128) x7339 (ite (<= x8276 160) x4113 (ite (<= x8276 192) x933 x7974))))))))))
(assert (= 0 (x3391 65459779515086145227071195481915504640854538040456829512690024447692440076288)))
(assert (= (x5740 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190)) x2083))
(assert (x4101 x5252))
(assert (= (x5740 (x8452 x3485 x5701 x2008)) x5701))
(assert (= (x5740 (x8452 x8276 x6717 x3740)) x6717))
(assert (= (and x5102 x4493) x5770))
(assert (= 10 (x6212 (x8452 64 x1526 10))))
(assert (x4101 x6200))
(assert (x4101 x2472))
(assert (x3760 x5445 32))
(assert (x4101 x4285))
(assert (x4101 x3394))
(assert (= x5857 (x4519 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640))))
(assert (x5528 x4980))
(assert (x4101 x5335))
(assert (x4101 x964))
(assert (x4101 x3737))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x212 11)))
(assert (= (x6212 (x8452 64 x2041 36)) 36))
(assert (= x2786 (and x5693 x6090)))
(assert (x4101 x7706))
(assert (= x6007 (and (not x182) x5659)))
(assert (x4101 x1704))
(assert (x4101 x821))
(assert (=> (<= x424 10000) (= 0 (x3391 x424))))
(assert (x725 x793))
(assert (= x5298 (and x1242 x2825)))
(assert (x725 x5199))
(assert (=> (<= x7550 10000) (= 0 (x3391 x7550))))
(assert (= (and (not x4003) x8229) x7018))
(assert (= (x842 (x6207 x6256 x690 x1813 x3211 x2826 x8101)) x3211))
(assert (x5189 x4188 256))
(assert (x4101 x867))
(assert (x4101 x4539))
(assert (x4101 x5790))
(assert (=> (<= x5296 10000) (= 0 (x3391 x5296))))
(assert (x4101 x6957))
(assert (x4101 x6466))
(assert (x2496 x764))
(assert (x4101 x6855))
(assert (= (and (not x8275) x3053) x1355))
(assert (= x9 (x5740 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819))))
(assert (=> (<= x1618 10000) (= (x3391 x1618) 0)))
(assert (= (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751) (x3391 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751))))
(assert (x2496 x1847))
(assert (= (x5740 (x8452 64 x110 11)) x110))
(assert (x4101 x2041))
(assert (x5997 x1314))
(assert (x4101 x7418))
(assert (= (x6140 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345)) x3345))
(assert (x4101 x690))
(assert (x4101 x7754))
(assert (= x3827 (and x8000 x3058)))
(assert (= 7 (x6212 (x8452 64 x4803 7))))
(assert (= (and x6973 x8445) x4810))
(assert (x4101 x7167))
(assert (x4101 x729))
(assert (x4101 x4920))
(assert (= (x3391 (x6207 x6601 x1154 x6468 x2260 x2279 x5339)) (x6207 x6601 x1154 x6468 x2260 x2279 x5339)))
(assert (< 10000 (x658 x8105 x1516 x7217 x2649)))
(assert (x4101 x7746))
(assert (= (and x5715 x5114) x7315))
(assert (not (x2674 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393))))
(assert (x5391 x7050))
(assert (x2371 32))
(assert (x4101 x8594))
(assert (= x8500 (x5740 (x3114 x8247 x8500))))
(assert (x4101 x6842))
(assert (x4101 x6260))
(assert (= x5499 (and x6353 (not x5247))))
(assert (< 10000 (x8452 x8236 x4552 x7152)))
(assert (= (x3391 x6242) (x3391 (+ 1 x6242))))
(assert (= (x3391 45231284858326638837332416019018714005183587760015845327913118753091066265600) 0))
(assert (= x4314 (or x1460 (and x4246 (not x6269)))))
(assert (x8137 x208))
(assert (x725 x4149))
(assert (=> (<= x6717 10000) (= (x3391 x6717) 0)))
(assert (= x559 (or (and x4877 x122) (and x2647 x3137) (and x115 x4010))))
(assert (= x8060 (and (not x4894) x3780)))
(assert (= x6201 (=> (and (= 2 x1416) (= x8439 x3365) (= x3461 x40) (= x2571 x3320) (= x1395 x4021) (= x8594 x7632) (= x633 0) (= x8287 x826) (= x5461 x4445) (= x93 x7904) (= x2794 x4760) (= x1196 x7822) (= x2798 x3595) (= x8014 x6175) (= x1648 x577)) x5915)))
(assert (x4101 x5244))
(assert (x25 32 x280))
(assert (=> (<= x7976 10000) (= 0 (x3391 x7976))))
(assert (x4101 x1300))
(assert (x8137 x4723))
(assert (x4101 x852))
(assert (x4101 x4142))
(assert (=> (<= x4819 10000) (= (x3391 x4819) 0)))
(assert (= (and x3147 (not x7579)) x1284))
(assert (x4101 x293))
(assert (x4101 x7679))
(assert (= (x5740 (x8452 64 x212 11)) x212))
(assert (x5189 x6561 32))
(assert (x25 32 (ite (not (= x7188 0)) 1 0)))
(assert (x4101 x3932))
(assert (x4101 x6158))
(assert (x4101 x189))
(assert (= x1581 (or (and x5679 x3087) (and x6968 x7395) (and x2701 x7555))))
(assert (= (x3391 49960157028345592648530624234191905822321225401495951855107091972775720517632) 0))
(assert (x4101 x7851))
(assert (x8137 x8135))
(assert (= 4 (x6212 (x8452 64 x1648 4))))
(assert (x4101 x2511))
(assert (= (x5740 (x3114 x3728 x1784)) x1784))
(assert (x4101 x7245))
(assert (= (and x4568 (not x6608)) x2881))
(assert (x4101 x1502))
(assert (x4101 x890))
(assert (x4101 x7819))
(assert (= (x4519 (x8452 x3728 x6829 x267)) x3728))
(assert (= (and x4279 x6048) x4591))
(assert (= x8396 (x842 (x658 x954 x8553 x4050 x8396))))
(assert (= x2374 (or x5438 x6558)))
(assert (x4101 x2284))
(assert (= x7882 (or x1986 x4934)))
(assert (x4101 x7615))
(assert (> (x8452 64 x6018 36) 10000))
(assert (x4101 x603))
(assert (not (x2674 (x8452 64 x4447 (ite (<= x8276 32) x1918 (ite (>= 64 x8276) x2640 (ite (>= 96 x8276) x3301 (ite (>= 128 x8276) x7339 (ite (>= 160 x8276) x4113 (ite (<= x8276 192) x933 x7974))))))))))
(assert (x4101 x7561))
(assert (= x4344 (and x6377 x1924)))
(assert (= x3604 (x5740 (x5018 x8105 x3604 x1200 x7816 x7663))))
(assert (x4101 x1130))
(assert (=> (<= x6609 10000) (= (x3391 x6609) 0)))
(assert (= (x6212 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) x540))
(assert (x4101 x1680))
(assert (not (x2674 (x8452 64 x2041 36))))
(assert (x2371 (ite (not (= x7234 0)) 1 0)))
(assert (x4101 x7532))
(assert (x4101 x4998))
(assert (= (or x1470 x4900) x3018))
(assert (x4101 x8203))
(assert (x4101 x2545))
(assert (x4101 x334))
(assert (x4101 x8147))
(assert (= x2763 (or x2903 x2969)))
(assert (x4101 x6666))
(assert (x4101 x5567))
(assert (x4101 x2213))
(assert (= x7883 (=> (and (= x3471 x3545) (= x764 x5697) (= x4423 x4112) (= 0 x1504) (= x3920 x6141) (= 2 x7500)) x3554)))
(assert (x4101 x6369))
(assert (x4101 x7255))
(assert (x4101 x8210))
(assert (x4101 x6728))
(assert (x4101 x4610))
(assert (= x8526 (x842 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613))))
(assert (x4101 x1345))
(assert (x4101 x4950))
(assert (x4101 x6050))
(assert (= (x3391 (x8452 64 x4084 12)) (x8452 64 x4084 12)))
(assert (= (x3391 (x5018 x4567 x7844 x3878 x6416 x1409)) (x5018 x4567 x7844 x3878 x6416 x1409)))
(assert (= (x6140 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336)) x6954))
(assert (= x345 (x6212 (x6207 x7301 x481 x345 x5672 x4986 x5616))))
(assert (x4101 x1063))
(assert (x4101 x3374))
(assert (x4101 x706))
(assert (= x4957 (=> (and (= (ite (< 150 x4230) 150 x4230) x2458) (= x4063 (x5665 (+ x1426 32))) (= (< 0 x3967) x5495)) (and (=> x5495 x8131) (=> (and (not x5495) (and (and (= (x8452 x5456 x7626 x2592) x5653) (= (x8452 64 x6260 7) x3024) (= (x658 x5456 x3223 x2642 x3866) x6821) (= x5892 (x5665 (+ 96 x4088))) (= (x909 x3340) x6407) (= x7416 (x5665 (+ x4088 128))) (= (x909 x4088) x8164) (= (x909 x1213) x6489) (= (x5665 (+ 64 x4088)) x281) (= (< 0 x3082) x8261) (= (x909 x940) x5806) (= (x5665 (+ x4088 32)) x5602) (= x3809 (x8448 0)) (= (x5018 x5456 x3051 x6313 x5806 x1348) x4335) (= (x5665 (+ 32 x4088)) x4364) (= x2238 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336)) (= x6889 (x909 x7754)) (= x2642 (x909 x5575)) (= (x5665 (+ 64 x4088)) x4065) (= x3155 (x5665 (+ x4088 64))) (= (x909 x5892) x1430) (= x2587 (x909 x281)) (= x3840 (x909 x5424)) (= (x909 x2700) x7817) (= x5646 (x909 x7416)) (= (x909 x4170) x1348) (= (x5665 (+ 32 x4088)) x7729) (= (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817) x524) (= (x5665 (+ 160 x4088)) x2700) (= x2287 (x5665 (+ x4088 160))) (= (x909 x185) x5865) (= (x909 x3155) x1613) (= x2643 (x5665 (+ 128 x4088))) (= (x5665 (+ x4088 32)) x5575) (= x5424 (x5665 (+ 64 x4088))) (= (x5665 (+ x4088 96)) x1213) (= x6313 (x909 x4364)) (= x3866 (x909 x4065)) (= (x3114 x5456 x8164) x7881) (= (x5665 (+ x4088 96)) x185) (= x7626 (x909 x4088)) (= (x5665 (+ x4088 64)) x940) (= x3082 (x909 x494)) (= (x909 x4511) x2592) (= x6647 (x6207 x5456 x254 x2993 x2587 x5865 x5646)) (= x2993 (x909 x7729)) (= (ite (= 0 x5456) x3809 (ite (>= 32 x5456) x7881 (ite (<= x5456 64) x5653 (ite (<= x5456 96) x6821 (ite (<= x5456 128) x4335 (ite (>= 160 x5456) x6647 (ite (<= x5456 192) x524 x2238))))))) x4903) (= x4170 (x5665 (+ 96 x4088))) (= (x5665 (+ 32 x4088)) x4511) (= (x909 x23) x5456) (= x3340 (x5665 (+ 128 x4088))) (= (x5665 (+ x4088 32)) x7754) (= (x5665 (+ 192 x4088)) x5539) (= x3223 (x909 x4088)) (= (x909 x5602) x2104) (= x2174 (x909 x4088)) (= (x909 x4088) x3808) (= x3051 (x909 x4088)) (= (x909 x2643) x7968) (= x6954 (x909 x2287)) (= x254 (x909 x4088)) (<= x5456 224) (= x5336 (x909 x5539))) (or (not x8261) (and x8261 (and (or (not x7711) (and x7711 (and (or (not x7319) (and (and (and (= (x5665 (+ 64 x3116)) x6316) (= (x5665 (+ x5661 64)) x3521) (= (x3149 x6316) x7464) (= (< 96 x3082) x3899)) (or (not x3899) (and (and (= x634 (x6261 x3348)) (= x4970 (x5665 (+ x5661 96))) (>= 128 x3082) (= (x5665 (+ 96 x3116)) x3348)) x3899))) x7319)) (and (= x2152 (x5665 (+ 32 x3116))) (= (> x3082 64) x7319) (= x7698 (x5665 (+ x5661 32))) (= (x6494 x2152) x4669))))) (and (= x1449 (x909 x3116)) (= (< 32 x3082) x7711))))))) x699)))))
(assert (x2496 x3359))
(assert (= (x6140 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263)) x6839))
(assert (< (x8452 64 x518 (ite (<= x1404 32) x320 (ite (<= x1404 64) x4133 (ite (<= x1404 96) x1002 (ite (>= 128 x1404) x4746 (ite (<= x1404 160) x8578 (ite (>= 192 x1404) x996 x7067))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x2398 x7904) (= x846 x2571) (= 0 x5204) (= x2814 x1395) (= x3819 x1648) (= true x5778) (= x4445 x5893) (= x1859 x7632) (= x7103 x40) (= x4760 x8234) (= 2 x1797) (= x2244 x1196) (= x3595 x337) (= false x5207) (= x8495 x826) (= x8014 x816) (= x3365 x3529)) x2534) x7682))
(assert (=> (>= 10000 x1434) (= 0 (x3391 x1434))))
(assert (x4101 x1647))
(assert (x4101 x6637))
(assert (= (x8370 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819)) x1290))
(assert (x4101 x5933))
(assert (= x1997 x441))
(assert (x4101 x4))
(assert (= (and x4462 x898) x6127))
(assert (= (x6212 (x6207 x7483 x4415 x1668 x2575 x5720 x7858)) x1668))
(assert (x4101 x5375))
(assert (x4101 x8146))
(assert (x4101 x3753))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (=> (>= 10000 x6117) (= 0 (x3391 x6117))))
(assert (= (x8452 64 x8458 12) (x3391 (x8452 64 x8458 12))))
(assert (x4101 x1341))
(assert (x4101 x8218))
(assert (x4101 x7009))
(assert (x4101 x5594))
(assert (x4101 x2477))
(assert (x4101 x574))
(assert (x4101 x5618))
(assert (= x8229 (or x1201 x5851)))
(assert (=> (>= 10000 x7615) (= 0 (x3391 x7615))))
(assert (x4101 x2780))
(assert (= x4482 x8221))
(assert (not (x2674 (x8452 64 x2123 100))))
(assert (x4101 x2537))
(assert (=> (>= 10000 x7911) (= 0 (x3391 x7911))))
(assert (= (x8452 64 x4417 36) (x3391 (x8452 64 x4417 36))))
(assert (x4101 x6454))
(assert (x4101 x8520))
(assert (x725 127))
(assert (x4101 x723))
(assert (x4101 x355))
(assert (= (x3391 (x5018 x5456 x3051 x6313 x5806 x1348)) (x5018 x5456 x3051 x6313 x5806 x1348)))
(assert (=> (<= x2294 10000) (= 0 (x3391 x2294))))
(assert (not (x2674 (x8452 x3485 x5701 x2008))))
(assert (not (x2674 (x3114 x954 x2658))))
(assert (x2674 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x5391 x6455))
(assert (x4101 x4552))
(assert (x4101 x8525))
(assert (x4101 x1627))
(assert (x4101 x7057))
(assert (= (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814) (x3391 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814))))
(assert (= (x3391 29244376827073035548771643948814531551534385112760475998805679327281764368384) 0))
(assert (x4101 x2339))
(assert (= (and x6809 x8430) x10))
(assert (x4101 x1967))
(assert (= x3241 (x4955 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (x4101 x507))
(assert (x4101 x3799))
(assert (x4101 x8234))
(assert (x4101 x84))
(assert (x725 x3535))
(assert (x4101 x6715))
(assert (x4101 x4128))
(assert (= (and x2035 x6847) x1513))
(assert (x4101 x7076))
(assert (x3760 x5839 256))
(assert (= (and (not x1617) x3807) x1011))
(assert (=> (>= 10000 x1526) (= (x3391 x1526) 0)))
(assert (x4101 x1579))
(assert (=> (<= x1174 10000) (= (x3391 x1174) 0)))
(assert (x4101 x85))
(assert (x4101 x4848))
(assert (= x5202 (and x892 x4087)))
(assert (x4101 x4933))
(assert (= (and x4431 x5583) x6611))
(assert (= (x3391 8365236128558009046904410293209581292053118695343348878262597880337030709248) 0))
(assert (x4101 x7175))
(assert (=> (<= x4680 10000) (= 0 (x3391 x4680))))
(assert (= x6655 (x4519 (x8452 x6655 x5638 x3262))))
(assert (x4101 x7953))
(assert (x4101 x6326))
(assert (= (and x1413 (not x4152)) x6968))
(assert (< 10000 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239)))
(assert (= x1996 (and x541 x695)))
(assert (= (=> (= (+ x6687 292) x5239) x7959) x630))
(assert (x4101 x55))
(assert (x4101 x475))
(assert (x4101 x7442))
(assert (x4101 x501))
(assert (x4101 x610))
(assert (x25 32 x336))
(assert (= x6108 (or x6005 x458)))
(assert (x4101 x3654))
(assert (x4101 x500))
(assert (x5391 x4529))
(assert (x4101 x5294))
(assert (= (x8370 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345)) x8331))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4417 6)))
(assert (x4057 (+ x2732 31)))
(assert (= x620 (and x4520 (not x7429))))
(assert (> (x6207 x6609 x665 x2145 x377 x444 x8061) 10000))
(assert (= x5583 (and (not x1727) x7669)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x4567 x2079)))
(assert (x5189 (+ x2997 31) 32))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x6788 12)))
(assert (= x8198 (x5740 (x5018 x954 x8198 x1612 x6014 x4062))))
(assert (x4101 x1035))
(assert (x4101 x5986))
(assert (x4101 x6874))
(assert (= x2649 (x842 (x658 x8105 x1516 x7217 x2649))))
(assert (x4101 x7210))
(assert (= (x6212 (x5018 x1404 x8231 x7521 x8002 x408)) x7521))
(assert (x4101 x135))
(assert (> (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717) 10000))
(assert (x4101 x3765))
(assert (< 10000 (x8452 64 x3252 36)))
(assert (x4101 x2416))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640)))
(assert (x4101 x5858))
(assert (x4101 x4262))
(assert (=> (<= x3444 10000) (= 0 (x3391 x3444))))
(assert (=> (>= 10000 x2685) (= (x3391 x2685) 0)))
(assert (x4101 x1899))
(assert (= x4167 (and (not x1240) x4885)))
(assert (=> (>= 10000 x4760) (= (x3391 x4760) 0)))
(assert (x4101 x5296))
(assert (x4101 x8344))
(assert (x4101 x7694))
(assert (= x821 (x842 (x658 x7301 x6879 x5406 x821))))
(assert (= x3482 (and x7612 (not x7506))))
(assert (x4101 x257))
(assert (= x7284 x6008))
(assert (x4101 x3431))
(assert (x4101 x1786))
(assert (= x5664 x7220))
(assert (x2371 x5767))
(assert (= (and x6952 x5227) x6726))
(assert (= (x8370 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153)) x5629))
(assert (x4101 x6215))
(assert (not (x2674 (x3114 32 x5769))))
(assert (= (and (not x4506) x8497) x8178))
(assert (=> (>= 10000 x5672) (= 0 (x3391 x5672))))
(assert (x3760 x4261 256))
(assert (= (and x1983 (not x2447)) x6588))
(assert (= (x4519 (x8452 x8247 x1044 x6011)) x8247))
(assert (x4101 x2073))
(assert (x4101 x1960))
(assert (x5391 x6107))
(assert (= x8023 (and x3142 x4345)))
(assert (x4101 x5625))
(assert (x4101 x352))
(assert (= (and (not x1446) x3494) x3172))
(assert (x4101 x4729))
(assert (= x124 (=> (and (= x6116 x8161) (= x622 x7523) (= x2265 x1151) (= x5743 x8289)) x8538)))
(assert (x5391 x8246))
(assert (x864 x2571))
(assert (< 10000 (x8452 64 x8458 12)))
(assert (=> (<= x8219 10000) (= (x3391 x8219) 0)))
(assert (x4101 x6330))
(assert (x5189 (+ x2732 31) 32))
(assert (x4101 x1003))
(assert (< (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x3114 x8066 x2527)))
(assert (x4101 x2882))
(assert (x2371 x3007))
(assert (= (x3391 (x3114 32 x8158)) (x3114 32 x8158)))
(assert (= x2835 (=> (and (= x2122 (x4456 (- x3089 (mod (ite (> 32 x4199) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3089 (x639 1 x2571)) (= x1712 (x8297 x2571 2)) (= x4199 (ite (> x3089 0) x1712 (x639 127 x1712))) (= (> x2122 0) x1537) (= (- x3009 132) x7496)) (and (=> (not x1537) x473) (=> (and x1537 (and (= (+ 32 x3009) x5051) (= x4224 (x639 1 x2571)) (= x3951 (= 0 x4224)))) (and (=> (and (and (= x184 (* (ite (not (= x4199 0)) 1 0) 32)) (or (= 0 x184) (= x184 32)) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2571) x818) (= x838 (+ x184 x5051))) x3951) x4702) (=> (and (and (or (and (= x2176 0) (not x8129)) (and (and (>= 32 x4199) (= (x7893 x5737) x5594) (= 32 x2176)) x8129)) (and (= x8129 (> x4199 0)) (= (x3114 32 104) x5737))) (not x3951)) x1720)))))))
(assert (x4101 x1834))
(assert (x4101 x854))
(assert (x4101 x7190))
(assert (= 0 (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (x4101 x4814))
(assert (=> (>= 10000 x1430) (= 0 (x3391 x1430))))
(assert (< (x658 x6601 x8352 x7125 x7289) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5433))
(assert (= (or (and x223 (not x3341)) (and x7518 (not x8149)) (and (not x7355) x248) (and (not x6312) x3881)) x111))
(assert (x4101 x6211))
(assert (x4101 x5650))
(assert (x4101 x3415))
(assert (= x4778 (x6212 (x8452 x2327 x708 x4778))))
(assert (x4101 x8529))
(assert (x4101 x4544))
(assert (x4101 x194))
(assert (x725 x6))
(assert (x4101 x769))
(assert (> (x658 x1404 x6591 x1588 x6117) 10000))
(assert (x4101 x1042))
(assert (= (and x2763 x5768) x6691))
(assert (x4101 x4507))
(assert (x2674 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (< 10000 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708)))
(assert (= x5281 (x4955 (x6207 x954 x2088 x1088 x7472 x5281 x2463))))
(assert (x4101 x220))
(assert (x4101 x2227))
(assert (= (and x3489 (not x5062)) x4397))
(assert (< (x8452 64 x6515 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4955 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803)) x4868))
(assert (x4101 x2152))
(assert (x4101 x3199))
(assert (x725 x2630))
(assert (x4101 x5935))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x5857 x8356 x6054)))
(assert (x4101 x336))
(assert (= x8155 (and x2334 (not x2117))))
(assert (x4101 x8581))
(assert (=> (<= x8482 10000) (= (x3391 x8482) 0)))
(assert (x4101 x816))
(assert (=> (>= 10000 x7079) (= 0 (x3391 x7079))))
(assert (x4101 x1135))
(assert (= (x3391 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)) (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)))
(assert (x5528 x5891))
(assert (= (x6212 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345)) x2780))
(assert (x4101 x2058))
(assert (= (and x3547 (not x4611)) x2340))
(assert (x4101 x7432))
(assert (= (x4519 (x6207 x8236 x5618 x2344 x5489 x7255 x1096)) x8236))
(assert (=> (>= 10000 x6808) (= 0 (x3391 x6808))))
(assert (x4101 x2590))
(assert (= (x4519 (x8452 64 x6018 36)) 64))
(assert (x5391 x208))
(assert (x4101 x2527))
(assert (= (x4519 (x8452 64 x5710 11)) 64))
(assert (x4101 x5440))
(assert (x4101 x710))
(assert (=> (<= x2378 10000) (= 0 (x3391 x2378))))
(assert (< (x8452 64 x1528 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x3814))
(assert (=> (<= x2527 10000) (= (x3391 x2527) 0)))
(assert (= (x4519 (x5018 x8105 x3604 x1200 x7816 x7663)) x8105))
(assert (x4101 x907))
(assert (x4101 x2598))
(assert (= (and x3219 x5495) x4452))
(assert (x4101 x7032))
(assert (= x8247 (x4519 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819)))
(assert (x4101 x6521))
(assert (= (x6212 (x8452 64 x4936 0)) 0))
(assert (=> (>= 10000 x8458) (= (x3391 x8458) 0)))
(assert (=> (>= 10000 x4487) (= 0 (x3391 x4487))))
(assert (= (x3391 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865)) (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865)))
(assert (x5391 x4171))
(assert (= (and x7277 x5097) x7519))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x4567 x5929 x4238 x5321 x5266 x4424)))
(assert (x4101 x4001))
(assert (x4101 x2623))
(assert (x4101 x3948))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x658 x3485 x166 x719 x2339)))
(assert (x4101 x5714))
(assert (= (x6207 x8276 x7633 x667 x44 x579 x2604) (x3391 (x6207 x8276 x7633 x667 x44 x579 x2604))))
(assert (x4101 x704))
(assert (=> (>= 10000 x2563) (= (x3391 x2563) 0)))
(assert (x4101 x1865))
(assert (x4101 x598))
(assert (x4101 x1710))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x1648 5)))
(assert (= (and x1255 (not x4360)) x7847))
(assert (= x4595 (x8370 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263))))
(assert (x4101 x4688))
(assert (x4101 x7585))
(assert (= (x3391 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x4101 x3901))
(assert (> (x5018 x954 x8198 x1612 x6014 x4062) 10000))
(assert (= (x5740 (x8452 64 x666 1)) x666))
(assert (= (x658 x6256 x7745 x8380 x6390) (x3391 (x658 x6256 x7745 x8380 x6390))))
(assert (x4101 x7738))
(assert (=> (<= x1290 10000) (= 0 (x3391 x1290))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x8458 12)))
(assert (x4101 x5229))
(assert (> (x6207 x7301 x481 x345 x5672 x4986 x5616) 10000))
(assert (x4101 x1254))
(assert (x4101 x7135))
(assert (= (=> (and (= x8014 x7601) (= 0 x4418) (= 2 x6020) (= x5148 x3595) (= x4658 x4445) (= x1196 x945) (= x4682 x826) (= x5224 x1648) (= x1311 x4683) (= x1395 x4722) (= x7632 x7273) (= x6335 x4760) (= x3365 x4797) (= x501 x123) (= x6853 x2571) (= x6163 x40) (= x501 (x639 255 x8429))) x8354) x8003))
(assert (= x6515 (x5740 (x8452 64 x6515 6))))
(assert (x4101 x7977))
(assert (not (x2674 (x6207 x1404 x1434 x7783 x2653 x69 x8128))))
(assert (= (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708) (x3391 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708))))
(assert (= x1097 (and (not x2735) x7519)))
(assert (x4101 x5406))
(assert (=> (<= x6621 10000) (= (x3391 x6621) 0)))
(assert (= (x6212 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300)) x6998))
(assert (= (and x8253 x3189) x1831))
(assert (x4101 x3546))
(assert (x4101 x510))
(assert (=> (>= 10000 x4986) (= 0 (x3391 x4986))))
(assert (x4101 x3986))
(assert (= x959 (=> (and (= x7632 x1022) (= x8008 x1395) (= x4445 x640) (= x8203 x1648) (= x1196 x2938) (= x4090 x5253) (= x2571 x1976) (= x3365 x4953) (= x5812 (x639 255 x6321)) (= x4760 x825) (= x8014 x4879) (= x6252 x826) (= x3544 2) (= x497 0) (= x6568 x40) (= x5812 x5598) (= x3595 x738)) x5223)))
(assert (= x2433 (and (not x7849) x8387)))
(assert (x5391 x5891))
(assert (x4101 x874))
(assert (< 10000 (x8452 64 x4024 2)))
(assert (=> (<= x4778 10000) (= (x3391 x4778) 0)))
(assert (= (x6212 (x8452 64 x518 (ite (<= x3485 32) x2064 (ite (<= x3485 64) x4186 (ite (>= 96 x3485) x6866 (ite (<= x3485 128) x49 (ite (>= 160 x3485) x6094 (ite (<= x3485 192) x8413 x749)))))))) (ite (<= x3485 32) x2064 (ite (>= 64 x3485) x4186 (ite (<= x3485 96) x6866 (ite (<= x3485 128) x49 (ite (<= x3485 160) x6094 (ite (<= x3485 192) x8413 x749))))))))
(assert (x4101 x4988))
(assert (= (x3391 2770781680) 0))
(assert (x4101 x4284))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x3481 x6))
(assert (=> (>= 10000 x8002) (= (x3391 x8002) 0)))
(assert (=> (>= 10000 x5828) (= 0 (x3391 x5828))))
(assert (x4101 x6881))
(assert (=> (<= x4075 10000) (= (x3391 x4075) 0)))
(assert (= x1337 (or (and x6618 x52) (and x6593 x4852))))
(assert (= x4201 (x4955 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708))))
(assert (= (x8452 64 x4807 4) (x3391 (x8452 64 x4807 4))))
(assert (=> (<= x5269 10000) (= (x3391 x5269) 0)))
(assert (= (x3391 21250608054068894920771655176311299370521669075471658173068242729727453822976) 0))
(assert (x2496 x6728))
(assert (x4101 x1179))
(assert (= x6903 (or x6334 x4497)))
(assert (x4101 x5108))
(assert (= (x5740 (x8452 64 x3712 (ite (>= 32 x3728) x4071 (ite (>= 64 x3728) x6751 (ite (<= x3728 96) x8471 (ite (>= 128 x3728) x5582 (ite (<= x3728 160) x7240 (ite (<= x3728 192) x5937 x894)))))))) x3712))
(assert (x4101 x8378))
(assert (x4101 x8404))
(assert (x4101 x1402))
(assert (x4101 x8236))
(assert (x4101 x746))
(assert (= (x4519 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665)) x2493))
(assert (x4101 x3466))
(assert (x2674 34591783479076665078880830389440322436311164112910831269305739813291000201216))
(assert (= (x3391 (x8452 64 x66 36)) (x8452 64 x66 36)))
(assert (x4101 x3465))
(assert (x4101 x4357))
(assert (x4101 x3299))
(assert (x4101 x4229))
(assert (x2674 1461501637330902918203684832716283019655932542975))
(assert (= x3838 (x4955 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291))))
(assert (= 64 (x4519 (x8452 64 x6260 7))))
(assert (x4101 x8024))
(assert (= (and (not x2012) x919) x5415))
(assert (= (x4519 (x8452 64 x6515 6)) 64))
(assert (x4101 x3615))
(assert (x4101 x2421))
(assert (x4101 x772))
(assert (=> (<= x6535 10000) (= (x3391 x6535) 0)))
(assert (= (x6212 (x8452 64 1 x2328)) x2328))
(assert (= (=> (= (< 0 x6291) x7891) (and (=> (and x7891 (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x3299) (= (x5665 (+ x4567 x5195)) x7660) (= x4743 (x5665 (+ 36 x7597))) (= (x5665 (+ 32 x4743)) x7939) (= (x5665 (+ 32 x574)) x2241) (= (x5665 (+ x6152 32)) x351) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x6152) (= (* x2572 32) x574) (>= x6152 1) (<= x3299 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x6351 (x5665 (+ 31 x4567))) (= (x8297 x8050 32) x2572) (< x6152 x7597) (<= x3299 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x5195 (x5665 (+ x3299 32))) (= x624 150) (= x1168 (< 0 x4)) (= x6152 (x5665 (+ x3299 x5895))) (= x8050 (x5665 (+ 31 x3563))) (= (x5665 (+ 128 x4743)) x1927) (= x4 (x78 x3299)) (= x5978 (x5665 (+ x1927 32))) (> x6152 x3299) (= x5895 (x5665 (+ 32 x3864))) (= (x5665 (+ x3563 x351)) x6732) (<= 2 x7597) (= x3864 (* 32 x2200)) (= x7597 (x5665 (+ x2241 x6152))) (= (x8297 x6351 32) x2200)) (or (not x1168) (and x1168 (and (or (and x1669 (and (or (and x1872 (and (and (= x6391 (> x4 96)) (= (x1940 x1734) x2390) (= (x5665 (+ 64 x5195)) x1734) (= x4876 (x5665 (+ x5978 64)))) (or (and x6391 (and (= x3255 (x2529 x397)) (= (x5665 (+ x5195 96)) x397) (= x6733 (x5665 (+ 96 x5978))) (<= x4 128))) (not x6391)))) (not x1872)) (and (= x530 (x5462 x3295)) (= (x5665 (+ 32 x5195)) x3295) (= x1872 (> x4 64)) (= (x5665 (+ x5978 32)) x8520)))) (not x1669)) (and (= (< 32 x4) x1669) (= (x942 x5195) x7726))))))) x590) (=> (and (not x7891) (and (= x8242 (x5665 (+ 32 x3737))) (= 132 x4930) (= x3737 (x5665 (+ 32 x6509))) (= (x5665 (+ x3299 4)) x6509) (= x7033 true) (= x7498 (x5665 (+ 32 x8242))) (= x1218 false))) x2914))) x1328))
(assert (x4101 x4784))
(assert (x4101 x5358))
(assert (x4101 x8402))
(assert (x4101 x2839))
(assert (x4101 x5734))
(assert (x3760 x4980 128))
(assert (= (x4519 (x6207 x954 x2088 x1088 x7472 x5281 x2463)) x954))
(assert (x5391 x6306))
(assert (= (=> (and (= (= 0 x497) x4830) (or (and (and (= x6577 x640) (= x5096 x6252) (= x463 x8203) (= x4879 x6692) (= x532 x4953) (= x8317 x738) (= x722 x8008) (= x1346 x825) (= x5598 x4897) (= x6113 x1976) (= x6088 x1022) (= x1875 x4090) (= x1956 x2938) (= x497 x6337) (= x1915 x6568)) (not x4830)) (and x4830 (and (= x722 x8008) (= x6088 x1022) (= x1208 (+ x8489 x4668)) (= x1915 x6568) (= x5598 x4897) (<= 0 x1208) (= (- x2016 x8489) x8345) (= x6692 x4879) (= x825 x1346) (= x1956 x2938) (= (x6506 x729) x4668) (= x8203 x463) (= x6113 x1976) (= x6337 x497) (= x6577 x640) (= (ite (= 0 x497) x5755 0) x8489) (= x8317 x738) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1208) (= x5096 x6252) (= x2016 (x3452 x4760)) (= x4090 x1875) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8489 x4668)) (= x532 x4953) (= x2269 x1208))))) x1475) x5223))
(assert (x4101 x1432))
(assert (< 10000 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070)))
(assert (x4101 x8526))
(assert (x5189 x8532 2))
(assert (x2371 x3644))
(assert (x4101 x8226))
(assert (= x2795 (and (not x1381) x2562)))
(assert (x4101 x6769))
(assert (x4101 x282))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x6256 x112 x2259 x6535 x7432)))
(assert (x4101 x7802))
(assert (= (x3391 (x6207 x6655 x3754 x1280 x8438 x8159 x1634)) (x6207 x6655 x3754 x1280 x8438 x8159 x1634)))
(assert (x4101 x4120))
(assert (= (x3391 (x3114 x954 x2658)) (x3114 x954 x2658)))
(assert (x4101 x6552))
(assert (x4101 x2873))
(assert (=> (>= 10000 x4325) (= (x3391 x4325) 0)))
(assert (x4101 x5463))
(assert (x4101 x6389))
(assert (= (and x8544 x694) x3335))
(assert (x5391 x826))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x2327 x3240 x576 x6659 x4505 x8420)))
(assert (x4101 x943))
(assert (x4101 x8462))
(assert (x4101 x5726))
(assert (x4101 x4792))
(assert (x4101 x8008))
(assert (> (x8452 64 x4936 0) 10000))
(assert (= x7666 (=> (= (= x5662 0) x5345) (and (=> (and (and (= 4 x26) (= true x3043) (= x4302 false)) (not x5345)) x395) (=> (and (and (= (x8452 64 x110 11) x7581) (= (< 3 x5387) x3796) (<= x5387 255) (= (x1539 x7581) x5387)) x5345) (and (=> (and x3796 (and (= x26 36) (= false x7643) (= true x5074))) x395) (=> (and (= (= x5387 2) x5090) (not x3796)) (and (=> (and (and (= (= x6617 0) x1352) (= (x8452 64 x4807 4) x7411) (= x7291 (x8452 64 1 x7411)) (= (x924 x7291) x5176) (>= 65535 x4807)) x5090) (and (=> (and x1352 (= x5176 x4584)) x6703) (=> (and (not x1352) (= x1242 (< x6617 x5176))) (and (=> (and (not x1242) (= x4584 x6617)) x6703) (=> (and (and (= x4794 false) (= x6474 true) (= 4 x26)) x1242) x395))))) (=> (and (not x5090) (and (= x198 true) (= x26 4) (= false x3027))) x395)))))))))
(assert (not (x2674 (x8452 64 x1544 7))))
(assert (x4101 x2122))
(assert (= x4216 (and x3776 (not x1184))))
(assert (x4101 x3209))
(assert (x4101 x5857))
(assert (=> (>= 10000 x4238) (= (x3391 x4238) 0)))
(assert (x4101 x8002))
(assert (= (x3391 (x8452 64 x4024 36)) (x8452 64 x4024 36)))
(assert (x725 x6194))
(assert (x725 x8020))
(assert (x4101 x4938))
(assert (not (x2674 (x8452 64 x2824 2))))
(assert (x5391 x2478))
(assert (x4101 x1876))
(assert (x2496 x6895))
(assert (x4101 x8316))
(assert (x4101 x2269))
(assert (=> (>= 10000 x2419) (= 0 (x3391 x2419))))
(assert (= (or x8174 x2804) x3079))
(assert (x4101 x5052))
(assert (= (x6212 (x8452 64 x723 11)) 11))
(assert (x4101 x113))
(assert (x4101 x3636))
(assert (> (x658 x2327 x3217 x5002 x4915) 10000))
(assert (= (or x3294 x7111) x744))
(assert (x4101 x5148))
(assert (x4101 x4495))
(assert (x4101 x8128))
(assert (= x422 (x842 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865))))
(assert (= (and x4869 (not x5977)) x1873))
(assert (x4101 x2241))
(assert (= (x4519 (x8452 64 x8494 6)) 64))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= (or x1216 x7371 x7919 x2795 x6164) x2214))
(assert (= (and x3361 x8528) x3749))
(assert (x4101 x4962))
(assert (=> (>= 10000 x302) (= (x3391 x302) 0)))
(assert (= x8236 (x4519 (x658 x8236 x2222 x6395 x5287))))
(assert (x2371 x642))
(assert (= x2483 (=> (= x258 (+ x4691 292)) x7716)))
(assert (x5391 x2855))
(assert (=> (>= 10000 x99) (= (x3391 x99) 0)))
(assert (x4101 x2093))
(assert (x4101 x4719))
(assert (= x773 (and x7489 x2659)))
(assert (x5528 x6455))
(assert (x4101 x23))
(assert (x4101 x6315))
(assert (x4101 x6366))
(assert (x4101 x2917))
(assert (x4101 x6047))
(assert (x4101 x1847))
(assert (x4101 x1717))
(assert (= (x4955 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263)) x3363))
(assert (x4101 x622))
(assert (x2674 43931689107028929153831073962459296230956404255593708771276734084804920737792))
(assert (x4101 x33))
(assert (= (and x1577 x5830) x5243))
(assert (=> (<= x1945 10000) (= (x3391 x1945) 0)))
(assert (x4101 x2587))
(assert (x4101 x1382))
(assert (x4101 x2197))
(assert (x4101 x1701))
(assert (= x2195 (and (not x2000) x277)))
(assert (x4101 x4541))
(assert (= x7527 (=> (and (or (and x4323 (and (= x8199 x932) (<= x4230 4294967295) (= x3628 x1620) (= (= x5986 (x7693 x666)) x7320) (= x6637 x4999) x7320 (= x5986 (x7594 x666)) x7509 (= (<= x7772 (x7693 x666)) x7509) (= x4503 x7165) (= x7772 (x7594 x666)) (= x7973 x5153) (= x3857 x7178))) (and (not x4323) (and (= x5497 x4999) (= x1620 x4445) (= x2571 x7973) (= x40 x8199) (= x826 x7178) (= x4760 x7165)))) (and (= (x7180 x7540) x3374) (= x8084 (x6522 x1708)) (= x3686 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7040)) (> x1426 x1708) (= x4323 (> x3967 0)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1426)) (= (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x289) x5184) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1708) (= x7040 (x5665 (+ x210 31))) (= x3753 (x5665 (+ x1609 x210))) (= (x4456 (- x1426 x1708)) x6623) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1708) (= x229 (x5665 (+ x1426 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1426)) (<= x1708 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1426 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1426) (= x1426 (x5665 (+ x3686 x1609))) (< x1426 x5661) (= (x639 26959946667150639794667015087019630673637144422540572481103610249215 x3374) x289) (= x5661 (x5665 (+ x1426 192))) (= x7540 (x5665 (+ x1708 32))) (<= x1426 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x1426) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1426)) (= (x4456 (- x6623 32)) x758))) x7260)))
(assert (= (x842 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814)) x6518))
(assert (=> (<= x4936 10000) (= (x3391 x4936) 0)))
(assert (= x1565 (and x5910 x555)))
(assert (x4101 x8153))
(assert (x725 x1086))
(assert (= (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639838) 0))
(assert (= x7858 (x8370 (x6207 x7483 x4415 x1668 x2575 x5720 x7858))))
(assert (=> (>= 10000 x3595) (= (x3391 x3595) 0)))
(assert (x725 x7621))
(assert (= (x6212 (x8452 64 x6788 12)) 12))
(assert (x4101 x969))
(assert (x4101 x2573))
(assert (x5391 x6775))
(assert (= (x4117 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263)) x6263))
(assert (x2496 x8245))
(assert (x4101 x1006))
(assert (x4101 x540))
(assert (x4101 x129))
(assert (< 10000 (x8452 x2493 x5680 x3170)))
(assert (x4101 x6692))
(assert (= (and x1831 x5504) x1452))
(assert (x4101 x2326))
(assert (< (x658 x954 x8553 x4050 x8396) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x2943))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x8066 x5753 x4487 x1987 x5269)))
(assert (< 10000 (x8452 x1404 x549 x1883)))
(assert (x4101 x5443))
(assert (x4101 x5993))
(assert (= (x842 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640)) x3139))
(assert (x4101 x199))
(assert (x4101 x2560))
(assert (x4101 x2151))
(assert (= (x4519 (x3114 x8276 x7070)) x8276))
(assert (=> (>= 10000 x2560) (= 0 (x3391 x2560))))
(assert (x4101 x6658))
(assert (= x324 (and (not x5483) x893)))
(assert (x4101 x8136))
(assert (= x130 (or x1873 x5880)))
(assert (= 2 (x6212 (x8452 64 x2824 2))))
(assert (x4057 (+ x2997 31)))
(assert (= (and x6847 (not x2035)) x1964))
(assert (= x3618 (and x2061 (not x1057))))
(assert (< (x3114 x5857 x7740) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2115 x3911) x1755))
(assert (< 10000 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828)))
(assert (x4101 x5526))
(assert (x4101 x5362))
(assert (x4101 x2172))
(assert (=> (<= x1088 10000) (= 0 (x3391 x1088))))
(assert (x4101 x5995))
(assert (x5189 x3302 256))
(assert (x4101 x2246))
(assert (= (x3391 (+ 2 x6022)) (x3391 x6022)))
(assert (= x2993 (x6212 (x6207 x5456 x254 x2993 x2587 x5865 x5646))))
(assert (= (or x4701 x1215) x7518))
(assert (x4101 x2679))
(assert (x4101 x2177))
(assert (x4101 x1410))
(assert (x2674 50226347614966974677930900640024090345938424853691168920094736542366852710400))
(assert (x725 x2855))
(assert (x4101 x7299))
(assert (=> (>= 10000 x2642) (= 0 (x3391 x2642))))
(assert (= (and (not x4536) x1792) x7582))
(assert (= (=> (and (= (= x5251 0) x7869) (= (x4143 x2477) x5251)) (and (=> (and (not x7869) (and (= x6065 (x8452 64 x1648 5)) (= (< (ite (= x3103 0) 10000 x3103) x1680) x4599) (= x1680 (x8557 x6301)) (= (x297 x6065) x3103))) (and (=> (and x4599 (and (= 100 x5253) (= x2313 false) (= (x5665 (+ x5816 32)) x5815) (= true x4935) (= x3129 (x5665 (+ 4 x1048))) (= (x5665 (+ x3129 32)) x5816))) x959) (=> (and (and (= x4698 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2585)) (= x2954 (x5665 (+ x1693 x5624))) (= x6800 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5199)) (= x72 (x5665 (+ x4717 192))) (= (x5665 (+ x2300 x6800)) x3886) (= (x4456 (- x2954 x4717)) x1558) (= (x5665 (+ x1838 32)) x3354) (= (x5665 (+ x4717 32)) x4956) (= x7086 (x7676 x127)) (= (x5665 (+ x6301 32)) x4357) (= x4717 (x5665 (+ x1048 4))) (= x4674 (x4456 (- x3886 x4717))) (= (x4143 x2477) x6844) (= (x5665 (+ 31 x3879)) x7087) (= (x5665 (+ x2954 32)) x7462) (= (x5665 (+ 32 x3354)) x6629) (= x5780 (x5665 (+ x4698 x7462))) (= x1858 (x4456 (- x5780 x1048))) (= (x5665 (+ 32 x3886)) x1693) (= x2585 (x5665 (+ x1326 31))) (= x1838 (x5665 (+ x6467 32))) (= x1326 (x4217 x4987)) (= (x5665 (+ 32 x4987)) x1664) (= (x5665 (+ 32 x4956)) x6467) (= (= x7086 0) x7996) (= x5624 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7087)) (= (x8557 x6301) x3879) (= x5199 (x5665 (+ 31 x6844))) (= x2300 (x5665 (+ x72 32)))) (not x4599)) (and (=> (and (and (= x1444 (x7401 x127)) (= (x7401 x666) x6867) (= (<= x4526 x6867) x2014) (= (and x2191 x2014) x5405) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4526 x1444)) x2191)) (not x7996)) (and (=> (and x5405 (and (= x150 (= (x6766 196) x6844)) (= x4911 x5324) (<= x5620 127) (= x7150 (- x5712 x4526)) (= false x7048) (= 192 x7653) (= x1648 x3528) (<= 1 x6006) (>= 127 x5620) (= (x7676 x8315) x6006) x150 (= x4403 x666) (<= 420 x1858) (= x4674 x1296) (= x6311 0) (= x1558 x2878) (= (x7401 x666) x5712) (<= x4911 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3876 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= (or (and (> 192 (- x8211 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x8211 4)))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x8211 4))) x1453) (= x1858 x8211) (= false x6778) (= 3313512704 x782) (>= x4911 0) (< (+ x4526 x5933) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4911 (+ x4526 x5933)) (<= 420 x8211) (= (x4005 x127) x5933))) (and (=> (and (= x8253 true) (not x1453)) (and (=> (and x8253 (= x5504 (and (> x8211 227) (= true (<= x8211 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (not x5504) x1488) (=> (and (and (= (> x8125 18446744073709551615) x504) (= x8125 (x6888 196))) x5504) (and (=> x504 x5318) (=> (and (not x504) (and (= (x5665 (+ 228 x8125)) x610) (= x1776 (< x8211 x610)))) (and (=> (and (not x1776) (= (< 18446744073709551615 x4674) x1428)) (and (=> (and (and (= x2151 (x5665 (+ x4674 4))) (= (x5665 (+ 31 x2151)) x226) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8211) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x226)) (< x226 x8211)) (and (> x226 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x8211 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x7361)) (not x1428)) (and (=> (and (and (= x1205 (< 18446744073709551615 x5349)) (= (x6888 x2151) x5349)) x7361) (and (=> x1205 x5318) (=> (and (not x1205) (and (= (x5665 (+ x5349 x5637)) x1490) (= x6608 (> x1490 x8211)) (= (x5665 (+ x2151 32)) x5637))) (and (=> (and (= x4713 (> x1558 18446744073709551615)) (not x6608)) (and (=> (and (not x4713) (and (= x1660 (x5665 (+ x4604 31))) (= x4604 (x5665 (+ x1558 4))) (= x1055 (or (and (> x1660 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8211)) (and (> x8211 x1660) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1660) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8211))))))) (and (=> (and x1055 (and (= x7690 (> x8527 18446744073709551615)) (= x8527 (x6888 x4604)))) (and (=> x7690 x5318) (=> (and (not x7690) (and (= x969 (x5665 (+ x8527 x3417))) (= (x5665 (+ x4604 32)) x3417) (= x5607 (> x969 x8211)))) (and (=> x5607 x5664) (=> (and (not x5607) (and (= x1385 x5496) (= x4714 x5935) (= x6069 x5731) (= 1 x7706) (= x5 x7838) (= x6103 x6859) (= x7818 x5847) (= x4198 x2986) (= x4765 x2736) (= x3965 x5113) (= x6047 x5453) (= x6764 x3834) (= x127 x3610) (= x2413 x1341))) x7448))))) (=> (not x1055) x1488))) (=> x4713 x7220))) (=> x6608 x5664))))) (=> (not x7361) x1488))) (=> x1428 x7220))) (=> x1776 x5664))))))) (=> (not x8253) x7220))) (=> x1453 x7220))) (=> (and (not x5405) (and (= x1508 x5935) (= x7838 x8170) (= x4765 x6966) (= x127 x6650) (= x6103 x7488) (= 0 x1948) (= x1283 x2413) (= x6069 x1842) (= x4553 x5113) (= x5847 x653) (= x2986 x7252) (= x6764 x2792) (= x1812 x1385) (= x6047 x1568))) x3021))) (=> (and x7996 (and (= 0 x5253) (= x6685 true) (= x7580 false))) x959))))) (=> (and (and (= (x5665 (+ 32 x6473)) x5023) (= (x5665 (+ x5695 32)) x6784) (= x5253 132) (= (x5665 (+ 32 x5023)) x5695) (= false x5748) (= x6473 (x5665 (+ x1048 4))) (= x5968 true)) x7869) x959))) x8204))
(assert (not (x2674 (x5018 x8236 x8496 x1779 x7671 x5130))))
(assert (< 10000 (x8452 64 x212 11)))
(assert (= (x8452 64 x212 11) (x3391 (x8452 64 x212 11))))
(assert (= (=> (= x6603 (= x8442 0)) (and (=> (and (not x6603) (and (= (= x8278 x3545) x1310) (= x391 160))) (and (=> (and (and (= (* x4112 1000000000) x3732) (= x3978 false) (>= 127 x7681) (= x5687 36) (>= 127 x7681) (>= x7194 1) (= (< (* x4112 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3332) (= x5294 x2263) (= false x6404) (= (and x2360 x3332) x6835) (= x7007 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= 3628442803 x16) (= (<= x3732 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2360) (= (x7676 x8278) x7194) (= x4112 x2263)) x1310) (and (=> (not x6835) x8477) (=> (and x6835 (and (= (x8452 64 x666 2) x3607) (>= x3732 0) (= x4920 (x5125 x3607)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3732) (= (> x4920 x1931) x4087) (= (x829 x7182) x1931) (= x3732 x4898) (= x7182 (x8452 64 x666 1)))) (and (=> (and (and (= (x4456 (- x1931 x4920)) x3088) (= (> x3088 x1931) x6147)) (not x4087)) (and (=> (and x6147 (and (= true x6447) (= x3467 false) (= x764 36))) x7883) (=> (and (= x1461 (ite (> x4898 x3088) 1 0)) (not x6147)) x5535))) (=> (and (= (ite x4087 1 0) x1461) x4087) x5535))))) (=> (and (not x1310) (and (>= 1461501637330902918203684832716283019655932542975 x3286) (= x3545 x729) (<= x3545 1461501637330902918203684832716283019655932542975) (= 3628442803 x5801) (= x4388 false) (= 36 x7938) (= x6002 x4112) (= x6531 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= x7787 (x7676 x729)) (<= 1 x3545) (= (= x3286 x666) x600) (>= x7787 1) (<= x4379 127) (<= x4379 127) (= false x4499))) (and (=> (and (not x600) (and (= x7614 0) (= x4512 x3545) (= x7259 2) (= x8357 x6141) (= x7531 false) (= true x3779) (= x7573 0) (= x4112 x6049))) x2843) (=> (and x600 (and (<= x2743 255) (= x1333 (= x2743 255)))) (and (=> (and (and (= x4112 x6049) (= x8194 2) (= 0 x7573) (= x5265 true) (= x6141 x8357) (= x3545 x4512) (= x7614 36) (= x8376 false)) x1333) x2843) (=> (and (not x1333) (and (= x7425 (x8452 64 x2743 36)) (= (= 0 x6074) x2461) (= x4417 (x639 255 x6775)) (= (x639 255 x6775) x6479) (= (+ 1 x2743) x6775) (= (x8516 x7425) x6074))) (and (=> (and (= x339 (= x4417 255)) x2461) (and (=> (and (not x339) (and (= (x639 255 x221) x7055) (= (+ 1 x4417) x221) (>= 1461501637330902918203684832716283019655932542975 x2828) (= (x639 255 x221) x1221) (= x5773 (= x7055 255)) (= (x1908 x6035) x2828) (= x6035 (x8452 64 x4417 2)))) (and (=> (and (and (= (= x2824 255) x7359) (<= x6413 65535) (= (x8168 x1111) x6413) (= x8556 (+ 1 x7055)) (= (x639 255 x8556) x2824) (= (x639 255 x8556) x6507) (= (x8452 64 x7055 6) x1111)) (not x5773)) (and (=> x7359 x7613) (=> (and (not x7359) (and (= x386 (+ x2824 1)) (>= 1461501637330902918203684832716283019655932542975 x8273) (= x1649 (x639 255 x386)) (= (x639 255 x386) x6228) (= x8273 (x1908 x5190)) (= x5190 (x8452 64 x2824 2)) (= (= x1649 255) x107))) (and (=> x107 x674) (=> (and (and (= x6720 (x639 255 x8135)) (= (+ 1 x1649) x8135) (= (= 0 x1236) x7624) (= x1236 (x7676 x3286)) (= 128 x8254) (= x1856 (x8516 x651)) (= (x8452 64 x1649 36) x651) (= (x639 255 x8135) x8150)) (not x107)) (and (=> (and (not x7624) (and (>= x483 1) (= x2828 x2178) (>= 1461501637330902918203684832716283019655932542975 x5076) (= x6767 false) (= (x7676 x666) x483) (<= x5252 127) (= false x1046) (= 132 x6895) (= x4805 x6413) (>= 127 x5252) (= x7623 x1856) (= 3812630263 x1982) (= x8273 x1678) (= (= x729 x5076) x607) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x3369))) (and (=> (and (and (= x5560 false) (= x470 100) (= x4833 true)) (not x607)) x7956) (=> (and x607 (= x8364 (< x1856 100000))) (and (=> (and (and (= false x2690) (= x470 4) (= x5956 true)) x8364) x7956) (=> (and (and (= x5119 (x8516 x651)) (= x5119 x2143) (= (x8168 x1111) x3199) (= x1698 x5301) (= x6141 x7497) (= x1307 0) (= x5301 (x1908 x5190)) (= x5698 x6720) (= 1 x4320) (= x3690 (x1908 x6035))) (not x8364)) x7157))))) (=> (and (and (= x7614 0) (= x4112 x6049) (= false x6285) (= 0 x7573) (= x6141 x8357) (= x4512 x3545) (= true x5534) (= x6699 2)) x7624) x2843))))))) (=> x5773 x7037))) (=> x339 x2713))) (=> (and (= x5782 (= x6074 1)) (not x2461)) (and (=> (and (= (= x4417 255) x7364) x5782) (and (=> (and (not x7364) (and (= x7275 (x639 255 x1610)) (= (x8168 x970) x4803) (= x1610 (+ 1 x4417)) (= (x639 255 x1610) x4084) (= (x8452 64 x4417 6) x970) (= x2915 (= 255 x4084)) (>= 65535 x4803))) (and (=> x2915 x7613) (=> (and (not x2915) (and (= x7146 (x4456 (- x1627 (mod (ite (> 32 x6118) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x7940 (x639 255 x4261)) (<= x4447 18446744073709551615) (= (x8452 64 x4084 12) x5835) (= x1469 (x639 255 x4261)) (= (ite (> x1627 0) x5072 (x639 127 x5072)) x6118) (= (x8297 x6194 2) x5072) (= (x4838 x5835) x4447) (= x1627 (x639 1 x6194)) (= x2412 (> x7146 0)) (= (+ 1 x4084) x4261))) (and (=> (and x2412 (and (= (= x7412 0) x8485) (= (x639 1 x6194) x7412))) (and (=> (and (and (and (= x3484 (< 0 x6118)) (= (x3114 32 103) x2318)) (or (and (and (= 32 x6128) (>= 32 x6118) (= (x102 x2318) x2207)) x3484) (and (= 0 x6128) (not x3484)))) (not x8485)) x3052) (=> (and (and (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6194) x379) (= (+ x2895 292) x8025) (= x2895 (* 32 (ite (not (= x6118 0)) 1 0))) (or (= x2895 32) (= x2895 0))) x8485) x4328))) (=> (not x2412) x1560))))) (=> x7364 x2713))) (=> (and (not x5782) (= x271 (= 2 x6074))) (and (=> (and (= x7998 (= x4417 255)) x271) (and (=> (and (and (= (+ x4417 1) x3133) (= (x8452 64 x4417 6) x1656) (= x8179 (= 255 x8458)) (= x5958 (x8168 x1656)) (= (x639 255 x3133) x4767) (= x8458 (x639 255 x3133)) (>= 65535 x5958)) (not x7998)) (and (=> (and (not x8179) (and (= x3678 (< 0 x6690)) (= x3510 (ite (> x7174 0) x6455 (x639 127 x6455))) (= x1545 (x639 255 x1487)) (= x6455 (x8297 x6194 2)) (= x6690 (x4456 (- x7174 (mod (ite (> 32 x3510) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x7507 (x4838 x4485)) (<= x7507 18446744073709551615) (= (x639 1 x6194) x7174) (= x3671 (x639 255 x1487)) (= x1487 (+ x8458 1)) (= (x8452 64 x8458 12) x4485))) (and (=> (and (and (= (x639 1 x6194) x1667) (= (= 0 x1667) x1727)) x3678) (and (=> (and (and (or (and x4431 (and (= 32 x8007) (<= x3510 32) (= x3914 (x102 x6565)))) (and (= x8007 0) (not x4431))) (and (= (> x3510 0) x4431) (= x6565 (x3114 32 103)))) (not x1727)) x7139) (=> (and x1727 (and (or (= 0 x678) (= 32 x678)) (= (+ 292 x678) x8474) (= x3654 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6194)) (= (* (ite (not (= 0 x3510)) 1 0) 32) x678))) x982))) (=> (not x3678) x1560))) (=> x8179 x7613))) (=> x7998 x2713))) (=> (and (not x271) (= x4663 (= 3 x6074))) (and (=> (and x4663 (= x2559 (= 255 x4417))) (and (=> (and (not x2559) (and (= x97 (x8452 64 x4417 36)) (= x5710 (x8516 x97)) (= (= x5586 255) x7122) (= x7272 (x639 255 x361)) (= (x639 255 x361) x5586) (= x361 (+ x4417 1)))) (and (=> (and (and (= (x7676 x3286) x7098) (= (+ 1 x5586) x5273) (= x6740 (x639 255 x5273)) (= x2078 (x8401 x2467)) (= x2467 (x8452 64 x5586 100)) (= x7407 128) (= (= 0 x7098) x8324) (= x5573 (x639 255 x5273))) (not x7122)) (and (=> (and (and (= x7573 0) (= x6141 x8357) (= false x6387) (= x6864 2) (= x6049 x4112) (= x7617 true) (= x7614 0) (= x3545 x4512)) x8324) x2843) (=> (and (not x8324) (and (= (= x3545 x729) x5470) (= x3350 false) (= x1932 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= x5710 x3835) (= 68 x6009) (= x3588 (x7676 x666)) (= x2078 x8208) (= 3957931183 x5022) (<= 1 x3588) (>= 127 x2678) (= x6349 x3835) (= x4697 false) (>= 127 x2678))) (and (=> (and (and (= true x2097) (= false x561) (= 4 x3359)) (not x5470)) x2802) (=> (and (and (= (< 3 x5041) x1123) (= x6352 (x8452 64 x5710 11)) (<= x5041 255) (= x5041 (x1539 x6352))) x5470) (and (=> (and x1123 (and (= false x3338) (= 36 x3359) (= x1312 true))) x2802) (=> (and (= x6544 (= 1 x5041)) (not x1123)) (and (=> (and (and (= x3996 (x8452 64 x5710 11)) (= x7062 (x8452 64 x5710 11)) (= 128 x6415) (= (+ x3996 2) x7856) (= (= x6298 0) x6939) (= (x7676 x666) x6298)) x6544) (and (=> (and (not x6939) (and (and (= 486791245 x3000) (= x2209 100) (= (x7676 x666) x3124) (= x2067 false) (= 0 x7662) (= 0 x6454) (= x1240 false) (>= 127 x3745) (<= x3745 127) (= x6543 x6349) (= x3264 0) (= x743 false) (= 0 x2010) (= x2694 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= x2317 x6543) (>= x3124 1)) (or (and (= (ite x1240 1 0) x3188) (not x1240)) (and (and (<= x5076 1461501637330902918203684832716283019655932542975) (= (ite (not (= x5076 x666)) 1 0) x3188)) x1240)))) x4081) (=> (and (and (= x3359 0) (= x790 false) (= x7065 true)) x6939) x2802))) (=> (and (not x6544) (and (= x6810 false) (= 4 x3359) (= true x2926))) x2802))))))))) (=> x7122 x7037))) (=> x2559 x2713))) (=> (and (not x4663) (= x3058 (= 4 x6074))) (and (=> (and (= x2341 (= x6074 5)) (not x3058)) (and (=> (and x2341 (= x182 (= x4417 255))) (and (=> x182 x2713) (=> (and (and (= (x639 255 x7057) x5849) (= (x8516 x700) x2924) (= (x8452 64 x4417 36) x700) (= x6515 (x639 255 x7057)) (= (= 255 x6515) x2978) (= x7057 (+ x4417 1))) (not x182)) (and (=> x2978 x7037) (=> (and (and (= (x639 255 x4409) x5128) (= x4409 (+ 1 x6515)) (= (= 255 x5128) x1807) (= (x8168 x1878) x1544) (>= 65535 x1544) (= x1878 (x8452 64 x6515 6)) (= x5947 (x639 255 x4409))) (not x2978)) (and (=> (and (not x1807) (and (= x8180 (x8297 x6194 2)) (= x1816 (+ x5128 1)) (= x6125 (x639 255 x1816)) (= x6760 (x4838 x625)) (= (x639 255 x1816) x8051) (>= 18446744073709551615 x6760) (= x8210 (x4456 (- x249 (mod (ite (> 32 x2511) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x639 1 x6194) x249) (= x5641 (> x8210 0)) (= (ite (> x249 0) x8180 (x639 127 x8180)) x2511) (= x625 (x8452 64 x5128 12)))) (and (=> (not x5641) x3473) (=> (and (and (= x6367 (x639 1 x6194)) (= (= 0 x6367) x2000)) x5641) (and (=> (and (not x2000) (and (or (and (and (= (x102 x8224) x4435) (= x4691 32) (<= x2511 32)) x378) (and (= x4691 0) (not x378))) (and (= x8224 (x3114 32 103)) (= (> x2511 0) x378)))) x2483) (=> (and (and (or (= x366 0) (= x366 32)) (= x366 (* 32 (ite (not (= 0 x2511)) 1 0))) (= (+ x366 292) x258) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6194) x4644)) x2000) x7716))))) (=> x1807 x674))))))) (=> (and (= x4363 (= x6074 6)) (not x2341)) (and (=> (and (= x1446 (= x4417 255)) x4363) (and (=> x1446 x2713) (=> (and (and (= x1528 (x639 255 x4114)) (= x4253 (x8516 x4847)) (= x4847 (x8452 64 x4417 36)) (= (+ 1 x4417) x4114) (= x1158 (x639 255 x4114)) (= (= x1528 255) x2364)) (not x1446)) (and (=> x2364 x7037) (=> (and (not x2364) (and (= x110 (x8516 x7137)) (= (x639 255 x1653) x8514) (= x5228 (x639 255 x1653)) (= (= 255 x8514) x4894) (= (x8452 64 x1528 36) x7137) (= (+ 1 x1528) x1653))) (and (=> (and (not x4894) (and (= x7855 (x639 255 x2855)) (= x2855 (+ x8514 1)) (= (x8516 x703) x6617) (= x703 (x8452 64 x8514 36)) (= x2041 (x639 255 x2855)) (= (= 255 x2041) x3323))) (and (=> (and (not x3323) (and (= x6795 (+ 1 x2041)) (= x3685 (= x1853 0)) (= (x8516 x7026) x4236) (= x5585 (x639 255 x6795)) (= x342 (x639 255 x6795)) (= x1853 (x7676 x3286)) (= 128 x5811) (= (x8452 64 x2041 36) x7026))) (and (=> (and (and (= (<= x4253 x1748) x2601) (= (x2329 x729) x1748) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x498 x4253)) x2500) (= x498 (x2329 x3286)) (= (and x2601 x2500) x6838)) (not x3685)) (and (=> (and (not x6838) (and (= x7382 x342) (= x3955 x3545) (= x5477 0) (= x4112 x2902) (= x7063 x6141) (= x5032 0))) x1724) (=> (and (and (or (and (not x709) (= (ite x709 1 0) x5662)) (and (and (= (ite (not (= x729 x5076)) 1 0) x5662) (>= 1461501637330902918203684832716283019655932542975 x5076)) x709)) (and (= 486791245 x5147) (<= 0 x5666) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5666) (= (x7676 x666) x7044) (= x4236 x6145) (<= x5982 127) (= x6145 x861) (= x7132 x5666) (= x8116 (- x7727 x4253)) (= x2213 x944) (= (x2329 x729) x7727) (= x4997 x4202) (= x6431 (x4382 x3286)) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x1523) (>= 127 x5982) (= x6617 x4997) (< (+ x4253 x6431) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= false x3036) (>= x7044 1) (= x110 x2213) (= x5666 (+ x4253 x6431)) (= (not (= x666 x729)) x709) (= x6592 false) (= x7329 100))) x6838) x7666))) (=> (and x3685 (and (= x4512 x3545) (= x6049 x4112) (= 0 x7614) (= 2 x1951) (= x6141 x8357) (= x3455 false) (= 0 x7573) (= true x1450))) x2843))) (=> x3323 x674))) (=> x4894 x7613))))))) (=> (and (not x4363) (= x6045 (= x6074 7))) (and (=> (and (= x388 (= x4417 255)) x6045) (and (=> x388 x2713) (=> (and (and (= x7066 (x8452 64 x4417 2)) (= 128 x4590) (= (+ 1 x4417) x2869) (= x4922 (x639 255 x2869)) (= x6110 (= 0 x7089)) (= x2414 (x1908 x7066)) (= x6832 (x639 255 x2869)) (<= x2414 1461501637330902918203684832716283019655932542975) (= x7089 (x7676 x3286))) (not x388)) (and (=> (and (not x6110) (and (= x679 36) (<= 1 x5055) (= x3837 false) (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x3329) (= x200 x2414) (<= x5761 127) (= x5055 (x7676 x666)) (>= 1461501637330902918203684832716283019655932542975 x5076) (= x1601 (= x729 x5076)) (= x3763 false) (>= 127 x5761) (= x7121 2770781680))) (and (=> (and (and (= (x2329 x666) x5829) (= (< 0 x5829) x1153)) x1601) (and (=> (and (and (= x4574 x6141) (= x3156 x4922)) (not x1153)) x7197) (=> (and (and (= x794 (and x51 x3285)) (= x3285 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5829 x6466))) (= x6466 (x2329 x2414)) (= x51 (<= x5829 x6590)) (= x1091 128) (= x6590 (x2329 x666))) x1153) (and (=> (and (not x794) (and (= x5378 x4922) (= x1301 0) (= x4904 x6141) (= x1467 0))) x618) (=> (and (and (and (= x1285 (+ x5829 x3963)) (<= x1285 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3963 x5829)) (= x3414 (x2329 x666)) (<= 0 x1285) (= x1499 (> x3905 0)) (= x6363 (- x3414 x5829)) (= x3963 (x8238 x2414)) (= x8311 x1285)) (or (and x1499 (and (= x2234 x6724) x2536 (= (= (x6931 x2414) x3002) x2536) (= x5565 (x4972 x666)) (= x2599 (<= x5565 (x6931 x666))) x2599 (>= 4294967295 x7374) (= x3002 (x4972 x2414)) (= x489 x4814))) (and (and (= x2234 x4922) (= x4814 x6141)) (not x1499)))) x794) x5026))))) (=> (and (and (= x2811 100) (= true x1302) (= x4967 false)) (not x1601)) x3705))) (=> (and x6110 (and (= 0 x7573) (= x2834 false) (= x3545 x4512) (= x6362 2) (= x8357 x6141) (= x1079 true) (= x7614 0) (= x6049 x4112))) x2843))))) (=> (and (= x6439 (= 8 x6074)) (not x6045)) (and (=> (and (not x6439) (and (= x993 x4112) (= x2577 x4417) (= x6141 x6556) (= x6944 x3545))) x801) (=> (and (= x7144 (= x4417 255)) x6439) (and (=> (and (and (= (= x2853 0) x4375) (= (x8516 x1332) x2665) (= x4792 (x639 255 x793)) (= x2853 (x7676 x3286)) (= x4666 128) (= x5350 (x639 255 x793)) (= x793 (+ x4417 1)) (= x1332 (x8452 64 x4417 36))) (not x7144)) (and (=> (and (not x4375) (and (= false x7350) (= (= x729 x5076) x3810) (>= 127 x4377) (= 36 x8327) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x43) (>= 127 x4377) (= x2665 x2688) (>= 1461501637330902918203684832716283019655932542975 x5076) (<= 1 x315) (= x3987 false) (= x7600 1313998243) (= x315 (x7676 x666)))) (and (=> (and x3810 (= (> 100000 x2665) x5833)) (and (=> (and (and (= (x8516 x1332) x5082) (= x5082 x472) (= x5350 x5211) (= x8037 1) (= x3574 x6141) (= 0 x7599) (= x8565 x3545)) (not x5833)) x7193) (=> (and (and (= true x5479) (= 4 x4001) (= false x2208)) x5833) x5706))) (=> (and (and (= 100 x4001) (= x1952 true) (= x8233 false)) (not x3810)) x5706))) (=> (and (and (= x6141 x8357) (= false x1971) (= x4112 x6049) (= x7573 0) (= x7614 0) (= true x7330) (= x6420 2) (= x3545 x4512)) x4375) x2843))) (=> x7144 x2713))))))))))) (=> (and (= (= 255 x4417) x1223) x3058) (and (=> (and (and (= (+ 1 x4417) x1071) (= (x8516 x7840) x7335) (= x8366 (x639 255 x1071)) (= x1459 (x639 255 x1071)) (= x3310 (= 255 x1459)) (= (x8452 64 x4417 36) x7840)) (not x1223)) (and (=> (and (and (= (+ 1 x1459) x5232) (= x8487 (= 255 x66)) (= x66 (x639 255 x5232)) (= (x639 255 x5232) x3636) (= x7953 (x8401 x7082)) (= (x8452 64 x1459 100) x7082)) (not x3310)) (and (=> x8487 x7613) (=> (and (not x8487) (and (= (+ x66 1) x4723) (not (and x3516 x844)) (= x4512 x3545) (= x5772 true) (= x1765 (x639 255 x4723)) (= (x8516 x2944) x1871) (= x4366 (x639 255 x4723)) (= false x7000) (= (< (+ x2233 x7335) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x844) (= x6855 (x2329 x729)) (= x2233 (x2329 x3286)) (= x7573 0) (= x6141 x8357) (= x2944 (x8452 64 x66 36)) (= 0 x7614) (= (<= x7335 x6855) x3516) (= 2 x4154) (= x6049 x4112))) x2843))) (=> x3310 x7037))) (=> x1223 x2713))))))))))))))))))) (=> (and x6603 (and (= x4112 x3360) (= x3256 x3545) (= x261 x6141))) x6679))) x6801))
(assert (x5189 x7673 2))
(assert (x2496 x4209))
(assert (= x5158 (x842 (x658 x6609 x5108 x6949 x5158))))
(assert (x4101 x6335))
(assert (x4101 x211))
(assert (= (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x954 x2658)))
(assert (x4101 x545))
(assert (x4101 x3011))
(assert (x4101 x354))
(assert (= (and x919 x2012) x8374))
(assert (=> (>= 10000 x3139) (= 0 (x3391 x3139))))
(assert (= (x5740 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336)) x3808))
(assert (x4101 x1607))
(assert (= (=> (= x3589 (= 0 x5608)) (and (=> (and (not x3589) (and (= x3064 x2036) (= x8342 x2153) (= x7775 x8030) (= x7618 x1974))) x6381) (=> (and (and (= x4112 x6049) (= x7614 x7045) (= x6141 x8357) (= 0 x7573) (= false x2610) (= x8524 2) (= x4512 x3545) (= x3974 true)) x3589) x2843))) x6493))
(assert (x4101 x8126))
(assert (= (x3391 x4020) (x3391 (+ 1 x4020))))
(assert (x2674 65535))
(assert (= (x6212 (x658 x954 x8553 x4050 x8396)) x4050))
(assert (x4101 x7540))
(assert (x4101 x1493))
(assert (x4101 x4580))
(assert (x4101 x1158))
(assert (= x1901 (and x8456 (not x8364))))
(assert (= (and x6198 (not x1846)) x919))
(assert (= (and x5029 (not x5782)) x381))
(assert (= x5828 (x6140 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828))))
(assert (=> (<= x7346 10000) (= (x3391 x7346) 0)))
(assert (x4101 x4054))
(assert (x3760 x4179 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4519 (x8452 64 x110 11)) 64))
(assert (x3760 x6107 32))
(assert (=> (>= 10000 x7740) (= 0 (x3391 x7740))))
(assert (x4101 x2111))
(assert (x4101 x6251))
(assert (= (and (not x7695) x3893) x7085))
(assert (= (and (not x5693) x6090) x6534))
(assert (x4101 x7850))
(assert (x4101 x5952))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x658 x8066 x7449 x526 x4927)))
(assert (x4101 x8052))
(assert (> (x8452 x6256 x5658 x7172) 10000))
(assert (=> (<= x5406 10000) (= 0 (x3391 x5406))))
(assert (x725 x5273))
(assert (x4101 x4202))
(assert (x4101 x2136))
(assert (x2496 x4498))
(assert (=> (>= 10000 x2088) (= (x3391 x2088) 0)))
(assert (x4101 x2624))
(assert (x725 x2482))
(assert (x4101 x5210))
(assert (x4101 x2991))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x8247 x8500)))
(assert (= (x5740 (x8452 x7301 x8339 x60)) x8339))
(assert (= (and x4343 (not x3616)) x5784))
(assert (> (x3114 x3728 x1784) 10000))
(assert (=> (<= x6190 10000) (= 0 (x3391 x6190))))
(assert (= 0 (x3391 3957931183)))
(assert (x4101 x4760))
(assert (=> (>= 10000 x1459) (= 0 (x3391 x1459))))
(assert (= (x6212 (x5018 x5857 x8219 x4949 x2419 x5524)) x4949))
(assert (= (x5740 (x6207 x954 x2088 x1088 x7472 x5281 x2463)) x2088))
(assert (x4101 x4320))
(assert (=> (>= 10000 x4438) (= 0 (x3391 x4438))))
(assert (x3481 x1294))
(assert (x4101 x2263))
(assert (= x1965 (or x7957 x1317)))
(assert (x4101 x1949))
(assert (=> (>= 10000 x1137) (= (x3391 x1137) 0)))
(assert (x4101 x5743))
(assert (x4101 x1871))
(assert (x4101 x6567))
(assert (x4101 x632))
(assert (= x8590 (or x2859 x7815 x3718 x4653 x2765)))
(assert (x5391 x4854))
(assert (= (and x1485 x2595) x8299))
(assert (= 64 (x4519 (x8452 64 x66 36))))
(assert (=> (<= x2579 10000) (= (x3391 x2579) 0)))
(assert (< (x8452 64 x2041 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5815))
(assert (x4101 x2022))
(assert (= x6472 (and (not x8450) x1646)))
(assert (x725 x826))
(assert (not (x2674 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385))))
(assert (x4101 x3424))
(assert (x4101 x6303))
(assert (x2496 x5567))
(assert (x4101 x6259))
(assert (= x3708 (x4117 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708))))
(assert (x4101 x5753))
(assert (= (and (not x1100) x2116) x5544))
(assert (=> (<= x652 10000) (= 0 (x3391 x652))))
(assert (=> (>= 10000 x8526) (= 0 (x3391 x8526))))
(assert (= x2925 (=> (= x7147 (= x5382 0)) (and (=> (and (and (= x816 x8014) (= x4760 x8234) (= false x4269) (= x1648 x3819) (= 0 x5204) (= x3529 x3365) (= true x4510) (= x5893 x4445) (= x337 x3595) (= x8495 x826) (= x7632 x1859) (= x846 x2571) (= x2814 x1395) (= x4906 2) (= x7103 x40) (= x2244 x1196) (= x2398 x7904)) x7147) x2534) (=> (and (not x7147) (and (= x1222 x8120) (= x5362 x3132) (= x6996 x3231) (= x300 x2031) (= x1595 x1677) (= x3121 x121) (= x4812 x1145) (= x4215 x612) (= x5823 x2846) (= x2831 x5916) (= x8136 x5358) (= x4952 x4755) (= x867 x1701))) x6748)))))
(assert (x2674 486791245))
(assert (=> (<= x3972 10000) (= 0 (x3391 x3972))))
(assert (x4101 x5))
(assert (=> (>= 10000 x717) (= 0 (x3391 x717))))
(assert (not (x2674 (x8452 64 x4417 2))))
(assert (x4101 x1524))
(assert (=> (>= 10000 x481) (= 0 (x3391 x481))))
(assert (x4101 x6635))
(assert (x2496 x7741))
(assert (= (and x1453 x2057) x823))
(assert (x4101 x396))
(assert (x4101 x5579))
(assert (x4101 x1612))
(assert (= (x8370 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550)) x5443))
(assert (x4101 x1956))
(assert (> (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551) 10000))
(assert (x4101 x8372))
(assert (x4101 x4783))
(assert (x4101 x6583))
(assert (=> (>= 10000 x1280) (= (x3391 x1280) 0)))
(assert (x4101 x721))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x5231 2)))
(assert (= x6256 (x4519 (x5018 x6256 x112 x2259 x6535 x7432))))
(assert (x4101 x5360))
(assert (= x7139 (=> (= x8474 (+ x8007 292)) x982)))
(assert (= x2194 (or (and x2319 x2870) (and x3028 x3749) (and x8469 x272))))
(assert (x4101 x4865))
(assert (= x4121 (and x6405 x7501)))
(assert (x4101 x6020))
(assert (x4101 x1759))
(assert (> (x658 x7301 x6879 x5406 x821) 10000))
(assert (x25 256 x5907))
(assert (x4101 x6359))
(assert (x4101 x8340))
(assert (x4101 x5041))
(assert (= (and x3035 x6045) x4398))
(assert (x4101 x6920))
(assert (= x5469 x5944))
(assert (x4101 x2110))
(assert (= (x4519 (x8452 64 x4807 4)) 64))
(assert (= x59 (x8370 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832))))
(assert (x4101 x5646))
(assert (= (x5018 x6601 x1538 x2378 x3456 x2871) (x3391 (x5018 x6601 x1538 x2378 x3456 x2871))))
(assert (=> (>= 10000 x408) (= 0 (x3391 x408))))
(assert (=> (>= 10000 x6689) (= 0 (x3391 x6689))))
(assert (x4101 x3876))
(assert (=> (<= x5070 10000) (= (x3391 x5070) 0)))
(assert (< (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x1744))
(assert (= x4567 (x4519 (x5018 x4567 x7844 x3878 x6416 x1409))))
(assert (x4101 x708))
(assert (x4057 x5485))
(assert (= x941 (x5740 (x6207 x8105 x941 x8457 x6689 x1263 x3972))))
(assert (x4101 x2857))
(assert (= (and x2923 (not x4647)) x7095))
(assert (= (x3391 (x8452 64 x4521 36)) (x8452 64 x4521 36)))
(assert (x4101 x5321))
(assert (x4101 x1559))
(assert (x4101 x8482))
(assert (x4101 x726))
(assert (x3760 x6306 128))
(assert (=> (>= 10000 x4433) (= (x3391 x4433) 0)))
(assert (= x7968 (x8370 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817))))
(assert (x4101 x7179))
(assert (x2496 x2908))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x658 x6609 x5108 x6949 x5158)))
(assert (x4101 x2283))
(assert (x4101 x6069))
(assert (x4101 x7721))
(assert (= x3300 (x4117 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300))))
(assert (x4101 x4466))
(assert (x4101 x1340))
(assert (=> (>= 10000 x3274) (= 0 (x3391 x3274))))
(assert (x4101 x2080))
(assert (x4101 x4230))
(assert (= (x6212 (x5018 x3728 x7647 x2836 x4072 x2598)) x2836))
(assert (x4101 x6084))
(assert (x4101 x6732))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4807 3)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x3485 x5701 x2008)))
(assert (x4101 x4441))
(assert (x3760 x7673 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4053 (and x2361 x7408)))
(assert (< (x5018 x5857 x8219 x4949 x2419 x5524) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2674 (x658 x6601 x8352 x7125 x7289))))
(assert (= x5137 (or x4167 x1350)))
(assert (x5189 x7921 2))
(assert (= x4807 (x5740 (x8452 64 x4807 5))))
(assert (= (and (not x8397) x6510) x7414))
(assert (x4101 x5162))
(assert (= (x6140 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285)) x285))
(assert (x5391 x2571))
(assert (= (or x1406 x516) x4530))
(assert (= (or x5436 (and x8600 (not x3575))) x3219))
(assert (= (x5740 (x658 x1404 x6591 x1588 x6117)) x6591))
(assert (= (x3391 34591783479076665047274362116096262703299809091723987870014818727818681087008) 0))
(assert (= x7301 (x4519 (x3114 x7301 x907))))
(assert (= (x3391 (x8452 64 x110 11)) (x8452 64 x110 11)))
(assert (x4101 x7412))
(assert (x5391 x8507))
(assert (x4101 x2196))
(assert (x4101 x5253))
(assert (= x7037 (=> (and (= x3545 x4512) (= false x2627) (= x2430 2) (= x6141 x8357) (= x6049 x4112) (= 36 x7614) (= x4439 true) (= 0 x7573)) x2843)))
(assert (= (=> (= x7451 (= x6337 0)) (and (=> (and x7451 (and (= x2814 x1395) (= x337 x3595) (= true x2033) (= x1648 x3819) (= x7904 x2398) (= x8495 x826) (= x2244 x1196) (= x4445 x5893) (= 2 x3465) (= x3365 x3529) (= x2571 x846) (= x816 x8014) (= false x5037) (= 0 x5204) (= x7103 x40) (= x8234 x4760) (= x1859 x7632))) x2534) (=> (and (not x7451) (and (= x598 x6577) (= x1915 x7809) (= x1346 x207) (= x5921 x463) (= x1956 x2619) (= x6088 x7650) (= x532 x7870) (= x8317 x1676) (= x510 x5096) (= x3961 x6113) (= x4897 x4374) (= x6692 x7134) (= x5133 x722))) x5159))) x1475))
(assert (= (and x7656 (not x3957)) x106))
(assert (x4910 x5486))
(assert (= (and x2237 x7315) x2691))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 32 x5769)))
(assert (x4101 x4986))
(assert (x4101 x7492))
(assert (= (or x5064 x5049) x6279))
(assert (x4101 x6568))
(assert (= (and x6300 x5973) x3614))
(assert (x4101 x4427))
(assert (= x5615 (and x7709 (not x8447))))
(assert (x4101 x5776))
(assert (x4101 x5658))
(assert (x2496 x8296))
(assert (= (x5740 (x8452 64 x66 36)) x66))
(assert (= (=> (= (= x2565 0) x2659) (and (=> (and x2659 (and (= x1606 x261) (= x3256 x7210) (= x3360 x4921))) x6679) (=> (and (not x2659) (= (< x2949 32) x4768)) (and (=> (and x4768 (and (= x3256 x7210) (= x261 x1606) (= x3360 x4921))) x6679) (=> (and (not x4768) (and (= x4787 (x8308 x568)) (= x1029 (> x4787 3)) (= (x3536 160) x212) (<= x4787 255) (= (x8452 64 x212 11) x568))) (and (=> (and (= x2620 (= 0 x4787)) (not x1029)) (and (=> (and x2620 (and (= x4277 false) (= x2921 (+ 1 x3605)) (= false x6177) (= x5670 (x8452 64 x1526 10)) (= x4277 x6181) (= x2911 1) (= (+ x6242 1) x3605) (= false x3119) (= x7872 x4921) (= x294 x1606) (= false x7894) (= x7210 x7901) (= x6242 (x8452 64 x212 11)))) x3664) (=> (and (and (= x3360 x4921) (= x1606 x261) (= x3256 x7210)) (not x2620)) x6679))) (=> (and (and (= x3256 x7210) (= x261 x1606) (= x4921 x3360)) x1029) x6679))))))) x1540))
(assert (= (and (not x3247) x2098) x3087))
(assert (= (=> (and (= x6789 x3545) (= x26 x4489) (= x2479 (x639 255 x6795)) (= 0 x5459) (= x6478 x2479) (= x6141 x4348) (= x4112 x7548) (= x1968 2)) x6378) x395))
(assert (= x4148 (and x8045 x7537)))
(assert (x4101 x3982))
(assert (x3760 x5024 128))
(assert (=> (<= x6343 10000) (= (x3391 x6343) 0)))
(assert (=> (>= 10000 x7783) (= (x3391 x7783) 0)))
(assert (x4101 x394))
(assert (= (x4519 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070)) x8236))
(assert (x4101 x3690))
(assert (x4101 x1969))
(assert (x4101 x2847))
(assert (x4101 x3869))
(assert (= (and x4243 (not x6203)) x6900))
(assert (x4101 x70))
(assert (= x3046 (and x1349 x3346)))
(assert (= x6188 (and x5206 x7836)))
(assert (= x7115 (and x2566 x2667)))
(assert (x5391 x2236))
(assert (= (x3391 x492) (x3391 (+ 1 x492))))
(assert (= (x3391 (x8452 64 x4024 2)) (x8452 64 x4024 2)))
(assert (x4101 x3242))
(assert (x4101 x1236))
(assert (x4101 x7865))
(assert (x4101 x1308))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x8494 6)))
(assert (=> (<= x44 10000) (= (x3391 x44) 0)))
(assert (= (x6140 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814)) x3814))
(assert (x5189 x8050 32))
(assert (x3760 x2482 128))
(assert (= 32 (x4519 (x3114 32 x238))))
(assert (= (x4519 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336)) x5456))
(assert (x4101 x7462))
(assert (x4101 x7972))
(assert (x3760 x1637 256))
(assert (= x5205 (or x2891 x4816)))
(assert (x4101 x2672))
(assert (x725 x1487))
(assert (= (and x8241 (not x1929)) x1541))
(assert (= (=> (and (= x1749 true) (= false x5432) (= x7051 0)) x3924) x7))
(assert (x4101 x7498))
(assert (= (or x476 x7655 x4948 x2473 x57 x1456 x6762 x183 x4395 x7221) x7603))
(assert (x4101 x1301))
(assert (x4101 x7714))
(assert (= (x3391 43931689107028929153831073962459296230956404255593708771276734084804920737792) 0))
(assert (= x7371 (and x4279 (not x6048))))
(assert (= (and (not x1032) x7010) x6167))
(assert (= x7157 (=> (and (or (not x1739) x1739) (= (= x4320 0) x1739)) x3558)))
(assert (x4101 x5928))
(assert (x8137 x1637))
(assert (= (and (not x768) x6791) x3346))
(assert (= x8061 (x8370 (x6207 x6609 x665 x2145 x377 x444 x8061))))
(assert (x4101 x4722))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x8276 x2797 x2069 x4860 x7334)))
(assert (x4101 x351))
(assert (< 10000 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336)))
(assert (= (and (not x4225) x1798) x5474))
(assert (x4101 x3051))
(assert (x4101 x2695))
(assert (= (x5740 (x8452 64 x1526 10)) x1526))
(assert (= x8078 (=> (and (= x7632 x1859) (= x7904 x2398) (= x2571 x846) (= x5893 x4445) (= 0 x5204) (= x8234 x4760) (= false x7979) (= x8495 x826) (= x40 x7103) (= x3595 x337) (= x816 x8014) (= x1648 x3819) (= x2244 x1196) (= true x4312) (= x3365 x3529) (= x2814 x1395) (= x2489 2)) x2534)))
(assert (x4101 x6460))
(assert (=> (>= 10000 x6276) (= 0 (x3391 x6276))))
(assert (x4101 x7158))
(assert (= x2698 (and x5471 x6147)))
(assert (=> (>= 10000 x8426) (= (x3391 x8426) 0)))
(assert (x4101 x5571))
(assert (x4101 x6413))
(assert (= x203 (and (not x1039) x5285)))
(assert (x2496 x2811))
(assert (x5189 (+ x547 31) 32))
(assert (x4101 x7044))
(assert (=> (>= 10000 x334) (= (x3391 x334) 0)))
(assert (x4101 x3722))
(assert (= x7340 (and x1608 x4501)))
(assert (x2674 49960157028345592648530624234191905822321225401495951855107091972775720517632))
(assert (= (and x7624 x2692) x3979))
(assert (x4101 x5638))
(assert (not (x2674 (x8452 64 x5231 2))))
(assert (= x5971 (and (not x4504) x4947)))
(assert (= x4185 (or (and x6007 x2978) (and x3172 x2364) (and x5773 x6803) (and x4968 x7122) (and x5312 x3310))))
(assert (x4101 x2070))
(assert (= x899 (and x7113 (not x1144))))
(assert (x4101 x5195))
(assert (x4101 x2604))
(assert (not (x2674 (x3114 x4567 x2079))))
(assert (= (x3391 3628442803) 0))
(assert (x4101 x7129))
(assert (x4101 x3959))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x2493 x4433 x971 x4380 x3792 x6585)))
(assert (= x6317 (=> (and (= x3038 128) (= x293 (x4456 (- x4038 128))) (= x4643 (= x5244 0)) (= x5244 (x7676 x4760))) (and (=> (and (not x4643) (and x6989 (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7846) (= false x5398) (= x6989 (= x7234 (x3238 132))) (= x7846 x293) (= 1722637450 x7723) (<= 196 x293) (>= 127 x1073) (= (x7676 x666) x6359) (= x2343 46442213778836376901753710468615024683576072693327014300388496345503314739200) (>= 127 x1073) (= x8106 (< 18446744073709551615 x797)) (= x2002 x4358) (= x1854 128) (= x6319 x1655) (<= 196 x7846) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x293) (>= x6359 1) (= (x8107 132) x797) (= x2345 false) (= x1379 x3432))) (and (=> (and (and (= x3450 (x5665 (+ 164 x797))) (= 164 x214) (= x5483 (> x3450 x7846))) (not x8106)) (and (=> x5483 x4300) (=> (and (and (= (> x7846 (+ 31 x190)) x5007) (= x190 (+ 4 x1379))) (not x5483)) (and (=> (and x5007 (and (= x3327 (< 18446744073709551615 x7592)) (= x7592 (x8107 x190)))) (and (=> (and (not x3327) (and (= x1603 (+ x190 32)) (= (x5665 (+ x1603 x7592)) x1176) (= (> x1176 x7846) x7077))) (and (=> (and (and (or (and (and (= false x2271) (= x604 true) (= 132 x4209)) (not x1454)) (and x1454 (and (= x4209 0) (= x5572 true) (= (x5665 (+ 32 x1907)) x7630) (= x3097 (x5665 (+ 31 x7592))) (= x280 (x8297 x3097 32)) (= x7363 (x5665 (+ x7630 x7592))) (= x1520 (x5665 (+ x1110 32))) (>= x1768 161) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3583) (>= 31 x3583)) (= 128 x4353) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x797) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x797)) (= (x5665 (+ x1520 x1907)) x1768) (= x2663 (x8297 x1054 32)) (= x1054 (x5665 (+ x797 31))) (= x3583 (x7770 x1907)) (> x1768 x1907) (= (* x280 32) x1110) (= x2013 (* x2663 32)) (= x1907 (+ 160 x2013)) (= false x4137)))) (= (= x666 x729) x1454)) (not x7077)) x3910) (=> x7077 x4300))) (=> x3327 x3251))) (=> (and (and (= x6323 true) (= x3904 false) (= x4209 0)) (not x5007)) x3910))))) (=> x8106 x3251))) (=> (and x4643 (and (= x2398 x7904) (= x3595 x337) (= x5204 0) (= x3365 x3529) (= x2244 x1196) (= x5893 x4445) (= x826 x8495) (= x8234 x4760) (= x7632 x1859) (= x1395 x2814) (= 2 x62) (= x1648 x3819) (= x2571 x846) (= true x7213) (= x40 x7103) (= false x6230) (= x8014 x816))) x2534)))))
(assert (< (x8452 64 x518 (ite (<= x3485 32) x2064 (ite (>= 64 x3485) x4186 (ite (<= x3485 96) x6866 (ite (>= 128 x3485) x49 (ite (>= 160 x3485) x6094 (ite (>= 192 x3485) x8413 x749))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x4698))
(assert (x4101 x2677))
(assert (x4101 x4514))
(assert (= x1702 (or x7164 x363)))
(assert (x4101 x1385))
(assert (x4101 x2277))
(assert (x4101 x1086))
(assert (=> (<= x2877 10000) (= (x3391 x2877) 0)))
(assert (=> (<= x6736 10000) (= (x3391 x6736) 0)))
(assert (x4101 x67))
(assert (x4101 x7090))
(assert (x4101 x4655))
(assert (x4101 x3031))
(assert (=> (<= x1399 10000) (= 0 (x3391 x1399))))
(assert (= (and x8558 x7313) x5168))
(assert (x4101 x5730))
(assert (x4101 x4765))
(assert (x4101 x3334))
(assert (x4101 x6733))
(assert (x4101 x5813))
(assert (x8137 x7762))
(assert (= x8164 (x5740 (x3114 x5456 x8164))))
(assert (= x7957 (and x8485 x76)))
(assert (= (x3391 (x3114 x7301 x907)) (x3114 x7301 x907)))
(assert (x4101 x4353))
(assert (x4101 x2396))
(assert (x4101 x5616))
(assert (= x5694 (and x1846 x6198)))
(assert (x4101 x6556))
(assert (x4101 x2726))
(assert (x725 x5839))
(assert (x3760 x4818 256))
(assert (x4101 x1044))
(assert (x4101 x7449))
(assert (< 10000 (x5018 x1404 x8231 x7521 x8002 x408)))
(assert (not (x2674 (x6207 x8066 x1862 x2624 x99 x6072 x1363))))
(assert (= x169 (and (not x6482) x2047)))
(assert (< (x8452 64 x1526 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x1708))
(assert (x4101 x7597))
(assert (= (x8452 x8066 x6941 x7545) (x3391 (x8452 x8066 x6941 x7545))))
(assert (= (x4519 (x8452 64 x4807 5)) 64))
(assert (= x1700 (or x2530 (and x3496 (not x2503)))))
(assert (= (and (not x4401) x5081) x8435))
(assert (x4101 x6313))
(assert (= (and x1881 (not x8027)) x5192))
(assert (x4101 x3702))
(assert (x4101 x1721))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x6601 x80)))
(assert (x4101 x5816))
(assert (x4101 x5216))
(assert (= (and x1663 (not x698)) x6723))
(assert (= (x4519 (x3114 x2327 x7905)) x2327))
(assert (= (x4955 (x5018 x8276 x2797 x2069 x4860 x7334)) x7334))
(assert (x4101 x6395))
(assert (= (x3391 (x6207 x3485 x136 x3977 x352 x6346 x7911)) (x6207 x3485 x136 x3977 x352 x6346 x7911)))
(assert (= (=> (= x6538 (= x4418 0)) (and (=> (and (not x6538) (and (= x7417 x4682) (= x232 x6853) (= x7273 x6327) (= x5381 x5224) (= x6163 x5467) (= x2284 x5148) (= x3181 x945) (= x7601 x1832) (= x1506 x4722) (= x4797 x7900) (= x6335 x5725) (= x553 x123) (= x4658 x4441))) x186) (=> (and x6538 (and (= x2398 x7904) (= false x5402) (= x1395 x2814) (= x7103 x40) (= x337 x3595) (= x2244 x1196) (= x5893 x4445) (= x8495 x826) (= x1648 x3819) (= x816 x8014) (= x5204 0) (= x3529 x3365) (= x8234 x4760) (= x2571 x846) (= x3380 2) (= x7632 x1859) (= x7784 true))) x2534))) x2494))
(assert (x5391 x6194))
(assert (= 6 (x6212 (x8452 64 x4417 6))))
(assert (x4057 x7921))
(assert (x4101 x889))
(assert (= x2118 (and x7967 x709)))
(assert (= x167 (x842 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393))))
(assert (=> (>= 10000 x4047) (= (x3391 x4047) 0)))
(assert (x4101 x665))
(assert (< (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x1938))
(assert (= x359 (and (not x7223) x5984)))
(assert (= x2222 (x5740 (x658 x8236 x2222 x6395 x5287))))
(assert (x3760 x5330 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2674 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832))))
(assert (x2496 x7045))
(assert (x4101 x1737))
(assert (x4057 256))
(assert (= x3706 (or x8603 x2255)))
(assert (= 64 (x4519 (x8452 64 x4803 7))))
(assert (x4101 x7106))
(assert (= (x6212 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)) x5564))
(assert (= x5471 (and (not x4087) x892)))
(assert (not (x2674 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285))))
(assert (x725 x3786))
(assert (x4101 x6860))
(assert (not (x2674 (x8452 64 x1648 4))))
(assert (x4101 x4276))
(assert (x4101 x5639))
(assert (x4101 x6628))
(assert (= (and x6061 x3596) x2330))
(assert (x4101 x3628))
(assert (x4101 x8458))
(assert (= (and (not x709) x7967) x8223))
(assert (x4101 x83))
(assert (x725 x372))
(assert (x4101 x4873))
(assert (=> (<= x4425 10000) (= 0 (x3391 x4425))))
(assert (= x2826 (x4955 (x6207 x6256 x690 x1813 x3211 x2826 x8101))))
(assert (x725 x5024))
(assert (x4101 x6478))
(assert (x4101 x4952))
(assert (x4101 x3712))
(assert (= (x3391 1313998243) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751)))
(assert (= (=> (and (= x4609 x4283) (= x6243 x3578) (= x6477 x1136) (= x1625 1) (= x7556 x5458) (= x7785 0)) x1007) x8026))
(assert (x4101 x7991))
(assert (= (x4519 (x658 x954 x8553 x4050 x8396)) x954))
(assert (< (x658 x8105 x1516 x7217 x2649) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x8370 (x6207 x3728 x6176 x1012 x365 x1345 x6842)) x6842))
(assert (x864 x6194))
(assert (not (x2674 (x6207 x4567 x5929 x4238 x5321 x5266 x4424))))
(assert (= x2563 (x842 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707))))
(assert (= (=> (and (= (= x2544 0) x1032) (= x7391 (x4456 (- x1157 128))) (= x2544 (x7676 x4760)) (= x469 128)) (and (=> (and (not x1032) (and (= x4943 51607134309459761954548520284799282329936326410793501951915747293203005440) (= x8531 x7391) x8400 (= x6609 (x1162 132)) (<= 196 x7391) (= (< 18446744073709551615 x6609) x6410) (= false x6673) (= x3894 x3712) (<= 196 x8531) (<= 1 x3641) (= x6911 false) (= x7761 x6260) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7391) (<= x4926 127) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8531) (<= x4926 127) (= (x7676 x666) x3641) (= (= x7188 (x5940 132)) x8400) (= x3635 x6681) (= 128 x5468) (= 1914215 x4035))) (and (=> (and (and (= x1622 (x5665 (+ 164 x6609))) (= 164 x3559) (= x8152 (> x1622 x8531))) (not x6410)) (and (=> x8152 x8498) (=> (and (not x8152) (and (= (+ 4 x3635) x1829) (= x7207 (> x8531 (+ x1829 31))))) (and (=> (and (not x7207) (and (= x5348 true) (= x2533 0) (= false x4750))) x5581) (=> (and x7207 (and (= x1867 (> x4758 18446744073709551615)) (= (x1162 x1829) x4758))) (and (=> x1867 x4227) (=> (and (not x1867) (and (= (x5665 (+ x7233 x4758)) x3567) (= (< x8531 x3567) x6505) (= (+ 32 x1829) x7233))) (and (=> (and (= (= x7632 x729) x1045) (not x6505)) (and (=> (and (not x1045) (and (= false x4550) (= 100 x2533) (= x4347 true))) x5581) (=> (and x1045 (and (= x4850 (x4426 x3750)) (= (x4456 (- x3520 (mod (ite (< x4726 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1933) (= (ite (< 0 x3520) x5863 (x639 127 x5863)) x4726) (= x3750 (x8452 64 x6260 3)) (= (x639 1 x4850) x3520) (= x5863 (x8297 x4850 2)) (= x7539 (< 0 x1933)))) (and (=> (and x7539 (and (= x494 (+ x6315 160)) (= x3998 (= x4726 0)) (= (* x4019 32) x6315) (= x4019 (x8297 (+ 31 x4726) 32)))) (and (=> (and (= x3449 (> x4726 31)) (not x3998)) (and (=> (and (and (or (not x4099) (and x4099 (and (<= x3013 224) (= (x2637 x2291) x8343) (>= x3013 160)))) (and (= (x2637 x7948) x6332) (= x3013 (+ 160 x4726)) (= (x3114 32 x3750) x7948) (= (< 192 x3013) x4099) (= x2291 (+ x7948 1)))) x3449) x4651) (=> (and (not x3449) (and (= x5219 (* 256 x2406)) (= x4188 (x4426 x3750)) (= x2406 (x8297 x4188 256)))) x8260))) (=> x3998 x8260))) (=> (and (not x7539) (and (= true x3459) (= false x4244) (= x2533 36))) x5581))))) (=> x6505 x8498))))))))) (=> x6410 x4227))) (=> (and (and (= x3365 x3529) (= x4760 x8234) (= x1648 x3819) (= x3595 x337) (= x2814 x1395) (= 2 x7607) (= 0 x5204) (= x8495 x826) (= x7632 x1859) (= x896 false) (= x2398 x7904) (= x7103 x40) (= x2571 x846) (= x816 x8014) (= x1196 x2244) (= x4445 x5893) (= true x7543)) x1032) x2534))) x3372))
(assert (x3760 x2650 2))
(assert (< (x8452 64 x2232 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x5740 (x5018 x6655 x7778 x3104 x3601 x1789)) x7778))
(assert (= x2116 (and x4611 x3547)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x5857 x681 x1632 x5447 x2128 x1530)))
(assert (x4101 x41))
(assert (x4101 x6780))
(assert (= (and x3947 x5090) x4145))
(assert (= (x5740 (x8452 x2327 x708 x4778)) x708))
(assert (x4101 x8208))
(assert (= x8433 (=> (= x317 (= x8037 0)) (and (=> (and (and (= x6556 x3574) (= x993 x472) (= x8565 x6944) (= x2577 x5211)) (not x317)) x801) (=> (and (and (= x6049 x4112) (= x8357 x6141) (= x3545 x4512) (= x7573 0) (= 2 x6264) (= true x4605) (= false x6036) (= x7614 x7599)) x317) x2843)))))
(assert (=> (<= x6879 10000) (= (x3391 x6879) 0)))
(assert (= (x8452 x6655 x5638 x3262) (x3391 (x8452 x6655 x5638 x3262))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153)))
(assert (x4101 x4261))
(assert (= x518 (x5740 (x8452 64 x518 (ite (>= 32 x1404) x320 (ite (<= x1404 64) x4133 (ite (<= x1404 96) x1002 (ite (<= x1404 128) x4746 (ite (<= x1404 160) x8578 (ite (>= 192 x1404) x996 x7067))))))))))
(assert (x4101 x5710))
(assert (= (x5740 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)) x6664))
(assert (x4101 x4075))
(assert (=> (<= x8105 10000) (= (x3391 x8105) 0)))
(assert (= x2493 (x4519 (x6207 x2493 x4433 x971 x4380 x3792 x6585))))
(assert (x4101 x1346))
(assert (x4101 x2762))
(assert (not (x2674 (x8452 64 x5128 12))))
(assert (x4101 x5827))
(assert (x725 x3133))
(assert (x4101 x1008))
(assert (x4101 x247))
(assert (= (and (not x6433) x6490) x3572))
(assert (x4101 x8503))
(assert (= x2493 (x4519 (x658 x2493 x2634 x165 x5303))))
(assert (=> (>= 10000 x5339) (= (x3391 x5339) 0)))
(assert (x4101 x2997))
(assert (x4101 x4402))
(assert (x5189 x2650 2))
(assert (x4101 x1368))
(assert (x4101 x6044))
(assert (= x2569 (and (not x3289) x8010)))
(assert (x725 x5699))
(assert (not (x2674 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707))))
(assert (=> (>= 10000 x1363) (= 0 (x3391 x1363))))
(assert (not (x2674 (x5018 x6655 x7778 x3104 x3601 x1789))))
(assert (x5189 (+ 31 x4726) 32))
(assert (x4101 x7201))
(assert (= (x6212 (x5018 x6256 x112 x2259 x6535 x7432)) x2259))
(assert (x4101 x5624))
(assert (x4101 x8118))
(assert (x4101 x8014))
(assert (x2496 x679))
(assert (= (x658 x8236 x2222 x6395 x5287) (x3391 (x658 x8236 x2222 x6395 x5287))))
(assert (x4101 x347))
(assert (= x4427 (x4955 (x6207 x8247 x2495 x8394 x2135 x4427 x5325))))
(assert (=> (<= x5724 10000) (= (x3391 x5724) 0)))
(assert (not x6846))
(assert (x4101 x5870))
(assert (x2496 x4775))
(assert (= (x8452 64 x5710 11) (x3391 (x8452 64 x5710 11))))
(assert (x4101 x1621))
(assert (x4101 x805))
(assert (not (x2674 (x5018 x3485 x4823 x5174 x8145 x7574))))
(assert (= (x4955 (x4851 x8105 x5667 x5241 x3759 x4425 x7691 x7751)) x4425))
(assert (=> (>= 10000 x6263) (= (x3391 x6263) 0)))
(assert (=> (>= 10000 x8247) (= (x3391 x8247) 0)))
(assert (=> (<= x6591 10000) (= 0 (x3391 x6591))))
(assert (x725 x5260))
(assert (x4101 x2678))
(assert (x4101 x3826))
(assert (= x6756 (and x8330 (not x2913))))
(assert (not (x2674 (x8452 x2493 x5680 x3170))))
(assert (= 64 (x4519 (x8452 64 x4936 0))))
(assert (= (and x6927 x6538) x2216))
(assert (= (and x4670 x4303) x616))
(assert (x4101 x8396))
(assert (x4101 x6601))
(assert (=> (<= x7217 10000) (= 0 (x3391 x7217))))
(assert (x4101 x270))
(assert (x4101 x3991))
(assert (< (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x7257))
(assert (x4101 x4435))
(assert (=> (<= x2083 10000) (= (x3391 x2083) 0)))
(assert (x4101 x6716))
(assert (x4101 x7102))
(assert (= x1945 (x6212 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825))))
(assert (=> (>= 10000 x7760) (= 0 (x3391 x7760))))
(assert (=> (<= x4062 10000) (= (x3391 x4062) 0)))
(assert (x4101 x6204))
(assert (x4101 x4090))
(assert (< (x6207 x8066 x1862 x2624 x99 x6072 x1363) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x576))
(assert (x4101 x1433))
(assert (=> (>= 10000 x549) (= 0 (x3391 x549))))
(assert (x3760 x4606 256))
(assert (x4101 x8417))
(assert (< (x6207 x6601 x1154 x6468 x2260 x2279 x5339) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x3641))
(assert (< 10000 (x6207 x5857 x681 x1632 x5447 x2128 x1530)))
(assert (< (x8452 64 x4024 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6353 (and x6665 x6278)))
(assert (= x6601 (x4519 (x658 x6601 x8352 x7125 x7289))))
(assert (= (x8452 64 1 x3502) (x3391 (x8452 64 1 x3502))))
(assert (x4101 x6420))
(assert (x4101 x5086))
(assert (> (x5018 x8247 x7491 x7316 x1399 x6343) 10000))
(assert (x4101 x3751))
(assert (x4101 x8101))
(assert (x25 32 (ite (not (= 0 x5380)) 1 0)))
(assert (x4101 x5552))
(assert (= (and (not x3232) x5078) x50))
(assert (x725 x4409))
(assert (x4101 x4787))
(assert (x4101 x3999))
(assert (x4101 x5953))
(assert (x4101 x4823))
(assert (x4101 x818))
(assert (x3760 x331 32))
(assert (x2496 x4610))
(assert (x3760 x8246 32))
(assert (x4101 x5468))
(assert (= x3444 (x4955 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733))))
(assert (= (or (and (not x7170) x5015) x6858) x7805))
(assert (= 1 (x5740 (x8452 64 1 x7411))))
(assert (= (=> (and (= x816 x8014) (= x2571 x846) (= x5204 0) (= x2398 x7904) (= x1196 x2244) (= x1648 x3819) (= 2 x2849) (= x3529 x3365) (= x1395 x2814) (= false x1273) (= x5893 x4445) (= x4760 x8234) (= x337 x3595) (= x7632 x1859) (= x826 x8495) (= x40 x7103) (= true x6999)) x2534) x7763))
(assert (= x7279 (and (not x7661) x4161)))
(assert (x4101 x2123))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x658 x6256 x7745 x8380 x6390)))
(assert (= x1803 (or x8338 x4825 x7226)))
(assert (x5391 x4179))
(assert (= x2837 (x6212 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665))))
(assert (= x4958 (and (not x1605) x7935)))
(assert (x4101 x925))
(assert (x4101 x2430))
(assert (= (and x6599 (not x4259)) x5578))
(assert (=> (>= 10000 x4144) (= (x3391 x4144) 0)))
(assert (x3481 x4179))
(assert (x3481 x372))
(assert (x4101 x685))
(assert (= (and x2989 x6333) x1790))
(assert (x4101 x1232))
(assert (x4101 x5564))
(assert (< (x5018 x7483 x7258 x567 x3375 x3585) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5391 x331))
(assert (= x227 (or x581 x3411 x4185 x256 x3257 x5750 x7829 x3717 x2384 x5109 x4491 x7997 x1336 x4586 x6917 x4053 x1817 x707 x217 x7640 x1697 x7837 x1556 x4316 x10 x3979 x6691)))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x6018 36)))
(assert (x4101 x2633))
(assert (x4101 x7740))
(assert (x4101 x6589))
(assert (x3760 x4850 2))
(assert (x4101 x8585))
(assert (= x4533 (and x1869 (not x1333))))
(assert (x4101 x1879))
(assert (= (x4519 (x3114 x6601 x80)) x6601))
(assert (x4101 x3510))
(assert (=> (<= x7560 10000) (= 0 (x3391 x7560))))
(assert (= x4837 (and x4965 x3833)))
(assert (x4101 x764))
(assert (= x3485 (x4519 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300))))
(assert (= x7575 (or (and x4832 x322) (and x7302 x7445))))
(assert (= (and x5132 x8220) x2334))
(assert (x2496 x2734))
(assert (=> (<= x6655 10000) (= (x3391 x6655) 0)))
(assert (x4101 x2261))
(assert (x4101 x5301))
(assert (x4101 x7818))
(assert (< 10000 (x8452 64 x1459 100)))
(assert (x4101 x53))
(assert (= x7483 (x4519 (x6207 x7483 x4415 x1668 x2575 x5720 x7858))))
(assert (= (=> (= (= 0 x3394) x3289) (and (=> (and x3289 (and (= x3256 x3595) (= x40 x261) (= x1395 x3360))) x6679) (=> (and (not x3289) (and (<= 1 x746) (= x5442 (< (+ x863 x6159) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x5807 x3595) x863) (= x6159 (x999 128)) (= (and x5442 x3253) x4473) (= (x5807 x666) x234) (= (>= x234 x6159) x3253) (= 160 x6488) (= (x7676 x3595) x746))) (and (=> (and (and (= x4807 x1648) (= x3286 x4760) (= x8353 x8014) (= x1196 x6437) (= x826 x6194) (= x7632 x2558) (= x4445 x4936) (= x7673 x2571) (= x6141 x40) (= x5076 x3365) (= x4112 x1395) (= x7904 x2743) (= 0 x8442) (= x3595 x3545)) (not x4473)) x6801) (=> (and x4473 (and (= (+ x706 x6159) x6826) (<= x6826 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7513 x3595) x706) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6159 x706)) (<= 0 x6826) (= x4994 (= x3595 x8278)) (= x6826 x5390) (= (x5807 x666) x2976) (= x3396 (- x2976 x6159)))) (and (=> (and (and (= false x6841) (<= 1 x806) (= true x2666) (>= 127 x4784) (= (x7676 x8278) x806) (= 1341992515 x1949) (<= x4784 127) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x6782) (= x582 x666) (= x6728 36) (= false x8165)) x4994) (and (=> (and (and (= x1468 (x8452 64 x666 1)) (= (x5665 (+ x6159 x3650)) x5288) (= (x1897 x1468) x3650) (= (< x5288 x3650) x1605)) x2666) (and (=> (and (and (= false x7443) (= x1069 true)) x1605) x6201) (=> (and (not x1605) (and (= x1648 x577) (= x1196 x7822) (= 1 x633) (= x826 x8287) (= x93 x7904) (= x4021 x1395) (= x40 x3461) (= x7632 x8594) (= x3320 x2571) (= x3365 x8439) (= x5461 x4445) (= x4760 x2794) (= x3595 x2798) (= x8014 x6175))) x5915))) (=> (and (and (= false x3493) (= x1889 true)) (not x2666)) x6201))) (=> (and (not x4994) (and (= x3966 36) (= true x4672) (= x2432 false) (= x2916 1341992515) (= x7245 x666) (= x729 x3595) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x6961) (= x1279 (x7676 x729)) (<= 1 x3595) (= x5708 false) (>= x1279 1) (<= x3595 1461501637330902918203684832716283019655932542975) (<= x8572 127) (>= 127 x8572))) (and (=> (and (and (= x8014 x816) (= true x8321) (= x5545 2) (= x4760 x8234) (= x1859 x7632) (= x826 x8495) (= x846 x2571) (= x2814 x1395) (= x7103 x40) (= x1648 x3819) (= x5204 0) (= x3365 x3529) (= x3595 x337) (= x5893 x4445) (= x7904 x2398) (= x2244 x1196) (= x6122 false)) (not x4672)) x2534) (=> (and x4672 (= x4611 (= x666 x4760))) (and (=> (and (not x4611) (and (= x4760 x8234) (= x8495 x826) (= x7632 x1859) (= 2 x2113) (= x4445 x5893) (= x7103 x40) (= x1196 x2244) (= x337 x3595) (= false x6945) (= x2571 x846) (= x5204 0) (= x3529 x3365) (= x2814 x1395) (= x3819 x1648) (= x816 x8014) (= x7904 x2398) (= true x188))) x2534) (=> (and (and (<= x7904 255) (= (= 255 x7904) x1100)) x4611) (and (=> (and x1100 (and (= x8014 x816) (= x2814 x1395) (= x3365 x3529) (= x1859 x7632) (= x1648 x3819) (= 0 x5204) (= x8495 x826) (= 2 x6981) (= x2244 x1196) (= x337 x3595) (= x8234 x4760) (= x7904 x2398) (= x40 x7103) (= x2571 x846) (= false x7128) (= x7950 true) (= x4445 x5893))) x2534) (=> (and (and (= x7090 (x639 255 x4529)) (= x3202 (= 0 x8581)) (= x1009 (x8452 64 x7904 36)) (= (+ x7904 1) x4529) (= x8581 (x7553 x1009)) (= x4024 (x639 255 x4529))) (not x1100)) (and (=> (and x3202 (= x7755 (= x4024 255))) (and (=> (and (and (= (x6731 x858) x8547) (= (x8452 64 x4024 2) x858) (= x7762 (+ 1 x4024)) (= (x639 255 x7762) x8494) (= x6024 (x639 255 x7762)) (<= x8547 1461501637330902918203684832716283019655932542975) (= x2451 (= x8494 255))) (not x7755)) (and (=> x2451 x7763) (=> (and (and (<= x490 65535) (= x7988 (= x5231 255)) (= x490 (x7434 x3115)) (= (x639 255 x2791) x5231) (= x3115 (x8452 64 x8494 6)) (= x2791 (+ x8494 1)) (= (x639 255 x2791) x8022)) (not x2451)) (and (=> (and (and (= (x639 255 x8020) x7593) (= (x8452 64 x5231 2) x689) (= x1863 (= x6137 255)) (= (x639 255 x8020) x6137) (<= x2353 1461501637330902918203684832716283019655932542975) (= x2353 (x6731 x689)) (= x8020 (+ x5231 1))) (not x7988)) (and (=> (and (and (= x6824 (x639 255 x4818)) (= (x7676 x4760) x2105) (= (+ x6137 1) x4818) (= (= 0 x2105) x7525) (= x6676 (x639 255 x4818)) (= x6624 (x8452 64 x6137 36)) (= x754 128) (= (x7553 x6624) x311)) (not x1863)) (and (=> (and (and (>= 127 x2405) (= x3669 false) (= x2080 (x7676 x666)) (= x8548 false) (>= 127 x2405) (= (= x3365 x729) x2523) (= x5003 x311) (= 3812630263 x5175) (= x5813 x8547) (= x1847 132) (= x5716 x2353) (= x4095 x490) (<= x3365 1461501637330902918203684832716283019655932542975) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x3934) (<= 1 x2080)) (not x7525)) (and (=> (and (not x2523) (and (= x3427 false) (= x6978 true) (= 100 x8347))) x4748) (=> (and x2523 (= (> 100000 x311) x4345)) (and (=> (and (not x4345) (and (= x6824 x4755) (= x8120 x2571) (= x826 x5358) (= x40 x2031) (= x7423 (x6731 x858)) (= x7515 (x7553 x6624)) (= x925 x5823) (= x2009 x1701) (= (x6731 x689) x925) (= x4760 x1595) (= x3121 x4445) (= x8014 x3231) (= x7423 x5362) (= 1 x5382) (= x4812 x7515) (= x1196 x4215) (= x2009 (x7434 x3115)) (= x5916 x3365) (= 0 x33))) x5979) (=> (and x4345 (and (= true x1403) (= false x4309) (= x8347 4))) x4748))))) (=> (and x7525 (and (= x2244 x1196) (= x3365 x3529) (= x1859 x7632) (= x7103 x40) (= x8234 x4760) (= true x7551) (= x1395 x2814) (= false x4207) (= x826 x8495) (= x4445 x5893) (= x3595 x337) (= x816 x8014) (= x846 x2571) (= x2398 x7904) (= 2 x6025) (= x5204 0) (= x1648 x3819))) x2534))) (=> x1863 x7682))) (=> x7988 x3278))))) (=> x7755 x8078))) (=> (and (not x3202) (= (= x8581 1) x460)) (and (=> (and (not x460) (= x5932 (= x8581 2))) (and (=> (and (not x5932) (= x8275 (= x8581 3))) (and (=> (and (= (= x8581 4) x8288) (not x8275)) (and (=> (and x8288 (= x132 (= 255 x4024))) (and (=> (and (not x132) (and (= x6105 (x639 255 x8507)) (= (+ 1 x4024) x8507) (= x963 (= 255 x2123)) (= (x8452 64 x4024 36) x7322) (= (x639 255 x8507) x2123) (= (x7553 x7322) x8398))) (and (=> (and (and (= x5797 (x639 255 x7621)) (= (x8452 64 x2123 100) x7023) (= (= x6018 255) x8281) (= x6018 (x639 255 x7621)) (= (+ x2123 1) x7621) (= x147 (x2984 x7023))) (not x963)) (and (=> (and (not x8281) (and (= x1269 (x7594 x729)) (= true x6871) (= x4760 x8234) (= x3595 x337) (not (and x7202 x7041)) (= x2571 x846) (= x7904 x2398) (= 2 x3959) (= (x639 255 x4783) x3854) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1441 x8398)) x7041) (= x2814 x1395) (= x5204 0) (= x40 x7103) (= x3529 x3365) (= x7632 x1859) (= x8014 x816) (= x3819 x1648) (= x4783 (+ x6018 1)) (= x7099 (x8452 64 x6018 36)) (= (x7594 x4760) x1441) (= x826 x8495) (= x2244 x1196) (= x1770 false) (= (x639 255 x4783) x1281) (= (x7553 x7099) x3336) (= (<= x8398 x1269) x7202) (= x4445 x5893))) x2534) (=> x8281 x3278))) (=> x963 x7763))) (=> x132 x8078))) (=> (and (= (= 5 x8581) x4434) (not x8288)) (and (=> (and (= (= x4024 255) x3616) x4434) (and (=> x3616 x8078) (=> (and (and (= (x639 255 x208) x1943) (= x5741 (= 255 x983)) (= x3438 (x7553 x5450)) (= (+ x4024 1) x208) (= (x8452 64 x4024 36) x5450) (= x983 (x639 255 x208))) (not x3616)) (and (=> x5741 x7763) (=> (and (and (>= 65535 x5625) (= x3645 (= x6788 255)) (= x5107 (x639 255 x2537)) (= x6788 (x639 255 x2537)) (= x7014 (x8452 64 x983 6)) (= (+ 1 x983) x2537) (= (x7434 x7014) x5625)) (not x5741)) (and (=> x3645 x7682) (=> (and (not x3645) (and (>= 18446744073709551615 x518) (= (x639 255 x2478) x3513) (= x2584 (x639 255 x2478)) (= (x8015 x1321) x518) (= x5705 (x639 1 x826)) (= x6574 (x4456 (- x5705 (mod (ite (< x2504 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2504 (ite (< 0 x5705) x5024 (x639 127 x5024))) (= x6457 (< 0 x6574)) (= x5024 (x8297 x826 2)) (= (+ 1 x6788) x2478) (= x1321 (x8452 64 x6788 12)))) (and (=> (not x6457) x473) (=> (and (and (= (x639 1 x826) x6355) (= (= x6355 0) x6921)) x6457) (and (=> (and (and (and (= x7776 (> x2504 0)) (= (x3114 32 103) x7552)) (or (and (not x7776) (= 0 x4613)) (and (and (<= x2504 32) (= x4613 32) (= x4192 (x6130 x7552))) x7776))) (not x6921)) x8602) (=> (and (and (or (= x6848 0) (= x6848 32)) (= (+ x6848 292) x3009) (= x4703 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x826)) (= x6848 (* (ite (not (= 0 x2504)) 1 0) 32))) x6921) x2835))))))))))) (=> (and (not x4434) (= x8192 (= x8581 6))) (and (=> (and x8192 (= x5786 (= 255 x4024))) (and (=> (and (and (= (x639 255 x1674) x1031) (= (x639 255 x1674) x7797) (= (+ 1 x4024) x1674) (= x5755 (x7553 x8560)) (= x8560 (x8452 64 x4024 36)) (= (= x7797 255) x8277)) (not x5786)) (and (=> (and (not x8277) (and (= x2677 (x7553 x7949)) (= (+ 1 x7797) x1637) (= (x639 255 x1637) x1308) (= (x639 255 x1637) x4514) (= (= 255 x1308) x2393) (= x7949 (x8452 64 x7797 36)))) (and (=> (and (and (= (x7553 x5657) x6781) (= (x639 255 x4606) x632) (= (= x4521 255) x1057) (= (x8452 64 x1308 36) x5657) (= (+ 1 x1308) x4606) (= x4521 (x639 255 x4606))) (not x2393)) (and (=> x1057 x7682) (=> (and (and (= (= 0 x1233) x7827) (= x1289 (x8452 64 x4521 36)) (= (+ 1 x4521) x6321) (= x7158 (x7553 x1289)) (= (x639 255 x6321) x4998) (= (x7676 x4760) x1233) (= x1150 128) (= (x639 255 x6321) x6295)) (not x1057)) (and (=> (and (and (= (>= x3080 x5755) x7324) (= x1000 (x7594 x4760)) (= x3279 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5755 x1000))) (= x1486 (and x3279 x7324)) (= (x7594 x729) x3080)) (not x7827)) (and (=> (and (and (= x40 x1915) (= x722 x1395) (= x7632 x6088) (= x1346 x4760) (= x6337 0) (= x826 x5096) (= x6577 x4445) (= x6692 x8014) (= x6113 x2571) (= x532 x3365) (= x1956 x1196) (= x463 x1648) (= x4897 x4998) (= x1875 0) (= x3595 x8317)) (not x1486)) x1475) (=> (and (and (or (and x5441 (and (>= 1461501637330902918203684832716283019655932542975 x3365) (= x3518 (ite (not (= x729 x3365)) 1 0)))) (and (= x3518 (ite x5441 1 0)) (not x5441))) (and (= x8055 (- x3389 x5755)) (= x1822 false) (= x6984 x6781) (= x5441 (not (= x729 x666))) (= x2677 x7078) (= x6984 x4109) (= x2622 x7215) (< (+ x5755 x7353) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x7158 x5056) (= (x7676 x666) x1975) (<= 1 x1975) (>= x2622 0) (= x4831 x5056) (= x5962 false) (= x7353 (x7793 x4760)) (= x2622 (+ x7353 x5755)) (= x2149 x7078) (>= 127 x260) (= x2273 13123866003235860548192500634644069355060014211693331341089165407210616913920) (>= 127 x260) (= x2931 486791245) (= (x7594 x729) x3389) (= x6015 100) (<= x2622 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x1486) x4326))) (=> (and (and (= x816 x8014) (= x1648 x3819) (= x3529 x3365) (= x7904 x2398) (= x4760 x8234) (= x846 x2571) (= x7913 true) (= x2814 x1395) (= x2244 x1196) (= 0 x5204) (= x7632 x1859) (= x4445 x5893) (= x7103 x40) (= x3460 false) (= x337 x3595) (= x8495 x826) (= x1008 2)) x7827) x2534))))) (=> x2393 x3278))) (=> x8277 x7763))) (=> x5786 x8078))) (=> (and (not x8192) (= x263 (= x8581 7))) (and (=> (and (not x263) (= x3569 (= x8581 8))) (and (=> (and x3569 (= (= 255 x4024) x3388)) (and (=> (and (and (= (+ 1 x4024) x8429) (= x3102 (x7553 x7987)) (= x2526 128) (= x4704 (x7676 x4760)) (= (= 0 x4704) x1846) (= x1778 (x639 255 x8429)) (= x398 (x639 255 x8429)) (= (x8452 64 x4024 36) x7987)) (not x3388)) (and (=> (and x1846 (and (= x4445 x5893) (= x3595 x337) (= x2571 x846) (= 0 x5204) (= x40 x7103) (= x7596 false) (= x7632 x1859) (= x3529 x3365) (= x1648 x3819) (= x1196 x2244) (= x816 x8014) (= 2 x7116) (= x8495 x826) (= true x2554) (= x2814 x1395) (= x2398 x7904) (= x4760 x8234))) x2534) (=> (and (and (= x8218 35425322552009646506518338594398286811668114190755561836384294568426616127488) (= x1900 false) (= x199 (x7676 x666)) (<= 1 x199) (= 1313998243 x2498) (= x2012 (= x729 x3365)) (= 36 x5626) (<= x3365 1461501637330902918203684832716283019655932542975) (<= x1502 127) (<= x1502 127) (= x528 x3102) (= false x6354)) (not x1846)) (and (=> (and (= x5455 (< x3102 100000)) x2012) (and (=> (and (not x5455) (and (= x945 x1196) (= x6163 x40) (= x826 x4682) (= x3595 x5148) (= x6335 x4760) (= x7632 x7273) (= x3365 x4797) (= 0 x1311) (= x4722 x6739) (= (x7553 x7987) x6739) (= x5224 x1648) (= x4658 x4445) (= x8014 x7601) (= 1 x4418) (= x123 x398) (= x6853 x2571))) x8354) (=> (and (and (= true x3072) (= x4683 4) (= false x1435)) x5455) x8003))) (=> (and (not x2012) (and (= x2096 true) (= false x6976) (= x4683 100))) x8003))))) (=> x3388 x8078))) (=> (and (and (= x3595 x2284) (= x40 x5467) (= x8014 x1832) (= x553 x4024) (= x4445 x4441) (= x3365 x7900) (= x232 x2571) (= x5725 x4760) (= x1648 x5381) (= x1506 x1395) (= x826 x7417) (= x1196 x3181) (= x6327 x7632)) (not x3569)) x186))) (=> (and x263 (= (= x4024 255) x755)) (and (=> x755 x8078) (=> (and (not x755) (and (>= 1461501637330902918203684832716283019655932542975 x1717) (= (x639 255 x6902) x7915) (= (x639 255 x6902) x4250) (= (x8452 64 x4024 2) x5305) (= (= x1953 0) x1924) (= (x7676 x4760) x1953) (= x6902 (+ 1 x4024)) (= 128 x8172) (= x1717 (x6731 x5305)))) (and (=> (and (not x1924) (and (= x2261 x1717) (= x8323 (x7676 x666)) (= x6952 (= x3365 x729)) (<= x3365 1461501637330902918203684832716283019655932542975) (<= x7802 127) (= x1329 74700126319118050543342327103397598470879858733489597287354029460387927162880) (= x8463 false) (= x4793 false) (= 36 x4559) (= 2770781680 x3523) (>= 127 x7802) (>= x8323 1))) (and (=> (and (and (= x3570 false) (= x5278 true) (= 100 x1704)) (not x6952)) x7920) (=> (and x6952 (and (= x6897 (x7594 x666)) (= (> x6897 0) x1984))) (and (=> (and (not x1984) (and (= x7915 x7420) (= x4760 x86) (= x4445 x5292) (= x40 x1433) (= x826 x7699) (= x563 x2571))) x8228) (=> (and (and (= x6654 (>= x7917 x6897)) (= (x7594 x666) x7917) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6897 x8402)) x4685) (= (x7594 x1717) x8402) (= x6563 128) (= x1080 (and x4685 x6654))) x1984) (and (=> (and (not x1080) (and (= x7442 x4760) (= x3539 x40) (= x7510 x4445) (= x7915 x2799) (= x8267 0) (= x6344 x2571) (= x1224 x826) (= 0 x5317))) x3091) (=> (and (and (and (= x605 (x937 x1717)) (= (- x5329 x6897) x30) (= x5329 (x7594 x666)) (>= x7231 0) (= x7231 (+ x6897 x605)) (= (> x6905 0) x5059) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6897 x605)) (<= x7231 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4790 x7231)) (or (and x5059 (and (= x5696 x7744) (= x273 (x7195 x1717)) (= x2059 x1958) (= (<= x7008 (x181 x666)) x5836) (= x2275 x2872) (= x991 x5843) x5836 (= (= (x181 x1717) x273) x2264) (>= 4294967295 x8148) (= x7008 (x7195 x666)) x2264 (= x3339 x4752) (= x114 x439))) (and (and (= x1958 x7915) (= x439 x4445) (= x2275 x2571) (= x4752 x40) (= x991 x826) (= x7744 x4760)) (not x5059)))) x1080) x3507))))))) (=> (and (and (= x2398 x7904) (= x4445 x5893) (= x816 x8014) (= x826 x8495) (= x2244 x1196) (= 0 x5204) (= false x4193) (= x8234 x4760) (= x1648 x3819) (= x3365 x3529) (= x1859 x7632) (= x846 x2571) (= x5798 true) (= 2 x4873) (= x7103 x40) (= x3595 x337) (= x1395 x2814)) x1924) x2534))))))))))))) (=> (and x8275 (= x6433 (= 255 x4024))) (and (=> x6433 x8078) (=> (and (and (= (= 255 x2232) x1438) (= (x8452 64 x4024 36) x3270) (= x5699 (+ 1 x4024)) (= (x7553 x3270) x723) (= x2232 (x639 255 x5699)) (= x2932 (x639 255 x5699))) (not x6433)) (and (=> x1438 x7763) (=> (and (and (= x3568 (x639 255 x4171)) (= (+ x2232 1) x4171) (= x2130 (x8452 64 x2232 100)) (= x5077 128) (= x1300 (x639 255 x4171)) (= (x2984 x2130) x6918) (= (= 0 x6977) x904) (= x6977 (x7676 x4760))) (not x1438)) (and (=> (and x904 (and (= x7632 x1859) (= false x569) (= true x5177) (= x2571 x846) (= x3595 x337) (= x2398 x7904) (= 2 x2448) (= x3529 x3365) (= x1196 x2244) (= 0 x5204) (= x8234 x4760) (= x3819 x1648) (= x826 x8495) (= x7103 x40) (= x8014 x816) (= x4445 x5893) (= x1395 x2814))) x2534) (=> (and (not x904) (and (= x5691 x723) (= (= x3595 x729) x3596) (<= x5963 127) (= 68 x7725) (= false x5621) (= x3190 3957931183) (= x5691 x2906) (<= x5963 127) (= false x6969) (<= 1 x7179) (= x2807 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= x4304 x6918) (= x7179 (x7676 x666)))) (and (=> (and x3596 (and (= (x6360 x4177) x8515) (= x4177 (x8452 64 x723 11)) (<= x8515 255) (= x4158 (< 3 x8515)))) (and (=> (and (= (= x8515 1) x4493) (not x4158)) (and (=> (and (and (= x1027 128) (= x571 (+ 2 x2597)) (= (x8452 64 x723 11) x5972) (= (= x2946 0) x4642) (= (x8452 64 x723 11) x2597) (= x2946 (x7676 x666))) x4493) (and (=> (and (and (and (<= x6548 127) (= 0 x2472) (>= 127 x6548) (= false x8160) (= x4498 100) (= x413 0) (= x1472 x6993) (<= 1 x1304) (= x2964 false) (= x347 486791245) (= x5283 0) (= x8095 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= false x4259) (= (x7676 x666) x1304) (= x6993 x2906) (= 0 x354)) (or (and x4259 (and (>= 1461501637330902918203684832716283019655932542975 x3365) (= (ite (not (= x3365 x666)) 1 0) x1271))) (and (not x4259) (= (ite x4259 1 0) x1271)))) (not x4642)) x3577) (=> (and x4642 (and (= x1070 false) (= true x6612) (= x7741 0))) x7080))) (=> (and (not x4493) (and (= x7741 4) (= x7791 false) (= true x8302))) x7080))) (=> (and x4158 (and (= x4184 true) (= x7741 36) (= false x325))) x7080))) (=> (and (and (= x5789 true) (= x7741 4) (= false x1119)) (not x3596)) x7080))))))))))) (=> (and x5932 (= x435 (= 255 x4024))) (and (=> x435 x8078) (=> (and (and (= (x7434 x643) x6319) (= (= 255 x6251) x8189) (>= 65535 x6319) (= (x639 255 x1431) x5928) (= (x639 255 x1431) x6251) (= x1431 (+ x4024 1)) (= x643 (x8452 64 x4024 6))) (not x435)) (and (=> (and (and (= (x8015 x6667) x4358) (= (ite (> x7290 0) x2136 (x639 127 x2136)) x7234) (= (x8297 x826 2) x2136) (= x131 (x639 255 x5839)) (= (x639 1 x826) x7290) (= x6667 (x8452 64 x6251 12)) (= x6312 (> x2860 0)) (= (x639 255 x5839) x7739) (= (x4456 (- x7290 (mod (ite (> 32 x7234) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2860) (>= 18446744073709551615 x4358) (= x5839 (+ x6251 1))) (not x8189)) (and (=> (not x6312) x5684) (=> (and x6312 (and (= x6019 (x639 1 x826)) (= x5878 (= x6019 0)))) (and (=> (and (not x5878) (and (and (= x7075 (< 0 x7234)) (= (x3114 32 103) x7724)) (or (and (= x6687 0) (not x7075)) (and x7075 (and (= 32 x6687) (= x6275 (x6130 x7724)) (>= 32 x7234)))))) x630) (=> (and x5878 (and (= (+ x6369 292) x5239) (= (* (ite (not (= x7234 0)) 1 0) 32) x6369) (or (= 32 x6369) (= 0 x6369)) (= x3362 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x826)))) x7959))))) (=> x8189 x3278))))))) (=> (and (= (= 255 x4024) x915) x460) (and (=> x915 x8078) (=> (and (not x915) (and (= (x639 255 x7050) x6513) (= x8607 (x639 255 x7050)) (= (x7434 x2230) x6260) (= x7050 (+ x4024 1)) (= x2230 (x8452 64 x4024 6)) (= x7481 (= 255 x8607)) (<= x6260 65535))) (and (=> x7481 x3278) (=> (and (and (= x4990 (x639 255 x573)) (= x7188 (ite (< 0 x5734) x4640 (x639 127 x4640))) (= (x8297 x826 2) x4640) (= (x639 1 x826) x5734) (= (+ x8607 1) x573) (= x6396 (x4456 (- x5734 (mod (ite (> 32 x7188) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3341 (< 0 x6396)) (= (x639 255 x573) x5497) (= (x8015 x6073) x3712) (= x6073 (x8452 64 x8607 12)) (<= x3712 18446744073709551615)) (not x7481)) (and (=> (not x3341) x5684) (=> (and x3341 (and (= x2464 (x639 1 x826)) (= x4506 (= 0 x2464)))) (and (=> (and (not x4506) (and (or (and (not x346) (= x7991 0)) (and x346 (and (>= 32 x7188) (= (x6130 x2841) x8111) (= x7991 32)))) (and (= x2841 (x3114 32 103)) (= (> x7188 0) x346)))) x2852) (=> (and x4506 (and (= (* (ite (not (= 0 x7188)) 1 0) 32) x2277) (= x7394 (+ x2277 292)) (or (= x2277 0) (= x2277 32)) (= x3946 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x826)))) x244))))))))))))))))))))))))) x7205))
(assert (< 10000 (x3114 x8276 x7070)))
(assert (x4101 x2787))
(assert (x4101 x385))
(assert (x4101 x5667))
(assert (< 10000 (x5018 x3728 x7647 x2836 x4072 x2598)))
(assert (= x8235 (and x6235 x1310)))
(assert (x4101 x2439))
(assert (= x2493 (x4519 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393))))
(assert (x4101 x6736))
(assert (x4101 x6301))
(assert (= (x3391 (+ 1 x8416)) (x3391 x8416)))
(assert (x4101 x5139))
(assert (= (x3391 (x8452 x5456 x7626 x2592)) (x8452 x5456 x7626 x2592)))
(assert (= x719 (x6212 (x658 x3485 x166 x719 x2339))))
(assert (=> (<= x3252 10000) (= (x3391 x3252) 0)))
(assert (x8137 x1610))
(assert (not (x2674 (x658 x954 x8553 x4050 x8396))))
(assert (x4101 x6664))
(assert (= x3581 x6648))
(assert (x4101 x3210))
(assert (x4101 x3529))
(assert (< 10000 (x8452 x3728 x6829 x267)))
(assert (x4101 x7290))
(assert (x4101 x4603))
(assert (x4101 x3365))
(assert (=> (<= x254 10000) (= 0 (x3391 x254))))
(assert (x4101 x3802))
(assert (x4101 x7358))
(assert (x2371 x6324))
(assert (= (and (not x4764) x2594) x2693))
(assert (=> (<= x3182 10000) (= (x3391 x3182) 0)))
(assert (x4101 x1968))
(assert (x4101 x2095))
(assert (x4101 x1588))
(assert (x4101 x4742))
(assert (= (x658 x6609 x5108 x6949 x5158) (x3391 (x658 x6609 x5108 x6949 x5158))))
(assert (= (and x3881 x6312) x6182))
(assert (= (x3391 (x3114 x2493 x4089)) (x3114 x2493 x4089)))
(assert (not (x2674 (x8452 x5456 x7626 x2592))))
(assert (= x879 (and x3884 x3484)))
(assert (x4101 x8414))
(assert (= x3422 (x6140 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865))))
(assert (x4101 x3928))
(assert (x4101 x2899))
(assert (= x430 (and x6786 (not x1776))))
(assert (x4101 x6535))
(assert (x2371 (ite (not (= x7188 0)) 1 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x2743 36)))
(assert (x4101 x5687))
(assert (= 0 (x3391 100000)))
(assert (x4101 x438))
(assert (= x136 (x5740 (x6207 x3485 x136 x3977 x352 x6346 x7911))))
(assert (x4101 x7259))
(assert (x4101 x8356))
(assert (x4101 x5629))
(assert (x4101 x4732))
(assert (= (=> (and (= x846 x1222) (= x612 x2244) (= x8495 x8136) (= x867 x3819) (= x3529 x2831) (= x2398 x4952) (= x5893 x121) (= x1145 x2814) (= x337 x2846) (= 1 x5204) (= x3132 x1859) (= x7103 x300) (= x816 x6996) (= x1677 x8234)) x2534) x6748))
(assert (= x4567 (x4519 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239))))
(assert (= (x3391 (x6207 x3728 x6176 x1012 x365 x1345 x6842)) (x6207 x3728 x6176 x1012 x365 x1345 x6842)))
(assert (not (x2674 (x3114 x6256 x2579))))
(assert (x4101 x1462))
(assert (> (x8452 64 x66 36) 10000))
(assert (x4101 x1420))
(assert (x4101 x7354))
(assert (x4101 x4258))
(assert (= (and x453 x1499) x5124))
(assert (x4101 x7436))
(assert (=> (<= x4089 10000) (= (x3391 x4089) 0)))
(assert (x4101 x2260))
(assert (< (x658 x6655 x1562 x2988 x4015) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4057 (+ 31 x6338)))
(assert (= (x3391 (x5018 x954 x8198 x1612 x6014 x4062)) (x5018 x954 x8198 x1612 x6014 x4062)))
(assert (x4101 x6954))
(assert (x4101 x6025))
(assert (= (x6212 (x5018 x2493 x6149 x1732 x3117 x8016)) x1732))
(assert (x4101 x3548))
(assert (x4101 x5516))
(assert (=> (>= 10000 x1634) (= (x3391 x1634) 0)))
(assert (x4101 x7360))
(assert (x4101 x4208))
(assert (x4101 x1059))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4521 36)))
(assert (x4101 x1634))
(assert (=> (>= 10000 x1042) (= 0 (x3391 x1042))))
(assert (x5391 x7087))
(assert (= (x3391 (x8452 x8105 x3148 x7367)) (x8452 x8105 x3148 x7367)))
(assert (= (=> (and (= x1859 x7632) (= x832 true) (= x3529 x3365) (= x2571 x846) (= x2244 x1196) (= x816 x8014) (= x1395 x2814) (= x4760 x8234) (= x1648 x3819) (= x410 false) (= x5204 0) (= x40 x7103) (= x5893 x4445) (= x337 x3595) (= x2274 2) (= x7904 x2398) (= x826 x8495)) x2534) x473))
(assert (=> (<= x567 10000) (= (x3391 x567) 0)))
(assert (x4101 x3126))
(assert (x4101 x2013))
(assert (x4101 x5545))
(assert (= x8098 (and (not x4176) x6440)))
(assert (< (x5018 x2493 x6149 x1732 x3117 x8016) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x2688))
(assert (x5528 x2136))
(assert (x3760 x1086 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x6160))
(assert (= (x3391 (x8452 x1404 x549 x1883)) (x8452 x1404 x549 x1883)))
(assert (= (and x2412 x6930) x76))
(assert (= (=> (and (= x7973 x7526) (= x7178 x8359) (= x8309 x3365) (= x1892 x7632) (= x4213 x8014) (= x2908 0) (= x8199 x5568) (= x220 x4999) (= x1395 x8070) (= x1620 x5870) (= x1196 x2695) (= x2581 x3595) (= x475 1) (= x2025 x7165) (= x4422 x1648)) x1170) x8131))
(assert (= (=> (and (= 2 x5282) (= x7632 x3504) (= x6296 x3365) (= x394 x4445) (= x2420 (x639 255 x4171)) (= x1648 x7789) (= x1196 x5526) (= x826 x8005) (= 0 x4938) (= x1395 x2847) (= x7517 x2420) (= x2571 x5555) (= x1740 x4760) (= x5075 x8014) (= x8601 x40) (= x7741 x4775) (= x4400 x3595)) x8182) x7080))
(assert (> (x8452 x7301 x8339 x60) 10000))
(assert (= (x6212 (x8452 64 1 x7211)) x7211))
(assert (> (x8452 64 x2677 11) 10000))
(assert (= (and x3827 (not x1223)) x5312))
(assert (x4101 x5289))
(assert (x4101 x6998))
(assert (= (=> (= (+ x2176 x5051) x838) x4702) x1720))
(assert (x4101 x3082))
(assert (= x4615 (and x5844 x4535)))
(assert (=> (>= 10000 x3754) (= (x3391 x3754) 0)))
(assert (x4101 x7911))
(assert (x4101 x353))
(assert (x4101 x3651))
(assert (= (and x607 x201) x8456))
(assert (= (x4519 (x6207 x6256 x690 x1813 x3211 x2826 x8101)) x6256))
(assert (x725 x7087))
(assert (=> (>= 10000 x5325) (= 0 (x3391 x5325))))
(assert (x4101 x5713))
(assert (= (and x5059 x1248) x8348))
(assert (x725 x4640))
(assert (< 10000 (x6207 x8236 x5618 x2344 x5489 x7255 x1096)))
(assert (x4101 x4364))
(assert (= (=> (and (= x3408 true) (= x8491 false) (= x7200 0)) x8176) x3918))
(assert (= 64 (x4519 (x8452 64 x666 1))))
(assert (x4101 x6163))
(assert (x4101 x1282))
(assert (= x5500 (or x7826 x440)))
(assert (x2496 x4001))
(assert (x2496 x4559))
(assert (x4101 x3633))
(assert (= (x8452 64 x2041 36) (x3391 (x8452 64 x2041 36))))
(assert (= (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (= (x8370 (x4002 x2493 x7469 x2837 x7317 x613 x5439 x3943 x3665)) x5439))
(assert (=> (>= 10000 x4380) (= (x3391 x4380) 0)))
(assert (= (and x118 (not x904)) x6061))
(assert (= x1528 (x5740 (x8452 64 x1528 36))))
(assert (= (or x3018 x1287) x1234))
(assert (not (x2674 (x658 x6256 x7745 x8380 x6390))))
(assert (= (and (not x5441) x5923) x8437))
(assert (not (x2674 (x8452 x7483 x8282 x5639))))
(assert (=> (<= x6889 10000) (= (x3391 x6889) 0)))
(assert (= (and (not x7711) x1989) x7450))
(assert (x4101 x3392))
(assert (= 64 (x4519 (x8452 64 x4417 36))))
(assert (x4101 x1820))
(assert (=> (<= x8315 10000) (= (x3391 x8315) 0)))
(assert (not (x2674 (x5018 x6256 x112 x2259 x6535 x7432))))
(assert (x4101 x6802))
(assert (x4101 x3920))
(assert (= x6512 (x842 (x5018 x7301 x6276 x3370 x6512 x4475))))
(assert (x2371 (ite (not (= 0 x8177)) 1 0)))
(assert (= (and x4975 x2224) x145))
(assert (= (or (and x5062 x3489) (and x6203 x4243)) x2415))
(assert (> (x5018 x8276 x2797 x2069 x4860 x7334) 10000))
(assert (= 64 (x4519 (x8452 64 x2123 100))))
(assert (= (and (not x2548) x6225) x246))
(assert (not (x2674 (x8452 64 x4084 12))))
(assert (= (=> (= (+ x7235 x6860) x192) x8395) x5889))
(assert (x4101 x7505))
(assert (x4101 x7042))
(assert (= (x3391 (+ x1014 1)) (x3391 x1014)))
(assert (x3760 x2773 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x6028))
(assert (x4101 x7528))
(assert (x4101 x8429))
(assert (x4101 x8439))
(assert (=> (>= 10000 x285) (= (x3391 x285) 0)))
(assert (x4101 x6316))
(assert (x4101 x940))
(assert (< (x5018 x6655 x7778 x3104 x3601 x1789) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x725 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (>= 10000 x6601) (= (x3391 x6601) 0)))
(assert (x4101 x7218))
(assert (x4101 x6729))
(assert (= (=> (and (or (not x2935) (and x2935 (and (and (= (< 32 x210) x1381) (= (x1134 x4088) x2762)) (or (not x1381) (and x1381 (and (or (not x6048) (and x6048 (and (or (and (and (= x1357 (x5665 (+ x1609 96))) (>= 128 x210) (= x3982 (x5665 (+ x4088 96))) (= (x8385 x3982) x6486)) x2257) (not x2257)) (and (= (x5665 (+ 64 x4088)) x2289) (= (< 96 x210) x2257) (= x5905 (x7298 x2289)) (= (x5665 (+ x1609 64)) x1427))))) (and (= (x5665 (+ 32 x1609)) x3356) (= x6421 (x5665 (+ 32 x4088))) (= x2590 (x3903 x6421)) (= (> x210 64) x6048)))))))) (and (= x1035 (x5665 (+ 32 x5542))) (= x2935 (< 0 x210)) (= (x5665 (+ x6392 x5787)) x8188) (= x8246 (x5665 (+ 31 x3439))) (= (x6042 x23) x210) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8246) x6392) (= (x5665 (+ x5787 x3439)) x5678) (= (x5665 (+ 32 x8188)) x1609) (= (x5665 (+ x1035 32)) x5268) (= x5115 (x4456 (- x8188 x5139))))) x7527) x5222))
(assert (= (and x4464 (not x460)) x6077))
(assert (= (and x1803 x24) x1324))
(assert (= (x6212 (x5018 x8066 x5753 x4487 x1987 x5269)) x4487))
(assert (= x6750 (=> (and (or (and x4003 (and (= x3722 x3623) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x158 x1553)) (= x3758 x6076) (= (x2589 x1618) x8171) (= x7788 x6422) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7788) (= x2714 x7479) (= x8187 x6397) (= x1547 x7254) (= (ite (= x6397 0) x5309 0) x158) (= x2196 x5057) (= x714 x7561) (= x5810 x2545) (= x5129 x5796) (= x7788 (+ x1553 x158)) (<= 0 x7788) (= (- x8171 x158) x1894) (= x5872 x2680) (= x4461 x3120) (= x3682 x5120) (= x2942 x4507) (= x7227 x5790) (= x1553 (x1519 x666)))) (and (and (= x3120 x4461) (= x4507 x2942) (= x5796 x5129) (= x1547 x7254) (= x3722 x3623) (= x5872 x2680) (= x3682 x5120) (= x8187 x6397) (= x2545 x5810) (= x6076 x3758) (= x714 x7561) (= x7479 x2714) (= x5790 x7227) (= x2196 x5057)) (not x4003))) (= x4003 (= x6397 0))) x6982)))
(assert (x4101 x6916))
(assert (x4101 x1404))
(assert (= x8231 (x5740 (x5018 x1404 x8231 x7521 x8002 x408))))
(assert (= x7740 (x5740 (x3114 x5857 x7740))))
(assert (x4101 x5024))
(assert (= (x6212 (x5018 x4567 x7844 x3878 x6416 x1409)) x3878))
(assert (x5189 x1054 32))
(assert (= x7655 (and x6053 x4808)))
(assert (=> (<= x6518 10000) (= 0 (x3391 x6518))))
(assert (= x1612 (x6212 (x5018 x954 x8198 x1612 x6014 x4062))))
(assert (= (or x145 (and x2224 (not x4975))) x437))
(assert (= (x8370 (x6207 x8105 x941 x8457 x6689 x1263 x3972)) x3972))
(assert (x4101 x5779))
(assert (= x2319 (and x5196 x3648)))
(assert (x4101 x4753))
(assert (= (=> (= x6278 (> x7947 0)) (and (=> (and x6278 (and (or (not x5247) (and (and (and (= (> x3439 32) x301) (= x7505 (x7535 x3116))) (or (not x301) (and x301 (and (and (= x7849 (< 64 x3439)) (= (x15 x7388) x4660) (= x6371 (x5665 (+ 32 x5787))) (= x7388 (x5665 (+ x3116 32)))) (or (not x7849) (and x7849 (and (or (and (and (= (x5665 (+ x5787 96)) x8048) (>= 128 x3439) (= (x8335 x3466) x1425) (= (x5665 (+ x3116 96)) x3466)) x2358) (not x2358)) (and (= x3549 (x8190 x6606)) (= x654 (x5665 (+ 64 x5787))) (= (> x3439 96) x2358) (= x6606 (x5665 (+ 64 x3116))))))))))) x5247)) (and (= x5139 (x5665 (+ x1708 36))) (= (x5665 (+ x5139 32)) x5542) (= x3644 (x8297 x3738 32)) (= x7348 (x5665 (+ x3794 32))) (= x23 (x5665 (+ x7348 x494))) (= x1708 (x5665 (+ x5250 x23))) (= x4420 (x5665 (+ 128 x5139))) (= (x8297 x4676 32) x4255) (< x494 x23) (= (x5665 (+ x4758 31)) x3738) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x23) (= (x5665 (+ x23 32)) x4088) (= x5787 (x5665 (+ 32 x4420))) (= x3116 (x5665 (+ x494 32))) (<= x494 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x494) (= (* x4255 32) x3794) (= x5250 (x5665 (+ 32 x5571))) (= x2752 (x5665 (+ x4758 x4088))) (= (* 32 x3644) x5571) (>= x1708 2) (= (x5665 (+ x6609 x3116)) x6166) (= x5247 (> x3439 0)) (> x1708 x23) (= (x7780 x494) x3439) (<= x494 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x4676 (x5665 (+ x6609 31))) (= 150 x8090) (<= 1 x23)))) x5222) (=> (and (not x6278) (and (= false x2516) (= x2533 132) (= (x5665 (+ 4 x494)) x4196) (= x2229 (x5665 (+ x4196 32))) (= (x5665 (+ 32 x2229)) x647) (= x810 true) (= x6702 (x5665 (+ x647 32))))) x5581))) x3915))
(assert (=> (>= 10000 x8438) (= 0 (x3391 x8438))))
(assert (= (or x6104 x6284) x7656))
(assert (> (x8452 64 x5128 12) 10000))
(assert (=> (<= x1109 10000) (= (x3391 x1109) 0)))
(assert (= (=> (and (= x6764 x3834) (= 2 x4865) (= x2394 true) (= x7706 0) (= x4621 x4198) (= x3610 x127) (= x4765 x2736) (= x1385 x5496) (= (x639 255 x6321) x4621) (= x4714 x5935) (= x6069 x5731) (= x8389 false) (= x5113 x3965) (= x5847 x7818) (= x5453 x6047) (= x2413 x1341) (= x6859 x6103) (= x5 x7838)) x7448) x7220))
(assert (x4101 x8097))
(assert (> (x5018 x7301 x6276 x3370 x6512 x4475) 10000))
(assert (x4101 x8426))
(assert (x4101 x6687))
(assert (= 36 (x6212 (x8452 64 x7797 36))))
(assert (x2371 (ite (not (= 0 x3510)) 1 0)))
(assert (x4101 x1649))
(assert (x4101 x4590))
(assert (= (and x1144 x7113) x1255))
(assert (x4101 x4097))
(assert (x4101 x4096))
(assert (= 2 (x6212 (x8452 64 x666 2))))
(assert (x4101 x3883))
(assert (= x2867 (and x4635 x1377)))
(assert (=> (>= 10000 x7528) (= 0 (x3391 x7528))))
(assert (= x1760 x8131))
(assert (x3760 x5072 128))
(assert (x3760 x5273 256))
(assert (x4101 x8304))
(assert (not (x2674 (x8452 64 x4807 4))))
(assert (x4101 x3519))
(assert (x4101 x6324))
(assert (x4101 x7745))
(assert (x4101 x8171))
(assert (< 10000 (x3114 x8105 x4237)))
(assert (= x4701 (or x5444 x1555)))
(assert (=> (<= x1530 10000) (= 0 (x3391 x1530))))
(assert (x25 256 x7492))
(assert (x4101 x5696))
(assert (= (x4519 (x658 x8247 x335 x6736 x939)) x8247))
(assert (= (=> (and (= (ite (< 0 x7757) x384 (x639 127 x384)) x4200) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x6301) (= x5257 (x8452 64 x2677 11)) (<= x6301 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x5728 (x7845 x3154)) (= x384 (x8297 x7921 2)) (= (x5665 (+ 32 x7461)) x8344) (= x4987 (x5665 (+ x8344 32))) (or (>= x6301 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x6301) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x6301)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x6301)) (= (+ 2 x2896) x3154) (= x7461 (x5665 (+ 32 x6301))) (= x4919 (x8452 64 x2677 11)) (= x3100 (> x5182 0)) (= (x8452 64 x1648 3) x8158) (< x6301 x4987) (= (+ x4919 1) x3157) (= x4126 (x4456 (- x4987 x6301))) (= (x4456 (- x2477 x4987)) x6926) (= x5952 (x5665 (+ 2 x1244))) (= x5182 (x4456 (- x7757 (mod (ite (> 32 x4200) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x6706 0) (= (x639 1 x7921) x7757) (= (x621 x3157) x7013) (= (x4456 (- x6926 32)) x7422) (or (<= x6301 115792089237316195423570985008687907853269984665640564039457584007913129639773) (and (>= x6301 115792089237316195423570985008687907853269984665640564039457584007913129639776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x6301)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x6301)) (= (x8452 64 x2677 11) x2896) (< x4987 x2477) (= (x4456 (- x4126 32)) x2348) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x6301) (= (x4426 x8158) x7921) (= x2477 (x5665 (+ x5952 32))) (= x1244 (x5665 (+ x4987 32))) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x6301) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x6301) (>= x6301 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x6301))) (and (=> (and x3100 (and (<= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x8297 (+ 31 x4200) 32) x4159) (= x1048 (x5665 (+ x2477 (mod (+ 32 x5985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x5665 (+ x2477 32)) x7861) (< x2477 x1048) (= x2548 (= x4200 0)) (= x5985 (* 32 x4159)) (>= x1048 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2477) (<= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (and (=> (and (not x2548) (= x1961 (< 31 x4200))) (and (=> (and (and (= x5340 (x8297 x3302 256)) (= (x4426 x8158) x3302) (= x5367 (* 256 x5340))) (not x1961)) x8204) (=> (and (and (or (not x6816) (and x6816 (and (= x6133 (x5665 (+ 32 x5766))) (= x357 (x2637 x8470)) (not (> x243 x6133))))) (and (= (x3114 32 x8158) x8416) (= x6460 (x2637 x8416)) (= (x5665 (+ x7861 x4200)) x243) (= x6816 (< x5766 x243)) (= (+ 1 x8416) x8470) (= x5766 (x5665 (+ 32 x7861))))) x1961) x1764))) (=> x2548 x8204))) (=> (and (and (= false x539) (= true x2884) (= 36 x5253)) (not x3100)) x959))) x5547))
(assert (x4101 x123))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x1404 x549 x1883)))
(assert (= (x6212 (x5018 x6609 x6555 x8300 x3110 x7629)) x8300))
(assert (= (and x5784 (not x5741)) x5663))
(assert (x4101 x7590))
(assert (x4101 x857))
(assert (x4101 x8405))
(assert (= x1663 (or x130 x3506)))
(assert (x725 x7921))
(assert (= (x6212 (x658 x3728 x4680 x8449 x7889)) x8449))
(assert (= x7192 (x6212 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832))))
(assert (x4101 x5496))
(assert (x5391 x5863))
(assert (= (and (not x5495) x3219) x1124))
(assert (= x2090 (not (and (= x4996 0) (= x2851 false) (= 0 x140) (= x3216 false) (= false x1942) (= x4863 0) (= (x4448 128) x245) (= false x2186) (= x8424 true) (= false x2784) (= true x1860) (= 0 x245) (= true x1445) (= x7203 true) (= false x8377) (= 0 x5163) (= false x2722) (= 0 x7796) (= x7659 true) (= x6244 true) (= 0 x6432) (= x732 false)))))
(assert (=> (>= 10000 x3792) (= (x3391 x3792) 0)))
(assert (x2496 x6714))
(assert (x4101 x6421))
(assert (= x5672 (x842 (x6207 x7301 x481 x345 x5672 x4986 x5616))))
(assert (x4101 x6513))
(assert (x4101 x5912))
(assert (= (or (and x4744 x7481) (and x8281 x6262) (and x4971 x2393) (and x8189 x7356) (and x4995 x7988)) x4724))
(assert (x4101 x3933))
(assert (< 10000 (x8452 64 x4521 36)))
(assert (x4101 x7573))
(assert (x4101 x719))
(assert (x8137 x8020))
(assert (=> (>= 10000 x6998) (= 0 (x3391 x6998))))
(assert (x4101 x3404))
(assert (= x6461 (x4955 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828))))
(assert (x4101 x134))
(assert (x4101 x5340))
(assert (=> (<= x3276 10000) (= (x3391 x3276) 0)))
(assert (= (and x4869 x5977) x5880))
(assert (x4101 x1618))
(assert (x5391 x209))
(assert (= (and x2893 x6603) x8481))
(assert (= (x5740 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708)) x2040))
(assert (= x458 (and x8129 x4733)))
(assert (= x6694 (and x7027 (not x307))))
(assert (x4101 x799))
(assert (not (x2674 (x5018 x2327 x4522 x2439 x7183 x8482))))
(assert (= (x3391 (x3114 x8105 x4237)) (x3114 x8105 x4237)))
(assert (< (x8452 64 1 x3502) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3717 (or (and x1223 x3827) (and x7144 x6537) (and x64 x7998) (and x4398 x388) (and x2559 x310) (and x5261 x7364) (and x339 x8484) (and x3494 x1446) (and x5659 x182))))
(assert (x4101 x3287))
(assert (=> (>= 10000 x4447) (= (x3391 x4447) 0)))
(assert (= (x5740 (x5018 x5456 x3051 x6313 x5806 x1348)) x3051))
(assert (= x2524 (and (not x4345) x3142)))
(assert (x4101 x1292))
(assert (= (and x3927 x4942) x8373))
(assert (x4101 x2391))
(assert (x4101 x2236))
(assert (x4101 x5946))
(assert (= 64 (x4519 (x8452 64 1 x7211))))
(assert (= (and (not x5156) x1988) x3913))
(assert (x4101 x1547))
(assert (x4101 x1110))
(assert (= (and x7559 (not x107)) x2692))
(assert (= (x6212 (x8452 64 1 x3502)) x3502))
(assert (x4101 x6686))
(assert (= (and x3006 x8324) x3411))
(assert (x4101 x2879))
(assert (= (x3391 35477284059277649309253622239531857712935939630608236286772267603529442882419) 0))
(assert (not (x2674 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345))))
(assert (x4101 x3437))
(assert (=> (>= 10000 x5130) (= 0 (x3391 x5130))))
(assert (x4101 x1932))
(assert (x4101 x2625))
(assert (= (and x8197 (not x4599)) x2742))
(assert (x4101 x128))
(assert (x4101 x8132))
(assert (x4101 x4912))
(assert (=> (<= x5440 10000) (= (x3391 x5440) 0)))
(assert (= x308 (or x2975 (and x3935 x4589))))
(assert (= (or x1415 x5704) x3012))
(assert (x4101 x4072))
(assert (x4910 x7673))
(assert (not (x2674 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (x4101 x6343))
(assert (= x7920 (=> (and (= x3365 x6711) (= x785 0) (= (x639 255 x6902) x5959) (= x1395 x6772) (= x4576 x40) (= x7946 x7632) (= x3595 x7925) (= x826 x5876) (= x7349 x1648) (= x1309 x1196) (= x1704 x7577) (= x6428 x5959) (= x4539 2) (= x120 x8014) (= x1038 x4760) (= x2571 x6666) (= x7333 x4445)) x6571)))
(assert (= (x6212 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961)) x3025))
(assert (= x4568 (and (not x1205) x4882)))
(assert (= (=> (and (and (= (= x6609 x4451) x24) (= (x5394 128) x4451)) (or (and (= (ite x24 1 0) x7441) (not x24)) (and (and (= x5465 (x5394 128)) (= (ite (> x5465 0) 1 0) x7441)) x24))) x5173) x8260))
(assert (= (and (not x7891) x2184) x3949))
(assert (= x2575 (x842 (x6207 x7483 x4415 x1668 x2575 x5720 x7858))))
(assert (< (x8452 x6655 x5638 x3262) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1724 (=> (= x1688 (= x5032 0)) (and (=> (and (and (= x3545 x4512) (= x7436 2) (= x6141 x8357) (= 0 x7573) (= false x3606) (= x4112 x6049) (= true x7093) (= x5477 x7614)) x1688) x2843) (=> (and (not x1688) (and (= x1151 x3955) (= x2902 x8161) (= x622 x7382) (= x7063 x8289))) x8538)))))
(assert (= (x8452 64 x6260 7) (x3391 (x8452 64 x6260 7))))
(assert (x4101 x7138))
(assert (= (x3391 (x8452 64 x4417 2)) (x8452 64 x4417 2)))
(assert (= (and x4151 (not x1872)) x1992))
(assert (x4101 x6944))
(assert (x4101 x2493))
(assert (= x5174 (x6212 (x5018 x3485 x4823 x5174 x8145 x7574))))
(assert (x4101 x1360))
(assert (not (x2674 (x3114 x2327 x7905))))
(assert (x4101 x3182))
(assert (x4101 x7832))
(assert (x25 32 x642))
(assert (= x5136 (and x7675 (not x2400))))
(assert (x4910 x2650))
(assert (x4101 x2733))
(assert (x4101 x6049))
(assert (< 10000 (x658 x5857 x2673 x2267 x6794)))
(assert (= (x3391 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153)) (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153)))
(assert (x3760 x2585 32))
(assert (x5391 x384))
(assert (x4101 x1592))
(assert (= (x6212 (x8452 64 x5128 12)) 12))
(assert (x4101 x3902))
(assert (= (or (and x3327 x7859) (and x8106 x4280)) x1225))
(assert (x2496 x1875))
(assert (x4101 x4980))
(assert (x4101 x6149))
(assert (x4101 x4915))
(assert (= (and x271 x381) x64))
(assert (= (x3391 (x8452 x8247 x1044 x6011)) (x8452 x8247 x1044 x6011)))
(assert (= (and x7636 x8313) x7025))
(assert (x4101 x1562))
(assert (= (and (not x2761) x7160) x1731))
(assert (< (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1959 x7028) x1977))
(assert (x2496 x3695))
(assert (= (and x5066 x887) x4070))
(assert (x5189 x5485 32))
(assert (= (and (not x3054) x8459) x3701))
(assert (= (x8452 64 x2824 2) (x3391 (x8452 64 x2824 2))))
(assert (x4101 x1434))
(assert (= x402 (=> (and (= (= 0 x3076) x1322) (or (not x1322) x1322)) x1509)))
(assert (x4101 x679))
(assert (x4101 x7166))
(assert (x4101 x3181))
(assert (= (x5740 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551)) x2409))
(assert (x4101 x3276))
(assert (= (x6140 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825)) x5825))
(assert (x4101 x8393))
(assert (= x3585 (x4955 (x5018 x7483 x7258 x567 x3375 x3585))))
(assert (x5391 x8135))
(assert (x4101 x3255))
(assert (x4101 x5524))
(assert (= (and x6439 x2827) x6537))
(assert (= (and x4363 x180) x3494))
(assert (= x7427 (and (not x1669) x4129)))
(assert (x4910 x6194))
(assert (x4101 x1915))
(assert (x4101 x1667))
(assert (= (x6212 (x8452 x3485 x5701 x2008)) x2008))
(assert (x4101 x4013))
(assert (= (x3391 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (x4101 x3008))
(assert (x4101 x1625))
(assert (not (x2674 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075))))
(assert (x4101 x4056))
(assert (= (x5740 (x5018 x6256 x112 x2259 x6535 x7432)) x112))
(assert (= x5214 (or x8023 x1515)))
(assert (=> (<= x5625 10000) (= (x3391 x5625) 0)))
(assert (x4101 x7691))
(assert (x4101 x299))
(assert (x4101 x6054))
(assert (x4101 x2752))
(assert (x4101 x234))
(assert (= (x6212 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336)) x6889))
(assert (x4101 x3553))
(assert (x4101 x7973))
(assert (< (x8452 x8105 x3148 x7367) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4519 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817)) x5456))
(assert (x4101 x5982))
(assert (x5391 x4261))
(assert (= (and x1851 x1700) x2160))
(assert (x4101 x214))
(assert (x3481 x4538))
(assert (= x2308 (x4955 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717))))
(assert (=> (<= x134 10000) (= (x3391 x134) 0)))
(assert (x4101 x5038))
(assert (x4101 x8334))
(assert (x4101 x5879))
(assert (x4101 x5184))
(assert (= (and (not x4303) x4670) x759))
(assert (= (and x3442 x7410) x4877))
(assert (x4101 x6717))
(assert (x4101 x5112))
(assert (< (x5018 x954 x8198 x1612 x6014 x4062) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x6290 x3561) x8142))
(assert (x4101 x245))
(assert (= x6794 (x842 (x658 x5857 x2673 x2267 x6794))))
(assert (= (x5740 (x8452 64 x5231 2)) x5231))
(assert (= (x3391 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707)) (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707)))
(assert (=> (>= 10000 x6760) (= 0 (x3391 x6760))))
(assert (= x4761 (and x5332 x3569)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x6260 7)))
(assert (x4101 x1274))
(assert (x4101 x4807))
(assert (x4101 x5445))
(assert (x25 32 x2220))
(assert (= x6847 (and x5087 x1517)))
(assert (= (or x3906 x8272) x6560))
(assert (=> (<= x833 10000) (= (x3391 x833) 0)))
(assert (= x4710 (and (not x3645) x5663)))
(assert (x4101 x6808))
(assert (x4101 x6946))
(assert (= (and x4233 (not x6816)) x5466))
(assert (= x7951 (or x5202 x4102)))
(assert (x4101 x5796))
(assert (=> (<= x557 10000) (= (x3391 x557) 0)))
(assert (x4101 x7773))
(assert (> (x5018 x7483 x7258 x567 x3375 x3585) 10000))
(assert (= (and x2399 x7295) x881))
(assert (= (and (not x7122) x4968) x3006))
(assert (x4101 x5094))
(assert (x4101 x224))
(assert (x4101 x2953))
(assert (x4101 x983))
(assert (= (x4519 (x8452 64 x1526 10)) 64))
(assert (x4101 x6351))
(assert (x4101 x6790))
(assert (x4101 x7563))
(assert (x5391 x7874))
(assert (x4101 x1698))
(assert (x4101 x59))
(assert (x3760 x1294 32))
(assert (= (=> (and (<= x5840 1461501637330902918203684832716283019655932542975) x2777 (= x1206 0) (>= 1461501637330902918203684832716283019655932542975 x8278) (= x1388 (>= x7428 x7484)) (<= 0 x6746) (<= 1 x740) (>= 1461501637330902918203684832716283019655932542975 x8315) (= (< 0 (x7676 x8315)) x2777) x4630 (= x8271 x1526) (<= x7907 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x7907 0) (= (x5533 x5969) x7428) (>= 1461501637330902918203684832716283019655932542975 x6746) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4917) (>= x666 1) (<= 0 x5010) (<= 0 x1814) (= x6658 x8315) (>= x3812 0) (<= 0 x1839) x1186 (>= 1461501637330902918203684832716283019655932542975 x740) (<= x5010 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4630 (> (x7676 x729) 0)) (<= 1 x8315) (>= x7484 0) (<= x7484 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4861 0) (= (> (x7676 x8278) 0) x1186) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1814) (>= x6658 1) (not (= x8278 x666)) (not (= x729 x8315)) (>= 1461501637330902918203684832716283019655932542975 x4861) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3812) (>= x4917 0) (not (= x8315 x8278)) (<= 1 x729) (>= x8278 1) (<= x6658 1461501637330902918203684832716283019655932542975) (= x8201 (> (x7676 x666) 0)) (= x5840 x5969) (not (= x729 x8278)) (= x740 x666) (= x485 0) (<= x729 1461501637330902918203684832716283019655932542975) x8201 (not (= x729 x666)) (<= x1839 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x8315 x666)) (>= 1461501637330902918203684832716283019655932542975 x666) (>= x5840 0)) (and (=> (and (and (= true x3075) (= x3075 x6181) (= x4527 x294) (= x3007 x7872) (= x4513 x7901) (= x5574 false)) (not x1388)) x3664) (=> (and (and (= 68 x8510) (= 0 x4791) (= x2471 x5840) (<= 0 x73) (= x4412 (- x3010 x218)) (>= 127 x7590) (= x2137 x1526) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x73) (= (x7676 x666) x8032) (= x1721 x73) (= x2137 x4824) (= x218 x7484) (= x3010 (x5533 x1566)) (< (+ x1249 x218) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2822 (= x888 1)) (>= 127 x7590) (= x4410 false) (= x1249 (x988 x666)) (<= 1 x8032) (= 2001815235 x6684) (= x1566 x5840) (= x73 (+ x218 x1249)) (= x1786 0) (= false x3305) (= false x848)) x1388) (and (=> (and x2822 (and (and (= 2 x2682) (= x2091 (not (= x666 x2471)))) (or (and (and (<= x5882 1461501637330902918203684832716283019655932542975) (= x2875 (ite (not (= x5882 x2471)) 1 0))) x2091) (and (= x2875 (ite x2091 1 0)) (not x2091))))) x1476) (=> (and (not x2822) (and (= x3360 x3007) (= x4513 x3256) (= x261 x4527))) x6679))))) x6846))
(assert (x4101 x6115))
(assert (< (x6207 x7301 x481 x345 x5672 x4986 x5616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1792 (and (not x7295) x2399)))
(assert (= (x5740 (x8452 x8105 x3148 x7367)) x3148))
(assert (= (x5740 (x8452 64 x6137 36)) x6137))
(assert (x4101 x5381))
(assert (= x3741 (and x1064 (not x2517))))
(assert (= x5457 (or x1522 x8028)))
(assert (< 10000 (x8452 64 x4807 3)))
(assert (x5391 x6920))
(assert (x4101 x7086))
(assert (x4101 x3472))
(assert (x4101 x5020))
(assert (= x5750 (or (and x6930 (not x2412)) (and x1965 (not x4030)) (and x5832 (not x2850)) (and (not x3678) x6037))))
(assert (= (and (not x981) x5136) x4776))
(assert (= (and x7207 x3847) x6876))
(assert (= (x842 (x4851 x7483 x5169 x8207 x7999 x8490 x5629 x6153)) x7999))
(assert (= x7113 (and x7612 x7506)))
(assert (x4101 x262))
(assert (= (x842 (x658 x2493 x2634 x165 x5303)) x5303))
(assert (x4101 x642))
(assert (x4101 x210))
(assert (x4101 x2353))
(assert (x2674 1000000000))
(assert (x4101 x5236))
(assert (x4101 x8495))
(assert (= x1544 (x5740 (x8452 64 x1544 7))))
(assert (x25 256 x2406))
(assert (= 32 (x4519 (x3114 32 x8200))))
(assert (=> (<= x5701 10000) (= 0 (x3391 x5701))))
(assert (x4101 x2223))
(assert (= (and (not x1050) x4607) x7555))
(assert (= (=> (and (= x4085 x7775) (= x2206 x3064) (= x1974 x3252) (= x3781 x2153)) x7786) x6381))
(assert (x4101 x4737))
(assert (x4101 x4723))
(assert (= (and x405 x2434) x4947))
(assert (= x8494 (x5740 (x8452 64 x8494 6))))
(assert (x3760 x2791 256))
(assert (not (x2674 (x3114 32 x3565))))
(assert (x4101 x7623))
(assert (not (x2674 (x6207 x6655 x3754 x1280 x8438 x8159 x1634))))
(assert (< (x3114 32 x3750) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x6067) (= (x3391 x6067) 0)))
(assert (x4101 x4050))
(assert (=> (<= x4396 10000) (= 0 (x3391 x4396))))
(assert (x4101 x7707))
(assert (=> (>= 10000 x4860) (= 0 (x3391 x4860))))
(assert (x4101 x1573))
(assert (= x7815 (and x6482 x2047)))
(assert (= (x842 (x658 x8236 x2222 x6395 x5287)) x5287))
(assert (x4101 x5598))
(assert (x4101 x110))
(assert (=> (<= x5680 10000) (= 0 (x3391 x5680))))
(assert (x4101 x3240))
(assert (=> (<= x3497 10000) (= (x3391 x3497) 0)))
(assert (=> (<= x3601 10000) (= 0 (x3391 x3601))))
(assert (x4101 x2162))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x7483 x8282 x5639)))
(assert (= x5128 (x5740 (x8452 64 x5128 12))))
(assert (=> (<= x2232 10000) (= 0 (x3391 x2232))))
(assert (=> (>= 10000 x6954) (= (x3391 x6954) 0)))
(assert (= (x4955 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707)) x4438))
(assert (=> (>= 10000 x7999) (= 0 (x3391 x7999))))
(assert (x4101 x7272))
(assert (x4101 x7900))
(assert (x2674 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= x4779 (and x6304 x7451)))
(assert (= x6879 (x5740 (x658 x7301 x6879 x5406 x821))))
(assert (x4101 x3497))
(assert (x4101 x6722))
(assert (x8137 x5699))
(assert (x4101 x2156))
(assert (=> (>= 10000 x7152) (= (x3391 x7152) 0)))
(assert (x725 x8429))
(assert (= x578 (and x7277 (not x5097))))
(assert (= x7774 (and x1045 x7019)))
(assert (x4101 x7015))
(assert (x5189 x2525 32))
(assert (x4057 x6194))
(assert (= x8558 (and x1231 x50)))
(assert (= (and x3290 x1670) x583))
(assert (x4101 x3080))
(assert (= (or x8065 x6142) x5451))
(assert (x4101 x6399))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4936 0)))
(assert (x4101 x7630))
(assert (=> (<= x1789 10000) (= 0 (x3391 x1789))))
(assert (x4101 x4840))
(assert (not (x2674 (x8452 x2327 x708 x4778))))
(assert (= x8159 (x4955 (x6207 x6655 x3754 x1280 x8438 x8159 x1634))))
(assert (x4101 x315))
(assert (x4101 x6514))
(assert (= x5795 (or x5205 x1901)))
(assert (x4101 x1147))
(assert (x4101 x1771))
(assert (< (x658 x8247 x335 x6736 x939) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1404) (= (x3391 x1404) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4447 (ite (>= 32 x8276) x1918 (ite (>= 64 x8276) x2640 (ite (<= x8276 96) x3301 (ite (>= 128 x8276) x7339 (ite (<= x8276 160) x4113 (ite (<= x8276 192) x933 x7974)))))))))
(assert (=> (<= x4928 10000) (= (x3391 x4928) 0)))
(assert (= (x6140 (x4851 x1404 x8316 x8122 x4396 x153 x5443 x7550)) x7550))
(assert (x2496 x1496))
(assert (< 10000 (x658 x3728 x4680 x8449 x7889)))
(assert (= x7052 (and x2114 x54)))
(assert (x4101 x4797))
(assert (= (=> (and (= x3203 false) (= 36 x7614) (= x6141 x8357) (= true x2027) (= x4112 x6049) (= x4512 x3545) (= x4407 2) (= x7573 0)) x2843) x674))
(assert (= (and x7328 (not x5000)) x2084))
(assert (x4101 x4292))
(assert (x4101 x2234))
(assert (= (or x7453 x1324) x7964))
(assert (=> (>= 10000 x1883) (= 0 (x3391 x1883))))
(assert (=> (>= 10000 x2073) (= 0 (x3391 x2073))))
(assert (x5391 x1637))
(assert (x4101 x5698))
(assert (x4101 x2558))
(assert (= x5857 (x4519 (x3114 x5857 x7740))))
(assert (not (x2674 (x3114 x6601 x80))))
(assert (x725 x8556))
(assert (= (and x4733 (not x8129)) x6005))
(assert (= (=> (and (= (= x5382 0) x7170) (or x7170 (not x7170))) x2925) x5979))
(assert (x4101 x1787))
(assert (x3481 x2236))
(assert (x4101 x5022))
(assert (x4101 x6621))
(assert (=> (>= 10000 x3531) (= (x3391 x3531) 0)))
(assert (=> (>= 10000 x5806) (= 0 (x3391 x5806))))
(assert (x4101 x2463))
(assert (x4101 x2256))
(assert (= x334 (x8370 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733))))
(assert (x4101 x5424))
(assert (= (x6212 (x8452 64 x4803 3)) 3))
(assert (x4101 x4860))
(assert (= x8307 (and x6373 x6544)))
(assert (x4101 x2905))
(assert (x4101 x5135))
(assert (= x7945 (=> (= x5206 (= x3011 0)) (and (=> (and (not x5206) (and (= x6243 x2728) (= x4609 x1107) (= x2356 x5458) (= x6477 x1077) (= 1 x8226) (= x2672 0))) x327) (=> (and (and (= x4122 0) (= false x8399) (= x1570 true)) x5206) x2163)))))
(assert (=> (<= x5639 10000) (= 0 (x3391 x5639))))
(assert (x4101 x1854))
(assert (x4101 x3379))
(assert (x4101 x5907))
(assert (= x408 (x4955 (x5018 x1404 x8231 x7521 x8002 x408))))
(assert (=> (>= 10000 x6585) (= 0 (x3391 x6585))))
(assert (= (and (not x3003) x6126) x456))
(assert (x4101 x4358))
(assert (x4101 x2630))
(assert (x4101 x281))
(assert (x4101 x2828))
(assert (x725 x1071))
(assert (x4101 x2872))
(assert (x4101 x7374))
(assert (=> (<= x6063 10000) (= (x3391 x6063) 0)))
(assert (x4101 x8050))
(assert (x4101 x1719))
(assert (=> (<= x576 10000) (= 0 (x3391 x576))))
(assert (= (and x7934 (not x3685)) x259))
(assert (x5528 x6306))
(assert (x4101 x3623))
(assert (not (x2674 (x8448 0))))
(assert (x4101 x7576))
(assert (x725 1))
(assert (x4101 x5637))
(assert (< (x3114 x3728 x1784) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x6212 (x658 x4567 x8100 x1458 x7760)) x1458))
(assert (x4101 x4660))
(assert (=> (<= x8164 10000) (= (x3391 x8164) 0)))
(assert (= x5791 (or x5609 x617)))
(assert (= x1137 (x8370 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285))))
(assert (= (or (and x1863 x2457) (and x5663 x3645) (and x2061 x1057)) x2757))
(assert (=> (>= 10000 x5342) (= (x3391 x5342) 0)))
(assert (=> (<= x6788 10000) (= (x3391 x6788) 0)))
(assert (= x6235 (and (not x6603) x2893)))
(assert (x4101 x4179))
(assert (x4101 x3568))
(assert (= (x8370 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336)) x6407))
(assert (x4101 x3539))
(assert (x4101 x5842))
(assert (=> (>= 10000 x6839) (= (x3391 x6839) 0)))
(assert (= 0 (x3391 18446744073709551615)))
(assert (=> (>= 10000 x5969) (= 0 (x3391 x5969))))
(assert (= x6659 (x842 (x6207 x2327 x3240 x576 x6659 x4505 x8420))))
(assert (x4101 x1958))
(assert (x4101 x5461))
(assert (x4101 x4956))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 x3485 x8140)))
(assert (x4101 x4348))
(assert (x8137 x361))
(assert (= (and x6536 (not x2822)) x3306))
(assert (x4101 x7391))
(assert (x4101 x5565))
(assert (= (x8370 (x6207 x6655 x3754 x1280 x8438 x8159 x1634)) x1634))
(assert (x4101 x5580))
(assert (x2674 35477284059277649309253622239531857712935939529143554018288893216769000107873))
(assert (x4101 x3422))
(assert (x4101 x3419))
(assert (x4101 x5410))
(assert (= (x5740 (x8452 64 x1649 36)) x1649))
(assert (= x6803 (and x8484 (not x339))))
(assert (=> (>= 10000 x7691) (= (x3391 x7691) 0)))
(assert (x4101 x4707))
(assert (x4101 x6669))
(assert (x4101 x7335))
(assert (x4101 x6764))
(assert (= x5949 (and x7294 x8232)))
(assert (= x3731 (and x2084 (not x2549))))
(assert (x4101 x4943))
(assert (x4101 x3192))
(assert (= x204 (and (not x6268) x5180)))
(assert (= x1582 (x842 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832))))
(assert (x4057 x3586))
(assert (> (x3114 x1404 x3702) 10000))
(assert (= x7028 (and x2102 x242)))
(assert (= x3702 (x5740 (x3114 x1404 x3702))))
(assert (x4101 x3769))
(assert (< 10000 (x6207 x7483 x4415 x1668 x2575 x5720 x7858)))
(assert (= (x5740 (x5018 x7483 x7258 x567 x3375 x3585)) x7258))
(assert (= (x5740 (x6207 x7483 x4415 x1668 x2575 x5720 x7858)) x4415))
(assert (x4101 x7828))
(assert (=> (>= 10000 x1308) (= (x3391 x1308) 0)))
(assert (= (and x460 x4464) x2381))
(assert (= (x3391 (x8452 64 x6760 (ite (<= x8247 32) x7566 (ite (<= x8247 64) x4627 (ite (>= 96 x8247) x7341 (ite (<= x8247 128) x4092 (ite (>= 160 x8247) x6845 (ite (>= 192 x8247) x692 x7767)))))))) (x8452 64 x6760 (ite (>= 32 x8247) x7566 (ite (<= x8247 64) x4627 (ite (>= 96 x8247) x7341 (ite (>= 128 x8247) x4092 (ite (<= x8247 160) x6845 (ite (<= x8247 192) x692 x7767)))))))))
(assert (not (x2674 (x5018 x7483 x7258 x567 x3375 x3585))))
(assert (x4101 x8177))
(assert (x4101 x4566))
(assert (=> (>= 10000 x3217) (= (x3391 x3217) 0)))
(assert (= (x6140 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717)) x428))
(assert (x5528 x384))
(assert (=> (>= 10000 x3712) (= (x3391 x3712) 0)))
(assert (x4101 x6014))
(assert (= (and x5817 x600) x1869))
(assert (= (x4955 (x6207 x5456 x254 x2993 x2587 x5865 x5646)) x5865))
(assert (< 10000 (x658 x6601 x8352 x7125 x7289)))
(assert (x4101 x4691))
(assert (x4101 x4264))
(assert (x4101 x4380))
(assert (= (and (not x435) x998) x7356))
(assert (x8137 x2537))
(assert (x4101 x652))
(assert (= (and x541 (not x695)) x8205))
(assert (x4101 x3124))
(assert (x4101 x2181))
(assert (x4101 x191))
(assert (x4101 x7428))
(assert (= x2020 (=> (and (= x3652 true) (= x626 false) (= x4930 0)) x2914)))
(assert (x4101 x7722))
(assert (x725 x573))
(assert (x5391 x2136))
(assert (x4101 x6145))
(assert (= (=> (= x6085 (= x3042 0)) (and (=> (and x6085 (and (= x26 0) (= x3073 false) (= true x4256))) x395) (=> (and (not x6085) (and (= x5924 x6478) (= x3135 x7548) (= x6789 x7398) (= 0 x4489) (= 1 x5459) (= x4348 x6963))) x6378))) x2085))
(assert (x4101 x7744))
(assert (x2674 100000))
(assert (x725 x8532))
(assert (x4101 x5452))
(assert (< 10000 (x8452 64 x1648 3)))
(assert (x4101 x7114))
(assert (not (x2674 (x3114 x8276 x7070))))
(assert (x4101 x1192))
(assert (x4101 x3333))
(assert (x4101 x4512))
(assert (x4101 x4114))
(assert (x4101 x2083))
(assert (x4101 x1913))
(assert (= x21 (and (not x3525) x8533)))
(assert (x4101 x4024))
(assert (= x4462 (and (not x7017) x5001)))
(assert (= (x4955 (x5018 x7301 x6276 x3370 x6512 x4475)) x4475))
(assert (x4101 x530))
(assert (x4101 x72))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 32 104)))
(assert (x4101 x7161))
(assert (x4101 x2592))
(assert (x4101 x43))
(assert (x4101 x3647))
(assert (x4101 x7470))
(assert (x4101 x1657))
(assert (x4101 x4529))
(assert (= (x5018 x2327 x4522 x2439 x7183 x8482) (x3391 (x5018 x2327 x4522 x2439 x7183 x8482))))
(assert (not (x2674 (x5018 x6609 x6555 x8300 x3110 x7629))))
(assert (= (x842 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070)) x3579))
(assert (= (and x6896 x7124) x183))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x983 6)))
(assert (=> (<= x3123 10000) (= 0 (x3391 x3123))))
(assert (x4101 x8061))
(assert (x4101 x6501))
(assert (x4101 x6417))
(assert (= (x4955 (x6207 x4567 x5929 x4238 x5321 x5266 x4424)) x5266))
(assert (x4057 x4675))
(assert (x3760 x3424 256))
(assert (x4101 x471))
(assert (= x5685 (=> (and (and (= x3143 (x5665 (+ x6798 x992))) (= (x5665 (+ 31 x3205)) x6920) (= (x5665 (+ 32 x7828)) x7843) (= x6798 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6920)) (= x1670 (< 0 x8069)) (= x8069 (x5903 x1426)) (= x3593 (x4456 (- x3143 x5661))) (= (x5665 (+ x992 x3205)) x3564)) (or (not x1670) (and (and (or (not x283) (and (and (= (< 64 x8069) x242) (or (and (and (or (not x1959) (and x1959 (<= x8069 128))) (= (< 96 x8069) x1959)) x242) (not x242))) x283)) (= (< 32 x8069) x283)) x1670))) x1760)))
(assert (x4101 x8514))
(assert (x4101 x3139))
(assert (= (or x2725 x1401 x6270 x1225 x6604) x3859))
(assert (x4101 x5781))
(assert (< (x5018 x7301 x6276 x3370 x6512 x4475) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x8466))
(assert (= x4651 x8260))
(assert (> (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291) 10000))
(assert (=> (<= x5229 10000) (= (x3391 x5229) 0)))
(assert (=> (>= 10000 x8198) (= 0 (x3391 x8198))))
(assert (=> (<= x3485 10000) (= 0 (x3391 x3485))))
(assert (not (x2674 (x658 x2327 x3217 x5002 x4915))))
(assert (x4101 x4317))
(assert (x4101 x5369))
(assert (= x3234 (and (not x1045) x7019)))
(assert (= (and x4889 (not x4434)) x7120))
(assert (x4101 x1379))
(assert (= x3715 (and (not x405) x2434)))
(assert (=> (>= 10000 x422) (= 0 (x3391 x422))))
(assert (x4101 x285))
(assert (x3760 x8246 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x1898))
(assert (x4101 x495))
(assert (x4101 x4423))
(assert (x4101 x1882))
(assert (x5391 x5699))
(assert (x4101 x6166))
(assert (x5528 x6892))
(assert (x4101 x681))
(assert (x4101 x868))
(assert (x2496 x659))
(assert (x4101 x1927))
(assert (= (x3391 (x6207 x7483 x4415 x1668 x2575 x5720 x7858)) (x6207 x7483 x4415 x1668 x2575 x5720 x7858)))
(assert (x4101 x7817))
(assert (x4101 x7304))
(assert (=> (<= x8496 10000) (= 0 (x3391 x8496))))
(assert (x4101 x5129))
(assert (x4101 x4668))
(assert (=> (<= x2624 10000) (= 0 (x3391 x2624))))
(assert (x4101 x3471))
(assert (x2496 x4230))
(assert (x4101 x647))
(assert (x725 x6455))
(assert (x2674 3957931183))
(assert (= x3375 (x842 (x5018 x7483 x7258 x567 x3375 x3585))))
(assert (= (x3391 (x5018 x7483 x7258 x567 x3375 x3585)) (x5018 x7483 x7258 x567 x3375 x3585)))
(assert (= (x4519 (x8452 64 x7055 6)) 64))
(assert (x4101 x3817))
(assert (< (x658 x8276 x8404 x5313 x424) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x6593 (not x4852)) x5994))
(assert (=> (<= x69 10000) (= 0 (x3391 x69))))
(assert (= (x5740 (x8452 64 x4803 3)) x4803))
(assert (x4101 x5326))
(assert (x5189 (+ 31 x6338) 32))
(assert (x4101 x5959))
(assert (= x451 (and x3118 x4322)))
(assert (x4101 x7626))
(assert (= (and x3006 (not x8324)) x7743))
(assert (x4101 x4406))
(assert (= x7864 (and x3706 x4006)))
(assert (=> (<= x4719 10000) (= (x3391 x4719) 0)))
(assert (x4101 x1271))
(assert (x4101 x3504))
(assert (x4101 x3000))
(assert (= x1387 (and x5692 (not x132))))
(assert (x4101 x5239))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x6601 x1538 x2378 x3456 x2871)))
(assert (x4101 x797))
(assert (= (=> (and (or (and x7661 (and (or (not x5715) (and (and (and (= (x5665 (+ 32 x992)) x45) (= x7190 (x5665 (+ x4088 32))) (= x5732 (x1188 x7190)) (= (> x3205 64) x2237)) (or (not x2237) (and (and (and (= (x5665 (+ x4088 64)) x2712) (= x8119 (x5665 (+ x992 64))) (= (x7169 x2712) x396) (= x6910 (> x3205 96))) (or (and (and (<= x3205 128) (= x2278 (x7056 x2387)) (= x2387 (x5665 (+ x4088 96))) (= x4032 (x5665 (+ 96 x992)))) x6910) (not x6910))) x2237))) x5715)) (and (= x5715 (< 32 x3205)) (= (x1105 x4088) x1771)))) (not x7661)) (and (= x7661 (< 0 x3205)) (= (x5665 (+ x2125 x5019)) x3435) (= x3205 (x3790 x23)) (= (x5665 (+ x1511 32)) x4054) (= x5730 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7851)) (= (x5665 (+ x7257 32)) x992) (= (x5665 (+ 31 x2125)) x7851) (= (x5665 (+ x5019 x5730)) x7257) (= (x5665 (+ 32 x4054)) x7828) (= x7311 (x4456 (- x7257 x5661))))) x5685) x6109))
(assert (=> (>= 10000 x4072) (= 0 (x3391 x4072))))
(assert (x4101 x2676))
(assert (x4101 x5918))
(assert (x4101 x2278))
(assert (x4101 x5742))
(assert (x4101 x4868))
(assert (x4101 x7398))
(assert (= x7219 (or x2311 x1852)))
(assert (=> (<= x7449 10000) (= (x3391 x7449) 0)))
(assert (x4101 x2294))
(assert (x3760 x4538 32))
(assert (< 10000 (x8448 0)))
(assert (=> (<= x3431 10000) (= 0 (x3391 x3431))))
(assert (x4101 x3698))
(assert (= x7302 (and x4837 (not x1679))))
(assert (= x3733 (and x8042 (not x2819))))
(assert (> (x6207 x6655 x3754 x1280 x8438 x8159 x1634) 10000))
(assert (= x2260 (x842 (x6207 x6601 x1154 x6468 x2260 x2279 x5339))))
(assert (= (and (not x4713) x2881) x6625))
(assert (x4101 x5486))
(assert (> (x8452 x6601 x7528 x3162) 10000))
(assert (= (x3391 (+ x4899 2)) (x3391 x4899)))
(assert (= (and x1911 (not x1745)) x5071))
(assert (x4101 x6980))
(assert (x2496 x1704))
(assert (= x6126 (and (not x322) x4832)))
(assert (=> (<= x165 10000) (= (x3391 x165) 0)))
(assert (x5391 x7851))
(assert (x4101 x2273))
(assert (x4101 x3320))
(assert (x4101 x3013))
(assert (x4101 x939))
(assert (not (x2674 (x8452 64 x1528 36))))
(assert (= x2346 x3662))
(assert (x4101 x1538))
(assert (x4101 x7200))
(assert (x4101 x3223))
(assert (x4101 x5705))
(assert (= (x3391 (x6207 x6256 x690 x1813 x3211 x2826 x8101)) (x6207 x6256 x690 x1813 x3211 x2826 x8101)))
(assert (= (x6212 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717)) x6063))
(assert (x4101 x7368))
(assert (x4101 x4595))
(assert (= x835 (or x556 x1024)))
(assert (x3760 x4640 128))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x5710 11)))
(assert (not (x2674 (x8452 64 x4807 5))))
(assert (= (x3114 x6655 x5210) (x3391 (x3114 x6655 x5210))))
(assert (=> (>= 10000 x8449) (= 0 (x3391 x8449))))
(assert (= x3728 (x4519 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551))))
(assert (= (x3391 (x658 x8276 x8404 x5313 x424)) (x658 x8276 x8404 x5313 x424)))
(assert (x4101 x343))
(assert (x4101 x8252))
(assert (x4101 x7530))
(assert (x25 32 x2960))
(assert (= (x3391 (x8452 64 x7904 36)) (x8452 64 x7904 36)))
(assert (x4101 x8075))
(assert (x4101 x1253))
(assert (= (x4519 (x8452 64 x5586 100)) 64))
(assert (= (x842 (x658 x3485 x166 x719 x2339)) x2339))
(assert (x4101 x237))
(assert (x4057 x826))
(assert (= (or (and x7390 x1950) (and x5971 x3824)) x1799))
(assert (x5391 x5273))
(assert (= x2587 (x842 (x6207 x5456 x254 x2993 x2587 x5865 x5646))))
(assert (x2371 x5452))
(assert (not (x2674 (x8452 64 x66 36))))
(assert (x4101 x4521))
(assert (= (x4519 (x8452 64 x6137 36)) 64))
(assert (x4101 x7806))
(assert (= x5332 (and (not x263) x3725)))
(assert (x4101 x4461))
(assert (x4101 x8111))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x8236 x5618 x2344 x5489 x7255 x1096)))
(assert (= (x3114 x2327 x7905) (x3391 (x3114 x2327 x7905))))
(assert (x4101 x8124))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x8607 12)))
(assert (x4101 x6392))
(assert (=> (<= x7289 10000) (= 0 (x3391 x7289))))
(assert (=> (<= x2174 10000) (= 0 (x3391 x2174))))
(assert (x4101 x4553))
(assert (x4101 x7098))
(assert (x4101 x6829))
(assert (x2496 x4090))
(assert (x4101 x4415))
(assert (= (and x5833 x2858) x1024))
(assert (not (x2674 (x8452 64 x7904 36))))
(assert (= (and x7494 x855) x57))
(assert (x4101 x62))
(assert (= (x5740 (x8452 x2493 x5680 x3170)) x5680))
(assert (< (x658 x2327 x3217 x5002 x4915) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825) (x3391 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825))))
(assert (x4101 x6296))
(assert (= (x6140 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819)) x5410))
(assert (x4101 x7469))
(assert (x4101 x8489))
(assert (x4101 x4418))
(assert (x4101 x3300))
(assert (x5391 x7762))
(assert (not (x2674 (x8452 64 x6137 36))))
(assert (x4101 x1953))
(assert (x725 x6321))
(assert (= x4280 (and (not x4643) x4893)))
(assert (x4101 x7497))
(assert (not (x2674 (x6207 x5857 x681 x1632 x5447 x2128 x1530))))
(assert (= x7111 (or x349 x400 x1380 x6258 x886 x3626 x3741 x1299 x6907 x4148 x5792)))
(assert (= (and x5261 (not x7364)) x2282))
(assert (x4101 x4654))
(assert (x4101 x6580))
(assert (= x4100 (or x4614 x8255 x5194 x4216 x8481 x773 x2737 x2299 x3306)))
(assert (= (and x8445 (not x6973)) x152))
(assert (x4101 x8282))
(assert (=> (>= 10000 x4475) (= 0 (x3391 x4475))))
(assert (x4101 x392))
(assert (x4101 x2663))
(assert (=> (<= x5586 10000) (= (x3391 x5586) 0)))
(assert (x4101 x3038))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190)))
(assert (= (=> (and (= x914 false) (= x7573 0) (= x7614 x7166) (= x4512 x3545) (= 2 x8405) (= x8357 x6141) (= x4112 x6049) (= true x5045)) x2843) x3611))
(assert (=> (>= 10000 x1096) (= 0 (x3391 x1096))))
(assert (=> (<= x1200 10000) (= 0 (x3391 x1200))))
(assert (x4101 x8030))
(assert (x4101 x714))
(assert (= (x4955 (x6207 x7301 x481 x345 x5672 x4986 x5616)) x4986))
(assert (x4101 x2504))
(assert (x4101 x398))
(assert (= (x8452 64 x1526 10) (x3391 (x8452 64 x1526 10))))
(assert (= (or x4530 x6849) x248))
(assert (= (x4519 (x8452 64 x1649 36)) 64))
(assert (= (and x1700 (not x1851)) x6216))
(assert (x4101 x7785))
(assert (=> (>= 10000 x6153) (= 0 (x3391 x6153))))
(assert (=> (>= 10000 x1582) (= 0 (x3391 x1582))))
(assert (=> (<= x345 10000) (= 0 (x3391 x345))))
(assert (x4101 x6172))
(assert (x4101 x7008))
(assert (=> (<= x6115 10000) (= (x3391 x6115) 0)))
(assert (x4101 x1103))
(assert (= 64 (x4519 (x8452 64 x1648 4))))
(assert (x4101 x6015))
(assert (=> (<= x2917 10000) (= (x3391 x2917) 0)))
(assert (= (x6212 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285)) x5613))
(assert (x4101 x1249))
(assert (= (=> (and (= x7809 x529) (= x7134 x7406) (= x7650 x2885) (= x7327 x598) (= x7129 x5921) (= x207 x1179) (= x5831 x1676) (= x5511 x4374) (= x3961 x5293) (= x3743 x5133) (= x7870 x1759) (= x1735 x2619) (= x1483 x510)) x5159) x4884))
(assert (= (x6140 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)) x1197))
(assert (= x6868 (or x1330 x646 x5499 x2433 x1642)))
(assert (=> (>= 10000 x6416) (= 0 (x3391 x6416))))
(assert (x725 x3424))
(assert (= x8062 (and x2569 x4473)))
(assert (=> (>= 10000 x4031) (= 0 (x3391 x4031))))
(assert (= (x3391 (x8452 64 x6251 12)) (x8452 64 x6251 12)))
(assert (not (x2674 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717))))
(assert (= (x5740 (x658 x8247 x335 x6736 x939)) x335))
(assert (=> (<= x3375 10000) (= 0 (x3391 x3375))))
(assert (x4101 x1789))
(assert (= (x4519 (x8452 64 x4807 3)) 64))
(assert (= 64 (x4519 (x8452 64 x7797 36))))
(assert (x4101 x5057))
(assert (=> (>= 10000 x3665) (= (x3391 x3665) 0)))
(assert (= 0 (x3391 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4101 x5531))
(assert (x3760 x5199 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x5645))
(assert (x3481 x7851))
(assert (=> (>= 10000 x2927) (= 0 (x3391 x2927))))
(assert (= (x4955 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640)) x5936))
(assert (x4101 x8490))
(assert (x4101 x4518))
(assert (x4101 x7333))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x658 x3728 x4680 x8449 x7889)))
(assert (x4101 x6024))
(assert (= (x658 x2493 x2634 x165 x5303) (x3391 (x658 x2493 x2634 x165 x5303))))
(assert (x4101 x634))
(assert (x4101 x4451))
(assert (x4101 x7063))
(assert (x3760 x3374 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x3760 x5486 2))
(assert (= x7750 (and x4881 (not x1552))))
(assert (= (x4519 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803)) x6655))
(assert (= x3577 (=> (= (= x1271 0) x1549) (and (=> (and (and (= x5717 (x8452 64 x723 11)) (= (< 3 x3113) x855) (<= x3113 255) (= (x7768 x5717) x3113)) x1549) (and (=> (and (not x855) (= x5861 (= 2 x3113))) (and (=> (and x5861 (and (<= 356 x1826) (= false x3382) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2773) x5858) (= 0 x5513) (<= x1648 65535) (= (x3795 224) x194) (= x6215 290) (= x3530 (x7676 x8315)) (= (= (x5900 196) (x2444 486)) x4175) (<= 356 x3730) (= x8039 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= (x5665 (+ 31 x194)) x1334) (= x6424 (x4456 (- x29 294))) (= (x3230 128) x6202) (= (x4456 (- x8454 290)) x1826) (= x2733 0) (= (x8452 64 1 x2328) x1013) (= (x5665 (+ x29 32)) x431) (= x2328 (x8452 64 x1648 4)) (= x5104 256) x7171 (= x3730 x1826) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1334) x2183) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x3730 4)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x3730 4)) true) (< (- x3730 4) 160))) x3561) (= (= 34 (x5900 260)) x5914) (<= x4950 127) x4175 (= (x924 x1013) x4617) (<= 1 x3530) (= x1648 x6881) (= x2773 (x5665 (+ x6202 31))) (= 1084734224 x2609) (= x666 x748) (= 160 x5383) x5914 (= (= 64 (x5900 164)) x7171) (= (x5665 (+ x5858 486)) x29) (>= 127 x4950) (= x5987 (= (x2444 518) (x5900 228))) (= x5423 false) (= x8454 (x5665 (+ x2183 x431))) x5987)) (and (=> (and (= true x2447) (not x3561)) (and (=> (and x2447 (= (and (> x3730 195) (= (<= x3730 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x405)) (and (=> (and x405 (and (= (x4664 164) x3269) (= (< 18446744073709551615 x3269) x4504))) (and (=> x4504 x2168) (=> (and (not x4504) (and (= (> x4479 x3730) x3824) (= (x5665 (+ x3269 196)) x4479))) (and (=> (and (and (<= x3730 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x3730 356) (= x726 (x4664 260)) (= (< 18446744073709551615 x726) x4537)) (not x3824)) (and (=> x4537 x2168) (=> (and (and (= x7390 (< x3730 x1843)) (= (x5665 (+ 292 x726)) x1843)) (not x4537)) (and (=> x7390 x7419) (=> (and (and (= x1412 1) (= x6580 x8014) (= x826 x1960) (= x857 (x6887 128)) (= x353 x2571) (= x6021 x4760) (= x247 (x6887 160)) (= x895 false) (= x40 x2920) (= false x5412) (= x8153 x3365) (= (x6887 160) x3874) (= x1648 x2416) (= x1395 x2452) (= x735 x3595) (= x3568 x8340) (= x6438 x1196) (= x5541 (x6887 128)) (= x7632 x1618) (= x4688 x4445) (= x3210 64)) (not x7390)) x4210))))) (=> x3824 x7419))))) (=> (not x405) x1193))) (=> (not x2447) x1193))) (=> x3561 x1193))) (=> (and (and (= x7288 4) (= true x2912) (= x8093 false)) (not x5861)) x2687))) (=> (and x855 (and (= false x5425) (= true x4077) (= x7288 36))) x2687))) (=> (and (not x1549) (and (= true x6559) (= 4 x7288) (= x4127 false))) x2687)))))
(assert (x4101 x6966))
(assert (= x5173 (=> (and (= x6708 (= x7441 0)) (or (and x6708 (= x7947 x7441)) (and (not x6708) (and (= (x5394 256) x2308) (= x6655 (x5394 128)) (= x6716 (x5665 (+ 32 x494))) (= x4015 (x5394 224)) (= x1290 (x7250 x7323)) (= (x5394 192) x3104) (= (x7250 x4166) x2780) (= x471 (x7250 x3415)) (= x5569 (x5665 (+ 64 x494))) (= x784 (x5665 (+ 64 x494))) (= x7871 (x7250 x1015)) (= x4555 (x6207 x6655 x3754 x1280 x8438 x8159 x1634)) (= (x8448 0) x548) (= x2573 (x5665 (+ x494 96))) (= (x7250 x494) x6160) (= x17 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717)) (= x6063 (x5394 192)) (= (x5394 288) x1634) (= x717 (x5394 352)) (= (x658 x6609 x5108 x6949 x5158) x8455) (= (x5665 (+ x494 64)) x5913) (= x3754 (x5394 160)) (= x5342 (x7250 x5569)) (= (x6207 x6609 x665 x2145 x377 x444 x8061) x5356) (= (x7250 x494) x6555) (= x6621 (x5394 288)) (= x5803 (x5394 320)) (= x4839 (x8448 0)) (= (x5394 288) x2197) (= (x5394 160) x1562) (= x836 (x5665 (+ 192 x494))) (= (x5665 (+ 96 x494)) x1015) (= x9 (x7250 x494)) (= x3213 (x5665 (+ x494 128))) (= x5296 (x5394 160)) (= x8331 (x7250 x943)) (= (x5665 (+ x494 32)) x862) (= (x7250 x494) x5827) (= (x5394 192) x3262) (= (x5665 (+ x494 64)) x4285) (= x5210 (x5394 160)) (= x665 (x7250 x494)) (= (x7250 x7127) x1042) (= x6820 (x4002 x6609 x9 x471 x5342 x7871 x1290 x5410 x4819)) (= x6949 (x7250 x7138)) (= (x5665 (+ 128 x494)) x7323) (= (x3114 x6655 x5210) x7854) (= x7304 (x5665 (+ x6609 x494))) (= x5904 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803)) (= x4206 (x5018 x6655 x7778 x3104 x3601 x1789)) (= (x5394 160) x7778) (= x4580 (x5665 (+ x494 96))) (= (x7250 x4285) x377) (= x4868 (x5394 256)) (= x4031 (x7250 x5913)) (= (x5665 (+ x494 32)) x3415) (= x3345 (x7250 x3020)) (= x3601 (x5394 224)) (= (x7250 x494) x5108) (<= x6655 224) (= (x5394 192) x1280) (= (x7250 x3184) x7629) (= (x5665 (+ 160 x494)) x3020) (= x7138 (x5665 (+ x494 32))) (= (x5394 160) x6946) (= (x5394 224) x8606) (= (x5394 224) x8438) (= (x7250 x2573) x444) (= x4166 (x5665 (+ x494 32))) (= (x5665 (+ x494 32)) x7127) (= x7947 (ite (= (ite (= x6609 0) x4839 (ite (>= 32 x6609) x3787 (ite (>= 64 x6609) x6793 (ite (>= 96 x6609) x8455 (ite (<= x6609 128) x1563 (ite (<= x6609 160) x5356 (ite (>= 192 x6609) x1448 x6820))))))) (ite (= 0 x6655) x548 (ite (>= 32 x6655) x7854 (ite (>= 64 x6655) x8569 (ite (>= 96 x6655) x1561 (ite (>= 128 x6655) x4206 (ite (<= x6655 160) x4555 (ite (<= x6655 192) x5904 x17)))))))) 1 0)) (= (x7250 x645) x5410) (>= 224 x6609) (= (x7250 x6716) x8300) (= (x3114 x6609 x6160) x3787) (= (x8452 x6655 x5638 x3262) x8569) (= x1561 (x658 x6655 x1562 x2988 x4015)) (= (x7250 x494) x736) (= (x5665 (+ x494 96)) x3184) (= x2145 (x7250 x862)) (= x1563 (x5018 x6609 x6555 x8300 x3110 x7629)) (= (x7250 x784) x3110) (= x943 (x5665 (+ 128 x494))) (= x1261 (x7250 x4580)) (= (x7250 x3213) x8061) (= (x7250 x836) x4819) (= (x5665 (+ 64 x494)) x4471) (= (x5394 192) x2988) (= x1448 (x4851 x6609 x736 x2780 x4031 x1261 x8331 x3345)) (= x428 (x5394 320)) (= x5158 (x7250 x4471)) (= x645 (x5665 (+ 160 x494))) (= x5638 (x5394 160)) (= (x5394 224) x4047) (= x8159 (x5394 256)) (= x1789 (x5394 256)) (= x2596 (x5394 192)) (= (x8452 x6609 x5827 x1042) x6793))))) x3915)))
(assert (x4101 x8070))
(assert (x4101 x7329))
(assert (x4101 x4404))
(assert (x4101 x6488))
(assert (= (x842 (x4002 x3485 x7346 x6998 x6172 x3431 x7569 x652 x3300)) x6172))
(assert (= (and x1552 x4881) x3775))
(assert (= (=> (and (= x5480 (- x8025 132)) (= (> x5262 0) x4030) (= x8431 (x639 1 x7673)) (= (x8297 x7673 2) x2787) (= (ite (> x8431 0) x2787 (x639 127 x2787)) x2919) (= x5262 (x4456 (- x8431 (mod (ite (> 32 x2919) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (=> (not x4030) x1560) (=> (and (and (= (x639 1 x7673) x3352) (= x8367 (+ 32 x8025)) (= (= x3352 0) x5910)) x4030) (and (=> (and x5910 (and (= (+ x8367 x6532) x6246) (or (= x6532 32) (= 0 x6532)) (= (* (ite (not (= 0 x2919)) 1 0) 32) x6532) (= x4327 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7673)))) x2320) (=> (and (not x5910) (and (and (= (x3114 32 104) x5197) (= (> x2919 0) x5844)) (or (and (not x5844) (= x3986 0)) (and (and (<= x2919 32) (= (x6449 x5197) x7982) (= x3986 32)) x5844)))) x6712))))) x4328))
(assert (= (and (not x5087) x1517) x1288))
(assert (=> (<= x681 10000) (= 0 (x3391 x681))))
(assert (x4101 x6349))
(assert (= x3514 (or (and x6490 x6433) (and x5786 x1848) (and x5692 x132) (and x2381 x915) (and x4761 x3388) (and x4343 x3616) (and x808 x755) (and x8425 x7755) (and x435 x998))))
(assert (x4101 x1019))
(assert (x4101 x6128))
(assert (x4101 x1444))
(assert (= (x842 (x6207 x4567 x5929 x4238 x5321 x5266 x4424)) x5321))
(assert (= (=> (and (or (not x4975) x4975) (= (= x8037 0) x4975)) x8433) x7193))
(assert (not (x2674 (x658 x8276 x8404 x5313 x424))))
(assert (= (and x8583 x3098) x3506))
(assert (x4101 x8244))
(assert (x4101 x7855))
(assert (x3760 x6194 2))
(assert (and (= 9 (x6196 3 3)) (= (x6196 27 3) 81) (= (x6196 9 9) 81) (= (x6196 9 3) 27)))
(assert (not (x2674 (x3114 x7483 x7006))))
(assert (x4101 x7230))
(assert (=> (>= 10000 x4050) (= (x3391 x4050) 0)))
(assert (= (or x3562 x2219 x5178) x1025))
(assert (=> (<= x733 10000) (= 0 (x3391 x733))))
(assert (x4101 x1109))
(assert (x25 32 (ite (not (= x7234 0)) 1 0)))
(assert (= (or (and (not x7104) x2693) (and (not x7446) x451) (and x6250 (not x4806))) x8505))
(assert (= (x6212 (x6207 x2493 x4433 x971 x4380 x3792 x6585)) x971))
(assert (x4101 x7607))
(assert (x4101 x4379))
(assert (x4101 x8442))
(assert (x4101 x5051))
(assert (= (or x6644 x6307) x2431))
(assert (x25 32 (ite (not (= 0 x2504)) 1 0)))
(assert (= (and x6838 x259) x7967))
(assert (x4101 x3971))
(assert (= x4589 (or (and x6668 (not x2423)) x2245)))
(assert (x4101 x6549))
(assert (= x2624 (x6212 (x6207 x8066 x1862 x2624 x99 x6072 x1363))))
(assert (= x8272 (and x6927 (not x6538))))
(assert (x5189 (+ 31 x4200) 32))
(assert (x4101 x8565))
(assert (= (=> (= x1851 (= x785 0)) (and (=> (and x1851 (and (= x1859 x7632) (= x3365 x3529) (= x4445 x5893) (= x8495 x826) (= x2814 x1395) (= x3819 x1648) (= x3595 x337) (= x7280 2) (= x8234 x4760) (= x3872 false) (= x2244 x1196) (= x40 x7103) (= x8014 x816) (= x2398 x7904) (= x2571 x846) (= 0 x5204) (= true x20))) x2534) (=> (and (and (= x7925 x5831) (= x1309 x1735) (= x1483 x5876) (= x6428 x5511) (= x6711 x1759) (= x7129 x7349) (= x3743 x6772) (= x7406 x120) (= x529 x4576) (= x6666 x5293) (= x1038 x1179) (= x7333 x7327) (= x7946 x2885)) (not x1851)) x4884))) x5887))
(assert (= x535 (and (not x3509) x960)))
(assert (x4101 x3972))
(assert (= x1562 (x5740 (x658 x6655 x1562 x2988 x4015))))
(assert (x4101 x8194))
(assert (= (x4519 (x3114 32 x8158)) 32))
(assert (x5391 x6902))
(assert (= x590 (=> (and (or (not x1039) (and (and (and (= x406 (> x5377 32)) (= x6470 (x7696 x351))) (or (and x406 (and (or (not x695) (and (and (and (= (> x5377 96) x2056) (= (x5370 x7777) x4404) (= x7777 (x5665 (+ x351 64))) (= (x5665 (+ 64 x5411)) x4450)) (or (and (and (= (x6100 x7015) x3468) (= (x5665 (+ x351 96)) x7015) (<= x5377 128) (= x4770 (x5665 (+ 96 x5411)))) x2056) (not x2056))) x695)) (and (= (x5665 (+ x351 32)) x4618) (= (> x5377 64) x695) (= x1127 (x6550 x4618)) (= x5302 (x5665 (+ x5411 32)))))) (not x406))) x1039)) (and (= x1039 (> x5377 0)) (= (x5665 (+ x5978 x4)) x5651) (= x5377 (x2959 x6152)) (= x3022 (x5665 (+ x5978 x8118))) (= x209 (x5665 (+ 31 x4))) (= x8118 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x209)) (= (x4456 (- x3022 x4743)) x2369) (= x4886 (x5665 (+ 32 x7342))) (= x5411 (x5665 (+ 32 x3022))) (= x7342 (x5665 (+ 32 x7939))))) x5654)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961)))
(assert (= x5857 (x4519 (x5018 x5857 x8219 x4949 x2419 x5524))))
(assert (= x4081 (=> (= x3680 (= 0 x3188)) (and (=> (and x3680 (and (<= x8332 255) (= x4842 (x8452 64 x5710 11)) (= x8332 (x2006 x4842)) (= (> x8332 3) x2429))) (and (=> (and (and (= x6564 true) (= x4619 false) (= x4122 36)) x2429) x2163) (=> (and (not x2429) (= x4647 (= x8332 2))) (and (=> (and (not x4647) (and (= false x5079) (= x4122 4) (= x348 true))) x2163) (=> (and (and (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2236) x5559) (= x5553 x666) (= (x2805 224) x1082) (>= x5254 1) (= x6825 (x5665 (+ x5559 x3600))) (= (x5665 (+ 32 x2857)) x3600) (>= 65535 x4807) (= x4840 160) (= x3502 (x8452 64 x4807 4)) (= x6 (x5665 (+ 31 x2907))) (= x2236 (x5665 (+ 31 x1082))) (<= 356 x5463) (= x2907 (x3937 128)) (>= 127 x4056) (= 0 x4066) (= x4458 (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6)) (= x5463 x1402) (= x4807 x1393) (= x6482 (or (and (< (- x5463 4) 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x5463 4)) true)) (> (- x5463 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x4456 (- x2857 294)) x1219) (= x4155 256) x3261 (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x7972) x465 x4796 (= (= (x3167 486) (x4220 196)) x465) (= x2156 0) (= false x783) x1896 (= x3942 (x924 x619)) (= false x6070) (= x1402 (x4456 (- x6825 290))) (= (x5665 (+ x4458 486)) x2857) (>= 127 x4056) (= (= (x3167 518) (x4220 228)) x1896) (= 290 x7360) (= x4796 (= 64 (x4220 164))) (= (x8452 64 1 x3502) x619) (>= x1402 356) (= x5254 (x7676 x8315)) (= (= 34 (x4220 260)) x3261) (= 1084734224 x1662)) x4647) (and (=> x6482 x6485) (=> (and (= x1738 true) (not x6482)) (and (=> (not x1738) x6485) (=> (and x1738 (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5463) true) (> x5463 195)) x5132)) (and (=> (and x5132 (and (= x2117 (> x3228 18446744073709551615)) (= (x6376 164) x3228))) (and (=> x2117 x6862) (=> (and (and (= (x5665 (+ x3228 196)) x6357) (= x2054 (< x5463 x6357))) (not x2117)) (and (=> (and (and (= x3882 (x6376 260)) (= x2240 (< 18446744073709551615 x3882)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5463) (<= 356 x5463)) (not x2054)) (and (=> x2240 x6862) (=> (and (not x2240) (and (= x7759 (x5665 (+ x3882 292))) (= (> x7759 x5463) x4384))) (and (=> x4384 x5775) (=> (and (not x4384) (and (= x6437 x279) (= 1 x6443) (= false x7522) (= x6950 false) (= x5573 x1253) (= x4807 x1876) (= x7105 x6194) (= x8353 x4043) (= x2081 x2558) (= x6141 x4534) (= x452 x4936) (= x3286 x7912) (= x6729 x4112) (= x7673 x7332) (= x1794 x5076) (= x5396 (x3804 160)) (= x2095 x3545) (= (x3804 128) x3971) (= x2198 (x3804 160)) (= (x3804 128) x4000) (= 64 x3909))) x4390))))) (=> x2054 x5775))))) (=> (not x5132) x6485))))))))))) (=> (and (and (= 4 x4122) (= x7833 true) (= x3318 false)) (not x3680)) x2163)))))
(assert (x4101 x6529))
(assert (x4101 x6011))
(assert (x4101 x1121))
(assert (x4101 x4511))
(assert (x4101 x7952))
(assert (x4101 x4385))
(assert (x25 32 x4255))
(assert (= (or x7307 x8325 x7830 x851) x3015))
(assert (x4101 x1364))
(assert (= (and (not x7047) x5243) x7537))
(assert (= 2 (x6212 (x8452 64 x5231 2))))
(assert (x4101 x4438))
(assert (x4101 x5337))
(assert (< 10000 (x658 x8236 x2222 x6395 x5287)))
(assert (x4057 x5486))
(assert (x4101 x3942))
(assert (x725 x4261))
(assert (x4101 x793))
(assert (= (or (and (not x5196) x3648) (and x8528 (not x3361)) (and x5053 (not x3939))) x8365))
(assert (x4101 x738))
(assert (= x7125 (x6212 (x658 x6601 x8352 x7125 x7289))))
(assert (x4101 x4471))
(assert (> (x8452 64 x6760 (ite (>= 32 x954) x664 (ite (<= x954 64) x2514 (ite (<= x954 96) x5577 (ite (<= x954 128) x1131 (ite (<= x954 160) x5628 (ite (<= x954 192) x1262 x6705))))))) 10000))
(assert (= (x6140 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190)) x6190))
(assert (x25 1000000000 x3007))
(assert (x4101 x6949))
(assert (x4101 x3658))
(assert (x4101 x5963))
(assert (x4101 x2653))
(assert (x4101 x69))
(assert (x2674 1722637450))
(assert (x3760 x1431 256))
(assert (= (x6140 (x4002 x3728 x2409 x5503 x1366 x4662 x6273 x5546 x5551)) x5546))
(assert (= (x4519 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613)) x1404))
(assert (= x5710 (x5740 (x8452 64 x5710 11))))
(assert (x4101 x6795))
(assert (x3481 x1086))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x5456 x3051 x6313 x5806 x1348)))
(assert (= x5735 (x8370 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393))))
(assert (x2496 x6015))
(assert (x5391 x1334))
(assert (x4101 x5098))
(assert (x4101 x7618))
(assert (x4101 x4346))
(assert (= x1434 (x5740 (x6207 x1404 x1434 x7783 x2653 x69 x8128))))
(assert (x5528 x2110))
(assert (x4101 x1985))
(assert (x4101 x5735))
(assert (x4101 x3995))
(assert (= (x8370 (x6207 x2493 x4433 x971 x4380 x3792 x6585)) x6585))
(assert (= (x842 (x6207 x8236 x5618 x2344 x5489 x7255 x1096)) x5489))
(assert (x4101 x5680))
(assert (x4101 x3269))
(assert (= (or x6527 x6127) x3206))
(assert (=> (<= x2592 10000) (= (x3391 x2592) 0)))
(assert (= x3 (and (not x794) x522)))
(assert (=> (>= 10000 x5169) (= 0 (x3391 x5169))))
(assert (= x2560 (x4955 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190))))
(assert (x4101 x4505))
(assert (= (and x1452 (not x504)) x6786))
(assert (= 64 (x4519 (x8452 64 x1648 3))))
(assert (= (x658 x8105 x1516 x7217 x2649) (x3391 (x658 x8105 x1516 x7217 x2649))))
(assert (= (or x4306 x5208 x6120) x2893))
(assert (=> (<= x5443 10000) (= 0 (x3391 x5443))))
(assert (=> (<= x6946 10000) (= (x3391 x6946) 0)))
(assert (< 10000 (x5018 x5456 x3051 x6313 x5806 x1348)))
(assert (x4101 x5877))
(assert (= (=> (and (and (= x7506 (> x5934 0)) (= x5934 (x6704 x6152)) (= (x4456 (- x3055 x5375)) x6476) (= x3272 (x5665 (+ x6052 x7841))) (= x3055 (x5665 (+ x6052 x8049))) (= x2583 (x5665 (+ x3055 32))) (= (x5665 (+ x6957 32)) x6050) (= (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6107) x8049) (= x6957 (x5665 (+ 32 x2995))) (= x6107 (x5665 (+ 31 x7841)))) (or (not x7506) (and (and (and (= (x8077 x351) x5918) (= x1144 (> x5934 32))) (or (and (and (or (not x4360) (and x4360 (and (or (not x6405) (and x6405 (and (= x8443 (x36 x7608)) (>= 128 x5934) (= x2424 (x5665 (+ 96 x2583))) (= x7608 (x5665 (+ x351 96)))))) (and (= x6405 (< 96 x5934)) (= x5242 (x5665 (+ x351 64))) (= (x5665 (+ 64 x2583)) x3387) (= x100 (x1604 x5242)))))) (and (= x8052 (x5665 (+ 32 x351))) (= x4360 (< 64 x5934)) (= (x5665 (+ 32 x2583)) x859) (= (x4033 x8052) x8097))) x1144) (not x1144))) x7506))) x4549) x5161))
(assert (x8137 x7057))
(assert (> (x3114 x2327 x7905) 10000))
(assert (x4101 x3433))
(assert (x4101 x5569))
(assert (= x1404 (x4519 (x3114 x1404 x3702))))
(assert (x4101 x4490))
(assert (not (x2674 (x8452 x4567 x2927 x1457))))
(assert (= (x3391 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832)) (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832)))
(assert (= (x3391 3313512704) 0))
(assert (= x41 (x842 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291))))
(assert (x4101 x382))
(assert (=> (<= x1813 10000) (= 0 (x3391 x1813))))
(assert (not (x2674 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825))))
(assert (= (x3391 3812630263) 0))
(assert (x4101 x2660))
(assert (x2496 x3210))
(assert (= (x6212 (x8452 64 x8607 12)) 12))
(assert (= x5832 (or x3226 x5395)))
(assert (x4101 x7569))
(assert (= 64 (x4519 (x8452 64 x8458 12))))
(assert (= (x5740 (x3114 32 104)) 104))
(assert (= x2001 (and (not x1029) x2832)))
(assert (= (x4955 (x6207 x3485 x136 x3977 x352 x6346 x7911)) x6346))
(assert (= (x3391 (x3114 x7483 x7006)) (x3114 x7483 x7006)))
(assert (x2496 x8211))
(assert (x4101 x1081))
(assert (x4101 x5082))
(assert (= (x6212 (x8452 x6655 x5638 x3262)) x3262))
(assert (x4101 x8084))
(assert (x2674 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (= x2579 (x5740 (x3114 x6256 x2579))))
(assert (=> (<= x7483 10000) (= (x3391 x7483) 0)))
(assert (x4101 x4775))
(assert (= x6010 (x6140 (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291))))
(assert (= x8394 (x6212 (x6207 x8247 x2495 x8394 x2135 x4427 x5325))))
(assert (x4101 x3055))
(assert (= x4234 (and x6126 x3003)))
(assert (not (x2674 (x658 x5857 x2673 x2267 x6794))))
(assert (x4101 x4805))
(assert (x2371 x336))
(assert (< 10000 (x4851 x2493 x2302 x1174 x167 x5879 x5735 x8393)))
(assert (x4101 x4752))
(assert (= 1 (x5740 (x8452 64 1 x7211))))
(assert (x4101 x3535))
(assert (= x4522 (x5740 (x5018 x2327 x4522 x2439 x7183 x8482))))
(assert (x4101 x906))
(assert (x4101 x4897))
(assert (= (x3391 14609135308879574245051756109060786979925523914932377087145621868633940557824) 0))
(assert (= x2189 (and x2691 x6910)))
(assert (= (x4519 (x8452 64 x5625 7)) 64))
(assert (x4101 x678))
(assert (=> (<= x649 10000) (= (x3391 x649) 0)))
(assert (x4101 x1154))
(assert (not (x2674 (x8452 64 x4936 0))))
(assert (= x8445 (and x3807 x1617)))
(assert (x4101 x3121))
(assert (= x8314 (and x6537 (not x7144))))
(assert (x5391 x6795))
(assert (x4101 x8206))
(assert (= (and x1989 x7711) x5142))
(assert (= (x4519 (x8452 64 x518 (ite (<= x3485 32) x2064 (ite (>= 64 x3485) x4186 (ite (>= 96 x3485) x6866 (ite (<= x3485 128) x49 (ite (<= x3485 160) x6094 (ite (<= x3485 192) x8413 x749)))))))) 64))
(assert (x4101 x7681))
(assert (x4101 x5662))
(assert (x4101 x2724))
(assert (x4101 x5283))
(assert (x2496 x2879))
(assert (not (x2674 (x658 x8066 x7449 x526 x4927))))
(assert (x4101 x7757))
(assert (x4101 x2960))
(assert (x4101 x5367))
(assert (=> (<= x5825 10000) (= (x3391 x5825) 0)))
(assert (= (x3391 (x8452 64 x8514 36)) (x8452 64 x8514 36)))
(assert (=> (>= 10000 x2339) (= 0 (x3391 x2339))))
(assert (x4101 x6738))
(assert (x4101 x5551))
(assert (= (x3391 1722637450) 0))
(assert (= x8528 (and x662 x359)))
(assert (= (x4519 (x8452 64 x1544 7)) 64))
(assert (=> (<= x1239 10000) (= (x3391 x1239) 0)))
(assert (= (=> (and (= x1340 x2811) (= x3545 x935) (= x1730 x1254) (= x1254 (x639 255 x2869)) (= x6141 x4874) (= x7191 x4112) (= x3076 0) (= 2 x70)) x402) x3705))
(assert (x4101 x1732))
(assert (x4101 x4065))
(assert (x4101 x4433))
(assert (= (x4519 (x6207 x3485 x136 x3977 x352 x6346 x7911)) x3485))
(assert (x4101 x4084))
(assert (x4101 x7898))
(assert (= x8002 (x842 (x5018 x1404 x8231 x7521 x8002 x408))))
(assert (not (x2674 (x658 x4567 x8100 x1458 x7760))))
(assert (= (x6212 (x8452 x8066 x6941 x7545)) x7545))
(assert (x2496 x3909))
(assert (x4101 x2038))
(assert (= x5581 (=> (and (= x4082 2) (= x8014 x4213) (= x4422 x1648) (= x220 x484) (= x40 x5568) (= x826 x8359) (= x4445 x5870) (= x3595 x2581) (= x2025 x4760) (= x484 (x639 255 x573)) (= x2908 x2533) (= x3365 x8309) (= x1196 x2695) (= x7526 x2571) (= x1892 x7632) (= x1395 x8070) (= 0 x475)) x1170)))
(assert (x2371 x2406))
(assert (x4101 x7600))
(assert (= (and x7836 (not x5206)) x2311))
(assert (= (x6140 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817)) x7817))
(assert (=> (<= x267 10000) (= 0 (x3391 x267))))
(assert (= (x6212 (x8452 64 x1459 100)) 100))
(assert (x4101 x5460))
(assert (x4101 x3432))
(assert (x4101 x4864))
(assert (x4101 x4237))
(assert (x4101 x4201))
(assert (= x3858 (and x3749 (not x3028))))
(assert (= (and x1486 x4370) x5923))
(assert (= (x4955 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961)) x2476))
(assert (=> (>= 10000 x2677) (= (x3391 x2677) 0)))
(assert (= (x8452 64 x4024 6) (x3391 (x8452 64 x4024 6))))
(assert (not (x2674 (x658 x1404 x6591 x1588 x6117))))
(assert (= (and x3575 x8600) x5436))
(assert (= (and x1355 x8288) x5692))
(assert (x4101 x859))
(assert (x2496 x257))
(assert (x4101 x4444))
(assert (= (x6207 x8236 x5618 x2344 x5489 x7255 x1096) (x3391 (x6207 x8236 x5618 x2344 x5489 x7255 x1096))))
(assert (= x6628 (x8370 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075))))
(assert (x725 x209))
(assert (=> (>= 10000 x6722) (= 0 (x3391 x6722))))
(assert (x4101 x2125))
(assert (x4101 x13))
(assert (x4101 x3291))
(assert (= (and x5243 x7047) x8065))
(assert (x2496 x5409))
(assert (= (x3114 x4567 x2079) (x3391 (x3114 x4567 x2079))))
(assert (=> (>= 10000 x7871) (= (x3391 x7871) 0)))
(assert (x4101 x2575))
(assert (> (x8452 64 x2743 36) 10000))
(assert (= (x5018 x6609 x6555 x8300 x3110 x7629) (x3391 (x5018 x6609 x6555 x8300 x3110 x7629))))
(assert (x5391 x4980))
(assert (x4101 x7234))
(assert (= x7084 (and x5312 (not x3310))))
(assert (x4101 x7007))
(assert (= x8100 (x5740 (x658 x4567 x8100 x1458 x7760))))
(assert (= (x6212 (x4851 x2327 x2083 x5236 x1592 x2560 x6808 x6190)) x5236))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x6137 36)))
(assert (x5391 x5260))
(assert (x4101 x6455))
(assert (x4101 x8151))
(assert (=> (<= x5616 10000) (= 0 (x3391 x5616))))
(assert (x4101 x1609))
(assert (x4101 x202))
(assert (= (x3391 1341992515) 0))
(assert (x4101 x4019))
(assert (x4101 x2411))
(assert (x4101 x2605))
(assert (x4101 x5002))
(assert (x4101 x1862))
(assert (x5391 x3133))
(assert (= (and (not x8517) x791) x7277))
(assert (x4101 x2794))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x6609 x6555 x8300 x3110 x7629)))
(assert (x4101 x1038))
(assert (x5528 x2787))
(assert (x4101 x7472))
(assert (=> (>= 10000 x3977) (= 0 (x3391 x3977))))
(assert (x4101 x754))
(assert (= x5764 (and x6904 (not x6110))))
(assert (x4101 x6788))
(assert (x3760 x6194 256))
(assert (x4101 x7769))
(assert (x4101 x6121))
(assert (x4101 x8150))
(assert (= (and (not x122) x4877) x7634))
(assert (x4101 x4378))
(assert (= (or (and x3063 x4537) (and x4947 x4504)) x119))
(assert (= (and x6723 x8383) x6593))
(assert (x4101 x1843))
(assert (x3760 x221 256))
(assert (= x5758 (or (and x6830 x3125) (and x5474 x2133))))
(assert (= (and x4138 x2410) x4594))
(assert (x4101 x2756))
(assert (=> (>= 10000 x8122) (= 0 (x3391 x8122))))
(assert (x4101 x2824))
(assert (x2674 1341992515))
(assert (x3481 x5445))
(assert (x4101 x528))
(assert (< 10000 (x3114 32 103)))
(assert (x4101 x4015))
(assert (=> (>= 10000 x5735) (= 0 (x3391 x5735))))
(assert (x4101 x3336))
(assert (x4101 x5399))
(assert (x4101 x5282))
(assert (x4101 x4352))
(assert (=> (>= 10000 x3728) (= 0 (x3391 x3728))))
(assert (x4101 x518))
(assert (x2496 x1311))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x6256 x8388 x5274 x302 x3444 x334 x733)))
(assert (x3760 x573 256))
(assert (x4101 x785))
(assert (= x2612 (and (not x5220) x4372)))
(assert (=> (<= x3170 10000) (= 0 (x3391 x3170))))
(assert (x4101 x8343))
(assert (x4101 x1779))
(assert (x4101 x4088))
(assert (= (x4955 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)) x4719))
(assert (= (and x2861 (not x6619)) x5208))
(assert (x4101 x5292))
(assert (= (x5740 (x8452 64 x4084 12)) x4084))
(assert (= x5456 (x4519 (x3114 x5456 x8164))))
(assert (= x4979 (and x5247 x6353)))
(assert (= x1194 (x8370 (x4851 x6601 x113 x545 x7585 x3241 x1194 x2073))))
(assert (x3760 x4854 32))
(assert (= x7010 (or x4454 x3040)))
(assert (x4101 x380))
(assert (> (x8452 64 x4803 7) 10000))
(assert (=> (>= 10000 x4201) (= 0 (x3391 x4201))))
(assert (x4101 x2609))
(assert (x4101 x1614))
(assert (= x7709 (and x6356 (not x3511))))
(assert (= (and x7501 (not x6405)) x2645))
(assert (= (x5018 x6256 x112 x2259 x6535 x7432) (x3391 (x5018 x6256 x112 x2259 x6535 x7432))))
(assert (= x2509 (and x2350 (not x8415))))
(assert (= (x4955 (x6207 x8066 x1862 x2624 x99 x6072 x1363)) x6072))
(assert (= x5830 (and (not x6082) x3622)))
(assert (x4101 x2821))
(assert (= x5744 (and x716 x6181)))
(assert (x4101 x7698))
(assert (x725 x2478))
(assert (x4101 x267))
(assert (= x4047 (x842 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803))))
(assert (= x448 (and x18 (not x5607))))
(assert (x4101 x4740))
(assert (x4101 x222))
(assert (x4101 x4802))
(assert (x2371 x4255))
(assert (x725 x1610))
(assert (= x1350 (and x1240 x4885)))
(assert (= 64 (x4519 (x8452 64 x4024 2))))
(assert (= (or x6462 x1673 x8184 x6294 x841 x3234) x4079))
(assert (=> (>= 10000 x5936) (= (x3391 x5936) 0)))
(assert (x4101 x1715))
(assert (x5391 x4783))
(assert (x4101 x3523))
(assert (x4101 x7251))
(assert (x5391 x1071))
(assert (x4101 x1689))
(assert (= x3906 (and x5332 (not x3569))))
(assert (< 10000 (x3114 x4567 x2079)))
(assert (= (=> (and (= 0 x5713) (= x1115 true) (= false x3443)) x2437) x2087))
(assert (= (and x7571 (not x7159)) x3153))
(assert (x4101 x3857))
(assert (x4101 x1523))
(assert (x4101 x2700))
(assert (= x929 (and (not x5878) x6182)))
(assert (= x3456 (x842 (x5018 x6601 x1538 x2378 x3456 x2871))))
(assert (not (x2674 (x658 x6609 x5108 x6949 x5158))))
(assert (=> (>= 10000 x670) (= (x3391 x670) 0)))
(assert (x8137 x386))
(assert (=> (>= 10000 x7817) (= 0 (x3391 x7817))))
(assert (x5189 x4850 2))
(assert (x4101 x7087))
(assert (x4101 x4547))
(assert (=> (<= x5753 10000) (= (x3391 x5753) 0)))
(assert (= x717 (x4117 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717))))
(assert (=> (<= x4015 10000) (= (x3391 x4015) 0)))
(assert (x4101 x5728))
(assert (x4101 x8311))
(assert (= x7829 (and x8314 x4375)))
(assert (=> (>= 10000 x8331) (= 0 (x3391 x8331))))
(assert (x4101 x4924))
(assert (x4101 x5893))
(assert (=> (>= 10000 x3579) (= (x3391 x3579) 0)))
(assert (x4101 x7258))
(assert (< (x3114 x8105 x4237) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2674 (x4851 x6655 x5296 x2596 x4047 x4868 x6621 x5803))))
(assert (= (x3391 (x8452 x3728 x6829 x267)) (x8452 x3728 x6829 x267)))
(assert (= (x6212 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865)) x3182))
(assert (= (x4519 (x3114 32 x3565)) 32))
(assert (x4101 x1812))
(assert (x4101 x6590))
(assert (= (x3391 (x8452 64 x6137 36)) (x8452 64 x6137 36)))
(assert (= (and (not x2358) x6325) x1642))
(assert (x3760 x2869 256))
(assert (x4101 x1172))
(assert (x4101 x8271))
(assert (x725 x2839))
(assert (= 0 (x3391 65535)))
(assert (x4101 x2008))
(assert (= x3554 (=> (and (= x4921 x4423) (= x1606 x3920) (= x2565 x1504) (= x3471 x7210) (= x5697 x2949)) x7287)))
(assert (= (x3114 32 x5769) (x3391 (x3114 32 x5769))))
(assert (= x3792 (x4955 (x6207 x2493 x4433 x971 x4380 x3792 x6585))))
(assert (=> (>= 10000 x5865) (= (x3391 x5865) 0)))
(assert (= 0 (x3391 115792089237316195423570985008687907853269984665640564039457584007913129639841)))
(assert (= x3728 (x4519 (x658 x3728 x4680 x8449 x7889))))
(assert (= (and (not x8485) x76) x3884))
(assert (= x201 (and (not x7624) x2692)))
(assert (= (x4519 (x8452 64 x6260 3)) 64))
(assert (x4101 x4044))
(assert (= x4653 (and (not x1738) x169)))
(assert (x4101 x4149))
(assert (x4101 x3155))
(assert (x4101 x6963))
(assert (x4101 x3926))
(assert (x2496 x1139))
(assert (x8137 x7050))
(assert (= (x5740 (x6207 x3728 x6176 x1012 x365 x1345 x6842)) x6176))
(assert (= x389 (x6140 (x4002 x8247 x2040 x2917 x1493 x4201 x7167 x389 x3708))))
(assert (x4101 x3655))
(assert (not (x2674 (x5018 x8276 x2797 x2069 x4860 x7334))))
(assert (< 10000 (x8452 x8276 x6717 x3740)))
(assert (=> (>= 10000 x540) (= (x3391 x540) 0)))
(assert (= (x3391 (x8452 64 x6260 3)) (x8452 64 x6260 3)))
(assert (x4101 x4255))
(assert (x4101 x1327))
(assert (= x1109 (x6212 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070))))
(assert (x4101 x3252))
(assert (x4101 x3480))
(assert (x3760 x6902 256))
(assert (x4101 x2317))
(assert (= x2426 (and x4776 (not x5964))))
(assert (x4101 x993))
(assert (= (=> (= x768 (= 0 x2281)) (and (=> (and x768 (and (= x2879 x26) (= false x811) (= x2741 true))) x395) (=> (and (= x1349 (< x2879 64)) (not x768)) (and (=> (and (and (= x2607 false) (= true x6255) (= x26 0)) x1349) x395) (=> (and (and (= x8080 x3177) (= x1432 354) (= x1579 x8252) (= x5590 x2395) (= x3849 x5818) (= x1386 x7074) (= x7135 x2716) (= x5008 x6430) (= (x2940 290) x1626) (= x5135 x1626) (= x4896 x1684) (= x5762 x8147) (= (x2940 322) x6259) (= x12 x6549) (= x6769 x7732) (= x7820 x6660) (= x2904 x3769)) (not x1349)) x4656))))) x3086))
(assert (=> (<= x3051 10000) (= 0 (x3391 x3051))))
(assert (= (x842 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263)) x7944))
(assert (x4101 x358))
(assert (x4101 x2220))
(assert (< (x658 x7483 x3123 x2877 x670) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4057 x4188))
(assert (x4101 x8080))
(assert (not (x2674 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814))))
(assert (x4101 x5354))
(assert (= (x3391 (x8452 x7483 x8282 x5639)) (x8452 x7483 x8282 x5639)))
(assert (= x5586 (x5740 (x8452 64 x5586 100))))
(assert (= (or x7396 x2990) x4372))
(assert (not (x2674 (x658 x3485 x166 x719 x2339))))
(assert (x4101 x1507))
(assert (x4101 x7861))
(assert (x3481 x8246))
(assert (x4101 x6256))
(assert (= (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717) (x3391 (x4002 x6655 x6946 x6063 x8606 x2308 x2197 x428 x717))))
(assert (x3760 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x1876 x4807) (= 2 x187) (= x2558 x2081) (= x6437 x279) (= x6157 (x639 255 x5273)) (= x3286 x7912) (= x7673 x7332) (= x2134 false) (= x2159 true) (= x4112 x6729) (= x3545 x2095) (= 0 x3909) (= x6194 x7105) (= x452 x4936) (= x6141 x4534) (= x8353 x4043) (= 0 x6443) (= x1253 x6157) (= x1794 x5076)) x4390) x6485))
(assert (= x4766 (and x5832 x2850)))
(assert (= (and (not x1349) x3346) x3661))
(assert (= (x4519 (x8452 x6256 x5658 x7172)) x6256))
(assert (=> (>= 10000 x3277) (= (x3391 x3277) 0)))
(assert (x4101 x6437))
(assert (x4101 x3207))
(assert (not (x2674 (x3114 x7301 x907))))
(assert (x4101 x1293))
(assert (= (x6212 (x5018 x8276 x2797 x2069 x4860 x7334)) x2069))
(assert (x4101 x4023))
(assert (= (x4519 (x8452 64 x666 2)) 64))
(assert (= (or x686 x6611) x3226))
(assert (x4101 x7500))
(assert (x4057 x3786))
(assert (x5391 x6321))
(assert (x4101 x8069))
(assert (x4101 x7723))
(assert (not (x2674 (x4002 x8276 x1533 x3182 x422 x4325 x8381 x3422 x7865))))
(assert (= x4282 (x4955 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613))))
(assert (= (x6212 (x8452 64 x666 1)) 1))
(assert (x2496 x1135))
(assert (= x2550 (x5740 (x4851 x7301 x2550 x3025 x5229 x2476 x1723 x5961))))
(assert (= x4552 (x5740 (x8452 x8236 x4552 x7152))))
(assert (x4101 x5787))
(assert (x4101 x6006))
(assert (x4101 x7843))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x4803 7)))
(assert (x4101 x1766))
(assert (= (and x1727 x7669) x5395))
(assert (x4101 x2783))
(assert (= x6597 (or x4331 x1541 x5071 x637 x3949 x1557)))
(assert (= x1881 (or x1436 (and x7222 (not x1322)))))
(assert (x725 x2791))
(assert (x4101 x2452))
(assert (x4101 x4420))
(assert (x4101 x5268))
(assert (= (and x7088 (not x3589)) x1183))
(assert (= x6535 (x842 (x5018 x6256 x112 x2259 x6535 x7432))))
(assert (= x1480 (or (and x1679 x4837) (and x1790 x6854))))
(assert (= x4075 (x4117 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075))))
(assert (x4101 x4717))
(assert (x4101 x2892))
(assert (=> (<= x1154 10000) (= 0 (x3391 x1154))))
(assert (x4101 x4282))
(assert (x4101 x2712))
(assert (x4101 x1400))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x5128 12)))
(assert (not (x2674 (x8452 64 x110 11))))
(assert (= (x6207 x5857 x681 x1632 x5447 x2128 x1530) (x3391 (x6207 x5857 x681 x1632 x5447 x2128 x1530))))
(assert (= x5827 (x5740 (x8452 x6609 x5827 x1042))))
(assert (= (x4519 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825)) x4567))
(assert (= (=> (and (= 0 x4209) (= false x3609) (= x7730 true)) x3910) x3251))
(assert (not (x2674 (x658 x5456 x3223 x2642 x3866))))
(assert (x4101 x2518))
(assert (x4101 x1386))
(assert (x4101 x4618))
(assert (x4101 x2798))
(assert (x4101 x8381))
(assert (x4101 x5688))
(assert (x4101 x6496))
(assert (x5391 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x3481 x1334))
(assert (x4101 x212))
(assert (= (x5740 (x8452 64 x2743 36)) x2743))
(assert (x4101 x1243))
(assert (= x3993 (or x3292 x2612 x834)))
(assert (x4101 x8521))
(assert (x4101 x5101))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3114 32 x238)))
(assert (x4101 x6577))
(assert (= (x4955 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336)) x6489))
(assert (x4101 x5865))
(assert (=> (>= 10000 x613) (= 0 (x3391 x613))))
(assert (=> (<= x7858 10000) (= 0 (x3391 x7858))))
(assert (= (x842 (x658 x3728 x4680 x8449 x7889)) x7889))
(assert (= x6440 (and (not x741) x1097)))
(assert (not (x2674 (x658 x7483 x3123 x2877 x670))))
(assert (= x4454 (or x1755 x7004)))
(assert (x4101 x331))
(assert (x5391 x386))
(assert (= (x842 (x4002 x7483 x6664 x854 x134 x7615 x6628 x7022 x4075)) x134))
(assert (x4101 x8475))
(assert (= x1893 (and x7340 x4393)))
(assert (= (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239) (x3391 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239))))
(assert (= x8286 (or (and x4397 x5320) (and x1078 x2388))))
(assert (x3760 x1610 256))
(assert (x4101 x5349))
(assert (x4101 x7460))
(assert (x4101 x5619))
(assert (= x1170 (=> (and (or x5973 (not x5973)) (= x5973 (= x475 0))) x68)))
(assert (x4101 x2407))
(assert (x4101 x8064))
(assert (x3760 x1334 32))
(assert (x4101 x2920))
(assert (x4101 x1361))
(assert (x4101 x7808))
(assert (= x998 (and x6077 x5932)))
(assert (= x1798 (and x3125 (not x6830))))
(assert (x4101 x2233))
(assert (x4101 x2135))
(assert (x3760 x1653 256))
(assert (x4101 x7725))
(assert (not (x2674 (x8452 x6609 x5827 x1042))))
(assert (= (=> (and (= (= x4418 0) x4293) (or x4293 (not x4293))) x2494) x8354))
(assert (x4101 x4922))
(assert (x4101 x6719))
(assert (= x1848 (and x7120 x8192)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6207 x6609 x665 x2145 x377 x444 x8061)))
(assert (x4101 x795))
(assert (x4101 x7592))
(assert (= (and x4776 x5964) x2333))
(assert (= x3290 (or x7279 x4205 x7994 x4180 x2189)))
(assert (x4101 x2730))
(assert (= (x6212 (x8452 64 x2677 11)) 11))
(assert (= (or x7025 (and x8313 (not x7636))) x7489))
(assert (not (x2674 (x658 x8105 x1516 x7217 x2649))))
(assert (x4101 x1813))
(assert (x4101 x2455))
(assert (x4101 x4606))
(assert (=> (<= x8276 10000) (= (x3391 x8276) 0)))
(assert (= (x3391 34591783479076665078880830389440322441076534786459098783165778951140825654127) 0))
(assert (x4101 x7629))
(assert (x4101 x6781))
(assert (= (x842 (x5018 x2493 x6149 x1732 x3117 x8016)) x3117))
(assert (x4101 x3882))
(assert (x3760 x1816 256))
(assert (x4101 x3089))
(assert (x4101 x5448))
(assert (x4101 x384))
(assert (= 1 (x5740 (x8452 64 1 x3502))))
(assert (x4101 x5839))
(assert (x4101 x1319))
(assert (x4101 x7674))
(assert (x4101 x7871))
(assert (< 10000 (x4851 x3485 x4804 x3995 x6518 x6463 x1462 x3814)))
(assert (x4101 x1137))
(assert (= x1201 (and x8410 (not x7747))))
(assert (=> (>= 10000 x7301) (= 0 (x3391 x7301))))
(assert (not (x2674 (x8452 64 x6760 (ite (<= x954 32) x664 (ite (<= x954 64) x2514 (ite (<= x954 96) x5577 (ite (<= x954 128) x1131 (ite (<= x954 160) x5628 (ite (<= x954 192) x1262 x6705))))))))))
(assert (= (or x2324 x1183) x2969))
(assert (x4101 x7577))
(assert (=> (>= 10000 x8457) (= (x3391 x8457) 0)))
(assert (= (x658 x8247 x335 x6736 x939) (x3391 (x658 x8247 x335 x6736 x939))))
(assert (x4101 x7651))
(assert (x4101 x6390))
(assert (= (x5740 (x8452 64 x2041 36)) x2041))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5018 x1404 x8231 x7521 x8002 x408)))
(assert (x4101 x6553))
(assert (not (x2674 (x5018 x5456 x3051 x6313 x5806 x1348))))
(assert (=> (>= 10000 x3740) (= (x3391 x3740) 0)))
(assert (= x2063 (or (and (not x1414) x7962) (and x2656 (not x5248)) (and x7410 (not x3442)))))
(assert (x2496 x6009))
(assert (x2674 310283853))
(assert (= x5318 x7220))
(assert (x4101 x8025))
(assert (not (x2674 (x8452 64 x7055 6))))
(assert (x4101 x3533))
(assert (= x8498 (=> (and (= true x5509) (= false x3342) (= x2533 0)) x5581)))
(assert (> (x3114 x7483 x7006) 10000))
(assert (x4101 x7227))
(assert (not (x2674 (x8452 64 x1648 3))))
(assert (x4101 x4337))
(assert (x4101 x3745))
(assert (x25 32 x2663))
(assert (x4101 x4295))
(assert (= (x5740 (x3114 32 103)) 103))
(assert (= 0 (x3391 48755886422350550937420582033662272622158303343164848365600209189876434731008)))
(assert (x4101 x6794))
(assert (=> (>= 10000 x7671) (= 0 (x3391 x7671))))
(assert (= 0 (x3391 3521034783)))
(assert (x2496 x6041))
(assert (= (x6207 x4567 x5929 x4238 x5321 x5266 x4424) (x3391 (x6207 x4567 x5929 x4238 x5321 x5266 x4424))))
(assert (= x5867 (=> (and (or (and (and (= x609 x8360) (= (- x392 x5955) x4017) (= x5924 x1787) (= x5955 (ite (= 0 x5354) x5135 0)) (= (+ x7369 x5955) x609) (= x7398 x3991) (<= x609 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x7369 x5955) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x6799 x666) x7369) (<= 0 x609) (= x3042 x5354) (= (x2024 x7820) x392) (= x1192 x3135) (= x3334 x6963)) x2037) (and (and (= x1787 x5924) (= x3334 x6963) (= x1192 x3135) (= x7398 x3991) (= x3042 x5354)) (not x2037))) (= x2037 (= 0 x5354))) x2085)))
(assert (x725 x5232))
(assert (= x7760 (x842 (x658 x4567 x8100 x1458 x7760))))
(assert (x4910 x826))
(assert (x4101 x147))
(assert (x4101 x5511))
(assert (x4101 x653))
(assert (x4101 x2995))
(assert (x4101 x1558))
(assert (x4101 x1348))
(assert (x4101 x2348))
(assert (< (x4002 x8105 x649 x4144 x41 x3838 x7926 x6010 x3291) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x2009))
(assert (= (and (not x6952) x5227) x5538))
(assert (x3760 x5260 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x3445))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x8066 x6941 x7545)))
(assert (x4101 x6899))
(assert (=> (<= x5710 10000) (= (x3391 x5710) 0)))
(assert (not (x2674 (x8452 64 x1648 5))))
(assert (= (and x246 (not x1961)) x5178))
(assert (x4101 x7363))
(assert (x4101 x4450))
(assert (= (=> (and (= x294 x261) (= x2947 true) (= x2947 x6181) (= false x4228) (= x3360 x7872) (= x7901 x3256) (= false x8504) (= true x6890)) x3664) x6679))
(assert (= x2015 (and x5078 x3232)))
(assert (x4101 x1182))
(assert (x4101 x3239))
(assert (< 10000 (x5018 x6609 x6555 x8300 x3110 x7629)))
(assert (= x1306 x6742))
(assert (x4101 x3064))
(assert (= (x4519 (x3114 32 x5769)) 32))
(assert (= (and (not x3368) x620) x7124))
(assert (x4101 x2900))
(assert (x4101 x5175))
(assert (x4101 x7660))
(assert (x4101 x1221))
(assert (x4101 x2719))
(assert (x725 x2571))
(assert (=> (>= 10000 x1779) (= (x3391 x1779) 0)))
(assert (< 10000 (x8452 64 x6760 (ite (<= x8247 32) x7566 (ite (<= x8247 64) x4627 (ite (>= 96 x8247) x7341 (ite (<= x8247 128) x4092 (ite (>= 160 x8247) x6845 (ite (<= x8247 192) x692 x7767)))))))))
(assert (x4101 x1976))
(assert (x4101 x6805))
(assert (x4101 x2618))
(assert (= (x4519 (x8452 64 x4024 6)) 64))
(assert (x4101 x1490))
(assert (=> (<= x5321 10000) (= 0 (x3391 x5321))))
(assert (= (and x1848 (not x5786)) x5435))
(assert (= (or x8590 x4692) x2399))
(assert (x4101 x3879))
(assert (x4101 x3190))
(assert (= (and x151 x2867) x984))
(assert (< 10000 (x8452 x8066 x6941 x7545)))
(assert (x4101 x7146))
(assert (x4101 x1091))
(assert (x4101 x5794))
(assert (= x4161 (or x1964 x1288 x1513 x5185 x5930)))
(assert (= (x8452 64 x4807 3) (x3391 (x8452 64 x4807 3))))
(assert (x4101 x6102))
(assert (x4101 x8054))
(assert (< 10000 (x3114 x6609 x6160)))
(assert (= x5431 (or x3775 x3 x7750)))
(assert (x5391 x1610))
(assert (x4101 x3097))
(assert (x4101 x4675))
(assert (x4101 x7050))
(assert (= x4948 (and x4540 x2374)))
(assert (x4101 x5031))
(assert (x3760 x6 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x725 x208))
(assert (x4101 x1487))
(assert (= 64 (x4519 (x8452 64 x518 (ite (<= x1404 32) x320 (ite (>= 64 x1404) x4133 (ite (>= 96 x1404) x1002 (ite (>= 128 x1404) x4746 (ite (>= 160 x1404) x8578 (ite (<= x1404 192) x996 x7067))))))))))
(assert (x3760 x2787 128))
(assert (=> (>= 10000 x8494) (= (x3391 x8494) 0)))
(assert (= (x4519 (x8452 64 x983 6)) 64))
(assert (x4101 x5561))
(assert (x4101 x1213))
(assert (x2674 107317874183463056701504662589741776198067464202343767264461527615735374807040))
(assert (not (x2674 (x658 x3728 x4680 x8449 x7889))))
(assert (= (x5740 (x6207 x6256 x690 x1813 x3211 x2826 x8101)) x690))
(assert (x4101 x7061))
(assert (x4101 x4016))
(assert (x4101 x6275))
(assert (= (and x6835 x8235) x892))
(assert (= (x4519 (x3114 x3728 x1784)) x3728))
(assert (= (and x7356 (not x8189)) x3881))
(assert (> (x658 x8066 x7449 x526 x4927) 10000))
(assert (= (=> (= x7017 (< 0 (ite (= 0 x8226) x8226 1))) (and (=> (and (not x7017) (and (= x898 (= 0 x2672)) (or (not x898) x898))) x4989) (=> x7017 x8026))) x6761))
(assert (= (x8452 64 x6515 6) (x3391 (x8452 64 x6515 6))))
(assert (< 10000 (x8452 64 1 x7211)))
(assert (x4101 x7172))
(assert (not (x2674 (x8452 64 x8514 36))))
(assert (x4101 x4909))
(assert (x725 x4179))
(assert (= x1143 (or x8114 x2774 x6286 x823 (and x430 x1428) (and x2881 x4713) x2347)))
(assert (= x3662 x2966))
(assert (x4101 x6543))
(assert (x4101 x4640))
(assert (= (and (not x7916) x3731) x4331))
(assert (x4101 x3274))
(assert (x4101 x8446))
(assert (= (x842 (x5018 x3485 x4823 x5174 x8145 x7574)) x8145))
(assert (x4101 x711))
(assert (not (x2674 (x3114 x8105 x4237))))
(assert (= (and (not x1499) x453) x1102))
(assert (= x954 (x4519 (x3114 x954 x2658))))
(assert (= (x8452 x5857 x8356 x6054) (x3391 (x8452 x5857 x8356 x6054))))
(assert (=> (<= x4662 10000) (= (x3391 x4662) 0)))
(assert (x3760 x1294 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x2198))
(assert (x4101 x5231))
(assert (x4101 x5806))
(assert (x4101 x5330))
(assert (=> (>= 10000 x6176) (= 0 (x3391 x6176))))
(assert (x4101 x431))
(assert (x4101 x498))
(assert (= x8204 x1764))
(assert (x5391 x4409))
(assert (x4101 x7523))
(assert (x4101 x2281))
(assert (x4101 x8508))
(assert (x4101 x4703))
(assert (x4101 x6103))
(assert (= x5769 (x5740 (x3114 32 x5769))))
(assert (=> (>= 10000 x708) (= (x3391 x708) 0)))
(assert (not (x2674 (x8452 64 x666 1))))
(assert (= x4631 (and (not x4322) x3118)))
(assert (x4101 x1734))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4002 x2327 x2294 x5564 x6374 x4719 x6722 x869 x385)))
(assert (x4101 x5848))
(assert (x4101 x3793))
(assert (= x1773 (or x3733 x1741 x399)))
(assert (x4101 x407))
(assert (x4101 x3965))
(assert (x25 32 (ite (not (= 0 x957)) 1 0)))
(assert (not (x2674 (x8452 64 x518 (ite (<= x1404 32) x320 (ite (>= 64 x1404) x4133 (ite (<= x1404 96) x1002 (ite (<= x1404 128) x4746 (ite (>= 160 x1404) x8578 (ite (>= 192 x1404) x996 x7067))))))))))
(assert (= x2755 x6674))
(assert (= x3947 (and (not x3796) x2636)))
(assert (= (x3391 (x5018 x8276 x2797 x2069 x4860 x7334)) (x5018 x8276 x2797 x2069 x4860 x7334)))
(assert (= x1380 (and (not x3100) x1702)))
(assert (= (x6212 (x8452 x8247 x1044 x6011)) x6011))
(assert (= (and x8209 x3319) x7029))
(assert (=> (>= 10000 x3866) (= 0 (x3391 x3866))))
(assert (x4910 x7921))
(assert (= x2982 (and x7012 x1247)))
(assert (= x6084 (x6140 (x4002 x1404 x1374 x1657 x8526 x4282 x3497 x6084 x2613))))
(assert (x4101 x7544))
(assert (x4101 x2596))
(assert (= x6358 (or x5144 x6546)))
(assert (= x5966 (=> (and (= x6269 (= 0 x798)) (or x6269 (not x6269))) x3312)))
(assert (=> (<= x1458 10000) (= (x3391 x1458) 0)))
(assert (x4101 x1483))
(assert (x4101 x7369))
(assert (=> (<= x3148 10000) (= 0 (x3391 x3148))))
(assert (x8137 x4529))
(assert (= x2615 (x5740 (x4851 x4567 x2615 x1945 x5326 x1899 x3401 x5825))))
(assert (x4101 x5246))
(assert (x4101 x4297))
(assert (= x1456 (and x7429 x4520)))
(assert (x4101 x3143))
(assert (x4101 x137))
(assert (x4101 x1283))
(assert (x4101 x3468))
(assert (x4101 x3521))
(assert (x4101 x4844))
(assert (= (x4955 (x6207 x5857 x681 x1632 x5447 x2128 x1530)) x2128))
(assert (x4101 x3721))
(assert (x4101 x218))
(assert (= x333 (and x904 x118)))
(assert (x4101 x3417))
(assert (= x5261 (and x5782 x5029)))
(assert (= (x4519 (x8452 64 x4803 3)) 64))
(assert (x2496 x7288))
(assert (= (and x1961 x246) x4233))
(assert (x725 x7050))
(assert (x4101 x995))
(assert (x725 x1712))
(assert (= (x6212 (x8452 x3728 x6829 x267)) x267))
(assert (x4101 x5828))
(assert (=> (<= x526 10000) (= 0 (x3391 x526))))
(assert (x3760 x6795 256))
(assert (x4101 x8199))
(assert (= (and x4462 (not x898)) x6527))
(assert (x2674 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (not (x2674 (x8452 64 x8607 12))))
(assert (= (and (not x8192) x7120) x3725))
(assert (= (x4519 (x5018 x954 x8198 x1612 x6014 x4062)) x954))
(assert (x4101 x659))
(assert (x4101 x8443))
(assert (x4101 x6623))
(assert (x4101 x4232))
(assert (x4101 x6320))
(assert (x4101 x6507))
(assert (= (x4519 (x8452 x5857 x8356 x6054)) x5857))
(assert (= 64 (x4519 (x8452 64 x4084 12))))
(assert (x8137 x1653))
(assert (= (x6212 (x8452 64 x6760 (ite (<= x8247 32) x7566 (ite (<= x8247 64) x4627 (ite (<= x8247 96) x7341 (ite (>= 128 x8247) x4092 (ite (>= 160 x8247) x6845 (ite (>= 192 x8247) x692 x7767)))))))) (ite (<= x8247 32) x7566 (ite (>= 64 x8247) x4627 (ite (<= x8247 96) x7341 (ite (>= 128 x8247) x4092 (ite (<= x8247 160) x6845 (ite (>= 192 x8247) x692 x7767))))))))
(assert (= x424 (x842 (x658 x8276 x8404 x5313 x424))))
(assert (< 10000 (x658 x3485 x166 x719 x2339)))
(assert (= (and x5063 (not x6257)) x3984))
(assert (x4101 x8242))
(assert (not (x2674 (x4002 x954 x7976 x8426 x7944 x3363 x4595 x6839 x6263))))
(assert (= x1239 (x4117 (x4002 x4567 x7079 x2685 x1130 x761 x8444 x2366 x1239))))
(assert (= (and x7142 x406) x541))
(assert (< 10000 (x8452 64 x4417 6)))
(assert (x4101 x587))
(assert (= (and x6707 (not x7690)) x18))
(assert (= (and (not x8288) x1355) x4889))
(assert (= (ite (>= 32 x954) x664 (ite (>= 64 x954) x2514 (ite (<= x954 96) x5577 (ite (<= x954 128) x1131 (ite (<= x954 160) x5628 (ite (>= 192 x954) x1262 x6705)))))) (x6212 (x8452 64 x6760 (ite (<= x954 32) x664 (ite (<= x954 64) x2514 (ite (>= 96 x954) x5577 (ite (<= x954 128) x1131 (ite (>= 160 x954) x5628 (ite (>= 192 x954) x1262 x6705))))))))))
(assert (x4101 x7496))
(assert (x4101 x7038))
(assert (> (x8452 64 x4417 36) 10000))
(assert (x725 x1314))
(assert (x2674 29244376827073035548771643948814531551534385112760475998805679327281764368384))
(assert (x4101 x7729))
(assert (= x4326 (=> (= x2517 (= x3518 0)) (and (=> (and (and (= (> x4962 3) x6082) (= (x6360 x8412) x4962) (<= x4962 255) (= (x8452 64 x2677 11) x8412)) x2517) (and (=> (and x6082 (and (= x1830 true) (= false x7100) (= 36 x5253))) x959) (=> (and (= (= x4962 2) x1577) (not x6082)) (and (=> (and (and (= true x1877) (= 4 x5253) (= x669 false)) (not x1577)) x959) (=> (and x1577 (and (= x4878 (x8452 64 1 x7211)) (>= 65535 x1648) (= x7211 (x8452 64 x1648 4)) (= (= x6781 0) x7047) (= x262 (x924 x4878)))) (and (=> (and x7047 (= x1066 x262)) x1944) (=> (and (= (< x6781 x262) x8045) (not x7047)) (and (=> (and x8045 (and (= x8127 false) (= 4 x5253) (= true x6528))) x959) (=> (and (= x6781 x1066) (not x8045)) x1944))))))))) (=> (and (and (= false x5584) (= true x7542) (= x5253 4)) (not x2517)) x959)))))
(assert (x4101 x2759))
(assert (= (and x3273 (not x4836)) x4965))
(assert (=> (<= x3104 10000) (= (x3391 x3104) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x3728 x6829 x267)))
(assert (x4101 x1071))
(assert (x4101 x7872))
(assert (x4101 x8375))
(assert (x4101 x884))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 x6256 x5658 x7172)))
(assert (< 10000 (x3114 x7301 x907)))
(assert (= (x3391 (x8452 64 x6760 (ite (>= 32 x954) x664 (ite (>= 64 x954) x2514 (ite (<= x954 96) x5577 (ite (>= 128 x954) x1131 (ite (<= x954 160) x5628 (ite (>= 192 x954) x1262 x6705)))))))) (x8452 64 x6760 (ite (>= 32 x954) x664 (ite (>= 64 x954) x2514 (ite (>= 96 x954) x5577 (ite (<= x954 128) x1131 (ite (>= 160 x954) x5628 (ite (>= 192 x954) x1262 x6705)))))))))
(assert (not (x2674 (x8452 64 x5586 100))))
(assert (x4101 x4841))
(assert (x3760 x7762 256))
(assert (x4101 x7515))
(assert (x4101 x6113))
(assert (x4101 x4287))
(assert (=> (<= x1457 10000) (= (x3391 x1457) 0)))
(assert (= (and x7582 x1641) x5078))
(assert (= (x4955 (x6207 x6609 x665 x2145 x377 x444 x8061)) x444))
(assert (x4101 x6800))
(assert (x4101 x7839))
(assert (x4101 x2420))
(assert (=> (>= 10000 x5489) (= (x3391 x5489) 0)))
(assert (= x1613 (x842 (x4851 x5456 x2174 x2104 x1613 x1430 x7968 x7817))))
(assert (x4101 x2486))
(assert (x2496 x7614))
(assert (x2371 x2960))
(assert (x4101 x2078))
(assert (= (x5740 (x5018 x3485 x4823 x5174 x8145 x7574)) x4823))
(assert (x5189 x6101 256))
(assert (x4101 x1020))
(assert (= x6490 (and x8275 x3053)))
(assert (= (or x8369 x3478) x3325))
(assert (= x6485 x6862))
(assert (x4101 x3610))
(assert (x4101 x3888))
(assert (=> (<= x5128 10000) (= (x3391 x5128) 0)))
(assert (x4101 x6798))
(assert (x4101 x5671))
(assert (= x8066 (x4519 (x3114 x8066 x2527))))
(assert (= (x8452 64 x1648 3) (x3391 (x8452 64 x1648 3))))
(assert (=> (>= 10000 x1345) (= 0 (x3391 x1345))))
(assert (= x7803 (and x359 (not x662))))
(assert (x2496 x8148))
(assert (< 10000 (x3114 x6601 x80)))
(assert (x4101 x8380))
(assert (= x6027 x5521))
(assert (=> (>= 10000 x5720) (= 0 (x3391 x5720))))
(assert (< (x3114 32 x3565) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1130) (= 0 (x3391 x1130))))
(assert (= (x3391 1766847064778384329583297500742918515827483896875618958121606201292619776) 0))
(assert (x4101 x5199))
(assert (x5391 32))
(assert (x4101 x2323))
(assert (x4101 x1945))
(assert (= x8036 (x5740 (x4851 x5857 x8036 x6067 x3139 x5936 x3274 x1640))))
(assert (= (x6212 (x8452 64 x7904 36)) 36))
(assert (x4101 x6632))
(assert (= (x8452 64 x518 (ite (<= x3485 32) x2064 (ite (<= x3485 64) x4186 (ite (<= x3485 96) x6866 (ite (<= x3485 128) x49 (ite (>= 160 x3485) x6094 (ite (<= x3485 192) x8413 x749))))))) (x3391 (x8452 64 x518 (ite (>= 32 x3485) x2064 (ite (<= x3485 64) x4186 (ite (>= 96 x3485) x6866 (ite (<= x3485 128) x49 (ite (>= 160 x3485) x6094 (ite (>= 192 x3485) x8413 x749))))))))))
(assert (not (x2674 (x6207 x8276 x7633 x667 x44 x579 x2604))))
(assert (x4101 x2716))
(assert (x4101 x6955))
(assert (=> (<= x3025 10000) (= 0 (x3391 x3025))))
(assert (x4101 x335))
(assert (x2674 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (= (x5740 (x4851 x8247 x5277 x5613 x4924 x3907 x1137 x285)) x5277))
(assert (x4101 x7889))
(assert (x4101 x5831))
(assert (= (x4519 (x8452 64 1 x2328)) 64))
(assert (= x3791 (or x1316 x5168)))
(assert (= (and (not x2666) x1619) x8028))
(assert (x2496 x7577))
(assert (> (x6207 x1404 x1434 x7783 x2653 x69 x8128) 10000))
(assert (x4101 x6760))
(assert (x4101 x1528))
(assert (= (and x2620 x2001) x5021))
(assert (not (x2674 (x3114 x8247 x8500))))
(assert (x4101 x7447))
(assert (> (x3114 32 x5769) 10000))
(assert (x4101 x8556))
(assert (= x4971 (and (not x8277) x5435)))
(assert (x4101 x3231))
(assert (x4101 x971))
(assert (= x637 (or (and x2297 x7415) (and x2549 x2084))))
(assert (=> (>= 10000 x6468) (= 0 (x3391 x6468))))
(assert (< (x3114 x7301 x907) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4101 x7121))
(assert (x4101 x3945))
(assert (x4101 x2476))
(assert (= x8600 (or x5295 x2531)))
(assert (x4101 x5333))
(assert (= (and x1220 x1284) x5290))
(assert (x4101 x4487))
(assert (x4101 x2149))
(assert (x4101 x8135))
(assert (x4101 x7662))
(assert (x4101 x5590))
(assert (x4101 x5958))
(assert (x4101 x5104))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8452 64 x1648 4)))
(assert (= x3728 (x4519 (x4851 x3728 x3277 x5440 x2563 x4438 x287 x3707))))
(assert (=> (>= 10000 x7334) (= (x3391 x7334) 0)))
(assert (x4101 x4921))
(assert (x4101 x6701))
(assert (x725 x3374))
(assert (x4101 x7441))
(assert (= x3531 (x8370 (x4851 x8276 x7560 x3031 x4928 x6461 x3531 x5828))))
(assert (x4101 x4767))
(assert (x4101 x3150))
(assert (x4101 x1668))
(assert (x4101 x5315))
(assert (x4101 x4327))
(assert (= x3632 (x5740 (x4851 x8236 x3632 x1109 x3579 x833 x6115 x5070))))
(assert (x4101 x3909))
(assert (= x2825 (and (not x1352) x4145)))
(assert (= (or (and x8487 x7084) (and x2282 x2915) (and x4894 x3780) (and x7359 x6504) (and x8179 x7511)) x1817))
(assert (x2496 x7938))
(assert (x4101 x4489))
(assert (x4101 x7134))
(assert (= (x6212 (x6207 x3485 x136 x3977 x352 x6346 x7911)) x3977))
(assert (= x3052 (=> (= x8025 (+ 292 x6128)) x4328)))
(assert (x4101 x4613))
(assert (x4101 x722))
(assert (= (x4519 (x8452 x6609 x5827 x1042)) x6609))
(assert (x4101 x6379))
(assert (x4101 x6873))
(assert (x4101 x391))
(assert (=> (>= 10000 x3223) (= (x3391 x3223) 0)))
(assert (not (x2674 (x4002 x5456 x3808 x6889 x3840 x6489 x6407 x6954 x5336))))
(assert (x725 x4818))
(assert (= (x5740 (x8452 64 x1648 5)) x1648))
(assert (= (x5740 (x4851 x8066 x2034 x7192 x1582 x952 x59 x7832)) x2034))
(assert (= x8197 (and x1025 (not x7869))))
(assert (x4101 x6498))
(assert (= x5639 (x6212 (x8452 x7483 x8282 x5639))))
(assert (=> (>= 10000 x1562) (= (x3391 x1562) 0)))
(assert (= (and x1731 (not x3873)) x54))
(assert (x4101 x4007))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4851 x954 x585 x540 x5724 x3612 x557 x1197)))
(assert (=> (>= 10000 x8394) (= 0 (x3391 x8394))))
(assert (= x7004 (and x2115 (not x3911))))
(assert (x4101 x7823))
(check-sat)
(exit)
