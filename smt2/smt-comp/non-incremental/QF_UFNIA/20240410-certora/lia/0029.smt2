(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x2787 () Int)
(declare-fun x617 () Int)
(declare-fun x1032 () Int)
(declare-fun x526 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x1433 () Int)
(declare-fun x1750 () Int)
(declare-fun x1790 () Bool)
(declare-fun x221 () Int)
(declare-fun x2124 () Int)
(declare-fun x1214 () Int)
(declare-fun x1160 () Bool)
(declare-fun x2245 () Int)
(declare-fun x402 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1353 () Int)
(declare-fun x1780 () Int)
(declare-fun x858 () Bool)
(declare-fun x2860 () Int)
(declare-fun x2719 () Int)
(declare-fun x1041 (Int Int) Int)
(declare-fun x3086 () Int)
(declare-fun x2742 () Int)
(declare-fun x2070 () Int)
(declare-fun x1905 () Int)
(declare-fun x3128 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x845 () Bool)
(declare-fun x1076 () Int)
(declare-fun x2053 () Int)
(declare-fun x891 () Bool)
(declare-fun x550 () Int)
(declare-fun x1272 () Int)
(declare-fun x311 () Int)
(declare-fun x2932 () Int)
(declare-fun x3101 () Int)
(declare-fun x2460 () Int)
(declare-fun x2767 () Int)
(declare-fun x1312 () Int)
(declare-fun x1009 () Int)
(declare-fun x3121 () Int)
(declare-fun x3048 () Int)
(declare-fun x1777 () Int)
(declare-fun x97 () Int)
(declare-fun x2154 () Int)
(declare-fun x2806 () Int)
(declare-fun x1547 () Int)
(declare-fun x2681 () Int)
(declare-fun x296 () Int)
(declare-fun x1952 () Int)
(declare-fun x2219 () Int)
(declare-fun x71 () Int)
(declare-fun x2489 () Int)
(declare-fun x1755 () Int)
(declare-fun x2982 () Int)
(declare-fun x2609 () Int)
(declare-fun x1818 () Int)
(declare-fun x1224 () Int)
(declare-fun x2792 () Int)
(declare-fun x2822 () Bool)
(declare-fun x2687 (Int) Int)
(declare-fun x65 () Int)
(declare-fun x1101 () Int)
(declare-fun x2752 () Bool)
(declare-fun x9 () Bool)
(declare-fun x24 () Int)
(declare-fun x2476 (Int Int) Int)
(declare-fun x348 () Bool)
(declare-fun x399 () Bool)
(declare-fun x2139 () Int)
(declare-fun x2715 () Int)
(declare-fun x2957 () Bool)
(declare-fun x1760 () Int)
(declare-fun x930 () Int)
(declare-fun x2709 () Int)
(declare-fun x1016 () Int)
(declare-fun x722 () Int)
(declare-fun x1368 () Int)
(declare-fun x1080 () Int)
(declare-fun x1505 (Int) Int)
(declare-fun x213 () Int)
(declare-fun x2912 () Int)
(declare-fun x2396 () Int)
(declare-fun x1495 (Int Int Int Int Int Int) Int)
(declare-fun x2134 () Int)
(declare-fun x2721 () Int)
(declare-fun x1403 () Int)
(declare-fun x1552 () Bool)
(declare-fun x964 () Int)
(declare-fun x3065 () Bool)
(declare-fun x3058 () Bool)
(declare-fun x1161 () Int)
(declare-fun x1564 () Int)
(declare-fun x2018 () Int)
(declare-fun x1864 () Int)
(declare-fun x2849 () Int)
(declare-fun x2553 () Int)
(declare-fun x1798 () Int)
(declare-fun x2955 () Int)
(declare-fun x708 () Int)
(declare-fun x2096 () Bool)
(declare-fun x324 () Int)
(declare-fun x1987 () Int)
(declare-fun x591 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x2576 () Int)
(declare-fun x1698 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x2029 () Int)
(declare-fun x596 () Bool)
(declare-fun x494 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1181 () Int)
(declare-fun x1493 () Int)
(declare-fun x2603 () Bool)
(declare-fun x2466 () Int)
(declare-fun x388 () Int)
(declare-fun x1737 () Int)
(declare-fun x590 () Bool)
(declare-fun x96 () Bool)
(declare-fun x851 () Bool)
(declare-fun x163 () Bool)
(declare-fun x2260 () Int)
(declare-fun x953 () Int)
(declare-fun x161 () Int)
(declare-fun x2034 () Int)
(declare-fun x769 () Int)
(declare-fun x2056 () Int)
(declare-fun x1995 () Int)
(declare-fun x2052 () Bool)
(declare-fun x1408 () Int)
(declare-fun x2796 () Bool)
(declare-fun x2953 () Int)
(declare-fun x2217 () Int)
(declare-fun x1638 () Int)
(declare-fun x1565 () Bool)
(declare-fun x164 () Int)
(declare-fun x2555 () Int)
(declare-fun x1270 () Int)
(declare-fun x1580 () Int)
(declare-fun x202 () Int)
(declare-fun x637 () Int)
(declare-fun x2454 () Int)
(declare-fun x368 () Bool)
(declare-fun x1837 () Int)
(declare-fun x518 () Bool)
(declare-fun x1389 () Int)
(declare-fun x2291 () Int)
(declare-fun x2976 () Bool)
(declare-fun x2534 () Int)
(declare-fun x1572 () Int)
(declare-fun x2299 () Int)
(declare-fun x130 () Int)
(declare-fun x3 () Bool)
(declare-fun x1061 () Int)
(declare-fun x121 () Int)
(declare-fun x1610 () Bool)
(declare-fun x2261 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x3057 () Int)
(declare-fun x2179 () Int)
(declare-fun x2634 () Int)
(declare-fun x559 () Int)
(declare-fun x1222 () Int)
(declare-fun x718 () Bool)
(declare-fun x2986 () Bool)
(declare-fun x2604 () Int)
(declare-fun x1625 () Int)
(declare-fun x561 () Int)
(declare-fun x2509 () Int)
(declare-fun x3039 () Bool)
(declare-fun x2266 () Int)
(declare-fun x1534 () Int)
(declare-fun x957 () Int)
(declare-fun x583 () Int)
(declare-fun x1551 () Int)
(declare-fun x3053 () Bool)
(declare-fun x577 () Bool)
(declare-fun x2859 () Int)
(declare-fun x2514 () Int)
(declare-fun x900 () Int)
(declare-fun x2741 () Int)
(declare-fun x1231 () Int)
(declare-fun x3119 () Int)
(declare-fun x2829 () Bool)
(declare-fun x2599 () Int)
(declare-fun x148 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x2031 () Int)
(declare-fun x340 () Int)
(declare-fun x513 () Int)
(declare-fun x840 () Int)
(declare-fun x704 () Int)
(declare-fun x490 () Int)
(declare-fun x1051 () Int)
(declare-fun x1898 () Bool)
(declare-fun x191 () Int)
(declare-fun x220 () Int)
(declare-fun x1263 () Int)
(declare-fun x1978 () Int)
(declare-fun x1147 () Int)
(declare-fun x287 () Int)
(declare-fun x176 () Bool)
(declare-fun x2083 () Int)
(declare-fun x2885 () Int)
(declare-fun x799 () Int)
(declare-fun x669 () Int)
(declare-fun x2659 () Bool)
(declare-fun x2307 () Int)
(declare-fun x580 () Int)
(declare-fun x3030 () Int)
(declare-fun x1395 () Int)
(declare-fun x547 () Int)
(declare-fun x1511 () Bool)
(declare-fun x2273 () Int)
(declare-fun x1338 () Int)
(declare-fun x1700 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1945 () Int)
(declare-fun x1719 () Int)
(declare-fun x34 () Int)
(declare-fun x1292 () Bool)
(declare-fun x2453 () Int)
(declare-fun x3073 () Bool)
(declare-fun x2239 () Int)
(declare-fun x488 () Int)
(declare-fun x1668 () Int)
(declare-fun x2175 () Int)
(declare-fun x2908 () Int)
(declare-fun x1749 () Int)
(declare-fun x3032 () Int)
(declare-fun x1153 () Int)
(declare-fun x833 () Int)
(declare-fun x1429 () Bool)
(declare-fun x2673 () Int)
(declare-fun x865 () Int)
(declare-fun x336 () Int)
(declare-fun x262 () Bool)
(declare-fun x2045 () Int)
(declare-fun x2726 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x2456 () Int)
(declare-fun x2618 () Int)
(declare-fun x2328 () Bool)
(declare-fun x2103 () Int)
(declare-fun x2731 () Bool)
(declare-fun x339 () Int)
(declare-fun x2225 () Bool)
(declare-fun x310 () Int)
(declare-fun x2224 () Int)
(declare-fun x2661 () Int)
(declare-fun x715 () Int)
(declare-fun x1310 () Int)
(declare-fun x1814 () Bool)
(declare-fun x604 () Int)
(declare-fun x2521 () Bool)
(declare-fun x815 () Int)
(declare-fun x1110 () Int)
(declare-fun x1616 () Int)
(declare-fun x1901 () Int)
(declare-fun x1333 () Bool)
(declare-fun x298 () Bool)
(declare-fun x544 () Int)
(declare-fun x2670 () Bool)
(declare-fun x1626 () Int)
(declare-fun x2539 () Int)
(declare-fun x2776 () Int)
(declare-fun x843 () Int)
(declare-fun x2187 () Int)
(declare-fun x649 () Int)
(declare-fun x904 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1633 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x3046 () Int)
(declare-fun x203 () Int)
(declare-fun x1759 () Int)
(declare-fun x752 () Bool)
(declare-fun x2497 () Int)
(declare-fun x2525 () Int)
(declare-fun x734 () Int)
(declare-fun x2074 () Bool)
(declare-fun x327 () Bool)
(declare-fun x959 () Int)
(declare-fun x3076 () Int)
(declare-fun x2076 () Bool)
(declare-fun x1994 () Int)
(declare-fun x869 () Int)
(declare-fun x1342 () Int)
(declare-fun x1358 () Int)
(declare-fun x1427 () Int)
(declare-fun x1203 () Int)
(declare-fun x2713 () Int)
(declare-fun x2827 () Bool)
(declare-fun x567 () Int)
(declare-fun x2343 () Int)
(declare-fun x1326 () Int)
(declare-fun x1725 () Int)
(declare-fun x2708 () Int)
(declare-fun x2440 () Int)
(declare-fun x1401 () Int)
(declare-fun x185 () Int)
(declare-fun x2895 () Int)
(declare-fun x1902 () Int)
(declare-fun x2852 () Int)
(declare-fun x1235 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x650 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x2690 () Int)
(declare-fun x101 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x350 () Bool)
(declare-fun x2502 () Int)
(declare-fun x1362 () Int)
(declare-fun x2445 () Int)
(declare-fun x1863 () Bool)
(declare-fun x1497 () Int)
(declare-fun x335 () Int)
(declare-fun x861 () Bool)
(declare-fun x2061 () Int)
(declare-fun x1168 () Bool)
(declare-fun x2945 () Int)
(declare-fun x1038 () Int)
(declare-fun x1028 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x2506 () Int)
(declare-fun x2567 (Int) Int)
(declare-fun x1656 () Int)
(declare-fun x286 () Int)
(declare-fun x1794 () Int)
(declare-fun x319 () Int)
(declare-fun x1558 () Bool)
(declare-fun x1407 () Int)
(declare-fun x322 () Int)
(declare-fun x1315 () Int)
(declare-fun x2602 () Bool)
(declare-fun x222 () Int)
(declare-fun x2471 () Int)
(declare-fun x1609 () Int)
(declare-fun x2740 () Int)
(declare-fun x621 () Int)
(declare-fun x754 () Bool)
(declare-fun x2636 () Int)
(declare-fun x467 () Int)
(declare-fun x828 () Int)
(declare-fun x2485 (Int) Int)
(declare-fun x2890 () Bool)
(declare-fun x1881 () Int)
(declare-fun x1378 () Int)
(declare-fun x1383 () Int)
(declare-fun x2491 () Int)
(declare-fun x2812 () Int)
(declare-fun x608 () Int)
(declare-fun x3044 () Int)
(declare-fun x806 () Int)
(declare-fun x378 () Int)
(declare-fun x1086 () Int)
(declare-fun x2322 () Bool)
(declare-fun x2656 () Int)
(declare-fun x1587 () Bool)
(declare-fun x2446 () Int)
(declare-fun x2946 () Int)
(declare-fun x765 () Int)
(declare-fun x2564 () Int)
(declare-fun x1806 () Int)
(declare-fun x603 () Int)
(declare-fun x868 () Int)
(declare-fun x1655 () Int)
(declare-fun x377 () Int)
(declare-fun x954 () Bool)
(declare-fun x800 () Int)
(declare-fun x257 () Int)
(declare-fun x1944 () Int)
(declare-fun x2203 (Int) Int)
(declare-fun x416 () Int)
(declare-fun x2530 () Int)
(declare-fun x42 (Int Int) Int)
(declare-fun x78 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x1371 () Int)
(declare-fun x1939 () Int)
(declare-fun x1844 () Bool)
(declare-fun x2547 () Int)
(declare-fun x2559 () Int)
(declare-fun x1735 () Bool)
(declare-fun x1560 () Int)
(declare-fun x2684 () Int)
(declare-fun x2755 () Int)
(declare-fun x1804 () Int)
(declare-fun x2459 () Int)
(declare-fun x7 () Int)
(declare-fun x53 () Int)
(declare-fun x1853 () Bool)
(declare-fun x2869 () Int)
(declare-fun x2545 () Int)
(declare-fun x2255 () Int)
(declare-fun x442 () Int)
(declare-fun x3126 (Int) Int)
(declare-fun x2674 () Bool)
(declare-fun x1984 () Int)
(declare-fun x2784 () Int)
(declare-fun x2472 () Int)
(declare-fun x2234 () Int)
(declare-fun x2629 () Int)
(declare-fun x1324 () Bool)
(declare-fun x2918 () Int)
(declare-fun x67 () Int)
(declare-fun x2560 () Int)
(declare-fun x655 () Bool)
(declare-fun x3050 () Bool)
(declare-fun x1435 () Int)
(declare-fun x473 () Int)
(declare-fun x2477 () Int)
(declare-fun x974 () Bool)
(declare-fun x279 () Int)
(declare-fun x2743 () Int)
(declare-fun x1421 () Bool)
(declare-fun x1233 () Int)
(declare-fun x1567 () Int)
(declare-fun x1789 () Int)
(declare-fun x1126 () Int)
(declare-fun x773 () Int)
(declare-fun x1102 () Int)
(declare-fun x1258 () Int)
(declare-fun x856 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x426 () Int)
(declare-fun x2958 () Bool)
(declare-fun x827 () Bool)
(declare-fun x1217 () Int)
(declare-fun x2675 () Bool)
(declare-fun x1062 () Int)
(declare-fun x2341 () Int)
(declare-fun x914 () Int)
(declare-fun x2578 () Int)
(declare-fun x1606 () Int)
(declare-fun x1418 () Int)
(declare-fun x3017 () Bool)
(declare-fun x711 () Int)
(declare-fun x2772 () Int)
(declare-fun x376 () Int)
(declare-fun x2495 () Int)
(declare-fun x15 () Bool)
(declare-fun x1162 () Int)
(declare-fun x1705 () Int)
(declare-fun x1489 () Bool)
(declare-fun x842 () Int)
(declare-fun x1642 () Int)
(declare-fun x2943 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x960 () Bool)
(declare-fun x83 () Bool)
(declare-fun x693 () Int)
(declare-fun x1706 () Int)
(declare-fun x1922 () Bool)
(declare-fun x2313 () Int)
(declare-fun x2808 () Int)
(declare-fun x2994 () Bool)
(declare-fun x341 (Int) Int)
(declare-fun x1571 () Int)
(declare-fun x3011 () Int)
(declare-fun x825 () Int)
(declare-fun x1961 () Int)
(declare-fun x2046 () Int)
(declare-fun x1504 () Int)
(declare-fun x948 (Int) Int)
(declare-fun x2881 () Int)
(declare-fun x283 () Int)
(declare-fun x486 () Int)
(declare-fun x2671 () Bool)
(declare-fun x1172 () Int)
(declare-fun x776 () Int)
(declare-fun x560 () Int)
(declare-fun x2276 () Int)
(declare-fun x2688 () Bool)
(declare-fun x128 () Bool)
(declare-fun x1964 () Int)
(declare-fun x82 () Bool)
(declare-fun x866 () Int)
(declare-fun x337 () Int)
(declare-fun x2577 () Int)
(declare-fun x57 (Int) Int)
(declare-fun x1568 () Int)
(declare-fun x1712 () Int)
(declare-fun x751 () Int)
(declare-fun x665 () Int)
(declare-fun x2652 () Bool)
(declare-fun x2783 () Int)
(declare-fun x2699 () Bool)
(declare-fun x1858 () Int)
(declare-fun x16 () Int)
(declare-fun x576 () Int)
(declare-fun x2874 () Int)
(declare-fun x1337 () Int)
(declare-fun x1228 () Bool)
(declare-fun x8 () Int)
(declare-fun x1291 () Int)
(declare-fun x493 () Int)
(declare-fun x1112 () Bool)
(declare-fun x918 () Bool)
(declare-fun x872 (Int Int Int Int Int) Int)
(declare-fun x1013 () Int)
(declare-fun x2660 () Int)
(declare-fun x2269 () Int)
(declare-fun x1156 () Int)
(declare-fun x2250 () Int)
(declare-fun x2893 () Int)
(declare-fun x2059 () Int)
(declare-fun x2649 () Int)
(declare-fun x438 () Int)
(declare-fun x541 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x1001 () Int)
(declare-fun x2058 () Bool)
(declare-fun x1841 () Int)
(declare-fun x1857 () Bool)
(declare-fun x1464 () Int)
(declare-fun x1136 () Int)
(declare-fun x2791 () Int)
(declare-fun x748 () Bool)
(declare-fun x1289 () Int)
(declare-fun x2762 () Int)
(declare-fun x1269 () Int)
(declare-fun x2866 () Int)
(declare-fun x667 () Int)
(declare-fun x2734 () Bool)
(declare-fun x2110 () Int)
(declare-fun x1691 () Int)
(declare-fun x114 () Bool)
(declare-fun x2873 () Int)
(declare-fun x1993 () Int)
(declare-fun x1967 () Int)
(declare-fun x2173 () Int)
(declare-fun x129 () Int)
(declare-fun x105 () Int)
(declare-fun x1475 () Int)
(declare-fun x3043 () Int)
(declare-fun x712 () Int)
(declare-fun x613 () Int)
(declare-fun x162 () Int)
(declare-fun x2145 () Bool)
(declare-fun x1871 () Int)
(declare-fun x1535 () Bool)
(declare-fun x581 () Int)
(declare-fun x2758 () Int)
(declare-fun x2589 () Int)
(declare-fun x2508 () Int)
(declare-fun x280 () Int)
(declare-fun x2613 () Int)
(declare-fun x761 () Int)
(declare-fun x106 () Int)
(declare-fun x1071 () Int)
(declare-fun x2114 () Int)
(declare-fun x2544 () Int)
(declare-fun x2919 () Bool)
(declare-fun x938 () Int)
(declare-fun x3093 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x533 () Int)
(declare-fun x563 () Int)
(declare-fun x875 () Int)
(declare-fun x2625 () Bool)
(declare-fun x1920 () Int)
(declare-fun x32 () Bool)
(declare-fun x236 () Int)
(declare-fun x447 () Int)
(declare-fun x243 () Int)
(declare-fun x1645 () Int)
(declare-fun x1446 () Int)
(declare-fun x853 () Int)
(declare-fun x2961 () Int)
(declare-fun x118 () Bool)
(declare-fun x2845 () Int)
(declare-fun x3158 () Int)
(declare-fun x3059 () Int)
(declare-fun x1903 () Int)
(declare-fun x2357 () Int)
(declare-fun x933 () Int)
(declare-fun x151 () Int)
(declare-fun x1518 () Int)
(declare-fun x1098 () Int)
(declare-fun x946 () Int)
(declare-fun x374 () Int)
(declare-fun x537 () Bool)
(declare-fun x44 () Int)
(declare-fun x460 () Int)
(declare-fun x1849 () Bool)
(declare-fun x2257 () Int)
(declare-fun x125 () Int)
(declare-fun x584 () Int)
(declare-fun x2989 () Int)
(declare-fun x2116 () Bool)
(declare-fun x755 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1018 () Int)
(declare-fun x1546 () Bool)
(declare-fun x1366 (Int Int) Int)
(declare-fun x1926 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1832 () Int)
(declare-fun x1549 () Int)
(declare-fun x2562 () Int)
(declare-fun x1260 () Int)
(declare-fun x1379 () Int)
(declare-fun x1119 () Int)
(declare-fun x1754 () Int)
(declare-fun x48 () Int)
(declare-fun x381 () Int)
(declare-fun x253 () Int)
(declare-fun x2119 () Int)
(declare-fun x2529 () Int)
(declare-fun x1870 () Bool)
(declare-fun x2340 () Int)
(declare-fun x942 () Int)
(declare-fun x491 () Int)
(declare-fun x2747 () Int)
(declare-fun x1074 () Bool)
(declare-fun x2106 () Int)
(declare-fun x1956 () Int)
(declare-fun x1630 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x772 () Int)
(declare-fun x2286 () Int)
(declare-fun x549 () Bool)
(declare-fun x1752 () Int)
(declare-fun x1879 () Bool)
(declare-fun x69 () Int)
(declare-fun x1063 () Int)
(declare-fun x1423 () Int)
(declare-fun x76 () Bool)
(declare-fun x1150 () Int)
(declare-fun x1748 () Int)
(declare-fun x117 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1400 () Int)
(declare-fun x1791 () Int)
(declare-fun x3083 () Int)
(declare-fun x2540 () Bool)
(declare-fun x469 () Bool)
(declare-fun x485 () Int)
(declare-fun x1031 () Bool)
(declare-fun x1975 () Int)
(declare-fun x435 () Bool)
(declare-fun x2490 () Int)
(declare-fun x474 () Int)
(declare-fun x3078 () Int)
(declare-fun x2672 () Int)
(declare-fun x1914 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x756 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x429 () Bool)
(declare-fun x3110 () Int)
(declare-fun x1189 () Int)
(declare-fun x281 () Int)
(declare-fun x139 () Int)
(declare-fun x1688 () Int)
(declare-fun x17 () Int)
(declare-fun x2030 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x3117 () Int)
(declare-fun x290 () Int)
(declare-fun x410 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x1793 () Int)
(declare-fun x1544 () Int)
(declare-fun x1666 () Int)
(declare-fun x2111 () Int)
(declare-fun x1747 () Int)
(declare-fun x647 () Int)
(declare-fun x2151 () Int)
(declare-fun x470 () Int)
(declare-fun x510 () Int)
(declare-fun x3009 () Int)
(declare-fun x2974 () Int)
(declare-fun x2826 () Int)
(declare-fun x1550 () Int)
(declare-fun x3134 () Int)
(declare-fun x2971 () Int)
(declare-fun x2188 () Int)
(declare-fun x392 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x2318 () Int)
(declare-fun x251 () Bool)
(declare-fun x2496 () Int)
(declare-fun x3022 () Bool)
(declare-fun x2470 () Int)
(declare-fun x804 () Bool)
(declare-fun x1957 () Int)
(declare-fun x508 () Int)
(declare-fun x2 () Int)
(declare-fun x2164 () Int)
(declare-fun x2543 () Int)
(declare-fun x640 () Int)
(declare-fun x167 () Int)
(declare-fun x1011 () Int)
(declare-fun x300 () Bool)
(declare-fun x3070 () Int)
(declare-fun x586 () Int)
(declare-fun x2122 () Bool)
(declare-fun x1890 () Bool)
(declare-fun x794 () Bool)
(declare-fun x2584 () Int)
(declare-fun x917 () Int)
(declare-fun x2813 () Bool)
(declare-fun x2347 () Int)
(declare-fun x2167 () Int)
(declare-fun x1624 () Int)
(declare-fun x587 () Int)
(declare-fun x1515 () Int)
(declare-fun x2676 () Bool)
(declare-fun x2794 () Int)
(declare-fun x2227 () Int)
(declare-fun x1048 () Int)
(declare-fun x247 () Bool)
(declare-fun x155 () Int)
(declare-fun x2359 () Bool)
(declare-fun x295 () Int)
(declare-fun x594 () Int)
(declare-fun x1244 (Int) Int)
(declare-fun x1040 () Int)
(declare-fun x570 () Int)
(declare-fun x3145 () Int)
(declare-fun x1514 () Int)
(declare-fun x25 () Int)
(declare-fun x1854 () Int)
(declare-fun x1105 () Bool)
(declare-fun x2844 () Int)
(declare-fun x695 () Bool)
(declare-fun x146 () Int)
(declare-fun x3060 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x1034 () Int)
(declare-fun x284 () Bool)
(declare-fun x1822 () Int)
(declare-fun x2750 () Int)
(declare-fun x2093 () Int)
(declare-fun x1492 () Int)
(declare-fun x1167 () Int)
(declare-fun x2204 () Int)
(declare-fun x798 () Int)
(declare-fun x1622 () Int)
(declare-fun x1414 () Int)
(declare-fun x1651 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x999 () Int)
(declare-fun x2653 () Int)
(declare-fun x1803 () Bool)
(declare-fun x926 () Int)
(declare-fun x1664 () Int)
(declare-fun x2115 () Int)
(declare-fun x2595 () Int)
(declare-fun x3155 () Int)
(declare-fun x274 () Bool)
(declare-fun x152 () Int)
(declare-fun x839 () Int)
(declare-fun x358 () Int)
(declare-fun x3154 () Int)
(declare-fun x3000 () Int)
(declare-fun x1087 () Int)
(declare-fun x285 () Int)
(declare-fun x2939 () Int)
(declare-fun x2838 () Int)
(declare-fun x1618 () Int)
(declare-fun x822 () Int)
(declare-fun x259 () Int)
(declare-fun x1247 () Int)
(declare-fun x2353 () Bool)
(declare-fun x2177 () Int)
(declare-fun x2222 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x941 () Int)
(declare-fun x225 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x2169 () Int)
(declare-fun x1163 () Bool)
(declare-fun x228 () Int)
(declare-fun x1696 () Bool)
(declare-fun x2842 () Int)
(declare-fun x628 () Int)
(declare-fun x417 () Int)
(declare-fun x1974 () Int)
(declare-fun x1848 () Int)
(declare-fun x1623 () Int)
(declare-fun x445 () Bool)
(declare-fun x2417 () Int)
(declare-fun x1771 () Int)
(declare-fun x1562 () Int)
(declare-fun x3063 (Int) Int)
(declare-fun x2138 () Bool)
(declare-fun x831 () Bool)
(declare-fun x936 () Bool)
(declare-fun x2819 () Int)
(declare-fun x192 () Int)
(declare-fun x1417 () Bool)
(declare-fun x2619 () Int)
(declare-fun x2526 () Bool)
(declare-fun x227 () Bool)
(declare-fun x320 () Bool)
(declare-fun x2363 () Int)
(declare-fun x36 () Int)
(declare-fun x269 () Int)
(declare-fun x2981 () Int)
(declare-fun x562 () Int)
(declare-fun x2441 () Int)
(declare-fun x3138 () Int)
(declare-fun x314 () Int)
(declare-fun x867 () Int)
(declare-fun x312 () Int)
(declare-fun x811 () Int)
(declare-fun x2399 (Int) Int)
(declare-fun x1936 () Bool)
(declare-fun x35 () Int)
(declare-fun x1836 () Int)
(declare-fun x2965 () Int)
(declare-fun x454 () Int)
(declare-fun x849 () Bool)
(declare-fun x673 () Bool)
(declare-fun x2763 () Int)
(declare-fun x88 () Int)
(declare-fun x784 () Int)
(declare-fun x2517 () Int)
(declare-fun x2993 () Int)
(declare-fun x2212 () Int)
(declare-fun x1304 () Int)
(declare-fun x3084 () Int)
(declare-fun x2021 () Int)
(declare-fun x1820 () Int)
(declare-fun x1158 () Bool)
(declare-fun x725 () Int)
(declare-fun x346 () Bool)
(declare-fun x46 () Int)
(declare-fun x1117 () Int)
(declare-fun x551 () Int)
(declare-fun x600 () Int)
(declare-fun x2510 () Int)
(declare-fun x1850 () Int)
(declare-fun x2414 () Int)
(declare-fun x85 () Int)
(declare-fun x3034 () Int)
(declare-fun x1671 () Int)
(declare-fun x702 () Int)
(declare-fun x1468 () Int)
(declare-fun x1846 () Int)
(declare-fun x1113 () Int)
(declare-fun x1866 () Int)
(declare-fun x60 () Int)
(declare-fun x45 () Int)
(declare-fun x2348 () Int)
(declare-fun x1234 () Int)
(declare-fun x1892 () Int)
(declare-fun x934 () Int)
(declare-fun x2727 () Int)
(declare-fun x2330 () Int)
(declare-fun x539 (Int) Int)
(declare-fun x2811 () Int)
(declare-fun x2436 () Int)
(declare-fun x1530 () Int)
(declare-fun x2319 () Int)
(declare-fun x3081 () Bool)
(declare-fun x201 () Int)
(declare-fun x1485 () Int)
(declare-fun x3139 () Int)
(declare-fun x662 () Int)
(declare-fun x2966 () Int)
(declare-fun x1845 () Int)
(declare-fun x571 () Int)
(declare-fun x2677 () Bool)
(declare-fun x2097 () Int)
(declare-fun x1570 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x2362 () Int)
(declare-fun x1934 () Bool)
(declare-fun x2882 () Int)
(declare-fun x2178 () Int)
(declare-fun x1067 () Bool)
(declare-fun x1428 () Int)
(declare-fun x1940 () Int)
(declare-fun x2193 () Bool)
(declare-fun x1597 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1275 () Int)
(declare-fun x308 (Int) Int)
(declare-fun x929 () Int)
(declare-fun x2075 () Int)
(declare-fun x2887 () Int)
(declare-fun x2922 () Int)
(declare-fun x709 () Int)
(declare-fun x2504 () Int)
(declare-fun x2984 () Int)
(declare-fun x1842 () Int)
(declare-fun x771 () Int)
(declare-fun x992 () Int)
(declare-fun x1405 (Int) Int)
(declare-fun x692 () Int)
(declare-fun x873 () Int)
(declare-fun x1659 () Int)
(declare-fun x2880 () Int)
(declare-fun x3135 () Int)
(declare-fun x987 () Int)
(declare-fun x2821 () Int)
(declare-fun x783 () Int)
(declare-fun x862 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1949 () Int)
(declare-fun x2511 () Bool)
(declare-fun x1298 () Int)
(declare-fun x2848 () Int)
(declare-fun x1981 () Bool)
(declare-fun x1352 () Int)
(declare-fun x593 () Int)
(declare-fun x1729 () Int)
(declare-fun x461 () Int)
(declare-fun x210 () Int)
(declare-fun x1097 () Bool)
(declare-fun x925 () Int)
(declare-fun x528 () Bool)
(declare-fun x1781 () Int)
(declare-fun x616 () Bool)
(declare-fun x1784 () Int)
(declare-fun x1151 () Int)
(declare-fun x2022 () Int)
(declare-fun x28 () Int)
(declare-fun x179 () Int)
(declare-fun x108 () Int)
(declare-fun x2049 () Int)
(declare-fun x1761 () Int)
(declare-fun x592 () Int)
(declare-fun x1693 () Int)
(declare-fun x2342 () Int)
(declare-fun x2931 () Int)
(declare-fun x2125 () Bool)
(declare-fun x1833 () Int)
(declare-fun x1648 () Int)
(declare-fun x2992 () Int)
(declare-fun x1498 () Int)
(declare-fun x355 () Bool)
(declare-fun x3041 () Int)
(declare-fun x124 () Bool)
(declare-fun x2422 () Int)
(declare-fun x3097 () Int)
(declare-fun x2640 () Int)
(declare-fun x524 () Int)
(declare-fun x3153 () Int)
(declare-fun x823 () Int)
(declare-fun x463 () Int)
(declare-fun x2995 () Int)
(declare-fun x516 () Int)
(declare-fun x522 () Int)
(declare-fun x1663 () Int)
(declare-fun x2753 () Int)
(declare-fun x2140 () Bool)
(declare-fun x620 () Bool)
(declare-fun x2270 () Int)
(declare-fun x630 () Int)
(declare-fun x947 () Int)
(declare-fun x3122 () Int)
(declare-fun x1960 () Bool)
(declare-fun x520 () Int)
(declare-fun x2798 () Bool)
(declare-fun x2600 () Int)
(declare-fun x1178 () Int)
(declare-fun x1909 () Int)
(declare-fun x92 () Int)
(declare-fun x2000 () Int)
(declare-fun x3104 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x2814 () Int)
(declare-fun x1595 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1391 () Int)
(declare-fun x2420 () Int)
(declare-fun x1658 () Int)
(declare-fun x1815 () Int)
(declare-fun x2223 () Int)
(declare-fun x1532 () Int)
(declare-fun x3028 () Int)
(declare-fun x1682 () Int)
(declare-fun x2040 (Int Int Int) Int)
(declare-fun x94 () Int)
(declare-fun x536 () Int)
(declare-fun x1661 () Int)
(declare-fun x1657 () Int)
(declare-fun x2028 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x2952 () Int)
(declare-fun x1506 () Int)
(declare-fun x2398 () Int)
(declare-fun x1440 () Int)
(declare-fun x245 () Bool)
(declare-fun x1305 () Int)
(declare-fun x1444 () Int)
(declare-fun x2651 () Int)
(declare-fun x2980 () Int)
(declare-fun x1634 () Int)
(declare-fun x3103 () Bool)
(declare-fun x1586 () Int)
(declare-fun x1683 () Int)
(declare-fun x2011 () Bool)
(declare-fun x2275 () Bool)
(declare-fun x534 () Int)
(declare-fun x375 () Int)
(declare-fun x2795 () Int)
(declare-fun x2959 () Int)
(declare-fun x133 () Int)
(declare-fun x2109 () Int)
(declare-fun x1442 () Int)
(declare-fun x3068 () Int)
(declare-fun x2515 () Bool)
(declare-fun x2942 () Int)
(declare-fun x2185 () Int)
(declare-fun x433 () Bool)
(declare-fun x56 () Int)
(declare-fun x2298 () Int)
(declare-fun x2930 () Int)
(declare-fun x1928 () Int)
(declare-fun x1556 () Bool)
(declare-fun x629 () Int)
(declare-fun x2228 () Bool)
(declare-fun x2099 () Int)
(declare-fun x1885 () Int)
(declare-fun x1611 () Bool)
(declare-fun x2736 () Int)
(declare-fun x611 () Bool)
(declare-fun x2843 () Int)
(declare-fun x1602 () Int)
(declare-fun x2710 () Int)
(declare-fun x881 () Int)
(declare-fun x1471 () Int)
(declare-fun x2823 () Int)
(declare-fun x301 () Bool)
(declare-fun x882 () Int)
(declare-fun x2746 () Bool)
(declare-fun x3108 () Int)
(declare-fun x1249 () Int)
(declare-fun x2554 () Int)
(declare-fun x675 () Int)
(declare-fun x1880 () Int)
(declare-fun x1734 () Int)
(declare-fun x217 () Int)
(declare-fun x64 () Int)
(declare-fun x1795 () Bool)
(declare-fun x1349 () Int)
(declare-fun x565 () Int)
(declare-fun x1904 () Int)
(declare-fun x1997 () Int)
(declare-fun x2756 () Int)
(declare-fun x1708 () Int)
(declare-fun x3109 () Bool)
(declare-fun x538 () Int)
(declare-fun x1099 () Int)
(declare-fun x2516 () Int)
(declare-fun x500 () Bool)
(declare-fun x835 () Int)
(declare-fun x2757 () Int)
(declare-fun x1986 () Int)
(declare-fun x639 () Int)
(declare-fun x407 () Int)
(declare-fun x1183 () Bool)
(declare-fun x515 () Bool)
(declare-fun x1109 () Int)
(declare-fun x2117 () Int)
(declare-fun x1208 () Int)
(declare-fun x501 () Int)
(declare-fun x1959 () Bool)
(declare-fun x888 () Int)
(declare-fun x1917 () Int)
(declare-fun x3054 () Int)
(declare-fun x3114 () Int)
(declare-fun x2769 () Int)
(declare-fun x282 () Int)
(declare-fun x1219 () Bool)
(declare-fun x2394 () Int)
(declare-fun x1276 () Int)
(declare-fun x70 () Int)
(declare-fun x2871 () Int)
(declare-fun x903 () Int)
(declare-fun x1516 () Int)
(declare-fun x1583 () Bool)
(declare-fun x1084 () Int)
(declare-fun x2786 () Bool)
(declare-fun x2084 () Int)
(declare-fun x2680 () Bool)
(declare-fun x1215 () Int)
(declare-fun x2856 () Int)
(declare-fun x2382 () Int)
(declare-fun x2923 () Int)
(declare-fun x973 () Int)
(declare-fun x1066 () Int)
(declare-fun x356 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x1079 () Int)
(declare-fun x1996 () Bool)
(declare-fun x2236 () Int)
(declare-fun x2520 () Int)
(declare-fun x2026 () Int)
(declare-fun x333 () Int)
(declare-fun x2172 () Int)
(declare-fun x2283 () Bool)
(declare-fun x3038 () Int)
(declare-fun x2588 () Bool)
(declare-fun x906 () Int)
(declare-fun x2226 () Bool)
(declare-fun x1455 () Int)
(declare-fun x398 () Bool)
(declare-fun x705 () Bool)
(declare-fun x726 () Int)
(declare-fun x893 () Int)
(declare-fun x1137 () Bool)
(declare-fun x2729 () Int)
(declare-fun x632 () Bool)
(declare-fun x733 () Bool)
(declare-fun x3037 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1322 () Int)
(declare-fun x446 () Int)
(declare-fun x3003 () Int)
(declare-fun x199 () Int)
(declare-fun x3029 () Int)
(declare-fun x2962 () Int)
(declare-fun x487 () Int)
(declare-fun x200 () Int)
(declare-fun x1206 () Bool)
(declare-fun x1070 () Int)
(declare-fun x2176 () Int)
(declare-fun x2036 () Bool)
(declare-fun x623 () Int)
(declare-fun x1472 () Int)
(declare-fun x1149 () Int)
(declare-fun x902 () Bool)
(declare-fun x3124 () Int)
(declare-fun x1282 () Bool)
(declare-fun x1931 () Int)
(declare-fun x631 () Bool)
(declare-fun x2247 () Bool)
(declare-fun x1135 () Int)
(declare-fun x1542 () Bool)
(declare-fun x2002 () Int)
(declare-fun x266 () Int)
(declare-fun x1834 () Int)
(declare-fun x2085 () Int)
(declare-fun x2638 () Bool)
(declare-fun x2862 () Int)
(declare-fun x2804 () Int)
(declare-fun x2388 () Bool)
(declare-fun x529 () Int)
(declare-fun x1887 () Int)
(declare-fun x2696 () Int)
(declare-fun x1036 () Int)
(declare-fun x1000 () Int)
(declare-fun x2435 () Int)
(declare-fun x2143 () Bool)
(declare-fun x2921 () Int)
(declare-fun x430 () Int)
(declare-fun x830 () Int)
(declare-fun x1175 () Int)
(declare-fun x2839 () Int)
(declare-fun x1529 () Int)
(declare-fun x3156 () Int)
(declare-fun x688 () Int)
(declare-fun x2409 () Int)
(declare-fun x2563 () Int)
(declare-fun x1627 () Int)
(declare-fun x2549 () Int)
(declare-fun x1483 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x1757 () Int)
(declare-fun x1738 () Bool)
(declare-fun x3023 () Int)
(declare-fun x482 () Int)
(declare-fun x944 () Bool)
(declare-fun x1811 () Int)
(declare-fun x2714 () Int)
(declare-fun x2133 () Int)
(declare-fun x1612 () Int)
(declare-fun x2579 () Int)
(declare-fun x197 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x3002 () Int)
(declare-fun x1050 () Bool)
(declare-fun x1210 () Int)
(declare-fun x2748 () Int)
(declare-fun x2877 () Int)
(declare-fun x2909 () Int)
(declare-fun x1104 () Int)
(declare-fun x3014 () Int)
(declare-fun x2768 () Int)
(declare-fun x3026 () Int)
(declare-fun x2327 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x1107 (Int) Int)
(declare-fun x10 (Int) Int)
(declare-fun x1108 () Int)
(declare-fun x937 () Int)
(declare-fun x1441 () Int)
(declare-fun x20 () Int)
(declare-fun x79 (Int) Int)
(declare-fun x2024 () Int)
(declare-fun x895 () Int)
(declare-fun x104 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x43 () Int)
(declare-fun x2057 () Int)
(declare-fun x1951 () Bool)
(declare-fun x1983 () Int)
(declare-fun x2430 () Int)
(declare-fun x2194 () Int)
(declare-fun x190 () Bool)
(declare-fun x2572 () Int)
(declare-fun x1111 () Int)
(declare-fun x1294 () Int)
(declare-fun x58 () Int)
(declare-fun x2397 () Int)
(declare-fun x1277 () Bool)
(declare-fun x2023 () Int)
(declare-fun x1488 () Bool)
(declare-fun x1652 () Int)
(declare-fun x970 () Int)
(declare-fun x1578 () Bool)
(declare-fun x1669 () Int)
(declare-fun x1347 () Int)
(declare-fun x2810 () Int)
(declare-fun x781 () Int)
(declare-fun x137 () Int)
(declare-fun x2354 () Int)
(declare-fun x62 () Int)
(declare-fun x757 () Int)
(declare-fun x1279 () Int)
(declare-fun x1783 () Int)
(declare-fun x749 () Bool)
(declare-fun x2071 () Int)
(declare-fun x115 () Int)
(declare-fun x2383 () Int)
(declare-fun x126 () Bool)
(declare-fun x1843 () Int)
(declare-fun x2427 () Bool)
(declare-fun x889 () Bool)
(declare-fun x1242 () Int)
(declare-fun x2438 () Bool)
(declare-fun x1715 () Int)
(declare-fun x389 () Int)
(declare-fun x2728 () Bool)
(declare-fun x1801 () Int)
(declare-fun x1947 () Bool)
(declare-fun x425 () Bool)
(declare-fun x380 () Int)
(declare-fun x714 () Int)
(declare-fun x1029 () Int)
(declare-fun x2733 () Int)
(declare-fun x1918 () Int)
(declare-fun x2166 () Int)
(declare-fun x1728 () Int)
(declare-fun x2805 () Int)
(declare-fun x2419 () Int)
(declare-fun x3111 () Int)
(declare-fun x2206 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x2627 () Int)
(declare-fun x1923 () Int)
(declare-fun x1773 () Int)
(declare-fun x503 () Int)
(declare-fun x1751 () Int)
(declare-fun x2272 () Int)
(declare-fun x2277 () Int)
(declare-fun x294 () Int)
(declare-fun x648 () Int)
(declare-fun x1376 () Int)
(declare-fun x2184 () Int)
(declare-fun x182 () Int)
(declare-fun x1424 () Int)
(declare-fun x1004 () Int)
(declare-fun x166 () Int)
(declare-fun x535 () Bool)
(declare-fun x1474 () Int)
(declare-fun x911 () Int)
(declare-fun x2474 () Bool)
(declare-fun x651 () Bool)
(declare-fun x2781 () Int)
(declare-fun x863 () Int)
(declare-fun x2055 () Int)
(declare-fun x841 (Int) Int)
(declare-fun x107 () Int)
(declare-fun x2197 () Bool)
(declare-fun x2019 () Int)
(declare-fun x1746 () Int)
(declare-fun x1458 () Int)
(declare-fun x360 () Int)
(declare-fun x1092 () Bool)
(declare-fun x3105 () Bool)
(declare-fun x234 () Int)
(declare-fun x1166 () Int)
(declare-fun x2241 () Int)
(declare-fun x659 () Int)
(declare-fun x1083 () Int)
(declare-fun x1714 () Bool)
(declare-fun x21 () Int)
(declare-fun x270 () Int)
(declare-fun x2482 () Bool)
(declare-fun x697 (Int Int) Int)
(declare-fun x2773 () Int)
(declare-fun x2078 () Int)
(declare-fun x1929 () Bool)
(declare-fun x768 () Int)
(declare-fun x2284 () Int)
(declare-fun x2027 () Int)
(declare-fun x2501 () Int)
(declare-fun x441 () Int)
(declare-fun x2095 () Int)
(declare-fun x2707 () Int)
(declare-fun x1554 () Int)
(declare-fun x569 () Int)
(declare-fun x2997 (Int) Int)
(declare-fun x231 () Bool)
(declare-fun x1316 () Int)
(declare-fun x2066 () Bool)
(declare-fun x1667 () Int)
(declare-fun x1425 () Bool)
(declare-fun x943 () Bool)
(declare-fun x1152 () Int)
(declare-fun x1954 () Int)
(declare-fun x597 () Bool)
(declare-fun x505 () Int)
(declare-fun x409 () Int)
(declare-fun x2831 () Bool)
(declare-fun x2552 () Int)
(declare-fun x521 () Int)
(declare-fun x694 () Int)
(declare-fun x2290 () Bool)
(declare-fun x684 () Int)
(declare-fun x1170 () Int)
(declare-fun x2395 () Bool)
(declare-fun x30 () Int)
(declare-fun x2081 () Int)
(declare-fun x1800 () Int)
(declare-fun x2815 () Int)
(declare-fun x2080 () Int)
(declare-fun x847 () Int)
(declare-fun x2548 () Int)
(declare-fun x14 () Bool)
(declare-fun x1384 () Int)
(declare-fun x1252 () Bool)
(declare-fun x3151 () Int)
(declare-fun x2628 () Int)
(declare-fun x1288 () Int)
(declare-fun x2785 () Bool)
(declare-fun x3080 () Int)
(declare-fun x2639 () Int)
(declare-fun x962 () Int)
(declare-fun x302 () Int)
(declare-fun x1225 () Int)
(declare-fun x2443 () Int)
(declare-fun x1143 () Int)
(declare-fun x1179 () Int)
(declare-fun x3130 () Int)
(declare-fun x627 () Int)
(declare-fun x2426 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1026 () Int)
(declare-fun x3018 () Int)
(declare-fun x362 () Int)
(declare-fun x1321 () Int)
(declare-fun x2788 () Bool)
(declare-fun x2200 () Bool)
(declare-fun x2082 () Int)
(declare-fun x1346 () Int)
(declare-fun x972 () Int)
(declare-fun x876 () Int)
(declare-fun x735 () Bool)
(declare-fun x2464 () Int)
(declare-fun x1785 () Int)
(declare-fun x1528 () Int)
(declare-fun x2970 () Int)
(declare-fun x73 () Int)
(declare-fun x666 () Bool)
(declare-fun x291 () Int)
(declare-fun x1592 () Int)
(declare-fun x1971 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x2364 () Int)
(declare-fun x1852 () Int)
(declare-fun x3066 (Int Int Int Int) Int)
(declare-fun x2522 () Bool)
(declare-fun x802 () Int)
(declare-fun x1055 () Int)
(declare-fun x2817 () Int)
(declare-fun x1286 () Int)
(declare-fun x3120 () Int)
(declare-fun x1699 () Bool)
(declare-fun x406 () Bool)
(declare-fun x698 () Int)
(declare-fun x2416 () Int)
(declare-fun x2126 () Int)
(declare-fun x3027 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x924 () Bool)
(declare-fun x2990 () Bool)
(declare-fun x803 () Int)
(declare-fun x1877 () Int)
(declare-fun x464 () Int)
(declare-fun x846 () Int)
(declare-fun x1364 () Int)
(declare-fun x2737 () Int)
(declare-fun x457 () Bool)
(declare-fun x2413 () Int)
(declare-fun x3015 () Bool)
(declare-fun x323 () Int)
(declare-fun x2465 () Bool)
(declare-fun x720 () Int)
(declare-fun x558 () Int)
(declare-fun x2386 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x2644 () Int)
(declare-fun x2896 () Int)
(declare-fun x1727 () Int)
(declare-fun x2850 () Int)
(declare-fun x2702 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x1770 () Int)
(declare-fun x989 () Bool)
(declare-fun x2879 () Int)
(declare-fun x1134 () Bool)
(declare-fun x686 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x1490 () Int)
(declare-fun x681 () Int)
(declare-fun x3113 () Int)
(declare-fun x579 () Int)
(declare-fun x1306 () Int)
(declare-fun x731 () Bool)
(declare-fun x1512 () Int)
(declare-fun x870 () Int)
(declare-fun x1363 () Int)
(declare-fun x174 () Int)
(declare-fun x1123 () Int)
(declare-fun x338 () Int)
(declare-fun x230 () Int)
(declare-fun x1377 () Int)
(declare-fun x2137 () Int)
(declare-fun x1226 () Int)
(declare-fun x2287 () Int)
(declare-fun x2461 () Int)
(declare-fun x2658 () Bool)
(declare-fun x1290 () Int)
(declare-fun x531 () Int)
(declare-fun x77 () Int)
(declare-fun x3163 () Int)
(declare-fun x1608 () Int)
(declare-fun x850 () Int)
(declare-fun x1436 () Int)
(declare-fun x1701 () Int)
(declare-fun x2220 () Int)
(declare-fun x2215 () Int)
(declare-fun x997 () Int)
(declare-fun x913 () Bool)
(declare-fun x1393 () Int)
(declare-fun x995 () Int)
(declare-fun x546 () Int)
(declare-fun x495 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x1764 () Int)
(declare-fun x1420 () Int)
(declare-fun x98 () Int)
(declare-fun x860 () Int)
(declare-fun x1816 () Int)
(declare-fun x420 () Int)
(declare-fun x721 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x2580 () Bool)
(declare-fun x2626 () Int)
(declare-fun x1557 () Int)
(declare-fun x205 () Bool)
(declare-fun x1523 () Int)
(declare-fun x1176 () Int)
(declare-fun x2927 () Int)
(declare-fun x762 () Int)
(declare-fun x575 () Bool)
(declare-fun x1521 () Int)
(declare-fun x1445 () Int)
(declare-fun x1654 () Int)
(declare-fun x2189 () Int)
(declare-fun x2987 () Bool)
(declare-fun x887 () Bool)
(declare-fun x2356 () Int)
(declare-fun x555 () Bool)
(declare-fun x2492 () Int)
(declare-fun x3067 () Int)
(declare-fun x2037 () Bool)
(declare-fun x1367 () Int)
(declare-fun x1394 () Int)
(declare-fun x2789 () Int)
(declare-fun x3131 () Int)
(declare-fun x27 () Int)
(declare-fun x1484 () Int)
(declare-fun x2538 () Bool)
(declare-fun x2256 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x1060 () Int)
(declare-fun x3055 () Bool)
(declare-fun x1325 () Int)
(declare-fun x3142 () Bool)
(declare-fun x419 () Bool)
(declare-fun x144 () Int)
(declare-fun x2033 () Int)
(declare-fun x1859 () Int)
(declare-fun x1774 () Int)
(declare-fun x2259 () Int)
(declare-fun x2749 () Bool)
(declare-fun x1619 () Int)
(declare-fun x2732 () Int)
(declare-fun x2268 () Bool)
(declare-fun x1127 () Int)
(declare-fun x700 () Int)
(declare-fun x3146 () Int)
(declare-fun x1443 () Int)
(declare-fun x2610 () Int)
(declare-fun x2065 () Int)
(declare-fun x364 () Int)
(declare-fun x618 () Int)
(declare-fun x2528 () Bool)
(declare-fun x1155 () Int)
(declare-fun x2311 () Int)
(declare-fun x1002 () Int)
(declare-fun x2936 () Bool)
(declare-fun x829 () Int)
(declare-fun x1865 () Int)
(declare-fun x2498 () Int)
(declare-fun x241 () Int)
(declare-fun x1687 () Bool)
(declare-fun x927 () Int)
(declare-fun x31 () Int)
(declare-fun x1251 () Bool)
(declare-fun x2379 () Int)
(declare-fun x2006 () Int)
(declare-fun x1955 () Int)
(declare-fun x1647 () Int)
(declare-fun x1856 () Int)
(declare-fun x209 () Int)
(declare-fun x2087 () Int)
(declare-fun x2349 () Int)
(declare-fun x2243 () Int)
(declare-fun x545 (Int Int) Int)
(declare-fun x564 () Int)
(declare-fun x504 () Bool)
(declare-fun x372 () Int)
(declare-fun x103 () Bool)
(declare-fun x154 () Bool)
(declare-fun x1607 () Int)
(declare-fun x63 () Int)
(declare-fun x2641 () Int)
(declare-fun x998 () Int)
(declare-fun x315 () Bool)
(declare-fun x750 () Int)
(declare-fun x898 () Int)
(declare-fun x986 () Int)
(declare-fun x2054 () Bool)
(declare-fun x3020 () Int)
(declare-fun x671 () Int)
(declare-fun x1772 () Bool)
(declare-fun x170 () Int)
(declare-fun x1335 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x1023 () Int)
(declare-fun x1478 () Int)
(declare-fun x2358 (Int Int Int Int Int Int Int) Int)
(declare-fun x1238 () Int)
(declare-fun x451 () Int)
(declare-fun x1194 () Int)
(declare-fun x431 () Int)
(declare-fun x1605 () Bool)
(declare-fun x1977 () Int)
(declare-fun x2050 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x2828 () Int)
(declare-fun x1899 () Int)
(declare-fun x3112 () Bool)
(declare-fun x321 () Int)
(declare-fun x61 () Int)
(declare-fun x3143 () Bool)
(declare-fun x1487 () Int)
(declare-fun x878 () Int)
(declare-fun x361 () Int)
(declare-fun x145 () Bool)
(declare-fun x2390 () Int)
(declare-fun x180 () Int)
(declare-fun x931 () Int)
(declare-fun x644 () Bool)
(declare-fun x272 () Int)
(declare-fun x233 () Bool)
(declare-fun x2904 () Int)
(declare-fun x940 () Bool)
(declare-fun x744 () Int)
(declare-fun x1540 () Int)
(declare-fun x1452 () Int)
(declare-fun x1355 (Int) Int)
(declare-fun x864 () Int)
(declare-fun x2825 () Bool)
(declare-fun x1253 () Int)
(declare-fun x1198 () Bool)
(declare-fun x229 () Int)
(declare-fun x2391 () Int)
(declare-fun x2264 () Int)
(declare-fun x260 () Int)
(declare-fun x2494 () Int)
(declare-fun x363 () Int)
(declare-fun x2428 () Int)
(declare-fun x109 () Int)
(declare-fun x3127 () Int)
(declare-fun x165 () Int)
(declare-fun x2458 () Int)
(declare-fun x2142 () Int)
(declare-fun x1767 () Int)
(declare-fun x1116 () Int)
(declare-fun x26 () Int)
(declare-fun x4 () Bool)
(declare-fun x832 () Int)
(declare-fun x1561 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x215 () Int)
(declare-fun x2202 () Int)
(declare-fun x496 () Bool)
(declare-fun x1896 () Bool)
(declare-fun x963 () Int)
(declare-fun x1120 () Int)
(declare-fun x1501 () Bool)
(declare-fun x770 () Int)
(declare-fun x1466 () Int)
(declare-fun x1409 () Bool)
(declare-fun x477 () Int)
(declare-fun x1124 () Int)
(declare-fun x384 () Int)
(declare-fun x1731 () Int)
(declare-fun x22 () Bool)
(declare-fun x1548 () Int)
(declare-fun x1908 () Int)
(declare-fun x19 () Bool)
(declare-fun x2152 (Int) Int)
(declare-fun x1314 () Int)
(declare-fun x172 () Int)
(declare-fun x2113 () Int)
(declare-fun x2911 () Bool)
(declare-fun x3144 () Int)
(declare-fun x240 () Int)
(declare-fun x481 () Int)
(declare-fun x2582 () Int)
(declare-fun x530 () Int)
(declare-fun x2129 () Int)
(declare-fun x2051 () Int)
(declare-fun x656 () Int)
(declare-fun x480 () Int)
(declare-fun x2705 (Int) Bool)
(declare-fun x370 () Int)
(declare-fun x1320 () Bool)
(declare-fun x329 () Int)
(declare-fun x1779 () Int)
(declare-fun x821 (Int Int Int Int) Int)
(declare-fun x857 () Int)
(declare-fun x729 () Int)
(declare-fun x2778 () Int)
(declare-fun x511 () Int)
(declare-fun x1216 () Int)
(declare-fun x976 () Bool)
(declare-fun x1721 () Int)
(declare-fun x1882 () Int)
(declare-fun x740 () Int)
(declare-fun x2062 () Bool)
(declare-fun x1382 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x2536 () Bool)
(declare-fun x465 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x1943 () Int)
(declare-fun x1022 () Int)
(declare-fun x2934 () Int)
(declare-fun x184 () Int)
(declare-fun x2744 () Int)
(declare-fun x2621 () Int)
(declare-fun x156 () Int)
(declare-fun x1439 () Int)
(declare-fun x923 () Int)
(declare-fun x1193 () Bool)
(declare-fun x2302 () Int)
(declare-fun x3071 (Int) Int)
(declare-fun x670 () Int)
(declare-fun x288 () Int)
(declare-fun x883 () Bool)
(declare-fun x2914 () Int)
(declare-fun x619 () Int)
(declare-fun x2903 () Int)
(declare-fun x2512 (Int) Int)
(declare-fun x2361 () Int)
(declare-fun x994 () Int)
(declare-fun x2263 () Int)
(declare-fun x195 () Bool)
(declare-fun x557 () Int)
(declare-fun x1942 () Int)
(declare-fun x2352 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x556 () Int)
(declare-fun x1419 () Int)
(declare-fun x819 () Int)
(declare-fun x11 () Int)
(declare-fun x782 () Int)
(declare-fun x1467 () Int)
(declare-fun x2329 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x2898 () Int)
(declare-fun x2760 () Bool)
(declare-fun x3149 () Int)
(declare-fun x2566 () Int)
(declare-fun x2326 () Int)
(declare-fun x2493 () Int)
(declare-fun x2668 () Int)
(declare-fun x1741 () Bool)
(declare-fun x452 () Bool)
(declare-fun x641 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x1213 () Int)
(declare-fun x2614 () Int)
(declare-fun x2683 (Int) Int)
(declare-fun x1933 () Int)
(declare-fun x1839 () Int)
(declare-fun x2570 () Int)
(declare-fun x1190 () Int)
(declare-fun x2569 () Int)
(declare-fun x1744 () Bool)
(declare-fun x325 () Int)
(declare-fun x2523 () Int)
(declare-fun x1886 () Int)
(declare-fun x2155 () Int)
(declare-fun x1724 () Int)
(declare-fun x3152 () Int)
(declare-fun x193 () Int)
(declare-fun x484 () Int)
(declare-fun x2607 () Int)
(declare-fun x138 () Int)
(declare-fun x2633 () Bool)
(declare-fun x1392 () Int)
(declare-fun x1686 () Bool)
(declare-fun x72 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x855 () Int)
(declare-fun x836 () Bool)
(declare-fun x1221 () Int)
(declare-fun x2499 () Int)
(declare-fun x437 () Int)
(declare-fun x1017 () Int)
(declare-fun x365 () Int)
(declare-fun x1295 () Int)
(declare-fun x2585 () Int)
(declare-fun x1946 () Int)
(declare-fun x1677 () Bool)
(declare-fun x354 () Int)
(declare-fun x478 () Int)
(declare-fun x2487 () Bool)
(declare-fun x1197 () Int)
(declare-fun x186 (Int) Int)
(declare-fun x1199 () Int)
(declare-fun x2090 () Int)
(declare-fun x2906 () Int)
(declare-fun x2853 () Int)
(declare-fun x99 () Bool)
(declare-fun x1024 () Int)
(declare-fun x2174 () Int)
(declare-fun x87 () Int)
(declare-fun x2876 () Int)
(declare-fun x2376 () Int)
(declare-fun x91 () Bool)
(declare-fun x1402 () Int)
(declare-fun x261 () Int)
(declare-fun x1499 () Int)
(declare-fun x1869 () Int)
(declare-fun x1919 () Int)
(declare-fun x2105 () Int)
(declare-fun x758 () Int)
(declare-fun x143 () Int)
(declare-fun x1906 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x405 () Bool)
(declare-fun x905 () Int)
(declare-fun x2967 () Int)
(declare-fun x2229 () Int)
(declare-fun x2646 () Int)
(declare-fun x3047 () Int)
(declare-fun x41 () Int)
(declare-fun x1522 () Bool)
(declare-fun x2949 () Int)
(declare-fun x699 () Int)
(declare-fun x2631 () Bool)
(declare-fun x1732 () Int)
(declare-fun x2001 () Int)
(declare-fun x366 () Int)
(declare-fun x582 () Int)
(declare-fun x610 () Int)
(declare-fun x1992 () Int)
(declare-fun x1614 () Int)
(declare-fun x678 () Int)
(declare-fun x86 () Int)
(declare-fun x244 () Int)
(declare-fun x1449 () Int)
(declare-fun x2381 () Int)
(declare-fun x2616 () Int)
(declare-fun x1635 () Int)
(declare-fun x3052 () Int)
(declare-fun x2371 () Bool)
(declare-fun x40 () Int)
(declare-fun x2759 () Bool)
(declare-fun x2597 () Int)
(declare-fun x1139 () Bool)
(declare-fun x2032 () Int)
(declare-fun x2293 () Int)
(declare-fun x23 () Int)
(declare-fun x414 () Int)
(declare-fun x742 () Bool)
(declare-fun x1019 () Int)
(declare-fun x468 () Int)
(declare-fun x2846 () Int)
(declare-fun x110 () Int)
(declare-fun x578 () Int)
(declare-fun x1281 () Int)
(declare-fun x3007 () Int)
(declare-fun x2013 () Int)
(declare-fun x273 () Int)
(declare-fun x844 () Bool)
(declare-fun x2403 () Bool)
(declare-fun x787 () Bool)
(declare-fun x2716 () Int)
(declare-fun x2412 () Int)
(declare-fun x122 () Int)
(declare-fun x2262 () Int)
(declare-fun x1077 () Int)
(declare-fun x2991 () Int)
(declare-fun x2883 () Int)
(declare-fun x1380 () Int)
(declare-fun x1817 () Int)
(declare-fun x1057 () Int)
(declare-fun x949 () Int)
(declare-fun x2279 () Int)
(declare-fun x206 () Int)
(declare-fun x1146 () Int)
(declare-fun x2802 () Int)
(declare-fun x2820 () Int)
(declare-fun x525 () Bool)
(declare-fun x654 () Bool)
(declare-fun x1140 () Int)
(declare-fun x2700 () Int)
(declare-fun x2213 () Int)
(declare-fun x1555 () Bool)
(declare-fun x543 () Int)
(declare-fun x2233 () Int)
(declare-fun x3075 () Int)
(declare-fun x3062 () Int)
(declare-fun x2507 () Int)
(declare-fun x2355 () Int)
(declare-fun x1980 () Int)
(declare-fun x1722 () Int)
(declare-fun x2867 () Int)
(declare-fun x1600 () Bool)
(declare-fun x2249 () Int)
(declare-fun x1745 () Int)
(declare-fun x489 () Bool)
(declare-fun x2017 () Int)
(declare-fun x1296 () Int)
(declare-fun x2411 () Bool)
(declare-fun x792 () Int)
(declare-fun x2833 () Int)
(declare-fun x920 () Int)
(declare-fun x2999 () Int)
(declare-fun x1351 () Int)
(declare-fun x2865 () Bool)
(declare-fun x328 () Int)
(declare-fun x90 () Int)
(declare-fun x2947 () Int)
(declare-fun x2368 () Int)
(declare-fun x3077 () Bool)
(declare-fun x1893 () Int)
(declare-fun x1527 () Int)
(declare-fun x492 () Bool)
(declare-fun x2956 () Int)
(declare-fun x3025 () Int)
(declare-fun x2297 () Int)
(declare-fun x2171 () Int)
(declare-fun x2998 () Int)
(declare-fun x2730 () Bool)
(declare-fun x638 () Int)
(declare-fun x1884 () Int)
(declare-fun x1819 () Int)
(declare-fun x1972 () Int)
(declare-fun x2042 () Int)
(declare-fun x677 () Int)
(declare-fun x2305 () Int)
(declare-fun x780 () Int)
(declare-fun x732 () Int)
(declare-fun x52 () Int)
(declare-fun x1302 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1925 () Int)
(declare-fun x3116 () Bool)
(declare-fun x1003 () Int)
(declare-fun x1915 () Int)
(declare-fun x1510 () Int)
(declare-fun x1469 () Int)
(declare-fun x1912 () Int)
(declare-fun x2782 () Int)
(declare-fun x680 () Int)
(declare-fun x3089 () Bool)
(declare-fun x427 () Int)
(declare-fun x646 () Int)
(declare-fun x1970 () Int)
(declare-fun x2407 () Int)
(declare-fun x2316 (Int) Int)
(declare-fun x2296 () Int)
(declare-fun x95 () Bool)
(declare-fun x428 () Int)
(declare-fun x2101 () Int)
(declare-fun x226 () Int)
(declare-fun x812 () Int)
(declare-fun x2581 () Int)
(declare-fun x1431 () Int)
(declare-fun x1005 () Bool)
(declare-fun x589 () Int)
(declare-fun x852 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x2611 () Int)
(declare-fun x1341 () Int)
(declare-fun x896 () Bool)
(declare-fun x2162 () Int)
(declare-fun x2669 () Int)
(declare-fun x2009 () Int)
(declare-fun x1262 () Int)
(declare-fun x2513 () Int)
(declare-fun x1924 () Int)
(declare-fun x1907 () Int)
(declare-fun x307 () Int)
(declare-fun x1673 () Int)
(declare-fun x3118 () Int)
(declare-fun x2089 () Int)
(declare-fun x250 () Int)
(declare-fun x2025 () Int)
(declare-fun x1081 () Int)
(declare-fun x2483 () Int)
(declare-fun x788 () Int)
(declare-fun x2282 () Int)
(declare-fun x2624 () Bool)
(declare-fun x877 () Bool)
(declare-fun x421 () Int)
(declare-fun x2246 () Int)
(declare-fun x1131 () Int)
(declare-fun x1211 () Int)
(declare-fun x719 () Int)
(declare-fun x1692 () Int)
(declare-fun x2447 () Int)
(declare-fun x2832 () Int)
(declare-fun x2527 () Bool)
(declare-fun x2377 () Int)
(declare-fun x1021 () Int)
(declare-fun x304 () Bool)
(declare-fun x171 () Int)
(declare-fun x1730 () Int)
(declare-fun x466 () Bool)
(declare-fun x1020 () Int)
(declare-fun x624 () Bool)
(declare-fun x1264 () Int)
(declare-fun x2960 () Int)
(declare-fun x668 () Int)
(declare-fun x1073 () Int)
(declare-fun x3013 () Int)
(declare-fun x1317 () Int)
(declare-fun x2685 () Int)
(declare-fun x2915 () Int)
(declare-fun x3035 () Int)
(declare-fun x1287 () Bool)
(declare-fun x810 () Int)
(declare-fun x672 () Int)
(declare-fun x1039 () Int)
(declare-fun x1307 () Int)
(declare-fun x2132 () Int)
(declare-fun x471 () Bool)
(declare-fun x2524 () Int)
(declare-fun x1164 () Int)
(declare-fun x512 () Int)
(declare-fun x2452 () Bool)
(declare-fun x224 () Int)
(declare-fun x141 () Bool)
(declare-fun x1273 () Int)
(declare-fun x59 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x2682 () Int)
(declare-fun x2807 () Int)
(declare-fun x2010 () Int)
(declare-fun x2888 () Bool)
(declare-fun x2519 () Int)
(declare-fun x2424 () Int)
(declare-fun x198 () Int)
(declare-fun x1543 () Int)
(declare-fun x3061 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x1786 () Int)
(declare-fun x2622 () Int)
(declare-fun x763 () Int)
(declare-fun x134 () Bool)
(declare-fun x1676 () Int)
(declare-fun x2005 () Int)
(declare-fun x660 () Int)
(declare-fun x1187 () Bool)
(declare-fun x3096 () Int)
(declare-fun x990 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x922 () Int)
(declare-fun x1681 () Int)
(declare-fun x401 () Int)
(declare-fun x1331 () Int)
(declare-fun x2258 (Int) Int)
(declare-fun x1604 () Bool)
(declare-fun x2537 (Int) Int)
(declare-fun x1426 () Int)
(declare-fun x1473 () Int)
(declare-fun x1014 () Bool)
(declare-fun x919 () Int)
(declare-fun x2818 () Int)
(declare-fun x2824 () Int)
(declare-fun x2551 () Bool)
(declare-fun x1035 () Int)
(declare-fun x983 () Int)
(declare-fun x540 () Int)
(declare-fun x2294 () Int)
(declare-fun x111 () Int)
(declare-fun x676 () Int)
(declare-fun x408 () Int)
(declare-fun x1078 () Int)
(declare-fun x74 () Bool)
(declare-fun x701 () Int)
(declare-fun x2648 () Int)
(declare-fun x2531 () Int)
(declare-fun x766 () Bool)
(declare-fun x778 () Int)
(declare-fun x961 () Int)
(declare-fun x440 () Int)
(declare-fun x2462 () Int)
(declare-fun x309 () Int)
(declare-fun x2612 () Int)
(declare-fun x2309 () Int)
(declare-fun x2191 () Int)
(declare-fun x1180 () Int)
(declare-fun x1678 () Int)
(declare-fun x1209 () Bool)
(declare-fun x3042 () Int)
(declare-fun x774 () Int)
(declare-fun x2738 () Int)
(declare-fun x2254 () Int)
(declare-fun x2571 () Int)
(declare-fun x759 () Int)
(declare-fun x1646 () Int)
(declare-fun x1675 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x453 () Int)
(declare-fun x207 () Int)
(declare-fun x1533 () Bool)
(declare-fun x2196 () Int)
(declare-fun x615 () Bool)
(declare-fun x652 () Int)
(declare-fun x316 () Int)
(declare-fun x2720 () Int)
(declare-fun x3157 () Int)
(declare-fun x966 () Int)
(declare-fun x1398 () Int)
(declare-fun x1386 () Int)
(declare-fun x1406 () Int)
(declare-fun x1094 () Int)
(declare-fun x218 () Int)
(declare-fun x1662 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x2632 () Int)
(declare-fun x945 () Bool)
(declare-fun x2211 () Int)
(declare-fun x2331 () Int)
(declare-fun x1165 () Int)
(declare-fun x1212 () Int)
(declare-fun x1271 () Int)
(declare-fun x2878 () Int)
(declare-fun x910 () Bool)
(declare-fun x39 () Int)
(declare-fun x1159 () Int)
(declare-fun x1792 () Bool)
(declare-fun x950 () Int)
(declare-fun x746 () Int)
(declare-fun x2086 () Int)
(declare-fun x2369 () Int)
(declare-fun x2925 () Bool)
(declare-fun x682 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x153 () Int)
(declare-fun x422 () Int)
(declare-fun x1826 () Int)
(declare-fun x1200 () Bool)
(declare-fun x369 () Int)
(declare-fun x2620 () Int)
(declare-fun x5 (Int Int) Int)
(declare-fun x1982 () Int)
(declare-fun x1590 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x3164 () Bool)
(declare-fun x1553 () Int)
(declare-fun x3141 () Int)
(declare-fun x1462 () Int)
(declare-fun x1374 () Int)
(declare-fun x1889 () Int)
(declare-fun x642 () Bool)
(declare-fun x2280 () Int)
(declare-fun x2983 () Bool)
(declare-fun x661 () Int)
(declare-fun x785 () Int)
(declare-fun x2064 () Int)
(declare-fun x1702 () Int)
(declare-fun x1058 () Bool)
(declare-fun x2615 () Int)
(declare-fun x3099 (Int) Int)
(declare-fun x2437 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x194 () Int)
(declare-fun x1782 () Int)
(declare-fun x1141 () Bool)
(declare-fun x1255 () Int)
(declare-fun x2764 () Int)
(declare-fun x292 () Int)
(declare-fun x793 () Int)
(declare-fun x696 () Bool)
(declare-fun x1148 () Int)
(declare-fun x764 () Int)
(declare-fun x2766 () Int)
(declare-fun x645 () Int)
(declare-fun x2830 () Int)
(declare-fun x1415 () Int)
(declare-fun x625 () Bool)
(declare-fun x1768 () Int)
(declare-fun x939 () Int)
(declare-fun x2242 () Int)
(declare-fun x795 () Int)
(declare-fun x1579 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x1989 () Int)
(declare-fun x2043 () Bool)
(declare-fun x791 () Int)
(declare-fun x3140 () Int)
(declare-fun x2038 () Int)
(declare-fun x2209 () Bool)
(declare-fun x1274 () Int)
(declare-fun x1640 () Int)
(declare-fun x498 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x626 () Int)
(declare-fun x84 () Bool)
(declare-fun x2230 () Int)
(declare-fun x1500 () Int)
(declare-fun x2774 () Int)
(declare-fun x390 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1966 () Int)
(declare-fun x1285 () Int)
(declare-fun x3036 () Int)
(declare-fun x216 () Int)
(declare-fun x2339 () Int)
(declare-fun x1069 () Int)
(declare-fun x1718 () Bool)
(declare-fun x1539 () Int)
(declare-fun x808 () Bool)
(declare-fun x434 () Bool)
(declare-fun x237 () Int)
(declare-fun x1223 () Int)
(declare-fun x2366 () Int)
(declare-fun x2405 () Int)
(declare-fun x1412 () Int)
(declare-fun x921 () Int)
(declare-fun x2645 () Bool)
(declare-fun x1812 () Int)
(declare-fun x552 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x1450 () Int)
(declare-fun x880 () Bool)
(declare-fun x2192 () Int)
(declare-fun x848 () Bool)
(declare-fun x3159 () Int)
(declare-fun x1765 () Bool)
(declare-fun x424 () Bool)
(declare-fun x2214 () Int)
(declare-fun x256 () Int)
(declare-fun x2048 () Bool)
(declare-fun x1835 () Int)
(declare-fun x1239 () Int)
(declare-fun x1913 () Int)
(declare-fun x3069 () Int)
(declare-fun x879 () Int)
(declare-fun x3006 () Int)
(declare-fun x1674 () Bool)
(declare-fun x1064 () Int)
(declare-fun x2077 () Bool)
(declare-fun x3024 () Int)
(declare-fun x1569 () Int)
(declare-fun x2432 () Int)
(declare-fun x572 () Int)
(declare-fun x1480 () Int)
(declare-fun x1479 () Int)
(declare-fun x1457 () Int)
(declare-fun x813 () Int)
(declare-fun x2380 () Int)
(declare-fun x1603 () Int)
(declare-fun x2979 () Int)
(declare-fun x1220 () Int)
(declare-fun x2642 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x2450 () Int)
(declare-fun x395 () Int)
(declare-fun x1491 () Int)
(declare-fun x1513 () Int)
(declare-fun x326 () Int)
(declare-fun x1824 () Int)
(declare-fun x703 () Int)
(declare-fun x1509 () Int)
(declare-fun x3123 () Int)
(declare-fun x1227 () Int)
(declare-fun x2350 () Int)
(declare-fun x479 () Int)
(declare-fun x1711 () Int)
(declare-fun x268 () Int)
(declare-fun x1201 () Int)
(declare-fun x3045 () Bool)
(declare-fun x1132 () Int)
(declare-fun x187 () Int)
(declare-fun x2433 () Int)
(declare-fun x2346 () Int)
(declare-fun x1396 () Int)
(declare-fun x663 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1237 () Int)
(declare-fun x2693 () Bool)
(declare-fun x232 () Int)
(declare-fun x158 () Int)
(declare-fun x1470 () Int)
(declare-fun x458 () Int)
(declare-fun x1895 () Bool)
(declare-fun x2872 () Int)
(declare-fun x3064 () Int)
(declare-fun x147 () Int)
(declare-fun x1232 () Int)
(declare-fun x267 () Int)
(declare-fun x2605 () Int)
(declare-fun x743 () Int)
(declare-fun x928 () Bool)
(declare-fun x2704 () Int)
(declare-fun x1615 () Bool)
(declare-fun x2205 () Int)
(declare-fun x1787 () Int)
(declare-fun x532 () Int)
(declare-fun x1250 () Int)
(declare-fun x1596 () Int)
(declare-fun x2723 () Bool)
(declare-fun x1874 () Int)
(declare-fun x2387 () Bool)
(declare-fun x2977 () Int)
(declare-fun x834 () Int)
(declare-fun x1350 () Int)
(declare-fun x1827 () Int)
(declare-fun x1494 () Int)
(declare-fun x760 () Int)
(declare-fun x1965 () Bool)
(declare-fun x2442 () Int)
(declare-fun x2535 () Int)
(declare-fun x418 () Int)
(declare-fun x2147 () Bool)
(declare-fun x2717 () Int)
(declare-fun x1720 () Int)
(declare-fun x116 () Int)
(declare-fun x588 () Int)
(declare-fun x643 () Int)
(declare-fun x81 () Bool)
(declare-fun x1059 () Int)
(declare-fun x2868 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x2295 () Int)
(declare-fun x2467 () Int)
(declare-fun x956 () Int)
(declare-fun x916 () Int)
(declare-fun x49 () Bool)
(declare-fun x585 () Int)
(declare-fun x66 () Bool)
(declare-fun x382 () Int)
(declare-fun x1753 () Int)
(declare-fun x2916 () Int)
(declare-fun x255 () Bool)
(declare-fun x2780 () Int)
(declare-fun x982 () Int)
(declare-fun x1010 () Int)
(declare-fun x1410 () Int)
(declare-fun x2434 () Int)
(declare-fun x1733 () Int)
(declare-fun x3125 () Int)
(declare-fun x1766 () Int)
(declare-fun x393 () Bool)
(declare-fun x3005 () Bool)
(declare-fun x1334 () Int)
(declare-fun x2988 () Int)
(declare-fun x2924 () Bool)
(declare-fun x2694 () Int)
(declare-fun x1621 () Bool)
(declare-fun x357 () Int)
(declare-fun x1935 () Bool)
(declare-fun x3162 () Int)
(declare-fun x189 () Int)
(declare-fun x2221 () Int)
(declare-fun x1537 () Int)
(declare-fun x2320 () Int)
(declare-fun x2574 () Int)
(declare-fun x2542 () Int)
(declare-fun x2678 () Int)
(declare-fun x275 () Bool)
(declare-fun x955 () Int)
(declare-fun x3137 () Int)
(declare-fun x2181 () Int)
(declare-fun x2623 () Bool)
(declare-fun x2304 () Int)
(declare-fun x1169 () Int)
(declare-fun x2208 () Int)
(declare-fun x289 () Int)
(declare-fun x1115 () Bool)
(declare-fun x271 () Int)
(declare-fun x2069 () Bool)
(declare-fun x1241 () Int)
(declare-fun x439 () Int)
(declare-fun x2503 () Int)
(declare-fun x2274 () Bool)
(declare-fun x2410 () Int)
(declare-fun x2148 () Int)
(declare-fun x1665 () Int)
(declare-fun x2183 () Int)
(declare-fun x2415 () Bool)
(declare-fun x157 () Int)
(declare-fun x991 () Bool)
(declare-fun x2635 () Int)
(declare-fun x1453 () Int)
(declare-fun x1451 () Bool)
(declare-fun x1639 () Int)
(declare-fun x523 () Int)
(declare-fun x2144 () Bool)
(declare-fun x1323 (Int) Int)
(declare-fun x1245 () Int)
(declare-fun x1937 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x1044 () Int)
(declare-fun x2892 () Int)
(declare-fun x1460 () Int)
(declare-fun x901 () Int)
(declare-fun x455 () Int)
(declare-fun x432 () Int)
(declare-fun x805 () Bool)
(declare-fun x993 () Int)
(declare-fun x2558 () Int)
(declare-fun x2889 () Int)
(declare-fun x2100 () Bool)
(declare-fun x18 () Int)
(declare-fun x2666 () Int)
(declare-fun x2891 () Int)
(declare-fun x188 () Bool)
(declare-fun x908 () Int)
(declare-fun x3102 () Bool)
(declare-fun x2463 () Int)
(declare-fun x826 () Int)
(declare-fun x1381 () Int)
(declare-fun x1617 () Int)
(declare-fun x2425 () Bool)
(declare-fun x2902 () Int)
(declare-fun x2451 () Int)
(declare-fun x2575 () Int)
(declare-fun x345 () Int)
(declare-fun x818 () Int)
(declare-fun x2910 () Bool)
(declare-fun x3001 () Int)
(declare-fun x1332 () Int)
(declare-fun x2235 () Int)
(declare-fun x246 () Bool)
(declare-fun x2926 () Int)
(declare-fun x1030 () Int)
(declare-fun x687 () Int)
(declare-fun x2691 () Int)
(declare-fun x2150 () Int)
(declare-fun x100 () Bool)
(declare-fun x2870 () Int)
(declare-fun x985 () Int)
(declare-fun x622 () Int)
(declare-fun x1932 () Int)
(declare-fun x2165 () Int)
(declare-fun x2157 () Int)
(declare-fun x2008 () Int)
(declare-fun x472 () Int)
(declare-fun x412 () Int)
(declare-fun x1128 () Int)
(declare-fun x967 () Bool)
(declare-fun x706 () Int)
(declare-fun x892 () Int)
(declare-fun x2561 () Int)
(declare-fun x824 () Bool)
(declare-fun x988 () Int)
(declare-fun x786 () Int)
(declare-fun x1300 () Int)
(declare-fun x293 () Int)
(declare-fun x2739 () Int)
(declare-fun x3079 () Int)
(declare-fun x2546 () Int)
(declare-fun x1052 () Int)
(declare-fun x1129 () Bool)
(declare-fun x1599 () Int)
(declare-fun x548 () Bool)
(declare-fun x2324 (Int) Int)
(declare-fun x1432 () Int)
(declare-fun x208 () Int)
(declare-fun x2518 () Int)
(declare-fun x2325 () Int)
(declare-fun x177 () Bool)
(declare-fun x2940 () Int)
(declare-fun x2098 () Int)
(declare-fun x1496 () Int)
(declare-fun x332 () Bool)
(declare-fun x258 () Int)
(declare-fun x160 () Bool)
(declare-fun x2271 () Int)
(declare-fun x127 () Int)
(declare-fun x373 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1927 () Int)
(declare-fun x1520 () Int)
(declare-fun x2073 () Bool)
(declare-fun x2657 () Int)
(declare-fun x2160 () Int)
(declare-fun x1821 () Bool)
(declare-fun x3085 () Int)
(declare-fun x1267 () Int)
(declare-fun x383 () Bool)
(declare-fun x2706 () Int)
(declare-fun x2809 () Int)
(declare-fun x2841 () Bool)
(declare-fun x2107 () Int)
(declare-fun x1778 () Bool)
(declare-fun x2972 () Int)
(declare-fun x2587 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x1297 () Int)
(declare-fun x1100 () Int)
(declare-fun x1703 () Bool)
(declare-fun x119 () Int)
(declare-fun x2131 () Int)
(declare-fun x1301 () Int)
(declare-fun x214 () Int)
(declare-fun x1507 () Int)
(declare-fun x2481 () Bool)
(declare-fun x2365 () Int)
(declare-fun x2568 () Bool)
(declare-fun x1536 () Int)
(declare-fun x2112 () Int)
(declare-fun x1598 () Int)
(declare-fun x1799 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x242 () Int)
(declare-fun x2473 () Int)
(declare-fun x2761 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x506 () Int)
(declare-fun x299 () Bool)
(declare-fun x1762 () Int)
(declare-fun x347 () Int)
(declare-fun x1354 () Int)
(declare-fun x149 () Int)
(declare-fun x2210 () Int)
(declare-fun x1831 () Int)
(declare-fun x1278 () Int)
(declare-fun x2141 () Int)
(declare-fun x797 () Int)
(declare-fun x1413 () Int)
(declare-fun x980 () Bool)
(declare-fun x595 (Int) Int)
(declare-fun x351 () Int)
(declare-fun x2020 () Int)
(declare-fun x1089 () Bool)
(declare-fun x1072 () Int)
(declare-fun x2004 () Int)
(declare-fun x2948 () Bool)
(declare-fun x1015 () Int)
(declare-fun x2594 () Int)
(declare-fun x1695 () Int)
(declare-fun x1888 () Int)
(declare-fun x601 () Bool)
(declare-fun x1157 () Int)
(declare-fun x1519 () Int)
(declare-fun x514 () Int)
(declare-fun x2335 () Int)
(declare-fun x1861 () Int)
(declare-fun x1878 () Int)
(declare-fun x1963 () Int)
(declare-fun x1828 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x3129 () Int)
(declare-fun x977 () Int)
(declare-fun x1973 () Int)
(declare-fun x2121 () Int)
(declare-fun x602 () Int)
(declare-fun x2104 () Bool)
(declare-fun x1088 () Int)
(declare-fun x2884 () Int)
(declare-fun x1154 () Int)
(declare-fun x2015 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x658 () Int)
(declare-fun x297 () Int)
(declare-fun x1694 () Int)
(declare-fun x574 () Bool)
(declare-fun x38 () Int)
(declare-fun x317 () Int)
(declare-fun x2775 () Int)
(declare-fun x1259 () Int)
(declare-fun x2488 () Int)
(declare-fun x2303 () Bool)
(declare-fun x2041 () Int)
(declare-fun x2858 () Int)
(declare-fun x1121 () Int)
(declare-fun x716 () Bool)
(declare-fun x2310 () Int)
(declare-fun x2593 () Bool)
(declare-fun x1085 () Int)
(declare-fun x1776 () Int)
(declare-fun x2003 () Int)
(declare-fun x2864 () Int)
(declare-fun x1313 () Int)
(declare-fun x1188 () Int)
(declare-fun x1921 () Bool)
(declare-fun x2556 () Int)
(declare-fun x2012 () Int)
(declare-fun x349 () Int)
(declare-fun x952 () Int)
(declare-fun x2182 () Int)
(declare-fun x123 () Bool)
(declare-fun x969 () Int)
(declare-fun x2533 () Int)
(declare-fun x150 () Int)
(declare-fun x1461 () Int)
(declare-fun x2935 () Bool)
(declare-fun x2598 () Int)
(declare-fun x1988 () Int)
(declare-fun x47 () Int)
(declare-fun x965 () Bool)
(declare-fun x1588 () Bool)
(declare-fun x387 () Bool)
(declare-fun x2186 () Int)
(declare-fun x352 () Bool)
(declare-fun x2047 () Int)
(declare-fun x29 () Int)
(declare-fun x2816 () Int)
(declare-fun x2128 () Bool)
(declare-fun x2108 () Int)
(declare-fun x1185 () Bool)
(declare-fun x2861 () Int)
(declare-fun x1328 () Int)
(declare-fun x3008 () Int)
(declare-fun x2401 () Int)
(declare-fun x2480 () Int)
(declare-fun x2968 () Int)
(declare-fun x1575 () Bool)
(declare-fun x807 () Bool)
(declare-fun x2863 () Int)
(declare-fun x968 () Int)
(declare-fun x2596 () Int)
(declare-fun x2146 () Int)
(declare-fun x2799 () Int)
(declare-fun x2449 () Int)
(declare-fun x1103 () Int)
(declare-fun x1644 () Int)
(declare-fun x2337 () Int)
(declare-fun x2248 () Int)
(declare-fun x775 () Int)
(declare-fun x2120 () Int)
(declare-fun x175 () Int)
(declare-fun x1581 () Int)
(declare-fun x724 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x359 () Int)
(declare-fun x499 () Int)
(declare-fun x331 () Int)
(declare-fun x2232 () Int)
(declare-fun x1025 () Int)
(declare-fun x1938 () Int)
(declare-fun x1448 () Int)
(declare-fun x971 () Bool)
(declare-fun x2835 () Bool)
(declare-fun x1068 () Int)
(declare-fun x1042 () Int)
(declare-fun x710 () Int)
(declare-fun x509 () Bool)
(declare-fun x690 () Int)
(declare-fun x2315 () Int)
(declare-fun x3049 () Int)
(declare-fun x2779 () Bool)
(declare-fun x1883 () Int)
(declare-fun x1033 () Int)
(declare-fun x1265 () Int)
(declare-fun x1142 () Int)
(declare-fun x779 () Int)
(declare-fun x2718 () Int)
(declare-fun x1911 () Int)
(declare-fun x2007 () Int)
(declare-fun x1685 () Int)
(declare-fun x2252 () Int)
(declare-fun x2985 () Int)
(declare-fun x353 () Int)
(declare-fun x951 () Int)
(declare-fun x2170 () Int)
(declare-fun x1339 () Int)
(declare-fun x1829 () Int)
(declare-fun x1823 () Bool)
(declare-fun x2402 () Int)
(declare-fun x1118 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x423 () Bool)
(declare-fun x2929 () Int)
(declare-fun x238 () Int)
(declare-fun x1283 () Int)
(declare-fun x2333 () Int)
(declare-fun x1122 () Int)
(declare-fun x2323 () Int)
(declare-fun x1689 () Bool)
(declare-fun x568 () Int)
(declare-fun x1130 () Int)
(declare-fun x277 () Int)
(declare-fun x1838 () Bool)
(declare-fun x343 () Bool)
(declare-fun x183 () Int)
(declare-fun x2917 () Int)
(declare-fun x2345 () Int)
(declare-fun x394 () Int)
(declare-fun x609 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x2857 () Int)
(declare-fun x2384 () Int)
(declare-fun x2102 () Int)
(declare-fun x223 () Int)
(declare-fun x1707 () Int)
(declare-fun x3098 () Int)
(declare-fun x1456 () Int)
(declare-fun x2689 () Int)
(declare-fun x2156 () Int)
(declare-fun x2444 () Bool)
(declare-fun x1593 () Int)
(declare-fun x2158 () Int)
(declare-fun x1958 () Bool)
(declare-fun x1900 () Int)
(declare-fun x93 () Int)
(declare-fun x3106 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1796 () Int)
(declare-fun x2455 () Int)
(declare-fun x379 () Int)
(declare-fun x249 () Int)
(declare-fun x689 () Int)
(declare-fun x3051 () Int)
(declare-fun x1236 () Int)
(declare-fun x1054 () Int)
(declare-fun x1096 () Int)
(declare-fun x1075 () Int)
(declare-fun x885 () Int)
(declare-fun x37 () Int)
(declare-fun x2367 () Int)
(declare-fun x2650 () Int)
(declare-fun x2317 () Int)
(declare-fun x2851 () Bool)
(declare-fun x1672 () Int)
(declare-fun x1177 () Int)
(declare-fun x55 () Int)
(declare-fun x1360 () Bool)
(declare-fun x2583 () Int)
(declare-fun x1979 () Int)
(declare-fun x2565 () Int)
(declare-fun x915 () Int)
(declare-fun x2695 () Int)
(declare-fun x1195 () Bool)
(declare-fun x2978 () Bool)
(declare-fun x2207 () Int)
(declare-fun x789 () Int)
(declare-fun x3012 () Bool)
(declare-fun x1388 () Int)
(declare-fun x1056 () Int)
(declare-fun x1182 () Int)
(declare-fun x391 () Int)
(declare-fun x330 () Bool)
(declare-fun x1465 () Int)
(declare-fun x1868 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x2079 () Int)
(declare-fun x739 () Int)
(declare-fun x1684 () Bool)
(declare-fun x1723 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1629 () Int)
(declare-fun x483 () Int)
(declare-fun x1053 () Int)
(declare-fun x1589 () Bool)
(declare-fun x2468 () Int)
(declare-fun x912 () Int)
(declare-fun x566 () Int)
(declare-fun x3133 () Int)
(declare-fun x907 () Int)
(declare-fun x159 () Int)
(declare-fun x796 () Int)
(declare-fun x2429 () Int)
(declare-fun x747 () Int)
(declare-fun x2797 () Int)
(declare-fun x2378 () Bool)
(declare-fun x2292 () Int)
(declare-fun x1953 () Int)
(declare-fun x2601 () Int)
(declare-fun x657 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1090 () Int)
(declare-fun x909 () Bool)
(declare-fun x979 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x1138 () Bool)
(define-fun x3095 ((x1862 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1862) (>= x1862 0)) x1862 (- x1862 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2951 ((x1862 Int)) Int (ite (and (< x1862 0) (>= x1862 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1862 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1862))
(define-fun x2630 ((x1862 Int)) Int (ite (and (>= x1862 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1862)) x1862 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1862) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1862)) (- x1862 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1862 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1862 0)) (+ x1862 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x697 x1862 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x730 ((x2067 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2067) (<= 0 x2067)))
(define-fun x1008 ((x2067 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2067) (>= x2067 0)))
(define-fun x2216 ((x2067 Int) (x1807 Int)) Bool (= (* x1807 x2067) (x42 x2067 x1807)))
(define-fun x276 ((x2067 Int) (x1807 Int)) Bool (and (= (- (* (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2067) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x42 (- x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x42 x2067 (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x2067 (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1807 x2067) (* x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x42 (- x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1807))))
(define-fun x2655 ((x2067 Int) (x1807 Int)) Bool (=> (and (< 0 x2067) (< 0 x1807)) (= (= x1807 (x5 (x2630 (x42 x2067 x1807)) x2067)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x42 x2067 x1807)))))
(define-fun x890 ((x2067 Int) (x1807 Int)) Bool (=> (and (not (= x1807 0)) (not (= 0 x2067))) (and (= (x5 (x42 x2067 x1807) x2067) x1807) (= (x5 (x42 x2067 x1807) x1807) x2067))))
(define-fun x2448 ((x2067 Int) (x1807 Int)) Bool (=> (and (< 0 x1807) (> x2067 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x42 x2067 x1807)) (< (x5 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2067) x1807))))
(define-fun x1365 ((x2067 Int) (x1807 Int)) Bool (and (= (x2630 (x42 x2067 x1807)) (x2630 (x42 x2067 (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2630 (x42 (- x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1807)) (x2630 (x42 x2067 x1807))) (= (x2630 (x42 (- x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2630 (x42 x2067 x1807)))))
(define-fun x136 ((x2067 Int) (x1807 Int)) Bool (and (=> (and (and (<= x1807 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1807)) (and (> x2067 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2067))) (= (>= (x5 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1807) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2067)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x42 (- x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1807)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1807) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1807)) (and (> x2067 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2067))) (= (<= (x42 (- x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x5 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1807)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2067)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1807) (> x1807 0)) (and (< 0 x2067) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2067))) (= (>= (x5 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1807) x2067) (<= (x42 x2067 x1807) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1807) (<= x1807 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2067) (> x2067 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1807) (x5 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2067)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x42 x2067 (- x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x1613 ((x2067 Int) (x1807 Int)) Bool (and (x2216 x2067 x1807) (x136 x2067 x1807) (x890 x2067 x1807) (x1365 x2067 x1807) (x276 x2067 x1807) (x2655 x2067 x1807) (x2448 x2067 x1807)))
(define-fun x1628 ((x2067 Int)) Bool (and (= 0 (x42 0 x2067)) (= 0 (x42 x2067 0))))
(define-fun x13 ((x2067 Int)) Bool (and (= (x42 x2067 1) x2067) (= (x42 1 x2067) x2067)))
(define-fun x2800 ((x2067 Int)) Bool (and (x13 x2067) (x1628 x2067)))
(define-fun x3092 ((x2067 Int)) Bool (and (= (x545 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2067) x2067) (= x2067 (x545 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x2068 ((x2067 Int)) Bool (and (= 0 (x545 0 x2067)) (= 0 (x545 x2067 0))))
(define-fun x1788 ((x2067 Int)) Bool (= x2067 (x545 x2067 x2067)))
(define-fun x1174 ((x2067 Int)) Bool (and (x3092 x2067) (x2068 x2067) (x1788 x2067)))
(define-fun x981 ((x2067 Int) (x1807 Int)) Bool (= (x545 x2067 x1807) (x545 x1807 x2067)))
(define-fun x2975 ((x2067 Int) (x1807 Int)) Bool (and (=> (<= 0 x2067) (>= x2067 (x545 x2067 x1807))) (<= 0 (x545 x2067 x1807)) (=> (<= 0 x1807) (>= x1807 (x545 x2067 x1807)))))
(define-fun x1345 ((x2067 Int) (x1807 Int)) Bool (and (x2975 x2067 x1807) (x981 x2067 x1807)))
(define-fun x196 ((x2067 Int)) Bool (= (x697 x2067 1461501637330902918203684832716283019655932542976) (x545 x2067 1461501637330902918203684832716283019655932542975)))
(define-fun x400 ((x2067 Int)) Bool (and (x196 x2067) (x1345 x2067 1461501637330902918203684832716283019655932542975)))
(define-fun x2092 ((x2067 Int) (x1807 Int)) Bool (and (> x1807 (x697 x2067 x1807)) (>= (x697 x2067 x1807) 0)))
(define-fun x415 ((x2067 Int) (x1807 Int)) Bool (=> (and (<= 0 x2067) (> x1807 0)) (= (> x1807 x2067) (= (x697 x2067 x1807) x2067))))
(define-fun x2478 ((x2067 Int) (x1807 Int)) Bool (=> (and (and (>= x2067 x1807) (< x2067 (+ x1807 x1807))) (< 0 x1807)) (= (- x2067 x1807) (x697 x2067 x1807))))
(define-fun x3091 ((x2067 Int) (x1807 Int)) Bool (=> (< 0 x1807) (= x2067 (+ (* x1807 (x5 x2067 x1807)) (x697 x2067 x1807)))))
(define-fun x634 ((x2067 Int) (x1807 Int)) Bool (and (x2092 x2067 x1807) (x3091 x2067 x1807) (x2478 x2067 x1807) (x415 x2067 x1807)))
(define-fun x2344 ((x2067 Int)) Bool (= (x697 0 x2067) 0))
(define-fun x120 ((x2067 Int)) Bool (= 0 (x697 x2067 1)))
(define-fun x2964 ((x2067 Int)) Bool (= (x697 x2067 x2067) 0))
(define-fun x1620 ((x2067 Int)) Bool (and (x120 x2067) (x2964 x2067) (x2344 x2067)))
(define-fun x1508 ((x2067 Int)) Bool (= (x2630 x2067) (+ (x697 x2067 32) (x545 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x1006 ((x2067 Int)) Bool (and (x1345 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1508 x2067)))
(define-fun x2920 ((x2067 Int) (x1807 Int)) Bool (=> (and (< 0 x1807) (< 0 x2067)) (and (<= (x5 x2067 x1807) x2067) (<= 0 (x5 x2067 x1807)))))
(define-fun x2285 ((x2067 Int) (x1807 Int)) Bool (=> (and (and (>= x2067 0) (< x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x1807 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x1807))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5 x2067 x1807)) (>= (x5 x2067 x1807) 0))))
(define-fun x2711 ((x2067 Int) (x1807 Int)) Bool (=> (and (< x1807 x2067) (> x1807 1)) (> x2067 (x5 x2067 x1807))))
(define-fun x396 ((x2067 Int) (x1807 Int)) Bool (=> (and (< 0 x1807) (< 0 x2067)) (= (> x1807 x2067) (= (x5 x2067 x1807) 0))))
(define-fun x814 ((x2067 Int) (x1807 Int)) Bool (=> (and (> x1807 0) (> x2067 0)) (and (<= (* x1807 (x5 x2067 x1807)) x2067) (< (- x2067 x1807) (* x1807 (x5 x2067 x1807))))))
(define-fun x2735 ((x2067 Int) (x1807 Int)) Bool (= (- x2067 (x545 (- x1807 1) x2067)) (* x1807 (x5 x2067 x1807))))
(define-fun x2505 ((x2067 Int) (x1807 Int)) Bool (and (x396 x2067 x1807) (x2285 x2067 x1807) (x814 x2067 x1807) (x2711 x2067 x1807) (x2735 x2067 x1807) (x2920 x2067 x1807)))
(define-fun x1808 ((x2067 Int)) Bool (= 0 (x5 0 x2067)))
(define-fun x958 ((x2067 Int)) Bool (= x2067 (x5 x2067 1)))
(define-fun x3148 ((x2067 Int)) Bool (=> (not (= x2067 0)) (= (x5 x2067 x2067) 1)))
(define-fun x204 ((x2067 Int)) Bool (and (x1808 x2067) (x958 x2067) (x3148 x2067)))
(define-fun x2954 ((x50 Int)) Int (ite (> x1646 x50) (x1405 x50) 0))
(define-fun x2231 ((x50 Int)) Int 0)
(define-fun x3072 ((x50 Int)) Int (x2687 x50))
(define-fun x837 ((x50 Int)) Int (x1505 x50))
(define-fun x1517 ((x50 Int)) Int (x308 x50))
(define-fun x1631 ((x50 Int)) Int (x341 x50))
(define-fun x476 ((x50 Int)) Int (x10 x50))
(define-fun x2592 ((x50 Int)) Int 0)
(define-fun x1524 ((x50 Int)) Int (ite (= 4 x50) 32 (x2592 x50)))
(define-fun x1991 ((x50 Int)) Int (ite (= 36 x50) x2006 (x1524 x50)))
(define-fun x1797 ((x50 Int)) Int (ite (= x50 68) x860 (x1991 x50)))
(define-fun x265 ((x50 Int)) Int (ite (= x50 100) x793 (x1797 x50)))
(define-fun x1361 ((x50 Int)) Int (ite (= x50 132) 352 (x265 x50)))
(define-fun x573 ((x50 Int)) Int (ite (= x50 388) x65 (x1361 x50)))
(define-fun x456 ((x50 Int)) Int (ite (and (> (+ x121 420) x50) (>= x50 420)) (x3072 (- x50 420)) (x573 x50)))
(define-fun x1309 ((x50 Int)) Int (ite (= 164 x50) x336 (x456 x50)))
(define-fun x935 ((x50 Int)) Int (ite (= x50 x1780) x2942 (x1309 x50)))
(define-fun x1860 ((x50 Int)) Int (ite (and (<= x2833 x50) (> (+ x2833 x656) x50)) (x837 (- x50 x2833)) (x935 x50)))
(define-fun x1825 ((x50 Int)) Int (ite (= x50 196) x1020 (x1860 x50)))
(define-fun x2486 ((x50 Int)) Int (ite (= x3013 x50) x676 (x1825 x50)))
(define-fun x1632 ((x50 Int)) Int (ite (and (<= x788 x50) (> (+ x788 x2053) x50)) (x1517 (- x50 x788)) (x2486 x50)))
(define-fun x1248 ((x50 Int)) Int (ite (= x50 228) x409 (x1632 x50)))
(define-fun x1254 ((x50 Int)) Int (ite (= x45 x50) x2176 (x1248 x50)))
(define-fun x475 ((x50 Int)) Int (ite (and (> (+ x1033 x2176) x50) (<= x1033 x50)) (x1631 (- x50 x1033)) (x1254 x50)))
(define-fun x1726 ((x50 Int)) Int (ite (= x50 260) x3028 (x475 x50)))
(define-fun x1998 ((x50 Int)) Int (ite (= x1025 x50) x690 (x1726 x50)))
(define-fun x2654 ((x50 Int)) Int (ite (and (> (+ x202 x2119) x50) (<= x202 x50)) (x476 (- x50 x202)) (x1998 x50)))
(define-fun x306 ((x50 Int)) Int (ite (= x50 292) x952 (x2654 x50)))
(define-fun x212 ((x50 Int)) Int (ite (= 324 x50) x1904 (x306 x50)))
(define-fun x2905 ((x50 Int)) Int (ite (= x50 356) x2345 (x212 x50)))
(define-fun x1438 ((x50 Int)) Int (ite (= x1128 x50) x1265 (x539 x50)))
(define-fun x1257 ((x50 Int)) Int (ite (= x2234 x50) x1494 (x1438 x50)))
(define-fun x527 ((x50 Int)) Int (ite (= 128 x50) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x2231 x50)))
(define-fun x1477 ((x50 Int)) Int (ite (= x50 132) x1550 (x527 x50)))
(define-fun x1240 ((x50 Int)) Int (ite (= 164 x50) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x1477 x50)))
(define-fun x736 ((x50 Int)) Int (ite (and (>= x50 128) (< x50 160)) (x2399 (- x50 128)) (x1240 x50)))
(define-fun x2372 ((x50 Int)) Int (ite x1559 (x736 x50) (x1240 x50)))
(define-fun x2314 ((x50 Int)) Int (ite (and (<= 128 x50) (< x50 160)) (x2399 (- x50 128)) (x2372 x50)))
(define-fun x607 ((x50 Int)) Int (ite (= x50 288) x1250 (x2314 x50)))
(define-fun x1531 ((x50 Int)) Int (ite (= 160 x50) 288 (x607 x50)))
(define-fun x1585 ((x50 Int)) Int (ite (= 320 x50) x2440 (x1531 x50)))
(define-fun x211 ((x50 Int)) Int (ite (= x50 352) x1919 (x1585 x50)))
(define-fun x113 ((x50 Int)) Int (ite (= 448 x50) x1142 (x211 x50)))
(define-fun x1775 ((x50 Int)) Int (ite (= x50 x2315) x1157 (x113 x50)))
(define-fun x2288 ((x50 Int)) Int (ite (= x50 x1229) x1715 (x1775 x50)))
(define-fun x1756 ((x50 Int)) Int (ite (= x50 x806) x888 (x2288 x50)))
(define-fun x1045 ((x50 Int)) Int (ite (and (<= x2213 x50) (> (+ x888 x2213) x50)) (x2905 (- (+ x919 x50) x2213)) (x1756 x50)))
(define-fun x1736 ((x50 Int)) Int (ite (= x50 x2454) 0 (x1045 x50)))
(define-fun x2701 ((x50 Int)) Int (ite (= x1723 x50) x806 (x1736 x50)))
(define-fun x790 ((x50 Int)) Int (ite (= 480 x50) x2315 (x2701 x50)))
(define-fun x334 ((x50 Int)) Int (ite x755 (x113 x50) (x790 x50)))
(define-fun x1574 ((x50 Int)) Int (ite (= x50 384) 448 (x334 x50)))
(define-fun x1577 ((x50 Int)) Int (ite (= x50 x559) x2441 (x1574 x50)))
(define-fun x884 ((x50 Int)) Int (ite (and (> (+ x791 x2441) x50) (>= x50 x791)) (x2905 (- (+ x50 x2212) x791)) (x1577 x50)))
(define-fun x219 ((x50 Int)) Int (ite (= x50 x351) 0 (x884 x50)))
(define-fun x2698 ((x50 Int)) Int (ite (= 416 x50) x559 (x219 x50)))
(define-fun x3031 ((x50 Int)) Int (ite (= x50 192) 320 (x2698 x50)))
(define-fun x263 ((x50 Int)) Int (ite (= 224 x50) x2569 (x3031 x50)))
(define-fun x2679 ((x50 Int)) Int (ite (= x50 256) x660 (x263 x50)))
(define-fun x2900 ((x50 Int)) Int (ite (= x50 x1815) x2584 (x2679 x50)))
(define-fun x1311 ((x50 Int)) Int (ite (and (>= x50 x2236) (> (+ x2584 x2236) x50)) (x2905 (- (+ x430 x50) x2236)) (x2900 x50)))
(define-fun x2312 ((x50 Int)) Int (ite (= x50 x166) 0 (x1311 x50)))
(define-fun x816 ((x50 Int)) Int (ite (= x1771 x50) x1496 (x2312 x50)))
(define-fun x2253 ((x50 Int)) Int (ite (= x36 x50) x1978 (x816 x50)))
(define-fun x2591 ((x50 Int)) Int (ite (= x2166 x50) x3007 (x2253 x50)))
(define-fun x1370 ((x50 Int)) Int (ite (= x2518 x50) x3153 (x2591 x50)))
(define-fun x2392 ((x50 Int)) Int (ite (= x50 x1608) x2743 (x1370 x50)))
(define-fun x3056 ((x50 Int)) Int (ite (= x50 x923) x773 (x2392 x50)))
(define-fun x614 ((x50 Int)) Int (ite (= x50 x58) x2186 (x3056 x50)))
(define-fun x2475 ((x50 Int)) Int (ite (= x50 x2160) x2518 (x614 x50)))
(define-fun x1329 ((x50 Int)) Int (ite x965 (x2591 x50) (x2475 x50)))
(define-fun x239 ((x50 Int)) Int (ite (= x50 x2993) x2166 (x1329 x50)))
(define-fun x3150 ((x50 Int)) Int (ite (= x50 x1356) x2955 (x239 x50)))
(define-fun x2937 ((x50 Int)) Int (ite (= x1549 x50) x2891 (x3150 x50)))
(define-fun x2963 ((x50 Int)) Int (ite (= x927 x50) x2843 (x2937 x50)))
(define-fun x12 ((x50 Int)) Int (ite (= x1179 x50) x581 (x2963 x50)))
(define-fun x1636 ((x50 Int)) Int (ite (= x152 x50) x998 (x12 x50)))
(define-fun x1481 ((x50 Int)) Int (ite (= x50 x955) x1038 (x1636 x50)))
(define-fun x2201 ((x50 Int)) Int (ite (= x50 x2184) x1549 (x1481 x50)))
(define-fun x978 ((x50 Int)) Int (ite x1910 (x3150 x50) (x2201 x50)))
(define-fun x1243 ((x50 Int)) Int (ite (= x50 x389) x1356 (x978 x50)))
(define-fun x1486 ((x50 Int)) Int (ite (= x50 x2103) x1669 (x1243 x50)))
(define-fun x254 ((x50 Int)) Int (ite (= x2641 x50) x557 (x1486 x50)))
(define-fun x278 ((x50 Int)) Int (ite (= x1848 x50) x1754 (x254 x50)))
(define-fun x1809 ((x50 Int)) Int (ite (= x50 x2519) x2563 (x278 x50)))
(define-fun x2617 ((x50 Int)) Int (ite (= x2447 x50) x2293 (x1809 x50)))
(define-fun x1576 ((x50 Int)) Int (ite (= x3038 x50) x2402 (x2617 x50)))
(define-fun x1802 ((x50 Int)) Int (ite (= x50 x957) x2641 (x1576 x50)))
(define-fun x3082 ((x50 Int)) Int (ite x1873 (x1486 x50) (x1802 x50)))
(define-fun x2306 ((x50 Int)) Int (ite (= x50 x289) x2103 (x3082 x50)))
(define-fun x1503 ((x50 Int)) Int (ite (= x50 x1272) x192 (x2306 x50)))
(define-fun x1872 ((x50 Int)) Int (ite (= x50 x1705) x2981 (x1503 x50)))
(define-fun x1502 ((x50 Int)) Int (ite (= x363 x50) x2390 (x1872 x50)))
(define-fun x450 ((x50 Int)) Int (ite (= x1116 x50) x218 (x1502 x50)))
(define-fun x1637 ((x50 Int)) Int (ite (= x50 x1980) x1521 (x450 x50)))
(define-fun x2907 ((x50 Int)) Int (ite (= x50 x94) x1746 (x1637 x50)))
(define-fun x502 ((x50 Int)) Int (ite (and (<= x1057 x50) (> (+ x1057 x2270) x50)) (x2905 (- (+ x50 x1995) x1057)) (x2907 x50)))
(define-fun x169 ((x50 Int)) Int (ite x1105 (x2907 x50) (x502 x50)))
(define-fun x54 ((x50 Int)) Int (ite (= x1456 x50) x2615 (x169 x50)))
(define-fun x3147 ((x50 Int)) Int (ite (= x50 x2150) x137 (x54 x50)))
(define-fun x33 ((x50 Int)) Int (ite (= x50 x1567) x672 (x3147 x50)))
(define-fun x3021 ((x50 Int)) Int (ite (= x50 x1450) 128 (x33 x50)))
(define-fun x683 ((x50 Int)) Int (ite (= x401 x50) x1022 (x3021 x50)))
(define-fun x801 ((x50 Int)) Int (ite (= x50 x1117) x360 (x683 x50)))
(define-fun x1526 ((x50 Int)) Int (ite (= x1239 x50) x369 (x801 x50)))
(define-fun x140 ((x50 Int)) Int (ite (= x50 x1861) x215 (x1526 x50)))
(define-fun x517 ((x50 Int)) Int (ite (= x1884 x50) x2114 (x140 x50)))
(define-fun x443 ((x50 Int)) Int (ite x787 (x140 x50) (ite x2395 (x1526 x50) (ite x128 (x801 x50) (ite x2238 (x683 x50) (x517 x50))))))
(define-fun x2840 ((x50 Int)) Int (ite (= x1315 x50) 0 (x443 x50)))
(define-fun x1649 ((x50 Int)) Int (ite (= x1322 x50) x1706 (x2840 x50)))
(define-fun x2351 ((x50 Int)) Int (ite (= x825 x50) x335 (x1649 x50)))
(define-fun x371 ((x50 Int)) Int (ite x976 (x169 x50) (x2351 x50)))
(define-fun x2663 ((x50 Int)) Int (ite (= x1259 x50) x442 (x371 x50)))
(define-fun x1584 ((x50 Int)) Int (ite (= x50 x1871) x1175 (x2663 x50)))
(define-fun x738 ((x50 Int)) Int (ite (= x174 x50) x744 (x1584 x50)))
(define-fun x2118 ((x50 Int)) Int (ite (= x1975 x50) x784 (x738 x50)))
(define-fun x2557 ((x50 Int)) Int (ite x148 (x738 x50) (ite x1630 (x1584 x50) (ite x1385 (x2663 x50) (ite x356 (x371 x50) (x2118 x50))))))
(define-fun x2532 ((x50 Int)) Int (ite (= x256 x50) x613 (x2557 x50)))
(define-fun x173 ((x50 Int)) Int (ite (= x50 x3146) x1154 (x2532 x50)))
(define-fun x1207 ((x50 Int)) Int (ite (= x50 x1010) x2548 (x173 x50)))
(define-fun x975 ((x50 Int)) Int (ite (= x1166 x50) x3075 (x1207 x50)))
(define-fun x248 ((x50 Int)) Int (ite (= x2250 x50) x2129 (x975 x50)))
(define-fun x1875 ((x50 Int)) Int (ite (= x50 x446) x182 (x248 x50)))
(define-fun x1 ((x50 Int)) Int (ite (= x1858 x50) x1264 (x1875 x50)))
(define-fun x1293 ((x50 Int)) Int (ite (= x50 x277) x2243 (x1 x50)))
(define-fun x1805 ((x50 Int)) Int (ite (= x1648 x50) x906 (x1293 x50)))
(define-fun x2790 ((x50 Int)) Int (ite (= x50 x1500) x1831 (x1805 x50)))
(define-fun x2072 ((x50 Int)) Int (ite (= x2553 x50) x1042 (x2790 x50)))
(define-fun x2697 ((x50 Int)) Int (ite (= x802 x50) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x2072 x50)))
(define-fun x664 ((x50 Int)) Int (ite (= x50 x1625) x1471 (x2697 x50)))
(define-fun x1594 ((x50 Int)) Int (ite (= x50 x1793) x302 (x664 x50)))
(define-fun x3115 ((x50 Int)) Int (ite (= x50 x802) 0 (x1594 x50)))
(define-fun x1758 ((x50 Int)) Int (ite (= x50 x2681) x564 (x3115 x50)))
(define-fun x2281 ((x50 Int)) Int (ite (= x2413 x50) x1121 (x1758 x50)))
(define-fun x2686 ((x50 Int)) Int (ite (= x2450 x50) x2572 (x2281 x50)))
(define-fun x2265 ((x50 Int)) Int (ite (= x1760 x50) x26 (x2686 x50)))
(define-fun x3136 ((x50 Int)) Int (ite (= x50 x2445) x915 (x2265 x50)))
(define-fun x1261 ((x50 Int)) Int (ite x59 (ite x974 (x3136 x50) (ite x3077 (x3136 x50) (x1594 x50))) (x1594 x50)))
(define-fun x2439 ((x50 Int)) Int (ite (= x50 x2017) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x1261 x50)))
(define-fun x1246 ((x50 Int)) Int (ite (= x1018 x50) x2917 (x2439 x50)))
(define-fun x303 ((x50 Int)) Int (ite (= x1414 x50) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x1246 x50)))
(define-fun x2153 ((x50 Int)) Int (ite (and (< x50 (+ x2017 32)) (<= x2017 x50)) (x3063 (- x50 x2017)) (x303 x50)))
(define-fun x713 ((x50 Int)) Int (ite x368 (x2153 x50) (x303 x50)))
(define-fun x2754 ((x50 Int)) Int (ite (and (< x50 (+ 32 x2017)) (>= x50 x2017)) (x3063 (- x50 x2017)) (x713 x50)))
(define-fun x2770 ((x50 Int)) Int (ite (= x2719 x50) x2115 (x2754 x50)))
(define-fun x1093 ((x50 Int)) Int (ite (and (< x50 (+ x628 x2019)) (<= x2019 x50)) (x2905 (- (+ x50 x1995) x2019)) (x2770 x50)))
(define-fun x2016 ((x50 Int)) Int (ite x1558 (x2770 x50) (x1093 x50)))
(define-fun x2251 ((x50 Int)) Int (ite (= x834 x50) x2615 (x2016 x50)))
(define-fun x2875 ((x50 Int)) Int (ite (= x50 x194) x2856 (x2251 x50)))
(define-fun x135 ((x50 Int)) Int (ite (= x50 x994) x708 (x2875 x50)))
(define-fun x181 ((x50 Int)) Int (ite (= x203 x50) 128 (x135 x50)))
(define-fun x1046 ((x50 Int)) Int (ite (= x1220 x50) x461 (x181 x50)))
(define-fun x2854 ((x50 Int)) Int (ite (= x2027 x50) x2098 (x1046 x50)))
(define-fun x2703 ((x50 Int)) Int (ite (= x50 x1644) x2807 (x2854 x50)))
(define-fun x996 ((x50 Int)) Int (ite (= x50 x2611) x2741 (x2703 x50)))
(define-fun x2159 ((x50 Int)) Int (ite (= x547 x50) x2870 (x996 x50)))
(define-fun x112 ((x50 Int)) Int (ite x2289 (x996 x50) (ite x1451 (x2703 x50) (ite x936 (x2854 x50) (ite x3039 (x1046 x50) (x2159 x50))))))
(define-fun x2123 ((x50 Int)) Int (ite (= x1734 x50) 0 (x112 x50)))
(define-fun x2899 ((x50 Int)) Int (ite (= x1402 x50) x1199 (x2123 x50)))
(define-fun x89 ((x50 Int)) Int (ite (= x242 x50) x1052 (x2899 x50)))
(define-fun x2014 ((x50 Int)) Int (ite x1546 (x2016 x50) (x89 x50)))
(define-fun x2847 ((x50 Int)) Int (ite (= x2893 x50) x2339 (x2014 x50)))
(define-fun x497 ((x50 Int)) Int (ite (= x3133 x50) x513 (x2847 x50)))
(define-fun x820 ((x50 Int)) Int (ite (= x1312 x50) x1964 (x497 x50)))
(define-fun x737 ((x50 Int)) Int (ite (= x892 x50) x2456 (x820 x50)))
(define-fun x1851 ((x50 Int)) Int (ite x1951 (x820 x50) (ite x848 (x497 x50) (ite x2976 (x2847 x50) (ite x1360 (x2014 x50) (x737 x50))))))
(define-fun x3161 ((x50 Int)) Int (ite (= x50 x2025) x1708 (x1851 x50)))
(define-fun x1968 ((x50 Int)) Int (ite (= x1755 x50) x1154 (x3161 x50)))
(define-fun x102 ((x50 Int)) Int (ite (= x1682 x50) x1148 (x1968 x50)))
(define-fun x403 ((x50 Int)) Int (ite (= x1000 x50) x1761 (x102 x50)))
(define-fun x1962 ((x50 Int)) Int (ite (= x50 x2534) x2982 (x403 x50)))
(define-fun x1763 ((x50 Int)) Int (ite (= x1568 x50) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x1962 x50)))
(define-fun x1743 ((x50 Int)) Int (ite (= x50 x2357) x3124 (x1763 x50)))
(define-fun x1650 ((x50 Int)) Int (ite (and (<= x1568 x50) (> (+ 32 x1568) x50)) (x2537 (- x50 x1568)) (x1743 x50)))
(define-fun x2479 ((x50 Int)) Int (ite x954 (x1650 x50) (x1743 x50)))
(define-fun x3107 ((x50 Int)) Int (ite (and (<= x1568 x50) (< x50 (+ 32 x1568))) (x2537 (- x50 x1568)) (x2479 x50)))
(define-fun x3087 ((x50 Int)) Int (ite (= x50 x2817) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x3107 x50)))
(define-fun x142 ((x50 Int)) Int (ite (= x1657 x50) x326 (x3087 x50)))
(define-fun x3132 ((x50 Int)) Int (ite (and (<= x2817 x50) (> (+ x2817 32) x50)) (x948 (- x50 x2817)) (x142 x50)))
(define-fun x411 ((x50 Int)) Int (ite x1765 (x3132 x50) (x142 x50)))
(define-fun x2664 ((x50 Int)) Int (ite (and (<= x2817 x50) (< x50 (+ x2817 32))) (x948 (- x50 x2817)) (x411 x50)))
(define-fun x2725 ((x50 Int)) Int (ite (= x50 x550) x1812 (x2664 x50)))
(define-fun x899 ((x50 Int)) Int (ite (= x50 x1972) 0 (x2725 x50)))
(define-fun x1653 ((x50 Int)) Int (ite (= x2971 x50) 0 (x899 x50)))
(define-fun x3090 ((x50 Int)) Int (ite (= x50 x2533) 0 (x1653 x50)))
(define-fun x313 ((x50 Int)) Int (ite (= x2298 x50) 0 (x3090 x50)))
(define-fun x2301 ((x50 Int)) Int (ite (= x394 x50) 0 (x313 x50)))
(define-fun x2665 ((x50 Int)) Int (ite (= x50 x1642) x1972 (x2301 x50)))
(define-fun x318 ((x50 Int)) Int (ite (= x50 x2559) 0 (x2665 x50)))
(define-fun x2712 ((x50 Int)) Int (ite (= x50 x1504) 0 (x318 x50)))
(define-fun x1205 ((x50 Int)) Int (ite (= x50 x1753) 0 (x2712 x50)))
(define-fun x741 ((x50 Int)) Int (ite (= x50 x324) 0 (x1205 x50)))
(define-fun x397 ((x50 Int)) Int (ite (= x50 x2320) 0 (x741 x50)))
(define-fun x2837 ((x50 Int)) Int (ite (= x50 x1298) x2559 (x397 x50)))
(define-fun x2724 ((x50 Int)) Int (ite x641 (x2725 x50) (ite x2749 (x2665 x50) (x2837 x50))))
(define-fun x1897 ((x50 Int)) Int (ite (= x50 x3003) x224 (x2724 x50)))
(define-fun x2135 ((x50 Int)) Int (ite (= x50 x2762) 0 (x1897 x50)))
(define-fun x3094 ((x50 Int)) Int (ite (= x2945 x50) x1378 (x2135 x50)))
(define-fun x2374 ((x50 Int)) Int (ite (= x50 x2070) x2173 (x3094 x50)))
(define-fun x653 ((x50 Int)) Int (ite (= x50 x143) x1100 (x2374 x50)))
(define-fun x2308 ((x50 Int)) Int (ite (= x560 x50) x3003 (x653 x50)))
(define-fun x1202 ((x50 Int)) Int (ite x1965 (x2724 x50) (x2308 x50)))
(define-fun x1591 ((x50 Int)) Int (ite (= x2502 x50) 2 (x1202 x50)))
(define-fun x444 ((x50 Int)) Int (ite (= x50 x2045) 0 (x1591 x50)))
(define-fun x1990 ((x50 Int)) Int (ite (= x2458 x50) x1593 (x444 x50)))
(define-fun x598 ((x50 Int)) Int (ite (= x1108 x50) x1634 (x1990 x50)))
(define-fun x1482 ((x50 Int)) Int (ite (= x50 x1902) x1190 (x598 x50)))
(define-fun x897 ((x50 Int)) Int (ite (= x2230 x50) x2502 (x1482 x50)))
(define-fun x679 ((x50 Int)) Int (ite (= x3003 x50) x503 (x2724 x50)))
(define-fun x6 ((x50 Int)) Int (ite (= x50 x1475) x538 (x679 x50)))
(define-fun x2360 ((x50 Int)) Int (ite (= x50 x583) x1883 (x6 x50)))
(define-fun x606 ((x50 Int)) Int (ite (= x50 x1245) x1619 (x2360 x50)))
(define-fun x2793 ((x50 Int)) Int (ite (= x2988 x50) x2430 (x606 x50)))
(define-fun x2091 ((x50 Int)) Int (ite (= x50 x292) x3003 (x2793 x50)))
(define-fun x178 ((x50 Int)) Int (ite x2751 (x2724 x50) (x2091 x50)))
(define-fun x1303 ((x50 Int)) Int (ite x2538 (ite x1778 (x1202 x50) (x897 x50)) (ite x300 (x2724 x50) (x178 x50))))
(define-fun x2375 ((x50 Int)) Int (ite (= x2609 x50) 0 (x1303 x50)))
(define-fun x2933 ((x50 Int)) Int (ite (= x50 x2262) x1938 (x2375 x50)))
(define-fun x612 ((x50 Int)) Int (ite (= x185 x50) x333 (x2933 x50)))
(define-fun x1266 ((x50 Int)) Int (ite (= x1563 x50) x2769 (x612 x50)))
(define-fun x2894 ((x50 Int)) Int (ite (= x2598 x50) x1203 (x1266 x50)))
(define-fun x51 ((x50 Int)) Int (ite (= x2609 x50) 32 (x2894 x50)))
(define-fun x2063 ((x50 Int)) Int (ite (= x50 x2539) 0 (x51 x50)))
(define-fun x1813 ((x50 Int)) Int (ite x2865 (x2894 x50) (x2063 x50)))
(define-fun x2199 ((x50 Int)) Int (ite (= x50 x2609) x1289 (x1813 x50)))
(define-fun x2897 ((x50 Int)) Int (ite (= x562 x50) x1224 (x2199 x50)))
(define-fun x1545 ((x50 Int)) Int (ite (= x50 x201) x779 (x2897 x50)))
(define-fun x2777 ((x50 Int)) Int (ite (= x50 x3030) x2004 (x1545 x50)))
(define-fun x2484 ((x50 Int)) Int (ite x2474 (x2375 x50) (x2777 x50)))
(define-fun x448 ((x50 Int)) Int (ite x944 (x2375 x50) (x2484 x50)))
(define-fun x2886 ((x50 Int)) Int (ite (= x2422 x50) x2033 (x448 x50)))
(define-fun x984 ((x50 Int)) Int (ite (= x50 x11) x550 (x2886 x50)))
(define-fun x3019 ((x50 Int)) Int (ite (= x2582 x50) x208 (x984 x50)))
(define-fun x1171 ((x50 Int)) Int (ite (= x2126 x50) x1281 (x3019 x50)))
(define-fun x2336 ((x50 Int)) Int (ite (= x50 x153) x2916 (x1171 x50)))
(define-fun x1697 ((x50 Int)) Int (ite (= x50 x1101) x2310 (x2336 x50)))
(define-fun x707 ((x50 Int)) Int (ite (= x50 x2585) x71 (x1697 x50)))
(define-fun x1941 ((x50 Int)) Int (ite (= x50 x2789) x2792 (x707 x50)))
(define-fun x1007 ((x50 Int)) Int (ite (= x50 x184) x2747 (x1941 x50)))
(define-fun x859 ((x50 Int)) Int (ite (= x50 x1307) x2999 (x1007 x50)))
(define-fun x3016 ((x50 Int)) Int (ite (and (>= x50 x1905) (< x50 (+ x2669 x1905))) (x2905 (- (+ x1995 x50) x1905)) (x859 x50)))
(define-fun x367 ((x50 Int)) Int (ite x2731 (x1355 x50) (x3071 x50)))
(define-fun x2637 ((x50 Int)) Int (ite x2274 (x859 x50) (x3016 x50)))
(define-fun x2240 ((x50 Int)) Int (ite (= x50 x294) x1818 (x2637 x50)))
(define-fun x745 ((x50 Int)) Int (ite (and (<= x172 x50) (> (+ x172 x2214) x50)) (x2905 (- (+ x50 x1995) x172)) (x2240 x50)))
(define-fun x633 ((x50 Int)) Int (ite x2425 (x2240 x50) (x745 x50)))
(define-fun x132 ((x50 Int)) Int (ite (= x50 x572) x2495 (x633 x50)))
(define-fun x2803 ((x50 Int)) Int (ite (= x50 x2672) x162 (x132 x50)))
(define-fun x462 ((x50 Int)) Int (ite (= x2417 x50) x619 (x2803 x50)))
(define-fun x717 ((x50 Int)) Int (ite (= x2979 x50) x253 (x462 x50)))
(define-fun x344 ((x50 Int)) Int (ite (= x50 x1952) x2000 (x717 x50)))
(define-fun x1106 ((x50 Int)) Int (ite (= x2629 x50) x529 (x344 x50)))
(define-fun x3074 ((x50 Int)) Int (ite (= x2087 x50) x2401 (x1106 x50)))
(define-fun x809 ((x50 Int)) Int (ite (= x2767 x50) x210 (x3074 x50)))
(define-fun x507 ((x50 Int)) Int (ite x74 (x633 x50) (x809 x50)))
(define-fun x2550 ((x50 Int)) Int (ite (= x50 x1210) x2615 (x507 x50)))
(define-fun x2218 ((x50 Int)) Int (ite (= x451 x50) x925 (x2550 x50)))
(define-fun x2088 ((x50 Int)) Int (ite (= x3084 x50) x44 (x2218 x50)))
(define-fun x305 ((x50 Int)) Int (ite (= x50 x2007) 128 (x2088 x50)))
(define-fun x2586 ((x50 Int)) Int (ite (= x3070 x50) x2467 (x305 x50)))
(define-fun x1742 ((x50 Int)) Int (ite (= x1685 x50) x2396 (x2586 x50)))
(define-fun x2149 ((x50 Int)) Int (ite (= x50 x2480) x622 (x1742 x50)))
(define-fun x1204 ((x50 Int)) Int (ite (= x50 x720) x2347 (x2149 x50)))
(define-fun x1284 ((x50 Int)) Int (ite (= x2661 x50) x2799 (x1204 x50)))
(define-fun x459 ((x50 Int)) Int (ite x1556 (x1204 x50) (ite x845 (x2149 x50) (ite x1810 (x1742 x50) (ite x255 (x2586 x50) (x1284 x50))))))
(define-fun x404 ((x50 Int)) Int (ite (= x775 x50) 0 (x459 x50)))
(define-fun x2168 ((x50 Int)) Int (ite (= x1030 x50) x282 (x404 x50)))
(define-fun x2130 ((x50 Int)) Int (ite (= x50 x1547) x2493 (x2168 x50)))
(define-fun x2938 ((x50 Int)) Int (ite x1065 (x507 x50) (x2130 x50)))
(define-fun x1049 ((x50 Int)) Int (ite (= x1403 x50) x2556 (x2938 x50)))
(define-fun x728 ((x50 Int)) Int (ite (= x50 x226) x501 (x1049 x50)))
(define-fun x1930 ((x50 Int)) Int (ite (= x50 x473) x2684 (x728 x50)))
(define-fun x685 ((x50 Int)) Int (ite (= x2462 x50) x850 (x1930 x50)))
(define-fun x1867 ((x50 Int)) Int (ite x535 (x1930 x50) (ite x188 (x728 x50) (ite x2225 (x1049 x50) (ite x22 (x2938 x50) (x685 x50))))))
(define-fun x2267 ((x50 Int)) Int (ite (= x770 x50) x1554 (x1867 x50)))
(define-fun x635 ((x50 Int)) Int (ite (= x50 x1182) x506 (x2267 x50)))
(define-fun x264 ((x50 Int)) Int (ite (= x2750 x50) x1278 (x635 x50)))
(define-fun x2035 ((x50 Int)) Int (ite (= x50 x760) x175 (x264 x50)))
(define-fun x2836 ((x50 Int)) Int (ite (= x50 x2621) x563 (x2035 x50)))
(define-fun x449 ((x50 Int)) Int (ite x3015 (x2035 x50) (ite x1895 (x264 x50) (ite x1828 (x635 x50) (ite x1112 (x2267 x50) (x2836 x50))))))
(define-fun x1348 ((x50 Int)) Int (ite (= x818 x50) x1441 (x449 x50)))
(define-fun x1037 ((x50 Int)) Int (ite (= x50 x3024) x2774 (x1348 x50)))
(define-fun x1916 ((x50 Int)) Int (ite (= x50 x1151) x1954 (x1037 x50)))
(define-fun x767 ((x50 Int)) Int (ite (= x50 x2309) x1749 (x1916 x50)))
(define-fun x235 ((x50 Int)) Int (ite (= x50 x1693) x3127 (x767 x50)))
(define-fun x3160 ((x50 Int)) Int (ite (= x1338 x50) x2120 (x235 x50)))
(define-fun x854 ((x50 Int)) Int (ite (= x50 x2966) x1731 (x3160 x50)))
(define-fun x2590 ((x50 Int)) Int (ite (= x144 x50) x151 (x854 x50)))
(define-fun x2300 ((x50 Int)) Int (ite (= x50 x2570) x2049 (x2590 x50)))
(define-fun x1047 ((x50 Int)) Int (ite (= x796 x50) x338 (x2300 x50)))
(define-fun x1256 ((x50 Int)) Int (ite (= x297 x50) x1654 (x1047 x50)))
(define-fun x1894 ((x50 Int)) Int (ite (= x380 x50) x1510 (x1256 x50)))
(define-fun x599 ((x50 Int)) Int (ite (= x2781 x50) 0 (x1894 x50)))
(define-fun x1454 ((x50 Int)) Int (ite (= x3120 x50) 0 (x599 x50)))
(define-fun x519 ((x50 Int)) Int (ite (= x1774 x50) x2781 (x1454 x50)))
(define-fun x727 ((x50 Int)) Int (ite (= x2259 x50) 0 (x519 x50)))
(define-fun x2393 ((x50 Int)) Int (ite (= x50 x1656) 0 (x727 x50)))
(define-fun x1999 ((x50 Int)) Int (ite (= x1720 x50) x2259 (x2393 x50)))
(define-fun x874 ((x50 Int)) Int (ite x518 (x1894 x50) (ite x1870 (x519 x50) (x1999 x50))))
(define-fun x2901 ((x50 Int)) Int (ite (= x50 x2867) x319 (x874 x50)))
(define-fun x2801 ((x50 Int)) Int (ite (= x2090 x50) x1180 (x2901 x50)))
(define-fun x2606 ((x50 Int)) Int (ite (= x50 x250) x2867 (x2801 x50)))
(define-fun x2928 ((x50 Int)) Int (ite x1863 (x874 x50) (x2606 x50)))
(define-fun x2370 ((x50 Int)) Int (ite (= x50 x1109) 32542679537407071897843112657522291873774333932075415528008786499928730894336 (x2928 x50)))
(define-fun x554 ((x50 Int)) Int (ite (= x1407 x50) x2398 (x2370 x50)))
(define-fun x1027 ((x50 Int)) Int (ite (= x3097 x50) 64 (x554 x50)))
(define-fun x1280 ((x50 Int)) Int (ite (= x600 x50) x2102 (x1027 x50)))
(define-fun x1717 ((x50 Int)) Int (ite (= x781 x50) x1201 (x1280 x50)))
(define-fun x553 ((x50 Int)) Int (ite (= x138 x50) x1932 (x1717 x50)))
(define-fun x1186 ((x50 Int)) Int (ite x577 (x1280 x50) (x553 x50)))
(define-fun x2457 ((x50 Int)) Int (ite (and (> x1109 x50) (>= x50 x1109)) (x2152 (- x50 x1109)) (x1186 x50)))
(define-fun x1173 ((x50 Int)) Int (ite (= x1109 x50) 95932229227554293267862761608555258089024927314852490146714677558661980618752 (x2457 x50)))
(define-fun x1463 ((x50 Int)) Int (ite (= x50 x1436) x698 (x1173 x50)))
(define-fun x2431 ((x50 Int)) Int (ite (= x50 x2504) x209 (x1463 x50)))
(define-fun x75 ((x50 Int)) Int (ite (and (> x1109 x50) (<= x1109 x50)) (x2512 (- x50 x1109)) (x2431 x50)))
(define-fun x1855 ((x50 Int)) Int (ite x2731 (x2457 x50) (x75 x50)))
(define-fun x636 ((x50 Int)) Int (ite x1849 (x3099 x50) (ite x2731 (x3099 x50) (x2485 x50))))
(define-fun x386 ((x50 Int)) Int (ite x1849 (x2457 x50) (x1855 x50)))
(define-fun x1344 ((x50 Int)) Int (ite x1849 (x1355 x50) (ite x2731 (x1355 x50) (x3071 x50))))
(define-fun x1840 ((x50 Int)) Int (ite (= x1109 x50) 0 (x386 x50)))
(define-fun x1679 ((x50 Int)) Int (ite (= x50 x1412) 0 (x1840 x50)))
(define-fun x2044 ((x50 Int)) Int (ite (= x828 x50) 0 (x1679 x50)))
(define-fun x886 ((x50 Int)) Int (ite (= x50 x2872) 0 (x2044 x50)))
(define-fun x1739 ((x50 Int)) Int (ite (= x3139 x50) 88383320980755791914082775550597828907713979028428263264130000526486271950848 (x886 x50)))
(define-fun x1437 ((x50 Int)) Int (ite (= x50 x962) x2204 (x1739 x50)))
(define-fun x1740 ((x50 Int)) Int (ite (and (>= x50 x3139) (< x50 (+ 32 x3139))) (x2324 (- x50 x3139)) (x1437 x50)))
(define-fun x2771 ((x50 Int)) Int (ite x406 (x1740 x50) (x1437 x50)))
(define-fun x80 ((x50 Int)) Int (ite (and (< x50 (+ x3139 32)) (>= x50 x3139)) (x2324 (- x50 x3139)) (x2771 x50)))
(define-fun x817 ((x50 Int)) Int (ite (= x50 x706) 111117225372770300986259473995147604481826136133417213952520719377678811004928 (x80 x50)))
(define-fun x871 ((x50 Int)) Int (ite (= x2394 x50) x1169 (x817 x50)))
(define-fun x385 ((x50 Int)) Int (ite (= x50 x931) x2878 (x871 x50)))
(define-fun x1319 ((x50 Int)) Int (ite (= x2814 x50) x1727 (x385 x50)))
(define-fun x1573 ((x50 Int)) Int (ite (= x1984 x50) x337 (x1319 x50)))
(define-fun x1399 ((x50 Int)) Int (ite (= x271 x50) 160 (x1573 x50)))
(define-fun x777 ((x50 Int)) Int (ite (= x50 x38) x2155 (x1399 x50)))
(define-fun x674 ((x50 Int)) Int (ite (= x1076 x50) x3000 (x777 x50)))
(define-fun x68 ((x50 Int)) Int (ite (= x50 x1789) x2998 (x674 x50)))
(define-fun x2996 ((x50 Int)) Int (ite (= x50 x2099) x2859 (x68 x50)))
(define-fun x168 ((x50 Int)) Int (ite (= x50 x2170) x1835 (x2996 x50)))
(define-fun x894 ((x50 Int)) Int (ite x399 (x2996 x50) (ite x525 (x68 x50) (ite x2050 (x674 x50) (ite x252 (x777 x50) (x168 x50))))))
(define-fun x2163 ((x50 Int)) Int (ite (= x2713 x50) 0 (x894 x50)))
(define-fun x723 ((x50 Int)) Int (ite (and (< x50 x706) (>= x50 x706)) (x186 (- x50 x706)) (x2163 x50)))
(define-fun x1950 ((x50 Int)) Int (ite x274 (x723 x50) (x2163 x50)))
(define-fun x1660 ((x50 Int)) Int (ite x2841 (x386 x50) (ite x2043 (x886 x50) (x1950 x50))))
(define-fun x2834 ((x50 Int)) Int (ite x2043 (x1344 x50) (ite x274 (x841 x50) (x1344 x50))))
(define-fun x2136 ((x50 Int)) Int (ite x2841 (x1344 x50) (x2834 x50)))
(define-fun x2421 ((x50 Int)) Int (ite (= x50 x1629) x2398 (x1660 x50)))
(define-fun x1340 ((x50 Int)) Int (ite (= x2245 x50) 288 (x2421 x50)))
(define-fun x932 ((x50 Int)) Int (ite (= x1681 x50) x1729 (x1340 x50)))
(define-fun x3100 ((x50 Int)) Int (ite (= x50 x1942) x1262 (x932 x50)))
(define-fun x2406 ((x50 Int)) Int (ite (= x116 x50) x2650 (x3100 x50)))
(define-fun x2389 ((x50 Int)) Int (ite (= x1332 x50) x1609 (x2406 x50)))
(define-fun x2334 ((x50 Int)) Int (ite x1163 (x57 x50) (ite x2841 (x1344 x50) (x2834 x50))))
(define-fun x838 ((x50 Int)) Int 0)
(define-fun x753 ((x50 Int)) Int (ite (= x1822 x50) x2885 (x2389 x50)))
(define-fun x2127 ((x50 Int)) Int (ite x2048 (x2389 x50) (ite x489 (x2406 x50) (ite x154 (x3100 x50) (ite x99 (x932 x50) (x753 x50))))))
(define-fun x3040 ((x50 Int)) Int (ite (= x50 x530) 0 (x2127 x50)))
(define-fun x2338 ((x50 Int)) Int (ite (= x1126 x50) x1786 (x3040 x50)))
(define-fun x342 ((x50 Int)) Int (ite (= x561 x50) x1695 (x2338 x50)))
(define-fun x1891 ((x50 Int)) Int (ite (= x3140 x50) x842 (x342 x50)))
(define-fun x2373 ((x50 Int)) Int (x2954 x50))
(define-fun x542 ((x50 Int)) Int (ite (= x199 x50) x2810 (x1891 x50)))
(define-fun x413 ((x50 Int)) Int (ite (= x510 x50) x1557 (x542 x50)))
(define-fun x1709 ((x50 Int)) Int (ite (= x1602 x50) x2666 (x413 x50)))
(define-fun x605 ((x50 Int)) Int (ite (= x50 x1479) x1398 (x1709 x50)))
(define-fun x1690 ((x50 Int)) Int (ite (= x213 x50) x261 (x605 x50)))
(define-fun x1192 ((x50 Int)) Int (ite x856 (x1891 x50) (x1690 x50)))
(define-fun x1769 ((x50 Int)) Int (ite (= x50 x455) x479 (x1192 x50)))
(define-fun x2913 ((x50 Int)) Int (ite (= x50 x322) x2117 (x1769 x50)))
(define-fun x436 ((x50 Int)) Int (ite (= x2959 x50) x930 (x2913 x50)))
(define-fun x2408 ((x50 Int)) Int (ite (= x863 x50) x710 (x436 x50)))
(define-fun x2855 ((x50 Int)) Int (ite (= x50 x1842) x460 (x2408 x50)))
(define-fun x3088 ((x50 Int)) Int (ite (= x50 x2282) 96 (x2855 x50)))
(define-fun x1125 ((x50 Int)) Int (ite x274 (x841 x50) (x1344 x50)))
(assert (x730 x2780))
(assert (= x1850 (x1323 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994))))
(assert (= x895 (x79 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770))))
(assert (= (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337) (x3126 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337))))
(assert (= x1464 (x2316 (x3066 x1353 x1464 x701 x2889))))
(assert (x730 x2931))
(assert (x730 x1283))
(assert (x730 x1325))
(assert (x730 x2488))
(assert (not (x2705 (x2476 x2446 x391))))
(assert (x730 x2823))
(assert (= (x2203 (x2040 x1401 x1347 x593)) x593))
(assert (=> (>= 10000 x1982) (= (x3126 x1982) 0)))
(assert (x634 x2877 1461501637330902918203684832716283019655932542976))
(assert (= (x2316 (x2040 x41 x130 x982)) x130))
(assert (x2705 2189116922))
(assert (x400 x1992))
(assert (> (x872 x1627 x2483 x109 x2307 x1490) 10000))
(assert (=> (>= 10000 x2575) (= 0 (x3126 x2575))))
(assert (= x1889 (x79 (x1495 x1627 x2555 x1856 x2287 x1889 x2382))))
(assert (x730 x2185))
(assert (x730 x1197))
(assert (= (x1495 x1401 x2366 x421 x2896 x366 x1518) (x3126 (x1495 x1401 x2366 x421 x2896 x366 x1518))))
(assert (= x586 (x2683 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715))))
(assert (=> (>= 10000 x1128) (= (x3126 x1128) 0)))
(assert (x730 x584))
(assert (x730 x3098))
(assert (x730 x712))
(assert (x730 x2947))
(assert (x730 x2191))
(assert (> (x1495 x1353 x488 x2082 x1350 x3006 x1453) 10000))
(assert (= x2983 (=> (and (= (< 0 x2102) x1948) (= x110 (x3095 (+ 32 x380))) (= (x3095 (+ x1109 4)) x1407) (= (x3095 (+ 64 x1407)) x600) (= (x3095 (+ x1407 32)) x3097) (= x781 (x3095 (+ x600 32))) (= (x1027 x380) x2102)) (and (=> (and (not x1948) (and (= x110 x1493) (= x781 x2294) (= x618 0))) x650) (=> x1948 x2745)))))
(assert (x730 x1606))
(assert (= (and x2573 x3010) x2030))
(assert (=> (>= 10000 x2970) (= 0 (x3126 x2970))))
(assert (x730 x1231))
(assert (x730 x1514))
(assert (x730 x317))
(assert (x730 x806))
(assert (x400 x879))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (= x500 (and x2275 x1028)))
(assert (x730 x2530))
(assert (x730 x2350))
(assert (= (x2316 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379)) x544))
(assert (x730 x1730))
(assert (x730 x259))
(assert (x730 x934))
(assert (= (x2203 (x872 x1401 x1136 x1211 x1618 x813)) x1211))
(assert (x1613 79228162514264337593543950336 x221))
(assert (= x1308 (or x965 x205)))
(assert (=> (>= 10000 x1410) (= 0 (x3126 x1410))))
(assert (= (x1107 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715)) x1353))
(assert (x730 x950))
(assert (x730 x1376))
(assert (x730 x2473))
(assert (x730 x2942))
(assert (x730 x994))
(assert (x730 x361))
(assert (x730 x363))
(assert (x730 x1926))
(assert (< 10000 (x1495 x1401 x2366 x421 x2896 x366 x1518)))
(assert (= (x1323 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690)) x1564))
(assert (x730 x2980))
(assert (x730 x2219))
(assert (x730 x1403))
(assert (= x3039 (and (not x2536) x1330)))
(assert (=> (>= 10000 x468) (= 0 (x3126 x468))))
(assert (= (x1323 (x872 x41 x207 x759 x1484 x2221)) x1484))
(assert (= x1140 (x1107 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379))))
(assert (x730 x3024))
(assert (x730 x2497))
(assert (x1174 x260))
(assert (x730 x2223))
(assert (=> (<= x1701 10000) (= (x3126 x1701) 0)))
(assert (x730 x646))
(assert (x1620 x1234))
(assert (x730 x1986))
(assert (x730 x232))
(assert (= (x2997 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869)) x1869))
(assert (x730 x986))
(assert (=> (<= x2162 10000) (= (x3126 x2162) 0)))
(assert (not (x2705 (x3066 x1627 x286 x1607 x2736))))
(assert (x730 x3068))
(assert (x730 x421))
(assert (x730 x1040))
(assert (= (and x2077 x2206) x1559))
(assert (x730 x3020))
(assert (x730 x2))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x730 x670))
(assert (x730 x2681))
(assert (x730 x2498))
(assert (x730 x3025))
(assert (x730 x2909))
(assert (= x681 (x2683 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055))))
(assert (x730 x1229))
(assert (x730 x1614))
(assert (> (x2476 x1401 x468) 10000))
(assert (x730 x882))
(assert (x730 x281))
(assert (=> (>= 10000 x2217) (= (x3126 x2217) 0)))
(assert (x730 x2661))
(assert (x730 x2769))
(assert (= x833 (x79 (x1495 x1955 x785 x1671 x1652 x833 x347))))
(assert (x730 x1475))
(assert (not (x2705 (x872 x1258 x2744 x2472 x1167 x1827))))
(assert (x730 x1540))
(assert (not (x2705 (x1495 x2010 x206 x372 x729 x2819 x1580))))
(assert (x730 x1285))
(assert (x730 x21))
(assert (= (x1323 (x1495 x86 x2248 x1945 x156 x566 x621)) x156))
(assert (= (x2203 (x2040 x1627 x2923 x280)) x280))
(assert (x634 x2595 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2469 x2693) x2919))
(assert (x730 x1226))
(assert (x2800 x1746))
(assert (= x526 (or x1870 x1282)))
(assert (x730 x1731))
(assert (< 10000 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470)))
(assert (=> (<= x950 10000) (= 0 (x3126 x950))))
(assert (x730 x1338))
(assert (x730 x3035))
(assert (x730 x1179))
(assert (=> (>= 10000 x2860) (= 0 (x3126 x2860))))
(assert (= x1252 (=> (and (= x3042 (ite (= x364 0) (ite (= x364 0) 1 0) (ite (= 0 x381) 1 0))) (= x3041 0) (= x3042 0) (= x1406 x376) (= x3041 (x178 x1352))) x2278)))
(assert (x730 x221))
(assert (x1620 x997))
(assert (x730 x1395))
(assert (x730 x2859))
(assert (x730 x1485))
(assert (x634 x273 1461501637330902918203684832716283019655932542976))
(assert (x730 x2462))
(assert (= x300 (or x1522 x943)))
(assert (=> (>= 10000 x1353) (= 0 (x3126 x1353))))
(assert (x730 x2323))
(assert (=> (>= 10000 x2317) (= 0 (x3126 x2317))))
(assert (x730 x1250))
(assert (=> (>= 10000 x1639) (= (x3126 x1639) 0)))
(assert (x730 x1072))
(assert (x2800 x1915))
(assert (x730 x1824))
(assert (> (x2040 x2520 x3117 x311) 10000))
(assert (x730 x3048))
(assert (x1174 x1513))
(assert (x730 x3003))
(assert (= (x1107 (x1495 x1955 x785 x1671 x1652 x833 x347)) x1955))
(assert (= (and x419 x1336) x954))
(assert (x730 x282))
(assert (=> (<= x1627 10000) (= (x3126 x1627) 0)))
(assert (=> (<= x1534 10000) (= 0 (x3126 x1534))))
(assert (x730 x1619))
(assert (=> (>= 10000 x291) (= (x3126 x291) 0)))
(assert (x730 x2632))
(assert (x730 x2739))
(assert (x730 x2695))
(assert (= 0 (x3126 21408440236001274921485009970742555221786587156444570319896389698385254285312)))
(assert (x730 x2412))
(assert (x730 x1715))
(assert (= (x2203 (x3066 x86 x768 x2142 x811)) x2142))
(assert (x730 x2634))
(assert (x2800 160))
(assert (x730 x1694))
(assert (=> (<= x1445 10000) (= 0 (x3126 x1445))))
(assert (= x115 (x1323 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428))))
(assert (x730 x706))
(assert (x730 x1669))
(assert (x730 x1884))
(assert (x730 x109))
(assert (x730 x1596))
(assert (x730 x379))
(assert (not (x2705 (x3066 x1401 x2276 x1377 x2061))))
(assert (=> (>= 10000 x2192) (= 0 (x3126 x2192))))
(assert (= (x3126 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048)) (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048)))
(assert (x730 x803))
(assert (x730 x2467))
(assert (=> (>= 10000 x2690) (= 0 (x3126 x2690))))
(assert (x730 x45))
(assert (not (x2705 (x595 0))))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (=> (<= x2530 10000) (= 0 (x3126 x2530))))
(assert (x730 x1753))
(assert (x1174 x2139))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639776)))
(assert (= (=> (and (= x863 (x3095 (+ x2959 x930))) (= x455 (x3095 (+ x561 32))) (= x2117 (x1769 x2041)) (= (x2630 (* 32 x2117)) x930) (= (x3095 (+ x2041 32)) x3009) (= (x3095 (+ 32 x322)) x2959) (= x742 (> x2117 0)) (= (x2951 (- x322 x1629)) x479)) (and (=> (and x742 (and (= x3035 (x3088 x536)) (= x1842 (x3095 (+ 32 x863))) (= (x3095 (+ x2903 32)) x795) (= (x3095 (+ 32 x1842)) x2282) (= x62 (x436 x3009)) (= x3061 (< 0 x3035)) (= (x2408 x2903) x460) (= (x436 x62) x1400) (= x710 (x545 1461501637330902918203684832716283019655932542975 x1400)) (= (x3095 (+ 32 x62)) x2903) (= (x2855 x795) x536))) (and (=> (and (= (> x3035 32) x1844) x3061) (and (=> (and x1844 (= x2633 (< 64 x3035))) (and (=> (and x2633 (= (< 96 x3035) x2437)) (and (=> x2437 x1541) (=> (not x2437) x1790))) (=> (not x2633) x1790))) (=> (not x1844) x1790))) (=> (not x3061) x1790))) (=> (and (not x742) (and (= x1977 x2959) (= 0 x970) (= x1966 x3009))) x1525))) x3005))
(assert (= x616 (=> (and (= x2576 (x1660 x2187)) (= x1942 (x3095 (+ x1681 32))) (= x1729 (x1340 x2576)) (= (x1660 x11) x988) (= (x1660 192) x331) (= x1836 (x3095 (+ x2576 32))) (= (x3095 (+ 96 x331)) x2187) (= (x1660 x2097) x2041) (= x740 (x1660 x2126)) (= (x3095 (+ x1629 32)) x2245) (= (x1660 x2422) x1786) (= x1681 (x3095 (+ 288 x1629))) (= x2888 (< 0 x1729))) (and (=> (not x2888) x887) (=> (and x2888 (and (= x2125 (< 32 x1729)) (= x1262 (x932 x1836)))) (and (=> (and x2125 (and (= (x3095 (+ 32 x1836)) x2791) (= x116 (x3095 (+ 32 x1942))) (= (< 64 x1729) x1689) (= x2650 (x3100 x2791)))) (and (=> (not x1689) x887) (=> (and x1689 (and (= x1609 (x2406 x2934)) (= x2934 (x3095 (+ x1836 64))) (= (x3095 (+ 64 x1942)) x1332) (= x2411 (< 96 x1729)))) (and (=> x2411 x343) (=> (not x2411) x887))))) (=> (not x2125) x887)))))))
(assert (x1174 x2133))
(assert (x2800 x1812))
(assert (x730 x2639))
(assert (x730 x2549))
(assert (x730 x783))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3066 66 x2962 x1150 x589)))
(assert (x730 x2566))
(assert (= (x1323 (x872 x2010 x2188 x2174 x1787 x283)) x1787))
(assert (= x1065 (and x2469 (not x2693))))
(assert (x730 x1128))
(assert (= (x3066 x1401 x2276 x1377 x2061) (x3126 (x3066 x1401 x2276 x1377 x2061))))
(assert (x730 x164))
(assert (= x126 (or x1969 (and (not x2352) x2702))))
(assert (x730 x1307))
(assert (not (x2705 (x2040 x2660 x290 x23))))
(assert (x730 x524))
(assert (x730 x1904))
(assert (x730 x2459))
(assert (=> (>= 10000 x2524) (= 0 (x3126 x2524))))
(assert (= x1558 (and x452 x2052)))
(assert (x730 x1551))
(assert (x730 x1785))
(assert (= (x3126 (x3066 x1258 x885 x92 x1215)) (x3066 x1258 x885 x92 x1215)))
(assert (=> (>= 10000 x493) (= (x3126 x493) 0)))
(assert (< (x2040 x1258 x2380 x812) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3126 (x2476 x1627 x640)) (x2476 x1627 x640)))
(assert (x730 x1509))
(assert (= x1741 (and x2759 x434)))
(assert (= (x2203 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)) x1236))
(assert (=> (>= 10000 x2279) (= 0 (x3126 x2279))))
(assert (= (x3126 57896044618658097711785492504343953926634992332820282019728792003956564820036) 0))
(assert (not (x2705 (x1495 x1401 x2366 x421 x2896 x366 x1518))))
(assert (= (x79 (x872 x2660 x1845 x1485 x2991 x881)) x881))
(assert (x730 x834))
(assert (x730 x1841))
(assert (x730 x480))
(assert (x730 x2494))
(assert (=> (<= x1801 10000) (= 0 (x3126 x1801))))
(assert (x730 x2713))
(assert (=> (>= 10000 x1888) (= (x3126 x1888) 0)))
(assert (= x642 (and x298 x824)))
(assert (= x1535 (or (and (not x2437) x410) x2765 (and (not x1844) x131) (and x609 (not x3061)) (and (not x2633) x2328))))
(assert (x730 x681))
(assert (> (x3066 x1955 x1098 x1544 x216) 10000))
(assert (x730 x819))
(assert (not (x2705 (x3066 x2010 x1989 x40 x1776))))
(assert (= (x2203 (x3066 x1401 x2276 x1377 x2061)) x1377))
(assert (x1620 x2718))
(assert (x730 x1521))
(assert (= (x2997 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608)) x608))
(assert (= (x3126 77929798818658108206329458850487298488570292587025318323788629963054520467456) 0))
(assert (x730 x879))
(assert (x730 x3067))
(assert (= x1555 (and x1929 x387)))
(assert (x730 x2612))
(assert (= (x1323 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107)) x458))
(assert (= (x3066 x340 x903 x2435 x986) (x3126 (x3066 x340 x903 x2435 x986))))
(assert (= (x1107 (x872 x2010 x2188 x2174 x1787 x283)) x2010))
(assert (x730 x822))
(assert (= (x3126 88383320980755791914082775550597828907713979028428263264130000526486271950848) 0))
(assert (x730 x2356))
(assert (x730 x985))
(assert (= (x3126 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715)) (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715)))
(assert (x2705 95932229227554293267862761608555258089024927314852490146714677558661980618752))
(assert (x730 x835))
(assert (=> (>= 10000 x1427) (= (x3126 x1427) 0)))
(assert (x730 x3049))
(assert (= (x2316 (x2040 x2446 x1276 x1801)) x1276))
(assert (= x729 (x1323 (x1495 x2010 x206 x372 x729 x2819 x1580))))
(assert (= (and x117 (not x1552)) x2746))
(assert (x1620 x879))
(assert (< 10000 (x2040 x1401 x1347 x593)))
(assert (= x2830 (x79 (x2358 x340 x1816 x582 x170 x2830 x1300 x481))))
(assert (= x1023 (x2997 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023))))
(assert (x2705 111117225372770300986259473995147604481826136133417213952520719377678811004928))
(assert (x730 x2565))
(assert (x730 x1130))
(assert (x730 x3018))
(assert (= (x1495 x1627 x2555 x1856 x2287 x1889 x2382) (x3126 (x1495 x1627 x2555 x1856 x2287 x1889 x2382))))
(assert (x1174 x663))
(assert (x730 x2311))
(assert (x730 x430))
(assert (x730 x253))
(assert (=> (>= 10000 x2600) (= 0 (x3126 x2600))))
(assert (x730 x2939))
(assert (x730 x1013))
(assert (= x2217 (x2316 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048))))
(assert (= (or x2731 x2788) x2935))
(assert (x730 x2534))
(assert (= (x2203 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337)) x2229))
(assert (= (=> (= x2811 x2609) x2104) x989))
(assert (x634 x418 32))
(assert (x730 x1782))
(assert (> (x2476 x1955 x108) 10000))
(assert (=> (>= 10000 x582) (= (x3126 x582) 0)))
(assert (x730 x906))
(assert (= (and x126 (not x383)) x574))
(assert (= (x2203 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906)) x295))
(assert (= x1662 (=> (and (= x667 (x2308 x1146)) (= (x2135 x3151) x1178) (= x348 (not (> x667 1))) (= x2945 (x3095 (+ x2762 32))) (= x941 (x3095 (+ 32 x3151))) (not (= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x3095 (+ 32 x487)) x3151) (= (x3095 (+ x3151 64)) x1294) (< x3003 x584) (= x2173 (x3094 x1294)) (= (x3095 (+ x3003 32)) x2762) (not (= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= 1 x1665) (<= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3003) (= (x2374 x941) x1100) (= (x545 1461501637330902918203684832716283019655932542975 x1178) x1378) (= (x3095 (+ x2070 32)) x143) (= x1665 (x653 x550)) (= x2070 (x3095 (+ 32 x2945))) (= x560 (x3095 (+ x550 32))) (= (x3095 (+ x3003 160)) x584) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3003)) (and (=> (= x584 x2502) x735) x348))))
(assert (= (or x1778 x2209) x2538))
(assert (= (x2316 (x3066 x1140 x2757 x2156 x1949)) x2757))
(assert (x1613 32 x2955))
(assert (x730 x2556))
(assert (x730 x184))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (x730 x1471))
(assert (x730 x2945))
(assert (x730 x144))
(assert (= x1949 (x1323 (x3066 x1140 x2757 x2156 x1949))))
(assert (=> (<= x895 10000) (= 0 (x3126 x895))))
(assert (=> (<= x1140 10000) (= (x3126 x1140) 0)))
(assert (= (and x315 (not x1138)) x423))
(assert (x730 x2407))
(assert (x730 x2982))
(assert (= (x2316 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492)) x2651))
(assert (=> (>= 10000 x1136) (= 0 (x3126 x1136))))
(assert (x730 x257))
(assert (x730 x1877))
(assert (x730 x71))
(assert (< (x1382 x41 x439 x193 x158 x751 x926 x2554 x608) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1071))
(assert (=> (<= x1989 10000) (= (x3126 x1989) 0)))
(assert (x634 x1666 32))
(assert (x730 x2775))
(assert (= x1624 (x2316 (x2476 x2660 x1624))))
(assert (=> (>= 10000 x986) (= 0 (x3126 x986))))
(assert (= 0 (x3126 111717504842162250273123531270270194031611963357183166590777697365354585522176)))
(assert (x730 x647))
(assert (x730 x2132))
(assert (= x1354 (x2316 (x3066 x914 x1354 x34 x2368))))
(assert (=> (>= 10000 x2252) (= 0 (x3126 x2252))))
(assert (x730 x2510))
(assert (= (x3126 57896044618658097711785492504343953926634992332820282019728792003956564820100) 0))
(assert (x730 x2794))
(assert (=> (>= 10000 x2923) (= (x3126 x2923) 0)))
(assert (x730 x1557))
(assert (= (x1323 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715)) x2967))
(assert (x730 x1444))
(assert (x730 x1247))
(assert (=> (>= 10000 x2229) (= (x3126 x2229) 0)))
(assert (x730 x2727))
(assert (= (or x1299 x1565) x696))
(assert (not (x2705 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994))))
(assert (= (x1323 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867)) x2311))
(assert (x2705 79228162514264337593543950336))
(assert (x730 x1943))
(assert (=> (>= 10000 x2520) (= (x3126 x2520) 0)))
(assert (x730 x1176))
(assert (x730 x2099))
(assert (x730 x2572))
(assert (not (x2705 (x872 x2520 x2732 x1371 x1843 x1016))))
(assert (= (x2316 (x2476 x2010 x2879)) x2879))
(assert (x730 x3052))
(assert (x730 x2644))
(assert (x730 x2355))
(assert (x1174 x1317))
(assert (x730 x623))
(assert (x730 x1705))
(assert (x730 x665))
(assert (= x1061 (x1323 (x3066 x2446 x1523 x1087 x1061))))
(assert (=> (>= 10000 x2366) (= (x3126 x2366) 0)))
(assert (= x2948 (=> (and (or (and x1960 (and (<= x2839 4294967295) (= 1 x1957) (<= 32 x2839))) (and (= x3138 x1957) (not x1960))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2839) (= x2775 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= (x545 1461501637330902918203684832716283019655932542975 x1498) x2917) (<= 32 x2839) (= x2154 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= x1960 (< 0 x3138)) (= x1018 (x3095 (+ x2017 4))) (= x1414 (x3095 (+ 32 x1018))))) x1404)))
(assert (x730 x2577))
(assert (x730 x1217))
(assert (x730 x2224))
(assert (x730 x2616))
(assert (x730 x2157))
(assert (x730 x973))
(assert (not (x2705 (x872 x1140 x314 x2331 x587 x670))))
(assert (x730 x921))
(assert (x730 x689))
(assert (x730 x3085))
(assert (x730 x2369))
(assert (= (x3066 x86 x768 x2142 x811) (x3126 (x3066 x86 x768 x2142 x811))))
(assert (x730 x1586))
(assert (x730 x1568))
(assert (x1613 32 x1746))
(assert (x730 x1747))
(assert (= x950 (x2316 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787))))
(assert (x730 x2248))
(assert (x730 x2657))
(assert (x1174 x1498))
(assert (= 0 (x3126 18446746139588821027)))
(assert (= x284 (and x2197 x1219)))
(assert (= x1487 (x2203 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470))))
(assert (x634 x240 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2047))
(assert (< (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2320))
(assert (= x2455 (x1323 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379))))
(assert (= x546 (x79 (x872 x914 x2376 x374 x2191 x546))))
(assert (= (and x2573 (not x3010)) x1556))
(assert (x730 x2678))
(assert (x730 x1352))
(assert (x730 x1544))
(assert (= x3125 (x2258 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)))
(assert (=> (>= 10000 x1956) (= (x3126 x1956) 0)))
(assert (x730 x1597))
(assert (x730 x151))
(assert (x730 x2379))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (x730 x3030))
(assert (x730 x2618))
(assert (x730 x608))
(assert (=> (>= 10000 x1580) (= (x3126 x1580) 0)))
(assert (x2800 79228162514264337593543950336))
(assert (= x1565 (and x2568 x1971)))
(assert (= (and (not x2465) x1566) x1451))
(assert (x730 x1771))
(assert (= x2483 (x2316 (x872 x1627 x2483 x109 x2307 x1490))))
(assert (x730 x2164))
(assert (x730 x1380))
(assert (= (x3126 (x3066 x1353 x1464 x701 x2889)) (x3066 x1353 x1464 x701 x2889)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055)))
(assert (= (x3126 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)) (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)))
(assert (=> (>= 10000 x2992) (= 0 (x3126 x2992))))
(assert (x730 x319))
(assert (= x1401 (x1107 (x872 x1401 x1136 x1211 x1618 x813))))
(assert (= x2682 (x2258 (x1495 x914 x1297 x1967 x1427 x1724 x2682))))
(assert (= x627 (x1323 (x872 x1353 x1953 x1712 x627 x30))))
(assert (< 10000 (x872 x41 x207 x759 x1484 x2221)))
(assert (= (x3126 2065879269444) 0))
(assert (= (x872 x914 x2376 x374 x2191 x546) (x3126 (x872 x914 x2376 x374 x2191 x546))))
(assert (x730 x1627))
(assert (=> (<= x2191 10000) (= 0 (x3126 x2191))))
(assert (x730 x2021))
(assert (x730 x2839))
(assert (=> (<= x2564 10000) (= (x3126 x2564) 0)))
(assert (x1620 32))
(assert (=> (<= x2367 10000) (= 0 (x3126 x2367))))
(assert (x730 x1113))
(assert (x730 x1154))
(assert (= (x1107 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107)) x41))
(assert (x730 x2615))
(assert (x730 x593))
(assert (=> (>= 10000 x692) (= 0 (x3126 x692))))
(assert (> (x3066 x2010 x1989 x40 x1776) 10000))
(assert (x730 x268))
(assert (= (x2203 (x3066 x41 x1817 x354 x714)) x354))
(assert (= (x1107 (x1495 x86 x2248 x1945 x156 x566 x621)) x86))
(assert (not (x2705 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509))))
(assert (= (x79 (x872 x1955 x3110 x999 x2468 x2733)) x2733))
(assert (= x2010 (x1107 (x2040 x2010 x1777 x1062))))
(assert (x730 x152))
(assert (=> (>= 10000 x3047) (= 0 (x3126 x3047))))
(assert (x730 x207))
(assert (x730 x322))
(assert (=> (<= x714 10000) (= (x3126 x714) 0)))
(assert (=> (<= x2506 10000) (= 0 (x3126 x2506))))
(assert (= x1994 (x2997 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994))))
(assert (=> (>= 10000 x1396) (= (x3126 x1396) 0)))
(assert (x730 x1988))
(assert (= (or x2587 x2751) x945))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1495 x1353 x488 x2082 x1350 x3006 x1453)))
(assert (=> (<= x1845 10000) (= (x3126 x1845) 0)))
(assert (x730 x692))
(assert (x730 x2165))
(assert (=> (>= 10000 x384) (= (x3126 x384) 0)))
(assert (=> (<= x290 10000) (= (x3126 x290) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2040 64 x2006 1)))
(assert (x730 x1332))
(assert (= (x3126 95932229227554293267862761608555258089024927314852490146714677558661980618752) 0))
(assert (x730 x2959))
(assert (x730 x1273))
(assert (x730 x2450))
(assert (x730 x1221))
(assert (=> (<= x568 10000) (= (x3126 x568) 0)))
(assert (x730 x2295))
(assert (= x2737 (x1323 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171))))
(assert (x1613 160 x676))
(assert (= x3057 (x2203 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146))))
(assert (x634 x249 32))
(assert (=> (<= x391 10000) (= (x3126 x391) 0)))
(assert (x730 x2194))
(assert (=> (<= x481 10000) (= (x3126 x481) 0)))
(assert (= x422 (x1323 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770))))
(assert (= (and (not x824) x298) x787))
(assert (x730 x955))
(assert (x730 x826))
(assert (= (or x59 x2728) x509))
(assert (< (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3032 (x2203 (x1495 x2520 x1730 x3032 x1572 x2589 x1647))))
(assert (x730 x1456))
(assert (= x1163 (and x696 x227)))
(assert (x730 x326))
(assert (= x807 (=> (= x3003 x2105) x2244)))
(assert (x730 x439))
(assert (x730 x561))
(assert (x730 x2744))
(assert (x2705 18446744073709551167))
(assert (= (x3126 (x3066 x2010 x1989 x40 x1776)) (x3066 x2010 x1989 x40 x1776)))
(assert (= x705 (and x2527 (not x2094))))
(assert (> (x3066 x1353 x1464 x701 x2889) 10000))
(assert (=> (<= x1834 10000) (= (x3126 x1834) 0)))
(assert (x1613 32 x2117))
(assert (x730 x2131))
(assert (< (x1495 x2520 x1730 x3032 x1572 x2589 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x634 x1400 1461501637330902918203684832716283019655932542976))
(assert (x730 x530))
(assert (=> (>= 10000 x670) (= (x3126 x670) 0)))
(assert (x634 x1498 1461501637330902918203684832716283019655932542976))
(assert (x2705 18446746139588821027))
(assert (> (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492) 10000))
(assert (x730 x3076))
(assert (= (x2203 (x3066 x1955 x1098 x1544 x216)) x1544))
(assert (= (and x3093 x620) x1028))
(assert (=> (>= 10000 x937) (= 0 (x3126 x937))))
(assert (= x30 (x79 (x872 x1353 x1953 x1712 x627 x30))))
(assert (x730 x1603))
(assert (=> (<= x567 10000) (= 0 (x3126 x567))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1495 x1258 x1080 x692 x2178 x732 x2902)))
(assert (x730 x2280))
(assert (= (x1107 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690)) x914))
(assert (= (x1323 (x3066 66 x2962 x1150 x589)) x589))
(assert (= x673 (=> (and (= x1119 (x2016 x1571)) (= x1993 (x2016 x1119)) (= x2268 (< 0 x1993))) (and (=> (and (= x1402 x2025) (not x2268)) x2813) (=> (and (and (= x1626 (x2016 x1645)) (= (x3095 (+ 32 x1626)) x1764) (= (x2016 x329) x171) (= (x3095 (+ 128 x834)) x1220) (= (x3095 (+ x994 32)) x203) (= x994 (x3095 (+ x194 32))) (= x194 (x3095 (+ 32 x834))) (= x329 (x2016 x1571)) (= (x2016 x2107) x3159) (<= 1 x171) (= (< 0 x461) x2536) (= x461 (x181 x1626)) (= x2272 (x2016 x3159)) (= (x3095 (+ 32 x1402)) x834) (= (x3095 (+ 32 x321)) x1645) (= (x2016 x321) x708) (= x2107 (x3095 (+ 32 x329))) (= x2027 (x3095 (+ 32 x1220))) (= x2856 (x545 1461501637330902918203684832716283019655932542975 x2272)) (= (x3095 (+ 32 x3159)) x321)) x2268) (and (=> (and (and (= (> x461 32) x2228) (= x2098 (x1046 x1764))) x2536) (and (=> (not x2228) x1417) (=> (and (and (= (x2854 x64) x2807) (= x2465 (> x461 64)) (= (x3095 (+ x1764 32)) x64) (= (x3095 (+ x2027 32)) x1644)) x2228) (and (=> (and x2465 (and (= x2611 (x3095 (+ 64 x2027))) (= x543 (x3095 (+ x1764 64))) (= x2741 (x2703 x543)) (= x1700 (> x461 96)))) (and (=> (not x1700) x1417) (=> x1700 x644))) (=> (not x2465) x1417))))) (=> (not x2536) x1417)))))))
(assert (x730 x578))
(assert (x730 x2876))
(assert (= x251 (and x2987 (not x2829))))
(assert (= x2929 (x2203 (x1495 x2446 x1084 x2929 x508 x2644 x2085))))
(assert (= x9 (and x891 x1133)))
(assert (x730 x1842))
(assert (x730 x1642))
(assert (= x111 (x1323 (x3066 x2660 x1931 x857 x111))))
(assert (x730 x825))
(assert (> (x1495 x1627 x2555 x1856 x2287 x1889 x2382) 10000))
(assert (x730 x953))
(assert (x730 x1518))
(assert (= (x3126 (x2358 x340 x1816 x582 x170 x2830 x1300 x481)) (x2358 x340 x1816 x582 x170 x2830 x1300 x481)))
(assert (x1006 x1798))
(assert (x730 x1685))
(assert (=> (>= 10000 x2248) (= 0 (x3126 x2248))))
(assert (x730 x1806))
(assert (= x2065 (x2203 (x1495 x41 x2636 x2065 x2915 x2365 x511))))
(assert (x730 x1059))
(assert (x730 x2070))
(assert (= x2307 (x1323 (x872 x1627 x2483 x109 x2307 x1490))))
(assert (=> (>= 10000 x2589) (= 0 (x3126 x2589))))
(assert (x730 x1667))
(assert (= x2368 (x1323 (x3066 x914 x1354 x34 x2368))))
(assert (x730 x364))
(assert (x730 x2041))
(assert (x730 x1119))
(assert (= (x1495 x914 x1297 x1967 x1427 x1724 x2682) (x3126 (x1495 x914 x1297 x1967 x1427 x1724 x2682))))
(assert (x730 x110))
(assert (= (x2316 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869)) x2057))
(assert (< (x1495 x2446 x1084 x2929 x508 x2644 x2085) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x25))
(assert (x400 x2272))
(assert (= (x1323 (x872 x2446 x637 x1088 x2581 x70)) x2581))
(assert (< (x872 x1955 x3110 x999 x2468 x2733) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1484) (= 0 (x3126 x1484))))
(assert (x730 x1919))
(assert (x730 x1856))
(assert (x730 x3038))
(assert (x730 x2422))
(assert (= (x2203 (x2040 x2446 x1276 x1801)) x1801))
(assert (x730 x2477))
(assert (x730 x672))
(assert (x730 x258))
(assert (x730 x7))
(assert (=> (>= 10000 x1363) (= (x3126 x1363) 0)))
(assert (x730 x2148))
(assert (< (x2476 x2520 x1301) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2007))
(assert (= 0 (x3126 18446744073709551167)))
(assert (< (x2476 x1401 x468) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2214))
(assert (= x1012 (and x1590 x1799)))
(assert (=> (<= x1518 10000) (= (x3126 x1518) 0)))
(assert (x1620 x1498))
(assert (x730 x2146))
(assert (x730 x2282))
(assert (x730 x2857))
(assert (x730 x1450))
(assert (x730 x1150))
(assert (=> (<= x2874 10000) (= 0 (x3126 x2874))))
(assert (= x2660 (x1107 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453))))
(assert (x730 x2139))
(assert (x730 x2967))
(assert (x730 x1964))
(assert (x730 x931))
(assert (x730 x600))
(assert (x730 x2578))
(assert (x730 x155))
(assert (=> (>= 10000 x454) (= (x3126 x454) 0)))
(assert (x730 x1227))
(assert (x730 x2940))
(assert (= x2093 (x2203 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107))))
(assert (x730 x2009))
(assert (x730 x1997))
(assert (x730 x417))
(assert (x730 x1688))
(assert (= (x2203 (x1495 x340 x1638 x1834 x2210 x285 x1956)) x1834))
(assert (x1008 x2864))
(assert (x730 x2981))
(assert (x730 x972))
(assert (x730 x2236))
(assert (x730 x2137))
(assert (= (and x1615 x1308) x766))
(assert (= x2355 (x2316 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078))))
(assert (= x86 (x1107 (x3066 x86 x768 x2142 x811))))
(assert (x730 x1220))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (= x148 (and (not x2680) x465)))
(assert (x730 x567))
(assert (= (x2258 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770)) x2059))
(assert (x634 x2595 32))
(assert (= (x1107 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078)) x1140))
(assert (x730 x1822))
(assert (= x986 (x1323 (x3066 x340 x903 x2435 x986))))
(assert (x1006 x240))
(assert (= 0 (x3126 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x730 x658))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639618)))
(assert (x1613 160 x2955))
(assert (= x352 (=> (and (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1549) (<= x1549 18446744073709551455)) (>= 18446744073709551615 x1549) (= (x2905 x1221) x581) (<= 160 x2909) (= x955 (x3095 (+ x152 32))) (= (x3095 (+ x1549 32)) x927) (= x2843 (x2905 x668)) (not (< x2605 x1549)) (= x152 (x3095 (+ x1179 32))) (= x2909 (x2951 (- x1995 x1752))) (or (>= x1752 57896044618658097711785492504343953926634992332820282019728792003956564820517) (>= 2065879269284 x1752)) (= (x3095 (+ 32 x1432)) x2177) (= x2786 (not (> x2955 1))) (= x1432 (x3095 (+ x1221 32))) (= x2891 (x2905 x1752)) (>= 5 x2891) (= (x3095 (+ 32 x668)) x1221) (>= 18446744073709551615 x1549) (> x2605 x1549) (= x1179 (x3095 (+ 32 x927))) (>= 18446744073709551614 x1549) (= x2605 (x3095 (+ x1549 160))) (<= x1549 18446744073709551614) (>= 1461501637330902918203684832716283019655932542975 x2843) (not (= x1549 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1549) (= (x3095 (+ 32 x1752)) x668) (= (x2905 x1432) x998) (<= x2909 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1549) (>= 18446744073709551455 x1549)) (= (x2905 x2177) x1038) (<= x1038 1461501637330902918203684832716283019655932542975)) (and (=> (= x2103 x2605) x2943) x2786))))
(assert (x730 x2029))
(assert (< (x2040 x1955 x2784 x639) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= x92 (x2203 (x3066 x1258 x885 x92 x1215))))
(assert (< 10000 (x2476 x1258 x2235)))
(assert (x730 x1048))
(assert (=> (<= x865 10000) (= 0 (x3126 x865))))
(assert (x1613 64 x1224))
(assert (x730 x667))
(assert (x1613 32 x1142))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237)))
(assert (x730 x2460))
(assert (not (x2705 (x1495 x2446 x1084 x2929 x508 x2644 x2085))))
(assert (= (and (not x227) x696) x2321))
(assert (x1620 x3023))
(assert (x730 x69))
(assert (x730 x3000))
(assert (= (x2683 (x2358 x340 x1816 x582 x170 x2830 x1300 x481)) x481))
(assert (x730 x2582))
(assert (= (x2316 (x1495 x2446 x1084 x2929 x508 x2644 x2085)) x1084))
(assert (x730 x1918))
(assert (x634 x1317 1461501637330902918203684832716283019655932542976))
(assert (= x154 (and x756 (not x2125))))
(assert (x1174 x1666))
(assert (=> (>= 10000 x608) (= 0 (x3126 x608))))
(assert (x730 x2601))
(assert (= x3117 (x2316 (x2040 x2520 x3117 x311))))
(assert (x730 x2126))
(assert (= (x2203 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787)) x1110))
(assert (= 66 (x1107 (x3066 66 x2962 x1150 x589))))
(assert (x730 x1927))
(assert (= (and x2647 x1092) x2978))
(assert (x730 x2173))
(assert (x730 x2529))
(assert (x400 x2594))
(assert (=> (<= x2376 10000) (= 0 (x3126 x2376))))
(assert (x730 x2417))
(assert (= (x79 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)) x2137))
(assert (x634 x2718 1461501637330902918203684832716283019655932542976))
(assert (x730 x946))
(assert (=> (>= 10000 x1350) (= (x3126 x1350) 0)))
(assert (x730 x522))
(assert (x730 x2269))
(assert (x1620 x2714))
(assert (x730 x2756))
(assert (= x2944 (and x902 (not x247))))
(assert (x730 x1852))
(assert (x730 x1003))
(assert (= (x2258 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492)) x2578))
(assert (x1613 128 x65))
(assert (= 0 (x3126 32542679537407071897843112657522291873774333932075415528008786499928730894336)))
(assert (= x2209 (and x1218 x2116)))
(assert (= (x2316 (x2476 x914 x1396)) x1396))
(assert (x730 x3146))
(assert (x730 x652))
(assert (x2800 x1818))
(assert (= (x2203 (x872 x2446 x637 x1088 x2581 x70)) x1088))
(assert (= x207 (x2316 (x872 x41 x207 x759 x1484 x2221))))
(assert (x730 x1432))
(assert (= x1790 (=> (and (= (x3095 (+ x2959 32)) x658) (= (x3095 (+ 32 x3009)) x1075) (= x2608 (not (< 1 x2117)))) (and x2608 (=> (and (= x970 1) (= x658 x1977) (= x1966 x1075)) x1525)))))
(assert (=> (<= x2653 10000) (= (x3126 x2653) 0)))
(assert (=> (<= x639 10000) (= (x3126 x639) 0)))
(assert (x730 x182))
(assert (x730 x1389))
(assert (x730 x2382))
(assert (x730 x279))
(assert (not (x2705 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690))))
(assert (= x1360 (and x498 (not x330))))
(assert (= x3068 (x79 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171))))
(assert (x730 x1460))
(assert (x730 x1843))
(assert (x730 x2212))
(assert (< 10000 (x2040 64 x2006 1)))
(assert (=> (<= x732 10000) (= (x3126 x732) 0)))
(assert (x730 x2955))
(assert (x730 x2189))
(assert (< (x2040 x1353 x1143 x1194) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1723))
(assert (= x2962 (x2316 (x3066 66 x2962 x1150 x589))))
(assert (x730 x2117))
(assert (=> (>= 10000 x2009) (= 0 (x3126 x2009))))
(assert (x730 x2101))
(assert (x730 x1972))
(assert (= (x2203 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453)) x1773))
(assert (x730 x1297))
(assert (x730 x3129))
(assert (= x55 (x2258 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867))))
(assert (x730 x747))
(assert (= x2644 (x79 (x1495 x2446 x1084 x2929 x508 x2644 x2085))))
(assert (not (x2705 (x2040 x1353 x1143 x1194))))
(assert (=> (<= x1090 10000) (= 0 (x3126 x1090))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2040 x1140 x702 x1878)))
(assert (= x2896 (x1323 (x1495 x1401 x2366 x421 x2896 x366 x1518))))
(assert (x1620 x2110))
(assert (x730 x147))
(assert (x730 x853))
(assert (= x2210 (x1323 (x1495 x340 x1638 x1834 x2210 x285 x1956))))
(assert (= x2543 (x2258 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787))))
(assert (x730 x2264))
(assert (x730 x551))
(assert (x730 x2926))
(assert (x730 x1952))
(assert (x1620 x617))
(assert (x730 x2453))
(assert (x730 x892))
(assert (x730 x2805))
(assert (x730 x2315))
(assert (x730 x127))
(assert (= x1350 (x1323 (x1495 x1353 x488 x2082 x1350 x3006 x1453))))
(assert (x730 x594))
(assert (=> (>= 10000 x1110) (= 0 (x3126 x1110))))
(assert (not (x2705 (x872 x86 x2223 x1997 x2881 x467))))
(assert (= (and x1814 x103) x2987))
(assert (< 10000 (x2040 x2446 x1276 x1801)))
(assert (x730 x3110))
(assert (x730 x331))
(assert (x730 x3042))
(assert (x730 x3086))
(assert (= (x2316 (x2040 x1353 x1143 x1194)) x1143))
(assert (x730 x2672))
(assert (x730 x2080))
(assert (x634 x2139 1461501637330902918203684832716283019655932542976))
(assert (=> (>= 10000 x1242) (= 0 (x3126 x1242))))
(assert (< (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x193))
(assert (= x1427 (x1323 (x1495 x914 x1297 x1967 x1427 x1724 x2682))))
(assert (x730 x1182))
(assert (= (and x2465 x1566) x1387))
(assert (x730 x2719))
(assert (x730 x2284))
(assert (x730 x266))
(assert (= (and x2752 x2645) x465))
(assert (= x1147 (x79 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382))))
(assert (x730 x662))
(assert (x730 x1412))
(assert (= (and x1145 x2652) x3077))
(assert (=> (>= 10000 x1544) (= (x3126 x1544) 0)))
(assert (x730 x793))
(assert (= (and x2268 x466) x1330))
(assert (= 0 (x3126 111117225372770300986259473995147604481826136133417213952520719377678811004928)))
(assert (x730 x2337))
(assert (x730 x547))
(assert (not x624))
(assert (x730 x479))
(assert (x400 x1364))
(assert (x730 x1888))
(assert (x730 x881))
(assert (x730 x1644))
(assert (x730 x1497))
(assert (x730 x2405))
(assert (= x2317 (x2316 (x2476 x86 x2317))))
(assert (x730 x2684))
(assert (x730 x2299))
(assert (x730 x2307))
(assert (=> (<= x2691 10000) (= 0 (x3126 x2691))))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639902) 0))
(assert (x730 x2363))
(assert (x634 x1666 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2575 (x2316 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867))))
(assert (= x845 (and x3033 (not x1579))))
(assert (x730 x1854))
(assert (=> (>= 10000 x296) (= (x3126 x296) 0)))
(assert (= (x2203 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869)) x921))
(assert (< 10000 (x3066 x1140 x2757 x2156 x1949)))
(assert (x730 x1418))
(assert (x730 x1938))
(assert (= x2744 (x2316 (x872 x1258 x2744 x2472 x1167 x1827))))
(assert (< 10000 (x595 0)))
(assert (=> (>= 10000 x2287) (= 0 (x3126 x2287))))
(assert (= x2276 (x2316 (x3066 x1401 x2276 x1377 x2061))))
(assert (x730 x2254))
(assert (=> (<= x499 10000) (= (x3126 x499) 0)))
(assert (x730 x843))
(assert (= (x3126 (x872 x2446 x637 x1088 x2581 x70)) (x872 x2446 x637 x1088 x2581 x70)))
(assert (= x851 (and x387 (not x1929))))
(assert (= x99 (and x1772 (not x2888))))
(assert (x730 x2826))
(assert (= (x1323 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492)) x1255))
(assert (x730 x930))
(assert (x730 x659))
(assert (=> (>= 10000 x2819) (= (x3126 x2819) 0)))
(assert (< 10000 (x872 x914 x2376 x374 x2191 x546)))
(assert (x730 x1850))
(assert (> (x1382 x41 x439 x193 x158 x751 x926 x2554 x608) 10000))
(assert (x730 x1436))
(assert (x730 x2298))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1495 x1140 x296 x2634 x2211 x2023 x2162)))
(assert (x730 x630))
(assert (= x2446 (x1107 (x3066 x2446 x1523 x1087 x1061))))
(assert (= (x3126 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382)) (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382)))
(assert (x2705 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (= x508 (x1323 (x1495 x2446 x1084 x2929 x508 x2644 x2085))))
(assert (x730 x1021))
(assert (= (x2203 (x2040 x1258 x2380 x812)) x812))
(assert (= x2761 (=> (and (<= x1980 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2981 1461501637330902918203684832716283019655932542975) (<= x1980 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1872 224) x2656) (= x192 (x2905 68)) (= (x3095 (+ 32 x1980)) x2124) (= (x545 1461501637330902918203684832716283019655932542975 x2405) x578) (= (x3095 (+ x1980 32)) x363) (= (x2951 (- x94 x1980)) x2763) (= (x545 1461501637330902918203684832716283019655932542975 x2714) x218) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1980)) (= x2714 (x1872 x985)) (= x985 (x1872 160)) (= x2981 (x2905 100)) (= x2726 (>= 224 x1627)) (= (+ x1272 32) x1705) (= x578 x1393) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1980)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1980) (= (x3095 (+ 64 x363)) x94) (= (x545 1461501637330902918203684832716283019655932542975 x2850) x1393) (= (x1872 x1272) x2850) (= x2405 (x1872 256)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1980)) (<= x192 1461501637330902918203684832716283019655932542975) (= x1521 (x2951 (- x2763 32))) (> x94 x1980) (= (+ x289 32) x1272) (= x1627 (x1637 x1980)) (= x1116 (x3095 (+ x363 32))) (not (> x2792 x2656))) (and x2726 (=> (and (or (and (not x1552) (and (= x1057 (x3095 (+ x94 32))) (= (* x1746 32) x2270))) x1552) (and (= x2768 (x1637 x746)) (= (x1637 x2124) x2555) (= x1552 (= x1746 0)) (= x1881 (x3095 (+ x2124 160))) (= (x1637 x2826) x382) (= x1349 (x1637 x2124)) (= x694 (x3095 (+ x2124 32))) (= (x1637 x1881) x1003) (= (x3095 (+ 96 x2124)) x2436) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x94) (= (x1637 x2047) x2736) (= x2494 (x1637 x2523)) (<= 2 x1322) (= (x1637 x694) x109) (= x3044 (x872 x1627 x2483 x109 x2307 x1490)) (= (x3095 (+ 96 x2124)) x1015) (= (x1637 x2542) x2287) (= x746 (x3095 (+ 64 x2124))) (= (x595 0) x3054) (= (x1637 x490) x2873) (= x1746 (x1637 x2494)) (= x1852 (x3095 (+ x2124 128))) (= x1961 (x3095 (+ 32 x2124))) (= (x3095 (+ x2124 32)) x2783) (= x2499 (x3066 x1627 x286 x1607 x2736)) (= (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337) x2042) (= x1462 (x3095 (+ 192 x2124))) (= (x1637 x2124) x865) (= (x3095 (+ x2124 160)) x2826) (= (x1637 x2783) x1607) (> x1322 x94) (= x2047 (x3095 (+ 64 x2124))) (= x2229 (x1637 x24)) (= x1889 (x1637 x2852)) (= (x3095 (+ 32 x2124)) x1943) (= (x3095 (+ 32 x2124)) x24) (= (x1495 x1627 x2555 x1856 x2287 x1889 x2382) x2709) (= (x1637 x2124) x640) (= x1322 (x3095 (+ (mod (+ x1124 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x94))) (= x1381 (x1637 192)) (= (x3095 (+ x2124 128)) x1859) (= (x1637 x1859) x2382) (= x2242 (x2040 x1627 x2923 x280)) (= x2483 (x1637 x2124)) (= x280 (x1637 x362)) (= (x3095 (+ 128 x2124)) x2812) (= (x1637 x2812) x2876) (= x2852 (x3095 (+ x2124 96))) (= x2914 (x3095 (+ 64 x2124))) (= x2337 (x1637 x1462)) (= x1264 (ite (= x1627 0) x3054 (ite (>= 32 x1627) x2758 (ite (>= 64 x1627) x2242 (ite (<= x1627 96) x2499 (ite (>= 128 x1627) x3044 (ite (<= x1627 160) x2709 (ite (<= x1627 192) x1839 (ite (>= 224 x1627) x2042 x2871))))))))) (= (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382) x1839) (= (x1637 x2436) x1147) (= x362 (x3095 (+ x2124 32))) (= x2523 (x3095 (+ x1381 64))) (= (x3095 (+ 64 x2124)) x2542) (= x1856 (x1637 x1943)) (= (x1637 x1852) x1639) (<= 1 x94) (= (x3095 (+ 96 x2124)) x377) (= (* x1746 32) x1124) (= x1490 (x1637 x1015)) (= x1286 (x1637 x377)) (= (x1637 x2914) x2307) (= (x2476 x1627 x640) x2758) (= x490 (x3095 (+ 64 x2124))) (= (x1637 x2124) x2923) (= x2530 (x1637 x1961)) (= x286 (x1637 x2124)) (>= 18446744073709551615 x1746))) x2994)))))
(assert (x730 x2917))
(assert (x730 x468))
(assert (=> (<= x669 10000) (= (x3126 x669) 0)))
(assert (x730 x1768))
(assert (x730 x587))
(assert (not (x2705 (x2358 x340 x1816 x582 x170 x2830 x1300 x481))))
(assert (x1174 x1102))
(assert (x730 x2584))
(assert (=> (<= x2581 10000) (= 0 (x3126 x2581))))
(assert (x730 x1974))
(assert (x1620 x2139))
(assert (= (and (not x2540) x2076) x1522))
(assert (< (x872 x41 x207 x759 x1484 x2221) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1698 (=> (and (= (= 0 x2808) x2144) (or (not x2144) x2144)) x2327)))
(assert (= (x1107 (x3066 x340 x903 x2435 x986)) x340))
(assert (= x1638 (x2316 (x1495 x340 x1638 x1834 x2210 x285 x1956))))
(assert (= x2994 (=> (and (= x973 (x169 x2523)) (= x1735 (< 0 x3011)) (= (x169 x973) x3011)) (and (=> (and (= x1322 x256) (not x1735)) x429) (=> (and (and (= (x169 x800) x1026) (= (x3021 x1389) x1022) (= (x3095 (+ x229 32)) x8) (= x800 (x169 x2523)) (= x137 (x545 1461501637330902918203684832716283019655932542975 x2718)) (= x672 (x169 x229)) (= x1117 (x3095 (+ x401 32))) (= (x3095 (+ 32 x1567)) x1450) (= x1452 (x3095 (+ x800 32))) (= x1389 (x169 x8)) (= x2718 (x169 x855)) (= (x3095 (+ 32 x1456)) x2150) (= (x3095 (+ x1456 128)) x401) (= x229 (x3095 (+ 32 x855))) (= x855 (x169 x1452)) (= (x3095 (+ 32 x2150)) x1567) (= (x3095 (+ 32 x1389)) x1614) (>= x1026 1) (= (x3095 (+ 32 x1322)) x1456) (= x2658 (> x1022 0))) x1735) (and (=> (and x2658 (and (= (> x1022 32) x78) (= x360 (x683 x1614)))) (and (=> (not x78) x435) (=> (and x78 (and (= (< 64 x1022) x1696) (= x369 (x801 x2113)) (= (x3095 (+ x1117 32)) x1239) (= x2113 (x3095 (+ 32 x1614))))) (and (=> (not x1696) x435) (=> (and x1696 (and (= (x1526 x1532) x215) (= (x3095 (+ 64 x1117)) x1861) (= x824 (> x1022 96)) (= (x3095 (+ 64 x1614)) x1532))) (and (=> (not x824) x435) (=> x824 x960))))))) (=> (not x2658) x435)))))))
(assert (=> (>= 10000 x1211) (= (x3126 x1211) 0)))
(assert (x730 x1121))
(assert (x730 x2611))
(assert (= (or x2030 x1810 x845 x255 x1556) x2924))
(assert (x730 x1156))
(assert (x730 x295))
(assert (x730 x1083))
(assert (x730 x40))
(assert (x1613 32 x1812))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (x2258 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608)) x926))
(assert (= x366 (x79 (x1495 x1401 x2366 x421 x2896 x366 x1518))))
(assert (< (x1495 x2010 x206 x372 x729 x2819 x1580) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2154))
(assert (x730 x2716))
(assert (=> (>= 10000 x2472) (= 0 (x3126 x2472))))
(assert (=> (>= 10000 x2974) (= (x3126 x2974) 0)))
(assert (= x2731 (and x2378 x1605)))
(assert (x2705 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (not (x2705 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453))))
(assert (= x2100 (=> (and (= (x545 1461501637330902918203684832716283019655932542975 x1102) x789) (= x725 (x545 1461501637330902918203684832716283019655932542975 x2877)) (= x1102 (x2664 x1908)) (= x789 x725) (= 1 x1527) (= x1908 (x3095 (+ 128 x1177)))) x2730)))
(assert (not (x2705 (x2476 x1353 x1864))))
(assert (= x702 (x2316 (x2040 x1140 x702 x1878))))
(assert (x730 x792))
(assert (x730 x942))
(assert (x730 x473))
(assert (> (x2476 x2446 x391) 10000))
(assert (x730 x1616))
(assert (x730 x1212))
(assert (= x429 (=> (and (= x2086 (x3095 (+ 32 x1381))) (= (x371 x94) x2464) (= x2548 (x371 x2086)) (= (x3095 (+ x94 32)) x1887) (= (x3095 (+ x256 32)) x1259) (= (> x2464 0) x1935)) (and (=> (and x1935 (and (= (< 1 x2464) x1890) (= x442 (x371 x1887)) (= x1871 (x3095 (+ 32 x1259))) (= (x3095 (+ 32 x1887)) x3018))) (and (=> (and x1890 (and (= (x3095 (+ 32 x3018)) x220) (= (> x2464 2) x2645) (= x174 (x3095 (+ x1871 32))) (= (x2663 x3018) x1175))) (and (=> (and x2645 (and (= x2680 (> x2464 3)) (= x744 (x1584 x220)) (= x1975 (x3095 (+ x174 32))) (= (x3095 (+ x220 32)) x2961))) (and (=> (and (not x2680) (and (= x1900 x2961) (= 3 x3141) (= x1975 x2250))) x275) (=> x2680 x495))) (=> (and (not x2645) (and (= 2 x3141) (= x2250 x174) (= x220 x1900))) x275))) (=> (and (and (= x3018 x1900) (= x2250 x1871) (= x3141 1)) (not x1890)) x275))) (=> (and (not x1935) (and (= x3141 0) (= x1887 x1900) (= x1259 x2250))) x275)))))
(assert (x730 x830))
(assert (x1174 x908))
(assert (x730 x2443))
(assert (x730 x1618))
(assert (x730 x536))
(assert (x730 x455))
(assert (< 10000 (x3066 x2446 x1523 x1087 x1061)))
(assert (= 0 (x3126 79228162514264337593543950336)))
(assert (x730 x2492))
(assert (=> (>= 10000 x688) (= 0 (x3126 x688))))
(assert (x730 x773))
(assert (x730 x1478))
(assert (x730 x3070))
(assert (=> (<= x206 10000) (= 0 (x3126 x206))))
(assert (x730 x2357))
(assert (x730 x1949))
(assert (x730 x44))
(assert (= x1830 (=> (and (= (x3095 (+ 96 x1283)) x2326) (= x2799 (x1204 x2326)) (= x2661 (x3095 (+ x1685 96))) (= (not (> x2467 128)) x2925)) (and x1936 x2925))))
(assert (= (x2476 x340 x688) (x3126 (x2476 x340 x688))))
(assert (x730 x2490))
(assert (x730 x2750))
(assert (x730 x2325))
(assert (not (x2705 (x1495 x2520 x1730 x3032 x1572 x2589 x1647))))
(assert (x730 x668))
(assert (x730 x660))
(assert (x730 x912))
(assert (=> (>= 10000 x901) (= (x3126 x901) 0)))
(assert (x730 x373))
(assert (x730 x422))
(assert (x730 x903))
(assert (x730 x1270))
(assert (x730 x1564))
(assert (< (x872 x2520 x2732 x1371 x1843 x1016) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2178))
(assert (x730 x2622))
(assert (= x2400 (and x284 (not x1538))))
(assert (x730 x199))
(assert (= x2340 (x2316 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470))))
(assert (> (x872 x1401 x1136 x1211 x1618 x813) 10000))
(assert (x730 x1528))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x1258 x2235)))
(assert (= x2192 (x1323 (x1495 x2660 x524 x2407 x2192 x31 x1339))))
(assert (x730 x1845))
(assert (=> (<= x3057 10000) (= 0 (x3126 x3057))))
(assert (=> (>= 10000 x1733) (= 0 (x3126 x1733))))
(assert (=> (<= x1377 10000) (= 0 (x3126 x1377))))
(assert (=> (>= 10000 x3098) (= (x3126 x3098) 0)))
(assert (= x356 (and x1792 (not x1935))))
(assert (x730 x2700))
(assert (=> (>= 10000 x2183) (= (x3126 x2183) 0)))
(assert (= (and x466 (not x2268)) x1546))
(assert (=> (<= x1215 10000) (= 0 (x3126 x1215))))
(assert (x1174 x3023))
(assert (x2800 x3007))
(assert (x730 x1786))
(assert (x730 x811))
(assert (x730 x2707))
(assert (= x252 (and x2868 (not x2386))))
(assert (x730 x157))
(assert (x730 x770))
(assert (x730 x627))
(assert (x730 x760))
(assert (x730 x2464))
(assert (= (x2316 (x872 x2446 x637 x1088 x2581 x70)) x637))
(assert (x730 x1108))
(assert (x730 x511))
(assert (x730 x1042))
(assert (x730 x488))
(assert (x730 x964))
(assert (= (x2316 (x2476 x1258 x2235)) x2235))
(assert (x730 x2516))
(assert (x730 x2455))
(assert (= (x2476 x2660 x1624) (x3126 (x2476 x2660 x1624))))
(assert (x730 x1889))
(assert (x730 x1347))
(assert (= x2446 (x1107 (x2040 x2446 x1276 x1801))))
(assert (=> (>= 10000 x1869) (= (x3126 x1869) 0)))
(assert (x730 x2930))
(assert (x730 x1458))
(assert (x730 x1096))
(assert (x730 x1238))
(assert (= (x1107 (x1495 x41 x2636 x2065 x2915 x2365 x511)) x41))
(assert (x730 x1015))
(assert (= (x2203 (x3066 x1140 x2757 x2156 x1949)) x2156))
(assert (x1008 x1646))
(assert (< (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2838))
(assert (x730 x2669))
(assert (= x2474 (and x2073 x262)))
(assert (< 10000 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379)))
(assert (=> (<= x1490 10000) (= (x3126 x1490) 0)))
(assert (= x1404 (=> (and (and (= (= 0 x2115) x2052) (= x569 (x2754 x36)) (= x2409 1) (> x1402 x2719) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x2017) (>= x2017 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (>= x1957 1) (>= x1402 2) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x2017) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x2017)) (= (x2754 x2694) x1162) (= x2409 (x2754 x2017)) (<= x2017 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x2719 (x3095 (+ x2017 32))) (= x900 (x2754 x1571)) (= (x3095 (+ x2694 32)) x1571) (= (x2754 x900) x2115) (= (x3095 (+ (mod (+ x1598 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2719)) x1402) (= x1598 (* x2115 32)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2017) (= x2694 (x3095 (+ 32 x2263))) (>= 18446744073709551615 x2115) (= x2263 (x2754 192)) (< x2017 x2719) (<= 1 x1162) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2017) (or (<= x2017 115792089237316195423570985008687907853269984665640564039457584007913129639902) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x2017))) (or (and (not x2052) (and (= (* x2115 32) x628) (= x2019 (x3095 (+ x2719 32))))) x2052)) x673)))
(assert (= (x872 x1955 x3110 x999 x2468 x2733) (x3126 (x872 x1955 x3110 x999 x2468 x2733))))
(assert (x1613 32 x594))
(assert (=> (>= 10000 x2446) (= 0 (x3126 x2446))))
(assert (= (=> (= (not (> x3035 128)) x3142) (and x3142 x1790)) x1541))
(assert (= x1435 (x2203 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379))))
(assert (=> (>= 10000 x1099) (= (x3126 x1099) 0)))
(assert (=> (>= 10000 x1147) (= 0 (x3126 x1147))))
(assert (x730 x521))
(assert (x730 x1147))
(assert (x730 x1912))
(assert (= x2692 (=> (and (or (and (= x1499 x2965) (not x114)) (and (and (<= 32 x764) (= x2965 1) (>= 4294967295 x764)) x114)) (and (not (= x1568 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x764) (>= x237 1) (= x326 (x545 1461501637330902918203684832716283019655932542975 x2594)) (>= x764 32) (= (x3095 (+ x2817 4)) x1657) (= (x3095 (+ x1568 32)) x2817) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1568) (>= x916 1) (< x1568 x2817) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1568)) (= x916 (x3107 x1568)) (<= x1568 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1568 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x114 (> x1499 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1568) (= x2233 (x545 1461501637330902918203684832716283019655932542975 x2202)))) x877)))
(assert (x730 x2507))
(assert (x730 x2361))
(assert (=> (<= x314 10000) (= 0 (x3126 x314))))
(assert (= (x1107 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)) x1353))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906)))
(assert (= x2174 (x2203 (x872 x2010 x2188 x2174 x1787 x283))))
(assert (x730 x1836))
(assert (x730 x292))
(assert (x730 x1453))
(assert (x730 x1201))
(assert (= x1979 (x2258 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023))))
(assert (x1613 32 x1915))
(assert (= 0 (x3126 2065879269316)))
(assert (x730 x2862))
(assert (x730 x2595))
(assert (=> (>= 10000 x2784) (= 0 (x3126 x2784))))
(assert (x634 x2133 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x311 10000) (= 0 (x3126 x311))))
(assert (x730 x2828))
(assert (= (x1107 (x2040 x2520 x3117 x311)) x2520))
(assert (not (x2705 (x1495 x340 x1638 x1834 x2210 x285 x1956))))
(assert (x2800 x2955))
(assert (= x2991 (x1323 (x872 x2660 x1845 x1485 x2991 x881))))
(assert (x730 x1383))
(assert (=> (<= x2902 10000) (= 0 (x3126 x2902))))
(assert (x730 x2394))
(assert (x730 x3159))
(assert (= (x1323 (x3066 x41 x1817 x354 x714)) x714))
(assert (not (x2705 (x872 x1627 x2483 x109 x2307 x1490))))
(assert (x730 x2075))
(assert (= x1879 (and x2144 x1067)))
(assert (x730 x2650))
(assert (not (x2705 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906))))
(assert (x730 x440))
(assert (x730 x58))
(assert (x2705 134217728))
(assert (x730 x467))
(assert (< 10000 (x3066 x2520 x1785 x911 x2970)))
(assert (x730 x750))
(assert (x730 x2733))
(assert (= x960 (=> (and (= (x3095 (+ x1117 96)) x1884) (= x754 (not (< 128 x1022))) (= (x3095 (+ 96 x1614)) x1411) (= x2114 (x140 x1411))) (and x754 x435))))
(assert (= (x2203 (x1495 x1627 x2555 x1856 x2287 x1889 x2382)) x1856))
(assert (x730 x2883))
(assert (= (=> (and (= (* 32 x2464) x2356) (< x256 x2250) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x256) (= (x2951 (- x2250 x256)) x2350) (<= x256 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2164 (x3095 (+ x1259 x2356))) (= x310 x1900) (= x77 (* 32 x2464)) (= x613 (x2951 (- x2350 32))) (= x1955 (x2532 x256)) (<= x2464 4) (= x2250 x2164) (= x3141 x2464) (= (x3095 (+ x256 32)) x1596) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x256) (<= 1 x2250) (= x310 (x3095 (+ x77 x1887))) (>= x2164 1) (= (>= 224 x1955) x1583)) (and x1583 (=> (and (= (x2532 x1963) x1544) (= (x2532 x2853) x833) (= (x3095 (+ x1596 160)) x29) (= (x2532 x1596) x108) (= x3135 (x1495 x1955 x785 x1671 x1652 x833 x347)) (= x829 (x2532 x1596)) (= x3119 (x2040 x1955 x2784 x639)) (= (>= 224 x1140) x2958) (= (x3095 (+ 32 x1596)) x3025) (= x216 (x2532 x1418)) (= (x3095 (+ 32 x2250)) x1467) (= x2784 (x2532 x1596)) (= (x3095 (+ 128 x1596)) x1172) (= (ite (= x1955 0) x2013 (ite (>= 32 x1955) x905 (ite (<= x1955 64) x3119 (ite (<= x1955 96) x1683 (ite (>= 128 x1955) x1903 (ite (>= 160 x1955) x3135 (ite (<= x1955 192) x533 (ite (<= x1955 224) x2034 x623)))))))) x3075) (= (x2532 x1172) x347) (= x2653 (x2532 x2501)) (= (x3095 (+ 64 x1596)) x1418) (= (x872 x1955 x3110 x999 x2468 x2733) x1903) (= (x2532 x29) x1509) (= x1534 (x2532 x1423)) (= x1725 (x2532 x3025)) (= x1652 (x2532 x2828)) (= (x2532 x21) x2342) (= (x2532 x1596) x1098) (= x2828 (x3095 (+ x1596 64))) (= x2853 (x3095 (+ 96 x1596))) (= (x3095 (+ 32 x1010)) x1166) (= x905 (x2476 x1955 x108)) (= (x2532 x2931) x1671) (< x2250 x2553) (= (x3095 (+ x1596 64)) x2363) (= x1152 (x2532 x1596)) (= x1616 (x3095 (+ 64 x1596))) (= x2129 (x2951 (- x2008 32))) (= (x2532 x1596) x3110) (= (x2532 x3131) x639) (= x1702 (x3095 (+ x1596 64))) (= x785 (x2532 x1596)) (= x2939 (x3095 (+ 32 x1596))) (= (x3095 (+ 32 x3146)) x1010) (= x3131 (x3095 (+ 32 x1596))) (= (x2532 x1539) x3047) (= x2501 (x3095 (+ x1596 96))) (= x3146 (x3095 (+ 32 x2250))) (= x999 (x2532 x2939)) (= (x2532 x1616) x2468) (= x2013 (x595 0)) (= (x3095 (+ x1596 96)) x1539) (or (and (>= x2250 1) (<= x2250 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2250) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x2250))) (= x1979 (x2532 x2477)) (= x533 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)) (= x493 (x2532 x2363)) (= (x3095 (+ 32 x1596)) x21) (= (x3095 (+ x1596 128)) x2477) (= (x3095 (+ x1596 128)) x1668) (= x1374 (x3095 (+ 192 x1596))) (= x1023 (x2532 x1374)) (= (x248 x2250) x1140) (= (x3095 (+ x1596 160)) x1423) (= x1963 (x3095 (+ x1596 32))) (= x1442 (x2532 x1668)) (= (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023) x2034) (= (x3095 (+ x3146 96)) x2553) (= x2931 (x3095 (+ 32 x1596))) (= (x2951 (- x2553 x2250)) x2008) (= x626 (x3095 (+ 96 x1596))) (= x1683 (x3066 x1955 x1098 x1544 x216)) (= (x2532 x626) x2733) (= (x2532 x1702) x1090)) (and x2958 (=> (and (= x314 (x248 x1467)) (= (x3095 (+ 32 x1858)) x277) (= x1949 (x248 x1664)) (= (x248 256) x1468) (= (x248 x2284) x670) (= (x3095 (+ x1467 128)) x2488) (= (x248 x1467) x544) (= (x248 x2056) x1880) (= (x248 x2845) x2331) (= x2211 (x248 x1529)) (= x1073 (x248 x1467)) (= (x2040 x1140 x702 x1878) x2895) (or (and (<= x2553 115792089237316195423570985008687907853269984665640564039457584007913129639743) (>= x2553 129)) (and (<= x2553 126) (>= x2553 2)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2553) (>= x2553 115792089237316195423570985008687907853269984665640564039457584007913129639747))) (= (x248 x1467) x2355) (= (x248 x2302) x384) (= (x3095 (+ x1467 64)) x1529) (> x802 x2553) (= (x3095 (+ x1467 160)) x2181) (= (x248 x1079) x2381) (= (x3095 (+ 128 x1467)) x2056) (= (x3095 (+ 32 x2553)) x1358) (= x2845 (x3095 (+ x1467 32))) (= x2106 (x872 x1140 x314 x2331 x587 x670)) (= x482 (x3095 (+ 32 x1467))) (= (x3095 (+ x1467 64)) x1161) (= (x3095 (+ 32 x277)) x1648) (= (x248 x1467) x296) (= (x3095 (+ x1467 160)) x234) (= x1130 (x2951 (- x802 x2553))) (= (x595 0) x772) (= x232 (x3095 (+ x1467 96))) (= x438 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379)) (= x1500 (x3095 (+ 32 x1648))) (= x2816 (x3095 (+ 96 x1467))) (= (x3095 (+ x2553 32)) x446) (= (x3095 (+ x1467 96)) x2284) (= x1042 (x2951 (- x1130 32))) (= (x3095 (+ x1467 64)) x1747) (= x587 (x248 x1747)) (= (x248 x995) x3078) (= (x248 x232) x48) (= x1664 (x3095 (+ 64 x1467))) (= x1506 (x2476 x1140 x1073)) (= x802 (x3095 (+ 160 x446))) (= x1313 (x3095 (+ 128 x1467))) (= x2162 (x248 x2488)) (= x1766 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078)) (= x1592 (x3095 (+ x1467 32))) (= (x248 x2181) x1096) (= x1831 (x545 1461501637330902918203684832716283019655932542975 x1468)) (= x2156 (x248 x1592)) (= x2513 (x3095 (+ 96 x1467))) (= (x248 224) x906) (= (x248 x234) x2379) (= x1435 (x248 x1449)) (= x1898 (>= 224 x41)) (= (x1495 x1140 x296 x2634 x2211 x2023 x2162) x1663) (= x2634 (x248 x482)) (= (x248 x1467) x702) (= (x248 x2513) x2023) (= x1449 (x3095 (+ 32 x1467))) (= (x248 x1313) x1784) (= (x3095 (+ 32 x1467)) x1974) (= (x3095 (+ x446 32)) x1858) (= x2167 (x3066 x1140 x2757 x2156 x1949)) (= (x2072 x2553) x41) (= (x3095 (+ x1467 192)) x995) (= x2243 (ite (= 0 x1140) x772 (ite (<= x1140 32) x1506 (ite (>= 64 x1140) x2895 (ite (<= x1140 96) x2167 (ite (>= 128 x1140) x2106 (ite (>= 160 x1140) x1663 (ite (>= 192 x1140) x438 (ite (>= 224 x1140) x1766 x3080))))))))) (= x2455 (x248 x1161)) (= x1469 (x248 x2816)) (= x2302 (x3095 (+ 32 x1467))) (= x2757 (x248 x1467)) (= (x248 x1974) x1878) (= (x3095 (+ x1467 64)) x1079)) (and x1898 (=> (and (= x2832 (x1495 x41 x2636 x2065 x2915 x2365 x511)) (= x1912 (x2072 x3101)) (= (x3095 (+ 2 x802)) x1625) (= x193 (x2072 x3048)) (= (x2072 x1386) x511) (= x1156 (x3095 (+ 64 x1358))) (= x1285 (x3095 (+ 160 x1358))) (= (x2072 x2498) x926) (= (x2358 x41 x2183 x2093 x458 x1623 x1912 x107) x2083) (= x3048 (x3095 (+ 32 x1358))) (= x1623 (x2072 x2844)) (= x589 (x1594 x2391)) (= (x2072 x1388) x354) (= x2221 (x2072 x2887)) (= x2640 (x3095 (+ 32 x802))) (= (x595 0) x2821) (= x3162 (x2040 x41 x130 x982)) (= x2349 (x3095 (+ 32 x1358))) (= x2183 (x2072 x1358)) (= x1150 (x1594 x2640)) (= (x3095 (+ x1358 32)) x1296) (= x1817 (x2072 x1358)) (= x302 (ite (= x41 0) x2821 (ite (<= x41 32) x2196 (ite (<= x41 64) x3162 (ite (<= x41 96) x463 (ite (<= x41 128) x1306 (ite (<= x41 160) x2832 (ite (>= 192 x41) x2083 (ite (<= x41 224) x189 x1413))))))))) (= x2554 (x2072 x1285)) (= (x2072 x819) x107) (= x1793 (x3095 (+ x1625 32))) (= (x3095 (+ 32 x1358)) x2932) (= (x2072 x1617) x2915) (= x130 (x2072 x1358)) (= x722 (x3095 (+ 32 x1358))) (= (x3095 (+ 64 x1358)) x1926) (= x2348 (x2072 x1358)) (= x2759 (= x961 65)) (= x2093 (x2072 x1296)) (= x608 (x2072 x129)) (= x2844 (x3095 (+ x1358 96))) (= (x3095 (+ x1358 32)) x1388) (= (x2072 x2932) x759) (= (x3095 (+ x1358 96)) x2887) (= x564 (x3066 66 x2962 x1150 x589)) (= (x2072 x2349) x2065) (= x1386 (x3095 (+ 128 x1358))) (= (x3066 x41 x1817 x354 x714) x463) (= (x3095 (+ x1358 96)) x1054) (= x2391 (x3095 (+ x802 64))) (= (x2476 x41 x2348) x2196) (= (x1594 x802) x2962) (= (x2072 x1358) x2636) (= x2365 (x2072 x1054)) (= (x2072 x1358) x207) (= x1617 (x3095 (+ 64 x1358))) (= x1484 (x2072 x1926)) (= x158 (x2072 x2273)) (= (x2072 x722) x982) (= (x1382 x41 x439 x193 x158 x751 x926 x2554 x608) x189) (= (x872 x41 x207 x759 x1484 x2221) x1306) (= x2112 (x3095 (+ x1358 64))) (= x3101 (x3095 (+ x1358 128))) (= x2273 (x3095 (+ x1358 64))) (= (x2072 x2804) x751) (= (x2072 x1358) x439) (= x2804 (x3095 (+ 96 x1358))) (= x961 (x1594 x1815)) (= x819 (x3095 (+ x1358 160))) (= (x2072 x1156) x714) (= x2498 (x3095 (+ x1358 128))) (= (x2072 x2112) x458) (= (x3095 (+ 192 x1358)) x129)) (and (=> (and (and (= x268 x758) (= x2017 x802) (= 2 x3036) (= (x1594 x1815) x268) (= 0 x1498)) (not x2759)) x145) (=> (and (and (or (and (and (= x2597 3) (= x2246 0) (= x1540 x802) (= x26 x934)) x1996) (and (not x1996) (and (and (= x1760 (x3095 (+ x2450 32))) (= (x2265 x2681) x1430) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x802)) (= (x3136 x1909) x2545) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x802) (not (= x802 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x3095 (+ 32 x2413)) x2450) (<= x915 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x802) (= (x2265 (x3095 (+ x2681 32))) x3083) (<= x802 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x821 x1430 x3083 x2561 x2005) x915) (= x2681 (x3095 (+ x802 32))) (= x2005 (x2265 (x3095 (+ x2681 96)))) (= x1909 (x2951 (- x2681 32))) (< x802 x2681) (= 128 x1939) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x802)) (= (= 0 x963) x1145) (= x2561 (x2265 (x3095 (+ 64 x2681)))) (= x963 (x545 1461501637330902918203684832716283019655932542975 x2545)) (= (x3095 (+ 32 x2681)) x2413) (= (x2951 (- x2681 32)) x2445)) (or (and (not x1145) (and (= 0 x934) (= 0 x2597) (= x2545 x2246) (= x2681 x1540))) (and (and (= x1540 x2681) (= x2246 0) (= 1 x2597) (= x934 0)) x1145))))) (and (= (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x26) x1996) (= x2018 (+ x2236 32)) (= (+ 32 x2018) x2696) (= x2572 (x1594 x2236)) (= x26 (x1594 x2018)) (= (x1594 x2696) x1123) (= x1121 (x1041 x1123 248)))) x2759) x2827))))))))) x275))
(assert (= x611 (and x2487 x2074)))
(assert (=> (>= 10000 x711) (= 0 (x3126 x711))))
(assert (x730 x963))
(assert (= (x1107 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906)) x2660))
(assert (< (x872 x1353 x1953 x1712 x627 x30) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x491))
(assert (=> (>= 10000 x2065) (= 0 (x3126 x2065))))
(assert (x730 x1349))
(assert (=> (<= x2051 10000) (= (x3126 x2051) 0)))
(assert (=> (>= 10000 x2876) (= 0 (x3126 x2876))))
(assert (= x358 (x2203 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048))))
(assert (not (x2705 (x2476 x41 x2348))))
(assert (x730 x2594))
(assert (x730 x1811))
(assert (< 10000 (x2476 x1140 x1073)))
(assert (x730 x1170))
(assert (x1008 x2839))
(assert (x730 x1572))
(assert (x730 x2239))
(assert (= x41 (x1107 (x2476 x41 x2348))))
(assert (=> (>= 10000 x2221) (= 0 (x3126 x2221))))
(assert (x730 x2204))
(assert (= (x1107 (x872 x2660 x1845 x1485 x2991 x881)) x2660))
(assert (= (and x597 x2919) x601))
(assert (x730 x442))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2040 x2010 x1777 x1062)))
(assert (x634 x2594 1461501637330902918203684832716283019655932542976))
(assert (< 10000 (x2040 x914 x499 x291)))
(assert (x730 x241))
(assert (not (x2705 (x872 x2010 x2188 x2174 x1787 x283))))
(assert (x730 x961))
(assert (x730 x2887))
(assert (x730 x2927))
(assert (x730 x1496))
(assert (= x2178 (x1323 (x1495 x1258 x1080 x692 x2178 x732 x2902))))
(assert (x730 x643))
(assert (x730 x1548))
(assert (x730 x1439))
(assert (x730 x1364))
(assert (x730 x390))
(assert (x730 x1787))
(assert (=> (<= x1236 10000) (= 0 (x3126 x1236))))
(assert (x730 x1672))
(assert (x730 x2599))
(assert (x730 x2852))
(assert (x730 x1757))
(assert (=> (<= x111 10000) (= (x3126 x111) 0)))
(assert (not (x2705 (x3066 x2520 x1785 x911 x2970))))
(assert (x730 x796))
(assert (x730 x1321))
(assert (x730 x345))
(assert (x730 x1234))
(assert (x730 x2696))
(assert (= x2827 (=> (and (= x2246 x1498) (= x2597 x3036) (= x2017 x1540) (= x934 x758)) x145)))
(assert (x730 x2520))
(assert (x634 x2405 1461501637330902918203684832716283019655932542976))
(assert (= x2923 (x2316 (x2040 x1627 x2923 x280))))
(assert (x730 x2056))
(assert (x730 x2517))
(assert (x730 x1886))
(assert (= (and x1387 x1700) x346))
(assert (not (x2705 (x3066 x86 x768 x2142 x811))))
(assert (= (and x2888 x1772) x756))
(assert (= (x2683 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)) x480))
(assert (= (x3126 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (x730 x1331))
(assert (= (x79 (x1495 x2660 x524 x2407 x2192 x31 x1339)) x31))
(assert (x730 x2229))
(assert (=> (>= 10000 x2442) (= 0 (x3126 x2442))))
(assert (x730 x1979))
(assert (= (x2476 x2446 x391) (x3126 (x2476 x2446 x391))))
(assert (x730 x2364))
(assert (= (and x1821 (not x78)) x128))
(assert (x400 x1498))
(assert (x730 x2078))
(assert (not (x2705 (x2476 x2660 x1624))))
(assert (= x370 (x79 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509))))
(assert (= (x3126 (x2476 x914 x1396)) (x2476 x914 x1396)))
(assert (=> (>= 10000 x977) (= 0 (x3126 x977))))
(assert (= x1795 (and x918 x686)))
(assert (= x107 (x2683 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107))))
(assert (< 10000 (x2476 x1353 x1864)))
(assert (= x2446 (x1107 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994))))
(assert (= (x2316 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)) x783))
(assert (x730 x2998))
(assert (=> (>= 10000 x1994) (= 0 (x3126 x1994))))
(assert (x730 x8))
(assert (x1174 x617))
(assert (=> (>= 10000 x158) (= 0 (x3126 x158))))
(assert (x730 x2629))
(assert (= (=> (and (= x2116 (> x2260 0)) (= x2260 (x1202 x1352)) (>= x2922 1) (= x2922 (x1202 x1352)) (= (x1202 x1146) x1586)) (and (=> x2116 x555) (=> (and (not x2116) (= x2502 x2811)) x989))) x735))
(assert (= (x2203 (x2040 x41 x130 x982)) x982))
(assert (x730 x1298))
(assert (= (x3126 (x2040 x1627 x2923 x280)) (x2040 x1627 x2923 x280)))
(assert (x634 x1798 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x291))
(assert (x730 x453))
(assert (=> (<= x3110 10000) (= 0 (x3126 x3110))))
(assert (= (x2040 x2660 x290 x23) (x3126 (x2040 x2660 x290 x23))))
(assert (x730 x2968))
(assert (x730 x1057))
(assert (x730 x2033))
(assert (=> (>= 10000 x439) (= (x3126 x439) 0)))
(assert (=> (>= 10000 x1572) (= 0 (x3126 x1572))))
(assert (< 10000 (x3066 x340 x903 x2435 x986)))
(assert (x730 x2109))
(assert (x730 x2335))
(assert (x730 x166))
(assert (=> (<= x1652 10000) (= (x3126 x1652) 0)))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639712))
(assert (x730 x1178))
(assert (= x856 (and x2487 (not x2074))))
(assert (x730 x1318))
(assert (= (and x1600 x114) x1765))
(assert (=> (<= x546 10000) (= (x3126 x546) 0)))
(assert (= (x2316 (x2476 x2446 x391)) x391))
(assert (x2705 4294967295))
(assert (= (x2316 (x1495 x1955 x785 x1671 x1652 x833 x347)) x785))
(assert (not (x2705 (x1495 x1955 x785 x1671 x1652 x833 x347))))
(assert (= (and (not x114) x1600) x889))
(assert (x730 x2333))
(assert (x730 x1673))
(assert (= (and x3093 (not x620)) x188))
(assert (= x1572 (x1323 (x1495 x2520 x1730 x3032 x1572 x2589 x1647))))
(assert (x730 x2292))
(assert (=> (<= x2292 10000) (= 0 (x3126 x2292))))
(assert (x2705 18446744073709551615))
(assert (= (=> (and (= x980 (= x2021 0)) (>= 2 x1811) (= x2021 (ite (= x1811 0) 1 0))) (and (=> (and (and (= (> x1053 0) x880) (= x1331 0) (>= x1661 1) (= x1053 (x2724 x1146)) (= x1661 (x2724 x1146))) (not x980)) (and (=> (and (and (or (and (not x1799) (= x224 0)) (and x1799 (and (= x1832 3) (= 1 x224) (= 1 x1271) (= (x2724 x487) x1832)))) (and (= (x3095 (+ 32 x1146)) x1928) (<= 1 x1854) (= (ite (= 2 x2708) 1 0) x1520) (<= x2708 5) (= x1854 (x2724 x1146)) (= (x2724 x487) x2708) (= (x2724 x1928) x487) (= (= 0 x1520) x1799))) x880) x1662) (=> (and (not x880) (= x2502 x3003)) x735))) (=> (and x980 (and (= x1917 (ite (= x1811 1) 1 0)) (= x2094 (= x1917 0)))) (and (=> (and (and (= (x2724 x1146) x1253) (= (> x2577 0) x2540) (= (x2724 x1352) x2577) (= x1253 0) (= 2 x1811) (= 1 x1920)) x2094) (and (=> (and x2540 (and (= (x3095 (+ 32 x1352)) x230) (>= 5 x2071) (= x2071 (x2724 x2818)) (= (x2724 x1352) x1310) (= x2818 (x2724 x230)) (= (ite (= 1 x2071) 1 0) x150) (= x2197 (= 0 x150)) (<= 1 x1310))) (and (=> (and (not x2197) (and (= 0 x2618) (= 1 x1537))) x2128) (=> (and x2197 (and (or (and (= 1 x2286) x1538) (and (not x1538) (and (= x267 1) (= x464 (x2724 x2818)) (= x464 3)))) (and (= (> x2286 0) x1538) (>= 5 x1480) (= (ite (= 2 x1480) 1 0) x2286) (= (x2724 x2818) x1480)))) x2322))) (=> (and (not x2540) (and (= x2529 0) (= x659 0))) x940))) (=> (and (not x2094) (and (= x257 0) (= (> x1021 0) x2580) (= (x2724 x1146) x1021))) (and (=> (and (and (= 0 x381) (= x3003 x1406) (= x364 0)) (not x2580)) x1252) (=> (and x2580 (and (= x1426 (x2724 x1146)) (= x826 (ite (= x3096 2) 1 0)) (= x731 (= x826 0)) (= x3096 (x2724 x407)) (= (x2724 x2689) x407) (<= x3096 5) (<= 1 x1426) (= (x3095 (+ x1146 32)) x2689))) (and (=> (and (and (or (and x1929 (and (= 2 x157) (= 1 x416) (= x2952 1) (= 1 x2861) (= 1 x1473) (= x2224 0) (= (x2724 x407) x2861))) (and (and (= 0 x1473) (= 1 x157) (= 1 x2224) (= 0 x2952)) (not x1929))) (and (>= 5 x2927) (= x1929 (= x2780 0)) (= x2780 (ite (= 3 x2927) 1 0)) (= (x2724 x407) x2927))) x731) x1857) (=> (and (not x731) (and (= 1 x164) (= x503 0) (= 0 x538) (= 0 x3149))) x748))))))))) x2244))
(assert (x730 x1339))
(assert (=> (<= x2468 10000) (= (x3126 x2468) 0)))
(assert (x730 x2440))
(assert (= x1208 (x2683 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506))))
(assert (x730 x29))
(assert (x730 x2220))
(assert (= x41 (x1107 (x2040 x41 x130 x982))))
(assert (> (x2358 x1258 x2575 x87 x2311 x2009 x55 x867) 10000))
(assert (= x2788 (and x2378 (not x1605))))
(assert (x1174 x2626))
(assert (= (x1107 (x2476 x1955 x108)) x1955))
(assert (x730 x2772))
(assert (= (x2203 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055)) x1461))
(assert (x730 x2912))
(assert (x204 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x730 x640))
(assert (= x41 (x1107 (x872 x41 x207 x759 x1484 x2221))))
(assert (x1613 32 x3157))
(assert (x730 x740))
(assert (= (x3126 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055)) (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055)))
(assert (x730 x915))
(assert (x730 x1104))
(assert (< 10000 (x2040 x1627 x2923 x280)))
(assert (= x1989 (x2316 (x3066 x2010 x1989 x40 x1776))))
(assert (x730 x1232))
(assert (x730 x1245))
(assert (x2800 32))
(assert (x2800 x2117))
(assert (x634 x240 32))
(assert (=> (>= 10000 x2182) (= 0 (x3126 x2182))))
(assert (= x1518 (x2258 (x1495 x1401 x2366 x421 x2896 x366 x1518))))
(assert (= (x1107 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470)) x914))
(assert (= x1258 (x1107 (x2040 x1258 x2380 x812))))
(assert (x730 x1431))
(assert (= x1956 (x2258 (x1495 x340 x1638 x1834 x2210 x285 x1956))))
(assert (x730 x2291))
(assert (x730 x2158))
(assert (x730 x2470))
(assert (= (x79 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906)) x2367))
(assert (x730 x1781))
(assert (= (and (not x1981) x3105) x755))
(assert (not (x2705 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428))))
(assert (x1620 x2545))
(assert (x2705 18446744073709551455))
(assert (x730 x908))
(assert (< 10000 (x872 x2660 x1845 x1485 x2991 x881)))
(assert (x730 x1815))
(assert (x730 x708))
(assert (= (x2258 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453)) x2503))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1495 x1401 x2366 x421 x2896 x366 x1518)))
(assert (x730 x1800))
(assert (x730 x1424))
(assert (= x1067 (or x3050 x274)))
(assert (= (=> (= x180 x1629) x616) x1144))
(assert (= (x1323 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470)) x531))
(assert (=> (>= 10000 x715) (= 0 (x3126 x715))))
(assert (= x1445 (x2683 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906))))
(assert (= x1651 (and x2161 x2198)))
(assert (x730 x2162))
(assert (= (x1323 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869)) x2051))
(assert (x730 x3036))
(assert (x634 x2850 1461501637330902918203684832716283019655932542976))
(assert (= x320 (and (not x2603) x3103)))
(assert (x2705 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (x730 x649))
(assert (x730 x1720))
(assert (not (x2705 (x872 x2660 x1845 x1485 x2991 x881))))
(assert (x1008 x1995))
(assert (x730 x1402))
(assert (x730 x1316))
(assert (< (x3066 x340 x903 x2435 x986) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1878))
(assert (x730 x1484))
(assert (x730 x2694))
(assert (= 0 (x3126 18446744073709551614)))
(assert (x730 x2545))
(assert (x730 x1925))
(assert (x730 x937))
(assert (x1613 32 x3007))
(assert (= (x3126 (x872 x2660 x1845 x1485 x2991 x881)) (x872 x2660 x1845 x1485 x2991 x881)))
(assert (x730 x3034))
(assert (< (x2040 x2446 x1276 x1801) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2203 (x3066 x2010 x1989 x40 x1776)) x40))
(assert (= (x2316 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715)) x1458))
(assert (= x347 (x2258 (x1495 x1955 x785 x1671 x1652 x833 x347))))
(assert (=> (<= x2109 10000) (= (x3126 x2109) 0)))
(assert (x730 x288))
(assert (x730 x1322))
(assert (not (x2705 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492))))
(assert (x730 x2401))
(assert (x730 x286))
(assert (x730 x847))
(assert (x730 x121))
(assert (not (x2705 (x872 x1353 x1953 x1712 x627 x30))))
(assert (x730 x432))
(assert (=> (<= x1730 10000) (= (x3126 x1730) 0)))
(assert (x730 x1623))
(assert (x730 x2183))
(assert (= (x1107 (x2040 x1401 x1347 x593)) x1401))
(assert (x730 x2539))
(assert (x730 x1487))
(assert (x730 x2598))
(assert (x730 x1124))
(assert (x730 x2102))
(assert (x730 x1023))
(assert (= (x1107 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608)) x41))
(assert (x730 x1225))
(assert (x730 x2089))
(assert (x730 x1016))
(assert (x634 x1178 1461501637330902918203684832716283019655932542976))
(assert (=> (>= 10000 x1442) (= 0 (x3126 x1442))))
(assert (x730 x2184))
(assert (x730 x1410))
(assert (x1613 32 x1586))
(assert (x730 x2589))
(assert (x730 x2610))
(assert (x730 x1881))
(assert (x730 x1011))
(assert (x730 x2428))
(assert (= (or x2261 x1251) x2587))
(assert (x730 x1140))
(assert (=> (<= x2178 10000) (= (x3126 x2178) 0)))
(assert (x730 x933))
(assert (x730 x786))
(assert (=> (<= x2365 10000) (= (x3126 x2365) 0)))
(assert (x730 x2856))
(assert (x730 x244))
(assert (x730 x586))
(assert (x1620 x2202))
(assert (x730 x566))
(assert (=> (>= 10000 x511) (= 0 (x3126 x511))))
(assert (= (x1323 (x1495 x1627 x2555 x1856 x2287 x1889 x2382)) x2287))
(assert (= (x79 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867)) x2009))
(assert (= (x1323 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906)) x2716))
(assert (= (x2316 (x1495 x86 x2248 x1945 x156 x566 x621)) x2248))
(assert (x730 x1754))
(assert (= (x2203 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)) x1970))
(assert (x2705 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (x730 x2113))
(assert (=> (<= x1023 10000) (= 0 (x3126 x1023))))
(assert (x730 x179))
(assert (x400 x1317))
(assert (=> (<= x2889 10000) (= 0 (x3126 x2889))))
(assert (x1613 32 x1818))
(assert (= x1258 (x1107 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055))))
(assert (x730 x1499))
(assert (= (x3126 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)) (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)))
(assert (x730 x1111))
(assert (x730 x1131))
(assert (= (x2476 x1258 x2235) (x3126 (x2476 x1258 x2235))))
(assert (x730 x1826))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x730 x618))
(assert (x730 x486))
(assert (x730 x1064))
(assert (=> (>= 10000 x857) (= 0 (x3126 x857))))
(assert (= x2238 (and x682 (not x2658))))
(assert (x730 x1029))
(assert (not (x2705 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055))))
(assert (x730 x1523))
(assert (x730 x416))
(assert (x400 x1468))
(assert (= x2261 (or x851 x1555)))
(assert (x730 x2176))
(assert (=> (<= x524 10000) (= (x3126 x524) 0)))
(assert (> (x2358 x41 x2183 x2093 x458 x1623 x1912 x107) 10000))
(assert (=> (<= x1931 10000) (= 0 (x3126 x1931))))
(assert (=> (>= 10000 x2082) (= 0 (x3126 x2082))))
(assert (x730 x2849))
(assert (x730 x2804))
(assert (x730 x2915))
(assert (x730 x1276))
(assert (x730 x2160))
(assert (= x1401 (x1107 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869))))
(assert (x730 x3078))
(assert (= (x2203 (x1495 x1140 x296 x2634 x2211 x2023 x2162)) x2634))
(assert (= (x1107 (x872 x1258 x2744 x2472 x1167 x1827)) x1258))
(assert (x730 x2245))
(assert (= x1459 (and x2528 x515)))
(assert (x730 x1659))
(assert (=> (>= 10000 x1424) (= (x3126 x1424) 0)))
(assert (x2705 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (= (x79 (x1495 x2520 x1730 x3032 x1572 x2589 x1647)) x2589))
(assert (x730 x1712))
(assert (x730 x1668))
(assert (=> (<= x2141 10000) (= (x3126 x2141) 0)))
(assert (= (and x3112 (not x1948)) x577))
(assert (= x836 (and x509 (not x445))))
(assert (not (x2705 (x2040 x2010 x1777 x1062))))
(assert (x730 x2874))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x340 x1816 x582 x170 x2830 x1300 x481)))
(assert (=> (>= 10000 x751) (= (x3126 x751) 0)))
(assert (< (x1495 x41 x2636 x2065 x2915 x2365 x511) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2414))
(assert (=> (>= 10000 x2223) (= (x3126 x2223) 0)))
(assert (not (x2705 (x872 x41 x207 x759 x1484 x2221))))
(assert (x730 x3096))
(assert (= x1314 (x2316 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770))))
(assert (= x2736 (x1323 (x3066 x1627 x286 x1607 x2736))))
(assert (x730 x357))
(assert (x730 x2685))
(assert (=> (>= 10000 x41) (= (x3126 x41) 0)))
(assert (= x2730 (=> (and (= x72 (not (> x2075 1))) (= (x2664 x2434) x2075)) (and x72 x1587))))
(assert (= (x3066 x41 x1817 x354 x714) (x3126 (x3066 x41 x1817 x354 x714))))
(assert (=> (<= x2644 10000) (= (x3126 x2644) 0)))
(assert (x730 x339))
(assert (= x2348 (x2316 (x2476 x41 x2348))))
(assert (x730 x2105))
(assert (x730 x1939))
(assert (=> (>= 10000 x811) (= (x3126 x811) 0)))
(assert (x1174 x1400))
(assert (x730 x2413))
(assert (x730 x323))
(assert (= x1401 (x1107 (x3066 x1401 x2276 x1377 x2061))))
(assert (x730 x725))
(assert (x730 x175))
(assert (> (x1495 x914 x1297 x1967 x1427 x1724 x2682) 10000))
(assert (x730 x2064))
(assert (= (and x651 x852) x749))
(assert (> (x2476 x2660 x1624) 10000))
(assert (x730 x1461))
(assert (x730 x1622))
(assert (> (x2476 x2520 x1301) 10000))
(assert (x730 x2833))
(assert (= (x3126 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078)) (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078)))
(assert (x730 x1656))
(assert (x730 x437))
(assert (=> (>= 10000 x1208) (= 0 (x3126 x1208))))
(assert (x1006 x1164))
(assert (x730 x1602))
(assert (x730 x2391))
(assert (x730 x17))
(assert (=> (>= 10000 x1864) (= (x3126 x1864) 0)))
(assert (= x1349 (x2316 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337))))
(assert (x730 x622))
(assert (= x1198 (and x1082 (not x980))))
(assert (= (x1107 (x2040 x914 x499 x291)) x914))
(assert (x730 x374))
(assert (x730 x992))
(assert (= x82 (and x575 x752)))
(assert (x730 x2445))
(assert (x730 x1406))
(assert (=> (>= 10000 x3078) (= (x3126 x3078) 0)))
(assert (> (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509) 10000))
(assert (= (x2258 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)) x281))
(assert (x730 x1880))
(assert (> (x2476 x1627 x640) 10000))
(assert (x730 x427))
(assert (=> (>= 10000 x2174) (= 0 (x3126 x2174))))
(assert (x730 x2065))
(assert (x730 x3108))
(assert (x730 x1732))
(assert (x730 x2513))
(assert (x730 x1381))
(assert (x730 x769))
(assert (x730 x2916))
(assert (= (x2683 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171)) x2921))
(assert (=> (>= 10000 x2744) (= 0 (x3126 x2744))))
(assert (= (x2203 (x1495 x1353 x488 x2082 x1350 x3006 x1453)) x2082))
(assert (= x1878 (x2203 (x2040 x1140 x702 x1878))))
(assert (x730 x701))
(assert (= x2010 (x1107 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171))))
(assert (= (and x1387 (not x1700)) x2289))
(assert (= x2446 (x1107 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048))))
(assert (= x1140 (x1107 (x2040 x1140 x702 x1878))))
(assert (x730 x1701))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639832) 0))
(assert (= (x2316 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506)) x568))
(assert (x730 x2124))
(assert (x730 x2773))
(assert (x730 x2621))
(assert (x730 x2763))
(assert (x730 x2814))
(assert (= (x1323 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237)) x266))
(assert (=> (<= x365 10000) (= 0 (x3126 x365))))
(assert (x730 x1022))
(assert (x400 x2545))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x730 x2620))
(assert (x730 x2574))
(assert (x2705 57896044618658097711785492504343953926634992332820282019728792003956564820517))
(assert (=> (<= x200 10000) (= (x3126 x200) 0)))
(assert (=> (<= x2006 10000) (= (x3126 x2006) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3066 x1140 x2757 x2156 x1949)))
(assert (= x711 (x79 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715))))
(assert (x730 x867))
(assert (= (x2316 (x2476 x1401 x468)) x468))
(assert (x730 x1932))
(assert (x1174 x2272))
(assert (x730 x1984))
(assert (=> (>= 10000 x2095) (= 0 (x3126 x2095))))
(assert (= x1297 (x2316 (x1495 x914 x1297 x1967 x1427 x1724 x2682))))
(assert (x730 x369))
(assert (=> (<= x2342 10000) (= (x3126 x2342) 0)))
(assert (x634 x1468 1461501637330902918203684832716283019655932542976))
(assert (= (x79 (x1495 x41 x2636 x2065 x2915 x2365 x511)) x2365))
(assert (x2705 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (not (x2705 (x3066 x1258 x885 x92 x1215))))
(assert (x730 x321))
(assert (x730 x969))
(assert (= x23 (x2203 (x2040 x2660 x290 x23))))
(assert (x730 x1224))
(assert (= (=> (and (= (x3074 x2087) x2446) (= (>= 224 x2446) x2675) (<= x2087 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x633 x959) x529) (= x959 (x3095 (+ x3154 32))) (= x2401 (x2951 (- x2207 32))) (= x2000 (x633 x3154)) (>= x2461 1) (= (x3095 (+ 32 x3051)) x734) (not (= x2087 115792089237316195423570985008687907853269984665640564039457584007913129639712)) (> x1113 x2087) (= x1104 (x633 x11)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2087) (= (x3095 (+ 32 x734)) x3154) (= x2632 (x3095 (+ x1104 32))) (= x2979 (x3095 (+ x2417 32))) (= x3051 (x3095 (+ 32 x1011))) (not (= x2087 115792089237316195423570985008687907853269984665640564039457584007913129639712)) (= (x3095 (+ x572 192)) x1113) (= x2417 (x3095 (+ 32 x2672))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639712 x2087)) (<= x619 1) (<= x162 2) (= x2629 (x3095 (+ 32 x1952))) (= (x633 x1011) x162) (= x619 (x633 x3051)) (= (x3095 (+ x2087 32)) x572) (= x253 (x545 1461501637330902918203684832716283019655932542975 x1513)) (= x1011 (x633 x2632)) (= (x3095 (+ x2979 32)) x1952) (= (x633 x1104) x2461) (= x769 (x3095 (+ 32 x2087))) (= (x633 x734) x1513) (= (x2951 (- x1113 x2087)) x2207) (= (x3095 (+ 32 x572)) x2672) (<= x2087 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (and (= (x3074 x1719) x1087) (= (x3095 (+ 32 x769)) x966) (= x2581 (x3074 x2866)) (= (x595 0) x2026) (= (x3074 x1806) x1048) (= (x3095 (+ 64 x769)) x2055) (= x2866 (x3095 (+ 64 x769))) (= (x809 x39) x1212) (= (x3074 x2333) x2644) (= (x3074 x769) x391) (= x3156 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)) (= (x3074 x2185) x1801) (= x1711 (x3095 (+ 128 x769))) (= x2217 (x3074 x769)) (= x1040 (x3095 (+ x769 64))) (= x691 (not (> x1212 1))) (= (x3095 (+ x769 160)) x2753) (= x2767 (x3095 (+ x1307 32))) (= (x3095 (+ 32 x769)) x2148) (= (x2476 x2446 x391) x873) (= x39 (x809 x11)) (= x1970 (x3074 x2148)) (= x2179 (x3095 (+ x769 128))) (= (x3095 (+ 192 x769)) x2269) (= (x3095 (+ 64 x769)) x939) (= (x3095 (+ 160 x769)) x1806) (= (x3095 (+ 32 x769)) x1719) (= (x3074 x1307) x1176) (= (x3074 x966) x2929) (= (x3074 x2753) x480) (= x358 (x3074 x1273)) (= x477 (x3095 (+ x769 32))) (= x3098 (x3074 x1290)) (= x2085 (x3074 x1874)) (= x2649 (x3095 (+ x769 96))) (= x3052 (x3095 (+ 96 x769))) (= x1874 (x3095 (+ x769 128))) (= x2185 (x3095 (+ x769 32))) (>= x1176 1) (= (x3066 x2446 x1523 x1087 x1061) x743) (= (x3074 x1711) x281) (= (x3074 x477) x1088) (= (ite (= 0 x2446) x2026 (ite (<= x2446 32) x873 (ite (>= 64 x2446) x840 (ite (>= 96 x2446) x743 (ite (>= 128 x2446) x3062 (ite (<= x2446 160) x1302 (ite (<= x2446 192) x1472 (ite (>= 224 x2446) x3156 x2974)))))))) x210) (= x783 (x3074 x769)) (= (x3095 (+ x769 32)) x1273) (= x1290 (x3095 (+ 96 x769))) (= x1994 (x3074 x2269)) (= (x3074 x769) x1084) (= (x2040 x2446 x1276 x1801) x840) (= x2471 (x3095 (+ 64 x769))) (= x637 (x3074 x769)) (= x2296 (x3074 x939)) (= (x3095 (+ 96 x769)) x2333) (= x1850 (x3074 x2055)) (= x3062 (x872 x2446 x637 x1088 x2581 x70)) (= (x1495 x2446 x1084 x2929 x508 x2644 x2085) x1302) (= (x3074 x769) x1523) (= x2095 (x3074 x2179)) (= x2137 (x3074 x3052)) (= x1472 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048)) (= x1061 (x3074 x2471)) (= x508 (x3074 x1040)) (= (x3074 x769) x1276) (= (x3074 x2649) x70)) (and (=> (= x1030 x1113) x1704) x691)) x2675)) x1476))
(assert (= false x924))
(assert (x730 x2816))
(assert (=> (>= 10000 x610) (= (x3126 x610) 0)))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (x730 x1625))
(assert (x730 x2753))
(assert (x730 x2971))
(assert (x730 x2082))
(assert (x730 x923))
(assert (x2705 88383320980755791914082775550597828907713979028428263264130000526486271950848))
(assert (x730 x2049))
(assert (x730 x217))
(assert (x730 x1956))
(assert (not (x2705 (x872 x2446 x637 x1088 x2581 x70))))
(assert (x730 x1300))
(assert (x730 x1532))
(assert (x730 x2923))
(assert (x730 x1235))
(assert (= (and x452 (not x2052)) x405))
(assert (x730 x55))
(assert (=> (>= 10000 x589) (= 0 (x3126 x589))))
(assert (x730 x1249))
(assert (x730 x2182))
(assert (x730 x2346))
(assert (> (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770) 10000))
(assert (x730 x1608))
(assert (=> (<= x1485 10000) (= (x3126 x1485) 0)))
(assert (x730 x676))
(assert (x730 x1110))
(assert (= (=> (and (and (= (x1941 x1275) x571) (= (* 32 x2999) x972) (= x2110 (x2336 256)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2422) (= (x3095 (+ x2585 32)) x2789) (< x1307 x294) (= x153 (x3095 (+ x2126 32))) (= (x3095 (+ x1068 64)) x1829) (= (x3095 (+ 32 x2582)) x2126) (= x1275 (x3095 (+ 32 x159))) (>= x294 2) (<= x2999 18446744073709551615) (= x159 (x1941 192)) (or (>= x2422 115792089237316195423570985008687907853269984665640564039457584007913129639649) (<= x2422 115792089237316195423570985008687907853269984665640564039457584007913129639646)) (= x184 (x3095 (+ x2789 32))) (= x71 (x545 1461501637330902918203684832716283019655932542975 x2139)) (= (x3095 (+ x571 x2792)) x2747) (= (x1697 x3086) x2139) (= x294 (x3095 (+ (mod (+ x972 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1307))) (= x2310 (x545 1461501637330902918203684832716283019655932542975 x2110)) (> x1307 x2422) (= (x448 x1771) x2033) (= x11 (x3095 (+ x2422 32))) (= x2999 (x1007 x1548)) (= x908 (x1171 x1705)) (= x208 (x984 x1829)) (= (x1697 160) x3086) (= x1281 (x3019 x1131)) (= x2582 (x3095 (+ 32 x11))) (= (x1007 x11) x1548) (= x1307 (x3095 (+ x2422 288))) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x571 x2792))) (<= x1281 2) (= x2916 (x545 1461501637330902918203684832716283019655932542975 x908)) (= x1131 (x3019 192)) (or (>= x2422 115792089237316195423570985008687907853269984665640564039457584007913129639649) (<= x2422 115792089237316195423570985008687907853269984665640564039457584007913129639646)) (= (x3095 (+ 32 x1101)) x2585) (= (x984 192) x1068) (<= x2422 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2422) (= x1101 (x3095 (+ 32 x153))) (= x247 (= x2999 0)) (or (>= x2422 115792089237316195423570985008687907853269984665640564039457584007913129639649) (<= x2422 115792089237316195423570985008687907853269984665640564039457584007913129639646))) (or (and (not x247) (and (= x1905 (x3095 (+ 32 x1307))) (= (* x2999 32) x2669))) x247)) x2990) x967))
(assert (x730 x559))
(assert (x730 x2249))
(assert (= (x1323 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023)) x493))
(assert (x730 x2806))
(assert (=> (>= 10000 x999) (= (x3126 x999) 0)))
(assert (x730 x2496))
(assert (x730 x1393))
(assert (x1006 x418))
(assert (= x811 (x1323 (x3066 x86 x768 x2142 x811))))
(assert (=> (<= x586 10000) (= (x3126 x586) 0)))
(assert (x1174 x1992))
(assert (x730 x919))
(assert (x730 x1189))
(assert (= x1140 (x1107 (x2476 x1140 x1073))))
(assert (x730 x2107))
(assert (= (x2316 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)) x1428))
(assert (x730 x2979))
(assert (x730 x2579))
(assert (=> (<= x48 10000) (= (x3126 x48) 0)))
(assert (=> (<= x312 10000) (= 0 (x3126 x312))))
(assert (=> (>= 10000 x3117) (= (x3126 x3117) 0)))
(assert (= (=> (and (= (x3095 (+ x1836 96)) x1260) (= (not (> x1729 128)) x1230) (= x1822 (x3095 (+ 96 x1942))) (= (x2389 x1260) x2885)) (and x1230 x887)) x343))
(assert (=> (<= x107 10000) (= 0 (x3126 x107))))
(assert (x730 x316))
(assert (x730 x581))
(assert (x730 x2217))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x730 x1832))
(assert (=> (>= 10000 x1354) (= 0 (x3126 x1354))))
(assert (= x904 (=> (and (= x1035 (x2905 164)) (= (x2951 (- x1995 x3085)) x1837) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1356) (= (x3095 (+ x1356 32)) x2184) (= x1752 (x3095 (+ x3049 32))) (= x2955 (x2905 x3049)) (<= x2955 18446744073709551615) (= x3049 (x3095 (+ 36 x1035))) (= x3085 (* 160 x2955)) (or (<= x1035 2065879269376) (>= x1035 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1356) (= (* x2955 32) x2121) (>= x1549 1) (not (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1752) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1837)) (and (< x1837 x1752) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1752) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1837))))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1356) (or (and (< x1035 x2029) (= (<= x1035 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2029))) (and (<= x2029 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1035 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1549 x1356) (= x389 (+ x2993 32)) (= (x3095 (+ x1356 (mod (+ x2121 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1549) (= x1615 (> x2955 0))) (and (=> (and (not x1615) (= x2103 x1549)) x2943) (=> x1615 x352)))))
(assert (=> (>= 10000 x866) (= 0 (x3126 x866))))
(assert (= x1528 (x79 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055))))
(assert (x730 x2246))
(assert (= (x1107 (x1495 x2520 x1730 x3032 x1572 x2589 x1647)) x2520))
(assert (=> (<= x637 10000) (= 0 (x3126 x637))))
(assert (x730 x1426))
(assert (x730 x401))
(assert (= x1152 (x2316 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509))))
(assert (x730 x1567))
(assert (not (x2705 (x2040 x86 x2600 x395))))
(assert (=> (<= x56 10000) (= 0 (x3126 x56))))
(assert (x730 x2921))
(assert (= x644 (=> (and (= (not (< 128 x461)) x1713) (= x2870 (x996 x1543)) (= (x3095 (+ 96 x1764)) x1543) (= (x3095 (+ 96 x2027)) x547)) (and x1417 x1713))))
(assert (x730 x839))
(assert (= (or x148 x1385 x1630 x1959 x356) x434))
(assert (x1174 x240))
(assert (x730 x1216))
(assert (x730 x3154))
(assert (> (x1495 x1955 x785 x1671 x1652 x833 x347) 10000))
(assert (x730 x2188))
(assert (= x2190 (or x1160 x2043)))
(assert (x730 x1289))
(assert (= x2337 (x2997 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337))))
(assert (= (x3066 x2660 x1931 x857 x111) (x3126 (x3066 x2660 x1931 x857 x111))))
(assert (x730 x1242))
(assert (= (=> (and (= x2456 (x820 x1728)) (= (x3095 (+ 32 x892)) x2599) (= x2305 (x3095 (+ x1728 32))) (= x2625 (not (> x1915 4)))) (and x2625 (=> (and (= 4 x2985) (= x2305 x947) (= x2534 x2599)) x1699))) x1570))
(assert (x730 x2012))
(assert (x730 x2031))
(assert (= (x79 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492)) x2397))
(assert (=> (>= 10000 x2946) (= (x3126 x2946) 0)))
(assert (x730 x107))
(assert (= (and (not x597) x2919) x255))
(assert (< 10000 (x872 x86 x2223 x1997 x2881 x467)))
(assert (x730 x671))
(assert (x730 x959))
(assert (=> (<= x2915 10000) (= (x3126 x2915) 0)))
(assert (x1613 32 x2999))
(assert (= x262 (or x2069 x3109)))
(assert (x730 x24))
(assert (x730 x1928))
(assert (= (x2203 (x1495 x914 x1297 x1967 x1427 x1724 x2682)) x1967))
(assert (x730 x1069))
(assert (= x410 (and x2633 x2328)))
(assert (x1174 x1164))
(assert (x730 x3026))
(assert (x730 x1148))
(assert (x730 x1215))
(assert (= (x1323 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453)) x2109))
(assert (= (and x1714 (not x1937)) x1863))
(assert (x730 x2818))
(assert (x730 x781))
(assert (=> (>= 10000 x1237) (= (x3126 x1237) 0)))
(assert (x730 x2112))
(assert (=> (<= x1339 10000) (= (x3126 x1339) 0)))
(assert (=> (>= 10000 x70) (= (x3126 x70) 0)))
(assert (x730 x1837))
(assert (x730 x1136))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x872 x340 x2252 x1791 x570 x1363)))
(assert (= (x1107 (x2040 x1955 x2784 x639)) x1955))
(assert (=> (>= 10000 x1787) (= 0 (x3126 x1787))))
(assert (= (x79 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470)) x1247))
(assert (= x2554 (x2683 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608))))
(assert (= (x2203 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770)) x1410))
(assert (= x3050 (and x1716 (not x1050))))
(assert (x730 x376))
(assert (= (x3126 57896044618658097711785492504343953926634992332820282019728792003956564820517) 0))
(assert (x730 x1676))
(assert (=> (>= 10000 x370) (= (x3126 x370) 0)))
(assert (x730 x11))
(assert (not (x2705 (x2040 x2520 x3117 x311))))
(assert (x730 x763))
(assert (= (or x423 x2425) x66))
(assert (x1613 32 x2102))
(assert (=> (<= x266 10000) (= (x3126 x266) 0)))
(assert (x1620 x249))
(assert (x204 x1123))
(assert (x730 x2023))
(assert (x730 x1281))
(assert (x2800 x594))
(assert (= (x3126 (x1495 x1258 x1080 x692 x2178 x732 x2902)) (x1495 x1258 x1080 x692 x2178 x732 x2902)))
(assert (= x283 (x79 (x872 x2010 x2188 x2174 x1787 x283))))
(assert (= (x1107 (x2476 x2446 x391)) x2446))
(assert (= x2327 (=> (and (= x1901 (ite (= 0 x2808) x2808 1)) (= (x1950 x778) x585) (<= 1 x1901) (= (not (> x585 1)) x2941)) (and (=> (= x180 x706) x1144) x2941))))
(assert (not (x2705 (x3066 x2660 x1931 x857 x111))))
(assert (=> (>= 10000 x2787) (= (x3126 x2787) 0)))
(assert (x730 x1430))
(assert (not (x2705 (x2040 x1401 x1347 x593))))
(assert (= (=> (and (<= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2951 (- x534 32)) x282) (= x719 (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1234)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1030) (= x914 (x2168 x1030)) (<= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x2032) (= x2032 (x3095 (+ x719 x1685))) (= x301 (<= x914 224)) (= (x3095 (+ x2467 31)) x1234) (= (x3095 (+ x1685 x2467)) x775) (= x534 (x2951 (- x2032 x1030))) (= x2003 (x3095 (+ 32 x1030))) (< x1030 x2032)) (and (=> (and (<= 1 x3043) (= (x3095 (+ 32 x2003)) x2361) (= x470 (x2168 x1745)) (= x1427 (x2168 x3145)) (= x2690 (x2168 x576)) (= x2989 (x2130 x2582)) (= x1564 (x2168 x2892)) (= (x2168 x992) x2141) (= x2773 (x3095 (+ 32 x2003))) (= x312 (x2168 x2525)) (= x56 (x2168 x558)) (= (x3095 (+ 64 x2003)) x1325) (= x2493 (ite (= x914 0) x2953 (ite (<= x914 32) x2169 (ite (>= 64 x914) x408 (ite (>= 96 x914) x1512 (ite (<= x914 128) x2898 (ite (<= x914 160) x2607 (ite (>= 192 x914) x35 (ite (<= x914 224) x1553 x1304))))))))) (= x2368 (x2168 x1325)) (= x2525 (x3095 (+ x2003 160))) (= (x3095 (+ 32 x2003)) x1751) (= x3034 (x3095 (+ x2003 96))) (= x3043 (x2168 x294)) (= x1724 (x2168 x1750)) (= (x872 x914 x2376 x374 x2191 x546) x2898) (= x2249 (x3095 (+ x2003 64))) (= (x2168 x516) x531) (= (x2168 x73) x3129) (= x3152 (x3095 (+ 32 x2003))) (= x1512 (x3066 x914 x1354 x34 x2368)) (= (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690) x35) (= (x2168 x2101) x1967) (= x291 (x2168 x2361)) (= (x595 0) x2953) (= x3145 (x3095 (+ 64 x2003))) (= (x2168 x2249) x2191) (= x576 (x3095 (+ 160 x2003))) (= (x3095 (+ x2003 96)) x2158) (= x1465 (x2130 x2989)) (= x408 (x2040 x914 x499 x291)) (= x365 (x2168 x2003)) (= (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470) x1553) (= x1247 (x2168 x3034)) (= x516 (x3095 (+ x2003 64))) (= (x1495 x914 x1297 x1967 x1427 x1724 x2682) x2607) (= (x2168 x2003) x499) (= (x2168 x2862) x2682) (= x558 (x3095 (+ 128 x2003))) (= (x2168 x3152) x374) (= x1487 (x2168 x2773)) (= (x3095 (+ 128 x2003)) x992) (= (x2168 x2003) x1354) (= (x3095 (+ x2003 96)) x1750) (= x2862 (x3095 (+ 128 x2003))) (= x1547 (x3095 (+ x294 32))) (= x73 (x3095 (+ 32 x2003))) (= (x2168 x2003) x2340) (= (not (< 1 x1465)) x177) (= x1056 (x3095 (+ x2003 96))) (= x1297 (x2168 x2003)) (= x2376 (x2168 x2003)) (= x2101 (x3095 (+ x2003 32))) (= (x3095 (+ x2003 64)) x2892) (= (x3095 (+ x2003 192)) x1745) (= x34 (x2168 x1751)) (= (x2168 x2158) x1925) (= (x2476 x914 x1396) x2169) (= x546 (x2168 x1056)) (= x1396 (x2168 x2003))) (and x177 (=> (and (= x2032 x770) (= x2582 x2097)) x15))) x301)) x1936))
(assert (x730 x2000))
(assert (x1613 32 x2857))
(assert (= x2225 (and (not x123) x9)))
(assert (x730 x572))
(assert (x1174 x1326))
(assert (x2705 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (x730 x2597))
(assert (x730 x1725))
(assert (x730 x800))
(assert (x730 x111))
(assert (x2705 18446744073709551614))
(assert (x730 x3046))
(assert (x2800 x1224))
(assert (x730 x2972))
(assert (x1620 x1513))
(assert (x1174 1461501637330902918203684832716283019655932542975))
(assert (x730 x2902))
(assert (= (x2203 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382)) x2530))
(assert (= x2860 (x1323 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509))))
(assert (=> (>= 10000 x508) (= 0 (x3126 x508))))
(assert (= (x2316 (x3066 x1955 x1098 x1544 x216)) x1098))
(assert (x730 x2310))
(assert (x730 x2732))
(assert (=> (>= 10000 x358) (= (x3126 x358) 0)))
(assert (= x2881 (x1323 (x872 x86 x2223 x1997 x2881 x467))))
(assert (= (=> (and (= x822 (x386 x1238)) (= x1238 (x3095 (+ x1267 64))) (= (x386 x822) x882) (= x1267 (x386 192)) (= (< 0 x882) x2973)) (and (=> (and (= x1629 x1109) (not x2973)) x616) (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1109)) (= (x386 192) x2739) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1109) (= (x3095 (+ x2739 64)) x907) (= x828 (x3095 (+ 32 x1412))) (not (= x1109 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x778 (x386 x907)) (= (x3095 (+ x1109 32)) x1412) (= x2079 (x386 160)) (= x2872 (x3095 (+ 32 x828))) (= (x886 x778) x2078) (not (= x1109 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (<= x1109 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x647 (x386 x2993)) (= (x3095 (+ 128 x1109)) x3139) (<= x1109 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1796 (x386 x2079)) (= (< 0 x2078) x2482) (> x3139 x1109)) x2973) (and (=> (and (and (and (= x1886 (x886 x521)) (<= 1 x1321) (= (x886 x1886) x1326) (= (x886 x778) x1321) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2864) (= x962 (x3095 (+ 4 x3139))) (<= 32 x2864) (= x521 (x3095 (+ x778 32))) (= (x545 1461501637330902918203684832716283019655932542975 x1326) x2204) (= (< 0 x2820) x2371)) (or (and (and (= 1 x2012) (<= x2864 4294967295) (>= x2864 32)) x2371) (and (= x2012 x2820) (not x2371)))) x2482) x2143) (=> (and (= x3139 x180) (not x2482)) x1144))))) x2062))
(assert (= (=> (and (not (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1846) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1603)) (and (< x1603 x1846) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1846) (<= x1603 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1846 (x3095 (+ x2566 32))) (= x680 (x2905 196)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x680) (>= 2065879269376 x680)) (>= 18446744073709551615 x1669) (or (and (> x680 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2029 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x680 x2029) (= (<= x2029 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x680)))) (<= x2103 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3095 (+ (mod (+ 32 x323) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2103)) x2641) (= (x2905 x2566) x1669) (= (> x1669 0) x2198) (<= x2103 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x2103 x2641) (= (* 32 x1669) x323) (= x2566 (x3095 (+ 36 x680))) (= x289 (+ x389 32)) (>= x2641 1) (<= x2103 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3095 (+ x2103 32)) x957) (= (* 160 x1669) x2809) (= (x2951 (- x1995 x2809)) x1603)) (and (=> x2198 x1575) (=> (and (= x1980 x2641) (not x2198)) x2761))) x2943))
(assert (x730 x458))
(assert (< 10000 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055)))
(assert (< 10000 (x872 x1258 x2744 x2472 x1167 x1827)))
(assert (=> (<= x2881 10000) (= (x3126 x2881) 0)))
(assert (=> (>= 10000 x2873) (= 0 (x3126 x2873))))
(assert (=> (>= 10000 x1087) (= (x3126 x1087) 0)))
(assert (x730 x2432))
(assert (= x524 (x2316 (x1495 x2660 x524 x2407 x2192 x31 x1339))))
(assert (x730 x3023))
(assert (=> (>= 10000 x1098) (= 0 (x3126 x1098))))
(assert (x730 x1101))
(assert (= (x1107 (x872 x340 x2252 x1791 x570 x1363)) x340))
(assert (x730 x702))
(assert (= x2520 (x1107 (x3066 x2520 x1785 x911 x2970))))
(assert (not (x2705 (x1495 x1258 x1080 x692 x2178 x732 x2902))))
(assert (=> (<= x1291 10000) (= (x3126 x1291) 0)))
(assert (x730 x2001))
(assert (=> (<= x216 10000) (= 0 (x3126 x216))))
(assert (x730 x3006))
(assert (x730 x1068))
(assert (= (x1495 x2446 x1084 x2929 x508 x2644 x2085) (x3126 (x1495 x2446 x1084 x2929 x508 x2644 x2085))))
(assert (x730 x1658))
(assert (x730 x2518))
(assert (= (x1107 (x2476 x2010 x2879)) x2010))
(assert (x400 x2405))
(assert (= (x1323 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)) x2346))
(assert (= (x1107 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492)) x86))
(assert (x730 x1554))
(assert (= (x3126 2065879269284) 0))
(assert (x730 x1099))
(assert (= x865 (x2316 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382))))
(assert (x1620 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x921) (= 0 (x3126 x921))))
(assert (x400 x2850))
(assert (x730 x613))
(assert (x1620 x2405))
(assert (= (x1107 (x872 x1627 x2483 x109 x2307 x1490)) x1627))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (< (x3066 x2520 x1785 x911 x2970) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1371 (x2203 (x872 x2520 x2732 x1371 x1843 x1016))))
(assert (= (and x705 (not x2580)) x2751))
(assert (x730 x1989))
(assert (x730 x3028))
(assert (= (or x2511 x1621) x2868))
(assert (=> (>= 10000 x3080) (= (x3126 x3080) 0)))
(assert (< (x3066 x2010 x1989 x40 x1776) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1107 (x2476 x1353 x1864)) x1353))
(assert (x730 x898))
(assert (x730 x2010))
(assert (x730 x2738))
(assert (=> (>= 10000 x2380) (= (x3126 x2380) 0)))
(assert (= (x2683 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869)) x669))
(assert (=> (<= x881 10000) (= (x3126 x881) 0)))
(assert (= x1864 (x2316 (x2476 x1353 x1864))))
(assert (x730 x2390))
(assert (=> (>= 10000 x621) (= 0 (x3126 x621))))
(assert (x730 x893))
(assert (=> (<= x1509 10000) (= 0 (x3126 x1509))))
(assert (< 10000 (x2040 x1140 x702 x1878)))
(assert (x730 x474))
(assert (x634 x908 1461501637330902918203684832716283019655932542976))
(assert (x1174 x2718))
(assert (x730 x2524))
(assert (=> (<= x1770 10000) (= (x3126 x1770) 0)))
(assert (x730 x2170))
(assert (=> (>= 10000 x2156) (= (x3126 x2156) 0)))
(assert (= x1699 (=> (and (= x379 (x3095 (+ x2025 32))) (= x2534 x1678) (= (x3161 x2025) x1258) (= (x2951 (- x1431 32)) x1708) (>= x1678 1) (= (* 32 x1915) x709) (= x2825 (>= 224 x1258)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2025) (> x2534 x2025) (>= x2534 1) (<= x2025 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2080 (x3095 (+ x61 x709))) (= (* 32 x1915) x1060) (= x1915 x2985) (= x947 x2080) (<= x2025 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3095 (+ x2893 x1060)) x1678) (<= x1915 4) (= (x2951 (- x2534 x2025)) x1431)) (and x2825 (=> (and (= (x3095 (+ x379 32)) x69) (= x1701 (x3161 x67)) (= (x3095 (+ 64 x379)) x1334) (= (x3095 (+ 160 x379)) x2111) (= x1080 (x3161 x379)) (= (x1962 x2534) x86) (= (x3095 (+ x379 128)) x603) (= x2535 (x3095 (+ x379 96))) (= (x3161 x1478) x1055) (= (ite (= 0 x1258) x43 (ite (>= 32 x1258) x478 (ite (>= 64 x1258) x602 (ite (>= 96 x1258) x1214 (ite (>= 128 x1258) x2255 (ite (<= x1258 160) x2134 (ite (<= x1258 192) x968 (ite (<= x1258 224) x1655 x2489)))))))) x1761) (= (x3161 x603) x55) (= (x2476 x1258 x2235) x478) (= (x3095 (+ 32 x2534)) x1755) (= x1682 (x3095 (+ 32 x1755))) (= (x3161 x279) x1215) (= x2673 (x3095 (+ x379 32))) (= (x3161 x69) x1461) (= (x3095 (+ x379 64)) x270) (= (x3161 x1516) x692) (= (x3161 x1334) x2311) (= (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055) x1655) (= (x3095 (+ 64 x379)) x67) (= x867 (x3161 x2111)) (= x786 (x3095 (+ 64 x379))) (= x2472 (x3161 x1120)) (= (x3095 (+ 32 x379)) x2022) (= x2380 (x3161 x379)) (= x2255 (x872 x1258 x2744 x2472 x1167 x1827)) (= x2178 (x3161 x270)) (= x279 (x3095 (+ x379 64))) (= (x3095 (+ 96 x1755)) x1568) (= x885 (x3161 x379)) (= x2695 (x3095 (+ x379 96))) (= (x3161 x379) x2575) (= x1478 (x3095 (+ 192 x379))) (= x14 (<= x86 224)) (= (x2951 (- x2084 32)) x2982) (= (x3161 x2695) x2009) (= (x3095 (+ 128 x379)) x1551) (= x968 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867)) (< x2534 x1568) (= (x3161 x2673) x92) (= x1827 (x3161 x3079)) (= x602 (x2040 x1258 x2380 x812)) (= x1528 (x3161 x1094)) (= (x3161 x379) x2235) (= (x3161 x2022) x87) (= (x3161 x2949) x681) (= x1167 (x3161 x786)) (= (x3161 x379) x2744) (= x2001 (x3161 x379)) (= x2949 (x3095 (+ x379 160))) (= x732 (x3161 x2535)) (= x1120 (x3095 (+ x379 32))) (= x812 (x3161 x951)) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2534) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x2534)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x2534) (>= x2534 1))) (= (x3095 (+ x379 32)) x951) (= (x1495 x1258 x1080 x692 x2178 x732 x2902) x2134) (= (x3095 (+ 32 x379)) x1516) (= x2874 (x3161 x1551)) (= (x3095 (+ x379 96)) x1094) (= (x3095 (+ 32 x2534)) x222) (= x52 (x3095 (+ x379 128))) (= (x3095 (+ 32 x1682)) x1000) (= x43 (x595 0)) (= (x3095 (+ x379 96)) x3079) (= (x2951 (- x1568 x2534)) x2084) (= x1214 (x3066 x1258 x885 x92 x1215)) (= (x3161 x52) x2902)) (and x14 (=> (and (or (and x419 (and (<= x2232 4294967295) (= 1 x237) (>= x2232 32))) (and (not x419) (= x237 x2738))) (and (= x1733 (x1962 x1337)) (= (x1962 x1235) x621) (= x467 (x1962 x1085)) (= (x3095 (+ 96 x222)) x2604) (= (x3095 (+ 192 x222)) x1819) (= (x3095 (+ x222 64)) x929) (= x1982 (x1962 x2470)) (= x2908 (x1495 x86 x2248 x1945 x156 x566 x621)) (= (x595 0) x797) (= x610 (x1962 x402)) (= x1036 (x3095 (+ x222 64))) (= x2248 (x1962 x222)) (= (x1962 x222) x768) (= x1945 (x1962 x2424)) (= x1237 (x1962 x1819)) (= x266 (x1962 x953)) (= x1491 (x3095 (+ 160 x222))) (= x2223 (x1962 x222)) (>= 1461501637330902918203684832716283019655932542975 x2984) (= x953 (x3095 (+ x222 64))) (= x2397 (x1962 x1913)) (= (x1962 x491) x811) (= (x1962 x2838) x2202) (= (x1962 x803) x1997) (= x491 (x3095 (+ 64 x222))) (= (x3095 (+ 96 x222)) x1913) (= (x1962 x222) x2317) (= (x3066 x86 x768 x2142 x811) x1446) (= (x3095 (+ x222 128)) x1337) (= (x3095 (+ x222 128)) x3137) (= x2715 (x2476 x86 x2317)) (= (x3095 (+ x222 64)) x1351) (= (x1962 x2089) x395) (= x454 (x1962 x222)) (= x1235 (x3095 (+ x222 128))) (= x1470 (x3095 (+ x222 32))) (= x2651 (x1962 x222)) (= x139 (x872 x86 x2223 x1997 x2881 x467)) (= (x1962 x1036) x1255) (= x3124 (x545 1461501637330902918203684832716283019655932542975 x2202)) (= x569 x2858) (= x419 (< 0 x2738)) (= x2869 (x2040 x86 x2600 x395)) (= (x3095 (+ 32 x222)) x2089) (= (x1962 x929) x156) (= x1973 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237)) (= (x1962 x3137) x2578) (= x878 (x1962 x426)) (= x803 (x3095 (+ 32 x222))) (= (x1962 x222) x2600) (= (x3095 (+ x222 96)) x2470) (<= 32 x2232) (= x566 (x1962 x2604)) (= (x3095 (+ 32 x222)) x426) (= x2838 (x1962 160)) (= (x1962 x1272) x2594) (= (x3095 (+ x222 96)) x1085) (= (x3095 (+ x222 32)) x2424) (= x1492 (x1962 x1491)) (= x402 (x3095 (+ 160 x222))) (= x2881 (x1962 x1351)) (= (x3095 (+ x1568 4)) x2357) (<= x2232 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2691 (x1962 x1470)) (= x2175 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492)) (= (x1962 x2131) x2142) (= x2131 (x3095 (+ 32 x222))) (= x2858 (ite (= x86 0) x797 (ite (<= x86 32) x2715 (ite (>= 64 x86) x2869 (ite (<= x86 96) x1446 (ite (>= 128 x86) x139 (ite (>= 160 x86) x2908 (ite (<= x86 192) x2175 (ite (>= 224 x86) x1973 x2755))))))))))) x2692)))))))
(assert (x1174 x1178))
(assert (= (x3126 (x2040 x1353 x1143 x1194)) (x2040 x1353 x1143 x1194)))
(assert (x730 x41))
(assert (x730 x2053))
(assert (= (x1107 (x595 0)) 0))
(assert (x730 x2304))
(assert (x730 x431))
(assert (= (and (not x1960) x2659) x1369))
(assert (x730 x1103))
(assert (=> (<= x285 10000) (= (x3126 x285) 0)))
(assert (x730 x2461))
(assert (= (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509) (x3126 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509))))
(assert (x730 x243))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787)))
(assert (not (x2705 (x2476 x2520 x1301))))
(assert (= x2573 (and x3033 x1579)))
(assert (x730 x150))
(assert (x1620 x2133))
(assert (x730 x714))
(assert (x1620 x3123))
(assert (x1620 x2850))
(assert (= x1453 (x2258 (x1495 x1353 x488 x2082 x1350 x3006 x1453))))
(assert (x730 x1624))
(assert (= x1873 (and (not x2198) x2161)))
(assert (x730 x1751))
(assert (x730 x1310))
(assert (x1006 x617))
(assert (= (x3126 1461501637330902918203684832716283019655932542975) 0))
(assert (x730 x1993))
(assert (x730 x1290))
(assert (x730 x2860))
(assert (x730 x2673))
(assert (x730 x238))
(assert (= (or x1141 x1965) x1218))
(assert (x1620 x1400))
(assert (x730 x477))
(assert (x730 x544))
(assert (x730 x1026))
(assert (x730 x1466))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x730 x1315))
(assert (x730 x802))
(assert (x730 x1236))
(assert (= (x3126 (x2476 x1353 x1864)) (x2476 x1353 x1864)))
(assert (< 10000 (x1495 x2520 x1730 x3032 x1572 x2589 x1647)))
(assert (=> (>= 10000 x1347) (= (x3126 x1347) 0)))
(assert (= (and (not x2645) x2752) x1630))
(assert (= (x2358 x1258 x2575 x87 x2311 x2009 x55 x867) (x3126 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867))))
(assert (x730 x1510))
(assert (x730 x1149))
(assert (x1174 x2714))
(assert (x730 x1452))
(assert (= x81 (and x1689 x1134)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382)))
(assert (x730 x751))
(assert (= (or x936 x346 x1451 x3039 x2289) x2332))
(assert (x2705 2065879269284))
(assert (x730 x1271))
(assert (x730 x402))
(assert (=> (>= 10000 x1953) (= 0 (x3126 x1953))))
(assert (= (and x2624 (not x2722)) x1828))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039439137263839420088228) 0))
(assert (x730 x501))
(assert (= x1141 (or x805 x1012)))
(assert (x730 x2850))
(assert (= x1258 (x1107 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867))))
(assert (x400 x2626))
(assert (= x2161 (or x1910 x766)))
(assert (x730 x446))
(assert (not (x2705 (x3066 x1353 x1464 x701 x2889))))
(assert (= x1228 (or x2676 x1163)))
(assert (= (and x1043 (not x2482)) x2043))
(assert (x730 x1727))
(assert (x730 x1155))
(assert (not (x2705 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608))))
(assert (x730 x2802))
(assert (= x804 (and x1714 x1937)))
(assert (= x91 (and (not x419) x1336)))
(assert (x730 x2613))
(assert (=> (<= x1458 10000) (= (x3126 x1458) 0)))
(assert (x730 x1665))
(assert (=> (<= x1777 10000) (= (x3126 x1777) 0)))
(assert (= x1140 (x1107 (x1495 x1140 x296 x2634 x2211 x2023 x2162))))
(assert (= (x3126 18446744073709551615) 0))
(assert (x634 x1102 1461501637330902918203684832716283019655932542976))
(assert (x730 x2714))
(assert (= (=> (and (= (x2951 (- x1995 x1826)) x671) (= x1608 (x3095 (+ x2518 32))) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820517 x1826) (>= 2065879269316 x1826)) (= (x2905 x699) x2743) (or (>= 18446744073709551487 x2518) (>= x2518 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (= x2 (x3095 (+ 32 x699))) (= (x3095 (+ 32 x2)) x2926) (= x1183 (not (< 1 x3007))) (<= 128 x671) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x2518) (<= x2518 18446744073709551487)) (= x2186 (x2905 x2926)) (<= x671 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3153 5) (<= x2518 18446744073709551615) (not (> x2518 x1111)) (= x1111 (x3095 (+ 128 x2518))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2518)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2518) (= x773 (x2905 x2)) (<= x2518 18446744073709551614) (>= 18446744073709551615 x2518) (<= x2743 1461501637330902918203684832716283019655932542975) (= x923 (x3095 (+ 32 x1608))) (= (x2905 x1826) x3153) (> x1111 x2518) (= (x3095 (+ 32 x923)) x58) (= x699 (x3095 (+ x1826 32))) (>= 18446744073709551614 x2518)) (and x1183 (=> (= x1356 x1111) x904))) x1373))
(assert (x730 x1464))
(assert (= x1843 (x1323 (x872 x2520 x2732 x1371 x1843 x1016))))
(assert (x730 x1779))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (= x374 (x2203 (x872 x914 x2376 x374 x2191 x546))))
(assert (x730 x3155))
(assert (> (x2476 x41 x2348) 10000))
(assert (x730 x420))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (= (=> (and (<= x2459 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x2646) (<= x2646 18446746139588821027)) (= (x2905 x2616) x2440) (<= x1250 1461501637330902918203684832716283019655932542975) (<= x2157 18446744073709551615) (= (x2905 x657) x2157) (<= x1368 18446744073709551615) (>= 18446744073709551615 x1142) (= x1142 (x2905 x2646)) (= x2797 (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1666)) (<= x2440 2) (= (x3095 (+ 32 x675)) x1530) (= (* 32 x1142) x1013) (<= x1457 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2362 (x2314 128)) (<= x1368 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x1368 64) (= x432 (x3095 (+ x2912 36))) (<= 1 x2742) (or (and (= (<= x2029 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2912 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2029 x2912)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2912) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2029))) (= x2646 (x3095 (+ x2616 x2157))) (>= x1457 128) (= (< x1227 x1439) x1981) (or (>= x2616 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x2616)) (or (>= 2065879269376 x2912) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2912)) (= 160 x750) (= (x2951 (- x3069 x2616)) x1457) (not (> x1439 x3069)) (<= x2797 18446744073709551167) (or (>= x3069 57896044618658097711785492504343953926634992332820282019728792003956564820068) (<= x3069 18446746139588821059)) (= x1918 (x3095 (+ 31 x2646))) (= (x2905 x1222) x1362) (= 1 x2362) (not (or (and (<= x1222 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2700 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x2700 x1222) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1222) (<= x2700 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (or (>= 18446746139588821027 x675) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x675)) (>= x2797 1) (= (x3095 (+ x1222 x1368)) x3069) (= x2616 (x3095 (+ x241 x675))) (= x2700 (x2951 (- x1995 x1368))) (= (x2951 (- x3069 x675)) x2459) (= x2029 (- x1995 67)) (= (x2905 x432) x1368) (= x675 (x3095 (+ x1362 x1222))) (= x1666 (+ 63 x2956)) (= (x2905 228) x2912) (>= 18446744073709551615 x1362) (= (+ 448 x2797) x2315) (= (x3095 (+ 32 x2194)) x657) (= (x2905 x1530) x241) (= (x2905 x675) x1250) (= (x2905 x2194) x1919) (= x1222 (x3095 (+ x432 32))) (<= x241 18446744073709551615) (= x2194 (x3095 (+ x2616 32))) (= (* 32 x1142) x2956) (or (and (<= x3069 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1918 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1918 x3069) (= (<= x1918 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3069)))) (= (x3095 (+ x2646 32)) x1227) (<= 128 x2459) (= x1439 (x3095 (+ x1013 x1227)))) (and (=> (and (= x2315 x559) (not x1981)) x724) (=> x1981 x3045))) x1206))
(assert (not (x2705 (x2476 x1258 x2235))))
(assert (x730 x1940))
(assert (x634 x1234 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1008 x2335))
(assert (=> (<= x812 10000) (= 0 (x3126 x812))))
(assert (x730 x428))
(assert (x730 x1291))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639649)))
(assert (= x1074 (=> (and (= x3020 (x3095 (+ 32 x2064))) (= (x3095 (+ x2462 32)) x2972) (= (x1930 x2064) x850) (= (not (> x594 4)) x299)) (and x299 (=> (and (= x818 x2972) (= x3020 x1612) (= x2620 4)) x3073)))))
(assert (= (x2203 (x2040 64 x2006 1)) 1))
(assert (x730 x1177))
(assert (=> (>= 10000 x453) (= 0 (x3126 x453))))
(assert (x730 x2535))
(assert (= (and x1643 x2371) x406))
(assert (= x1888 (x2316 (x2040 x340 x1888 x1424))))
(assert (x730 x2279))
(assert (x730 x2349))
(assert (x1008 x764))
(assert (= (x79 (x1495 x1140 x296 x2634 x2211 x2023 x2162)) x2023))
(assert (= (x3126 (x3066 x2520 x1785 x911 x2970)) (x3066 x2520 x1785 x911 x2970)))
(assert (=> (>= 10000 x1276) (= (x3126 x1276) 0)))
(assert (x730 x290))
(assert (< (x3066 x86 x768 x2142 x811) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2313))
(assert (< 10000 (x3066 x1258 x885 x92 x1215)))
(assert (= x2331 (x2203 (x872 x1140 x314 x2331 x587 x670))))
(assert (x730 x2192))
(assert (x730 x116))
(assert (x730 x1260))
(assert (= x3033 (and x2193 x601)))
(assert (= x1525 (=> (and (= x161 (* 32 x2117)) (or (= x161 32) (= x161 0)) (= x643 x1966) (= x2117 x970) (>= 1 x2117) (= x643 (x3095 (+ x3009 x161))) (<= x740 2) (= x1977 x863)) x1744)))
(assert (x730 x2354))
(assert (x730 x2966))
(assert (= (and x2256 x3012) x1621))
(assert (=> (>= 10000 x2896) (= (x3126 x2896) 0)))
(assert (=> (<= x2307 10000) (= (x3126 x2307) 0)))
(assert (x730 x1334))
(assert (x730 x187))
(assert (=> (<= x2379 10000) (= (x3126 x2379) 0)))
(assert (= x1105 (and x1552 x117)))
(assert (x730 x3122))
(assert (x730 x3133))
(assert (x730 x2514))
(assert (x730 x2318))
(assert (= x109 (x2203 (x872 x1627 x2483 x109 x2307 x1490))))
(assert (=> (<= x544 10000) (= 0 (x3126 x544))))
(assert (x730 x2151))
(assert (= x1777 (x2316 (x2040 x2010 x1777 x1062))))
(assert (x1613 64 x2102))
(assert (= x2095 (x2258 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048))))
(assert (x730 x1073))
(assert (x730 x2489))
(assert (=> (>= 10000 x2171) (= (x3126 x2171) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x595 0)))
(assert (x730 x333))
(assert (= (x2683 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048)) x1048))
(assert (x730 x209))
(assert (x1620 x908))
(assert (x730 x657))
(assert (x730 x1580))
(assert (x730 x1920))
(assert (x2705 18446744073709551487))
(assert (x730 x280))
(assert (x730 x1146))
(assert (x730 x2880))
(assert (> (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509) 10000))
(assert (x730 x1901))
(assert (x730 x394))
(assert (not (x2705 (x2476 x2010 x2879))))
(assert (x730 x1222))
(assert (x730 x230))
(assert (=> (>= 10000 x2428) (= 0 (x3126 x2428))))
(assert (< (x2040 x1627 x2923 x280) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x789))
(assert (x730 x1033))
(assert (= (and (not x2228) x1031) x936))
(assert (< (x872 x2446 x637 x1088 x2581 x70) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x64))
(assert (not (x2705 (x1495 x1140 x296 x2634 x2211 x2023 x2162))))
(assert (= (x2316 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107)) x2183))
(assert (x730 x223))
(assert (x730 x2581))
(assert (x730 x3013))
(assert (= (x2316 (x872 x2520 x2732 x1371 x1843 x1016)) x2732))
(assert (x2705 2065879269376))
(assert (x730 x1428))
(assert (= (or x2395 x787 x128 x642 x2238) x327))
(assert (x730 x277))
(assert (x730 x2689))
(assert (x730 x855))
(assert (< 10000 (x1495 x2660 x524 x2407 x2192 x31 x1339)))
(assert (x730 x39))
(assert (x1620 x260))
(assert (x730 x1398))
(assert (x730 x53))
(assert (x730 x203))
(assert (= (x2316 (x872 x86 x2223 x1997 x2881 x467)) x2223))
(assert (=> (<= x372 10000) (= (x3126 x372) 0)))
(assert (= (x2997 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506)) x2506))
(assert (=> (<= x1304 10000) (= (x3126 x1304) 0)))
(assert (x730 x1721))
(assert (x730 x1386))
(assert (= x852 (and x2011 x1459)))
(assert (= x1955 (x1107 (x3066 x1955 x1098 x1544 x216))))
(assert (x730 x540))
(assert (= x340 (x1107 (x2358 x340 x1816 x582 x170 x2830 x1300 x481))))
(assert (x730 x1407))
(assert (=> (>= 10000 x108) (= (x3126 x108) 0)))
(assert (x730 x1304))
(assert (= x1671 (x2203 (x1495 x1955 x785 x1671 x1652 x833 x347))))
(assert (x730 x337))
(assert (= x2765 (and x410 x2437)))
(assert (x1006 x997))
(assert (x730 x1639))
(assert (x730 x2830))
(assert (x730 x2737))
(assert (x730 x297))
(assert (x730 x513))
(assert (x730 x156))
(assert (x1174 x2595))
(assert (x730 x746))
(assert (x730 x1666))
(assert (x730 x1719))
(assert (x730 x1539))
(assert (x730 x311))
(assert (= x1353 (x1107 (x2040 x1353 x1143 x1194))))
(assert (x730 x1275))
(assert (x730 x1504))
(assert (x730 x216))
(assert (= (or x2746 x1105) x1674))
(assert (= (=> (and (= x2329 (not (< 1 x2208))) (= x2208 (x1855 x550))) (and x2329 x2062)) x2423))
(assert (=> (>= 10000 x2355) (= (x3126 x2355) 0)))
(assert (x730 x409))
(assert (> (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237) 10000))
(assert (x730 x739))
(assert (x730 x1664))
(assert (= (x3126 (x1495 x41 x2636 x2065 x2915 x2365 x511)) (x1495 x41 x2636 x2065 x2915 x2365 x511)))
(assert (x730 x2419))
(assert (= x1301 (x2316 (x2476 x2520 x1301))))
(assert (= x914 (x1107 (x3066 x914 x1354 x34 x2368))))
(assert (= (x1495 x1140 x296 x2634 x2211 x2023 x2162) (x3126 (x1495 x1140 x296 x2634 x2211 x2023 x2162))))
(assert (x730 x2142))
(assert (x730 x2377))
(assert (x730 x1500))
(assert (=> (>= 10000 x1843) (= 0 (x3126 x1843))))
(assert (x730 x1088))
(assert (< (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1580 (x2258 (x1495 x2010 x206 x372 x729 x2819 x1580))))
(assert (x730 x170))
(assert (x730 x2456))
(assert (=> (<= x2651 10000) (= 0 (x3126 x2651))))
(assert (x730 x1734))
(assert (< (x1495 x340 x1638 x1834 x2210 x285 x1956) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x41 (x1107 (x3066 x41 x1817 x354 x714))))
(assert (x730 x426))
(assert (= (and (not x2647) x1092) x3015))
(assert (< 10000 (x3066 x1627 x286 x1607 x2736)))
(assert (x400 x2133))
(assert (x730 x487))
(assert (x730 x2463))
(assert (= (x1107 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)) x2520))
(assert (= x877 (=> (and (< x2817 x550) (not (= x2817 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2817)) (<= 1 x2965) (= (x3095 (+ 32 x2817)) x550) (<= x2817 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2280 (x2664 160)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2817) (= (x2664 x289) x2434) (= (> x853 0) x2352) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2817) (= (x2664 x2434) x853) (= x244 (x2664 x2817)) (= x244 1) (= x2877 (x2664 x2280)) (not (= x2817 115792089237316195423570985008687907853269984665640564039457584007913129639904))) (and (=> (and x2352 (and (= x1044 (x2664 x2434)) (>= 5 x1474) (<= 1 x1044) (= x835 (ite (= 1 x1474) 1 0)) (= x1177 (x2664 x3026)) (= x103 (= x835 0)) (= (x3095 (+ x2434 32)) x3026) (= x1474 (x2664 x1177)))) (and (=> (and (and (or (and (= 1 x2291) x2829) (and (not x2829) (and (= x1923 1) (= x441 3) (= (x2664 x1177) x441)))) (and (<= x2492 5) (= x2829 (< 0 x2291)) (= (x2664 x1177) x2492) (= x2291 (ite (= 2 x2492) 1 0)))) x103) x2100) (=> (and (not x103) (and (= x765 (x545 1461501637330902918203684832716283019655932542975 x2626)) (= x1002 (x3095 (+ 128 x1177))) (>= 1461501637330902918203684832716283019655932542975 x1149) (= x2626 (x2664 x1002)) (= x1149 x765))) x2730))) (=> (not x2352) x1587)))))
(assert (x1174 x1798))
(assert (x634 x2545 1461501637330902918203684832716283019655932542976))
(assert (= x1353 (x1107 (x3066 x1353 x1464 x701 x2889))))
(assert (x1006 x260))
(assert (=> (>= 10000 x92) (= (x3126 x92) 0)))
(assert (x730 x1520))
(assert (x730 x1515))
(assert (x730 x250))
(assert (x400 x2202))
(assert (x730 x1793))
(assert (= (x3126 (x2476 x2010 x2879)) (x2476 x2010 x2879)))
(assert (x730 x1199))
(assert (x730 x1433))
(assert (x1620 x1666))
(assert (= x525 (and (not x686) x918)))
(assert (x730 x1449))
(assert (x730 x3157))
(assert (x730 x774))
(assert (=> (<= x55 10000) (= (x3126 x55) 0)))
(assert (=> (<= x1194 10000) (= 0 (x3126 x1194))))
(assert (x730 x864))
(assert (x1613 160 x1669))
(assert (= (x2040 x1401 x1347 x593) (x3126 (x2040 x1401 x1347 x593))))
(assert (= (x3126 57896044618658097711785492504343953926418782139537452191302581570759080747168) 0))
(assert (= (or x195 x1559) x3105))
(assert (x730 x2523))
(assert (x730 x2367))
(assert (x730 x2810))
(assert (x730 x37))
(assert (= x609 (and x654 x742)))
(assert (= 0 (x3126 18446744073709551613)))
(assert (= (x79 (x1495 x1353 x488 x2082 x1350 x3006 x1453)) x3006))
(assert (= x298 (and x1696 x471)))
(assert (= (x3126 (x1495 x2520 x1730 x3032 x1572 x2589 x1647)) (x1495 x2520 x1730 x3032 x1572 x2589 x1647)))
(assert (= x721 (or x300 x945)))
(assert (x730 x261))
(assert (x730 x2319))
(assert (= (=> (and (= x2952 x3149) (= x503 x157) (= x538 x1473) (= x2224 x164)) x748) x1857))
(assert (x730 x26))
(assert (x730 x1077))
(assert (x730 x340))
(assert (= (x2258 (x1495 x41 x2636 x2065 x2915 x2365 x511)) x511))
(assert (x2800 128))
(assert (=> (>= 10000 x938) (= (x3126 x938) 0)))
(assert (=> (>= 10000 x2967) (= 0 (x3126 x2967))))
(assert (x730 x1143))
(assert (x730 x167))
(assert (x730 x172))
(assert (x2800 x65))
(assert (= (or x1196 x1089) x943))
(assert (x730 x812))
(assert (= x243 (x2258 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428))))
(assert (x730 x2891))
(assert (= (x2203 (x872 x340 x2252 x1791 x570 x1363)) x1791))
(assert (= x2171 (x2997 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171))))
(assert (= (and x1948 x3112) x2418))
(assert (x730 x1356))
(assert (x730 x2025))
(assert (x730 x366))
(assert (= (x1323 (x872 x1401 x1136 x1211 x1618 x813)) x1618))
(assert (=> (<= x115 10000) (= 0 (x3126 x115))))
(assert (x730 x987))
(assert (= (or x804 x1863) x3112))
(assert (x730 x2561))
(assert (x730 x2430))
(assert (x730 x1098))
(assert (x730 x2666))
(assert (x730 x799))
(assert (= (and x880 x1198) x1590))
(assert (x400 x1796))
(assert (x730 x2093))
(assert (x730 x240))
(assert (=> (<= x1523 10000) (= (x3126 x1523) 0)))
(assert (x730 x2795))
(assert (x730 x510))
(assert (= (x2683 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492)) x1492))
(assert (x730 x2583))
(assert (= (x1107 (x872 x1955 x3110 x999 x2468 x2733)) x1955))
(assert (x730 x2547))
(assert (x730 x1135))
(assert (= x3078 (x2997 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078))))
(assert (x1620 x1798))
(assert (x730 x688))
(assert (x730 x711))
(assert (x730 x1341))
(assert (not (x2705 (x3066 66 x2962 x1150 x589))))
(assert (= (x2203 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171)) x2132))
(assert (x730 x2741))
(assert (= x2874 (x2258 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055))))
(assert (x730 x347))
(assert (=> (>= 10000 x395) (= (x3126 x395) 0)))
(assert (x730 x382))
(assert (x730 x1153))
(assert (= (x2203 (x2040 x2520 x3117 x311)) x311))
(assert (= (=> (and (= x1672 (x3095 (+ x110 32))) (= x138 (x3095 (+ x781 32))) (= (x3095 (+ x339 32)) x1885) (= x1932 (x1717 x1885)) (= (x3095 (+ 32 x138)) x2704) (= (not (< 1 x2102)) x1823) (= (x1280 x110) x339) (= (x1280 x339) x1201)) (and x1823 (=> (and (= 1 x618) (= x1493 x1672) (= x2704 x2294)) x650))) x2745))
(assert (x730 x998))
(assert (= (x2683 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453)) x453))
(assert (x730 x1267))
(assert (x730 x865))
(assert (= x688 (x2316 (x2476 x340 x688))))
(assert (x730 x1513))
(assert (= (x1107 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509)) x2010))
(assert (x730 x2340))
(assert (x730 x414))
(assert (= (=> (= (= x1694 0) x227) (and (=> (and (not x227) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2609) (> x2598 x2609) (= (x2375 x550) x2031) (<= x2609 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2609) (= (x3095 (+ x2609 32)) x2598) (not (= x2609 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (< 0 x2031) x2303) (not (= x2609 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2609)))) (and (=> (and (= x2598 x2422) (not x2303)) x967) (=> (and x2303 (and (and (= x1009 (x2375 x307)) (= x665 (x2375 x550)) (<= x700 2) (= (x2375 x1009) x700) (= (ite (= 0 x700) 1 0) x2883) (= x307 (x3095 (+ 32 x550))) (= x3022 (< 0 x2883)) (<= 1 x665)) (or (and (and (= x2220 (ite (= x1987 1) 1 0)) (<= x1987 2) (= (x2375 x1009) x1987) (= x2220 x1064)) (not x3022)) (and (= x2883 x1064) x3022)))) x2247))) (=> x227 x1744))) x2353))
(assert (x730 x270))
(assert (x730 x314))
(assert (x730 x710))
(assert (x730 x2345))
(assert (x634 x1326 1461501637330902918203684832716283019655932542976))
(assert (= (and (not x827) x2623) x965))
(assert (= (x3126 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)) (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)))
(assert (x2800 x1142))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (x730 x977))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3066 x2446 x1523 x1087 x1061)))
(assert (=> (>= 10000 x156) (= 0 (x3126 x156))))
(assert (x730 x2436))
(assert (= x2784 (x2316 (x2040 x1955 x2784 x639))))
(assert (not (x2705 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146))))
(assert (x730 x2844))
(assert (=> (<= x2757 10000) (= (x3126 x2757) 0)))
(assert (= (x2258 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107)) x1912))
(assert (x730 x61))
(assert (x730 x256))
(assert (x730 x516))
(assert (=> (>= 10000 x1247) (= 0 (x3126 x1247))))
(assert (x2705 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x730 x1776))
(assert (not (x2705 (x872 x340 x2252 x1791 x570 x1363))))
(assert (< 10000 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453)))
(assert (x730 x130))
(assert (x730 x1162))
(assert (x730 x2609))
(assert (= (=> (and (and (<= x1051 2) (= (> x428 0) x2568) (= x1051 (x1303 x97)) (= x97 (x1303 192)) (= x428 (ite (= 0 x1051) 1 0))) (or (and (and (= x1694 x390) (= (x1303 x2782) x1189) (= x2782 (x1303 192)) (= x390 (ite (= 1 x1189) 1 0)) (<= x1189 2)) (not x2568)) (and (= x1694 x428) x2568))) x2353) x2104))
(assert (x634 x663 1461501637330902918203684832716283019655932542976))
(assert (= x2652 (and x1741 (not x1996))))
(assert (= (and (not x1696) x471) x2395))
(assert (=> (>= 10000 x283) (= 0 (x3126 x283))))
(assert (= (x2258 (x1495 x1627 x2555 x1856 x2287 x1889 x2382)) x2382))
(assert (= x471 (and x1821 x78)))
(assert (x730 x97))
(assert (x730 x1100))
(assert (x730 x273))
(assert (x634 x3163 1461501637330902918203684832716283019655932542976))
(assert (= (or x2976 x1951 x848 x749 x1360) x1336))
(assert (=> (>= 10000 x1297) (= 0 (x3126 x1297))))
(assert (= (x3126 4294967295) 0))
(assert (x730 x2005))
(assert (= (and x1538 x284) x2122))
(assert (= (=> (and (<= 1 x818) (= (x2951 (- x993 32)) x1554) (= x818 x2460) (= x1063 (x3095 (+ x770 32))) (= x1612 x2579) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x770) (= x1906 (<= x1353 224)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x770) (= (x3095 (+ x2884 x1403)) x2460) (<= x594 4) (= (x2267 x770) x1353) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x770) (= (x3095 (+ x1181 x893)) x2579) (>= x2460 1) (= (x2951 (- x818 x770)) x993) (= (* 32 x594) x2884) (= x1181 (* x594 32)) (< x770 x818) (= x2620 x594)) (and x1906 (=> (and (= x1866 (x2267 x1063)) (= x715 (x2267 x2995)) (= x1415 (x3095 (+ 64 x1063))) (= (x2267 x2354) x586) (= x30 (x2267 x505)) (= (ite (= 0 x1353) x1269 (ite (>= 32 x1353) x388 (ite (>= 64 x1353) x2449 (ite (>= 96 x1353) x1223 (ite (>= 128 x1353) x815 (ite (<= x1353 160) x762 (ite (<= x1353 192) x3059 (ite (>= 224 x1353) x1213 x2613)))))))) x1749) (= (x2267 x1063) x1143) (= (x2267 x645) x1712) (= x3157 (x2267 x294)) (= x3006 (x2267 x3134)) (= (x3095 (+ 96 x1063)) x3134) (= x1453 (x2267 x485)) (= (x2040 x1353 x1143 x1194) x2449) (= (x2267 x1415) x2889) (= (x2267 x20) x701) (= (x2267 x1063) x488) (= x243 (x2267 x1986)) (= x1182 (x3095 (+ x818 32))) (= x388 (x2476 x1353 x1864)) (= x711 (x2267 x922)) (= x2522 (< 0 x3157)) (= x2560 (x3095 (+ 96 x1063))) (= x505 (x3095 (+ 96 x1063))) (= x2354 (x3095 (+ 160 x1063))) (= x964 (x3095 (+ 32 x1063))) (= x1464 (x2267 x1063)) (= x1194 (x2267 x964)) (= x645 (x3095 (+ 32 x1063))) (= x1213 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715)) (= x815 (x872 x1353 x1953 x1712 x627 x30)) (= x2108 (x3095 (+ 64 x1063))) (= x3059 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)) (= (x3095 (+ 64 x1063)) x2277) (= (x3095 (+ x1063 32)) x1165) (= (x3095 (+ x1063 192)) x2995) (= x1242 (x2267 x2560)) (= x119 (x3095 (+ 128 x1063))) (= x1986 (x3095 (+ 128 x1063))) (= (x2267 x2628) x115) (= x1270 (x3095 (+ 32 x1063))) (= x1236 (x2267 x1270)) (= (x2267 x2108) x627) (= (x2267 x2277) x1350) (= (x2267 x431) x2967) (= (x595 0) x1269) (= x2428 (x2267 x2323)) (= (x1495 x1353 x488 x2082 x1350 x3006 x1453) x762) (= (x3095 (+ x1063 32)) x20) (= x1599 (x3095 (+ 32 x294))) (= (x3095 (+ x1063 64)) x431) (= x1953 (x2267 x1063)) (= (x2267 x1165) x2215) (= (x3095 (+ 32 x1063)) x1640) (= (x3095 (+ 128 x1063)) x485) (= (x3095 (+ 160 x1063)) x2323) (= x2628 (x3095 (+ 64 x1063))) (= (x2267 x1640) x2082) (= (x3066 x1353 x1464 x701 x2889) x1223) (= x2182 (x2267 x119)) (= x922 (x3095 (+ 96 x1063))) (= x1864 (x2267 x1063)) (= x1458 (x2267 x1063))) (and (=> (and x2522 (and (= x506 (x2267 x1599)) (= x2930 (x3095 (+ x1599 32))) (= (> x3157 1) x2722) (= x2750 (x3095 (+ x1182 32))))) (and (=> (and (and (= x1934 (< 2 x3157)) (= x2601 (x3095 (+ x2930 32))) (= x760 (x3095 (+ 32 x2750))) (= x1278 (x635 x2930))) x2722) (and (=> (and (and (= (x264 x2601) x175) (= (x3095 (+ x2601 32)) x1249) (= x2621 (x3095 (+ 32 x760))) (= x2647 (> x3157 3))) x1934) (and (=> (and (and (= x1249 x316) (= x1328 3) (= x297 x2621)) (not x2647)) x1710) (=> x2647 x3017))) (=> (and (and (= x297 x760) (= x316 x2601) (= x1328 2)) (not x1934)) x1710))) (=> (and (and (= x2750 x297) (= x316 x2930) (= 1 x1328)) (not x2722)) x1710))) (=> (and (and (= x1599 x316) (= x297 x1182) (= 0 x1328)) (not x2522)) x1710))))) x3073))
(assert (=> (<= x570 10000) (= (x3126 x570) 0)))
(assert (=> (<= x2085 10000) (= 0 (x3126 x2085))))
(assert (= (=> (and (= (x2457 x550) x214) (= x1493 x1443) x596 (= (= x1078 (x3099 x2984)) x2060) (= x552 (< 0 x214)) (= (x1244 x2984) x105) x2060 (= (x2951 (- x2294 x1109)) x1039) (>= x933 1) (= x1833 (* 64 x2102)) (= x618 x2102) (or (= x1833 0) (= 64 x1833)) (= x2341 (* x2102 32)) (= (x3095 (+ x2341 x110)) x1443) (<= 1 x105) (or (= 0 x2341) (= 32 x2341)) (= x1707 (x1257 x2234)) (<= x2102 1) (= (<= x1707 (x3099 x2234)) x596) (= (x1257 x2984) x1078) (= x258 (x3095 (+ x781 x1833))) (>= 4294967295 x2516) (= x2294 x258)) (and (=> (not x552) x2062) (=> (and (and (or x1605 (and (and (= x361 (x3095 (+ 96 x847))) (= (<= x1392 (x2485 x2234)) x49) (= x1460 (x2457 x550)) (<= 1 x1562) (= (x3095 (+ x1436 32)) x2504) (= x1137 (= x1892 (x2485 x1149))) (= (x3099 x1149) x1892) (>= 1461501637330902918203684832716283019655932542975 x1149) x49 (= (x2457 x3064) x847) (<= x2968 4294967295) (= (x3095 (+ 4 x1109)) x1436) x1137 (= x1392 (x3099 x2234)) (= (x2457 x361) x209) (= (x2457 x3064) x447) (= (x1244 x1149) x1562) (<= 1 x1460) (>= x2565 1) (= (x2457 x917) x3123) (>= x1188 1) (= x917 (x3095 (+ 64 x447))) (= x698 (x545 1461501637330902918203684832716283019655932542975 x3123)) (= (x2457 x550) x2565)) (not x1605))) (and (= x167 (ite (= x1122 2) 1 0)) (= x1605 (= x167 0)) (<= 1 x1692) (= x3064 (x3095 (+ x550 32))) (= (x2457 x550) x1692) (<= x1122 2) (= (x2457 x2574) x1122) (= (x2457 x3064) x2574))) x552) x2423))) x650))
(assert (not (x2705 (x1495 x914 x1297 x1967 x1427 x1724 x2682))))
(assert (x730 x447))
(assert (< 10000 (x3066 x914 x1354 x34 x2368)))
(assert (x1620 x3163))
(assert (x730 x161))
(assert (x730 x3152))
(assert (x730 x2585))
(assert (x730 x995))
(assert (x730 x2553))
(assert (x730 x293))
(assert (x730 x2272))
(assert (= (x2476 x2520 x1301) (x3126 (x2476 x2520 x1301))))
(assert (x730 x2767))
(assert (x730 x2480))
(assert (x730 x1536))
(assert (=> (<= x1878 10000) (= (x3126 x1878) 0)))
(assert (=> (>= 10000 x3129) (= 0 (x3126 x3129))))
(assert (x730 x720))
(assert (=> (>= 10000 x623) (= 0 (x3126 x623))))
(assert (= x286 (x2316 (x3066 x1627 x286 x1607 x2736))))
(assert (x730 x2811))
(assert (=> (>= 10000 x1624) (= (x3126 x1624) 0)))
(assert (x730 x234))
(assert (= x1969 (or x2831 x844)))
(assert (x400 x1326))
(assert (< 10000 (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994)))
(assert (= x885 (x2316 (x3066 x1258 x885 x92 x1215))))
(assert (= 64 (x1107 (x2040 64 x2006 1))))
(assert (= (x3126 (x2040 x1140 x702 x1878)) (x2040 x1140 x702 x1878)))
(assert (x730 x2519))
(assert (x730 x2402))
(assert (x730 x494))
(assert (= x654 (or x611 x856)))
(assert (x730 x1126))
(assert (x730 x1265))
(assert (x1006 x1666))
(assert (x1613 32 (- x2343 1)))
(assert (x730 x1598))
(assert (x1620 x1102))
(assert (= (x3126 2621382288) 0))
(assert (=> (>= 10000 x813) (= (x3126 x813) 0)))
(assert (< 10000 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337)))
(assert (x730 x158))
(assert (x730 x1954))
(assert (=> (>= 10000 x1143) (= 0 (x3126 x1143))))
(assert (x730 x336))
(assert (= x1268 (and x1795 x971)))
(assert (=> (>= 10000 x1073) (= 0 (x3126 x1073))))
(assert (= (and x1589 x320) x1870))
(assert (x730 x798))
(assert (x730 x2965))
(assert (< 10000 (x2040 x86 x2600 x395)))
(assert (= (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906) (x3126 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906))))
(assert (x634 x2202 1461501637330902918203684832716283019655932542976))
(assert (x730 x1469))
(assert (x730 x2783))
(assert (= (and x2411 x81) x1421))
(assert (x730 x2720))
(assert (=> (>= 10000 x1528) (= 0 (x3126 x1528))))
(assert (x1174 x1468))
(assert (x730 x2952))
(assert (= x86 (x1107 (x2476 x86 x2317))))
(assert (=> (>= 10000 x480) (= (x3126 x480) 0)))
(assert (=> (<= x1773 10000) (= 0 (x3126 x1773))))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (= (x3126 (x2476 x86 x2317)) (x2476 x86 x2317)))
(assert (=> (>= 10000 x2736) (= (x3126 x2736) 0)))
(assert (x730 x1165))
(assert (=> (>= 10000 x681) (= (x3126 x681) 0)))
(assert (x730 x3139))
(assert (x730 x1391))
(assert (x730 x1018))
(assert (= (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237) (x3126 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237))))
(assert (x730 x1911))
(assert (x730 x389))
(assert (x730 x1640))
(assert (x730 x272))
(assert (x730 x2797))
(assert (x730 x185))
(assert (x730 x2819))
(assert (x730 x2604))
(assert (x730 x1414))
(assert (x730 x1789))
(assert (= x1785 (x2316 (x3066 x2520 x1785 x911 x2970))))
(assert (x730 x569))
(assert (=> (<= x2879 10000) (= (x3126 x2879) 0)))
(assert (x1174 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x730 x568))
(assert (= 0 (x3126 57896044618658097711785492504343953926634992332820282019728792003956564820068)))
(assert (= x1770 (x2997 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770))))
(assert (x730 x833))
(assert (=> (<= x2412 10000) (= (x3126 x2412) 0)))
(assert (= (x2203 (x3066 x2446 x1523 x1087 x1061)) x1087))
(assert (x730 x23))
(assert (x730 x146))
(assert (x730 x2651))
(assert (x730 x2294))
(assert (x730 x1571))
(assert (=> (>= 10000 x421) (= (x3126 x421) 0)))
(assert (x730 x2656))
(assert (=> (<= x2188 10000) (= 0 (x3126 x2188))))
(assert (=> (>= 10000 x243) (= (x3126 x243) 0)))
(assert (x730 x309))
(assert (x730 x2110))
(assert (x730 x2635))
(assert (x730 x2569))
(assert (= x3017 (=> (and (= (x3095 (+ x1249 32)) x2369) (= x1115 (not (< 4 x3157))) (= (x2035 x1249) x563) (= x378 (x3095 (+ x2621 32)))) (and (=> (and (= x297 x378) (= 4 x1328) (= x316 x2369)) x1710) x1115))))
(assert (=> (>= 10000 x1371) (= (x3126 x1371) 0)))
(assert (x730 x1435))
(assert (= x1604 (=> (and (= (x2375 160) x1466) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2598) (> x2239 x2598) (= (x3095 (+ 20 x2262)) x185) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2598) (= (x3095 (+ x1563 32)) x2239) (= (x2951 (- x2239 x2598)) x3118) (= (x3095 (+ 32 x2598)) x1341) (= (x3095 (+ x3155 64)) x1757) (= x340 (x2894 x2598)) (= x1563 (x3095 (+ 20 x185))) (= (x2375 x307) x949) (<= x2598 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* 79228162514264337593543950336 x2318) x333) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639832 x2598)) (= x2318 (x545 1461501637330902918203684832716283019655932542975 x1364)) (= (x2375 x550) x1170) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639832 x2598)) (= x221 (x545 1461501637330902918203684832716283019655932542975 x1317)) (= (x3095 (+ x949 64)) x3155) (<= 1 x1170) (= (x2375 x1757) x2769) (= x2262 (x3095 (+ 32 x2598))) (not (= x2598 115792089237316195423570985008687907853269984665640564039457584007913129639832)) (= x134 (>= 224 x340)) (= (* 79228162514264337593543950336 x221) x1938) (= x1364 (x2375 x3155)) (= (x2375 x1466) x1317) (= x1203 (x2951 (- x3118 32)))) (and x134 (=> (and (or (and x575 (= x2539 (x3095 (+ x2609 32)))) (not x575)) (and (= x1791 (x2894 x1001)) (= (x2894 x1341) x903) (= x570 (x2894 x868)) (= (x2894 x16) x1424) (= x2918 (x2894 x550)) (= x1638 (x2894 x1341)) (= (x2894 x1197) x170) (= (x3095 (+ x1507 96)) x1659) (= x652 (x3095 (+ 32 x1341))) (= x1135 (x3095 (+ x1341 128))) (= (x2894 x3130) x782) (= (x3095 (+ 96 x1341)) x1944) (= x1001 (x3095 (+ 32 x1341))) (= x1911 (x3095 (+ 192 x1341))) (= (x2894 x1988) x285) (= x1208 (x2894 x2227)) (= x868 (x3095 (+ 64 x1341))) (= (x3095 (+ 32 x1341)) x16) (= x575 (= 0 x2325)) (= (x2894 x2707) x2992) (= x1988 (x3095 (+ x1341 96))) (= x1834 (x2894 x969)) (= x1419 (x872 x340 x2252 x1791 x570 x1363)) (= x1635 (x2476 x340 x688)) (= x2506 (x2894 x1911)) (= (x2894 x2610) x986) (= (x2894 x1659) x2004) (= (x2894 x1341) x2252) (= (x2894 x1762) x2435) (= x1363 (x2894 x3108)) (= x3108 (x3095 (+ 96 x1341))) (= x2227 (x3095 (+ x1341 160))) (= x532 (x595 0)) (= (x2040 x340 x1888 x1424) x2706) (= (x3095 (+ x1341 64)) x1927) (= (x2894 x1944) x2830) (= (x3095 (+ x1341 128)) x2410) (= x1536 (x2894 x2410)) (= x969 (x3095 (+ 32 x1341))) (= x1888 (x2894 x1341)) (= (x2894 x2806) x1956) (= x1300 (x2894 x1135)) (<= 1 x2918) (= x568 (x2894 x1341)) (= x3130 (x3095 (+ x1341 96))) (= x2619 (x2894 x1927)) (= x2210 (x2894 x1882)) (= x2707 (x3095 (+ 32 x1341))) (= (x3095 (+ x1341 128)) x2806) (= (x2894 x1341) x688) (= x2610 (x3095 (+ 64 x1341))) (= (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506) x3008) (= (x3095 (+ x1341 64)) x1197) (= (x2894 x307) x1507) (= x2241 (x1495 x340 x1638 x1834 x2210 x285 x1956)) (= (x3066 x340 x903 x2435 x986) x3144) (= x1762 (x3095 (+ 32 x1341))) (= (x3095 (+ 64 x1341)) x1882) (= (x2894 x2146) x481) (= x582 (x2894 x652)) (= (x2358 x340 x1816 x582 x170 x2830 x1300 x481) x810) (= x2146 (x3095 (+ x1341 160))) (= (x2894 x1341) x1816) (= x2325 (x2894 x2609)) (= x779 (ite (= x340 0) x532 (ite (>= 32 x340) x1635 (ite (<= x340 64) x2706 (ite (<= x340 96) x3144 (ite (>= 128 x340) x1419 (ite (<= x340 160) x2241 (ite (<= x340 192) x810 (ite (>= 224 x340) x3008 x2614))))))))))) x1853)))))
(assert (=> (>= 10000 x1816) (= (x3126 x1816) 0)))
(assert (=> (<= x1062 10000) (= (x3126 x1062) 0)))
(assert (= x3004 (=> (and (= (x80 x2596) x337) (= (x3095 (+ x2394 160)) x38) (= (x80 x799) x1727) (= x1034 (x80 x778)) (>= x1034 1) (= (x80 x521) x2904) (= x1984 (x3095 (+ 32 x2814))) (= (< 0 x2155) x2386) (= (x3095 (+ 4 x706)) x2394) (= x1983 (x3095 (+ 64 x2904))) (= x2596 (x3095 (+ x799 32))) (= x2133 (x80 x1232)) (= x875 (x80 x1983)) (= x866 (x545 1461501637330902918203684832716283019655932542975 x1326)) (= (x3095 (+ x1232 32)) x799) (= x2622 (x3095 (+ x875 32))) (= x2155 (x1399 x875)) (= x420 1) (= (x3095 (+ x1984 32)) x271) (= (x3095 (+ 32 x38)) x1076) (= (x3095 (+ 32 x2394)) x931) (= x1169 (x545 1461501637330902918203684832716283019655932542975 x1796)) (= x1232 (x3095 (+ 32 x1155))) (= (x545 1461501637330902918203684832716283019655932542975 x2133) x2878) (= (x3095 (+ x931 32)) x2814)) (and (=> (not x2386) x1501) (=> (and x2386 (and (= x1375 (< 32 x2155)) (= x3000 (x777 x2622)))) (and (=> (and x1375 (and (= (x3095 (+ 32 x2622)) x2313) (= (x3095 (+ x1076 32)) x1789) (= x686 (> x2155 64)) (= x2998 (x674 x2313)))) (and (=> (and (and (= x971 (< 96 x2155)) (= x2685 (x3095 (+ x2622 64))) (= (x3095 (+ 64 x1076)) x2099) (= x2859 (x68 x2685))) x686) (and (=> (not x971) x1501) (=> x971 x1447))) (=> (not x686) x1501))) (=> (not x1375) x1501)))))))
(assert (x730 x2211))
(assert (x730 x529))
(assert (x730 x531))
(assert (=> (>= 10000 x2921) (= (x3126 x2921) 0)))
(assert (x730 x2660))
(assert (x730 x2792))
(assert (x730 x2879))
(assert (x730 x1470))
(assert (x730 x2468))
(assert (= (x2203 (x1495 x2010 x206 x372 x729 x2819 x1580)) x372))
(assert (x730 x391))
(assert (x730 x2555))
(assert (x730 x2309))
(assert (x730 x1955))
(assert (x730 x3163))
(assert (=> (>= 10000 x366) (= (x3126 x366) 0)))
(assert (x730 x60))
(assert (= (x3126 (x872 x1258 x2744 x2472 x1167 x1827)) (x872 x1258 x2744 x2472 x1167 x1827)))
(assert (not (x2705 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506))))
(assert (< 10000 (x2040 x2660 x290 x23)))
(assert (= x2278 (=> (= x376 x2609) x2104)))
(assert (x730 x1296))
(assert (x730 x2989))
(assert (=> (<= x2636 10000) (= (x3126 x2636) 0)))
(assert (= x1925 (x79 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048)))
(assert (= (x2316 (x1495 x1627 x2555 x1856 x2287 x1889 x2382)) x2555))
(assert (=> (<= x1167 10000) (= 0 (x3126 x1167))))
(assert (=> (>= 10000 x2489) (= 0 (x3126 x2489))))
(assert (x730 x1039))
(assert (< 10000 (x1495 x41 x2636 x2065 x2915 x2365 x511)))
(assert (= x2889 (x1323 (x3066 x1353 x1464 x701 x2889))))
(assert (x730 x876))
(assert (x730 x1516))
(assert (= (x2997 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055)) x1055))
(assert (not (x2705 (x3066 x914 x1354 x34 x2368))))
(assert (x730 x2409))
(assert (x730 x2893))
(assert (= x2366 (x2316 (x1495 x1401 x2366 x421 x2896 x366 x1518))))
(assert (= (x3126 (x595 0)) (x595 0)))
(assert (x730 x582))
(assert (= (and (not x1589) x320) x1282))
(assert (x730 x744))
(assert (x730 x1617))
(assert (=> (<= x2578 10000) (= (x3126 x2578) 0)))
(assert (x1620 x1468))
(assert (=> (<= x1647 10000) (= 0 (x3126 x1647))))
(assert (x730 x2988))
(assert (= (x2258 (x1495 x1140 x296 x2634 x2211 x2023 x2162)) x2162))
(assert (= x3047 (x79 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023))))
(assert (x730 x1708))
(assert (x730 x2277))
(assert (= x2069 (and x2096 (not x3022))))
(assert (x730 x813))
(assert (x730 x829))
(assert (x730 x1002))
(assert (= (x2258 (x2358 x340 x1816 x582 x170 x2830 x1300 x481)) x1300))
(assert (=> (>= 10000 x1300) (= 0 (x3126 x1300))))
(assert (x730 x2571))
(assert (not (x2705 (x3066 x1140 x2757 x2156 x1949))))
(assert (not (x2705 (x2040 x1258 x2380 x812))))
(assert (= (x2316 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)) x1866))
(assert (=> (<= x701 10000) (= 0 (x3126 x701))))
(assert (> (x2040 x1353 x1143 x1194) 10000))
(assert (x730 x1462))
(assert (x634 x1164 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x215))
(assert (x730 x857))
(assert (= x2660 (x1107 (x1495 x2660 x524 x2407 x2192 x31 x1339))))
(assert (x730 x2018))
(assert (x730 x2446))
(assert (x730 x1967))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492)))
(assert (x730 x1161))
(assert (= (x1323 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608)) x158))
(assert (= (and (not x2522) x2677) x1112))
(assert (= x1082 (or x1277 x641)))
(assert (x730 x1816))
(assert (x730 x1883))
(assert (x730 x1194))
(assert (= 0 (x3126 18446744073709551455)))
(assert (x730 x2999))
(assert (=> (>= 10000 x627) (= 0 (x3126 x627))))
(assert (=> (>= 10000 x1671) (= (x3126 x1671) 0)))
(assert (x730 x16))
(assert (=> (>= 10000 x1469) (= 0 (x3126 x1469))))
(assert (= x2819 (x79 (x1495 x2010 x206 x372 x729 x2819 x1580))))
(assert (x634 x3023 32))
(assert (x730 x2984))
(assert (x730 x3043))
(assert (= (x3126 18446744073709551487) 0))
(assert (< (x3066 x1401 x2276 x1377 x2061) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1127))
(assert (not (x2705 (x3066 x1955 x1098 x1544 x216))))
(assert (x730 x1913))
(assert (x730 x1286))
(assert (x730 x565))
(assert (=> (>= 10000 x2331) (= 0 (x3126 x2331))))
(assert (not (x2705 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869))))
(assert (x2800 (- x2343 1)))
(assert (x730 x2187))
(assert (x730 x2210))
(assert (x730 x2004))
(assert (=> (>= 10000 x2057) (= 0 (x3126 x2057))))
(assert (= (x2683 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470)) x312))
(assert (x730 x2202))
(assert (not (x2705 (x1495 x41 x2636 x2065 x2915 x2365 x511))))
(assert (x730 x1492))
(assert (x730 x703))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3066 x41 x1817 x354 x714)))
(assert (x730 x771))
(assert (=> (<= x1967 10000) (= (x3126 x1967) 0)))
(assert (x730 x1707))
(assert (x730 x1592))
(assert (> (x872 x2446 x637 x1088 x2581 x70) 10000))
(assert (x730 x2103))
(assert (x730 x1312))
(assert (= x887 (=> (and (= (x2951 (- x3140 x1629)) x1695) (= (> x842 0) x2074) (= x842 (x342 x988)) (= x1946 (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x418)) (= x561 (x3095 (+ x1126 32))) (= x418 (x3095 (+ x1729 31))) (= (x3095 (+ 32 x3140)) x199) (= (x3095 (+ x1942 x1946)) x3140) (= x1497 (x3095 (+ 32 x988))) (= (x3095 (+ x1942 x1729)) x530) (= (x3095 (+ x2245 32)) x1126)) (and (=> (and (not x2074) (= x322 x199)) x3005) (=> x2074 x1187)))))
(assert (= (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470) (x3126 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470))))
(assert (= (and x1971 (not x2568)) x1299))
(assert (= (x1323 (x872 x914 x2376 x374 x2191 x546)) x2191))
(assert (x730 x2022))
(assert (x2800 x2318))
(assert (= (x2476 x1401 x468) (x3126 (x2476 x1401 x468))))
(assert (= (or x1097 x251) x2831))
(assert (x730 x2081))
(assert (x730 x1791))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x340 x688)))
(assert (= (and x66 x469) x1168))
(assert (x730 x1493))
(assert (x730 x2782))
(assert (x1006 x249))
(assert (x730 x3007))
(assert (=> (<= x593 10000) (= (x3126 x593) 0)))
(assert (x730 x585))
(assert (x730 x2174))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (x730 x2774))
(assert (= (x2316 (x1495 x2520 x1730 x3032 x1572 x2589 x1647)) x1730))
(assert (= (x1107 (x2476 x340 x688)) x340))
(assert (x730 x2024))
(assert (x730 x1086))
(assert (= (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171) (x3126 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171))))
(assert (x730 x2884))
(assert (x730 x260))
(assert (x730 x2533))
(assert (= x1073 (x2316 (x2476 x1140 x1073))))
(assert (x730 x2932))
(assert (=> (>= 10000 x1970) (= 0 (x3126 x1970))))
(assert (= (=> (and (= (x2014 x2694) x1148) (= (x3095 (+ 32 x2719)) x61) (= (x2014 x2719) x1915) (= (x3095 (+ 32 x2025)) x2893) (= (< 0 x1915) x330)) (and (=> (and (and (= x2534 x2893) (= 0 x2985) (= x61 x947)) (not x330)) x1699) (=> (and x330 (and (= (x3095 (+ 32 x2893)) x3133) (= (x2014 x61) x2339) (= x515 (< 1 x1915)) (= (x3095 (+ x61 32)) x2558))) (and (=> (and (and (= x3133 x2534) (= 1 x2985) (= x947 x2558)) (not x515)) x1699) (=> (and (and (= x513 (x2847 x2558)) (= x17 (x3095 (+ x2558 32))) (= x1312 (x3095 (+ 32 x3133))) (= x2011 (> x1915 2))) x515) (and (=> (and (and (= x892 (x3095 (+ x1312 32))) (= (x497 x17) x1964) (= x651 (> x1915 3)) (= x1728 (x3095 (+ x17 32)))) x2011) (and (=> (and (not x651) (and (= x947 x1728) (= x2534 x892) (= x2985 3))) x1699) (=> x651 x1570))) (=> (and (and (= x17 x947) (= x1312 x2534) (= x2985 2)) (not x2011)) x1699))))))) x2813))
(assert (x730 x914))
(assert (= x2527 (and x1082 x980)))
(assert (x730 x3064))
(assert (= (or x1535 x716) x2676))
(assert (= (x3126 (x2040 x41 x130 x982)) (x2040 x41 x130 x982)))
(assert (=> (<= x783 10000) (= (x3126 x783) 0)))
(assert (x730 x2133))
(assert (x730 x1835))
(assert (x730 x1773))
(assert (= (=> (and (<= x830 57896044618658097711785492504343953926634992332820282019728792003956564819967) (not (> x2315 x806)) (= x1723 (x3095 (+ 32 x1229))) (<= x912 18446744073709551614) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2315) (>= 18446744073709551518 x2315)) (= (x3095 (+ 32 x689)) x919) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x1227) (<= x1227 18446746139588821027)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x1071) (>= 18446746139588821027 x1071)) (= (+ x1721 63) x260) (not (< x3069 x712)) (= x747 (x3095 (+ 32 x2497))) (>= 18446744073709551613 x2315) (>= x830 96) (= (+ x888 31) x997) (= x689 (x3095 (+ x1767 x1071))) (= x472 (+ x912 x806)) (>= 18446744073709551613 x2315) (= x2213 (+ x806 32)) (= x2463 (x3095 (+ 32 x1227))) (<= x888 18446744073709551615) (or (>= 18446746139588821027 x689) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x689)) (>= 18446744073709551615 x472) (= (x3095 (+ x1691 x1227)) x1071) (>= 18446744073709551614 x2315) (< x2315 x806) (>= 18446744073709551615 x1691) (= (x2905 x689) x888) (>= x472 2) (= (not (> x1439 x2463)) x160) (<= x2315 18446744073709551614) (or (and (<= x3069 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2848 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x3069 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2848 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x3069 x2848))) (>= 18446744073709551614 x2315) (<= x1767 18446744073709551615) (= (+ x2213 x888) x2454) (<= x2315 18446744073709551613) (= x1721 (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x997)) (or (<= x2315 18446744073709551518) (>= x2315 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= (x3095 (+ x1071 32)) x2497) (or (>= 18446746139588821059 x3069) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820100 x3069)) (not (< x472 x806)) (= x806 (x3095 (+ 96 x2315))) (= x1691 (x2905 x1227)) (<= x1157 1461501637330902918203684832716283019655932542975) (= (x3095 (+ x919 x888)) x712) (= (x2905 x1071) x1157) (= x1767 (x2905 x747)) (= (x3095 (+ x689 31)) x2848) (or (<= x2315 18446744073709551518) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2315)) (= x1715 (x2905 x2497)) (< x806 x472) (= x1229 (x3095 (+ x2315 32))) (= x830 (x2951 (- x3069 x1071))) (= x912 (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x260))) (and (=> (= x472 x559) x724) x160)) x3045))
(assert (x730 x460))
(assert (= x641 (and x383 x126)))
(assert (x730 x982))
(assert (x730 x1259))
(assert (x730 x1457))
(assert (x730 x1933))
(assert (x730 x1931))
(assert (< (x1382 x2446 x783 x1970 x1850 x2137 x281 x480 x1994) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x669))
(assert (x730 x1550))
(assert (x730 x2747))
(assert (= (x2258 (x1495 x86 x2248 x1945 x156 x566 x621)) x621))
(assert (x400 x908))
(assert (x730 x970))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639712) 0))
(assert (= x2674 (and x1741 x1996)))
(assert (x2705 2065879269316))
(assert (x1174 x3163))
(assert (x1613 32 x1510))
(assert (x730 x2962))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1495 x914 x1297 x1967 x1427 x1724 x2682)))
(assert (x730 x1354))
(assert (x730 x370))
(assert (= x1442 (x2258 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509))))
(assert (x730 x85))
(assert (=> (<= x1712 10000) (= 0 (x3126 x1712))))
(assert (= x1031 (and x2536 x1330)))
(assert (= (and x81 (not x2411)) x2048))
(assert (< 10000 (x2476 x914 x1396)))
(assert (=> (<= x1096 10000) (= 0 (x3126 x1096))))
(assert (= x670 (x79 (x872 x1140 x314 x2331 x587 x670))))
(assert (x730 x929))
(assert (x730 x2815))
(assert (x730 x3051))
(assert (x730 x1995))
(assert (x730 x1874))
(assert (x730 x174))
(assert (x400 x1102))
(assert (x1174 x2545))
(assert (x400 x2139))
(assert (=> (<= x1286 10000) (= (x3126 x1286) 0)))
(assert (x730 x939))
(assert (x1174 x273))
(assert (= (x2316 (x872 x340 x2252 x1791 x570 x1363)) x2252))
(assert (< 10000 (x2040 x340 x1888 x1424)))
(assert (x730 x1061))
(assert (x730 x3138))
(assert (= (=> (and (= x1398 (x1709 x198)) (= x198 (x3095 (+ x1899 32))) (= x261 (x605 x942)) (= x663 (x413 x1899)) (= x1602 (x3095 (+ 32 x510))) (= (not (> x842 1)) x504) (= (x3095 (+ x1602 32)) x1479) (= x942 (x3095 (+ x198 32))) (= (x3095 (+ 32 x440)) x2547) (>= 2 x2810) (= (x3095 (+ x2547 32)) x1899) (= (x3095 (+ 32 x213)) x2466) (= (x1891 x440) x2810) (= (x1891 x1497) x440) (= (x545 1461501637330902918203684832716283019655932542975 x663) x2666) (= (x542 x2547) x1557) (= x510 (x3095 (+ x199 32))) (<= x1557 1) (= (x3095 (+ 32 x1479)) x213)) (and x504 (=> (= x2466 x322) x3005))) x1187))
(assert (x730 x418))
(assert (= x1931 (x2316 (x3066 x2660 x1931 x857 x111))))
(assert (= x1160 (or (and (not x2144) x1067) x1879)))
(assert (x730 x31))
(assert (x730 x464))
(assert (x730 x2045))
(assert (=> (<= x2906 10000) (= (x3126 x2906) 0)))
(assert (x730 x38))
(assert (< (x3066 x1955 x1098 x1544 x216) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1008 x2968))
(assert (x730 x784))
(assert (x730 x2503))
(assert (=> (<= x885 10000) (= (x3126 x885) 0)))
(assert (x730 x115))
(assert (x1613 32 x2115))
(assert (x730 x1812))
(assert (x730 x558))
(assert (= x914 (x1107 (x872 x914 x2376 x374 x2191 x546))))
(assert (=> (>= 10000 x488) (= (x3126 x488) 0)))
(assert (x730 x2861))
(assert (x1620 x663))
(assert (=> (>= 10000 x566) (= 0 (x3126 x566))))
(assert (x730 x562))
(assert (= (x2203 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)) x2342))
(assert (= x437 (x2316 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171))))
(assert (x730 x2032))
(assert (x730 x1394))
(assert (= (x2316 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509)) x938))
(assert (= (and x434 (not x2759)) x2728))
(assert (= (x3126 2189116922) 0))
(assert (x730 x206))
(assert (= (x79 (x1495 x86 x2248 x1945 x156 x566 x621)) x566))
(assert (x730 x2904))
(assert (= (and x827 x2623) x205))
(assert (= x724 (=> (and (>= 18446744073709551614 x559) (= x3067 (x3095 (+ x1077 36))) (= (x3095 (+ x2441 x791)) x351) (= (+ 32 x1815) x2236) (= x2980 (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3023)) (>= 18446744073709551613 x559) (= (x2905 x2507) x898) (= (+ 32 x2166) x2160) (= x827 (> x3007 0)) (<= 1 x1815) (> x2518 x2166) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x512) (<= x512 18446746139588821027)) (= x240 (+ x2980 63)) (= x1940 (* x3007 32)) (<= x1606 18446744073709551614) (>= 18446744073709551615 x1159) (> x1771 x1815) (= x2166 (+ x1771 224)) (= (x2905 x2453) x2584) (not (> x983 x3069)) (= (+ x1771 32) x36) (= x2212 (x3095 (+ x512 32))) (= x1159 (x2905 x2002)) (= x540 (x3095 (+ x2453 31))) (or (and (> x1077 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2029)) (and (< x1077 x2029) (= (<= x2029 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1077 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (or (>= 18446744073709551614 x559) (>= x559 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (= x1376 (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1798)) (= (x3095 (+ x1222 32)) x2002) (= (+ 31 x2441) x1798) (= x2507 (x3095 (+ x657 32))) (= x2441 (x2905 x512)) (>= 18446744073709551613 x559) (= x660 (x2905 x2414)) (<= x2441 18446744073709551615) (= (x3095 (+ 32 x559)) x791) (= (+ x2584 31) x3023) (<= x559 18446744073709551614) (= x983 (x3095 (+ x2441 x2212))) (= (x2905 132) x1077) (= (x3095 (+ x272 x559)) x1815) (= (x3095 (+ 32 x3067)) x1826) (= (x3095 (+ x898 x2616)) x512) (>= 18446744073709551615 x2584) (>= 18446744073709551614 x1815) (= x1496 (x2905 36)) (<= x898 18446744073709551615) (= x166 (+ x2584 x2236)) (= x2569 (x2905 x417)) (or (<= x559 18446744073709551614) (>= x559 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (>= 18446744073709551614 x559) (= (x3095 (+ x430 x2584)) x412) (= (x3095 (+ 32 x417)) x2414) (= (x3095 (+ 32 x1530)) x417) (= x2993 (+ x36 32)) (= x2639 (* 128 x3007)) (not (or (and (<= x1826 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1783 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1783 x1826) (= (<= x1826 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1783 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x3095 (+ 31 x512)) x1676) (<= x1771 18446744073709551615) (= (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1164) x272) (= (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x240) x1606) (= x1978 (x2905 356)) (<= x559 18446744073709551613) (< x559 x1815) (< x1771 x2166) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x559) (<= x559 18446744073709551614)) (= (x3095 (+ x1159 x1222)) x2453) (not (> x559 x1815)) (or (and (= (<= x1676 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3069)) (> x3069 x1676)) (and (> x1676 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3069 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 1461501637330902918203684832716283019655932542975 x660) (<= 2 x1771) (not (< x1771 x1815)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x540) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3069)) (and (< x540 x3069) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3069) (<= x540 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (or (>= 2065879269376 x1077) (>= x1077 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= 18446744073709551615 x3007) (not (< x3069 x412)) (or (<= x2453 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x2453)) (= x1783 (x2951 (- x1995 x2639))) (= x1771 (+ x1606 x1815)) (= x2518 (+ x1940 32 x2166)) (= x1164 (+ x1376 63)) (= (x2905 x3067) x3007) (= x430 (x3095 (+ 32 x2453)))) (and (=> (and (not x827) (= x2518 x1356)) x904) (=> x827 x1373)))))
(assert (x634 x3023 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x354 10000) (= (x3126 x354) 0)))
(assert (=> (>= 10000 x2132) (= 0 (x3126 x2132))))
(assert (> (x872 x2520 x2732 x1371 x1843 x1016) 10000))
(assert (x730 x1819))
(assert (= (and (not x651) x852) x1951))
(assert (x730 x1780))
(assert (x730 x1253))
(assert (x730 x2097))
(assert (= (and x3081 x552) x2378))
(assert (x730 x108))
(assert (x730 x2768))
(assert (not (x2705 (x3066 x2446 x1523 x1087 x1061))))
(assert (=> (>= 10000 x437) (= (x3126 x437) 0)))
(assert (= x1778 (and (not x2116) x1218)))
(assert (x730 x1326))
(assert (x730 x201))
(assert (< (x872 x2660 x1845 x1485 x2991 x881) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2824))
(assert (= 0 (x3126 11309588061646438093662687302255421419811724423900836950936401294474059186176)))
(assert (not (x2705 (x3066 x340 x903 x2435 x986))))
(assert (x730 x2287))
(assert (x730 x1038))
(assert (x730 x1671))
(assert (x730 x2628))
(assert (x730 x2339))
(assert (= (x1107 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)) x1955))
(assert (x730 x1728))
(assert (not (x2705 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770))))
(assert (x730 x1358))
(assert (x730 x133))
(assert (x730 x1363))
(assert (x730 x1961))
(assert (=> (>= 10000 x2554) (= (x3126 x2554) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x2010 x2879)))
(assert (x2705 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (=> (>= 10000 x1997) (= 0 (x3126 x1997))))
(assert (= x1600 (or x954 x91)))
(assert (=> (<= x30 10000) (= 0 (x3126 x30))))
(assert (= x518 (and x3103 x2603)))
(assert (x730 x2019))
(assert (=> (<= x1152 10000) (= 0 (x3126 x1152))))
(assert (=> (>= 10000 x2151) (= 0 (x3126 x2151))))
(assert (x730 x63))
(assert (x730 x2079))
(assert (= (or x2274 x2944) x315))
(assert (x730 x2027))
(assert (= (or x2935 x1849) x990))
(assert (x1613 128 x3007))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (= x2520 (x1107 (x872 x2520 x2732 x1371 x1843 x1016))))
(assert (not (x2705 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023))))
(assert (x730 x2641))
(assert (x730 x2970))
(assert (not (x2705 (x2040 x1955 x2784 x639))))
(assert (x730 x2038))
(assert (x730 x2347))
(assert (x730 x1946))
(assert (x730 x1648))
(assert (x730 x863))
(assert (x730 x656))
(assert (= (x2203 (x3066 x1627 x286 x1607 x2736)) x1607))
(assert (x730 x2293))
(assert (= (x1323 (x1495 x1955 x785 x1671 x1652 x833 x347)) x1652))
(assert (x730 x2381))
(assert (x1174 x2594))
(assert (x730 x1794))
(assert (= x2446 (x1107 (x1495 x2446 x1084 x2929 x508 x2644 x2085))))
(assert (x730 x546))
(assert (= (=> (and (or x445 (and (= 0 x3036) (not x445))) (= x445 (= 0 x3036))) x2948) x145))
(assert (= (x1323 (x872 x340 x2252 x1791 x570 x1363)) x570))
(assert (=> (<= x1487 10000) (= 0 (x3126 x1487))))
(assert (x730 x1080))
(assert (= (or x406 x1014) x2256))
(assert (x730 x2757))
(assert (x730 x2424))
(assert (= x3081 (or x2418 x577)))
(assert (x730 x2653))
(assert (x730 x2114))
(assert (x730 x412))
(assert (x730 x2171))
(assert (x730 x1055))
(assert (x2705 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x730 x1494))
(assert (= x470 (x2997 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470))))
(assert (x730 x86))
(assert (=> (>= 10000 x1048) (= 0 (x3126 x1048))))
(assert (x730 x1295))
(assert (x730 x1175))
(assert (x2800 x3157))
(assert (x730 x2974))
(assert (> (x872 x1140 x314 x2331 x587 x670) 10000))
(assert (= (=> (and (= x2388 (not (< 1 x1379))) (= x1379 (x2724 x1352))) (and (=> (and (= x659 x1537) (= x2529 x2618)) x940) x2388)) x2128))
(assert (x730 x1411))
(assert (=> (>= 10000 x2682) (= (x3126 x2682) 0)))
(assert (=> (>= 10000 x1866) (= 0 (x3126 x1866))))
(assert (> (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715) 10000))
(assert (x730 x213))
(assert (= x1910 (and (not x1615) x1308)))
(assert (=> (<= x1453 10000) (= (x3126 x1453) 0)))
(assert (= x716 (and x654 (not x742))))
(assert (=> (<= x1949 10000) (= (x3126 x1949) 0)))
(assert (x730 x2867))
(assert (x730 x2721))
(assert (x730 x1682))
(assert (x730 x105))
(assert (= x2768 (x1323 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382))))
(assert (= (and x574 (not x1209)) x1429))
(assert (> (x1495 x86 x2248 x1945 x156 x566 x621) 10000))
(assert (= x70 (x79 (x872 x2446 x637 x1088 x2581 x70))))
(assert (x730 x868))
(assert (x730 x2576))
(assert (= (and x2321 x2303) x2096))
(assert (x730 x1208))
(assert (x634 x1234 32))
(assert (= x2760 (or x2474 x457)))
(assert (=> (<= x1150 10000) (= 0 (x3126 x1150))))
(assert (= (x1107 (x2476 x1627 x640)) x1627))
(assert (= (x3126 (x1495 x2660 x524 x2407 x2192 x31 x1339)) (x1495 x2660 x524 x2407 x2192 x31 x1339)))
(assert (= (and x498 x330) x2528))
(assert (x730 x922))
(assert (not (x2705 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382))))
(assert (x730 x1796))
(assert (x730 x785))
(assert (x730 x722))
(assert (x730 x360))
(assert (x1620 x240))
(assert (= (x3126 (x2040 x1955 x2784 x639)) (x2040 x1955 x2784 x639)))
(assert (x730 x2740))
(assert (x730 x2263))
(assert (x730 x87))
(assert (x1613 32 x1669))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x730 x2341))
(assert (=> (<= x1784 10000) (= (x3126 x1784) 0)))
(assert (x730 x129))
(assert (= (x2203 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608)) x193))
(assert (x730 x2878))
(assert (x730 x46))
(assert (x730 x999))
(assert (x730 x77))
(assert (=> (>= 10000 x170) (= (x3126 x170) 0)))
(assert (x730 x2992))
(assert (=> (<= x2555 10000) (= (x3126 x2555) 0)))
(assert (x730 x550))
(assert (x730 x1392))
(assert (x730 x2071))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107)))
(assert (x730 x503))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639646)))
(assert (= (x2203 (x2040 x1353 x1143 x1194)) x1194))
(assert (x634 x260 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x634 x2714 1461501637330902918203684832716283019655932542976))
(assert (= 0 (x3126 2065879269376)))
(assert (=> (>= 10000 x1791) (= 0 (x3126 x1791))))
(assert (x730 x3145))
(assert (x730 x1783))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470)))
(assert (x730 x952))
(assert (x730 x956))
(assert (x730 x2646))
(assert (x730 x2286))
(assert (= (and x2321 (not x2303)) x944))
(assert (= x1424 (x2203 (x2040 x340 x1888 x1424))))
(assert (= (and x609 x3061) x131))
(assert (x730 x583))
(assert (=> (>= 10000 x347) (= (x3126 x347) 0)))
(assert (x2800 x1510))
(assert (x2705 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (x1620 x1164))
(assert (x730 x2441))
(assert (= x2472 (x2203 (x872 x1258 x2744 x2472 x1167 x1827))))
(assert (x730 x2084))
(assert (=> (>= 10000 x458) (= 0 (x3126 x458))))
(assert (=> (>= 10000 x2296) (= (x3126 x2296) 0)))
(assert (= (x79 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)) x1242))
(assert (x634 x1513 1461501637330902918203684832716283019655932542976))
(assert (= (x3126 (x2040 x86 x2600 x395)) (x2040 x86 x2600 x395)))
(assert (= (x2040 64 x2006 1) (x3126 (x2040 64 x2006 1))))
(assert (=> (>= 10000 x2732) (= 0 (x3126 x2732))))
(assert (= (=> (and (= (x1202 x1352) x649) (= x273 (x444 x592)) (= (x1202 x780) x3029) (= (x897 x1352) x648) (= (x2630 (* x1586 32)) x876) (= x1634 (x1990 x1768)) (= x1190 (x598 x60)) (= x780 (x3095 (+ 32 x1352))) (= (x3095 (+ 32 x2045)) x2458) (= x179 (x1202 x3029)) (= (x3095 (+ x90 x550)) x2230) (= (not (> x648 1)) x124) (= x1593 (x545 1461501637330902918203684832716283019655932542975 x273)) (= (x3095 (+ x3029 32)) x592) (= (x3095 (+ 32 x1108)) x1902) (= x60 (x3095 (+ 32 x592))) (<= 1 x2795) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2502)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2502) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2502) (= 1 x179) (> x474 x2502) (<= x1586 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x2502 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x2947 1) (= (x3095 (+ x2502 160)) x474) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2502) (= (x1482 x550) x2795) (>= x649 1) (> x2795 x1586) (= x90 (x3095 (+ 32 x876))) (not (= x2502 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x1108 (x3095 (+ x2458 32))) (= (x3095 (+ x2502 32)) x2045) (= x1768 (x3095 (+ 64 x592)))) (and (=> (= x2811 x474) x989) x124)) x555))
(assert (x730 x560))
(assert (= (x872 x2520 x2732 x1371 x1843 x1016) (x3126 (x872 x2520 x2732 x1371 x1843 x1016))))
(assert (x730 x2525))
(assert (=> (>= 10000 x2407) (= 0 (x3126 x2407))))
(assert (x730 x1626))
(assert (x730 x485))
(assert (x730 x1729))
(assert (= x365 (x2316 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690))))
(assert (= (x79 (x872 x2520 x2732 x1371 x1843 x1016)) x1016))
(assert (x730 x2435))
(assert (= x759 (x2203 (x872 x41 x207 x759 x1484 x2221))))
(assert (x730 x759))
(assert (x730 x2619))
(assert (= (x2258 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078)) x1784))
(assert (x730 x2177))
(assert (x730 x1695))
(assert (x730 x90))
(assert (x730 x3001))
(assert (< (x2040 x914 x499 x291) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1378))
(assert (x730 x470))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (x730 x1035))
(assert (x634 x1798 32))
(assert (x730 x2708))
(assert (= (=> (and (or (and (= 1 x588) x3012) (and (not x3012) (and (= x2960 3) (= 1 x776) (= (x80 x1155) x2960)))) (and (<= x3139 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3139) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3139) (= (> x588 0) x3012) (= x1155 (x80 x2552)) (< x2857 x1732) (= x1781 (x80 x3139)) (= x1781 1) (<= 1 x1732) (>= x1420 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3139)) (<= x2857 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2552 (x3095 (+ x647 x3001))) (= (x2630 (* 32 x2857)) x798) (= x588 (ite (= 2 x2721) 1 0)) (= (x80 x778) x1420) (= (x3095 (+ x1017 32)) x3046) (>= x2012 1) (= (x80 x521) x1017) (= (x80 x3046) x2857) (not (= x3139 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 5 x2721) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3139)) (> x706 x3139) (= (x3095 (+ 32 x798)) x3001) (= x706 (x3095 (+ x3139 32))) (= x1732 (x80 x647)) (= (x80 x1155) x2721))) x3004) x2143))
(assert (< (x2476 x1140 x1073) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2215) (= 0 (x3126 x2215))))
(assert (= (and (not x1934) x2890) x1895))
(assert (< (x872 x1401 x1136 x1211 x1618 x813) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1107 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237)) x86))
(assert (x730 x1915))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x730 x2273))
(assert (x730 x2762))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690)))
(assert (= x368 (and x2659 x1960)))
(assert (< 10000 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506)))
(assert (= x1140 (x1107 (x3066 x1140 x2757 x2156 x1949))))
(assert (= (x3126 (x872 x1401 x1136 x1211 x1618 x813)) (x872 x1401 x1136 x1211 x1618 x813)))
(assert (=> (>= 10000 x2634) (= 0 (x3126 x2634))))
(assert (x730 x563))
(assert (= (and x2036 (not x731)) x1251))
(assert (= x610 (x2683 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237))))
(assert (x730 x2791))
(assert (x730 x289))
(assert (x730 x916))
(assert (=> (>= 10000 x1623) (= (x3126 x1623) 0)))
(assert (x730 x938))
(assert (x730 x94))
(assert (= x291 (x2203 (x2040 x914 x499 x291))))
(assert (x730 x538))
(assert (= (x2316 (x1495 x41 x2636 x2065 x2915 x2365 x511)) x2636))
(assert (x730 x775))
(assert (x730 x3140))
(assert (= (x2316 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237)) x454))
(assert (x730 x1377))
(assert (=> (>= 10000 x1349) (= 0 (x3126 x1349))))
(assert (x2800 x2102))
(assert (not (x2705 (x1495 x86 x2248 x1945 x156 x566 x621))))
(assert (x1620 x2272))
(assert (x730 x307))
(assert (= true x2206))
(assert (= (or x2190 x2841) x1772))
(assert (x730 x1942))
(assert (=> (<= x2991 10000) (= 0 (x3126 x2991))))
(assert (= (x2683 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)) x146))
(assert (x730 x224))
(assert (= (x3126 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770)) (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770)))
(assert (x730 x1079))
(assert (=> (<= x1435 10000) (= 0 (x3126 x1435))))
(assert (= x587 (x1323 (x872 x1140 x314 x2331 x587 x670))))
(assert (x730 x1010))
(assert (x730 x1009))
(assert (not (x2705 (x1495 x1627 x2555 x1856 x2287 x1889 x2382))))
(assert (x730 x1465))
(assert (= x1258 (x1107 (x1495 x1258 x1080 x692 x2178 x732 x2902))))
(assert (= (x1323 (x1495 x1140 x296 x2634 x2211 x2023 x2162)) x2211))
(assert (= (x1382 x41 x439 x193 x158 x751 x926 x2554 x608) (x3126 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608))))
(assert (= x439 (x2316 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608))))
(assert (x730 x2808))
(assert (= x2976 (and x2528 (not x515))))
(assert (x400 x3163))
(assert (x730 x407))
(assert (=> (>= 10000 x1301) (= 0 (x3126 x1301))))
(assert (x730 x1169))
(assert (x730 x875))
(assert (= x1744 (=> (and (<= x1824 255) (>= 127 x345) (= (not (= x864 0)) x2910) (= x2473 x1391) (= x831 true) (= x3060 false) (= x1367 (x1244 x2384)) (<= x345 127) (= x1677 false) (= x1318 36) (= false x2822) (= false x2359) (= false x2969) (= false x433) (= x2006 x2473) (= false x1118) (= x2602 false) (= x1320 false) (= x2720 2621382288) (= x1824 (x2334 x677)) (<= 1 x1367) (= x2688 false) (= (ite (not (= x1824 0)) 1 0) x864) (= (x2040 64 x2006 1) x677)) x2910)))
(assert (= x1277 (or x2749 x3164)))
(assert (x730 x1900))
(assert (x730 x1634))
(assert (=> (<= x1817 10000) (= 0 (x3126 x1817))))
(assert (x730 x1372))
(assert (x730 x3120))
(assert (=> (<= x295 10000) (= 0 (x3126 x295))))
(assert (=> (>= 10000 x2962) (= (x3126 x2962) 0)))
(assert (x730 x1755))
(assert (x634 x2272 1461501637330902918203684832716283019655932542976))
(assert (= (x2203 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867)) x87))
(assert (x730 x1848))
(assert (x730 x2429))
(assert (=> (<= x374 10000) (= (x3126 x374) 0)))
(assert (x730 x3101))
(assert (< 10000 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)))
(assert (x400 x2877))
(assert (x634 x617 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1174 x249))
(assert (x730 x1152))
(assert (x730 x1599))
(assert (x730 x2259))
(assert (x730 x380))
(assert (x730 x1036))
(assert (< (x2476 x2446 x391) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2993))
(assert (x730 x2848))
(assert (x730 x1957))
(assert (x730 x1869))
(assert (= x1853 (=> (and (= (x1813 x2609) x2764) (<= x2239 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1748 (x3095 (+ x3030 32))) (= x551 (x2630 (* x1224 64))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x201)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2239) (= (x3095 (+ 1 x630)) x1224) (= x562 (x3095 (+ 32 x2609))) (= (x3095 (+ x2764 64)) x1289) (= x201 (x3095 (+ x726 x562))) (= (x1813 x562) x630) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2239) (< x2239 x1748) (= x726 (x2951 (- x551 32))) (= x3030 (x3095 (+ x201 32))) (= x2678 x1748)) x1896)))
(assert (= (x2258 (x1495 x1258 x1080 x692 x2178 x732 x2902)) x2902))
(assert (x730 x2155))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2040 x340 x1888 x1424)))
(assert (x730 x1262))
(assert (x730 x202))
(assert (= (x2316 (x2358 x340 x1816 x582 x170 x2830 x1300 x481)) x1816))
(assert (< 10000 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906)))
(assert (= (x2203 (x1495 x86 x2248 x1945 x156 x566 x621)) x1945))
(assert (x400 x3123))
(assert (= 0 (x3126 30450320296159908085414496432607297912280636920234228256796789313041262968832)))
(assert (x730 x508))
(assert (= (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x523) (>= 1461501637330902918203684832716283019655932542975 x1103) (not (= x1291 x2946)) (not (= x200 x1924)) x2796 (not (= x2234 x2151)) x615 (>= x3111 0) (= (> (x1244 x200) 0) x1582) (<= 0 x2648) (= x1924 x1066) (>= 2065879269444 x1995) (>= x523 1) x1582 (>= x325 0) (= x84 (> (x1244 x2524) 0)) (<= x349 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x200 x2384)) (not (= x2151 x2524)) (>= 1461501637330902918203684832716283019655932542975 x3113) x1335 (<= 0 x1346) (>= 1461501637330902918203684832716283019655932542975 x2234) (<= 0 x165) (not (= x901 x2524)) (<= 0 x1305) x2147 (>= 4294967295 x2942) (not (= x2946 x2524)) (>= 1461501637330902918203684832716283019655932542975 x27) (>= 4294967295 x1560) (not (= x200 x2151)) (not (= x1924 x2151)) (= x615 (< 0 (x1244 x2151))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1305) (not (= x200 x1291)) (not (= x901 x2234)) (= x2384 x1103) x84 (<= x85 4294967295) (not (= x2946 x901)) (not (= x2234 x1291)) (not (= x2524 x2234)) (not (= x1924 x2234)) (>= x200 1) (not (= x200 x2524)) (not (= x1291 x901)) (<= 1 x2384) (>= 1461501637330902918203684832716283019655932542975 x2384) (<= x693 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1066 1461501637330902918203684832716283019655932542975) (<= 0 x693) (>= 1461501637330902918203684832716283019655932542975 x2172) (not (= x1924 x2384)) (>= x287 0) (not (= x2524 x2384)) (<= x1384 1461501637330902918203684832716283019655932542975) (>= x27 0) (not (= x1291 x1924)) (>= 4294967295 x2176) (>= 1461501637330902918203684832716283019655932542975 x1924) (= x1595 (> (x1244 x1924) 0)) (>= 1461501637330902918203684832716283019655932542975 x98) (>= x1384 1) (<= x920 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2452 (>= x920 0) (not (= x1924 x2524)) (= x757 0) (not (= x1291 x2384)) (not (= x2234 x2946)) (>= 1461501637330902918203684832716283019655932542975 x200) (<= 0 x349) (<= x47 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x325) (<= 0 x47) x1595 (<= 1 x901) (>= x2234 1) (>= x1066 1) (not (= x901 x1924)) (= (< 0 (x1244 x901)) x2444) (>= 1461501637330902918203684832716283019655932542975 x2151) (not (= x1291 x2151)) (not (= x2384 x2151)) (<= x165 1461501637330902918203684832716283019655932542975) (<= x690 4294967295) (<= 1 x2524) (>= 4294967295 x93) (>= 1461501637330902918203684832716283019655932542975 x901) (not (= x2151 x2946)) (= x523 x200) (<= 1 x1924) (not (= x1924 x2946)) (>= x1995 548) (<= 1 x2946) (= 32 x2815) x2444 (= x1384 x200) (>= 1461501637330902918203684832716283019655932542975 x2524) (<= 1 x1291) (<= 0 x3113) (= x1335 (< 0 (x1244 x2234))) (not (= x901 x200)) (not (= x2946 x2384)) (= (< 0 (x1244 x1291)) x2796) (not (= x200 x2946)) (>= 4294967295 x676) (>= x1103 1) (not (= x2151 x901)) (<= x3111 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1291) (>= 1461501637330902918203684832716283019655932542975 x2946) (= (< 0 (x1244 x2384)) x2452) (<= x65 4294967295) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1346) (= (> (x1244 x2946) 0) x2147) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x287) (>= x2151 1) (not (= x2384 x2234)) (<= x2648 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x2234 x200)) (not (= x2384 x901)) (not (= x1291 x2524))) (and (and (and (= x202 (+ x1025 32)) (= x788 (+ x3013 32)) (= (+ 32 x1780) x2833) (= x2119 (* 32 x690)) (>= x2343 0) (= (* 128 x65) x121) (= (- x1780 36) x336) (= x703 (+ 32 x2119 x1025)) (= x1780 (+ x121 420)) (> x1440 x556) (= (+ x520 32 x45) x1025) (= x1020 (- x3013 36)) (= x3013 (+ x656 x1780 32)) (= x325 x793) (>= x520 x1440) (= (+ x45 32) x1033) (>= 134217728 x2343) (= (- x45 36) x409) (= x45 (+ x2053 x3013 32)) (= x2176 x1440) (= (- x1025 36) x3028) (= (* x676 160) x2053) (= x520 (* x2343 32)) (= x656 (* x2942 160)) (= (* 32 (- x2343 1)) x556)) (and (= x952 x1305) (and (and (= x1995 x703) (= x246 false) (= x693 x1904)) (and (= x1550 x27) (and (= x2792 x3111) (and (or (and x2077 (and (>= 4294967295 x228) (>= x228 32) (= 1 x2742))) (and (not x2077) (= x2742 x2657))) (and (= (x539 x1128) x1265) (<= x2802 127) (<= 1 x2433) (<= x987 1461501637330902918203684832716283019655932542975) (= x3121 37664329658542632380461339884011895550187483938955784695590509376205521682432) (<= x228 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x27 x1128) (<= x2802 127) (= x2433 (x1244 x2234)) (= false x3065) (= x2077 (< 0 x2657)) (= x2846 37664329658542632380461339884011895550187483938955784695590509376205521682432) (= (x1438 x2234) x2443) (= x1494 x2443) (<= 32 x228) (= x2500 false) (= 128 x353) (= x37 2189116922)))))))) (= x860 x3113))) x1206) x624))
(assert (x730 x2442))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x86 x2317)))
(assert (x730 x788))
(assert (=> (>= 10000 x1638) (= (x3126 x1638) 0)))
(assert (x730 x2985))
(assert (=> (<= x340 10000) (= 0 (x3126 x340))))
(assert (= (x2203 (x1495 x2660 x524 x2407 x2192 x31 x1339)) x2407))
(assert (x730 x3158))
(assert (x730 x451))
(assert (=> (<= x2984 10000) (= 0 (x3126 x2984))))
(assert (x730 x1537))
(assert (x730 x1423))
(assert (= x2322 (=> (and (= x2496 1) (= 0 x1537) (= x2618 1)) x2128)))
(assert (x730 x2570))
(assert (=> (<= x382 10000) (= 0 (x3126 x382))))
(assert (=> (>= 10000 x1924) (= (x3126 x1924) 0)))
(assert (= (x1107 (x872 x1353 x1953 x1712 x627 x30)) x1353))
(assert (x730 x1314))
(assert (x1008 x1318))
(assert (x730 x543))
(assert (= x1643 (and x2482 x1043)))
(assert (=> (<= x2929 10000) (= (x3126 x2929) 0)))
(assert (x730 x1702))
(assert (not (x2705 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048))))
(assert (=> (<= x2660 10000) (= (x3126 x2660) 0)))
(assert (x730 x2059))
(assert (= (x1107 (x872 x1140 x314 x2331 x587 x670)) x1140))
(assert (not (x2705 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470))))
(assert (= (x3126 (x1495 x2010 x206 x372 x729 x2819 x1580)) (x1495 x2010 x206 x372 x729 x2819 x1580)))
(assert (= x914 (x1107 (x1495 x914 x1297 x1967 x1427 x1724 x2682))))
(assert (=> (<= x2337 10000) (= 0 (x3126 x2337))))
(assert (= (or x2760 x944) x902))
(assert (not (x2705 (x1495 x1353 x488 x2082 x1350 x3006 x1453))))
(assert (x730 x1737))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023)))
(assert (x730 x1159))
(assert (x730 x988))
(assert (x730 x3121))
(assert (x1174 x418))
(assert (=> (<= x1607 10000) (= 0 (x3126 x1607))))
(assert (x730 x384))
(assert (x1620 x2595))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1495 x1955 x785 x1671 x1652 x833 x347)))
(assert (x730 x1646))
(assert (not (x2705 (x2040 x41 x130 x982))))
(assert (x730 x30))
(assert (x1613 79228162514264337593543950336 x2318))
(assert (= (x3126 (x2040 x2520 x3117 x311)) (x2040 x2520 x3117 x311)))
(assert (not (x2705 (x2040 64 x2006 1))))
(assert (x730 x1053))
(assert (x730 x1017))
(assert (x730 x1846))
(assert (x2800 x2999))
(assert (x730 x2743))
(assert (x730 x2252))
(assert (x730 x490))
(assert (= (x2258 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171)) x2279))
(assert (= (x2203 (x3066 x340 x903 x2435 x986)) x2435))
(assert (=> (>= 10000 x2435) (= 0 (x3126 x2435))))
(assert (x730 x2873))
(assert (x730 x888))
(assert (x730 x2129))
(assert (x730 x1882))
(assert (=> (<= x2340 10000) (= (x3126 x2340) 0)))
(assert (x730 x699))
(assert (x730 x3029))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x914 x1396)))
(assert (x730 x1560))
(assert (=> (<= x702 10000) (= 0 (x3126 x702))))
(assert (x634 x249 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x461))
(assert (= (x2203 (x3066 x914 x1354 x34 x2368)) x34))
(assert (not (x2705 (x2040 x340 x1888 x1424))))
(assert (= (x1107 (x2476 x914 x1396)) x914))
(assert (x730 x1353))
(assert (= x2691 (x2203 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492))))
(assert (= (x2316 (x2040 x86 x2600 x395)) x2600))
(assert (= x857 (x2203 (x3066 x2660 x1931 x857 x111))))
(assert (= x1003 (x2683 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337))))
(assert (x730 x1337))
(assert (< (x3066 x1627 x286 x1607 x2736) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x3137))
(assert (x730 x1654))
(assert (= x489 (and (not x1689) x1134)))
(assert (> (x1495 x2446 x1084 x2929 x508 x2644 x2085) 10000))
(assert (x730 x214))
(assert (x730 x88))
(assert (=> (>= 10000 x34) (= 0 (x3126 x34))))
(assert (= (x1107 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770)) x2520))
(assert (x730 x1001))
(assert (= x976 (and (not x1735) x1674)))
(assert (= x1286 (x79 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337))))
(assert (x730 x2020))
(assert (=> (>= 10000 x2348) (= (x3126 x2348) 0)))
(assert (x730 x2466))
(assert (x730 x294))
(assert (=> (<= x207 10000) (= (x3126 x207) 0)))
(assert (= x1401 (x1107 (x2476 x1401 x468))))
(assert (= (x2316 (x3066 x2446 x1523 x1087 x1061)) x1523))
(assert (x730 x1905))
(assert (x730 x1263))
(assert (=> (>= 10000 x130) (= 0 (x3126 x130))))
(assert (=> (>= 10000 x2001) (= (x3126 x2001) 0)))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639615) 0))
(assert (x730 x2776))
(assert (x730 x1945))
(assert (= (and x2522 x2677) x2624))
(assert (=> (>= 10000 x2455) (= (x3126 x2455) 0)))
(assert (= (x2683 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787)) x2787))
(assert (=> (<= x2271 10000) (= (x3126 x2271) 0)))
(assert (=> (<= x2234 10000) (= 0 (x3126 x2234))))
(assert (x730 x20))
(assert (= (x2258 (x1495 x2660 x524 x2407 x2192 x31 x1339)) x1339))
(assert (=> (<= x146 10000) (= 0 (x3126 x146))))
(assert (= x399 (and x1795 (not x971))))
(assert (x730 x1593))
(assert (not (x2705 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078))))
(assert (< (x2040 x2660 x290 x23) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1490))
(assert (= (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869) (x3126 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869))))
(assert (= (x1323 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)) x1090))
(assert (x730 x3149))
(assert (x730 x2548))
(assert (x1613 32 x2343))
(assert (x730 x2946))
(assert (x730 x1117))
(assert (x730 x1547))
(assert (= (x3126 (x1495 x1353 x488 x2082 x1350 x3006 x1453)) (x1495 x1353 x488 x2082 x1350 x3006 x1453)))
(assert (x634 x260 32))
(assert (x730 x3069))
(assert (= (x79 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107)) x1623))
(assert (x730 x2362))
(assert (x730 x1871))
(assert (< (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2885))
(assert (x730 x1859))
(assert (= (and x2206 (not x2077)) x195))
(assert (x730 x2213))
(assert (= (and x1209 x574) x2749))
(assert (=> (>= 10000 x2776) (= 0 (x3126 x2776))))
(assert (= (x79 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869)) x2412))
(assert (x730 x200))
(assert (x730 x1992))
(assert (x2705 2065879269444))
(assert (x730 x1581))
(assert (x730 x1467))
(assert (=> (<= x1856 10000) (= (x3126 x1856) 0)))
(assert (x730 x1062))
(assert (x730 x901))
(assert (x730 x1362))
(assert (= (x2316 (x3066 x86 x768 x2142 x811)) x768))
(assert (= x1810 (and (not x2193) x601)))
(assert (x730 x1313))
(assert (< (x1495 x86 x2248 x1945 x156 x566 x621) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x242))
(assert (< (x2358 x1258 x2575 x87 x2311 x2009 x55 x867) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1977))
(assert (x730 x907))
(assert (=> (<= x2381 10000) (= (x3126 x2381) 0)))
(assert (x730 x1917))
(assert (= x1150 (x2203 (x3066 66 x2962 x1150 x589))))
(assert (= (=> (and (= x2693 (< 0 x1433)) (= (x507 x2254) x1433) (= (x507 x2582) x2254)) (and (=> (and (not x2693) (and (= x2097 x2582) (= x1030 x770))) x15) (=> (and (and (= (x507 x2582) x1800) (= (x3095 (+ 32 x1030)) x1210) (= x2549 (x3095 (+ 32 x678))) (= x451 (x3095 (+ x1210 32))) (= (> x2467 0) x597) (= (x3095 (+ x451 32)) x3084) (= (x305 x1514) x2467) (>= x2451 1) (= x678 (x507 x2882)) (= x1514 (x507 x3122)) (= (x3095 (+ x1800 32)) x2882) (= (x507 x678) x1992) (= x925 (x545 1461501637330902918203684832716283019655932542975 x1992)) (= x2451 (x507 x1800)) (= x1283 (x3095 (+ x1514 32))) (= x3122 (x3095 (+ 32 x2549))) (= (x3095 (+ x1210 128)) x3070) (= x2007 (x3095 (+ x3084 32))) (= x1685 (x3095 (+ 32 x3070))) (= (x507 x2549) x44)) x2693) (and (=> (not x597) x1936) (=> (and (and (= x2193 (< 32 x2467)) (= (x2586 x1283) x2396)) x597) (and (=> (not x2193) x1936) (=> (and (and (= x622 (x1742 x1622)) (= (x3095 (+ x1283 32)) x1622) (= (> x2467 64) x1579) (= x2480 (x3095 (+ x1685 32)))) x2193) (and (=> (and x1579 (and (= (x2149 x1231) x2347) (= x3010 (< 96 x2467)) (= x720 (x3095 (+ x1685 64))) (= x1231 (x3095 (+ 64 x1283))))) (and (=> (not x3010) x1936) (=> x3010 x1830))) (=> (not x1579) x1936))))))))) x1704))
(assert (x730 x3079))
(assert (x730 x1415))
(assert (x730 x2376))
(assert (x730 x62))
(assert (x730 x1983))
(assert (= x2873 (x1323 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337))))
(assert (x730 x354))
(assert (= x2690 (x2683 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690))))
(assert (= x2702 (or x1765 x889)))
(assert (x730 x885))
(assert (x730 x1543))
(assert (= x535 (and x1028 (not x2275))))
(assert (= (x2258 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715)) x2182))
(assert (x730 x675))
(assert (= (x1107 (x1495 x1627 x2555 x1856 x2287 x1889 x2382)) x1627))
(assert (x730 x2008))
(assert (= x2564 (x2258 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509))))
(assert (x730 x3057))
(assert (x730 x1661))
(assert (x730 x3032))
(assert (x730 x1075))
(assert (= (and (not x2197) x1219) x1089))
(assert (x730 x67))
(assert (x730 x1408))
(assert (= x1134 (and x2125 x756)))
(assert (> (x3066 66 x2962 x1150 x589) 10000))
(assert (x730 x957))
(assert (=> (<= x2733 10000) (= 0 (x3126 x2733))))
(assert (= (=> (and (not (= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x2430 (x606 x1408)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3003) (= x843 (x3095 (+ 32 x407))) (= x1804 (x2793 x550)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x3003)) (= x1883 (x545 1461501637330902918203684832716283019655932542975 x3163)) (= x3163 (x6 x843)) (= (x3095 (+ 32 x583)) x1245) (= (x3095 (+ x843 32)) x1408) (= (x2360 x1059) x1619) (= x292 (x3095 (+ 32 x550))) (= (x3095 (+ 32 x1475)) x583) (< x3003 x2710) (>= x1804 1) (<= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2091 x1146) x1444) (not (= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3095 (+ 32 x1245)) x2988) (= x858 (not (> x1444 1))) (= x2710 (x3095 (+ 160 x3003))) (= x1475 (x3095 (+ 32 x3003))) (= x1059 (x3095 (+ x843 64)))) (and x858 (=> (and (= x381 x3149) (= x2710 x1406) (= x364 x164)) x1252))) x748))
(assert (x730 x2366))
(assert (x730 x1157))
(assert (x1620 x2729))
(assert (x730 x3041))
(assert (x2800 x1586))
(assert (= (x2203 (x872 x2660 x1845 x1485 x2991 x881)) x1485))
(assert (=> (>= 10000 x3068) (= 0 (x3126 x3068))))
(assert (x730 x493))
(assert (=> (<= x1515 10000) (= (x3126 x1515) 0)))
(assert (x730 x2471))
(assert (x730 x648))
(assert (=> (<= x1149 10000) (= 0 (x3126 x1149))))
(assert (x400 x1513))
(assert (= x2006 (x2316 (x2040 64 x2006 1))))
(assert (= x467 (x79 (x872 x86 x2223 x1997 x2881 x467))))
(assert (=> (<= x281 10000) (= (x3126 x281) 0)))
(assert (not (x2705 (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171))))
(assert (= x1096 (x2683 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078))))
(assert (x400 x2718))
(assert (x730 x3134))
(assert (x730 x588))
(assert (< (x2358 x2660 x977 x1773 x2109 x937 x2503 x453) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1480))
(assert (x730 x208))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x872 x2010 x2188 x2174 x1787 x283)))
(assert (x1620 x1796))
(assert (= (x1323 (x872 x1258 x2744 x2472 x1167 x1827)) x1167))
(assert (x730 x2368))
(assert (= (x1323 (x3066 x2520 x1785 x911 x2970)) x2970))
(assert (x730 x782))
(assert (< (x872 x1627 x2483 x109 x2307 x1490) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1107 (x3066 x1258 x885 x92 x1215)) x1258))
(assert (= x1385 (and x2521 (not x1890))))
(assert (=> (<= x1724 10000) (= 0 (x3126 x1724))))
(assert (x730 x310))
(assert (x730 x698))
(assert (not (x2705 (x2040 x1627 x2923 x280))))
(assert (x730 x283))
(assert (x730 x48))
(assert (x730 x2098))
(assert (= (x2316 (x2040 x2660 x290 x23)) x290))
(assert (x730 x1190))
(assert (< (x1495 x2660 x524 x2407 x2192 x31 x1339) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x3151))
(assert (= (and x1844 x131) x2328))
(assert (= (x2316 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453)) x977))
(assert (x730 x2575))
(assert (= x452 (or x1369 x368)))
(assert (= (and (not x1799) x1590) x805))
(assert (x730 x2006))
(assert (x730 x1994))
(assert (x730 x2682))
(assert (= x1447 (=> (and (= (not (< 128 x2155)) x2911) (= x1835 (x2996 x2805)) (= (x3095 (+ 96 x1076)) x2170) (= x2805 (x3095 (+ 96 x2622)))) (and x1501 x2911))))
(assert (x730 x2181))
(assert (x1620 x1317))
(assert (x1174 x997))
(assert (= (x3126 (x2040 x1258 x2380 x812)) (x2040 x1258 x2380 x812)))
(assert (=> (>= 10000 x3125) (= 0 (x3126 x3125))))
(assert (x730 x570))
(assert (x730 x267))
(assert (x730 x2563))
(assert (= x2296 (x1323 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048))))
(assert (= (x2203 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690)) x3129))
(assert (=> (>= 10000 x2384) (= 0 (x3126 x2384))))
(assert (x1620 1461501637330902918203684832716283019655932542976))
(assert (x730 x1831))
(assert (x730 x2736))
(assert (= (and x1674 x1735) x682))
(assert (=> (>= 10000 x903) (= 0 (x3126 x903))))
(assert (=> (<= x1779 10000) (= (x3126 x1779) 0)))
(assert (x730 x2235))
(assert (x730 x2820))
(assert (< 10000 (x1495 x1140 x296 x2634 x2211 x2023 x2162)))
(assert (x730 x2544))
(assert (=> (<= x2755 10000) (= (x3126 x2755) 0)))
(assert (= x2379 (x2683 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379))))
(assert (not (x2705 (x2040 x2446 x1276 x1801))))
(assert (=> (>= 10000 x587) (= 0 (x3126 x587))))
(assert (=> (>= 10000 x31) (= 0 (x3126 x31))))
(assert (x730 x2342))
(assert (x730 x589))
(assert (x730 x557))
(assert (= (x2203 (x2040 x2010 x1777 x1062)) x1062))
(assert (< (x3066 x1258 x885 x92 x1215) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1776) (= 0 (x3126 x1776))))
(assert (x730 x1711))
(assert (= (x3126 (x2040 x914 x499 x291)) (x2040 x914 x499 x291)))
(assert (x730 x65))
(assert (= (x79 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787)) x567))
(assert (x730 x2434))
(assert (< (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1866))
(assert (x730 x1975))
(assert (x730 x1081))
(assert (=> (<= x1314 10000) (= (x3126 x1314) 0)))
(assert (x730 x499))
(assert (= (x2316 (x872 x1401 x1136 x1211 x1618 x813)) x1136))
(assert (x730 x1379))
(assert (=> (>= 10000 x914) (= (x3126 x914) 0)))
(assert (x730 x1609))
(assert (x2800 x2464))
(assert (=> (<= x2614 10000) (= 0 (x3126 x2614))))
(assert (x730 x619))
(assert (x1174 x1796))
(assert (=> (>= 10000 x829) (= 0 (x3126 x829))))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639646))
(assert (x730 x159))
(assert (x730 x1899))
(assert (x730 x2605))
(assert (x730 x2668))
(assert (= (x1323 (x872 x1955 x3110 x999 x2468 x2733)) x2468))
(assert (=> (<= x86 10000) (= (x3126 x86) 0)))
(assert (not (x2705 (x2476 x86 x2317))))
(assert (= (x5 x1123 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1041 x1123 248)))
(assert (= (x2997 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715)) x715))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3066 x914 x1354 x34 x2368)))
(assert (= (and x3105 x1981) x1409))
(assert (x730 x2330))
(assert (x730 x534))
(assert (x730 x2649))
(assert (= (x2203 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509)) x1099))
(assert (x730 x2543))
(assert (< 10000 (x1495 x1258 x1080 x692 x2178 x732 x2902)))
(assert (x730 x2305))
(assert (=> (>= 10000 x911) (= 0 (x3126 x911))))
(assert (x730 x1368))
(assert (x2705 18446744073709551613))
(assert (= (x3126 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787)) (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787)))
(assert (x730 x3117))
(assert (> (x2040 x1955 x2784 x639) 10000))
(assert (x730 x1350))
(assert (> (x1495 x2010 x206 x372 x729 x2819 x1580) 10000))
(assert (x1620 x2877))
(assert (x730 x1818))
(assert (= x1587 (=> (and (= (x2664 x1146) x494) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x550) (>= 18446744073709551615 x1812) (= (x2664 x389) x1352) (< x550 x1972) (= x1812 (x3095 (+ x869 x494))) (= (* x1812 32) x579) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x494 x869))) (<= x550 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2664 192) x7) (= x1146 (x2664 x2993)) (>= x1972 1) (= x869 (x2664 x1352)) (= (= 0 x1812) x383) (= x1972 (x3095 (+ x550 (mod (+ 32 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x550) (= (x2664 x7) x1811)) (and (=> (and (and (= x1209 (= 1 x1812)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1972)) (not (= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x2533 (x3095 (+ x2971 32))) (= (x3095 (+ x550 32)) x1642) (= (x3095 (+ x1972 160)) x2559) (= x394 (x3095 (+ x2298 32))) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3095 (+ 32 x1642)) x1298) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2971 (x3095 (+ x1972 32))) (= (x2951 (- x1812 1)) x629) (< x1972 x2559) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2298 (x3095 (+ x2533 32))) (not (= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639776))) (not x383)) (and (=> (and (not x1209) (and (= x1504 (x3095 (+ x2559 32))) (not (= x2559 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2559) (> x53 x2559) (not (= x2559 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x3095 (+ 32 x1753)) x324) (= (x3095 (+ x1504 32)) x1753) (<= x2559 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2559 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2559)) (= (= 1 x629) x1578) (= (x3095 (+ 160 x2559)) x53) (= (x3095 (+ 32 x324)) x2320))) (and (=> (not x1578) x924) (=> (and x1578 (= x53 x2105)) x807))) (=> (and x1209 (= x2559 x2105)) x807))) (=> (and x383 (= x1972 x3003)) x2244)))))
(assert (x730 x1342))
(assert (= (x1323 (x3066 x1401 x2276 x1377 x2061)) x2061))
(assert (x730 x2729))
(assert (x730 x610))
(assert (x730 x2326))
(assert (= (x2683 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)) x1509))
(assert (x730 x312))
(assert (x730 x1562))
(assert (x730 x372))
(assert (x730 x2564))
(assert (= (x2258 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690)) x2141))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x41 x2348)))
(assert (= x1817 (x2316 (x3066 x41 x1817 x354 x714))))
(assert (x730 x1944))
(assert (x730 x2882))
(assert (= (x3126 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023)) (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023)))
(assert (x730 x2903))
(assert (= (x2258 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506)) x1536))
(assert (x1006 x3023))
(assert (x730 x1094))
(assert (=> (<= x2137 10000) (= 0 (x3126 x2137))))
(assert (= x2521 (and x1935 x1792)))
(assert (= x1627 (x1107 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382))))
(assert (x730 x1748))
(assert (x730 x1858))
(assert (x730 x1902))
(assert (x730 x1507))
(assert (= x1724 (x79 (x1495 x914 x1297 x1967 x1427 x1724 x2682))))
(assert (x730 x2380))
(assert (x730 x637))
(assert (x730 x2090))
(assert (< (x2040 x1401 x1347 x593) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x3130))
(assert (x730 x758))
(assert (=> (<= x2737 10000) (= 0 (x3126 x2737))))
(assert (x730 x1255))
(assert (x730 x2755))
(assert (=> (>= 10000 x878) (= (x3126 x878) 0)))
(assert (not (x2705 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379))))
(assert (= x2876 (x2258 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382))))
(assert (= (x2040 x2446 x1276 x1801) (x3126 (x2040 x2446 x1276 x1801))))
(assert (x730 x2866))
(assert (=> (<= x1880 10000) (= (x3126 x1880) 0)))
(assert (x730 x1420))
(assert (x730 x1030))
(assert (= x1417 (=> (and (<= x1402 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2951 (- x2364 x1402)) x359) (= (x3095 (+ 31 x461)) x617) (= x2037 (<= x2520 224)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1402) (= (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x617) x792) (= (x2951 (- x359 32)) x1199) (< x1402 x2364) (= x2520 (x2899 x1402)) (= (x3095 (+ x792 x2027)) x2364) (= (x3095 (+ x1402 32)) x3037) (= x1734 (x3095 (+ x2027 x461))) (<= x1402 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x2364 1)) (and (=> (and (= (x3095 (+ 32 x3037)) x2038) (= (x2899 x2419) x2589) (= (x89 x646) x223) (= (x2899 x1342) x2292) (= (x2899 x522) x422) (= (x2899 x2264) x1410) (= (x3095 (+ x3037 64)) x88) (= x3057 (x2899 x217)) (= x1843 (x2899 x2794)) (= x1455 (x3095 (+ x3037 64))) (= x1314 (x2899 x3037)) (= (x3095 (+ 96 x3037)) x1342) (= (x3095 (+ 32 x3037)) x217) (= x1301 (x2899 x3037)) (= (x3095 (+ x3037 128)) x1581) (= (x2899 x763) x911) (= (x3095 (+ x3037 32)) x763) (= (x2899 x3037) x1785) (= x522 (x3095 (+ x3037 64))) (= (x2040 x2520 x3117 x311) x1132) (= (x2899 x1225) x3032) (= (x3095 (+ 32 x2719)) x242) (= (x2899 x3037) x2732) (= x2419 (x3095 (+ x3037 96))) (= x1730 (x2899 x3037)) (= (x2899 x2295) x1779) (= (x3095 (+ x3037 128)) x46) (>= x1070 1) (= x2778 (x1495 x2520 x1730 x3032 x1572 x2589 x1647)) (= x2727 (x3095 (+ x3037 32))) (= (x2476 x2520 x1301) x604) (= x704 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)) (= x2346 (x2899 x2717)) (= x3114 (x595 0)) (= (x3095 (+ x3037 64)) x2794) (= x146 (x2899 x122)) (= (x2899 x25) x1770) (= (x3095 (+ 160 x3037)) x2295) (= x2546 (x872 x2520 x2732 x1371 x1843 x1016)) (= (x2899 x1581) x1647) (= (x2899 x1455) x2970) (= x1371 (x2899 x2038)) (= (not (< 1 x223)) x2671) (= (x3095 (+ 64 x3037)) x2717) (= x1225 (x3095 (+ x3037 32))) (= (x2899 x88) x1572) (= (x3066 x2520 x1785 x911 x2970) x236) (= (x2899 x3037) x1428) (= x3117 (x2899 x3037)) (= (x3095 (+ x3037 160)) x122) (= x895 (x2899 x1820)) (= x238 (x2899 x46)) (= (ite (= 0 x2520) x3114 (ite (>= 32 x2520) x604 (ite (<= x2520 64) x1132 (ite (>= 96 x2520) x236 (ite (>= 128 x2520) x2546 (ite (<= x2520 160) x2778 (ite (<= x2520 192) x704 (ite (<= x2520 224) x125 x2271)))))))) x1052) (= (x3095 (+ 32 x3037)) x2264) (= x125 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770)) (= x2059 (x2899 x1597)) (= x846 (x3095 (+ x3037 96))) (= x1070 (x2899 x2719)) (= x1597 (x3095 (+ x3037 128))) (= x1016 (x2899 x846)) (= x1820 (x3095 (+ 96 x3037))) (= (x89 x1571) x646) (= x25 (x3095 (+ 192 x3037))) (= (x2899 x2727) x311)) (and (=> (= x2364 x2025) x2813) x2671)) x2037))))
(assert (x730 x2150))
(assert (not (x2705 (x2476 x1401 x468))))
(assert (x1006 x2595))
(assert (not (x2705 (x2476 x914 x1396))))
(assert (x730 x1527))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x872 x1258 x2744 x2472 x1167 x1827)))
(assert (x730 x1448))
(assert (x634 x1796 1461501637330902918203684832716283019655932542976))
(assert (x730 x1328))
(assert (x730 x2501))
(assert (= (and x2094 x2527) x2076))
(assert (= x829 (x2316 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023))))
(assert (= (x1495 x340 x1638 x1834 x2210 x285 x1956) (x3126 (x1495 x340 x1638 x1834 x2210 x285 x1956))))
(assert (x730 x481))
(assert (x730 x1084))
(assert (x730 x2554))
(assert (x730 x2416))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x1353 x1864)))
(assert (= (x79 (x872 x41 x207 x759 x1484 x2221)) x2221))
(assert (=> (>= 10000 x1464) (= (x3126 x1464) 0)))
(assert (= (x3126 (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690)) (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690)))
(assert (= (=> (and (= x414 (x3095 (+ x565 x1182))) (= x483 (* 32 x3157)) (= x133 (x3095 (+ x1599 x483))) (= (x3095 (+ x818 32)) x187) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x818) (= x1328 x3157) (= (x1348 x818) x1401) (= (x2951 (- x297 x818)) x1217) (= x1441 (x2951 (- x1217 32))) (<= 1 x414) (<= x818 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x297 x818) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x818) (>= x297 1) (= x297 x414) (= x133 x316) (<= x3157 4) (= (* 32 x3157) x565) (= x2387 (<= x1401 224))) (and x2387 (=> (and (= (x3095 (+ 32 x1151)) x2309) (= (x2951 (- x380 x297)) x1519) (= (x1348 x288) x1618) (= (x3095 (+ 64 x187)) x288) (= x63 (x3095 (+ 32 x187))) (= (x3095 (+ x187 96)) x427) (= (x3095 (+ 32 x297)) x2508) (= (x1348 x684) x1110) (= x468 (x1348 x187)) (= x2531 (x3095 (+ 64 x187))) (= x2120 (x1348 x2126)) (= (x2951 (- x1519 32)) x1654) (= (x3095 (+ 128 x187)) x2880) (= (x545 1461501637330902918203684832716283019655932542975 x879) x151) (= (x1348 x427) x2412) (= (x1256 x297) x2660) (= x486 (x3095 (+ x187 96))) (= x2051 (x1348 x2562)) (= x2057 (x1348 x187)) (= (x1348 x2330) x1515) (= (x1348 x187) x1136) (= x1731 (x545 1461501637330902918203684832716283019655932542975 x2729)) (= (x3095 (+ x3024 288)) x380) (= x921 (x1348 x2257)) (= x813 (x1348 x2583)) (< x297 x380) (= x2330 (x3095 (+ 64 x187))) (= x1869 (x1348 x2219)) (= x2729 (x1348 x153)) (= (x1348 x187) x2276) (= x2562 (x3095 (+ x187 64))) (= x2766 (x2476 x1401 x468)) (= x1338 (x3095 (+ x1693 32))) (= (<= x2660 224) x100) (= (x1348 x3014) x593) (= x567 (x1348 x486)) (= x669 (x1348 x1383)) (= (ite (= x1401 0) x2491 (ite (>= 32 x1401) x2766 (ite (<= x1401 64) x2266 (ite (>= 96 x1401) x1032 (ite (>= 128 x1401) x2297 (ite (>= 160 x1401) x870 (ite (>= 192 x1401) x514 (ite (<= x1401 224) x2046 x2612)))))))) x3127) (= (x3095 (+ x187 160)) x1383) (= x2297 (x872 x1401 x1136 x1211 x1618 x813)) (= x2966 (x3095 (+ 32 x1338))) (= x366 (x1348 x2740)) (>= 2 x2120) (= x2266 (x2040 x1401 x1347 x593)) (= (x1348 x2429) x2896) (= (x1348 x357) x2787) (= (x3095 (+ x297 32)) x3024) (= x1032 (x3066 x1401 x2276 x1377 x2061)) (= (x3095 (+ 192 x187)) x2219) (= (x1348 x2531) x2061) (= x1377 (x1348 x1759)) (= x1211 (x1348 x1263)) (= (x3095 (+ 32 x187)) x1759) (= x684 (x3095 (+ x187 32))) (= x2366 (x1348 x187)) (= (x3095 (+ 160 x187)) x357) (= x2583 (x3095 (+ x187 96))) (= (x1348 x187) x950) (= x879 (x1348 x1101)) (= (x3095 (+ 96 x187)) x2740) (= (x3095 (+ 32 x187)) x2257) (= x870 (x1495 x1401 x2366 x421 x2896 x366 x1518)) (= (x1348 x2024) x2543) (= (x1348 x2789) x2049) (= (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787) x514) (= (x3095 (+ x187 32)) x1263) (= x1151 (x3095 (+ x3024 32))) (= (x3095 (+ 64 x187)) x2429) (= (x595 0) x2491) (= x421 (x1348 x63)) (= x144 (x3095 (+ 32 x2966))) (= (x3095 (+ 128 x187)) x2024) (= (x3095 (+ x144 32)) x2570) (= (x3095 (+ x2570 32)) x796) (= (x1348 x2880) x2442) (= x1347 (x1348 x187)) (= x2046 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869)) (= x1693 (x3095 (+ 32 x2309))) (= (x3095 (+ 32 x187)) x3014) (= x2544 (x3095 (+ 128 x187))) (= (x1348 x184) x338) (or (and (<= x297 115792089237316195423570985008687907853269984665640564039457584007913129639615) (>= x297 1)) (and (<= x297 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x297 115792089237316195423570985008687907853269984665640564039457584007913129639618))) (= x1518 (x1348 x2544))) (and (=> (and (= (x1256 x761) x1773) (= x1624 (x1256 x2508)) (= (= x1510 0) x2603) (= x1841 (x3095 (+ x2508 64))) (= x1083 (x3095 (+ x2508 32))) (= x1510 (x1256 x1380)) (= (x1256 x259) x2503) (= x1072 (x3095 (+ 96 x2508))) (< x380 x2781) (= (x1256 x2377) x3125) (= (x1256 x1019) x2109) (= (x3095 (+ 128 x2508)) x2377) (= x937 (x1256 x191)) (= (x1256 x1083) x857) (= (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906) x580) (= (x1256 x293) x1485) (= (x3095 (+ x2508 64)) x2940) (= (x1256 x1072) x881) (or (and (>= x380 321) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x380)) (and (<= 2 x380) (>= 318 x380))) (= (x3095 (+ 32 x2508)) x3158) (= x1004 (x3095 (+ 64 x2508))) (= (x1256 x2508) x290) (= x1019 (x3095 (+ x2508 64))) (= x661 (x1256 x2508)) (= x1667 (* 32 x1510)) (= (x872 x2660 x1845 x1485 x2991 x881) x18) (= x259 (x3095 (+ 128 x2508))) (= (x1256 x1004) x2991) (= (x3095 (+ x2508 32)) x1372) (= x1722 (x2476 x2660 x1624)) (= (x2358 x2660 x977 x1773 x2109 x937 x2503 x453) x2383) (= (x3095 (+ x2508 32)) x293) (= (x1256 x2020) x453) (= (x1256 x2508) x977) (= (x3095 (+ 192 x2508)) x28) (= (x3066 x2660 x1931 x857 x111) x2863) (= x2906 (x1256 x28)) (= x1445 (x1256 x1024)) (= (x2040 x2660 x290 x23) x2420) (= (x1256 x2508) x524) (= (x595 0) x328) (= (x3095 (+ (mod (+ 32 x1667) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x380)) x2781) (= (x1256 x2508) x1845) (= x191 (x3095 (+ 96 x2508))) (= (x3095 (+ 96 x2508)) x1737) (= (x3095 (+ 32 x2508)) x774) (= x1086 (x3095 (+ x2508 96))) (>= 18446744073709551615 x1510) (= x1339 (x1256 x1127)) (= x1127 (x3095 (+ x2508 128))) (= (x1256 x3158) x2407) (= (x1256 x2940) x2716) (= x761 (x3095 (+ 32 x2508))) (= x1931 (x1256 x2508)) (= x1658 (x3095 (+ x2508 64))) (= (x1256 x1737) x31) (= x2020 (x3095 (+ 160 x2508))) (= (x1256 x774) x23) (= x111 (x1256 x1658)) (= x1380 (x3095 (+ x2609 32))) (<= 3 x2781) (= (x3095 (+ 160 x2508)) x1024) (= x2367 (x1256 x1086)) (= x295 (x1256 x1372)) (= x2192 (x1256 x1841)) (= (ite (= x2660 0) x328 (ite (>= 32 x2660) x1722 (ite (>= 64 x2660) x2420 (ite (<= x2660 96) x2863 (ite (<= x2660 128) x18 (ite (>= 160 x2660) x269 (ite (<= x2660 192) x2383 (ite (>= 224 x2660) x580 x2776)))))))) x2398) (= x269 (x1495 x2660 x524 x2407 x2192 x31 x1339))) (and (=> (and (= x2867 x2781) x2603) x2638) (=> (and (and (not (= x2781 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2781)) (<= x2781 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3095 (+ 64 x2781)) x2259) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2781)) (= (= 1 x1510) x1589) (= (x2951 (- x1510 1)) x2304) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2781) (= x3120 (x3095 (+ x2781 32))) (> x2259 x2781) (= x1774 (x3095 (+ 32 x380))) (= x1720 (x3095 (+ 32 x1774))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2781)) (not x2603)) (and (=> (and x1589 (= x2259 x1394)) x1390) (=> (not x1589) x1838))))) x100)))) x1710))
(assert (and (= (x42 9 9) 81) (= (x42 3 3) 9) (= (x42 27 3) 81) (= (x42 9 3) 27)))
(assert (=> (<= x1413 10000) (= (x3126 x1413) 0)))
(assert (= (and x1429 x1578) x3164))
(assert (= (or x526 x518) x1714))
(assert (x730 x2095))
(assert (= x2915 (x1323 (x1495 x41 x2636 x2065 x2915 x2365 x511))))
(assert (= (x2316 (x872 x1353 x1953 x1712 x627 x30)) x1953))
(assert (x730 x1090))
(assert (=> (<= x661 10000) (= (x3126 x661) 0)))
(assert (x2800 x676))
(assert (x730 x2881))
(assert (= (x1107 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023)) x1955))
(assert (x730 x1647))
(assert (= (and (not x1133) x891) x22))
(assert (= (x2316 (x872 x914 x2376 x374 x2191 x546)) x2376))
(assert (x730 x1164))
(assert (not (x2705 (x2476 x1955 x108))))
(assert (= x1237 (x2997 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237))))
(assert (x730 x900))
(assert (x730 x2317))
(assert (x730 x3124))
(assert (= (or x721 x2538) x1971))
(assert (x730 x2961))
(assert (= x296 (x2316 (x1495 x1140 x296 x2634 x2211 x2023 x2162))))
(assert (x730 x237))
(assert (=> (<= x2612 10000) (= (x3126 x2612) 0)))
(assert (= x848 (and x1459 (not x2011))))
(assert (x730 x694))
(assert (=> (>= 10000 x109) (= 0 (x3126 x109))))
(assert (=> (>= 10000 x1428) (= 0 (x3126 x1428))))
(assert (x730 x228))
(assert (= x340 (x1107 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506))))
(assert (x1620 x2626))
(assert (= (x2258 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)) x238))
(assert (= (x1107 (x3066 x1627 x286 x1607 x2736)) x1627))
(assert (x730 x2003))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639832))
(assert (x730 x925))
(assert (x730 x2433))
(assert (x634 x997 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1034))
(assert (x730 x732))
(assert (x730 x2977))
(assert (x730 x2397))
(assert (x730 x1473))
(assert (=> (<= x1925 10000) (= (x3126 x1925) 0)))
(assert (x730 x1692))
(assert (x730 x2296))
(assert (x730 x2061))
(assert (= (x872 x2010 x2188 x2174 x1787 x283) (x3126 (x872 x2010 x2188 x2174 x1787 x283))))
(assert (x730 x1020))
(assert (x730 x1530))
(assert (x730 x2559))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078)))
(assert (x730 x639))
(assert (> (x2358 x914 x365 x3129 x1564 x1925 x2141 x2690) 10000))
(assert (x730 x571))
(assert (= (and x123 x9) x3093))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639649))
(assert (x730 x2787))
(assert (x730 x2691))
(assert (x730 x2495))
(assert (x730 x1166))
(assert (= (x3126 (x3066 x1955 x1098 x1544 x216)) (x3066 x1955 x1098 x1544 x216)))
(assert (x1174 x2202))
(assert (x730 x2365))
(assert (x2705 18446746139588821059))
(assert (x730 x2807))
(assert (x730 x2451))
(assert (=> (>= 10000 x238) (= 0 (x3126 x238))))
(assert (x730 x2119))
(assert (x730 x2186))
(assert (x730 x2929))
(assert (x1008 x228))
(assert (< 10000 (x872 x1353 x1953 x1712 x627 x30)))
(assert (x730 x1066))
(assert (x730 x472))
(assert (x730 x2055))
(assert (x730 x2270))
(assert (x730 x2508))
(assert (x400 x273))
(assert (< 10000 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023)))
(assert (=> (<= x422 10000) (= (x3126 x422) 0)))
(assert (x730 x3118))
(assert (x730 x2871))
(assert (= x466 (or x1558 x405)))
(assert (x730 x1966))
(assert (x730 x2111))
(assert (= (or x2978 x1112 x1895 x1828 x3015) x3103))
(assert (x730 x2396))
(assert (x730 x1301))
(assert (x730 x1396))
(assert (=> (<= x1061 10000) (= 0 (x3126 x1061))))
(assert (x730 x2002))
(assert (= (x1107 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787)) x1401))
(assert (x730 x2889))
(assert (x730 x842))
(assert (x730 x2934))
(assert (=> (>= 10000 x3006) (= (x3126 x3006) 0)))
(assert (= x384 (x2203 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078))))
(assert (= (and x247 x902) x2274))
(assert (x730 x1645))
(assert (=> (>= 10000 x2503) (= (x3126 x2503) 0)))
(assert (x730 x28))
(assert (x730 x1371))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3066 x2660 x1931 x857 x111)))
(assert (x730 x2234))
(assert (= (x3126 (x3066 x1627 x286 x1607 x2736)) (x3066 x1627 x286 x1607 x2736)))
(assert (x730 x1885))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639747)))
(assert (x730 x1085))
(assert (x730 x1745))
(assert (= x2010 (x1107 (x1495 x2010 x206 x372 x729 x2819 x1580))))
(assert (x730 x1120))
(assert (= x1838 (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2259)) (<= x2259 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2259) (= (= 1 x2304) x2957) (> x2081 x2259) (= (x3095 (+ 32 x2259)) x1656) (= (x3095 (+ x2259 64)) x2081) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2259)) (not (= x2259 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2259)) (and x2957 (=> (= x1394 x2081) x1390)))))
(assert (x730 x1279))
(assert (=> (>= 10000 x1945) (= 0 (x3126 x1945))))
(assert (= (or x1168 x74) x2469))
(assert (not (x2705 (x2476 x340 x688))))
(assert (= (and x2521 x1890) x2752))
(assert (=> (<= x2483 10000) (= 0 (x3126 x2483))))
(assert (x730 x2817))
(assert (= x813 (x79 (x872 x1401 x1136 x1211 x1618 x813))))
(assert (= (x2203 (x872 x1353 x1953 x1712 x627 x30)) x1712))
(assert (= (or x2122 x2400) x1196))
(assert (= x1515 (x1323 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787))))
(assert (< (x3066 x1353 x1464 x701 x2889) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1181))
(assert (= (and x1375 x1158) x918))
(assert (=> (<= x1912 10000) (= (x3126 x1912) 0)))
(assert (x730 x2906))
(assert (= x2425 (and x315 x1138)))
(assert (x730 x2504))
(assert (x730 x2845))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x872 x86 x2223 x1997 x2881 x467)))
(assert (< 10000 (x2358 x340 x1816 x582 x170 x2830 x1300 x481)))
(assert (= (and x2624 x2722) x2890))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x2660 x1624)))
(assert (x730 x1907))
(assert (x730 x626))
(assert (=> (>= 10000 x1536) (= 0 (x3126 x1536))))
(assert (x730 x1076))
(assert (x730 x1294))
(assert (= x639 (x2203 (x2040 x1955 x2784 x639))))
(assert (= (=> (and (= x1794 (ite (= 0 x2529) (ite (= 0 x2529) 1 0) (ite (= x659 0) 1 0))) (= x376 x3003) (= 0 x1794)) x2278) x940))
(assert (= (x3126 (x3066 x2446 x1523 x1087 x1061)) (x3066 x2446 x1523 x1087 x1061)))
(assert (= (and (not x2371) x1643) x1014))
(assert (x730 x2384))
(assert (= x2638 (=> (= x1937 (> x1510 0)) (and (=> (and (not x1937) (= x1109 x2867)) x2983) (=> x1937 x1287)))))
(assert (x2800 x2942))
(assert (x730 x761))
(assert (= 0 (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639808)))
(assert (x730 x2215))
(assert (= (and x2076 x2540) x1219))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x730 x395))
(assert (x730 x1278))
(assert (x730 x1272))
(assert (x730 x2454))
(assert (< (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x216 (x1323 (x3066 x1955 x1098 x1544 x216))))
(assert (x730 x2562))
(assert (not (x2705 (x872 x1955 x3110 x999 x2468 x2733))))
(assert (=> (<= x982 10000) (= 0 (x3126 x982))))
(assert (= (x3126 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107)) (x2358 x41 x2183 x2093 x458 x1623 x1912 x107)))
(assert (x730 x222))
(assert (x730 x1063))
(assert (= (x79 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048)) x3098))
(assert (x730 x2483))
(assert (x1613 32 x2464))
(assert (x730 x629))
(assert (< (x1495 x1627 x2555 x1856 x2287 x1889 x2382) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2121))
(assert (= x1821 (and x682 x2658)))
(assert (x730 x895))
(assert (> (x3066 x86 x768 x2142 x811) 10000))
(assert (= (=> (and (<= x2641 18446744073709551614) (not (= x2641 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= x1029 160) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x2641) (<= x2641 18446744073709551455)) (= x2447 (x3095 (+ x2519 32))) (>= 18446744073709551615 x2641) (= (x3095 (+ 32 x1846)) x2189) (= x3038 (x3095 (+ 32 x2447))) (= x2563 (x2905 x373)) (= x1848 (x3095 (+ x2641 32))) (= (x2951 (- x1995 x1846)) x1029) (= x928 (not (< 1 x1669))) (= x2627 (x3095 (+ 32 x373))) (or (>= x2641 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x2641 18446744073709551455)) (= x557 (x2905 x1846)) (= x317 (x3095 (+ 160 x2641))) (= x2293 (x2905 x2627)) (> x317 x2641) (not (< x317 x2641)) (= x2519 (x3095 (+ x1848 32))) (<= x2641 18446744073709551614) (<= x2641 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1754 (x2905 x2189)) (<= x1754 1461501637330902918203684832716283019655932542975) (>= 5 x557) (= (x3095 (+ x2627 32)) x832) (<= x2402 1461501637330902918203684832716283019655932542975) (= x2402 (x2905 x832)) (>= 18446744073709551615 x2641) (= (x3095 (+ x2189 32)) x373) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1029) (or (<= x1846 2065879269284) (>= x1846 57896044618658097711785492504343953926634992332820282019728792003956564820517))) (and (=> (= x1980 x317) x2761) x928)) x1575))
(assert (x730 x1724))
(assert (=> (>= 10000 x1492) (= 0 (x3126 x1492))))
(assert (x730 x191))
(assert (= (x2316 (x1495 x1353 x488 x2082 x1350 x3006 x1453)) x488))
(assert (x730 x1746))
(assert (=> (>= 10000 x729) (= (x3126 x729) 0)))
(assert (= (x1107 (x872 x86 x2223 x1997 x2881 x467)) x86))
(assert (= (x1107 (x2040 x340 x1888 x1424)) x340))
(assert (x730 x2086))
(assert (x730 x1777))
(assert (x730 x119))
(assert (= (x79 (x1495 x1258 x1080 x692 x2178 x732 x2902)) x732))
(assert (x2800 64))
(assert (= (=> (and (= (x633 x11) x638) (= (> x2432 0) x469) (= x2432 (x633 x638))) (and (=> (and (= x2087 x1030) (not x469)) x1704) (=> x469 x1476))) x1922))
(assert (x730 x1987))
(assert (x730 x1569))
(assert (x730 x1044))
(assert (x730 x2843))
(assert (= x1469 (x79 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379))))
(assert (not (x2705 (x872 x1401 x1136 x1211 x1618 x813))))
(assert (> (x2476 x86 x2317) 10000))
(assert (x730 x2262))
(assert (=> (<= x1785 10000) (= 0 (x3126 x1785))))
(assert (x1174 x2850))
(assert (x2800 x1669))
(assert (x730 x927))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639809) 0))
(assert (=> (>= 10000 x1016) (= (x3126 x1016) 0)))
(assert (x400 x2729))
(assert (x730 x2704))
(assert (=> (>= 10000 x1255) (= (x3126 x1255) 0)))
(assert (x2705 18446744073709551518))
(assert (=> (<= x867 10000) (= (x3126 x867) 0)))
(assert (x730 x2627))
(assert (x730 x171))
(assert (= x15 (=> (and (= x594 (x2938 x1307)) (= (> x594 0) x1133) (= x1954 (x2938 x2422)) (= (x3095 (+ 32 x1307)) x893) (= x1403 (x3095 (+ 32 x770)))) (and (=> (and (not x1133) (and (= 0 x2620) (= x893 x1612) (= x1403 x818))) x3073) (=> (and x1133 (and (= x2299 (x3095 (+ x893 32))) (= (x3095 (+ 32 x1403)) x226) (= x123 (< 1 x594)) (= (x2938 x893) x2556))) (and (=> (and x123 (and (= x473 (x3095 (+ 32 x226))) (= (x1049 x2299) x501) (= x2635 (x3095 (+ x2299 32))) (= x620 (> x594 2)))) (and (=> (and (not x620) (and (= x473 x818) (= x1612 x2635) (= x2620 2))) x3073) (=> (and x620 (and (= (x3095 (+ 32 x2635)) x2064) (= (x728 x2635) x2684) (= x2462 (x3095 (+ 32 x473))) (= x2275 (< 3 x594)))) (and (=> (and (and (= x2620 3) (= x1612 x2064) (= x2462 x818)) (not x2275)) x3073) (=> x2275 x1074))))) (=> (and (and (= x226 x818) (= x2299 x1612) (= 1 x2620)) (not x123)) x3073)))))))
(assert (x730 x329))
(assert (= (and x2228 x1031) x1566))
(assert (x2705 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (x730 x1024))
(assert (x730 x1887))
(assert (x730 x138))
(assert (x730 x1652))
(assert (x1620 x1364))
(assert (x730 x2846))
(assert (x2800 x2343))
(assert (= x2036 (and x705 x2580)))
(assert (= (x3126 (x3066 x1140 x2757 x2156 x1949)) (x3066 x1140 x2757 x2156 x1949)))
(assert (= (x872 x1140 x314 x2331 x587 x670) (x3126 (x872 x1140 x314 x2331 x587 x670))))
(assert (x730 x621))
(assert (x730 x1563))
(assert (= (x3126 (x2476 x1140 x1073)) (x2476 x1140 x1073)))
(assert (x730 x1820))
(assert (x730 x70))
(assert (x730 x1474))
(assert (x730 x1498))
(assert (x2705 1461501637330902918203684832716283019655932542975))
(assert (x730 x183))
(assert (x730 x776))
(assert (x730 x2552))
(assert (= (x79 (x2358 x1955 x1152 x2342 x1090 x2653 x1442 x1509)) x2653))
(assert (x730 x2896))
(assert (x1174 x1364))
(assert (< 10000 (x3066 x1401 x2276 x1377 x2061)))
(assert (> (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787) 10000))
(assert (= (x3126 (x872 x340 x2252 x1791 x570 x1363)) (x872 x340 x2252 x1791 x570 x1363)))
(assert (x730 x768))
(assert (x730 x628))
(assert (x730 x579))
(assert (= (x3126 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)) (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)))
(assert (x730 x1924))
(assert (x730 x1752))
(assert (x730 x3011))
(assert (x730 x690))
(assert (x730 x2230))
(assert (=> (<= x2210 10000) (= (x3126 x2210) 0)))
(assert (=> (>= 10000 x2235) (= 0 (x3126 x2235))))
(assert (x730 x1980))
(assert (= x1353 (x1107 (x1495 x1353 x488 x2082 x1350 x3006 x1453))))
(assert (x1174 x879))
(assert (x730 x1834))
(assert (=> (<= x2059 10000) (= (x3126 x2059) 0)))
(assert (=> (<= x1084 10000) (= 0 (x3126 x1084))))
(assert (= x1792 (or x327 x976)))
(assert (x730 x1442))
(assert (x730 x2636))
(assert (x730 x949))
(assert (x730 x2710))
(assert (x730 x1443))
(assert (x730 x1388))
(assert (x730 x218))
(assert (x730 x780))
(assert (x730 x1760))
(assert (= (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379) (x3126 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379))))
(assert (= (x1107 (x1495 x1401 x2366 x421 x2896 x366 x1518)) x1401))
(assert (x730 x1804))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x1955 x108)))
(assert (x730 x3037))
(assert (= (x3126 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453)) (x2358 x2660 x977 x1773 x2109 x937 x2503 x453)))
(assert (= (x2203 (x2358 x340 x1816 x582 x170 x2830 x1300 x481)) x582))
(assert (= x1880 (x2258 (x2358 x1140 x544 x1435 x2455 x1469 x1880 x2379))))
(assert (= x867 (x2683 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867))))
(assert (x730 x983))
(assert (x634 x997 32))
(assert (=> (<= x768 10000) (= 0 (x3126 x768))))
(assert (x730 x52))
(assert (= (=> (and (or (and (and (= (= (x2567 x866) x1865) x392) (= (>= (x2567 x2234) x1069) x1641) (= x1069 (x636 x2234)) (<= x2335 4294967295) x392 (= (x636 x866) x1865) x1641) x1050) (not x1050)) (and (= x2205 (x1244 x866)) (= x2713 (x3095 (+ x1076 x2155))) (= x2823 (x3095 (+ x1076 x1933))) (= (x2951 (- x2823 x706)) x946) (= (> x2808 0) x1050) (= (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2595) x1933) (>= x2205 1) (= x2595 (x3095 (+ x2155 31))))) x1698) x1501))
(assert (x730 x1657))
(assert (x730 x1893))
(assert (x730 x1892))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2476 x1627 x640)))
(assert (x634 x1364 1461501637330902918203684832716283019655932542976))
(assert (x730 x734))
(assert (= x752 (and x262 (not x2073))))
(assert (=> (<= x2543 10000) (= (x3126 x2543) 0)))
(assert (= (x2316 (x2040 x914 x499 x291)) x499))
(assert (= (x3066 x914 x1354 x34 x2368) (x3126 (x3066 x914 x1354 x34 x2368))))
(assert (= (and x3022 x2096) x3109))
(assert (> (x1495 x340 x1638 x1834 x2210 x285 x1956) 10000))
(assert (x730 x2784))
(assert (x730 x2956))
(assert (= x2623 (or x755 x1409)))
(assert (x730 x2914))
(assert (=> (<= x1461 10000) (= 0 (x3126 x1461))))
(assert (= x2659 (or (and x509 x445) x836)))
(assert (x730 x962))
(assert (x730 x482))
(assert (> (x2040 x1258 x2380 x812) 10000))
(assert (x730 x198))
(assert (= (x3126 (x2476 x41 x2348)) (x2476 x41 x2348)))
(assert (= x2511 (and x2256 (not x3012))))
(assert (x634 x2729 1461501637330902918203684832716283019655932542976))
(assert (x730 x700))
(assert (= (x2316 (x2476 x1955 x108)) x108))
(assert (not (x2705 (x872 x914 x2376 x374 x2191 x546))))
(assert (= (and (not x469) x66) x74))
(assert (x730 x926))
(assert (x1620 x1178))
(assert (=> (>= 10000 x40) (= (x3126 x40) 0)))
(assert (x730 x1211))
(assert (x730 x3123))
(assert (x730 x249))
(assert (x730 x1479))
(assert (x400 x1178))
(assert (x730 x2870))
(assert (x730 x878))
(assert (x400 x2714))
(assert (x730 x1817))
(assert (= x2292 (x79 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146))))
(assert (= (x2040 x2010 x1777 x1062) (x3126 (x2040 x2010 x1777 x1062))))
(assert (x730 x1770))
(assert (x400 x2110))
(assert (= x274 (and x1716 x1050)))
(assert (= x2619 (x1323 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506))))
(assert (= x1080 (x2316 (x1495 x1258 x1080 x692 x2178 x732 x2902))))
(assert (x730 x1116))
(assert (x730 x645))
(assert (x730 x523))
(assert (= (x2316 (x3066 x340 x903 x2435 x986)) x903))
(assert (x730 x1629))
(assert (=> (<= x2830 10000) (= 0 (x3126 x2830))))
(assert (x2705 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (=> (>= 10000 x2311) (= (x3126 x2311) 0)))
(assert (x730 x2410))
(assert (= x435 (=> (and (<= x1322 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1877 (x545 115792089237316195423570985008687907853269984665640564039457584007913129639904 x249)) (< x1322 x1907) (= (x1649 x1322) x2010) (= (<= x2010 224) x1588) (= x1907 (x3095 (+ x1877 x1117))) (= x1706 (x2951 (- x183 32))) (= x249 (x3095 (+ 31 x1022))) (>= x1907 1) (<= x1322 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3095 (+ 32 x1322)) x127) (= (x2951 (- x1907 x1322)) x183) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1322) (= x1315 (x3095 (+ x1022 x1117)))) (and (=> (and (= x839 (x3095 (+ x127 32))) (>= x1288 1) (= x1580 (x1649 x1279)) (= x1776 (x1649 x1893)) (= (x1649 x3002) x40) (= (x1649 x127) x1989) (= x2490 (x3095 (+ 64 x127))) (= x3076 (x3095 (+ x127 96))) (= x1787 (x1649 x771)) (= (x2040 x2010 x1777 x1062) x375) (= (x1649 x3076) x283) (= (ite (= x2010 0) x687 (ite (>= 32 x2010) x823 (ite (<= x2010 64) x375 (ite (>= 96 x2010) x1274 (ite (>= 128 x2010) x149 (ite (<= x2010 160) x2842 (ite (<= x2010 192) x2748 (ite (<= x2010 224) x1184 x1295)))))))) x335) (= x484 (x3095 (+ 64 x127))) (= (x1649 x94) x1288) (= x2514 (x3095 (+ 128 x127))) (= x2132 (x1649 x1153)) (= (x1495 x2010 x206 x372 x729 x2819 x1580) x2842) (= x3068 (x1649 x1241)) (= (x3095 (+ x127 32)) x1316) (= x3002 (x3095 (+ 32 x127))) (= (x3095 (+ 160 x127)) x1782) (= x662 (x3095 (+ 128 x127))) (= (x3095 (+ x127 32)) x1153) (= (x3095 (+ 96 x127)) x1241) (= (x1649 x662) x2279) (= x206 (x1649 x127)) (= x2564 (x1649 x2514)) (= (x3095 (+ x127 160)) x2977) (= (x3095 (+ x127 64)) x1893) (= (x3095 (+ 32 x127)) x2319) (= x370 (x1649 x1233)) (= (x595 0) x687) (= (x3095 (+ x94 32)) x825) (= x2860 (x1649 x956)) (= (x1649 x1316) x372) (= x1233 (x3095 (+ x127 96))) (= x2509 (x1649 x1782)) (= (x2351 x2523) x1226) (= x956 (x3095 (+ 64 x127))) (= x823 (x2476 x2010 x2879)) (= (x3095 (+ x127 128)) x1279) (= x729 (x1649 x2490)) (= x2174 (x1649 x2319)) (= x2921 (x1649 x2977)) (= (x2351 x1226) x1448) (= (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171) x1184) (= x1777 (x1649 x127)) (= x106 (x3095 (+ 192 x127))) (= x1274 (x3066 x2010 x1989 x40 x1776)) (= x2188 (x1649 x127)) (= x771 (x3095 (+ 64 x127))) (= x437 (x1649 x127)) (= (x1649 x484) x2737) (= x149 (x872 x2010 x2188 x2174 x1787 x283)) (= x2986 (not (< 1 x1448))) (= (x1649 x106) x2171) (= (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509) x2748) (= (x1649 x127) x2879) (= (x1649 x2165) x1062) (= (x3095 (+ 96 x127)) x155) (= x2819 (x1649 x155)) (= (x1649 x839) x1099) (= (x3095 (+ x127 32)) x2165) (= x938 (x1649 x127))) (and (=> (= x256 x1907) x429) x2986)) x1588))))
(assert (x730 x194))
(assert (x730 x1367))
(assert (x730 x1638))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639618))
(assert (x730 x1374))
(assert (x730 x137))
(assert (x730 x2057))
(assert (x1620 x1326))
(assert (=> (>= 10000 x1295) (= (x3126 x1295) 0)))
(assert (x730 x2596))
(assert (x730 x338))
(assert (= x2085 (x2258 (x1495 x2446 x1084 x2929 x508 x2644 x2085))))
(assert (> (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382) 10000))
(assert (=> (<= x640 10000) (= 0 (x3126 x640))))
(assert (x730 x351))
(assert (= (x2203 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023)) x1725))
(assert (= (x2258 (x1382 x914 x2340 x1487 x531 x1247 x56 x312 x470)) x56))
(assert (x730 x271))
(assert (x730 x947))
(assert (x730 x2600))
(assert (not (x2705 (x2358 x1401 x950 x1110 x1515 x567 x2543 x2787))))
(assert (x730 x1427))
(assert (x730 x3014))
(assert (= x2050 (and x1158 (not x1375))))
(assert (x730 x638))
(assert (x730 x229))
(assert (x634 x3123 1461501637330902918203684832716283019655932542976))
(assert (x2800 x690))
(assert (< (x2040 x86 x2600 x395) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2260))
(assert (not (x2705 (x2358 x1258 x2575 x87 x2311 x2009 x55 x867))))
(assert (x730 x2115))
(assert (not (x2705 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337))))
(assert (= (or x1546 x2332) x498))
(assert (x730 x1861))
(assert (x730 x2257))
(assert (= x1347 (x2316 (x2040 x1401 x1347 x593))))
(assert (x2800 x221))
(assert (= 0 (x3126 18446746139588821059)))
(assert (< 10000 (x2476 x340 x688)))
(assert (= x2906 (x2997 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906))))
(assert (=> (<= x286 10000) (= (x3126 x286) 0)))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639615))
(assert (x730 x2348))
(assert (x730 x324))
(assert (x730 x764))
(assert (x730 x719))
(assert (< (x2040 x41 x130 x982) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x359))
(assert (x730 x617))
(assert (x2505 x1123 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (= x1716 (or x525 x1268 x252 x2050 x399)))
(assert (x730 x1210))
(assert (x730 x1612))
(assert (x730 x378))
(assert (x730 x765))
(assert (= (=> (and (= (x874 x2772) x319) (not (= x2867 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x3095 (+ x1380 32)) x2772) (> x309 x2867) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2867) (= x2416 (x2801 x380)) (= x250 (x3095 (+ 32 x380))) (not (= x2867 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= 1 x2416) (= x309 (x3095 (+ x2867 64))) (= x1058 (not (> x1510 1))) (= (x3095 (+ 32 x2772)) x1216) (not (= x2867 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x3095 (+ x2867 32)) x2090) (= (x874 x1216) x1180) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2867) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2867)) (and (=> (= x309 x1109) x2983) x1058)) x1287))
(assert (=> (<= x2346 10000) (= (x3126 x2346) 0)))
(assert (x730 x2232))
(assert (x730 x93))
(assert (=> (>= 10000 x2397) (= (x3126 x2397) 0)))
(assert (= (x2683 (x2358 x1353 x1866 x1236 x115 x1242 x243 x2428)) x2428))
(assert (> (x872 x340 x2252 x1791 x570 x1363) 10000))
(assert (x730 x2877))
(assert (x730 x2960))
(assert (x730 x192))
(assert (= (x1107 (x2476 x1258 x2235)) x1258))
(assert (x730 x1004))
(assert (x730 x1909))
(assert (> (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078) 10000))
(assert (x730 x791))
(assert (x634 x2110 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x1850 10000) (= 0 (x3126 x1850))))
(assert (= x2660 (x1107 (x3066 x2660 x1931 x857 x111))))
(assert (x730 x454))
(assert (x730 x1468))
(assert (= x1639 (x2258 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337))))
(assert (x730 x358))
(assert (=> (<= x1979 10000) (= (x3126 x1979) 0)))
(assert (x730 x2558))
(assert (x730 x3131))
(assert (x730 x1070))
(assert (= x2446 (x1107 (x872 x2446 x637 x1088 x2581 x70))))
(assert (=> (<= x759 10000) (= (x3126 x759) 0)))
(assert (x730 x1829))
(assert (x730 x869))
(assert (x730 x2472))
(assert (> (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146) 10000))
(assert (x730 x1180))
(assert (x730 x2227))
(assert (x730 x2179))
(assert (x730 x1239))
(assert (x634 x1992 1461501637330902918203684832716283019655932542976))
(assert (x730 x2531))
(assert (x1008 x2232))
(assert (not (x2705 (x2476 x1140 x1073))))
(assert (x730 x795))
(assert (x730 x2626))
(assert (=> (<= x1955 10000) (= 0 (x3126 x1955))))
(assert (x730 x2509))
(assert (x730 x506))
(assert (x730 x3141))
(assert (x730 x850))
(assert (not (x2705 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237))))
(assert (= (or x1873 x1651) x117))
(assert (x730 x1102))
(assert (x730 x2949))
(assert (= x1827 (x79 (x872 x1258 x2744 x2472 x1167 x1827))))
(assert (x730 x1051))
(assert (x730 x1413))
(assert (= x1043 (and x2973 x990)))
(assert (x730 x2799))
(assert (= (x3126 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506)) (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506)))
(assert (= x1845 (x2316 (x872 x2660 x1845 x1485 x2991 x881))))
(assert (x730 x2717))
(assert (= (and x2036 x731) x387))
(assert (= (=> (and (and (<= x294 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 18446744073709551615 x1818) (= (x2637 x2582) x1569) (< x294 x2087) (= x1818 (x2637 x1569)) (= x147 (* 32 x1818)) (= (= 0 x1818) x1138) (<= x294 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x2087) (= (x3095 (+ x294 (mod (+ 32 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2087) (<= x294 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (or (and (not x1138) (and (= x172 (x3095 (+ x294 32))) (= x2214 (* x1818 32)))) x1138)) x1922) x2990))
(assert (=> (>= 10000 x2276) (= (x3126 x2276) 0)))
(assert (=> (>= 10000 x2871) (= (x3126 x2871) 0)))
(assert (x730 x1142))
(assert (x730 x2872))
(assert (=> (<= x2509 10000) (= (x3126 x2509) 0)))
(assert (x730 x2233))
(assert (= x844 (and (not x103) x1814)))
(assert (x730 x1767))
(assert (x730 x997))
(assert (x730 x3125))
(assert (= x1982 (x79 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237))))
(assert (= x2010 (x1107 (x3066 x2010 x1989 x40 x1776))))
(assert (= (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492) (x3126 (x2358 x86 x2651 x2691 x1255 x2397 x2578 x1492))))
(assert (x730 x818))
(assert (= (x3126 18446744073709551518) 0))
(assert (= (or x2924 x1065) x891))
(assert (=> (<= x193 10000) (= (x3126 x193) 0)))
(assert (x1620 x2594))
(assert (> (x872 x1955 x3110 x999 x2468 x2733) 10000))
(assert (x730 x1827))
(assert (x730 x2690))
(assert (x730 x106))
(assert (=> (>= 10000 x280) (= 0 (x3126 x280))))
(assert (=> (<= x833 10000) (= (x3126 x833) 0)))
(assert (x730 x2991))
(assert (< (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2716 10000) (= (x3126 x2716) 0)))
(assert (= (=> (and (= x2756 (x2484 x550)) (= x1292 (not (> x2756 1)))) (and (=> (= x2678 x2422) x967) x1292)) x1896))
(assert (= (x2683 (x2358 x1627 x865 x2530 x2768 x1147 x2876 x382)) x382))
(assert (= x1097 (and x2829 x2987)))
(assert (= (x1107 (x1382 x1627 x1349 x2229 x2873 x1286 x1639 x1003 x2337)) x1627))
(assert (x730 x2207))
(assert (= (and (not x575) x752) x2865))
(assert (not (x2705 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715))))
(assert (not (x2705 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509))))
(assert (> (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869) 10000))
(assert (x730 x709))
(assert (= (and x3081 (not x552)) x1849))
(assert (x730 x684))
(assert (= 0 (x3126 134217728)))
(assert (x730 x73))
(assert (=> (>= 10000 x1564) (= (x3126 x1564) 0)))
(assert (x1620 x418))
(assert (x730 x2458))
(assert (= x170 (x1323 (x2358 x340 x1816 x582 x170 x2830 x1300 x481))))
(assert (= (x79 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506)) x782))
(assert (x730 x2506))
(assert (x730 x2640))
(assert (= (x2203 (x2040 x86 x2600 x395)) x395))
(assert (x730 x2892))
(assert (=> (<= x87 10000) (= 0 (x3126 x87))))
(assert (= (and x2652 (not x1145)) x974))
(assert (= x2520 (x1107 (x2476 x2520 x1301))))
(assert (= x2992 (x2203 (x1382 x340 x568 x2992 x2619 x782 x1536 x1208 x2506))))
(assert (x730 x726))
(assert (x730 x2156))
(assert (= x314 (x2316 (x872 x1140 x314 x2331 x587 x670))))
(assert (< 10000 (x3066 x41 x1817 x354 x714)))
(assert (x2800 x2857))
(assert (x730 x2208))
(assert (x730 x1970))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x730 x505))
(assert (x730 x1691))
(assert (x730 x1384))
(assert (=> (<= x926 10000) (= 0 (x3126 x926))))
(assert (x730 x1923))
(assert (not (x2705 (x2358 x41 x2183 x2093 x458 x1623 x1912 x107))))
(assert (= (x3126 (x872 x41 x207 x759 x1484 x2221)) (x872 x41 x207 x759 x1484 x2221)))
(assert (x2800 x2115))
(assert (x730 x1233))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (= (x79 (x872 x1627 x2483 x109 x2307 x1490)) x1490))
(assert (x1613 160 x2942))
(assert (x730 x1549))
(assert (x730 x2560))
(assert (x730 x1317))
(assert (= (x2316 (x2476 x1627 x640)) x640))
(assert (=> (<= x1725 10000) (= 0 (x3126 x1725))))
(assert (= x878 (x2203 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237))))
(assert (x730 x1258))
(assert (x634 x418 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x1054))
(assert (= x1776 (x1323 (x3066 x2010 x1989 x40 x1776))))
(assert (x730 x1982))
(assert (x730 x2120))
(assert (= (x872 x86 x2223 x1997 x2881 x467) (x3126 (x872 x86 x2223 x1997 x2881 x467))))
(assert (= x661 (x2316 (x1382 x2660 x661 x295 x2716 x2367 x3125 x1445 x2906))))
(assert (= (x1107 (x2040 x86 x2600 x395)) x86))
(assert (x730 x2764))
(assert (x730 x2918))
(assert (x730 x1953))
(assert (= (=> (and (= x784 (x738 x2961)) (= x2517 (x3095 (+ 32 x2961))) (= x1688 (x3095 (+ 32 x1975))) (= (not (< 4 x2464)) x1684)) (and x1684 (=> (and (= x1688 x2250) (= x3141 4) (= x1900 x2517)) x275))) x495))
(assert (x730 x285))
(assert (x730 x1237))
(assert (x730 x2542))
(assert (x730 x2502))
(assert (x730 x661))
(assert (x730 x832))
(assert (=> (>= 10000 x2368) (= 0 (x3126 x2368))))
(assert (x1008 x1939))
(assert (x730 x2995))
(assert (= (x1323 (x3066 x1258 x885 x92 x1215)) x1215))
(assert (=> (<= x531 10000) (= (x3126 x531) 0)))
(assert (x2705 2621382288))
(assert (x730 x1167))
(assert (x730 x162))
(assert (x730 x1172))
(assert (x730 x941))
(assert (x730 x1056))
(assert (< 10000 (x2040 x41 x130 x982)))
(assert (x1174 x2405))
(assert (< (x872 x914 x2376 x374 x2191 x546) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2809))
(assert (x730 x1762))
(assert (= (and x2890 x1934) x1092))
(assert (x730 x2853))
(assert (= (x2040 x340 x1888 x1424) (x3126 (x2040 x340 x1888 x1424))))
(assert (=> (>= 10000 x2061) (= (x3126 x2061) 0)))
(assert (x1008 x2516))
(assert (= x2442 (x2258 (x1382 x1401 x2057 x921 x2051 x2412 x2442 x669 x1869))))
(assert (x730 x3084))
(assert (x730 x36))
(assert (x730 x1188))
(assert (x730 x2331))
(assert (not (x2705 (x2476 x1627 x640))))
(assert (x730 x2205))
(assert (= (x2683 (x1382 x1955 x829 x1725 x493 x3047 x1979 x1534 x1023)) x1534))
(assert (= (x3126 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x730 x1864))
(assert (x400 x1400))
(assert (=> (>= 10000 x2211) (= 0 (x3126 x2211))))
(assert (x730 x663))
(assert (x730 x2087))
(assert (= x1363 (x79 (x872 x340 x2252 x1791 x570 x1363))))
(assert (= x2001 (x2316 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055))))
(assert (x730 x512))
(assert (=> (>= 10000 x1827) (= (x3126 x1827) 0)))
(assert (x730 x1865))
(assert (x730 x1693))
(assert (x1620 x273))
(assert (x730 x143))
(assert (= x2215 (x2203 (x1382 x1353 x1458 x2215 x2967 x711 x2182 x586 x715))))
(assert (x730 x729))
(assert (x730 x296))
(assert (x730 x484))
(assert (=> (>= 10000 x1088) (= 0 (x3126 x1088))))
(assert (x730 x1529))
(assert (x730 x1078))
(assert (x730 x1978))
(assert (x730 x1774))
(assert (< 10000 (x872 x2010 x2188 x2174 x1787 x283)))
(assert (x730 x2718))
(assert (x730 x828))
(assert (= (or x974 x2674 x3077) x59))
(assert (x730 x365))
(assert (=> (<= x1055 10000) (= 0 (x3126 x1055))))
(assert (x730 x3153))
(assert (> (x2476 x2010 x2879) 10000))
(assert (x730 x1963))
(assert (x730 x3083))
(assert (x730 x1122))
(assert (= (x79 (x1495 x340 x1638 x1834 x2210 x285 x1956)) x285))
(assert (= x1647 (x2258 (x1495 x2520 x1730 x3032 x1572 x2589 x1647))))
(assert (= (and x2702 x2352) x1814))
(assert (=> (<= x467 10000) (= 0 (x3126 x467))))
(assert (= x2660 (x1107 (x2040 x2660 x290 x23))))
(assert (x730 x1681))
(assert (x730 x1025))
(assert (x730 x911))
(assert (x730 x2166))
(assert (=> (>= 10000 x2613) (= (x3126 x2613) 0)))
(assert (= (x1107 (x2476 x2660 x1624)) x2660))
(assert (x730 x122))
(assert (x730 x2447))
(assert (=> (>= 10000 x3032) (= 0 (x3126 x3032))))
(assert (x1174 x3123))
(assert (x730 x1519))
(assert (x730 x1733))
(assert (x730 x866))
(assert (x730 x576))
(assert (x730 x1060))
(assert (x730 x3047))
(assert (x2705 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x730 x1241))
(assert (x634 x1164 32))
(assert (= (x2258 (x1382 x86 x454 x878 x266 x1982 x1733 x610 x1237)) x1733))
(assert (x730 x1087))
(assert (= x206 (x2316 (x1495 x2010 x206 x372 x729 x2819 x1580))))
(assert (= x1533 (and (not x1578) x1429)))
(assert (x730 x1750))
(assert (x730 x353))
(assert (> (x2040 x2010 x1777 x1062) 10000))
(assert (x730 x993))
(assert (x730 x2276))
(assert (x730 x3080))
(assert (x730 x680))
(assert (< 10000 (x2358 x2446 x2217 x358 x2296 x3098 x2095 x1048)))
(assert (= x2380 (x2316 (x2040 x1258 x2380 x812))))
(assert (x730 x377))
(assert (= (x79 (x1382 x41 x439 x193 x158 x751 x926 x2554 x608)) x751))
(assert (=> (>= 10000 x1401) (= 0 (x3126 x1401))))
(assert (x730 x441))
(assert (x1613 32 x690))
(assert (x400 x663))
(assert (x730 x3009))
(assert (x730 x2864))
(assert (=> (>= 10000 x2093) (= 0 (x3126 x2093))))
(assert (x730 x860))
(assert (= x3110 (x2316 (x872 x1955 x3110 x999 x2468 x2733))))
(assert (= (x1107 (x2040 x1627 x2923 x280)) x1627))
(assert (x730 x715))
(assert (x2705 32542679537407071897843112657522291873774333932075415528008786499928730894336))
(assert (= x2381 (x1323 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078))))
(assert (x730 x381))
(assert (x730 x1706))
(assert (x1174 x2877))
(assert (=> (<= x2768 10000) (= (x3126 x2768) 0)))
(assert (= (x872 x1353 x1953 x1712 x627 x30) (x3126 (x872 x1353 x1953 x1712 x627 x30))))
(assert (x730 x92))
(assert (= x1701 (x1323 (x1382 x1258 x2001 x1461 x1701 x1528 x2874 x681 x1055))))
(assert (x730 x3097))
(assert (x730 x2271))
(assert (x730 x362))
(assert (x730 x1401))
(assert (x730 x1203))
(assert (x730 x2922))
(assert (x730 x846))
(assert (x730 x917))
(assert (=> (<= x1258 10000) (= (x3126 x1258) 0)))
(assert (x730 x2742))
(assert (=> (>= 10000 x23) (= 0 (x3126 x23))))
(assert (= (and (not x880) x1198) x1965))
(assert (x730 x951))
(assert (=> (<= x1003 10000) (= 0 (x3126 x1003))))
(assert (x730 x1491))
(assert (x730 x2172))
(assert (x730 x778))
(assert (=> (>= 10000 x782) (= 0 (x3126 x782))))
(assert (> (x1382 x2010 x437 x2132 x2737 x3068 x2279 x2921 x2171) 10000))
(assert (x730 x2085))
(assert (x730 x220))
(assert (=> (>= 10000 x2023) (= 0 (x3126 x2023))))
(assert (= (x2203 (x872 x86 x2223 x1997 x2881 x467)) x1997))
(assert (x730 x1678))
(assert (x730 x1351))
(assert (x730 x1019))
(assert (x730 x56))
(assert (= x48 (x79 (x1382 x1140 x2355 x384 x2381 x48 x1784 x1096 x3078))))
(assert (x1174 x2729))
(assert (x730 x1908))
(assert (= x999 (x2203 (x872 x1955 x3110 x999 x2468 x2733))))
(assert (not (x2705 (x3066 x41 x1817 x354 x714))))
(assert (=> (<= x2010 10000) (= 0 (x3126 x2010))))
(assert (x730 x98))
(assert (x730 x2017))
(assert (= (x3126 (x872 x1627 x2483 x109 x2307 x1490)) (x872 x1627 x2483 x109 x2307 x1490)))
(assert (x730 x1607))
(assert (x730 x2051))
(assert (= (x3126 (x2476 x1955 x108)) (x2476 x1955 x108)))
(assert (x730 x2614))
(assert (x730 x1784))
(assert (= (x1107 (x1495 x340 x1638 x1834 x2210 x285 x1956)) x340))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2358 x2520 x1428 x3057 x2346 x2292 x238 x146)))
(assert (x730 x2250))
(assert (x730 x1798))
(assert (= (x2203 (x3066 x1353 x1464 x701 x2889)) x701))
(assert (x730 x1759))
(assert (= (x2203 (x3066 x2520 x1785 x911 x2970)) x911))
(assert (x730 x2221))
(assert (not (x2705 (x2040 x914 x499 x291))))
(assert (x730 x2789))
(assert (= x937 (x79 (x2358 x2660 x977 x1773 x2109 x937 x2503 x453))))
(assert (=> (<= x2619 10000) (= 0 (x3126 x2619))))
(assert (x730 x180))
(assert (x730 x678))
(assert (x1620 x1992))
(assert (= (or x99 x1421 x154 x2048 x489) x2487))
(assert (x730 x966))
(assert (x730 x1455))
(assert (x1174 x2110))
(assert (= x2677 (or x188 x500 x2225 x535 x22)))
(assert (not (x2705 (x1495 x2660 x524 x2407 x2192 x31 x1339))))
(assert (= (x3126 37664329658542632380461339884011895550187483938955784695590509376205521682432) 0))
(assert (x730 x1833))
(assert (x730 x1801))
(assert (x730 x2141))
(assert (= x2188 (x2316 (x872 x2010 x2188 x2174 x1787 x283))))
(assert (= (x2683 (x2358 x2010 x938 x1099 x2860 x370 x2564 x2509)) x2509))
(assert (x634 x2626 1461501637330902918203684832716283019655932542976))
(assert (x730 x1109))
(assert (= x1390 (=> (= x1394 x2867) x2638)))
(assert (=> (>= 10000 x2142) (= 0 (x3126 x2142))))
(assert (x730 x1400))
(assert (x730 x1764))
(assert (= (x3126 (x1495 x86 x2248 x1945 x156 x566 x621)) (x1495 x86 x2248 x1945 x156 x566 x621)))
(assert (= (or x2865 x82) x457))
(assert (x730 x34))
(assert (= (=> (= x2073 (= 0 x1064)) (and (=> (not x2073) x1604) (=> (and x2073 (= x2678 x2598)) x1896))) x2247))
(assert (= (x3126 (x1495 x1955 x785 x1671 x1652 x833 x347)) (x1495 x1955 x785 x1671 x1652 x833 x347)))
(assert (x730 x603))
(assert (x730 x2781))
(assert (x730 x2812))
(assert (x730 x153))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2040 x2520 x3117 x311)))
(assert (=> (>= 10000 x1618) (= 0 (x3126 x1618))))
(assert (=> (<= x1080 10000) (= (x3126 x1080) 0)))
(assert (x730 x3002))
(assert (x730 x1151))
(assert (not (x2705 (x2040 x1140 x702 x1878))))
(assert (= (x2203 (x1495 x1401 x2366 x421 x2896 x366 x1518)) x421))
(assert (=> (>= 10000 x470) (= (x3126 x470) 0)))
(assert (=> (<= x785 10000) (= (x3126 x785) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x872 x1140 x314 x2331 x587 x670)))
(assert (= x692 (x2203 (x1495 x1258 x1080 x692 x2178 x732 x2902))))
(assert (= x1158 (and x2386 x2868)))
(assert (x634 x879 1461501637330902918203684832716283019655932542976))
(assert (= (x3126 (x3066 66 x2962 x1150 x589)) (x3066 66 x2962 x1150 x589)))
(assert (x730 x483))
(assert (=> (<= x1889 10000) (= (x3126 x1889) 0)))
(assert (x1006 x1234))
(assert (= x2841 (and x990 (not x2973))))
(assert (x730 x1288))
(assert (x730 x592))
(assert (x730 x1441))
(assert (< 10000 (x3066 x2660 x1931 x857 x111)))
(assert (= (and x465 x2680) x1959))
(assert (x730 x1123))
(assert (x730 x1000))
(assert (= (x2683 (x1382 x2520 x1314 x1410 x422 x895 x2059 x1779 x1770)) x1779))
(assert (x730 x2302))
(assert (x730 x1534))
(assert (x730 x2108))
(assert (x730 x1445))
(assert (x634 x617 32))
(assert (x1174 x1234))
(assert (=> (>= 10000 x2382) (= (x3126 x2382) 0)))
(assert (x730 x226))
(check-sat)
(exit)
