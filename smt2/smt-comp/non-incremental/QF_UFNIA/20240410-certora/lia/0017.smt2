(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x3749 () Bool)
(declare-fun x4447 () Bool)
(declare-fun x4039 () Int)
(declare-fun x1763 () Bool)
(declare-fun x783 () Int)
(declare-fun x4024 () Int)
(declare-fun x246 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x4352 () Bool)
(declare-fun x2443 () Bool)
(declare-fun x1444 () Int)
(declare-fun x2827 () Int)
(declare-fun x1146 () Bool)
(declare-fun x2877 () Int)
(declare-fun x1505 () Int)
(declare-fun x3487 () Bool)
(declare-fun x757 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x3664 () Int)
(declare-fun x528 () Int)
(declare-fun x105 () Bool)
(declare-fun x2034 () Int)
(declare-fun x2127 () Int)
(declare-fun x1268 () Bool)
(declare-fun x2224 () Int)
(declare-fun x3419 () Int)
(declare-fun x3180 () Bool)
(declare-fun x2531 () Int)
(declare-fun x1303 () Bool)
(declare-fun x2316 () Int)
(declare-fun x4546 () Bool)
(declare-fun x1865 () Int)
(declare-fun x557 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x1746 () Int)
(declare-fun x3323 () Int)
(declare-fun x3137 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x132 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x4563 () Int)
(declare-fun x4376 () Int)
(declare-fun x456 () Bool)
(declare-fun x3527 () Bool)
(declare-fun x3907 () Int)
(declare-fun x233 () Bool)
(declare-fun x898 () Int)
(declare-fun x1747 () Bool)
(declare-fun x907 () Int)
(declare-fun x306 () Int)
(declare-fun x2292 () Bool)
(declare-fun x380 () Int)
(declare-fun x385 () Int)
(declare-fun x1929 () Int)
(declare-fun x2997 (Int) Int)
(declare-fun x228 () Int)
(declare-fun x709 () Int)
(declare-fun x141 () Int)
(declare-fun x656 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x646 () Int)
(declare-fun x1650 () Int)
(declare-fun x3417 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1779 (Int) Int)
(declare-fun x800 () Bool)
(declare-fun x88 () Int)
(declare-fun x577 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x4514 () Bool)
(declare-fun x4016 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x1896 () Bool)
(declare-fun x3441 () Bool)
(declare-fun x292 () Int)
(declare-fun x4282 () Int)
(declare-fun x1876 () Bool)
(declare-fun x2081 () Int)
(declare-fun x953 () Int)
(declare-fun x3597 () Int)
(declare-fun x407 () Int)
(declare-fun x1033 () Bool)
(declare-fun x1963 () Int)
(declare-fun x813 () Bool)
(declare-fun x4253 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x3512 () Int)
(declare-fun x1304 () Int)
(declare-fun x374 () Int)
(declare-fun x267 () Int)
(declare-fun x75 (Int) Int)
(declare-fun x1835 () Int)
(declare-fun x1975 () Int)
(declare-fun x3027 () Int)
(declare-fun x2372 () Bool)
(declare-fun x4416 () Bool)
(declare-fun x583 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x2973 () Int)
(declare-fun x2452 () Bool)
(declare-fun x566 () Bool)
(declare-fun x4442 () Int)
(declare-fun x2736 () Bool)
(declare-fun x636 () Int)
(declare-fun x2306 () Bool)
(declare-fun x215 () Int)
(declare-fun x2172 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x3657 () Int)
(declare-fun x654 () Int)
(declare-fun x2733 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x548 () Int)
(declare-fun x561 () Int)
(declare-fun x283 () Bool)
(declare-fun x2053 () Int)
(declare-fun x2578 () Bool)
(declare-fun x1161 (Int) Int)
(declare-fun x3840 () Int)
(declare-fun x591 () Bool)
(declare-fun x1466 () Int)
(declare-fun x712 () Int)
(declare-fun x1733 () Int)
(declare-fun x1592 () Int)
(declare-fun x1852 () Int)
(declare-fun x3216 () Int)
(declare-fun x3940 () Bool)
(declare-fun x28 () Int)
(declare-fun x2755 () Bool)
(declare-fun x3553 () Bool)
(declare-fun x36 () Bool)
(declare-fun x134 () Bool)
(declare-fun x2082 () Int)
(declare-fun x1871 () Bool)
(declare-fun x2957 () Int)
(declare-fun x4403 () Int)
(declare-fun x3993 () Int)
(declare-fun x629 () Bool)
(declare-fun x1952 () Int)
(declare-fun x1341 () Int)
(declare-fun x3594 () Int)
(declare-fun x1425 () Int)
(declare-fun x3942 () Int)
(declare-fun x555 () Bool)
(declare-fun x4214 () Bool)
(declare-fun x3705 () Int)
(declare-fun x966 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x2013 () Int)
(declare-fun x993 () Bool)
(declare-fun x1270 () Int)
(declare-fun x4192 () Bool)
(declare-fun x3162 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x3415 () Int)
(declare-fun x3576 () Int)
(declare-fun x3166 () Int)
(declare-fun x3157 () Int)
(declare-fun x2781 () Bool)
(declare-fun x823 () Bool)
(declare-fun x1795 () Int)
(declare-fun x3941 () Int)
(declare-fun x120 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x1099 () Int)
(declare-fun x3425 () Int)
(declare-fun x2313 () Int)
(declare-fun x4100 () Bool)
(declare-fun x3981 () Int)
(declare-fun x357 () Bool)
(declare-fun x2729 () Int)
(declare-fun x2909 () Bool)
(declare-fun x4017 () Int)
(declare-fun x1804 () Bool)
(declare-fun x2596 (Int) Int)
(declare-fun x2427 () Int)
(declare-fun x154 () Bool)
(declare-fun x531 () Bool)
(declare-fun x69 () Int)
(declare-fun x3126 () Bool)
(declare-fun x317 () Bool)
(declare-fun x404 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x1439 () Int)
(declare-fun x4209 () Int)
(declare-fun x1642 () Int)
(declare-fun x2592 () Int)
(declare-fun x2163 () Int)
(declare-fun x3555 (Int) Int)
(declare-fun x3352 () Int)
(declare-fun x1608 () Int)
(declare-fun x2267 () Bool)
(declare-fun x1474 () Int)
(declare-fun x835 () Bool)
(declare-fun x3204 () Int)
(declare-fun x3345 () Int)
(declare-fun x1863 () Bool)
(declare-fun x3 () Int)
(declare-fun x3344 () Int)
(declare-fun x3000 () Bool)
(declare-fun x4048 () Int)
(declare-fun x3888 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x161 () Int)
(declare-fun x1328 () Int)
(declare-fun x3592 () Int)
(declare-fun x1649 () Bool)
(declare-fun x1302 () Int)
(declare-fun x687 () Int)
(declare-fun x3726 () Int)
(declare-fun x20 () Bool)
(declare-fun x3069 () Int)
(declare-fun x2016 () Int)
(declare-fun x394 () Bool)
(declare-fun x1626 () Int)
(declare-fun x289 () Bool)
(declare-fun x438 () Bool)
(declare-fun x3855 () Int)
(declare-fun x2930 () Bool)
(declare-fun x285 () Int)
(declare-fun x1550 () Bool)
(declare-fun x3561 () Int)
(declare-fun x4027 () Bool)
(declare-fun x3869 () Bool)
(declare-fun x714 () Bool)
(declare-fun x4202 () Int)
(declare-fun x2405 () Int)
(declare-fun x1224 () Int)
(declare-fun x2134 () Int)
(declare-fun x601 () Bool)
(declare-fun x21 () Int)
(declare-fun x3849 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x4373 () Bool)
(declare-fun x3082 () Int)
(declare-fun x198 () Int)
(declare-fun x1904 () Bool)
(declare-fun x2143 (Int) Int)
(declare-fun x1910 () Int)
(declare-fun x2679 () Int)
(declare-fun x1581 () Bool)
(declare-fun x1140 () Int)
(declare-fun x1164 () Bool)
(declare-fun x2188 () Int)
(declare-fun x9 () Int)
(declare-fun x4552 () Int)
(declare-fun x997 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x4328 () Bool)
(declare-fun x725 () Bool)
(declare-fun x3199 () Int)
(declare-fun x4401 () Int)
(declare-fun x3547 () Bool)
(declare-fun x1819 () Int)
(declare-fun x4020 (Int) Int)
(declare-fun x4082 () Bool)
(declare-fun x886 () Bool)
(declare-fun x430 () Bool)
(declare-fun x3291 () Bool)
(declare-fun x3622 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x1535 () Int)
(declare-fun x3946 () Int)
(declare-fun x2256 () Bool)
(declare-fun x3359 () Int)
(declare-fun x525 () Bool)
(declare-fun x4069 () Bool)
(declare-fun x2716 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x355 () Int)
(declare-fun x3343 () Int)
(declare-fun x533 () Int)
(declare-fun x2180 () Int)
(declare-fun x3531 () Int)
(declare-fun x1431 () Int)
(declare-fun x642 () Int)
(declare-fun x1288 () Int)
(declare-fun x1314 () Int)
(declare-fun x2632 () Bool)
(declare-fun x2655 (Int Int) Int)
(declare-fun x273 () Int)
(declare-fun x585 () Bool)
(declare-fun x787 () Int)
(declare-fun x2538 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x3593 () Bool)
(declare-fun x2464 () Int)
(declare-fun x4287 () Bool)
(declare-fun x2730 () Int)
(declare-fun x2782 () Bool)
(declare-fun x502 () Int)
(declare-fun x4193 () Bool)
(declare-fun x1134 () Int)
(declare-fun x367 () Int)
(declare-fun x661 () Bool)
(declare-fun x3626 () Int)
(declare-fun x57 () Int)
(declare-fun x3954 () Int)
(declare-fun x3387 () Int)
(declare-fun x1724 () Int)
(declare-fun x3242 () Int)
(declare-fun x3989 () Bool)
(declare-fun x4255 () Bool)
(declare-fun x402 () Bool)
(declare-fun x2349 () Bool)
(declare-fun x1010 () Int)
(declare-fun x1318 () Int)
(declare-fun x2700 () Int)
(declare-fun x319 () Int)
(declare-fun x3314 () Int)
(declare-fun x376 () Bool)
(declare-fun x3505 () Int)
(declare-fun x2806 () Int)
(declare-fun x4081 () Bool)
(declare-fun x4433 () Int)
(declare-fun x1340 () Int)
(declare-fun x1038 () Int)
(declare-fun x2170 () Bool)
(declare-fun x3120 () Int)
(declare-fun x4473 () Bool)
(declare-fun x903 () Int)
(declare-fun x93 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x689 () Int)
(declare-fun x2645 () Bool)
(declare-fun x839 () Bool)
(declare-fun x4110 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x3063 () Bool)
(declare-fun x4238 () Bool)
(declare-fun x3884 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x3621 () Int)
(declare-fun x4061 () Int)
(declare-fun x2646 () Bool)
(declare-fun x3737 () Int)
(declare-fun x1144 () Int)
(declare-fun x3223 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x4478 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x4242 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x836 () Int)
(declare-fun x2516 () Int)
(declare-fun x90 () Bool)
(declare-fun x1989 () Int)
(declare-fun x1821 () Int)
(declare-fun x128 () Int)
(declare-fun x2962 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x3317 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x3270 () Bool)
(declare-fun x2648 () Int)
(declare-fun x2663 () Bool)
(declare-fun x4067 () Bool)
(declare-fun x3133 () Int)
(declare-fun x392 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1564 () Bool)
(declare-fun x3564 () Int)
(declare-fun x1890 () Int)
(declare-fun x3738 () Int)
(declare-fun x1202 () Int)
(declare-fun x1783 () Int)
(declare-fun x3115 () Bool)
(declare-fun x3509 () Bool)
(declare-fun x873 () Int)
(declare-fun x2673 () Bool)
(declare-fun x4032 () Bool)
(declare-fun x576 () Int)
(declare-fun x1391 () Int)
(declare-fun x419 () Int)
(declare-fun x3503 () Int)
(declare-fun x2116 () Int)
(declare-fun x1347 () Int)
(declare-fun x2393 () Int)
(declare-fun x1960 () Int)
(declare-fun x1571 () Int)
(declare-fun x1178 () Int)
(declare-fun x1272 () Bool)
(declare-fun x3943 () Int)
(declare-fun x3910 () Bool)
(declare-fun x812 () Int)
(declare-fun x4087 () Int)
(declare-fun x3647 () Bool)
(declare-fun x346 () Int)
(declare-fun x342 () Int)
(declare-fun x4589 () Int)
(declare-fun x3047 () Bool)
(declare-fun x1959 () Int)
(declare-fun x2879 () Bool)
(declare-fun x2135 () Int)
(declare-fun x797 () Int)
(declare-fun x4554 () Int)
(declare-fun x3978 () Bool)
(declare-fun x766 () Int)
(declare-fun x1945 () Int)
(declare-fun x2652 () Bool)
(declare-fun x3838 () Bool)
(declare-fun x4372 () Int)
(declare-fun x4219 () Int)
(declare-fun x3351 () Int)
(declare-fun x1351 () Bool)
(declare-fun x670 () Int)
(declare-fun x910 () Int)
(declare-fun x1404 () Bool)
(declare-fun x3460 () Bool)
(declare-fun x3427 () Int)
(declare-fun x3966 () Int)
(declare-fun x462 () Int)
(declare-fun x2119 () Bool)
(declare-fun x1858 () Int)
(declare-fun x371 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x4355 () Int)
(declare-fun x116 () Int)
(declare-fun x4136 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x3794 () Bool)
(declare-fun x3990 () Int)
(declare-fun x4108 () Int)
(declare-fun x127 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x1606 () Int)
(declare-fun x3435 () Int)
(declare-fun x1875 (Int) Int)
(declare-fun x2296 () Bool)
(declare-fun x3796 () Int)
(declare-fun x3269 () Bool)
(declare-fun x2030 () Int)
(declare-fun x2993 () Int)
(declare-fun x1338 (Int) Int)
(declare-fun x3548 () Int)
(declare-fun x3006 () Int)
(declare-fun x160 () Bool)
(declare-fun x876 () Bool)
(declare-fun x3541 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x4564 () Int)
(declare-fun x3723 () Bool)
(declare-fun x3911 () Int)
(declare-fun x2758 () Bool)
(declare-fun x4205 () Int)
(declare-fun x630 () Int)
(declare-fun x1920 () Int)
(declare-fun x2024 () Bool)
(declare-fun x4010 (Int) Int)
(declare-fun x1160 () Bool)
(declare-fun x2681 () Bool)
(declare-fun x2339 () Int)
(declare-fun x4094 () Int)
(declare-fun x3800 () Int)
(declare-fun x3874 () Int)
(declare-fun x776 () Int)
(declare-fun x4055 () Bool)
(declare-fun x3036 () Int)
(declare-fun x2176 () Int)
(declare-fun x2965 () Int)
(declare-fun x281 () Bool)
(declare-fun x3400 () Int)
(declare-fun x1443 () Int)
(declare-fun x3014 () Int)
(declare-fun x2212 () Int)
(declare-fun x626 () Int)
(declare-fun x1911 () Int)
(declare-fun x1332 () Bool)
(declare-fun x3839 () Int)
(declare-fun x760 () Int)
(declare-fun x3401 () Int)
(declare-fun x2659 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x3920 () Int)
(declare-fun x3931 () Int)
(declare-fun x1559 () Int)
(declare-fun x3983 () Bool)
(declare-fun x358 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x2018 () Int)
(declare-fun x1331 () Int)
(declare-fun x698 () Bool)
(declare-fun x2054 () Int)
(declare-fun x3915 (Int Int Int) Int)
(declare-fun x4556 () Int)
(declare-fun x3661 () Bool)
(declare-fun x2845 () Bool)
(declare-fun x1760 () Int)
(declare-fun x2569 () Int)
(declare-fun x3385 () Int)
(declare-fun x3761 () Bool)
(declare-fun x3534 () Bool)
(declare-fun x4492 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x397 () Int)
(declare-fun x3035 () Bool)
(declare-fun x179 () Int)
(declare-fun x72 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x567 () Int)
(declare-fun x3783 () Bool)
(declare-fun x743 () Int)
(declare-fun x782 () Int)
(declare-fun x3106 () Int)
(declare-fun x4489 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x1453 () Int)
(declare-fun x2062 () Bool)
(declare-fun x2504 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x3459 () Int)
(declare-fun x3395 () Bool)
(declare-fun x4083 () Bool)
(declare-fun x226 () Int)
(declare-fun x4500 () Int)
(declare-fun x2844 () Int)
(declare-fun x2499 () Int)
(declare-fun x2136 () Int)
(declare-fun x4490 () Bool)
(declare-fun x788 () Int)
(declare-fun x2773 () Bool)
(declare-fun x41 () Int)
(declare-fun x1517 () Int)
(declare-fun x1181 () Int)
(declare-fun x1143 () Bool)
(declare-fun x156 () Int)
(declare-fun x3585 () Bool)
(declare-fun x3775 () Int)
(declare-fun x1397 () Int)
(declare-fun x4462 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x3280 () Bool)
(declare-fun x495 () Bool)
(declare-fun x3221 () Int)
(declare-fun x3182 () Bool)
(declare-fun x2784 () Int)
(declare-fun x1844 () Int)
(declare-fun x4330 () Int)
(declare-fun x3348 () Int)
(declare-fun x4103 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x658 () Int)
(declare-fun x1072 () Int)
(declare-fun x4263 () Int)
(declare-fun x2213 () Int)
(declare-fun x988 () Int)
(declare-fun x1509 () Int)
(declare-fun x2492 () Bool)
(declare-fun x2745 () Int)
(declare-fun x1545 () Int)
(declare-fun x3011 () Int)
(declare-fun x3044 () Int)
(declare-fun x1291 () Bool)
(declare-fun x2801 () Int)
(declare-fun x328 (Int) Int)
(declare-fun x3701 () Bool)
(declare-fun x2323 () Int)
(declare-fun x4160 () Bool)
(declare-fun x1674 () Int)
(declare-fun x3518 () Int)
(declare-fun x474 () Int)
(declare-fun x3464 () Bool)
(declare-fun x635 () Int)
(declare-fun x4379 () Int)
(declare-fun x336 (Int Int Int Int Int Int Int) Int)
(declare-fun x3081 () Bool)
(declare-fun x2762 () Int)
(declare-fun x4351 () Int)
(declare-fun x1077 () Int)
(declare-fun x1780 () Int)
(declare-fun x1403 () Int)
(declare-fun x276 () Int)
(declare-fun x1796 () Bool)
(declare-fun x3032 () Bool)
(declare-fun x539 () Int)
(declare-fun x3382 () Bool)
(declare-fun x1098 () Int)
(declare-fun x977 () Int)
(declare-fun x3765 () Bool)
(declare-fun x2156 () Int)
(declare-fun x2189 () Bool)
(declare-fun x1811 () Int)
(declare-fun x1286 () Bool)
(declare-fun x4576 () Int)
(declare-fun x2675 () Bool)
(declare-fun x1744 () Int)
(declare-fun x4332 () Bool)
(declare-fun x1520 () Int)
(declare-fun x464 () Int)
(declare-fun x2720 () Bool)
(declare-fun x2513 () Int)
(declare-fun x924 () Bool)
(declare-fun x645 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x2039 () Int)
(declare-fun x3900 () Bool)
(declare-fun x4365 () Bool)
(declare-fun x405 () Int)
(declare-fun x1406 () Int)
(declare-fun x3364 () Int)
(declare-fun x3971 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x4140 () Bool)
(declare-fun x305 () Int)
(declare-fun x3735 () Bool)
(declare-fun x3311 () Bool)
(declare-fun x4551 () Int)
(declare-fun x1426 () Bool)
(declare-fun x3611 () Bool)
(declare-fun x3476 () Int)
(declare-fun x3332 () Bool)
(declare-fun x1895 () Int)
(declare-fun x1345 () Int)
(declare-fun x4199 () Bool)
(declare-fun x3841 () Int)
(declare-fun x1459 () Int)
(declare-fun x366 () Int)
(declare-fun x1337 () Bool)
(declare-fun x1133 () Int)
(declare-fun x331 () Bool)
(declare-fun x1067 () Int)
(declare-fun x4249 () Int)
(declare-fun x1269 () Bool)
(declare-fun x655 () Int)
(declare-fun x3028 () Int)
(declare-fun x1163 () Int)
(declare-fun x805 () Bool)
(declare-fun x3009 () Int)
(declare-fun x3552 () Int)
(declare-fun x74 () Bool)
(declare-fun x1675 () Int)
(declare-fun x3331 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x3346 () Bool)
(declare-fun x2865 () Bool)
(declare-fun x205 () Int)
(declare-fun x4057 () Int)
(declare-fun x3805 () Int)
(declare-fun x1644 () Int)
(declare-fun x3875 () Int)
(declare-fun x1051 () Bool)
(declare-fun x2617 () Int)
(declare-fun x1666 () Bool)
(declare-fun x96 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x730 () Int)
(declare-fun x4451 () Bool)
(declare-fun x4377 () Int)
(declare-fun x2310 () Bool)
(declare-fun x2022 () Int)
(declare-fun x4380 () Int)
(declare-fun x302 () Int)
(declare-fun x558 () Int)
(declare-fun x3207 () Bool)
(declare-fun x3716 () Int)
(declare-fun x1279 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1132 () Bool)
(declare-fun x2171 () Int)
(declare-fun x2928 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x1964 () Int)
(declare-fun x2037 () Bool)
(declare-fun x4298 () Bool)
(declare-fun x767 () Int)
(declare-fun x4189 () Int)
(declare-fun x4356 () Int)
(declare-fun x2658 () Int)
(declare-fun x71 () Int)
(declare-fun x2269 () Int)
(declare-fun x1790 () Int)
(declare-fun x2211 () Bool)
(declare-fun x3930 () Int)
(declare-fun x2650 () Int)
(declare-fun x2606 () Bool)
(declare-fun x1762 () Int)
(declare-fun x872 () Int)
(declare-fun x4281 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x4296 () Int)
(declare-fun x32 () Int)
(declare-fun x1433 () Bool)
(declare-fun x2838 () Bool)
(declare-fun x1239 () Int)
(declare-fun x970 () Int)
(declare-fun x978 () Int)
(declare-fun x178 () Bool)
(declare-fun x4587 () Bool)
(declare-fun x603 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x59 () Int)
(declare-fun x1597 () Int)
(declare-fun x1385 () Int)
(declare-fun x3556 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x66 () Bool)
(declare-fun x4148 () Bool)
(declare-fun x3979 () Int)
(declare-fun x2693 () Int)
(declare-fun x2775 () Int)
(declare-fun x150 () Bool)
(declare-fun x494 () Int)
(declare-fun x4468 () Int)
(declare-fun x4102 () Int)
(declare-fun x4054 () Bool)
(declare-fun x3305 () Int)
(declare-fun x1723 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x595 () Int)
(declare-fun x3358 () Bool)
(declare-fun x1032 () Int)
(declare-fun x2093 () Int)
(declare-fun x3862 () Int)
(declare-fun x4464 () Int)
(declare-fun x4241 () Int)
(declare-fun x4375 () Int)
(declare-fun x3902 () Int)
(declare-fun x1053 () Int)
(declare-fun x2886 () Int)
(declare-fun x2498 () Int)
(declare-fun x1485 () Int)
(declare-fun x3094 () Bool)
(declare-fun x424 () Bool)
(declare-fun x2378 () Int)
(declare-fun x695 () Int)
(declare-fun x3598 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x3691 () Bool)
(declare-fun x4059 () Int)
(declare-fun x2052 () Int)
(declare-fun x3725 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x3513 (Int) Int)
(declare-fun x2488 () Bool)
(declare-fun x4354 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x4374 () Int)
(declare-fun x3217 () Int)
(declare-fun x3007 () Int)
(declare-fun x2202 () Bool)
(declare-fun x2790 () Int)
(declare-fun x4111 () Int)
(declare-fun x1232 () Int)
(declare-fun x3450 () Int)
(declare-fun x1921 () Int)
(declare-fun x2522 () Int)
(declare-fun x3089 () Int)
(declare-fun x4421 () Int)
(declare-fun x2336 () Bool)
(declare-fun x400 () Bool)
(declare-fun x4386 () Bool)
(declare-fun x2887 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x4256 () Int)
(declare-fun x996 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x765 () Int)
(declare-fun x2560 () Int)
(declare-fun x11 () Int)
(declare-fun x580 () Int)
(declare-fun x535 () Bool)
(declare-fun x186 () Int)
(declare-fun x2222 () Int)
(declare-fun x3013 () Int)
(declare-fun x3250 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x3029 () Bool)
(declare-fun x806 () Int)
(declare-fun x2007 () Int)
(declare-fun x4480 () Int)
(declare-fun x81 () Bool)
(declare-fun x4033 () Int)
(declare-fun x1748 () Int)
(declare-fun x3356 () Int)
(declare-fun x2958 () Int)
(declare-fun x2151 () Int)
(declare-fun x4143 () Int)
(declare-fun x1367 () Int)
(declare-fun x260 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x2406 () Int)
(declare-fun x2275 () Bool)
(declare-fun x1631 () Int)
(declare-fun x869 () Int)
(declare-fun x4592 () Int)
(declare-fun x3879 () Int)
(declare-fun x1660 () Bool)
(declare-fun x3442 () Int)
(declare-fun x2676 () Int)
(declare-fun x4034 () Bool)
(declare-fun x3996 () Int)
(declare-fun x4395 () Bool)
(declare-fun x4213 () Int)
(declare-fun x2842 () Bool)
(declare-fun x745 () Int)
(declare-fun x1976 () Bool)
(declare-fun x3786 () Int)
(declare-fun x3539 () Int)
(declare-fun x484 () Int)
(declare-fun x1633 () Bool)
(declare-fun x2370 () Int)
(declare-fun x2576 () Bool)
(declare-fun x2907 (Int) Int)
(declare-fun x2562 () Bool)
(declare-fun x199 () Bool)
(declare-fun x4004 () Int)
(declare-fun x1410 () Int)
(declare-fun x1271 () Int)
(declare-fun x4574 () Int)
(declare-fun x3679 () Int)
(declare-fun x4233 () Int)
(declare-fun x4197 () Int)
(declare-fun x279 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x3938 () Bool)
(declare-fun x1107 () Int)
(declare-fun x892 () Int)
(declare-fun x1997 () Int)
(declare-fun x3103 () Int)
(declare-fun x3727 () Int)
(declare-fun x3181 () Int)
(declare-fun x1173 () Int)
(declare-fun x2200 () Bool)
(declare-fun x750 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x3754 () Bool)
(declare-fun x2141 () Int)
(declare-fun x529 () Bool)
(declare-fun x2763 () Int)
(declare-fun x2457 () Int)
(declare-fun x3010 () Int)
(declare-fun x4449 () Bool)
(declare-fun x3757 () Bool)
(declare-fun x507 () Int)
(declare-fun x3276 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x619 () Int)
(declare-fun x4446 () Bool)
(declare-fun x31 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x3491 () Int)
(declare-fun x735 () Int)
(declare-fun x4398 () Bool)
(declare-fun x581 () Bool)
(declare-fun x3673 () Bool)
(declare-fun x4503 () Bool)
(declare-fun x3144 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x3544 () Int)
(declare-fun x3361 () Bool)
(declare-fun x4561 () Int)
(declare-fun x3247 () Bool)
(declare-fun x717 () Int)
(declare-fun x1309 () Int)
(declare-fun x1874 () Int)
(declare-fun x4123 () Int)
(declare-fun x1064 () Bool)
(declare-fun x3370 () Int)
(declare-fun x254 () Int)
(declare-fun x1186 () Bool)
(declare-fun x3887 () Int)
(declare-fun x3914 () Int)
(declare-fun x1258 () Int)
(declare-fun x618 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x3578 () Bool)
(declare-fun x2992 () Int)
(declare-fun x2582 () Bool)
(declare-fun x3433 () Int)
(declare-fun x729 () Int)
(declare-fun x2788 () Bool)
(declare-fun x3909 () Int)
(declare-fun x2794 () Bool)
(declare-fun x2162 () Int)
(declare-fun x1898 () Int)
(declare-fun x862 () Bool)
(declare-fun x3173 () Int)
(declare-fun x1136 () Int)
(declare-fun x951 () Int)
(declare-fun x2757 () Int)
(declare-fun x1721 () Bool)
(declare-fun x3189 (Int) Int)
(declare-fun x840 () Bool)
(declare-fun x351 () Int)
(declare-fun x3475 () Bool)
(declare-fun x4084 () Bool)
(declare-fun x2873 () Bool)
(declare-fun x4043 () Bool)
(declare-fun x3830 () Bool)
(declare-fun x1317 () Int)
(declare-fun x612 () Int)
(declare-fun x2541 () Int)
(declare-fun x1922 () Int)
(declare-fun x109 () Bool)
(declare-fun x986 () Int)
(declare-fun x4125 () Bool)
(declare-fun x4184 (Int) Int)
(declare-fun x1075 () Int)
(declare-fun x569 () Int)
(declare-fun x2853 () Int)
(declare-fun x1984 () Bool)
(declare-fun x184 () Bool)
(declare-fun x2103 () Int)
(declare-fun x2959 () Int)
(declare-fun x4518 () Bool)
(declare-fun x4586 () Int)
(declare-fun x2367 () Int)
(declare-fun x3688 () Bool)
(declare-fun x3073 () Int)
(declare-fun x3834 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x270 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x4124 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x4068 () Int)
(declare-fun x1222 () Int)
(declare-fun x2802 () Int)
(declare-fun x1369 () Int)
(declare-fun x3061 () Int)
(declare-fun x2282 () Int)
(declare-fun x2420 () Int)
(declare-fun x722 () Bool)
(declare-fun x513 () Bool)
(declare-fun x3945 (Int) Int)
(declare-fun x255 () Bool)
(declare-fun x165 () Int)
(declare-fun x3168 () Int)
(declare-fun x4185 () Bool)
(declare-fun x3853 () Int)
(declare-fun x2092 () Int)
(declare-fun x691 () Int)
(declare-fun x3600 () Int)
(declare-fun x2078 () Int)
(declare-fun x2696 () Int)
(declare-fun x2976 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x2843 () Int)
(declare-fun x4533 () Bool)
(declare-fun x1325 () Int)
(declare-fun x4466 () Int)
(declare-fun x1773 () Bool)
(declare-fun x459 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x3493 () Int)
(declare-fun x4063 () Bool)
(declare-fun x219 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x2833 () Int)
(declare-fun x3612 () Bool)
(declare-fun x3928 () Int)
(declare-fun x290 () Bool)
(declare-fun x388 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x549 () Int)
(declare-fun x1829 () Bool)
(declare-fun x4006 () Bool)
(declare-fun x3878 () Bool)
(declare-fun x4510 () Bool)
(declare-fun x564 () Bool)
(declare-fun x3602 (Int) Int)
(declare-fun x1076 () Bool)
(declare-fun x927 () Bool)
(declare-fun x1786 () Int)
(declare-fun x2868 () Int)
(declare-fun x2797 () Bool)
(declare-fun x1170 () Int)
(declare-fun x523 () Int)
(declare-fun x4 () Int)
(declare-fun x3336 () Int)
(declare-fun x4350 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x917 () Bool)
(declare-fun x4097 () Bool)
(declare-fun x4274 () Bool)
(declare-fun x3313 () Int)
(declare-fun x3037 () Int)
(declare-fun x2605 () Int)
(declare-fun x1761 () Int)
(declare-fun x3821 () Bool)
(declare-fun x2088 () Int)
(declare-fun x935 () Int)
(declare-fun x1726 () Int)
(declare-fun x2949 () Int)
(declare-fun x2241 () Int)
(declare-fun x4402 () Int)
(declare-fun x1020 () Bool)
(declare-fun x344 (Int) Int)
(declare-fun x752 () Int)
(declare-fun x2115 () Int)
(declare-fun x4104 () Int)
(declare-fun x2728 () Int)
(declare-fun x2453 () Bool)
(declare-fun x2375 () Bool)
(declare-fun x3347 () Bool)
(declare-fun x3864 () Bool)
(declare-fun x4105 () Int)
(declare-fun x3944 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x2071 () Int)
(declare-fun x2548 () Bool)
(declare-fun x1191 () Int)
(declare-fun x217 () Int)
(declare-fun x3616 () Int)
(declare-fun x1701 () Bool)
(declare-fun x554 () Bool)
(declare-fun x2557 () Int)
(declare-fun x3607 () Int)
(declare-fun x3233 () Int)
(declare-fun x4018 () Int)
(declare-fun x3848 () Int)
(declare-fun x2335 () Bool)
(declare-fun x2818 () Int)
(declare-fun x3186 () Int)
(declare-fun x3191 () Bool)
(declare-fun x2630 () Bool)
(declare-fun x3808 () Int)
(declare-fun x4540 () Bool)
(declare-fun x4133 () Int)
(declare-fun x3151 () Int)
(declare-fun x3733 () Int)
(declare-fun x3188 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x3883 () Int)
(declare-fun x1704 () Int)
(declare-fun x401 (Int) Int)
(declare-fun x4383 () Int)
(declare-fun x329 () Int)
(declare-fun x3921 () Int)
(declare-fun x2863 () Bool)
(declare-fun x4086 () Bool)
(declare-fun x640 () Bool)
(declare-fun x3814 () Bool)
(declare-fun x1565 () Int)
(declare-fun x4396 () Int)
(declare-fun x897 () Int)
(declare-fun x4427 () Int)
(declare-fun x3158 () Bool)
(declare-fun x2254 () Int)
(declare-fun x545 () Bool)
(declare-fun x315 () Int)
(declare-fun x2045 () Int)
(declare-fun x2387 () Bool)
(declare-fun x1001 () Int)
(declare-fun x2674 () Bool)
(declare-fun x934 () Bool)
(declare-fun x3696 () Int)
(declare-fun x2634 () Int)
(declare-fun x2867 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x310 () Int)
(declare-fun x1741 () Int)
(declare-fun x135 () Int)
(declare-fun x967 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x666 () Bool)
(declare-fun x4284 () Int)
(declare-fun x1860 () Int)
(declare-fun x2324 () Bool)
(declare-fun x4217 () Int)
(declare-fun x1066 () Bool)
(declare-fun x3335 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x1573 () Int)
(declare-fun x2978 () Int)
(declare-fun x2410 () Bool)
(declare-fun x2749 () Bool)
(declare-fun x1805 () Int)
(declare-fun x1052 () Bool)
(declare-fun x4167 () Int)
(declare-fun x3022 () Bool)
(declare-fun x3353 () Int)
(declare-fun x4194 () Int)
(declare-fun x3102 () Int)
(declare-fun x999 () Bool)
(declare-fun x590 () Int)
(declare-fun x3018 () Int)
(declare-fun x2979 () Bool)
(declare-fun x4440 () Bool)
(declare-fun x3905 () Int)
(declare-fun x4149 () Int)
(declare-fun x2795 () Int)
(declare-fun x608 () Int)
(declare-fun x1574 () Int)
(declare-fun x947 () Int)
(declare-fun x4579 () Int)
(declare-fun x616 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x2100 () Int)
(declare-fun x3540 () Bool)
(declare-fun x949 () Int)
(declare-fun x2286 () Bool)
(declare-fun x3842 () Bool)
(declare-fun x1755 () Int)
(declare-fun x4578 () Int)
(declare-fun x2878 () Bool)
(declare-fun x3803 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x4225 () Int)
(declare-fun x693 () Bool)
(declare-fun x4385 () Bool)
(declare-fun x470 () Int)
(declare-fun x2595 () Int)
(declare-fun x1031 () Bool)
(declare-fun x1893 () Int)
(declare-fun x362 () Int)
(declare-fun x428 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1209 () Int)
(declare-fun x622 () Int)
(declare-fun x2192 () Bool)
(declare-fun x3452 () Bool)
(declare-fun x3145 () Int)
(declare-fun x3893 () Int)
(declare-fun x3683 () Bool)
(declare-fun x684 () Int)
(declare-fun x1557 () Int)
(declare-fun x3760 () Bool)
(declare-fun x3174 () Int)
(declare-fun x1849 () Int)
(declare-fun x1967 () Int)
(declare-fun x3734 () Int)
(declare-fun x1817 () Bool)
(declare-fun x617 () Int)
(declare-fun x699 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x4310 () Int)
(declare-fun x2070 () Int)
(declare-fun x1063 () Int)
(declare-fun x3785 () Int)
(declare-fun x3533 () Bool)
(declare-fun x3719 () Bool)
(declare-fun x915 () Bool)
(declare-fun x500 () Bool)
(declare-fun x2849 () Int)
(declare-fun x2714 () Int)
(declare-fun x1816 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x965 () Bool)
(declare-fun x4088 () Int)
(declare-fun x4275 () Int)
(declare-fun x1306 () Int)
(declare-fun x2077 () Int)
(declare-fun x4191 () Int)
(declare-fun x1047 () Int)
(declare-fun x195 () Int)
(declare-fun x3222 (Int) Int)
(declare-fun x3163 () Int)
(declare-fun x3866 () Int)
(declare-fun x1569 () Int)
(declare-fun x3858 () Bool)
(declare-fun x1951 () Int)
(declare-fun x3175 () Bool)
(declare-fun x38 () Int)
(declare-fun x1109 () Int)
(declare-fun x2332 () Bool)
(declare-fun x942 () Int)
(declare-fun x3122 () Bool)
(declare-fun x3782 () Bool)
(declare-fun x1245 () Int)
(declare-fun x1657 () Int)
(declare-fun x2702 () Bool)
(declare-fun x3339 () Int)
(declare-fun x1168 () Int)
(declare-fun x3528 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x466 () Bool)
(declare-fun x4231 () Bool)
(declare-fun x3897 () Bool)
(declare-fun x2678 () Int)
(declare-fun x3051 () Int)
(declare-fun x808 () Int)
(declare-fun x2547 () Int)
(declare-fun x943 () Int)
(declare-fun x2142 () Int)
(declare-fun x852 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1210 () Int)
(declare-fun x4117 () Bool)
(declare-fun x168 () Int)
(declare-fun x4390 () Int)
(declare-fun x4029 () Int)
(declare-fun x1097 () Int)
(declare-fun x2817 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x2261 () Int)
(declare-fun x2486 () Int)
(declare-fun x2975 () Bool)
(declare-fun x1423 () Int)
(declare-fun x2114 () Int)
(declare-fun x1024 () Int)
(declare-fun x2258 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x3324 () Int)
(declare-fun x1316 () Int)
(declare-fun x4367 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x237 () Int)
(declare-fun x772 () Int)
(declare-fun x2869 () Bool)
(declare-fun x737 () Int)
(declare-fun x1918 () Int)
(declare-fun x425 () Bool)
(declare-fun x3918 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x1568 () Int)
(declare-fun x4145 () Int)
(declare-fun x2312 () Bool)
(declare-fun x650 () Int)
(declare-fun x544 () Int)
(declare-fun x4099 () Int)
(declare-fun x2472 () Int)
(declare-fun x637 () Int)
(declare-fun x2936 () Bool)
(declare-fun x2460 () Bool)
(declare-fun x2152 () Int)
(declare-fun x985 () Int)
(declare-fun x975 () Int)
(declare-fun x460 () Int)
(declare-fun x759 () Bool)
(declare-fun x1919 () Int)
(declare-fun x3792 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x4101 () Bool)
(declare-fun x2129 () Bool)
(declare-fun x4424 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x2544 () Int)
(declare-fun x2552 () Int)
(declare-fun x2926 () Int)
(declare-fun x1366 () Bool)
(declare-fun x4306 () Int)
(declare-fun x3635 () Bool)
(declare-fun x992 () Int)
(declare-fun x3816 () Bool)
(declare-fun x365 () Bool)
(declare-fun x904 () Int)
(declare-fun x1694 () Int)
(declare-fun x609 () Bool)
(declare-fun x4200 () Bool)
(declare-fun x3744 () Int)
(declare-fun x906 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x4460 () Bool)
(declare-fun x2231 () Int)
(declare-fun x2834 () Int)
(declare-fun x1492 () Bool)
(declare-fun x3788 () Int)
(declare-fun x1623 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x133 () Int)
(declare-fun x3040 () Int)
(declare-fun x4153 () Int)
(declare-fun x3617 () Int)
(declare-fun x3478 () Int)
(declare-fun x1554 () Int)
(declare-fun x2161 () Int)
(declare-fun x551 () Int)
(declare-fun x3728 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x1888 () Int)
(declare-fun x1193 () Int)
(declare-fun x4353 () Bool)
(declare-fun x1183 () Int)
(declare-fun x2206 () Int)
(declare-fun x2641 () Bool)
(declare-fun x2113 (Int) Int)
(declare-fun x3410 () Int)
(declare-fun x3026 () Bool)
(declare-fun x3235 () Int)
(declare-fun x391 () Bool)
(declare-fun x3508 () Int)
(declare-fun x1266 () Bool)
(declare-fun x1050 () Int)
(declare-fun x3810 () Bool)
(declare-fun x829 () Int)
(declare-fun x1149 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x4508 () Bool)
(declare-fun x3695 () Bool)
(declare-fun x2856 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x4541 () Int)
(declare-fun x2906 () Int)
(declare-fun x303 () Bool)
(declare-fun x604 () Int)
(declare-fun x2289 () Bool)
(declare-fun x2394 () Int)
(declare-fun x2047 () Bool)
(declare-fun x3537 () Int)
(declare-fun x56 () Int)
(declare-fun x159 () Int)
(declare-fun x3342 () Int)
(declare-fun x447 () Int)
(declare-fun x866 () Int)
(declare-fun x4337 () Int)
(declare-fun x2621 () Int)
(declare-fun x1887 () Bool)
(declare-fun x42 () Int)
(declare-fun x587 () Int)
(declare-fun x3292 () Bool)
(declare-fun x3924 () Int)
(declare-fun x3559 () Int)
(declare-fun x1585 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x1843 () Int)
(declare-fun x2694 () Bool)
(declare-fun x1061 () Int)
(declare-fun x3354 () Int)
(declare-fun x1703 () Int)
(declare-fun x819 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x2824 () Int)
(declare-fun x2125 () Int)
(declare-fun x2512 () Bool)
(declare-fun x505 () Bool)
(declare-fun x3651 () Int)
(declare-fun x614 () Bool)
(declare-fun x3266 () Int)
(declare-fun x229 () Int)
(declare-fun x1722 () Bool)
(declare-fun x3160 () Int)
(declare-fun x3549 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x623 () Int)
(declare-fun x2199 () Bool)
(declare-fun x677 () Bool)
(declare-fun x4422 () Int)
(declare-fun x3127 () Bool)
(declare-fun x1463 () Int)
(declare-fun x4321 () Bool)
(declare-fun x1451 (Int) Int)
(declare-fun x3747 () Int)
(declare-fun x4113 () Int)
(declare-fun x2167 () Int)
(declare-fun x2629 () Bool)
(declare-fun x216 () Int)
(declare-fun x2236 () Int)
(declare-fun x1826 () Int)
(declare-fun x3315 () Int)
(declare-fun x582 () Bool)
(declare-fun x624 () Bool)
(declare-fun x1847 () Int)
(declare-fun x1757 () Int)
(declare-fun x100 () Bool)
(declare-fun x2523 () Int)
(declare-fun x3807 () Bool)
(declare-fun x463 () Bool)
(declare-fun x3330 () Bool)
(declare-fun x1126 () Int)
(declare-fun x192 () Int)
(declare-fun x4378 () Int)
(declare-fun x296 () Int)
(declare-fun x1498 (Int) Int)
(declare-fun x2019 () Int)
(declare-fun x3197 () Bool)
(declare-fun x2883 () Bool)
(declare-fun x2550 (Int) Int)
(declare-fun x3898 () Bool)
(declare-fun x2291 () Int)
(declare-fun x2535 () Bool)
(declare-fun x1119 () Int)
(declare-fun x201 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x2682 () Int)
(declare-fun x1831 () Bool)
(declare-fun x295 () Int)
(declare-fun x2501 () Int)
(declare-fun x2446 () Bool)
(declare-fun x774 () Int)
(declare-fun x2259 () Int)
(declare-fun x3416 () Int)
(declare-fun x3263 () Bool)
(declare-fun x327 () Int)
(declare-fun x2240 () Int)
(declare-fun x4076 () Int)
(declare-fun x2738 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x4038 () Int)
(declare-fun x3390 () Bool)
(declare-fun x1718 () Int)
(declare-fun x2208 () Bool)
(declare-fun x4201 (Int) Int)
(declare-fun x1094 () Int)
(declare-fun x1481 () Int)
(declare-fun x1665 () Int)
(declare-fun x1352 () Int)
(declare-fun x2933 () Int)
(declare-fun x1438 () Bool)
(declare-fun x408 () Bool)
(declare-fun x514 () Int)
(declare-fun x454 () Int)
(declare-fun x1717 () Bool)
(declare-fun x2368 () Int)
(declare-fun x437 () Int)
(declare-fun x2747 () Int)
(declare-fun x827 () Int)
(declare-fun x3965 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x2760 () Int)
(declare-fun x2276 () Bool)
(declare-fun x4575 () Int)
(declare-fun x1499 () Int)
(declare-fun x3722 () Int)
(declare-fun x2459 (Int) Int)
(declare-fun x3922 () Int)
(declare-fun x3677 () Int)
(declare-fun x4297 () Int)
(declare-fun x1530 () Bool)
(declare-fun x445 () Int)
(declare-fun x2153 () Bool)
(declare-fun x155 () Int)
(declare-fun x2270 () Bool)
(declare-fun x197 () Int)
(declare-fun x3631 () Bool)
(declare-fun x1090 () Int)
(declare-fun x879 () Int)
(declare-fun x3947 () Bool)
(declare-fun x2931 () Int)
(declare-fun x3692 () Int)
(declare-fun x688 () Bool)
(declare-fun x2961 () Int)
(declare-fun x2572 () Int)
(declare-fun x718 () Bool)
(declare-fun x3558 () Int)
(declare-fun x4157 () Bool)
(declare-fun x4544 () Int)
(declare-fun x4360 () Int)
(declare-fun x4122 () Int)
(declare-fun x4348 () Bool)
(declare-fun x92 () Int)
(declare-fun x769 () Int)
(declare-fun x1670 () Int)
(declare-fun x3303 () Bool)
(declare-fun x3951 () Int)
(declare-fun x487 () Int)
(declare-fun x2609 () Bool)
(declare-fun x3155 () Int)
(declare-fun x817 () Bool)
(declare-fun x4495 () Bool)
(declare-fun x1686 () Int)
(declare-fun x4250 () Int)
(declare-fun x1252 () Int)
(declare-fun x4119 () Bool)
(declare-fun x2327 () Int)
(declare-fun x2391 () Int)
(declare-fun x3064 () Bool)
(declare-fun x458 () Bool)
(declare-fun x2177 () Int)
(declare-fun x1162 () Int)
(declare-fun x4262 () Int)
(declare-fun x4056 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x2903 (Int Int Int Int Int Int) Int)
(declare-fun x1196 () Int)
(declare-fun x2601 () Bool)
(declare-fun x3880 () Int)
(declare-fun x422 () Int)
(declare-fun x2533 () Bool)
(declare-fun x2774 () Int)
(declare-fun x2095 () Int)
(declare-fun x1375 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x3615 () Bool)
(declare-fun x2196 () Int)
(declare-fun x3396 () Int)
(declare-fun x478 () Bool)
(declare-fun x264 () Int)
(declare-fun x2352 () Int)
(declare-fun x3740 () Int)
(declare-fun x1021 () Bool)
(declare-fun x4044 () Int)
(declare-fun x2768 () Int)
(declare-fun x1538 () Bool)
(declare-fun x3565 () Int)
(declare-fun x3225 () Int)
(declare-fun x390 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x744 () Bool)
(declare-fun x4458 () Int)
(declare-fun x4276 () Bool)
(declare-fun x3736 () Int)
(declare-fun x4208 () Int)
(declare-fun x815 () Bool)
(declare-fun x455 () Int)
(declare-fun x67 () Bool)
(declare-fun x4146 () Bool)
(declare-fun x3240 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x2059 () Int)
(declare-fun x647 () Int)
(declare-fun x3190 () Bool)
(declare-fun x3178 () Bool)
(declare-fun x973 () Int)
(declare-fun x4166 () Int)
(declare-fun x1477 () Int)
(declare-fun x2388 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x3108 () Int)
(declare-fun x1532 () Int)
(declare-fun x1527 () Bool)
(declare-fun x2132 () Int)
(declare-fun x2665 () Int)
(declare-fun x2251 () Int)
(declare-fun x4364 () Bool)
(declare-fun x3520 () Bool)
(declare-fun x3524 () Int)
(declare-fun x2689 () Bool)
(declare-fun x3056 () Bool)
(declare-fun x3817 () Bool)
(declare-fun x2223 () Int)
(declare-fun x960 () Int)
(declare-fun x3135 () Bool)
(declare-fun x4025 () Int)
(declare-fun x1497 () Bool)
(declare-fun x3001 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x3245 () Int)
(declare-fun x1754 () Int)
(declare-fun x3876 () Bool)
(declare-fun x2922 () Int)
(declare-fun x1544 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x4393 () Bool)
(declare-fun x1482 () Int)
(declare-fun x4322 () Int)
(declare-fun x2108 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x2756 () Int)
(declare-fun x4177 () Bool)
(declare-fun x1759 () Int)
(declare-fun x4392 () Int)
(declare-fun x721 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x2812 () Int)
(declare-fun x2746 () Int)
(declare-fun x2986 () Bool)
(declare-fun x546 () Int)
(declare-fun x2963 () Int)
(declare-fun x838 () Bool)
(declare-fun x2871 () Int)
(declare-fun x952 (Int) Int)
(declare-fun x1689 () Int)
(declare-fun x1034 () Bool)
(declare-fun x1580 () Int)
(declare-fun x185 () Int)
(declare-fun x2384 () Int)
(declare-fun x3641 () Bool)
(declare-fun x3261 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x332 () Bool)
(declare-fun x762 () Int)
(declare-fun x3227 () Bool)
(declare-fun x3399 () Bool)
(declare-fun x4571 () Int)
(declare-fun x3192 () Bool)
(declare-fun x1516 () Int)
(declare-fun x962 () Int)
(declare-fun x3694 () Int)
(declare-fun x4558 () Int)
(declare-fun x2915 () Int)
(declare-fun x3932 () Int)
(declare-fun x4159 () Int)
(declare-fun x2479 () Bool)
(declare-fun x3644 () Int)
(declare-fun x3618 () Int)
(declare-fun x2144 () Bool)
(declare-fun x3802 () Int)
(declare-fun x2952 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x4469 () Int)
(declare-fun x1774 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x213 () Int)
(declare-fun x1522 () Bool)
(declare-fun x2876 () Bool)
(declare-fun x3916 (Int Int) Int)
(declare-fun x2796 () Int)
(declare-fun x1637 () Int)
(declare-fun x2996 () Bool)
(declare-fun x1912 (Int) Int)
(declare-fun x3784 () Int)
(declare-fun x258 () Bool)
(declare-fun x416 () Int)
(declare-fun x3299 () Int)
(declare-fun x1879 () Int)
(declare-fun x1690 () Bool)
(declare-fun x3259 () Int)
(declare-fun x527 () Int)
(declare-fun x1055 () Bool)
(declare-fun x826 () Int)
(declare-fun x2377 () Int)
(declare-fun x3570 () Int)
(declare-fun x936 () Int)
(declare-fun x694 () Int)
(declare-fun x1308 () Int)
(declare-fun x1514 () Int)
(declare-fun x855 () Bool)
(declare-fun x1289 () Int)
(declare-fun x2750 () Bool)
(declare-fun x3066 () Int)
(declare-fun x2835 () Bool)
(declare-fun x1526 () Int)
(declare-fun x4012 () Int)
(declare-fun x2358 () Bool)
(declare-fun x3150 () Int)
(declare-fun x4307 () Bool)
(declare-fun x3154 () Int)
(declare-fun x426 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x756 () Bool)
(declare-fun x4405 () Int)
(declare-fun x2232 () Bool)
(declare-fun x7 () Int)
(declare-fun x2209 () Bool)
(declare-fun x3134 () Bool)
(declare-fun x2011 () Int)
(declare-fun x1000 () Bool)
(declare-fun x158 () Bool)
(declare-fun x4408 () Int)
(declare-fun x3138 () Bool)
(declare-fun x678 () Bool)
(declare-fun x468 () Int)
(declare-fun x781 () Bool)
(declare-fun x3772 () Bool)
(declare-fun x3660 (Int Int) Int)
(declare-fun x1894 () Bool)
(declare-fun x106 () Int)
(declare-fun x4090 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x4388 () Bool)
(declare-fun x4077 () Int)
(declare-fun x1859 () Int)
(declare-fun x360 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x713 () Int)
(declare-fun x657 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x288 () Bool)
(declare-fun x2953 () Int)
(declare-fun x2426 () Int)
(declare-fun x4550 () Int)
(declare-fun x1899 () Int)
(declare-fun x1713 () Bool)
(declare-fun x3084 () Int)
(declare-fun x1083 () Bool)
(declare-fun x1972 () Int)
(declare-fun x4532 () Bool)
(declare-fun x3925 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x4394 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x2478 () Bool)
(declare-fun x4098 () Int)
(declare-fun x3469 () Bool)
(declare-fun x3755 () Int)
(declare-fun x2603 () Int)
(declare-fun x653 () Bool)
(declare-fun x4528 () Bool)
(declare-fun x758 () Int)
(declare-fun x115 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x4070 () Bool)
(declare-fun x1139 (Int) Int)
(declare-fun x1151 () Bool)
(declare-fun x515 () Bool)
(declare-fun x3636 () Int)
(declare-fun x4504 () Int)
(declare-fun x4453 () Int)
(declare-fun x2496 () Int)
(declare-fun x2451 () Int)
(declare-fun x503 () Bool)
(declare-fun x1596 () Int)
(declare-fun x665 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x4289 () Bool)
(declare-fun x4347 () Int)
(declare-fun x3711 () Int)
(declare-fun x3132 () Int)
(declare-fun x1368 () Int)
(declare-fun x4549 () Bool)
(declare-fun x4580 () Int)
(declare-fun x1995 () Int)
(declare-fun x1840 () Int)
(declare-fun x4314 () Int)
(declare-fun x1359 () Int)
(declare-fun x1238 () Int)
(declare-fun x3088 () Int)
(declare-fun x4459 () Bool)
(declare-fun x4584 () Int)
(declare-fun x4266 () Int)
(declare-fun x4239 () Int)
(declare-fun x1390 () Int)
(declare-fun x2935 () Bool)
(declare-fun x114 () Int)
(declare-fun x801 () Int)
(declare-fun x2017 () Int)
(declare-fun x4091 () Bool)
(declare-fun x353 () Int)
(declare-fun x4071 () Bool)
(declare-fun x393 () Int)
(declare-fun x1207 () Bool)
(declare-fun x4299 () Int)
(declare-fun x517 () Int)
(declare-fun x2174 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1906 () Int)
(declare-fun x1409 () Bool)
(declare-fun x3456 () Bool)
(declare-fun x4064 () Int)
(declare-fun x2026 () Int)
(declare-fun x3224 () Int)
(declare-fun x3198 () Int)
(declare-fun x196 () Bool)
(declare-fun x1539 () Int)
(declare-fun x3987 () Int)
(declare-fun x1187 () Bool)
(declare-fun x3587 () Bool)
(declare-fun x672 () Int)
(declare-fun x3054 () Bool)
(declare-fun x1600 () Int)
(declare-fun x4187 () Int)
(declare-fun x3703 () Bool)
(declare-fun x570 () Int)
(declare-fun x2891 () Bool)
(declare-fun x2528 (Int) Int)
(declare-fun x4521 () Bool)
(declare-fun x4585 () Int)
(declare-fun x1541 () Int)
(declare-fun x3463 (Int) Int)
(declare-fun x746 () Int)
(declare-fun x659 () Bool)
(declare-fun x95 () Int)
(declare-fun x309 () Bool)
(declare-fun x4116 () Int)
(declare-fun x3290 () Bool)
(declare-fun x3501 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x3517 () Int)
(declare-fun x3714 () Bool)
(declare-fun x1809 () Int)
(declare-fun x77 () Int)
(declare-fun x2860 () Int)
(declare-fun x461 () Int)
(declare-fun x2363 () Int)
(declare-fun x2245 () Bool)
(declare-fun x3831 () Int)
(declare-fun x847 () Int)
(declare-fun x1658 () Int)
(declare-fun x1730 () Int)
(declare-fun x1370 () Bool)
(declare-fun x272 () Int)
(declare-fun x2303 () Int)
(declare-fun x521 () Int)
(declare-fun x1925 () Int)
(declare-fun x3613 () Int)
(declare-fun x4461 () Bool)
(declare-fun x2511 () Int)
(declare-fun x833 () Bool)
(declare-fun x3446 () Int)
(declare-fun x2910 () Bool)
(declare-fun x3052 () Bool)
(declare-fun x4389 () Int)
(declare-fun x2982 () Bool)
(declare-fun x1251 () Int)
(declare-fun x987 () Int)
(declare-fun x4573 () Bool)
(declare-fun x4529 () Int)
(declare-fun x584 () Int)
(declare-fun x2821 () Int)
(declare-fun x668 () Bool)
(declare-fun x3506 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x4505 () Int)
(declare-fun x4346 () Int)
(declare-fun x4008 () Bool)
(declare-fun x589 () Int)
(declare-fun x594 () Int)
(declare-fun x4568 () Int)
(declare-fun x865 () Int)
(declare-fun x1792 () Int)
(declare-fun x2698 () Int)
(declare-fun x3633 () Int)
(declare-fun x3812 () Int)
(declare-fun x24 () Int)
(declare-fun x2837 () Int)
(declare-fun x1942 () Bool)
(declare-fun x381 () Int)
(declare-fun x2510 () Bool)
(declare-fun x763 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x117 () Bool)
(declare-fun x4158 () Int)
(declare-fun x1685 () Bool)
(declare-fun x4147 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x1968 () Int)
(declare-fun x1011 () Int)
(declare-fun x1348 () Int)
(declare-fun x1777 () Int)
(declare-fun x2436 () Bool)
(declare-fun x488 () Int)
(declare-fun x1176 () Int)
(declare-fun x1683 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x2917 () Int)
(declare-fun x1607 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1049 () Int)
(declare-fun x2530 () Int)
(declare-fun x2342 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x4216 () Bool)
(declare-fun x3260 () Int)
(declare-fun x4588 () Int)
(declare-fun x2290 () Int)
(declare-fun x189 () Bool)
(declare-fun x335 () Int)
(declare-fun x3707 () Bool)
(declare-fun x3171 () Bool)
(declare-fun x3797 () Int)
(declare-fun x3200 () Int)
(declare-fun x3819 () Bool)
(declare-fun x4224 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x1458 () Int)
(declare-fun x3272 () Int)
(declare-fun x1555 () Int)
(declare-fun x3574 () Bool)
(declare-fun x3377 () Bool)
(declare-fun x2713 () Int)
(declare-fun x3892 () Int)
(declare-fun x1546 () Int)
(declare-fun x3355 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x945 () Bool)
(declare-fun x4169 () Bool)
(declare-fun x2707 () Int)
(declare-fun x4042 () Int)
(declare-fun x2739 () Int)
(declare-fun x1472 () Bool)
(declare-fun x3146 () Bool)
(declare-fun x4246 () Int)
(declare-fun x563 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x901 () Int)
(declare-fun x4455 () Int)
(declare-fun x4370 () Bool)
(declare-fun x291 () Int)
(declare-fun x843 () Int)
(declare-fun x4548 () Bool)
(declare-fun x2829 () Int)
(declare-fun x2164 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x802 () Int)
(declare-fun x1070 () Int)
(declare-fun x3112 (Int) Int)
(declare-fun x235 () Bool)
(declare-fun x2433 () Int)
(declare-fun x4497 (Int) Int)
(declare-fun x3926 () Int)
(declare-fun x933 () Bool)
(declare-fun x3230 () Int)
(declare-fun x1864 () Int)
(declare-fun x496 () Int)
(declare-fun x2219 () Int)
(declare-fun x2497 () Bool)
(declare-fun x3308 () Bool)
(declare-fun x3297 () Int)
(declare-fun x4248 () Bool)
(declare-fun x662 () Int)
(declare-fun x3820 () Bool)
(declare-fun x2506 () Int)
(declare-fun x4515 () Bool)
(declare-fun x446 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x479 () Int)
(declare-fun x676 () Int)
(declare-fun x1556 () Int)
(declare-fun x4168 () Int)
(declare-fun x2628 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x1758 () Int)
(declare-fun x3843 () Int)
(declare-fun x1872 () Int)
(declare-fun x1346 () Int)
(declare-fun x3923 () Int)
(declare-fun x1593 () Int)
(declare-fun x3822 () Bool)
(declare-fun x1784 () Int)
(declare-fun x107 () Bool)
(declare-fun x1521 () Int)
(declare-fun x961 () Int)
(declare-fun x786 () Int)
(declare-fun x3142 () Int)
(declare-fun x1418 () Bool)
(declare-fun x2445 () Int)
(declare-fun x2941 () Int)
(declare-fun x3522 () Int)
(declare-fun x2238 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x4341 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x379 () Int)
(declare-fun x3939 () Int)
(declare-fun x2057 () Int)
(declare-fun x4496 () Int)
(declare-fun x957 () Int)
(declare-fun x1016 () Bool)
(declare-fun x1628 () Int)
(declare-fun x2149 () Bool)
(declare-fun x2382 () Int)
(declare-fun x33 () Int)
(declare-fun x1495 () Int)
(declare-fun x3995 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x3381 () Int)
(declare-fun x3877 () Bool)
(declare-fun x3668 () Int)
(declare-fun x3304 () Int)
(declare-fun x2741 () Int)
(declare-fun x3274 () Int)
(declare-fun x2409 () Int)
(declare-fun x2311 () Bool)
(declare-fun x930 () Bool)
(declare-fun x3581 () Int)
(declare-fun x2194 () Int)
(declare-fun x3630 () Bool)
(declare-fun x3384 () Int)
(declare-fun x3759 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x3745 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x2684 () Bool)
(declare-fun x3625 () Int)
(declare-fun x520 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x1265 () Int)
(declare-fun x923 () Bool)
(declare-fun x287 () Int)
(declare-fun x2864 () Bool)
(declare-fun x89 () Bool)
(declare-fun x473 () Int)
(declare-fun x2799 () Int)
(declare-fun x1892 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x2444 () Int)
(declare-fun x1123 () Int)
(declare-fun x2771 () Bool)
(declare-fun x3859 () Int)
(declare-fun x867 () Bool)
(declare-fun x187 () Bool)
(declare-fun x3060 () Int)
(declare-fun x1848 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1999 () Int)
(declare-fun x724 () Bool)
(declare-fun x486 () Int)
(declare-fun x3591 () Int)
(declare-fun x2940 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x4134 () Int)
(declare-fun x2403 () Int)
(declare-fun x4520 () Int)
(declare-fun x1421 () Int)
(declare-fun x1114 () Bool)
(declare-fun x964 () Int)
(declare-fun x2421 () Bool)
(declare-fun x2568 (Int) Int)
(declare-fun x3678 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x2111 (Int) Int)
(declare-fun x2897 () Bool)
(declare-fun x4335 () Int)
(declare-fun x596 () Bool)
(declare-fun x3998 () Bool)
(declare-fun x4410 () Int)
(declare-fun x2086 () Int)
(declare-fun x1201 () Int)
(declare-fun x1788 () Bool)
(declare-fun x1653 () Int)
(declare-fun x3254 () Bool)
(declare-fun x4260 () Int)
(declare-fun x3237 () Bool)
(declare-fun x2338 () Int)
(declare-fun x1680 () Bool)
(declare-fun x3326 (Int) Int)
(declare-fun x4487 () Int)
(declare-fun x4220 () Int)
(declare-fun x4309 () Int)
(declare-fun x4435 () Int)
(declare-fun x3671 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x3919 () Int)
(declare-fun x3852 () Int)
(declare-fun x3780 () Int)
(declare-fun x2424 () Int)
(declare-fun x1953 () Bool)
(declare-fun x13 () Int)
(declare-fun x3957 () Int)
(declare-fun x1312 () Int)
(declare-fun x2028 () Int)
(declare-fun x2822 () Bool)
(declare-fun x578 () Int)
(declare-fun x1401 () Bool)
(declare-fun x349 () Int)
(declare-fun x4475 () Int)
(declare-fun x1837 () Int)
(declare-fun x989 () Bool)
(declare-fun x2482 () Int)
(declare-fun x2234 () Bool)
(declare-fun x1622 () Int)
(declare-fun x1230 () Int)
(declare-fun x1255 (Int) Int)
(declare-fun x3950 () Int)
(declare-fun x1284 () Bool)
(declare-fun x534 () Int)
(declare-fun x4560 () Int)
(declare-fun x1563 () Int)
(declare-fun x1285 () Int)
(declare-fun x2832 () Bool)
(declare-fun x3129 () Int)
(declare-fun x2995 () Bool)
(declare-fun x2947 () Int)
(declare-fun x1712 () Int)
(declare-fun x4040 () Bool)
(declare-fun x3046 () Int)
(declare-fun x2848 () Int)
(declare-fun x3405 () Int)
(declare-fun x2647 () Bool)
(declare-fun x1417 () Int)
(declare-fun x1729 () Int)
(declare-fun x343 () Int)
(declare-fun x2881 () Int)
(declare-fun x284 () Bool)
(declare-fun x2631 () Int)
(declare-fun x4264 () Bool)
(declare-fun x3827 () Int)
(declare-fun x83 () Bool)
(declare-fun x1300 () Int)
(declare-fun x326 () Int)
(declare-fun x3092 () Int)
(declare-fun x1677 () Int)
(declare-fun x871 () Int)
(declare-fun x3854 () Int)
(declare-fun x1552 () Int)
(declare-fun x4285 () Int)
(declare-fun x2862 () Bool)
(declare-fun x1542 () Int)
(declare-fun x350 () Bool)
(declare-fun x2988 () Int)
(declare-fun x3152 () Int)
(declare-fun x3194 () Bool)
(declare-fun x2262 () Int)
(declare-fun x1851 () Int)
(declare-fun x1553 () Int)
(declare-fun x3904 () Int)
(declare-fun x2080 () Bool)
(declare-fun x3863 () Int)
(declare-fun x3891 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x1648 () Int)
(declare-fun x1570 () Int)
(declare-fun x3985 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x4507 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x4419 (Int) Int)
(declare-fun x2 () Int)
(declare-fun x2009 () Bool)
(declare-fun x4009 () Int)
(declare-fun x1776 () Int)
(declare-fun x417 () Bool)
(declare-fun x3337 () Bool)
(declare-fun x55 () Bool)
(declare-fun x79 () Int)
(declare-fun x1101 () Int)
(declare-fun x2359 () Int)
(declare-fun x1504 () Int)
(declare-fun x2639 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x3899 () Bool)
(declare-fun x3368 () Int)
(declare-fun x621 () Int)
(declare-fun x2564 () Int)
(declare-fun x2828 () Bool)
(declare-fun x1493 () Int)
(declare-fun x1247 () Bool)
(declare-fun x4569 () Int)
(declare-fun x690 () Bool)
(declare-fun x311 () Int)
(declare-fun x1902 () Int)
(declare-fun x2861 () Bool)
(declare-fun x634 () Int)
(declare-fun x1221 () Int)
(declare-fun x3825 () Int)
(declare-fun x3125 (Int) Int)
(declare-fun x1519 (Int) Int)
(declare-fun x383 () Int)
(declare-fun x3637 () Int)
(declare-fun x1042 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1772 () Int)
(declare-fun x3218 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x2467 () Int)
(declare-fun x3386 () Int)
(declare-fun x922 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x2536 () Bool)
(declare-fun x2197 () Int)
(declare-fun x1697 () Bool)
(declare-fun x896 () Int)
(declare-fun x1447 () Bool)
(declare-fun x2612 () Int)
(declare-fun x3100 () Int)
(declare-fun x3455 () Bool)
(declare-fun x4259 () Int)
(declare-fun x4399 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x232 () Int)
(declare-fun x2921 () Bool)
(declare-fun x208 () Int)
(declare-fun x742 () Bool)
(declare-fun x597 () Int)
(declare-fun x190 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x3086 () Int)
(declare-fun x4316 () Int)
(declare-fun x803 () Int)
(declare-fun x2810 () Int)
(declare-fun x297 () Int)
(declare-fun x1310 () Int)
(declare-fun x1430 () Int)
(declare-fun x1579 () Int)
(declare-fun x3474 () Int)
(declare-fun x4349 () Bool)
(declare-fun x3901 () Bool)
(declare-fun x2029 () Int)
(declare-fun x2320 () Bool)
(declare-fun x2526 () Int)
(declare-fun x82 () Int)
(declare-fun x1691 () Bool)
(declare-fun x4407 () Int)
(declare-fun x2084 () Bool)
(declare-fun x3595 () Int)
(declare-fun x4485 () Bool)
(declare-fun x3067 () Int)
(declare-fun x2068 () Int)
(declare-fun x3140 () Int)
(declare-fun x2731 () Int)
(declare-fun x1891 () Bool)
(declare-fun x628 () Int)
(declare-fun x704 () Bool)
(declare-fun x3059 () Int)
(declare-fun x2075 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x2150 () Int)
(declare-fun x3176 () Bool)
(declare-fun x3599 () Bool)
(declare-fun x373 () Int)
(declare-fun x4294 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x2945 () Bool)
(declare-fun x2625 () Int)
(declare-fun x3118 () Bool)
(declare-fun x643 () Bool)
(declare-fun x2066 () Int)
(declare-fun x1175 () Int)
(declare-fun x2360 () Int)
(declare-fun x2923 () Int)
(declare-fun x680 () Int)
(declare-fun x3257 () Int)
(declare-fun x1184 () Bool)
(declare-fun x3078 () Bool)
(declare-fun x3495 () Int)
(declare-fun x2458 () Bool)
(declare-fun x2430 () Int)
(declare-fun x884 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x3287 () Bool)
(declare-fun x2737 () Bool)
(declare-fun x3440 () Int)
(declare-fun x954 () Int)
(declare-fun x1263 () Int)
(declare-fun x3302 () Int)
(declare-fun x3449 () Int)
(declare-fun x775 () Int)
(declare-fun x2260 () Bool)
(declare-fun x322 () Bool)
(declare-fun x1402 () Int)
(declare-fun x1353 () Bool)
(declare-fun x2766 () Bool)
(declare-fun x3969 () Int)
(declare-fun x2924 () Int)
(declare-fun x411 () Int)
(declare-fun x472 () Int)
(declare-fun x2493 () Int)
(declare-fun x104 () Int)
(declare-fun x3596 () Bool)
(declare-fun x4178 () Int)
(declare-fun x2651 () Bool)
(declare-fun x818 () Bool)
(declare-fun x119 () Bool)
(declare-fun x2551 () Bool)
(declare-fun x1206 () Int)
(declare-fun x1798 () Int)
(declare-fun x2960 () Int)
(declare-fun x2874 () Int)
(declare-fun x2494 () Bool)
(declare-fun x2217 () Int)
(declare-fun x275 () Bool)
(declare-fun x3482 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x784 () Bool)
(declare-fun x2315 () Int)
(declare-fun x403 () Bool)
(declare-fun x3252 () Bool)
(declare-fun x3282 () Int)
(declare-fun x3828 () Bool)
(declare-fun x3588 () Int)
(declare-fun x3717 () Int)
(declare-fun x824 () Int)
(declare-fun x173 () Int)
(declare-fun x1510 () Int)
(declare-fun x2366 () Int)
(declare-fun x4165 () Int)
(declare-fun x1961 () Int)
(declare-fun x1977 () Int)
(declare-fun x2408 () Bool)
(declare-fun x211 () Int)
(declare-fun x2293 () Int)
(declare-fun x3255 () Bool)
(declare-fun x1727 () Int)
(declare-fun x705 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x1687 () Int)
(declare-fun x4052 () Int)
(declare-fun x2118 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x1156 () Int)
(declare-fun x4211 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x53 () Int)
(declare-fun x3645 () Int)
(declare-fun x4023 () Int)
(declare-fun x2307 () Bool)
(declare-fun x1720 () Int)
(declare-fun x2687 () Int)
(declare-fun x3215 () Int)
(declare-fun x3468 () Int)
(declare-fun x3498 () Int)
(declare-fun x451 () Bool)
(declare-fun x4535 () Int)
(declare-fun x1113 () Int)
(declare-fun x3669 () Int)
(declare-fun x4452 () Bool)
(declare-fun x2892 () Int)
(declare-fun x2683 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1116 (Int) Int)
(declare-fun x45 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x431 () Int)
(declare-fun x1336 () Int)
(declare-fun x125 () Bool)
(declare-fun x3296 () Bool)
(declare-fun x4527 () Int)
(declare-fun x1297 () Int)
(declare-fun x883 () Int)
(declare-fun x1926 () Bool)
(declare-fun x552 () Int)
(declare-fun x207 () Int)
(declare-fun x1290 () Bool)
(declare-fun x2912 () Int)
(declare-fun x2820 () Bool)
(declare-fun x1789 () Int)
(declare-fun x3948 () Bool)
(declare-fun x1029 () Int)
(declare-fun x3471 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x4344 () Int)
(declare-fun x3110 () Bool)
(declare-fun x4334 () Bool)
(declare-fun x2490 () Int)
(declare-fun x2309 () Int)
(declare-fun x974 () Int)
(declare-fun x172 () Bool)
(declare-fun x560 () Int)
(declare-fun x4591 () Bool)
(declare-fun x1379 () Int)
(declare-fun x3402 () Int)
(declare-fun x4171 () Int)
(declare-fun x4261 () Int)
(declare-fun x2465 () Int)
(declare-fun x4141 () Int)
(declare-fun x2158 () Int)
(declare-fun x825 () Bool)
(declare-fun x227 () Bool)
(declare-fun x409 () Int)
(declare-fun x384 () Int)
(declare-fun x1203 () Int)
(declare-fun x4431 () Bool)
(declare-fun x3020 () Int)
(declare-fun x1141 (Int) Int)
(declare-fun x572 () Int)
(declare-fun x4215 () Bool)
(declare-fun x3312 () Bool)
(declare-fun x339 () Int)
(declare-fun x2919 () Int)
(declare-fun x2229 () Int)
(declare-fun x3815 () Bool)
(declare-fun x4041 () Int)
(declare-fun x2314 () Bool)
(declare-fun x256 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x532 () Bool)
(declare-fun x4272 () Int)
(declare-fun x4050 () Int)
(declare-fun x1791 () Bool)
(declare-fun x191 () Int)
(declare-fun x2690 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x2893 () Int)
(declare-fun x2765 (Int) Int)
(declare-fun x1765 () Int)
(declare-fun x3298 () Int)
(declare-fun x3659 () Bool)
(declare-fun x3873 () Int)
(declare-fun x2598 () Int)
(declare-fun x526 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x4079 () Int)
(declare-fun x4115 () Bool)
(declare-fun x1616 () Int)
(declare-fun x2944 () Int)
(declare-fun x10 () Bool)
(declare-fun x1855 () Int)
(declare-fun x4218 () Bool)
(declare-fun x4093 () Int)
(declare-fun x4465 () Bool)
(declare-fun x3098 () Int)
(declare-fun x4404 () Int)
(declare-fun x3130 (Int) Int)
(declare-fun x2264 () Bool)
(declare-fun x3234 () Int)
(declare-fun x811 () Bool)
(declare-fun x4543 () Int)
(declare-fun x286 () Int)
(declare-fun x2662 () Bool)
(declare-fun x2809 () Int)
(declare-fun x3074 () Int)
(declare-fun x2145 () Bool)
(declare-fun x37 () Bool)
(declare-fun x2474 () Int)
(declare-fun x3870 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x490 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x2099 () Int)
(declare-fun x2913 () Int)
(declare-fun x4151 () Bool)
(declare-fun x2325 () Int)
(declare-fun x1617 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x1478 () Int)
(declare-fun x3121 () Bool)
(declare-fun x1709 () Int)
(declare-fun x224 () Bool)
(declare-fun x2708 () Int)
(declare-fun x3391 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x3750 () Int)
(declare-fun x174 () Bool)
(declare-fun x893 (Int) Int)
(declare-fun x727 () Int)
(declare-fun x2859 () Bool)
(declare-fun x2977 () Bool)
(declare-fun x2318 () Int)
(declare-fun x1947 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x1586 () Int)
(declare-fun x3451 () Int)
(declare-fun x2226 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x1469 () Int)
(declare-fun x432 () Int)
(declare-fun x3823 () Int)
(declare-fun x4317 () Int)
(declare-fun x547 () Int)
(declare-fun x1462 () Bool)
(declare-fun x874 () Bool)
(declare-fun x2889 () Int)
(declare-fun x1004 () Int)
(declare-fun x908 () Int)
(declare-fun x2723 () Int)
(declare-fun x2950 () Int)
(declare-fun x2014 () Bool)
(declare-fun x1435 () Int)
(declare-fun x4121 () Int)
(declare-fun x1355 () Int)
(declare-fun x703 () Int)
(declare-fun x732 () Bool)
(declare-fun x2020 () Int)
(declare-fun x3953 () Bool)
(declare-fun x2505 () Int)
(declare-fun x638 () Int)
(declare-fun x3484 () Int)
(declare-fun x2811 () Bool)
(declare-fun x475 () Bool)
(declare-fun x497 (Int) Int)
(declare-fun x4031 () Int)
(declare-fun x1349 () Int)
(declare-fun x1449 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x2934 () Int)
(declare-fun x3268 () Bool)
(declare-fun x3447 () Int)
(declare-fun x3465 () Int)
(declare-fun x3113 () Int)
(declare-fun x3062 () Int)
(declare-fun x1329 () Int)
(declare-fun x706 () Int)
(declare-fun x2126 () Bool)
(declare-fun x3729 () Int)
(declare-fun x2362 () Int)
(declare-fun x728 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x259 () Bool)
(declare-fun x2400 () Int)
(declare-fun x2539 () Int)
(declare-fun x1962 () Bool)
(declare-fun x3720 () Int)
(declare-fun x710 () Int)
(declare-fun x3790 () Bool)
(declare-fun x4212 () Int)
(declare-fun x1487 () Int)
(declare-fun x1971 () Bool)
(declare-fun x1857 () Bool)
(declare-fun x1204 () Int)
(declare-fun x314 () Bool)
(declare-fun x773 () Bool)
(declare-fun x4182 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x23 () Bool)
(declare-fun x1253 () Int)
(declare-fun x2051 () Int)
(declare-fun x1441 () Int)
(declare-fun x1662 () Int)
(declare-fun x733 () Bool)
(declare-fun x2514 () Int)
(declare-fun x4456 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x2780 () Int)
(declare-fun x875 () Int)
(declare-fun x3349 () Bool)
(declare-fun x651 () Bool)
(declare-fun x3024 () Bool)
(declare-fun x2990 () Bool)
(declare-fun x4519 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x1745 () Int)
(declare-fun x65 () Int)
(declare-fun x1856 () Int)
(declare-fun x2040 () Int)
(declare-fun x2063 () Int)
(declare-fun x262 () Bool)
(declare-fun x146 () Int)
(declare-fun x8 () Bool)
(declare-fun x2266 () Int)
(declare-fun x1838 () Int)
(declare-fun x4572 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x2942 () Bool)
(declare-fun x489 () Bool)
(declare-fun x1376 () Int)
(declare-fun x2220 () Int)
(declare-fun x204 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x1046 () Int)
(declare-fun x86 () Bool)
(declare-fun x2483 () Int)
(declare-fun x4414 () Bool)
(declare-fun x1023 () Int)
(declare-fun x2761 () Int)
(declare-fun x1476 () Bool)
(declare-fun x3045 () Int)
(declare-fun x3962 () Int)
(declare-fun x2489 () Bool)
(declare-fun x1877 () Int)
(declare-fun x1647 () Int)
(declare-fun x1233 () Int)
(declare-fun x506 () Int)
(declare-fun x3582 () Int)
(declare-fun x3968 () Int)
(declare-fun x4268 () Int)
(declare-fun x124 () Int)
(declare-fun x2847 () Bool)
(declare-fun x3964 () Int)
(declare-fun x2772 () Int)
(declare-fun x4448 () Bool)
(declare-fun x1084 () Int)
(declare-fun x1267 () Int)
(declare-fun x298 () Bool)
(declare-fun x3483 () Int)
(declare-fun x3149 () Bool)
(declare-fun x4467 () Int)
(declare-fun x1998 () Bool)
(declare-fun x396 () Int)
(declare-fun x2476 () Int)
(declare-fun x97 () Bool)
(declare-fun x3577 () Bool)
(declare-fun x62 () Int)
(declare-fun x1818 () Int)
(declare-fun x1756 () Int)
(declare-fun x1868 () Int)
(declare-fun x3479 () Int)
(declare-fun x1344 () Int)
(declare-fun x3265 () Int)
(declare-fun x2341 () Bool)
(declare-fun x1668 () Int)
(declare-fun x3454 () Int)
(declare-fun x738 () Int)
(declare-fun x2477 () Int)
(declare-fun x3543 () Int)
(declare-fun x2435 () Bool)
(declare-fun x3643 () Int)
(declare-fun x1456 () Int)
(declare-fun x4566 () Bool)
(declare-fun x2742 () Int)
(declare-fun x3058 () Int)
(declare-fun x4120 () Int)
(declare-fun x4302 () Int)
(declare-fun x3273 () Bool)
(declare-fun x3472 () Int)
(declare-fun x2283 () Int)
(declare-fun x2590 () Bool)
(declare-fun x4252 () Bool)
(declare-fun x1693 () Int)
(declare-fun x4362 () Bool)
(declare-fun x3111 () Int)
(declare-fun x4195 () Bool)
(declare-fun x139 () Int)
(declare-fun x2087 () Bool)
(declare-fun x2888 () Int)
(declare-fun x3961 () Int)
(declare-fun x3606 () Int)
(declare-fun x4126 () Int)
(declare-fun x586 () Bool)
(declare-fun x1273 () Int)
(declare-fun x3334 () Int)
(declare-fun x3023 () Bool)
(declare-fun x4163 () Bool)
(declare-fun x3777 () Bool)
(declare-fun x1420 (Int) Int)
(declare-fun x4270 () Int)
(declare-fun x707 () Bool)
(declare-fun x2519 () Int)
(declare-fun x4269 () Int)
(declare-fun x3470 () Int)
(declare-fun x334 () Bool)
(declare-fun x2925 () Int)
(declare-fun x354 () Bool)
(declare-fun x2813 () Int)
(declare-fun x1500 () Int)
(declare-fun x1861 () Int)
(declare-fun x1814 () Int)
(declare-fun x4127 () Int)
(declare-fun x3917 () Int)
(declare-fun x1197 () Int)
(declare-fun x4228 () Int)
(declare-fun x4542 () Int)
(declare-fun x2972 () Int)
(declare-fun x3187 () Bool)
(declare-fun x1946 () Int)
(declare-fun x2102 () Int)
(declare-fun x2677 () Bool)
(declare-fun x4361 () Int)
(declare-fun x909 () Int)
(declare-fun x3545 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x2744 () Bool)
(declare-fun x1414 () Int)
(declare-fun x193 () Bool)
(declare-fun x1248 () Int)
(declare-fun x481 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x1057 () Int)
(declare-fun x3362 () Int)
(declare-fun x2515 (Int) Int)
(declare-fun x2374 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x243 () Int)
(declare-fun x3316 () Bool)
(declare-fun x3575 () Int)
(declare-fun x2717 () Bool)
(declare-fun x2437 () Bool)
(declare-fun x440 (Int) Int)
(declare-fun x356 () Int)
(declare-fun x4128 () Bool)
(declare-fun x3185 () Int)
(declare-fun x3997 () Int)
(declare-fun x2764 (Int) Int)
(declare-fun x1039 () Bool)
(declare-fun x3159 () Int)
(declare-fun x12 () Int)
(declare-fun x822 () Bool)
(declare-fun x3458 () Bool)
(declare-fun x2902 () Int)
(declare-fun x2042 () Int)
(declare-fun x2846 () Bool)
(declare-fun x3116 () Int)
(declare-fun x111 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x941 () Bool)
(declare-fun x1244 () Int)
(declare-fun x2248 () Int)
(declare-fun x2175 () Int)
(declare-fun x3220 () Int)
(declare-fun x3318 () Bool)
(declare-fun x2337 () Int)
(declare-fun x982 () Int)
(declare-fun x1645 () Int)
(declare-fun x2328 () Int)
(declare-fun x3670 () Int)
(declare-fun x84 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x274 (Int Int Int Int) Int)
(declare-fun x1454 () Bool)
(declare-fun x3629 () Int)
(declare-fun x73 () Bool)
(declare-fun x1059 () Int)
(declare-fun x130 (Int) Int)
(declare-fun x4369 () Bool)
(declare-fun x2939 () Int)
(declare-fun x1415 () Bool)
(declare-fun x338 () Bool)
(declare-fun x3448 () Int)
(declare-fun x3697 () Int)
(declare-fun x3119 () Int)
(declare-fun x386 () Bool)
(declare-fun x240 () Int)
(declare-fun x980 () Bool)
(declare-fun x1714 () Int)
(declare-fun x2279 () Int)
(declare-fun x994 () Int)
(declare-fun x2740 () Int)
(declare-fun x530 () Int)
(declare-fun x1576 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x4474 () Int)
(declare-fun x1442 () Int)
(declare-fun x325 () Int)
(declare-fun x2361 () Int)
(declare-fun x1228 () Bool)
(declare-fun x63 () Int)
(declare-fun x3271 () Int)
(declare-fun x3681 () Int)
(declare-fun x2191 (Int Int) Int)
(declare-fun x113 () Int)
(declare-fun x324 () Int)
(declare-fun x370 () Bool)
(declare-fun x1138 () Int)
(declare-fun x4411 () Int)
(declare-fun x686 () Bool)
(declare-fun x2297 () Int)
(declare-fun x2399 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x2534 () Int)
(declare-fun x4190 () Bool)
(declare-fun x976 () Int)
(declare-fun x3813 () Int)
(declare-fun x3025 (Int Int Int Int Int) Int)
(declare-fun x4488 () Int)
(declare-fun x1813 () Bool)
(declare-fun x3763 () Bool)
(declare-fun x3568 () Int)
(declare-fun x4290 () Int)
(declare-fun x4240 () Bool)
(declare-fun x457 () Int)
(declare-fun x671 () Bool)
(declare-fun x716 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x3489 () Int)
(declare-fun x1501 () Bool)
(declare-fun x3713 () Int)
(declare-fun x1282 () Int)
(declare-fun x1460 () Bool)
(declare-fun x899 () Int)
(declare-fun x2491 (Int) Int)
(declare-fun x1008 () Bool)
(declare-fun x4142 () Int)
(declare-fun x914 () Int)
(declare-fun x3872 () Int)
(declare-fun x1882 () Bool)
(declare-fun x3183 () Bool)
(declare-fun x2823 () Int)
(declare-fun x3394 () Int)
(declare-fun x3538 () Int)
(declare-fun x3791 () Int)
(declare-fun x368 () Int)
(declare-fun x2442 () Bool)
(declare-fun x2272 () Int)
(declare-fun x3453 () Bool)
(declare-fun x1734 () Int)
(declare-fun x648 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x4426 () Bool)
(declare-fun x2308 () Int)
(declare-fun x3604 () Int)
(declare-fun x1736 () Bool)
(declare-fun x2954 () Int)
(declare-fun x2097 () Int)
(declare-fun x2769 () Bool)
(declare-fun x3674 () Bool)
(declare-fun x2619 () Int)
(declare-fun x3994 () Int)
(declare-fun x2594 () Bool)
(declare-fun x1827 () Int)
(declare-fun x1603 () Int)
(declare-fun x4513 () Bool)
(declare-fun x441 () Bool)
(declare-fun x1698 () Int)
(declare-fun x3937 () Int)
(declare-fun x3333 () Bool)
(declare-fun x4384 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x2556 () Bool)
(declare-fun x177 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x163 () Int)
(declare-fun x2484 (Int) Int)
(declare-fun x3038 () Int)
(declare-fun x2015 () Int)
(declare-fun x2974 () Bool)
(declare-fun x4486 () Bool)
(declare-fun x3833 (Int Int) Int)
(declare-fun x3369 () Int)
(declare-fun x2559 () Int)
(declare-fun x2407 () Int)
(declare-fun x2618 () Bool)
(declare-fun x969 () Int)
(declare-fun x2500 () Int)
(declare-fun x828 () Int)
(declare-fun x615 () Int)
(declare-fun x214 () Int)
(declare-fun x4501 () Bool)
(declare-fun x2980 () Int)
(declare-fun x483 () Int)
(declare-fun x1180 () Int)
(declare-fun x2836 () Bool)
(declare-fun x3372 () Int)
(declare-fun x398 () Int)
(declare-fun x675 () Int)
(declare-fun x1225 () Bool)
(declare-fun x3366 () Int)
(declare-fun x1886 () Int)
(declare-fun x58 () Bool)
(declare-fun x3408 () Int)
(declare-fun x68 () Int)
(declare-fun x611 () Int)
(declare-fun x3042 () Int)
(declare-fun x3309 () Bool)
(declare-fun x318 () Bool)
(declare-fun x518 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x1873 () Int)
(declare-fun x683 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1881 () Int)
(declare-fun x3949 () Int)
(declare-fun x2466 () Int)
(declare-fun x681 () Int)
(declare-fun x2298 () Int)
(declare-fun x625 () Int)
(declare-fun x3466 () Int)
(declare-fun x1092 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x834 () Bool)
(declare-fun x1078 () Int)
(declare-fun x2428 () Bool)
(declare-fun x2850 () Int)
(declare-fun x3652 () Bool)
(declare-fun x2356 () Int)
(declare-fun x3306 () Bool)
(declare-fun x944 () Int)
(declare-fun x3832 () Int)
(declare-fun x1914 (Int) Int)
(declare-fun x4371 () Int)
(declare-fun x4028 () Bool)
(declare-fun x3986 () Bool)
(declare-fun x220 () Int)
(declare-fun x1357 () Bool)
(declare-fun x2000 () Int)
(declare-fun x2371 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x268 () Int)
(declare-fun x3434 () Bool)
(declare-fun x598 () Bool)
(declare-fun x891 () Bool)
(declare-fun x333 () Int)
(declare-fun x2348 () Int)
(declare-fun x1884 () Int)
(declare-fun x2333 () Int)
(declare-fun x1869 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x2450 () Int)
(declare-fun x3895 () Int)
(declare-fun x1436 () Bool)
(declare-fun x3589 () Int)
(declare-fun x1575 () Bool)
(declare-fun x2198 () Int)
(declare-fun x4397 () Bool)
(declare-fun x2146 () Int)
(declare-fun x1794 () Int)
(declare-fun x304 () Bool)
(declare-fun x3627 () Int)
(declare-fun x2814 () Bool)
(declare-fun x3806 () Int)
(declare-fun x3912 (Int) Int)
(declare-fun x848 () Bool)
(declare-fun x151 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x2157 () Int)
(declare-fun x1384 () Int)
(declare-fun x2636 () Int)
(declare-fun x3977 () Bool)
(declare-fun x2230 () Bool)
(declare-fun x4472 () Int)
(declare-fun x3055 () Int)
(declare-fun x3640 () Int)
(declare-fun x2573 () Int)
(declare-fun x282 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x610 () Int)
(declare-fun x3778 () Int)
(declare-fun x1281 () Bool)
(declare-fun x3262 () Int)
(declare-fun x420 () Bool)
(declare-fun x1299 () Int)
(declare-fun x1630 () Bool)
(declare-fun x2701 () Bool)
(declare-fun x3525 () Int)
(declare-fun x4320 () Int)
(declare-fun x348 () Int)
(declare-fun x1036 () Int)
(declare-fun x1994 () Int)
(declare-fun x76 () Int)
(declare-fun x2159 () Int)
(declare-fun x410 () Int)
(declare-fun x1490 () Int)
(declare-fun x4095 () Int)
(declare-fun x979 () Int)
(declare-fun x1003 () Int)
(declare-fun x1073 () Int)
(declare-fun x433 () Int)
(declare-fun x925 () Int)
(declare-fun x6 (Int) Int)
(declare-fun x4531 () Bool)
(declare-fun x2422 () Int)
(declare-fun x3360 () Int)
(declare-fun x244 () Int)
(declare-fun x1742 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x559 () Bool)
(declare-fun x2139 () Int)
(declare-fun x2181 () Int)
(declare-fun x4244 () Int)
(declare-fun x4175 () Bool)
(declare-fun x2561 () Bool)
(declare-fun x4229 () Bool)
(declare-fun x3799 () Int)
(declare-fun x480 () Int)
(declare-fun x1386 () Int)
(declare-fun x19 () Bool)
(declare-fun x3764 () Bool)
(declare-fun x48 () Int)
(declare-fun x950 () Bool)
(declare-fun x3480 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x2994 () Int)
(declare-fun x2239 () Bool)
(declare-fun x2991 () Int)
(declare-fun x1771 () Int)
(declare-fun x918 () Int)
(declare-fun x1019 () Bool)
(declare-fun x4493 () Bool)
(declare-fun x4315 () Int)
(declare-fun x948 () Int)
(declare-fun x3249 () Bool)
(declare-fun x3686 () Int)
(declare-fun x853 (Int) Int)
(declare-fun x1121 () Int)
(declare-fun x3021 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x4051 () Bool)
(declare-fun x790 () Bool)
(declare-fun x448 () Int)
(declare-fun x1613 () Int)
(declare-fun x1129 () Bool)
(declare-fun x1537 () Int)
(declare-fun x3211 () Int)
(declare-fun x1182 () Int)
(declare-fun x3680 () Bool)
(declare-fun x4271 () Int)
(declare-fun x2214 () Int)
(declare-fun x2905 () Bool)
(declare-fun x804 () Int)
(declare-fun x574 () Int)
(declare-fun x1937 () Int)
(declare-fun x27 () Int)
(declare-fun x2096 () Bool)
(declare-fun x1261 () Int)
(declare-fun x2215 () Int)
(declare-fun x3857 () Int)
(declare-fun x3845 () Int)
(declare-fun x2411 () Int)
(declare-fun x1706 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x4477 () Bool)
(declare-fun x499 () Bool)
(declare-fun x663 () Bool)
(declare-fun x427 () Int)
(declare-fun x1334 () Int)
(declare-fun x2841 () Int)
(declare-fun x512 () Int)
(declare-fun x1695 () Int)
(declare-fun x230 () Bool)
(declare-fun x50 () Int)
(declare-fun x685 () Int)
(declare-fun x2555 () Int)
(declare-fun x265 () Bool)
(declare-fun x1093 () Int)
(declare-fun x1932 () Int)
(declare-fun x3603 () Bool)
(declare-fun x1609 () Int)
(declare-fun x3609 () Int)
(declare-fun x1866 () Int)
(declare-fun x2138 () Int)
(declare-fun x1473 () Int)
(declare-fun x1104 () Bool)
(declare-fun x14 (Int Int) Int)
(declare-fun x1363 () Bool)
(declare-fun x3885 () Bool)
(declare-fun x1465 () Int)
(declare-fun x2140 () Int)
(declare-fun x882 () Int)
(declare-fun x3389 () Int)
(declare-fun x2785 () Bool)
(declare-fun x2697 () Int)
(declare-fun x485 () Bool)
(declare-fun x3826 () Bool)
(declare-fun x2041 () Int)
(declare-fun x1378 () Int)
(declare-fun x60 () Int)
(declare-fun x1529 () Bool)
(declare-fun x2718 () Bool)
(declare-fun x3771 () Bool)
(declare-fun x2591 () Int)
(declare-fun x3445 () Int)
(declare-fun x3104 () Bool)
(declare-fun x3301 () Bool)
(declare-fun x4000 () Int)
(declare-fun x4308 () Int)
(declare-fun x3277 () Int)
(declare-fun x3206 () Int)
(declare-fun x3179 () Int)
(declare-fun x2277 () Int)
(declare-fun x4391 () Int)
(declare-fun x2754 () Int)
(declare-fun x741 () Bool)
(declare-fun x697 () Int)
(declare-fun x2344 () Bool)
(declare-fun x3809 () Bool)
(declare-fun x3856 () Bool)
(declare-fun x1800 () Int)
(declare-fun x3700 () Int)
(declare-fun x1549 () Int)
(declare-fun x1413 () Int)
(declare-fun x1681 () Int)
(declare-fun x3844 () Bool)
(declare-fun x4037 () Bool)
(declare-fun x932 (Int) Int)
(declare-fun x3682 () Int)
(declare-fun x1525 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x1105 () Int)
(declare-fun x3988 () Int)
(declare-fun x1928 () Int)
(declare-fun x2449 () Bool)
(declare-fun x2249 () Int)
(declare-fun x519 () Bool)
(declare-fun x1069 () Int)
(declare-fun x4002 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x816 () Bool)
(declare-fun x2537 () Int)
(declare-fun x1108 () Int)
(declare-fun x231 () Bool)
(declare-fun x553 () Int)
(declare-fun x3896 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x4245 () Int)
(declare-fun x2147 () Int)
(declare-fun x1558 () Bool)
(declare-fun x4420 () Int)
(declare-fun x3432 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x3638 () Int)
(declare-fun x4089 () Int)
(declare-fun x928 () Bool)
(declare-fun x4583 () Int)
(declare-fun x4300 () Int)
(declare-fun x2035 () Int)
(declare-fun x1915 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x175 () Bool)
(declare-fun x2235 () Int)
(declare-fun x18 () Int)
(declare-fun x1192 () Int)
(declare-fun x2575 () Int)
(declare-fun x1659 () Int)
(declare-fun x3956 () Bool)
(declare-fun x2570 () Int)
(declare-fun x1470 () Int)
(declare-fun x3403 () Int)
(declare-fun x4251 () Bool)
(declare-fun x3429 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x3076 () Bool)
(declare-fun x888 () Bool)
(declare-fun x4234 () Int)
(declare-fun x2999 () Int)
(declare-fun x1434 () Int)
(declare-fun x1043 () Int)
(declare-fun x2201 () Bool)
(declare-fun x1589 () Int)
(declare-fun x789 () Bool)
(declare-fun x1383 () Int)
(declare-fun x307 () Bool)
(declare-fun x2581 () Int)
(declare-fun x2752 () Int)
(declare-fun x2875 () Int)
(declare-fun x2383 () Int)
(declare-fun x1815 () Int)
(declare-fun x3202 () Int)
(declare-fun x2880 () Int)
(declare-fun x3654 () Bool)
(declare-fun x3068 () Int)
(declare-fun x2743 () Int)
(declare-fun x2616 () Int)
(declare-fun x3239 () Int)
(declare-fun x1986 () Bool)
(declare-fun x3882 () Int)
(declare-fun x2133 () Int)
(declare-fun x257 () Int)
(declare-fun x4438 () Bool)
(declare-fun x387 () Int)
(declare-fun x2173 () Int)
(declare-fun x2691 () Int)
(declare-fun x2101 () Bool)
(declare-fun x2317 () Bool)
(declare-fun x2204 () Int)
(declare-fun x863 () Int)
(declare-fun x2247 () Bool)
(declare-fun x4254 () Bool)
(declare-fun x2597 () Int)
(declare-fun x413 () Int)
(declare-fun x3557 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x16 () Bool)
(declare-fun x793 () Int)
(declare-fun x2216 () Bool)
(declare-fun x4180 () Int)
(declare-fun x2468 () Bool)
(declare-fun x3984 () Int)
(declare-fun x3583 () Int)
(declare-fun x375 () Bool)
(declare-fun x3404 () Int)
(declare-fun x1365 () Int)
(declare-fun x1323 () Int)
(declare-fun x3105 () Bool)
(declare-fun x3665 () Int)
(declare-fun x4425 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x4524 () Int)
(declare-fun x2553 () Bool)
(declare-fun x508 () Bool)
(declare-fun x3684 () Int)
(declare-fun x1738 (Int) Int)
(declare-fun x308 () Int)
(declare-fun x395 () Bool)
(declare-fun x3477 () Int)
(declare-fun x3461 () Bool)
(declare-fun x1335 () Int)
(declare-fun x2608 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x4525 () Bool)
(declare-fun x1484 () Int)
(declare-fun x4183 () Bool)
(declare-fun x3567 () Bool)
(declare-fun x2008 () Int)
(declare-fun x2872 () Int)
(declare-fun x4482 () Bool)
(declare-fun x3367 () Bool)
(declare-fun x510 () Bool)
(declare-fun x1157 () Int)
(declare-fun x1486 () Int)
(declare-fun x364 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x1654 () Int)
(declare-fun x2056 () Int)
(declare-fun x1118 () Bool)
(declare-fun x984 () Bool)
(declare-fun x2840 () Int)
(declare-fun x2060 () Bool)
(declare-fun x832 () Int)
(declare-fun x4530 () Int)
(declare-fun x1770 () Bool)
(declare-fun x4015 () Int)
(declare-fun x2273 () Int)
(declare-fun x1930 () Int)
(declare-fun x556 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x3406 () Int)
(declare-fun x443 () Bool)
(declare-fun x3071 () Bool)
(declare-fun x3097 () Int)
(declare-fun x3730 () Int)
(declare-fun x2529 () Int)
(declare-fun x2187 () Int)
(declare-fun x4137 (Int) Int)
(declare-fun x2485 () Bool)
(declare-fun x3656 () Bool)
(declare-fun x2951 () Int)
(declare-fun x1071 () Bool)
(declare-fun x679 () Bool)
(declare-fun x795 () Int)
(declare-fun x602 () Bool)
(declare-fun x504 () Int)
(declare-fun x4323 () Int)
(declare-fun x1280 () Bool)
(declare-fun x491 () Bool)
(declare-fun x435 () Int)
(declare-fun x3295 () Int)
(declare-fun x3571 () Int)
(declare-fun x1356 () Bool)
(declare-fun x3886 () Int)
(declare-fun x4522 () Int)
(declare-fun x4073 () Int)
(declare-fun x4329 () Int)
(declare-fun x183 () Int)
(declare-fun x3327 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x4463 () Int)
(declare-fun x4227 () Bool)
(declare-fun x2417 () Int)
(declare-fun x3867 () Int)
(declare-fun x1165 () Bool)
(declare-fun x792 () Int)
(declare-fun x736 () Int)
(declare-fun x266 () Int)
(declare-fun x3279 () Bool)
(declare-fun x4021 () Int)
(declare-fun x4512 () Int)
(declare-fun x2620 () Bool)
(declare-fun x660 () Int)
(declare-fun x870 () Int)
(declare-fun x3141 () Int)
(declare-fun x1533 (Int) Int)
(declare-fun x3580 () Bool)
(declare-fun x2364 () Int)
(declare-fun x194 () Bool)
(declare-fun x39 () Bool)
(declare-fun x4363 () Int)
(declare-fun x3963 () Bool)
(declare-fun x2347 () Int)
(declare-fun x3424 () Bool)
(declare-fun x4382 () Bool)
(declare-fun x2778 () Int)
(declare-fun x2001 () Int)
(declare-fun x2050 () Int)
(declare-fun x771 () Int)
(declare-fun x542 () Int)
(declare-fun x3546 () Bool)
(declare-fun x1944 () Int)
(declare-fun x3710 () Bool)
(declare-fun x4441 () Int)
(declare-fun x2987 () Int)
(declare-fun x4106 () Bool)
(declare-fun x218 () Int)
(declare-fun x3431 () Bool)
(declare-fun x995 () Bool)
(declare-fun x477 () Int)
(declare-fun x3789 () Bool)
(declare-fun x1475 () Int)
(declare-fun x1739 () Int)
(declare-fun x3624 () Bool)
(declare-fun x2685 () Int)
(declare-fun x850 () Int)
(declare-fun x4053 () Int)
(declare-fun x450 () Int)
(declare-fun x1708 () Int)
(declare-fun x2970 () Int)
(declare-fun x3300 () Int)
(declare-fun x3623 () Int)
(declare-fun x1735 () Int)
(declare-fun x708 () Int)
(declare-fun x3510 () Bool)
(declare-fun x854 () Bool)
(declare-fun x937 () Int)
(declare-fun x2627 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x3550 () Int)
(declare-fun x493 () Bool)
(declare-fun x2413 () Int)
(declare-fun x4139 () Bool)
(declare-fun x2666 () Int)
(declare-fun x4243 () Int)
(declare-fun x2396 () Int)
(declare-fun x880 () Int)
(declare-fun x1996 () Int)
(declare-fun x731 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x1587 () Int)
(declare-fun x1015 () Int)
(declare-fun x971 () Int)
(declare-fun x639 () Bool)
(declare-fun x252 () Int)
(declare-fun x4450 () Int)
(declare-fun x3894 () Int)
(declare-fun x1775 () Int)
(declare-fun x3457 () Int)
(declare-fun x2124 () Int)
(declare-fun x1513 () Bool)
(declare-fun x842 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x3563 () Int)
(declare-fun x1635 () Int)
(declare-fun x3164 () Int)
(declare-fun x2589 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x1135 () Int)
(declare-fun x799 () Int)
(declare-fun x1218 () Bool)
(declare-fun x4267 () Int)
(declare-fun x3383 () Int)
(declare-fun x3560 () Int)
(declare-fun x2660 () Bool)
(declare-fun x4204 () Int)
(declare-fun x321 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x2250 () Int)
(declare-fun x3605 () Bool)
(declare-fun x1924 () Int)
(declare-fun x696 () Int)
(declare-fun x29 () Int)
(declare-fun x3787 () Int)
(declare-fun x2456 () Int)
(declare-fun x4207 () Int)
(declare-fun x807 () Int)
(declare-fun x3228 () Int)
(declare-fun x4318 () Bool)
(declare-fun x851 () Int)
(declare-fun x2441 () Bool)
(declare-fun x1806 () Bool)
(declare-fun x3731 () Bool)
(declare-fun x751 () Int)
(declare-fun x3992 () Bool)
(declare-fun x1179 () Int)
(declare-fun x4046 () Int)
(declare-fun x1243 () Bool)
(declare-fun x44 () Bool)
(declare-fun x2927 () Int)
(declare-fun x959 () Int)
(declare-fun x2305 () Bool)
(declare-fun x2854 () Bool)
(declare-fun x972 () Bool)
(declare-fun x2304 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x4286 () Int)
(declare-fun x4562 () Bool)
(declare-fun x1850 () Int)
(declare-fun x4223 () Int)
(declare-fun x3057 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x3579 () Bool)
(declare-fun x4418 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x844 () Int)
(declare-fun x4291 () Int)
(declare-fun x2073 () Int)
(declare-fun x2920 () Bool)
(declare-fun x148 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x2031 () Int)
(declare-fun x3739 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x2137 () Int)
(declare-fun x2549 () Bool)
(declare-fun x754 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x726 () Bool)
(declare-fun x4567 () Bool)
(declare-fun x436 () Int)
(declare-fun x1523 () Bool)
(declare-fun x122 () Bool)
(declare-fun x294 () Bool)
(declare-fun x3201 (Int) Int)
(declare-fun x3690 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x2710 () Int)
(declare-fun x2808 (Int) Int)
(declare-fun x2968 () Int)
(declare-fun x3486 () Int)
(declare-fun x809 () Bool)
(declare-fun x3015 () Int)
(declare-fun x3572 () Bool)
(declare-fun x2357 () Int)
(declare-fun x3658 () Bool)
(declare-fun x4007 () Int)
(declare-fun x1056 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x4174 () Int)
(declare-fun x4516 (Int) Int)
(declare-fun x1834 (Int) Bool)
(declare-fun x4494 () Bool)
(declare-fun x4430 () Int)
(declare-fun x4538 () Int)
(declare-fun x1150 () Bool)
(declare-fun x1812 () Int)
(declare-fun x2721 () Int)
(declare-fun x991 () Int)
(declare-fun x3365 () Int)
(declare-fun x1988 () Int)
(declare-fun x739 () Int)
(declare-fun x3398 () Bool)
(declare-fun x138 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x2299 () Int)
(declare-fun x47 () Int)
(declare-fun x61 () Int)
(declare-fun x4065 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x3766 () Int)
(declare-fun x2182 () Int)
(declare-fun x3392 () Int)
(declare-fun x3642 () Bool)
(declare-fun x2069 (Int) Int)
(declare-fun x1719 () Int)
(declare-fun x1684 () Int)
(declare-fun x921 () Bool)
(declare-fun x234 () Int)
(declare-fun x3241 () Int)
(declare-fun x1185 () Int)
(declare-fun x1725 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x236 () Int)
(declare-fun x3781 () Bool)
(declare-fun x1 () Int)
(declare-fun x4179 () Int)
(declare-fun x864 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x4131 () Bool)
(declare-fun x2475 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x330 () Int)
(declare-fun x3286 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x711 () Bool)
(declare-fun x3779 () Int)
(declare-fun x4060 () Bool)
(declare-fun x3712 () Int)
(declare-fun x1933 () Bool)
(declare-fun x3535 () Int)
(declare-fun x4170 () Int)
(declare-fun x1688 () Int)
(declare-fun x2481 () Int)
(declare-fun x700 () Int)
(declare-fun x251 () Bool)
(declare-fun x3251 () Int)
(declare-fun x1627 () Bool)
(declare-fun x2397 () Bool)
(declare-fun x849 () Bool)
(declare-fun x1764 () Int)
(declare-fun x3519 () Int)
(declare-fun x2565 () Int)
(declare-fun x1480 () Bool)
(declare-fun x241 () Int)
(declare-fun x1978 () Int)
(declare-fun x1957 () Bool)
(declare-fun x764 () Int)
(declare-fun x206 () Int)
(declare-fun x43 () Int)
(declare-fun x2635 () Int)
(declare-fun x312 () Int)
(declare-fun x3426 () Int)
(declare-fun x3079 () Int)
(declare-fun x1846 () Bool)
(declare-fun x692 () Bool)
(declare-fun x3523 (Int) Int)
(declare-fun x511 () Int)
(declare-fun x222 () Bool)
(declare-fun x919 () Bool)
(declare-fun x1006 (Int) Int)
(declare-fun x1710 () Int)
(declare-fun x2894 () Bool)
(declare-fun x2090 () Int)
(declare-fun x3490 () Int)
(declare-fun x3072 () Bool)
(declare-fun x861 () Int)
(declare-fun x2688 () Int)
(declare-fun x1208 () Bool)
(declare-fun x2121 () Int)
(declare-fun x4577 () Bool)
(declare-fun x4129 () Int)
(declare-fun x755 () Int)
(declare-fun x2900 () Int)
(declare-fun x112 () Int)
(declare-fun x846 () Int)
(declare-fun x1254 () Bool)
(declare-fun x2669 () Int)
(declare-fun x2284 () Int)
(declare-fun x3773 () Int)
(declare-fun x1732 () Bool)
(declare-fun x212 () Bool)
(declare-fun x2858 () Int)
(declare-fun x492 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x1446 () Int)
(declare-fun x946 () Int)
(declare-fun x442 () Int)
(declare-fun x4096 () Int)
(declare-fun x1845 () Bool)
(declare-fun x607 () Int)
(declare-fun x1277 () Int)
(declare-fun x34 () Int)
(declare-fun x3889 () Bool)
(declare-fun x3283 () Int)
(declare-fun x316 () Bool)
(declare-fun x3982 () Bool)
(declare-fun x467 () Int)
(declare-fun x1152 () Int)
(declare-fun x501 () Bool)
(declare-fun x2890 () Int)
(declare-fun x2495 () Int)
(declare-fun x2431 () Bool)
(declare-fun x2955 () Int)
(declare-fun x4172 () Bool)
(declare-fun x3908 () Int)
(declare-fun x3420 () Bool)
(declare-fun x1188 (Int) Int)
(declare-fun x162 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1171 () Int)
(declare-fun x340 () Bool)
(declare-fun x2792 () Int)
(declare-fun x3693 () Bool)
(declare-fun x1799 () Bool)
(declare-fun x2294 () Int)
(declare-fun x2583 () Int)
(declare-fun x3608 () Bool)
(declare-fun x3620 () Bool)
(declare-fun x3481 () Bool)
(declare-fun x3488 () Int)
(declare-fun x4413 () Int)
(declare-fun x1692 () Bool)
(declare-fun x99 () Bool)
(declare-fun x2353 () Int)
(declare-fun x1803 () Int)
(declare-fun x167 () Bool)
(declare-fun x3586 () Bool)
(declare-fun x4432 () Int)
(declare-fun x476 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x1778 () Int)
(declare-fun x2567 () Int)
(declare-fun x176 () Int)
(declare-fun x2025 () Bool)
(declare-fun x768 () Bool)
(declare-fun x1275 () Int)
(declare-fun x3195 () Bool)
(declare-fun x3169 () Int)
(declare-fun x1768 () Int)
(declare-fun x1394 () Bool)
(declare-fun x449 () Bool)
(declare-fun x3085 () Bool)
(declare-fun x541 () Bool)
(declare-fun x4092 () Bool)
(declare-fun x361 () Int)
(declare-fun x2981 () Int)
(declare-fun x4130 () Bool)
(declare-fun x2048 () Int)
(declare-fun x4340 () Int)
(declare-fun x4359 () Int)
(declare-fun x649 () Int)
(declare-fun x588 () Bool)
(declare-fun x3492 () Bool)
(declare-fun x939 () Int)
(declare-fun x4409 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x3281 (Int) Int)
(declare-fun x3860 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x3526 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x4491 () Int)
(declare-fun x1215 () Bool)
(declare-fun x498 () Int)
(declare-fun x1551 () Int)
(declare-fun x3934 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x956 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x3376 () Int)
(declare-fun x4279 () Int)
(declare-fun x2789 () Bool)
(declare-fun x3846 () Int)
(declare-fun x2268 () Bool)
(declare-fun x573 () Bool)
(declare-fun x3380 () Bool)
(declare-fun x3634 () Int)
(declare-fun x2753 () Bool)
(declare-fun x2566 () Int)
(declare-fun x1646 () Int)
(declare-fun x4547 () Bool)
(declare-fun x3397 () Int)
(declare-fun x1853 () Bool)
(declare-fun x3203 () Int)
(declare-fun x1205 () Int)
(declare-fun x2705 () Int)
(declare-fun x4339 () Bool)
(declare-fun x341 () Bool)
(declare-fun x94 () Int)
(declare-fun x1276 () Int)
(declare-fun x22 () Bool)
(declare-fun x4011 (Int) Int)
(declare-fun x2851 () Bool)
(declare-fun x1699 () Int)
(declare-fun x761 () Bool)
(declare-fun x1651 () Int)
(declare-fun x575 () Int)
(declare-fun x1257 () Int)
(declare-fun x1148 () Int)
(declare-fun x3278 () Int)
(declare-fun x3762 () Int)
(declare-fun x2904 () Int)
(declare-fun x1618 () Bool)
(declare-fun x4537 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x4230 () Bool)
(declare-fun x2699 () Int)
(declare-fun x4303 () Int)
(declare-fun x859 () Bool)
(declare-fun x415 () Bool)
(declare-fun x1981 () Int)
(declare-fun x770 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x200 (Int) Int)
(declare-fun x4132 (Int) Int)
(declare-fun x820 () Int)
(declare-fun x25 () Bool)
(declare-fun x4049 () Bool)
(declare-fun x4471 () Int)
(declare-fun x1599 () Int)
(declare-fun x2278 (Int) Int)
(declare-fun x1190 (Int) Int)
(declare-fun x4517 () Int)
(declare-fun x3077 () Bool)
(declare-fun x2815 () Int)
(declare-fun x277 (Int) Int)
(declare-fun x1832 () Int)
(declare-fun x4072 () Bool)
(declare-fun x118 () Int)
(declare-fun x352 () Bool)
(declare-fun x414 () Int)
(declare-fun x469 () Bool)
(declare-fun x3699 () Int)
(declare-fun x3639 () Int)
(declare-fun x2870 () Int)
(declare-fun x1137 () Int)
(declare-fun x1086 () Int)
(declare-fun x171 () Int)
(declare-fun x3409 () Bool)
(declare-fun x136 () Bool)
(declare-fun x182 () Int)
(declare-fun x2984 () Int)
(declare-fun x1584 (Int) Int)
(declare-fun x2302 () Bool)
(declare-fun x1408 () Int)
(declare-fun x363 () Int)
(declare-fun x3320 () Int)
(declare-fun x747 () Bool)
(declare-fun x613 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x1560 () Int)
(declare-fun x3156 () Int)
(declare-fun x3890 () Bool)
(declare-fun x4026 () Int)
(declare-fun x4417 () Int)
(declare-fun x3238 () Bool)
(declare-fun x2300 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x4144 () Int)
(declare-fun x1216 () Int)
(declare-fun x632 () Bool)
(declare-fun x571 () Int)
(declare-fun x2343 () Bool)
(declare-fun x337 () Int)
(declare-fun x4075 () Bool)
(declare-fun x2852 () Int)
(declare-fun x1787 (Int) Int)
(declare-fun x101 () Bool)
(declare-fun x5 () Bool)
(declare-fun x1214 () Int)
(define-fun x990 ((x2185 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2185) (>= x2185 0)) x2185 (- x2185 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1377 ((x2185 Int)) Int (ite (and (< x2185 0) (>= x2185 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x2185 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2185))
(define-fun x3929 ((x2185 Int)) Int (ite (and (>= x2185 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2185)) x2185 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2185) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x2185)) (- x2185 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x2185 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x2185 0)) (+ x2185 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x14 x2185 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2786 ((x1392 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392) (<= 0 x1392)))
(define-fun x740 ((x1392 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392) (>= x1392 0)))
(define-fun x1025 ((x1392 Int) (x3002 Int)) Bool (=> (and (> x3002 0) (< 0 x1392)) (and (>= x1392 (x2655 x1392 x3002)) (<= 0 (x2655 x1392 x3002)))))
(define-fun x1561 ((x1392 Int) (x3002 Int)) Bool (=> (and (and (<= 1 x3002) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3002)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392) (>= x1392 0))) (and (>= (x2655 x1392 x3002) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2655 x1392 x3002)))))
(define-fun x248 ((x1392 Int) (x3002 Int)) Bool (=> (and (> x1392 x3002) (> x3002 1)) (> x1392 (x2655 x1392 x3002))))
(define-fun x1022 ((x1392 Int) (x3002 Int)) Bool (=> (and (< 0 x3002) (> x1392 0)) (= (< x1392 x3002) (= (x2655 x1392 x3002) 0))))
(define-fun x4236 ((x1392 Int) (x3002 Int)) Bool (=> (and (> x1392 0) (< 0 x3002)) (and (> (* x3002 (x2655 x1392 x3002)) (- x1392 x3002)) (<= (* (x2655 x1392 x3002) x3002) x1392))))
(define-fun x3248 ((x1392 Int) (x3002 Int)) Bool (= (- x1392 (x2191 (- x3002 1) x1392)) (* x3002 (x2655 x1392 x3002))))
(define-fun x3153 ((x1392 Int) (x3002 Int)) Bool (and (x3248 x1392 x3002) (x4236 x1392 x3002) (x248 x1392 x3002) (x1561 x1392 x3002) (x1025 x1392 x3002) (x1022 x1392 x3002)))
(define-fun x912 ((x1392 Int)) Bool (= (x2655 0 x1392) 0))
(define-fun x2623 ((x1392 Int)) Bool (= (x2655 x1392 1) x1392))
(define-fun x4498 ((x1392 Int)) Bool (=> (not (= x1392 0)) (= 1 (x2655 x1392 x1392))))
(define-fun x2091 ((x1392 Int)) Bool (and (x2623 x1392) (x912 x1392) (x4498 x1392)))
(define-fun x4557 ((x1392 Int)) Bool (and (= (x2191 x1392 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1392) (= x1392 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392))))
(define-fun x4186 ((x1392 Int)) Bool (and (= 0 (x2191 x1392 0)) (= 0 (x2191 0 x1392))))
(define-fun x2130 ((x1392 Int)) Bool (= x1392 (x2191 x1392 x1392)))
(define-fun x1450 ((x1392 Int)) Bool (and (x4557 x1392) (x4186 x1392) (x2130 x1392)))
(define-fun x3573 ((x1392 Int) (x3002 Int)) Bool (= (x2191 x3002 x1392) (x2191 x1392 x3002)))
(define-fun x452 ((x1392 Int) (x3002 Int)) Bool (and (>= (x2191 x1392 x3002) 0) (=> (>= x3002 0) (<= (x2191 x1392 x3002) x3002)) (=> (<= 0 x1392) (<= (x2191 x1392 x3002) x1392))))
(define-fun x1416 ((x1392 Int) (x3002 Int)) Bool (and (x452 x1392 x3002) (x3573 x1392 x3002)))
(define-fun x3246 ((x1392 Int)) Bool (= (x2191 x1392 1) (x14 x1392 2)))
(define-fun x2227 ((x1392 Int)) Bool (and (x3246 x1392) (x1416 x1392 1)))
(define-fun x2462 ((x1392 Int) (x3002 Int)) Bool (and (>= (x14 x1392 x3002) 0) (< (x14 x1392 x3002) x3002)))
(define-fun x2706 ((x1392 Int) (x3002 Int)) Bool (=> (and (< 0 x3002) (>= x1392 0)) (= (= (x14 x1392 x3002) x1392) (> x3002 x1392))))
(define-fun x3970 ((x1392 Int) (x3002 Int)) Bool (=> (and (and (> (+ x3002 x3002) x1392) (<= x3002 x1392)) (> x3002 0)) (= (x14 x1392 x3002) (- x1392 x3002))))
(define-fun x108 ((x1392 Int) (x3002 Int)) Bool (=> (< 0 x3002) (= (+ (* (x2655 x1392 x3002) x3002) (x14 x1392 x3002)) x1392)))
(define-fun x149 ((x1392 Int) (x3002 Int)) Bool (and (x2462 x1392 x3002) (x2706 x1392 x3002) (x108 x1392 x3002) (x3970 x1392 x3002)))
(define-fun x4035 ((x1392 Int)) Bool (= 0 (x14 0 x1392)))
(define-fun x4412 ((x1392 Int)) Bool (= 0 (x14 x1392 1)))
(define-fun x1231 ((x1392 Int)) Bool (= (x14 x1392 x1392) 0))
(define-fun x1311 ((x1392 Int)) Bool (and (x4035 x1392) (x1231 x1392) (x4412 x1392)))
(define-fun x170 ((x1392 Int)) Bool (= (x2191 x1392 127) (x14 x1392 128)))
(define-fun x2395 ((x1392 Int)) Bool (and (x170 x1392) (x1416 x1392 127)))
(define-fun x2783 ((x1392 Int) (x3002 Int)) Bool (= (* x1392 x3002) (x3833 x1392 x3002)))
(define-fun x1938 ((x1392 Int) (x3002 Int)) Bool (and (= (x3833 (- x1392 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3002) (- (* x3002 x1392) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3002))) (= (x3833 x1392 (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x1392 (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x3833 (- x1392 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* x1392 (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x641 ((x1392 Int) (x3002 Int)) Bool (=> (and (< 0 x1392) (< 0 x3002)) (= (= x3002 (x2655 (x3929 (x3833 x1392 x3002)) x1392)) (< (x3833 x1392 x3002) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x2503 ((x1392 Int) (x3002 Int)) Bool (=> (and (not (= x1392 0)) (not (= 0 x3002))) (and (= x3002 (x2655 (x3833 x1392 x3002) x1392)) (= x1392 (x2655 (x3833 x1392 x3002) x3002)))))
(define-fun x3584 ((x1392 Int) (x3002 Int)) Bool (=> (and (< 0 x3002) (< 0 x1392)) (= (< (x2655 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392) x3002) (> (x3833 x1392 x3002) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x4022 ((x1392 Int) (x3002 Int)) Bool (and (= (x3929 (x3833 x1392 x3002)) (x3929 (x3833 (- x1392 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3002))) (= (x3929 (x3833 x1392 (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3929 (x3833 x1392 x3002))) (= (x3929 (x3833 (- x1392 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3929 (x3833 x1392 x3002)))))
(define-fun x85 ((x1392 Int) (x3002 Int)) Bool (and (=> (and (and (< 0 x1392) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1392)) (and (<= x3002 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x3002 0))) (= (<= (x3833 x1392 x3002) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1392 (x2655 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3002)))) (=> (and (and (> x1392 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1392)) (and (> x3002 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3002 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392) (x2655 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3002))) (<= (x3833 (- x1392 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1392) (<= x1392 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (< 0 x3002) (<= x3002 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x2655 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3002) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1392)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x3833 (- x1392 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3002)))) (=> (and (and (<= x3002 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x3002 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1392 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1392))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3002) (x2655 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1392)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x3833 x1392 (- x3002 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x794 ((x1392 Int) (x3002 Int)) Bool (and (x2503 x1392 x3002) (x1938 x1392 x3002) (x85 x1392 x3002) (x2783 x1392 x3002) (x3584 x1392 x3002) (x4022 x1392 x3002) (x641 x1392 x3002)))
(define-fun x682 ((x1392 Int)) Bool (and (= 0 (x3833 0 x1392)) (= 0 (x3833 x1392 0))))
(define-fun x4509 ((x1392 Int)) Bool (and (= (x3833 x1392 1) x1392) (= (x3833 1 x1392) x1392)))
(define-fun x3829 ((x1392 Int)) Bool (and (x4509 x1392) (x682 x1392)))
(define-fun x4559 ((x1392 Int)) Bool (= (x2191 x1392 255) (x14 x1392 256)))
(define-fun x3758 ((x1392 Int)) Bool (and (x1416 x1392 255) (x4559 x1392)))
(define-fun x1212 ((x1392 Int)) Bool (= (x3929 x1392) (+ (x2191 x1392 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x14 x1392 256))))
(define-fun x4273 ((x1392 Int)) Bool (and (x1416 x1392 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1212 x1392)))
(define-fun x702 ((x1392 Int)) Bool (= (x3929 x1392) (+ (x2191 x1392 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x14 x1392 32))))
(define-fun x2779 ((x1392 Int)) Bool (and (x1416 x1392 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x702 x1392)))
(define-fun x278 ((x1392 Int)) Bool (= (x14 x1392 26959946667150639794667015087019630673637144422540572481103610249216) (x2191 x1392 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x780 ((x1392 Int)) Bool (and (x278 x1392) (x1416 x1392 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x2586 ((x3049 Int)) Int 0)
(define-fun x3253 ((x3049 Int)) Int 0)
(define-fun x3689 ((x3049 Int)) Int (ite (< x3049 x978) (x401 x3049) 0))
(define-fun x1030 ((x3049 Int)) Int (ite (< x3049 x1408) (x3463 x3049) 0))
(define-fun x2067 ((x3049 Int)) Int (ite (< x3049 x2298) (x1533 x3049) 0))
(define-fun x320 ((x3049 Int)) Int 0)
(define-fun x4112 ((x3049 Int)) Int 0)
(define-fun x4013 ((x3049 Int)) Int 0)
(define-fun x777 ((x3049 Int)) Int 0)
(define-fun x2281 ((x3049 Int)) Int 0)
(define-fun x4570 ((x3049 Int)) Int 0)
(define-fun x471 ((x3049 Int)) Int 0)
(define-fun x1361 ((x3049 Int)) Int 0)
(define-fun x2110 ((x3049 Int)) Int 0)
(define-fun x1142 ((x3049 Int)) Int 0)
(define-fun x2703 ((x3049 Int)) Int 0)
(define-fun x3850 ((x3049 Int)) Int 0)
(define-fun x54 ((x3049 Int)) Int 0)
(define-fun x627 ((x3049 Int)) Int 0)
(define-fun x1110 ((x3049 Int)) Int 0)
(define-fun x734 ((x3049 Int)) Int 0)
(define-fun x2985 ((x3049 Int)) Int 0)
(define-fun x280 ((x3049 Int)) Int 0)
(define-fun x1836 ((x3049 Int)) Int 0)
(define-fun x3497 ((x3049 Int)) Int 0)
(define-fun x1342 ((x3049 Int)) Int 0)
(define-fun x2094 ((x3049 Int)) Int 0)
(define-fun x2044 ((x3049 Int)) Int 0)
(define-fun x2624 ((x3049 Int)) Int 0)
(define-fun x4045 ((x3049 Int)) Int 0)
(define-fun x2908 ((x3049 Int)) Int 0)
(define-fun x1103 ((x3049 Int)) Int 0)
(define-fun x4156 ((x3049 Int)) Int 0)
(define-fun x3753 ((x3049 Int)) Int 0)
(define-fun x3075 ((x3049 Int)) Int 0)
(define-fun x3496 ((x3049 Int)) Int 0)
(define-fun x2956 ((x3049 Int)) Int 0)
(define-fun x2274 ((x3049 Int)) Int 0)
(define-fun x4257 ((x3049 Int)) Int 0)
(define-fun x2577 ((x3049 Int)) Int (ite (< x3049 x3230) (x1116 x3049) 0))
(define-fun x4345 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 x3230)) (x1141 x3049) (x2577 x3049)))
(define-fun x3619 ((x3049 Int)) Int (ite (= x1057 x3049) x3623 (x1451 x3049)))
(define-fun x3667 ((x3049 Int)) Int (ite (= x3049 x2625) x3352 (x3619 x3049)))
(define-fun x4590 ((x3049 Int)) Int (ite (= 128 x3049) x3401 (x4570 x3049)))
(define-fun x2263 ((x3049 Int)) Int (ite (= x3049 160) x827 (x4590 x3049)))
(define-fun x2386 ((x3049 Int)) Int (ite (= x3049 160) x4093 (x4590 x3049)))
(define-fun x1511 ((x3049 Int)) Int (x3513 x3049))
(define-fun x3685 ((x3049 Int)) Int (ite (= 0 x3049) x3503 (x1255 x3049)))
(define-fun x2633 ((x3049 Int)) Int (ite (= x3049 4) 17 (x320 x3049)))
(define-fun x2734 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> 36 x3049)) (x2633 x3049) (x1255 x3049)))
(define-fun x2816 ((x3049 Int)) Int (ite (= 0 x3049) x2501 (x1255 x3049)))
(define-fun x3687 ((x3049 Int)) Int (ite x4078 (x3685 x3049) (ite x3052 (x2734 x3049) (x2816 x3049))))
(define-fun x4481 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 x2042)) (x3687 x3049) (x4156 x3049)))
(define-fun x1009 ((x3049 Int)) Int (ite (and (< x3049 x2042) (>= x3049 0)) (x4481 x3049) (x2596 x3049)))
(define-fun x2937 ((x3049 Int)) Int (ite (= x3049 192) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x4156 x3049)))
(define-fun x418 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 4 x3049)) (x2937 (+ 192 x3049)) (x2596 x3049)))
(define-fun x3393 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x54 x3049)))
(define-fun x1354 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 36 x3049)) (x3393 x3049) (x3281 x3049)))
(define-fun x2055 ((x3049 Int)) Int (ite (= 128 x3049) 48755886422350550937420582033662272622158303343164848365600209189876434731008 (x54 x3049)))
(define-fun x157 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 4)) (x2055 (+ x3049 128)) (x3281 x3049)))
(define-fun x3818 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x54 x3049)))
(define-fun x1054 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 36)) (x3818 x3049) (x3281 x3049)))
(define-fun x2193 ((x3049 Int)) Int (ite x1845 (x3281 x3049) (ite x1871 (x1354 x3049) (ite x2410 (x157 x3049) (x1054 x3049)))))
(define-fun x2518 ((x3049 Int)) Int (ite (= 0 x3049) x2456 (x3281 x3049)))
(define-fun x3746 ((x3049 Int)) Int (ite x3054 (x2193 x3049) (x2518 x3049)))
(define-fun x1671 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x280 x3049)))
(define-fun x2106 ((x3049 Int)) Int (ite (= x3049 132) 32 (x1671 x3049)))
(define-fun x2295 ((x3049 Int)) Int (ite (= x3049 164) 10 (x2106 x3049)))
(define-fun x748 ((x3049 Int)) Int (ite (= x3049 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x2295 x3049)))
(define-fun x1621 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> 100 x3049)) (x748 (+ 128 x3049)) (x277 x3049)))
(define-fun x837 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> 100 x3049)) (x1621 x3049) (x4112 x3049)))
(define-fun x382 ((x3049 Int)) Int (ite (and (> 100 x3049) (>= x3049 0)) (x837 x3049) (x3281 x3049)))
(define-fun x181 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x4112 x3049)))
(define-fun x4150 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 36 x3049)) (x181 x3049) (x3281 x3049)))
(define-fun x1543 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x4112 x3049)))
(define-fun x2058 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 36 x3049)) (x1543 x3049) (x3281 x3049)))
(define-fun x378 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x4112 x3049)))
(define-fun x2692 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> 36 x3049)) (x378 x3049) (x3281 x3049)))
(define-fun x1296 ((x3049 Int)) Int (ite (= x3049 4) 34 (x4112 x3049)))
(define-fun x3851 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 36 x3049)) (x1296 x3049) (x3281 x3049)))
(define-fun x1830 ((x3049 Int)) Int (ite (= x3049 4) 34 (x4112 x3049)))
(define-fun x4439 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> 36 x3049)) (x1830 x3049) (x3281 x3049)))
(define-fun x3375 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x4112 x3049)))
(define-fun x4203 ((x3049 Int)) Int (ite (and (> 36 x3049) (<= 0 x3049)) (x3375 x3049) (x3281 x3049)))
(define-fun x1467 ((x3049 Int)) Int (ite (= x3049 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x4045 x3049)))
(define-fun x2402 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 4)) (x1467 (+ x3049 128)) (x344 x3049)))
(define-fun x753 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4045 x3049)))
(define-fun x1940 ((x3049 Int)) Int (ite (= x3049 132) 32 (x753 x3049)))
(define-fun x1085 ((x3049 Int)) Int (ite (= x3049 164) 12 (x1940 x3049)))
(define-fun x1226 ((x3049 Int)) Int (ite (= x3049 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x1085 x3049)))
(define-fun x4581 ((x3049 Int)) Int (ite (and (> 100 x3049) (>= x3049 0)) (x1226 (+ x3049 128)) (x344 x3049)))
(define-fun x856 ((x3049 Int)) Int (ite x2268 (x2402 x3049) (x4581 x3049)))
(define-fun x3676 ((x3049 Int)) Int (ite x4438 (x856 x3049) (x344 x3049)))
(define-fun x3975 ((x3049 Int)) Int (ite (and (> x241 x3049) (>= x3049 0)) (x3676 x3049) (x4112 x3049)))
(define-fun x1715 ((x3049 Int)) Int (ite (and (> x241 x3049) (<= 0 x3049)) (x3975 x3049) (x3281 x3049)))
(define-fun x2776 ((x3049 Int)) Int (ite (= x3049 x3882) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x3075 x3049)))
(define-fun x1655 ((x3049 Int)) Int (ite (and (< x3049 4) (<= 0 x3049)) (x2776 (+ x3882 x3049)) (x1779 x3049)))
(define-fun x4457 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3075 x3049)))
(define-fun x4210 ((x3049 Int)) Int (ite (= x3049 132) 32 (x4457 x3049)))
(define-fun x3972 ((x3049 Int)) Int (ite (= x3049 164) 12 (x4210 x3049)))
(define-fun x3706 ((x3049 Int)) Int (ite (= x3049 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x3972 x3049)))
(define-fun x3048 ((x3049 Int)) Int (ite (and (> 100 x3049) (>= x3049 0)) (x3706 (+ 128 x3049)) (x1779 x3049)))
(define-fun x4237 ((x3049 Int)) Int (ite x2751 (x1655 x3049) (x3048 x3049)))
(define-fun x3107 ((x3049 Int)) Int (ite x1962 (x4237 x3049) (x1779 x3049)))
(define-fun x3090 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 x2840)) (x3107 x3049) (x4112 x3049)))
(define-fun x4283 ((x3049 Int)) Int (ite (and (> x2840 x3049) (>= x3049 0)) (x3090 x3049) (x3281 x3049)))
(define-fun x2948 ((x3049 Int)) Int (ite (= x3049 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3253 x3049)))
(define-fun x2379 ((x3049 Int)) Int (ite (= x3049 132) 32 (x2948 x3049)))
(define-fun x3632 ((x3049 Int)) Int (ite (= 164 x3049) 10 (x2379 x3049)))
(define-fun x2301 ((x3049 Int)) Int (ite (= x3049 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x3632 x3049)))
(define-fun x2670 ((x3049 Int)) Int (ite (and (< x3049 100) (>= x3049 0)) (x2301 (+ 128 x3049)) (x2764 x3049)))
(define-fun x673 ((x3049 Int)) Int 0)
(define-fun x3767 ((x3049 Int)) Int (ite x731 (x2670 x3049) (x673 x3049)))
(define-fun x1167 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> x498 x3049)) (x3767 x3049) (x4112 x3049)))
(define-fun x2722 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 x498)) (x1167 x3049) (x3281 x3049)))
(define-fun x3769 ((x3049 Int)) Int (ite (= x3049 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x2274 x3049)))
(define-fun x2686 ((x3049 Int)) Int (ite (= 132 x3049) x355 (x3769 x3049)))
(define-fun x3136 ((x3049 Int)) Int (ite (= 164 x3049) 128 (x2686 x3049)))
(define-fun x715 ((x3049 Int)) Int (ite (= x3049 260) x315 (x3136 x3049)))
(define-fun x831 ((x3049 Int)) Int (ite (= x3049 292) x3535 (x715 x3049)))
(define-fun x4138 ((x3049 Int)) Int (ite (= 292 x3049) x2142 (x715 x3049)))
(define-fun x3708 ((x3049 Int)) Int (ite x2561 (ite x3191 (x715 x3049) (x831 x3049)) (x4138 x3049)))
(define-fun x4003 ((x3049 Int)) Int (ite (= x3049 196) x3406 (x3708 x3049)))
(define-fun x1096 ((x3049 Int)) Int (ite (= x3049 228) x706 (x4003 x3049)))
(define-fun x1672 ((x3049 Int)) Int (ite (= x3049 x880) x3364 (x1096 x3049)))
(define-fun x2826 ((x3049 Int)) Int (ite (= x2051 x3049) x1719 (x1672 x3049)))
(define-fun x2373 ((x3049 Int)) Int (ite (= x3049 x2051) x3565 (x1672 x3049)))
(define-fun x2777 ((x3049 Int)) Int (ite x2842 (ite x1680 (x1672 x3049) (x2826 x3049)) (x2373 x3049)))
(define-fun x2656 ((x3049 Int)) Int (ite (and (>= x3049 164) (> x2939 x3049)) (x2777 (+ x3049 128)) (x2067 x3049)))
(define-fun x242 ((x3049 Int)) Int (ite (and (> (+ 128 x1963) x3049) (<= 128 x3049)) (x2656 (+ 36 x3049)) (x1361 x3049)))
(define-fun x4173 ((x3049 Int)) Int (ite (= x1316 x3049) 0 (x242 x3049)))
(define-fun x1250 ((x3049 Int)) Int (ite (= x3049 x4000) x4050 (x4173 x3049)))
(define-fun x4479 ((x3049 Int)) Int (ite (and (< x3049 (+ 128 x2451)) (<= 128 x3049)) (x2656 (- (+ x3049 x2197) 128)) (x1250 x3049)))
(define-fun x1625 ((x3049 Int)) Int (ite (= x3217 x3049) 0 (x4479 x3049)))
(define-fun x981 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1625 x3049)))
(define-fun x3704 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x981 x3049)))
(define-fun x2233 ((x3049 Int)) Int (ite (= x3049 164) 33 (x3704 x3049)))
(define-fun x1562 ((x3049 Int)) Int (ite (= x3049 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x2233 x3049)))
(define-fun x2938 ((x3049 Int)) Int (ite (= 228 x3049) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x1562 x3049)))
(define-fun x145 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 132)) (x2938 (+ x3049 128)) (x200 x3049)))
(define-fun x522 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1250 x3049)))
(define-fun x2385 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x522 x3049)))
(define-fun x188 ((x3049 Int)) Int (ite (= 164 x3049) 35 (x2385 x3049)))
(define-fun x2448 ((x3049 Int)) Int (ite (= 196 x3049) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x188 x3049)))
(define-fun x968 ((x3049 Int)) Int (ite (= x3049 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x2448 x3049)))
(define-fun x269 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 132 x3049)) (x968 (+ 128 x3049)) (x200 x3049)))
(define-fun x2074 ((x3049 Int)) Int (ite x1923 (x200 x3049) (ite x3210 (x200 x3049) (ite x915 (x200 x3049) (ite x1522 (x200 x3049) (ite x322 (x145 x3049) (x269 x3049)))))))
(define-fun x2732 ((x3049 Int)) Int 0)
(define-fun x4135 ((x3049 Int)) Int (ite x609 (x2074 x3049) (x2732 x3049)))
(define-fun x3967 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 x3440)) (x4135 x3049) (x4112 x3049)))
(define-fun x798 ((x3049 Int)) Int (ite (and (> x3440 x3049) (>= x3049 0)) (x3967 x3049) (x3281 x3049)))
(define-fun x1965 ((x3049 Int)) Int (ite (= x3049 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x1103 x3049)))
(define-fun x3991 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 4 x3049)) (x1965 (+ 128 x3049)) (x3602 x3049)))
(define-fun x1731 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1103 x3049)))
(define-fun x3165 ((x3049 Int)) Int (ite (= x3049 132) 32 (x1731 x3049)))
(define-fun x4313 ((x3049 Int)) Int (ite (= 164 x3049) 12 (x3165 x3049)))
(define-fun x4423 ((x3049 Int)) Int (ite (= 196 x3049) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x4313 x3049)))
(define-fun x1217 ((x3049 Int)) Int (ite (and (< x3049 100) (>= x3049 0)) (x4423 (+ x3049 128)) (x3602 x3049)))
(define-fun x2857 ((x3049 Int)) Int (ite x3441 (x3991 x3049) (x1217 x3049)))
(define-fun x4311 ((x3049 Int)) Int (ite x3690 (x2857 x3049) (x3602 x3049)))
(define-fun x4301 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 x3082)) (x4311 x3049) (x4112 x3049)))
(define-fun x4326 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 x3082)) (x4301 x3049) (x3281 x3049)))
(define-fun x2719 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x4112 x3049)))
(define-fun x434 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 36)) (x2719 x3049) (x3281 x3049)))
(define-fun x3407 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x4112 x3049)))
(define-fun x4553 ((x3049 Int)) Int (ite (and (< x3049 36) (>= x3049 0)) (x3407 x3049) (x3281 x3049)))
(define-fun x4336 ((x3049 Int)) Int (ite x2401 (x382 x3049) (ite x2979 (x4150 x3049) (ite x4382 (x2058 x3049) (ite x3000 (x2692 x3049) (ite x386 (x3851 x3049) (ite x2122 (x4439 x3049) (ite x602 (x4203 x3049) (ite x3335 (x1715 x3049) (ite x4177 (x3281 x3049) (ite x1492 (x4283 x3049) (ite x4341 (x3281 x3049) (ite x4495 (x2722 x3049) (ite x1476 (x3281 x3049) (ite x2661 (x798 x3049) (ite x648 (x3281 x3049) (ite x1538 (x3281 x3049) (ite x3885 (x3281 x3049) (ite x224 (x3281 x3049) (ite x591 (x3281 x3049) (ite x671 (x4326 x3049) (ite x262 (x3281 x3049) (ite x4566 (x434 x3049) (ite x2014 (x4553 x3049) (x3281 x3049)))))))))))))))))))))))))
(define-fun x3804 ((x3049 Int)) Int (ite (= 0 x3049) x1674 (x3281 x3049)))
(define-fun x2895 ((x3049 Int)) Int (ite x618 (x4336 x3049) (x3804 x3049)))
(define-fun x562 ((x3049 Int)) Int (ite x3146 (x3746 x3049) (x2895 x3049)))
(define-fun x4400 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> x1921 x3049)) (x562 x3049) (x4156 x3049)))
(define-fun x593 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 x1921)) (x4400 x3049) (x2596 x3049)))
(define-fun x749 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x734 x3049)))
(define-fun x2989 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 36)) (x749 x3049) (x4201 x3049)))
(define-fun x2454 ((x3049 Int)) Int (ite x2659 (x2989 x3049) (x4201 x3049)))
(define-fun x137 ((x3049 Int)) Int (ite x3072 (x2454 x3049) (x4201 x3049)))
(define-fun x931 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2985 x3049)))
(define-fun x3649 ((x3049 Int)) Int (ite (= x3049 132) 32 (x931 x3049)))
(define-fun x3473 ((x3049 Int)) Int (ite (= x3049 164) 10 (x3649 x3049)))
(define-fun x1588 ((x3049 Int)) Int (ite (= x3049 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x3473 x3049)))
(define-fun x1810 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 100)) (x1588 (+ 128 x3049)) (x1420 x3049)))
(define-fun x2380 ((x3049 Int)) Int (ite (and (> 100 x3049) (<= 0 x3049)) (x1810 x3049) (x3850 x3049)))
(define-fun x887 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> 100 x3049)) (x2380 x3049) (x4201 x3049)))
(define-fun x91 ((x3049 Int)) Int (ite (= x3049 4) 17 (x3850 x3049)))
(define-fun x2839 ((x3049 Int)) Int (ite (and (> 36 x3049) (<= 0 x3049)) (x91 x3049) (x4201 x3049)))
(define-fun x1939 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x3850 x3049)))
(define-fun x4001 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 36 x3049)) (x1939 x3049) (x4201 x3049)))
(define-fun x2369 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x3850 x3049)))
(define-fun x3321 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 36 x3049)) (x2369 x3049) (x4201 x3049)))
(define-fun x3444 ((x3049 Int)) Int (ite (= x3049 4) 34 (x3850 x3049)))
(define-fun x3614 ((x3049 Int)) Int (ite (and (< x3049 36) (<= 0 x3049)) (x3444 x3049) (x4201 x3049)))
(define-fun x4085 ((x3049 Int)) Int (ite (= 4 x3049) 34 (x3850 x3049)))
(define-fun x1422 ((x3049 Int)) Int (ite (and (< x3049 36) (<= 0 x3049)) (x4085 x3049) (x4201 x3049)))
(define-fun x3371 ((x3049 Int)) Int (ite (= x3049 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x2624 x3049)))
(define-fun x669 ((x3049 Int)) Int (ite (and (< x3049 4) (>= x3049 0)) (x3371 (+ x3049 128)) (x4132 x3049)))
(define-fun x1002 ((x3049 Int)) Int (ite (= x3049 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2624 x3049)))
(define-fun x52 ((x3049 Int)) Int (ite (= x3049 132) 32 (x1002 x3049)))
(define-fun x3672 ((x3049 Int)) Int (ite (= 164 x3049) 12 (x52 x3049)))
(define-fun x1274 ((x3049 Int)) Int (ite (= x3049 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x3672 x3049)))
(define-fun x4152 ((x3049 Int)) Int (ite (and (< x3049 100) (<= 0 x3049)) (x1274 (+ x3049 128)) (x4132 x3049)))
(define-fun x1980 ((x3049 Int)) Int (ite x3325 (x669 x3049) (x4152 x3049)))
(define-fun x143 ((x3049 Int)) Int (ite x825 (x1980 x3049) (x4132 x3049)))
(define-fun x2724 ((x3049 Int)) Int (ite (and (>= x3049 0) (> x1517 x3049)) (x143 x3049) (x3850 x3049)))
(define-fun x1590 ((x3049 Int)) Int (ite (and (< x3049 x1517) (<= 0 x3049)) (x2724 x3049) (x4201 x3049)))
(define-fun x1629 ((x3049 Int)) Int (ite (= x765 x3049) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x3753 x3049)))
(define-fun x1707 ((x3049 Int)) Int (ite (and (>= x3049 0) (> 4 x3049)) (x1629 (+ x3049 x765)) (x1498 x3049)))
(define-fun x1068 ((x3049 Int)) Int (ite (= x3049 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3753 x3049)))
(define-fun x3551 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x1068 x3049)))
(define-fun x482 ((x3049 Int)) Int (ite (= x3049 164) 12 (x3551 x3049)))
(define-fun x4387 ((x3049 Int)) Int (ite (= x3049 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x482 x3049)))
(define-fun x2664 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 100)) (x4387 (+ x3049 128)) (x1498 x3049)))
(define-fun x1955 ((x3049 Int)) Int (ite x989 (x1707 x3049) (x2664 x3049)))
(define-fun x2003 ((x3049 Int)) Int (ite x2755 (x1955 x3049) (x1498 x3049)))
(define-fun x3096 ((x3049 Int)) Int (ite (and (< x3049 x1906) (>= x3049 0)) (x2003 x3049) (x3850 x3049)))
(define-fun x3205 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 x1906)) (x3096 x3049) (x4201 x3049)))
(define-fun x3960 ((x3049 Int)) Int (ite (= x3049 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2586 x3049)))
(define-fun x1429 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x3960 x3049)))
(define-fun x2831 ((x3049 Int)) Int (ite (= x3049 164) 10 (x1429 x3049)))
(define-fun x4164 ((x3049 Int)) Int (ite (= x3049 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x2831 x3049)))
(define-fun x2507 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 100)) (x4164 (+ x3049 128)) (x952 x3049)))
(define-fun x1040 ((x3049 Int)) Int 0)
(define-fun x2470 ((x3049 Int)) Int (ite x557 (x2507 x3049) (x1040 x3049)))
(define-fun x2440 ((x3049 Int)) Int (ite (and (> x57 x3049) (>= x3049 0)) (x2470 x3049) (x3850 x3049)))
(define-fun x2967 ((x3049 Int)) Int (ite (and (>= x3049 0) (> x57 x3049)) (x2440 x3049) (x4201 x3049)))
(define-fun x3721 ((x3049 Int)) Int (ite (= x3049 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x4013 x3049)))
(define-fun x3005 ((x3049 Int)) Int (ite (= x3049 132) x1521 (x3721 x3049)))
(define-fun x1315 ((x3049 Int)) Int (ite (= x3049 164) 128 (x3005 x3049)))
(define-fun x2642 ((x3049 Int)) Int (ite (= 260 x3049) x2745 (x1315 x3049)))
(define-fun x4280 ((x3049 Int)) Int (ite (= x3049 292) x329 (x2642 x3049)))
(define-fun x4445 ((x3049 Int)) Int (ite (= 292 x3049) x2812 (x2642 x3049)))
(define-fun x1295 ((x3049 Int)) Int (ite x711 (ite x1083 (x2642 x3049) (x4280 x3049)) (x4445 x3049)))
(define-fun x2638 ((x3049 Int)) Int (ite (= 196 x3049) x2150 (x1295 x3049)))
(define-fun x1750 ((x3049 Int)) Int (ite (= 228 x3049) x3961 (x2638 x3049)))
(define-fun x1577 ((x3049 Int)) Int (ite (= x3265 x3049) x3074 (x1750 x3049)))
(define-fun x938 ((x3049 Int)) Int (ite (= x3564 x3049) x3780 (x1577 x3049)))
(define-fun x3536 ((x3049 Int)) Int (ite (= x3049 x3564) x41 (x1577 x3049)))
(define-fun x2508 ((x3049 Int)) Int (ite x58 (ite x426 (x1577 x3049) (x938 x3049)) (x3536 x3049)))
(define-fun x3008 ((x3049 Int)) Int (ite (and (> x4204 x3049) (<= 164 x3049)) (x2508 (+ x3049 128)) (x1030 x3049)))
(define-fun x4331 ((x3049 Int)) Int (ite (and (> (+ x1108 128) x3049) (<= 128 x3049)) (x3008 (+ 36 x3049)) (x471 x3049)))
(define-fun x1583 ((x3049 Int)) Int (ite (= x3062 x3049) 0 (x4331 x3049)))
(define-fun x1246 ((x3049 Int)) Int (ite (= x3049 x2031) x2063 (x1583 x3049)))
(define-fun x3494 ((x3049 Int)) Int (ite (and (> (+ x1242 128) x3049) (<= 128 x3049)) (x3008 (- (+ x3049 x4471) 128)) (x1246 x3049)))
(define-fun x1862 ((x3049 Int)) Int (ite (= x1487 x3049) 0 (x3494 x3049)))
(define-fun x1970 ((x3049 Int)) Int (ite (= x3049 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1862 x3049)))
(define-fun x1343 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x1970 x3049)))
(define-fun x3835 ((x3049 Int)) Int (ite (= 164 x3049) 33 (x1343 x3049)))
(define-fun x2255 ((x3049 Int)) Int (ite (= x3049 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x3835 x3049)))
(define-fun x1958 ((x3049 Int)) Int (ite (= x3049 228) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x2255 x3049)))
(define-fun x4343 ((x3049 Int)) Int (ite (and (< x3049 132) (>= x3049 0)) (x1958 (+ 128 x3049)) (x3112 x3049)))
(define-fun x131 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1246 x3049)))
(define-fun x202 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x131 x3049)))
(define-fun x3310 ((x3049 Int)) Int (ite (= x3049 164) 35 (x202 x3049)))
(define-fun x2615 ((x3049 Int)) Int (ite (= x3049 196) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x3310 x3049)))
(define-fun x78 ((x3049 Int)) Int (ite (= x3049 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x2615 x3049)))
(define-fun x1035 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 132)) (x78 (+ 128 x3049)) (x3112 x3049)))
(define-fun x940 ((x3049 Int)) Int (ite x585 (x3112 x3049) (ite x4051 (x3112 x3049) (ite x1824 (x3112 x3049) (ite x4117 (x3112 x3049) (ite x651 (x4343 x3049) (x1035 x3049)))))))
(define-fun x3428 ((x3049 Int)) Int 0)
(define-fun x3093 ((x3049 Int)) Int (ite x469 (x940 x3049) (x3428 x3049)))
(define-fun x2587 ((x3049 Int)) Int (ite (and (>= x3049 0) (> x4297 x3049)) (x3093 x3049) (x3850 x3049)))
(define-fun x1782 ((x3049 Int)) Int (ite (and (< x3049 x4297) (<= 0 x3049)) (x2587 x3049) (x4201 x3049)))
(define-fun x3232 ((x3049 Int)) Int (ite (= x3049 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x2908 x3049)))
(define-fun x1320 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> 4 x3049)) (x3232 (+ x3049 128)) (x440 x3049)))
(define-fun x3243 ((x3049 Int)) Int (ite (= x3049 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2908 x3049)))
(define-fun x3837 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x3243 x3049)))
(define-fun x2657 ((x3049 Int)) Int (ite (= x3049 164) 12 (x3837 x3049)))
(define-fun x2389 ((x3049 Int)) Int (ite (= 196 x3049) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2657 x3049)))
(define-fun x1374 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 100)) (x2389 (+ 128 x3049)) (x440 x3049)))
(define-fun x2398 ((x3049 Int)) Int (ite x3509 (x1320 x3049) (x1374 x3049)))
(define-fun x103 ((x3049 Int)) Int (ite x4367 (x2398 x3049) (x440 x3049)))
(define-fun x4005 ((x3049 Int)) Int (ite (and (>= x3049 0) (> x575 x3049)) (x103 x3049) (x3850 x3049)))
(define-fun x180 ((x3049 Int)) Int (ite (and (> x575 x3049) (>= x3049 0)) (x4005 x3049) (x4201 x3049)))
(define-fun x2882 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x3850 x3049)))
(define-fun x4047 ((x3049 Int)) Int (ite (and (<= 0 x3049) (> 36 x3049)) (x2882 x3049) (x4201 x3049)))
(define-fun x4295 ((x3049 Int)) Int (ite (= 4 x3049) 17 (x3850 x3049)))
(define-fun x4176 ((x3049 Int)) Int (ite (and (> 36 x3049) (<= 0 x3049)) (x4295 x3049) (x4201 x3049)))
(define-fun x2246 ((x3049 Int)) Int (ite x3461 (x887 x3049) (ite x984 (x2839 x3049) (ite x933 (x4001 x3049) (ite x289 (x3321 x3049) (ite x2928 (x3614 x3049) (ite x1697 (x1422 x3049) (ite x5 (x4201 x3049) (ite x303 (x1590 x3049) (ite x4086 (x4201 x3049) (ite x1460 (x3205 x3049) (ite x4075 (x4201 x3049) (ite x2046 (x2967 x3049) (ite x4028 (x4201 x3049) (ite x2431 (x1782 x3049) (ite x1259 (x4201 x3049) (ite x485 (x4201 x3049) (ite x3373 (x4201 x3049) (ite x390 (x4201 x3049) (ite x3355 (x4201 x3049) (ite x3759 (x180 x3049) (ite x151 (x4201 x3049) (ite x3889 (x4047 x3049) (ite x4100 (x4176 x3049) (x4201 x3049)))))))))))))))))))))))))
(define-fun x2966 ((x3049 Int)) Int (ite x500 (x2246 x3049) (x4201 x3049)))
(define-fun x2622 ((x3049 Int)) Int (ite x3674 (x137 x3049) (x2966 x3049)))
(define-fun x664 ((x3049 Int)) Int 0)
(define-fun x4036 ((x3049 Int)) Int (ite x3608 (x2622 x3049) (ite x3121 (x664 x3049) (x2622 x3049))))
(define-fun x3267 ((x3049 Int)) Int (ite (and (< x3049 x1999) (<= 0 x3049)) (x4036 x3049) (x4156 x3049)))
(define-fun x1371 ((x3049 Int)) Int (ite (and (>= x3049 0) (< x3049 x1999)) (x3267 x3049) (x2596 x3049)))
(define-fun x3653 ((x3049 Int)) Int (ite (= 128 x3049) 18563399957492015340621713183830377045030061062230639968016343144629396307968 (x4156 x3049)))
(define-fun x2404 ((x3049 Int)) Int (ite (and (< x3049 4) (<= 0 x3049)) (x3653 (+ x3049 128)) (x2596 x3049)))
(define-fun x46 ((x3049 Int)) Int (ite (= x3049 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x4156 x3049)))
(define-fun x1801 ((x3049 Int)) Int (ite (and (> 4 x3049) (<= 0 x3049)) (x46 (+ x3049 128)) (x2596 x3049)))
(define-fun x1028 ((x3049 Int)) Int (ite (= x3049 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4156 x3049)))
(define-fun x3903 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x1028 x3049)))
(define-fun x796 ((x3049 Int)) Int (ite (= 164 x3049) 10 (x3903 x3049)))
(define-fun x1979 ((x3049 Int)) Int (ite (= 196 x3049) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x796 x3049)))
(define-fun x3554 ((x3049 Int)) Int (ite (and (> 100 x3049) (<= 0 x3049)) (x1979 (+ x3049 128)) (x2596 x3049)))
(define-fun x2521 ((x3049 Int)) Int (ite x3553 (x2596 x3049) (ite x1370 (x1009 x3049) (ite x2345 (x418 x3049) (ite x3683 (x593 x3049) (ite x2276 (x1371 x3049) (ite x1767 (x2404 x3049) (ite x138 (x1801 x3049) (x3554 x3049)))))))))
(define-fun x1567 ((x3049 Int)) Int (ite (= x3049 0) x793 (x2596 x3049)))
(define-fun x4235 ((x3049 Int)) Int (ite x2962 (x2521 x3049) (x1567 x3049)))
(define-fun x3139 ((x3049 Int)) Int (x3513 x3049))
(define-fun x3293 ((x3049 Int)) Int (ite (= 128 x3049) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2956 x3049)))
(define-fun x2715 ((x3049 Int)) Int (ite (= 132 x3049) 32 (x3293 x3049)))
(define-fun x4058 ((x3049 Int)) Int (ite (= x3049 164) 38 (x2715 x3049)))
(define-fun x868 ((x3049 Int)) Int (ite (= x3049 196) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x4058 x3049)))
(define-fun x2604 ((x3049 Int)) Int (ite (= 228 x3049) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x868 x3049)))
(define-fun x1087 ((x3049 Int)) Int (ite (and (<= 0 x3049) (< x3049 132)) (x2604 (+ 128 x3049)) (x3222 x3049)))
(define-fun x1833 ((x3049 Int)) Int (ite x4482 (x3222 x3049) (ite x4214 (x3222 x3049) (ite x3226 (x3222 x3049) (ite x2275 (x3222 x3049) (ite x757 (x1087 x3049) (x3222 x3049)))))))
(define-fun x1751 ((x3049 Int)) Int (ite x115 (x1833 x3049) (x3222 x3049)))
(define-fun x2228 ((x3049 Int)) Int (ite (= 192 x3049) x2048 (x2263 x3049)))
(define-fun x3936 ((x3049 Int)) Int (ite x2717 (x4590 x3049) (ite x4503 (ite x2033 (x2263 x3049) (x2228 x3049)) (x2386 x3049))))
(define-fun x301 ((x3049 Int)) Int (ite (and (<= x3342 x3049) (> (+ x3342 x3859) x3049)) (x4345 (- (+ x2297 x3049) x3342)) (x3936 x3049)))
(define-fun x1249 ((x3049 Int)) Int (ite (= x3049 x3394) 0 (x301 x3049)))
(define-fun x421 ((x3049 Int)) Int (ite x3223 (x1249 x3049) (x3936 x3049)))
(define-fun x620 ((x3049 Int)) Int (ite (= x3049 x3342) x3859 (x421 x3049)))
(define-fun x4258 ((x3049 Int)) Int (ite (and (>= x3049 x3299) (> (+ x3299 x3859) x3049)) (x4345 (- (+ x2297 x3049) x3299)) (x620 x3049)))
(define-fun x4582 ((x3049 Int)) Int (ite (= x1559 x3049) 0 (x4258 x3049)))
(define-fun x1954 ((x3049 Int)) Int (ite (= x1386 x3049) x2000 (x4582 x3049)))
(define-fun x1120 ((x3049 Int)) Int (ite (and (>= x3049 x2729) (< x3049 (+ x2729 x2000))) (x4345 (- (+ x3049 x3410) x2729)) (x1954 x3049)))
(define-fun x701 ((x3049 Int)) Int (ite (= x3581 x3049) 0 (x1120 x3049)))
(define-fun x123 ((x3049 Int)) Int (ite (= x2015 x3049) x2522 (x701 x3049)))
(define-fun x129 ((x3049 Int)) Int (ite (= x3049 x3451) 128 (x123 x3049)))
(define-fun x2803 ((x3049 Int)) Int (ite (= x4306 x3049) x3524 (x129 x3049)))
(define-fun x2179 ((x3049 Int)) Int (ite (= x949 x3049) x1798 (x2803 x3049)))
(define-fun x1656 ((x3049 Int)) Int (ite (= x1463 x3049) x3954 (x2179 x3049)))
(define-fun x3338 ((x3049 Int)) Int (ite (= x3049 x903) x1336 (x1656 x3049)))
(define-fun x537 ((x3049 Int)) Int (ite (= x3049 x1762) 1 (x2459 x3049)))
(define-fun x3741 ((x3049 Int)) Int (ite (= 128 x3049) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x3496 x3049)))
(define-fun x3414 ((x3049 Int)) Int (ite (= 132 x3049) x1047 (x3741 x3049)))
(define-fun x3648 ((x3049 Int)) Int (ite (= x3049 128) x3503 (x3414 x3049)))
(define-fun x4319 ((x3049 Int)) Int (ite (= x3049 128) x2501 (x3414 x3049)))
(define-fun x3443 ((x3049 Int)) Int (ite x3280 (x2069 x3049) (x4419 x3049)))
(define-fun x4188 ((x3049 Int)) Int (ite x3884 (x4419 x3049) (ite x995 (x3443 x3049) (ite x582 (x3443 x3049) (x4419 x3049)))))
(define-fun x3070 ((x3049 Int)) Int (ite x1857 (x4419 x3049) (ite x2755 (x4419 x3049) (x4188 x3049))))
(define-fun x4109 ((x3049 Int)) Int (ite x500 (x4419 x3049) (ite x3078 (x3070 x3049) (x4419 x3049))))
(define-fun x2626 ((x3049 Int)) Int (ite x3608 (ite x3674 (x4419 x3049) (x4109 x3049)) (ite x3121 (x4419 x3049) (ite x3674 (x4419 x3049) (x4109 x3049)))))
(define-fun x1012 ((x3049 Int)) Int (ite x3280 (x4011 x3049) (x4137 x3049)))
(define-fun x313 ((x3049 Int)) Int (ite x3884 (x4137 x3049) (ite x995 (x1012 x3049) (ite x582 (x1012 x3049) (x4137 x3049)))))
(define-fun x3502 ((x3049 Int)) Int (ite x1857 (x4137 x3049) (ite x2755 (x4137 x3049) (x313 x3049))))
(define-fun x720 ((x3049 Int)) Int (ite x500 (x4137 x3049) (ite x3078 (x3502 x3049) (x4137 x3049))))
(define-fun x2218 ((x3049 Int)) Int (ite x3608 (ite x3674 (x4137 x3049) (x720 x3049)) (ite x3121 (x4137 x3049) (ite x3674 (x4137 x3049) (x720 x3049)))))
(define-fun x3350 ((x3049 Int)) Int (ite (= x3049 x615) x1864 (x2111 x3049)))
(define-fun x4539 ((x3049 Int)) Int (ite x3072 (x2111 x3049) (x3350 x3049)))
(define-fun x3170 ((x3049 Int)) Int (ite x3280 (x1584 x3049) (x2111 x3049)))
(define-fun x3363 ((x3049 Int)) Int (ite x3884 (x2111 x3049) (ite x995 (x3170 x3049) (ite x582 (x3170 x3049) (x2111 x3049)))))
(define-fun x543 ((x3049 Int)) Int (ite x1857 (x2111 x3049) (ite x2755 (x2111 x3049) (x3363 x3049))))
(define-fun x1219 ((x3049 Int)) Int (ite x500 (x2111 x3049) (ite x3078 (x543 x3049) (x2111 x3049))))
(define-fun x1452 ((x3049 Int)) Int (ite x3608 (ite x3674 (x4539 x3049) (x1219 x3049)) (ite x3121 (x2111 x3049) (ite x3674 (x4539 x3049) (x1219 x3049)))))
(define-fun x2165 ((x3049 Int)) Int (ite x3280 (x1738 x3049) (x3125 x3049)))
(define-fun x2911 ((x3049 Int)) Int (ite x3884 (x3125 x3049) (ite x995 (x2165 x3049) (ite x582 (x2165 x3049) (x3125 x3049)))))
(define-fun x4511 ((x3049 Int)) Int (ite x1857 (x3125 x3049) (ite x2755 (x3125 x3049) (x2911 x3049))))
(define-fun x406 ((x3049 Int)) Int (ite x500 (x3125 x3049) (ite x3078 (x4511 x3049) (x3125 x3049))))
(define-fun x1330 ((x3049 Int)) Int (ite x3608 (ite x3674 (x3125 x3049) (x406 x3049)) (ite x3121 (x3125 x3049) (ite x3674 (x3125 x3049) (x406 x3049)))))
(define-fun x2154 ((x3049 Int)) Int (ite x3280 (x4020 x3049) (x3555 x3049)))
(define-fun x2117 ((x3049 Int)) Int (ite x3884 (x3555 x3049) (ite x995 (x2154 x3049) (ite x582 (x2154 x3049) (x3555 x3049)))))
(define-fun x3307 ((x3049 Int)) Int (ite x1857 (x3555 x3049) (ite x2755 (x3555 x3049) (x2117 x3049))))
(define-fun x1350 ((x3049 Int)) Int (ite x500 (x3555 x3049) (ite x3078 (x3307 x3049) (x3555 x3049))))
(define-fun x2614 ((x3049 Int)) Int (ite x3608 (ite x3674 (x3555 x3049) (x1350 x3049)) (ite x3121 (x3555 x3049) (ite x3674 (x3555 x3049) (x1350 x3049)))))
(define-fun x147 ((x3049 Int)) Int (ite x3280 (x1914 x3049) (x130 x3049)))
(define-fun x245 ((x3049 Int)) Int (ite x3884 (x130 x3049) (ite x995 (x147 x3049) (ite x582 (x147 x3049) (x130 x3049)))))
(define-fun x3507 ((x3049 Int)) Int (ite x1857 (x130 x3049) (ite x2755 (x130 x3049) (x245 x3049))))
(define-fun x4534 ((x3049 Int)) Int (ite x500 (x130 x3049) (ite x3078 (x3507 x3049) (x130 x3049))))
(define-fun x2002 ((x3049 Int)) Int (ite x3608 (ite x3674 (x130 x3049) (x4534 x3049)) (ite x3121 (x130 x3049) (ite x3674 (x130 x3049) (x4534 x3049)))))
(define-fun x377 ((x3049 Int)) Int (x2997 x3049))
(define-fun x17 ((x3049 Int)) Int (x1787 x3049))
(define-fun x858 ((x3049 Int)) Int (ite x3280 (x893 x3049) (x2484 x3049)))
(define-fun x1604 ((x3049 Int)) Int (ite x3884 (x2484 x3049) (ite x995 (x858 x3049) (ite x582 (x858 x3049) (x2484 x3049)))))
(define-fun x3379 ((x3049 Int)) Int (ite x1857 (x2484 x3049) (ite x2755 (x2484 x3049) (x1604 x3049))))
(define-fun x3083 ((x3049 Int)) Int (ite x500 (x2484 x3049) (ite x3078 (x3379 x3049) (x2484 x3049))))
(define-fun x2899 ((x3049 Int)) Int (ite x3608 (ite x3674 (x2484 x3049) (x3083 x3049)) (ite x3121 (x2484 x3049) (ite x3674 (x2484 x3049) (x3083 x3049)))))
(define-fun x2221 ((x3049 Int)) Int (ite x3280 (x2765 x3049) (x932 x3049)))
(define-fun x1943 ((x3049 Int)) Int (ite x3884 (x932 x3049) (ite x995 (x2221 x3049) (ite x582 (x2221 x3049) (x932 x3049)))))
(define-fun x4154 ((x3049 Int)) Int (ite x1857 (x932 x3049) (ite x2755 (x932 x3049) (x1943 x3049))))
(define-fun x359 ((x3049 Int)) Int (ite x500 (x932 x3049) (ite x3078 (x4154 x3049) (x932 x3049))))
(define-fun x600 ((x3049 Int)) Int (ite x3608 (ite x3674 (x932 x3049) (x359 x3049)) (ite x3121 (x932 x3049) (ite x3674 (x932 x3049) (x359 x3049)))))
(define-fun x3357 ((x3049 Int)) Int (x497 x3049))
(define-fun x4293 ((x3049 Int)) Int (x1875 x3049))
(define-fun x3655 ((x3049 Int)) Int (ite x3280 (x2491 x3049) (x3523 x3049)))
(define-fun x1195 ((x3049 Int)) Int (ite x3884 (x3523 x3049) (ite x995 (x3655 x3049) (ite x582 (x3655 x3049) (x3523 x3049)))))
(define-fun x26 ((x3049 Int)) Int (ite x1857 (x3523 x3049) (ite x2755 (x3523 x3049) (x1195 x3049))))
(define-fun x3709 ((x3049 Int)) Int (ite x500 (x3523 x3049) (ite x3078 (x26 x3049) (x3523 x3049))))
(define-fun x881 ((x3049 Int)) Int (ite x3608 (ite x3674 (x3523 x3049) (x3709 x3049)) (ite x3121 (x3523 x3049) (ite x3674 (x3523 x3049) (x3709 x3049)))))
(define-fun x536 ((x3049 Int)) Int (ite x3280 (x4497 x3049) (x2528 x3049)))
(define-fun x3906 ((x3049 Int)) Int (ite x3884 (x2528 x3049) (ite x995 (x536 x3049) (ite x582 (x536 x3049) (x2528 x3049)))))
(define-fun x1018 ((x3049 Int)) Int (ite x1857 (x2528 x3049) (ite x2755 (x2528 x3049) (x3906 x3049))))
(define-fun x3824 ((x3049 Int)) Int (ite x500 (x2528 x3049) (ite x3078 (x1018 x3049) (x2528 x3049))))
(define-fun x121 ((x3049 Int)) Int (ite x3608 (ite x3674 (x2528 x3049) (x3824 x3049)) (ite x3121 (x2528 x3049) (ite x3674 (x2528 x3049) (x3824 x3049)))))
(define-fun x4484 ((x3049 Int)) Int (ite x3280 (x1139 x3049) (x3130 x3049)))
(define-fun x1479 ((x3049 Int)) Int (ite x3884 (x3130 x3049) (ite x995 (x4484 x3049) (ite x582 (x4484 x3049) (x3130 x3049)))))
(define-fun x2532 ((x3049 Int)) Int (ite x1857 (x3130 x3049) (ite x2755 (x3130 x3049) (x1479 x3049))))
(define-fun x3698 ((x3049 Int)) Int (ite x500 (x3130 x3049) (ite x3078 (x2532 x3049) (x3130 x3049))))
(define-fun x1125 ((x3049 Int)) Int (ite x3608 (ite x3674 (x3130 x3049) (x3698 x3049)) (ite x3121 (x3130 x3049) (ite x3674 (x3130 x3049) (x3698 x3049)))))
(define-fun x3172 ((x3049 Int)) Int (x4184 x3049))
(define-fun x203 ((x3049 Int)) Int (ite x3280 (x1006 x3049) (x6 x3049)))
(define-fun x2271 ((x3049 Int)) Int (ite x3884 (x6 x3049) (ite x995 (x203 x3049) (ite x582 (x203 x3049) (x6 x3049)))))
(define-fun x1966 ((x3049 Int)) Int (ite x1857 (x6 x3049) (ite x2755 (x6 x3049) (x2271 x3049))))
(define-fun x1934 ((x3049 Int)) Int (ite x500 (x6 x3049) (ite x3078 (x1966 x3049) (x6 x3049))))
(define-fun x369 ((x3049 Int)) Int (ite x3608 (ite x3674 (x6 x3049) (x1934 x3049)) (ite x3121 (x6 x3049) (ite x3674 (x6 x3049) (x1934 x3049)))))
(define-fun x1079 ((x3049 Int)) Int (x3326 x3049))
(define-fun x3770 ((x3049 Int)) Int (x3201 x3049))
(define-fun x2983 ((x3049 Int)) Int (ite x3280 (x853 x3049) (x3189 x3049)))
(define-fun x347 ((x3049 Int)) Int (ite x3884 (x3189 x3049) (ite x995 (x2983 x3049) (ite x582 (x2983 x3049) (x3189 x3049)))))
(define-fun x3666 ((x3049 Int)) Int (ite x1857 (x3189 x3049) (ite x2755 (x3189 x3049) (x347 x3049))))
(define-fun x599 ((x3049 Int)) Int (ite x500 (x3189 x3049) (ite x3078 (x3666 x3049) (x3189 x3049))))
(define-fun x3976 ((x3049 Int)) Int (ite x3608 (ite x3674 (x3189 x3049) (x599 x3049)) (ite x3121 (x3189 x3049) (ite x3674 (x3189 x3049) (x599 x3049)))))
(define-fun x3131 ((x3049 Int)) Int (x2550 x3049))
(define-fun x1507 ((x3049 Int)) Int (ite x3280 (x2143 x3049) (x2808 x3049)))
(define-fun x1572 ((x3049 Int)) Int (ite x3884 (x2808 x3049) (ite x995 (x1507 x3049) (ite x582 (x1507 x3049) (x2808 x3049)))))
(define-fun x2487 ((x3049 Int)) Int (ite x1857 (x2808 x3049) (ite x2755 (x2808 x3049) (x1572 x3049))))
(define-fun x3184 ((x3049 Int)) Int (ite x500 (x2808 x3049) (ite x3078 (x2487 x3049) (x2808 x3049))))
(define-fun x1673 ((x3049 Int)) Int (ite x3608 (ite x3674 (x2808 x3049) (x3184 x3049)) (ite x3121 (x2808 x3049) (ite x3674 (x2808 x3049) (x3184 x3049)))))
(define-fun x3288 ((x3049 Int)) Int (x537 x3049))
(define-fun x4232 ((x3049 Int)) Int (ite (= x3049 x2625) x3392 (x3667 x3049)))
(define-fun x509 ((x3049 Int)) Int (ite (= x2134 x3049) x28 (x4232 x3049)))
(define-fun x3532 ((x3049 Int)) Int (ite (= x3049 x2625) x2007 (x509 x3049)))
(define-fun x263 ((x3049 Int)) Int (ite (= x954 x3049) x4048 (x3532 x3049)))
(define-fun x1089 ((x3049 Int)) Int (ite x3280 (x1161 x3049) (x263 x3049)))
(define-fun x913 ((x3049 Int)) Int (ite (= x3049 x954) x42 (x1089 x3049)))
(define-fun x1461 ((x3049 Int)) Int (ite (= x2625 x3049) x971 (x913 x3049)))
(define-fun x250 ((x3049 Int)) Int (ite x3674 (x509 x3049) (ite x500 (x509 x3049) (ite x3078 (ite x1857 (x509 x3049) (ite x2755 (x509 x3049) (ite x3884 (x509 x3049) (ite x995 (x1089 x3049) (ite x582 (x1461 x3049) (x509 x3049)))))) (x509 x3049)))))
(define-fun x920 ((x3049 Int)) Int (ite (= x3049 x2134) x1317 (x250 x3049)))
(define-fun x153 ((x3049 Int)) Int (ite (= x2625 x3049) x2919 (x920 x3049)))
(define-fun x1753 ((x3049 Int)) Int (ite x3608 (x250 x3049) (ite x3121 (x3667 x3049) (x153 x3049))))
(define-fun x4358 ((x3049 Int)) Int (x3513 x3049))
(define-fun x2517 ((x3049 Int)) Int (ite x4078 (x3648 x3049) (ite x3052 (x3414 x3049) (x4319 x3049))))
(define-fun x3264 ((x3049 Int)) Int (ite (= 160 x3049) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x2517 x3049)))
(define-fun x247 ((x3049 Int)) Int (ite (= x3049 164) x2625 (x3264 x3049)))
(define-fun x3161 ((x3049 Int)) Int (ite (= x3049 160) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x247 x3049)))
(define-fun x3430 ((x3049 Int)) Int (ite (= x3049 164) x1505 (x3161 x3049)))
(define-fun x4074 ((x3049 Int)) Int (ite (= x3049 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x2274 x3049)))
(define-fun x345 ((x3049 Int)) Int (ite (= x3049 132) x4542 (x4074 x3049)))
(define-fun x3515 ((x3049 Int)) Int (ite (= x3049 164) x3225 (x345 x3049)))
(define-fun x2036 ((x3049 Int)) Int (ite (= x3049 196) x2196 (x3515 x3049)))
(define-fun x524 ((x3049 Int)) Int (ite (= 228 x3049) x2721 (x2036 x3049)))
(define-fun x1907 ((x3049 Int)) Int (ite (= x3049 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2274 x3049)))
(define-fun x4305 ((x3049 Int)) Int (ite (= 132 x3049) x4026 (x1907 x3049)))
(define-fun x3868 ((x3049 Int)) Int (ite (= 164 x3049) x1285 (x4305 x3049)))
(define-fun x926 ((x3049 Int)) Int 0)
(define-fun x3959 ((x3049 Int)) Int (ite (= 128 x3049) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2274 x3049)))
(define-fun x2602 ((x3049 Int)) Int (ite (= 132 x3049) x1504 (x3959 x3049)))
(define-fun x3590 ((x3049 Int)) Int (ite (= x3049 164) x1098 (x2602 x3049)))
(define-fun x1641 ((x3049 Int)) Int (ite (= 196 x3049) x1306 (x3590 x3049)))
(define-fun x3328 ((x3049 Int)) Int (ite (= x4335 x3049) x1391 (x1753 x3049)))
(define-fun x3847 ((x3049 Int)) Int (ite (= x3049 x4585) x3729 (x3328 x3049)))
(define-fun x3236 ((x3049 Int)) Int (ite (= x4585 x3049) x1844 (x3847 x3049)))
(define-fun x1393 ((x3049 Int)) Int (ite (= x3049 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2274 x3049)))
(define-fun x1065 ((x3049 Int)) Int (ite (= 132 x3049) x2499 (x1393 x3049)))
(define-fun x3212 ((x3049 Int)) Int (ite (= x2625 x3049) x4372 (x1753 x3049)))
(define-fun x1095 ((x3049 Int)) Int (ite (= x2499 x3049) x2981 (x3212 x3049)))
(define-fun x4338 ((x3049 Int)) Int 0)
(define-fun x2455 ((x3049 Int)) Int (ite (= x3049 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2274 x3049)))
(define-fun x3752 ((x3049 Int)) Int (ite (= 132 x3049) x3921 (x2455 x3049)))
(define-fun x1905 ((x3049 Int)) Int (ite (and (> 192 x3049) (<= 160 x3049)) (x562 (- x3049 160)) (x777 x3049)))
(define-fun x2148 ((x3049 Int)) Int (ite x3146 (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))))) (ite x618 (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))))) (ite x2641 (ite x3417 (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))))) (ite x1962 (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))))) (ite x438 (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))))) (ite x3269 (ite x816 (x2568 x3049) (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049))))))) (ite x699 (ite x816 (x2568 x3049) (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049))))))) (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049))))))))))) (ite x3608 (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049)))) (ite x3121 (x3912 x3049) (ite x3674 (x3912 x3049) (ite x500 (x3912 x3049) (ite x3078 (ite x1857 (x3912 x3049) (ite x2755 (x3912 x3049) (ite x3884 (x3912 x3049) (ite x995 (ite x3280 (x2113 x3049) (x3912 x3049)) (ite x582 (ite x3280 (x2113 x3049) (x3912 x3049)) (x3912 x3049)))))) (x3912 x3049))))))))))
(define-fun x3511 ((x3049 Int)) Int (ite (= x3129 x3049) 0 (x537 x3049)))
(define-fun x4470 ((x3049 Int)) Int (ite (= x268 x3049) 1 (x3326 x3049)))
(define-fun x2726 ((x3049 Int)) Int (ite (= x3049 x793) 1 (x2148 x3049)))
(define-fun x1373 ((x3049 Int)) Int (ite (and (<= x2762 x3049) (> (+ 32 x2762) x3049)) (x4235 (- x3049 x2762)) (x1110 x3049)))
(define-fun x3927 ((x3049 Int)) Int (ite (= x1180 x3049) x799 (x3338 x3049)))
(define-fun x4265 ((x3049 Int)) Int (ite x2025 (x3338 x3049) (ite x1272 (x1656 x3049) (ite x375 (x2179 x3049) (ite x1831 (x2803 x3049) (x3927 x3049))))))
(define-fun x4454 ((x3049 Int)) Int (ite (= x4323 x3049) 0 (x4265 x3049)))
(define-fun x3016 ((x3049 Int)) Int (ite (= x76 x3049) x2291 (x4454 x3049)))
(define-fun x2571 ((x3049 Int)) Int (ite (= x3049 x3843) x2406 (x3016 x3049)))
(define-fun x412 ((x3049 Int)) Int (ite (= x3049 x681) x4256 (x2571 x3049)))
(define-fun x2205 ((x3049 Int)) Int (ite (= x3049 x1267) x3061 (x412 x3049)))
(define-fun x2049 ((x3049 Int)) Int (ite (= x3049 x2017) x3686 (x2205 x3049)))
(define-fun x35 ((x3049 Int)) Int (ite (= x3049 x2411) x2552 (x2049 x3049)))
(define-fun x3117 ((x3049 Int)) Int (ite (= x3049 x2403) x1318 (x35 x3049)))
(define-fun x1468 ((x3049 Int)) Int (ite x3492 (x35 x3049) (ite x4218 (x2049 x3049) (ite x4172 (x2205 x3049) (ite x1042 (x412 x3049) (x3117 x3049))))))
(define-fun x221 ((x3049 Int)) Int (ite (= x4340 x3049) 0 (x1468 x3049)))
(define-fun x3793 ((x3049 Int)) Int (ite (= x4389 x3049) x348 (x221 x3049)))
(define-fun x2104 ((x3049 Int)) Int (ite (= x2339 x3049) x3145 (x3793 x3049)))
(define-fun x785 ((x3049 Int)) Int (ite (= x3049 x3805) x1084 (x2104 x3049)))
(define-fun x1854 ((x3049 Int)) Int (ite (and (> (+ x1509 x1084) x3049) (<= x1509 x3049)) (x1751 (- x3049 x1509)) (x785 x3049)))
(define-fun x1419 ((x3049 Int)) Int (ite (= x69 x3049) x672 (x1854 x3049)))
(define-fun x453 ((x3049 Int)) Int (ite (= x882 x3049) x4174 (x1419 x3049)))
(define-fun x3422 ((x3049 Int)) Int (ite (= x4329 x3049) x53 (x453 x3049)))
(define-fun x140 ((x3049 Int)) Int (ite (= x797 x3049) x3867 (x3422 x3049)))
(define-fun x3065 ((x3049 Int)) Int (ite x3481 (x3422 x3049) (ite x924 (x453 x3049) (ite x2108 (x1419 x3049) (ite x1489 (x1854 x3049) (x140 x3049))))))
(define-fun x126 ((x3049 Int)) Int (ite (= x1893 x3049) 0 (x3065 x3049)))
(define-fun x1189 ((x3049 Int)) Int (ite (= x3049 x528) x2834 (x126 x3049)))
(define-fun x4443 ((x3049 Int)) Int (ite (= x69 x3049) x2522 (x1189 x3049)))
(define-fun x2520 ((x3049 Int)) Int (ite (= x1261 x3049) 160 (x4443 x3049)))
(define-fun x2580 ((x3049 Int)) Int (ite (= x2595 x3049) x1109 (x2520 x3049)))
(define-fun x2680 ((x3049 Int)) Int (ite (= x1121 x3049) x3157 (x2580 x3049)))
(define-fun x2418 ((x3049 Int)) Int (ite (= x3049 x4371) x1967 (x2680 x3049)))
(define-fun x878 ((x3049 Int)) Int (ite (= x3832 x3049) x4142 (x2418 x3049)))
(define-fun x2010 ((x3049 Int)) Int (ite (= x3049 x4266) x1072 (x878 x3049)))
(define-fun x1752 ((x3049 Int)) Int (ite x314 (x878 x3049) (ite x4352 (x2418 x3049) (ite x3795 (x2680 x3049) (ite x3715 (x2580 x3049) (x2010 x3049))))))
(define-fun x1913 ((x3049 Int)) Int (ite (= x3049 x4441) 0 (x1752 x3049)))
(define-fun x2265 ((x3049 Int)) Int (ite (= x1888 x3049) x2291 (x1913 x3049)))
(define-fun x4118 ((x3049 Int)) Int (ite (= x3049 x1565) x4522 (x2265 x3049)))
(define-fun x4030 ((x3049 Int)) Int (ite (= x3049 x1113) x297 (x4118 x3049)))
(define-fun x540 ((x3049 Int)) Int (ite (= x642 x3049) x3755 (x4030 x3049)))
(define-fun x4014 ((x3049 Int)) Int (ite (= x3049 x2308) x660 (x540 x3049)))
(define-fun x779 ((x3049 Int)) Int (ite (= x3049 x4245) x3512 (x4014 x3049)))
(define-fun x2800 ((x3049 Int)) Int (ite (= x3049 x3883) x2572 (x779 x3049)))
(define-fun x70 ((x3049 Int)) Int (ite x742 (x779 x3049) (ite x1082 (x4014 x3049) (ite x3021 (x540 x3049) (ite x4373 (x4030 x3049) (x2800 x3049))))))
(define-fun x2432 ((x3049 Int)) Int (ite (= x2016 x3049) 0 (x70 x3049)))
(define-fun x3413 ((x3049 Int)) Int (ite (= x4272 x3049) x1239 (x2432 x3049)))
(define-fun x2545 ((x3049 Int)) Int (ite (= x3049 x523) x1430 (x3513 x3049)))
(define-fun x3935 ((x3049 Int)) Int (ite (and (< x3049 x1898) (>= x3049 164)) (x2104 (- (+ x3049 (x990 (+ 164 x2339))) 164)) (x3689 x3049)))
(define-fun x3289 ((x3049 Int)) Int (ite (= x3049 x3617) x2621 (x627 x3049)))
(define-fun x1405 ((x3049 Int)) Int (ite (and (< x3049 (+ x2621 x2215)) (>= x3049 x2215)) (x3935 (- (+ x1622 x3049) x2215)) (x2281 x3049)))
(define-fun x1615 ((x3049 Int)) Int (ite (= x3049 x1866) 0 (x1405 x3049)))
(define-fun x1880 ((x3049 Int)) Int (ite (= x3049 x2762) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x4257 x3049)))
(define-fun x3148 ((x3049 Int)) Int (ite (= x4588 x3049) x2054 (x1880 x3049)))
(define-fun x2253 ((x3049 Int)) Int (ite (= x3049 x4464) 0 (x3148 x3049)))
(define-fun x606 ((x3049 Int)) Int (ite x3674 (x4137 x3049) (x720 x3049)))
(define-fun x1820 ((x3049 Int)) Int (ite x3674 (x3555 x3049) (x1350 x3049)))
(define-fun x3751 ((x3049 Int)) Int (ite x3674 (x3125 x3049) (x406 x3049)))
(define-fun x3412 ((x3049 Int)) Int (ite x3674 (x130 x3049) (x4534 x3049)))
(define-fun x3811 ((x3049 Int)) Int (ite x3674 (x2484 x3049) (x3083 x3049)))
(define-fun x271 ((x3049 Int)) Int (x1787 x3049))
(define-fun x4312 ((x3049 Int)) Int (x1875 x3049))
(define-fun x3231 ((x3049 Int)) Int (ite x3674 (x4419 x3049) (x4109 x3049)))
(define-fun x1494 ((x3049 Int)) Int (x497 x3049))
(define-fun x3530 ((x3049 Int)) Int (ite x3674 (x6 x3049) (x1934 x3049)))
(define-fun x1278 ((x3049 Int)) Int (ite x3674 (x3523 x3049) (x3709 x3049)))
(define-fun x857 ((x3049 Int)) Int (ite x3674 (x2528 x3049) (x3824 x3049)))
(define-fun x2798 ((x3049 Int)) Int (ite x3674 (x4539 x3049) (x1219 x3049)))
(define-fun x4555 ((x3049 Int)) Int (x4184 x3049))
(define-fun x4080 ((x3049 Int)) Int (ite x3674 (x3189 x3049) (x599 x3049)))
(define-fun x3091 ((x3049 Int)) Int (x3326 x3049))
(define-fun x1508 ((x3049 Int)) Int (x3201 x3049))
(define-fun x2563 ((x3049 Int)) Int (ite x3674 (x932 x3049) (x359 x3049)))
(define-fun x3147 ((x3049 Int)) Int (x2550 x3049))
(define-fun x2804 ((x3049 Int)) Int (x2997 x3049))
(define-fun x4162 ((x3049 Int)) Int (ite x3674 (x2808 x3049) (x3184 x3049)))
(define-fun x998 ((x3049 Int)) Int (x537 x3049))
(define-fun x102 ((x3049 Int)) Int (x3513 x3049))
(define-fun x983 ((x3049 Int)) Int (ite x3674 (x3130 x3049) (x3698 x3049)))
(define-fun x911 ((x3049 Int)) Int (x4358 x3049))
(define-fun x249 ((x3049 Int)) Int (x1079 x3049))
(define-fun x4368 ((x3049 Int)) Int (x377 x3049))
(define-fun x3041 ((x3049 Int)) Int (x3770 x3049))
(define-fun x1455 ((x3049 Int)) Int (x3288 x3049))
(define-fun x64 ((x3049 Int)) Int (x1787 x3049))
(define-fun x4434 ((x3049 Int)) Int (x1875 x3049))
(define-fun x2079 ((x3049 Int)) Int (x497 x3049))
(define-fun x2285 ((x3049 Int)) Int (x4184 x3049))
(define-fun x2574 ((x3049 Int)) Int (x3326 x3049))
(define-fun x778 ((x3049 Int)) Int (x3201 x3049))
(define-fun x1807 ((x3049 Int)) Int (x2997 x3049))
(define-fun x3050 ((x3049 Int)) Int (x537 x3049))
(define-fun x2644 ((x3049 Int)) Int (x2550 x3049))
(define-fun x791 ((x3049 Int)) Int (x3513 x3049))
(define-fun x2326 ((x3049 Int)) Int (x3326 x3049))
(define-fun x300 ((x3049 Int)) Int (ite x3078 (x3502 x3049) (x4137 x3049)))
(define-fun x4198 ((x3049 Int)) Int (ite x3078 (x1018 x3049) (x2528 x3049)))
(define-fun x293 ((x3049 Int)) Int (x3201 x3049))
(define-fun x1528 ((x3049 Int)) Int (ite x3078 (x4511 x3049) (x3125 x3049)))
(define-fun x2072 ((x3049 Int)) Int (ite x3078 (x2532 x3049) (x3130 x3049)))
(define-fun x4066 ((x3049 Int)) Int (ite x3078 (x1966 x3049) (x6 x3049)))
(define-fun x1728 ((x3049 Int)) Int (ite x3078 (x3507 x3049) (x130 x3049)))
(define-fun x389 ((x3049 Int)) Int (x3513 x3049))
(define-fun x1292 ((x3049 Int)) Int (ite x3078 (x3379 x3049) (x2484 x3049)))
(define-fun x902 ((x3049 Int)) Int (ite x3078 (x543 x3049) (x2111 x3049)))
(define-fun x1594 ((x3049 Int)) Int (x2550 x3049))
(define-fun x3650 ((x3049 Int)) Int (ite x3078 (x3307 x3049) (x3555 x3049)))
(define-fun x2178 ((x3049 Int)) Int (x497 x3049))
(define-fun x2971 ((x3049 Int)) Int (ite x3078 (x3070 x3049) (x4419 x3049)))
(define-fun x845 ((x3049 Int)) Int (x537 x3049))
(define-fun x652 ((x3049 Int)) Int (x2997 x3049))
(define-fun x3031 ((x3049 Int)) Int (ite x3078 (x26 x3049) (x3523 x3049)))
(define-fun x2807 ((x3049 Int)) Int (ite x3078 (x2487 x3049) (x2808 x3049)))
(define-fun x439 ((x3049 Int)) Int (ite x3078 (x4154 x3049) (x932 x3049)))
(define-fun x3340 ((x3049 Int)) Int (x4184 x3049))
(define-fun x2064 ((x3049 Int)) Int (ite x3078 (x3666 x3049) (x3189 x3049)))
(define-fun x877 ((x3049 Int)) Int (x1875 x3049))
(define-fun x3256 ((x3049 Int)) Int (x1787 x3049))
(define-fun x1950 ((x3049 Int)) Int (ite (= x4335 x3049) x1481 (x509 x3049)))
(define-fun x1705 ((x3049 Int)) Int (x3326 x3049))
(define-fun x40 ((x3049 Int)) Int (x2550 x3049))
(define-fun x4366 ((x3049 Int)) Int (x3201 x3049))
(define-fun x2203 ((x3049 Int)) Int (x3513 x3049))
(define-fun x1333 ((x3049 Int)) Int (x1787 x3049))
(define-fun x2855 ((x3049 Int)) Int (x2997 x3049))
(define-fun x1702 ((x3049 Int)) Int (x537 x3049))
(define-fun x568 ((x3049 Int)) Int (x497 x3049))
(define-fun x2471 ((x3049 Int)) Int (x4184 x3049))
(define-fun x1566 ((x3049 Int)) Int (x1875 x3049))
(define-fun x2322 ((x3049 Int)) Int (x130 x3049))
(define-fun x2711 ((x3049 Int)) Int (x3130 x3049))
(define-fun x2354 ((x3049 Int)) Int (x2484 x3049))
(define-fun x2021 ((x3049 Int)) Int (x3189 x3049))
(define-fun x2027 ((x3049 Int)) Int (x3513 x3049))
(define-fun x4536 ((x3049 Int)) Int (x2111 x3049))
(define-fun x3043 ((x3049 Int)) Int (x4184 x3049))
(define-fun x4523 ((x3049 Int)) Int (x2997 x3049))
(define-fun x1407 ((x3049 Int)) Int (x1787 x3049))
(define-fun x4381 ((x3049 Int)) Int (x1875 x3049))
(define-fun x2704 ((x3049 Int)) Int (x3555 x3049))
(define-fun x2242 ((x3049 Int)) Int (x4137 x3049))
(define-fun x1669 ((x3049 Int)) Int (x3326 x3049))
(define-fun x4247 ((x3049 Int)) Int (x3201 x3049))
(define-fun x1147 ((x3049 Int)) Int (x3523 x3049))
(define-fun x1897 ((x3049 Int)) Int (x932 x3049))
(define-fun x3196 ((x3049 Int)) Int (x497 x3049))
(define-fun x3500 ((x3049 Int)) Int (x6 x3049))
(define-fun x3467 ((x3049 Int)) Int (x2528 x3049))
(define-fun x719 ((x3049 Int)) Int (x2808 x3049))
(define-fun x223 ((x3049 Int)) Int (x2550 x3049))
(define-fun x1515 ((x3049 Int)) Int (x4419 x3049))
(define-fun x3258 ((x3049 Int)) Int (x3125 x3049))
(define-fun x3913 ((x3049 Int)) Int (x537 x3049))
(define-fun x4155 ((x3049 Int)) Int (ite (= x3049 x4335) x3028 (x509 x3049)))
(define-fun x4114 ((x3049 Int)) Int (ite (= x2792 x3049) x71 (x4155 x3049)))
(define-fun x87 ((x3049 Int)) Int (x4419 x3049))
(define-fun x3213 ((x3049 Int)) Int (x87 x3049))
(define-fun x2155 ((x3049 Int)) Int (x3326 x3049))
(define-fun x3004 ((x3049 Int)) Int (x2155 x3049))
(define-fun x3114 ((x3049 Int)) Int (x3130 x3049))
(define-fun x674 ((x3049 Int)) Int (x3114 x3049))
(define-fun x4357 ((x3049 Int)) Int (x3189 x3049))
(define-fun x2098 ((x3049 Int)) Int (x4357 x3049))
(define-fun x2355 ((x3049 Int)) Int (x2484 x3049))
(define-fun x2543 ((x3049 Int)) Int (x2355 x3049))
(define-fun x4437 ((x3049 Int)) Int (x2550 x3049))
(define-fun x2280 ((x3049 Int)) Int (x4437 x3049))
(define-fun x4444 ((x3049 Int)) Int (x130 x3049))
(define-fun x2012 ((x3049 Int)) Int (x4444 x3049))
(define-fun x2120 ((x3049 Int)) Int (x2111 x3049))
(define-fun x30 ((x3049 Int)) Int (x2120 x3049))
(define-fun x2770 ((x3049 Int)) Int (x1787 x3049))
(define-fun x152 ((x3049 Int)) Int (x2770 x3049))
(define-fun x2439 ((x3049 Int)) Int (x3125 x3049))
(define-fun x1080 ((x3049 Int)) Int (x2439 x3049))
(define-fun x3039 ((x3049 Int)) Int (x932 x3049))
(define-fun x49 ((x3049 Int)) Int (x3039 x3049))
(define-fun x2695 ((x3049 Int)) Int (x497 x3049))
(define-fun x3101 ((x3049 Int)) Int (x2695 x3049))
(define-fun x225 ((x3049 Int)) Int (x537 x3049))
(define-fun x3768 ((x3049 Int)) Int (x225 x3049))
(define-fun x3167 ((x3049 Int)) Int (x3513 x3049))
(define-fun x1917 ((x3049 Int)) Int (x3167 x3049))
(define-fun x3244 ((x3049 Int)) Int (x2528 x3049))
(define-fun x2585 ((x3049 Int)) Int (x3244 x3049))
(define-fun x1293 ((x3049 Int)) Int (x6 x3049))
(define-fun x4324 ((x3049 Int)) Int (x1293 x3049))
(define-fun x830 ((x3049 Int)) Int (x2808 x3049))
(define-fun x3980 ((x3049 Int)) Int (x830 x3049))
(define-fun x3319 ((x3049 Int)) Int (x4184 x3049))
(define-fun x4277 ((x3049 Int)) Int (x3319 x3049))
(define-fun x2415 ((x3049 Int)) Int (x3555 x3049))
(define-fun x465 ((x3049 Int)) Int (x2415 x3049))
(define-fun x2613 ((x3049 Int)) Int (x2997 x3049))
(define-fun x210 ((x3049 Int)) Int (x2613 x3049))
(define-fun x3702 ((x3049 Int)) Int (x1875 x3049))
(define-fun x3193 ((x3049 Int)) Int (x3702 x3049))
(define-fun x929 ((x3049 Int)) Int (x3523 x3049))
(define-fun x889 ((x3049 Int)) Int (x929 x3049))
(define-fun x2414 ((x3049 Int)) Int (x4137 x3049))
(define-fun x1128 ((x3049 Int)) Int (x2414 x3049))
(define-fun x239 ((x3049 Int)) Int (x3201 x3049))
(define-fun x3958 ((x3049 Int)) Int (x239 x3049))
(define-fun x2463 ((x3049 Int)) Int (ite (and (> (+ x1108 128) x3049) (<= 128 x3049)) (x3008 (+ x3049 36)) (x1862 x3049)))
(define-fun x3881 ((x3049 Int)) Int (ite (= x3049 x1323) 0 (x2463 x3049)))
(define-fun x3462 ((x3049 Int)) Int (ite (= x2056 x3049) x3300 (x3881 x3049)))
(define-fun x164 ((x3049 Int)) Int (ite (= x3049 x2328) 0 (x3513 x3049)))
(define-fun x1696 ((x3049 Int)) Int (ite (= 128 x3049) x1108 (x3462 x3049)))
(define-fun x372 ((x3049 Int)) Int (ite (and (<= 160 x3049) (< x3049 (+ x1108 160))) (x3008 (+ x3049 4)) (x1696 x3049)))
(define-fun x605 ((x3049 Int)) Int (ite (= x3049 x2352) 0 (x372 x3049)))
(define-fun x2237 ((x3049 Int)) Int (ite (= x3152 x3049) x1242 (x605 x3049)))
(define-fun x3999 ((x3049 Int)) Int (ite (and (<= x3727 x3049) (> (+ x1242 x3727) x3049)) (x3008 (- (+ x4471 x3049) x3727)) (x2237 x3049)))
(define-fun x955 ((x3049 Int)) Int (ite (= x3049 x2631) 0 (x3999 x3049)))
(define-fun x1956 ((x3049 Int)) Int (ite (= x3049 x533) 1 (x537 x3049)))
(define-fun x166 ((x3049 Int)) Int (x2155 x3049))
(define-fun x1488 ((x3049 Int)) Int (ite x2755 (x2808 x3049) (x1572 x3049)))
(define-fun x1122 ((x3049 Int)) Int (ite x2755 (x3125 x3049) (x2911 x3049)))
(define-fun x4226 ((x3049 Int)) Int (ite x2755 (x3130 x3049) (x1479 x3049)))
(define-fun x4565 ((x3049 Int)) Int (x4437 x3049))
(define-fun x538 ((x3049 Int)) Int (ite x2755 (x6 x3049) (x2271 x3049)))
(define-fun x667 ((x3049 Int)) Int (ite x2755 (x2528 x3049) (x3906 x3049)))
(define-fun x1900 ((x3049 Int)) Int (ite x2755 (x130 x3049) (x245 x3049)))
(define-fun x1227 ((x3049 Int)) Int (ite x2755 (x2484 x3049) (x1604 x3049)))
(define-fun x2885 ((x3049 Int)) Int (ite x2755 (x3555 x3049) (x2117 x3049)))
(define-fun x4526 ((x3049 Int)) Int (x2770 x3049))
(define-fun x841 ((x3049 Int)) Int (x3167 x3049))
(define-fun x1177 ((x3049 Int)) Int (ite x2755 (x4419 x3049) (x4188 x3049)))
(define-fun x2004 ((x3049 Int)) Int (ite x2755 (x932 x3049) (x1943 x3049)))
(define-fun x4221 ((x3049 Int)) Int (x225 x3049))
(define-fun x1074 ((x3049 Int)) Int (ite x2755 (x2111 x3049) (x3363 x3049)))
(define-fun x1982 ((x3049 Int)) Int (ite x2755 (x3523 x3049) (x1195 x3049)))
(define-fun x1591 ((x3049 Int)) Int (x239 x3049))
(define-fun x4506 ((x3049 Int)) Int (x2613 x3049))
(define-fun x1506 ((x3049 Int)) Int (ite x2755 (x4137 x3049) (x313 x3049)))
(define-fun x399 ((x3049 Int)) Int (x3319 x3049))
(define-fun x4593 ((x3049 Int)) Int (ite x2755 (x3189 x3049) (x347 x3049)))
(define-fun x2599 ((x3049 Int)) Int (x2695 x3049))
(define-fun x1927 ((x3049 Int)) Int (x3702 x3049))
(define-fun x4502 ((x3049 Int)) Int (ite x995 (x1507 x3049) (ite x582 (x1507 x3049) (x2808 x3049))))
(define-fun x2748 ((x3049 Int)) Int (ite x995 (x4484 x3049) (ite x582 (x4484 x3049) (x3130 x3049))))
(define-fun x821 ((x3049 Int)) Int (ite x995 (x2983 x3049) (ite x582 (x2983 x3049) (x3189 x3049))))
(define-fun x3675 ((x3049 Int)) Int (ite x995 (x203 x3049) (ite x582 (x203 x3049) (x6 x3049))))
(define-fun x1213 ((x3049 Int)) Int (ite x995 (x536 x3049) (ite x582 (x536 x3049) (x2528 x3049))))
(define-fun x3033 ((x3049 Int)) Int (ite x995 (x858 x3049) (ite x582 (x858 x3049) (x2484 x3049))))
(define-fun x3378 ((x3049 Int)) Int (ite x995 (x3170 x3049) (ite x582 (x3170 x3049) (x2111 x3049))))
(define-fun x3610 ((x3049 Int)) Int (ite x995 (x3443 x3049) (ite x582 (x3443 x3049) (x4419 x3049))))
(define-fun x2350 ((x3049 Int)) Int (ite x995 (x2221 x3049) (ite x582 (x2221 x3049) (x932 x3049))))
(define-fun x2038 ((x3049 Int)) Int (ite x995 (x2154 x3049) (ite x582 (x2154 x3049) (x3555 x3049))))
(define-fun x429 ((x3049 Int)) Int (ite x995 (x3655 x3049) (ite x582 (x3655 x3049) (x3523 x3049))))
(define-fun x633 ((x3049 Int)) Int (ite x995 (x147 x3049) (ite x582 (x147 x3049) (x130 x3049))))
(define-fun x1437 ((x3049 Int)) Int (ite x995 (x2165 x3049) (ite x582 (x2165 x3049) (x3125 x3049))))
(define-fun x3504 ((x3049 Int)) Int (ite x995 (x1012 x3049) (ite x582 (x1012 x3049) (x4137 x3049))))
(define-fun x3718 ((x3049 Int)) Int (x4444 x3049))
(define-fun x3801 ((x3049 Int)) Int (x3114 x3049))
(define-fun x261 ((x3049 Int)) Int (x2355 x3049))
(define-fun x98 ((x3049 Int)) Int (x929 x3049))
(define-fun x516 ((x3049 Int)) Int (x4357 x3049))
(define-fun x2419 ((x3049 Int)) Int (x3167 x3049))
(define-fun x2542 ((x3049 Int)) Int (x3319 x3049))
(define-fun x169 ((x3049 Int)) Int (x3702 x3049))
(define-fun x3861 ((x3049 Int)) Int (x2613 x3049))
(define-fun x110 ((x3049 Int)) Int (x2770 x3049))
(define-fun x1223 ((x3049 Int)) Int (x2414 x3049))
(define-fun x3099 ((x3049 Int)) Int (x2120 x3049))
(define-fun x299 ((x3049 Int)) Int (x2155 x3049))
(define-fun x1909 ((x3049 Int)) Int (x239 x3049))
(define-fun x1700 ((x3049 Int)) Int (x2415 x3049))
(define-fun x1153 ((x3049 Int)) Int (x3039 x3049))
(define-fun x2929 ((x3049 Int)) Int (x1293 x3049))
(define-fun x144 ((x3049 Int)) Int (x2695 x3049))
(define-fun x2340 ((x3049 Int)) Int (x3244 x3049))
(define-fun x3284 ((x3049 Int)) Int (x4437 x3049))
(define-fun x1987 ((x3049 Int)) Int (x87 x3049))
(define-fun x2006 ((x3049 Int)) Int (x2439 x3049))
(define-fun x1159 ((x3049 Int)) Int (x830 x3049))
(define-fun x2065 ((x3049 Int)) Int (x225 x3049))
(define-fun x2727 ((x3049 Int)) Int (x3167 x3049))
(define-fun x916 ((x3049 Int)) Int (x225 x3049))
(define-fun x3123 ((x3049 Int)) Int (x2695 x3049))
(define-fun x2884 ((x3049 Int)) Int (x4444 x3049))
(define-fun x3566 ((x3049 Int)) Int (x1293 x3049))
(define-fun x2584 ((x3049 Int)) Int (x3244 x3049))
(define-fun x444 ((x3049 Int)) Int (x3039 x3049))
(define-fun x3521 ((x3049 Int)) Int (x87 x3049))
(define-fun x550 ((x3049 Int)) Int (x3319 x3049))
(define-fun x3128 ((x3049 Int)) Int (x830 x3049))
(define-fun x1060 ((x3049 Int)) Int (x239 x3049))
(define-fun x1740 ((x3049 Int)) Int (x929 x3049))
(define-fun x2654 ((x3049 Int)) Int (x3702 x3049))
(define-fun x2593 ((x3049 Int)) Int (x2415 x3049))
(define-fun x723 ((x3049 Int)) Int (x4357 x3049))
(define-fun x4406 ((x3049 Int)) Int (x2770 x3049))
(define-fun x2160 ((x3049 Int)) Int (x2613 x3049))
(define-fun x1992 ((x3049 Int)) Int (x3114 x3049))
(define-fun x579 ((x3049 Int)) Int (x4437 x3049))
(define-fun x565 ((x3049 Int)) Int (x2355 x3049))
(define-fun x4292 ((x3049 Int)) Int (x2155 x3049))
(define-fun x2825 ((x3049 Int)) Int (x2439 x3049))
(define-fun x1676 ((x3049 Int)) Int (x2414 x3049))
(define-fun x3095 ((x3049 Int)) Int (x1079 x3049))
(define-fun x209 ((x3049 Int)) Int (x377 x3049))
(define-fun x860 ((x3049 Int)) Int (x4358 x3049))
(define-fun x1471 ((x3049 Int)) Int (x3770 x3049))
(define-fun x894 ((x3049 Int)) Int (x3288 x3049))
(define-fun x3012 ((x3049 Int)) Int (x1079 x3049))
(define-fun x4476 ((x3049 Int)) Int (x4358 x3049))
(define-fun x3219 ((x3049 Int)) Int (x377 x3049))
(define-fun x3374 ((x3049 Int)) Int (ite x3269 (ite x816 (x1188 x3049) (x1125 x3049)) (ite x699 (ite x816 (x1188 x3049) (x1125 x3049)) (x1125 x3049))))
(define-fun x814 ((x3049 Int)) Int (ite x1962 (x1125 x3049) (ite x438 (x1125 x3049) (x3374 x3049))))
(define-fun x2643 ((x3049 Int)) Int (ite x2641 (ite x3417 (x1125 x3049) (x814 x3049)) (x1125 x3049)))
(define-fun x1172 ((x3049 Int)) Int (x3288 x3049))
(define-fun x631 ((x3049 Int)) Int (x3770 x3049))
(define-fun x895 ((x3049 Int)) Int (ite (= x3049 x4335) x3015 (x1753 x3049)))
(define-fun x900 ((x3049 Int)) Int (x377 x3049))
(define-fun x3388 ((x3049 Int)) Int (x4358 x3049))
(define-fun x592 ((x3049 Int)) Int (x1079 x3049))
(define-fun x3724 ((x3049 Int)) Int (x3288 x3049))
(define-fun x2964 ((x3049 Int)) Int (ite x3417 (x1125 x3049) (x814 x3049)))
(define-fun x3322 ((x3049 Int)) Int (x3770 x3049))
(define-fun x3973 ((x3049 Int)) Int (x3770 x3049))
(define-fun x1503 ((x3049 Int)) Int (x3288 x3049))
(define-fun x4327 ((x3049 Int)) Int (x1125 x3049))
(define-fun x1169 ((x3049 Int)) Int (x1079 x3049))
(define-fun x2914 ((x3049 Int)) Int (x4358 x3049))
(define-fun x4278 ((x3049 Int)) Int (x377 x3049))
(define-fun x2195 ((x3049 Int)) Int (ite (= x3049 x4335) x3368 (x1753 x3049)))
(define-fun x4545 ((x3049 Int)) Int (ite (= x4585 x3049) x3907 (x2195 x3049)))
(define-fun x51 ((x3049 Int)) Int (x1079 x3049))
(define-fun x1518 ((x3049 Int)) Int (x1125 x3049))
(define-fun x2805 ((x3049 Int)) Int (x4358 x3049))
(define-fun x2412 ((x3049 Int)) Int (x377 x3049))
(define-fun x2653 ((x3049 Int)) Int (x3288 x3049))
(define-fun x3143 ((x3049 Int)) Int (x3770 x3049))
(define-fun x3080 ((x3049 Int)) Int (ite (and (< x3049 (+ 128 x1963)) (<= 128 x3049)) (x2656 (+ 36 x3049)) (x1625 x3049)))
(define-fun x1825 ((x3049 Int)) Int (ite (= x3049 x1932) 0 (x3080 x3049)))
(define-fun x1652 ((x3049 Int)) Int (ite (= x3049 x4134) x2871 (x1825 x3049)))
(define-fun x3421 ((x3049 Int)) Int (ite (= x3049 x1730) 0 (x3513 x3049)))
(define-fun x3034 ((x3049 Int)) Int (ite (= 128 x3049) x1963 (x1652 x3049)))
(define-fun x1399 ((x3049 Int)) Int (ite (and (<= 160 x3049) (> (+ 160 x1963) x3049)) (x2656 (+ 4 x3049)) (x3034 x3049)))
(define-fun x2649 ((x3049 Int)) Int (ite (= x788 x3049) 0 (x1399 x3049)))
(define-fun x4196 ((x3049 Int)) Int (ite (= x3049 x1397) x2451 (x2649 x3049)))
(define-fun x1534 ((x3049 Int)) Int (ite (and (< x3049 (+ x1011 x2451)) (>= x3049 x1011)) (x2656 (- (+ x2197 x3049) x1011)) (x4196 x3049)))
(define-fun x1512 ((x3049 Int)) Int (ite (= x3049 x2665) 0 (x1534 x3049)))
(define-fun x810 ((x3049 Int)) Int (ite (= x3049 x2806) 1 (x537 x3049)))
(define-fun x1130 ((x3049 Int)) Int (x4358 x3049))
(define-fun x958 ((x3049 Int)) Int (x377 x3049))
(define-fun x4107 ((x3049 Int)) Int (x1079 x3049))
(define-fun x4499 ((x3049 Int)) Int (x3288 x3049))
(define-fun x2600 ((x3049 Int)) Int (x3770 x3049))
(define-fun x1991 ((x3049 Int)) Int (ite x438 (x1125 x3049) (x3374 x3049)))
(define-fun x1667 ((x3049 Int)) Int (x3770 x3049))
(define-fun x2759 ((x3049 Int)) Int (x3288 x3049))
(define-fun x1612 ((x3049 Int)) Int (x1125 x3049))
(define-fun x890 ((x3049 Int)) Int (x1079 x3049))
(define-fun x4304 ((x3049 Int)) Int (x4358 x3049))
(define-fun x80 ((x3049 Int)) Int (x377 x3049))
(define-fun x4436 ((x3049 Int)) Int (x377 x3049))
(define-fun x4428 ((x3049 Int)) Int (x4358 x3049))
(define-fun x1381 ((x3049 Int)) Int (x3288 x3049))
(define-fun x2351 ((x3049 Int)) Int (x1079 x3049))
(define-fun x3030 ((x3049 Int)) Int (x3770 x3049))
(define-fun x3774 ((x3049 Int)) Int (ite (= x4239 x3049) x2152 (x2614 x3049)))
(define-fun x3514 ((x3049 Int)) Int (ite (= x3049 x2417) x2022 (x2899 x3049)))
(define-fun x4483 ((x3049 Int)) Int (ite (= x1214 x3049) x2625 (x2626 x3049)))
(define-fun x2461 ((x3049 Int)) Int (ite x816 (x1519 x3049) (x1095 x3049)))
(define-fun x4181 ((x3049 Int)) Int (ite x816 (x1188 x3049) (x1125 x3049)))
(define-fun x2257 ((x3049 Int)) Int (ite (= x2499 x3049) x1827 (x2461 x3049)))
(define-fun x2932 ((x3049 Int)) Int (ite (= x1872 x3049) x2054 (x3201 x3049)))
(define-fun x4333 ((x3049 Int)) Int (ite (= x379 x3049) 0 (x2997 x3049)))
(define-fun x1766 ((x3049 Int)) Int (ite (and (<= 128 x3049) (> 160 x3049)) (x3687 (- x3049 128)) (x2110 x3049)))
(define-fun x1524 ((x3049 Int)) Int (ite (= x3049 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x4013 x3049)))
(define-fun x3019 ((x3049 Int)) Int (ite (= x3049 132) x3298 (x1524 x3049)))
(define-fun x963 ((x3049 Int)) Int (ite (= x3049 164) x2768 (x3019 x3049)))
(define-fun x2767 ((x3049 Int)) Int (ite (= 196 x3049) x3397 (x963 x3049)))
(define-fun x2735 ((x3049 Int)) Int (ite (= 228 x3049) x3922 (x2767 x3049)))
(define-fun x2558 ((x3049 Int)) Int (ite (= 128 x3049) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x4013 x3049)))
(define-fun x3485 ((x3049 Int)) Int (ite (= x3049 132) x2754 (x2558 x3049)))
(define-fun x1823 ((x3049 Int)) Int (ite (= 164 x3049) x1803 (x3485 x3049)))
(define-fun x4206 ((x3049 Int)) Int 0)
(define-fun x1781 ((x3049 Int)) Int (ite (= x3049 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x4013 x3049)))
(define-fun x2712 ((x3049 Int)) Int (ite (= 132 x3049) x4568 (x1781 x3049)))
(define-fun x3418 ((x3049 Int)) Int (ite (= x3049 164) x1668 (x2712 x3049)))
(define-fun x2425 ((x3049 Int)) Int (ite (= x3049 196) x3733 (x3418 x3049)))
(define-fun x1362 ((x3049 Int)) Int (ite (= x4335 x3049) x21 (x509 x3049)))
(define-fun x1483 ((x3049 Int)) Int (ite (= x3049 x2792) x1105 (x1362 x3049)))
(define-fun x2083 ((x3049 Int)) Int (ite (= x3049 x2792) x2912 (x1483 x3049)))
(define-fun x885 ((x3049 Int)) Int (ite (= x3049 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x4013 x3049)))
(define-fun x2043 ((x3049 Int)) Int (ite (= 132 x3049) x954 (x885 x3049)))
(define-fun x4342 ((x3049 Int)) Int 0)
(define-fun x4415 ((x3049 Int)) Int (ite (= 128 x3049) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x4013 x3049)))
(define-fun x253 ((x3049 Int)) Int (ite (= 132 x3049) x2214 (x4415 x3049)))
(define-fun x1440 ((x3049 Int)) Int (ite (= x2792 x3049) x2708 (x4114 x3049)))
(define-fun x2244 ((x3049 Int)) Int (ite (= x4585 x3049) x3606 (x4545 x3049)))
(assert (> (x274 x3914 x2591 x3168 x3784) 10000))
(assert (x2786 x2823))
(assert (x2786 x4213))
(assert (= x3309 (and x1813 x1908)))
(assert (x1450 x1349))
(assert (= (x1190 (x274 x198 x3098 x1628 x156)) x1628))
(assert (x2786 x2723))
(assert (x2786 x3410))
(assert (= (or x2024 x2946) x2851))
(assert (x2786 x4322))
(assert (= x2119 (and (not x458) x714)))
(assert (x2786 x1826))
(assert (x1450 x4228))
(assert (x2786 x4133))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104)))
(assert (x2786 x3202))
(assert (x2786 x1318))
(assert (x149 x3235 256))
(assert (x2786 x88))
(assert (> (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069) 10000))
(assert (x1450 x3866))
(assert (= x4309 (x3945 (x3025 x3435 x34 x2931 x4309 x2071))))
(assert (x1834 3521034783))
(assert (= (or x4103 x2751) x1962))
(assert (x2786 x1059))
(assert (= (x4516 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)) x1945))
(assert (=> (>= 10000 x2116) (= 0 (x328 x2116))))
(assert (x2786 x3069))
(assert (= x4578 (x4010 (x3915 64 x4578 100))))
(assert (= (and x1058 (not x3361)) x3481))
(assert (not (x1834 (x3025 x312 x2752 x483 x3825 x2774))))
(assert (= (or x4192 x2659) x3072))
(assert (= x321 (=> (and (or (and (and (= x240 x4262) (= x3282 x3468) (= x1989 x1253) (= x1123 x1571) (= x4466 x139) (= x3874 x1964) (= x3257 x806) (= x2409 x871) (= x3607 x2853)) (not x222)) (and (and (= x3257 x806) (= x1964 x3874) (<= 0 x422) (= (x1089 x954) x710) (= (- x710 x3) x42) (< (+ x3 x1444) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3282 x3468) (<= x422 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x971 x422) (= x1989 x1253) (= (x913 x2625) x1444) (= x4466 x139) (= x2853 x3607) (= x871 x2409) (= x240 x4262) (= x3 (ite (= 0 x3607) x1205 0)) (= x1571 x1123) (= x422 (+ x3 x1444))) x222)) (= (= x3607 0) x222)) x4393)))
(assert (x2786 x4543))
(assert (x740 x1906))
(assert (x3829 (ite (not (= 0 x3074)) 1 0)))
(assert (x2786 x691))
(assert (= (x75 (x3915 64 x3812 100)) 64))
(assert (= 0 (x75 (x1338 0))))
(assert (< 10000 (x3916 32 x159)))
(assert (x2786 x4505))
(assert (=> (<= x3490 10000) (= 0 (x328 x3490))))
(assert (x2786 x1551))
(assert (x2786 x1792))
(assert (x2786 x2))
(assert (x2786 x3645))
(assert (x2786 x3445))
(assert (< (x3915 64 x3519 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2151 (x3945 (x2903 x587 x61 x783 x2151 x4535 x1441))))
(assert (= x2835 (and x2921 x2794)))
(assert (= 0 (x328 1461501637330902918203684832716283019655932542975)))
(assert (= (x2515 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575)) x2991))
(assert (= x2127 (x3945 (x274 x3859 x3040 x3163 x2127))))
(assert (x2786 x3356))
(assert (= (and (not x3593) x1218) x1449))
(assert (x2786 x4233))
(assert (= (x75 (x3025 x3404 x544 x842 x1300 x2619)) x3404))
(assert (x2786 x908))
(assert (> (x3915 64 x82 36) 10000))
(assert (= x4367 (or x3642 x3509)))
(assert (x2786 x3843))
(assert (> (x274 x1840 x94 x168 x450) 10000))
(assert (not (x1834 (x274 x3435 x3241 x2482 x1968))))
(assert (= x2034 (x1190 (x3025 x3859 x4167 x2034 x2194 x1406))))
(assert (x2786 x3010))
(assert (x2786 x2266))
(assert (= x757 (and (not x1990) x1286)))
(assert (x2786 x1890))
(assert (= (x2278 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756)) x3400))
(assert (= (and x4056 x1165) x3325))
(assert (x2786 x2272))
(assert (not (x1834 (x274 x1840 x94 x168 x450))))
(assert (= (and x172 (not x4289)) x3071))
(assert (x2786 x182))
(assert (=> (<= x2029 10000) (= (x328 x2029) 0)))
(assert (= (x328 (x3915 64 x2872 36)) (x3915 64 x2872 36)))
(assert (x149 x597 256))
(assert (x1311 x3786))
(assert (= x3914 (x75 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554))))
(assert (= (or (and (not x3469) x317) (and x3836 (not x1118)) (and x3792 (not x3580)) (and x1294 (not x503))) x2928))
(assert (x2786 x483))
(assert (= x1357 (and x2416 x2321)))
(assert (not (x1834 (x3915 x1593 x3405 x1171))))
(assert (x2786 x2731))
(assert (x2786 x2860))
(assert (x2786 x65))
(assert (= x3902 (x4010 (x274 x3454 x3902 x4269 x254))))
(assert (x2786 x3862))
(assert (< (x274 x3639 x472 x3370 x1075) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x979))
(assert (=> (<= x4291 10000) (= 0 (x328 x4291))))
(assert (= (x2278 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988)) x2068))
(assert (=> (<= x4356 10000) (= (x328 x4356) 0)))
(assert (= (and x2753 (not x3760)) x2434))
(assert (x2779 x3304))
(assert (x149 x3894 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x4363) (= 0 (x328 x4363))))
(assert (x2786 x4052))
(assert (= x2954 (x3945 (x2903 x3404 x3490 x1699 x2954 x1545 x4410))))
(assert (x2786 x4383))
(assert (x2786 x3924))
(assert (< 10000 (x2903 x3403 x3097 x2559 x4044 x3362 x2146)))
(assert (= (x4010 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)) x2496))
(assert (x2786 x53))
(assert (=> (>= 10000 x1470) (= 0 (x328 x1470))))
(assert (x2786 x1777))
(assert (x2786 x1814))
(assert (= (x4010 (x3916 x1593 x1233)) x1233))
(assert (x2786 x3120))
(assert (x2786 x4344))
(assert (x2786 x243))
(assert (x2786 x3508))
(assert (= x3567 (or x573 x1896)))
(assert (= (or x2032 x1284) x2859))
(assert (x1450 x1860))
(assert (x2786 x4544))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x793 11)))
(assert (x1311 x3297))
(assert (x2786 x4463))
(assert (x2786 x1744))
(assert (x1450 x234))
(assert (x2786 x3788))
(assert (= 0 (x328 2770781680)))
(assert (= (x1190 (x3915 64 x1475 6)) 6))
(assert (=> (>= 10000 x1341) (= (x328 x1341) 0)))
(assert (= (x1190 (x3915 64 x2625 1)) 1))
(assert (= 0 (x328 13123866003235860548192500634644069355060014211693331341089165407210616913920)))
(assert (x2786 x2140))
(assert (= (x4010 (x3915 64 x1521 7)) x1521))
(assert (> (x3025 x3914 x2565 x3806 x2413 x79) 10000))
(assert (= x1796 (or x1489 x1158 x3481 x2108 x924)))
(assert (< (x3025 x3403 x4098 x4260 x3272 x4291) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1442))
(assert (> (x3915 64 x3383 12) 10000))
(assert (= x711 (or x3301 x1083)))
(assert (= x1723 (and x2859 x2288)))
(assert (x1450 x883))
(assert (x2786 x4245))
(assert (x2786 x2529))
(assert (= x3995 (and x3925 (not x3890))))
(assert (x2786 x1688))
(assert (=> (>= 10000 x2361) (= 0 (x328 x2361))))
(assert (x2786 x2848))
(assert (< (x3915 64 x4383 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1605 (and x3105 (not x518))))
(assert (x2786 x488))
(assert (x2786 x1771))
(assert (x2786 x2821))
(assert (=> (<= x3618 10000) (= 0 (x328 x3618))))
(assert (x2786 x3904))
(assert (=> (>= 10000 x3538) (= (x328 x3538) 0)))
(assert (= (x2515 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104)) x3488))
(assert (= x3782 (and x162 x1974)))
(assert (= (and (not x2588) x4027) x1816))
(assert (x2786 x4450))
(assert (= (x274 x312 x2100 x135 x1608) (x328 (x274 x312 x2100 x135 x1608))))
(assert (x1834 486791245))
(assert (=> (>= 10000 x2359) (= (x328 x2359) 0)))
(assert (x2786 x1251))
(assert (x2786 x2152))
(assert (not (x1834 (x3915 x3181 x457 x824))))
(assert (= x2730 (x75 (x2903 x2730 x173 x1367 x4453 x3919 x625))))
(assert (= (x328 (x3916 x3914 x4463)) (x3916 x3914 x4463)))
(assert (x2786 x3163))
(assert (x2786 x1224))
(assert (= x699 (and x2202 x3838)))
(assert (=> (<= x2303 10000) (= (x328 x2303) 0)))
(assert (= (x75 (x3915 64 x1542 2)) 64))
(assert (= x3115 x1839))
(assert (= (x4010 (x3915 x2961 x3880 x3013)) x3880))
(assert (= (x1190 (x3915 64 x4383 36)) 36))
(assert (= x4167 (x4010 (x3025 x3859 x4167 x2034 x2194 x1406))))
(assert (x2786 x2249))
(assert (x2786 x3491))
(assert (x1450 x2070))
(assert (= (and (not x526) x922) x1166))
(assert (= x4382 (or (and x707 x1322) (and x2421 x1051) (and x1527 x2252) (and x1166 x4016) (and x2494 x2335))))
(assert (= x3182 (and x2330 x150)))
(assert (x2786 x4410))
(assert (x2786 x366))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x82 36)))
(assert (x3758 x2699))
(assert (x2786 x2406))
(assert (= x3639 (x75 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875))))
(assert (=> (<= x1850 10000) (= (x328 x1850) 0)))
(assert (= x4043 (and (not x352) x478)))
(assert (x2786 x3841))
(assert (= (and (not x3725) x1145) x924))
(assert (=> (<= x3060 10000) (= 0 (x328 x3060))))
(assert (= x323 (and x4091 x3452)))
(assert (= (x2903 x2730 x173 x1367 x4453 x3919 x625) (x328 (x2903 x2730 x173 x1367 x4453 x3919 x625))))
(assert (x2786 x3446))
(assert (= (and x2289 x255) x1114))
(assert (= (x75 (x3915 64 x4179 12)) 64))
(assert (=> (>= 10000 x3233) (= 0 (x328 x3233))))
(assert (< 10000 (x2903 x1840 x2678 x243 x2159 x2970 x384)))
(assert (= x3639 (x75 (x3916 x3639 x2679))))
(assert (= (x3945 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103)) x3670))
(assert (= x1447 (=> (= x1627 (= 0 x3840)) (and (=> (not x1627) x838) (=> (and (= x3840 1) x1627) x2442)))))
(assert (x2091 x786))
(assert (x3829 x4187))
(assert (= x3674 (or x3072 x2540)))
(assert (= (x3945 (x274 x3914 x2591 x3168 x3784)) x3784))
(assert (= x3600 (x3945 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069))))
(assert (=> (<= x2747 10000) (= (x328 x2747) 0)))
(assert (x2786 x62))
(assert (= x363 (x4010 (x3915 64 x363 12))))
(assert (= x472 (x4010 (x274 x3639 x472 x3370 x1075))))
(assert (x2786 x1270))
(assert (x740 x1695))
(assert (x2786 x2204))
(assert (= (x4010 (x3916 x3404 x3283)) x3283))
(assert (x2786 x1201))
(assert (x2786 x4053))
(assert (= x989 (and (not x2169) x2990)))
(assert (x2786 x2841))
(assert (= (x2515 (x2903 x3639 x1258 x4403 x165 x1097 x2877)) x2877))
(assert (x2786 x1803))
(assert (x2786 x1757))
(assert (x2786 x1932))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x274 x3403 x3737 x2303 x1556)))
(assert (= x851 (x2907 (x336 x587 x1347 x595 x2316 x1059 x2176 x851))))
(assert (= x3404 (x75 (x3915 x3404 x2827 x2241))))
(assert (= x3327 (and x1117 (not x3176))))
(assert (=> (>= 10000 x1414) (= (x328 x1414) 0)))
(assert (= (=> (and (= x1686 x4337) (= x2177 x2669) (= x1686 (x2191 255 x1755)) (= x1549 0) (= 2 x1910) (= x2669 x232) (= x2259 x2840)) x4414) x2690))
(assert (< (x3915 64 x3788 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x3919))
(assert (= (and x1706 (not x2270)) x3817))
(assert (x2779 x3720))
(assert (= x1414 (x4010 (x3915 64 x1414 12))))
(assert (x1834 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x1852 (x4010 (x3915 x3639 x1852 x2691))))
(assert (< (x1338 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1238 10000) (= (x328 x1238) 0)))
(assert (= x83 (=> (and (= x3787 x1439) (= x1446 x3155)) x1602)))
(assert (= (x75 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)) x587))
(assert (= (and x44 (not x370)) x1578))
(assert (= (x328 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (x2786 x4402))
(assert (x2786 x1587))
(assert (x2786 x1693))
(assert (= (x1190 (x3915 64 x65 12)) 12))
(assert (= (x75 (x3915 x2961 x3880 x3013)) x2961))
(assert (=> (<= x2565 10000) (= (x328 x2565) 0)))
(assert (x2786 x1152))
(assert (x149 x2078 128))
(assert (= x4199 (=> (and (= x2645 (not (> x297 128))) (= x1500 (x990 (+ 96 x2729))) (= (x779 x1500) x2572) (= x3883 (x990 (+ 96 x642)))) (and x2645 x2828))))
(assert (= (x75 (x3915 x3639 x1852 x2691)) x3639))
(assert (x2786 x413))
(assert (= 64 (x75 (x3915 64 x4578 100))))
(assert (= (=> (= (not (< 32 x1192)) x4462) (and x3763 x4462)) x3756))
(assert (x2786 x3886))
(assert (=> (>= 10000 x3302) (= 0 (x328 x3302))))
(assert (x2786 x1097))
(assert (x2786 x4589))
(assert (=> (<= x2827 10000) (= (x328 x2827) 0)))
(assert (= x312 (x75 (x2903 x312 x1352 x3445 x324 x1899 x1600))))
(assert (= x2961 (x75 (x3025 x2961 x2167 x3141 x3950 x1282))))
(assert (= (x1190 (x2903 x3435 x1326 x4159 x1918 x655 x4296)) x4159))
(assert (= (x4010 (x3915 64 x1542 2)) x1542))
(assert (=> (<= x355 10000) (= 0 (x328 x355))))
(assert (x1311 x2530))
(assert (x2786 x2678))
(assert (x2786 x4038))
(assert (x1834 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (x149 x3716 128))
(assert (= x1887 (=> (and (= x3207 (= 0 x3981)) (or (and (= 128 x3882) x3207) (and (and (= (x990 (+ 63 x3981)) x3304) (= (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3304) x2874) (>= x2874 1) (<= x2874 115792089237316195423570985008687907853269984665640564039457584007913129639807) (= (+ x2874 128) x3882)) (not x3207)))) x2329)))
(assert (x2786 x1163))
(assert (x2786 x1557))
(assert (= (x4010 (x3025 x587 x2784 x3637 x2581 x2116)) x2784))
(assert (x2786 x1580))
(assert (=> (>= 10000 x3098) (= (x328 x3098) 0)))
(assert (x1450 x1073))
(assert (=> (<= x3488 10000) (= 0 (x328 x3488))))
(assert (x2786 x3141))
(assert (x1311 x2890))
(assert (= x2652 (and x1998 x2502)))
(assert (= (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756) (x328 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756))))
(assert (x2786 x3961))
(assert (= (and x4002 (not x1973)) x2226))
(assert (= x1701 (=> (and (= 2 x549) (= x464 x232) (= x1456 x1710) (= x3627 x464) (= x2082 0)) x4146)))
(assert (=> (>= 10000 x561) (= (x328 x561) 0)))
(assert (= (and x2588 x4027) x3087))
(assert (not (x1834 (x3915 64 x65 12))))
(assert (= x862 (and x555 x2208)))
(assert (= (x3915 x3639 x1852 x2691) (x328 (x3915 x3639 x1852 x2691))))
(assert (x2786 x1310))
(assert (x2786 x3846))
(assert (x2786 x4346))
(assert (x2786 x2934))
(assert (x149 x2634 256))
(assert (= (x4010 (x3915 64 x1439 36)) x1439))
(assert (x2786 x3323))
(assert (x149 x467 256))
(assert (= (and x184 (not x1324)) x3828))
(assert (= x3435 (x75 (x3025 x3435 x34 x2931 x4309 x2071))))
(assert (= x231 (=> (and (= x4413 x2269) (= x3425 x3633) (= x2134 x4376) (= x2603 x4042) (= x1906 0) (= x3917 x1681) (= x2204 1) (= x1961 x4244) (= x474 x2697) (= x4 x2367) (= x4474 x3334) (= x4487 x2635) (= x1135 x1775) (= x1607 x176) (= x468 x273) (= x1849 x574)) x564)))
(assert (x2786 x937))
(assert (= (x2278 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554)) x2136))
(assert (x2786 x1997))
(assert (= (x75 (x2903 x3181 x2757 x3204 x670 x4500 x1727)) x3181))
(assert (not (x1834 (x3915 64 x1552 36))))
(assert (= (x75 (x3915 x3435 x994 x4023)) x3435))
(assert (x2786 x1910))
(assert (x2786 x3535))
(assert (= x3785 (x2907 (x336 x3435 x547 x872 x1944 x494 x713 x3785))))
(assert (x2786 x3848))
(assert (= (and x3516 (not x3776)) x2345))
(assert (=> (<= x1069 10000) (= (x328 x1069) 0)))
(assert (x2786 x3839))
(assert (x2786 x2790))
(assert (= (and x122 (not x3693)) x855))
(assert (= (x2515 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103)) x4121))
(assert (= x3631 (and x1732 x1186)))
(assert (= (and (not x754) x1114) x2540))
(assert (x2786 x3369))
(assert (x1834 107317874183463056701504662589741776198067464202343767264461527615735374807040))
(assert (=> (<= x2915 10000) (= (x328 x2915) 0)))
(assert (x794 32 (ite (not (= 0 x315)) 1 0)))
(assert (x2786 x315))
(assert (x2786 x1884))
(assert (= x1593 (x75 (x274 x1593 x292 x2337 x2714))))
(assert (x2786 x2261))
(assert (x2786 x3362))
(assert (not (x1834 (x3025 x3454 x1443 x569 x1856 x3010))))
(assert (x2786 x3013))
(assert (x2786 x308))
(assert (x2786 x2082))
(assert (x2786 x2810))
(assert (= (and x162 (not x1974)) x2126))
(assert (x1834 1000000000))
(assert (x2786 x2352))
(assert (x1311 x1140))
(assert (x2786 x4580))
(assert (= (and (not x1401) x2607) x3399))
(assert (x2786 x2880))
(assert (x2786 x1924))
(assert (= (x75 (x3915 x312 x3260 x982)) x312))
(assert (x2786 x2219))
(assert (= (x1190 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103)) x1925))
(assert (= (x4010 (x2903 x3403 x3097 x2559 x4044 x3362 x2146)) x3097))
(assert (< (x3915 64 x1475 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x328 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (x2786 x1179))
(assert (< (x3915 64 x3406 (ite (= 0 x3914) x351 (ite (<= x3914 32) x1647 (ite (>= 64 x3914) x1709 (ite (<= x3914 96) x2405 (ite (<= x3914 128) x3928 (ite (<= x3914 160) x1334 (ite (>= 192 x3914) x4303 (ite (>= 224 x3914) x208 x1277))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2701 x2443) x1547))
(assert (x2786 x1348))
(assert (=> (>= 10000 x2483) (= 0 (x328 x2483))))
(assert (< 10000 (x3915 64 x3618 36)))
(assert (x2786 x1704))
(assert (x2786 x1637))
(assert (x2786 x1456))
(assert (= (x75 (x3915 x1840 x4015 x694)) x1840))
(assert (= (x3945 (x274 x3639 x472 x3370 x1075)) x1075))
(assert (= 64 (x75 (x3915 64 x3419 2))))
(assert (= 0 (x328 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (= (x3916 x3639 x2679) (x328 (x3916 x3639 x2679))))
(assert (x149 x2426 128))
(assert (= 36 (x1190 (x3915 64 x4166 36))))
(assert (= (=> (and (or (and (and (= (ite (> x4401 0) 1 0) x3840) (= x4401 (x3936 128))) x2942) (and (= x3840 (ite x2942 1 0)) (not x2942))) (and (= (x3936 128) x2843) (= x2942 (= x2843 x3859)))) x1447) x4084))
(assert (< (x3915 64 x2456 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2641 (or x3417 x3026)))
(assert (= (=> (and (= (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1646) x1221) (= x4272 (x990 (+ 32 x1565))) (= (x990 (+ x1221 x642)) x3808) (= (> x2254 0) x520) (= (x1377 (- x3808 x69)) x1239) (= x1646 (x990 (+ 31 x297))) (= (x3413 x3805) x2254) (= (x990 (+ x297 x642)) x2016)) (and (=> (not x520) x3569) (=> (and (= (> x2254 32) x1186) x520) (and (=> (not x1186) x3569) (=> (and (= x4157 (> x2254 64)) x1186) (and (=> (not x4157) x3569) (=> (and x4157 (= x2311 (< 96 x2254))) (and (=> (not x2311) x3569) (=> x2311 x3429))))))))) x2828))
(assert (= (x4516 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) x2362))
(assert (x2786 x1748))
(assert (x2786 x787))
(assert (=> (<= x165 10000) (= 0 (x328 x165))))
(assert (= 64 (x75 (x3915 64 x3383 12))))
(assert (x2786 x1794))
(assert (x2786 x1790))
(assert (= x2788 (or x2842 x3316)))
(assert (x2786 x604))
(assert (= x1204 (x4010 (x3916 x3181 x1204))))
(assert (= x3435 (x75 (x2903 x3435 x1326 x4159 x1918 x655 x4296))))
(assert (x2786 x1261))
(assert (= (x2907 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554)) x3887))
(assert (= x2591 (x4010 (x274 x3914 x2591 x3168 x3784))))
(assert (=> (<= x2133 10000) (= (x328 x2133) 0)))
(assert (= (x3945 (x274 x3435 x3241 x2482 x1968)) x1968))
(assert (x2091 x3932))
(assert (=> (>= 10000 x1044) (= 0 (x328 x1044))))
(assert (x2786 x4099))
(assert (= x4190 (and (not x1236) x2940)))
(assert (x2786 x2612))
(assert (x2786 x2367))
(assert (= (x4010 (x274 x587 x939 x1435 x2707)) x939))
(assert (x2786 x3406))
(assert (not (x1834 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852))))
(assert (x2786 x2426))
(assert (= (x328 (x3916 x3454 x62)) (x3916 x3454 x62)))
(assert (x2786 x3498))
(assert (= (and x1679 x996) x2488))
(assert (x2786 x4405))
(assert (x2786 x2413))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x1439 36)))
(assert (=> (<= x1495 10000) (= 0 (x328 x1495))))
(assert (x2786 x1238))
(assert (=> (<= x2052 10000) (= 0 (x328 x2052))))
(assert (= x1551 (x3945 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233))))
(assert (=> (>= 10000 x982) (= 0 (x328 x982))))
(assert (=> (<= x622 10000) (= 0 (x328 x622))))
(assert (= (and x3545 (not x3598)) x1649))
(assert (x2786 x3103))
(assert (x2786 x3950))
(assert (= (x3916 x198 x2370) (x328 (x3916 x198 x2370))))
(assert (x2786 x4219))
(assert (=> (>= 10000 x2774) (= 0 (x328 x2774))))
(assert (= (x1190 (x3915 64 x3406 (ite (= x198 0) x803 (ite (>= 32 x198) x755 (ite (>= 64 x198) x2778 (ite (<= x198 96) x2583 (ite (>= 128 x198) x4541 (ite (>= 160 x198) x1868 (ite (<= x198 192) x3100 (ite (<= x198 224) x1331 x2424)))))))))) (ite (= 0 x198) x803 (ite (>= 32 x198) x755 (ite (>= 64 x198) x2778 (ite (>= 96 x198) x2583 (ite (>= 128 x198) x4541 (ite (>= 160 x198) x1868 (ite (>= 192 x198) x3100 (ite (>= 224 x198) x1331 x2424))))))))))
(assert (x2786 x504))
(assert (= (x4010 (x336 x312 x4207 x1 x506 x1403 x1216 x1181)) x4207))
(assert (x740 x3082))
(assert (= x4409 (and x424 x3586)))
(assert (x2786 x4422))
(assert (x2786 x2277))
(assert (x2786 x1600))
(assert (= x1476 (and x1799 x2787)))
(assert (=> (<= x4099 10000) (= (x328 x4099) 0)))
(assert (x2786 x161))
(assert (x2786 x3106))
(assert (x2786 x3233))
(assert (x2786 x1084))
(assert (=> (<= x4308 10000) (= 0 (x328 x4308))))
(assert (x1450 x3720))
(assert (= (x2278 (x3025 x587 x2784 x3637 x2581 x2116)) x2116))
(assert (x2786 x836))
(assert (= (x328 (x3025 x3859 x4167 x2034 x2194 x1406)) (x3025 x3859 x4167 x2034 x2194 x1406)))
(assert (x149 x2795 256))
(assert (x2786 x3613))
(assert (x2786 x286))
(assert (= (x1190 (x3915 64 x1439 36)) 36))
(assert (x2786 x2090))
(assert (= (x4010 (x3915 64 x65 12)) x65))
(assert (= (and x4449 x3599) x4440))
(assert (=> (<= x604 10000) (= (x328 x604) 0)))
(assert (x2786 x1509))
(assert (< 10000 (x3915 64 x2456 0)))
(assert (x2786 x4329))
(assert (= 0 (x328 53968831973089624780961702553170747426560148566936995398294956610382735605760)))
(assert (x2786 x2745))
(assert (x2786 x869))
(assert (> (x3915 64 x793 11) 10000))
(assert (=> (>= 10000 x3508) (= 0 (x328 x3508))))
(assert (x149 x1073 256))
(assert (= (and (not x1382) x2835) x314))
(assert (x740 x871))
(assert (< 10000 (x3915 64 x2150 (ite (= x587 0) x1514 (ite (<= x587 32) x1911 (ite (>= 64 x587) x3957 (ite (<= x587 96) x3591 (ite (<= x587 128) x3734 (ite (<= x587 160) x411 (ite (>= 192 x587) x4491 (ite (>= 224 x587) x3845 x3538)))))))))))
(assert (x2786 x205))
(assert (x2786 x710))
(assert (x2786 x2081))
(assert (x2786 x1168))
(assert (x2786 x3224))
(assert (x2786 x1206))
(assert (x2786 x4171))
(assert (= (and x679 x4394) x4200))
(assert (x1311 x2795))
(assert (x2786 x7))
(assert (x2786 x4094))
(assert (x2786 x2029))
(assert (= x3280 (and x2287 x391)))
(assert (=> (<= x4578 10000) (= 0 (x328 x4578))))
(assert (x2786 x3113))
(assert (= (x2278 (x2903 x3404 x3490 x1699 x2954 x1545 x4410)) x1545))
(assert (= (x328 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)) (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)))
(assert (= x1850 (x1190 (x274 x3404 x4099 x1850 x1196))))
(assert (= (x328 46442213778836376901753710468615024683576072693327014300388496345503314739200) 0))
(assert (=> (<= x802 10000) (= (x328 x802) 0)))
(assert (x4273 x4558))
(assert (x2786 x3082))
(assert (x2786 x2017))
(assert (x2786 x3664))
(assert (= (x4010 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060)) x2157))
(assert (=> (<= x2357 10000) (= (x328 x2357) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x1552 36)))
(assert (=> (>= 10000 x2872) (= 0 (x328 x2872))))
(assert (x2786 x1597))
(assert (x2786 x3616))
(assert (= (x3915 64 x2422 36) (x328 (x3915 64 x2422 36))))
(assert (= (x4516 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069)) x1069))
(assert (x2786 x2530))
(assert (x2786 x1734))
(assert (= x4031 (x2515 (x2903 x2961 x1003 x185 x2848 x2564 x4031))))
(assert (x2786 x851))
(assert (x2786 x1288))
(assert (x2786 x3802))
(assert (= x2761 (x2515 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353))))
(assert (= x3455 (or x1438 x3884)))
(assert (x2786 x4396))
(assert (= (and x1117 x3176) x303))
(assert (= (x4010 (x3025 x3914 x2565 x3806 x2413 x79)) x2565))
(assert (x2786 x3404))
(assert (= (x1190 (x274 x587 x939 x1435 x2707)) x1435))
(assert (x2786 x1606))
(assert (= x3216 (x4010 (x336 x1593 x3216 x381 x3446 x2361 x205 x546))))
(assert (x2786 x1402))
(assert (x3829 x3531))
(assert (= (x75 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104)) x3181))
(assert (= 0 (x328 59118985759084958080972419199848406897631161684926069324597705158744233476096)))
(assert (x2786 x3713))
(assert (x2786 x1475))
(assert (= (and x3757 x2509) x3276))
(assert (x2786 x4031))
(assert (= (x3915 64 x2886 36) (x328 (x3915 64 x2886 36))))
(assert (x3153 x607 32))
(assert (x2786 x4217))
(assert (< 10000 (x3025 x312 x2752 x483 x3825 x2774)))
(assert (= (and (not x1882) x1207) x519))
(assert (= x582 (and x997 x222)))
(assert (=> (>= 10000 x634) (= (x328 x634) 0)))
(assert (= x1058 (and x1145 x3725)))
(assert (x2786 x1300))
(assert (= x1593 (x75 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945))))
(assert (> (x3915 64 x1795 36) 10000))
(assert (x2786 x2040))
(assert (x2786 x2099))
(assert (x2786 x622))
(assert (x2786 x2197))
(assert (x2786 x3926))
(assert (x2786 x3962))
(assert (x2786 x865))
(assert (x2786 x2291))
(assert (x794 32 x3531))
(assert (x2786 x3336))
(assert (=> (<= x1043 10000) (= (x328 x1043) 0)))
(assert (x2786 x2139))
(assert (= x4425 (or x3690 x1808)))
(assert (= x1363 (and x1118 x3836)))
(assert (x149 x1477 128))
(assert (x2786 x4574))
(assert (=> (<= x1485 10000) (= (x328 x1485) 0)))
(assert (x2786 x2167))
(assert (= x2757 (x4010 (x2903 x3181 x2757 x3204 x670 x4500 x1727))))
(assert (=> (>= 10000 x2931) (= (x328 x2931) 0)))
(assert (= (and x3110 x1491) x4078))
(assert (x1450 x2261))
(assert (= (or x4525 x3764) x3439))
(assert (< (x3025 x1593 x1348 x1765 x3525 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x621))
(assert (= x3914 (x75 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060))))
(assert (= (and x834 x4508) x4063))
(assert (x2786 x553))
(assert (= (x75 (x3916 x3181 x1204)) x3181))
(assert (< 10000 (x3915 64 x2150 (ite (= x3181 0) x213 (ite (>= 32 x3181) x662 (ite (>= 64 x3181) x2231 (ite (<= x3181 96) x2495 (ite (>= 128 x3181) x1535 (ite (<= x3181 160) x146 (ite (<= x3181 192) x4073 (ite (>= 224 x3181) x2993 x1478)))))))))))
(assert (= x4248 (and x4456 (not x586))))
(assert (= x2293 (x2278 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233))))
(assert (= x4098 (x4010 (x3025 x3403 x4098 x4260 x3272 x4291))))
(assert (x740 x621))
(assert (x2786 x1312))
(assert (x2786 x612))
(assert (x2786 x1346))
(assert (= (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060) (x328 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060))))
(assert (= x2522 (x4010 (x3915 64 x2522 3))))
(assert (x2786 x1759))
(assert (x2786 x2132))
(assert (x2786 x2042))
(assert (= (x2907 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)) x2171))
(assert (= x581 (and x317 x3469)))
(assert (= (x1190 (x3915 64 x3493 10)) 10))
(assert (x2786 x2054))
(assert (= (x1190 (x3915 64 x2705 10)) 10))
(assert (x2786 x1098))
(assert (x2786 x2316))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462)))
(assert (= x3434 (and x3207 x2536)))
(assert (not (x1834 (x3915 64 x4166 36))))
(assert (= (x328 (x3025 x198 x4543 x431 x3636 x4004)) (x3025 x198 x4543 x431 x3636 x4004)))
(assert (= (=> (= (not (< 32 x192)) x733) (and x2452 x733)) x2675))
(assert (= x1527 (and x1523 (not x1660))))
(assert (x2786 x797))
(assert (not (x1834 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737))))
(assert (x1311 x3235))
(assert (> (x3915 64 x3339 36) 10000))
(assert (not (x1834 (x3916 x198 x2370))))
(assert (= (x2907 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560)) x4560))
(assert (= (x3915 64 x2522 3) (x328 (x3915 64 x2522 3))))
(assert (=> (<= x3626 10000) (= 0 (x328 x3626))))
(assert (x2786 x4320))
(assert (= false x2199))
(assert (x2786 x3921))
(assert (x2786 x1222))
(assert (x2786 x3997))
(assert (x2786 x4392))
(assert (x2786 x3914))
(assert (x2786 x4141))
(assert (x2786 x416))
(assert (= (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462) (x328 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x1593 x1270 x2523 x3069 x3055 x236)))
(assert (= x3944 (=> (= x2304 (= x1832 0)) (and (=> (and x2304 (and (= x1716 false) (= x2924 x2042) (= x111 true))) x4395) (=> (and (not x2304) (and (>= x4068 1) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4455 x1858)) x1525) (= (<= x4455 x4096) x3453) (= x1248 160) (= (x1912 x2134) x4068) (= x4455 (x1766 128)) (= (and x1525 x3453) x4573) (= x4096 (x3667 x2625)) (= (x3667 x2134) x1858))) (and (=> (and (not x4573) (and (= x114 x2456) (= x987 x3334) (= x3259 x176) (= x4 x850) (= x1505 x468) (= x1589 x1657) (= x4558 x2926) (= x413 x3917) (= x1999 0) (= 0 x3552) (= x232 x812) (= x2134 x3539) (= x366 x2070) (= x3519 x1795) (= x4585 x2792) (= x3486 x1849))) x4288) (=> (and x4573 (and (= x1835 (+ x4455 x287)) (<= 0 x1835) (= (x3667 x2625) x2396) (= x1973 (= x1309 x2134)) (= x28 x1835) (= x287 (x4232 x2134)) (< (+ x287 x4455) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x2396 x4455) x3392) (<= x1835 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= false x2344) (>= x2796 1) (= false x2331) (= 36 x2696) (>= 127 x1029) (= x2796 (x1912 x4335)) (>= x2134 1) (= x2625 x3396) (= x4335 x2134) (= x551 36180046632115354981904271164172418022085455641023445553456023893925156618240) (>= 1461501637330902918203684832716283019655932542975 x2134) (<= x1029 127) (= 1341992515 x3923) (= x3974 true)) (not x1973)) (and (=> (and (= x996 (= x2625 x2792)) x3974) (and (=> (and (and (= (= 255 x3519) x449) (<= x3519 255)) x996) (and (=> (and (not x449) (and (= (x3130 x118) x3644) (= (= 0 x3644) x3599) (= (x2191 255 x589) x548) (= x118 (x3915 64 x3519 36)) (= x3419 (x2191 255 x589)) (= (+ 1 x3519) x589))) (and (=> (and (= x505 (= 255 x3419)) x3599) (and (=> x505 x3577) (=> (and (not x505) (and (= x3298 (x932 x3879)) (= (x3915 64 x3419 2) x3879) (= x74 (= x1764 255)) (= (x2191 255 x2040) x844) (= (x2191 255 x2040) x1764) (= (+ 1 x3419) x2040) (<= x3298 1461501637330902918203684832716283019655932542975))) (and (=> (and (and (= x1724 (x2191 255 x1073)) (= x2768 (x3523 x310)) (>= 65535 x2768) (= x1542 (x2191 255 x1073)) (= (= 255 x1542) x1401) (= x310 (x3915 64 x1764 6)) (= (+ x1764 1) x1073)) (not x74)) (and (=> (and (and (= (+ 1 x1542) x1202) (>= 1461501637330902918203684832716283019655932542975 x3397) (= (= x82 255) x4124) (= (x3915 64 x1542 2) x4552) (= x892 (x2191 255 x1202)) (= (x932 x4552) x3397) (= (x2191 255 x1202) x82)) (not x1401)) (and (=> (and (not x4124) (and (= (+ 1 x82) x3366) (= x4348 (= 0 x2810)) (= x2810 (x1912 x2792)) (= x1718 128) (= x3922 (x3130 x4530)) (= x4564 (x2191 255 x3366)) (= x4530 (x3915 64 x82 36)) (= (x2191 255 x3366) x650))) (and (=> (and (not x4348) (and (= 132 x306) (<= x908 127) (= x3298 x3009) (= x2768 x33) (= x3320 x3397) (= 3812630263 x3092) (= x3857 102788308552044517260959567728648622381392053106279845986800620074717893623808) (<= x3334 1461501637330902918203684832716283019655932542975) (= x2996 false) (= x36 false) (= x3937 (x1912 x2625)) (>= 127 x908) (= x219 (= x3334 x4335)) (>= x3937 1) (= x3855 x3922))) (and (=> (and (not x219) (and (= x275 true) (= x2832 false) (= 100 x638))) x1942) (=> (and (= x290 (< x3922 100000)) x219) (and (=> (and (and (= 4 x638) (= x3771 true) (= false x1889)) x290) x1942) (=> (and (not x290) (and (= x904 x3517) (= x3356 x4) (= x745 x812) (= x4178 x291) (= x829 (x932 x4552)) (= x1589 x762) (= x374 x3917) (= x684 x2926) (= x2815 x4564) (= x1345 x114) (= x2792 x2338) (= x2070 x3908) (= (x3130 x4530) x3517) (= x829 x393) (= x2941 x396) (= x575 0) (= x214 x3334) (= x4178 (x3523 x310)) (= x2941 (x932 x3879)) (= x4018 1))) x1822))))) (=> (and x4348 (and (= true x1624) (= 0 x3108) (= false x1321))) x100))) (=> x4124 x1690))) (=> x1401 x3986))) (=> x74 x1235))))) (=> (and (= x3743 (= x3644 1)) (not x3599)) (and (=> (and (not x3743) (= (= x3644 2) x2524)) (and (=> (and x2524 (= x4281 (= 255 x3419))) (and (=> x4281 x3577) (=> (and (not x4281) (and (= x3274 (+ 1 x3419)) (= x3470 (x3523 x4205)) (= x4106 (= x363 255)) (= x363 (x2191 255 x3274)) (= (x2191 255 x3274) x1677) (<= x3470 65535) (= x4205 (x3915 64 x3419 6)))) (and (=> (and (not x4106) (and (= x1118 (< 0 x1874)) (= (x2191 255 x2384) x1735) (= x1192 (ite (> x696 0) x626 (x2191 127 x626))) (<= x2950 18446744073709551615) (= (x2191 255 x2384) x1574) (= x1874 (x1377 (- x696 (mod (ite (> 32 x1192) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2950 (x2528 x1865)) (= x696 (x2191 1 x2070)) (= (+ x363 1) x2384) (= x1865 (x3915 64 x363 12)) (= x626 (x2655 x2070 2)))) (and (=> (not x1118) x99) (=> (and x1118 (and (= x3749 (= x1659 0)) (= (x2191 1 x2070) x1659))) (and (=> (and (= (> x1192 0) x2910) (not x3749)) (and (=> x2910 x3756) (=> (not x2910) x3763))) (=> (and x3749 (and (or (= 32 x4217) (= 0 x4217)) (= x4217 (* (ite (not (= 0 x1192)) 1 0) 32)))) x1132))))) (=> x4106 x3986))))) (=> (and (= (= 3 x3644) x1618) (not x2524)) (and (=> (and (= x678 (= 4 x3644)) (not x1618)) (and (=> (and (= x4185 (= x3419 255)) x678) (and (=> x4185 x3577) (=> (and (not x4185) (and (= x3682 (x2191 255 x4579)) (= x1236 (= x3812 255)) (= (+ 1 x3419) x4579) (= x3699 (x3915 64 x3419 36)) (= x32 (x3130 x3699)) (= (x2191 255 x4579) x3812))) (and (=> x1236 x1235) (=> (and (not x1236) (and (= x2066 (x2191 255 x4057)) (= (x6 x1299) x3668) (= (x3915 64 x3812 100) x1299) (= (+ 1 x3812) x4057) (= (x2191 255 x4057) x3618) (= (= x3618 255) x4216))) (and (=> (and (and (= (and x3754 x3250) x4252) (= (x3130 x2045) x3645) (= (<= x32 x163) x3250) (= (x2191 255 x2795) x4405) (= (x509 x2792) x1273) (= x2045 (x3915 64 x3618 36)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1273 x32)) x3754) (= (x509 x4335) x163) (= x3669 (x2191 255 x2795)) (= x2795 (+ 1 x3618))) (not x4216)) (and (=> x4252 x2342) (=> (and (and (= false x2209) (= 0 x3108) (= x2184 true)) (not x4252)) x100))) (=> x4216 x3986))))))) (=> (and (not x678) (= x3452 (= 5 x3644))) (and (=> (and (not x3452) (= (= 6 x3644) x1254)) (and (=> (and (= (= 255 x3419) x90) x1254) (and (=> x90 x3577) (=> (and (and (= (x2191 255 x1996) x2875) (= x1996 (+ x3419 1)) (= x4166 (x2191 255 x1996)) (= (x3130 x3537) x2958) (= x1055 (= 255 x4166)) (= x3537 (x3915 64 x3419 36))) (not x90)) (and (=> (and (not x1055) (and (= x4568 (x3130 x951)) (= (x2191 255 x1310) x2422) (= x951 (x3915 64 x4166 36)) (= x1131 (= 255 x2422)) (= x1310 (+ x4166 1)) (= x3058 (x2191 255 x1310)))) (and (=> (and (not x1131) (and (= x2886 (x2191 255 x3629)) (= x2129 (= 255 x2886)) (= (x3915 64 x2422 36) x1175) (= x1170 (x2191 255 x3629)) (= x1668 (x3130 x1175)) (= x3629 (+ x2422 1)))) (and (=> (and (not x2129) (and (= (+ 1 x2886) x3402) (= x1546 (x2191 255 x3402)) (= x3593 (= x3588 0)) (= x3733 (x3130 x2743)) (= (x3915 64 x2886 36) x2743) (= x4219 128) (= (x2191 255 x3402) x38) (= (x1912 x2792) x3588))) (and (=> (and (and (= x3108 0) (= true x2009) (= x2878 false)) x3593) x100) (=> (and (not x3593) (and (and (= x491 (and x2674 x3871)) (= x3871 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2958 x1499))) (= (x509 x2792) x1499) (= x4496 (x509 x4335)) (= (>= x4496 x2958) x2674)) (or (and (and (= x2372 false) (= x2290 (+ x2958 x59)) (<= x1304 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (- x3215 x2958) x21) (= x2444 (x2191 255 x3402)) (= x1586 x2138) (= x1304 (+ x2958 x1776)) (= (x1912 x2625) x397) (= x437 x3733) (= (x2083 x4335) x59) (= false x2256) (<= 0 x1304) (= x3215 (x509 x4335)) (<= 0 x2290) (= x1554 x2290) (<= x2290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 486791245 x4025) (= x910 x437) (= x4568 x1586) (<= x1694 127) (>= x397 1) (>= 127 x1694) (= 2 x3561) (= x1668 x865) (= (x1362 x2792) x1776) (= x1105 x1304) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x4402) (= (- x4024 x2958) x2912) (= x1151 true) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2958 x59)) (= x57 100) (= x2688 100) (= false x4567) (< (+ x2958 x1776) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3665 x865) (= (x1483 x2792) x4024)) x491) (and (= 0 x57) (not x491))))) x4065))) (=> x2129 x1690))) (=> x1131 x3986))) (=> x1055 x1235))))) (=> (and (= x1974 (= x3644 7)) (not x1254)) (and (=> (and (not x1974) (= x2554 (= 8 x3644))) (and (=> (and (= x4459 (= 255 x3419)) x2554) (and (=> x4459 x3577) (=> (and (and (= (x1912 x2792) x2147) (= x1442 128) (= x4583 (x3915 64 x3419 36)) (= x2214 (x3130 x4583)) (= (x2191 255 x2634) x760) (= x2672 (= 0 x2147)) (= (x2191 255 x2634) x502) (= (+ x3419 1) x2634)) (not x4459)) (and (=> (and (not x2672) (and (= x2214 x4038) (<= x3334 1461501637330902918203684832716283019655932542975) (<= x4189 127) (= x3778 (x1912 x2625)) (= x3598 (= x4335 x3334)) (<= x4189 127) (<= 1 x3778) (= false x835) (= x4450 1313998243) (= x1581 false) (= x943 36) (= x197 35425322552009646506518338594398286811668114190755561836384294568426616127488))) (and (=> (and (and (= x2225 false) (= true x3819) (= 100 x1271)) (not x3598)) x3745) (=> (and (= x1165 (> 100000 x2214)) x3598) (and (=> (and (and (= x1704 x3132) (= x3334 x2222) (= x4 x1733) (= x1589 x2125) (= 1 x1078) (= x760 x1959) (= x2134 x4133) (= x1517 0) (= x455 x2926) (= x3132 (x3130 x4583)) (= x1849 x1224) (= x176 x3449) (= x496 x3917) (= x925 x2792) (= x1596 x812) (= x4194 x114) (= x3583 x2070)) (not x1165)) x4238) (=> (and (and (= true x1008) (= x501 false) (= x1271 4)) x1165) x3745))))) (=> (and (and (= true x2145) (= false x2144) (= 0 x3108)) x2672) x100))))) (=> (and (and (= x3419 x4569) (= x114 x1245) (= x3917 x1768) (= x1849 x4575) (= x4095 x2792) (= x468 x3476) (= x2356 x1589) (= x2926 x4144) (= x4 x4171) (= x812 x2597) (= x2134 x3987) (= x2070 x636) (= x4017 x3334) (= x2103 x176)) (not x2554)) x3777))) (=> (and x1974 (= x101 (= x3419 255))) (and (=> x101 x3577) (=> (and (not x101) (and (= 128 x3491) (= x635 (x1912 x2792)) (= (= x635 0) x665) (<= x954 1461501637330902918203684832716283019655932542975) (= (x3915 64 x3419 2) x2925) (= x1107 (+ 1 x3419)) (= (x2191 255 x1107) x612) (= (x2191 255 x1107) x3988) (= x954 (x932 x2925)))) (and (=> (and (and (= x1713 false) (= 0 x3108) (= x3487 true)) x665) x100) (=> (and (not x665) (and (= x3459 (x1912 x2625)) (>= 127 x1459) (= false x4082) (= 2770781680 x4021) (<= 1 x3459) (>= 127 x1459) (= 36 x2849) (= x1324 (= x3334 x4335)) (= x991 x954) (= false x3781) (<= x3334 1461501637330902918203684832716283019655932542975) (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x3348))) (and (=> (and (and (= x1205 (x509 x2625)) (= x3127 (< 0 x1205))) x1324) (and (=> (and (and (= 128 x2763) (= x4510 (<= x1205 x3964)) (= x2945 (< (+ x1134 x1205) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x509 x2625) x3964) (= x1134 (x509 x954)) (= (and x4510 x2945) x4289)) x3127) (and (=> (and (and (= x1123 x812) (= x1589 x1964) (= x2853 0) (= x3282 x2792) (= x114 x4466) (= 0 x871) (= x1989 x612) (= x240 x2926) (= x806 x2070)) (not x4289)) x4393) (=> (and x4289 (and (or (and (not x2287) (and (= x612 x1253) (= x2070 x3257) (= x1571 x812) (= x2792 x3468) (= x2926 x4262) (= x139 x114) (= x1589 x3874))) (and (and (= x578 x3257) (= x1276 (x263 x2625)) (= (x263 x954) x947) (= x3468 x751) (= (>= (x1161 x2625) x1276) x2608) (= x899 x1253) (<= x2409 4294967295) (= x1469 x1571) (= x4049 (= (x1161 x954) x947)) (= x182 x3874) (= x3762 x139) x4049 x2608 (= x4262 x1843)) x2287)) (and (= x3993 (x3532 x954)) (< (+ x3993 x1205) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3477 (+ x1205 x3993)) (= x4048 x3477) (= (- x3239 x1205) x2007) (<= x3477 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x509 x2625) x3239) (>= x3477 0) (= x2287 (> x3607 0))))) x321))) (=> (and (not x3127) (and (= x2926 x1135) (= x612 x2697) (= x4244 x114) (= x2269 x812) (= x1589 x4042) (= x2635 x2792) (= x3425 x2070))) x231))) (=> (and (not x1324) (and (= x1812 100) (= true x66) (= x3290 false))) x4163))))))))))) (=> (and x3452 (= x2485 (= 255 x3419))) (and (=> x2485 x3577) (=> (and (not x2485) (and (= x2433 (x3130 x828)) (= (x3915 64 x3419 36) x828) (= x97 (= x1179 255)) (= (x2191 255 x3853) x4504) (= x1179 (x2191 255 x3853)) (= x3853 (+ x3419 1)))) (and (=> x97 x1235) (=> (and (and (= (x2191 255 x467) x1818) (= (x2191 255 x467) x1136) (= x467 (+ x1179 1)) (= x89 (= 255 x1818)) (<= x1521 65535) (= x1521 (x3523 x3234)) (= (x3915 64 x1179 6) x3234)) (not x97)) (and (=> (and (and (= x3296 (> x3106 0)) (= (+ x1818 1) x3705) (<= x2150 18446744073709551615) (= x685 (x3915 64 x1818 12)) (= (x2655 x2070 2) x4584) (= (x1377 (- x4322 (mod (ite (> 32 x2745) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3106) (= x4529 (x2191 255 x3705)) (= (x2191 255 x3705) x1257) (= x4322 (x2191 1 x2070)) (= (ite (> x4322 0) x4584 (x2191 127 x4584)) x2745) (= x2150 (x2528 x685))) (not x89)) (and (=> (not x3296) x4446) (=> (and x3296 (and (= x2348 (x2191 1 x2070)) (= (= x2348 0) x3349))) (and (=> (and (not x3349) (and (= x237 (x3916 32 103)) (= (< 0 x2745) x4473))) (and (=> (and (= 0 x3450) (not x4473)) x3187) (=> x4473 x2302))) (=> (and (and (or (= x3696 32) (= 0 x3696)) (= (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2070) x2812) (= x3696 (* (ite (not (= 0 x2745)) 1 0) 32)) (= (+ 292 x3696) x3265)) x3349) x119))))) (=> x89 x1690))))))))))) (=> (and x1618 (= x2239 (= 255 x3419))) (and (=> x2239 x3577) (=> (and (and (= x3484 (x2191 255 x3297)) (= (+ x3419 1) x3297) (= x572 (x3915 64 x3419 36)) (= (x3130 x572) x2754) (= x2747 (x2191 255 x3297)) (= x370 (= 255 x2747))) (not x2239)) (and (=> x370 x1235) (=> (and (not x370) (and (or (and (and (>= x4145 1) (= false x3138) (<= x717 127) (= (x1912 x2625) x4145) (= x4396 x2754) (= true x2320) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x4261) (= x2947 (x2191 255 x2890)) (= x3398 false) (= false x2230) (= x1619 false) (= x2646 true) (= x3962 2) (= x3854 3957931183) (<= x717 127) (= x3108 100) (= x1670 x1803) (= x4165 68)) (not x2838)) (and x2838 (and (= x3124 true) (= false x2310) (= x3108 0)))) (and (= x3018 (x3915 64 x2747 100)) (= x3657 (x2191 255 x2890)) (= x4576 128) (= (x2191 255 x2890) x1209) (= (+ 1 x2747) x2890) (= (x6 x3018) x1803) (= (= x3966 0) x2838) (= x3966 (x1912 x2792))))) x100))))))))) (=> (and x3743 (= x566 (= 255 x3419))) (and (=> x566 x3577) (=> (and (and (= x2383 (x3915 64 x3419 6)) (= x4179 (x2191 255 x2325)) (= (= 255 x4179) x160) (= x2039 (x3523 x2383)) (>= 65535 x2039) (= (+ x3419 1) x2325) (= (x2191 255 x2325) x752)) (not x566)) (and (=> x160 x3986) (=> (and (not x160) (and (= (x2528 x2251) x4422) (= (+ x4179 1) x1349) (= x2251 (x3915 64 x4179 12)) (= (x2191 1 x2070) x608) (>= 18446744073709551615 x4422) (= (ite (> x608 0) x3716 (x2191 127 x3716)) x4299) (= x2220 (x2191 255 x1349)) (= x2394 (x1377 (- x608 (mod (ite (< x4299 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3544 (x2191 255 x1349)) (= x3716 (x2655 x2070 2)) (= (< 0 x2394) x3469))) (and (=> (not x3469) x99) (=> (and x3469 (and (= x1569 (x2191 1 x2070)) (= x400 (= x1569 0)))) (and (=> (and (not x400) (= x833 (> x4299 0))) (and (=> x833 x2305) (=> (not x833) x4097))) (=> (and x400 (and (or (= x1210 0) (= x1210 32)) (= x1210 (* 32 (ite (not (= 0 x4299)) 1 0))))) x2436))))))))))))) (=> (and x449 (and (= x3108 36) (= x1400 true) (= x376 false))) x100))) (=> (and (and (= x2334 false) (= true x2243) (= x3108 0)) (not x996)) x100))) (=> (and (and (= 0 x3108) (= x4222 true) (= false x3978)) (not x3974)) x100))) (=> (and x1973 (and (= x1520 (x1912 x1309)) (>= 127 x553) (<= x553 127) (= false x1640) (= x3609 1341992515) (= x2289 true) (= x2682 36180046632115354981904271164172418022085455641023445553456023893925156618240) (<= 1 x1520) (= false x886) (= x2625 x1368) (= x2860 36))) (and (=> (and (and (= x615 (x3915 64 x2625 1)) (= x1864 (x990 (+ x4455 x3427))) (= (x2111 x615) x3427) (= x754 (> x3427 x1864))) x2289) (and (=> (and (not x754) (and (= x2792 x3354) (= x2713 x2926) (= x3917 x2569) (= x3519 x2889) (= x1849 x1651) (= x1589 x3640) (= x176 x2799) (= x646 x3334) (= x1369 0) (= x2134 x325) (= x4263 x2070) (= x3084 x812) (= x1265 x114) (= x468 x3994) (= x1777 x4) (= 1 x3387))) x1870) (=> (and (and (= x3726 36) (= true x1127) (= x4160 false)) x754) x3688))) (=> (and (and (= x2168 false) (= true x905) (= 0 x3726)) (not x2289)) x3688)))))))))))
(assert (x2786 x517))
(assert (=> (<= x1024 10000) (= (x328 x1024) 0)))
(assert (x2786 x638))
(assert (= (x1190 (x3915 x2961 x3880 x3013)) x3013))
(assert (< (x3915 64 x2522 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2761) (= 0 (x328 x2761))))
(assert (= x914 (x3945 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554))))
(assert (x2786 x3364))
(assert (not (x1834 (x3915 64 x4578 100))))
(assert (< (x3915 64 x3419 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x982))
(assert (x2786 x2180))
(assert (= x3000 (or (and x519 x2397) (and x3952 x3652) (and x556 x1395))))
(assert (= (x2278 (x2903 x3181 x2757 x3204 x670 x4500 x1727)) x4500))
(assert (=> (>= 10000 x2592) (= (x328 x2592) 0)))
(assert (=> (<= x4108 10000) (= (x328 x4108) 0)))
(assert (x2786 x3779))
(assert (x3153 x366 2))
(assert (x2786 x1545))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x3639 x1258 x4403 x165 x1097 x2877)))
(assert (= (and x449 x2488) x4100))
(assert (= x1983 (or x2478 (and x4364 (not x3821)))))
(assert (x2786 x2020))
(assert (not (x1834 (x3915 x3403 x802 x1126))))
(assert (not (x1834 (x3025 x3181 x3905 x3796 x3823 x2008))))
(assert (x2786 x737))
(assert (x2786 x3168))
(assert (x740 x498))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2872 36)))
(assert (=> (<= x3241 10000) (= 0 (x328 x3241))))
(assert (=> (<= x3353 10000) (= 0 (x328 x3353))))
(assert (x2786 x658))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2422 36)))
(assert (= x62 (x4010 (x3916 x3454 x62))))
(assert (= (x328 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852)) (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852)))
(assert (x2786 x1733))
(assert (= (x75 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) x3454))
(assert (= x4451 (=> (and (= x1198 true) (= false x3122) (= 36 x2949)) x2553)))
(assert (=> (<= x2625 10000) (= (x328 x2625) 0)))
(assert (= x843 (x3945 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308))))
(assert (= (and (not x160) x2819) x317))
(assert (x2786 x381))
(assert (= x555 (and x3776 x3516)))
(assert (= x172 (and x3858 x3127)))
(assert (= (or x3574 x3434) x577))
(assert (= (x4010 (x3915 64 x4347 6)) x4347))
(assert (not (x1834 (x3915 64 x3406 (ite (= 0 x198) x803 (ite (<= x198 32) x755 (ite (<= x198 64) x2778 (ite (>= 96 x198) x2583 (ite (>= 128 x198) x4541 (ite (>= 160 x198) x1868 (ite (<= x198 192) x3100 (ite (>= 224 x198) x1331 x2424))))))))))))
(assert (=> (>= 10000 x570) (= (x328 x570) 0)))
(assert (x780 x2530))
(assert (x2786 x3370))
(assert (=> (>= 10000 x2132) (= (x328 x2132) 0)))
(assert (< 10000 (x3915 x312 x3260 x982)))
(assert (x740 x2696))
(assert (x2786 x2959))
(assert (= x3022 (and x928 (not x1194))))
(assert (= x1207 (and x37 (not x3380))))
(assert (x2786 x141))
(assert (x2786 x3152))
(assert (=> (>= 10000 x4383) (= (x328 x4383) 0)))
(assert (= (x328 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)) (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)))
(assert (=> (<= x3066 10000) (= 0 (x328 x3066))))
(assert (x2786 x2957))
(assert (= (x2278 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)) x2592))
(assert (x2786 x1681))
(assert (x2786 x3278))
(assert (x2786 x3151))
(assert (< (x3915 x312 x3260 x982) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3758 x1140))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x3342) (= x3351 (x2655 (+ 31 x3859) 32)) (>= x4389 2) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x3342) (= x949 (x990 (+ 32 x4306))) (= (x990 (+ x2015 32)) x3451) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x3342) (= x2137 (* x4285 32)) (= x361 (* x3351 32)) (= 150 x2648) (= (x990 (+ 36 x4389)) x2015) (= x1386 (x990 (+ x3342 (mod (+ x361 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2655 (+ 31 x2000) 32) x4285) (<= x1386 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x990 (+ (mod (+ 32 x2137) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1386)) x4389) (= (> x3524 0) x4139) (= (x990 (+ 32 x3342)) x3299) (> x1386 x3342) (= (x990 (+ x2729 x2000)) x3581) (= x1559 (x990 (+ x3859 x3299))) (<= 1 x1386) (= x3524 (x129 x3342)) (< x1386 x4389) (= x2729 (x990 (+ x1386 32))) (= (x990 (+ 128 x2015)) x4306)) (and (=> (and x4139 (and (= (x2803 x3299) x1798) (= x196 (< 32 x3524)))) (and (=> (not x196) x4069) (=> (and (and (= (> x3524 64) x2441) (= (x990 (+ x949 32)) x1463) (= x4168 (x990 (+ x3299 32))) (= x3954 (x2179 x4168))) x196) (and (=> (not x2441) x4069) (=> (and (and (= x1774 (< 96 x3524)) (= (x990 (+ x949 64)) x903) (= (x1656 x470) x1336) (= x470 (x990 (+ x3299 64)))) x2441) (and (=> x1774 x4034) (=> (not x1774) x4069))))))) (=> (not x4139) x4069))) x2442))
(assert (x2786 x2994))
(assert (x2786 x2338))
(assert (x2786 x1335))
(assert (= x4044 (x3945 (x2903 x3403 x3097 x2559 x4044 x3362 x2146))))
(assert (x2786 x1811))
(assert (x2786 x2313))
(assert (=> (>= 10000 x2175) (= (x328 x2175) 0)))
(assert (x149 x3198 128))
(assert (x2786 x875))
(assert (< 10000 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988)))
(assert (=> (>= 10000 x1326) (= 0 (x328 x1326))))
(assert (not (x1834 (x3915 x3639 x1852 x2691))))
(assert (= x3642 (and x668 (not x219))))
(assert (x2786 x1182))
(assert (< 10000 (x3915 x3454 x305 x4271)))
(assert (=> (>= 10000 x243) (= (x328 x243) 0)))
(assert (x2786 x1458))
(assert (= (and x1948 (not x3815)) x651))
(assert (= (x328 (x3915 x3181 x457 x824)) (x3915 x3181 x457 x824)))
(assert (= (=> (and (= (not (< 128 x3068)) x2629) (= x797 (x990 (+ 96 x69))) (= x1458 (x990 (+ x3299 96))) (= x3867 (x3422 x1458))) (and x1048 x2629)) x201))
(assert (=> (>= 10000 x1771) (= (x328 x1771) 0)))
(assert (x2786 x1209))
(assert (x2786 x2206))
(assert (x2786 x3260))
(assert (x2786 x3366))
(assert (= (and x2421 (not x1051)) x3047))
(assert (x2786 x2687))
(assert (x2786 x594))
(assert (= (and x2916 x357) x591))
(assert (x2091 2))
(assert (x1450 x1477))
(assert (=> (<= x3895 10000) (= 0 (x328 x3895))))
(assert (x2786 x882))
(assert (x2786 x2526))
(assert (= (=> (and (= (>= 224 x3639) x3723) (= (x990 (+ x2451 128)) x3217) (= x3639 (x1377 (- x3217 128)))) (and (=> (and (= x3059 (x1625 224)) (= (x3025 x3639 x1495 x3799 x2775 x1044) x3548) (= (x2903 x3639 x1258 x4403 x165 x1097 x2877) x2229) (= (x1625 224) x1097) (= (x1625 160) x2691) (= (x1625 256) x3886) (= (x1625 192) x2775) (= x3199 (x1625 128)) (= x3563 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875)) (= (x1625 160) x2809) (= (= x13 (ite (= 0 x3639) x2013 (ite (>= 32 x3639) x2980 (ite (<= x3639 64) x1289 (ite (<= x3639 96) x2400 (ite (>= 128 x3639) x3548 (ite (<= x3639 160) x2229 (ite (<= x3639 192) x3563 (ite (>= 224 x3639) x473 x2913))))))))) x1743) (= (x1625 128) x1852) (= (x1625 160) x2223) (= x3875 (x1625 288)) (= x1075 (x1625 192)) (= x473 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756)) (= (x3915 x3639 x1852 x2691) x1289) (= (x1625 192) x2206) (= x1258 (x1625 128)) (= x2679 (x1625 128)) (= (x1625 256) x2877) (= x165 (x1625 192)) (= x3799 (x1625 160)) (= x2013 (x1338 0)) (= x2980 (x3916 x3639 x2679)) (= x4551 (x1625 128)) (= x472 (x1625 128)) (= (x1625 320) x1756) (= x3400 (x1625 224)) (= (x274 x3639 x472 x3370 x1075) x2400) (= (x1625 224) x1044) (= (x1625 128) x1495) (= x2915 (x1625 192)) (= (x1625 288) x9) (= x3370 (x1625 160)) (= x4403 (x1625 160)) (= x1470 (x1625 256))) (and (=> x1743 x4501) (=> (and (not x1743) (and (= x4284 132) (= x175 false) (= x1472 true))) x1969))) x3723)) x1931))
(assert (< 10000 (x2903 x1593 x1270 x2523 x3069 x3055 x236)))
(assert (x2786 x3427))
(assert (= (x2907 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103)) x611))
(assert (x2395 x4517))
(assert (x2786 x1466))
(assert (= x3690 (or x3441 x294)))
(assert (=> (>= 10000 x4317) (= 0 (x328 x4317))))
(assert (x2786 x2114))
(assert (x2786 x3669))
(assert (=> (>= 10000 x2757) (= (x328 x2757) 0)))
(assert (x1834 35477284059277649309253622239531857712935939630608236286772267603529442882419))
(assert (x2786 x2965))
(assert (x2786 x2362))
(assert (x2786 x27))
(assert (=> (>= 10000 x1403) (= 0 (x328 x1403))))
(assert (x2091 x4558))
(assert (x2786 x2483))
(assert (not (x1834 (x3915 x2730 x3221 x1879))))
(assert (= (and (not x2524) x3023) x643))
(assert (= x3181 (x75 (x3025 x3181 x3905 x3796 x3823 x2008))))
(assert (x794 32 (ite (not (= 0 x1192)) 1 0)))
(assert (x149 x2890 256))
(assert (x2786 x414))
(assert (> (x3915 64 x3419 36) 10000))
(assert (x2786 x3217))
(assert (= (x1190 (x3025 x2961 x2167 x3141 x3950 x1282)) x3141))
(assert (= x3953 (=> (= (+ 292 x1185) x880) x1915)))
(assert (= x3403 (x75 (x3915 x3403 x802 x1126))))
(assert (=> (<= x2293 10000) (= 0 (x328 x2293))))
(assert (x2786 x4209))
(assert (x2786 x962))
(assert (x1834 1914215))
(assert (= (x328 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (x149 x3786 2))
(assert (= (x75 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)) x2730))
(assert (> (x3915 64 x2705 10) 10000))
(assert (x740 x978))
(assert (= x480 (x2278 (x3025 x2730 x1434 x676 x4377 x480))))
(assert (= x37 (and x1529 x2556)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)))
(assert (x740 x2849))
(assert (x2786 x2366))
(assert (= x768 (not (and (>= x619 0) (= x1001 (x895 x4585)) (= (x1753 x4335) x1687) (< (+ x3576 x1001) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x619 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (- x1687 x3576) x3015) (= (+ x1001 x3576) x619) (= x2181 x619)))))
(assert (x2786 x1778))
(assert (x2786 x3042))
(assert (x2786 x3922))
(assert (=> (<= x1288 10000) (= 0 (x328 x1288))))
(assert (< (x3915 64 x4383 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x1322) x707) x2443))
(assert (x740 x1517))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3916 32 x159)))
(assert (=> (>= 10000 x2456) (= 0 (x328 x2456))))
(assert (x2786 x1967))
(assert (x2786 x1505))
(assert (= x1538 (and (not x834) x4508)))
(assert (x2786 x3503))
(assert (x2786 x850))
(assert (x2786 x1216))
(assert (= x3241 (x4010 (x274 x3435 x3241 x2482 x1968))))
(assert (x2786 x3230))
(assert (x2786 x764))
(assert (< (x336 x2730 x604 x959 x1794 x3560 x2991 x3575) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x195 (x3945 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945))))
(assert (x2786 x2161))
(assert (= x386 (or (and x2847 (not x2387)) (and (not x1220) x3047) (and (not x2288) x2859) (and x2443 (not x2701)))))
(assert (= x2678 (x4010 (x2903 x1840 x2678 x243 x2159 x2970 x384))))
(assert (= (x328 310283853) 0))
(assert (= 0 (x328 3957931183)))
(assert (=> (<= x1443 10000) (= (x328 x1443) 0)))
(assert (= (=> (and (= x2273 (x2244 x4335)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4127) (= (x4545 x4585) x43) (>= x4127 0) (= x4127 x1402) (= x4284 x3440) (= x311 2) (= (x2191 255 x970) x405) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2273 x2030)) (= (- x43 x2030) x3606) (= (+ x2030 x2273) x4127)) x2170) x1969))
(assert (=> (<= x3313 10000) (= 0 (x328 x3313))))
(assert (x2786 x2466))
(assert (x2786 x3832))
(assert (x2786 x1888))
(assert (=> (>= 10000 x4129) (= 0 (x328 x4129))))
(assert (x2786 x4355))
(assert (x2786 x3344))
(assert (x3758 x3366))
(assert (x2786 x3097))
(assert (x149 x3304 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2180 10000) (= (x328 x2180) 0)))
(assert (x2786 x4306))
(assert (=> (>= 10000 x4260) (= 0 (x328 x4260))))
(assert (=> (>= 10000 x3055) (= (x328 x3055) 0)))
(assert (= (x2278 (x3025 x1840 x561 x4356 x901 x4480)) x4480))
(assert (= x2961 (x75 (x3916 x2961 x4544))))
(assert (= x3859 (x75 (x3915 x3859 x2465 x3694))))
(assert (x2786 x2888))
(assert (= (x3915 64 x2747 100) (x328 (x3915 64 x2747 100))))
(assert (x2786 x1001))
(assert (=> (>= 10000 x4012) (= (x328 x4012) 0)))
(assert (= x107 (and (not x4281) x2811)))
(assert (= (x328 (x274 x1593 x292 x2337 x2714)) (x274 x1593 x292 x2337 x2714)))
(assert (not (x1834 (x3915 64 x2658 36))))
(assert (x2786 x437))
(assert (= x1971 (=> (= (not (< 32 x584)) x705) (and x2891 x705))))
(assert (= (x3915 64 x4578 100) (x328 (x3915 64 x4578 100))))
(assert (= x3516 (and (not x726) x3820)))
(assert (x2786 x3271))
(assert (= x4325 (and x391 (not x2287))))
(assert (x2786 x1390))
(assert (x149 x1036 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3252 (or x3223 x3423)))
(assert (= (x4010 (x3915 64 x2625 2)) x2625))
(assert (= x1857 (or x2618 x3327)))
(assert (x2786 x567))
(assert (x2786 x2464))
(assert (= (x1190 (x2903 x312 x1352 x3445 x324 x1899 x1600)) x3445))
(assert (= (or x3022 x3078) x2749))
(assert (x2786 x1840))
(assert (= (and x459 (not x1149)) x3105))
(assert (=> (>= 10000 x1196) (= 0 (x328 x1196))))
(assert (= (x4010 (x2903 x3404 x3490 x1699 x2954 x1545 x4410)) x3490))
(assert (= (or (and x4248 x4572) (and x4547 x493)) x4214))
(assert (x2786 x2259))
(assert (= (=> (and (= true x481) (= false x1678) (= 0 x3278)) x2628) x704))
(assert (=> (>= 10000 x1344) (= (x328 x1344) 0)))
(assert (=> (>= 10000 x168) (= 0 (x328 x168))))
(assert (x1834 65535))
(assert (=> (>= 10000 x4392) (= (x328 x4392) 0)))
(assert (< 10000 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)))
(assert (x2786 x2135))
(assert (x2786 x2157))
(assert (not (x1834 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684))))
(assert (x2786 x4568))
(assert (x149 x234 256))
(assert (x2786 x4579))
(assert (x2786 x2481))
(assert (= (or x1770 x19) x3792))
(assert (x2786 x807))
(assert (= x4099 (x4010 (x274 x3404 x4099 x1850 x1196))))
(assert (x2786 x2303))
(assert (x2786 x1898))
(assert (x2786 x2323))
(assert (= (and x3817 (not x815)) x1680))
(assert (= (x2903 x198 x2377 x2801 x3779 x2284 x4064) (x328 (x2903 x198 x2377 x2801 x3779 x2284 x4064))))
(assert (= x4070 (and x4426 x1337)))
(assert (= (and x1711 x800) x1706))
(assert (x2786 x4389))
(assert (=> (<= x1300 10000) (= (x328 x1300) 0)))
(assert (x2786 x2298))
(assert (x2786 x3907))
(assert (= x2730 (x75 (x3915 x2730 x3221 x1879))))
(assert (=> (<= x4044 10000) (= (x328 x4044) 0)))
(assert (x1450 x2634))
(assert (x1311 x4228))
(assert (= x1552 (x4010 (x3915 64 x1552 36))))
(assert (x2786 x2792))
(assert (x2786 x1271))
(assert (x2786 x3265))
(assert (< (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3915 64 x4383 6) (x328 (x3915 64 x4383 6))))
(assert (=> (>= 10000 x363) (= (x328 x363) 0)))
(assert (x2786 x1616))
(assert (= x1790 (x2278 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852))))
(assert (x3758 x1178))
(assert (x2786 x4487))
(assert (= x3191 (and (not x341) x1266)))
(assert (x2786 x124))
(assert (x740 x276))
(assert (x2786 x60))
(assert (x2091 x2926))
(assert (x2786 x3299))
(assert (= x4166 (x4010 (x3915 64 x4166 36))))
(assert (x2786 x2567))
(assert (=> (>= 10000 x1684) (= (x328 x1684) 0)))
(assert (= (x328 (x3915 64 x363 12)) (x3915 64 x363 12)))
(assert (= x928 (or x563 (and x441 (not x2207)))))
(assert (= (x2278 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955)) x2513))
(assert (x2786 x32))
(assert (x2786 x4088))
(assert (x2786 x329))
(assert (= x2773 true))
(assert (= x3260 (x4010 (x3915 x312 x3260 x982))))
(assert (=> (>= 10000 x34) (= (x328 x34) 0)))
(assert (not (x1834 (x3025 x3403 x4098 x4260 x3272 x4291))))
(assert (= (x3916 x1593 x1233) (x328 (x3916 x1593 x1233))))
(assert (= (x328 (x274 x3914 x2591 x3168 x3784)) (x274 x3914 x2591 x3168 x3784)))
(assert (not (x1834 (x3915 x587 x3996 x1809))))
(assert (x2786 x2198))
(assert (x2786 x3796))
(assert (= (and x2119 (not x270)) x2024))
(assert (x740 x4284))
(assert (x3829 x3169))
(assert (x2786 x3203))
(assert (x2786 x3157))
(assert (x2395 x3716))
(assert (x2786 x2433))
(assert (x1450 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x2786 x2181))
(assert (=> (>= 10000 x1580) (= 0 (x328 x1580))))
(assert (x2786 x356))
(assert (=> (>= 10000 x4296) (= 0 (x328 x4296))))
(assert (x2786 x4068))
(assert (x2786 x4129))
(assert (x1834 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (> (x3916 x312 x2052) 10000))
(assert (x2786 x1435))
(assert (x2786 x3988))
(assert (x2786 x3385))
(assert (> (x3915 64 x2175 100) 10000))
(assert (x2786 x946))
(assert (x2786 x4111))
(assert (x2786 x1659))
(assert (= (=> (and (= x2900 x2498) (= x4589 x4379) (= x1154 x869) (= x3433 x4314) (= x3202 x3365) (= x1592 x2092) (= x461 1) (= x1379 x1778) (= x2906 x327) (= x691 x3164) (= x2756 0) (= x3852 x4029) (= x4212 x1365) (= x3389 x708) (= x649 x1557) (= x3604 x527)) x1388) x3579))
(assert (= x4130 (and x2627 (not x967))))
(assert (< 10000 (x3915 64 x4179 12)))
(assert (x2786 x2377))
(assert (< (x3916 x3435 x1344) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1896 (and x2365 x3087)))
(assert (x2786 x13))
(assert (= (and (not x90) x1725) x3209))
(assert (x2786 x330))
(assert (x2786 x843))
(assert (=> (>= 10000 x2714) (= (x328 x2714) 0)))
(assert (x3829 32))
(assert (x2779 x1646))
(assert (x2786 x1443))
(assert (= (or x5 x3373 x390 x151 x2046 x1460 x2216 x4075 x2928 x3889 x1697 x4100 x4086 x289 x3461 x3759 x3355 x2431 x1259 x984 x485 x303 x4028 x933) x500))
(assert (x2786 x2978))
(assert (x1311 2))
(assert (x2786 x3892))
(assert (= (or x1433 x1983) x2916))
(assert (x2786 x3036))
(assert (not (x1834 (x3915 64 x3242 36))))
(assert (= (=> (and (= 36 x3108) (= x2905 true) (= x3218 false)) x100) x3986))
(assert (=> (>= 10000 x2523) (= (x328 x2523) 0)))
(assert (x2786 x2162))
(assert (=> (<= x1439 10000) (= (x328 x1439) 0)))
(assert (=> (<= x3806 10000) (= (x328 x3806) 0)))
(assert (x2786 x1203))
(assert (= (x4010 (x2903 x3914 x3066 x4129 x3006 x936 x4404)) x3066))
(assert (x2786 x4441))
(assert (x1450 x576))
(assert (x2786 x4279))
(assert (x2786 x2262))
(assert (= (x328 (x3916 x3435 x1344)) (x3916 x3435 x1344)))
(assert (=> (<= x4574 10000) (= (x328 x4574) 0)))
(assert (not (x1834 (x336 x1593 x3216 x381 x3446 x2361 x205 x546))))
(assert (x2786 x1994))
(assert (= x1633 (=> (and (= x3535 (x1673 x4153)) (= x4461 (not (< 32 x315)))) (and (=> (= 32 x1185) x3953) x4461))))
(assert (x2786 x1648))
(assert (=> (<= x1720 10000) (= (x328 x1720) 0)))
(assert (= (x2515 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)) x2531))
(assert (= x1725 (and x1941 x1254)))
(assert (= (and x4540 x4370) x2084))
(assert (= (or x1082 x2590 x4373 x742 x3021) x2935))
(assert (x2786 x2409))
(assert (x2786 x3320))
(assert (x2786 x4259))
(assert (=> (<= x2619 10000) (= (x328 x2619) 0)))
(assert (x1311 x3198))
(assert (x2786 x3037))
(assert (= (and x4190 (not x4216)) x930))
(assert (x149 x2162 256))
(assert (x2786 x1819))
(assert (x2227 x2926))
(assert (= (x1190 (x2903 x3181 x2757 x3204 x670 x4500 x1727)) x3204))
(assert (< (x3916 32 103) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1877))
(assert (x2786 x2465))
(assert (x2786 x4563))
(assert (< (x274 x2961 x782 x3442 x2029) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1359))
(assert (= (and (not x4106) x107) x3836))
(assert (x2786 x4376))
(assert (x2786 x1253))
(assert (= (=> (and (= (>= 224 x3454) x3985) (= (x1377 (- x3403 32)) x3454) (= (x990 (+ x69 x3068)) x528) (= x3403 (x1377 (- x1201 x69))) (= x1201 (x990 (+ 32 x528))) (= (x990 (+ x69 x3068)) x1893)) (and x3985 (=> (and (= x2020 (x990 (+ x69 96))) (= x2685 (x990 (+ 96 x69))) (= x1308 (x3025 x3454 x1443 x569 x1856 x3010)) (= (x2903 x3454 x4392 x2466 x1043 x4469 x3179) x3582) (= x2923 (x1338 0)) (= x410 (x3915 x3454 x305 x4271)) (= (>= 224 x3403) x2533) (= (x990 (+ 96 x69)) x4246) (= x3051 (x274 x3454 x3902 x4269 x254)) (= (x1189 x861) x1335) (= x1757 (x990 (+ 32 x69))) (= x4077 (x990 (+ x69 32))) (= (x1189 x2685) x4469) (= x2466 (x1189 x776)) (= x409 (x990 (+ x69 64))) (= (x1189 x2687) x1043) (= (ite (= x3454 0) x2923 (ite (>= 32 x3454) x3712 (ite (>= 64 x3454) x410 (ite (<= x3454 96) x3051 (ite (>= 128 x3454) x1308 (ite (<= x3454 160) x3582 (ite (<= x3454 192) x772 (ite (>= 224 x3454) x2616 x1090)))))))) x3102) (= x3142 (x990 (+ 128 x69))) (= x622 (x1189 x3142)) (= x1819 (x990 (+ 128 x69))) (= x4269 (x1189 x4077)) (= x4392 (x1189 x69)) (= (x990 (+ 32 x69)) x2490) (= x712 (x990 (+ x69 64))) (= x305 (x1189 x69)) (= x254 (x1189 x3020)) (= x2616 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) (= (x1189 x69) x1443) (= x1856 (x1189 x712)) (= x772 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988)) (= x3010 (x1189 x2020)) (= x1708 (x1189 x346)) (= x4300 (x1189 x3042)) (= (x990 (+ x69 64)) x3020) (= x2362 (x1189 x3873)) (= (x1189 x409) x2933) (= (x1189 x1152) x2988) (= (x1189 x69) x4282) (= x861 (x990 (+ 96 x69))) (= (x990 (+ x69 32)) x4105) (= x62 (x1189 x69)) (= (x1189 x1757) x4271) (= (x1189 x4246) x2068) (= x2566 (x1189 x4105)) (= x3179 (x1189 x1792)) (= x479 (x1189 x272)) (= (x990 (+ x69 160)) x1152) (= x3712 (x3916 x3454 x62)) (= x3904 (x1189 x69)) (= (x1189 x69) x3902) (= (x990 (+ 32 x69)) x776) (= (x990 (+ x69 192)) x3873) (= (x990 (+ x69 128)) x1792) (= x346 (x990 (+ 32 x69))) (= (x990 (+ 64 x69)) x2687) (= (x990 (+ 160 x69)) x3042) (= x709 (x1189 x1819)) (= (x1189 x2490) x569) (= (x990 (+ x69 64)) x272)) (and (=> (and (= (x1189 x4571) x2146) (= (x2520 x3342) x1109) (= x802 (x1189 x69)) (= (x3915 x3403 x802 x1126) x2944) (= (x1189 x3385) x1642) (= (x990 (+ 128 x69)) x4111) (= (x990 (+ 96 x69)) x2526) (= (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462) x870) (= (x990 (+ 160 x69)) x2050) (= (x274 x3403 x3737 x2303 x1556) x2858) (= x3946 (x990 (+ 64 x69))) (= (x1189 x69) x1465) (= x3038 (x990 (+ 192 x69))) (= (x1189 x4111) x2761) (= (x1189 x3946) x4044) (= (x990 (+ 96 x69)) x992) (= (x990 (+ 160 x69)) x3597) (= (x1338 0) x4359) (= (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353) x333) (= (x1189 x2363) x2323) (= x1038 (x3916 x3403 x1726)) (= (x990 (+ 64 x69)) x2837) (= x3045 (x990 (+ x69 96))) (= (x990 (+ x69 32)) x2537) (= x1121 (x990 (+ 32 x2595))) (= x1261 (x990 (+ x69 32))) (= x2158 (x1189 x2636)) (= (x1189 x897) x1126) (= (x990 (+ 32 x69)) x3385) (= x4291 (x1189 x3045)) (= x2780 (x990 (+ x69 32))) (= (x1189 x992) x3362) (= x787 (x1189 x69)) (= (x1189 x69) x4098) (= (x990 (+ 128 x69)) x4571) (= (x1189 x2780) x2303) (= (x2903 x3403 x3097 x2559 x4044 x3362 x2146) x700) (= (x990 (+ x69 32)) x897) (= x1780 (x1189 x826)) (= (x1189 x2837) x1563) (= x523 (x3915 64 x2291 (ite (= 0 x3403) x4359 (ite (>= 32 x3403) x1038 (ite (>= 64 x3403) x2944 (ite (<= x3403 96) x2858 (ite (<= x3403 128) x4310 (ite (<= x3403 160) x700 (ite (<= x3403 192) x870 (ite (<= x3403 224) x333 x1761)))))))))) (= x1556 (x1189 x454)) (= (x990 (+ x69 32)) x826) (= x1726 (x1189 x69)) (= (x990 (+ x69 64)) x907) (= x1772 (x990 (+ x69 128))) (= (x1189 x907) x3272) (= x454 (x990 (+ x69 64))) (= (x1189 x3038) x3353) (= x3750 (x1189 x1772)) (= (x990 (+ x69 32)) x432) (= x2595 (x990 (+ x69 160))) (= (x1189 x2526) x3951) (= x2363 (x990 (+ 96 x69))) (= (x1189 x69) x3097) (= (x3025 x3403 x4098 x4260 x3272 x4291) x4310) (= (x990 (+ x69 64)) x2636) (= x4260 (x1189 x2537)) (= (x1189 x69) x3737) (= x2683 (x1189 x2050)) (= (x1189 x3597) x462) (= (> x1109 0) x614) (= (x1189 x432) x2559)) (and (=> (and (and (= x3157 (x2580 x3299)) (= (< 32 x1109) x1014)) x614) (and (=> (and x1014 (and (= (x2680 x2114) x1967) (= (< 64 x1109) x2921) (= (x990 (+ 32 x1121)) x4371) (= x2114 (x990 (+ x3299 32))))) (and (=> (not x2921) x724) (=> (and x2921 (and (= x4142 (x2418 x2514)) (= x1382 (> x1109 96)) (= (x990 (+ 64 x1121)) x3832) (= x2514 (x990 (+ x3299 64))))) (and (=> x1382 x1536) (=> (not x1382) x724))))) (=> (not x1014) x724))) (=> (not x614) x724))) x2533)))) x1048))
(assert (= x3955 (and (not x1620) x529)))
(assert (= (ite (= 0 x3914) x351 (ite (>= 32 x3914) x1647 (ite (<= x3914 64) x1709 (ite (>= 96 x3914) x2405 (ite (>= 128 x3914) x3928 (ite (<= x3914 160) x1334 (ite (<= x3914 192) x4303 (ite (<= x3914 224) x208 x1277)))))))) (x1190 (x3915 64 x3406 (ite (= x3914 0) x351 (ite (>= 32 x3914) x1647 (ite (>= 64 x3914) x1709 (ite (>= 96 x3914) x2405 (ite (<= x3914 128) x3928 (ite (<= x3914 160) x1334 (ite (>= 192 x3914) x4303 (ite (<= x3914 224) x208 x1277))))))))))))
(assert (= x547 (x4010 (x336 x3435 x547 x872 x1944 x494 x713 x3785))))
(assert (x2786 x302))
(assert (= (x3945 (x3025 x3181 x3905 x3796 x3823 x2008)) x3823))
(assert (x1311 x3366))
(assert (x2786 x4144))
(assert (x4273 x366))
(assert (= (x1190 (x3915 64 x1795 36)) 36))
(assert (x2786 x4496))
(assert (x2786 x155))
(assert (x2786 x1772))
(assert (x2786 x3597))
(assert (=> (>= 10000 x939) (= (x328 x939) 0)))
(assert (x2786 x2650))
(assert (not (x1834 (x3916 x2961 x4544))))
(assert (x2786 x3365))
(assert (x2786 x3855))
(assert (x3153 (+ 31 x3401) 32))
(assert (x2786 x625))
(assert (x2786 x2031))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x198 x4543 x431 x3636 x4004)))
(assert (x2786 x2353))
(assert (x1450 x3366))
(assert (= (x75 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852)) x3435))
(assert (x2786 x954))
(assert (x2786 x4041))
(assert (x1311 256))
(assert (x2786 x2958))
(assert (= (=> (and (= (= 0 x3119) x4183) (or x4183 (not x4183))) x1892) x2005))
(assert (= (x1190 (x274 x3403 x3737 x2303 x1556)) x2303))
(assert (= (and x1464 x3765) x4115))
(assert (x2786 x1521))
(assert (= (and x3292 x4175) x3335))
(assert (= x2158 (x3945 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462))))
(assert (= (and x2773 (not x72)) x3318))
(assert (x3758 x1107))
(assert (= (and x518 x3105) x1878))
(assert (x1311 x2926))
(assert (> (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108) 10000))
(assert (x2227 x3786))
(assert (x3758 x1996))
(assert (< (x3916 x2961 x4544) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2420 (x4010 (x3916 x3859 x2420))))
(assert (x2786 x4375))
(assert (=> (<= x2475 10000) (= (x328 x2475) 0)))
(assert (= (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563) (x328 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563))))
(assert (x2786 x3633))
(assert (= (and (not x449) x2488) x4449))
(assert (=> (>= 10000 x4121) (= 0 (x328 x4121))))
(assert (> (x3915 x3435 x994 x4023) 10000))
(assert (x2786 x2679))
(assert (x2786 x3302))
(assert (x2786 x3169))
(assert (= (=> (and (= x1777 x4) (= x3084 x4170) (= x3917 x2569) (= x3354 x2792) (= x4170 0) (= x1265 x114) (= x1589 x3640) (= x1849 x1651) (= x468 x3994) (= x2070 x4263) (= x646 x3334) (= x2926 x2713) (= x2134 x325) (= x176 x2799) (= x3726 x1369) (= 0 x3387) (= x3519 x2889) (= x3262 2)) x1870) x3688))
(assert (= (x328 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (= x2029 (x3945 (x274 x2961 x782 x3442 x2029))))
(assert (x149 x68 256))
(assert (x2786 x292))
(assert (=> (<= x4347 10000) (= 0 (x328 x4347))))
(assert (x2786 x2775))
(assert (= (x75 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)) x587))
(assert (x2786 x1542))
(assert (= (x2907 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)) x337))
(assert (x2786 x3283))
(assert (= (or (and x4124 x3399) (and x174 x2129) (and x89 x3731)) x289))
(assert (< 10000 (x3915 64 x3419 2)))
(assert (= x1196 (x3945 (x274 x3404 x4099 x1850 x1196))))
(assert (= x2755 (or x989 x3828)))
(assert (= (and x1773 x2660) x125))
(assert (=> (<= x1856 10000) (= 0 (x328 x1856))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x3859 x4126 x2093 x3895 x226 x2266)))
(assert (= x670 (x3945 (x2903 x3181 x2757 x3204 x670 x4500 x1727))))
(assert (x2786 x907))
(assert (= x2341 (and x3529 (not x3572))))
(assert (= (x1190 (x2903 x587 x61 x783 x2151 x4535 x1441)) x783))
(assert (= x2898 (and x678 x1280)))
(assert (= x4485 (and x1605 x4119)))
(assert (=> (>= 10000 x2127) (= 0 (x328 x2127))))
(assert (x2786 x3677))
(assert (= x2374 (and x643 x1618)))
(assert (x2786 x3786))
(assert (x2786 x655))
(assert (x2786 x2968))
(assert (x2786 x4241))
(assert (= 0 (x328 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (x2786 x4228))
(assert (= x2436 x4097))
(assert (= (x4010 (x3915 64 x3812 100)) x3812))
(assert (=> (>= 10000 x3228) (= (x328 x3228) 0)))
(assert (x2786 x2279))
(assert (= (x328 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308)) (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308)))
(assert (= x972 (=> (and (= (x3189 x1410) x3780) (= (not (> x3074 32)) x1785)) (and (=> (= 32 x2917) x4386) x1785))))
(assert (x2786 x1718))
(assert (x740 x2860))
(assert (= (=> (and (= (x2655 x4558 2) x1748) (= x1744 (ite (< 0 x3174) x1748 (x2191 127 x1748))) (= (> x1206 0) x2387) (= x3174 (x2191 1 x4558)) (= (x1377 (- x3174 (mod (ite (< x1744 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1206)) (and (=> (and x2387 (and (= (= 0 x4411) x4067) (= (x2191 1 x4558) x4411))) (and (=> x4067 x1839) (=> (and (= x1891 (< 0 x1744)) (not x4067)) (and (=> (not x1891) x3115) (=> x1891 x1026))))) (=> (not x2387) x463))) x3432))
(assert (= x1871 (and x3309 x331)))
(assert (x2786 x752))
(assert (x2786 x445))
(assert (x2786 x4330))
(assert (> (x3915 64 x2291 (ite (= x3403 0) x4359 (ite (<= x3403 32) x1038 (ite (>= 64 x3403) x2944 (ite (<= x3403 96) x2858 (ite (<= x3403 128) x4310 (ite (>= 160 x3403) x700 (ite (>= 192 x3403) x870 (ite (<= x3403 224) x333 x1761))))))))) 10000))
(assert (=> (<= x2377 10000) (= (x328 x2377) 0)))
(assert (= (x328 (x3915 64 x82 36)) (x3915 64 x82 36)))
(assert (x2786 x3045))
(assert (= x415 (=> (and (= x3227 (not (< 128 x4256))) (= x2403 (x990 (+ x1267 96))) (= (x990 (+ x2729 96)) x2041) (= (x35 x2041) x1318)) (and x1066 x3227))))
(assert (x2786 x1559))
(assert (= (=> (= (= x3552 0) x3624) (and (=> (and (and (= x2836 (= x3539 x1309)) (= x3634 160)) (not x3624)) (and (=> (and x2836 (and (= x4488 x1505) (= false x109) (= (<= x3911 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3963) (>= x1599 1) (= 3628442803 x2464) (<= x2760 127) (= 36 x985) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1505 1000000000)) x2166) (= x1599 (x1912 x1309)) (= (and x3963 x2166) x1020) (= x3044 97822624453686575479804928673988797637476738513438931194560248106084831592448) (>= 127 x2760) (= x4488 x3722) (= x3911 (* 1000000000 x1505)) (= false x1564))) (and (=> (and (and (= x1837 (x2614 x2570)) (<= 0 x3911) (= (x3915 64 x2625 1) x2097) (= (x3915 64 x2625 2) x2570) (= x3586 (< x2115 x1837)) (= x2115 (x1452 x2097)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3911) (= x2022 x3911)) x1020) (and (=> (and (not x3586) (and (= (x1377 (- x2115 x1837)) x1053) (= x3989 (< x2115 x1053)))) (and (=> (and (and (= false x2854) (= x1456 36) (= x3520 true)) x3989) x1701) (=> (and (not x3989) (= (ite (> x2022 x1053) 1 0) x1838)) x3285))) (=> (and x3586 (= (ite x3586 1 0) x1838)) x3285))) (=> (not x1020) x3247))) (=> (and (and (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x2555) (= x3104 false) (>= 1461501637330902918203684832716283019655932542975 x3539) (<= x339 127) (<= x4585 1461501637330902918203684832716283019655932542975) (= x4335 x3539) (<= 1 x4407) (= x628 36) (<= x339 127) (>= x3539 1) (= x2936 false) (= x3839 3628442803) (= (x1912 x4335) x4407) (= x1505 x4279) (= x4424 (= x2625 x4585))) (not x2836)) (and (=> (and x4424 (and (>= 255 x1795) (= (= x1795 255) x1149))) (and (=> (and (and (= false x849) (= 36 x2949) (= true x93)) x1149) x2553) (=> (and (not x1149) (and (= (+ x1795 1) x576) (= x4383 (x2191 255 x576)) (= x1922 (x3915 64 x1795 36)) (= (x2191 255 x576) x3037) (= x518 (= x1191 0)) (= (x1125 x1922) x1191))) (and (=> (and (= x3471 (= 255 x4383)) x518) (and (=> x3471 x2975) (=> (and (not x3471) (and (= (= x4347 255) x1901) (= (x2191 255 x68) x4347) (= x68 (+ x4383 1)) (= x4542 (x600 x2121)) (= (x2191 255 x68) x1734) (<= x4542 1461501637330902918203684832716283019655932542975) (= (x3915 64 x4383 2) x2121))) (and (=> (and (and (= (x881 x697) x3225) (= x3788 (x2191 255 x883)) (= x4430 (x2191 255 x883)) (>= 65535 x3225) (= x2494 (= 255 x3788)) (= x883 (+ 1 x4347)) (= x697 (x3915 64 x4347 6))) (not x1901)) (and (=> (and (and (= x3242 (x2191 255 x1919)) (= (x600 x2309) x2196) (= (+ x3788 1) x1919) (= (= 255 x3242) x556) (= (x2191 255 x1919) x385) (>= 1461501637330902918203684832716283019655932542975 x2196) (= (x3915 64 x3788 2) x2309)) (not x2494)) (and (=> x556 x1412) (=> (and (not x556) (and (= x1721 (= 0 x3594)) (= (x2191 255 x3866) x2742) (= (+ x3242 1) x3866) (= 128 x3457) (= (x2191 255 x3866) x767) (= x2721 (x1125 x3415)) (= (x1912 x4585) x3594) (= x3415 (x3915 64 x3242 36)))) (and (=> (and (not x1721) (and (= x1124 false) (= x3237 (= x4335 x987)) (>= 127 x124) (= x2196 x1645) (= x4520 (x1912 x2625)) (= x1111 false) (= 3812630263 x3766) (= x3225 x695) (<= 1 x4520) (= x4542 x3478) (>= 127 x124) (= x1861 x2721) (= 132 x1988) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x3314) (>= 1461501637330902918203684832716283019655932542975 x987))) (and (=> (and x3237 (= x4577 (< x2721 100000))) (and (=> (and (and (= 0 x3082) (= x3344 1) (= x3713 (x600 x2121)) (= x18 (x600 x2309)) (= (x1125 x3415) x2391) (= (x881 x697) x1050) (= x2742 x1541) (= x4360 x232)) (not x4577)) x2349) (=> (and x4577 (and (= x1325 4) (= x309 true) (= x2286 false))) x3395))) (=> (and (not x3237) (and (= x1325 100) (= true x1643) (= false x4354))) x3395))) (=> (and x1721 (and (= 0 x2949) (= false x1215) (= x1260 true))) x2553))))) (=> x2494 x4451))) (=> x1901 x1102))))) (=> (and (not x518) (= x4119 (= 1 x1191))) (and (=> (and (= x967 (= 2 x1191)) (not x4119)) (and (=> (and x967 (= x1380 (= x4383 255))) (and (=> (and (not x1380) (and (= x1414 (x2191 255 x3235)) (>= 65535 x1924) (= x1924 (x881 x1729)) (= (x3915 64 x4383 6) x1729) (= (= x1414 255) x1322) (= (+ 1 x4383) x3235) (= x4123 (x2191 255 x3235)))) (and (=> (and (not x1322) (and (= (+ x1414 1) x1597) (= x1855 (ite (< 0 x1579) x2353 (x2191 127 x2353))) (= x3740 (x1377 (- x1579 (mod (ite (> 32 x1855) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3140 (x121 x216)) (= (x3915 64 x1414 12) x216) (= (x2191 1 x366) x1579) (= x4351 (x2191 255 x1597)) (>= 18446744073709551615 x3140) (= (> x3740 0) x2701) (= (x2191 255 x1597) x4346) (= x2353 (x2655 x366 2)))) (and (=> (and x2701 (and (= (x2191 1 x366) x3160) (= (= x3160 0) x3982))) (and (=> (and (not x3982) (= x4006 (> x1855 0))) (and (=> (not x4006) x318) (=> x4006 x1234))) (=> (and x3982 (and (or (= 32 x3483) (= 0 x3483)) (= (* 32 (ite (not (= x1855 0)) 1 0)) x3483))) x3432))) (=> (not x2701) x463))) (=> x1322 x4451))) (=> x1380 x2975))) (=> (and (= x811 (= x1191 3)) (not x967)) (and (=> (and (= x819 (= x1191 4)) (not x811)) (and (=> (and (= x1529 (= x1191 5)) (not x819)) (and (=> (and (= (= 255 x4383) x3380) x1529) (and (=> x3380 x2975) (=> (and (and (= x1173 (x3915 64 x4383 36)) (= (+ 1 x4383) x2162) (= (= 255 x1475) x1882) (= (x2191 255 x2162) x1884) (= x2030 (x1125 x1173)) (= (x2191 255 x2162) x1475)) (not x3380)) (and (=> x1882 x1102) (=> (and (not x1882) (and (= (+ 1 x1475) x909) (<= x355 65535) (= x2397 (= 255 x65)) (= (x3915 64 x1475 6) x4087) (= (x2191 255 x909) x3571) (= (x881 x4087) x355) (= x65 (x2191 255 x909)))) (and (=> x2397 x1412) (=> (and (and (= x1635 (x2191 255 x970)) (= x1745 (x1377 (- x2823 (mod (ite (< x315 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1297 (x2191 255 x970)) (= x315 (ite (> x2823 0) x2426 (x2191 127 x2426))) (= (x121 x353) x3406) (<= x3406 18446744073709551615) (= (+ x65 1) x970) (= x353 (x3915 64 x65 12)) (= x193 (< 0 x1745)) (= x2426 (x2655 x366 2)) (= x2823 (x2191 1 x366))) (not x2397)) (and (=> (not x193) x1021) (=> (and (and (= (x2191 1 x366) x1654) (= x3238 (= x1654 0))) x193) (and (=> (and (and (= x341 (< 0 x315)) (= (x3916 32 103) x4153)) (not x3238)) (and (=> (and (= 0 x1185) (not x341)) x3953) (=> x341 x1633))) (=> (and (and (or (= x4213 32) (= 0 x4213)) (= x2142 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639680 x366)) (= x880 (+ 292 x4213)) (= x4213 (* (ite (not (= 0 x315)) 1 0) 32))) x3238) x1915))))))))))) (=> (and (= (= x1191 6) x142) (not x1529)) (and (=> (and (= x2190 (= x1191 7)) (not x142)) (and (=> (and (not x2190) (= x1747 (= 8 x1191))) (and (=> (and x1747 (= x3460 (= 255 x4383))) (and (=> (and (not x3460) (and (= x3862 128) (= (x2191 255 x1178) x764) (= x2018 (x2191 255 x1178)) (= x3409 (= x3664 0)) (= (x1125 x1275) x3921) (= (+ 1 x4383) x1178) (= (x3915 64 x4383 36) x1275) (= (x1912 x4585) x3664))) (and (=> (and x3409 (and (= x2949 0) (= true x1617) (= x2314 false))) x2553) (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x987) (>= 127 x362) (= x3921 x3133) (= x739 (x1912 x2625)) (<= 1 x739) (= x1156 1313998243) (= x4270 36) (= false x4307) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x2833) (<= x362 127) (= (= x987 x4335) x3572) (= x4195 false)) (not x3409)) (and (=> (and (and (= x3188 true) (= x3831 100) (= false x515)) (not x3572)) x1623) (=> (and x3572 (= x1262 (> 100000 x3921))) (and (=> (and (and (= x2245 false) (= x3831 4) (= x4548 true)) x1262) x1623) (=> (and (and (= x232 x3679) (= x1972 1) (= (x1125 x1275) x3111) (= 0 x241) (= x1046 x2018)) (not x1262)) x874))))))) (=> x3460 x2975))) (=> (and (and (= x4383 x4202) (= x232 x29)) (not x1747)) x4521))) (=> (and x2190 (= x2131 (= x4383 255))) (and (=> (and (not x2131) (and (= x343 (x2191 255 x1755)) (= x2035 (x3915 64 x4383 2)) (= x1755 (+ x4383 1)) (= (x600 x2035) x2499) (<= x2499 1461501637330902918203684832716283019655932542975) (= x3159 (x2191 255 x1755)) (= (= 0 x1626) x1791) (= 128 x2700) (= x1626 (x1912 x4585)))) (and (=> (and (not x1791) (and (= (x1912 x2625) x2984) (>= 1461501637330902918203684832716283019655932542975 x987) (= x975 x2499) (= x2876 false) (= x2802 2770781680) (<= x3568 127) (= x1155 (= x987 x4335)) (= x2575 74700126319118050543342327103397598470879858733489597287354029460387927162880) (= false x39) (<= 1 x2984) (>= 127 x3568) (= x1553 36))) (and (=> (and (not x1155) (and (= x4493 false) (= x1041 true) (= x2259 100))) x2690) (=> (and x1155 (and (= x445 (x1753 x2625)) (= x2579 (> x445 0)))) (and (=> (and (and (= x3465 (x1753 x2499)) (= (x1753 x2625) x977) (= (and x3208 x4494) x3678) (= x3651 128) (= x3208 (< (+ x3465 x445) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (>= x977 x445) x4494)) x2579) (and (=> (and (and (= x232 x2813) (= x343 x4330) (= x3981 0) (= x1417 0)) (not x3678)) x1887) (=> (and (and (and (< (+ x3027 x445) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4478 (> x4122 0)) (= x4372 (- x4505 x445)) (= x3027 (x3212 x2499)) (= x1537 x2981) (= (x1753 x2625) x4505) (<= 0 x1537) (= x1537 (+ x3027 x445)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1537)) (or (and x4478 (and (= x3224 x3920) (= x207 x4290) (= x507 (x1095 x2499)) x2296 (= (<= x2723 (x1519 x2625)) x2296) (= x3798 (= (x1519 x2499) x507)) x3798 (= x2723 (x1095 x2625)) (<= x621 4294967295))) (and (and (= x3224 x343) (= x4290 x232)) (not x4478)))) x3678) x2820))) (=> (and (not x2579) (and (= x257 x232) (= x343 x133))) x3897))))) (=> (and x1791 (and (= x2949 0) (= true x2149) (= x3748 false))) x2553))) (=> x2131 x2975))))) (=> (and (= (= x4383 255) x4515) x142) (and (=> x4515 x2975) (=> (and (and (= (+ x4383 1) x804) (= (x2191 255 x804) x2872) (= x2102 (x2191 255 x804)) (= (x3915 64 x4383 36) x12) (= x2262 (x1125 x12)) (= (= 255 x2872) x1660)) (not x4515)) (and (=> x1660 x1102) (=> (and (and (= (x2191 255 x1637) x2658) (= (x1125 x1975) x1504) (= (x3915 64 x2872 36) x1975) (= x2252 (= 255 x2658)) (= x2567 (x2191 255 x1637)) (= x1637 (+ x2872 1))) (not x1660)) (and (=> (and (not x2252) (and (= x1098 (x1125 x1099)) (= (x3915 64 x2658 36) x1099) (= x3339 (x2191 255 x1754)) (= (+ 1 x2658) x1754) (= (x2191 255 x1754) x517) (= x3652 (= x3339 255)))) (and (=> (and (not x3652) (and (= x1306 (x1125 x3384)) (= x1183 (x2191 255 x4228)) (= (+ 1 x3339) x4228) (= (x3915 64 x3339 36) x3384) (= (= x2427 0) x1799) (= x2427 (x1912 x4585)) (= (x2191 255 x4228) x1163) (= 128 x308))) (and (=> (and x1799 (and (= x653 false) (= x2949 0) (= x1360 true))) x2553) (=> (and (not x1799) (and (or (and (= x498 0) (not x3456)) (and x3456 (and (= (x2191 255 x4228) x1473) (= true x1279) (= x3943 (x3236 x4335)) (= x498 100) (= (+ x2262 x964) x918) (= x560 x95) (= x4033 x2059) (= x918 x3729) (= x560 (+ x3943 x2262)) (<= x2198 127) (<= 0 x560) (= x1098 x2746) (= x228 2) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2262 x964)) (= (x1912 x2625) x2963) (= x477 486791245) (<= x918 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 100 x1695) (= x1306 x1302) (<= x2198 127) (= x3109 false) (= x795 (x3847 x4585)) (= x1504 x4033) (= (- x2299 x2262) x1391) (= x2299 (x1753 x4335)) (= x3585 false) (<= x560 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x2262 x3943) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x2963 1) (= (x3328 x4585) x964) (= (- x795 x2262) x1844) (= x2746 x4458) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x4233) (= x1302 x1587) (= false x876) (>= x918 0)))) (and (= x3456 (and x1211 x644)) (= x644 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2262 x2529))) (= x1211 (>= x4141 x2262)) (= (x1753 x4335) x4141) (= (x1753 x4585) x2529)))) x3663))) (=> x3652 x1412))) (=> x2252 x4451))))))))))) (=> (and (= (= 255 x4383) x1039) x819) (and (=> x1039 x2975) (=> (and (not x1039) (and (= (x2191 255 x234) x2175) (= (x3915 64 x4383 36) x1162) (= (x2191 255 x234) x3011) (= x3576 (x1125 x1162)) (= (+ 1 x4383) x234) (= x526 (= x2175 255)))) (and (=> x526 x1102) (=> (and (not x526) (and (= x1486 (x3915 64 x2175 100)) (= (+ x2175 1) x2699) (= (= 255 x1552) x4016) (= (x2191 255 x2699) x1552) (= x512 (x369 x1486)) (= (x2191 255 x2699) x775))) (and (=> (and (not x4016) (and (= x3270 (>= x637 x3576)) (= (< (+ x2880 x3576) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4161) (= x1526 (x2191 255 x1140)) (= (+ x1552 1) x1140) (= x834 (and x4161 x3270)) (= x3518 (x3915 64 x1552 36)) (= (x1125 x3518) x2957) (= (x1753 x4585) x2880) (= (x2191 255 x1140) x342) (= x637 (x1753 x4335)))) (and (=> (and (not x834) (and (= x2949 0) (= x2460 false) (= true x2867))) x2553) (=> x834 x768))) (=> x4016 x4451))))))))) (=> (and (= (= 255 x4383) x3464) x811) (and (=> (and (not x3464) (and (= x4578 (x2191 255 x597)) (= (x1125 x1484) x4026) (= x1484 (x3915 64 x4383 36)) (= x334 (= 255 x4578)) (= x2019 (x2191 255 x597)) (= (+ x4383 1) x597))) (and (=> (and (and (and (= (x1912 x4585) x1826) (= x1376 (+ x4578 1)) (= (x369 x2333) x1285) (= x2868 128) (= (x3915 64 x4578 100) x2333) (= (= x1826 0) x1993) (= x3498 (x2191 255 x1376)) (= (x2191 255 x1376) x808)) (or (and (not x1993) (and (= true x3691) (= x106 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= x974 2) (= false x1225) (= x3846 (x2191 255 x1376)) (= false x4019) (= x4039 x1285) (= x3616 3957931183) (= x4255 false) (= 68 x766) (<= x3559 127) (= true x4533) (= x3924 x4026) (= x436 (x1912 x2625)) (= false x927) (>= x436 1) (= 100 x2949) (>= 127 x3559))) (and x1993 (and (= false x2896) (= true x3526) (= 0 x2949))))) (not x334)) x2553) (=> x334 x1102))) (=> x3464 x2975))))))) (=> (and (= (= x4383 255) x1663) x4119) (and (=> x1663 x2975) (=> (and (not x1663) (and (= (= 255 x3383) x1051) (= (x3915 64 x4383 6) x2086) (= x2261 (+ x4383 1)) (<= x937 65535) (= x3315 (x2191 255 x2261)) (= (x2191 255 x2261) x3383) (= x937 (x881 x2086)))) (and (=> x1051 x4451) (=> (and (and (= x935 (x2655 x366 2)) (= (x3915 64 x3383 12) x2088) (= (x2191 255 x687) x3186) (<= x2790 18446744073709551615) (= x1995 (x1377 (- x286 (mod (ite (< x584 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x4116 (x2191 255 x687)) (= x2790 (x121 x2088)) (= (+ x3383 1) x687) (= x584 (ite (> x286 0) x935 (x2191 127 x935))) (= x1220 (> x1995 0)) (= (x2191 1 x366) x286)) (not x1051)) (and (=> (and x1220 (and (= x2750 (= 0 x3939)) (= (x2191 1 x366) x3939))) (and (=> (and (not x2750) (= x2321 (> x584 0))) (and (=> (not x2321) x2891) (=> x2321 x1971))) (=> (and (and (or (= x4344 0) (= x4344 32)) (= x4344 (* 32 (ite (not (= 0 x584)) 1 0)))) x2750) x4072))) (=> (not x1220) x463))))))))))))) (=> (and (not x4424) (and (= true x2525) (= x2949 0) (= x2300 false))) x2553))))) (=> (and x3624 (and (= x4110 false) (= true x2107) (= x2924 x1999))) x4395))) x4288))
(assert (= x173 (x4010 (x2903 x2730 x173 x1367 x4453 x3919 x625))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x2730 x1434 x676 x4377 x480)))
(assert (= (and x3731 (not x89)) x3739))
(assert (x2786 x2514))
(assert (x740 x1553))
(assert (x2786 x1981))
(assert (x2786 x3799))
(assert (x2786 x1608))
(assert (x794 32 x179))
(assert (= x3914 (x75 (x3915 x3914 x1238 x2407))))
(assert (= x3737 (x4010 (x274 x3403 x3737 x2303 x1556))))
(assert (= x2663 (or x4078 x3052 x2306)))
(assert (x2786 x3476))
(assert (x2786 x1653))
(assert (= x2970 (x2278 (x2903 x1840 x2678 x243 x2159 x2970 x384))))
(assert (x2786 x910))
(assert (=> (<= x1406 10000) (= 0 (x328 x1406))))
(assert (=> (<= x1216 10000) (= (x328 x1216) 0)))
(assert (x2786 x672))
(assert (x2786 x2844))
(assert (=> (<= x79 10000) (= 0 (x328 x79))))
(assert (=> (<= x4585 10000) (= (x328 x4585) 0)))
(assert (=> (>= 10000 x173) (= (x328 x173) 0)))
(assert (= x2241 (x1190 (x3915 x3404 x2827 x2241))))
(assert (x794 32 x4102))
(assert (x2786 x1383))
(assert (= x3859 (x75 (x274 x3859 x3040 x3163 x2127))))
(assert (= (x3025 x3403 x4098 x4260 x3272 x4291) (x328 (x3025 x3403 x4098 x4260 x3272 x4291))))
(assert (= (x1190 (x274 x3914 x2591 x3168 x3784)) x3168))
(assert (= x2961 (x75 (x274 x2961 x782 x3442 x2029))))
(assert (x2786 x3705))
(assert (=> (<= x3339 10000) (= 0 (x328 x3339))))
(assert (= (x1190 (x3915 64 x4179 12)) 12))
(assert (= (x1190 (x274 x3435 x3241 x2482 x1968)) x2482))
(assert (x2786 x3435))
(assert (= (=> (= x884 (= x2204 0)) (and (=> (and (and (= x3108 x1906) (= x3171 true) (= false x508)) x884) x100) (=> (and (and (= x4241 x4474) (= x2987 x2603) (= x2367 x4046) (= x3773 x1607) (= x962 x4376) (= x875 x1681) (= x273 x807) (= x1961 x2366) (= x4413 x1340) (= x2219 x474) (= x2347 x4487) (= x3633 x504) (= x4053 x574) (= x1775 x2994)) (not x884)) x2673))) x941))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x3914 x2565 x3806 x2413 x79)))
(assert (not (x1834 (x3025 x2730 x1434 x676 x4377 x480))))
(assert (x2786 x3450))
(assert (x2786 x139))
(assert (=> (>= 10000 x4453) (= 0 (x328 x4453))))
(assert (x2786 x385))
(assert (x1311 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x2786 x1136))
(assert (=> (>= 10000 x2054) (= (x328 x2054) 0)))
(assert (x2786 x2729))
(assert (x2786 x2973))
(assert (= x3608 (and (not x150) x2330)))
(assert (x1311 x1597))
(assert (< (x3915 x3914 x1238 x2407) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1834 (x3916 x3403 x1726))))
(assert (x2786 x4309))
(assert (x794 32 (ite (not (= x584 0)) 1 0)))
(assert (x2786 x1385))
(assert (x2786 x1843))
(assert (x2786 x3831))
(assert (= (x3945 (x3025 x587 x2784 x3637 x2581 x2116)) x2581))
(assert (x2786 x861))
(assert (< 10000 (x3915 64 x2872 36)))
(assert (= (x75 (x336 x198 x2739 x2475 x511 x460 x801 x1951)) x198))
(assert (x2786 x898))
(assert (not (x1834 (x3915 64 x2625 1))))
(assert (> (x3915 x1840 x4015 x694) 10000))
(assert (= x3577 (=> (and (= true x392) (= x1389 false) (= x3108 36)) x100)))
(assert (= x3223 (and (not x1627) x3439)))
(assert (x2786 x1441))
(assert (> (x3025 x1840 x561 x4356 x901 x4480) 10000))
(assert (x2786 x3874))
(assert (= (or x438 x2211) x1903))
(assert (x1834 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (= (x2515 (x336 x1593 x3216 x381 x3446 x2361 x205 x546)) x205))
(assert (x2786 x2559))
(assert (= (x4516 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)) x737))
(assert (x1311 x1748))
(assert (= x2452 x3346))
(assert (x2786 x2991))
(assert (x2786 x3133))
(assert (= (and x1363 (not x3749)) x395))
(assert (< (x3915 64 x363 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x3738))
(assert (< 10000 (x274 x3859 x3040 x3163 x2127)))
(assert (x3758 x2634))
(assert (=> (<= x1309 10000) (= 0 (x328 x1309))))
(assert (x1450 x3853))
(assert (x2786 x2881))
(assert (x2786 x959))
(assert (x2786 x694))
(assert (x2786 x116))
(assert (= (or x134 x825) x823))
(assert (x2786 x1434))
(assert (x2091 (+ 31 x3401)))
(assert (= x3149 (and x1372 (not x4478))))
(assert (x2786 x1121))
(assert (x2786 x3996))
(assert (= (and x2304 x2663) x1370))
(assert (x2786 x1952))
(assert (= (x75 (x274 x3181 x1739 x2139 x368)) x3181))
(assert (x2786 x788))
(assert (= x622 (x2515 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988))))
(assert (x2786 x2741))
(assert (> (x3915 64 x4578 100) 10000))
(assert (= (x1190 (x3025 x587 x2784 x3637 x2581 x2116)) x3637))
(assert (> (x3025 x587 x2784 x3637 x2581 x2116) 10000))
(assert (=> (<= x3442 10000) (= 0 (x328 x3442))))
(assert (= x3098 (x4010 (x274 x198 x3098 x1628 x156))))
(assert (< (x3025 x587 x2784 x3637 x2581 x2116) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x4261))
(assert (x2786 x4243))
(assert (x2786 x713))
(assert (x1450 x4584))
(assert (x2786 x3994))
(assert (not (x1834 (x3025 x3859 x4167 x2034 x2194 x1406))))
(assert (x2786 x297))
(assert (x2786 x2220))
(assert (x2786 x240))
(assert (=> (>= 10000 x3446) (= 0 (x328 x3446))))
(assert (=> (>= 10000 x1475) (= (x328 x1475) 0)))
(assert (= x4463 (x4010 (x3916 x3914 x4463))))
(assert (x2786 x4488))
(assert (= x3914 (x75 (x2903 x3914 x3066 x4129 x3006 x936 x4404))))
(assert (= (x2515 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)) x2176))
(assert (x2786 x1850))
(assert (> (x274 x3403 x3737 x2303 x1556) 10000))
(assert (x740 x766))
(assert (= (x1190 (x3025 x3435 x34 x2931 x4309 x2071)) x2931))
(assert (x3153 x3786 2))
(assert (x1834 3812630263))
(assert (x2786 x1874))
(assert (=> (<= x1435 10000) (= (x328 x1435) 0)))
(assert (= (and x2856 x819) x4339))
(assert (= x1795 (x4010 (x3915 64 x1795 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 x1593 x3405 x1171)))
(assert (> (x274 x3181 x1739 x2139 x368) 10000))
(assert (= (x75 (x3916 x198 x2370)) x198))
(assert (=> (<= x1794 10000) (= (x328 x1794) 0)))
(assert (x2786 x3637))
(assert (= x1556 (x3945 (x274 x3403 x3737 x2303 x1556))))
(assert (= x1870 (=> (and (= x2481 x3387) (= x2889 x1877) (= x1651 x1490) (= x730 x2799) (= x1369 x3558) (= x2161 x646) (= x161 x2713) (= x1777 x4390) (= x4380 x2569) (= x2057 x3994) (= x3084 x4120) (= x3700 x4263) (= x3640 x2824) (= x1265 x47) (= x3354 x558) (= x3156 x325)) x2200)))
(assert (x2786 x1599))
(assert (=> (>= 10000 x2466) (= (x328 x2466) 0)))
(assert (< 10000 (x3915 64 x4383 6)))
(assert (=> (>= 10000 x2001) (= (x328 x2001) 0)))
(assert (x149 x3720 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1783))
(assert (x2786 x883))
(assert (= x2820 (=> (and (or (and (and (= x2922 (+ x2472 x4316)) (<= x2922 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2472 (ite (= x4122 0) x445 0)) (<= 0 x2922) (= (x2461 x2499) x211) (= x1827 (- x211 x2472)) (= x3224 x4330) (= x3981 x621) (< (+ x2472 x4316) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2922 x580) (= x4290 x2813) (= (x2257 x2625) x4316) (= x4122 x1417)) x3838) (and (not x3838) (and (= x3224 x4330) (= x4290 x2813) (= x621 x3981) (= x1417 x4122)))) (= (= 0 x4122) x3838)) x1887)))
(assert (x2786 x1473))
(assert (x2786 x4194))
(assert (x2786 x2424))
(assert (= (and x2270 x1706) x3316))
(assert (= (x1190 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) x2566))
(assert (x2786 x1764))
(assert (x2786 x2011))
(assert (= x724 (=> (and (= x1113 (x990 (+ x1121 x3595))) (= x642 (x990 (+ 32 x1113))) (= (< 0 x297) x2502) (= x4441 (x990 (+ x1121 x1109))) (= (x990 (+ 32 x1261)) x1888) (= x297 (x4118 x1386)) (= x252 (x990 (+ 31 x1109))) (= (x990 (+ 32 x1888)) x1565) (= x4522 (x1377 (- x1113 x69))) (= x3595 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x252))) (and (=> (and x2502 (and (= x3947 (> x297 32)) (= x3755 (x4030 x2729)))) (and (=> (not x3947) x2828) (=> (and (and (= x2308 (x990 (+ x642 32))) (= (x990 (+ 32 x2729)) x2881) (= x4148 (< 64 x297)) (= (x540 x2881) x660)) x3947) (and (=> (and x4148 (and (= x1052 (< 96 x297)) (= x2965 (x990 (+ 64 x2729))) (= x4245 (x990 (+ x642 64))) (= (x4014 x2965) x3512))) (and (=> (not x1052) x2828) (=> x1052 x4199))) (=> (not x4148) x2828))))) (=> (not x2502) x2828)))))
(assert (x1450 x1376))
(assert (=> (<= x3362 10000) (= 0 (x328 x3362))))
(assert (= x2934 (x4010 (x3915 x198 x2934 x960))))
(assert (x2091 (+ x3859 31)))
(assert (x2786 x4093))
(assert (x2786 x4542))
(assert (= (x75 (x3916 32 x159)) 32))
(assert (x2786 x1866))
(assert (x2786 x1183))
(assert (x2786 x775))
(assert (x2786 x4308))
(assert (not (x1834 (x3915 64 x2522 3))))
(assert (x2786 x1365))
(assert (= (and x395 x2910) x3056))
(assert (x2786 x2541))
(assert (= (x75 (x3916 x1593 x1233)) x1593))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3916 x3639 x2679)))
(assert (x740 x3831))
(assert (x2786 x4391))
(assert (=> (<= x3784 10000) (= 0 (x328 x3784))))
(assert (= (=> (and (= x4490 true) (= x2949 36) (= false x1240)) x2553) x2975))
(assert (= (x3915 64 x4347 6) (x328 (x3915 64 x4347 6))))
(assert (x2091 256))
(assert (= x1495 (x4010 (x3025 x3639 x1495 x3799 x2775 x1044))))
(assert (x2786 x2801))
(assert (= x4051 (or (and x2610 x2061) (and x2969 x4115))))
(assert (x2786 x3490))
(assert (x2786 x4467))
(assert (=> (>= 10000 x4004) (= 0 (x328 x4004))))
(assert (= (or x4200 x1042 x4172 x4218 x3492) x1804))
(assert (> (x3916 32 103) 10000))
(assert (=> (<= x3750 10000) (= 0 (x328 x3750))))
(assert (= x2361 (x2278 (x336 x1593 x3216 x381 x3446 x2361 x205 x546))))
(assert (=> (>= 10000 x3799) (= (x328 x3799) 0)))
(assert (> (x336 x2730 x604 x959 x1794 x3560 x2991 x3575) 10000))
(assert (x2786 x3544))
(assert (x2786 x1838))
(assert (= x156 (x3945 (x274 x198 x3098 x1628 x156))))
(assert (< 10000 (x3915 x3404 x2827 x2241)))
(assert (= x1831 (and (not x4139) x3252)))
(assert (x2786 x2564))
(assert (x2786 x3625))
(assert (x2786 x2665))
(assert (x2786 x2691))
(assert (=> (<= x2559 10000) (= (x328 x2559) 0)))
(assert (x2786 x1148))
(assert (not (x1834 (x3915 64 x355 7))))
(assert (x2786 x2150))
(assert (x2786 x4284))
(assert (x1450 x1202))
(assert (=> (>= 10000 x3575) (= 0 (x328 x3575))))
(assert (= x2315 (x4010 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737))))
(assert (= x2330 (or x4230 x3674)))
(assert (= (x2278 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069)) x2357))
(assert (= x3353 (x4516 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353))))
(assert (x2786 x2308))
(assert (=> (>= 10000 x670) (= (x328 x670) 0)))
(assert (x2786 x68))
(assert (= x4084 x1846))
(assert (= (and x3252 x4139) x2047))
(assert (not (x1834 (x336 x198 x2739 x2475 x511 x460 x801 x1951))))
(assert (x2786 x2906))
(assert (x2786 x2868))
(assert (x794 32 (ite (not (= 0 x3074)) 1 0)))
(assert (< 10000 (x3025 x1593 x1348 x1765 x3525 x1232)))
(assert (x1311 x4517))
(assert (x2786 x4025))
(assert (x2786 x1029))
(assert (= x1642 (x1190 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462))))
(assert (> (x3915 64 x4166 36) 10000))
(assert (= (or (and (not x833) x657) x3094) x19))
(assert (> (x274 x312 x2100 x135 x1608) 10000))
(assert (=> (>= 10000 x4320) (= 0 (x328 x4320))))
(assert (not (x1834 (x274 x3639 x472 x3370 x1075))))
(assert (x1450 x3274))
(assert (= x4363 (x2907 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069))))
(assert (x2786 x1384))
(assert (x1834 1461501637330902918203684832716283019655932542975))
(assert (=> (<= x3880 10000) (= (x328 x3880) 0)))
(assert (= x4218 (and (not x2504) x4369)))
(assert (x1450 x1140))
(assert (x2786 x2648))
(assert (x2786 x1459))
(assert (x2786 x4102))
(assert (x2786 x964))
(assert (=> (<= x3788 10000) (= (x328 x3788) 0)))
(assert (x2786 x135))
(assert (=> (<= x1879 10000) (= 0 (x328 x1879))))
(assert (x2395 x2078))
(assert (x2786 x1677))
(assert (x1834 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (= (x1190 (x3025 x3403 x4098 x4260 x3272 x4291)) x4260))
(assert (= (x1190 (x3915 64 x1542 2)) 2))
(assert (=> (<= x431 10000) (= (x328 x431) 0)))
(assert (x2786 x3282))
(assert (not (x1834 (x274 x3914 x2591 x3168 x3784))))
(assert (= x994 (x4010 (x3915 x3435 x994 x4023))))
(assert (x2786 x3668))
(assert (= (x3945 (x3025 x3914 x2565 x3806 x2413 x79)) x2413))
(assert (= (x2278 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353)) x2323))
(assert (not (x1834 (x2903 x312 x1352 x3445 x324 x1899 x1600))))
(assert (x2786 x3733))
(assert (x2786 x4314))
(assert (=> (<= x2801 10000) (= (x328 x2801) 0)))
(assert (x2786 x1245))
(assert (= (x4010 (x3915 64 x1818 12)) x1818))
(assert (x2786 x4335))
(assert (=> (<= x2194 10000) (= 0 (x328 x2194))))
(assert (= (x4010 (x3916 32 x159)) x159))
(assert (x2786 x2784))
(assert (x2786 x736))
(assert (=> (>= 10000 x3887) (= 0 (x328 x3887))))
(assert (x2091 x1193))
(assert (x2786 x3805))
(assert (= (and x1935 (not x1743)) x322))
(assert (= (=> (and (= x2949 x3336) (= 2 x3479) (= x232 x1712) (= x1712 x419) (= x3386 0)) x3701) x2553))
(assert (x2786 x994))
(assert (x149 x909 256))
(assert (= (or x1229 (and (not x2062) x4425)) x284))
(assert (x1311 x883))
(assert (< 10000 (x2903 x2730 x173 x1367 x4453 x3919 x625)))
(assert (x2786 x3594))
(assert (= x4535 (x2278 (x2903 x587 x61 x783 x2151 x4535 x1441))))
(assert (x2786 x1244))
(assert (x2786 x1670))
(assert (x2786 x4578))
(assert (x740 x1084))
(assert (= x2211 (and x2998 x577)))
(assert (= (=> (and (= 0 x4284) (= true x1247) (= false x640)) x1969) x3888))
(assert (=> (>= 10000 x2954) (= (x328 x2954) 0)))
(assert (= (=> (and (= x836 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1036)) (= x3760 (> x2368 0)) (>= x69 1) (> x69 x3805) (= x1036 (+ 63 x1084)) (<= x3805 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x990 (+ x3805 x836)) x69) (<= x3805 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1509 (x990 (+ x3805 32))) (<= x3805 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (not x3760) x16) (=> x3760 x3175))) x1685))
(assert (= x255 (and x1973 x4002)))
(assert (= (x4010 (x274 x3859 x3040 x3163 x2127)) x3040))
(assert (= (x3025 x3181 x3905 x3796 x3823 x2008) (x328 (x3025 x3181 x3905 x3796 x3823 x2008))))
(assert (x2786 x762))
(assert (= (x4010 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233)) x2959))
(assert (= (x1190 (x3915 64 x1552 36)) 36))
(assert (x2786 x2142))
(assert (x2786 x1539))
(assert (=> (>= 10000 x2362) (= 0 (x328 x2362))))
(assert (x2786 x11))
(assert (x3758 x68))
(assert (x2786 x2682))
(assert (x2786 x1378))
(assert (x3758 x1310))
(assert (= 0 (x328 35477284059277649309253622239531857712935939630608236286772267603529442882419)))
(assert (= x2080 (and x3807 (not x3989))))
(assert (= x2146 (x2515 (x2903 x3403 x3097 x2559 x4044 x3362 x2146))))
(assert (x2786 x584))
(assert (x2786 x3539))
(assert (x2786 x3145))
(assert (= x1388 (=> (and (= x558 x327) (= x2161 x869) (= x4380 x3202) (= x730 x3852) (= x3389 x47) (= x1877 x3433) (= x161 x1365) (= x2481 x461) (= x1379 x1490) (= x691 x3156) (= x2057 x1557) (= x4589 x2824) (= x4120 x1592) (= x3558 x2756) (= x4390 x2900) (= x527 x3700)) x2200)))
(assert (= (x328 (x3915 64 x2150 (ite (= x3181 0) x213 (ite (>= 32 x3181) x662 (ite (>= 64 x3181) x2231 (ite (<= x3181 96) x2495 (ite (>= 128 x3181) x1535 (ite (<= x3181 160) x146 (ite (<= x3181 192) x4073 (ite (<= x3181 224) x2993 x1478)))))))))) (x3915 64 x2150 (ite (= 0 x3181) x213 (ite (<= x3181 32) x662 (ite (<= x3181 64) x2231 (ite (>= 96 x3181) x2495 (ite (<= x3181 128) x1535 (ite (<= x3181 160) x146 (ite (<= x3181 192) x4073 (ite (>= 224 x3181) x2993 x1478)))))))))))
(assert (=> (<= x3996 10000) (= (x328 x3996) 0)))
(assert (x3153 x2070 2))
(assert (x2786 x974))
(assert (x2786 x576))
(assert (< 10000 (x2903 x2961 x1003 x185 x2848 x2564 x4031)))
(assert (x2786 x4421))
(assert (= x3545 (and x3308 (not x2672))))
(assert (= (x4010 (x3916 x3435 x1344)) x1344))
(assert (= (x2278 (x3025 x3639 x1495 x3799 x2775 x1044)) x1044))
(assert (x3758 x4228))
(assert (= (and (not x3337) x2434) x1489))
(assert (x2786 x4262))
(assert (x2786 x2827))
(assert (= (and x227 (not x1791)) x2920))
(assert (x2786 x792))
(assert (= (x3945 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)) x944))
(assert (< 10000 (x3915 x198 x2934 x960)))
(assert (x2786 x3946))
(assert (x2786 x3775))
(assert (x2786 x3618))
(assert (x1311 x3629))
(assert (=> (>= 10000 x2176) (= (x328 x2176) 0)))
(assert (= (x2907 (x336 x198 x2739 x2475 x511 x460 x801 x1951)) x1951))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x2961 x1003 x185 x2848 x2564 x4031)))
(assert (= x1216 (x2515 (x336 x312 x4207 x1 x506 x1403 x1216 x1181))))
(assert (=> (<= x3406 10000) (= 0 (x328 x3406))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2522 3)))
(assert (= x676 (x1190 (x3025 x2730 x1434 x676 x4377 x480))))
(assert (= (x274 x3435 x3241 x2482 x1968) (x328 (x274 x3435 x3241 x2482 x1968))))
(assert (= (x4010 (x3915 64 x1179 6)) x1179))
(assert (= (x2278 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563)) x961))
(assert (not (x1834 (x3025 x1593 x1348 x1765 x3525 x1232))))
(assert (=> (<= x2337 10000) (= 0 (x328 x2337))))
(assert (= (=> (= x458 (= x3119 0)) (and (=> (and x458 (= 0 x3119)) x3275) (=> (and (not x458) (and (= (< x4467 32) x270) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2762) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2762) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2762)) (= x2904 (x990 (+ 32 x2762))) (not (= x2762 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (> x2904 x2762) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2762)) (<= x2762 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (and (=> (and (= x774 (x1373 x2762)) (not x270)) x3275) (=> x270 x704))))) x1892))
(assert (x2786 x1746))
(assert (= (x328 35425322552009646506518338594398286811668114190755561836384294568426616127488) 0))
(assert (= (and x3977 x1262) x2268))
(assert (x2786 x580))
(assert (x149 x2070 2))
(assert (=> (<= x4180 10000) (= 0 (x328 x4180))))
(assert (x2786 x4466))
(assert (< (x3915 x2730 x3221 x1879) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x922 (and x4339 (not x1039))))
(assert (x740 x1988))
(assert (=> (<= x1653 10000) (= 0 (x328 x1653))))
(assert (x2786 x3823))
(assert (= x959 (x1190 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575))))
(assert (x2786 x2175))
(assert (x2786 x2658))
(assert (x3758 x2040))
(assert (x2786 x1024))
(assert (= (and x1280 (not x678)) x4091))
(assert (= (x328 (+ x268 1)) (x328 x268)))
(assert (x1450 x2926))
(assert (> (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875) 10000))
(assert (x2786 x978))
(assert (= (x3915 64 x2150 (ite (= x587 0) x1514 (ite (>= 32 x587) x1911 (ite (>= 64 x587) x3957 (ite (>= 96 x587) x3591 (ite (<= x587 128) x3734 (ite (<= x587 160) x411 (ite (>= 192 x587) x4491 (ite (<= x587 224) x3845 x3538))))))))) (x328 (x3915 64 x2150 (ite (= 0 x587) x1514 (ite (<= x587 32) x1911 (ite (>= 64 x587) x3957 (ite (>= 96 x587) x3591 (ite (<= x587 128) x3734 (ite (>= 160 x587) x411 (ite (>= 192 x587) x4491 (ite (<= x587 224) x3845 x3538))))))))))))
(assert (x2786 x2501))
(assert (= (x75 (x3915 64 x3519 36)) 64))
(assert (x740 x3984))
(assert (=> (<= x3179 10000) (= (x328 x3179) 0)))
(assert (= (x4010 (x3916 x2961 x4544)) x4544))
(assert (=> (>= 10000 x3181) (= 0 (x328 x3181))))
(assert (= x48 (x1190 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104))))
(assert (< 10000 (x3915 64 x3406 (ite (= x3914 0) x351 (ite (>= 32 x3914) x1647 (ite (>= 64 x3914) x1709 (ite (<= x3914 96) x2405 (ite (<= x3914 128) x3928 (ite (<= x3914 160) x1334 (ite (>= 192 x3914) x4303 (ite (<= x3914 224) x208 x1277)))))))))))
(assert (x1450 x626))
(assert (x2786 x1323))
(assert (x2786 x1989))
(assert (x2786 x3401))
(assert (= (x3945 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955)) x60))
(assert (x2786 x4012))
(assert (= (x4010 (x2903 x3859 x4126 x2093 x3895 x226 x2266)) x4126))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955)))
(assert (x2786 x2537))
(assert (x2786 x2511))
(assert (=> (<= x3006 10000) (= 0 (x328 x3006))))
(assert (x2786 x1135))
(assert (=> (>= 10000 x1181) (= (x328 x1181) 0)))
(assert (x2786 x3644))
(assert (x740 x2042))
(assert (= (x2515 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554)) x2378))
(assert (x2786 x1232))
(assert (= 64 (x75 (x3915 64 x3788 2))))
(assert (x2786 x3993))
(assert (> (x2903 x198 x2377 x2801 x3779 x2284 x4064) 10000))
(assert (= 7 (x1190 (x3915 64 x355 7))))
(assert (x2786 x1078))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069)))
(assert (x1311 x804))
(assert (not (x1834 (x2903 x2730 x173 x1367 x4453 x3919 x625))))
(assert (x2786 x3909))
(assert (x2786 x799))
(assert (= x3078 (or x2096 x1857)))
(assert (x2786 x4299))
(assert (= (x2278 (x3025 x198 x4543 x431 x3636 x4004)) x4004))
(assert (= x4108 (x4516 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108))))
(assert (x2786 x2146))
(assert (= (and x1100 x1806) x3683))
(assert (x740 x4467))
(assert (< (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or (and x1055 x3209) (and x2861 x97) (and x2620 x74) (and x44 x370) (and x1236 x2940)) x984))
(assert (x2786 x4029))
(assert (< (x3915 64 x3419 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x252))
(assert (x149 x1646 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2349 (=> (and (= (= 0 x3344) x2062) (or x2062 (not x2062))) x1664)))
(assert (x2786 x1995))
(assert (x2786 x3251))
(assert (= (and x529 x1620) x2061))
(assert (= (and x1100 (not x1806)) x3820))
(assert (< (x274 x1840 x94 x168 x450) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1834 (x3915 64 x1475 6))))
(assert (x2786 x1642))
(assert (=> (>= 10000 x185) (= (x328 x185) 0)))
(assert (x2786 x3882))
(assert (= x312 (x75 (x3025 x312 x2752 x483 x3825 x2774))))
(assert (x2786 x1925))
(assert (= x224 (and x1415 x1692)))
(assert (x2786 x3495))
(assert (= (and (not x1052) x3291) x742))
(assert (x3758 x970))
(assert (=> (>= 10000 x547) (= (x328 x547) 0)))
(assert (x2786 x547))
(assert (x2786 x374))
(assert (= x446 (and x142 x490)))
(assert (= (x328 (x3915 64 x3419 6)) (x3915 64 x3419 6)))
(assert (=> (>= 10000 x1244) (= 0 (x328 x1244))))
(assert (= x2891 x4072))
(assert (not (x1834 (x3915 64 x3493 10))))
(assert (> (x3025 x3403 x4098 x4260 x3272 x4291) 10000))
(assert (= x1690 (=> (and (= true x1883) (= x1241 false) (= x3108 36)) x100)))
(assert (=> (<= x1628 10000) (= 0 (x328 x1628))))
(assert (= x4230 (or x500 x2749)))
(assert (x2786 x3440))
(assert (x2786 x1282))
(assert (= (x4010 (x2903 x3435 x1326 x4159 x1918 x655 x4296)) x1326))
(assert (x2786 x511))
(assert (x794 32 (ite (not (= x3364 0)) 1 0)))
(assert (x2786 x3383))
(assert (x2786 x2874))
(assert (= (x328 36180046632115354981904271164172418022085455641023445553456023893925156618240) 0))
(assert (< 10000 (x3915 64 x4383 2)))
(assert (= (and x4148 x3901) x3291))
(assert (x2091 x366))
(assert (= (and x1804 (not x1387)) x906))
(assert (= x625 (x2515 (x2903 x2730 x173 x1367 x4453 x3919 x625))))
(assert (x2786 x1050))
(assert (< (x3916 x3181 x1204) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x149 x3366 256))
(assert (= x655 (x2278 (x2903 x3435 x1326 x4159 x1918 x655 x4296))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x1840 x561 x4356 x901 x4480)))
(assert (x2786 x95))
(assert (=> (<= x851 10000) (= (x328 x851) 0)))
(assert (x2786 x1493))
(assert (x2786 x3519))
(assert (= x4453 (x3945 (x2903 x2730 x173 x1367 x4453 x3919 x625))))
(assert (x2786 x3027))
(assert (x2786 x2136))
(assert (= (and x2589 x3229) x390))
(assert (x2786 x1959))
(assert (=> (>= 10000 x2970) (= (x328 x2970) 0)))
(assert (x149 x3297 256))
(assert (x2786 x766))
(assert (= (x328 (x3915 x2961 x3880 x3013)) (x3915 x2961 x3880 x3013)))
(assert (not (x1834 (x3916 x2730 x1539))))
(assert (=> (>= 10000 x2158) (= (x328 x2158) 0)))
(assert (= (x1190 (x3915 x3859 x2465 x3694)) x3694))
(assert (x2786 x77))
(assert (x2786 x953))
(assert (x1311 x3853))
(assert (= x587 (x75 (x3025 x587 x2784 x3637 x2581 x2116))))
(assert (= 0 (x328 1000000000)))
(assert (x2227 x366))
(assert (=> (<= x2008 10000) (= (x328 x2008) 0)))
(assert (x2786 x1263))
(assert (= 0 (x328 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (= (x4010 (x3915 x2730 x3221 x1879)) x3221))
(assert (=> (<= x954 10000) (= (x328 x954) 0)))
(assert (= (and x3580 x3792) x1013))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2175 100)))
(assert (= (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353) (x328 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353))))
(assert (x2786 x435))
(assert (x1311 x1107))
(assert (x2786 x3061))
(assert (= (x1190 (x3915 64 x82 36)) 36))
(assert (x149 x1376 256))
(assert (x149 x576 256))
(assert (x1311 x2162))
(assert (x2786 x2356))
(assert (< (x3916 x1593 x1233) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x3405))
(assert (= (and x2835 x1382) x3654))
(assert (= (x328 486791245) 0))
(assert (x2786 x3074))
(assert (x2786 x1768))
(assert (x2786 x527))
(assert (x149 x4558 256))
(assert (x2786 x2698))
(assert (> (x3025 x198 x4543 x431 x3636 x4004) 10000))
(assert (x2786 x4500))
(assert (x2786 x2815))
(assert (=> (>= 10000 x2691) (= 0 (x328 x2691))))
(assert (x2786 x3493))
(assert (x2786 x1864))
(assert (= (x4010 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)) x3166))
(assert (x1311 128))
(assert (=> (<= x483 10000) (= 0 (x328 x483))))
(assert (x2786 x1326))
(assert (x2786 x2360))
(assert (< 10000 (x336 x198 x2739 x2475 x511 x460 x801 x1951)))
(assert (= x716 (and x3680 x3237)))
(assert (< (x3915 64 x3493 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x3873))
(assert (x2786 x3895))
(assert (x2786 x2752))
(assert (x2786 x1626))
(assert (= (=> (and (= x3391 (= 0 x1078)) (or (not x3391) x3391)) x3934) x4238))
(assert (= x3339 (x4010 (x3915 64 x3339 36))))
(assert (x1311 x252))
(assert (x149 x1919 256))
(assert (x2786 x1352))
(assert (x2786 x3686))
(assert (x2786 x549))
(assert (x2786 x2889))
(assert (=> (<= x2953 10000) (= (x328 x2953) 0)))
(assert (= x2659 (and x1114 x754)))
(assert (x2786 x660))
(assert (=> (<= x3738 10000) (= (x328 x3738) 0)))
(assert (= (and (not x1165) x4056) x134))
(assert (=> (>= 10000 x3823) (= 0 (x328 x3823))))
(assert (x3829 (ite (not (= x3364 0)) 1 0)))
(assert (= x4055 (and x3190 x4067)))
(assert (= x2422 (x4010 (x3915 64 x2422 36))))
(assert (x149 x1597 256))
(assert (x149 x4558 2))
(assert (x149 x4517 128))
(assert (= (=> (= x10 (not (< 32 x3086))) (and x10 x725)) x3032))
(assert (x2786 x4104))
(assert (= (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362) (x328 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362))))
(assert (x1311 x1860))
(assert (x2786 x4223))
(assert (x2786 x1204))
(assert (x2786 x1309))
(assert (=> (<= x2934 10000) (= 0 (x328 x2934))))
(assert (x1311 x2426))
(assert (= (and x323 (not x2485)) x2861))
(assert (x2786 x2391))
(assert (= x494 (x2278 (x336 x3435 x547 x872 x1944 x494 x713 x3785))))
(assert (x2786 x2739))
(assert (x2786 x3505))
(assert (= x658 (x2515 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233))))
(assert (x2786 x2176))
(assert (x2786 x1657))
(assert (= (and x1404 x3541) x3540))
(assert (=> (>= 10000 x1233) (= 0 (x328 x1233))))
(assert (x2786 x3245))
(assert (x2786 x276))
(assert (x1311 x2040))
(assert (x2786 x2486))
(assert (x2786 x1906))
(assert (x2786 x2710))
(assert (x2786 x4039))
(assert (x2786 x1552))
(assert (=> (<= x546 10000) (= 0 (x328 x546))))
(assert (x2786 x2683))
(assert (x3153 (+ 31 x3859) 32))
(assert (= (x4010 (x3916 x3403 x1726)) x1726))
(assert (= x587 (x75 (x3916 x587 x487))))
(assert (x2786 x3419))
(assert (< (x3025 x3639 x1495 x3799 x2775 x1044) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3916 32 104) 10000))
(assert (x2786 x1176))
(assert (x2786 x2370))
(assert (x2786 x2754))
(assert (x2786 x2762))
(assert (= (x4010 (x3915 x587 x3996 x1809)) x3996))
(assert (= 64 (x75 (x3915 64 x793 11))))
(assert (x2786 x4096))
(assert (= (or (and x2758 x1307) (and x773 x4070)) x3210))
(assert (= x2054 (x4010 (x3915 64 x2054 10))))
(assert (=> (>= 10000 x4023) (= (x328 x4023) 0)))
(assert (= (x3915 64 x3339 36) (x328 (x3915 64 x3339 36))))
(assert (=> (>= 10000 x2407) (= 0 (x328 x2407))))
(assert (x2786 x1180))
(assert (x2786 x3038))
(assert (=> (<= x2513 10000) (= (x328 x2513) 0)))
(assert (= (=> (and (= x1821 (x1912 x2792)) (= (= x1821 0) x2589)) (and (=> (and x2589 (and (= 0 x3108) (= x1301 true) (= false x20))) x100) (=> (not x2589) x23))) x632))
(assert (= x2216 (and (not x996) x1679)))
(assert (= (x4010 (x3915 64 x4383 36)) x4383))
(assert (x2786 x2961))
(assert (=> (>= 10000 x2784) (= 0 (x328 x2784))))
(assert (= x258 (or x822 x58)))
(assert (=> (<= x2848 10000) (= (x328 x2848) 0)))
(assert (= 64 (x75 (x3915 64 x1179 6))))
(assert (x2786 x2696))
(assert (x2786 x1798))
(assert (= x3163 (x1190 (x274 x3859 x3040 x3163 x2127))))
(assert (= x1769 (and (not x3349) x1986)))
(assert (= x86 (or x1841 (and (not x3842) x1639))))
(assert (= (ite (= x3403 0) x4359 (ite (>= 32 x3403) x1038 (ite (<= x3403 64) x2944 (ite (<= x3403 96) x2858 (ite (>= 128 x3403) x4310 (ite (<= x3403 160) x700 (ite (<= x3403 192) x870 (ite (<= x3403 224) x333 x1761)))))))) (x1190 (x3915 64 x2291 (ite (= x3403 0) x4359 (ite (<= x3403 32) x1038 (ite (>= 64 x3403) x2944 (ite (>= 96 x3403) x2858 (ite (<= x3403 128) x4310 (ite (<= x3403 160) x700 (ite (>= 192 x3403) x870 (ite (<= x3403 224) x333 x1761))))))))))))
(assert (x149 x3629 256))
(assert (=> (>= 10000 x82) (= 0 (x328 x82))))
(assert (=> (<= x4563 10000) (= (x328 x4563) 0)))
(assert (= x3263 (and x2836 x2667)))
(assert (x149 x252 32))
(assert (=> (>= 10000 x3812) (= (x328 x3812) 0)))
(assert (x2786 x1646))
(assert (= (x1190 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353)) x1780))
(assert (= (x3916 x3404 x3283) (x328 (x3916 x3404 x3283))))
(assert (x2786 x3937))
(assert (x149 x2040 256))
(assert (= x4180 (x1190 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737))))
(assert (= x312 (x75 (x3916 x312 x2052))))
(assert (= x2862 (=> (= x1194 (= x4018 0)) (and (=> (and (and (= x684 x4212) (= x2092 x745) (= x3908 x3604) (= x2498 x3356) (= x3365 x374) (= x1345 x708) (= x2338 x2906) (= x396 x1778) (= x649 x904) (= x3164 x393) (= x1154 x214) (= x2815 x4314) (= x4379 x762) (= x4029 x291)) (not x1194)) x3579) (=> (and (and (= x666 false) (= x575 x3108) (= x2101 true)) x1194) x100)))))
(assert (= (and x441 x2207) x563))
(assert (x2786 x1379))
(assert (x794 32 x2))
(assert (= x3383 (x4010 (x3915 64 x3383 12))))
(assert (= x3023 (and x1947 (not x3743))))
(assert (x2786 x623))
(assert (= x2548 (=> (and (= (x4184 x4076) x2048) (= x2995 (not (< 224 x571)))) (and x1846 x2995))))
(assert (x2786 x872))
(assert (x2786 x3156))
(assert (x2786 x34))
(assert (=> (>= 10000 x2581) (= (x328 x2581) 0)))
(assert (> (x3915 64 x3493 10) 10000))
(assert (x3758 x234))
(assert (< (x3915 64 x2625 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1450 x1646))
(assert (= (and x3974 x2226) x1679))
(assert (x1834 310283853))
(assert (x3758 x576))
(assert (x2786 x970))
(assert (= x3919 (x2278 (x2903 x2730 x173 x1367 x4453 x3919 x625))))
(assert (= (=> (and (= x2450 (x1912 x4585)) (= x2939 (x1377 (- x539 128))) (= x3480 (= 0 x2450)) (= x267 128)) (and (=> (and (and (= x2949 0) (= x2123 true) (= false x1394)) x3480) x2553) (=> (and (not x3480) (and (= x4426 (and x3458 x2023)) (= x1148 (x1753 x4335)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2978 x2030)) x2023) (= x3458 (>= x1148 x2030)) (= (x1753 x4585) x2978))) (and (=> (and (= x3440 0) (not x4426)) x2170) (=> (and (and (= (+ x2030 x4538) x2124) (= x4355 128) (<= 0 x2124) (<= x1010 127) (= x4538 (x2195 x4585)) (= x3406 x1493) (= x2124 x3907) (>= x2457 1) (= 3521034783 x1714) (<= x1010 127) (= false x404) (<= x2939 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< (+ x4538 x2030) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1912 x2625) x2457) (= x1881 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x1963 (x2656 132)) (= x355 x1606) (<= 196 x2939) (= x1631 (x1753 x4335)) (= (= (x2067 132) x315) x117) (= x2728 x2939) (= x3368 (- x1631 x2030)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2124) (= x1997 x706) (= x773 (< 18446744073709551615 x1963)) (= false x818) x117 (>= x2728 196) (<= x2728 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4426) (and (=> (and (and (= x1675 164) (= x4468 (x990 (+ 164 x1963))) (= (< x2728 x4468) x352)) (not x773)) (and (=> (and (not x352) (and (= (+ 4 x706) x820) (= x1894 (< (+ 31 x820) x2728)))) (and (=> (and (and (= (> x2451 18446744073709551615) x2758) (= (x2656 x820) x2451)) x1894) (and (=> x2758 x3888) (=> (and (and (= x4513 (> x56 x2728)) (= (+ x820 32) x2197) (= (x990 (+ x2197 x2451)) x56)) (not x2758)) (and (=> (not x4513) x4385) (=> x4513 x3646))))) (=> (and (not x1894) (and (= x4284 0) (= x2738 true) (= x3876 false))) x1969))) (=> x352 x3646))) (=> x773 x3888))))))) x3195))
(assert (x2786 x1386))
(assert (not (x1834 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563))))
(assert (= (x1190 (x3915 64 x4383 6)) 6))
(assert (x2786 x3592))
(assert (=> (<= x1708 10000) (= 0 (x328 x1708))))
(assert (x1450 x3402))
(assert (= x469 (or x4117 x585 x125 x4051 x651 x1824)))
(assert (= (x4010 (x3915 64 x2456 0)) x2456))
(assert (=> (<= x3435 10000) (= 0 (x328 x3435))))
(assert (x2786 x457))
(assert (=> (<= x3519 10000) (= (x328 x3519) 0)))
(assert (not (x1834 (x3915 64 x2150 (ite (= 0 x587) x1514 (ite (>= 32 x587) x1911 (ite (<= x587 64) x3957 (ite (<= x587 96) x3591 (ite (<= x587 128) x3734 (ite (>= 160 x587) x411 (ite (<= x587 192) x4491 (ite (>= 224 x587) x3845 x3538))))))))))))
(assert (=> (>= 10000 x3454) (= 0 (x328 x3454))))
(assert (= (x328 (x3915 64 x65 12)) (x3915 64 x65 12)))
(assert (= x1352 (x4010 (x2903 x312 x1352 x3445 x324 x1899 x1600))))
(assert (x1450 x2699))
(assert (< 10000 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060)))
(assert (x2786 x4554))
(assert (x1311 x1919))
(assert (= (x75 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)) x3404))
(assert (x2786 x820))
(assert (= (and x4070 (not x773)) x478))
(assert (= x3918 (=> (= (< 0 x2853) x2169) (and (=> (and (and (= x3282 x2635) (= x4466 x4244) (= x1135 x240) (= x2697 x1989) (= x806 x3425) (= x4042 x1964) (= x2269 x1123)) x2169) x231) (=> (and (not x2169) (and (= x4101 false) (= 4 x1812) (= true x25))) x4163)))))
(assert (= x4271 (x1190 (x3915 x3454 x305 x4271))))
(assert (> (x3915 64 x3812 100) 10000))
(assert (= (x328 (x3915 x1593 x3405 x1171)) (x3915 x1593 x3405 x1171)))
(assert (x2786 x3740))
(assert (x2786 x892))
(assert (x2786 x2713))
(assert (=> (>= 10000 x2886) (= 0 (x328 x2886))))
(assert (= (and x1904 (not x334)) x4384))
(assert (x2786 x33))
(assert (= (and (not x2208) x555) x3279))
(assert (= (x328 65535) 0))
(assert (x2786 x1760))
(assert (x2786 x4246))
(assert (x149 x1754 256))
(assert (x2786 x783))
(assert (= (and (not x3586) x424) x3807))
(assert (< 10000 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104)))
(assert (=> (>= 10000 x1551) (= 0 (x328 x1551))))
(assert (= x3355 (and x371 x3249)))
(assert (x3758 x2890))
(assert (x2786 x47))
(assert (x2786 x3607))
(assert (x149 x4041 128))
(assert (not (x1834 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955))))
(assert (= (=> (and (= x3108 36) (= false x3438) (= true x3506)) x100) x4446))
(assert (=> (<= x2531 10000) (= 0 (x328 x2531))))
(assert (x2786 x228))
(assert (x2786 x3394))
(assert (=> (<= x3403 10000) (= 0 (x328 x3403))))
(assert (x2786 x1072))
(assert (> (x2903 x3181 x2757 x3204 x670 x4500 x1727) 10000))
(assert (= (and x3743 x1947) x67))
(assert (x2786 x1108))
(assert (x2786 x806))
(assert (< 10000 (x3915 64 x3519 36)))
(assert (x2786 x960))
(assert (= (x2278 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)) x3302))
(assert (= (not (and (= x533 (x3915 64 x2705 10)) (= (x955 x3727) x2705))) x525))
(assert (x2786 x4586))
(assert (= x3501 (and x1774 x2986)))
(assert (x2786 x2254))
(assert (not (x1834 (x274 x3454 x3902 x4269 x254))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2747 100)))
(assert (x2786 x1463))
(assert (x2786 x409))
(assert (= (x4010 (x3025 x198 x4543 x431 x3636 x4004)) x4543))
(assert (< 10000 (x336 x3435 x547 x872 x1944 x494 x713 x3785)))
(assert (= (x328 (x3916 x587 x487)) (x3916 x587 x487)))
(assert (x2786 x168))
(assert (= (and (not x2494) x2335) x1395))
(assert (= (x75 (x274 x587 x939 x1435 x2707)) x587))
(assert (not (x1834 (x3916 32 x159))))
(assert (= (and (not x491) x1449) x4240))
(assert (not (x1834 (x274 x3859 x3040 x3163 x2127))))
(assert (x2786 x2498))
(assert (not (x1834 (x274 x2961 x782 x3442 x2029))))
(assert (= x3055 (x2278 (x2903 x1593 x1270 x2523 x3069 x3055 x236))))
(assert (x1311 x687))
(assert (x1311 x4584))
(assert (= x1933 (and x1502 x246)))
(assert (= x3856 (and x4183 x2736)))
(assert (= (and x601 (not x1747)) x3420))
(assert (= (x328 (x3915 64 x2291 (ite (= 0 x3403) x4359 (ite (<= x3403 32) x1038 (ite (<= x3403 64) x2944 (ite (<= x3403 96) x2858 (ite (>= 128 x3403) x4310 (ite (<= x3403 160) x700 (ite (<= x3403 192) x870 (ite (<= x3403 224) x333 x1761)))))))))) (x3915 64 x2291 (ite (= x3403 0) x4359 (ite (>= 32 x3403) x1038 (ite (<= x3403 64) x2944 (ite (<= x3403 96) x2858 (ite (<= x3403 128) x4310 (ite (>= 160 x3403) x700 (ite (<= x3403 192) x870 (ite (>= 224 x3403) x333 x1761)))))))))))
(assert (x2786 x1695))
(assert (=> (<= x2522 10000) (= (x328 x2522) 0)))
(assert (= x1066 (=> (and (< x4389 x3805) (= (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x2841) x3145) (= 1722637450 x2972) (= x4340 (x990 (+ x1267 x4256))) (= x2406 x2829) (= x1873 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3720)) (= x1930 x873) (>= x3369 196) (= (x3793 x2339) x2530) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4389) (= x348 (x1377 (- x4104 32))) (= x1431 128) (= x976 (x1912 x2625)) (= (or (and (> 128 (- x3369 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x3369 4)))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x3369 4))) x1387) (= x1898 (x2104 x4389)) (= (x1377 (- x3805 x4389)) x4104) x3641 (<= x4389 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3369 x1898) (= x2339 (x990 (+ x4389 32))) (= x770 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4389) (<= x3997 127) (= x4375 46442213778836376901753710468615024683576072693327014300388496345503314739200) (= (= (x3689 132) x3524) x3641) (= (x2191 26959946667150639794667015087019630673637144422540572481103610249215 x2530) x2841) (= (x990 (+ x1267 x1873)) x3805) (= (x990 (+ x4256 31)) x3720) (= x588 false) (>= x1898 196) (= x1783 x4592) (>= x3805 1) (>= 127 x3997) (<= 1 x976)) (and (=> (and (not x1387) (and (= x3892 x1783) (= (and (= (<= x3369 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x3369 163)) x919))) (and (=> (not x919) x1497) (=> (and x919 (and (= (> x27 18446744073709551615) x784) (= (x3935 132) x27))) (and (=> x784 x1601) (=> (and (not x784) (and (= (x990 (+ x27 164)) x1222) (= x1616 164) (= x493 (> x1222 x3369)))) (and (=> (and (and (= x443 (> x2406 18446744073709551615)) (= x873 x4268)) (not x493)) (and (=> x443 x704) (=> (and (and (= x2741 (x990 (+ x2406 4))) (= (or (and (> x3369 x63) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3369) (<= x63 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x63 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3369 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x1076) (= (x990 (+ x2741 31)) x63)) (not x443)) (and (=> (and x1076 (and (= (x3935 x2741) x2621) (= x586 (> x2621 18446744073709551615)))) (and (=> x586 x1601) (=> (and (and (= x1622 (x990 (+ x2741 32))) (= x4243 (x990 (+ x1622 x2621))) (= x4572 (< x3369 x4243))) (not x586)) (and (=> (and (= true x1990) (not x4572)) (and (=> (and (and (= (or (and (< x2844 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2844) true)) (> x2844 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3192) (< x3617 x2762) (= (x990 (+ 31 x2621)) x1193) (= (x2655 x1193 32) x3169) (= 128 x1928) (= (x990 (+ x2621 x2215)) x1866) (= x2844 (x3289 x3617)) (= x2762 (x990 (+ x3617 x3979))) (= x3617 (+ x3416 160)) (= x3625 (x990 (+ 31 x27))) (= (* 32 x2) x3416) (= (x2655 x3625 32) x2) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x27) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x27)) (= (* 32 x3169) x4094) (<= 161 x2762) (= (x990 (+ 32 x3617)) x2215) (= (x990 (+ 32 x4094)) x3979)) x1990) (and (=> (and (and (= 0 x1644) (= x2588 (= x3909 1)) (= x3046 2001815235) (= x4464 (x990 (+ 32 x4588))) (= x4588 (x990 (+ 4 x2762))) (= x2054 x3245) (= false x3719) (>= x2716 1) (>= 127 x3007) (= x2511 53968831973089624780961702553170747426560148566936995398294956610382735605760) (= x3245 x2240) (= (x1615 x2215) x2054) (<= x3007 127) (= 0 x217) (= x743 68) (= (x1912 x2625) x2716) (= false x4532) (= x3550 (x990 (+ 64 x4588))) (= (x3915 64 x2054 10) x1762) (= 68 x4420) (= x4420 (x1377 (- x3550 x2762)))) (not x3192)) (and (=> (and (and (= x4353 false) (= true x3603) (= 100 x2924)) (not x2588)) x4395) (=> (and x2588 (and (and (= 2 x3079) (= x2365 false)) (or (and (= (ite x2365 1 0) x727) (not x2365)) (and x2365 (and (<= x3736 1461501637330902918203684832716283019655932542975) (= x727 (ite (not (= x2625 x3736)) 1 0))))))) x2535))) (=> x3192 x704))) (=> (and (not x1990) (and (= 132 x3278) (= x307 true) (= false x132))) x2628))) (=> x4572 x934))))) (=> (not x1076) x1497))))) (=> x493 x934))))))) (=> (and x1387 (and (= x4350 false) (= x1848 true) (= x3278 0))) x2628)))))
(assert (= (and x624 x193) x3956))
(assert (x1450 x2426))
(assert (x2786 x4126))
(assert (x1450 x1919))
(assert (= (x3915 x3859 x2465 x3694) (x328 (x3915 x3859 x2465 x3694))))
(assert (=> (>= 10000 x842) (= 0 (x328 x842))))
(assert (x149 x2926 256))
(assert (x2786 x2917))
(assert (= (=> (and (= false x2376) (= true x3896) (= 36 x2949)) x2553) x1021))
(assert (x740 x2650))
(assert (= (x328 (x3915 x3914 x1238 x2407)) (x3915 x3914 x1238 x2407)))
(assert (= x3899 (=> (and (= 128 x530) (= (= 0 x1786) x3877) (= (x1912 x2792) x1786) (= (x1377 (- x442 128)) x4204)) (and (=> (and (not x3877) (and (= (<= x2433 x4052) x2085) (= (x509 x2792) x1070) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2433 x1070)) x2480) (= (and x2480 x2085) x1620) (= (x509 x4335) x4052))) (and (=> (and (= 0 x4297) (not x1620)) x360) (=> (and x1620 (and (= x2557 3521034783) (= x3893 x3961) (= x1108 (x3008 132)) (= x2610 (> x1108 18446744073709551615)) (= (x1912 x2625) x2516) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1466 x2433)) (= x466 (= x2745 (x1030 132))) (= x1466 (x4155 x2792)) (<= 196 x4204) (= x689 94926909962862326217726538024181891405690106632559804934698421914364834480128) (>= x2516 1) (= x2150 x3448) (= x499 false) x466 (<= x4204 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x71 x3266) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3984) (= x3028 (- x3116 x2433)) (= (+ x2433 x1466) x3266) (= x4204 x3984) (= (x509 x4335) x3116) (= x1203 x1521) (<= 196 x3984) (<= 0 x3266) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3266) (= x2960 128) (= false x4136) (>= 127 x1384) (<= x1384 127))) (and (=> (and (and (= 164 x2135) (= (x990 (+ 164 x1108)) x3305) (= x1228 (< x3984 x3305))) (not x2610)) (and (=> (and (not x1228) (and (= (+ x3961 4) x4209) (= (< (+ x4209 31) x3984) x3765))) (and (=> (and (and (= 0 x2650) (= x1174 false) (= true x2324)) (not x3765)) x492) (=> (and x3765 (and (= x2969 (> x1242 18446744073709551615)) (= x1242 (x3008 x4209)))) (and (=> x2969 x1863) (=> (and (not x2969) (and (= x1548 (> x3206 x3984)) (= x4471 (+ 32 x4209)) (= (x990 (+ x4471 x1242)) x3206))) (and (=> (not x1548) x2453) (=> x1548 x3860))))))) (=> x1228 x3860))) (=> x2610 x1863))))) (=> (and x3877 (and (= x3742 true) (= false x417) (= x3108 0))) x100)))))
(assert (x2786 x3943))
(assert (x2786 x3179))
(assert (x2786 x2954))
(assert (x2786 x2156))
(assert (x2786 x71))
(assert (x1834 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (x2786 x1689))
(assert (x3829 (ite (not (= 0 x1192)) 1 0)))
(assert (x2786 x3259))
(assert (x2786 x2384))
(assert (x3153 x3932 32))
(assert (x2786 x3360))
(assert (> (x3916 x3639 x2679) 10000))
(assert (x2786 x325))
(assert (x2786 x1651))
(assert (x2786 x2893))
(assert (=> (<= x1003 10000) (= 0 (x328 x1003))))
(assert (= (x4010 (x3915 64 x3419 36)) x3419))
(assert (x2786 x3324))
(assert (= (or x3182 x3608 x3121) x3971))
(assert (= (x3945 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560)) x3088))
(assert (= 64 (x75 (x3915 64 x1475 6))))
(assert (x740 x1271))
(assert (= x3731 (and x2861 (not x97))))
(assert (x740 x241))
(assert (x149 x2261 256))
(assert (=> (<= x1600 10000) (= (x328 x1600) 0)))
(assert (< (x3915 64 x2705 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3758 x1202))
(assert (= (and x402 (not x1462)) x1767))
(assert (x2786 x1776))
(assert (= x3475 (=> (and (= x312 (x1377 (- x1487 128))) (= x3294 (>= 224 x312)) (= x1487 (x990 (+ 128 x1242)))) (and x3294 (=> (and (= x1069 (x1862 320)) (= x2752 (x1862 128)) (= (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069) x4374) (= (x1862 128) x1352) (= (x1862 256) x1216) (= x3600 (x1862 192)) (= x2474 (x274 x312 x2100 x135 x1608)) (= x483 (x1862 160)) (= (x1862 224) x1899) (= (x1862 192) x324) (= x832 (x2903 x312 x1352 x3445 x324 x1899 x1600)) (= x2774 (x1862 224)) (= (x1862 288) x1181) (= (= x1851 (ite (= 0 x312) x1784 (ite (>= 32 x312) x3711 (ite (<= x312 64) x758 (ite (<= x312 96) x2474 (ite (>= 128 x312) x2547 (ite (<= x312 160) x832 (ite (<= x312 192) x1703 (ite (>= 224 x312) x4374 x1653))))))))) x3815) (= x1784 (x1338 0)) (= x1608 (x1862 192)) (= (x1862 288) x4363) (= (x1862 128) x3260) (= (x1862 128) x2052) (= (x336 x312 x4207 x1 x506 x1403 x1216 x1181) x1703) (= x135 (x1862 160)) (= (x1862 160) x3445) (= x4249 (x1862 128)) (= (x3915 x312 x3260 x982) x758) (= x3825 (x1862 192)) (= x2100 (x1862 128)) (= x2547 (x3025 x312 x2752 x483 x3825 x2774)) (= x1403 (x1862 224)) (= x3711 (x3916 x312 x2052)) (= x4207 (x1862 128)) (= (x1862 160) x1474) (= x4007 (x1862 256)) (= (x1862 256) x1600) (= x506 (x1862 192)) (= (x1862 160) x1) (= x2357 (x1862 224)) (= (x1862 160) x982)) (and (=> x3815 x1531) (=> (and (not x3815) (and (= 132 x2650) (= x859 false) (= true x1788))) x492)))))))
(assert (x2786 x4282))
(assert (= (x1190 (x274 x312 x2100 x135 x1608)) x135))
(assert (x2786 x4000))
(assert (= (x75 (x2903 x3639 x1258 x4403 x165 x1097 x2877)) x3639))
(assert (= x358 (and x2311 x813)))
(assert (x2786 x2636))
(assert (x2786 x3600))
(assert (not (x1834 (x3915 64 x2291 (ite (= x3403 0) x4359 (ite (>= 32 x3403) x1038 (ite (>= 64 x3403) x2944 (ite (<= x3403 96) x2858 (ite (>= 128 x3403) x4310 (ite (<= x3403 160) x700 (ite (<= x3403 192) x870 (ite (>= 224 x3403) x333 x1761))))))))))))
(assert (x2786 x18))
(assert (x2786 x114))
(assert (= (=> (= x4429 (not (> x1383 32))) (and x583 x4429)) x2343))
(assert (x2786 x163))
(assert (=> (<= x2775 10000) (= (x328 x2775) 0)))
(assert (= x3254 (and x1683 x3390)))
(assert (=> (<= x1057 10000) (= 0 (x328 x1057))))
(assert (x2091 x2070))
(assert (= 0 (x328 100000)))
(assert (x2786 x2621))
(assert (= (and (not x2441) x2720) x1272))
(assert (not (x1834 (x3916 x3181 x1204))))
(assert (= x570 (x2515 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272))))
(assert (x3758 x2795))
(assert (not (x1834 (x3916 x312 x2052))))
(assert (= x2739 (x4010 (x336 x198 x2739 x2475 x511 x460 x801 x1951))))
(assert (x149 x1349 256))
(assert (x2786 x1285))
(assert (=> (>= 10000 x2564) (= 0 (x328 x2564))))
(assert (= (x2278 (x3025 x3859 x4167 x2034 x2194 x1406)) x1406))
(assert (x1834 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (x2786 x2552))
(assert (x2786 x3206))
(assert (x2786 x1553))
(assert (= (=> (and (= x1541 x285) (= x232 x969) (= x285 (x2191 255 x3866)) (= x2539 2) (= 0 x3344) (= x4360 x969) (= x3082 x1325)) x2349) x3395))
(assert (x2786 x4159))
(assert (x2786 x28))
(assert (= x1948 (and (not x2660) x1773)))
(assert (= (x4010 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)) x979))
(assert (= x4071 (and x2126 x2554)))
(assert (x3829 x4285))
(assert (=> (>= 10000 x2150) (= 0 (x328 x2150))))
(assert (x2786 x2840))
(assert (=> (>= 10000 x1539) (= (x328 x1539) 0)))
(assert (= (x3945 (x3025 x1593 x1348 x1765 x3525 x1232)) x3525))
(assert (x2786 x2196))
(assert (=> (>= 10000 x195) (= (x328 x195) 0)))
(assert (x2786 x3132))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x3618 36)))
(assert (= 64 (x75 (x3915 64 x3406 (ite (= x3914 0) x351 (ite (<= x3914 32) x1647 (ite (<= x3914 64) x1709 (ite (<= x3914 96) x2405 (ite (>= 128 x3914) x3928 (ite (>= 160 x3914) x1334 (ite (<= x3914 192) x4303 (ite (<= x3914 224) x208 x1277))))))))))))
(assert (x2786 x1699))
(assert (> (x3025 x3181 x3905 x3796 x3823 x2008) 10000))
(assert (x794 32 x4187))
(assert (= (x3945 (x274 x2730 x879 x542 x1004)) x1004))
(assert (= x1699 (x1190 (x2903 x3404 x3490 x1699 x2954 x1545 x4410))))
(assert (x1311 x2384))
(assert (not (x1834 (x3916 x3435 x1344))))
(assert (x2786 x3277))
(assert (x2786 x1192))
(assert (= (x75 (x3916 x3403 x1726)) x3403))
(assert (= (x75 (x3915 64 x2872 36)) 64))
(assert (= x4274 (=> (and (= (= 0 x2368) x246) (or (not x246) x246)) x1685)))
(assert (= x1258 (x4010 (x2903 x3639 x1258 x4403 x165 x1097 x2877))))
(assert (= x2523 (x1190 (x2903 x1593 x1270 x2523 x3069 x3055 x236))))
(assert (x2786 x4268))
(assert (=> (<= x2424 10000) (= (x328 x2424) 0)))
(assert (=> (<= x1176 10000) (= 0 (x328 x1176))))
(assert (< 10000 (x3916 x2730 x1539)))
(assert (x1311 x3304))
(assert (= x3885 (and x4384 x1993)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060)))
(assert (x2786 x3242))
(assert (x2786 x4116))
(assert (= (and x1014 x1129) x2794))
(assert (x2786 x1556))
(assert (= (and x2935 x520) x1732))
(assert (x2786 x128))
(assert (=> (>= 10000 x472) (= 0 (x328 x472))))
(assert (x2786 x3009))
(assert (=> (<= x2821 10000) (= 0 (x328 x2821))))
(assert (=> (>= 10000 x3014) (= (x328 x3014) 0)))
(assert (x2786 x901))
(assert (=> (>= 10000 x4159) (= (x328 x4159) 0)))
(assert (x2786 x2716))
(assert (x2786 x2403))
(assert (= 100 (x1190 (x3915 64 x3812 100))))
(assert (= (x2278 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575)) x3560))
(assert (= (x328 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875)) (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875)))
(assert (x1311 x2699))
(assert (x2786 x1444))
(assert (x2786 x4471))
(assert (x2786 x1860))
(assert (> (x2903 x3639 x1258 x4403 x165 x1097 x2877) 10000))
(assert (x2786 x681))
(assert (= (and (not x3237) x3680) x294))
(assert (= x2821 (x2278 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945))))
(assert (x2786 x2953))
(assert (x149 x1748 128))
(assert (= x2370 (x4010 (x3916 x198 x2370))))
(assert (= x460 (x2278 (x336 x198 x2739 x2475 x511 x460 x801 x1951))))
(assert (x2786 x4401))
(assert (= (x75 (x274 x1840 x94 x168 x450)) x1840))
(assert (= (or (and (not x3391) x823) x3341) x1117))
(assert (= x3435 (x75 (x3916 x3435 x1344))))
(assert (< (x3915 x587 x3996 x1809) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x4134))
(assert (x2786 x944))
(assert (= (x336 x312 x4207 x1 x506 x1403 x1216 x1181) (x328 (x336 x312 x4207 x1 x506 x1403 x1216 x1181))))
(assert (=> (<= x462 10000) (= (x328 x462) 0)))
(assert (x2786 x1574))
(assert (= (x75 (x3915 x198 x2934 x960)) x198))
(assert (not (x1834 (x3915 64 x2054 10))))
(assert (= x3646 (=> (and (= x2782 true) (= x4284 0) (= false x3814)) x1969)))
(assert (= x2014 (and x459 x1149)))
(assert (= 0 (x328 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (x2786 x3939))
(assert (x2786 x1569))
(assert (x2786 x935))
(assert (=> (>= 10000 x4220) (= (x328 x4220) 0)))
(assert (x2786 x4260))
(assert (= (x1190 (x3915 x2730 x3221 x1879)) x1879))
(assert (x2786 x2137))
(assert (x2786 x3221))
(assert (x2786 x3489))
(assert (= x1936 (and (not x4426) x1337)))
(assert (=> (>= 10000 x2445) (= (x328 x2445) 0)))
(assert (= (=> (and (= x2893 2) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4475) (= x141 (x1440 x4335)) (= x4297 x2650) (= (- x3681 x2433) x2708) (= (+ x2433 x141) x4475) (= x3681 (x4114 x2792)) (<= 0 x4475) (= x3251 (x2191 255 x3705)) (= x486 x4475) (< (+ x141 x2433) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x360) x492))
(assert (x2786 x1698))
(assert (=> (<= x2959 10000) (= 0 (x328 x2959))))
(assert (= x3764 (and x2942 x1454)))
(assert (< (x3915 64 x2625 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x402 (and x3567 x2489)))
(assert (x2786 x3166))
(assert (= x4220 (x4010 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852))))
(assert (= (x3915 64 x4179 12) (x328 (x3915 64 x4179 12))))
(assert (= x2497 (and x2916 (not x357))))
(assert (x2786 x171))
(assert (= (and x3529 x3572) x3977))
(assert (< 10000 (x3916 x1840 x2364)))
(assert (= 64 (x75 (x3915 64 x2150 (ite (= x3181 0) x213 (ite (>= 32 x3181) x662 (ite (<= x3181 64) x2231 (ite (>= 96 x3181) x2495 (ite (>= 128 x3181) x1535 (ite (<= x3181 160) x146 (ite (<= x3181 192) x4073 (ite (<= x3181 224) x2993 x1478))))))))))))
(assert (x2786 x3905))
(assert (= (x328 (x2903 x312 x1352 x3445 x324 x1899 x1600)) (x2903 x312 x1352 x3445 x324 x1899 x1600)))
(assert (x2786 x4266))
(assert (= (x328 x1872) (x328 (+ 1 x1872))))
(assert (=> (>= 10000 x2710) (= (x328 x2710) 0)))
(assert (x3829 1000000000))
(assert (= (x4010 (x3915 64 x3419 6)) x3419))
(assert (< (x336 x1593 x3216 x381 x3446 x2361 x205 x546) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2705 (x4010 (x3915 64 x2705 10))))
(assert (x2786 x1329))
(assert (not (x1834 (x3025 x3435 x34 x2931 x4309 x2071))))
(assert (x2786 x2802))
(assert (x2786 x4077))
(assert (= (x2278 (x3025 x3181 x3905 x3796 x3823 x2008)) x2008))
(assert (x149 x1755 256))
(assert (= x3277 (x1190 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563))))
(assert (=> (>= 10000 x305) (= (x328 x305) 0)))
(assert (= (and x1908 (not x1813)) x2410))
(assert (x2786 x4042))
(assert (= x424 (and x3263 x1020)))
(assert (= x1491 (and x1575 x2112)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2886 36)))
(assert (=> (<= x3636 10000) (= (x328 x3636) 0)))
(assert (x2395 x4584))
(assert (not (x1834 (x3915 x3435 x994 x4023))))
(assert (x3758 x3866))
(assert (x2786 x1003))
(assert (= (and x1375 x665) x4075))
(assert (= x104 (x4516 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104))))
(assert (x2786 x1047))
(assert (= (and x3291 x1052) x2590))
(assert (x2786 x2248))
(assert (=> (<= x3730 10000) (= (x328 x3730) 0)))
(assert (= x4282 (x4010 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988))))
(assert (= 0 (x328 2001815235)))
(assert (x2786 x675))
(assert (x1311 x3894))
(assert (= (x328 (x3915 x1840 x4015 x694)) (x3915 x1840 x4015 x694)))
(assert (x2786 x4569))
(assert (x2786 x337))
(assert (x3758 x1919))
(assert (= x1885 (and x3238 x3956)))
(assert (< 10000 (x3916 x3435 x1344)))
(assert (= x2559 (x1190 (x2903 x3403 x3097 x2559 x4044 x3362 x2146))))
(assert (= x668 (and (not x4348) x3732)))
(assert (= 0 (x328 18563399957492015340621713183830377045030061062230639968016343144629396307968)))
(assert (x2786 x4584))
(assert (= (and (not x4211) x3318) x3377))
(assert (< 10000 (x3916 x3914 x4463)))
(assert (= x587 (x75 (x2903 x587 x61 x783 x2151 x4535 x1441))))
(assert (= (x4010 (x3915 64 x2150 (ite (= 0 x3181) x213 (ite (<= x3181 32) x662 (ite (>= 64 x3181) x2231 (ite (>= 96 x3181) x2495 (ite (<= x3181 128) x1535 (ite (>= 160 x3181) x146 (ite (>= 192 x3181) x4073 (ite (>= 224 x3181) x2993 x1478)))))))))) x2150))
(assert (x2786 x3459))
(assert (= (x3945 (x2903 x3639 x1258 x4403 x165 x1097 x2877)) x165))
(assert (= x725 x430))
(assert (x2786 x2742))
(assert (x2786 x4417))
(assert (= x624 (and x519 (not x2397))))
(assert (= x1307 (and x1894 x4043)))
(assert (= x546 (x2907 (x336 x1593 x3216 x381 x3446 x2361 x205 x546))))
(assert (x2786 x2125))
(assert (= (and x1990 x1286) x4081))
(assert (= x4015 (x4010 (x3915 x1840 x4015 x694))))
(assert (x2786 x2850))
(assert (not (x1834 (x3915 64 x3339 36))))
(assert (x2786 x1477))
(assert (x2786 x2357))
(assert (= x3442 (x1190 (x274 x2961 x782 x3442 x2029))))
(assert (= (and x1387 x1804) x4482))
(assert (= x825 (or x1649 x3325)))
(assert (x2786 x635))
(assert (= (and x919 x906) x3834))
(assert (=> (<= x1699 10000) (= (x328 x1699) 0)))
(assert (< (x274 x3435 x3241 x2482 x1968) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x4105))
(assert (x2786 x2970))
(assert (=> (>= 10000 x3919) (= 0 (x328 x3919))))
(assert (x2786 x1654))
(assert (x2786 x1549))
(assert (x1834 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2786 x3682))
(assert (not (x1834 (x3915 64 x1795 36))))
(assert (= (and x4043 (not x1894)) x915))
(assert (not (x1834 (x3915 x3914 x1238 x2407))))
(assert (not (x1834 (x3915 64 x1818 12))))
(assert (x2786 x1968))
(assert (not (x1834 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103))))
(assert (=> (<= x961 10000) (= 0 (x328 x961))))
(assert (x2786 x1668))
(assert (= 64 (x75 (x3915 64 x4383 6))))
(assert (x1450 x909))
(assert (x2786 x2396))
(assert (=> (<= x4410 10000) (= (x328 x4410) 0)))
(assert (x2786 x2018))
(assert (= (and x2990 x2169) x1438))
(assert (x2786 x3486))
(assert (=> (<= x3677 10000) (= 0 (x328 x3677))))
(assert (x2786 x4204))
(assert (x2786 x2699))
(assert (= x3435 (x75 (x336 x3435 x547 x872 x1944 x494 x713 x3785))))
(assert (= x457 (x4010 (x3915 x3181 x457 x824))))
(assert (x2786 x1893))
(assert (=> (<= x2991 10000) (= 0 (x328 x2991))))
(assert (= (and (not x142) x490) x8))
(assert (= x1019 (and x2663 (not x2304))))
(assert (=> (<= x104 10000) (= 0 (x328 x104))))
(assert (x1834 100000))
(assert (= x2847 (or x2637 x1916)))
(assert (x2786 x2688))
(assert (not (x1834 (x3915 64 x82 36))))
(assert (=> (>= 10000 x2100) (= 0 (x328 x2100))))
(assert (=> (<= x1573 10000) (= (x328 x1573) 0)))
(assert (=> (>= 10000 x2223) (= (x328 x2223) 0)))
(assert (= x2175 (x4010 (x3915 64 x2175 100))))
(assert (x2786 x1044))
(assert (= x3626 (x4010 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684))))
(assert (x2786 x1573))
(assert (=> (>= 10000 x9) (= (x328 x9) 0)))
(assert (= (x4010 (x3025 x1593 x1348 x1765 x3525 x1232)) x1348))
(assert (= (x328 3628442803) 0))
(assert (= x2234 (and x1986 x3349)))
(assert (x149 x3853 256))
(assert (= (and x3925 x3890) x4117))
(assert (x2786 x450))
(assert (x2786 x3295))
(assert (x2786 x472))
(assert (x3153 x786 32))
(assert (= (x1190 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308)) x2133))
(assert (=> (>= 10000 x4207) (= 0 (x328 x4207))))
(assert (x2786 x1726))
(assert (= (or (and x160 x2819) (and x2607 x1401) (and x107 x4106) (and x4131 x1131) (and x4190 x4216)) x933))
(assert (< (x3915 x198 x2934 x960) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x3812 100)))
(assert (=> (<= x3203 10000) (= (x328 x3203) 0)))
(assert (x2786 x3634))
(assert (= (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069) (x328 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069))))
(assert (x2786 x1414))
(assert (x2786 x844))
(assert (= (x75 (x3915 x1593 x3405 x1171)) x1593))
(assert (x1450 x3297))
(assert (x3829 (ite (not (= x315 0)) 1 0)))
(assert (= x3181 (x75 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233))))
(assert (=> (>= 10000 x1197) (= 0 (x328 x1197))))
(assert (x2786 x4529))
(assert (x2786 x1812))
(assert (x2786 x1837))
(assert (x2786 x2987))
(assert (x2786 x3737))
(assert (not (x1834 (x3915 64 x4179 12))))
(assert (x1311 x3720))
(assert (not (x1834 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554))))
(assert (x2786 x1196))
(assert (= x2335 (and (not x1901) x2469)))
(assert (= x3889 (or (and x2239 x2374) (and x566 x67) (and x90 x1725) (and x2898 x4185) (and x4071 x4459) (and x3782 x101) (and x323 x2485) (and x4281 x2811) (and x505 x4440))))
(assert (x2786 x1873))
(assert (x2786 x3609))
(assert (x2786 x1453))
(assert (= x487 (x4010 (x3916 x587 x487))))
(assert (x2786 x1754))
(assert (=> (<= x3199 10000) (= 0 (x328 x3199))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x1818 12)))
(assert (=> (<= x960 10000) (= (x328 x960) 0)))
(assert (not (x1834 (x3025 x587 x2784 x3637 x2581 x2116))))
(assert (x2786 x1560))
(assert (x2786 x712))
(assert (= x1443 (x4010 (x3025 x3454 x1443 x569 x1856 x3010))))
(assert (= (x328 3521034783) 0))
(assert (x740 x1693))
(assert (x2786 x2676))
(assert (x2786 x254))
(assert (x2786 x3730))
(assert (= 0 (x328 1722637450)))
(assert (x2786 x3966))
(assert (x2786 x56))
(assert (x2786 x4512))
(assert (x2786 x4522))
(assert (x2786 x3697))
(assert (= x4369 (and x1356 x950)))
(assert (=> (>= 10000 x1556) (= (x328 x1556) 0)))
(assert (= x2747 (x4010 (x3915 64 x2747 100))))
(assert (= (x328 107317874183463056701504662589741776198067464202343767264461527615735374807040) 0))
(assert (=> (>= 10000 x1764) (= 0 (x328 x1764))))
(assert (= (=> (= x2332 (not (> x1855 32))) (and x2332 x318)) x1234))
(assert (=> (>= 10000 x4560) (= (x328 x4560) 0)))
(assert (x2786 x4249))
(assert (= (x328 (x2903 x1593 x1270 x2523 x3069 x3055 x236)) (x2903 x1593 x1270 x2523 x3069 x3055 x236)))
(assert (=> (>= 10000 x944) (= 0 (x328 x944))))
(assert (= x3714 (and x1853 x1891)))
(assert (=> (<= x330 10000) (= 0 (x328 x330))))
(assert (x2786 x305))
(assert (=> (>= 10000 x3283) (= 0 (x328 x3283))))
(assert (x1834 4294967295))
(assert (= x879 (x4010 (x274 x2730 x879 x542 x1004))))
(assert (x1311 x597))
(assert (< (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x2747))
(assert (= (=> (and (= x1978 x3627) (= x1710 x1921) (= x2082 x735)) x394) x4146))
(assert (not (x1834 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272))))
(assert (x2786 x405))
(assert (= (x2515 (x2903 x3914 x3066 x4129 x3006 x936 x4404)) x4404))
(assert (> (x3915 x587 x3996 x1809) 10000))
(assert (x2786 x1775))
(assert (x2091 32))
(assert (< (x3915 64 x3339 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2284 10000) (= 0 (x328 x2284))))
(assert (x2786 x2539))
(assert (= (x75 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)) x2961))
(assert (> (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554) 10000))
(assert (not (x1834 (x3915 64 x1542 2))))
(assert (x2786 x2496))
(assert (=> (<= x3242 10000) (= 0 (x328 x3242))))
(assert (= x394 (=> (and (or x2509 (not x2509)) (= (= x735 0) x2509)) x316)))
(assert (= x3914 (x75 (x274 x3914 x2591 x3168 x3784))))
(assert (x2786 x1421))
(assert (x2091 x2213))
(assert (not (x1834 (x3916 32 103))))
(assert (= (and x403 x1828) x81))
(assert (x2786 x348))
(assert (=> (<= x2159 10000) (= (x328 x2159) 0)))
(assert (= (and (not x1828) x403) x1558))
(assert (= (=> (and (= x4276 true) (= false x3527) (= x3108 36)) x100) x99))
(assert (= x1433 (and x1723 x686)))
(assert (< (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x589))
(assert (= 64 (x75 (x3915 64 x1521 7))))
(assert (x2786 x2337))
(assert (x2786 x1686))
(assert (x1450 x366))
(assert (= (x3945 (x336 x198 x2739 x2475 x511 x460 x801 x1951)) x511))
(assert (x2786 x1546))
(assert (=> (<= x2323 10000) (= 0 (x328 x2323))))
(assert (= (x75 (x3915 64 x1795 36)) 64))
(assert (= 64 (x75 (x3915 64 x1764 6))))
(assert (= (x75 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103)) x2961))
(assert (x2786 x637))
(assert (x2786 x2363))
(assert (=> (<= x65 10000) (= (x328 x65) 0)))
(assert (= x2093 (x1190 (x2903 x3859 x4126 x2093 x3895 x226 x2266))))
(assert (not (x1834 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462))))
(assert (= (x1190 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756)) x2223))
(assert (x2091 x607))
(assert (x2786 x1714))
(assert (x3758 x883))
(assert (x2786 x4455))
(assert (x149 x1178 256))
(assert (x2786 x4296))
(assert (x2786 x3800))
(assert (x2786 x1658))
(assert (x2786 x3750))
(assert (x2786 x3517))
(assert (x740 x2840))
(assert (x2786 x739))
(assert (= (x75 (x274 x3454 x3902 x4269 x254)) x3454))
(assert (=> (>= 10000 x2877) (= (x328 x2877) 0)))
(assert (= (x328 (x2903 x3403 x3097 x2559 x4044 x3362 x2146)) (x2903 x3403 x3097 x2559 x4044 x3362 x2146)))
(assert (= x714 (or x3856 (and x2736 (not x4183)))))
(assert (x2786 x4108))
(assert (x2786 x2697))
(assert (x2786 x4015))
(assert (=> (>= 10000 x155) (= (x328 x155) 0)))
(assert (= (=> (and (= 0 x1456) (= true x4362) (= x2733 false)) x1701) x3247))
(assert (= x731 (and x3456 x2901)))
(assert (=> (<= x1258 10000) (= 0 (x328 x1258))))
(assert (not (x1834 (x3916 32 104))))
(assert (x2786 x1517))
(assert (= x1797 (or (and x2538 (not x1749)) x3844)))
(assert (> (x3025 x3639 x1495 x3799 x2775 x1044) 10000))
(assert (x2786 x1417))
(assert (= x9 (x2907 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756))))
(assert (x2786 x3216))
(assert (x2786 x3692))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2150 (ite (= x587 0) x1514 (ite (<= x587 32) x1911 (ite (>= 64 x587) x3957 (ite (>= 96 x587) x3591 (ite (<= x587 128) x3734 (ite (>= 160 x587) x411 (ite (<= x587 192) x4491 (ite (>= 224 x587) x3845 x3538)))))))))))
(assert (not (x1834 (x3915 64 x1179 6))))
(assert (x2786 x3092))
(assert (< (x3916 x198 x2370) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x2394))
(assert (x2786 x4145))
(assert (x2786 x2158))
(assert (x2786 x2592))
(assert (x2786 x3204))
(assert (x2786 x1431))
(assert (x149 x626 128))
(assert (= x3461 (and x1578 (not x2838))))
(assert (= x1432 (=> (and (= (x3976 x4225) x1719) (= (not (> x3364 32)) x2866)) (and x2866 (=> (= x3827 32) x204)))))
(assert (x2786 x4208))
(assert (x2786 x3923))
(assert (x2786 x3568))
(assert (=> (>= 10000 x1352) (= (x328 x1352) 0)))
(assert (= (x3945 (x3025 x3404 x544 x842 x1300 x2619)) x1300))
(assert (=> (<= x898 10000) (= (x328 x898) 0)))
(assert (= (and (not x290) x1636) x2371))
(assert (x2786 x2740))
(assert (x3758 x2384))
(assert (= (x4010 (x3025 x312 x2752 x483 x3825 x2774)) x2752))
(assert (= (x4010 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575)) x604))
(assert (= (x3915 64 x3419 36) (x328 (x3915 64 x3419 36))))
(assert (= (x2278 (x2903 x3403 x3097 x2559 x4044 x3362 x2146)) x3362))
(assert (= (x3915 x3454 x305 x4271) (x328 (x3915 x3454 x305 x4271))))
(assert (=> (<= x1542 10000) (= 0 (x328 x1542))))
(assert (= (x328 (x3915 64 x2054 10)) (x3915 64 x2054 10)))
(assert (= (x328 (x3025 x3435 x34 x2931 x4309 x2071)) (x3025 x3435 x34 x2931 x4309 x2071)))
(assert (x2786 x2915))
(assert (= (x328 (x3915 64 x2625 1)) (x3915 64 x2625 1)))
(assert (x2786 x539))
(assert (= (and x1324 x184) x3858))
(assert (= x1184 (or x2075 (and (not x3534) x1062))))
(assert (x2786 x3425))
(assert (x2786 x2482))
(assert (> (x3916 x3404 x3283) 10000))
(assert (x2786 x3859))
(assert (= (or x3191 x629) x2561))
(assert (x2786 x1202))
(assert (x2786 x1109))
(assert (x2786 x1474))
(assert (not (x1834 (x3915 64 x2705 10))))
(assert (x2786 x1856))
(assert (= (x3945 (x3025 x312 x2752 x483 x3825 x2774)) x3825))
(assert (x2786 x2151))
(assert (=> (>= 10000 x2730) (= (x328 x2730) 0)))
(assert (=> (<= x936 10000) (= (x328 x936) 0)))
(assert (=> (>= 10000 x511) (= 0 (x328 x511))))
(assert (x2786 x2339))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875)))
(assert (x2786 x1861))
(assert (x2786 x1568))
(assert (= (x3025 x3639 x1495 x3799 x2775 x1044) (x328 (x3025 x3639 x1495 x3799 x2775 x1044))))
(assert (x1834 18563399957492015340621713183830377045030061062230639968016343144629396307968))
(assert (= (and x3308 x2672) x4086))
(assert (x2786 x1719))
(assert (= x441 (or x4367 x2371)))
(assert (= (x4010 (x3915 x1593 x3405 x1171)) x3405))
(assert (= (and (not x2502) x1998) x4373))
(assert (not (x1834 (x2903 x3403 x3097 x2559 x4044 x3362 x2146))))
(assert (=> (>= 10000 x1945) (= 0 (x328 x1945))))
(assert (= x2090 (x4010 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104))))
(assert (x2786 x4390))
(assert (=> (>= 10000 x3272) (= (x328 x3272) 0)))
(assert (< 10000 (x3915 x3859 x2465 x3694)))
(assert (=> (<= x2364 10000) (= (x328 x2364) 0)))
(assert (x149 x4057 256))
(assert (=> (<= x77 10000) (= 0 (x328 x77))))
(assert (x2786 x1369))
(assert (x2786 x4380))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308)))
(assert (= x3026 (and (not x3177) x86)))
(assert (x2786 x106))
(assert (x2091 x3786))
(assert (=> (>= 10000 x1809) (= (x328 x1809) 0)))
(assert (= (x3916 x2961 x4544) (x328 (x3916 x2961 x4544))))
(assert (= (or x2388 x4092) x1294))
(assert (x2786 x266))
(assert (x2786 x355))
(assert (x3758 x589))
(assert (not (x1834 (x2903 x3639 x1258 x4403 x165 x1097 x2877))))
(assert (= 12 (x1190 (x3915 64 x1818 12))))
(assert (= 64 (x75 (x3915 64 x3339 36))))
(assert (x2786 x1815))
(assert (= (x1190 (x3915 64 x3519 36)) 36))
(assert (= (and x3337 x2434) x3789))
(assert (x2786 x782))
(assert (= x3249 (or x73 x1184)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x3454 x1443 x569 x1856 x3010)))
(assert (= x529 (and x258 (not x3877))))
(assert (x2786 x1336))
(assert (x2786 x1570))
(assert (=> (>= 10000 x494) (= 0 (x328 x494))))
(assert (= x3806 (x1190 (x3025 x3914 x2565 x3806 x2413 x79))))
(assert (x2786 x2951))
(assert (= x3663 (=> (and (= false x194) (= x498 x2949) (= x1513 true)) x2553)))
(assert (= (and x3952 (not x3652)) x2787))
(assert (=> (<= x1478 10000) (= (x328 x1478) 0)))
(assert (= 12 (x1190 (x3915 64 x3383 12))))
(assert (= (and x4157 x3631) x813))
(assert (x2786 x1046))
(assert (< (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1450 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (> (x3915 64 x1521 7) 10000))
(assert (= x438 (and (not x2579) x1104)))
(assert (not (x1834 (x3916 x587 x487))))
(assert (x2786 x3297))
(assert (x2786 x229))
(assert (x2786 x448))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x274 x587 x939 x1435 x2707)))
(assert (x2786 x1821))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2054 10)))
(assert (x149 x4228 256))
(assert (x2786 x2059))
(assert (= (x328 (x3916 32 104)) (x3916 32 104)))
(assert (x2786 x3797))
(assert (x2786 x2490))
(assert (x2786 x2705))
(assert (> (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462) 10000))
(assert (x2786 x1355))
(assert (= x1492 (and x86 x3177)))
(assert (x2786 x3720))
(assert (not (x1834 (x3915 64 x3519 36))))
(assert (= (and x2226 (not x3974)) x5))
(assert (= 36 (x1190 (x3915 64 x2422 36))))
(assert (< 10000 (x2903 x587 x61 x783 x2151 x4535 x1441)))
(assert (x2786 x3755))
(assert (= (x328 1914215) 0))
(assert (x2786 x1264))
(assert (x2786 x3512))
(assert (=> (>= 10000 x3525) (= 0 (x328 x3525))))
(assert (=> (>= 10000 x1423) (= (x328 x1423) 0)))
(assert (= (and x4364 x3821) x2478))
(assert (=> (<= x1994 10000) (= (x328 x1994) 0)))
(assert (not (x1834 (x2903 x1593 x1270 x2523 x3069 x3055 x236))))
(assert (x1450 x4057))
(assert (x2786 x3241))
(assert (=> (<= x879 10000) (= (x328 x879) 0)))
(assert (x2786 x985))
(assert (= x4386 (=> (= x442 (+ x2917 x3564)) x3899)))
(assert (not (x1834 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353))))
(assert (< (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1156))
(assert (= (x2907 (x336 x312 x4207 x1 x506 x1403 x1216 x1181)) x1181))
(assert (x2786 x3987))
(assert (x2786 x3639))
(assert (=> (>= 10000 x1232) (= 0 (x328 x1232))))
(assert (x149 x1140 256))
(assert (= (and x1949 (not x3317)) x4370))
(assert (x3829 x1505))
(assert (x2786 x442))
(assert (x2786 x2093))
(assert (= x1043 (x3945 (x2903 x3454 x4392 x2466 x1043 x4469 x3179))))
(assert (= (and x72 x2773) x2717))
(assert (=> (>= 10000 x4500) (= 0 (x328 x4500))))
(assert (x2786 x2849))
(assert (x2786 x1687))
(assert (= x2159 (x3945 (x2903 x1840 x2678 x243 x2159 x2970 x384))))
(assert (x2786 x3558))
(assert (= x2170 (=> (and (= x2949 x3440) (= false x4537) (= x2172 true)) x2553)))
(assert (= (=> (and (>= 255 x1439) (= x531 (= 255 x1439))) (and (=> (and (and (= x3336 32) (= (x3915 64 x1439 36) x948) (= 1 x3386) (= x1860 (+ 1 x1439)) (= x1445 false) (= x2249 (x2191 255 x1860)) (= (x2191 255 x1860) x1662) (= x1446 x419) (= x187 false) (= (x2643 x948) x1674)) (not x531)) x3701) (=> (and (and (= 36 x2949) (= false x265) (= x2210 true)) x531) x2553))) x1602))
(assert (= (x4516 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)) x1684))
(assert (x2786 x1899))
(assert (= x1145 (and x3789 x1364)))
(assert (x2786 x1341))
(assert (x2786 x267))
(assert (= (and x1464 (not x3765)) x1824))
(assert (x3758 x3853))
(assert (x2786 x3314))
(assert (x2786 x2048))
(assert (x2786 x879))
(assert (x2786 x2102))
(assert (x2786 x4018))
(assert (= x1822 (=> (and (or x2207 (not x2207)) (= (= x4018 0) x2207)) x2862)))
(assert (x2786 x1963))
(assert (= (x75 (x3915 64 x363 12)) 64))
(assert (x2786 x897))
(assert (= (x1190 (x3915 x198 x2934 x960)) x960))
(assert (x1834 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (< 10000 (x3916 x3181 x1204)))
(assert (x1311 x1202))
(assert (x2786 x3589))
(assert (x2786 x3854))
(assert (x2786 x43))
(assert (= (x328 44057028636630039105102054091366763171729008530599747929804322044178077843456) 0))
(assert (not (x1834 (x3915 x3404 x2827 x2241))))
(assert (x2786 x2635))
(assert (x740 x306))
(assert (= (x3916 x3181 x1204) (x328 (x3916 x3181 x1204))))
(assert (> (x3915 64 x65 12) 10000))
(assert (x3758 x3705))
(assert (< (x274 x2730 x879 x542 x1004) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2913 10000) (= (x328 x2913) 0)))
(assert (x3829 x179))
(assert (x740 x2756))
(assert (x2786 x2603))
(assert (x2786 x197))
(assert (x1311 x3716))
(assert (= (and x2126 (not x2554)) x2618))
(assert (= (and x3087 (not x2365)) x573))
(assert (x2786 x914))
(assert (=> (>= 10000 x2707) (= (x328 x2707) 0)))
(assert (x3758 x4057))
(assert (x2786 x2213))
(assert (x2786 x2407))
(assert (x2786 x4057))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x274 x3404 x4099 x1850 x1196)))
(assert (= x2894 (or x358 (and x2935 (not x520)) (and x3631 (not x4157)) (and (not x2311) x813) (and x1732 (not x1186)))))
(assert (= x3060 (x2907 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060))))
(assert (x2786 x3893))
(assert (x1311 x2353))
(assert (= (x2278 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)) x2248))
(assert (=> (<= x368 10000) (= 0 (x328 x368))))
(assert (x2786 x3954))
(assert (x2786 x3225))
(assert (= x602 (and x531 x2247)))
(assert (< (x3915 64 x65 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2482) (= (x328 x2482) 0)))
(assert (x1450 x2353))
(assert (= x4469 (x2278 (x2903 x3454 x4392 x2466 x1043 x4469 x3179))))
(assert (= x1286 (and x4248 (not x4572))))
(assert (=> (<= x4300 10000) (= 0 (x328 x4300))))
(assert (= x3346 (=> (and (= x357 (= 0 x514)) (= x514 (x1912 x4585))) (and (=> (and x357 (and (= true x1682) (= x2949 0) (= x867 false))) x2553) (=> (not x357) x2677)))))
(assert (=> (>= 10000 x254) (= (x328 x254) 0)))
(assert (x2786 x48))
(assert (x740 x2298))
(assert (< 10000 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)))
(assert (= 103 (x4010 (x3916 32 103))))
(assert (= 0 (x328 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (=> (and (or x3842 (not x3842)) (= (= 0 x1549) x3842)) x3312) x4414))
(assert (x149 x252 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x3020))
(assert (x2786 x2299))
(assert (x2786 x558))
(assert (x1311 32))
(assert (x1450 x1996))
(assert (< (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1853 (and x3190 (not x4067))))
(assert (x2786 x3488))
(assert (= x1708 (x1190 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988))))
(assert (x1311 x3866))
(assert (x1311 x2325))
(assert (x2786 x2077))
(assert (x1311 x2261))
(assert (= (and (not x665) x1375) x184))
(assert (= (x328 8365236128558009046904410293209581292053118695343348878262597880337030709248) 0))
(assert (x2786 x1708))
(assert (x2786 x3062))
(assert (x2786 x873))
(assert (x2786 x133))
(assert (x2786 x1554))
(assert (=> (>= 10000 x4469) (= 0 (x328 x4469))))
(assert (=> (<= x1795 10000) (= (x328 x1795) 0)))
(assert (=> (>= 10000 x4544) (= 0 (x328 x4544))))
(assert (= (x75 (x3915 64 x2054 10)) 64))
(assert (x2786 x2949))
(assert (x1834 45231284858326638837332416019018714005183587760015845327913118753091066265600))
(assert (= x1337 (and x2788 (not x3480))))
(assert (x149 x970 256))
(assert (= (and x668 x219) x1636))
(assert (x1450 x4517))
(assert (x3153 x3324 32))
(assert (= 2 (x1190 (x3915 64 x3419 2))))
(assert (=> (<= x1603 10000) (= (x328 x1603) 0)))
(assert (= (x2515 (x2903 x198 x2377 x2801 x3779 x2284 x4064)) x4064))
(assert (x2786 x3164))
(assert (=> (>= 10000 x4535) (= 0 (x328 x4535))))
(assert (x2786 x467))
(assert (=> (>= 10000 x2136) (= 0 (x328 x2136))))
(assert (x2786 x3908))
(assert (= x3275 (=> (and (= x1084 0) (= x2368 1) (= x4315 x3969)) x4274)))
(assert (x2786 x1644))
(assert (=> (<= x4269 10000) (= (x328 x4269) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3916 x3403 x1726)))
(assert (x1834 18446744073709551615))
(assert (= x1942 (=> (and (= x176 x291) (= x2815 x1182) (= x396 x1849) (= x114 x1345) (= 0 x2141) (= x3334 x214) (= x684 x2926) (= x4 x3356) (= x1589 x762) (= x3917 x374) (= x745 x2141) (= x575 x638) (= x468 x904) (= 2 x215) (= x1182 (x2191 255 x3366)) (= x4018 0) (= x3908 x2070) (= x2134 x393) (= x2792 x2338)) x1822)))
(assert (=> (>= 10000 x2809) (= (x328 x2809) 0)))
(assert (x2786 x3773))
(assert (= x1475 (x4010 (x3915 64 x1475 6))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 x1840 x4015 x694)))
(assert (x2786 x1063))
(assert (= x3118 (and x2627 x967)))
(assert (= (x1190 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852)) x2001))
(assert (=> (<= x1545 10000) (= (x328 x1545) 0)))
(assert (x2786 x1745))
(assert (x2786 x3484))
(assert (< 10000 (x274 x2961 x782 x3442 x2029)))
(assert (= x2915 (x3945 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756))))
(assert (> (x274 x3639 x472 x3370 x1075) 10000))
(assert (not (x1834 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362))))
(assert (x2786 x1495))
(assert (= x2988 (x2907 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988))))
(assert (x2786 x804))
(assert (= x3636 (x3945 (x3025 x198 x4543 x431 x3636 x4004))))
(assert (x2786 x649))
(assert (=> (<= x4543 10000) (= 0 (x328 x4543))))
(assert (x1834 35477284059277649309253622239531857712935939406416048698883813673932370764389))
(assert (= (=> (and (= x1921 x3336) (= x419 x1978) (= x735 x3386)) x394) x3701))
(assert (x149 x2926 2))
(assert (= (and x8 x2190) x288))
(assert (x2786 x3466))
(assert (x1834 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x2786 x1406))
(assert (= x254 (x3945 (x274 x3454 x3902 x4269 x254))))
(assert (= x1915 (=> (and (= (> x1264 0) x1711) (= (x2655 x4558 2) x4517) (= x3364 (ite (> x1648 0) x4517 (x2191 127 x4517))) (= (x1377 (- x1648 (mod (ite (< x3364 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1264) (= (- x880 132) x706) (= (x2191 1 x4558) x1648)) (and (=> (not x1711) x1021) (=> (and (and (= (+ x880 32) x2051) (= (= x4580 0) x2270) (= (x2191 1 x4558) x4580)) x1711) (and (=> (and (and (or (= x2250 32) (= x2250 0)) (= x3565 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639680 x4558)) (= x2250 (* (ite (not (= x3364 0)) 1 0) 32)) (= x539 (+ x2051 x2250))) x2270) x3195) (=> (and (and (= (< 0 x3364) x815) (= (x3916 32 104) x4225)) (not x2270)) (and (=> (and (= 0 x3827) (not x815)) x204) (=> x815 x1432)))))))))
(assert (= x2691 (x1190 (x3915 x3639 x1852 x2691))))
(assert (= (x328 (x3915 64 x2456 0)) (x3915 64 x2456 0)))
(assert (< 10000 (x3915 x3181 x457 x824)))
(assert (not (x1834 (x3915 64 x2175 100))))
(assert (= (x328 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (not (x1834 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104))))
(assert (= 36 (x1190 (x3915 64 x2886 36))))
(assert (< 10000 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)))
(assert (> (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955) 10000))
(assert (=> (<= x198 10000) (= 0 (x328 x198))))
(assert (x2786 x587))
(assert (x2786 x2919))
(assert (=> (>= 10000 x2378) (= 0 (x328 x2378))))
(assert (=> (<= x4271 10000) (= (x328 x4271) 0)))
(assert (x794 32 x953))
(assert (x2786 x3142))
(assert (= x1102 (=> (and (= x1802 false) (= true x3849) (= x2949 36)) x2553)))
(assert (x2786 x590))
(assert (= x1497 (=> (and (= true x1984) (= x3278 0) (= x279 false)) x2628)))
(assert (x2786 x215))
(assert (x2786 x3274))
(assert (= 64 (x75 (x3915 64 x2625 2))))
(assert (x1450 x3716))
(assert (x2786 x156))
(assert (= x1998 (or x3795 x314 x4352 x3654 x3715)))
(assert (= x1794 (x3945 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575))))
(assert (=> (>= 10000 x2679) (= 0 (x328 x2679))))
(assert (x2786 x4271))
(assert (x2786 x986))
(assert (x2786 x769))
(assert (x794 32 (ite (not (= 0 x4299)) 1 0)))
(assert (x2786 x4033))
(assert (x2786 x407))
(assert (x2786 x2795))
(assert (x2786 x2445))
(assert (x2786 x4363))
(assert (x1450 x2795))
(assert (x3829 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x274 x1593 x292 x2337 x2714)))
(assert (x2786 x684))
(assert (x2786 x92))
(assert (x2786 x4007))
(assert (= (x75 (x3915 64 x4383 2)) 64))
(assert (x2786 x2565))
(assert (= (x328 (x3916 x3859 x2420)) (x3916 x3859 x2420)))
(assert (x2786 x551))
(assert (x2786 x3387))
(assert (= x4227 (and x4252 x930)))
(assert (x2779 x24))
(assert (= x198 (x75 (x274 x198 x3098 x1628 x156))))
(assert (= (and x2787 (not x1799)) x2901))
(assert (= x4172 (and x950 (not x1356))))
(assert (= x3190 (and x2847 x2387)))
(assert (x740 x2728))
(assert (x2786 x943))
(assert (not (x1834 (x3916 x1593 x1233))))
(assert (x2786 x4337))
(assert (x2786 x512))
(assert (x2786 x2293))
(assert (= x1218 (and (not x2129) x174)))
(assert (=> (<= x3168 10000) (= (x328 x3168) 0)))
(assert (= (=> (and (= x3747 x1046) (= x232 x349) (= x3679 x349) (= x3570 2) (= x241 x3831) (= (x2191 255 x1178) x3747) (= x1972 0)) x874) x1623))
(assert (x1311 x1755))
(assert (= (or (and x3710 (not x4006)) x598) x1916))
(assert (x2786 x2100))
(assert (< (x336 x3435 x547 x872 x1944 x494 x713 x3785) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x328 4294967295)))
(assert (x2786 x4220))
(assert (x2786 x530))
(assert (x2786 x2001))
(assert (= (x4010 (x3915 64 x2658 36)) x2658))
(assert (= x1282 (x2278 (x3025 x2961 x2167 x3141 x3950 x1282))))
(assert (x2786 x4458))
(assert (= (x1190 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)) x1580))
(assert (= x2856 (and x4130 (not x811))))
(assert (= (or x2076 x4438) x3541))
(assert (x2786 x1205))
(assert (x1311 x68))
(assert (x2786 x2500))
(assert (x2786 x847))
(assert (x2786 x1532))
(assert (x740 x4270))
(assert (= x2639 (or (and x3760 x2753) x2894)))
(assert (= (x4010 (x2903 x587 x61 x783 x2151 x4535 x1441)) x61))
(assert (x2786 x696))
(assert (> (x274 x3435 x3241 x2482 x1968) 10000))
(assert (x2786 x4174))
(assert (x2786 x1349))
(assert (x2786 x1144))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 x3403 x802 x1126)))
(assert (= x1171 (x1190 (x3915 x1593 x3405 x1171))))
(assert (=> (<= x542 10000) (= 0 (x328 x542))))
(assert (x2786 x3981))
(assert (not (x1834 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560))))
(assert (x2786 x2557))
(assert (= x4503 (or x2435 x2033)))
(assert (= (x2278 (x2903 x3859 x4126 x2093 x3895 x226 x2266)) x226))
(assert (=> (>= 10000 x3950) (= (x328 x3950) 0)))
(assert (x2786 x3949))
(assert (x2786 x4317))
(assert (x2786 x432))
(assert (= 36 (x1190 (x3915 64 x3339 36))))
(assert (=> (>= 10000 x2566) (= (x328 x2566) 0)))
(assert (= x1683 (and (not x2630) x2797)))
(assert (x2786 x1765))
(assert (x2227 x4558))
(assert (x1311 x467))
(assert (= (=> (= (not (< 128 x2254)) x809) (and x809 x3569)) x3429))
(assert (= 7 (x1190 (x3915 64 x1521 7))))
(assert (= x2364 (x4010 (x3916 x1840 x2364))))
(assert (< 10000 (x3916 x587 x487)))
(assert (x2786 x3098))
(assert (= x2096 (and x1797 (not x884))))
(assert (= (x1190 (x3915 64 x2522 7)) 7))
(assert (< (x274 x312 x2100 x135 x1608) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x2318))
(assert (< (x3915 x3859 x2465 x3694) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x601 x1747) x4528))
(assert (= (x328 (x3025 x1840 x561 x4356 x901 x4480)) (x3025 x1840 x561 x4356 x901 x4480)))
(assert (= x3052 (and (not x3110) x1491)))
(assert (> (x3915 64 x2625 2) 10000))
(assert (x2786 x2427))
(assert (x1450 x1310))
(assert (< (x2903 x312 x1352 x3445 x324 x1899 x1600) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3272 (x3945 (x3025 x3403 x4098 x4260 x3272 x4291))))
(assert (x2786 x687))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x3403 x3097 x2559 x4044 x3362 x2146)))
(assert (x2786 x4059))
(assert (x2786 x2223))
(assert (=> (>= 10000 x381) (= (x328 x381) 0)))
(assert (x2786 x987))
(assert (x2786 x1961))
(assert (= x3313 (x1190 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x3383 12)))
(assert (x2786 x241))
(assert (x2786 x165))
(assert (= (x3916 32 x159) (x328 (x3916 32 x159))))
(assert (x2786 x3199))
(assert (not (x1834 (x2903 x198 x2377 x2801 x3779 x2284 x4064))))
(assert (x2786 x462))
(assert (= x3292 (or x3540 (and x3541 (not x1404)))))
(assert (= (x328 (x3915 64 x1542 2)) (x3915 64 x1542 2)))
(assert (= (x1190 (x3915 64 x2658 36)) 36))
(assert (x2786 x384))
(assert (x2786 x2837))
(assert (x3153 x3625 32))
(assert (x2786 x3565))
(assert (= x629 (and x341 x1266)))
(assert (= x3886 (x2515 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756))))
(assert (x2786 x2173))
(assert (not (x1834 (x3915 64 x2872 36))))
(assert (= x2071 (x2278 (x3025 x3435 x34 x2931 x4309 x2071))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x1179 6)))
(assert (x3758 x4579))
(assert (x2786 x3402))
(assert (x2786 x3334))
(assert (x2786 x2780))
(assert (x2786 x2284))
(assert (not (x1834 (x336 x3435 x547 x872 x1944 x494 x713 x3785))))
(assert (= (x1190 (x2903 x2961 x1003 x185 x2848 x2564 x4031)) x185))
(assert (= x1017 (and x811 x4130)))
(assert (x2786 x1181))
(assert (= (x75 (x2903 x1593 x1270 x2523 x3069 x3055 x236)) x1593))
(assert (= x2453 (=> (and (= (x990 (+ x2031 32)) x3775) (= (x1377 (- x3775 128)) x587) (= (x990 (+ x1108 128)) x2031) (= x3062 (x990 (+ x1108 128))) (= (x1377 (- x587 32)) x1840) (= x2063 (x3915 64 x1521 7)) (= x3437 (>= 224 x1840))) (and (=> (and (= x4308 (x1246 320)) (= (x1246 128) x4015) (= x2028 (x3915 x1840 x4015 x694)) (= x243 (x1246 160)) (= x561 (x1246 128)) (= x3277 (x1246 160)) (= x2187 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563)) (= x4356 (x1246 160)) (= (x1246 160) x168) (= x3930 (x274 x1840 x94 x168 x450)) (= (x1246 192) x1244) (= (x1246 192) x450) (= (x1246 288) x4563) (= (x1246 224) x2970) (= x4480 (x1246 224)) (= (x1246 256) x4158) (= (x3916 x1840 x2364) x3185) (= (x2903 x1840 x2678 x243 x2159 x2970 x384) x2188) (= x901 (x1246 192)) (= x94 (x1246 128)) (= x2159 (x1246 192)) (= x863 (x1246 224)) (= x3408 (ite (= 0 x1840) x2217 (ite (>= 32 x1840) x3185 (ite (>= 64 x1840) x2028 (ite (>= 96 x1840) x3930 (ite (>= 128 x1840) x2902 (ite (>= 160 x1840) x2188 (ite (>= 192 x1840) x2187 (ite (>= 224 x1840) x3791 x1144))))))))) (= x694 (x1246 160)) (= x1771 (x1246 128)) (= (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308) x3791) (= x843 (x1246 192)) (= x2364 (x1246 128)) (= (x1246 256) x3381) (= x957 (x1246 288)) (= x1485 (x1246 128)) (= (x1246 224) x961) (= (x1246 128) x2678) (= x2217 (x1338 0)) (= x384 (x1246 256)) (= x4531 (>= 224 x587)) (= (x3025 x1840 x561 x4356 x901 x4480) x2902) (= (x1246 160) x2133)) (and (=> (and (= (x1246 128) x2315) (= (x1246 192) x2707) (= (x1246 192) x2500) (= (x1246 256) x2176) (= (x1246 160) x595) (= x3637 (x1246 160)) (= x4180 (x1246 160)) (= x3996 (x1246 128)) (= (= x1851 0) x2660) (= x4491 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)) (= x783 (x1246 160)) (= (x1246 288) x634) (= (x1246 192) x2151) (= x3845 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)) (= x2592 (x1246 224)) (= x3734 (x3025 x587 x2784 x3637 x2581 x2116)) (= x61 (x1246 128)) (= x4535 (x1246 224)) (= x1514 (x1338 0)) (= (x3915 64 x2150 (ite (= 0 x587) x1514 (ite (<= x587 32) x1911 (ite (<= x587 64) x3957 (ite (<= x587 96) x3591 (ite (>= 128 x587) x3734 (ite (<= x587 160) x411 (ite (<= x587 192) x4491 (ite (<= x587 224) x3845 x3538))))))))) x552) (= (x3513 x552) x1851) (= (x1246 128) x487) (= (x1246 128) x2784) (= (x3916 x587 x487) x1911) (= x411 (x2903 x587 x61 x783 x2151 x4535 x1441)) (= x1435 (x1246 160)) (= (x1246 160) x1809) (= x851 (x1246 288)) (= (x1246 192) x2581) (= (x1246 320) x737) (= x3591 (x274 x587 x939 x1435 x2707)) (= (x1246 224) x2116) (= (x3915 x587 x3996 x1809) x3957) (= x1347 (x1246 128)) (= (x1246 256) x2180) (= (x1246 128) x939) (= x2316 (x1246 192)) (= (x1246 256) x1441) (= (x1246 224) x1059)) (and (=> (not x2660) x3475) (=> (and x2660 (and (= true x3620) (= 132 x2650) (= false x4251))) x492))) x4531)) x3437))))
(assert (x2786 x2420))
(assert (x2786 x4468))
(assert (=> (>= 10000 x736) (= (x328 x736) 0)))
(assert (< (x3915 x2961 x3880 x3013) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x4179))
(assert (x3758 x3629))
(assert (not (x1834 (x1338 0))))
(assert (x740 x2409))
(assert (x2786 x3433))
(assert (= (x75 (x274 x3403 x3737 x2303 x1556)) x3403))
(assert (not (x1834 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308))))
(assert (= (and x3545 x3598) x4056))
(assert (< 10000 (x3916 x2961 x4544)))
(assert (=> (<= x2499 10000) (= (x328 x2499) 0)))
(assert (x1450 x1107))
(assert (> (x3025 x3859 x4167 x2034 x2194 x1406) 10000))
(assert (x2786 x4178))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)))
(assert (x2786 x3067))
(assert (x149 x3274 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 x3181 x457 x824)))
(assert (x1834 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (=> (<= x62 10000) (= 0 (x328 x62))))
(assert (x2786 x4561))
(assert (=> (>= 10000 x398) (= (x328 x398) 0)))
(assert (x2786 x2422))
(assert (= x1270 (x4010 (x2903 x1593 x1270 x2523 x3069 x3055 x236))))
(assert (x794 1000000000 x1505))
(assert (< (x3916 32 104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x3564))
(assert (x1834 1341992515))
(assert (x2786 x776))
(assert (= (x328 (x3915 x312 x3260 x982)) (x3915 x312 x3260 x982)))
(assert (= (x4010 (x3915 64 x2291 (ite (= x3403 0) x4359 (ite (>= 32 x3403) x1038 (ite (>= 64 x3403) x2944 (ite (>= 96 x3403) x2858 (ite (>= 128 x3403) x4310 (ite (<= x3403 160) x700 (ite (>= 192 x3403) x870 (ite (>= 224 x3403) x333 x1761)))))))))) x2291))
(assert (x2786 x234))
(assert (= (x274 x2730 x879 x542 x1004) (x328 (x274 x2730 x879 x542 x1004))))
(assert (=> (<= x1642 10000) (= 0 (x328 x1642))))
(assert (= (=> (and (= x1398 (not (> x2745 32))) (= x329 (x2808 x237))) (and x1398 (=> (= x3450 32) x3187))) x2302))
(assert (x2786 x3524))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)))
(assert (= x1083 (and x1769 (not x4473))))
(assert (x2786 x4142))
(assert (= (x4516 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308)) x4308))
(assert (= (x2903 x3454 x4392 x2466 x1043 x4469 x3179) (x328 (x2903 x3454 x4392 x2466 x1043 x4469 x3179))))
(assert (x2786 x176))
(assert (x2786 x2617))
(assert (x2786 x431))
(assert (= 64 (x75 (x3915 64 x2705 10))))
(assert (= x4393 (=> (and (= x1828 (= 0 x871)) (or (and x1828 (= x765 128)) (and (and (<= 1 x4089) (= x4089 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x24)) (= (+ 128 x4089) x765) (= (x990 (+ x871 63)) x24) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x4089)) (not x1828)))) x3918)))
(assert (x2786 x767))
(assert (= x3175 x3569))
(assert (x2786 x1946))
(assert (x2786 x3670))
(assert (x2786 x4585))
(assert (x149 x804 256))
(assert (x2786 x3729))
(assert (x2786 x1439))
(assert (x1450 x3786))
(assert (= x2940 (and (not x4185) x2898)))
(assert (= (x328 (x3915 64 x2705 10)) (x3915 64 x2705 10)))
(assert (= x1412 (=> (and (= x3126 true) (= x2949 36) (= x1829 false)) x2553)))
(assert (= (x328 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x2786 x2796))
(assert (= (x4516 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)) x1573))
(assert (=> (<= x226 10000) (= (x328 x226) 0)))
(assert (x2786 x4191))
(assert (x740 x4165))
(assert (=> (>= 10000 x2093) (= (x328 x2093) 0)))
(assert (=> (<= x2068 10000) (= 0 (x328 x2068))))
(assert (x2786 x3442))
(assert (x149 x24 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x2133))
(assert (x2786 x2050))
(assert (= (x1190 (x2903 x2730 x173 x1367 x4453 x3919 x625)) x1367))
(assert (= (=> (and (= x1517 x1271) (= x925 x2792) (= x2070 x3583) (= x1596 x2393) (= x2926 x455) (= x3334 x2222) (= x4133 x2134) (= x2393 0) (= x1849 x1224) (= x468 x1704) (= (x2191 255 x2634) x4223) (= x176 x3449) (= x1959 x4223) (= x1589 x2125) (= x1733 x4) (= x496 x3917) (= 0 x1078) (= 2 x3089) (= x114 x4194)) x4238) x3745))
(assert (x2786 x703))
(assert (=> (>= 10000 x1179) (= 0 (x328 x1179))))
(assert (x2786 x3806))
(assert (=> (>= 10000 x1840) (= (x328 x1840) 0)))
(assert (x2786 x4021))
(assert (not (x1834 (x336 x587 x1347 x595 x2316 x1059 x2176 x851))))
(assert (< 10000 (x2903 x3404 x3490 x1699 x2954 x1545 x4410)))
(assert (x2786 x69))
(assert (x3758 x467))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x336 x198 x2739 x2475 x511 x460 x801 x1951)))
(assert (= x1372 (and x3678 x1691)))
(assert (= (=> (= x2998 (< 0 x1417)) (and (=> (and (not x2998) (and (= true x759) (= false x233) (= x2259 4))) x2690) (=> (and (and (= x133 x4330) (= x2813 x257)) x2998) x3897))) x2329))
(assert (x2786 x1070))
(assert (x2786 x3716))
(assert (and (= (x3833 9 3) 27) (= 81 (x3833 9 9)) (= (x3833 3 3) 9) (= 81 (x3833 27 3))))
(assert (=> (<= x1560 10000) (= (x328 x1560) 0)))
(assert (x2786 x1178))
(assert (= (x328 (x3915 64 x4383 2)) (x3915 64 x4383 2)))
(assert (x740 x3336))
(assert (x2786 x3400))
(assert (=> (>= 10000 x1739) (= 0 (x328 x1739))))
(assert (= x2943 (and x2901 (not x3456))))
(assert (=> (<= x92 10000) (= (x328 x92) 0)))
(assert (x1834 3957931183))
(assert (not (x1834 (x3025 x1840 x561 x4356 x901 x4480))))
(assert (x2786 x3853))
(assert (x2786 x546))
(assert (= (x3945 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)) x2500))
(assert (= x4291 (x2278 (x3025 x3403 x4098 x4260 x3272 x4291))))
(assert (x1311 x1646))
(assert (=> (>= 10000 x3904) (= 0 (x328 x3904))))
(assert (< 10000 (x274 x198 x3098 x1628 x156)))
(assert (= (and (not x2131) x288) x227))
(assert (= (x2515 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875)) x1470))
(assert (= (x75 (x3915 64 x4166 36)) 64))
(assert (x149 x366 256))
(assert (= x1341 (x2907 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684))))
(assert (= (=> (and (= (x2191 1 x2926) x675) (= (> x1251 0) x503) (= x1383 (ite (< 0 x675) x1477 (x2191 127 x1477))) (= (x1377 (- x675 (mod (ite (> 32 x1383) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1251) (= (x2655 x2926 2) x1477)) (and (=> (not x503) x99) (=> (and x503 (and (= x1960 (x2191 1 x2926)) (= x3317 (= x1960 0)))) (and (=> (and (= x4540 (> x1383 0)) (not x3317)) (and (=> x4540 x2343) (=> (not x4540) x583))) (=> x3317 x632))))) x1132))
(assert (x2786 x786))
(assert (x2786 x2853))
(assert (x2786 x4272))
(assert (= (and x3739 x3296) x1986))
(assert (< (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x842))
(assert (= x3796 (x1190 (x3025 x3181 x3905 x3796 x3823 x2008))))
(assert (= (x3916 x2730 x1539) (x328 (x3916 x2730 x1539))))
(assert (x2786 x3979))
(assert (x740 x1710))
(assert (x2786 x2456))
(assert (= (or x2561 x1885) x800))
(assert (x2786 x1944))
(assert (= (x328 (x3915 64 x4383 36)) (x3915 64 x4383 36)))
(assert (= (x1190 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233)) x1603))
(assert (= (x328 (x3915 64 x2658 36)) (x3915 64 x2658 36)))
(assert (x2786 x4560))
(assert (= (x274 x3639 x472 x3370 x1075) (x328 (x274 x3639 x472 x3370 x1075))))
(assert (x2786 x1851))
(assert (x2786 x2988))
(assert (x2786 x3784))
(assert (= x934 (=> (and (= false x3992) (= true x3194) (= x3278 0)) x2628)))
(assert (= (x328 (x3025 x3454 x1443 x569 x1856 x3010)) (x3025 x3454 x1443 x569 x1856 x3010)))
(assert (=> (>= 10000 x1951) (= 0 (x328 x1951))))
(assert (= (and x3869 x284) x671))
(assert (x2786 x3984))
(assert (< (x3025 x3404 x544 x842 x1300 x2619) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3915 64 x3406 (ite (= 0 x198) x803 (ite (>= 32 x198) x755 (ite (>= 64 x198) x2778 (ite (>= 96 x198) x2583 (ite (<= x198 128) x4541 (ite (<= x198 160) x1868 (ite (<= x198 192) x3100 (ite (<= x198 224) x1331 x2424))))))))) (x328 (x3915 64 x3406 (ite (= 0 x198) x803 (ite (<= x198 32) x755 (ite (>= 64 x198) x2778 (ite (>= 96 x198) x2583 (ite (<= x198 128) x4541 (ite (>= 160 x198) x1868 (ite (<= x198 192) x3100 (ite (<= x198 224) x1331 x2424))))))))))))
(assert (x2786 x746))
(assert (= (x3915 64 x3493 10) (x328 (x3915 64 x3493 10))))
(assert (= (x3915 64 x3419 2) (x328 (x3915 64 x3419 2))))
(assert (= (x328 (x2903 x3181 x2757 x3204 x670 x4500 x1727)) (x2903 x3181 x2757 x3204 x670 x4500 x1727)))
(assert (= (x75 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756)) x3639))
(assert (< (x3915 x3454 x305 x4271) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x454))
(assert (not (x1834 (x2903 x3914 x3066 x4129 x3006 x936 x4404))))
(assert (= x2707 (x3945 (x274 x587 x939 x1435 x2707))))
(assert (=> (>= 10000 x783) (= (x328 x783) 0)))
(assert (x2786 x486))
(assert (x2786 x2523))
(assert (x3758 x1376))
(assert (=> (<= x658 10000) (= 0 (x328 x658))))
(assert (x2786 x3315))
(assert (x2786 x976))
(assert (=> (<= x3445 10000) (= (x328 x3445) 0)))
(assert (x2786 x1516))
(assert (x2786 x3426))
(assert (x2786 x2457))
(assert (=> (<= x3419 10000) (= 0 (x328 x3419))))
(assert (not (x1834 (x3915 64 x1414 12))))
(assert (= (x2515 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) x709))
(assert (x2786 x498))
(assert (= (x4010 (x3915 64 x355 7)) x355))
(assert (=> (>= 10000 x3639) (= 0 (x328 x3639))))
(assert (x3758 x804))
(assert (x2786 x2019))
(assert (x2786 x4089))
(assert (= x1600 (x2515 (x2903 x312 x1352 x3445 x324 x1899 x1600))))
(assert (x2786 x4469))
(assert (= (or x1962 x1903) x1639))
(assert (= x3301 (and x4473 x1769)))
(assert (= x3618 (x4010 (x3915 64 x3618 36))))
(assert (=> (<= x1944 10000) (= 0 (x328 x1944))))
(assert (> (x3915 64 x2422 36) 10000))
(assert (x2786 x743))
(assert (x1311 x3402))
(assert (x1311 x1178))
(assert (= x3454 (x75 (x3916 x3454 x62))))
(assert (= (and x1692 (not x1415)) x1319))
(assert (x2786 x4356))
(assert (x2786 x2016))
(assert (= x2316 (x3945 (x336 x587 x1347 x595 x2316 x1059 x2176 x851))))
(assert (> (x274 x587 x939 x1435 x2707) 10000))
(assert (x2786 x1613))
(assert (= x601 (and x8 (not x2190))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x274 x3181 x1739 x2139 x368)))
(assert (= x569 (x1190 (x3025 x3454 x1443 x569 x1856 x3010))))
(assert (x1311 x1754))
(assert (= (x328 35477284059277649309253622239531857712935939529143554018288893216769000107873) 0))
(assert (x2786 x3894))
(assert (x740 x2259))
(assert (x2786 x1053))
(assert (not (x1834 (x3915 64 x4347 6))))
(assert (= (and x1935 x1743) x122))
(assert (x2786 x2768))
(assert (= (and x3047 x1220) x4253))
(assert (=> (<= x3404 10000) (= (x328 x3404) 0)))
(assert (x2786 x4256))
(assert (x1834 44057028636630039105102054091366763171729008530599747929804322044178077843456))
(assert (x2786 x3352))
(assert (= (x328 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233)) (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233)))
(assert (= x3884 (and x3858 (not x3127))))
(assert (=> (>= 10000 x2493) (= 0 (x328 x2493))))
(assert (x2786 x1945))
(assert (x2786 x4300))
(assert (x2786 x2774))
(assert (x2786 x1999))
(assert (=> (>= 10000 x3277) (= (x328 x3277) 0)))
(assert (= (x3025 x2730 x1434 x676 x4377 x480) (x328 (x3025 x2730 x1434 x676 x4377 x480))))
(assert (x2786 x3626))
(assert (> (x3916 x3403 x1726) 10000))
(assert (x2786 x569))
(assert (x2786 x765))
(assert (x2786 x2872))
(assert (x2786 x2950))
(assert (=> (>= 10000 x4335) (= (x328 x4335) 0)))
(assert (= x1143 (and (not x3790) x4215)))
(assert (= (x328 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)) (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)))
(assert (= x1771 (x4010 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563))))
(assert (= (and x3947 x2652) x3901))
(assert (= (x4010 (x3915 64 x2522 7)) x2522))
(assert (x2786 x2250))
(assert (=> (>= 10000 x3163) (= 0 (x328 x3163))))
(assert (x2786 x2347))
(assert (=> (>= 10000 x487) (= 0 (x328 x487))))
(assert (= (and x643 (not x1618)) x1280))
(assert (x2786 x2926))
(assert (< 10000 (x2903 x3454 x4392 x2466 x1043 x4469 x3179)))
(assert (x740 x57))
(assert (x1311 x1376))
(assert (x2786 x2730))
(assert (= x1904 (and (not x3464) x1017)))
(assert (= (or x1143 x3054) x3146))
(assert (x2786 x3348))
(assert (> (x3915 64 x1542 2) 10000))
(assert (x2786 x4378))
(assert (not (x1834 (x336 x312 x4207 x1 x506 x1403 x1216 x1181))))
(assert (x740 x943))
(assert (=> (<= x3383 10000) (= 0 (x328 x3383))))
(assert (= 64 (x75 (x3915 64 x3493 10))))
(assert (= (x3025 x312 x2752 x483 x3825 x2774) (x328 (x3025 x312 x2752 x483 x3825 x2774))))
(assert (x2786 x575))
(assert (= (x75 (x3915 64 x2175 100)) 64))
(assert (x2786 x3060))
(assert (=> (<= x3600 10000) (= (x328 x3600) 0)))
(assert (x2786 x2595))
(assert (= (=> (and (= x3086 (ite (< 0 x3495) x2078 (x2191 127 x2078))) (= (< 0 x1746) x3580) (= (x1377 (- x3495 (mod (ite (> 32 x3086) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1746) (= x2078 (x2655 x2926 2)) (= x3495 (x2191 1 x2926))) (and (=> (not x3580) x99) (=> (and x3580 (and (= (= 0 x484) x1976) (= (x2191 1 x2926) x484))) (and (=> x1976 x430) (=> (and (= (< 0 x3086) x3534) (not x1976)) (and (=> x3534 x3032) (=> (not x3534) x725))))))) x2436))
(assert (= (x4010 (x3915 64 x3519 36)) x3519))
(assert (x2786 x2051))
(assert (x2786 x689))
(assert (= (and x2578 x2468) x950))
(assert (x2786 x2761))
(assert (x2786 x2619))
(assert (x2786 x3550))
(assert (x2786 x4464))
(assert (x2786 x903))
(assert (x2786 x192))
(assert (x2786 x2070))
(assert (x2786 x1297))
(assert (x149 x3402 256))
(assert (=> (>= 10000 x1474) (= 0 (x328 x1474))))
(assert (x2786 x2056))
(assert (> (x2903 x312 x1352 x3445 x324 x1899 x1600) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x3454 x4392 x2466 x1043 x4469 x3179)))
(assert (=> (>= 10000 x4282) (= 0 (x328 x4282))))
(assert (= x2620 (and (not x505) x4440)))
(assert (x740 x628))
(assert (= (x75 (x3915 x3454 x305 x4271)) x3454))
(assert (x2786 x4316))
(assert (x2786 x1487))
(assert (x740 x2949))
(assert (= (x75 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988)) x3454))
(assert (= (x1190 (x3915 64 x2522 3)) 3))
(assert (=> (>= 10000 x2266) (= (x328 x2266) 0)))
(assert (x149 x1310 256))
(assert (=> (>= 10000 x2090) (= (x328 x2090) 0)))
(assert (x2786 x706))
(assert (x2786 x3262))
(assert (x2786 x1674))
(assert (= (x3915 64 x1439 36) (x328 (x3915 64 x1439 36))))
(assert (= (x2907 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563)) x4563))
(assert (> (x336 x1593 x3216 x381 x3446 x2361 x205 x546) 10000))
(assert (=> (>= 10000 x587) (= (x328 x587) 0)))
(assert (x2786 x1675))
(assert (= (x2907 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875)) x3875))
(assert (x1311 x576))
(assert (x2786 x1964))
(assert (= x4129 (x1190 (x2903 x3914 x3066 x4129 x3006 x936 x4404))))
(assert (x2786 x1185))
(assert (x2786 x3354))
(assert (not (x1834 (x3025 x3914 x2565 x3806 x2413 x79))))
(assert (= x4438 (or x2341 x2268)))
(assert (x1311 x3705))
(assert (x740 x1325))
(assert (=> (>= 10000 x2992) (= 0 (x328 x2992))))
(assert (= (x4010 (x3916 x3639 x2679)) x2679))
(assert (= 10 (x1190 (x3915 64 x2054 10))))
(assert (not (x1834 (x3916 x3639 x2679))))
(assert (x2786 x2843))
(assert (= (and x284 (not x3869)) x2594))
(assert (= (and x997 (not x222)) x995))
(assert (=> (<= x3785 10000) (= 0 (x328 x3785))))
(assert (< (x2903 x587 x61 x783 x2151 x4535 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2907 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) x4300))
(assert (x2786 x1105))
(assert (x2786 x1720))
(assert (= 0 (x328 35477284059277649309253622239531857712935939406416048698883813673932370764389)))
(assert (x2786 x574))
(assert (x1311 x1996))
(assert (x2786 x607))
(assert (x2786 x4556))
(assert (= (and x928 x1194) x3759))
(assert (= (x328 (x2903 x2961 x1003 x185 x2848 x2564 x4031)) (x2903 x2961 x1003 x185 x2848 x2564 x4031)))
(assert (= (and x3710 x4006) x598))
(assert (< 10000 (x3915 64 x1764 6)))
(assert (= (x1190 (x3915 64 x2625 2)) 2))
(assert (= (x75 (x3025 x198 x4543 x431 x3636 x4004)) x198))
(assert (x2786 x1191))
(assert (=> (<= x1689 10000) (= 0 (x328 x1689))))
(assert (= x3226 (or (and x4456 x586) (and x784 x3834))))
(assert (x2786 x866))
(assert (x2786 x3006))
(assert (x1450 x804))
(assert (x2786 x2224))
(assert (=> (>= 10000 x3013) (= 0 (x328 x3013))))
(assert (x2786 x474))
(assert (x1311 x4579))
(assert (= x2156 (x1190 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955))))
(assert (= x4023 (x1190 (x3915 x3435 x994 x4023))))
(assert (x2786 x461))
(assert (x794 32 x3351))
(assert (x149 x3720 32))
(assert (x2786 x1859))
(assert (= 64 (x75 (x3915 64 x2886 36))))
(assert (= (x1190 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069)) x1474))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x4578 100)))
(assert (= (and x1547 (not x3982)) x3710))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x3859 x4167 x2034 x2194 x1406)))
(assert (x3758 x909))
(assert (= (x75 (x336 x312 x4207 x1 x506 x1403 x1216 x1181)) x312))
(assert (x1450 x4579))
(assert (=> (<= x2241 10000) (= (x328 x2241) 0)))
(assert (x2786 x2931))
(assert (= (=> (and (= x4413 x3684) (= x1849 x574) (= x703 (x2191 255 x1107)) (= x2367 x4) (= x2070 x3633) (= x2204 0) (= x4474 x3334) (= x474 x703) (= 0 x3684) (= x1589 x2603) (= x4487 x2792) (= x176 x1607) (= x1906 x1812) (= x1681 x3917) (= x273 x468) (= x2926 x1775) (= x2544 2) (= x1961 x114) (= x4376 x2134)) x564) x4163))
(assert (= (x1190 (x3915 64 x2175 100)) 100))
(assert (= x3229 (or x2647 x1427)))
(assert (x1834 37212044363551391237827125972600881127463135526663889129579209803314629705728))
(assert (x2786 x3827))
(assert (x2786 x808))
(assert (= (x75 (x3915 64 x3419 36)) 64))
(assert (x149 x1860 256))
(assert (x2786 x2273))
(assert (x2786 x2933))
(assert (= (x75 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575)) x2730))
(assert (= (and (not x196) x2047) x375))
(assert (x2786 x2877))
(assert (= (=> (and (= (+ x268 1) x1872) (= x4275 x4315) (= x379 (+ x1872 1)) (= 1 x746) (= false x1611) (= 1 x3119) (= x4467 32) (= false x4591)) x2005) x956))
(assert (= (x328 38584857114614344130707641774870441135179346817440091772946614992565446901760) 0))
(assert (> (x336 x312 x4207 x1 x506 x1403 x1216 x1181) 10000))
(assert (=> (<= x4377 10000) (= 0 (x328 x4377))))
(assert (= (or x3210 x1522 x322 x1045 x1923 x915) x609))
(assert (x2786 x3451))
(assert (x1311 x4057))
(assert (x2786 x24))
(assert (x2786 x2947))
(assert (= (x328 115792089237316195423570985008687907853269984665640564039457584007913129639680) 0))
(assert (=> (<= x4015 10000) (= (x328 x4015) 0)))
(assert (x2786 x2852))
(assert (x2786 x3403))
(assert (= x483 (x1190 (x3025 x312 x2752 x483 x3825 x2774))))
(assert (= 11 (x1190 (x3915 64 x793 11))))
(assert (= (and (not x2758) x1307) x965))
(assert (=> (<= x2792 10000) (= (x328 x2792) 0)))
(assert (x2786 x2078))
(assert (=> (>= 10000 x872) (= (x328 x872) 0)))
(assert (= x2619 (x2278 (x3025 x3404 x544 x842 x1300 x2619))))
(assert (= (x328 37212044363551391237827125972600881127463135526663889129579209803314629705728) 0))
(assert (x2786 x3386))
(assert (< (x3915 x3404 x2827 x2241) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1376))
(assert (< 10000 (x3916 x3454 x62)))
(assert (= (x2278 (x3025 x3454 x1443 x569 x1856 x3010)) x3010))
(assert (x2786 x597))
(assert (= 0 (x328 1313998243)))
(assert (x2786 x2368))
(assert (= (x4010 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)) x330))
(assert (x149 x4558 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x2103))
(assert (= x3680 (and x4397 (not x1721))))
(assert (x2786 x2700))
(assert (= x4403 (x1190 (x2903 x3639 x1258 x4403 x165 x1097 x2877))))
(assert (=> (>= 10000 x2156) (= 0 (x328 x2156))))
(assert (= x2421 (and x4485 (not x1663))))
(assert (x2786 x2499))
(assert (x2786 x4189))
(assert (x2786 x226))
(assert (=> (<= x236 10000) (= 0 (x328 x236))))
(assert (= 6 (x1190 (x3915 64 x4347 6))))
(assert (x2786 x3046))
(assert (= (x2515 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)) x1197))
(assert (= x4377 (x3945 (x3025 x2730 x1434 x676 x4377 x480))))
(assert (= (x2903 x3859 x4126 x2093 x3895 x226 x2266) (x328 (x2903 x3859 x4126 x2093 x3895 x226 x2266))))
(assert (< (x3916 x3404 x3283) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3916 x1840 x2364)))
(assert (x2786 x1879))
(assert (x2786 x3640))
(assert (= x198 (x75 (x2903 x198 x2377 x2801 x3779 x2284 x4064))))
(assert (not (x1834 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988))))
(assert (= x82 (x4010 (x3915 64 x82 36))))
(assert (x2786 x398))
(assert (< (x3915 64 x3242 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1462 x402) x2112))
(assert (> (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737) 10000))
(assert (= (x1190 (x3915 64 x3419 6)) 6))
(assert (= 0 (x328 48755886422350550937420582033662272622158303343164848365600209189876434731008)))
(assert (x1311 x626))
(assert (=> (>= 10000 x1441) (= (x328 x1441) 0)))
(assert (x2786 x1928))
(assert (x2786 x1252))
(assert (not (x1834 (x274 x312 x2100 x135 x1608))))
(assert (x2091 x3625))
(assert (= (x4010 (x3915 64 x3406 (ite (= 0 x3914) x351 (ite (>= 32 x3914) x1647 (ite (<= x3914 64) x1709 (ite (<= x3914 96) x2405 (ite (<= x3914 128) x3928 (ite (>= 160 x3914) x1334 (ite (<= x3914 192) x4303 (ite (<= x3914 224) x208 x1277)))))))))) x3406))
(assert (= x3788 (x4010 (x3915 64 x3788 2))))
(assert (x2786 x285))
(assert (x2786 x2215))
(assert (x1311 x1310))
(assert (= (x328 (x3915 x3404 x2827 x2241)) (x3915 x3404 x2827 x2241)))
(assert (x3758 x3235))
(assert (x2786 x2052))
(assert (x2786 x949))
(assert (x3153 (+ 31 x2000) 32))
(assert (> (x3915 64 x4347 6) 10000))
(assert (x2786 x326))
(assert (= (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104) (x328 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104))))
(assert (not (x1834 (x2903 x3435 x1326 x4159 x1918 x655 x4296))))
(assert (not (x1834 (x3915 64 x793 11))))
(assert (= (and x833 x657) x3094))
(assert (= x4065 (=> (and (= x1088 false) (= true x1501) (= x57 x3108)) x100)))
(assert (= x4317 (x3945 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684))))
(assert (= x426 (and (not x3390) x1683)))
(assert (x2786 x1325))
(assert (< (x3915 64 x4166 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1093))
(assert (not (x1834 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573))))
(assert (x2786 x1171))
(assert (x2786 x947))
(assert (= x2139 (x1190 (x274 x3181 x1739 x2139 x368))))
(assert (= (and x1454 (not x2942)) x4525))
(assert (=> (<= x782 10000) (= (x328 x782) 0)))
(assert (=> (>= 10000 x3737) (= 0 (x328 x3737))))
(assert (= x1845 (or (and x3790 x4215) (and x3263 (not x1020)))))
(assert (=> (<= x2705 10000) (= (x328 x2705) 0)))
(assert (=> (>= 10000 x1918) (= (x328 x1918) 0)))
(assert (= (and (not x3452) x4091) x1941))
(assert (x149 x3304 32))
(assert (x2786 x311))
(assert (x2786 x1368))
(assert (x2786 x4517))
(assert (x2786 x4263))
(assert (x2786 x1809))
(assert (x3829 (ite (not (= x4299 0)) 1 0)))
(assert (= (or x3254 x426) x58))
(assert (x2786 x2760))
(assert (= x2469 (and x1878 (not x3471))))
(assert (x2786 x3353))
(assert (= (x328 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)) (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)))
(assert (= (x3945 (x2903 x198 x2377 x2801 x3779 x2284 x4064)) x3779))
(assert (x2786 x634))
(assert (= (x4010 (x274 x2961 x782 x3442 x2029)) x782))
(assert (x2786 x628))
(assert (not (x1834 (x3916 x3859 x2420))))
(assert (= x490 (and x2556 (not x1529))))
(assert (= x34 (x4010 (x3025 x3435 x34 x2931 x4309 x2071))))
(assert (=> (>= 10000 x1171) (= (x328 x1171) 0)))
(assert (x2786 x3917))
(assert (x2786 x3808))
(assert (= x561 (x4010 (x3025 x1840 x561 x4356 x901 x4480))))
(assert (x2786 x578))
(assert (= (x4010 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353)) x787))
(assert (= x2122 (or (and x800 (not x1711)) (and (not x193) x624))))
(assert (x2786 x339))
(assert (x1450 x2890))
(assert (x2786 x3397))
(assert (x740 x3108))
(assert (x2786 x3343))
(assert (=> (<= x4551 10000) (= 0 (x328 x4551))))
(assert (=> (<= x2422 10000) (= (x328 x2422) 0)))
(assert (=> (>= 10000 x2316) (= 0 (x328 x2316))))
(assert (= (or x2641 x2594) x2247))
(assert (x2786 x646))
(assert (< (x3916 x312 x2052) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3829 (ite (not (= 0 x584)) 1 0)))
(assert (= (x328 (x3915 64 x3383 12)) (x3915 64 x3383 12)))
(assert (= (=> (and (= (x990 (+ 128 x1963)) x4134) (= (x990 (+ x1963 128)) x1932) (= (x1377 (- x2541 128)) x3914) (= x2961 (x1377 (- x3914 32))) (= (x990 (+ x4134 32)) x2541) (= (x3915 64 x355 7) x2871) (= x980 (<= x2961 224))) (and (=> (and (= x570 (x1652 256)) (= x611 (x1652 288)) (= x2564 (x1652 224)) (= x3880 (x1652 128)) (= x185 (x1652 160)) (= (x1652 192) x1689) (= (x1652 160) x3141) (= (x1652 128) x3014) (= (x1652 192) x3670) (= (x1652 224) x1024) (= x4031 (x1652 256)) (= (x1652 128) x2167) (= x2848 (x1652 192)) (= x1580 (x1652 160)) (= x1067 (x2903 x2961 x1003 x185 x2848 x2564 x4031)) (= (ite (= x2961 0) x3073 (ite (<= x2961 32) x1977 (ite (<= x2961 64) x1032 (ite (<= x2961 96) x1650 (ite (>= 128 x2961) x1847 (ite (<= x2961 160) x1067 (ite (>= 192 x2961) x771 (ite (<= x2961 224) x2467 x416)))))))) x4524) (= x3103 (x1652 320)) (= x2272 (x1652 288)) (= x1032 (x3915 x2961 x3880 x3013)) (= x1282 (x1652 224)) (= x3302 (x1652 224)) (= x3442 (x1652 160)) (= x3013 (x1652 160)) (= (x1652 128) x4544) (= x2496 (x1652 128)) (= x2029 (x1652 192)) (= (x3025 x2961 x2167 x3141 x3950 x1282) x1847) (= x1003 (x1652 128)) (= x4121 (x1652 256)) (= (<= x3914 224) x3178) (= x771 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)) (= (x1652 128) x782) (= (x274 x2961 x782 x3442 x2029) x1650) (= x3950 (x1652 192)) (= (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103) x2467) (= x1925 (x1652 160)) (= (x3916 x2961 x4544) x1977) (= (x1338 0) x3073)) (and (=> (and (= (x1652 160) x2407) (= (x3916 x3914 x4463) x1647) (= (x1652 160) x3168) (= (x3915 x3914 x1238 x2407) x1709) (= x2157 (x1652 128)) (= x2740 128) (= x3006 (x1652 192)) (= (x2655 x3932 32) x179) (= (x1652 288) x3887) (= x936 (x1652 224)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1963) (>= x1963 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= x2413 (x1652 192)) (= x3466 (* x179 32)) (> x1133 x1397) (= x953 (x2655 x786 32)) (= x3693 (or (and (= true (<= x847 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x847)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x847))) (= (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060) x4303) (= (x990 (+ x2451 31)) x786) (= x264 (x990 (+ 32 x2560))) (= x4554 (x1652 320)) (= (x990 (+ x2451 x1011)) x2665) (= (x1652 160) x3806) (= (x1652 192) x914) (= x3508 (x1652 224)) (= (x274 x3914 x2591 x3168 x3784) x2405) (= x4320 (x1652 128)) (= x1720 (x1652 160)) (= x3932 (x990 (+ 31 x1963))) (= x2136 (x1652 224)) (= (* 32 x953) x2560) (= x1133 (x990 (+ x264 x1397))) (= x3730 (x1652 192)) (= (x1652 256) x3203) (= (x1652 128) x3066) (= (x1512 x1397) x847) (= x2565 (x1652 128)) (= x3784 (x1652 192)) (= (x990 (+ 160 x1963)) x788) (= x351 (x1338 0)) (= x2591 (x1652 128)) (= x1334 (x2903 x3914 x3066 x4129 x3006 x936 x4404)) (= (x1652 224) x79) (= (+ x3466 160) x1397) (= x208 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554)) (= x1730 (x3915 64 x3406 (ite (= 0 x3914) x351 (ite (<= x3914 32) x1647 (ite (<= x3914 64) x1709 (ite (<= x3914 96) x2405 (ite (<= x3914 128) x3928 (ite (>= 160 x3914) x1334 (ite (>= 192 x3914) x4303 (ite (<= x3914 224) x208 x1277)))))))))) (= (x1652 256) x2378) (= x1011 (x990 (+ 32 x1397))) (= (x1652 256) x4404) (<= 161 x1133) (= x3928 (x3025 x3914 x2565 x3806 x2413 x79)) (= x3060 (x1652 288)) (= (x1652 160) x4129) (= x1238 (x1652 128)) (= x4463 (x1652 128)) (= x2992 (x1652 160))) (and (=> (and x3693 (and (= x4287 true) (= false x1867) (= x4284 0))) x1969) (=> (not x3693) x3898))) x3178)) x980)) x4501))
(assert (x794 32 (ite (not (= 0 x2745)) 1 0)))
(assert (x2786 x4520))
(assert (x2786 x368))
(assert (not (x1834 (x3915 64 x3419 2))))
(assert (= (and (not x3599) x4449) x1947))
(assert (= x694 (x1190 (x3915 x1840 x4015 x694))))
(assert (= (=> (= (= x1549 0) x3177) (and (=> (and (and (= x1366 false) (= true x728) (= x2949 x2840)) x3177) x2553) (=> (and (and (= x2177 x3155) (= x4337 x3787)) (not x3177)) x83))) x3312))
(assert (=> (>= 10000 x1968) (= 0 (x328 x1968))))
(assert (x2786 x1761))
(assert (x1311 x4558))
(assert (= (ite (= x587 0) x1514 (ite (<= x587 32) x1911 (ite (>= 64 x587) x3957 (ite (>= 96 x587) x3591 (ite (>= 128 x587) x3734 (ite (<= x587 160) x411 (ite (>= 192 x587) x4491 (ite (>= 224 x587) x3845 x3538)))))))) (x1190 (x3915 64 x2150 (ite (= 0 x587) x1514 (ite (<= x587 32) x1911 (ite (>= 64 x587) x3957 (ite (>= 96 x587) x3591 (ite (>= 128 x587) x3734 (ite (>= 160 x587) x411 (ite (>= 192 x587) x4491 (ite (<= x587 224) x3845 x3538))))))))))))
(assert (x1450 x252))
(assert (=> (<= x2852 10000) (= (x328 x2852) 0)))
(assert (= (x328 (x274 x3181 x1739 x2139 x368)) (x274 x3181 x1739 x2139 x368)))
(assert (x2786 x2572))
(assert (x1311 x2073))
(assert (= x1601 (=> (and (= x3278 0) (= true x1661) (= x2863 false)) x2628)))
(assert (x3829 x433))
(assert (x2786 x4551))
(assert (x2786 x2799))
(assert (= (x75 (x3915 64 x3618 36)) 64))
(assert (not (x1834 (x3915 x1840 x4015 x694))))
(assert (= 0 (x328 18446744073709551615)))
(assert (=> (<= x3886 10000) (= (x328 x3886) 0)))
(assert (x2786 x4291))
(assert (x2786 x1133))
(assert (x2786 x57))
(assert (x2786 x4351))
(assert (= (x2515 (x2903 x587 x61 x783 x2151 x4535 x1441)) x1441))
(assert (= (or x3149 x816) x2202))
(assert (x2786 x2913))
(assert (not (x1834 (x3915 x198 x2934 x960))))
(assert (=> (>= 10000 x3059) (= (x328 x3059) 0)))
(assert (x2786 x3629))
(assert (x2786 x2212))
(assert (x2786 x1478))
(assert (x3758 x1860))
(assert (x2786 x4592))
(assert (= (x4010 (x3915 64 x2625 1)) x2625))
(assert (= x3492 (and x679 (not x4394))))
(assert (= x1305 (and (not x4424) x350)))
(assert (x2779 x252))
(assert (=> (>= 10000 x1780) (= 0 (x328 x1780))))
(assert (not (x1834 (x3915 x2961 x3880 x3013))))
(assert (= (x328 (x3915 64 x2175 100)) (x3915 64 x2175 100)))
(assert (x2786 x4098))
(assert (=> (<= x1059 10000) (= 0 (x328 x1059))))
(assert (= (x328 (x274 x1840 x94 x168 x450)) (x274 x1840 x94 x168 x450)))
(assert (= (x328 14609135308879574245051756109060786979925523914932377087145621868633940557824) 0))
(assert (x2786 x3872))
(assert (x2786 x1852))
(assert (= (x2907 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575)) x3575))
(assert (x2786 x1073))
(assert (=> (<= x4404 10000) (= (x328 x4404) 0)))
(assert (< (x3915 64 x4347 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x655 10000) (= 0 (x328 x655))))
(assert (= false x23))
(assert (x740 x638))
(assert (=> (<= x863 10000) (= (x328 x863) 0)))
(assert (= x1129 (and x614 x1796)))
(assert (=> (>= 10000 x61) (= 0 (x328 x61))))
(assert (= x4385 (=> (and (= x1632 (<= x1593 224)) (= x1316 (x990 (+ x1963 128))) (= x4050 (x3915 64 x355 7)) (= x1593 (x1377 (- x198 32))) (= (x990 (+ x4000 32)) x1902) (= x4000 (x990 (+ 128 x1963))) (= x198 (x1377 (- x1902 128)))) (and x1632 (=> (and (= x2821 (x1250 224)) (= x1348 (x1250 128)) (= (x3915 x1593 x3405 x1171) x1413) (= (x1250 320) x1945) (= x2430 (x3025 x1593 x1348 x1765 x3525 x1232)) (= (x1250 224) x1232) (= (x3916 x1593 x1233) x2026) (= (x336 x1593 x3216 x381 x3446 x2361 x205 x546) x647) (= x546 (x1250 288)) (= x195 (x1250 192)) (= x4143 (x2903 x1593 x1270 x2523 x3069 x3055 x236)) (= (x1250 160) x381) (= x4286 (x1338 0)) (= x2531 (x1250 256)) (= x3405 (x1250 128)) (= x236 (x1250 256)) (= (x1250 192) x3069) (= (x1250 128) x3216) (= x1291 (>= 224 x198)) (= x1233 (x1250 128)) (= (x1250 288) x2171) (= (ite (= x1593 0) x4286 (ite (>= 32 x1593) x2026 (ite (<= x1593 64) x1413 (ite (>= 96 x1593) x3863 (ite (<= x1593 128) x2430 (ite (>= 160 x1593) x4143 (ite (<= x1593 192) x647 (ite (>= 224 x1593) x4079 x2493)))))))) x973) (= x2714 (x1250 192)) (= x155 (x1250 160)) (= (x1250 192) x3525) (= x2361 (x1250 224)) (= x1171 (x1250 160)) (= x4079 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)) (= x1270 (x1250 128)) (= (x1250 128) x292) (= x2337 (x1250 160)) (= x205 (x1250 256)) (= x3055 (x1250 224)) (= (x274 x1593 x292 x2337 x2714) x3863) (= (x1250 128) x330) (= (x1250 160) x2523) (= (x1250 192) x3446) (= x1765 (x1250 160))) (and x1291 (=> (and (= (x1250 256) x801) (= (x1250 128) x2370) (= (x1250 224) x2284) (= x3779 (x1250 192)) (= x2778 (x3915 x198 x2934 x960)) (= (x1250 128) x2934) (= x128 (x1250 288)) (= x1994 (x1250 160)) (= (x1338 0) x803) (= x4541 (x3025 x198 x4543 x431 x3636 x4004)) (= (x1250 224) x460) (= x1951 (x1250 288)) (= (x1250 192) x3636) (= (x3916 x198 x2370) x755) (= x4064 (x1250 256)) (= x2248 (x1250 224)) (= (x1250 128) x3098) (= (x3513 x1609) x13) (= (x3915 64 x3406 (ite (= x198 0) x803 (ite (>= 32 x198) x755 (ite (>= 64 x198) x2778 (ite (>= 96 x198) x2583 (ite (>= 128 x198) x4541 (ite (>= 160 x198) x1868 (ite (<= x198 192) x3100 (ite (<= x198 224) x1331 x2424))))))))) x1609) (= x4254 (= 0 x13)) (= (x1250 128) x2377) (= x3100 (x336 x198 x2739 x2475 x511 x460 x801 x1951)) (= x2212 (x1250 128)) (= x156 (x1250 192)) (= (x1250 192) x511) (= x1331 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)) (= x4004 (x1250 224)) (= x1628 (x1250 160)) (= (x1250 128) x2739) (= (x1250 160) x960) (= x1197 (x1250 256)) (= (x1250 192) x944) (= (x1250 160) x431) (= x4543 (x1250 128)) (= (x274 x198 x3098 x1628 x156) x2583) (= x1573 (x1250 320)) (= (x1250 160) x2475) (= (x2903 x198 x2377 x2801 x3779 x2284 x4064) x1868) (= x2801 (x1250 160))) (and (=> (not x4254) x1931) (=> (and x4254 (and (= false x120) (= x4284 132) (= x2918 true))) x1969)))))))))
(assert (x2786 x1795))
(assert (x2786 x1248))
(assert (x2786 x2721))
(assert (x2786 x2039))
(assert (= x4574 (x3945 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104))))
(assert (x2786 x1126))
(assert (< 10000 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353)))
(assert (= x3403 (x75 (x2903 x3403 x3097 x2559 x4044 x3362 x2146))))
(assert (=> (>= 10000 x1593) (= 0 (x328 x1593))))
(assert (not (x1834 (x3915 64 x1764 6))))
(assert (x2786 x3058))
(assert (= (and x2652 (not x3947)) x3021))
(assert (x2786 x1500))
(assert (x2786 x387))
(assert (=> (<= x4480 10000) (= 0 (x328 x4480))))
(assert (x2786 x4187))
(assert (= x1994 (x1190 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573))))
(assert (= (x2907 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233)) x3233))
(assert (= x4131 (and (not x1055) x3209)))
(assert (= (x328 3963877391197344453575983046348115674221700746820753546331534351508065746944) 0))
(assert (= x1238 (x4010 (x3915 x3914 x1238 x2407))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3916 x2730 x1539)))
(assert (= (x1190 (x3025 x198 x4543 x431 x3636 x4004)) x431))
(assert (= 64 (x75 (x3915 64 x2747 100))))
(assert (< (x274 x3914 x2591 x3168 x3784) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x149 x366 2))
(assert (x2786 x1526))
(assert (x2786 x2127))
(assert (x2786 x4403))
(assert (x2786 x1972))
(assert (> (x3915 64 x3406 (ite (= x198 0) x803 (ite (<= x198 32) x755 (ite (<= x198 64) x2778 (ite (>= 96 x198) x2583 (ite (<= x198 128) x4541 (ite (>= 160 x198) x1868 (ite (>= 192 x198) x3100 (ite (>= 224 x198) x1331 x2424))))))))) 10000))
(assert (=> (>= 10000 x709) (= (x328 x709) 0)))
(assert (x2786 x1579))
(assert (< (x3915 64 x355 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3916 x198 x2370) 10000))
(assert (=> (>= 10000 x128) (= 0 (x328 x128))))
(assert (x2786 x2972))
(assert (not (x1834 (x274 x1593 x292 x2337 x2714))))
(assert (= x3454 (x75 (x3025 x3454 x1443 x569 x1856 x3010))))
(assert (x2786 x863))
(assert (x2786 x1930))
(assert (not (x1834 (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3916 x3914 x4463)))
(assert (not (x1834 (x3915 64 x2522 7))))
(assert (x2786 x1541))
(assert (= (=> (= x3176 (= 0 x1078)) (and (=> (and (not x3176) (and (= x4194 x1245) (= x1704 x3476) (= x4017 x2222) (= x4133 x3987) (= x1959 x4569) (= x2103 x3449) (= x3583 x636) (= x496 x1768) (= x4171 x1733) (= x1224 x4575) (= x4144 x455) (= x2125 x2356) (= x4095 x925) (= x1596 x2597))) x3777) (=> (and (and (= true x476) (= false x3794) (= x1517 x3108)) x3176) x100))) x3934))
(assert (x2786 x1881))
(assert (> (x3915 64 x1818 12) 10000))
(assert (x2786 x287))
(assert (= x816 (and x4478 x1372)))
(assert (= (x4010 (x274 x3181 x1739 x2139 x368)) x1739))
(assert (not (x1834 (x274 x2730 x879 x542 x1004))))
(assert (= x3187 (=> (= x3265 (+ 292 x3450)) x119)))
(assert (x2786 x957))
(assert (= x2305 (=> (= (not (< 32 x4299)) x1000) (and x1000 x4097))))
(assert (x2786 x521))
(assert (= (and (not x4175) x3292) x3510))
(assert (not (x1834 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108))))
(assert (=> (>= 10000 x4259) (= (x328 x4259) 0)))
(assert (x2786 x4538))
(assert (x149 x2325 256))
(assert (x2786 x4453))
(assert (= 64 (x75 (x3915 64 x1552 36))))
(assert (x2786 x1780))
(assert (x2786 x2886))
(assert (x2395 x1748))
(assert (x1834 14609135308879574245051756109060786979925523914932377087145621868633940557824))
(assert (= (x3915 64 x1179 6) (x328 (x3915 64 x1179 6))))
(assert (=> (>= 10000 x3670) (= (x328 x3670) 0)))
(assert (= (x2278 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104)) x448))
(assert (= (x328 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)) (x336 x587 x1347 x595 x2316 x1059 x2176 x851)))
(assert (x2786 x542))
(assert (x2786 x548))
(assert (= x1464 (and (not x1228) x1614)))
(assert (x2786 x2581))
(assert (x2786 x595))
(assert (x794 1000000000 x1047))
(assert (x2786 x1258))
(assert (= (x328 (x2903 x3914 x3066 x4129 x3006 x936 x4404)) (x2903 x3914 x3066 x4129 x3006 x936 x4404)))
(assert (x2786 x925))
(assert (= x3203 (x2515 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060))))
(assert (= (x1190 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)) x2445))
(assert (x2395 x4041))
(assert (x1450 1))
(assert (x2786 x2625))
(assert (x2786 x480))
(assert (=> (>= 10000 x737) (= (x328 x737) 0)))
(assert (x2786 x1230))
(assert (= x1840 (x75 (x3025 x1840 x561 x4356 x901 x4480))))
(assert (=> (<= x448 10000) (= 0 (x328 x448))))
(assert (=> (>= 10000 x3400) (= (x328 x3400) 0)))
(assert (x2786 x829))
(assert (x2786 x1485))
(assert (< 10000 (x2903 x3859 x4126 x2093 x3895 x226 x2266)))
(assert (= (x75 (x3915 64 x4383 36)) 64))
(assert (= (x4516 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955)) x2955))
(assert (x2786 x502))
(assert (not (x1834 (x3916 x1840 x2364))))
(assert (x2786 x717))
(assert (= (or x4240 x557) x2046))
(assert (= (x75 (x2903 x3404 x3490 x1699 x2954 x1545 x4410)) x3404))
(assert (x2786 x367))
(assert (x2786 x477))
(assert (x2786 x1735))
(assert (x2786 x3055))
(assert (x1450 x935))
(assert (=> (<= x2420 10000) (= (x328 x2420) 0)))
(assert (not (x1834 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060))))
(assert (x1450 x597))
(assert (= x506 (x3945 (x336 x312 x4207 x1 x506 x1403 x1216 x1181))))
(assert (= x1863 (=> (and (= 0 x2650) (= x1436 false) (= x750 true)) x492)))
(assert (> (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563) 10000))
(assert (x2786 x3007))
(assert (= (and (not x4513) x965) x4231))
(assert (x740 x1812))
(assert (x149 x24 32))
(assert (=> (>= 10000 x4554) (= 0 (x328 x4554))))
(assert (= (x2278 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875)) x3059))
(assert (= x1403 (x2278 (x336 x312 x4207 x1 x506 x1403 x1216 x1181))))
(assert (x2786 x1107))
(assert (x2786 x751))
(assert (x2786 x94))
(assert (= (x328 106705613605932439001713296114446454776331749937047859905631657259250407702528) 0))
(assert (x2786 x939))
(assert (x2786 x2560))
(assert (x2786 x3372))
(assert (=> (>= 10000 x3902) (= (x328 x3902) 0)))
(assert (x1450 x3629))
(assert (= (x328 (x3915 64 x1795 36)) (x3915 64 x1795 36)))
(assert (x2786 x2214))
(assert (= (x4010 (x274 x312 x2100 x135 x1608)) x2100))
(assert (not (x1834 (x3916 x3914 x4463))))
(assert (=> (<= x2955 10000) (= (x328 x2955) 0)))
(assert (< 10000 (x3915 64 x355 7)))
(assert (= x2535 (=> (= x2489 (= 0 x727)) (and (=> (and (and (= true x3240) (= false x2725) (= x2924 4)) (not x2489)) x4395) (=> (and (and (= x1462 (< 0 x1665)) (= x1665 (x537 x1314)) (= x1314 (x3915 64 x2054 10)) (<= x1665 255)) x2489) (and (=> (and (and (or (and (and (or (and x3110 (and (= x792 x2070) (= x1849 x1532) (= x812 x3359) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2505) (= x2501 x1589) (= x176 x1759) (= false x3587) (= x3334 x3736) (= x1453 x2926) (= x114 x2224) (<= 0 x2505) (= x4059 x3917) (= x3519 x3848) (= x4378 x4) (= 32 x2042) (= x1658 x2792) (= x2192 false) (= x1832 1) (= x2505 x3503) (= x2134 x1063) (= x1047 x468))) (and (and (= x3519 x3848) (= x1849 x1532) (= x2134 x1063) (= 0 x1832) (= false x3628) (= x3592 2) (= x3736 x3334) (= x1453 x2926) (= true x4465) (= x1589 x2501) (= x792 x2070) (= x4 x4378) (= x1658 x2792) (= x176 x1759) (= x2042 36) (= x3917 x4059) (= x812 x2598) (= x2224 x114) (= x2598 0) (= x1047 x468)) (not x3110))) (and (= x3841 x946) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x4561) (>= x2476 1) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1047 1000000000)) x3085) (= false x3658) (= x3110 (and x3085 x1480)) (= x3841 x1047) (<= x1023 127) (= (<= x2505 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1480) (= (* 1000000000 x1047) x2505) (= x1693 36) (= (x1912 x1309) x2476) (= x1426 false) (>= 127 x1023) (= 310283853 x1568))) x1575) (and (and (= x468 x1047) (= x3489 (x1912 x4335)) (<= 1 x3489) (= 32 x2042) (= x176 x1759) (= x3334 x3736) (= x435 310283853) (= false x3311) (<= x1063 1461501637330902918203684832716283019655932542975) (= x4378 x4) (= x2134 x1063) (= x792 x2070) (= x3268 false) (= x1589 x2501) (= x2224 x114) (= 1 x1832) (= x661 false) (>= x1063 1) (= x1658 x2792) (= false x2358) (= x2926 x1453) (= x3848 x3519) (<= x4586 127) (= x3800 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x1047 x1698) (= x1063 x4335) (= x1532 x1849) (= 36 x276) (<= x4586 127) (= x4059 x3917) (= x3359 x812)) (not x1575))) (and (= 128 x2318) (>= 1461501637330902918203684832716283019655932542975 x1063) (= x1575 (= x1309 x1063)))) x1462) x3944) (=> (and (and (= x2694 false) (= 4 x2924) (= true x690)) (not x1462)) x4395)))))))
(assert (x2786 x4046))
(assert (< 10000 (x2903 x3435 x1326 x4159 x1918 x655 x4296)))
(assert (=> (>= 10000 x384) (= (x328 x384) 0)))
(assert (= x204 (=> (= x539 (+ x3827 x2051)) x3195)))
(assert (not (x1834 (x274 x3403 x3737 x2303 x1556))))
(assert (= x2811 (and x2524 x3023)))
(assert (x2786 x3617))
(assert (= x1460 (and x1797 x884)))
(assert (x2786 x676))
(assert (= x4395 (=> (and (= x1555 0) (= x1555 x4315) (= x4467 x2924) (= 0 x3119)) x2005)))
(assert (=> (>= 10000 x1756) (= 0 (x328 x1756))))
(assert (= (x3025 x3914 x2565 x3806 x2413 x79) (x328 (x3025 x3914 x2565 x3806 x2413 x79))))
(assert (not x1576))
(assert (< (x3025 x2961 x2167 x3141 x3950 x1282) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3758 x3297))
(assert (= (and x196 x2047) x2720))
(assert (= (x1190 (x3025 x3639 x1495 x3799 x2775 x1044)) x3799))
(assert (x2786 x2955))
(assert (x1450 x2078))
(assert (= x4072 (=> (and (= x2288 (< 0 x3941)) (= x3941 (x1377 (- x2099 (mod (ite (> 32 x192) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2191 1 x4558) x2099) (= (x2655 x4558 2) x2073) (= x192 (ite (> x2099 0) x2073 (x2191 127 x2073)))) (and (=> (and (and (= x686 (= x3802 0)) (= (x2191 1 x4558) x3802)) x2288) (and (=> x686 x3346) (=> (and (not x686) (= (< 0 x192) x3821)) (and (=> x3821 x2675) (=> (not x3821) x2452))))) (=> (not x2288) x463)))))
(assert (x3758 x687))
(assert (= x4249 (x4010 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069))))
(assert (x2786 x824))
(assert (x2786 x3852))
(assert (x3153 x2926 2))
(assert (= x381 (x1190 (x336 x1593 x3216 x381 x3446 x2361 x205 x546))))
(assert (= (and x1166 (not x4016)) x4508))
(assert (x3153 x2213 256))
(assert (x2786 x2240))
(assert (= (x2907 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955)) x2132))
(assert (x2786 x3665))
(assert (x2786 x361))
(assert (not (x1834 (x3915 64 x4383 2))))
(assert (x2786 x1724))
(assert (= (and x2620 (not x74)) x2607))
(assert (not (x1834 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069))))
(assert (= x116 (x2278 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108))))
(assert (x1311 x589))
(assert (= (or (and x1882 x1207) (and x1523 x1660) (and x334 x1904) (and x1901 x2469) (and x922 x526)) x2979))
(assert (= (x2278 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) x1335))
(assert (x2786 x1805))
(assert (= x585 (or (and x1548 x189) (and x1614 x1228))))
(assert (x2786 x4340))
(assert (= (and (not x4124) x3399) x3732))
(assert (x1311 x24))
(assert (x2786 x2984))
(assert (x2786 x1739))
(assert (x2786 x2714))
(assert (x2786 x433))
(assert (= (x2515 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563)) x3381))
(assert (= (=> (and (and (= x407 x3173) (and (= x1355 (+ 4 x380)) (not (< x3230 x1101)) (= (+ x3859 x2297) x1101) (= x3173 x1057) (= (* 32 x3531) x3931) (<= x1613 127) (>= 18446744073709551615 x2000) (= (x4345 x1355) x2000) (= (+ 32 x1355) x3410) (= x3057 false) (= x3401 (ite (< 0 x11) x3198 (x2191 127 x3198))) (= x1328 1914215) (= (x3915 64 x2522 3) x159) (<= x1613 127) (or (= x1570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1570)) (= x3271 (x3619 x2625)) (= x72 (= x3401 0)) (= x3531 (x2655 (+ 31 x3401) 32)) (= x3623 (x1451 x1057)) (> x3230 x4442) (= (x1912 x2625) x2605) (= x229 (+ 4 x4191)) (> x3230 x88) (not (> x1329 x3230)) (= x387 x1930) (= (x2191 1 x3786) x11) (= (x2655 x3786 2) x3198) (>= 18446744073709551615 x3859) (= x407 x1532) (>= x2605 1) (= (x4345 x229) x3859) (= x3352 x3271) (= (+ x229 32) x2297) (= x4592 x2313) (= (+ 160 x3931) x3342) (= (x1377 (- x11 (mod (ite (> 32 x3401) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1570) (= x510 false) (= x1329 (+ x2000 x3410)) (= x4442 (+ x1355 31)) (= x3786 (x1787 x159)) (= (+ x229 31) x88))) (and (= x1926 true) (= x190 false) (>= 1461501637330902918203684832716283019655932542975 x1309) (<= x4061 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 18446744073709551615 x380) (= x456 (< 0 (x1912 x4335))) (<= x4432 1461501637330902918203684832716283019655932542975) (= x488 x3949) (not (= x2625 x4335)) (= x3029 false) (>= x4335 1) (= x1137 1914215) (= x3643 x2625) (not (= x1309 x4335)) (<= x1929 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x534 0) (<= x2625 1461501637330902918203684832716283019655932542975) (<= 1 x1532) (>= x4302 0) x3891 (= (x1141 0) x488) (= false x756) (= x3359 0) (>= x1309 1) (= x3345 0) (= x3809 false) (>= x1560 1) (<= x2522 65535) (not (= x2625 x1309)) (= x2870 0) (= (< 0 (x1912 x1309)) x3735) (>= 1461501637330902918203684832716283019655932542975 x3173) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1015) (>= 18446744073709551615 x2291) (= x1532 x1560) (= x2522 (x1141 4)) (= (< 0 (x1912 x1560)) x3891) (<= x2772 1461501637330902918203684832716283019655932542975) (>= x4432 0) (= 0 x4427) (= x1312 x4191) (>= x4061 0) (= x2291 x387) (<= 0 x1929) (>= x2625 1) (<= 0 x1920) (>= x1015 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3230) (<= 0 x373) (not (= x1309 x1560)) (= (< 0 (x1912 x2625)) x1396) (<= x1560 1461501637330902918203684832716283019655932542975) (>= 4294967295 x1920) (= (x1141 36) x4191) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x534) (>= 1461501637330902918203684832716283019655932542975 x1532) (>= x1658 1) (= 4 x2534) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2236) (>= x191 0) (= x4332 false) (<= 1 x3173) (= x1658 x2625) (<= x191 1461501637330902918203684832716283019655932542975) (= x2291 (x1141 68)) (not (= x4335 x1560)) (not (= x2625 x1560)) (>= 18446744073709551615 x4191) (>= 1461501637330902918203684832716283019655932542975 x1658) (>= 1461501637330902918203684832716283019655932542975 x4335) (= (x1141 100) x380) (>= x2772 0) x1396 (<= x4302 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2236) x3735 (<= 196 x3230) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x373) (= x380 x4391) x456 (= x2313 x2522))) (and (=> x72 x4084) (=> (and (= x4211 (< 31 x3401)) (not x72)) (and (=> (and (and (= (x1787 x159) x2213) (= (x2655 x2213 256) x433) (= (* 256 x433) x4093)) (not x4211)) x4084) (=> (and x4211 (and (= x729 (x3916 32 x159)) (= x4076 (+ 1 x729)) (= (> x571 192) x3938) (= (+ x3401 160) x571) (= (x4184 x729) x827))) (and (=> (not x3938) x1846) (=> x3938 x2548))))))) x1576))
(assert (x2395 x2353))
(assert (x740 x3981))
(assert (= (x328 (x3916 x1840 x2364)) (x3916 x1840 x2364)))
(assert (x2786 x2138))
(assert (x2786 x2282))
(assert (= (or x711 x2234) x2897))
(assert (x2786 x2890))
(assert (x2786 x3235))
(assert (= (x1190 (x274 x1840 x94 x168 x450)) x168))
(assert (x2786 x3744))
(assert (x2786 x2475))
(assert (x1450 x4041))
(assert (< 10000 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)))
(assert (= (x75 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069)) x312))
(assert (= (and x2468 (not x2578)) x1042))
(assert (= (x2515 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)) x769))
(assert (x740 x1408))
(assert (= (x4010 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955)) x1176))
(assert (x2786 x1061))
(assert (x1834 48755886422350550937420582033662272622158303343164848365600209189876434731008))
(assert (x149 x2073 128))
(assert (= x1634 (and x3817 x815)))
(assert (x2786 x2516))
(assert (x2786 x3448))
(assert (x2786 x3623))
(assert (> (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852) 10000))
(assert (x2786 x2531))
(assert (= (x3945 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852)) x1423))
(assert (=> (>= 10000 x3914) (= (x328 x3914) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x4383 6)))
(assert (= x1259 (and x3877 x258)))
(assert (x2786 x4430))
(assert (x2786 x1101))
(assert (= x463 (=> (and (= true x917) (= false x2791) (= x2949 36)) x2553)))
(assert (=> (<= x1126 10000) (= (x328 x1126) 0)))
(assert (= x459 (and x4424 x350)))
(assert (x2786 x3762))
(assert (x149 x2926 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x1795 36)))
(assert (=> (<= x337 10000) (= 0 (x328 x337))))
(assert (x1834 1722637450))
(assert (x2786 x650))
(assert (=> (>= 10000 x2248) (= 0 (x328 x2248))))
(assert (= 100 (x1190 (x3915 64 x4578 100))))
(assert (=> (>= 10000 x3088) (= (x328 x3088) 0)))
(assert (not (x1834 (x3915 x312 x3260 x982))))
(assert (= (and x3901 (not x4148)) x1082))
(assert (x2786 x1090))
(assert (x2786 x236))
(assert (=> (>= 10000 x1608) (= (x328 x1608) 0)))
(assert (x2786 x2763))
(assert (= (x4010 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560)) x2483))
(assert (not (x1834 (x2903 x3181 x2757 x3204 x670 x4500 x1727))))
(assert (=> (<= x787 10000) (= (x328 x787) 0)))
(assert (x2786 x2631))
(assert (= (x1190 (x3915 64 x3618 36)) 36))
(assert (x1450 x1178))
(assert (= (and (not x1774) x2986) x2025))
(assert (x2786 x670))
(assert (> (x3915 x3639 x1852 x2691) 10000))
(assert (x149 x2070 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1834 (x3915 64 x2625 2))))
(assert (x2786 x3011))
(assert (=> (<= x914 10000) (= (x328 x914) 0)))
(assert (x2786 x3479))
(assert (x2395 x3198))
(assert (= x16 (=> (and (= x2730 (x1854 x1386)) (= (>= 224 x2730) x2562)) (and x2562 (=> (and (= (x990 (+ x2729 64)) x3150) (= (x1854 x630) x959) (= (x990 (+ 64 x2729)) x3360) (= x2710 (x1854 x3360)) (= x4250 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)) (= (x1854 x4417) x3919) (= x337 (x1854 x1093)) (= (x1338 0) x654) (= x1378 (x990 (+ x2729 32))) (= (x1854 x2729) x1434) (= (x990 (+ x2729 96)) x4234) (= x942 (x2903 x2730 x173 x1367 x4453 x3919 x625)) (= (x990 (+ 64 x2729)) x4088) (= x846 (x3025 x2730 x1434 x676 x4377 x480)) (= (x1854 x1378) x1367) (= (x3915 x2730 x3221 x1879) x2818) (= (x990 (+ x2729 128)) x1358) (= x1168 (x990 (+ x2729 32))) (= (x1854 x2729) x879) (= (x1854 x2973) x3560) (= (x990 (+ 160 x2729)) x3505) (= x3337 (< 0 x3068)) (= (x990 (+ 32 x2729)) x630) (= x2077 (x990 (+ 64 x2729))) (= (x1854 x2360) x1288) (= x3575 (x1854 x3505)) (= x116 (x1854 x4234)) (= x542 (x1854 x1168)) (= (x1854 x4435) x480) (= x1794 (x1854 x4088)) (= (x990 (+ 32 x2729)) x2360) (= (x990 (+ x2729 128)) x1252) (= x3221 (x1854 x2729)) (= (x1854 x2729) x604) (= x2973 (x990 (+ x2729 96))) (= x173 (x1854 x2729)) (= (x3916 x2730 x1539) x1789) (= x4208 (x990 (+ 32 x2729))) (= x1539 (x1854 x2729)) (= x4453 (x1854 x356)) (= (x336 x2730 x604 x959 x1794 x3560 x2991 x3575) x2573) (= x1230 (x990 (+ x2729 32))) (= x4417 (x990 (+ 96 x2729))) (= (x1854 x2698) x769) (= x2698 (x990 (+ x2729 128))) (= (x1854 x1252) x625) (= x3166 (x1854 x2729)) (= x4377 (x1854 x3150)) (= x3068 (x1854 x3342)) (= x1879 (x1854 x1230)) (= (x990 (+ 160 x2729)) x1093) (= x2991 (x1854 x1358)) (= (x1854 x3744) x4108) (= (x990 (+ x2729 64)) x356) (= (ite (= x2730 0) x654 (ite (<= x2730 32) x1789 (ite (>= 64 x2730) x2818 (ite (<= x2730 96) x1077 (ite (>= 128 x2730) x846 (ite (<= x2730 160) x942 (ite (>= 192 x2730) x2573 (ite (>= 224 x2730) x4250 x77)))))))) x1430) (= x1004 (x1854 x2077)) (= x4435 (x990 (+ x2729 96))) (= x676 (x1854 x4208)) (= x3744 (x990 (+ 192 x2729))) (= x1077 (x274 x2730 x879 x542 x1004)) (= (x3915 64 x2522 7) x2834)) (and (=> (not x3337) x1048) (=> (and (and (= x672 (x1854 x3299)) (= x1364 (< 32 x3068))) x3337) (and (=> (not x1364) x1048) (=> (and x1364 (and (= x4174 (x1419 x4556)) (= (< 64 x3068) x3725) (= (x990 (+ 32 x69)) x882) (= x4556 (x990 (+ 32 x3299))))) (and (=> (not x3725) x1048) (=> (and (and (= x4329 (x990 (+ x69 64))) (= (x990 (+ 64 x3299)) x3872) (= (> x3068 96) x3361) (= x53 (x453 x3872))) x3725) (and (=> (not x3361) x1048) (=> x3361 x201)))))))))))))
(assert (= x583 x632))
(assert (x2786 x991))
(assert (not (x1834 (x3915 64 x1439 36))))
(assert (x2786 x2685))
(assert (x2786 x3931))
(assert (= (x75 (x3025 x3914 x2565 x3806 x2413 x79)) x3914))
(assert (= (x328 (x3025 x2961 x2167 x3141 x3950 x1282)) (x3025 x2961 x2167 x3141 x3950 x1282)))
(assert (< (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1834 (x274 x3404 x4099 x1850 x1196))))
(assert (= 100 (x1190 (x3915 64 x2747 100))))
(assert (x1450 x687))
(assert (x2786 x1257))
(assert (x2786 x2756))
(assert (=> (>= 10000 x1335) (= (x328 x1335) 0)))
(assert (= (and (not x101) x3782) x1375))
(assert (x1311 x1073))
(assert (x1311 x1477))
(assert (= (x1190 (x3915 64 x1764 6)) 6))
(assert (< (x3915 64 x2150 (ite (= x3181 0) x213 (ite (>= 32 x3181) x662 (ite (>= 64 x3181) x2231 (ite (>= 96 x3181) x2495 (ite (>= 128 x3181) x1535 (ite (<= x3181 160) x146 (ite (>= 192 x3181) x4073 (ite (<= x3181 224) x2993 x1478))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x336 x2730 x604 x959 x1794 x3560 x2991 x3575) (x328 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575))))
(assert (= (and x3842 x1639) x1841))
(assert (x2786 x3044))
(assert (= (x3945 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)) x2710))
(assert (=> (<= x1465 10000) (= 0 (x328 x1465))))
(assert (=> (<= x2034 10000) (= 0 (x328 x2034))))
(assert (x2786 x1302))
(assert (= (x4010 (x2903 x3454 x4392 x2466 x1043 x4469 x3179)) x4392))
(assert (x1311 x4041))
(assert (x2786 x1960))
(assert (= (x328 (x3915 64 x1552 36)) (x3915 64 x1552 36)))
(assert (x2786 x3875))
(assert (= (x75 (x3916 x3859 x2420)) x3859))
(assert (= x1944 (x3945 (x336 x3435 x547 x872 x1944 x494 x713 x3785))))
(assert (= x2797 (and x3137 x2897)))
(assert (=> (>= 10000 x1097) (= 0 (x328 x1097))))
(assert (= (x2515 (x2903 x1593 x1270 x2523 x3069 x3055 x236)) x236))
(assert (x2786 x3470))
(assert (=> (>= 10000 x94) (= 0 (x328 x94))))
(assert (x3829 (ite (not (= 0 x2745)) 1 0)))
(assert (=> (>= 10000 x994) (= (x328 x994) 0)))
(assert (x2786 x3840))
(assert (=> (<= x1726 10000) (= (x328 x1726) 0)))
(assert (x3758 x2261))
(assert (= (x3945 (x3025 x1840 x561 x4356 x901 x4480)) x901))
(assert (= (x4010 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103)) x3014))
(assert (x2786 x393))
(assert (= (x1338 0) (x328 (x1338 0))))
(assert (x2786 x1157))
(assert (= x2388 (or (and x395 (not x2910)) x3056)))
(assert (x2786 x1755))
(assert (not (x1834 (x3915 64 x2747 100))))
(assert (x2786 x3588))
(assert (x2786 x2812))
(assert (x1834 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (x149 x687 256))
(assert (x3153 x1193 32))
(assert (x1311 x1036))
(assert (x2786 x795))
(assert (x2786 x4017))
(assert (x2786 x4207))
(assert (= (x328 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)) (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)))
(assert (x2786 x3447))
(assert (= (x1190 (x2903 x3454 x4392 x2466 x1043 x4469 x3179)) x2466))
(assert (= x1026 (=> (= (not (> x1744 32)) x1146) (and x1146 x3115))))
(assert (x2786 x79))
(assert (x2786 x3454))
(assert (=> (>= 10000 x3040) (= 0 (x328 x3040))))
(assert (= x3179 (x2515 (x2903 x3454 x4392 x2466 x1043 x4469 x3179))))
(assert (=> (>= 10000 x4166) (= (x328 x4166) 0)))
(assert (x149 x2384 256))
(assert (x3758 x1597))
(assert (= x4002 (and x4573 x1019)))
(assert (x2786 x2591))
(assert (= (or x2962 x3864) x2736))
(assert (= (and x2788 x3480) x648))
(assert (x2786 x4347))
(assert (x2786 x1))
(assert (x2786 x904))
(assert (= (and (not x784) x3834) x4547))
(assert (x2786 x896))
(assert (=> (<= x1270 10000) (= 0 (x328 x1270))))
(assert (= x198 (x75 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573))))
(assert (=> (<= x801 10000) (= 0 (x328 x801))))
(assert (x2786 x1347))
(assert (x2786 x3111))
(assert (x149 x589 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x274 x198 x3098 x1628 x156)))
(assert (= x3121 (and x1019 (not x4573))))
(assert (= (x2907 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462)) x462))
(assert (= (x4010 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756)) x3199))
(assert (x2786 x4113))
(assert (= x1232 (x2278 (x3025 x1593 x1348 x1765 x3525 x1232))))
(assert (x2786 x1470))
(assert (= (x328 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (= x3435 (x75 (x274 x3435 x3241 x2482 x1968))))
(assert (< 10000 (x274 x3454 x3902 x4269 x254)))
(assert (= (x274 x587 x939 x1435 x2707) (x328 (x274 x587 x939 x1435 x2707))))
(assert (> (x3915 64 x2522 3) 10000))
(assert (x2786 x1316))
(assert (x2786 x3867))
(assert (x2786 x2809))
(assert (= (x4010 (x3915 64 x3242 36)) x3242))
(assert (= (and x3749 x1363) x4092))
(assert (= (x75 (x3915 64 x4347 6)) 64))
(assert (x2786 x3304))
(assert (= (x2278 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)) x2359))
(assert (= x3914 (x75 (x3916 x3914 x4463))))
(assert (=> (<= x2139 10000) (= (x328 x2139) 0)))
(assert (x2786 x1242))
(assert (= x3175 (=> (and (= false x1298) (= x4090 (= x3969 0)) (= x425 false) (= 0 x3474)) x4090)))
(assert (= (x75 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)) x3404))
(assert (x2786 x3014))
(assert (x2786 x1727))
(assert (x2786 x727))
(assert (< 10000 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756)))
(assert (> (x3915 64 x1414 12) 10000))
(assert (x740 x2924))
(assert (x2786 x760))
(assert (not (x1834 (x3915 64 x3419 36))))
(assert (=> (<= x480 10000) (= (x328 x480) 0)))
(assert (=> (>= 10000 x3796) (= (x328 x3796) 0)))
(assert (= (x75 (x274 x3404 x4099 x1850 x1196)) x3404))
(assert (x2395 x1477))
(assert (= (or (and x4513 x965) (and x352 x478)) x1923))
(assert (< 10000 (x3915 64 x1179 6)))
(assert (x2786 x2900))
(assert (= (=> (and (or (and (and (= x47 x2456) (= x3558 x1999) (= (ite (= 0 x2481) x4455 0) x3372) (= x1390 (x250 x2134)) (= x3700 x366) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1741) (< (+ x3372 x3926) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4585 x558) (= x3552 x2481) (>= x1741 0) (= x2824 x1657) (= x1741 (+ x3372 x3926)) (= x4390 x850) (= x3259 x730) (= x2919 x1741) (= x2161 x987) (= x161 x4558) (= x1505 x2057) (= x413 x4380) (= (- x1390 x3372) x1317) (= x3156 x3539) (= x1795 x1877) (= x1490 x3486) (= (x920 x2625) x3926) (= x4120 x232)) x150) (and (not x150) (and (= x47 x2456) (= x3156 x3539) (= x2824 x1657) (= x2481 x3552) (= x2161 x987) (= x3259 x730) (= x232 x4120) (= x2057 x1505) (= x850 x4390) (= x161 x4558) (= x558 x4585) (= x1999 x3558) (= x3700 x366) (= x1490 x3486) (= x1877 x1795) (= x413 x4380)))) (= x150 (= x2481 0))) x4288) x2200))
(assert (= (x4010 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) x3904))
(assert (x1834 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (= (x2278 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103)) x1024))
(assert (= x2108 (and (not x1364) x3789)))
(assert (x2786 x3968))
(assert (> (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233) 10000))
(assert (x3758 x1754))
(assert (x2786 x801))
(assert (x2786 x4576))
(assert (= x2961 (x75 (x2903 x2961 x1003 x185 x2848 x2564 x4031))))
(assert (not (x1834 (x3025 x3404 x544 x842 x1300 x2619))))
(assert (x2786 x626))
(assert (x2786 x4244))
(assert (= (x328 45231284858326638837332416019018714005183587760015845327913118753091066265600) 0))
(assert (=> (>= 10000 x2272) (= (x328 x2272) 0)))
(assert (< 10000 (x3915 64 x2522 7)))
(assert (= x4034 (=> (and (= x340 (not (> x3524 128))) (= x1180 (x990 (+ 96 x949))) (= x2999 (x990 (+ x3299 96))) (= (x3338 x2999) x799)) (and x340 x4069))))
(assert (= (x75 (x3025 x3403 x4098 x4260 x3272 x4291)) x3403))
(assert (x2786 x3339))
(assert (x2786 x2892))
(assert (x2786 x3583))
(assert (= (x75 (x3915 x587 x3996 x1809)) x587))
(assert (=> (<= x4403 10000) (= 0 (x328 x4403))))
(assert (x2786 x3228))
(assert (=> (<= x1119 10000) (= 0 (x328 x1119))))
(assert (= (=> (and (= (x990 (+ x1121 96)) x4266) (= x1072 (x878 x1346)) (= (not (> x1109 128)) x721) (= x1346 (x990 (+ 96 x3299)))) (and x724 x721)) x1536))
(assert (x2786 x1756))
(assert (x2786 x3066))
(assert (= (x328 (x3915 x3435 x994 x4023)) (x3915 x3435 x994 x4023)))
(assert (= x4356 (x1190 (x3025 x1840 x561 x4356 x901 x4480))))
(assert (x2786 x4048))
(assert (x2786 x3376))
(assert (x2786 x2134))
(assert (x2786 x4474))
(assert (= (or (and x3471 x1878) (and x1380 x3118) (and x4485 x1663) (and x4339 x1039) (and x446 x4515) (and x3380 x37) (and x1017 x3464) (and x4528 x3460) (and x288 x2131)) x4566))
(assert (> (x3915 x3914 x1238 x2407) 10000))
(assert (= x842 (x1190 (x3025 x3404 x544 x842 x1300 x2619))))
(assert (= (and (not x2836) x2667) x350))
(assert (=> (<= x4126 10000) (= (x328 x4126) 0)))
(assert (= x1034 (or (and x3192 x4081) (and x443 x1187) (and x270 x2119))))
(assert (x2786 x2605))
(assert (= (x4010 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573)) x2212))
(assert (= 64 (x75 (x3915 64 x2456 0))))
(assert (x2786 x396))
(assert (= (x328 (x3916 x3403 x1726)) (x3916 x3403 x1726)))
(assert (x1311 x2078))
(assert (x2786 x3351))
(assert (x2786 x1586))
(assert (x2786 x195))
(assert (x2786 x4167))
(assert (not (x1834 (x3915 64 x3406 (ite (= x3914 0) x351 (ite (>= 32 x3914) x1647 (ite (<= x3914 64) x1709 (ite (>= 96 x3914) x2405 (ite (<= x3914 128) x3928 (ite (<= x3914 160) x1334 (ite (<= x3914 192) x4303 (ite (>= 224 x3914) x208 x1277))))))))))))
(assert (= (x75 (x3916 x3404 x3283)) x3404))
(assert (= x2852 (x4516 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852))))
(assert (x2786 x1043))
(assert (= x3898 (not (and (= (x3915 64 x3493 10) x2806) (= x3493 (x1512 x1011))))))
(assert (= (x1190 (x274 x2730 x879 x542 x1004)) x542))
(assert (=> (>= 10000 x2291) (= 0 (x328 x2291))))
(assert (=> (<= x312 10000) (= 0 (x328 x312))))
(assert (=> (>= 10000 x3951) (= (x328 x3951) 0)))
(assert (x2786 x3681))
(assert (x1834 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x2786 x179))
(assert (=> (<= x2500 10000) (= (x328 x2500) 0)))
(assert (x149 x4584 128))
(assert (= x174 (and x4131 (not x1131))))
(assert (> (x274 x1593 x292 x2337 x2714) 10000))
(assert (= 36 (x1190 (x3915 64 x2872 36))))
(assert (= (x75 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560)) x3859))
(assert (=> (>= 10000 x3637) (= (x328 x3637) 0)))
(assert (= (x3945 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060)) x3730))
(assert (= x305 (x4010 (x3915 x3454 x305 x4271))))
(assert (=> (<= x1277 10000) (= (x328 x1277) 0)))
(assert (x1834 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (not (x1834 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756))))
(assert (x3829 x1047))
(assert (> (x3915 x2730 x3221 x1879) 10000))
(assert (x1450 127))
(assert (x2786 x38))
(assert (< (x3916 x3454 x62) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x3932))
(assert (x1834 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (x2786 x2941))
(assert (x2786 x4168))
(assert (=> (>= 10000 x3875) (= 0 (x328 x3875))))
(assert (x2786 x1858))
(assert (x2786 x971))
(assert (= (and (not x1014) x1129) x3795))
(assert (x740 x3369))
(assert (x2786 x112))
(assert (= x4027 (and (not x3192) x4081)))
(assert (= x45 (and x4211 x3318)))
(assert (= x3411 (or x3714 (and x1853 (not x1891)))))
(assert (x2786 x3766))
(assert (x2786 x3108))
(assert (= (and x1578 x2838) x3373))
(assert (=> (>= 10000 x1367) (= (x328 x1367) 0)))
(assert (= x281 (=> (= x4175 (= 0 x1972)) (and (=> (and x4175 (and (= x2869 true) (= x848 false) (= x2949 x241))) x2553) (=> (and (not x4175) (and (= x1046 x4202) (= x29 x3679))) x4521)))))
(assert (= x3844 (and x1749 x2538)))
(assert (x2786 x264))
(assert (x2786 x2451))
(assert (x740 x3440))
(assert (x2786 x1113))
(assert (= (x1190 (x3915 64 x3788 2)) 2))
(assert (x1311 x234))
(assert (=> (>= 10000 x2167) (= 0 (x328 x2167))))
(assert (= 6 (x1190 (x3915 64 x1179 6))))
(assert (=> (<= x901 10000) (= (x328 x901) 0)))
(assert (= x2164 (and x4528 (not x3460))))
(assert (= x44 (and (not x2239) x2374)))
(assert (x740 x1921))
(assert (not (x1834 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945))))
(assert (not (x1834 (x3915 64 x3419 6))))
(assert (x2786 x3942))
(assert (x2786 x544))
(assert (x1450 x3304))
(assert (= x1235 (=> (and (= false x15) (= x3261 true) (= x3108 36)) x100)))
(assert (< 10000 (x3025 x3435 x34 x2931 x4309 x2071)))
(assert (x2786 x1603))
(assert (x1834 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (= x4192 (and x255 (not x2289))))
(assert (= x4456 (and x1076 x2492)))
(assert (= x2673 (=> (and (= x1778 x4053) (= x3365 x875) (= x2366 x708) (= x4379 x2987) (= x2347 x2906) (= x504 x3604) (= x1154 x4241) (= x807 x649) (= x2219 x4314) (= x4212 x2994) (= x2092 x1340) (= x2498 x4046) (= x4029 x3773) (= x3164 x962)) x3579)))
(assert (=> (>= 10000 x2370) (= (x328 x2370) 0)))
(assert (x2786 x1239))
(assert (x2786 x1482))
(assert (= (x4010 (x3915 64 x3493 10)) x3493))
(assert (x2786 x3396))
(assert (x2786 x4433))
(assert (= 64 (x75 (x3915 64 x3419 6))))
(assert (= (x328 (x274 x198 x3098 x1628 x156)) (x274 x198 x3098 x1628 x156)))
(assert (= (x328 (x3915 64 x3406 (ite (= x3914 0) x351 (ite (>= 32 x3914) x1647 (ite (>= 64 x3914) x1709 (ite (<= x3914 96) x2405 (ite (>= 128 x3914) x3928 (ite (>= 160 x3914) x1334 (ite (>= 192 x3914) x4303 (ite (<= x3914 224) x208 x1277)))))))))) (x3915 64 x3406 (ite (= 0 x3914) x351 (ite (>= 32 x3914) x1647 (ite (<= x3914 64) x1709 (ite (<= x3914 96) x2405 (ite (<= x3914 128) x3928 (ite (<= x3914 160) x1334 (ite (>= 192 x3914) x4303 (ite (>= 224 x3914) x208 x1277)))))))))))
(assert (< 10000 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103)))
(assert (x740 x3278))
(assert (= (x75 (x3916 32 104)) 32))
(assert (not (x1834 (x3915 x3454 x305 x4271))))
(assert (x3758 x1349))
(assert (=> (<= x3260 10000) (= (x328 x3260) 0)))
(assert (x2786 x363))
(assert (x2786 x4504))
(assert (x2786 x59))
(assert (not (x1834 (x3025 x2961 x2167 x3141 x3950 x1282))))
(assert (= x4551 (x4010 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875))))
(assert (= (and (not x4254) x4231) x1935))
(assert (=> (>= 10000 x3825) (= (x328 x3825) 0)))
(assert (= 2 (x1190 (x3915 64 x4383 2))))
(assert (= (=> (and (= x371 (= 0 x302)) (= x302 (x1912 x2792))) (and (=> (and x371 (and (= x3108 0) (= x2473 true) (= false x3547))) x100) (=> (not x371) x2199))) x430))
(assert (= (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955) (x328 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955))))
(assert (= x3750 (x2515 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462))))
(assert (x2786 x4166))
(assert (x2786 x2555))
(assert (=> (>= 10000 x416) (= (x328 x416) 0)))
(assert (x2786 x1710))
(assert (x2786 x4212))
(assert (x2786 x3086))
(assert (x1834 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (<= x2413 10000) (= (x328 x2413) 0)))
(assert (not (x1834 (x3915 64 x1521 7))))
(assert (= x1539 (x4010 (x3916 x2730 x1539))))
(assert (= x1062 (and x1013 (not x1976))))
(assert (x2786 x1210))
(assert (x2786 x4411))
(assert (= x2714 (x3945 (x274 x1593 x292 x2337 x2714))))
(assert (= (and (not x819) x2856) x2556))
(assert (= x4179 (x4010 (x3915 64 x4179 12))))
(assert (= (x3945 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)) x1805))
(assert (x1834 2770781680))
(assert (= (x2515 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737)) x2180))
(assert (x740 x1999))
(assert (= (x4010 (x3025 x2961 x2167 x3141 x3950 x1282)) x2167))
(assert (= (x3945 (x274 x3181 x1739 x2139 x368)) x368))
(assert (= x3859 (x75 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955))))
(assert (not (x1834 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875))))
(assert (not (x1834 (x2903 x587 x61 x783 x2151 x4535 x1441))))
(assert (x2786 x506))
(assert (= (x4010 (x3915 x3403 x802 x1126)) x802))
(assert (x2786 x1011))
(assert (= x3615 (and x2247 (not x531))))
(assert (x2786 x1645))
(assert (= x1104 (and x1155 x2920)))
(assert (< (x336 x312 x4207 x1 x506 x1403 x1216 x1181) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1190 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)) x595))
(assert (x2786 x217))
(assert (= (x75 (x3915 64 x2625 1)) 64))
(assert (x2786 x708))
(assert (x2786 x1154))
(assert (x2786 x4180))
(assert (< (x3916 x3859 x2420) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x506 10000) (= (x328 x506) 0)))
(assert (x2786 x1520))
(assert (= x3905 (x4010 (x3025 x3181 x3905 x3796 x3823 x2008))))
(assert (=> (<= x2465 10000) (= 0 (x328 x2465))))
(assert (x149 x2353 128))
(assert (= (=> (= x3869 (= x3344 0)) (and (=> (and (not x3869) (and (= x1446 x4360) (= x1439 x1541))) x1602) (=> (and (and (= x84 true) (= x3783 false) (= x3082 x2949)) x3869) x2553))) x1664))
(assert (x1450 x1597))
(assert (> (x3915 64 x3419 6) 10000))
(assert (= (x328 (x3915 x198 x2934 x960)) (x3915 x198 x2934 x960)))
(assert (< (x274 x3454 x3902 x4269 x254) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x75 (x3915 64 x2422 36)) 64))
(assert (= x4215 (and x3309 (not x331))))
(assert (not (x1834 (x3915 64 x3383 12))))
(assert (not (x1834 (x3915 64 x2456 0))))
(assert (= (or x1680 x1634) x2842))
(assert (x2786 x3552))
(assert (= x119 (=> (and (= x3961 (- x3265 132)) (= (x2191 1 x2926) x896) (= x3137 (> x1981 0)) (= (x2655 x2926 2) x4041) (= (x1377 (- x896 (mod (ite (> 32 x3074) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1981) (= x3074 (ite (> x896 0) x4041 (x2191 127 x4041)))) (and (=> (and (and (= x3154 (x2191 1 x2926)) (= (+ 32 x3265) x3564) (= x2630 (= x3154 0))) x3137) (and (=> (and (not x2630) (and (= x3390 (< 0 x3074)) (= (x3916 32 104) x1410))) (and (=> (and (= x2917 0) (not x3390)) x4386) (=> x3390 x972))) (=> (and x2630 (and (or (= x183 32) (= x183 0)) (= (* 32 (ite (not (= 0 x3074)) 1 0)) x183) (= (+ x3564 x183) x442) (= x41 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2926)))) x3899))) (=> (not x3137) x4446)))))
(assert (x4273 x2070))
(assert (x2786 x4377))
(assert (x2786 x2513))
(assert (= x3925 (and x1948 x3815)))
(assert (=> (<= x3370 10000) (= (x328 x3370) 0)))
(assert (x1834 53968831973089624780961702553170747426560148566936995398294956610382735605760))
(assert (= x3269 (and x2202 (not x3838))))
(assert (= x2827 (x4010 (x3915 x3404 x2827 x2241))))
(assert (x2786 x3951))
(assert (= x2377 (x4010 (x2903 x198 x2377 x2801 x3779 x2284 x4064))))
(assert (x149 x2530 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1450 x467))
(assert (x2786 x1593))
(assert (x3758 x2162))
(assert (x2786 x3088))
(assert (= (x3945 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563)) x1244))
(assert (=> (<= x611 10000) (= (x328 x611) 0)))
(assert (x2786 x802))
(assert (= (x328 (x3915 64 x1818 12)) (x3915 64 x1818 12)))
(assert (x2786 x2115))
(assert (x2786 x1996))
(assert (x2786 x4064))
(assert (= (x328 (x274 x2961 x782 x3442 x2029)) (x274 x2961 x782 x3442 x2029)))
(assert (x2786 x2544))
(assert (= x1064 (and x3989 x3807)))
(assert (= x2809 (x1190 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875))))
(assert (x1834 35477284059277649309253622239531857712935939529143554018288893216769000107873))
(assert (x2786 x3040))
(assert (= (or x1816 x138 x2276 x3553 x2345 x1370 x1767 x3683) x2962))
(assert (< 10000 (x3025 x3404 x544 x842 x1300 x2619)))
(assert (= (x2907 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)) x2272))
(assert (x2786 x2361))
(assert (x2091 x3324))
(assert (= (x3945 (x2903 x3859 x4126 x2093 x3895 x226 x2266)) x3895))
(assert (x2786 x3198))
(assert (> (x3915 x2961 x3880 x3013) 10000))
(assert (= x3777 (=> (and (= x636 x504) (= x962 x3987) (= x4046 x4171) (= x1340 x2597) (= x2356 x2987) (= x4575 x4053) (= x2994 x4144) (= x4569 x2219) (= x2347 x4095) (= x4017 x4241) (= x3476 x807) (= x1768 x875) (= x1245 x2366) (= x2103 x3773)) x2673)))
(assert (= x2886 (x4010 (x3915 64 x2886 36))))
(assert (= x1840 (x75 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308))))
(assert (= (x1190 (x3915 64 x363 12)) 12))
(assert (=> (>= 10000 x460) (= 0 (x328 x460))))
(assert (= (x2515 (x683 x312 x4249 x1474 x3600 x2357 x4007 x4363 x1069)) x4007))
(assert (x149 x883 256))
(assert (= (x4010 (x3915 64 x2150 (ite (= x587 0) x1514 (ite (<= x587 32) x1911 (ite (<= x587 64) x3957 (ite (<= x587 96) x3591 (ite (>= 128 x587) x3734 (ite (>= 160 x587) x411 (ite (<= x587 192) x4491 (ite (>= 224 x587) x3845 x3538)))))))))) x2150))
(assert (x2786 x2297))
(assert (= (x1190 (x3915 64 x1414 12)) 12))
(assert (x2786 x4558))
(assert (x2786 x2057))
(assert (x2786 x642))
(assert (x2786 x4404))
(assert (not (x1834 (x3916 x3404 x3283))))
(assert (=> (<= x1727 10000) (= 0 (x328 x1727))))
(assert (= x4383 (x4010 (x3915 64 x4383 6))))
(assert (= (x336 x198 x2739 x2475 x511 x460 x801 x1951) (x328 (x336 x198 x2739 x2475 x511 x460 x801 x1951))))
(assert (> (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272) 10000))
(assert (x2786 x4285))
(assert (= x2933 (x3945 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988))))
(assert (x2786 x1023))
(assert (x1311 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x470))
(assert (x2786 x3))
(assert (= x1608 (x3945 (x274 x312 x2100 x135 x1608))))
(assert (=> (<= x3103 10000) (= (x328 x3103) 0)))
(assert (x740 x3726))
(assert (x740 x1369))
(assert (= x1045 (and x4254 x4231)))
(assert (x2786 x4121))
(assert (x149 x3894 32))
(assert (= x2647 (or x2084 (and x4370 (not x4540)))))
(assert (< 10000 (x3916 x1593 x1233)))
(assert (= (and x714 x458) x2946))
(assert (x2786 x9))
(assert (< (x2903 x3181 x2757 x3204 x670 x4500 x1727) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1941 (not x1254)) x162))
(assert (x2786 x3522))
(assert (x2786 x2116))
(assert (not (x1834 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953))))
(assert (x2786 x346))
(assert (x1834 3628442803))
(assert (=> (>= 10000 x1765) (= (x328 x1765) 0)))
(assert (x2786 x514))
(assert (= x822 (and x2797 x2630)))
(assert (x2786 x2071))
(assert (not (x1834 (x3916 x3454 x62))))
(assert (=> (>= 10000 x2961) (= 0 (x328 x2961))))
(assert (x2786 x2575))
(assert (x2786 x1622))
(assert (= (x328 (x2903 x1840 x2678 x243 x2159 x2970 x384)) (x2903 x1840 x2678 x243 x2159 x2970 x384)))
(assert (= (x2515 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)) x92))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x3181 x3905 x3796 x3823 x2008)))
(assert (x2786 x871))
(assert (= (=> (and (= (x1377 (- x3181 32)) x3435) (= x1323 (x990 (+ 128 x1108))) (= x2769 (>= 224 x3435)) (= (x3915 64 x1521 7) x3300) (= x2056 (x990 (+ 128 x1108))) (= x3181 (x1377 (- x1157 128))) (= x1157 (x990 (+ 32 x2056)))) (and x2769 (=> (and (= (x3462 256) x4296) (= (x3462 288) x3228) (= x2482 (x3462 160)) (= x4259 (x3462 256)) (= x494 (x3462 224)) (= (x3462 128) x4220) (= (>= 224 x3181) x2317) (= x4408 (x274 x3435 x3241 x2482 x1968)) (= x1968 (x3462 192)) (= (x3462 192) x1423) (= (x3916 x3435 x1344) x738) (= (x3462 256) x713) (= x4159 (x3462 160)) (= x610 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852)) (= (x3462 192) x1944) (= (x3462 160) x2001) (= (x2903 x3435 x1326 x4159 x1918 x655 x4296) x2283) (= x2931 (x3462 160)) (= (x3462 128) x3241) (= (x3462 160) x4023) (= x1937 (x1338 0)) (= (x3462 224) x655) (= (x3462 192) x4309) (= (x3462 128) x1344) (= (x3462 288) x3785) (= (x3462 128) x1326) (= (x336 x3435 x547 x872 x1944 x494 x713 x3785) x680) (= (x3462 192) x1918) (= x2071 (x3462 224)) (= (x3462 224) x1790) (= x872 (x3462 160)) (= (x3462 320) x2852) (= (x3462 128) x34) (= x427 (ite (= 0 x3435) x1937 (ite (<= x3435 32) x738 (ite (>= 64 x3435) x2294 (ite (<= x3435 96) x4408 (ite (<= x3435 128) x3543 (ite (>= 160 x3435) x2283 (ite (>= 192 x3435) x680 (ite (>= 224 x3435) x610 x3220))))))))) (= (x3915 x3435 x994 x4023) x2294) (= (x3462 128) x994) (= (x3025 x3435 x34 x2931 x4309 x2071) x3543) (= x547 (x3462 128))) (and (=> (and (= (x1338 0) x213) (= (x2655 x607 32) x4187) (= x3488 (x3462 256)) (= x3324 (x990 (+ x1242 31))) (= (x3462 224) x2008) (= x2959 (x3462 128)) (= (x990 (+ x3343 32)) x1688) (= (x3462 224) x2293) (= x368 (x3462 192)) (= x104 (x3462 320)) (= (x990 (+ x3152 x1688)) x3323) (= x457 (x3462 128)) (= (x3025 x3181 x3905 x3796 x3823 x2008) x1535) (= (x3462 192) x1551) (= x1727 (x3462 256)) (= (x3462 160) x2139) (= x3233 (x3462 288)) (= x4102 (x2655 x3324 32)) (= x607 (x990 (+ 31 x1108))) (= x3295 (* x4187 32)) (= x2090 (x3462 128)) (= x4500 (x3462 224)) (= x3152 (+ 160 x3295)) (= x1603 (x3462 160)) (= x658 (x3462 256)) (= (x3462 128) x1204) (= x670 (x3462 192)) (= (x3916 x3181 x1204) x662) (= x4574 (x3462 192)) (= (x990 (+ x1108 160)) x2352) (= (x3462 128) x1739) (= x2328 (x3915 64 x2150 (ite (= x3181 0) x213 (ite (>= 32 x3181) x662 (ite (<= x3181 64) x2231 (ite (>= 96 x3181) x2495 (ite (<= x3181 128) x1535 (ite (>= 160 x3181) x146 (ite (<= x3181 192) x4073 (ite (>= 224 x3181) x2993 x1478)))))))))) (= (x3462 160) x48) (>= x3323 161) (= x146 (x2903 x3181 x2757 x3204 x670 x4500 x1727)) (= (x336 x3181 x2959 x1603 x1551 x2293 x658 x3233) x4073) (or (>= x1108 115792089237316195423570985008687907853269984665640564039457584007913129639905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1108)) (= 128 x2277) (= x2231 (x3915 x3181 x457 x824)) (= (x3462 288) x398) (= (x3462 224) x448) (= x3905 (x3462 128)) (= x2993 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104)) (= x824 (x3462 160)) (= (x3462 160) x3796) (= (* x4102 32) x3343) (= (x955 x3152) x1800) (= x3204 (x3462 160)) (= (x3462 128) x2757) (> x3323 x3152) (= x2631 (x990 (+ x3727 x1242))) (= x2495 (x274 x3181 x1739 x2139 x368)) (= (or (> x1800 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1800)) (< x1800 32))) x3890) (= (x990 (+ 32 x3152)) x3727) (= (x3462 192) x3823)) (and (=> (not x3890) x525) (=> (and (and (= x513 true) (= x388 false) (= 0 x2650)) x3890) x492))) x2317)))) x1531))
(assert (x2786 x3531))
(assert (= (x328 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (= (x3915 64 x793 11) (x328 (x3915 64 x793 11))))
(assert (= (and x1218 x3593) x4028))
(assert (= (and (not x1993) x4384) x2401))
(assert (= (x2278 (x2903 x2961 x1003 x185 x2848 x2564 x4031)) x2564))
(assert (x2786 x2472))
(assert (=> (<= x479 10000) (= (x328 x479) 0)))
(assert (= 32 (x75 (x3916 32 103))))
(assert (x1450 x24))
(assert (x2786 x2008))
(assert (x2786 x1403))
(assert (x2786 x2041))
(assert (< (x3915 64 x2291 (ite (= x3403 0) x4359 (ite (<= x3403 32) x1038 (ite (<= x3403 64) x2944 (ite (>= 96 x3403) x2858 (ite (>= 128 x3403) x4310 (ite (<= x3403 160) x700 (ite (<= x3403 192) x870 (ite (<= x3403 224) x333 x1761))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2071) (= 0 (x328 x2071))))
(assert (x2786 x735))
(assert (= (x3915 64 x2522 7) (x328 (x3915 64 x2522 7))))
(assert (x2786 x3559))
(assert (not (x1834 (x2903 x3404 x3490 x1699 x2954 x1545 x4410))))
(assert (x2786 x3416))
(assert (x2786 x1134))
(assert (< (x3915 64 x3406 (ite (= x198 0) x803 (ite (>= 32 x198) x755 (ite (<= x198 64) x2778 (ite (>= 96 x198) x2583 (ite (<= x198 128) x4541 (ite (>= 160 x198) x1868 (ite (<= x198 192) x3100 (ite (>= 224 x198) x1331 x2424))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1) (= (x328 x1) 0)))
(assert (x1311 x909))
(assert (= (x328 (x3025 x1593 x1348 x1765 x3525 x1232)) (x3025 x1593 x1348 x1765 x3525 x1232)))
(assert (= (x4010 (x3915 x3859 x2465 x3694)) x2465))
(assert (x2786 x3700))
(assert (x3758 x1755))
(assert (x2786 x1265))
(assert (=> (<= x205 10000) (= (x328 x205) 0)))
(assert (=> (<= x2678 10000) (= 0 (x328 x2678))))
(assert (> (x1338 0) 10000))
(assert (x2786 x3538))
(assert (=> (<= x3141 10000) (= 0 (x328 x3141))))
(assert (=> (<= x1899 10000) (= (x328 x1899) 0)))
(assert (x2786 x3570))
(assert (x2786 x570))
(assert (x2786 x3812))
(assert (= x2284 (x2278 (x2903 x198 x2377 x2801 x3779 x2284 x4064))))
(assert (= (or x2717 x3377 x4503) x1454))
(assert (=> (<= x3560 10000) (= 0 (x328 x3560))))
(assert (=> (>= 10000 x1818) (= (x328 x1818) 0)))
(assert (= x713 (x2515 (x336 x3435 x547 x872 x1944 x494 x713 x3785))))
(assert (=> (<= x1760 10000) (= (x328 x1760) 0)))
(assert (x4273 x2926))
(assert (x2786 x571))
(assert (x2786 x2444))
(assert (= x403 (or x3071 x582 x995)))
(assert (= 64 (x75 (x3915 64 x2658 36))))
(assert (x1311 x970))
(assert (x1450 x2162))
(assert (x2786 x3200))
(assert (x2786 x961))
(assert (= x2751 (and x577 (not x2998))))
(assert (=> (<= x1204 10000) (= 0 (x328 x1204))))
(assert (= (and (not x2610) x2061) x1614))
(assert (= x4320 (x4010 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554))))
(assert (x1450 x1036))
(assert (= (=> (and (or (not x1749) x1749) (= x1749 (= 0 x2204))) x941) x564))
(assert (x1311 x1349))
(assert (x2786 x1036))
(assert (= x4158 (x2515 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308))))
(assert (= x2873 (or x3615 x618)))
(assert (=> (<= x979 10000) (= (x328 x979) 0)))
(assert (=> (<= x4249 10000) (= 0 (x328 x4249))))
(assert (not (x1834 (x3915 64 x3812 100))))
(assert (> (x3915 64 x2054 10) 10000))
(assert (=> (>= 10000 x3694) (= (x328 x3694) 0)))
(assert (x1450 x970))
(assert (x2786 x273))
(assert (=> (>= 10000 x4167) (= (x328 x4167) 0)))
(assert (= x4177 (and x3409 x2164)))
(assert (x3829 x4102))
(assert (x2786 x2746))
(assert (= x324 (x3945 (x2903 x312 x1352 x3445 x324 x1899 x1600))))
(assert (x2786 x3181))
(assert (x740 x743))
(assert (= (x1190 (x3915 64 x3242 36)) 36))
(assert (=> (<= x959 10000) (= 0 (x328 x959))))
(assert (x1834 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (x2786 x4297))
(assert (= (and (not x1262) x3977) x2076))
(assert (= (=> (and (= (x990 (+ x3524 x949)) x4323) (= (x990 (+ 32 x681)) x1267) (= x76 (x990 (+ 32 x3451))) (= (x2571 x1386) x4256) (= x2406 (x1377 (- x681 x2015))) (= (x990 (+ x76 32)) x3843) (= x2578 (> x4256 0)) (= x112 (x2191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3894)) (= (x990 (+ x112 x949)) x681) (= (x990 (+ x3524 31)) x3894)) (and (=> (not x2578) x1066) (=> (and x2578 (and (= x3061 (x412 x2729)) (= (> x4256 32) x1356))) (and (=> (not x1356) x1066) (=> (and (and (= (x990 (+ x1267 32)) x2017) (= (x2205 x1886) x3686) (= x1886 (x990 (+ 32 x2729))) (= (> x4256 64) x2504)) x1356) (and (=> (not x2504) x1066) (=> (and x2504 (and (= (x990 (+ 64 x2729)) x2011) (= x4394 (< 96 x4256)) (= (x990 (+ x1267 64)) x2411) (= (x2049 x2011) x2552))) (and (=> x4394 x415) (=> (not x4394) x1066))))))))) x4069))
(assert (= (and x4547 (not x493)) x1187))
(assert (=> (<= x2206 10000) (= (x328 x2206) 0)))
(assert (=> (>= 10000 x769) (= (x328 x769) 0)))
(assert (= x100 (=> (and (= x3202 x3917) (= x2900 x4) (= 0 x447) (= x1557 x468) (= x2792 x327) (= x3389 x114) (= x1589 x4589) (= x2926 x1365) (= x1592 x447) (= x691 x2134) (= 2 x171) (= x3334 x869) (= x176 x3852) (= x527 x2070) (= x2756 x3108) (= x1379 x1849) (= x3519 x3433) (= 0 x461)) x1388)))
(assert (x2786 x1490))
(assert (= (x3916 x312 x2052) (x328 (x3916 x312 x2052))))
(assert (= (x328 x729) (x328 (+ x729 1))))
(assert (x2786 x1069))
(assert (= x2637 (and x1547 x3982)))
(assert (= x3553 (and x726 x3820)))
(assert (x149 x3866 256))
(assert (x2786 x3736))
(assert (x2786 x1499))
(assert (x2786 x4))
(assert (< (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3915 64 x1475 6) (x328 (x3915 64 x1475 6))))
(assert (> (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560) 10000))
(assert (=> (<= x1805 10000) (= (x328 x1805) 0)))
(assert (x2786 x899))
(assert (x2786 x617))
(assert (=> (<= x713 10000) (= 0 (x328 x713))))
(assert (= (x3915 64 x2625 2) (x328 (x3915 64 x2625 2))))
(assert (x2786 x3778))
(assert (= x2306 (and x2112 (not x1575))))
(assert (x2786 x2833))
(assert (x1450 x3235))
(assert (x2786 x198))
(assert (= x634 (x2907 (x683 x587 x2315 x4180 x2500 x2592 x2180 x634 x737))))
(assert (x2786 x3079))
(assert (= (x2515 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)) x736))
(assert (x2786 x1565))
(assert (x2786 x4123))
(assert (= (x75 (x3915 64 x1818 12)) 64))
(assert (= (x328 (x3025 x587 x2784 x3637 x2581 x2116)) (x3025 x587 x2784 x3637 x2581 x2116)))
(assert (x2786 x3468))
(assert (= x3715 (and (not x614) x1796)))
(assert (x2786 x2960))
(assert (= x1126 (x1190 (x3915 x3403 x802 x1126))))
(assert (> (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308) 10000))
(assert (x2786 x1397))
(assert (= (x328 (x274 x3404 x4099 x1850 x1196)) (x274 x3404 x4099 x1850 x1196)))
(assert (=> (<= x1761 10000) (= 0 (x328 x1761))))
(assert (= (x2907 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353)) x2683))
(assert (= (x1190 (x2903 x198 x2377 x2801 x3779 x2284 x4064)) x2801))
(assert (x2786 x3525))
(assert (= (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988) (x328 (x336 x3454 x4282 x1708 x2933 x2068 x622 x2988))))
(assert (=> (<= x676 10000) (= (x328 x676) 0)))
(assert (x2786 x494))
(assert (x2786 x4023))
(assert (= (x4010 (x274 x1593 x292 x2337 x2714)) x292))
(assert (< (x3915 64 x1414 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x2348))
(assert (x2786 x2693))
(assert (x1834 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x2786 x3381))
(assert (=> (<= x2933 10000) (= 0 (x328 x2933))))
(assert (=> (<= x4463 10000) (= (x328 x4463) 0)))
(assert (x2786 x4044))
(assert (= x3403 (x75 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462))))
(assert (x2786 x4564))
(assert (x2786 x1004))
(assert (not (x1834 (x274 x3181 x1739 x2139 x368))))
(assert (x2786 x383))
(assert (= x2730 (x75 (x274 x2730 x879 x542 x1004))))
(assert (x794 32 (ite (not (= 0 x1855)) 1 0)))
(assert (= x4352 (and (not x2921) x2794)))
(assert (= (x3945 (x2903 x2961 x1003 x185 x2848 x2564 x4031)) x2848))
(assert (x2786 x3478))
(assert (= (x2515 (x2903 x1840 x2678 x243 x2159 x2970 x384)) x384))
(assert (x2786 x185))
(assert (x2786 x3154))
(assert (x2786 x4527))
(assert (x740 x575))
(assert (x2786 x1855))
(assert (x2786 x1635))
(assert (x2786 x3186))
(assert (x2786 x3825))
(assert (x2786 x496))
(assert (=> (<= x156 10000) (= (x328 x156) 0)))
(assert (x2786 x3717))
(assert (=> (>= 10000 x1852) (= 0 (x328 x1852))))
(assert (= x3508 (x2278 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060))))
(assert (= x1132 x3763))
(assert (= 64 (x75 (x3915 64 x2150 (ite (= 0 x587) x1514 (ite (<= x587 32) x1911 (ite (<= x587 64) x3957 (ite (>= 96 x587) x3591 (ite (>= 128 x587) x3734 (ite (<= x587 160) x411 (ite (>= 192 x587) x4491 (ite (<= x587 224) x3845 x3538))))))))))))
(assert (x2786 x2634))
(assert (x2786 x3483))
(assert (< (x274 x3859 x3040 x3163 x2127) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1450 255))
(assert (x2786 x992))
(assert (x2786 x2981))
(assert (=> (>= 10000 x2146) (= (x328 x2146) 0)))
(assert (= (x1190 (x336 x3914 x2157 x1720 x3730 x3508 x3203 x3060)) x1720))
(assert (x1450 x3705))
(assert (x1834 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= x1908 (or x4409 x2080)))
(assert (x2786 x3150))
(assert (= x3370 (x1190 (x274 x3639 x472 x3370 x1075))))
(assert (= x1593 (x75 (x336 x1593 x3216 x381 x3446 x2361 x205 x546))))
(assert (x149 x935 128))
(assert (x2786 x2939))
(assert (x2786 x479))
(assert (= (x2515 (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955)) x4361))
(assert (=> (>= 10000 x2134) (= (x328 x2134) 0)))
(assert (x2786 x183))
(assert (= (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103) (x328 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103))))
(assert (= (x3915 64 x1764 6) (x328 (x3915 64 x1764 6))))
(assert (x2786 x3780))
(assert (= x312 (x75 (x274 x312 x2100 x135 x1608))))
(assert (x1311 x3274))
(assert (x2786 x487))
(assert (x2786 x1277))
(assert (x2786 x2476))
(assert (= x1765 (x1190 (x3025 x1593 x1348 x1765 x3525 x1232))))
(assert (x2786 x2477))
(assert (= (and x1062 x3534) x2075))
(assert (x2786 x2963))
(assert (x2786 x3651))
(assert (x149 x4579 256))
(assert (x3829 x3351))
(assert (= x1 (x1190 (x336 x312 x4207 x1 x506 x1403 x1216 x1181))))
(assert (= x2416 (and x4253 (not x2750))))
(assert (= (x2515 (x336 x198 x2739 x2475 x511 x460 x801 x1951)) x801))
(assert (< (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554)))
(assert (x2786 x3449))
(assert (= x1856 (x3945 (x3025 x3454 x1443 x569 x1856 x3010))))
(assert (not (x1834 (x3915 64 x2150 (ite (= 0 x3181) x213 (ite (<= x3181 32) x662 (ite (<= x3181 64) x2231 (ite (>= 96 x3181) x2495 (ite (<= x3181 128) x1535 (ite (>= 160 x3181) x146 (ite (>= 192 x3181) x4073 (ite (>= 224 x3181) x2993 x1478))))))))))))
(assert (= (x4010 (x2903 x2961 x1003 x185 x2848 x2564 x4031)) x1003))
(assert (x2786 x975))
(assert (= (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560) (x328 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560))))
(assert (=> (>= 10000 x1348) (= 0 (x328 x1348))))
(assert (x1311 x366))
(assert (= (or x3279 x862) x3864))
(assert (x1450 x3894))
(assert (< (x2903 x2730 x173 x1367 x4453 x3919 x625) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)))
(assert (not (x1834 (x336 x2730 x604 x959 x1794 x3560 x2991 x3575))))
(assert (x2786 x1902))
(assert (= (and x3956 (not x3238)) x1266))
(assert (= (or x3455 x2755) x2538))
(assert (x2786 x1170))
(assert (x2786 x4472))
(assert (= x1100 (or x3276 (and (not x2509) x3757))))
(assert (=> (>= 10000 x3069) (= 0 (x328 x3069))))
(assert (= x707 (and (not x1380) x3118)))
(assert (not (x1834 (x274 x198 x3098 x1628 x156))))
(assert (not (x1834 (x3915 x3859 x2465 x3694))))
(assert (= (x328 (x3915 64 x355 7)) (x3915 64 x355 7)))
(assert (= (and x3391 x823) x3341))
(assert (x2786 x507))
(assert (x2786 x2875))
(assert (x2786 x319))
(assert (x2786 x1306))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)))
(assert (= (x3025 x3404 x544 x842 x1300 x2619) (x328 (x3025 x3404 x544 x842 x1300 x2619))))
(assert (x2786 x3576))
(assert (x2786 x1233))
(assert (= (x2278 (x3025 x3914 x2565 x3806 x2413 x79)) x79))
(assert (x2786 x3059))
(assert (x2786 x3722))
(assert (x2786 x2569))
(assert (=> (>= 10000 x292) (= 0 (x328 x292))))
(assert (< (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2062 x4425) x1229))
(assert (= (x75 (x3025 x2730 x1434 x676 x4377 x480)) x2730))
(assert (< (x2903 x3404 x3490 x1699 x2954 x1545 x4410) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2903 x3404 x3490 x1699 x2954 x1545 x4410) (x328 (x2903 x3404 x3490 x1699 x2954 x1545 x4410))))
(assert (= (x3915 64 x3788 2) (x328 (x3915 64 x3788 2))))
(assert (x149 x1996 256))
(assert (x1450 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x2786 x1344))
(assert (= (x1190 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)) x1288))
(assert (= (=> (and (= false x741) (= x3630 true) (= 0 x2650)) x492) x3860))
(assert (x2786 x3272))
(assert (= (x75 (x3915 64 x2522 7)) 64))
(assert (x2786 x296))
(assert (= x262 (and x1721 x4397)))
(assert (= (=> (= x1813 (= x1838 0)) (and (=> (and (not x1813) (and (= true x2479) (= x260 false) (= 4 x1456))) x1701) (=> (and (and (= x4239 (x3915 64 x2625 2)) (= (x990 (+ x2022 x4433)) x2152) (= x331 (< x2152 x4433)) (= (x2614 x4239) x4433)) x1813) (and (=> (and (and (= true x3347) (= x3578 false) (= x1456 36)) x331) x1701) (=> (and (= (= x2456 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3790) (not x331)) (and (=> (and (and (= x3200 (x990 (+ x2456 1))) (= (x990 (+ 1 x2456)) x3376) (= 32 x1710) (= false x4416) (= x2082 1) (= x2417 (x3915 64 x2456 0)) (= (+ 1 x2417) x1214) (= x232 x3627) (= x3134 false)) (not x3790)) x4146) (=> x3790 x3247))))))) x3285))
(assert (= (x328 (x3915 64 x3812 100)) (x3915 64 x3812 100)))
(assert (x1450 x1755))
(assert (x2786 x291))
(assert (x2786 x1267))
(assert (= (and x3732 x4348) x151))
(assert (x2786 x4550))
(assert (x2786 x2493))
(assert (x2395 x2426))
(assert (x2786 x561))
(assert (x1834 38584857114614344130707641774870441135179346817440091772946614992565446901760))
(assert (not (x1834 (x3025 x3639 x1495 x3799 x2775 x1044))))
(assert (x2786 x324))
(assert (> (x3025 x2730 x1434 x676 x4377 x480) 10000))
(assert (= (x328 (x3915 64 x3519 36)) (x3915 64 x3519 36)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x1542 2)))
(assert (not (x1834 (x3915 64 x2886 36))))
(assert (x2091 (+ x2000 31)))
(assert (x2786 x362))
(assert (= (x2278 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560)) x3677))
(assert (not (x1834 (x2903 x1840 x2678 x243 x2159 x2970 x384))))
(assert (x2786 x1921))
(assert (x3153 x4558 2))
(assert (x2786 x1918))
(assert (= x1840 (x75 (x3916 x1840 x2364))))
(assert (= (x4010 (x3915 64 x1764 6)) x1764))
(assert (= (=> (and (= (>= 224 x3404) x1027) (= x3404 (x3936 128))) (and x1027 (=> (and (= x3472 (ite (= 0 x3404) x988 (ite (>= 32 x3404) x3813 (ite (<= x3404 64) x2519 (ite (>= 96 x3404) x2182 (ite (<= x3404 128) x186 (ite (>= 160 x3404) x220 (ite (<= x3404 192) x244 (ite (<= x3404 224) x4009 x4012))))))))) (= (x3936 160) x544) (= (x274 x3404 x4099 x1850 x1196) x2182) (= x2241 (x3936 192)) (= (x3936 256) x3738) (= (x3936 352) x1684) (= (x3936 288) x92) (= (x3936 160) x3490) (= x244 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)) (= x2619 (x3936 256)) (= (x3936 160) x4099) (= (x3936 256) x1545) (= x3283 (x3936 160)) (= (x3936 160) x3626) (= (x3936 192) x898) (= (x3936 224) x1300) (= (x3936 192) x842) (= x2954 (x3936 224)) (= x2827 (x3936 160)) (= x4410 (x3936 288)) (= (x1338 0) x988) (= (x3936 256) x2359) (= (x3936 224) x4317) (= x2445 (x3936 192)) (= x1341 (x3936 320)) (= (x3936 224) x1805) (= (x3936 192) x1850) (= (x3915 x3404 x2827 x2241) x2519) (= x4009 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)) (= x979 (x3936 160)) (= x4365 (<= x3859 224)) (= x736 (x3936 288)) (= (x3936 192) x1699) (= x1196 (x3936 224)) (= x3813 (x3916 x3404 x3283)) (= x2953 (x3936 320)) (= (x990 (+ x3342 x3859)) x3394) (= (x2903 x3404 x3490 x1699 x2954 x1545 x4410) x220) (= x186 (x3025 x3404 x544 x842 x1300 x2619))) (and (=> (and (= (x1249 x3342) x4126) (= x2163 (x990 (+ x3342 32))) (= (x990 (+ 96 x3342)) x414) (= (x1249 x2053) x2194) (= x326 (x990 (+ x3342 96))) (= (x1249 x2163) x2093) (= x2892 (x990 (+ 64 x3342))) (= (x2903 x3859 x4126 x2093 x3895 x226 x2266) x1425) (= x3717 (x990 (+ x3342 32))) (= x60 (x1249 x1086)) (= (x990 (+ x3342 32)) x3797) (= x2666 x3472) (= (x1249 x1421) x226) (= (x1249 x1952) x3313) (= x3163 (x1249 x3797)) (= (x1249 x3342) x2483) (= (x3916 x3859 x2420) x2382) (= (x1249 x2892) x2127) (= x2513 (x1249 x3151)) (= x2420 (x1249 x3342)) (= (x990 (+ x3342 128)) x1859) (= (x1249 x2888) x3088) (= (x3915 x3859 x2465 x3694) x1510) (= x1119 (x1249 x2850)) (= (x1249 x1359) x2156) (= (x1338 0) x50) (= x4167 (x1249 x3342)) (= x2266 (x1249 x567)) (= x2053 (x990 (+ x3342 64))) (= (x1249 x414) x3677) (= (x1249 x3717) x3694) (= (x1249 x1890) x2132) (= x2888 (x990 (+ 64 x3342))) (= (x1249 x1859) x4361) (= x2693 (x990 (+ 32 x3342))) (= x3968 (x990 (+ 192 x3342))) (= (x1249 x3968) x2955) (= (x1249 x3342) x1176) (= (x990 (+ 160 x3342)) x383) (= (x683 x3859 x1176 x2156 x60 x2513 x4361 x2132 x2955) x4197) (= (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560) x2095) (= x3895 (x1249 x2951)) (= (x990 (+ x3342 64)) x2951) (= x3040 (x1249 x3342)) (= x1086 (x990 (+ x3342 64))) (= (x990 (+ x3342 96)) x1421) (= (x3025 x3859 x4167 x2034 x2194 x1406) x3621) (= x1890 (x990 (+ x3342 160))) (= (x1249 x383) x4560) (= x567 (x990 (+ x3342 128))) (= x2034 (x1249 x2693)) (= (x1249 x326) x1406) (= (x990 (+ x3342 32)) x1952) (= x335 (x274 x3859 x3040 x3163 x2127)) (= x2850 (x990 (+ 128 x3342))) (= (ite (= 0 x3859) x50 (ite (>= 32 x3859) x2382 (ite (<= x3859 64) x1510 (ite (>= 96 x3859) x335 (ite (<= x3859 128) x3621 (ite (>= 160 x3859) x1425 (ite (<= x3859 192) x2095 (ite (<= x3859 224) x4197 x1760)))))))) x2666) (= x3151 (x990 (+ 96 x3342))) (= (x1249 x3342) x2465) (= (x990 (+ x3342 32)) x1359)) x2442) x4365)))) x838))
(assert (x2786 x4234))
(assert (= (x1190 (x3915 x3181 x457 x824)) x824))
(assert (x2786 x63))
(assert (x2786 x3575))
(assert (x1450 x2384))
(assert (= (x1190 (x683 x1593 x330 x155 x195 x2821 x2531 x2171 x1945)) x155))
(assert (< 10000 (x3915 64 x3788 2)))
(assert (= (and (not x1155) x2920) x4103))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x1764 6)))
(assert (= (x3945 (x3025 x3859 x4167 x2034 x2194 x1406)) x2194))
(assert (=> (>= 10000 x3779) (= 0 (x328 x3779))))
(assert (= x2407 (x1190 (x3915 x3914 x1238 x2407))))
(assert (= x3417 (or x3420 x3510)))
(assert (x2786 x3457))
(assert (x2786 x3787))
(assert (x2786 x104))
(assert (not (x1834 (x2903 x2961 x1003 x185 x2848 x2564 x4031))))
(assert (< (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3758 x597))
(assert (= (x328 (x3916 32 103)) (x3916 32 103)))
(assert (= x2774 (x2278 (x3025 x312 x2752 x483 x3825 x2774))))
(assert (x2786 x327))
(assert (x2786 x4371))
(assert (= (and x45 x3938) x2435))
(assert (x1450 x2040))
(assert (= x2990 (or x1558 x81)))
(assert (x2786 x4588))
(assert (= x3757 (or x2873 x3146)))
(assert (= (x75 (x2903 x3859 x4126 x2093 x3895 x226 x2266)) x3859))
(assert (=> (>= 10000 x1075) (= 0 (x328 x1075))))
(assert (=> (>= 10000 x1521) (= 0 (x328 x1521))))
(assert (= (x2278 (x2903 x3639 x1258 x4403 x165 x1097 x2877)) x1097))
(assert (x2786 x3298))
(assert (x2786 x1328))
(assert (=> (<= x3097 10000) (= 0 (x328 x3097))))
(assert (x794 32 x3169))
(assert (x2786 x295))
(assert (= (x274 x3859 x3040 x3163 x2127) (x328 (x274 x3859 x3040 x3163 x2127))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x312 x2752 x483 x3825 x2774)))
(assert (= x1427 (and x1949 x3317)))
(assert (= (x1190 (x2903 x1840 x2678 x243 x2159 x2970 x384)) x243))
(assert (= 0 (x1190 (x3915 64 x2456 0))))
(assert (x2786 x1465))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x3419 6)))
(assert (= (x1190 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)) x898))
(assert (= (x1190 (x336 x3435 x547 x872 x1944 x494 x713 x3785)) x872))
(assert (x1450 x1637))
(assert (x1834 65459779515086145227071195481915504640854538040456829512690024447692440076288))
(assert (x2786 x380))
(assert (= (x75 (x3915 64 x1439 36)) 64))
(assert (x740 x4297))
(assert (x740 x2688))
(assert (= (and x2579 x1104) x1691))
(assert (not (x1834 (x3025 x198 x4543 x431 x3636 x4004))))
(assert (x1834 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (=> (>= 10000 x3010) (= (x328 x3010) 0)))
(assert (x1311 x2070))
(assert (=> (<= x1282 10000) (= (x328 x1282) 0)))
(assert (x2779 x3894))
(assert (= x2627 (and x1605 (not x4119))))
(assert (= x3952 (and x1527 (not x2252))))
(assert (= (x3945 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)) x479))
(assert (> (x3915 64 x2747 100) 10000))
(assert (= (=> (= x1806 (= 0 x735)) (and (=> (and (= x726 (> 32 x1921)) (not x1806)) (and (=> (and (not x726) (and (= (x2148 x793) x1895) x3076 (= x3211 x793) (<= x1895 3) (= (= x1482 0) x3776) (= x3076 (= x1482 x1895)) (<= x1482 3) (= (x3915 64 x793 11) x1758) (= x1482 (x3326 x1758)) (= x793 (x1905 160)))) (and (=> (and (and (and (= x1595 (= x1094 0)) (= 1 x2927) (= x1049 x2327) (= x3638 0) (= x2208 (not x1595)) (= (x3915 64 x2054 10) x3129) (= (x3326 x268) x2327) (= 1 x2235) (= x1049 x1094) (>= 255 x2327) (= x793 x3990) (= 1 x4149) (= 1 x1385) (= x268 (x3915 64 x793 11))) (or (and (not x2208) (and (not x2208) (= true x789) (= x1978 x4275))) (and (and (= x4275 x218) (= x218 (+ 1 x1978)) x2208 (= x2506 1)) x2208))) x3776) x956) (=> (and (not x3776) (and (= x3273 true) (= x2924 4) (= x3303 false))) x4395))) (=> (and x726 (and (= x2546 true) (= x2429 false) (= 0 x2924))) x4395))) (=> (and x1806 (and (= x2924 x1921) (= false x639) (= x4399 true))) x4395))) x316))
(assert (x794 256 x433))
(assert (= (x3945 (x3025 x3639 x1495 x3799 x2775 x1044)) x2775))
(assert (x2786 x4158))
(assert (= x3509 (and x290 x1636)))
(assert (= (x75 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353)) x3403))
(assert (= x1756 (x4516 (x683 x3639 x3199 x2223 x2915 x3400 x3886 x9 x1756))))
(assert (x2786 x2522))
(assert (= x450 (x3945 (x274 x1840 x94 x168 x450))))
(assert (= (x75 (x2903 x1840 x2678 x243 x2159 x2970 x384)) x1840))
(assert (x2786 x2359))
(assert (= (x328 1341992515) 0))
(assert (x740 x3558))
(assert (< 10000 (x274 x2730 x879 x542 x1004)))
(assert (x2786 x3726))
(assert (x2786 x3694))
(assert (> (x3915 x1593 x3405 x1171) 10000))
(assert (x2786 x793))
(assert (x149 x3705 256))
(assert (x2786 x1138))
(assert (x2786 x2147))
(assert (x2786 x4480))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3025 x3435 x34 x2931 x4309 x2071)))
(assert (x2786 x774))
(assert (x2786 x730))
(assert (x2786 x4571))
(assert (x2786 x3119))
(assert (= (and x4253 x2750) x1284))
(assert (x2786 x397))
(assert (= x2468 (or x1831 x1272 x2025 x375 x3501)))
(assert (x2786 x3159))
(assert (= 64 (x75 (x3915 64 x65 12))))
(assert (= x1523 (and x446 (not x4515))))
(assert (=> (>= 10000 x4309) (= 0 (x328 x4309))))
(assert (= x4364 (and (not x686) x1723)))
(assert (x2786 x2171))
(assert (x2786 x3389))
(assert (= (and x3567 (not x2489)) x138))
(assert (x2786 x4270))
(assert (= (x1190 (x336 x198 x2739 x2475 x511 x460 x801 x1951)) x2475))
(assert (= x189 (and (not x2969) x4115)))
(assert (= (x328 (+ x2417 1)) (x328 x2417)))
(assert (x2786 x3571))
(assert (x2786 x1631))
(assert (= false x2817))
(assert (x2786 x1221))
(assert (x2786 x3785))
(assert (= (x4010 (x274 x1840 x94 x168 x450)) x94))
(assert (< (x2903 x3914 x3066 x4129 x3006 x936 x4404) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x2000))
(assert (x2786 x3561))
(assert (=> (>= 10000 x60) (= (x328 x60) 0)))
(assert (= (x2903 x587 x61 x783 x2151 x4535 x1441) (x328 (x2903 x587 x61 x783 x2151 x4535 x1441))))
(assert (= (x3915 x2730 x3221 x1879) (x328 (x3915 x2730 x3221 x1879))))
(assert (x2786 x2222))
(assert (=> (>= 10000 x3859) (= (x328 x3859) 0)))
(assert (x2786 x977))
(assert (= x2206 (x3945 (x336 x3639 x4551 x2809 x2206 x3059 x1470 x3875))))
(assert (x740 x985))
(assert (= 104 (x4010 (x3916 32 104))))
(assert (> (x2903 x3914 x3066 x4129 x3006 x936 x4404) 10000))
(assert (x3758 x3274))
(assert (x2786 x636))
(assert (= x3950 (x3945 (x3025 x2961 x2167 x3141 x3950 x1282))))
(assert (x2779 x1036))
(assert (=> (<= x457 10000) (= (x328 x457) 0)))
(assert (= (and x1976 x1013) x73))
(assert (= (and x716 (not x4577)) x1808))
(assert (= (x3945 (x2903 x3435 x1326 x4159 x1918 x655 x4296)) x1918))
(assert (= (x2907 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852)) x3228))
(assert (x2786 x61))
(assert (x2786 x1919))
(assert (x2786 x4379))
(assert (x2786 x3964))
(assert (x2786 x1193))
(assert (x2786 x436))
(assert (x1450 x3198))
(assert (x2786 x113))
(assert (= (=> (and (= x2177 x257) (= 0 x2840) (= x4337 x133) (= 1 x1549)) x4414) x3897))
(assert (= (ite (= x3181 0) x213 (ite (>= 32 x3181) x662 (ite (>= 64 x3181) x2231 (ite (>= 96 x3181) x2495 (ite (>= 128 x3181) x1535 (ite (>= 160 x3181) x146 (ite (<= x3181 192) x4073 (ite (<= x3181 224) x2993 x1478)))))))) (x1190 (x3915 64 x2150 (ite (= x3181 0) x213 (ite (>= 32 x3181) x662 (ite (>= 64 x3181) x2231 (ite (>= 96 x3181) x2495 (ite (>= 128 x3181) x1535 (ite (>= 160 x3181) x146 (ite (<= x3181 192) x4073 (ite (<= x3181 224) x2993 x1478))))))))))))
(assert (x2786 x312))
(assert (=> (<= x48 10000) (= 0 (x328 x48))))
(assert (x2786 x2824))
(assert (x2786 x2034))
(assert (x2786 x2707))
(assert (= (x274 x3403 x3737 x2303 x1556) (x328 (x274 x3403 x3737 x2303 x1556))))
(assert (= x1840 (x75 (x336 x1840 x1771 x3277 x1244 x961 x3381 x4563))))
(assert (x2786 x3595))
(assert (= x1119 (x2515 (x336 x3859 x2483 x3313 x3088 x3677 x1119 x4560))))
(assert (= x4521 (=> (and (= x29 x3155) (= x4202 x3787)) x83)))
(assert (x1834 1313998243))
(assert (= x1949 (and x503 x1294)))
(assert (x2786 x2159))
(assert (= x2730 (x75 (x3916 x2730 x1539))))
(assert (< 10000 (x3025 x2961 x2167 x3141 x3950 x1282)))
(assert (x2786 x306))
(assert (= (and x491 x1449) x557))
(assert (= (x4010 (x3025 x2730 x1434 x676 x4377 x480)) x1434))
(assert (= x2819 (and (not x566) x67)))
(assert (=> (<= x793 10000) (= (x328 x793) 0)))
(assert (x2786 x484))
(assert (x1450 x2325))
(assert (= x1773 (and (not x1548) x189)))
(assert (x2786 x3866))
(assert (x2786 x3560))
(assert (=> (>= 10000 x2739) (= 0 (x328 x2739))))
(assert (x2786 x2194))
(assert (= (x75 (x3915 x3181 x457 x824)) x3181))
(assert (x2786 x936))
(assert (= x997 (or x3280 x4325)))
(assert (x2786 x3636))
(assert (x149 x1646 32))
(assert (= x679 (and x4369 x2504)))
(assert (= x3406 (x4010 (x3915 64 x3406 (ite (= 0 x198) x803 (ite (<= x198 32) x755 (ite (>= 64 x198) x2778 (ite (>= 96 x198) x2583 (ite (>= 128 x198) x4541 (ite (>= 160 x198) x1868 (ite (<= x198 192) x3100 (ite (<= x198 224) x1331 x2424))))))))))))
(assert (= (x3915 64 x3242 36) (x328 (x3915 64 x3242 36))))
(assert (x2786 x4004))
(assert (= x318 x3432))
(assert (x2786 x1010))
(assert (= x3951 (x2278 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462))))
(assert (= x2275 (or (and (not x1076) x2492) (and x906 (not x919)))))
(assert (= (and x3361 x1058) x1158))
(assert (x149 x2699 256))
(assert (=> (>= 10000 x1434) (= (x328 x1434) 0)))
(assert (x2786 x2068))
(assert (x2786 x4435))
(assert (=> (<= x694 10000) (= (x328 x694) 0)))
(assert (x149 x1202 256))
(assert (x3758 x2325))
(assert (= x3574 (and x2536 (not x3207))))
(assert (= (x328 102788308552044517260959567728648622381392053106279845986800620074717893623808) 0))
(assert (x1834 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x2786 x2924))
(assert (= (x1190 (x3915 x587 x3996 x1809)) x1809))
(assert (x2786 x2073))
(assert (=> (<= x2591 10000) (= (x328 x2591) 0)))
(assert (x1450 x1754))
(assert (x2786 x1423))
(assert (x2786 x826))
(assert (= (x1190 (x3915 64 x3419 36)) 36))
(assert (x2786 x4442))
(assert (=> (<= x2658 10000) (= 0 (x328 x2658))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3916 x587 x487)))
(assert (= (x2278 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308)) x863))
(assert (x2786 x2030))
(assert (> (x3025 x3454 x1443 x569 x1856 x3010) 10000))
(assert (=> (>= 10000 x3221) (= 0 (x328 x3221))))
(assert (=> (<= x843 10000) (= (x328 x843) 0)))
(assert (x2786 x2829))
(assert (= (x2515 (x2903 x3181 x2757 x3204 x670 x4500 x1727)) x1727))
(assert (= x3069 (x3945 (x2903 x1593 x1270 x2523 x3069 x3055 x236))))
(assert (x2786 x2053))
(assert (x2786 x4575))
(assert (= (and x122 x3693) x1522))
(assert (not (x1834 (x3915 64 x3618 36))))
(assert (x3758 x3402))
(assert (not (x1834 (x2903 x3454 x4392 x2466 x1043 x4469 x3179))))
(assert (x2786 x1057))
(assert (x2786 x4202))
(assert (= (x2278 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)) x1059))
(assert (= x2536 (or x3269 x699 x282)))
(assert (x2786 x695))
(assert (= (x328 (x2903 x3435 x1326 x4159 x1918 x655 x4296)) (x2903 x3435 x1326 x4159 x1918 x655 x4296)))
(assert (< 10000 (x3915 64 x363 12)))
(assert (=> (<= x4158 10000) (= (x328 x4158) 0)))
(assert (= x2753 (or (and (not x246) x1502) x1933)))
(assert (= x2677 false))
(assert (= x2667 (and (not x3624) x3971)))
(assert (= (not (and (= (x509 x4335) x4113) (= x1481 (- x4113 x32)) (= x4267 x2173) (<= x4267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x32 x3426)) (= (x1950 x2792) x3426) (<= 0 x4267) (= (+ x3426 x32) x4267))) x2342))
(assert (= x793 (x4010 (x3915 64 x793 11))))
(assert (x2786 x1086))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x1840 x2678 x243 x2159 x2970 x384)))
(assert (x2786 x4095))
(assert (x2786 x460))
(assert (x2786 x1665))
(assert (x2395 x935))
(assert (not (x1834 (x3915 64 x4383 36))))
(assert (= (=> (and (= x1404 (= x1972 0)) (or (not x1404) x1404)) x281) x874))
(assert (> (x3915 64 x1439 36) 10000))
(assert (=> (>= 10000 x1563) (= (x328 x1563) 0)))
(assert (x2786 x3160))
(assert (x2786 x3883))
(assert (= (and x4289 x172) x391))
(assert (=> (<= x3493 10000) (= (x328 x3493) 0)))
(assert (=> (>= 10000 x2752) (= 0 (x328 x2752))))
(assert (x2786 x1849))
(assert (= x3639 (x75 (x274 x3639 x472 x3370 x1075))))
(assert (x2786 x4323))
(assert (= (or x609 x1936) x2661))
(assert (=> (>= 10000 x1925) (= (x328 x1925) 0)))
(assert (x2786 x468))
(assert (= (and x930 (not x4252)) x485))
(assert (not (x1834 (x3915 64 x4383 6))))
(assert (x2786 x4407))
(assert (x2786 x1607))
(assert (x2786 x1951))
(assert (x1311 x935))
(assert (=> (>= 10000 x1004) (= 0 (x328 x1004))))
(assert (= (x328 65459779515086145227071195481915504640854538040456829512690024447692440076288) 0))
(assert (x2786 x2163))
(assert (x2786 x3089))
(assert (x2786 x1075))
(assert (x2786 x3140))
(assert (= (x328 (x336 x1593 x3216 x381 x3446 x2361 x205 x546)) (x336 x1593 x3216 x381 x3446 x2361 x205 x546)))
(assert (x2786 x2999))
(assert (< (x3915 x3435 x994 x4023) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x544) (= (x328 x544) 0)))
(assert (= (x274 x3454 x3902 x4269 x254) (x328 (x274 x3454 x3902 x4269 x254))))
(assert (= (x75 (x3025 x3859 x4167 x2034 x2194 x1406)) x3859))
(assert (= x2628 (=> (and (= 0 x206) (= x1084 x3278) (= x3969 x206) (= 0 x2368)) x4274)))
(assert (x2786 x3342))
(assert (x2786 x3068))
(assert (x2786 x630))
(assert (= (x2907 (x683 x3181 x2090 x48 x4574 x448 x3488 x398 x104)) x398))
(assert (= x2953 (x2907 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953))))
(assert (> (x3916 x3859 x2420) 10000))
(assert (=> (<= x2683 10000) (= (x328 x2683) 0)))
(assert (= x115 (or x757 x1034 x2275 x4214 x3226 x4482)))
(assert (= 64 (x75 (x3915 64 x2291 (ite (= x3403 0) x4359 (ite (<= x3403 32) x1038 (ite (<= x3403 64) x2944 (ite (>= 96 x3403) x2858 (ite (>= 128 x3403) x4310 (ite (<= x3403 160) x700 (ite (<= x3403 192) x870 (ite (<= x3403 224) x333 x1761))))))))))))
(assert (x2786 x4535))
(assert (x2786 x1800))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x3435 x1326 x4159 x1918 x655 x4296)))
(assert (= (x3915 64 x1521 7) (x328 (x3915 64 x1521 7))))
(assert (x2786 x528))
(assert (= x360 (=> (and (= x4297 x3108) (= x2551 false) (= true x3332)) x100)))
(assert (= (x328 (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)) (x683 x3404 x3626 x898 x4317 x2359 x736 x1341 x1684)))
(assert (not (x1834 (x2903 x3859 x4126 x2093 x3895 x226 x2266))))
(assert (x2227 x2070))
(assert (= x2032 (or x1357 (and (not x2321) x2416))))
(assert (= x3419 (x4010 (x3915 64 x3419 2))))
(assert (=> (>= 10000 x4179) (= 0 (x328 x4179))))
(assert (x149 x1107 256))
(assert (=> (<= x324 10000) (= 0 (x328 x324))))
(assert (= (x1190 (x274 x3454 x3902 x4269 x254)) x4269))
(assert (x2786 x3696))
(assert (= (x328 (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)) (x683 x2730 x3166 x1288 x2710 x116 x769 x337 x4108)))
(assert (= x957 (x2907 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308))))
(assert (x2786 x4122))
(assert (x2786 x3215))
(assert (x2786 x1408))
(assert (x149 x2070 256))
(assert (= (x2515 (x2903 x3404 x3490 x1699 x2954 x1545 x4410)) x4410))
(assert (x2786 x1367))
(assert (= (x3915 x587 x3996 x1809) (x328 (x3915 x587 x3996 x1809))))
(assert (x2786 x41))
(assert (= (x75 (x3915 64 x355 7)) 64))
(assert (= x3454 (x75 (x2903 x3454 x4392 x2466 x1043 x4469 x3179))))
(assert (= x3308 (and (not x4459) x4071)))
(assert (= (x328 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554)) (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554)))
(assert (= (x2515 (x2903 x3435 x1326 x4159 x1918 x655 x4296)) x4296))
(assert (= (x75 (x3915 64 x3242 36)) 64))
(assert (= (and (not x2589) x3229) x2611))
(assert (=> (>= 10000 x4007) (= (x328 x4007) 0)))
(assert (= (x4010 (x3916 x312 x2052)) x2052))
(assert (x2786 x2327))
(assert (x2786 x76))
(assert (x2786 x1345))
(assert (=> (<= x3216 10000) (= 0 (x328 x3216))))
(assert (= x4383 (x4010 (x3915 64 x4383 2))))
(assert (= x2986 (and x2720 x2441)))
(assert (=> (>= 10000 x3166) (= 0 (x328 x3166))))
(assert (x2786 x3465))
(assert (< 10000 (x683 x3454 x3904 x2566 x479 x1335 x709 x4300 x2362)))
(assert (x1311 x1637))
(assert (x2786 x4420))
(assert (x2786 x214))
(assert (x2786 x2757))
(assert (x2786 x2728))
(assert (=> (>= 10000 x4031) (= (x328 x4031) 0)))
(assert (x149 x1036 32))
(assert (= x128 (x2907 (x683 x198 x2212 x1994 x944 x2248 x1197 x128 x1573))))
(assert (=> (<= x1347 10000) (= 0 (x328 x1347))))
(assert (x2786 x1832))
(assert (< 10000 (x274 x3404 x4099 x1850 x1196)))
(assert (= x3446 (x3945 (x336 x1593 x3216 x381 x3446 x2361 x205 x546))))
(assert (=> (<= x595 10000) (= 0 (x328 x595))))
(assert (=> (>= 10000 x116) (= (x328 x116) 0)))
(assert (x2786 x4024))
(assert (x2395 x2073))
(assert (not (x1834 (x274 x587 x939 x1435 x2707))))
(assert (= (x3945 (x336 x2961 x2496 x1580 x1689 x3302 x570 x2272)) x1689))
(assert (=> (>= 10000 x4361) (= (x328 x4361) 0)))
(assert (< (x3915 x3639 x1852 x2691) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1988))
(assert (x2786 x909))
(assert (x2786 x3313))
(assert (x2786 x3902))
(assert (x2786 x1895))
(assert (= x1485 (x4010 (x683 x1840 x1485 x2133 x843 x863 x4158 x957 x4308))))
(assert (x2786 x1504))
(assert (= x2033 (and (not x3938) x45)))
(assert (= (x4010 (x336 x3403 x1465 x1642 x2158 x3951 x3750 x462)) x1465))
(assert (= x4397 (and x1395 (not x556))))
(assert (x2786 x3920))
(assert (x2786 x1786))
(assert (=> (<= x569 10000) (= 0 (x328 x569))))
(assert (= x2992 (x1190 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554))))
(assert (x3829 (ite (not (= x1855 0)) 1 0)))
(assert (= x1563 (x3945 (x683 x3403 x787 x1780 x1563 x2323 x2761 x2683 x3353))))
(assert (x2786 x1197))
(assert (= x3103 (x4516 (x683 x2961 x3014 x1925 x3670 x1024 x4121 x611 x3103))))
(assert (= x1692 (or x3411 x4055)))
(assert (=> (<= x957 10000) (= (x328 x957) 0)))
(assert (= x936 (x2278 (x2903 x3914 x3066 x4129 x3006 x936 x4404))))
(assert (= (x328 (x3915 64 x3618 36)) (x3915 64 x3618 36)))
(assert (x2786 x1119))
(assert (x2786 x2904))
(assert (x2786 x611))
(assert (=> (>= 10000 x1144) (= 0 (x328 x1144))))
(assert (= x4259 (x2515 (x683 x3435 x4220 x2001 x1423 x1790 x4259 x3228 x2852))))
(assert (x2786 x4026))
(assert (= x2276 (and x3971 x3624)))
(assert (= (x2278 (x336 x3404 x979 x2445 x1805 x3738 x92 x2953)) x3738))
(assert (x2786 x2411))
(assert (=> (<= x1090 10000) (= (x328 x1090) 0)))
(assert (x2786 x3305))
(assert (=> (>= 10000 x4098) (= (x328 x4098) 0)))
(assert (x2786 x3880))
(assert (= x3529 (and (not x3409) x2164)))
(assert (=> (>= 10000 x135) (= 0 (x328 x135))))
(assert (x2786 x1140))
(assert (x2786 x3857))
(assert (x1834 2001815235))
(assert (= (or x115 x2851) x1502))
(assert (=> (<= x1552 10000) (= 0 (x328 x1552))))
(assert (x2786 x1563))
(assert (=> (<= x3220 10000) (= 0 (x328 x3220))))
(assert (=> (<= x2496 10000) (= 0 (x328 x2496))))
(assert (x2786 x827))
(assert (= (x75 (x3915 64 x1414 12)) 64))
(assert (x2786 x173))
(assert (= (or x2943 x731) x4495))
(assert (x2786 x3257))
(assert (x2786 x3604))
(assert (x2786 x1589))
(assert (x3758 x1637))
(assert (x2786 x2022))
(assert (= (x4010 (x336 x587 x1347 x595 x2316 x1059 x2176 x851)) x1347))
(assert (= (x328 (x3915 x3403 x802 x1126)) (x3915 x3403 x802 x1126)))
(assert (=> (<= x4064 10000) (= (x328 x4064) 0)))
(assert (x2786 x1628))
(assert (x2786 x4361))
(assert (< (x3915 64 x1521 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x2378))
(assert (=> (>= 10000 x2988) (= 0 (x328 x2988))))
(assert (x2786 x3747))
(assert (= 64 (x75 (x3915 64 x3406 (ite (= x198 0) x803 (ite (<= x198 32) x755 (ite (<= x198 64) x2778 (ite (>= 96 x198) x2583 (ite (<= x198 128) x4541 (ite (<= x198 160) x1868 (ite (<= x198 192) x3100 (ite (>= 224 x198) x1331 x2424))))))))))))
(assert (x2786 x4165))
(assert (=> (<= x2315 10000) (= (x328 x2315) 0)))
(assert (x2786 x3887))
(assert (x3829 x953))
(assert (not (x1834 (x3915 64 x363 12))))
(assert (= (x3945 (x2903 x3914 x3066 x4129 x3006 x936 x4404)) x3006))
(assert (x2395 x626))
(assert (x3829 x2))
(assert (= x2431 (or x469 x3955)))
(assert (x2786 x1273))
(assert (x149 x366 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1358))
(assert (=> (<= x2212 10000) (= (x328 x2212) 0)))
(assert (x2786 x211))
(assert (=> (<= x2157 10000) (= (x328 x2157) 0)))
(assert (=> (<= x2151 10000) (= (x328 x2151) 0)))
(assert (x2786 x3174))
(assert (x3758 x1073))
(assert (> (x3915 64 x2658 36) 10000))
(assert (x2786 x608))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2903 x198 x2377 x2801 x3779 x2284 x4064)))
(assert (> (x3915 64 x2886 36) 10000))
(assert (x1450 x589))
(assert (=> (<= x824 10000) (= (x328 x824) 0)))
(assert (x2786 x3581))
(assert (=> (<= x3381 10000) (= (x328 x3381) 0)))
(assert (x2786 x2315))
(assert (= x3054 (or x1845 x1064 x2410 x1871)))
(assert (= x282 (and x1691 (not x3678))))
(assert (x2786 x1684))
(assert (x2786 x455))
(assert (= x657 (and (not x400) x581)))
(assert (= x4554 (x4516 (x683 x3914 x4320 x2992 x914 x2136 x2378 x3887 x4554))))
(assert (x2786 x2015))
(assert (= (or x262 x2661 x1305 x386 x2401 x1538 x4495 x602 x4382 x4341 x671 x3885 x3335 x1476 x2014 x3000 x2979 x648 x4177 x1492 x591 x2122 x4566 x224) x618))
(assert (< 10000 (x3915 64 x4383 36)))
(assert (x2786 x1886))
(assert (= x2492 (and x1187 (not x443))))
(assert (< 10000 (x3915 64 x3242 36)))
(assert (= (x3915 64 x1414 12) (x328 (x3915 64 x1414 12))))
(assert (x2786 x82))
(assert (x1450 x2073))
(assert (=> (>= 10000 x450) (= (x328 x450) 0)))
(assert (= (x4010 (x3025 x3404 x544 x842 x1300 x2619)) x544))
(assert (= x1770 (and x581 x400)))
(assert (x2786 x3941))
(assert (> (x3915 64 x2625 1) 10000))
(assert (< 10000 (x3915 64 x1475 6)))
(assert (x149 x1637 256))
(assert (=> (<= x3204 10000) (= (x328 x3204) 0)))
(assert (> (x3915 64 x1552 36) 10000))
(assert (= (x75 (x3025 x3639 x1495 x3799 x2775 x1044)) x3639))
(assert (x2786 x2066))
(assert (= x1839 (=> (and (= x1415 (= 0 x2731)) (= x2731 (x1912 x4585))) (and (=> (and (and (= 0 x2949) (= false x692) (= true x199)) x1415) x2553) (=> (not x1415) x2817)))))
(assert (< (x3915 64 x4179 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2786 x1694))
(assert (=> (>= 10000 x1790) (= 0 (x328 x1790))))
(assert (= (x328 (x3915 64 x4166 36)) (x3915 64 x4166 36)))
(assert (x2786 x2325))
(assert (x2786 x3239))
(assert (x794 32 x4285))
(assert (x1450 x1748))
(assert (= (x75 (x3025 x1593 x1348 x1765 x3525 x1232)) x1593))
(assert (= x3441 (and x716 x4577)))
(assert (= 64 (x75 (x3915 64 x82 36))))
(assert (x2786 x2364))
(assert (=> (>= 10000 x2171) (= 0 (x328 x2171))))
(assert (x740 x1456))
(assert (= 0 (x328 3812630263)))
(assert (x2786 x2241))
(assert (= (and x3439 x1627) x3423))
(assert (x2786 x342))
(assert (=> (<= x3905 10000) (= 0 (x328 x3905))))
(assert (> (x3915 x3403 x802 x1126) 10000))
(assert (= (x336 x3435 x547 x872 x1944 x494 x713 x3785) (x328 (x336 x3435 x547 x872 x1944 x494 x713 x3785))))
(assert (= x2337 (x1190 (x274 x1593 x292 x2337 x2714))))
(assert (x2786 x2992))
(assert (x2786 x4269))
(assert (= x238 (and x3249 (not x371))))
(assert (= x1899 (x2278 (x2903 x312 x1352 x3445 x324 x1899 x1600))))
(assert (not (x1834 (x3915 64 x2422 36))))
(assert (x2786 x2450))
(assert (not (x1834 (x3915 64 x3788 2))))
(assert (= (x2515 (x2903 x3859 x4126 x2093 x3895 x226 x2266)) x2266))
(assert (x2786 x3727))
(assert (x2786 x2566))
(assert (x2786 x1276))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3915 64 x2658 36)))
(assert (x2786 x3657))
(assert (x2786 x1662))
(assert (x1450 x4558))
(assert (x1311 x2634))
(assert (x2786 x272))
(assert (x1450 x2530))
(assert (x2786 x3116))
(assert (= (and x1791 x227) x4341))
(assert (x2786 x3220))
(assert (x2786 x343))
(assert (=> (<= x625 10000) (= 0 (x328 x625))))
(assert (= x1697 (or (and x2897 (not x3137)) (and (not x3296) x3739))))
(assert (= (x2903 x3639 x1258 x4403 x165 x1097 x2877) (x328 (x2903 x3639 x1258 x4403 x165 x1097 x2877))))
(assert (x1450 x68))
(assert (= 64 (x75 (x3915 64 x2522 3))))
(assert (= x982 (x1190 (x3915 x312 x3260 x982))))
(assert (x2786 x1818))
(assert (= x2872 (x4010 (x3915 64 x2872 36))))
(assert (=> (>= 10000 x3405) (= 0 (x328 x3405))))
(assert (x2786 x709))
(assert (x2786 x880))
(check-sat)
(exit)
