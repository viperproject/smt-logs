(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x971 () Int)
(declare-fun x1008 () Int)
(declare-fun x760 () Int)
(declare-fun x521 () Int)
(declare-fun x1085 () Int)
(declare-fun x1397 () Int)
(declare-fun x1751 () Int)
(declare-fun x545 () Int)
(declare-fun x1679 () Int)
(declare-fun x607 () Int)
(declare-fun x361 () Int)
(declare-fun x658 () Int)
(declare-fun x534 () Int)
(declare-fun x1426 () Bool)
(declare-fun x1113 () Int)
(declare-fun x935 () Bool)
(declare-fun x766 () Int)
(declare-fun x364 () Int)
(declare-fun x1350 () Int)
(declare-fun x1291 () Int)
(declare-fun x788 () Int)
(declare-fun x548 () Bool)
(declare-fun x31 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1719 () Int)
(declare-fun x1272 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x206 () Int)
(declare-fun x162 () Int)
(declare-fun x1380 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x851 () Int)
(declare-fun x1523 () Int)
(declare-fun x823 () Int)
(declare-fun x968 () Int)
(declare-fun x1261 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x1734 () Int)
(declare-fun x782 () Int)
(declare-fun x1555 () Int)
(declare-fun x1685 () Int)
(declare-fun x1650 () Bool)
(declare-fun x1529 () Int)
(declare-fun x1086 () Int)
(declare-fun x464 () Int)
(declare-fun x905 () Int)
(declare-fun x1169 () Int)
(declare-fun x757 () Int)
(declare-fun x529 () Int)
(declare-fun x1499 () Int)
(declare-fun x477 () Int)
(declare-fun x429 () Int)
(declare-fun x1540 () Int)
(declare-fun x417 () Int)
(declare-fun x1444 () Int)
(declare-fun x943 () Bool)
(declare-fun x22 () Int)
(declare-fun x274 () Int)
(declare-fun x547 () Int)
(declare-fun x1297 () Int)
(declare-fun x1037 () Bool)
(declare-fun x1300 () Int)
(declare-fun x666 () Bool)
(declare-fun x1567 () Int)
(declare-fun x37 (Int) Int)
(declare-fun x603 () Int)
(declare-fun x1422 () Int)
(declare-fun x593 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x1061 () Int)
(declare-fun x1516 () Int)
(declare-fun x1641 () Int)
(declare-fun x1508 () Int)
(declare-fun x367 () Int)
(declare-fun x1117 () Bool)
(declare-fun x923 () Int)
(declare-fun x1028 () Int)
(declare-fun x158 () Int)
(declare-fun x403 () Bool)
(declare-fun x604 () Int)
(declare-fun x45 () Int)
(declare-fun x1564 () Int)
(declare-fun x1396 () Bool)
(declare-fun x250 () Bool)
(declare-fun x186 () Int)
(declare-fun x1363 () Bool)
(declare-fun x74 () Int)
(declare-fun x1275 () Int)
(declare-fun x1711 () Int)
(declare-fun x751 () Int)
(declare-fun x1673 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x647 () Int)
(declare-fun x1298 () Bool)
(declare-fun x155 () Bool)
(declare-fun x601 () Int)
(declare-fun x208 () Int)
(declare-fun x1488 () Int)
(declare-fun x389 () Int)
(declare-fun x446 () Int)
(declare-fun x1639 () Int)
(declare-fun x1152 () Int)
(declare-fun x1459 () Int)
(declare-fun x249 () Int)
(declare-fun x822 () Int)
(declare-fun x90 () Int)
(declare-fun x1696 () Int)
(declare-fun x344 () Int)
(declare-fun x333 () Int)
(declare-fun x628 () Int)
(declare-fun x1325 () Int)
(declare-fun x1440 () Bool)
(declare-fun x635 () Int)
(declare-fun x506 () Int)
(declare-fun x912 () Int)
(declare-fun x489 () Int)
(declare-fun x1111 () Int)
(declare-fun x77 () Int)
(declare-fun x1394 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1408 () Int)
(declare-fun x892 () Int)
(declare-fun x982 () Int)
(declare-fun x1120 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1023 () Int)
(declare-fun x1403 () Int)
(declare-fun x1536 () Int)
(declare-fun x1250 () Int)
(declare-fun x1232 () Int)
(declare-fun x1526 () Bool)
(declare-fun x195 () Int)
(declare-fun x562 () Int)
(declare-fun x1623 () Int)
(declare-fun x39 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1483 () Int)
(declare-fun x1364 (Int Int Int Int Int Int) Int)
(declare-fun x1535 () Int)
(declare-fun x1569 () Int)
(declare-fun x1657 () Int)
(declare-fun x1182 () Int)
(declare-fun x1055 () Int)
(declare-fun x1248 () Int)
(declare-fun x276 () Int)
(declare-fun x864 () Int)
(declare-fun x1614 () Bool)
(declare-fun x1114 () Int)
(declare-fun x589 () Int)
(declare-fun x1321 () Int)
(declare-fun x917 () Bool)
(declare-fun x835 () Bool)
(declare-fun x1405 () Int)
(declare-fun x1059 () Bool)
(declare-fun x141 () Bool)
(declare-fun x20 () Int)
(declare-fun x750 () Int)
(declare-fun x1073 () Int)
(declare-fun x1387 () Int)
(declare-fun x387 () Int)
(declare-fun x1640 () Int)
(declare-fun x1204 () Bool)
(declare-fun x1189 () Int)
(declare-fun x828 () Int)
(declare-fun x23 () Bool)
(declare-fun x989 () Int)
(declare-fun x691 () Bool)
(declare-fun x1514 () Int)
(declare-fun x1026 () Bool)
(declare-fun x640 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1744 () Int)
(declare-fun x1292 () Int)
(declare-fun x1503 () Int)
(declare-fun x491 () Int)
(declare-fun x1183 () Int)
(declare-fun x739 () Bool)
(declare-fun x183 () Bool)
(declare-fun x1548 () Int)
(declare-fun x1648 () Bool)
(declare-fun x68 () Bool)
(declare-fun x116 (Int Int) Int)
(declare-fun x1441 () Int)
(declare-fun x569 () Bool)
(declare-fun x842 () Int)
(declare-fun x1575 () Int)
(declare-fun x678 () Bool)
(declare-fun x97 () Int)
(declare-fun x1256 () Bool)
(declare-fun x170 () Int)
(declare-fun x980 () Int)
(declare-fun x1084 () Int)
(declare-fun x1701 () Bool)
(declare-fun x1697 () Int)
(declare-fun x672 () Bool)
(declare-fun x735 () Int)
(declare-fun x149 () Int)
(declare-fun x1339 () Int)
(declare-fun x579 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x378 () Int)
(declare-fun x500 () Int)
(declare-fun x660 () Bool)
(declare-fun x278 () Int)
(declare-fun x144 () Int)
(declare-fun x1131 () Int)
(declare-fun x704 () Int)
(declare-fun x1561 () Int)
(declare-fun x1520 () Int)
(declare-fun x1045 () Bool)
(declare-fun x205 () Bool)
(declare-fun x127 () Int)
(declare-fun x406 () Int)
(declare-fun x763 () Int)
(declare-fun x374 () Bool)
(declare-fun x1376 () Int)
(declare-fun x889 () Int)
(declare-fun x1702 () Int)
(declare-fun x1056 () Bool)
(declare-fun x929 () Bool)
(declare-fun x362 () Int)
(declare-fun x1158 () Int)
(declare-fun x886 () Int)
(declare-fun x966 () Int)
(declare-fun x192 () Int)
(declare-fun x1283 () Int)
(declare-fun x135 () Int)
(declare-fun x1630 () Int)
(declare-fun x625 () Int)
(declare-fun x681 () Int)
(declare-fun x1329 () Int)
(declare-fun x855 () Int)
(declare-fun x1456 () Int)
(declare-fun x758 () Int)
(declare-fun x260 () Bool)
(declare-fun x353 () Int)
(declare-fun x1481 () Int)
(declare-fun x1715 () Int)
(declare-fun x643 () Int)
(declare-fun x1678 (Int Int) Int)
(declare-fun x877 () Int)
(declare-fun x1333 () Int)
(declare-fun x985 () Int)
(declare-fun x1146 () Bool)
(declare-fun x639 () Int)
(declare-fun x553 () Bool)
(declare-fun x577 () Int)
(declare-fun x1267 () Int)
(declare-fun x96 () Int)
(declare-fun x1395 () Int)
(declare-fun x370 () Bool)
(declare-fun x921 () Int)
(declare-fun x1653 () Int)
(declare-fun x268 () Int)
(declare-fun x1449 () Int)
(declare-fun x1022 (Int) Int)
(declare-fun x1431 () Bool)
(declare-fun x1733 () Int)
(declare-fun x400 () Bool)
(declare-fun x148 () Int)
(declare-fun x1351 () Bool)
(declare-fun x1433 () Int)
(declare-fun x1434 () Int)
(declare-fun x754 () Int)
(declare-fun x4 () Int)
(declare-fun x1174 () Bool)
(declare-fun x528 () Int)
(declare-fun x346 () Int)
(declare-fun x198 () Int)
(declare-fun x299 () Int)
(declare-fun x319 () Int)
(declare-fun x898 () Int)
(declare-fun x293 () Int)
(declare-fun x539 () Int)
(declare-fun x1686 () Int)
(declare-fun x490 () Int)
(declare-fun x1454 () Int)
(declare-fun x1340 () Int)
(declare-fun x1589 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1336 () Int)
(declare-fun x744 () Int)
(declare-fun x1407 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x798 () Bool)
(declare-fun x784 () Int)
(declare-fun x759 () Int)
(declare-fun x689 () Int)
(declare-fun x1219 () Bool)
(declare-fun x1568 () Int)
(declare-fun x180 () Int)
(declare-fun x1464 () Int)
(declare-fun x270 () Bool)
(declare-fun x5 () Int)
(declare-fun x1220 () Int)
(declare-fun x1439 () Int)
(declare-fun x814 () Int)
(declare-fun x339 () Bool)
(declare-fun x241 () Int)
(declare-fun x391 () Int)
(declare-fun x151 () Bool)
(declare-fun x56 () Int)
(declare-fun x794 (Int) Int)
(declare-fun x532 () Bool)
(declare-fun x1319 () Int)
(declare-fun x806 () Int)
(declare-fun x1285 () Int)
(declare-fun x1724 () Int)
(declare-fun x1707 () Int)
(declare-fun x1348 () Int)
(declare-fun x427 () Int)
(declare-fun x831 () Bool)
(declare-fun x48 () Int)
(declare-fun x813 () Int)
(declare-fun x320 () Int)
(declare-fun x1681 () Int)
(declare-fun x1377 (Int) Int)
(declare-fun x336 () Int)
(declare-fun x852 () Int)
(declare-fun x471 () Bool)
(declare-fun x78 () Bool)
(declare-fun x709 () Int)
(declare-fun x496 () Bool)
(declare-fun x114 () Int)
(declare-fun x726 () Int)
(declare-fun x385 () Int)
(declare-fun x523 () Bool)
(declare-fun x1607 () Int)
(declare-fun x959 () Int)
(declare-fun x979 () Int)
(declare-fun x138 () Int)
(declare-fun x53 () Int)
(declare-fun x1062 () Bool)
(declare-fun x1409 () Int)
(declare-fun x444 () Int)
(declare-fun x81 () Int)
(declare-fun x296 () Int)
(declare-fun x1159 () Int)
(declare-fun x502 () Int)
(declare-fun x721 () Int)
(declare-fun x687 () Int)
(declare-fun x290 () Int)
(declare-fun x965 () Bool)
(declare-fun x622 () Bool)
(declare-fun x383 () Bool)
(declare-fun x246 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1313 () Int)
(declare-fun x891 () Int)
(declare-fun x772 () Int)
(declare-fun x368 () Int)
(declare-fun x495 () Bool)
(declare-fun x677 () Int)
(declare-fun x1020 () Int)
(declare-fun x1654 () Int)
(declare-fun x240 () Bool)
(declare-fun x670 () Int)
(declare-fun x479 () Int)
(declare-fun x1151 () Int)
(declare-fun x621 () Int)
(declare-fun x1627 () Int)
(declare-fun x970 () Int)
(declare-fun x1087 () Int)
(declare-fun x1725 () Int)
(declare-fun x1716 () Int)
(declare-fun x997 () Int)
(declare-fun x413 () Int)
(declare-fun x467 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x606 () Bool)
(declare-fun x263 () Int)
(declare-fun x663 () Bool)
(declare-fun x674 () Int)
(declare-fun x1429 () Int)
(declare-fun x1205 () Int)
(declare-fun x648 () Int)
(declare-fun x258 () Int)
(declare-fun x1505 () Int)
(declare-fun x710 () Int)
(declare-fun x36 () Int)
(declare-fun x1072 () Int)
(declare-fun x1058 () Int)
(declare-fun x740 () Int)
(declare-fun x24 () Int)
(declare-fun x1727 () Int)
(declare-fun x850 () Int)
(declare-fun x297 () Int)
(declare-fun x228 () Int)
(declare-fun x909 () Int)
(declare-fun x662 () Bool)
(declare-fun x1642 () Int)
(declare-fun x1165 () Int)
(declare-fun x1381 () Int)
(declare-fun x126 () Int)
(declare-fun x314 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x438 () Int)
(declare-fun x1624 () Int)
(declare-fun x1682 () Int)
(declare-fun x626 () Bool)
(declare-fun x129 () Int)
(declare-fun x511 () Int)
(declare-fun x88 () Int)
(declare-fun x808 () Int)
(declare-fun x1521 () Bool)
(declare-fun x964 () Int)
(declare-fun x360 () Bool)
(declare-fun x1670 () Int)
(declare-fun x302 () Bool)
(declare-fun x1175 () Int)
(declare-fun x541 () Int)
(declare-fun x1164 () Int)
(declare-fun x1453 (Int Int Int Int Int) Int)
(declare-fun x1543 () Int)
(declare-fun x837 () Int)
(declare-fun x1610 () Int)
(declare-fun x231 () Bool)
(declare-fun x1179 () Int)
(declare-fun x468 () Int)
(declare-fun x873 () Int)
(declare-fun x976 () Int)
(declare-fun x1110 () Bool)
(declare-fun x357 () Int)
(declare-fun x661 () Int)
(declare-fun x1652 (Int) Int)
(declare-fun x254 () Int)
(declare-fun x1537 () Bool)
(declare-fun x440 () Int)
(declare-fun x288 () Bool)
(declare-fun x1699 () Int)
(declare-fun x202 () Int)
(declare-fun x1447 () Int)
(declare-fun x1041 () Int)
(declare-fun x746 () Int)
(declare-fun x612 () Int)
(declare-fun x696 () Int)
(declare-fun x1570 () Int)
(declare-fun x161 () Int)
(declare-fun x1092 () Bool)
(declare-fun x197 () Int)
(declare-fun x1603 () Bool)
(declare-fun x605 () Int)
(declare-fun x1234 () Int)
(declare-fun x211 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x567 () Int)
(declare-fun x1259 () Int)
(declare-fun x795 () Int)
(declare-fun x1077 () Bool)
(declare-fun x1322 (Int) Int)
(declare-fun x1472 () Int)
(declare-fun x717 () Int)
(declare-fun x1669 () Bool)
(declare-fun x550 () Int)
(declare-fun x1001 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1185 () Int)
(declare-fun x901 () Int)
(declare-fun x1148 () Int)
(declare-fun x232 () Int)
(declare-fun x503 () Int)
(declare-fun x1497 () Int)
(declare-fun x469 () Bool)
(declare-fun x945 () Int)
(declare-fun x1605 () Bool)
(declare-fun x14 () Int)
(declare-fun x1504 () Int)
(declare-fun x66 () Bool)
(declare-fun x1225 () Int)
(declare-fun x229 () Bool)
(declare-fun x1140 () Int)
(declare-fun x449 () Int)
(declare-fun x1572 () Int)
(declare-fun x131 () Int)
(declare-fun x555 () Int)
(declare-fun x580 () Int)
(declare-fun x543 () Int)
(declare-fun x1463 () Bool)
(declare-fun x64 () Int)
(declare-fun x1646 () Bool)
(declare-fun x955 () Int)
(declare-fun x134 () Int)
(declare-fun x359 () Int)
(declare-fun x238 () Int)
(declare-fun x801 () Int)
(declare-fun x1735 () Int)
(declare-fun x17 (Int Int) Int)
(declare-fun x1705 () Int)
(declare-fun x724 () Int)
(declare-fun x1281 () Int)
(declare-fun x549 () Bool)
(declare-fun x936 () Int)
(declare-fun x1332 () Int)
(declare-fun x261 () Int)
(declare-fun x1090 () Int)
(declare-fun x342 () Int)
(declare-fun x1276 () Bool)
(declare-fun x1163 () Int)
(declare-fun x1416 () Int)
(declare-fun x488 () Bool)
(declare-fun x457 () Bool)
(declare-fun x1263 () Int)
(declare-fun x1743 () Int)
(declare-fun x432 () Int)
(declare-fun x1406 () Int)
(declare-fun x882 () Bool)
(declare-fun x556 () Bool)
(declare-fun x453 () Int)
(declare-fun x1728 () Bool)
(declare-fun x1007 () Int)
(declare-fun x1390 () Bool)
(declare-fun x1717 () Int)
(declare-fun x86 () Int)
(declare-fun x345 () Int)
(declare-fun x230 () Int)
(declare-fun x1122 () Int)
(declare-fun x25 () Int)
(declare-fun x62 () Bool)
(declare-fun x1301 () Int)
(declare-fun x940 () Int)
(declare-fun x809 () Bool)
(declare-fun x587 () Int)
(declare-fun x1308 (Int) Int)
(declare-fun x705 () Int)
(declare-fun x412 () Bool)
(declare-fun x1014 () Int)
(declare-fun x995 () Int)
(declare-fun x533 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1385 () Int)
(declare-fun x1436 () Int)
(declare-fun x885 () Int)
(declare-fun x768 (Int) Int)
(declare-fun x199 () Int)
(declare-fun x1184 () Int)
(declare-fun x719 () Bool)
(declare-fun x1415 () Int)
(declare-fun x483 () Bool)
(declare-fun x933 () Int)
(declare-fun x771 () Int)
(declare-fun x1136 () Bool)
(declare-fun x904 () Bool)
(declare-fun x401 () Int)
(declare-fun x480 () Int)
(declare-fun x1226 () Int)
(declare-fun x264 () Bool)
(declare-fun x805 () Int)
(declare-fun x723 () Int)
(declare-fun x811 () Bool)
(declare-fun x326 () Int)
(declare-fun x1188 () Int)
(declare-fun x1252 (Int) Int)
(declare-fun x219 () Int)
(declare-fun x1573 () Int)
(declare-fun x292 () Bool)
(declare-fun x1611 () Int)
(declare-fun x224 () Int)
(declare-fun x473 () Bool)
(declare-fun x207 () Int)
(declare-fun x796 () Bool)
(declare-fun x1161 () Int)
(declare-fun x1100 () Int)
(declare-fun x870 () Int)
(declare-fun x295 () Int)
(declare-fun x960 () Int)
(declare-fun x854 () Bool)
(declare-fun x629 () Bool)
(declare-fun x1209 () Int)
(declare-fun x1750 (Int) Int)
(declare-fun x1698 () Bool)
(declare-fun x1622 () Int)
(declare-fun x163 () Bool)
(declare-fun x863 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x1203 () Int)
(declare-fun x1078 () Int)
(declare-fun x101 () Int)
(declare-fun x799 () Int)
(declare-fun x1594 () Int)
(declare-fun x993 () Int)
(declare-fun x405 () Int)
(declare-fun x311 () Int)
(declare-fun x1458 () Int)
(declare-fun x789 () Int)
(declare-fun x1338 () Int)
(declare-fun x897 () Int)
(declare-fun x1138 () Int)
(declare-fun x1524 () Bool)
(declare-fun x1423 () Int)
(declare-fun x1414 () Bool)
(declare-fun x1015 (Int) Int)
(declare-fun x1097 () Bool)
(declare-fun x454 () Int)
(declare-fun x466 (Int Int) Int)
(declare-fun x972 () Int)
(declare-fun x57 () Bool)
(declare-fun x786 () Bool)
(declare-fun x52 () Int)
(declare-fun x531 () Bool)
(declare-fun x1659 () Int)
(declare-fun x337 () Int)
(declare-fun x1629 () Int)
(declare-fun x1726 () Int)
(declare-fun x128 () Bool)
(declare-fun x227 () Bool)
(declare-fun x1427 () Int)
(declare-fun x844 () Int)
(declare-fun x323 () Int)
(declare-fun x179 () Int)
(declare-fun x1240 () Bool)
(declare-fun x987 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1613 () Int)
(declare-fun x651 () Int)
(declare-fun x1484 () Int)
(declare-fun x1544 () Int)
(declare-fun x1559 () Int)
(declare-fun x1303 () Int)
(declare-fun x900 () Int)
(declare-fun x1545 () Bool)
(declare-fun x1249 () Int)
(declare-fun x1626 () Int)
(declare-fun x749 () Bool)
(declare-fun x1634 () Int)
(declare-fun x554 () Int)
(declare-fun x1383 () Int)
(declare-fun x610 () Int)
(declare-fun x201 () Int)
(declare-fun x1216 () Int)
(declare-fun x11 () Int)
(declare-fun x1468 () Int)
(declare-fun x713 () Int)
(declare-fun x1492 () Int)
(declare-fun x422 () Bool)
(declare-fun x879 () Int)
(declare-fun x667 () Int)
(declare-fun x866 () Bool)
(declare-fun x701 () Int)
(declare-fun x698 () Int)
(declare-fun x44 () Bool)
(declare-fun x931 () Int)
(declare-fun x1223 () Int)
(declare-fun x108 () Int)
(declare-fun x616 () Int)
(declare-fun x8 () Int)
(declare-fun x1370 () Int)
(declare-fun x1404 () Int)
(declare-fun x1563 () Bool)
(declare-fun x67 () Int)
(declare-fun x888 () Bool)
(declare-fun x494 () Int)
(declare-fun x937 () Int)
(declare-fun x519 () Bool)
(declare-fun x222 () Int)
(declare-fun x1460 () Int)
(declare-fun x98 () Int)
(declare-fun x1661 () Int)
(declare-fun x123 () Bool)
(declare-fun x242 () Int)
(declare-fun x257 () Int)
(declare-fun x1478 () Int)
(declare-fun x388 () Int)
(declare-fun x409 () Int)
(declare-fun x1609 () Int)
(declare-fun x1674 () Int)
(declare-fun x115 () Int)
(declare-fun x348 () Int)
(declare-fun x1374 () Bool)
(declare-fun x895 () Int)
(declare-fun x1054 () Int)
(declare-fun x152 () Int)
(declare-fun x856 () Int)
(declare-fun x1738 () Int)
(declare-fun x164 (Int) Int)
(declare-fun x756 () Int)
(declare-fun x1106 () Int)
(declare-fun x1741 () Int)
(declare-fun x656 () Int)
(declare-fun x992 () Bool)
(declare-fun x676 () Int)
(declare-fun x703 () Int)
(declare-fun x564 () Int)
(declare-fun x191 () Bool)
(declare-fun x1558 () Int)
(declare-fun x664 () Int)
(declare-fun x1533 () Int)
(declare-fun x1173 () Bool)
(declare-fun x277 () Int)
(declare-fun x80 () Int)
(declare-fun x1335 () Int)
(declare-fun x515 () Int)
(declare-fun x1139 () Int)
(declare-fun x366 () Int)
(declare-fun x736 () Bool)
(declare-fun x1752 () Int)
(declare-fun x733 () Int)
(declare-fun x843 () Int)
(declare-fun x1353 () Int)
(declare-fun x827 () Int)
(declare-fun x248 () Int)
(declare-fun x1547 () Bool)
(declare-fun x734 () Int)
(declare-fun x175 () Bool)
(declare-fun x414 () Int)
(declare-fun x1528 () Int)
(declare-fun x443 () Int)
(declare-fun x1587 () Bool)
(declare-fun x596 () Int)
(declare-fun x1506 () Int)
(declare-fun x542 () Int)
(declare-fun x1672 () Int)
(declare-fun x845 () Bool)
(declare-fun x1631 () Int)
(declare-fun x285 () Bool)
(declare-fun x32 () Int)
(declare-fun x334 () Int)
(declare-fun x1166 () Int)
(declare-fun x1274 () Bool)
(declare-fun x893 () Int)
(declare-fun x54 () Int)
(declare-fun x93 (Int) Int)
(declare-fun x641 () Int)
(declare-fun x1017 () Bool)
(declare-fun x1295 () Int)
(declare-fun x1299 () Int)
(declare-fun x1289 () Int)
(declare-fun x988 () Int)
(declare-fun x1326 () Int)
(declare-fun x646 () Int)
(declare-fun x978 () Int)
(declare-fun x1069 () Int)
(declare-fun x525 () Int)
(declare-fun x84 () Bool)
(declare-fun x371 () Int)
(declare-fun x878 () Bool)
(declare-fun x245 () Int)
(declare-fun x216 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1645 () Bool)
(declare-fun x668 () Int)
(declare-fun x433 () Bool)
(declare-fun x690 () Int)
(declare-fun x1108 () Int)
(declare-fun x407 () Bool)
(declare-fun x620 () Bool)
(declare-fun x530 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x146 () Int)
(declare-fun x418 () Bool)
(declare-fun x1287 () Int)
(declare-fun x215 () Int)
(declare-fun x1583 () Int)
(declare-fun x236 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x1071 () Int)
(declare-fun x1142 () Int)
(declare-fun x977 () Bool)
(declare-fun x991 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x91 () Int)
(declare-fun x915 () Int)
(declare-fun x485 () Int)
(declare-fun x1036 () Bool)
(declare-fun x122 () Int)
(declare-fun x1714 () Int)
(declare-fun x40 () Int)
(declare-fun x994 () Int)
(declare-fun x1194 () Int)
(declare-fun x119 () Bool)
(declare-fun x507 () Bool)
(declare-fun x693 () Int)
(declare-fun x1309 () Int)
(declare-fun x848 () Int)
(declare-fun x269 () Int)
(declare-fun x104 () Int)
(declare-fun x1730 () Int)
(declare-fun x1633 () Bool)
(declare-fun x834 () Int)
(declare-fun x1651 () Int)
(declare-fun x902 () Bool)
(declare-fun x9 () Int)
(declare-fun x914 () Int)
(declare-fun x1199 () Int)
(declare-fun x65 () Bool)
(declare-fun x445 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1602 () Int)
(declare-fun x472 () Int)
(declare-fun x275 () Int)
(declare-fun x384 () Int)
(declare-fun x165 () Int)
(declare-fun x778 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1010 () Int)
(declare-fun x1089 () Int)
(declare-fun x1665 () Int)
(declare-fun x518 () Int)
(declare-fun x1480 () Bool)
(declare-fun x624 () Int)
(declare-fun x728 () Int)
(declare-fun x358 () Int)
(declare-fun x1130 () Bool)
(declare-fun x910 () Int)
(declare-fun x1359 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x565 () Int)
(declare-fun x171 () Int)
(declare-fun x925 () Int)
(declare-fun x1437 () Int)
(declare-fun x633 () Int)
(declare-fun x137 () Int)
(declare-fun x233 () Bool)
(declare-fun x1391 () Int)
(declare-fun x279 (Int) Int)
(declare-fun x376 () Int)
(declare-fun x470 () Int)
(declare-fun x58 () Bool)
(declare-fun x1019 () Int)
(declare-fun x351 () Int)
(declare-fun x1532 () Int)
(declare-fun x1635 () Int)
(declare-fun x1099 () Bool)
(declare-fun x632 () Int)
(declare-fun x1070 () Int)
(declare-fun x1628 () Int)
(declare-fun x1676 () Int)
(declare-fun x688 () Int)
(declare-fun x671 () Int)
(declare-fun x694 () Int)
(declare-fun x1347 () Int)
(declare-fun x1580 () Int)
(declare-fun x2 () Int)
(declare-fun x253 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1541 () Int)
(declare-fun x537 () Int)
(declare-fun x841 () Int)
(declare-fun x1445 () Bool)
(declare-fun x907 () Bool)
(declare-fun x505 () Bool)
(declare-fun x308 () Int)
(declare-fun x172 () Bool)
(declare-fun x934 () Int)
(declare-fun x911 () Int)
(declare-fun x1553 () Int)
(declare-fun x1288 (Int Int) Int)
(declare-fun x514 () Bool)
(declare-fun x858 () Int)
(declare-fun x611 () Int)
(declare-fun x1317 () Bool)
(declare-fun x1549 () Int)
(declare-fun x1490 () Bool)
(declare-fun x630 () Int)
(declare-fun x1388 () Int)
(declare-fun x725 () Int)
(declare-fun x94 () Bool)
(declare-fun x30 () Bool)
(declare-fun x221 () Int)
(declare-fun x919 () Bool)
(declare-fun x160 () Int)
(declare-fun x423 () Int)
(declare-fun x1578 () Int)
(declare-fun x298 () Int)
(declare-fun x617 () Int)
(declare-fun x392 () Bool)
(declare-fun x1314 () Int)
(declare-fun x330 () Int)
(declare-fun x1177 () Int)
(declare-fun x974 () Int)
(declare-fun x1103 () Bool)
(declare-fun x644 () Bool)
(declare-fun x475 (Int) Int)
(declare-fun x450 () Int)
(declare-fun x1284 () Int)
(declare-fun x1095 () Bool)
(declare-fun x1435 () Int)
(declare-fun x309 () Int)
(declare-fun x294 () Bool)
(declare-fun x1379 () Int)
(declare-fun x1660 () Int)
(declare-fun x779 () Int)
(declare-fun x820 () Int)
(declare-fun x825 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1625 () Int)
(declare-fun x1400 () Int)
(declare-fun x41 () Int)
(declare-fun x363 () Int)
(declare-fun x1034 () Int)
(declare-fun x797 () Int)
(declare-fun x1144 () Int)
(declare-fun x1354 () Int)
(declare-fun x282 () Int)
(declare-fun x1047 () Bool)
(declare-fun x1509 () Int)
(declare-fun x1202 () Int)
(declare-fun x1402 () Int)
(declare-fun x1155 () Bool)
(declare-fun x147 () Int)
(declare-fun x516 () Bool)
(declare-fun x1316 () Int)
(declare-fun x1662 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x673 () Int)
(declare-fun x792 () Int)
(declare-fun x356 () Int)
(declare-fun x1330 () Int)
(declare-fun x830 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1096 () Bool)
(declare-fun x1270 () Int)
(declare-fun x683 () Int)
(declare-fun x243 () Int)
(declare-fun x1093 () Int)
(declare-fun x944 () Bool)
(declare-fun x753 () Int)
(declare-fun x591 () Int)
(declare-fun x188 () Int)
(declare-fun x894 () Int)
(declare-fun x83 () Int)
(declare-fun x990 () Int)
(declare-fun x49 () Bool)
(declare-fun x42 () Int)
(declare-fun x1470 () Int)
(declare-fun x50 () Int)
(declare-fun x884 () Int)
(declare-fun x328 () Int)
(declare-fun x169 () Int)
(declare-fun x1327 () Int)
(declare-fun x765 () Int)
(declare-fun x686 () Int)
(declare-fun x425 () Bool)
(declare-fun x379 () Int)
(declare-fun x1013 () Int)
(declare-fun x421 () Int)
(declare-fun x1323 () Int)
(declare-fun x563 () Bool)
(declare-fun x1748 () Int)
(declare-fun x510 () Bool)
(declare-fun x1030 () Int)
(declare-fun x1656 () Int)
(declare-fun x949 () Bool)
(declare-fun x1212 () Int)
(declare-fun x21 () Int)
(declare-fun x176 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x938 () Bool)
(declare-fun x204 () Int)
(declare-fun x961 () Int)
(declare-fun x447 () Int)
(declare-fun x1485 () Int)
(declare-fun x1369 () Int)
(declare-fun x875 () Int)
(declare-fun x1582 (Int Int Int Int) Int)
(declare-fun x538 () Int)
(declare-fun x1462 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x1446 () Int)
(declare-fun x804 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1693 () Int)
(declare-fun x613 () Int)
(declare-fun x922 () Bool)
(declare-fun x833 () Int)
(declare-fun x226 () Bool)
(declare-fun x1443 () Int)
(declare-fun x1082 () Int)
(declare-fun x1732 () Bool)
(declare-fun x18 () Int)
(declare-fun x1124 () Int)
(declare-fun x1343 () Bool)
(declare-fun x861 () Int)
(declare-fun x983 () Int)
(declare-fun x92 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x957 () Int)
(declare-fun x143 () Int)
(declare-fun x1590 () Int)
(declare-fun x916 () Int)
(declare-fun x1074 () Int)
(declare-fun x291 () Int)
(declare-fun x1228 () Int)
(declare-fun x478 () Bool)
(declare-fun x1278 () Int)
(declare-fun x355 () Int)
(declare-fun x1455 () Bool)
(declare-fun x1064 () Int)
(declare-fun x372 () Int)
(declare-fun x1695 () Int)
(declare-fun x458 () Int)
(declare-fun x120 () Int)
(declare-fun x512 () Int)
(declare-fun x1352 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x7 () Int)
(declare-fun x1649 () Int)
(declare-fun x107 () Int)
(declare-fun x1500 () Bool)
(declare-fun x574 () Bool)
(declare-fun x492 () Int)
(declare-fun x112 () Int)
(declare-fun x1063 () Int)
(declare-fun x1495 () Int)
(declare-fun x1737 () Int)
(declare-fun x100 () Bool)
(declare-fun x1713 () Int)
(declare-fun x1486 () Bool)
(declare-fun x304 () Int)
(declare-fun x769 () Int)
(declare-fun x105 () Int)
(declare-fun x1677 () Bool)
(declare-fun x481 () Int)
(declare-fun x177 () Int)
(declare-fun x51 () Int)
(declare-fun x1304 () Int)
(declare-fun x1341 () Int)
(declare-fun x1398 () Int)
(declare-fun x1266 () Int)
(declare-fun x1494 () Bool)
(declare-fun x381 () Bool)
(declare-fun x557 () Int)
(declare-fun x588 () Int)
(declare-fun x729 () Bool)
(declare-fun x1684 () Int)
(declare-fun x424 () Bool)
(declare-fun x881 (Int Int) Int)
(declare-fun x609 () Int)
(declare-fun x568 () Int)
(declare-fun x1599 () Int)
(declare-fun x1466 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x38 () Bool)
(declare-fun x618 () Int)
(declare-fun x382 () Int)
(declare-fun x1160 () Bool)
(declare-fun x465 () Int)
(declare-fun x654 () Int)
(declare-fun x166 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1116 () Int)
(declare-fun x1418 () Int)
(declare-fun x313 () Int)
(declare-fun x780 () Int)
(declare-fun x1133 () Int)
(declare-fun x684 () Int)
(declare-fun x1542 (Int) Int)
(declare-fun x1000 () Bool)
(declare-fun x220 () Int)
(declare-fun x517 () Int)
(declare-fun x365 () Int)
(declare-fun x1268 () Int)
(declare-fun x1171 () Int)
(declare-fun x963 (Int Int Int) Int)
(declare-fun x1467 () Int)
(declare-fun x818 () Int)
(declare-fun x1417 () Int)
(declare-fun x394 () Int)
(declare-fun x331 () Int)
(declare-fun x156 () Int)
(declare-fun x72 () Bool)
(declare-fun x741 () Bool)
(declare-fun x1577 () Int)
(declare-fun x560 () Bool)
(declare-fun x255 () Bool)
(declare-fun x829 () Int)
(declare-fun x1360 () Int)
(declare-fun x398 () Int)
(declare-fun x1675 () Bool)
(declare-fun x1253 () Int)
(declare-fun x267 () Int)
(declare-fun x1 () Int)
(declare-fun x638 () Int)
(declare-fun x942 () Int)
(declare-fun x118 () Int)
(declare-fun x1557 () Int)
(declare-fun x380 () Int)
(declare-fun x590 () Int)
(declare-fun x984 () Int)
(declare-fun x1031 () Bool)
(declare-fun x95 () Int)
(declare-fun x1006 () Bool)
(declare-fun x1749 () Int)
(declare-fun x283 () Bool)
(declare-fun x747 () Int)
(declare-fun x748 () Int)
(declare-fun x576 () Int)
(declare-fun x1378 () Int)
(declare-fun x1546 () Int)
(declare-fun x1643 () Int)
(declare-fun x1269 () Int)
(declare-fun x896 () Int)
(declare-fun x132 () Int)
(declare-fun x1411 () Int)
(declare-fun x1551 () Int)
(declare-fun x1311 (Int) Int)
(declare-fun x173 () Int)
(declare-fun x707 () Int)
(declare-fun x1318 () Int)
(declare-fun x426 () Bool)
(declare-fun x1293 () Int)
(declare-fun x1493 () Int)
(declare-fun x265 () Int)
(declare-fun x1241 () Int)
(declare-fun x377 () Int)
(declare-fun x27 () Int)
(declare-fun x918 () Bool)
(declare-fun x271 () Bool)
(declare-fun x168 () Int)
(declare-fun x1324 () Int)
(declare-fun x1425 () Int)
(declare-fun x1129 () Bool)
(declare-fun x124 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1128 () Int)
(declare-fun x996 () Int)
(declare-fun x695 () Int)
(declare-fun x218 () Int)
(declare-fun x1461 () Int)
(declare-fun x1619 () Int)
(declare-fun x431 () Int)
(declare-fun x932 () Bool)
(declare-fun x1692 () Int)
(declare-fun x793 () Int)
(declare-fun x1708 (Int Int) Int)
(declare-fun x437 () Int)
(declare-fun x416 () Int)
(declare-fun x1469 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x1296 (Int) Int)
(declare-fun x755 () Int)
(declare-fun x862 () Int)
(declare-fun x312 () Int)
(declare-fun x1451 () Int)
(declare-fun x1632 () Int)
(declare-fun x952 () Int)
(declare-fun x1050 () Bool)
(declare-fun x883 () Bool)
(declare-fun x1593 () Int)
(declare-fun x408 () Bool)
(declare-fun x59 () Int)
(declare-fun x802 () Int)
(declare-fun x865 () Int)
(declare-fun x486 () Int)
(declare-fun x499 () Int)
(declare-fun x800 () Int)
(declare-fun x1565 () Int)
(declare-fun x790 () Bool)
(declare-fun x1482 () Int)
(declare-fun x924 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1088 () Int)
(declare-fun x1046 () Int)
(declare-fun x645 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x317 () Int)
(declare-fun x1616 () Int)
(declare-fun x552 () Int)
(declare-fun x1512 () Int)
(declare-fun x1465 () Int)
(declare-fun x1421 () Int)
(declare-fun x213 () Int)
(declare-fun x256 () Int)
(declare-fun x700 () Int)
(declare-fun x967 () Int)
(declare-fun x428 () Int)
(declare-fun x12 () Int)
(declare-fun x1706 () Int)
(declare-fun x1258 () Int)
(declare-fun x3 () Int)
(declare-fun x1371 () Bool)
(declare-fun x1501 () Int)
(declare-fun x117 () Int)
(declare-fun x459 () Int)
(declare-fun x252 () Int)
(declare-fun x951 () Int)
(declare-fun x324 () Int)
(declare-fun x1294 () Int)
(declare-fun x711 () Bool)
(declare-fun x196 () Int)
(declare-fun x836 () Int)
(declare-fun x1126 () Int)
(declare-fun x1581 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1170 () Int)
(declare-fun x810 () Int)
(declare-fun x722 () Int)
(declare-fun x15 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x1700 () Int)
(declare-fun x752 () Int)
(declare-fun x1021 () Int)
(declare-fun x807 () Int)
(declare-fun x1620 () Int)
(declare-fun x247 () Int)
(declare-fun x1598 () Bool)
(declare-fun x109 () Int)
(declare-fun x1049 () Int)
(declare-fun x682 () Int)
(declare-fun x627 () Int)
(declare-fun x415 () Int)
(declare-fun x1531 () Int)
(declare-fun x1562 () Int)
(declare-fun x462 () Int)
(declare-fun x1389 () Int)
(declare-fun x1162 () Int)
(declare-fun x653 () Int)
(declare-fun x1430 () Int)
(declare-fun x527 () Int)
(declare-fun x397 (Int) Int)
(declare-fun x85 () Int)
(declare-fun x582 () Bool)
(declare-fun x272 () Int)
(declare-fun x1704 () Int)
(declare-fun x225 () Bool)
(declare-fun x187 () Int)
(declare-fun x33 () Int)
(declare-fun x821 () Int)
(declare-fun x121 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x846 () Int)
(declare-fun x655 () Int)
(declare-fun x1230 () Int)
(declare-fun x89 () Int)
(declare-fun x559 () Int)
(declare-fun x631 () Int)
(declare-fun x781 () Bool)
(declare-fun x608 () Int)
(declare-fun x1172 () Int)
(declare-fun x745 () Int)
(declare-fun x498 () Int)
(declare-fun x578 () Int)
(declare-fun x680 () Int)
(declare-fun x442 () Int)
(declare-fun x1118 () Int)
(declare-fun x586 () Bool)
(declare-fun x615 () Bool)
(declare-fun x61 () Int)
(declare-fun x868 () Int)
(declare-fun x251 () Int)
(declare-fun x652 () Int)
(declare-fun x1195 () Int)
(declare-fun x986 (Int) Int)
(declare-fun x1592 () Int)
(declare-fun x399 () Int)
(declare-fun x1222 () Int)
(declare-fun x1432 () Int)
(declare-fun x1198 () Int)
(declare-fun x280 () Int)
(declare-fun x520 (Int) Int)
(declare-fun x1448 () Int)
(declare-fun x1051 () Int)
(declare-fun x581 (Int Int) Int)
(declare-fun x1331 () Int)
(declare-fun x1644 () Int)
(declare-fun x354 () Int)
(declare-fun x1197 () Int)
(declare-fun x159 () Int)
(declare-fun x1539 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x501 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1042 () Bool)
(declare-fun x1210 () Int)
(declare-fun x1002 () Int)
(declare-fun x742 () Int)
(declare-fun x1365 () Int)
(declare-fun x73 () Int)
(declare-fun x876 () Bool)
(declare-fun x819 () Int)
(declare-fun x1190 () Int)
(declare-fun x1731 () Int)
(declare-fun x973 () Bool)
(declare-fun x1709 (Int Int Int Int Int Int Int) Int)
(declare-fun x570 () Int)
(declare-fun x1192 () Int)
(declare-fun x791 () Int)
(declare-fun x404 () Bool)
(declare-fun x435 () Bool)
(declare-fun x803 () Bool)
(declare-fun x157 () Bool)
(declare-fun x82 () Int)
(declare-fun x1556 () Int)
(declare-fun x223 () Int)
(declare-fun x1168 () Int)
(declare-fun x1143 () Int)
(declare-fun x185 () Int)
(declare-fun x880 () Bool)
(declare-fun x712 () Int)
(declare-fun x1213 () Int)
(declare-fun x1658 () Int)
(declare-fun x28 () Int)
(declare-fun x1247 () Int)
(declare-fun x1617 () Int)
(declare-fun x103 () Bool)
(declare-fun x393 () Bool)
(declare-fun x1550 (Int) Int)
(declare-fun x1424 () Int)
(declare-fun x928 () Int)
(declare-fun x1566 () Bool)
(declare-fun x716 () Int)
(declare-fun x1060 () Int)
(declare-fun x623 () Int)
(declare-fun x142 () Int)
(declare-fun x300 () Int)
(declare-fun x946 () Bool)
(declare-fun x679 () Int)
(declare-fun x1305 () Int)
(declare-fun x79 () Bool)
(declare-fun x209 () Int)
(declare-fun x194 () Int)
(declare-fun x787 () Int)
(declare-fun x266 () Int)
(declare-fun x840 () Int)
(declare-fun x1053 () Bool)
(declare-fun x303 () Int)
(declare-fun x1366 () Int)
(declare-fun x347 () Bool)
(declare-fun x452 () Int)
(declare-fun x1420 () Int)
(declare-fun x665 () Int)
(declare-fun x1476 () Int)
(declare-fun x890 () Int)
(declare-fun x287 () Int)
(declare-fun x456 () Bool)
(declare-fun x321 () Int)
(declare-fun x1355 () Int)
(declare-fun x184 () Bool)
(declare-fun x857 () Int)
(declare-fun x762 () Int)
(declare-fun x1552 () Int)
(declare-fun x1115 () Int)
(declare-fun x153 () Int)
(declare-fun x451 () Int)
(declare-fun x178 () Bool)
(declare-fun x1356 () Int)
(declare-fun x34 () Int)
(declare-fun x1302 () Int)
(declare-fun x375 () Int)
(declare-fun x1005 () Bool)
(declare-fun x1473 () Int)
(declare-fun x657 () Int)
(declare-fun x1450 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1710 () Int)
(declare-fun x592 () Bool)
(declare-fun x692 () Int)
(declare-fun x738 () Int)
(declare-fun x927 () Int)
(declare-fun x29 () Int)
(declare-fun x1586 () Int)
(declare-fun x702 () Int)
(declare-fun x340 () Int)
(declare-fun x526 () Bool)
(declare-fun x1141 () Int)
(declare-fun x1358 () Int)
(declare-fun x1104 () Int)
(declare-fun x1615 () Int)
(declare-fun x130 () Int)
(declare-fun x244 () Int)
(declare-fun x1666 () Int)
(declare-fun x947 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x439 () Int)
(declare-fun x1243 () Int)
(declare-fun x1718 () Bool)
(declare-fun x1680 () Int)
(declare-fun x110 (Int) Int)
(declare-fun x1076 () Int)
(declare-fun x575 () Int)
(declare-fun x1723 () Int)
(declare-fun x906 () Int)
(declare-fun x217 () Int)
(declare-fun x1745 () Int)
(declare-fun x10 () Int)
(declare-fun x948 () Int)
(declare-fun x1688 () Int)
(declare-fun x636 () Int)
(declare-fun x1349 () Int)
(declare-fun x1691 () Bool)
(declare-fun x125 () Int)
(declare-fun x558 () Int)
(declare-fun x411 () Bool)
(declare-fun x650 () Bool)
(declare-fun x1214 () Int)
(declare-fun x145 () Int)
(declare-fun x476 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x595 () Int)
(declare-fun x1489 () Bool)
(declare-fun x482 () Int)
(declare-fun x1201 () Bool)
(declare-fun x774 () Bool)
(declare-fun x1534 () Int)
(declare-fun x327 () Int)
(declare-fun x1027 () Int)
(declare-fun x281 () Int)
(declare-fun x69 () Bool)
(declare-fun x1307 () Int)
(declare-fun x926 () Int)
(declare-fun x212 () Int)
(declare-fun x1193 () Int)
(declare-fun x262 () Int)
(declare-fun x484 () Bool)
(declare-fun x1647 () Int)
(declare-fun x874 () Int)
(declare-fun x597 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x598 (Int) Bool)
(declare-fun x289 () Bool)
(declare-fun x1233 () Int)
(declare-fun x497 () Bool)
(declare-fun x1621 () Int)
(declare-fun x504 () Bool)
(declare-fun x1052 () Int)
(declare-fun x1004 () Bool)
(declare-fun x1032 () Int)
(declare-fun x785 () Int)
(declare-fun x953 () Int)
(declare-fun x675 () Bool)
(declare-fun x13 () Bool)
(declare-fun x461 () Int)
(declare-fun x1125 () Int)
(declare-fun x1091 (Int) Int)
(declare-fun x817 () Int)
(declare-fun x1218 () Bool)
(declare-fun x273 () Bool)
(declare-fun x1720 () Int)
(declare-fun x1601 () Int)
(declare-fun x1262 () Bool)
(declare-fun x1507 () Int)
(declare-fun x715 () Int)
(declare-fun x1112 () Int)
(declare-fun x544 () Int)
(declare-fun x1251 (Int) Int)
(declare-fun x75 () Int)
(declare-fun x950 () Int)
(declare-fun x1361 () Int)
(declare-fun x1254 () Bool)
(declare-fun x839 () Int)
(declare-fun x1519 () Int)
(declare-fun x430 () Int)
(declare-fun x343 () Int)
(declare-fun x1065 () Int)
(declare-fun x1024 () Int)
(declare-fun x887 () Bool)
(declare-fun x1221 () Int)
(declare-fun x441 () Int)
(declare-fun x1121 () Int)
(declare-fun x714 () Bool)
(declare-fun x46 () Int)
(declare-fun x315 () Int)
(declare-fun x585 () Int)
(declare-fun x1310 () Bool)
(declare-fun x614 () Bool)
(declare-fun x6 () Int)
(declare-fun x727 () Bool)
(declare-fun x561 () Int)
(declare-fun x284 () Bool)
(declare-fun x1442 () Int)
(declare-fun x1588 () Int)
(declare-fun x761 () Int)
(declare-fun x1671 () Int)
(declare-fun x1180 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x335 () Int)
(declare-fun x1176 () Int)
(declare-fun x1280 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x410 () Bool)
(declare-fun x1147 () Int)
(declare-fun x956 () Int)
(declare-fun x634 () Int)
(define-fun x1655 ((x816 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816) (>= x816 0)) x816 (- x816 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x509 ((x816 Int)) Int (ite (and (< x816 0) (>= x816 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x816 115792089237316195423570985008687907853269984665640564039457584007913129639936) x816))
(define-fun x685 ((x816 Int)) Int (ite (and (>= x816 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816)) x816 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x816) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x816)) (- x816 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x816 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x816 0)) (+ x816 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1708 x816 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x338 ((x920 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x920) (<= 0 x920)))
(define-fun x1457 ((x920 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x920) (>= x920 0)))
(define-fun x487 ((x920 Int) (x1306 Int)) Bool (= (* x1306 x920) (x1678 x920 x1306)))
(define-fun x1109 ((x920 Int) (x1306 Int)) Bool (and (= (- (* (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936) x920) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1678 (- x920 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1678 x920 (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x920 (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1306 x920) (* x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x1678 (- x920 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1306))))
(define-fun x43 ((x920 Int) (x1306 Int)) Bool (=> (and (< 0 x920) (< 0 x1306)) (= (= x1306 (x116 (x685 (x1678 x920 x1306)) x920)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1678 x920 x1306)))))
(define-fun x1018 ((x920 Int) (x1306 Int)) Bool (=> (and (not (= x1306 0)) (not (= 0 x920))) (and (= (x116 (x1678 x920 x1306) x920) x1306) (= (x116 (x1678 x920 x1306) x1306) x920))))
(define-fun x1236 ((x920 Int) (x1306 Int)) Bool (=> (and (< 0 x1306) (> x920 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1678 x920 x1306)) (< (x116 115792089237316195423570985008687907853269984665640564039457584007913129639935 x920) x1306))))
(define-fun x1337 ((x920 Int) (x1306 Int)) Bool (and (= (x685 (x1678 x920 x1306)) (x685 (x1678 x920 (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x685 (x1678 (- x920 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1306)) (x685 (x1678 x920 x1306))) (= (x685 (x1678 (- x920 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x685 (x1678 x920 x1306)))))
(define-fun x434 ((x920 Int) (x1306 Int)) Bool (and (=> (and (and (<= x1306 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1306)) (and (> x920 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x920))) (= (>= (x116 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1306) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x920)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1678 (- x920 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1306)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1306) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1306)) (and (> x920 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x920))) (= (<= (x1678 (- x920 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x116 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1306)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x920)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1306) (> x1306 0)) (and (< 0 x920) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x920))) (= (>= (x116 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1306) x920) (<= (x1678 x920 x1306) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1306) (<= x1306 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x920) (> x920 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1306) (x116 57896044618658097711785492504343953926634992332820282019728792003956564819968 x920)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1678 x920 (- x1306 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x325 ((x920 Int) (x1306 Int)) Bool (and (x487 x920 x1306) (x434 x920 x1306) (x1018 x920 x1306) (x1337 x920 x1306) (x1109 x920 x1306) (x43 x920 x1306) (x1236 x920 x1306)))
(define-fun x773 ((x920 Int)) Bool (and (= 0 (x1678 0 x920)) (= 0 (x1678 x920 0))))
(define-fun x720 ((x920 Int)) Bool (and (= (x1678 x920 1) x920) (= (x1678 1 x920) x920)))
(define-fun x1595 ((x920 Int)) Bool (and (x720 x920) (x773 x920)))
(define-fun x708 ((x920 Int)) Bool (and (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639935 x920) x920) (= x920 (x466 x920 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1068 ((x920 Int)) Bool (and (= 0 (x466 0 x920)) (= 0 (x466 x920 0))))
(define-fun x1419 ((x920 Int)) Bool (= x920 (x466 x920 x920)))
(define-fun x1368 ((x920 Int)) Bool (and (x708 x920) (x1068 x920) (x1419 x920)))
(define-fun x1612 ((x920 Int) (x1306 Int)) Bool (= (x466 x920 x1306) (x466 x1306 x920)))
(define-fun x599 ((x920 Int) (x1306 Int)) Bool (and (=> (<= 0 x920) (>= x920 (x466 x920 x1306))) (<= 0 (x466 x920 x1306)) (=> (<= 0 x1306) (>= x1306 (x466 x920 x1306)))))
(define-fun x19 ((x920 Int) (x1306 Int)) Bool (and (x599 x920 x1306) (x1612 x920 x1306)))
(define-fun x730 ((x920 Int)) Bool (= (x685 x920) (+ (x1708 x920 32) (x466 x920 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x941 ((x920 Int)) Bool (and (x19 x920 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x730 x920)))
(define-fun x1043 ((x920 Int) (x1306 Int)) Bool (and (> x1306 (x1708 x920 x1306)) (<= 0 (x1708 x920 x1306))))
(define-fun x1689 ((x920 Int) (x1306 Int)) Bool (=> (and (< 0 x1306) (<= 0 x920)) (= (> x1306 x920) (= (x1708 x920 x1306) x920))))
(define-fun x70 ((x920 Int) (x1306 Int)) Bool (=> (and (> x1306 0) (and (>= x920 x1306) (< x920 (+ x1306 x1306)))) (= (x1708 x920 x1306) (- x920 x1306))))
(define-fun x1618 ((x920 Int) (x1306 Int)) Bool (=> (> x1306 0) (= x920 (+ (x1708 x920 x1306) (* (x116 x920 x1306) x1306)))))
(define-fun x307 ((x920 Int) (x1306 Int)) Bool (and (x1043 x920 x1306) (x70 x920 x1306) (x1689 x920 x1306) (x1618 x920 x1306)))
(define-fun x16 ((x920 Int)) Bool (= 0 (x1708 0 x920)))
(define-fun x1134 ((x920 Int)) Bool (= (x1708 x920 1) 0))
(define-fun x1344 ((x920 Int)) Bool (= (x1708 x920 x920) 0))
(define-fun x1513 ((x920 Int)) Bool (and (x1134 x920) (x1344 x920) (x16 x920)))
(define-fun x420 ((x920 Int)) Bool (and (<= x920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x920 0)))
(define-fun x174 ((x920 Int)) Bool (= (x1708 x920 256) (x466 x920 255)))
(define-fun x824 ((x920 Int)) Bool (and (x19 x920 255) (x174 x920)))
(define-fun x1475 ((x920 Int) (x1306 Int)) Bool (=> (and (> x920 0) (< 0 x1306)) (and (>= x920 (x116 x920 x1306)) (>= (x116 x920 x1306) 0))))
(define-fun x60 ((x920 Int) (x1306 Int)) Bool (=> (and (and (< x920 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x920)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1306) (<= 1 x1306))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 x920 x1306)) (>= (x116 x920 x1306) 0))))
(define-fun x1511 ((x920 Int) (x1306 Int)) Bool (=> (and (< 1 x1306) (> x920 x1306)) (> x920 (x116 x920 x1306))))
(define-fun x182 ((x920 Int) (x1306 Int)) Bool (=> (and (< 0 x920) (> x1306 0)) (= (= 0 (x116 x920 x1306)) (> x1306 x920))))
(define-fun x1145 ((x920 Int) (x1306 Int)) Bool (=> (and (> x920 0) (> x1306 0)) (and (>= x920 (* x1306 (x116 x920 x1306))) (> (* x1306 (x116 x920 x1306)) (- x920 x1306)))))
(define-fun x522 ((x920 Int) (x1306 Int)) Bool (= (- x920 (x466 (- x1306 1) x920)) (* x1306 (x116 x920 x1306))))
(define-fun x1057 ((x920 Int) (x1306 Int)) Bool (and (x60 x920 x1306) (x1475 x920 x1306) (x522 x920 x1306) (x1145 x920 x1306) (x1511 x920 x1306) (x182 x920 x1306)))
(define-fun x872 ((x920 Int)) Bool (= (x116 0 x920) 0))
(define-fun x1154 ((x920 Int)) Bool (= (x116 x920 1) x920))
(define-fun x637 ((x920 Int)) Bool (=> (not (= x920 0)) (= 1 (x116 x920 x920))))
(define-fun x106 ((x920 Int)) Bool (and (x637 x920) (x872 x920) (x1154 x920)))
(define-fun x540 ((x920 Int)) Bool (= (x1708 x920 1329227995784915872903807060280344576) (x466 x920 1329227995784915872903807060280344575)))
(define-fun x572 ((x920 Int)) Bool (and (x19 x920 1329227995784915872903807060280344575) (x540 x920)))
(define-fun x777 ((x920 Int)) Bool (= (- x920 (x466 x920 340282366920938463463374607431768211200)) (x466 x920 115792089237316195423570985008687907852929702298719625575994209400481361428735)))
(define-fun x200 ((x920 Int)) Bool (and (x777 x920) (x19 x920 115792089237316195423570985008687907852929702298719625575994209400481361428735)))
(define-fun x396 ((x920 Int)) Bool (= (+ (x466 x920 340282366920938463463374607431768211200) (x1708 x920 256)) (x1708 x920 340282366920938463463374607431768211456)))
(define-fun x189 ((x920 Int)) Bool (and (x396 x920) (x19 x920 340282366920938463463374607431768211200)))
(define-fun x743 ((x920 Int)) Bool (= (+ (x1708 x920 256) (x466 x920 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (x685 x920)))
(define-fun x460 ((x920 Int)) Bool (and (x743 x920) (x19 x920 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x133 ((x920 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x581 x920 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x581 115792089237316195423570985008687907853269984665640564039457584007913129639935 x920))))
(define-fun x71 ((x920 Int)) Bool (and (= (x581 0 x920) x920) (= x920 (x581 x920 0))))
(define-fun x1067 ((x920 Int)) Bool (= (x581 x920 x920) x920))
(define-fun x136 ((x920 Int)) Bool (and (x133 x920) (x71 x920) (x1067 x920)))
(define-fun x1600 ((x920 Int) (x1306 Int)) Bool (= (x581 x1306 x920) (x581 x920 x1306)))
(define-fun x1636 ((x920 Int) (x1306 Int)) Bool (and (=> (>= x920 0) (<= x920 (x581 x920 x1306))) (=> (<= 0 x1306) (>= (x581 x920 x1306) x1306)) (>= (+ x920 x1306) (x581 x920 x1306))))
(define-fun x954 ((x920 Int) (x1306 Int)) Bool (and (x1600 x920 x1306) (x1636 x920 x1306)))
(define-fun x373 ((x920 Int)) Bool (= (x466 x920 1461501637330902918203684832716283019655932542975) (x1708 x920 1461501637330902918203684832716283019655932542976)))
(define-fun x535 ((x920 Int)) Bool (and (x373 x920) (x19 x920 1461501637330902918203684832716283019655932542975)))
(define-fun x1667 ((x1571 Int)) Int 0)
(define-fun x1231 ((x1571 Int)) Int 0)
(define-fun x849 ((x1571 Int)) Int 0)
(define-fun x1119 ((x1571 Int)) Int 0)
(define-fun x306 ((x1571 Int)) Int 0)
(define-fun x1690 ((x1571 Int)) Int 0)
(define-fun x566 ((x1571 Int)) Int 0)
(define-fun x349 ((x1571 Int)) Int 0)
(define-fun x1579 ((x1571 Int)) Int 0)
(define-fun x1083 ((x1571 Int)) Int 0)
(define-fun x732 ((x1571 Int)) Int 0)
(define-fun x1265 ((x1571 Int)) Int 0)
(define-fun x1502 ((x1571 Int)) Int 0)
(define-fun x1753 ((x1571 Int)) Int 0)
(define-fun x1739 ((x1571 Int)) Int 0)
(define-fun x203 ((x1571 Int)) Int 0)
(define-fun x602 ((x1571 Int)) Int 0)
(define-fun x832 ((x1571 Int)) Int 0)
(define-fun x1382 ((x1571 Int)) Int 0)
(define-fun x584 ((x1571 Int)) Int 0)
(define-fun x1560 ((x1571 Int)) Int 0)
(define-fun x998 ((x1571 Int)) Int 0)
(define-fun x1606 ((x1571 Int)) Int (ite (< x1571 x148) (x1091 x1571) 0))
(define-fun x826 ((x1571 Int)) Int (ite (> x355 x1571) (x279 x1571) 0))
(define-fun x1150 ((x1571 Int)) Int 0)
(define-fun x969 ((x1571 Int)) Int 0)
(define-fun x1039 ((x1571 Int)) Int 0)
(define-fun x583 ((x1571 Int)) Int 0)
(define-fun x322 ((x1571 Int)) Int 0)
(define-fun x193 ((x1571 Int)) Int 0)
(define-fun x731 ((x1571 Int)) Int 0)
(define-fun x1367 ((x1571 Int)) Int 0)
(define-fun x1080 ((x1571 Int)) Int 0)
(define-fun x903 ((x1571 Int)) Int 0)
(define-fun x436 ((x1571 Int)) Int 0)
(define-fun x493 ((x1571 Int)) Int 0)
(define-fun x706 ((x1571 Int)) Int 0)
(define-fun x139 ((x1571 Int)) Int 0)
(define-fun x1200 ((x1571 Int)) Int 0)
(define-fun x214 ((x1571 Int)) Int 0)
(define-fun x847 ((x1571 Int)) Int 0)
(define-fun x1373 ((x1571 Int)) Int 0)
(define-fun x697 ((x1571 Int)) Int 0)
(define-fun x113 ((x1571 Int)) Int 0)
(define-fun x571 ((x1571 Int)) Int 0)
(define-fun x318 ((x1571 Int)) Int 0)
(define-fun x1127 ((x1571 Int)) Int 0)
(define-fun x1315 ((x1571 Int)) Int 0)
(define-fun x1016 ((x1571 Int)) Int 0)
(define-fun x235 ((x1571 Int)) Int 0)
(define-fun x699 ((x1571 Int)) Int 0)
(define-fun x659 ((x1571 Int)) Int (x1322 x1571))
(define-fun x594 ((x1571 Int)) Int 0)
(define-fun x1044 ((x1571 Int)) Int (ite (= 4 x1571) 32 (x594 x1571)))
(define-fun x546 ((x1571 Int)) Int (ite (= x1571 36) x1124 (x1044 x1571)))
(define-fun x35 ((x1571 Int)) Int (ite (and (>= x1571 68) (< x1571 (+ x1124 68))) (x93 (- x1571 68)) (x546 x1571)))
(define-fun x1384 ((x1571 Int)) Int (ite (= 128 x1571) x952 (x203 x1571)))
(define-fun x154 ((x1571 Int)) Int (ite (and (<= 160 x1571) (< x1571 (+ x952 160))) (x35 (- x1571 92)) (x1502 x1571)))
(define-fun x573 ((x1571 Int)) Int (ite (= x1571 x1580) 0 (x154 x1571)))
(define-fun x102 ((x1571 Int)) Int (ite (= x1073 x1571) x1142 (x1579 x1571)))
(define-fun x815 ((x1571 Int)) Int (ite (and (< x1571 (+ x1623 x1142)) (<= x1623 x1571)) (x573 (- (+ x1421 x1571) x1623)) (x306 x1571)))
(define-fun x1137 ((x1571 Int)) Int (ite (= x657 x1571) x1281 (x699 x1571)))
(define-fun x419 ((x1571 Int)) Int (ite (and (> (+ x915 x1281) x1571) (<= x915 x1571)) (x815 (- (+ x1571 x1065) x915)) (x235 x1571)))
(define-fun x867 ((x1571 Int)) Int (ite (= x1571 x544) 32 (x1560 x1571)))
(define-fun x239 ((x1571 Int)) Int (ite (= x1616 x1571) x228 (x867 x1571)))
(define-fun x111 ((x1571 Int)) Int (ite (= x1571 x1505) x98 (x239 x1571)))
(define-fun x1754 ((x1571 Int)) Int (ite (= x1571 x942) x1433 (x111 x1571)))
(define-fun x1683 ((x1571 Int)) Int (ite (= x1571 x409) x344 (x1754 x1571)))
(define-fun x1328 ((x1571 Int)) Int (ite (= x1571 x521) x647 (x1683 x1571)))
(define-fun x513 ((x1571 Int)) Int (ite (= x1629 x1571) 192 (x1328 x1571)))
(define-fun x1722 ((x1571 Int)) Int (ite (= x1651 x1571) x1752 (x513 x1571)))
(define-fun x181 ((x1571 Int)) Int (ite (and (<= x1725 x1571) (> (+ x1752 x1725) x1571)) (x419 (- (+ x1571 x896) x1725)) (x1722 x1571)))
(define-fun x1215 ((x1571 Int)) Int (ite (= x1571 x387) x107 (x1753 x1571)))
(define-fun x1191 ((x1571 Int)) Int (ite (= x1571 x689) 32 (x732 x1571)))
(define-fun x1132 ((x1571 Int)) Int (ite (= x1571 x1674) x228 (x1191 x1571)))
(define-fun x649 ((x1571 Int)) Int (ite (= x1007 x1571) x98 (x1132 x1571)))
(define-fun x1286 ((x1571 Int)) Int (ite (= x1571 x1313) x1433 (x649 x1571)))
(define-fun x1009 ((x1571 Int)) Int (ite (= x1571 x1116) x344 (x1286 x1571)))
(define-fun x237 ((x1571 Int)) Int (ite (= x1571 x1340) x647 (x1009 x1571)))
(define-fun x871 ((x1571 Int)) Int (ite (= x1571 x557) 192 (x237 x1571)))
(define-fun x1181 ((x1571 Int)) Int (ite (= x1571 x1010) x1356 (x871 x1571)))
(define-fun x869 ((x1571 Int)) Int (ite (and (<= x1193 x1571) (> (+ x1193 x1356) x1571)) (x419 (- (+ x85 x1571) x1193)) (x1181 x1571)))
(define-fun x1518 ((x1571 Int)) Int (ite (and (> x905 x1571) (>= x1571 0)) (x869 (+ x651 x1571)) (x520 x1571)))
(define-fun x210 ((x1571 Int)) Int 0)
(define-fun x386 ((x1571 Int)) Int 0)
(define-fun x770 ((x1571 Int)) Int (ite (= 4 x1571) 64 (x386 x1571)))
(define-fun x1479 ((x1571 Int)) Int (ite (= x1571 68) x1124 (x770 x1571)))
(define-fun x1584 ((x1571 Int)) Int (ite (and (<= 100 x1571) (< x1571 (+ x1124 100))) (x93 (- x1571 100)) (x1479 x1571)))
(define-fun x737 ((x1571 Int)) Int (ite (= x1571 36) x266 (x1584 x1571)))
(define-fun x1438 ((x1571 Int)) Int (ite (= x633 x1571) x391 (x1015 x1571)))
(define-fun x860 ((x1571 Int)) Int (ite (= x1571 x272) x356 (x1438 x1571)))
(define-fun x1098 ((x1571 Int)) Int (ite (= 128 x1571) x1182 (x566 x1571)))
(define-fun x1345 ((x1571 Int)) Int (ite (and (> (+ 160 x1182) x1571) (>= x1571 160)) (x737 (- x1571 60)) (x849 x1571)))
(define-fun x63 ((x1571 Int)) Int (ite (= x1558 x1571) 0 (x1345 x1571)))
(define-fun x310 ((x1571 Int)) Int (ite (= x1571 x1041) x1360 (x1231 x1571)))
(define-fun x1334 ((x1571 Int)) Int (ite (and (> (+ x1551 x1360) x1571) (<= x1551 x1571)) (x63 (- (+ x1571 x321) x1551)) (x998 x1571)))
(define-fun x1255 ((x1571 Int)) Int (ite (= x1571 x1654) x6 (x1739 x1571)))
(define-fun x1149 ((x1571 Int)) Int (ite (and (>= x1571 x966) (< x1571 (+ x966 x6))) (x1334 (- (+ x1571 x744) x966)) (x1265 x1571)))
(define-fun x1264 ((x1571 Int)) Int (ite (= x1571 x799) x1128 (x1311 x1571)))
(define-fun x1157 ((x1571 Int)) Int (ite x1204 (x1311 x1571) (x1264 x1571)))
(define-fun x1003 ((x1571 Int)) Int (ite (= x1571 x799) x465 (x1157 x1571)))
(define-fun x1694 ((x1571 Int)) Int (ite (= x1177 x1571) x564 (x1003 x1571)))
(define-fun x1312 ((x1571 Int)) Int (ite (= x1571 x1523) x550 (x1016 x1571)))
(define-fun x1273 ((x1571 Int)) Int (ite (= x1615 x1571) 96 (x1312 x1571)))
(define-fun x899 ((x1571 Int)) Int (ite (= x1571 x716) x149 (x1273 x1571)))
(define-fun x1245 ((x1571 Int)) Int (ite (= x1571 x1072) 64 (x899 x1571)))
(define-fun x859 ((x1571 Int)) Int (ite (= x1571 x1516) x1482 (x1245 x1571)))
(define-fun x1066 ((x1571 Int)) Int (ite (and (>= x1571 x1330) (< x1571 (+ x1482 x1330))) (x1334 (- (+ x1562 x1571) x1330)) (x859 x1571)))
(define-fun x1597 ((x1571 Int)) Int (ite (= x278 x1571) x361 (x1066 x1571)))
(define-fun x1279 ((x1571 Int)) Int (ite (= x1449 x1571) x1247 (x1694 x1571)))
(define-fun x1094 ((x1571 Int)) Int (ite (= x1571 x512) x1247 (x768 x1571)))
(define-fun x1123 ((x1571 Int)) Int (ite (= x1571 x1523) 9504399908715365481695404106006497936221727462084701917660793593865516875776 (x1597 x1571)))
(define-fun x536 ((x1571 Int)) Int (ite (= x1331 x1571) x1339 (x1123 x1571)))
(define-fun x1554 ((x1571 Int)) Int (ite (= x1316 x1571) x604 (x536 x1571)))
(define-fun x1239 ((x1571 Int)) Int (ite (= x1571 x1532) 96 (x1554 x1571)))
(define-fun x838 ((x1571 Int)) Int (ite (= x1571 x1418) x1507 (x1239 x1571)))
(define-fun x448 ((x1571 Int)) Int (ite (and (< x1571 (+ x1507 x806)) (>= x1571 x806)) (x1149 (- (+ x1571 x1400) x806)) (x838 x1571)))
(define-fun x1736 ((x1571 Int)) Int (ite (and (>= x1571 132) (< x1571 x1122)) (x448 (- (+ (x1655 (+ x1523 132)) x1571) 132)) (x826 x1571)))
(define-fun x329 ((x1571 Int)) Int (ite (= x1571 4) 65 (x1315 x1571)))
(define-fun x1471 ((x1571 Int)) Int (ite (and (< x1571 36) (<= 0 x1571)) (x329 x1571) (x397 x1571)))
(define-fun x286 ((x1571 Int)) Int (ite (= 128 x1571) x698 (x1315 x1571)))
(define-fun x87 ((x1571 Int)) Int (ite (and (<= 160 x1571) (< x1571 (+ x698 160))) (x1736 (- x1571 28)) (x286 x1571)))
(define-fun x551 ((x1571 Int)) Int (ite (= x1571 x873) 0 (x87 x1571)))
(define-fun x1207 ((x1571 Int)) Int (ite (= x861 x1571) x431 (x551 x1571)))
(define-fun x1530 ((x1571 Int)) Int (ite (= x1571 x468) x792 (x1207 x1571)))
(define-fun x764 ((x1571 Int)) Int (ite (= x554 x1571) x143 (x1530 x1571)))
(define-fun x776 ((x1571 Int)) Int (ite (= x1571 4) 65 (x1315 x1571)))
(define-fun x1101 ((x1571 Int)) Int (ite (and (>= x1571 0) (> 36 x1571)) (x776 x1571) (x397 x1571)))
(define-fun x26 ((x1571 Int)) Int (ite (= x855 x1571) x144 (x1279 x1571)))
(define-fun x600 ((x1571 Int)) Int (ite (= x1571 x512) x144 (x1094 x1571)))
(define-fun x958 ((x1571 Int)) Int (ite x977 (x1279 x1571) (x26 x1571)))
(define-fun x99 ((x1571 Int)) Int (ite x977 (x1094 x1571) (x600 x1571)))
(define-fun x1412 ((x1571 Int)) Int (x1750 x1571))
(define-fun x669 ((x1571 Int)) Int (ite (= x646 x1571) x742 (x110 x1571)))
(define-fun x1703 ((x1571 Int)) Int (ite x798 (x110 x1571) (ite x1496 (x110 x1571) (x669 x1571))))
(define-fun x1746 ((x1571 Int)) Int (x986 x1571))
(define-fun x1282 ((x1571 Int)) Int (ite x798 (x1694 x1571) (ite x977 (x1279 x1571) (x26 x1571))))
(define-fun x1742 ((x1571 Int)) Int (x37 x1571))
(define-fun x369 ((x1571 Int)) Int (ite x798 (x768 x1571) (x99 x1571)))
(define-fun x1608 ((x1571 Int)) Int (x986 x1571))
(define-fun x463 ((x1571 Int)) Int (x1750 x1571))
(define-fun x1211 ((x1571 Int)) Int (ite x69 (x110 x1571) (x1703 x1571)))
(define-fun x1048 ((x1571 Int)) Int (ite x69 (x768 x1571) (x369 x1571)))
(define-fun x55 ((x1571 Int)) Int (ite x69 (x1311 x1571) (x1282 x1571)))
(define-fun x76 ((x1571 Int)) Int (x37 x1571))
(define-fun x341 ((x1571 Int)) Int (ite x1298 (ite x69 (x110 x1571) (x1703 x1571)) (x110 x1571)))
(define-fun x1178 ((x1571 Int)) Int (x986 x1571))
(define-fun x1474 ((x1571 Int)) Int (ite x1298 (ite x69 (x1311 x1571) (x1282 x1571)) (x1694 x1571)))
(define-fun x1510 ((x1571 Int)) Int (ite x1298 (x1048 x1571) (x768 x1571)))
(define-fun x1029 ((x1571 Int)) Int (x1750 x1571))
(define-fun x1156 ((x1571 Int)) Int (x37 x1571))
(define-fun x975 ((x1571 Int)) Int 0)
(define-fun x1574 ((x1571 Int)) Int 0)
(define-fun x812 ((x1571 Int)) Int (ite (= x1571 4) 32 (x1574 x1571)))
(define-fun x619 ((x1571 Int)) Int (ite (= 36 x1571) x209 (x812 x1571)))
(define-fun x1217 ((x1571 Int)) Int (ite (= 68 x1571) x1397 (x619 x1571)))
(define-fun x1740 ((x1571 Int)) Int (ite (= 100 x1571) x1190 (x1217 x1571)))
(define-fun x234 ((x1571 Int)) Int (ite (= x1571 132) x1046 (x1740 x1571)))
(define-fun x1167 ((x1571 Int)) Int (ite (= x1571 164) x1293 (x234 x1571)))
(define-fun x1196 ((x1571 Int)) Int (ite (= 196 x1571) 192 (x1167 x1571)))
(define-fun x190 ((x1571 Int)) Int (ite (= x1571 228) x905 (x1196 x1571)))
(define-fun x316 ((x1571 Int)) Int (ite (and (> (+ x905 260) x1571) (>= x1571 260)) (x1518 (- x1571 260)) (x190 x1571)))
(define-fun x1386 ((x1571 Int)) Int (ite (= x997 x1571) x179 (x860 x1571)))
(define-fun x642 ((x1571 Int)) Int (ite (= 320 x1571) x1641 (x349 x1571)))
(define-fun x1237 ((x1571 Int)) Int (ite (and (<= 352 x1571) (< x1571 (+ 352 x1641))) (x316 (- (+ x1571 x61) 352)) (x1119 x1571)))
(define-fun x350 ((x1571 Int)) Int (ite (= x1658 x1571) 0 (x1237 x1571)))
(define-fun x1033 ((x1571 Int)) Int (ite (= x458 x1571) 32 (x1083 x1571)))
(define-fun x140 ((x1571 Int)) Int (ite (= x1571 x1324) x1456 (x1033 x1571)))
(define-fun x455 ((x1571 Int)) Int (ite (= x265 x1571) x1546 (x140 x1571)))
(define-fun x908 ((x1571 Int)) Int (ite (= x1571 x444) x104 (x455 x1571)))
(define-fun x913 ((x1571 Int)) Int (ite (= x1571 x1165) x893 (x908 x1571)))
(define-fun x301 ((x1571 Int)) Int (ite (= x1424 x1571) x807 (x913 x1571)))
(define-fun x1238 ((x1571 Int)) Int (ite (= x1571 x499) 192 (x301 x1571)))
(define-fun x402 ((x1571 Int)) Int (ite (= x1571 x207) x1361 (x1238 x1571)))
(define-fun x999 ((x1571 Int)) Int (ite (and (< x1571 (+ x1118 x1361)) (>= x1571 x1118)) (x350 (- (+ x1571 352) x1118)) (x402 x1571)))
(define-fun x1664 ((x1571 Int)) Int (ite (= x1571 x1302) x1514 (x1690 x1571)))
(define-fun x474 ((x1571 Int)) Int (ite (= x1571 x1447) x101 (x1474 x1571)))
(define-fun x1591 ((x1571 Int)) Int (ite (= x1147 x1571) x101 (x1510 x1571)))
(define-fun x718 ((x1571 Int)) Int (ite (= x1571 x479) 9504399908715365481695404106006497936221727462084701917660793593865516875776 (x1667 x1571)))
(define-fun x395 ((x1571 Int)) Int (ite (= x834 x1571) x1546 (x718 x1571)))
(define-fun x1186 ((x1571 Int)) Int (ite (= x1571 x1751) x893 (x395 x1571)))
(define-fun x352 ((x1571 Int)) Int (ite (= x238 x1571) 96 (x1186 x1571)))
(define-fun x1206 ((x1571 Int)) Int (ite (= x931 x1571) x795 (x352 x1571)))
(define-fun x305 ((x1571 Int)) Int (ite (and (>= x1571 x1163) (< x1571 (+ x795 x1163))) (x350 (- (+ x1571 352) x1163)) (x1206 x1571)))
(define-fun x1517 ((x1571 Int)) Int (ite (and (>= x1571 132) (> x173 x1571)) (x305 (- (+ (x1655 (+ x479 132)) x1571) 132)) (x1606 x1571)))
(define-fun x962 ((x1571 Int)) Int (ite (= x1571 4) 65 (x1127 x1571)))
(define-fun x1515 ((x1571 Int)) Int (ite (and (> 36 x1571) (<= 0 x1571)) (x962 x1571) (x1308 x1571)))
(define-fun x939 ((x1571 Int)) Int (ite (= x1571 128) x1680 (x1127 x1571)))
(define-fun x508 ((x1571 Int)) Int (ite (and (< x1571 (+ x1680 160)) (<= 160 x1571)) (x1517 (- x1571 28)) (x939 x1571)))
(define-fun x775 ((x1571 Int)) Int (ite (= x1571 x802) 0 (x508 x1571)))
(define-fun x524 ((x1571 Int)) Int (ite (= x639 x1571) x1335 (x775 x1571)))
(define-fun x783 ((x1571 Int)) Int (ite (= x1571 x889) x1568 (x524 x1571)))
(define-fun x1755 ((x1571 Int)) Int (ite (= x1571 x780) x1638 (x783 x1571)))
(define-fun x332 ((x1571 Int)) Int (ite (= x1571 4) 65 (x1127 x1571)))
(define-fun x1498 ((x1571 Int)) Int (ite (and (> 36 x1571) (>= x1571 0)) (x332 x1571) (x1308 x1571)))
(define-fun x150 ((x1571 Int)) Int (ite (= x1571 x1183) x703 (x1755 x1571)))
(define-fun x1491 ((x1571 Int)) Int (ite x629 (x1755 x1571) (ite x946 (x783 x1571) (ite x1037 (x524 x1571) (ite x1276 (x775 x1571) (x150 x1571))))))
(define-fun x1487 ((x1571 Int)) Int (ite (= x1105 x1571) 0 (x1491 x1571)))
(define-fun x1035 ((x1571 Int)) Int (ite (= x1571 x1423) x590 (x1487 x1571)))
(define-fun x1375 ((x1571 Int)) Int (ite (= x195 x1571) x480 (x341 x1571)))
(define-fun x47 ((x1571 Int)) Int (ite (= x1571 4) 17 (x1035 x1571)))
(define-fun x1596 ((x1571 Int)) Int (ite (and (< x1571 36) (<= 0 x1571)) (x47 x1571) (x1308 x1571)))
(define-fun x1277 ((x1571 Int)) Int (ite x1496 (x110 x1571) (x669 x1571)))
(define-fun x853 ((x1571 Int)) Int (x986 x1571))
(define-fun x1153 ((x1571 Int)) Int (x1750 x1571))
(define-fun x930 ((x1571 Int)) Int (x37 x1571))
(define-fun x1522 ((x1571 Int)) Int (x1279 x1571))
(define-fun x767 ((x1571 Int)) Int (ite (= x1571 x156) x1301 (x764 x1571)))
(define-fun x981 ((x1571 Int)) Int (ite x1062 (x764 x1571) (ite x781 (x1530 x1571) (ite x579 (x1207 x1571) (ite x1272 (x551 x1571) (x767 x1571))))))
(define-fun x1038 ((x1571 Int)) Int (ite (= x1571 x249) 0 (x981 x1571)))
(define-fun x1525 ((x1571 Int)) Int (ite (= x1571 x186) x1299 (x1038 x1571)))
(define-fun x1040 ((x1571 Int)) Int (ite (= 4 x1571) 17 (x1525 x1571)))
(define-fun x1362 ((x1571 Int)) Int (ite (and (<= 0 x1571) (> 36 x1571)) (x1040 x1571) (x397 x1571)))
(assert (x338 x948))
(assert (x307 x585 32))
(assert (= x222 (x1252 (x1364 x222 x761 x134 x1588 x671 x766))))
(assert (x307 x925 32))
(assert (x307 x1271 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x410 x403) x938))
(assert (= (x963 64 x1339 2) (x1652 (x963 64 x1339 2))))
(assert (x338 x479))
(assert (x338 x906))
(assert (= 0 (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639874)))
(assert (= x216 (and x30 x640)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 x317 x447 x8)))
(assert (x338 x241))
(assert (x338 x665))
(assert (x1513 1461501637330902918203684832716283019655932542976))
(assert (x338 x1564))
(assert (< 10000 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593)))
(assert (=> (>= 10000 x1546) (= (x1652 x1546) 0)))
(assert (x338 x1379))
(assert (x1513 x1069))
(assert (=> (<= x290 10000) (= 0 (x1652 x290))))
(assert (x1513 x187))
(assert (x338 x442))
(assert (x338 x1257))
(assert (x338 x145))
(assert (x598 352537786))
(assert (< (x963 64 x18 x46) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x384 (x1022 (x1364 x317 x1710 x721 x384 x1714 x417))))
(assert (x338 x753))
(assert (= (and (not x830) x271) x407))
(assert (=> (>= 10000 x1106) (= (x1652 x1106) 0)))
(assert (x338 x228))
(assert (=> (>= 10000 x1531) (= (x1652 x1531) 0)))
(assert (= (x164 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653)) x694))
(assert (= x370 (and x1410 x1539)))
(assert (x338 x320))
(assert (x338 x105))
(assert (x338 x1183))
(assert (= x1553 (x164 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427))))
(assert (= (x1296 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)) x1643))
(assert (x338 x1555))
(assert (=> (>= 10000 x1536) (= 0 (x1652 x1536))))
(assert (= (x1377 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)) x1250))
(assert (= x548 (or (and (not x339) x1392) x390)))
(assert (not (x598 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427))))
(assert (not (x598 (x1582 x423 x300 x1484 x2))))
(assert (= x1546 (x1550 (x963 64 x1546 2))))
(assert (not (x598 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653))))
(assert (x338 x1078))
(assert (x338 x1169))
(assert (x1457 x819))
(assert (= (x1022 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427)) x97))
(assert (= (x164 (x1453 x317 x1432 x1106 x1139 x379)) x379))
(assert (x338 x909))
(assert (x338 x897))
(assert (= x964 (x794 (x1709 x1670 x75 x1727 x1266 x641 x607 x964))))
(assert (not (x598 (x963 64 x550 3))))
(assert (=> (<= x254 10000) (= 0 (x1652 x254))))
(assert (x338 x1685))
(assert (x1513 x758))
(assert (= (x1252 (x1453 x1151 x1704 x1536 x753 x1233)) x1151))
(assert (x338 x48))
(assert (x338 x1185))
(assert (= 4 (x1542 (x963 64 x1147 4))))
(assert (x338 x251))
(assert (x1457 x1626))
(assert (=> (<= x1199 10000) (= (x1652 x1199) 0)))
(assert (x338 x348))
(assert (x338 x1249))
(assert (x338 x1387))
(assert (= (=> (or (not x804) x804) x260) x504))
(assert (= (x963 x317 x447 x8) (x1652 (x963 x317 x447 x8))))
(assert (= (x164 (x1364 x222 x761 x134 x1588 x671 x766)) x671))
(assert (x1513 x280))
(assert (= x779 (x1542 (x1453 x1670 x421 x779 x109 x1695))))
(assert (x338 x1681))
(assert (x338 x290))
(assert (x338 x1672))
(assert (x338 x756))
(assert (= (and x411 (not x284)) x973))
(assert (< (x1288 x1661 x1589) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1021))
(assert (x1513 x137))
(assert (= (x1550 (x1364 x222 x761 x134 x1588 x671 x766)) x761))
(assert (x307 x758 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x432 (x1022 (x1453 x543 x5 x12 x432 x1327))))
(assert (x941 x628))
(assert (=> (<= x88 10000) (= (x1652 x88) 0)))
(assert (= x390 (and x339 x1392)))
(assert (x338 x363))
(assert (= x1541 (x1550 (x1364 x416 x1541 x895 x589 x1634 x1093))))
(assert (x338 x576))
(assert (=> (>= 10000 x1309) (= 0 (x1652 x1309))))
(assert (x338 x984))
(assert (x338 x1533))
(assert (< 10000 (x1453 x222 x705 x1027 x502 x1329)))
(assert (x338 x1069))
(assert (=> (>= 10000 x721) (= 0 (x1652 x721))))
(assert (x338 x1192))
(assert (x338 x1175))
(assert (x338 x914))
(assert (x338 x612))
(assert (x338 x1019))
(assert (x338 x1710))
(assert (= (x1542 (x1364 x197 x1504 x988 x1610 x441 x145)) x988))
(assert (= x1011 (=> (and (= x1177 (x963 64 x18 x928)) (= x1482 (x310 x1041)) (>= 2 x326) (= x465 (+ x361 x199)) (= x278 (x1655 (+ 32 x1615))) (= x662 (= 0 x1225)) (= (+ 1 x799) x928) (= (= x326 x1225) x467) (= (x1655 (+ x1523 32)) x1615) (= x1072 (x1655 (+ 32 x716))) (= x923 (x963 64 x512 4)) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639680 x745) x232) (>= 2 x1225) (= x50 (x466 255 x498)) (= x1330 (x1655 (+ 32 x1516))) (= x1562 (+ 32 x1041)) (= x745 (x1003 x1177)) (= x1225 (x1694 x923)) (= (+ 1 x232) x564) (= (+ 1 x50) x361) x467 (= (x768 x512) x326) (= x716 (x1655 (+ 96 x1523))) (<= x50 254) (= x498 (x1157 x799)) (= (x1157 x799) x1425) (= x1516 (x1655 (+ 64 x716))) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1425) x199)) (and (=> (and (= x1054 x308) (not x662)) x23) (=> (and (= (= (ite (< 0 x192) (ite (not (> x192 x361)) 1 0) (ite (> x192 0) 1 0)) 0) x505) x662) (and (=> (and (and (= false x1317) (= x604 x1503) (= false x49) (= x1175 x972) (<= x1220 127) (= x748 x1339) (= (x1251 x1175) x1243) (= (+ 32 x1654) x1400) (= x223 (x768 x512)) (= x218 x1247) (= 9504399908715365481695404106006497936221727462084701917660793593865516875776 x820) (<= 1 x1243) x935 (>= x1577 1) (= (x1655 (+ x1316 32)) x1532) (>= x1122 132) (= x1449 (x963 64 x512 4)) (= x623 (x1694 x1449)) (= (x1655 (+ x1523 4)) x1331) (= (x1655 (+ 32 x1331)) x1316) (= x1285 352537786) (<= x1220 127) (>= 1461501637330902918203684832716283019655932542975 x1175) (= x1581 (= x623 x223)) (= (= x64 x1069) x935) (<= x623 2) (<= x64 2) (<= x223 2) (= x1668 (= (x826 100) x1507)) (= (or (> (- x1194 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 (- x1194 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1194 4))))) x510) (= (x1655 (+ 96 x1331)) x1418) (= (x1251 x972) x1577) (>= x1194 132) (= (x1655 (+ 32 x1418)) x806) x1668 (= (x1655 (+ 31 x1507)) x901) (= x1507 (x1255 x1654)) (= (x1694 x1449) x1069) (<= 1 x1175) (= x1194 x1122) (= 96 x1148) (= (x768 x512) x64) (= x1446 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1069)) (= (+ 2 x1446) x1247) (= x897 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x901)) x1581 (= (x1655 (+ x806 x897)) x298) (= x1122 (x509 (- x298 x1523))) (<= x1069 2)) (not x505)) (and (=> (and x510 (and (= x634 0) (= true x422) (= x1480 false))) x691) (=> (and (= true x128) (not x510)) (and (=> (and (= (and (< 131 x1194) (= (<= x1194 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x675) x128) (and (=> (and (not x675) (and (= 0 x634) (= x31 false) (= true x1521))) x691) (=> (and (and (= (> x698 18446744073709551615) x825) (= (x1736 100) x698)) x675) (and (=> (and (not x825) (and (= x405 (x1655 (+ x698 31))) (= x1326 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x280)) (= (= 0 (x581 (ite (< 18446744073709551615 x861) 1 0) (ite (< x861 128) 1 0))) x410) (= (x1655 (+ x219 31)) x280) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x405) x1291) (= (x1655 (+ 32 x1291)) x219) (= (x1655 (+ 128 x1326)) x861))) (and (=> (and (not x410) (and (= true x289) (= x634 36) (= x660 false))) x691) (=> (and (and (= (x1655 (+ x698 132)) x220) (<= 129 x861) (= x1224 (< x1194 x220))) x410) (and (=> (and (not x1224) (and (= x873 (x1655 (+ x698 160))) (= x1410 (< 0 x725)))) (and (=> (and (not x1410) (and (= x519 false) (= x1246 true) (= x634 0))) x691) (=> (and (and (= (x963 64 x604 x638) x1299) (= (x551 128) x146) (= x1026 (< 0 x146)) (= (x963 64 x1339 2) x638)) x1410) (and (=> (and x1026 (and (= (> x146 32) x1201) (= (x551 160) x431))) (and (=> (and x1201 (and (= x468 (x1655 (+ 32 x861))) (= x880 (> x146 64)) (= (x1207 192) x792))) (and (=> (and (and (= x143 (x1530 224)) (= (x1655 (+ 64 x861)) x554) (= (> x146 96) x774)) x880) (and (=> (not x774) x1598) (=> x774 x1390))) (=> (not x880) x1598))) (=> (not x1201) x1598))) (=> (not x1026) x1598))))) (=> (and (and (= false x240) (= x907 true) (= 0 x634)) x1224) x691))))) (=> (and (and (= x1256 true) (= x634 36) (= false x1413)) x825) x691))))) (=> (and (not x128) (and (= x634 0) (= x1614 true) (= false x1352))) x691))))) (=> (and (= x1054 x654) x505) x1452)))))))
(assert (< (x963 x197 x537 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1709 x317 x1552 x1734 x97 x1553 x945 x1427) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x936))
(assert (x338 x667))
(assert (= (x1377 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442)) x1422))
(assert (= (and x556 (not x15)) x250))
(assert (x338 x715))
(assert (x338 x892))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1453 x543 x5 x12 x432 x1327)))
(assert (x338 x1476))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639775) 0))
(assert (= x342 (x1377 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894))))
(assert (x338 x109))
(assert (x338 x1620))
(assert (x338 x1269))
(assert (= x423 (x1252 (x1288 x423 x32))))
(assert (x338 x1465))
(assert (=> (>= 10000 x821) (= 0 (x1652 x821))))
(assert (x338 x1184))
(assert (= x681 (x1550 (x1582 x1661 x681 x1437 x241))))
(assert (=> (<= x990 10000) (= 0 (x1652 x990))))
(assert (x338 x858))
(assert (x338 x41))
(assert (= (x1550 (x1453 x317 x1432 x1106 x1139 x379)) x1432))
(assert (=> (<= x1027 10000) (= 0 (x1652 x1027))))
(assert (x338 x197))
(assert (x338 x789))
(assert (x338 x1151))
(assert (< 10000 (x963 x543 x1063 x751)))
(assert (x338 x821))
(assert (x1513 x1013))
(assert (x338 x1163))
(assert (= x503 (x1377 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653))))
(assert (x338 x1084))
(assert (=> (>= 10000 x801) (= 0 (x1652 x801))))
(assert (> (x475 0) 10000))
(assert (=> (>= 10000 x950) (= (x1652 x950) 0)))
(assert (x338 x187))
(assert (x338 x1141))
(assert (x338 x709))
(assert (x338 x658))
(assert (=> (>= 10000 x241) (= 0 (x1652 x241))))
(assert (x338 x1341))
(assert (x307 x122 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1391))
(assert (= x817 (x1542 (x1709 x222 x1531 x817 x171 x1578 x443 x971))))
(assert (=> (<= x1451 10000) (= (x1652 x1451) 0)))
(assert (=> (<= x1234 10000) (= (x1652 x1234) 0)))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639745))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639870))
(assert (x338 x342))
(assert (x338 x1549))
(assert (x941 x925))
(assert (not (x598 (x963 64 x18 x46))))
(assert (x338 x1748))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= (x1288 x1151 x485) (x1652 (x1288 x1151 x485))))
(assert (x338 x1159))
(assert (< 10000 (x963 64 x604 x638)))
(assert (x338 x42))
(assert (=> (<= x1214 10000) (= 0 (x1652 x1214))))
(assert (= x1592 (x1022 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894))))
(assert (=> (<= x1553 10000) (= 0 (x1652 x1553))))
(assert (x338 x173))
(assert (x338 x268))
(assert (< 10000 (x963 64 x18 x928)))
(assert (x338 x1071))
(assert (x338 x1348))
(assert (not (x598 (x963 x423 x1613 x340))))
(assert (x338 x952))
(assert (x1513 x1656))
(assert (= x435 (and (not x294) x1343)))
(assert (x338 x1190))
(assert (= (x1022 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492)) x1366))
(assert (= x878 (=> (and (not (= x1548 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x1548 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x1548 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x543 (x310 x1041)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1548) (<= x1548 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1548 x464) (= (>= 224 x543) x381) (= (+ x1041 32) x933) (not (= x1548 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x464 (x1655 (+ 64 x1548)))) (and x381 (=> (and (= x337 (+ x933 128)) (= x713 (+ 64 x933)) (= (+ 96 x933) x1289) (= (+ x933 32) x679) (= (+ 160 x933) x1649) (= (+ x933 160) x376) (= x1063 (x1334 x933)) (= x1071 (+ 64 x933)) (= x875 (+ 128 x933)) (= x561 (x1334 x765)) (= (x1334 x933) x1601) (= (+ x933 32) x351) (= (x475 0) x438) (= (+ x933 192) x1061) (= x722 (x1334 x115)) (= x868 (x1334 x713)) (= (x1334 x1071) x1508) (= (x1334 x351) x12) (= (x1334 x679) x357) (= x115 (+ 96 x933)) (= (x1334 x1448) x1166) (= (x1288 x543 x1607) x525) (= x512 (ite (= x543 0) x438 (ite (<= x543 32) x525 (ite (<= x543 64) x688 (ite (<= x543 96) x1381 (ite (>= 128 x543) x1171 (ite (>= 160 x543) x1189 (ite (<= x543 192) x800 (ite (<= x543 224) x1707 x372))))))))) (= x733 (+ 128 x933)) (= x1593 (x1334 x1061)) (= x1115 (x1334 x337)) (= (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593) x1707) (= x791 (+ 96 x933)) (= (x1334 x933) x1212) (= (x1334 x933) x1269) (= (+ 32 x933) x364) (= (x1098 128) x317) (= x5 (x1334 x933)) (= (+ 32 x933) x388) (= x1540 (+ x933 32)) (= x1483 (+ 32 x933)) (= (x1334 x364) x1028) (= (+ x933 64) x1448) (= (>= 224 x317) x1500) (= x213 (x1334 x1649)) (= x224 (+ 64 x933)) (= (x1364 x543 x785 x1620 x1508 x561 x1617) x1189) (= (x1334 x1483) x751) (= x936 (x1334 x618)) (= x312 (x1334 x376)) (= (x1334 x791) x1202) (= x432 (x1334 x224)) (= (x1334 x733) x1617) (= (x1334 x933) x785) (= (x1334 x875) x1573) (= (+ x933 96) x765) (= (+ x933 64) x618) (= x1171 (x1453 x543 x5 x12 x432 x1327)) (= x1327 (x1334 x1289)) (= x782 (x1334 x1540)) (= (x963 x543 x1063 x751) x688) (= (x1709 x543 x1212 x357 x868 x722 x1573 x312) x800) (= x1620 (x1334 x388)) (= x1607 (x1334 x933)) (= (x1582 x543 x1269 x1028 x936) x1381)) (and x1500 (=> (and (and (= (x63 192) x1106) (= x550 (ite (= 0 x317) x1394 (ite (>= 32 x317) x837 (ite (<= x317 64) x81 (ite (>= 96 x317) x169 (ite (<= x317 128) x1321 (ite (<= x317 160) x682 (ite (<= x317 192) x857 (ite (>= 224 x317) x221 x757))))))))) (= (x466 255 x1565) x192) (= x97 (x63 224)) (or (and (<= x464 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639874 x464)) (and (<= 1 x464) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639871 x464))) (= x1552 (x63 160)) (= x81 (x963 x317 x447 x8)) (= x1565 (x1311 x1342)) (= (x63 160) x1710) (= (x116 x33 256) x363) (= x8 (x63 192)) (= (x63 320) x1427) (= x857 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427)) (= x1342 (x963 64 x1199 2)) (< x464 x1523) (= x721 (x63 192)) (= (x466 1329227995784915872903807060280344575 x486) x1257) (= (x63 192) x440) (= x1676 (x1311 x1342)) (= (x63 160) x1631) (= (x63 160) x1432) (= x1216 (x63 160)) (= x169 (x1582 x317 x1631 x772 x1686)) (= (x63 256) x1112) (= (x1655 (+ x464 64)) x1523) (= (x63 192) x1734) (= (x63 256) x1553) (= (x63 352) x401) (= x447 (x63 160)) (= (x1311 x799) x33) (= (x63 224) x1187) (= (x63 288) x417) (= x1394 (x475 0)) (= (= x1198 0) x1393) (= x379 (x63 256)) (= x837 (x1288 x317 x482)) (= (x116 x1676 256) x486) (= (x63 320) x801) (= x221 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401)) (= x945 (x63 288)) (= (x1453 x317 x1432 x1106 x1139 x379) x1321) (= x682 (x1364 x317 x1710 x721 x384 x1714 x417)) (= x482 (x63 160)) (= x772 (x63 192)) (= (x63 224) x1686) (= x799 (x963 64 x550 3)) (= (x63 256) x1714) (= (x63 224) x1139) (= x702 (x63 288)) (= (x466 1329227995784915872903807060280344575 x363) x1198) (= (x63 224) x384)) (or (and x1393 (= (ite x1393 1 0) x1350)) (and (not x1393) (and (= (x466 255 x1628) x822) (= x1350 (ite (= 0 x822) (ite (< x1257 x1198) 1 0) (ite (= x822 0) 1 0))) (= (x1311 x989) x1628) (= (+ 1 x799) x46) (= (x963 64 x18 x46) x989))))) x1077)))))))
(assert (x338 x529))
(assert (= x416 (x1252 (x1582 x416 x254 x371 x446))))
(assert (x338 x1152))
(assert (=> (<= x1349 10000) (= 0 (x1652 x1349))))
(assert (> (x1709 x222 x1531 x817 x171 x1578 x443 x971) 10000))
(assert (= (x1652 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492)) (x1709 x416 x1070 x821 x1366 x1409 x336 x1492)))
(assert (=> (>= 10000 x454) (= (x1652 x454) 0)))
(assert (x598 4294967396))
(assert (= (and (not x100) x65) x556))
(assert (= x738 (x164 (x1453 x1661 x924 x1152 x996 x738))))
(assert (= x1130 (and x408 (not x510))))
(assert (< (x1582 x1151 x884 x967 x1084) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x293))
(assert (< (x963 64 x18 x25) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1175) (= 0 (x1652 x1175))))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (x136 (ite (> x861 18446744073709551615) 1 0)))
(assert (= (x1542 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460)) x1679))
(assert (x338 x1696))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x1252 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894)) x222))
(assert (=> (>= 10000 x1661) (= (x1652 x1661) 0)))
(assert (=> (>= 10000 x170) (= (x1652 x170) 0)))
(assert (not (x598 (x963 64 x18 x928))))
(assert (x338 x389))
(assert (x338 x249))
(assert (=> (<= x323 10000) (= (x1652 x323) 0)))
(assert (< (x1364 x416 x1541 x895 x589 x1634 x1093) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x222 (x1252 (x1709 x222 x1531 x817 x171 x1578 x443 x971))))
(assert (= x454 (x1022 (x1582 x1670 x1476 x1555 x454))))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x338 x864))
(assert (not (x598 (x963 x1670 x1720 x1743))))
(assert (x1513 x275))
(assert (= x1112 (x164 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401))))
(assert (x338 x1139))
(assert (= (x1252 (x963 64 x1147 4)) 64))
(assert (= (or x285 x1428) x264))
(assert (= (x1550 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894)) x856))
(assert (x338 x631))
(assert (=> (<= x1613 10000) (= 0 (x1652 x1613))))
(assert (= x1598 (=> (and (= x222 (x509 (- x197 32))) (= x172 (>= 224 x222)) (= x1162 (x1655 (+ 32 x186))) (= (x1655 (+ x861 x146)) x249) (= x186 (x1655 (+ x146 x861))) (= (x509 (- x1162 x861)) x197)) (and (=> (and (= x960 (x1655 (+ x861 32))) (= x1170 (x1525 x960)) (= (x1655 (+ x861 32)) x9) (= x1531 (x1525 x861)) (= x335 (x1525 x1454)) (= (x1525 x861) x761) (= (x1525 x940) x367) (= x707 (x1364 x222 x761 x134 x1588 x671 x766)) (= x1027 (x1525 x9)) (= (x1525 x805) x342) (= x728 (x1655 (+ x861 64))) (= x726 (x1655 (+ 64 x861))) (= x705 (x1525 x861)) (= x1578 (x1525 x319)) (= x52 (x1655 (+ 32 x861))) (= x940 (x1655 (+ 64 x861))) (= (x1288 x222 x1309) x630) (= x1592 (x1525 x726)) (= (x1655 (+ 32 x861)) x41) (= x170 (x1525 x861)) (= (x1655 (+ x861 128)) x132) (= (x1655 (+ 96 x861)) x319) (= (x1525 x105) x671) (= x1336 (x1525 x861)) (= x343 (x1582 x222 x170 x1170 x367)) (= x1075 (x1655 (+ x861 96))) (= (x1453 x222 x705 x1027 x502 x1329) x1719) (= (x1655 (+ x861 96)) x48) (= (x1655 (+ 96 x861)) x105) (= (x1655 (+ x861 128)) x805) (= x263 (x475 0)) (= (x1525 x861) x856) (= (x1525 x48) x1329) (= x817 (x1525 x41)) (= (x1525 x861) x1309) (= (x1655 (+ 160 x861)) x658) (= (ite (= x222 0) x263 (ite (<= x222 32) x630 (ite (<= x222 64) x1637 (ite (<= x222 96) x343 (ite (<= x222 128) x1719 (ite (<= x222 160) x707 (ite (>= 192 x222) x1270 (ite (<= x222 224) x1012 x1349)))))))) x406) (= (x1655 (+ x861 32)) x204) (= x766 (x1525 x11)) (= x528 (x1655 (+ 32 x861))) (= x1637 (x963 x222 x1336 x430)) (= x1588 (x1525 x208)) (= x894 (x1525 x1275)) (= x208 (x1655 (+ x861 64))) (= x971 (x1525 x658)) (= x1292 (x1655 (+ x861 64))) (= x171 (x1525 x728)) (= (x1655 (+ 128 x861)) x11) (= (x1525 x528) x134) (= (x1655 (+ x861 160)) x1454) (= x1270 (x1709 x222 x1531 x817 x171 x1578 x443 x971)) (= x502 (x1525 x1292)) (= (x530 x222 x856 x358 x1592 x1544 x342 x335 x894) x1012) (= x1544 (x1525 x1075)) (= x1275 (x1655 (+ 192 x861))) (= (<= x197 224) x549) (= x358 (x1525 x204)) (= (x1525 x132) x443) (= x430 (x1525 x52))) (and (=> (and (= (x1525 x1108) x88) (= (x1525 x861) x1504) (= (x1453 x197 x885 x1639 x1058 x1172) x841) (= x1058 (x1525 x912)) (= x1567 (x1655 (+ x861 128))) (= x145 (x1525 x1567)) (= (x1655 (+ x861 64)) x118) (= x558 (x1525 x118)) (= x168 (x1655 (+ x861 96))) (= (x1525 x385) x988) (= x1715 (x1525 x1408)) (= x1408 (x1655 (+ x861 32))) (= x646 (ite (= 0 x197) x20 (ite (>= 32 x197) x1376 (ite (>= 64 x197) x953 (ite (<= x197 96) x1406 (ite (<= x197 128) x841 (ite (<= x197 160) x1297 (ite (<= x197 192) x1730 (ite (<= x197 224) x36 x1411))))))))) (= x635 (x1655 (+ x861 96))) (= x1730 (x1709 x197 x950 x1715 x627 x1659 x88 x1184)) (= (x1525 x45) x1639) (= x1610 (x1525 x333)) (= (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442) x36) (= x1172 (x1525 x168)) (= (x1655 (+ 64 x861)) x333) (= x1693 (x1525 x861)) (= x1406 (x1582 x197 x900 x1188 x206)) (= x667 (x1655 (+ 64 x861))) (= (x1655 (+ 32 x861)) x1318) (= (x1525 x861) x1234) (= x912 (x1655 (+ x861 64))) (= x45 (x1655 (+ x861 32))) (= x1442 (x1525 x67)) (= x345 (x1655 (+ x861 96))) (= (x1525 x861) x537) (= x1682 (x1655 (+ x861 128))) (= (x1525 x961) x976) (= (x1655 (+ x861 64)) x898) (= x900 (x1525 x861)) (= (x110 x646) x74) (= (x1525 x861) x950) (= x1564 (x1655 (+ 96 x861))) (= (x1655 (+ 160 x861)) x215) (= (x1525 x1564) x1114) (= x206 (x1525 x898)) (= (x1525 x612) x1188) (= (x1364 x197 x1504 x988 x1610 x441 x145) x1297) (= (x1655 (+ 192 x861)) x67) (= x1422 (x1525 x1682)) (= (x1525 x861) x885) (= (x475 0) x20) (= (x1655 (+ 32 x861)) x385) (= (x1288 x197 x1234) x1376) (= x1108 (x1655 (+ 128 x861))) (= (x963 x197 x537 x22) x953) (= x1348 (x1655 (+ x861 160))) (= (= x74 115792089237316195423570985008687907853269984665640564039457584007913129639935) x226) (= (x1525 x1318) x22) (= x441 (x1525 x635)) (= x961 (x1655 (+ 32 x861))) (= (x1525 x1348) x290) (= (x1525 x667) x627) (= (x1525 x215) x1184) (= x1659 (x1525 x345)) (= (x1655 (+ x861 32)) x612)) (and (=> x226 x231) (=> (and (and (= (= x1054 115792089237316195423570985008687907853269984665640564039457584007913129639935) x523) (= (x1655 (+ x74 1)) x742)) (not x226)) (and (=> (and (not x523) (and (= (x1655 (+ x1054 1)) x277) (= 0 x1020) (= x1657 x382) (= 1 x746) (= (x1655 (+ x1054 1)) x1657))) x1440) (=> x523 x231))))) x549)) x172))))
(assert (< 10000 (x1288 x1661 x1589)))
(assert (= x1333 (x794 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333))))
(assert (x1368 1329227995784915872903807060280344575))
(assert (x338 x21))
(assert (x338 x219))
(assert (< 10000 (x963 64 x18 x25)))
(assert (x338 x324))
(assert (=> (>= 10000 x342) (= (x1652 x342) 0)))
(assert (x338 x1589))
(assert (x338 x1025))
(assert (= (x1652 18446744073709551038) 0))
(assert (x338 x142))
(assert (> (x963 x197 x537 x22) 10000))
(assert (= (or x1496 x645) x1392))
(assert (x338 x575))
(assert (not (x598 (x1288 x1670 x1214))))
(assert (x338 x452))
(assert (x338 x1292))
(assert (=> (>= 10000 x844) (= 0 (x1652 x844))))
(assert (x338 x1531))
(assert (=> (<= x300 10000) (= 0 (x1652 x300))))
(assert (= (x1550 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333)) x1369))
(assert (x338 x1323))
(assert (not (x598 (x1364 x1670 x1697 x1176 x262 x287 x196))))
(assert (= (x1550 (x1288 x423 x32)) x32))
(assert (x338 x366))
(assert (=> (>= 10000 x1314) (= (x1652 x1314) 0)))
(assert (x106 256))
(assert (= (x1652 1461501637330902918203684832716283019655932542975) 0))
(assert (x338 x528))
(assert (=> (<= x1339 10000) (= 0 (x1652 x1339))))
(assert (< (x963 64 x1546 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x616))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 x1151 x323 x282)))
(assert (x338 x1172))
(assert (x338 x885))
(assert (x338 x1699))
(assert (x338 x694))
(assert (x338 x1705))
(assert (= x57 (and x13 x749)))
(assert (=> (>= 10000 x1203) (= 0 (x1652 x1203))))
(assert (= (and (not x495) x1462) x629))
(assert (= (x1252 (x963 x197 x537 x22)) x197))
(assert (x307 x852 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x691 (=> (and (= x382 x1054) (= x634 x1020) (= x746 0)) x1440)))
(assert (x338 x588))
(assert (x338 x439))
(assert (x338 x388))
(assert (x338 x275))
(assert (x460 x852))
(assert (> (x963 64 x1147 4) 10000))
(assert (x338 x204))
(assert (x338 x1049))
(assert (< 10000 (x1582 x197 x900 x1188 x206)))
(assert (x338 x5))
(assert (x338 x1))
(assert (x338 x890))
(assert (x338 x1010))
(assert (x338 x1121))
(assert (x338 x1733))
(assert (= x285 (and x1380 x1242)))
(assert (x338 x1365))
(assert (=> (>= 10000 x704) (= 0 (x1652 x704))))
(assert (x307 x1069 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x693))
(assert (x338 x1516))
(assert (x338 x1468))
(assert (=> (<= x862 10000) (= 0 (x1652 x862))))
(assert (x338 x1124))
(assert (x338 x653))
(assert (=> (<= x1172 10000) (= 0 (x1652 x1172))))
(assert (x338 x746))
(assert (< 10000 (x1288 x1151 x485)))
(assert (x338 x398))
(assert (=> (>= 10000 x895) (= (x1652 x895) 0)))
(assert (not (x598 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460))))
(assert (=> (<= x1695 10000) (= 0 (x1652 x1695))))
(assert (x598 57896044618658097711785492504343953926634992332820282019728792003956564819807))
(assert (x338 x53))
(assert (< (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x2))
(assert (= (x1652 18446744073709551615) 0))
(assert (< 10000 (x963 x1661 x489 x95)))
(assert (=> (>= 10000 x1686) (= 0 (x1652 x1686))))
(assert (=> (<= x1409 10000) (= 0 (x1652 x1409))))
(assert (= (x164 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)) x54))
(assert (=> (>= 10000 x641) (= (x1652 x641) 0)))
(assert (x307 x745 256))
(assert (= (and x831 (not x418)) x1276))
(assert (x338 x149))
(assert (x338 x1495))
(assert (=> (>= 10000 x335) (= (x1652 x335) 0)))
(assert (x307 x1069 256))
(assert (= (x164 (x1364 x1151 x389 x608 x1575 x217 x1314)) x217))
(assert (=> (<= x1617 10000) (= (x1652 x1617) 0)))
(assert (not (x598 (x1364 x543 x785 x1620 x1508 x561 x1617))))
(assert (x338 x276))
(assert (= x502 (x1022 (x1453 x222 x705 x1027 x502 x1329))))
(assert (x338 x232))
(assert (x338 x1336))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1582 x543 x1269 x1028 x936)))
(assert (=> (<= x272 10000) (= 0 (x1652 x272))))
(assert (x338 x1583))
(assert (x338 x1514))
(assert (= (x1542 (x1453 x222 x705 x1027 x502 x1329)) x1027))
(assert (x338 x1427))
(assert (x941 x585))
(assert (x338 x1723))
(assert (= (x1453 x416 x394 x1528 x1738 x1055) (x1652 (x1453 x416 x394 x1528 x1738 x1055))))
(assert (= (x1550 (x1453 x423 x281 x1444 x692 x844)) x281))
(assert (x338 x1158))
(assert (= (x1542 (x963 64 x18 x25)) x25))
(assert (x338 x1451))
(assert (x338 x1729))
(assert (=> (>= 10000 x964) (= 0 (x1652 x964))))
(assert (x338 x1741))
(assert (x307 x909 32))
(assert (not (x598 (x1364 x1151 x389 x608 x1575 x217 x1314))))
(assert (x338 x201))
(assert (=> (>= 10000 x1529) (= (x1652 x1529) 0)))
(assert (= (x1252 (x1709 x197 x950 x1715 x627 x1659 x88 x1184)) x197))
(assert (x338 x1488))
(assert (x338 x760))
(assert (x338 x158))
(assert (x307 x1656 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1652 (x1453 x317 x1432 x1106 x1139 x379)) (x1453 x317 x1432 x1106 x1139 x379)))
(assert (x307 x297 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1457 x1020))
(assert (= x1290 (and x1718 x1059)))
(assert (= x1670 (x1252 (x1364 x1670 x1697 x1176 x262 x287 x196))))
(assert (=> (>= 10000 x441) (= (x1652 x441) 0)))
(assert (= (x164 (x1453 x1670 x421 x779 x109 x1695)) x1695))
(assert (=> (>= 10000 x489) (= (x1652 x489) 0)))
(assert (x338 x1405))
(assert (x338 x754))
(assert (= (x1542 (x1582 x1151 x884 x967 x1084)) x967))
(assert (= (x1550 (x1453 x1151 x1704 x1536 x753 x1233)) x1704))
(assert (x338 x884))
(assert (= (x1252 (x1582 x197 x900 x1188 x206)) x197))
(assert (x338 x202))
(assert (= x1544 (x164 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894))))
(assert (x338 x499))
(assert (x338 x1752))
(assert (x338 x793))
(assert (=> (<= x893 10000) (= (x1652 x893) 0)))
(assert (x338 x1590))
(assert (> (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401) 10000))
(assert (x338 x1287))
(assert (=> (<= x12 10000) (= (x1652 x12) 0)))
(assert (=> (>= 10000 x1733) (= (x1652 x1733) 0)))
(assert (= (x1453 x1151 x1704 x1536 x753 x1233) (x1652 (x1453 x1151 x1704 x1536 x753 x1233))))
(assert (x338 x1528))
(assert (= (x1542 (x963 64 x18 x928)) x928))
(assert (x338 x161))
(assert (x338 x1743))
(assert (< (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x428))
(assert (x307 x452 32))
(assert (=> (>= 10000 x401) (= (x1652 x401) 0)))
(assert (x338 x243))
(assert (= x781 (and x1687 (not x880))))
(assert (x338 x1523))
(assert (= (x1550 (x963 x317 x447 x8)) x447))
(assert (x1513 x585))
(assert (x338 x248))
(assert (x941 x122))
(assert (x338 x846))
(assert (x338 x896))
(assert (x338 x303))
(assert (=> (>= 10000 x138) (= 0 (x1652 x138))))
(assert (=> (>= 10000 x724) (= (x1652 x724) 0)))
(assert (= (x1550 (x1453 x197 x885 x1639 x1058 x1172)) x885))
(assert (=> (<= x1329 10000) (= (x1652 x1329) 0)))
(assert (x460 x745))
(assert (=> (<= x367 10000) (= 0 (x1652 x367))))
(assert (x338 x1389))
(assert (= (x1652 4294967364) 0))
(assert (x338 x894))
(assert (= x1631 (x1550 (x1582 x317 x1631 x772 x1686))))
(assert (=> (<= x761 10000) (= 0 (x1652 x761))))
(assert (= x233 (or x579 x1272 x781 x1062 x1254)))
(assert (=> (<= x1188 10000) (= 0 (x1652 x1188))))
(assert (not x917))
(assert (= (x1453 x423 x281 x1444 x692 x844) (x1652 (x1453 x423 x281 x1444 x692 x844))))
(assert (=> (<= x1082 10000) (= 0 (x1652 x1082))))
(assert (x338 x101))
(assert (x941 x758))
(assert (x338 x1013))
(assert (= 0 (x1652 4294967396)))
(assert (x338 x788))
(assert (x338 x1349))
(assert (x307 x1425 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x217) (= 0 (x1652 x217))))
(assert (=> (>= 10000 x972) (= 0 (x1652 x972))))
(assert (x338 x1697))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1364 x423 x311 x1126 x256 x754 x1472)))
(assert (=> (>= 10000 x1304) (= (x1652 x1304) 0)))
(assert (=> (<= x900 10000) (= (x1652 x900) 0)))
(assert (= (x1652 (x1709 x1670 x75 x1727 x1266 x641 x607 x964)) (x1709 x1670 x75 x1727 x1266 x641 x607 x964)))
(assert (x338 x224))
(assert (x338 x1118))
(assert (x338 x721))
(assert (x338 x1467))
(assert (x598 2689206675))
(assert (= 0 (x1652 18446744073709551166)))
(assert (x338 x937))
(assert (x338 x334))
(assert (x338 x780))
(assert (=> (<= x317 10000) (= (x1652 x317) 0)))
(assert (x307 x1013 1329227995784915872903807060280344576))
(assert (x338 x628))
(assert (x338 x89))
(assert (x338 x1641))
(assert (= x1304 (x1377 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460))))
(assert (=> (>= 10000 x1528) (= (x1652 x1528) 0)))
(assert (=> (>= 10000 x608) (= (x1652 x608) 0)))
(assert (x338 x465))
(assert (x338 x1627))
(assert (=> (<= x95 10000) (= (x1652 x95) 0)))
(assert (x338 x802))
(assert (x824 x1565))
(assert (= x1687 (and x1351 x1201)))
(assert (= x336 (x1377 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492))))
(assert (=> (>= 10000 x1714) (= 0 (x1652 x1714))))
(assert (x338 x712))
(assert (x338 x431))
(assert (x338 x607))
(assert (x338 x1303))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 64 x1199 2)))
(assert (not (x598 (x963 64 x604 x638))))
(assert (x338 x50))
(assert (x598 1461501637330902918203684832716283019655932542975))
(assert (x338 x818))
(assert (not (x598 (x1288 x423 x32))))
(assert (= (x1022 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)) x1713))
(assert (x307 x486 1329227995784915872903807060280344576))
(assert (= (x1542 (x1364 x1670 x1697 x1176 x262 x287 x196)) x1176))
(assert (= (x1022 (x1364 x543 x785 x1620 x1508 x561 x1617)) x1508))
(assert (x338 x1607))
(assert (x338 x1647))
(assert (x338 x1430))
(assert (=> (>= 10000 x884) (= (x1652 x884) 0)))
(assert (x338 x1166))
(assert (< (x1364 x1151 x389 x608 x1575 x217 x1314) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x941 x1195))
(assert (= x389 (x1550 (x1364 x1151 x389 x608 x1575 x217 x1314))))
(assert (=> (<= x32 10000) (= 0 (x1652 x32))))
(assert (=> (>= 10000 x312) (= (x1652 x312) 0)))
(assert (x338 x165))
(assert (x941 x978))
(assert (= x1697 (x1550 (x1364 x1670 x1697 x1176 x262 x287 x196))))
(assert (x1513 x498))
(assert (x338 x925))
(assert (x338 x1441))
(assert (x338 x1504))
(assert (x338 x842))
(assert (< (x530 x222 x856 x358 x1592 x1544 x342 x335 x894) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1252 (x1364 x423 x311 x1126 x256 x754 x1472)) x423))
(assert (x338 x677))
(assert (x338 x278))
(assert (x338 x274))
(assert (x338 x852))
(assert (x338 x933))
(assert (x338 x122))
(assert (x338 x940))
(assert (x338 x690))
(assert (x338 x893))
(assert (x1513 x745))
(assert (x338 x272))
(assert (x338 x432))
(assert (= x1429 (x1022 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653))))
(assert (not (x598 (x963 x1151 x323 x282))))
(assert (x338 x1179))
(assert (= (x1652 (x1582 x1661 x681 x1437 x241)) (x1582 x1661 x681 x1437 x241)))
(assert (= (x1252 (x1453 x197 x885 x1639 x1058 x1172)) x197))
(assert (not (x598 (x1288 x317 x482))))
(assert (x598 1329227995784915872903807060280344575))
(assert (x338 x578))
(assert (=> (>= 10000 x653) (= 0 (x1652 x653))))
(assert (x338 x490))
(assert (x338 x1052))
(assert (= x1036 (and x1539 (not x1410))))
(assert (x338 x1562))
(assert (=> (<= x751 10000) (= (x1652 x751) 0)))
(assert (x338 x1284))
(assert (=> (<= x702 10000) (= (x1652 x702) 0)))
(assert (x307 x745 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1450 (and x1260 x151)))
(assert (=> (<= x856 10000) (= 0 (x1652 x856))))
(assert (> (x1453 x543 x5 x12 x432 x1327) 10000))
(assert (not (x598 (x1364 x423 x311 x1126 x256 x754 x1472))))
(assert (= (x1542 (x1364 x416 x1541 x895 x589 x1634 x1093)) x895))
(assert (x307 x1656 256))
(assert (=> (>= 10000 x379) (= 0 (x1652 x379))))
(assert (x338 x877))
(assert (x338 x54))
(assert (=> (<= x384 10000) (= 0 (x1652 x384))))
(assert (x338 x916))
(assert (= (x1453 x197 x885 x1639 x1058 x1172) (x1652 (x1453 x197 x885 x1639 x1058 x1172))))
(assert (= (x1542 (x1582 x1661 x681 x1437 x241)) x1437))
(assert (x1513 x1032))
(assert (x338 x1263))
(assert (x338 x1484))
(assert (=> (>= 10000 x589) (= (x1652 x589) 0)))
(assert (x338 x458))
(assert (x338 x554))
(assert (x338 x1051))
(assert (x338 x585))
(assert (not (x598 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442))))
(assert (x106 x33))
(assert (x338 x372))
(assert (x338 x1553))
(assert (x338 x1144))
(assert (x338 x1361))
(assert (x338 x559))
(assert (= x1427 (x794 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427))))
(assert (x1368 x280))
(assert (= x482 (x1550 (x1288 x317 x482))))
(assert (=> (>= 10000 x1429) (= (x1652 x1429) 0)))
(assert (x338 x1289))
(assert (not (x598 (x963 64 x893 x82))))
(assert (= x868 (x1022 (x1709 x543 x1212 x357 x868 x722 x1573 x312))))
(assert (= x574 (=> (= x382 x654) x1452)))
(assert (x338 x134))
(assert (= x1670 (x1252 (x963 x1670 x1720 x1743))))
(assert (x338 x562))
(assert (x1513 x405))
(assert (not (x598 (x963 64 x18 x25))))
(assert (x338 x772))
(assert (< (x1582 x423 x300 x1484 x2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x489))
(assert (x1057 x1676 256))
(assert (= (x1377 (x1709 x222 x1531 x817 x171 x1578 x443 x971)) x443))
(assert (< 10000 (x1453 x1661 x924 x1152 x996 x738)))
(assert (=> (>= 10000 x921) (= (x1652 x921) 0)))
(assert (x338 x1602))
(assert (= x1395 (x1550 (x1364 x1661 x1395 x653 x1733 x90 x704))))
(assert (=> (>= 10000 x1442) (= (x1652 x1442) 0)))
(assert (=> (<= x262 10000) (= (x1652 x262) 0)))
(assert (x338 x784))
(assert (=> (>= 10000 x1484) (= (x1652 x1484) 0)))
(assert (= (x1550 (x1453 x1661 x924 x1152 x996 x738)) x924))
(assert (x338 x1335))
(assert (= (x1022 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333)) x1229))
(assert (x338 x1385))
(assert (= x1151 (x1252 (x1582 x1151 x884 x967 x1084))))
(assert (x307 x978 32))
(assert (= x550 (x1550 (x963 64 x550 3))))
(assert (= (x1550 (x1582 x197 x900 x1188 x206)) x900))
(assert (= (x1252 (x1453 x222 x705 x1027 x502 x1329)) x222))
(assert (x338 x477))
(assert (x1513 x1628))
(assert (x338 x353))
(assert (=> (<= x1336 10000) (= 0 (x1652 x1336))))
(assert (x338 x1735))
(assert (= x844 (x164 (x1453 x423 x281 x1444 x692 x844))))
(assert (=> (>= 10000 x753) (= (x1652 x753) 0)))
(assert (=> (<= x206 10000) (= 0 (x1652 x206))))
(assert (x572 x486))
(assert (x338 x681))
(assert (x338 x664))
(assert (= x1426 (=> (and (= x94 x804) (= x1526 false) (= x94 true) (= true x729) (= false x273)) x504)))
(assert (x338 x486))
(assert (= (and x736 x1000) x13))
(assert (x338 x734))
(assert (x338 x223))
(assert (x338 x186))
(assert (= (x1296 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653)) x1653))
(assert (x338 x147))
(assert (= x543 (x1252 (x1709 x543 x1212 x357 x868 x722 x1573 x312))))
(assert (= (or x1204 x456) x1047))
(assert (= x1620 (x1542 (x1364 x543 x785 x1620 x1508 x561 x1617))))
(assert (= (x1652 4294967390) 0))
(assert (< 10000 (x1582 x317 x1631 x772 x1686)))
(assert (=> (>= 10000 x1659) (= 0 (x1652 x1659))))
(assert (x338 x983))
(assert (x1368 x122))
(assert (x338 x1632))
(assert (x338 x1656))
(assert (= (x1252 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653)) x1151))
(assert (not (x598 (x1709 x197 x950 x1715 x627 x1659 x88 x1184))))
(assert (x338 x1108))
(assert (x338 x651))
(assert (= (x794 (x1709 x197 x950 x1715 x627 x1659 x88 x1184)) x1184))
(assert (= x740 (x1550 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990))))
(assert (x338 x1226))
(assert (= (x1252 (x1582 x543 x1269 x1028 x936)) x543))
(assert (=> (<= x740 10000) (= 0 (x1652 x740))))
(assert (x1368 x413))
(assert (x307 x1565 256))
(assert (= (x1542 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529)) x1051))
(assert (x338 x503))
(assert (x338 x1653))
(assert (< 10000 (x1364 x317 x1710 x721 x384 x1714 x417)))
(assert (= (x1709 x222 x1531 x817 x171 x1578 x443 x971) (x1652 (x1709 x222 x1531 x817 x171 x1578 x443 x971))))
(assert (= (x1550 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529)) x862))
(assert (x307 x901 32))
(assert (not (x598 (x1453 x1670 x421 x779 x109 x1695))))
(assert (=> (>= 10000 x694) (= 0 (x1652 x694))))
(assert (x1368 x405))
(assert (x1513 x901))
(assert (x338 x247))
(assert (x338 x807))
(assert (=> (>= 10000 x1115) (= 0 (x1652 x1115))))
(assert (x307 x187 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460)))
(assert (= (x1652 18446744073709551230) 0))
(assert (x338 x1622))
(assert (x338 x1661))
(assert (=> (<= x772 10000) (= (x1652 x772) 0)))
(assert (= 0 (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (=> (>= 10000 x988) (= (x1652 x988) 0)))
(assert (= (x1652 (x963 64 x18 x25)) (x963 64 x18 x25)))
(assert (x338 x1291))
(assert (= 0 (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639871)))
(assert (x325 256 x539))
(assert (x338 x1030))
(assert (=> (>= 10000 x1679) (= 0 (x1652 x1679))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1453 x1151 x1704 x1536 x753 x1233)))
(assert (= (x1652 (x1288 x222 x1309)) (x1288 x222 x1309)))
(assert (= (x1550 (x1364 x317 x1710 x721 x384 x1714 x417)) x1710))
(assert (x338 x568))
(assert (= x1070 (x1550 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492))))
(assert (> (x1453 x317 x1432 x1106 x1139 x379) 10000))
(assert (x338 x1074))
(assert (= (x1542 (x1582 x423 x300 x1484 x2)) x1484))
(assert (x338 x1505))
(assert (= x1738 (x1022 (x1453 x416 x394 x1528 x1738 x1055))))
(assert (x338 x895))
(assert (=> (>= 10000 x440) (= 0 (x1652 x440))))
(assert (x338 x744))
(assert (not (x598 (x1453 x1151 x1704 x1536 x753 x1233))))
(assert (x1368 x452))
(assert (=> (<= x1444 10000) (= (x1652 x1444) 0)))
(assert (x338 x1104))
(assert (> (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653) 10000))
(assert (x338 x86))
(assert (x338 x1666))
(assert (= x1219 (or x123 x1276 x1037 x629 x946)))
(assert (=> (<= x1432 10000) (= (x1652 x1432) 0)))
(assert (x338 x378))
(assert (< (x1288 x317 x482) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x985))
(assert (x338 x603))
(assert (x338 x1064))
(assert (= (x1542 (x1364 x317 x1710 x721 x384 x1714 x417)) x721))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1582 x317 x1631 x772 x1686)))
(assert (> (x1582 x423 x300 x1484 x2) 10000))
(assert (x338 x609))
(assert (x325 32 x120))
(assert (x338 x661))
(assert (x338 x618))
(assert (= (x963 64 x512 4) (x1652 (x963 64 x512 4))))
(assert (x307 x628 32))
(assert (=> (>= 10000 x766) (= (x1652 x766) 0)))
(assert (x338 x1456))
(assert (x338 x1692))
(assert (=> (<= x1216 10000) (= (x1652 x1216) 0)))
(assert (x338 x1712))
(assert (x338 x52))
(assert (x338 x873))
(assert (x307 x104 1461501637330902918203684832716283019655932542976))
(assert (= (x794 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)) x481))
(assert (=> (<= x1088 10000) (= (x1652 x1088) 0)))
(assert (=> (<= x1202 10000) (= (x1652 x1202) 0)))
(assert (x598 4294967556))
(assert (x338 x1435))
(assert (x338 x686))
(assert (x338 x1014))
(assert (x338 x978))
(assert (x338 x735))
(assert (x954 (ite (< 18446744073709551615 x639) 1 0) (ite (> 128 x639) 1 0)))
(assert (x338 x185))
(assert (= (x1296 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593)) x1593))
(assert (=> (>= 10000 x281) (= 0 (x1652 x281))))
(assert (x338 x801))
(assert (x338 x1578))
(assert (x338 x198))
(assert (= (x1550 (x963 x222 x1336 x430)) x1336))
(assert (x338 x1285))
(assert (= (x1652 1329227995784915872903807060280344575) 0))
(assert (= (or x977 x72) x507))
(assert (x338 x1148))
(assert (= true x1242))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639871))
(assert (x338 x723))
(assert (x338 x1688))
(assert (x338 x961))
(assert (not (x598 (x1364 x197 x1504 x988 x1610 x441 x145))))
(assert (= x72 (or x888 x741)))
(assert (x338 x704))
(assert (x338 x1138))
(assert (< 10000 (x1288 x423 x32)))
(assert (= (or (and x383 x876) (and x1219 x1102)) x809))
(assert (x338 x1609))
(assert (x1368 x275))
(assert (x338 x1131))
(assert (x338 x208))
(assert (x136 (ite (< x861 128) 1 0)))
(assert (= x69 (and x1173 x1004)))
(assert (= (and x666 x516) x456))
(assert (= (=> (= x308 x559) x23) x255))
(assert (= x512 (x1550 (x963 64 x512 4))))
(assert (= (x1252 (x1709 x423 x258 x696 x1529 x1088 x247 x1082)) x423))
(assert (x338 x59))
(assert (x1457 x1194))
(assert (=> (>= 10000 x561) (= 0 (x1652 x561))))
(assert (x338 x701))
(assert (= x977 (and x548 x425)))
(assert (x338 x1058))
(assert (x338 x1165))
(assert (= (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401) (x1652 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401))))
(assert (x338 x555))
(assert (x338 x108))
(assert (= (x164 (x1709 x423 x258 x696 x1529 x1088 x247 x1082)) x1088))
(assert (x338 x1492))
(assert (= x1233 (x164 (x1453 x1151 x1704 x1536 x753 x1233))))
(assert (= x1673 (and x825 x1490)))
(assert (x338 x1222))
(assert (x338 x762))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (= x1543 (x164 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333))))
(assert (x338 x543))
(assert (x1368 1461501637330902918203684832716283019655932542975))
(assert (x338 x1350))
(assert (x338 x605))
(assert (=> (<= x340 10000) (= (x1652 x340) 0)))
(assert (x1368 x1319))
(assert (x338 x1745))
(assert (= (x1550 (x963 x1661 x489 x95)) x489))
(assert (=> (<= x1139 10000) (= 0 (x1652 x1139))))
(assert (x941 x413))
(assert (=> (<= x1229 10000) (= 0 (x1652 x1229))))
(assert (x338 x1443))
(assert (= (x1652 4294967295) 0))
(assert (=> (<= x1578 10000) (= 0 (x1652 x1578))))
(assert (=> (<= x1653 10000) (= (x1652 x1653) 0)))
(assert (= x1489 (=> (and x1537 (<= x852 2) (= x1434 x144) (= (+ 1 x518) x144) (= x51 (x1279 x855)) (= x855 (x963 64 x512 4)) (<= x1076 2) (= (= x1621 x852) x991) (= (x1094 x512) x1621) (>= 2 x1621) (= (= x1076 x51) x1537) (= (x1279 x855) x852) (= (x1094 x512) x1076) (= x518 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639680 x852)) (<= x51 2) x991) x574)))
(assert (x338 x1433))
(assert (=> (>= 10000 x1643) (= 0 (x1652 x1643))))
(assert (x338 x12))
(assert (=> (<= x1169 10000) (= 0 (x1652 x1169))))
(assert (= x766 (x1377 (x1364 x222 x761 x134 x1588 x671 x766))))
(assert (=> (<= x1620 10000) (= 0 (x1652 x1620))))
(assert (x307 x1195 32))
(assert (x338 x785))
(assert (= x65 (and x973 x374)))
(assert (x136 (ite (> x639 18446744073709551615) 1 0)))
(assert (< (x1364 x197 x1504 x988 x1610 x441 x145) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x281))
(assert (x338 x1734))
(assert (x338 x1425))
(assert (= (x164 (x1364 x543 x785 x1620 x1508 x561 x1617)) x561))
(assert (x598 3983038810))
(assert (= (x1652 (x1288 x197 x1234)) (x1288 x197 x1234)))
(assert (x338 x1247))
(assert (x338 x1411))
(assert (= (x1252 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)) x1661))
(assert (=> (<= x1369 10000) (= (x1652 x1369) 0)))
(assert (=> (<= x1543 10000) (= 0 (x1652 x1543))))
(assert (x338 x1008))
(assert (=> (>= 10000 x1592) (= (x1652 x1592) 0)))
(assert (x338 x1294))
(assert (= (x1652 57896044618658097711785492504343953926634992332820282019728792003956564819807) 0))
(assert (x338 x1568))
(assert (x338 x480))
(assert (= (x1652 (x1453 x543 x5 x12 x432 x1327)) (x1453 x543 x5 x12 x432 x1327)))
(assert (x1513 x1627))
(assert (=> (>= 10000 x1070) (= (x1652 x1070) 0)))
(assert (x338 x545))
(assert (= 0 (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639870)))
(assert (=> (>= 10000 x956) (= 0 (x1652 x956))))
(assert (= (x1550 (x1453 x222 x705 x1027 x502 x1329)) x705))
(assert (= (x1550 (x1288 x1151 x485)) x485))
(assert (x338 x1355))
(assert (= (x1542 (x963 x1670 x1720 x1743)) x1743))
(assert (x338 x979))
(assert (= (and (not x876) x383) x1218))
(assert (=> (>= 10000 x1601) (= 0 (x1652 x1601))))
(assert (= (and x233 (not x226)) x392))
(assert (not (x598 (x1709 x1151 x1660 x921 x769 x368 x1702 x624))))
(assert (= (x1022 (x1582 x416 x254 x371 x446)) x446))
(assert (x338 x437))
(assert (= (x1542 (x1582 x317 x1631 x772 x1686)) x772))
(assert (x307 x1546 1461501637330902918203684832716283019655932542976))
(assert (= 0 (x1652 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x338 x635))
(assert (< 10000 (x963 64 x1339 2)))
(assert (=> (<= x1051 10000) (= 0 (x1652 x1051))))
(assert (x338 x717))
(assert (= (x1377 (x1364 x1151 x389 x608 x1575 x217 x1314)) x1314))
(assert (x1368 x1032))
(assert (x338 x492))
(assert (= x543 (x1252 (x1453 x543 x5 x12 x432 x1327))))
(assert (=> (>= 10000 x423) (= (x1652 x423) 0)))
(assert (x338 x990))
(assert (x338 x447))
(assert (x338 x494))
(assert (< 10000 (x963 x1670 x1720 x1743)))
(assert (= x18 (x1550 (x963 64 x18 x46))))
(assert (= (x1252 (x1288 x222 x1309)) x222))
(assert (= (x1377 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529)) x1133))
(assert (= (or x507 x798) x790))
(assert (< (x1709 x197 x950 x1715 x627 x1659 x88 x1184) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x1652 18446744073709551229)))
(assert (x338 x1258))
(assert (x598 9504399908715365481695404106006497936221727462084701917660793593865516875776))
(assert (= (x1022 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529)) x956))
(assert (x338 x1243))
(assert (= (x1652 x1221) (x1652 (+ x1221 1))))
(assert (= x1114 (x164 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442))))
(assert (x1595 x77))
(assert (= x678 (and x78 (not x675))))
(assert (x338 x298))
(assert (=> (<= x256 10000) (= (x1652 x256) 0)))
(assert (x1368 x486))
(assert (x338 x222))
(assert (x338 x1478))
(assert (x338 x1717))
(assert (=> (>= 10000 x1631) (= 0 (x1652 x1631))))
(assert (=> (<= x134 10000) (= 0 (x1652 x134))))
(assert (x1513 x925))
(assert (x338 x1281))
(assert (not (x598 (x1709 x1670 x75 x1727 x1266 x641 x607 x964))))
(assert (x338 x299))
(assert (x338 x848))
(assert (=> (<= x868 10000) (= 0 (x1652 x868))))
(assert (not (x598 (x1288 x1151 x485))))
(assert (not (x598 (x1288 x1661 x1589))))
(assert (< (x963 x222 x1336 x430) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1709 x423 x258 x696 x1529 x1088 x247 x1082) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x936) (= 0 (x1652 x936))))
(assert (x338 x1532))
(assert (x338 x1592))
(assert (x338 x1366))
(assert (x598 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x338 x1481))
(assert (=> (>= 10000 x1166) (= 0 (x1652 x1166))))
(assert (x1513 x452))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1582 x222 x170 x1170 x367)))
(assert (= x347 (and x1587 (not x620))))
(assert (x338 x742))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639874))
(assert (x307 x1559 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x1252 (x963 64 x1339 2))))
(assert (=> (<= x503 10000) (= (x1652 x503) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 64 x604 x638)))
(assert (not (x598 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990))))
(assert (x338 x1199))
(assert (= 0 (x1652 3983038810)))
(assert (x307 x901 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1629))
(assert (= (x1252 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492)) x416))
(assert (= 0 (x1652 18446744073709551294)))
(assert (x338 x1619))
(assert (x338 x733))
(assert (x338 x1331))
(assert (=> (<= x1427 10000) (= 0 (x1652 x1427))))
(assert (x338 x1072))
(assert (= (x1652 (x963 64 x18 x46)) (x963 64 x18 x46)))
(assert (x338 x1398))
(assert (< 10000 (x1288 x317 x482)))
(assert (> (x1288 x1670 x1214) 10000))
(assert (x338 x915))
(assert (x338 x196))
(assert (= (and (not x410) x403) x711))
(assert (= x103 (or x1669 x514 x227 x1290 x216 x1006 (and (not x374) x973) x1079 x918)))
(assert (x338 x1140))
(assert (x338 x1032))
(assert (= x1661 (x1252 (x963 x1661 x489 x95))))
(assert (x338 x1115))
(assert (x307 x122 32))
(assert (x598 18446744073709551229))
(assert (=> (>= 10000 x421) (= 0 (x1652 x421))))
(assert (x338 x624))
(assert (x338 x1470))
(assert (= x290 (x794 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442))))
(assert (x1368 x498))
(assert (= x231 (=> (and (= 36 x634) (= x1120 false) (= true x424)) x691)))
(assert (x338 x1214))
(assert (= x1172 (x164 (x1453 x197 x885 x1639 x1058 x1172))))
(assert (x338 x34))
(assert (not (x598 (x1709 x222 x1531 x817 x171 x1578 x443 x971))))
(assert (x338 x1682))
(assert (= (x1252 (x1453 x1670 x421 x779 x109 x1695)) x1670))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1709 x1670 x75 x1727 x1266 x641 x607 x964)))
(assert (x307 x452 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x803 (=> (and (= x1645 true) (= x184 false)) x1603)))
(assert (> (x963 64 x550 3) 10000))
(assert (x338 x1499))
(assert (x307 x1032 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1252 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427)) x317))
(assert (> (x1709 x1670 x75 x1727 x1266 x641 x607 x964) 10000))
(assert (=> (>= 10000 x1366) (= 0 (x1652 x1366))))
(assert (> (x1364 x1670 x1697 x1176 x262 x287 x196) 10000))
(assert (x824 x498))
(assert (=> (>= 10000 x1670) (= (x1652 x1670) 0)))
(assert (not (x598 (x1582 x1661 x681 x1437 x241))))
(assert (x338 x1383))
(assert (= (and x44 x774) x1254))
(assert (= (x1652 (x1582 x1151 x884 x967 x1084)) (x1582 x1151 x884 x967 x1084)))
(assert (x325 32 (- x152 1)))
(assert (= (x963 x543 x1063 x751) (x1652 (x963 x543 x1063 x751))))
(assert (= x317 (x1252 (x1288 x317 x482))))
(assert (x338 x771))
(assert (x338 x280))
(assert (= x197 (x1252 (x1288 x197 x1234))))
(assert (=> (>= 10000 x1422) (= 0 (x1652 x1422))))
(assert (x338 x1556))
(assert (x338 x945))
(assert (x338 x1338))
(assert (= x1440 (=> (and (= x339 (= x746 0)) (or (not x339) x339)) x1374)))
(assert (not (x598 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1453 x222 x705 x1027 x502 x1329)))
(assert (=> (<= x1593 10000) (= (x1652 x1593) 0)))
(assert (x338 x692))
(assert (x1513 x104))
(assert (= (x1550 (x1582 x1670 x1476 x1555 x454)) x1476))
(assert (x338 x639))
(assert (x338 x291))
(assert (= (x1582 x317 x1631 x772 x1686) (x1652 (x1582 x317 x1631 x772 x1686))))
(assert (x338 x380))
(assert (= x2 (x1022 (x1582 x423 x300 x1484 x2))))
(assert (x338 x1507))
(assert (=> (<= x1437 10000) (= (x1652 x1437) 0)))
(assert (x338 x330))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 x543 x1063 x751)))
(assert (x338 x1065))
(assert (> (x963 x416 x686 x1355) 10000))
(assert (= x1151 (x1252 (x1288 x1151 x485))))
(assert (x1595 (- x77 1)))
(assert (x338 x931))
(assert (= (x1550 (x963 x1151 x323 x282)) x323))
(assert (> (x1364 x416 x1541 x895 x589 x1634 x1093) 10000))
(assert (= x92 (and x1047 (not x662))))
(assert (x338 x1216))
(assert (= x145 (x1377 (x1364 x197 x1504 x988 x1610 x441 x145))))
(assert (x338 x1353))
(assert (x338 x976))
(assert (not (x598 (x1582 x1670 x1476 x1555 x454))))
(assert (x338 x570))
(assert (= x1603 (=> (= 0 x1647) x283)))
(assert (x1513 1329227995784915872903807060280344576))
(assert (= (x1542 (x1709 x197 x950 x1715 x627 x1659 x88 x1184)) x1715))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1288 x222 x1309)))
(assert (=> (>= 10000 x212) (= (x1652 x212) 0)))
(assert (x307 x137 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1075))
(assert (x338 x170))
(assert (= x532 (or x471 x1650)))
(assert (x338 x874))
(assert (=> (<= x1093 10000) (= (x1652 x1093) 0)))
(assert (x307 x978 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x821 (x1542 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492))))
(assert (not (x598 (x963 64 x1339 2))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1288 x1151 x485)))
(assert (< (x1288 x1670 x1214) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1288 x543 x1607)))
(assert (x338 x861))
(assert (x338 x18))
(assert (x338 x168))
(assert (=> (>= 10000 x502) (= (x1652 x502) 0)))
(assert (x338 x1437))
(assert (< 10000 (x1453 x423 x281 x1444 x692 x844)))
(assert (x136 (ite (> 128 x639) 1 0)))
(assert (=> (<= x389 10000) (= 0 (x1652 x389))))
(assert (= (x1709 x423 x258 x696 x1529 x1088 x247 x1082) (x1652 (x1709 x423 x258 x696 x1529 x1088 x247 x1082))))
(assert (x338 x636))
(assert (= (x164 (x1364 x317 x1710 x721 x384 x1714 x417)) x1714))
(assert (x338 x544))
(assert (< (x1453 x197 x885 x1639 x1058 x1172) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1041))
(assert (x338 x112))
(assert (x338 x515))
(assert (x598 18446744073709551230))
(assert (=> (<= x616 10000) (= (x1652 x616) 0)))
(assert (= (x1022 (x1453 x423 x281 x1444 x692 x844)) x692))
(assert (= (or (and (not x749) x13) (and (not x796) x57)) x918))
(assert (=> (<= x1187 10000) (= (x1652 x1187) 0)))
(assert (=> (<= x996 10000) (= 0 (x1652 x996))))
(assert (= (x1550 (x1709 x423 x258 x696 x1529 x1088 x247 x1082)) x258))
(assert (x338 x1458))
(assert (=> (>= 10000 x432) (= 0 (x1652 x432))))
(assert (x1513 340282366920938463463374607431768211456))
(assert (x338 x1293))
(assert (not (x598 (x1453 x543 x5 x12 x432 x1327))))
(assert (= (x1377 (x1364 x543 x785 x1620 x1508 x561 x1617)) x1617))
(assert (x338 x595))
(assert (x338 x126))
(assert (x598 134217728))
(assert (x598 4294967295))
(assert (= (x1550 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442)) x1693))
(assert (=> (<= x104 10000) (= 0 (x1652 x104))))
(assert (x338 x315))
(assert (=> (<= x1212 10000) (= (x1652 x1212) 0)))
(assert (= (x1377 (x1709 x1151 x1660 x921 x769 x368 x1702 x624)) x1702))
(assert (x1368 x1013))
(assert (= x950 (x1550 (x1709 x197 x950 x1715 x627 x1659 x88 x1184))))
(assert (x338 x1229))
(assert (x338 x118))
(assert (=> (<= x357 10000) (= (x1652 x357) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1709 x222 x1531 x817 x171 x1578 x443 x971)))
(assert (x338 x64))
(assert (x307 x1032 32))
(assert (= (x1550 (x963 64 x18 x25)) x18))
(assert (= x641 (x164 (x1709 x1670 x75 x1727 x1266 x641 x607 x964))))
(assert (x535 x104))
(assert (x338 x782))
(assert (= (or x347 x435 x809 x250 x582 x1160 x1045 x1208) x1050))
(assert (= x614 (=> (= x640 (= x1647 0)) (and (=> (and (not x640) (and (= x62 false) (= x804 x1099) (= false x1099))) x504) (=> x640 x1426)))))
(assert (x338 x670))
(assert (= (x1550 (x1582 x423 x300 x1484 x2)) x300))
(assert (x338 x498))
(assert (x338 x648))
(assert (x325 32 (- x77 1)))
(assert (= (x1252 (x475 0)) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460)))
(assert (= x798 (and x505 x531)))
(assert (x338 x1423))
(assert (x338 x358))
(assert (x1368 x297))
(assert (x338 x604))
(assert (= x741 (and x1663 x597)))
(assert (= (x963 64 x604 x638) (x1652 (x963 64 x604 x638))))
(assert (x954 (ite (> x914 18446744073709551615) 1 0) (ite (> 320 x914) 1 0)))
(assert (x338 x725))
(assert (=> (>= 10000 x757) (= (x1652 x757) 0)))
(assert (=> (<= x604 10000) (= (x1652 x604) 0)))
(assert (x338 x541))
(assert (= 64 (x1252 (x963 64 x18 x928))))
(assert (x338 x1202))
(assert (= (x1542 (x1453 x197 x885 x1639 x1058 x1172)) x1639))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1364 x222 x761 x134 x1588 x671 x766)))
(assert (x325 32 (- x120 1)))
(assert (x338 x1333))
(assert (not (x598 (x1709 x543 x1212 x357 x868 x722 x1573 x312))))
(assert (x338 x911))
(assert (x338 x451))
(assert (= (x1542 (x963 64 x512 4)) 4))
(assert (x338 x589))
(assert (= x197 (x1252 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442))))
(assert (x338 x1316))
(assert (x338 x1332))
(assert (x338 x1397))
(assert (= x371 (x1542 (x1582 x416 x254 x371 x446))))
(assert (= x607 (x1377 (x1709 x1670 x75 x1727 x1266 x641 x607 x964))))
(assert (=> (<= x258 10000) (= (x1652 x258) 0)))
(assert (x338 x787))
(assert (= x1589 (x1550 (x1288 x1661 x1589))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1288 x543 x1607)))
(assert (x338 x1161))
(assert (x1513 x1195))
(assert (= x608 (x1542 (x1364 x1151 x389 x608 x1575 x217 x1314))))
(assert (x307 x1559 32))
(assert (x338 x367))
(assert (=> (<= x1588 10000) (= 0 (x1652 x1588))))
(assert (=> (>= 10000 x2) (= 0 (x1652 x2))))
(assert (= (x1252 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593)) x543))
(assert (x307 x628 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1368 x1258))
(assert (=> (<= x1634 10000) (= (x1652 x1634) 0)))
(assert (x338 x740))
(assert (x954 (ite (< 18446744073709551615 x861) 1 0) (ite (< x861 128) 1 0)))
(assert (=> (<= x945 10000) (= (x1652 x945) 0)))
(assert (= (x475 0) (x1652 (x475 0))))
(assert (x307 x909 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1187 (x1022 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401))))
(assert (= x753 (x1022 (x1453 x1151 x1704 x1536 x753 x1233))))
(assert (x338 x924))
(assert (x307 x413 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639775))
(assert (x338 x7))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1364 x1661 x1395 x653 x1733 x90 x704)))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (x338 x117))
(assert (x338 x1577))
(assert (< 10000 (x963 64 x512 4)))
(assert (= x976 (x1542 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442))))
(assert (< 10000 (x963 64 x893 x82)))
(assert (= (x1252 (x1364 x197 x1504 x988 x1610 x441 x145)) x197))
(assert (x338 x844))
(assert (x338 x1340))
(assert (x1368 x104))
(assert (x1057 x33 256))
(assert (x338 x1654))
(assert (x338 x1023))
(assert (= (x1252 (x1364 x543 x785 x1620 x1508 x561 x1617)) x543))
(assert (not (x598 (x1709 x423 x258 x696 x1529 x1088 x247 x1082))))
(assert (= (x1652 (x1582 x1670 x1476 x1555 x454)) (x1582 x1670 x1476 x1555 x454)))
(assert (x1513 x1559))
(assert (= (and x65 x100) x1208))
(assert (x1513 x909))
(assert (= x936 (x1022 (x1582 x543 x1269 x1028 x936))))
(assert (x338 x792))
(assert (x338 x1702))
(assert (x338 x1307))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x338 x317))
(assert (x338 x1416))
(assert (= x423 (x1252 (x963 x423 x1613 x340))))
(assert (= (x1377 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333)) x724))
(assert (= (x1542 (x1582 x197 x900 x1188 x206)) x1188))
(assert (= (and x1031 x1545) x1160))
(assert (x338 x131))
(assert (= x971 (x794 (x1709 x222 x1531 x817 x171 x1578 x443 x971))))
(assert (= (x1542 (x1364 x1661 x1395 x653 x1733 x90 x704)) x653))
(assert (x338 x1448))
(assert (x338 x162))
(assert (x1513 x595))
(assert (x338 x1621))
(assert (> (x1582 x1151 x884 x967 x1084) 10000))
(assert (x338 x1543))
(assert (x338 x1054))
(assert (x307 x1195 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1095 (and x1718 (not x1059))))
(assert (x338 x1087))
(assert (x338 x257))
(assert (x338 x282))
(assert (= x1139 (x1022 (x1453 x317 x1432 x1106 x1139 x379))))
(assert (= x894 (x1296 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894))))
(assert (x941 x1032))
(assert (= (x1550 (x963 64 x18 x928)) x18))
(assert (x338 x354))
(assert (=> (>= 10000 x967) (= 0 (x1652 x967))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1709 x543 x1212 x357 x868 x722 x1573 x312)))
(assert (x338 x987))
(assert (x338 x387))
(assert (x338 x1658))
(assert (not (x598 (x1288 x416 x1451))))
(assert (= (x1252 (x963 x1151 x323 x282)) x1151))
(assert (x338 x1649))
(assert (< 10000 (x1364 x543 x785 x1620 x1508 x561 x1617)))
(assert (x338 x331))
(assert (= (x1652 (x963 x1661 x489 x95)) (x963 x1661 x489 x95)))
(assert (x338 x333))
(assert (= (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529) (x1652 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529))))
(assert (not (x598 (x1364 x1661 x1395 x653 x1733 x90 x704))))
(assert (= x1545 (and x1110 x811)))
(assert (= (x164 (x1709 x1151 x1660 x921 x769 x368 x1702 x624)) x368))
(assert (=> (>= 10000 x817) (= 0 (x1652 x817))))
(assert (x338 x300))
(assert (x338 x1188))
(assert (= (x1252 (x1364 x1661 x1395 x653 x1733 x90 x704)) x1661))
(assert (x338 x336))
(assert (x598 57896044618658097711785492504343953926634992332820282019728792003956564819614))
(assert (x338 x1716))
(assert (= x1460 (x1296 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460))))
(assert (x338 x910))
(assert (x338 x1572))
(assert (not (x598 (x963 x222 x1336 x430))))
(assert (x338 x610))
(assert (x338 x1329))
(assert (x338 x22))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1364 x543 x785 x1620 x1508 x561 x1617)))
(assert (= x1634 (x164 (x1364 x416 x1541 x895 x589 x1634 x1093))))
(assert (x338 x1085))
(assert (x338 x1472))
(assert (x338 x927))
(assert (= (x1542 (x963 x416 x686 x1355)) x1355))
(assert (=> (>= 10000 x1693) (= 0 (x1652 x1693))))
(assert (= (x1542 (x1582 x543 x1269 x1028 x936)) x1028))
(assert (x338 x700))
(assert (x1513 x1565))
(assert (= 0 (x1652 115792089237316195423570985008687907852929702298719625575994209400481361428735)))
(assert (= 64 (x1252 (x963 64 x550 3))))
(assert (= (and x151 (not x1260)) x1037))
(assert (x338 x823))
(assert (= (x1252 (x963 x222 x1336 x430)) x222))
(assert (= (x794 (x1709 x1151 x1660 x921 x769 x368 x1702 x624)) x624))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (= x421 (x1550 (x1453 x1670 x421 x779 x109 x1695))))
(assert (x338 x912))
(assert (x338 x1567))
(assert (=> (>= 10000 x1028) (= (x1652 x1028) 0)))
(assert (= (x1364 x423 x311 x1126 x256 x754 x1472) (x1652 (x1364 x423 x311 x1126 x256 x754 x1472))))
(assert (x338 x797))
(assert (= x754 (x164 (x1364 x423 x311 x1126 x256 x754 x1472))))
(assert (= (x1652 (x1582 x416 x254 x371 x446)) (x1582 x416 x254 x371 x446)))
(assert (x338 x702))
(assert (= x1601 (x1550 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593))))
(assert (x338 x1198))
(assert (x1368 x852))
(assert (= (x794 (x1709 x423 x258 x696 x1529 x1088 x247 x1082)) x1082))
(assert (x338 x957))
(assert (= x1472 (x1377 (x1364 x423 x311 x1126 x256 x754 x1472))))
(assert (= 2 (x1542 (x963 64 x1199 2))))
(assert (=> (<= x1544 10000) (= (x1652 x1544) 0)))
(assert (= x317 (x1252 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 x1670 x1720 x1743)))
(assert (x338 x1318))
(assert (x338 x950))
(assert (x338 x252))
(assert (x338 x1552))
(assert (x338 x1266))
(assert (x338 x1724))
(assert (=> (>= 10000 x1170) (= (x1652 x1170) 0)))
(assert (x338 x137))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401)))
(assert (< 10000 (x1582 x1661 x681 x1437 x241)))
(assert (= (x1542 (x1453 x1661 x924 x1152 x996 x738)) x1152))
(assert (> (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333) 10000))
(assert (< 10000 (x1288 x222 x1309)))
(assert (=> (<= x971 10000) (= (x1652 x971) 0)))
(assert (x189 x595))
(assert (= x1451 (x1550 (x1288 x416 x1451))))
(assert (= (x1542 (x1709 x1151 x1660 x921 x769 x368 x1702 x624)) x921))
(assert (=> (>= 10000 x705) (= (x1652 x705) 0)))
(assert (=> (>= 10000 x1715) (= 0 (x1652 x1715))))
(assert (x338 x751))
(assert (x460 x1425))
(assert (= (x1542 (x1709 x543 x1212 x357 x868 x722 x1573 x312)) x357))
(assert (=> (>= 10000 x165) (= 0 (x1652 x165))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 64 x1339 2)))
(assert (=> (>= 10000 x974) (= 0 (x1652 x974))))
(assert (x307 x1319 32))
(assert (= (and x407 (not x866)) x514))
(assert (x338 x1182))
(assert (= (x1022 (x1582 x222 x170 x1170 x367)) x367))
(assert (=> (>= 10000 x1504) (= (x1652 x1504) 0)))
(assert (x338 x1638))
(assert (x1513 x363))
(assert (= (x1542 (x963 x222 x1336 x430)) x430))
(assert (x338 x1535))
(assert (= x769 (x1022 (x1709 x1151 x1660 x921 x769 x368 x1702 x624))))
(assert (x1368 x1628))
(assert (=> (>= 10000 x1704) (= (x1652 x1704) 0)))
(assert (< 10000 (x1709 x197 x950 x1715 x627 x1659 x88 x1184)))
(assert (= (and (not x1031) x1545) x1587))
(assert (= x751 (x1542 (x963 x543 x1063 x751))))
(assert (x338 x829))
(assert (x338 x481))
(assert (= (and x294 x1343) x831))
(assert (= (and x1393 x264) x68))
(assert (x1368 x1195))
(assert (x338 x828))
(assert (= x1670 (x1252 (x1582 x1670 x1476 x1555 x454))))
(assert (= (=> (= x425 (> (ite (= 0 x746) x746 1) 0)) (and (=> x425 x574) (=> (and (and (or (and (and (> x1712 x1523) (<= x1523 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1712 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1523) (<= x1523 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1655 (+ x1523 x291)) x1712) (= x291 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1559)) (= x1559 (+ 63 x1020))) (not x597)) x597) (= (= x1020 0) x597)) (not x425)) x1489))) x1374))
(assert (x338 x511))
(assert (= x974 (x1550 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643))))
(assert (x338 x1544))
(assert (x338 x537))
(assert (= (and x264 (not x1393)) x1371))
(assert (x338 x413))
(assert (x1368 x909))
(assert (x338 x1223))
(assert (x338 x1213))
(assert (x338 x319))
(assert (x338 x1483))
(assert (=> (<= x1055 10000) (= 0 (x1652 x1055))))
(assert (x338 x1360))
(assert (= (x1550 (x1709 x222 x1531 x817 x171 x1578 x443 x971)) x1531))
(assert (x338 x1326))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1453 x1661 x924 x1152 x996 x738)))
(assert (x338 x1327))
(assert (> (x1709 x1151 x1660 x921 x769 x368 x1702 x624) 10000))
(assert (x338 x1548))
(assert (x598 4294967296))
(assert (x338 x960))
(assert (= x1428 (and x1242 (not x1380))))
(assert (x1513 x1546))
(assert (= x1504 (x1550 (x1364 x197 x1504 x988 x1610 x441 x145))))
(assert (=> (>= 10000 x194) (= 0 (x1652 x194))))
(assert (=> (>= 10000 x1738) (= 0 (x1652 x1738))))
(assert (= x191 (=> (and (= x1118 (x1655 (+ x207 32))) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1319) x562) (= x458 (x1655 (+ x1302 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x914) (= x979 (x1655 (+ 64 x914))) (= x605 (x1655 (+ x562 x1118))) (= x1319 (x1655 (+ 31 x1361))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1302) (= (<= x1670 224) x622) (= (x1655 (+ x979 64)) x1302) (= (x509 (- x605 x1302)) x677) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x914) (and (<= x914 115792089237316195423570985008687907853269984665640564039457584007913129639870) (>= x914 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (<= x914 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (<= 1 x605) (= x1514 (x509 (- x677 32))) (= (x1655 (+ 352 x1641)) x1658) (= x153 (x1655 (+ 32 x1302))) (= (x1655 (+ x1324 192)) x207) (= (x1664 x1302) x1670) (<= x1302 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x642 320) x1361) (< x979 x1302) (> x979 x914) (= x1424 (x1655 (+ x1165 32))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x914) (<= x914 115792089237316195423570985008687907853269984665640564039457584007913129639807) (and (>= x914 115792089237316195423570985008687907853269984665640564039457584007913129639810) (<= x914 115792089237316195423570985008687907853269984665640564039457584007913129639870))) (or (>= x914 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x914 115792089237316195423570985008687907853269984665640564039457584007913129639807) (and (<= x914 115792089237316195423570985008687907853269984665640564039457584007913129639870) (>= x914 115792089237316195423570985008687907853269984665640564039457584007913129639810))) (> x605 x1302) (= (x1655 (+ x1324 32)) x265) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x914) (= x1324 (x1655 (+ 32 x458))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x914) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1302) (= x499 (x1655 (+ 32 x1424))) (= (x1655 (+ 32 x265)) x444) (= (x1655 (+ 32 x444)) x1165)) (and x622 (=> (and (= (x1474 x1700) x1185) (= (x999 x1021) x1266) (= (x999 x153) x1214) (= x1745 (x1655 (+ 64 x153))) (= x1205 (x1655 (+ x153 32))) (>= 2 x1125) (= x80 (x475 0)) (= x1611 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529)) (= x964 (x999 x1488)) (= x96 (x1582 x1670 x1476 x1555 x454)) (= x1267 (x1709 x1670 x75 x1727 x1266 x641 x607 x964)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x605) (= x641 (x999 x491)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x605)) (= (x1655 (+ 96 x153)) x1300) (= (x999 x1745) x956) (= (x1655 (+ x153 64)) x1430) (= (x1655 (+ 96 x153)) x491) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x605)) (= (x1655 (+ x153 32)) x1495) (= x109 (x999 x131)) (= (x1288 x1670 x1214) x625) (= x1476 (x999 x153)) (= x479 (x1655 (+ 64 x605))) (= (= x1185 x1125) x533) (= (x999 x1205) x1727) (= x1555 (x999 x1141)) (= x1051 (x999 x252)) (= (ite (= 0 x1670) x80 (ite (<= x1670 32) x625 (ite (>= 64 x1670) x125 (ite (<= x1670 96) x96 (ite (<= x1670 128) x304 (ite (<= x1670 160) x1253 (ite (>= 192 x1670) x1267 (ite (<= x1670 224) x1611 x165)))))))) x1147) (> x479 x605) (= x1253 (x1364 x1670 x1697 x1176 x262 x287 x196)) (= x180 (x1655 (+ x153 128))) (= x1743 (x999 x1495)) (= (x1655 (+ 32 x153)) x252) (= x377 (x999 x147)) (= x374 (= x1185 1)) (= (x999 x1300) x287) (= (x1655 (+ 96 x153)) x147) (= x1133 (x999 x180)) (= (x999 x828) x1695) (= (x1655 (+ 64 x153)) x131) (= x196 (x999 x1402)) (= (x999 x1131) x607) (= x1125 (x1510 x1147)) (= x545 (x1655 (+ x153 192))) (= x1700 (x963 64 x1147 4)) (= x262 (x999 x1019)) (= (x999 x153) x75) (= (x1453 x1670 x421 x779 x109 x1695) x304) (= (x1655 (+ x153 96)) x828) (= (x1655 (+ 160 x153)) x1488) (= (x1655 (+ x153 32)) x1590) (= (x1655 (+ 32 x153)) x842) (<= x1185 2) (= x1402 (x1655 (+ 128 x153))) (= (x999 x687) x1169) (= (x999 x153) x1720) (= (x999 x842) x779) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x605)) (= x862 (x999 x153)) (= x1021 (x1655 (+ x153 64))) (= x1176 (x999 x1590)) (= x421 (x999 x153)) (= (x999 x545) x529) x533 (<= x605 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x963 x1670 x1720 x1743) x125) (= x1141 (x1655 (+ 32 x153))) (= (x999 x1430) x454) (= (x1655 (+ x153 64)) x1019) (= (x1655 (+ x153 160)) x687) (<= x605 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1655 (+ x153 128)) x1131) (= x1697 (x999 x153))) (and (=> (not x374) x1426) (=> (and (and (<= x104 1461501637330902918203684832716283019655932542975) (= x1656 (x1474 x1447)) (= (x642 320) x795) (= (x1655 (+ 32 x931)) x1163) (<= 132 x819) (= x1387 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x452)) (= x947 false) (>= 127 x789) x155 (= (x963 64 x1147 4) x1447) (= x1310 (= x795 (x1606 100))) (= x246 (x1474 x1447)) (= x819 x173) (= 9504399908715365481695404106006497936221727462084701917660793593865516875776 x1025) (= x1751 (x1655 (+ 32 x834))) (= x1735 x893) (= x79 false) (<= x1656 2) x1310 (<= x246 2) (= x931 (x1655 (+ 96 x834))) (= (x1655 (+ x1751 32)) x238) (= (x1251 x972) x1295) (= (+ 2 x1556) x101) (= 352537786 x1164) (= (x1655 (+ 31 x795)) x452) x1244 (= x248 (x1510 x1147)) (= x1140 x101) (>= 127 x789) (>= x173 132) (>= x104 1) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1656) x1556) (= x173 (x509 (- x1533 x479))) (>= x700 1) (= x665 x1546) (= x104 x972) (= 96 x1622) (= x700 (x1251 x104)) (<= 1 x1295) (= (or (and (> 96 (- x819 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x819 4)))) (> (- x819 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x100) (<= x1049 2) (= x1244 (= x1656 x248)) (= x1049 (x1510 x1147)) (<= x248 2) (= (= x1049 x246) x155) (= x834 (x1655 (+ x479 4))) (= x1533 (x1655 (+ x1163 x1387)))) x374) (and (=> (and x100 (and (= x1096 true) (= x560 false))) x1603) (=> (and (not x100) (= true x15)) (and (=> (and (not x15) (and (= x484 false) (= x650 true))) x1603) (=> (and (= (and (< 131 x819) (= true (<= x819 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x811) x15) (and (=> (and (and (= x412 false) (= x124 true)) (not x811)) x1603) (=> (and (and (= (< 18446744073709551615 x1680) x1031) (= x1680 (x1517 100))) x811) (and (=> (and (and (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x275) x366) (= x1341 (x1655 (+ 32 x303))) (= (x1655 (+ x1680 31)) x585) (= x620 (= 0 (x581 (ite (< 18446744073709551615 x639) 1 0) (ite (< x639 128) 1 0)))) (= x275 (x1655 (+ x1341 31))) (= x303 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x585)) (= x639 (x1655 (+ 128 x366)))) (not x1031)) (and (=> (and (and (= x1469 false) (= x1359 true)) (not x620)) x1603) (=> (and x620 (and (= (x1655 (+ x1680 132)) x839) (<= 129 x639) (= x563 (> x839 x819)))) (and (=> (and x563 (and (= x663 true) (= false x229))) x1603) (=> (and (not x563) (and (= (> x53 0) x294) (= (x1655 (+ x1680 160)) x802))) (and (=> (and (not x294) (and (= x488 true) (= x863 false))) x1603) (=> (and (and (= x82 (x963 64 x1546 2)) (= (x775 128) x1223) (= (> x1223 0) x418) (= (x963 64 x893 x82) x590)) x294) (and (=> (and x418 (and (= (> x1223 32) x1260) (= x1335 (x775 160)))) (and (=> (not x1260) x1721) (=> (and x1260 (and (= x889 (x1655 (+ 32 x639))) (= (x524 192) x1568) (= x483 (< 64 x1223)))) (and (=> (not x483) x1721) (=> (and (and (= x780 (x1655 (+ x639 64))) (= x495 (< 96 x1223)) (= (x783 224) x1638)) x483) (and (=> x495 x526) (=> (not x495) x1721))))))) (=> (not x418) x1721))))))))) (=> (and (and (= false x1235) (= true x1691)) x1031) x1603)))))))))))))))
(assert (not (x598 (x963 64 x512 4))))
(assert (x338 x1304))
(assert (< 10000 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492)))
(assert (x338 x6))
(assert (x338 x91))
(assert (x338 x1116))
(assert (=> (<= x1472 10000) (= (x1652 x1472) 0)))
(assert (x338 x1305))
(assert (x338 x148))
(assert (x338 x617))
(assert (= (x164 (x1709 x197 x950 x1715 x627 x1659 x88 x1184)) x1659))
(assert (x338 x135))
(assert (x338 x1725))
(assert (= x171 (x1022 (x1709 x222 x1531 x817 x171 x1578 x443 x971))))
(assert (x338 x1639))
(assert (x338 x1330))
(assert (= (x1022 (x1709 x423 x258 x696 x1529 x1088 x247 x1082)) x1529))
(assert (x338 x375))
(assert (= 2 (x1542 (x963 64 x1339 2))))
(assert (= (x1550 (x963 x423 x1613 x340)) x1613))
(assert (=> (<= x1355 10000) (= 0 (x1652 x1355))))
(assert (= (x1652 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)) (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)))
(assert (x338 x1714))
(assert (x338 x1089))
(assert (x338 x1319))
(assert (x338 x705))
(assert (= x82 (x1542 (x963 64 x893 x82))))
(assert (x598 18446744073709551166))
(assert (not (x598 (x963 64 x1546 2))))
(assert (= x543 (x1252 (x1288 x543 x1607))))
(assert (=> (<= x738 10000) (= (x1652 x738) 0)))
(assert (x1457 x987))
(assert (= x704 (x1377 (x1364 x1661 x1395 x653 x1733 x90 x704))))
(assert (x338 x1599))
(assert (x338 x656))
(assert (=> (>= 10000 x1269) (= 0 (x1652 x1269))))
(assert (x338 x611))
(assert (= x1204 (and (not x516) x666)))
(assert (x338 x1569))
(assert (=> (>= 10000 x311) (= (x1652 x311) 0)))
(assert (= x340 (x1542 (x963 x423 x1613 x340))))
(assert (x338 x1325))
(assert (not (x598 (x1453 x423 x281 x1444 x692 x844))))
(assert (x338 x1070))
(assert (= x1166 (x1022 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593))))
(assert (x338 x698))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 64 x893 x82)))
(assert (= (x1652 2689206675) 0))
(assert (= (x1296 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)) x990))
(assert (= (and x662 x1047) x531))
(assert (x338 x674))
(assert (x1368 x978))
(assert (x307 x280 32))
(assert (x338 x472))
(assert (< 10000 (x963 64 x1546 2)))
(assert (x136 (ite (< 18446744073709551615 x914) 1 0)))
(assert (x338 x814))
(assert (x338 x421))
(assert (x598 4294967364))
(assert (x1368 x758))
(assert (x338 x1403))
(assert (x338 x980))
(assert (x338 x73))
(assert (= (=> (and (= (x1755 256) x703) (= (not (< 128 x1223)) x778) (= x1183 (x1655 (+ 96 x639)))) (and x778 x1721)) x526))
(assert (x338 x1643))
(assert (x338 x1628))
(assert (= (x1252 (x1582 x317 x1631 x772 x1686)) x317))
(assert (= (x1652 (x963 x416 x686 x1355)) (x963 x416 x686 x1355)))
(assert (x307 x405 32))
(assert (x1513 32))
(assert (x338 x391))
(assert (x338 x261))
(assert (x338 x1248))
(assert (= 2 (x1542 (x963 64 x1546 2))))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639680) 0))
(assert (> (x963 64 x18 x46) 10000))
(assert (=> (>= 10000 x222) (= (x1652 x222) 0)))
(assert (= (=> (and (or x473 (not x473)) (= x473 (= x1647 0))) x614) x283))
(assert (x338 x450))
(assert (and (= 9 (x1678 3 3)) (= (x1678 27 3) 81) (= 81 (x1678 9 9)) (= 27 (x1678 9 3))))
(assert (= x1539 (and (not x1224) x938)))
(assert (x338 x1557))
(assert (x338 x1195))
(assert (= 0 (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639745)))
(assert (not (x598 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529))))
(assert (x338 x351))
(assert (x598 18446744073709551038))
(assert (=> (<= x1575 10000) (= (x1652 x1575) 0)))
(assert (= x589 (x1022 (x1364 x416 x1541 x895 x589 x1634 x1093))))
(assert (x338 x4))
(assert (x572 x363))
(assert (x338 x942))
(assert (x338 x143))
(assert (x307 x1258 32))
(assert (= x394 (x1550 (x1453 x416 x394 x1528 x1738 x1055))))
(assert (x1513 x1425))
(assert (x338 x1586))
(assert (= x403 (and (not x825) x1490)))
(assert (x338 x1529))
(assert (x338 x132))
(assert (x338 x996))
(assert (=> (>= 10000 x627) (= 0 (x1652 x627))))
(assert (x338 x1559))
(assert (x338 x1659))
(assert (x338 x886))
(assert (x338 x287))
(assert (not (x598 (x1364 x222 x761 x134 x1588 x671 x766))))
(assert (x338 x1720))
(assert (x338 x138))
(assert (=> (<= x368 10000) (= (x1652 x368) 0)))
(assert (= (x1550 (x1288 x222 x1309)) x1309))
(assert (x338 x382))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1288 x423 x32)))
(assert (x338 x482))
(assert (= (x1252 (x963 64 x893 x82)) 64))
(assert (= (x164 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492)) x1409))
(assert (x338 x313))
(assert (= (x164 (x1453 x416 x394 x1528 x1738 x1055)) x1055))
(assert (not (x598 (x963 x317 x447 x8))))
(assert (=> (>= 10000 x1710) (= (x1652 x1710) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529)))
(assert (= (x1652 (x963 x197 x537 x22)) (x963 x197 x537 x22)))
(assert (= x1147 (x1550 (x963 64 x1147 4))))
(assert (= (x1652 (+ 1 x56)) (x1652 x56)))
(assert (x338 x1234))
(assert (=> (>= 10000 x1713) (= (x1652 x1713) 0)))
(assert (not (x598 (x1288 x222 x1309))))
(assert (not (x598 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333))))
(assert (x338 x1275))
(assert (= x75 (x1550 (x1709 x1670 x75 x1727 x1266 x641 x607 x964))))
(assert (= (x794 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529)) x1169))
(assert (= x843 (x1377 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643))))
(assert (x338 x641))
(assert (< (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x376))
(assert (= (x1542 (x1709 x1670 x75 x1727 x1266 x641 x607 x964)) x1727))
(assert (x338 x1418))
(assert (x338 x822))
(assert (=> (<= x416 10000) (= 0 (x1652 x416))))
(assert (x338 x673))
(assert (x338 x470))
(assert (= (x1550 (x1364 x423 x311 x1126 x256 x754 x1472)) x311))
(assert (= x1552 (x1550 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427))))
(assert (x338 x177))
(assert (=> (>= 10000 x1395) (= 0 (x1652 x1395))))
(assert (= (x1652 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894)) (x530 x222 x856 x358 x1592 x1544 x342 x335 x894)))
(assert (x338 x1635))
(assert (x338 x365))
(assert (x1457 x355))
(assert (x325 32 x77))
(assert (not (x598 (x963 x543 x1063 x751))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x475 0)))
(assert (x338 x153))
(assert (x338 x1520))
(assert (x338 x1444))
(assert (x338 x1651))
(assert (=> (>= 10000 x537) (= 0 (x1652 x537))))
(assert (x338 x218))
(assert (= (x164 (x1364 x1661 x1395 x653 x1733 x90 x704)) x90))
(assert (=> (>= 10000 x75) (= (x1652 x75) 0)))
(assert (x338 x671))
(assert (x338 x1162))
(assert (=> (>= 10000 x894) (= 0 (x1652 x894))))
(assert (x338 x1580))
(assert (x338 x1711))
(assert (x338 x1565))
(assert (x338 x1727))
(assert (x338 x444))
(assert (=> (>= 10000 x1379) (= (x1652 x1379) 0)))
(assert (= 0 (x1652 424084766)))
(assert (x338 x1408))
(assert (x338 x1536))
(assert (> (x1364 x197 x1504 x988 x1610 x441 x145) 10000))
(assert (x338 x1593))
(assert (x338 x1634))
(assert (=> (<= x1084 10000) (= 0 (x1652 x1084))))
(assert (= (and x902 (not x563)) x1343))
(assert (x338 x819))
(assert (x338 x970))
(assert (x307 x405 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1652 (x1582 x423 x300 x1484 x2)) (x1582 x423 x300 x1484 x2)))
(assert (x338 x1706))
(assert (x338 x900))
(assert (x338 x461))
(assert (= (x1550 (x1288 x1670 x1214)) x1214))
(assert (=> (>= 10000 x1734) (= (x1652 x1734) 0)))
(assert (x338 x429))
(assert (= x616 (x794 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643))))
(assert (x338 x558))
(assert (= (x1252 (x1364 x416 x1541 x895 x589 x1634 x1093)) x416))
(assert (x338 x427))
(assert (= x1266 (x1022 (x1709 x1670 x75 x1727 x1266 x641 x607 x964))))
(assert (x338 x843))
(assert (x338 x679))
(assert (not (x598 (x1582 x1151 x884 x967 x1084))))
(assert (= (x1652 x799) (x1652 (+ x799 1))))
(assert (x1457 x634))
(assert (= 64 (x1252 (x963 64 x18 x25))))
(assert (= x317 (x1252 (x963 x317 x447 x8))))
(assert (x338 x1613))
(assert (x338 x577))
(assert (= (x1252 (x963 x416 x686 x1355)) x416))
(assert (= (x794 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653)) x1203))
(assert (x338 x1020))
(assert (< 10000 (x1364 x1151 x389 x608 x1575 x217 x1314)))
(assert (x338 x1233))
(assert (= x1661 (x1252 (x1453 x1661 x924 x1152 x996 x738))))
(assert (=> (>= 10000 x782) (= (x1652 x782) 0)))
(assert (x338 x1407))
(assert (=> (>= 10000 x1492) (= 0 (x1652 x1492))))
(assert (= (x1652 (x1288 x317 x482)) (x1288 x317 x482)))
(assert (x338 x308))
(assert (x1595 (- x120 1)))
(assert (x338 x633))
(assert (x338 x199))
(assert (x338 x1626))
(assert (x338 x1623))
(assert (= x1698 (and x938 x1224)))
(assert (=> (<= x1610 10000) (= (x1652 x1610) 0)))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x1595 32))
(assert (> (x1288 x416 x1451) 10000))
(assert (x338 x567))
(assert (x338 x1551))
(assert (= x377 (x164 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529))))
(assert (x338 x696))
(assert (= (x963 x1151 x323 x282) (x1652 (x963 x1151 x323 x282))))
(assert (x338 x1220))
(assert (= x88 (x1377 (x1709 x197 x950 x1715 x627 x1659 x88 x1184))))
(assert (= x529 (x1296 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529))))
(assert (x941 x901))
(assert (=> (<= x90 10000) (= (x1652 x90) 0)))
(assert (=> (<= x681 10000) (= 0 (x1652 x681))))
(assert (= (and (not x1605) x1095) x1079))
(assert (x338 x1731))
(assert (x338 x246))
(assert (x1595 256))
(assert (x338 x194))
(assert (= x1602 (x164 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990))))
(assert (x338 x676))
(assert (x338 x1686))
(assert (x338 x1250))
(assert (< (x1709 x416 x1070 x821 x1366 x1409 x336 x1492) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1076))
(assert (< (x963 x423 x1613 x340) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1364 x317 x1710 x721 x384 x1714 x417) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x46 (x1542 (x963 64 x18 x46))))
(assert (= (x963 64 x550 3) (x1652 (x963 64 x550 3))))
(assert (< 10000 (x963 x1151 x323 x282)))
(assert (x338 x1324))
(assert (x338 x1546))
(assert (x338 x95))
(assert (= (x1364 x222 x761 x134 x1588 x671 x766) (x1652 (x1364 x222 x761 x134 x1588 x671 x766))))
(assert (x338 x1112))
(assert (= (and x831 x418) x151))
(assert (x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x539))
(assert (=> (>= 10000 x843) (= 0 (x1652 x843))))
(assert (x307 x137 32))
(assert (x338 x1313))
(assert (x338 x1422))
(assert (x338 x1460))
(assert (= x686 (x1550 (x963 x416 x686 x1355))))
(assert (x338 x326))
(assert (= (x1550 (x1582 x1151 x884 x967 x1084)) x884))
(assert (=> (>= 10000 x446) (= 0 (x1652 x446))))
(assert (= x1006 (and (not x736) x1000)))
(assert (= (x1377 (x1364 x317 x1710 x721 x384 x1714 x417)) x417))
(assert (x338 x1434))
(assert (x338 x527))
(assert (x338 x1679))
(assert (x338 x1295))
(assert (= 0 (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639903)))
(assert (x1595 (- x152 1)))
(assert (not (x598 (x963 x197 x537 x22))))
(assert (x338 x1417))
(assert (= x1536 (x1542 (x1453 x1151 x1704 x1536 x753 x1233))))
(assert (=> (<= x1555 10000) (= (x1652 x1555) 0)))
(assert (x338 x453))
(assert (= x175 (or (and x233 x226) (and x392 x523))))
(assert (= 64 (x1252 (x963 64 x18 x46))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 64 x512 4)))
(assert (=> (<= x1720 10000) (= 0 (x1652 x1720))))
(assert (not (x598 (x1288 x543 x1607))))
(assert (x338 x608))
(assert (= (and (not x640) x30) x1732))
(assert (> (x1582 x222 x170 x1170 x367) 10000))
(assert (x307 x585 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1607 (x1550 (x1288 x543 x1607))))
(assert (= x1588 (x1022 (x1364 x222 x761 x134 x1588 x671 x766))))
(assert (not (x598 (x1453 x1661 x924 x1152 x996 x738))))
(assert (=> (>= 10000 x1717) (= 0 (x1652 x1717))))
(assert (x338 x552))
(assert (=> (<= x696 10000) (= 0 (x1652 x696))))
(assert (= (x1542 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)) x212))
(assert (= (x1652 57896044618658097711785492504343953926634992332820282019728792003956564819486) 0))
(assert (x338 x1670))
(assert (= (x1582 x222 x170 x1170 x367) (x1652 (x1582 x222 x170 x1170 x367))))
(assert (x941 x1559))
(assert (=> (<= x282 10000) (= (x1652 x282) 0)))
(assert (= (x1652 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442)) (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442)))
(assert (x598 18446744073709551294))
(assert (= x1234 (x1550 (x1288 x197 x1234))))
(assert (= (x1652 (x1364 x197 x1504 x988 x1610 x441 x145)) (x1364 x197 x1504 x988 x1610 x441 x145)))
(assert (x1368 x925))
(assert (= (x1652 (x1364 x1661 x1395 x653 x1733 x90 x704)) (x1364 x1661 x1395 x653 x1733 x90 x704)))
(assert (x1513 x413))
(assert (= x423 (x1252 (x1453 x423 x281 x1444 x692 x844))))
(assert (x1368 x1425))
(assert (= 64 (x1252 (x963 64 x604 x638))))
(assert (x338 x1615))
(assert (x338 x1671))
(assert (x1457 x1497))
(assert (= x441 (x164 (x1364 x197 x1504 x988 x1610 x441 x145))))
(assert (x338 x1378))
(assert (= x260 (=> (and (= (not x719) x569) (= (or (not x569) x845) x205) (= x845 x1274) (= x804 x1274) (= (= x547 x1002) x719)) x205)))
(assert (x200 x595))
(assert (x338 x212))
(assert (x338 x446))
(assert (x338 x144))
(assert (x338 x256))
(assert (x1513 x1271))
(assert (= (x1709 x543 x1212 x357 x868 x722 x1573 x312) (x1652 (x1709 x543 x1212 x357 x868 x722 x1573 x312))))
(assert (not (x598 (x475 0))))
(assert (x338 x328))
(assert (< 10000 (x963 64 x1199 2)))
(assert (x338 x779))
(assert (x1457 x148))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (= x416 (x1252 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460))))
(assert (not (x598 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643))))
(assert (x338 x1125))
(assert (x338 x745))
(assert (= x206 (x1022 (x1582 x197 x900 x1188 x206))))
(assert (= (and x78 x675) x1490))
(assert (x941 x187))
(assert (x338 x361))
(assert (x338 x627))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1288 x197 x1234)))
(assert (x307 x363 1329227995784915872903807060280344576))
(assert (=> (>= 10000 x570) (= 0 (x1652 x570))))
(assert (x1368 x1565))
(assert (x307 x187 32))
(assert (x338 x277))
(assert (x338 x689))
(assert (x338 x323))
(assert (= (x1022 (x1582 x1661 x681 x1437 x241)) x241))
(assert (x598 115792089237316195423570985008687907852929702298719625575994209400481361428735))
(assert (x1513 x486))
(assert (x338 x1503))
(assert (x338 x817))
(assert (x338 x97))
(assert (x338 x1187))
(assert (= (x1652 (x1709 x1151 x1660 x921 x769 x368 x1702 x624)) (x1709 x1151 x1660 x921 x769 x368 x1702 x624)))
(assert (= x1733 (x1022 (x1364 x1661 x1395 x653 x1733 x90 x704))))
(assert (x338 x791))
(assert (= x1126 (x1542 (x1364 x423 x311 x1126 x256 x754 x1472))))
(assert (x338 x518))
(assert (x338 x85))
(assert (x338 x1400))
(assert (x338 x346))
(assert (x338 x724))
(assert (x338 x45))
(assert (x1513 x628))
(assert (x338 x1142))
(assert (=> (>= 10000 x976) (= (x1652 x976) 0)))
(assert (x338 x1176))
(assert (x338 x345))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1582 x1661 x681 x1437 x241)))
(assert (=> (<= x1697 10000) (= (x1652 x1697) 0)))
(assert (not (x598 (x1582 x416 x254 x371 x446))))
(assert (x338 x1508))
(assert (x338 x865))
(assert (= 64 (x1252 (x963 64 x512 4))))
(assert (x338 x356))
(assert (x338 x982))
(assert (x338 x752))
(assert (x136 (ite (< x914 320) 1 0)))
(assert (=> (<= x1660 10000) (= 0 (x1652 x1660))))
(assert (< 10000 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427)))
(assert (x338 x966))
(assert (x338 x311))
(assert (=> (>= 10000 x1266) (= 0 (x1652 x1266))))
(assert (not (x598 (x1364 x317 x1710 x721 x384 x1714 x417))))
(assert (x1368 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= x996 (x1022 (x1453 x1661 x924 x1152 x996 x738))))
(assert (= x227 (and x271 x830)))
(assert (not (x598 (x1582 x197 x900 x1188 x206))))
(assert (x338 x591))
(assert (x338 x1268))
(assert (x338 x521))
(assert (x338 x1339))
(assert (=> (<= x171 10000) (= 0 (x1652 x171))))
(assert (x338 x1509))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1453 x416 x394 x1528 x1738 x1055)))
(assert (x1368 x1627))
(assert (= (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460) (x1652 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460))))
(assert (x338 x1616))
(assert (x338 x1212))
(assert (x338 x127))
(assert (x338 x220))
(assert (x1457 x353))
(assert (x338 x1402))
(assert (x338 x417))
(assert (= (and x866 x407) x411))
(assert (= (x1453 x1661 x924 x1152 x996 x738) (x1652 (x1453 x1661 x924 x1152 x996 x738))))
(assert (not (x598 (x1582 x317 x1631 x772 x1686))))
(assert (x1368 x1271))
(assert (< 10000 (x1582 x416 x254 x371 x446)))
(assert (x1368 x745))
(assert (x1368 x1546))
(assert (=> (>= 10000 x377) (= 0 (x1652 x377))))
(assert (< 10000 (x1453 x1670 x421 x779 x109 x1695)))
(assert (< 10000 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894)))
(assert (< (x1582 x197 x900 x1188 x206) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1693))
(assert (x338 x1197))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1595 x152))
(assert (= 0 (x1652 4294967296)))
(assert (=> (>= 10000 x769) (= 0 (x1652 x769))))
(assert (x338 x810))
(assert (= (x164 (x1453 x543 x5 x12 x432 x1327)) x1327))
(assert (=> (<= x1743 10000) (= 0 (x1652 x1743))))
(assert (x338 x188))
(assert (x338 x443))
(assert (= x408 (and x531 (not x505))))
(assert (x338 x879))
(assert (< (x1582 x1670 x1476 x1555 x454) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1713))
(assert (x338 x538))
(assert (= (x1652 352537786) 0))
(assert (x338 x1512))
(assert (=> (<= x427 10000) (= (x1652 x427) 0)))
(assert (x338 x1409))
(assert (x307 x1271 32))
(assert (x338 x1028))
(assert (=> (>= 10000 x430) (= (x1652 x430) 0)))
(assert (=> (<= x197 10000) (= 0 (x1652 x197))))
(assert (not (x598 (x963 64 x1199 2))))
(assert (not (x598 (x1582 x222 x170 x1170 x367))))
(assert (= (x1652 (x1364 x543 x785 x1620 x1508 x561 x1617)) (x1364 x543 x785 x1620 x1508 x561 x1617)))
(assert (x338 x765))
(assert (= (and (not x425) x548) x1663))
(assert (=> (>= 10000 x607) (= 0 (x1652 x607))))
(assert (x338 x485))
(assert (= (x1542 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401)) x440))
(assert (x338 x758))
(assert (= x1151 (x1252 (x1364 x1151 x389 x608 x1575 x217 x1314))))
(assert (=> (<= x8 10000) (= (x1652 x8) 0)))
(assert (x338 x1114))
(assert (x338 x1168))
(assert (x338 x898))
(assert (=> (>= 10000 x784) (= (x1652 x784) 0)))
(assert (= x123 (and x495 x1462)))
(assert (=> (>= 10000 x1726) (= 0 (x1652 x1726))))
(assert (x338 x355))
(assert (x338 x357))
(assert (x941 x1627))
(assert (x307 x275 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1126) (= (x1652 x1126) 0)))
(assert (=> (>= 10000 x1460) (= (x1652 x1460) 0)))
(assert (= x282 (x1542 (x963 x1151 x323 x282))))
(assert (= (and (not x774) x44) x1062))
(assert (= (x1582 x543 x1269 x1028 x936) (x1652 (x1582 x543 x1269 x1028 x936))))
(assert (x1595 x120))
(assert (x338 x416))
(assert (= x471 (and x592 (not x804))))
(assert (x307 x1319 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x796 x57) x1718))
(assert (x338 x9))
(assert (< (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639873) 0))
(assert (= (x1022 (x1709 x197 x950 x1715 x627 x1659 x88 x1184)) x627))
(assert (x338 x449))
(assert (= 0 (x1652 9504399908715365481695404106006497936221727462084701917660793593865516875776)))
(assert (x338 x1143))
(assert (x338 x129))
(assert (=> (>= 10000 x1727) (= 0 (x1652 x1727))))
(assert (= (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593) (x1652 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593))))
(assert (= (or x1732 x103) x592))
(assert (x338 x1432))
(assert (x941 x297))
(assert (= (x1652 (x1288 x1661 x1589)) (x1288 x1661 x1589)))
(assert (x1368 x628))
(assert (x338 x258))
(assert (not (x598 (x1582 x543 x1269 x1028 x936))))
(assert (= (=> (and (and (= 32 x668) (= x259 false) (= x1728 false) (<= 1 x823) (= false x1524) (<= x177 127) (= 2689206675 x864) (= x1401 false) (= x823 (x1251 x972)) (<= 260 x1497) (= x1431 false) (= x1097 false) (= 4 x1626) (= x1633 false) (<= x1497 4294967556) (= x183 false) (<= x177 127) (= x308 x1002)) (and (= x580 x209) (and (= x1397 x710) (and (and (and (and (and (= x1023 (x860 x997)) (= x1155 false) (= x179 (- x1023 x320)) (<= x1222 127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1090) (>= 127 x1222) (<= 0 x1090) (>= x1417 1) (= (x1251 x272) x1417) (= x997 x269) (= x1090 (+ x320 x439)) (< (+ x439 x320) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x439 (x1386 x272)) (= x1087 x1090) (= x929 false) (= x736 (= x1570 0))) (= x1570 x320)) (and (= x1520 x1497) (= x1520 (+ 260 x755)) (>= 134217728 x120) (= (* 32 (- x120 1)) x652) (>= x120 0) (= x10 x1293) (> x1644 x652) (= false x739) (= x755 (* 32 x120)) (= x905 x1644) (>= x755 x1644))) (= x959 x1046)) (= x1111 x1190))))) (and (=> (not x736) x1426) (=> (and x736 (and (= (x466 1461501637330902918203684832716283019655932542975 x1546) x760) (= x1456 (x316 36)) (= 128 x1729) (= x749 (= x760 x1546)) (= (x316 68) x1546) (= x1696 424084766))) (and (=> (not x749) x393) (=> (and x749 (and (= x796 (= x1416 x104)) (= x104 (x316 100)) (= x1416 (x466 1461501637330902918203684832716283019655932542975 x104)))) (and (=> (not x796) x393) (=> (and (and (= (x316 196) x1458) (= x807 (x316 164)) (= x1059 (< 18446744073709551615 x1458)) (= (x316 132) x893)) x796) (and (=> (and (not x1059) (and (= (x1655 (+ 31 x588)) x428) (= x588 (x1655 (+ 36 x1458))) (= (or (and (<= x1497 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x428 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x428) (<= x1497 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x428 x1497))) x1605))) (and (=> (and x1605 (and (= x1641 (x316 x588)) (= x830 (< 18446744073709551615 x1641)) (= x61 (x1655 (+ 32 x588))))) (and (=> (and (not x830) (and (= (x1655 (+ 32 x161)) x715) (= (= (x581 (ite (< 18446744073709551615 x914) 1 0) (ite (< x914 320) 1 0)) 0) x866) (= x161 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x297)) (= (x1655 (+ 31 x1641)) x297) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x978) x1259) (= (x1655 (+ x1259 320)) x914) (= x978 (x1655 (+ x715 31))))) (and (=> (not x866) x1426) (=> (and (and (= (x1655 (+ x1641 x61)) x813) (= (< x1497 x813) x284) (>= x914 321)) x866) (and (=> x284 x1426) (=> (not x284) x191))))) (=> x830 x1426))) (=> (not x1605) x1426))) (=> x1059 x1426))))))))) x23))
(assert (x338 x321))
(assert (= (x1550 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460)) x194))
(assert (= x358 (x1542 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894))))
(assert (x941 x1258))
(assert (= (x1022 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)) x348))
(assert (x460 x1069))
(assert (= (x1550 (x963 64 x1199 2)) x1199))
(assert (x338 x1063))
(assert (x338 x1395))
(assert (= (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653) (x1652 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653))))
(assert (= (x1377 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401)) x702))
(assert (x307 x852 256))
(assert (x598 424084766))
(assert (< (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1288 x197 x1234)))
(assert (x338 x820))
(assert (=> (<= x1333 10000) (= (x1652 x1333) 0)))
(assert (x1457 x1583))
(assert (x338 x364))
(assert (x338 x1461))
(assert (x307 x297 32))
(assert (< 10000 (x1709 x423 x258 x696 x1529 x1088 x247 x1082)))
(assert (x338 x1302))
(assert (x1368 x363))
(assert (= x1528 (x1542 (x1453 x416 x394 x1528 x1738 x1055))))
(assert (= (x1022 (x1453 x197 x885 x1639 x1058 x1172)) x1058))
(assert (= (x1550 (x963 64 x604 x638)) x604))
(assert (= (x1652 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427)) (x1709 x317 x1552 x1734 x97 x1553 x945 x1427)))
(assert (=> (<= x543 10000) (= 0 (x1652 x543))))
(assert (= (x1377 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427)) x945))
(assert (x338 x32))
(assert (x338 x534))
(assert (x338 x337))
(assert (< 10000 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)))
(assert (= (x164 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593)) x1202))
(assert (x338 x464))
(assert (= x1045 (and x563 x902)))
(assert (< (x963 64 x18 x928) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x88))
(assert (= (x1542 (x963 64 x550 3)) 3))
(assert (x338 x713))
(assert (< 10000 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)))
(assert (=> (<= x54 10000) (= (x1652 x54) 0)))
(assert (x824 x1628))
(assert (x338 x703))
(assert (x338 x1106))
(assert (< 10000 (x1364 x423 x311 x1126 x256 x754 x1472)))
(assert (= (x1542 (x1453 x423 x281 x1444 x692 x844)) x1444))
(assert (= (x1652 4294967556) 0))
(assert (x338 x993))
(assert (= (x1652 (x1364 x1670 x1697 x1176 x262 x287 x196)) (x1364 x1670 x1697 x1176 x262 x287 x196)))
(assert (x338 x502))
(assert (x338 x262))
(assert (x338 x1421))
(assert (= (x1542 (x1453 x317 x1432 x1106 x1139 x379)) x1106))
(assert (= (x1542 (x963 x317 x447 x8)) x8))
(assert (x338 x683))
(assert (= (x1296 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442)) x1442))
(assert (x338 x1601))
(assert (=> (<= x417 10000) (= (x1652 x417) 0)))
(assert (x941 x1271))
(assert (=> (<= x1552 10000) (= (x1652 x1552) 0)))
(assert (=> (<= x785 10000) (= 0 (x1652 x785))))
(assert (x941 x909))
(assert (x1595 x539))
(assert (=> (>= 10000 x371) (= 0 (x1652 x371))))
(assert (x338 x254))
(assert (x338 x156))
(assert (= (and x370 x1026) x1351))
(assert (x338 x1300))
(assert (= x666 (and (not x1173) x1004)))
(assert (= (x1550 (x1582 x416 x254 x371 x446)) x254))
(assert (= x1492 (x794 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492))))
(assert (x338 x738))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1582 x416 x254 x371 x446)))
(assert (x338 x1573))
(assert (x338 x104))
(assert (x338 x1122))
(assert (x338 x267))
(assert (x307 x280 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x657))
(assert (x338 x11))
(assert (x338 x1007))
(assert (x338 x596))
(assert (x338 x757))
(assert (x338 x74))
(assert (x338 x1540))
(assert (x338 x1309))
(assert (=> (>= 10000 x1370) (= 0 (x1652 x1370))))
(assert (x338 x1695))
(assert (=> (<= x1607 10000) (= 0 (x1652 x1607))))
(assert (x535 x1546))
(assert (= x1272 (and (not x1026) x370)))
(assert (x338 x875))
(assert (x338 x1464))
(assert (x338 x1133))
(assert (x338 x1369))
(assert (=> (<= x1541 10000) (= (x1652 x1541) 0)))
(assert (x338 x401))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1453 x423 x281 x1444 x692 x844)))
(assert (= x262 (x1022 (x1364 x1670 x1697 x1176 x262 x287 x196))))
(assert (x338 x217))
(assert (not (x598 (x1453 x222 x705 x1027 x502 x1329))))
(assert (x338 x1660))
(assert (x338 x1301))
(assert (= 0 (x1652 57896044618658097711785492504343953926634992332820282019728792003956564819614)))
(assert (x307 x1258 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x12 (x1542 (x1453 x543 x5 x12 x432 x1327))))
(assert (< 10000 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529)))
(assert (x338 x340))
(assert (x1368 x585))
(assert (x1368 x595))
(assert (=> (<= x671 10000) (= 0 (x1652 x671))))
(assert (=> (<= x1133 10000) (= 0 (x1652 x1133))))
(assert (=> (<= x196 10000) (= (x1652 x196) 0)))
(assert (= x1000 (or x1298 x92)))
(assert (x941 x275))
(assert (=> (>= 10000 x482) (= 0 (x1652 x482))))
(assert (= (x1252 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)) x423))
(assert (=> (<= x997 10000) (= (x1652 x997) 0)))
(assert (x338 x813))
(assert (x307 x275 32))
(assert (x338 x1194))
(assert (= (=> (= x654 x559) x255) x1452))
(assert (x338 x747))
(assert (x338 x440))
(assert (= (x1542 (x963 x1661 x489 x95)) x95))
(assert (x338 x726))
(assert (x338 x238))
(assert (x338 x1088))
(assert (x307 x758 32))
(assert (not (x598 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401))))
(assert (= (x164 (x1709 x543 x1212 x357 x868 x722 x1573 x312)) x722))
(assert (= 0 (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (x338 x1625))
(assert (= (x1453 x1670 x421 x779 x109 x1695) (x1652 (x1453 x1670 x421 x779 x109 x1695))))
(assert (x338 x1073))
(assert (x338 x1126))
(assert (x1513 x978))
(assert (> (x1453 x197 x885 x1639 x1058 x1172) 10000))
(assert (x338 x1594))
(assert (x338 x1241))
(assert (= (x1550 (x963 x543 x1063 x751)) x1063))
(assert (x338 x795))
(assert (x338 x870))
(assert (x338 x850))
(assert (= (x963 64 x18 x928) (x1652 (x963 64 x18 x928))))
(assert (x1368 x137))
(assert (=> (>= 10000 x1589) (= (x1652 x1589) 0)))
(assert (x338 x805))
(assert (x338 x1631))
(assert (x1368 x1069))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (=> (<= x145 10000) (= 0 (x1652 x145))))
(assert (x338 x1027))
(assert (x338 x561))
(assert (= x423 (x1252 (x1582 x423 x300 x1484 x2))))
(assert (x338 x1674))
(assert (=> (<= x1176 10000) (= 0 (x1652 x1176))))
(assert (= (x1252 (x1709 x1670 x75 x1727 x1266 x641 x607 x964)) x1670))
(assert (x338 x728))
(assert (x338 x988))
(assert (x338 x1676))
(assert (x941 x280))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1453 x317 x1432 x1106 x1139 x379)))
(assert (= x22 (x1542 (x963 x197 x537 x22))))
(assert (= x1390 (=> (and (= x156 (x1655 (+ 96 x861))) (= (x764 256) x1301) (= x176 (not (< 128 x146)))) (and x1598 x176))))
(assert (x1368 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x1110 (not x811)) x582))
(assert (x338 x3))
(assert (=> (>= 10000 x5) (= 0 (x1652 x5))))
(assert (x338 x564))
(assert (x338 x967))
(assert (= x5 (x1550 (x1453 x543 x5 x12 x432 x1327))))
(assert (= (x1377 (x1709 x543 x1212 x357 x868 x722 x1573 x312)) x1573))
(assert (x338 x748))
(assert (x338 x1356))
(assert (x1368 x1656))
(assert (x338 x769))
(assert (x338 x1278))
(assert (= (x1252 (x963 64 x1546 2)) 64))
(assert (=> (<= x372 10000) (= (x1652 x372) 0)))
(assert (x338 x61))
(assert (=> (>= 10000 x443) (= 0 (x1652 x443))))
(assert (= x576 (x794 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460))))
(assert (x338 x385))
(assert (< 10000 (x963 x222 x1336 x430)))
(assert (=> (<= x336 10000) (= 0 (x1652 x336))))
(assert (not (x598 (x963 x416 x686 x1355))))
(assert (x338 x1541))
(assert (=> (>= 10000 x1411) (= (x1652 x1411) 0)))
(assert (x338 x244))
(assert (x338 x1588))
(assert (x572 x1013))
(assert (x338 x171))
(assert (= (x1288 x423 x32) (x1652 (x1288 x423 x32))))
(assert (=> (<= x1476 10000) (= (x1652 x1476) 0)))
(assert (x338 x394))
(assert (x338 x1082))
(assert (x338 x1100))
(assert (= (and x1605 x1095) x271))
(assert (x338 x968))
(assert (= (and x284 x411) x1669))
(assert (x338 x1424))
(assert (= x696 (x1542 (x1709 x423 x258 x696 x1529 x1088 x247 x1082))))
(assert (= (x1652 (x963 x222 x1336 x430)) (x963 x222 x1336 x430)))
(assert (=> (>= 10000 x779) (= (x1652 x779) 0)))
(assert (x338 x33))
(assert (x307 x1628 256))
(assert (=> (<= x1573 10000) (= (x1652 x1573) 0)))
(assert (=> (>= 10000 x633) (= (x1652 x633) 0)))
(assert (= x433 (and x408 x510)))
(assert (= (and x392 (not x523)) x645))
(assert (x1513 x852))
(assert (=> (<= x287 10000) (= (x1652 x287) 0)))
(assert (= (x1252 (x1582 x1661 x681 x1437 x241)) x1661))
(assert (= x543 (x1252 (x963 x543 x1063 x751))))
(assert (x338 x964))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007908834672739))
(assert (=> (<= x481 10000) (= (x1652 x481) 0)))
(assert (x338 x180))
(assert (=> (<= x453 10000) (= 0 (x1652 x453))))
(assert (x338 x207))
(assert (x338 x1128))
(assert (= (x1252 (x1288 x1661 x1589)) x1661))
(assert (x338 x839))
(assert (x338 x750))
(assert (= (x1252 (x1288 x1670 x1214)) x1670))
(assert (x338 x67))
(assert (> (x963 x423 x1613 x340) 10000))
(assert (= (x1652 (x1582 x197 x900 x1188 x206)) (x1582 x197 x900 x1188 x206)))
(assert (x338 x654))
(assert (=> (>= 10000 x22) (= 0 (x1652 x22))))
(assert (x338 x14))
(assert (x598 57896044618658097711785492504343953926634992332820282019728792003956564819486))
(assert (= x1151 (x1252 (x1709 x1151 x1660 x921 x769 x368 x1702 x624))))
(assert (=> (<= x358 10000) (= (x1652 x358) 0)))
(assert (= x1379 (x164 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460))))
(assert (= (x1453 x222 x705 x1027 x502 x1329) (x1652 (x1453 x222 x705 x1027 x502 x1329))))
(assert (not (x598 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593))))
(assert (x338 x643))
(assert (x1368 340282366920938463463374607431768211200))
(assert (= x427 (x1542 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653))))
(assert (x338 x613))
(assert (x338 x808))
(assert (= x1093 (x1377 (x1364 x416 x1541 x895 x589 x1634 x1093))))
(assert (x338 x997))
(assert (= x213 (x794 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1288 x416 x1451)))
(assert (x338 x409))
(assert (x338 x405))
(assert (x338 x344))
(assert (x338 x335))
(assert (x338 x206))
(assert (= (x794 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401)) x801))
(assert (= x247 (x1377 (x1709 x423 x258 x696 x1529 x1088 x247 x1082))))
(assert (x338 x98))
(assert (= x1216 (x1550 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401))))
(assert (not (x598 (x1288 x197 x1234))))
(assert (= x1661 (x1252 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333))))
(assert (x598 3391066381))
(assert (= (x1652 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)) (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)))
(assert (= x109 (x1022 (x1453 x1670 x421 x779 x109 x1695))))
(assert (= (x1288 x1670 x1214) (x1652 (x1288 x1670 x1214))))
(assert (x338 x1415))
(assert (x338 x1429))
(assert (=> (>= 10000 x529) (= 0 (x1652 x529))))
(assert (x338 x722))
(assert (= (x1550 (x1582 x543 x1269 x1028 x936)) x1269))
(assert (= (x1652 (x1364 x416 x1541 x895 x589 x1634 x1093)) (x1364 x416 x1541 x895 x589 x1634 x1093)))
(assert (=> (>= 10000 x1263) (= (x1652 x1263) 0)))
(assert (x338 x1205))
(assert (=> (>= 10000 x1152) (= (x1652 x1152) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 64 x1147 4)))
(assert (not (x598 (x1453 x197 x885 x1639 x1058 x1172))))
(assert (x338 x1271))
(assert (= (and x1587 x620) x902))
(assert (=> (>= 10000 x485) (= 0 (x1652 x485))))
(assert (x307 x925 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1170))
(assert (x338 x1454))
(assert (=> (>= 10000 x112) (= (x1652 x112) 0)))
(assert (< (x963 x416 x686 x1355) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1561))
(assert (x338 x766))
(assert (x338 x1060))
(assert (x338 x655))
(assert (= x1170 (x1542 (x1582 x222 x170 x1170 x367))))
(assert (= x727 (or x1218 x1050)))
(assert (x338 x1193))
(assert (x338 x423))
(assert (x338 x459))
(assert (= (x1652 (x963 64 x1546 2)) (x963 64 x1546 2)))
(assert (x338 x130))
(assert (=> (<= x576 10000) (= 0 (x1652 x576))))
(assert (x338 x716))
(assert (= x1720 (x1550 (x963 x1670 x1720 x1743))))
(assert (= x1115 (x1377 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593))))
(assert (x338 x454))
(assert (= (x1252 (x1288 x416 x1451)) x416))
(assert (= x1555 (x1542 (x1582 x1670 x1476 x1555 x454))))
(assert (x338 x1749))
(assert (= x1734 (x1542 (x1709 x317 x1552 x1734 x97 x1553 x945 x1427))))
(assert (< 10000 (x1582 x1670 x1476 x1555 x454)))
(assert (= (x1542 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)) x1370))
(assert (x941 x452))
(assert (= x782 (x1542 (x530 x543 x1601 x782 x1166 x1202 x1115 x213 x1593))))
(assert (= (x1550 (x963 x197 x537 x22)) x537))
(assert (=> (>= 10000 x97) (= (x1652 x97) 0)))
(assert (=> (>= 10000 x1058) (= 0 (x1652 x1058))))
(assert (=> (>= 10000 x394) (= 0 (x1652 x394))))
(assert (x338 x1738))
(assert (= 64 (x1252 (x963 64 x1199 2))))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1709 x1151 x1660 x921 x769 x368 x1702 x624)))
(assert (x338 x1105))
(assert (x338 x1442))
(assert (= (x164 (x1709 x222 x1531 x817 x171 x1578 x443 x971)) x1578))
(assert (=> (>= 10000 x213) (= 0 (x1652 x213))))
(assert (= x1426 x393))
(assert (x338 x806))
(assert (x338 x75))
(assert (< 10000 (x1453 x416 x394 x1528 x1738 x1055)))
(assert (x338 x1093))
(assert (x338 x107))
(assert (x338 x971))
(assert (not (x598 (x963 x1661 x489 x95))))
(assert (x338 x1113))
(assert (= 0 (x1652 3391066381)))
(assert (= x1670 (x1252 (x530 x1670 x862 x1051 x956 x377 x1133 x1169 x529))))
(assert (= (x1709 x197 x950 x1715 x627 x1659 x88 x1184) (x1652 (x1709 x197 x950 x1715 x627 x1659 x88 x1184))))
(assert (x338 x840))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639903))
(assert (= (and x1663 (not x597)) x888))
(assert (x338 x209))
(assert (= x170 (x1550 (x1582 x222 x170 x1170 x367))))
(assert (= x404 (and x727 x473)))
(assert (x307 x413 32))
(assert (= (x1550 (x963 64 x893 x82)) x893))
(assert (= (x1288 x543 x1607) (x1652 (x1288 x543 x1607))))
(assert (> (x1364 x1661 x1395 x653 x1733 x90 x704) 10000))
(assert (= x335 (x794 (x530 x222 x856 x358 x1592 x1544 x342 x335 x894))))
(assert (= (x1652 (x963 64 x1199 2)) (x963 64 x1199 2)))
(assert (x338 x901))
(assert (=> (>= 10000 x1327) (= 0 (x1652 x1327))))
(assert (=> (>= 10000 x924) (= 0 (x1652 x924))))
(assert (= x1004 (or x1371 x68)))
(assert (= x383 (and x1219 (not x1102))))
(assert (=> (<= x1602 10000) (= 0 (x1652 x1602))))
(assert (x338 x266))
(assert (x338 x834))
(assert (x338 x90))
(assert (not (x598 (x1453 x416 x394 x1528 x1738 x1055))))
(assert (= (x1550 (x1364 x543 x785 x1620 x1508 x561 x1617)) x785))
(assert (x338 x1404))
(assert (x338 x1024))
(assert (x338 x1704))
(assert (= (x1652 (x963 x1670 x1720 x1743)) (x963 x1670 x1720 x1743)))
(assert (x307 x595 340282366920938463463374607431768211456))
(assert (x338 x623))
(assert (x338 x192))
(assert (=> (>= 10000 x1114) (= 0 (x1652 x1114))))
(assert (=> (>= 10000 x885) (= (x1652 x885) 0)))
(assert (not (x598 (x963 64 x1147 4))))
(assert (= x1575 (x1022 (x1364 x1151 x389 x608 x1575 x217 x1314))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 x1661 x489 x95)))
(assert (x338 x891))
(assert (= (x963 64 x1147 4) (x1652 (x963 64 x1147 4))))
(assert (x338 x1046))
(assert (x941 x137))
(assert (< (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x78 (and x1130 x128)))
(assert (x338 x868))
(assert (=> (>= 10000 x18) (= 0 (x1652 x18))))
(assert (= x1467 (x1542 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333))))
(assert (x338 x1203))
(assert (x338 x1497))
(assert (=> (<= x1233 10000) (= 0 (x1652 x1233))))
(assert (x338 x1314))
(assert (x338 x972))
(assert (< 10000 (x1709 x543 x1212 x357 x868 x722 x1573 x312)))
(assert (not (x598 (x1453 x317 x1432 x1106 x1139 x379))))
(assert (x338 x1482))
(assert (= x1660 (x1550 (x1709 x1151 x1660 x921 x769 x368 x1702 x624))))
(assert (x338 x647))
(assert (x338 x1061))
(assert (x338 x761))
(assert (= (x1022 (x1582 x1151 x884 x967 x1084)) x1084))
(assert (= (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333) (x1652 (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333))))
(assert (x338 x1617))
(assert (x307 x1425 256))
(assert (= (x1022 (x1582 x317 x1631 x772 x1686)) x1686))
(assert (=> (>= 10000 x1467) (= 0 (x1652 x1467))))
(assert (x338 x905))
(assert (= x317 (x1252 (x1453 x317 x1432 x1106 x1139 x379))))
(assert (x338 x1680))
(assert (= x946 (and (not x483) x1450)))
(assert (x338 x833))
(assert (x338 x265))
(assert (x307 x498 256))
(assert (=> (<= x1151 10000) (= 0 (x1652 x1151))))
(assert (x338 x215))
(assert (=> (>= 10000 x447) (= 0 (x1652 x447))))
(assert (not (x598 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492))))
(assert (x106 x1676))
(assert (x338 x430))
(assert (x338 x687))
(assert (x338 x1446))
(assert (= x1298 (or x69 x790)))
(assert (x598 4294967390))
(assert (x338 x491))
(assert (= (or x1494 x175 x1673 x433 x711 x678 x1036 x1698) x1496))
(assert (x338 x213))
(assert (x1368 x187))
(assert (x460 x1656))
(assert (x338 x856))
(assert (x338 x29))
(assert (x1513 x297))
(assert (x338 x862))
(assert (x338 x974))
(assert (x338 x368))
(assert (x307 x1627 32))
(assert (x338 x1164))
(assert (= (x1252 (x1453 x416 x394 x1528 x1738 x1055)) x416))
(assert (x325 32 x152))
(assert (=> (<= x722 10000) (= (x1652 x722) 0)))
(assert (x338 x1751))
(assert (x338 x1225))
(assert (=> (>= 10000 x686) (= (x1652 x686) 0)))
(assert (= x312 (x794 (x1709 x543 x1212 x357 x868 x722 x1573 x312))))
(assert (x338 x146))
(assert (x307 x1627 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x338 x1439))
(assert (= x44 (and x1687 x880)))
(assert (= x30 (or x404 (and x727 (not x473)))))
(assert (= (x1550 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653)) x1726))
(assert (= x317 (x1252 (x1364 x317 x1710 x721 x384 x1714 x417))))
(assert (x338 x1055))
(assert (< (x1453 x1670 x421 x779 x109 x1695) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x624) (= (x1652 x624) 0)))
(assert (=> (<= x1063 10000) (= (x1652 x1063) 0)))
(assert (x338 x1370))
(assert (= (x1542 (x963 64 x604 x638)) x638))
(assert (not (x598 (x1364 x416 x1541 x895 x589 x1634 x1093))))
(assert (x1368 x901))
(assert (x338 x1086))
(assert (x1368 115792089237316195423570985008687907852929702298719625575994209400481361428735))
(assert (x338 x668))
(assert (= (x1652 (x1364 x317 x1710 x721 x384 x1714 x417)) (x1364 x317 x1710 x721 x384 x1714 x417)))
(assert (x338 x377))
(assert (= (x1652 (x963 64 x893 x82)) (x963 64 x893 x82)))
(assert (x338 x468))
(assert (x338 x362))
(assert (= (x1022 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460)) x570))
(assert (x598 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (= x222 (x1252 (x1582 x222 x170 x1170 x367))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x963 64 x550 3)))
(assert (=> (>= 10000 x1184) (= 0 (x1652 x1184))))
(assert (x1368 255))
(assert (x338 x1347))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1364 x1670 x1697 x1176 x262 x287 x196)))
(assert (=> (>= 10000 x109) (= 0 (x1652 x109))))
(assert (x338 x1715))
(assert (x338 x27))
(assert (> (x963 x317 x447 x8) 10000))
(assert (< 10000 (x1582 x543 x1269 x1028 x936)))
(assert (x338 x1210))
(assert (x338 x1501))
(assert (= (x1022 (x1364 x197 x1504 x988 x1610 x441 x145)) x1610))
(assert (= x1462 (and x483 x1450)))
(assert (=> (<= x348 10000) (= (x1652 x348) 0)))
(assert (x338 x8))
(assert (x338 x1388))
(assert (x338 x1726))
(assert (=> (<= x1639 10000) (= (x1652 x1639) 0)))
(assert (= (x1550 (x963 64 x1339 2)) x1339))
(assert (= (x1022 (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442)) x558))
(assert (=> (>= 10000 x247) (= (x1652 x247) 0)))
(assert (x338 x889))
(assert (= x1077 (=> (= x1173 (= 0 x1350)) (and (=> (and (not x1173) (and (or (and (and (= x595 (x1311 x799)) (= (x466 115792089237316195423570985008687907852929702298719625575994209400481361428735 x595) x577) (= x1128 (+ x655 x577)) (= x539 (x466 1329227995784915872903807060280344575 x1013)) (= (* x539 256) x655)) x516) (not x516)) (= (= x1198 0) x516))) x1011) (=> (and (= x1054 x559) x1173) x255)))))
(assert (x338 x921))
(assert (=> (>= 10000 x692) (= (x1652 x692) 0)))
(assert (x338 x371))
(assert (x338 x1506))
(assert (> (x530 x197 x1693 x976 x558 x1114 x1422 x290 x1442) 10000))
(assert (= x287 (x164 (x1364 x1670 x1697 x1176 x262 x287 x196))))
(assert (x941 x1319))
(assert (x1513 x122))
(assert (x338 x1420))
(assert (= (x1652 (x1288 x416 x1451)) (x1288 x416 x1451)))
(assert (x338 x384))
(assert (x338 x634))
(assert (x598 18446744073709551615))
(assert (x1368 x1559))
(assert (=> (>= 10000 x1250) (= (x1652 x1250) 0)))
(assert (x338 x557))
(assert (x338 x1459))
(assert (= (and x804 x592) x1650))
(assert (x338 x1610))
(assert (x338 x1575))
(assert (= (and x1351 (not x1201)) x579))
(assert (= (x1550 (x1709 x543 x1212 x357 x868 x722 x1573 x312)) x1212))
(assert (= x196 (x1377 (x1364 x1670 x1697 x1176 x262 x287 x196))))
(assert (=> (>= 10000 x1508) (= (x1652 x1508) 0)))
(assert (x338 x1259))
(assert (x338 x1657))
(assert (< 10000 (x1364 x222 x761 x134 x1588 x671 x766)))
(assert (= x917 (=> (and (>= 127 x1748) (<= x1748 127) (= (x509 (- x450 x1594)) x1287) (= (x35 36) x952) (<= 0 x415) (<= 0 x680) (> x29 x1144) (>= x1284 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232) (= x1100 (x573 160)) (<= x695 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x968 x596) (not (> x756 x1073)) (not (< x450 x891)) (<= x1570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x758) x451) (>= 1461501637330902918203684832716283019655932542975 x453) (>= x1493 0) (>= 18446744073709551615 x1143) (<= x851 1461501637330902918203684832716283019655932542975) (= (> (x1251 x453) 0) x1117) (<= 0 x1570) (= (+ x3 63) x909) (= (+ x676 x797) x578) (not (< x657 x1557)) (= (+ x1284 128) x968) x904 (= x166 (> (x1251 x1263) 0)) (<= 0 x1485) (= x1594 (+ x1586 x129)) (= x1557 (+ x29 192)) (<= x1493 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819486 x1287) (<= 450 x1144) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x450) (= x1144 (+ x1073 x276)) (> x1557 x29) (= (x815 x911) x647) (= (+ 32 x578) x1421) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1485) (>= x253 0) (= x756 (+ 64 x596)) (<= 0 x28) (= x1142 (x573 x578)) (= (x815 x1594) x228) (not (= x972 x453)) (>= x1583 68) (>= 18446744073709551615 x1144) (<= 192 x1287) (<= 32 x158) (> x387 x657) (= (+ x1073 32) x1378) (>= x851 0) (>= x230 0) (< x756 x1073) (<= x28 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x295) (not (< x387 x657)) (< x1213 x1481) (= x1741 (+ x1421 x1142)) (<= 1 x453) (>= 1461501637330902918203684832716283019655932542975 x972) (<= x77 134217728) (<= 64 x1731) (> x1744 x601) (= (x573 x1569) x676) (>= 18446744073709551230 x1420) (not (> x1741 x1481)) (= false x167) (= x469 false) (= (+ x1281 31) x1258) (= x1032 (+ 63 x1711)) (<= 0 x359) (not (= x272 x453)) (= x1433 (x815 x1403)) (not (< x1583 x1052)) (= x1716 (x573 x797)) (= (* (- x77 1) 32) x601) (>= x1534 0) (= x758 (+ 31 x952)) (<= 0 x1354) (<= x1433 1461501637330902918203684832716283019655932542975) (not (< x1144 x1073)) (= (+ x1688 32) x911) (>= 1461501637330902918203684832716283019655932542975 x1263) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x359) (>= x114 0) (<= x1209 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x815 x129) x1586) (= x362 32) (<= 386 x387) (or (>= x1144 115792089237316195423570985008687907853269984665640564039457584007913129639745) (<= x1144 18446744073709551038)) (< x1073 x1144) (= x1627 (+ x1142 31)) (> x450 x948) (= (+ x1557 192) x657) (= (x1384 128) x1353) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1271) x1284) (= (x815 x1685) x1281) (= x891 (+ x1065 x1281)) (<= x1353 57896044618658097711785492504343953926634992332820282019728792003956564819807) (> x657 x1557) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639745 x1144) (<= x1144 18446744073709551038)) (>= 18446744073709551166 x276) (= (+ x1073 32) x129) (< x596 x756) (>= x245 0) (<= x1100 18446744073709551615) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819807 x1731) (<= x1142 18446744073709551615) x58 (>= x695 0) (not (= x1263 x453)) (= (x815 x274) x1143) (= (+ 68 x952) x1052) (>= x1232 0) (<= 0 x1209) (<= x230 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x98 (x815 x631)) (<= x387 18446744073709551615) (= x1685 (+ x1143 x1594)) (<= x1124 4294967295) (= (+ 32 x797) x1569) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x295) (= x276 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1032)) (= x1065 (+ 32 x1685)) (<= x680 1461501637330902918203684832716283019655932542975) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x909) x1420) x1117 (= x1271 (+ x451 63)) (>= x972 1) (= x1623 (+ 32 x1073)) (<= x1144 18446744073709551229) (<= x114 1461501637330902918203684832716283019655932542975) (= (+ x1230 68) x833) (= (+ x578 31) x1213) (= 128 x1358) (not (= x1263 x972)) (= x818 3391066381) (<= x1144 18446744073709551229) (= x915 (+ 32 x657)) (= x344 (x815 x1688)) (= x1731 (x509 (- x1481 x797))) (<= x1281 18446744073709551615) (= (+ x911 32) x274) (= x1124 x1744) (= x948 (+ 31 x1685)) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1627) x1711) (= (x1655 (+ x129 x158)) x450) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1354) (not (= x1263 x272)) (= x1580 (+ x952 160)) x166 (>= 1461501637330902918203684832716283019655932542975 x517) (>= x1263 1) (= x949 (<= x423 224)) (= x833 x1583) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1258) x3) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819486 x158) (>= x158 115792089237316195423570985008687907853269984665640564039457584007908834672739)) (>= x269 0) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639745 x1144) (>= 18446744073709551038 x1144)) (<= x415 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1481 (+ 160 x1353)) (<= 1 x272) (<= x245 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x756 64) x1073) (<= 0 x517) (<= x24 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 18446744073709551229 x1144) (<= x158 57896044618658097711785492504343953926634992332820282019728792003956564819486) (= x904 (> (x1251 x272) 0)) (= x158 (x102 x1073)) (= x596 (+ x968 192)) (<= x98 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x1586) (not (= x272 x972)) (<= 1 x1383) (<= 673 x450) (= x387 (+ x1420 x657)) (= x58 (> (x1251 x972) 0)) (>= x24 0) (<= x1583 4294967364) (= (x1655 (+ x1144 192)) x29) (>= 4294967296 x952) (>= 4294967390 x1284) (= (+ x1403 32) x1688) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x253) (= x631 (+ 32 x1594)) (<= x272 1461501637330902918203684832716283019655932542975) (<= x1744 x1230) (>= x1353 64) (<= 0 x77) (= (x102 x1073) x423) (<= x1534 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x676) (= x797 (+ 160 x1100)) (>= 1461501637330902918203684832716283019655932542975 x269) (= x1230 (* x77 32)) (= (x1251 x272) x1383) (= x1403 (+ x631 32))) (and (=> (and (= (x815 x1506) x1484) (= x1725 (x1655 (+ 32 x1651))) (= (+ x1378 32) x1) (= x759 (x1582 x423 x300 x1484 x2)) (= x603 (+ 96 x1378)) (= x1613 (x815 x1378)) (= x83 (x475 0)) (= (+ x1378 96) x1549) (= x1088 (x815 x1549)) (= x256 (x815 x330)) (= x4 (+ 96 x1378)) (= x1250 (x815 x1671)) (= x955 (x963 x423 x1613 x340)) (= x567 (x509 (- x689 x387))) (= x689 (x1655 (+ x1725 x1278))) (= x1629 (x1655 (+ x521 32))) (= (+ 160 x1378) x346) (= (x815 x1179) x1472) (= x942 (x1655 (+ x1505 32))) (= x296 (x530 x423 x740 x1370 x348 x1602 x1250 x481 x990)) (= x330 (+ 64 x1378)) (= x1060 (+ 32 x1378)) (= (x815 x1378) x311) (= (+ 32 x1378) x1506) (= (x815 x985) x1444) (= (x815 x1632) x692) (<= x387 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x696 (x815 x1060)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x387) (= (+ x1378 64) x1113) (= x1529 (x815 x1609)) (= x740 (x815 x1378)) (< x387 x689) (= (x815 x346) x1082) (= x1089 (+ 192 x1378)) (= x521 (x1655 (+ 32 x409))) (= (x815 x603) x844) (= (x815 x693) x2) (= x1278 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x187)) (= x1138 (+ x1378 160)) (>= x689 1) (= x281 (x815 x1378)) (= x159 (ite (= x423 0) x83 (ite (<= x423 32) x1034 (ite (<= x423 64) x955 (ite (<= x423 96) x759 (ite (>= 128 x423) x309 (ite (<= x423 160) x1642 (ite (<= x423 192) x1630 (ite (>= 224 x423) x296 x112))))))))) (= x32 (x815 x1378)) (= (x815 x1378) x258) (= (x815 x1378) x300) (= x1609 (+ 64 x1378)) (= x544 (x1655 (+ x387 32))) (= (x815 x449) x754) (= (x815 x609) x1370) (= (x1364 x423 x311 x1126 x256 x754 x1472) x1642) (= x985 (+ 32 x1378)) (= x449 (+ x1378 96)) (= x896 (+ 32 x657)) (= x309 (x1453 x423 x281 x1444 x692 x844)) (= (x815 x1064) x340) (= (x815 x1078) x247) (<= x387 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x409 (x1655 (+ x942 32))) (= (x815 x1089) x990) (= x1632 (+ 64 x1378)) (= (x509 (- x567 32)) x107) (= (x1137 x657) x1752) (= x1034 (x1288 x423 x32)) (= (+ x1378 32) x609) (= (+ x1378 32) x1064) (= (+ 64 x1378) x693) (= x1661 (x1215 x387)) (= (+ x1378 128) x1179) (= x1126 (x815 x1)) (= x187 (x1655 (+ x1752 31))) (= (x815 x1138) x481) (= (x815 x4) x1602) (= x1630 (x1709 x423 x258 x696 x1529 x1088 x247 x1082)) (= (x1655 (+ 32 x387)) x643) (= (+ x1378 128) x1078) (= x1671 (+ x1378 128)) (= x1616 (x1655 (+ x544 32))) (= x1651 (x1655 (+ 192 x1616))) (= (x1655 (+ 32 x1616)) x1505) (= x714 (<= x1661 224)) (= (x815 x1113) x348)) (and x714 (=> (and (and (= (x1655 (+ 64 x643)) x690) (= false x1463) (= (+ x610 64) x1268) (= (+ 32 x610) x1389) (= x1589 (x181 x643)) (= (x1655 (+ x643 192)) x1248) (= (x1453 x1661 x924 x1152 x996 x738) x1624) (= (x1655 (+ x643 96)) x42) (<= 0 x152) (= x1193 (x1655 (+ x1010 32))) (= x621 (x530 x1661 x974 x212 x1713 x54 x843 x616 x1643)) (= x610 (x1655 (+ x380 x689))) (= (x1655 (+ x643 64)) x1692) (= x1333 (x181 x892)) (= x616 (x181 x865)) (= false x626) (= x959 x879) (= (x1655 (+ 96 x643)) x906) (= x547 x1054) (= x489 (x181 x643)) (= x95 (x181 x261)) (= (x181 x643) x1369) (= false x882) (= (x869 x14) x135) (= x85 (+ x657 32)) (= (x181 x643) x1395) (= x334 (x1655 (+ 32 x643))) (= 192 x188) (<= x905 4294967295) (= x846 (+ x242 100)) (= (x1655 (+ x643 32)) x7) (>= x987 100) (= (x181 x42) x90) (= x1340 (x1655 (+ 32 x1116))) (= x426 false) (= (x1655 (+ 32 x1313)) x1116) (>= x89 1) (= x1356 (x1137 x657)) (>= 4294967396 x987) (= x653 (x181 x334)) (= x1643 (x181 x1248)) (>= 127 x1439) (= x54 (x181 x1470)) (= (x181 x108) x704) (= (x181 x1692) x241) (>= x242 x542) (= x1399 false) (= (x1655 (+ 32 x1340)) x557) (= (x181 x7) x1152) (= (x869 x1389) x538) (= (x1655 (+ x643 32)) x201) (= x1543 (x181 x1461)) (= x1007 (x1655 (+ x1674 32))) (= (x181 x1385) x1733) (= (x1655 (+ x643 128)) x1705) (= x89 (x1251 x972)) (= x763 (x963 x1661 x489 x95)) (= x1737 x159) (= x494 (x869 x437)) (= x1674 (x1655 (+ x689 32))) (= (x1655 (+ x643 160)) x865) (= x905 (x869 x27)) (= (x1655 (+ x610 x494)) x27) (= x712 32) (= x974 (x181 x643)) (= x261 (x1655 (+ 32 x643))) (= false x400) (= (x181 x201) x212) (= (+ 160 x610) x437) (= x1124 x542) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x494 x610)) (= (x1288 x1661 x1589) x414) (= x879 (x869 x162)) (= x162 (+ x610 96)) (> x542 x934) (= x242 (* x152 32)) (= (x1655 (+ x643 64)) x1385) (= (x475 0) x1436) (= (x1655 (+ x643 64)) x1338) (= x1111 x814) (= (x869 x1268) x814) (= x996 (x181 x690)) (< (+ x380 x689) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1209 0) (= x1407 x580) (= x538 x710) (= x478 false) (>= 134217728 x152) (= (x181 x906) x738) (= x1010 (x1655 (+ x1674 192))) (= x14 (+ x610 128)) (= (x181 x643) x681) (= (x181 x1338) x1713) (= x1229 (x181 x1226)) (= x1407 (x869 x610)) (= x651 (+ x27 32)) (= (x1655 (+ x643 160)) x892) (= (x1709 x1661 x1369 x1467 x1229 x1543 x724 x1333) x684) (= x462 (x1582 x1661 x681 x1437 x241)) (= (x1655 (+ 32 x1007)) x1313) (= (x1655 (+ x643 96)) x1461) (= (ite (= 0 x1661) x1436 (ite (<= x1661 32) x414 (ite (>= 64 x1661) x763 (ite (>= 96 x1661) x462 (ite (>= 128 x1661) x1624 (ite (<= x1661 160) x160 (ite (<= x1661 192) x684 (ite (<= x1661 224) x621 x784)))))))) x1737) (= (x181 x1705) x724) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639775 x610) (= x185 2689206675) (= (x181 x1161) x1467) (= false x302) (= (x869 x689) x380) (= (x181 x643) x924) (= (x1655 (+ x643 96)) x1470) (= 64 x670) (= (x181 x771) x1437) (= (x1655 (+ 32 x643)) x771) (<= x27 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x353 4) (= x922 false) (= (x1655 (+ 32 x643)) x1161) (= x160 (x1364 x1661 x1395 x653 x1733 x90 x704)) (= x135 x10) (= x934 (* 32 (- x152 1))) (= x314 false) (= x1493 x1519) (= (x1655 (+ 128 x643)) x1085) (= x1226 (x1655 (+ 64 x643))) (>= 127 x1439) (= (x1655 (+ 128 x643)) x108) (= (x181 x1085) x843)) (and (and (and (= x846 x987) (= x1174 false) (= x1519 x1199)) (and (and (= x1013 x245) (and (and (<= x983 18446744073709551615) (= (x509 (- x1074 x734)) x1197) (<= 322 x983) (= (+ 63 x251) x925) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x122) x251) (>= 18446744073709551230 x735) (= x1666 (ite x1380 1 0)) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x925) x552) (= (+ 32 x734) x1391) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x413) x735) (= x331 (+ x1360 x321)) (= (x1334 x1672) x1175) (= (x1334 x1294) x1339) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819614 x1159) (= x73 128) (> x1548 x1654) (= (x63 x877) x1360) (= x114 x633) (= x243 (+ 31 x877)) (= (x1438 x272) x442) (= x1192 (+ x1182 100)) (= x1672 (+ 32 x1294)) (or (>= 18446744073709551038 x983) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639745 x983)) (<= 192 x1465) (< x683 x1654) (= x137 (+ x6 31)) x1056 (= x1086 (+ x810 x1599)) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x628) x910) (= (+ 31 x1182) x1195) (not (< x130 x1459)) (= (+ 160 x1468) x734) (>= 4294967296 x1182) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819614 x1159) (<= 115792089237316195423570985008687907853269984665640564039457584007908834672739 x1159)) (<= 1 x21) (= x445 false) (<= 32 x1159) (= x149 (x63 x734)) (= x321 (+ x877 32)) (= false x932) (< x983 x328) (= (+ x1086 32) x744) (<= x1548 18446744073709551615) (= x117 (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x137)) (> x1325 x142) (= (x1311 x994) x21) (= (+ x734 x750) x877) (>= x1548 386) (>= x130 545) (or (<= x983 18446744073709551038) (>= x983 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (= (+ 128 x910) x1512) (<= x1501 127) (<= 1 x375) (= (x63 160) x1468) (> x1074 x243) (<= x130 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 127 x1501) (>= x39 1) (= x1654 (+ x683 192)) (= x56 (x963 64 x1199 2)) (not (< x1548 x1654)) (= (+ 1 x1221) x25) (= x1294 (+ 32 x810)) (= (x1334 x886) x378) (= x994 (x963 64 x18 x25)) (= (+ x1512 64) x142) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819614 x1465) (not (< x983 x1041)) (= (= x1199 x604) x1380) (<= x983 18446744073709551229) (>= 18446744073709551615 x1468) (= x442 x356) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819807 x1197) (= (+ x850 160) x1074) (= (x737 68) x1182) (= x750 (x63 x1391)) (= x926 x1307) (= x1159 (x310 x1041)) (= x1325 (+ 64 x142)) (<= x750 18446744073709551615) (= x328 (x1655 (+ 192 x983))) (= x1307 x1199) (= x1465 (x509 (- x130 x810))) (= x886 (+ 32 x1041)) (= x1499 (x1334 x1464)) (= (x1334 x1086) x6) (= x375 (x1251 x272)) (= (+ x398 63) x628) (= (+ x1464 32) x1398) (> x130 x299) (= (x1098 128) x850) (= (+ x1041 32) x1551) (= (x881 x1199 x18) x39) (< x1325 x1041) (= x1221 (+ 1 x56)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819807 x850) (<= x1175 1461501637330902918203684832716283019655932542975) (= x683 (+ 192 x328)) (= (x466 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1195) x398) (= x1619 3983038810) (= x604 (x1334 x1008)) (not (> x1325 x1041)) (= 1 x1535) (<= x552 18446744073709551294) (= 1 x477) (= (+ 31 x1360) x122) (= (x1015 x633) x391) (= x413 (+ x117 63)) (<= x1339 1461501637330902918203684832716283019655932542975) (<= x39 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x328 x683) (not (< x1074 x331)) (= (+ x6 x744) x1459) (= (+ x735 x1654) x1548) (<= x1360 18446744073709551615) (>= 18446744073709551229 x983) (= x1056 (= x39 x21)) (>= 4294967390 x910) (= (+ x1654 32) x966) (>= x910 1) (= x1008 (+ x1672 32)) (<= x1599 18446744073709551615) (= (+ x1182 160) x1558) (< x1512 x142) (= (+ x1041 x552) x983) (or (>= x983 115792089237316195423570985008687907853269984665640564039457584007913129639745) (<= x983 18446744073709551038)) (= x299 (+ x1086 31)) (< x1041 x983) (= x1464 (+ 32 x1008)) (= x1599 (x1334 x1398)) (= x1241 (x1334 x810)) (not (< x987 x1192)) (not (> x683 x1654)) (>= 18446744073709551615 x378) (<= 64 x850) (>= 18446744073709551615 x6) (= (+ x378 x886) x810) (= 1 x661) (= x1041 (+ x1325 64)) (<= 64 x1197) (= (x1655 (+ x886 x1159)) x130) (>= 18446744073709551229 x983)) (or (and (= x555 x1499) x1380) (and (= x1666 1) (not x1380))))) (= x114 x18))) (= x1519 x266))) x878))) x949))))
(assert (= (and x15 x556) x1110))
(assert (=> (>= 10000 x558) (= 0 (x1652 x558))))
(assert (= (x164 (x1453 x222 x705 x1027 x502 x1329)) x1329))
(assert (= x256 (x1022 (x1364 x423 x311 x1126 x256 x754 x1472))))
(assert (x1513 x1258))
(assert (x1513 256))
(assert (= (x963 x423 x1613 x340) (x1652 (x963 x423 x1613 x340))))
(assert (x338 x441))
(assert (= (x1652 134217728) 0))
(assert (x338 x51))
(assert (x338 x297))
(assert (=> (>= 10000 x754) (= (x1652 x754) 0)))
(assert (= (and x1130 (not x128)) x1494))
(assert (x338 x1358))
(assert (= (x1652 (x1364 x1151 x389 x608 x1575 x217 x1314)) (x1364 x1151 x389 x608 x1575 x217 x1314)))
(assert (< 10000 (x1453 x1151 x1704 x1536 x753 x1233)))
(assert (x941 x405))
(assert (x420 (x881 x1199 x18)))
(assert (x338 x956))
(assert (x338 x379))
(assert (x338 x312))
(assert (x1513 x1319))
(assert (= (=> (and (= (>= 224 x1151) x501) (= x648 (x1655 (+ 32 x1423))) (= x1423 (x1655 (+ x639 x1223))) (= x416 (x509 (- x648 x639))) (= (x509 (- x416 32)) x1151) (= x1105 (x1655 (+ x1223 x639)))) (and (=> (and (= x1084 (x1035 x354)) (= (x1035 x639) x389) (= x624 (x1035 x982)) (= (x1364 x1151 x389 x608 x1575 x217 x1314) x399) (= (x1035 x980) x921) (= (x1035 x470) x1653) (= x611 (x1655 (+ x639 64))) (= (x1655 (+ 64 x639)) x354) (= x753 (x1035 x541)) (= x1435 (x1655 (+ 32 x639))) (= (x1655 (+ 64 x639)) x541) (= x565 (x1288 x1151 x485)) (= x836 (ite (= x1151 0) x1684 (ite (>= 32 x1151) x565 (ite (<= x1151 64) x632 (ite (>= 96 x1151) x327 (ite (>= 128 x1151) x1228 (ite (<= x1151 160) x399 (ite (>= 192 x1151) x506 (ite (<= x1151 224) x827 x138))))))))) (= x470 (x1655 (+ x639 192))) (= x919 (<= x416 224)) (= x980 (x1655 (+ 32 x639))) (= x327 (x1582 x1151 x884 x967 x1084)) (= x1702 (x1035 x636)) (= x1723 (x1655 (+ 64 x639))) (= x1203 (x1035 x984)) (= x762 (x1655 (+ x639 64))) (= x884 (x1035 x639)) (= (x1655 (+ x639 128)) x636) (= x1575 (x1035 x1723)) (= x1233 (x1035 x1158)) (= (x963 x1151 x323 x282) x632) (= (x1655 (+ 128 x639)) x937) (= (x1035 x515) x427) (= (x1035 x639) x323) (= (x1035 x639) x1660) (= x485 (x1035 x639)) (= (x1655 (+ 128 x639)) x717) (= x984 (x1655 (+ x639 160))) (= (x1655 (+ 96 x639)) x1024) (= (x1035 x1749) x368) (= (x1655 (+ 32 x639)) x752) (= x1684 (x475 0)) (= (x1035 x1435) x1536) (= x1314 (x1035 x717)) (= (x1035 x1024) x694) (= (x1035 x762) x1429) (= (x1655 (+ 96 x639)) x1749) (= (x1035 x927) x608) (= x927 (x1655 (+ x639 32))) (= x217 (x1035 x858)) (= x769 (x1035 x611)) (= (x1035 x1388) x967) (= x515 (x1655 (+ 32 x639))) (= (x1035 x639) x1726) (= x827 (x530 x1151 x1726 x427 x1429 x694 x503 x1203 x1653)) (= (x1453 x1151 x1704 x1536 x753 x1233) x1228) (= x982 (x1655 (+ x639 160))) (= (x1655 (+ 32 x639)) x1388) (= (x1655 (+ 96 x639)) x1158) (= (x1035 x639) x1704) (= x858 (x1655 (+ 96 x639))) (= x282 (x1035 x752)) (= (x1709 x1151 x1660 x921 x769 x368 x1702 x624) x506) (= x503 (x1035 x937))) (and x919 (=> (and (= (x1655 (+ 96 x639)) x957) (= x461 (x1655 (+ 32 x639))) (= (x1655 (+ 32 x639)) x313) (= x254 (x1035 x639)) (= x1451 (x1035 x639)) (= x890 (x1655 (+ x639 64))) (= x1738 (x1035 x91)) (= x1102 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x267)) (= x829 (x1655 (+ 128 x639))) (= x195 (ite (= x416 0) x1640 (ite (<= x416 32) x1473 (ite (>= 64 x416) x1283 (ite (<= x416 96) x1665 (ite (>= 128 x416) x587 (ite (>= 160 x416) x951 (ite (<= x416 192) x995 (ite (<= x416 224) x40 x1717))))))))) (= (x475 0) x1640) (= x1304 (x1035 x1323)) (= (x1655 (+ 64 x639)) x709) (= (x1035 x527) x589) (= x895 (x1035 x1441)) (= x995 (x1709 x416 x1070 x821 x1366 x1409 x336 x1492)) (= x1528 (x1035 x1699)) (= x1541 (x1035 x639)) (= (x1035 x461) x821) (= x40 (x530 x416 x194 x1679 x570 x1379 x1304 x576 x1460)) (= x686 (x1035 x639)) (= (x1655 (+ x639 96)) x472) (= (x1035 x313) x1355) (= (x1582 x416 x254 x371 x446) x1665) (= x1699 (x1655 (+ x639 32))) (= x490 (x1655 (+ x639 64))) (= x1323 (x1655 (+ 128 x639))) (= x1121 (x1655 (+ 32 x639))) (= x587 (x1453 x416 x394 x1528 x1738 x1055)) (= (x1035 x315) x371) (= x1070 (x1035 x639)) (= (x341 x195) x267) (= x1679 (x1035 x1121)) (= x1625 (x1655 (+ x639 160))) (= x570 (x1035 x490)) (= (x1655 (+ x639 96)) x59) (= x701 (x1655 (+ x639 96))) (= (x1035 x709) x1366) (= (x1364 x416 x1541 x895 x589 x1634 x1093) x951) (= x315 (x1655 (+ x639 32))) (= (x1035 x639) x194) (= (x1655 (+ 64 x639)) x527) (= (x1655 (+ 192 x639)) x492) (= x1473 (x1288 x416 x1451)) (= (x1035 x1625) x1492) (= (x1655 (+ 32 x639)) x1441) (= x446 (x1035 x890)) (= (x1035 x957) x1055) (= (x1655 (+ x639 128)) x1443) (= (x1035 x1443) x336) (= x394 (x1035 x639)) (= (x1035 x492) x1460) (= x1409 (x1035 x59)) (= x1168 (x1655 (+ 160 x639))) (= x91 (x1655 (+ x639 64))) (= (x1035 x472) x1379) (= x1093 (x1035 x829)) (= x1283 (x963 x416 x686 x1355)) (= (x1035 x701) x1634) (= x576 (x1035 x1168))) (and (=> (and (not x1102) (and (= (x1655 (+ x267 1)) x480) (= x876 (= x308 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) (and (=> (and (and (= x1332 (x1655 (+ 1 x308))) (= (x1655 (+ x308 1)) x874) (= 1 x1647)) (not x876)) x283) (=> x876 x803))) (=> x1102 x803))))) x501)) x1721))
(assert (x338 x115))
(assert (= (x1296 (x530 x317 x1216 x440 x1187 x1112 x702 x801 x401)) x401))
(assert (x307 x595 256))
(assert (=> (>= 10000 x1702) (= 0 (x1652 x1702))))
(assert (= (x1542 (x1364 x222 x761 x134 x1588 x671 x766)) x134))
(assert (x338 x1558))
(assert (=> (<= x1112 10000) (= 0 (x1652 x1112))))
(assert (= (x1652 115792089237316195423570985008687907853269984665640564039457584007908834672739) 0))
(check-sat)
(exit)
