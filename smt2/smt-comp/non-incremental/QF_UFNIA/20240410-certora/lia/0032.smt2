(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x2046 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1165 () Int)
(declare-fun x3092 () Int)
(declare-fun x3011 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x2641 () Int)
(declare-fun x1418 () Int)
(declare-fun x3169 () Bool)
(declare-fun x1813 () Int)
(declare-fun x3358 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x1733 () Int)
(declare-fun x1203 () Bool)
(declare-fun x4027 () Bool)
(declare-fun x939 () Bool)
(declare-fun x443 () Bool)
(declare-fun x207 () Bool)
(declare-fun x3896 () Bool)
(declare-fun x1006 () Int)
(declare-fun x3851 () Int)
(declare-fun x3305 () Int)
(declare-fun x971 () Bool)
(declare-fun x3728 () Int)
(declare-fun x1667 () Int)
(declare-fun x2196 () Int)
(declare-fun x1623 () Bool)
(declare-fun x3892 () Bool)
(declare-fun x1751 () Int)
(declare-fun x2806 () Bool)
(declare-fun x3162 () Bool)
(declare-fun x3646 () Int)
(declare-fun x1816 () Int)
(declare-fun x3944 () Int)
(declare-fun x3679 () Int)
(declare-fun x2585 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x2086 () Int)
(declare-fun x464 () Bool)
(declare-fun x4025 () Int)
(declare-fun x4144 () Int)
(declare-fun x2346 () Int)
(declare-fun x2067 () Int)
(declare-fun x3225 () Int)
(declare-fun x4168 () Bool)
(declare-fun x911 () Bool)
(declare-fun x357 () Int)
(declare-fun x1299 () Int)
(declare-fun x895 () Int)
(declare-fun x600 () Int)
(declare-fun x1798 (Int) Int)
(declare-fun x2141 () Int)
(declare-fun x645 () Int)
(declare-fun x3028 () Int)
(declare-fun x3323 () Int)
(declare-fun x4106 () Int)
(declare-fun x1722 () Int)
(declare-fun x775 () Int)
(declare-fun x3016 () Bool)
(declare-fun x3263 () Bool)
(declare-fun x4020 () Int)
(declare-fun x3575 () Int)
(declare-fun x504 () Int)
(declare-fun x3271 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x332 () Int)
(declare-fun x993 () Bool)
(declare-fun x2743 () Int)
(declare-fun x3507 () Bool)
(declare-fun x3640 () Bool)
(declare-fun x2516 () Int)
(declare-fun x4146 () Int)
(declare-fun x596 () Int)
(declare-fun x2785 () Bool)
(declare-fun x4253 () Int)
(declare-fun x362 () Bool)
(declare-fun x2018 () Int)
(declare-fun x1598 () Int)
(declare-fun x4172 () Int)
(declare-fun x3489 () Bool)
(declare-fun x4190 () Int)
(declare-fun x3371 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1684 () Int)
(declare-fun x4158 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x3283 () Int)
(declare-fun x1687 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x2885 () Bool)
(declare-fun x2299 () Bool)
(declare-fun x162 () Int)
(declare-fun x2356 () Bool)
(declare-fun x3492 () Bool)
(declare-fun x1222 () Int)
(declare-fun x1055 () Int)
(declare-fun x2927 () Int)
(declare-fun x1051 () Bool)
(declare-fun x61 () Bool)
(declare-fun x2881 () Bool)
(declare-fun x2839 () Bool)
(declare-fun x753 () Int)
(declare-fun x2933 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x3059 () Int)
(declare-fun x2161 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x469 () Bool)
(declare-fun x1878 () Int)
(declare-fun x4207 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x3327 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1696 () Int)
(declare-fun x521 (Int Int) Int)
(declare-fun x2318 () Int)
(declare-fun x1544 () Bool)
(declare-fun x3390 () Int)
(declare-fun x3550 () Int)
(declare-fun x2545 () Int)
(declare-fun x1160 () Int)
(declare-fun x1818 () Bool)
(declare-fun x3441 () Int)
(declare-fun x2875 () Bool)
(declare-fun x201 () Int)
(declare-fun x1651 () Bool)
(declare-fun x3579 () Bool)
(declare-fun x331 () Bool)
(declare-fun x3373 () Int)
(declare-fun x2895 () Int)
(declare-fun x2286 () Bool)
(declare-fun x1434 () Int)
(declare-fun x2064 () Int)
(declare-fun x3274 () Bool)
(declare-fun x3659 () Int)
(declare-fun x3461 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x1322 () Int)
(declare-fun x510 () Bool)
(declare-fun x1443 () Int)
(declare-fun x175 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x3821 () Bool)
(declare-fun x907 () Bool)
(declare-fun x2326 () Int)
(declare-fun x3712 () Int)
(declare-fun x619 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x719 () Int)
(declare-fun x3242 () Bool)
(declare-fun x3196 () Int)
(declare-fun x1514 () Int)
(declare-fun x2146 () Bool)
(declare-fun x1440 () Int)
(declare-fun x22 () Bool)
(declare-fun x2200 (Int) Int)
(declare-fun x4119 () Int)
(declare-fun x3561 () Int)
(declare-fun x277 () Bool)
(declare-fun x2660 () Int)
(declare-fun x1184 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x172 () Int)
(declare-fun x2305 () Bool)
(declare-fun x413 () Bool)
(declare-fun x2576 () Bool)
(declare-fun x3298 () Bool)
(declare-fun x975 () Int)
(declare-fun x3432 () Int)
(declare-fun x3873 () Int)
(declare-fun x807 () Int)
(declare-fun x649 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x2846 () Int)
(declare-fun x77 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x3019 () Int)
(declare-fun x919 () Bool)
(declare-fun x24 () Int)
(declare-fun x3360 () Bool)
(declare-fun x3482 () Int)
(declare-fun x1460 () Int)
(declare-fun x4218 () Bool)
(declare-fun x3841 () Int)
(declare-fun x2965 () Bool)
(declare-fun x945 () Bool)
(declare-fun x4116 () Bool)
(declare-fun x2528 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x3834 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x1503 () Int)
(declare-fun x2889 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x1997 () Bool)
(declare-fun x1162 () Int)
(declare-fun x3391 () Int)
(declare-fun x3174 () Int)
(declare-fun x884 () Int)
(declare-fun x609 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x1035 () Int)
(declare-fun x2946 () Bool)
(declare-fun x4044 () Int)
(declare-fun x616 () Int)
(declare-fun x2727 () Bool)
(declare-fun x2412 () Int)
(declare-fun x1250 () Int)
(declare-fun x2013 () Bool)
(declare-fun x27 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x2261 () Int)
(declare-fun x436 () Bool)
(declare-fun x2595 () Bool)
(declare-fun x1067 () Int)
(declare-fun x333 () Bool)
(declare-fun x1612 () Int)
(declare-fun x1579 () Bool)
(declare-fun x3483 () Int)
(declare-fun x897 () Int)
(declare-fun x3364 () Int)
(declare-fun x2190 () Int)
(declare-fun x986 () Int)
(declare-fun x437 () Int)
(declare-fun x2015 () Int)
(declare-fun x1351 () Bool)
(declare-fun x3458 () Bool)
(declare-fun x2776 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x3983 () Bool)
(declare-fun x2865 () Int)
(declare-fun x454 () Int)
(declare-fun x3081 () Int)
(declare-fun x3331 () Bool)
(declare-fun x1377 () Int)
(declare-fun x343 () Bool)
(declare-fun x1516 () Int)
(declare-fun x2974 () Int)
(declare-fun x3716 () Bool)
(declare-fun x2619 () Int)
(declare-fun x1136 () Int)
(declare-fun x1453 () Bool)
(declare-fun x978 () Int)
(declare-fun x2891 () Int)
(declare-fun x3595 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x1931 () Int)
(declare-fun x1553 () Bool)
(declare-fun x731 () Int)
(declare-fun x1270 () Int)
(declare-fun x4089 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x2706 () Bool)
(declare-fun x156 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x1468 () Int)
(declare-fun x182 () Int)
(declare-fun x1072 () Int)
(declare-fun x180 () Int)
(declare-fun x3692 () Int)
(declare-fun x690 () Bool)
(declare-fun x215 () Int)
(declare-fun x1314 () Bool)
(declare-fun x3805 () Int)
(declare-fun x1884 () Bool)
(declare-fun x2541 () Int)
(declare-fun x816 () Bool)
(declare-fun x2272 () Int)
(declare-fun x2023 () Bool)
(declare-fun x636 () Bool)
(declare-fun x1432 () Int)
(declare-fun x620 () Int)
(declare-fun x607 () Int)
(declare-fun x3069 () Int)
(declare-fun x722 () Int)
(declare-fun x840 () Int)
(declare-fun x2448 () Bool)
(declare-fun x2490 () Int)
(declare-fun x2610 () Bool)
(declare-fun x1074 () Int)
(declare-fun x3897 () Int)
(declare-fun x2163 () Int)
(declare-fun x3204 () Int)
(declare-fun x3620 () Bool)
(declare-fun x527 () Int)
(declare-fun x1561 () Bool)
(declare-fun x4061 () Bool)
(declare-fun x506 () Int)
(declare-fun x4201 () Bool)
(declare-fun x2532 () Bool)
(declare-fun x785 () Bool)
(declare-fun x2992 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x3013 () Int)
(declare-fun x2449 () Int)
(declare-fun x3977 () Int)
(declare-fun x1181 () Bool)
(declare-fun x3903 () Bool)
(declare-fun x2476 () Bool)
(declare-fun x608 () Int)
(declare-fun x3722 () Bool)
(declare-fun x930 () Int)
(declare-fun x2101 () Bool)
(declare-fun x452 () Bool)
(declare-fun x3957 () Int)
(declare-fun x1897 () Int)
(declare-fun x2020 () Int)
(declare-fun x1565 () Bool)
(declare-fun x3457 () Bool)
(declare-fun x3463 () Bool)
(declare-fun x519 () Int)
(declare-fun x963 () Bool)
(declare-fun x3116 () Bool)
(declare-fun x3202 () Int)
(declare-fun x1185 () Int)
(declare-fun x2366 () Bool)
(declare-fun x98 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x3916 () Int)
(declare-fun x2153 () Bool)
(declare-fun x3334 () Bool)
(declare-fun x2640 () Int)
(declare-fun x2413 () Bool)
(declare-fun x967 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x2550 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x3848 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x2761 () Int)
(declare-fun x1475 () Int)
(declare-fun x3788 () Int)
(declare-fun x2810 () Bool)
(declare-fun x3599 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x2699 () Int)
(declare-fun x275 () Int)
(declare-fun x1045 () Bool)
(declare-fun x3524 () Int)
(declare-fun x664 () Bool)
(declare-fun x3644 () Bool)
(declare-fun x2138 () Int)
(declare-fun x2857 () Int)
(declare-fun x2671 () Int)
(declare-fun x3596 () Bool)
(declare-fun x756 () Int)
(declare-fun x4244 () Bool)
(declare-fun x3368 () Int)
(declare-fun x430 () Bool)
(declare-fun x393 () Bool)
(declare-fun x153 () Int)
(declare-fun x2271 () Bool)
(declare-fun x3954 () Bool)
(declare-fun x3052 () Bool)
(declare-fun x920 () Bool)
(declare-fun x3966 () Bool)
(declare-fun x2380 () Bool)
(declare-fun x269 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x37 () Int)
(declare-fun x408 () Int)
(declare-fun x529 () Int)
(declare-fun x943 () Int)
(declare-fun x1426 () Int)
(declare-fun x3261 () Int)
(declare-fun x2558 () Bool)
(declare-fun x1161 (Int Int) Int)
(declare-fun x3988 () Bool)
(declare-fun x980 () Int)
(declare-fun x1386 () Int)
(declare-fun x4015 () Bool)
(declare-fun x2773 () Int)
(declare-fun x2573 () Int)
(declare-fun x1133 () Int)
(declare-fun x1706 () Bool)
(declare-fun x2940 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x4208 () Bool)
(declare-fun x2971 () Int)
(declare-fun x3372 () Int)
(declare-fun x2269 () Int)
(declare-fun x279 () Bool)
(declare-fun x191 () Bool)
(declare-fun x538 () Bool)
(declare-fun x4026 () Bool)
(declare-fun x1063 () Int)
(declare-fun x4200 () Bool)
(declare-fun x3185 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x759 () Int)
(declare-fun x1336 () Bool)
(declare-fun x245 () Int)
(declare-fun x3401 () Int)
(declare-fun x2468 () Int)
(declare-fun x255 () Bool)
(declare-fun x765 () Int)
(declare-fun x3464 () Int)
(declare-fun x1762 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x2289 () Int)
(declare-fun x870 () Int)
(declare-fun x3909 () Int)
(declare-fun x3050 () Bool)
(declare-fun x3995 () Int)
(declare-fun x3845 () Int)
(declare-fun x2339 () Int)
(declare-fun x1110 () Bool)
(declare-fun x3184 () Int)
(declare-fun x867 () Int)
(declare-fun x359 () Int)
(declare-fun x10 () Int)
(declare-fun x3374 () Int)
(declare-fun x2807 () Bool)
(declare-fun x4121 () Int)
(declare-fun x1716 () Int)
(declare-fun x4219 () Int)
(declare-fun x1563 () Bool)
(declare-fun x1346 () Int)
(declare-fun x2279 () Bool)
(declare-fun x4250 () Bool)
(declare-fun x1226 () Int)
(declare-fun x2158 () Bool)
(declare-fun x3545 () Bool)
(declare-fun x1702 () Int)
(declare-fun x3131 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x192 () Bool)
(declare-fun x3101 () Int)
(declare-fun x749 () Int)
(declare-fun x2855 () Bool)
(declare-fun x18 () Int)
(declare-fun x3921 () Int)
(declare-fun x3010 () Bool)
(declare-fun x3852 () Bool)
(declare-fun x341 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x196 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x401 () Int)
(declare-fun x4021 () Int)
(declare-fun x4166 () Int)
(declare-fun x2219 () Bool)
(declare-fun x1999 () Int)
(declare-fun x2202 () Bool)
(declare-fun x487 () Bool)
(declare-fun x1895 () Int)
(declare-fun x2635 () Int)
(declare-fun x1835 () Bool)
(declare-fun x2103 () Int)
(declare-fun x3142 () Int)
(declare-fun x490 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x2143 () Int)
(declare-fun x3671 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x2231 () Bool)
(declare-fun x313 () Int)
(declare-fun x1264 () Bool)
(declare-fun x445 () Bool)
(declare-fun x2058 () Bool)
(declare-fun x2864 () Int)
(declare-fun x1316 () Int)
(declare-fun x2781 () Int)
(declare-fun x2112 () Int)
(declare-fun x3516 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x130 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x3743 () Int)
(declare-fun x1774 () Bool)
(declare-fun x241 () Int)
(declare-fun x3212 () Int)
(declare-fun x1114 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x2338 () Int)
(declare-fun x1450 () Int)
(declare-fun x1747 () Bool)
(declare-fun x386 () Int)
(declare-fun x2701 () Bool)
(declare-fun x2206 () Int)
(declare-fun x715 () Bool)
(declare-fun x1061 () Int)
(declare-fun x3454 () Bool)
(declare-fun x20 () Bool)
(declare-fun x190 () Bool)
(declare-fun x429 () Bool)
(declare-fun x2987 () Int)
(declare-fun x3462 () Bool)
(declare-fun x4155 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x501 () Bool)
(declare-fun x3106 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x1023 () Int)
(declare-fun x4037 () Int)
(declare-fun x4110 () Int)
(declare-fun x2334 () Bool)
(declare-fun x80 () Int)
(declare-fun x1734 () Int)
(declare-fun x566 () Int)
(declare-fun x2577 () Bool)
(declare-fun x994 () Bool)
(declare-fun x2771 () Bool)
(declare-fun x1056 () Int)
(declare-fun x4231 () Int)
(declare-fun x2663 () Int)
(declare-fun x2435 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x2090 () Int)
(declare-fun x2557 () Int)
(declare-fun x4007 () Bool)
(declare-fun x701 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x1627 () Int)
(declare-fun x3925 () Int)
(declare-fun x969 () Bool)
(declare-fun x1837 () Bool)
(declare-fun x3240 () Bool)
(declare-fun x246 () Bool)
(declare-fun x1800 () Int)
(declare-fun x3208 () Int)
(declare-fun x3578 () Int)
(declare-fun x998 () Bool)
(declare-fun x771 () Bool)
(declare-fun x2664 () Bool)
(declare-fun x267 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x764 () Int)
(declare-fun x3060 () Bool)
(declare-fun x3919 () Int)
(declare-fun x2588 () Bool)
(declare-fun x3419 () Bool)
(declare-fun x4112 () Int)
(declare-fun x696 () Bool)
(declare-fun x3 () Int)
(declare-fun x3170 () Int)
(declare-fun x1482 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x3047 () Int)
(declare-fun x2820 () Int)
(declare-fun x3178 () Bool)
(declare-fun x4188 () Int)
(declare-fun x3253 () Int)
(declare-fun x4010 () Bool)
(declare-fun x1509 () Int)
(declare-fun x3695 () Bool)
(declare-fun x183 () Int)
(declare-fun x2191 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x2909 () Int)
(declare-fun x626 () Int)
(declare-fun x2668 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x1171 () Int)
(declare-fun x1071 () Bool)
(declare-fun x69 () Int)
(declare-fun x1631 () Bool)
(declare-fun x3898 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x2766 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x285 () Bool)
(declare-fun x707 () Bool)
(declare-fun x766 () Int)
(declare-fun x3190 () Bool)
(declare-fun x486 () Int)
(declare-fun x3571 () Int)
(declare-fun x1969 () Bool)
(declare-fun x3774 () Int)
(declare-fun x3587 () Int)
(declare-fun x3433 () Int)
(declare-fun x977 () Bool)
(declare-fun x424 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x558 () Bool)
(declare-fun x589 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x4018 () Int)
(declare-fun x1611 () Bool)
(declare-fun x767 () Int)
(declare-fun x2375 () Bool)
(declare-fun x663 () Bool)
(declare-fun x1417 () Int)
(declare-fun x2166 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x2801 () Bool)
(declare-fun x2735 () Int)
(declare-fun x564 () Int)
(declare-fun x3183 () Int)
(declare-fun x2351 () Int)
(declare-fun x2074 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x1144 () Int)
(declare-fun x3733 () Int)
(declare-fun x2463 () Bool)
(declare-fun x2604 () Int)
(declare-fun x3858 () Bool)
(declare-fun x2508 () Int)
(declare-fun x3979 () Bool)
(declare-fun x583 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x284 () Int)
(declare-fun x1472 () Bool)
(declare-fun x4013 (Int) Int)
(declare-fun x312 () Int)
(declare-fun x2606 () Bool)
(declare-fun x761 () Int)
(declare-fun x509 () Int)
(declare-fun x2370 () Bool)
(declare-fun x314 () Bool)
(declare-fun x1187 () Int)
(declare-fun x4051 () Bool)
(declare-fun x4135 () Bool)
(declare-fun x2586 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x799 () Bool)
(declare-fun x3428 () Int)
(declare-fun x2876 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x2983 () Int)
(declare-fun x965 () Int)
(declare-fun x2308 () Int)
(declare-fun x774 () Bool)
(declare-fun x2217 () Int)
(declare-fun x4152 () Bool)
(declare-fun x2794 () Int)
(declare-fun x1933 () Int)
(declare-fun x3673 () Bool)
(declare-fun x398 () Int)
(declare-fun x3768 () Bool)
(declare-fun x137 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x2389 () Bool)
(declare-fun x3798 () Int)
(declare-fun x622 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x1245 () Int)
(declare-fun x276 () Int)
(declare-fun x1137 () Int)
(declare-fun x3870 () Int)
(declare-fun x2698 () Bool)
(declare-fun x848 () Int)
(declare-fun x5 () Int)
(declare-fun x154 () Bool)
(declare-fun x2968 () Bool)
(declare-fun x808 () Int)
(declare-fun x2304 () Int)
(declare-fun x1977 () Bool)
(declare-fun x700 () Int)
(declare-fun x2676 (Int) Int)
(declare-fun x2884 () Bool)
(declare-fun x648 () Int)
(declare-fun x4242 () Int)
(declare-fun x2208 () Bool)
(declare-fun x4232 () Int)
(declare-fun x1779 () Bool)
(declare-fun x3623 () Int)
(declare-fun x2260 () Int)
(declare-fun x1580 () Bool)
(declare-fun x876 () Int)
(declare-fun x2838 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x2352 () Int)
(declare-fun x2309 () Bool)
(declare-fun x297 () Int)
(declare-fun x318 () Bool)
(declare-fun x160 () Int)
(declare-fun x4153 () Bool)
(declare-fun x287 () Int)
(declare-fun x272 () Int)
(declare-fun x3812 () Bool)
(declare-fun x3649 () Bool)
(declare-fun x4236 () Bool)
(declare-fun x4109 () Bool)
(declare-fun x905 () Bool)
(declare-fun x481 () Bool)
(declare-fun x3451 () Int)
(declare-fun x3292 () Bool)
(declare-fun x381 () Int)
(declare-fun x2816 () Bool)
(declare-fun x388 () Bool)
(declare-fun x199 () Int)
(declare-fun x1803 () Int)
(declare-fun x28 () Int)
(declare-fun x3817 () Bool)
(declare-fun x262 (Int) Int)
(declare-fun x4202 () Int)
(declare-fun x796 () Int)
(declare-fun x1479 () Int)
(declare-fun x2789 () Bool)
(declare-fun x826 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x2894 () Int)
(declare-fun x1442 () Int)
(declare-fun x2690 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x3476 () Int)
(declare-fun x874 () Int)
(declare-fun x3258 () Bool)
(declare-fun x3412 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x3124 () Int)
(declare-fun x817 () Bool)
(declare-fun x3228 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x4067 () Bool)
(declare-fun x3118 () Int)
(declare-fun x3034 () Bool)
(declare-fun x3066 () Int)
(declare-fun x2936 () Int)
(declare-fun x3120 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x2017 () Int)
(declare-fun x2119 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x3388 () Bool)
(declare-fun x2627 () Int)
(declare-fun x676 () Bool)
(declare-fun x71 () Int)
(declare-fun x531 () Bool)
(declare-fun x624 () Bool)
(declare-fun x2049 () Int)
(declare-fun x1371 () Bool)
(declare-fun x1961 () Int)
(declare-fun x3879 () Bool)
(declare-fun x539 () Bool)
(declare-fun x2608 () Int)
(declare-fun x3500 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x587 () Int)
(declare-fun x2779 () Bool)
(declare-fun x1822 () Int)
(declare-fun x3140 () Bool)
(declare-fun x1128 () Int)
(declare-fun x2693 () Bool)
(declare-fun x3832 () Int)
(declare-fun x2114 () Bool)
(declare-fun x2990 () Int)
(declare-fun x3135 () Int)
(declare-fun x2784 () Bool)
(declare-fun x2908 () Bool)
(declare-fun x4234 () Int)
(declare-fun x1655 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x310 () Bool)
(declare-fun x3705 () Int)
(declare-fun x1319 () Bool)
(declare-fun x3027 () Int)
(declare-fun x3127 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1405 () Int)
(declare-fun x724 () Int)
(declare-fun x1910 () Int)
(declare-fun x2967 () Int)
(declare-fun x3407 () Bool)
(declare-fun x448 () Bool)
(declare-fun x1703 () Int)
(declare-fun x3443 () Int)
(declare-fun x968 () Int)
(declare-fun x2230 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x1750 () Int)
(declare-fun x235 () Bool)
(declare-fun x350 () Bool)
(declare-fun x1870 () Int)
(declare-fun x630 () Int)
(declare-fun x1766 () Int)
(declare-fun x1438 () Int)
(declare-fun x212 () Int)
(declare-fun x2198 () Int)
(declare-fun x2038 () Bool)
(declare-fun x679 () Int)
(declare-fun x2659 () Bool)
(declare-fun x2920 () Int)
(declare-fun x1861 () Bool)
(declare-fun x1402 () Int)
(declare-fun x3833 () Bool)
(declare-fun x2862 () Bool)
(declare-fun x223 () Bool)
(declare-fun x2931 () Bool)
(declare-fun x380 () Bool)
(declare-fun x4224 () Int)
(declare-fun x3036 () Int)
(declare-fun x468 () Int)
(declare-fun x3233 () Bool)
(declare-fun x2730 () Int)
(declare-fun x304 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x2854 () Int)
(declare-fun x1852 () Int)
(declare-fun x111 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1030 () Int)
(declare-fun x2328 () Bool)
(declare-fun x3452 () Bool)
(declare-fun x2830 () Int)
(declare-fun x4073 () Bool)
(declare-fun x3189 () Bool)
(declare-fun x1979 () Int)
(declare-fun x1206 () Bool)
(declare-fun x1166 () Int)
(declare-fun x3541 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x2183 () Int)
(declare-fun x3032 () Bool)
(declare-fun x198 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x79 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x3860 () Bool)
(declare-fun x590 () Int)
(declare-fun x1915 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1541 () Bool)
(declare-fun x135 () Bool)
(declare-fun x2977 () Bool)
(declare-fun x685 () Bool)
(declare-fun x3063 () Int)
(declare-fun x843 () Int)
(declare-fun x3660 () Int)
(declare-fun x3115 () Int)
(declare-fun x3339 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x4143 () Int)
(declare-fun x3863 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x78 () Bool)
(declare-fun x952 () Int)
(declare-fun x1936 () Bool)
(declare-fun x2808 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x1273 () Int)
(declare-fun x2879 () Int)
(declare-fun x1858 () Int)
(declare-fun x988 () Int)
(declare-fun x2700 () Int)
(declare-fun x1054 () Bool)
(declare-fun x139 () Int)
(declare-fun x2625 () Int)
(declare-fun x1690 () Int)
(declare-fun x4149 () Bool)
(declare-fun x3143 () Int)
(declare-fun x1500 () Int)
(declare-fun x2834 () Int)
(declare-fun x2680 () Int)
(declare-fun x1007 () Bool)
(declare-fun x2068 () Int)
(declare-fun x541 () Int)
(declare-fun x2795 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x2888 () Int)
(declare-fun x2419 () Int)
(declare-fun x3173 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x2457 () Int)
(declare-fun x239 () Int)
(declare-fun x3758 () Int)
(declare-fun x3067 () Bool)
(declare-fun x1812 () Int)
(declare-fun x3195 () Bool)
(declare-fun x2882 () Int)
(declare-fun x540 () Bool)
(declare-fun x373 () Bool)
(declare-fun x405 () Int)
(declare-fun x2579 () Int)
(declare-fun x1122 () Int)
(declare-fun x458 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x467 () Int)
(declare-fun x1413 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x3153 () Int)
(declare-fun x3940 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x2 () Int)
(declare-fun x344 () Int)
(declare-fun x2316 () Int)
(declare-fun x1902 () Bool)
(declare-fun x3710 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x3786 () Bool)
(declare-fun x821 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1877 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x1394 () Int)
(declare-fun x2410 () Bool)
(declare-fun x3572 () Int)
(declare-fun x1242 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x3998 () Int)
(declare-fun x11 () Bool)
(declare-fun x4123 () Int)
(declare-fun x3252 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x2129 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x3160 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x2374 () Int)
(declare-fun x4193 () Bool)
(declare-fun x3268 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x750 () Bool)
(declare-fun x573 () Int)
(declare-fun x949 () Int)
(declare-fun x3470 () Bool)
(declare-fun x824 () Int)
(declare-fun x185 () Bool)
(declare-fun x2336 () Int)
(declare-fun x555 () Bool)
(declare-fun x389 () Bool)
(declare-fun x2442 () Int)
(declare-fun x1744 () Int)
(declare-fun x3062 () Int)
(declare-fun x1840 () Int)
(declare-fun x1480 () Int)
(declare-fun x1973 () Bool)
(declare-fun x3215 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x546 () Bool)
(declare-fun x1568 () Int)
(declare-fun x3750 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x3210 () Int)
(declare-fun x2324 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x3221 () Bool)
(declare-fun x2050 () Int)
(declare-fun x3826 () Bool)
(declare-fun x591 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x2095 () Int)
(declare-fun x2972 () Int)
(declare-fun x1421 () Bool)
(declare-fun x1606 () Int)
(declare-fun x197 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x166 () Int)
(declare-fun x3057 () Int)
(declare-fun x2194 () Int)
(declare-fun x3232 () Int)
(declare-fun x3887 () Int)
(declare-fun x1131 () Bool)
(declare-fun x114 () Int)
(declare-fun x453 () Int)
(declare-fun x2504 () Int)
(declare-fun x3969 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x2224 () Int)
(declare-fun x1577 () Int)
(declare-fun x149 () Int)
(declare-fun x2899 () Int)
(declare-fun x4198 () Int)
(declare-fun x3908 () Int)
(declare-fun x2033 () Bool)
(declare-fun x925 () Int)
(declare-fun x2692 () Bool)
(declare-fun x935 () Bool)
(declare-fun x224 () Int)
(declare-fun x3490 () Bool)
(declare-fun x653 () Int)
(declare-fun x3119 () Int)
(declare-fun x3610 () Bool)
(declare-fun x3967 () Int)
(declare-fun x347 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x3831 () Int)
(declare-fun x65 () Bool)
(declare-fun x982 () Bool)
(declare-fun x4165 () Int)
(declare-fun x2223 () Bool)
(declare-fun x1653 () Int)
(declare-fun x3279 () Bool)
(declare-fun x99 () Int)
(declare-fun x1140 () Bool)
(declare-fun x3206 () Int)
(declare-fun x3994 () Bool)
(declare-fun x2669 () Bool)
(declare-fun x76 () Bool)
(declare-fun x2957 () Bool)
(declare-fun x36 () Int)
(declare-fun x4126 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x1501 () Int)
(declare-fun x2996 () Int)
(declare-fun x508 () Int)
(declare-fun x3581 () Bool)
(declare-fun x3230 () Int)
(declare-fun x957 () Int)
(declare-fun x1029 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x1017 () Int)
(declare-fun x898 () Bool)
(declare-fun x2878 () Int)
(declare-fun x2925 () Bool)
(declare-fun x2354 () Int)
(declare-fun x3175 () Int)
(declare-fun x1626 () Int)
(declare-fun x1488 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x203 () Bool)
(declare-fun x1994 () Int)
(declare-fun x47 () Bool)
(declare-fun x1200 () Int)
(declare-fun x554 () Int)
(declare-fun x1617 () Bool)
(declare-fun x2833 () Int)
(declare-fun x1876 () Bool)
(declare-fun x3144 () Bool)
(declare-fun x1736 () Int)
(declare-fun x586 () Bool)
(declare-fun x252 () Bool)
(declare-fun x23 () Bool)
(declare-fun x2672 () Int)
(declare-fun x3336 () Int)
(declare-fun x3158 () Bool)
(declare-fun x3883 () Bool)
(declare-fun x298 () Int)
(declare-fun x1390 () Int)
(declare-fun x3839 () Bool)
(declare-fun x230 (Int Int Int) Int)
(declare-fun x2560 () Int)
(declare-fun x173 () Int)
(declare-fun x2629 () Int)
(declare-fun x695 () Int)
(declare-fun x2041 () Bool)
(declare-fun x1313 () Int)
(declare-fun x2207 () Bool)
(declare-fun x3765 () Bool)
(declare-fun x2954 () Int)
(declare-fun x3715 () Int)
(declare-fun x1570 () Bool)
(declare-fun x3145 () Int)
(declare-fun x1300 (Int) Int)
(declare-fun x3068 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x3713 () Int)
(declare-fun x4209 () Int)
(declare-fun x1710 () Int)
(declare-fun x3367 () Bool)
(declare-fun x40 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x3876 () Bool)
(declare-fun x2303 () Int)
(declare-fun x879 () Bool)
(declare-fun x1239 () Int)
(declare-fun x4156 () Bool)
(declare-fun x3038 () Int)
(declare-fun x3554 () Bool)
(declare-fun x1573 () Int)
(declare-fun x736 () Bool)
(declare-fun x2949 () Int)
(declare-fun x857 () Bool)
(declare-fun x2355 () Int)
(declare-fun x3250 () Int)
(declare-fun x1147 () Int)
(declare-fun x2450 () Int)
(declare-fun x311 () Bool)
(declare-fun x1705 () Int)
(declare-fun x3076 () Int)
(declare-fun x1821 () Int)
(declare-fun x250 (Int) Int)
(declare-fun x2644 () Bool)
(declare-fun x959 () Int)
(declare-fun x1216 () Int)
(declare-fun x4159 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x168 () Bool)
(declare-fun x639 () Int)
(declare-fun x2306 () Bool)
(declare-fun x2472 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x3923 () Int)
(declare-fun x3187 () Bool)
(declare-fun x814 () Bool)
(declare-fun x3539 () Int)
(declare-fun x3667 () Bool)
(declare-fun x4086 () Int)
(declare-fun x4024 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x325 () Bool)
(declare-fun x525 () Bool)
(declare-fun x3534 () Bool)
(declare-fun x3481 () Bool)
(declare-fun x2536 () Int)
(declare-fun x1980 () Int)
(declare-fun x387 () Bool)
(declare-fun x1393 () Int)
(declare-fun x947 () Int)
(declare-fun x1134 () Bool)
(declare-fun x3840 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x2982 () Bool)
(declare-fun x3924 () Int)
(declare-fun x2209 () Int)
(declare-fun x3881 () Int)
(declare-fun x3369 () Int)
(declare-fun x3847 () Int)
(declare-fun x2402 () Int)
(declare-fun x3926 () Int)
(declare-fun x1021 () Bool)
(declare-fun x3744 () Bool)
(declare-fun x2763 () Bool)
(declare-fun x4178 () Int)
(declare-fun x3894 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x1637 () Int)
(declare-fun x3683 () Int)
(declare-fun x2922 () Bool)
(declare-fun x4228 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x4148 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x2639 () Bool)
(declare-fun x2500 () Int)
(declare-fun x1583 () Int)
(declare-fun x2239 () Int)
(declare-fun x57 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x2535 () Bool)
(declare-fun x3714 () Bool)
(declare-fun x3779 () Int)
(declare-fun x1802 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x3513 () Int)
(declare-fun x526 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1320 () Int)
(declare-fun x2872 () Bool)
(declare-fun x3518 () Int)
(declare-fun x1446 () Int)
(declare-fun x1899 () Bool)
(declare-fun x16 () Int)
(declare-fun x2571 () Int)
(declare-fun x3639 () Int)
(declare-fun x2111 () Int)
(declare-fun x1992 () Int)
(declare-fun x3807 () Int)
(declare-fun x2212 () Int)
(declare-fun x2790 () Int)
(declare-fun x1786 () Int)
(declare-fun x3696 () Int)
(declare-fun x2032 () Int)
(declare-fun x2714 () Bool)
(declare-fun x3693 () Int)
(declare-fun x274 () Int)
(declare-fun x3244 () Bool)
(declare-fun x3049 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x165 () Int)
(declare-fun x2897 () Int)
(declare-fun x1015 () Bool)
(declare-fun x868 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x2860 () Int)
(declare-fun x1873 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x435 () Int)
(declare-fun x2081 () Int)
(declare-fun x3495 () Int)
(declare-fun x4167 () Int)
(declare-fun x1355 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x3811 () Bool)
(declare-fun x2518 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x2652 () Int)
(declare-fun x798 () Bool)
(declare-fun x580 () Int)
(declare-fun x3422 () Int)
(declare-fun x3809 () Int)
(declare-fun x3711 () Int)
(declare-fun x3273 () Int)
(declare-fun x730 () Int)
(declare-fun x2270 () Bool)
(declare-fun x2213 () Int)
(declare-fun x1512 () Bool)
(declare-fun x3661 () Bool)
(declare-fun x227 () Int)
(declare-fun x146 () Bool)
(declare-fun x2539 () Int)
(declare-fun x804 () Int)
(declare-fun x1715 () Int)
(declare-fun x1976 () Bool)
(declare-fun x3813 () Int)
(declare-fun x1732 () Bool)
(declare-fun x127 () Int)
(declare-fun x3601 () Bool)
(declare-fun x3551 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x4075 () Bool)
(declare-fun x3625 () Bool)
(declare-fun x507 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x4180 () Bool)
(declare-fun x2379 () Bool)
(declare-fun x855 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x4094 () Int)
(declare-fun x3322 () Bool)
(declare-fun x2452 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x2603 () Int)
(declare-fun x3103 () Bool)
(declare-fun x825 () Int)
(declare-fun x118 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x2695 () Int)
(declare-fun x3607 () Bool)
(declare-fun x854 () Int)
(declare-fun x3330 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x1053 () Int)
(declare-fun x3544 () Bool)
(declare-fun x3652 () Bool)
(declare-fun x425 () Bool)
(declare-fun x1683 () Int)
(declare-fun x123 () Bool)
(declare-fun x3409 () Bool)
(declare-fun x1505 () Int)
(declare-fun x12 () Bool)
(declare-fun x3615 () Bool)
(declare-fun x193 () Int)
(declare-fun x1113 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x202 () Bool)
(declare-fun x2477 () Int)
(declare-fun x228 () Int)
(declare-fun x1409 () Bool)
(declare-fun x2921 () Int)
(declare-fun x2307 () Bool)
(declare-fun x495 () Int)
(declare-fun x1340 () Bool)
(declare-fun x3658 () Int)
(declare-fun x3074 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x2587 () Bool)
(declare-fun x3964 () Int)
(declare-fun x1041 () Bool)
(declare-fun x633 () Bool)
(declare-fun x995 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x3953 () Int)
(declare-fun x557 () Int)
(declare-fun x3320 () Int)
(declare-fun x3577 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x136 () Bool)
(declare-fun x4187 () Int)
(declare-fun x3262 () Bool)
(declare-fun x52 () Int)
(declare-fun x2591 () Int)
(declare-fun x3264 () Bool)
(declare-fun x4129 () Int)
(declare-fun x2369 () Bool)
(declare-fun x2817 (Int Int) Int)
(declare-fun x1202 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x3622 () Int)
(declare-fun x1392 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x129 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x206 () Int)
(declare-fun x299 () Bool)
(declare-fun x3442 () Int)
(declare-fun x823 () Bool)
(declare-fun x2556 () Int)
(declare-fun x4194 () Int)
(declare-fun x3107 () Bool)
(declare-fun x610 () Int)
(declare-fun x1556 () Bool)
(declare-fun x571 () Int)
(declare-fun x282 () Int)
(declare-fun x2031 () Bool)
(declare-fun x758 () Int)
(declare-fun x1495 () Bool)
(declare-fun x3079 () Int)
(declare-fun x2804 () Bool)
(declare-fun x2154 () Int)
(declare-fun x1459 () Int)
(declare-fun x3020 () Bool)
(declare-fun x3633 () Int)
(declare-fun x4160 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x565 () Bool)
(declare-fun x2025 () Int)
(declare-fun x3782 () Bool)
(declare-fun x205 () Bool)
(declare-fun x200 () Bool)
(declare-fun x1987 () Int)
(declare-fun x3014 () Int)
(declare-fun x1080 () Bool)
(declare-fun x1571 () Int)
(declare-fun x4100 () Bool)
(declare-fun x4074 () Int)
(declare-fun x1534 () Bool)
(declare-fun x2566 () Int)
(declare-fun x3071 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1280 () Int)
(declare-fun x3224 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x2812 () Int)
(declare-fun x3797 () Int)
(declare-fun x811 () Int)
(declare-fun x613 () Bool)
(declare-fun x3031 () Bool)
(declare-fun x2368 () Bool)
(declare-fun x3235 () Int)
(declare-fun x2002 () Bool)
(declare-fun x3504 () Bool)
(declare-fun x1367 () Int)
(declare-fun x1593 () Bool)
(declare-fun x3780 () Int)
(declare-fun x2444 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x997 () Int)
(declare-fun x638 () Int)
(declare-fun x2397 () Bool)
(declare-fun x3872 () Int)
(declare-fun x834 () Int)
(declare-fun x2482 () Bool)
(declare-fun x1752 () Int)
(declare-fun x1169 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x3749 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x3466 () Bool)
(declare-fun x3048 () Int)
(declare-fun x3460 () Int)
(declare-fun x3351 () Bool)
(declare-fun x820 () Int)
(declare-fun x2287 () Int)
(declare-fun x4171 () Int)
(declare-fun x2055 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x500 () Bool)
(declare-fun x442 () Bool)
(declare-fun x3387 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x3763 (Int Int) Int)
(declare-fun x2507 () Int)
(declare-fun x1288 (Int) Int)
(declare-fun x951 () Int)
(declare-fun x423 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x1463 () Int)
(declare-fun x2433 () Int)
(declare-fun x513 () Bool)
(declare-fun x3473 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x691 () Bool)
(declare-fun x83 () Bool)
(declare-fun x44 () Bool)
(declare-fun x856 () Int)
(declare-fun x2926 () Int)
(declare-fun x55 () Int)
(declare-fun x3425 () Int)
(declare-fun x4251 () Int)
(declare-fun x3416 () Bool)
(declare-fun x3300 () Bool)
(declare-fun x194 () Int)
(declare-fun x2825 () Int)
(declare-fun x1737 () Int)
(declare-fun x782 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1263 () Int)
(declare-fun x1848 () Bool)
(declare-fun x1123 () Int)
(declare-fun x2125 () Bool)
(declare-fun x652 () Int)
(declare-fun x3558 () Bool)
(declare-fun x1937 () Int)
(declare-fun x1240 () Int)
(declare-fun x864 () Bool)
(declare-fun x346 () Bool)
(declare-fun x3917 () Int)
(declare-fun x1406 () Int)
(declare-fun x1353 () Int)
(declare-fun x3478 () Bool)
(declare-fun x769 () Int)
(declare-fun x1246 () Bool)
(declare-fun x4 () Bool)
(declare-fun x574 () Bool)
(declare-fun x1958 () Int)
(declare-fun x1881 () Int)
(declare-fun x1040 () Int)
(declare-fun x805 () Bool)
(declare-fun x2752 () Bool)
(declare-fun x3198 () Bool)
(declare-fun x3784 () Bool)
(declare-fun x3617 () Int)
(declare-fun x2728 () Int)
(declare-fun x89 () Int)
(declare-fun x4078 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x3956 () Bool)
(declare-fun x1408 () Int)
(declare-fun x598 () Int)
(declare-fun x3044 () Int)
(declare-fun x4246 () Int)
(declare-fun x1644 () Int)
(declare-fun x512 () Int)
(declare-fun x3343 () Int)
(declare-fun x1791 () Int)
(declare-fun x3007 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x1675 () Int)
(declare-fun x3075 () Int)
(declare-fun x3893 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x725 () Bool)
(declare-fun x3838 () Bool)
(declare-fun x1454 () Int)
(declare-fun x51 () Int)
(declare-fun x1176 () Int)
(declare-fun x3677 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x2456 () Bool)
(declare-fun x902 () Bool)
(declare-fun x3055 () Int)
(declare-fun x4103 () Int)
(declare-fun x59 () Int)
(declare-fun x2859 () Int)
(declare-fun x4147 () Bool)
(declare-fun x3709 () Int)
(declare-fun x75 () Int)
(declare-fun x983 () Int)
(declare-fun x3806 () Bool)
(declare-fun x656 () Int)
(declare-fun x1415 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x1247 () Int)
(declare-fun x3559 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x1325 () Int)
(declare-fun x1814 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x1615 () Int)
(declare-fun x872 () Bool)
(declare-fun x2474 () Int)
(declare-fun x2234 () Int)
(declare-fun x3624 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x522 () Int)
(declare-fun x948 () Int)
(declare-fun x650 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x3254 () Int)
(declare-fun x3349 () Bool)
(declare-fun x3719 () Int)
(declare-fun x828 () Bool)
(declare-fun x163 () Int)
(declare-fun x3003 () Int)
(declare-fun x709 () Int)
(declare-fun x2098 () Int)
(declare-fun x2420 () Int)
(declare-fun x1849 () Int)
(declare-fun x2580 () Bool)
(declare-fun x3527 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x3030 () Int)
(declare-fun x3121 () Int)
(declare-fun x2755 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x3859 () Bool)
(declare-fun x50 () Int)
(declare-fun x1033 () Int)
(declare-fun x2828 () Int)
(declare-fun x3341 () Bool)
(declare-fun x303 () Int)
(declare-fun x3275 () Int)
(declare-fun x1635 () Bool)
(declare-fun x3008 () Bool)
(declare-fun x3045 () Bool)
(declare-fun x4069 () Int)
(declare-fun x309 () Bool)
(declare-fun x330 () Int)
(declare-fun x4084 () Int)
(declare-fun x1027 () Bool)
(declare-fun x3708 () Bool)
(declare-fun x421 () Int)
(declare-fun x3706 (Int) Int)
(declare-fun x2082 () Int)
(declare-fun x115 () Int)
(declare-fun x2199 () Int)
(declare-fun x257 () Int)
(declare-fun x2373 () Bool)
(declare-fun x1407 () Int)
(declare-fun x1805 () Bool)
(declare-fun x70 () Int)
(declare-fun x3015 () Int)
(declare-fun x3218 () Bool)
(declare-fun x340 () Int)
(declare-fun x1721 () Int)
(declare-fun x833 () Int)
(declare-fun x1437 () Bool)
(declare-fun x475 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x3313 () Bool)
(declare-fun x1972 () Int)
(declare-fun x681 () Bool)
(declare-fun x1347 () Int)
(declare-fun x3824 () Bool)
(declare-fun x433 () Bool)
(declare-fun x361 () Bool)
(declare-fun x3602 () Int)
(declare-fun x306 () Bool)
(declare-fun x1416 () Int)
(declare-fun x3484 () Bool)
(declare-fun x3180 () Int)
(declare-fun x2853 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x751 () Int)
(declare-fun x1739 () Bool)
(declare-fun x2704 () Int)
(declare-fun x2252 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x1616 () Int)
(declare-fun x889 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x542 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1792 () Int)
(declare-fun x1496 () Bool)
(declare-fun x305 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x581 () Int)
(declare-fun x2832 () Bool)
(declare-fun x3905 () Int)
(declare-fun x2184 () Bool)
(declare-fun x708 () Bool)
(declare-fun x3651 () Int)
(declare-fun x2347 () Int)
(declare-fun x2451 () Int)
(declare-fun x1237 () Bool)
(declare-fun x3033 () Int)
(declare-fun x1889 () Bool)
(declare-fun x593 () Int)
(declare-fun x3580 () Bool)
(declare-fun x3354 () Int)
(declare-fun x1713 () Int)
(declare-fun x3721 () Bool)
(declare-fun x1158 () Int)
(declare-fun x888 () Int)
(declare-fun x264 () Bool)
(declare-fun x3655 () Int)
(declare-fun x1654 () Bool)
(declare-fun x2850 () Bool)
(declare-fun x934 () Bool)
(declare-fun x3418 () Int)
(declare-fun x4233 () Bool)
(declare-fun x432 (Int) Int)
(declare-fun x2877 () Int)
(declare-fun x3479 () Int)
(declare-fun x3288 () Int)
(declare-fun x1311 () Int)
(declare-fun x1586 () Bool)
(declare-fun x2345 () Int)
(declare-fun x3657 () Bool)
(declare-fun x837 () Bool)
(declare-fun x2040 () Int)
(declare-fun x2092 () Int)
(declare-fun x4093 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x2268 () Int)
(declare-fun x148 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x3357 () Int)
(declare-fun x3182 () Int)
(declare-fun x3444 () Int)
(declare-fun x1075 () Int)
(declare-fun x4108 () Bool)
(declare-fun x4098 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x559 () Bool)
(declare-fun x514 () Int)
(declare-fun x178 () Bool)
(declare-fun x3910 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x3384 () Int)
(declare-fun x3193 () Int)
(declare-fun x1869 () Int)
(declare-fun x1172 () Bool)
(declare-fun x4016 () Bool)
(declare-fun x2985 () Int)
(declare-fun x595 () Int)
(declare-fun x116 () Int)
(declare-fun x2956 () Int)
(declare-fun x3199 () Int)
(declare-fun x1995 () Int)
(declare-fun x4136 () Bool)
(declare-fun x4134 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x770 () Int)
(declare-fun x1464 () Int)
(declare-fun x1567 () Int)
(declare-fun x3350 () Bool)
(declare-fun x417 () Int)
(declare-fun x1431 () Int)
(declare-fun x2574 () Bool)
(declare-fun x716 () Bool)
(declare-fun x171 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x351 () Bool)
(declare-fun x2422 () Int)
(declare-fun x2661 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x3959 () Int)
(declare-fun x41 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x3901 () Bool)
(declare-fun x2024 () Int)
(declare-fun x3641 () Bool)
(declare-fun x3426 () Int)
(declare-fun x2618 () Bool)
(declare-fun x3155 () Bool)
(declare-fun x1079 () Int)
(declare-fun x2737 () Bool)
(declare-fun x505 () Int)
(declare-fun x3603 () Int)
(declare-fun x3638 () Bool)
(declare-fun x2620 () Int)
(declare-fun x560 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x2405 () Int)
(declare-fun x447 () Int)
(declare-fun x2395 () Bool)
(declare-fun x3037 () Int)
(declare-fun x1474 () Bool)
(declare-fun x1520 () Int)
(declare-fun x932 () Bool)
(declare-fun x3573 () Bool)
(declare-fun x3296 () Int)
(declare-fun x62 () Int)
(declare-fun x233 () Int)
(declare-fun x1127 () Int)
(declare-fun x1348 () Int)
(declare-fun x718 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x4083 () Bool)
(declare-fun x846 () Bool)
(declare-fun x797 () Bool)
(declare-fun x3825 () Int)
(declare-fun x1686 () Bool)
(declare-fun x3753 () Bool)
(declare-fun x3654 () Int)
(declare-fun x2523 () Bool)
(declare-fun x931 () Int)
(declare-fun x1841 () Int)
(declare-fun x702 () Int)
(declare-fun x1549 () Bool)
(declare-fun x263 () Int)
(declare-fun x317 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x641 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x3968 () Bool)
(declare-fun x2491 () Int)
(declare-fun x3000 () Bool)
(declare-fun x3501 () Bool)
(declare-fun x927 () Int)
(declare-fun x13 () Int)
(declare-fun x3096 () Bool)
(declare-fun x1894 () Bool)
(declare-fun x2144 () Int)
(declare-fun x787 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1508 () Int)
(declare-fun x3499 () Int)
(declare-fun x1517 () Bool)
(declare-fun x3223 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x3584 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x1909 () Bool)
(declare-fun x729 () Int)
(declare-fun x549 () Bool)
(declare-fun x2408 () Bool)
(declare-fun x2684 () Bool)
(declare-fun x3775 () Int)
(declare-fun x3605 () Int)
(declare-fun x3402 () Bool)
(declare-fun x1050 () Int)
(declare-fun x2189 () Int)
(declare-fun x1719 () Bool)
(declare-fun x671 () Int)
(declare-fun x315 () Bool)
(declare-fun x3272 () Int)
(declare-fun x2353 () Int)
(declare-fun x1932 () Int)
(declare-fun x1277 () Bool)
(declare-fun x914 () Bool)
(declare-fun x3427 () Int)
(declare-fun x1195 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x3141 () Int)
(declare-fun x2984 () Int)
(declare-fun x369 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x2478 () Int)
(declare-fun x3574 () Int)
(declare-fun x2999 () Int)
(declare-fun x3335 () Bool)
(declare-fun x2363 () Int)
(declare-fun x2918 () Bool)
(declare-fun x3816 () Int)
(declare-fun x3291 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x830 () Int)
(declare-fun x909 () Int)
(declare-fun x2258 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x3394 () Int)
(declare-fun x3104 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x391 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x3126 () Bool)
(declare-fun x3469 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x711 () Int)
(declare-fun x478 () Bool)
(declare-fun x3406 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x2437 () Int)
(declare-fun x496 () Bool)
(declare-fun x3259 () Int)
(declare-fun x268 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x2616 () Int)
(declare-fun x699 () Bool)
(declare-fun x4243 () Bool)
(declare-fun x3564 () Int)
(declare-fun x2393 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x3794 () Bool)
(declare-fun x259 () Int)
(declare-fun x3002 () Int)
(declare-fun x637 () Bool)
(declare-fun x4195 (Int) Int)
(declare-fun x4008 () Bool)
(declare-fun x283 () Bool)
(declare-fun x916 () Int)
(declare-fun x3941 () Bool)
(declare-fun x3139 () Int)
(declare-fun x1058 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x266 () Int)
(declare-fun x167 () Bool)
(declare-fun x900 () Int)
(declare-fun x3556 () Int)
(declare-fun x1806 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x2590 () Int)
(declare-fun x2259 () Bool)
(declare-fun x3738 () Int)
(declare-fun x735 () Int)
(declare-fun x3494 () Bool)
(declare-fun x3297 () Bool)
(declare-fun x3549 () Int)
(declare-fun x3379 () Bool)
(declare-fun x2009 (Int Int) Int)
(declare-fun x1669 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x2319 () Int)
(declare-fun x922 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x2930 () Bool)
(declare-fun x3547 () Bool)
(declare-fun x1871 () Int)
(declare-fun x1982 () Bool)
(declare-fun x3855 () Int)
(declare-fun x302 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x1657 () Int)
(declare-fun x3090 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x2826 () Bool)
(declare-fun x578 () Int)
(declare-fun x2978 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x3029 () Bool)
(declare-fun x2975 () Bool)
(declare-fun x122 () Int)
(declare-fun x1529 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x887 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x780 () Bool)
(declare-fun x921 () Int)
(declare-fun x2331 () Bool)
(declare-fun x3656 () Int)
(declare-fun x3950 () Int)
(declare-fun x3922 () Int)
(declare-fun x3582 () Bool)
(declare-fun x3362 () Bool)
(declare-fun x1433 () Int)
(declare-fun x4114 () Int)
(declare-fun x683 () Int)
(declare-fun x3927 () Int)
(declare-fun x1296 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x242 () Int)
(declare-fun x1663 () Int)
(declare-fun x933 () Bool)
(declare-fun x1170 () Int)
(declare-fun x692 () Bool)
(declare-fun x4060 () Bool)
(declare-fun x1269 () Int)
(declare-fun x2043 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x143 () Int)
(declare-fun x2679 () Bool)
(declare-fun x86 () Int)
(declare-fun x2549 () Int)
(declare-fun x2377 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x1993 () Int)
(declare-fun x1082 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x2748 () Int)
(declare-fun x2400 () Int)
(declare-fun x2440 () Int)
(declare-fun x2868 () Bool)
(declare-fun x480 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x956 () Bool)
(declare-fun x783 () Bool)
(declare-fun x2851 () Int)
(declare-fun x1139 () Int)
(declare-fun x717 () Int)
(declare-fun x2059 () Bool)
(declare-fun x3720 () Int)
(declare-fun x2575 () Int)
(declare-fun x556 () Int)
(declare-fun x1283 () Int)
(declare-fun x3682 () Int)
(declare-fun x294 () Bool)
(declare-fun x2827 () Int)
(declare-fun x1988 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x225 () Int)
(declare-fun x4125 () Bool)
(declare-fun x307 () Int)
(declare-fun x3929 () Bool)
(declare-fun x1743 () Int)
(declare-fun x3284 () Int)
(declare-fun x3868 () Int)
(declare-fun x4128 () Bool)
(declare-fun x662 () Int)
(declare-fun x2911 () Int)
(declare-fun x2874 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x3159 () Int)
(declare-fun x2799 () Int)
(declare-fun x2883 () Bool)
(declare-fun x3465 () Int)
(declare-fun x3930 () Int)
(declare-fun x234 () Int)
(declare-fun x9 () Int)
(declare-fun x3827 () Int)
(declare-fun x2061 () Bool)
(declare-fun x2960 () Int)
(declare-fun x3133 () Bool)
(declare-fun x3568 () Int)
(declare-fun x2398 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x712 () Int)
(declare-fun x4055 () Bool)
(declare-fun x243 () Bool)
(declare-fun x3670 () Int)
(declare-fun x1387 () Bool)
(declare-fun x3590 () Int)
(declare-fun x1490 () Bool)
(declare-fun x3453 () Bool)
(declare-fun x108 () Int)
(declare-fun x2179 () Int)
(declare-fun x3245 () Int)
(declare-fun x2085 () Int)
(declare-fun x1380 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x1785 () Int)
(declare-fun x502 () Int)
(declare-fun x222 () Int)
(declare-fun x3537 () Bool)
(declare-fun x3755 () Int)
(declare-fun x2849 () Bool)
(declare-fun x174 () Int)
(declare-fun x152 () Bool)
(declare-fun x606 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x2140 () Int)
(declare-fun x3766 () Bool)
(declare-fun x3999 () Bool)
(declare-fun x158 () Bool)
(declare-fun x1265 () Int)
(declare-fun x2292 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x4131 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x4229 () Bool)
(declare-fun x1485 () Int)
(declare-fun x883 () Bool)
(declare-fun x7 () Int)
(declare-fun x1867 () Int)
(declare-fun x3093 () Bool)
(declare-fun x3600 () Int)
(declare-fun x2340 () Int)
(declare-fun x3109 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x1756 () Int)
(declare-fun x1227 () Bool)
(declare-fun x570 () Int)
(declare-fun x2275 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x1252 () Int)
(declare-fun x2088 () Int)
(declare-fun x247 () Bool)
(declare-fun x941 () Bool)
(declare-fun x1906 () Int)
(declare-fun x1886 () Bool)
(declare-fun x880 () Bool)
(declare-fun x2622 () Bool)
(declare-fun x3219 () Bool)
(declare-fun x2233 () Int)
(declare-fun x2520 () Bool)
(declare-fun x2734 () Int)
(declare-fun x1358 () Int)
(declare-fun x3151 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x682 () Bool)
(declare-fun x3823 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x384 () Bool)
(declare-fun x705 () Bool)
(declare-fun x741 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x3058 () Int)
(declare-fun x3289 () Bool)
(declare-fun x4115 () Int)
(declare-fun x151 () Int)
(declare-fun x2601 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x584 () Int)
(declare-fun x1447 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x2758 () Int)
(declare-fun x1693 () Int)
(declare-fun x1142 () Bool)
(declare-fun x989 () Bool)
(declare-fun x1919 () Bool)
(declare-fun x763 () Bool)
(declare-fun x987 () Bool)
(declare-fun x3945 () Int)
(declare-fun x2517 () Int)
(declare-fun x3680 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x3963 () Bool)
(declare-fun x841 () Int)
(declare-fun x253 () Int)
(declare-fun x4052 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x2498 () Int)
(declare-fun x3830 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x126 () Int)
(declare-fun x211 () Bool)
(declare-fun x835 () Bool)
(declare-fun x625 () Bool)
(declare-fun x536 () Bool)
(declare-fun x19 () Bool)
(declare-fun x3931 () Int)
(declare-fun x1238 () Bool)
(declare-fun x996 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x3937 () Int)
(declare-fun x1349 () Bool)
(declare-fun x2570 () Int)
(declare-fun x2818 () Bool)
(declare-fun x2515 () Int)
(declare-fun x2171 () Bool)
(declare-fun x684 () Int)
(declare-fun x792 () Int)
(declare-fun x2155 () Int)
(declare-fun x1077 () Int)
(declare-fun x3530 () Int)
(declare-fun x3474 () Bool)
(declare-fun x251 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x3448 () Int)
(declare-fun x885 () Bool)
(declare-fun x3091 () Int)
(declare-fun x3213 () Int)
(declare-fun x2267 () Bool)
(declare-fun x1625 () Int)
(declare-fun x2537 () Bool)
(declare-fun x894 () Bool)
(declare-fun x640 () Int)
(declare-fun x3209 () Bool)
(declare-fun x2621 () Int)
(declare-fun x109 () Int)
(declare-fun x74 () Int)
(declare-fun x2432 () Bool)
(declare-fun x3249 () Bool)
(declare-fun x2344 () Bool)
(declare-fun x4213 () Bool)
(declare-fun x2529 () Bool)
(declare-fun x1862 () Int)
(declare-fun x1312 () Bool)
(declare-fun x3928 () Int)
(declare-fun x1974 () Int)
(declare-fun x912 () Bool)
(declare-fun x1489 () Int)
(declare-fun x214 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x3333 () Bool)
(declare-fun x164 () Bool)
(declare-fun x2294 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x3741 () Int)
(declare-fun x985 () Bool)
(declare-fun x2147 () Int)
(declare-fun x901 () Bool)
(declare-fun x3751 () Int)
(declare-fun x1831 () Bool)
(declare-fun x594 () Int)
(declare-fun x2613 () Int)
(declare-fun x2923 () Int)
(declare-fun x1775 () Bool)
(declare-fun x3729 () Int)
(declare-fun x1048 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x2026 () Int)
(declare-fun x339 () Int)
(declare-fun x2887 () Int)
(declare-fun x2423 () Int)
(declare-fun x101 () Bool)
(declare-fun x1121 () Int)
(declare-fun x1545 () Bool)
(declare-fun x2788 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x634 () Bool)
(declare-fun x3882 () Bool)
(declare-fun x4191 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x106 () Int)
(declare-fun x93 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x3906 () Int)
(declare-fun x937 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x3725 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x4184 () Int)
(declare-fun x3619 () Int)
(declare-fun x2042 () Int)
(declare-fun x2939 () Int)
(declare-fun x3971 () Int)
(declare-fun x4163 () Int)
(declare-fun x3316 () Int)
(declare-fun x3566 () Bool)
(declare-fun x4199 () Bool)
(declare-fun x743 () Bool)
(declare-fun x3997 () Int)
(declare-fun x3938 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x910 () Int)
(declare-fun x483 () Int)
(declare-fun x4066 () Bool)
(declare-fun x2741 () Int)
(declare-fun x4142 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x812 () Bool)
(declare-fun x308 () Int)
(declare-fun x2235 () Int)
(declare-fun x3025 () Bool)
(declare-fun x678 () Int)
(declare-fun x2509 () Int)
(declare-fun x498 () Bool)
(declare-fun x4101 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x2657 () Int)
(declare-fun x3935 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x810 () Bool)
(declare-fun x397 () Bool)
(declare-fun x4175 () Bool)
(declare-fun x4011 () Int)
(declare-fun x2414 () Int)
(declare-fun x2254 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x2160 () Int)
(declare-fun x1266 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x3592 () Bool)
(declare-fun x4212 () Int)
(declare-fun x3248 () Bool)
(declare-fun x1555 () Int)
(declare-fun x4133 () Int)
(declare-fun x2813 () Int)
(declare-fun x2551 () Int)
(declare-fun x1491 () Int)
(declare-fun x3540 () Bool)
(declare-fun x1467 () Int)
(declare-fun x614 () Int)
(declare-fun x2764 () Int)
(declare-fun x3156 () Int)
(declare-fun x392 () Int)
(declare-fun x2970 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x3061 () Int)
(declare-fun x946 () Bool)
(declare-fun x54 () Int)
(declare-fun x3594 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x674 () Bool)
(declare-fun x3532 () Int)
(declare-fun x4087 () Bool)
(declare-fun x3634 () Int)
(declare-fun x4034 () Bool)
(declare-fun x3820 () Int)
(declare-fun x4137 () Bool)
(declare-fun x728 () Int)
(declare-fun x2607 () Int)
(declare-fun x569 () Int)
(declare-fun x3129 () Bool)
(declare-fun x3553 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x2127 () Int)
(declare-fun x1126 () Int)
(declare-fun x141 () Bool)
(declare-fun x4169 () Bool)
(declare-fun x3528 () Int)
(declare-fun x1797 () Bool)
(declare-fun x2900 () Int)
(declare-fun x2076 () Int)
(declare-fun x535 () Bool)
(declare-fun x1678 () Int)
(declare-fun x1378 () Int)
(declare-fun x3972 () Int)
(declare-fun x3415 () Int)
(declare-fun x1892 () Int)
(declare-fun x4056 () Bool)
(declare-fun x3990 () Bool)
(declare-fun x367 () Bool)
(declare-fun x2793 () Int)
(declare-fun x2723 () Bool)
(declare-fun x1911 () Int)
(declare-fun x2943 () Bool)
(declare-fun x2814 () Int)
(declare-fun x2725 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x2481 () Bool)
(declare-fun x944 () Bool)
(declare-fun x575 () Bool)
(declare-fun x270 () Int)
(declare-fun x1618 () Bool)
(declare-fun x689 () Bool)
(declare-fun x67 () Int)
(declare-fun x3318 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x4065 () Int)
(declare-fun x1411 () Bool)
(declare-fun x410 () Int)
(declare-fun x3912 () Int)
(declare-fun x3455 () Bool)
(declare-fun x2453 () Bool)
(declare-fun x2157 () Int)
(declare-fun x2070 () Bool)
(declare-fun x666 () Bool)
(declare-fun x3317 () Bool)
(declare-fun x3804 () Bool)
(declare-fun x379 () Bool)
(declare-fun x3287 () Bool)
(declare-fun x3205 () Bool)
(declare-fun x2647 () Int)
(declare-fun x2667 () Bool)
(declare-fun x2937 () Bool)
(declare-fun x3698 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x249 () Bool)
(declare-fun x3410 () Int)
(declare-fun x3110 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x4132 () Bool)
(declare-fun x2105 () Int)
(declare-fun x3952 () Int)
(declare-fun x2506 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x82 () Bool)
(declare-fun x3361 () Int)
(declare-fun x4118 () Bool)
(declare-fun x4225 () Bool)
(declare-fun x479 () Bool)
(declare-fun x966 () Int)
(declare-fun x1369 () Int)
(declare-fun x1767 () Int)
(declare-fun x3486 () Bool)
(declare-fun x790 () Bool)
(declare-fun x628 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x2944 () Int)
(declare-fun x4130 () Int)
(declare-fun x1232 () Int)
(declare-fun x2774 () Bool)
(declare-fun x4080 () Int)
(declare-fun x1020 () Bool)
(declare-fun x3822 () Int)
(declare-fun x2942 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x286 () Int)
(declare-fun x601 () Int)
(declare-fun x377 () Bool)
(declare-fun x3663 () Int)
(declare-fun x737 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x2227 () Int)
(declare-fun x1363 () Int)
(declare-fun x4035 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x1174 () Int)
(declare-fun x2963 () Bool)
(declare-fun x896 () Int)
(declare-fun x1525 () Bool)
(declare-fun x2343 () Int)
(declare-fun x3512 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x1258 () Int)
(declare-fun x3776 () Int)
(declare-fun x2721 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1688 () Bool)
(declare-fun x3345 () Int)
(declare-fun x3285 () Bool)
(declare-fun x3589 () Bool)
(declare-fun x2962 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x217 () Bool)
(declare-fun x818 () Int)
(declare-fun x2696 () Bool)
(declare-fun x31 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x3674 () Int)
(declare-fun x4154 () Int)
(declare-fun x1946 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x3346 () Int)
(declare-fun x2835 () Int)
(declare-fun x1857 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x342 () Int)
(declare-fun x3732 () Bool)
(declare-fun x4157 () Int)
(declare-fun x1130 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x2426 () Int)
(declare-fun x1298 () Bool)
(declare-fun x602 () Int)
(declare-fun x3270 () Bool)
(declare-fun x3546 () Int)
(declare-fun x1333 () Bool)
(declare-fun x450 () Bool)
(declare-fun x446 () Bool)
(declare-fun x364 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x2039 () Int)
(declare-fun x1953 () Bool)
(declare-fun x1090 () Int)
(declare-fun x2837 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x1823 () Int)
(declare-fun x176 () Int)
(declare-fun x1587 () Int)
(declare-fun x4004 () Int)
(declare-fun x836 () Bool)
(declare-fun x795 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x1328 () Int)
(declare-fun x2181 () Int)
(declare-fun x91 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x3666 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x110 () Int)
(declare-fun x3021 () Bool)
(declare-fun x3510 () Bool)
(declare-fun x523 () Int)
(declare-fun x2236 () Int)
(declare-fun x491 () Bool)
(declare-fun x655 () Int)
(declare-fun x3363 () Bool)
(declare-fun x407 () Bool)
(declare-fun x4040 () Int)
(declare-fun x2966 () Int)
(declare-fun x1470 () Bool)
(declare-fun x3450 () Int)
(declare-fun x669 () Int)
(declare-fun x938 () Bool)
(declare-fun x3022 () Int)
(declare-fun x2662 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x768 () Bool)
(declare-fun x2459 (Int) Int)
(declare-fun x2274 () Bool)
(declare-fun x1941 () Int)
(declare-fun x3687 () Bool)
(declare-fun x503 () Int)
(declare-fun x3790 () Int)
(declare-fun x3538 () Int)
(declare-fun x3005 () Bool)
(declare-fun x3241 () Bool)
(declare-fun x1360 () Int)
(declare-fun x2403 () Int)
(declare-fun x4076 () Bool)
(declare-fun x773 () Int)
(declare-fun x2128 (Int) Int)
(declare-fun x3231 () Bool)
(declare-fun x726 () Bool)
(declare-fun x2948 () Int)
(declare-fun x3814 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x4005 () Int)
(declare-fun x3006 () Bool)
(declare-fun x778 () Bool)
(declare-fun x3520 () Int)
(declare-fun x293 () Int)
(declare-fun x3961 () Bool)
(declare-fun x928 () Int)
(declare-fun x2718 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1251 () Int)
(declare-fun x2581 () Int)
(declare-fun x1907 () Bool)
(declare-fun x2824 () Int)
(declare-fun x2675 () Int)
(declare-fun x3907 () Bool)
(declare-fun x88 () Int)
(declare-fun x3089 () Int)
(declare-fun x4174 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x150 () Bool)
(declare-fun x3865 () Int)
(declare-fun x3836 () Int)
(declare-fun x992 () Int)
(declare-fun x3498 () Int)
(declare-fun x1092 () Bool)
(declare-fun x3686 () Int)
(declare-fun x544 () Int)
(declare-fun x2993 () Bool)
(declare-fun x3973 () Bool)
(declare-fun x517 () Int)
(declare-fun x1419 () Bool)
(declare-fun x791 () Int)
(declare-fun x2386 () Int)
(declare-fun x2458 () Bool)
(declare-fun x3256 () Bool)
(declare-fun x17 () Int)
(declare-fun x2249 () Bool)
(declare-fun x2360 () Int)
(declare-fun x145 () Bool)
(declare-fun x53 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x704 () Int)
(declare-fun x752 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x2071 () Int)
(declare-fun x4140 () Bool)
(declare-fun x3467 () Int)
(declare-fun x3734 () Bool)
(declare-fun x2584 () Bool)
(declare-fun x371 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x3880 () Int)
(declare-fun x734 () Bool)
(declare-fun x2861 () Int)
(declare-fun x2204 () Int)
(declare-fun x1557 () Int)
(declare-fun x1194 () Int)
(declare-fun x3895 () Bool)
(declare-fun x348 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2892 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x462 () Bool)
(declare-fun x3514 () Int)
(declare-fun x3347 () Bool)
(declare-fun x2430 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x2005 () Int)
(declare-fun x2211 () Bool)
(declare-fun x2705 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x3342 () Bool)
(declare-fun x107 () Bool)
(declare-fun x1674 () Int)
(declare-fun x3637 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x827 () Bool)
(declare-fun x2715 () Int)
(declare-fun x2075 () Bool)
(declare-fun x3565 () Int)
(declare-fun x1357 () Int)
(declare-fun x2844 () Bool)
(declare-fun x2599 () Int)
(declare-fun x3314 () Bool)
(declare-fun x2649 () Int)
(declare-fun x3856 () Bool)
(declare-fun x3947 () Bool)
(declare-fun x2553 () Int)
(declare-fun x958 () Int)
(declare-fun x1065 () Int)
(declare-fun x474 () Int)
(declare-fun x2382 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x2169 () Int)
(declare-fun x1396 () Int)
(declare-fun x2417 () Bool)
(declare-fun x2738 () Int)
(declare-fun x1497 () Int)
(declare-fun x2988 () Int)
(declare-fun x6 () Bool)
(declare-fun x4009 () Bool)
(declare-fun x1465 () Int)
(declare-fun x2028 () Bool)
(declare-fun x3618 () Int)
(declare-fun x2780 () Int)
(declare-fun x1981 () Int)
(declare-fun x2063 () Int)
(declare-fun x2390 () Bool)
(declare-fun x568 () Bool)
(declare-fun x3321 () Bool)
(declare-fun x3375 () Int)
(declare-fun x2840 () Bool)
(declare-fun x3431 () Int)
(declare-fun x3400 () Int)
(declare-fun x3531 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x3891 () Int)
(declare-fun x950 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x2244 () Int)
(declare-fun x3752 () Bool)
(declare-fun x3645 () Bool)
(declare-fun x3783 () Int)
(declare-fun x2959 () Int)
(declare-fun x4113 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x1471 () Int)
(declare-fun x757 () Int)
(declare-fun x455 () Int)
(declare-fun x4017 () Bool)
(declare-fun x747 () Int)
(declare-fun x2638 () Int)
(declare-fun x42 () Int)
(declare-fun x1220 () Bool)
(declare-fun x1576 () Int)
(declare-fun x3043 () Int)
(declare-fun x875 (Int) Int)
(declare-fun x456 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x849 () Bool)
(declare-fun x1205 () Int)
(declare-fun x2856 () Bool)
(declare-fun x2142 () Int)
(declare-fun x1376 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x485 () Int)
(declare-fun x1112 () Int)
(declare-fun x2295 () Int)
(declare-fun x412 () Int)
(declare-fun x231 () Bool)
(declare-fun x3161 () Int)
(declare-fun x1211 () Bool)
(declare-fun x2870 () Int)
(declare-fun x1507 () Int)
(declare-fun x3570 () Int)
(declare-fun x1429 () Int)
(declare-fun x1062 () Int)
(declare-fun x547 () Int)
(declare-fun x2446 () Bool)
(declare-fun x4059 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x3522 () Bool)
(declare-fun x2378 () Bool)
(declare-fun x2628 () Int)
(declare-fun x1070 () Bool)
(declare-fun x2732 () Int)
(declare-fun x3984 () Bool)
(declare-fun x1938 () Int)
(declare-fun x2510 () Bool)
(declare-fun x2384 () Int)
(declare-fun x3366 () Bool)
(declare-fun x396 () Int)
(declare-fun x890 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x2709 () Int)
(declare-fun x1914 () Bool)
(declare-fun x4185 () Int)
(declare-fun x3702 () Int)
(declare-fun x4239 () Int)
(declare-fun x2135 () Int)
(declare-fun x552 () Int)
(declare-fun x1078 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1885 () Int)
(declare-fun x2250 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x3885 () Bool)
(declare-fun x2938 () Bool)
(declare-fun x29 () Int)
(declare-fun x2805 () Int)
(declare-fun x999 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x1084 () Int)
(declare-fun x3477 () Bool)
(declare-fun x422 () Bool)
(declare-fun x2495 () Int)
(declare-fun x3123 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x103 () Bool)
(declare-fun x784 () Bool)
(declare-fun x2073 () Int)
(declare-fun x4081 () Int)
(declare-fun x2048 () Int)
(declare-fun x4124 () Int)
(declare-fun x471 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x3866 () Int)
(declare-fun x4120 () Bool)
(declare-fun x1648 () Int)
(declare-fun x954 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x2406 () Int)
(declare-fun x800 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x4216 () Bool)
(declare-fun x138 () Bool)
(declare-fun x1550 () Int)
(declare-fun x1493 () Int)
(declare-fun x3942 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1343 () Int)
(declare-fun x2594 () Int)
(declare-fun x3088 () Int)
(declare-fun x470 () Int)
(declare-fun x878 () Bool)
(declare-fun x2439 () Int)
(declare-fun x745 () Int)
(declare-fun x1466 () Int)
(declare-fun x3365 () Bool)
(declare-fun x457 () Int)
(declare-fun x1430 () Int)
(declare-fun x1254 () Bool)
(declare-fun x368 () Int)
(declare-fun x3591 () Int)
(declare-fun x4189 () Bool)
(declare-fun x2694 () Int)
(declare-fun x3026 () Int)
(declare-fun x121 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x3943 () Int)
(declare-fun x4182 () Int)
(declare-fun x3211 () Int)
(declare-fun x2087 () Bool)
(declare-fun x187 () Int)
(declare-fun x3724 () Int)
(declare-fun x460 () Int)
(declare-fun x360 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x579 () Bool)
(declare-fun x562 () Int)
(declare-fun x2866 () Bool)
(declare-fun x2792 () Bool)
(declare-fun x2057 () Int)
(declare-fun x1069 () Int)
(declare-fun x1398 () Bool)
(declare-fun x3207 () Bool)
(declare-fun x2246 () Int)
(declare-fun x1259 () Int)
(declare-fun x2056 () Bool)
(declare-fun x4048 () Bool)
(declare-fun x431 () Bool)
(declare-fun x4079 () Int)
(declare-fun x2863 () Bool)
(declare-fun x3757 () Int)
(declare-fun x1297 () Int)
(declare-fun x1526 () Bool)
(declare-fun x2102 () Int)
(declare-fun x278 () Int)
(declare-fun x1714 () Bool)
(declare-fun x917 () Bool)
(declare-fun x2298 () Int)
(declare-fun x1689 () Bool)
(declare-fun x260 () Bool)
(declare-fun x2950 () Int)
(declare-fun x3723 () Int)
(declare-fun x3740 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x3691 () Int)
(declare-fun x1782 () Int)
(declare-fun x4096 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x3626 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x845 () Bool)
(declare-fun x3861 () Int)
(declare-fun x2843 () Int)
(declare-fun x4014 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1610 () Int)
(declare-fun x1175 () Bool)
(declare-fun x261 () Bool)
(declare-fun x2754 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x1481 () Int)
(declare-fun x3884 () Int)
(declare-fun x3958 () Int)
(declare-fun x1844 () Bool)
(declare-fun x1037 () Int)
(declare-fun x365 () Int)
(declare-fun x3875 () Bool)
(declare-fun x2488 () Int)
(declare-fun x2986 () Bool)
(declare-fun x3519 () Int)
(declare-fun x819 () Bool)
(declare-fun x2917 () Bool)
(declare-fun x3629 () Bool)
(declare-fun x1789 () Int)
(declare-fun x2907 () Int)
(declare-fun x4070 () Bool)
(declare-fun x1604 () Int)
(declare-fun x1159 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x2867 () Bool)
(declare-fun x1289 () Int)
(declare-fun x4036 () Int)
(declare-fun x1359 () Bool)
(declare-fun x924 () Int)
(declare-fun x1730 () Bool)
(declare-fun x789 () Int)
(declare-fun x4099 () Int)
(declare-fun x2981 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x2682 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x2646 () Int)
(declare-fun x2035 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x813 () Bool)
(declare-fun x1028 () Int)
(declare-fun x25 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x1780 () Int)
(declare-fun x563 () Bool)
(declare-fun x3094 () Int)
(declare-fun x3664 () Bool)
(declare-fun x3789 () Int)
(declare-fun x1424 () Bool)
(declare-fun x886 () Bool)
(declare-fun x248 () Bool)
(declare-fun x395 () Bool)
(declare-fun x4006 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x748 () Int)
(declare-fun x1950 () Bool)
(declare-fun x1182 () Int)
(declare-fun x1824 () Int)
(declare-fun x2192 () Bool)
(declare-fun x1081 () Int)
(declare-fun x4220 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x3555 () Bool)
(declare-fun x3764 () Bool)
(declare-fun x847 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x4057 () Bool)
(declare-fun x3385 () Int)
(declare-fun x3846 () Int)
(declare-fun x3508 () Int)
(declare-fun x2651 () Int)
(declare-fun x493 () Bool)
(declare-fun x3718 () Int)
(declare-fun x219 () Int)
(declare-fun x3083 () Bool)
(declare-fun x838 () Bool)
(declare-fun x133 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x1836 () Int)
(declare-fun x3148 () Bool)
(declare-fun x3167 () Int)
(declare-fun x2428 () Int)
(declare-fun x102 () Bool)
(declare-fun x323 (Int Int) Int)
(declare-fun x2973 () Bool)
(declare-fun x188 () Bool)
(declare-fun x3690 () Bool)
(declare-fun x1068 () Int)
(declare-fun x3731 () Int)
(declare-fun x3902 () Bool)
(declare-fun x3413 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x3485 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x962 () Int)
(declare-fun x26 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x2280 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x524 () Int)
(declare-fun x1641 () Int)
(declare-fun x2742 () Int)
(declare-fun x3072 () Int)
(declare-fun x1414 () Int)
(declare-fun x2165 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x2282 () Int)
(declare-fun x1099 () Int)
(declare-fun x2915 () Int)
(declare-fun x697 () Int)
(declare-fun x124 () Int)
(declare-fun x3648 () Bool)
(declare-fun x3438 () Int)
(declare-fun x4176 () Bool)
(declare-fun x781 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x3704 () Bool)
(declare-fun x3302 () Bool)
(declare-fun x2729 () Int)
(declare-fun x672 () Int)
(declare-fun x869 () Int)
(declare-fun x1143 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x415 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x2578 () Int)
(declare-fun x1925 () Int)
(declare-fun x1558 () Int)
(declare-fun x2499 () Bool)
(declare-fun x1389 () Int)
(declare-fun x754 () Bool)
(declare-fun x1101 () Int)
(declare-fun x3613 () Int)
(declare-fun x1091 () Bool)
(declare-fun x3986 () Int)
(declare-fun x1698 () Int)
(declare-fun x1826 () Int)
(declare-fun x195 () Int)
(declare-fun x627 () Bool)
(declare-fun x2665 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x3730 () Bool)
(declare-fun x2689 () Int)
(declare-fun x1680 () Bool)
(declare-fun x3621 () Bool)
(declare-fun x866 () Bool)
(declare-fun x3070 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x427 () Bool)
(declare-fun x543 () Int)
(declare-fun x4249 () Int)
(declare-fun x1031 () Bool)
(declare-fun x2317 () Int)
(declare-fun x2238 () Bool)
(declare-fun x2052 () Int)
(declare-fun x760 () Bool)
(declare-fun x693 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x4111 () Bool)
(declare-fun x4085 () Int)
(declare-fun x1073 () Int)
(declare-fun x582 () Int)
(declare-fun x742 () Bool)
(declare-fun x3130 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x2552 () Bool)
(declare-fun x2475 () Bool)
(declare-fun x551 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x375 () Bool)
(declare-fun x2441 () Int)
(declare-fun x1652 () Bool)
(declare-fun x3525 () Int)
(declare-fun x147 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x4071 () Int)
(declare-fun x2739 () Int)
(declare-fun x926 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x220 () Bool)
(declare-fun x642 () Bool)
(declare-fun x961 () Int)
(declare-fun x3024 () Bool)
(declare-fun x1155 () Int)
(declare-fun x3125 () Bool)
(declare-fun x3864 () Int)
(declare-fun x301 () Int)
(declare-fun x290 () Bool)
(declare-fun x497 () Int)
(declare-fun x698 () Bool)
(declare-fun x4022 () Bool)
(declare-fun x2713 () Int)
(declare-fun x2945 () Int)
(declare-fun x4049 () Bool)
(declare-fun x4054 () Bool)
(declare-fun x1008 () Int)
(declare-fun x1011 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x2653 () Int)
(declare-fun x3236 () Bool)
(declare-fun x3136 () Int)
(declare-fun x1191 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x3449 () Int)
(declare-fun x2953 () Bool)
(declare-fun x3985 () Int)
(declare-fun x3982 () Int)
(declare-fun x353 () Bool)
(declare-fun x955 () Int)
(declare-fun x3857 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x4023 () Bool)
(declare-fun x2487 () Int)
(declare-fun x4162 () Bool)
(declare-fun x372 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x1381 (Int) Int)
(declare-fun x1847 () Bool)
(declare-fun x3509 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x831 () Int)
(declare-fun x4226 () Int)
(declare-fun x3745 () Bool)
(declare-fun x3915 () Bool)
(declare-fun x1757 () Int)
(declare-fun x2203 () Bool)
(declare-fun x572 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x4091 () Int)
(declare-fun x4186 () Int)
(declare-fun x3105 () Int)
(declare-fun x2762 () Bool)
(declare-fun x4122 () Bool)
(declare-fun x3890 () Bool)
(declare-fun x3108 () Int)
(declare-fun x3309 () Int)
(declare-fun x3078 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x3397 () Int)
(declare-fun x3521 () Bool)
(declare-fun x597 () Bool)
(declare-fun x3447 () Int)
(declare-fun x611 () Int)
(declare-fun x3542 () Int)
(declare-fun x3255 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x3867 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x3403 () Int)
(declare-fun x1486 () Bool)
(declare-fun x238 () Bool)
(declare-fun x2873 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x2858 () Int)
(declare-fun x3282 (Int) Int)
(declare-fun x1581 () Int)
(declare-fun x3588 () Bool)
(declare-fun x120 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x280 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x2708 () Bool)
(declare-fun x184 () Int)
(declare-fun x2415 () Int)
(declare-fun x3975 () Int)
(declare-fun x1315 () Int)
(declare-fun x1811 () Bool)
(declare-fun x159 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x2596 () Int)
(declare-fun x3676 () Int)
(declare-fun x3269 () Bool)
(declare-fun x2760 () Int)
(declare-fun x1763 () Bool)
(declare-fun x3353 () Int)
(declare-fun x4102 () Bool)
(declare-fun x3176 () Int)
(declare-fun x1670 () Int)
(declare-fun x1157 () Int)
(declare-fun x4247 () Bool)
(declare-fun x4192 (Int) Int)
(declare-fun x2531 () Bool)
(declare-fun x2602 () Int)
(declare-fun x4164 () Int)
(declare-fun x186 () Int)
(declare-fun x2494 () Bool)
(declare-fun x1178 () Int)
(declare-fun x511 () Bool)
(declare-fun x3276 () Bool)
(declare-fun x2759 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x1951 () Int)
(declare-fun x2349 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x292 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x3717 () Bool)
(declare-fun x2636 () Int)
(declare-fun x2232 () Bool)
(declare-fun x2116 () Int)
(declare-fun x1361 () Int)
(declare-fun x860 () Bool)
(declare-fun x4064 () Int)
(declare-fun x2429 () Int)
(declare-fun x2497 () Bool)
(declare-fun x1620 () Int)
(declare-fun x1230 () Int)
(declare-fun x2003 () Bool)
(declare-fun x2262 () Int)
(declare-fun x3095 () Bool)
(declare-fun x1255 () Int)
(declare-fun x2159 () Int)
(declare-fun x113 () Bool)
(declare-fun x418 () Bool)
(declare-fun x740 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x1960 () Bool)
(declare-fun x374 () Bool)
(declare-fun x2172 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x4050 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x451 () Int)
(declare-fun x1513 () Bool)
(declare-fun x3669 () Int)
(declare-fun x537 () Int)
(declare-fun x1717 () Int)
(declare-fun x3278 () Int)
(declare-fun x3181 () Int)
(declare-fun x2376 () Int)
(declare-fun x426 () Bool)
(declare-fun x170 () Int)
(declare-fun x2401 () Int)
(declare-fun x1116 () Bool)
(declare-fun x3430 () Int)
(declare-fun x1588 () Int)
(declare-fun x2910 () Int)
(declare-fun x1868 () Int)
(declare-fun x221 () Int)
(declare-fun x2958 () Int)
(declare-fun x48 () Int)
(declare-fun x615 () Int)
(declare-fun x2800 () Bool)
(declare-fun x670 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x3701 () Bool)
(declare-fun x1781 () Int)
(declare-fun x974 () Int)
(declare-fun x1628 () Bool)
(declare-fun x4181 () Int)
(declare-fun x1510 () Int)
(declare-fun x2666 () Int)
(declare-fun x2791 () Int)
(declare-fun x38 () Bool)
(declare-fun x3614 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x3328 () Bool)
(declare-fun x4046 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x3536 () Bool)
(declare-fun x1582 () Int)
(declare-fun x3506 () Bool)
(declare-fun x3862 () Bool)
(declare-fun x3563 () Bool)
(declare-fun x1060 () Int)
(declare-fun x1410 () Int)
(declare-fun x2483 () Bool)
(declare-fun x3480 () Bool)
(declare-fun x2037 () Int)
(declare-fun x3340 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x1656 () Int)
(declare-fun x1599 () Bool)
(declare-fun x2564 () Int)
(declare-fun x3627 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x404 () Bool)
(declare-fun x2543 () Int)
(declare-fun x3791 () Bool)
(declare-fun x3810 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x1830 () Int)
(declare-fun x3338 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x2612 () Int)
(declare-fun x2007 () Bool)
(declare-fun x534 () Int)
(declare-fun x3886 () Bool)
(declare-fun x1154 () Int)
(declare-fun x2394 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x1630 () Int)
(declare-fun x209 () Int)
(declare-fun x2670 () Int)
(declare-fun x576 () Int)
(declare-fun x400 () Bool)
(declare-fun x3604 () Int)
(declare-fun x2703 () Int)
(declare-fun x3100 () Int)
(declare-fun x3054 () Bool)
(declare-fun x3727 () Bool)
(declare-fun x1304 () Int)
(declare-fun x1540 () Bool)
(declare-fun x1863 () Int)
(declare-fun x3065 () Int)
(declare-fun x1613 () Int)
(declare-fun x179 () Int)
(declare-fun x329 () Bool)
(declare-fun x3647 () Bool)
(declare-fun x39 () Int)
(declare-fun x2783 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x14 () Bool)
(declare-fun x2327 () Int)
(declare-fun x1484 () Int)
(declare-fun x1850 () Bool)
(declare-fun x4248 () Int)
(declare-fun x2139 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x3630 () Int)
(declare-fun x236 () Bool)
(declare-fun x3389 () Bool)
(declare-fun x477 () Bool)
(declare-fun x3785 () Bool)
(declare-fun x66 () Bool)
(declare-fun x2815 () Bool)
(declare-fun x553 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x2461 () Int)
(declare-fun x1949 () Int)
(declare-fun x1003 () Int)
(declare-fun x1038 () Bool)
(declare-fun x144 () Bool)
(declare-fun x871 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x532 () Bool)
(declare-fun x2096 () Int)
(declare-fun x1866 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x2257 () Int)
(declare-fun x3946 () Int)
(declare-fun x56 () Bool)
(declare-fun x853 () Bool)
(declare-fun x3781 () Int)
(declare-fun x3936 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x1046 () Int)
(declare-fun x2782 () Int)
(declare-fun x3200 () Bool)
(declare-fun x852 () Bool)
(declare-fun x657 () Int)
(declare-fun x3933 (Int Int) Int)
(declare-fun x3056 () Bool)
(declare-fun x232 () Int)
(declare-fun x181 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x2228 () Int)
(declare-fun x100 () Int)
(declare-fun x2276 () Bool)
(declare-fun x134 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x3535 () Bool)
(declare-fun x4215 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x732 () Int)
(declare-fun x1829 () Int)
(declare-fun x322 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x1975 () Int)
(declare-fun x1445 () Int)
(declare-fun x2084 () Int)
(declare-fun x2998 () Int)
(declare-fun x4210 () Int)
(declare-fun x4028 () Bool)
(declare-fun x1317 () Int)
(declare-fun x3238 () Bool)
(declare-fun x3888 () Int)
(declare-fun x440 () Int)
(declare-fun x3304 () Int)
(declare-fun x2222 () Int)
(declare-fun x3051 () Bool)
(declare-fun x3493 () Bool)
(declare-fun x3672 () Int)
(declare-fun x3440 () Int)
(declare-fun x1391 () Bool)
(declare-fun x2893 () Bool)
(declare-fun x459 () Int)
(declare-fun x3842 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x964 () Bool)
(declare-fun x706 () Int)
(declare-fun x3405 () Bool)
(declare-fun x327 () Int)
(declare-fun x2462 () Bool)
(declare-fun x1578 () Int)
(declare-fun x2431 () Int)
(declare-fun x4012 () Int)
(declare-fun x2001 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x530 () Int)
(declare-fun x2548 () Bool)
(declare-fun x2711 () Bool)
(declare-fun x229 () Bool)
(declare-fun x72 () Bool)
(declare-fun x1843 () Int)
(declare-fun x940 () Int)
(declare-fun x2561 () Bool)
(declare-fun x3168 () Bool)
(declare-fun x4245 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x3993 () Bool)
(declare-fun x2562 () Int)
(declare-fun x1458 () Int)
(declare-fun x140 () Int)
(declare-fun x1364 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x87 () Bool)
(declare-fun x913 () Int)
(declare-fun x1009 () Int)
(declare-fun x3001 () Int)
(declare-fun x1368 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x3819 () Bool)
(declare-fun x585 () Bool)
(declare-fun x4150 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x3853 () Int)
(declare-fun x97 () Bool)
(declare-fun x2733 () Bool)
(declare-fun x3497 () Int)
(declare-fun x3220 () Int)
(declare-fun x125 () Bool)
(declare-fun x4001 () Int)
(declare-fun x2284 () Bool)
(declare-fun x908 () Bool)
(declare-fun x643 () Bool)
(declare-fun x1638 () Int)
(declare-fun x3114 () Int)
(declare-fun x484 () Bool)
(declare-fun x1815 () Int)
(declare-fun x3792 () Bool)
(declare-fun x3877 () Int)
(declare-fun x1307 () Bool)
(declare-fun x647 () Bool)
(declare-fun x2811 () Bool)
(declare-fun x3194 () Int)
(declare-fun x105 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x3171 () Int)
(declare-fun x3132 () Bool)
(declare-fun x2726 () Bool)
(declare-fun x3878 () Int)
(declare-fun x4077 () Bool)
(declare-fun x668 () Bool)
(declare-fun x3134 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x1624 () Int)
(declare-fun x324 () Bool)
(declare-fun x3987 () Int)
(declare-fun x3976 () Int)
(declare-fun x1057 () Bool)
(declare-fun x4033 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x2187 () Int)
(declare-fun x2418 () Int)
(declare-fun x603 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x3012 () Int)
(declare-fun x409 () Int)
(declare-fun x1971 () Int)
(declare-fun x4045 () Int)
(declare-fun x3434 () Int)
(declare-fun x439 () Int)
(declare-fun x1820 () Bool)
(declare-fun x972 () Int)
(declare-fun x612 () Bool)
(declare-fun x4068 () Int)
(declare-fun x492 () Bool)
(declare-fun x3767 () Int)
(declare-fun x1487 () Int)
(declare-fun x4237 () Bool)
(declare-fun x2747 () Bool)
(declare-fun x3122 () Int)
(declare-fun x3315 () Bool)
(declare-fun x623 () Bool)
(declare-fun x822 () Bool)
(declare-fun x918 () Int)
(declare-fun x1707 () Int)
(declare-fun x2277 () Bool)
(declare-fun x473 () Int)
(declare-fun x1900 () Bool)
(declare-fun x2185 () Int)
(declare-fun x1659 () Bool)
(declare-fun x3496 () Bool)
(declare-fun x1954 () Int)
(declare-fun x3996 () Bool)
(declare-fun x4145 () Int)
(declare-fun x1168 () Int)
(declare-fun x3355 () Int)
(declare-fun x112 () Int)
(declare-fun x2842 () Bool)
(declare-fun x2757 () Int)
(declare-fun x411 () Bool)
(declare-fun x157 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x714 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x3965 () Bool)
(declare-fun x444 () Int)
(declare-fun x281 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x1064 () Int)
(declare-fun x1546 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x2030 () Int)
(declare-fun x1639 () Int)
(declare-fun x2749 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x73 () Bool)
(declare-fun x2991 () Bool)
(declare-fun x1209 () Int)
(declare-fun x2932 () Bool)
(declare-fun x2388 () Int)
(declare-fun x2110 () Bool)
(declare-fun x3747 () Int)
(declare-fun x3429 () Int)
(declare-fun x2593 () Int)
(declare-fun x3098 () Bool)
(declare-fun x33 () Bool)
(declare-fun x321 () Int)
(declare-fun x2746 () Bool)
(declare-fun x1585 () Int)
(declare-fun x3773 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x256 () Bool)
(declare-fun x1726 () Int)
(declare-fun x2404 () Bool)
(declare-fun x605 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x906 () Bool)
(declare-fun x35 () Int)
(declare-fun x273 () Bool)
(declare-fun x518 () Int)
(declare-fun x2778 () Int)
(declare-fun x1942 () Int)
(declare-fun x1708 () Bool)
(declare-fun x3266 () Bool)
(declare-fun x3009 () Bool)
(declare-fun x1771 () Int)
(declare-fun x3815 () Bool)
(declare-fun x2716 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x1996 () Int)
(declare-fun x3962 () Bool)
(declare-fun x809 () Int)
(declare-fun x1709 () Int)
(declare-fun x3635 () Int)
(declare-fun x1132 () Int)
(declare-fun x3310 () Int)
(declare-fun x592 () Bool)
(declare-fun x617 () Int)
(declare-fun x4082 () Int)
(declare-fun x465 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x1085 () Int)
(declare-fun x710 () Bool)
(declare-fun x865 () Bool)
(declare-fun x881 () Int)
(declare-fun x1515 (Int) Int)
(declare-fun x1548 () Int)
(declare-fun x1212 () Int)
(declare-fun x1896 () Bool)
(declare-fun x3980 () Int)
(declare-fun x3502 () Int)
(declare-fun x355 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x2243 () Int)
(declare-fun x3039 () Bool)
(declare-fun x117 () Int)
(declare-fun x3911 () Int)
(declare-fun x2322 () Int)
(declare-fun x208 () Int)
(declare-fun x3636 () Bool)
(declare-fun x213 () Bool)
(declare-fun x15 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x3762 () Int)
(declare-fun x1375 () Int)
(declare-fun x3370 () Int)
(declare-fun x2979 () Bool)
(declare-fun x335 () Bool)
(declare-fun x3505 () Int)
(declare-fun x2623 () Bool)
(declare-fun x2044 () Int)
(declare-fun x3154 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x3023 () Int)
(declare-fun x1697 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x3188 () Int)
(declare-fun x550 () Bool)
(declare-fun x434 () Bool)
(declare-fun x378 () Bool)
(declare-fun x416 () Bool)
(declare-fun x1904 () Int)
(declare-fun x2769 () Bool)
(declare-fun x984 () Bool)
(declare-fun x3770 () Int)
(declare-fun x3396 () Bool)
(declare-fun x4107 () Bool)
(declare-fun x4127 () Int)
(declare-fun x21 () Bool)
(declare-fun x3828 () Int)
(declare-fun x3736 () Int)
(declare-fun x2045 () Int)
(declare-fun x3267 () Int)
(declare-fun x1679 () Bool)
(declare-fun x3778 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x3685 () Bool)
(declare-fun x2731 () Int)
(declare-fun x68 () Bool)
(declare-fun x3087 () Int)
(declare-fun x772 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x2149 () Bool)
(declare-fun x2078 () Bool)
(declare-fun x658 () Int)
(declare-fun x1537 () Int)
(declare-fun x2524 () Bool)
(declare-fun x1218 () Int)
(declare-fun x2845 () Int)
(declare-fun x733 () Int)
(declare-fun x1930 () Int)
(declare-fun x3445 () Bool)
(declare-fun x1968 () Int)
(declare-fun x3632 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x2775 () Int)
(declare-fun x1455 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x2530 () Bool)
(declare-fun x363 () Bool)
(declare-fun x746 () Bool)
(declare-fun x3398 () Int)
(declare-fun x3517 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x46 () Bool)
(declare-fun x2624 () Int)
(declare-fun x3229 () Bool)
(declare-fun x2648 () Int)
(declare-fun x1019 () Bool)
(declare-fun x1810 () Int)
(declare-fun x2220 () Int)
(declare-fun x904 () Bool)
(declare-fun x2341 () Int)
(declare-fun x1828 () Bool)
(declare-fun x1773 () Int)
(declare-fun x4088 () Bool)
(declare-fun x3684 () Int)
(declare-fun x3383 () Bool)
(declare-fun x3526 () Bool)
(declare-fun x2567 () Int)
(declare-fun x218 () Bool)
(declare-fun x1596 () Int)
(declare-fun x2750 () Int)
(declare-fun x499 () Bool)
(declare-fun x1196 () Int)
(declare-fun x461 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x631 () Bool)
(declare-fun x2589 () Bool)
(declare-fun x2255 () Int)
(declare-fun x204 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x1235 () Int)
(declare-fun x979 () Bool)
(declare-fun x3932 () Int)
(declare-fun x265 () Bool)
(declare-fun x119 () Bool)
(declare-fun x3889 () Bool)
(declare-fun x3754 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x3376 () Int)
(declare-fun x727 () Bool)
(declare-fun x2300 () Int)
(declare-fun x94 () Int)
(declare-fun x2471 () Bool)
(declare-fun x2880 () Int)
(declare-fun x2193 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x3017 () Int)
(declare-fun x3393 () Int)
(declare-fun x1957 () Bool)
(declare-fun x244 () Bool)
(declare-fun x488 () Int)
(declare-fun x3303 () Bool)
(declare-fun x3311 () Bool)
(declare-fun x1948 () Int)
(declare-fun x3293 () Bool)
(declare-fun x402 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x2994 () Int)
(declare-fun x688 () Int)
(declare-fun x4097 () Int)
(declare-fun x3569 () Bool)
(declare-fun x806 () Int)
(declare-fun x2678 () Int)
(declare-fun x2335 () Bool)
(declare-fun x3503 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x960 () Bool)
(declare-fun x3414 () Bool)
(declare-fun x1457 () Int)
(declare-fun x289 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x2132 () Bool)
(declare-fun x210 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x3918 () Bool)
(declare-fun x3869 () Int)
(declare-fun x515 () Bool)
(declare-fun x738 () Bool)
(declare-fun x2120 () Int)
(declare-fun x1403 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x258 () Bool)
(declare-fun x3843 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x2798 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x1671 () Int)
(declare-fun x2600 () Int)
(declare-fun x1345 () Int)
(declare-fun x1049 () Int)
(declare-fun x3380 () Bool)
(declare-fun x1676 () Int)
(declare-fun x851 () Bool)
(declare-fun x155 () Int)
(declare-fun x2122 () Bool)
(declare-fun x776 () Int)
(declare-fun x3064 () Bool)
(declare-fun x2533 () Int)
(declare-fun x358 () Int)
(declare-fun x4039 () Int)
(declare-fun x4203 () Bool)
(declare-fun x588 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x720 () Int)
(declare-fun x32 () Bool)
(declare-fun x3593 () Int)
(declare-fun x4042 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x3642 () Int)
(declare-fun x991 () Bool)
(declare-fun x3191 () Int)
(declare-fun x3166 () Int)
(declare-fun x2094 () Int)
(declare-fun x1498 () Int)
(declare-fun x567 () Bool)
(declare-fun x1776 () Int)
(declare-fun x4000 () Bool)
(declare-fun x667 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x132 () Int)
(declare-fun x4090 () Int)
(declare-fun x3796 () Int)
(declare-fun x3772 () Int)
(declare-fun x1107 () Int)
(declare-fun x2173 () Int)
(declare-fun x2245 () Bool)
(declare-fun x2569 () Bool)
(declare-fun x1572 () Int)
(declare-fun x1998 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x104 () Bool)
(declare-fun x1890 () Int)
(declare-fun x2148 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1 () Int)
(declare-fun x2673 () Int)
(declare-fun x703 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x1083 () Int)
(declare-fun x4177 () Int)
(declare-fun x1047 () Int)
(declare-fun x2240 () Bool)
(declare-fun x1986 () Int)
(declare-fun x1243 () Bool)
(declare-fun x3113 () Int)
(declare-fun x419 () Int)
(declare-fun x4204 () Int)
(declare-fun x2914 () Int)
(declare-fun x271 () Int)
(declare-fun x981 () Int)
(declare-fun x1350 () Int)
(declare-fun x739 () Int)
(declare-fun x3769 () Bool)
(declare-fun x899 () Int)
(declare-fun x1745 () Bool)
(declare-fun x4235 () Bool)
(declare-fun x4252 () Int)
(declare-fun x891 () Bool)
(declare-fun x1619 () Int)
(declare-fun x2744 () Bool)
(declare-fun x403 () Int)
(declare-fun x1179 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x3352 () Int)
(declare-fun x3970 () Int)
(declare-fun x3586 () Bool)
(declare-fun x3678 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x3112 () Bool)
(declare-fun x3800 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x973 () Bool)
(declare-fun x382 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1934 () Int)
(declare-fun x4221 () Bool)
(declare-fun x786 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x4053 () Bool)
(declare-fun x2104 () Bool)
(declare-fun x1658 () Int)
(declare-fun x604 () Int)
(declare-fun x3560 () Int)
(declare-fun x2501 () Int)
(declare-fun x466 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x644 () Int)
(declare-fun x1261 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x2242 () Int)
(declare-fun x2913 () Int)
(declare-fun x4038 () Int)
(declare-fun x3146 () Int)
(declare-fun x801 () Bool)
(declare-fun x8 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x2265 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x216 () Int)
(declare-fun x4173 () Int)
(declare-fun x1927 () Bool)
(declare-fun x2080 () Int)
(declare-fun x1796 () Bool)
(declare-fun x3854 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x2797 () Int)
(declare-fun x2803 () Bool)
(declare-fun x3874 () Bool)
(declare-fun x1093 () Int)
(declare-fun x3668 () Int)
(declare-fun x2505 () Int)
(declare-fun x3216 () Int)
(declare-fun x3214 () Bool)
(declare-fun x3739 () Bool)
(declare-fun x3239 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x3040 () Int)
(declare-fun x2256 () Bool)
(declare-fun x793 () Bool)
(declare-fun x1665 () Int)
(declare-fun x4043 () Bool)
(declare-fun x383 () Int)
(declare-fun x4217 () Int)
(declare-fun x3085 () Bool)
(declare-fun x2182 () Int)
(declare-fun x356 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x665 () Bool)
(declare-fun x3899 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x577 () Int)
(declare-fun x3981 () Int)
(declare-fun x1100 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x2688 () Int)
(declare-fun x3567 () Int)
(declare-fun x3312 () Bool)
(declare-fun x2357 () Int)
(declare-fun x2330 () Int)
(declare-fun x1095 () Int)
(declare-fun x3319 () Int)
(declare-fun x1795 () Bool)
(declare-fun x3662 () Int)
(declare-fun x3543 () Int)
(declare-fun x2350 (Int Int) Int)
(declare-fun x3359 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x3324 () Int)
(declare-fun x463 () Int)
(declare-fun x3801 () Int)
(declare-fun x3421 () Bool)
(declare-fun x2367 () Bool)
(declare-fun x3301 () Bool)
(declare-fun x3746 () Int)
(declare-fun x1738 () Int)
(declare-fun x96 () Int)
(declare-fun x237 () Int)
(declare-fun x2753 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x1666 () Int)
(declare-fun x3192 () Int)
(declare-fun x3799 () Int)
(declare-fun x802 () Int)
(declare-fun x3707 () Bool)
(declare-fun x3850 () Int)
(declare-fun x2136 () Bool)
(declare-fun x520 () Int)
(declare-fun x2655 () Int)
(declare-fun x4063 () Int)
(declare-fun x90 () Bool)
(declare-fun x406 () Bool)
(declare-fun x936 () Int)
(declare-fun x3197 () Bool)
(declare-fun x862 () Int)
(declare-fun x1956 () Int)
(declare-fun x3612 () Bool)
(declare-fun x2247 () Int)
(declare-fun x2027 () Bool)
(declare-fun x533 () Bool)
(declare-fun x599 () Int)
(declare-fun x1400 () Int)
(declare-fun x1370 () Bool)
(declare-fun x3802 () Bool)
(declare-fun x3992 () Bool)
(declare-fun x3446 () Bool)
(declare-fun x476 () Int)
(declare-fun x2485 () Int)
(declare-fun x632 () Int)
(declare-fun x34 () Bool)
(declare-fun x376 () Bool)
(declare-fun x2912 () Int)
(declare-fun x723 () Int)
(declare-fun x548 () Int)
(declare-fun x1452 () Int)
(declare-fun x300 () Int)
(declare-fun x1025 () Int)
(declare-fun x2177 () Int)
(declare-fun x3077 () Int)
(declare-fun x3226 (Int Int) Int)
(declare-fun x334 () Bool)
(declare-fun x850 () Int)
(declare-fun x1880 () Bool)
(declare-fun x254 () Bool)
(declare-fun x621 () Int)
(declare-fun x3771 () Int)
(declare-fun x1341 () Bool)
(declare-fun x482 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x990 () Bool)
(declare-fun x2364 () Int)
(declare-fun x1940 () Bool)
(declare-fun x2115 () Bool)
(declare-fun x4183 () Bool)
(declare-fun x3694 () Bool)
(declare-fun x2707 () Int)
(declare-fun x2823 () Bool)
(declare-fun x92 () Bool)
(declare-fun x4029 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1399 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x3332 () Bool)
(declare-fun x528 () Bool)
(declare-fun x3598 () Bool)
(declare-fun x291 () Int)
(declare-fun x1535 () Int)
(declare-fun x1066 () Bool)
(declare-fun x438 () Int)
(declare-fun x1217 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x2263 () Int)
(declare-fun x2614 (Int) Bool)
(declare-fun x3456 () Bool)
(declare-fun x3150 () Int)
(declare-fun x2447 () Bool)
(declare-fun x1524 () Int)
(declare-fun x2465 () Bool)
(declare-fun x394 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1034 () Int)
(declare-fun x3761 () Bool)
(declare-fun x2691 () Bool)
(declare-fun x2445 () Int)
(declare-fun x4031 () Bool)
(declare-fun x2460 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x320 () Bool)
(declare-fun x3468 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x1819 (Int) Int)
(declare-fun x4214 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x839 () Bool)
(declare-fun x296 () Bool)
(declare-fun x4206 () Bool)
(declare-fun x659 () Int)
(declare-fun x177 () Int)
(declare-fun x3251 () Int)
(declare-fun x1012 () Bool)
(declare-fun x4223 () Int)
(declare-fun x1991 () Int)
(declare-fun x2903 () Bool)
(declare-fun x779 () Int)
(declare-fun x915 () Bool)
(declare-fun x3306 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x4151 () Int)
(declare-fun x316 () Int)
(declare-fun x1547 () Bool)
(declare-fun x970 () Bool)
(declare-fun x3748 () Int)
(declare-fun x842 () Int)
(declare-fun x2559 () Int)
(declare-fun x3042 () Bool)
(declare-fun x923 () Int)
(declare-fun x2164 () Int)
(define-fun x882 ((x2072 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2072) (>= x2072 0)) x2072 (- x2072 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3737 ((x2072 Int)) Int (ite (and (< x2072 0) (>= x2072 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x2072 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2072))
(define-fun x3377 ((x2072 Int)) Int (ite (and (>= x2072 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2072)) x2072 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2072) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x2072)) (- x2072 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x2072 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x2072 0)) (+ x2072 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2350 x2072 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1384 ((x3381 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3381) (<= 0 x3381)))
(define-fun x2712 ((x3381 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3381) (>= x3381 0)))
(define-fun x4105 ((x3381 Int)) Bool (and (= x3381 (x2009 x3381 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x2009 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3381) x3381)))
(define-fun x1809 ((x3381 Int)) Bool (and (= 0 (x2009 0 x3381)) (= 0 (x2009 x3381 0))))
(define-fun x3837 ((x3381 Int)) Bool (= x3381 (x2009 x3381 x3381)))
(define-fun x2060 ((x3381 Int)) Bool (and (x1809 x3381) (x3837 x3381) (x4105 x3381)))
(define-fun x1769 ((x3381 Int) (x1724 Int)) Bool (= (x2009 x3381 x1724) (x2009 x1724 x3381)))
(define-fun x1807 ((x3381 Int) (x1724 Int)) Bool (and (<= 0 (x2009 x3381 x1724)) (=> (<= 0 x3381) (<= (x2009 x3381 x1724) x3381)) (=> (<= 0 x1724) (>= x1724 (x2009 x3381 x1724)))))
(define-fun x1204 ((x3381 Int) (x1724 Int)) Bool (and (x1769 x3381 x1724) (x1807 x3381 x1724)))
(define-fun x2928 ((x3381 Int)) Bool (= (x2009 x3381 16777215) (x2350 x3381 16777216)))
(define-fun x1682 ((x3381 Int)) Bool (and (x1204 x3381 16777215) (x2928 x3381)))
(define-fun x3511 ((x3381 Int) (x1724 Int)) Bool (and (> x1724 (x2350 x3381 x1724)) (>= (x2350 x3381 x1724) 0)))
(define-fun x2436 ((x3381 Int) (x1724 Int)) Bool (=> (and (< 0 x1724) (<= 0 x3381)) (= (< x3381 x1724) (= x3381 (x2350 x3381 x1724)))))
(define-fun x3382 ((x3381 Int) (x1724 Int)) Bool (=> (and (> x1724 0) (and (> (+ x1724 x1724) x3381) (<= x1724 x3381))) (= (x2350 x3381 x1724) (- x3381 x1724))))
(define-fun x2291 ((x3381 Int) (x1724 Int)) Bool (=> (> x1724 0) (= x3381 (+ (* (x323 x3381 x1724) x1724) (x2350 x3381 x1724)))))
(define-fun x1327 ((x3381 Int) (x1724 Int)) Bool (and (x2436 x3381 x1724) (x3511 x3381 x1724) (x2291 x3381 x1724) (x3382 x3381 x1724)))
(define-fun x713 ((x3381 Int)) Bool (= (x2350 0 x3381) 0))
(define-fun x1014 ((x3381 Int)) Bool (= (x2350 x3381 1) 0))
(define-fun x618 ((x3381 Int)) Bool (= (x2350 x3381 x3381) 0))
(define-fun x3404 ((x3381 Int)) Bool (and (x618 x3381) (x1014 x3381) (x713 x3381)))
(define-fun x3392 ((x3381 Int) (x1724 Int)) Bool (=> (and (> x1724 0) (< 0 x3381)) (and (<= 0 (x323 x3381 x1724)) (<= (x323 x3381 x1724) x3381))))
(define-fun x2215 ((x3381 Int) (x1724 Int)) Bool (=> (and (and (< x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1724 1)) (and (>= x3381 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3381))) (and (< (x323 x3381 x1724) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 (x323 x3381 x1724)))))
(define-fun x4138 ((x3381 Int) (x1724 Int)) Bool (=> (and (< 1 x1724) (< x1724 x3381)) (< (x323 x3381 x1724) x3381)))
(define-fun x2787 ((x3381 Int) (x1724 Int)) Bool (=> (and (> x3381 0) (> x1724 0)) (= (= (x323 x3381 x1724) 0) (< x3381 x1724))))
(define-fun x60 ((x3381 Int) (x1724 Int)) Bool (=> (and (< 0 x1724) (> x3381 0)) (and (> (* x1724 (x323 x3381 x1724)) (- x3381 x1724)) (>= x3381 (* x1724 (x323 x3381 x1724))))))
(define-fun x3606 ((x3381 Int) (x1724 Int)) Bool (and (x3392 x3381 x1724) (x4138 x3381 x1724) (x60 x3381 x1724) (x2215 x3381 x1724) (x2787 x3381 x1724)))
(define-fun x660 ((x3381 Int)) Bool (= (x323 0 x3381) 0))
(define-fun x1754 ((x3381 Int)) Bool (= x3381 (x323 x3381 1)))
(define-fun x2687 ((x3381 Int)) Bool (=> (not (= x3381 0)) (= 1 (x323 x3381 x3381))))
(define-fun x1000 ((x3381 Int)) Bool (and (x660 x3381) (x2687 x3381) (x1754 x3381)))
(define-fun x2099 ((x3381 Int) (x1724 Int)) Bool (= (x2817 x3381 x1724) (* x1724 x3381)))
(define-fun x677 ((x3381 Int) (x1724 Int)) Bool (and (= (x2817 (- x3381 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3381) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2817 x3381 (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x3381 (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x2817 (- x3381 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1724) (- (* x3381 x1724) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1724)))))
(define-fun x2961 ((x3381 Int) (x1724 Int)) Bool (=> (and (< 0 x3381) (< 0 x1724)) (= (= (x323 (x3377 (x2817 x3381 x1724)) x3381) x1724) (< (x2817 x3381 x1724) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1921 ((x3381 Int) (x1724 Int)) Bool (=> (and (not (= x3381 0)) (not (= x1724 0))) (and (= x3381 (x323 (x2817 x3381 x1724) x1724)) (= x1724 (x323 (x2817 x3381 x1724) x3381)))))
(define-fun x2563 ((x3381 Int) (x1724 Int)) Bool (=> (and (> x3381 0) (< 0 x1724)) (= (< (x323 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3381) x1724) (> (x2817 x3381 x1724) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x3759 ((x3381 Int) (x1724 Int)) Bool (and (= (x3377 (x2817 x3381 x1724)) (x3377 (x2817 (- x3381 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1724))) (= (x3377 (x2817 (- x3381 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3377 (x2817 x3381 x1724))) (= (x3377 (x2817 x3381 (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3377 (x2817 x3381 x1724)))))
(define-fun x128 ((x3381 Int) (x1724 Int)) Bool (and (=> (and (and (<= x1724 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1724)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3381) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3381))) (= (<= (x2817 (- x3381 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3381) (x323 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1724))))) (=> (and (and (< 0 x3381) (<= x3381 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 0 x1724) (<= x1724 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x323 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1724) x3381) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x2817 x3381 x1724)))) (=> (and (and (> x3381 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3381 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1724) (< 0 x1724))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x2817 (- x3381 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1724)) (>= (x323 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1724) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3381)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3381) (< 0 x3381)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1724) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1724))) (= (>= (x323 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3381) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1724)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x2817 x3381 (- x1724 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x2466 ((x3381 Int) (x1724 Int)) Bool (and (x3759 x3381 x1724) (x2099 x3381 x1724) (x128 x3381 x1724) (x2961 x3381 x1724) (x677 x3381 x1724) (x2563 x3381 x1724) (x1921 x3381 x1724)))
(define-fun x1718 ((x3381 Int)) Bool (and (= 0 (x2817 x3381 0)) (= 0 (x2817 0 x3381))))
(define-fun x1278 ((x3381 Int)) Bool (and (= x3381 (x2817 x3381 1)) (= x3381 (x2817 1 x3381))))
(define-fun x3395 ((x3381 Int)) Bool (and (x1278 x3381) (x1718 x3381)))
(define-fun x873 ((x3381 Int) (x1724 Int)) Bool (= (x2817 x1724 x3381) (x2817 x3381 x1724)))
(define-fun x561 ((x3381 Int) (x1724 Int)) Bool (and (=> (and (> 0 x1724) (< x3381 0)) (> (x2817 x3381 x1724) 0)) (=> (and (> 0 x1724) (< 0 x3381)) (< (x2817 x3381 x1724) 0)) (=> (and (> 0 x3381) (< 0 x1724)) (< (x2817 x3381 x1724) 0)) (=> (and (> x1724 0) (> x3381 0)) (< 0 (x2817 x3381 x1724)))))
(define-fun x1725 ((x3381 Int) (x1724 Int)) Bool (and (x2563 x3381 x1724) (x1921 x3381 x1724) (x561 x3381 x1724) (x128 x3381 x1724) (x2961 x3381 x1724) (x873 x3381 x1724) (x3759 x3381 x1724)))
(define-fun x1494 ((x3381 Int)) Bool (= (x2350 x3381 340282366920938463463374607431768211456) (x2009 x3381 340282366920938463463374607431768211455)))
(define-fun x349 ((x3381 Int)) Bool (and (x1204 x3381 340282366920938463463374607431768211455) (x1494 x3381)))
(define-fun x1748 ((x3381 Int)) Bool (= (x2350 x3381 18446744073709551616) (x2009 x3381 18446744073709551615)))
(define-fun x295 ((x3381 Int)) Bool (and (x1204 x3381 18446744073709551615) (x1748 x3381)))
(define-fun x1253 ((x3381 Int) (x1724 Int)) Bool (= (- x3381 (x2009 (- x1724 1) x3381)) (* (x323 x3381 x1724) x1724)))
(define-fun x2547 ((x3381 Int) (x1724 Int)) Bool (and (x2787 x3381 x1724) (x60 x3381 x1724) (x1253 x3381 x1724) (x2215 x3381 x1724) (x3392 x3381 x1724) (x4138 x3381 x1724)))
(define-fun x1695 ((x3381 Int)) Bool (= (x2350 x3381 256) (x2009 x3381 255)))
(define-fun x3117 ((x3381 Int)) Bool (and (x1695 x3381) (x1204 x3381 255)))
(define-fun x1291 ((x3381 Int)) Bool (and (= (x1161 x3381 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1161 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3381))))
(define-fun x2772 ((x3381 Int)) Bool (and (= (x1161 0 x3381) x3381) (= (x1161 x3381 0) x3381)))
(define-fun x1397 ((x3381 Int)) Bool (= (x1161 x3381 x3381) x3381))
(define-fun x81 ((x3381 Int)) Bool (and (x1397 x3381) (x2772 x3381) (x1291 x3381)))
(define-fun x3152 ((x3381 Int) (x1724 Int)) Bool (= (x1161 x1724 x3381) (x1161 x3381 x1724)))
(define-fun x3435 ((x3381 Int) (x1724 Int)) Bool (and (=> (<= 0 x3381) (<= x3381 (x1161 x3381 x1724))) (>= (+ x3381 x1724) (x1161 x3381 x1724)) (=> (>= x1724 0) (>= (x1161 x3381 x1724) x1724))))
(define-fun x2313 ((x3381 Int) (x1724 Int)) Bool (and (x3152 x3381 x1724) (x3435 x3381 x1724)))
(define-fun x1864 ((x3381 Int)) Bool (= (x2350 x3381 1099511627776) (x2009 x3381 1099511627775)))
(define-fun x1851 ((x3381 Int)) Bool (and (x1864 x3381) (x1204 x3381 1099511627775)))
(define-fun x953 ((x3381 Int)) Bool (= (x2009 x3381 1) (x2350 x3381 2)))
(define-fun x1566 ((x3381 Int)) Bool (and (x1204 x3381 1) (x953 x3381)))
(define-fun x2047 ((x3381 Int)) Bool (= (+ 65280 (- x3381 (x2009 x3381 65280))) (x1161 x3381 65280)))
(define-fun x4211 ((x3381 Int)) Bool (and (x2313 x3381 65280) (x2047 x3381)))
(define-fun x1538 ((x3381 Int)) Bool (= (+ (x2009 x3381 65280) (x2350 x3381 256)) (x2350 x3381 65536)))
(define-fun x4196 ((x3381 Int)) Bool (and (x1204 x3381 65280) (x1538 x3381)))
(define-fun x4241 ((x3381 Int)) Bool (= (+ 16776960 (- x3381 (x2009 x3381 16776960))) (x1161 x3381 16776960)))
(define-fun x1521 ((x3381 Int)) Bool (and (x4241 x3381) (x2313 x3381 16776960)))
(define-fun x2544 ((x3381 Int)) Bool (= (x2350 x3381 16777216) (+ (x2350 x3381 256) (x2009 x3381 16776960))))
(define-fun x3913 ((x3381 Int)) Bool (and (x2544 x3381) (x1204 x3381 16776960)))
(define-fun x1164 ((x1456 Int)) Int 0)
(define-fun x1244 ((x1456 Int)) Int 0)
(define-fun x4032 ((x1456 Int)) Int 0)
(define-fun x354 ((x1456 Int)) Int 0)
(define-fun x2241 ((x1456 Int)) Int 0)
(define-fun x2131 ((x1456 Int)) Int 0)
(define-fun x3308 ((x1456 Int)) Int 0)
(define-fun x4003 ((x1456 Int)) Int 0)
(define-fun x1643 ((x1456 Int)) Int 0)
(define-fun x1668 ((x1456 Int)) Int 0)
(define-fun x189 ((x1456 Int)) Int 0)
(define-fun x319 ((x1456 Int)) Int 0)
(define-fun x4139 ((x1456 Int)) Int 0)
(define-fun x635 ((x1456 Int)) Int 0)
(define-fun x2216 ((x1456 Int)) Int (ite (= x1456 x1466) x662 (x2676 x1456)))
(define-fun x1761 ((x1456 Int)) Int (ite (= x1456 x1638) x3560 (x2216 x1456)))
(define-fun x2311 ((x1456 Int)) Int (ite (= x1456 x1792) x2678 (x432 x1456)))
(define-fun x3128 ((x1456 Int)) Int (ite (= x2927 x1456) x3950 (x1288 x1456)))
(define-fun x1646 ((x1456 Int)) Int (ite (= x3188 x1456) x808 (x1515 x1456)))
(define-fun x2710 ((x1456 Int)) Int (ite (= x1456 x4074) x658 (x1646 x1456)))
(define-fun x1435 ((x1456 Int)) Int (ite (= x1456 x1133) x116 (x1515 x1456)))
(define-fun x1469 ((x1456 Int)) Int (ite x768 (x2710 x1456) (x1435 x1456)))
(define-fun x3290 ((x1456 Int)) Int (ite (= x1456 x4186) x1434 (x1469 x1456)))
(define-fun x2924 ((x1456 Int)) Int (ite (= x1456 x1956) x584 (x3290 x1456)))
(define-fun x3760 ((x1456 Int)) Int (ite (= x1456 x3618) x2143 (x1469 x1456)))
(define-fun x3227 ((x1456 Int)) Int (ite x3294 (x2924 x1456) (x3760 x1456)))
(define-fun x4141 ((x1456 Int)) Int (ite x3607 (x1469 x1456) (x3227 x1456)))
(define-fun x1784 ((x1456 Int)) Int (ite x450 (x1469 x1456) (x3227 x1456)))
(define-fun x1089 ((x1456 Int)) Int (ite x61 (x1515 x1456) (x1469 x1456)))
(define-fun x385 ((x1456 Int)) Int (ite x3999 (ite x1966 (x4141 x1456) (ite x738 (x1784 x1456) (x1089 x1456))) (x1515 x1456)))
(define-fun x2107 ((x1456 Int)) Int (ite (= x2025 x1456) 0 (x3282 x1456)))
(define-fun x3186 ((x1456 Int)) Int (ite (= x1456 x1933) x927 (x3282 x1456)))
(define-fun x3583 ((x1456 Int)) Int (ite x540 (ite x1341 (x2107 x1456) (x3282 x1456)) (x3186 x1456)))
(define-fun x64 ((x1456 Int)) Int (ite (= x1456 x520) 0 (x3583 x1456)))
(define-fun x694 ((x1456 Int)) Int (ite (= x1456 x2017) x1128 (x3583 x1456)))
(define-fun x345 ((x1456 Int)) Int (ite x680 (ite x146 (x64 x1456) (x3583 x1456)) (x694 x1456)))
(define-fun x1731 ((x1456 Int)) Int (ite x3607 (x3583 x1456) (x345 x1456)))
(define-fun x2484 ((x1456 Int)) Int (ite x450 (x3583 x1456) (x345 x1456)))
(define-fun x3378 ((x1456 Int)) Int (ite x61 (x3282 x1456) (x3583 x1456)))
(define-fun x1605 ((x1456 Int)) Int (ite x3999 (ite x1966 (x1731 x1456) (ite x738 (x2484 x1456) (x3378 x1456))) (x3282 x1456)))
(define-fun x863 ((x1456 Int)) Int (ite (= x1987 x1456) x2742 (x1798 x1456)))
(define-fun x2542 ((x1456 Int)) Int (ite (= x3092 x1456) 0 (x863 x1456)))
(define-fun x2904 ((x1456 Int)) Int (ite x1341 (x2542 x1456) (x1798 x1456)))
(define-fun x3344 ((x1456 Int)) Int (ite x540 (x2904 x1456) (x1798 x1456)))
(define-fun x1790 ((x1456 Int)) Int (ite (= x1456 x789) x3528 (x3344 x1456)))
(define-fun x3201 ((x1456 Int)) Int (ite (= x1456 x2573) 0 (x1790 x1456)))
(define-fun x1096 ((x1456 Int)) Int (ite x146 (x3201 x1456) (x3344 x1456)))
(define-fun x4227 ((x1456 Int)) Int (ite x680 (x1096 x1456) (x3344 x1456)))
(define-fun x4205 ((x1456 Int)) Int (ite x3607 (x3344 x1456) (x4227 x1456)))
(define-fun x1286 ((x1456 Int)) Int (ite x450 (x3344 x1456) (x4227 x1456)))
(define-fun x1293 ((x1456 Int)) Int (ite x61 (x1798 x1456) (x3344 x1456)))
(define-fun x1642 ((x1456 Int)) Int (ite x3999 (ite x1966 (x4205 x1456) (ite x738 (x1286 x1456) (x1293 x1456))) (x1798 x1456)))
(define-fun x2796 ((x1456 Int)) Int (ite (= x1456 x2025) 0 (x262 x1456)))
(define-fun x2615 ((x1456 Int)) Int (ite (= x1456 x1933) x3038 (x262 x1456)))
(define-fun x3408 ((x1456 Int)) Int (ite x540 (ite x1341 (x2796 x1456) (x262 x1456)) (x2615 x1456)))
(define-fun x1768 ((x1456 Int)) Int (ite (= x520 x1456) 0 (x3408 x1456)))
(define-fun x1473 ((x1456 Int)) Int (ite (= x2017 x1456) x695 (x3408 x1456)))
(define-fun x2637 ((x1456 Int)) Int (ite x680 (ite x146 (x1768 x1456) (x3408 x1456)) (x1473 x1456)))
(define-fun x2176 ((x1456 Int)) Int (ite x3607 (x3408 x1456) (x2637 x1456)))
(define-fun x441 ((x1456 Int)) Int (ite x450 (x3408 x1456) (x2637 x1456)))
(define-fun x366 ((x1456 Int)) Int (ite x61 (x262 x1456) (x3408 x1456)))
(define-fun x2841 ((x1456 Int)) Int (ite x3999 (ite x1966 (x2176 x1456) (ite x738 (x441 x1456) (x366 x1456))) (x262 x1456)))
(define-fun x2514 ((x1456 Int)) Int (ite (= x2025 x1456) 0 (x4013 x1456)))
(define-fun x2886 ((x1456 Int)) Int (ite x540 (ite x1341 (x2514 x1456) (x4013 x1456)) (x4013 x1456)))
(define-fun x4104 ((x1456 Int)) Int (ite (= x520 x1456) 0 (x2886 x1456)))
(define-fun x629 ((x1456 Int)) Int (ite x680 (ite x146 (x4104 x1456) (x2886 x1456)) (x2886 x1456)))
(define-fun x2554 ((x1456 Int)) Int (ite x3607 (x2886 x1456) (x629 x1456)))
(define-fun x3675 ((x1456 Int)) Int (ite x450 (x2886 x1456) (x629 x1456)))
(define-fun x2283 ((x1456 Int)) Int (ite x61 (x4013 x1456) (x2886 x1456)))
(define-fun x2034 ((x1456 Int)) Int (ite x3999 (ite x1966 (x2554 x1456) (ite x738 (x3675 x1456) (x2283 x1456))) (x4013 x1456)))
(define-fun x1562 ((x1456 Int)) Int (ite (= x4037 x1456) x3139 (x4192 x1456)))
(define-fun x903 ((x1456 Int)) Int (ite x372 (x4192 x1456) (x1562 x1456)))
(define-fun x1741 ((x1456 Int)) Int (ite x540 (ite x1842 (x4192 x1456) (x903 x1456)) (x4192 x1456)))
(define-fun x3172 ((x1456 Int)) Int (ite (= x1185 x1456) x3772 (x1741 x1456)))
(define-fun x2898 ((x1456 Int)) Int (ite x131 (x1741 x1456) (x3172 x1456)))
(define-fun x3280 ((x1456 Int)) Int (ite x680 (ite x2471 (x1741 x1456) (x2898 x1456)) (x1741 x1456)))
(define-fun x2443 ((x1456 Int)) Int (ite x3607 (x1741 x1456) (x3280 x1456)))
(define-fun x2654 ((x1456 Int)) Int (ite x450 (x1741 x1456) (x3280 x1456)))
(define-fun x326 ((x1456 Int)) Int (ite x61 (x4192 x1456) (x1741 x1456)))
(define-fun x1770 ((x1456 Int)) Int (ite x3999 (ite x1966 (x2443 x1456) (ite x738 (x2654 x1456) (x326 x1456))) (x4192 x1456)))
(define-fun x4095 ((x1456 Int)) Int (ite (= x140 x1456) x2220 (x1381 x1456)))
(define-fun x3989 ((x1456 Int)) Int (ite (= x3092 x1456) 0 (x4095 x1456)))
(define-fun x4041 ((x1456 Int)) Int (ite x540 (ite x1341 (x3989 x1456) (x1381 x1456)) (x1381 x1456)))
(define-fun x1425 ((x1456 Int)) Int (ite (= x1456 x831) x3166 (x4041 x1456)))
(define-fun x240 ((x1456 Int)) Int (ite (= x1456 x2573) 0 (x1425 x1456)))
(define-fun x1324 ((x1456 Int)) Int (ite x680 (ite x146 (x240 x1456) (x4041 x1456)) (x4041 x1456)))
(define-fun x3080 ((x1456 Int)) Int (ite x3607 (x4041 x1456) (x1324 x1456)))
(define-fun x3459 ((x1456 Int)) Int (ite x450 (x4041 x1456) (x1324 x1456)))
(define-fun x1554 ((x1456 Int)) Int (ite x61 (x1381 x1456) (x4041 x1456)))
(define-fun x489 ((x1456 Int)) Int (ite x3999 (ite x1966 (x3080 x1456) (ite x738 (x3459 x1456) (x1554 x1456))) (x1381 x1456)))
(define-fun x3920 ((x1456 Int)) Int (ite (= x735 x1456) x564 (x2459 x1456)))
(define-fun x58 ((x1456 Int)) Int (ite x372 (x2459 x1456) (ite x65 (x2459 x1456) (x3920 x1456))))
(define-fun x1339 ((x1456 Int)) Int (ite x540 (ite x1842 (x2459 x1456) (x58 x1456)) (x2459 x1456)))
(define-fun x1551 ((x1456 Int)) Int (ite (= x1456 x179) x408 (x1339 x1456)))
(define-fun x2337 ((x1456 Int)) Int (ite x131 (x1339 x1456) (ite x191 (x1339 x1456) (x1551 x1456))))
(define-fun x4238 ((x1456 Int)) Int (ite x680 (ite x2471 (x1339 x1456) (x2337 x1456)) (x1339 x1456)))
(define-fun x1439 ((x1456 Int)) Int (ite x3607 (x1339 x1456) (x4238 x1456)))
(define-fun x1799 ((x1456 Int)) Int (ite x450 (x1339 x1456) (x4238 x1456)))
(define-fun x3164 ((x1456 Int)) Int (ite x61 (x2459 x1456) (x1339 x1456)))
(define-fun x1614 ((x1456 Int)) Int (ite x3999 (ite x1966 (x1439 x1456) (ite x738 (x1799 x1456) (x3164 x1456))) (x2459 x1456)))
(define-fun x2519 ((x1456 Int)) Int (ite (= x504 x1456) x2959 (x2200 x1456)))
(define-fun x43 ((x1456 Int)) Int (ite x3902 (x2200 x1456) (x2519 x1456)))
(define-fun x929 ((x1456 Int)) Int (ite x372 (x2200 x1456) (ite x65 (x2200 x1456) (x43 x1456))))
(define-fun x2464 ((x1456 Int)) Int (ite x540 (ite x1842 (x2200 x1456) (x929 x1456)) (x2200 x1456)))
(define-fun x3097 ((x1456 Int)) Int (ite (= x2295 x1456) x2159 (x2464 x1456)))
(define-fun x3548 ((x1456 Int)) Int (ite x782 (x2464 x1456) (x3097 x1456)))
(define-fun x2493 ((x1456 Int)) Int (ite x131 (x2464 x1456) (ite x191 (x2464 x1456) (x3548 x1456))))
(define-fun x85 ((x1456 Int)) Int (ite x680 (ite x2471 (x2464 x1456) (x2493 x1456)) (x2464 x1456)))
(define-fun x1303 ((x1456 Int)) Int (ite x3607 (x2464 x1456) (x85 x1456)))
(define-fun x2686 ((x1456 Int)) Int (ite x450 (x2464 x1456) (x85 x1456)))
(define-fun x2869 ((x1456 Int)) Int (ite x61 (x2200 x1456) (x2464 x1456)))
(define-fun x877 ((x1456 Int)) Int (ite x3999 (ite x1966 (x1303 x1456) (ite x738 (x2686 x1456) (x2869 x1456))) (x2200 x1456)))
(define-fun x3137 ((x1456 Int)) Int (ite (= x1456 x1313) x4036 (x1300 x1456)))
(define-fun x3611 ((x1456 Int)) Int (ite (= x1456 x1610) x2242 (x3137 x1456)))
(define-fun x858 ((x1456 Int)) Int (ite (= x621 x1456) x1407 (x1300 x1456)))
(define-fun x2546 ((x1456 Int)) Int (ite (= x1456 x1498) x1823 (x858 x1456)))
(define-fun x1552 ((x1456 Int)) Int (ite (= x1456 x2209) x1122 (x2546 x1456)))
(define-fun x3949 ((x1456 Int)) Int (ite x768 (x3611 x1456) (x1552 x1456)))
(define-fun x1970 ((x1456 Int)) Int (ite (= x497 x1456) x3861 (x3949 x1456)))
(define-fun x545 ((x1456 Int)) Int (ite (= x1934 x1456) x3656 (x1970 x1456)))
(define-fun x976 ((x1456 Int)) Int (ite (= x1456 x340) x657 (x3949 x1456)))
(define-fun x1634 ((x1456 Int)) Int (ite (= x1456 x332) x1251 (x976 x1456)))
(define-fun x2174 ((x1456 Int)) Int (ite (= x2141 x1456) x2084 (x1634 x1456)))
(define-fun x2221 ((x1456 Int)) Int (ite x3294 (x545 x1456) (x2174 x1456)))
(define-fun x2980 ((x1456 Int)) Int (ite x3607 (x3949 x1456) (x2221 x1456)))
(define-fun x755 ((x1456 Int)) Int (ite x450 (x3949 x1456) (x2221 x1456)))
(define-fun x2572 ((x1456 Int)) Int (ite x61 (x1300 x1456) (x3949 x1456)))
(define-fun x370 ((x1456 Int)) Int (ite x3999 (ite x1966 (x2980 x1456) (ite x738 (x755 x1456) (x2572 x1456))) (x1300 x1456)))
(define-fun x1673 ((x1456 Int)) Int (ite (= x2857 x1456) x3746 (x370 x1456)))
(define-fun x2133 ((x1456 Int)) Int (ite (= x3575 x1456) x2709 (x1770 x1456)))
(define-fun x1356 ((x1456 Int)) Int (ite (= x1456 x2891) x2635 (x1614 x1456)))
(define-fun x2310 ((x1456 Int)) Int (ite (= x1456 x870) x952 (x877 x1456)))
(define-fun x1640 ((x1456 Int)) Int (ite (= x1456 x3693) x298 (x385 x1456)))
(define-fun x2421 ((x1456 Int)) Int (ite (= x1456 x2) x3944 (x1770 x1456)))
(define-fun x3829 ((x1456 Int)) Int (ite (= x1456 x2233) x3964 (x1614 x1456)))
(define-fun x2011 ((x1456 Int)) Int (ite (= x580 x1456) x2549 (x877 x1456)))
(define-fun x2630 ((x1456 Int)) Int (ite x1453 (x1614 x1456) (ite x642 (x1614 x1456) (x3829 x1456))))
(define-fun x4197 ((x1456 Int)) Int (ite x3681 (x1614 x1456) (ite x1935 (x1614 x1456) (x1356 x1456))))
(define-fun x1964 ((x1456 Int)) Int (ite x2538 (ite x4169 (x1614 x1456) (x2630 x1456)) (ite x73 (x1614 x1456) (x4197 x1456))))
(define-fun x1528 ((x1456 Int)) Int (ite x4010 (x1614 x1456) (x1964 x1456)))
(define-fun x1597 ((x1456 Int)) Int (ite (= x1456 x2501) x3043 (x2841 x1456)))
(define-fun x1632 ((x1456 Int)) Int (ite (= x1456 x2834) x3460 (x2841 x1456)))
(define-fun x686 ((x1456 Int)) Int (ite x2538 (ite x1403 (x2841 x1456) (x1597 x1456)) (ite x3021 (x2841 x1456) (x1632 x1456))))
(define-fun x4170 ((x1456 Int)) Int (ite x4010 (x2841 x1456) (x686 x1456)))
(define-fun x2681 ((x1456 Int)) Int (ite (= x958 x1456) x4188 (x489 x1456)))
(define-fun x1228 ((x1456 Int)) Int (ite (= x1456 x16) x2190 (x2681 x1456)))
(define-fun x3939 ((x1456 Int)) Int (ite (= x1304 x1456) x1690 (x489 x1456)))
(define-fun x1044 ((x1456 Int)) Int (ite (= x1456 x4154) x2190 (x3939 x1456)))
(define-fun x2016 ((x1456 Int)) Int (ite x2538 (ite x1403 (x489 x1456) (x1228 x1456)) (ite x3021 (x489 x1456) (x1044 x1456))))
(define-fun x3849 ((x1456 Int)) Int (ite x4010 (x489 x1456) (x2016 x1456)))
(define-fun x84 ((x1456 Int)) Int (ite x2538 (x1640 x1456) (x385 x1456)))
(define-fun x2989 ((x1456 Int)) Int (ite x4010 (x385 x1456) (x84 x1456)))
(define-fun x815 ((x1456 Int)) Int (ite x2538 (x370 x1456) (x1673 x1456)))
(define-fun x337 ((x1456 Int)) Int (ite x4010 (x370 x1456) (x815 x1456)))
(define-fun x788 ((x1456 Int)) Int (ite x3006 (x877 x1456) (x2011 x1456)))
(define-fun x3084 ((x1456 Int)) Int (ite x1453 (x877 x1456) (ite x642 (x877 x1456) (x788 x1456))))
(define-fun x687 ((x1456 Int)) Int (ite x4136 (x877 x1456) (x2310 x1456)))
(define-fun x1366 ((x1456 Int)) Int (ite x3681 (x877 x1456) (ite x1935 (x877 x1456) (x687 x1456))))
(define-fun x3803 ((x1456 Int)) Int (ite x2538 (ite x4169 (x877 x1456) (x3084 x1456)) (ite x73 (x877 x1456) (x1366 x1456))))
(define-fun x1190 ((x1456 Int)) Int (ite x4010 (x877 x1456) (x3803 x1456)))
(define-fun x3399 ((x1456 Int)) Int (ite (= x2501 x1456) x3549 (x2034 x1456)))
(define-fun x169 ((x1456 Int)) Int (ite (= x2834 x1456) x3549 (x2034 x1456)))
(define-fun x516 ((x1456 Int)) Int (ite x2538 (ite x1403 (x2034 x1456) (x3399 x1456)) (ite x3021 (x2034 x1456) (x169 x1456))))
(define-fun x4047 ((x1456 Int)) Int (ite x4010 (x2034 x1456) (x516 x1456)))
(define-fun x3808 ((x1456 Int)) Int (ite (= x1456 x2501) x18 (x1605 x1456)))
(define-fun x49 ((x1456 Int)) Int (ite (= x2834 x1456) x3841 (x1605 x1456)))
(define-fun x2513 ((x1456 Int)) Int (ite x2538 (ite x1403 (x1605 x1456) (x3808 x1456)) (ite x3021 (x1605 x1456) (x49 x1456))))
(define-fun x3138 ((x1456 Int)) Int (ite x4010 (x1605 x1456) (x2513 x1456)))
(define-fun x1720 ((x1456 Int)) Int (ite x1453 (x1770 x1456) (x2421 x1456)))
(define-fun x1268 ((x1456 Int)) Int (ite x3681 (x1770 x1456) (x2133 x1456)))
(define-fun x844 ((x1456 Int)) Int (ite x2538 (ite x4169 (x1770 x1456) (x1720 x1456)) (ite x73 (x1770 x1456) (x1268 x1456))))
(define-fun x2205 ((x1456 Int)) Int (ite x4010 (x1770 x1456) (x844 x1456)))
(define-fun x654 ((x1456 Int)) Int (ite (= x3723 x1456) x2190 (x1642 x1456)))
(define-fun x829 ((x1456 Int)) Int (ite (= x1235 x1456) x517 (x654 x1456)))
(define-fun x2029 ((x1456 Int)) Int (ite (= x1456 x3118) x2190 (x1642 x1456)))
(define-fun x2995 ((x1456 Int)) Int (ite (= x1456 x4082) x1485 (x2029 x1456)))
(define-fun x4058 ((x1456 Int)) Int (ite x2538 (ite x1403 (x1642 x1456) (x829 x1456)) (ite x3021 (x1642 x1456) (x2995 x1456))))
(define-fun x2251 ((x1456 Int)) Int (ite x4010 (x1642 x1456) (x4058 x1456)))
(define-fun x2145 ((x1456 Int)) Int (ite x2658 (x2841 x1456) (ite x4010 (x2841 x1456) (x686 x1456))))
(define-fun x942 ((x1456 Int)) Int (ite x2658 (x489 x1456) (ite x4010 (x489 x1456) (x2016 x1456))))
(define-fun x3086 ((x1456 Int)) Int (ite x2658 (x1614 x1456) (ite x4010 (x1614 x1456) (x1964 x1456))))
(define-fun x3337 ((x1456 Int)) Int (ite x2658 (x385 x1456) (ite x4010 (x385 x1456) (x84 x1456))))
(define-fun x3082 ((x1456 Int)) Int (ite x2658 (x2034 x1456) (ite x4010 (x2034 x1456) (x516 x1456))))
(define-fun x428 ((x1456 Int)) Int (ite x2658 (x370 x1456) (ite x4010 (x370 x1456) (x815 x1456))))
(define-fun x3286 ((x1456 Int)) Int (ite x2658 (x877 x1456) (ite x4010 (x877 x1456) (x3803 x1456))))
(define-fun x3420 ((x1456 Int)) Int (ite x2658 (x1642 x1456) (ite x4010 (x1642 x1456) (x4058 x1456))))
(define-fun x675 ((x1456 Int)) Int (ite x2658 (x1605 x1456) (ite x4010 (x1605 x1456) (x2513 x1456))))
(define-fun x2399 ((x1456 Int)) Int (ite x2658 (x1770 x1456) (ite x4010 (x1770 x1456) (x844 x1456))))
(define-fun x2486 ((x1456 Int)) Int 0)
(define-fun x3697 ((x1456 Int)) Int (ite (= x1456 x3619) x1619 (x1761 x1456)))
(define-fun x744 ((x1456 Int)) Int (ite (= x1456 x1638) x2363 (x3697 x1456)))
(define-fun x1629 ((x1456 Int)) Int (ite (= x1456 x1458) x2157 (x744 x1456)))
(define-fun x45 ((x1456 Int)) Int (ite x2818 (x432 x1456) (x2311 x1456)))
(define-fun x1543 ((x1456 Int)) Int (ite (= x1456 x1582) x3604 (x3337 x1456)))
(define-fun x1262 ((x1456 Int)) Int (ite (= x1868 x1456) x1932 (x428 x1456)))
(define-fun x352 ((x1456 Int)) Int (ite x1192 (x1543 x1456) (x3337 x1456)))
(define-fun x1912 ((x1456 Int)) Int (ite x1192 (x428 x1456) (x1262 x1456)))
(define-fun x1699 ((x1456 Int)) Int 0)
(define-fun x399 ((x1456 Int)) Int 0)
(define-fun x2831 ((x1456 Int)) Int 0)
(define-fun x2008 ((x1456 Int)) Int 0)
(define-fun x3951 ((x1456 Int)) Int 0)
(define-fun x288 ((x1456 Int)) Int (ite x1966 (x2176 x1456) (ite x738 (x441 x1456) (x366 x1456))))
(define-fun x4092 ((x1456 Int)) Int (ite x1966 (x4141 x1456) (ite x738 (x1784 x1456) (x1089 x1456))))
(define-fun x1532 ((x1456 Int)) Int (ite x1966 (x1439 x1456) (ite x738 (x1799 x1456) (x3164 x1456))))
(define-fun x3348 ((x1456 Int)) Int (ite x1966 (x4205 x1456) (ite x738 (x1286 x1456) (x1293 x1456))))
(define-fun x2512 ((x1456 Int)) Int (ite x1966 (x1731 x1456) (ite x738 (x2484 x1456) (x3378 x1456))))
(define-fun x1260 ((x1456 Int)) Int (ite x1966 (x2554 x1456) (ite x738 (x3675 x1456) (x2283 x1456))))
(define-fun x2871 ((x1456 Int)) Int (ite x1966 (x3080 x1456) (ite x738 (x3459 x1456) (x1554 x1456))))
(define-fun x803 ((x1456 Int)) Int (ite x1966 (x2443 x1456) (ite x738 (x2654 x1456) (x326 x1456))))
(define-fun x3439 ((x1456 Int)) Int (ite x1966 (x1303 x1456) (ite x738 (x2686 x1456) (x2869 x1456))))
(define-fun x2745 ((x1456 Int)) Int (ite x1966 (x2980 x1456) (ite x738 (x755 x1456) (x2572 x1456))))
(define-fun x3777 ((x1456 Int)) Int (ite x2471 (x2464 x1456) (x2493 x1456)))
(define-fun x1943 ((x1456 Int)) Int (ite x2471 (x1339 x1456) (x2337 x1456)))
(define-fun x2809 ((x1456 Int)) Int (ite x2471 (x1741 x1456) (x2898 x1456)))
(define-fun x861 ((x1456 Int)) Int (ite x1842 (x2200 x1456) (x929 x1456)))
(define-fun x892 ((x1456 Int)) Int (ite x1842 (x4192 x1456) (x903 x1456)))
(define-fun x3552 ((x1456 Int)) Int (ite x1842 (x2459 x1456) (x58 x1456)))
(define-fun x2947 ((x1456 Int)) Int 0)
(define-fun x3523 ((x1456 Int)) Int 0)
(define-fun x2767 ((x1456 Int)) Int (ite x73 (x1770 x1456) (x1268 x1456)))
(define-fun x3246 ((x1456 Int)) Int (ite x73 (x1614 x1456) (x4197 x1456)))
(define-fun x2434 ((x1456 Int)) Int (ite x73 (x877 x1456) (x1366 x1456)))
(define-fun x721 ((x1456 Int)) Int (ite x4169 (x1770 x1456) (x1720 x1456)))
(define-fun x3237 ((x1456 Int)) Int (ite x4169 (x1614 x1456) (x2630 x1456)))
(define-fun x2677 ((x1456 Int)) Int (ite x4169 (x877 x1456) (x3084 x1456)))
(define-fun x1965 ((x1456 Int)) Int (ite (= x3304 x1456) x2621 (x942 x1456)))
(define-fun x1444 ((x1456 Int)) Int (ite (= x1456 x3296) x961 (x3420 x1456)))
(define-fun x3265 ((x1456 Int)) Int (ite (= x2052 x1456) 0 (x1444 x1456)))
(define-fun x3818 ((x1456 Int)) Int (ite (= x2052 x1456) 0 (x1965 x1456)))
(define-fun x2522 ((x1456 Int)) Int (ite (= x1991 x1456) 0 (x3082 x1456)))
(define-fun x651 ((x1456 Int)) Int (ite (= x1456 x1991) 0 (x675 x1456)))
(define-fun x893 ((x1456 Int)) Int (ite (= x1991 x1456) 0 (x2145 x1456)))
(define-fun x328 ((x1456 Int)) Int (ite x146 (x1768 x1456) (x3408 x1456)))
(define-fun x1109 ((x1456 Int)) Int (ite x146 (x64 x1456) (x3583 x1456)))
(define-fun x63 ((x1456 Int)) Int (ite x146 (x4104 x1456) (x2886 x1456)))
(define-fun x794 ((x1456 Int)) Int (ite x146 (x240 x1456) (x4041 x1456)))
(define-fun x3260 ((x1456 Int)) Int (ite x1341 (x3989 x1456) (x1381 x1456)))
(define-fun x1783 ((x1456 Int)) Int (ite x1341 (x2796 x1456) (x262 x1456)))
(define-fun x1518 ((x1456 Int)) Int (ite x1341 (x2107 x1456) (x3282 x1456)))
(define-fun x3900 ((x1456 Int)) Int (ite x1341 (x2514 x1456) (x4013 x1456)))
(define-fun x3631 ((x1456 Int)) Int (ite x663 (x3265 x1456) (x3420 x1456)))
(define-fun x3307 ((x1456 Int)) Int (ite (= x1456 x3654) x672 (x2399 x1456)))
(define-fun x2582 ((x1456 Int)) Int (ite (= x1456 x313) x3143 (x3086 x1456)))
(define-fun x3073 ((x1456 Int)) Int (ite (= x1456 x2206) x1937 (x3286 x1456)))
(define-fun x2391 ((x1456 Int)) Int (ite x191 (x1339 x1456) (x1551 x1456)))
(define-fun x4002 ((x1456 Int)) Int (ite x191 (x2464 x1456) (x3548 x1456)))
(define-fun x1208 ((x1456 Int)) Int (ite x65 (x2459 x1456) (x3920 x1456)))
(define-fun x4230 ((x1456 Int)) Int (ite x65 (x2200 x1456) (x43 x1456)))
(define-fun x3277 ((x1456 Int)) Int (ite x1935 (x1614 x1456) (x1356 x1456)))
(define-fun x2527 ((x1456 Int)) Int (ite x1935 (x877 x1456) (x687 x1456)))
(define-fun x673 ((x1456 Int)) Int (ite x642 (x1614 x1456) (x3829 x1456)))
(define-fun x661 ((x1456 Int)) Int (ite x642 (x877 x1456) (x788 x1456)))
(define-fun x859 ((x1456 Int)) Int (ite x3021 (x1642 x1456) (x2995 x1456)))
(define-fun x3665 ((x1456 Int)) Int (ite x3021 (x2034 x1456) (x169 x1456)))
(define-fun x414 ((x1456 Int)) Int (ite x3021 (x1605 x1456) (x49 x1456)))
(define-fun x2248 ((x1456 Int)) Int (ite x3021 (x2841 x1456) (x1632 x1456)))
(define-fun x2848 ((x1456 Int)) Int (ite x3021 (x489 x1456) (x1044 x1456)))
(define-fun x1983 ((x1456 Int)) Int (ite x1403 (x1605 x1456) (x3808 x1456)))
(define-fun x3689 ((x1456 Int)) Int (ite x1403 (x1642 x1456) (x829 x1456)))
(define-fun x30 ((x1456 Int)) Int (ite x1403 (x489 x1456) (x1228 x1456)))
(define-fun x3243 ((x1456 Int)) Int (ite x1403 (x2841 x1456) (x1597 x1456)))
(define-fun x95 ((x1456 Int)) Int (ite x1403 (x2034 x1456) (x3399 x1456)))
(define-fun x1804 ((x3381 Int) (x1724 Int) (x494 Int) (x2631 Int)) Bool (=> (and (<= 0 x3381) (>= x2631 x1724) (<= x3381 x494) (>= x1724 0)) (>= (x2817 x494 x2631) (x2817 x3381 x1724))))
(define-fun x3295 ((x3381 Int) (x1724 Int) (x494 Int) (x2631 Int)) Bool (=> (= x494 x3381) (= (- (x2817 x3381 x1724) (x2817 x494 x2631)) (x2817 x3381 (- x1724 x2631)))))
(assert (x3395 (- x463 x3193)))
(assert (x1000 x601))
(assert (= (and x625 x2751) x3983))
(assert (x1000 x1878))
(assert (x3395 (- x36 x600)))
(assert (x1327 (ite (< x614 256) (x521 2 x614) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 x1684))
(assert (x1384 x1017))
(assert (= x2903 (=> (and (= (+ (x3933 x2793 8) x2533) x3674) (= (ite (< 1 x2441) (+ 1 x3602) x3602) x2533)) x1097)))
(assert (= (or x814 x1184) x148))
(assert (> (x230 64 x1168 x2262) 10000))
(assert (x1384 x2412))
(assert (= (or x3222 x1805) x912))
(assert (= x1814 (=> (and (= x537 x1514) (= x3079 x913) (= x3192 x566) (= x505 x2374) (= x1349 x1010)) x3938)))
(assert (x2466 340282366920938463463374607431768211456 x3605))
(assert (x1725 x463 (- x2450 x3866)))
(assert (x3404 (* x571 18446744073709551616)))
(assert (= (or x575 x3470) x168))
(assert (= x2820 (x3706 (x230 64 x2820 x3354))))
(assert (x1384 x2187))
(assert (x2547 x3443 340282366920938463463374607431768211456))
(assert (x1384 x4194))
(assert (x1384 x825))
(assert (= (x3933 x739 2) (x3377 (* 4 x739))))
(assert (x2466 65536 x263))
(assert (= (and x3727 x4109) x3129))
(assert (x1384 x2750))
(assert (= (x3763 x2064 16) (x323 x2064 65536)))
(assert (x1327 x570 18446744073709551616))
(assert (= (x2128 (x230 64 x552 14)) (x230 64 x552 14)))
(assert (= x3622 (x4195 (x230 64 x2621 x3622))))
(assert (x3395 x739))
(assert (x1327 x3945 18446744073709551616))
(assert (= x1929 (=> (and (= (< 4294967295 x4226) x3882) (or (and x3882 (and (= (x3763 x4226 32) x3846) (= (+ x604 32) x2451))) (and (not x3882) (and (= x604 x2451) (= x3846 x4226))))) x4027)))
(assert (= x593 (x4195 (x230 64 x2018 x593))))
(assert (x1384 x1406))
(assert (x1384 x2638))
(assert (x2466 18446744073709551616 x54))
(assert (x3295 x4157 x1514 x3751 x3866))
(assert (= x248 (and x2361 x3321)))
(assert (x1384 x1751))
(assert (= (and x3562 x3978) x1529))
(assert (=> (>= 10000 x1003) (= 0 (x2128 x1003))))
(assert (x1384 x1322))
(assert (= x1822 (x4195 (x230 64 255 x1822))))
(assert (= (x2128 (x230 64 x3528 x3571)) (x230 64 x3528 x3571)))
(assert (= (x250 (x230 64 x3950 5)) 64))
(assert (x1384 x470))
(assert (x1000 x543))
(assert (= x852 (and x1420 (not x2335))))
(assert (= x920 (and x3501 x2056)))
(assert (= x1691 (and x4109 (not x3727))))
(assert (x2466 256 x3015))
(assert (= (x3763 x724 1) (x323 x724 2)))
(assert (= x2540 (and (not x993) x985)))
(assert (= (x3377 (* x3393 65536)) (x3933 x3393 16)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x2539)))
(assert (x3404 (* 256 x110)))
(assert (x1384 x1577))
(assert (x1000 x3801))
(assert (not (x2614 (x230 64 x4145 x3873))))
(assert (x1384 x571))
(assert (x81 x2244))
(assert (= (x3377 (* x2187 18446744073709551616)) (x3933 x2187 64)))
(assert (x1384 x52))
(assert (= (=> (and (= (= 0 x3216) x3162) (or (and (= x588 1) (not x3162)) (and (and (= x1500 (x230 64 0 x1280)) (<= x1674 1099511627775) (= (x3737 (- x1674 x1690)) x403) (= (x1642 x1500) x1674) (= x588 (ite (> x403 0) 0 1))) x3162))) x2171) x2062))
(assert (= x1281 (and x2065 x851)))
(assert (x3395 x3684))
(assert (x3395 x2260))
(assert (= (x230 64 x3524 14) (x2128 (x230 64 x3524 14))))
(assert (x1725 x3866 (- x3751 x1028)))
(assert (x1384 x177))
(assert (= (x3377 (* 4294967296 x4190)) (x3933 x4190 32)))
(assert (x81 x4167))
(assert (x1384 x2346))
(assert (=> (<= x2895 10000) (= (x2128 x2895) 0)))
(assert (= (x3933 x2063 16) (x3377 (* 65536 x2063))))
(assert (= (x230 64 x2018 x593) (x2128 (x230 64 x2018 x593))))
(assert (= (x3933 x3015 8) (x3377 (* 256 x3015))))
(assert (= (and x1261 x1042) x3478))
(assert (x1384 x1126))
(assert (x1725 x36 (- x1028 x3866)))
(assert (x2466 1 (x521 2 x607)))
(assert (x2547 x1107 4294967296))
(assert (x3395 x590))
(assert (x1384 x233))
(assert (= (x230 64 255 x1822) (x2128 (x230 64 255 x1822))))
(assert (= (x2128 x4251) (x2128 (+ 2 x4251))))
(assert (= x2452 (and x2245 x1919)))
(assert (and (= 549755813888 (x521 2 39)) (= (x521 2 231) 3450873173395281893717377931138512726225554486085193277581262111899648) (= (x521 2 62) 4611686018427387904) (= 1024 (x521 2 10)) (= 23945242826029513411849172299223580994042798784118784 (x521 2 174)) (= 1125899906842624 (x521 2 50)) (= (x521 2 138) 348449143727040986586495598010130648530944) (= (x521 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= 75557863725914323419136 (x521 2 76)) (= (x521 2 92) 4951760157141521099596496896) (= (x521 2 183) 12259964326927110866866776217202473468949912977468817408) (= (x521 2 72) 4722366482869645213696) (= 4503599627370496 (x521 2 52)) (= (x521 2 112) 5192296858534827628530496329220096) (= 8589934592 (x521 2 33)) (= (x521 2 145) 44601490397061246283071436545296723011960832) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x521 2 237)) (= (x521 2 35) 34359738368) (= 79228162514264337593543950336 (x521 2 96)) (= 22835963083295358096932575511191922182123945984 (x521 2 154)) (= (x521 2 226) 107839786668602559178668060348078522694548577690162289924414440996864) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x521 2 225)) (= 562949953421312 (x521 2 49)) (= (x521 2 168) 374144419156711147060143317175368453031918731001856) (= (x521 2 120) 1329227995784915872903807060280344576) (= (x521 2 108) 324518553658426726783156020576256) (= 20769187434139310514121985316880384 (x521 2 114)) (= (x521 2 195) 50216813883093446110686315385661331328818843555712276103168) (= 166153499473114484112975882535043072 (x521 2 117)) (= (x521 2 41) 2199023255552) (= 20282409603651670423947251286016 (x521 2 104)) (= (x521 2 105) 40564819207303340847894502572032) (= 302231454903657293676544 (x521 2 78)) (= (x521 2 190) 1569275433846670190958947355801916604025588861116008628224) (= 158456325028528675187087900672 (x521 2 97)) (= (x521 2 77) 151115727451828646838272) (= 633825300114114700748351602688 (x521 2 99)) (= 1 (x521 2 0)) (= 524288 (x521 2 19)) (= (x521 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 392318858461667547739736838950479151006397215279002157056 (x521 2 188)) (= (x521 2 180) 1532495540865888858358347027150309183618739122183602176) (= (x521 2 186) 98079714615416886934934209737619787751599303819750539264) (= (x521 2 140) 1393796574908163946345982392040522594123776) (= (x521 2 20) 1048576) (= 803469022129495137770981046170581301261101496891396417650688 (x521 2 199)) (= 4294967296 (x521 2 32)) (= 2251799813685248 (x521 2 51)) (= (x521 2 59) 576460752303423488) (= 5575186299632655785383929568162090376495104 (x521 2 142)) (= (x521 2 175) 47890485652059026823698344598447161988085597568237568) (= (x521 2 3) 8) (= (x521 2 179) 766247770432944429179173513575154591809369561091801088) (= (x521 2 182) 6129982163463555433433388108601236734474956488734408704) (= 842498333348457493583344221469363458551160763204392890034487820288 (x521 2 219)) (= 22300745198530623141535718272648361505980416 (x521 2 144)) (= (x521 2 246) 113078212145816597093331040047546785012958969400039613319782796882727665664) (= (x521 2 166) 93536104789177786765035829293842113257979682750464) (= (x521 2 80) 1208925819614629174706176) (= (x521 2 58) 288230376151711744) (= (x521 2 163) 11692013098647223345629478661730264157247460343808) (= (x521 2 95) 39614081257132168796771975168) (= (x521 2 170) 1496577676626844588240573268701473812127674924007424) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x521 2 235)) (= (x521 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= (x521 2 252) 7237005577332262213973186563042994240829374041602535252466099000494570602496) (= (x521 2 30) 1073741824) (= (x521 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= 1606938044258990275541962092341162602522202993782792835301376 (x521 2 200)) (= (x521 2 191) 3138550867693340381917894711603833208051177722232017256448) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x521 2 255)) (= 33554432 (x521 2 25)) (= (x521 2 156) 91343852333181432387730302044767688728495783936) (= 11150372599265311570767859136324180752990208 (x521 2 143)) (= 144115188075855872 (x521 2 57)) (= (x521 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= 21778071482940061661655974875633165533184 (x521 2 134)) (= (x521 2 172) 5986310706507378352962293074805895248510699696029696) (= (x521 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= 3213876088517980551083924184682325205044405987565585670602752 (x521 2 201)) (= (x521 2 223) 13479973333575319897333507543509815336818572211270286240551805124608) (= 95780971304118053647396689196894323976171195136475136 (x521 2 176)) (= 67108864 (x521 2 26)) (= (x521 2 68) 295147905179352825856) (= (x521 2 151) 2854495385411919762116571938898990272765493248) (= (x521 2 107) 162259276829213363391578010288128) (= 309485009821345068724781056 (x521 2 88)) (= (x521 2 27) 134217728) (= 23384026197294446691258957323460528314494920687616 (x521 2 164)) (= 2147483648 (x521 2 31)) (= 46768052394588893382517914646921056628989841375232 (x521 2 165)) (= 2417851639229258349412352 (x521 2 81)) (= (x521 2 242) 7067388259113537318333190002971674063309935587502475832486424805170479104) (= 1152921504606846976 (x521 2 60)) (= (x521 2 71) 2361183241434822606848) (= 65536 (x521 2 16)) (= 182687704666362864775460604089535377456991567872 (x521 2 157)) (= 1237940039285380274899124224 (x521 2 90)) (= 383123885216472214589586756787577295904684780545900544 (x521 2 178)) (= 19807040628566084398385987584 (x521 2 94)) (= (x521 2 129) 680564733841876926926749214863536422912) (= (x521 2 141) 2787593149816327892691964784081045188247552) (= 618970019642690137449562112 (x521 2 89)) (= 332306998946228968225951765070086144 (x521 2 118)) (= (x521 2 173) 11972621413014756705924586149611790497021399392059392) (= 52656145834278593348959013841835216159447547700274555627155488768 (x521 2 215)) (= 9903520314283042199192993792 (x521 2 93)) (= (x521 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= (x521 2 125) 42535295865117307932921825928971026432) (= 2475880078570760549798248448 (x521 2 91)) (= 8192 (x521 2 13)) (= (x521 2 228) 431359146674410236714672241392314090778194310760649159697657763987456) (= (x521 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= (x521 2 45) 35184372088832) (= (x521 2 147) 178405961588244985132285746181186892047843328) (= 25711008708143844408671393477458601640355247900524685364822016 (x521 2 204)) (= (x521 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= (x521 2 47) 140737488355328) (= (x521 2 113) 10384593717069655257060992658440192) (= (x521 2 46) 70368744177664) (= 2097152 (x521 2 21)) (= (x521 2 8) 256) (= (x521 2 193) 12554203470773361527671578846415332832204710888928069025792) (= 77371252455336267181195264 (x521 2 86)) (= (x521 2 115) 41538374868278621028243970633760768) (= (x521 2 67) 147573952589676412928) (= (x521 2 152) 5708990770823839524233143877797980545530986496) (= (x521 2 55) 36028797018963968) (= 137438953472 (x521 2 37)) (= (x521 2 40) 1099511627776) (= (x521 2 74) 18889465931478580854784) (= (x521 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= 9671406556917033397649408 (x521 2 83)) (= 174224571863520493293247799005065324265472 (x521 2 137)) (= (x521 2 73) 9444732965739290427392) (= (x521 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= 43556142965880123323311949751266331066368 (x521 2 135)) (= 187072209578355573530071658587684226515959365500928 (x521 2 167)) (= (x521 2 98) 316912650057057350374175801344) (= 281474976710656 (x521 2 48)) (= (x521 2 12) 4096) (= (x521 2 106) 81129638414606681695789005144064) (= (x521 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x521 2 236)) (= 51422017416287688817342786954917203280710495801049370729644032 (x521 2 205)) (= 2 (x521 2 1)) (= 4194304 (x521 2 22)) (= (x521 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= (x521 2 146) 89202980794122492566142873090593446023921664) (= 102844034832575377634685573909834406561420991602098741459288064 (x521 2 206)) (= (x521 2 153) 11417981541647679048466287755595961091061972992) (= (x521 2 155) 45671926166590716193865151022383844364247891968) (= 1427247692705959881058285969449495136382746624 (x521 2 150)) (= (x521 2 84) 19342813113834066795298816) (= 1298074214633706907132624082305024 (x521 2 110)) (= 664613997892457936451903530140172288 (x521 2 119)) (= (x521 2 244) 28269553036454149273332760011886696253239742350009903329945699220681916416) (= 16384 (x521 2 14)) (= 191561942608236107294793378393788647952342390272950272 (x521 2 177)) (= 215679573337205118357336120696157045389097155380324579848828881993728 (x521 2 227)) (= 730750818665451459101842416358141509827966271488 (x521 2 159)) (= 274877906944 (x521 2 38)) (= 28948022309329048855892746252171976963317496166410141009864396001978282409984 (x521 2 254)) (= 17179869184 (x521 2 34)) (= (x521 2 101) 2535301200456458802993406410752) (= 8388608 (x521 2 23)) (= (x521 2 56) 72057594037927936) (= (x521 2 85) 38685626227668133590597632) (= (x521 2 79) 604462909807314587353088) (= 21267647932558653966460912964485513216 (x521 2 124)) (= 5846006549323611672814739330865132078623730171904 (x521 2 162)) (= 2923003274661805836407369665432566039311865085952 (x521 2 161)) (= 2596148429267413814265248164610048 (x521 2 111)) (= (x521 2 11) 2048) (= (x521 2 197) 200867255532373784442745261542645325315275374222849104412672) (= 8796093022208 (x521 2 43)) (= 883423532389192164791648750371459257913741948437809479060803100646309888 (x521 2 239)) (= (x521 2 149) 713623846352979940529142984724747568191373312) (= 590295810358705651712 (x521 2 69)) (= 16777216 (x521 2 24)) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x521 2 248)) (= (x521 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= (x521 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= 10889035741470030830827987437816582766592 (x521 2 133)) (= (x521 2 123) 10633823966279326983230456482242756608) (= 13164036458569648337239753460458804039861886925068638906788872192 (x521 2 213)) (= (x521 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= 6427752177035961102167848369364650410088811975131171341205504 (x521 2 202)) (= (x521 2 131) 2722258935367507707706996859454145691648) (= 6277101735386680763835789423207666416102355444464034512896 (x521 2 192)) (= (x521 2 128) 340282366920938463463374607431768211456) (= (x521 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= (x521 2 100) 1267650600228229401496703205376) (= (x521 2 132) 5444517870735015415413993718908291383296) (= 1461501637330902918203684832716283019655932542976 (x521 2 160)) (= 210624583337114373395836055367340864637790190801098222508621955072 (x521 2 217)) (= 87112285931760246646623899502532662132736 (x521 2 136)) (= 4835703278458516698824704 (x521 2 82)) (= (x521 2 122) 5316911983139663491615228241121378304) (= 154742504910672534362390528 (x521 2 87)) (= 32 (x521 2 5)) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x521 2 247)) (= 262144 (x521 2 18)) (= 37778931862957161709568 (x521 2 75)) (= (x521 2 203) 12855504354071922204335696738729300820177623950262342682411008) (= 649037107316853453566312041152512 (x521 2 109)) (= (x521 2 148) 356811923176489970264571492362373784095686656) (= 9007199254740992 (x521 2 53)) (= 268435456 (x521 2 28)) (= 3064991081731777716716694054300618367237478244367204352 (x521 2 181)) (= 536870912 (x521 2 29)) (= (x521 2 9) 512) (= 3291009114642412084309938365114701009965471731267159726697218048 (x521 2 211)) (= (x521 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= 49039857307708443467467104868809893875799651909875269632 (x521 2 185)) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x521 2 251)) (= (x521 2 233) 13803492693581127574869511724554050904902217944340773110325048447598592) (= (x521 2 4) 16) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x521 2 232)) (= 131072 (x521 2 17)) (= 10141204801825835211973625643008 (x521 2 103)) (= (x521 2 126) 85070591730234615865843651857942052864) (= (x521 2 127) 170141183460469231731687303715884105728) (= (x521 2 36) 68719476736) (= 4 (x521 2 2)) (= 9223372036854775808 (x521 2 63)) (= 100433627766186892221372630771322662657637687111424552206336 (x521 2 196)) (= 1361129467683753853853498429727072845824 (x521 2 130)) (= (x521 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= 365375409332725729550921208179070754913983135744 (x521 2 158)) (= 64 (x521 2 6)) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x521 2 245)) (= (x521 2 198) 401734511064747568885490523085290650630550748445698208825344) (= (x521 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= (x521 2 64) 18446744073709551616) (= 18014398509481984 (x521 2 54)) (= (x521 2 121) 2658455991569831745807614120560689152) (= 83076749736557242056487941267521536 (x521 2 116)) (= (x521 2 184) 24519928653854221733733552434404946937899825954937634816) (= (x521 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= (x521 2 139) 696898287454081973172991196020261297061888) (= (x521 2 187) 196159429230833773869868419475239575503198607639501078528) (= 5070602400912917605986812821504 (x521 2 102)) (= (x521 2 169) 748288838313422294120286634350736906063837462003712) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x521 2 240)) (= 17592186044416 (x521 2 44)) (= (x521 2 70) 1180591620717411303424) (= (x521 2 61) 2305843009213693952) (= 36893488147419103232 (x521 2 65)) (= (x521 2 189) 784637716923335095479473677900958302012794430558004314112) (= 25108406941546723055343157692830665664409421777856138051584 (x521 2 194)) (= (x521 2 42) 4398046511104) (= (x521 2 7) 128) (= (x521 2 15) 32768) (= 26328072917139296674479506920917608079723773850137277813577744384 (x521 2 214)) (= (x521 2 171) 2993155353253689176481146537402947624255349848014848) (= 73786976294838206464 (x521 2 66))))
(assert (= (x230 64 0 x1657) (x2128 (x230 64 0 x1657))))
(assert (x1384 x757))
(assert (x3395 (- x3193 x2450)))
(assert (x3295 x4099 x753 x36 x1028))
(assert (not (x2614 (x230 64 0 x1316))))
(assert (= (=> (and (or (and x329 (and (= (+ 16 x3250) x2088) (= (x3763 x3779 16) x3891))) (and (not x329) (and (= x3891 x3779) (= x2088 x3250)))) (= (< 65535 x3779) x329)) x3506) x2940))
(assert (x1725 x4099 (- x753 x1514)))
(assert (x1384 x1514))
(assert (x2060 x2967))
(assert (= x3903 (or x1831 x3005)))
(assert (= (and x102 x1427) x4240))
(assert (= 64 (x250 (x230 64 x2820 x3354))))
(assert (= x2258 (or x2574 x819)))
(assert (x3395 x3917))
(assert (x3395 x571))
(assert (= (x250 (x230 64 x820 14)) 64))
(assert (= x4004 (x3706 (x230 64 x4004 14))))
(assert (x2547 x342 2))
(assert (x1804 x600 x3193 x1514 x4157))
(assert (= (x3377 (* 256 x2793)) (x3933 x2793 8)))
(assert (= (and (not x1312) x53) x2370))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2695 14)))
(assert (x1384 x2864))
(assert (= (=> (= (> x1514 0) x415) (and (=> (and (= (= (ite (< 0 (ite (< 0 (ite (= x3925 1) (ite (= 1 x3925) 1 0) (ite (= 2 x3925) 1 0))) (ite (= 1 x3925) (ite (= 1 x3925) 1 0) (ite (= 2 x3925) 1 0)) (ite (= 5 x3925) 1 0))) (ite (> (ite (= x3925 1) (ite (= x3925 1) 1 0) (ite (= x3925 2) 1 0)) 0) (ite (= x3925 1) (ite (= x3925 1) 1 0) (ite (= x3925 2) 1 0)) (ite (= x3925 5) 1 0)) (ite (= x3925 6) 1 0)) 0) x3974) x415) (and (=> (and (not x3974) (and (= (x323 x1514 100000000000000) x671) (<= x1514 3402823669209384634633746074317682100000000000000) (= x3497 0) (= 100000000000000 x3415))) (and (=> (and (and (<= x2675 340282366920938463463374607431768211455) (= (+ 2 x924) x3141) (= x3746 (x2009 340282366920938463463374607431768211455 x3498)) (= x3841 (x2009 18446744073709551615 x671)) (= x3225 (+ x3922 (ite (> (x2350 x270 1000000000000000000000000) 0) 1 0))) (= x2675 (x370 x2857)) (= x3048 (x323 x1781 1000000)) (>= x2376 0) (>= 340282366920938463463374607431768211455 x1489) (= x3047 (x3763 x3081 8)) (= (x230 64 x3047 x3141) x2300) (= x3781 (x1770 x2300)) (<= x3225 340282366920938463463374607431768211455) (= x978 (ite (not (= x503 0)) 1 0)) (= (x2009 18446744073709551615 x3048) x3460) (<= x2374 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (+ 100000000 x3288) x4157) (not (= x2374 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (- x3851 x1489) x2828) (< x2374 x3037) (= x732 (x3933 1 x1639)) (= (+ 1 x3943) x924) (= x3922 (x323 x270 1000000000000000000000000)) (= (x2009 255 x3081) x1639) (not (< x2675 x3225)) (<= x2374 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2817 x1514 x4157) x2376) (= x1581 1000000000000000000000000) (= (x3737 (- x2675 x3225)) x3498) (= (x230 64 x3368 9) x2857) (= 1 x3429) (= x1489 (x370 x2857)) (= (x882 (+ x2374 96)) x3037) (= x270 x4232) (= (x230 64 x1743 14) x3943) (= (+ x3746 x3192) x3851) (<= x2376 340282366920938463463374607431768211455999999999999999999) (not (= x2374 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= x4232 (* x2376 1000000)) (= (* x3225 1000000) x1781) (= (x2009 x3781 x732) x503) (= x152 (> x978 0)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x2374)) (= (ite x1349 1 0) x1743) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2374) (= (* 100000 x3081) x3288)) x1349) (and (=> (and (and (= (x3763 x3081 8) x2820) (= (x3933 1 x3254) x1480) (= (ite x1349 1 0) x4177) (= x870 (+ 1 x2648)) (= x2648 (x230 64 x4177 14)) (= x3959 (x230 64 x2820 x3354)) (= (x2009 255 x3081) x3254) (= x2709 (x1161 x3444 x1480)) (= (x1770 x3959) x3444) (= (= x3444 x2709) x1544) (= x3354 (+ x870 2))) (not x152)) (and (=> (and x1544 (= x4234 0)) x1267) (=> (and (not x1544) (and (= x3575 (x230 64 x2820 x3354)) (= (= 0 x3444) x1793))) (and (=> (and (and (and (= x2990 (x3933 1 x4065)) (= (x1161 x2032 x2990) x2635) (= (x1614 x2758) x2032) (= (+ 1 x870) x2581) (= x2891 (x230 64 x850 x2581)) (= x4065 (x2009 255 x2820)) (= (x230 64 x850 x2581) x2758) (= (x3763 x2820 8) x850) (= (= 0 x2032) x1495)) (or (and (and (= (x1161 x943 x1573) x952) (= (x3933 1 x850) x1573) (= (x877 x870) x943)) x1495) (not x1495))) x1793) x3306) (=> (not x1793) x2218))))) (=> x152 x2836))) (=> (and (and (= (ite x1349 1 0) x3691) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x2374)) (= x398 (x385 x3693)) (<= x2374 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2765 (< 0 x1393)) (= (x230 64 x3368 9) x3693) (= x3145 (x882 (+ 96 x2374))) (= x653 (+ x298 x913)) (= x632 (* 1000000 x1514)) (= x1155 (x3763 x3081 8)) (= (x230 64 x3691 14) x2915) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2374) (not (< x398 x1514)) (< x2374 x3145) (= x4239 (x3933 1 x2449)) (= x975 (+ x2915 1)) (= (x323 x632 1000000000000000000) x570) (= x3108 (x230 64 x1155 x1099)) (<= x2374 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3309 (- x653 x3550)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x2374)) (not (= x2374 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (x385 x3693) x3550) (<= x3550 340282366920938463463374607431768211455) (= (x2009 340282366920938463463374607431768211455 x1612) x298) (= x1247 (x1770 x3108)) (= x1612 (x3737 (- x398 x1514))) (= x3043 (x2009 18446744073709551615 x570)) (= x2950 (x2009 x1247 x4239)) (= (x2009 255 x3081) x2449) (= x18 (x2009 18446744073709551615 x671)) (<= x1514 340282366920938463463374607431768211455) (<= x398 340282366920938463463374607431768211455) (= x1393 (ite (not (= 0 x2950)) 1 0)) (= x1099 (+ x975 2))) (not x1349)) (and (=> (and (not x2765) (and (= x580 (+ 1 x3923)) (= (x230 64 x3183 14) x3923) (= (ite x1349 1 0) x3183) (= x2255 (x230 64 x897 x3513)) (= x50 (x1770 x2255)) (= x1974 (x3933 1 x4081)) (= x3513 (+ 2 x580)) (= (= x3944 x50) x376) (= x897 (x3763 x3081 8)) (= x4081 (x2009 255 x3081)) (= x3944 (x1161 x50 x1974)))) (and (=> (and x376 (= 0 x3150)) x2702) (=> (and (and (= x2 (x230 64 x897 x3513)) (= x1914 (= x50 0))) (not x376)) (and (=> (and x1914 (and (or (not x1609) (and x1609 (and (= (x1161 x99 x3719) x2549) (= (x3933 1 x1410) x3719) (= (x877 x580) x99)))) (and (= (x1614 x1782) x1440) (= x1609 (= 0 x1440)) (= x1410 (x3763 x897 8)) (= x165 (x3933 1 x614)) (= x2233 (x230 64 x1410 x2196)) (= x1782 (x230 64 x1410 x2196)) (= x2196 (+ 1 x580)) (= x614 (x2009 255 x897)) (= (x1161 x1440 x165) x3964)))) x2472) (=> (not x1914) x1540))))) (=> x2765 x3331))))) (=> (and (and (= x3192 x611) (= x913 x7)) x3974) x2031))) (=> (and (and (= x913 x2095) (= x3192 x74)) (not x415)) x1513))) x3938))
(assert (= x3839 (and x3615 x3886)))
(assert (= (x3706 (x230 64 0 x1316)) 0))
(assert (= (and x3544 x4055) x87))
(assert (x3404 (* 65536 x1620)))
(assert (x3404 x1948))
(assert (x1384 x620))
(assert (= (and x3085 (not x292)) x290))
(assert (= (x323 x2228 256) (x3763 x2228 8)))
(assert (= (=> (and (= (< 18446744073709551615 x3767) x1005) (or (and (and (= x1665 x1587) (= x3623 x3767)) (not x1005)) (and (and (= x3623 (x3763 x3767 64)) (= x1665 (+ 64 x1587))) x1005))) x3050) x1886))
(assert (x2547 x2181 2))
(assert (x81 x3444))
(assert (= (and x475 x1451) x1173))
(assert (x2547 x3385 256))
(assert (= x3181 (x3706 (x230 64 x3181 x3538))))
(assert (= (x230 64 x3449 x3651) (x2128 (x230 64 x3449 x3651))))
(assert (x1725 x3193 (- x600 x463)))
(assert (x2466 256 x3995))
(assert (x3606 x3026 1000000000000000000000000))
(assert (x1000 x3094))
(assert (x2313 x99 x3719))
(assert (x2466 65536 x2063))
(assert (= x3054 (and x3231 x2531)))
(assert (x1384 x1394))
(assert (=> (>= 10000 x610) (= 0 (x2128 x610))))
(assert (x1384 x2556))
(assert (x1725 x36 (- x1028 x753)))
(assert (= x3592 (and (not x1635) x2937)))
(assert (x1804 x3193 x600 x753 x4099))
(assert (x1327 (* 4294967296 x1297) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x3051 x4116) x3134))
(assert (x1384 x1674))
(assert (x1384 x4171))
(assert (= (x230 64 x4177 14) (x2128 (x230 64 x4177 14))))
(assert (x1384 x3161))
(assert (= (x2128 (x230 64 x961 x3622)) (x230 64 x961 x3622)))
(assert (x1725 x1514 (- x4157 x36)))
(assert (x1384 x2018))
(assert (x1384 x473))
(assert (x1384 x3425))
(assert (x1384 x2914))
(assert (= (x230 64 x162 14) (x2128 (x230 64 x162 14))))
(assert (= (and x3534 x1742) x3071))
(assert (x2547 x1346 256))
(assert (= (=> (and (or (and (and (= x2516 x1450) (= x3718 0)) x3784) (and (and (= x3310 x1450) (= x3718 128)) (not x3784))) (and (= (+ x1171 1) x222) (= x2516 (x1741 x1816)) (= x3310 (x3933 x2516 128)) (= (x230 64 x590 x222) x1816) (= (+ (x3933 x174 8) x1666) x590) (= (= 0 x3310) x3784) (= x1666 (- 255 (ite (= 0 (x3933 x1445 1)) x1996 (+ 1 x1996)))))) x3503) x810))
(assert (x2547 x126 340282366920938463463374607431768211456))
(assert (= (x3763 x1949 32) (x323 x1949 4294967296)))
(assert (= (or x2078 x1423) x1899))
(assert (= x3470 (and x329 x3133)))
(assert (x1384 x1630))
(assert (x2466 256 x3372))
(assert (x1000 x3441))
(assert (> (x230 64 x3524 14) 10000))
(assert (x1384 x3346))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1648 5)))
(assert (x2547 x1049 16))
(assert (= x2078 (and (not x3322) x1052)))
(assert (x1000 65536))
(assert (x3404 x1009))
(assert (x3404 (* 16 x271)))
(assert (x81 x1684))
(assert (= (x2128 x504) (x2128 (+ x504 1))))
(assert (not (x2614 (x230 64 x1810 9))))
(assert (> (x230 64 x2098 x3410) 10000))
(assert (= x3241 (and (not x2019) x3616)))
(assert (= (x3933 x3917 1) (x3377 (* x3917 2))))
(assert (= (x3377 (* x3372 256)) (x3933 x3372 8)))
(assert (not (x2614 (x230 64 x3908 5))))
(assert (= (and x498 x168) x2810))
(assert (not (x2614 (x230 64 x2820 x3354))))
(assert (= x3875 (and (not x2565) x1211)))
(assert (x2466 16 x2442))
(assert (= 14 (x4195 (x230 64 x162 14))))
(assert (x1000 x270))
(assert (x1204 x2689 x1484))
(assert (x1384 x3881))
(assert (x3404 x89))
(assert (x1384 x3353))
(assert (x2466 2 x3917))
(assert (= x1993 (x4195 (x230 64 0 x1993))))
(assert (x1384 x2689))
(assert (= x2815 (and x1103 (not x2595))))
(assert (= (x3933 1 x3254) (x3377 (ite (< x3254 256) (x521 2 x3254) 0))))
(assert (x1384 x607))
(assert (x2313 x616 x4167))
(assert (x1521 x2357))
(assert (= x2050 (x3706 (x230 64 x2050 14))))
(assert (x1384 x127))
(assert (x1384 x850))
(assert (= x3127 (=> (and (= (< 65535 x206) x3252) (or (and (and (= x444 x656) (= x2261 x206)) (not x3252)) (and (and (= (x3763 x206 16) x2261) (= (+ x444 16) x656)) x3252))) x636)))
(assert (= (x3706 (x230 64 x106 14)) x106))
(assert (x2466 256 x1003))
(assert (= x3484 (and x415 x1746)))
(assert (x1384 x1665))
(assert (x1384 x3944))
(assert (x2712 x1999))
(assert (x2547 x1226 18446744073709551616))
(assert (x1384 x2098))
(assert (= x2210 (or x2942 x31)))
(assert (= x2270 x22))
(assert (= x4201 (=> (and (or (and (not x1180) (and (= x2854 x1178) (= x3055 x3022))) (and (and (= x3022 (x3763 x3055 32)) (= x2854 (+ x1178 32))) x1180)) (= (< 4294967295 x3055) x1180)) x2371)))
(assert (x3395 (- x36 x3751)))
(assert (x2060 x1627))
(assert (= (x323 x3865 4294967296) (x3763 x3865 32)))
(assert (< (x230 64 x4020 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 (x521 2 x850)))
(assert (= x2521 (and x2210 (not x1854))))
(assert (x1384 x2112))
(assert (= x3773 (=> (and (= (= x2985 0) x3962) (or (and (and (<= x1396 1099511627775) (= x1396 (x1798 x2364)) (= (x230 64 0 x1813) x2364) (= x1637 (ite (= x1396 0) 1 0))) x3962) (and (= 1 x1637) (not x3962)))) x3742)))
(assert (= (or x1704 x2532) x3860))
(assert (x1384 x1468))
(assert (= (x2128 (+ x4251 1)) (x2128 x4251)))
(assert (x1384 x1466))
(assert (x1384 x1637))
(assert (x1000 x2343))
(assert (x3395 (x521 2 x4081)))
(assert (= (x3763 x3980 4) (x323 x3980 16)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2190 x1280)))
(assert (x1384 x2406))
(assert (x1384 x99))
(assert (x3295 x2450 x463 x4157 x1514))
(assert (x1384 x1971))
(assert (x3395 (- x4099 x3193)))
(assert (= x1231 (and x2976 (not x2979))))
(assert (< 10000 (x230 64 x1722 9)))
(assert (= 9 (x4195 (x230 64 x1675 9))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2445 14)))
(assert (x3404 (* 340282366920938463463374607431768211456 x2487)))
(assert (= (and x1647 x101) x3883))
(assert (= (x3377 (* x176 18446744073709551616)) (x3933 x176 64)))
(assert (= x1818 (or x982 x3285)))
(assert (x1384 x3150))
(assert (not (x2614 (x230 64 255 x1822))))
(assert (= (=> (and (= (< 18446744073709551615 x2663) x4189) (or (and x4189 (and (= x1558 (x3763 x2663 64)) (= (+ 64 x1408) x132))) (and (and (= x1558 x2663) (= x132 x1408)) (not x4189)))) x4135) x3879))
(assert (x1327 x308 340282366920938463463374607431768211456))
(assert (= (x3933 x1785 8) (x3377 (* x1785 256))))
(assert (x2547 x1405 18446744073709551616))
(assert (x3606 x3275 1000000000000000000))
(assert (x3404 (* x2187 18446744073709551616)))
(assert (x3395 (- x3193 x4157)))
(assert (= (or x1117 (and x3610 (not x465))) x1249))
(assert (= x3064 (or x4023 x1502)))
(assert (x3395 (- x4099 x3751)))
(assert (x1384 x2699))
(assert (= (x3763 x1405 64) (x323 x1405 18446744073709551616)))
(assert (not (x2614 (x230 64 x3166 x3571))))
(assert (= (x4195 (x230 64 x3166 x3571)) x3571))
(assert (not (x2614 (x230 64 0 x1))))
(assert (x1804 x1028 x36 x3193 x600))
(assert (= (and x2964 (not x845)) x2531))
(assert (x3395 (- x36 x4157)))
(assert (= (x230 64 x2155 x2923) (x2128 (x230 64 x2155 x2923))))
(assert (x2466 65536 x1671))
(assert (< 10000 (x230 64 x2155 x2923)))
(assert (= (and x487 x471) x1952))
(assert (x3404 (* x770 2)))
(assert (= (x4195 (x230 64 x2445 14)) 14))
(assert (x3295 x1514 x4157 x753 x4099))
(assert (x1384 x3891))
(assert (= x3730 x1857))
(assert (= x1088 (and x2806 x3843)))
(assert (x1804 x3866 x3751 x753 x4099))
(assert (= x1669 (and x912 (not x2821))))
(assert (= (x3933 x54 64) (x3377 (* x54 18446744073709551616))))
(assert (< (x230 64 x610 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2466 16 x271))
(assert (= x805 (or x1135 x1100)))
(assert (= (x3933 x271 4) (x3377 (* x271 16))))
(assert (= (x3763 x3572 16) (x323 x3572 65536)))
(assert (x1725 x3193 (- x600 x1028)))
(assert (= x3224 (or x4218 x2867)))
(assert (= (or x3053 x2601) x4043))
(assert (= 0 (x2128 34028236692093846346337460743176821)))
(assert (= x390 (or x1708 x4117)))
(assert (x1384 x4005))
(assert (x1384 x2477))
(assert (x1384 x1683))
(assert (x1384 x3139))
(assert (x3395 x2649))
(assert (x1384 x1350))
(assert (= x430 (=> (and (= x4245 (> x3232 65535)) (or (and (not x4245) (and (= x1162 x3232) (= x4178 x1981))) (and (and (= (+ 16 x1981) x4178) (= x1162 (x3763 x3232 16))) x4245))) x2007)))
(assert (x1384 x1055))
(assert (< (x230 64 0 x1657) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2466 6277101735386680763835789423207666416102355444464034512896 x365))
(assert (x1384 x485))
(assert (x3395 x2063))
(assert (x3404 (* 4 x1572)))
(assert (= x2117 (and x2595 x1103)))
(assert (x2614 1099511627775))
(assert (x1384 x909))
(assert (= (or x2113 x3768) x3126))
(assert (x3395 (- x600 x1514)))
(assert (= (and (not x102) x1314) x1223))
(assert (x3395 x2155))
(assert (x1327 (* x271 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x51))
(assert (= (x3933 x590 8) (x3377 (* x590 256))))
(assert (x81 x1480))
(assert (x1384 x3482))
(assert (x81 x556))
(assert (= x2455 (=> (and (or (= 6277101735386680763835789423207666416102355444464034512896 x3467) (= x3467 0)) (= (+ x2190 x3467 x769) x1467) (= (ite (>= 6277101735386680763835789423207666416102355444464034512895 x4167) x1127 (x1161 x616 x4167)) x910) (or (= x616 6277101735386680763835789423207666416102355444464034512896) (= 0 x616)) (= (* x365 6277101735386680763835789423207666416102355444464034512896) x616) (= (ite (not x102) 1 0) x365) (= x3467 (* x1055 6277101735386680763835789423207666416102355444464034512896)) (= x769 (* 340282366920938463463374607431768211456 x3081)) (= (x882 (+ x616 x4167)) x1127) (= x4167 (+ x1843 (x3933 x1308 128)))) (and (=> (and (not x102) (and (= (x3933 x2177 1) x126) (= x2177 (x3280 x759)) (= x4164 1) (= x1460 255) (= 254 x1776) (= (+ 1 x195) x3985) (= (+ 2 x3985) x2194) (= x759 (x230 64 65535 x2194)) (= (x230 64 1 14) x195) (= x1717 16777215) (= x1412 (= 0 x126)))) (and (=> (and (= x3114 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1412) x3661) (=> (and (not x1412) (and (or (and (not x2397) (and (= x126 x1226) (= 0 x3058))) (and x2397 (and (= x1226 (x3763 x126 128)) (= 128 x3058)))) (= x2397 (> x126 340282366920938463463374607431768211455)))) x2208))) (=> (and x102 (and (and (= x840 (x3280 x287)) (= x1993 (+ 2 x2092)) (= (= 0 x3807) x1944) (= x451 0) (= 0 x48) (= x287 (x230 64 0 x1993)) (= (+ x719 1) x2092) (= 1 x3747) (= (x230 64 0 14) x719) (= x476 0) (= (x3763 x840 1) x3807)) (or (and (not x1944) (and (= x3013 0) (= 1 x3820))) (and (= x3820 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1944)))) x3329)))))
(assert (= (x230 64 x1722 9) (x2128 (x230 64 x1722 9))))
(assert (= (x4195 (x230 64 x1843 x923)) x923))
(assert (x1384 x1430))
(assert true)
(assert (x1384 x1773))
(assert (x1000 x1226))
(assert (x1384 x3428))
(assert (x1384 x3444))
(assert (x1384 x2939))
(assert (x1327 (* x4242 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2624))
(assert (x1384 x2778))
(assert (= (x3763 x4226 32) (x323 x4226 4294967296)))
(assert (x1000 x1162))
(assert (= x3294 (and (not x102) x1427)))
(assert (x349 x3498))
(assert (x1384 x981))
(assert (= (x250 (x230 64 x1464 x3622)) 64))
(assert (= (x4195 (x230 64 x3972 5)) 5))
(assert (x1384 x412))
(assert (x1725 x753 (- x4099 x3866)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3790 9)))
(assert (< 10000 (x230 64 x4145 x3873)))
(assert (= (x230 64 x3881 x1786) (x2128 (x230 64 x3881 x1786))))
(assert (x1327 (ite (> 256 x1639) (x521 2 x1639) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1804 x600 x3193 x1028 x36))
(assert (x3395 x3546))
(assert (x1000 18446744073709551616))
(assert (= x1777 x853))
(assert (= (x323 x3779 65536) (x3763 x3779 16)))
(assert (= (x2128 (x230 64 x3950 5)) (x230 64 x3950 5)))
(assert (x1384 x608))
(assert (= x1490 (and x2156 x150)))
(assert (x1384 x3931))
(assert (x1384 x3711))
(assert (x1384 x3660))
(assert (= (and (not x1399) x790) x1794))
(assert (x1384 x2675))
(assert (= (x4195 (x230 64 x4177 14)) 14))
(assert (= (and x3860 (not x2705)) x1175))
(assert (= (x3933 x2649 2) (x3377 (* 4 x2649))))
(assert (x1384 x2509))
(assert (= (and (not x3190) x911) x1078))
(assert (= (x2128 (+ x3658 1)) (x2128 x3658)))
(assert (= (=> (and (and (= x3433 x3570) (= x2293 false) (= x317 false) (= false x154) (= false x3436) (= x1925 36) (= x716 false)) (and (and (or (and (and (<= 0 x712) (= x1729 (- x4181 x3426)) (= x2507 (x428 x1868)) (= (+ x1932 x74) x4181) (= x712 (+ x2507 x2608)) (= (x428 x1868) x3426) (<= x2507 340282366920938463463374607431768211455) (<= x712 340282366920938463463374607431768211455) (= x1868 (x230 64 x3036 9)) (= x2608 (x323 x3877 1000000)) (>= 340282366920938463463374607431768211455 x3426) (= x3877 (* x1803 1000000)) (= x1932 x712)) (not x68)) (and (and (= (x323 x2478 1000000) x3014) (= x2478 (* 1000000000000000000 x1803)) (>= 340282366920938463463374607431768211455 x1320) (<= x2894 340282366920938463463374607431768211455) (= (+ x3604 x2095) x4123) (= x212 x3604) (= (x230 64 x3036 9) x1582) (<= x212 340282366920938463463374607431768211455) (>= x212 0) (= x1320 (x3337 x1582)) (= x212 (+ x2894 x3014)) (= x4173 (- x4123 x1320)) (= x2894 (x3337 x1582))) x68)) (and (= x1458 x3211) (= (x942 x2731) x2846) (= (x744 x1458) x2157) (= x155 (+ 1 x2731)) (= false x3690) (= (x230 64 x796 5) x733) (= x1958 416) (= x339 (ite (not (= 0 x1535)) 1 0)) (= x3036 x638) (= x562 x909) (<= x638 281474976710655) (>= 1099511627775 x2846) (>= 18446744073709551615 x2971) (>= x2704 1) (= x2566 (x230 64 x2556 x3182)) (<= x1803 18446744073709551615) (= (x2009 340282366920938463463374607431768211455 x3570) x2967) (= x3433 x2666) (>= 127 x569) (= false x1179) (= (x3763 x3570 192) x1535) (= x2298 (x3420 x2731)) (= x2971 (x675 x155)) (<= x3036 281474976710655) (= x3230 (x3763 x3570 128)) (= 416 x2015) (= (x1819 x1638) x2704) (= (x230 64 x339 14) x3182) (= (x2145 x155) x1803) (= (x3082 x155) x638) (= (x230 64 x3930 x2566) x2731) (= x3930 (x2009 1099511627775 x2967)) (>= 127 x569) (= (= 0 x1535) x68) (= x3036 (x45 x733)) (= x909 (x1629 x1638)) (= x4064 1955195939) (= x2556 (x2009 16777215 x3230)) (<= x2298 1099511627775))) (= x796 x3211))) x542) x1513))
(assert (x1384 x732))
(assert (= x3004 (and x32 x1076)))
(assert (= x1564 (=> (and (or (and (not x4107) (and (= x1520 x3278) (= x3593 x4124))) (and (and (= x3278 (x3763 x1520 2)) (= (+ x4124 2) x3593)) x4107)) (= x4107 (< 3 x1520))) x539)))
(assert (= (=> (and (= (< 255 x1165) x628) (or (and (and (= x2030 x1165) (= x3115 x1836)) (not x628)) (and (and (= (x3763 x1165 8) x2030) (= (+ 8 x1836) x3115)) x628))) x589) x442))
(assert (x1000 x534))
(assert (> (x230 64 x3528 x3571) 10000))
(assert (x3295 x3751 x3866 x36 x1028))
(assert (x1384 x3976))
(assert (x2547 x1980 340282366920938463463374607431768211456))
(assert (x1327 x1627 18446744073709551616))
(assert (x1384 x1240))
(assert (= x2633 (and x2321 x780)))
(assert (< (x230 64 x2750 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x230 64 x2433 5)))
(assert (x3395 x3403))
(assert (x2466 340282366920938463463374607431768211456 x1230))
(assert (x1384 x1023))
(assert (x3395 65536))
(assert (= (=> (and (= x3364 (+ (x3933 x3181 8) x2651)) (= (ite (< 1 x4097) (+ x2282 1) x2282) x2651)) x591) x3024))
(assert (x1327 (* x1630 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x745))
(assert (= x4046 (or x2001 x698)))
(assert (x1384 x3930))
(assert (= x136 (and x3386 (not x2409))))
(assert (x2466 16 x108))
(assert (=> (>= 10000 x2653) (= 0 (x2128 x2653))))
(assert (=> (<= x850 10000) (= 0 (x2128 x850))))
(assert (x1384 x3430))
(assert (x2060 x671))
(assert (x1384 x517))
(assert (x1384 x108))
(assert (x3606 x270 1000000000000000000000000))
(assert (x1384 x1604))
(assert (x349 x4127))
(assert (=> (<= x1222 10000) (= 0 (x2128 x1222))))
(assert (x1000 x644))
(assert (< (x230 64 x590 x222) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 x2620))
(assert (x2466 340282366920938463463374607431768211456 x1308))
(assert (= x820 (x3706 (x230 64 x820 14))))
(assert (= (x4195 (x230 64 0 x3514)) x3514))
(assert (= x2467 (or x3559 (and x3898 x2634))))
(assert (= 64 (x250 (x230 64 x1675 9))))
(assert (not (x2614 (x230 64 x2433 5))))
(assert (= x1951 (x4195 (x230 64 65535 x1951))))
(assert (= x2341 (x4195 (x230 64 x2895 x2341))))
(assert (= x3146 (x3706 (x230 64 x3146 14))))
(assert (x1384 x2426))
(assert (= (x3706 (x230 64 x1410 x2196)) x1410))
(assert (< 10000 (x230 64 x162 14)))
(assert (= (x2128 (+ 1 x2052)) (x2128 x2052)))
(assert (= x272 (x3706 (x230 64 x272 x2673))))
(assert (x1384 x3870))
(assert (= (x3377 (* 2 x3869)) (x3933 x3869 1)))
(assert (= (x3933 x1297 32) (x3377 (* x1297 4294967296))))
(assert (x1384 x1942))
(assert (= (x4195 (x230 64 x1743 14)) 14))
(assert (x2547 x3345 18446744073709551616))
(assert (x1000 x1405))
(assert (= (x3933 x3546 1) (x3377 (* x3546 2))))
(assert (x3395 x581))
(assert (= (x2128 (x230 64 x4145 x3873)) (x230 64 x4145 x3873)))
(assert (= 14 (x4195 (x230 64 x2418 14))))
(assert (x1384 x3447))
(assert (< 10000 (x230 64 x486 5)))
(assert (= x3125 (and (not x574) x445)))
(assert (= (x2128 x1147) (x2128 (+ 1 x1147))))
(assert (= x3051 (and (not x20) x1659)))
(assert (= (x250 (x230 64 0 x4001)) 64))
(assert (x1384 x3741))
(assert (x3395 4294967296))
(assert (x1725 x463 (- x2450 x1028)))
(assert (x1384 x3401))
(assert (x1804 x753 x4099 x1028 x36))
(assert (= (x3377 (* x1003 256)) (x3933 x1003 8)))
(assert (= (x3377 (* 65536 x1671)) (x3933 x1671 16)))
(assert (x1384 x1558))
(assert (x2466 2 x2260))
(assert (x2547 x802 256))
(assert (= x3257 (and (not x2765) x3893)))
(assert (x3395 x529))
(assert (x1384 x4091))
(assert (> (x230 64 x796 5) 10000))
(assert (x1384 x856))
(assert (= 64 (x250 (x230 64 x3124 x2956))))
(assert (x3295 x1514 x4157 x2450 x463))
(assert (= (x323 x126 340282366920938463463374607431768211456) (x3763 x126 128)))
(assert (x1384 x2163))
(assert (= (and x1307 (not x1448)) x3750))
(assert (x1384 x3945))
(assert (x3404 (* x3880 18446744073709551616)))
(assert (x1000 x2360))
(assert (x3395 x176))
(assert (= (and (not x1031) x2679) x2589))
(assert (x1384 x1578))
(assert (= (and (not x1844) x2530) x2905))
(assert (= 64 (x250 (x230 64 x4177 14))))
(assert (= (and (not x1421) x3198) x871))
(assert (= (x2128 (x230 64 x2621 x3622)) (x230 64 x2621 x3622)))
(assert (x1327 (* x3065 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x312))
(assert (not (x2614 (x230 64 x517 x1657))))
(assert (= (=> (and (= (< 3 x2780) x1066) (or (and x1066 (and (= (+ x2140 2) x75) (= x1350 (x3763 x2780 2)))) (and (not x1066) (and (= x2780 x1350) (= x2140 x75))))) x2448) x4042))
(assert (x2466 1 (x521 2 x1157)))
(assert (x2060 x3971))
(assert (= x3185 (or x104 x1059)))
(assert (x3404 x2653))
(assert (x3404 x3633))
(assert (x3295 x600 x3193 x4099 x753))
(assert (not (x2614 (x230 64 x3146 14))))
(assert (x2547 x55 340282366920938463463374607431768211456))
(assert (x3606 x417 1000000000000000000))
(assert (= (and x2184 (not x1825)) x2844))
(assert (x1384 x2235))
(assert (x1384 x3668))
(assert (x3404 (* x602 2)))
(assert (< 10000 (x230 64 x1009 x2545)))
(assert (x1384 x455))
(assert (x1000 x840))
(assert (= 64 (x250 (x230 64 x3881 x1786))))
(assert (x1384 x1393))
(assert (> (x230 64 x2105 x2419) 10000))
(assert (= (and x1547 x14) x2417))
(assert (= x450 (and x3515 (not x1884))))
(assert (x1384 x2304))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x867 x959)))
(assert (x3404 x3048))
(assert (x3295 x3751 x3866 x1514 x4157))
(assert (x1384 x1464))
(assert (= x2713 (x3706 (x230 64 x2713 9))))
(assert (x1384 x3438))
(assert (x1384 x4188))
(assert (x1000 x2638))
(assert (x2547 x241 4294967296))
(assert (= (or x2986 x423) x57))
(assert (x1804 x1514 x4157 x3751 x3866))
(assert (not (x2614 (x230 64 0 14))))
(assert (x1384 x2351))
(assert (x1327 x1612 340282366920938463463374607431768211456))
(assert (x1384 x1948))
(assert (x2060 x1684))
(assert (x3404 (* 18446744073709551616 x1450)))
(assert (x1384 x1144))
(assert (= (x230 64 0 x94) (x2128 (x230 64 0 x94))))
(assert (= (x4195 (x230 64 x2653 x2199)) x2199))
(assert (x1000 x3275))
(assert (x1384 x769))
(assert (x1384 x80))
(assert (= x867 (x3706 (x230 64 x867 x959))))
(assert (x1384 x2959))
(assert (x3395 x28))
(assert (= (x230 64 0 x1993) (x2128 (x230 64 0 x1993))))
(assert (= (x2128 (+ 1 x3985)) (x2128 x3985)))
(assert (x1384 x1308))
(assert (x1384 x1121))
(assert (x1327 (* 256 x1785) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= x3267 1) x2270) x1857))
(assert (=> (>= 10000 x3449) (= (x2128 x3449) 0)))
(assert (x3395 x2670))
(assert (x1384 x1678))
(assert (x1327 (* x272 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2791))
(assert (=> (<= x10 10000) (= (x2128 x10) 0)))
(assert (x1327 x556 256))
(assert (= x4208 (and x1546 (not x102))))
(assert (= (x230 64 255 x1829) (x2128 (x230 64 255 x1829))))
(assert (x3404 x4069))
(assert (x1384 x2147))
(assert (x1384 x943))
(assert (x3295 x3751 x3866 x4099 x753))
(assert (= x2819 (and x102 x1314)))
(assert (= (or x970 x4108) x1672))
(assert (= x2919 (or x2312 x1092)))
(assert (x1384 x1507))
(assert (= (and x1104 (not x990)) x2407))
(assert (x1384 x2949))
(assert (= x2028 (or x433 x3979)))
(assert (x1384 x1222))
(assert (< 10000 (x230 64 x3146 14)))
(assert (x1384 x1212))
(assert (x1000 x2757))
(assert (x1804 x2450 x463 x3193 x600))
(assert (= (and x2829 (not x649)) x3979))
(assert (x3395 x293))
(assert (= (or x2476 x3463) x202))
(assert (x2060 x1247))
(assert (= (and (not x2951) x3657) x1441))
(assert (> (x230 64 x3191 x3069) 10000))
(assert (= (or x774 x3955) x2137))
(assert (x1384 x3261))
(assert (= x2026 (x3706 (x230 64 x2026 x3622))))
(assert (x2060 x245))
(assert (x1384 x3336))
(assert (x1384 x1009))
(assert (x1384 x711))
(assert (< (x230 64 x2620 x596) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1327 (* 18446744073709551616 x1737) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2228))
(assert (x1804 x3866 x3751 x1514 x4157))
(assert (x1384 x3809))
(assert (= x400 (=> (and (= x7 x187) (= x358 x611)) x2031)))
(assert (x1384 x270))
(assert (x3404 (* x2048 256)))
(assert (= (and (not x1129) x2089) x2121))
(assert (= (x230 64 x1258 x1555) (x2128 (x230 64 x1258 x1555))))
(assert (= x314 (and x1094 x2153)))
(assert (not (x2614 (x230 64 x1722 9))))
(assert (x2547 x2939 4294967296))
(assert (= (x2128 x276) (x2128 (+ 2 x276))))
(assert (not (x2614 (x230 64 x163 x3622))))
(assert (x2547 x2865 65536))
(assert (= (and (not x2583) x4000) x2692))
(assert (x3395 x2400))
(assert (x1384 x4036))
(assert (x1384 x1485))
(assert (x1725 x4099 (- x753 x3193)))
(assert (x1384 x2057))
(assert (x1327 x327 16777216))
(assert (= (x3706 (x230 64 0 x3635)) 0))
(assert (= (x250 (x230 64 x421 14)) 64))
(assert (= (x323 x3887 18446744073709551616) (x3763 x3887 64)))
(assert (x1384 x2988))
(assert (x1327 x2234 1000000000000000000000000))
(assert (= (and x1455 x3492) x4017))
(assert (= (x3706 (x230 64 x3908 5)) x3908))
(assert (= (x323 x3441 16) (x3763 x3441 4)))
(assert (x3404 (* 2 x2135)))
(assert (x1384 x1160))
(assert (x1000 x1558))
(assert (= (=> (and (or (and x772 (and (= x1757 (+ 4 x986)) (= x862 (x3763 x706 4)))) (and (not x772) (and (= x862 x706) (= x986 x1757)))) (= (> x706 15) x772)) x1102) x3351))
(assert (= (or x3902 x637) x3601))
(assert (not (x2614 (x230 64 x2750 14))))
(assert (= 64 (x250 (x230 64 x2490 x1542))))
(assert (= (x2128 x1171) (x2128 (+ x1171 1))))
(assert (=> (>= 10000 x2620) (= 0 (x2128 x2620))))
(assert (x1384 x4071))
(assert (= x2490 (x3706 (x230 64 x2490 x1542))))
(assert (= (x323 x3846 65536) (x3763 x3846 16)))
(assert (x1000 x3026))
(assert (x1725 x3193 (- x600 x1514)))
(assert (x2313 x2032 x2990))
(assert (= x1593 (or x2108 x134 x2511 x3064)))
(assert (x3404 (* x4190 4294967296)))
(assert (x1384 x3400))
(assert (x1000 x2760))
(assert (= (x3763 x3909 4) (x323 x3909 16)))
(assert (= (and (not x3581) x2000) x1401))
(assert (x3404 (* 65536 x293)))
(assert (= x336 (=> (and (or (and (not x2586) (and (= x3483 x3789) (= x1416 x2420))) (and x2586 (and (= (+ 4 x2420) x1416) (= x3789 (x3763 x3483 4))))) (= x2586 (> x3483 15))) x3732)))
(assert (x2466 4 x274))
(assert (= 64 (x250 (x230 64 x3972 5))))
(assert (x1000 x2966))
(assert (x2466 1000000 x695))
(assert (= x1151 (=> (and (= (x2904 x1881) x3017) (= x421 (ite x3140 1 0)) (= (ite (= 0 x3017) 0 1) x1491) (= (x230 64 x2105 x2419) x1438) (= (x230 64 0 x1438) x1881) (<= x3017 1099511627775) (= (x2009 16777215 x3065) x2105) (= (x230 64 x421 14) x2419) (= (> x1491 0) x665)) (and (=> (and (not x665) (and (= (x230 64 x3212 14) x3427) (= (x2009 x1040 x245) x3139) (= x659 (x230 64 x1009 x2545)) (= x3212 (ite x3140 1 0)) (= x245 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x1157))) (= x2545 (+ x504 2)) (= x1040 (x4192 x659)) (= x1157 (x2009 255 x3065)) (= (x2009 16777215 x3065) x2966) (= (x3763 x2966 8) x1009) (= (+ 1 x3427) x504) (= x3566 (= x3139 x1040)))) (and (=> (and (= 0 x3267) x3566) x2270) (=> (and (and (= (x230 64 x1009 x2545) x4037) (= x2367 (= 0 x3139))) (not x3566)) (and (=> (and (and (and (= x2773 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x470))) (= (x3763 x1009 8) x1258) (= (= 0 x564) x531) (= (x230 64 x1258 x1555) x735) (= x2386 (x230 64 x1258 x1555)) (= x3142 (x2459 x2386)) (= (+ x504 1) x1555) (= x564 (x2009 x3142 x2773)) (= x470 (x2009 255 x1009))) (or (not x531) (and (and (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x1258)) x3911) (= x2729 (x2200 x504)) (= x2959 (x2009 x2729 x3911))) x531))) x2367) x3730) (=> (not x2367) x1857))))) (=> x665 x22)))))
(assert (< (x230 64 255 x1822) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2303))
(assert (x1384 x3442))
(assert (= 64 (x250 (x230 64 x1722 9))))
(assert (= (x2128 (+ 2 x1289)) (x2128 x1289)))
(assert (= x3597 (and x3106 (not x2529))))
(assert (x3404 (* 2 x554)))
(assert (x3395 (- x36 x3193)))
(assert (> (x230 64 x761 x242) 10000))
(assert (= (or x2722 x111) x2883))
(assert (= x3994 (or x2447 x668)))
(assert (= x2000 (or x920 x977)))
(assert (< (x230 64 x2105 x2419) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x693 x533) x2197))
(assert (= x1989 (=> (and (= (> x468 65535) x917) (or (and (and (= x2428 x1667) (= x468 x3683)) (not x917)) (and x917 (and (= x3683 (x3763 x468 16)) (= x2428 (+ 16 x1667)))))) x2383)))
(assert (= x2840 (=> (and (and (= (x3933 x3374 4) x626) (= (= x626 0) x2240)) (or (and x2240 (and (= x2900 x557) (= x3799 x3374))) (and (and (= x2900 (+ x557 4)) (= x3799 x626)) (not x2240)))) x979)))
(assert (x3295 x1028 x36 x3866 x3751))
(assert (= (and (not x1928) x3764) x2555))
(assert (= x2943 (or x787 x3214 x289 x4052)))
(assert (x3404 (* 340282366920938463463374607431768211456 x1308)))
(assert (= (and x3187 x1661) x3492))
(assert (= (or x1764 x2014) x3347))
(assert (= (x3377 (ite (> 256 x3881) (x521 2 x3881) 0)) (x3933 1 x3881)))
(assert (= x743 (and (not x1455) x3492)))
(assert (not (x2614 (x230 64 x174 x1171))))
(assert (not (x2614 (x230 64 x1155 x1099))))
(assert (= x2503 (=> (and (= (< 3 x100) x4244) (or (and (not x4244) (and (= x1744 x100) (= x2830 x3771))) (and x4244 (and (= x2830 (+ 2 x3771)) (= (x3763 x100 2) x1744))))) x2460)))
(assert (x2466 2 x841))
(assert (= x1681 (=> (and (= x1406 x2477) (= x1406 (x3737 (- x2289 1))) (= (ite (> x981 1) (+ x1683 1) x1683) x2289)) x243)))
(assert (> (x230 64 x3670 x2096) 10000))
(assert (not (x2614 (x230 64 x2653 x2199))))
(assert (x2466 2 x2071))
(assert (= (x230 64 x1843 x3571) (x2128 (x230 64 x1843 x3571))))
(assert (= x1837 (and x2115 (not x2568))))
(assert (= (=> (and (or (and x1272 (and (= (+ 2 x2741) x3682) (= (x3763 x1678 2) x2827))) (and (not x1272) (and (= x1678 x2827) (= x3682 x2741)))) (= x1272 (> x1678 3))) x650) x1305))
(assert (= (x3933 x1030 8) (x3377 (* x1030 256))))
(assert (= (x323 x862 4) (x3763 x862 2)))
(assert (= x2896 (and x3455 (not x3956))))
(assert (= (x230 64 x4188 x1657) (x2128 (x230 64 x4188 x1657))))
(assert (x1000 x1780))
(assert (= (x3706 (x230 64 x2678 6)) x2678))
(assert (x1000 x206))
(assert (x1327 (* x1548 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2445 (x3706 (x230 64 x2445 14))))
(assert (x1000 x3683))
(assert (x2060 x2729))
(assert (= (or x1960 x1237) x1001))
(assert (= (x2128 x2341) (x2128 (+ 1 x2341))))
(assert (x1384 x3813))
(assert (not (x2614 (x230 64 x3691 14))))
(assert (x1804 x3193 x600 x3751 x3866))
(assert (= (and x3417 x752) x318))
(assert (= (or x3965 x2211) x3739))
(assert (x3295 x2450 x463 x3193 x600))
(assert (x1327 (* x263 65536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3295 x463 x2450 x3751 x3866))
(assert (x3395 x2859))
(assert (= (x2128 1000000) 0))
(assert (= (x3706 (x230 64 x897 x3513)) x897))
(assert (= (x3377 (* x2048 256)) (x3933 x2048 8)))
(assert (x1384 x2820))
(assert (x1384 x117))
(assert (x1725 x3193 (- x600 x3866)))
(assert (= x2539 (x4195 (x230 64 0 x2539))))
(assert (= (or x2359 x2390) x4009))
(assert (x3913 x3114))
(assert (= (x2128 x3418) (x2128 (+ x3418 1))))
(assert (x1384 x3600))
(assert (= x1569 (and x1104 x990)))
(assert (x1384 x4133))
(assert (= x847 (and x515 x846)))
(assert (= (x2128 (x230 64 x3670 x2096)) (x230 64 x3670 x2096)))
(assert (= (or x2723 x3834) x3819))
(assert (x1384 x151))
(assert (x1327 (* 256 x2895) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1717))
(assert (< 10000 (x230 64 x3805 9)))
(assert (x1384 x2920))
(assert (x3395 x54))
(assert (= x388 (or x1677 x378)))
(assert (= (x2128 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x3404 (* x1785 256)))
(assert (= (x3706 (x230 64 x2111 14)) x2111))
(assert (= x2462 (and (not x2576) x2737)))
(assert (x1384 x3283))
(assert (not (x2614 (x230 64 x2418 14))))
(assert (=> (>= 10000 x2098) (= 0 (x2128 x2098))))
(assert (x1384 x3124))
(assert (x1384 x556))
(assert (x1384 x2846))
(assert (x3395 x2516))
(assert (x1804 x3751 x3866 x1028 x36))
(assert (x2060 x70))
(assert (not (x2614 (x230 64 x3212 14))))
(assert (= x461 (or x1188 x1711)))
(assert (x3404 (* 340282366920938463463374607431768211456 x3605)))
(assert (= x1882 (and (not x3388) x2725)))
(assert (x1327 x1948 256))
(assert (x3395 x1785))
(assert (x1384 x232))
(assert (x3395 (- x1028 x1514)))
(assert (= x3817 (and x1048 x2816)))
(assert (= 14 (x4195 (x230 64 x1222 14))))
(assert (= (and x1448 x1307) x2756))
(assert (x2614 18446744073709551615999999999999999999))
(assert (x1384 x3100))
(assert (= (x3763 x983 2) (x323 x983 4)))
(assert (=> (>= 10000 x1648) (= (x2128 x1648) 0)))
(assert (x3295 x3751 x3866 x1028 x36))
(assert (= (x4195 (x230 64 x1003 x1417)) x1417))
(assert (=> (>= 10000 x2050) (= 0 (x2128 x2050))))
(assert (x1384 x2468))
(assert (= x3635 (x4195 (x230 64 0 x3635))))
(assert (= x2574 (and x1893 x103)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3881 x1786)))
(assert (x1384 x3320))
(assert (= (and (not x1335) x2170) x2108))
(assert (x1000 x1707))
(assert (= (or x3203 x1051) x3616))
(assert (x3395 x3880))
(assert (= (or x1206 x857) x2784))
(assert (x1327 (* 16 x1721) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2466 100000000000000 x2600))
(assert (= x2477 (x3706 (x230 64 x2477 x2994))))
(assert (< (x230 64 x3181 x3538) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2389 (=> (and (and (= x207 (= x3587 0)) (= x3587 (x3933 x3982 8))) (or (and (not x207) (and (= x3587 x271) (= x1034 (+ x4025 8)))) (and (and (= x271 x3982) (= x4025 x1034)) x207))) x725)))
(assert (= (and x3915 x2151) x3350))
(assert (x1384 x303))
(assert (= x3318 (or x634 x1828)))
(assert (= x2770 (or x3274 x350)))
(assert (> (x230 64 x3908 5) 10000))
(assert (= (=> (and (or (and (and (= x2791 x541) (= x1008 x1084)) (not x14)) (and x14 (and (= x1008 (x3763 x1084 64)) (= x2791 (+ 64 x541))))) (= x14 (< 18446744073709551615 x1084))) x3966) x2288))
(assert (x1384 x2135))
(assert (x2547 x3864 16))
(assert (= x2371 (=> (and (= (> x3022 65535) x1919) (or (and (and (= x221 (+ x2854 16)) (= (x3763 x3022 16) x1205)) x1919) (and (and (= x2854 x221) (= x3022 x1205)) (not x1919)))) x1220)))
(assert (x2547 x1520 4))
(assert (x1725 x1028 (- x36 x1514)))
(assert (x1384 x2612))
(assert (=> (>= 10000 x3191) (= 0 (x2128 x3191))))
(assert (= (x2128 x4112) (x2128 (+ x4112 2))))
(assert (= (x3933 1 x2449) (x3377 (ite (< x2449 256) (x521 2 x2449) 0))))
(assert (x1327 x3925 2))
(assert (> (x230 64 x897 x3513) 10000))
(assert (x3395 100000))
(assert (x1384 x1360))
(assert (= (or x1631 x847) x164))
(assert (= (and (not x1233) x1623) x2226))
(assert (x2547 x508 4))
(assert (x3395 x2135))
(assert (= (x3763 x201 4) (x323 x201 16)))
(assert (x1725 x4099 (- x753 x3751)))
(assert (= (and (not x2203) x2370) x1712))
(assert (x3404 (ite (< x2449 256) (x521 2 x2449) 0)))
(assert (x2466 65536 x3393))
(assert (x1327 x3230 256))
(assert (= x1003 (x3706 (x230 64 x1003 x1417))))
(assert (x3606 (- x1537 100000000) 100000))
(assert (x1384 x4163))
(assert (= x1462 (and (not x1241) x2826)))
(assert (x1384 x398))
(assert (= (and (not x1609) x3248) x3006))
(assert (x3395 (- x1514 x3866)))
(assert (x1725 x600 (- x3193 x36)))
(assert (not (x2614 (x230 64 255 x1829))))
(assert (x3295 x4157 x1514 x4099 x753))
(assert (= (x250 (x230 64 x3181 x3538)) 64))
(assert (= (or x1118 x642) x2054))
(assert (= (and x817 x1891) x1732))
(assert (= x466 (and x1451 (not x475))))
(assert (x1384 x2155))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1155 x1099)))
(assert (x3395 (- x753 x2450)))
(assert (x3395 x1030))
(assert (= (x3933 x1767 8) (x3377 (* x1767 256))))
(assert (x3295 x3193 x600 x3866 x3751))
(assert (= (x4195 (x230 64 x2111 14)) 14))
(assert (=> (<= x2750 10000) (= (x2128 x2750) 0)))
(assert (x1384 x1407))
(assert (x2313 x943 x1573))
(assert (not (x2614 (x230 64 x2793 x1895))))
(assert (= x3183 (x3706 (x230 64 x3183 14))))
(assert (> (x230 64 0 x3514) 10000))
(assert (= (=> (and (= (> x3572 65535) x2529) (or (and (not x2529) (and (= x2799 x775) (= x3572 x802))) (and x2529 (and (= (+ 16 x2799) x775) (= (x3763 x3572 16) x802))))) x1984) x1116))
(assert (=> (>= 10000 x3199) (= 0 (x2128 x3199))))
(assert (= (=> (and (and (= x333 (= 0 x3176)) (= x895 (x230 64 x1003 x1417)) (= (+ x3634 (x3933 x3449 8)) x1003) (= (+ 1 x3651) x1417) (= x357 (x4192 x895)) (= (x3933 x357 128) x3176) (= (- 255 (ite (= 0 (x3933 x602 1)) x2412 (+ 1 x2412))) x3634)) (or (and x333 (and (= x357 x571) (= 0 x648))) (and (not x333) (and (= 128 x648) (= x571 x3176))))) x1926) x3052))
(assert (= (x3706 (x230 64 x4020 x3622)) x4020))
(assert (< (x230 64 x1485 x1280) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1725 x3866 (- x3751 x36)))
(assert (x2060 x2782))
(assert (x2614 1000000000000000000000000))
(assert (x1804 x3866 x3751 x3193 x600))
(assert (= x692 (and x1211 x2565)))
(assert (x2466 100000 x2715))
(assert (= (x2128 x1822) (x2128 (+ 1 x1822))))
(assert (x1384 x3520))
(assert (x1384 x160))
(assert (x295 x3259))
(assert (x1384 x1726))
(assert (x1384 x3565))
(assert (x1000 x4045))
(assert (= (x4195 (x230 64 x4188 x1657)) x1657))
(assert (= (x2128 (x230 64 x867 x959)) (x230 64 x867 x959)))
(assert (= (x3706 (x230 64 255 x1822)) 255))
(assert (x1384 x3567))
(assert (=> (>= 10000 x652) (= 0 (x2128 x652))))
(assert (= (x2128 281474976710654) 0))
(assert (= x2193 (or x3154 x2375)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3372 x2647)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1656 9)))
(assert (x2060 x327))
(assert (x1384 x1627))
(assert (not (x2614 (x230 64 0 x3514))))
(assert (= x954 (and x2494 (not x665))))
(assert (= (x3763 x2780 2) (x323 x2780 4)))
(assert (x1327 (* 2 x2400) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1954))
(assert (= x1354 (=> (and (= (< 3 x2343) x2881) (or (and x2881 (and (= x3320 (x3763 x2343 2)) (= (+ 2 x485) x2571))) (and (not x2881) (and (= x2343 x3320) (= x485 x2571))))) x3722)))
(assert (x1384 x2500))
(assert (x3606 x3568 1000000))
(assert (= x83 (or x2041 x624)))
(assert (not (x2614 (x230 64 x1003 x1417))))
(assert (x1384 x2880))
(assert (= 64 (x250 (x230 64 x1269 x3245))))
(assert (= (x3763 x2760 1) (x323 x2760 2)))
(assert (= (x3706 (x230 64 65535 x1951)) 65535))
(assert (x1384 x1780))
(assert (x1384 x1810))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2914 14)))
(assert (= x1171 (x4195 (x230 64 x174 x1171))))
(assert (= x1519 (and x741 x188)))
(assert (= (and x1865 x531) x637))
(assert (= x667 (or x2276 x1382)))
(assert (x2466 1000000 x3038))
(assert (x1384 x2909))
(assert (x1384 x951))
(assert (x3395 (- x600 x3866)))
(assert (x3395 x2187))
(assert (= (x3377 (* x2442 16)) (x3933 x2442 4)))
(assert (= (x3933 1 x1157) (x3377 (ite (< x1157 256) (x521 2 x1157) 0))))
(assert (x3404 (* x2793 256)))
(assert (= x979 (=> (and (and (= x1463 (x3933 x3799 2)) (= (= x1463 0) x292)) (or (and (and (= x1443 (+ 2 x2900)) (= x2260 x1463)) (not x292)) (and x292 (and (= x2260 x3799) (= x1443 x2900))))) x346)))
(assert (x3395 (- x3866 x463)))
(assert (x1725 x4157 (- x1514 x3751)))
(assert (= x849 (and x2320 x1039)))
(assert (x3295 x1514 x4157 x463 x2450))
(assert (= x2033 (and x2531 (not x3231))))
(assert (x3404 (* 16 x3122)))
(assert (x2712 x2921))
(assert (x1000 256))
(assert (= 0 (x2128 100000000000000)))
(assert (=> (>= 10000 x1168) (= 0 (x2128 x1168))))
(assert (x1384 x3855))
(assert (x1384 x1656))
(assert (= x2584 (=> (and (or (and (not x82) (and (= x2282 x2068) (= x4097 x983))) (and x82 (and (= (+ 2 x2068) x2282) (= (x3763 x983 2) x4097)))) (= (< 3 x983) x82)) x3024)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3908 5)))
(assert (> (x230 64 255 x1147) 10000))
(assert (x3295 x4099 x753 x2450 x463))
(assert (x1384 x748))
(assert (= 64 (x250 (x230 64 x3805 9))))
(assert (x1384 x2859))
(assert (x3395 (- x2450 x3193)))
(assert (= (and x1990 x1672) x4050))
(assert (= (x323 x342 2) (x3763 x342 1)))
(assert (x1384 x3845))
(assert (x1384 x3909))
(assert (= (and x382 (not x1654)) x1292))
(assert (= x4075 (and (not x1990) x1672)))
(assert (x3404 (* x3917 2)))
(assert (x3395 (- x1028 x600)))
(assert (x1725 x1514 (- x4157 x463)))
(assert (= (x2128 (x230 64 x2742 x242)) (x230 64 x2742 x242)))
(assert (x1384 x3449))
(assert (= x3963 (and x3666 x1559)))
(assert (x1384 x2505))
(assert (not (x2614 (x230 64 0 x1438))))
(assert (= 64 (x250 (x230 64 x2713 9))))
(assert (x1384 x2084))
(assert (x2466 2 x3546))
(assert (= x1872 (and x1649 x119)))
(assert (x3606 x3762 1000000))
(assert (= x1140 (=> (= x779 x2154) x2296)))
(assert (x1000 x3630))
(assert (= (x2128 (+ x2647 1)) (x2128 x2647)))
(assert (x1384 x3250))
(assert (= (x4195 (x230 64 x4004 14)) 14))
(assert (> (x230 64 x3881 x1786) 10000))
(assert (= (x323 x4115 256) (x3763 x4115 8)))
(assert (x1384 x1050))
(assert (x2547 x3683 256))
(assert (< (x230 64 x2026 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x230 64 x1069 14)))
(assert (x2466 18446744073709551616 x1737))
(assert (x2466 65536 x293))
(assert (= (x230 64 x1069 14) (x2128 (x230 64 x1069 14))))
(assert (x2466 1000000 x467))
(assert (x3295 x463 x2450 x4099 x753))
(assert (x1000 x573))
(assert (x3295 x2450 x463 x753 x4099))
(assert (x1384 x3964))
(assert (x1384 x2861))
(assert (= x4078 (=> (and (= x3674 (+ x1363 (x3933 x2620 8))) (= x1363 (ite (> x1418 1) (+ x640 1) x640))) x1097)))
(assert (x3395 x2715))
(assert (= (and (not x4051) x4250) x2816))
(assert (= (x2128 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x2466 340282366920938463463374607431768211456 x2487))
(assert (= (or x1879 x878) x2925))
(assert (= x200 (or x23 x3179)))
(assert (x3404 (* x1445 2)))
(assert (x1384 x1493))
(assert (x3404 x570))
(assert (=> (<= x1743 10000) (= 0 (x2128 x1743))))
(assert (x1384 x1375))
(assert (x1804 x36 x1028 x463 x2450))
(assert (x1327 (* 65536 x3590) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1573))
(assert (x3404 x1308))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3368 9)))
(assert (= (x250 (x230 64 0 x1813)) 64))
(assert (x2547 x2440 16))
(assert (x3395 x1003))
(assert (= (and (not x3710) x2884) x2375))
(assert (x1384 x2663))
(assert (x1384 x357))
(assert (x1804 x1028 x36 x1514 x4157))
(assert (x1000 x88))
(assert (=> (>= 10000 x590) (= (x2128 x590) 0)))
(assert (x1384 x3587))
(assert (x1384 x206))
(assert (x2466 1000000 x463))
(assert (= (and x805 (not x3882)) x66))
(assert (= x1939 (=> (and (or (and x2259 (and (= (+ x1910 64) x2474) (= (x3763 x3345 64) x2939))) (and (and (= x2474 x1910) (= x3345 x2939)) (not x2259))) (= x2259 (> x3345 18446744073709551615))) x3685)))
(assert (x1725 x1028 (- x36 x3866)))
(assert (x2466 340282366920938463463374607431768211456 x3065))
(assert (x1384 x3284))
(assert (= (and x388 x82) x2001))
(assert (x2547 x2966 256))
(assert (x1384 x3916))
(assert (x1384 x2652))
(assert (= x991 (=> (and (= x4 (> x4071 3)) (or (and x4 (and (= x640 (+ 2 x1170)) (= (x3763 x4071 2) x1418))) (and (not x4) (and (= x1170 x640) (= x1418 x4071))))) x4078)))
(assert (= (=> (and (or (and x2139 (and (= x3572 (x3763 x1174 32)) (= (+ x3748 32) x2799))) (and (and (= x1174 x3572) (= x2799 x3748)) (not x2139))) (= x2139 (> x1174 4294967295))) x1116) x363))
(assert (x3404 (* x3519 2)))
(assert (x1384 x4080))
(assert (x3404 (ite (> 256 x3881) (x521 2 x3881) 0)))
(assert (= (x4195 (x230 64 x3181 x3538)) x3538))
(assert (x1327 (* x2177 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2466 16 x1548))
(assert (not (x2614 (x230 64 x1464 x3622))))
(assert (x3295 x3751 x3866 x463 x2450))
(assert (= (x2128 (+ x3539 1)) (x2128 x3539)))
(assert (= x1559 (or x3468 (and x3786 x2874))))
(assert (x3395 x3384))
(assert (x1384 x874))
(assert (= x2853 (=> (= (= x833 0) x425) (and (=> (and (not x425) (and (or (and (not x839) (and (= x753 x13) (= x13 (* x3684 100000000000000)) (= x1128 0))) (and (and (= x3451 0) (= x1239 (x2009 18446744073709551615 x2858)) (= x3428 x1128) (= (x2009 18446744073709551615 x3633) x3428) (= x3952 x753) (<= x3952 340282366920938463463374607431768211455) (= x3633 (x3737 (- x3684 x1239))) (= 100000000000000 x792) (= x2858 (x323 x3952 100000000000000)) (not (> x1239 x3684))) x839)) (and (<= x3684 18446744073709551615) (= x3873 (x230 64 x3146 14)) (= x3805 (x2886 x3390)) (= x3390 (+ 1 x928)) (= x2593 896) (= (* 100000000000000 x3684) x3788) (<= x1576 18446744073709551615) (>= 1099511627775 x2082) (= x4145 (x2009 16777215 x1308)) (= x3853 (x3344 x928)) (= (x3583 x3390) x3684) (>= 281474976710655 x3805) (= x2082 (x4041 x928)) (= 896 x3482) (= x928 (x230 64 x1843 x2996)) (= x2996 (x230 64 x4145 x3873)) (>= 1099511627775 x3853) (= x3146 (ite x3140 1 0)) (= x839 (< x3952 x3788)) (= x1576 (x3408 x3390))))) x1940) (=> (and x425 (and (= x4068 x3639) (= x3208 608) (= x2212 x3952) (= x3967 x3397))) x2301)))))
(assert (= (x3377 (* x174 256)) (x3933 x174 8)))
(assert (= x3321 (and x285 x2873)))
(assert (x1384 x3159))
(assert (x2547 x601 4))
(assert (= (x230 64 x1410 x2196) (x2128 (x230 64 x1410 x2196))))
(assert (= (x3763 x3532 128) (x323 x3532 340282366920938463463374607431768211456)))
(assert (= (=> (and (or (and (not x1633) (and (= x2607 x986) (= x706 x1433))) (and (and (= x986 (+ x2607 8)) (= x706 (x3763 x1433 8))) x1633)) (= x1633 (< 255 x1433))) x3351) x2453))
(assert (= (x323 x1558 4294967296) (x3763 x1558 32)))
(assert (= x1843 (x3706 (x230 64 x1843 x2996))))
(assert (= (and x1202 x1832) x305))
(assert (x3395 (- x753 x463)))
(assert (x3395 x3712))
(assert (x2060 x3259))
(assert (x1327 (* x3931 4294967296) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x300))
(assert (= x375 (=> (and (= (> x1707 18446744073709551615) x2470) (or (and (and (= (x3763 x1707 64) x669) (= x3924 (+ 64 x2246))) x2470) (and (not x2470) (and (= x3924 x2246) (= x669 x1707))))) x860)))
(assert (x2060 x2040))
(assert (x3404 x473))
(assert (= x2460 (=> (and (= (ite (> x1744 1) (+ 1 x2830) x2830) x957) (= x327 (+ (x3933 x3121 8) x957))) x3189)))
(assert (x3295 x4157 x1514 x3193 x600))
(assert (= (x3763 x3283 4) (x323 x3283 16)))
(assert (x1384 x1343))
(assert (x1384 x2282))
(assert (x1384 x1433))
(assert (x1384 x2015))
(assert (x1384 x3532))
(assert (x1384 x3798))
(assert (x1384 x3251))
(assert (= (or x1694 x1765) x3133))
(assert (x1327 (* x1767 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2937 (or x2992 x2473)))
(assert (= (and x2727 x3078) x3510))
(assert (x1384 x1232))
(assert (= x1700 (and x1701 x3545)))
(assert (x2547 x3081 256))
(assert (not (x2614 (x230 64 x1698 9))))
(assert (< (x230 64 x2477 x2994) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x986))
(assert (x3295 x3866 x3751 x4099 x753))
(assert (x3395 (- x2450 x3751)))
(assert (x1384 x2921))
(assert (x1384 x2190))
(assert (x3395 (- x3193 x463)))
(assert (= x3276 (and x2432 x1602)))
(assert (= x3240 (and x2569 x2253)))
(assert (x1384 x522))
(assert (x2466 2 x2400))
(assert (x1384 x1910))
(assert (x1000 x632))
(assert (= x872 (and x148 x1301)))
(assert (= x76 (and x322 x123)))
(assert (x295 x3633))
(assert (= (or x3110 x3629) x3359))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 65535 x2194)))
(assert (= x456 (and x852 x3852)))
(assert (=> (<= x3166 10000) (= (x2128 x3166) 0)))
(assert (= (and x2475 x1923) x826))
(assert (x3404 (* 2 x2071)))
(assert (= x3714 (and (not x4189) x3279)))
(assert (x1384 x3861))
(assert (x2466 100000000000000 x1128))
(assert (x1384 x1432))
(assert (x1327 (* 2 x3519) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x230 64 x3199 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3706 (x230 64 x4145 x3873)) x4145))
(assert (x1384 x1328))
(assert (x1384 x948))
(assert (< 10000 (x230 64 x2713 9)))
(assert (x1384 x1869))
(assert (x3395 x274))
(assert (x3295 x3193 x600 x4157 x1514))
(assert (= (x2128 (x230 64 0 x1813)) (x230 64 0 x1813)))
(assert (= x2538 (or x1403 x493)))
(assert (= (x2128 x2573) (x2128 (+ 1 x2573))))
(assert (= (x250 (x230 64 x3166 x3571)) 64))
(assert (x1000 x194))
(assert (x1384 x2830))
(assert (=> (<= x3047 10000) (= (x2128 x3047) 0)))
(assert (x2547 x2757 4))
(assert (x1384 x947))
(assert (= (x2128 (x230 64 x610 14)) (x230 64 x610 14)))
(assert (= (and x2151 (not x3915)) x2465))
(assert (= (=> (and (or (and (not x2661) (and (= x186 x1348) (= x3001 (+ 32 x1501)))) (and x2661 (and (= x457 x1348) (= x3001 x1501)))) (and (= (x3933 x457 32) x186) (= (= x186 0) x2661))) x2458) x1611))
(assert (x1000 x417))
(assert (= (x250 (x230 64 x1224 5)) 64))
(assert (=> (>= 10000 x897) (= 0 (x2128 x897))))
(assert (= (x3706 (x230 64 x2048 x86)) x2048))
(assert (= (x230 64 x1690 x1280) (x2128 (x230 64 x1690 x1280))))
(assert (= x708 (and x2245 (not x1919))))
(assert (x1384 x534))
(assert (not (x2614 (x230 64 x1069 14))))
(assert (= x2702 x3331))
(assert (< 10000 (x230 64 x2914 14)))
(assert (= (and x743 (not x2893)) x1091))
(assert (x1384 x1139))
(assert (x1384 x2672))
(assert (x3395 6277101735386680763835789423207666416102355444464034512896))
(assert (< (x230 64 x1843 x3571) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1804 x753 x4099 x3751 x3866))
(assert (x2547 x840 2))
(assert (x1327 (ite (> 256 x4065) (x521 2 x4065) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2614 (x230 64 x2050 14))))
(assert (x1384 x1516))
(assert (= (and x3303 x606) x273))
(assert (= x3599 (or x1580 x4191)))
(assert (x1000 x3865))
(assert (x1384 x4167))
(assert (= (x3763 x3668 64) (x323 x3668 18446744073709551616)))
(assert (x2547 x3655 65536))
(assert (x1725 x463 (- x2450 x600)))
(assert (x1384 x263))
(assert (x1384 x2954))
(assert (x1384 x1698))
(assert (=> (>= 10000 x339) (= (x2128 x339) 0)))
(assert (x3295 x4157 x1514 x1028 x36))
(assert (= x2668 (=> (and (and (= x2175 (= 0 x3352)) (= x3352 (x3933 x54 64))) (or (and x2175 (and (= x54 x3931) (= x1060 x925))) (and (not x2175) (and (= x3931 x3352) (= (+ 64 x1060) x925))))) x2381)))
(assert (= (x250 (x230 64 x1030 x1025)) 64))
(assert (x3395 x2247))
(assert (= (or x3458 x1842) x540))
(assert (= x2673 (x4195 (x230 64 x272 x2673))))
(assert (= (and (not x4142) x1001) x1512))
(assert (x1327 x2653 256))
(assert (x1384 x2154))
(assert (not (x2614 (x230 64 x552 14))))
(assert (= (=> (= x3065 x811) x1973) x701))
(assert (x1384 x3709))
(assert (= (x3763 x1346 8) (x323 x1346 256)))
(assert (x1384 x1357))
(assert (x295 x2858))
(assert (x1384 x10))
(assert (= (and x1607 (not x1915)) x964))
(assert (x1384 x3352))
(assert (x1327 (* x2670 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3706 (x230 64 x1030 x1025)) x1030))
(assert (x3395 x4166))
(assert (x1725 x4157 (- x1514 x753)))
(assert (= (or x3793 x2059) x3694))
(assert (not (x2614 (x230 64 x2445 14))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3528 x3571)))
(assert (x1384 x758))
(assert (x1725 x3866 (- x3751 x2450)))
(assert (= (x4195 (x230 64 x867 x959)) x959))
(assert (x1384 x4231))
(assert (= x1094 (or x335 x3485)))
(assert (x2466 16 x3374))
(assert (= (x3706 (x230 64 x1843 x923)) x1843))
(assert (x1327 x1684 65536))
(assert (x2547 x312 65536))
(assert (= (x3377 (* 2 x2177)) (x3933 x2177 1)))
(assert (= 0 (x2128 1099511627774)))
(assert (= (and x207 x889) x1688))
(assert (x1384 x2213))
(assert (x1327 (* 16 x108) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x955))
(assert (x1384 x2403))
(assert (= x868 (or x2783 x4019)))
(assert (x2547 x3100 18446744073709551616))
(assert (x1725 x4099 (- x753 x36)))
(assert (= (or x1167 x2387) x4000))
(assert (x1384 x1084))
(assert (= (and (not x376) x3257) x4033))
(assert (x1384 x39))
(assert (= (and x2101 (not x2901)) x2736))
(assert (x1384 x143))
(assert (x3395 (- x600 x4157)))
(assert (= x2262 (x4195 (x230 64 x1168 x2262))))
(assert (x1384 x927))
(assert (=> (<= x1656 10000) (= (x2128 x1656) 0)))
(assert (x1384 x3738))
(assert (= (or x1569 x2407) x1248))
(assert (= (x4195 (x230 64 x1410 x2196)) x2196))
(assert (x3395 x1671))
(assert (not (x2614 (x230 64 x3183 14))))
(assert (x3395 x3196))
(assert (=> (>= 10000 x2190) (= 0 (x2128 x2190))))
(assert (x1384 x3460))
(assert (x1000 x2865))
(assert (=> (<= x2914 10000) (= (x2128 x2914) 0)))
(assert (x2547 x3976 4))
(assert (x1327 x3081 256))
(assert (x1384 x936))
(assert (x2060 x3774))
(assert (x1384 x1297))
(assert (not (x2614 (x230 64 x2742 x242))))
(assert (x3395 (x521 2 x2324)))
(assert (x2547 x3532 340282366920938463463374607431768211456))
(assert (= x3893 (and x2114 (not x1349))))
(assert (= (or x828 x1565) x851))
(assert (x1384 x3971))
(assert (x1384 x4187))
(assert (= (x3377 (* x4187 65536)) (x3933 x4187 16)))
(assert (x1384 x1068))
(assert (= (and x3224 x4229) x2014))
(assert (x3404 (* 16 x3374)))
(assert (x1384 x88))
(assert (x1000 x2562))
(assert (x1384 x1452))
(assert (x1000 x4069))
(assert (x3295 x753 x4099 x3193 x600))
(assert (= x1451 (or x1794 x2252)))
(assert (x2547 x748 65536))
(assert (= x3844 (or x956 x886)))
(assert (x2466 16 x1721))
(assert (x1327 x2103 18446744073709551616))
(assert (x2466 18446744073709551616 x2187))
(assert (x2614 65280))
(assert (x3395 (- x2450 x1028)))
(assert (x2060 x308))
(assert (= (x3763 x2865 16) (x323 x2865 65536)))
(assert (x1384 x706))
(assert (not (x2614 (x230 64 x1224 5))))
(assert (= x3704 (and (not x3577) x202)))
(assert (x1000 x2005))
(assert (x3404 x2384))
(assert (= (or x4046 x6 x3387 x3045) x1287))
(assert (= (and x2696 x390) x104))
(assert (x3117 x2653))
(assert (x1384 x3751))
(assert (x1384 x1703))
(assert (x1384 x2805))
(assert (x1384 x1122))
(assert (x1327 x2782 256))
(assert (= x1877 (and x3315 x1894)))
(assert (x1327 (* x110 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 (* x1721 16)))
(assert (x2060 x3498))
(assert (= (x4195 (x230 64 x1843 x2996)) x2996))
(assert (x1384 x1075))
(assert (= (x3706 (x230 64 x163 x3622)) x163))
(assert (= (and (not x2162) x4043) x33))
(assert (= x3386 (or x2122 x2837)))
(assert (x3395 1))
(assert (x1384 x3780))
(assert (= (x2128 (x230 64 x3146 14)) (x230 64 x3146 14)))
(assert (x1384 x2694))
(assert (x3395 (- x1514 x2450)))
(assert (x1804 x2450 x463 x1028 x36))
(assert (x1384 x3426))
(assert (x1384 x2222))
(assert (> (x230 64 x610 14) 10000))
(assert (x3404 (* x2620 256)))
(assert (= (x3763 x1144 32) (x323 x1144 4294967296)))
(assert (x1384 x1072))
(assert (= (x250 (x230 64 x2445 14)) 64))
(assert (x2547 x4115 256))
(assert (= (and x2335 x1420) x289))
(assert (x2614 1000000))
(assert (= (x3933 x3590 16) (x3377 (* x3590 65536))))
(assert (x1384 x4253))
(assert (= 0 (x3706 (x230 64 0 x1280))))
(assert (x1384 x1174))
(assert (= (x3377 (* 256 x110)) (x3933 x110 8)))
(assert (= (x2128 (x230 64 x3047 x3141)) (x230 64 x3047 x3141)))
(assert (x2547 x804 340282366920938463463374607431768211456))
(assert (x3404 (* 2 x3361)))
(assert (= (and x2240 x2822) x2091))
(assert (x1725 x3751 (- x3866 x1028)))
(assert (x1000 x1479))
(assert (= (x250 (x230 64 0 x2539)) 64))
(assert (x1384 x2423))
(assert (x1384 x3772))
(assert (x1327 (* x571 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1895 (x4195 (x230 64 x2793 x1895))))
(assert (x3295 x3193 x600 x2450 x463))
(assert (x1384 x28))
(assert (x1384 x2678))
(assert (=> (<= x948 10000) (= (x2128 x948) 0)))
(assert (x2547 x2638 4294967296))
(assert (= (x323 x2181 2) (x3763 x2181 1)))
(assert (= (x323 x194 65536) (x3763 x194 16)))
(assert (= (or x3892 x902) x4216))
(assert (= 0 (x2128 1000099900000)))
(assert (= x3124 (x3706 (x230 64 x3124 x2956))))
(assert (= x1222 (x3706 (x230 64 x1222 14))))
(assert (x1384 x753))
(assert (= (x2128 1495468574) 0))
(assert (x1804 x3866 x3751 x463 x2450))
(assert (x1384 x918))
(assert (x3295 x463 x2450 x4157 x1514))
(assert (x1000 x947))
(assert (= x429 (=> (and (= (x2200 x578) x2567) (= x2351 (ite x4214 1 0)) (= (x230 64 x2351 14) x3418) (= x578 (+ 1 x3418)) (= x4214 (not x102)) (= x1216 (ite x4214 1 0)) (= (= x39 0) x681) (= (ite (not (= 0 x2567)) 1 0) x39)) (and (=> (and (not x681) (and (or (and (not x1727) (and (= x1613 x2154) (= (ite (not x102) (ite (not (< (x2009 16777215 x3065) x3081)) 1 0) (ite (not x102) 1 0)) x1613))) (and x1727 (= x447 x2154))) (and (= (ite x102 (ite (not (> (x2009 16777215 x3065) x3081)) 1 0) x1055) x447) (= (< 0 x447) x1727)))) x1140) (=> (and (= x39 x779) x681) x2296)))))
(assert (x1384 x3213))
(assert (x1327 x3633 18446744073709551616))
(assert (x3295 x2450 x463 x36 x1028))
(assert (= x291 (x4195 (x230 64 x3121 x291))))
(assert (= (=> (and (= x20 (> x2204 65535)) (or (and (and (= (+ x2843 16) x3062) (= (x3763 x2204 16) x1878)) x20) (and (not x20) (and (= x3062 x2843) (= x1878 x2204))))) x3025) x2684))
(assert (x2547 x4202 340282366920938463463374607431768211456))
(assert (x1384 x669))
(assert (= (x250 (x230 64 x2098 x3410)) 64))
(assert (=> (>= 10000 x2105) (= 0 (x2128 x2105))))
(assert (= (x230 64 x3081 x2594) (x2128 (x230 64 x3081 x2594))))
(assert (x3395 x3799))
(assert (= (x230 64 x590 x222) (x2128 (x230 64 x590 x222))))
(assert (x1384 x2870))
(assert (= (x4195 (x230 64 x1810 9)) 9))
(assert (= (=> (= (= x2244 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2019) (and (=> (and (and (or (and (and (= x3394 x4106) (= 0 x2870)) (not x1020)) (and x1020 (and (= x3394 (x3763 x4106 128)) (= x2870 128)))) (and (= (< 340282366920938463463374607431768211455 x4106) x1020) (= x3520 (x882 (+ 65280 x2244))) (= (x230 64 x3181 x3538) x1670) (= (x4192 x1670) x4106) (= (+ x1822 1) x3538) (= x3181 (ite (<= x2244 255) x3520 (x1161 65280 x2244))))) (not x2019)) x3585) (=> (and x2019 (and (= x3970 (x3933 x2400 1)) (= (= x3970 0) x2576) (= (x2200 x4112) x2400) (= x1325 255) (= 254 x2876))) (and (=> (and (= x2895 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2576) x360) (=> (and (and (= x3802 (< 340282366920938463463374607431768211455 x3970)) (or (and (not x3802) (and (= x4185 0) (= x3970 x1771))) (and (and (= 128 x4185) (= x1771 (x3763 x3970 128))) x3802))) (not x2576)) x2720))))) x969))
(assert (x1384 x3868))
(assert (= (and x3509 x374) x774))
(assert (x1000 x848))
(assert (= x2079 x2036))
(assert (x1384 x3361))
(assert (= x2986 (and x2785 (not x1098))))
(assert (x2614 100000000))
(assert (x1725 x753 (- x4099 x4157)))
(assert (x3404 x3925))
(assert (x1384 x2322))
(assert (x1000 x100))
(assert (x3295 x753 x4099 x1028 x36))
(assert (= (x4195 (x230 64 0 x1438)) x1438))
(assert (x1384 x2602))
(assert (= (x3933 1 x607) (x3377 (ite (< x607 256) (x521 2 x607) 0))))
(assert (x1384 x820))
(assert (=> (>= 10000 x761) (= 0 (x2128 x761))))
(assert (x3395 (x521 2 x607)))
(assert (x1384 x2220))
(assert (= (x3763 x947 128) (x323 x947 340282366920938463463374607431768211456)))
(assert (x81 x1440))
(assert (= (x250 (x230 64 x610 14)) 64))
(assert (x1384 x2541))
(assert (= (or x3276 x2659) x3405))
(assert (= x984 (or x2469 x2137)))
(assert (x3295 x753 x4099 x1514 x4157))
(assert (x1000 x3443))
(assert (x1384 x940))
(assert (= (and (not x2380) x1110) x1753))
(assert (= x1574 (and x373 x102)))
(assert (x3395 (- x4099 x2450)))
(assert (x2614 340282366920938463463374607431768211455))
(assert (x1384 x2319))
(assert (= x1749 (and x3844 x3456)))
(assert (x3395 x3995))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3212 14)))
(assert (= (x323 x2261 256) (x3763 x2261 8)))
(assert (< (x230 64 x948 x2640) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2771 (and x3615 (not x3886))))
(assert (= (or x191 x3177) x1214))
(assert (= x1829 (x4195 (x230 64 255 x1829))))
(assert (= x1294 (and x2937 x1635)))
(assert (= (x2128 (+ x580 2)) (x2128 x580)))
(assert (= (and x4142 x1001) x2055))
(assert (> (x230 64 x652 9) 10000))
(assert (= (x250 (x230 64 x1222 14)) 64))
(assert (x2547 x2780 4))
(assert (x1384 x648))
(assert (x1384 x704))
(assert (x1804 x4099 x753 x463 x2450))
(assert (x1384 x2026))
(assert (x1384 x3373))
(assert (= (or x1088 x2134) x1004))
(assert (x1384 x652))
(assert (x1384 x720))
(assert (x3295 x2450 x463 x1028 x36))
(assert (=> (<= x2490 10000) (= (x2128 x2490) 0)))
(assert (= (x4195 (x230 64 x4242 x3658)) x3658))
(assert (x1327 (* x1536 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1725 x3193 (- x600 x36)))
(assert (x1000 x3767))
(assert (x1327 (* x274 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (or (and (not x1894) (and (= x485 x3115) (= x2343 x2030))) (and x1894 (and (= (+ 4 x3115) x485) (= (x3763 x2030 4) x2343)))) (= x1894 (< 15 x2030))) x1354) x589))
(assert (=> (>= 10000 x1638) (= (x2128 x1638) 0)))
(assert (x1384 x709))
(assert (x1384 x1639))
(assert (< 10000 (x230 64 x2418 14)))
(assert (= x3955 (and x3509 (not x374))))
(assert (= x835 (and x2470 x1351)))
(assert (x3404 (* x174 256)))
(assert (x1725 x1028 (- x36 x753)))
(assert (x1384 x2260))
(assert (x1327 x3114 256))
(assert (x1384 x1416))
(assert (= (or x1730 x138) x487))
(assert (x1384 x468))
(assert (= x3356 (and (not x4244) x1853)))
(assert (x1384 x2340))
(assert (x1384 x1230))
(assert (= (x4195 (x230 64 0 x3571)) x3571))
(assert (= (x4195 (x230 64 x3081 x2594)) x2594))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3183 14)))
(assert (= (x3933 x1630 64) (x3377 (* x1630 18446744073709551616))))
(assert (x1384 x126))
(assert (= (x2128 (x230 64 x272 x2673)) (x230 64 x272 x2673)))
(assert (x3295 x3866 x3751 x463 x2450))
(assert (= x2867 (and x526 (not x3901))))
(assert (= x3490 (or x864 x2664)))
(assert (= (and x4199 x2097) x2480))
(assert (= (and x1399 x790) x2252))
(assert (x1384 x3975))
(assert (= (or x3437 x2943) x2385))
(assert (x3295 x36 x1028 x4157 x1514))
(assert (= x91 (and x2223 (not x628))))
(assert (=> (<= x3372 10000) (= 0 (x2128 x3372))))
(assert (= x184 (x4195 (x230 64 0 x184))))
(assert (< 10000 (x230 64 x2050 14)))
(assert (= (x2128 (+ 1 x4112)) (x2128 x4112)))
(assert (= x2167 (and x2271 x2807)))
(assert (x1327 x556 65536))
(assert (x1384 x1056))
(assert (= (and x2521 (not x420)) x3941))
(assert (x1000 x473))
(assert (= x1306 (and x431 x2759)))
(assert (x3404 x2244))
(assert (= (x2128 (+ x3092 1)) (x2128 x3092)))
(assert (x3395 (- x463 x4099)))
(assert (= x2890 (and x786 (not x2525))))
(assert (x2466 1 (x521 2 x470)))
(assert (< 10000 (x230 64 x2742 x242)))
(assert (= (and x3133 (not x329)) x575))
(assert (= (and (not x3461) x2644) x2837))
(assert (= x10 (x3706 (x230 64 x10 5))))
(assert (x1384 x896))
(assert (x1384 x2596))
(assert (x1000 x3779))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2155 x2923)))
(assert (x2547 x3779 65536))
(assert (x1000 100000000000000))
(assert (= (x230 64 x1485 x1280) (x2128 (x230 64 x1485 x1280))))
(assert (= (and (not x218) x3379) x1449))
(assert (= (x3933 x554 1) (x3377 (* x554 2))))
(assert (x1384 x3869))
(assert (x1384 x4223))
(assert (x3404 x308))
(assert (= 64 (x250 (x230 64 65535 x1951))))
(assert (x1384 x1843))
(assert (= (=> (and (or (and x971 (and (= x648 x438) (= x2247 x571))) (and (and (= x2247 x1081) (= x438 (+ 64 x648))) (not x971))) (and (= (= 0 x1081) x971) (= x1081 (x3933 x571 64)))) x1834) x1926))
(assert (= (x4195 (x230 64 x3881 x1786)) x1786))
(assert (x3395 (- x4099 x3866)))
(assert (=> (<= x820 10000) (= (x2128 x820) 0)))
(assert (= (and (not x82) x388) x698))
(assert (=> (>= 10000 x163) (= 0 (x2128 x163))))
(assert (= x205 (=> (and (or (and (not x3627) (and (= x3135 x172) (= x1705 x936))) (and (and (= (+ x936 2) x1705) (= x172 (x3763 x3135 2))) x3627)) (= x3627 (< 3 x3135))) x742)))
(assert (= (and x3123 x734) x3782))
(assert (= x513 (and x3474 x971)))
(assert (= 64 (x250 (x230 64 x3081 x1890))))
(assert (= (=> (and (= (= x745 0) x4028) (or (and (not x4028) (= x1085 1)) (and x4028 (and (= (x3344 x3101) x1074) (>= 1099511627775 x1074) (= x3101 (x230 64 0 x184)) (= x1085 (ite (= 0 x1074) 1 0)))))) x2333) x4089))
(assert (= (and x2362 x3650) x378))
(assert (= (or x2230 x1380) x1730))
(assert (= 64 (x250 (x230 64 0 x1316))))
(assert (= 0 (x2128 340282366920938463463374607431768211455)))
(assert (= (and x1447 x3627) x3271))
(assert (x1384 x2076))
(assert (= (and x369 x480) x3764))
(assert (= x4098 (and x985 x993)))
(assert (= (or x4075 x4050) x3379))
(assert (= (and (not x1649) x119) x2868))
(assert (=> (>= 10000 x2713) (= 0 (x2128 x2713))))
(assert (x1384 x3807))
(assert (x1327 x3570 340282366920938463463374607431768211456))
(assert (x2466 256 x4242))
(assert (= x2122 (and x2644 x3461)))
(assert (= (and x1795 x1633) x1277))
(assert (= (=> (and (= x611 x74) (= x2095 x7)) x1513) x2031))
(assert (x3404 (ite (> 256 x1258) (x521 2 x1258) 0)))
(assert (x1384 x3391))
(assert (= x2265 (=> (and (or (and (and (= x4005 x2948) (= x193 x2616)) (not x1399)) (and (and (= (x3763 x4005 16) x2948) (= (+ x193 16) x2616)) x1399)) (= (> x4005 65535) x1399)) x1032)))
(assert (x1384 x3590))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x3977)))
(assert (x2547 x2005 256))
(assert (x3395 x753))
(assert (x1384 x1744))
(assert (x3404 x3570))
(assert (= (x3763 x3345 64) (x323 x3345 18446744073709551616)))
(assert (< 10000 (x230 64 x590 x222)))
(assert (x1384 x3719))
(assert (not (x2614 (x230 64 x3368 9))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x80 9)))
(assert (= x3571 (x4195 (x230 64 x1843 x3571))))
(assert (= (and (not x2850) x2028) x3533))
(assert (= x2510 (=> (and (or (and (and (= x3729 x259) (= x2228 x2694)) (not x3915)) (and x3915 (and (= (+ x259 16) x3729) (= (x3763 x2694 16) x2228)))) (= x3915 (< 65535 x2694))) x1530)))
(assert (x3395 x2895))
(assert (= (x250 (x230 64 x3691 14)) 64))
(assert (x3395 (- x4157 x4099)))
(assert (= x3131 (or x4136 x647)))
(assert (= (x3706 (x230 64 x3047 x3141)) x3047))
(assert (x1384 x697))
(assert (= (x3377 (* 256 x3798)) (x3933 x3798 8)))
(assert (= x2148 (or x2777 x680)))
(assert (= (and x1590 (not x3046)) x2532))
(assert (= x1032 (=> (and (or (and (and (= x2948 x3094) (= x1353 x2616)) (not x475)) (and x475 (and (= x1353 (+ 8 x2616)) (= x3094 (x3763 x2948 8))))) (= x475 (< 255 x2948))) x3541)))
(assert (= x1843 (x3706 (x230 64 x1843 x3571))))
(assert (= x4159 (=> (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x272) x845) (and (=> (and (not x845) (and (or (and x3231 (and (= x1630 x1230) (= x3797 0))) (and (and (= x1090 x1630) (= x3797 128)) (not x3231))) (and (= (x230 64 x272 x2673) x997) (= (x4192 x997) x1230) (= (= 0 x1090) x3231) (= (+ 1 x3514) x2673) (= x1090 (x3933 x1230 128))))) x3929) (=> (and (and (or (and (and (= 1 x3449) (= x3738 0)) (not x3710)) (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3449) x3710)) (and (= x1726 0) (= x2897 (x3763 x3813 1)) (= (x2200 x276) x3813) (= x896 1) (= x3710 (= x2897 0)))) x845) x1506)))))
(assert (= (and x827 (not x3056)) x1827))
(assert (x1384 x3443))
(assert (= (x3377 (* x357 340282366920938463463374607431768211456)) (x3933 x357 128)))
(assert (x1000 x3135))
(assert (= (x2128 (+ x2731 1)) (x2128 x2731)))
(assert (x1384 x1402))
(assert (x349 x308))
(assert (x3404 (* x228 256)))
(assert (= (and (not x2253) x2569) x2776))
(assert (= (x2128 x195) (x2128 (+ 1 x195))))
(assert (x1384 x3646))
(assert (x1384 x3091))
(assert (= (x4195 (x230 64 x80 9)) 9))
(assert (x3395 (- x600 x463)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x761 x242)))
(assert (x1384 x4217))
(assert (= (x2128 (x230 64 0 x1316)) (x230 64 0 x1316)))
(assert (x1384 x2695))
(assert (x1384 x1823))
(assert (= (x3763 x4005 16) (x323 x4005 65536)))
(assert (= x4035 (and x2166 x1330)))
(assert (= (x2128 (x230 64 x1810 9)) (x230 64 x1810 9)))
(assert (= (or x3125 x950) x3833))
(assert (x2712 x547))
(assert (x1384 x4182))
(assert (= (and x1129 x2089) x4059))
(assert (x1204 x3781 x732))
(assert (= x1206 (and x3389 x631)))
(assert (x2614 3402823669209384634633746074317682100000000000000))
(assert (x2614 34028236692093846346337460743176821))
(assert (= (and x268 (not x1903)) x1012))
(assert (= x268 (or x1114 x2417)))
(assert (x1384 x2037))
(assert (x1384 x2185))
(assert (= (=> (and (or (and (and (= x2090 x3401) (= x1479 x3057)) (not x752)) (and x752 (and (= (x3763 x3057 64) x1479) (= (+ x2090 64) x3401)))) (= (> x3057 18446744073709551615) x752)) x2804) x2456))
(assert (= (x4195 (x230 64 x486 5)) 5))
(assert (= (or x3714 x213) x3657))
(assert (x3404 x684))
(assert (= x1013 (or x919 x1735 x4174 x1172)))
(assert (x1384 x1572))
(assert (x2466 100000 x766))
(assert (x2466 4294967296 x28))
(assert (x1384 x2877))
(assert (= (=> (and (or (and x1183 (and (= x4103 x4204) (= x3798 x263))) (and (and (= (+ 16 x4103) x4204) (= x3798 x518)) (not x1183))) (and (= (= 0 x518) x1183) (= x518 (x3933 x263 16)))) x1603) x2839))
(assert (= (or x2471 x3287) x680))
(assert (= (x250 (x230 64 x3372 x2647)) 64))
(assert (= (x2128 (x230 64 1 14)) (x230 64 1 14)))
(assert (=> (<= x2621 10000) (= (x2128 x2621) 0)))
(assert (= (=> (and (= x1900 (= 0 x1197)) (or (and (= x2405 0) x1900) (and (and (= (x230 64 x1690 x1280) x888) (= x3118 (x230 64 x1690 x1280)) (= x1304 (x230 64 x2190 x1280)) (= (x230 64 x2190 x1280) x3539) (= x4082 (x230 64 x2190 x1280)) (= (x230 64 x1485 x1280) x4154) (<= x1485 1099511627775) (= 1 x2405) (= x2834 (+ x3539 1)) (= (x1642 x888) x1485)) (not x1900)))) x1883) x1156))
(assert (= (or x2789 x3598) x6))
(assert (= (=> (and (or (and (not x3594) (and (= 0 x1843) (= x3567 0) (= x3724 0))) (and x3594 (and (<= x1365 1099511627775) (= x1402 x3567) (>= 1099511627775 x1402) (= x1365 (x3344 x1571)) (= (x230 64 0 x184) x1571) (= x1053 (x230 64 0 x184)) (= x1365 x1843) (= x1402 (x4041 x1053)) (= x3724 1)))) (= (> x1085 0) x3594)) x2788) x2333))
(assert (= x1547 (or x3640 x2226)))
(assert (= (x3706 (x230 64 x2914 14)) x2914))
(assert (= (x250 (x230 64 x867 x959)) 64))
(assert (x1327 x2357 256))
(assert (x2547 x2559 256))
(assert (x1384 x2728))
(assert (= (or x4067 x3883) x4008))
(assert (x1384 x228))
(assert (= x1108 (and x2727 (not x3078))))
(assert (= x3661 (=> (= (= x3114 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1335) (and (=> (and (and (= 255 x747) (= (= x2562 0) x780) (= x1147 (+ 1 x3985)) (= x2562 (x3933 x1812 1)) (= (x230 64 255 x1147) x3953) (= x1812 (x4238 x3953)) (= x2824 254)) x1335) (and (=> (and (= x556 115792089237316195423570985008687907853269984665640564039457584007913129639935) x780) x1045) (=> (and (and (or (and (and (= 128 x1910) (= (x3763 x2562 128) x3345)) x1031) (and (and (= 0 x1910) (= x2562 x3345)) (not x1031))) (= x1031 (< 340282366920938463463374607431768211455 x2562))) (not x780)) x1939))) (=> (and (not x1335) (and (= x2926 (x882 (+ x3114 16776960))) (= (ite (<= x3114 255) x2926 (x1161 16776960 x3114)) x3674))) x1097)))))
(assert (x1384 x2950))
(assert (= x3371 (or x1091 x793)))
(assert (= x1213 (or x1282 x3480)))
(assert (x1384 x1408))
(assert (= (x3763 x2638 32) (x323 x2638 4294967296)))
(assert (x1000 x3055))
(assert (x1384 x598))
(assert (= x3624 (=> (and (and (= (x3933 x4190 32) x381) (= (= 0 x381) x821)) (or (and (and (= x4190 x263) (= x4103 x3603)) x821) (and (and (= (+ x3603 32) x4103) (= x263 x381)) (not x821)))) x2839)))
(assert (x1384 x3259))
(assert (x3395 (- x4157 x36)))
(assert (= (x323 x1205 256) (x3763 x1205 8)))
(assert (= x2123 (and (not x3842) x1873)))
(assert (x1384 x2559))
(assert (= x3740 (=> (and (= x2781 x566) (= x114 x505) (= x102 x1010) (= x776 x3079) (= x1033 x537)) x1814)))
(assert (= (x250 (x230 64 x761 x242)) 64))
(assert (= (and x3474 (not x971)) x260))
(assert (x1384 x751))
(assert (x2614 100000))
(assert (= 14 (x4195 (x230 64 x2351 14))))
(assert (= 64 (x250 (x230 64 x4004 14))))
(assert (=> (>= 10000 x1698) (= 0 (x2128 x1698))))
(assert (x1327 (* x228 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2128 (x230 64 x2076 x3622)) (x230 64 x2076 x3622)))
(assert (x2547 x3813 2))
(assert (x1384 x1508))
(assert (= (or x2452 x708) x526))
(assert (= (x4195 (x230 64 65535 x2194)) x2194))
(assert (x1725 x36 (- x1028 x463)))
(assert (x1384 x3434))
(assert (x1384 x3797))
(assert (x1384 x1904))
(assert (x1327 (* x3776 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3274 (and x1321 x1071)))
(assert (= (x4195 (x230 64 x3930 x2566)) x2566))
(assert (x3404 (* 65536 x3393)))
(assert (x2547 x724 2))
(assert (x3295 x1514 x4157 x36 x1028))
(assert (x2466 256 x590))
(assert (x1384 x3864))
(assert (x1804 x753 x4099 x463 x2450))
(assert (x1725 x1028 (- x36 x3751)))
(assert (x1384 x2835))
(assert (= (x3706 (x230 64 x162 14)) x162))
(assert (x3395 (- x3866 x1514)))
(assert (= (=> (and (or (and (and (= x1194 x2517) (= x508 x644)) (not x1448)) (and (and (= (+ x1194 4) x2517) (= x508 (x3763 x644 4))) x1448)) (= (> x644 15) x1448)) x4088) x568))
(assert (x1384 x3483))
(assert (x2547 x983 4))
(assert (x81 x2990))
(assert (x1384 x4234))
(assert (x1682 x3230))
(assert (= x2691 (=> (and (or (and (and (= x1709 (x3763 x3864 4)) (= x180 (+ x359 4))) x4142) (and (not x4142) (and (= x1709 x3864) (= x359 x180)))) (= x4142 (< 15 x3864))) x4026)))
(assert (x1384 x3230))
(assert (= x2190 (x3706 (x230 64 x2190 x1657))))
(assert (x2466 256 x2793))
(assert (x1384 x1299))
(assert (x1327 x473 1000000000000000000000000))
(assert (x2547 x1771 18446744073709551616))
(assert (x1384 x114))
(assert (x3404 x2234))
(assert (x1384 x3736))
(assert (= x4077 (and x1923 (not x2475))))
(assert (x2466 18446744073709551616 x3880))
(assert (= x726 (or x3205 x1217)))
(assert (= (x3763 x3970 128) (x323 x3970 340282366920938463463374607431768211456)))
(assert (x1384 x792))
(assert (x1384 x577))
(assert (x1384 x2173))
(assert (x3395 1000000000000000000))
(assert (x2466 1 (x521 2 x1410)))
(assert (x3606 x37 1000000))
(assert (= x2895 (x3706 (x230 64 x2895 x2341))))
(assert (x1327 (* 340282366920938463463374607431768211456 x3757) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x3499))
(assert (x3295 x3751 x3866 x753 x4099))
(assert (x1384 x2571))
(assert (x1384 x3369))
(assert (= (x2128 785044283) 0))
(assert (=> (>= 10000 x1069) (= (x2128 x1069) 0)))
(assert (= x3984 (and x2193 (not x1982))))
(assert (= x2220 (x3706 (x230 64 x2220 x242))))
(assert (x3395 (- x4099 x36)))
(assert (x1384 x2741))
(assert (= x4148 (and x907 (not x1002))))
(assert (x3295 x3866 x3751 x4157 x1514))
(assert (=> (<= x3036 10000) (= 0 (x2128 x3036))))
(assert (x1384 x2116))
(assert (=> (<= x1209 10000) (= (x2128 x1209) 0)))
(assert (< 10000 (x230 64 0 x1280)))
(assert (x1384 x2103))
(assert (x1384 x505))
(assert (x1384 x3156))
(assert (> (x230 64 x3691 14) 10000))
(assert (x1384 x3232))
(assert (= (and x1854 x2210) x3387))
(assert (= (and x3416 (not x3011)) x886))
(assert (< 10000 (x230 64 x163 x3622)))
(assert (x1384 x3712))
(assert (= x1947 (and (not x3456) x3844)))
(assert (x1384 x2085))
(assert (x1000 x3976))
(assert (x1384 x2764))
(assert (= (=> (and (or (and (= x297 (ite x3409 1 0)) x3409) (and (and (= (x230 64 0 x1) x239) (<= x3770 1099511627775) (= x3770 (x4227 x239)) (= (ite (> x3770 0) 1 0) x297)) (not x3409))) (and (<= x3272 1099511627775) (= x2098 (x2009 16777215 x70)) (= x2085 0) (= (x230 64 x820 14) x3410) (= (x230 64 0 x1) x115) (= (x230 64 x2098 x3410) x1) (= x820 (ite x3140 1 0)) (= x3272 (x1324 x115)) (= x3409 (> x3272 0)))) x353) x2074))
(assert (x1384 x3143))
(assert (x1000 x2813))
(assert (x3295 x753 x4099 x36 x1028))
(assert (= x2994 (x4195 (x230 64 x2477 x2994))))
(assert (not (x2614 (x230 64 x1690 x1280))))
(assert (x1384 x2845))
(assert (= (x4195 (x230 64 x610 14)) 14))
(assert (x1384 x2082))
(assert (= (x3763 x3655 16) (x323 x3655 65536)))
(assert (=> (>= 10000 x2220) (= (x2128 x2220) 0)))
(assert (= x1896 (=> (and (or (and (and (= x3878 x2603) (= x1049 x601)) (not x2132)) (and (and (= (x3763 x1049 4) x601) (= (+ 4 x3878) x2603)) x2132)) (= (> x1049 15) x2132)) x996)))
(assert (> (x230 64 x4242 x3658) 10000))
(assert (not (x2614 (x230 64 x3881 x1786))))
(assert (= (=> (and (or (and (and (= (+ 8 x300) x2790) (= x3980 (x3763 x2037 8))) x890) (and (and (= x2790 x300) (= x2037 x3980)) (not x890))) (= (< 255 x2037) x890)) x1338) x4053))
(assert (= 6 (x4195 (x230 64 x2678 6))))
(assert (x3404 x2357))
(assert (x3395 x1230))
(assert (x1000 x1709))
(assert (x1384 x3450))
(assert (x2547 x88 16))
(assert (x1384 x18))
(assert (= x3081 (x3706 (x230 64 x3081 x2594))))
(assert (= (x2128 (x230 64 x1743 14)) (x230 64 x1743 14)))
(assert (x1384 x3972))
(assert (= (x3763 x840 1) (x323 x840 2)))
(assert (= (or x3918 x226) x2832))
(assert (< (x230 64 x272 x2673) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3449 (x3706 (x230 64 x3449 x3651))))
(assert (x1804 x1514 x4157 x463 x2450))
(assert (x2466 4 x1160))
(assert (x1725 x2450 (- x463 x3751)))
(assert (x1725 x463 (- x2450 x4099)))
(assert (= (x4195 (x230 64 x3124 x2956)) x2956))
(assert (x3404 340282366920938463463374607431768211456))
(assert (= x1722 (x3706 (x230 64 x1722 9))))
(assert (< (x230 64 x3670 x2096) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1725 x36 (- x1028 x1514)))
(assert (x3295 x3751 x3866 x4157 x1514))
(assert (x1000 340282366920938463463374607431768211456))
(assert (= x1813 (x4195 (x230 64 0 x1813))))
(assert (x3404 x617))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x796 5)))
(assert (= (or x450 x2890) x738))
(assert (< (x230 64 x3081 x2594) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 (ite (< x1157 256) (x521 2 x1157) 0)))
(assert (= (and x1586 (not x4016)) x3761))
(assert (x1384 x1165))
(assert (x3395 (- x36 x4099)))
(assert (= (=> (and (and (= (= 0 x4121) x2595) (= (x3933 x728 8) x4121)) (or (and (and (= (+ 8 x386) x557) (= x3374 x4121)) (not x2595)) (and x2595 (and (= x386 x557) (= x728 x3374))))) x2840) x1142))
(assert (x1384 x523))
(assert (= x302 (and x1421 x3198)))
(assert (not (x2614 (x230 64 x1656 9))))
(assert (x1384 x1405))
(assert (= (=> (and (= x696 (> x2064 65535)) (or (and (not x696) (and (= x2559 x2064) (= x731 x2988))) (and (and (= x2559 (x3763 x2064 16)) (= (+ 16 x2988) x731)) x696))) x2264) x2075))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x761 x2625)))
(assert (= (and x4179 (not x2021)) x1623))
(assert (= x3468 (and x3515 x1884)))
(assert (x1384 x2782))
(assert (x1000 x2030))
(assert (x3395 x4157))
(assert (= x2214 (and (not x214) x667)))
(assert (x1384 x684))
(assert (not (x2614 (x230 64 x3124 x2956))))
(assert (x2547 x2920 4))
(assert (< (x230 64 0 x1280) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x3569) x200) x3589))
(assert (= (x2128 (x230 64 x3805 9)) (x230 64 x3805 9)))
(assert (x3395 (- x1514 x753)))
(assert (> (x230 64 x820 14) 10000))
(assert (= (x3763 x1707 64) (x323 x1707 18446744073709551616)))
(assert (x1384 x344))
(assert (= (and x3457 x2382) x1167))
(assert (x1384 x3066))
(assert (x3395 x263))
(assert (= (x2128 100000000000) 0))
(assert (x1000 x1008))
(assert (= (=> (and (and (= x156 (= 0 x139)) (= (x3933 x1737 64) x139)) (or (and x156 (and (= x28 x1737) (= x2185 x3319))) (and (and (= (+ x2185 64) x3319) (= x139 x28)) (not x156)))) x3453) x3300))
(assert (x1725 x463 (- x2450 x3193)))
(assert (x1725 x463 (- x2450 x3751)))
(assert (x3395 (- x4157 x2450)))
(assert (= x2622 (and x1600 x156)))
(assert (x1384 x330))
(assert (= (and x2587 x2397) x4191))
(assert (x2466 1 (x521 2 x4065)))
(assert (= (x4195 (x230 64 x3790 9)) 9))
(assert (x1384 x1505))
(assert (x1804 x4157 x1514 x753 x4099))
(assert (not (x2614 (x230 64 x2105 x2419))))
(assert (x1204 x1733 x1394))
(assert (x1384 x237))
(assert (x3117 x3230))
(assert (x1384 x1136))
(assert (x3404 (* x3546 2)))
(assert (x1384 x193))
(assert (x1000 x3846))
(assert (= x238 (and x3455 x3956)))
(assert (x1384 x2263))
(assert (x1000 x2820))
(assert (= x1565 (and (not x4093) x3247)))
(assert (x3295 x4099 x753 x3751 x3866))
(assert (< (x230 64 x3047 x3141) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1258))
(assert (= (x250 (x230 64 x2793 x1895)) 64))
(assert (= (x2128 (x230 64 x1843 x923)) (x230 64 x1843 x923)))
(assert (=> (>= 10000 x3072) (= (x2128 x3072) 0)))
(assert (x295 x2384))
(assert (x1725 x3866 (- x3751 x3193)))
(assert (= (x3763 x3570 192) (x323 x3570 6277101735386680763835789423207666416102355444464034512896)))
(assert (x1384 x3212))
(assert (x2466 1000000 x3831))
(assert (= (x3377 (ite (> 256 x1410) (x521 2 x1410) 0)) (x3933 1 x1410)))
(assert (x1384 x897))
(assert (x3395 x3361))
(assert (= 14 (x4195 (x230 64 x3183 14))))
(assert (x3395 x2442))
(assert (x1000 x37))
(assert (= (x3933 x1737 64) (x3377 (* x1737 18446744073709551616))))
(assert (not (x2614 (x230 64 x2076 x3622))))
(assert (= (x3706 (x230 64 0 x1)) 0))
(assert (x3404 (* 256 x3372)))
(assert (x1384 x802))
(assert (= (x3763 x2966 8) (x323 x2966 256)))
(assert (= x3486 (=> (and (= x2978 (> x3887 18446744073709551615)) (or (and x2978 (and (= (+ 64 x3369) x1585) (= x241 (x3763 x3887 64)))) (and (and (= x241 x3887) (= x1585 x3369)) (not x2978)))) x361)))
(assert (= (x230 64 x2351 14) (x2128 (x230 64 x2351 14))))
(assert (= x3652 (=> (and (= (- 255 (ite (= 0 (x3933 x3361 1)) x2743 (+ x2743 1))) x409) (= (+ (x3933 x590 8) x409) x1507)) x627)))
(assert (= (x2128 x2092) (x2128 (+ x2092 2))))
(assert (< 10000 (x230 64 x3368 9)))
(assert (x1725 x600 (- x3193 x3751)))
(assert (x1384 x3556))
(assert (x3395 x110))
(assert (= x3622 (x4195 (x230 64 x2076 x3622))))
(assert (= (x323 x3465 340282366920938463463374607431768211456) (x3763 x3465 128)))
(assert (= (and (not x254) x2819) x3871))
(assert (= (=> (= x26 (= x4242 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and x26 (= x3674 16777215)) x1097) (=> (and (not x26) (and (or (and (and (= (x3763 x1389 128) x543) (= 128 x3676)) x3078) (and (and (= x1389 x543) (= x3676 0)) (not x3078))) (and (= x3078 (< 340282366920938463463374607431768211455 x1389)) (= (x230 64 x4242 x3658) x275) (= x3658 (+ 1 x3985)) (= (x4238 x275) x1389)))) x2682))) x4102))
(assert (< (x230 64 x1843 x923) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x3294 x4240) x1661))
(assert (x2060 x2805))
(assert (x1384 x3679))
(assert (= (=> (and (and (= x284 (+ 1 x4223)) (= x182 (* 100000000000000 x1073)) (= (* x3081 340282366920938463463374607431768211456) x208) (or (= 6277101735386680763835789423207666416102355444464034512896 x2179) (= x2179 0)) (= x182 x573) (<= x4223 1099511627774) (= x2190 (+ 1 x4223)) (= (* 6277101735386680763835789423207666416102355444464034512896 x1055) x2179) (= (+ x284 x208 x2179) x3570)) (or (and (and (= x1487 (+ x3499 (ite (> (x2350 x4069 1000000000000000000000000) 0) 1 0))) (= 1000000 x3059) (<= x3790 281474976710655) (= x2596 (x1300 x544)) (= (x2817 x3751 x3866) x1734) (= x3866 (+ x3088 100000000)) (= x2505 0) (= x1315 1) (= x758 0) (>= x1734 10000000000000000000000) (not (> x1487 x2596)) (= 0 x3825) (= x4069 x688) (= (* x3081 100000) x3088) (= x1826 1) (= x3790 (x45 x702)) (= x688 (* 1000000 x1734)) (= x3530 1000000000000000000000000) (>= x2596 10000) (= 0 x96) (>= 340282366920938463463374607431768211455 x2596) (>= x1487 10000) (= x3751 x573) (= x702 (x230 64 x1648 5)) (>= 340282366920938463463374607431768211455 x1487) (= x3373 0) (= x3499 (x323 x4069 1000000000000000000000000)) (>= 340282366920938463463374607431768211455999999999999999999 x1734) (= x544 (x230 64 x3790 9))) x102) (and (not x102) (and (= (x1515 x1696) x1062) (>= 281474976710655 x1656) (<= x573 340282366920938463463374607431768211455) (= x1696 (x230 64 x1656 9)) (>= 340282366920938463463374607431768211455 x1062) (<= 100000000000000 x573) (<= 100000000000000 x1062) (= x3672 (x230 64 x1648 5)) (= x1656 (x45 x3672)) (not (< x1062 x573)))))) x429) x1973))
(assert (< 10000 (x230 64 x1785 x282)))
(assert (= (x2128 (x230 64 x4020 x3622)) (x230 64 x4020 x3622)))
(assert (not (x2614 (x230 64 x2018 x593))))
(assert (= (x2128 (x230 64 x2793 x1895)) (x230 64 x2793 x1895)))
(assert (x2614 281474976710655))
(assert (x1384 x2653))
(assert (x3395 x3393))
(assert (x1384 x3593))
(assert (not (x2614 (x230 64 x948 x2640))))
(assert (= (and x4244 x1853) x4100))
(assert (x1384 x2324))
(assert (x3395 (- x1028 x2450)))
(assert (x1384 x3924))
(assert (= (x2128 (x230 64 x2190 x1657)) (x230 64 x2190 x1657)))
(assert (x3395 (x521 2 x1410)))
(assert (x3606 x2234 1000000000000000000000000))
(assert (x3404 (* x2400 2)))
(assert (not (x2614 (x230 64 255 x1147))))
(assert (x1384 x3026))
(assert (= 0 (x2128 9999999)))
(assert (= (x323 x2440 16) (x3763 x2440 4)))
(assert (x3295 x36 x1028 x1514 x4157))
(assert (=> (>= 10000 x1155) (= 0 (x2128 x1155))))
(assert (x1682 x3364))
(assert (x1384 x1576))
(assert (x1384 x672))
(assert (x1384 x2198))
(assert (x3395 (- x1028 x3866)))
(assert (= (or x941 x66) x1504))
(assert (= (x3706 (x230 64 x2556 x3182)) x2556))
(assert (x3395 x3869))
(assert (x1384 x590))
(assert (x3404 256))
(assert (= (x3377 (* 4 x3398)) (x3933 x3398 2)))
(assert (= x1069 (x3706 (x230 64 x1069 14))))
(assert (not (x2614 (x230 64 x610 14))))
(assert (x2060 x1009))
(assert (x1000 4))
(assert (= x393 (or x1593 x3791)))
(assert (x1384 x1821))
(assert (x1384 x2343))
(assert (< (x230 64 255 x1829) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2547 x2064 65536))
(assert (x3295 x4099 x753 x463 x2450))
(assert (> (x230 64 x174 x1171) 10000))
(assert (= x904 (and (not x2175) x40)))
(assert (= (and x907 x1002) x2885))
(assert (x3295 x4099 x753 x3193 x600))
(assert (not (x2614 (x230 64 x421 14))))
(assert (x1327 (* x3403 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1000 x4202))
(assert (x1384 x4099))
(assert (x1384 x1112))
(assert (= x8 (and x1546 x102)))
(assert (< (x230 64 x3191 x3069) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2614 785044283))
(assert (x2466 256 x728))
(assert (= x402 (and (not x3303) x606)))
(assert (x1384 x2239))
(assert (x1384 x3047))
(assert (= (and x304 x3806) x3285))
(assert (x3395 x1514))
(assert (= (and x3032 (not x2526)) x3205))
(assert (= x2906 (and (not x681) x181)))
(assert (x1327 x4127 340282366920938463463374607431768211456))
(assert (x1384 x2182))
(assert (x1384 x1979))
(assert (x1725 x3751 (- x3866 x2450)))
(assert (x3404 (* 18446744073709551616 x2859)))
(assert (x1384 x2926))
(assert (= (x2128 (x230 64 x3183 14)) (x230 64 x3183 14)))
(assert (x3404 (* x3403 340282366920938463463374607431768211456)))
(assert (x1384 x899))
(assert (x1725 x600 (- x3193 x463)))
(assert (=> (<= x1485 10000) (= 0 (x2128 x1485))))
(assert (> (x230 64 x3124 x2956) 10000))
(assert (x1384 x3634))
(assert (x1384 x509))
(assert (= (and x1758 (not x3093)) x3233))
(assert (= (=> (and (or (and (and (= x1878 x3556) (= x3062 x2880)) (not x137)) (and x137 (and (= (+ 8 x3062) x2880) (= x3556 (x3763 x1878 8))))) (= x137 (> x1878 255))) x2013) x3025))
(assert (= (x3377 (* 340282366920938463463374607431768211456 x3403)) (x3933 x3403 128)))
(assert (= x3293 (and x3085 x292)))
(assert (= (x4195 (x230 64 x761 x2625)) x2625))
(assert (< (x230 64 x1743 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x29))
(assert (= (or x2281 x1422) x2685))
(assert (= x1984 (=> (and (= x1891 (> x802 255)) (or (and (and (= x2440 (x3763 x802 8)) (= (+ x775 8) x127)) x1891) (and (and (= x775 x127) (= x802 x2440)) (not x1891)))) x325)))
(assert (x3404 (* x2949 4294967296)))
(assert (x1384 x2553))
(assert (x2466 65536 x4187))
(assert (x3395 x1450))
(assert (x2547 x3865 4294967296))
(assert (x1384 x3166))
(assert (x2466 100000000000000 x1073))
(assert (< 10000 (x230 64 x3081 x1890)))
(assert (=> (>= 10000 x867) (= 0 (x2128 x867))))
(assert (x1384 x3670))
(assert (= x213 (and x3279 x4189)))
(assert (= (x3763 x3809 128) (x323 x3809 340282366920938463463374607431768211456)))
(assert (x3404 x2040))
(assert (x1725 x600 (- x3193 x4099)))
(assert (= (x3763 x1049 4) (x323 x1049 16)))
(assert (x1384 x2636))
(assert (x3295 x3866 x3751 x1514 x4157))
(assert (= x61 (and x3739 x3330)))
(assert (x3404 (* 4 x581)))
(assert (= (or x1441 x4160) x1199))
(assert (x1384 x573))
(assert (x1327 (* 256 x3670) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 (* 4 x274)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x4177 14)))
(assert (= (=> (and (and (= x1050 (x3933 x28 32)) (= (= x1050 0) x1742)) (or (and x1742 (and (= x2063 x28) (= x1766 x3319))) (and (not x1742) (and (= x2063 x1050) (= (+ x3319 32) x1766))))) x2012) x3453))
(assert (x1384 x949))
(assert (x2466 4 x3398))
(assert (= x2639 (and x4008 x77)))
(assert (x2614 340282366920938463463374607431768211455999999999999999999))
(assert (x3395 (- x3866 x600)))
(assert (x1384 x2790))
(assert (x3404 (* x3015 256)))
(assert (= (x4195 (x230 64 0 x242)) x242))
(assert (= x382 (or x2802 x3071)))
(assert (= (x2128 x3119) (x2128 (+ 1 x3119))))
(assert (x1000 x874))
(assert (x1000 x3864))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x10 5)))
(assert (= x1038 (=> (= x1773 (ite (= x1471 0) 1 0)) x3168)))
(assert (= x3625 x3096))
(assert (x1384 x2024))
(assert (x3395 x2048))
(assert (x2466 4294967296 x4190))
(assert (= (and x2785 x1098) x423))
(assert (x1384 x2858))
(assert (x3395 x1445))
(assert (< (x230 64 x2076 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x779))
(assert (x3295 x4099 x753 x1028 x36))
(assert (= (and x2000 x3581) x2800))
(assert (x2466 1000000 x2515))
(assert (= x1011 (and x3335 (not x1388))))
(assert (x1384 x3755))
(assert (= (=> (= x2335 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2477)) (and (=> (and (not x2335) (and (and (= x3852 (> x947 340282366920938463463374607431768211455)) (= x615 (x230 64 x2477 x2994)) (= (x1339 x615) x947) (= x2994 (+ x4251 1))) (or (and x3852 (and (= x1017 128) (= x1405 (x3763 x947 128)))) (and (not x3852) (and (= x1405 x947) (= 0 x1017)))))) x800) (=> (and (= 16777215 x327) x2335) x3189))) x243))
(assert (= (x3763 x1433 8) (x323 x1433 256)))
(assert (= (x230 64 x2189 x1961) (x2128 (x230 64 x2189 x1961))))
(assert (= x579 (and x2979 x2976)))
(assert (= (x4195 (x230 64 x1209 x1454)) x1454))
(assert (x1327 (* x3105 4294967296) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2614 (x230 64 x1843 x3571))))
(assert (= (or x2718 x61) x3961))
(assert (= x3053 (and x1004 (not x1336))))
(assert (x1384 x2451))
(assert (=> (<= x1690 10000) (= 0 (x2128 x1690))))
(assert (x3395 x1812))
(assert (= (and (not x2129) x3833) x1368))
(assert (x1804 x36 x1028 x1514 x4157))
(assert (x1725 x3751 x3866))
(assert (= x606 (or x823 x2150)))
(assert (= x642 (and x4033 (not x1914))))
(assert (x1000 x1771))
(assert (=> (>= 10000 x3081) (= 0 (x2128 x3081))))
(assert (x1384 x1251))
(assert (x1384 x2428))
(assert (= (x250 (x230 64 x3524 14)) 64))
(assert (= (and (not x1997) x2977) x3452))
(assert (> (x230 64 x2026 x3622) 10000))
(assert (= (x250 (x230 64 65535 x2194)) 64))
(assert (=> (<= x106 10000) (= (x2128 x106) 0)))
(assert (= (=> (and (or (and (and (= x3776 x1721) (= x2049 x2748)) x2850) (and (not x2850) (and (= (+ 4 x2748) x2049) (= x3776 x3066)))) (and (= x2850 (= x3066 0)) (= (x3933 x1721 4) x3066))) x3648) x2991))
(assert (x3395 x728))
(assert (x2060 x2858))
(assert (x81 x2032))
(assert (x1384 x3757))
(assert (= x138 (and x181 x681)))
(assert (= (x323 x1009 256) (x3763 x1009 8)))
(assert (x1384 x656))
(assert (= x1698 (x3706 (x230 64 x1698 9))))
(assert (x1384 x1187))
(assert (not (x2614 (x230 64 x3524 14))))
(assert (= x591 (=> (and (= x3012 x3065) (= x1023 (x2009 16777215 x3364)) (= x3012 (ite (= x1023 16777215) 0 x3364))) x1973)))
(assert (= x1326 (and x3010 (not x1917))))
(assert (= x1207 (or x3601 x65)))
(assert (x1384 x1715))
(assert (x1384 x722))
(assert (x1725 x1028 (- x36 x4157)))
(assert (= (and x2114 x1349) x98))
(assert (= (x250 (x230 64 0 x184)) 64))
(assert (x3295 x4099 x753 x600 x3193))
(assert (x3395 (- x4099 x600)))
(assert (= (and (not x471) x487) x1763))
(assert (x1327 (* 4294967296 x2949) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3417 (or x11 x1882)))
(assert (x1384 x89))
(assert (= (x323 x2944 340282366920938463463374607431768211456) (x3763 x2944 128)))
(assert (x1384 x3919))
(assert (= (or x131 x1214) x3287))
(assert (=> (<= x796 10000) (= (x2128 x796) 0)))
(assert (x1384 x3676))
(assert (x1204 x1040 x245))
(assert (= (and x2197 (not x1169)) x4076))
(assert (not (x2614 (x230 64 0 x1993))))
(assert (= x2962 (or x33 x605)))
(assert (x1384 x2243))
(assert (x2466 2 x1445))
(assert (= x2309 (and x1609 x3248)))
(assert (= 64 (x250 (x230 64 x2750 14))))
(assert (not (x2614 (x230 64 x3047 x3141))))
(assert (x1384 x3037))
(assert (= x2184 (and x1149 x1655)))
(assert (= 64 (x250 (x230 64 x2653 x2199))))
(assert (= (x323 x1008 4294967296) (x3763 x1008 32)))
(assert (= (x3933 x3374 4) (x3377 (* x3374 16))))
(assert (x3404 (* x54 18446744073709551616)))
(assert (x1384 x4127))
(assert (= (and x393 x3409) x3826))
(assert (x1725 x36 (- x1028 x3751)))
(assert (= x4026 (=> (and (= (< 3 x1709) x1652) (or (and (and (= x180 x124) (= x2575 x1709)) (not x1652)) (and (and (= x124 (+ 2 x180)) (= (x3763 x1709 2) x2575)) x1652))) x4203)))
(assert (= (and x2662 x3083) x2953))
(assert (= x1563 (=> (and (and (= (x3933 x1767 8) x3855) (= (= x3855 0) x649)) (or (and x649 (and (= x2748 x3565) (= x1767 x1721))) (and (not x649) (and (= x3855 x1721) (= x2748 (+ x3565 8)))))) x2991)))
(assert (x3295 x4157 x1514 x600 x3193))
(assert (x1384 x2508))
(assert (x1384 x1315))
(assert (= x799 (=> (and (= x3666 (> x3952 0)) (or (and x3666 (and (= (ite x3140 1 0) x2050) (= (ite (not (= x3919 0)) 1 0) x149) (= x3919 (x2464 x2336)) (= x1830 (x230 64 x2050 14)) (= x833 x149) (= (+ x1830 1) x2336))) (and (= (ite x3666 1 0) x833) (not x3666)))) x2853)))
(assert (x3606 x573 100000000000000))
(assert (= x226 (and (not x500) x3708)))
(assert (x1384 x174))
(assert (> (x230 64 0 x242) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 65535 x4249)))
(assert (x3295 x4157 x1514 x463 x2450))
(assert (x3404 (ite (> 256 x1639) (x521 2 x1639) 0)))
(assert (= x3907 (=> (and (or (and (and (= (x3763 x1980 128) x2663) (= x1408 128)) x2271) (and (and (= x1980 x2663) (= 0 x1408)) (not x2271))) (and (= (x230 64 x2620 x596) x419) (= x2271 (> x1980 340282366920938463463374607431768211455)) (= x2620 (+ x965 (x3933 x4242 8))) (= (x3280 x419) x1980) (= x965 (ite (> x3003 1) (+ 1 x4039) x4039)) (= (+ 1 x3658) x596))) x3879)))
(assert (= (x3706 (x230 64 x3972 5)) x3972))
(assert (=> (<= x1009 10000) (= 0 (x2128 x1009))))
(assert (x1384 x3655))
(assert (> (x230 64 x80 9) 10000))
(assert (x1384 x70))
(assert (= (and (not x2806) x3843) x2134))
(assert (x1384 x1273))
(assert (= (x3763 x3623 32) (x323 x3623 4294967296)))
(assert (x1384 x2517))
(assert (x1725 x2450 (- x463 x3193)))
(assert (x3395 (x521 2 x614)))
(assert (=> (<= x1843 10000) (= (x2128 x1843) 0)))
(assert (x3295 x3866 x3751 x1028 x36))
(assert (= (x3763 x1771 64) (x323 x1771 18446744073709551616)))
(assert (= (x323 x1780 4294967296) (x3763 x1780 32)))
(assert (x1000 x1165))
(assert (= (and x3218 x3784) x427))
(assert (x1384 x1440))
(assert (= x346 (=> (and (or (and (and (= x2423 x2187) (= x824 128)) (not x2231)) (and x2231 (and (= x2187 x4166) (= 0 x824)))) (and (= x2923 (+ 1 x2647)) (= x166 (x230 64 x2155 x2923)) (= (- 255 (ite (= (x3933 x2260 1) 0) x1443 (+ 1 x1443))) x2761) (= x2423 (x3933 x4166 128)) (= (x3280 x166) x4166) (= x2155 (+ x2761 (x3933 x3372 8))) (= (= x2423 0) x2231))) x2083)))
(assert (= (or x3356 x4100) x3214))
(assert (x81 x1573))
(assert (= (x230 64 x106 14) (x2128 (x230 64 x106 14))))
(assert (x1384 x3997))
(assert (x3395 (- x2450 x600)))
(assert (x1384 x3528))
(assert (x1384 x1567))
(assert (= (or (and (not x3769) x1078) x1249) x3110))
(assert (= x1779 (and x2331 x2623)))
(assert (= (x3933 x3105 32) (x3377 (* 4294967296 x3105))))
(assert (x1000 x3568))
(assert (= x3643 (or x302 x871)))
(assert (x2547 x3094 16))
(assert (x1384 x2649))
(assert (x1384 x4151))
(assert (x1384 x3210))
(assert (x1384 x365))
(assert (x1384 x1897))
(assert (= (and x665 x2494) x1842))
(assert (< 10000 (x230 64 x517 x1657)))
(assert (x1384 x1250))
(assert (= x2448 (=> (and (and (= (x230 64 x2048 x86) x3888) (= x86 (+ x2341 1)) (= (x4192 x3888) x3443) (= (< 340282366920938463463374607431768211455 x3443) x1169) (= x3617 (ite (< 1 x1350) (+ 1 x75) x75)) (= x2048 (+ x3617 (x3933 x2895 8)))) (or (and (not x1169) (and (= x3443 x3100) (= x4165 0))) (and (and (= (x3763 x3443 128) x3100) (= 128 x4165)) x1169))) x3626)))
(assert (= x857 (and (not x3389) x631)))
(assert (x2712 x3743))
(assert (x3395 2))
(assert (x2060 x684))
(assert (x1384 x1596))
(assert (= x3222 (and x3405 x2349)))
(assert (x3404 x2858))
(assert (< (x230 64 x2018 x593) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1725 x1028 (- x36 x3193)))
(assert (x3395 x36))
(assert (x1384 x4190))
(assert (= (x2128 (+ 1 x870)) (x2128 x870)))
(assert (= x2558 (and x1787 x890)))
(assert (= x281 (and x1312 x53)))
(assert (x1384 x2490))
(assert (= 0 (x3706 (x230 64 0 x3571))))
(assert (x2466 18446744073709551616 x1450))
(assert (= (x3377 (* x1230 340282366920938463463374607431768211456)) (x3933 x1230 128)))
(assert (= (x2128 1000000000000000000) 0))
(assert (= (x323 x1878 256) (x3763 x1878 8)))
(assert (= (x2128 (+ 1 x253)) (x2128 x253)))
(assert (= (or x484 x760) x1052))
(assert (= x1745 (or x2214 x3507)))
(assert (x1327 (* x1445 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 x3225))
(assert (= x760 (and x1272 x4015)))
(assert (x1725 x753 (- x4099 x1028)))
(assert (x1384 x2317))
(assert (not (x2614 (x230 64 x761 x630))))
(assert (x1384 x1386))
(assert (x3606 x3375 1000000))
(assert (= x2665 (or x2055 x1512)))
(assert (= x1172 (or x3413 x4035)))
(assert (> (x230 64 x1485 x1280) 10000))
(assert (x1384 x3828))
(assert (= x426 (and x2847 x1808)))
(assert (x1384 x1862))
(assert (x3404 (* 256 x3995)))
(assert (x1327 (* x1348 65536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2144))
(assert (x3606 x3167 1000000000000000000000000))
(assert (= x3834 (and x1007 (not x2978))))
(assert (= (=> (and (= x1808 (< 4294967295 x1107)) (or (and x1808 (and (= x2865 (x3763 x1107 32)) (= (+ 32 x3091) x4110))) (and (and (= x1107 x2865) (= x4110 x3091)) (not x1808)))) x1866) x3856))
(assert (= x2938 (=> (= x1083 (ite (= 0 x509) 1 0)) x3338)))
(assert (= x2264 (=> (and (or (and (not x1039) (and (= x1194 x731) (= x644 x2559))) (and x1039 (and (= x644 (x3763 x2559 8)) (= x1194 (+ 8 x731))))) (= (< 255 x2559) x1039)) x568)))
(assert (x2547 x4071 4))
(assert (= (x3377 (* x2102 340282366920938463463374607431768211456)) (x3933 x2102 128)))
(assert (= (and x2665 x1652) x4152))
(assert (= (and x3318 (not x1183)) x252))
(assert (x1384 x3684))
(assert (x1327 x1009 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1224 5)))
(assert (not (x2614 (x230 64 0 x3622))))
(assert (x1384 x106))
(assert (= (x3706 (x230 64 x2793 x1895)) x2793))
(assert (x1384 x2308))
(assert (x2466 18446744073709551616 x2859))
(assert (= (and x41 x97) x2390))
(assert (= (x3377 (ite (> 256 x2646) (x521 2 x2646) 0)) (x3933 1 x2646)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1675 9)))
(assert (x1384 x1480))
(assert (x3395 (- x4157 x3751)))
(assert (x81 x1974))
(assert (x2466 65536 x1348))
(assert (x1384 x2450))
(assert (x1725 x3751 (- x3866 x4157)))
(assert (x1384 x616))
(assert (x1384 x3038))
(assert (= x605 (and x4043 x2162)))
(assert (x3395 x457))
(assert (x2060 x1308))
(assert (x1384 x1216))
(assert (x3395 (- x36 x2450)))
(assert (=> (<= x2678 10000) (= 0 (x2128 x2678))))
(assert (x1725 x4157 (- x1514 x3866)))
(assert (= 65535 (x3706 (x230 64 65535 x4249))))
(assert (x1384 x1209))
(assert (= (and (not x1272) x4015) x484))
(assert (x3295 x2450 x463 x600 x3193))
(assert (x1384 x186))
(assert (x1804 x4157 x1514 x3751 x3866))
(assert (= (or x1019 x3383) x1427))
(assert (x1327 (* x2187 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1163 (not x1944)) x2299))
(assert (= (and x2380 x1110) x371))
(assert (= (and (not x2136) x2201) x2211))
(assert (= (x230 64 0 x184) (x2128 (x230 64 0 x184))))
(assert (= (x250 (x230 64 x199 x1791)) 64))
(assert (= (x2128 (x230 64 x1698 9)) (x230 64 x1698 9)))
(assert (= x2433 (x3706 (x230 64 x2433 5))))
(assert (=> (<= x2820 10000) (= 0 (x2128 x2820))))
(assert (x1384 x4011))
(assert (x1384 x486))
(assert (x1384 x2579))
(assert (= (x2128 (+ 1 x972)) (x2128 x972)))
(assert (x1000 x2234))
(assert (= x3622 (x4195 (x230 64 x961 x3622))))
(assert (=> (<= x1464 10000) (= (x2128 x1464) 0)))
(assert (x3404 (ite (< x3251 256) (x521 2 x3251) 0)))
(assert (x1725 x36 (- x1028 x3193)))
(assert (x1384 x3136))
(assert (x1384 x1757))
(assert (< 10000 (x230 64 x3181 x3538)))
(assert (x1384 x2590))
(assert (x1384 x657))
(assert (x3295 x4099 x753 x3866 x3751))
(assert (x1384 x245))
(assert (x2547 x3556 16))
(assert (= (x250 (x230 64 x2895 x2341)) 64))
(assert (x3404 (* x1630 18446744073709551616)))
(assert (= (and x1547 (not x14)) x1114))
(assert (not (x2614 (x230 64 x1843 x2996))))
(assert (x3295 x463 x2450 x753 x4099))
(assert (x1384 x3153))
(assert (x1384 x3917))
(assert (x3395 (- x4099 x463)))
(assert (x3404 (* 65536 x1348)))
(assert (not (x2614 (x230 64 x2111 14))))
(assert (x1384 x1389))
(assert (x3404 (* 4294967296 x28)))
(assert (x1000 x3970))
(assert (= (=> (and (and (= x216 (x3933 x3393 16)) (= (= 0 x216) x2568)) (or (and (and (= x3393 x110) (= x548 x1644)) x2568) (and (not x2568) (and (= x216 x110) (= (+ 16 x1644) x548))))) x3553) x458))
(assert (not (x2614 (x230 64 x1743 14))))
(assert (=> (<= x2026 10000) (= 0 (x2128 x2026))))
(assert (x3295 x36 x1028 x3751 x3866))
(assert (= (x323 x2037 256) (x3763 x2037 8)))
(assert (= (x230 64 65535 x4249) (x2128 (x230 64 65535 x4249))))
(assert (= x1104 (or x967 x3466)))
(assert (x1384 x208))
(assert (x1384 x3850))
(assert (x1384 x804))
(assert (< 10000 (x230 64 x1224 5)))
(assert (= (x2128 (x230 64 0 x3635)) (x230 64 0 x3635)))
(assert (= x97 (or x2885 x4148)))
(assert (x1384 x2261))
(assert (x1384 x588))
(assert (not (x2614 (x230 64 x1258 x1555))))
(assert (x3395 (- x3193 x753)))
(assert (< 10000 (x230 64 x3121 x291)))
(assert (x1384 x1458))
(assert (x1384 x3952))
(assert (= (x2128 100000) 0))
(assert (= (x2128 (x230 64 x1009 x2545)) (x230 64 x1009 x2545)))
(assert (x3395 (- x3866 x2450)))
(assert (x3395 x3136))
(assert (= x3791 (or x281 x255 x3302 x83)))
(assert (< (x230 64 x4242 x3658) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x517) (= 0 (x2128 x517))))
(assert (x1384 x1684))
(assert (x1327 x3259 18446744073709551616))
(assert (= 64 (x250 (x230 64 x961 x3622))))
(assert (x2614 100000000000))
(assert (x1384 x1083))
(assert (x1384 x2780))
(assert (< 10000 (x230 64 x3930 x2566)))
(assert (= x2866 (and x1899 (not x583))))
(assert (x3295 x4099 x753 x4157 x1514))
(assert (x3404 (ite (< x2646 256) (x521 2 x2646) 0)))
(assert (x1804 x3193 x600 x1514 x4157))
(assert (x1384 x824))
(assert (= x2655 (x4195 (x230 64 x2782 x2655))))
(assert (= (and x525 x1745) x624))
(assert (x3395 256))
(assert (x1384 x557))
(assert (x2547 x3809 340282366920938463463374607431768211456))
(assert (x1384 x3884))
(assert (= (x230 64 x761 x2625) (x2128 (x230 64 x761 x2625))))
(assert (= 64 (x250 (x230 64 x761 x2625))))
(assert (x1384 x1871))
(assert (= x1054 (and x1202 (not x1832))))
(assert (= (x230 64 x1648 5) (x2128 (x230 64 x1648 5))))
(assert (= (x2128 (+ 1 x2648)) (x2128 x2648)))
(assert (< 10000 (x230 64 0 x1438)))
(assert (not (x2614 (x230 64 65535 x2194))))
(assert (x1384 x259))
(assert (x3295 x2450 x463 x4099 x753))
(assert (= (x230 64 x2653 x2199) (x2128 (x230 64 x2653 x2199))))
(assert (= (x230 64 x2820 x3354) (x2128 (x230 64 x2820 x3354))))
(assert (= (and (not x431) x2759) x1024))
(assert (x1384 x2998))
(assert (x1521 x3114))
(assert (x1384 x3081))
(assert (x1384 x3145))
(assert (x2060 x1484))
(assert (x1384 x2287))
(assert (x1384 x139))
(assert (x3295 x600 x3193 x36 x1028))
(assert (x1384 x1925))
(assert (x1384 x1776))
(assert (x1384 x2761))
(assert (= (x230 64 x652 9) (x2128 (x230 64 x652 9))))
(assert (x81 x99))
(assert (= x3010 (and x2955 x102)))
(assert (x2614 281474976710654))
(assert (= x2359 (and x97 (not x41))))
(assert (= (x323 x2920 4) (x3763 x2920 2)))
(assert (x1000 x802))
(assert (x2614 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2466 340282366920938463463374607431768211456 x2102))
(assert (x1384 x2608))
(assert (= (x230 64 x1656 9) (x2128 (x230 64 x1656 9))))
(assert (= x1211 (and x3314 x641)))
(assert (= (and x2203 x2370) x2027))
(assert (x3395 (- x4157 x463)))
(assert (= x1908 (and x3106 x2529)))
(assert (= x1694 (and x2369 x2919)))
(assert (x1327 (* x554 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x71))
(assert (= (and x1199 (not x4245)) x2930))
(assert (= 0 (x2128 281474976710655)))
(assert (x1000 x1520))
(assert (x1384 x3713))
(assert (not (x2614 (x230 64 x339 14))))
(assert (x1327 (ite (> 256 x2646) (x521 2 x2646) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3933 x3776 2) (x3377 (* x3776 4))))
(assert (= (x3933 x2155 8) (x3377 (* 256 x2155))))
(assert (x3404 x3674))
(assert (x1384 x54))
(assert (x1000 x1049))
(assert (= x2777 (or x4213 x1148)))
(assert (not (x2614 (x230 64 x3950 5))))
(assert (x1384 x3950))
(assert (= (or x3750 x2756) x2219))
(assert (x3395 x2376))
(assert (= (x230 64 x3691 14) (x2128 (x230 64 x3691 14))))
(assert (x1384 x3002))
(assert (= (x3763 x3683 8) (x323 x3683 256)))
(assert (= x3035 (and x246 x937)))
(assert (x1725 x463 (- x2450 x753)))
(assert (= (and (not x26) x3903) x2727))
(assert (x1804 x753 x4099 x1514 x4157))
(assert (= x3081 (x3706 (x230 64 x3081 x1890))))
(assert (x1384 x3394))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 65535 x1951)))
(assert (x1327 (* x2135 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1263))
(assert (x3395 x3081))
(assert (< 10000 (x230 64 x4177 14)))
(assert (x3395 (- x3751 x4157)))
(assert (= x1880 (=> (and (and (= (x3933 x1572 2) x1459) (= (= x1459 0) x3800)) (or (and (and (= x2743 (+ 2 x3061)) (= x1459 x3361)) (not x3800)) (and (and (= x3361 x1572) (= x3061 x2743)) x3800))) x3652)))
(assert (x1327 x2384 18446744073709551616))
(assert (x1327 (ite (> 256 x1410) (x521 2 x1410) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1000 x1433))
(assert (= (x2128 (x230 64 x3036 9)) (x230 64 x3036 9)))
(assert (= (x2128 x1615) (x2128 (+ 1 x1615))))
(assert (x1384 x3872))
(assert (= 0 (x2128 3311251043)))
(assert (x3395 x3776))
(assert (= x664 (and x1559 (not x3666))))
(assert (x1384 x55))
(assert (=> (>= 10000 x3619) (= (x2128 x3619) 0)))
(assert (= (or x2258 x2892) x3555))
(assert (= (=> (and (or (and (and (= x2984 x2057) (= x194 x1068)) (not x2806)) (and (and (= (x3763 x1068 32) x194) (= (+ x2984 32) x2057)) x2806)) (= (> x1068 4294967295) x2806)) x1488) x1595))
(assert (not (x2614 (x230 64 x881 9))))
(assert (x2614 16777215))
(assert (x1327 x3114 16777216))
(assert (x1384 x194))
(assert (not (x2614 (x230 64 x1485 x1280))))
(assert (= (x3706 (x230 64 x961 x3622)) x961))
(assert (= (x3763 x3232 16) (x323 x3232 65536)))
(assert (= (x2128 (x230 64 x1464 x3622)) (x230 64 x1464 x3622)))
(assert (x1384 x543))
(assert (x1327 (* 256 x2793) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x230 64 x796 5) (x2128 (x230 64 x796 5))))
(assert (= (x323 x2030 16) (x3763 x2030 4)))
(assert (= 64 (x250 (x230 64 x1843 x923))))
(assert (x3395 x3931))
(assert (= (and x3490 (not x1622)) x3609))
(assert (x2547 x1075 18446744073709551616))
(assert (= (=> (= x4234 1) x1267) x2218))
(assert (x1384 x756))
(assert (x1384 x644))
(assert (x1327 (* x2247 4294967296) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3763 x3483 4) (x323 x3483 16)))
(assert (x1384 x3729))
(assert (= x2963 (or x73 x933)))
(assert (x1384 x3767))
(assert (x1384 x1980))
(assert (= (x4195 (x230 64 x3191 x3069)) x3069))
(assert (x1000 x3809))
(assert (x1384 x614))
(assert (x1327 (* x174 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 (* x1548 16)))
(assert (= x1805 (and (not x2349) x3405)))
(assert (x1384 x4018))
(assert (x2712 x1509))
(assert (< (x230 64 x1209 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2079 (=> (= x3543 1) x3625)))
(assert (x1384 x2102))
(assert (> (x230 64 x4004 14) 10000))
(assert (x1327 x4069 1000000000000000000000000))
(assert (not (x2614 (x230 64 x2048 x86))))
(assert (x1000 x3762))
(assert (=> (<= x2418 10000) (= (x2128 x2418) 0)))
(assert (x295 x671))
(assert (= x3881 (x3706 (x230 64 x3881 x1786))))
(assert (x3395 (- x2450 x1514)))
(assert (x1384 x2515))
(assert (x1384 x2086))
(assert (< (x230 64 255 x1147) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2060 x3081))
(assert (= x3867 (and x2197 x1169)))
(assert (= x2476 (and x1845 (not x1141))))
(assert (= x533 (and x481 x1066)))
(assert (< 10000 (x230 64 x1743 14)))
(assert (x1725 x3751 (- x3866 x3193)))
(assert (x2547 x2782 256))
(assert (not (x2614 (x230 64 x80 9))))
(assert (= x555 (or x4122 x2639)))
(assert (= (x3706 (x230 64 x2653 x2199)) x2653))
(assert (x3404 (* 256 x3798)))
(assert (= (x2128 (+ x2092 1)) (x2128 x2092)))
(assert (= (and x1412 x2740) x147))
(assert (= x2447 (and x1763 x3688)))
(assert (< 10000 (x230 64 x1030 x1025)))
(assert (= (and (not x3653) x3555) x1210))
(assert (x1384 x695))
(assert (= (x250 (x230 64 x1698 9)) 64))
(assert (= x1307 (or x849 x778)))
(assert (x1384 x3393))
(assert (=> (>= 10000 x3146) (= 0 (x2128 x3146))))
(assert (x1725 x753 (- x4099 x36)))
(assert (x1384 x3368))
(assert (=> (>= 10000 x3836) (= 0 (x2128 x3836))))
(assert (x2547 x2204 65536))
(assert (x1384 x506))
(assert (not (x2614 (x230 64 x2678 6))))
(assert (x1804 x3751 x3866 x463 x2450))
(assert (x1384 x316))
(assert (x3295 x1028 x36 x3751 x3866))
(assert (= (or x1490 x3874) x3218))
(assert (< 10000 (x230 64 0 x1)))
(assert (x1725 x3866 (- x3751 x4099)))
(assert (x3295 x2450 x463 x3866 x3751))
(assert (x1384 x1867))
(assert (x1384 x2543))
(assert (x1000 x3057))
(assert (= x3471 (=> (and (= x1997 (> x2360 18446744073709551615)) (or (and (not x1997) (and (= x2360 x1068) (= x2984 x4143))) (and (and (= x2984 (+ 64 x4143)) (= x1068 (x3763 x2360 64))) x1997))) x1595)))
(assert (x1000 16))
(assert (not (x2614 (x230 64 x2190 x1657))))
(assert (= (x250 (x230 64 0 x1438)) 64))
(assert (< (x230 64 x3124 x2956) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x3519))
(assert (= x2942 (and x2576 x2737)))
(assert (x2547 x2228 256))
(assert (x1384 x3003))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3950 5)))
(assert (x3395 x3605))
(assert (x1384 x3441))
(assert (= (x4195 (x230 64 x850 x2581)) x2581))
(assert (x1384 x403))
(assert (x1384 x1325))
(assert (x3404 x4127))
(assert (x1384 x4143))
(assert (= x1045 (=> (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x556) x480) (and (=> (and (and (or (and (and (= x3767 x709) (= x1587 0)) (not x2526)) (and (and (= x3767 (x3763 x709 128)) (= x1587 128)) x2526)) (and (= (< 340282366920938463463374607431768211455 x709) x2526) (= x4094 (x230 64 x2793 x1895)) (= x2793 (ite (<= x556 255) x1516 (x1161 65280 x556))) (= (x882 (+ x556 65280)) x1516) (= x709 (x3280 x4094)) (= x1895 (+ 1 x1147)))) (not x480)) x1886) (=> (and x480 (and (= x876 (x3933 x232 1)) (= x2553 254) (= 255 x2911) (= (= x876 0) x1928) (= x232 (x85 x3985)))) (and (=> (and (= x4242 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1928) x4102) (=> (and (not x1928) (and (= (< 340282366920938463463374607431768211455 x876) x866) (or (and (and (= x2987 128) (= (x3763 x876 128) x3668)) x866) (and (not x866) (and (= x876 x3668) (= x2987 0)))))) x2152)))))))
(assert (< 10000 (x230 64 x272 x2673)))
(assert (x2466 256 x2048))
(assert (x2547 x2936 16))
(assert (x1384 x274))
(assert (x3395 x2071))
(assert (x3606 x1514 100000000000000))
(assert (= (and x3134 x137) x1422))
(assert (x3395 x1803))
(assert (= (x250 (x230 64 x3836 14)) 64))
(assert (= (and x1706 (not x3009)) x911))
(assert (x3404 (* x1030 256)))
(assert (x1384 x2272))
(assert (x3395 (- x600 x36)))
(assert (= x2802 (and x3534 (not x1742))))
(assert (x1327 x2244 65536))
(assert (x1000 2))
(assert (x2466 4294967296 x3931))
(assert (x295 x570))
(assert (x1384 x1766))
(assert (= 64 (x250 (x230 64 x163 x3622))))
(assert (= x1229 (=> (= x1166 x2272) x682)))
(assert (x1384 x1930))
(assert (= 14 (x4195 (x230 64 x820 14))))
(assert (x1384 x2169))
(assert (x2547 x2360 18446744073709551616))
(assert (=> (>= 10000 x4242) (= (x2128 x4242) 0)))
(assert (= (x3933 x4242 8) (x3377 (* x4242 256))))
(assert (x1327 (* 256 x1030) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1804 x4099 x753 x1514 x4157))
(assert (x3395 (- x1028 x4099)))
(assert (= (=> (and (or (and x4093 (and (= x459 (+ 8 x4178)) (= (x3763 x1162 8) x3283))) (and (not x4093) (and (= x1162 x3283) (= x459 x4178)))) (= x4093 (< 255 x1162))) x4215) x2007))
(assert (x1384 x3403))
(assert (= x1051 (or x1570 x4152)))
(assert (x3295 x4157 x1514 x753 x4099))
(assert (= (and (not x3148) x3547) x1371))
(assert (< (x230 64 1 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x581))
(assert (= (or x1977 x2167) x3279))
(assert (x1384 x640))
(assert (= x2458 (=> (and (or (and (not x1141) (and (= (+ x3001 16) x2660) (= x3015 x1821))) (and x1141 (and (= x3001 x2660) (= x3015 x1348)))) (and (= (x3933 x1348 16) x1821) (= x1141 (= 0 x1821)))) x2957)))
(assert (x1384 x1812))
(assert (x1327 x70 16777216))
(assert (x1384 x132))
(assert (= (and x1163 x1944) x2077))
(assert (= (=> (and (or (and (not x3581) (and (= x3736 x717) (= x3355 x748))) (and x3581 (and (= (+ 16 x717) x3736) (= (x3763 x748 16) x3355)))) (= x3581 (> x748 65535))) x2479) x2286))
(assert (x1384 x2748))
(assert (< 10000 (x230 64 1 14)))
(assert (= (and x696 x1760) x3554))
(assert (= (and x1020 x3241) x970))
(assert (= x1274 (and (=> (and (not x102) (and (= x3253 (x2009 16777215 x70)) (= x3898 (< (- x3081 1) x3253)) (<= x3081 9999999) (<= 1 x3081))) (and (=> (and (not x3898) (and (= x2183 x2781) (= x1756 x776) (= x114 992) (= x51 x1033))) x3740) (=> x3898 x1950))) (=> (and (and (= x2525 (< x3033 (+ 1 x3081))) (= (x2009 16777215 x70) x3033)) x102) (and (=> (and (and (= x3495 992) (= x51 x2861) (= x2983 x2183) (= x3561 x1756)) (not x2525)) x2523) (=> x2525 x1950))))))
(assert (x1725 x4157 (- x1514 x463)))
(assert (= x1950 false))
(assert (= 0 (x2128 3402823669209384634633746074317682100000000000000)))
(assert (not (x2614 (x230 64 x1209 x1454))))
(assert (x1384 x3799))
(assert (x3395 (- x600 x753)))
(assert (x3395 (- x2450 x3866)))
(assert (= (x3763 x2757 2) (x323 x2757 4)))
(assert (x2547 x2663 18446744073709551616))
(assert (=> (<= x3524 10000) (= (x2128 x3524) 0)))
(assert (x2547 x3394 18446744073709551616))
(assert (< 10000 (x230 64 x881 9)))
(assert (x2547 x206 65536))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2190 x1657)))
(assert (x3395 x600))
(assert (= 64 (x250 (x230 64 x3670 x2096))))
(assert (x1384 x1537))
(assert (x3404 (* x2177 2)))
(assert (x1204 x2729 x3911))
(assert (x1384 x451))
(assert (= (and (not x511) x2502) x3045))
(assert (= (x4195 (x230 64 x2742 x242)) x242))
(assert (= (x323 x3767 18446744073709551616) (x3763 x3767 64)))
(assert (x1384 x2743))
(assert (=> (<= x2111 10000) (= 0 (x2128 x2111))))
(assert (= x2569 (and x4056 x265)))
(assert (x1384 x3796))
(assert (= (x3377 (* 340282366920938463463374607431768211456 x3605)) (x3933 x3605 128)))
(assert (x1384 x1434))
(assert (x1384 x2900))
(assert (= (or x2395 x1319) x3725))
(assert (x1384 x2813))
(assert (= (or x2010 x147) x2170))
(assert (= (or x260 x513) x2976))
(assert (x1327 (ite (> 256 x4081) (x521 2 x4081) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3295 x1514 x4157 x3866 x3751))
(assert (= (and (not x2397) x2587) x1580))
(assert (= x3207 (=> (and (or (and (not x1098) (and (= x457 x598) (= (+ x4133 64) x1501))) (and x1098 (and (= x1501 x4133) (= x3880 x457)))) (and (= x598 (x3933 x3880 64)) (= x1098 (= x598 0)))) x1611)))
(assert (x1000 x1265))
(assert (x1384 x1162))
(assert (x2466 1000000 x753))
(assert (x1327 (* x3374 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x4001)))
(assert (x3395 (- x3866 x753)))
(assert (= x539 (=> (and (= (x3737 (- x1858 1)) x3822) (= x3822 x3114) (= (ite (> x3278 1) (+ x3593 1) x3593) x1858)) x3661)))
(assert (x1384 x1836))
(assert (x1000 x3877))
(assert (=> (<= x2445 10000) (= 0 (x2128 x2445))))
(assert (= x2190 (x3706 (x230 64 x2190 x1280))))
(assert (x1384 x3623))
(assert (x1384 x3865))
(assert (= (x323 x4106 340282366920938463463374607431768211456) (x3763 x4106 128)))
(assert (x3295 x463 x2450 x36 x1028))
(assert (x2060 1099511627775))
(assert (x1384 x4202))
(assert (x1384 x183))
(assert (x1725 x4157 (- x1514 x3193)))
(assert (x2060 x1904))
(assert (x3395 x1536))
(assert (= (and x3185 (not x3914)) x3636))
(assert (< (x230 64 x2895 x2341) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2060 x3230))
(assert (= x111 (and x492 (not x1134))))
(assert (x3395 (- x463 x1028)))
(assert (= (and x3948 (not x3800)) x3793))
(assert (not (x2614 (x230 64 x272 x2673))))
(assert (x2547 x706 16))
(assert (= (x3763 x669 32) (x323 x669 4294967296)))
(assert (not (x2614 (x230 64 0 x1813))))
(assert (= (x3933 x1658 32) (x3377 (* x1658 4294967296))))
(assert (x3295 x1514 x4157 x4099 x753))
(assert (x1384 x569))
(assert (x3395 (x521 2 x1639)))
(assert (x1384 x2289))
(assert (x2466 1 (x521 2 x3251)))
(assert (= (x230 64 x948 x2640) (x2128 (x230 64 x948 x2640))))
(assert (= x2725 (and (not x1525) x1223)))
(assert (x1384 x1074))
(assert (x1384 x1949))
(assert (= (x323 x3385 256) (x3763 x3385 8)))
(assert (= (and (not x3784) x3218) x898))
(assert (x1725 x4157 (- x1514 x36)))
(assert (x1384 x1974))
(assert (x1384 x1467))
(assert (x1384 x3012))
(assert (= (x323 x2813 256) (x3763 x2813 8)))
(assert (x1000 x4071))
(assert (x1384 x3027))
(assert (= (=> (and (= x1134 (< 18446744073709551615 x1771)) (or (and (and (= (+ x4185 64) x921) (= (x3763 x1771 64) x1144)) x1134) (and (not x1134) (and (= x921 x4185) (= x1771 x1144))))) x1839) x2720))
(assert (x3404 (* 340282366920938463463374607431768211456 x1230)))
(assert (x1384 x3193))
(assert (x1384 x1705))
(assert (x1384 x3272))
(assert (x1384 x2660))
(assert (x3295 x4157 x1514 x3866 x3751))
(assert (x1384 x910))
(assert (x1384 x1269))
(assert (x1000 x2037))
(assert (= x11 (and x2725 x3388)))
(assert (x1384 x3202))
(assert (= (or x1368 x3334) x1719))
(assert (= (or x2054 x1453) x3812))
(assert (x1384 x503))
(assert (x2547 x1084 18446744073709551616))
(assert (= (x2128 (x230 64 0 x4001)) (x230 64 0 x4001)))
(assert (x3404 (* 65536 x1671)))
(assert (x3404 (* 256 x3181)))
(assert (= (x250 (x230 64 x2620 x596)) 64))
(assert (not (x2614 (x230 64 x3790 9))))
(assert (= (x250 (x230 64 x948 x2640)) 64))
(assert (= (and x492 x1134) x2722))
(assert (= (x2128 (+ 1 x3943)) (x2128 x3943)))
(assert (= (x230 64 x3166 x3571) (x2128 (x230 64 x3166 x3571))))
(assert (= x2189 (x3706 (x230 64 x2189 x1961))))
(assert (x1725 x3866 (- x3751 x600)))
(assert (< 10000 (x230 64 x2895 x2341)))
(assert (x1384 x495))
(assert (x3404 (* x2102 340282366920938463463374607431768211456)))
(assert (x2547 x2030 16))
(assert (= (x323 x748 65536) (x3763 x748 16)))
(assert (< (x230 64 0 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2547 x669 4294967296))
(assert (x1804 x1028 x36 x463 x2450))
(assert (x2060 x1040))
(assert (x1000 x2268))
(assert (x2466 4294967296 x1297))
(assert (= (=> (= (= x174 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3107) (and (=> (and (and (or (and (and (= x3204 0) (= x2487 x176)) x699) (and (and (= 128 x3204) (= x176 x955)) (not x699))) (and (= x1171 (+ 1 x1289)) (= (x3933 x2487 128) x955) (= (x230 64 x174 x1171) x1378) (= x2487 (x1339 x1378)) (= x699 (= x955 0)))) (not x3107)) x2043) (=> (and (= x1507 0) x3107) x627))) x391))
(assert (x1384 x1218))
(assert (x1327 x684 18446744073709551616))
(assert (not (x2614 (x230 64 x2189 x1961))))
(assert (= (=> (and (= x246 (< 255 x3683)) (or (and (and (= x1871 x2428) (= x3441 x3683)) (not x246)) (and x246 (and (= x1871 (+ 8 x2428)) (= (x3763 x3683 8) x3441))))) x107) x2383))
(assert (< 10000 (x230 64 x867 x959)))
(assert (x2466 256 x3449))
(assert (x2466 1 (x521 2 x2018)))
(assert (= (x2128 (x230 64 x850 x2581)) (x230 64 x850 x2581)))
(assert (= x3999 (or x1966 x3961 x738)))
(assert (= x1555 (x4195 (x230 64 x1258 x1555))))
(assert (not (x2614 (x230 64 65535 x4249))))
(assert (= x1447 (or x1749 x1947)))
(assert (= (x4195 (x230 64 x3081 x1890)) x1890))
(assert (x1384 x1465))
(assert (x2466 2 x2177))
(assert (x3395 x766))
(assert (x2466 4294967296 x2247))
(assert (= x3610 (and x1078 x3769)))
(assert (x1384 x2179))
(assert (= x3691 (x3706 (x230 64 x3691 14))))
(assert (= (=> (and (= x4231 (x3737 (- x1625 1))) (= x1625 (ite (< 1 x2575) (+ 1 x124) x124)) (= x4231 x2244)) x969) x4203))
(assert (x1384 x1941))
(assert (= (x2128 (x230 64 0 x1438)) (x230 64 0 x1438)))
(assert (= (x3763 x508 2) (x323 x508 4)))
(assert (= x3622 (x4195 (x230 64 x1464 x3622))))
(assert (> (x230 64 x1003 x1417) 10000))
(assert (x1384 x4212))
(assert (x1000 x3022))
(assert (= x634 (and x2832 (not x821))))
(assert (x1000 x1514))
(assert (not (x2614 (x230 64 x867 x959))))
(assert (x1384 x1028))
(assert (= (x230 64 x2490 x1542) (x2128 (x230 64 x2490 x1542))))
(assert (x1384 x4165))
(assert (x1384 x3135))
(assert (= (or x2622 x939) x3534))
(assert (= 0 (x2128 561662832)))
(assert (= (or x782 x248) x3177))
(assert (< (x230 64 0 x94) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x323 x3057 18446744073709551616) (x3763 x3057 64)))
(assert (x3395 (x521 2 x470)))
(assert (x2466 256 x110))
(assert (x2060 x4239))
(assert (x1327 x617 340282366920938463463374607431768211456))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1269 x3245)))
(assert (x1327 (* x4187 65536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2140))
(assert (= (and x3335 x1388) x1341))
(assert (x1384 x162))
(assert (x1384 x1932))
(assert (= x1478 (=> (and (and (= x3303 (= x3998 0)) (= (x3933 x1160 2) x3998)) (or (and (not x3303) (and (= x3713 (+ 2 x3171)) (= x3998 x3917))) (and (and (= x3713 x3171) (= x1160 x3917)) x3303))) x3197)))
(assert (x1327 (* 256 x3995) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1804 x3751 x3866 x1514 x4157))
(assert (x2466 1000000 x3384))
(assert (x81 x3114))
(assert (x1000 x241))
(assert (= x2496 (or x482 x136)))
(assert (x1000 x2694))
(assert (x3395 x3519))
(assert (x1384 x2504))
(assert (= (=> (and (= (x230 64 0 x3977) x2422) (= (x230 64 x948 x2640) x3977) (= (x2009 16777215 x3230) x948) (= x2602 (x3631 x2422)) (= x3009 (< 0 x1263)) (>= 1099511627775 x2602) (= (ite (not (= x1535 0)) 1 0) x2750) (= x2640 (x230 64 x2750 14)) (= x1263 (ite (= 0 x2602) 0 1))) (and (=> (and (not x3009) (and (= x1069 (ite (not (= 0 x1535)) 1 0)) (= x2655 (+ 2 x2206)) (= (x2009 16777215 x3230) x2813) (= x2646 (x2009 255 x3230)) (= (x230 64 x1069 14) x972) (= (x230 64 x2782 x2655) x1154) (= x2782 (x3763 x2813 8)) (= x506 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x2646))) (= (x2009 x3971 x506) x672) (= (= x3971 x672) x3190) (= x2206 (+ 1 x972)) (= x3971 (x2399 x1154)))) (and (=> (and (and (= (x230 64 x2782 x2655) x3654) (= (= x672 0) x3769)) (not x3190)) (and (=> (not x3769) x1777) (=> (and (and (and (= (x230 64 x3881 x1786) x313) (= x1786 (+ x2206 1)) (= x3881 (x3763 x2782 8)) (= (x2009 x177 x3774) x3143) (= (x2009 255 x2782) x2324) (= (= 0 x3143) x465) (= (x230 64 x3881 x1786) x2671) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x2324)) x3774) (= x177 (x3086 x2671))) (or (and x465 (and (= x1937 (x2009 x2805 x3646)) (= (x3286 x2206) x2805) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x3881)) x3646))) (not x465))) x3769) x853))) (=> (and x3190 (= 0 x764)) x407))) (=> x3009 x2297))) x989))
(assert (= (or x1732 x198) x3332))
(assert (x1327 x1948 16777216))
(assert (x1384 x2974))
(assert (= (x2128 (+ x924 2)) (x2128 x924)))
(assert (= (x323 x709 340282366920938463463374607431768211456) (x3763 x709 128)))
(assert (= x1556 (and x2821 x912)))
(assert (x3395 (- x3866 x36)))
(assert (x1384 x2516))
(assert (x2060 x3570))
(assert (x2466 256 x3121))
(assert (x1204 x2805 x3646))
(assert (= (and x2893 x743) x793))
(assert (x2313 x3444 x1480))
(assert (x2060 16776960))
(assert (x1384 x3518))
(assert (= x3641 (and x2826 x1241)))
(assert (= (and x917 x1213) x1111))
(assert (x1384 x173))
(assert (= (and x3599 (not x1477)) x1100))
(assert (x1000 x869))
(assert (x3395 x3121))
(assert (= x3297 (and x2462 (not x3802))))
(assert (x1384 x1107))
(assert (= (x3706 (x230 64 x421 14)) x421))
(assert (x1000 x3891))
(assert (= (x323 x1709 4) (x3763 x1709 2)))
(assert (x2547 x3057 18446744073709551616))
(assert (= (x4195 (x230 64 0 x3977)) x3977))
(assert (x1384 x3175))
(assert (x1384 x548))
(assert (x3295 x3866 x3751 x3193 x600))
(assert (> (x230 64 0 x3635) 10000))
(assert (x1384 x3208))
(assert (< 10000 (x230 64 x1155 x1099)))
(assert (= x3726 (=> (= x3314 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2263)) (and (=> (and (and (or (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x272) x2565) (and (and (= 1 x272) (= x576 0)) (not x2565))) (and (= x3514 (+ 1 x276)) (= (x230 64 0 x3514) x2619) (= x143 0) (= x2913 1) (= x2116 (x3763 x724 1)) (= (x2459 x2619) x724) (= x2565 (= x2116 0)))) x3314) x4159) (=> (and (not x3314) (= x2263 x811)) x701)))))
(assert (x1384 x1638))
(assert (x3404 (ite (< x850 256) (x521 2 x850) 0)))
(assert (x1725 x4157 (- x1514 x4099)))
(assert (x2466 1 (x521 2 x850)))
(assert (= x2545 (x4195 (x230 64 x1009 x2545))))
(assert (= (x3763 x644 4) (x323 x644 16)))
(assert (= 64 (x250 (x230 64 x2105 x2419))))
(assert (= (x2128 (x230 64 0 x3514)) (x230 64 0 x3514)))
(assert (x3395 (- x1028 x463)))
(assert (= x1113 (and x3158 (not x2139))))
(assert (= (x2128 (x230 64 x2433 5)) (x230 64 x2433 5)))
(assert (x3404 (ite (> 256 x2018) (x521 2 x2018) 0)))
(assert (= x2004 (and x2385 (not x2046))))
(assert (= 0 (x2128 10000000000000000000000)))
(assert (x2547 x1780 4294967296))
(assert (= x1820 (and x3371 x2404)))
(assert (=> (>= 10000 x2477) (= 0 (x2128 x2477))))
(assert (= (and x526 x3901) x4218))
(assert (< 10000 (x230 64 x1209 x1454)))
(assert (x1384 x1003))
(assert (x1204 x1247 x4239))
(assert (x1384 x1491))
(assert (x1384 x1200))
(assert (= (x323 x2559 256) (x3763 x2559 8)))
(assert (= 64 (x250 (x230 64 x2351 14))))
(assert (= x4213 (and (not x3140) x1692)))
(assert (x3404 (ite (< x614 256) (x521 2 x614) 0)))
(assert (x1327 (* 256 x3982) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1327 (ite (< x607 256) (x521 2 x607) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2614 (x230 64 x199 x1791))))
(assert (x3295 x1028 x36 x1514 x4157))
(assert (= (and x2881 x3576) x902))
(assert (= (x3377 (* x274 4)) (x3933 x274 2)))
(assert (= (and x649 x2829) x433))
(assert (> (x230 64 x3972 5) 10000))
(assert (x1384 x483))
(assert (= (=> (and (= x3123 (> x2127 0)) (or (and (and (= (x230 64 0 x1) x530) (= x1123 (x1324 x2972)) (<= x2954 1099511627775) (= 1 x2543) (= (x4227 x530) x2954) (= x1123 x2672) (= x1056 x2954) (>= 1099511627775 x1123) (= x2972 (x230 64 0 x1))) x3123) (and (and (= 0 x1056) (= x2543 0) (= 0 x2672)) (not x3123)))) x1274) x2872))
(assert (= 64 (x250 (x230 64 x1743 14))))
(assert (= x80 (x3706 (x230 64 x80 9))))
(assert (x3404 (* x1663 16)))
(assert (x1000 x709))
(assert (x1384 x1006))
(assert (x1725 x2450 (- x463 x600)))
(assert (x1327 (ite (< x1157 256) (x521 2 x1157) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x250 (x230 64 0 x3977))))
(assert (x2547 x1479 4294967296))
(assert (x1384 x2887))
(assert (x1384 x1245))
(assert (x1384 x2384))
(assert (= x2759 (or x252 x2862)))
(assert (= (or x2589 x3848) x3039))
(assert (x1384 x3825))
(assert (= x146 (and x1844 x2530)))
(assert (x3395 x3122))
(assert (x3404 x327))
(assert (= (and x3263 (not x3162)) x2783))
(assert (= (x250 (x230 64 0 x1993)) 64))
(assert (x1384 x2987))
(assert (x3404 (* 256 x2477)))
(assert (x1384 x2851))
(assert (x1000 x3081))
(assert (x3395 x3590))
(assert (= (or x4098 x2540) x2977))
(assert (= 64 (x250 (x230 64 x2621 x3622))))
(assert (= (x3377 (* x770 2)) (x3933 x770 1)))
(assert (x2614 340282366920938463463374607431768211456))
(assert (x1384 x3733))
(assert (x81 x943))
(assert (x1000 x1084))
(assert (x3606 x2478 1000000))
(assert (x1384 x4204))
(assert (x1384 x3044))
(assert (x1327 (* x1572 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x250 (x230 64 x3528 x3571))))
(assert (= x631 (or x2852 x1041)))
(assert (x1384 x2298))
(assert (= (x2128 (x230 64 x761 x242)) (x230 64 x761 x242)))
(assert (x2547 x947 340282366920938463463374607431768211456))
(assert (x1384 x2363))
(assert (x1384 x1710))
(assert (= (=> (and (and (= (x3933 x2442 4) x1101) (= (= 0 x1101) x2153)) (or (and x2153 (and (= x2442 x2649) (= x587 x1360))) (and (and (= x1360 (+ 4 x587)) (= x2649 x1101)) (not x2153)))) x2489) x1130))
(assert (= (and x2770 x3765) x2294))
(assert (x2466 256 x3181))
(assert (x1000 x126))
(assert (= (x323 x3055 4294967296) (x3763 x3055 32)))
(assert (x1384 x2600))
(assert (= (and (not x4229) x3224) x1764))
(assert (x4196 x556))
(assert (x1384 x2401))
(assert (= x86 (x4195 (x230 64 x2048 x86))))
(assert (x1384 x1128))
(assert (x1384 x3998))
(assert (x1384 x809))
(assert (x1384 x2704))
(assert (x1384 x1981))
(assert (= x1788 (or x3814 x2736)))
(assert (x4196 x1684))
(assert (= (x230 64 x2445 14) (x2128 (x230 64 x2445 14))))
(assert (= (and x3616 x2019) x2737))
(assert (< 10000 (x230 64 x3372 x2647)))
(assert (x1804 x2450 x463 x753 x4099))
(assert (not x2922))
(assert (x1725 x2450 (- x463 x4099)))
(assert (not (x2614 (x230 64 x1675 9))))
(assert (x1327 x3364 16777216))
(assert (x1327 (* 16 x2442) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x250 (x230 64 x3146 14)) 64))
(assert (x1384 x3878))
(assert (x1000 x55))
(assert (= (x2128 (x230 64 x3081 x1890)) (x230 64 x3081 x1890)))
(assert (= (x250 (x230 64 x897 x3513)) 64))
(assert (= x1659 (or x1175 x3238)))
(assert (x1725 x1514 (- x4157 x3751)))
(assert (x1804 x600 x3193 x753 x4099))
(assert (= (=> (and (= (> x3865 4294967295) x218) (or (and x218 (and (= x4005 (x3763 x3865 32)) (= x193 (+ 32 x1357)))) (and (not x218) (and (= x193 x1357) (= x4005 x3865))))) x2265) x932))
(assert (x1384 x1709))
(assert (x2060 x506))
(assert (x2060 x316))
(assert (= (and x3650 (not x2362)) x1677))
(assert (x3395 x1663))
(assert (x1384 x2533))
(assert (x1725 x600 (- x3193 x1028)))
(assert (x1384 x3970))
(assert (= (and x3833 x2129) x3334))
(assert (x3404 (* 256 x1003)))
(assert (= (x3706 (x230 64 x2098 x3410)) x2098))
(assert (x1384 x2607))
(assert (= (x230 64 x2026 x3622) (x2128 (x230 64 x2026 x3622))))
(assert (x3295 x600 x3193 x1514 x4157))
(assert (x1384 x1992))
(assert (x1384 x869))
(assert (= x3786 (and x2642 (not x102))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x339 14)))
(assert (x1204 x3971 x506))
(assert (x1384 x2709))
(assert (x1327 (* x3372 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3315 (not x1894)) x3103))
(assert (x1384 x3724))
(assert (x1327 (* 2 x2260) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x323 x3353 2) (x3763 x3353 1)))
(assert (x3395 (- x2450 x753)))
(assert (= (x230 64 x3199 9) (x2128 (x230 64 x3199 9))))
(assert (x3395 (- x2450 x36)))
(assert (=> (>= 10000 x80) (= (x2128 x80) 0)))
(assert (x1327 (* 4 x739) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2495))
(assert (= (and x3594 x1276) x4060))
(assert (x3404 (* x1160 4)))
(assert (x1384 x1824))
(assert (= (x3706 (x230 64 0 x94)) 0))
(assert (= x3544 (and x3555 x3653)))
(assert (x3404 x3364))
(assert (x3404 (* 4294967296 x2247)))
(assert (= (=> (= 1 x3150) x2702) x1540))
(assert (x1725 x4099 (- x753 x3866)))
(assert (= x2155 (x3706 (x230 64 x2155 x2923))))
(assert (> (x230 64 x2621 x3622) 10000))
(assert (= (x3763 x2939 32) (x323 x2939 4294967296)))
(assert (= (x2128 (x230 64 x2620 x596)) (x230 64 x2620 x596)))
(assert (x1384 x2713))
(assert (= x309 (=> (and (or (and x2432 (and (= x874 (x3763 x3385 8)) (= (+ x2974 8) x3153))) (and (and (= x3153 x2974) (= x874 x3385)) (not x2432))) (= (< 255 x3385) x2432)) x2165)))
(assert (x3395 (- x753 x4157)))
(assert (x3404 x2820))
(assert (< (x230 64 x1810 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2614 1461501637330902918203684832716283019655932542975))
(assert (= (or x76 x380) x2644))
(assert (x2614 18446744073709551615))
(assert (= (or x1371 x1907) x2115))
(assert (x1384 x2620))
(assert (= (x3377 (ite (> 256 x850) (x521 2 x850) 0)) (x3933 1 x850)))
(assert (x1725 x36 (- x1028 x600)))
(assert (= (x4195 (x230 64 x163 x3622)) x3622))
(assert (= (x3763 x1165 8) (x323 x1165 256)))
(assert (= (or x3035 x727) x188))
(assert (= x783 (or x3293 x290)))
(assert (= (x2128 (x230 64 x1269 x3245)) (x230 64 x1269 x3245)))
(assert (x1804 x753 x4099 x3193 x600))
(assert (= (x2128 1000000000000000000000000) 0))
(assert (= x891 (=> (and (or (and (and (not (> x463 x1457)) (= (x3137 x1610) x4182) (= x4074 (x230 64 x1722 9)) (= (x323 x37 1000000) x3945) (<= x1224 1461501637330902918203684832716283019655932542975) (= (x2009 18446744073709551615 x3508) x4171) (>= 340282366920938463463374607431768211455 x3659) (= (x3137 x1610) x1158) (= (+ x2242 x2888) x930) (= (x230 64 x1224 5) x67) (>= 340282366920938463463374607431768211455 x455) (>= 281474976710655 x80) (= x2355 (+ x808 x2825)) (= x2613 (+ x1137 x4036)) (= x80 (x45 x67)) (= x2845 (x1300 x1313)) (= x2042 (+ x658 x2641)) (<= x301 340282366920938463463374607431768211455) (= (x3737 (- x1457 x463)) x617) (= x225 x3967) (>= 340282366920938463463374607431768211455 x1457) (= x1457 (x1515 x3188)) (= x2641 (- x2355 x301)) (= x3659 (+ x2515 x455)) (= 0 x1930) (= (- x930 x4182) x225) (= x808 (x2009 340282366920938463463374607431768211455 x617)) (<= x2629 340282366920938463463374607431768211455) (= x455 (x1300 x1313)) (= x3063 (x1646 x4074)) (= (x2009 18446744073709551615 x3945) x3464) (= x3705 x658) (= (- x2042 x2629) x170) (= (x1646 x4074) x2629) (>= 340282366920938463463374607431768211455 x2845) (= x1158 x2242) (= (- x2613 x2845) x2888) (= (x3737 (- x2590 x3464)) x3508) (= x170 x4068) (= (+ x3063 x463) x3705) (<= x1158 340282366920938463463374607431768211455) (= x1610 (x230 64 x80 9)) (<= x3063 340282366920938463463374607431768211455) (<= 0 x3705) (= x301 (x1515 x3188)) (= x463 x2144) (= x62 0) (= x3659 x4036) (<= 0 x3659) (= x3038 x4171) (= x37 (* 1000000 x2515)) (= x1313 (x230 64 x3368 9)) (<= x4182 340282366920938463463374607431768211455) (= (x230 64 x3368 9) x3188) (not (< x2590 x3464)) (>= 340282366920938463463374607431768211455 x3705)) (not x102)) (and x102 (and (>= x1503 0) (>= 281474976710655 x2713) (<= x3113 340282366920938463463374607431768211455) (not (< x2590 x3400)) (= (+ x1122 x453) x1975) (= (x858 x1498) x3113) (= x2628 (x230 64 x1224 5)) (= x2515 x2094) (= (* 1000000 x463) x417) (<= x3780 340282366920938463463374607431768211455) (= (x1300 x621) x4252) (>= x1446 0) (= (x45 x2628) x2713) (= x453 (- x4079 x3113)) (= (x2009 18446744073709551615 x2426) x3400) (= x3967 x3702) (= x116 x1503) (= x3028 (- x1067 x3574)) (= x3780 (x1515 x1133)) (<= x1224 1461501637330902918203684832716283019655932542975) (<= x4252 340282366920938463463374607431768211455) (<= x2437 340282366920938463463374607431768211455) (= x2209 (x230 64 x2713 9)) (<= x1481 340282366920938463463374607431768211455) (= (+ x2515 x2775) x1446) (= 0 x173) (= (x2009 340282366920938463463374607431768211455 x308) x1407) (>= 340282366920938463463374607431768211455 x2775) (= x2437 (x2546 x2209)) (= x720 0) (= (x230 64 x3368 9) x1133) (= x1503 (+ x463 x3780)) (= (x1300 x621) x3574) (= x3038 x1431) (= (+ x3028 x1823) x4079) (= x3702 (- x1975 x2169)) (= x2775 (x858 x1498)) (<= x3574 340282366920938463463374607431768211455) (= x2169 (x2546 x2209)) (= x405 (- x3987 x1481)) (= x405 x4068) (= (x3737 (- x4252 x2094)) x308) (= x2144 x463) (= x2384 (x3737 (- x2590 x3400))) (>= 340282366920938463463374607431768211455 x1503) (= (x323 x417 1000000000000000000) x2426) (= (x230 64 x3368 9) x621) (= (+ x116 x2825) x3987) (>= 340282366920938463463374607431768211455 x1446) (not (< x4252 x2094)) (= (x230 64 x1722 9) x1498) (= x2437 x1122) (= x1431 (x2009 18446744073709551615 x2384)) (= (x1515 x1133) x1481) (= (+ x1137 x1407) x1067) (>= 340282366920938463463374607431768211455 x2169) (= x1823 x1446)))) (and (<= x2303 9999999) (= x2303 (x2009 16777215 x3065)) (= x756 (x323 x473 1000000000000000000000000)) (= (+ x842 100000000) x2450) (= (* 1000000 x3384) x1093) (= x3952 (x3737 (- x573 x463))) (not (< x573 x463)) (= x2715 (x2009 16777215 x3065)) (= (x2817 x463 x2450) x3384) (= x1093 x473) (= (+ x756 (ite (< 0 (x2350 x473 1000000000000000000000000)) 1 0)) x2515) (= x2239 1000000000000000000000000) (= x842 (* x2715 100000)) (= x2624 1))) x3157)))
(assert (x3117 x2820))
(assert (= x2658 (and (not x415) x1746)))
(assert (= (x230 64 x3121 x291) (x2128 (x230 64 x3121 x291))))
(assert (x1384 x2242))
(assert (= (and (not x2065) x851) x1385))
(assert (x2060 x2689))
(assert (= x235 (and x852 (not x3852))))
(assert (not (x2614 (x230 64 x3972 5))))
(assert (= (and x2661 x57) x1778))
(assert (= (x4195 (x230 64 x552 14)) 14))
(assert (x3395 (- x463 x753)))
(assert (< 10000 (x230 64 255 x1829)))
(assert (= (x250 (x230 64 255 x1829)) 64))
(assert (= (or x4060 x1806) x2642))
(assert (x1384 x2627))
(assert (x1384 x1418))
(assert (x1000 x4086))
(assert (x3404 (* x3449 256)))
(assert (x3395 x1630))
(assert (x1384 x1157))
(assert (x2313 x2732 x834))
(assert (=> (<= x881 10000) (= (x2128 x881) 0)))
(assert (x2547 x2037 256))
(assert (x3404 x3065))
(assert (x1725 x600 (- x3193 x2450)))
(assert (= (and x462 x2366) x1092))
(assert (x1384 x266))
(assert (x1384 x1585))
(assert (> (x230 64 0 x3977) 10000))
(assert (= (x250 (x230 64 0 x242)) 64))
(assert (= 0 (x2128 1461501637330902918203684832716283019655932542975)))
(assert (x1384 x308))
(assert (x1384 x2551))
(assert (= (x2128 18446744073709551615999999999999999999) 0))
(assert (< 10000 (x230 64 x3183 14)))
(assert (= x3189 (=> (and (= x1308 x1250) (= x1375 (x2009 16777215 x327)) (= x1250 (ite (= x1375 16777215) 0 x327))) x2982)))
(assert (x1000 x3655))
(assert (not (x2614 (x230 64 x820 14))))
(assert (not (x2614 (x230 64 x3836 14))))
(assert (x1725 x3751 (- x3866 x463)))
(assert (= (x2128 (+ x1676 1)) (x2128 x1676)))
(assert (= (x2128 (+ x3912 1)) (x2128 x3912)))
(assert (= x2577 (and (not x2404) x3371)))
(assert (= (=> (and (or (and x3914 (and (= x1299 x4084) (= x3105 x293))) (and (not x3914) (and (= (+ 32 x1299) x4084) (= x293 x42)))) (and (= (= 0 x42) x3914) (= (x3933 x3105 32) x42))) x220) x1534))
(assert (= x222 (x4195 (x230 64 x590 x222))))
(assert (= (x250 (x230 64 x761 x630)) 64))
(assert (x2466 4 x739))
(assert (< (x230 64 x4004 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1158))
(assert (x3404 x3230))
(assert (not (x2614 (x230 64 x3036 9))))
(assert (x3395 (- x600 x3751)))
(assert (= x3513 (x4195 (x230 64 x897 x3513))))
(assert (x1327 x3230 16777216))
(assert (x1384 x2734))
(assert (x2466 18446744073709551616 x1630))
(assert (x3395 (- x3193 x1028)))
(assert (= 64 (x250 (x230 64 x4020 x3622))))
(assert (= (and x1495 x3349) x647))
(assert (x1000 x4129))
(assert (x2466 340282366920938463463374607431768211456 x3403))
(assert (= (or x1248 x87) x1420))
(assert (= (or x1774 x1476) x2941))
(assert (= x864 (and x2941 (not x3362))))
(assert (= x482 (and x2409 x3386)))
(assert (= x907 (or x3054 x2033)))
(assert (= (and (not x3140) x157) x4137))
(assert (x1384 x3897))
(assert (= (=> (and (= (+ 1 x1713) x307) (= (ite (not (= 0 x1345)) 1 0) x2851) (= (x230 64 x610 14) x1713) (= x1345 (x2200 x307)) (= x610 (ite x3140 1 0)) (= (= 0 x2851) x3330)) (and (=> (and x3330 (and (= x573 x2212) (= x3639 x2825) (= 224 x3208) (= x1137 x3397))) x2301) (=> (and (not x3330) (and (and (= x3087 512) (= (x230 64 x3124 x2956) x2625) (= 512 x234) (= x3124 (x2009 16777215 x3065)) (= (x230 64 x761 x2625) x1676) (<= x3711 1099511627775) (= x3711 (x1381 x1676)) (>= 18446744073709551615 x2590) (= x3180 (x1798 x1676)) (= (+ 1 x1676) x2020) (= x2600 (x3282 x2020)) (= (> x3440 x573) x3093) (<= x3180 1099511627775) (= (ite x3140 1 0) x552) (= (* x2600 100000000000000) x3440) (= x2590 (x262 x2020)) (>= 281474976710655 x1722) (= x1722 (x4013 x2020)) (>= 18446744073709551615 x2600) (= (x230 64 x552 14) x2956)) (or (and (and (= x3273 (* x2600 100000000000000)) (= x463 x3273) (= 0 x927)) (not x3093)) (and x3093 (and (= x1971 (x2009 18446744073709551615 x89)) (= x89 (x3737 (- x2600 x1505))) (= x927 x1971) (= x573 x463) (= 0 x1852) (= x3259 (x323 x573 100000000000000)) (<= 100000000000000 x573) (>= 340282366920938463463374607431768211455 x573) (= x1505 (x2009 18446744073709551615 x3259)) (= x3202 100000000000000) (not (< x2600 x1505))))))) x891))) x294))
(assert (x1725 x1028 (- x36 x2450)))
(assert (not (x2614 (x230 64 0 x242))))
(assert (x1682 x1308))
(assert (x1384 x4039))
(assert (x3395 (- x3751 x36)))
(assert (x3395 (- x1028 x3751)))
(assert (x1327 (* x2102 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1037))
(assert (x3395 1000000))
(assert (x1384 x59))
(assert (not (x2614 (x230 64 x2782 x2655))))
(assert (> (x230 64 x3212 14) 10000))
(assert (x1384 x4239))
(assert (x1804 x1028 x36 x753 x4099))
(assert (x2466 2 x3519))
(assert (= (and x4062 x2883) x1476))
(assert (x3295 x3193 x600 x36 x1028))
(assert (x3395 x1572))
(assert (x1384 x957))
(assert (x1384 x199))
(assert (x3404 (* x3931 4294967296)))
(assert (=> (<= x3183 10000) (= 0 (x2128 x3183))))
(assert (= (x3933 x602 1) (x3377 (* 2 x602))))
(assert (x3404 (* 2 x3869)))
(assert (x1000 1000000))
(assert (x1384 x576))
(assert (= x1828 (and x821 x2832)))
(assert (x1384 x4069))
(assert (= (=> (and (= (< 3 x3789) x2662) (or (and (and (= (+ 2 x1416) x2067) (= (x3763 x3789 2) x856)) x2662) (and (not x2662) (and (= x856 x3789) (= x2067 x1416))))) x1203) x3732))
(assert (x2547 x2653 256))
(assert (x3404 (* x3065 340282366920938463463374607431768211456)))
(assert (x3295 x753 x4099 x4157 x1514))
(assert (not (x2614 (x230 64 x2098 x3410))))
(assert (x3404 x3259))
(assert (x1384 x2159))
(assert (= (x3763 x206 16) (x323 x206 65536)))
(assert (= x3902 (and x1865 (not x531))))
(assert (x1384 x2030))
(assert (= (x323 x3758 340282366920938463463374607431768211456) (x3763 x3758 128)))
(assert (x1384 x843))
(assert (= (and x2634 (not x3898)) x2902))
(assert (= x4088 (=> (and (or (and x2798 (and (= (+ x2517 2) x3422) (= x4198 (x3763 x508 2)))) (and (and (= x2517 x3422) (= x4198 x508)) (not x2798))) (= x2798 (< 3 x508))) x894)))
(assert (= (=> (and (= x3397 x566) (= x3208 x505) (= x537 x2212) (= x3079 x3639) (= x1010 x102)) x1814) x2301))
(assert (x2466 1000000000000000000 x3038))
(assert (= (or x835 x2365) x3501))
(assert (= (and x3093 x1758) x1337))
(assert (> (x230 64 x4020 x3622) 10000))
(assert (= x1280 (x4195 (x230 64 0 x1280))))
(assert (= x1762 (=> (and (and (= x3284 (x3933 x108 4)) (= x3029 (= 0 x3284))) (or (and x3029 (and (= x1160 x108) (= x3171 x4091))) (and (and (= x3171 (+ x4091 4)) (= x1160 x3284)) (not x3029)))) x1478)))
(assert (= (x3763 x1162 8) (x323 x1162 256)))
(assert (= (x3377 (* 256 x272)) (x3933 x272 8)))
(assert (= (x2128 (+ 1 x2295)) (x2128 x2295)))
(assert (x3404 (* 256 x4242)))
(assert (= (x2128 (x230 64 x3124 x2956)) (x230 64 x3124 x2956)))
(assert (x1682 x3674))
(assert (not (x2614 (x230 64 x3930 x2566))))
(assert (x1327 (* x2649 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1327 (ite (< x1258 256) (x521 2 x1258) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x230 64 x2351 14) 10000))
(assert (= x3978 (or x879 x1688)))
(assert (x2547 x1008 4294967296))
(assert (x1327 (* 340282366920938463463374607431768211456 x357) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1270))
(assert (< 10000 (x230 64 x2678 6)))
(assert (= (or x663 x2692) x1706))
(assert (= 0 (x2128 1295524075)))
(assert (= 14 (x4195 (x230 64 x339 14))))
(assert (= (or x426 x38) x1362))
(assert (= x369 (or x4216 x2633)))
(assert (x3395 x770))
(assert (x295 x2040))
(assert (x1384 x1034))
(assert (= (and (not x103) x1893) x819))
(assert (x1384 x1081))
(assert (x3395 x463))
(assert (x1384 x552))
(assert (x2547 x1144 4294967296))
(assert (x1384 x4185))
(assert (x1384 x3505))
(assert (= (x3933 x3449 8) (x3377 (* x3449 256))))
(assert (x1204 x3142 x2773))
(assert (x1384 x1073))
(assert (x1327 (* x581 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2614 1295524075))
(assert (x1384 x1155))
(assert (= (and (not x4107) x3239) x685))
(assert (> (x230 64 x1648 5) 10000))
(assert (= x3531 (=> (= x1312 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3372)) (and (=> (and x1312 (= x966 0)) x4153) (=> (and (and (and (= (+ 1 x2092) x2647) (= x1992 (x3933 x3757 128)) (= x1077 (x230 64 x3372 x2647)) (= x3757 (x4238 x1077)) (= (= x1992 0) x2203)) (or (and (and (= x2185 0) (= x1737 x3757)) x2203) (and (and (= 128 x2185) (= x1992 x1737)) (not x2203)))) (not x1312)) x3300)))))
(assert (= (=> (and (= x4229 (< 15 x201)) (or (and (and (= x201 x2920) (= x968 x2339)) (not x4229)) (and x4229 (and (= (+ 4 x968) x2339) (= x2920 (x3763 x201 4)))))) x838) x2149))
(assert (x1384 x2865))
(assert (x1725 x36 (- x1028 x4157)))
(assert (=> (<= x4177 10000) (= (x2128 x4177) 0)))
(assert (= (=> (and (and (= x44 (= x1430 0)) (= x1430 (x3933 x3590 16))) (or (and (not x44) (and (= x396 (+ x2509 16)) (= x2670 x1430))) (and (and (= x3590 x2670) (= x2509 x396)) x44))) x3517) x3628))
(assert (= x198 (and x817 (not x1891))))
(assert (= 9 (x4195 (x230 64 x2713 9))))
(assert (x2614 1099511627774))
(assert (= (x3763 x1377 16) (x323 x1377 65536)))
(assert (= x1219 (=> (and (= (< 4294967295 x1949) x4158) (or (and (and (= (+ 32 x1954) x1667) (= x468 (x3763 x1949 32))) x4158) (and (and (= x468 x1949) (= x1954 x1667)) (not x4158)))) x1989)))
(assert (x1384 x62))
(assert (= (and (not x3252) x3109) x1879))
(assert (x2547 x2813 256))
(assert (x1384 x2593))
(assert (x1384 x1996))
(assert (= (and (not x1499) x2917) x3020))
(assert (= (or x2808 x715) x1351))
(assert (= x2492 (and x1223 x1525)))
(assert (= (x323 x1479 4294967296) (x3763 x1479 32)))
(assert (= x817 (or x3597 x1908)))
(assert (= (x323 x3081 256) (x3763 x3081 8)))
(assert (= (x3763 x2663 64) (x323 x2663 18446744073709551616)))
(assert (= (or x1359 x2844) x4221))
(assert (=> (<= x961 10000) (= (x2128 x961) 0)))
(assert (x1327 (ite (< x3254 256) (x521 2 x3254) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1684) x3653) (and (=> (and (not x3653) (and (and (= x2801 (> x4202 340282366920938463463374607431768211455)) (= (ite (>= 255 x1684) x3709 (x1161 65280 x1684)) x1785) (= (x230 64 x1785 x282) x1390) (= x3709 (x882 (+ x1684 65280))) (= x4202 (x1741 x1390)) (= x282 (+ x1829 1))) (or (and (not x2801) (and (= x4202 x3887) (= 0 x3369))) (and x2801 (and (= x3887 (x3763 x4202 128)) (= x3369 128)))))) x3486) (=> (and (and (= x3758 (x3933 x3519 1)) (= x4055 (= 0 x3758)) (= 254 x3175) (= x3519 (x2464 x4251)) (= 255 x3733)) x3653) (and (=> (and (not x4055) (and (or (and (and (= 0 x4143) (= x3758 x2360)) (not x993)) (and (and (= 128 x4143) (= x2360 (x3763 x3758 128))) x993)) (= x993 (< 340282366920938463463374607431768211455 x3758)))) x3471) (=> (and x4055 (= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x243))))) x1201))
(assert (= (x250 (x230 64 x1209 x1454)) 64))
(assert (x1384 x1722))
(assert (= x1221 (=> (and (= x71 x4242) (= (ite (< 1 x2354) (+ 1 x2551) x2551) x2604) (= (x3737 (- x2604 1)) x71)) x4102)))
(assert (= (x2128 100000000) 0))
(assert (< 10000 (x230 64 x3836 14)))
(assert (= (or x8 x4208) x181))
(assert (= (or x1152 x3826) x2826))
(assert (x2547 x3758 340282366920938463463374607431768211456))
(assert (x1384 x1524))
(assert (x1384 x2347))
(assert (= (x2128 (+ 1 x1414)) (x2128 x1414)))
(assert (not (x2614 (x230 64 x1168 x2262))))
(assert (= x1220 (=> (and (or (and (not x3901) (and (= x201 x1205) (= x221 x968))) (and x3901 (and (= (x3763 x1205 8) x201) (= x968 (+ x221 8))))) (= x3901 (< 255 x1205))) x2149)))
(assert (x1327 x89 18446744073709551616))
(assert (= x2365 (and x1351 (not x2470))))
(assert (= x2249 (=> (and (or (and (and (= x1212 x1996) (= x1445 x274)) x2156) (and (and (= x2498 x1445) (= x1996 (+ 2 x1212))) (not x2156))) (and (= (x3933 x274 2) x2498) (= x2156 (= 0 x2498)))) x810)))
(assert (x3404 x70))
(assert (x1384 x739))
(assert (x1384 x2005))
(assert (= 64 (x250 (x230 64 x1843 x3571))))
(assert (= 9 (x4195 (x230 64 x3036 9))))
(assert (x1384 x807))
(assert (x2060 x89))
(assert (x1327 x3674 16777216))
(assert (x1327 x2426 18446744073709551616))
(assert (x1384 x2357))
(assert (= x1147 (x4195 (x230 64 255 x1147))))
(assert (x3295 x36 x1028 x3193 x600))
(assert (x3395 (- x3751 x600)))
(assert (= (x2128 (+ x2353 1)) (x2128 x2353)))
(assert (= x4188 (x3706 (x230 64 x4188 x1657))))
(assert (x2466 256 x2620))
(assert (= (and x2526 x3032) x1217))
(assert (x1384 x655))
(assert (x1384 x2854))
(assert (= (and x3417 (not x752)) x865))
(assert (=> (<= x3528 10000) (= 0 (x2128 x3528))))
(assert (= (x230 64 x1155 x1099) (x2128 (x230 64 x1155 x1099))))
(assert (x1804 x36 x1028 x3751 x3866))
(assert (= x265 (or x3589 x2932)))
(assert (x1000 x876))
(assert (x1384 x3619))
(assert (= (x250 (x230 64 x3212 14)) 64))
(assert (x1327 x2040 18446744073709551616))
(assert (x3404 (ite (< x1410 256) (x521 2 x1410) 0)))
(assert (x2466 2 x770))
(assert (x1384 x3345))
(assert (x2547 x3789 4))
(assert (x1725 x2450 (- x463 x36)))
(assert (= (and (not x2623) x2331) x2444))
(assert (= (x230 64 x2750 14) (x2128 (x230 64 x2750 14))))
(assert (x1384 x1396))
(assert (x1384 x518))
(assert (= x2150 (and x3029 x3169)))
(assert (x1384 x2063))
(assert (x1384 x1557))
(assert (x1327 (* 256 x2048) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3763 x3891 8) (x323 x3891 256)))
(assert (x3295 x463 x2450 x1028 x36))
(assert (x3395 (- x36 x3866)))
(assert (x2547 x4129 4))
(assert (not (x2614 (x230 64 x2026 x3622))))
(assert (not (x2614 (x230 64 x761 x242))))
(assert (= x1692 (and x1661 (not x3187))))
(assert (= (x4195 (x230 64 x1269 x3245)) x3245))
(assert (= (x230 64 255 x1147) (x2128 (x230 64 255 x1147))))
(assert (x3295 x3751 x3866 x3193 x600))
(assert (< 10000 (x230 64 x2190 x1657)))
(assert (= x941 (and x3882 x805)))
(assert (x3117 x2782))
(assert (x1000 x2948))
(assert (x1327 (* x4166 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2060 x617))
(assert (= (x230 64 x2220 x242) (x2128 (x230 64 x2220 x242))))
(assert (x1327 (* x1658 4294967296) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4195 (x230 64 x421 14)) 14))
(assert (x1384 x2050))
(assert (x1384 x2793))
(assert (= x1527 (=> (and (or (and (and (= x312 x3385) (= x2974 x949)) (not x1246)) (and x1246 (and (= x3385 (x3763 x312 16)) (= x2974 (+ x949 16))))) (= x1246 (< 65535 x312))) x309)))
(assert (x1384 x216))
(assert (= x1735 (and x641 (not x3314))))
(assert (x2060 x401))
(assert (= (x4195 (x230 64 0 x1316)) x1316))
(assert (x2547 x4005 65536))
(assert (= x4108 (and x3241 (not x1020))))
(assert (> (x230 64 x3950 5) 10000))
(assert (= x361 (=> (and (or (and (and (= x1585 x259) (= x2694 x241)) (not x885)) (and x885 (and (= (x3763 x241 32) x2694) (= x259 (+ 32 x1585))))) (= x885 (> x241 4294967295))) x2510)))
(assert (x1000 x4115))
(assert (= (x2128 (x230 64 x761 x630)) (x230 64 x761 x630)))
(assert (= (x2128 (x230 64 x2914 14)) (x230 64 x2914 14)))
(assert (x1384 x3422))
(assert (x1384 x3880))
(assert (= (or x1691 x3129) x255))
(assert (x3404 (* x3776 4)))
(assert (x1725 x753 (- x4099 x3751)))
(assert (not (x2614 (x230 64 x2490 x1542))))
(assert (x3404 x1612))
(assert (x1725 x3866 (- x3751 x1514)))
(assert (> (x230 64 x1843 x923) 10000))
(assert (x3404 (* x3799 4)))
(assert (x3395 4))
(assert (x2060 18446744073709551615))
(assert (x1384 x176))
(assert (x1384 x75))
(assert (= x1488 (=> (and (= (< 65535 x194) x1336) (or (and (not x1336) (and (= x194 x1346) (= x2057 x3044))) (and x1336 (and (= (+ x2057 16) x3044) (= x1346 (x3763 x194 16)))))) x3266)))
(assert (=> (<= x4188 10000) (= (x2128 x4188) 0)))
(assert (= (x3706 (x230 64 x1656 9)) x1656))
(assert (= x1961 (x4195 (x230 64 x2189 x1961))))
(assert (x3395 (- x3193 x3866)))
(assert (x1804 x463 x2450 x753 x4099))
(assert (x1384 x4177))
(assert (= x4249 (x4195 (x230 64 65535 x4249))))
(assert (x1384 x1358))
(assert (x3395 x2515))
(assert (x1725 x2450 (- x463 x1514)))
(assert (= (x3763 x55 128) (x323 x55 340282366920938463463374607431768211456)))
(assert (x1384 x4178))
(assert (x1384 x368))
(assert (x2466 340282366920938463463374607431768211456 x3081))
(assert (not (x2614 (x230 64 x961 x3622))))
(assert (= x1009 (x3706 (x230 64 x1009 x2545))))
(assert (x1384 x2449))
(assert (x1384 x570))
(assert (x2712 x722))
(assert (x1384 x3696))
(assert (= (x250 (x230 64 0 14)) 64))
(assert (= x2398 (and x2784 (not x1579))))
(assert (x1384 x1625))
(assert (x1384 x3355))
(assert (x1384 x2433))
(assert (= (or x3609 x2552) x3327))
(assert (> (x230 64 x2820 x3354) 10000))
(assert (= (or x3983 x1302) x3935))
(assert (< (x230 64 x1464 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1327 x2820 256))
(assert (not (x2614 (x230 64 x4242 x3658))))
(assert (= x167 (and x2175 x40)))
(assert (= (x2128 (x230 64 x2105 x2419)) (x230 64 x2105 x2419)))
(assert (x3395 x3193))
(assert (x349 x617))
(assert (x1384 x1800))
(assert (< (x230 64 x850 x2581) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2128 (x230 64 x10 5)) (x230 64 x10 5)))
(assert (= (or x4061 x3004) x3263))
(assert (= (=> (and (= (> x1144 4294967295) x4062) (or (and (and (= x440 (+ 32 x921)) (= x3655 (x3763 x1144 32))) x4062) (and (and (= x1144 x3655) (= x440 x921)) (not x4062)))) x855) x1839))
(assert (x3404 (* 2 x232)))
(assert (x2547 x1389 340282366920938463463374607431768211456))
(assert (not (x2614 (x230 64 x2713 9))))
(assert (x1384 x2441))
(assert (= (x4195 (x230 64 x2914 14)) 14))
(assert (x1384 x2562))
(assert (x3395 (- x3866 x1028)))
(assert (= 5 (x4195 (x230 64 x1224 5))))
(assert (= (x2128 (x230 64 x421 14)) (x230 64 x421 14)))
(assert (= (x4195 (x230 64 0 x1657)) x1657))
(assert (x3395 x3015))
(assert (= (x3933 x3799 2) (x3377 (* 4 x3799))))
(assert (x1384 x421))
(assert (x1804 x4099 x753 x1028 x36))
(assert (x1000 x3623))
(assert (= x2847 (or x1177 x3268)))
(assert (x2060 x2653))
(assert (x1384 x35))
(assert (x1384 x437))
(assert (x1804 x1514 x4157 x3193 x600))
(assert (= (and x2366 (not x462)) x2312))
(assert (= (x2128 (x230 64 x2190 x1280)) (x230 64 x2190 x1280)))
(assert (= x1276 (or x3333 x3582)))
(assert (x1327 x3508 18446744073709551616))
(assert (= (x3933 1 x614) (x3377 (ite (< x614 256) (x521 2 x614) 0))))
(assert (x3395 (- x463 x36)))
(assert (= (or x2902 x3607) x1966))
(assert (x1384 x1986))
(assert (x3395 100000000000000))
(assert (x1327 (* 340282366920938463463374607431768211456 x1308) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 (- x600 x1028)))
(assert (< 10000 (x230 64 0 x3622)))
(assert (x3395 (x521 2 x3251)))
(assert (= (=> (and (or (and (and (= x4114 x3091) (= x1107 x869)) (not x3968)) (and x3968 (and (= (x3763 x869 64) x1107) (= x3091 (+ x4114 64))))) (= x3968 (< 18446744073709551615 x869))) x3856) x3885))
(assert (= x242 (x4195 (x230 64 x761 x242))))
(assert (= x4001 (x4195 (x230 64 0 x4001))))
(assert (x1384 x1771))
(assert (= (x3706 (x230 64 x486 5)) x486))
(assert (= (x3377 (* 256 x2620)) (x3933 x2620 8)))
(assert (x1384 x383))
(assert (= 64 (x250 (x230 64 x1069 14))))
(assert (< 10000 (x230 64 0 x94)))
(assert (x1384 x3633))
(assert (x1000 x3532))
(assert (x3395 x108))
(assert (< 10000 (x230 64 x3199 9)))
(assert (x1384 x3937))
(assert (x3395 x1767))
(assert (x1384 x163))
(assert (x2547 x2760 2))
(assert (x3404 x3081))
(assert (= (and x1982 x2193) x4174))
(assert (x1384 x1252))
(assert (not (x2614 (x230 64 x1222 14))))
(assert (x1384 x4157))
(assert (= x157 (and x3149 (not x3496))))
(assert (x2547 x1433 256))
(assert (= (and x2314 (not x2716)) x1382))
(assert (= (or x2492 x461) x559))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3146 14)))
(assert (= (x323 x1226 18446744073709551616) (x3763 x1226 64)))
(assert (= (x3763 x1678 2) (x323 x1678 4)))
(assert (x1384 x3841))
(assert (x1384 x3465))
(assert (x1384 x3779))
(assert (= x2314 (or x964 x3018)))
(assert (= x3529 (or x1419 x3871)))
(assert (x1384 x749))
(assert (= 64 (x250 (x230 64 0 x3514))))
(assert (x1384 x3630))
(assert (x3395 (x521 2 x3881)))
(assert (= (and x558 x2069) x2952))
(assert (= 64 (x250 (x230 64 x2556 x3182))))
(assert (= (x3763 x4045 64) (x323 x4045 18446744073709551616)))
(assert (x3395 (- x4099 x4157)))
(assert (= (x3763 x2936 4) (x323 x2936 16)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x199 x1791)))
(assert (x1384 x4130))
(assert (x1384 x974))
(assert (= (x3706 (x230 64 x3836 14)) x3836))
(assert (x2614 65535))
(assert (= (x3763 x1084 64) (x323 x1084 18446744073709551616)))
(assert (= (and x2706 (not x699)) x1708))
(assert (= (=> (and (or (and (and (= (+ 64 x2734) x3370) (= x1780 (x3763 x1075 64))) x462) (and (and (= x3370 x2734) (= x1075 x1780)) (not x462))) (= x462 (< 18446744073709551615 x1075))) x3526) x3342))
(assert (x1204 x316 x401))
(assert (= 0 (x2128 1955195939)))
(assert (x1384 x3853))
(assert (x1384 x1459))
(assert (x2060 x3674))
(assert (= (=> (and (= (< 3 x2920) x3671) (or (and x3671 (and (= x1218 (+ 2 x2339)) (= (x3763 x2920 2) x3870))) (and (and (= x2339 x1218) (= x2920 x3870)) (not x3671)))) x3215) x838))
(assert (x3395 x4242))
(assert (x1384 x3617))
(assert (= x3455 (or x2650 x3817)))
(assert (= (x2128 (x230 64 x4004 14)) (x230 64 x4004 14)))
(assert (x3395 (- x753 x36)))
(assert (x1384 x2374))
(assert (x3295 x3193 x600 x4099 x753))
(assert (x1384 x1033))
(assert (= x3990 (=> (and (= x77 (> x4086 4294967295)) (or (and (and (= x312 x4086) (= x1465 x949)) (not x77)) (and x77 (and (= (+ x1465 32) x949) (= (x3763 x4086 32) x312))))) x1527)))
(assert (= (and (not x1793) x2753) x1935))
(assert (x1384 x1487))
(assert (x3404 (* 2 x3136)))
(assert (= (x3706 (x230 64 255 x1829)) 255))
(assert (= (=> (and (and (= false x4207) (= false x551) (= 36 x1358) (= x4090 x2910)) (and (and (= x1800 (x1819 x1638)) (= false x4147) (= (x45 x3376) x881) (= false x1962) (= false x4007) (<= x2178 340282366920938463463374607431768211455) (= 36 x3905) (= (x230 64 x881 9) x2797) (= x486 x2910) (= 2937758641 x2508) (= x3376 (x230 64 x486 5)) (>= 281474976710655 x881) (= x3041 false) (= false x78) (>= 127 x1849) (<= x1849 127) (= x29 x486) (= x3703 false) (<= 1 x1800) (= x2044 x2178) (= (x1912 x2797) x2178) (= x4090 x454)) (and (= x412 x3908) (>= 340282366920938463463374607431768211455 x2081) (<= 1 x2160) (= x3908 x454) (<= x9 127) (= x3357 (x230 64 x1698 9)) (<= x9 127) (= x4200 false) (>= 281474976710655 x1698) (= (x352 x3357) x2081) (= x767 (x230 64 x3908 5)) (= x437 785044283) (= (<= x2044 x2879) x1628) (= x643 false) (= false x2592) (= false x4126) (= x536 false) (= (x45 x767) x1698) (= x1892 x2081) (= (x1819 x1638) x2160) (= x2280 false)))) (and x1628 (=> (= (<= x1892 x2878) x3489) x3489))) x2297))
(assert (=> (<= x486 10000) (= (x2128 x486) 0)))
(assert (x1384 x2247))
(assert (=> (>= 10000 x2076) (= (x2128 x2076) 0)))
(assert (x1384 x3001))
(assert (x1384 x514))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2653 x2199)))
(assert (x3295 x600 x3193 x463 x2450))
(assert (x2547 x201 16))
(assert (x1384 x2437))
(assert (x1384 x1738))
(assert (= x2418 (x3706 (x230 64 x2418 14))))
(assert (x1725 x1028 x36))
(assert (x1384 x286))
(assert (= x950 (and x445 x574)))
(assert (x1384 x1224))
(assert (x1725 x4099 (- x753 x4157)))
(assert (x3395 (- x36 x1514)))
(assert (x1000 x3345))
(assert (x2547 x3846 65536))
(assert (= (and x866 x2555) x999))
(assert (x1384 x284))
(assert (= (x3706 (x230 64 x1785 x282)) x1785))
(assert (x1384 x1620))
(assert (x1384 x731))
(assert (> (x230 64 65535 x1951) 10000))
(assert (x1384 x2127))
(assert (x1384 x339))
(assert (x1384 x1317))
(assert (x2313 x50 x1974))
(assert (= (x2128 (+ x3923 1)) (x2128 x3923)))
(assert (x3395 (- x4099 x1514)))
(assert (= (or x3494 x872) x3198))
(assert (= x1711 (and x2219 x2798)))
(assert (x3295 x3193 x600 x753 x4099))
(assert (x1384 x1612))
(assert (= x937 (or x1111 x3270)))
(assert (not (x2614 (x230 64 x486 5))))
(assert (x2060 1))
(assert (= x2284 (and x1967 x2427)))
(assert (=> (>= 10000 x3805) (= 0 (x2128 x3805))))
(assert (= x3622 (x4195 (x230 64 x4020 x3622))))
(assert (x1384 x2794))
(assert (= (x2128 (+ x3635 1)) (x2128 x3635)))
(assert (x1384 x3374))
(assert (x2466 1000000000000000000 x1803))
(assert (= x1102 (=> (and (= x103 (< 3 x862)) (or (and x103 (and (= (x3763 x862 2) x2887) (= (+ x1757 2) x2182))) (and (and (= x2182 x1757) (= x862 x2887)) (not x103)))) x1913)))
(assert (x1384 x3372))
(assert (x1000 x3355))
(assert (x1725 x2450 (- x463 x753)))
(assert (x1384 x2907))
(assert (= x2682 (=> (and (= (< 18446744073709551615 x543) x101) (or (and (and (= x1465 x3676) (= x543 x4086)) (not x101)) (and x101 (and (= (+ 64 x3676) x1465) (= x4086 (x3763 x543 64)))))) x3990)))
(assert (x2466 340282366920938463463374607431768211456 x2516))
(assert (not (x2614 (x230 64 x2695 14))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2050 14)))
(assert (x1384 x1046))
(assert (x3404 (* x3398 4)))
(assert (x1384 x3790))
(assert (x1384 x980))
(assert (x1384 x1497))
(assert (x1384 x3191))
(assert (= (x3933 x2477 8) (x3377 (* x2477 256))))
(assert (= 64 (x250 (x230 64 x80 9))))
(assert (x1384 x1863))
(assert (x1384 x3498))
(assert (< 10000 (x230 64 x1269 x3245)))
(assert (x2466 2 x3869))
(assert (= (x3933 x1450 64) (x3377 (* x1450 18446744073709551616))))
(assert (= (x3933 x3880 64) (x3377 (* 18446744073709551616 x3880))))
(assert (< 10000 (x230 64 x2111 14)))
(assert (x2466 4 x3776))
(assert (= (x250 (x230 64 x2111 14)) 64))
(assert (x2466 1 (x521 2 x3254)))
(assert (x1725 x1514 (- x4157 x3193)))
(assert (= x2807 (or x1669 x1556)))
(assert (= x1258 (x3706 (x230 64 x1258 x1555))))
(assert (= (and x500 x3708) x3918))
(assert (= 255 (x3706 (x230 64 255 x1147))))
(assert (= (x3763 x601 2) (x323 x601 4)))
(assert (=> (<= x1410 10000) (= 0 (x2128 x1410))))
(assert (x1384 x342))
(assert (= (and x2097 (not x4199)) x2818))
(assert (= (x3763 x2268 1) (x323 x2268 2)))
(assert (x3295 x753 x4099 x3866 x3751))
(assert (x1384 x2442))
(assert (= 14 (x4195 (x230 64 x3524 14))))
(assert (x3395 (- x1028 x4157)))
(assert (= x56 (or x868 x2398)))
(assert (x3606 x1265 1000000))
(assert (x2466 4294967296 x457))
(assert (= (x250 (x230 64 x4145 x3873)) 64))
(assert (= (x250 (x230 64 x652 9)) 64))
(assert (= x2419 (x4195 (x230 64 x2105 x2419))))
(assert (= 0 (x2128 18446744073709551615)))
(assert (= (and (not x68) x364) x2022))
(assert (x1327 x3498 340282366920938463463374607431768211456))
(assert (= (x2128 (+ 1 x1829)) (x2128 x1829)))
(assert (= (x323 x4129 4) (x3763 x4129 2)))
(assert (= x2697 (and x210 x1531)))
(assert (= x3598 (and x3671 x3347)))
(assert (x1000 (- x1537 100000000)))
(assert (= 64 (x250 (x230 64 0 x1))))
(assert (= (x3763 x3630 8) (x323 x3630 256)))
(assert (x1384 x2729))
(assert (x1384 x4004))
(assert (x1327 x897 256))
(assert (= 14 (x4195 (x230 64 x2050 14))))
(assert (not (x2614 (x230 64 x162 14))))
(assert (= x855 (=> (and (or (and (not x3362) (and (= x4115 x3655) (= x2340 x440))) (and x3362 (and (= x4115 (x3763 x3655 16)) (= x2340 (+ 16 x440))))) (= (> x3655 65535) x3362)) x1797)))
(assert (= x778 (and x2320 (not x1039))))
(assert (=> (>= 10000 x199) (= (x2128 x199) 0)))
(assert (< (x230 64 x163 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4195 (x230 64 x1648 5)) 5))
(assert (x2060 x556))
(assert (=> (>= 10000 x1258) (= 0 (x2128 x1258))))
(assert (= (and x3349 (not x1495)) x4136))
(assert (x2466 4 x1572))
(assert (x1384 x3692))
(assert (x1384 x1767))
(assert (= (=> (and (= (+ (x3933 x1003 8) x1037) x811) (= (- 255 (ite (= 0 (x3933 x3917 1)) x3713 (+ x3713 1))) x1037)) x701) x3197))
(assert (= (and (not x296) x2952) x1340))
(assert (= x1486 (=> (and (or (and (not x2404) (= 1 x2347)) (and (and (= (ite (> x383 0) 0 1) x2347) (= (x3737 (- x2864 x1843)) x383) (= x2864 (x3344 x392)) (= (x230 64 0 x3571) x392) (>= 1099511627775 x2864)) x2404)) (= x2404 (= 0 x1432))) x1651)))
(assert (x2547 x3353 2))
(assert (= (x2128 (+ 2 x2295)) (x2128 x2295)))
(assert (x3395 (- x3751 x1028)))
(assert (= x3179 (and x1998 x449)))
(assert (= (x3706 (x230 64 x3670 x2096)) x3670))
(assert (= x3960 (and x3126 (not x3249))))
(assert (= (and x2714 x2597) x2471))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x1993)))
(assert (< (x230 64 x4145 x3873) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 (* 2 x2260)))
(assert (x1327 x1308 16777216))
(assert (x3295 x2450 x463 x1514 x4157))
(assert (x3395 x3757))
(assert (=> (>= 10000 x3790) (= 0 (x2128 x3790))))
(assert (= 64 (x250 (x230 64 x2433 5))))
(assert (x1384 x2326))
(assert (x1384 x2487))
(assert (x2466 340282366920938463463374607431768211456 x3757))
(assert (x1384 x4129))
(assert (= x1203 (=> (and (= x3731 (x3737 (- x3946 1))) (= x3946 (ite (< 1 x856) (+ x2067 1) x2067)) (= x2895 x3731)) x360)))
(assert (x1384 x3605))
(assert (= x2455 x3096))
(assert (= (x3763 x2820 8) (x323 x2820 256)))
(assert (= (=> (and (= x1531 (> x3976 3)) (or (and (not x1531) (and (= x2551 x2636) (= x2354 x3976))) (and x1531 (and (= x2551 (+ 2 x2636)) (= (x3763 x3976 2) x2354))))) x1221) x387))
(assert (x2060 x1948))
(assert (= (x3706 (x230 64 x3950 5)) x3950))
(assert (x3395 (- x753 x3866)))
(assert (x1384 x3194))
(assert (x1384 x3747))
(assert (= x3734 (=> (and (or (and x2716 (and (= x1536 x3995) (= x2833 x4212))) (and (and (= x1536 x3502) (= (+ 8 x4212) x2833)) (not x2716))) (and (= x3502 (x3933 x3995 8)) (= (= 0 x3502) x2716))) x2254)))
(assert (= (x3933 x108 4) (x3377 (* x108 16))))
(assert (> (x230 64 x1656 9) 10000))
(assert (x1000 x3570))
(assert (x2466 1000000 x1624))
(assert (= (and x3484 (not x3974)) x2114))
(assert (x1384 x1619))
(assert (= (or x3641 x1462) x734))
(assert (x3395 16))
(assert (x1384 x2090))
(assert (< 10000 (x230 64 x199 x1791)))
(assert (= (=> (and (or (and (and (= x1981 x132) (= x3232 x1558)) (not x2951)) (and x2951 (and (= (x3763 x1558 32) x3232) (= (+ 32 x132) x1981)))) (= x2951 (< 4294967295 x1558))) x430) x4135))
(assert (x2060 x3065))
(assert (x1327 (* x2487 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x230 64 0 14) 10000))
(assert (x1327 (* x770 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x295 x89))
(assert (= (x2128 (+ 1 x2915)) (x2128 x2915)))
(assert (= x364 (or x2658 x2424)))
(assert (x1384 x3057))
(assert (x1327 (* 65536 x1620) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x250 (x230 64 x1485 x1280))))
(assert (x1384 x854))
(assert (x1384 x2984))
(assert (= x362 (=> (and (= (> x3909 15) x3461) (or (and x3461 (and (= (x3763 x3909 4) x3801) (= (+ 4 x2468) x1979))) (and (not x3461) (and (= x3801 x3909) (= x1979 x2468))))) x781)))
(assert (= 0 (x3706 (x230 64 0 x3514))))
(assert (x1384 x3464))
(assert (x1000 x2920))
(assert (x1327 (ite (< x470 256) (x521 2 x470) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x407 x2297))
(assert (= (=> (and (or (and (and (= x271 x274) (= x1212 x1034)) x3562) (and (not x3562) (and (= x274 x112) (= (+ 4 x1034) x1212)))) (and (= (x3933 x271 4) x112) (= (= 0 x112) x3562))) x2249) x725))
(assert (= x445 (or x2454 x25)))
(assert (= x3149 (or x1574 x768)))
(assert (x1384 x3495))
(assert (x1384 x2400))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3449 x3651)))
(assert (= (or x2755 x2123) x2223))
(assert (not (x2614 (x230 64 x3081 x1890))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x174 x1171)))
(assert (x1384 x1457))
(assert (= (or x3894 x91) x3315))
(assert (not (x2614 (x230 64 0 x3571))))
(assert (x3395 (- x3193 x4099)))
(assert (< (x230 64 x2782 x2655) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 x554))
(assert (x1000 x2780))
(assert (x1000 x1144))
(assert (= x1680 (and x1042 (not x1261))))
(assert (x1384 x773))
(assert (x3395 (- x1514 x4099)))
(assert (= x2482 (and x2521 x420)))
(assert (x1327 x3065 16777216))
(assert (x1384 x1752))
(assert (= (and x214 x667) x3507))
(assert (x1682 x327))
(assert (x3395 x365))
(assert (= (=> (and (= (< 255 x2261) x1106) (or (and (and (= x359 (+ x656 8)) (= (x3763 x2261 8) x3864)) x1106) (and (and (= x3864 x2261) (= x359 x656)) (not x1106)))) x2691) x636))
(assert (= x2718 (and x2161 x425)))
(assert (x1384 x1450))
(assert (= (or x865 x318) x1379))
(assert (x1384 x1536))
(assert (x1327 x2357 16777216))
(assert (= (or x2934 x2930) x3247))
(assert (= x3521 (and x3802 x2462)))
(assert (= (x3706 (x230 64 x2782 x2655)) x2782))
(assert (= x3169 (or x2430 x915)))
(assert (= x2381 (=> (and (or (and (not x3148) (and (= x2578 x3393) (= (+ x925 32) x1644))) (and x3148 (and (= x3393 x3931) (= x1644 x925)))) (and (= x2578 (x3933 x3931 32)) (= (= x2578 0) x3148))) x458)))
(assert (= (=> (= x966 x70) x2074) x4153))
(assert (= 64 (x250 (x230 64 x2782 x2655))))
(assert (= (x2128 (x230 64 x1209 x1454)) (x230 64 x1209 x1454)))
(assert (= (x3933 x2516 128) (x3377 (* 340282366920938463463374607431768211456 x2516))))
(assert (x1384 x3911))
(assert (x3295 x753 x4099 x2450 x463))
(assert (x2547 x2944 340282366920938463463374607431768211456))
(assert (x1384 x1785))
(assert (x1000 x1107))
(assert (x3404 (* x272 256)))
(assert (not (x2614 (x230 64 0 x94))))
(assert (x2060 255))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x486 5)))
(assert (x3295 x1028 x36 x753 x4099))
(assert (=> (<= x2155 10000) (= (x2128 x2155) 0)))
(assert (x3395 (- x1514 x3193)))
(assert (> (x230 64 x2490 x1542) 10000))
(assert (= x1279 (and (not x2661) x57)))
(assert (< 10000 (x230 64 x2048 x86)))
(assert (x3395 x272))
(assert (= x2803 (=> (and (= x2714 (< 0 x3159)) (= (ite (= x1751 0) 0 1) x3159) (<= x1751 1099511627775) (= x435 (x230 64 0 x1316)) (= x1791 (x230 64 x4004 14)) (= x199 (x2009 16777215 x1308)) (= x4004 (ite x3140 1 0)) (= x1316 (x230 64 x199 x1791)) (= x1751 (x1096 x435))) (and (=> x2714 x3096) (=> (and (not x2714) (and (= x4119 (x230 64 x2653 x2199)) (= x1484 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x607))) (= x2005 (x2009 16777215 x1308)) (= (x2009 x2689 x1484) x3772) (= x267 (= x2689 x3772)) (= (x3763 x2005 8) x2653) (= (x230 64 x106 14) x2353) (= x607 (x2009 255 x1308)) (= x106 (ite x3140 1 0)) (= (+ x2295 2) x2199) (= (x1741 x4119) x2689) (= x2295 (+ x2353 1)))) (and (=> (and (and (= x1185 (x230 64 x2653 x2199)) (= x285 (= 0 x3772))) (not x267)) (and (=> (not x285) x2079) (=> (and (and (or (not x2361) (and x2361 (and (= x1394 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x2018))) (= (x2464 x2295) x1733) (= (x2009 x1733 x1394) x2159)))) (and (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3933 1 x3251)) x401) (= (x230 64 x2018 x593) x179) (= x2018 (x3763 x2653 8)) (= x408 (x2009 x316 x401)) (= x2361 (= x408 0)) (= (x230 64 x2018 x593) x1047) (= x3251 (x2009 255 x2653)) (= (x1339 x1047) x316) (= x593 (+ 1 x2295)))) x285) x2036))) (=> (and x267 (= x3543 0)) x3625)))))))
(assert (= (x2128 (+ x3427 1)) (x2128 x3427)))
(assert (= (x3706 (x230 64 0 x184)) 0))
(assert (= (x3933 1 x4065) (x3377 (ite (< x4065 256) (x521 2 x4065) 0))))
(assert (x1384 x2071))
(assert (x2614 16776960))
(assert (= (x3933 x3065 128) (x3377 (* 340282366920938463463374607431768211456 x3065))))
(assert (= (x250 (x230 64 x1656 9)) 64))
(assert (x1384 x1852))
(assert (x1384 x4064))
(assert (x2547 x862 4))
(assert (x2547 x3441 16))
(assert (= (x3706 (x230 64 x2018 x593)) x2018))
(assert (x3295 x463 x2450 x3193 x600))
(assert (> (x230 64 x3081 x2594) 10000))
(assert (x3404 (* 4 x2649)))
(assert (x1000 x3100))
(assert (= (x3763 x3813 1) (x323 x3813 2)))
(assert (x3395 (x521 2 x1157)))
(assert (x1384 x2578))
(assert (not (x2614 (x230 64 x590 x222))))
(assert (= (=> (and (= (= 0 x3828) x3765) (or (and x3765 (and (= x2318 (x230 64 0 x3622)) (= x1471 (ite (> x2326 0) 0 1)) (= (x3737 (- x1941 x1426)) x2326) (>= 1099511627775 x1941) (= x1426 (x2009 1099511627775 x2967)) (= (x3420 x2318) x1941))) (and (not x3765) (= 1 x1471)))) x1038) x3487))
(assert (= (or x3317 x2558) x299))
(assert (= (x2128 (x230 64 0 x3571)) (x230 64 0 x3571)))
(assert (x1384 x3613))
(assert (x3295 x3866 x3751 x2450 x463))
(assert (x1384 x2666))
(assert (x1384 x221))
(assert (x2466 6277101735386680763835789423207666416102355444464034512896 x3196))
(assert (x3295 x600 x3193 x1028 x36))
(assert (not (x2614 (x230 64 x761 x2625))))
(assert (= (x4195 (x230 64 x3212 14)) 14))
(assert (x1384 x2814))
(assert (x1327 (* 2 x3361) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x230 64 x3524 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x372 (and x954 x3566)))
(assert (= (x3933 x3361 1) (x3377 (* 2 x3361))))
(assert (x1384 x1035))
(assert (x2466 256 x3982))
(assert (= (and x786 x2525) x3559))
(assert (= (x3377 (* 65536 x1348)) (x3933 x1348 16)))
(assert (x1384 x3072))
(assert (< (x230 64 x3930 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 x2600))
(assert (= x596 (x4195 (x230 64 x2620 x596))))
(assert (= (x2128 (x230 64 x517 x1657)) (x230 64 x517 x1657)))
(assert (= (x2128 (+ 1 x1830)) (x2128 x1830)))
(assert (= x3306 x2218))
(assert (= (or x229 x416) x2151))
(assert (= 64 (x250 (x230 64 x2220 x242))))
(assert (x1327 (* x2859 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x546 (and x734 (not x3123))))
(assert (= (x3377 (* x2135 2)) (x3933 x2135 1)))
(assert (< (x230 64 x652 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x2128 1099511627775)))
(assert (x1725 x4157 (- x1514 x2450)))
(assert (x3395 x2793))
(assert (= x967 (and x2132 x2962)))
(assert (=> (>= 10000 x3124) (= (x2128 x3124) 0)))
(assert (= 64 (x250 (x230 64 x3199 9))))
(assert (x1384 x463))
(assert (x1327 x1904 340282366920938463463374607431768211456))
(assert (= x1168 (x3706 (x230 64 x1168 x2262))))
(assert (x1725 x3751 (- x3866 x1514)))
(assert (x1000 x410))
(assert (x3295 x3751 x3866 x600 x3193))
(assert (= (or x2323 x1113) x3106))
(assert (x3295 x36 x1028 x600 x3193))
(assert (= (or x1549 x771) x119))
(assert (> (x230 64 x2220 x242) 10000))
(assert (x1000 x1377))
(assert (x1000 x3668))
(assert (= (x250 (x230 64 x3047 x3141)) 64))
(assert (= x3873 (x4195 (x230 64 x4145 x3873))))
(assert (= x1586 (or x3867 x4076)))
(assert (x1384 x1938))
(assert (= (x323 x312 65536) (x3763 x312 16)))
(assert (x1384 x4081))
(assert (= (x323 x1174 4294967296) (x3763 x1174 32)))
(assert (x1725 x36 (- x1028 x4099)))
(assert (= x242 (x4195 (x230 64 x2220 x242))))
(assert (x1384 x271))
(assert (=> (<= x3881 10000) (= (x2128 x3881) 0)))
(assert (= x2634 (and x3446 (not x102))))
(assert (x1384 x724))
(assert (= (x2128 65280) 0))
(assert (= (and x3610 x465) x1117))
(assert (x1384 x447))
(assert (x1384 x2688))
(assert (= 64 (x250 (x230 64 65535 x4249))))
(assert (x2547 x3668 18446744073709551616))
(assert (x1384 x3364))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2713 9)))
(assert (not (x2614 (x230 64 x3191 x3069))))
(assert (x1384 x3656))
(assert (x1384 x444))
(assert (= x786 (and x102 x3446)))
(assert (x3404 x3945))
(assert (< 10000 (x230 64 x3790 9)))
(assert (= (x230 64 x3368 9) (x2128 (x230 64 x3368 9))))
(assert (x1384 x438))
(assert (= x1485 (x3706 (x230 64 x1485 x1280))))
(assert (= (=> (and (= x1241 (= x297 0)) (or (and (and (<= x237 1099511627775) (= x2127 (ite (= 0 x237) 1 0)) (= x1442 (x230 64 0 x1)) (= (x4227 x1442) x237)) x1241) (and (= 1 x2127) (not x1241)))) x2872) x353))
(assert (x2614 254742742))
(assert (= (x250 (x230 64 x3930 x2566)) 64))
(assert (= x2690 (and x210 (not x1531))))
(assert (= x1398 (and x583 x1899)))
(assert (x1804 x600 x3193 x463 x2450))
(assert (not (x2614 (x230 64 x3805 9))))
(assert (= 0 (x2128 6277101735386680763835789423207666416102355444464034512895)))
(assert (x3295 x36 x1028 x2450 x463))
(assert (= (x250 (x230 64 255 x1147)) 64))
(assert (x1521 x1948))
(assert (x2614 6277101735386680763835789423207666416102355444464034512896))
(assert (= x2379 (and (not x1900) x56)))
(assert (= (x250 (x230 64 x106 14)) 64))
(assert (x1384 x3846))
(assert (x3295 x753 x4099 x600 x3193))
(assert (= x1280 (x4195 (x230 64 x1690 x1280))))
(assert (= (x3706 (x230 64 x1690 x1280)) x1690))
(assert (= x2957 (=> (and (and (= (x3933 x3015 8) x3030) (= (= x3030 0) x3577)) (or (and (not x3577) (and (= x3122 x3030) (= x495 (+ 8 x2660)))) (and (and (= x3015 x3122) (= x495 x2660)) x3577))) x2499)))
(assert (= (x230 64 x1168 x2262) (x2128 (x230 64 x1168 x2262))))
(assert (x1804 x3193 x600 x463 x2450))
(assert (= (and (not x585) x1680) x2808))
(assert (x1384 x2040))
(assert (= x3141 (x4195 (x230 64 x3047 x3141))))
(assert (x1384 x1367))
(assert (x2466 256 x174))
(assert (= x2621 (x3706 (x230 64 x2621 x3622))))
(assert (x1384 x4198))
(assert (= x2669 (and (not x1238) x1472)))
(assert (x1384 x2629))
(assert (x3404 (* x590 256)))
(assert (= x1893 (or x3454 x2823)))
(assert (x1384 x2067))
(assert (x2547 x3623 4294967296))
(assert (x1384 x4209))
(assert (x1725 x1028 (- x36 x463)))
(assert (> (x230 64 x2477 x2994) 10000))
(assert (> (x230 64 65535 x4249) 10000))
(assert (not (x2614 (x230 64 0 x3977))))
(assert (= x2250 (=> (and (or (and x515 (and (= x1671 x228) (= x3542 x729))) (and (not x515) (and (= (+ 16 x729) x3542) (= x228 x1508)))) (and (= (x3933 x1671 16) x1508) (= (= 0 x1508) x515))) x2302)))
(assert (= x3573 (=> (and (= x1507 (+ x1187 (x3933 x3670 8))) (= (- 255 (ite (= 0 (x3933 x2071 1)) x1994 (+ 1 x1994))) x1187)) x627)))
(assert (x1384 x1548))
(assert (x1384 x2570))
(assert (x1384 x3683))
(assert (x1384 x3574))
(assert (> (x230 64 x1464 x3622) 10000))
(assert (x2466 1 (x521 2 x4081)))
(assert (x3395 x3831))
(assert (= x3524 (x3706 (x230 64 x3524 14))))
(assert (x2547 x410 16))
(assert (< (x230 64 x961 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1721))
(assert (= x31 (or x2953 x2277)))
(assert (= (=> (and (= (< 3 x3801) x2409) (or (and (and (= (x3763 x3801 2) x2999) (= (+ x1979 2) x3845)) x2409) (and (and (= x2999 x3801) (= x3845 x1979)) (not x2409)))) x714) x781))
(assert (= (or x1837 x3298) x1189))
(assert (= x3239 (or x2771 x3839)))
(assert (= (x323 x869 18446744073709551616) (x3763 x869 64)))
(assert (x1384 x2604))
(assert (x1000 x862))
(assert (x1384 x541))
(assert (x1384 x4246))
(assert (= (and x585 x1680) x715))
(assert (= x2472 x1540))
(assert (= (x4195 (x230 64 0 14)) 14))
(assert (x1384 x3075))
(assert (= (=> (and (or (and (not x1129) (and (= x3061 (+ x3663 4)) (= x1572 x1369))) (and (and (= x1663 x1572) (= x3663 x3061)) x1129)) (and (= x1369 (x3933 x1663 4)) (= x1129 (= 0 x1369)))) x1880) x945))
(assert (x1725 x4099 (- x753 x2450)))
(assert (= (x323 x2005 256) (x3763 x2005 8)))
(assert (= x3212 (x3706 (x230 64 x3212 14))))
(assert (=> (>= 10000 x3336) (= (x2128 x3336) 0)))
(assert (x2547 x3465 340282366920938463463374607431768211456))
(assert (x1804 x1028 x36 x3751 x3866))
(assert (= 9 (x4195 (x230 64 x652 9))))
(assert (= (x4195 (x230 64 x761 x630)) x630))
(assert (= (and (not x1412) x2740) x2587))
(assert (= x2307 (and x1472 x1238)))
(assert (= x742 (=> (and (= x327 (+ x1897 (x3933 x1785 8))) (= (ite (< 1 x172) (+ 1 x1705) x1705) x1897)) x3189)))
(assert (x2060 x3142))
(assert (= (or x456 x235) x2751))
(assert (x1725 x3193 (- x600 x4099)))
(assert (= (=> (and (or (and x3545 (and (= x1968 x2764) (= x1620 x1297))) (and (and (= x1620 x3884) (= x2764 (+ x1968 32))) (not x3545))) (and (= x3884 (x3933 x1297 32)) (= (= 0 x3884) x3545))) x926) x1772))
(assert (= (x250 (x230 64 0 x94)) 64))
(assert (x3395 (- x3751 x3193)))
(assert (= x3571 (x4195 (x230 64 x3528 x3571))))
(assert (x1384 x770))
(assert (= (x3933 x2260 1) (x3377 (* 2 x2260))))
(assert (= (=> (and (= x498 (> x3891 255)) (or (and (and (= x1942 x2088) (= x2936 x3891)) (not x498)) (and (and (= x2936 (x3763 x3891 8)) (= x1942 (+ x2088 8))) x498))) x2207) x3506))
(assert (= x761 (x3706 (x230 64 x761 x242))))
(assert (x1384 x862))
(assert (x1725 x1514 (- x4157 x4099)))
(assert (x1327 x3065 256))
(assert (= (or x1401 x2800) x322))
(assert (= (and x3109 x3252) x878))
(assert (x1384 x600))
(assert (x1384 x1663))
(assert (= (x3706 (x230 64 x2105 x2419)) x2105))
(assert (x1384 x3549))
(assert (x3395 x1128))
(assert (= (=> (and (or (and (and (= x88 x2228) (= x483 x3729)) (not x3011)) (and (and (= x483 (+ 8 x3729)) (= x88 (x3763 x2228 8))) x3011)) (= (> x2228 255) x3011)) x1936) x1530))
(assert (not (x2614 (x230 64 x3121 x291))))
(assert (x1384 x401))
(assert (=> (<= x3121 10000) (= 0 (x2128 x3121))))
(assert (x3404 (* x1658 4294967296)))
(assert (< 10000 (x230 64 x850 x2581)))
(assert (= (and (not x102) x373) x768))
(assert (= (and (not x3409) x393) x1152))
(assert (= (and x2685 x4134) x2935))
(assert (< 10000 (x230 64 x552 14)))
(assert (x1384 x2936))
(assert (x3395 (- x4099 x1028)))
(assert (x1384 x272))
(assert (x1384 x876))
(assert (x1000 x2653))
(assert (x1384 x881))
(assert (= (or x3554 x1889) x2320))
(assert (not (x2614 (x230 64 0 x3635))))
(assert (x1384 x3822))
(assert (x1000 x983))
(assert (x3404 (* 340282366920938463463374607431768211456 x3757)))
(assert (x1000 x3232))
(assert (= x4206 (=> (= (= x3660 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2929) (and (=> (and (and (and (= 0 x2287) (= (= 0 x1596) x2475) (= 1 x1079) (= x3305 (x230 64 0 x3635)) (= (x3763 x342 1) x1596) (= (+ 1 x1289) x3635) (= x342 (x1339 x3305))) (or (and (not x2475) (and (= x730 0) (= 1 x3670))) (and x2475 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3670)))) x2929) x3068) (=> (and (= x3660 x1507) (not x2929)) x627)))))
(assert (x1327 (* x3880 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 (- x1514 x1028)))
(assert (= (or x1712 x2027) x1600))
(assert (x1384 x3926))
(assert (= (x3706 (x230 64 x3166 x3571)) x3166))
(assert (x1725 x3193 (- x600 x753)))
(assert (= (and x4016 x1586) x1833))
(assert (x3404 (* x841 2)))
(assert (not (x2614 (x230 64 x796 5))))
(assert (x1384 x3770))
(assert (x3404 1000000000000000000000000))
(assert (= (and x783 x2231) x771))
(assert (=> (<= x162 10000) (= 0 (x2128 x162))))
(assert (= (or x2256 x3533) x1330))
(assert (x3295 x36 x1028 x753 x4099))
(assert (= x47 (=> (and (= (+ x4246 (x3933 x1030 8)) x966) (= x4246 (- 255 (ite (= 0 (x3933 x3136 1)) x809 (+ 1 x809))))) x4153)))
(assert (= (x250 (x230 64 1 14)) 64))
(assert (x2466 4294967296 x2949))
(assert (= (x3763 x543 64) (x323 x543 18446744073709551616)))
(assert (x1327 (* x3121 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2567))
(assert (x1000 x3353))
(assert (x3395 (- x753 x1028)))
(assert (= x619 (=> (and (= x3249 (< 3 x4129)) (or (and (and (= x4129 x2441) (= x951 x3602)) (not x3249)) (and x3249 (and (= (+ 2 x951) x3602) (= x2441 (x3763 x4129 2)))))) x2903)))
(assert (= x3215 (=> (and (= (ite (< 1 x3870) (+ x1218 1) x1218) x1196) (= x3364 (+ x1196 (x3933 x2048 8)))) x591)))
(assert (= x1602 (or x3229 x1227)))
(assert (= x73 (and x152 x98)))
(assert (x1384 x3015))
(assert (x1725 x1514 (- x4157 x2450)))
(assert (x1384 x3254))
(assert (= x3648 (=> (and (or (and (and (= x2135 x679) (= x1139 (+ x2049 2))) (not x2166)) (and x2166 (and (= x1139 x2049) (= x3776 x2135)))) (and (= x679 (x3933 x3776 2)) (= (= x679 0) x2166))) x1775)))
(assert (x1384 x2913))
(assert (x3404 (* 256 x2670)))
(assert (x1327 (* x1812 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3410 (x4195 (x230 64 x2098 x3410))))
(assert (= x3349 (and x1793 x2753)))
(assert (x1000 x3572))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2351 14)))
(assert (x1384 x2227))
(assert (x1384 x1644))
(assert (= (x250 (x230 64 x2048 x86)) 64))
(assert (< (x230 64 x3081 x1890) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x250 (x230 64 0 x1280)) 64))
(assert (not (x2614 (x230 64 x652 9))))
(assert (= x915 (and (not x3365) x164)))
(assert (x3295 x600 x3193 x3866 x3751))
(assert (= (=> (and (or (and (not x574) (and (= (+ 64 x1328) x3872) (= x2949 x3755))) (and (and (= x2949 x2859) (= x1328 x3872)) x574)) (and (= (x3933 x2859 64) x3755) (= x574 (= 0 x3755)))) x1242) x2916))
(assert (x1384 x3783))
(assert (x1000 x1075))
(assert (= (x230 64 x2678 6) (x2128 (x230 64 x2678 6))))
(assert (= (x3377 (* x28 4294967296)) (x3933 x28 32)))
(assert (= (and x1915 x1607) x3018))
(assert (= x2605 (and x3056 x827)))
(assert (= (and x218 x3379) x3612))
(assert (x3395 x467))
(assert (= x2750 (x3706 (x230 64 x2750 14))))
(assert (x1384 x1707))
(assert (x1725 x4099 (- x753 x463)))
(assert (= (x323 x3976 4) (x3763 x3976 2)))
(assert (x2060 x3646))
(assert (x1384 x3748))
(assert (x1327 x3026 1000000000000000000000000))
(assert (= (=> (and (and (= x2570 (x3933 x2670 8)) (= x1301 (= 0 x2570))) (or (and (and (= x396 x1869) (= x2670 x1548)) x1301) (and (not x1301) (and (= x1869 (+ 8 x396)) (= x2570 x1548))))) x3699) x3517))
(assert (= (x4195 (x230 64 x2026 x3622)) x3622))
(assert (x2547 x543 18446744073709551616))
(assert (= (x250 (x230 64 x2018 x593)) 64))
(assert (x1384 x116))
(assert (= (and x2925 x1106) x1960))
(assert (= (and x2751 (not x625)) x1302))
(assert (< (x230 64 x1222 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x775))
(assert (x2466 1000000 x1803))
(assert (= x4117 (and x2706 x699)))
(assert (x1384 x1085))
(assert (x2547 x4106 340282366920938463463374607431768211456))
(assert (x1384 x3776))
(assert (x1384 x3114))
(assert (x3395 x3065))
(assert (x1725 x3751 (- x3866 x4099)))
(assert (x1851 x2967))
(assert (< (x230 64 x1698 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1090))
(assert (x4196 x2244))
(assert (x1384 x1166))
(assert (x2547 x3630 256))
(assert (x1682 x3065))
(assert (x3395 x3105))
(assert (x3295 x3193 x600 x463 x2450))
(assert (x1725 x463 (- x2450 x4157)))
(assert (x2547 x3887 18446744073709551616))
(assert (x1725 x753 (- x4099 x463)))
(assert (= x12 (and x3327 (not x2586))))
(assert (x1384 x4044))
(assert (x1000 x2936))
(assert (x3395 (- x3193 x3751)))
(assert (= x261 (=> (and (= (x230 64 x1843 x923) x3775) (= (x2009 16777215 x1308) x1269) (= x923 (x230 64 x1269 x3245)) (= (ite x3140 1 0) x2914) (= (x230 64 x2914 14) x3245) (= x2017 (+ 1 x3775))) x2455)))
(assert (x1725 x3193 x600))
(assert (= x1546 (or x1013 x1287)))
(assert (x2466 2 x554))
(assert (= (x2128 (+ x3775 1)) (x2128 x3775)))
(assert (< (x230 64 x2820 x3354) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2614 1955195939))
(assert (x1384 x617))
(assert (x2466 100000000000000 x927))
(assert (x1000 x3789))
(assert (x3395 x3751))
(assert (x2466 2 x1812))
(assert (< 10000 (x230 64 x10 5)))
(assert (= (=> (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1030) x558) (and (=> (and x558 (and (and (= (= x1606 0) x296) (= 1 x3613) (= (x3763 x2268 1) x1606) (= (x85 x2092) x2268) (= 0 x1862)) (or (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3372) x296) (and (and (= x1035 0) (= 1 x3372)) (not x296))))) x3531) (=> (and (and (or (and (not x2623) (and (= x278 x54) (= x1060 128))) (and x2623 (and (= x54 x2102) (= 0 x1060)))) (and (= (= x278 0) x2623) (= x1361 (x230 64 x1030 x1025)) (= (x3280 x1361) x2102) (= x278 (x3933 x2102 128)) (= x1025 (+ 1 x4001)))) (not x558)) x2668))) x1811))
(assert (x1384 x3543))
(assert (= x65 (and x2889 (not x2367))))
(assert (x349 x3570))
(assert (= (x250 (x230 64 x3183 14)) 64))
(assert (x2614 4294967295))
(assert (x1725 x1028 (- x36 x600)))
(assert (= x449 (or x3812 x4169)))
(assert (x3395 x215))
(assert (= (x230 64 x2713 9) (x2128 (x230 64 x2713 9))))
(assert (x1384 x1690))
(assert (x1725 x3193 (- x600 x3751)))
(assert (x1384 x3946))
(assert (x1384 x2049))
(assert (x2060 x2384))
(assert (= x795 (or x2004 x1021)))
(assert (x3395 x927))
(assert (not (x2614 (x230 64 x1843 x923))))
(assert (= (=> (= x471 (= 0 x779)) (and (=> (and x471 (and (= x102 x1349) (= x2825 x913) (= x3192 x1137) (= x1514 x573) (= x2374 128))) x3938) (=> (and (not x471) (and (and (= x1252 (ite (= 5 x3925) (ite (= x3925 5) 1 0) (ite (= 6 x3925) 1 0))) (= (< 0 x2877) x3688) (= x1168 (x2009 16777215 x3065)) (= x2262 (x230 64 x162 14)) (= (x230 64 0 x1813) x1132) (= (x230 64 x1168 x2262) x1813) (>= 1099511627775 x2877) (= (ite x3140 1 0) x162) (= (not x102) x3140) (= x151 (ite x3140 1 0)) (= 0 x2163) (= x2877 (x1381 x1132)) (= 0 x1252)) (or (and (= x2985 (ite x3688 1 0)) x3688) (and (not x3688) (and (= x3206 (x1798 x2557)) (>= 1099511627775 x3206) (= x2557 (x230 64 0 x1813)) (= (ite (< 0 x3206) 1 0) x2985)))))) x3773))) x2296))
(assert (x3395 (- x4157 x600)))
(assert (= x1149 (or x826 x4077)))
(assert (x1384 x925))
(assert (x2466 256 x3798))
(assert (= x4113 (and x296 x2952)))
(assert (= x3622 (x4195 (x230 64 0 x3622))))
(assert (x1384 x765))
(assert (x3295 x463 x2450 x600 x3193))
(assert (x1384 x215))
(assert (= (and x4132 x839) x3383))
(assert (x3404 x3508))
(assert (x1725 x3751 (- x3866 x600)))
(assert (= (and x98 (not x152)) x142))
(assert (= (x3933 x4166 128) (x3377 (* x4166 340282366920938463463374607431768211456))))
(assert (= (x3763 x410 4) (x323 x410 16)))
(assert (< 10000 (x230 64 x1410 x2196)))
(assert (= (=> (and (= x751 (ite (> x3320 1) (+ 1 x2571) x2571)) (= (x3737 (- x751 1)) x1273) (= x556 x1273)) x1045) x3722))
(assert (=> (>= 10000 x1785) (= 0 (x2128 x1785))))
(assert (x2547 x2694 65536))
(assert (x1384 x1641))
(assert (x1327 x1308 256))
(assert (= (=> (and (or (and (and (= x729 x438) (= x2247 x1671)) x2979) (and (not x2979) (and (= (+ 32 x438) x729) (= x1885 x1671)))) (and (= x2979 (= x1885 0)) (= (x3933 x2247 32) x1885))) x2250) x1834))
(assert (= (and (not x4056) x265) x2469))
(assert (x1384 x2339))
(assert (= x3021 (and x56 x1900)))
(assert (x3404 2))
(assert (= (or x1529 x2306) x150))
(assert (= (x3706 (x230 64 x2351 14)) x2351))
(assert (x1384 x4219))
(assert (x2547 x1707 18446744073709551616))
(assert (x3395 x174))
(assert (= x2742 (x3706 (x230 64 x2742 x242))))
(assert (= (and x3599 x1477) x1135))
(assert (x2547 x468 65536))
(assert (=> (<= x1224 10000) (= (x2128 x1224) 0)))
(assert (x1384 x1377))
(assert (x3404 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2547 x1009 256))
(assert (x1327 x2967 1099511627776))
(assert (x1000 x1949))
(assert (= x3843 (or x3452 x394)))
(assert (= (x3706 (x230 64 x1269 x3245)) x1269))
(assert (= (x250 (x230 64 x2678 6)) 64))
(assert (= x3930 (x3706 (x230 64 x3930 x2566))))
(assert (x1384 x50))
(assert (x1384 x2177))
(assert (x1384 x2575))
(assert (= 64 (x250 (x230 64 x796 5))))
(assert (x3395 x4190))
(assert (x3404 x671))
(assert (x2547 x2268 2))
(assert (= (and (not x3111) x528) x3302))
(assert (= x3000 (=> (and (= (+ (x3933 x2155 8) x3447) x966) (= (- 255 (ite (= (x3933 x770 1) 0) x3213 (+ x3213 1))) x3447)) x4153)))
(assert (x3395 (- x3193 x36)))
(assert (x1000 x724))
(assert (= (x3763 x2343 2) (x323 x2343 4)))
(assert (x295 x3508))
(assert (x1384 x1365))
(assert (x1384 x764))
(assert (x2466 18446744073709551616 x176))
(assert (x3395 x1658))
(assert (= (=> (and (or (and (and (= x4045 x1174) (= x2227 x3748)) (not x583)) (and (and (= (x3763 x4045 64) x1174) (= (+ 64 x2227) x3748)) x583)) (= (> x4045 18446744073709551615) x583)) x363) x689))
(assert (x2060 x1733))
(assert (=> (<= x2018 10000) (= (x2128 x2018) 0)))
(assert (= (or x2379 x3021) x90))
(assert (x1384 x1958))
(assert (= (and x1917 x3010) x666))
(assert (x3395 (- x1028 x753)))
(assert (x1000 x1009))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1258 x1555)))
(assert (x1384 x3789))
(assert (= (x3706 (x230 64 x3368 9)) x3368))
(assert (x1384 x459))
(assert (x1000 x201))
(assert (= (=> (and (or (and (and (= x1663 x3798) (= x4204 x3663)) x431) (and (not x431) (and (= x1663 x4194) (= x3663 (+ x4204 8))))) (and (= x431 (= x4194 0)) (= (x3933 x3798 8) x4194))) x945) x1603))
(assert (x1725 x3866 (- x3751 x4157)))
(assert (= (or x2309 x3006) x1118))
(assert (x1804 x2450 x463 x1514 x4157))
(assert (= x306 (and (not x741) x188)))
(assert (x3404 x3114))
(assert (x1384 x1613))
(assert (x1327 x3167 1000000000000000000000000))
(assert (x1384 x3602))
(assert (x1000 x3887))
(assert (= (x3933 x2949 32) (x3377 (* x2949 4294967296))))
(assert (= x2201 (or x3647 x1589)))
(assert (x2547 x100 4))
(assert (= (and (not x2369) x2919) x1765))
(assert (x1384 x410))
(assert (x2547 x2948 256))
(assert (x1384 x638))
(assert (x1384 x2217))
(assert (= (and x3577 x202) x1747))
(assert (x1384 x2388))
(assert (x1327 (* x590 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x650 (=> (and (or (and x3322 (and (= (x3763 x3532 128) x4045) (= 128 x2227))) (and (and (= x3532 x4045) (= 0 x2227)) (not x3322))) (and (= x4217 (ite (< 1 x2827) (+ x3682 1) x3682)) (= x3121 (+ (x3933 x2477 8) x4217)) (= x3322 (> x3532 340282366920938463463374607431768211455)) (= (x230 64 x3121 x291) x1061) (= (x1741 x1061) x3532) (= x291 (+ x2994 1)))) x689)))
(assert (= (and x889 (not x207)) x879))
(assert (x1384 x1653))
(assert (= (and x376 x3257) x1453))
(assert (= (=> (= (ite (= 0 x2347) 1 0) x2345) x406) x1651))
(assert (x1000 4294967296))
(assert (x4211 x556))
(assert (= (x230 64 x163 x3622) (x2128 (x230 64 x163 x3622))))
(assert (= 0 (x2128 115792089237316195423570985008687907853269984665640564039457584007913129639840)))
(assert (x1384 x4012))
(assert (= (=> (and (= (x230 64 x761 x630) x2703) (= x1933 (+ 1 x2703)) (= (x230 64 x3191 x3069) x630) (= (x2009 16777215 x3065) x3191) (= x3069 (x230 64 x1222 14)) (= x1222 (ite x3140 1 0))) x3299) x3795))
(assert (x1000 x3758))
(assert (= x2611 (and (not x1967) x2427)))
(assert (x1384 x3958))
(assert (x1384 x5))
(assert (x1000 x1678))
(assert (x3295 x463 x2450 x1514 x4157))
(assert (x1725 x463 (- x2450 x1514)))
(assert (x1384 x1658))
(assert (= (or x2656 x3020) x827))
(assert (x81 x2732))
(assert (x1384 x3062))
(assert (= x985 (and x3544 (not x4055))))
(assert (x1327 (* 256 x3015) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x590 (x3706 (x230 64 x590 x222))))
(assert (x3404 (* 256 x3670)))
(assert (not (x2614 (x230 64 x1009 x2545))))
(assert (x1000 x3394))
(assert (x1384 x488))
(assert (x1384 x2895))
(assert (x1384 x2080))
(assert (x1384 x2474))
(assert (x3295 x3866 x3751 x36 x1028))
(assert (not (x2614 (x230 64 x1030 x1025))))
(assert (x2547 x1878 256))
(assert (x1384 x2680))
(assert (= (x3763 x3986 1) (x323 x3986 2)))
(assert (= (x4195 (x230 64 x2820 x3354)) x3354))
(assert (= (=> (and (= x1388 (= 0 x1083)) (or (and x1388 (and (>= 1099511627775 x2742) (= x2742 (x1798 x3921)) (= (+ x3092 1) x2025) (<= x2220 1099511627775) (= x761 x4011) (= x3092 (x230 64 x761 x242)) (= (x230 64 x761 x242) x3921) (= x140 (x230 64 x2742 x242)) (= (x230 64 x761 x242) x527) (= x2220 (x1381 x527)) (= x1987 (x230 64 x2220 x242)))) (and (= 0 x4011) (not x1388)))) x1151) x3338))
(assert (= (x2128 (x230 64 x1785 x282)) (x230 64 x1785 x282)))
(assert (= x3742 (=> (and (or (and (and (= (x230 64 0 x1813) x2236) (<= x219 1099511627775) (<= x2222 1099511627775) (= (x230 64 0 x1813) x595) (= x219 (x1381 x2236)) (= x2080 1) (= x3897 x219) (= x2222 (x1798 x595)) (= x2222 x761)) x2136) (and (not x2136) (and (= x2080 0) (= x3897 0) (= x761 0)))) (= x2136 (< 0 x1637))) x294)))
(assert (x1804 x4099 x753 x3751 x3866))
(assert (x2547 x1949 4294967296))
(assert (not (x2614 (x230 64 0 x4001))))
(assert (x3395 (- x36 x463)))
(assert (< 10000 (x230 64 0 x1316)))
(assert (= 14 (x4195 (x230 64 x1069 14))))
(assert (x1384 x723))
(assert (= (and x3893 x2765) x4169))
(assert (= (x2128 2937758641) 0))
(assert (x3295 x3193 x600 x1514 x4157))
(assert (x1000 x2782))
(assert (= (or x1952 x3999) x1746))
(assert (x1384 x1049))
(assert (x1384 x2457))
(assert (= (or x3963 x664) x2161))
(assert (x1327 (* 65536 x2063) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2664 (and x3362 x2941)))
(assert (= (x4195 (x230 64 x1485 x1280)) x1280))
(assert (> (x230 64 x106 14) 10000))
(assert (x3913 x2357))
(assert (x2547 x1558 4294967296))
(assert (= (and x1647 (not x101)) x4067))
(assert (= x3528 (x3706 (x230 64 x3528 x3571))))
(assert (x1384 x1283))
(assert (x2466 100000 x215))
(assert (x1327 (ite (< x3251 256) (x521 2 x3251) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (or (and (and (= (+ 64 x1017) x1954) (= (x3763 x1405 64) x1949)) x625) (and (not x625) (and (= x1949 x1405) (= x1017 x1954)))) (= x625 (> x1405 18446744073709551615))) x1219) x800))
(assert (x1384 x4115))
(assert (< 10000 (x230 64 x2782 x2655)))
(assert (= (or x1370 x540) x1314))
(assert (x1384 x2164))
(assert (x1384 x2143))
(assert (x2466 100000000000000 x3684))
(assert (= (x2128 4294967295) 0))
(assert (= x2256 (and x2850 x2028)))
(assert (= (and x3169 (not x3029)) x823))
(assert (not (x2614 (x230 64 x1785 x282))))
(assert (x1384 x2824))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x162 14)))
(assert (x1000 x1174))
(assert (= (and x783 (not x2231)) x1549))
(assert (= x2069 (or x2158 x3255)))
(assert (> (x230 64 0 x184) 10000))
(assert (= (or x129 x2294) x2387))
(assert (= x787 (or x3271 x3512)))
(assert (x1804 x463 x2450 x1028 x36))
(assert (= (x2128 (x230 64 x2477 x2994)) (x230 64 x2477 x2994)))
(assert (= (or x3350 x2465) x3416))
(assert (x1384 x3033))
(assert (x1384 x1606))
(assert (x2547 x3022 65536))
(assert (= (or x572 x1409) x1007))
(assert (= x4220 (and x382 x1654)))
(assert (x2547 x194 65536))
(assert (x1384 x110))
(assert (x1327 (* x3798 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x230 64 65535 x2194) (x2128 (x230 64 65535 x2194))))
(assert (x3395 (- x3751 x753)))
(assert (x1384 x3820))
(assert (x1384 x3087))
(assert (x2547 x1165 256))
(assert (x1384 x3013))
(assert (= x2873 (and x2931 (not x267))))
(assert (x2712 x1925))
(assert (x3295 x1028 x36 x2450 x463))
(assert (= (x3763 x3135 2) (x323 x3135 4)))
(assert (= (and x3643 x338) x1319))
(assert (x1000 x2204))
(assert (x1384 x3121))
(assert (x1384 x2616))
(assert (x1384 x3267))
(assert (x1000 x3909))
(assert (x1384 x1170))
(assert (x2547 x874 16))
(assert (x1725 x3751 (- x3866 x36)))
(assert (= 64 (x250 (x230 64 x3036 9))))
(assert (= (and x1141 x1845) x3463))
(assert (= (and (not x1301) x148) x3494))
(assert (x3117 x1009))
(assert (= 0 (x3706 (x230 64 0 x1813))))
(assert (x2547 x1174 4294967296))
(assert (= x2276 (and x2314 x2716)))
(assert (x1725 x4157 (- x1514 x600)))
(assert (x1725 x463 x2450))
(assert (= 0 (x2128 16777215)))
(assert (x1384 x3176))
(assert (= (x3933 1 x2324) (x3377 (ite (> 256 x2324) (x521 2 x2324) 0))))
(assert (x2466 2 x2135))
(assert (x1384 x2707))
(assert (= (x3706 (x230 64 x761 x630)) x761))
(assert (x1384 x1079))
(assert (= (x3377 (* x263 65536)) (x3933 x263 16)))
(assert (x1384 x1069))
(assert (= (x3706 (x230 64 x2620 x596)) x2620))
(assert (= (x3706 (x230 64 x3036 9)) x3036))
(assert (> (x230 64 x1810 9) 10000))
(assert (x3395 x695))
(assert (x1384 x3204))
(assert (= x2302 (=> (and (or (and (not x3365) (and (= x108 x1072) (= (+ x3542 8) x4091))) (and x3365 (and (= x4091 x3542) (= x108 x228)))) (and (= x1072 (x3933 x228 8)) (= (= 0 x1072) x3365))) x1762)))
(assert (= (x3706 (x230 64 x1675 9)) x1675))
(assert (= (and x1795 (not x1633)) x185))
(assert (x1327 (* x3917 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (and (= (x3933 x4187 16) x723) (= x4070 (= 0 x723))) (or (and (and (= x1452 x3565) (= x4187 x1767)) x4070) (and (not x4070) (and (= x3565 (+ x1452 16)) (= x723 x1767))))) x1563) x2667))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x3571)))
(assert (= (and (not x901) x984) x493))
(assert (x1327 (ite (> 256 x2324) (x521 2 x2324) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x965))
(assert (= 0 (x3706 (x230 64 0 x242))))
(assert (not (x2614 (x230 64 x850 x2581))))
(assert (x1384 x1346))
(assert (x1384 x3170))
(assert (x1384 x1484))
(assert (= (x3706 (x230 64 0 x1438)) 0))
(assert (x1000 x706))
(assert (x3395 340282366920938463463374607431768211456))
(assert (= (or x2482 x3941) x2366))
(assert (= x2647 (x4195 (x230 64 x3372 x2647))))
(assert (= x1 (x4195 (x230 64 0 x1))))
(assert (x3395 x602))
(assert (x1384 x1008))
(assert (x1000 x468))
(assert (= x2207 (=> (and (or (and x1238 (and (= (+ 4 x1942) x2140) (= (x3763 x2936 4) x2780))) (and (not x1238) (and (= x1942 x2140) (= x2780 x2936)))) (= x1238 (> x2936 15))) x4042)))
(assert (x2060 340282366920938463463374607431768211455))
(assert (not (x2614 (x230 64 x3372 x2647))))
(assert (x2614 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x1384 x1255))
(assert (not (x2614 (x230 64 x1269 x3245))))
(assert (x1804 x4099 x753 x3193 x600))
(assert (= x1059 (and x390 (not x2696))))
(assert (x2614 100000000000000))
(assert (= (x250 (x230 64 x2190 x1280)) 64))
(assert (x1384 x24))
(assert (< (x230 64 x897 x3513) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2712 x2213))
(assert (x3295 x600 x3193 x2450 x463))
(assert (x1384 x2105))
(assert (x1384 x2646))
(assert (x1384 x766))
(assert (x1384 x2081))
(assert (> (x230 64 x1843 x2996) 10000))
(assert (x4211 x2244))
(assert (x2547 x1678 4))
(assert (x3913 x1948))
(assert (x1384 x599))
(assert (x1384 x2715))
(assert (= 0 (x3706 (x230 64 0 x3977))))
(assert (x1384 x728))
(assert (x1384 x2730))
(assert (not (x2614 (x230 64 x897 x3513))))
(assert (= (and x1504 (not x2425)) x2093))
(assert (= (x3933 x1812 1) (x3377 (* 2 x1812))))
(assert (< 10000 (x230 64 x761 x2625)))
(assert (=> (<= x2048 10000) (= (x2128 x2048) 0)))
(assert (x1384 x1737))
(assert (=> (>= 10000 x3691) (= (x2128 x3691) 0)))
(assert (= x32 (and x1579 x2784)))
(assert (= x663 (and x4000 x2583)))
(assert (= (and x555 (not x1246)) x1227))
(assert (x1000 x3167))
(assert (x1384 x1733))
(assert (x3395 (- x3751 x2450)))
(assert (x1384 x3451))
(assert (= (=> (and (or (and (and (= x1433 x2865) (= x2607 x4110)) (not x1492)) (and (and (= (+ x4110 16) x2607) (= x1433 (x3763 x2865 16))) x1492)) (= (< 65535 x2865) x1492)) x2453) x1866))
(assert (x3295 x3193 x600 x3751 x3866))
(assert (x3295 x1028 x36 x4157 x1514))
(assert (= x1985 (or x2538 x90)))
(assert (x1384 x1583))
(assert (= x2499 (=> (and (or (and (not x1832) (and (= (+ x495 4) x992) (= x739 x2504))) (and x1832 (and (= x3122 x739) (= x992 x495)))) (and (= (x3933 x3122 4) x2504) (= x1832 (= x2504 0)))) x2104)))
(assert (x1327 (* 4 x3799) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x209))
(assert (x3395 x1308))
(assert (= (=> (and (= (ite (> x2999 1) (+ 1 x3845) x3845) x2907) (= x599 (x3737 (- x2907 1))) (= x599 x2357)) x159) x714))
(assert (x1384 x1178))
(assert (x3295 x36 x1028 x463 x2450))
(assert (= x4019 (and x3162 x3263)))
(assert (x3395 x3181))
(assert (x1384 x1345))
(assert (= (and x1276 (not x3594)) x1806))
(assert (x2466 100000 x3712))
(assert (= (and x2435 (not x772)) x3454))
(assert (= (and (not x3330) x3739) x1758))
(assert (= (x4195 (x230 64 0 x94)) x94))
(assert (= x3753 (and x1094 (not x2153))))
(assert (x3404 (* 4294967296 x457)))
(assert (= (and x3680 (not x1740)) x2158))
(assert (> (x230 64 x961 x3622) 10000))
(assert (x1327 (* 4 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3933 x3181 8) (x3377 (* x3181 256))))
(assert (x1000 x2228))
(assert (x1384 x4242))
(assert (= (x3763 x2782 8) (x323 x2782 256)))
(assert (= x3509 (or x3240 x2776)))
(assert (= (and x1189 (not x1243)) x3485))
(assert (= (or x3782 x546) x3446))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1843 x2996)))
(assert (= (x3763 x1520 2) (x323 x1520 4)))
(assert (x3404 x2967))
(assert (= x2656 (and x2917 x1499)))
(assert (x3606 x3877 1000000))
(assert (x2466 1 (x521 2 x1258)))
(assert (= x2012 (=> (and (and (= (x3933 x2063 16) x3002) (= x1654 (= x3002 0))) (or (and (not x1654) (and (= x728 x3002) (= (+ 16 x1766) x386))) (and (and (= x2063 x728) (= x386 x1766)) x1654))) x1142)))
(assert (x1384 x278))
(assert (x1384 x2440))
(assert (x1384 x1460))
(assert (x3404 (* 16 x1536)))
(assert (= x3083 (or x1295 x12)))
(assert (x2060 x2820))
(assert (= x1188 (and x2219 (not x2798))))
(assert (x3395 (x521 2 x2449)))
(assert (x1327 (* x3605 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2766 (=> (= x1579 (= x522 0)) (and (=> (and (= x1197 (ite x1579 1 0)) (not x1579)) x1156) (=> (and x1579 (and (or (and x1076 (= (ite x1076 1 0) x3216)) (and (and (>= 1099511627775 x4224) (= x3216 (ite (> x4224 0) 1 0)) (= x4021 (x230 64 x1690 x1280)) (= x4224 (x1642 x4021))) (not x1076))) (and (>= 1099511627775 x1497) (= (x489 x2491) x1497) (= x1076 (< 0 x1497)) (= (x230 64 x1690 x1280) x2491)))) x2062)))))
(assert (x1384 x3167))
(assert (x1384 x3319))
(assert (x1384 x301))
(assert (= (x250 (x230 64 0 x3571)) 64))
(assert (= (or x880 x1036) x2785))
(assert (= (=> (and (and (= x2024 (x3933 x1450 64)) (= (= 0 x2024) x500)) (or (and (not x500) (and (= x4190 x2024) (= x3603 (+ x3718 64)))) (and x500 (and (= x1450 x4190) (= x3603 x3718))))) x3624) x3503))
(assert (x1384 x2088))
(assert (x1384 x2064))
(assert (x3295 x600 x3193 x3751 x3866))
(assert (< 10000 (x230 64 0 x1813)))
(assert (x1725 x1514 (- x4157 x3866)))
(assert (x1384 x3560))
(assert (= x2076 (x3706 (x230 64 x2076 x3622))))
(assert (= x727 (and x937 (not x246))))
(assert (= (and x1692 x3140) x1148))
(assert (x1384 x3758))
(assert (= (x230 64 0 x3622) (x2128 (x230 64 0 x3622))))
(assert (= (x323 x2653 256) (x3763 x2653 8)))
(assert (x2060 x2103))
(assert (= x3068 (=> (= (= x3670 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1655) (and (=> (and (not x1655) (and (or (and (and (= x3880 x3403) (= x4133 0)) x3936) (and (not x3936) (and (= x1789 x3880) (= x4133 128)))) (and (= x1789 (x3933 x3403 128)) (= x3403 (x1741 x2958)) (= x3936 (= x1789 0)) (= x2096 (+ x3635 1)) (= (x230 64 x3670 x2096) x2958)))) x3207) (=> (and (and (and (= (x3763 x2760 1) x4080) (= 1 x3438) (= (x2464 x1289) x2760) (= x1825 (= x4080 0)) (= x1240 0)) (or (and (and (= x174 1) (= x620 0)) (not x1825)) (and x1825 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))) x1655) x391)))))
(assert (x1384 x537))
(assert (x2466 1000000 x529))
(assert (= (and x3190 x911) x3629))
(assert (x3395 x2487))
(assert (= (and x3416 x3011) x956))
(assert (= (x230 64 x2895 x2341) (x2128 (x230 64 x2895 x2341))))
(assert (x1384 x241))
(assert (x3395 x2949))
(assert (< (x230 64 x2556 x3182) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2097 true))
(assert (x3395 x228))
(assert (=> (>= 10000 x3950) (= 0 (x2128 x3950))))
(assert (= 9 (x4195 (x230 64 x3368 9))))
(assert (not (x2614 (x230 64 65535 x1951))))
(assert (= x3504 (or x2896 x238)))
(assert (x2547 x3909 16))
(assert (= (or x3173 x379) x1795))
(assert (= x4122 (and x4008 (not x77))))
(assert (= 64 (x250 (x230 64 x162 14))))
(assert (x2466 100000 x3081))
(assert (x2060 x3945))
(assert (x1000 x508))
(assert (= (=> (and (= (x3737 (- x4044 1)) x2217) (= x2217 x1948) (= x4044 (ite (> x4198 1) (+ x3422 1) x3422))) x1918) x894))
(assert (= (x2128 (x230 64 x4242 x3658)) (x230 64 x4242 x3658)))
(assert (= x3526 (=> (and (= (> x1780 4294967295) x2369) (or (and (not x2369) (and (= x1780 x3779) (= x3250 x3370))) (and (and (= (x3763 x1780 32) x3779) (= x3250 (+ 32 x3370))) x2369))) x2940)))
(assert (x1384 x4097))
(assert (x3404 (* 18446744073709551616 x1737)))
(assert (= (x3763 x1107 32) (x323 x1107 4294967296)))
(assert (= (x2128 (+ x928 1)) (x2128 x928)))
(assert (= (x4195 (x230 64 1 14)) 14))
(assert (x3606 x632 1000000000000000000))
(assert (= (x230 64 x2048 x86) (x2128 (x230 64 x2048 x86))))
(assert (< (x230 64 x2433 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x42))
(assert (x1384 x2732))
(assert (x3295 x1028 x36 x463 x2450))
(assert (x1384 x474))
(assert (x3395 x1721))
(assert (x3404 (* x2516 340282366920938463463374607431768211456)))
(assert (x1384 x4025))
(assert (x1327 x671 18446744073709551616))
(assert (= (x3763 x1075 64) (x323 x1075 18446744073709551616)))
(assert (< (x230 64 0 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3117 x897))
(assert (= x3582 (and x4028 x795)))
(assert (x1384 x3105))
(assert (= x2674 (or x3359 (and x1706 x3009))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2793 x1895)))
(assert (x1384 x3908))
(assert (x3404 (* x357 340282366920938463463374607431768211456)))
(assert (= (x230 64 x3836 14) (x2128 (x230 64 x3836 14))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3836 14)))
(assert (x1384 x1667))
(assert (= 0 (x3706 (x230 64 0 x1657))))
(assert (x2466 16 x3122))
(assert (x1384 x3429))
(assert (> (x230 64 0 x1657) 10000))
(assert (= x2934 (and x1199 x4245)))
(assert (x1384 x2966))
(assert (= (x2128 (x230 64 x897 x3513)) (x230 64 x897 x3513)))
(assert (= (x2128 (x230 64 65535 x1951)) (x230 64 65535 x1951)))
(assert (x1384 x2181))
(assert (> (x230 64 x2556 x3182) 10000))
(assert (x2466 1 (x521 2 x2646)))
(assert (> (x230 64 x2445 14) 10000))
(assert (x1384 x3682))
(assert (x1327 (ite (< x3881 256) (x521 2 x3881) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1000 x1068))
(assert (= (x4195 (x230 64 x3199 9)) 9))
(assert (x3395 (- x2450 x4099)))
(assert (x2614 10000000000000000000000))
(assert (= (x4195 (x230 64 x3836 14)) 14))
(assert (x2466 1 (x521 2 x3881)))
(assert (x1384 x584))
(assert (= (x230 64 x339 14) (x2128 (x230 64 x339 14))))
(assert (x3395 (- x463 x3866)))
(assert (x1384 x2431))
(assert (x2466 1000000 x1514))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2742 x242)))
(assert (x1384 x1598))
(assert (= (x2128 (+ x4001 1)) (x2128 x4001)))
(assert (= x3085 (or x2091 x1835)))
(assert (= 14 (x4195 (x230 64 x3691 14))))
(assert (> (x230 64 0 x3571) 10000))
(assert (= x339 (x3706 (x230 64 x339 14))))
(assert (x2060 x4127))
(assert (= x627 (=> (= x1507 x1308) x2982)))
(assert (= (x250 (x230 64 x486 5)) 64))
(assert (x1384 x2603))
(assert (= (x3763 x802 8) (x323 x802 256)))
(assert (x2060 65280))
(assert (x1725 x753 (- x4099 x2450)))
(assert (x1327 x2244 256))
(assert (= (=> (and (and (= (= 0 x2627) x214) (= x2627 (x3933 x1536 4))) (or (and x214 (and (= x581 x1536) (= x3089 x2833))) (and (not x214) (and (= x2627 x581) (= (+ x2833 4) x3089))))) x2762) x2254))
(assert (= (x3706 (x230 64 0 x2539)) 0))
(assert (not (x2614 (x230 64 x2621 x3622))))
(assert (not (x2614 (x230 64 0 x1280))))
(assert (= x220 (=> (and (or (and (not x2380) (and (= x1604 x3982) (= x4025 (+ x4084 16)))) (and (and (= x4025 x4084) (= x3982 x293)) x2380)) (and (= x2380 (= 0 x1604)) (= x1604 (x3933 x293 16)))) x2389)))
(assert (x3395 x2177))
(assert (x1384 x4065))
(assert (x3404 x1627))
(assert (= (x250 (x230 64 0 x1657)) 64))
(assert (not (x2614 (x230 64 x2155 x2923))))
(assert (x1384 x1197))
(assert (= (x3706 (x230 64 x3191 x3069)) x3191))
(assert (x1327 (* 65536 x3393) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1327 (ite (> 256 x2449) (x521 2 x2449) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x3019))
(assert (x1000 x897))
(assert (x2547 x897 256))
(assert (x3404 (* x1767 256)))
(assert (x3404 16777216))
(assert (= x1143 (and x1533 x559)))
(assert (< (x230 64 x3121 x291) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x364 x68) x1192))
(assert (x1725 x4099 (- x753 x1028)))
(assert (x3395 x1620))
(assert (= x3474 (or x1344 x2191)))
(assert (= (and (not x696) x1760) x1889))
(assert (x1384 x3746))
(assert (= (and (not x1048) x2816) x2650))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3972 5)))
(assert (= (x250 (x230 64 x1410 x2196)) 64))
(assert (x1384 x1445))
(assert (= (x230 64 x1030 x1025) (x2128 (x230 64 x1030 x1025))))
(assert (x2547 x3891 256))
(assert (x1327 x2858 18446744073709551616))
(assert (x1327 (* 4294967296 x28) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x4086))
(assert (x1384 x2094))
(assert (= x1853 (or x27 x4236)))
(assert (= x1542 (x4195 (x230 64 x2490 x1542))))
(assert (x3295 x2450 x463 x3751 x3866))
(assert (x1384 x2189))
(assert (< (x230 64 x421 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2128 (+ x2206 1)) (x2128 x2206)))
(assert (x1384 x2621))
(assert (= x2723 (and x1007 x2978)))
(assert (x3395 x3374))
(assert (x2060 x2357))
(assert (x1384 x2894))
(assert (= x1370 (or x4137 x4096)))
(assert (= (x3706 (x230 64 x3121 x291)) x3121))
(assert (x1327 (* 256 x728) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x174 10000) (= (x2128 x174) 0)))
(assert (= (and (not x4070) x4009) x2693))
(assert (= x3894 (and x2223 x628)))
(assert (x1804 x3751 x3866 x3193 x600))
(assert (= x2552 (and x3490 x1622)))
(assert (= (or x2307 x2669) x481))
(assert (x1384 x1616))
(assert (x1384 x602))
(assert (x3404 x2782))
(assert (= (or x1449 x3612) x790))
(assert (x1384 x3479))
(assert (= 64 (x250 (x230 64 x272 x2673))))
(assert (x3404 (ite (> 256 x607) (x521 2 x607) 0)))
(assert (x3404 (* 4294967296 x3105)))
(assert (= x2823 (and x2435 x772)))
(assert (> (x230 64 x2018 x593) 10000))
(assert (x1384 x4124))
(assert (= (x2128 (x230 64 x3790 9)) (x230 64 x3790 9)))
(assert (= 64 (x250 (x230 64 x881 9))))
(assert (x1327 (* x232 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1000 x1346))
(assert (= x2889 (and (not x3566) x954)))
(assert (not (x2614 (x230 64 x2556 x3182))))
(assert (= (x3377 (ite (> 256 x1639) (x521 2 x1639) 0)) (x3933 1 x1639)))
(assert (= x3966 (=> (and (= (> x1008 4294967295) x1903) (or (and x1903 (and (= x206 (x3763 x1008 32)) (= (+ 32 x2791) x444))) (and (and (= x444 x2791) (= x1008 x206)) (not x1903)))) x3127)))
(assert (= (x230 64 0 14) (x2128 (x230 64 0 14))))
(assert (= (and (not x3562) x3978) x2306))
(assert (= (x2128 (+ 1 x2994)) (x2128 x2994)))
(assert (x1384 x2418))
(assert (x1327 (* x1671 65536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 (- x2450 x4157)))
(assert (= (=> (and (or (and x901 (= 0 x4012)) (and (not x901) (and (= (x230 64 x4188 x1657) x3723) (= (x230 64 x2190 x1657) x253) (<= x517 1099511627775) (= x958 (x230 64 x2190 x1657)) (= x16 (x230 64 x517 x1657)) (= x1235 (x230 64 x2190 x1657)) (= 1 x4012) (= (x230 64 x4188 x1657) x2045) (= (x1642 x2045) x517) (= x2501 (+ x253 1))))) (= (= x2272 0) x901)) x2626) x682))
(assert (not (x2614 (x230 64 x106 14))))
(assert (= (x3706 (x230 64 x1155 x1099)) x1155))
(assert (x2060 x2426))
(assert (x1384 x1463))
(assert (= x528 (or x2299 x2077)))
(assert (= x3553 (=> (and (and (= (= 0 x3346) x1243) (= (x3933 x110 8) x3346)) (or (and (not x1243) (and (= x587 (+ 8 x548)) (= x3346 x2442))) (and x1243 (and (= x548 x587) (= x110 x2442))))) x1130)))
(assert (x1384 x2944))
(assert (x3117 x3081))
(assert (x3606 x473 1000000000000000000000000))
(assert (x1384 x36))
(assert (= (x323 x876 340282366920938463463374607431768211456) (x3763 x876 128)))
(assert (x2060 x570))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2098 x3410)))
(assert (= x3109 (or x1012 x395)))
(assert (x1384 x3781))
(assert (x1384 x4166))
(assert (= 14 (x4195 (x230 64 x2695 14))))
(assert (=> (<= x272 10000) (= (x2128 x272) 0)))
(assert (x1384 x2032))
(assert (x1384 x3065))
(assert (x1384 x1060))
(assert (= (=> (and (= x123 (> x3355 255)) (or (and x123 (and (= (x3763 x3355 8) x3909) (= x2468 (+ 8 x3736)))) (and (and (= x3355 x3909) (= x2468 x3736)) (not x123)))) x362) x2479))
(assert (x1384 x3887))
(assert (> (x230 64 x1258 x1555) 10000))
(assert (x3295 x600 x3193 x753 x4099))
(assert (x1804 x463 x2450 x1514 x4157))
(assert (x1384 x582))
(assert (= (and x3158 x2139) x2323))
(assert (= x3480 (and x3935 x4158)))
(assert (= x1874 (=> (= x3187 (= 0 x1128)) (and (=> (and x3187 (and (= (ite x3140 1 0) x3524) (= x1209 (x2009 16777215 x1308)) (= (= x1843 0) x1455) (= x3571 (x230 64 x1209 x1454)) (= (x230 64 x3524 14) x1454))) (and (=> (and (= (ite x1455 1 0) x2345) x1455) x406) (=> (and (and (and (= x3958 (x4041 x3432)) (= x3432 (x230 64 x1843 x3571)) (<= x3958 1099511627775) (= x2893 (< 0 x3958))) (or (and x2893 (= (ite x2893 1 0) x1432)) (and (not x2893) (and (= (x3344 x1716) x2269) (<= x2269 1099511627775) (= x1716 (x230 64 x1843 x3571)) (= (ite (> x2269 0) 1 0) x1432))))) (not x1455)) x1486))) (=> (and (or (and (not x3140) (and (>= 184467440737095516 x1128) (= x1317 x2899) (not (< x1986 x1317)) (= (* 100000000000000 x1128) x2899) (= x1986 (x323 x3375 1000000)) (= x3375 (* x695 1000000000000000000)))) (and (and (= x645 x1028) (= (x323 x3568 1000000) x683) (= (x323 x2234 1000000000000000000000000) x3783) (= x2414 (* x529 1000000)) (<= x639 9999999) (= x2414 x2234) (>= x529 0) (= 1 x1524) (= x1065 (* 100000 x766)) (= x766 (x2009 16777215 x1308)) (= (* x1128 100000000000000) x645) (not (< x683 x2406)) (= x639 (x2009 16777215 x1308)) (<= x529 18446744073709551615999999999999999999) (= (+ 100000000 x1065) x36) (<= x2406 18446744073709551615) (= x2308 1000000000000000000000000) (>= 1844674407370955 x1128) (= (+ (ite (> (x2350 x2234 1000000000000000000000000) 0) 1 0) x3783) x2406) (= x3568 (* 1000000 x695)) (= (x2817 x1028 x36) x529)) x3140)) (not x3187)) x261)))))
(assert (x2466 16 x1663))
(assert (x1384 x2742))
(assert (= x1791 (x4195 (x230 64 x199 x1791))))
(assert (x1384 x554))
(assert (x3606 x3952 100000000000000))
(assert (x1000 x2181))
(assert (= (=> (and (= x2362 (< 15 x3094)) (or (and (and (= (+ x1353 4) x2068) (= (x3763 x3094 4) x983)) x2362) (and (not x2362) (and (= x2068 x1353) (= x3094 x983))))) x2584) x3541))
(assert (= (x323 x2694 65536) (x3763 x2694 16)))
(assert (x2060 x3114))
(assert (x1384 x3199))
(assert (= (x3763 x706 4) (x323 x706 16)))
(assert (=> (>= 10000 x1269) (= (x2128 x1269) 0)))
(assert (x1384 x3832))
(assert (x1384 x2360))
(assert (x1384 x4084))
(assert (= (x2128 x975) (x2128 (+ 2 x975))))
(assert (x1327 (* x54 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1725 x463 (- x2450 x36)))
(assert (= x2331 (and x2069 (not x558))))
(assert (x1384 x2999))
(assert (x1384 x818))
(assert (= (or x3103 x1877) x3576))
(assert (= (x3933 x3670 8) (x3377 (* 256 x3670))))
(assert (< 10000 (x230 64 x1690 x1280)))
(assert (x1384 x730))
(assert (x1384 x2160))
(assert (= x1018 (and x168 (not x498))))
(assert (x3395 x3038))
(assert (> (x230 64 x3449 x3651) 10000))
(assert (= (x250 (x230 64 x3191 x3069)) 64))
(assert (x1327 (* 256 x3449) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1000 1000000000000000000))
(assert (x1384 x3415))
(assert (not (x2614 (x230 64 x1648 5))))
(assert (> (x230 64 x1675 9) 10000))
(assert (x2466 1 (x521 2 x2324)))
(assert (= (x3706 (x230 64 1 14)) 1))
(assert (= (and x2586 x3327) x1295))
(assert (x1804 x1514 x4157 x753 x4099))
(assert (x3395 x3982))
(assert (x1000 x3283))
(assert (x2614 6277101735386680763835789423207666416102355444464034512895))
(assert (< 10000 (x230 64 0 x2539)))
(assert (x1384 x3431))
(assert (x3395 (- x36 x753)))
(assert (= (=> (= x1854 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2895)) (and (=> (and x1854 (= x3364 16777215)) x591) (=> (and (not x1854) (and (and (= (x230 64 x2895 x2341) x439) (= x420 (> x2944 340282366920938463463374607431768211455)) (= x2944 (x2459 x439)) (= x2341 (+ 1 x4112))) (or (and (and (= x1075 x2944) (= x2734 0)) (not x420)) (and x420 (and (= x2734 128) (= x1075 (x3763 x2944 128))))))) x3342))) x360))
(assert (x1000 x3813))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x820 14)))
(assert (x3404 (* x2155 256)))
(assert (x3295 x600 x3193 x4157 x1514))
(assert (x1384 x2760))
(assert (x1327 x270 1000000000000000000000000))
(assert (x1384 x512))
(assert (x1384 x2405))
(assert (= x2494 (or x1341 x1011)))
(assert (= (x4195 (x230 64 x1030 x1025)) x1025))
(assert (x1384 x3663))
(assert (x3395 (- x4157 x1028)))
(assert (> (x230 64 x2620 x596) 10000))
(assert (x3404 (* x3982 256)))
(assert (= (=> (and (or (and (and (= (x3737 (- x4130 x2190)) x3450) (= x2461 (x230 64 0 x1280)) (= (x1642 x2461) x4130) (= x522 (ite (< 0 x3450) 0 1)) (>= 1099511627775 x4130)) x3389) (and (= 1 x522) (not x3389))) (= x3389 (= x1468 0))) x2766) x2344))
(assert (x1384 x3448))
(assert (= 0 (x2128 184467440737095516)))
(assert (x1384 x639))
(assert (x1384 x408))
(assert (< (x230 64 x1168 x2262) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4195 (x230 64 x3805 9)) 9))
(assert (x1327 (* 65536 x293) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2439))
(assert (= (x250 (x230 64 x1785 x282)) 64))
(assert (= (x3706 (x230 64 x3199 9)) x3199))
(assert (= (and x1330 (not x2166)) x3413))
(assert (x2313 x1440 x165))
(assert (= x1810 (x3706 (x230 64 x1810 9))))
(assert (= x846 (or x1231 x579)))
(assert (x1000 x2478))
(assert (not (x2614 (x230 64 x3081 x2594))))
(assert (x1327 (* 2 x841) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4015 (or x306 x1519)))
(assert (x1384 x2549))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2220 x242)))
(assert (not (x2614 (x230 64 x4004 14))))
(assert (= (x3763 x3094 4) (x323 x3094 16)))
(assert (= (x3933 1 x2018) (x3377 (ite (> 256 x2018) (x521 2 x2018) 0))))
(assert (x1384 x2120))
(assert (=> (>= 10000 x3930) (= (x2128 x3930) 0)))
(assert (x3404 x3167))
(assert (x1384 x3546))
(assert (= (x323 x3443 340282366920938463463374607431768211456) (x3763 x3443 128)))
(assert (x1384 x1239))
(assert (= (and x901 x984) x1403))
(assert (= (x3933 1 x1258) (x3377 (ite (> 256 x1258) (x521 2 x1258) 0))))
(assert (x1725 x600 (- x3193 x3866)))
(assert (= x3104 (and x1005 x726)))
(assert (x1384 x172))
(assert (x295 x3048))
(assert (x1384 x293))
(assert (= x2152 (=> (and (= (< 18446744073709551615 x3668) x3046) (or (and (and (= x2987 x3518) (= x3668 x2638)) (not x3046)) (and x3046 (and (= x2638 (x3763 x3668 64)) (= x3518 (+ x2987 64)))))) x1236)))
(assert (= (x250 (x230 64 x590 x222)) 64))
(assert (x3395 (- x463 x600)))
(assert (x3395 x1624))
(assert (x1384 x2876))
(assert (x1682 x70))
(assert (= x572 (and (not x2801) x1210)))
(assert (x1327 (* 256 x2620) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (and (= x59 (x3933 x3398 2)) (= x338 (= x59 0))) (or (and (and (= (+ 2 x3261) x2412) (= x602 x59)) (not x338)) (and (and (= x2412 x3261) (= x3398 x602)) x338))) x3052) x141))
(assert (x1384 x3058))
(assert (x1384 x3370))
(assert (= (x2128 (x230 64 x2782 x2655)) (x230 64 x2782 x2655)))
(assert (= (=> (and (= (x230 64 x2111 14) x959) (= x2382 (= 0 x3600)) (= x2111 (ite (not (= 0 x1535)) 1 0)) (= (x2009 1099511627775 x2967) x3600) (= (x230 64 x867 x959) x3622) (= x867 (x2009 16777215 x3230))) (and (=> (and x2382 (= (ite x2382 1 0) x1773)) x3168) (=> (and (not x2382) (and (or (and (and (= x2564 (x230 64 x4020 x3622)) (= x3828 (ite (< 0 x2164) 1 0)) (= x2164 (x3420 x2564)) (>= 1099511627775 x2164) (= (x2009 1099511627775 x2967) x4020)) (not x1071)) (and x1071 (= (ite x1071 1 0) x3828))) (and (= x1071 (> x818 0)) (= (x2009 1099511627775 x2967) x1464) (<= x818 1099511627775) (= x2599 (x230 64 x1464 x3622)) (= (x942 x2599) x818)))) x3487))) x542))
(assert (= (=> (and (or (and x374 (and (= (x3737 (- x974 x4188)) x1598) (= (x1642 x2812) x974) (= x2812 (x230 64 0 x1657)) (= x1166 (ite (> x1598 0) 0 1)) (<= x974 1099511627775))) (and (not x374) (= 1 x1166))) (= (= 0 x2882) x374)) x1229) x3301))
(assert (= x1267 x2836))
(assert (= (or x185 x1277) x2435))
(assert (x3404 x3498))
(assert (x1725 x2450 (- x463 x3866)))
(assert (x1384 x3225))
(assert (= (=> (and (= x1844 (= 0 x2345)) (or (and (= x4209 0) (not x1844)) (and (and (>= 1099511627775 x3528) (= x789 (x230 64 x3166 x3571)) (= x520 (+ 1 x2573)) (= (x3344 x1064) x3528) (= (x230 64 x1843 x3571) x1064) (= x2573 (x230 64 x1843 x3571)) (>= 1099511627775 x3166) (= (x4041 x3323) x3166) (= (x230 64 x3528 x3571) x831) (= (x230 64 x1843 x3571) x3323) (= x1843 x4209)) x1844))) x2803) x406))
(assert (= (=> (and (= x1010 x102) (= x2861 x537) (= x3495 x505) (= x2983 x566) (= x3561 x3079)) x1814) x2523))
(assert (= x2982 (=> (and (and (= x2490 (x2009 16777215 x1308)) (= x2046 (< 0 x266)) (= x1542 (x230 64 x3836 14)) (= x2485 (x230 64 0 x184)) (= (x230 64 x2490 x1542) x184) (= x3836 (ite x3140 1 0)) (= x678 0) (>= 1099511627775 x266) (= x266 (x4041 x2485))) (or (and (not x2046) (and (= x3316 (x3344 x2560)) (<= x3316 1099511627775) (= x745 (ite (> x3316 0) 1 0)) (= x2560 (x230 64 0 x184)))) (and x2046 (= x745 (ite x2046 1 0))))) x4089)))
(assert (< 10000 (x230 64 x2695 14)))
(assert (x81 x2357))
(assert (x2547 x3970 340282366920938463463374607431768211456))
(assert (= (and x3496 x3149) x4250))
(assert (= x4215 (=> (and (= (> x3283 15) x2065) (or (and (not x2065) (and (= x3283 x4071) (= x459 x1170))) (and (and (= x4071 (x3763 x3283 4)) (= (+ 4 x459) x1170)) x2065))) x991)))
(assert (x2547 x3355 256))
(assert (x2466 340282366920938463463374607431768211456 x4166))
(assert (x1000 x3952))
(assert (x1804 x4157 x1514 x463 x2450))
(assert (= x492 (or x3521 x3297)))
(assert (not (x2614 (x230 64 x2220 x242))))
(assert (= (x3377 (* 2 x1445)) (x3933 x1445 1)))
(assert (x295 x684))
(assert (= (x2128 (x230 64 x1224 5)) (x230 64 x1224 5)))
(assert (x3395 x1028))
(assert (= (x250 (x230 64 x2914 14)) 64))
(assert (= x3708 (or x898 x427)))
(assert (x1384 x3059))
(assert (= x3650 (or x466 x1173)))
(assert (= (x3706 (x230 64 x4242 x3658)) x4242))
(assert (x3395 (x521 2 x2018)))
(assert (> (x230 64 x421 14) 10000))
(assert (x2466 1 (x521 2 x614)))
(assert (x1384 x841))
(assert (x1384 x1348))
(assert (x1384 x476))
(assert (x1384 x1906))
(assert (= x2013 (=> (and (or (and (and (= x2636 (+ 4 x2880)) (= (x3763 x3556 4) x3976)) x4134) (and (not x4134) (and (= x3556 x3976) (= x2636 x2880)))) (= x4134 (> x3556 15))) x387)))
(assert (x1384 x4020))
(assert (=> (<= x3908 10000) (= (x2128 x3908) 0)))
(assert (x1384 x298))
(assert (= (x3933 x3995 8) (x3377 (* x3995 256))))
(assert (= x2277 (and x3083 (not x2662))))
(assert (x3395 18446744073709551616))
(assert (= x1409 (and x2801 x1210)))
(assert (x1384 x3398))
(assert (x1384 x1471))
(assert (= x1099 (x4195 (x230 64 x1155 x1099))))
(assert (not (x2614 (x230 64 x2895 x2341))))
(assert (x1384 x381))
(assert (x2614 1844674407370955))
(assert (x1384 x2234))
(assert (= x4052 (and x559 (not x1533))))
(assert (= (x3706 (x230 64 x3805 9)) x3805))
(assert (x3395 x841))
(assert (x3395 (- x3866 x3193)))
(assert (< (x230 64 x1003 x1417) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 (- x600 x4099)))
(assert (x2547 x876 340282366920938463463374607431768211456))
(assert (x1384 x2224))
(assert (x1384 x2345))
(assert (> (x230 64 x3166 x3571) 10000))
(assert (x3606 x1781 1000000))
(assert (x1384 x4103))
(assert (x1000 x3986))
(assert (= x1184 (and x44 x1719)))
(assert (x3395 x3798))
(assert (x1804 x3866 x3751 x1028 x36))
(assert (x1384 x201))
(assert (x1725 x3866 (- x3751 x753)))
(assert (= (or x2121 x4059) x3948))
(assert (x2466 4 x3799))
(assert (= x887 (=> (and (or (and (and (= x765 (+ 8 x2730)) (= x410 (x3763 x3630 8))) x1967) (and (and (= x3630 x410) (= x765 x2730)) (not x1967))) (= (< 255 x3630) x1967)) x4175)))
(assert (x1384 x1937))
(assert (= (x2128 (x230 64 0 x242)) (x230 64 0 x242)))
(assert (= (x3933 x2400 1) (x3377 (* x2400 2))))
(assert (= (x3706 (x230 64 x796 5)) x796))
(assert (x1384 x3146))
(assert (x1384 x3094))
(assert (= 64 (x250 (x230 64 x1690 x1280))))
(assert (=> (>= 10000 x2189) (= 0 (x2128 x2189))))
(assert (x1384 x952))
(assert (= (or x685 x3411) x2010))
(assert (= (and x1997 x2977) x394))
(assert (x1327 (* 4294967296 x457) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x552 14)))
(assert (x1384 x2799))
(assert (not (x2614 (x230 64 1 14))))
(assert (x3395 x1734))
(assert (= (x3706 (x230 64 65535 x2194)) 65535))
(assert (= (x3377 (* x3122 16)) (x3933 x3122 4)))
(assert (x1384 x2651))
(assert (= x1743 (x3706 (x230 64 x1743 14))))
(assert (= x860 (=> (and (= x2056 (> x669 4294967295)) (or (and x2056 (and (= x717 (+ x3924 32)) (= x748 (x3763 x669 32)))) (and (and (= x717 x3924) (= x669 x748)) (not x2056)))) x2286)))
(assert (x3404 (* x2442 16)))
(assert (= x552 (x3706 (x230 64 x552 14))))
(assert (= x3238 (and x2705 x3860)))
(assert (= x2836 (=> (and (and (= x4210 (x230 64 x2190 x1280)) (= x2445 (ite x1349 1 0)) (>= 1099511627775 x1690) (= (x489 x1995) x1690) (<= x3578 1099511627775) (= (x230 64 x2445 14) x2594) (= x1922 (> x3578 0)) (= (x230 64 x3081 x2594) x1280) (= (x489 x4210) x3578) (= x1995 (x230 64 0 x1280))) (or (and (not x1922) (and (= x3642 (x230 64 x2190 x1280)) (= x1255 (x1642 x3642)) (= (ite (> x1255 0) 1 0) x1468) (<= x1255 1099511627775))) (and x1922 (= (ite x1922 1 0) x1468)))) x2344)))
(assert (x2060 x177))
(assert (= (and x3725 x333) x2191))
(assert (x2466 16 x1536))
(assert (x3395 x271))
(assert (x2547 x4086 4294967296))
(assert (x1384 x3216))
(assert (= 64 (x250 (x230 64 x850 x2581))))
(assert (=> (<= x421 10000) (= (x2128 x421) 0)))
(assert (x1384 x2657))
(assert (= x1539 (and x2555 (not x866))))
(assert (x1384 x1369))
(assert (= (and x1183 x3318) x2862))
(assert (x3395 (- x600 x2450)))
(assert (x1384 x834))
(assert (x2466 65536 x3590))
(assert (= (and x1504 x2425) x3380))
(assert (x1804 x4157 x1514 x3193 x600))
(assert (=> (<= x2782 10000) (= (x2128 x2782) 0)))
(assert (x1384 x234))
(assert (= x3547 (or x904 x167)))
(assert (= 0 (x2128 16776960)))
(assert (x3295 x36 x1028 x3866 x3751))
(assert (x1384 x3932))
(assert (x1000 1000000000000000000000000))
(assert (= (or x2093 x3380) x2427))
(assert (= x2992 (and (not x2259) x3039)))
(assert (x3395 (- x1028 x3193)))
(assert (= (x323 x4071 4) (x3763 x4071 2)))
(assert (= (or x371 x1753) x889))
(assert (x1327 (* 16 x3122) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x3077))
(assert (x3404 x270))
(assert (= 64 (x250 (x230 64 x2026 x3622))))
(assert (x1000 x2559))
(assert (x1384 x440))
(assert (x1384 x2635))
(assert (= (x230 64 x199 x1791) (x2128 (x230 64 x199 x1791))))
(assert (= x3203 (and x2021 x4179)))
(assert (= (x2128 (+ 1 x1289)) (x2128 x1289)))
(assert (x1384 x717))
(assert (= (x230 64 0 x1280) (x2128 (x230 64 0 x1280))))
(assert (= (=> (and (and (and (= x946 false) (= x2721 false) (= false x3644) (<= x711 340282366920938463463374607431768211455) (= x3679 (x1819 x1638)) (= x153 x2433) (= (x1300 x2591) x711) (<= x460 127) (= x2879 x711) (= x4040 (x230 64 x2433 5)) (= x1509 36) (= false x622) (= x3854 false) (= x1095 2937758641) (= x1675 (x45 x4040)) (= x3591 x4090) (= x854 x2433) (>= x3679 1) (= x1927 false) (= (x230 64 x1675 9) x2591) (<= x460 127) (>= 281474976710655 x1675)) (and (and (= x2860 x3972) (and (= x4038 x1537) (and (= x257 x1073) (and (and (and (= x1055 (ite x102 1 0)) (= (x323 (- x1537 100000000) 100000) x3081) (= x4151 (x2009 1 x3925)) (= x2112 x1537) (= 0 x3391) (= x1259 (x230 64 x3972 5)) (= x3391 (ite (= 0 x3925) (ite (= 0 x3925) 1 0) (ite (> x3925 6) 1 0))) (= (x3697 x1638) x582) (= (x1761 x3619) x1619) (<= 1 x2680) (>= 281474976710655 x3368) (= x2794 1495468574) (= x2401 x3972) (= (x230 64 x1648 5) x502) (= x3368 (x45 x502)) (= x3619 x3211) (= x582 x2363) (= false x3102) (= (= x4151 1) x102) (= x3549 (x45 x1259)) (= false x3649) (>= 127 x577) (<= x3549 281474976710655) (<= 1 x3549) (= (x1819 x1638) x2680) (>= 127 x577)) (= x1648 x3211)) (and (= x962 x3925) (= x3744 false)))))) (and (= false x510) (= false x2168) (= false x2292) (= x257 x2739) (= x1810 (x45 x3)) (= x3591 x10) (= 785044283 x1510) (= x233 x10) (= x1584 false) (= false x1022) (= (x230 64 x1810 9) x1841) (>= 340282366920938463463374607431768211455 x3827) (>= 127 x2086) (= x3827 x2878) (<= x1810 281474976710655) (>= 127 x2086) (= x4038 x3040) (= x931 x962) (= false x3473) (= (x1515 x1841) x3827) (>= x1200 1) (= x3 (x230 64 x10 5)) (= (x1819 x1638) x1200) (= 132 x547) (= x2860 x4090)))) (and (= false x2410) (= x987 false) (= 0 x3220) (= 4 x722) (= (x45 x2330) x3975) (= x1284 false) (= x2358 false) (= x931 x2429) (not x1352) (= x2735 3311251043) (= x3728 x2739) (= x1436 false) (<= x3932 127) (= x3621 false) (= x2126 true) (= x367 true) (= x3720 561662832) (= (x1819 x1638) x3997) (= x1352 (= x3211 x1638)) (not x740) (<= x980 127) (>= x3161 1) (= x2795 true) (= false x3810) (= false x397) x130 (= (= x2429 5) x1905) (= x931 x3715) (= (= x3075 x3211) x797) (= 6 x4248) (= x3161 (x1819 x1638)) (<= 1 x3997) (= 36 x1999) (= x3863 false) (not x797) (= x1626 5) x2315 (= x2811 false) (= x2035 false) (<= x3932 127) (= x3031 true) (= x2138 x4090) (<= x3975 281474976710655) (= x4090 x153) (= x2315 (= x2138 x3211)) (= x2130 (= x3715 6)) (>= 127 x980) (= (= x3211 x2304) x740) (= x2330 (x230 64 x3950 5)) (= (or x1905 x2130) x130) (= false x1526) (= 4 x3743) (= false x434) (= x1946 false))) (and (=> (and (and (and (= x4063 0) (= 0 x1863) (= x1917 (= x749 0)) (= (+ 2 x276) x2539) (= 1 x773) (= (+ 1 x1615) x276) (= x3927 (x230 64 0 x2539)) (= x2181 (x4192 x3927)) (= 0 x3425) (= x1615 (x230 64 0 14)) (= x749 (x3763 x2181 1))) (or (and (and (= 0 x704) (= x2263 1)) (not x1917)) (and x1917 (= x2263 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x102) x3726) (=> (and (not x102) (and (= (x230 64 65535 x4249) x2945) (= x3077 254) (= (+ x4112 2) x4249) (= 16777215 x3476) (= (+ x3119 1) x4112) (= (x3933 x554 1) x55) (= x3119 (x230 64 1 14)) (= (x4192 x2945) x554) (= x3170 255) (= x1322 1) (= (= 0 x55) x1261))) (and (=> (and (and (= x585 (< 340282366920938463463374607431768211455 x55)) (or (and x585 (and (= (x3763 x55 128) x1707) (= x2246 128))) (and (and (= 0 x2246) (= x1707 x55)) (not x585)))) (not x1261)) x375) (=> (and x1261 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2357)) x159))))) x4235))
(assert (x1384 x658))
(assert (= (x250 (x230 64 x1258 x1555)) 64))
(assert (= (x3377 (* x728 256)) (x3933 x728 8)))
(assert (x1384 x4145))
(assert (x1000 x3483))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x1316)))
(assert (= (and x3819 x885) x416))
(assert (= (x4195 (x230 64 x3146 14)) 14))
(assert (= (and x2385 x2046) x1021))
(assert (= (or x2810 x1018) x1472))
(assert (= (x2128 x2206) (x2128 (+ x2206 2))))
(assert (x1000 x1980))
(assert (x1384 x2498))
(assert (not (x2614 (x230 64 x4020 x3622))))
(assert (x2466 256 x3670))
(assert (= x3281 (=> (and (or (and (and (= (ite (< 0 x1824) 0 1) x321) (= (x3737 (- x3448 x2190)) x1824) (<= x3448 1099511627775) (= (x1642 x2316) x3448) (= (x230 64 0 x1657) x2316)) x3569) (and (= 1 x321) (not x3569))) (= x3569 (= x160 0))) x1618)))
(assert (x1384 x3905))
(assert (= (and (not x4158) x3935) x1282))
(assert (= x3157 (=> (= (= x927 0) x3496) (and (=> (and x3496 (and (= (ite x3140 1 0) x2695) (= (x230 64 x2695 14) x1961) (= (x230 64 x2189 x1961) x242) (= x2189 (x2009 16777215 x3065)) (= (= x761 0) x4051))) (and (=> (and (= (ite x4051 1 0) x1083) x4051) x3338) (=> (and (not x4051) (and (and (= (x1381 x2415) x3850) (= (< 0 x3850) x1048) (= x2415 (x230 64 x761 x242)) (>= 1099511627775 x3850)) (or (and (= x4163 (ite x1048 1 0)) x1048) (and (not x1048) (and (= (ite (< 0 x2998) 1 0) x4163) (= x2998 (x1798 x988)) (= x988 (x230 64 x761 x242)) (>= 1099511627775 x2998)))))) x3262))) (=> (and (not x3496) (or (and x3140 (and (= x224 (* x1624 1000000)) (= x1624 (x2817 x3193 x600)) (= x2338 x3193) (= (x323 x848 1000000) x3210) (>= 18446744073709551615 x2688) (= (* x3712 100000) x1702) (<= x1624 18446744073709551615999999999999999999) (<= 0 x1624) (= (+ (ite (< 0 (x2350 x3026 1000000000000000000000000)) 1 0) x3505) x2688) (= x224 x3026) (= (+ x1702 100000000) x600) (>= 9999999 x1176) (= (x323 x3026 1000000000000000000000000) x3505) (= (x2009 16777215 x3065) x3712) (= 1000000000000000000000000 x2120) (= x1176 (x2009 16777215 x3065)) (= x848 (* 1000000 x3038)) (>= 1844674407370955 x927) (= x1493 1) (not (> x2688 x3210)) (= (* 100000000000000 x927) x2338))) (and (not x3140) (and (<= x927 184467440737095516) (= (* x3038 1000000000000000000) x1265) (= (* x927 100000000000000) x1693) (= (x323 x1265 1000000) x3692) (= x830 x1693) (not (> x830 x3692)))))) x3795)))))
(assert (x1000 x804))
(assert (x1384 x2269))
(assert (= x3158 (or x1398 x2866)))
(assert (x3295 x1514 x4157 x1028 x36))
(assert (x2614 561662832))
(assert (x1384 x700))
(assert (x2547 x3055 4294967296))
(assert (x295 x2103))
(assert (x1384 x840))
(assert (x1384 x1410))
(assert (= 64 (x250 (x230 64 x2695 14))))
(assert (x2466 4294967296 x1658))
(assert (= (and x3046 x1590) x1704))
(assert (= (and x267 x2931) x131))
(assert (x2712 x1358))
(assert (x2547 x3135 4))
(assert (= x1977 (and x2807 (not x2271))))
(assert (= (x2128 (x230 64 0 x2539)) (x230 64 0 x2539)))
(assert (x1384 x3980))
(assert (= (or x1294 x3592) x1873))
(assert (= (x3706 (x230 64 x1464 x3622)) x1464))
(assert (x3404 (* x1297 4294967296)))
(assert (x1384 x3043))
(assert (x3395 x3670))
(assert (= (x230 64 x2418 14) (x2128 (x230 64 x2418 14))))
(assert (= (x3933 x1160 2) (x3377 (* x1160 4))))
(assert (= x2922 (=> (and (and (= x3211 x3950) (and (or (and (and (= x1006 (+ 1 x35)) (= x2927 (x230 64 x2678 6)) (= x2678 (+ x35 1)) (<= x35 281474976710654) (= x1792 (x230 64 x3950 5))) x4199) (not x4199)) (and (= (x2216 x1638) x918) (= (x1819 x1638) x940) (= 1295524075 x2778) (= x3211 x1466) (= false x3070) (= x4199 (= x1653 0)) (>= 281474976710655 x1653) (<= x523 127) (= x2186 false) (= x2912 (x230 64 x3950 5)) (<= 1 x940) (= x662 (x2676 x1466)) (= x1653 (x432 x2912)) (= x918 x3560) (<= x523 127)))) (and (= false x3358) (<= 1 x1638) (= x2541 1000000000000000000) x1561 (= 100000000 x3796) (<= x791 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x1578) (<= x2739 34028236692093846346337460743176821) (= x3906 1000099900000) (>= x3669 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1311) (= x4054 false) (>= x3075 1) (>= 1461501637330902918203684832716283019655932542975 x3211) (not (= x3336 x1638)) (<= x1867 127) (= 0 x1400) (<= x3926 1461501637330902918203684832716283019655932542975) (= 100000000000 x843) (= 0 x227) (= 254742742 x2835) (= x2645 (< 0 (x1819 x3072))) (>= 1461501637330902918203684832716283019655932542975 x3075) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1588) (<= 0 x791) (>= x3072 1) (<= x931 255) (<= x3669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x2739) (= x586 false) (<= 0 x3324) (<= 1 x884) (= x1561 (> (x1819 x1638) 0)) (not (= x3072 x3336)) (>= x1815 0) (<= x2304 1461501637330902918203684832716283019655932542975) (<= 0 x931) (= x3336 x2304) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1815) (>= x1588 0) (>= 1461501637330902918203684832716283019655932542975 x3072) (= x3211 x4090) (<= x3336 1461501637330902918203684832716283019655932542975) (= x3072 x3075) (= 1000000 x3916) (= x2322 100000000000000) (= x2921 4) (= x4247 false) (<= x3928 1461501637330902918203684832716283019655932542975) (>= x3211 0) (>= 1000099900000 x3040) (= x2438 false) (= (x1819 x1638) x884) (= x2213 4) (<= x3343 115792089237316195423570985008687907853269984665640564039457584007913129639935) x995 (= x52 100000) (= x995 (< 0 (x1819 x3336))) (<= 0 x3343) (>= x1311 0) x2645 (= x1736 1000000) (>= 127 x1867) (>= x3928 0) (>= x3040 100000000) (>= x2304 1) (<= x1638 1461501637330902918203684832716283019655932542975) (<= 1 x3336) (<= x3324 1461501637330902918203684832716283019655932542975) (not (= x3072 x1638)))) x4235)))
(assert (= x2964 (or x692 x3875)))
(assert (x1384 x604))
(assert (x2547 x3980 16))
(assert (= (and x1787 (not x890)) x3317))
(assert (= (or x690 x3969 x1788 x3694) x3437))
(assert (= (x3377 (ite (> 256 x4081) (x521 2 x4081) 0)) (x3933 1 x4081)))
(assert (= (and x3321 (not x2361)) x782))
(assert (x3295 x1028 x36 x3193 x600))
(assert (= (x3763 x874 4) (x323 x874 16)))
(assert (= (x323 x3801 4) (x3763 x3801 2)))
(assert (> (x230 64 x2189 x1961) 10000))
(assert (x3395 (- x4157 x3193)))
(assert (x1384 x3253))
(assert (= (and (not x3806) x304) x982))
(assert (= (and x3239 x4107) x3411))
(assert (= x3651 (x4195 (x230 64 x3449 x3651))))
(assert (x2466 4294967296 x3105))
(assert (x2547 x3232 65536))
(assert (= (x250 (x230 64 x2050 14)) 64))
(assert (x1000 x669))
(assert (= (and x3249 x3126) x2763))
(assert (= (x4195 (x230 64 x10 5)) 5))
(assert (x1384 x916))
(assert (x1384 x1095))
(assert (= (x3377 (* x1721 16)) (x3933 x1721 4)))
(assert (x3404 (* 65536 x2063)))
(assert (= x1607 (or x670 x1700)))
(assert (x3606 x4069 1000000000000000000000000))
(assert (x1384 x4045))
(assert (x1384 x1789))
(assert (x2466 256 x2155))
(assert (= (x2128 (x230 64 x2111 14)) (x230 64 x2111 14)))
(assert (x1804 x3751 x3866 x753 x4099))
(assert (x2547 x534 65536))
(assert (x2614 3311251043))
(assert (x1384 x3502))
(assert (x1384 x3076))
(assert (= (x3377 (* 65536 x293)) (x3933 x293 16)))
(assert (= (and x1246 x555) x3229))
(assert (x1000 x2663))
(assert (= (x3763 x3789 2) (x323 x3789 4)))
(assert (= x304 (and x1143 (not x2006))))
(assert (= x2530 (or x4017 x736)))
(assert (x3404 (* x4166 340282366920938463463374607431768211456)))
(assert (= (x250 (x230 64 x3449 x3651)) 64))
(assert (x1725 x3866 (- x3751 x463)))
(assert (x1725 x1028 (- x36 x4099)))
(assert (= x933 (or x1043 x3681)))
(assert (x1327 (* 4294967296 x4190) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 (* 2 x1812)))
(assert (x3395 x2102))
(assert (= x670 (and (not x3545) x1701)))
(assert (x3404 (* 65536 x3590)))
(assert (x1000 x3385))
(assert (= (x230 64 x3930 x2566) (x2128 (x230 64 x3930 x2566))))
(assert (< 10000 (x230 64 x339 14)))
(assert (x2060 x3364))
(assert (= x436 (and (not x750) x1379)))
(assert (= (x2128 254742742) 0))
(assert (x1384 x386))
(assert (x1384 x2268))
(assert (x3404 (* x108 16)))
(assert (x1804 x600 x3193 x3751 x3866))
(assert (x2547 x1377 65536))
(assert (x1384 x1347))
(assert (= (x3377 (* x3757 340282366920938463463374607431768211456)) (x3933 x3757 128)))
(assert (x2466 340282366920938463463374607431768211456 x357))
(assert (= (and (not x1180) x3859) x135))
(assert (= x690 (and x3107 x4221)))
(assert (x1384 x2157))
(assert (< (x230 64 x1722 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x3061))
(assert (x1384 x3691))
(assert (x1384 x3866))
(assert (= x1590 (or x1539 x999)))
(assert (x1384 x3014))
(assert (x1384 x3604))
(assert (x1384 x3278))
(assert (= x1237 (and x2925 (not x1106))))
(assert (x81 16776960))
(assert (= (or x1279 x1778) x1845))
(assert (= (=> (and (= x3056 (> x534 65535)) (or (and x3056 (and (= x300 (+ 16 x117)) (= (x3763 x534 16) x2037))) (and (not x3056) (and (= x534 x2037) (= x117 x300))))) x4053) x567))
(assert (x1384 x1127))
(assert (= (x3763 x88 4) (x323 x88 16)))
(assert (x1566 x3925))
(assert (= x2755 (and x1873 x3842)))
(assert (x3404 x1904))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x1438)))
(assert (x1384 x1858))
(assert (= x736 (or x1820 x2577)))
(assert (= (and x2148 x102) x1163))
(assert (x3404 x556))
(assert (= x850 (x3706 (x230 64 x850 x2581))))
(assert (=> (>= 10000 x3972) (= 0 (x2128 x3972))))
(assert (= (or x2935 x1978) x210))
(assert (= (x3763 x241 32) (x323 x241 4294967296)))
(assert (x1384 x3171))
(assert (= x3298 (and x2568 x2115)))
(assert (= (and x4070 x4009) x4149))
(assert (x2547 x3570 340282366920938463463374607431768211456))
(assert (x1384 x2775))
(assert (= (and (not x780) x2321) x2679))
(assert (x1384 x4106))
(assert (= x1177 (and (not x3968) x1818)))
(assert (not (x2614 (x230 64 x4188 x1657))))
(assert (x3295 x753 x4099 x463 x2450))
(assert (= x1589 (and x3962 x3994)))
(assert (x3395 (- x1514 x3751)))
(assert (x81 x616))
(assert (x3404 (* 256 x3121)))
(assert (x1384 x4224))
(assert (x1384 x2204))
(assert (= (and x1763 (not x3688)) x668))
(assert (x2466 2 x232))
(assert (= (x3933 x1308 128) (x3377 (* 340282366920938463463374607431768211456 x1308))))
(assert (< 10000 (x230 64 x3036 9)))
(assert (x1384 x3467))
(assert (x1384 x1320))
(assert (= 5 (x4195 (x230 64 x3950 5))))
(assert (x3295 x4157 x1514 x36 x1028))
(assert (=> (<= x2351 10000) (= (x2128 x2351) 0)))
(assert (= 0 (x3706 (x230 64 0 x3622))))
(assert (= (=> (= (= x2357 115792089237316195423570985008687907853269984665640564039457584007913129639935) x511) (and (=> (and (not x511) (and (= (x882 (+ 16776960 x2357)) x1577) (= (ite (<= x2357 255) x1577 (x1161 16776960 x2357)) x3364))) x591) (=> (and (and (= (x2459 x1931) x841) (= (x230 64 255 x1822) x1931) (= 254 x1347) (= x1822 (+ 1 x4112)) (= x2021 (= x804 0)) (= (x3933 x841 1) x804) (= 255 x1112)) x511) (and (=> (and (and (or (and (and (= x1084 x804) (= 0 x541)) (not x1233)) (and x1233 (and (= x541 128) (= (x3763 x804 128) x1084)))) (= x1233 (> x804 340282366920938463463374607431768211455))) (not x2021)) x2288) (=> (and x2021 (= x2244 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x969))))) x159))
(assert (= (x230 64 x3181 x3538) (x2128 (x230 64 x3181 x3538))))
(assert (= (x2128 x3651) (x2128 (+ 1 x3651))))
(assert (x1384 x3048))
(assert (x3404 (* x739 4)))
(assert (= (or x1385 x1281) x3895))
(assert (x1384 x679))
(assert (x1384 x4110))
(assert (> (x230 64 x2190 x1280) 10000))
(assert (x1384 x3995))
(assert (x2060 16777215))
(assert (= (and x299 (not x1150)) x3768))
(assert (= x3969 (and x3529 (not x2929))))
(assert (x1384 x327))
(assert (x1384 x4146))
(assert (x1327 (* x3136 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4195 (x230 64 x2750 14)) 14))
(assert (x2466 18446744073709551616 x571))
(assert (= (x3377 (* x1620 65536)) (x3933 x1620 16)))
(assert (= (x3763 x3100 64) (x323 x3100 18446744073709551616)))
(assert (< 10000 (x230 64 255 x1822)))
(assert (x3395 (- x1514 x36)))
(assert (= x3515 (and x2642 x102)))
(assert (x2060 x3633))
(assert (x1384 x124))
(assert (x2060 x3925))
(assert (= (and x1213 (not x917)) x3270))
(assert (= (and x3725 (not x333)) x1344))
(assert (= x3335 (or x3504 x2792)))
(assert (x1384 x3524))
(assert (> (x230 64 x4188 x1657) 10000))
(assert (= (and x750 x1379) x118))
(assert (= (or x1985 x4010) x2424))
(assert (= x22 x3299))
(assert (x1384 x867))
(assert (=> (<= x2433 10000) (= 0 (x2128 x2433))))
(assert (= (x3763 x4202 128) (x323 x4202 340282366920938463463374607431768211456)))
(assert (< 10000 (x230 64 x948 x2640)))
(assert (=> (<= x4020 10000) (= (x2128 x4020) 0)))
(assert (x1327 (* x2155 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3670 10000) (= 0 (x2128 x3670))))
(assert (x1804 x36 x1028 x3193 x600))
(assert (x1725 x1514 (- x4157 x1028)))
(assert (x1384 x460))
(assert (= (and x3800 x3948) x2059))
(assert (x2060 x1394))
(assert (x1384 x2246))
(assert (= (x3933 x3982 8) (x3377 (* x3982 256))))
(assert (= x4027 (=> (and (or (and (not x2425) (and (= x2730 x2451) (= x3846 x3630))) (and x2425 (and (= (x3763 x3846 16) x3630) (= x2730 (+ x2451 16))))) (= (> x3846 65535) x2425)) x887)))
(assert (= (x3933 x3121 8) (x3377 (* x3121 256))))
(assert (x3295 x3193 x600 x1028 x36))
(assert (x1804 x1514 x4157 x1028 x36))
(assert (x1384 x2985))
(assert (x1384 x2048))
(assert (x3404 (* 18446744073709551616 x176)))
(assert (x1725 x753 (- x4099 x600)))
(assert (= x3182 (x4195 (x230 64 x2556 x3182))))
(assert (= (and (not x2432) x1602) x2659))
(assert (x1384 x1196))
(assert (= x2955 (or x2818 x2480)))
(assert (x1384 x1999))
(assert (< (x230 64 x3036 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x481 (not x1066)) x693))
(assert (= x3173 (and x1362 (not x1492))))
(assert (= 0 (x2128 6277101735386680763835789423207666416102355444464034512896)))
(assert (x1384 x683))
(assert (x1804 x463 x2450 x3193 x600))
(assert (x1384 x1849))
(assert (= x1103 (or x4220 x1292)))
(assert (x1000 x3556))
(assert (x1384 x4114))
(assert (x3404 (* x2895 256)))
(assert (= (x3933 x1663 4) (x3377 (* 16 x1663))))
(assert (x2466 2 x3136))
(assert (= (=> (and (= x3192 x358) (= x3309 x187)) x400) x2626))
(assert (x1384 x1509))
(assert (x1384 x2670))
(assert (= (x3377 (* x3519 2)) (x3933 x3519 1)))
(assert (x1384 x1040))
(assert (x1384 x2212))
(assert (x295 x2426))
(assert (= x3299 (=> (and (= (+ (x3933 x3065 128) x761) x834) (or (= x1938 6277101735386680763835789423207666416102355444464034512896) (= 0 x1938)) (= x1938 (* x1055 6277101735386680763835789423207666416102355444464034512896)) (= x330 (* 340282366920938463463374607431768211456 x3081)) (= x700 (+ x2190 x330 x1938)) (= (ite (>= 6277101735386680763835789423207666416102355444464034512895 x834) x3194 (x1161 x2732 x834)) x2457) (or (= x2732 6277101735386680763835789423207666416102355444464034512896) (= 0 x2732)) (= (ite (not x102) 1 0) x3196) (= (x882 (+ x834 x2732)) x3194) (= (* 6277101735386680763835789423207666416102355444464034512896 x3196) x2732)) (and (=> (and x102 (and (or (and (not x254) (and (= x1550 0) (= 1 x3660))) (and x254 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3660))) (and (= x3353 (x1741 x3662)) (= x2495 0) (= 1 x3696) (= (+ 1 x3912) x1289) (= x254 (= 0 x3027)) (= x3662 (x230 64 0 x94)) (= x94 (+ x1289 2)) (= (x3763 x3353 1) x3027) (= x2657 0) (= 0 x3832) (= (x230 64 0 14) x3912)))) x4206) (=> (and (not x102) (and (= (x1741 x1429) x3869) (= (x230 64 65535 x1951) x1429) (= (x3933 x3869 1) x3465) (= (+ 2 x4251) x1951) (= x1225 16777215) (= (= 0 x3465) x1525) (= x1414 (x230 64 1 14)) (= (+ x1414 1) x4251) (= 255 x1232) (= 1 x1583) (= x3434 254))) (and (=> (and (not x1525) (and (= (< 340282366920938463463374607431768211455 x3465) x3388) (or (and (and (= x3057 x3465) (= 0 x2090)) (not x3388)) (and x3388 (and (= x2090 128) (= x3057 (x3763 x3465 128))))))) x2456) (=> (and (= x1948 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1525) x1918)))))))
(assert (< 10000 (x230 64 x2793 x1895)))
(assert (x1384 x3774))
(assert (= (and (not x839) x4132) x1019))
(assert (x1384 x587))
(assert (x1327 (* 340282366920938463463374607431768211456 x2516) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x81 x3719))
(assert (x1384 x96))
(assert (= x1775 (=> (and (= x811 (+ (x3933 x272 8) x3019)) (= (- 255 (ite (= (x3933 x2135 1) 0) x1139 (+ 1 x1139))) x3019)) x701)))
(assert (x1384 x3570))
(assert (= (x2128 (+ x580 1)) (x2128 x580)))
(assert (= (=> (and (= x2403 (x3737 (- x2579 1))) (= x2403 x1684) (= x2579 (ite (< 1 x2887) (+ x2182 1) x2182))) x1201) x1913))
(assert (x1384 x3089))
(assert (x1725 x753 x4099))
(assert (x4211 x1684))
(assert (= (x3763 x3556 4) (x323 x3556 16)))
(assert (= x939 (and x1600 (not x156))))
(assert (= (x3763 x100 2) (x323 x100 4)))
(assert (= x335 (and x1243 x1189)))
(assert (= (and x3332 (not x3424)) x4236))
(assert (x1384 x2735))
(assert (= (or x314 x3753) x4109))
(assert (x2547 x1205 256))
(assert (= x1940 (=> (and (or (and (and (not (> x1641 x1576)) (= (x3737 (- x1576 x1641)) x2040) (>= 340282366920938463463374607431768211455 x1343) (= (x1469 x3618) x4146) (= x3184 (- x4184 x2488)) (= 0 x3847) (= x1557 (x976 x332)) (= (* 1000000 x753) x3275) (= (x1469 x3618) x1063) (= x340 (x230 64 x3368 9)) (= (+ x3967 x657) x2738) (= (x3949 x340) x3174) (= x122 (- x2142 x1557)) (= x1911 (+ x368 x3831)) (= x753 x2652) (= x2612 0) (<= x4146 340282366920938463463374607431768211455) (= x109 x2143) (>= 340282366920938463463374607431768211455 x1911) (= x1251 x1911) (= x1641 (x2009 18446744073709551615 x684)) (= (x1634 x2141) x2488) (= x1616 x2084) (= (x2009 18446744073709551615 x2040) x3479) (= (+ x753 x4146) x109) (= (+ x4068 x2143) x1870) (= (x1634 x2141) x1616) (= (x323 x3275 1000000000000000000) x684) (= (x2009 340282366920938463463374607431768211455 x1904) x657) (= (- x2738 x3174) x4144) (>= 340282366920938463463374607431768211455 x1063) (= (x230 64 x3805 9) x332) (= x3479 x695) (>= x1911 0) (= (x3949 x340) x1343) (<= x1557 340282366920938463463374607431768211455) (>= 340282366920938463463374607431768211455 x368) (<= 0 x109) (<= x2488 340282366920938463463374607431768211455) (= x900 x1756) (= x368 (x976 x332)) (>= 340282366920938463463374607431768211455 x3174) (= (x230 64 x652 9) x2141) (not (> x825 x1343)) (<= x652 281474976710655) (= (- x1870 x1063) x900) (>= 340282366920938463463374607431768211455 x109) (= (x45 x2073) x652) (= x3831 x825) (= x4184 (+ x122 x2084)) (= x2142 (+ x1251 x4144)) (= x3618 (x230 64 x3368 9)) (<= x1616 340282366920938463463374607431768211455) (= (x230 64 x1224 5) x2073) (= x3184 x2183) (= x1904 (x3737 (- x1343 x825)))) x102) (and (not x102) (and (not (< x1136 x753)) (>= 340282366920938463463374607431768211455 x2224) (>= 340282366920938463463374607431768211455 x2327) (<= 0 x2327) (= x3861 x2327) (= (+ x3831 x3156) x2327) (= x1434 (x2009 340282366920938463463374607431768211455 x4127)) (= x2960 (+ x3861 x3967)) (= x2235 (x3290 x1956)) (= x3868 (x2009 18446744073709551615 x2103)) (= x3762 (* 1000000 x3831)) (= (x230 64 x1224 5) x3525) (<= x2173 340282366920938463463374607431768211455) (= x3981 (- x3686 x2173)) (= x2652 x753) (= x584 x4172) (= x2243 (x3949 x497)) (<= x3156 340282366920938463463374607431768211455) (= (x1469 x4186) x3741) (= x807 (x2009 18446744073709551615 x1627)) (= (x3949 x497) x3156) (= (x3737 (- x1576 x807)) x2103) (>= 340282366920938463463374607431768211455 x2235) (= (x230 64 x3199 9) x1934) (= (+ x3656 x3235) x2352) (= x695 x3868) (= (x1970 x1934) x2224) (= x2224 x3656) (= x2173 (x3290 x1956)) (not (< x1576 x807)) (>= 340282366920938463463374607431768211455 x4172) (>= 340282366920938463463374607431768211455 x3741) (= x3686 (+ x584 x2402)) (<= x3199 281474976710655) (= x1715 (x1970 x1934)) (= x4186 (x230 64 x3368 9)) (= x1756 x3981) (= x4172 (+ x753 x2235)) (= (x230 64 x3805 9) x1956) (>= 340282366920938463463374607431768211455 x1136) (= x4127 (x3737 (- x1136 x753))) (= 0 x1568) (= x1840 x2183) (= x497 (x230 64 x3368 9)) (= (- x524 x3741) x2402) (<= x1715 340282366920938463463374607431768211455) (= (x323 x3762 1000000) x1627) (= (+ x4068 x1434) x524) (= x3199 (x45 x3525)) (= (- x2960 x2243) x3235) (<= x2243 340282366920938463463374607431768211455) (= x1840 (- x2352 x1715)) (= (x1469 x4186) x1136) (>= x4172 0) (= x1906 0)))) (and (= x467 (x2817 x753 x4099)) (= x24 1) (= x2039 x3167) (not (< x3952 x753)) (= (* 100000 x215) x2536) (= 1000000000000000000000000 x2699) (= x3831 (+ (ite (< 0 (x2350 x3167 1000000000000000000000000)) 1 0) x512)) (= x51 (x3737 (- x3952 x753))) (= x4099 (+ x2536 100000000)) (<= x2909 9999999) (= x512 (x323 x3167 1000000000000000000000000)) (= (x2009 16777215 x1308) x215) (= (x2009 16777215 x1308) x2909) (= (* 1000000 x467) x2039))) x1874)))
(assert (x1000 x3980))
(assert (= (=> (and (= (< 3 x2757) x2821) (or (and (and (= x286 x4039) (= x2757 x3003)) (not x2821)) (and (and (= (x3763 x2757 2) x3003) (= (+ 2 x286) x4039)) x2821))) x3907) x3687))
(assert (x1384 x180))
(assert (x1384 x2897))
(assert (x1384 x4226))
(assert (= x191 (and (not x285) x2873)))
(assert (x1000 100000))
(assert (x1384 x508))
(assert (x1384 x3497))
(assert (x1384 x3310))
(assert (x1384 x321))
(assert (= x2923 (x4195 (x230 64 x2155 x2923))))
(assert (= (=> (and (or (and (and (= x2420 x2340) (= x3483 x4115)) (not x1622)) (and x1622 (and (= x2420 (+ x2340 8)) (= (x3763 x4115 8) x3483)))) (= x1622 (< 255 x4115))) x336) x1797))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x881 9)))
(assert (x1000 x3375))
(assert (x1327 x3048 18446744073709551616))
(assert (= (x323 x804 340282366920938463463374607431768211456) (x3763 x804 128)))
(assert (x1725 x4157 (- x1514 x1028)))
(assert (= (x2128 x504) (x2128 (+ x504 2))))
(assert (x1384 x1123))
(assert (x2466 65536 x1620))
(assert (x2466 6277101735386680763835789423207666416102355444464034512896 x1055))
(assert (x3395 x4099))
(assert (x1384 x610))
(assert (= x1506 (=> (= (= x3449 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1982) (and (=> (and (and (and (= (x2459 x3023) x3605) (= x3651 (+ x276 1)) (= (x230 64 x3449 x3651) x3023) (= (= x2388 0) x535) (= (x3933 x3605 128) x2388)) (or (and (not x535) (and (= 128 x1328) (= x2388 x2859))) (and x535 (and (= 0 x1328) (= x3605 x2859))))) (not x1982)) x2916) (=> (and (= x811 0) x1982) x701)))))
(assert (< 10000 (x230 64 65535 x2194)))
(assert (x2060 x3781))
(assert (= x1423 (and x3322 x1052)))
(assert (= (or x146 x2905) x2597))
(assert (x2547 x1068 4294967296))
(assert (x3404 18446744073709551616))
(assert (x1000 6277101735386680763835789423207666416102355444464034512896))
(assert (= (=> (and (= x3956 (= 0 x4163)) (or (and (= x509 1) (not x3956)) (and x3956 (and (>= 1099511627775 x2728) (= (x230 64 0 x242) x3957) (= x1283 (x3737 (- x2728 x761))) (= x2728 (x1798 x3957)) (= x509 (ite (> x1283 0) 0 1)))))) x2938) x3262))
(assert (= (or x118 x436) x1760))
(assert (x2614 2937758641))
(assert (< (x230 64 x2621 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 (- x1514 x463)))
(assert (= x4132 (and x2161 (not x425))))
(assert (x1384 x3831))
(assert (= (and x200 x3569) x2932))
(assert (= (x4195 (x230 64 x517 x1657)) x1657))
(assert (= (=> (and (and (= (x3933 x581 2) x1121) (= (= x1121 0) x525)) (or (and x525 (and (= x3213 x3089) (= x770 x581))) (and (not x525) (and (= x1121 x770) (= (+ x3089 2) x3213))))) x3000) x2762))
(assert (< (x230 64 x4188 x1657) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2614 9999999))
(assert (= x3929 (=> (and (or (and (and (= x1658 x2317) (= x3430 (+ x3797 64))) (not x1002)) (and (and (= x1658 x1630) (= x3430 x3797)) x1002)) (and (= (x3933 x1630 64) x2317) (= x1002 (= x2317 0)))) x3360)))
(assert (x1384 x3718))
(assert (not (x2614 (x230 64 x3181 x3538))))
(assert (= x174 (x3706 (x230 64 x174 x1171))))
(assert (= (=> (and (= x916 (x2009 16777215 x3674)) (= (ite (= 16777215 x916) 0 x3674) x17) (= x17 x70)) x2074) x1097))
(assert (= (x3933 x3931 32) (x3377 (* 4294967296 x3931))))
(assert (x1384 x1587))
(assert (= (=> (and (or (and (and (= x765 x4124) (= x1520 x410)) (not x3886)) (and (and (= x1520 (x3763 x410 4)) (= x4124 (+ 4 x765))) x3886)) (= x3886 (< 15 x410))) x1564) x4175))
(assert (= x881 (x3706 (x230 64 x881 9))))
(assert (= (x250 (x230 64 255 x1822)) 64))
(assert (x1327 (* 16 x1663) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3050 (=> (and (or (and (and (= x3623 x534) (= x117 x1665)) (not x1499)) (and (and (= x534 (x3763 x3623 32)) (= (+ x1665 32) x117)) x1499)) (= x1499 (< 4294967295 x3623))) x567)))
(assert (x2466 256 x2477))
(assert (= (and x1745 (not x525)) x2041))
(assert (x1384 x2990))
(assert (x2547 x3801 4))
(assert (x1804 x463 x2450 x3751 x3866))
(assert (= (x323 x3864 16) (x3763 x3864 4)))
(assert (x81 x1948))
(assert (< (x230 64 x2490 x1542) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 x3026))
(assert (x2466 256 x2670))
(assert (= (x250 (x230 64 x2155 x2923)) 64))
(assert (< (x230 64 x1069 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x1205))
(assert (x1384 x978))
(assert (= (x250 (x230 64 x1168 x2262)) 64))
(assert (= (x3706 (x230 64 x652 9)) x652))
(assert (= x3965 (and x2201 x2136)))
(assert (x1327 (* x1230 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3404 (* x4187 65536)))
(assert (< 10000 (x230 64 x1222 14)))
(assert (x1384 x884))
(assert (x1327 x1684 256))
(assert (= (x3377 (* x841 2)) (x3933 x841 1)))
(assert (x2466 256 x228))
(assert (x1384 x2948))
(assert (= (and x2884 x3710) x3154))
(assert (= x3640 (and x1233 x1623)))
(assert (x3395 (- x753 x3751)))
(assert (x1384 x1431))
(assert (x1384 x830))
(assert (x1384 x3805))
(assert (= (x323 x2204 65536) (x3763 x2204 16)))
(assert (= x3466 (and x2962 (not x2132))))
(assert (= (and x3680 x1740) x3255))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1785 x282)))
(assert (= (and (not x3936) x1802) x1036))
(assert (x1384 x2827))
(assert (x1384 x2700))
(assert (x3295 x1028 x36 x600 x3193))
(assert (x2547 x4045 18446744073709551616))
(assert (= x3790 (x3706 (x230 64 x3790 9))))
(assert (= (and (=> (and (not x102) (and (>= x3081 1) (>= 9999999 x3081) (= x2874 (> x1567 (- x3081 1))) (= x1567 (x2009 16777215 x1308)))) (and (=> (and (not x2874) (and (= x3952 x1033) (= x114 608) (= x2781 x3967) (= x4068 x776))) x3740) (=> x2874 x799))) (=> (and x102 (and (= (> (+ x3081 1) x1475) x1884) (= (x2009 16777215 x1308) x1475))) (and (=> (and (not x1884) (and (= 608 x3495) (= x3952 x2861) (= x2983 x3967) (= x3561 x4068))) x2523) (=> x1884 x799)))) x2788))
(assert (x1384 x626))
(assert (x1327 (* x1003 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2128 (+ x870 2)) (x2128 x870)))
(assert (x1384 x3542))
(assert (= (x323 x2360 18446744073709551616) (x3763 x2360 64)))
(assert (not (x2614 (x230 64 x4177 14))))
(assert (= (x2128 x1713) (x2128 (+ 1 x1713))))
(assert (x1384 x149))
(assert (x1000 x2440))
(assert (x1384 x3196))
(assert (= (x3933 x2859 64) (x3377 (* 18446744073709551616 x2859))))
(assert (x1384 x457))
(assert (x1384 x1568))
(assert (= (x250 (x230 64 x3081 x2594)) 64))
(assert (= (and x1335 x2170) x2321))
(assert (=> (>= 10000 x2695) (= (x2128 x2695) 0)))
(assert (x1384 x2445))
(assert (x3395 (- x3866 x4099)))
(assert (x1384 x3603))
(assert (= (and x3974 x3484) x4010))
(assert (= (and (not x3765) x2770) x129))
(assert (= x3892 (and (not x2881) x3576)))
(assert (< (x230 64 x1410 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2060 x732))
(assert (x1384 x1878))
(assert (= x880 (and x3936 x1802)))
(assert (x1000 x4005))
(assert (= x4177 (x3706 (x230 64 x4177 14))))
(assert (= (and x3501 (not x2056)) x977))
(assert (x2547 x2820 256))
(assert (= 64 (x250 (x230 64 x3368 9))))
(assert (= (x230 64 x3372 x2647) (x2128 (x230 64 x3372 x2647))))
(assert (= (x250 (x230 64 x339 14)) 64))
(assert (= (and x1719 (not x44)) x814))
(assert (= x199 (x3706 (x230 64 x199 x1791))))
(assert (x1384 x3906))
(assert (= x2208 (=> (and (= x1477 (< 18446744073709551615 x1226)) (or (and (and (= x604 x3058) (= x4226 x1226)) (not x1477)) (and x1477 (and (= x604 (+ 64 x3058)) (= (x3763 x1226 64) x4226))))) x1929)))
(assert (= (x2128 (x230 64 x2695 14)) (x230 64 x2695 14)))
(assert (x1384 x1225))
(assert (= (=> (and (= (> x2638 4294967295) x2705) (or (and (not x2705) (and (= x2638 x2204) (= x3518 x2843))) (and (and (= x2204 (x3763 x2638 32)) (= (+ 32 x3518) x2843)) x2705))) x2684) x1236))
(assert (x1384 x2178))
(assert (not (x2614 (x230 64 x2620 x596))))
(assert (= x4096 (and x3140 x157)))
(assert (x1384 x1968))
(assert (x1725 x3193 (- x600 x4157)))
(assert (= x53 (or x1340 x4113)))
(assert (x3395 (- x3751 x1514)))
(assert (x3395 (- x1514 x600)))
(assert (= x2511 (and x3903 x26)))
(assert (x1384 x2354))
(assert (= 64 (x250 (x230 64 x1810 9))))
(assert (x1384 x2757))
(assert (x1384 x3022))
(assert (= x3874 (and (not x2156) x150)))
(assert (= x3607 (and (not x2874) x3786)))
(assert (= (x2128 340282366920938463463374607431768211456) 0))
(assert (= (and x3547 x3148) x1907))
(assert (= (x323 x468 65536) (x3763 x468 16)))
(assert (= x1802 (and x1149 (not x1655))))
(assert (x295 x3945))
(assert (x1384 x3982))
(assert (x3395 x3372))
(assert (=> (<= x1675 10000) (= 0 (x2128 x1675))))
(assert (=> (>= 10000 x1458) (= 0 (x2128 x1458))))
(assert (= x1657 (x4195 (x230 64 x2190 x1657))))
(assert (x3395 x1297))
(assert (x3295 x4099 x753 x1514 x4157))
(assert (x1725 x36 (- x1028 x2450)))
(assert (= (and x4051 x4250) x2792))
(assert (x3395 x1548))
(assert (x1384 x1443))
(assert (x1384 x3743))
(assert (x2466 1000000 x2376))
(assert (= x3168 (=> (and (= x2583 (= x1773 0)) (or (and (and (= x2621 (x942 x1182)) (= (x3420 x1482) x961) (= (x2009 1099511627775 x2967) x163) (= x4219 x2967) (= x2026 (x2009 1099511627775 x2967)) (= x1482 (x230 64 x2076 x3622)) (= (x230 64 x163 x3622) x2052) (= (x230 64 x961 x3622) x3304) (= x1991 (+ 1 x2052)) (= x2076 (x2009 1099511627775 x2967)) (= (x230 64 x2621 x3622) x3296) (= x1182 (x230 64 x2026 x3622)) (>= 1099511627775 x961) (>= 1099511627775 x2621)) x2583) (and (= 0 x4219) (not x2583)))) x989)))
(assert (= x3685 (=> (and (or (and (not x1635) (and (= x2474 x2198) (= x1377 x2939))) (and x1635 (and (= (+ 32 x2474) x2198) (= x1377 (x3763 x2939 32))))) (= x1635 (< 4294967295 x2939))) x343)))
(assert (x3395 x4187))
(assert (=> (<= x2556 10000) (= 0 (x2128 x2556))))
(assert (= x2043 (=> (and (or (and (and (= x2707 x3105) (= x1299 (+ 64 x3204))) (not x2696)) (and (and (= x3105 x176) (= x1299 x3204)) x2696)) (and (= x2696 (= 0 x2707)) (= (x3933 x176 64) x2707))) x1534)))
(assert (= (and x726 (not x1005)) x92))
(assert (x1384 x1194))
(assert (= (and x254 x2819) x1419))
(assert (x2466 1000000 x3225))
(assert (= x2454 (and x535 x3984)))
(assert (= (=> (= (= x321 0) x4056) (and (=> (and (= (ite x4056 1 0) x2272) (not x4056)) x682) (=> (and x4056 (and (or (and x2253 (= x2882 (ite x2253 1 0))) (and (and (= x2882 (ite (< 0 x899) 1 0)) (>= 1099511627775 x899) (= x899 (x1642 x806)) (= x806 (x230 64 x4188 x1657))) (not x2253))) (and (<= x655 1099511627775) (= x655 (x489 x519)) (= x519 (x230 64 x4188 x1657)) (= x2253 (< 0 x655))))) x3301))) x1618))
(assert (x2547 x644 16))
(assert (= (x323 x897 256) (x3763 x897 8)))
(assert (= x3268 (and x3968 x1818)))
(assert (= (=> (and (= x187 x913) (= x358 x2828)) x400) x1883))
(assert (x3395 x1073))
(assert (= x4193 (and x1180 x3859)))
(assert (= (x3706 (x230 64 x761 x2625)) x761))
(assert (x2547 x3986 2))
(assert (= (x3933 1 x3251) (x3377 (ite (< x3251 256) (x521 2 x3251) 0))))
(assert (x81 65280))
(assert (x3395 (- x4157 x753)))
(assert (x1384 x2420))
(assert (x2060 x1612))
(assert (x1384 x562))
(assert (x1384 x1176))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x761 x630)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x242)))
(assert (x1384 x1353))
(assert (x1384 x100))
(assert (= (x2128 (+ x2703 1)) (x2128 x2703)))
(assert (x1384 x1581))
(assert (x1384 x3720))
(assert (x3395 x3866))
(assert (= (x250 (x230 64 x1003 x1417)) 64))
(assert (x1384 x1550))
(assert (= (or x3478 x2496) x2502))
(assert (x1384 x3827))
(assert (x3404 x2426))
(assert (= (x230 64 x3908 5) (x2128 (x230 64 x3908 5))))
(assert (= x1570 (and (not x1652) x2665)))
(assert (= (x230 64 x2098 x3410) (x2128 (x230 64 x2098 x3410))))
(assert (= (x3706 (x230 64 0 x4001)) 0))
(assert (= (x250 (x230 64 x1155 x1099)) 64))
(assert (x1384 x1520))
(assert (= (x3763 x2562 128) (x323 x2562 340282366920938463463374607431768211456)))
(assert (x1384 x4164))
(assert (x2060 x2773))
(assert (=> (<= x3368 10000) (= 0 (x2128 x3368))))
(assert (x1725 x1514 x4157))
(assert (x3395 (- x463 x1514)))
(assert (= x1936 (=> (and (= x3456 (< 15 x88)) (or (and (and (= x936 x483) (= x88 x3135)) (not x3456)) (and (and (= (+ x483 4) x936) (= (x3763 x88 4) x3135)) x3456))) x205)))
(assert (= (x250 (x230 64 x4242 x3658)) 64))
(assert (x1384 x601))
(assert (x3404 (ite (< x4065 256) (x521 2 x4065) 0)))
(assert (x3295 x4157 x1514 x2450 x463))
(assert (= (x3706 (x230 64 0 x1993)) 0))
(assert (= x1835 (and x2822 (not x2240))))
(assert (x1384 x1030))
(assert (x1384 x2967))
(assert (x1384 x3986))
(assert (x1384 x1648))
(assert (x3395 x2450))
(assert (x1384 x3036))
(assert (= x380 (and x322 (not x123))))
(assert (x2614 1000000000000000000))
(assert (= x517 (x3706 (x230 64 x517 x1657))))
(assert (x2547 x3483 16))
(assert (= (x3706 (x230 64 x3372 x2647)) x3372))
(assert (x1384 x227))
(assert (x3404 x2103))
(assert (x3117 x1308))
(assert (x1000 x3465))
(assert (= (x250 (x230 64 x1843 x2996)) 64))
(assert (not (x2614 (x230 64 0 x1657))))
(assert (x1384 x3063))
(assert (x3395 x357))
(assert (x1725 x3193 (- x600 x2450)))
(assert (x3395 (- x463 x3751)))
(assert (= (=> (and (and (= (x230 64 x3081 x1890) x1657) (= x1890 (x230 64 x2418 14)) (= x4188 (x489 x69)) (= (> x4018 0) x1998) (= (ite x1349 1 0) x2418) (>= 1099511627775 x4018) (= (x230 64 0 x1657) x69) (= x4018 (x489 x1972)) (= x1972 (x230 64 x2190 x1657)) (>= 1099511627775 x4188)) (or (and (= (ite x1998 1 0) x160) x1998) (and (not x1998) (and (= x4085 (x230 64 x2190 x1657)) (>= 1099511627775 x1710) (= (ite (> x1710 0) 1 0) x160) (= (x1642 x4085) x1710))))) x3281) x3331))
(assert (x1384 x833))
(assert (< (x230 64 x2189 x1961) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1647 (or x3510 x1108)))
(assert (= (x323 x1389 340282366920938463463374607431768211456) (x3763 x1389 128)))
(assert (x1384 x678))
(assert (x1384 x9))
(assert (x3117 x3065))
(assert (x3295 x3751 x3866 x2450 x463))
(assert (= (x230 64 x1843 x2996) (x2128 (x230 64 x1843 x2996))))
(assert (x1384 x3316))
(assert (x1384 x3572))
(assert (x1384 x1750))
(assert (= (x3763 x1068 32) (x323 x1068 4294967296)))
(assert (x1384 x1535))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1030 x1025)))
(assert (not (x2614 (x230 64 x2477 x2994))))
(assert (= (and x1825 x2184) x1359))
(assert (x1725 x4099 (- x753 x600)))
(assert (= (x3763 x3022 16) (x323 x3022 65536)))
(assert (x3395 x3449))
(assert (x1384 x1736))
(assert (x1384 x3530))
(assert (= (and x4 x3895) x4023))
(assert (= (and x1336 x1004) x2601))
(assert (= x3680 (and x3111 x528)))
(assert (= x828 (and x4093 x3247)))
(assert (x3395 (x521 2 x2646)))
(assert (= x1224 (x3706 (x230 64 x1224 5))))
(assert (= (x2128 (x230 64 x1675 9)) (x230 64 x1675 9)))
(assert (x1384 x1501))
(assert (x1384 x2507))
(assert (= 9 (x4195 (x230 64 x1698 9))))
(assert (x3404 (ite (< x2324 256) (x521 2 x2324) 0)))
(assert (x3395 (- x753 x3193)))
(assert (= (x2128 (x230 64 x3972 5)) (x230 64 x3972 5)))
(assert (x1384 x968))
(assert (= (x250 (x230 64 x10 5)) 64))
(assert (x1725 x600 (- x3193 x4157)))
(assert (= (and (not x1076) x32) x4061))
(assert (x3395 (- x3751 x463)))
(assert (< (x230 64 x2111 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x230 64 x3805 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3395 x1160))
(assert (x1804 x36 x1028 x753 x4099))
(assert (= (and x846 (not x515)) x1631))
(assert (x1725 x2450 (- x463 x4157)))
(assert (< (x230 64 x106 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2466 256 x1030))
(assert (x3395 x1348))
(assert (x2547 x3767 18446744073709551616))
(assert (< (x230 64 x3166 x3571) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (and (= (x2817 9 9) 81) (= (x2817 3 3) 9) (= (x2817 9 3) 27) (= (x2817 27 3) 81)))
(assert (x1384 x966))
(assert (x1000 x2064))
(assert (= (x4195 (x230 64 x1785 x282)) x282))
(assert (x1384 x671))
(assert (= (x2128 340282366920938463463374607431768211455999999999999999999) 0))
(assert (= (x230 64 0 x3977) (x2128 (x230 64 0 x3977))))
(assert (x1384 x729))
(assert (x1384 x409))
(assert (x1384 x17))
(assert (x3295 x753 x4099 x3751 x3866))
(assert (x2060 x3048))
(assert (= x373 (or x3233 x1337)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2048 x86)))
(assert (< 10000 (x230 64 x2076 x3622)))
(assert (x1000 x1781))
(assert (= x3457 (or x1192 x2022)))
(assert (x2547 x1709 4))
(assert (< 10000 (x230 64 0 x1993)))
(assert (x1384 x3174))
(assert (= 9 (x4195 (x230 64 x1656 9))))
(assert (x1384 x3771))
(assert (x2466 256 x2895))
(assert (x3395 x3398))
(assert (x1384 x3017))
(assert (x3395 (- x753 x600)))
(assert (x3295 x3866 x3751 x753 x4099))
(assert (not (x2614 (x230 64 x2190 x1280))))
(assert (= (x3763 x3570 128) (x323 x3570 340282366920938463463374607431768211456)))
(assert (= 64 (x250 (x230 64 x1009 x2545))))
(assert (= (x323 x2948 256) (x3763 x2948 8)))
(assert (x2614 1000099900000))
(assert (x1384 x921))
(assert (x1725 x600 (- x3193 x1514)))
(assert (= x2789 (and (not x3671) x3347)))
(assert (= x1242 (=> (and (or (and (and (= (+ 32 x3872) x2509) (= x3590 x474)) (not x2129)) (and x2129 (and (= x2509 x3872) (= x3590 x2949)))) (and (= (= x474 0) x2129) (= (x3933 x2949 32) x474))) x3628)))
(assert (= (x2128 (x230 64 x2050 14)) (x230 64 x2050 14)))
(assert (=> (<= x1466 10000) (= (x2128 x1466) 0)))
(assert (x1384 x1426))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x2678 6)))
(assert (x1384 x3142))
(assert (x1384 x3801))
(assert (> (x230 64 x3047 x3141) 10000))
(assert (x1384 x1168))
(assert (= x1338 (=> (and (= x1150 (< 15 x3980)) (or (and (not x1150) (and (= x951 x2790) (= x3980 x4129))) (and (and (= (+ 4 x2790) x951) (= x4129 (x3763 x3980 4))) x1150))) x619)))
(assert (x2466 1 (x521 2 x1639)))
(assert (= (x323 x534 65536) (x3763 x534 16)))
(assert (= x3248 (and x4033 x1914)))
(assert (x2712 x3905))
(assert (x3404 (ite (> 256 x470) (x521 2 x470) 0)))
(assert (= (x3706 (x230 64 x2695 14)) x2695))
(assert (= (x323 x3355 256) (x3763 x3355 8)))
(assert (= x1978 (and x2685 (not x4134))))
(assert (= (x250 (x230 64 x174 x1171)) 64))
(assert (= (and x1659 x20) x4116))
(assert (= (x230 64 x3191 x3069) (x2128 (x230 64 x3191 x3069))))
(assert (= x4160 (and x2951 x3657)))
(assert (x1000 x2939))
(assert (x1384 x1101))
(assert (not (x2614 (x230 64 x2914 14))))
(assert (> (x230 64 x2653 x2199) 10000))
(assert (x81 x834))
(assert (x1327 (* 18446744073709551616 x176) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3637 (and x3185 x3914)))
(assert (= 14 (x4195 (x230 64 x106 14))))
(assert (= 64 (x250 (x230 64 x2076 x3622))))
(assert (= (or x2117 x2815) x2822))
(assert (x2547 x4226 4294967296))
(assert (= 5 (x4195 (x230 64 x3908 5))))
(assert (= x2804 (=> (and (or (and (not x750) (and (= x2064 x1479) (= x3401 x2988))) (and x750 (and (= (x3763 x1479 32) x2064) (= x2988 (+ 32 x3401))))) (= x750 (> x1479 4294967295))) x2075)))
(assert (= (x250 (x230 64 x552 14)) 64))
(assert (x2547 x3570 6277101735386680763835789423207666416102355444464034512896))
(assert (= x3005 (or x2697 x2690)))
(assert (= (and (not x338) x3643) x2395))
(assert (x1384 x3578))
(assert (= (or x1207 x372) x3458))
(assert (= (and x795 (not x4028)) x3333))
(assert (x1384 x1994))
(assert (x1000 x312))
(assert (x1000 x2261))
(assert (= (x250 (x230 64 x2742 x242)) 64))
(assert (x1384 x811))
(assert (=> (<= x1030 10000) (= (x2128 x1030) 0)))
(assert (= 64 (x250 (x230 64 x2190 x1657))))
(assert (x1204 x177 x3774))
(assert (x1384 x796))
(assert (x3395 (- x3866 x4157)))
(assert (x2614 184467440737095516))
(assert (= (or x1306 x1024) x2089))
(assert (x1384 x3113))
(assert (=> (>= 10000 x2742) (= 0 (x2128 x2742))))
(assert (= x641 (or x666 x1326)))
(assert (= (x230 64 x820 14) (x2128 (x230 64 x820 14))))
(assert (not (x2614 (x230 64 x1410 x2196))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x184)))
(assert (= (and x369 (not x480)) x3032))
(assert (x1384 x4252))
(assert (x2547 x3572 65536))
(assert (x1384 x1510))
(assert (x1384 x1063))
(assert (x1384 x3674))
(assert (= x2101 (or x1054 x305)))
(assert (x1384 x808))
(assert (= x1042 (and x2955 (not x102))))
(assert (x3295 x1514 x4157 x600 x3193))
(assert (x1327 (* x3869 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x2971))
(assert (= (and x1447 (not x3627)) x3512))
(assert (= x2740 (and x2148 (not x102))))
(assert (x2466 4 x2649))
(assert (x1327 (* x1450 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1280 (x4195 (x230 64 x2190 x1280))))
(assert (x2466 4 x581))
(assert (= (and x3994 (not x3962)) x3647))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x517 x1657)))
(assert (= (=> (and (= x990 (> x601 3)) (or (and x990 (and (= x1683 (+ 2 x2603)) (= x981 (x3763 x601 2)))) (and (not x990) (and (= x1683 x2603) (= x981 x601))))) x1681) x996))
(assert (x1384 x2068))
(assert (= (and x3039 x2259) x2473))
(assert (x3404 65536))
(assert (x1804 x2450 x463 x3751 x3866))
(assert (x1384 x662))
(assert (< 10000 (x230 64 0 x4001)))
(assert (= (and x3895 (not x4)) x1502))
(assert (= (or x3637 x3636) x1110))
(assert (x1384 x2843))
(assert (x3295 x1514 x4157 x3751 x3866))
(assert (x1384 x3476))
(assert (x1725 x600 (- x3193 x753)))
(assert (x349 x1612))
(assert (x1327 (ite (> 256 x2018) (x521 2 x2018) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1000 x2944))
(assert (= (x2128 x276) (x2128 (+ 1 x276))))
(assert (x1384 x3433))
(assert (= (x250 (x230 64 x3121 x291)) 64))
(assert (x1384 x3115))
(assert (= (or x2868 x1872) x1701))
(assert (= x3859 (or x3761 x1833)))
(assert (x1000 x4226))
(assert (x2060 x2244))
(assert (=> (>= 10000 x552) (= 0 (x2128 x552))))
(assert (= (x4195 (x230 64 x948 x2640)) x2640))
(assert (x1384 x4063))
(assert (= (x3933 x2895 8) (x3377 (* x2895 256))))
(assert (= x1380 (and x2906 x1727)))
(assert (x1384 x1885))
(assert (x1725 x753 (- x4099 x1514)))
(assert (= (x3706 (x230 64 x948 x2640)) x948))
(assert (x2547 x2562 340282366920938463463374607431768211456))
(assert (x1327 (ite (> 256 x850) (x521 2 x850) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1000 x4106))
(assert (x1384 x2257))
(assert (= (and x1922 x2963) x1041))
(assert (= (x3706 (x230 64 x1209 x1454)) x1209))
(assert (x1327 (* 256 x2477) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1923 (and x3529 x2929)))
(assert (= (x250 (x230 64 x3908 5)) 64))
(assert (= (=> (and (= (< 255 x1346) x2162) (or (and (and (= x3878 x3044) (= x1346 x1049)) (not x2162)) (and x2162 (and (= x1049 (x3763 x1346 8)) (= (+ x3044 8) x3878))))) x1896) x3266))
(assert (= (x3377 (* 340282366920938463463374607431768211456 x2487)) (x3933 x2487 128)))
(assert (x1384 x1489))
(assert (= (x3933 x2247 32) (x3377 (* x2247 4294967296))))
(assert (> (x230 64 x1698 9) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x1009 x2545)))
(assert (= (and x1031 x2679) x3848))
(assert (x2466 1000000 x1734))
(assert (x1384 x2911))
(assert (x1384 x3385))
(assert (x1384 x761))
(assert (x2466 256 x1785))
(assert (x1384 x3180))
(assert (x3404 (* x728 256)))
(assert (= x2852 (and (not x1922) x2963)))
(assert (x1384 x547))
(assert (= x229 (and (not x885) x3819)))
(assert (x1384 x165))
(assert (x1384 x1675))
(assert (= x343 (=> (and (= (> x1377 65535) x3842) (or (and x3842 (and (= (x3763 x1377 16) x1165) (= (+ x2198 16) x1836))) (and (not x3842) (and (= x2198 x1836) (= x1165 x1377))))) x442)))
(assert (= x395 (and x1903 x268)))
(assert (x3404 (ite (> 256 x3254) (x521 2 x3254) 0)))
(assert (x3395 (- x4157 x3866)))
(assert (= x2829 (or x2693 x4149)))
(assert (x1327 (* 2 x2071) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1384 x396))
(assert (x2547 x709 340282366920938463463374607431768211456))
(assert (x3395 (- x3193 x1514)))
(assert (= (and x1544 x142) x3681))
(assert (x1384 x1062))
(assert (x3395 x232))
(assert (= 9 (x4195 (x230 64 x881 9))))
(assert (x1384 x3550))
(assert (= x2430 (and x164 x3365)))
(assert (x1384 x992))
(assert (= (x230 64 x3212 14) (x2128 (x230 64 x3212 14))))
(assert (x1327 (* 2 x602) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1918 (=> (= x1533 (= x1948 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (and (= (x230 64 255 x1829) x3564) (= x5 255) (= (= 0 x3809) x2006) (= (+ x4251 1) x1829) (= x2319 254) (= x3809 (x3933 x3546 1)) (= x3546 (x1339 x3564))) x1533) (and (=> (and (not x2006) (and (or (and x3806 (and (= (x3763 x3809 128) x869) (= 128 x4114))) (and (and (= x3809 x869) (= 0 x4114)) (not x3806))) (= x3806 (< 340282366920938463463374607431768211455 x3809)))) x3885) (=> (and x2006 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1684)) x1201))) (=> (and (and (= (x882 (+ x1948 16776960)) x1270) (= x327 (ite (>= 255 x1948) x1270 (x1161 16776960 x1948)))) (not x1533)) x3189)))))
(assert (x2466 256 x272))
(assert (= (x3933 x2670 8) (x3377 (* x2670 256))))
(assert (x1384 x3181))
(assert (= 64 (x250 (x230 64 x2189 x1961))))
(assert (x1384 x3922))
(assert (x3295 x1028 x36 x4099 x753))
(assert (= (and x1143 x2006) x2892))
(assert (x2466 256 x1767))
(assert (= x1774 (and x2883 (not x4062))))
(assert (x1384 x2833))
(assert (x1725 x3751 (- x3866 x753)))
(assert (x1384 x1475))
(assert (= (x230 64 x2556 x3182) (x2128 (x230 64 x2556 x3182))))
(assert (= (or x1779 x2444) x40))
(assert (x3295 x1514 x4157 x3193 x600))
(assert (x1384 x3206))
(assert (= (x250 (x230 64 x4188 x1657)) 64))
(assert (= x919 (or x402 x273)))
(assert (=> (>= 10000 x1722) (= 0 (x2128 x1722))))
(assert (x1725 x2450 (- x463 x1028)))
(assert (= (or x2605 x1827) x1787))
(assert (> (x230 64 x1843 x3571) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x3635)))
(assert (x3295 x36 x1028 x4099 x753))
(assert (x2547 x869 18446744073709551616))
(assert (x3395 x2477))
(assert (x1384 x1666))
(assert (= x2931 (and (not x2714) x2597)))
(assert (= (x250 (x230 64 0 x3622)) 64))
(assert (x1384 x3183))
(assert (x1384 x3508))
(assert (x1384 x297))
(assert (= 64 (x250 (x230 64 x1648 5))))
(assert (= x3615 (or x2611 x2284)))
(assert (x1384 x219))
(assert (< (x230 64 x2418 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x230 64 x2750 14) 10000))
(assert (= x1865 (and x2889 x2367)))
(assert (x1384 x48))
(assert (= x4179 (and x2502 x511)))
(assert (not (x2614 (x230 64 x3449 x3651))))
(assert (x1384 x2244))
(assert (= (x3377 (* x1572 4)) (x3933 x1572 2)))
(assert (= 64 (x250 (x230 64 0 x3635))))
(assert (= 0 (x2128 1844674407370955)))
(assert (x2466 2 x3361))
(assert (x1384 x3731))
(assert (= x2113 (and x1150 x299)))
(assert (x1384 x961))
(assert (x1384 x1363))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 x3691 14)))
(assert (x3395 (x521 2 x3254)))
(assert (x3395 x1055))
(assert (x2466 2 x602))
(assert (= (x4195 (x230 64 x1722 9)) 9))
(assert (x1384 x747))
(assert (= x3626 (=> (and (= (< 18446744073709551615 x3100) x4016) (or (and (and (= x3055 (x3763 x3100 64)) (= (+ x4165 64) x1178)) x4016) (and (and (= x1178 x4165) (= x3055 x3100)) (not x4016)))) x4201)))
(assert (x1725 x1514 (- x4157 x600)))
(assert (= (x2128 x719) (x2128 (+ 1 x719))))
(assert (= (=> (= x1197 x588) x1156) x2171))
(assert (x1384 x112))
(assert (not (x2614 (x230 64 x3528 x3571))))
(assert (x1384 x2111))
(assert (= (=> (and (or (and (and (= (+ x1869 4) x3261) (= x2346 x3398)) (not x1421)) (and (and (= x1869 x3261) (= x1548 x3398)) x1421)) (and (= x1421 (= 0 x2346)) (= (x3933 x1548 4) x2346))) x141) x3699))
(assert (= (x3377 (ite (> 256 x470) (x521 2 x470) 0)) (x3933 1 x470)))
(assert (x1384 x3816))
(assert (= 5 (x4195 (x230 64 x2433 5))))
(assert (x1384 x3836))
(assert (x1384 x1803))
(assert (= (and x1928 x3764) x1831))
(assert (= (x3933 x581 2) (x3377 (* x581 4))))
(assert (= (and x845 x2964) x2884))
(assert (= (x3933 x571 64) (x3377 (* x571 18446744073709551616))))
(assert (x3404 (* 65536 x263)))
(assert (= (and x3332 x3424) x27))
(assert (> (x230 64 x761 x630) 10000))
(assert (= (and x2901 x2101) x3814))
(assert (not (x2614 (x230 64 x3199 9))))
(assert (x2547 x2261 256))
(assert (x1384 x359))
(assert (= x3360 (=> (and (or (and (and (= x1658 x4187) (= x1452 x3430)) x41) (and (and (= x3937 x4187) (= (+ 32 x3430) x1452)) (not x41))) (and (= x3937 (x3933 x1658 32)) (= x41 (= x3937 0)))) x2667)))
(assert (= 0 (x3706 (x230 64 0 14))))
(assert (x3395 (- x753 x1514)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x1)))
(assert (= (=> (and (and (= (x3933 x2187 64) x2439) (= x1649 (= x2439 0))) (or (and x1649 (and (= x824 x1968) (= x1297 x2187))) (and (and (= x1297 x2439) (= (+ x824 64) x1968)) (not x1649)))) x1772) x2083))
(assert (x3395 x1737))
(assert (= x1777 (=> (= 1 x764) x407)))
(assert (=> (>= 10000 x3212) (= (x2128 x3212) 0)))
(assert (x2060 x897))
(assert (x1384 x4121))
(assert (= x379 (and x1362 x1492)))
(assert (x1327 (* x3546 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3933 x457 32) (x3377 (* 4294967296 x457))))
(assert (= x350 (and (not x1071) x1321)))
(assert (= (x230 64 x486 5) (x2128 (x230 64 x486 5))))
(assert (x3404 (ite (< x4081 256) (x521 2 x4081) 0)))
(assert (= (x2128 (x230 64 x881 9)) (x230 64 x881 9)))
(assert (x1804 x3193 x600 x1028 x36))
(assert (x1000 x1389))
(assert (not (x2614 (x230 64 0 x184))))
(assert (x1384 x1247))
(assert (x2466 1 (x521 2 x2449)))
(assert (= (=> (and (or (and (not x3727) (and (= (+ 2 x1360) x809) (= x3136 x608))) (and x3727 (and (= x3136 x2649) (= x809 x1360)))) (and (= x3727 (= 0 x608)) (= x608 (x3933 x2649 2)))) x47) x2489))
(assert (x3295 x463 x2450 x3866 x3751))
(assert (x1384 x1481))
(assert (x1384 x3925))
(assert (= (x3706 (x230 64 x1648 5)) x1648))
(assert (= (and x3134 (not x137)) x2281))
(assert (= (and (not x1727) x2906) x2230))
(assert (= (and x2847 (not x1808)) x38))
(assert (= 5 (x4195 (x230 64 x796 5))))
(assert (=> (<= x4004 10000) (= 0 (x2128 x4004))))
(assert (x1384 x3055))
(assert (x2614 1495468574))
(assert (=> (<= x4145 10000) (= 0 (x2128 x4145))))
(assert (not (x2614 (x230 64 x10 5))))
(assert (= 64 (x250 (x230 64 x2418 14))))
(assert (x2060 x3508))
(assert (= x107 (=> (and (= (< 15 x3441) x741) (or (and (not x741) (and (= x1678 x3441) (= x2741 x1871))) (and (and (= x2741 (+ x1871 4)) (= x1678 (x3763 x3441 4))) x741))) x1305)))
(assert (x1804 x4157 x1514 x1028 x36))
(assert (x3395 (- x463 x4157)))
(assert (= x3585 (=> (and (= x1990 (> x3394 18446744073709551615)) (or (and (and (= x1357 x2870) (= x3865 x3394)) (not x1990)) (and x1990 (and (= (+ 64 x2870) x1357) (= x3865 (x3763 x3394 64)))))) x932)))
(assert (= x2917 (or x92 x3104)))
(assert (x3395 (x521 2 x4065)))
(assert (x1384 x983))
(assert (= (x3933 x2071 1) (x3377 (* 2 x2071))))
(assert (= (x2128 (x230 64 x80 9)) (x230 64 x80 9)))
(assert (x2547 x1162 256))
(assert (x1000 x342))
(assert (= (x3933 x1536 4) (x3377 (* x1536 16))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 14)))
(assert (x1384 x1671))
(assert (x1384 x2488))
(assert (x1000 x1205))
(assert (= (x3763 x4086 32) (x323 x4086 4294967296)))
(assert (= (x2128 (x230 64 x174 x1171)) (x230 64 x174 x1171)))
(assert (x3606 x848 1000000))
(assert (= (=> (and (or (and x2349 (and (= x286 (+ 4 x3153)) (= x2757 (x3763 x874 4)))) (and (and (= x874 x2757) (= x286 x3153)) (not x2349))) (= x2349 (< 15 x874))) x3687) x2165))
(assert (= (x323 x1980 340282366920938463463374607431768211456) (x3763 x1980 128)))
(assert (x2466 1000000000000000000 x695))
(assert (x1327 (* 4 x3398) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2060 x3911))
(assert (= (x3377 (* x1548 16)) (x3933 x1548 4)))
(assert (= (x3377 (* 2 x3136)) (x3933 x3136 1)))
(assert (= (or x3704 x1747) x1202))
(assert (x2614 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= x2096 (x4195 (x230 64 x3670 x2096))))
(assert (not (x2614 (x230 64 x3670 x2096))))
(assert (x81 x50))
(assert (not (x2614 (x230 64 x2351 14))))
(assert (x1384 x2882))
(assert (= (or x2763 x3960) x134))
(assert (x1384 x1743))
(assert (= (x250 (x230 64 x2477 x2994)) 64))
(assert (x1384 x2773))
(assert (x1384 x1226))
(assert (= x3329 (=> (= x3111 (= x3820 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (not x3111) (= x3820 x966)) x4153) (=> (and x3111 (and (and (= (x4238 x594) x3986) (= (= x1367 0) x1740) (= (x3763 x3986 1) x1367) (= x4001 (+ x2092 1)) (= (x230 64 0 x4001) x594) (= x1752 0) (= x303 1)) (or (and (not x1740) (and (= 0 x2257) (= 1 x1030))) (and (= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1740)))) x1811)))))
(assert (= (and x4221 (not x3107)) x2706))
(assert (= (x230 64 x1003 x1417) (x2128 (x230 64 x1003 x1417))))
(assert (= x2104 (=> (and (or (and (and (= x739 x2071) (= x1994 x992)) x2901) (and (and (= x1994 (+ x992 2)) (= x2071 x697)) (not x2901))) (and (= (= x697 0) x2901) (= x697 (x3933 x739 2)))) x3573)))
(assert (= (x250 (x230 64 x3790 9)) 64))
(assert (= (=> (and (= (< 15 x2440) x3424) (or (and x3424 (and (= x3771 (+ 4 x127)) (= (x3763 x2440 4) x100))) (and (and (= x3771 x127) (= x100 x2440)) (not x3424)))) x2503) x325))
(assert (= (and (not x1544) x142) x2753))
(assert (= x926 (=> (and (and (= (= x2147 0) x1915) (= (x3933 x1620 16) x2147)) (or (and x1915 (and (= x3995 x1620) (= x4212 x2764))) (and (not x1915) (and (= x4212 (+ 16 x2764)) (= x2147 x3995))))) x3734)))
(assert (= (or x1935 x3131) x1043))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x230 64 0 x3514)))
(assert (= 0 (x2128 65535)))
(assert (= (x3706 (x230 64 x610 14)) x610))
(assert (x1327 (* 256 x3181) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2614 (x230 64 0 x2539))))
(assert (x81 x165))
(assert (x1384 x564))
(assert (x1000 x748))
(assert (x3295 x3866 x3751 x600 x3193))
(assert (x295 x1627))
(assert (x1725 x1514 (- x4157 x753)))
(assert (x2547 x3283 16))
(assert (x3404 x897))
(assert (= (and x449 (not x1998)) x23))
(assert (= (x230 64 x1222 14) (x2128 (x230 64 x1222 14))))
(assert (= (x2128 x3514) (x2128 (+ x3514 1))))
(assert (x349 x1904))
(assert (x1384 x3030))
(assert (=> (>= 10000 x3181) (= 0 (x2128 x3181))))
(assert (x1384 x1826))
(assert (< (x230 64 x1690 x1280) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x535) x3984) x25))
(assert (= (x2128 x3985) (x2128 (+ x3985 2))))
(assert (x1384 x3847))
(assert (=> (>= 10000 x1810) (= (x2128 x1810) 0)))
(assert (= x1321 (and x3457 (not x2382))))
(assert (x3395 (x521 2 x1258)))
(assert (= (x3377 (* 2 x232)) (x3933 x232 1)))
(assert (x2547 x2343 4))
(assert (x3404 1099511627776))
(assert (= (x230 64 0 x1) (x2128 (x230 64 0 x1))))
(assert (x1725 x753 (- x4099 x3193)))
(assert (x1384 x3122))
(assert (=> (>= 10000 x2793) (= 0 (x2128 x2793))))
(assert (x1384 x1479))
(assert (x3395 (- x3751 x4099)))
(assert (= (x3763 x3394 64) (x323 x3394 18446744073709551616)))
(assert (= (x250 (x230 64 x517 x1657)) 64))
(assert (= x2245 (or x135 x4193)))
(assert (= (x3933 x228 8) (x3377 (* 256 x228))))
(check-sat)
(exit)
