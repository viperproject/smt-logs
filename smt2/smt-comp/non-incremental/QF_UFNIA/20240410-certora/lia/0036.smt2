(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x2053 () Int)
(declare-fun x903 () Int)
(declare-fun x1323 () Bool)
(declare-fun x3642 () Int)
(declare-fun x1557 () Int)
(declare-fun x4084 () Bool)
(declare-fun x1294 () Int)
(declare-fun x1617 () Int)
(declare-fun x4861 () Bool)
(declare-fun x1971 () Int)
(declare-fun x3039 () Bool)
(declare-fun x3088 () Int)
(declare-fun x1488 () Int)
(declare-fun x2294 () Bool)
(declare-fun x3369 () Int)
(declare-fun x4511 () Int)
(declare-fun x361 () Int)
(declare-fun x3466 () Bool)
(declare-fun x887 () Int)
(declare-fun x2518 () Int)
(declare-fun x2146 () Bool)
(declare-fun x4300 () Int)
(declare-fun x1330 () Bool)
(declare-fun x4287 () Int)
(declare-fun x1706 () Int)
(declare-fun x1573 () Bool)
(declare-fun x2711 () Int)
(declare-fun x505 () Bool)
(declare-fun x4855 () Int)
(declare-fun x1637 () Int)
(declare-fun x652 () Bool)
(declare-fun x39 () Int)
(declare-fun x3663 () Bool)
(declare-fun x1239 () Int)
(declare-fun x839 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x3422 () Int)
(declare-fun x3293 () Int)
(declare-fun x2345 () Bool)
(declare-fun x2840 () Int)
(declare-fun x2279 () Bool)
(declare-fun x3017 () Int)
(declare-fun x1486 () Int)
(declare-fun x3282 () Int)
(declare-fun x951 () Bool)
(declare-fun x4798 () Bool)
(declare-fun x4045 () Int)
(declare-fun x2581 () Bool)
(declare-fun x864 () Int)
(declare-fun x612 () Bool)
(declare-fun x4377 () Int)
(declare-fun x801 () Bool)
(declare-fun x557 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x645 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x771 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x2718 () Int)
(declare-fun x1266 () Bool)
(declare-fun x2451 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x1262 () Int)
(declare-fun x4370 () Int)
(declare-fun x1714 () Bool)
(declare-fun x4356 () Int)
(declare-fun x2781 () Bool)
(declare-fun x28 () Int)
(declare-fun x2918 () Int)
(declare-fun x4442 () Bool)
(declare-fun x4371 () Bool)
(declare-fun x4063 () Int)
(declare-fun x168 () Bool)
(declare-fun x3722 () Bool)
(declare-fun x3494 () Int)
(declare-fun x926 () Int)
(declare-fun x4213 () Int)
(declare-fun x61 () Bool)
(declare-fun x2313 () Int)
(declare-fun x3535 () Int)
(declare-fun x3140 () Int)
(declare-fun x3761 () Int)
(declare-fun x1721 () Int)
(declare-fun x774 () Bool)
(declare-fun x2944 () Int)
(declare-fun x3951 () Int)
(declare-fun x2741 () Int)
(declare-fun x1771 () Int)
(declare-fun x524 () Int)
(declare-fun x4827 () Int)
(declare-fun x3108 () Int)
(declare-fun x1939 () Int)
(declare-fun x4825 () Bool)
(declare-fun x422 () Bool)
(declare-fun x4681 () Int)
(declare-fun x578 () Int)
(declare-fun x2716 () Int)
(declare-fun x3277 () Int)
(declare-fun x2207 () Int)
(declare-fun x4692 () Int)
(declare-fun x2273 () Int)
(declare-fun x2482 () Bool)
(declare-fun x3900 () Int)
(declare-fun x3779 () Int)
(declare-fun x3523 () Int)
(declare-fun x3785 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x739 () Int)
(declare-fun x1319 () Bool)
(declare-fun x540 () Int)
(declare-fun x2536 () Int)
(declare-fun x1878 () Int)
(declare-fun x41 () Int)
(declare-fun x4305 () Bool)
(declare-fun x1950 () Int)
(declare-fun x36 () Bool)
(declare-fun x1380 () Int)
(declare-fun x2045 () Bool)
(declare-fun x432 () Int)
(declare-fun x2693 () Bool)
(declare-fun x1010 () Int)
(declare-fun x1619 () Int)
(declare-fun x4344 () Int)
(declare-fun x2926 () Int)
(declare-fun x205 () Int)
(declare-fun x4102 () Int)
(declare-fun x318 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1593 () Int)
(declare-fun x4380 () Int)
(declare-fun x2892 () Int)
(declare-fun x2537 () Int)
(declare-fun x2494 () Int)
(declare-fun x809 () Int)
(declare-fun x2085 () Int)
(declare-fun x3530 () Bool)
(declare-fun x3065 () Bool)
(declare-fun x269 () Bool)
(declare-fun x302 () Bool)
(declare-fun x1034 () Int)
(declare-fun x1728 () Int)
(declare-fun x3485 () Int)
(declare-fun x799 () Int)
(declare-fun x2904 () Int)
(declare-fun x4294 () Bool)
(declare-fun x2342 () Int)
(declare-fun x4143 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x4704 () Bool)
(declare-fun x3983 () Int)
(declare-fun x3623 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x1991 () Int)
(declare-fun x3459 () Bool)
(declare-fun x723 () Int)
(declare-fun x2903 () Int)
(declare-fun x2579 () Int)
(declare-fun x3464 () Int)
(declare-fun x1381 () Int)
(declare-fun x456 () Int)
(declare-fun x2453 () Int)
(declare-fun x2642 () Bool)
(declare-fun x4229 () Int)
(declare-fun x2231 () Int)
(declare-fun x751 () Bool)
(declare-fun x2654 () Int)
(declare-fun x4808 () Int)
(declare-fun x1184 () Int)
(declare-fun x378 () Bool)
(declare-fun x2796 () Bool)
(declare-fun x2961 () Int)
(declare-fun x3111 () Int)
(declare-fun x3680 () Int)
(declare-fun x1035 () Int)
(declare-fun x2650 () Bool)
(declare-fun x1059 () Int)
(declare-fun x3376 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x4522 () Int)
(declare-fun x2256 () Int)
(declare-fun x1155 () Int)
(declare-fun x3645 () Int)
(declare-fun x3273 () Bool)
(declare-fun x14 () Int)
(declare-fun x4575 () Int)
(declare-fun x3240 () Int)
(declare-fun x1872 () Int)
(declare-fun x2564 () Bool)
(declare-fun x4101 () Int)
(declare-fun x742 () Int)
(declare-fun x2112 () Bool)
(declare-fun x625 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x4204 () Int)
(declare-fun x4573 () Bool)
(declare-fun x1459 () Int)
(declare-fun x2916 () Int)
(declare-fun x928 () Bool)
(declare-fun x1056 () Int)
(declare-fun x3891 () Int)
(declare-fun x2329 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x3097 () Int)
(declare-fun x4088 () Int)
(declare-fun x3973 () Int)
(declare-fun x4482 () Bool)
(declare-fun x4516 () Int)
(declare-fun x2813 () Int)
(declare-fun x4529 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x4565 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x724 () Bool)
(declare-fun x381 (Int) Int)
(declare-fun x4031 () Int)
(declare-fun x579 () Int)
(declare-fun x467 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x151 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x3163 () Int)
(declare-fun x4554 () Bool)
(declare-fun x4033 () Int)
(declare-fun x3563 () Int)
(declare-fun x1499 () Bool)
(declare-fun x1129 () Int)
(declare-fun x1401 () Bool)
(declare-fun x2056 () Int)
(declare-fun x2602 () Int)
(declare-fun x2413 () Int)
(declare-fun x2218 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x4021 () Int)
(declare-fun x2601 () Bool)
(declare-fun x3275 () Int)
(declare-fun x4640 () Int)
(declare-fun x3037 () Bool)
(declare-fun x1474 () Int)
(declare-fun x2975 () Int)
(declare-fun x2259 () Bool)
(declare-fun x3708 () Bool)
(declare-fun x3997 () Int)
(declare-fun x2697 () Int)
(declare-fun x2525 () Bool)
(declare-fun x910 () Bool)
(declare-fun x1562 () Int)
(declare-fun x4414 () Bool)
(declare-fun x1789 () Int)
(declare-fun x1173 () Int)
(declare-fun x2027 () Int)
(declare-fun x2771 () Int)
(declare-fun x2619 () Bool)
(declare-fun x920 () Int)
(declare-fun x1470 () Bool)
(declare-fun x497 () Bool)
(declare-fun x3403 () Int)
(declare-fun x1584 () Int)
(declare-fun x3799 () Int)
(declare-fun x1989 () Int)
(declare-fun x2089 () Int)
(declare-fun x458 () Int)
(declare-fun x1876 () Int)
(declare-fun x2618 () Bool)
(declare-fun x4844 () Int)
(declare-fun x606 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x139 () Bool)
(declare-fun x897 () Int)
(declare-fun x2905 () Bool)
(declare-fun x716 () Int)
(declare-fun x470 () Int)
(declare-fun x2267 () Bool)
(declare-fun x396 () Int)
(declare-fun x2367 () Int)
(declare-fun x3243 () Int)
(declare-fun x4851 () Int)
(declare-fun x782 () Int)
(declare-fun x1383 () Bool)
(declare-fun x670 () Int)
(declare-fun x2898 () Int)
(declare-fun x3521 () Int)
(declare-fun x193 () Bool)
(declare-fun x895 () Int)
(declare-fun x3920 () Bool)
(declare-fun x963 () Int)
(declare-fun x825 () Int)
(declare-fun x1223 () Int)
(declare-fun x680 () Bool)
(declare-fun x4683 () Int)
(declare-fun x4642 () Int)
(declare-fun x2124 () Bool)
(declare-fun x3289 () Int)
(declare-fun x2221 () Int)
(declare-fun x4626 () Int)
(declare-fun x4469 () Int)
(declare-fun x4106 () Int)
(declare-fun x734 () Int)
(declare-fun x1514 () Bool)
(declare-fun x615 () Bool)
(declare-fun x170 () Bool)
(declare-fun x704 () Int)
(declare-fun x3861 () Int)
(declare-fun x3989 () Int)
(declare-fun x4750 () Bool)
(declare-fun x3390 () Int)
(declare-fun x944 () Int)
(declare-fun x879 () Bool)
(declare-fun x2554 () Int)
(declare-fun x4767 () Int)
(declare-fun x2856 () Int)
(declare-fun x4533 () Int)
(declare-fun x4570 () Int)
(declare-fun x3327 () Int)
(declare-fun x3564 () Bool)
(declare-fun x1940 () Int)
(declare-fun x4440 () Int)
(declare-fun x4619 () Bool)
(declare-fun x1696 () Int)
(declare-fun x1438 () Bool)
(declare-fun x4718 () Int)
(declare-fun x1469 () Int)
(declare-fun x3435 () Int)
(declare-fun x3756 () Int)
(declare-fun x1979 () Bool)
(declare-fun x2891 () Int)
(declare-fun x3728 () Int)
(declare-fun x2837 () Int)
(declare-fun x979 () Bool)
(declare-fun x131 () Int)
(declare-fun x1265 () Int)
(declare-fun x1495 () Int)
(declare-fun x4383 () Int)
(declare-fun x4359 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1061 () Int)
(declare-fun x1614 () Int)
(declare-fun x1033 () Int)
(declare-fun x1647 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x4058 () Int)
(declare-fun x3843 () Int)
(declare-fun x2895 () Int)
(declare-fun x4039 () Int)
(declare-fun x2772 () Int)
(declare-fun x1768 () Int)
(declare-fun x1302 () Int)
(declare-fun x4054 () Int)
(declare-fun x4407 () Int)
(declare-fun x1712 () Bool)
(declare-fun x950 () Bool)
(declare-fun x2938 () Bool)
(declare-fun x2165 () Int)
(declare-fun x309 () Int)
(declare-fun x1291 () Int)
(declare-fun x3745 () Bool)
(declare-fun x3141 () Int)
(declare-fun x3003 () Int)
(declare-fun x1898 () Int)
(declare-fun x389 () Int)
(declare-fun x4635 () Bool)
(declare-fun x8 () Int)
(declare-fun x2160 () Int)
(declare-fun x2704 (Int) Int)
(declare-fun x4697 () Int)
(declare-fun x2035 () Int)
(declare-fun x3319 () Bool)
(declare-fun x1705 () Int)
(declare-fun x4402 () Int)
(declare-fun x282 () Int)
(declare-fun x1339 () Bool)
(declare-fun x4178 () Int)
(declare-fun x588 () Int)
(declare-fun x2523 () Int)
(declare-fun x1127 () Int)
(declare-fun x4315 () Int)
(declare-fun x3705 () Int)
(declare-fun x956 () Int)
(declare-fun x3801 () Int)
(declare-fun x4335 () Int)
(declare-fun x4398 () Int)
(declare-fun x3072 () Bool)
(declare-fun x1793 () Int)
(declare-fun x1695 () Int)
(declare-fun x3035 () Int)
(declare-fun x4119 () Int)
(declare-fun x3543 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x4627 () Int)
(declare-fun x2445 () Bool)
(declare-fun x563 () Bool)
(declare-fun x3961 () Int)
(declare-fun x4216 () Int)
(declare-fun x4869 () Int)
(declare-fun x3224 () Int)
(declare-fun x1985 () Bool)
(declare-fun x2420 () Int)
(declare-fun x304 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x191 () Bool)
(declare-fun x3414 () Bool)
(declare-fun x2243 () Int)
(declare-fun x1079 () Int)
(declare-fun x3180 () Int)
(declare-fun x2150 () Int)
(declare-fun x1004 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x883 () Bool)
(declare-fun x4334 () Int)
(declare-fun x3755 () Bool)
(declare-fun x4358 () Int)
(declare-fun x1935 () Int)
(declare-fun x3661 () Bool)
(declare-fun x4678 () Bool)
(declare-fun x3774 () Bool)
(declare-fun x2543 () Int)
(declare-fun x1049 () Int)
(declare-fun x2356 () Bool)
(declare-fun x2230 () Int)
(declare-fun x4872 () Int)
(declare-fun x4196 () Int)
(declare-fun x3164 () Int)
(declare-fun x1659 () Bool)
(declare-fun x3303 () Bool)
(declare-fun x42 () Int)
(declare-fun x660 () Int)
(declare-fun x2565 () Int)
(declare-fun x967 () Int)
(declare-fun x4860 () Int)
(declare-fun x3028 () Int)
(declare-fun x330 () Int)
(declare-fun x1153 () Int)
(declare-fun x2319 () Int)
(declare-fun x2819 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x4363 () Int)
(declare-fun x2939 () Bool)
(declare-fun x2627 () Int)
(declare-fun x213 () Int)
(declare-fun x1052 () Int)
(declare-fun x1467 () Int)
(declare-fun x319 () Int)
(declare-fun x3489 () Int)
(declare-fun x382 () Int)
(declare-fun x1244 () Int)
(declare-fun x3095 () Int)
(declare-fun x941 () Int)
(declare-fun x215 () Int)
(declare-fun x4367 () Int)
(declare-fun x4641 () Bool)
(declare-fun x3041 () Int)
(declare-fun x943 () Bool)
(declare-fun x4497 () Int)
(declare-fun x2441 () Int)
(declare-fun x394 () Int)
(declare-fun x2372 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x939 () Int)
(declare-fun x1345 () Int)
(declare-fun x1306 () Int)
(declare-fun x1862 () Bool)
(declare-fun x226 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x3577 () Int)
(declare-fun x4434 () Int)
(declare-fun x3201 () Bool)
(declare-fun x441 () Bool)
(declare-fun x3276 () Int)
(declare-fun x2578 () Int)
(declare-fun x2419 () Int)
(declare-fun x3806 () Bool)
(declare-fun x2745 () Int)
(declare-fun x276 () Int)
(declare-fun x2963 () Int)
(declare-fun x1820 () Int)
(declare-fun x3409 () Bool)
(declare-fun x4320 () Bool)
(declare-fun x658 () Int)
(declare-fun x3304 () Bool)
(declare-fun x1810 () Int)
(declare-fun x4332 () Int)
(declare-fun x2710 () Int)
(declare-fun x2499 () Int)
(declare-fun x844 () Int)
(declare-fun x3202 () Bool)
(declare-fun x4663 () Bool)
(declare-fun x504 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x241 () Int)
(declare-fun x1993 () Int)
(declare-fun x4487 () Int)
(declare-fun x3231 () Int)
(declare-fun x1410 () Bool)
(declare-fun x4458 () Int)
(declare-fun x4362 () Bool)
(declare-fun x3608 () Int)
(declare-fun x4551 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x860 () Int)
(declare-fun x1429 () Int)
(declare-fun x2167 () Int)
(declare-fun x1324 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x2994 () Int)
(declare-fun x5 () Bool)
(declare-fun x1054 () Int)
(declare-fun x624 () Bool)
(declare-fun x3476 () Int)
(declare-fun x3982 () Bool)
(declare-fun x517 () Int)
(declare-fun x4329 () Bool)
(declare-fun x2448 () Int)
(declare-fun x2595 () Int)
(declare-fun x4116 () Bool)
(declare-fun x4722 () Int)
(declare-fun x1503 () Int)
(declare-fun x1897 () Int)
(declare-fun x3194 () Bool)
(declare-fun x3032 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x3116 () Int)
(declare-fun x3729 () Int)
(declare-fun x384 () Int)
(declare-fun x4246 () Bool)
(declare-fun x2817 () Int)
(declare-fun x792 () Bool)
(declare-fun x216 () Int)
(declare-fun x1080 () Int)
(declare-fun x53 () Int)
(declare-fun x2600 () Int)
(declare-fun x3914 () Int)
(declare-fun x775 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x4541 () Int)
(declare-fun x339 () Bool)
(declare-fun x3089 () Int)
(declare-fun x4069 () Int)
(declare-fun x702 () Int)
(declare-fun x4748 () Bool)
(declare-fun x4460 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x3692 () Int)
(declare-fun x1477 () Int)
(declare-fun x1397 () Int)
(declare-fun x4836 () Int)
(declare-fun x3444 () Bool)
(declare-fun x3379 () Bool)
(declare-fun x934 () Bool)
(declare-fun x4241 () Bool)
(declare-fun x4604 () Int)
(declare-fun x2625 () Int)
(declare-fun x3334 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x2539 () Int)
(declare-fun x3589 () Int)
(declare-fun x4163 () Int)
(declare-fun x1236 () Bool)
(declare-fun x718 () Int)
(declare-fun x4818 () Int)
(declare-fun x3457 () Int)
(declare-fun x4137 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x351 () Bool)
(declare-fun x906 () Int)
(declare-fun x4056 () Int)
(declare-fun x2234 () Bool)
(declare-fun x4567 () Int)
(declare-fun x997 () Bool)
(declare-fun x964 () Int)
(declare-fun x4375 () Int)
(declare-fun x918 () Int)
(declare-fun x3634 () Int)
(declare-fun x506 () Int)
(declare-fun x1113 () Int)
(declare-fun x3261 () Int)
(declare-fun x3154 () Bool)
(declare-fun x3060 () Int)
(declare-fun x4539 () Bool)
(declare-fun x4795 () Int)
(declare-fun x3146 () Bool)
(declare-fun x2746 () Int)
(declare-fun x3636 () Int)
(declare-fun x1350 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x4385 () Bool)
(declare-fun x3620 () Int)
(declare-fun x3232 () Int)
(declare-fun x1100 () Int)
(declare-fun x765 () Int)
(declare-fun x4725 () Int)
(declare-fun x2023 () Bool)
(declare-fun x256 () Int)
(declare-fun x1546 () Int)
(declare-fun x2797 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x3394 () Int)
(declare-fun x1986 (Int) Int)
(declare-fun x3337 () Int)
(declare-fun x911 () Bool)
(declare-fun x4098 () Bool)
(declare-fun x981 () Int)
(declare-fun x1207 () Bool)
(declare-fun x3000 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x4711 () Bool)
(declare-fun x4490 () Bool)
(declare-fun x4633 () Int)
(declare-fun x1996 () Int)
(declare-fun x3752 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x4120 () Int)
(declare-fun x1892 (Int) Int)
(declare-fun x4360 () Int)
(declare-fun x4485 () Int)
(declare-fun x3836 () Bool)
(declare-fun x4566 () Bool)
(declare-fun x174 () Bool)
(declare-fun x4660 () Int)
(declare-fun x2766 () Int)
(declare-fun x4717 () Int)
(declare-fun x1649 () Int)
(declare-fun x4303 () Bool)
(declare-fun x847 () Int)
(declare-fun x3284 () Int)
(declare-fun x3347 () Bool)
(declare-fun x2629 () Int)
(declare-fun x2461 () Int)
(declare-fun x4459 () Int)
(declare-fun x3715 () Int)
(declare-fun x2648 () Bool)
(declare-fun x916 () Bool)
(declare-fun x818 () Int)
(declare-fun x1430 () Int)
(declare-fun x2481 () Int)
(declare-fun x152 () Int)
(declare-fun x2670 () Bool)
(declare-fun x4350 () Bool)
(declare-fun x4046 () Bool)
(declare-fun x2695 () Bool)
(declare-fun x3672 () Bool)
(declare-fun x1773 () Int)
(declare-fun x2864 () Int)
(declare-fun x4645 () Bool)
(declare-fun x3313 () Bool)
(declare-fun x1983 () Int)
(declare-fun x1216 () Int)
(declare-fun x4271 () Int)
(declare-fun x471 () Int)
(declare-fun x2087 () Int)
(declare-fun x2952 () Bool)
(declare-fun x1303 () Int)
(declare-fun x2338 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x649 () Int)
(declare-fun x1506 () Bool)
(declare-fun x3943 () Bool)
(declare-fun x3628 () Int)
(declare-fun x695 () Bool)
(declare-fun x2401 () Int)
(declare-fun x2283 () Bool)
(declare-fun x2845 () Int)
(declare-fun x719 () Int)
(declare-fun x3270 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x4664 () Int)
(declare-fun x3719 () Int)
(declare-fun x3895 () Int)
(declare-fun x3751 () Int)
(declare-fun x4272 () Bool)
(declare-fun x3632 () Bool)
(declare-fun x4285 () Bool)
(declare-fun x3879 () Int)
(declare-fun x3575 () Int)
(declare-fun x1589 () Int)
(declare-fun x1444 () Int)
(declare-fun x4244 () Bool)
(declare-fun x69 () Int)
(declare-fun x3996 () Int)
(declare-fun x129 () Int)
(declare-fun x2707 () Int)
(declare-fun x3613 () Bool)
(declare-fun x4579 () Int)
(declare-fun x2057 () Bool)
(declare-fun x2204 () Int)
(declare-fun x3598 () Int)
(declare-fun x3525 () Int)
(declare-fun x1932 () Int)
(declare-fun x2280 () Int)
(declare-fun x793 () Bool)
(declare-fun x2574 () Bool)
(declare-fun x882 () Int)
(declare-fun x2795 () Int)
(declare-fun x2377 () Bool)
(declare-fun x647 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x1742 () Int)
(declare-fun x3255 () Int)
(declare-fun x1228 (Int) Int)
(declare-fun x275 () Int)
(declare-fun x4796 () Bool)
(declare-fun x3529 () Int)
(declare-fun x1281 () Int)
(declare-fun x4544 () Int)
(declare-fun x4135 () Int)
(declare-fun x2312 () Bool)
(declare-fun x2587 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x679 () Int)
(declare-fun x1021 () Int)
(declare-fun x427 () Bool)
(declare-fun x1190 () Int)
(declare-fun x1609 () Int)
(declare-fun x1621 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x128 () Int)
(declare-fun x1833 () Bool)
(declare-fun x3760 () Int)
(declare-fun x7 () Bool)
(declare-fun x1662 () Int)
(declare-fun x3263 () Int)
(declare-fun x2185 () Int)
(declare-fun x3355 () Bool)
(declare-fun x2862 () Int)
(declare-fun x3050 () Int)
(declare-fun x1922 () Bool)
(declare-fun x4302 () Bool)
(declare-fun x3472 () Int)
(declare-fun x2466 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x4436 () Int)
(declare-fun x3236 () Int)
(declare-fun x2646 () Int)
(declare-fun x4263 () Int)
(declare-fun x3382 () Bool)
(declare-fun x1745 () Int)
(declare-fun x3096 () Int)
(declare-fun x2860 () Int)
(declare-fun x4142 () Int)
(declare-fun x2501 () Int)
(declare-fun x500 () Int)
(declare-fun x481 () Int)
(declare-fun x4412 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x1942 () Int)
(declare-fun x3291 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x45 () Int)
(declare-fun x3380 () Int)
(declare-fun x1305 () Bool)
(declare-fun x4654 () Bool)
(declare-fun x3863 () Int)
(declare-fun x4737 () Int)
(declare-fun x3455 () Int)
(declare-fun x682 () Bool)
(declare-fun x4411 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x4677 () Bool)
(declare-fun x3892 () Int)
(declare-fun x347 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x1463 () Int)
(declare-fun x2250 () Int)
(declare-fun x2094 () Int)
(declare-fun x1200 () Bool)
(declare-fun x4079 () Bool)
(declare-fun x3093 () Int)
(declare-fun x2344 () Int)
(declare-fun x2472 () Int)
(declare-fun x641 () Int)
(declare-fun x3552 () Int)
(declare-fun x4309 () Int)
(declare-fun x3829 () Int)
(declare-fun x644 () Int)
(declare-fun x4659 () Int)
(declare-fun x175 () Int)
(declare-fun x4349 () Int)
(declare-fun x2691 () Bool)
(declare-fun x2490 () Int)
(declare-fun x97 () Int)
(declare-fun x1419 () Bool)
(declare-fun x4713 () Bool)
(declare-fun x2839 () Bool)
(declare-fun x4146 () Int)
(declare-fun x2333 () Bool)
(declare-fun x3654 () Bool)
(declare-fun x3296 () Int)
(declare-fun x401 () Int)
(declare-fun x2436 () Int)
(declare-fun x2613 () Bool)
(declare-fun x2505 () Int)
(declare-fun x707 () Bool)
(declare-fun x4842 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x4708 () Int)
(declare-fun x4601 () Int)
(declare-fun x2007 () Int)
(declare-fun x2713 () Int)
(declare-fun x3386 () Int)
(declare-fun x273 () Bool)
(declare-fun x523 () Int)
(declare-fun x1157 () Int)
(declare-fun x2253 () Bool)
(declare-fun x2022 () Int)
(declare-fun x3323 () Bool)
(declare-fun x4559 () Int)
(declare-fun x1051 () Bool)
(declare-fun x10 () Int)
(declare-fun x940 () Bool)
(declare-fun x3610 () Int)
(declare-fun x1222 () Int)
(declare-fun x1569 () Bool)
(declare-fun x3807 () Int)
(declare-fun x1489 () Int)
(declare-fun x2847 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x1209 () Int)
(declare-fun x4769 () Int)
(declare-fun x2692 () Int)
(declare-fun x225 () Int)
(declare-fun x63 () Int)
(declare-fun x1717 () Bool)
(declare-fun x1652 () Int)
(declare-fun x3287 () Bool)
(declare-fun x3950 () Int)
(declare-fun x172 () Bool)
(declare-fun x2386 () Bool)
(declare-fun x604 () Int)
(declare-fun x73 () Int)
(declare-fun x4075 () Bool)
(declare-fun x90 () Int)
(declare-fun x1384 () Int)
(declare-fun x1869 () Int)
(declare-fun x2811 () Int)
(declare-fun x4403 () Int)
(declare-fun x4472 (Int) Int)
(declare-fun x4666 () Int)
(declare-fun x1547 () Int)
(declare-fun x220 () Int)
(declare-fun x3478 () Int)
(declare-fun x542 () Int)
(declare-fun x3686 () Int)
(declare-fun x3503 () Int)
(declare-fun x536 () Int)
(declare-fun x3910 () Bool)
(declare-fun x3130 () Int)
(declare-fun x3176 () Int)
(declare-fun x3981 () Bool)
(declare-fun x3975 () Bool)
(declare-fun x2673 () Bool)
(declare-fun x3408 () Int)
(declare-fun x2203 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x4192 () Int)
(declare-fun x419 () Int)
(declare-fun x1144 () Int)
(declare-fun x4583 () Bool)
(declare-fun x2449 () Int)
(declare-fun x1560 () Int)
(declare-fun x2801 () Int)
(declare-fun x2034 () Bool)
(declare-fun x4631 () Bool)
(declare-fun x2914 () Int)
(declare-fun x3324 () Int)
(declare-fun x728 () Int)
(declare-fun x924 () Int)
(declare-fun x1108 () Bool)
(declare-fun x3903 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x3882 () Int)
(declare-fun x857 () Bool)
(declare-fun x2699 () Int)
(declare-fun x1582 (Int) Int)
(declare-fun x630 () Bool)
(declare-fun x3314 () Int)
(declare-fun x3834 () Bool)
(declare-fun x4147 () Int)
(declare-fun x314 () Int)
(declare-fun x1208 () Int)
(declare-fun x703 () Int)
(declare-fun x1554 () Int)
(declare-fun x2318 () Int)
(declare-fun x2570 () Bool)
(declare-fun x4463 () Bool)
(declare-fun x3187 () Int)
(declare-fun x4243 () Bool)
(declare-fun x957 () Bool)
(declare-fun x1415 () Int)
(declare-fun x2373 () Int)
(declare-fun x800 () Int)
(declare-fun x3392 () Int)
(declare-fun x3571 () Int)
(declare-fun x2307 () Bool)
(declare-fun x2237 () Int)
(declare-fun x2657 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x2971 () Bool)
(declare-fun x2605 () Int)
(declare-fun x3912 () Int)
(declare-fun x2520 () Int)
(declare-fun x4212 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x3158 () Int)
(declare-fun x1077 () Bool)
(declare-fun x2475 () Int)
(declare-fun x4386 () Int)
(declare-fun x785 () Int)
(declare-fun x988 () Int)
(declare-fun x4658 () Bool)
(declare-fun x3872 () Int)
(declare-fun x3149 () Bool)
(declare-fun x3559 () Int)
(declare-fun x1422 () Bool)
(declare-fun x4509 () Int)
(declare-fun x2694 (Int) Int)
(declare-fun x1779 () Int)
(declare-fun x2348 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x675 () Int)
(declare-fun x4195 () Int)
(declare-fun x2573 () Bool)
(declare-fun x2947 () Bool)
(declare-fun x124 (Int Int) Int)
(declare-fun x3335 () Bool)
(declare-fun x4134 () Int)
(declare-fun x4295 () Int)
(declare-fun x76 () Bool)
(declare-fun x1432 () Int)
(declare-fun x67 () Int)
(declare-fun x3372 () Bool)
(declare-fun x1403 () Int)
(declare-fun x4029 () Int)
(declare-fun x325 () Int)
(declare-fun x1180 () Bool)
(declare-fun x1692 () Int)
(declare-fun x2732 () Int)
(declare-fun x2211 () Int)
(declare-fun x1492 () Bool)
(declare-fun x2805 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x307 () Bool)
(declare-fun x614 () Int)
(declare-fun x3152 () Bool)
(declare-fun x3667 () Int)
(declare-fun x2010 () Int)
(declare-fun x1891 () Int)
(declare-fun x1170 () Int)
(declare-fun x446 () Int)
(declare-fun x1588 () Int)
(declare-fun x3570 () Bool)
(declare-fun x4815 () Int)
(declare-fun x1566 () Int)
(declare-fun x2749 () Int)
(declare-fun x2249 () Int)
(declare-fun x4532 () Bool)
(declare-fun x2808 () Bool)
(declare-fun x1590 () Int)
(declare-fun x1677 () Int)
(declare-fun x1769 () Int)
(declare-fun x3170 () Int)
(declare-fun x4805 () Int)
(declare-fun x3086 () Int)
(declare-fun x123 () Bool)
(declare-fun x4059 () Int)
(declare-fun x2069 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x3286 () Int)
(declare-fun x4714 () Int)
(declare-fun x4694 () Int)
(declare-fun x426 () Int)
(declare-fun x4705 () Bool)
(declare-fun x3562 () Int)
(declare-fun x1871 () Bool)
(declare-fun x4700 () Int)
(declare-fun x1785 () Int)
(declare-fun x3320 () Bool)
(declare-fun x1841 () Int)
(declare-fun x3781 () Bool)
(declare-fun x4193 () Int)
(declare-fun x2557 () Int)
(declare-fun x3546 () Int)
(declare-fun x88 () Int)
(declare-fun x2585 () Bool)
(declare-fun x4086 () Int)
(declare-fun x4524 () Bool)
(declare-fun x666 () Int)
(declare-fun x3004 () Int)
(declare-fun x4311 () Int)
(declare-fun x2804 () Bool)
(declare-fun x953 () Bool)
(declare-fun x2893 () Bool)
(declare-fun x2240 () Int)
(declare-fun x4413 () Bool)
(declare-fun x4169 () Int)
(declare-fun x4372 () Int)
(declare-fun x1317 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x1860 () Int)
(declare-fun x3344 () Bool)
(declare-fun x2855 () Bool)
(declare-fun x257 () Int)
(declare-fun x3397 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x1954 () Int)
(declare-fun x1610 () Int)
(declare-fun x845 () Int)
(declare-fun x1255 () Bool)
(declare-fun x4023 () Int)
(declare-fun x4811 () Int)
(declare-fun x2042 () Bool)
(declare-fun x2052 () Int)
(declare-fun x2162 () Bool)
(declare-fun x2349 () Bool)
(declare-fun x1230 () Int)
(declare-fun x57 () Bool)
(declare-fun x516 () Bool)
(declare-fun x1121 () Int)
(declare-fun x2199 () Int)
(declare-fun x3898 () Int)
(declare-fun x3205 () Bool)
(declare-fun x3387 () Int)
(declare-fun x74 () Int)
(declare-fun x1822 () Int)
(declare-fun x4296 () Bool)
(declare-fun x1395 () Int)
(declare-fun x4132 () Int)
(declare-fun x2091 () Bool)
(declare-fun x858 () Int)
(declare-fun x4062 () Bool)
(declare-fun x4534 () Bool)
(declare-fun x1583 () Int)
(declare-fun x4636 () Bool)
(declare-fun x710 () Bool)
(declare-fun x2991 () Int)
(declare-fun x2019 () Int)
(declare-fun x3331 () Int)
(declare-fun x1402 () Int)
(declare-fun x2181 () Int)
(declare-fun x2751 () Int)
(declare-fun x2688 () Int)
(declare-fun x2393 () Bool)
(declare-fun x3827 () Bool)
(declare-fun x1435 () Int)
(declare-fun x161 (Int) Int)
(declare-fun x328 () Int)
(declare-fun x4250 () Bool)
(declare-fun x2853 () Int)
(declare-fun x4108 () Bool)
(declare-fun x106 () Int)
(declare-fun x219 () Int)
(declare-fun x223 () Bool)
(declare-fun x2561 () Int)
(declare-fun x3343 () Int)
(declare-fun x755 () Bool)
(declare-fun x3548 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x3658 () Int)
(declare-fun x3247 () Int)
(declare-fun x980 () Bool)
(declare-fun x4018 () Int)
(declare-fun x1847 () Int)
(declare-fun x153 () Int)
(declare-fun x2993 () Bool)
(declare-fun x1186 () Int)
(declare-fun x3877 () Bool)
(declare-fun x2682 () Int)
(declare-fun x3669 () Int)
(declare-fun x120 () Bool)
(declare-fun x4218 () Int)
(declare-fun x1887 () Int)
(declare-fun x889 () Int)
(declare-fun x3833 () Bool)
(declare-fun x3246 () Int)
(declare-fun x3954 () Bool)
(declare-fun x2770 () Int)
(declare-fun x4008 () Int)
(declare-fun x1002 () Int)
(declare-fun x3859 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x4571 () Bool)
(declare-fun x2460 () Bool)
(declare-fun x3583 () Int)
(declare-fun x1799 () Int)
(declare-fun x3854 () Int)
(declare-fun x1818 () Bool)
(declare-fun x4304 () Int)
(declare-fun x4494 () Int)
(declare-fun x4041 () Int)
(declare-fun x949 () Int)
(declare-fun x3690 () Bool)
(declare-fun x722 () Bool)
(declare-fun x1559 () Int)
(declare-fun x3676 () Bool)
(declare-fun x826 () Bool)
(declare-fun x1967 () Int)
(declare-fun x552 () Bool)
(declare-fun x3868 () Int)
(declare-fun x3739 () Int)
(declare-fun x3462 () Bool)
(declare-fun x586 () Bool)
(declare-fun x3290 () Int)
(declare-fun x2421 () Bool)
(declare-fun x976 () Int)
(declare-fun x4443 () Int)
(declare-fun x2995 () Bool)
(declare-fun x3129 () Int)
(declare-fun x3214 () Int)
(declare-fun x3727 () Int)
(declare-fun x4253 () Int)
(declare-fun x991 () Bool)
(declare-fun x3349 () Int)
(declare-fun x937 () Bool)
(declare-fun x1456 () Int)
(declare-fun x521 () Int)
(declare-fun x2761 () Int)
(declare-fun x3893 () Int)
(declare-fun x1592 () Int)
(declare-fun x2008 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x2183 () Int)
(declare-fun x962 () Int)
(declare-fun x2189 () Int)
(declare-fun x2074 () Int)
(declare-fun x2652 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x1480 () Int)
(declare-fun x4162 () Int)
(declare-fun x3808 () Bool)
(declare-fun x4623 () Int)
(declare-fun x3133 () Bool)
(declare-fun x514 () Int)
(declare-fun x2912 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1045 () Int)
(declare-fun x4338 () Int)
(declare-fun x3225 () Int)
(declare-fun x4611 () Int)
(declare-fun x3136 () Int)
(declare-fun x448 () Int)
(declare-fun x2071 () Bool)
(declare-fun x1179 () Int)
(declare-fun x2083 () Bool)
(declare-fun x484 () Bool)
(declare-fun x4258 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x3502 () Int)
(declare-fun x1215 () Bool)
(declare-fun x447 () Int)
(declare-fun x4339 () Int)
(declare-fun x4097 () Bool)
(declare-fun x4632 () Int)
(declare-fun x3614 () Bool)
(declare-fun x4422 () Bool)
(declare-fun x4107 () Bool)
(declare-fun x31 () Bool)
(declare-fun x388 () Int)
(declare-fun x1857 () Bool)
(declare-fun x3551 () Int)
(declare-fun x417 () Int)
(declare-fun x4068 () Bool)
(declare-fun x145 () Int)
(declare-fun x2058 () Bool)
(declare-fun x2723 () Int)
(declare-fun x4703 () Int)
(declare-fun x1276 () Bool)
(declare-fun x4343 () Int)
(declare-fun x2768 (Int) Int)
(declare-fun x1388 () Int)
(declare-fun x3590 () Bool)
(declare-fun x2717 () Int)
(declare-fun x3233 () Int)
(declare-fun x4415 () Bool)
(declare-fun x1884 () Int)
(declare-fun x322 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x3681 () Int)
(declare-fun x595 () Int)
(declare-fun x646 () Bool)
(declare-fun x619 () Int)
(declare-fun x2735 () Int)
(declare-fun x3738 () Bool)
(declare-fun x2427 () Int)
(declare-fun x4695 () Bool)
(declare-fun x2818 () Int)
(declare-fun x3415 () Bool)
(declare-fun x4421 () Int)
(declare-fun x1982 () Int)
(declare-fun x2130 () Int)
(declare-fun x98 () Int)
(declare-fun x1043 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x3495 () Int)
(declare-fun x3874 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x2379 () Bool)
(declare-fun x2062 () Int)
(declare-fun x3381 () Int)
(declare-fun x3218 () Bool)
(declare-fun x1864 () Int)
(declare-fun x880 () Bool)
(declare-fun x412 () Int)
(declare-fun x222 () Int)
(declare-fun x1699 () Bool)
(declare-fun x4449 () Int)
(declare-fun x4175 () Bool)
(declare-fun x4455 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x336 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x2750 () Int)
(declare-fun x3647 () Int)
(declare-fun x2470 () Bool)
(declare-fun x3049 () Int)
(declare-fun x2213 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1654 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x4423 () Bool)
(declare-fun x791 () Int)
(declare-fun x4584 () Bool)
(declare-fun x482 () Int)
(declare-fun x3153 () Bool)
(declare-fun x4284 () Int)
(declare-fun x4019 () Int)
(declare-fun x3804 () Bool)
(declare-fun x4721 () Bool)
(declare-fun x713 () Bool)
(declare-fun x4688 () Int)
(declare-fun x2714 () Bool)
(declare-fun x3278 () Int)
(declare-fun x466 () Int)
(declare-fun x1964 () Int)
(declare-fun x323 () Int)
(declare-fun x4588 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x3856 () Bool)
(declare-fun x2612 () Int)
(declare-fun x2255 () Bool)
(declare-fun x2096 () Int)
(declare-fun x2827 () Bool)
(declare-fun x4190 () Bool)
(declare-fun x4845 () Int)
(declare-fun x1599 () Int)
(declare-fun x3638 () Int)
(declare-fun x3150 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x20 () Int)
(declare-fun x4103 () Bool)
(declare-fun x3285 () Int)
(declare-fun x3824 () Bool)
(declare-fun x2322 () Int)
(declare-fun x4397 () Bool)
(declare-fun x769 () Int)
(declare-fun x1658 () Int)
(declare-fun x3870 () Int)
(declare-fun x3223 () Bool)
(declare-fun x768 () Bool)
(declare-fun x1796 () Int)
(declare-fun x3121 () Bool)
(declare-fun x2317 () Int)
(declare-fun x332 () Int)
(declare-fun x4379 () Int)
(declare-fun x4819 () Bool)
(declare-fun x270 () Int)
(declare-fun x2824 () Int)
(declare-fun x3475 () Bool)
(declare-fun x764 () Int)
(declare-fun x2102 () Int)
(declare-fun x1008 () Int)
(declare-fun x118 () Int)
(declare-fun x2239 () Int)
(declare-fun x4507 () Int)
(declare-fun x232 () Bool)
(declare-fun x3075 () Int)
(declare-fun x1107 () Int)
(declare-fun x2647 () Int)
(declare-fun x2354 () Int)
(declare-fun x3747 () Int)
(declare-fun x2141 () Int)
(declare-fun x2305 () Int)
(declare-fun x3073 () Bool)
(declare-fun x2003 () Int)
(declare-fun x2596 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x721 () Bool)
(declare-fun x2116 () Int)
(declare-fun x3846 () Int)
(declare-fun x2039 () Int)
(declare-fun x1512 () Int)
(declare-fun x720 () Int)
(declare-fun x2834 () Bool)
(declare-fun x329 () Int)
(declare-fun x3237 () Int)
(declare-fun x705 (Int Int Int Int Int) Int)
(declare-fun x528 (Int) Int)
(declare-fun x1910 () Int)
(declare-fun x3718 () Int)
(declare-fun x2202 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x95 (Int) Int)
(declare-fun x429 () Bool)
(declare-fun x4261 () Bool)
(declare-fun x1543 () Int)
(declare-fun x4471 () Int)
(declare-fun x2281 () Int)
(declare-fun x3085 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x4535 () Int)
(declare-fun x229 () Bool)
(declare-fun x3987 () Bool)
(declare-fun x2623 () Int)
(declare-fun x580 () Int)
(declare-fun x4219 () Int)
(declare-fun x4289 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x3500 () Bool)
(declare-fun x4438 () Bool)
(declare-fun x3561 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x4395 () Bool)
(declare-fun x81 () Bool)
(declare-fun x2959 (Int) Int)
(declare-fun x1899 () Int)
(declare-fun x1168 () Int)
(declare-fun x4790 () Int)
(declare-fun x2086 () Bool)
(declare-fun x2206 (Int Int) Int)
(declare-fun x3458 () Int)
(declare-fun x1844 () Int)
(declare-fun x3488 () Int)
(declare-fun x567 () Bool)
(declare-fun x190 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x4298 () Int)
(declare-fun x164 () Int)
(declare-fun x43 () Bool)
(declare-fun x1071 () Int)
(declare-fun x2930 () Int)
(declare-fun x2519 () Bool)
(declare-fun x9 () Bool)
(declare-fun x2899 () Int)
(declare-fun x2442 () Int)
(declare-fun x3181 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x179 () Bool)
(declare-fun x1263 () Int)
(declare-fun x4862 () Int)
(declare-fun x1457 () Int)
(declare-fun x4608 () Int)
(declare-fun x3300 () Int)
(declare-fun x1138 () Int)
(declare-fun x3748 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x24 () Bool)
(declare-fun x231 () Int)
(declare-fun x901 () Int)
(declare-fun x1341 () Int)
(declare-fun x631 () Int)
(declare-fun x4182 () Int)
(declare-fun x2951 () Bool)
(declare-fun x4496 () Int)
(declare-fun x4726 () Int)
(declare-fun x1450 () Bool)
(declare-fun x3684 () Int)
(declare-fun x3939 () Bool)
(declare-fun x2212 () Int)
(declare-fun x4720 () Int)
(declare-fun x2730 () Bool)
(declare-fun x187 () Bool)
(declare-fun x3582 () Bool)
(declare-fun x3508 () Int)
(declare-fun x4849 () Int)
(declare-fun x2100 () Bool)
(declare-fun x4392 () Int)
(declare-fun x862 () Int)
(declare-fun x410 () Bool)
(declare-fun x1542 () Int)
(declare-fun x3090 () Int)
(declare-fun x305 () Bool)
(declare-fun x2467 () Int)
(declare-fun x3480 () Int)
(declare-fun x2043 () Int)
(declare-fun x1261 () Int)
(declare-fun x4011 () Int)
(declare-fun x2036 () Int)
(declare-fun x846 () Bool)
(declare-fun x2830 () Int)
(declare-fun x873 () Int)
(declare-fun x295 () Int)
(declare-fun x752 () Int)
(declare-fun x875 () Int)
(declare-fun x479 () Int)
(declare-fun x1069 () Int)
(declare-fun x4629 () Int)
(declare-fun x1304 () Bool)
(declare-fun x2737 () Int)
(declare-fun x2261 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x370 () Bool)
(declare-fun x112 () Int)
(declare-fun x3315 () Int)
(declare-fun x1933 () Int)
(declare-fun x2001 () Int)
(declare-fun x2088 () Bool)
(declare-fun x4224 () Int)
(declare-fun x817 () Int)
(declare-fun x3061 () Bool)
(declare-fun x2968 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x3047 () Int)
(declare-fun x2315 () Bool)
(declare-fun x3689 () Int)
(declare-fun x2777 () Int)
(declare-fun x2580 () Int)
(declare-fun x1504 () Bool)
(declare-fun x3526 () Int)
(declare-fun x2051 () Bool)
(declare-fun x674 () Int)
(declare-fun x2873 () Int)
(declare-fun x4800 () Int)
(declare-fun x1987 () Int)
(declare-fun x1366 () Int)
(declare-fun x1797 () Bool)
(declare-fun x919 () Int)
(declare-fun x1798 () Int)
(declare-fun x2548 () Int)
(declare-fun x287 () Bool)
(declare-fun x3687 () Int)
(declare-fun x2720 () Int)
(declare-fun x40 () Int)
(declare-fun x487 () Int)
(declare-fun x2389 () Int)
(declare-fun x4109 () Int)
(declare-fun x3625 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x2773 () Int)
(declare-fun x3609 () Int)
(declare-fun x3305 () Int)
(declare-fun x1572 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x870 () Int)
(declare-fun x1732 () Int)
(declare-fun x502 () Bool)
(declare-fun x1761 () Int)
(declare-fun x3434 () Int)
(declare-fun x3185 () Int)
(declare-fun x1067 () Int)
(declare-fun x121 () Bool)
(declare-fun x4148 () Int)
(declare-fun x1794 () Int)
(declare-fun x832 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x1000 () Int)
(declare-fun x2925 () Bool)
(declare-fun x13 () Int)
(declare-fun x2842 () Int)
(declare-fun x4277 () Int)
(declare-fun x3425 () Int)
(declare-fun x4128 () Int)
(declare-fun x3560 () Bool)
(declare-fun x3753 () Int)
(declare-fun x1567 () Int)
(declare-fun x3848 () Int)
(declare-fun x3759 () Int)
(declare-fun x3878 () Int)
(declare-fun x927 () Bool)
(declare-fun x529 () Int)
(declare-fun x4266 () Int)
(declare-fun x3813 () Int)
(declare-fun x2701 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x617 () Int)
(declare-fun x122 () Int)
(declare-fun x3431 () Int)
(declare-fun x876 () Int)
(declare-fun x2586 () Bool)
(declare-fun x4032 () Int)
(declare-fun x354 () Int)
(declare-fun x4537 () Int)
(declare-fun x3145 () Int)
(declare-fun x4802 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x2744 () Int)
(declare-fun x842 () Int)
(declare-fun x72 () Int)
(declare-fun x148 () Bool)
(declare-fun x1498 () Int)
(declare-fun x3321 () Int)
(declare-fun x1058 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x3787 () Int)
(declare-fun x1874 () Int)
(declare-fun x1613 () Bool)
(declare-fun x457 () Int)
(declare-fun x3691 () Int)
(declare-fun x3119 () Int)
(declare-fun x1020 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x3504 () Int)
(declare-fun x3330 () Int)
(declare-fun x2702 () Int)
(declare-fun x3019 () Int)
(declare-fun x4099 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x3424 () Int)
(declare-fun x2400 () Int)
(declare-fun x1114 () Bool)
(declare-fun x3010 (Int) Int)
(declare-fun x435 () Int)
(declare-fun x2110 () Int)
(declare-fun x2622 () Bool)
(declare-fun x714 () Bool)
(declare-fun x3338 () Int)
(declare-fun x2910 () Int)
(declare-fun x4077 (Int) Int)
(declare-fun x22 () Bool)
(declare-fun x2271 () Int)
(declare-fun x3538 () Bool)
(declare-fun x4820 () Int)
(declare-fun x4390 () Bool)
(declare-fun x3148 () Bool)
(declare-fun x4515 () Int)
(declare-fun x1733 () Int)
(declare-fun x2687 () Bool)
(declare-fun x1206 () Int)
(declare-fun x999 () Int)
(declare-fun x4321 () Bool)
(declare-fun x138 (Int) Int)
(declare-fun x866 () Int)
(declare-fun x2857 () Int)
(declare-fun x346 () Int)
(declare-fun x2128 () Int)
(declare-fun x1651 () Int)
(declare-fun x1392 () Bool)
(declare-fun x1272 () Int)
(declare-fun x4027 () Bool)
(declare-fun x2708 () Int)
(declare-fun x2136 () Int)
(declare-fun x4051 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x4131 () Bool)
(declare-fun x160 () Int)
(declare-fun x743 () Bool)
(declare-fun x364 () Int)
(declare-fun x1418 () Bool)
(declare-fun x4614 () Int)
(declare-fun x3393 () Int)
(declare-fun x4352 () Bool)
(declare-fun x46 () Bool)
(declare-fun x2709 () Int)
(declare-fun x4072 () Bool)
(declare-fun x437 () Int)
(declare-fun x2080 () Int)
(declare-fun x4670 () Bool)
(declare-fun x4123 () Int)
(declare-fun x1337 () Int)
(declare-fun x65 () Int)
(declare-fun x4047 () Bool)
(declare-fun x4617 () Int)
(declare-fun x1747 (Int Int) Int)
(declare-fun x1801 () Bool)
(declare-fun x1632 () Int)
(declare-fun x352 () Int)
(declare-fun x1066 () Int)
(declare-fun x409 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x4052 () Int)
(declare-fun x4202 () Int)
(declare-fun x1343 () Bool)
(declare-fun x3957 () Bool)
(declare-fun x4865 () Int)
(declare-fun x3673 () Bool)
(declare-fun x898 () Int)
(declare-fun x3782 () Int)
(declare-fun x3520 () Bool)
(declare-fun x3695 () Int)
(declare-fun x3611 (Int Int Int Int Int Int Int) Int)
(declare-fun x114 () Bool)
(declare-fun x3626 () Int)
(declare-fun x1036 () Int)
(declare-fun x2431 () Bool)
(declare-fun x2825 () Int)
(declare-fun x4151 () Int)
(declare-fun x3043 () Int)
(declare-fun x805 () Int)
(declare-fun x1926 () Int)
(declare-fun x4746 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x4610 () Bool)
(declare-fun x696 () Bool)
(declare-fun x4401 () Bool)
(declare-fun x1082 (Int) Int)
(declare-fun x395 () Bool)
(declare-fun x971 () Int)
(declare-fun x699 () Int)
(declare-fun x3800 () Int)
(declare-fun x3272 () Bool)
(declare-fun x1845 () Int)
(declare-fun x929 () Int)
(declare-fun x380 () Int)
(declare-fun x820 () Int)
(declare-fun x2017 () Int)
(declare-fun x2065 () Int)
(declare-fun x1120 () Int)
(declare-fun x2784 () Bool)
(declare-fun x3763 () Int)
(declare-fun x908 () Int)
(declare-fun x4585 () Int)
(declare-fun x1131 () Bool)
(declare-fun x1748 () Int)
(declare-fun x3735 () Bool)
(declare-fun x3822 () Int)
(declare-fun x4454 () Int)
(declare-fun x1507 () Int)
(declare-fun x1735 () Int)
(declare-fun x247 () Bool)
(declare-fun x293 () Int)
(declare-fun x1364 () Bool)
(declare-fun x2831 () Int)
(declare-fun x211 () Int)
(declare-fun x4749 () Int)
(declare-fun x3076 () Int)
(declare-fun x29 () Bool)
(declare-fun x835 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x2755 () Int)
(declare-fun x2502 () Int)
(declare-fun x1938 () Int)
(declare-fun x4596 () Int)
(declare-fun x94 () Bool)
(declare-fun x359 () Int)
(declare-fun x3254 () Int)
(declare-fun x4609 () Int)
(declare-fun x1685 () Int)
(declare-fun x4113 () Bool)
(declare-fun x653 () Int)
(declare-fun x1183 () Int)
(declare-fun x1187 () Int)
(declare-fun x3991 () Int)
(declare-fun x1070 () Bool)
(declare-fun x4826 () Int)
(declare-fun x3084 () Int)
(declare-fun x2936 () Bool)
(declare-fun x1328 () Int)
(declare-fun x1242 () Int)
(declare-fun x4822 () Bool)
(declare-fun x4191 () Int)
(declare-fun x4184 () Int)
(declare-fun x3053 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1762 (Int) Int)
(declare-fun x1746 () Int)
(declare-fun x2980 () Int)
(declare-fun x4814 () Bool)
(declare-fun x2868 () Int)
(declare-fun x2636 () Int)
(declare-fun x2658 () Int)
(declare-fun x2014 () Int)
(declare-fun x1041 () Int)
(declare-fun x3964 () Bool)
(declare-fun x806 () Int)
(declare-fun x3298 () Int)
(declare-fun x227 () Bool)
(declare-fun x183 () Bool)
(declare-fun x3166 () Bool)
(declare-fun x356 () Int)
(declare-fun x2534 () Int)
(declare-fun x2049 () Int)
(declare-fun x2700 () Int)
(declare-fun x3932 () Int)
(declare-fun x784 () Int)
(declare-fun x439 () Int)
(declare-fun x4419 () Int)
(declare-fun x1096 () Int)
(declare-fun x3513 () Int)
(declare-fun x2284 () Bool)
(declare-fun x4466 () Int)
(declare-fun x2667 () Bool)
(declare-fun x1730 () Int)
(declare-fun x3269 () Bool)
(declare-fun x4050 () Int)
(declare-fun x125 () Int)
(declare-fun x3956 () Int)
(declare-fun x2606 () Int)
(declare-fun x2809 () Int)
(declare-fun x1274 () Int)
(declare-fun x1278 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x30 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x2188 () Int)
(declare-fun x1827 () Int)
(declare-fun x2055 () Bool)
(declare-fun x3916 () Bool)
(declare-fun x4357 () Int)
(declare-fun x4731 () Int)
(declare-fun x491 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x387 () Bool)
(declare-fun x2515 () Int)
(declare-fun x4081 () Int)
(declare-fun x837 () Bool)
(declare-fun x4761 () Int)
(declare-fun x813 () Int)
(declare-fun x3280 () Bool)
(declare-fun x4207 () Bool)
(declare-fun x4829 () Int)
(declare-fun x1502 () Int)
(declare-fun x4512 () Int)
(declare-fun x668 () Bool)
(declare-fun x2332 () Int)
(declare-fun x3904 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1240 () Bool)
(declare-fun x1961 () Int)
(declare-fun x3308 () Int)
(declare-fun x3643 () Bool)
(declare-fun x2077 () Int)
(declare-fun x986 () Int)
(declare-fun x2865 () Int)
(declare-fun x411 () Int)
(declare-fun x1744 () Int)
(declare-fun x3767 () Bool)
(declare-fun x1630 () Int)
(declare-fun x3267 () Int)
(declare-fun x3606 () Bool)
(declare-fun x2179 () Int)
(declare-fun x2018 () Int)
(declare-fun x3316 () Int)
(declare-fun x904 () Int)
(declare-fun x478 () Int)
(declare-fun x1539 () Int)
(declare-fun x54 () Int)
(declare-fun x132 () Bool)
(declare-fun x2195 () Int)
(declare-fun x650 () Int)
(declare-fun x3058 () Bool)
(declare-fun x3887 () Bool)
(declare-fun x3766 () Int)
(declare-fun x1978 () Int)
(declare-fun x221 () Int)
(declare-fun x4214 () Int)
(declare-fun x4557 () Int)
(declare-fun x3730 () Bool)
(declare-fun x2504 () Int)
(declare-fun x455 () Int)
(declare-fun x878 () Int)
(declare-fun x3698 () Bool)
(declare-fun x1734 () Int)
(declare-fun x2265 () Bool)
(declare-fun x2409 () Int)
(declare-fun x2841 () Int)
(declare-fun x3388 () Int)
(declare-fun x1445 () Int)
(declare-fun x3587 () Bool)
(declare-fun x1226 () Int)
(declare-fun x2875 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x2257 () Int)
(declare-fun x4791 () Int)
(declare-fun x816 () Int)
(declare-fun x833 () Int)
(declare-fun x2589 () Int)
(declare-fun x4803 () Bool)
(declare-fun x1197 () Int)
(declare-fun x3746 () Int)
(declare-fun x461 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x212 () Int)
(declare-fun x460 () Int)
(declare-fun x4605 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x565 () Int)
(declare-fun x424 () Int)
(declare-fun x3341 () Bool)
(declare-fun x4431 () Int)
(declare-fun x1367 () Int)
(declare-fun x1664 () Bool)
(declare-fun x4007 () Int)
(declare-fun x3537 () Int)
(declare-fun x3889 () Int)
(declare-fun x3118 () Bool)
(declare-fun x2835 () Bool)
(declare-fun x2316 () Int)
(declare-fun x1490 () Int)
(declare-fun x2269 () Bool)
(declare-fun x3 () Int)
(declare-fun x1824 () Int)
(declare-fun x2238 () Int)
(declare-fun x472 () Int)
(declare-fun x2233 () Int)
(declare-fun x1694 () Bool)
(declare-fun x2392 () Int)
(declare-fun x224 () Int)
(declare-fun x1491 () Int)
(declare-fun x3765 () Bool)
(declare-fun x2306 () Int)
(declare-fun x1787 () Int)
(declare-fun x1900 () Int)
(declare-fun x3104 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x2614 () Int)
(declare-fun x3659 () Bool)
(declare-fun x733 () Int)
(declare-fun x2248 () Bool)
(declare-fun x4638 () Bool)
(declare-fun x3468 () Bool)
(declare-fun x342 () Int)
(declare-fun x2129 () Int)
(declare-fun x4504 () Int)
(declare-fun x1103 () Bool)
(declare-fun x1013 () Int)
(declare-fun x2591 () Bool)
(declare-fun x3679 () Int)
(declare-fun x3553 () Int)
(declare-fun x3306 () Int)
(declare-fun x4114 () Int)
(declare-fun x3230 () Int)
(declare-fun x2235 (Int) Int)
(declare-fun x1245 () Bool)
(declare-fun x1825 () Int)
(declare-fun x3826 () Int)
(declare-fun x1149 () Bool)
(declare-fun x975 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x2878 () Bool)
(declare-fun x4582 () Int)
(declare-fun x1575 () Bool)
(declare-fun x3784 () Int)
(declare-fun x863 () Int)
(declare-fun x416 () Bool)
(declare-fun x363 () Bool)
(declare-fun x1957 () Int)
(declare-fun x4493 () Int)
(declare-fun x4328 () Int)
(declare-fun x2462 () Int)
(declare-fun x489 () Int)
(declare-fun x2684 () Int)
(declare-fun x831 () Bool)
(declare-fun x4456 () Bool)
(declare-fun x1895 () Int)
(declare-fun x3741 () Bool)
(declare-fun x747 () Bool)
(declare-fun x4409 () Int)
(declare-fun x4590 () Int)
(declare-fun x1919 () Int)
(declare-fun x2137 () Int)
(declare-fun x3378 () Int)
(declare-fun x2783 () Bool)
(declare-fun x639 () Int)
(declare-fun x2982 () Bool)
(declare-fun x2325 () Int)
(declare-fun x1286 (Int) Int)
(declare-fun x959 () Int)
(declare-fun x1620 () Bool)
(declare-fun x553 () Bool)
(declare-fun x3875 () Int)
(declare-fun x2659 () Int)
(declare-fun x4766 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x2414 () Int)
(declare-fun x2563 () Bool)
(declare-fun x4273 () Int)
(declare-fun x3871 () Int)
(declare-fun x2545 () Int)
(declare-fun x4812 () Bool)
(declare-fun x3260 () Bool)
(declare-fun x4345 () Int)
(declare-fun x4730 () Int)
(declare-fun x3734 () Int)
(declare-fun x4669 () Bool)
(declare-fun x4341 () Bool)
(declare-fun x2324 () Int)
(declare-fun x1923 () Bool)
(declare-fun x3251 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x1759 () Int)
(declare-fun x159 () Int)
(declare-fun x1458 () Int)
(declare-fun x2327 () Bool)
(declare-fun x3959 () Bool)
(declare-fun x3400 () Bool)
(declare-fun x2843 () Int)
(declare-fun x357 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x3029 () Int)
(declare-fun x278 () Bool)
(declare-fun x1299 () Int)
(declare-fun x2378 () Bool)
(declare-fun x107 () Bool)
(declare-fun x947 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x754 () Int)
(declare-fun x3841 () Int)
(declare-fun x2358 () Bool)
(declare-fun x3772 () Bool)
(declare-fun x1834 () Int)
(declare-fun x109 () Int)
(declare-fun x33 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x3899 () Bool)
(declare-fun x372 () Int)
(declare-fun x3418 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x1698 () Int)
(declare-fun x1688 () Int)
(declare-fun x2148 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x2897 () Int)
(declare-fun x3656 () Int)
(declare-fun x4453 () Int)
(declare-fun x130 () Int)
(declare-fun x4270 () Bool)
(declare-fun x3113 () Bool)
(declare-fun x17 () Int)
(declare-fun x4306 () Int)
(declare-fun x1806 () Bool)
(declare-fun x1851 () Int)
(declare-fun x440 () Int)
(declare-fun x2998 () Int)
(declare-fun x2245 () Int)
(declare-fun x1909 () Bool)
(declare-fun x1468 () Int)
(declare-fun x1194 () Bool)
(declare-fun x4153 () Int)
(declare-fun x3586 () Int)
(declare-fun x665 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x1359 () Int)
(declare-fun x3818 () Bool)
(declare-fun x1920 () Int)
(declare-fun x2251 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x155 () Int)
(declare-fun x1927 () Int)
(declare-fun x1596 () Bool)
(declare-fun x85 () Bool)
(declare-fun x2047 () Bool)
(declare-fun x603 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x1565 () Int)
(declare-fun x2297 () Int)
(declare-fun x2978 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x4427 () Bool)
(declare-fun x3364 () Int)
(declare-fun x3426 () Int)
(declare-fun x2336 () Int)
(declare-fun x3034 () Bool)
(declare-fun x3015 () Bool)
(declare-fun x4698 () Int)
(declare-fun x2410 () Int)
(declare-fun x4838 () Bool)
(declare-fun x4859 () Int)
(declare-fun x4222 () Int)
(declare-fun x3839 () Int)
(declare-fun x1687 () Int)
(declare-fun x1078 () Bool)
(declare-fun x4686 () Int)
(declare-fun x473 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x3814 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x4616 () Int)
(declare-fun x3274 () Int)
(declare-fun x3733 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x3404 () Int)
(declare-fun x4083 () Int)
(declare-fun x1374 () Int)
(declare-fun x1653 () Bool)
(declare-fun x2653 () Bool)
(declare-fun x398 () Int)
(declare-fun x242 () Bool)
(declare-fun x499 () Bool)
(declare-fun x1201 () Int)
(declare-fun x759 () Bool)
(declare-fun x4797 () Int)
(declare-fun x2277 () Bool)
(declare-fun x450 () Bool)
(declare-fun x4322 () Int)
(declare-fun x4758 () Bool)
(declare-fun x423 () Int)
(declare-fun x2216 () Int)
(declare-fun x874 () Bool)
(declare-fun x1007 () Int)
(declare-fun x4281 () Int)
(declare-fun x4314 () Int)
(declare-fun x2376 () Bool)
(declare-fun x3750 () Int)
(declare-fun x4643 () Int)
(declare-fun x3162 () Bool)
(declare-fun x3979 () Int)
(declare-fun x1413 () Bool)
(declare-fun x2048 () Int)
(declare-fun x3329 () Bool)
(declare-fun x4709 () Bool)
(declare-fun x2962 () Int)
(declare-fun x859 () Int)
(declare-fun x4092 () Int)
(declare-fun x633 () Bool)
(declare-fun x2201 () Int)
(declare-fun x1925 () Int)
(declare-fun x3592 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x263 () Int)
(declare-fun x1749 () Bool)
(declare-fun x68 () Int)
(declare-fun x4457 () Bool)
(declare-fun x3512 () Int)
(declare-fun x4672 () Int)
(declare-fun x570 () Bool)
(declare-fun x1534 () Int)
(declare-fun x18 () Bool)
(declare-fun x4308 () Int)
(declare-fun x1896 () Int)
(declare-fun x375 () Int)
(declare-fun x2665 () Bool)
(declare-fun x3927 () Int)
(declare-fun x4026 () Int)
(declare-fun x1174 () Int)
(declare-fun x1631 () Bool)
(declare-fun x2738 () Int)
(declare-fun x4508 () Int)
(declare-fun x1253 () Int)
(declare-fun x4618 () Int)
(declare-fun x3665 () Bool)
(declare-fun x2705 () Int)
(declare-fun x1904 () Int)
(declare-fun x1455 () Int)
(declare-fun x1984 () Bool)
(declare-fun x758 () Int)
(declare-fun x2655 () Bool)
(declare-fun x4833 () Bool)
(declare-fun x900 () Bool)
(declare-fun x4327 () Bool)
(declare-fun x2397 () Int)
(declare-fun x200 () Int)
(declare-fun x611 () Int)
(declare-fun x4480 () Int)
(declare-fun x4473 () Bool)
(declare-fun x2353 () Int)
(declare-fun x796 () Int)
(declare-fun x2906 () Int)
(declare-fun x436 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x4217 () Bool)
(declare-fun x2721 () Int)
(declare-fun x4468 () Int)
(declare-fun x1039 () Int)
(declare-fun x3301 () Int)
(declare-fun x4549 () Bool)
(declare-fun x3045 () Int)
(declare-fun x3257 () Int)
(declare-fun x4492 () Int)
(declare-fun x2170 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x4676 () Bool)
(declare-fun x2418 () Int)
(declare-fun x3902 () Int)
(declare-fun x4513 () Int)
(declare-fun x4715 () Int)
(declare-fun x4374 () Int)
(declare-fun x1527 () Int)
(declare-fun x2200 () Int)
(declare-fun x508 () Int)
(declare-fun x1346 () Int)
(declare-fun x254 () Int)
(declare-fun x3132 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x3716 (Int) Int)
(declare-fun x3178 () Int)
(declare-fun x3970 () Bool)
(declare-fun x2487 () Int)
(declare-fun x3976 () Int)
(declare-fun x371 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x621 () Bool)
(declare-fun x4094 () Int)
(declare-fun x1758 () Int)
(declare-fun x311 () Int)
(declare-fun x4739 () Int)
(declare-fun x264 () Int)
(declare-fun x811 () Int)
(declare-fun x313 () Bool)
(declare-fun x2038 () Int)
(declare-fun x1531 () Int)
(declare-fun x1234 () Int)
(declare-fun x2346 () Int)
(declare-fun x3385 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x1941 (Int Int Int Int) Int)
(declare-fun x266 () Int)
(declare-fun x2107 () Bool)
(declare-fun x4495 () Int)
(declare-fun x3416 () Int)
(declare-fun x3336 () Int)
(declare-fun x3935 () Bool)
(declare-fun x3682 () Int)
(declare-fun x3599 () Int)
(declare-fun x549 () Int)
(declare-fun x727 (Int Int Int) Int)
(declare-fun x442 () Bool)
(declare-fun x281 () Bool)
(declare-fun x3138 () Bool)
(declare-fun x3026 () Bool)
(declare-fun x279 () Bool)
(declare-fun x4156 () Int)
(declare-fun x4208 () Int)
(declare-fun x2833 () Int)
(declare-fun x732 () Bool)
(declare-fun x1300 () Int)
(declare-fun x4545 () Int)
(declare-fun x1729 () Int)
(declare-fun x2582 () Int)
(declare-fun x4340 () Int)
(declare-fun x1792 () Bool)
(declare-fun x687 () Bool)
(declare-fun x3112 () Bool)
(declare-fun x4144 () Int)
(declare-fun x2590 () Int)
(declare-fun x1765 () Int)
(declare-fun x2953 () Int)
(declare-fun x2304 () Int)
(declare-fun x1111 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x3106 () Bool)
(declare-fun x1975 () Int)
(declare-fun x1167 () Int)
(declare-fun x1003 () Int)
(declare-fun x4743 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x819 () Int)
(declare-fun x1019 () Int)
(declare-fun x3252 () Int)
(declare-fun x2311 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1018 () Int)
(declare-fun x3219 () Bool)
(declare-fun x4514 () Bool)
(declare-fun x2301 () Int)
(declare-fun x2363 () Int)
(declare-fun x1423 () Int)
(declare-fun x4155 () Int)
(declare-fun x1622 () Int)
(declare-fun x1471 () Int)
(declare-fun x1044 () Int)
(declare-fun x3399 () Bool)
(declare-fun x297 () Bool)
(declare-fun x548 () Bool)
(declare-fun x1968 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x3421 () Int)
(declare-fun x4255 () Bool)
(declare-fun x296 () Bool)
(declare-fun x4038 () Int)
(declare-fun x794 () Bool)
(declare-fun x218 () Int)
(declare-fun x3993 () Bool)
(declare-fun x4040 () Int)
(declare-fun x923 () Bool)
(declare-fun x3825 () Int)
(declare-fun x4671 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x4326 () Int)
(declare-fun x3603 () Int)
(declare-fun x1462 () Int)
(declare-fun x3440 () Int)
(declare-fun x2851 () Int)
(declare-fun x1998 () Int)
(declare-fun x577 () Int)
(declare-fun x4841 () Int)
(declare-fun x2685 () Bool)
(declare-fun x2492 () Int)
(declare-fun x2669 () Int)
(declare-fun x2025 () Int)
(declare-fun x2168 () Int)
(declare-fun x366 () Int)
(declare-fun x4418 () Int)
(declare-fun x385 () Int)
(declare-fun x3410 () Int)
(declare-fun x2286 () Bool)
(declare-fun x3358 () Int)
(declare-fun x391 () Int)
(declare-fun x4035 () Int)
(declare-fun x1213 () Bool)
(declare-fun x4667 () Int)
(declare-fun x55 () Bool)
(declare-fun x289 () Bool)
(declare-fun x147 () Int)
(declare-fun x1737 () Int)
(declare-fun x2967 () Int)
(declare-fun x1133 () Int)
(declare-fun x1525 () Int)
(declare-fun x2907 () Bool)
(declare-fun x1727 () Int)
(declare-fun x1026 () Int)
(declare-fun x397 () Int)
(declare-fun x2219 () Bool)
(declare-fun x4210 () Int)
(declare-fun x1006 () Bool)
(declare-fun x2468 () Bool)
(declare-fun x2934 () Int)
(declare-fun x896 () Bool)
(declare-fun x537 () Bool)
(declare-fun x4239 () Int)
(declare-fun x1483 () Int)
(declare-fun x3539 () Bool)
(declare-fun x1109 () Int)
(declare-fun x1754 () Int)
(declare-fun x1641 () Int)
(declare-fun x3122 () Int)
(declare-fun x4257 () Int)
(declare-fun x4378 () Int)
(declare-fun x2503 () Bool)
(declare-fun x1945 () Int)
(declare-fun x3175 () Int)
(declare-fun x1152 () Bool)
(declare-fun x3023 () Int)
(declare-fun x3768 () Int)
(declare-fun x1134 () Bool)
(declare-fun x3079 () Int)
(declare-fun x3100 () Int)
(declare-fun x2973 () Bool)
(declare-fun x2147 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x1119 () Int)
(declare-fun x2352 () Bool)
(declare-fun x671 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1751 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x2869 () Int)
(declare-fun x1046 () Bool)
(declare-fun x3966 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x3465 () Int)
(declare-fun x2511 () Bool)
(declare-fun x2786 () Int)
(declare-fun x2645 () Int)
(declare-fun x407 () Bool)
(declare-fun x1116 () Int)
(declare-fun x899 () Int)
(declare-fun x4594 () Int)
(declare-fun x2728 () Bool)
(declare-fun x589 () Int)
(declare-fun x1536 () Int)
(declare-fun x3941 () Int)
(declare-fun x1217 (Int) Int)
(declare-fun x268 () Bool)
(declare-fun x1412 () Int)
(declare-fun x1722 () Int)
(declare-fun x4832 () Int)
(declare-fun x886 () Bool)
(declare-fun x1906 () Int)
(declare-fun x4578 () Int)
(declare-fun x1195 () Int)
(declare-fun x333 () Bool)
(declare-fun x1731 () Int)
(declare-fun x1808 () Int)
(declare-fun x4404 (Int) Int)
(declare-fun x4518 () Bool)
(declare-fun x1928 () Int)
(declare-fun x761 () Int)
(declare-fun x3809 () Int)
(declare-fun x706 () Bool)
(declare-fun x3936 () Bool)
(declare-fun x408 () Int)
(declare-fun x2361 () Int)
(declare-fun x4637 () Int)
(declare-fun x2703 () Int)
(declare-fun x1443 () Int)
(declare-fun x3992 () Int)
(declare-fun x3188 () Bool)
(declare-fun x551 () Int)
(declare-fun x2061 () Int)
(declare-fun x968 () Bool)
(declare-fun x4139 () Bool)
(declare-fun x4382 () Int)
(declare-fun x4727 () Bool)
(declare-fun x133 () Int)
(declare-fun x730 () Bool)
(declare-fun x4481 () Bool)
(declare-fun x2197 () Int)
(declare-fun x2981 () Int)
(declare-fun x945 () Int)
(declare-fun x501 () Bool)
(declare-fun x4831 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x102 () Int)
(declare-fun x1650 () Bool)
(declare-fun x2759 () Int)
(declare-fun x572 () Int)
(declare-fun x2456 () Int)
(declare-fun x290 () Int)
(declare-fun x2513 () Int)
(declare-fun x3884 () Int)
(declare-fun x1691 () Bool)
(declare-fun x2009 () Int)
(declare-fun x3758 () Bool)
(declare-fun x3593 () Bool)
(declare-fun x4651 () Bool)
(declare-fun x3477 () Int)
(declare-fun x2500 () Bool)
(declare-fun x3607 () Int)
(declare-fun x2649 () Int)
(declare-fun x3374 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x2000 () Int)
(declare-fun x3749 () Bool)
(declare-fun x1202 () Int)
(declare-fun x340 () Int)
(declare-fun x3630 () Int)
(declare-fun x2050 () Int)
(declare-fun x1672 () Int)
(declare-fun x3890 () Int)
(declare-fun x629 () Int)
(declare-fun x3430 () Int)
(declare-fun x2180 () Bool)
(declare-fun x2227 () Int)
(declare-fun x829 () Int)
(declare-fun x685 () Bool)
(declare-fun x27 () Int)
(declare-fun x1680 () Int)
(declare-fun x1084 () Int)
(declare-fun x1220 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x3565 () Int)
(declare-fun x3777 () Int)
(declare-fun x4650 () Int)
(declare-fun x852 () Bool)
(declare-fun x12 () Bool)
(declare-fun x3963 () Int)
(declare-fun x3348 () Int)
(declare-fun x3040 () Int)
(declare-fun x1953 () Int)
(declare-fun x2480 (Int) Bool)
(declare-fun x4118 () Bool)
(declare-fun x284 () Int)
(declare-fun x3114 () Bool)
(declare-fun x3810 () Bool)
(declare-fun x3490 () Bool)
(declare-fun x4406 () Bool)
(declare-fun x149 () Bool)
(declare-fun x1377 () Int)
(declare-fun x513 () Int)
(declare-fun x3432 () Int)
(declare-fun x3288 () Bool)
(declare-fun x1678 () Int)
(declare-fun x4037 () Int)
(declare-fun x3640 () Int)
(declare-fun x3919 () Bool)
(declare-fun x1098 () Int)
(declare-fun x4174 () Bool)
(declare-fun x701 () Int)
(declare-fun x2220 () Int)
(declare-fun x365 () Int)
(declare-fun x4776 () Int)
(declare-fun x115 () Int)
(declare-fun x2919 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x4020 () Int)
(declare-fun x3443 () Int)
(declare-fun x693 () Bool)
(declare-fun x982 () Int)
(declare-fun x622 () Bool)
(declare-fun x725 () Bool)
(declare-fun x3184 () Int)
(declare-fun x301 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x3965 () Int)
(declare-fun x1365 () Int)
(declare-fun x1549 () Int)
(declare-fun x2326 () Int)
(declare-fun x822 () Int)
(declare-fun x1962 () Bool)
(declare-fun x3802 () Int)
(declare-fun x3262 () Int)
(declare-fun x44 () Int)
(declare-fun x3783 () Int)
(declare-fun x1331 () Bool)
(declare-fun x4470 () Int)
(declare-fun x2205 () Int)
(declare-fun x1248 () Int)
(declare-fun x4606 () Int)
(declare-fun x2929 () Int)
(declare-fun x3022 () Bool)
(declare-fun x4001 () Int)
(declare-fun x3127 () Int)
(declare-fun x1258 () Int)
(declare-fun x902 () Bool)
(declare-fun x3126 () Int)
(declare-fun x4346 () Int)
(declare-fun x4622 () Bool)
(declare-fun x308 () Int)
(declare-fun x2767 () Int)
(declare-fun x1513 () Bool)
(declare-fun x3352 () Bool)
(declare-fun x400 () Int)
(declare-fun x3200 () Bool)
(declare-fun x3117 () Int)
(declare-fun x2176 () Int)
(declare-fun x1859 () Int)
(declare-fun x2882 () Bool)
(declare-fun x4394 () Int)
(declare-fun x2535 () Bool)
(declare-fun x2599 () Int)
(declare-fun x715 () Bool)
(declare-fun x3491 () Int)
(declare-fun x2789 () Int)
(declare-fun x23 () Int)
(declare-fun x3123 () Bool)
(declare-fun x3578 () Bool)
(declare-fun x3947 () Int)
(declare-fun x82 () Int)
(declare-fun x503 () Int)
(declare-fun x2184 () Bool)
(declare-fun x4336 () Int)
(declare-fun x2812 () Bool)
(declare-fun x3897 () Int)
(declare-fun x2529 () Int)
(declare-fun x3657 () Int)
(declare-fun x3087 () Int)
(declare-fun x4733 () Bool)
(declare-fun x2883 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x3054 () Int)
(declare-fun x3177 (Int Int) Int)
(declare-fun x2588 () Bool)
(declare-fun x390 () Int)
(declare-fun x4221 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x3852 () Bool)
(declare-fun x64 () Int)
(declare-fun x1283 () Bool)
(declare-fun x4856 () Int)
(declare-fun x469 () Bool)
(declare-fun x4384 () Bool)
(declare-fun x4161 () Int)
(declare-fun x3103 () Int)
(declare-fun x3515 () Int)
(declare-fun x2541 () Int)
(declare-fun x1464 () Bool)
(declare-fun x236 () Int)
(declare-fun x4491 () Int)
(declare-fun x1231 () Int)
(declare-fun x1442 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x2861 () Int)
(declare-fun x3769 () Int)
(declare-fun x1594 () Int)
(declare-fun x3866 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1578 () Int)
(declare-fun x3629 (Int Int) Int)
(declare-fun x3518 () Int)
(declare-fun x4333 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x4835 () Bool)
(declare-fun x3167 () Int)
(declare-fun x4247 () Bool)
(declare-fun x2321 () Int)
(declare-fun x4517 () Bool)
(declare-fun x89 () Int)
(declare-fun x4435 () Int)
(declare-fun x3428 () Bool)
(declare-fun x618 () Int)
(declare-fun x985 () Int)
(declare-fun x3124 () Bool)
(declare-fun x4381 () Int)
(declare-fun x3978 () Int)
(declare-fun x3651 () Int)
(declare-fun x62 () Int)
(declare-fun x1076 () Int)
(declare-fun x3384 () Int)
(declare-fun x1550 () Bool)
(declare-fun x807 () Int)
(declare-fun x3988 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x4126 () Int)
(declare-fun x3144 () Int)
(declare-fun x2084 () Int)
(declare-fun x2360 () Bool)
(declare-fun x3189 () Int)
(declare-fun x1102 () Bool)
(declare-fun x623 () Int)
(declare-fun x142 () Int)
(declare-fun x2562 () Bool)
(declare-fun x4429 () Int)
(declare-fun x1780 () Bool)
(declare-fun x2422 () Int)
(declare-fun x1141 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x4603 () Bool)
(declare-fun x1094 () Int)
(declare-fun x853 () Int)
(declare-fun x3082 () Bool)
(declare-fun x3622 () Int)
(declare-fun x2544 () Bool)
(declare-fun x4740 () Bool)
(declare-fun x494 () Int)
(declare-fun x1736 () Int)
(declare-fun x4848 () Bool)
(declare-fun x4506 () Int)
(declare-fun x2987 () Int)
(declare-fun x1178 () Int)
(declare-fun x355 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x3980 () Int)
(declare-fun x3157 () Int)
(declare-fun x4519 () Bool)
(declare-fun x711 () Int)
(declare-fun x49 () Int)
(declare-fun x2915 () Int)
(declare-fun x3433 () Int)
(declare-fun x3845 () Int)
(declare-fun x4387 () Int)
(declare-fun x554 () Int)
(declare-fun x4762 () Int)
(declare-fun x454 () Bool)
(declare-fun x3880 () Int)
(declare-fun x3423 () Bool)
(declare-fun x2689 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x4552 () Bool)
(declare-fun x4807 () Bool)
(declare-fun x3949 () Bool)
(declare-fun x228 () Int)
(declare-fun x425 () Bool)
(declare-fun x1441 () Int)
(declare-fun x104 () Int)
(declare-fun x1257 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x2474 () Int)
(declare-fun x3650 () Int)
(declare-fun x1348 () Int)
(declare-fun x709 () Bool)
(declare-fun x3828 () Int)
(declare-fun x1312 () Int)
(declare-fun x234 () Int)
(declare-fun x3012 () Bool)
(declare-fun x2848 () Int)
(declare-fun x1510 () Int)
(declare-fun x1719 () Int)
(declare-fun x178 () Int)
(declare-fun x1960 () Int)
(declare-fun x3361 () Int)
(declare-fun x3511 () Bool)
(declare-fun x2662 () Int)
(declare-fun x4125 () Int)
(declare-fun x1130 () Int)
(declare-fun x808 () Int)
(declare-fun x2631 () Int)
(declare-fun x4236 () Bool)
(declare-fun x1379 () Int)
(declare-fun x4249 () Int)
(declare-fun x3795 () Int)
(declare-fun x1656 () Int)
(declare-fun x642 () Bool)
(declare-fun x1205 () Int)
(declare-fun x2479 () Bool)
(declare-fun x560 () Int)
(declare-fun x2002 () Int)
(declare-fun x4275 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x1325 () Int)
(declare-fun x1838 () Int)
(declare-fun x3762 () Bool)
(declare-fun x972 () Bool)
(declare-fun x2082 () Int)
(declare-fun x914 () Bool)
(declare-fun x4531 () Int)
(declare-fun x3958 () Int)
(declare-fun x2528 () Int)
(declare-fun x3173 () Int)
(declare-fun x773 () Bool)
(declare-fun x3062 () Int)
(declare-fun x4701 () Bool)
(declare-fun x2366 () Int)
(declare-fun x2521 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1075 () Bool)
(declare-fun x1753 () Int)
(declare-fun x1439 () Int)
(declare-fun x1767 () Int)
(declare-fun x3616 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1316 () Int)
(declare-fun x3006 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x3242 () Bool)
(declare-fun x531 () Int)
(declare-fun x2232 () Int)
(declare-fun x1839 () Bool)
(declare-fun x2099 () Int)
(declare-fun x2454 () Int)
(declare-fun x533 () Bool)
(declare-fun x2552 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x4673 () Bool)
(declare-fun x4784 () Int)
(declare-fun x592 () Int)
(declare-fun x2228 () Bool)
(declare-fun x2838 () Int)
(declare-fun x4185 () Int)
(declare-fun x3694 () Int)
(declare-fun x1529 () Int)
(declare-fun x881 () Int)
(declare-fun x185 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x770 () Int)
(declare-fun x2335 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x2676 () Int)
(declare-fun x2663 () Bool)
(declare-fun x2298 () Int)
(declare-fun x3905 () Int)
(declare-fun x4301 () Int)
(declare-fun x2068 () Int)
(declare-fun x162 () Int)
(declare-fun x4500 () Bool)
(declare-fun x2887 () Int)
(declare-fun x3664 () Bool)
(declare-fun x749 () Int)
(declare-fun x2157 () Int)
(declare-fun x1487 () Int)
(declare-fun x3817 () Bool)
(declare-fun x541 () Int)
(declare-fun x3712 () Bool)
(declare-fun x581 () Int)
(declare-fun x4060 () Bool)
(declare-fun x851 () Int)
(declare-fun x3038 () Int)
(declare-fun x2072 () Int)
(declare-fun x2287 () Int)
(declare-fun x998 () Int)
(declare-fun x2560 () Int)
(declare-fun x492 () Int)
(declare-fun x3078 () Bool)
(declare-fun x1349 () Int)
(declare-fun x1816 () Int)
(declare-fun x1811 () Int)
(declare-fun x2417 () Int)
(declare-fun x137 () Int)
(declare-fun x75 () Bool)
(declare-fun x2553 () Int)
(declare-fun x4227 () Int)
(declare-fun x3405 () Int)
(declare-fun x1915 () Bool)
(declare-fun x1154 () Int)
(declare-fun x2477 () Int)
(declare-fun x3357 () Int)
(declare-fun x2178 () Int)
(declare-fun x2266 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x3238 () Int)
(declare-fun x1639 () Int)
(declare-fun x4773 () Int)
(declare-fun x3922 () Int)
(declare-fun x4461 () Bool)
(declare-fun x1182 () Int)
(declare-fun x3445 () Bool)
(declare-fun x1532 () Int)
(declare-fun x2182 () Bool)
(declare-fun x2571 () Bool)
(declare-fun x1523 () Int)
(declare-fun x21 () Int)
(declare-fun x2941 () Bool)
(declare-fun x4237 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x4070 (Int Int) Int)
(declare-fun x591 () Int)
(declare-fun x3717 () Int)
(declare-fun x1074 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1271 () Int)
(declare-fun x2901 () Bool)
(declare-fun x694 () Bool)
(declare-fun x4087 () Int)
(declare-fun x3283 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x2633 () Int)
(declare-fun x3855 () Int)
(declare-fun x4871 () Int)
(declare-fun x2788 () Bool)
(declare-fun x777 () Bool)
(declare-fun x656 () Bool)
(declare-fun x4817 () Bool)
(declare-fun x3008 () Int)
(declare-fun x4868 () Int)
(declare-fun x583 () Int)
(declare-fun x2126 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x3744 () Int)
(declare-fun x4082 () Bool)
(declare-fun x3292 () Int)
(declare-fun x4742 () Bool)
(declare-fun x4324 () Int)
(declare-fun x3838 () Bool)
(declare-fun x3541 () Bool)
(declare-fun x931 () Bool)
(declare-fun x4042 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x2677 () Int)
(declare-fun x1229 () Int)
(declare-fun x522 () Bool)
(declare-fun x2644 () Int)
(declare-fun x189 () Int)
(declare-fun x51 () Int)
(declare-fun x1970 () Int)
(declare-fun x1320 () Int)
(declare-fun x776 () Int)
(declare-fun x1809 () Int)
(declare-fun x3174 () Int)
(declare-fun x2964 () Int)
(declare-fun x3764 () Int)
(declare-fun x3569 () Int)
(declare-fun x4781 () Int)
(declare-fun x2285 () Int)
(declare-fun x2357 () Int)
(declare-fun x1973 () Int)
(declare-fun x3862 () Int)
(declare-fun x3207 () Bool)
(declare-fun x2380 () Int)
(declare-fun x2894 () Int)
(declare-fun x3888 () Int)
(declare-fun x3710 () Int)
(declare-fun x320 () Bool)
(declare-fun x2920 () Int)
(declare-fun x1994 () Bool)
(declare-fun x103 () Bool)
(declare-fun x3448 () Bool)
(declare-fun x1707 () Int)
(declare-fun x1196 () Int)
(declare-fun x969 () Bool)
(declare-fun x977 () Bool)
(declare-fun x4297 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x1852 () Int)
(declare-fun x3618 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x2604 () Int)
(declare-fun x1177 () Int)
(declare-fun x274 () Bool)
(declare-fun x3063 () Int)
(declare-fun x3796 () Int)
(declare-fun x181 () Bool)
(declare-fun x4260 () Bool)
(declare-fun x3556 () Int)
(declare-fun x1055 () Int)
(declare-fun x3143 () Bool)
(declare-fun x814 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x335 () Bool)
(declare-fun x1140 () Int)
(declare-fun x141 () Int)
(declare-fun x2478 () Bool)
(declare-fun x1936 () Int)
(declare-fun x2390 () Bool)
(declare-fun x4624 () Int)
(declare-fun x795 () Bool)
(declare-fun x974 () Int)
(declare-fun x1104 () Bool)
(declare-fun x249 () Int)
(declare-fun x71 () Int)
(declare-fun x1409 () Bool)
(declare-fun x4376 () Int)
(declare-fun x854 () Bool)
(declare-fun x1636 () Int)
(declare-fun x4122 () Int)
(declare-fun x596 () Int)
(declare-fun x3044 () Int)
(declare-fun x3953 () Int)
(declare-fun x2532 () Bool)
(declare-fun x933 () Int)
(declare-fun x3226 () Int)
(declare-fun x4399 () Int)
(declare-fun x2121 () Int)
(declare-fun x4197 () Bool)
(declare-fun x3105 () Int)
(declare-fun x4716 () Int)
(declare-fun x2651 () Int)
(declare-fun x1629 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x1943 () Int)
(declare-fun x2005 () Int)
(declare-fun x3811 () Int)
(declare-fun x3660 () Int)
(declare-fun x4245 () Int)
(declare-fun x3594 () Int)
(declare-fun x2584 () Bool)
(declare-fun x3204 () Int)
(declare-fun x1778 () Bool)
(declare-fun x3216 () Int)
(declare-fun x3354 () Bool)
(declare-fun x2854 () Int)
(declare-fun x1776 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x1288 () Int)
(declare-fun x4121 () Int)
(declare-fun x3725 () Bool)
(declare-fun x683 () Int)
(declare-fun x1829 () Int)
(declare-fun x127 () Int)
(declare-fun x4858 () Bool)
(declare-fun x2190 () Int)
(declare-fun x4690 () Int)
(declare-fun x4199 () Bool)
(declare-fun x230 () Int)
(declare-fun x678 () Int)
(declare-fun x3709 () Bool)
(declare-fun x1667 () Int)
(declare-fun x3789 () Bool)
(declare-fun x2954 () Bool)
(declare-fun x438 () Int)
(declare-fun x3805 () Bool)
(declare-fun x1853 () Int)
(declare-fun x942 () Int)
(declare-fun x58 () Int)
(declare-fun x1268 () Bool)
(declare-fun x2747 () Int)
(declare-fun x2125 () Int)
(declare-fun x4699 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x593 () Int)
(declare-fun x1185 () Int)
(declare-fun x3711 () Int)
(declare-fun x1929 () Bool)
(declare-fun x344 () Bool)
(declare-fun x348 () Bool)
(declare-fun x757 () Int)
(declare-fun x960 () Int)
(declare-fun x2924 () Int)
(declare-fun x3469 () Int)
(declare-fun x2569 () Int)
(declare-fun x3446 () Int)
(declare-fun x2950 (Int) Int)
(declare-fun x2782 () Int)
(declare-fun x812 () Bool)
(declare-fun x3925 () Int)
(declare-fun x2802 () Int)
(declare-fun x1139 () Int)
(declare-fun x1521 () Bool)
(declare-fun x729 () Int)
(declare-fun x1334 () Bool)
(declare-fun x2012 () Int)
(declare-fun x38 () Bool)
(declare-fun x571 (Int Int Int Int Int Int) Int)
(declare-fun x4483 () Bool)
(declare-fun x990 () Int)
(declare-fun x3036 () Bool)
(declare-fun x101 () Int)
(declare-fun x4809 () Bool)
(declare-fun x4252 () Int)
(declare-fun x3190 () Int)
(declare-fun x144 () Bool)
(declare-fun x4648 () Int)
(declare-fun x1995 () Bool)
(declare-fun x93 () Bool)
(declare-fun x4754 () Int)
(declare-fun x2282 () Int)
(declare-fun x3918 () Int)
(declare-fun x1552 () Int)
(declare-fun x2350 () Int)
(declare-fun x207 () Int)
(declare-fun x1295 () Int)
(declare-fun x1774 () Int)
(declare-fun x4410 () Int)
(declare-fun x1704 () Bool)
(declare-fun x4215 () Int)
(declare-fun x1447 () Int)
(declare-fun x4235 () Bool)
(declare-fun x1225 () Int)
(declare-fun x2844 () Int)
(declare-fun x1313 () Int)
(declare-fun x1541 () Int)
(declare-fun x4319 () Int)
(declare-fun x2639 () Int)
(declare-fun x2375 () Int)
(declare-fun x1635 () Int)
(declare-fun x1301 () Int)
(declare-fun x2776 () Bool)
(declare-fun x2516 () Int)
(declare-fun x4792 () Bool)
(declare-fun x3946 () Bool)
(declare-fun x2729 () Int)
(declare-fun x3554 (Int) Int)
(declare-fun x334 () Int)
(declare-fun x3339 () Int)
(declare-fun x4129 () Bool)
(declare-fun x6 () Int)
(declare-fun x598 () Int)
(declare-fun x4206 () Int)
(declare-fun x1425 () Int)
(declare-fun x2159 () Int)
(declare-fun x238 () Int)
(declare-fun x2447 () Int)
(declare-fun x2458 () Bool)
(declare-fun x912 () Int)
(declare-fun x2972 () Int)
(declare-fun x3442 () Bool)
(declare-fun x4734 () Bool)
(declare-fun x4024 () Bool)
(declare-fun x1233 () Int)
(declare-fun x3644 () Bool)
(declare-fun x4256 () Int)
(declare-fun x150 () Int)
(declare-fun x3310 () Bool)
(declare-fun x4863 () Int)
(declare-fun x1362 () Bool)
(declare-fun x1015 () Int)
(declare-fun x4393 () Bool)
(declare-fun x4234 () Int)
(declare-fun x91 () Bool)
(declare-fun x414 () Bool)
(declare-fun x3696 () Bool)
(declare-fun x3419 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x119 () Int)
(declare-fun x1877 () Int)
(declare-fun x2965 () Int)
(declare-fun x2949 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x2769 () Bool)
(declare-fun x4736 () Int)
(declare-fun x4738 () Int)
(declare-fun x2806 () Int)
(declare-fun x1931 () Bool)
(declare-fun x3367 () Int)
(declare-fun x315 () Int)
(declare-fun x520 () Int)
(declare-fun x1501 () Bool)
(declare-fun x2262 () Int)
(declare-fun x3558 () Int)
(declare-fun x3602 () Int)
(declare-fun x3572 () Int)
(declare-fun x2191 () Bool)
(declare-fun x4852 () Int)
(declare-fun x584 () Bool)
(declare-fun x909 () Int)
(declare-fun x2664 () Bool)
(declare-fun x830 () Int)
(declare-fun x1790 () Bool)
(declare-fun x691 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x2208 () Int)
(declare-fun x26 () Int)
(declare-fun x3945 () Int)
(declare-fun x4170 () Bool)
(declare-fun x2927 () Bool)
(declare-fun x245 () Int)
(declare-fun x4141 () Bool)
(declare-fun x651 () Int)
(declare-fun x3281 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x3172 () Bool)
(declare-fun x686 () Bool)
(declare-fun x1011 () Int)
(declare-fun x610 () Bool)
(declare-fun x3182 () Int)
(declare-fun x4782 () Int)
(declare-fun x1819 () Int)
(declare-fun x1944 () Bool)
(declare-fun x298 () Bool)
(declare-fun x1607 () Int)
(declare-fun x1921 () Bool)
(declare-fun x4267 () Int)
(declare-fun x4477 () Int)
(declare-fun x3005 () Int)
(declare-fun x248 () Int)
(declare-fun x271 () Bool)
(declare-fun x1227 () Int)
(declare-fun x4366 () Int)
(declare-fun x3346 () Bool)
(declare-fun x3318 () Bool)
(declare-fun x4751 () Int)
(declare-fun x4254 (Int) Int)
(declare-fun x4351 () Bool)
(declare-fun x486 () Int)
(declare-fun x1999 () Int)
(declare-fun x1988 () Int)
(declare-fun x3420 () Bool)
(declare-fun x206 () Bool)
(declare-fun x613 () Bool)
(declare-fun x2798 () Int)
(declare-fun x3496 () Int)
(declare-fun x136 () Bool)
(declare-fun x3256 () Int)
(declare-fun x4248 () Int)
(declare-fun x4022 () Int)
(declare-fun x2426 () Int)
(declare-fun x4853 () Int)
(declare-fun x100 () Int)
(declare-fun x2343 () Bool)
(declare-fun x4546 () Bool)
(declare-fun x83 () Int)
(declare-fun x4684 () Int)
(declare-fun x2821 () Bool)
(declare-fun x2791 () Int)
(declare-fun x1338 () Int)
(declare-fun x4475 () Int)
(declare-fun x4291 () Bool)
(declare-fun x4843 () Int)
(declare-fun x1038 () Int)
(declare-fun x1280 () Bool)
(declare-fun x2134 () Int)
(declare-fun x2594 () Bool)
(declare-fun x834 () Int)
(declare-fun x1992 (Int Int) Int)
(declare-fun x2866 () Bool)
(declare-fun x3193 () Int)
(declare-fun x4228 () Int)
(declare-fun x1861 () Bool)
(declare-fun x1399 () Int)
(declare-fun x4786 () Bool)
(declare-fun x3974 () Int)
(declare-fun x3391 () Int)
(declare-fun x4446 () Int)
(declare-fun x418 () Int)
(declare-fun x3125 () Bool)
(declare-fun x331 () Bool)
(declare-fun x262 () Bool)
(declare-fun x3350 () Int)
(declare-fun x4595 () Bool)
(declare-fun x4112 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x4127 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x3704 () Int)
(declare-fun x4265 () Int)
(declare-fun x526 () Bool)
(declare-fun x662 () Int)
(declare-fun x891 () Bool)
(declare-fun x3183 () Int)
(declare-fun x92 () Bool)
(declare-fun x1930 () Int)
(declare-fun x1329 () Int)
(declare-fun x4160 () Bool)
(declare-fun x143 () Bool)
(declare-fun x4525 () Int)
(declare-fun x3917 () Int)
(declare-fun x1500 () Int)
(declare-fun x4668 () Int)
(declare-fun x637 () Bool)
(declare-fun x781 () Int)
(declare-fun x1270 () Int)
(declare-fun x3328 () Int)
(declare-fun x1408 () Int)
(declare-fun x1703 () Int)
(declare-fun x3637 () Bool)
(declare-fun x464 () Int)
(declare-fun x4547 () Bool)
(declare-fun x4615 () Int)
(declare-fun x4712 () Int)
(declare-fun x2675 () Int)
(declare-fun x2217 () Int)
(declare-fun x737 () Int)
(declare-fun x4209 () Bool)
(declare-fun x3968 () Int)
(declare-fun x4145 () Bool)
(declare-fun x2493 () Int)
(declare-fun x673 () Bool)
(declare-fun x627 () Bool)
(declare-fun x3940 () Int)
(declare-fun x2757 () Bool)
(declare-fun x2299 () Int)
(declare-fun x453 () Int)
(declare-fun x3849 () Int)
(declare-fun x1449 () Int)
(declare-fun x345 () Int)
(declare-fun x3652 () Int)
(declare-fun x2186 () Int)
(declare-fun x3131 () Int)
(declare-fun x1671 () Bool)
(declare-fun x4569 () Int)
(declare-fun x4299 () Bool)
(declare-fun x3794 () Int)
(declare-fun x2031 () Bool)
(declare-fun x4680 () Bool)
(declare-fun x4330 () Int)
(declare-fun x165 () Int)
(declare-fun x2556 () Int)
(declare-fun x2715 () Int)
(declare-fun x3213 () Int)
(declare-fun x4408 () Bool)
(declare-fun x294 () Int)
(declare-fun x643 () Bool)
(declare-fun x3302 () Int)
(declare-fun x2846 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x1795 (Int) Int)
(declare-fun x1287 () Int)
(declare-fun x544 () Bool)
(declare-fun x1881 () Int)
(declare-fun x1048 () Int)
(declare-fun x3055 () Int)
(declare-fun x1322 () Bool)
(declare-fun x885 () Int)
(declare-fun x568 () Int)
(declare-fun x1817 () Int)
(declare-fun x459 () Int)
(declare-fun x4089 () Int)
(declare-fun x2138 () Int)
(declare-fun x3135 () Int)
(declare-fun x1611 () Bool)
(declare-fun x4744 () Bool)
(declare-fun x585 () Int)
(declare-fun x3924 () Int)
(declare-fun x1770 () Bool)
(declare-fun x913 () Int)
(declare-fun x3720 () Bool)
(declare-fun x194 () Bool)
(declare-fun x697 () Int)
(declare-fun x3191 () Int)
(declare-fun x2113 () Int)
(declare-fun x2398 () Int)
(declare-fun x3876 () Int)
(declare-fun x3770 () Int)
(declare-fun x3228 () Bool)
(declare-fun x4691 () Int)
(declare-fun x4747 () Int)
(declare-fun x25 () Int)
(declare-fun x1873 () Int)
(declare-fun x3612 () Int)
(declare-fun x599 () Bool)
(declare-fun x3048 () Bool)
(declare-fun x2164 () Int)
(declare-fun x1298 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x2617 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x367 () Int)
(declare-fun x535 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x431 () Int)
(declare-fun x3171 () Int)
(declare-fun x2098 () Int)
(declare-fun x636 () Bool)
(declare-fun x3014 () Int)
(declare-fun x52 () Int)
(declare-fun x2763 () Int)
(declare-fun x2960 () Int)
(declare-fun x1965 () Bool)
(declare-fun x3241 () Int)
(declare-fun x3639 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x2526 () Int)
(declare-fun x2028 () Bool)
(declare-fun x1604 () Int)
(declare-fun x3857 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x468 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x1001 (Int) Int)
(declare-fun x4572 () Bool)
(declare-fun x3668 () Int)
(declare-fun x4503 () Int)
(declare-fun x2163 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x1517 () Int)
(declare-fun x2989 () Int)
(declare-fun x2807 () Int)
(declare-fun x1804 () Bool)
(declare-fun x1332 () Int)
(declare-fun x4574 () Bool)
(declare-fun x4577 () Int)
(declare-fun x756 () Int)
(declare-fun x1924 () Int)
(declare-fun x4318 () Bool)
(declare-fun x303 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x3776 () Int)
(declare-fun x1407 () Int)
(declare-fun x4753 () Int)
(declare-fun x1176 (Int Int) Int)
(declare-fun x2508 () Int)
(declare-fun x2683 () Bool)
(declare-fun x2933 () Bool)
(declare-fun x1946 () Int)
(declare-fun x214 () Int)
(declare-fun x19 () Bool)
(declare-fun x1846 () Int)
(declare-fun x744 () Bool)
(declare-fun x3778 () Bool)
(declare-fun x1581 () Int)
(declare-fun x2733 () Int)
(declare-fun x3937 () Int)
(declare-fun x3791 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x2992 () Int)
(declare-fun x1934 () Bool)
(declare-fun x511 () Bool)
(declare-fun x4505 () Int)
(declare-fun x3107 () Bool)
(declare-fun x3832 () Int)
(declare-fun x1870 () Int)
(declare-fun x3474 () Int)
(declare-fun x2506 () Int)
(declare-fun x4325 () Int)
(declare-fun x1354 () Bool)
(declare-fun x146 () Bool)
(declare-fun x690 () Int)
(declare-fun x3362 () Int)
(declare-fun x4602 () Int)
(declare-fun x1135 () Bool)
(declare-fun x3360 () Int)
(declare-fun x4723 () Bool)
(declare-fun x4823 () Int)
(declare-fun x2066 () Int)
(declare-fun x3461 () Bool)
(declare-fun x4251 () Int)
(declare-fun x692 () Bool)
(declare-fun x555 () Bool)
(declare-fun x3094 () Bool)
(declare-fun x2826 () Bool)
(declare-fun x3967 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x250 () Bool)
(declare-fun x3128 () Int)
(declare-fun x3248 () Int)
(declare-fun x1355 () Int)
(declare-fun x1342 () Int)
(declare-fun x3279 () Int)
(declare-fun x2166 () Int)
(declare-fun x4840 () Int)
(declare-fun x4662 () Int)
(declare-fun x3195 () Bool)
(declare-fun x1389 () Int)
(declare-fun x286 () Int)
(declare-fun x966 () Bool)
(declare-fun x2229 () Int)
(declare-fun x204 () Bool)
(declare-fun x376 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x2889 () Bool)
(declare-fun x4760 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x2517 () Int)
(declare-fun x4233 () Bool)
(declare-fun x135 () Int)
(declare-fun x2158 () Int)
(declare-fun x2778 () Int)
(declare-fun x2790 () Int)
(declare-fun x1198 () Bool)
(declare-fun x868 () Int)
(declare-fun x4484 () Int)
(declare-fun x4165 () Bool)
(declare-fun x3737 () Int)
(declare-fun x4391 () Bool)
(declare-fun x2095 () Int)
(declare-fun x1618 (Int) Int)
(declare-fun x2090 () Int)
(declare-fun x2320 () Int)
(declare-fun x4564 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x1091 () Int)
(declare-fun x2575 () Bool)
(declare-fun x3427 () Int)
(declare-fun x3883 () Int)
(declare-fun x4745 () Bool)
(declare-fun x788 () Int)
(declare-fun x740 () Bool)
(declare-fun x1199 () Int)
(declare-fun x1969 () Bool)
(declare-fun x2 () Int)
(declare-fun x3977 () Int)
(declare-fun x1663 () Bool)
(declare-fun x1741 () Int)
(declare-fun x3519 () Bool)
(declare-fun x1563 () Int)
(declare-fun x4536 () Int)
(declare-fun x2884 () Int)
(declare-fun x922 () Int)
(declare-fun x252 () Int)
(declare-fun x4789 () Int)
(declare-fun x797 () Bool)
(declare-fun x4198 () Bool)
(declare-fun x192 () Bool)
(declare-fun x1351 () Int)
(declare-fun x527 () Int)
(declare-fun x4232 () Int)
(declare-fun x3081 () Int)
(declare-fun x4313 () Int)
(declare-fun x1326 () Int)
(declare-fun x2011 () Int)
(declare-fun x2510 () Int)
(declare-fun x4467 () Bool)
(declare-fun x3030 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x4220 () Int)
(declare-fun x4203 () Bool)
(declare-fun x2814 () Int)
(declare-fun x1750 () Int)
(declare-fun x2070 () Int)
(declare-fun x4756 () Int)
(declare-fun x316 () Int)
(declare-fun x3821 () Bool)
(declare-fun x525 () Bool)
(declare-fun x1764 () Int)
(declare-fun x3732 () Bool)
(declare-fun x1163 () Int)
(declare-fun x1702 () Bool)
(declare-fun x3439 () Int)
(declare-fun x608 () Int)
(declare-fun x2988 () Int)
(declare-fun x3934 () Int)
(declare-fun x3481 () Int)
(declare-fun x2308 () Int)
(declare-fun x3363 () Int)
(declare-fun x197 () Bool)
(declare-fun x4777 () Int)
(declare-fun x1269 () Int)
(declare-fun x547 () Bool)
(declare-fun x4388 () Bool)
(declare-fun x4189 () Int)
(declare-fun x2881 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x4850 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x4286 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1285 () Int)
(declare-fun x848 () Bool)
(declare-fun x4526 () Int)
(declare-fun x1516 () Bool)
(declare-fun x3441 () Bool)
(declare-fun x4779 () Int)
(declare-fun x4331 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x559 () Bool)
(declare-fun x1890 () Int)
(declare-fun x2850 () Int)
(declare-fun x2985 () Int)
(declare-fun x1548 () Bool)
(declare-fun x317 () Int)
(declare-fun x47 () Int)
(declare-fun x3655 () Bool)
(declare-fun x576 () Bool)
(declare-fun x235 () Int)
(declare-fun x2974 () Int)
(declare-fun x2823 () Bool)
(declare-fun x1237 () Int)
(declare-fun x865 () Bool)
(declare-fun x3566 () Bool)
(declare-fun x1835 () Int)
(declare-fun x32 () Int)
(declare-fun x4048 () Bool)
(declare-fun x1738 () Int)
(declare-fun x2371 () Bool)
(declare-fun x4012 () Bool)
(declare-fun x321 () Bool)
(declare-fun x4369 () Bool)
(declare-fun x3506 () Bool)
(declare-fun x1137 () Int)
(declare-fun x3295 () Int)
(declare-fun x2800 () Bool)
(declare-fun x4630 () Int)
(declare-fun x1952 () Bool)
(declare-fun x310 () Int)
(declare-fun x1508 () Int)
(declare-fun x1292 () Int)
(declare-fun x3536 () Bool)
(declare-fun x4276 () Int)
(declare-fun x2381 () Int)
(declare-fun x987 () Int)
(declare-fun x4353 () Int)
(declare-fun x4661 () Int)
(declare-fun x1353 () Int)
(declare-fun x1318 () Int)
(declare-fun x2942 () Int)
(declare-fun x672 () Bool)
(declare-fun x677 () Int)
(declare-fun x157 () Int)
(declare-fun x1275 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x3031 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1473 () Bool)
(declare-fun x4110 () Bool)
(declare-fun x2444 () Int)
(declare-fun x3579 () Bool)
(declare-fun x1625 () Int)
(declare-fun x1022 () Bool)
(declare-fun x1023 () Int)
(declare-fun x3837 () Int)
(declare-fun x2399 () Bool)
(declare-fun x3212 () Int)
(declare-fun x1028 () Bool)
(declare-fun x4719 () Bool)
(declare-fun x4044 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x3066 () Int)
(declare-fun x4154 () Int)
(declare-fun x2465 () Int)
(declare-fun x1378 () Int)
(declare-fun x798 () Bool)
(declare-fun x3312 () Int)
(declare-fun x1171 () Int)
(declare-fun x664 () Bool)
(declare-fun x978 () Bool)
(declare-fun x1382 () Int)
(declare-fun x1440 () Int)
(declare-fun x4847 () Int)
(declare-fun x1980 () Int)
(declare-fun x1212 () Int)
(declare-fun x843 () Int)
(declare-fun x283 () Bool)
(declare-fun x2108 () Int)
(declare-fun x930 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x4150 () Int)
(declare-fun x4489 () Bool)
(declare-fun x1172 () Int)
(declare-fun x635 () Int)
(declare-fun x1615 () Int)
(declare-fun x3092 () Int)
(declare-fun x349 () Int)
(declare-fun x2334 () Int)
(declare-fun x2507 () Bool)
(declare-fun x1404 () Int)
(declare-fun x2175 () Bool)
(declare-fun x821 () Int)
(declare-fun x3227 () Int)
(declare-fun x4231 () Int)
(declare-fun x3021 () Int)
(declare-fun x70 () Int)
(declare-fun x4675 () Int)
(declare-fun x3588 () Bool)
(declare-fun x676 () Int)
(declare-fun x292 () Int)
(declare-fun x4474 () Bool)
(declare-fun x3604 () Bool)
(declare-fun x634 () Bool)
(declare-fun x3514 () Int)
(declare-fun x50 () Int)
(declare-fun x66 () Int)
(declare-fun x2731 () Int)
(declare-fun x362 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1585 () Int)
(declare-fun x1640 () Bool)
(declare-fun x3070 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x1875 () Int)
(declare-fun x2258 () Int)
(declare-fun x4053 () Bool)
(declare-fun x3633 () Int)
(declare-fun x2193 () Bool)
(declare-fun x4665 () Int)
(declare-fun x3931 () Int)
(declare-fun x163 () Bool)
(declare-fun x2931 () Int)
(declare-fun x992 () Int)
(declare-fun x4592 () Bool)
(declare-fun x3627 () Int)
(declare-fun x4416 () Int)
(declare-fun x3531 () Bool)
(declare-fun x368 () Bool)
(declare-fun x575 () Int)
(declare-fun x4157 () Bool)
(declare-fun x199 () Bool)
(declare-fun x1608 () Int)
(declare-fun x3099 () Int)
(declare-fun x1866 () Int)
(declare-fun x3359 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x2849 () Int)
(declare-fun x736 () Int)
(declare-fun x3169 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x3307 () Bool)
(declare-fun x337 () Int)
(declare-fun x4621 () Int)
(declare-fun x921 () Bool)
(declare-fun x3197 () Int)
(declare-fun x2275 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1189 () Int)
(declare-fun x3547 () Bool)
(declare-fun x4066 () Int)
(declare-fun x1538 () Int)
(declare-fun x3467 () Int)
(declare-fun x1279 () Bool)
(declare-fun x2928 () Int)
(declare-fun x1743 () Bool)
(declare-fun x3915 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x2533 () Int)
(declare-fun x2958 () Int)
(declare-fun x1783 (Int) Int)
(declare-fun x4451 () Int)
(declare-fun x4647 () Int)
(declare-fun x3775 () Bool)
(declare-fun x1297 () Int)
(declare-fun x2969 () Bool)
(declare-fun x3155 () Int)
(declare-fun x3471 () Int)
(declare-fun x632 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x3617 () Bool)
(declare-fun x3527 () Int)
(declare-fun x2621 () Bool)
(declare-fun x2742 () Int)
(declare-fun x1431 () Bool)
(declare-fun x3266 () Int)
(declare-fun x3666 () Int)
(declare-fun x1757 (Int) Int)
(declare-fun x4772 () Int)
(declare-fun x3322 () Int)
(declare-fun x4741 () Bool)
(declare-fun x3909 () Int)
(declare-fun x735 () Bool)
(declare-fun x3754 () Int)
(declare-fun x3908 () Int)
(declare-fun x689 () Int)
(declare-fun x3907 () Bool)
(declare-fun x2616 () Int)
(declare-fun x779 () Int)
(declare-fun x1901 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x2021 () Int)
(declare-fun x3159 () Bool)
(declare-fun x3234 () Int)
(declare-fun x4262 () Int)
(declare-fun x2598 () Int)
(declare-fun x3479 () Int)
(declare-fun x1791 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x3192 () Int)
(declare-fun x1686 () Int)
(declare-fun x2577 () Int)
(declare-fun x3568 () Bool)
(declare-fun x4706 () Bool)
(declare-fun x4759 () Int)
(declare-fun x3534 () Int)
(declare-fun x3229 () Bool)
(declare-fun x515 () Bool)
(declare-fun x1537 () Int)
(declare-fun x877 () Bool)
(declare-fun x496 () Int)
(declare-fun x140 () Int)
(declare-fun x404 () Int)
(declare-fun x4424 () Int)
(declare-fun x3235 () Int)
(declare-fun x602 () Int)
(declare-fun x1162 () Int)
(declare-fun x1616 () Int)
(declare-fun x3999 () Int)
(declare-fun x1293 (Int) Int)
(declare-fun x428 () Int)
(declare-fun x1949 () Int)
(declare-fun x3160 () Int)
(declare-fun x3798 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x2015 () Int)
(declare-fun x3517 () Int)
(declare-fun x3161 () Int)
(declare-fun x543 () Bool)
(declare-fun x475 () Bool)
(declare-fun x202 () Int)
(declare-fun x2566 () Int)
(declare-fun x3942 () Int)
(declare-fun x167 () Bool)
(declare-fun x2362 () Int)
(declare-fun x1246 () Int)
(declare-fun x970 () Int)
(declare-fun x3333 () Bool)
(declare-fun x3736 () Int)
(declare-fun x2369 () Int)
(declare-fun x4591 () Bool)
(declare-fun x1828 () Int)
(declare-fun x655 () Bool)
(declare-fun x1433 () Int)
(declare-fun x2867 () Int)
(declare-fun x56 () Int)
(declare-fun x2278 () Bool)
(declare-fun x601 () Int)
(declare-fun x2443 () Bool)
(declare-fun x2395 () Bool)
(declare-fun x3249 () Int)
(declare-fun x4441 () Bool)
(declare-fun x4396 () Int)
(declare-fun x1214 () Int)
(declare-fun x1333 () Int)
(declare-fun x3449 () Int)
(declare-fun x2225 () Int)
(declare-fun x2415 () Bool)
(declare-fun x260 () Int)
(declare-fun x99 () Int)
(declare-fun x3375 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x4230 () Int)
(declare-fun x509 () Int)
(declare-fun x2986 () Int)
(declare-fun x3731 () Bool)
(declare-fun x4176 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x1136 () Int)
(declare-fun x3406 () Int)
(declare-fun x4548 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x3913 () Int)
(declare-fun x1032 () Int)
(declare-fun x4652 () Int)
(declare-fun x2078 () Bool)
(declare-fun x1009 () Int)
(declare-fun x421 () Bool)
(declare-fun x750 () Bool)
(declare-fun x86 () Bool)
(declare-fun x4770 () Int)
(declare-fun x2139 () Bool)
(declare-fun x3944 () Bool)
(declare-fun x2820 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x4312 () Int)
(declare-fun x4172 () Bool)
(declare-fun x1880 () Int)
(declare-fun x1555 () Int)
(declare-fun x1181 () Int)
(declare-fun x4373 () Bool)
(declare-fun x620 () Bool)
(declare-fun x2223 () Int)
(declare-fun x745 () Int)
(declare-fun x1031 () Int)
(declare-fun x1591 () Int)
(declare-fun x48 () Int)
(declare-fun x4687 () Int)
(declare-fun x1085 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x4854 () Int)
(declare-fun x1606 () Int)
(declare-fun x569 () Bool)
(declare-fun x4280 () Bool)
(declare-fun x1211 () Int)
(declare-fun x731 () Int)
(declare-fun x3487 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x4787 () Int)
(declare-fun x312 () Bool)
(declare-fun x893 () Bool)
(declare-fun x2990 () Int)
(declare-fun x1642 () Bool)
(declare-fun x993 () Int)
(declare-fun x590 () Int)
(declare-fun x3955 () Int)
(declare-fun x1260 () Int)
(declare-fun x824 () Bool)
(declare-fun x4167 () Bool)
(declare-fun x2254 () Int)
(declare-fun x2020 () Int)
(declare-fun x79 () Bool)
(declare-fun x3524 () Int)
(declare-fun x3675 () Int)
(declare-fun x3648 () Int)
(declare-fun x1454 () Bool)
(declare-fun x804 () Int)
(declare-fun x3601 () Bool)
(declare-fun x377 () Int)
(declare-fun x4520 () Int)
(declare-fun x2144 () Bool)
(declare-fun x3470 () Int)
(declare-fun x299 () Bool)
(declare-fun x1713 () Int)
(declare-fun x1277 () Bool)
(declare-fun x210 () Int)
(declare-fun x4009 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x2347 () Int)
(declare-fun x4417 () Int)
(declare-fun x2214 () Bool)
(declare-fun x2132 () Int)
(declare-fun x2832 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x1315 () Int)
(declare-fun x2638 () Bool)
(declare-fun x4540 () Bool)
(declare-fun x2438 () Int)
(declare-fun x4804 () Bool)
(declare-fun x180 () Int)
(declare-fun x2719 () Bool)
(declare-fun x4593 () Bool)
(declare-fun x2242 () Int)
(declare-fun x1697 () Bool)
(declare-fun x4839 () Bool)
(declare-fun x3345 () Bool)
(declare-fun x2888 () Bool)
(declare-fun x4010 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x2634 () Int)
(declare-fun x3894 () Int)
(declare-fun x1370 () Int)
(declare-fun x3693 () Bool)
(declare-fun x4115 () Bool)
(declare-fun x4425 () Bool)
(declare-fun x4702 () Bool)
(declare-fun x3351 () Int)
(declare-fun x1437 () Bool)
(declare-fun x3168 () Bool)
(declare-fun x4067 () Bool)
(declare-fun x1393 () Int)
(declare-fun x77 () Int)
(declare-fun x4580 () Int)
(declare-fun x16 () Int)
(declare-fun x3757 () Bool)
(declare-fun x3499 () Int)
(declare-fun x1063 () Int)
(declare-fun x1012 () Int)
(declare-fun x4205 () Int)
(declare-fun x2270 () Int)
(declare-fun x1903 () Int)
(declare-fun x2241 () Int)
(declare-fun x3930 () Int)
(declare-fun x778 () Bool)
(declare-fun x850 () Int)
(declare-fun x4187 () Int)
(declare-fun x1024 () Int)
(declare-fun x574 () Int)
(declare-fun x3532 () Int)
(declare-fun x4240 () Int)
(declare-fun x2641 () Int)
(declare-fun x1587 () Int)
(declare-fun x783 () Int)
(declare-fun x2173 () Int)
(declare-fun x2549 () Int)
(declare-fun x3206 () Bool)
(declare-fun x4452 () Int)
(declare-fun x134 () Int)
(declare-fun x4361 () Int)
(declare-fun x1645 () Int)
(declare-fun x4735 () Int)
(declare-fun x948 () Bool)
(declare-fun x4168 () Int)
(declare-fun x4292 () Bool)
(declare-fun x2970 () Bool)
(declare-fun x4005 () Int)
(declare-fun x3998 () Bool)
(declare-fun x4607 () Int)
(declare-fun x34 () Int)
(declare-fun x1916 () Int)
(declare-fun x3220 () Bool)
(declare-fun x2524 () Int)
(declare-fun x995 () Bool)
(declare-fun x1029 () Int)
(declare-fun x3001 () Int)
(declare-fun x2666 () Bool)
(declare-fun x4133 () Int)
(declare-fun x1344 () Bool)
(declare-fun x3074 () Bool)
(declare-fun x2446 () Int)
(declare-fun x1290 () Int)
(declare-fun x2999 () Int)
(declare-fun x3064 () Int)
(declare-fun x2209 () Int)
(declare-fun x341 () Int)
(declare-fun x253 () Int)
(declare-fun x762 () Int)
(declare-fun x1095 () Bool)
(declare-fun x4501 () Bool)
(declare-fun x1634 () Int)
(declare-fun x415 () Int)
(declare-fun x1669 () Bool)
(declare-fun x4225 () Int)
(declare-fun x80 () Int)
(declare-fun x1826 () Int)
(declare-fun x932 () Int)
(declare-fun x2727 () Bool)
(declare-fun x1598 () Int)
(declare-fun x994 () Int)
(declare-fun x3027 () Int)
(declare-fun x1128 () Bool)
(declare-fun x2340 () Int)
(declare-fun x3786 () Bool)
(declare-fun x1831 () Int)
(declare-fun x3115 () Int)
(declare-fun x3239 () Int)
(declare-fun x4049 () Int)
(declare-fun x443 () Bool)
(declare-fun x1150 () Int)
(declare-fun x4211 () Int)
(declare-fun x4821 () Int)
(declare-fun x3581 () Int)
(declare-fun x2736 () Int)
(declare-fun x1673 () Bool)
(declare-fun x1428 () Int)
(declare-fun x399 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x495 () Int)
(declare-fun x1882 () Bool)
(declare-fun x936 () Int)
(declare-fun x4078 () Int)
(declare-fun x2937 () Int)
(declare-fun x2859 () Bool)
(declare-fun x2681 () Bool)
(declare-fun x3057 () Int)
(declare-fun x838 () Int)
(declare-fun x1175 () Int)
(declare-fun x3533 () Bool)
(declare-fun x803 () Int)
(declare-fun x4091 () Int)
(declare-fun x2816 () Int)
(declare-fun x4598 () Int)
(declare-fun x2059 () Int)
(declare-fun x1850 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x3803 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1661 () Int)
(declare-fun x2828 () Bool)
(declare-fun x2876 () Int)
(declare-fun x996 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x4589 () Int)
(declare-fun x3067 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x4523 () Bool)
(declare-fun x255 () Int)
(declare-fun x126 () Int)
(declare-fun x1284 () Int)
(declare-fun x2886 () Int)
(declare-fun x4290 () Int)
(declare-fun x393 () Int)
(declare-fun x4788 () Int)
(declare-fun x1148 () Bool)
(declare-fun x3009 () Int)
(declare-fun x4828 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x3631 () Int)
(declare-fun x2156 () Bool)
(declare-fun x3522 () Bool)
(declare-fun x789 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x3456 () Int)
(declare-fun x3101 () Bool)
(declare-fun x360 () Int)
(declare-fun x4775 () Int)
(declare-fun x2101 () Int)
(declare-fun x534 () Int)
(declare-fun x2341 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x1420 () Int)
(declare-fun x1755 () Int)
(declare-fun x4444 () Int)
(declare-fun x2140 () Int)
(declare-fun x4138 () Bool)
(declare-fun x1863 () Int)
(declare-fun x3671 () Int)
(declare-fun x2300 () Bool)
(declare-fun x350 () Int)
(declare-fun x2628 () Bool)
(declare-fun x3137 () Int)
(declare-fun x1369 () Int)
(declare-fun x2780 () Int)
(declare-fun x772 () Bool)
(declare-fun x251 () Int)
(declare-fun x4130 () Bool)
(declare-fun x3780 () Int)
(declare-fun x2115 () Int)
(declare-fun x288 () Int)
(declare-fun x2407 () Bool)
(declare-fun x326 () Bool)
(declare-fun x451 () Bool)
(declare-fun x4824 () Int)
(declare-fun x3493 () Bool)
(declare-fun x2940 () Int)
(declare-fun x1219 () Bool)
(declare-fun x4364 () Bool)
(declare-fun x3674 () Bool)
(declare-fun x3497 () Int)
(declare-fun x1526 () Bool)
(declare-fun x2268 () Int)
(declare-fun x1005 () Bool)
(declare-fun x983 () Bool)
(declare-fun x3969 () Int)
(declare-fun x4430 () Int)
(declare-fun x2753 () Bool)
(declare-fun x1648 () Int)
(declare-fun x3311 () Int)
(declare-fun x3962 () Int)
(declare-fun x2383 () Bool)
(declare-fun x4186 () Bool)
(declare-fun x973 () Int)
(declare-fun x1701 () Int)
(declare-fun x2161 (Int) Int)
(declare-fun x3018 () Int)
(declare-fun x4003 () Bool)
(declare-fun x1347 () Int)
(declare-fun x2440 () Int)
(declare-fun x3567 () Int)
(declare-fun x4437 () Bool)
(declare-fun x4556 () Bool)
(declare-fun x4004 () Int)
(declare-fun x2169 () Int)
(declare-fun x2365 () Bool)
(declare-fun x87 () Int)
(declare-fun x2815 () Int)
(declare-fun x3451 () Int)
(declare-fun x2559 () Int)
(declare-fun x233 () Int)
(declare-fun x4016 () Bool)
(declare-fun x280 () Int)
(declare-fun x434 () Int)
(declare-fun x3482 () Int)
(declare-fun x3473 () Int)
(declare-fun x2403 () Int)
(declare-fun x1496 () Bool)
(declare-fun x4778 () Bool)
(declare-fun x3850 () Int)
(declare-fun x2712 () Int)
(declare-fun x96 () Int)
(declare-fun x4014 () Int)
(declare-fun x1684 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x1963 () Int)
(declare-fun x4428 () Int)
(declare-fun x184 () Int)
(declare-fun x3186 () Int)
(declare-fun x3198 () Int)
(declare-fun x2302 () Int)
(declare-fun x1307 () Bool)
(declare-fun x938 () Int)
(declare-fun x2412 () Int)
(declare-fun x3068 () Int)
(declare-fun x3447 () Int)
(declare-fun x1465 (Int Int Int) Int)
(declare-fun x2033 () Bool)
(declare-fun x277 () Bool)
(declare-fun x3368 () Int)
(declare-fun x550 () Int)
(declare-fun x84 () Int)
(declare-fun x1522 () Int)
(declare-fun x182 () Int)
(declare-fun x3245 () Bool)
(declare-fun x403 () Int)
(declare-fun x413 () Int)
(declare-fun x3492 () Int)
(declare-fun x2672 () Bool)
(declare-fun x3685 () Int)
(declare-fun x1273 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x37 () Int)
(declare-fun x4693 () Int)
(declare-fun x258 () Int)
(declare-fun x4096 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x2154 () Int)
(declare-fun x1682 () Int)
(declare-fun x2135 () Int)
(declare-fun x4476 () Int)
(declare-fun x1535 () Bool)
(declare-fun x265 () Int)
(declare-fun x2671 () Bool)
(declare-fun x4316 () Bool)
(declare-fun x406 () Int)
(declare-fun x1777 () Bool)
(declare-fun x156 () Int)
(declare-fun x1112 () Int)
(declare-fun x2793 () Bool)
(declare-fun x2966 () Int)
(declare-fun x1670 () Int)
(declare-fun x1224 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x890 () Int)
(declare-fun x2264 () Bool)
(declare-fun x1716 () Int)
(declare-fun x1254 () Int)
(declare-fun x1883 () Int)
(declare-fun x4450 () Bool)
(declare-fun x3332 () Int)
(declare-fun x1089 () Bool)
(declare-fun x3389 () Int)
(declare-fun x3395 () Bool)
(declare-fun x1485 () Int)
(declare-fun x4560 () Bool)
(declare-fun x3151 () Int)
(declare-fun x2149 () Bool)
(declare-fun x2387 () Int)
(declare-fun x490 () Int)
(declare-fun x717 () Bool)
(declare-fun x474 () Bool)
(declare-fun x4104 () Int)
(declare-fun x4685 () Int)
(declare-fun x4682 () Bool)
(declare-fun x4095 () Int)
(declare-fun x4017 () Int)
(declare-fun x1142 () Bool)
(declare-fun x1030 () Int)
(declare-fun x2030 () Bool)
(declare-fun x3873 () Int)
(declare-fun x1088 () Int)
(declare-fun x2748 () Int)
(declare-fun x209 () Int)
(declare-fun x663 () Int)
(declare-fun x4274 () Int)
(declare-fun x4158 () Int)
(declare-fun x2040 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x3869 (Int Int) Int)
(declare-fun x1836 () Int)
(declare-fun x4323 () Int)
(declare-fun x4864 () Bool)
(declare-fun x1451 () Int)
(declare-fun x3033 () Bool)
(declare-fun x4445 () Int)
(declare-fun x564 () Int)
(declare-fun x1282 () Int)
(declare-fun x4347 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x802 () Int)
(declare-fun x3823 () Int)
(declare-fun x110 () Bool)
(declare-fun x2385 () Int)
(declare-fun x4100 () Int)
(declare-fun x198 () Int)
(declare-fun x2491 () Int)
(declare-fun x78 () Int)
(declare-fun x3851 () Bool)
(declare-fun x4365 () Int)
(declare-fun x4498 () Int)
(declare-fun x3024 () Bool)
(declare-fun x379 () Int)
(declare-fun x1047 () Bool)
(declare-fun x1894 () Int)
(declare-fun x1416 () Int)
(declare-fun x3896 () Int)
(declare-fun x3244 () Int)
(declare-fun x3498 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x530 () Int)
(declare-fun x1660 () Bool)
(declare-fun x480 () Int)
(declare-fun x2734 () Bool)
(declare-fun x169 () Bool)
(declare-fun x1426 () Int)
(declare-fun x892 () Bool)
(declare-fun x4310 () Int)
(declare-fun x3265 () Int)
(declare-fun x239 () Int)
(declare-fun x3196 () Bool)
(declare-fun x3371 () Int)
(declare-fun x519 () Bool)
(declare-fun x1865 () Int)
(declare-fun x3724 () Int)
(declare-fun x3215 () Int)
(declare-fun x1210 () Int)
(declare-fun x3743 () Int)
(declare-fun x4269 () Int)
(declare-fun x4242 () Int)
(declare-fun x4794 () Bool)
(declare-fun x4846 () Int)
(declare-fun x2607 () Int)
(declare-fun x3591 () Int)
(declare-fun x512 () Int)
(declare-fun x1166 () Bool)
(declare-fun x894 () Int)
(declare-fun x3990 () Int)
(declare-fun x1626 () Int)
(declare-fun x1050 () Int)
(declare-fun x1083 () Int)
(declare-fun x1027 (Int) Int)
(declare-fun x1867 () Int)
(declare-fun x4561 () Int)
(declare-fun x3436 () Int)
(declare-fun x4136 () Int)
(declare-fun x659 () Int)
(declare-fun x661 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x4355 () Bool)
(declare-fun x1643 () Int)
(declare-fun x538 () Int)
(declare-fun x2368 () Int)
(declare-fun x4055 () Int)
(declare-fun x2437 () Int)
(declare-fun x3707 () Bool)
(declare-fun x1110 () Int)
(declare-fun x15 () Int)
(declare-fun x4076 () Bool)
(define-fun x3584 ((x3713 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3713) (>= x3713 0)) x3713 (- x3713 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3042 ((x3713 Int)) Int (ite (and (< x3713 0) (>= x3713 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x3713 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3713))
(define-fun x493 ((x3713 Int)) Int (ite (and (>= x3713 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3713)) x3713 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3713) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x3713)) (- x3713 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x3713 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x3713 0)) (+ x3713 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4070 x3713 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x3402 ((x3056 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3056) (<= 0 x3056)))
(define-fun x4283 ((x3056 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3056) (>= x3056 0)))
(define-fun x545 ((x3056 Int) (x1849 Int)) Bool (= (* x1849 x3056) (x3629 x3056 x1849)))
(define-fun x4034 ((x3056 Int) (x1849 Int)) Bool (and (= (- (* (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3056) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3629 (- x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x3629 x3056 (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x3056 (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1849 x3056) (* x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x3629 (- x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1849))))
(define-fun x1976 ((x3056 Int) (x1849 Int)) Bool (=> (and (< 0 x3056) (< 0 x1849)) (= (= x1849 (x1747 (x493 (x3629 x3056 x1849)) x3056)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3629 x3056 x1849)))))
(define-fun x4679 ((x3056 Int) (x1849 Int)) Bool (=> (and (not (= x1849 0)) (not (= 0 x3056))) (and (= (x1747 (x3629 x3056 x1849) x3056) x1849) (= (x1747 (x3629 x3056 x1849) x1849) x3056))))
(define-fun x1132 ((x3056 Int) (x1849 Int)) Bool (=> (and (< 0 x1849) (> x3056 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3629 x3056 x1849)) (< (x1747 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3056) x1849))))
(define-fun x712 ((x3056 Int) (x1849 Int)) Bool (and (= (x493 (x3629 x3056 x1849)) (x493 (x3629 x3056 (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x493 (x3629 (- x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1849)) (x493 (x3629 x3056 x1849))) (= (x493 (x3629 (- x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x493 (x3629 x3056 x1849)))))
(define-fun x628 ((x3056 Int) (x1849 Int)) Bool (and (=> (and (and (<= x1849 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1849)) (and (> x3056 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3056))) (= (>= (x1747 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1849) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3056)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x3629 (- x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1849)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1849) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1849)) (and (> x3056 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3056))) (= (<= (x3629 (- x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1747 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1849)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3056)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1849) (> x1849 0)) (and (< 0 x3056) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3056))) (= (>= (x1747 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1849) x3056) (<= (x3629 x3056 x1849) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1849) (<= x1849 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3056) (> x3056 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1849) (x1747 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3056)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x3629 x3056 (- x1849 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x3971 ((x3056 Int) (x1849 Int)) Bool (and (x545 x3056 x1849) (x628 x3056 x1849) (x4679 x3056 x1849) (x712 x3056 x1849) (x4034 x3056 x1849) (x1976 x3056 x1849) (x1132 x3056 x1849)))
(define-fun x3484 ((x3056 Int)) Bool (and (= 0 (x3629 0 x3056)) (= 0 (x3629 x3056 0))))
(define-fun x3597 ((x3056 Int)) Bool (and (= (x3629 x3056 1) x3056) (= (x3629 1 x3056) x3056)))
(define-fun x1081 ((x3056 Int)) Bool (and (x3597 x3056) (x3484 x3056)))
(define-fun x4259 ((x3056 Int)) Bool (and (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3056) x3056) (= x3056 (x2206 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1391 ((x3056 Int)) Bool (and (= 0 (x2206 0 x3056)) (= 0 (x2206 x3056 0))))
(define-fun x1405 ((x3056 Int)) Bool (= x3056 (x2206 x3056 x3056)))
(define-fun x1411 ((x3056 Int)) Bool (and (x4259 x3056) (x1391 x3056) (x1405 x3056)))
(define-fun x1840 ((x3056 Int) (x1849 Int)) Bool (= (x2206 x3056 x1849) (x2206 x1849 x3056)))
(define-fun x465 ((x3056 Int) (x1849 Int)) Bool (and (=> (<= 0 x3056) (>= x3056 (x2206 x3056 x1849))) (<= 0 (x2206 x3056 x1849)) (=> (<= 0 x1849) (>= x1849 (x2206 x3056 x1849)))))
(define-fun x3615 ((x3056 Int) (x1849 Int)) Bool (and (x465 x3056 x1849) (x1840 x3056 x1849)))
(define-fun x952 ((x3056 Int)) Bool (= (x493 x3056) (+ (x4070 x3056 32) (x2206 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x4488 ((x3056 Int)) Bool (and (x3615 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x952 x3056)))
(define-fun x3605 ((x3056 Int) (x1849 Int)) Bool (and (> x1849 (x4070 x3056 x1849)) (<= 0 (x4070 x3056 x1849))))
(define-fun x2142 ((x3056 Int) (x1849 Int)) Bool (=> (and (< 0 x1849) (<= 0 x3056)) (= (> x1849 x3056) (= (x4070 x3056 x1849) x3056))))
(define-fun x383 ((x3056 Int) (x1849 Int)) Bool (=> (and (> x1849 0) (and (>= x3056 x1849) (< x3056 (+ x1849 x1849)))) (= (x4070 x3056 x1849) (- x3056 x1849))))
(define-fun x3580 ((x3056 Int) (x1849 Int)) Bool (=> (> x1849 0) (= x3056 (+ (x4070 x3056 x1849) (* (x1747 x3056 x1849) x1849)))))
(define-fun x2890 ((x3056 Int) (x1849 Int)) Bool (and (x3605 x3056 x1849) (x383 x3056 x1849) (x2142 x3056 x1849) (x3580 x3056 x1849)))
(define-fun x1524 ((x3056 Int)) Bool (= 0 (x4070 0 x3056)))
(define-fun x4015 ((x3056 Int)) Bool (= (x4070 x3056 1) 0))
(define-fun x4586 ((x3056 Int)) Bool (= (x4070 x3056 x3056) 0))
(define-fun x2041 ((x3056 Int)) Bool (and (x4015 x3056) (x4586 x3056) (x1524 x3056)))
(define-fun x4073 ((x3056 Int)) Bool (= (x4070 x3056 1461501637330902918203684832716283019655932542976) (x2206 x3056 1461501637330902918203684832716283019655932542975)))
(define-fun x1221 ((x3056 Int)) Bool (and (x3615 x3056 1461501637330902918203684832716283019655932542975) (x4073 x3056)))
(define-fun x841 ((x3056 Int)) Bool (and (= (x3177 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3177 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3056))))
(define-fun x4065 ((x3056 Int)) Bool (and (= (x3177 0 x3056) x3056) (= (x3177 x3056 0) x3056)))
(define-fun x4057 ((x3056 Int)) Bool (= (x3177 x3056 x3056) x3056))
(define-fun x3853 ((x3056 Int)) Bool (and (x841 x3056) (x4057 x3056) (x4065 x3056)))
(define-fun x4166 ((x3056 Int) (x1849 Int)) Bool (= (x3177 x3056 x1849) (x3177 x1849 x3056)))
(define-fun x4764 ((x3056 Int) (x1849 Int)) Bool (and (=> (<= 0 x1849) (<= x1849 (x3177 x3056 x1849))) (<= (x3177 x3056 x1849) (+ x3056 x1849)) (=> (>= x3056 0) (<= x3056 (x3177 x3056 x1849)))))
(define-fun x1638 ((x3056 Int) (x1849 Int)) Bool (and (x4764 x3056 x1849) (x4166 x3056 x1849)))
(define-fun x1937 ((x3056 Int)) Bool (= (x4070 x3056 256) (x2206 x3056 255)))
(define-fun x2105 ((x3056 Int)) Bool (and (x1937 x3056) (x3615 x3056 255)))
(define-fun x3051 ((x3056 Int)) Bool (and (<= x3056 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3056)))
(define-fun x2495 ((x3056 Int)) Bool (and (<= x3056 1461501637330902918203684832716283019655932542975) (>= x3056 0)))
(define-fun x1017 ((x1475 Int)) Int 0)
(define-fun x1025 ((x1475 Int)) Int 0)
(define-fun x1832 ((x1475 Int)) Int 0)
(define-fun x2425 ((x1475 Int)) Int 0)
(define-fun x3353 ((x1475 Int)) Int 0)
(define-fun x815 ((x1475 Int)) Int 0)
(define-fun x587 ((x1475 Int)) Int 0)
(define-fun x3080 ((x1475 Int)) Int 0)
(define-fun x2122 ((x1475 Int)) Int 0)
(define-fun x1087 ((x1475 Int)) Int 0)
(define-fun x667 ((x1475 Int)) Int 0)
(define-fun x1766 ((x1475 Int)) Int 0)
(define-fun x4527 ((x1475 Int)) Int 0)
(define-fun x1093 ((x1475 Int)) Int 0)
(define-fun x2434 ((x1475 Int)) Int 0)
(define-fun x1821 ((x1475 Int)) Int 0)
(define-fun x3573 ((x1475 Int)) Int 0)
(define-fun x4479 ((x1475 Int)) Int 0)
(define-fun x1122 ((x1475 Int)) Int 0)
(define-fun x2643 ((x1475 Int)) Int 0)
(define-fun x2680 ((x1475 Int)) Int 0)
(define-fun x4765 ((x1475 Int)) Int 0)
(define-fun x1990 ((x1475 Int)) Int 0)
(define-fun x2945 ((x1475 Int)) Int 0)
(define-fun x1570 ((x1475 Int)) Int 0)
(define-fun x1090 ((x1475 Int)) Int 0)
(define-fun x3460 ((x1475 Int)) Int 0)
(define-fun x2092 ((x1475 Int)) Int 0)
(define-fun x1118 ((x1475 Int)) Int 0)
(define-fun x3773 ((x1475 Int)) Int 0)
(define-fun x3549 ((x1475 Int)) Int 0)
(define-fun x2948 ((x1475 Int)) Int 0)
(define-fun x4288 ((x1475 Int)) Int 0)
(define-fun x3550 ((x1475 Int)) Int 0)
(define-fun x4674 ((x1475 Int)) Int 0)
(define-fun x2024 ((x1475 Int)) Int 0)
(define-fun x2779 ((x1475 Int)) Int 0)
(define-fun x2429 ((x1475 Int)) Int 0)
(define-fun x2155 ((x1475 Int)) Int 0)
(define-fun x2127 ((x1475 Int)) Int 0)
(define-fun x1336 ((x1475 Int)) Int 0)
(define-fun x2489 ((x1475 Int)) Int 0)
(define-fun x855 ((x1475 Int)) Int 0)
(define-fun x556 ((x1475 Int)) Int 0)
(define-fun x1115 ((x1475 Int)) Int 0)
(define-fun x3069 ((x1475 Int)) Int 0)
(define-fun x3544 ((x1475 Int)) Int 0)
(define-fun x1955 ((x1475 Int)) Int 0)
(define-fun x4354 ((x1475 Int)) Int 0)
(define-fun x1394 ((x1475 Int)) Int 0)
(define-fun x2551 ((x1475 Int)) Int 0)
(define-fun x4562 ((x1475 Int)) Int 0)
(define-fun x2558 ((x1475 Int)) Int 0)
(define-fun x4447 ((x1475 Int)) Int 0)
(define-fun x954 ((x1475 Int)) Int 0)
(define-fun x374 ((x1475 Int)) Int 0)
(define-fun x2917 ((x1475 Int)) Int 0)
(define-fun x2923 ((x1475 Int)) Int 0)
(define-fun x840 ((x1475 Int)) Int 0)
(define-fun x2405 ((x1475 Int)) Int 0)
(define-fun x3858 ((x1475 Int)) Int 0)
(define-fun x4689 ((x1475 Int)) Int 0)
(define-fun x2550 ((x1475 Int)) Int 0)
(define-fun x4707 ((x1475 Int)) Int 0)
(define-fun x607 ((x1475 Int)) Int 0)
(define-fun x171 ((x1475 Int)) Int 0)
(define-fun x2568 ((x1475 Int)) Int 0)
(define-fun x4634 ((x1475 Int)) Int 0)
(define-fun x3510 ((x1475 Int)) Int 0)
(define-fun x708 ((x1475 Int)) Int 0)
(define-fun x867 ((x1475 Int)) Int 0)
(define-fun x1060 ((x1475 Int)) Int 0)
(define-fun x4405 ((x1475 Int)) Int 0)
(define-fun x2686 ((x1475 Int)) Int 0)
(define-fun x2661 ((x1475 Int)) Int 0)
(define-fun x790 ((x1475 Int)) Int 0)
(define-fun x1482 ((x1475 Int)) Int 0)
(define-fun x4200 ((x1475 Int)) Int 0)
(define-fun x767 ((x1475 Int)) Int 0)
(define-fun x1241 ((x1475 Int)) Int 0)
(define-fun x1414 ((x1475 Int)) Int 0)
(define-fun x3649 ((x1475 Int)) Int 0)
(define-fun x2739 ((x1475 Int)) Int 0)
(define-fun x3812 ((x1475 Int)) Int 0)
(define-fun x476 ((x1475 Int)) Int 0)
(define-fun x2471 ((x1475 Int)) Int 0)
(define-fun x1494 ((x1475 Int)) Int 0)
(define-fun x2542 ((x1475 Int)) Int 0)
(define-fun x3842 ((x1475 Int)) Int 0)
(define-fun x1363 ((x1475 Int)) Int 0)
(define-fun x488 ((x1475 Int)) Int 0)
(define-fun x1726 ((x1475 Int)) Int 0)
(define-fun x2674 ((x1475 Int)) Int 0)
(define-fun x3700 ((x1475 Int)) Int 0)
(define-fun x3370 ((x1475 Int)) Int 0)
(define-fun x2295 ((x1475 Int)) Int 0)
(define-fun x3816 ((x1475 Int)) Int 0)
(define-fun x4576 ((x1475 Int)) Int 0)
(define-fun x405 ((x1475 Int)) Int 0)
(define-fun x2984 ((x1475 Int)) Int 0)
(define-fun x1902 ((x1475 Int)) Int 0)
(define-fun x3595 ((x1475 Int)) Int 0)
(define-fun x358 ((x1475 Int)) Int 0)
(define-fun x3771 ((x1475 Int)) Int 0)
(define-fun x4558 ((x1475 Int)) Int 0)
(define-fun x1772 ((x1475 Int)) Int 0)
(define-fun x4278 ((x1475 Int)) Int 0)
(define-fun x861 ((x1475 Int)) Int 0)
(define-fun x856 ((x1475 Int)) Int 0)
(define-fun x946 ((x1475 Int)) Int 0)
(define-fun x1515 ((x1475 Int)) Int 0)
(define-fun x4613 ((x1475 Int)) Int 0)
(define-fun x2450 ((x1475 Int)) Int 0)
(define-fun x3901 ((x1475 Int)) Int 0)
(define-fun x2872 ((x1475 Int)) Int 0)
(define-fun x2785 ((x1475 Int)) Int 0)
(define-fun x4420 ((x1475 Int)) Int 0)
(define-fun x4465 ((x1475 Int)) Int 0)
(define-fun x1848 ((x1475 Int)) Int 0)
(define-fun x1117 ((x1475 Int)) Int 0)
(define-fun x2364 ((x1475 Int)) Int 0)
(define-fun x3635 ((x1475 Int)) Int 0)
(define-fun x3102 ((x1475 Int)) Int 0)
(define-fun x2874 ((x1475 Int)) Int 0)
(define-fun x3886 ((x1475 Int)) Int 0)
(define-fun x3688 ((x1475 Int)) Int 0)
(define-fun x3264 ((x1475 Int)) Int 0)
(define-fun x3268 ((x1475 Int)) Int 0)
(define-fun x3083 ((x1475 Int)) Int 0)
(define-fun x4810 ((x1475 Int)) Int 0)
(define-fun x2177 ((x1475 Int)) Int 0)
(define-fun x2592 ((x1475 Int)) Int 0)
(define-fun x1390 ((x1475 Int)) Int 0)
(define-fun x4757 ((x1475 Int)) Int 0)
(define-fun x2457 ((x1475 Int)) Int 0)
(define-fun x259 ((x1475 Int)) Int 0)
(define-fun x3486 ((x1475 Int)) Int 0)
(define-fun x2484 ((x1475 Int)) Int 0)
(define-fun x4238 ((x1475 Int)) Int 0)
(define-fun x4655 ((x1475 Int)) Int 0)
(define-fun x188 ((x1475 Int)) Int 0)
(define-fun x2900 ((x1475 Int)) Int 0)
(define-fun x2957 ((x1475 Int)) Int 0)
(define-fun x3972 ((x1475 Int)) Int 0)
(define-fun x4028 ((x1475 Int)) Int 0)
(define-fun x4620 ((x1475 Int)) Int 0)
(define-fun x4337 ((x1475 Int)) Int 0)
(define-fun x4502 ((x1475 Int)) Int 0)
(define-fun x11 ((x1475 Int)) Int (x4254 x1475))
(define-fun x4816 ((x1475 Int)) Int 0)
(define-fun x4188 ((x1475 Int)) Int (ite (= 4 x1475) 32 (x4816 x1475)))
(define-fun x4768 ((x1475 Int)) Int (ite (= 36 x1475) x1557 (x4188 x1475)))
(define-fun x2044 ((x1475 Int)) Int (ite (= 68 x1475) x2809 (x4768 x1475)))
(define-fun x3702 ((x1475 Int)) Int (ite (= 100 x1475) x994 (x2044 x1475)))
(define-fun x2435 ((x1475 Int)) Int (ite (= 132 x1475) x1932 (x3702 x1475)))
(define-fun x2394 ((x1475 Int)) Int (ite (= x1475 164) x4503 (x2435 x1475)))
(define-fun x4464 ((x1475 Int)) Int (ite (= 196 x1475) 256 (x2394 x1475)))
(define-fun x4568 ((x1475 Int)) Int (ite (= x1475 292) 0 (x4464 x1475)))
(define-fun x2120 ((x1475 Int)) Int (ite (and (< x1475 324) (<= 324 x1475)) (x2694 (- x1475 324)) (x4568 x1475)))
(define-fun x907 ((x1475 Int)) Int (ite (= x1475 228) 288 (x2120 x1475)))
(define-fun x4600 ((x1475 Int)) Int (ite (= x1475 324) 0 (x907 x1475)))
(define-fun x1446 ((x1475 Int)) Int (ite (and (< x1475 356) (>= x1475 356)) (x1783 (- x1475 356)) (x4600 x1475)))
(define-fun x4696 ((x1475 Int)) Int (ite (= x1475 260) 320 (x1446 x1475)))
(define-fun x4834 ((x1475 Int)) Int (ite (= x1475 356) x164 (x4696 x1475)))
(define-fun x1690 ((x1475 Int)) Int (ite (= x1475 388) 192 (x4834 x1475)))
(define-fun x306 ((x1475 Int)) Int (ite (= x1475 548) x2077 (x1690 x1475)))
(define-fun x2187 ((x1475 Int)) Int (ite (and (> (+ x2077 580) x1475) (>= x1475 580)) (x1757 (- x1475 580)) (x306 x1475)))
(define-fun x4528 ((x1475 Int)) Int (ite (= 420 x1475) x523 (x2187 x1475)))
(define-fun x402 ((x1475 Int)) Int (ite (= x1475 452) x4409 (x4528 x1475)))
(define-fun x2908 ((x1475 Int)) Int (ite (= x1475 x901) x1196 (x402 x1475)))
(define-fun x1807 ((x1475 Int)) Int (ite (and (> (+ x1196 x65) x1475) (<= x65 x1475)) (x1027 (- x1475 x65)) (x2908 x1475)))
(define-fun x4801 ((x1475 Int)) Int (ite (= 484 x1475) x1794 (x1807 x1475)))
(define-fun x4036 ((x1475 Int)) Int (ite (= x1475 516) x1439 (x4801 x1475)))
(define-fun x4752 ((x1475 Int)) Int (ite (= x1475 x529) x70 (x4036 x1475)))
(define-fun x2512 ((x1475 Int)) Int (ite (and (>= x1475 x329) (> (+ x329 x70) x1475)) (x3010 (- x1475 x329)) (x4752 x1475)))
(define-fun x1151 ((x1475 Int)) Int (ite (= x1475 384) x4859 (x3264 x1475)))
(define-fun x2463 ((x1475 Int)) Int 0)
(define-fun x600 ((x1475 Int)) Int (ite (= 4 x1475) 128 (x2463 x1475)))
(define-fun x1057 ((x1475 Int)) Int (ite (= 132 x1475) 0 (x600 x1475)))
(define-fun x2775 ((x1475 Int)) Int (ite (and (> 164 x1475) (<= 164 x1475)) (x138 (- x1475 164)) (x1057 x1475)))
(define-fun x726 ((x1475 Int)) Int (ite (= x1475 36) 160 (x2775 x1475)))
(define-fun x2026 ((x1475 Int)) Int (ite (= 164 x1475) 0 (x726 x1475)))
(define-fun x2514 ((x1475 Int)) Int (ite (= x1475 196) x764 (x2026 x1475)))
(define-fun x3985 ((x1475 Int)) Int (ite (= 228 x1475) x2178 (x2514 x1475)))
(define-fun x3412 ((x1475 Int)) Int (ite (= x1475 260) 160 (x3985 x1475)))
(define-fun x3596 ((x1475 Int)) Int (ite (= 324 x1475) x4440 (x3412 x1475)))
(define-fun x1600 ((x1475 Int)) Int (ite (and (< x1475 (+ 356 x3880)) (>= x1475 356)) (x4404 (- x1475 356)) (x3596 x1475)))
(define-fun x373 ((x1475 Int)) Int (ite (= 292 x1475) x1320 (x1600 x1475)))
(define-fun x888 ((x1475 Int)) Int (ite (= x2038 x1475) x3682 (x373 x1475)))
(define-fun x1580 ((x1475 Int)) Int (ite (and (<= x3044 x1475) (> (+ x3682 x3044) x1475)) (x1217 (- x1475 x3044)) (x888 x1475)))
(define-fun x1577 ((x1475 Int)) Int (ite (= x1475 68) x1007 (x1580 x1475)))
(define-fun x609 ((x1475 Int)) Int (ite (= x4239 x1475) 0 (x1577 x1475)))
(define-fun x2724 ((x1475 Int)) Int (ite (= x3388 x1475) x3724 (x609 x1475)))
(define-fun x1814 ((x1475 Int)) Int (ite (= x1475 x325) x611 (x2724 x1475)))
(define-fun x1424 ((x1475 Int)) Int (ite (= x4624 x1475) x1996 (x1814 x1475)))
(define-fun x566 ((x1475 Int)) Int (ite (= x1475 x1426) x4730 (x1424 x1475)))
(define-fun x386 ((x1475 Int)) Int (ite (and (<= x4476 x1475) (< x1475 (+ x4476 x1121))) (x2768 (- x1475 x4476)) (x566 x1475)))
(define-fun x3574 ((x1475 Int)) Int (ite (= x1475 x3087) x4781 (x386 x1475)))
(define-fun x3960 ((x1475 Int)) Int (ite (= x1475 x1906) x1345 (x3574 x1475)))
(define-fun x3401 ((x1475 Int)) Int (ite (and (<= x4497 x1475) (> (+ x4497 x1345) x1475)) (x1293 (- x1475 x4497)) (x3960 x1475)))
(define-fun x2879 ((x1475 Int)) Int (ite (= x1475 100) x4445 (x3401 x1475)))
(define-fun x2572 ((x1475 Int)) Int (ite (= x2108 x1475) x4718 (x2879 x1475)))
(define-fun x1786 ((x1475 Int)) Int (ite (= x3192 x1475) x3826 (x2572 x1475)))
(define-fun x4074 ((x1475 Int)) Int (ite (= x219 x1475) x3999 (x1786 x1475)))
(define-fun x3641 ((x1475 Int)) Int (ite (= x1475 x1408) x4204 (x4074 x1475)))
(define-fun x1571 ((x1475 Int)) Int (ite (= x1475 x4468) x1270 (x3641 x1475)))
(define-fun x2272 ((x1475 Int)) Int (ite (= x334 x1475) x3393 (x1571 x1475)))
(define-fun x1159 ((x1475 Int)) Int (ite (= x1744 x1475) 0 (x2272 x1475)))
(define-fun x2037 ((x1475 Int)) Int (ite (and (<= x1281 x1475) (> x1281 x1475)) (x2694 (- x1475 x1281)) (x1159 x1475)))
(define-fun x3450 ((x1475 Int)) Int (ite (= x1475 x440) x2326 (x2037 x1475)))
(define-fun x3788 ((x1475 Int)) Int (ite (= x1475 x4687) 0 (x3450 x1475)))
(define-fun x498 ((x1475 Int)) Int (ite (and (<= x66 x1475) (< x1475 x66)) (x1783 (- x1475 x66)) (x3788 x1475)))
(define-fun x4830 ((x1475 Int)) Int (ite (= x1475 x1389) x3737 (x498 x1475)))
(define-fun x2339 ((x1475 Int)) Int (ite (= x1475 x406) x2761 (x4830 x1475)))
(define-fun x4293 ((x1475 Int)) Int (ite (= x1475 x4267) x542 (x2339 x1475)))
(define-fun x3429 ((x1475 Int)) Int (ite (= x4717 x1475) x2077 (x4293 x1475)))
(define-fun x2430 ((x1475 Int)) Int (ite (and (>= x1475 x4607) (> (+ x2077 x4607) x1475)) (x1757 (- x1475 x4607)) (x3429 x1475)))
(define-fun x444 ((x1475 Int)) Int (ite (= x1475 x2020) x1617 (x2430 x1475)))
(define-fun x1406 ((x1475 Int)) Int (ite (= x1793 x1475) x2135 (x444 x1475)))
(define-fun x810 ((x1475 Int)) Int (ite (= x650 x1475) x1196 (x1406 x1475)))
(define-fun x2104 ((x1475 Int)) Int (ite (and (> (+ x1196 x2517) x1475) (<= x2517 x1475)) (x1027 (- x1475 x2517)) (x810 x1475)))
(define-fun x2803 ((x1475 Int)) Int (ite (= x3443 x1475) x2931 (x2104 x1475)))
(define-fun x2913 ((x1475 Int)) Int (ite (= x1475 x690) x3436 (x2803 x1475)))
(define-fun x2794 ((x1475 Int)) Int (ite (= x1475 x2534) x70 (x2913 x1475)))
(define-fun x1628 ((x1475 Int)) Int (ite (and (> (+ x4545 x70) x1475) (>= x1475 x4545)) (x3010 (- x1475 x4545)) (x2794 x1475)))
(define-fun x2224 ((x1475 Int)) Int (ite (= x3190 x1475) x3583 (x528 x1475)))
(define-fun x291 ((x1475 Int)) Int (ite (= 128 x1475) x4340 (x1118 x1475)))
(define-fun x2976 ((x1475 Int)) Int (ite (= x1475 160) x1455 (x4613 x1475)))
(define-fun x561 ((x1475 Int)) Int (ite (= 192 x1475) x608 (x4028 x1475)))
(define-fun x3077 ((x1475 Int)) Int (ite (= 224 x1475) x2240 (x1117 x1475)))
(define-fun x4307 ((x1475 Int)) Int (ite (= x1475 256) x4309 (x3353 x1475)))
(define-fun x338 ((x1475 Int)) Int (ite (= 384 x1475) x1273 (x2489 x1475)))
(define-fun x4625 ((x1475 Int)) Int (ite (= x3198 x1475) x1208 (x2874 x1475)))
(define-fun x1421 ((x1475 Int)) Int (ite (= x293 x1475) x4772 (x1821 x1475)))
(define-fun x3929 ((x1475 Int)) Int (ite (= x1475 x1469) x364 (x840 x1475)))
(define-fun x1905 ((x1475 Int)) Int (ite (= x1475 x4136) x2807 (x4757 x1475)))
(define-fun x1951 ((x1475 Int)) Int (ite (= x354 x1475) x480 (x2680 x1475)))
(define-fun x1843 ((x1475 Int)) Int (ite x2341 (x4278 x1475) (x1905 x1475)))
(define-fun x4061 ((x1475 Int)) Int (ite x2341 (x1772 x1475) (x3929 x1475)))
(define-fun x420 ((x1475 Int)) Int (ite (= x1173 x1475) x4394 (x3460 x1475)))
(define-fun x343 ((x1475 Int)) Int (ite x2341 (x1515 x1475) (x420 x1475)))
(define-fun x4152 ((x1475 Int)) Int (ite (= x2456 x1475) x2556 (x4238 x1475)))
(define-fun x2247 ((x1475 Int)) Int (ite x2341 (x946 x1475) (x4152 x1475)))
(define-fun x4857 ((x1475 Int)) Int (ite (= x3680 x1475) x1469 (x2122 x1475)))
(define-fun x111 ((x1475 Int)) Int (ite x2341 (x2429 x1475) (x4857 x1475)))
(define-fun x4581 ((x1475 Int)) Int (ite (= x1475 x207) x4759 (x4707 x1475)))
(define-fun x117 ((x1475 Int)) Int (ite x2341 (x856 x1475) (x4581 x1475)))
(define-fun x3222 ((x1475 Int)) Int (ite x2341 (x861 x1475) (x1951 x1475)))
(define-fun x3413 ((x1475 Int)) Int (ite (= x1475 x4191) 1 (x1228 x1475)))
(define-fun x3016 ((x1475 Int)) Int (ite (= x1302 x1475) x142 (x667 x1475)))
(define-fun x2858 ((x1475 Int)) Int (ite (= x1475 x1300) x1029 (x3016 x1475)))
(define-fun x195 ((x1475 Int)) Int (ite (= x1875 x1475) x2869 (x2858 x1475)))
(define-fun x3860 ((x1475 Int)) Int (ite x132 (x1228 x1475) (ite x3011 (x1228 x1475) (x3413 x1475))))
(define-fun x1805 ((x1475 Int)) Int (ite x3011 (x3771 x1475) (x195 x1475)))
(define-fun x4732 ((x1475 Int)) Int (ite x132 (x3771 x1475) (x1805 x1475)))
(define-fun x2459 ((x1475 Int)) Int (ite (= x4495 x1475) x4772 (x188 x1475)))
(define-fun x2871 ((x1475 Int)) Int (ite (= x1475 x1038) x2860 (x3773 x1475)))
(define-fun x3483 ((x1475 Int)) Int (ite (= x2985 x1475) x1055 (x2450 x1475)))
(define-fun x2943 ((x1475 Int)) Int (ite (= x3230 x1475) x2003 (x4620 x1475)))
(define-fun x766 ((x1475 Int)) Int (ite (= x3572 x1475) x1038 (x2779 x1475)))
(define-fun x3165 ((x1475 Int)) Int (ite x1298 (x358 x1475) (x766 x1475)))
(define-fun x3865 ((x1475 Int)) Int (ite x1298 (x405 x1475) (x2943 x1475)))
(define-fun x684 ((x1475 Int)) Int (ite (= x1475 x3424) x3681 (x1017 x1475)))
(define-fun x1907 ((x1475 Int)) Int (ite x1298 (x3595 x1475) (x684 x1475)))
(define-fun x2509 ((x1475 Int)) Int (ite x1298 (x3816 x1475) (x2871 x1475)))
(define-fun x2032 ((x1475 Int)) Int (ite (= x3097 x1475) x2313 (x2785 x1475)))
(define-fun x3250 ((x1475 Int)) Int (ite x1298 (x1902 x1475) (x2032 x1475)))
(define-fun x3365 ((x1475 Int)) Int (ite (= x3086 x1475) x3799 (x4288 x1475)))
(define-fun x1740 ((x1475 Int)) Int (ite x1298 (x2984 x1475) (x3365 x1475)))
(define-fun x3259 ((x1475 Int)) Int (ite x1298 (x4576 x1475) (x3483 x1475)))
(define-fun x2576 ((x1475 Int)) Int (ite (= x431 x1475) 1 (x3860 x1475)))
(define-fun x4201 ((x1475 Int)) Int (ite (= x3800 x1475) x4004 (x4732 x1475)))
(define-fun x1803 ((x1475 Int)) Int (ite (= x1475 x1927) x1029 (x4201 x1475)))
(define-fun x285 ((x1475 Int)) Int (ite (= x1475 x3495) x2068 (x1803 x1475)))
(define-fun x2498 ((x1475 Int)) Int (ite (= x1475 288) 384 (x2923 x1475)))
(define-fun x4432 ((x1475 Int)) Int (ite (= 416 x1475) x3198 (x2434 x1475)))
(define-fun x4389 ((x1475 Int)) Int (ite x2949 (x1414 x1475) (x4432 x1475)))
(define-fun x392 ((x1475 Int)) Int (ite x2949 (x1482 x1475) (x4625 x1475)))
(define-fun x4159 ((x1475 Int)) Int (ite (= x802 x1475) x1606 (x1087 x1475)))
(define-fun x4448 ((x1475 Int)) Int (ite x2949 (x4200 x1475) (x4159 x1475)))
(define-fun x3621 ((x1475 Int)) Int (ite (= x359 x1475) x1186 (x2558 x1475)))
(define-fun x1037 ((x1475 Int)) Int (ite x2949 (x767 x1475) (x3621 x1475)))
(define-fun x2359 ((x1475 Int)) Int (ite (= x2711 x1475) x3546 (x3268 x1475)))
(define-fun x1 ((x1475 Int)) Int (ite x2949 (x1241 x1475) (x2359 x1475)))
(define-fun x452 ((x1475 Int) (x4649 Int)) Int (ite (and (= x1475 x215) (= x47 x4649)) x1789 (x3869 x1475 x4649)))
(define-fun x1679 ((x1475 Int) (x4649 Int)) Int (ite (and (= x1041 x4649) (= x1475 x27)) x141 (x452 x1475 x4649)))
(define-fun x4085 ((x1475 Int) (x4649 Int)) Int (ite (and (= x1480 x1475) (= x4123 x4649)) x4014 (x1176 x1475 x4649)))
(define-fun x3110 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x1819 x4837) (= x1475 x868) (= x929 x4649)) x4187 (x1465 x1475 x4649 x4837)))
(define-fun x3221 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x4649 x4672) (= x4837 x3189) (= x2862 x1475)) x1076 (x3110 x1475 x4649 x4837)))
(define-fun x1966 ((x1475 Int) (x4649 Int)) Int (ite x3835 (x1679 x1475 x4649) (x3869 x1475 x4649)))
(define-fun x4400 ((x1475 Int) (x4649 Int)) Int (ite x1693 (x3869 x1475 x4649) (x1966 x1475 x4649)))
(define-fun x3831 ((x1475 Int) (x4649 Int)) Int (ite (and (= x2403 x1475) (= x460 x4649)) x1110 (x4400 x1475 x4649)))
(define-fun x2754 ((x1475 Int) (x4649 Int)) Int (ite (and (= x4648 x4649) (= x3239 x1475)) x3456 (x3831 x1475 x4649)))
(define-fun x3984 ((x1475 Int) (x4649 Int)) Int (ite x1317 (x2754 x1475 x4649) (x4400 x1475 x4649)))
(define-fun x594 ((x1475 Int) (x4649 Int)) Int (ite x3738 (x4400 x1475 x4649) (x3984 x1475 x4649)))
(define-fun x2292 ((x1475 Int) (x4649 Int)) Int (ite x1548 (x4400 x1475 x4649) (x594 x1475 x4649)))
(define-fun x3923 ((x1475 Int) (x4649 Int)) Int (ite x2734 (x1176 x1475 x4649) (x4085 x1475 x4649)))
(define-fun x2388 ((x1475 Int) (x4649 Int)) Int (ite x3835 (x1176 x1475 x4649) (x3923 x1475 x4649)))
(define-fun x3938 ((x1475 Int) (x4649 Int)) Int (ite x1693 (x1176 x1475 x4649) (x2388 x1475 x4649)))
(define-fun x4090 ((x1475 Int) (x4649 Int)) Int (ite (and (= x1978 x1475) (= x2789 x4649)) x2369 (x3938 x1475 x4649)))
(define-fun x1997 ((x1475 Int) (x4649 Int)) Int (ite x3733 (x3938 x1475 x4649) (x4090 x1475 x4649)))
(define-fun x605 ((x1475 Int) (x4649 Int)) Int (ite x1317 (x3938 x1475 x4649) (x1997 x1475 x4649)))
(define-fun x4870 ((x1475 Int) (x4649 Int)) Int (ite x3738 (x3938 x1475 x4649) (x605 x1475 x4649)))
(define-fun x1612 ((x1475 Int) (x4649 Int)) Int (ite x1548 (x3938 x1475 x4649) (x4870 x1475 x4649)))
(define-fun x2762 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x2734 (x3221 x1475 x4649 x4837) (x1465 x1475 x4649 x4837)))
(define-fun x3723 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x3835 (x1465 x1475 x4649 x4837) (x2762 x1475 x4649 x4837)))
(define-fun x746 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x1693 (x1465 x1475 x4649 x4837) (x3723 x1475 x4649 x4837)))
(define-fun x4000 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x1475 x248) (= x4649 x1462) (= x4837 x346)) x3718 (x746 x1475 x4649 x4837)))
(define-fun x1068 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x1475 x2736) (= x252 x4649) (= x4837 x2186)) x1563 (x4000 x1475 x4649 x4837)))
(define-fun x3452 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x3733 (x1068 x1475 x4649 x4837) (x746 x1475 x4649 x4837)))
(define-fun x2909 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x1317 (x746 x1475 x4649 x4837) (x3452 x1475 x4649 x4837)))
(define-fun x1668 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x3738 (x746 x1475 x4649 x4837) (x2909 x1475 x4649 x4837)))
(define-fun x3706 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x1548 (x746 x1475 x4649 x4837) (x1668 x1475 x4649 x4837)))
(define-fun x700 ((x1475 Int)) Int (ite (= x3567 x1475) x4557 (x1848 x1475)))
(define-fun x237 ((x1475 Int)) Int (ite (= x1475 x3321) x2188 (x2568 x1475)))
(define-fun x3906 ((x1475 Int)) Int (ite (= x769 x1475) x889 (x237 x1475)))
(define-fun x324 ((x1475 Int)) Int (ite x4565 (x2295 x1475) (ite x1111 (x237 x1475) (x3906 x1475))))
(define-fun x2488 ((x1475 Int)) Int (ite (= x1475 x3314) x4220 (x324 x1475)))
(define-fun x640 ((x1475 Int)) Int (ite x740 (x324 x1475) (x2488 x1475)))
(define-fun x616 ((x1475 Int)) Int (ite (= x2188 x1475) 0 (x3688 x1475)))
(define-fun x3555 ((x1475 Int)) Int (ite (= x1475 x889) 0 (x616 x1475)))
(define-fun x261 ((x1475 Int)) Int (ite x4565 (x1726 x1475) (ite x1111 (x616 x1475) (x3555 x1475))))
(define-fun x2226 ((x1475 Int)) Int (ite (= x1475 x4220) x4358 (x261 x1475)))
(define-fun x3142 ((x1475 Int)) Int (ite x740 (x261 x1475) (x2226 x1475)))
(define-fun x2531 ((x1475 Int)) Int (ite (= x2934 x1475) 0 (x4527 x1475)))
(define-fun x196 ((x1475 Int)) Int (ite (= x1019 x1475) 0 (x2531 x1475)))
(define-fun x166 ((x1475 Int)) Int (ite x4565 (x2674 x1475) (ite x1111 (x2531 x1475) (x196 x1475))))
(define-fun x4538 ((x1475 Int)) Int (ite (= x1475 x3216) x1517 (x166 x1475)))
(define-fun x4785 ((x1475 Int)) Int (ite x740 (x166 x1475) (x4538 x1475)))
(define-fun x3210 ((x1475 Int)) Int (ite (= x520 x1475) 0 (x374 x1475)))
(define-fun x3454 ((x1475 Int)) Int (ite (= x1423 x1475) 0 (x3210 x1475)))
(define-fun x2497 ((x1475 Int)) Int (ite x4565 (x3700 x1475) (ite x1111 (x3210 x1475) (x3454 x1475))))
(define-fun x2740 ((x1475 Int)) Int (ite (= x4284 x1475) x4189 (x2497 x1475)))
(define-fun x1918 ((x1475 Int)) Int (ite x740 (x2497 x1475) (x2740 x1475)))
(define-fun x1912 ((x1475 Int)) Int (ite (= x898 x1475) 0 (x1570 x1475)))
(define-fun x3540 ((x1475 Int)) Int (ite (= x2417 x1475) 0 (x1912 x1475)))
(define-fun x3052 ((x1475 Int)) Int (ite x4565 (x3370 x1475) (ite x1111 (x1912 x1475) (x3540 x1475))))
(define-fun x1235 ((x1475 Int)) Int (ite (= x3095 x1475) x2605 (x3052 x1475)))
(define-fun x3002 ((x1475 Int)) Int (ite x740 (x3052 x1475) (x1235 x1475)))
(define-fun x3995 ((x1475 Int) (x4649 Int)) Int (ite (and (= x2316 x1475) (= x4649 x2598)) x4104 (x2292 x1475 x4649)))
(define-fun x3453 ((x1475 Int) (x4649 Int)) Int (ite (and (= x1475 x1652) (= x2039 x4649)) x2625 (x3995 x1475 x4649)))
(define-fun x116 ((x1475 Int) (x4649 Int)) Int (ite (and (= x4249 x1475) (= x4649 x2876)) x3515 (x1612 x1475 x4649)))
(define-fun x243 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x4837 x550) (= x1475 x3974) (= x2849 x4649)) x3485 (x3706 x1475 x4649 x4837)))
(define-fun x2547 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x1475 x2257) (= x4837 x2595) (= x4649 x2212)) x2641 (x243 x1475 x4649 x4837)))
(define-fun x3840 ((x1475 Int) (x4649 Int)) Int (ite (and (= x1475 x3038) (= x4649 x486)) x3769 (x3938 x1475 x4649)))
(define-fun x828 ((x1475 Int) (x4649 Int)) Int (ite x4236 (x3938 x1475 x4649) (x3840 x1475 x4649)))
(define-fun x1169 ((x1475 Int) (x4649 Int)) Int (ite x4711 (x3938 x1475 x4649) (x828 x1475 x4649)))
(define-fun x4317 ((x1475 Int) (x4649 Int)) Int (ite x2486 (x3938 x1475 x4649) (x1169 x1475 x4649)))
(define-fun x1158 ((x1475 Int) (x4649 Int)) Int (ite x4549 (x1612 x1475 x4649) (x116 x1475 x4649)))
(define-fun x787 ((x1475 Int) (x4649 Int)) Int (ite x199 (x1612 x1475 x4649) (x1158 x1475 x4649)))
(define-fun x1371 ((x1475 Int) (x4649 Int)) Int (ite x3531 (x1612 x1475 x4649) (x787 x1475 x4649)))
(define-fun x177 ((x1475 Int) (x4649 Int)) Int (ite x1224 (x4317 x1475 x4649) (x1371 x1475 x4649)))
(define-fun x3147 ((x1475 Int) (x4649 Int)) Int (ite (and (= x2397 x1475) (= x3884 x4649)) x2080 (x4400 x1475 x4649)))
(define-fun x158 ((x1475 Int) (x4649 Int)) Int (ite (and (= x4649 x3761) (= x1475 x4298)) x3246 (x3147 x1475 x4649)))
(define-fun x3797 ((x1475 Int) (x4649 Int)) Int (ite x4711 (x158 x1475 x4649) (x4400 x1475 x4649)))
(define-fun x869 ((x1475 Int) (x4649 Int)) Int (ite x2486 (x4400 x1475 x4649) (x3797 x1475 x4649)))
(define-fun x2615 ((x1475 Int) (x4649 Int)) Int (ite x199 (x3453 x1475 x4649) (x2292 x1475 x4649)))
(define-fun x1193 ((x1475 Int) (x4649 Int)) Int (ite x3531 (x2292 x1475 x4649) (x2615 x1475 x4649)))
(define-fun x1352 ((x1475 Int) (x4649 Int)) Int (ite x1224 (x869 x1475 x4649) (x1193 x1475 x4649)))
(define-fun x4124 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x4649 x3900) (= x4837 x3650) (= x2801 x1475)) x4779 (x746 x1475 x4649 x4837)))
(define-fun x4368 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x1326 x4649) (= x4837 x4386) (= x4869 x1475)) x3751 (x4124 x1475 x4649 x4837)))
(define-fun x1203 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x4236 (x4368 x1475 x4649 x4837) (x746 x1475 x4649 x4837)))
(define-fun x1657 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x4711 (x746 x1475 x4649 x4837) (x1203 x1475 x4649 x4837)))
(define-fun x3309 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x2486 (x746 x1475 x4649 x4837) (x1657 x1475 x4649 x4837)))
(define-fun x1296 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x4549 (x2547 x1475 x4649 x4837) (x3706 x1475 x4649 x4837)))
(define-fun x748 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x199 (x3706 x1475 x4649 x4837) (x1296 x1475 x4649 x4837)))
(define-fun x3867 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x3531 (x3706 x1475 x4649 x4837) (x748 x1475 x4649 x4837)))
(define-fun x2119 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite x1224 (x3309 x1475 x4649 x4837) (x3867 x1475 x4649 x4837)))
(define-fun x849 ((x1475 Int)) Int (ite (= 288 x1475) x3932 (x4674 x1475)))
(define-fun x3317 ((x1475 Int)) Int (ite (= x1475 320) x432 (x587 x1475)))
(define-fun x1453 ((x1475 Int)) Int (ite x4141 (x790 x1475) (x3317 x1475)))
(define-fun x638 ((x1475 Int)) Int (ite (= x1651 x1475) x4843 (x3635 x1475)))
(define-fun x1400 ((x1475 Int)) Int (ite x4141 (x2661 x1475) (x638 x1475)))
(define-fun x1436 ((x1475 Int)) Int (ite (= x2766 x1475) x458 (x2177 x1475)))
(define-fun x510 ((x1475 Int)) Int 0)
(define-fun x1533 ((x1475 Int)) Int (ite (= x1475 4) 64 (x510 x1475)))
(define-fun x4080 ((x1475 Int)) Int (ite (= 68 x1475) x4228 (x1533 x1475)))
(define-fun x3253 ((x1475 Int)) Int (ite (= x1475 100) x850 (x4080 x1475)))
(define-fun x2635 ((x1475 Int)) Int (ite (= 132 x1475) x611 (x3253 x1475)))
(define-fun x905 ((x1475 Int)) Int (ite (= x1475 164) 160 (x2635 x1475)))
(define-fun x2792 ((x1475 Int)) Int (ite (= x1475 228) x4730 (x905 x1475)))
(define-fun x2530 ((x1475 Int)) Int (ite (and (> (+ x4301 260) x1475) (<= 260 x1475)) (x2768 (- x1475 260)) (x2792 x1475)))
(define-fun x1289 ((x1475 Int)) Int (ite (= x1475 196) x2612 (x2530 x1475)))
(define-fun x1361 ((x1475 Int)) Int (ite (= x1475 x819) x1345 (x1289 x1475)))
(define-fun x4612 ((x1475 Int)) Int (ite (and (>= x1475 x239) (> (+ x1345 x239) x1475)) (x1293 (- x1475 x239)) (x1361 x1475)))
(define-fun x4597 ((x1475 Int)) Int (ite (= x1475 36) x4594 (x4612 x1475)))
(define-fun x4657 ((x1475 Int)) Int (ite (= x1475 x1144) x3489 (x4597 x1475)))
(define-fun x3501 ((x1475 Int)) Int (ite (= x4374 x1475) x4683 (x4657 x1475)))
(define-fun x108 ((x1475 Int)) Int (ite (= x1475 x4856) x4087 (x3501 x1475)))
(define-fun x201 ((x1475 Int)) Int 0)
(define-fun x915 ((x1475 Int)) Int (ite (= x1475 4) x3843 (x201 x1475)))
(define-fun x4025 ((x1475 Int)) Int (ite (= 36 x1475) 64 (x915 x1475)))
(define-fun x2439 ((x1475 Int)) Int (ite (= 68 x1475) x662 (x4025 x1475)))
(define-fun x1913 ((x1475 Int)) Int (ite (= x1768 x1475) x481 (x2457 x1475)))
(define-fun x3701 ((x1475 Int)) Int (ite (= x1475 x2150) x2 (x1913 x1475)))
(define-fun x1602 ((x1475 Int)) Int (ite (= x2317 x1475) x2132 (x3701 x1475)))
(define-fun x3545 ((x1475 Int)) Int (ite (= x1475 x3422) x3980 (x1602 x1475)))
(define-fun x2593 ((x1475 Int)) Int (ite (= x1475 x894) x1157 (x3545 x1475)))
(define-fun x2977 ((x1475 Int)) Int (ite (= x1475 x4791) x998 (x2593 x1475)))
(define-fun x4724 ((x1475 Int)) Int (ite (= x1475 x2324) x2604 (x2977 x1475)))
(define-fun x1335 ((x1475 Int)) Int (ite (= x3226 x1475) x3439 (x4724 x1475)))
(define-fun x4264 ((x1475 Int)) Int (ite (= x1475 x1495) x2825 (x1335 x1475)))
(define-fun x4348 ((x1475 Int)) Int (ite (= x4598 x1475) x1468 (x4264 x1475)))
(define-fun x2922 ((x1475 Int)) Int (ite (= x1475 x3408) x2884 (x4348 x1475)))
(define-fun x558 ((x1475 Int)) Int (ite (= x1044 x1475) x4033 (x2922 x1475)))
(define-fun x2799 ((x1475 Int)) Int (ite (= x1475 x2851) x2128 (x558 x1475)))
(define-fun x3134 ((x1475 Int)) Int (ite x896 (x4264 x1475) (x2799 x1475)))
(define-fun x3326 ((x1475 Int)) Int (ite (= x3969 x1475) x1878 (x3134 x1475)))
(define-fun x3211 ((x1475 Int)) Int (ite (= x3863 x1475) x2528 (x3326 x1475)))
(define-fun x3398 ((x1475 Int)) Int (ite (= x1845 x1475) x1610 (x3211 x1475)))
(define-fun x4783 ((x1475 Int)) Int (ite (= x1475 x3563) x1403 (x3398 x1475)))
(define-fun x1917 ((x1475 Int)) Int (ite (= x1475 x2715) x3357 (x4783 x1475)))
(define-fun x741 ((x1475 Int)) Int (ite (= x4252 x1475) x2662 (x1917 x1475)))
(define-fun x2496 ((x1475 Int)) Int (ite x2046 (x3211 x1475) (x741 x1475)))
(define-fun x1124 ((x1475 Int)) Int (ite (= x2929 x1475) x3183 (x2496 x1475)))
(define-fun x3139 ((x1475 Int)) Int (ite (= x1475 x2763) x2816 (x1124 x1475)))
(define-fun x961 ((x1475 Int)) Int (ite (= x2221 x1475) x3671 (x3139 x1475)))
(define-fun x3830 ((x1475 Int)) Int (ite (= x316 x1475) x1137 (x961 x1475)))
(define-fun x3098 ((x1475 Int)) Int (ite (and (> (+ x4026 x1197) x1475) (<= x4026 x1475)) (x2512 (- (+ x1880 x1475) x4026)) (x1766 x1475)))
(define-fun x1238 ((x1475 Int)) Int (ite (= x3905 x1475) 0 (x3098 x1475)))
(define-fun x657 ((x1475 Int)) Int (ite (and (< x1475 (+ x235 x1137)) (<= x235 x1475)) (x1238 (- (+ x1475 x4360) x235)) (x3830 x1475)))
(define-fun x669 ((x1475 Int)) Int (ite (= x317 x1475) x3666 (x657 x1475)))
(define-fun x2408 ((x1475 Int)) Int (ite (= x1475 x1139) x3257 (x669 x1475)))
(define-fun x654 ((x1475 Int)) Int (ite (= x3174 x1475) x189 (x2408 x1475)))
(define-fun x4164 ((x1475 Int)) Int (ite (and (< x1475 (+ x4193 x1672)) (<= x1672 x1475)) (x2512 (- (+ x1475 x1185) x1672)) (x3083 x1475)))
(define-fun x4639 ((x1475 Int)) Int (ite (= x1150 x1475) 0 (x4164 x1475)))
(define-fun x4771 ((x1475 Int)) Int (ite (and (>= x1475 x4195) (< x1475 (+ x189 x4195))) (x4639 (- (+ x1475 x3598) x4195)) (x654 x1475)))
(define-fun x2293 ((x1475 Int)) Int (ite (= x1475 x98) x404 (x4771 x1475)))
(define-fun x3020 ((x1475 Int)) Int (ite (= x1475 x4410) x182 (x2293 x1475)))
(define-fun x2263 ((x1475 Int)) Int (ite (= x1475 x385) x64 (x3020 x1475)))
(define-fun x3662 ((x1475 Int)) Int (ite (and (< x1475 (+ x1261 x2988)) (>= x1475 x1261)) (x2512 (- (+ x4346 x1475) x1261)) (x2405 x1475)))
(define-fun x4173 ((x1475 Int)) Int (ite (= x1475 x3657) 0 (x3662 x1475)))
(define-fun x3505 ((x1475 Int)) Int (ite (and (> (+ x1024 x64) x1475) (<= x1024 x1475)) (x4173 (- (+ x4332 x1475) x1024)) (x2263 x1475)))
(define-fun x327 ((x1475 Int)) Int (ite (= x1475 x41) 32 (x2957 x1475)))
(define-fun x1376 ((x1475 Int)) Int (ite (= x1475 x970) x3523 (x327 x1475)))
(define-fun x3847 ((x1475 Int)) Int (ite (and (<= x4234 x1475) (< x1475 (+ x4234 x3523))) (x3505 (- (+ x729 x1475) x4234)) (x1376 x1475)))
(define-fun x648 ((x1475 Int)) Int (ite (and (> x662 x1475) (>= x1475 0)) (x3847 (+ x109 x1475)) (x11 x1475)))
(define-fun x4071 ((x1475 Int)) Int (ite (and (< x1475 (+ x662 100)) (<= 100 x1475)) (x648 (- x1475 100)) (x2439 x1475)))
(define-fun x1252 ((x1475 Int)) Int (ite (and (<= 160 x1475) (< x1475 (+ 160 x618))) (x4071 (- x1475 60)) (x2872 x1475)))
(define-fun x4542 ((x1475 Int)) Int (ite (= x2223 x1475) 0 (x1252 x1475)))
(define-fun x1855 ((x1475 Int)) Int (ite (= x581 x1475) x3084 (x4502 x1475)))
(define-fun x546 ((x1475 Int)) Int (ite (= x1475 x184) x4536 (x1855 x1475)))
(define-fun x2877 ((x1475 Int)) Int (ite (= x3144 x1475) x4325 (x546 x1475)))
(define-fun x4499 ((x1475 Int)) Int (ite (= x1475 x1063) x4154 (x2877 x1475)))
(define-fun x827 ((x1475 Int)) Int (ite (and (>= x1475 x3527) (< x1475 (+ x4154 x3527))) (x4542 (- (+ 160 x1475) x3527)) (x4499 x1475)))
(define-fun x1373 ((x1475 Int)) Int (ite (and (> x4087 x1475) (>= x1475 0)) (x827 (+ x2125 x1475)) (x2704 x1475)))
(define-fun x4710 ((x1475 Int)) Int (ite (and (> (+ x2270 x4087) x1475) (>= x1475 x2270)) (x1373 (- x1475 x2270)) (x108 x1475)))
(define-fun x445 ((x1475 Int)) Int (ite (and (>= x1475 x1685) (< x1475 (+ x1685 x458))) (x4710 (- (+ x1475 x4762) x1685)) (x1122 x1475)))
(define-fun x1452 ((x1475 Int)) Int (ite (= x3108 x1475) 0 (x445 x1475)))
(define-fun x518 ((x1475 Int)) Int (ite (and (<= x211 x1475) (< x1475 (+ x3063 x211))) (x1452 (- (+ x4147 x1475) x211)) (x4689 x1475)))
(define-fun x4866 ((x1475 Int)) Int (ite (= x1475 x4512) x1402 (x3486 x1475)))
(define-fun x4006 ((x1475 Int)) Int (ite (= x4843 x1475) x4146 (x1832 x1475)))
(define-fun x203 ((x1475 Int)) Int (ite x4141 (x4405 x1475) (x4006 x1475)))
(define-fun x3059 ((x1475 Int)) Int (ite (and (> (+ x4146 x4714) x1475) (<= x4714 x1475)) (x4710 (- (+ x1475 x3482) x4714)) (x2127 x1475)))
(define-fun x3815 ((x1475 Int)) Int (ite (= x1475 x97) 0 (x3059 x1475)))
(define-fun x3921 ((x1475 Int)) Int (ite x4141 (x2686 x1475) (x3815 x1475)))
(define-fun x2765 ((x1475 Int)) Int (ite (and (< x1475 (+ x1008 x782)) (<= x782 x1475)) (x3921 (- (+ x3331 x1475) x782)) (x2945 x1475)))
(define-fun x582 ((x1475 Int)) Int (ite (= x3956 x1475) x4617 (x171 x1475)))
(define-fun x507 ((x1475 Int)) Int 0)
(define-fun x2921 ((x1475 Int)) Int (ite (= x1475 4) 64 (x507 x1475)))
(define-fun x4806 ((x1475 Int)) Int (ite (= x1475 68) x1035 (x2921 x1475)))
(define-fun x3994 ((x1475 Int)) Int (ite (= 100 x1475) x4134 (x4806 x1475)))
(define-fun x430 ((x1475 Int)) Int (ite (= 132 x1475) x1071 (x3994 x1475)))
(define-fun x1484 ((x1475 Int)) Int (ite (= 164 x1475) x4493 (x430 x1475)))
(define-fun x1243 ((x1475 Int)) Int (ite (= 196 x1475) x1133 (x1484 x1475)))
(define-fun x2117 ((x1475 Int)) Int (ite (= 228 x1475) 256 (x1243 x1475)))
(define-fun x176 ((x1475 Int)) Int (ite (= x1475 324) 0 (x2117 x1475)))
(define-fun x1959 ((x1475 Int)) Int (ite (and (< x1475 356) (>= x1475 356)) (x2694 (- x1475 356)) (x176 x1475)))
(define-fun x989 ((x1475 Int)) Int (ite (= x1475 260) 288 (x1959 x1475)))
(define-fun x4550 ((x1475 Int)) Int (ite (= 356 x1475) 0 (x989 x1475)))
(define-fun x1708 ((x1475 Int)) Int (ite (and (>= x1475 388) (> 388 x1475)) (x1783 (- x1475 388)) (x4550 x1475)))
(define-fun x2810 ((x1475 Int)) Int (ite (= 292 x1475) 320 (x1708 x1475)))
(define-fun x2752 ((x1475 Int)) Int (ite (= x1475 388) x4582 (x2810 x1475)))
(define-fun x4183 ((x1475 Int)) Int (ite (= x1475 420) 192 (x2752 x1475)))
(define-fun x4282 ((x1475 Int)) Int (ite (= 580 x1475) x2077 (x4183 x1475)))
(define-fun x113 ((x1475 Int)) Int (ite (and (< x1475 (+ x2077 612)) (<= 612 x1475)) (x1757 (- x1475 612)) (x4282 x1475)))
(define-fun x2743 ((x1475 Int)) Int (ite (= 452 x1475) x2301 (x113 x1475)))
(define-fun x1830 ((x1475 Int)) Int (ite (= 484 x1475) x1388 (x2743 x1475)))
(define-fun x4599 ((x1475 Int)) Int (ite (= x2965 x1475) x1196 (x1830 x1475)))
(define-fun x1683 ((x1475 Int)) Int (ite (and (>= x1475 x3717) (> (+ x3717 x1196) x1475)) (x1027 (- x1475 x3717)) (x4599 x1475)))
(define-fun x1232 ((x1475 Int)) Int (ite (= x1475 516) x4253 (x1683 x1475)))
(define-fun x2983 ((x1475 Int)) Int (ite (= 548 x1475) x4035 (x1232 x1475)))
(define-fun x1723 ((x1475 Int)) Int (ite (= x4668 x1475) x70 (x2983 x1475)))
(define-fun x4628 ((x1475 Int)) Int (ite (and (< x1475 (+ x70 x4826)) (<= x4826 x1475)) (x3010 (- x1475 x4826)) (x1723 x1475)))
(define-fun x433 ((x1475 Int)) Int (ite (= x1475 36) x1433 (x4628 x1475)))
(define-fun x1579 ((x1475 Int)) Int (ite (= x670 x1475) x985 (x433 x1475)))
(define-fun x984 ((x1475 Int)) Int (ite (= x2389 x1475) x2848 (x1579 x1475)))
(define-fun x4177 ((x1475 Int)) Int (ite (= x3391 x1475) x4365 (x984 x1475)))
(define-fun x4780 ((x1475 Int)) Int (ite (= x4308 x1475) x4008 (x4177 x1475)))
(define-fun x1062 ((x1475 Int)) Int (ite (= x1475 x2557) x3252 (x4780 x1475)))
(define-fun x4555 ((x1475 Int)) Int (ite (= x1475 x4618) x3537 (x1062 x1475)))
(define-fun x208 ((x1475 Int)) Int (ite (= x1475 x4579) 0 (x4555 x1475)))
(define-fun x3528 ((x1475 Int)) Int (ite (and (>= x1475 x2856) (> x2856 x1475)) (x3554 (- x1475 x2856)) (x208 x1475)))
(define-fun x2630 ((x1475 Int)) Int (ite (= x1475 x3035) x3092 (x3528 x1475)))
(define-fun x3046 ((x1475 Int)) Int (ite (= x3855 x1475) 0 (x2630 x1475)))
(define-fun x1561 ((x1475 Int)) Int (ite (and (> x791 x1475) (<= x791 x1475)) (x1795 (- x1475 x791)) (x3046 x1475)))
(define-fun x872 ((x1475 Int)) Int (ite (= x4749 x1475) x178 (x1561 x1475)))
(define-fun x4587 ((x1475 Int)) Int (ite (= x1475 x2052) x4185 (x872 x1475)))
(define-fun x1586 ((x1475 Int)) Int (ite (= x1457 x1475) x1393 (x4587 x1475)))
(define-fun x681 ((x1475 Int)) Int (ite (= x1000 x1475) x2138 (x1586 x1475)))
(define-fun x1427 ((x1475 Int)) Int (ite (and (<= x2735 x1475) (< x1475 (+ x2735 x2138))) (x2235 (- x1475 x2735)) (x681 x1475)))
(define-fun x1800 ((x1475 Int)) Int (ite (= x1475 x1231) x649 (x1427 x1475)))
(define-fun x4105 ((x1475 Int)) Int (ite (= x4736 x1475) x290 (x1800 x1475)))
(define-fun x3683 ((x1475 Int)) Int (ite (= x541 x1475) x2709 (x4105 x1475)))
(define-fun x3007 ((x1475 Int)) Int (ite (and (>= x1475 x3277) (> (+ x2709 x3277) x1475)) (x1762 (- x1475 x3277)) (x3683 x1475)))
(define-fun x2452 ((x1475 Int)) Int (ite (= x1475 x4315) x78 (x3007 x1475)))
(define-fun x1476 ((x1475 Int)) Int (ite (= x1475 x3292) x3115 (x2452 x1475)))
(define-fun x1597 ((x1475 Int)) Int (ite (= x1475 x4418) x3432 (x1476 x1475)))
(define-fun x2829 ((x1475 Int)) Int (ite (and (> (+ x1272 x3432) x1475) (<= x1272 x1475)) (x1986 (- x1475 x1272)) (x1597 x1475)))
(define-fun x4793 ((x1475 Int)) Int (ite x3011 (x1228 x1475) (x3413 x1475)))
(define-fun x2620 ((x1475 Int)) Int (ite (= x1302 x1475) 56168211265741800405898417846466446431335698074001377101504018355951975268352 (x1805 x1475)))
(define-fun x3864 ((x1475 Int)) Int (ite (= x1475 x4424) 96 (x2620 x1475)))
(define-fun x4194 ((x1475 Int)) Int (ite (= x4208 x1475) x1500 (x3864 x1475)))
(define-fun x4439 ((x1475 Int)) Int (ite x694 (x4732 x1475) (x285 x1475)))
(define-fun x2303 ((x1475 Int)) Int (ite (= x3800 x1475) 56168211265741800405898417846466446431335698074001377101504018355951975268352 (x4439 x1475)))
(define-fun x1815 ((x1475 Int)) Int (ite (= x4808 x1475) 96 (x2303 x1475)))
(define-fun x4180 ((x1475 Int)) Int (ite (= x1475 x3275) x4675 (x1815 x1475)))
(define-fun x2097 ((x1475 Int)) Int (ite (= x1475 320) x2074 (x3550 x1475)))
(define-fun x3677 ((x1475 Int)) Int (ite (= x1475 x2074) x1734 (x1390 x1475)))
(define-fun x2485 ((x1475 Int)) Int (ite (= x4513 x1475) x3368 (x4337 x1475)))
(define-fun x4342 ((x1475 Int)) Int (ite x2622 (x2471 x1475) (x2485 x1475)))
(define-fun x3507 ((x1475 Int)) Int (ite (= x1475 x3368) x3849 (x4634 x1475)))
(define-fun x369 ((x1475 Int)) Int (ite x2622 (x3649 x1475) (x3507 x1475)))
(define-fun x4478 ((x1475 Int)) Int (ite (= x1475 x1619) x32 (x2900 x1475)))
(define-fun x2391 ((x1475 Int)) Int (ite x2622 (x2739 x1475) (x4478 x1475)))
(define-fun x1065 ((x1475 Int)) Int (ite (= x1475 x1589) x1989 (x3549 x1475)))
(define-fun x3790 ((x1475 Int)) Int (ite x2622 (x3812 x1475) (x1065 x1475)))
(define-fun x2660 ((x1475 Int)) Int (ite (= x1475 x1637) x4471 (x3901 x1475)))
(define-fun x3463 ((x1475 Int)) Int (ite x2622 (x476 x1475) (x2660 x1475)))
(define-fun x1460 ((x1475 Int)) Int (ite (= x2502 x1475) x1688 (x2024 x1475)))
(define-fun x3342 ((x1475 Int)) Int (ite (= x1475 x825) 0 (x4562 x1475)))
(define-fun x2476 ((x1475 Int)) Int (ite (= x4844 x1475) 0 (x3080 x1475)))
(define-fun x2885 ((x1475 Int)) Int (ite (= x3119 x1475) 0 (x1336 x1475)))
(define-fun x4140 ((x1475 Int)) Int (ite (= x734 x1475) 0 (x3102 x1475)))
(define-fun x573 ((x1475 Int)) Int (ite (= x3364 x1475) x825 (x2425 x1475)))
(define-fun x1574 ((x1475 Int)) Int (ite (= x1475 x3392) 0 (x3342 x1475)))
(define-fun x4646 ((x1475 Int)) Int (ite (= x1475 x1973) 0 (x2476 x1475)))
(define-fun x4813 ((x1475 Int)) Int (ite (= x1080 x1475) 0 (x2885 x1475)))
(define-fun x1558 ((x1475 Int)) Int (ite (= x1475 x4069) 0 (x4140 x1475)))
(define-fun x3438 ((x1475 Int)) Int (ite (= x4871 x1475) x3392 (x573 x1475)))
(define-fun x1466 ((x1475 Int)) Int (ite x312 (x488 x1475) (ite x2650 (x3342 x1475) (x1574 x1475))))
(define-fun x1856 ((x1475 Int)) Int (ite x312 (x1363 x1475) (ite x2650 (x2476 x1475) (x4646 x1475))))
(define-fun x2932 ((x1475 Int)) Int (ite x312 (x1494 x1475) (ite x2650 (x573 x1475) (x3438 x1475))))
(define-fun x4002 ((x1475 Int)) Int (ite x312 (x3842 x1475) (ite x2650 (x4140 x1475) (x1558 x1475))))
(define-fun x3678 ((x1475 Int)) Int (ite x312 (x2542 x1475) (ite x2650 (x2885 x1475) (x4813 x1475))))
(define-fun x1782 ((x1475 Int)) Int (ite (= x4428 x1475) 0 (x3678 x1475)))
(define-fun x884 ((x1475 Int)) Int (ite (= x3609 x1475) x4020 (x4002 x1475)))
(define-fun x105 ((x1475 Int)) Int (ite (= x1475 x2346) x4263 (x1856 x1475)))
(define-fun x3120 ((x1475 Int)) Int (ite (= x2446 x1475) x4335 (x1466 x1475)))
(define-fun x3091 ((x1475 Int)) Int (ite x740 (x4002 x1475) (ite x2106 (ite x1085 (x884 x1475) (x4002 x1475)) (x4002 x1475))))
(define-fun x2276 ((x1475 Int)) Int (ite x740 (x1466 x1475) (ite x2106 (ite x1085 (x3120 x1475) (x1466 x1475)) (x1466 x1475))))
(define-fun x173 ((x1475 Int)) Int (ite x740 (x3678 x1475) (ite x2106 (x1782 x1475) (x3678 x1475))))
(define-fun x2006 ((x1475 Int)) Int (ite x740 (x1856 x1475) (ite x2106 (ite x1085 (x105 x1475) (x1856 x1475)) (x1856 x1475))))
(define-fun x3377 ((x1475 Int) (x4649 Int)) Int (ite (and (= x4416 x1475) (= x3182 x4649)) x4007 (x1352 x1475 x4649)))
(define-fun x4644 ((x1475 Int) (x4649 Int)) Int (ite (and (= x1475 x1835) (= x4649 x2197)) x817 (x3377 x1475 x4649)))
(define-fun x2337 ((x1475 Int) (x4649 Int)) Int (ite (and (= x3371 x1475) (= x2505 x4649)) x2475 (x177 x1475 x4649)))
(define-fun x2194 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x4862 x1475) (= x4837 x3924) (= x4649 x88)) x4330 (x2119 x1475 x4649 x4837)))
(define-fun x1624 ((x1475 Int) (x4649 Int) (x4837 Int)) Int (ite (and (= x73 x4649) (= x1475 x2749) (= x4837 x3075)) x932 (x2194 x1475 x4649 x4837)))
(define-fun x2330 ((x1475 Int)) Int (ite (= x2577 x1475) x2741 (x1093 x1475)))
(define-fun x154 ((x1475 Int)) Int (ite (= x1475 x3099) x3559 (x2917 x1475)))
(define-fun x1125 ((x1475 Int)) Int (ite (= x2675 x1475) x847 (x2592 x1475)))
(define-fun x246 ((x1475 Int)) Int (ite (= x1475 x2321) x1443 (x2643 x1475)))
(define-fun x4111 ((x1475 Int)) Int (ite (= x1475 416) x2577 (x2550 x1475)))
(define-fun x3013 ((x1475 Int)) Int (ite (= x1983 x1475) x1728 (x1090 x1475)))
(define-fun x186 ((x1475 Int)) Int (ite (= x1475 x1366) x3227 (x3510 x1475)))
(define-fun x3793 ((x1475 Int)) Int (ite (= x2199 x1475) x834 (x3972 x1475)))
(define-fun x483 ((x1475 Int)) Int (ite (= x1475 x3004) x3237 (x815 x1475)))
(define-fun x244 ((x1475 Int)) Int (ite (= x3875 x1475) x1983 (x2551 x1475)))
(define-fun x4426 ((x1475 Int)) Int (ite (= x2190 x1475) x446 (x4420 x1475)))
(define-fun x2114 ((x1475 Int)) Int (ite (= x1874 x1475) x816 (x1025 x1475)))
(define-fun x3670 ((x1475 Int)) Int (ite (and (>= x1475 x1140) (> (+ x816 x1140) x1475)) (x1628 (- (+ x1475 x56) x1140)) (x2155 x1475)))
(define-fun x738 ((x1475 Int)) Int (ite (= x702 x1475) 0 (x3670 x1475)))
(define-fun x3926 ((x1475 Int)) Int (ite (= x1475 x1549) x1874 (x2364 x1475)))
(define-fun x2123 ((x1475 Int)) Int (ite (= x1475 x1887) x3569 (x954 x1475)))
(define-fun x477 ((x1475 Int)) Int (ite (= x1475 x438) x2233 (x4810 x1475)))
(define-fun x4755 ((x1475 Int)) Int (ite (and (< x1475 (+ x482 x2233)) (>= x1475 x482)) (x1628 (- (+ x3941 x1475) x482)) (x4479 x1475)))
(define-fun x2196 ((x1475 Int)) Int (ite (= x3607 x1475) 0 (x4755 x1475)))
(define-fun x1247 ((x1475 Int)) Int (ite (= x1475 x180) x438 (x3858 x1475)))
(define-fun x1709 ((x1475 Int)) Int (ite (= x165 x1475) x2590 (x259 x1475)))
(define-fun x2624 ((x1475 Int)) Int (ite (= x1475 x3054) x23 (x1990 x1475)))
(define-fun x4553 ((x1475 Int)) Int (ite (and (< x1475 (+ x23 x4652)) (>= x1475 x4652)) (x1628 (- (+ x1475 x413) x4652)) (x607 x1475)))
(define-fun x688 ((x1475 Int)) Int (ite (= x1475 x1002) 0 (x4553 x1475)))
(define-fun x3986 ((x1475 Int)) Int (ite (= x749 x1475) x3054 (x4655 x1475)))
(define-fun x2706 ((x1475 Int)) Int (ite (= x1475 352) x2190 (x2092 x1475)))
(define-fun x780 ((x1475 Int)) Int (ite x2470 (x1115 x1475) (x1125 x1475)))
(define-fun x2469 ((x1475 Int)) Int (ite x2470 (x556 x1475) (x154 x1475)))
(define-fun x1147 ((x1475 Int)) Int (ite x2470 (x3069 x1475) (x246 x1475)))
(define-fun x3373 ((x1475 Int)) Int (ite x2470 (x855 x1475) (x2330 x1475)))
(define-fun x4093 ((x1475 Int)) Int (ite x2470 (x3544 x1475) (x4111 x1475)))
(define-fun x2152 ((x1475 Int)) Int (ite (= x3214 x1475) x3890 (x2484 x1475)))
(define-fun x3509 ((x1475 Int)) Int (ite x1401 (x708 x1475) (x483 x1475)))
(define-fun x1655 ((x1475 Int)) Int (ite x1401 (x1955 x1475) (x3013 x1475)))
(define-fun x3881 ((x1475 Int)) Int (ite x1401 (x867 x1475) (x244 x1475)))
(define-fun x3340 ((x1475 Int)) Int (ite x1401 (x4354 x1475) (x186 x1475)))
(define-fun x3819 ((x1475 Int)) Int (ite x1401 (x1394 x1475) (x3793 x1475)))
(define-fun x2404 ((x1475 Int)) Int (ite (= x3050 x1475) x1197 (x3886 x1475)))
(define-fun x1556 ((x1475 Int)) Int (ite (= x3894 x1475) x4193 (x4447 x1475)))
(define-fun x4763 ((x1475 Int)) Int (ite (= x2444 x1475) x2988 (x3573 x1475)))
(define-fun x4729 ((x1475 Int)) Int (ite (= x4169 x1475) x472 (x4194 x1475)))
(define-fun x562 ((x1475 Int)) Int (ite (= x2082 x1475) x4811 (x4729 x1475)))
(define-fun x2210 ((x1475 Int)) Int (ite (= x1475 x310) x1604 (x562 x1475)))
(define-fun x786 ((x1475 Int)) Int (ite (= x1475 x2392) x2873 (x2210 x1475)))
(define-fun x1042 ((x1475 Int)) Int (ite (= x1475 x2090) x4017 (x786 x1475)))
(define-fun x1160 ((x1475 Int)) Int (ite (= x1475 x944) x4162 (x1042 x1475)))
(define-fun x3297 ((x1475 Int)) Int (ite x3781 (x4194 x1475) (x1160 x1475)))
(define-fun x539 ((x1475 Int)) Int (ite (= x45 x1475) x895 (x3297 x1475)))
(define-fun x1812 ((x1475 Int)) Int (ite (= x352 x1475) x3390 (x539 x1475)))
(define-fun x1858 ((x1475 Int)) Int (ite (= x3684 x1475) x3131 (x1812 x1475)))
(define-fun x3071 ((x1475 Int)) Int (ite (= x1475 x2920) x1732 (x1858 x1475)))
(define-fun x2192 ((x1475 Int)) Int (ite (= x2659 x1475) x601 (x3071 x1475)))
(define-fun x917 ((x1475 Int)) Int (ite (= x1475 x4089) x3529 (x2192 x1475)))
(define-fun x4653 ((x1475 Int)) Int (ite (= x1475 x2375) 256 (x917 x1475)))
(define-fun x935 ((x1475 Int)) Int (ite (= x1678 x1475) x1721 (x4653 x1475)))
(define-fun x763 ((x1475 Int)) Int (ite (= x1475 x2631) x2981 (x935 x1475)))
(define-fun x925 ((x1475 Int)) Int (ite (= x1034 x1475) x447 (x763 x1475)))
(define-fun x1256 ((x1475 Int)) Int (ite (= x1475 x689) x1698 (x925 x1475)))
(define-fun x2696 ((x1475 Int)) Int (ite (= x13 x1475) x1162 (x1256 x1475)))
(define-fun x2583 ((x1475 Int)) Int (ite (= x1475 x3427) x2864 (x4180 x1475)))
(define-fun x2726 ((x1475 Int)) Int (ite (= x1475 x2419) x720 (x2583 x1475)))
(define-fun x3911 ((x1475 Int)) Int (ite (= x803 x1475) x2999 (x2726 x1475)))
(define-fun x871 ((x1475 Int)) Int (ite (= x577 x1475) x1753 (x3911 x1475)))
(define-fun x35 ((x1475 Int)) Int (ite (= x3173 x1475) x1049 (x871 x1475)))
(define-fun x2690 ((x1475 Int)) Int (ite (= x1210 x1475) x2811 (x35 x1475)))
(define-fun x2678 ((x1475 Int)) Int (ite x4390 (x4180 x1475) (x2690 x1475)))
(define-fun x3740 ((x1475 Int)) Int (ite (= x1475 x920) x1512 (x2678 x1475)))
(define-fun x4867 ((x1475 Int)) Int (ite (= x1475 x337) x3241 (x3740 x1475)))
(define-fun x597 ((x1475 Int)) Int (ite (= x1475 x3882) x4287 (x4867 x1475)))
(define-fun x4433 ((x1475 Int)) Int (ite (= x1475 x512) x2716 (x597 x1475)))
(define-fun x3600 ((x1475 Int)) Int (ite (= x1475 x3425) x2960 (x4433 x1475)))
(define-fun x4543 ((x1475 Int)) Int (ite (= x4716 x1475) x4163 (x3600 x1475)))
(define-fun x3366 ((x1475 Int)) Int (ite (= x1475 x560) 256 (x4543 x1475)))
(define-fun x1259 ((x1475 Int)) Int (ite (= x864 x1475) x3562 (x3366 x1475)))
(define-fun x1958 ((x1475 Int)) Int (ite (= x1475 x3394) x87 (x1259 x1475)))
(define-fun x3885 ((x1475 Int)) Int (ite (= x134 x1475) x4265 (x1958 x1475)))
(define-fun x2172 ((x1475 Int)) Int (ite (= x1475 x4323) x140 (x3885 x1475)))
(define-fun x485 ((x1475 Int)) Int (ite (= x1475 x4184) x4580 (x2172 x1475)))
(define-fun x4181 ((x1475 Int)) Int (ite x4243 (x935 x1475) (x2696 x1475)))
(define-fun x4279 ((x1475 Int)) Int (ite (= x1475 x757) x3517 (x4181 x1475)))
(define-fun x3714 ((x1475 Int)) Int (ite (= x2366 x1475) x4232 (x4279 x1475)))
(define-fun x1192 ((x1475 Int)) Int (ite (= x1475 x1826) x3521 (x3714 x1475)))
(define-fun x1781 ((x1475 Int)) Int (ite (= x230 x1475) x736 (x1192 x1475)))
(define-fun x1775 ((x1475 Int)) Int (ite (= x1475 x4045) x843 (x1781 x1475)))
(define-fun x240 ((x1475 Int)) Int (ite (= x1475 x3384) x4055 (x1775 x1475)))
(define-fun x1974 ((x1475 Int)) Int (ite x3415 (x1259 x1475) (x485 x1475)))
(define-fun x955 ((x1475 Int)) Int (ite (= x1475 x4715) x938 (x1974 x1475)))
(define-fun x4149 ((x1475 Int)) Int (ite (= x1475 x4690) x719 (x955 x1475)))
(define-fun x4521 ((x1475 Int)) Int (ite (= x1585 x1475) x2731 (x4149 x1475)))
(define-fun x3576 ((x1475 Int)) Int (ite (= x1475 x679) x2164 (x4521 x1475)))
(define-fun x4226 ((x1475 Int)) Int (ite (= x1475 x1129) x4344 (x3576 x1475)))
(define-fun x1250 ((x1475 Int)) Int (ite (= x1475 x3019) x4567 (x4226 x1475)))
(define-fun x836 ((x1475 Int)) Int (ite (= x432 x1475) x4852 (x4465 x1475)))
(define-fun x3199 ((x1475 Int)) Int (ite x4141 (x1060 x1475) (x836 x1475)))
(define-fun x4530 ((x1475 Int)) Int (ite x3731 (x3714 x1475) (x240 x1475)))
(define-fun x1385 ((x1475 Int)) Int (ite (= x1701 x1475) x3328 (x4530 x1475)))
(define-fun x4728 ((x1475 Int)) Int (ite (= x1475 x506) x2157 (x1385 x1475)))
(define-fun x4171 ((x1475 Int)) Int (ite (= x1475 x4019) 192 (x4728 x1475)))
(define-fun x272 ((x1475 Int)) Int (ite (= x770 x1475) x2438 (x4171 x1475)))
(define-fun x267 ((x1475 Int)) Int (ite (and (< x1475 (+ x479 x2438)) (<= x479 x1475)) (x738 (- (+ x2065 x1475) x479)) (x272 x1475)))
(define-fun x4013 ((x1475 Int)) Int (ite (= x1475 x4516) x3784 (x267 x1475)))
(define-fun x2896 ((x1475 Int)) Int (ite (= x1779 x1475) x3184 (x4013 x1475)))
(define-fun x217 ((x1475 Int)) Int (ite (= x1475 x4392) x1632 (x2896 x1475)))
(define-fun x1146 ((x1475 Int)) Int (ite (and (>= x1475 x1244) (< x1475 (+ x1632 x1244))) (x2196 (- (+ x1475 x145) x1244)) (x217 x1475)))
(define-fun x4799 ((x1475 Int)) Int (ite (= x1475 x4537) x1412 (x1146 x1475)))
(define-fun x462 ((x1475 Int)) Int (ite (= x1475 x527) x4022 (x4799 x1475)))
(define-fun x1724 ((x1475 Int)) Int (ite (= x1475 x4224) x4623 (x462 x1475)))
(define-fun x823 ((x1475 Int)) Int (ite (and (< x1475 (+ x4623 x4643)) (<= x4643 x1475)) (x688 (- (+ x1475 x16) x4643)) (x1724 x1475)))
(define-fun x60 ((x1475 Int)) Int (ite (= x4449 x1475) x1538 (x823 x1475)))
(define-fun x4043 ((x1475 Int)) Int (ite (= x1475 x361) x2027 (x60 x1475)))
(define-fun x1837 ((x1475 Int)) Int (ite (and (> (+ x1662 x2027) x1475) (<= x1662 x1475)) (x1628 (- (+ x1475 x1667) x1662)) (x4043 x1475)))
(define-fun x1540 ((x1475 Int)) Int (ite (= x1475 x617) 0 (x1837 x1475)))
(define-fun x1627 ((x1475 Int)) Int (ite x2277 (x4149 x1475) (x1250 x1475)))
(define-fun x2143 ((x1475 Int)) Int (ite (= x3694 x1475) x3232 (x1627 x1475)))
(define-fun x1360 ((x1475 Int)) Int (ite (= x1475 x398) x156 (x2143 x1475)))
(define-fun x1666 ((x1475 Int)) Int (ite (= x4614 x1475) 192 (x1360 x1475)))
(define-fun x3383 ((x1475 Int)) Int (ite (= x990 x1475) x2840 (x1666 x1475)))
(define-fun x3928 ((x1475 Int)) Int (ite (and (>= x1475 x200) (> (+ x200 x2840) x1475)) (x738 (- (+ x342 x1475) x200)) (x3383 x1475)))
(define-fun x300 ((x1475 Int)) Int (ite (= x1475 x3492) x1382 (x3928 x1475)))
(define-fun x4510 ((x1475 Int)) Int (ite (= x829 x1475) x1876 (x300 x1475)))
(define-fun x4 ((x1475 Int)) Int (ite (= x1475 x1378) x4647 (x4510 x1475)))
(define-fun x59 ((x1475 Int)) Int (ite (and (<= x3909 x1475) (> (+ x3909 x4647) x1475)) (x2196 (- (+ x1475 x4466) x3909)) (x4 x1475)))
(define-fun x3258 ((x1475 Int)) Int (ite (= x1475 x963) x859 (x59 x1475)))
(define-fun x760 ((x1475 Int)) Int (ite (= x4363 x1475) x971 (x3258 x1475)))
(define-fun x4486 ((x1475 Int)) Int (ite (= x2159 x1475) x2700 (x760 x1475)))
(define-fun x2863 ((x1475 Int)) Int (ite (and (<= x2523 x1475) (> (+ x2700 x2523) x1475)) (x688 (- (+ x1475 x4313) x2523)) (x4486 x1475)))
(define-fun x1977 ((x1475 Int)) Int (ite (= x210 x1475) x906 (x2863 x1475)))
(define-fun x2911 ((x1475 Int)) Int (ite (= x1475 x674) x960 (x1977 x1475)))
(define-fun x1357 ((x1475 Int)) Int (ite (and (> (+ x960 x2474) x1475) (>= x1475 x2474)) (x1628 (- (+ x3 x1475) x2474)) (x2911 x1475)))
(define-fun x698 ((x1475 Int)) Int (ite (= x3161 x1475) 0 (x1357 x1475)))
(define-fun x753 ((x1475 Int)) Int (ite (= x1475 x254) x2589 (x4765 x1475)))
(define-fun x1947 ((x1475 Int)) Int (x95 x1475))
(define-fun x2382 ((x1475 Int)) Int (ite (= 128 x1475) x618 (x2948 x1475)))
(assert (x1081 x4443))
(assert (x3402 x785))
(assert (x3402 x2363))
(assert (x3402 x3277))
(assert (x2890 x3031 256))
(assert (x3402 x2090))
(assert (= (and (not x3143) x1004) x2584))
(assert (x3402 x3607))
(assert (x2890 x53 32))
(assert (x1081 (- x3336 1)))
(assert (= (and x2757 (not x2888)) x1518))
(assert (x3402 x2366))
(assert (x3402 x1695))
(assert (x3971 32 x3525))
(assert (x3402 x2806))
(assert (x3402 x2065))
(assert (x1221 x862))
(assert (= (x4472 (x727 64 x1447 5)) x1447))
(assert (=> (<= x1227 10000) (= (x1892 x1227) 0)))
(assert (x1081 (- x265 1)))
(assert (= x1791 (and (not x4804) x947)))
(assert (= x534 (x4472 (x1941 x4629 x534 x1177 x2798))))
(assert (x3402 x736))
(assert (= (and x3712 x363) x132))
(assert (= x1350 (and x3109 x190)))
(assert (= (and x4704 x2331) x3206))
(assert (x3402 x1035))
(assert (x3402 x275))
(assert (= (x1892 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)) (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)))
(assert (x3402 x3905))
(assert (x3402 x52))
(assert (x1411 x1975))
(assert (x3402 x2703))
(assert (x3402 x1196))
(assert (x3402 x264))
(assert (x3402 x3193))
(assert (x3402 x4484))
(assert (x3402 x1467))
(assert (x3402 x1522))
(assert (x3402 x3040))
(assert (= (x4472 (x727 64 x1942 x2815)) x1942))
(assert (x3402 x2164))
(assert (= (and x1717 (not x4774)) x1418))
(assert (= x2112 (and x3143 x1004)))
(assert (= x3118 (and x2251 (not x3335))))
(assert (x2890 x2737 32))
(assert (x3402 x2639))
(assert (x3402 x118))
(assert (x3402 x1810))
(assert (x3402 x4227))
(assert (x2480 18446744073709551420))
(assert (= x4748 (and x795 (not x4460))))
(assert (x2890 x1351 32))
(assert (x3402 x4856))
(assert (= x2507 (and (not x4825) x1375)))
(assert (x3402 x401))
(assert (< (x727 64 x2137 x3854) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3324))
(assert (x1221 x1884))
(assert (x3402 x617))
(assert (x3402 x4304))
(assert (x3402 x1993))
(assert (x2480 25769805028))
(assert (= x4079 (and x1576 (not x4457))))
(assert (= (x2161 (x727 64 x1836 x434)) x434))
(assert (x3402 x470))
(assert (= x1777 x2640))
(assert (x3402 x3117))
(assert (x3402 x3556))
(assert (x3402 x256))
(assert (x3402 x1982))
(assert (= (x1286 (x727 x4629 x2271 x4040)) x4629))
(assert (x2480 18446744082299486532))
(assert (x3402 x1598))
(assert (= x4523 (or (and x4792 (not x2812)) x2905 x3676 (and (not x2969) x1857) x2109 x333 (and (not x3601) x3568))))
(assert (x3402 x447))
(assert (x1081 x1273))
(assert (x3853 (ite (< x464 x3198) 1 0)))
(assert (x3402 x3439))
(assert (x3402 x3562))
(assert (x3402 x909))
(assert (x3402 x2181))
(assert (= (=> (and (= x2274 x2013) (= x4524 false) (= true x2466) (= x2013 true) (= x1311 false)) x1014) x3229))
(assert (x1411 x1055))
(assert (x3402 x3391))
(assert (x2890 x2602 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2741))
(assert (x3402 x781))
(assert (x3402 x3863))
(assert (x3402 x1174))
(assert (=> (<= x675 10000) (= 0 (x1892 x675))))
(assert (= x1504 (and x1962 x2638)))
(assert (x3402 x1742))
(assert (x3402 x3087))
(assert (= x1324 (and x2793 x1128)))
(assert (x3402 x2931))
(assert (x3402 x4640))
(assert (x2041 x377))
(assert (x3402 x821))
(assert (x2890 x1975 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3425))
(assert (x3402 x3384))
(assert (= (and x3696 (not x3785)) x4261))
(assert (= (and x3827 x174) x3970))
(assert (= (=> (and (= x2535 false) (= true x2573) (= x2274 x2573) (= x3745 false) (= x4635 true)) x1014) x2311))
(assert (x3402 x3053))
(assert (x3402 x500))
(assert (x3402 x2271))
(assert (x2041 x2737))
(assert (x3402 x3504))
(assert (x3402 x540))
(assert (x1081 (- x3410 1)))
(assert (x3853 (ite (> 384 x3198) 1 0)))
(assert (x3402 x4095))
(assert (x3971 32 (- x3410 1)))
(assert (x3402 x1333))
(assert (x3402 x3369))
(assert (x3402 x4035))
(assert (x3402 x2367))
(assert (x3402 x3432))
(assert (= x3205 x1908))
(assert (x3402 x704))
(assert (not (x2480 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918))))
(assert (x3402 x4378))
(assert (x3402 x2287))
(assert (x3402 x4231))
(assert (x3971 32 x4615))
(assert (x3402 x944))
(assert (x3402 x1034))
(assert (x3402 x3111))
(assert (= x3082 (or x694 x2585)))
(assert (x3402 x1884))
(assert (= (and x1889 x1268) x548))
(assert (= x652 (and x2823 x1314)))
(assert (x3402 x345))
(assert (x4488 x2737))
(assert (=> (>= 10000 x1285) (= 0 (x1892 x1285))))
(assert (x3402 x3055))
(assert (x2041 x2240))
(assert (= x1251 (or x2519 x3538)))
(assert (= (=> (and (= (x3584 (+ 128 x4220)) x2772) (< x4220 x2772) (not (= x4220 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4220) (not (= x4220 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= (x369 x2245) x4358) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4220) (not (= x4220 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= (> x4358 5) x3202) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4220)) (and (=> x3202 x2203) (=> (and (and (= (x3463 x2282) x4725) (= (x3584 (+ x4829 32)) x2282) (= (< x4725 x2605) x2982) (= (x3584 (+ x3216 32)) x4284) (= x3216 (x3584 (+ 32 x4220))) (= x4606 (x3584 (+ 32 x2245))) (= (x3790 x4829) x4189) (= x1517 (x2206 1461501637330902918203684832716283019655932542975 x3079)) (= x2605 (x3042 (- x4725 x1904))) (= x4829 (x3584 (+ 32 x4606))) (= (x3584 (+ x4284 32)) x3095) (= (x2391 x4606) x3079)) (not x3202)) (and (=> (and (and (= (< 0 x4271) x4461) (= (x700 x3567) x4271)) (not x2982)) (and (=> x4461 x656) (=> (and (and (= x1676 false) (= x2274 x4113) (= x3242 true) (= x4833 false) (= true x4113)) (not x4461)) x1014))) (=> (and x2982 (and (= x2274 x1372) (= x2126 false) (= true x2421) (= false x1653) (= x1372 true))) x1014))))) x3916))
(assert (x3402 x180))
(assert (x3402 x3525))
(assert (x3402 x1197))
(assert (x3402 x3321))
(assert (x3402 x3823))
(assert (x3402 x4736))
(assert (x3402 x3364))
(assert (x3402 x3105))
(assert (x3051 (x1465 x270 x1474 x3235)))
(assert (x3402 x4512))
(assert (= x3646 (and (not x4221) x3138)))
(assert (x3402 x4343))
(assert (x4488 x623))
(assert (= (and x1126 x2393) x953))
(assert (= x943 (or x463 x169)))
(assert (x1411 x820))
(assert (x3402 x4091))
(assert (x3402 x534))
(assert (x3402 x135))
(assert (= x2781 (and (not x655) x110)))
(assert (x3402 x876))
(assert (x3402 x675))
(assert (x3402 x1262))
(assert (= x3101 (and x4130 x2327)))
(assert (= (or x911 x3733) x2564))
(assert (x3402 x3079))
(assert (= (and x2888 x2757) x3345))
(assert (x3402 x1067))
(assert (not (x2480 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731))))
(assert (= (and x3113 x2996) x4500))
(assert (x3402 x1626))
(assert (x3402 x1175))
(assert (= (x1892 (x727 x4629 x2271 x4040)) (x727 x4629 x2271 x4040)))
(assert (x3402 x2332))
(assert (x3402 x102))
(assert (x3971 32 (- x2966 1)))
(assert (= x3448 (or x4695 x3011)))
(assert (= (and (not x2626) x4450) x2055))
(assert (= x1330 (or (and x543 x3352) (and x2248 x2162))))
(assert (x1411 1461501637330902918203684832716283019655932542975))
(assert (x3402 x1329))
(assert (= (and x1304 x2800) x1697))
(assert (x3402 x3784))
(assert (x2041 x608))
(assert (x1411 x3197))
(assert (x3402 x761))
(assert (= (and x4097 (not x1267)) x4243))
(assert (x3402 x80))
(assert (= (and (not x794) x1275) x313))
(assert (x3402 x129))
(assert (x2890 x1945 32))
(assert (x3402 x611))
(assert (x3402 x660))
(assert (x3402 x3278))
(assert (x3402 x4789))
(assert (= (=> (and (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1351) x2061) (= x4346 (+ 32 x2723)) (= (x1151 384) x2825) (= (+ x1197 x4026) x3905) (= (x2512 x490) x1233) (>= 12884902464 x752) (= x3151 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4216)) (>= 12884902464 x1233) (not (> x2444 x2420)) (= x1672 (+ 32 x3894)) (= (+ x264 x4434) x2021) (= x2150 (+ x1768 32)) (or (<= x4851 18446744073709551420) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639745 x4851)) (<= x2816 1461501637330902918203684832716283019655932542975) (>= x3729 68) (= x3657 (+ x1261 x2988)) (= (+ x4791 32) x2324) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4832) x478) (= (+ x3050 x4737) x3894) (<= x3747 12884902500) (= x2102 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3225)) (not (> x4851 x3050)) (= (+ 32 x490) x3127) (not (< x3608 x3729)) (<= x4851 18446744073709551612) (not (> x3894 x2444)) (= x2317 (+ x2150 32)) (= x53 (+ x2102 63)) (= (+ 32 x2444) x1261) (= (+ x1880 x1197) x3729) (< x3894 x2444) (>= x4544 68) (<= x3729 12884902532) (<= x4851 18446744073709551612) (= (x3584 (+ x4851 192)) x3050) (>= 18446744073709551612 x4851) (= x1351 (+ 31 x1197)) (= (+ x2021 32) x1185) (= (x2512 260) x988) (= (+ 31 x2723) x593) (= (+ x3088 32) x1303) (> x254 x2420) (= x2 (x3042 (- x2317 x2150))) (<= x2420 18446744073709551615) (= x4193 (x2512 x2021)) (not (< x3608 x2520)) (= x3226 (+ x2324 32)) (= (x3042 (- x2150 x1768)) x481) (<= x4851 18446744073709551611) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x53) x3215) (>= 18446744073709551611 x4851) (= x3879 (+ 63 x2061)) (= (+ x3747 32) x1880) (= x3225 (+ x2988 31)) (>= x2444 3) (= (x2512 x3127) x3666) (>= 18446744073709551611 x4851) (>= x2021 36) (not (< x3608 x4544)) (> x3894 x3050) (= x3088 (+ x4227 32)) (= x3422 (+ 32 x2317)) (<= x3894 18446744073709551613) (<= x1197 12884902464) (not (< x3894 x3050)) (= (+ 32 x3422) x894) (<= x264 12884902464) (= x1768 (+ x254 32)) (= x2600 (+ 31 x2021)) (>= 12884902464 x4193) (= (< 0 x2825) x3762) (= x4026 (+ 32 x3050)) (= x4544 (+ x2988 x4346)) (= x752 (x2512 x1303)) (= (+ x3151 63) x4832) (<= x2021 12884902500) (= (+ x4193 31) x4216) (= x2420 (+ x2444 x3215)) (= (+ x1185 x4193) x2520) (>= x2723 36) (= (x3042 (- x1495 x2317)) x3439) (<= x988 12884902304) (>= 1461501637330902918203684832716283019655932542975 x3666) (< x2600 x3608) (<= x404 1461501637330902918203684832716283019655932542975) (= x490 (+ x4434 32)) (= (x2512 x4434) x2816) (< x4851 x3050) (= (x2512 x4227) x264) (< x593 x3608) (= (+ x4434 x1233) x3747) (= x4227 (+ 32 x3127)) (= x1495 (+ 256 x2317)) (= (+ x1672 x4193) x1150) (= (+ x752 x4434) x2723) (= (x2512 x3747) x1197) (<= 192 x1420) (= x3175 (+ x3747 31)) (= x2444 (+ x478 x3894)) (>= 12884902500 x2723) (< x3175 x3608) (< x2444 x2420) (= (+ x1495 32) x4598) (<= x1420 12884902496) (= x404 (x2512 x3088)) (= x4434 (+ x988 36)) (<= 4 x2420) (= x2988 (x2512 x2723)) (= x4737 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3879)) (= (x3042 (- x3608 x4434)) x1420) (>= x2520 68) (= (+ 32 x894) x4791) (or (>= 18446744073709551420 x4851) (>= x4851 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (= (+ 32 x2420) x254) (<= x4544 12884902532) (>= 18446744073709551614 x2444) (>= 12884902464 x2988) (>= 12884902532 x2520) (<= 36 x3747) (or (<= x4851 18446744073709551420) (>= x4851 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (>= x3894 2)) (and (=> x3762 x3417) (=> (and (= x4598 x3863) (not x3762)) x3639))) x287))
(assert (x3402 x1592))
(assert (= (or x621 x1504) x2069))
(assert (x3402 x3999))
(assert (x3402 x820))
(assert (= x368 (=> (and (= x521 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x345)) (>= 18446744073709551615 x1983) (= (x2512 x1328) x3890) (>= 18446744073709551614 x3214) (or (>= x3214 115792089237316195423570985008687907853269984665640564039457584007909908414274) (>= 18446744073709551615 x3214)) (or (<= x3214 18446744073709551615) (<= 115792089237316195423570985008687907853269984665640564039457584007909908414274 x3214)) (<= x3214 18446744073709551615) (>= 12884902532 x1301) (= x3734 (* 128 x3890)) (= (+ x1328 32) x4863) (>= 100663300 x3890) (= x3058 (< x4863 x1301)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007909908414274 x3214) (>= 18446744073709551615 x3214)) (>= 12884902464 x4739) (>= x1983 1) (= x4739 (x2512 228)) (<= x3214 18446744073709551615) (not (> x1301 x3608)) (<= x3214 18446744073709551615) (= x4692 (+ x1328 31)) (not (< x1983 x3214)) (<= 68 x1301) (>= 18446744073709551614 x3214) (= x1983 (x3584 (+ x521 x3214))) (<= x3214 18446744073709551614) (= (x3584 (+ 32 x3214)) x3875) (= (* x3890 32) x2843) (< x3214 x1983) (= x1328 (+ x4739 36)) (= (+ x4863 x3734) x1301) (= x345 (+ 63 x2843)) (< x4692 x3608)) (and (=> (and (not x3058) (= x4851 x1983)) x287) (=> x3058 x1141)))))
(assert (x3402 x101))
(assert (x2890 x48 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1129))
(assert (=> (<= x2336 10000) (= 0 (x1892 x2336))))
(assert (x3402 x976))
(assert (x3402 x575))
(assert (x3402 x4374))
(assert (x3402 x356))
(assert (x2890 x4496 32))
(assert (x3971 32 (- x1242 1)))
(assert (x3402 x2830))
(assert (x3402 x3521))
(assert (x3402 x145))
(assert (x3971 32 (- x2096 1)))
(assert (x3402 x3746))
(assert (= x2905 (and (not x4796) x1564)))
(assert (= (or x1749 x3487) x1028))
(assert (= (x381 (x1941 x4629 x534 x1177 x2798)) x2798))
(assert (< 10000 (x1992 x4629 x675)))
(assert (= (and (not x474) x643) x3663))
(assert (= x172 (and (not x2147) x972)))
(assert (= (and (not x2327) x4130) x4438))
(assert (= x2251 (and x3520 (not x1422))))
(assert (= 0 (x1892 100663300)))
(assert (x3971 32 (- x982 1)))
(assert (x2041 x4339))
(assert (x3402 x4344))
(assert (x3402 x4777))
(assert (= x3346 (or x289 x132)))
(assert (x3402 x4066))
(assert (x3402 x2015))
(assert (x3402 x3890))
(assert (x3402 x1619))
(assert (=> (>= 10000 x2702) (= 0 (x1892 x2702))))
(assert (x3402 x3017))
(assert (x2890 x1459 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1411 x2340))
(assert (x2105 x2654))
(assert (x1411 x1202))
(assert (x2041 x4637))
(assert (= (x1892 12884902532) 0))
(assert (x2480 18446744073709551358))
(assert (x3402 x4402))
(assert (x3402 x1656))
(assert (= (and x3851 x1058) x3673))
(assert (= x1114 (or (and x2034 (not x4814)) x4172)))
(assert (= x569 (=> (and (= x2274 x3817) (= false x1544) (= x3817 true) (= x4552 true) (= false x107)) x1014)))
(assert (x3402 x1727))
(assert (x3402 x423))
(assert (x3402 x4358))
(assert (x3402 x4049))
(assert (x1221 x446))
(assert (x3402 x3263))
(assert (= x1882 (=> (and (= x1994 false) (= x1213 true) (= x4179 false) (= x1072 x2274) (= true x1072)) x1014)))
(assert (= x3172 (or x3196 x544)))
(assert (x3402 x4004))
(assert (x3402 x2474))
(assert (x3402 x1736))
(assert (x3402 x3870))
(assert (x3402 x2777))
(assert (= (and (not x4809) x846) x2046))
(assert (x3402 x2018))
(assert (x3402 x4614))
(assert (x3402 x1048))
(assert (= (or x826 x1923) x2822))
(assert (x3402 x1933))
(assert (x1411 x2287))
(assert (x3402 x2233))
(assert (x3853 (ite (> x1874 18446744073709551615) 1 0)))
(assert (x3402 x1875))
(assert (x3402 x2579))
(assert (x3402 x2616))
(assert (not (x2480 (x1941 x4629 x534 x1177 x2798))))
(assert (= (x1286 (x571 x1264 x2418 x3471 x4777 x3009 x2336)) x1264))
(assert (x2480 4294967390))
(assert (not (x2480 (x727 64 x1942 x2815))))
(assert (x3402 x581))
(assert (x3402 x614))
(assert (x3402 x104))
(assert (x3402 x2168))
(assert (x3402 x3174))
(assert (x3971 32 (- x3336 1)))
(assert (x2105 x3031))
(assert (x3402 x862))
(assert (x3402 x2850))
(assert (= x2431 (and x3637 (not x2587))))
(assert (= (x2161 (x727 64 x1447 5)) 5))
(assert (x3402 x1500))
(assert (= (or (and (not x4645) x2171) (and x2383 (not x2289)) (and x2638 (not x1962))) x3952))
(assert (x3402 x3953))
(assert (x1221 x1325))
(assert (x2890 x1347 32))
(assert (= x4082 (and x429 x4244)))
(assert (= 0 (x1892 18446744073709551358)))
(assert (x2890 x4756 1461501637330902918203684832716283019655932542976))
(assert (x3402 x4019))
(assert (x3402 x3041))
(assert (= (and (not x599) x777) x2277))
(assert (x3402 x670))
(assert (x1081 (- x982 1)))
(assert (x3402 x2490))
(assert (x3402 x2052))
(assert (= x268 (and (not x543) x3352)))
(assert (= (and (not x1788) x4291) x3379))
(assert (x1081 (- x3977 1)))
(assert (x2041 x1234))
(assert (x1081 (- x3898 1)))
(assert (x3402 x2020))
(assert (x3402 x3378))
(assert (x3402 x1030))
(assert (x3402 x2230))
(assert (x3402 x4102))
(assert (x3402 x311))
(assert (= (x1286 (x727 64 x1447 5)) 64))
(assert (x2890 x4496 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1489))
(assert (= x2156 (=> (and (= (x3584 (+ x1826 32)) x230) (= x1292 (x3584 (+ x4698 32))) (= (x3584 (+ x230 32)) x4045) (= x4698 (x3584 (+ x50 32))) (= (not (< 1 x4232)) x2753) (= (x3584 (+ x4045 32)) x3384) (= x736 (x2206 1461501637330902918203684832716283019655932542975 x1975)) (= x4055 (x3463 x1292)) (= (x3790 x4698) x843) (= (x2391 x50) x1975) (= x350 (x3584 (+ 32 x3384))) (= x50 (x3584 (+ x1507 32)))) (and (=> (= x506 x350) x3251) x2753))))
(assert (= x1264 (x1286 (x727 x1264 x1522 x3093))))
(assert (x3402 x4846))
(assert (x2041 x2916))
(assert (x3402 x2864))
(assert (x3402 x2645))
(assert (= x4302 (and (not x4280) x1188)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x705 x4629 x2987 x4148 x3823 x3687)))
(assert (x3402 x4153))
(assert (x2041 x1055))
(assert (= x484 (=> (and (= x1282 (x1460 x2502)) (= (< 0 x1282) x2993)) (and (=> (not x2993) x940) (=> (and x2993 (and (= x2828 (> x716 0)) (= 0 x228) (= (x1460 x2502) x716))) (and (=> (not x2828) x4198) (=> (and (and (= x4357 (x1460 x2502)) (= (> x4357 0) x4255)) x2828) (and (=> (and (and (= x4484 (x1460 x2502)) (= x2888 (> x4484 0))) x4255) (and (=> (not x2888) x2203) (=> (and (and (= (x3584 (+ 32 x2502)) x3367) (= (x3584 (+ 32 x2304)) x3130) (= (x2206 1461501637330902918203684832716283019655932542975 x2487) x3620) (= (x3584 (+ 32 x3103)) x4322) (= (x2950 x3620) x1998) (= (x2276 x3103) x3892) (= x2304 (x3584 (+ x4322 32))) (= x233 (x173 x2304)) (= x2487 (x2006 x4322)) (= x3103 (x2932 x3367)) (= x135 (x3091 x3130)) (= x3533 (= 0 x1998))) x2888) (and (=> x3533 x1720) (=> (and (not x3533) (= x3981 (< 5 x3892))) (and (=> x3981 x2203) (=> (and (= x3036 (= x3892 1)) (not x3981)) (and (=> (and (not x3036) (and (= (= x3892 2) x2356) (<= x3892 5))) (and (=> (and (= (= x3892 3) x1915) (not x2356)) (and (=> (and x1915 (= x187 (= 0 (ite (= 0 x135) 0 (ite (= x135 0) 1 0))))) (and (=> (and (and (= x2154 x233) (= x4005 (x746 x1471 x1083 x67)) (= x2154 x1462) (= x4210 (x4000 x3736 x3532 x1130)) (= x453 x1384) (= x3322 x3807) (= x1416 x3191) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4005) (= x3284 x882) (= x82 x1755) (= x2154 x252) (= x2225 x3736) (= x1471 x2225) (<= 0 x3718) (= x82 x1312) (= x248 x2225) (= x135 x3832) (= x3832 x3224) (= x1297 x67) (= (- x4005 x2518) x3718) (= x739 x3846) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4210) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3718) (= x1011 x2778) (= x3532 x2154) (= x2205 x2062) (= x1130 x2347) (= x2778 x4458) (= x1729 x1563) (<= 0 x4210) (= x1630 x933) (= x1299 x1384) (= x1543 x1416) (= x3612 x2606) (= x1970 x63) (= x346 x1297) (= x2736 x2225) (= x2518 x3832) (= x2205 x3739) (= x4840 x3846) (<= x1563 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1083 x2154) (= x2487 x2225) (<= 0 x1563) (= x3976 x3284) (= x1447 x1297) (<= 0 x4005) (= x4382 x3322) (= x2347 x4747) (= x2347 x2186) (= x3718 x1346) (= x1942 x933) (= x4168 x3612) (= (+ x4210 x3224) x1563)) x187) x567) (=> (not x187) x934))) (=> (not x1915) x469))) (=> (and (= x4260 (= 0 (ite (not (= x135 1)) 0 (ite (not (= x135 1)) 1 0)))) x2356) (and (=> (and x4260 (and (= x4050 x3976) (= x1942 x4578) (= x2789 x2998) (= x3768 x4032) (= x4382 x3361) (= x1755 x3768) (= x4050 x380) (= x4821 x2699) (= x2606 x1153) (= x2084 x1153) (= x4578 x2707) (= x3298 x2972) (= x3739 x3298) (= x1970 x3244) (= x3191 x2699) (= x20 x4747) (= x4840 x1635) (= x1957 x2322) (= x4336 x1635) (= x1978 x198) (= x4860 x863) (= x1447 x260) (= x198 x2487) (= x233 x2998) (= x1018 x3361) (= x4860 x1299) (= x1011 x1957) (= x2369 x20))) x567) (=> (not x4260) x2596))))) (=> (and x3036 (= (= 0 (ite (> x233 0) 0 (ite (> x233 0) 1 0))) x4514)) (and (=> (and (= x4669 (= (ite (= x135 0) 0 (ite (= x135 0) 1 0)) 0)) x4514) (and (=> (not x4669) x3661) (=> (and (and (= x494 x818) (= (x3831 x455 x818) x3704) (= (- x3704 x2169) x3456) (= x3456 x2580) (= x3447 x245) (= x135 x314) (= x3279 x2403) (= x341 x2606) (= x4840 x2217) (= x1052 x1970) (= x1537 x3338) (= x3191 x4504) (= x3813 x3238) (= x1229 x3648) (<= 0 x3282) (= x3447 x4382) (= x4504 x1765) (<= 0 x1110) (= x455 x3279) (= x3692 x2467) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3282) (= x315 x2019) (= x2169 x314) (= (x4400 x2098 x2298) x3282) (<= x1110 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1942 x3238) (= x514 x4747) (= (+ x3282 x133) x1110) (= x418 x4627) (<= x3456 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3338 x1299) (<= 0 x3456) (= x1011 x2467) (= x3599 x2217) (= x3279 x2098) (= x494 x4648) (= x4403 x1110) (= x3279 x2487) (= x514 x460) (>= x3704 0) (= x1447 x494) (= x3739 x315) (= x3648 x3976) (= x418 x1755) (<= x3704 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3239 x3279) (= x314 x133) (= x2298 x514) (= x241 x341)) x4669) x114))) (=> (not x4514) x3755))))))))))) (=> (not x4255) x880)))))))))
(assert (x2480 18446744082299486564))
(assert (x3402 x1811))
(assert (x3402 x2988))
(assert (x3402 x4162))
(assert (x3402 x162))
(assert (x3402 x2238))
(assert (=> (<= x1970 10000) (= (x1892 x1970) 0)))
(assert (x3402 x3084))
(assert (= (and x4068 x1364) x174))
(assert (= x312 (and x3418 x326)))
(assert (not (x2480 (x705 x4629 x2987 x4148 x3823 x3687))))
(assert (x3402 x3973))
(assert (x3402 x782))
(assert (x3402 x1539))
(assert (x3402 x2961))
(assert (= x1949 (x4472 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986))))
(assert (x3402 x4725))
(assert (x2890 x3569 1461501637330902918203684832716283019655932542976))
(assert (x1221 x2807))
(assert (x3402 x2517))
(assert (x3402 x677))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007909908414274))
(assert (= (and x1434 (not x4003)) x378))
(assert (x3853 (ite (> x2853 18446744073709551615) 1 0)))
(assert (x2890 x1079 1461501637330902918203684832716283019655932542976))
(assert (x4283 x4419))
(assert (x3402 x4109))
(assert (x3402 x1645))
(assert (x1411 x2306))
(assert (= (and x1267 x4097) x55))
(assert (x3402 x964))
(assert (x2890 x1178 1461501637330902918203684832716283019655932542976))
(assert (x3853 (ite (> x3368 18446744073709551615) 1 0)))
(assert (x3402 x2702))
(assert (x3402 x1721))
(assert (x3402 x4770))
(assert (= x4574 (and x2912 x1526)))
(assert (= x451 (or x3531 x2073)))
(assert (x3402 x4708))
(assert (= x2970 (and (not x1304) x2800)))
(assert (x4488 x292))
(assert (= (x1892 (x571 x1264 x2418 x3471 x4777 x3009 x2336)) (x571 x1264 x2418 x3471 x4777 x3009 x2336)))
(assert (= x4318 x1777))
(assert (= (and (not x1934) x2878) x2341))
(assert (x3051 (x3110 x2422 x3895 x2868)))
(assert (x3402 x4205))
(assert (x3402 x1614))
(assert (= (and x570 x4727) x4554))
(assert (x3402 x1226))
(assert (x3402 x3044))
(assert (x3402 x49))
(assert (= x621 (or (and x3203 (not x351)) x4145)))
(assert (x3402 x2354))
(assert (= 0 (x1892 18446744073709551615)))
(assert (x3402 x1584))
(assert (x2480 18446744073709551163))
(assert (= (or x3835 x2701) x2935))
(assert (x2890 x1883 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1675 (and x2086 x3561)))
(assert (x2890 x660 1461501637330902918203684832716283019655932542976))
(assert (x3402 x2317))
(assert (x1221 x480))
(assert (x2480 18446744073709551355))
(assert (= (and (not x3347) x1266) x3920))
(assert (x3402 x2254))
(assert (x2890 x4832 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3671))
(assert (= x4165 (and x46 x3673)))
(assert (x3402 x3232))
(assert (not (x2480 (x727 64 x4059 4))))
(assert (=> (<= x2798 10000) (= 0 (x1892 x2798))))
(assert (x3402 x1753))
(assert (= x1180 (or x1401 x3564)))
(assert (x2041 x1490))
(assert (x3402 x2843))
(assert (=> (>= 10000 x2560) (= 0 (x1892 x2560))))
(assert (= x2701 (or x2734 x2395)))
(assert (x3402 x2659))
(assert (x3402 x1542))
(assert (x3402 x4444))
(assert (x3402 x1698))
(assert (x3402 x3861))
(assert (x3402 x776))
(assert (= x2345 (and x1915 x4835)))
(assert (x3402 x1554))
(assert (x3402 x589))
(assert (x3402 x4287))
(assert (x3402 x1870))
(assert (x3402 x3945))
(assert (x3402 x1285))
(assert (x3402 x4531))
(assert (x1221 x2590))
(assert (= (=> (and (= x1659 (< 18446744073709551615 x1809)) (= (x1628 x4398) x1809) (= x4398 (+ x282 32))) (and (=> x1659 x2203) (=> (and (not x1659) (and (= x2689 (or (and (< x1950 192) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1950))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1950))) (= (x3584 (+ x4664 x1809)) x3940) (= x1950 (x3042 (- x796 x3940))))) (and (=> (and (and (= x3606 false) (= true x1702) (= true x2901) (= x2274 x2901) (= false x2396)) x2689) x1014) (=> (and (and (= (x3584 (+ x2190 192)) x1874) (= x4364 (= (x3177 (ite (< 18446744073709551615 x1874) 1 0) (ite (> x2190 x1874) 1 0)) 0))) (not x2689)) (and (=> (and (and (= false x1868) (= true x2423) (= true x3618) (= x2274 x2423) (= false x4286)) (not x4364)) x1014) (=> (and x4364 (and (= (= x446 x3953) x2969) (<= x2190 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1628 x3940) x446) (>= x1874 1) (<= x2190 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2190 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x2190 x1874) (= (x2206 1461501637330902918203684832716283019655932542975 x446) x3953))) (and (=> (and x2969 (and (= x2241 (x1628 x4800)) (= x4800 (x3584 (+ x3940 32))) (= x3207 (< 18446744073709551615 x2241)))) (and (=> (and (and (= x3844 (or (and (= (<= x796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1581)) (> x796 x1581)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x796) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1581)))) (= (x3584 (+ x2241 x3940)) x379) (= (x3584 (+ x379 31)) x1581)) (not x3207)) (and (=> (and x3844 (and (= (< 18446744073709551615 x816) x835) (= x816 (x1628 x379)) (= x56 (x3584 (+ x379 32))))) (and (=> (and (and (= (x3584 (+ x1874 x437)) x438) (= x1502 (x3584 (+ x4616 32))) (= x629 (x3584 (+ x816 31))) (= x623 (x3584 (+ x1502 31))) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x623) x437) (= (= (x3177 (ite (< 18446744073709551615 x438) 1 0) (ite (> x1874 x438) 1 0)) 0) x4723) (= x4616 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x629))) (not x835)) (and (=> (not x4723) x511) (=> (and (and (= (> x4081 x796) x1511) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1874) (<= x1874 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3584 (+ x816 x56)) x4081) (= x1140 (x3584 (+ x1874 32))) (< x1874 x438) (<= 1 x438) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1874)) x4723) (and (=> (and (not x1511) (and (= (x2206 1461501637330902918203684832716283019655932542975 x3569) x4150) (= (x3584 (+ 32 x4800)) x530) (= x3569 (x1628 x530)) (= (x3584 (+ x816 x1140)) x702) (= x2812 (= x4150 x3569)) (= x1549 (x3584 (+ 32 x2190))))) (and (=> (not x2812) x24) (=> (and (and (= (x1628 x253) x2962) (= x223 (< 18446744073709551615 x2962)) (= (x3584 (+ x1549 32)) x1887) (= (x3584 (+ 32 x530)) x253)) x2812) (and (=> x223 x2203) (=> (and (and (= x4351 (or (and (<= x796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x288 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x288 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x796)) (> x796 x288)))) (= x288 (x3584 (+ x2005 31))) (= (x3584 (+ x2962 x3940)) x2005)) (not x223)) (and (=> (and x4351 (and (= (> x2233 18446744073709551615) x1310) (= (x3584 (+ x2005 32)) x3941) (= x2233 (x1628 x2005)))) (and (=> (and (not x1310) (and (= x3054 (x3584 (+ x4694 x438))) (= x3809 (x3584 (+ 31 x2233))) (= x2121 (x3584 (+ x2181 32))) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3809) x2181) (= x4694 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1945)) (= x1945 (x3584 (+ 31 x2121))) (= x557 (= 0 (x3177 (ite (< 18446744073709551615 x3054) 1 0) (ite (< x3054 x438) 1 0)))))) (and (=> (not x557) x511) (=> (and (and (>= x3054 1) (< x438 x3054) (= (x3584 (+ x438 32)) x482) (= (x3584 (+ x2233 x3941)) x1787) (<= x438 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (< x796 x1787) x3159) (<= x438 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x438)) x557) (and (=> (and (and (= x3607 (x3584 (+ x2233 x482))) (= (x3584 (+ 32 x1887)) x180) (= (= x403 x2590) x3601) (= x2590 (x1628 x1230)) (= (x2206 1461501637330902918203684832716283019655932542975 x2590) x403) (= x1230 (x3584 (+ x253 32)))) (not x3159)) (and (=> (not x3601) x24) (=> (and (and (= x1629 (< 18446744073709551615 x1290)) (= (x1628 x1404) x1290) (= x165 (x3584 (+ 32 x180))) (= x1404 (x3584 (+ x1230 32)))) x3601) (and (=> x1629 x2203) (=> (and (not x1629) (and (= (or (and (> x796 x1182) (= (<= x1182 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x796))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x796) (> x1182 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x320) (= (x3584 (+ x4608 31)) x1182) (= x4608 (x3584 (+ x3940 x1290))))) (and (=> (and x320 (and (= (x1628 x4608) x23) (= (x3584 (+ 32 x4608)) x413) (= (< 18446744073709551615 x23) x81))) (and (=> (and (not x81) (and (= x84 (x3584 (+ x4708 31))) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x292) x3727) (= (= (x3177 (ite (> x293 18446744073709551615) 1 0) (ite (> x3054 x293) 1 0)) 0) x4548) (= x4708 (x3584 (+ 32 x3727))) (= x293 (x3584 (+ x4585 x3054))) (= x4585 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x84)) (= (x3584 (+ 31 x23)) x292))) (and (=> (and (and (= (x3584 (+ 32 x3054)) x4652) (= (x3584 (+ x23 x413)) x1340) (>= x293 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3054) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3054) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3054) (= (> x1340 x796) x4595) (< x3054 x293)) x4548) (and (=> x4595 x927) (=> (and (and (= (< 1 x1687) x1422) (= x1002 (x3584 (+ x23 x4652))) (= x749 (x3584 (+ 32 x165)))) (not x4595)) (and (=> x1422 x2203) (=> (and (not x1422) (and (= (x561 192) x598) (= (x2206 1461501637330902918203684832716283019655932542975 x598) x1900) (= x3335 (not (= x1942 x1900))) (>= 1461501637330902918203684832716283019655932542975 x4747) (= 2 x3380) (= (x3077 224) x1447))) (and (=> (and x3335 (and (= x2654 (x1001 x2318)) (= x1859 (x2206 255 x2654)) (= (x2206 1461501637330902918203684832716283019655932542975 x598) x74) (= (> x1859 2) x789) (= (x727 64 x1942 x2815) x2318) (= (x727 64 x74 4) x2815))) (and (=> x789 x2203) (=> (and (not x789) (= x71 (ite (not (= x1859 1)) 1 0))) x1710))) (=> (and (not x3335) (= x71 (ite x3335 1 0))) x1710))))))) (=> (not x4548) x511))) (=> x81 x2203))) (=> (not x320) x2714))))))) (=> x3159 x927))))) (=> x1310 x2203))) (=> (not x4351) x2714))))))) (=> x1511 x927))))) (=> x835 x2203))) (=> (not x3844) x2714))) (=> x3207 x2203))) (=> (not x2969) x24))))))))) x3217))
(assert (= (x4472 (x705 x1264 x54 x1258 x384 x4091)) x54))
(assert (= (and x3026 x3419) x2338))
(assert (x4488 x2373))
(assert (x3402 x1936))
(assert (x3402 x4234))
(assert (= (=> (= (= 0 x4525) x2571) (and (=> x2571 x3804) (=> (not x2571) x91))) x1339))
(assert (= 0 (x1892 18446744073709551163)))
(assert (x3402 x2336))
(assert (x3402 x3216))
(assert (x1221 x2487))
(assert (x4488 x3628))
(assert (x1411 x3518))
(assert (x1638 (ite (> x3054 18446744073709551615) 1 0) (ite (> x438 x3054) 1 0)))
(assert (x4488 x308))
(assert (= x3835 (and x4500 x4745)))
(assert (x3402 x4192))
(assert (x2890 x4759 1461501637330902918203684832716283019655932542976))
(assert (= x3720 (=> (and (not (< x3728 x2895)) (= x1294 (x3199 x2928)) (<= x3494 18446744082299486596) (>= x1565 1) (>= 18446744073709551550 x1012) (= x2239 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x101)) (>= 1461501637330902918203684832716283019655932542975 x1155) (>= x2895 100) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x3556) (<= x3556 18446744073709551550)) (>= 18446744073709551615 x458) (not (> x3556 x3256)) (<= 292 x776) (= (x849 288) x1565) (= (+ x2766 x1012) x4512) (>= 18446744073709551615 x4520) (or (>= 18446744073709551550 x3556) (>= x3556 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (<= x1745 18446744082299486304) (= (x4710 x3652) x1155) (<= x3556 18446744073709551549) (not (> x2766 x4512)) (= x4520 (x4710 x2732)) (= x2732 (+ x2385 68)) (<= x3556 18446744073709551549) (<= x3556 18446744073709551550) (= x396 (ite x1952 1 0)) (<= x3556 18446744073709551550) (= (+ 64 x3256) x2766) (<= 288 x4594) (> x2766 x3256) (>= 18446744082299486596 x2895) (> x4512 x2766) (>= 18446744073709551615 x4594) (= (+ x4520 x2732 32) x2895) (= (+ x4762 x458) x3494) (= x4761 (+ 63 x2239)) (>= x3256 1) (<= 324 x3494) (>= 18446744073709551615 x137) (= x1952 (= x1155 x2651)) (= (x4710 x981) x137) (>= 18446744073709551550 x3556) (<= x3556 18446744073709551549) (> x3256 x3556) (= x776 (+ x3652 x137)) (= (+ x2766 32) x1685) (= x1745 (x3042 (- x3728 x3652))) (<= 64 x1745) (= (+ 32 x776) x4762) (< x1425 x3728) (or (>= x3556 115792089237316195423570985008687907853269984665640564039439137263839420088228) (>= 18446744073709551550 x3556)) (<= x3256 18446744073709551550) (= x1201 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4761)) (= (x2206 1461501637330902918203684832716283019655932542975 x1294) x2651) (<= x4512 18446744073709551615) (= (+ x4520 31) x101) (not (> x3494 x3728)) (> x3728 x2342) (= (+ x2732 31) x1425) (= x3652 (+ 4 x4594)) (= x3108 (+ x458 x1685)) (>= 18446744073709551615 x2385) (= x3324 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2916)) (not (> x3256 x2766)) (= x458 (x4710 x776)) (= x2928 (x1453 320)) (= (+ x776 31) x2342) (= (+ 31 x458) x2916) (= x2385 (x4710 196)) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x942) x1012) (>= 18446744082299486564 x776) (= (+ x3652 32) x981) (= (+ 63 x3324) x942) (>= x4512 66) (= x3256 (x3584 (+ x3556 x1201)))) (and (=> (and (not x1952) (= 1 x396)) x1319) (=> x1952 x1161)))))
(assert (x3402 x3155))
(assert (x3402 x4039))
(assert (= (and (not x4075) x277) x3538))
(assert (x3402 x2974))
(assert (= 0 (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639903)))
(assert (x1411 x401))
(assert (= x475 (or x3101 x4236)))
(assert (x1411 x1884))
(assert (x3402 x3875))
(assert (x3402 x764))
(assert (x3402 x2448))
(assert (x3402 x728))
(assert (x3402 x1170))
(assert (x3402 x2350))
(assert (x3402 x3380))
(assert (x3402 x3255))
(assert (x1411 x1088))
(assert (x1411 x912))
(assert (= x4455 (and x3966 x2828)))
(assert (x3402 x3451))
(assert (x3402 x459))
(assert (x3402 x2389))
(assert (= (x1892 (x1941 x4629 x534 x1177 x2798)) (x1941 x4629 x534 x1177 x2798)))
(assert (x3402 x3227))
(assert (x3402 x4617))
(assert (= x2546 (or x3738 x1823)))
(assert (x1411 x3754))
(assert (x3402 x1528))
(assert (= x4864 (and x2478 x191)))
(assert (x3402 x4737))
(assert (= x280 (x3716 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918))))
(assert (= (or x914 x3781) x4097))
(assert (x3402 x1408))
(assert (x3402 x4632))
(assert (x3402 x4800))
(assert (=> (<= x1447 10000) (= 0 (x1892 x1447))))
(assert (x3402 x2438))
(assert (x1411 x2487))
(assert (= (and x2859 (not x3944)) x4390))
(assert (= x3146 (and (not x1915) x4835)))
(assert (x3402 x1508))
(assert (= x2309 (and x2621 x3887)))
(assert (x3402 x437))
(assert (x3402 x97))
(assert (x3402 x1643))
(assert (x4488 x4496))
(assert (= x3733 (and x2345 x187)))
(assert (x3402 x2897))
(assert (x3402 x3489))
(assert (=> (>= 10000 x4148) (= (x1892 x4148) 0)))
(assert (x2041 x308))
(assert (not (x2480 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986))))
(assert (x2890 x2487 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3514))
(assert (= x2171 (and x2482 x3632)))
(assert (x3402 x1687))
(assert (x1221 x2994))
(assert (x3402 x4496))
(assert (= x3500 (or (and x3354 x1101) (and x348 x4297))))
(assert (x2890 x2287 32))
(assert (x3402 x577))
(assert (x3402 x988))
(assert (= x3637 (and (not x1886) x548)))
(assert (x3402 x2110))
(assert (x3402 x2604))
(assert (x3402 x1000))
(assert (x2890 x623 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2479 (and (not x2162) x2248)))
(assert (=> (>= 10000 x2987) (= (x1892 x2987) 0)))
(assert (x3971 32 x1759))
(assert (x3402 x1768))
(assert (=> (<= x536 10000) (= (x1892 x536) 0)))
(assert (x1411 x1490))
(assert (= x149 (and x972 x2147)))
(assert (x3402 x4782))
(assert (x2480 25769804192))
(assert (x2041 x2003))
(assert (= x3009 (x1082 (x571 x1264 x2418 x3471 x4777 x3009 x2336))))
(assert (x3402 x1927))
(assert (= x3352 (and x120 x3721)))
(assert (x1221 x4759))
(assert (x3402 x3482))
(assert (x3402 x3537))
(assert (x3402 x213))
(assert (x3051 (x4400 x2098 x2298)))
(assert (= x2458 (and (not x3428) x229)))
(assert (x1411 x3160))
(assert (x3402 x1615))
(assert (x2480 18446744073709551550))
(assert (x3402 x1794))
(assert (= 0 (x1892 18446744082299486532)))
(assert (x3402 x2646))
(assert (x1221 x26))
(assert (=> (>= 10000 x3823) (= 0 (x1892 x3823))))
(assert (x3402 x4582))
(assert (x3402 x3249))
(assert (x3402 x885))
(assert (x3402 x457))
(assert (x3402 x4823))
(assert (x3402 x4722))
(assert (x2041 x3518))
(assert (= x3415 (and (not x4174) x2656)))
(assert (= x1073 (or x4243 x2933)))
(assert (= 0 (x1892 4294967295)))
(assert (x3402 x2305))
(assert (x3402 x635))
(assert (= (and x1888 (not x2939)) x1092))
(assert (x2890 x2340 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1463))
(assert (x2890 x4310 32))
(assert (x1081 x2096))
(assert (x3402 x3050))
(assert (x3402 x2582))
(assert (x3402 x4310))
(assert (= (=> (and (= true x3400) (= x3400 x2274) (= false x2148) (= true x3355) (= false x1603)) x1014) x24))
(assert (x3402 x1549))
(assert (x3402 x716))
(assert (x3402 x4845))
(assert (x3402 x1039))
(assert (= x1613 (and x1344 (not x584))))
(assert (= (x3716 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731)) x1295))
(assert (x3402 x1845))
(assert (= x3936 (=> (and (= false x2093) (= false x2611) (= x1362 true) (= x2274 x2432) (= true x2432)) x1014)))
(assert (x3402 x228))
(assert (= x937 (and (not x355) x38)))
(assert (=> (<= x598 10000) (= 0 (x1892 x598))))
(assert (x4488 x4216))
(assert (x3402 x4761))
(assert (x3402 x1988))
(assert (= (x727 64 x1942 x2750) (x1892 (x727 64 x1942 x2750))))
(assert (x3402 x4392))
(assert (= (and x4539 x1492) x2445))
(assert (x3402 x572))
(assert (x3402 x388))
(assert (= x1749 (and x3732 (not x168))))
(assert (x3402 x2183))
(assert (= (and x2954 (not x3814)) x740))
(assert (x3402 x2129))
(assert (x2041 x4756))
(assert (=> (>= 10000 x2986) (= 0 (x1892 x2986))))
(assert (x3402 x2241))
(assert (x2890 x820 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1867))
(assert (= (and x4455 x4255) x2757))
(assert (x3402 x1942))
(assert (x1638 (ite (> x2853 18446744073709551615) 1 0) (ite (> x1469 x2853) 1 0)))
(assert (x3402 x3527))
(assert (x3402 x3028))
(assert (x3402 x4852))
(assert (x3402 x1632))
(assert (= (x4472 (x571 x1264 x2418 x3471 x4777 x3009 x2336)) x2418))
(assert (x2890 x101 32))
(assert (x4488 x564))
(assert (x3402 x70))
(assert (= (=> (and (= x4861 (not (> x4772 1))) (= x207 (x3584 (+ 32 x354))) (= (x1628 324) x4394) (= x1173 (x3584 (+ 32 x2456))) (= x2456 (x3584 (+ 32 x207))) (= (x1628 292) x2556)) (and (=> (= x1302 x2853) x4241) x4861)) x4341))
(assert (x3402 x4148))
(assert (x3402 x1872))
(assert (x1221 x1294))
(assert (x3971 32 x1273))
(assert (= (=> (and (and (and (= x3873 x4134) (and (and (and (= x2953 x1133) (and (and (and (and (and (and (and (= x1773 x4365) (= x4308 (+ x670 96))) (and (and (= x3126 x4008) (= x2557 (+ x670 128))) (and (and (= (+ 192 x2052) x1000) (= x3537 (x3042 (- x4579 x670))) (= x3404 x3252) (= x3855 (+ 32 x4579)) (= (+ 32 x3855) x2052) (= (x3042 (- x3855 x670)) x3092) (= (+ x3855 32) x791) (= (+ x670 192) x3035) (= x4749 (+ x670 224)) (= (x3042 (- x2052 x670)) x178) (= (+ 160 x670) x4618) (= (+ x4579 32) x2856)) (and (and (= (* x3472 32) x2824) (= x541 (+ 32 x2824 x1000)) (>= x2824 x4387) (= x4185 x25) (= x1393 (x3042 (- x1000 x2052))) (> x4387 x1847) (= (+ x2052 64) x1231) (= x1457 (+ 32 x2052)) (= x2735 (+ 32 x1000)) (<= 0 x3472) (= (* 32 (- x3472 1)) x1847) (<= x3472 134217728) (= x4387 x2138)) (and (and (= (+ x3480 31) x4805) (= x4126 (+ x1649 x3029)) (= x4098 false) (= (x2829 132) x2353) (= x1649 (+ x3480 32)) (>= 1461501637330902918203684832716283019655932542975 x2353) (= x1940 (x2829 100)) (= (x2829 68) x1107) (< x3023 x3638) (<= 100 x4126) (= (+ 32 x4418) x1272) (not (> x4126 x4419)) (= x1347 (+ 63 x619)) (= x2043 (x2829 164)) (<= x2449 6442451295) (= x3432 x3638) (<= 1 x2449) (= (x2829 196) x2636) (= x3387 2657635784) (<= 0 x3977) (>= x1920 x3638) (= x4075 (< x1649 x4126)) (<= x2043 1461501637330902918203684832716283019655932542975) (> x4419 x4805) (= (* x3977 32) x1920) (<= x389 25769804960) (= x4419 x1066) (= (x2950 x1970) x2049) (= (+ 384 x2449) x3794) (= (* 32 x1759) x619) (>= 127 x1722) (= (+ 160 x2052) x3292) (>= 1461501637330902918203684832716283019655932542975 x2636) (>= 1461501637330902918203684832716283019655932542975 x1940) (= x1066 (+ 32 x4418 x1920)) (= x2963 x78) (= x3480 (+ x389 68)) (>= 201326601 x1759) (<= x1722 127) (<= x4126 25769805060) (<= 1 x2049) (= x1759 (x2829 x3480)) (= x389 (x2829 228)) (= false x4024) (>= 134217728 x3977) (= (* 128 x1759) x3029) (= (x3042 (- x4418 x2052)) x3115) (= x3023 (* 32 (- x3977 1))) (= x2449 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1347))) (and (= (x3042 (- x541 x2052)) x290) (>= x4788 x2232) (= (+ 128 x2052) x4315) (>= 134217728 x4855) (= x649 x286) (= x3277 (+ x541 32)) (= x2709 x2232) (>= x4855 0) (= x962 (* (- x4855 1) 32)) (= (* 32 x4855) x4788) (= x4418 (+ x541 32 x4788)) (= (+ x2052 96) x4736) (< x962 x2232))))))) (and (= x3391 (+ x670 64)) (= x1184 x2848))) (and (= x2389 (+ x670 32)) (= x531 x985))) (and (= x42 x70) (= (+ 256 x670) x4579) (= x1433 (- x670 4)) (= (+ 32 x4668) x4826) (<= x3898 134217728) (> x42 x4383) (= x3049 x4253) (= (* 32 x3898) x4446) (= x670 (+ x4668 32 x4446)) (>= x3898 0) (= x589 x1433) (>= x4446 x42) (= x4035 (- x4668 388)) (= (* (- x3898 1) 32) x4383))) (and (>= 134217728 x982) (>= x982 0) (= x1167 (* (- x982 1) 32)) (= (+ x2965 32 x1359) x4668) (= x762 x2301) (= (- x2965 388) x1388) (= x1196 x1764) (= (* x982 32) x1359) (< x1167 x1764) (= (+ x2965 32) x3717) (>= x1359 x1764))) (and (= x2965 (+ x4665 612)) (= (* 32 (- x4443 1)) x4328) (<= 0 x4443) (= x4665 (* 32 x4443)) (>= 134217728 x4443) (= x2077 x3695) (= x4582 x1094) (> x3695 x4328) (>= x4665 x3695)))) (= x4626 x4493)) (= x1451 x1071))) (= x3978 x1035)) (and (<= x3432 4294967295) (= x4427 true) (= x2058 false) (= false x3623) (<= 1284 x4419) (= false x3000) (= false x2538) (= false x274) (not x4842) (= x318 64) (= x1448 false) (<= x4419 25769805060) (= x2042 true) (= true x4305) (= 0 x3185) (>= 4294967295 x2709) (= x807 0) (not x714) (<= x2138 4294967295))) (and (=> (and (= x3794 x1059) (not x4075)) x2215) (=> x4075 x4441))) x1319))
(assert (= (and x3441 x646) x643))
(assert (x3402 x3657))
(assert (= x1979 (=> (and (= x3825 (x3677 x3631)) (= (not (< 1 x3825)) x3132)) (and x4318 x3132))))
(assert (x2890 x677 32))
(assert (x1221 x3754))
(assert (x3402 x3565))
(assert (x2041 x3089))
(assert (x3402 x542))
(assert (x1411 x10))
(assert (x3402 x3276))
(assert (x2480 12884902500))
(assert (=> (>= 10000 x2238) (= 0 (x1892 x2238))))
(assert (= (and (not x1278) x2076) x3561))
(assert (x3402 x2398))
(assert (= (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (= (and (not x301) x3920) x2800))
(assert (x3402 x2975))
(assert (x2041 x598))
(assert (x2041 x480))
(assert (x1221 x2003))
(assert (x1411 x48))
(assert (x3402 x222))
(assert (x4488 x942))
(assert (= x4393 (=> (= x3374 (not (< 1 x4772))) (and x3374 x1438))))
(assert (x3402 x2962))
(assert (x3402 x1214))
(assert (x2480 25769804992))
(assert (x3402 x4643))
(assert (= x2608 (=> (and (and (<= 0 x3049) (= (< 0 (x2950 x3950)) x3025) (<= x70 4294967295) (<= 1 x1970) (<= x3978 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x4245 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3982 true) (= 0 x3295) (>= 1461501637330902918203684832716283019655932542975 x728) (<= x1094 1461501637330902918203684832716283019655932542975) (= 0 x4196) (= x181 true) (<= x3404 1461501637330902918203684832716283019655932542975) (= 0 x3535) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1365) (>= x3873 0) (<= 0 x4125) (<= 0 x3404) (<= 0 x286) (not (= x728 x1970)) (>= x531 0) (= x297 (< 0 (x2950 x728))) (>= 1461501637330902918203684832716283019655932542975 x4251) (<= 0 x1451) (= 0 x4815) (<= x1184 1461501637330902918203684832716283019655932542975) (= 0 x3837) (<= 0 x3126) (>= 1461501637330902918203684832716283019655932542975 x1773) (= x2462 0) x3672 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1873) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1136) (= x2574 true) (<= 0 x1773) (<= x2963 1461501637330902918203684832716283019655932542975) (<= x3873 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3126) (>= x25 0) (>= x762 0) (= x1896 0) (<= x3783 1461501637330902918203684832716283019655932542975) (>= x2963 0) (>= 1461501637330902918203684832716283019655932542975 x3950) (>= 12884902532 x3608) (not (= x728 x3950)) (>= x959 0) (<= x25 1461501637330902918203684832716283019655932542975) (>= x4626 0) (>= 1461501637330902918203684832716283019655932542975 x959) (>= 1461501637330902918203684832716283019655932542975 x152) (<= x2077 4294967295) (<= x4125 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3608 644) (>= x1094 0) (= x1893 true) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2116) (>= x2116 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x531) x297 (= 32 x870) (>= 1461501637330902918203684832716283019655932542975 x286) (<= 0 x3978) (<= 0 x3783) (>= x1873 0) (>= 1461501637330902918203684832716283019655932542975 x3049) (>= x941 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4300) x3025 (not (= x3950 x1970)) (>= 1461501637330902918203684832716283019655932542975 x762) (<= 0 x1136) (<= x2953 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1451) (>= x4300 0) (= x3672 (< 0 (x2950 x1970))) (>= x1365 0) (<= x4626 1461501637330902918203684832716283019655932542975) (<= 1 x728) (<= 0 x2953) (= x96 0) (<= x941 1461501637330902918203684832716283019655932542975) (<= x1196 4294967295) (<= 0 x4245) (>= 1461501637330902918203684832716283019655932542975 x1970) (<= x2508 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1184) (>= x3950 1) (<= 0 x2508)) (and (= x3978 x1557) (and (and (= x994 x1451) (and (= x4626 x1932) (and (and (and (= (* (- x1242 1) 32) x3512) (<= 0 x1242) (= x2077 x4257) (<= x4257 x1758) (> x4257 x3512) (<= x1242 134217728) (= x164 x1094) (= x901 (+ x1758 580)) (= (* 32 x1242) x1758)) (and (and (<= x3478 134217728) (= x529 (+ x901 32 x3274)) (= (* (- x3478 1) 32) x34) (< x34 x1353) (= x4409 (- x901 356)) (= x3274 (* x3478 32)) (= (+ 32 x901) x65) (<= x1353 x3274) (= x523 x762) (= x1196 x1353) (<= 0 x3478)) (and (> x3608 x3499) (= x974 (* 128 x4859)) (= x2577 (+ 384 x4277)) (>= x1048 1) (<= x2604 1461501637330902918203684832716283019655932542975) (= false x1689) (= x2140 (+ 32 x1036)) (= x998 (x2512 132)) (= (+ 32 x529) x329) (= x1439 (- x529 356)) (<= x4541 12884902532) (= (+ x162 36) x1036) (= x1048 (x2950 x1970)) (>= 1461501637330902918203684832716283019655932542975 x1157) (<= x4277 3221225663) (<= x4290 x1566) (= (* (- x2966 1) 32) x4001) (>= x2966 0) (<= 1 x4277) (= x4277 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4310)) (= (+ x3759 63) x4310) (= (+ x2140 x974) x4541) (= x1157 (x2512 100)) (<= x3980 1461501637330902918203684832716283019655932542975) (= x3200 false) (= x516 (> x4541 x2140)) (= x1794 x3049) (<= x1456 127) (= x3499 (+ 31 x1036)) (= x2132 (x2512 36)) (<= x1456 127) (<= 68 x4541) (= x1546 x3608) (= x162 (x2512 196)) (= x1546 (+ 32 x529 x1566)) (= (x2512 68) x3980) (= (x2512 x1036) x4859) (= x3759 (* x4859 32)) (= x3406 1622688491) (<= x2966 134217728) (= x1566 (* x2966 32)) (>= 100663300 x4859) (not (> x4541 x3608)) (> x4290 x4001) (= x4290 x70) (= x2604 (x2512 164)) (<= x162 12884902464) (<= x998 1461501637330902918203684832716283019655932542975)))) (= x4503 x2953)))) (= x2809 x3873)))) (and (=> (and (= x3214 x2577) (not x516)) x368) (=> x516 x1623)))))
(assert (= (and (not x563) x1481) x717))
(assert (and (= (x3629 27 3) 81) (= 27 (x3629 9 3)) (= 9 (x3629 3 3)) (= 81 (x3629 9 9))))
(assert (x3402 x1143))
(assert (x3402 x1793))
(assert (=> (>= 10000 x4040) (= (x1892 x4040) 0)))
(assert (x3402 x1157))
(assert (x2041 x157))
(assert (= x821 (x381 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986))))
(assert (= (or (and x1969 x2352) x2679 (and x4483 x789) (and x313 x3588) x2776 (and x1704 x3207) x1418 x686 x1518 (and x223 x2218) (and x172 x902) x1053 (and x192 x86) (and x3169 x81) (and x1152 x854) (and x3903 (not x410)) (and x1307 x1310) x1675 (and x1659 x1718) x3791 (and x4473 x148) x4828 (and x1075 x1921) x1219 (and x1985 x1862) (and x2131 x247) x1099 (and (not x2834) x4016) x2170 x395 x4212 (and x1596 x1629) (and x4221 x3138) (and x1422 x3520) x1166 x3798 x2390 x3722 x273 (and x2821 x1074) x4442 (and x3904 x835) x2663 x1276 x1519 x4107) x1620))
(assert (= x247 (and x4574 x1778)))
(assert (x3853 (ite (> x1874 x438) 1 0)))
(assert (x3402 x3406))
(assert (= x1053 (and x3347 x1266)))
(assert (x3402 x1826))
(assert (x4488 x1459))
(assert (= x3520 (and x1086 (not x4595))))
(assert (= 0 (x1892 18446744082299486304)))
(assert (x2041 x3079))
(assert (= x1307 (and x2819 x4351)))
(assert (x3402 x4557))
(assert (x3402 x4717))
(assert (x3402 x4306))
(assert (x3402 x2176))
(assert (x3402 x1036))
(assert (=> (<= x4094 10000) (= (x1892 x4094) 0)))
(assert (x3402 x4596))
(assert (x2041 x4309))
(assert (= x4563 (and x1497 (not x839))))
(assert (x2890 x3497 1461501637330902918203684832716283019655932542976))
(assert (x2890 x2189 1461501637330902918203684832716283019655932542976))
(assert (x4488 x84))
(assert (x3402 x1906))
(assert (x1411 x2240))
(assert (x2041 x3569))
(assert (x2480 12884902404))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639903))
(assert (= (or x3548 x3318 x1114 x3708) x262))
(assert (x3402 x412))
(assert (x3402 x4314))
(assert (=> (<= x2697 10000) (= 0 (x1892 x2697))))
(assert (= (and x148 (not x4473)) x1075))
(assert (= (x727 64 x1942 x2815) (x1892 (x727 64 x1942 x2815))))
(assert (x3402 x4363))
(assert (= x1704 (and x1857 x2969)))
(assert (x2480 25769804800))
(assert (x3402 x2884))
(assert (x3402 x3750))
(assert (= (=> (and (= (x3865 x964) x1539) (= (x2206 1461501637330902918203684832716283019655932542975 x1202) x720) (= x1614 (x3584 (+ 32 x1210))) (= x1753 (x2206 1461501637330902918203684832716283019655932542975 x2189)) (= x964 (x3584 (+ x1532 32))) (= (x3584 (+ 32 x964)) x4396) (= (x2206 1461501637330902918203684832716283019655932542975 x1539) x2999) (= x577 (x3584 (+ x803 32))) (= x2811 (x1907 x4621)) (= x1210 (x3584 (+ x3173 32))) (= x1532 (x3584 (+ x1560 32))) (= (x3584 (+ 32 x577)) x3173) (= x1049 (x3250 x4872)) (= (x3259 x1532) x1202) (= x774 (not (> x4675 1))) (= x2189 (x1740 x4396)) (= x803 (x3584 (+ x2419 32))) (= x4872 (x3584 (+ x4396 32))) (= x4621 (x3584 (+ x4872 32))) (= x2419 (x3584 (+ 32 x3427)))) (and x774 (=> (= x337 x1614) x4116))) x2064))
(assert (x1411 x1883))
(assert (= (and x143 x1647) x1375))
(assert (not (x2480 (x727 64 x1942 x2750))))
(assert (= (=> (and (= (x3584 (+ x2366 32)) x1826) (= x757 (x3584 (+ x2375 32))) (= x2623 (x3584 (+ x439 32))) (= (x3677 x439) x4232) (= (x3042 (- x2366 x352)) x3517) (= (x2097 320) x439) (= (< 0 x4232) x3104)) (and (=> (and x3104 (and (= (< x3521 6) x2796) (= (x369 x1507) x3521) (= (x4342 x2623) x1507))) (and (=> x2796 x2156) (=> (not x2796) x3943))) (=> (and (= x1826 x506) (not x3104)) x3251))) x4651))
(assert (x3402 x2644))
(assert (x1411 x3809))
(assert (= 64 (x1286 (x727 64 x74 4))))
(assert (= x826 (and x2045 (not x1694))))
(assert (x3402 x3503))
(assert (x3402 x1961))
(assert (= (x1892 25769804800) 0))
(assert (= x4299 (=> (and (= x2213 false) (= true x2685) (= x2274 x2054) (= true x2054) (= x3818 false)) x1014)))
(assert (x3402 x2561))
(assert (x2041 x580))
(assert (x3971 32 x3410))
(assert (x3402 x3497))
(assert (= (x1286 (x727 64 x4059 4)) 64))
(assert (x2480 18446744073709551611))
(assert (x3402 x480))
(assert (= x1161 (=> (and (= x3063 (x1436 x2766)) (= x4147 (+ 32 x2766)) (<= 1 x3956) (<= x4512 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2354 (x1400 x1195)) (= x1402 (x3042 (- x349 32))) (= x211 (x3584 (+ x4512 32))) (> x3956 x4512) (= x2644 (x3584 (+ 32 x4512))) (= x4680 (>= 224 x4629)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4512) (= (x849 288) x3871) (>= x3871 1) (= (x3042 (- x3956 x4512)) x349) (= (x3584 (+ x3675 32)) x1195) (= x3675 (x1453 320)) (= (x3584 (+ x211 x3063)) x3956) (= (x4866 x4512) x4629) (<= x4512 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and x4680 (=> (and (= (x3584 (+ 96 x2644)) x2414) (= (x518 x2414) x4738) (= x2906 (x3042 (- x3176 x3956))) (= (x3584 (+ 128 x2644)) x1827) (= (x518 x4531) x2798) (= x3231 (x3584 (+ x2644 32))) (= x2238 (x518 x4823)) (= x4094 (x518 x2918)) (= x2702 (x518 x1838)) (= x3090 (x518 x3780)) (= (x3584 (+ 32 x3956)) x644) (= x1264 (x582 x3956)) (= x2614 (x3584 (+ x2644 160))) (<= 1 x3176) (= (ite (= x4629 0) x3930 (ite (>= 32 x4629) x513 (ite (<= x4629 64) x295 (ite (<= x4629 96) x4836 (ite (<= x4629 128) x4681 (ite (>= 160 x4629) x4214 (ite (>= 192 x4629) x4577 (ite (<= x4629 224) x3496 x4213)))))))) x703) (= (x3584 (+ 64 x2644)) x876) (= (x518 x2733) x3687) (= (x3584 (+ 96 x2644)) x2733) (= x1686 (x3584 (+ 64 x2644))) (= (x518 x1827) x2448) (= (x3584 (+ 32 x2644)) x2281) (= (x3584 (+ x2644 32)) x3451) (= x3481 (x3584 (+ 64 x2644))) (= x3496 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273)) (= (x518 x2644) x534) (= (x1582 0) x3930) (= (x3584 (+ x2644 32)) x2918) (= x3780 (x3584 (+ 128 x2644))) (= x4402 (x518 x876)) (= (x518 x2644) x2271) (= x1008 (x203 x2354)) (= x2925 (>= 224 x1264)) (= (x3584 (+ 96 x2644)) x2299) (= (x1992 x4629 x675) x513) (= x4135 (x3584 (+ 192 x2644))) (= (x518 x4135) x4273) (= (x518 x2281) x4040) (<= x3956 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3753 (x518 x1562)) (= x393 (x518 x2644)) (= x4684 (x3584 (+ 128 x2644))) (= (x3584 (+ x2644 96)) x4823) (= x4577 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)) (<= x3956 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3176 (x3584 (+ x1008 x782))) (= x1177 (x518 x3451)) (= x3918 (x518 x2614)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3956) (= x4214 (x571 x4629 x3171 x4094 x4402 x885 x2448)) (= (x3042 (- x2906 32)) x4617) (= (x3584 (+ 32 x3956)) x782) (= x1598 (x518 x222)) (= x885 (x518 x2299)) (= (x3584 (+ x2644 32)) x222) (= x4681 (x705 x4629 x2987 x4148 x3823 x3687)) (= (x1941 x4629 x534 x1177 x2798) x4836) (= x1838 (x3584 (+ x2644 160))) (= (x3584 (+ x2644 32)) x590) (= x295 (x727 x4629 x2271 x4040)) (= x3249 (x518 x590)) (= (x518 x2644) x3171) (= (x518 x2644) x2987) (= (x3584 (+ x2644 64)) x4531) (= x3811 (x518 x2644)) (= x675 (x518 x2644)) (> x3176 x3956) (= x3331 (x3584 (+ 32 x2354))) (= (x3584 (+ x2644 64)) x1562) (= x280 (x518 x4684)) (= (x518 x3481) x3823) (= x4148 (x518 x3231)) (= x809 (x518 x1686))) (and x2925 (=> (and (= (x2765 x973) x4091) (= (x2765 x644) x1522) (= x4218 (x2765 x992)) (= x340 (x3584 (+ x644 64))) (= (x3584 (+ 32 x644)) x2865) (= (x3584 (+ 96 x644)) x1021) (= (x2765 x631) x4777) (= x2837 (ite (= x1264 0) x1109 (ite (<= x1264 32) x2990 (ite (<= x1264 64) x128 (ite (<= x1264 96) x2441 (ite (<= x1264 128) x2940 (ite (<= x1264 160) x4685 (ite (<= x1264 192) x1291 (ite (>= 224 x1264) x2410 x1189))))))))) (= x1226 (x3584 (+ x644 64))) (= x800 (x2765 x4590)) (= (x1992 x1264 x890) x2990) (= (x2765 x644) x2526) (= x2418 (x2765 x644)) (= (x3584 (+ x644 96)) x4120) (= (x3584 (+ x644 32)) x4102) (= (x2765 x4102) x1285) (= x128 (x727 x1264 x1522 x3093)) (= (x2765 x986) x3471) (= x2940 (x705 x1264 x54 x1258 x384 x4091)) (= (x2765 x2991) x2697) (= (x2765 x340) x384) (= (x3584 (+ x644 32)) x986) (= (x3584 (+ x644 128)) x2015) (= (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731) x2410) (= x2991 (x3584 (+ x644 64))) (= x3009 (x2765 x4120)) (= (x3584 (+ 32 x644)) x2195) (= x4269 (x3584 (+ x644 160))) (= (x2765 x1021) x80) (= x631 (x3584 (+ x644 64))) (= (x1582 0) x1109) (= x973 (x3584 (+ 96 x644))) (= x890 (x2765 x644)) (= (x2765 x4269) x1227) (= (x2765 x644) x3302) (= (x2765 x2015) x1295) (= (x3584 (+ 160 x644)) x2380) (= x4451 (x3584 (+ x644 32))) (= (x3584 (+ x644 96)) x4590) (= x992 (x3584 (+ x644 64))) (= x2209 (x3584 (+ 192 x644))) (= (x2765 x644) x1949) (= x2910 (x3584 (+ x644 128))) (= (x2765 x2539) x3093) (= (x2765 x3841) x2336) (= (x2765 x4451) x1258) (= (x2765 x2380) x2986) (= (x2765 x2195) x3945) (= (x2765 x1226) x821) (= (x571 x1264 x2418 x3471 x4777 x3009 x2336) x4685) (= (x3584 (+ x644 128)) x3841) (= (x3611 x1264 x1949 x536 x821 x80 x2560 x2986) x1291) (= x54 (x2765 x644)) (= x2837 x703) (= (x3584 (+ 32 x644)) x2539) (= (x2765 x2865) x536) (= x1510 1) (= x2441 (x1941 x1264 x3302 x3945 x4218)) (= x2560 (x2765 x2910)) (= x4731 (x2765 x2209))) x1319)))))))
(assert (x3402 x3424))
(assert (> (x727 64 x1836 x434) 10000))
(assert (x3402 x3764))
(assert (= x3203 (and x38 x355)))
(assert (= x321 (and x4591 x1613)))
(assert (x1081 x265))
(assert (x3402 x2022))
(assert (= (or x4141 x3693) x3915))
(assert (x3402 x1002))
(assert (x3402 x2440))
(assert (x3402 x4220))
(assert (x2890 x912 1461501637330902918203684832716283019655932542976))
(assert (x3402 x2082))
(assert (x3971 128 x2332))
(assert (x3402 x711))
(assert (x1411 x2590))
(assert (x3402 x536))
(assert (x2041 x4832))
(assert (x3402 x1457))
(assert (< (x705 x1264 x54 x1258 x384 x4091) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1298 (and x4748 (not x3181))))
(assert (=> (<= x4629 10000) (= (x1892 x4629) 0)))
(assert (= x3661 (=> (and (= false x3725) (= x2274 x4397) (= false x2443) (= true x4397) (= true x3281)) x1014)))
(assert (x3402 x1227))
(assert (=> (>= 10000 x1377) (= (x1892 x1377) 0)))
(assert (= x2823 (or x533 x2527)))
(assert (< (x1941 x1264 x3302 x3945 x4218) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x1892 12884902304)))
(assert (x2041 1461501637330902918203684832716283019655932542976))
(assert (x2041 x4845))
(assert (x3402 x1529))
(assert (x2480 18446744073709551357))
(assert (= x333 (and x1255 (not x1493))))
(assert (x3402 x1208))
(assert (x2041 x1178))
(assert (x3402 x332))
(assert (x3402 x1677))
(assert (x3402 x2487))
(assert (= x194 (and (not x1802) x2445)))
(assert (x3402 x2189))
(assert (x3402 x4522))
(assert (= (x2161 (x705 x1264 x54 x1258 x384 x4091)) x1258))
(assert (x2890 x2994 1461501637330902918203684832716283019655932542976))
(assert (= (and x3448 (not x3078)) x3721))
(assert (x3402 x1155))
(assert (x2041 x3289))
(assert (x3402 x2362))
(assert (x2890 x3225 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2491))
(assert (x3402 x3315))
(assert (= (x1286 (x571 x4629 x3171 x4094 x4402 x885 x2448)) x4629))
(assert (x2041 x1459))
(assert (x3402 x1607))
(assert (x3971 32 x2012))
(assert (x2890 x3089 32))
(assert (x3402 x4022))
(assert (x3971 128 x3890))
(assert (x3402 x3634))
(assert (=> (>= 10000 x3171) (= 0 (x1892 x3171))))
(assert (x3402 x2003))
(assert (x3402 x2195))
(assert (x3402 x1719))
(assert (x3402 x2373))
(assert (x3402 x4136))
(assert (= x2383 (and x1671 x977)))
(assert (x3402 x1023))
(assert (< 10000 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273)))
(assert (x3402 x1975))
(assert (x3402 x3096))
(assert (x3051 (x4000 x3736 x3532 x1130)))
(assert (x3402 x3252))
(assert (x3402 x3862))
(assert (x3402 x2851))
(assert (x3402 x1809))
(assert (x1081 x2250))
(assert (x3402 x1732))
(assert (x3402 x1292))
(assert (= (and (not x2267) x1309) x1712))
(assert (x1411 x308))
(assert (= (and (not x139) x2665) x4060))
(assert (x3402 x3100))
(assert (x3402 x2534))
(assert (= (or x2546 x1548) x191))
(assert (x3402 x359))
(assert (= x2638 (and x3566 x3957)))
(assert (not (x2480 (x727 64 x74 4))))
(assert (x3402 x4089))
(assert (= x1596 (and x3601 x3568)))
(assert (= x2996 (and x620 x3644)))
(assert (x1411 x580))
(assert (x1411 x660))
(assert (x3402 x1320))
(assert (x3402 x4418))
(assert (= x43 (and (not x3560) x3703)))
(assert (x3402 x2853))
(assert (x2890 x1490 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2619 (and (not x2855) x4327)))
(assert (= x547 (and x2584 x79)))
(assert (= (and x1791 (not x832)) x289))
(assert (x3402 x4154))
(assert (x2041 x3577))
(assert (= x3659 (and x4822 (not x2689))))
(assert (x3402 x3871))
(assert (x2890 x3197 32))
(assert (x3402 x214))
(assert (= x735 (and (not x143) x1647)))
(assert (x3402 x1182))
(assert (x2480 12884902304))
(assert (= x114 x567))
(assert (x3402 x1342))
(assert (x2041 x820))
(assert (x1411 x653))
(assert (x3402 x1100))
(assert (x3402 x4485))
(assert (< 10000 (x571 x1264 x2418 x3471 x4777 x3009 x2336)))
(assert (x1411 x1079))
(assert (= (=> (and (= (x3584 (+ 32 x134)) x4323) (= x3876 (x3584 (+ x4184 32))) (= x134 (x3584 (+ 32 x3394))) (= x4289 (not (> x3562 1))) (= x4184 (x3584 (+ x4323 32))) (= x1816 (x3584 (+ 32 x4367))) (= x3337 (x3584 (+ 32 x2506))) (= x4756 (x4448 x1816)) (= x140 (x1037 x2506)) (= x4265 (x2206 1461501637330902918203684832716283019655932542975 x4756)) (= x2506 (x3584 (+ 32 x1816))) (= x4580 (x1 x3337))) (and (=> (= x3876 x4690) x991) x4289)) x2653))
(assert (x3402 x4513))
(assert (x3971 32 (- x3478 1)))
(assert (x1221 x4660))
(assert (= (and x3810 x1097) x427))
(assert (x3402 x3225))
(assert (= (and x1885 (not x2016)) x1005))
(assert (= x2893 (=> (and (= x2174 false) (= x2274 x1700) (= x1700 true) (= x3325 false) (= true x3833)) x1014)))
(assert (x3402 x4589))
(assert (= x2348 (or (and (not x2107) x170) (and x1324 (not x2652)) (and (not x2793) x1128))))
(assert (x3402 x2304))
(assert (x3402 x1313))
(assert (= (or x3146 x4584) x1776))
(assert (= x3676 (and x3445 (not x2673))))
(assert (x3402 x1377))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x727 64 x1447 5)))
(assert (= x4207 (=> (and (and (>= 36893488168893940932 x796) (= 160 x1274) (= 128 x2101) (<= 1220 x796)) (and (and (and (<= x3897 x3405) (= (* 32 x3893) x3405) (<= x3449 x2099) (= x4445 (- x2108 4)) (= x218 (* (- x2096 1) 32)) (= x1744 (+ 256 x2108)) (= x1906 (+ x1121 32 x1426)) (>= 134217728 x3893) (= x221 (* 32 (- x3893 1))) (>= x2096 0) (= x325 (+ x4239 64)) (= (+ 32 x1426) x4476) (= x3087 (+ 128 x4239)) (= x3897 x1345) (= x4624 (+ 96 x4239)) (= (+ x3405 32 x1906) x2108) (>= 576460752303423488 x2096) (= x2412 x3724) (> x3449 x218) (= x1121 x2099) (= x4497 (+ x1906 32)) (= (x3042 (- x1426 x4239)) x1996) (= x4445 x3610) (<= 0 x3893) (= (* 32 x2096) x2099) (= (x3042 (- x1906 x4239)) x4781) (< x221 x3897) (= x3449 x1877)) (and (and (= x4718 x3978) (= (+ 32 x2108) x3192)) (and (and (and (and (= x4468 (+ 128 x2108)) (= x4204 x4626)) (and (and (and (= (+ x406 64) x2020) (= x542 (x3042 (- x4717 x406))) (= x3622 (* x3336 32)) (= x650 (+ x3622 32 x4717)) (>= x3336 0) (< x1935 x3339) (>= 134217728 x3336) (= x4607 (+ x4717 32)) (= (* (- x3336 1) 32) x1935) (= x4267 (+ 32 x406)) (<= x3339 x3622) (= x2077 x3339) (= x2761 x1094)) (and (and (= x2135 (x3042 (- x650 x406))) (<= x3410 134217728) (= (+ x406 128) x3443) (<= 0 x3410) (= (* x3410 32) x4101) (= x2534 (+ x4101 32 x650)) (>= x4101 x1796) (= x2517 (+ 32 x650)) (= x1196 x1796) (= x2903 (* 32 (- x3410 1))) (= x1793 (+ 96 x406)) (> x1796 x2903) (= x1617 x762)) (and (and (= x3783 x1942) (and (= x1136 x3739) (and (and (= x1011 x4300) (and (= x1755 x2508) (and (and (and (and (= x4840 x1365) (and (= x1873 x1299) (and (and (< (+ x1587 x4846) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 879188153 x3028) (= x4515 (+ x1587 x4846)) (<= x2942 127) (= false x4636) (>= x4515 0) (= x1587 (x2224 x1970)) (= x1514 false) (>= 127 x2942) (<= 1 x813) (= x3583 (- x842 x4846)) (= x4772 (x1628 132)) (= x3862 x4515) (= x842 (x528 x3190)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4515) (= x813 (x2950 x1970)) (= x429 (< 18446744073709551615 x4772)) (= x3783 x3190)) (= x4846 x1136)))) (= x2606 x941)) (= x3976 x2116)) (= x4382 x4245)))) (= x959 x3191)))) (and (= x3436 (x3042 (- x2534 x406))) (= false x3319) (<= x3076 134217728) (= x4545 (+ x2534 32)) (= x1738 (* (- x3076 1) 32)) (= (+ x2534 32 x1209) x3526) (< x1738 x2688) (= x690 (+ x406 160)) (= x2688 x70) (>= x1209 x2688) (>= x3076 0) (= x3049 x2931) (= x3526 x796) (= x1209 (* x3076 32)))))) (and (= x1281 (+ 32 x1744)) (= x3737 (x3042 (- x406 x2108))) (= (+ 32 x4687) x406) (= x4717 (+ x406 192)) (= (+ x1744 32) x4687) (= x2326 (x3042 (- x4687 x2108))) (= x334 (+ 160 x2108)) (= x1270 x2953) (= (+ x2108 192) x440) (= (+ x2108 224) x1389) (= x66 (+ x4687 32)) (= (x3042 (- x1744 x2108)) x3393)))) (and (= (+ 96 x2108) x1408) (= x1451 x3999))) (and (= x3826 x3873) (= (+ 64 x2108) x219))))) (and (= x1007 x3163) (>= 4294967295 x3682) (<= 0 x125) (<= x2894 134217728) (= x1007 (- x4239 4)) (= (* (- x125 1) 32) x3137) (<= 0 x2894) (= x764 x4125) (>= x4133 x428) (>= 576460752303423488 x125) (= x1430 (* 32 x2894)) (= (+ 32 x1430 x2038) x4239) (>= 18446744073709551615 x1895) (<= x3005 x1430) (= (+ x4239 32) x3388) (= x1895 x428) (= (* x125 32) x4133) (< x3763 x3005) (= x2038 (+ 356 x3880)) (= x1320 (- x2038 164)) (= (+ x2038 32) x3044) (= (* (- x2894 1) 32) x3763) (= x4133 x3880) (= x3005 x3682) (> x428 x3137) (= (+ 160 x4239) x1426)))) (and (=> (and x429 (and (= true x687) (= x687 x2274) (= x4658 true) (= x2603 false) (= x2979 false))) x1014) (=> (and (and (= (x3584 (+ 164 x3524)) x4632) (= (x493 (* x4772 192)) x3524) (= 164 x4106) (= (< x796 x4632) x3707)) (not x429)) (and (=> (and (not x3707) (and (= x2492 164) (= x1074 (< 18446744073709551615 x1007)))) (and (=> x1074 x2203) (=> (and (not x1074) (and (= (x3042 (- x796 x3290)) x4640) (= x3290 (+ 4 x1007)) (= x2147 (or (> x4640 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4640 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4640) true)))))) (and (=> (and (= (> x4445 18446744073709551615) x902) (not x2147)) (and (=> x902 x2203) (=> (and (and (= x4664 (+ 4 x4445)) (= (x3042 (- x796 x4664)) x4380) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4380) true) (> 256 x4380)) (> x4380 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x584)) (not x902)) (and (=> (and (and (= true x4329) (= false x3946) (= true x1257) (= x3654 false) (= x2274 x1257)) x584) x1014) (=> (and (not x584) (and (= (x1628 x4262) x1455) (= (= x150 x1455) x4591) (= 128 x2022) (= x150 (x2206 1461501637330902918203684832716283019655932542975 x1455)) (= x4262 (+ 32 x4664)) (= (x1628 x4664) x4340))) (and (=> (and x4591 (and (= (x1628 x257) x608) (= (+ 32 x4262) x257) (= x2158 (x2206 1461501637330902918203684832716283019655932542975 x608)) (= x3579 (= x2158 x608)))) (and (=> (and x3579 (and (= (x2206 1461501637330902918203684832716283019655932542975 x2240) x1395) (= (+ x257 32) x4326) (= x2240 (x1628 x4326)) (= (= x2240 x1395) x2912))) (and (=> (and x2912 (and (= x4480 (+ 32 x4326)) (= (x2206 1461501637330902918203684832716283019655932542975 x4309) x1785) (= (= x4309 x1785) x1778) (= (x1628 x4480) x4309))) (and (=> (not x1778) x1521) (=> (and x1778 (and (= (> x4526 18446744073709551615) x2131) (= x4526 (x1628 x2682)) (= x2682 (+ x4480 32)))) (and (=> (and (and (= x372 (x3584 (+ x1960 31))) (= (x3584 (+ x4664 x4526)) x1960) (= (or (and (<= x796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x372)) (and (> x796 x372) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x372) (<= x796 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x4727)) (not x2131)) (and (=> (not x4727) x3964) (=> (and x4727 (and (= (x1628 x1960) x1273) (= (< 18446744073709551615 x1273) x2047) (= x266 (x3584 (+ x1960 32))))) (and (=> x2047 x3012) (=> (and (not x2047) (and (= (x3584 (+ x1930 31)) x4496) (= (x493 (* 32 x1273)) x3212) (= x3603 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4496)) (= (= 0 (x3177 (ite (> x3198 18446744073709551615) 1 0) (ite (> 384 x3198) 1 0))) x2728) (= x1930 (x3584 (+ x3212 32))) (= (x3584 (+ x3603 384)) x3198))) (and (=> (and x2728 (and (= (x3584 (+ x4266 x266)) x2000) (= (x493 (* x1273 128)) x4266) (<= 385 x3198) (= (< x796 x2000) x2995))) (and (=> (and (= (< x266 x2000) x18) (not x2995)) (and (=> (and (not x18) (= x2074 x3198)) x2788) (=> (and (and (= (or (and (< x3719 128) (= true (<= x3719 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3719 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x139) (= (x3042 (- x796 x266)) x3719)) x18) (and (=> x139 x1839) (=> (and (not x139) (and (= (x3584 (+ 128 x3198)) x464) (= (= (x3177 (ite (> x464 18446744073709551615) 1 0) (ite (< x464 x3198) 1 0)) 0) x4117))) (and (=> (not x4117) x2730) (=> (and (and (= x1208 (x1628 x266)) (<= 1 x464) (> x464 x3198) (= (> 6 x1208) x3967) (<= x3198 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x3198 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x3198 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x4117) (and (=> (and x3967 (and (= x3389 (x2206 1461501637330902918203684832716283019655932542975 x1606)) (= x1606 (x1628 x2249)) (= x2249 (x3584 (+ 32 x266))) (= (= x1606 x3389) x2399))) (and (=> (not x2399) x1797) (=> x2399 x4641))) (=> (not x3967) x1665))))))))) (=> x2995 x1784))) (=> (not x2728) x2907))))))) (=> x2131 x2203))))) (=> (not x2912) x1521))) (=> (not x3579) x1521))) (=> (not x4591) x1521))))))) (=> (and x2147 (and (= true x3468) (= x3836 true) (= x4010 false) (= false x3993) (= x2274 x3468))) x1014))))) (=> (and x3707 (and (= x2274 x2416) (= true x399) (= x2416 true) (= x775 false) (= x3359 false))) x1014)))))))
(assert (= (and x3590 x2351) x1305))
(assert (x3402 x3845))
(assert (x3402 x4284))
(assert (= x979 (and x1386 (not x2995))))
(assert (x3402 x4308))
(assert (x3402 x2249))
(assert (x3402 x354))
(assert (x3402 x3694))
(assert (x3402 x350))
(assert (x3402 x4195))
(assert (= (=> (and (= x2163 (not (> x2684 1))) (= (x1460 x2502) x2684)) (and x880 x2163)) x114))
(assert (= (or (and x3022 x3082) (and x3078 x3448)) x1437))
(assert (x3402 x1272))
(assert (x3402 x520))
(assert (= x3587 (and x2878 x1934)))
(assert (x3402 x4263))
(assert (= (or x1792 x1220) x3617))
(assert (x3402 x2240))
(assert (x3402 x71))
(assert (x3402 x2763))
(assert (= (x1892 18446744073709551355) 0))
(assert (= 0 (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639873)))
(assert (x2480 12884902496))
(assert (x1081 (- x4443 1)))
(assert (x3402 x3367))
(assert (= 0 (x1892 18446744073709551613)))
(assert (x2480 2321842044))
(assert (= (and x2970 x2029) x910))
(assert (x3402 x1404))
(assert (= (and x4174 x2656) x2275))
(assert (x3402 x3679))
(assert (x1081 (- x3472 1)))
(assert (x3402 x4325))
(assert (x2041 x3912))
(assert (x3402 x990))
(assert (= x2734 (and x2664 x1642)))
(assert (x2041 x660))
(assert (= x957 x2151))
(assert (=> (<= x384 10000) (= (x1892 x384) 0)))
(assert (x3402 x906))
(assert (x3402 x4269))
(assert (x1411 x1351))
(assert (x3402 x2865))
(assert (x3402 x4579))
(assert (x3402 x2842))
(assert (x1411 x4660))
(assert (x3402 x411))
(assert (= (and x1470 x2760) x2393))
(assert (x3402 x3940))
(assert (= x686 (and x3696 x3785)))
(assert (x2041 x214))
(assert (x3402 x2553))
(assert (x1411 x32))
(assert (x3402 x2526))
(assert (x3402 x720))
(assert (x3402 x1989))
(assert (x3402 x3770))
(assert (= x1718 (or x2622 x672)))
(assert (x1411 x3912))
(assert (x3402 x3001))
(assert (< 10000 (x727 64 x4059 4)))
(assert (= (and (not x2588) x3587) x1276))
(assert (x3402 x659))
(assert (x3402 x3266))
(assert (x3402 x96))
(assert (= x4009 (and x1180 x3762)))
(assert (= (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273) (x1892 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273))))
(assert (x3402 x2342))
(assert (x3402 x2138))
(assert (< (x727 64 x598 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2353))
(assert (> (x705 x4629 x2987 x4148 x3823 x3687) 10000))
(assert (= (and x4670 x1995) x4565))
(assert (x3402 x3754))
(assert (= (and x3203 x351) x1255))
(assert (x3402 x1258))
(assert (= x934 (=> (and (= x4258 true) (= false x2358) (= x4413 true) (= false x1968) (= x4413 x2274)) x1014)))
(assert (x2041 x2744))
(assert (x3402 x3963))
(assert (x1411 x1347))
(assert (x3402 x3357))
(assert (x3971 32 x4859))
(assert (x3402 x2036))
(assert (x3402 x4468))
(assert (= (and (not x3104) x1073) x3731))
(assert (x3402 x2599))
(assert (x1411 x84))
(assert (= x2460 (=> (= x794 (= x4747 0)) (and (=> (and x794 (and (= x1844 (x3677 x3631)) (= x1419 (> x1844 0)) (= x3631 (x2097 320)) (= x3135 0))) (and (=> (not x1419) x2343) (=> (and (and (= x4787 (x3677 x3631)) (= (< 0 x4787) x2219)) x1419) (and (=> (and x2219 (and (= (x3677 x3631) x3433) (= x563 (< 0 x3433)))) (and (=> (not x563) x4272) (=> (and x563 (and (= (x3584 (+ 32 x919)) x704) (= x3887 (= x3477 0)) (= x3476 (x2206 1461501637330902918203684832716283019655932542975 x4609)) (= x1982 (x3790 x704)) (= x388 (x369 x356)) (= x3477 (x2950 x3476)) (= x100 (x3463 x3278)) (= x919 (x3584 (+ 32 x356))) (= (x2391 x919) x4609) (= (x3584 (+ x3631 32)) x3565) (= (x3584 (+ 32 x704)) x3278) (= x356 (x4342 x3565)))) (and (=> x3887 x569) (=> (and (not x3887) (= (> x388 5) x1454)) (and (=> x1454 x2203) (=> (and (= x143 (= x388 1)) (not x1454)) (and (=> (and x143 (= (= (ite (< 0 x1982) 0 (ite (> x1982 0) 1 0)) 0) x4825)) (and (=> (not x4825) x3936) (=> (and (= x1464 (= 0 (ite (= 0 x100) 0 (ite (= x100 0) 1 0)))) x4825) (and (=> (and x1464 (and (= x1299 x3027) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x175) (= x100 x2795) (= x3246 x922) (= x1825 x3627) (= x1808 x3306) (= x756 x3976) (= x1181 x2010) (= x1447 x3913) (= x3306 x3191) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1963) (= x1963 (x4400 x17 x1168)) (= x3627 x2606) (= x926 x2080) (<= 0 x2080) (= x1223 x2833) (= x1970 x2924) (= x3761 x3913) (= x1799 x1168) (= x1011 x2854) (= x503 x1731) (= (+ x4349 x1963) x2080) (= x2397 x2833) (= x598 x1799) (= x3983 x4840) (= x3913 x122) (= x3983 x1444) (= x3739 x1181) (= x2334 x3027) (= x2854 x1225) (= x2833 x4609) (>= x1963 0) (<= 0 x3246) (= x756 x918) (= x666 x811) (= x17 x2833) (= x4324 x2841) (= x3246 (- x175 x1445)) (= x3884 x1799) (= (x3147 x1223 x122) x175) (= x1755 x811) (= x1731 x4382) (= x1445 x2795) (= x1942 x2841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3246) (= x2833 x4298) (= x2795 x4349) (<= 0 x175) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2080))) x1979) (=> (not x1464) x1123))))) (=> (and (not x143) (and (= (= x388 2) x606) (<= x388 5))) (and (=> (and x606 (= x2327 (= 0 (ite (not (= x100 1)) 0 (ite (not (= x100 1)) 1 0))))) (and (=> (not x2327) x2139) (=> (and x2327 (and (= x1942 x878) (= x1741 x1248) (= x486 x945) (= x3488 x495) (= x718 x3976) (= x1299 x3488) (= x3038 x3248) (= x131 x1970) (= x1755 x1449) (= x1741 x4840) (= x999 x1011) (= x2085 x3191) (= x2516 x2085) (= x718 x1746) (= x805 x598) (= x805 x3769) (= x4735 x999) (= x2861 x4119) (= x2179 x765) (= x3992 x1449) (= x4609 x3248) (= x1828 x3213) (= x945 x1982) (= x2179 x2606) (= x4382 x1828) (= x2861 x3739) (= x4038 x878) (= x1447 x904))) x965))) (=> (and (= x3590 (= 3 x388)) (not x606)) (and (=> (not x3590) x916) (=> (and (= x121 (= 0 (ite (= x100 0) 0 (ite (= 0 x100) 1 0)))) x3590) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4569) (= x3140 x3900) (= x3236 x3902) (= x1033 x2537) (= x3715 x1547) (= x1011 x1547) (= x2014 x4609) (= x2014 x3802) (= x2130 x2200) (= x4511 x2072) (= x1288 x4248) (= (x746 x592 x3883 x939) x3351) (= x2014 x592) (= x3470 x236) (= x3917 x100) (= x3616 x3650) (= x3883 x3140) (<= 0 x3751) (= x1982 x3140) (= x3976 x3902) (= x435 x2136) (= x4840 x3470) (>= x4569 0) (= (x4124 x3802 x28 x1288) x4569) (= x51 x3191) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3751) (= x2130 x1299) (= x3616 x1447) (>= x4779 0) (= x2606 x758) (= x3751 (+ x4569 x602)) (= x598 x4248) (= x4206 x1755) (= x3116 x3751) (= x1326 x3140) (= x3332 x4779) (= (- x3351 x4240) x4779) (= x4248 x4386) (= x3616 x939) (= x2014 x2801) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3351) (= x4382 x435) (= x1942 x2537) (= x2014 x4869) (= x1970 x908) (= x28 x3140) (= x758 x4642) (>= x3351 0) (= x3426 x51) (= x2072 x3739) (= x4240 x3917) (= x4206 x2319) (<= x4779 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x602 x3917)) x121) x965) (=> (not x121) x1813))))))))))))))) (=> (not x2219) x4318))))) (=> (and (not x794) (and (= (< 18446744073709551615 x1688) x3588) (= x4865 (x2097 320)) (= x1688 (x3677 x4865)))) (and (=> x3588 x2203) (=> (and (not x3588) (and (<= x2502 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x825 1) (= (x3584 (+ 32 x130)) x830) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2502) (= (= x1688 0) x3418) (= x130 (x493 (* x1688 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2502) (= (x3584 (+ x2502 x830)) x825) (> x825 x2502))) (and (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x825)) (= x4871 (x3584 (+ x3364 32))) (<= x825 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3584 (+ x825 32)) x4844) (= x3119 (x3584 (+ 32 x4844))) (> x3392 x825) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x825) (= x3392 (x3584 (+ x825 128))) (= (x3042 (- x1688 1)) x761) (= (= 1 x1688) x2626) (not (= x825 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x3364 (x3584 (+ x2502 32))) (not (= x825 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x734 (x3584 (+ x3119 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x825)) (not x3418)) (and (=> (and (= x459 x3392) x2626) x2259) (=> (and (and (not (= x3392 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3392) (= x1973 (x3584 (+ 32 x3392))) (= x1080 (x3584 (+ 32 x1973))) (not (= x3392 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (<= x3392 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3584 (+ x3392 128)) x3446) (= (x3584 (+ 32 x1080)) x4069) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x3392)) (= x1901 (= x761 1)) (< x3392 x3446) (<= x3392 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (not x2626)) (and (=> (not x1901) x1506) (=> (and x1901 (= x3446 x459)) x2259))))) (=> (and x3418 (= x3567 x825)) x4603)))))))))
(assert (x3402 x593))
(assert (= x2271 (x4472 (x727 x4629 x2271 x4040))))
(assert (= (or x3356 x715) x1322))
(assert (x3402 x1378))
(assert (x3402 x1284))
(assert (x3402 x98))
(assert (x3402 x1636))
(assert (x2890 x4310 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1022 (or x2470 x1323)))
(assert (= (and x2055 (not x1901)) x4750))
(assert (x3402 x3103))
(assert (x1081 x2012))
(assert (= (=> (and (= x397 (x2498 288)) (= (x2976 160) x4522) (= 1 x1727) (= x2372 (< 0 x2381)) (= x2381 (x338 x397))) (and (=> (not x2372) x2343) (=> (and x2372 (and (= x4151 (x338 x397)) (= (< 0 x4151) x1673))) (and (=> (and x1673 (and (= x4457 (< 0 x3942)) (= x3942 (x338 x397)))) (and (=> (not x4457) x4272) (=> (and (and (= (= 0 x1333) x3820) (= (x3584 (+ 32 x1716)) x2357) (= (x2950 x4726) x1333) (= x3081 (x3584 (+ x397 32))) (= (x3584 (+ x89 32)) x1432) (= x89 (x3584 (+ 32 x2357))) (= x1716 (x4389 x3081)) (= (x1037 x89) x3845) (= x3053 (x1 x1432)) (= (x2206 1461501637330902918203684832716283019655932542975 x4700) x4726) (= x4700 (x4448 x2357)) (= x1925 (x392 x1716))) x4457) (and (=> x3820 x569) (=> (and (= (> x1925 5) x33) (not x3820)) (and (=> (and (= (= x1925 1) x3644) (not x33)) (and (=> (and (and (<= x1925 5) (= x3547 (= 2 x1925))) (not x3644)) (and (=> (and (= (= x1925 3) x1669) (not x3547)) (and (=> (not x1669) x916) (=> (and x1669 (= x1642 (= 0 (ite (= x3053 0) 1 (ite (= 0 x3053) 1 0))))) (and (=> (and (and (= x4797 x4092) (= x1308 x2944) (= x4797 x4840) (= x492 x4187) (= x3235 x1491) (= x1237 x2868) (= x3895 x1938) (= x1474 x1938) (= x538 x868) (= x2606 x579) (= x1211 x1299) (= x538 x270) (= x3636 x1011) (= x579 x4720) (= x1253 x3976) (= x3296 x3191) (= x663 x3296) (= x2802 x4824) (= x1076 x2899) (= x3178 x1954) (= x2422 x538) (<= x2742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2742) (= x1707 x1306) (>= x319 0) (= x4187 (- x2742 x731)) (= x929 x1938) (= x1938 x4672) (= (+ x319 x1308) x1076) (= x1954 x3739) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x319) (= x4827 x40) (= (x1465 x270 x1474 x3235) x2742) (= x3845 x1938) (= x1860 x3636) (= x1819 x1491) (= x4382 x4824) (= x1942 x1707) (= x319 (x3110 x2422 x3895 x2868)) (= x538 x4700) (= x538 x2862) (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1211 x4853) (= x1265 x1970) (= x3053 x2944) (= x1755 x4827) (= x4522 x1237) (<= 0 x1076) (= x1253 x365) (>= x4187 0) (= x1491 x598) (= x1237 x3189) (= x731 x2944) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4187)) x1642) x1699) (=> (not x1642) x1813))))) (=> (and (= (= (ite (not (= x3053 1)) 1 (ite (not (= x3053 1)) 1 0)) 0) x4167) x3547) (and (=> (and x4167 (and (= x1299 x2165) (= x588 x1011) (= x1536 x3739) (= x3311 x588) (= x1119 x1942) (= x1755 x4379) (= x1480 x1050) (= x1379 x1119) (= x4700 x1050) (= x3976 x3158) (= x784 x1536) (= x3435 x2554) (= x216 x4522) (= x3845 x1733) (= x578 x3158) (= x1591 x2262) (= x808 x833) (= x833 x2606) (= x4382 x3435) (= x1032 x2165) (= x415 x3934) (= x4379 x2533) (= x4840 x415) (= x1733 x4123) (= x4356 x598) (= x3191 x2262) (= x1970 x2729) (= x216 x4014))) x1699) (=> (not x4167) x2139))))) (=> (and x3644 (= x3113 (= (ite (> x3845 0) 1 (ite (< 0 x3845) 1 0)) 0))) (and (=> (not x3113) x3936) (=> (and x3113 (= x4745 (= (ite (= 0 x3053) 1 (ite (= 0 x3053) 1 0)) 0))) (and (=> (and (and (= x2770 x1970) (= x4431 x4083) (= x367 x2437) (>= x4475 0) (= x1789 x956) (= x4700 x456) (= x4840 x1939) (= x126 x1399) (<= x4475 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x574 x3848) (= x1407 x4522) (= x1299 x1435) (= x2937 x3976) (= x4703 x4312) (= x27 x456) (= x4475 (x3869 x1555 x366)) (= x1817 x141) (= x3848 x3645) (>= x141 0) (= x3191 x58) (= x1939 x1625) (= x1735 x1041) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x141) (= x3914 x1735) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3795) (= x1407 x366) (= x598 x1735) (= x47 x1407) (<= 0 x1789) (= x4703 x3739) (= x4382 x1222) (= x126 x2606) (= x3053 x3848) (= x2559 x1435) (= x1942 x2437) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1789) (= x1287 x1011) (= x4083 x1755) (>= x3795 0) (= (- x3795 x574) x141) (= x2937 x4601) (= x58 x466) (= (x452 x2669 x3914) x3795) (= x1789 (+ x3645 x4475)) (= x456 x215) (= x1397 x1287) (= x456 x2669) (= x456 x1555) (= x1222 x37)) x4745) x2667) (=> (not x4745) x1123))))))) (=> x33 x2203))))))) (=> (not x1673) x2460))))) x865))
(assert (x3402 x3422))
(assert (x3402 x4471))
(assert (x3402 x400))
(assert (x3402 x4497))
(assert (x1081 (- x4855 1)))
(assert (= (and x4758 x1350) x1149))
(assert (x1411 x2400))
(assert (x3402 x3285))
(assert (x2890 x2400 1461501637330902918203684832716283019655932542976))
(assert (x2890 x2654 256))
(assert (= x2667 (=> (and (= (not (> x2387 1)) x3269) (= (x338 x397) x2387)) (and x3269 x2460))))
(assert (x3402 x2000))
(assert (= (and x1277 (not x1818)) x185))
(assert (x2041 x3031))
(assert (x3402 x3267))
(assert (= (and x4415 x3333) x3245))
(assert (= (=> (and (= false x2483) (= x3065 false) (= x2070 x1970) (= x3922 1) (= x2274 x2483) (= x3440 x1970)) x1014) x1438))
(assert (x3402 x639))
(assert (< (x727 64 x4059 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3610))
(assert (x1081 x1380))
(assert (x2890 x401 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3753 10000) (= (x1892 x3753) 0)))
(assert (x3402 x813))
(assert (x3402 x3896))
(assert (=> (>= 10000 x3918) (= 0 (x1892 x3918))))
(assert (x3402 x2904))
(assert (x4488 x4761))
(assert (x3402 x2009))
(assert (x3402 x4537))
(assert (= (=> (and (= x4062 false) (= false x4030) (= true x1911) (= x2274 x1911) (= x491 true)) x1014) x1123))
(assert (x3402 x2456))
(assert (x3402 x4088))
(assert (x3402 x152))
(assert (= x3531 (and x4864 (not x2847))))
(assert (= (and (not x4758) x1350) x1085))
(assert (x3402 x2208))
(assert (x3402 x4570))
(assert (x2890 x1175 32))
(assert (x3402 x1084))
(assert (=> (>= 10000 x809) (= (x1892 x809) 0)))
(assert (x3402 x942))
(assert (x3402 x1745))
(assert (= x3624 (or x4711 x475)))
(assert (x3402 x4041))
(assert (= x792 (and (not x1644) x2255)))
(assert (x3402 x4224))
(assert (x2480 18446744082299486304))
(assert (x3971 32 x1734))
(assert (=> (>= 10000 x728) (= 0 (x1892 x728))))
(assert (x3402 x3942))
(assert (= x3804 (=> (and (= false x2180) (= false x1833) (= x515 true) (= true x3106) (= x515 x2274)) x1014)))
(assert (x3402 x3499))
(assert (= (x1892 115792089237316195423570985008687907853269984665640564039457584007906687188642) 0))
(assert (= (and (not x18) x979) x2949))
(assert (x3402 x1186))
(assert (= (and x2664 (not x1642)) x4571))
(assert (x4488 x1730))
(assert (x3402 x595))
(assert (= (or x4438 x3074) x1711))
(assert (x3402 x4536))
(assert (x3402 x4575))
(assert (x3402 x2545))
(assert (x3402 x1532))
(assert (x3402 x446))
(assert (x3402 x3658))
(assert (x3402 x1425))
(assert (x3402 x3477))
(assert (x3402 x596))
(assert (x3402 x1883))
(assert (x3402 x90))
(assert (x3402 x1903))
(assert (= x3943 (=> (and (= x4848 false) (= x1929 true) (= x2335 true) (= x2274 x2335) (= x347 false)) x1014)))
(assert (x3402 x3739))
(assert (x3402 x1393))
(assert (x3402 x329))
(assert (x3402 x651))
(assert (x1081 x2966))
(assert (= x3026 (and (not x4285) x2060)))
(assert (x3402 x438))
(assert (= (x3716 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986)) x2560))
(assert (x1081 x1242))
(assert (x3402 x3093))
(assert (x3402 x3705))
(assert (x3402 x4332))
(assert (x3402 x4398))
(assert (x3402 x4493))
(assert (x3402 x3717))
(assert (x3402 x4726))
(assert (= (x1892 25769804352) 0))
(assert (= (=> (and (= (not (or (and (< x2616 x3796) (= (<= x3796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2616 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x2616 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3796 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x4414) (= (x1628 x2566) x2616)) (and x2151 x4414)) x1392))
(assert (x3402 x4262))
(assert (x3402 x1348))
(assert (x4488 x3197))
(assert (x3402 x4052))
(assert (= x2234 (or x3500 x4143)))
(assert (x3402 x2188))
(assert (= x2415 (or x3270 x2100)))
(assert (= x183 (and x3857 (not x3981))))
(assert (x3402 x4407))
(assert (x2041 x3809))
(assert (x3402 x4567))
(assert (x3402 x3979))
(assert (= (and x4704 (not x2331)) x3441))
(assert (x2480 12884902464))
(assert (x3402 x4020))
(assert (< (x1992 x1264 x890) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x4692))
(assert (x3402 x3656))
(assert (x3402 x791))
(assert (x3402 x1705))
(assert (x3402 x254))
(assert (x3402 x3551))
(assert (x3402 x3289))
(assert (= x2986 (x1618 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986))))
(assert (x3402 x1822))
(assert (x3402 x4055))
(assert (x3402 x2929))
(assert (x3402 x377))
(assert (x3402 x1008))
(assert (= x4593 (and (not x3590) x2351)))
(assert (x3402 x508))
(assert (=> (<= x2418 10000) (= (x1892 x2418) 0)))
(assert (x3402 x3021))
(assert (x3402 x3508))
(assert (x3402 x3433))
(assert (x2480 18446744073709551487))
(assert (x3402 x2426))
(assert (x3402 x4029))
(assert (x3402 x2199))
(assert (x2480 879188153))
(assert (x3402 x1190))
(assert (x4488 x629))
(assert (= (or x1077 x199) x2073))
(assert (= (=> (and (= false x3557) (= true x3260) (= false x502) (= x3260 x2274) (= true x2968)) x1014) x1720))
(assert (x3402 x512))
(assert (x3402 x4859))
(assert (x3402 x404))
(assert (= x1111 (and x4713 x522)))
(assert (x3402 x2713))
(assert (x3402 x1144))
(assert (x3971 32 x3890))
(assert (= (or x449 x4565) x2954))
(assert (x1081 (- x2096 1)))
(assert (x3402 x87))
(assert (= (=> (= (< 0 x4772) x4539) (and (=> (not x4539) x1438) (=> (and (and (>= x4772 1) (= (x2206 1461501637330902918203684832716283019655932542975 x1771) x4589) (= x1771 (x1628 228)) (= (= x1771 x4589) x1802)) x4539) (and (=> (and (and (= (ite (not (= x1771 x1592)) (ite (not (= x1771 (x2206 1461501637330902918203684832716283019655932542975 x1447))) 1 0) (ite (not (= x1771 x1592)) 1 0)) x4132) (= x2267 (= 0 (ite (= 0 x4132) x4132 (ite (not (= x1771 x1942)) 1 0)))) (= x1592 (x2206 1461501637330902918203684832716283019655932542975 x598))) x1802) (and (=> x2267 x4175) (=> (and (not x2267) (and (= false x798) (= x2581 false) (= true x335) (= x2274 x3037) (= true x3037))) x1014))) (=> (not x1802) x3205))))) x1777))
(assert (x3402 x2891))
(assert (x3971 32 x1863))
(assert (=> (>= 10000 x3945) (= (x1892 x3945) 0)))
(assert (x2890 x1199 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3868))
(assert (= x3687 (x1082 (x705 x4629 x2987 x4148 x3823 x3687))))
(assert (x2041 32))
(assert (x3402 x2717))
(assert (= (x1892 3516931245) 0))
(assert (x3402 x541))
(assert (x4283 x2009))
(assert (= x3397 (=> (and (= x3067 false) (= x2075 true) (= x2274 x1806) (= x1806 true) (= false x771)) x1014)))
(assert (= x4103 (=> (and (= x3760 (x3584 (+ x2549 32))) (= x1604 (x2206 1461501637330902918203684832716283019655932542975 x4660)) (= x944 (x3584 (+ 32 x2090))) (= (x3584 (+ 32 x2392)) x2090) (= (x3222 x3642) x4660) (= x4162 (x343 x4078)) (= (x1843 x3760) x3518) (= x3642 (x3584 (+ 32 x3760))) (= x4078 (x3584 (+ 32 x508))) (= (x2206 1461501637330902918203684832716283019655932542975 x1239) x2873) (= x2392 (x3584 (+ x310 32))) (= (x3584 (+ 32 x3642)) x4818) (= (x2247 x508) x4017) (= x310 (x3584 (+ x2082 32))) (= (x3584 (+ 32 x4818)) x508) (= x2532 (not (> x1500 1))) (= (x2206 1461501637330902918203684832716283019655932542975 x3518) x4811) (= x2082 (x3584 (+ x4169 32))) (= x1239 (x117 x4818)) (= x860 (x3584 (+ 32 x944)))) (and (=> (= x352 x860) x730) x2532))))
(assert (x1221 x1606))
(assert (= (=> (and (= x4786 false) (= x2274 x4743) (= true x2286) (= true x4743) (= x3287 false)) x1014) x3094))
(assert (x3402 x238))
(assert (x3402 x901))
(assert (x3402 x200))
(assert (x3402 x653))
(assert (= x2938 (and x174 (not x3827))))
(assert (x3402 x4863))
(assert (x3971 32 x4772))
(assert (x3402 x1056))
(assert (x3402 x2786))
(assert (x3402 x1971))
(assert (= (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x3402 x1440))
(assert (x3402 x2346))
(assert (x4488 x1945))
(assert (= x1275 (or x1693 x2935)))
(assert (= x2215 (=> (and (= (+ x2961 32) x3667) (not (> x1059 x4417)) (> x4419 x1542) (= x4417 (x3584 (+ x1059 x3973))) (= (x2829 x2961) x2332) (>= 18446744073709551614 x1059) (<= x2332 201326601) (not (> x4498 x4419)) (>= 18446744073709551615 x1059) (>= 18446744073709551615 x1059) (<= x1059 18446744073709551615) (>= 25769805060 x4498) (>= x4417 1) (= x3628 (+ x781 63)) (= (+ 68 x4319) x2961) (or (>= x1059 115792089237316195423570985008687907853269984665640564039457584007906687188642) (<= x1059 18446744073709551615)) (< x1059 x4417) (<= x1059 18446744073709551614) (>= x4498 100) (= (+ x2961 31) x1542) (= x129 (* x2332 128)) (= x4319 (x2829 260)) (= (> x4498 x3667) x1040) (or (<= 115792089237316195423570985008687907853269984665640564039457584007906687188642 x1059) (>= 18446744073709551615 x1059)) (<= x4319 25769804960) (= x4498 (+ x129 x3667)) (or (<= x1059 18446744073709551615) (>= x1059 115792089237316195423570985008687907853269984665640564039457584007906687188642)) (= x781 (* 32 x2332)) (<= x4417 18446744073709551615) (>= 18446744073709551614 x1059) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3628) x3973)) (and (=> x1040 x3643) (=> (and (not x1040) (= x400 x4417)) x3593)))))
(assert (= x4803 (and x1697 (not x4474))))
(assert (x2041 x345))
(assert (x3402 x440))
(assert (> (x727 64 x424 3) 10000))
(assert (=> (>= 10000 x3754) (= (x1892 x3754) 0)))
(assert (x3402 x1294))
(assert (= (and (not x303) x710) x4291))
(assert (x3402 x2675))
(assert (x1411 x2737))
(assert (x3051 (x1352 x2229 x4790)))
(assert (> (x727 64 x598 5) 10000))
(assert (x3402 x3031))
(assert (x3402 x3524))
(assert (x3402 x4476))
(assert (> (x1992 x1264 x890) 10000))
(assert (= (x1892 (x727 64 x74 4)) (x727 64 x74 4)))
(assert (x2890 x3628 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1337))
(assert (x1411 x2373))
(assert (= x424 (x4472 (x727 64 x424 3))))
(assert (= (or (and x2725 x4490) (and x710 x303)) x3613))
(assert (x3402 x3666))
(assert (x3402 x3115))
(assert (x3402 x2816))
(assert (x3402 x807))
(assert (x3402 x2115))
(assert (x3402 x4849))
(assert (x3402 x1382))
(assert (x3402 x3586))
(assert (x3402 x3799))
(assert (x3853 (ite (> x3054 18446744073709551615) 1 0)))
(assert (x3402 x3826))
(assert (x4488 x1347))
(assert (x1221 x1869))
(assert (x3402 x3502))
(assert (= x3665 true))
(assert (x2890 x4832 32))
(assert (= (x1892 (x727 64 x1836 x434)) (x727 64 x1836 x434)))
(assert (= x3320 (or x4746 x2069)))
(assert (x3402 x1366))
(assert (x3402 x2239))
(assert (= x1647 (and x773 (not x1454))))
(assert (x3402 x3292))
(assert (x3402 x1178))
(assert (x3402 x4045))
(assert (x3402 x4594))
(assert (x3402 x4480))
(assert (= (and x4809 x846) x3856))
(assert (= x4483 (and x3335 x2251)))
(assert (= x468 (and x4244 (not x429))))
(assert (x3402 x4753))
(assert (x3402 x992))
(assert (x1411 x3569))
(assert (x3402 x490))
(assert (x3402 x1661))
(assert (x3402 x4872))
(assert (x3402 x1261))
(assert (= x2987 (x4472 (x705 x4629 x2987 x4148 x3823 x3687))))
(assert (x3402 x830))
(assert (x3402 x3173))
(assert (= (x1892 201326596) 0))
(assert (x3402 x4086))
(assert (x1221 x2400))
(assert (x3402 x590))
(assert (= (and x1965 (not x3821)) x169))
(assert (= x75 (and x4740 x185)))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x3402 x3841))
(assert (x3402 x1316))
(assert (x3402 x1637))
(assert (x3402 x2414))
(assert (= (x1892 12884902404) 0))
(assert (x3402 x2541))
(assert (= x4641 (=> (and (= x2711 (x3584 (+ x359 32))) (= x1186 (x1628 x4011)) (= x4011 (x3584 (+ 32 x2249))) (= x881 (x3584 (+ 32 x4011))) (= (x1628 x881) x3546) (= x802 (x3584 (+ 32 x3198))) (= x359 (x3584 (+ x802 32))) (= (not (> x2000 x4561)) x3543) (= (x3584 (+ x881 32)) x4561)) (and (=> (= x464 x2074) x2788) x3543))))
(assert (x3402 x230))
(assert (= (x1286 (x1941 x4629 x534 x1177 x2798)) x4629))
(assert (=> (<= x3249 10000) (= (x1892 x3249) 0)))
(assert (x3402 x2221))
(assert (x2890 x1163 1461501637330902918203684832716283019655932542976))
(assert (= (x1286 (x1941 x1264 x3302 x3945 x4218)) x1264))
(assert (x2890 x2306 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= false x2252) (= x4517 true) (= x2376 true) (= x4517 x2274) (= false x4395)) x1014) x4139))
(assert (= x2470 (and (not x516) x3665)))
(assert (x2041 x4376))
(assert (= (x1892 (x571 x4629 x3171 x4094 x4402 x885 x2448)) (x571 x4629 x3171 x4094 x4402 x885 x2448)))
(assert (x2041 x446))
(assert (= (and x1481 x563) x2621))
(assert (= (=> (and (= x2478 (> x4535 0)) (= x489 0) (= (x700 x3567) x4535)) (and (=> (and (and (= (x700 x3567) x2777) (= (> x2777 0) x2847)) x2478) (and (=> (not x2847) x2640) (=> (and x2847 (and (= x4774 (< 0 x2362)) (= (x700 x3567) x2362))) (and (=> (and (and (= (x3584 (+ 32 x3850)) x2867) (= x4343 (x4785 x3850)) (= (x3142 x1045) x2649) (= x1377 (x2206 1461501637330902918203684832716283019655932542975 x4343)) (= x3850 (x3584 (+ x1045 32))) (= (= x21 0) x3152) (= x21 (x2950 x1377)) (= x604 (x3584 (+ x2867 32))) (= (x1918 x2867) x1594) (= (x3584 (+ 32 x3567)) x3301) (= x1045 (x640 x3301)) (= (x3002 x604) x3434)) x4774) (and (=> (and (not x3152) (= x3347 (< 5 x2649))) (and (=> x3347 x2203) (=> (and (= x301 (= x2649 1)) (not x3347)) (and (=> (and (= (= (ite (< 0 x1594) 0 (ite (> x1594 0) 1 0)) 0) x168) x301) (and (=> (and x168 (= (= (ite (= x3434 0) 0 (ite (= x3434 0) 1 0)) 0) x4003)) (and (=> (not x4003) x3661) (=> (and x4003 (and (= x936 x4382) (= x1841 (x3995 x155 x1026)) (= x2625 (- x1841 x3931)) (<= 0 x1841) (= x1865 x3739) (= x1315 x155) (<= 0 x3145) (= x3360 x2039) (= x1890 x598) (= x3947 x1865) (= x737 x4338) (= x2926 x936) (= x3839 x3990) (= x1447 x3360) (= x1652 x1315) (<= x2625 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2625) (<= x3145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4840 x551) (= x4338 x1942) (= x1970 x2967) (= x2606 x2914) (= x1011 x2201) (= x1172 x4633) (= x1315 x2316) (= x4343 x1315) (<= x1841 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3360 x1026) (>= x4104 0) (= x1381 x1890) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4104) (= x1315 x2705) (= (+ x3145 x3691) x4104) (= x3534 x3191) (= x2958 x4659) (= x4276 x3691) (= (x2292 x2705 x1381) x3145) (= x4276 x3434) (= x4276 x3931) (= x2598 x1890) (= x1299 x3990) (= x4104 x2791) (= x1919 x3534) (= x2914 x4202) (= x2958 x1755) (= x2625 x1527) (= x1179 x2201) (= x1172 x3976) (= x551 x1486))) x4046))) (=> (not x168) x3755))) (=> (and (and (<= x2649 5) (= (= 2 x2649) x1304)) (not x301)) (and (=> (and x1304 (= (= (ite (not (= 1 x3434)) 0 (ite (not (= 1 x3434)) 1 0)) 0) x4474)) (and (=> (not x4474) x2596) (=> (and (and (= x3186 x3739) (= x4343 x4366) (= x1755 x1332) (= x1541 x2606) (= x1116 x1299) (= x3014 x1332) (= x3473 x1011) (= x2712 x3191) (= x1970 x3633) (= x3594 x3989) (= x448 x2876) (= x2087 x4382) (= x1010 x2712) (= x3594 x1942) (= x1541 x496) (= x3473 x3308) (= x2481 x1926) (= x1594 x448) (= x1091 x2087) (= x4182 x2160) (= x3976 x4182) (= x4249 x4366) (= x598 x4559) (= x2017 x1116) (= x1447 x2813) (= x3186 x3350) (= x3515 x4559) (= x2481 x4840)) x4474) x1751))) (=> (and (= (= x2649 3) x2029) (not x1304)) (and (=> (and x2029 (= (= (ite (= 0 x3434) 0 (ite (= x3434 0) 1 0)) 0) x2386)) (and (=> (not x2386) x934) (=> (and (and (<= x2641 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3485) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3141) (= x3951 x1488) (>= x3141 0) (= x2634 x1299) (<= x3485 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3243 x2634) (= x2790 x598) (= x3951 x1003) (= x3485 (- x3141 x1639)) (= x2220 x1639) (= x1594 x3951) (<= x2692 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1942 x1369) (= x2641 (+ x2692 x1269)) (= x844 x3976) (= x1458 x3403) (= x2578 x225) (= x2510 x844) (= x3170 x1755) (= (x3706 x1658 x1488 x1120) x3141) (= x2066 x3170) (= x4382 x2167) (= x550 x4311) (= x4142 x3191) (= x2220 x3434) (= x1531 x3997) (= x2814 x2606) (= x1970 x1205) (= x2755 x2790) (= x360 x1369) (= x2641 x3286) (= x1011 x2578) (= x2790 x2595) (= x2167 x4161) (= x783 x4840) (>= x2641 0) (= x3403 x1658) (= x949 x4142) (= x1531 x3739) (= x2257 x3403) (= x783 x3937) (= x1269 x2220) (= x3951 x2212) (= x3403 x4343) (= (x243 x1458 x1003 x2755) x2692) (= x3485 x4128) (= x4311 x1120) (= x851 x2814) (= x3951 x2849) (= x3403 x3974) (= x4311 x1447) (>= x2692 0)) x2386) x1751))) (=> (not x2029) x469))))))))) (=> x3152 x1720))) (=> (not x4774) x2203))))) (=> (not x2478) x4198))) x940))
(assert (= (x2161 (x705 x4629 x2987 x4148 x3823 x3687)) x4148))
(assert (= 64 (x1286 (x727 64 x1942 x2750))))
(assert (x3402 x1960))
(assert (x3402 x2094))
(assert (x2890 x10 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x147))
(assert (= (or x2348 x3655) x1240))
(assert (= x4831 (and (not x1629) x1596)))
(assert (x3402 x523))
(assert (= x885 (x1082 (x571 x4629 x3171 x4094 x4402 x885 x2448))))
(assert (x3402 x4607))
(assert (x2890 x2782 1461501637330902918203684832716283019655932542976))
(assert (x3402 x4417))
(assert (x3402 x1991))
(assert (x3402 x3262))
(assert (x3402 x2867))
(assert (x2890 x308 32))
(assert (x2480 4294967396))
(assert (x2041 x2400))
(assert (= x1854 (and x227 x2399)))
(assert (x2041 x2602))
(assert (x2041 x2807))
(assert (= x4742 (and x3209 x204)))
(assert (x1411 x3577))
(assert (x1411 x4761))
(assert (x3402 x3517))
(assert (= x2555 (and x183 x3036)))
(assert (x3971 32 x3893))
(assert (= (or x3752 x378) x1245))
(assert (x3402 x2986))
(assert (= 0 (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639809)))
(assert (x1411 x4845))
(assert (= x2776 (and x732 x3852)))
(assert (x1411 x4832))
(assert (= x376 (and x4068 (not x1364))))
(assert (x3402 x3518))
(assert (x1411 x1239))
(assert (x3402 x4608))
(assert (= x2137 (x4472 (x727 64 x2137 x3854))))
(assert (= (or (and x1526 (not x2912)) (and (not x4591) x1613) (and x4574 (not x1778)) (and x321 (not x3579))) x4583))
(assert (x3402 x4449))
(assert (x3402 x549))
(assert (x3402 x219))
(assert (= 0 (x1892 18446744082299486496)))
(assert (=> (>= 10000 x54) (= 0 (x1892 x54))))
(assert (x3402 x4419))
(assert (= (x1618 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)) x3918))
(assert (x2890 x4795 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3337))
(assert (= x1506 false))
(assert (= (=> (and (= (x3677 x4865) x4557) (= x1985 (< 18446744073709551615 x4557))) (and (=> (and (not x1985) (and (= x1338 (x3584 (+ 32 x4372))) (= (x493 (* 32 x4557)) x4372) (> x2188 x3567) (= (x3584 (+ x3567 x1338)) x2188) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3567) (<= x3567 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1995 (= 0 x4557)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3567) (<= 1 x2188))) (and (=> (and (not x1995) (and (= (x3584 (+ 32 x3567)) x3321) (> x889 x2188) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2188)) (= (x3584 (+ 32 x520)) x898) (= x520 (x3584 (+ 32 x2934))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2188)) (<= x2188 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3584 (+ 128 x2188)) x889) (= (x3584 (+ 32 x2188)) x2934) (<= x2188 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2188)) (= x769 (x3584 (+ x3321 32))) (= (x3042 (- x4557 1)) x2183) (= x4713 (= x4557 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2188))) (and (=> (and (not x4713) (and (= x1019 (x3584 (+ x889 32))) (= x3766 (x3584 (+ 128 x889))) (= x2118 (= 1 x2183)) (<= x889 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x3766 x889) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x889)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x889)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x889) (not (= x889 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x1423 (x3584 (+ 32 x1019))) (= (x3584 (+ x1423 32)) x2417) (<= x889 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (and (=> (not x2118) x2769) (=> (and x2118 (= x3766 x2440)) x2246))) (=> (and (= x2440 x889) x4713) x2246))) (=> (and x1995 (= x3066 x2188)) x691))) (=> x1985 x2203))) x4603))
(assert (x3402 x2150))
(assert (x3971 32 x3478))
(assert (x3402 x255))
(assert (x3402 x4273))
(assert (x2890 x3879 32))
(assert (x3402 x2494))
(assert (x2890 x4761 32))
(assert (x3402 x4424))
(assert (x3402 x284))
(assert (x3402 x15))
(assert (= x2402 (and (not x3967) x2839)))
(assert (x3402 x2053))
(assert (x3402 x2420))
(assert (x3402 x3212))
(assert (= (and x1704 (not x3207)) x892))
(assert (x3402 x2465))
(assert (x2890 x2807 1461501637330902918203684832716283019655932542976))
(assert (= x2407 (and (not x4713) x522)))
(assert (x3402 x1876))
(assert (x3402 x649))
(assert (x3402 x3009))
(assert (x3402 x1163))
(assert (= 0 (x1892 18446744073709551614)))
(assert (x3971 32 x4557))
(assert (x3402 x2860))
(assert (= 64 (x1286 (x727 64 x598 5))))
(assert (x3402 x3327))
(assert (x3402 x4698))
(assert (= x4704 (and x1020 x857)))
(assert (x3971 32 x4443))
(assert (x3402 x4660))
(assert (x1638 (ite (> x3368 18446744073709551615) 1 0) (ite (> x2074 x3368) 1 0)))
(assert (= (=> (and (= false x2672) (= x4355 true) (= x2274 x4706) (= false x3228) (= true x4706)) x1014) x2666))
(assert (x4488 x4453))
(assert (x3402 x4339))
(assert (x3402 x1896))
(assert (x3402 x4189))
(assert (= x2291 (and x3323 x3547)))
(assert (x3402 x3950))
(assert (= false x2769))
(assert (x2041 x1088))
(assert (> (x705 x1264 x54 x1258 x384 x4091) 10000))
(assert (x2041 x2543))
(assert (x2890 x3197 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2381))
(assert (x3402 x220))
(assert (x3402 x78))
(assert (x1411 x4759))
(assert (x3402 x1945))
(assert (x3402 x3553))
(assert (x3402 x3492))
(assert (= (x3716 (x571 x1264 x2418 x3471 x4777 x3009 x2336)) x2336))
(assert (= (and x2407 (not x2118)) x206))
(assert (= 0 (x1286 (x1582 0))))
(assert (x3402 x3598))
(assert (x3402 x2577))
(assert (x3402 x2991))
(assert (x2890 x3079 1461501637330902918203684832716283019655932542976))
(assert (x2890 x4845 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2711))
(assert (= x4731 (x161 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731))))
(assert (x3402 x4252))
(assert (x2890 x1490 32))
(assert (x3402 x2173))
(assert (x2041 x3551))
(assert (= x3475 (or x3663 x2402)))
(assert (x3853 (ite (> x438 18446744073709551615) 1 0)))
(assert (x3402 x2207))
(assert (x2041 x4037))
(assert (x3402 x2848))
(assert (x1221 x4343))
(assert (x1411 x457))
(assert (x3402 x873))
(assert (x3402 x3734))
(assert (x3402 x1816))
(assert (not (x2480 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273))))
(assert (x3402 x3302))
(assert (x4488 x3089))
(assert (x4488 x1175))
(assert (x3402 x4818))
(assert (x3402 x881))
(assert (x3402 x48))
(assert (x3402 x160))
(assert (x1411 x1645))
(assert (x3402 x1827))
(assert (< 10000 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731)))
(assert (x3402 x2676))
(assert (x1411 x2654))
(assert (= (=> (and (= true x3933) (= x2274 x3933) (= true x3376) (= false x2370) (= x4160 false)) x1014) x1784))
(assert (x3402 x1239))
(assert (x3402 x2137))
(assert (x2890 x564 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1200 x2033) x348))
(assert (x3402 x1925))
(assert (= (and x519 (not x1673)) x1693))
(assert (= 0 (x1892 25769804384)))
(assert (x3402 x3231))
(assert (x1081 (- x2647 1)))
(assert (x3051 (x3869 x1555 x366)))
(assert (= (and (not x1074) x2821) x972))
(assert (x3402 x1510))
(assert (x3402 x3312))
(assert (= (x1892 (x727 64 x2137 x3854)) (x727 64 x2137 x3854)))
(assert (x1411 x292))
(assert (= x2203 (=> (and (= false x668) (= x4321 true) (= x2846 true) (= x2274 x2846) (= x2278 false)) x1014)))
(assert (x3402 x362))
(assert (= 0 (x1892 18446744073709551612)))
(assert (= (and x2045 x1694) x2033))
(assert (x1221 x1539))
(assert (x1411 x4309))
(assert (x3402 x282))
(assert (= (and (not x167) x2479) x2637))
(assert (x3402 x973))
(assert (x2890 x2590 1461501637330902918203684832716283019655932542976))
(assert (x3402 x4377))
(assert (x3402 x2606))
(assert (x3971 192 x4772))
(assert (x3402 x1171))
(assert (x3402 x4345))
(assert (x1081 (- x2894 1)))
(assert (= (x2161 (x727 64 x1942 x2750)) x2750))
(assert (x1081 x3336))
(assert (x1411 x3225))
(assert (= (x1892 115792089237316195423570985008687907853269984665640564039457584007906687188802) 0))
(assert (x3402 x1439))
(assert (not (x2480 (x727 64 x424 3))))
(assert (x3402 x2817))
(assert (= (x1892 18446744073709551611) 0))
(assert (x3402 x1869))
(assert (x3402 x3247))
(assert (x3402 x1897))
(assert (x1411 x3551))
(assert (x3051 (x243 x1458 x1003 x2755)))
(assert (x1081 (- x3478 1)))
(assert (x3402 x482))
(assert (= (and x4415 (not x3333)) x2663))
(assert (= (and (not x1152) x854) x1969))
(assert (= (=> (and (= (x2829 x1216) x1138) (= (+ x1964 32) x3096) (>= 25769805060 x1429) (> x4419 x754) (= x1216 (+ 32 x1705)) (>= 201326596 x4615) (<= x3315 18446744073709551615) (<= x3187 18446744073709551615) (>= x3187 1) (or (<= 115792089237316195423570985008687907853269984665640564039457584007906687188802 x3315) (>= 18446744073709551615 x3315)) (>= 18446744073709551614 x3315) (= (+ 31 x1964) x754) (>= 18446744073709551615 x3315) (>= 18446744073709551614 x3315) (<= x3315 18446744073709551615) (= x3187 (x3584 (+ x3315 x2501))) (<= 676 x1964) (= x3925 (* 32 x4615)) (= x1429 (+ x3105 x3096)) (not (> x3315 x3187)) (not (< x4419 x1429)) (= (* x4615 128) x3105) (= x2501 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x820)) (or (>= x3315 115792089237316195423570985008687907853269984665640564039457584007906687188802) (>= 18446744073709551615 x3315)) (= (+ x1138 x3266) x1964) (< x3315 x3187) (= x322 (> x1429 x3096)) (= x4615 (x2829 x1964)) (= (+ 63 x3925) x820) (<= 708 x1429) (<= x1964 25769805028) (>= 18446744073709551614 x3315) (<= x1138 25769804352) (or (>= x3315 115792089237316195423570985008687907853269984665640564039457584007906687188802) (<= x3315 18446744073709551615))) (and (=> (and (= x3187 x4242) (not x322)) x1473) (=> x322 x3874))) x4677))
(assert (x3402 x2915))
(assert (x3402 x3481))
(assert (x3402 x4714))
(assert (x3402 x3349))
(assert (x3402 x1672))
(assert (x3402 x1495))
(assert (x3402 x472))
(assert (x3402 x1199))
(assert (x3402 x2135))
(assert (= x227 (and x3967 x2839)))
(assert (x3402 x1950))
(assert (x3402 x3097))
(assert (x3402 x2838))
(assert (x3402 x1098))
(assert (x3402 x2477))
(assert (x3402 x1234))
(assert (= (and x2264 x3202) x4442))
(assert (= (and x1674 x4260) x911))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (= (and x2996 (not x3113)) x3195))
(assert (x3971 32 x3932))
(assert (x4488 x4339))
(assert (= x4223 (=> (and (= x887 (x3584 (+ 32 x1870))) (= (not (< 1 x719)) x3179) (= x4256 (x3584 (+ 32 x3019))) (= x4567 (x3463 x745)) (= (x3584 (+ x1129 32)) x3019) (= (x2206 1461501637330902918203684832716283019655932542975 x660) x2164) (= x4344 (x3790 x3164)) (= (x2391 x887) x660) (= (x3584 (+ 32 x679)) x1129) (= x679 (x3584 (+ 32 x1585))) (= x745 (x3584 (+ 32 x3164))) (= (x3584 (+ x887 32)) x3164)) (and (=> (= x398 x4256) x1569) x3179))))
(assert (x3402 x389))
(assert (x2041 x4453))
(assert (= x3548 (and x1889 (not x1268))))
(assert (x3402 x4213))
(assert (x3402 x4265))
(assert (x1411 x4496))
(assert (x3402 x2549))
(assert (x3402 x4218))
(assert (x3402 x4021))
(assert (= x1134 (and x3673 (not x46))))
(assert (x1411 x446))
(assert (x1411 x623))
(assert (= (x727 64 x424 3) (x1892 (x727 64 x424 3))))
(assert (x1411 x598))
(assert (= 3 (x2161 (x727 64 x424 3))))
(assert (x3853 (ite (< x1874 x2190) 1 0)))
(assert (x1411 x3089))
(assert (x3402 x3029))
(assert (x3402 x3465))
(assert (x1081 x2332))
(assert (x3402 x1447))
(assert (x2890 x457 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1942) (= 0 (x1892 x1942))))
(assert (x3402 x3689))
(assert (x3402 x2297))
(assert (x3402 x4684))
(assert (x3402 x2344))
(assert (x3402 x4791))
(assert (x3402 x702))
(assert (x3971 32 x2096))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1992 x4629 x675)))
(assert (x2041 x292))
(assert (x3402 x3192))
(assert (x3402 x408))
(assert (x3402 x3469))
(assert (x1411 x862))
(assert (= x3318 (and x2033 (not x1200))))
(assert (x2890 x53 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3191))
(assert (x3402 x608))
(assert (= x555 (or x893 x4593)))
(assert (x1221 x912))
(assert (= x880 x940))
(assert (x2041 x1175))
(assert (x3402 x2629))
(assert (x3402 x1798))
(assert (x3402 x3825))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x727 x1264 x1522 x3093)))
(assert (x3402 x3063))
(assert (x3402 x1779))
(assert (x3402 x3603))
(assert (= 0 (x1892 18446744073709551354)))
(assert (= 5 (x2161 (x727 64 x598 5))))
(assert (x3402 x1910))
(assert (= (=> (and (= x565 (x1247 x2746)) (= x2065 (x3584 (+ x1643 32))) (= x1701 (x3584 (+ 32 x757))) (= (x3926 x1349) x1643) (= (x3042 (- x568 x1302)) x540) (= (x3584 (+ 32 x4381)) x16) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2306) x3180) (= (x3584 (+ x1284 x1662)) x568) (= x4537 (x3584 (+ x1779 32))) (= x1178 (x4426 x3276)) (= (x3584 (+ x479 x2208)) x4392) (= x145 (x3584 (+ x565 32))) (= x1662 (x3584 (+ 32 x361))) (= (x3584 (+ 32 x3276)) x1349) (= x4516 (x3584 (+ x4019 32))) (= (x3584 (+ x2438 31)) x48) (= x1412 (x2206 1461501637330902918203684832716283019655932542975 x1325)) (= (x3584 (+ x4643 x3180)) x361) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x48) x2208) (= x3276 (x2706 352)) (= x4623 (x2624 x4381)) (= x3784 (x2206 1461501637330902918203684832716283019655932542975 x862)) (= (x1709 x3889) x1325) (= (x3584 (+ 32 x2113)) x2746) (= (x3584 (+ x2027 x1662)) x617) (= (x3584 (+ 32 x45)) x4449) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x457) x1284) (= (x3584 (+ x4392 32)) x1244) (= x479 (x3584 (+ 32 x770))) (= x770 (x3584 (+ x506 192))) (= (x477 x565) x1632) (= x2157 (x2206 1461501637330902918203684832716283019655932542975 x1178)) (= (x3584 (+ 32 x506)) x4019) (= (x3584 (+ x1349 32)) x2113) (= x457 (x3584 (+ x2027 31))) (= x1779 (x3584 (+ x4516 32))) (= x4453 (x3584 (+ x1632 31))) (= (x3042 (- x4224 x506)) x4022) (= (x3042 (- x361 x4424)) x1538) (= (= 0 x1529) x3143) (= x4381 (x3986 x2185)) (= (x3042 (- x4392 x506)) x3184) (= x3889 (x3584 (+ 32 x2746))) (= (x3584 (+ x4537 32)) x527) (= (x3042 (- x506 x352)) x3328) (= x4643 (x3584 (+ 32 x4224))) (= (x2114 x1643) x2438) (= x3262 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4453)) (= (x3584 (+ x1244 x3262)) x4224) (= (x2123 x2113) x862) (= x2306 (x3584 (+ x4623 31))) (= (x3584 (+ 32 x3889)) x2185) (= (x2950 x3754) x1529)) (and (=> (and (not x3143) (and (= (< 0 x4421) x79) (or (and (= x4525 x4421) (not x79)) (and (and (<= x3710 4294967295) (= 1 x4525)) x79)))) x1339) (=> x3143 x4190))) x3251))
(assert (= (x1892 (x1941 x1264 x3302 x3945 x4218)) (x1941 x1264 x3302 x3945 x4218)))
(assert (x3402 x4360))
(assert (x3853 (ite (> x293 18446744073709551615) 1 0)))
(assert (= x4828 (and x3981 x3857)))
(assert (x3402 x127))
(assert (= (and x735 x606) x4130))
(assert (x3402 x2928))
(assert (x3402 x3647))
(assert (> (x571 x4629 x3171 x4094 x4402 x885 x2448) 10000))
(assert (x3402 x3724))
(assert (x3402 x2007))
(assert (= x1166 (and x3775 (not x4027))))
(assert (x3402 x1263))
(assert (x3853 (ite (> x1469 x2853) 1 0)))
(assert (= x2045 (and (not x4490) x2725)))
(assert (x3402 x2895))
(assert (x3402 x426))
(assert (x3402 x3019))
(assert (x3971 32 x3472))
(assert (= (x1892 (x1992 x4629 x675)) (x1992 x4629 x675)))
(assert (x1081 x2647))
(assert (x3402 x754))
(assert (x3402 x4505))
(assert (x3971 32 (- x4855 1)))
(assert (x3402 x4667))
(assert (x2041 x4216))
(assert (x3971 32 (- x3076 1)))
(assert (x3402 x3955))
(assert (x3402 x899))
(assert (= (and x1043 x4548) x1086))
(assert (x3402 x1900))
(assert (x3402 x4367))
(assert (x3402 x1567))
(assert (x3402 x4829))
(assert (x2890 x3289 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1844))
(assert (x3402 x4747))
(assert (x2890 x10 32))
(assert (x3402 x3572))
(assert (x3402 x970))
(assert (x3853 (ite (< x3368 x2074) 1 0)))
(assert (= x4481 (and x2275 (not x1715))))
(assert (= (=> (and (or (<= x3187 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x3187)) (= (not (> x1429 (+ x2363 32))) x29) (>= 18446744073709551614 x3187) (<= x3096 25769804932) (= x1713 (x2829 x3888)) (= (x3042 (- x4419 x3096)) x4029) (= x3888 (+ 32 x3096)) (= x220 (x3584 (+ x3187 128))) (<= 128 x4029) (= x2363 (+ x3634 32)) (not (< x220 x3187)) (<= x3187 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x3187)) (<= x4029 25769804352) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x3187) (>= 18446744073709551487 x3187)) (>= 18446744073709551615 x3187) (>= 18446744073709551614 x3187) (<= 708 x3096) (= x4492 (x2829 x3096)) (= (+ x3888 32) x3634) (< x3187 x220) (<= x3187 18446744073709551615) (= x1415 (x2829 x3634)) (<= x4492 5) (<= x1713 1461501637330902918203684832716283019655932542975) (= x3861 (x2829 x2363))) (and x29 (=> (= x220 x4242) x1473))) x3874))
(assert (x3402 x4731))
(assert (= x204 (and x3445 x2673)))
(assert (x3402 x2038))
(assert (x1411 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x2596 (=> (and (= x1842 false) (= x3313 true) (= true x2153) (= x4275 false) (= x3313 x2274)) x1014)))
(assert (x3402 x2321))
(assert (x3402 x4011))
(assert (x2890 x598 1461501637330902918203684832716283019655932542976))
(assert (x2890 x4637 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1367))
(assert (x3402 x4313))
(assert (x3402 x897))
(assert (x3402 x1059))
(assert (x3402 x1949))
(assert (x3402 x1559))
(assert (= x3417 (=> (and (= (x2206 1461501637330902918203684832716283019655932542975 x3497) x2884) (= (x780 x3979) x4033) (= (not (> x2825 1)) x123) (= (x3584 (+ x3979 32)) x1009) (= (x3584 (+ 32 x1914)) x3979) (= (+ x3408 32) x1044) (= x1468 (x3373 x967)) (= (x1147 x1009) x2128) (= (x3584 (+ x967 32)) x1914) (= x3497 (x2469 x1914)) (= (x4093 416) x967) (>= 5 x1468) (= x3408 (+ 32 x4598)) (= x2851 (+ 32 x1044))) (and x123 (=> (= x3863 (+ 32 x2851)) x3639)))))
(assert (= x2238 (x1082 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918))))
(assert (= x3138 (or x1854 x2949)))
(assert (x3402 x10))
(assert (x3402 x3494))
(assert (x1081 (- x125 1)))
(assert (= (or (and x2722 (not x2728)) (and x185 (not x4740))) x4566))
(assert (=> (<= x2137 10000) (= (x1892 x2137) 0)))
(assert (= x4393 x2091))
(assert (x3402 x2513))
(assert (> (x1941 x4629 x534 x1177 x2798) 10000))
(assert (x3402 x3809))
(assert (= (x1892 18446744073709551487) 0))
(assert (x3402 x4811))
(assert (= x4091 (x1082 (x705 x1264 x54 x1258 x384 x4091))))
(assert (= (=> (and (= x2951 false) (= true x1595) (= x1321 x2274) (= true x1321) (= false x3208)) x1014) x4198))
(assert (x3402 x231))
(assert (= (and x3271 x3162) x914))
(assert (= (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639808) 0))
(assert (= (x1892 25769804192) 0))
(assert (x3402 x2543))
(assert (x3402 x4495))
(assert (x3402 x757))
(assert (x3402 x912))
(assert (x3402 x1426))
(assert (x3402 x4078))
(assert (x1411 x3289))
(assert (x3402 x644))
(assert (= x1885 (or x3519 x2952)))
(assert (x3402 x3275))
(assert (x2480 25769804384))
(assert (= (and x2728 x2722) x1386))
(assert (x3402 x2600))
(assert (= x1461 (and (not x835) x3904)))
(assert (x2890 x623 32))
(assert (x3402 x3408))
(assert (= (=> (and (or (>= x4417 115792089237316195423570985008687907853269984665640564039457584007913129639809) (<= x4417 18446744073709551487)) (>= 1461501637330902918203684832716283019655932542975 x1127) (<= 128 x238) (> x4041 x4417) (<= x3667 25769804932) (= (x2829 x3358) x1127) (= x412 (x2829 x2025)) (= x238 (x3042 (- x4419 x3667))) (>= 18446744073709551615 x4417) (= x2059 (x2829 x249)) (= (x2829 x3667) x2599) (= (+ x249 32) x2025) (not (> x4417 x4041)) (= x3358 (+ 32 x3667)) (<= x238 25769804960) (<= 100 x3667) (= x249 (+ 32 x3358)) (= (x3584 (+ 128 x4417)) x4041) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4417) (<= x4417 18446744073709551614) (<= x4417 18446744073709551614) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x4417)) (or (>= x4417 115792089237316195423570985008687907853269984665640564039457584007913129639809) (>= 18446744073709551487 x4417)) (>= 18446744073709551615 x4417) (= x2594 (not (< (+ x2025 32) x4498))) (>= 5 x2599)) (and x2594 (=> (= x400 x4041) x3593))) x3643))
(assert (x3402 x4683))
(assert (x1411 x2543))
(assert (x3402 x2444))
(assert (x3402 x342))
(assert (x3402 x68))
(assert (= x1249 (and x1334 x3820)))
(assert (x3402 x2677))
(assert (= x730 (=> (and (= x1267 (> x1721 0)) (= x895 (x3042 (- x352 x4424))) (= (x3584 (+ 32 x1678)) x2631) (= x1987 (x3584 (+ 32 x524))) (= x1678 (x3584 (+ 256 x352))) (= x2375 (x3584 (+ x4089 32))) (= (x2206 1461501637330902918203684832716283019655932542975 x3160) x1732) (= x524 (x2498 288)) (= (x2206 1461501637330902918203684832716283019655932542975 x1199) x3529) (= x3390 (x291 128)) (= (x338 x524) x1721) (= x1869 (x3077 224)) (= (x4307 256) x1199) (= (x3584 (+ 32 x352)) x3684) (= x45 (x3584 (+ x4424 32))) (= (x561 192) x3160) (= x601 (x2206 1461501637330902918203684832716283019655932542975 x1869)) (= (x2976 160) x1645) (= (x3584 (+ 32 x2920)) x2659) (= x3131 (x2206 1461501637330902918203684832716283019655932542975 x1645)) (= x2920 (x3584 (+ 32 x3684))) (= (x3584 (+ 32 x2659)) x4089)) (and (=> (and x1267 (and (= (x4389 x1987) x4095) (= (> 6 x2981) x2071) (= (x392 x4095) x2981))) (and (=> (not x2071) x3943) (=> x2071 x3741))) (=> (and (not x1267) (= x2631 x2366)) x4651)))))
(assert (x2890 x1884 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3343))
(assert (x3402 x184))
(assert (x1081 x1881))
(assert (= x170 (and x2652 x1324)))
(assert (= x846 (or x4009 x896)))
(assert (x3402 x4700))
(assert (x3402 x4435))
(assert (=> (<= x3811 10000) (= 0 (x1892 x3811))))
(assert (x3971 32 x595))
(assert (= (x4472 (x1992 x1264 x890)) x890))
(assert (x1411 x942))
(assert (x2480 56168211265741800405898417846466446431335698074001377101504018355951975268352))
(assert (=> (<= x1295 10000) (= 0 (x1892 x1295))))
(assert (x1411 x2850))
(assert (= x3249 (x2161 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273))))
(assert (x3402 x689))
(assert (= (and x3732 x168) x1434))
(assert (x3402 x560))
(assert (= x625 x4393))
(assert (= x1481 (and x2219 x4573)))
(assert (x3402 x2965))
(assert (x3402 x3728))
(assert (x1221 x1055))
(assert (x3402 x2409))
(assert (x3402 x619))
(assert (x3402 x3328))
(assert (x3402 x4841))
(assert (x3402 x967))
(assert (x2890 x629 32))
(assert (= x893 (and x4197 (not x1669))))
(assert (=> (<= x80 10000) (= (x1892 x80) 0)))
(assert (x3402 x1139))
(assert (x3402 x2811))
(assert (x3402 x2499))
(assert (x3402 x2602))
(assert (x3402 x3855))
(assert (=> (<= x3093 10000) (= (x1892 x3093) 0)))
(assert (x3402 x3577))
(assert (x4488 x4832))
(assert (x3402 x2361))
(assert (= x2170 (and x2145 x33)))
(assert (x3402 x3523))
(assert (x1081 32))
(assert (x3402 x2721))
(assert (= (and x4748 x3181) x2360))
(assert (=> (>= 10000 x3302) (= (x1892 x3302) 0)))
(assert (= x957 (=> (and (= x755 true) (= x3730 false) (= x2310 false) (= x1064 true) (= x2274 x1064)) x1014)))
(assert (x3402 x796))
(assert (= (x2161 (x571 x1264 x2418 x3471 x4777 x3009 x2336)) x3471))
(assert (x3402 x1512))
(assert (x3402 x3894))
(assert (x2890 x2306 32))
(assert (x3402 x1487))
(assert (x2890 x446 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3389))
(assert (x2041 x3628))
(assert (x2890 x820 32))
(assert (x4283 x2721))
(assert (x1411 x1294))
(assert (x3402 x1716))
(assert (x1221 x608))
(assert (x1221 x3551))
(assert (x2890 x3809 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x4749))
(assert (x3402 x847))
(assert (x2890 x3912 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x424 10000) (= (x1892 x424) 0)))
(assert (x3402 x1429))
(assert (= (or (and x268 x4838) (and x2479 x167)) x1646))
(assert (x3402 x2281))
(assert (= (and (not x3058) x1022) x1401))
(assert (x2890 x3518 1461501637330902918203684832716283019655932542976))
(assert (x1081 x595))
(assert (> (x1582 0) 10000))
(assert (x3402 x1930))
(assert (= x4116 (=> (and (= (x3584 (+ x4377 32)) x3240) (= (x291 128) x3241) (= x3882 (x3584 (+ 32 x337))) (= x512 (x3584 (+ 32 x3882))) (= (x3584 (+ 32 x4808)) x920) (= x4377 (x2498 288)) (= (x4307 256) x3289) (= (x3584 (+ 256 x337)) x864) (= x3562 (x338 x4377)) (= (x3584 (+ 32 x864)) x3394) (= x377 (x2976 160)) (= (x3584 (+ x3425 32)) x4716) (= (> x3562 0) x4174) (= (x2206 1461501637330902918203684832716283019655932542975 x2782) x2716) (= (x2206 1461501637330902918203684832716283019655932542975 x3289) x4163) (= (x561 192) x2782) (= x1512 (x3042 (- x337 x4808))) (= (x3077 224) x2400) (= (x2206 1461501637330902918203684832716283019655932542975 x377) x4287) (= (x3584 (+ x512 32)) x3425) (= (x2206 1461501637330902918203684832716283019655932542975 x2400) x2960) (= (x3584 (+ 32 x4716)) x560)) (and (=> (and (not x4174) (= x4690 x3394)) x991) (=> (and x4174 (and (= (> 6 x87) x1715) (= (x392 x4367) x87) (= (x4389 x3240) x4367))) (and (=> (not x1715) x3943) (=> x1715 x2653)))))))
(assert (x2890 x4845 32))
(assert (=> (>= 10000 x821) (= 0 (x1892 x821))))
(assert (x3402 x985))
(assert (= (or (and x3721 (not x120)) (and (not x1535) x2727)) x706))
(assert (x1081 x3898))
(assert (x3402 x1713))
(assert (x3402 x1787))
(assert (x2890 x2602 32))
(assert (x3971 32 x2894))
(assert (= (and x55 (not x2071)) x4733))
(assert (x3402 x3876))
(assert (= x1569 (=> (and (= (x3584 (+ x3909 x2980)) x2159) (= (x3042 (- x1378 x398)) x1876) (= (x3584 (+ x1378 32)) x3909) (= x1490 (x3584 (+ 31 x2840))) (= x200 (x3584 (+ x990 32))) (= x3514 (x2950 x2751)) (= (x3584 (+ x963 32)) x4363) (= (x2706 352) x3261) (= x971 (x3042 (- x2159 x398))) (= x3694 (x3584 (+ 32 x4715))) (= (x1709 x1846) x26) (= x906 (x3042 (- x674 x4808))) (= x255 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2602)) (= x674 (x3584 (+ x3136 x2523))) (= (x3042 (- x398 x337)) x3232) (= (x2206 1461501637330902918203684832716283019655932542975 x26) x859) (= x2927 (= x3514 0)) (= x4637 (x4426 x3261)) (= (x3584 (+ x4647 31)) x1883) (= (x3584 (+ 32 x3492)) x829) (= (x2123 x4229) x1884) (= (x1247 x1991) x391) (= x342 (x3584 (+ 32 x2617))) (= x3961 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1490)) (= x2840 (x2114 x2617)) (= x4647 (x477 x391)) (= x2617 (x3926 x3746)) (= x210 (x3584 (+ 32 x920))) (= (x3584 (+ 32 x3261)) x3746) (= (x2206 1461501637330902918203684832716283019655932542975 x1884) x1382) (= (x3584 (+ x1846 32)) x1031) (= x1991 (x3584 (+ x4229 32))) (= x2305 (x3986 x1031)) (= x1831 (x3584 (+ x2474 x255))) (= x2700 (x2624 x2305)) (= (x3584 (+ 32 x391)) x4466) (= (x3584 (+ 32 x4614)) x3492) (= (x3584 (+ 192 x398)) x990) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x401) x3136) (= (x3584 (+ 31 x960)) x2602) (= x2980 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1883)) (= x401 (x3584 (+ 31 x2700))) (= (x2206 1461501637330902918203684832716283019655932542975 x4637) x156) (= (x3584 (+ 32 x3746)) x4229) (= x2523 (x3584 (+ x2159 32))) (= x4313 (x3584 (+ x2305 32))) (= (x3042 (- x1831 x3800)) x4611) (= x963 (x3584 (+ x829 32))) (= x1846 (x3584 (+ 32 x1991))) (= x2474 (x3584 (+ 32 x674))) (= (x3584 (+ x2474 x960)) x3161) (= (x3584 (+ x200 x3961)) x1378) (= (x3584 (+ x398 32)) x4614)) (and (=> (and (and (or (and (and (= 1 x2361) (>= 4294967295 x2009)) x1551) (and (not x1551) (= x2504 x2361))) (= (< 0 x2504) x1551)) (not x2927)) x709) (=> x2927 x4190)))))
(assert (= (x1286 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731)) x1264))
(assert (x4488 x53))
(assert (x3402 x3667))
(assert (x3402 x1154))
(assert (x3402 x165))
(assert (=> (<= x890 10000) (= 0 (x1892 x890))))
(assert (x3402 x2845))
(assert (x3402 x478))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x727 64 x74 4)))
(assert (= x1089 (or x740 x2030)))
(assert (x3402 x3089))
(assert (x2041 x3799))
(assert (< 10000 (x727 64 x1942 x2750)))
(assert (= (and x2588 x3587) x2255))
(assert (x3402 x4847))
(assert (< 10000 (x727 x4629 x2271 x4040)))
(assert (x3402 x4295))
(assert (x3402 x2049))
(assert (= x2395 (and x4167 x2291)))
(assert (x3402 x4256))
(assert (= x3852 (and x2540 x2601)))
(assert (x3402 x1282))
(assert (= x1751 x4046))
(assert (= x36 (=> (and (= x4220 x423) (= x4020 x1904)) x3916)))
(assert (= x2697 (x381 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731))))
(assert (= (x381 (x571 x1264 x2418 x3471 x4777 x3009 x2336)) x4777))
(assert (= x86 (and x948 x3346)))
(assert (x1081 x1863))
(assert (= (and x4460 x795) x1923))
(assert (= (x1892 25769804868) 0))
(assert (x1221 x4756))
(assert (x2890 x4339 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1459))
(assert (x3402 x4602))
(assert (x2890 x3577 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1891))
(assert (x3402 x4606))
(assert (= x4241 (=> (and (= (or (and (> x3743 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3265)) (and (= (<= x3743 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3265)) (< x3743 x3265))) x2834) (= (x1628 260) x3743) (= x3265 (- x796 195))) (and (=> (and (and (= (x1628 x875) x2250) (= x875 (x3584 (+ 164 x3743))) (= (< 18446744073709551615 x2250) x1152)) x2834) (and (=> x1152 x2203) (=> (and (not x1152) (and (= (x3584 (+ x875 32)) x1487) (= (x3042 (- x796 x1355)) x1067) (= (or (and (< x1067 x1487) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1067) (<= x1487 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x1067 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1487 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x2352) (= (x493 (* 32 x2250)) x1355))) (and (=> x2352 x2203) (=> (and (not x2352) (and (= (x1628 164) x471) (= x3428 (= x471 0)))) (and (=> x3428 x1550) (=> (and (not x3428) (and (= x2427 (x1228 x4191)) (= (x727 64 x598 5) x434) (= x4127 (= 0 x2427)) (= x3233 5) (= (x727 64 x1836 x434) x4191) (= x1836 (x1628 228)))) (and (=> (not x4127) x3094) (=> (and (and (= x2869 (x1628 228)) (= x142 (x2206 1461501637330902918203684832716283019655932542975 x598)) (= x1875 (x3584 (+ 32 x1300))) (= x1300 (x3584 (+ x1302 32)))) x4127) x1550))))))))) (=> (not x2834) x2203)))))
(assert (x3402 x2627))
(assert (= (and x3703 x3560) x672))
(assert (x3402 x2869))
(assert (= (and x1278 x2076) x3798))
(assert (x3402 x2501))
(assert (x3402 x4193))
(assert (x1411 x3031))
(assert (x3402 x4396))
(assert (x3402 x1345))
(assert (x3402 x3686))
(assert (x3402 x1024))
(assert (x3402 x323))
(assert (x3402 x1914))
(assert (x3402 x4100))
(assert (x2041 x677))
(assert (x1081 x3472))
(assert (x2480 18446744073709551612))
(assert (x1081 x4859))
(assert (= x709 (=> (= (= 0 x2361) x2939) (and (=> x2939 x3804) (=> (not x2939) x1392)))))
(assert (x3402 x4087))
(assert (x3402 x2744))
(assert (x3402 x3850))
(assert (x3402 x4580))
(assert (x2890 x2240 1461501637330902918203684832716283019655932542976))
(assert (= (x1892 4294967390) 0))
(assert (x3402 x2548))
(assert (x3402 x1185))
(assert (x3402 x4309))
(assert (= x148 (and x410 x3903)))
(assert (x1411 x3628))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x727 64 x424 3)))
(assert (= (and x2689 x4822) x2253))
(assert (x3402 x1244))
(assert (x1221 x4700))
(assert (x3402 x4805))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639745))
(assert (x3402 x2916))
(assert (= x199 (and x1434 x4003)))
(assert (x2890 x2543 32))
(assert (=> (<= x1836 10000) (= 0 (x1892 x1836))))
(assert (x1221 x653))
(assert (x3402 x382))
(assert (x3402 x1898))
(assert (x2041 x2850))
(assert (= (and (not x363) x3712) x2878))
(assert (x3402 x4037))
(assert (x3402 x4281))
(assert (x3402 x3753))
(assert (x3402 x406))
(assert (x3402 x1641))
(assert (= (x381 (x571 x4629 x3171 x4094 x4402 x885 x2448)) x4402))
(assert (x1411 x1539))
(assert (= (and x1344 x584) x1520))
(assert (x1411 x1869))
(assert (x3402 x3187))
(assert (= (=> (and (= x2424 false) (= x409 true) (= x4051 false) (= x750 true) (= x2274 x750)) x1014) x1665))
(assert (x3402 x3430))
(assert (= 0 (x1892 115792089237316195423570985008687907853269984665640564039457584007909908414274)))
(assert (= (x381 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273)) x809))
(assert (= x4217 (or x302 x473 x2781)))
(assert (= 0 (x1892 18446744073709551549)))
(assert (x1411 x2807))
(assert (x3402 x1374))
(assert (x3402 x690))
(assert (x3402 x3681))
(assert (x3402 x674))
(assert (x3402 x3811))
(assert (x3402 x2773))
(assert (x2890 x580 32))
(assert (= (and x2374 x3194) x3530))
(assert (= (x4472 (x727 64 x4059 4)) x4059))
(assert (x3402 x4453))
(assert (x3402 x2002))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x3775 (and x110 x655)))
(assert (x2890 x377 1461501637330902918203684832716283019655932542976))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x571 x1264 x2418 x3471 x4777 x3009 x2336)))
(assert (= x2601 (and x2338 x3697)))
(assert (= (x1892 134217728) 0))
(assert (=> (<= x3687 10000) (= (x1892 x3687) 0)))
(assert (= (x1892 2321842044) 0))
(assert (x3402 x1838))
(assert (x3402 x1012))
(assert (x3402 x629))
(assert (= 0 (x1892 25769804932)))
(assert (= (and x3245 x2184) x1519))
(assert (x3402 x1290))
(assert (x3402 x3455))
(assert (x1411 x564))
(assert (x3402 x3779))
(assert (x3402 x860))
(assert (x3051 (x3147 x1223 x122)))
(assert (= (x1892 18446744073709551357) 0))
(assert (= (x1286 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)) x4629))
(assert (x3402 x1019))
(assert (x3402 x424))
(assert (x3402 x1523))
(assert (< 10000 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)))
(assert (= x2666 x3280))
(assert (=> (>= 10000 x2751) (= 0 (x1892 x2751))))
(assert (x3402 x1412))
(assert (x3402 x3122))
(assert (x3402 x1140))
(assert (= (and x2823 (not x1314)) x1131))
(assert (= (x1082 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986)) x80))
(assert (x3402 x2992))
(assert (=> (<= x4091 10000) (= (x1892 x4091) 0)))
(assert (x3402 x4409))
(assert (= (=> (and (= (x2206 1461501637330902918203684832716283019655932542975 x1447) x2141) (= (not (= x2141 x1942)) x948)) (and (=> (and x948 (and (= (x2206 255 x3031) x1260) (= x62 (x727 64 x1942 x2750)) (= (x727 64 x4059 4) x2750) (= x192 (> x1260 2)) (= (x1001 x62) x3031) (= x4059 (x2206 1461501637330902918203684832716283019655932542975 x1447)))) (and (=> x192 x2203) (=> (and (not x192) (= x2499 (ite (not (= x1260 2)) 1 0))) x2936))) (=> (and (= x2499 (ite x948 1 0)) (not x948)) x2936))) x1956))
(assert (x3402 x3631))
(assert (x3402 x309))
(assert (x3402 x16))
(assert (x3402 x2502))
(assert (= x691 (=> (and (= x779 (x3677 x4865)) (= (< 0 x779) x3814)) (and (=> (not x3814) x484) (=> (and x3814 (and (= x1364 (> x4494 0)) (= x4494 (x3677 x4865)))) (and (=> (and (and (= (x369 x2245) x1910) (= x258 (x3584 (+ 32 x4865))) (= x2245 (x4342 x258)) (= (< 5 x1910) x3827)) x1364) (and (=> (and (and (= x2266 false) (= x4462 true) (= x283 true) (= x2274 x283) (= x1472 false)) x3827) x1014) (=> (and (= x1499 (= x1910 1)) (not x3827)) (and (=> (and (and (= x4220 x3066) (= x1904 0)) (not x1499)) x3916) (=> (and x1499 (and (= (x3584 (+ x3066 64)) x423) (<= x3066 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x3066 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2930 255) (not (= x3066 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3066) (= x2930 (x4077 x4122)) (> x423 x3066) (= x4122 (x727 64 x424 3)) (not (= x3066 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x424 (x2206 1461501637330902918203684832716283019655932542975 x1079)) (= (x2959 x4122) x1696) (= (> x3041 0) x682) (= (x3584 (+ x2245 32)) x4215) (= (x2391 x4215) x1079) (= x3041 (x1460 x2502)) (not (= x3066 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x1696 309485009821345068724781055))) (and (=> (not x682) x2203) (=> (and (and (= x4428 (x3584 (+ 64 x2446))) (= x2446 (x2932 x4691)) (= x3109 (> x4020 0)) (= x4691 (x3584 (+ x2502 32)))) x682) (and (=> (and x3109 (and (= (x3584 (+ 32 x4428)) x3609) (= (x3584 (+ x2446 32)) x2346) (= x4335 (x369 x2245)) (= (x2391 x4215) x1163) (= (> x4335 5) x4758) (= x4263 (x2206 1461501637330902918203684832716283019655932542975 x1163)))) (and (=> (and x4758 (and (= false x232) (= x3294 x2274) (= x1663 true) (= true x3294) (= false x4411))) x1014) (=> (and (>= 5 x4335) (not x4758)) x36))) (=> (not x3109) x36))))))))) (=> (and (and (= true x305) (= true x2468) (= x877 false) (= x2274 x305) (= false x2852)) (not x1364)) x1014)))))))
(assert (x1221 x4037))
(assert (x3402 x3581))
(assert (= x304 (or x652 x1131)))
(assert (x2041 x2306))
(assert (x3402 x4781))
(assert (x2480 18446744073709551549))
(assert (x1411 x4376))
(assert (x3402 x2700))
(assert (x3402 x3088))
(assert (= (or (and x3966 (not x2828)) (and x191 (not x2478))) x2544))
(assert (< 10000 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986)))
(assert (= (and (not x1921) x1075) x4347))
(assert (x3402 x1080))
(assert (= (and (not x1985) x1862) x4670))
(assert (= (and x1134 x4560) x38))
(assert (= x2664 (and x1669 x4197)))
(assert (= x3302 (x4472 (x1941 x1264 x3302 x3945 x4218))))
(assert (= (and (not x3202) x2264) x1142))
(assert (x2890 x401 32))
(assert (x1411 x214))
(assert (x3402 x4335))
(assert (x2890 x608 1461501637330902918203684832716283019655932542976))
(assert (x3402 x4428))
(assert (x2890 x1088 32))
(assert (= (x1892 36893488168893940932) 0))
(assert (x3402 x2746))
(assert (x3402 x2178))
(assert (= 0 (x1892 12884902496)))
(assert (x3402 x1834))
(assert (=> (>= 10000 x800) (= (x1892 x800) 0)))
(assert (x3402 x2375))
(assert (= (and x1499 x2938) x4501))
(assert (= (and x2812 x4792) x2218))
(assert (x3971 32 (- x2647 1)))
(assert (= x1497 (and x2360 x3288)))
(assert (= x1004 (or x4592 x3731)))
(assert (x3402 x1420))
(assert (x3402 x2557))
(assert (x3402 x4688))
(assert (= (x1286 (x727 64 x1836 x434)) 64))
(assert (x3971 32 x3336))
(assert (x3402 x1395))
(assert (x3402 x2737))
(assert (x3402 x1045))
(assert (x1638 (ite (> x438 18446744073709551615) 1 0) (ite (< x438 x1874) 1 0)))
(assert (x2890 x2850 32))
(assert (x3402 x1588))
(assert (x3402 x3330))
(assert (x3402 x372))
(assert (x1411 x4700))
(assert (x3402 x1604))
(assert (x3402 x4759))
(assert (x3402 x4056))
(assert (not (x2480 (x705 x1264 x54 x1258 x384 x4091))))
(assert (x1221 x1447))
(assert (x3402 x3922))
(assert (x2480 134217728))
(assert (x3402 x2636))
(assert (x3402 x1150))
(assert (x3402 x2273))
(assert (x3402 x4204))
(assert (x3402 x903))
(assert (= x1046 (or (and (not x4127) x2458) (and x3085 (not x2563)))))
(assert (x3402 x894))
(assert (= x4145 (and x4645 x2171)))
(assert (= (=> (and (= x1972 x2274) (= x1972 true) (= x3516 true) (= false x2941) (= false x721)) x1014) x2730))
(assert (x3402 x3729))
(assert (x2890 x1883 32))
(assert (x1411 x3079))
(assert (x3402 x4787))
(assert (x3402 x843))
(assert (x3402 x4820))
(assert (x1081 x3932))
(assert (x4488 x1088))
(assert (= (and (not x1051) x4261) x2859))
(assert (= 0 (x1892 576460752571858953)))
(assert (x2041 x942))
(assert (x3402 x2209))
(assert (x3402 x4718))
(assert (=> (<= x2448 10000) (= 0 (x1892 x2448))))
(assert (=> (>= 10000 x1598) (= 0 (x1892 x1598))))
(assert (=> (>= 10000 x3620) (= 0 (x1892 x3620))))
(assert (x3402 x3535))
(assert (x3402 x3608))
(assert (x3402 x3157))
(assert (x3402 x3068))
(assert (x3971 32 x903))
(assert (x2890 x1869 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1281))
(assert (x1221 x4609))
(assert (x3402 x2113))
(assert (x3402 x3711))
(assert (x3402 x3387))
(assert (x3402 x742))
(assert (x3402 x4451))
(assert (x3971 32 x125))
(assert (= x1218 (or x4566 x1046 x1005 x3690 x1776 x376 x3304 x1330 x1620 x4701 x4742 x279 x442 x555 x2668 x4572 x3866 x262 x344 x2081 x3758 x2415 x937 x633 x2253 x3475 x1712 x706 x4734 x978 x4217 x2234 x1245 x149 x242 x1711 x1496 x2544 x4131 x1028 x943 x1437 x4583 x76 x4250 x4638 x3172 x1646 x532 x975 x1520 x744 x1149 x1108 x3291 x4082 x4551 x3121 x3970 x1240 x4110 x4523 x1322 x3617 x2832)))
(assert (x4283 x3608))
(assert (= (and x3498 x2571) x3196))
(assert (x3402 x3358))
(assert (x3402 x4069))
(assert (x3402 x2385))
(assert (x2480 25769804932))
(assert (= x4175 (=> (= x610 (not (> x4772 1))) (and (=> (and (= x2673 (= x3255 x3551)) (= (x1628 196) x3551) (= (x2206 1461501637330902918203684832716283019655932542975 x3551) x3255)) (and (=> (and x2673 (and (= x3209 (= x1774 0)) (= x1774 (x2950 x3551)))) (and (=> (and (and (= x928 false) (= true x93) (= x2274 x980) (= true x980) (= x2632 false)) x3209) x1014) (=> (and (and (= (< x2545 6) x1470) (= x2545 (x1628 164))) (not x3209)) (and (=> (and x1470 (and (<= x2545 5) (= (= 1 x2545) x1126))) (and (=> (and (and (= x3851 (< x909 6)) (= (x1628 164) x909)) (not x1126)) (and (=> (not x3851) x2893) (=> (and (and (= (= 2 x909) x46) (<= x909 5)) x3851) (and (=> (and (not x46) (and (= x4560 (> 6 x2095)) (= (x1628 164) x2095))) (and (=> (not x4560) x2893) (=> (and x4560 (and (= x355 (= x2095 3)) (<= x2095 5))) (and (=> (and (and (= (x1628 324) x2992) (= x351 (< 0 x2992))) x355) (and (=> (not x351) x2051) (=> (and (and (= x4156 (x2206 1461501637330902918203684832716283019655932542975 x912)) (= x1493 (= x912 x4156)) (= x912 (x1628 196))) x351) (and (=> (and (and (= x2482 (= x4376 x231)) (= x4376 (x1628 228)) (= x231 (x2206 1461501637330902918203684832716283019655932542975 x4376))) x1493) (and (=> (and x2482 (and (= x4645 (= x2720 x2340)) (= x2720 (x2206 1461501637330902918203684832716283019655932542975 x2340)) (= (x1628 260) x2340))) (and (=> (and (and (= x73 x1820) (= x1054 x2368) (= x509 x4508) (= x1212 x1924) (= x1477 (x1628 292)) (= x1755 x838) (= x1370 x2268) (= x4508 x3924) (= x1820 x1477) (<= 0 x119) (= x2285 x2325) (<= 0 x4330) (= x932 x2780) (<= x119 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4330) (= x3464 x330) (= x212 x1341) (= x4376 x4508) (<= 0 x1622) (>= x932 0) (= (+ x2268 x119) x932) (= x2749 x866) (= x4862 x866) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x932) (= x1370 x4219) (= x1183 x3739) (= x1677 x1370) (= x3777 x1820) (= x2436 x3457) (= x2718 x1970) (= x2285 x4382) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1622) (= x1677 (x1628 324)) (= x212 x2340) (= x806 x3976) (= (x2194 x4662 x3777 x1341) x119) (= x4686 x838) (= x1299 x2308) (= x2302 x2308) (= x1011 x2368) (= x4330 x106) (= x2436 x1942) (= x4330 (- x1622 x4219)) (= x1820 x88) (= x1534 x806) (= x1069 x866) (= x212 x3075) (= x1271 x2606) (= x1820 x1750) (= (x2119 x1069 x1750 x509) x1622) (= x330 x3191) (= x1924 x4840) (= x1183 x3589) (= x866 x4662) (= x1271 x2658) (= x912 x866)) x4645) x2051) (=> (not x4645) x1908))) (=> (not x2482) x3280))) (=> (not x1493) x24))))) (=> (and (not x355) (and (= false x3461) (= x2274 x2597) (= true x4673) (= x2597 true) (= x3778 false))) x1014))))) (=> (and x46 (and (= x1154 (x2206 1461501637330902918203684832716283019655932542975 x653)) (= x653 (x1628 196)) (= (= x653 x1154) x3570))) (and (=> (not x3570) x24) (=> (and x3570 (and (= x3912 (x1628 228)) (= x3566 (= x1467 x3912)) (= x1467 (x2206 1461501637330902918203684832716283019655932542975 x3912)))) (and (=> (and (and (= (x2206 1461501637330902918203684832716283019655932542975 x4795) x3822) (= x4795 (x1628 260)) (= (= x3822 x4795) x1962)) x3566) (and (=> (and x1962 (and (= x3371 x3991) (= x72 x205) (= x2771 x1755) (= x1853 x1299) (= x1953 x3045) (= x2461 x3739) (= x4795 x3591) (= x1942 x72) (= x202 x2536) (= x3458 x585) (= x653 x3991) (= x1616 x1096) (= x1441 x2898) (= x112 x4784) (= x1616 x4382) (= x1970 x4334) (= x202 x2505) (= x2204 x1483) (= x1953 x1011) (= x2475 x3591) (= x1318 x3912) (= x2898 x3976) (= x4058 x2461) (= x4784 x2606) (= x2204 x3191) (= x1254 x1853) (= (x1628 292) x2536) (= x4840 x3458) (= x2771 x3630))) x625) (=> (not x1962) x1908))) (=> (not x3566) x3280))))))))) (=> (and x1126 (and (= x4630 (x1628 324)) (= x3423 (< 0 x4630)))) (and (=> (and x3423 (and (= (x2206 1461501637330902918203684832716283019655932542975 x4491) x3285) (= x4796 (= x4491 x3285)) (= x4491 (x1628 196)))) (and (=> (not x4796) x24) (=> (and (and (= (x1628 228) x4037) (= (= x4037 x4375) x977) (= x4375 (x2206 1461501637330902918203684832716283019655932542975 x4037))) x4796) (and (=> (not x977) x3280) (=> (and x977 (and (= (= x1100 x2994) x2289) (= x2994 (x1628 260)) (= (x2206 1461501637330902918203684832716283019655932542975 x2994) x1100))) (and (=> (and x2289 (and (= x858 x1946) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2857) (= x3965 x1061) (= (x3377 x209 x3962) x2831) (= x1634 x817) (<= 0 x817) (= x3204 x2524) (= x699 x1942) (<= x2831 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x263 x4037) (= x697 x3739) (= x4666 x4790) (= x699 x2738) (= x4666 x3182) (= x4222 x3363) (= x1703 x1755) (= x822 x2606) (= x1835 x4370) (= x3965 x3647) (= x4416 x4370) (= x822 x1999) (= x4370 x2229) (= x1754 x4697) (= x3965 x4506) (= x3191 x1946) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x817) (= x1299 x3363) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4007) (= x817 (- x2831 x4506)) (= x3962 x263) (<= 0 x2857) (= x4023 x2227) (= x4370 x209) (= x697 x733) (= x4840 x2242) (>= x2831 0) (= x4382 x4697) (= x3571 x4007) (= x1970 x4868) (= x2227 x3976) (= x2242 x1864) (= (+ x1061 x2857) x4007) (>= x4007 0) (= x2197 x263) (= x3647 (x1628 324)) (= x4491 x4370) (= x2994 x4666) (= x1011 x2524) (= x4604 x1703) (= x2857 (x1352 x2229 x4790)))) x2091) (=> (not x2289) x1908))))))) (=> (not x3423) x2091))))) (=> (not x1470) x2893))))) (=> (not x2673) x24))) x610))))
(assert (x2041 x1884))
(assert (x3402 x641))
(assert (= (and x2274 x1218) x4352))
(assert (x3402 x1525))
(assert (= (and x3245 (not x2184)) x2060))
(assert (x3402 x2011))
(assert (not x2608))
(assert (x3402 x2313))
(assert (= (and x304 x322) x2952))
(assert (x3402 x396))
(assert (x1081 x3076))
(assert (x3402 x3480))
(assert (= (and x624 x2835) x1047))
(assert (x3971 32 (- x4443 1)))
(assert (x1411 x2782))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x727 64 x1942 x2750)))
(assert (x3402 x671))
(assert (x3402 x3293))
(assert (x2041 x48))
(assert (x3402 x3882))
(assert (x3402 x2856))
(assert (x4488 x401))
(assert (x2890 x4339 32))
(assert (x3402 x239))
(assert (= (=> (and (= x2371 true) (= false x371) (= true x2946) (= x2274 x2946) (= false x3539)) x1014) x2907))
(assert (x3402 x3642))
(assert (= (=> (and (= x2820 true) (= x2274 x2820) (= x4654 true) (= x2881 false) (= x505 false)) x1014) x4272))
(assert (x3402 x1127))
(assert (x2890 x214 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2890 x653 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3240))
(assert (= (and x4027 x3775) x2076))
(assert (x2890 x345 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2157))
(assert (x2041 x1455))
(assert (= (and x2613 x3619) x3693))
(assert (x3402 x403))
(assert (x3402 x2649))
(assert (x3402 x3008))
(assert (x3402 x3526))
(assert (x3402 x800))
(assert (= x2821 (and (not x3707) x468)))
(assert (x3402 x4251))
(assert (x2041 x1347))
(assert (= (and x2291 (not x4167)) x3074))
(assert (= x4170 (and x183 (not x3036))))
(assert (= (=> (and (<= x2577 18446744073709551614) (or (>= 18446744073709551487 x2577) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x2577)) (<= x3559 1461501637330902918203684832716283019655932542975) (= x678 (x3584 (+ 128 x2577))) (= x2786 (x3042 (- x3608 x2140))) (not (> x2577 x678)) (>= x2786 128) (= x1443 (x2512 x1897)) (= (+ 32 x1961) x1897) (= (x3584 (+ 32 x2675)) x2321) (= (not (> x4541 (+ x1897 32))) x2236) (= (x3584 (+ 32 x3099)) x2675) (= (x2512 x1961) x847) (<= 68 x2140) (>= 18446744073709551614 x2577) (= x3099 (x3584 (+ x2577 32))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x2577) (<= x2577 18446744073709551487)) (= (x2512 x4487) x3559) (= x2741 (x2512 x2140)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2577) (>= 12884902404 x2140) (>= 18446744073709551615 x2577) (<= x2577 18446744073709551615) (= (+ 32 x2140) x4487) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2577)) (= x1961 (+ 32 x4487)) (>= 12884902464 x2786) (<= x2741 5) (> x678 x2577)) (and (=> (= x3214 x678) x368) x2236)) x1623))
(assert (x3402 x1433))
(assert (x3402 x2245))
(assert (x3971 32 x2647))
(assert (x3402 x2651))
(assert (= (or (and (not x2835) x624) (and (not x1358) x3444) (and (not x3048) x1047)) x3655))
(assert (x2890 x3628 32))
(assert (x3402 x3829))
(assert (x1221 x1163))
(assert (x3402 x1686))
(assert (x1081 (- x2710 1)))
(assert (not (x2480 (x1992 x1264 x890))))
(assert (x3402 x471))
(assert (x3971 32 x1881))
(assert (x3402 x568))
(assert (x3402 x2190))
(assert (x1411 x1459))
(assert (x3402 x2027))
(assert (x3402 x4795))
(assert (x3402 x3682))
(assert (x3402 x1432))
(assert (=> (>= 10000 x885) (= (x1892 x885) 0)))
(assert (x3402 x920))
(assert (= x1128 (and x2255 x1644)))
(assert (x2890 x2747 32))
(assert (x2890 x1351 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1517))
(assert (x3402 x66))
(assert (x3402 x2056))
(assert (x3051 (x3831 x455 x818)))
(assert (= (=> (= x459 x3567) x4603) x2259))
(assert (x1411 x2751))
(assert (= (and x227 (not x2399)) x3307))
(assert (x3402 x834))
(assert (x3402 x788))
(assert (= (=> (= (= 0 x71) x363) (and (=> (and (= x293 x4495) x363) x1956) (=> (and (and (>= x1469 1) (= x1469 (x3584 (+ x3581 x293))) (<= x293 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (> x4772 0) x1934) (= x2897 (x493 (* 32 x4772))) (> x1469 x293) (<= x293 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3581 (x3584 (+ x2897 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x293) (= (x3584 (+ x293 32)) x3680)) (not x363)) (and (=> (and (and (= (= 0 (x3177 (ite (> x2853 18446744073709551615) 1 0) (ite (> x1469 x2853) 1 0))) x2588) (= x2853 (x3584 (+ 192 x1469)))) x1934) (and (=> (not x2588) x2203) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1469) (<= x1469 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1469 x2853) (= x364 (x1628 164)) (<= 1 x2853) (= (> 6 x364) x1644) (<= x1469 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x2588) (and (=> (not x1644) x4705) (=> (and (and (= (x1628 196) x2807) (= (x2206 1461501637330902918203684832716283019655932542975 x2807) x4454) (= (= x4454 x2807) x2793)) x1644) (and (=> (and (and (= (x1628 228) x480) (= (x2206 1461501637330902918203684832716283019655932542975 x480) x3896) (= (x3584 (+ 32 x1469)) x4136) (= (= x3896 x480) x2652)) x2793) (and (=> (not x2652) x1279) (=> (and (and (= (x3584 (+ 32 x4136)) x354) (= x913 (x2206 1461501637330902918203684832716283019655932542975 x4759)) (= x4759 (x1628 260)) (= (= x4759 x913) x2107)) x2652) (and (=> x2107 x4341) (=> (not x2107) x1279))))) (=> (not x2793) x1279))))))) (=> (and (not x1934) (= x1469 x1302)) x4241))))) x1710))
(assert (< (x1941 x4629 x534 x1177 x2798) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3971 32 x3076))
(assert (x2890 x3799 1461501637330902918203684832716283019655932542976))
(assert (= (or x3415 x3604) x777))
(assert (= (and x3345 x3533) x3270))
(assert (x3402 x2392))
(assert (=> (<= x1177 10000) (= 0 (x1892 x1177))))
(assert (x3402 x1678))
(assert (x3402 x3559))
(assert (x3402 x479))
(assert (x3402 x3567))
(assert (=> (<= x4738 10000) (= 0 (x1892 x4738))))
(assert (x3402 x4121))
(assert (x2041 x3879))
(assert (x3402 x1617))
(assert (x1411 x1945))
(assert (x3402 x3151))
(assert (x3402 x3136))
(assert (x3402 x64))
(assert (= x2486 (and (not x2219) x4573)))
(assert (= x3487 (and x2555 (not x4514))))
(assert (x3402 x1983))
(assert (= (and (not x3792) x427) x1327))
(assert (x1221 x3160))
(assert (=> (<= x4213 10000) (= (x1892 x4213) 0)))
(assert (x3402 x3184))
(assert (= x620 (and x2145 (not x33))))
(assert (= (=> (and (= false x2377) (= false x3490) (= x2406 true) (= x2406 x2274) (= x692 true)) x1014) x1215))
(assert (= (x2161 (x727 64 x2137 x3854)) x3854))
(assert (x2041 x4343))
(assert (x1221 x157))
(assert (x2890 x1239 1461501637330902918203684832716283019655932542976))
(assert (x3402 x4691))
(assert (x3402 x2731))
(assert (x1411 x4609))
(assert (x3402 x3119))
(assert (x3402 x2767))
(assert (x3402 x1767))
(assert (x3402 x2074))
(assert (x2890 x1945 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x4059 10000) (= (x1892 x4059) 0)))
(assert (x2480 36893488168893940932))
(assert (x2890 x4309 1461501637330902918203684832716283019655932542976))
(assert (= x957 x2902))
(assert (x4488 x10))
(assert (not (x2480 (x571 x1264 x2418 x3471 x4777 x3009 x2336))))
(assert (= (and x320 x4831) x3169))
(assert (=> (<= x4218 10000) (= (x1892 x4218) 0)))
(assert (x3402 x2720))
(assert (x3402 x2282))
(assert (x3402 x3961))
(assert (= x2526 (x4472 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731))))
(assert (= x3011 (and x3428 x229)))
(assert (x3402 x779))
(assert (x3402 x4459))
(assert (x4488 x2850))
(assert (= (x1892 (x727 64 x598 5)) (x727 64 x598 5)))
(assert (x1411 x53))
(assert (x3402 x4146))
(assert (x3402 x3388))
(assert (= 0 (x1892 18446744073709551327)))
(assert (x1411 x1455))
(assert (x3402 x679))
(assert (= x3519 (and (not x322) x304)))
(assert (x3402 x4185))
(assert (x3402 x580))
(assert (x4283 x796))
(assert (x3402 x4410))
(assert (x3402 x1195))
(assert (x2480 25769804960))
(assert (= (x1892 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731)) (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731)))
(assert (= x3690 (or x3195 x2507)))
(assert (x3402 x845))
(assert (x1221 x4376))
(assert (x3051 (x4400 x17 x1168)))
(assert (x3402 x4843))
(assert (x2041 x1079))
(assert (x3402 x4769))
(assert (x3402 x1894))
(assert (x3402 x316))
(assert (x3402 x4322))
(assert (= (x1892 4294967396) 0))
(assert (x3402 x719))
(assert (x1411 x157))
(assert (= (and x1715 x2275) x3604))
(assert (x4488 x2744))
(assert (=> (>= 10000 x74) (= (x1892 x74) 0)))
(assert (x3402 x257))
(assert (x3402 x4155))
(assert (x3402 x938))
(assert (= x2503 (=> (and (>= x4452 132) (= (x3584 (+ 64 x432)) x4843) (= x3089 (+ 63 x4507)) (or (>= x432 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x432 18446744073709551550)) (<= x2035 18446744073709551615) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2543) x4507) (<= 100 x2645) (>= x3686 64) (= (x4710 x2401) x4146) (= x102 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3089)) (= x3482 (+ 32 x2401)) (<= x432 18446744073709551613) (= (+ x4714 x4146) x97) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x432) (>= 18446744073709551550 x432)) (<= x432 18446744073709551614) (= (+ x2401 31) x2454) (= (x3042 (- x3728 x2645)) x3686) (= x4714 (+ x4843 32)) (= (+ x4843 x102) x2173) (or (<= x432 18446744073709551550) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x432)) (<= x4146 18446744073709551615) (>= 18446744082299486596 x4452) (not (> x432 x4843)) (= (+ 31 x4146) x2543) (not (> x4843 x2173)) (< x4843 x2173) (> x3728 x2454) (>= 18446744073709551614 x102) (< x432 x4843) (<= x432 18446744073709551613) (>= 18446744073709551615 x2173) (>= x2173 2) (<= x432 18446744073709551614) (= x596 (x4710 x4086)) (= (x4710 x2645) x4852) (= x4452 (+ x3482 x4146)) (= x1651 (x3584 (+ 32 x432))) (not (> x4452 x3728)) (<= x596 18446744073709551615) (<= x2645 18446744082299486532) (>= 18446744082299486564 x2401) (= x2645 (+ x2035 x1559)) (= x4086 (+ x2645 32)) (<= x432 18446744073709551613) (>= 18446744082299486496 x3686) (= (x4710 x1559) x2035) (>= 18446744073709551614 x432) (= x1714 (not (< (+ x1559 32) x3040))) (= (+ x596 x2645) x2401) (<= x4852 1461501637330902918203684832716283019655932542975) (>= x2401 100)) (and x1714 (=> (= x2173 x3556) x3720)))))
(assert (= (and x1103 (not x4669)) x3752))
(assert (x3402 x749))
(assert (x3402 x109))
(assert (= x800 (x1082 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731))))
(assert (x3402 x3471))
(assert (= (and x1493 x1255) x3632))
(assert (= (=> (and (= x3459 true) (= false x2719) (= x3459 x2274) (= x3114 true) (= false x3310)) x1014) x1572))
(assert (x3402 x2121))
(assert (x3402 x1302))
(assert (= 0 (x1892 18446744073709551356)))
(assert (x3402 x4775))
(assert (x3402 x3314))
(assert (= x2343 (=> (and (= false x647) (= true x146) (= false x2078) (= x2274 x146) (= true x627)) x1014)))
(assert (x3402 x4854))
(assert (x3402 x3129))
(assert (x4488 x457))
(assert (= x2144 (and x427 x3792)))
(assert (x3402 x4018))
(assert (x3402 x1932))
(assert (x3402 x1038))
(assert (> (x727 64 x1447 5) 10000))
(assert (= (=> (and (= x282 (+ 32 x2682)) (= (x1628 x282) x2344) (= (< 18446744073709551615 x2344) x4221)) (and (=> x4221 x2203) (=> (and (not x4221) (and (= x1636 (x3584 (+ x2344 x4664))) (= (x3584 (+ x1636 31)) x1313) (= x1516 (or (and (<= x796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1313)) (and (= (<= x1313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x796 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x796 x1313)))))) (and (=> (and x1516 (and (= x1734 (x1628 x1636)) (= (x3584 (+ x1636 32)) x845) (= (> x1734 18446744073709551615) x1818))) (and (=> (and (not x1818) (and (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1175) x234) (= x4533 (x493 (* 32 x1734))) (= (x3584 (+ x897 31)) x1175) (= (= 0 (x3177 (ite (> x3368 18446744073709551615) 1 0) (ite (> x2074 x3368) 1 0))) x4740) (= (x3584 (+ 32 x4533)) x897) (= x3368 (x3584 (+ x234 x2074))))) (and (=> (and (and (>= x3368 1) (<= x2074 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x2074 x3368) (= x1599 (x493 (* x1734 128))) (<= x2074 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2074 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3584 (+ x1599 x845)) x256) (= x278 (> x256 x796)) (= x4513 (x3584 (+ x2074 32)))) x4740) (and (=> x278 x1784) (=> (and (= (< x845 x256) x857) (not x278)) (and (=> (and x857 (and (= (x3042 (- x796 x845)) x3263) (= (or (and (< x3263 128) (= true (<= x3263 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3263)) x2331))) (and (=> (and (and (= x4314 (x3584 (+ x3368 128))) (= (= (x3177 (ite (< 18446744073709551615 x4314) 1 0) (ite (> x3368 x4314) 1 0)) 0) x646)) (not x2331)) (and (=> (not x646) x2730) (=> (and (and (= (< x3849 6) x474) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3368) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3368) (>= x4314 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3368) (= x3849 (x1628 x845)) (< x3368 x4314)) x646) (and (=> (not x474) x1665) (=> (and (and (= (x3584 (+ x845 32)) x3055) (= x517 (x2206 1461501637330902918203684832716283019655932542975 x32)) (= x32 (x1628 x3055)) (= (= x32 x517) x3560)) x474) (and (=> x3560 x4719) (=> (not x3560) x1797))))))) (=> x2331 x1839))) (=> (and (not x857) (= x3368 x2190)) x3217))))) (=> (not x4740) x2907))) (=> x1818 x3012))) (=> (not x1516) x3964))))) x2788))
(assert (x2890 x2850 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x473 (or (and x3957 (not x3566)) (and (not x977) x1671) (and x3632 (not x2482)))))
(assert (x3402 x618))
(assert (x3402 x2387))
(assert (x3051 (x3706 x1658 x1488 x1120)))
(assert (x2480 25769804868))
(assert (x1081 (- x3076 1)))
(assert (x3402 x3066))
(assert (x2041 x2340))
(assert (x3971 32 x4855))
(assert (x3402 x2607))
(assert (x1411 x3879))
(assert (x2480 576460752571858953))
(assert (=> (>= 10000 x4402) (= 0 (x1892 x4402))))
(assert (= x197 x2274))
(assert (x3402 x3513))
(assert (x1221 x3497))
(assert (x3402 x3443))
(assert (x3402 x1456))
(assert (= x2936 (=> (= x4460 (= 0 x2499)) (and (=> (and (not x4460) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4495) (= (x3584 (+ x4495 32)) x3572) (= x2465 (x493 (* 32 x4772))) (= x1038 (x3584 (+ x4495 x1903))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4495) (< x4495 x1038) (= x3181 (> x4772 0)) (<= x4495 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3584 (+ x2465 32)) x1903) (>= x1038 1))) (and (=> (and (= x1038 x3800) (not x3181)) x3592) (=> (and x3181 (and (= (= 0 (x3177 (ite (> x224 18446744073709551615) 1 0) (ite (> x1038 x224) 1 0))) x3288) (= x224 (x3584 (+ x1038 192))))) (and (=> (not x3288) x2203) (=> (and (and (= (< x2860 6) x839) (> x224 x1038) (>= x224 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1038) (<= x1038 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2860 (x1628 164)) (<= x1038 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x3288) (and (=> (not x839) x4705) (=> (and (and (= (= x1055 x1748) x1358) (= (x2206 1461501637330902918203684832716283019655932542975 x1055) x1748) (= (x1628 196) x1055)) x839) (and (=> (not x1358) x969) (=> (and (and (= x2003 (x1628 228)) (= (= x2003 x1680) x2835) (= x1680 (x2206 1461501637330902918203684832716283019655932542975 x2003)) (= (x3584 (+ x1038 32)) x2985)) x1358) (and (=> (and x2835 (and (= (= x3799 x4775) x3048) (= (x3584 (+ x2985 32)) x3230) (= (x1628 260) x3799) (= (x2206 1461501637330902918203684832716283019655932542975 x3799) x4775))) (and (=> (not x3048) x969) (=> x3048 x443))) (=> (not x2835) x969))))))))))) (=> (and x4460 (= x4495 x2502)) x865)))))
(assert (x3402 x3161))
(assert (= x229 (and (not x2352) x1969)))
(assert (= x2448 (x3716 (x571 x4629 x3171 x4094 x4402 x885 x2448))))
(assert (not (x2480 (x727 x4629 x2271 x4040))))
(assert (= (or (and x1511 x3372) (and x3159 x1640) (and x4595 x1086)) x442))
(assert (= x598 (x4472 (x727 64 x598 5))))
(assert (x3402 x294))
(assert (x3402 x4150))
(assert (x3402 x439))
(assert (x3402 x4844))
(assert (= x2081 (or x1249 x2309)))
(assert (= (x3716 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273)) x3090))
(assert (x3402 x3727))
(assert (= 0 (x1892 576460752303423488)))
(assert (x3402 x631))
(assert (x3402 x1303))
(assert (x3402 x4215))
(assert (= (x4472 (x727 64 x1942 x2750)) x1942))
(assert (= x3732 (and x3920 x301)))
(assert (x3402 x290))
(assert (x2041 x101))
(assert (x3402 x3980))
(assert (x3402 x4184))
(assert (= (x1892 18446744082299486564) 0))
(assert (= (and x910 x2386) x4549))
(assert (= (and x2796 x3329) x4592))
(assert (x1081 x2845))
(assert (x3402 x889))
(assert (= (and x3048 x1047) x4807))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (x3402 x3996))
(assert (x3402 x2216))
(assert (x3402 x1029))
(assert (= x2722 (and (not x2047) x4554)))
(assert (x3402 x4208))
(assert (x3402 x3237))
(assert (x3402 x1967))
(assert (x3402 x1233))
(assert (= (or x2486 x3624) x1224))
(assert (x3402 x2048))
(assert (x3402 x4178))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (x1411 x629))
(assert (x3402 x3889))
(assert (x3402 x1274))
(assert (= (and x1681 (not x1551)) x2591))
(assert (x3402 x4394))
(assert (x3402 x26))
(assert (= (x1892 25769805060) 0))
(assert (x3402 x4772))
(assert (x3402 x4340))
(assert (x3402 x4434))
(assert (x3402 x1295))
(assert (= 0 (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x3402 x4590))
(assert (=> (>= 10000 x2526) (= 0 (x1892 x2526))))
(assert (x3402 x2910))
(assert (x3402 x1264))
(assert (= (or x3613 x3006) x978))
(assert (= x1548 (and x1089 (not x2993))))
(assert (x3402 x1987))
(assert (x3402 x4267))
(assert (x3402 x994))
(assert (= (and x172 (not x902)) x1344))
(assert (= (and x75 (not x278)) x1020))
(assert (x3402 x4059))
(assert (x3402 x3092))
(assert (= (and x2372 x2822) x519))
(assert (x3402 x2536))
(assert (x3402 x4156))
(assert (x3402 x2492))
(assert (x1081 (- x1881 1)))
(assert (x1411 x4637))
(assert (x3402 x4253))
(assert (= x854 (and x2834 x4016)))
(assert (= (x1286 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986)) x1264))
(assert (x3402 x1423))
(assert (x3402 x4492))
(assert (x3402 x4353))
(assert (= x4629 (x1286 (x705 x4629 x2987 x4148 x3823 x3687))))
(assert (x3402 x1338))
(assert (x2041 x1447))
(assert (x3402 x4440))
(assert (x3402 x4871))
(assert (x2890 x3809 32))
(assert (x3402 x4271))
(assert (x3402 x4399))
(assert (= x4327 (and x3944 x2859)))
(assert (x3402 x4081))
(assert (= (and x1020 (not x857)) x2622))
(assert (x2890 x4376 1461501637330902918203684832716283019655932542976))
(assert (x3971 32 x1380))
(assert (x3402 x993))
(assert (= x1839 (=> (and (= x2274 x1530) (= true x1501) (= x812 false) (= false x3409) (= true x1530)) x1014)))
(assert (=> (<= x3009 10000) (= 0 (x1892 x3009))))
(assert (x3402 x2419))
(assert (x3402 x3392))
(assert (= (and x1497 x839) x3444))
(assert (x3402 x288))
(assert (x3402 x1696))
(assert (x3402 x1011))
(assert (x2890 x457 32))
(assert (= (and x3345 (not x3533)) x3857))
(assert (x3402 x3892))
(assert (x3402 x1206))
(assert (x3402 x419))
(assert (x4488 x3879))
(assert (= (and x2060 x4285) x2679))
(assert (x3402 x623))
(assert (x3402 x3183))
(assert (x3402 x1899))
(assert (x3402 x1299))
(assert (= (and x2626 x4450) x2650))
(assert (x3402 x1851))
(assert (= (and x1461 x4723) x3372))
(assert (x3402 x4357))
(assert (x3402 x1649))
(assert (x3402 x1648))
(assert (x3402 x2529))
(assert (x3402 x4242))
(assert (x3853 (ite (< 18446744073709551615 x4314) 1 0)))
(assert (x1221 x2189))
(assert (x2041 x2487))
(assert (= (or (and x1492 (not x4539)) x3320) x3758))
(assert (= (and (not x2796) x3329) x2244))
(assert (= x4519 (and x2938 (not x1499))))
(assert (= (or x3856 x2046) x2613))
(assert (= x4839 (=> (and (= false x3834) (= x2274 x3582) (= x3582 true) (= x3133 false) (= x4320 true)) x1014)))
(assert (x3402 x1055))
(assert (x2890 x3551 1461501637330902918203684832716283019655932542976))
(assert (x1638 (ite (> x3198 18446744073709551615) 1 0) (ite (< x3198 384) 1 0)))
(assert (= x4415 (and x3530 x269)))
(assert (x3402 x4266))
(assert (not (x2480 (x571 x4629 x3171 x4094 x4402 x885 x2448))))
(assert (x3402 x842))
(assert (= x4172 (and x3498 (not x2571))))
(assert (x1081 x3977))
(assert (=> (>= 10000 x4777) (= 0 (x1892 x4777))))
(assert (= x1813 (=> (and (= x353 false) (= true x2355) (= x92 true) (= false x3150) (= x2355 x2274)) x1014)))
(assert (= (and x1188 x4280) x2390))
(assert (x3402 x819))
(assert (x3402 x4687))
(assert (x3402 x13))
(assert (= (and (not x2386) x910) x1220))
(assert (x1081 (- x2966 1)))
(assert (x3402 x1538))
(assert (x3402 x3756))
(assert (x3402 x3602))
(assert (x3402 x1594))
(assert (x3402 x1771))
(assert (= (and x2855 x4327) x1871))
(assert (x3402 x1477))
(assert (x3402 x2723))
(assert (x3402 x1583))
(assert (= x4190 (=> (and (= x504 x2274) (= x467 false) (= x3522 false) (= true x416) (= true x504)) x1014)))
(assert (x1411 x4756))
(assert (x1411 x2916))
(assert (x3402 x2453))
(assert (x2890 x214 32))
(assert (= (and x2118 x2407) x696))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (x3402 x2747))
(assert (x3402 x39))
(assert (= x2351 (and x735 (not x606))))
(assert (x3402 x4618))
(assert (= x3291 (or x2112 x3061)))
(assert (x3402 x251))
(assert (x3402 x3976))
(assert (x3402 x4516))
(assert (x2890 x4700 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1744))
(assert (= x3748 (and (not x2882) x724)))
(assert (= (and x2107 x170) x370))
(assert (= (and x1697 x4474) x613))
(assert (x2890 x345 32))
(assert (= (and (not x3194) x2374) x463))
(assert (x3402 x2733))
(assert (x1411 x4795))
(assert (= x715 (and (not x1464) x4268)))
(assert (x3402 x4647))
(assert (x3402 x2159))
(assert (x3402 x142))
(assert (x3402 x3558))
(assert (x3402 x2569))
(assert (= x302 (and (not x269) x3530)))
(assert (x2890 x3160 1461501637330902918203684832716283019655932542976))
(assert (x3853 (ite (< 18446744073709551615 x224) 1 0)))
(assert (x3402 x4225))
(assert (= 0 (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639745)))
(assert (x3402 x4623))
(assert (x1081 x4155))
(assert (x2890 x942 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3552))
(assert (x3402 x2697))
(assert (= x1070 (and (not x3109) x190)))
(assert (= (=> (and (= x4296 false) (= x695 true) (= true x2880) (= x2274 x2880) (= false x2628)) x1014) x2139))
(assert (x3971 32 (- x125 1)))
(assert (= x3356 (and (not x4745) x4500)))
(assert (x3402 x554))
(assert (= x3564 (and x1022 x3058)))
(assert (x3402 x3331))
(assert (x3402 x2427))
(assert (= (x2161 (x1941 x4629 x534 x1177 x2798)) x1177))
(assert (x3402 x2211))
(assert (x3402 x1593))
(assert (= x991 (=> (and (= x4715 (x3584 (+ 32 x560))) (= x938 (x3042 (- x4690 x337))) (= x719 (x3677 x4056)) (= x1585 (x3584 (+ x4690 32))) (= (< 0 x719) x599) (= x3504 (x3584 (+ x4056 32))) (= x4056 (x2097 320))) (and (=> (and (= x398 x1585) (not x599)) x1569) (=> (and (and (= x2731 (x369 x1870)) (= (> 6 x2731) x2882) (= x1870 (x4342 x3504))) x599) (and (=> x2882 x4223) (=> (not x2882) x3943)))))))
(assert (x2890 x862 1461501637330902918203684832716283019655932542976))
(assert (x3402 x2061))
(assert (x3402 x2539))
(assert (x1411 x4343))
(assert (x2041 x3197))
(assert (x3402 x3130))
(assert (x3402 x3362))
(assert (= x2246 (=> (= x2440 x3066) x691)))
(assert (x3402 x334))
(assert (x2890 x1606 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3390))
(assert (x3402 x734))
(assert (x3402 x829))
(assert (x3402 x3081))
(assert (x3402 x3467))
(assert (x3402 x3394))
(assert (x3402 x1878))
(assert (x3402 x41))
(assert (x3402 x4094))
(assert (x3402 x2320))
(assert (x3402 x4630))
(assert (x3402 x4507))
(assert (x3402 x1485))
(assert (x3402 x1380))
(assert (= x1492 (or x1224 x451)))
(assert (x3402 x3421))
(assert (x3402 x2614))
(assert (x3402 x1044))
(assert (= (and x1142 (not x2982)) x4118))
(assert (x2480 1622688491))
(assert (x3402 x1863))
(assert (x3971 32 (- x1881 1)))
(assert (x2041 x629))
(assert (x3402 x2050))
(assert (x3402 x1063))
(assert (x3402 x864))
(assert (x3402 x1581))
(assert (x3402 x564))
(assert (x3402 x3925))
(assert (x3402 x1402))
(assert (x3402 x4158))
(assert (x3402 x3190))
(assert (x3402 x3737))
(assert (x3402 x2942))
(assert (x3402 x487))
(assert (= x1473 (=> (and (and (= x2016 (>= x4144 x1136)) (and (= (x528 x3465) x4144) (= x3465 x3783))) (and (= 0 x147) (<= x3431 25769804384) (> x804 x651) (= (+ x1525 x3503) x3705) (not (< x4031 x1337)) (> x651 x4242) (= x2964 (+ x4847 31)) (= (+ x4153 31) x580) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x308) x3602) (= x3479 (+ 32 x1216)) (<= x4847 25769805028) (= false x1105) (>= 1461501637330902918203684832716283019655932542975 x1736) (= x2018 (+ x39 32)) (= x4534 true) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x580) x1695) (= (+ 32 x4847 x2237) x1485) (<= 676 x3705) (<= x1485 25769805060) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4845) x2646) (= (x2829 x4205) x3455) (<= x4031 18446744073709551615) (= (+ x1337 x1498) x4031) (or (<= x4242 18446744073709551420) (>= x4242 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (> x4419 x2297) (<= x4242 18446744073709551611) (= x4661 (x2829 x39)) (= false x4385) (= x2287 (+ 63 x1695)) (= x671 (x2829 x3705)) (or (>= x4242 115792089237316195423570985008687907853269984665640564039457584007913129639745) (>= 18446744073709551420 x4242)) (= x4153 (x2829 x1648)) (= x3327 (+ x4153 32 x1648)) (not (> x2713 x4419)) (or (>= x4242 115792089237316195423570985008687907853269984665640564039457584007913129639745) (>= 18446744073709551420 x4242)) (>= 25769804352 x4153) (>= 25769804352 x3455) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x677) x2676) (<= 676 x1648) (= (+ x614 32) x3640) (not (< x4419 x1485)) (<= 2 x804) (= x677 (+ x2280 63)) (= x1348 (x2829 x3503)) (>= 25769804352 x2237) (>= 25769804192 x14) (<= 708 x2713) (= x1648 (+ x3455 x3503)) (= (x2829 x3640) x1736) (> x4031 x1337) (>= 18446744073709551611 x4242) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2287) x1498) (= false x414) (= x1337 (+ x2646 x804)) (not (> x3327 x4419)) (= (+ x2237 31) x308) (>= x4847 676) (= (x2829 x2018) x3047) (>= x3503 676) (>= 25769805028 x1648) (<= x4242 18446744073709551612) (> x4419 x2964) (>= x3431 192) (= x4429 (+ 31 x1648)) (<= x1525 25769804352) (< x4429 x4419) (<= x671 25769804352) (= x804 (+ x2676 x651)) (<= x4242 18446744073709551611) (not (< x651 x4242)) (= (x2829 x614) x1525) (= (x3584 (+ 192 x4242)) x651) (= (+ x3640 32) x39) (>= 1461501637330902918203684832716283019655932542975 x1348) (= x3503 (+ x3266 x14)) (= (+ 32 x3705 x671) x2713) (>= 25769804868 x3503) (>= x4031 4) (>= 25769805028 x3705) (>= x1337 3) (= (+ x3503 x4661) x4847) (= x2237 (x2829 x4847)) (<= x4661 25769804352) (= x4205 (+ 32 x2018)) (= (+ 63 x3602) x4845) (= (+ 31 x3705) x2297) (>= 18446744073709551613 x804) (= (x3042 (- x4419 x3503)) x3431) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2737) x2280) (<= x3327 25769805060) (>= x3327 708) (= (ite (= (ite (= x1107 x4114) (ite (= x1943 x1940) 1 0) (ite (= x1107 x4114) 1 0)) 0) (ite (= x1107 x4114) (ite (= x1943 x1940) 1 0) (ite (= x1107 x4114) 1 0)) (ite (= x4767 x2043) 1 0)) x147) (not (> x804 x1337)) (<= x4242 18446744073709551612) (>= x1485 708) (> x1337 x804) (= (+ 31 x671) x2737) (>= 25769805060 x2713) (<= x3047 1461501637330902918203684832716283019655932542975) (>= 18446744073709551612 x4242) (= x14 (x2829 x3479)) (not (> x651 x804)) (<= x1337 18446744073709551614) (= x614 (+ x3503 32)) (= x824 false))) (and (=> (and (and (= x4631 true) (= x1650 false) (= x4631 x2274)) (not x2016)) x1014) (=> x2016 x4207)))))
(assert (= x2668 (or x4571 x3399)))
(assert (= (x1286 (x727 64 x424 3)) 64))
(assert (x3402 x2985))
(assert (x2041 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2815 (x2161 (x727 64 x1942 x2815))))
(assert (x2890 x84 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x4751))
(assert (x2480 100663300))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x727 x4629 x2271 x4040)))
(assert (= (or (and x2047 x4554) (and x1818 x1277)) x4701))
(assert (x3402 x2301))
(assert (x3402 x2825))
(assert (x4488 x3809))
(assert (x3402 x3233))
(assert (x2480 18446744082299486596))
(assert (x3402 x3766))
(assert (= (and x3423 x953) x1564))
(assert (x3402 x4017))
(assert (= x1550 (=> (and (= x3078 (> x1011 x4769)) (= x4769 (x1628 196))) (and (=> (and (and (= (x1628 292) x3958) (= (or (and (> x3265 x3958) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3958) (<= x3265 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x3265 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x3958 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x120)) (not x3078)) (and (=> (and (and (= (> x1440 18446744073709551615) x543) (= x1440 (x1628 x3362)) (= x3362 (x3584 (+ x3958 164)))) x120) (and (=> x543 x4839) (=> (and (and (= x4838 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1590) (<= x1030 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1030 x1590)) (and (<= x1030 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1590)))) (= x1030 (x3584 (+ x3362 32))) (= x1590 (x3042 (- x796 x1440)))) (not x543)) (and (=> x4838 x3229) (=> (and (not x4838) (and (= x2490 1) (= (x1628 260) x3300) (= x4814 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3265) (<= x3300 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x3265 x3300)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3265) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3300)))))) (and (=> (and (and (= (x3584 (+ 164 x3300)) x3247) (= (< 18446744073709551615 x4155) x637) (= x4155 (x1628 x3247))) x4814) (and (=> x637 x2875) (=> (and (and (= (x3042 (- x796 x3502)) x4693) (= (x3584 (+ x3247 32)) x2048) (= (x493 (* x4155 32)) x3502) (= x4804 (or (and (> x2048 x4693) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2048) (<= x4693 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4693) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2048))))) (not x637)) (and (=> x4804 x357) (=> (and (not x4804) (= x832 (< 0 x4155))) (and (=> (and (not x832) (= x4495 x1302)) x1956) (=> (and x832 (and (= (x1628 260) x2989) (= (or (and (> x2989 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3265)) (and (> x3265 x2989) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2989) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3265)))) x1268))) (and (=> (and x1268 (and (= x4021 (x3584 (+ 164 x2989))) (= x1886 (> x595 18446744073709551615)) (= (x1628 x4021) x595))) (and (=> (and (and (= (x3584 (+ x4021 32)) x1428) (= x799 (x3042 (- x796 x4295))) (= x4295 (x493 (* x595 32))) (= x2587 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x799) (<= x1428 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x799) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1428)) (< x799 x1428))))) (not x1886)) (and (=> (and (not x2587) (= (> x595 0) x4529)) (and (=> (and (and (= (x3042 (- x796 x1428)) x1769) (= x2216 (x3042 (- x1769 63))) (= x3194 (or (and (<= x2216 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2256 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2256) (<= x2216 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2256 x2216)))) (= (x1628 x1428) x2256)) x4529) (and (=> (and x3194 (and (= x269 (= x4469 x3754)) (= (x1628 x15) x3754) (= x15 (x3584 (+ x1428 x2256))) (= (x2206 1461501637330902918203684832716283019655932542975 x3754) x4469))) (and (=> (not x269) x2666) (=> (and x269 (and (= (or (and (> x1367 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3265)) (and (= (<= x3265 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1367)) (< x1367 x3265))) x3333) (= (x1628 260) x1367))) (and (=> (not x3333) x2203) (=> (and (and (= (x1628 x3008) x2012) (= x3008 (x3584 (+ 164 x1367))) (= (< 18446744073709551615 x2012) x2184)) x3333) (and (=> x2184 x2203) (=> (and (and (= x4722 (x3584 (+ 32 x3008))) (= x3467 (x493 (* x2012 32))) (= x4285 (or (and (> x3750 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4722)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3750) (<= x4722 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3750 x4722)))) (= x3750 (x3042 (- x796 x3467)))) (not x2184)) (and (=> (and (not x4285) (= x3419 (> x2012 0))) (and (=> (not x3419) x2203) (=> (and x3419 (and (= x2773 (x3042 (- x2607 63))) (= x3586 (x1628 x4722)) (= x3697 (or (and (< x3586 x2773) (= (<= x3586 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2773))) (and (<= x2773 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3586)))) (= (x3042 (- x796 x4722)) x2607))) (and (=> (and (and (= (x1628 x1112) x1171) (= (x3584 (+ 32 x4602)) x1112) (= (x3042 (- x90 31)) x2887) (= x2540 (or (and (> x1171 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2887 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1171 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2887 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2887 x1171)))) (= x4602 (x3584 (+ x4722 x3586))) (= (x3042 (- x796 x4602)) x90)) x3697) (and (=> (and x2540 (and (= x732 (< 18446744073709551615 x2027)) (= x2027 (x1628 x1523)) (= x1523 (x3584 (+ x1171 x4602))))) (and (=> (and (not x732) (and (= x3157 (x3042 (- x796 x2027))) (= x4280 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1667) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3157)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3157) (<= x1667 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3157 x1667)))) (= x1667 (x3584 (+ x1523 32))))) (and (=> x4280 x2203) (=> (and (and (= (x3584 (+ x4424 96)) x4208) (= x4169 (x3584 (+ x4208 32))) (= x1500 (x1421 x293)) (= (x3584 (+ 4 x1302)) x4424) (= x1450 (> x1500 0))) (not x4280)) (and (=> (and (not x1450) (= x352 x4169)) x730) (=> (and (and (= (> 6 x472) x3162) (= x2549 (x111 x3680)) (= x472 (x4061 x2549))) x1450) (and (=> (not x3162) x2311) (=> x3162 x4103))))))) (=> x732 x2203))) (=> (not x2540) x2203))) (=> (not x3697) x1215))))) (=> x4285 x2203))))))))) (=> (not x3194) x4299))) (=> (not x4529) x3397))) (=> x2587 x357))) (=> x1886 x2875))) (=> (not x1268) x957))))))))) (=> (not x4814) x2902))))))) (=> (not x120) x22))) (=> x3078 x1572)))))
(assert (x3402 x235))
(assert (x1411 x345))
(assert (x3402 x1748))
(assert (= x625 x2051))
(assert (x3402 x3300))
(assert (= x2349 (and x3915 x1952)))
(assert (= x3957 (and x4165 x3570)))
(assert (x3402 x4826))
(assert (x2890 x1645 1461501637330902918203684832716283019655932542976))
(assert (= (and x4514 x2555) x1103))
(assert (x3402 x2089))
(assert (x1221 x3289))
(assert (x3402 x987))
(assert (x2890 x1234 32))
(assert (x3402 x2735))
(assert (= (=> (and (= x535 x2274) (= x1725 false) (= x3220 true) (= x4463 false) (= x535 true)) x1014) x3205))
(assert (x3402 x4144))
(assert (= x1522 (x4472 (x727 x1264 x1522 x3093))))
(assert (x3402 x4126))
(assert (x3402 x4376))
(assert (x3402 x3776))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x727 64 x1836 x434)))
(assert (x2890 x101 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3669))
(assert (x3402 x89))
(assert (x3402 x3918))
(assert (x3402 x77))
(assert (x2480 2657635784))
(assert (= (and x4347 (not x2997)) x3085))
(assert (= x1836 (x4472 (x727 64 x1836 x434))))
(assert (= x4046 (=> (and (= (x700 x3567) x4436) (= (not (< 1 x4436)) x3273)) (and x3273 x2640))))
(assert (= (and (not x789) x4483) x3899))
(assert (x2041 x1945))
(assert (= (or x2650 x1850) x3493))
(assert (x1081 x3890))
(assert (x3402 x432))
(assert (x3402 x678))
(assert (x3402 x2906))
(assert (x2480 12884902532))
(assert (x3402 x2520))
(assert (= x1383 (=> (and (= (x3584 (+ 128 x2168)) x583) (= (x2829 x1187) x549) (= x1187 (+ x4485 32)) (<= x2168 18446744073709551615) (<= x3003 1461501637330902918203684832716283019655932542975) (not (> x2168 x583)) (>= 18446744073709551614 x2168) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2168)) (= x676 (x2829 x4820)) (<= x2168 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (+ x4820 32) x4485) (= x3293 (x3042 (- x4419 x4820))) (>= 18446744073709551615 x2168) (= x2426 (x2829 x924)) (= x924 (+ 32 x1187)) (>= 5 x676) (or (<= x2168 18446744073709551487) (>= x2168 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (= x3003 (x2829 x4485)) (or (>= x2168 115792089237316195423570985008687907853269984665640564039457584007913129639809) (<= x2168 18446744073709551487)) (= x501 (not (< (+ 32 x924) x4063))) (>= 18446744073709551614 x2168) (<= x3293 25769804352) (> x583 x2168) (<= 128 x3293) (<= 708 x4820) (<= x4820 25769804932)) (and x501 (=> (= x583 x3315) x4677)))))
(assert (x3402 x2280))
(assert (x1221 x3912))
(assert (= x2819 (and (not x223) x2218)))
(assert (= x3012 (=> (and (= true x2290) (= true x4422) (= x4108 false) (= false x4294) (= x2274 x4422)) x1014)))
(assert (x2890 x4609 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1737))
(assert (x3402 x310))
(assert (x3402 x1565))
(assert (not (x2480 (x727 64 x598 5))))
(assert (x3402 x3879))
(assert (= (and x468 x3707) x975))
(assert (x3971 32 x4155))
(assert (= x3171 (x4472 (x571 x4629 x3171 x4094 x4402 x885 x2448))))
(assert (x3402 x1133))
(assert (x1638 (ite (< 18446744073709551615 x224) 1 0) (ite (< x224 x1038) 1 0)))
(assert (x2890 x2747 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)))
(assert (x1411 x4310))
(assert (= x3823 (x381 (x705 x4629 x2987 x4148 x3823 x3687))))
(assert (x3402 x3941))
(assert (x3402 x898))
(assert (x3402 x1662))
(assert (x3402 x3256))
(assert (x3402 x2798))
(assert (x3402 x3908))
(assert (= x2725 (and x1101 (not x3354))))
(assert (x2480 18446744073709551356))
(assert (x3402 x521))
(assert (not (x2480 (x727 x1264 x1522 x3093))))
(assert (= x1334 (and x1576 x4457)))
(assert (x3402 x1651))
(assert (x4283 x3728))
(assert (not (x2480 (x727 64 x1447 5))))
(assert (x2480 201326601))
(assert (x3402 x4230))
(assert (x3402 x1210))
(assert (= (x2161 (x727 x1264 x1522 x3093)) x3093))
(assert (< (x571 x4629 x3171 x4094 x4402 x885 x2448) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x137))
(assert (x2041 x1975))
(assert (x3402 x489))
(assert (x3402 x875))
(assert (x3402 x4454))
(assert (x1411 x1730))
(assert (x3051 (x4124 x3802 x28 x1288)))
(assert (x3402 x1590))
(assert (x3402 x2141))
(assert (x2480 3221225663))
(assert (x3402 x3290))
(assert (x3402 x1887))
(assert (x3402 x4498))
(assert (x3402 x2108))
(assert (x3402 x701))
(assert (x3402 x1216))
(assert (x3402 x178))
(assert (= (x2161 (x1941 x1264 x3302 x3945 x4218)) x3945))
(assert (x3402 x3265))
(assert (> (x727 64 x2137 x3854) 10000))
(assert (=> (>= 10000 x534) (= 0 (x1892 x534))))
(assert (x3402 x1388))
(assert (= x326 (and x313 (not x3588))))
(assert (= (and x3154 (not x2927)) x1681))
(assert (x3402 x1138))
(assert (x2890 x4453 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2933 (and x2071 x55)))
(assert (= x1317 (and x1103 x4669)))
(assert (x3402 x1355))
(assert (x3402 x3787))
(assert (= (x381 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)) x3753))
(assert (x1221 x4491))
(assert (x3402 x2782))
(assert (= 0 (x1892 4294967296)))
(assert (= (and x4118 x4461) x2030))
(assert (x3402 x3828))
(assert (x3402 x2035))
(assert (= x2527 (and x1251 x1040)))
(assert (x3051 (x452 x2669 x3914)))
(assert (x3402 x1916))
(assert (x3402 x4503))
(assert (= x4746 (or x4622 (and (not x3423) x953))))
(assert (x3402 x14))
(assert (= x1227 (x1618 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731))))
(assert (x2890 x3089 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2041 x623))
(assert (x2041 x2590))
(assert (x3402 x3431))
(assert (x1081 x3525))
(assert (x2890 x1459 32))
(assert (x3402 x4135))
(assert (x1081 x125))
(assert (x3402 x2589))
(assert (= (x1892 25769804992) 0))
(assert (x1081 x4772))
(assert (= x1797 (=> (and (= x3223 true) (= x3223 x2274) (= true x3877) (= x12 false) (= x2328 false)) x1014)))
(assert (x2041 x4759))
(assert (x3051 (x3377 x209 x3962)))
(assert (= x656 (=> (and (= (not (< 1 x487)) x4423) (= x487 (x3677 x4865)) (= x3314 (x3584 (+ x3567 32)))) (and x484 x4423))))
(assert (x3402 x1270))
(assert (x2041 x1539))
(assert (= x2827 (and x2665 x139)))
(assert (x3971 128 x1273))
(assert (x1221 x598))
(assert (= (or x1085 x1070) x2106))
(assert (x3402 x4063))
(assert (= 0 (x1892 201326601)))
(assert (x3402 x1998))
(assert (x3402 x3912))
(assert (= (and x1450 x4302) x3271))
(assert (x3402 x3214))
(assert (x3853 (ite (> x3368 x4314) 1 0)))
(assert (x3402 x3759))
(assert (= x3781 (and (not x1450) x4302)))
(assert (x3051 (x2194 x4662 x3777 x1341)))
(assert (x3402 x4739))
(assert (x2480 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (= x2063 (=> (and (= x3343 (x1628 x4225)) (= x3022 (> x1011 x3343))) (and (=> x3022 x1572) (=> (and (not x3022) (and (= x1891 (x1628 x1588)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3796) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1891)) (< x1891 x3796)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3796) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1891))) x1535) (= (+ x2566 32) x1588))) (and (=> (and (and (= (> x1329 18446744073709551615) x2162) (= (x1628 x4650) x1329) (= x4650 (x3584 (+ x3290 x1891)))) x1535) (and (=> (and (not x2162) (and (= x3955 (x3584 (+ x4650 32))) (= (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x294) (<= x3955 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x294 x3955) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x294) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3955)))) x167) (= (x3042 (- x796 x1329)) x294))) (and (=> x167 x3229) (=> (and (not x167) (and (= x612 (or (and (<= x3796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4841)) (and (< x4841 x3796) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3796) (<= x4841 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1628 x2566) x4841) (= 1 x3043))) (and (=> (not x612) x2151) (=> (and x612 (and (= (x1628 x2036) x3525) (= x3354 (< 18446744073709551615 x3525)) (= x2036 (x3584 (+ x3290 x4841))))) (and (=> (and (not x3354) (and (= (or (and (<= x3776 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1993)) (and (= (<= x3776 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1993)) (> x3776 x1993))) x4490) (= x1993 (x3042 (- x796 x1098))) (= (x493 (* x3525 32)) x1098) (= x3776 (x3584 (+ 32 x2036))))) (and (=> x4490 x1801) (=> (and (not x4490) (= (< 0 x3525) x1694)) (and (=> (and (and (= x3491 (x1628 x2566)) (= x1200 (or (and (<= x3796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3491)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3796) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3491)) (> x3796 x3491))))) x1694) (and (=> (and x1200 (and (= (x3584 (+ x3491 x3290)) x1593) (= (> x1380 18446744073709551615) x4297) (= x1380 (x1628 x1593)))) (and (=> x4297 x4798) (=> (and (not x4297) (and (= x2565 (x3584 (+ x1593 32))) (= (x493 (* x1380 32)) x213) (= x303 (or (and (> x2565 x2842) (= (<= x2565 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2842 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2565) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2842)))) (= (x3042 (- x796 x213)) x2842))) (and (=> x303 x1801) (=> (and (not x303) (= x1788 (> x1380 0))) (and (=> (and (and (= (or (and (> x4399 x4770) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4770) (<= x4399 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4399) (> x4770 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x3821) (= x4399 (x3042 (- x3330 63))) (= x3330 (x3042 (- x796 x2565))) (= (x1628 x2565) x4770)) x1788) (and (=> (and x3821 (and (= x4776 (x3584 (+ x4770 x2565))) (= (x2206 1461501637330902918203684832716283019655932542975 x2751) x3167) (= x2751 (x1628 x4776)) (= x655 (= x3167 x2751)))) (and (=> (not x655) x2666) (=> (and (and (= (x1628 x2566) x4066) (= x4027 (or (and (> x3796 x4066) (= (<= x3796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x4066 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x3796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x4066 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) x655) (and (=> (and x4027 (and (= x1863 (x1628 x411)) (= x411 (x3584 (+ x4066 x3290))) (= (< 18446744073709551615 x1863) x1278))) (and (=> (and (not x1278) (and (= (x3042 (- x796 x1190)) x3963) (= (or (and (< x3963 x2974) (= (<= x2974 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3963 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3963) (<= x2974 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x2086) (= x1190 (x493 (* 32 x1863))) (= (x3584 (+ 32 x411)) x2974))) (and (=> x2086 x2203) (=> (and (= (< 0 x1863) x1097) (not x2086)) (and (=> (not x1097) x2203) (=> (and x1097 (and (= x1824 (x3042 (- x796 x2974))) (= x3792 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4052) (<= x639 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x639) (<= x4052 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4052 x639)))) (= (x1628 x2974) x4052) (= (x3042 (- x1824 63)) x639))) (and (=> (and x3792 (and (= x1608 (x1628 x4378)) (= x4688 (x3042 (- x796 x1898))) (= (x3584 (+ x2974 x4052)) x1898) (= x4378 (x3584 (+ x1898 32))) (= x1933 (x3042 (- x4688 31))) (= (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1933) (> x1608 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1933) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1608)) (< x1608 x1933))) x3735))) (and (=> (and (and (= x960 (x1628 x4407)) (= x3785 (> x960 18446744073709551615)) (= x4407 (x3584 (+ x1608 x1898)))) x3735) (and (=> x3785 x2203) (=> (and (not x3785) (and (= (or (and (> x2447 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x3 x2447) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2447) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3)))) x1051) (= x3 (x3584 (+ 32 x4407))) (= x2447 (x3042 (- x796 x960))))) (and (=> (and (not x1051) (and (= x3427 (x3584 (+ 32 x3275))) (= (x2459 x4495) x4675) (= (x3584 (+ x3800 4)) x4808) (= x3275 (x3584 (+ x4808 96))) (= (> x4675 0) x3944))) (and (=> (and x3944 (and (= x2855 (< x2864 6)) (= x1560 (x3165 x3572)) (= x2864 (x2509 x1560)))) (and (=> x2855 x2064) (=> (not x2855) x2311))) (=> (and (= x3427 x337) (not x3944)) x4116))) (=> x1051 x2203))))) (=> (not x3735) x2203))) (=> (not x3792) x1215))))))) (=> x1278 x2203))) (=> (not x4027) x2203))))) (=> (not x3821) x4299))) (=> (not x1788) x3397))))))) (=> (not x1200) x957))) (=> (and (= x3800 x2502) (not x1694)) x865))))) (=> x3354 x4798))))))) (=> x2162 x4839))) (=> (not x1535) x22)))))))
(assert (=> (>= 10000 x4731) (= (x1892 x4731) 0)))
(assert (x3402 x1328))
(assert (x1411 x26))
(assert (x3402 x1177))
(assert (x3402 x1079))
(assert (x2041 x4310))
(assert (x3402 x3164))
(assert (x3402 x4361))
(assert (= (or x194 x3952) x4250))
(assert (x3402 x4106))
(assert (= (or x3070 x1327) x76))
(assert (x3402 x2125))
(assert (x3402 x4466))
(assert (= x3964 (=> (and (= x3123 x2274) (= x3123 true) (= false x1417) (= false x3803) (= true x2500)) x1014)))
(assert (x2890 x3225 32))
(assert (x2041 x4660))
(assert (x3402 x4436))
(assert (x1221 x1975))
(assert (x3402 x3393))
(assert (= (and (not x682) x4501) x4107))
(assert (x2041 x10))
(assert (=> (>= 10000 x4273) (= 0 (x1892 x4273))))
(assert (x4488 x1234))
(assert (x3402 x1996))
(assert (= (and (not x3547) x3323) x4197))
(assert (= (x1892 (x727 64 x1447 5)) (x727 64 x1447 5)))
(assert (x2890 x2744 32))
(assert (= (x1892 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (x3402 x1557))
(assert (x3402 x50))
(assert (= (and x3441 (not x646)) x2552))
(assert (x3402 x3198))
(assert (x1221 x660))
(assert (x3402 x1895))
(assert (= (and x612 x2637) x1101))
(assert (x1221 x1239))
(assert (x3402 x481))
(assert (x1221 x3518))
(assert (x3971 32 x265))
(assert (x3402 x2417))
(assert (x2041 x2994))
(assert (x1411 x1199))
(assert (x3402 x1502))
(assert (= (x2161 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)) x1598))
(assert (x2890 x3754 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1560))
(assert (x3402 x3719))
(assert (x3402 x4611))
(assert (x3402 x4421))
(assert (x3971 32 x1242))
(assert (x3402 x4216))
(assert (x3402 x3675))
(assert (x2890 x564 32))
(assert (= x3664 (and x2431 (not x4529))))
(assert (x3402 x1877))
(assert (= x4068 (and x3814 x2954)))
(assert (x3402 x391))
(assert (= (x1892 879188153) 0))
(assert (x3402 x4382))
(assert (x1221 x1455))
(assert (x3402 x4690))
(assert (x2890 x32 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3171))
(assert (x2041 x1199))
(assert (x3402 x1325))
(assert (= (and x2847 x4864) x1717))
(assert (x3402 x308))
(assert (= (or x3664 x3379) x279))
(assert (= x4822 (and (not x1659) x1718)))
(assert (x1411 x4339))
(assert (x3402 x3909))
(assert (x3402 x4561))
(assert (= (x2161 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986)) x536))
(assert (x1411 x2994))
(assert (x1411 x1606))
(assert (x3402 x23))
(assert (x4488 x48))
(assert (x3402 x2250))
(assert (x3402 x2380))
(assert (x3402 x1189))
(assert (x2041 x457))
(assert (x2890 x2916 32))
(assert (= x4551 (or (and x4831 (not x320)) (and (not x3844) x892) (and (not x4351) x2819))))
(assert (x2890 x1055 1461501637330902918203684832716283019655932542976))
(assert (x3402 x4762))
(assert (x3402 x1455))
(assert (x3402 x134))
(assert (x2041 x4761))
(assert (x3402 x1755))
(assert (x3402 x3108))
(assert (x1221 x2751))
(assert (= (=> (and (= (not (or (and (> x3265 x2818) (= (<= x2818 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3265 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x2818 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3265)))) x2384) (= (x1628 260) x2818)) (and x2902 x2384)) x91))
(assert (x4283 x3710))
(assert (x3971 32 (- x3977 1)))
(assert (x1411 x1325))
(assert (x3402 x379))
(assert (x3402 x1980))
(assert (= x710 (and x348 (not x4297))))
(assert (x4488 x2916))
(assert (x3402 x3479))
(assert (x3402 x2021))
(assert (x2480 18446744073709551614))
(assert (= (x1892 12884902500) 0))
(assert (x3402 x919))
(assert (= (or (and (not x4560) x1134) (and x1058 (not x3851)) (and (not x1470) x2760)) x3866))
(assert (= (x1892 1622688491) 0))
(assert (x4488 x1351))
(assert (x2890 x4761 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2890 x26 1461501637330902918203684832716283019655932542976))
(assert (x2480 6442451295))
(assert (= x1279 x4139))
(assert (x3402 x3305))
(assert (x3402 x4668))
(assert (x3402 x3668))
(assert (x3402 x2025))
(assert (x4488 x4845))
(assert (x3402 x157))
(assert (x4488 x2602))
(assert (= x522 (and x4670 (not x1995))))
(assert (x2041 x564))
(assert (x3402 x4452))
(assert (x2041 x2751))
(assert (x3402 x4228))
(assert (= x1979 x965))
(assert (x3402 x1761))
(assert (= (or x4079 x717) x744))
(assert (x3402 x4616))
(assert (x3402 x2400))
(assert (= (x1892 18446744082299486596) 0))
(assert (x3402 x799))
(assert (x3402 x2999))
(assert (x3402 x2068))
(assert (x3402 x1301))
(assert (x3402 x4509))
(assert (x3402 x3640))
(assert (x2041 x3160))
(assert (= x2691 x2875))
(assert (x3402 x3878))
(assert (x1221 x377))
(assert (x3402 x4773))
(assert (x2890 x3879 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1638 (ite (< 18446744073709551615 x4314) 1 0) (ite (> x3368 x4314) 1 0)))
(assert (x3971 32 x2845))
(assert (x3402 x1246))
(assert (x3402 x3958))
(assert (x3402 x3575))
(assert (x3402 x3800))
(assert (= x3568 (and x1640 (not x3159))))
(assert (x3402 x2772))
(assert (x3402 x4277))
(assert (x3402 x2506))
(assert (x3402 x3880))
(assert (x3402 x986))
(assert (=> (>= 10000 x3950) (= (x1892 x3950) 0)))
(assert (= x3712 (or x3118 x3899)))
(assert (x3402 x4716))
(assert (x3402 x853))
(assert (x3402 x924))
(assert (x2890 x157 1461501637330902918203684832716283019655932542976))
(assert (x3402 x65))
(assert (x3402 x3230))
(assert (x3402 x1351))
(assert (x3402 x130))
(assert (not (x2480 (x727 64 x2137 x3854))))
(assert (x1221 x1771))
(assert (x3402 x529))
(assert (x2480 1461501637330902918203684832716283019655932542975))
(assert (x3402 x2631))
(assert (x2041 x401))
(assert (x3971 32 x3898))
(assert (= 64 (x1286 (x727 64 x1942 x2815))))
(assert (= (and x4796 x1564) x1671))
(assert (x3402 x233))
(assert (= x1266 (and (not x3152) x680)))
(assert (x3402 x3822))
(assert (x2890 x2543 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x3039 x3420) x795))
(assert (x1411 x1163))
(assert (x1221 x3079))
(assert (x3402 x4470))
(assert (x3402 x3180))
(assert (x3402 x3968))
(assert (x3402 x3175))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x1081 x982))
(assert (> (x1941 x1264 x3302 x3945 x4218) 10000))
(assert (x3402 x3043))
(assert (= (and x599 x777) x724))
(assert (x3402 x2807))
(assert (x3402 x53))
(assert (= x2714 (=> (and (= x4235 false) (= false x3385) (= x298 true) (= x2274 x298) (= x2451 true)) x1014)))
(assert (x3402 x2684))
(assert (x2480 4294967296))
(assert (x3402 x3163))
(assert (x3402 x1685))
(assert (x3402 x1007))
(assert (x1221 x1199))
(assert (= x1521 (=> (and (= true x3742) (= false x1981) (= true x900) (= x2274 x3742) (= false x339)) x1014)))
(assert (x3402 x4487))
(assert (= x544 (and x2939 x1888)))
(assert (x3402 x4359))
(assert (x3402 x100))
(assert (= (and x3444 x1358) x624))
(assert (x3402 x2934))
(assert (x1081 (- x3893 1)))
(assert (x3402 x74))
(assert (x3402 x211))
(assert (x2890 x942 32))
(assert (x2041 x1771))
(assert (=> (>= 10000 x280) (= (x1892 x280) 0)))
(assert (x3402 x3684))
(assert (x3402 x2237))
(assert (x2041 x4496))
(assert (= (=> (and (or (<= x1983 18446744073709551487) (>= x1983 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (<= x1983 18446744073709551614) (= (x3584 (+ 32 x1983)) x1366) (>= x4049 128) (<= 68 x4863) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1983)) (= x3004 (x3584 (+ 32 x2199))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1983) (>= 18446744073709551615 x1983) (= (x3584 (+ 32 x1366)) x2199) (= (x2512 x4863) x1728) (= (x2512 x3312) x3227) (> x572 x1983) (<= x4863 12884902404) (= (x2512 x3870) x834) (>= 12884902464 x4049) (= x2891 (+ 32 x3870)) (<= x3227 1461501637330902918203684832716283019655932542975) (= (+ 32 x3312) x3870) (= x572 (x3584 (+ 128 x1983))) (= x3237 (x2512 x2891)) (= (x3042 (- x3608 x4863)) x4049) (>= 18446744073709551614 x1983) (not (< x572 x1983)) (= x1356 (not (> x1301 (+ x2891 32)))) (<= x1728 5) (<= x1983 18446744073709551615) (or (>= 18446744073709551487 x1983) (>= x1983 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (= x3312 (+ 32 x4863))) (and x1356 (=> (= x572 x4851) x287))) x1141))
(assert (=> (>= 10000 x1522) (= 0 (x1892 x1522))))
(assert (x3402 x850))
(assert (x3402 x385))
(assert (= (and x3659 x4364) x1857))
(assert (x3402 x4477))
(assert (x3402 x2980))
(assert (= x680 (and x4774 x1717)))
(assert (x3402 x32))
(assert (x1411 x1447))
(assert (= x1526 (and x3579 x321)))
(assert (x3402 x3301))
(assert (x3402 x2560))
(assert (= (x1892 18446744073709551550) 0))
(assert (x3402 x337))
(assert (x2480 18446744073709551327))
(assert (x3402 x4445))
(assert (x3402 x1769))
(assert (x2041 256))
(assert (x3402 x417))
(assert (= (x1892 (x727 64 x4059 4)) (x727 64 x4059 4)))
(assert (x2041 x1606))
(assert (x2890 x2916 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2892))
(assert (= x2175 (and x1307 (not x1310))))
(assert (x3971 128 x903))
(assert (x3402 x150))
(assert (x3402 x1137))
(assert (x3402 x3563))
(assert (x3402 x769))
(assert (x3402 x4429))
(assert (x3971 32 (- x2710 1)))
(assert (x3402 x3476))
(assert (x3402 x4008))
(assert (x3402 x2128))
(assert (x3971 128 x4859))
(assert (x3402 x1562))
(assert (x3402 x1201))
(assert (x3402 x1587))
(assert (x3402 x3932))
(assert (x4488 x2747))
(assert (x3402 x4675))
(assert (x3402 x2299))
(assert (= x1108 (or x4850 x4803)))
(assert (=> (>= 10000 x3190) (= 0 (x1892 x3190))))
(assert (x3402 x1706))
(assert (x2480 18446744082299486496))
(assert (x3051 (x2119 x1069 x1750 x509)))
(assert (= x4094 (x2161 (x571 x4629 x3171 x4094 x4402 x885 x2448))))
(assert (x3402 x2716))
(assert (x3402 x1610))
(assert (x3402 x527))
(assert (x3402 x4544))
(assert (= (and (not x1040) x1251) x533))
(assert (x3402 x2612))
(assert (x3402 x1049))
(assert (x3402 x2326))
(assert (x2041 x1351))
(assert (x3402 x2132))
(assert (x3402 x4629))
(assert (x3402 x1552))
(assert (=> (>= 10000 x3090) (= (x1892 x3090) 0)))
(assert (x3402 x1608))
(assert (x3402 x3241))
(assert (x3402 x253))
(assert (x3402 x328))
(assert (x2890 x4343 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3495))
(assert (x3971 32 (- x265 1)))
(assert (= (and (not x4461) x4118) x633))
(assert (x3402 x3057))
(assert (x3402 x1403))
(assert (x3402 x4624))
(assert (= (and x4165 (not x3570)) x2109))
(assert (x3402 x3176))
(assert (x3402 x4520))
(assert (x1221 x4637))
(assert (x3402 x398))
(assert (x2890 x2751 1461501637330902918203684832716283019655932542976))
(assert (x2041 x1325))
(assert (x3402 x384))
(assert (x3402 x4040))
(assert (= (x1892 25769805028) 0))
(assert (x3402 x45))
(assert (=> (>= 10000 x393) (= (x1892 x393) 0)))
(assert (x3402 x1940))
(assert (x2890 x292 32))
(assert (x1081 x3893))
(assert (x1221 x3799))
(assert (x2041 x1869))
(assert (x3402 x2158))
(assert (= (and x2927 x3154) x3061))
(assert (x3402 x2840))
(assert (x1081 x4855))
(assert (= (or x4807 x1298) x3903))
(assert (x1411 x4491))
(assert (x3971 32 x2250))
(assert (x2480 4294967295))
(assert (x3402 x325))
(assert (= x2100 (and x680 x3152)))
(assert (x3402 x4033))
(assert (x3402 x1880))
(assert (x3402 x2166))
(assert (x3402 x3760))
(assert (x3402 x1389))
(assert (= x22 (=> (and (= x2329 true) (= true x4270) (= false x2312) (= x2274 x2329) (= x673 false)) x1014)))
(assert (= (and (not x2274) x1218) x1413))
(assert (x3402 x3710))
(assert (x3402 x4380))
(assert (x3402 x1428))
(assert (= (=> (and (= false x9) (= x2274 x4129) (= x1739 false) (= x3808 true) (= true x4129)) x1014) x4705))
(assert (= (and x2267 x1309) x3445))
(assert (x2890 x1175 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007906687188642))
(assert (x2890 x2287 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2095))
(assert (x3402 x565))
(assert (x4488 x345))
(assert (x3402 x2454))
(assert (x3402 x2964))
(assert (x1081 x3478))
(assert (x1081 x903))
(assert (x3402 x591))
(assert (x3402 x1121))
(assert (= x4236 (and x1305 x121)))
(assert (x3402 x3652))
(assert (x3402 x3744))
(assert (= (x1892 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986)) (x3611 x1264 x1949 x536 x821 x80 x2560 x2986)))
(assert (x3402 x2654))
(assert (x1411 x2189))
(assert (x3402 x1107))
(assert (x3402 x2005))
(assert (x2480 25769805060))
(assert (x3402 x2682))
(assert (= x947 (and x3988 (not x637))))
(assert (= (and (not x2131) x247) x570))
(assert (x3402 x2920))
(assert (= x4273 (x161 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273))))
(assert (x3402 x2418))
(assert (x3402 x266))
(assert (x1081 192))
(assert (= (and x3561 (not x2086)) x3810))
(assert (x3402 x4738))
(assert (x3402 x1088))
(assert (x3402 x2243))
(assert (x3402 x4169))
(assert (x3402 x3747))
(assert (x3402 x4120))
(assert (x3402 x140))
(assert (x3402 x3628))
(assert (= x1058 (and (not x1126) x2393)))
(assert (x1411 x2744))
(assert (x3402 x1722))
(assert (x2041 x4700))
(assert (= (x1892 1461501637330902918203684832716283019655932542975) 0))
(assert (x2480 115792089237316195423570985008687907853269984665640564039457584007906687188802))
(assert (x1411 x4037))
(assert (x3402 x1730))
(assert (x3402 x2918))
(assert (x3402 x3131))
(assert (= x3006 (or (and x4804 x947) (and x2587 x3637))))
(assert (x3402 x2930))
(assert (x1638 (ite (< 18446744073709551615 x1874) 1 0) (ite (< x1874 x2190) 1 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1582 0)))
(assert (x3402 x4533))
(assert (x2890 x1088 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1970))
(assert (x3402 x4274))
(assert (x3402 x3888))
(assert (x3402 x4832))
(assert (x3402 x517))
(assert (= x694 (and x2997 x4347)))
(assert (x1221 x1202))
(assert (= 0 (x1892 6442451295)))
(assert (x2041 x3497))
(assert (= x1323 (and x516 x3665)))
(assert (= (and x2338 (not x3697)) x3070))
(assert (x3402 x825))
(assert (x3402 x887))
(assert (=> (<= x1949 10000) (= (x1892 x1949) 0)))
(assert (= x3399 (and x1305 (not x121))))
(assert (= (and x2727 x1535) x2248))
(assert (x3402 x803))
(assert (x3402 x2523))
(assert (x2041 x862))
(assert (= x1496 (or x2827 x3206)))
(assert (x3402 x4661))
(assert (x3402 x4151))
(assert (not (x2480 (x727 64 x1836 x434))))
(assert (= x4040 (x2161 (x727 x4629 x2271 x4040))))
(assert (= x1640 (and x557 x2175)))
(assert (=> (>= 10000 x1258) (= 0 (x1892 x1258))))
(assert (= (and x2345 (not x187)) x1792))
(assert (x3402 x676))
(assert (x3402 x3956))
(assert (x3971 32 x1688))
(assert (x3402 x1230))
(assert (x1081 x1759))
(assert (= (or x792 x4563) x242))
(assert (= 64 (x1286 (x727 64 x2137 x3854))))
(assert (x1411 x101))
(assert (x3402 x4239))
(assert (x3402 x4323))
(assert (x3402 x1585))
(assert (= (or x1871 x4390) x2656))
(assert (x3051 (x2292 x2705 x1381)))
(assert (x3402 x2623))
(assert (=> (>= 10000 x1189) (= (x1892 x1189) 0)))
(assert (x1081 x4615))
(assert (= x1576 (and x519 x1673)))
(assert (x3402 x1187))
(assert (x1411 x3799))
(assert (x3402 x2059))
(assert (= (and x2445 x1802) x1309))
(assert (x2041 x1202))
(assert (x3402 x317))
(assert (x3402 x361))
(assert (not (x2480 (x1941 x1264 x3302 x3945 x4218))))
(assert (x3402 x895))
(assert (=> (<= x3465 10000) (= (x1892 x3465) 0)))
(assert (x1411 x4453))
(assert (x3402 x6))
(assert (x3971 32 (- x3898 1)))
(assert (= x4212 (and x773 x1454)))
(assert (= (x2161 (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731)) x1285))
(assert (x3402 x1831))
(assert (x3853 (ite (< 18446744073709551615 x3198) 1 0)))
(assert (x3402 x1273))
(assert (= (and x1464 x4268) x4711))
(assert (x3402 x54))
(assert (x3402 x3226))
(assert (x3402 x276))
(assert (x3853 (ite (> x464 18446744073709551615) 1 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273)))
(assert (= x4792 (and x3372 (not x1511))))
(assert (x3402 x4712))
(assert (x1081 x1688))
(assert (x2041 x1883))
(assert (= x3592 (=> (and (= x2566 (+ 32 x4231)) (= (x3042 (- x796 x3290)) x1056) (= (x1628 x2566) x3679) (= x4225 (+ x3290 32)) (= (or (and (< x3679 x3796) (= (<= x3796 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3679))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3796) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3679))) x410) (= (x3042 (- x1056 31)) x3796) (= x4231 (+ 64 x3290))) (and (=> (and x410 (and (= (x1628 x104) x2845) (= x4473 (< 18446744073709551615 x2845)) (= x104 (x3584 (+ x3290 x3679))))) (and (=> (and (not x4473) (and (= x1921 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2243) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4477)) (< x2243 x4477)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2243) (<= x4477 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x493 (* x2845 32)) x2745) (= (x3584 (+ 32 x104)) x4477) (= (x3042 (- x796 x2745)) x2243))) (and (=> x1921 x2203) (=> (and (and (= x2997 (= 0 x2207)) (= x2207 (x1628 x3290))) (not x1921)) (and (=> x2997 x2063) (=> (and (not x2997) (and (= (x727 64 x1447 5) x3854) (= (x3860 x431) x4304) (= x2563 (= 0 x4304)) (= (x1628 x4231) x2137) (= 5 x2477) (= x431 (x727 64 x2137 x3854)))) (and (=> (not x2563) x3094) (=> (and (and (= (x2206 1461501637330902918203684832716283019655932542975 x1447) x4004) (= (x1628 x4231) x2068) (= x3495 (x3584 (+ 32 x1927))) (= (x3584 (+ x3800 32)) x1927)) x2563) x2063))))))) (=> x4473 x2203))) (=> (not x410) x2203)))))
(assert (x3402 x583))
(assert (= (x4472 (x1992 x4629 x675)) x675))
(assert (=> (>= 10000 x1264) (= 0 (x1892 x1264))))
(assert (x2890 x629 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1219 (and (not x3288) x2360)))
(assert (x2041 x653))
(assert (x3402 x3687))
(assert (x3402 x3144))
(assert (x3402 x4494))
(assert (= (and x3659 (not x4364)) x4572))
(assert (x3853 (ite (< x224 x1038) 1 0)))
(assert (x3402 x2566))
(assert (= x4141 (and x2613 (not x3619))))
(assert (x3402 x4381))
(assert (x3402 x3099))
(assert (= x74 (x4472 (x727 64 x74 4))))
(assert (= (=> (and (or (>= 18446744073709551487 x3794) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x3794)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x3794)) (>= x2493 128) (>= 25769804932 x1649) (= x1508 (x2829 x2582)) (= x2493 (x3042 (- x4419 x1649))) (<= x3794 18446744073709551614) (<= x3794 18446744073709551615) (= (x2829 x1649) x3474) (= (x2829 x4435) x328) (<= 100 x1649) (>= 1461501637330902918203684832716283019655932542975 x4596) (= (not (> x4126 (+ x2582 32))) x1204) (= x1503 (x3584 (+ x3794 128))) (< x3794 x1503) (>= 5 x3474) (= x4596 (x2829 x701)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3794) (<= x2493 25769804960) (>= 18446744073709551614 x3794) (= x701 (+ 32 x1649)) (= x2582 (+ x4435 32)) (not (> x3794 x1503)) (= (+ 32 x701) x4435) (or (>= x3794 115792089237316195423570985008687907853269984665640564039457584007913129639809) (<= x3794 18446744073709551487)) (<= x3794 18446744073709551615)) (and x1204 (=> (= x1503 x1059) x2215))) x4441))
(assert (x3402 x960))
(assert (x3402 x1599))
(assert (x2480 25769804352))
(assert (x2041 x84))
(assert (= x2702 (x1618 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273))))
(assert (= (x1892 3221225663) 0))
(assert (= x1043 (and (not x81) x3169)))
(assert (x3402 x2340))
(assert (x3402 x1347))
(assert (x1081 x1734))
(assert (x3402 x3128))
(assert (x3402 x2472))
(assert (x3971 32 x982))
(assert (x3402 x4031))
(assert (= x1965 (and x4291 x1788)))
(assert (x3402 x1202))
(assert (x3402 x4211))
(assert (x2041 x3225))
(assert (x3402 x2989))
(assert (= (or x696 x1111) x449))
(assert (= x344 (or (and x2822 (not x2372)) (and x883 (not x1419)))))
(assert (= x2455 (and x724 x2882)))
(assert (x1638 (ite (> x293 18446744073709551615) 1 0) (ite (< x293 x3054) 1 0)))
(assert (= (and (not x2540) x2601) x3722))
(assert (x3402 x913))
(assert (x3402 x3434))
(assert (x1221 x3569))
(assert (x2890 x677 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x1403 (x2206 1461501637330902918203684832716283019655932542975 x3577)) (= (x3819 x1928) x3357) (= (+ 32 x3563) x2715) (>= 5 x1610) (= (not (< 1 x2528)) x2797) (= (x3584 (+ 32 x2975)) x1928) (= (x3584 (+ 32 x1928)) x3669) (= x2662 (x3509 x3669)) (= x2975 (x3584 (+ 32 x2892))) (= (+ 32 x2715) x4252) (= (x3881 x1656) x2892) (= x3563 (+ 32 x1845)) (= (x3340 x2975) x3577) (= (x1655 x2892) x1610)) (and (=> (= (+ 32 x4252) x2763) x3511) x2797)) x1553))
(assert (x3402 x1349))
(assert (x3402 x1824))
(assert (x3971 32 (- x3893 1)))
(assert (x3402 x4132))
(assert (x2041 x2189))
(assert (x4488 x4310))
(assert (x3402 x4664))
(assert (x3402 x4715))
(assert (x3971 128 x1734))
(assert (x3402 x1785))
(assert (x3402 x364))
(assert (x3402 x4840))
(assert (x2890 x1771 1461501637330902918203684832716283019655932542976))
(assert (x3402 x1609))
(assert (x3402 x3167))
(assert (x3402 x8))
(assert (x3402 x1578))
(assert (x3402 x4315))
(assert (x3402 x3780))
(assert (x3402 x3086))
(assert (x2041 x2747))
(assert (x3402 x4491))
(assert (x3402 x1680))
(assert (x3971 128 x4615))
(assert (= x927 (=> (and (= true x151) (= x661 false) (= x2274 x151) (= true x2083) (= false x3201)) x1014)))
(assert (x1081 x3410))
(assert (x3402 x3018))
(assert (x3402 x3849))
(assert (x3402 x1340))
(assert (= (=> (and (= x2783 x2274) (= true x2783) (= false x3219) (= false x778) (= true x576)) x1014) x3755))
(assert (= (and x3082 (not x3022)) x2727))
(assert (x3402 x2605))
(assert (= (and x2458 x4127) x4695))
(assert (x3402 x1964))
(assert (x3051 (x3995 x155 x1026)))
(assert (x3402 x4535))
(assert (x3402 x1866))
(assert (x3402 x2818))
(assert (x4488 x1490))
(assert (x3402 x3095))
(assert (x3971 32 x2966))
(assert (x3971 128 x1759))
(assert (x3402 x2324))
(assert (x3402 x4365))
(assert (x3402 x2504))
(assert (x3402 x1468))
(assert (x3402 x21))
(assert (x3402 x3427))
(assert (x3402 x2185))
(assert (x3402 x2357))
(assert (= x4584 (and x2970 (not x2029))))
(assert (x3402 x4851))
(assert (x3402 x4730))
(assert (x3402 x349))
(assert (x3971 32 x3977))
(assert (= (and x3271 (not x3162)) x2670))
(assert (x3402 x2493))
(assert (x2890 x4453 32))
(assert (x3402 x752))
(assert (= x1699 x2667))
(assert (x3402 x2556))
(assert (x2890 x1730 32))
(assert (x3402 x3529))
(assert (x3402 x859))
(assert (x3402 x530))
(assert (x3402 x598))
(assert (x3402 x292))
(assert (= x384 (x381 (x705 x1264 x54 x1258 x384 x4091))))
(assert (x1411 x2747))
(assert (x3402 x1503))
(assert (x3402 x69))
(assert (= (x1892 (x705 x1264 x54 x1258 x384 x4091)) (x705 x1264 x54 x1258 x384 x4091)))
(assert (= x3039 (and (not x948) x3346)))
(assert (x2041 x2782))
(assert (x3402 x4776))
(assert (= (and x1885 x2016) x4244))
(assert (x3402 x3160))
(assert (x3402 x4163))
(assert (x3051 (x746 x1471 x1083 x67)))
(assert (= 4 (x2161 (x727 64 x74 4))))
(assert (x3402 x1071))
(assert (x3402 x2887))
(assert (x3402 x2987))
(assert (x1221 x4309))
(assert (x3402 x506))
(assert (x3402 x2))
(assert (x3402 x1469))
(assert (= x3966 (and x1089 x2993)))
(assert (= (=> (and (= (+ 32 x3226) x3969) (= (x3042 (- x3863 x2317)) x1878) (= x4809 (< 0 x2528)) (= (x2152 x3214) x2528) (= (x3584 (+ 32 x3214)) x1656) (= (+ 32 x3863) x1845)) (and (=> (and (not x4809) (= x1845 x2763)) x3511) (=> x4809 x1553))) x3639))
(assert (x3402 x3743))
(assert (x3402 x2590))
(assert (x2480 18446744073709551613))
(assert (x4488 x580))
(assert (x3402 x182))
(assert (= (and (not x3820) x1334) x2145))
(assert (x3402 x156))
(assert (x2041 x32))
(assert (= (or x2619 x2670) x3304))
(assert (x3402 x3135))
(assert (x3402 x153))
(assert (x3402 x1300))
(assert (x3402 x1904))
(assert (x3402 x2306))
(assert (x3402 x2012))
(assert (x2041 x1239))
(assert (x1221 x2240))
(assert (= (=> (and (= x4237 false) (= true x4371) (= x2274 x179) (= true x179) (= x2618 false)) x1014) x916))
(assert (x4488 x3225))
(assert (x3402 x210))
(assert (x2890 x4216 32))
(assert (x3402 x189))
(assert (x3402 x2844))
(assert (x3402 x2732))
(assert (x4488 x820))
(assert (x2890 x84 32))
(assert (x2890 x1325 1461501637330902918203684832716283019655932542976))
(assert (not (x2480 (x1582 0))))
(assert (= (or x1413 x4352) x4012))
(assert (x3402 x971))
(assert (x2890 x48 32))
(assert (x3402 x375))
(assert (x4488 x2287))
(assert (x2041 x912))
(assert (= x2665 (and x979 x18)))
(assert (x3402 x3054))
(assert (= (and (not x3735) x2144) x395))
(assert (x3402 x3446))
(assert (= (and x1275 x794) x883))
(assert (x1081 x2894))
(assert (x1411 x1771))
(assert (x3402 x2077))
(assert (x1411 x1178))
(assert (x3402 x3620))
(assert (x3402 x3))
(assert (x3402 x3090))
(assert (x3402 x4375))
(assert (x3402 x816))
(assert (x3402 x3257))
(assert (= x3154 (or x2277 x2455)))
(assert (x3402 x3368))
(assert (x2890 x308 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2709))
(assert (x3402 x1498))
(assert (x2041 x1730))
(assert (x2041 x1163))
(assert (= x4110 (or x43 x3307)))
(assert (x3402 x2994))
(assert (= x273 (and (not x1097) x3810)))
(assert (x3402 x293))
(assert (x2041 x2373))
(assert (x3402 x2761))
(assert (x3402 x1490))
(assert (x3402 x4767))
(assert (x3971 32 (- x2894 1)))
(assert (x3402 x3546))
(assert (= x3121 (or (and x2995 x1386) (and x75 x278))))
(assert (x3402 x4346))
(assert (x1221 x3577))
(assert (= (x727 x1264 x1522 x3093) (x1892 (x727 x1264 x1522 x3093))))
(assert (=> (>= 10000 x3476) (= 0 (x1892 x3476))))
(assert (= (or x2106 x4519) x2264))
(assert (= (or x4733 x3748 x2244 x4481) x4131))
(assert (x3402 x280))
(assert (= x4139 x969))
(assert (x3402 x3796))
(assert (x3402 x2981))
(assert (x3402 x1852))
(assert (x3402 x3436))
(assert (x3402 x809))
(assert (x2041 x26))
(assert (x3402 x1846))
(assert (x3402 x601))
(assert (x3402 x1066))
(assert (x2890 x1347 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3381))
(assert (not (x2480 (x1992 x4629 x675))))
(assert (x2041 x4491))
(assert (= (and x3085 x2563) x2585))
(assert (= x1948 (and x1681 x1551)))
(assert (= (or (and (not x4548) x1043) (and (not x557) x2175) (and (not x4723) x1461)) x4638))
(assert (x2890 x4216 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1173))
(assert (x3402 x1734))
(assert (= (or x4412 x547) x3498))
(assert (x3402 x1874))
(assert (x3402 x4808))
(assert (= (x1892 18446744073709551420) 0))
(assert (x3402 x2886))
(assert (x3402 x3386))
(assert (x3402 x2270))
(assert (= x1077 (or x613 x4549)))
(assert (x3402 x1031))
(assert (= (and x1073 x3104) x3329))
(assert (x3402 x1670))
(assert (x3402 x4469))
(assert (= 0 (x1892 2657635784)))
(assert (x3402 x2442))
(assert (= (x1892 (x705 x4629 x2987 x4148 x3823 x3687)) (x705 x4629 x2987 x4148 x3823 x3687)))
(assert (x3402 x352))
(assert (x3402 x2001))
(assert (x3402 x164))
(assert (= x4622 (and x2383 x2289)))
(assert (= (and (not x3419) x3026) x1099))
(assert (x2041 x2287))
(assert (x3402 x3060))
(assert (x2041 x1294))
(assert (x3402 x1162))
(assert (x2041 x4609))
(assert (x1081 x2710))
(assert (x1411 x2602))
(assert (x3402 x604))
(assert (= (=> (and (= x689 (x3584 (+ 32 x1034))) (= x157 (x4448 x3369)) (= (x3584 (+ 32 x4158)) x1798) (= x13 (x3584 (+ 32 x689))) (= (x3584 (+ 32 x3369)) x4158) (= x1601 (not (< 1 x1721))) (= (x2206 1461501637330902918203684832716283019655932542975 x157) x447) (= x3369 (x3584 (+ x4095 32))) (= (x3584 (+ 32 x2631)) x1034) (= x899 (x3584 (+ 32 x13))) (= (x1 x1798) x1162) (= x1698 (x1037 x4158))) (and x1601 (=> (= x2366 x899) x4651))) x3741))
(assert (x3402 x2401))
(assert (< 10000 (x727 x1264 x1522 x3093)))
(assert (x3402 x1774))
(assert (x3402 x234))
(assert (x1221 x32))
(assert (x3402 x3569))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3611 x1264 x1949 x536 x821 x80 x2560 x2986)))
(assert (x3402 x4301))
(assert (x2890 x1202 1461501637330902918203684832716283019655932542976))
(assert (x2480 576460752303423488))
(assert (= x1277 (and x1516 x3646)))
(assert (x3402 x4694))
(assert (= (=> (and (>= 25769804352 x4789) (or (>= x400 115792089237316195423570985008687907853269984665640564039457584007913129639745) (>= 18446744073709551163 x400)) (= x1943 (x2829 x4088)) (= x3787 (x2829 x3689)) (= x2398 (x2829 x3386)) (not (> x2639 x4419)) (= (+ x873 32) x1852) (<= x2838 25769804960) (= (+ x1583 x115) x1767) (= x4509 (* 128 x903)) (>= x2453 68) (>= 25769804960 x2491) (> x4419 x987) (= (x2829 x1852) x4767) (< x3348 x419) (= (+ x4192 31) x3430) (>= 1461501637330902918203684832716283019655932542975 x1692) (<= 100 x160) (<= 261 x2168) (= (x2829 292) x3421) (<= x2094 25769805060) (< x332 x4419) (not (> x1767 x3469)) (<= x2001 1461501637330902918203684832716283019655932542975) (= x1851 (+ 32 x1852)) (> x1767 x1583) (<= 2 x419) (= (x2829 x2579) x903) (or (>= x400 115792089237316195423570985008687907853269984665640564039457584007913129639745) (>= 18446744073709551163 x400)) (<= x2579 25769805028) (= x2817 (x2829 x873)) (> x4419 x3430) (<= x4767 1461501637330902918203684832716283019655932542975) (<= 676 x2579) (= x873 (+ x4088 32)) (= x2050 (* 32 x903)) (not (< x4419 x160)) (= x2115 (+ x3386 32)) (= (x2829 x1851) x2001) (<= x400 18446744073709551354) (= (x2829 x4230) x1692) (= x3266 (+ 4 x1433)) (>= 1461501637330902918203684832716283019655932542975 x2817) (= (+ x2579 31) x332) (>= 25769805028 x2767) (= x160 (+ x2453 x2491 32)) (> x3348 x400) (<= x400 18446744073709551355) (not (< x4419 x2094)) (= (+ x1851 32) x1705) (<= x4192 25769805028) (= x2168 (+ x3764 x3469)) (>= 25769804800 x3421) (>= 18446744073709551615 x2168) (= x3117 (x2829 x2767)) (= (+ 31 x3060) x4339) (>= 25769805060 x2639) (= (+ 31 x2453) x1980) (<= 100 x2639) (= x2639 (+ x3060 x4192 32)) (>= 1461501637330902918203684832716283019655932542975 x3787) (>= x4849 192) (<= x2629 25769804960) (<= x4063 25769805060) (= x4088 (+ x3266 32)) (= (x2829 x2115) x1316) (>= 18446744073709551354 x400) (>= 18446744073709551354 x400) (< x3469 x2168) (= (+ x2904 x419) x1583) (not (> x400 x3348)) (<= x3060 25769804960) (> x4419 x1980) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2744) x115) (= (+ 63 x2050) x2373) (= x3575 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1730)) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x10) x2904) (<= 3 x1583) (= (+ 32 x2579) x4820) (= x4789 (x2829 x1705)) (not (> x419 x1583)) (= x2491 (x2829 x2453)) (= x1314 (> x4063 x4820)) (= (+ x3689 32) x3658) (= (+ x3658 32) x4230) (>= x4063 708) (= x4192 (+ x3689 x2398)) (<= x2915 25769804384) (= x2838 (x2829 x3111)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639745 x400) (<= x400 18446744073709551163)) (>= 1461501637330902918203684832716283019655932542975 x1943) (= (+ x3689 x2629) x2453) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1088) x4109) (>= 25769805028 x2453) (= x3689 (+ 68 x3421)) (= x2767 (+ x2838 x3689)) (= (x3042 (- x4419 x3266)) x2915) (= x419 (+ x3348 x4109)) (not (< x1767 x1583)) (= x10 (+ 63 x2806)) (<= x160 25769805060) (= (+ 32 x2767 x3117) x2094) (= (+ 63 x3575) x2744) (not (< x4419 x4063)) (<= x3117 25769804960) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4339) x2806) (= (+ x4509 x4820) x4063) (= x3060 (x2829 x4192)) (= x2629 (x2829 x3658)) (= (x2829 x3266) x4114) (>= 25769804992 x4849) (>= 18446744073709551358 x1767) (<= 4 x1767) (= (x3042 (- x4419 x3689)) x4849) (= x2442 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2850)) (= x2850 (+ x2491 31)) (>= 18446744073709551356 x419) (>= x2915 256) (= x3348 (x3584 (+ 192 x400))) (<= x2398 25769804960) (>= 18446744073709551357 x1583) (= x987 (+ x2767 31)) (not (< x419 x3348)) (= x3469 (+ 256 x1767)) (> x3469 x1767) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2373) x3764) (>= 201326596 x903) (not (> x3469 x2168)) (= x3386 (+ 32 x4230)) (= (+ 63 x2442) x1088) (<= x1316 1461501637330902918203684832716283019655932542975) (= (+ x3266 x4789) x2579) (>= x4192 68) (< x419 x1583) (= x1730 (+ 31 x3117)) (<= x400 18446744073709551355) (<= 100 x2094) (<= 68 x2767) (>= 18446744073709551355 x400) (= x3111 (+ x2115 32))) (and (=> x1314 x1383) (=> (and (not x1314) (= x2168 x3315)) x4677))) x3593))
(assert (x3402 x3348))
(assert (x3402 x4319))
(assert (< (x727 64 x1942 x2815) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2890 x4491 1461501637330902918203684832716283019655932542976))
(assert (= (and x4117 x4060) x2839))
(assert (x3402 x318))
(assert (= x4850 (and x1674 (not x4260))))
(assert (x3402 x2256))
(assert (= (x4472 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273)) x3811))
(assert (x3402 x3927))
(assert (x2890 x2373 32))
(assert (= x1188 (and (not x732) x3852)))
(assert (= (x1892 115792089237316195423570985008687907853269984665640564039439137263839420088228) 0))
(assert (x3402 x1606))
(assert (x3402 x3843))
(assert (x3402 x340))
(assert (x3402 x1013))
(assert (x3402 x3491))
(assert (x3402 x1859))
(assert (x3971 32 x2710))
(assert (x1411 x3497))
(assert (< 10000 (x727 64 x1942 x2815)))
(assert (x3402 x1231))
(assert (x1221 x1178))
(assert (x3402 x258))
(assert (x3402 x2751))
(assert (x3402 x4637))
(assert (x3402 x3969))
(assert (x3402 x3660))
(assert (= (or x2808 x2552) x532))
(assert (x3402 x974))
(assert (= (x1892 (x1582 0)) (x1582 0)))
(assert (x3402 x1829))
(assert (x3402 x4585))
(assert (x3402 x83))
(assert (= x3988 (and x4814 x2034)))
(assert (= (and x268 (not x4838)) x2034))
(assert (x3402 x84))
(assert (x1221 x2782))
(assert (= (x1892 56168211265741800405898417846466446431335698074001377101504018355951975268352) 0))
(assert (x3402 x4756))
(assert (x3402 x4229))
(assert (x3402 x207))
(assert (x3971 32 (- x3472 1)))
(assert (= x896 (and x1180 (not x3762))))
(assert (x3402 x1260))
(assert (= x1264 (x1286 (x1992 x1264 x890))))
(assert (x2890 x1234 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x192) x86) x3420))
(assert (x3402 x1728))
(assert (= x4629 (x1286 (x1992 x4629 x675))))
(assert (x2480 309485009821345068724781055))
(assert (x2890 x2003 1461501637330902918203684832716283019655932542976))
(assert (x3051 (x746 x592 x3883 x939)))
(assert (= x1882 x1801))
(assert (= (and (not x3887) x2621) x773))
(assert (=> (>= 10000 x2271) (= (x1892 x2271) 0)))
(assert (x1411 255))
(assert (x3402 x4541))
(assert (x3402 x802))
(assert (x4488 x101))
(assert (x3971 32 x2332))
(assert (x3402 x2447))
(assert (x1081 128))
(assert (x3402 x224))
(assert (= (=> (and (= x2787 true) (= x2182 true) (= x2182 x2274) (= x4699 false) (= x2269 false)) x1014) x469))
(assert (x3402 x804))
(assert (= (and x2055 x1901) x1850))
(assert (x3402 x3003))
(assert (= (and x643 x474) x3703))
(assert (x2890 x1294 1461501637330902918203684832716283019655932542976))
(assert (x3402 x2528))
(assert (x3402 x4693))
(assert (= (and x4825 x1375) x4268))
(assert (x1411 x377))
(assert (x3402 x2873))
(assert (x3402 x3295))
(assert (x3402 x4652))
(assert (x2890 x4660 1461501637330902918203684832716283019655932542976))
(assert (= x511 (=> (and (= x2826 true) (= x2274 x626) (= false x2057) (= true x626) (= x4186 false)) x1014)))
(assert (=> (>= 10000 x3471) (= 0 (x1892 x3471))))
(assert (x3402 x3680))
(assert (x3402 x1759))
(assert (x3402 x1112))
(assert (= x4573 (and x883 x1419)))
(assert (x1221 x4795))
(assert (= x4719 (=> (and (= x4663 (not (< x2703 x256))) (= x1619 (x3584 (+ 32 x3368))) (= (x3584 (+ 32 x3656)) x2703) (= (x1628 x3656) x4471) (= (x3584 (+ 32 x1619)) x1589) (= (x3584 (+ x1589 32)) x1637) (= (x3584 (+ 32 x3055)) x1342) (= (x3584 (+ 32 x1342)) x3656) (= (x1628 x1342) x1989)) (and (=> (= x2190 x4314) x3217) x4663))))
(assert (x3402 x1546))
(assert (x3402 x249))
(assert (= (=> (and (= x831 x2274) (= false x3156) (= false x4678) (= x4760 true) (= true x831)) x1014) x2691))
(assert (x3402 x3474))
(assert (x3402 x4114))
(assert (= (x381 (x1941 x1264 x3302 x3945 x4218)) x4218))
(assert (x4488 x677))
(assert (x1081 x4557))
(assert (x3402 x2446))
(assert (= (or (and x1886 x548) (and x3988 x637)) x4143))
(assert (x2041 x2654))
(assert (x3402 x4372))
(assert (= x1823 (or x2564 x1317)))
(assert (= x2691 x4798))
(assert (x3402 x99))
(assert (x3402 x870))
(assert (x3402 x1836))
(assert (= (and (not x3644) x620) x3323))
(assert (x3402 x115))
(assert (x1221 x2340))
(assert (x4488 x1883))
(assert (= x110 (and x3821 x1965)))
(assert (x2480 18446744073709551354))
(assert (= x1264 (x1286 (x705 x1264 x54 x1258 x384 x4091))))
(assert (= (and x204 (not x3209)) x2760))
(assert (x3402 x524))
(assert (x3402 x4134))
(assert (x3402 x4598))
(assert (x1221 x1645))
(assert (x3402 x3794))
(assert (x3402 x4147))
(assert (x1411 x2003))
(assert (= (and x4170 (not x2356)) x4835))
(assert (x1411 x608))
(assert (x4488 x2306))
(assert (x3402 x4621))
(assert (x3402 x2565))
(assert (x2890 x4037 1461501637330902918203684832716283019655932542976))
(assert (x3402 x3316))
(assert (= (and x832 x1791) x1889))
(assert (x3402 x1443))
(assert (= x4738 (x1082 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273))))
(assert (= 0 (x1892 12884902464)))
(assert (x2041 x53))
(assert (x2480 3516931245))
(assert (x2890 x2373 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2480 201326596))
(assert (x3402 x2223))
(assert (x3402 x1009))
(assert (x3402 x723))
(assert (x3402 x1943))
(assert (= (and x4261 x1051) x3791))
(assert (x2480 18446744073709551615))
(assert (x3402 x3261))
(assert (x3402 x2101))
(assert (x3402 x3004))
(assert (x2041 x1645))
(assert (=> (<= x4726 10000) (= (x1892 x4726) 0)))
(assert (x3402 x393))
(assert (x3402 x3416))
(assert (= (x1992 x1264 x890) (x1892 (x1992 x1264 x890))))
(assert (x3402 x1701))
(assert (= (and x2584 (not x79)) x4412))
(assert (x3402 x3626))
(assert (x3402 x413))
(assert (x3402 x3064))
(assert (= (and x1142 x2982) x4734))
(assert (= (x1892 25769804960) 0))
(assert (x3402 x1667))
(assert (x2890 x580 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x2140))
(assert (x3402 x4525))
(assert (x2890 x1539 1461501637330902918203684832716283019655932542976))
(assert (x3402 x464))
(assert (x1221 x1079))
(assert (x3402 x3609))
(assert (= x2374 (and x2431 x4529)))
(assert (x3402 x2231))
(assert (< (x1654 x1264 x2526 x1285 x2697 x800 x1295 x1227 x4731) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3127))
(assert (x3402 x4615))
(assert (x3402 x1688))
(assert (x1411 x677))
(assert (x3853 (ite (< x293 x3054) 1 0)))
(assert (x3402 x4326))
(assert (x3402 x2715))
(assert (x3402 x745))
(assert (x3853 (ite (< x3054 x438) 1 0)))
(assert (x3402 x662))
(assert (= (=> (and (= (x3584 (+ x3097 32)) x3424) (= x2198 (not (> x4772 1))) (= x3681 (x1628 324)) (= (x1628 292) x2313) (= x3086 (x3584 (+ x3230 32))) (= (x3584 (+ 32 x3086)) x3097)) (and x2198 (=> (= x224 x3800) x3592))) x443))
(assert (= (x4472 (x3611 x4629 x393 x1598 x3753 x2238 x280 x3918)) x393))
(assert (x2890 x1447 1461501637330902918203684832716283019655932542976))
(assert (x3402 x56))
(assert (x3402 x2745))
(assert (< 10000 (x727 64 x74 4)))
(assert (= x3738 (and x4455 (not x4255))))
(assert (= x357 x1882))
(assert (= x1014 (=> (or (not x2274) x2274) x197)))
(assert (x4488 x214))
(assert (x3402 x4026))
(assert (x3402 x2617))
(assert (= (and x682 x4501) x190))
(assert (x3402 x3062))
(assert (= x4016 (or x370 x2341)))
(assert (x3402 x4526))
(assert (x3402 x1507))
(assert (x1411 x1234))
(assert (x3402 x2102))
(assert (x3402 x2662))
(assert (x3402 x4545))
(assert (x1411 x480))
(assert (x3402 x963))
(assert (x3402 x4865))
(assert (x3402 x3215))
(assert (x2890 x2744 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3334 (and x3915 (not x1952))))
(assert (x3402 x2960))
(assert (x2041 x3754))
(assert (x3402 x683))
(assert (= (x1286 (x1654 x4629 x3811 x3249 x809 x4738 x3090 x2702 x4273)) x4629))
(assert (= (and x326 (not x3418)) x4450))
(assert (x3402 x3047))
(assert (= (or (and x2637 (not x612)) x1092) x3708))
(assert (x3402 x890))
(assert (x2890 x292 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x4609))
(assert (= x277 (or x2349 x3334)))
(assert (x4488 x2543))
(assert (x3402 x4232))
(assert (= x3904 (and x892 x3844)))
(assert (x2890 x480 1461501637330902918203684832716283019655932542976))
(assert (= (x2161 (x727 64 x4059 4)) 4))
(assert (x3402 x998))
(assert (x3402 x770))
(assert (x3402 x650))
(assert (x1081 (- x1242 1)))
(assert (x3402 x981))
(assert (= x1674 (and x2356 x4170)))
(assert (= (or (and x3646 (not x1516)) (and (not x4727) x570)) x2832))
(assert (= x3511 (=> (and (and (= x4292 false) (= (x4763 x2444) x64) (= x109 (+ x2472 32)) x307 (= x2589 (x3042 (- x1578 32))) (= x1024 (x3584 (+ x385 32))) (>= 4294967295 x662) (= x2221 (+ x2763 32)) (= x3197 (x3584 (+ 31 x64))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x41 x2053)) (= x189 (x1556 x3894)) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3197) x1263) (= x316 (+ 192 x2763)) (> x41 x254) (= (x3847 x41) x2053) (= (x3584 (+ 32 x3174)) x4195) (= (x3584 (+ 31 x189)) x1459) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x254) (= (+ 32 x3969) x2929) (<= 100 x2721) (= x3651 x4430) (= (+ 32 x2221) x317) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x2472) (= x3671 (x3042 (- x316 x2763))) (= (x3042 (- x385 x2763)) x182) (<= x254 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3584 (+ x1867 x235)) x3174) (= (+ x317 32) x1139) (= (+ 32 x3894) x3598) (= (x3584 (+ 31 x1137)) x564) (>= 4294967396 x2721) (= (x3847 x2472) x662) (= (x3584 (+ x970 32)) x4234) (= (+ x1139 32) x98) (= (+ 32 x316) x235) (= (+ x2444 32) x4332) (= x1578 (x3042 (- x41 x254))) (= x127 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1459)) (= x385 (x3584 (+ x127 x4195))) (= (+ x98 32) x4410) (= x970 (x3584 (+ 32 x41))) (= x307 (= x3950 x394)) (= false x3033) (= x3183 (x3042 (- x2763 x2317))) (>= x4430 1) (= x2472 (x3584 (+ x2053 x41))) (<= x4430 1461501637330902918203684832716283019655932542975) (= x4360 (+ x3050 32)) (= x3523 (x753 x254)) (<= x254 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x41 (x3584 (+ x1024 x1263))) (= (x3584 (+ 32 x254)) x729) (= x394 x4430) (= (x3042 (- x3174 x2763)) x3257) (= 32 x3021) (= x3272 false) (= (x2404 x3050) x1137) (<= 1 x41) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x564) x1867) (= false x2433)) (and (and (and (and (= x2515 (* 32 (- x1881 1))) (>= x3254 x390) (= x3234 x1345) (= x4594 (- x1144 4)) (<= 0 x2710) (= (+ 32 x658 x819) x1144) (= x2412 x850) (= (- x819 68) x2612) (>= x658 x3234) (= x4301 x3254) (= (+ 64 x1144) x4856) (= (* 32 (- x2710 1)) x159) (< x2515 x3234) (= x3254 (* 32 x2710)) (>= 576460752303423488 x2710) (>= 134217728 x1881) (= (* x1881 32) x658) (= x390 x1877) (= x819 (+ 260 x4301)) (= x239 (+ x819 32)) (>= x1881 0) (= x4594 x275) (> x390 x159)) (and (>= 127 x3829) (= x1866 (x4710 164)) (>= x3100 1) (>= x3878 1) (< x44 x3685) (= x3100 (x2950 x1970)) (<= x1829 1) (= x3489 x3891) (= x1559 (+ 32 x4751)) (= (* 32 x3932) x68) (<= x3878 18446744073709551327) (= x1682 (* 32 x2647)) (<= x2647 134217728) (= x4751 (+ 68 x1866)) (= (x4710 x4751) x3932) (= x1899 (+ x1682 32 x4856)) (= (+ x4856 32) x2270) (= (+ 31 x4751) x309) (= (* (- x2647 1) 32) x44) (>= 127 x3829) (<= x3040 18446744082299486596) (= x2110 (* 32 x3932)) (= x1829 x4470) (= false x931) (= 2321842044 x4712) (<= x3685 x1682) (= x432 (+ x3878 288)) (= (x4710 100) x4773) (= x3728 x1899) (= false x2300) (= (+ x2110 x1559) x3040) (<= 0 x2647) (not (< x3728 x3040)) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x214) x3878) (= x659 (x4710 132)) (= x1829 (x4710 68)) (= (+ 63 x68) x214) (= (x3042 (- x4856 x1144)) x4683) (= x3619 (> x3040 x1559)) (= x4470 (ite (not (= x1829 0)) 1 0)) (= (+ x1144 32) x4374) (>= 576460752571858953 x3932) (<= x1866 18446744073709551615) (<= 100 x3040) (= x3685 x4087) (> x3728 x309))) (and (= (+ 32 x184) x3144) (>= 127 x4753) (= x1013 (+ x2759 100)) (= (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2747) x417) (<= x1877 18446744073709551615) (= x1113 (* (- x265 1) 32)) (>= x2759 x1156) (= (+ x618 31) x1234) (= (+ x618 100) x853) (= (x3584 (+ x2320 x4353)) x2230) (not (< x2721 x853)) (= x1872 (x2206 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1234)) (= x4536 x3651) (= x3614 false) (= x581 (+ x83 64)) (>= 4294967296 x618) (= (x827 x2230) x4087) (= x725 false) (= x1063 (+ x184 64)) (= (x827 x4353) x993) (= (x827 x4178) x2320) (<= 388 x3728) (<= x1345 4294967295) (= (x2382 128) x4154) (= x3084 (x3042 (- x184 x581))) (= x4744 false) (<= 0 x2412) (<= 1 x417) (= x311 64) (= x3891 x993) (>= 127 x4753) (> x83 x1811) (>= 134217728 x265) (> x1156 x1113) (= x4325 (x3042 (- x1063 x184))) (<= x417 4294967390) (= x2747 (+ x1872 63)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x4353) (= false x3765) (= x184 (+ x581 32)) (= 3516931245 x382) (>= x265 0) (<= 1 x2830) (> x581 x83) (= x4178 (+ x4353 32)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x581 x1641)) (= x1811 (+ x417 128)) (= x1013 x2721) (= (* x265 32) x2759) (= 64 x1834) (= x2125 (+ 32 x2230)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x2230) (<= x4087 4294967295) (= x662 x1156) (= x4228 (ite x714 1 0)) (= x3527 (+ x1063 32)) (= x1410 false) (= (+ x618 160) x2223) (= (x2950 x1970) x2830) (>= 18446744082299486596 x3728) (= (x827 x581) x1641) (= x83 (+ 64 x1811)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2412) (= x618 (x4071 68)) (= (x3584 (+ x581 x1641)) x4353) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2320 x4353)) (= false x387))) (= x3651 x3843))) (and (=> x3619 x2503) (=> (and (not x3619) (= x3556 x432)) x3720)))))
(assert (x2890 x1730 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x3197))
(assert (x1411 x1175))
(assert (x3402 x2809))
(assert (x3402 x1589))
(assert (x3402 x1415))
(assert (x3402 x3035))
(assert (x3402 x2449))
(assert (x3402 x2043))
(assert (x3402 x397))
(assert (x3402 x458))
(assert (= x1862 (or x3493 x312)))
(assert (x3402 x4650))
(assert (x1638 (ite (< 18446744073709551615 x464) 1 0) (ite (> x3198 x464) 1 0)))
(assert (= (and x2144 x3735) x3696))
(assert (x2890 x1455 1461501637330902918203684832716283019655932542976))
(assert (x3402 x2748))
(assert (=> (>= 10000 x3551) (= 0 (x1892 x3551))))
(assert (x3402 x2766))
(assert (x3402 x1021))
(assert (= (and (not x4117) x4060) x2808))
(assert (x2890 x2737 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3402 x1692))
(assert (x1411 x4216))
(assert (x3402 x3801))
(assert (x2041 x4795))
(assert (= 0 (x1892 309485009821345068724781055)))
(assert (= (or x1948 x2591) x1888))
(assert (x3402 x1973))
(assert (x3402 x1928))
(assert (x3402 x729))
(assert (= x2519 (and x4075 x277)))
(check-sat)
(exit)
