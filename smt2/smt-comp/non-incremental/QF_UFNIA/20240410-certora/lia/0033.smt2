(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1677 () Bool)
(declare-fun x79 () Int)
(declare-fun x1301 () Int)
(declare-fun x1237 () Bool)
(declare-fun x268 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x686 () Bool)
(declare-fun x604 () Bool)
(declare-fun x1642 () Int)
(declare-fun x17 () Bool)
(declare-fun x488 () Int)
(declare-fun x398 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1661 () Int)
(declare-fun x50 () Bool)
(declare-fun x1068 () Int)
(declare-fun x1118 () Int)
(declare-fun x1758 () Int)
(declare-fun x1384 () Bool)
(declare-fun x25 () Int)
(declare-fun x1872 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x252 () Bool)
(declare-fun x700 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x699 () Bool)
(declare-fun x1666 () Int)
(declare-fun x910 () Int)
(declare-fun x716 () Bool)
(declare-fun x199 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1267 () Int)
(declare-fun x630 () Int)
(declare-fun x1736 () Bool)
(declare-fun x556 () Int)
(declare-fun x1610 () Int)
(declare-fun x344 () Bool)
(declare-fun x369 () Bool)
(declare-fun x311 () Bool)
(declare-fun x510 () Bool)
(declare-fun x941 () Int)
(declare-fun x1620 () Bool)
(declare-fun x388 () Int)
(declare-fun x1822 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1485 () Int)
(declare-fun x356 () Bool)
(declare-fun x203 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x1226 () Int)
(declare-fun x1890 () Bool)
(declare-fun x589 () Bool)
(declare-fun x375 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x483 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x711 () Int)
(declare-fun x336 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x484 () Int)
(declare-fun x1825 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x1382 () Int)
(declare-fun x867 () Bool)
(declare-fun x350 () Bool)
(declare-fun x143 () Int)
(declare-fun x730 () Int)
(declare-fun x868 () Bool)
(declare-fun x278 () Bool)
(declare-fun x1357 () Int)
(declare-fun x925 () Int)
(declare-fun x698 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x722 () Bool)
(declare-fun x527 () Bool)
(declare-fun x57 () Int)
(declare-fun x807 () Bool)
(declare-fun x387 () Int)
(declare-fun x1111 () Bool)
(declare-fun x882 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x633 () Int)
(declare-fun x1713 (Int Int) Int)
(declare-fun x1147 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x931 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x401 (Int Int Int) Int)
(declare-fun x1325 () Int)
(declare-fun x1172 () Int)
(declare-fun x945 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x895 () Int)
(declare-fun x1787 () Bool)
(declare-fun x91 () Bool)
(declare-fun x979 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x987 () Int)
(declare-fun x721 () Int)
(declare-fun x476 () Int)
(declare-fun x321 () Int)
(declare-fun x1564 () Int)
(declare-fun x1614 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1503 () Int)
(declare-fun x409 () Bool)
(declare-fun x1537 () Int)
(declare-fun x1710 () Int)
(declare-fun x595 () Int)
(declare-fun x1110 () Int)
(declare-fun x1258 () Int)
(declare-fun x259 () Int)
(declare-fun x385 () Int)
(declare-fun x1578 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x309 () Int)
(declare-fun x1348 () Int)
(declare-fun x1524 () Bool)
(declare-fun x565 () Int)
(declare-fun x1105 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1520 () Int)
(declare-fun x1611 () Int)
(declare-fun x444 () Bool)
(declare-fun x355 () Int)
(declare-fun x269 () Int)
(declare-fun x1622 () Int)
(declare-fun x723 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1875 () Bool)
(declare-fun x1115 () Int)
(declare-fun x1233 () Int)
(declare-fun x1729 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x1424 () Int)
(declare-fun x251 () Bool)
(declare-fun x731 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x966 () Bool)
(declare-fun x416 (Int) Int)
(declare-fun x46 () Bool)
(declare-fun x1072 () Int)
(declare-fun x1587 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x693 () Bool)
(declare-fun x368 () Int)
(declare-fun x115 () Int)
(declare-fun x1695 () Int)
(declare-fun x800 () Bool)
(declare-fun x283 () Int)
(declare-fun x624 () Bool)
(declare-fun x766 () Int)
(declare-fun x831 () Int)
(declare-fun x41 () Int)
(declare-fun x406 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x742 () Bool)
(declare-fun x1636 () Int)
(declare-fun x1127 () Int)
(declare-fun x526 () Bool)
(declare-fun x623 () Bool)
(declare-fun x657 () Int)
(declare-fun x849 () Int)
(declare-fun x1879 () Bool)
(declare-fun x984 () Int)
(declare-fun x49 () Int)
(declare-fun x629 () Int)
(declare-fun x288 () Bool)
(declare-fun x897 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x1402 () Int)
(declare-fun x1542 () Int)
(declare-fun x729 () Int)
(declare-fun x428 () Bool)
(declare-fun x161 () Int)
(declare-fun x28 () Int)
(declare-fun x208 () Int)
(declare-fun x908 () Bool)
(declare-fun x155 () Int)
(declare-fun x193 () Int)
(declare-fun x696 () Bool)
(declare-fun x1071 () Int)
(declare-fun x1817 () Int)
(declare-fun x128 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1806 () Bool)
(declare-fun x285 () Int)
(declare-fun x999 () Int)
(declare-fun x1506 () Bool)
(declare-fun x1803 () Int)
(declare-fun x1125 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x157 () Bool)
(declare-fun x872 () Int)
(declare-fun x533 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x1728 () Int)
(declare-fun x290 () Bool)
(declare-fun x919 () Int)
(declare-fun x509 () Bool)
(declare-fun x312 () Bool)
(declare-fun x335 () Bool)
(declare-fun x566 () Bool)
(declare-fun x238 () Int)
(declare-fun x1398 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1652 () Bool)
(declare-fun x331 () Int)
(declare-fun x976 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x1282 () Int)
(declare-fun x97 () Bool)
(declare-fun x858 () Int)
(declare-fun x1548 () Int)
(declare-fun x1881 () Bool)
(declare-fun x322 () Int)
(declare-fun x804 () Bool)
(declare-fun x1883 () Int)
(declare-fun x536 () Int)
(declare-fun x1018 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x186 () Int)
(declare-fun x737 () Int)
(declare-fun x468 () Bool)
(declare-fun x1214 () Int)
(declare-fun x760 () Int)
(declare-fun x19 () Int)
(declare-fun x724 () Int)
(declare-fun x1685 () Int)
(declare-fun x769 () Int)
(declare-fun x13 () Int)
(declare-fun x1849 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1765 () Int)
(declare-fun x1274 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x948 () Int)
(declare-fun x916 () Bool)
(declare-fun x1619 () Int)
(declare-fun x764 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x255 () Bool)
(declare-fun x1769 () Int)
(declare-fun x1392 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1607 () Int)
(declare-fun x1561 () Bool)
(declare-fun x470 () Int)
(declare-fun x1557 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x192 () Bool)
(declare-fun x1293 () Int)
(declare-fun x262 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1606 () Int)
(declare-fun x970 () Bool)
(declare-fun x140 () Int)
(declare-fun x403 () Int)
(declare-fun x1281 () Bool)
(declare-fun x840 () Int)
(declare-fun x159 () Bool)
(declare-fun x21 () Int)
(declare-fun x1457 () Int)
(declare-fun x44 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x67 () Bool)
(declare-fun x517 () Int)
(declare-fun x163 () Int)
(declare-fun x1289 () Int)
(declare-fun x1673 () Int)
(declare-fun x144 () Int)
(declare-fun x839 () Int)
(declare-fun x928 () Int)
(declare-fun x1075 () Int)
(declare-fun x1459 () Int)
(declare-fun x1294 (Int) Int)
(declare-fun x434 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x1178 () Int)
(declare-fun x399 () Int)
(declare-fun x634 () Int)
(declare-fun x257 () Bool)
(declare-fun x1046 () Int)
(declare-fun x912 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1434 () Int)
(declare-fun x132 () Int)
(declare-fun x190 () Int)
(declare-fun x1004 () Bool)
(declare-fun x1425 () Int)
(declare-fun x1370 () Int)
(declare-fun x1444 () Bool)
(declare-fun x297 () Bool)
(declare-fun x147 () Int)
(declare-fun x93 () Int)
(declare-fun x1054 () Int)
(declare-fun x317 () Bool)
(declare-fun x253 () Bool)
(declare-fun x649 () Int)
(declare-fun x792 () Bool)
(declare-fun x452 () Int)
(declare-fun x361 () Bool)
(declare-fun x221 () Int)
(declare-fun x443 () Int)
(declare-fun x1030 () Int)
(declare-fun x1406 () Int)
(declare-fun x395 () Bool)
(declare-fun x256 () Int)
(declare-fun x514 () Bool)
(declare-fun x171 () Int)
(declare-fun x1648 () Int)
(declare-fun x1494 () Bool)
(declare-fun x1833 () Int)
(declare-fun x499 () Bool)
(declare-fun x1193 () Int)
(declare-fun x1175 () Int)
(declare-fun x1170 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x1708 () Int)
(declare-fun x420 () Bool)
(declare-fun x654 () Bool)
(declare-fun x1472 () Int)
(declare-fun x880 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1371 () Int)
(declare-fun x1819 () Bool)
(declare-fun x1496 () Int)
(declare-fun x1049 (Int Int) Int)
(declare-fun x854 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1257 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x1032 () Int)
(declare-fun x328 () Bool)
(declare-fun x1241 () Int)
(declare-fun x1466 () Int)
(declare-fun x865 () Bool)
(declare-fun x1196 (Int) Int)
(declare-fun x89 () Bool)
(declare-fun x703 () Int)
(declare-fun x1748 () Int)
(declare-fun x1189 () Bool)
(declare-fun x448 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x168 () Int)
(declare-fun x539 () Int)
(declare-fun x1446 () Int)
(declare-fun x824 () Int)
(declare-fun x689 () Int)
(declare-fun x1296 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x685 () Bool)
(declare-fun x640 () Int)
(declare-fun x776 () Int)
(declare-fun x1242 () Int)
(declare-fun x959 () Int)
(declare-fun x1745 () Int)
(declare-fun x909 () Int)
(declare-fun x1612 (Int) Int)
(declare-fun x870 () Int)
(declare-fun x1501 () Int)
(declare-fun x71 () Bool)
(declare-fun x500 () Bool)
(declare-fun x435 () Int)
(declare-fun x310 () Int)
(declare-fun x666 () Bool)
(declare-fun x394 () Int)
(declare-fun x1265 () Bool)
(declare-fun x80 () Bool)
(declare-fun x1060 () Int)
(declare-fun x501 () Int)
(declare-fun x1810 () Int)
(declare-fun x39 () Int)
(declare-fun x431 () Int)
(declare-fun x1219 () Bool)
(declare-fun x515 () Bool)
(declare-fun x525 () Int)
(declare-fun x1346 () Bool)
(declare-fun x1417 () Int)
(declare-fun x1702 () Int)
(declare-fun x402 () Int)
(declare-fun x692 () Bool)
(declare-fun x643 () Int)
(declare-fun x32 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x549 () Bool)
(declare-fun x734 () Int)
(declare-fun x1343 () Int)
(declare-fun x1235 () Int)
(declare-fun x1331 () Bool)
(declare-fun x1877 () Bool)
(declare-fun x1186 () Int)
(declare-fun x705 () Bool)
(declare-fun x480 () Bool)
(declare-fun x1029 () Int)
(declare-fun x320 () Int)
(declare-fun x33 () Int)
(declare-fun x304 () Bool)
(declare-fun x590 () Int)
(declare-fun x1465 () Int)
(declare-fun x859 () Int)
(declare-fun x1085 () Int)
(declare-fun x1722 () Int)
(declare-fun x1700 () Int)
(declare-fun x408 () Bool)
(declare-fun x1634 () Int)
(declare-fun x1627 () Bool)
(declare-fun x701 () Int)
(declare-fun x1812 () Bool)
(declare-fun x173 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x1069 () Int)
(declare-fun x103 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x1423 () Int)
(declare-fun x298 () Int)
(declare-fun x625 () Bool)
(declare-fun x708 () Int)
(declare-fun x682 () Bool)
(declare-fun x1511 () Int)
(declare-fun x863 () Int)
(declare-fun x1223 () Int)
(declare-fun x1001 () Bool)
(declare-fun x817 () Int)
(declare-fun x1199 () Int)
(declare-fun x1431 () Int)
(declare-fun x218 () Int)
(declare-fun x567 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x27 () Int)
(declare-fun x1221 () Bool)
(declare-fun x772 () Int)
(declare-fun x1854 () Int)
(declare-fun x1164 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x1016 () Int)
(declare-fun x816 () Bool)
(declare-fun x1746 () Int)
(declare-fun x1497 () Int)
(declare-fun x1312 () Bool)
(declare-fun x1735 () Int)
(declare-fun x1201 () Int)
(declare-fun x87 () Bool)
(declare-fun x308 () Bool)
(declare-fun x1752 () Int)
(declare-fun x230 () Bool)
(declare-fun x502 () Int)
(declare-fun x1888 () Int)
(declare-fun x653 () Int)
(declare-fun x861 () Bool)
(declare-fun x123 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x962 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x1255 () Int)
(declare-fun x125 (Int) Int)
(declare-fun x1492 () Int)
(declare-fun x680 () Bool)
(declare-fun x1599 () Int)
(declare-fun x541 () Bool)
(declare-fun x681 () Int)
(declare-fun x433 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1308 (Int) Int)
(declare-fun x167 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1674 () Bool)
(declare-fun x878 () Bool)
(declare-fun x896 () Int)
(declare-fun x550 () Int)
(declare-fun x605 () Bool)
(declare-fun x5 () Int)
(declare-fun x469 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1028 () Bool)
(declare-fun x349 () Int)
(declare-fun x1467 () Int)
(declare-fun x459 () Int)
(declare-fun x1390 () Int)
(declare-fun x829 () Int)
(declare-fun x129 () Int)
(declare-fun x768 () Bool)
(declare-fun x639 () Int)
(declare-fun x1335 () Int)
(declare-fun x843 () Int)
(declare-fun x1686 () Int)
(declare-fun x1332 () Int)
(declare-fun x767 () Bool)
(declare-fun x1316 () Int)
(declare-fun x683 () Bool)
(declare-fun x1731 () Int)
(declare-fun x1576 () Int)
(declare-fun x1679 () Int)
(declare-fun x1181 () Bool)
(declare-fun x1845 () Int)
(declare-fun x1385 () Bool)
(declare-fun x220 (Int) Int)
(declare-fun x980 () Bool)
(declare-fun x996 () Bool)
(declare-fun x291 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x180 () Int)
(declare-fun x441 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x446 () Int)
(declare-fun x1394 () Int)
(declare-fun x1865 () Bool)
(declare-fun x787 () Int)
(declare-fun x1094 () Int)
(declare-fun x1063 () Bool)
(declare-fun x789 () Int)
(declare-fun x1545 () Bool)
(declare-fun x417 () Bool)
(declare-fun x1757 () Int)
(declare-fun x133 () Int)
(declare-fun x1159 () Int)
(declare-fun x707 () Int)
(declare-fun x1007 () Int)
(declare-fun x1083 () Int)
(declare-fun x957 () Bool)
(declare-fun x924 () Int)
(declare-fun x1539 () Int)
(declare-fun x1480 () Int)
(declare-fun x232 () Int)
(declare-fun x1236 () Int)
(declare-fun x1426 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x1632 () Int)
(declare-fun x981 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1043 (Int) Int)
(declare-fun x1658 () Bool)
(declare-fun x1660 () Int)
(declare-fun x234 () Bool)
(declare-fun x578 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1727 () Bool)
(declare-fun x382 () Bool)
(declare-fun x1821 (Int Int) Int)
(declare-fun x1411 () Bool)
(declare-fun x883 () Int)
(declare-fun x718 () Int)
(declare-fun x1811 () Int)
(declare-fun x1882 () Int)
(declare-fun x808 () Int)
(declare-fun x1452 () Bool)
(declare-fun x520 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x1183 () Int)
(declare-fun x1586 () Int)
(declare-fun x62 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x1504 () Int)
(declare-fun x215 () Int)
(declare-fun x1136 () Int)
(declare-fun x813 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x991 () Int)
(declare-fun x1675 () Bool)
(declare-fun x892 () Int)
(declare-fun x445 () Int)
(declare-fun x788 () Int)
(declare-fun x117 () Int)
(declare-fun x1617 () Int)
(declare-fun x1352 (Int Int) Int)
(declare-fun x927 () Int)
(declare-fun x1041 () Int)
(declare-fun x491 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x749 () Int)
(declare-fun x1000 () Bool)
(declare-fun x632 () Bool)
(declare-fun x249 () Int)
(declare-fun x42 () Bool)
(declare-fun x1117 () Int)
(declare-fun x380 () Bool)
(declare-fun x926 () Int)
(declare-fun x1077 () Bool)
(declare-fun x370 () Int)
(declare-fun x668 () Int)
(declare-fun x555 () Bool)
(declare-fun x641 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1112 () Int)
(declare-fun x456 () Bool)
(declare-fun x415 () Bool)
(declare-fun x860 () Int)
(declare-fun x609 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x407 () Bool)
(declare-fun x495 () Int)
(declare-fun x1416 () Int)
(declare-fun x1128 () Int)
(declare-fun x1116 () Bool)
(declare-fun x1560 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1654 () Int)
(declare-fun x1383 () Bool)
(declare-fun x650 (Int) Int)
(declare-fun x1031 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1156 () Int)
(declare-fun x1367 () Bool)
(declare-fun x358 () Int)
(declare-fun x95 () Int)
(declare-fun x587 () Int)
(declare-fun x245 () Bool)
(declare-fun x664 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x960 () Int)
(declare-fun x138 () Bool)
(declare-fun x661 () Int)
(declare-fun x211 () Int)
(declare-fun x798 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x656 () Bool)
(declare-fun x1694 (Int) Int)
(declare-fun x1464 () Bool)
(declare-fun x1751 () Bool)
(declare-fun x102 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x174 () Int)
(declare-fun x765 () Int)
(declare-fun x542 () Int)
(declare-fun x1823 () Int)
(declare-fun x1381 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x1885 () Int)
(declare-fun x412 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1350 (Int) Int)
(declare-fun x1608 () Int)
(declare-fun x1251 () Bool)
(declare-fun x743 () Int)
(declare-fun x1733 () Int)
(declare-fun x933 () Bool)
(declare-fun x1640 () Int)
(declare-fun x833 () Int)
(declare-fun x608 () Bool)
(declare-fun x184 () Int)
(declare-fun x213 () Int)
(declare-fun x1681 () Int)
(declare-fun x65 () Int)
(declare-fun x1644 () Int)
(declare-fun x1498 () Bool)
(declare-fun x400 () Int)
(declare-fun x1507 () Bool)
(declare-fun x151 () Int)
(declare-fun x154 () Bool)
(declare-fun x9 () Int)
(declare-fun x1131 () Bool)
(declare-fun x806 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x209 () Bool)
(declare-fun x119 () Bool)
(declare-fun x357 () Bool)
(declare-fun x1470 () Int)
(declare-fun x637 () Int)
(declare-fun x660 () Bool)
(declare-fun x418 () Int)
(declare-fun x1137 () Int)
(declare-fun x1631 () Bool)
(declare-fun x989 () Int)
(declare-fun x1568 () Int)
(declare-fun x1287 () Bool)
(declare-fun x785 () Int)
(declare-fun x1838 () Int)
(declare-fun x1279 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1518 () Int)
(declare-fun x75 () Int)
(declare-fun x1405 () Bool)
(declare-fun x364 () Int)
(declare-fun x534 () Int)
(declare-fun x841 () Bool)
(declare-fun x1626 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x6 () Int)
(declare-fun x307 () Bool)
(declare-fun x1389 () Int)
(declare-fun x628 () Int)
(declare-fun x1569 () Int)
(declare-fun x76 () Int)
(declare-fun x1261 () Int)
(declare-fun x1820 () Int)
(declare-fun x1254 () Bool)
(declare-fun x1167 () Int)
(declare-fun x684 () Bool)
(declare-fun x73 () Bool)
(declare-fun x260 () Bool)
(declare-fun x884 () Int)
(declare-fun x1454 () Bool)
(declare-fun x229 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x1314 () Int)
(declare-fun x228 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x1581 () Int)
(declare-fun x1794 () Int)
(declare-fun x1284 () Bool)
(declare-fun x506 () Int)
(declare-fun x638 () Bool)
(declare-fun x296 () Bool)
(declare-fun x922 () Bool)
(declare-fun x365 () Int)
(declare-fun x856 () Int)
(declare-fun x34 () Bool)
(declare-fun x1153 () Int)
(declare-fun x1061 () Int)
(declare-fun x728 () Int)
(declare-fun x1096 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1277 () Int)
(declare-fun x1461 () Bool)
(declare-fun x543 () Bool)
(declare-fun x250 () Bool)
(declare-fun x881 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x940 () Bool)
(declare-fun x226 () Bool)
(declare-fun x373 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1079 () Int)
(declare-fun x1776 (Int) Int)
(declare-fun x24 () Int)
(declare-fun x1573 () Int)
(declare-fun x1538 () Int)
(declare-fun x1373 () Bool)
(declare-fun x822 () Int)
(declare-fun x389 () Int)
(declare-fun x1359 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1006 () Int)
(declare-fun x343 () Int)
(declare-fun x540 () Int)
(declare-fun x1655 () Bool)
(declare-fun x439 () Bool)
(declare-fun x18 () Int)
(declare-fun x560 () Int)
(declare-fun x1591 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x194 () Bool)
(declare-fun x631 () Int)
(declare-fun x1227 () Bool)
(declare-fun x327 () Bool)
(declare-fun x1546 () Int)
(declare-fun x305 () Bool)
(declare-fun x111 () Int)
(declare-fun x512 () Bool)
(declare-fun x55 () Bool)
(declare-fun x1404 () Int)
(declare-fun x1526 () Int)
(declare-fun x903 () Bool)
(declare-fun x544 () Int)
(declare-fun x130 () Int)
(declare-fun x1019 () Int)
(declare-fun x538 () Int)
(declare-fun x717 () Int)
(declare-fun x295 () Bool)
(declare-fun x37 () Bool)
(declare-fun x956 () Int)
(declare-fun x1651 () Int)
(declare-fun x40 (Int) Int)
(declare-fun x169 () Bool)
(declare-fun x954 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x709 () Int)
(declare-fun x597 () Bool)
(declare-fun x1283 () Int)
(declare-fun x345 () Int)
(declare-fun x422 () Int)
(declare-fun x104 () Int)
(declare-fun x363 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x1173 () Int)
(declare-fun x453 () Int)
(declare-fun x1790 () Bool)
(declare-fun x26 () Bool)
(declare-fun x1698 () Int)
(declare-fun x1717 () Bool)
(declare-fun x77 () Int)
(declare-fun x1739 () Int)
(declare-fun x1011 () Bool)
(declare-fun x82 () Int)
(declare-fun x1151 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x568 () Int)
(declare-fun x921 () Bool)
(declare-fun x1377 () Int)
(declare-fun x735 () Int)
(declare-fun x1589 () Int)
(declare-fun x59 () Bool)
(declare-fun x575 () Bool)
(declare-fun x522 () Int)
(declare-fun x481 () Bool)
(declare-fun x934 () Int)
(declare-fun x930 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x72 () Int)
(declare-fun x100 () Int)
(declare-fun x22 () Bool)
(declare-fun x535 () Int)
(declare-fun x975 () Int)
(declare-fun x164 () Bool)
(declare-fun x1807 () Int)
(declare-fun x70 () Int)
(declare-fun x1782 () Bool)
(declare-fun x559 () Int)
(declare-fun x647 () Int)
(declare-fun x378 () Int)
(declare-fun x1844 () Int)
(declare-fun x1024 () Int)
(declare-fun x1231 () Int)
(declare-fun x29 () Bool)
(declare-fun x379 () Int)
(declare-fun x462 () Bool)
(declare-fun x464 () Int)
(declare-fun x1846 () Int)
(declare-fun x216 () Int)
(declare-fun x1837 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1874 () Int)
(declare-fun x212 () Int)
(declare-fun x1200 () Int)
(declare-fun x1140 () Bool)
(declare-fun x582 () Int)
(declare-fun x503 () Int)
(declare-fun x339 () Int)
(declare-fun x1152 () Int)
(declare-fun x1057 () Bool)
(declare-fun x891 () Int)
(declare-fun x949 () Bool)
(declare-fun x619 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x876 () Bool)
(declare-fun x340 () Int)
(declare-fun x591 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1084 () Int)
(declare-fun x1653 () Bool)
(declare-fun x206 () Int)
(declare-fun x1730 () Bool)
(declare-fun x1649 () Int)
(declare-fun x658 () Int)
(declare-fun x1078 () Bool)
(declare-fun x265 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x1499 () Int)
(declare-fun x739 () Bool)
(declare-fun x818 () Bool)
(declare-fun x1088 () Int)
(declare-fun x669 () Bool)
(declare-fun x127 () Bool)
(declare-fun x1691 () Int)
(declare-fun x1829 () Bool)
(declare-fun x347 () Int)
(declare-fun x156 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x786 () Bool)
(declare-fun x752 () Int)
(declare-fun x494 () Int)
(declare-fun x1354 () Int)
(declare-fun x280 () Int)
(declare-fun x466 () Bool)
(declare-fun x413 () Int)
(declare-fun x1747 () Bool)
(declare-fun x651 () Bool)
(declare-fun x98 () Int)
(declare-fun x227 () Int)
(declare-fun x848 () Int)
(declare-fun x1243 () Bool)
(declare-fun x1639 () Int)
(declare-fun x667 () Int)
(declare-fun x537 () Bool)
(declare-fun x1121 () Int)
(declare-fun x377 () Int)
(declare-fun x888 () Int)
(declare-fun x1449 () Int)
(declare-fun x936 () Int)
(declare-fun x243 () Int)
(declare-fun x200 () Int)
(declare-fun x790 () Int)
(declare-fun x1831 () Bool)
(declare-fun x1309 () Int)
(declare-fun x531 () Int)
(declare-fun x1601 () Bool)
(declare-fun x31 () Bool)
(declare-fun x4 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1066 () Int)
(declare-fun x1689 () Bool)
(declare-fun x652 () Int)
(declare-fun x744 () Int)
(declare-fun x1523 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x893 () Bool)
(declare-fun x969 () Int)
(declare-fun x330 () Bool)
(declare-fun x196 () Int)
(declare-fun x885 () Bool)
(declare-fun x107 () Bool)
(declare-fun x1772 () Int)
(declare-fun x594 () Int)
(declare-fun x528 () Int)
(declare-fun x1438 () Bool)
(declare-fun x593 () Bool)
(declare-fun x745 () Int)
(declare-fun x1064 () Int)
(declare-fun x248 () Int)
(declare-fun x1362 () Int)
(declare-fun x160 () Bool)
(declare-fun x1323 () Int)
(declare-fun x390 () Int)
(declare-fun x695 () Bool)
(declare-fun x1355 () Int)
(declare-fun x907 () Int)
(declare-fun x871 () Int)
(declare-fun x270 () Int)
(declare-fun x611 () Int)
(declare-fun x1680 () Bool)
(declare-fun x1074 () Int)
(declare-fun x1451 () Int)
(declare-fun x1188 () Int)
(declare-fun x489 () Bool)
(declare-fun x261 () Int)
(declare-fun x1469 () Int)
(declare-fun x135 () Int)
(declare-fun x508 () Int)
(declare-fun x1270 () Bool)
(declare-fun x146 () Int)
(declare-fun x1857 () Int)
(declare-fun x1761 () Int)
(declare-fun x920 (Int) Int)
(declare-fun x411 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x1412 () Int)
(declare-fun x569 () Int)
(declare-fun x756 () Int)
(declare-fun x1038 () Bool)
(declare-fun x1468 () Int)
(declare-fun x1575 () Bool)
(declare-fun x8 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x473 () Bool)
(declare-fun x1100 () Int)
(declare-fun x359 () Bool)
(declare-fun x1192 () Int)
(declare-fun x302 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x301 () Bool)
(declare-fun x990 () Bool)
(declare-fun x1749 () Int)
(declare-fun x1536 () Bool)
(declare-fun x1566 () Int)
(declare-fun x1017 () Int)
(declare-fun x1210 () Int)
(declare-fun x1272 () Int)
(declare-fun x1715 () Int)
(declare-fun x1299 () Bool)
(declare-fun x366 () Bool)
(declare-fun x1583 () Int)
(declare-fun x793 () Int)
(declare-fun x1295 () Int)
(declare-fun x1264 () Bool)
(declare-fun x570 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1826 () Int)
(declare-fun x1726 () Int)
(declare-fun x761 () Bool)
(declare-fun x78 () Int)
(declare-fun x932 () Int)
(declare-fun x1766 () Bool)
(declare-fun x906 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1326 () Int)
(declare-fun x318 () Int)
(declare-fun x532 () Int)
(declare-fun x1023 () Bool)
(declare-fun x836 () Bool)
(declare-fun x753 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1650 () Int)
(declare-fun x153 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x797 () Int)
(declare-fun x1855 () Int)
(declare-fun x1395 () Bool)
(declare-fun x732 () Int)
(declare-fun x1027 () Bool)
(declare-fun x187 () Int)
(declare-fun x1533 () Bool)
(declare-fun x617 () Bool)
(declare-fun x231 () Int)
(declare-fun x1106 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x504 () Int)
(declare-fun x341 () Int)
(declare-fun x937 () Int)
(declare-fun x1059 () Int)
(declare-fun x1218 () Bool)
(declare-fun x348 () Int)
(declare-fun x1263 () Int)
(declare-fun x967 () Bool)
(declare-fun x134 () Bool)
(declare-fun x1687 () Int)
(declare-fun x1448 () Bool)
(declare-fun x1337 () Int)
(declare-fun x983 () Int)
(declare-fun x1792 () Bool)
(declare-fun x548 () Bool)
(declare-fun x1119 () Int)
(declare-fun x1762 () Bool)
(declare-fun x1781 () Int)
(declare-fun x1099 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1618 () Int)
(declare-fun x235 () Bool)
(declare-fun x581 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x774 () Int)
(declare-fun x1616 () Int)
(declare-fun x43 () Bool)
(declare-fun x188 () Int)
(declare-fun x497 () Int)
(declare-fun x961 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x827 () Int)
(declare-fun x182 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x738 () Bool)
(declare-fun x110 () Int)
(declare-fun x554 () Int)
(declare-fun x853 () Int)
(declare-fun x1775 () Bool)
(declare-fun x815 () Int)
(declare-fun x92 () Int)
(declare-fun x855 () Int)
(declare-fun x1249 () Int)
(declare-fun x306 () Bool)
(declare-fun x1663 () Int)
(declare-fun x561 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x60 () Bool)
(declare-fun x1570 () Int)
(declare-fun x1797 () Int)
(declare-fun x1571 () Int)
(declare-fun x1555 () Bool)
(declare-fun x1827 () Int)
(declare-fun x547 () Bool)
(declare-fun x457 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x1288 () Int)
(declare-fun x1682 () Bool)
(declare-fun x69 () Int)
(declare-fun x1399 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x451 () Int)
(declare-fun x145 () Int)
(declare-fun x727 () Int)
(declare-fun x1705 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x197 () Bool)
(declare-fun x819 () Int)
(declare-fun x1522 () Int)
(declare-fun x1349 () Int)
(declare-fun x1462 () Bool)
(declare-fun x1146 () Int)
(declare-fun x1552 () Int)
(declare-fun x1532 () Int)
(declare-fun x1791 () Bool)
(declare-fun x997 () Bool)
(declare-fun x337 () Int)
(declare-fun x900 () Int)
(declare-fun x1711 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1683 () Int)
(declare-fun x598 () Bool)
(declare-fun x799 () Int)
(declare-fun x676 () Int)
(declare-fun x995 () Int)
(declare-fun x795 () Int)
(declare-fun x423 () Bool)
(declare-fun x1123 () Int)
(declare-fun x573 () Bool)
(declare-fun x376 () Bool)
(declare-fun x436 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1093 () Int)
(declare-fun x612 () Int)
(declare-fun x837 () Bool)
(declare-fun x461 () Int)
(declare-fun x7 () Bool)
(declare-fun x562 () Int)
(declare-fun x1101 () Int)
(declare-fun x602 () Bool)
(declare-fun x712 () Int)
(declare-fun x1429 () Int)
(declare-fun x52 () Int)
(declare-fun x832 () Int)
(declare-fun x963 () Bool)
(declare-fun x659 () Int)
(declare-fun x1209 () Int)
(declare-fun x825 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x1104 () Int)
(declare-fun x101 () Bool)
(declare-fun x419 () Int)
(declare-fun x1437 () Bool)
(declare-fun x105 () Int)
(declare-fun x751 () Int)
(declare-fun x1860 () Bool)
(declare-fun x1036 () Int)
(declare-fun x1014 () Int)
(declare-fun x783 () Int)
(declare-fun x14 () Int)
(declare-fun x1154 () Int)
(declare-fun x116 () Int)
(declare-fun x30 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x463 () Int)
(declare-fun x1008 (Int) Int)
(declare-fun x851 () Int)
(declare-fun x362 () Bool)
(declare-fun x663 () Int)
(declare-fun x1184 () Bool)
(declare-fun x183 () Int)
(declare-fun x54 () Int)
(declare-fun x1830 () Int)
(declare-fun x1133 () Int)
(declare-fun x904 () Int)
(declare-fun x1051 () Int)
(declare-fun x1870 () Int)
(declare-fun x1269 () Bool)
(declare-fun x467 () Int)
(declare-fun x750 () Int)
(declare-fun x1540 () Int)
(declare-fun x438 () Int)
(declare-fun x204 () Int)
(declare-fun x1160 () Int)
(declare-fun x329 () Bool)
(declare-fun x852 () Int)
(declare-fun x1319 () Int)
(declare-fun x714 (Int) Int)
(declare-fun x371 () Int)
(declare-fun x1185 () Bool)
(declare-fun x770 () Int)
(declare-fun x1187 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x471 () Bool)
(declare-fun x607 () Int)
(declare-fun x53 () Bool)
(declare-fun x1479 () Int)
(declare-fun x166 () Int)
(declare-fun x1138 () Int)
(declare-fun x1669 () Int)
(declare-fun x1759 () Bool)
(declare-fun x524 () Bool)
(declare-fun x90 () Int)
(declare-fun x1174 () Int)
(declare-fun x1005 () Int)
(declare-fun x600 () Bool)
(declare-fun x778 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1435 () Bool)
(declare-fun x68 () Int)
(declare-fun x1804 () Bool)
(declare-fun x944 () Int)
(declare-fun x950 () Int)
(declare-fun x449 () Int)
(declare-fun x1428 () Int)
(declare-fun x1203 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x272 () Bool)
(declare-fun x346 () Int)
(declare-fun x1266 () Int)
(declare-fun x139 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x287 () Bool)
(declare-fun x1590 () Int)
(declare-fun x1142 () Bool)
(declare-fun x740 () Bool)
(declare-fun x165 () Bool)
(declare-fun x181 () Bool)
(declare-fun x873 () Bool)
(declare-fun x586 () Int)
(declare-fun x1053 () Int)
(declare-fun x274 () Int)
(declare-fun x1667 () Int)
(declare-fun x477 () Bool)
(declare-fun x603 () Bool)
(declare-fun x383 () Bool)
(declare-fun x1194 () Int)
(declare-fun x1205 () Int)
(declare-fun x1202 () Bool)
(declare-fun x648 () Int)
(declare-fun x1481 () Int)
(declare-fun x1597 () Int)
(declare-fun x51 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x405 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x207 () Int)
(declare-fun x645 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1556 () Bool)
(declare-fun x432 () Bool)
(declare-fun x992 () Int)
(declare-fun x1347 () Int)
(declare-fun x450 () Int)
(declare-fun x1455 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x485 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1360 () Int)
(declare-fun x1401 () Int)
(declare-fun x1126 () Bool)
(declare-fun x83 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x1818 () Bool)
(declare-fun x1262 () Int)
(declare-fun x780 () Bool)
(declare-fun x1647 () Int)
(declare-fun x563 () Int)
(declare-fun x303 () Int)
(declare-fun x973 () Int)
(declare-fun x1317 () Int)
(declare-fun x1488 () Int)
(declare-fun x1113 () Int)
(declare-fun x1643 () Bool)
(declare-fun x126 () Int)
(declare-fun x978 () Int)
(declare-fun x557 () Int)
(declare-fun x1786 () Bool)
(declare-fun x1709 () Int)
(declare-fun x552 () Int)
(declare-fun x613 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x61 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x850 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x1785 () Int)
(declare-fun x1509 () Int)
(declare-fun x820 () Int)
(declare-fun x1082 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1290 () Int)
(declare-fun x137 () Bool)
(declare-fun x775 () Int)
(declare-fun x886 () Bool)
(declare-fun x1374 () Int)
(declare-fun x846 () Int)
(declare-fun x342 () Int)
(declare-fun x889 () Int)
(declare-fun x397 () Bool)
(declare-fun x325 () Int)
(declare-fun x1724 () Int)
(declare-fun x635 () Int)
(declare-fun x1516 () Int)
(declare-fun x1802 () Int)
(declare-fun x725 () Bool)
(declare-fun x812 () Bool)
(declare-fun x706 () Int)
(declare-fun x1847 () Bool)
(declare-fun x902 () Int)
(declare-fun x642 () Bool)
(declare-fun x1553 () Int)
(declare-fun x1530 () Bool)
(declare-fun x177 () Int)
(declare-fun x1613 () Bool)
(declare-fun x372 () Bool)
(declare-fun x1615 (Int Int) Int)
(declare-fun x677 () Bool)
(declare-fun x176 () Bool)
(declare-fun x1478 () Int)
(declare-fun x1304 () Bool)
(declare-fun x702 () Bool)
(declare-fun x518 () Int)
(declare-fun x1604 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x427 () Int)
(declare-fun x923 () Int)
(declare-fun x240 () Int)
(declare-fun x1310 () Int)
(declare-fun x1076 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x189 () Int)
(declare-fun x198 () Int)
(declare-fun x869 () Int)
(declare-fun x877 () Int)
(declare-fun x223 () Int)
(declare-fun x319 () Bool)
(declare-fun x754 () Int)
(declare-fun x894 () Bool)
(declare-fun x606 () Bool)
(declare-fun x835 () Int)
(declare-fun x1656 () Int)
(declare-fun x627 () Int)
(declare-fun x1777 () Int)
(declare-fun x38 () Bool)
(declare-fun x720 () Int)
(declare-fun x584 () Int)
(declare-fun x1633 () Int)
(declare-fun x796 () Bool)
(declare-fun x523 () Int)
(declare-fun x202 () Int)
(declare-fun x1623 () Bool)
(declare-fun x1852 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x614 () Bool)
(declare-fun x784 () Bool)
(declare-fun x109 () Bool)
(declare-fun x857 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x864 () Int)
(declare-fun x585 () Bool)
(declare-fun x23 () Bool)
(declare-fun x313 () Bool)
(declare-fun x972 () Bool)
(declare-fun x965 () Bool)
(declare-fun x655 () Bool)
(declare-fun x929 () Int)
(declare-fun x1843 () Int)
(declare-fun x1835 () Int)
(declare-fun x1755 () Int)
(declare-fun x1514 () Bool)
(declare-fun x1114 () Int)
(declare-fun x779 () Int)
(declare-fun x901 () Bool)
(declare-fun x1418 (Int) Bool)
(declare-fun x1527 () Int)
(declare-fun x821 () Bool)
(declare-fun x1191 () Int)
(declare-fun x1588 () Int)
(declare-fun x715 () Int)
(declare-fun x1273 () Int)
(declare-fun x1734 () Bool)
(declare-fun x905 () Bool)
(declare-fun x429 () Bool)
(declare-fun x2 () Int)
(declare-fun x988 () Bool)
(declare-fun x1490 () Int)
(declare-fun x48 () Bool)
(declare-fun x688 () Int)
(declare-fun x74 () Int)
(declare-fun x148 () Int)
(declare-fun x1022 () Int)
(declare-fun x11 () Bool)
(declare-fun x592 () Int)
(declare-fun x1603 () Int)
(declare-fun x814 () Int)
(declare-fun x1351 () Int)
(declare-fun x266 () Int)
(declare-fun x1021 () Int)
(declare-fun x947 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x1512 (Int) Int)
(declare-fun x1630 () Bool)
(declare-fun x697 () Int)
(declare-fun x149 () Int)
(declare-fun x971 () Int)
(declare-fun x1866 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x838 () Bool)
(declare-fun x1058 () Int)
(declare-fun x1671 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1495 () Int)
(declare-fun x1884 () Bool)
(declare-fun x425 () Bool)
(declare-fun x437 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x579 () Bool)
(declare-fun x1330 (Int) Int)
(declare-fun x1505 () Bool)
(declare-fun x746 () Int)
(declare-fun x84 (Int) Int)
(declare-fun x1124 () Int)
(declare-fun x205 () Bool)
(declare-fun x935 () Int)
(declare-fun x911 () Bool)
(declare-fun x474 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x879 () Int)
(declare-fun x1211 () Int)
(declare-fun x915 () Bool)
(declare-fun x946 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x479 () Bool)
(declare-fun x847 () Int)
(declare-fun x1813 () Int)
(declare-fun x1087 () Bool)
(declare-fun x179 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x354 () Int)
(declare-fun x610 () Int)
(declare-fun x1177 () Int)
(declare-fun x1190 () Bool)
(declare-fun x622 () Int)
(declare-fun x1344 () Bool)
(declare-fun x803 () Bool)
(declare-fun x460 () Int)
(declare-fun x16 (Int) Int)
(declare-fun x1149 () Bool)
(declare-fun x1179 () Int)
(declare-fun x918 () Int)
(declare-fun x710 () Bool)
(declare-fun x1015 () Int)
(declare-fun x757 () Int)
(declare-fun x112 () Bool)
(declare-fun x939 () Bool)
(declare-fun x195 () Int)
(declare-fun x1067 () Int)
(declare-fun x1510 () Int)
(declare-fun x185 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x662 () Bool)
(declare-fun x393 () Int)
(declare-fun x1744 () Int)
(declare-fun x1850 () Bool)
(declare-fun x58 () Int)
(declare-fun x1368 () Bool)
(declare-fun x1774 () Int)
(declare-fun x1474 () Bool)
(declare-fun x952 () Bool)
(declare-fun x236 () Int)
(declare-fun x1042 () Bool)
(declare-fun x511 () Int)
(declare-fun x1839 () Int)
(declare-fun x1161 () Int)
(declare-fun x1780 () Int)
(declare-fun x264 () Int)
(declare-fun x1824 () Bool)
(declare-fun x1037 () Int)
(declare-fun x1484 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x1525 () Int)
(declare-fun x1460 () Int)
(declare-fun x1182 () Int)
(declare-fun x64 () Bool)
(declare-fun x214 () Bool)
(declare-fun x47 () Bool)
(declare-fun x771 () Bool)
(declare-fun x267 () Bool)
(declare-fun x326 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x1297 () Int)
(declare-fun x120 () Int)
(declare-fun x96 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x333 () Int)
(declare-fun x1793 () Bool)
(declare-fun x490 () Bool)
(declare-fun x1799 () Int)
(declare-fun x1120 () Int)
(declare-fun x332 () Int)
(declare-fun x1012 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1198 () Int)
(declare-fun x410 () Int)
(declare-fun x273 () Bool)
(declare-fun x810 () Int)
(declare-fun x1596 () Int)
(declare-fun x1779 () Int)
(declare-fun x1386 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x396 () Bool)
(declare-fun x289 () Bool)
(declare-fun x576 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x618 () Bool)
(declare-fun x529 () Int)
(declare-fun x670 () Int)
(declare-fun x475 () Int)
(declare-fun x1393 () Bool)
(declare-fun x246 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x1443 () Int)
(declare-fun x805 () Bool)
(declare-fun x826 () Int)
(declare-fun x1528 () Bool)
(declare-fun x292 () Int)
(declare-fun x599 () Bool)
(declare-fun x546 () Int)
(declare-fun x315 () Bool)
(declare-fun x733 () Int)
(declare-fun x237 () Bool)
(declare-fun x763 () Int)
(declare-fun x1764 () Bool)
(declare-fun x66 () Int)
(declare-fun x1414 () Bool)
(declare-fun x1453 () Int)
(declare-fun x898 () Int)
(declare-fun x178 () Int)
(declare-fun x391 () Bool)
(declare-fun x687 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x741 () Bool)
(declare-fun x1487 () Int)
(declare-fun x225 () Int)
(declare-fun x1878 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x94 () Int)
(declare-fun x1719 () Bool)
(declare-fun x998 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1340 () Bool)
(declare-fun x1010 () Int)
(declare-fun x530 () Bool)
(declare-fun x1407 () Int)
(declare-fun x1336 () Bool)
(declare-fun x324 () Int)
(declare-fun x1345 () Bool)
(declare-fun x747 () Int)
(declare-fun x498 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x284 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1796 () Bool)
(declare-fun x802 () Int)
(declare-fun x620 () Int)
(declare-fun x519 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x442 () Int)
(declare-fun x1445 () Bool)
(declare-fun x755 () Bool)
(declare-fun x773 () Int)
(declare-fun x1873 () Int)
(declare-fun x1080 () Int)
(declare-fun x646 () Bool)
(declare-fun x141 () Bool)
(declare-fun x794 () Bool)
(declare-fun x271 () Int)
(declare-fun x1070 () Int)
(declare-fun x1544 () Bool)
(declare-fun x113 () Int)
(declare-fun x152 () Bool)
(declare-fun x1676 () Int)
(declare-fun x1403 () Bool)
(declare-fun x1388 () Int)
(declare-fun x455 () Bool)
(declare-fun x12 () Int)
(declare-fun x1718 () Int)
(declare-fun x1584 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1737 () Bool)
(declare-fun x210 () Bool)
(declare-fun x719 () Int)
(declare-fun x1432 () Bool)
(declare-fun x447 () Bool)
(declare-fun x191 () Int)
(declare-fun x1353 () Int)
(declare-fun x1222 () Bool)
(declare-fun x239 () Int)
(declare-fun x300 () Bool)
(declare-fun x118 () Int)
(declare-fun x943 () Bool)
(declare-fun x1171 () Int)
(declare-fun x1458 () Int)
(declare-fun x1195 () Int)
(declare-fun x1508 () Int)
(declare-fun x955 () Int)
(declare-fun x1624 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x1122 () Int)
(declare-fun x496 () Bool)
(declare-fun x1645 () Int)
(declare-fun x777 () Bool)
(declare-fun x1814 () Int)
(declare-fun x1697 () Bool)
(declare-fun x458 () Bool)
(declare-fun x482 () Int)
(declare-fun x1635 () Int)
(declare-fun x580 () Bool)
(declare-fun x1543 () Int)
(declare-fun x384 () Bool)
(declare-fun x985 () Bool)
(declare-fun x478 () Int)
(declare-fun x636 () Int)
(declare-fun x392 () Int)
(declare-fun x263 () Bool)
(declare-fun x986 () Int)
(declare-fun x1801 () Bool)
(declare-fun x1558 () Int)
(declare-fun x1760 () Int)
(declare-fun x201 () Bool)
(declare-fun x162 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x674 () Bool)
(declare-fun x1376 () Int)
(declare-fun x492 () Int)
(define-fun x823 ((x1213 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1213) (>= x1213 0)) x1213 (- x1213 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x293 ((x1213 Int)) Int (ite (and (< x1213 0) (>= x1213 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1213 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1213))
(define-fun x108 ((x1213 Int)) Int (ite (and (>= x1213 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1213)) x1213 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1213) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1213)) (- x1213 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1213 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1213 0)) (+ x1213 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1615 x1213 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1409 ((x1091 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1091) (<= 0 x1091)))
(define-fun x1600 ((x1091 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1091) (>= x1091 0)))
(define-fun x1551 ((x1091 Int) (x679 Int)) Bool (= (* x679 x1091) (x1352 x1091 x679)))
(define-fun x1500 ((x1091 Int) (x679 Int)) Bool (and (= (- (* (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1091) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1352 (- x1091 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1352 x1091 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x1091 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x679 x1091) (* x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x1352 (- x1091 115792089237316195423570985008687907853269984665640564039457584007913129639936) x679))))
(define-fun x834 ((x1091 Int) (x679 Int)) Bool (=> (and (< 0 x1091) (< 0 x679)) (= (= x679 (x1713 (x108 (x1352 x1091 x679)) x1091)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1352 x1091 x679)))))
(define-fun x1162 ((x1091 Int) (x679 Int)) Bool (=> (and (not (= x679 0)) (not (= 0 x1091))) (and (= (x1713 (x1352 x1091 x679) x1091) x679) (= (x1713 (x1352 x1091 x679) x679) x1091))))
(define-fun x1089 ((x1091 Int) (x679 Int)) Bool (=> (and (< 0 x679) (> x1091 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1352 x1091 x679)) (< (x1713 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1091) x679))))
(define-fun x1868 ((x1091 Int) (x679 Int)) Bool (and (= (x108 (x1352 x1091 x679)) (x108 (x1352 x1091 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x108 (x1352 (- x1091 115792089237316195423570985008687907853269984665640564039457584007913129639936) x679)) (x108 (x1352 x1091 x679))) (= (x108 (x1352 (- x1091 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x108 (x1352 x1091 x679)))))
(define-fun x414 ((x1091 Int) (x679 Int)) Bool (and (=> (and (and (<= x679 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x679)) (and (> x1091 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1091))) (= (>= (x1713 57896044618658097711785492504343953926634992332820282019728792003956564819968 x679) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1091)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1352 (- x1091 115792089237316195423570985008687907853269984665640564039457584007913129639936) x679)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x679) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)) (and (> x1091 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1091))) (= (<= (x1352 (- x1091 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1713 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1091)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x679) (> x679 0)) (and (< 0 x1091) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1091))) (= (>= (x1713 57896044618658097711785492504343953926634992332820282019728792003956564819967 x679) x1091) (<= (x1352 x1091 x679) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x679) (<= x679 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1091) (> x1091 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679) (x1713 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1091)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1352 x1091 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x3 ((x1091 Int) (x679 Int)) Bool (and (x1551 x1091 x679) (x414 x1091 x679) (x1162 x1091 x679) (x1868 x1091 x679) (x1500 x1091 x679) (x834 x1091 x679) (x1089 x1091 x679)))
(define-fun x572 ((x1091 Int)) Bool (and (= 0 (x1352 0 x1091)) (= 0 (x1352 x1091 0))))
(define-fun x247 ((x1091 Int)) Bool (and (= (x1352 x1091 1) x1091) (= (x1352 1 x1091) x1091)))
(define-fun x1678 ((x1091 Int)) Bool (and (x247 x1091) (x572 x1091)))
(define-fun x713 ((x1091 Int) (x679 Int)) Bool (=> (and (< 0 x1091) (> x679 0)) (and (>= x1091 (x1713 x1091 x679)) (>= (x1713 x1091 x679) 0))))
(define-fun x1864 ((x1091 Int) (x679 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1091) (>= x1091 0)) (and (<= 1 x679) (< x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (<= 0 (x1713 x1091 x679)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1713 x1091 x679)))))
(define-fun x1090 ((x1091 Int) (x679 Int)) Bool (=> (and (< x679 x1091) (> x679 1)) (> x1091 (x1713 x1091 x679))))
(define-fun x1230 ((x1091 Int) (x679 Int)) Bool (=> (and (< 0 x1091) (< 0 x679)) (= (= 0 (x1713 x1091 x679)) (> x679 x1091))))
(define-fun x1364 ((x1091 Int) (x679 Int)) Bool (=> (and (> x1091 0) (> x679 0)) (and (> (x1352 (x1713 x1091 x679) x679) (- x1091 x679)) (<= (x1352 (x1713 x1091 x679) x679) x1091))))
(define-fun x1086 ((x1091 Int) (x679 Int)) Bool (and (x1090 x1091 x679) (x713 x1091 x679) (x1864 x1091 x679) (x1364 x1091 x679) (x1230 x1091 x679)))
(define-fun x1073 ((x1091 Int)) Bool (= (x1713 0 x1091) 0))
(define-fun x493 ((x1091 Int)) Bool (= (x1713 x1091 1) x1091))
(define-fun x801 ((x1091 Int)) Bool (=> (not (= x1091 0)) (= (x1713 x1091 x1091) 1)))
(define-fun x1795 ((x1091 Int)) Bool (and (x801 x1091) (x1073 x1091) (x493 x1091)))
(define-fun x1783 ((x1091 Int) (x679 Int)) Bool (=> (and (< 0 x679) (< 0 x1091)) (and (<= (* (x1713 x1091 x679) x679) x1091) (< (- x1091 x679) (* (x1713 x1091 x679) x679)))))
(define-fun x35 ((x1091 Int) (x679 Int)) Bool (and (x1230 x1091 x679) (x1090 x1091 x679) (x1783 x1091 x679) (x1864 x1091 x679) (x713 x1091 x679)))
(define-fun x1517 ((x1091 Int)) Bool (and (= x1091 (x1821 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1091)) (= x1091 (x1821 x1091 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x56 ((x1091 Int)) Bool (and (= (x1821 x1091 0) 0) (= 0 (x1821 0 x1091))))
(define-fun x440 ((x1091 Int)) Bool (= (x1821 x1091 x1091) x1091))
(define-fun x574 ((x1091 Int)) Bool (and (x440 x1091) (x56 x1091) (x1517 x1091)))
(define-fun x351 ((x1091 Int) (x679 Int)) Bool (= (x1821 x679 x1091) (x1821 x1091 x679)))
(define-fun x1856 ((x1091 Int) (x679 Int)) Bool (and (=> (<= 0 x1091) (<= (x1821 x1091 x679) x1091)) (<= 0 (x1821 x1091 x679)) (=> (<= 0 x679) (>= x679 (x1821 x1091 x679)))))
(define-fun x404 ((x1091 Int) (x679 Int)) Bool (and (x351 x1091 x679) (x1856 x1091 x679)))
(define-fun x86 ((x1091 Int)) Bool (= (x1615 x1091 20282409603651670423947251286016) (x1821 x1091 20282409603651670423947251286015)))
(define-fun x890 ((x1091 Int)) Bool (and (x404 x1091 20282409603651670423947251286015) (x86 x1091)))
(define-fun x487 ((x1091 Int) (x679 Int)) Bool (and (< (x1615 x1091 x679) x679) (>= (x1615 x1091 x679) 0)))
(define-fun x1400 ((x1091 Int) (x679 Int)) Bool (=> (and (< 0 x679) (<= 0 x1091)) (= (= x1091 (x1615 x1091 x679)) (< x1091 x679))))
(define-fun x1763 ((x1091 Int) (x679 Int)) Bool (=> (and (> x679 0) (and (< x1091 (+ x679 x679)) (<= x679 x1091))) (= (- x1091 x679) (x1615 x1091 x679))))
(define-fun x673 ((x1091 Int) (x679 Int)) Bool (=> (< 0 x679) (= x1091 (+ (* x679 (x1713 x1091 x679)) (x1615 x1091 x679)))))
(define-fun x276 ((x1091 Int) (x679 Int)) Bool (and (x487 x1091 x679) (x1763 x1091 x679) (x673 x1091 x679) (x1400 x1091 x679)))
(define-fun x1534 ((x1091 Int)) Bool (= 0 (x1615 0 x1091)))
(define-fun x81 ((x1091 Int)) Bool (= 0 (x1615 x1091 1)))
(define-fun x571 ((x1091 Int)) Bool (= (x1615 x1091 x1091) 0))
(define-fun x20 ((x1091 Int)) Bool (and (x571 x1091) (x81 x1091) (x1534 x1091)))
(define-fun x142 ((x1091 Int)) Bool (= (x1615 x1091 26959946667150639794667015087019630673637144422540572481103610249216) (x1821 x1091 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1372 ((x1091 Int)) Bool (and (x404 x1091 26959946667150639794667015087019630673637144422540572481103610249215) (x142 x1091)))
(define-fun x1641 ((x1091 Int) (x679 Int)) Bool (= (x1352 x1091 x679) (x1352 x679 x1091)))
(define-fun x1625 ((x1091 Int) (x679 Int)) Bool (and (=> (and (< 0 x679) (< 0 x1091)) (< 0 (x1352 x1091 x679))) (=> (and (< x679 0) (< x1091 0)) (< 0 (x1352 x1091 x679))) (=> (and (> 0 x679) (< 0 x1091)) (< (x1352 x1091 x679) 0)) (=> (and (< x1091 0) (> x679 0)) (> 0 (x1352 x1091 x679)))))
(define-fun x505 ((x1091 Int) (x679 Int)) Bool (and (x1089 x1091 x679) (x1868 x1091 x679) (x1641 x1091 x679) (x414 x1091 x679) (x1162 x1091 x679) (x1625 x1091 x679) (x834 x1091 x679)))
(define-fun x1572 ((x1091 Int)) Bool (= (x108 x1091) (+ (x1821 x1091 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1615 x1091 32))))
(define-fun x1550 ((x1091 Int)) Bool (and (x1572 x1091) (x404 x1091 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x917 ((x241 Int)) Int 0)
(define-fun x1805 ((x241 Int)) Int 0)
(define-fun x748 ((x241 Int)) Int 0)
(define-fun x830 ((x241 Int)) Int 0)
(define-fun x1315 ((x241 Int)) Int 0)
(define-fun x1742 ((x241 Int)) Int 0)
(define-fun x1703 ((x241 Int)) Int 0)
(define-fun x1256 ((x241 Int)) Int 0)
(define-fun x430 ((x241 Int)) Int 0)
(define-fun x421 ((x241 Int)) Int 0)
(define-fun x842 ((x241 Int)) Int 0)
(define-fun x781 ((x241 Int)) Int 0)
(define-fun x1621 ((x241 Int)) Int 0)
(define-fun x1519 ((x241 Int)) Int 0)
(define-fun x1141 ((x241 Int)) Int 0)
(define-fun x224 ((x241 Int)) Int 0)
(define-fun x690 ((x241 Int)) Int 0)
(define-fun x951 ((x241 Int)) Int 0)
(define-fun x616 ((x241 Int)) Int 0)
(define-fun x294 ((x241 Int)) Int 0)
(define-fun x678 ((x241 Int)) Int 0)
(define-fun x299 ((x241 Int)) Int 0)
(define-fun x374 ((x241 Int)) Int 0)
(define-fun x672 ((x241 Int)) Int 0)
(define-fun x596 ((x241 Int)) Int 0)
(define-fun x15 ((x241 Int)) Int 0)
(define-fun x114 ((x241 Int)) Int 0)
(define-fun x275 ((x241 Int)) Int 0)
(define-fun x1741 ((x241 Int)) Int 0)
(define-fun x1163 ((x241 Int)) Int 0)
(define-fun x88 ((x241 Int)) Int 0)
(define-fun x1858 ((x241 Int)) Int 0)
(define-fun x1139 ((x241 Int)) Int 0)
(define-fun x158 ((x241 Int)) Int 0)
(define-fun x1862 ((x241 Int)) Int 0)
(define-fun x1300 ((x241 Int)) Int 0)
(define-fun x465 ((x241 Int)) Int 0)
(define-fun x993 ((x241 Int)) Int 0)
(define-fun x977 ((x241 Int)) Int 0)
(define-fun x671 ((x241 Int)) Int 0)
(define-fun x1629 ((x241 Int)) Int 0)
(define-fun x974 ((x241 Int)) Int 0)
(define-fun x217 ((x241 Int)) Int 0)
(define-fun x254 ((x241 Int)) Int (ite (= x241 x1761) x65 (x1512 x241)))
(define-fun x1493 ((x241 Int)) Int (ite (= x1636 x241) x1236 (x254 x241)))
(define-fun x844 ((x241 Int)) Int (ite (= x241 x1093) x984 (x1043 x241)))
(define-fun x131 ((x241 Int)) Int (ite (= x1114 x241) x12 (x844 x241)))
(define-fun x1366 ((x241 Int)) Int (ite (= x387 x241) x643 (x131 x241)))
(define-fun x1248 ((x241 Int)) Int (ite (= x241 x320) x1082 (x1366 x241)))
(define-fun x1338 ((x241 Int)) Int (ite x684 (x131 x241) (x1248 x241)))
(define-fun x1832 ((x241 Int)) Int (ite (= 4 x241) 17 (x1703 x241)))
(define-fun x219 ((x241 Int)) Int (ite (and (< x241 36) (>= x241 0)) (x1832 x241) (x714 x241)))
(define-fun x694 ((x241 Int)) Int (ite (= x241 4) 17 (x1703 x241)))
(define-fun x1721 ((x241 Int)) Int (ite (and (>= x241 0) (> 36 x241)) (x694 x241) (x714 x241)))
(define-fun x1672 ((x241 Int)) Int (ite x1674 (x219 x241) (ite x1344 (x1721 x241) (x714 x241))))
(define-fun x277 ((x241 Int)) Int (ite (= x241 0) 1 (x714 x241)))
(define-fun x1148 ((x241 Int)) Int (ite x684 (x1672 x241) (x277 x241)))
(define-fun x1693 ((x241 Int)) Int (ite (= x241 x346) x1538 (x1512 x241)))
(define-fun x811 ((x241 Int)) Int (ite (= x1636 x241) x607 (x1693 x241)))
(define-fun x1098 ((x241 Int)) Int (ite (= x241 x1636) x1501 (x811 x241)))
(define-fun x1212 ((x241 Int)) Int (ite (= x1635 x241) x180 (x1098 x241)))
(define-fun x675 ((x241 Int)) Int (ite (= x241 x1407) x1220 (x1212 x241)))
(define-fun x521 ((x241 Int)) Int (ite (= x1636 x241) x132 (x675 x241)))
(define-fun x1582 ((x241 Int)) Int (ite (= x1636 x241) x833 (x521 x241)))
(define-fun x1531 ((x241 Int)) Int (ite (= x241 x1635) x1012 (x1582 x241)))
(define-fun x1420 ((x241 Int)) Int (ite (= x1635 x241) x1033 (x1531 x241)))
(define-fun x809 ((x241 Int)) Int (ite x350 (x1338 x241) (ite x979 (x131 x241) (ite x1567 (x131 x241) (ite x1410 (x131 x241) (ite x384 (x131 x241) (ite x159 (x1338 x241) (ite x1140 (x131 x241) (ite x425 (x131 x241) (ite x29 (x131 x241) (ite x1421 (x131 x241) (ite x154 (x131 x241) (ite x1714 (x131 x241) (ite x1662 (x131 x241) (ite x457 (x131 x241) (ite x1291 (x131 x241) (ite x91 (x131 x241) (ite x1764 (x1338 x241) (ite x692 (x131 x241) (ite x662 (x1338 x241) (x131 x241)))))))))))))))))))))
(define-fun x564 ((x241 Int)) Int (ite x1176 (ite x1318 (x809 x241) (x1338 x241)) (x131 x241)))
(define-fun x244 ((x241 Int)) Int 0)
(define-fun x258 ((x241 Int)) Int (ite x1318 (x809 x241) (x1338 x241)))
(define-fun x1328 ((x241 Int)) Int (ite (= x1739 x241) 1 (x1330 x241)))
(define-fun x1380 ((x241 Int)) Int (ite (= x241 x582) 1 (x1330 x241)))
(define-fun x1707 ((x241 Int)) Int (ite (= x1255 x241) x1434 (x220 x241)))
(define-fun x1356 ((x241 Int)) Int (ite (= x241 x1277) 1 (x1380 x241)))
(define-fun x1585 ((x241 Int)) Int (ite (= x241 x832) x1827 (x1308 x241)))
(define-fun x1003 ((x241 Int)) Int (ite x1129 (x1585 x241) (x1308 x241)))
(define-fun x507 ((x241 Int)) Int (ite (= x1032 x241) x1710 (x920 x241)))
(define-fun x1559 ((x241 Int)) Int (ite x1331 (ite x1345 (x920 x241) (x507 x241)) (x920 x241)))
(define-fun x85 ((x241 Int)) Int (ite (= x241 x1353) x712 (x1350 x241)))
(define-fun x1298 ((x241 Int)) Int (ite x1331 (x85 x241) (x1350 x241)))
(define-fun x381 ((x241 Int)) Int 0)
(define-fun x553 ((x241 Int)) Int (ite (= x241 x992) x1178 (x1043 x241)))
(define-fun x964 ((x241 Int)) Int (ite (= x39 x241) x1121 (x553 x241)))
(define-fun x334 ((x241 Int)) Int 0)
(define-fun x874 ((x241 Int)) Int 0)
(define-fun x282 ((x241 Int)) Int 0)
(define-fun x1778 ((x241 Int)) Int 0)
(define-fun x1278 ((x241 Int)) Int 0)
(define-fun x1579 ((x241 Int)) Int 0)
(define-fun x1732 ((x241 Int)) Int 0)
(define-fun x913 ((x241 Int)) Int 0)
(define-fun x1720 ((x241 Int)) Int 0)
(define-fun x1447 ((x241 Int)) Int 0)
(define-fun x845 ((x241 Int)) Int 0)
(define-fun x1268 ((x241 Int)) Int 0)
(define-fun x170 ((x241 Int)) Int 0)
(define-fun x1754 ((x241 Int)) Int 0)
(define-fun x316 ((x241 Int)) Int 0)
(define-fun x782 ((x241 Int)) Int 0)
(define-fun x1040 ((x241 Int)) Int 0)
(define-fun x866 ((x241 Int)) Int 0)
(define-fun x545 ((x241 Int)) Int (ite (= x1542 x241) 0 (x416 x241)))
(define-fun x1130 ((x241 Int)) Int (ite x1743 (x416 x241) (ite x51 (x416 x241) (x545 x241))))
(define-fun x1334 ((x241 Int)) Int (ite (= x266 x241) x802 (x1196 x241)))
(define-fun x286 ((x241 Int)) Int (ite (= x1542 x241) 0 (x1196 x241)))
(define-fun x454 ((x241 Int)) Int (ite x1743 (x1196 x241) (ite x51 (x1334 x241) (x286 x241))))
(define-fun x1055 ((x241 Int)) Int (ite x51 (x416 x241) (x545 x241)))
(define-fun x1427 ((x241 Int)) Int (ite x51 (x1334 x241) (x286 x241)))
(define-fun x938 ((x241 Int)) Int (ite (= x241 x1687) x879 (x454 x241)))
(define-fun x175 ((x241 Int)) Int (ite (= x959 x241) 0 (x454 x241)))
(define-fun x1378 ((x241 Int)) Int (ite x1836 (x938 x241) (x175 x241)))
(define-fun x106 ((x241 Int)) Int (ite (= x241 x959) 0 (x1130 x241)))
(define-fun x899 ((x241 Int)) Int (ite x1836 (x1130 x241) (x106 x241)))
(define-fun x726 ((x241 Int)) Int (ite (= x241 x1289) x689 (x220 x241)))
(define-fun x1391 ((x241 Int)) Int (ite (= x241 192) x1638 (x224 x241)))
(define-fun x615 ((x241 Int)) Int (ite x1322 (ite x38 (x1256 x241) (x1391 x241)) (x1256 x241)))
(define-fun x63 ((x241 Int)) Int (ite (= x241 192) x750 (x615 x241)))
(define-fun x551 ((x241 Int)) Int (ite x537 (x63 x241) (x615 x241)))
(define-fun x577 ((x241 Int)) Int (ite (= 192 x241) x331 (x551 x241)))
(define-fun x791 ((x241 Int)) Int (ite (= 224 x241) x1428 (x577 x241)))
(define-fun x1853 ((x241 Int)) Int (ite x646 (x551 x241) (x791 x241)))
(define-fun x862 ((x241 Int)) Int (ite (= 256 x241) x1085 (x1853 x241)))
(define-fun x1842 ((x241 Int)) Int (ite (= 292 x241) x1525 (x830 x241)))
(define-fun x994 ((x241 Int)) Int (ite (= x241 324) x445 (x1842 x241)))
(define-fun x314 ((x241 Int)) Int (ite (= 256 x241) 68 (x917 x241)))
(define-fun x1690 ((x241 Int)) Int (ite (= x241 288) x178 (x994 x241)))
(define-fun x1250 ((x241 Int)) Int (ite (and (<= 356 x241) (> (+ x225 356) x241)) (x1690 (- x241 68)) (x862 x241)))
(define-fun x516 ((x241 Int)) Int (ite (= x1636 x241) x622 (x1493 x241)))
(define-fun x1768 ((x241 Int)) Int (ite (= 0 x241) 1 (x1776 x241)))
(define-fun x1816 ((x241 Int)) Int (ite (= 356 x241) 32 (x299 x241)))
(define-fun x1483 ((x241 Int)) Int (ite (and (<= 388 x241) (> 420 x241)) (x1768 (- x241 388)) (x616 x241)))
(define-fun x1773 ((x241 Int)) Int (ite (= 192 x241) x1710 (x690 x241)))
(define-fun x758 ((x241 Int)) Int (ite x1331 (ite x1345 (x430 x241) (x1773 x241)) (x430 x241)))
(define-fun x121 ((x241 Int)) Int (ite (= x241 192) x1827 (x758 x241)))
(define-fun x914 ((x241 Int)) Int (ite x1129 (x121 x241) (x758 x241)))
(define-fun x1684 ((x241 Int)) Int (ite (= 192 x241) x1735 (x914 x241)))
(define-fun x704 ((x241 Int)) Int (ite (= x241 224) x849 (x1684 x241)))
(define-fun x513 ((x241 Int)) Int (ite x179 (x914 x241) (x704 x241)))
(define-fun x968 ((x241 Int)) Int (ite (= x241 256) x212 (x513 x241)))
(define-fun x1103 ((x241 Int)) Int (ite (= x241 292) x937 (x1315 x241)))
(define-fun x1770 ((x241 Int)) Int (ite (= 324 x241) x986 (x1103 x241)))
(define-fun x1696 ((x241 Int)) Int (ite (= x241 256) 68 (x1805 x241)))
(define-fun x1834 ((x241 Int)) Int (ite (= x241 288) x221 (x1770 x241)))
(define-fun x1333 ((x241 Int)) Int (ite (and (<= 356 x241) (> (+ 356 x371) x241)) (x1834 (- x241 68)) (x968 x241)))
(define-fun x486 ((x241 Int)) Int (ite (= x241 0) 1 (x16 x241)))
(define-fun x1397 ((x241 Int)) Int (ite (= 356 x241) 32 (x374 x241)))
(define-fun x424 ((x241 Int)) Int (ite (and (> 420 x241) (<= 388 x241)) (x486 (- x241 388)) (x294 x241)))
(define-fun x665 ((x241 Int)) Int (ite x916 (x1130 x241) (ite x1836 (x1130 x241) (x106 x241))))
(define-fun x1463 ((x241 Int)) Int (ite x916 (x454 x241) (ite x1836 (x938 x241) (x175 x241))))
(define-fun x1225 ((x241 Int)) Int (ite (= x241 x213) x774 (x1707 x241)))
(define-fun x601 ((x241 Int)) Int (ite (= x241 192) x569 (x951 x241)))
(define-fun x1158 ((x241 Int)) Int (ite x515 (ite x1782 (x421 x241) (x601 x241)) (x421 x241)))
(define-fun x367 ((x241 Int)) Int (ite (= 192 x241) x129 (x1158 x241)))
(define-fun x426 ((x241 Int)) Int (ite x1800 (x367 x241) (x1158 x241)))
(define-fun x1706 ((x241 Int)) Int (ite (= 192 x241) x144 (x426 x241)))
(define-fun x36 ((x241 Int)) Int (ite (= 224 x241) x146 (x1706 x241)))
(define-fun x1456 ((x241 Int)) Int (ite x798 (x426 x241) (x36 x241)))
(define-fun x99 ((x241 Int)) Int (ite (= 256 x241) x592 (x1456 x241)))
(define-fun x759 ((x241 Int)) Int (ite (= 292 x241) x587 (x1742 x241)))
(define-fun x45 ((x241 Int)) Int (ite (= x241 324) x484 (x759 x241)))
(define-fun x875 ((x241 Int)) Int (ite (= 256 x241) 68 (x748 x241)))
(define-fun x360 ((x241 Int)) Int (ite (= 288 x241) x1570 (x45 x241)))
(define-fun x1851 ((x241 Int)) Int (ite (and (> (+ 356 x556) x241) (>= x241 356)) (x360 (- x241 68)) (x99 x241)))
(define-fun x621 ((x241 Int)) Int (ite (= x1234 x241) x1638 (x920 x241)))
(define-fun x583 ((x241 Int)) Int (ite (= x1037 x241) x569 (x1559 x241)))
(define-fun x887 ((x241 Int)) Int (ite (= x241 x1885) x750 (x1308 x241)))
(define-fun x736 ((x241 Int)) Int (ite (= x241 x9) x129 (x1003 x241)))
(define-fun x1859 ((x241 Int)) Int (ite (= x451 x241) x956 (x1612 x241)))
(define-fun x124 ((x241 Int)) Int (ite (= x418 x241) x1779 (x1612 x241)))
(define-fun x1379 ((x241 Int)) Int (ite x1800 (x736 x241) (x1003 x241)))
(define-fun x588 ((x241 Int)) Int (ite x179 (x1612 x241) (x124 x241)))
(define-fun x1628 ((x241 Int)) Int (ite (= x241 x1503) x1358 (x588 x241)))
(define-fun x352 ((x241 Int)) Int (ite (= x924 x241) x1626 (x1350 x241)))
(define-fun x1034 ((x241 Int)) Int (ite x1345 (x920 x241) (x507 x241)))
(define-fun x1081 ((x241 Int)) Int (ite x1782 (x1559 x241) (x583 x241)))
(define-fun x1541 ((x241 Int)) Int (ite (= x1138 x241) x478 (x1298 x241)))
(define-fun x1280 ((x241 Int)) Int (ite x515 (x1541 x241) (x1298 x241)))
(define-fun x279 ((x241 Int)) Int (ite x515 (ite x1782 (x1559 x241) (x583 x241)) (x1559 x241)))
(define-fun x136 ((x241 Int)) Int (ite (= x1451 x241) x378 (x1196 x241)))
(define-fun x386 ((x241 Int)) Int (ite (= x241 x1293) 0 (x416 x241)))
(define-fun x1549 ((x241 Int)) Int (ite (= x1293 x241) 0 (x1196 x241)))
(define-fun x222 ((x241 Int)) Int (ite x798 (x588 x241) (x1628 x241)))
(define-fun x1871 ((x241 Int)) Int (ite (= x241 356) x1803 (x672 x241)))
(define-fun x1659 ((x241 Int)) Int (ite (and (> (+ x1803 388) x241) (>= x241 388)) (x1148 (- x241 388)) (x678 x241)))
(define-fun x233 ((x241 Int)) Int (ite x67 (x1141 x241) (x1659 x241)))
(define-fun x1861 ((x241 Int)) Int (ite x67 (x1519 x241) (x1871 x241)))
(define-fun x1207 ((x1091 Int) (x679 Int) (x1320 Int) (x1 Int)) Bool (=> (and (<= 0 x679) (<= x679 x1) (<= x1091 x1320) (<= 0 x1091)) (>= (x1352 x1320 x1) (x1352 x1091 x679))))
(define-fun x982 ((x1091 Int) (x679 Int) (x1320 Int) (x1 Int)) Bool (=> (= x1091 x1320) (= (- (x1352 x1091 x679) (x1352 x1320 x1)) (x1352 x1091 (- x679 x1)))))
(assert (x1409 x1182))
(assert (= (and (not x437) x1547) x660))
(assert (= x1759 (and (not x976) x1476)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x324 8)))
(assert (x1409 x756))
(assert (> (x401 64 x1525 2) 10000))
(assert (x1409 x969))
(assert (= x541 (and x203 x308)))
(assert (> (x401 64 x1479 0) 10000))
(assert (x1678 (- x557 x536)))
(assert (not (x1418 (x401 64 x648 2))))
(assert (x1409 x989))
(assert (x1678 (- x550 x557)))
(assert (= (and (not x1524) x1477) x1392))
(assert (= (=> (and (= (x401 64 x144 12) x1495) (= x1610 (x588 x1495)) (= (> x1610 x1358) x366) (= (x823 (+ x146 x1610)) x1358)) (and (=> (and (not x366) (and (or x439 (and (not x439) (= x1503 (x401 64 x144 12)))) (= (= x146 0) x439))) x1736) (=> x366 x609))) x490))
(assert (x1409 x872))
(assert (x982 x394 x1070 x983 x550))
(assert (= x1530 (and (not x1336) x893)))
(assert (= (x1694 (x401 64 x747 2)) (x401 64 x747 2)))
(assert (= (x1694 (x401 64 x144 x390)) (x401 64 x144 x390)))
(assert (= (x1694 (x401 64 x501 0)) (x401 64 x501 0)))
(assert (not (x1418 (x401 64 x1061 2))))
(assert (= 0 (x1694 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x125 (x401 64 x331 0)) x331))
(assert (x505 x1314 (- x2 x1604)))
(assert (x1409 x218))
(assert (< 10000 (x401 64 x1735 0)))
(assert (= 2 (x84 (x401 64 x871 2))))
(assert (x1678 (- x2 x1604)))
(assert (not (x1418 (x401 64 x1310 2))))
(assert (x1409 x49))
(assert (= 8 (x84 (x401 64 x54 8))))
(assert (= (x401 64 x144 0) (x1694 (x401 64 x144 0))))
(assert (x1600 x232))
(assert (x1409 x1394))
(assert (x1409 x522))
(assert (x1409 x177))
(assert (= x937 (x125 (x401 64 x937 2))))
(assert (= (x125 (x401 64 x324 8)) x324))
(assert (> (x401 64 x501 0) 10000))
(assert (not (x1418 (x401 64 x331 12))))
(assert (x1409 x544))
(assert (x982 x2 x1314 x536 x467))
(assert (x1409 x1661))
(assert (x1409 x754))
(assert (x1409 x950))
(assert (x1409 x1458))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x492 0)))
(assert (x1678 (- x1683 x536)))
(assert (x1409 x546))
(assert (x890 x57))
(assert (x1409 x1075))
(assert (x1409 x187))
(assert (x1409 x1453))
(assert (x1409 x681))
(assert (= (x401 64 x1310 2) (x1694 (x401 64 x1310 2))))
(assert (x1409 x659))
(assert (= x396 (=> (and (= x849 x944) (= x832 (x401 64 x1735 x1110))) x1151)))
(assert (x276 x1679 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x813 (or x326 x226)))
(assert (> (x401 64 x1061 2) 10000))
(assert (x505 x550 (- x983 x394)))
(assert (x1409 x1423))
(assert (= (x1694 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x1409 x995))
(assert (=> (>= 10000 x1297) (= 0 (x1694 x1297))))
(assert (x1409 x1666))
(assert (x1409 x377))
(assert (x1678 (- x1604 x983)))
(assert (= (x84 (x401 64 x1297 8)) 8))
(assert (x982 x536 x467 x1070 x394))
(assert (not (x1418 (x401 64 x1080 2))))
(assert (x1409 x1691))
(assert (x1409 x1127))
(assert (= x407 (and (not x330) x428)))
(assert (x1409 x1785))
(assert (x1409 x790))
(assert (not (x1418 (x401 64 x331 0))))
(assert (x1409 x239))
(assert (x1409 x371))
(assert (= 64 (x1294 (x401 64 x144 13))))
(assert (x505 x536 (- x467 x1314)))
(assert (x982 x394 x1070 x1683 x557))
(assert (x1409 x1407))
(assert (x1409 x1604))
(assert (x1409 x1634))
(assert (x1409 x495))
(assert (= (x1694 1817583341) 0))
(assert (x1678 (- x536 x557)))
(assert (x505 x1683 (- x557 x394)))
(assert (x1678 (- x467 x1070)))
(assert (x982 x1683 x557 x843 x1604))
(assert (=> (>= 10000 x1374) (= 0 (x1694 x1374))))
(assert (= (x84 (x401 64 2 10)) 10))
(assert (x1207 x1314 x2 x394 x1070))
(assert (x1409 x130))
(assert (x1409 x611))
(assert (x1600 x1137))
(assert (x1409 x1648))
(assert (x505 x983 x550))
(assert (x1418 458445791))
(assert (x1678 x522))
(assert (x1409 x1499))
(assert (x1409 x898))
(assert (x1409 x1807))
(assert (= (or x1344 x496 x695 x1674) x684))
(assert (x1600 x1769))
(assert (< (x401 64 x1735 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1287 (=> (and (= x755 (= x1638 x971)) (or x755 (not x755))) x641)))
(assert (= (or x1556 x812) x1815))
(assert (x982 x843 x1604 x394 x1070))
(assert (= x160 (and x1829 (not x1398))))
(assert (= x747 (x125 (x401 64 x747 2))))
(assert (x1409 x248))
(assert (x1678 (- x983 x1604)))
(assert (= (=> (and (and (= (x1493 x1636) x622) (= (ite x1886 1 0) x729) (= x1178 (x293 (- x1765 x445))) (= x148 (x1821 26959946667150639794667015087019630673637144422540572481103610249215 x163)) (= 1 x1195) (= (x1043 x727) x1765) (= x1325 2835717307) (= (x401 64 x1525 2) x39) (= (x293 (- x227 x1085)) x1198) (= (x994 288) x163) (not (> x1085 x198)) (= (x401 64 x1636 2) x992) (not (< x1765 x1178)) (= x107 false) (>= 127 x848) (<= 1 x1814) (= (x293 (- x198 x1085)) x1100) (= x1121 (x823 (+ x969 x445))) (<= x198 20282409603651670423947251286015) (not (> x445 x1765)) (= (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x148) x178) (= x1568 356) (= (x1821 20282409603651670423947251286015 x1100) x689) (= (= x518 0) x1886) (= x1289 (x401 64 x331 0)) (= false x1591) (= (x314 256) x225) (= x969 (x553 x188)) (= x1873 x888) (= x198 (x220 x568)) (= x1471 x49) (= (+ x215 x689) x637) (= (x1816 356) x518) (= x727 (x401 64 x1636 2)) (= x188 (x401 64 x1525 2)) (= (x293 (- x227 x1085)) x1603) (= x223 68) (<= x848 127) (not (> x969 x1121)) (= x1433 false) (= 0 x193) (= x1436 (>= x1485 x198)) (= x1814 (x1008 x1635)) (= (x293 (- x135 356)) x790) (= x445 x888) (>= 20282409603651670423947251286015 x389) (= x1429 x280) (= x568 (x401 64 x331 0)) (= (x516 x1635) x1471) (= x215 (- x1485 x389)) (= false x1536) (= (x220 x1289) x389) (= x1172 356) x1436 (= x989 256) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x283) (= (x823 (+ 356 x225)) x135) (= 68 x790) (not (< x1121 x969)) (>= x198 1)) (or (and (and (= x1888 (x1008 x1635)) (<= 1 x1888)) x1886) (and (= x729 0) (not x1886)))) x1756) x1840))
(assert (x1409 x1146))
(assert (x1409 x467))
(assert (< 10000 (x401 64 x1319 8)))
(assert (x1550 x1679))
(assert (x1409 x586))
(assert (x1678 (- x394 x536)))
(assert (x1409 x342))
(assert (x982 x536 x467 x557 x1683))
(assert (x276 x1679 32))
(assert (x1409 x310))
(assert (x1207 x536 x467 x394 x1070))
(assert (x1409 x1811))
(assert (= (or x807 x1176) x1341))
(assert (x1409 x948))
(assert (x1409 x283))
(assert (x1418 40564819207303340847894502572030))
(assert (= (x84 (x401 64 x1310 2)) 2))
(assert (< (x401 64 x707 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1418 (x401 64 x492 0))))
(assert (x505 x1314 (- x2 x394)))
(assert (x982 x1314 x2 x394 x1070))
(assert (x1409 x100))
(assert (x276 x163 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1600 x1522))
(assert (= x253 (or x1185 (and x1545 x1881))))
(assert (x1409 x1522))
(assert (= (or x1386 x38) x1322))
(assert (x1409 x839))
(assert (x982 x983 x550 x394 x1070))
(assert (x1409 x833))
(assert (x1409 x68))
(assert (= x54 (x125 (x401 64 x54 8))))
(assert (x1409 x1249))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x459 13)))
(assert (x20 x1167))
(assert (x1409 x937))
(assert (x1409 x331))
(assert (= (x84 (x401 64 x718 0)) 0))
(assert (x1207 x843 x1604 x2 x1314))
(assert (x1409 x303))
(assert (x1678 (- x1070 x1314)))
(assert (x1409 x321))
(assert (x1409 x504))
(assert (=> (<= x54 10000) (= 0 (x1694 x54))))
(assert (= x1125 (=> (and (= (x293 (- x1509 x271)) x1070) (= (< x1509 x1070) x1723)) (and (=> x1723 x609) (=> (and (not x1723) (and (= x963 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1352 x394 x1070))) (= x1801 (<= x1323 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1352 x394 x1070) x1323) (= (and x963 x1801) x589))) (and (=> (not x589) x609) (=> (and x589 (and (= x522 x1323) (<= x1323 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (and x1593 x11) x357) (= x11 (< (* 1000000000000000000 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1593 (<= x999 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (* 1000000000000000000 x522) x999) (<= 0 x1323))) (and (=> (and (and (= x1108 (> x120 0)) (>= x999 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x999)) x357) (and (=> (and x1108 (and (= x1506 (< x460 x70)) (= x70 (x1713 x999 x120)) (= x460 (x823 (+ x523 x70))))) (and (=> (and (not x1506) (= x460 x569)) x1825) (=> x1506 x609))) (=> (not x1108) x609))) (=> (not x357) x609)))))))))
(assert (= (x401 64 x1735 0) (x1694 (x401 64 x1735 0))))
(assert (= x1319 (x125 (x401 64 x1319 8))))
(assert (< 10000 (x401 64 x1310 2)))
(assert (x1418 288162684))
(assert (x1678 (- x843 x1314)))
(assert (x1418 2835717307))
(assert (= x1346 (and x311 x623)))
(assert (x1207 x1314 x2 x467 x536))
(assert (= x718 (x125 (x401 64 x718 0))))
(assert (x505 x536 (- x467 x394)))
(assert (x1409 x1546))
(assert (x505 x2 (- x1314 x1604)))
(assert (x505 x1604 (- x843 x467)))
(assert (< 10000 (x401 64 x54 8)))
(assert (> (x401 64 x1735 17) 10000))
(assert (x1678 (- x1604 x557)))
(assert (= (=> (and (<= x368 20282409603651670423947251286015) (= (x1707 x639) x368) x970 (= (x401 64 x144 0) x639) (= x976 (> x592 x368)) (= (<= x368 x270) x970)) (and (=> x976 x609) (=> (and (and (= (x293 (- x120 x592)) x1083) (= x57 (x293 (- x368 x592))) (= 68 x612) (= x745 (x1582 x1635)) (= (x131 x355) x824) (<= 1 x1025) (= x213 (x401 64 x144 0)) (= (+ x774 x13) x1060) (= x184 x1490) (= x612 (x293 (- x1552 356))) (= x1012 x745) (= (x45 288) x1449) (= x355 (x401 64 x1636 2)) (= x1552 (x823 (+ x556 356))) (= x342 256) (>= 127 x535) (= x449 x484) (= x563 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 2835717307 x1673) (= (- x270 x1194) x13) (= x1570 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1852)) (= 68 x907) (= x309 x449) (<= x535 127) (= x556 (x875 256)) (= (x1008 x1635) x1025) (= 0 x737) (= (x521 x1636) x833) (= (x293 (- x120 x592)) x1691) (= x772 356) (<= x1194 20282409603651670423947251286015) (= (x1821 26959946667150639794667015087019630673637144422540572481103610249215 x1449) x1852) (= x1194 (x1707 x213)) (= (x1821 20282409603651670423947251286015 x57) x774) (= x1521 false) (= x580 false) (= x1190 (< x824 x484))) (not x976)) (and (=> (and x1190 (and (= true x1701) (= 0 x880) (= false x1675))) x645) (=> (and (and (= x643 (x293 (- x824 x484))) (= (< x824 x643) x1793)) (not x1190)) (and (=> (and (not x1793) (and (= x539 (x401 64 x587 2)) (= x1221 (> x1874 x1082)) (= (x823 (+ x484 x1874)) x1082) (= x387 (x401 64 x1636 2)) (= x1874 (x1366 x539)))) (and (=> (and (= x1524 (> x1874 x1082)) (not x1221)) (and (=> (and x1524 (and (= false x420) (= x880 0) (= true x32))) x645) (=> (and (and (= x102 false) (= x320 (x401 64 x587 2)) (= x1803 32) (= x58 1) (= false x1578)) (not x1524)) x1042))) (=> (and (and (= 36 x880) (= x1592 true) (= false x362)) x1221) x645))) (=> (and (and (= true x1430) (= x313 false) (= x880 36)) x1793) x645))))))) x447))
(assert (= 0 (x84 (x401 64 x501 0))))
(assert (x1409 x932))
(assert (x505 x394 (- x1070 x1604)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x871 2)))
(assert (x1409 x941))
(assert (x982 x1683 x557 x550 x983))
(assert (x1409 x190))
(assert (= (x401 64 x1636 2) (x1694 (x401 64 x1636 2))))
(assert (x1409 x1635))
(assert (x1409 x1121))
(assert (= (x401 64 x144 17) (x1694 (x401 64 x144 17))))
(assert (= (and (not x873) x1435) x1365))
(assert (x1409 x1814))
(assert (x1678 (- x557 x1070)))
(assert (x1409 x52))
(assert (= (and x1251 x357) x1387))
(assert (= x1753 (=> (= x1750 (= x750 x470)) (and (=> (and x1750 (= 0 x1428)) x825) (=> (and (and (or (and (not x1889) (and (>= x1388 0) (= x442 x1317) (not (< x750 x536)) (= (x293 (- x750 x470)) x536) (= (x1713 x1388 1000000000000000000) x442) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1352 x467 x536)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1388) (= x1388 (x1352 x467 x536)))) (and x1889 (= 0 x1317))) (= (= x467 0) x1889)) (not x1750)) x48)))))
(assert (x1409 x612))
(assert (x1678 x536))
(assert (x1409 x1760))
(assert (= (and x1001 (not x1786)) x432))
(assert (=> (<= x1835 10000) (= (x1694 x1835) 0)))
(assert (x1409 x1118))
(assert (= x1238 (and x336 (not x96))))
(assert (x1409 x1772))
(assert (x1409 x909))
(assert (x1409 x1012))
(assert (x1409 x394))
(assert (x1409 x1021))
(assert (< (x401 64 x1685 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1678 (- x467 x983)))
(assert (x505 x1070 (- x394 x557)))
(assert (x1795 x1700))
(assert (< 10000 (x401 64 x707 8)))
(assert (x1678 x1820))
(assert (x1409 x1174))
(assert (x505 x467 (- x536 x557)))
(assert (x505 x1070 (- x394 x467)))
(assert (x1086 x793 x1094))
(assert (x20 x1112))
(assert (x982 x2 x1314 x843 x1604))
(assert (x505 x1683 (- x557 x1604)))
(assert (= x291 x1850))
(assert (> (x401 64 x1735 13) 10000))
(assert (= 2 (x84 (x401 64 x937 2))))
(assert (x1409 x373))
(assert (x982 x983 x550 x843 x1604))
(assert (= (x84 (x401 64 x324 8)) 8))
(assert (= (or x1322 x962) x865))
(assert (= x1735 (x125 (x401 64 x1735 17))))
(assert (= (x1694 2727740892) 0))
(assert (x505 x557 (- x1683 x843)))
(assert (x505 x536 (- x467 x1604)))
(assert (x1409 x1651))
(assert (x1409 x960))
(assert (x505 x1683 (- x557 x536)))
(assert (= (or (and (not x1791) x806) (and x64 (not x1627))) x91))
(assert (x505 x843 x1604))
(assert (= (x125 (x401 64 x461 2)) x461))
(assert (x1409 x864))
(assert (x1409 x1698))
(assert (= x1296 (=> (and (<= x983 20282409603651670423947251286015) (= x317 (>= x1548 x1348)) (= x929 (x920 x1032)) (= x983 (x220 x1644)) (= x1115 (x401 64 x1735 0)) (= 1 x889) (>= 20282409603651670423947251286015 x212) (<= 1 x212) (= x986 (x1713 x783 x1094)) (= (<= x983 x1548) x1311) (<= 1 x1015) (= (x401 64 x1735 0) x1644) (= x333 (x293 (- x712 x829))) (= x1054 (x1308 x1066)) (= (x401 64 x1636 8) x1353) (= (* x212 1000000000000000000) x783) (= x1066 (x401 64 x1735 x1110)) (= x212 (ite (> x670 x1015) x1015 x670)) (= x1015 (ite (< 0 x105) x1348 x1046)) (= x1348 (x220 x1115)) (>= 340282366920938463463374607431768211455 x829) x317 (= x582 (x401 64 x1735 17)) (= x1110 (+ x1353 2)) (>= 105312291668557186697918027683670432318895095400549111254310977535 x1015) (= (< 0 x333) x288) (= (+ x1353 1) x1032) x1311 (<= x1348 20282409603651670423947251286015) (= x829 (x1350 x1353)) (= 0 x649)) (and (=> (and (not x288) (= x929 x1827)) x97) (=> (and (and (and (>= 340282366920938463463374607431768211455 x843) (= x1640 (ite (= x843 0) (ite (= 0 x843) 1 0) 0)) (= (< 0 x1640) x1806) (= x843 (x650 x1353))) (or (and x1806 (= x1640 x1179)) (and (= (ite (= x829 x712) 1 0) x1179) (not x1806)))) x288) x1867)))))
(assert (x1678 (- x1314 x557)))
(assert (= x1157 (and x854 x780)))
(assert (x505 x1070 (- x394 x550)))
(assert (= (and x603 (not x1806)) x226))
(assert (x1409 x1061))
(assert (= 2 (x84 (x401 64 x400 2))))
(assert (= (x1694 (x401 64 x331 13)) (x401 64 x331 13)))
(assert (not (x1418 (x401 64 x459 13))))
(assert (x1409 x1810))
(assert (= 64 (x1294 (x401 64 x144 17))))
(assert (< (x401 64 x331 17) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x537 (or x300 x101)))
(assert (< (x401 64 x1319 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1409 x1335))
(assert (x1409 x1361))
(assert (x1409 x1079))
(assert (x505 x467 (- x536 x983)))
(assert (x1409 x1606))
(assert (x1600 x1361))
(assert (x1600 x663))
(assert (x982 x557 x1683 x1070 x394))
(assert (x1418 1099511627776))
(assert (x1678 x1147))
(assert (x1409 x1526))
(assert (x1409 x877))
(assert (x1409 x1058))
(assert (= (x401 64 x707 8) (x1694 (x401 64 x707 8))))
(assert (x20 x163))
(assert (x982 x2 x1314 x1070 x394))
(assert (x505 x394 (- x1070 x557)))
(assert (= x1345 (and x268 x576)))
(assert (x1409 x518))
(assert (x1409 x370))
(assert (x1409 x810))
(assert (x1409 x1823))
(assert (= (x125 (x401 64 x871 2)) x871))
(assert (x982 x1314 x2 x1070 x394))
(assert (x1207 x557 x1683 x467 x536))
(assert (x1678 (- x1683 x2)))
(assert (= x1674 (and x4 x1221)))
(assert (= (=> (and (= x1428 x1317) (= x1885 (x401 64 x331 x1136))) x825) x48))
(assert (x1409 x1231))
(assert (= x1766 (and (not x1265) x127)))
(assert (= x51 (and x252 x682)))
(assert (x1600 x1101))
(assert (x505 x394 (- x1070 x1314)))
(assert (x1409 x492))
(assert (= (x1694 (x401 64 x1608 8)) (x401 64 x1608 8)))
(assert (x1409 x889))
(assert (x1409 x707))
(assert (x1418 10000000000))
(assert (x1409 x595))
(assert (x1409 x27))
(assert (x1409 x819))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x647 8)))
(assert (=> (>= 10000 x718) (= (x1694 x718) 0)))
(assert (x1409 x478))
(assert (x1678 (- x1314 x843)))
(assert (= (x1694 (x401 64 x144 12)) (x401 64 x144 12)))
(assert (= 64 (x1294 (x401 64 x218 8))))
(assert (x505 x1683 (- x557 x983)))
(assert (x1409 x1022))
(assert (x35 x92 1000000000000000000))
(assert (= x722 (and x1623 x498)))
(assert (= x1386 (and x1565 (not x755))))
(assert (= (x1294 (x401 64 x871 2)) 64))
(assert (x1409 x1596))
(assert (= x1464 (and x699 x296)))
(assert (x1409 x1570))
(assert (< 10000 (x401 64 x1636 8)))
(assert (= x350 (and x854 (not x780))))
(assert (x1409 x936))
(assert (= (and (not x1886) x253) x642))
(assert (x1409 x1406))
(assert (x505 x1070 (- x394 x2)))
(assert (=> (<= x648 10000) (= (x1694 x648) 0)))
(assert (x1409 x1195))
(assert (x1600 x1072))
(assert (= (x401 64 x54 8) (x1694 (x401 64 x54 8))))
(assert (x1409 x863))
(assert (x505 x983 (- x550 x467)))
(assert (= 0 (x1694 288162684)))
(assert (x574 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x982 x1604 x843 x557 x1683))
(assert (= (and x437 x1547) x613))
(assert (= (x401 64 x648 2) (x1694 (x401 64 x648 2))))
(assert (= 2 (x84 (x401 64 x587 2))))
(assert (x1600 x795))
(assert (=> (<= x1635 10000) (= 0 (x1694 x1635))))
(assert (x1409 x1479))
(assert (=> (<= x1319 10000) (= (x1694 x1319) 0)))
(assert (= x37 (=> (and (= (+ 1 x924) x1234) (>= 340282366920938463463374607431768211455 x1267) (= x470 (x1308 x358)) x696 (= x652 (x220 x973)) (= x445 (x1713 x793 x1094)) (<= 1 x610) (<= x1085 20282409603651670423947251286015) (= (x1350 x924) x1267) (= x797 (x401 64 x331 0)) (= x971 (x920 x1234)) (= x1136 (+ 2 x924)) (>= 20282409603651670423947251286015 x652) (>= 105312291668557186697918027683670432318895095400549111254310977535 x610) x693 (= x467 (x220 x797)) (<= x467 20282409603651670423947251286015) (= x924 (x401 64 x1636 8)) (= (* 1000000000000000000 x1085) x793) (= (< 0 x525) x308) (>= x1085 1) (= x586 1) (= x973 (x401 64 x331 0)) (= x610 (ite (< 0 x105) x652 x1777)) (= 0 x1394) (= (x293 (- x1626 x1267)) x525) (= (>= x1485 x467) x693) (= x1085 (ite (< x610 x590) x610 x590)) (= (<= x652 x1485) x696) (= x1739 (x401 64 x331 17)) (= x358 (x401 64 x331 x1136))) (and (=> (and x308 (and (or (and (= x1744 x1193) x1677) (and (= x1193 (ite (= x1267 x1626) 1 0)) (not x1677))) (and (= x1744 (ite (= x2 0) (ite (= x2 0) 1 0) 0)) (= (< 0 x1744) x1677) (= x2 (x650 x924)) (>= 340282366920938463463374607431768211455 x2)))) x939) (=> (and (= x750 x971) (not x308)) x1753)))))
(assert (= x1142 (=> (and (or (and x96 (and (<= 1 x1453) (= (x1397 356) x1036) (>= x1036 32) (= (x424 388) x1453) (<= x1036 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (not x96) (= 0 x155))) (and (= (x1397 356) x1748) (= 356 x595) (= x161 356) (= x96 (not (= 0 x1748))) (= 356 x1326) (= x155 (ite x96 1 0)))) x398)))
(assert (= (x125 (x401 64 x501 0)) x501))
(assert (x1207 x1604 x843 x2 x1314))
(assert (x1207 x467 x536 x843 x1604))
(assert (x1409 x1173))
(assert (x982 x1314 x2 x1604 x843))
(assert (x505 x843 (- x1604 x1314)))
(assert (= (=> (and (or (and (= x451 (x401 64 x331 12)) (not x1336)) x1336) (and (= (= 0 x1428) x1336) (= (x823 (+ x926 x1428)) x956) (= x926 (x1612 x1002)) (= (x401 64 x331 12) x1002) (not (< x956 x926)))) x638) x825))
(assert (x1409 x1236))
(assert (x1678 (- x1604 x550)))
(assert (= (and x366 x1373) x1662))
(assert (x1409 x1797))
(assert (= x1095 (or (and x59 x761) x1063)))
(assert (x1409 x1053))
(assert (= x646 (and x1336 x893)))
(assert (x3 1000000000000000000 x212))
(assert (=> (<= x587 10000) (= (x1694 x587) 0)))
(assert (x1409 x636))
(assert (= (x1694 (x401 64 x1319 8)) (x401 64 x1319 8)))
(assert (x1409 x1443))
(assert (< (x401 64 x1061 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1735 12)))
(assert (x982 x983 x550 x536 x467))
(assert (x1409 x1888))
(assert (x1409 x1708))
(assert (not (x1418 (x401 64 x501 0))))
(assert (= x67 (and x911 x1719)))
(assert (x982 x843 x1604 x1070 x394))
(assert (x982 x1604 x843 x983 x550))
(assert (x1678 (- x2 x1683)))
(assert (= (x1294 (x401 64 x331 13)) 64))
(assert (= (x1294 (x401 64 x1310 2)) 64))
(assert (x1409 x1710))
(assert (< (x401 64 x331 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1409 x93))
(assert (= x1363 (and x966 (not x836))))
(assert (x1409 x193))
(assert (x1409 x661))
(assert (x505 x467 x536))
(assert (x982 x1070 x394 x2 x1314))
(assert (< (x401 64 x1024 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1409 x1211))
(assert (= (=> (and (and (= (x1816 356) x93) (= x1211 356) (= x1823 (ite x1165 1 0)) (= 356 x1583) (= x1362 356) (= (not (= x93 0)) x1165)) (or (and (not x1165) (= 0 x1823)) (and (and (<= x636 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x636 32) (= (x1483 388) x1633) (>= x1633 1) (= x636 (x1816 356))) x1165))) x1804) x1756))
(assert (x1409 x1201))
(assert (x1409 x869))
(assert (x505 x983 (- x550 x536)))
(assert (x505 x536 (- x467 x1070)))
(assert (x1678 (- x983 x2)))
(assert (x1409 x724))
(assert (x982 x983 x550 x1314 x2))
(assert (x20 x1100))
(assert (x1418 43549148))
(assert (x1678 (- x1604 x1314)))
(assert (x1409 x340))
(assert (= (x1694 (x401 64 x1735 17)) (x401 64 x1735 17)))
(assert (x1678 (- x1070 x2)))
(assert (= (and x139 x1865) x179))
(assert (x1409 x1261))
(assert (x982 x394 x1070 x536 x467))
(assert (x1409 x1376))
(assert (x1678 x557))
(assert (x982 x1314 x2 x983 x550))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x718 0)))
(assert (= 12 (x84 (x401 64 x1835 12))))
(assert (x1600 x1532))
(assert (x1207 x1604 x843 x467 x536))
(assert (x1207 x1683 x557 x467 x536))
(assert (x1678 x1354))
(assert (x1409 x1070))
(assert (x1409 x884))
(assert (not (x1418 (x401 64 x331 17))))
(assert (= x1340 (=> (and (= x1560 (x401 64 x1735 13)) (= (x416 x1560) x945) (<= x546 105312291668557186697918027683670432318895095400549111254310977535) (>= 1099511627775 x945) (= (x1196 x1560) x546) (= x408 (= x945 0))) (and (=> (and (and (or (and (= x1542 (x401 64 x1735 13)) (not x682)) (and (and (= x802 (x293 (- x546 x212))) (= x266 (x401 64 x1735 13)) (>= x546 1) (not (< x546 x802)) (<= x802 105312291668557186697918027683670432318895095400549111254310977534) (>= 105312291668557186697918027683670432318895095400549111254310977535 x546)) x682)) (= x682 (< x212 x546))) (not x408)) x291) (=> x408 x1850)))))
(assert (x1409 x730))
(assert (x1207 x550 x983 x467 x536))
(assert (= (x84 (x401 64 x144 12)) 12))
(assert (not (x1418 (x401 64 x1024 2))))
(assert (x505 x536 (- x467 x1683)))
(assert (x505 x843 (- x1604 x467)))
(assert (x982 x557 x1683 x1604 x843))
(assert (x1409 x1267))
(assert (x982 x983 x550 x2 x1314))
(assert (x1409 x822))
(assert (x1409 x143))
(assert (x1409 x927))
(assert (< (x401 64 x1636 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x505 x2 (- x1314 x394)))
(assert (x1207 x1314 x2 x1683 x557))
(assert (x505 x1070 (- x394 x1314)))
(assert (= x457 (and x1620 x344)))
(assert (x1409 x146))
(assert (x1409 x1030))
(assert (x1409 x607))
(assert (x1795 x793))
(assert (x1678 (- x983 x1314)))
(assert (x982 x467 x536 x394 x1070))
(assert (> (x401 64 x871 2) 10000))
(assert (x1600 x348))
(assert (= x1887 (or x684 x1392)))
(assert (= 64 (x1294 (x401 64 x492 0))))
(assert (x1409 x531))
(assert (> (x401 64 x937 2) 10000))
(assert (x1600 x1758))
(assert (x1409 x1326))
(assert (x1409 x1188))
(assert (x505 x983 (- x550 x394)))
(assert (= 12 (x84 (x401 64 x1543 12))))
(assert (not (x1418 (x401 64 x324 8))))
(assert (x982 x2 x1314 x394 x1070))
(assert (= x203 (or x593 (and x996 x165))))
(assert (x1409 x750))
(assert (= (x1294 (x401 64 x183 13)) 64))
(assert (= (x1294 (x401 64 x461 2)) 64))
(assert (x505 x1604 (- x843 x550)))
(assert (= (x1294 (x401 64 x1297 8)) 64))
(assert (x1409 x135))
(assert (x1409 x178))
(assert (=> (>= 10000 x707) (= (x1694 x707) 0)))
(assert (x1207 x2 x1314 x843 x1604))
(assert (x1409 x802))
(assert (x1409 x511))
(assert (x1409 x1883))
(assert (x1678 (- x983 x557)))
(assert (x1409 x1781))
(assert (< (x401 64 x331 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x804 x237) x1620))
(assert (x1409 x200))
(assert (= (x84 (x401 64 x331 12)) 12))
(assert (x3 1000000000000000000 x1489))
(assert (x1207 x467 x536 x1683 x557))
(assert (x1409 x482))
(assert (x982 x2 x1314 x550 x983))
(assert (= (x1694 43549148) 0))
(assert (x1409 x113))
(assert (= 2 (x84 (x401 64 x461 2))))
(assert (x505 x1683 x557))
(assert (x1409 x590))
(assert (x982 x467 x536 x557 x1683))
(assert (x1086 x783 x1094))
(assert (=> (<= x340 10000) (= 0 (x1694 x340))))
(assert (x1207 x983 x550 x843 x1604))
(assert (x1678 (- x550 x1604)))
(assert (= (and x1464 x1879) x796))
(assert (x1678 (- x2 x557)))
(assert (x1409 x1041))
(assert (x1409 x719))
(assert (= (x84 (x401 64 x331 13)) 13))
(assert (= (x1694 115792089237316195423570985008687907853269984665640564039457584006813618012161) 0))
(assert (x1418 1461501637330902918203684832716283019655932542975))
(assert (= x492 (x125 (x401 64 x492 0))))
(assert (x1409 x929))
(assert (x1678 (- x1070 x557)))
(assert (x1409 x1297))
(assert (x1207 x394 x1070 x1683 x557))
(assert (x1409 x72))
(assert (=> (>= 10000 x1310) (= 0 (x1694 x1310))))
(assert (x1409 x1833))
(assert (x1409 x1377))
(assert (x1409 x855))
(assert (x1678 (- x394 x557)))
(assert (x1409 x1642))
(assert (= (x84 (x401 64 x1685 8)) 8))
(assert (x982 x983 x550 x467 x536))
(assert (x1409 x852))
(assert (x982 x1604 x843 x1683 x557))
(assert (x1207 x557 x1683 x843 x1604))
(assert (= x295 (and (not x997) x1219)))
(assert (= (=> (= (= 0 (ite (< 0 x1844) x1844 (ite (not (< x271 x1571)) 1 0))) x699) (and (=> (and x699 (and (or (and (not x1879) (= x478 x1509)) (and x1879 (= x1509 x1571))) (= x1879 (> x478 x1571)))) x1125) (=> (and (not x699) (= x523 x569)) x1825))) x1822))
(assert (x1409 x910))
(assert (x1678 (- x843 x394)))
(assert (x1678 (- x550 x394)))
(assert (x505 x557 (- x1683 x550)))
(assert (= (and x710 x698) x60))
(assert (x1678 (- x467 x394)))
(assert (= (x1694 (+ 2 x1138)) (x1694 x1138)))
(assert (x1409 x12))
(assert (= x154 (and x1243 (not x589))))
(assert (= x296 (or x128 x1076)))
(assert (=> (<= x183 10000) (= (x1694 x183) 0)))
(assert (= 64 (x1294 (x401 64 x144 12))))
(assert (x982 x843 x1604 x1314 x2))
(assert (=> (<= x1061 10000) (= 0 (x1694 x1061))))
(assert (< (x401 64 x1735 17) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x125 (x401 64 x1525 2)) x1525))
(assert (= (x84 (x401 64 x331 x1136)) x1136))
(assert (x1409 x1200))
(assert (x1678 (- x1604 x394)))
(assert (x1678 (- x550 x1070)))
(assert (x20 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1409 x709))
(assert (x505 x843 (- x1604 x2)))
(assert (x1409 x1748))
(assert (x35 x904 1000000000000000000))
(assert (x1409 x1209))
(assert (x20 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1678 (- x550 x843)))
(assert (x1409 x1471))
(assert (x1409 x450))
(assert (x1678 (- x1683 x1604)))
(assert (x982 x1070 x394 x536 x467))
(assert (x1409 x907))
(assert (not (x1418 (x401 64 x937 2))))
(assert (x1409 x1636))
(assert (x1409 x348))
(assert (= (or x1819 x1365) x1185))
(assert (x505 x983 (- x550 x843)))
(assert (= (or x1238 x1747) x64))
(assert (x1409 x438))
(assert (= x1243 (and x1254 (not x1723))))
(assert (= (x125 (x401 64 x459 13)) x459))
(assert (= x1567 (and x1723 x1254)))
(assert (x1207 x394 x1070 x983 x550))
(assert (x505 x1070 (- x394 x983)))
(assert (x982 x550 x983 x1683 x557))
(assert (x982 x1070 x394 x550 x983))
(assert (= (x84 (x401 64 x331 17)) 17))
(assert (x1409 x1317))
(assert (x1409 x1649))
(assert (x1409 x829))
(assert (x1207 x2 x1314 x394 x1070))
(assert (x1678 (- x467 x550)))
(assert (x1409 x926))
(assert (x1678 (- x1314 x467)))
(assert (= x144 (x125 (x401 64 x144 17))))
(assert (= (x401 64 x1297 8) (x1694 (x401 64 x1297 8))))
(assert (x1600 x734))
(assert (x1409 x843))
(assert (= (and x203 (not x308)) x962))
(assert (= (or x1860 x417) x576))
(assert (x1409 x647))
(assert (x1409 x1197))
(assert (x1207 x1070 x394 x843 x1604))
(assert (x1678 (- x536 x2)))
(assert (x1409 x347))
(assert (x505 x1683 (- x557 x550)))
(assert (x1409 x459))
(assert (x1409 x1769))
(assert (x20 x1679))
(assert (= (x401 64 x324 8) (x1694 (x401 64 x324 8))))
(assert (x1409 x202))
(assert (= (and x1627 x64) x806))
(assert (x1409 x1755))
(assert (x1678 (- x843 x2)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x144 12)))
(assert (x1409 x1685))
(assert (= (x1294 (x401 64 x1608 8)) 64))
(assert (= (and x1677 x541) x423))
(assert (= (and (not x1506) x1149) x1556))
(assert (x1409 x1220))
(assert (x1678 (- x843 x1683)))
(assert (x982 x467 x536 x843 x1604))
(assert (x1409 x557))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x54 8)))
(assert (= x228 (or x289 (and x1219 x997))))
(assert (= (and x1759 x1190) x695))
(assert (x1207 x536 x467 x983 x550))
(assert (x1678 (- x536 x394)))
(assert (x1418 340282366920938463463374607431768211455))
(assert (x1409 x1033))
(assert (x982 x467 x536 x983 x550))
(assert (x1207 x1683 x557 x394 x1070))
(assert (x1409 x633))
(assert (x1409 x735))
(assert (x1409 x345))
(assert (= (x125 (x401 64 x144 13)) x144))
(assert (x1678 (- x1683 x467)))
(assert (x574 x1449))
(assert (x20 x1449))
(assert (x1409 x1010))
(assert (x1409 x1870))
(assert (x1409 x1123))
(assert (x1409 x1007))
(assert (x1409 x1167))
(assert (x1409 x1147))
(assert (x505 x536 (- x467 x2)))
(assert (= (x401 64 x144 13) (x1694 (x401 64 x144 13))))
(assert (x1418 1889567281))
(assert (= x390 (x84 (x401 64 x144 x390))))
(assert (x505 x1070 (- x394 x843)))
(assert (= (and x1759 (not x1190)) x626))
(assert (x1409 x1101))
(assert (x1409 x1198))
(assert (x982 x467 x536 x1604 x843))
(assert (= (and x296 (not x699)) x812))
(assert (x505 x2 (- x1314 x557)))
(assert (x1409 x1085))
(assert (= (x1294 (x401 64 x1835 12)) 64))
(assert (= x1850 (=> (and (or (and (= 0 x1105) (not x319)) (and (and (>= x1458 1) (= (x1008 x1635) x1458)) x319)) (and (= (x401 64 x1735 0) x1255) (= x1123 (x220 x1510)) (= x270 (+ x1434 x1780)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x399) (= (x293 (- x1123 x212)) x1167) (= 68 x27) (= (x811 x1636) x1501) (= (x293 (- x717 356)) x27) (>= 127 x927) (>= 20282409603651670423947251286015 x855) (= false x1045) (= x986 x667) (not (> x212 x1123)) (= x6 (x401 64 x937 2)) (not (< x12 x1870)) (>= 20282409603651670423947251286015 x1123) (= (= 0 x431) x319) (= 356 x1502) (= 2835717307 x1282) (= x1870 (x844 x6)) (= (x401 64 x1636 2) x955) (= x371 (x1696 256)) (= x715 356) (>= x1123 1) (= (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x757) x221) (= x819 (x293 (- x227 x212))) (= x1557 false) (= (>= x1548 x1123) x740) (= x180 x1539) (= x1539 (x1098 x1635)) (= x230 false) (= (x1821 20282409603651670423947251286015 x1167) x1434) (= x667 x884) (= x717 (x823 (+ x371 356))) (= x1510 (x401 64 x1735 0)) (= (- x1548 x855) x1780) (= 68 x1758) (not (< x810 x984)) (= x120 (x293 (- x227 x212))) (<= 1 x719) (= false x150) (not (> x986 x810)) x740 (= (x293 (- x810 x986)) x984) (= x855 (x220 x1255)) (= x1093 (x401 64 x1636 2)) (= (x1043 x955) x810) (= x719 (x1008 x1635)) (<= x927 127) (= (x1397 356) x431) (= x529 0) (= x1114 (x401 64 x937 2)) (= x1355 1) (= x1105 (ite x319 1 0)) (= (x1770 288) x1112) (not (> x1870 x12)) (= x1266 x701) (= x757 (x1821 26959946667150639794667015087019630673637144422540572481103610249215 x1112)) (= (x823 (+ x1870 x986)) x12) (= 256 x1637))) x1142)))
(assert (= x617 (and (not x1165) x838)))
(assert (x1409 x657))
(assert (x505 x1604 (- x843 x1070)))
(assert (x1409 x180))
(assert (= x1024 (x125 (x401 64 x1024 2))))
(assert (x982 x1683 x557 x1070 x394))
(assert (x1409 x1424))
(assert (x1409 x892))
(assert (x1409 x1539))
(assert (x1409 x944))
(assert (x1409 x216))
(assert (= (x1694 (x401 64 x1374 2)) (x401 64 x1374 2)))
(assert (=> (<= x1080 10000) (= 0 (x1694 x1080))))
(assert (< 10000 (x401 64 x492 0)))
(assert (= (x401 64 x1835 12) (x1694 (x401 64 x1835 12))))
(assert (= (and x1095 (not x288)) x1828))
(assert (= x593 (and x165 (not x996))))
(assert (x1678 (- x536 x843)))
(assert (x1409 x223))
(assert (x1678 (- x467 x1604)))
(assert (= 64 (x1294 (x401 64 x1797 x629))))
(assert (= (x125 (x401 64 x1543 12)) x1543))
(assert (x1678 (- x2 x1070)))
(assert (x1409 x171))
(assert (x1678 x592))
(assert (not (x1418 (x401 64 x1797 x629))))
(assert (= (x1294 (x401 64 x54 8)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x400 2)))
(assert (x982 x2 x1314 x1604 x843))
(assert (x1409 x749))
(assert (x1678 (- x1070 x550)))
(assert (x1409 x1679))
(assert (x1409 x163))
(assert (x1409 x274))
(assert (= 8 (x84 (x401 64 x647 8))))
(assert (> (x401 64 x718 0) 10000))
(assert (x1678 (- x983 x467)))
(assert (x1409 x1552))
(assert (x1678 (- x1683 x983)))
(assert (x1600 x1249))
(assert (x1409 x1285))
(assert (x1409 x95))
(assert (= (and x408 x87) x1743))
(assert (x1207 x1604 x843 x1683 x557))
(assert (= x1001 (and x1303 (not x1035))))
(assert (> (x401 64 x647 8) 10000))
(assert (x1409 x945))
(assert (x1678 (- x2 x536)))
(assert (x1678 (- x1683 x1314)))
(assert (= (x1294 (x401 64 2 10)) 64))
(assert (x505 x394 (- x1070 x2)))
(assert (x1678 (- x536 x1070)))
(assert (x1207 x550 x983 x843 x1604))
(assert (x1409 x1371))
(assert (= (x1694 105312291668557186697918027683670432318895095400549111254310977535) 0))
(assert (x505 x1604 (- x843 x536)))
(assert (= 64 (x1294 (x401 64 x1636 2))))
(assert (= (and x966 x836) x141))
(assert (x1678 (- x394 x2)))
(assert (= 64 (x1294 (x401 64 x718 0))))
(assert (x982 x1070 x394 x1314 x2))
(assert (x982 x1314 x2 x1683 x557))
(assert (x1409 x610))
(assert (= x289 (and x407 (not x753))))
(assert (=> (<= x1636 10000) (= (x1694 x1636) 0)))
(assert (x1409 x501))
(assert (x505 x550 (- x983 x1314)))
(assert (x1409 x718))
(assert (= (x84 (x401 64 x1735 12)) 12))
(assert (x1409 x1488))
(assert (x1409 x70))
(assert (x1409 x1496))
(assert (x1409 x851))
(assert (x505 x843 (- x1604 x394)))
(assert (x1409 x824))
(assert (=> (>= 10000 x1608) (= (x1694 x1608) 0)))
(assert (= (x125 (x401 64 x1526 8)) x1526))
(assert (x1207 x557 x1683 x983 x550))
(assert (= x587 (x125 (x401 64 x587 2))))
(assert (x505 x536 (- x467 x983)))
(assert (x1795 x904))
(assert (= 0 (x1694 1000000000000000000)))
(assert (x1409 x1728))
(assert (x1678 (- x557 x394)))
(assert (= (x401 64 x718 0) (x1694 (x401 64 x718 0))))
(assert (x3 1000000000000000000 x522))
(assert (= (=> (and (and (and (and x1279 (= x585 false) (= x485 x1120) (>= 127 x846) (= x1279 (= x191 x1518)) (<= x827 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1244 true) (= x747 x21) (= x975 x827) (>= x814 0) (>= 1099511627776 x814) (= (x1043 x147) x1698) (= 0 x640) (= x831 x776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x831) (<= 0 x827) (<= 0 x1654) (= x1247 false) (= x1051 x1074) (= 36 x348) (= x191 x25) (<= 1 x325) (>= 1461501637330902918203684832716283019655932542975 x264) (= x1654 x1067) (= x532 x1518) (= x1740 (= x788 x1636)) (>= 1461501637330902918203684832716283019655932542975 x191) (= x325 (x1008 x1635)) (= false x1441) (<= x1654 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1018 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1074) (= x923 x814) (= x1527 x1656) (>= x1074 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1177) (= 0 x706) (<= 0 x831) (= x1339 false) (= x1817 0) (<= 0 x264) (= (<= x814 x934) x1276) (= (x401 64 x747 2) x147) (= true x654) (= x1044 true) (not x1740) (>= x1120 0) (= x532 x808) (= x747 x1424) (<= x1120 1461501637330902918203684832716283019655932542975) (= x1656 x788) (<= 0 x1177) (= x1191 x264) (= x1498 false) (= x1698 x1553) (>= x191 1) (= x1177 x1005) (= x1728 1889567281) x1276 (= x1019 x1656) (<= x846 127) (= x1656 x808) (= x520 false)) (and (and (= x238 x1656) x152 (= x894 false) (<= x410 127) (>= 20282409603651670423947251286015 x171) (= false x444) (= x152 (>= x1548 x171)) (>= x1785 1) (= x104 x1479) (= x1689 false) (= x1452 false) (= x578 false) (= 36 x216) (= x1329 false) (= x1785 (x1008 x1636)) (= 1889567281 x1581) (>= 127 x410) (= x1479 x1527) (= (x220 x82) x171) (= (x401 64 x1479 0) x82)) (and (and (= (x1196 x1412) x1416) (= x183 x238) (= false x548) (<= x1285 127) (<= x1285 127) (= false x192) (= x1360 x1416) (= false x1304) (= false x597) (= false x818) (= x183 x388) (<= x1416 20282409603651670423947251286015) (>= x633 1) (= (x1008 x1636) x633) (= x1412 (x401 64 x183 13)) (= x1026 false) (= x151 2432040568)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= x814 x712) (and (and (<= 1 x95) (>= 1461501637330902918203684832716283019655932542975 x1826) (>= 127 x746) (= 288162684 x995) (= (x1512 x346) x1538) (>= 127 x746) (>= x1826 1) (= x937 x701) (= x1826 x1589) (>= 1099511627775 x630) (<= x1046 105312291668557186697918027683670432318895095400549111254310977535) (= x630 (x416 x720)) (= (x401 64 x1735 13) x720) (= x1735 x1520) (= x95 (x1008 x1636)) (= x1488 x607) (= 2 x248) (= x533 false) (= (x401 64 2 10) x1749) (= x1826 (x40 x1749)) (= (x1196 x720) x1046) (= x347 x670) (= x1488 (x1693 x1636)) (= (> x105 0) x59) (= false x598) (= x346 x191)) (or x59 (and (not x59) (and (<= x1651 1099511627776) (not (> x688 x712)) (<= x688 1099511627776) (not (> x688 x249)) (or (>= x1021 115792089237316195423570985008687907853269984665640564039457584006813618012161) (<= x1021 1099511627776)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x41 x630))) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x630 x41))) (not (< x712 x1651)) (= (x823 (+ x630 x41)) x1651) (or (>= 1099511627776 x41) (<= 115792089237316195423570985008687907853269984665640564039457584006813618012161 x41)) (= (x293 (- x712 x1021)) x688) (= (x823 (+ x41 x630)) x1021)))))) (= x191 x1589)) (and (= x379 x670) (= false x1257))) (= x937 x860)) (= x1735 x1607)) (and (= false x369) (= x1337 x463) (= x1347 x77) (= x1523 true) (= false x686) (>= 1099511627776 x77) (= (x401 64 x1526 8) x559) (= x379 x987) (= 100 x661) (>= x1337 1) (<= x292 127) (<= x292 127) (<= 1 x987) (= x1439 false) (= x1029 2699409439) (= x77 (x1350 x559)) (not x112) (= x1660 x1205) (= true x575) (= x272 false) (= x90 (x1008 x1636)) (= (>= x923 x77) x301) (= true x1789) (= x1337 x1607) (<= x987 20282409603651670423947251286015) (<= 1 x90) x301 (<= 0 x1467) (= x1526 x1722) (= x1270 false) (= 1099511627776 x562) (= x1526 x1636) (= x201 false) (>= 1461501637330902918203684832716283019655932542975 x1337) (<= x1467 1461501637330902918203684832716283019655932542975) (= x112 (= x463 x1660)) (= x860 x1467))) (and (= false x181) (= x1286 false) (<= x1197 127) (= x1122 16000000000000000000000000) (= x1118 (x1043 x413)) (= x826 x648) (<= x1118 16000000000000000000000000) (>= 127 x1197) (= x1792 false) (= x1811 (x1008 x1635)) (= x1647 36) (= 1889567281 x711) (>= x1811 1) (= x1217 false) (= false x1688) (= x1631 true) (= x413 (x401 64 x648 2)) (= x1682 false) (= x648 x1636))) (and (>= 16000000000000000000000000 x1614) (= (x1043 x721) x1614) (= x71 false) (= false x372) (= x1252 false) (= (x401 64 x1061 2) x721) (<= x941 127) (= x773 36) (>= 127 x941) (= 1889567281 x864) (= x584 x1061) (= (x1008 x1635) x1807) (= false x119) (= false x1809) (= 16000000000000000000000000 x231) (= x269 x1061) (<= 1 x1807) (= x549 true) (= x1438 false))) (and (= 16000000000000000000000000 x494) (>= x892 1) (= 43549148 x1480) (= x1543 x1214) (<= x177 127) (= x1056 false) (= x98 (x401 64 x1543 12)) (= false x1107) (<= x1301 16000000000000000000000000) (= x1656 x269) (= x1072 36) (= x514 false) (= false x197) (= x43 true) (>= 127 x177) (= x677 false) (= x1301 (x1612 x98)) (= x892 (x1008 x1636)) (= x530 false) (= x538 x1543))) (and (= x1656 x1214) (<= x891 10000000000) (>= 127 x1406) (<= 1 x909) (= 458445791 x130) (= (x401 64 x647 8) x1171) (= (x650 x1171) x891) (= x647 x1636) (= false x34) (= x267 false) (= 10000000000 x364) (= x335 false) (= x820 36) (= x909 (x1008 x1636)) (= x905 false) (= false x1206) (= true x543) (= x647 x528) (= false x579) (>= 127 x1406))) (and (= x703 (x401 64 x707 8)) (= x481 false) (= x1127 36) (>= 127 x1223) (= false x1203) (>= 10000000000 x1597) (= false x1155) (= x1731 (+ 1 x703)) (= x1597 (x920 x1731)) (= x69 2727740892) (<= 1 x310) (= x611 x707) (= 10000000000 x140) (= true x1473) (= x707 x1636) (= x310 (x1008 x1636)) (= x573 false) (= false x466) (<= x1223 127) (= false x762))) (and (= x644 false) (= x1877 false) (= x1200 (x920 x1745)) (= x1636 x1685) (= x242 false) (>= 127 x752) (= (+ 1 x174) x1745) (<= x752 127) (= x174 (x401 64 x1685 8)) (= x1869 false) (= x1472 (x1008 x1636)) (= x651 (<= x724 x1200)) (= 36 x1619) (= x669 false) x651 (= x1810 2727740892) (= x214 false) (= x1685 x668) (>= x1472 1))) (and (>= 127 x785) (= x1692 false) (= x724 (x1308 x1617)) (= x1468 (x1008 x1636)) (= false x881) (<= 1 x1468) (<= x785 127) (= x1774 1817583341) (= x1605 false) (= x354 36) (= x74 x1443) (= x339 x1443) (= (x401 64 x1443 x620) x1617) (= false x764) (= x620 (+ x857 2)) (= false x1271) (= x857 (x401 64 x1297 8)) (= x199 false) (= x402 x1297))) (= x1636 x1297)) (and (= x167 false) (>= 127 x1173) (>= 127 x1173) x1613 (= (x401 64 x1374 2) x895) (= x1656 x339) (= x1299 false) (= x1028 false) (= x1374 x52) (= 1889567281 x896) (= x1137 68) (= x1374 x1636) (= false x462) (= x1465 (x1008 x1635)) (= (>= x240 x422) x1613) (= x157 false) (= x240 (x1043 x895)) (<= 1 x1465) (= x489 false))) (and (= false x415) (= x209 false) (= x1147 x227) (= x1147 x370) (= false x1383) (<= x1273 127) (= x304 false) (>= 127 x1273) (= x1147 x94) (= x904 (* x1147 1000000000000000000)) (= false x786) (= x370 (x1713 x904 1000000000000000000)) (>= x756 1) (= 36 x1101) (= x1041 1289409798) (= (x1713 x904 x1094) x422) (= x1132 false) (= (x1008 x1636) x756))) (and (= x1878 false) (= x524 false) (= false x50) (= (= x1548 x227) x1849) x1847 (= false x458) (= x149 (x1008 x1636)) (= 404098525 x902) (= x1192 (x1008 x1636)) (<= x1263 127) (>= x1192 1) (= x767 false) (= x1222 false) (= false x958) (= false x1078) (= x1875 false) (= x1014 4) (= 36 x663) (= 404098525 x1295) (= x195 (x1008 x1636)) (>= 127 x1332) (= x1847 (>= x171 x1416)) (= 20282409603651670423947251286015 x1016) (<= x744 127) (= true x1143) (= true x1655) (= x1011 false) (= x395 false) x1849 (= x1575 false) (>= x149 1) (= x1144 false) (>= 127 x1263) (>= x195 1) (= x734 4) (= false x499) (<= x1332 127) (= x1020 false) (= x1411 false) (= 4 x1249) (= 404098525 x1146) (= x327 false) (<= x744 127) (= false x1264)))))) (and (= x1024 x1272) (= x1186 36) (= x21 x1205) (= x196 x1024) (= x519 false) (= x1854 x1460) (= (x1008 x1635) x1564) (= x1309 (x964 x856)) (= x1460 x1548) (= x1309 x1262) (= x1414 false) (= x856 (x401 64 x1024 2)) (= x429 false) (<= x1088 127) (= false x674) (<= 1 x1564) (= x1116 false) (>= 127 x1088) (= 1889567281 x779) (= false x656))) (and (= 36 x1666) (= x1205 x196) (= false x527) (= x1145 false) (= false x555) (= true x943))) x1296) x1804))
(assert (= x417 (or x141 x1363)))
(assert (= (x125 (x401 64 x144 0)) x144))
(assert (= x1321 (and x722 x1039)))
(assert (x1409 x763))
(assert (not (x1418 (x401 64 x1526 8))))
(assert (= x474 (or x1432 x51)))
(assert (x1409 x1313))
(assert (x1409 x1054))
(assert (x1409 x1640))
(assert (x1409 x745))
(assert (x1086 x1700 x227))
(assert (< (x401 64 x144 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1600 x354))
(assert (= x1254 (or x796 x185)))
(assert (x1409 x1516))
(assert (x1409 x1744))
(assert (= 64 (x1294 (x401 64 x647 8))))
(assert (< (x401 64 x648 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1409 x470))
(assert (> (x401 64 2 10) 10000))
(assert (x1207 x2 x1314 x983 x550))
(assert (x1207 x1683 x557 x843 x1604))
(assert (= (=> (= x1638 x750) x1753) x641))
(assert (x1409 x880))
(assert (x1409 x1104))
(assert (x1409 x1589))
(assert (= x1484 (and (not x1719) x911)))
(assert (= (x1294 (x401 64 x1526 8)) 64))
(assert (x1409 x1428))
(assert (x1409 x1711))
(assert (x1409 x983))
(assert (x276 x1112 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1409 x1686))
(assert (x1409 x57))
(assert (= (x1694 1099511627775) 0))
(assert (= x38 (and x755 x1565)))
(assert (x1409 x94))
(assert (> (x401 64 x461 2) 10000))
(assert (= (x1294 (x401 64 x501 0)) 64))
(assert (= x165 true))
(assert (x1600 x661))
(assert (x505 x536 (- x467 x843)))
(assert (= x1837 (=> (= x1168 (= 0 x919)) (and (=> (not x1168) x609) (=> (and x1168 (and (= x1643 x42) (= x1274 false) (= false x1643))) x1189)))))
(assert (= (x1694 (x401 64 x492 0)) (x401 64 x492 0)))
(assert (x1600 x1117))
(assert (x1409 x1100))
(assert (x1678 (- x1314 x983)))
(assert (x35 x1388 1000000000000000000))
(assert (= (and x397 x319) x380))
(assert (x505 x550 (- x983 x536)))
(assert (and (= (x1352 3 3) 9) (= 81 (x1352 9 9)) (= 81 (x1352 27 3)) (= (x1352 9 3) 27)))
(assert (> (x401 64 x1443 x620) 10000))
(assert (x1409 x760))
(assert (x1409 x1014))
(assert (x1418 2432040568))
(assert (x1409 x649))
(assert (x1207 x394 x1070 x467 x536))
(assert (x1678 x843))
(assert (x1409 x1508))
(assert (= (x1294 (x401 64 x1479 0)) 64))
(assert (= (x1694 (x401 64 x587 2)) (x401 64 x587 2)))
(assert (x1409 x1712))
(assert (x1678 (- x1604 x467)))
(assert (not (x1418 (x401 64 x1525 2))))
(assert (x1409 x563))
(assert (x1409 x325))
(assert (= (x401 64 x647 8) (x1694 (x401 64 x647 8))))
(assert (= (x1694 (x401 64 x871 2)) (x401 64 x871 2)))
(assert (x1409 x503))
(assert (x1678 (- x983 x843)))
(assert (= 64 (x1294 (x401 64 x1543 12))))
(assert (x1678 (- x550 x1314)))
(assert (x1678 (- x983 x1070)))
(assert (x1409 x452))
(assert (x1409 x1288))
(assert (= (x1694 (x401 64 x1543 12)) (x401 64 x1543 12)))
(assert (x1678 (- x394 x843)))
(assert (x1409 x732))
(assert (x505 x394 (- x1070 x843)))
(assert (x1409 x419))
(assert (x1600 x1573))
(assert (x1409 x919))
(assert (x1409 x787))
(assert (x505 x1314 (- x2 x557)))
(assert (x505 x467 (- x536 x843)))
(assert (x1409 x676))
(assert (x1418 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x1694 (x401 64 x1735 13)) (x401 64 x1735 13)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1479 0)))
(assert (x982 x1683 x557 x983 x550))
(assert (< (x401 64 x183 13) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1207 x1314 x2 x983 x550))
(assert (= (and (not x229) x1716) x425))
(assert (x276 x1167 20282409603651670423947251286016))
(assert (x1409 x1695))
(assert (= x400 (x125 (x401 64 x400 2))))
(assert (= (and x87 (not x408)) x252))
(assert (x1795 x1388))
(assert (x1409 x1161))
(assert (= (and (not x1793) x626) x4))
(assert (x1409 x460))
(assert (not (x1418 (x401 64 x647 8))))
(assert (= x1636 (x125 (x401 64 x1636 2))))
(assert (x1409 x333))
(assert (= x183 (x125 (x401 64 x183 13))))
(assert (= (x1294 (x401 64 x1735 12)) 64))
(assert (x982 x1070 x394 x467 x536))
(assert (x1409 x1266))
(assert (x1409 x1306))
(assert (= 64 (x1294 (x401 64 x1735 0))))
(assert (= (=> (and (= x880 x1803) (= 0 x58)) x1042) x645))
(assert (=> (>= 10000 x1024) (= (x1694 x1024) 0)))
(assert (not x1730))
(assert (x1678 (- x1070 x843)))
(assert (x1409 x1826))
(assert (= 0 (x1694 105312291668557186697918027683670432318895095400549111254310977534)))
(assert (= (or x1796 x1800) x1373))
(assert (x1409 x1597))
(assert (= 8 (x84 (x401 64 x1526 8))))
(assert (x1409 x888))
(assert (= (=> (and (<= x72 1099511627775) (= (= 0 x72) x1545) (= (x416 x243) x72) (= (x1196 x243) x925) (>= 105312291668557186697918027683670432318895095400549111254310977535 x925) (= (x401 64 x331 13) x243)) (and (=> x1545 x1840) (=> (and (not x1545) (and (or (and (and (= (x293 (- x925 x1085)) x378) (>= x925 1) (= (x401 64 x331 13) x1451) (not (> x378 x925)) (<= x925 105312291668557186697918027683670432318895095400549111254310977535) (>= 105312291668557186697918027683670432318895095400549111254310977534 x378)) x873) (and (not x873) (= x1293 (x401 64 x331 13)))) (= x873 (< x1085 x925)))) x235))) x638))
(assert (x1409 x540))
(assert (x1409 x554))
(assert (x505 x843 (- x1604 x1683)))
(assert (= (and (not x42) x1514) x1176))
(assert (x982 x983 x550 x1070 x394))
(assert (x1409 x475))
(assert (=> (<= x747 10000) (= (x1694 x747) 0)))
(assert (x1409 x1332))
(assert (= (and x498 (not x1623)) x1764))
(assert (> (x401 64 x1080 2) 10000))
(assert (x1409 x502))
(assert (> (x401 64 x1797 x629) 10000))
(assert (= (x1694 x1138) (x1694 (+ 1 x1138))))
(assert (x1600 x1306))
(assert (x1409 x1465))
(assert (x1795 x92))
(assert (= (x1694 (x401 64 x1525 2)) (x401 64 x1525 2)))
(assert (x20 x57))
(assert (x1409 x1844))
(assert (x1409 x785))
(assert (not (x1418 (x401 64 x331 x1136))))
(assert (= (or x1048 x537) x893))
(assert (x1678 (- x843 x1070)))
(assert (x1409 x729))
(assert (= x1097 (and (not x1668) x432)))
(assert (x1678 (- x1683 x550)))
(assert (< (x401 64 x1525 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1409 x592))
(assert (x505 x557 (- x1683 x1314)))
(assert (x982 x557 x1683 x843 x1604))
(assert (x1409 x528))
(assert (x982 x394 x1070 x467 x536))
(assert (=> (<= x1761 10000) (= (x1694 x1761) 0)))
(assert (x1678 x1070))
(assert (= x1797 (x125 (x401 64 x1797 x629))))
(assert (=> (<= x1735 10000) (= (x1694 x1735) 0)))
(assert (x1678 (- x1683 x843)))
(assert (= 2 (x84 (x401 64 x1636 2))))
(assert (x1409 x1588))
(assert (= x1476 (or x916 x885)))
(assert (< 10000 (x401 64 x1374 2)))
(assert (x1409 x1610))
(assert (x1207 x550 x983 x394 x1070))
(assert (= (x401 64 x331 x1136) (x1694 (x401 64 x331 x1136))))
(assert (= (or x179 x1239) x87))
(assert (x505 x394 (- x1070 x467)))
(assert (x1409 x1724))
(assert (x1409 x820))
(assert (< (x401 64 x1297 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1678 (- x467 x1683)))
(assert (= x828 (and x566 x228)))
(assert (x505 x467 (- x536 x1070)))
(assert (x1409 x523))
(assert (x1678 (- x843 x550)))
(assert (x1409 x1576))
(assert (x1409 x971))
(assert (x1207 x1070 x394 x1683 x557))
(assert (x1409 x132))
(assert (x982 x1604 x843 x1070 x394))
(assert (= (x84 (x401 64 x1374 2)) 2))
(assert (x1409 x1192))
(assert (x1409 x1633))
(assert (not (x1418 (x401 64 x871 2))))
(assert (x1409 x1502))
(assert (= (x1694 (+ 2 x840)) (x1694 x840)))
(assert (= (x1694 (x401 64 x461 2)) (x401 64 x461 2)))
(assert (= x1829 (and (not x1281) x295)))
(assert (= (x125 (x401 64 x1608 8)) x1608))
(assert (x1409 x183))
(assert (x982 x1314 x2 x557 x1683))
(assert (=> (>= 10000 x492) (= 0 (x1694 x492))))
(assert (= 64 (x1294 (x401 64 x1685 8))))
(assert (= (and x698 (not x710)) x1087))
(assert (= (=> (and (and (and (= x1047 false) (= 1889567281 x1160) (>= 20282409603651670423947251286015 x1159) (<= x1663 20282409603651670423947251286015) (>= x1681 1) x1462 (>= 127 x769) (= false x837) (= false x356) (= (<= x1663 x1159) x1462) (>= 127 x769) (= false x1587) (= x1663 (x220 x1156)) (>= x1159 1) (= x1376 36) (= x31 false) (= x492 x1839) (= x1622 x492) (= false x61) (= (x1008 x1636) x1681) (= x1156 (x401 64 x492 0)) (= x1845 x565)) (and (and (= false x255) (= x459 x565) (= x1670 false) (= x1437 false) (= (x401 64 x459 13) x497) (>= 127 x1546) (= (x1008 x1636) x1389) (>= 20282409603651670423947251286015 x1201) (= x1658 false) (>= 127 x1546) (= x1006 x459) (= false x1561) (= (x1196 x497) x1201) (= x1377 2432040568) (<= 1 x1389) (= x835 x1201) (= false x1680)) (and (and (<= 1 x544) (<= 1 x1075) (= false x604) (>= 127 x1425) (= x867 (= x1159 x227)) (<= x1335 127) (= x156 false) (= x1369 false) (= false x1180) (= x208 404098525) (= x263 false) (= x455 false) (= false x716) (<= x765 127) (= false x1818) (= false x1771) (= x1306 4) (= true x1630) (= x1393 false) (= x1395 false) (= x1258 404098525) x867 x1812 (<= 1 x14) (= 404098525 x1669) (= false x328) (= false x1403) (= false x1260) (= x965 true) (= false x1580) (= x1812 (>= x1663 x1201)) (= x544 (x1008 x1636)) (= 4 x936) (= x933 false) (= (x1008 x1636) x1075) (<= x1335 127) (= (x1008 x1636) x14) (= false x44) (= 20282409603651670423947251286015 x1470) (<= x227 20282409603651670423947251286015) (= x503 36) (= x1030 4) (<= x1425 127) (>= 127 x765) (= x1224 false) (>= x227 1)) (and (and (and (= x1608 x1636) (and (and (and (and (= false x1228) (= x619 false) (<= 1 x303) (= 2727740892 x1235) (= 36 x795) (= x1882 (x401 64 x324 8)) (<= x502 10000000000) (<= x1755 127) (= false x210) (= (x920 x1419) x502) (= x324 x1636) (= (x1008 x1636) x303) (= x1419 (+ 1 x1882)) (= false x1595) (= x434 10000000000) (= x324 x261) (= x953 true) (<= x1755 127) (= false x1528) (= x473 false)) (and (and (= x1636 x218) (= false x608) (<= x1611 127) (= x26 false) (>= x187 1) (= x1845 x1210) (<= x1104 10000000000) (= 36 x1769) (= true x680) (= x218 x1632) (= (x401 64 x218 8) x1096) (= 10000000000 x332) (= x723 false) (= x1104 (x650 x1096)) (>= 127 x1611) (= (x1008 x1636) x187) (= x614 false) (= x359 false) (= false x1134) (= 458445791 x133)) (and (and (= 36 x1573) (= x472 false) (>= 127 x200) (= x1154 16000000000000000000000000) (= x1845 x1404) (= false x901) (= (x401 64 x1835 12) x1733) (= x1423 43549148) (<= x200 127) (= (x1612 x1733) x1327) (<= x1327 16000000000000000000000000) (= x1824 false) (= false x103) (= x1371 (x1008 x1636)) (<= 1 x1371) (= x1516 x1835) (= x250 false) (= x273 false) (= x1210 x1835) (= true x700)) (and (and (and (= x126 1889567281) (= (x401 64 x1310 2) x733) (= 36 x1708) (= false x1062) (= x312 false) (>= 127 x1261) (= false x1705) (>= 127 x1261) (= true x1245) (= x1704 false) (= (x1043 x733) x1712) (= x685 false) (= x1636 x1310) (= (x1008 x1635) x1540) (= false x1170) (= x1310 x33) (= 16000000000000000000000000 x1401) (>= x1540 1) (<= x1712 16000000000000000000000000)) (and (and (and (and (= x377 x501) (= (x1008 x1636) x117) (>= 20282409603651670423947251286015 x770) (= x392 x1205) (= x731 false) (= false x1482) (>= 255 x105) (>= x117 1) (= false x1767) (= (x401 64 x501 0) x1099) (= 1889567281 x594) x338 (= x770 (x220 x1099)) (<= 0 x508) (>= 20282409603651670423947251286015 x508) (<= x1757 127) (= (>= x1159 x770) x338) (= x1159 x1485) (= false x1574) (= x1802 x501) (= false x1798) (= x508 (+ x709 x770)) (= x1159 x1854) (= x1027 (<= x508 x1159)) (= x754 36) (<= x1757 127) (= x1307 false) x1027) (and (and (= 100 x1117) (>= 127 x1883) (= x816 false) (= x950 x24) (= x1065 false) (= false x1699) (= x950 (x1043 x1119)) (= (x1008 x1635) x488) (= x28 x1491) (= x1316 x1080) (= x1370 x1205) (<= 1 x488) (= x1119 (x401 64 x1080 2)) (= x1205 x708) (= false x1187) (= 1889567281 x815) (= x392 x1080) (= x55 false) (>= 127 x1883) (= false x391)) (and (and (and (and (= x526 false) (= x1491 x590)) (and (and (= x934 x1626) (and (or x996 (and (not x996) (and (or (>= 1099511627776 x41) (>= x41 115792089237316195423570985008687907853269984665640564039457584006813618012161)) (= x435 (x823 (+ x41 x560))) (not (> x435 x1626)) (>= 1099511627776 x869) (not (< x249 x869)) (<= x435 1099511627776) (not (> x560 x435)) (or (<= 115792089237316195423570985008687907853269984665640564039457584006813618012161 x1153) (<= x1153 1099511627776)) (not (< x1153 x560)) (not (< x1626 x869)) (= (x823 (+ x41 x560)) x1153) (= (x293 (- x1626 x1153)) x869)))) (and (= x331 x1288) (>= 127 x863) (= 2 x1152) (<= x863 127) (<= x560 1099511627775) (= (x401 64 2 10) x19) (= x259 x1492) (= 288162684 x1496) (>= 105312291668557186697918027683670432318895095400549111254310977535 x1777) (= x321 x590) (= false x257) (>= x898 1) (= x280 x1525) (= x996 (> x105 0)) (= x65 (x1512 x1761)) (= x186 (x254 x1636)) (= (x1008 x1636) x898) (= x1444 false) (= x166 (x401 64 x331 13)) (= x560 (x416 x166)) (= x1761 x1183) (= x186 x1236) (= (x1196 x166) x1777) (>= 1461501637330902918203684832716283019655932542975 x259) (= x259 (x40 x19))))) (= x1183 x1492))) (= x708 x1525)) (= x1370 x331)))) (and (= x599 false) (= x635 (x401 64 x718 0)) (= (>= x1159 x709) x1204) (= x709 (x220 x635)) (= x1532 36) (= 1889567281 x168) (<= 1 x1504) (= x1455 false) (= x718 x960) x1204 (= x1504 (x1008 x1636)) (>= 127 x1459) (= x1577 false) (= x1802 x532) (<= x1459 127) (= x949 false) (= x718 x111) (= false x777) (= false x246) (>= 20282409603651670423947251286015 x709))) (and (>= 127 x343) (= x22 false) (= x1283 x1846) (= (x1008 x1636) x517) (= false x1890) (= x1283 (x1350 x1511)) (= x476 2699409439) (= x111 x1205) x1000 (= true x1784) (= false x471) (>= 127 x343) (= x315 false) (= x1000 (>= x1382 x1283)) (= x1746 36) (= x1511 (x401 64 x1319 8)) (= true x1461) (= x954 false) (= x1417 x1319) (= x1636 x1319) (>= 1099511627776 x1283) (= x817 1099511627776) (= x1218 false) (<= 1 x517)))) (and (>= x1566 1) (= 16000000000000000000000000 x1843) (>= 16000000000000000000000000 x1469) (= x1448 false) (= (x1043 x1599) x1469) (= true x1866) (= x1106 false) (= x145 36) (= false x436) (= x766 1889567281) (= false x412) (<= x83 127) (<= x83 127) (= x1537 x400) (= false x897) (= (x401 64 x400 2) x1599) (= x1404 x400) (= (x1008 x1635) x1566) (= false x967)))))) (and (= x787 x54) (= false x878) (= (+ 1 x393) x206) (= 36 x877) (= x1302 (<= x113 x100)) (= x1216 false) (= x393 (x401 64 x54 8)) (= x274 (x1008 x1636)) (= false x1126) (= (x920 x206) x100) x1302 (= false x861) (= x625 false) (<= x1799 127) (>= x274 1) (= false x1601) (= 2727740892 x1182) (= x54 x1636) (>= 127 x1799))) (and (= x10 false) (= 1817583341 x76) (= x730 36) (= (x401 64 x1608 8) x840) (= x1131 false) (= x1618 (x401 64 x1797 x629)) (<= x853 127) (= (+ x840 2) x629) (= x113 (x1308 x1618)) (= x123 false) (= false x1240) (= x542 x1797) (= x1709 x1797) (= x1608 x1161) (= x1808 false) (= x1590 (x1008 x1636)) (>= 127 x853) (= false x998) (>= x1590 1)))) (and (= 68 x1361) (= (x401 64 x871 2) x627) (= x1246 false) (= x1709 x1845) (= x805 false) (= x1563 false) (= x1661 (x1008 x1635)) (>= 127 x322) (<= 1 x1661) (= (x1043 x627) x789) (= x618 false) (<= x322 127) (= x1636 x871) x468 (= x794 false) (= false x1342) (= x468 (>= x789 x1686)) (= x871 x1313) (= 1889567281 x1606))) (and (= false x876) (= false x1284) (<= x1718 127) (>= x900 1) (= false x406) (= false x1544) (= 36 x1390) (= x792 false) (<= x1718 127) (= (x1008 x1636) x900) (= x227 x1354) (= x376 false) (<= 1 x1094) (<= x1094 105312291668557186697918027683670432318895095400549111254310977535) (= 1289409798 x634) (= x1686 (x1713 x298 x1094)) (= x1354 x143) (= (* 1000000000000000000 x1354) x298)))))) (and (<= x28 20282409603651670423947251286015) (= x552 x1845) x405 (>= x1636 1) (= x1205 x552) (= x504 x1233) (not (= x504 x340)) (= x365 x1183) (<= x340 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1007) (= (= x340 x1113) x702) (<= x1205 1461501637330902918203684832716283019655932542975) (= x1269 true) (not (= x504 x1636)) (= x1399 (> (x1008 x1635) 0)) (<= 0 x1351) (= x361 true) (>= x28 1) (<= 0 x1199) (= x456 (< 0 (x1008 x504))) (= (= x504 x1349) x1229) (<= x1128 1461501637330902918203684832716283019655932542975) (= x1382 x934) (>= x532 1) (= x1133 x859) (>= 1461501637330902918203684832716283019655932542975 x1183) x456 (<= x658 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x189 0) x687 (>= x1128 0) (= x1636 x858) (>= 1461501637330902918203684832716283019655932542975 x1133) (not x1181) (= x1199 x1124) (= true x1164) (= x340 x870) (= (< 0 (x1008 x1636)) x687) (= x1205 x1349) (>= 1461501637330902918203684832716283019655932542975 x504) (= x1876 false) (<= 1 x1205) (= x658 x1715) (= x1478 x189) (<= x934 1099511627776) (= 0 x1830) (= (> (x1008 x340) 0) x405) (not x702) (= x1113 x1205) (= x1009 true) (= x1622 x1845) (<= 0 x1183) (>= 1461501637330902918203684832716283019655932542975 x1635) (= x479 (= x318 x1636)) (not (= x1635 x504)) (= (= x1636 x464) x297) (>= x658 0) (>= x504 1) (<= x118 1461501637330902918203684832716283019655932542975) (= x1351 x1071) (= x1445 (= x211 x1636)) (not (= x340 x1636)) (<= x1636 1461501637330902918203684832716283019655932542975) (= x1440 true) (= x743 x1205) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1351) (<= x1357 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1133) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x189) (>= x1357 0) (not (= x1635 x340)) (= 36 x232) (= x464 x1205) (not x1229) (not (= x1636 x1635)) (= x1697 true) (= x1128 x385) (= x1845 x318) (= x1357 x1857) (>= x1635 1) (= true x1790) (= x957 true) (not x1445) (>= x340 1) (<= x1199 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x532 x211) (= 0 x1431) (not x479) (<= 0 x934) (<= x532 1461501637330902918203684832716283019655932542975) (= x1181 (= x743 x1676)) (= x1676 x532) (= x1068 0) (= x1343 x1636) x1399 (not x297) (= x847 x1845))) x37) x1730))
(assert (> (x401 64 x1526 8) 10000))
(assert (= (x84 (x401 64 x1061 2)) 2))
(assert (x1418 1817583341))
(assert (x1207 x1070 x394 x2 x1314))
(assert (x1409 x1813))
(assert (= (and x4 (not x1221)) x1477))
(assert (x1409 x538))
(assert (x1418 16000000000000000000000000))
(assert (x1678 x1489))
(assert (x1409 x981))
(assert (x1678 x467))
(assert (= (x1694 (x401 64 x1685 8)) (x401 64 x1685 8)))
(assert (= (or x1782 x109) x515))
(assert (x1409 x1417))
(assert (x1409 x1088))
(assert (x505 x1070 (- x394 x1683)))
(assert (= (=> (and (= (x1707 x341) x540) (= x566 (= 0 x475)) x433 (<= 0 x270) (= x341 (x401 64 x144 0)) (= x433 (>= x270 x540)) (>= 20282409603651670423947251286015 x540) (= (ite (< 0 x105) x540 x1813) x475) (<= x270 40564819207303340847894502572030)) (and (=> x566 x609) (=> (and (not x566) (and (= (ite (< x475 x1226) x475 x1226) x592) (= (<= x236 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1841) (= x1111 (< (* x592 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (* x592 1000000000000000000) x236) (= (and x1841 x1111) x229))) (and (=> (and x229 (and (= x202 (x1003 x1667)) (<= x236 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x1707 x697) x1683) (>= 340282366920938463463374607431768211455 x271) (= x271 (x1298 x1138)) (>= x236 0) (= x484 (x1713 x236 x1094)) (>= 20282409603651670423947251286015 x592) (= x1667 (x401 64 x144 x390)) (= (x401 64 x144 0) x697) x1787 (= (> x285 0) x437) (<= x1683 20282409603651670423947251286015) (= x799 0) (= x285 (x293 (- x478 x271))) (= x1787 (>= x270 x1683)) (= (+ 2 x1138) x390) (= x1037 (+ 1 x1138)) (= x1639 1) (= x1277 (x401 64 x144 17)) (= x523 (x1559 x1037)) (= x1138 (x401 64 x1636 8)))) (and (=> (and (not x437) (= x523 x129)) x1442) (=> (and x437 (and (or (and (= x1844 x1487) x302) (and (not x302) (= (ite (= x271 x478) 1 0) x1844))) (and (= x1487 (ite (= x394 0) (ite (= x394 0) 1 0) (ite (= 0 x120) 1 0))) (= (x650 x1138) x394) (= x302 (< 0 x1487)) (<= x394 340282366920938463463374607431768211455)))) x1822))) (=> (not x229) x609))))) x908))
(assert (x1409 x1758))
(assert (x505 x557 (- x1683 x394)))
(assert (= (or x1237 x1318) x1514))
(assert (x505 x1314 (- x2 x536)))
(assert (x1409 x1752))
(assert (x505 x394 (- x1070 x983)))
(assert (x505 x983 (- x550 x1604)))
(assert (x1409 x389))
(assert (x1409 x594))
(assert (= (and x281 x1815) x1782))
(assert (> (x401 64 x1608 8) 10000))
(assert (x1409 x1490))
(assert (x1409 x155))
(assert (= x1048 (and x1750 x865)))
(assert (x505 x2 (- x1314 x467)))
(assert (= 8 (x84 (x401 64 x707 8))))
(assert (x1678 (- x467 x1314)))
(assert (not (x1418 (x401 64 x461 2))))
(assert (x1409 x775))
(assert (x1409 x1036))
(assert (x1409 x849))
(assert (x1409 x349))
(assert (x1409 x1472))
(assert (x1207 x557 x1683 x2 x1314))
(assert (not (x1418 (x401 64 x1636 8))))
(assert (x1409 x1497))
(assert (= (x1294 (x401 64 x1525 2)) 64))
(assert (x1678 (- x536 x1314)))
(assert (x982 x1314 x2 x550 x983))
(assert (= 64 (x1294 (x401 64 x707 8))))
(assert (not (x1418 (x401 64 x747 2))))
(assert (x505 x467 (- x536 x550)))
(assert (x1409 x1583))
(assert (x1678 (- x983 x536)))
(assert (x1678 (- x843 x467)))
(assert (x1409 x1355))
(assert (x505 x467 (- x536 x1683)))
(assert (x1678 (- x467 x843)))
(assert (x505 x2 (- x1314 x1683)))
(assert (< 10000 (x401 64 x183 13)))
(assert (= (x1694 x1353) (x1694 (+ x1353 2))))
(assert (x1678 x1314))
(assert (x1207 x843 x1604 x1683 x557))
(assert (= (x84 (x401 64 x747 2)) 2))
(assert (= x768 (and x561 x1157)))
(assert (x1409 x1590))
(assert (x505 x1604 (- x843 x1683)))
(assert (= (and (not x1545) x1881) x1435))
(assert (= x911 (or x1384 x500)))
(assert (x982 x550 x983 x1604 x843))
(assert (x1372 x1449))
(assert (= (and (not x1889) x306) x101))
(assert (x1409 x1838))
(assert (x1409 x1639))
(assert (= (x1694 (+ x1353 1)) (x1694 x1353)))
(assert (< (x401 64 2 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1409 x826))
(assert (x1409 x883))
(assert (x1409 x773))
(assert (x982 x2 x1314 x557 x1683))
(assert (x505 x983 (- x550 x1683)))
(assert (x1409 x261))
(assert (x1409 x322))
(assert (x1409 x1581))
(assert (not (x1418 (x401 64 x587 2))))
(assert (x1409 x587))
(assert (x1409 x1025))
(assert (x1678 (- x1314 x536)))
(assert (x1409 x772))
(assert (= x89 (and x1157 (not x561))))
(assert (x982 x1683 x557 x2 x1314))
(assert (x1207 x467 x536 x2 x1314))
(assert (x1409 x871))
(assert (x505 x557 (- x1683 x1070)))
(assert (= 64 (x1294 (x401 64 x1735 x1110))))
(assert (x1409 x1223))
(assert (x1409 x1673))
(assert (= x1219 (and x1265 x127)))
(assert (x1409 x711))
(assert (x1409 x54))
(assert (=> (>= 10000 x1797) (= 0 (x1694 x1797))))
(assert (x982 x550 x983 x1314 x2))
(assert (x982 x557 x1683 x2 x1314))
(assert (x1409 x1263))
(assert (< (x401 64 x1526 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1418 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1409 x1614))
(assert (= (or x1836 x1535) x885))
(assert (= x512 (=> (and (= (x293 (- x1497 x1267)) x1314) (= x1638 x851) (= x1489 (x1352 x2 x1314)) (not (> x450 x851)) (= (x823 (+ x971 x450)) x851) (not (< x1497 x1314)) (<= 0 x1489) (= (* 1000000000000000000 x1489) x534) (>= 57896044618658097711785492504343953926634992332820282019728 x1489) (= (x1713 x534 x227) x450) (< (x1352 x2 x1314) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1287)))
(assert (x1409 x1358))
(assert (x1409 x402))
(assert (> (x401 64 x144 17) 10000))
(assert (x1207 x536 x467 x2 x1314))
(assert (x1409 x984))
(assert (x1418 20282409603651670423947251286015))
(assert (= x144 (x125 (x401 64 x144 x390))))
(assert (= x952 (and (not x268) x576)))
(assert (x1409 x388))
(assert (x1409 x105))
(assert (= (x84 (x401 64 x1024 2)) 2))
(assert (= 0 (x1694 2699409439)))
(assert (x1409 x529))
(assert (= (x84 (x401 64 x1735 0)) 0))
(assert (x1409 x1702))
(assert (x505 x843 (- x1604 x1070)))
(assert (x982 x1314 x2 x467 x536))
(assert (x1600 x1376))
(assert (= (x1694 x174) (x1694 (+ 1 x174))))
(assert (x505 x983 (- x550 x2)))
(assert (= (x1294 (x401 64 x324 8)) 64))
(assert (=> (<= x1525 10000) (= 0 (x1694 x1525))))
(assert (not (x1418 (x401 64 x1374 2))))
(assert (= (x1694 1099511627776) 0))
(assert (x1409 x1015))
(assert (= (and x838 x1165) x1729))
(assert (= x331 (x125 (x401 64 x331 17))))
(assert (x1409 x506))
(assert (x982 x467 x536 x1683 x557))
(assert (x1795 x120))
(assert (x1207 x1070 x394 x467 x536))
(assert (x574 x163))
(assert (x1409 x689))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1543 12)))
(assert (x1409 x118))
(assert (x982 x1604 x843 x2 x1314))
(assert (not (x1418 (x401 64 x1735 0))))
(assert (x982 x1314 x2 x536 x467))
(assert (x1409 x120))
(assert (x1409 x1179))
(assert (= x329 (and x407 x753)))
(assert (x1678 (- x1070 x983)))
(assert (=> (>= 10000 x346) (= (x1694 x346) 0)))
(assert (= (or x182 x1087) x1565))
(assert (x505 x983 (- x550 x1314)))
(assert (x890 x1167))
(assert (= (x125 (x401 64 x1374 2)) x1374))
(assert (x1409 x1757))
(assert (x1600 x1014))
(assert (x1409 x1029))
(assert (x1409 x1416))
(assert (not (x1418 (x401 64 x1685 8))))
(assert (x1678 (- x983 x1683)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1797 x629)))
(assert (x1678 (- x557 x843)))
(assert (x1409 x1389))
(assert (x1409 x1468))
(assert (= (=> (and (or (and (and (> x1241 356) (= x239 356) (= x1679 (+ 63 x1803)) (= (x1821 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1679) x659) (= x1241 (x823 (+ x659 356))) (>= x1241 1)) (not x1719)) (and (= x239 96) x1719)) (= (= x1803 0) x1719)) x176) x469))
(assert (= x1735 (x125 (x401 64 x1735 12))))
(assert (= (x1294 (x401 64 x648 2)) 64))
(assert (= (x401 64 x218 8) (x1694 (x401 64 x218 8))))
(assert (= 8 (x84 (x401 64 x218 8))))
(assert (= x603 (and x1095 x288)))
(assert (x505 x983 (- x550 x557)))
(assert (x982 x550 x983 x394 x1070))
(assert (not (x1418 (x401 64 x144 17))))
(assert (x1207 x843 x1604 x394 x1070))
(assert (< 10000 (x401 64 x1024 2)))
(assert (< (x401 64 x1374 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1409 x1069))
(assert (x1409 x249))
(assert (x1600 x754))
(assert (x1678 (- x843 x983)))
(assert (= x691 (=> (= x1623 (= x1649 0)) (and (=> (not x1623) x609) (=> (and (and (= (x1861 x239) x657) (= (not (= x657 0)) x1039)) x1623) (and (=> (and (= (ite x1039 1 0) x919) (not x1039)) x1837) (=> (and x1039 (and (= (or (> x760 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x760) (= true (<= x760 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1292) (= (x1861 x239) x760) (= (x823 (+ 32 x239)) x443))) (and (=> x1292 x609) (=> (and (not x1292) (and (= x928 (x233 x443)) (= x919 (ite (= x928 0) 1 0)))) x1837)))))))))
(assert (x505 x1683 (- x557 x2)))
(assert (x1409 x76))
(assert (= (or x1410 x350 x662 x457 x828 x558 x425 x1766 x1140 x1662 x692 x29 x1714 x1567 x979 x159 x384 x154 x1291 x329 x91 x1421 x1764) x1318))
(assert (x1409 x1827))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x218 8)))
(assert (< (x401 64 x1080 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1795 1000000000000000000))
(assert (x1207 x536 x467 x1683 x557))
(assert (x1409 x1178))
(assert (x1678 (- x1683 x394)))
(assert (= 64 (x1294 (x401 64 x144 x390))))
(assert (not (x1418 (x401 64 x400 2))))
(assert (x1207 x843 x1604 x467 x536))
(assert (x1409 x1301))
(assert (= (=> (= (not x42) x821) (and x821 (=> (and (and (= x47 false) (= x78 1889567281) (= (x1008 x1635) x452) (= x1457 (x401 64 x461 2)) (= false x1562) (= false x411) (= x1385 false) (= x1069 x461) (>= 127 x1634) (<= x1634 127) (= x290 false) (= x79 x207) (= x683 (= x24 x1553)) (>= x452 1) (= false x1554) (= (x564 x1457) x79) (= x461 x1558)) (and (= x751 36) (= x1558 x1205))) (and x683 (=> (= (>= x207 x1262) x1584) x1584))))) x509))
(assert (x1409 x853))
(assert (x1207 x550 x983 x2 x1314))
(assert (=> (<= x1479 10000) (= (x1694 x1479) 0)))
(assert (x1678 (- x2 x843)))
(assert (= (and (not x1166) x1097) x29))
(assert (x1600 x1127))
(assert (x1409 x717))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1636 8)))
(assert (x1678 (- x2 x983)))
(assert (x1678 x394))
(assert (= (and (not x1677) x541) x1184))
(assert (x1409 x453))
(assert (= (x125 (x401 64 x1685 8)) x1685))
(assert (= x477 (=> (and (or x268 (not x268)) (= x268 (= x929 x1710))) x581)))
(assert (x1409 x1105))
(assert (x505 x1604 (- x843 x2)))
(assert (= (x1294 (x401 64 x937 2)) 64))
(assert (= (and x439 x1505) x798))
(assert (= x1442 (=> (= (= x129 x202) x1035) (and (=> (and x1035 (= x146 0)) x490) (=> (and (not x1035) (= x1786 (= 0 x1683))) (and (=> (and (not x1786) (and (= (x293 (- x129 x202)) x557) (= x1668 (> x557 x129)))) (and (=> (and (not x1668) (and (= x441 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x92)) (= (and x441 x1609) x1166) (= x92 (x1352 x1683 x557)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1352 x1683 x557)) x1609))) (and (=> (and x1166 (and (= x1724 x735) (= x1724 (x1713 x92 1000000000000000000)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x92) (<= 0 x92))) x906) (=> (not x1166) x609))) (=> x1668 x609))) (=> (and x1786 (= 0 x735)) x906)))))))
(assert (x1409 x634))
(assert (x1409 x1586))
(assert (x982 x1683 x557 x394 x1070))
(assert (= (x401 64 x1061 2) (x1694 (x401 64 x1061 2))))
(assert (x1678 (- x1683 x1070)))
(assert (x574 x1679))
(assert (x1678 (- x557 x1314)))
(assert (x1409 x779))
(assert (= (x1294 (x401 64 x1735 13)) 64))
(assert (x574 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (> (x401 64 x1735 x1110) 10000))
(assert (x1678 (- x557 x2)))
(assert (= x1735 (x125 (x401 64 x1735 x1110))))
(assert (x505 x1070 (- x394 x1604)))
(assert (x1409 x212))
(assert (< (x401 64 x144 13) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1600 x1619))
(assert (x1409 x198))
(assert (= (x401 64 x1797 x629) (x1694 (x401 64 x1797 x629))))
(assert (x1678 (- x536 x1604)))
(assert (x1409 x1325))
(assert (x1678 (- x843 x557)))
(assert (x505 x550 (- x983 x1070)))
(assert (x1409 x1160))
(assert (= x1110 (x84 (x401 64 x1735 x1110))))
(assert (=> (>= 10000 x504) (= 0 (x1694 x504))))
(assert (x1409 x1603))
(assert (x505 x843 (- x1604 x983)))
(assert (x982 x1604 x843 x394 x1070))
(assert (x1409 x133))
(assert (= x692 (and x1476 x976)))
(assert (x1678 (- x1314 x1604)))
(assert (x1207 x1070 x394 x983 x550))
(assert (x1409 x1480))
(assert (= x336 (or x742 x380)))
(assert (x982 x550 x983 x843 x1604))
(assert (not (x1418 (x401 64 x144 0))))
(assert (x1678 x1683))
(assert (x1409 x1722))
(assert (= 0 (x1694 1889567281)))
(assert (x1678 (- x550 x1683)))
(assert (= (x1294 (x401 64 x1374 2)) 64))
(assert (x1409 x1852))
(assert (x982 x843 x1604 x467 x536))
(assert (x1600 x223))
(assert (= (x125 (x401 64 x144 12)) x144))
(assert (< 10000 (x401 64 x144 0)))
(assert (x505 x843 (- x1604 x557)))
(assert (x1409 x789))
(assert (x1207 x1314 x2 x843 x1604))
(assert (x1409 x550))
(assert (x982 x1604 x843 x467 x536))
(assert (= x182 (or x305 x7)))
(assert (x1409 x896))
(assert (x982 x550 x983 x2 x1314))
(assert (x1409 x1327))
(assert (= (and x1506 x1149) x979))
(assert (x1678 (- x557 x1604)))
(assert (not (x1418 (x401 64 x1735 17))))
(assert (x982 x557 x1683 x467 x536))
(assert (not (x1418 (x401 64 2 10))))
(assert (= 2 (x84 (x401 64 x1080 2))))
(assert (= (x401 64 x1735 x1110) (x1694 (x401 64 x1735 x1110))))
(assert (=> (<= x144 10000) (= (x1694 x144) 0)))
(assert (x1678 (- x2 x550)))
(assert (x982 x1314 x2 x843 x1604))
(assert (x1409 x484))
(assert (= 13 (x84 (x401 64 x144 13))))
(assert (x1678 (- x1070 x536)))
(assert (> (x401 64 x218 8) 10000))
(assert (x1409 x1258))
(assert (x982 x557 x1683 x983 x550))
(assert (x505 x1683 (- x557 x467)))
(assert (x1409 x1153))
(assert (= 2 (x84 (x401 64 x1525 2))))
(assert (x1678 1000000000000000000))
(assert (= (x401 64 x183 13) (x1694 (x401 64 x183 13))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1608 8)))
(assert (x982 x843 x1604 x1683 x557))
(assert (x1409 x1637))
(assert (x1086 x999 x120))
(assert (x1418 105312291668557186697918027683670432318895095400549111254310977535))
(assert (= (x1694 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (x1795 x1094))
(assert (< 10000 (x401 64 x331 0)))
(assert (=> (<= x1407 10000) (= (x1694 x1407) 0)))
(assert (x1409 x1425))
(assert (x1409 x148))
(assert (x982 x536 x467 x843 x1604))
(assert (x1409 x161))
(assert (= 13 (x84 (x401 64 x459 13))))
(assert (x505 x843 (- x1604 x536)))
(assert (x1409 x667))
(assert (= x1239 (and (not x1865) x139)))
(assert (= (and x1108 x1387) x1149))
(assert (x1409 x653))
(assert (x1409 x1538))
(assert (x1678 x2))
(assert (x1207 x983 x550 x1683 x557))
(assert (x1409 x1117))
(assert (x1409 x1194))
(assert (= x854 (or x67 x1484)))
(assert (x1409 x2))
(assert (= (x84 (x401 64 x648 2)) 2))
(assert (< (x401 64 x144 17) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1600 x773))
(assert (x1409 x446))
(assert (not (x1418 (x401 64 x218 8))))
(assert (= (and (not x344) x1620) x1836))
(assert (x505 x557 (- x1683 x2)))
(assert (=> (<= x1543 10000) (= (x1694 x1543) 0)))
(assert (x1409 x256))
(assert (x1409 x259))
(assert (x1678 (- x550 x467)))
(assert (= (x1694 x857) (x1694 (+ 2 x857))))
(assert (x1409 x1735))
(assert (x982 x2 x1314 x1683 x557))
(assert (x1409 x58))
(assert (not (x1418 (x401 64 x144 12))))
(assert (x1409 x1112))
(assert (x982 x394 x1070 x550 x983))
(assert (x1409 x83))
(assert (x1409 x33))
(assert (= (x401 64 x1080 2) (x1694 (x401 64 x1080 2))))
(assert (x1409 x900))
(assert (= x331 (x125 (x401 64 x331 x1136))))
(assert (x1409 x752))
(assert (not (x1418 (x401 64 x54 8))))
(assert (x1600 x1030))
(assert (x982 x467 x536 x1314 x2))
(assert (= (=> (or x42 (not x42)) x509) x1189))
(assert (= (and x1815 (not x281)) x109))
(assert (x1409 x1799))
(assert (x1409 x1779))
(assert (x1418 2699409439))
(assert (x982 x1070 x394 x1604 x843))
(assert (not (x1418 (x401 64 x1735 13))))
(assert (x1409 x410))
(assert (x1409 x1362))
(assert (not (x1418 (x401 64 x144 x390))))
(assert (x1600 x503))
(assert (< (x401 64 x461 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x505 x550 (- x983 x2)))
(assert (= (and x1435 x873) x1819))
(assert (x505 x467 (- x536 x1604)))
(assert (x1409 x271))
(assert (=> (<= x400 10000) (= 0 (x1694 x400))))
(assert (x1409 x149))
(assert (x1678 (- x1314 x394)))
(assert (x1409 x1429))
(assert (x1409 x144))
(assert (x505 x1314 (- x2 x983)))
(assert (x1086 x534 x227))
(assert (x1409 x1650))
(assert (= x1714 (and x1281 x295)))
(assert (x982 x550 x983 x536 x467))
(assert (x1678 (- x394 x983)))
(assert (x1409 x449))
(assert (x1678 (- x1070 x467)))
(assert (x1409 x1839))
(assert (x1600 x907))
(assert (= x306 (and x865 (not x1750))))
(assert (= (or x798 x353) x931))
(assert (not (x1418 (x401 64 x1443 x620))))
(assert (x1678 x212))
(assert (x505 x536 (- x467 x557)))
(assert (x1409 x560))
(assert (= (or x1729 x617) x761))
(assert (x1409 x1309))
(assert (= x1840 x235))
(assert (x1409 x1186))
(assert (= x1344 (and x626 x1793)))
(assert (x1409 x584))
(assert (x1086 x904 x1094))
(assert (= x886 (=> (and (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1645 x929))) (not (> x1604 x1833)) (= x1645 (x1713 x1700 x227)) (= x1710 x1017) (= x1700 (* 1000000000000000000 x1820)) (< (x1352 x843 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x823 (+ x1645 x929)) x1017) (= (x293 (- x1833 x829)) x1604) (>= x1820 0) (= x1820 (x1352 x843 x1604)) (<= x1820 57896044618658097711785492504343953926634992332820282019728)) x477)))
(assert (= (x84 (x401 64 x183 13)) 13))
(assert (x982 x2 x1314 x467 x536))
(assert (= (x1694 1289409798) 0))
(assert (x1409 x476))
(assert (x982 x536 x467 x394 x1070))
(assert (= x1375 (and x1408 x1665)))
(assert (> (x401 64 x648 2) 10000))
(assert (x982 x557 x1683 x536 x467))
(assert (=> (<= x1526 10000) (= 0 (x1694 x1526))))
(assert (= (x401 64 x1443 x620) (x1694 (x401 64 x1443 x620))))
(assert (x982 x1604 x843 x536 x467))
(assert (not (x1418 (x401 64 x1608 8))))
(assert (x1409 x1638))
(assert (< 10000 (x401 64 x1685 8)))
(assert (x3 1000000000000000000 x1085))
(assert (= (x1294 (x401 64 x1443 x620)) 64))
(assert (x1678 (- x550 x536)))
(assert (= (x1694 (x401 64 x400 2)) (x401 64 x400 2)))
(assert (= (x1694 (x401 64 x459 13)) (x401 64 x459 13)))
(assert (x1207 x983 x550 x2 x1314))
(assert (x1600 x1708))
(assert (x982 x983 x550 x1683 x557))
(assert (x1678 (- x2 x394)))
(assert (x982 x983 x550 x1604 x843))
(assert (= (and (not x311) x623) x1408))
(assert (not (x1418 (x401 64 x1297 8))))
(assert (x1409 x569))
(assert (= (x1294 (x401 64 x331 17)) 64))
(assert (x1409 x1082))
(assert (x1409 x126))
(assert (=> (>= 10000 x647) (= (x1694 x647) 0)))
(assert (x1409 x1241))
(assert (x1409 x1573))
(assert (x505 x394 (- x1070 x1683)))
(assert (x1207 x467 x536 x394 x1070))
(assert (x1409 x542))
(assert (x1409 x1571))
(assert (x1409 x66))
(assert (= (or x1594 x741) x606))
(assert (< (x401 64 x144 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x952 x1345) x1331))
(assert (x1409 x1348))
(assert (= x1251 (and x1243 x589)))
(assert (x20 32))
(assert (= x1291 (and x1668 x432)))
(assert (x1409 x1718))
(assert (x1795 x236))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x587 2)))
(assert (x1409 x769))
(assert (x1409 x208))
(assert (x982 x1683 x557 x536 x467))
(assert (x1409 x744))
(assert (= (and x1791 x806) x127))
(assert (x1678 (- x1314 x550)))
(assert (x1678 (- x536 x550)))
(assert (x1409 x232))
(assert (= 64 (x1294 (x401 64 x1319 8))))
(assert (x1409 x1525))
(assert (= x1594 (and (not x1292) x1321)))
(assert (= 0 (x1694 458445791)))
(assert (x1409 x1024))
(assert (x1086 x298 x1094))
(assert (x1409 x1683))
(assert (= (x1694 1461501637330902918203684832716283019655932542975) 0))
(assert (x1409 x1501))
(assert (not (x1418 (x401 64 x1835 12))))
(assert (x1409 x1316))
(assert (not (x1418 (x401 64 x718 0))))
(assert (x35 x115 1000000000000000000))
(assert (x1600 x1803))
(assert (x1409 x688))
(assert (not (x1418 (x401 64 x1319 8))))
(assert (x1207 x1683 x557 x2 x1314))
(assert (= (or x1530 x646) x1881))
(assert (x1600 x820))
(assert (= x331 (x125 (x401 64 x331 12))))
(assert (x1678 (- x2 x467)))
(assert (x1409 x766))
(assert (x1600 x1186))
(assert (= (x1694 (x401 64 x331 17)) (x401 64 x331 17)))
(assert (> (x401 64 x144 13) 10000))
(assert (= (or x480 x1474) x1800))
(assert (= x1432 (and (not x682) x252)))
(assert (x1409 x285))
(assert (= (x84 (x401 64 x144 17)) 17))
(assert (not (x1418 (x401 64 x1735 12))))
(assert (x1409 x1540))
(assert (< 10000 (x401 64 x324 8)))
(assert (x982 x394 x1070 x557 x1683))
(assert (= x906 (=> (and (= x146 x735) (= (x401 64 x144 x390) x9)) x490)))
(assert (= x662 (and (not x1168) x606)))
(assert (x1207 x843 x1604 x983 x550))
(assert (x1678 x1085))
(assert (x1600 x1647))
(assert (x1207 x1683 x557 x983 x550))
(assert (x1409 x1663))
(assert (not (x1418 (x401 64 x1636 2))))
(assert (= x629 (x84 (x401 64 x1797 x629))))
(assert (x1409 x1310))
(assert (= (x1694 57896044618658097711785492504343953926634992332820282019728) 0))
(assert (x1409 x343))
(assert (x1418 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (not (x1418 (x401 64 x707 8))))
(assert (x982 x467 x536 x1070 x394))
(assert (= x620 (x84 (x401 64 x1443 x620))))
(assert (= x1297 (x125 (x401 64 x1297 8))))
(assert (x1409 x1647))
(assert (x1418 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1207 x394 x1070 x843 x1604))
(assert (x1409 x204))
(assert (x1409 x435))
(assert (x1409 x488))
(assert (x1409 x1761))
(assert (= x1474 (and x1097 x1166)))
(assert (x1409 x1774))
(assert (x1409 x986))
(assert (= (x401 64 x1636 8) (x1694 (x401 64 x1636 8))))
(assert (x1409 x701))
(assert (= (or x1375 x1253) x1129))
(assert (x1678 (- x467 x557)))
(assert (x982 x843 x1604 x983 x550))
(assert (x982 x843 x1604 x550 x983))
(assert (= (and x1373 (not x366)) x1505))
(assert (= (and x1716 x229) x1547))
(assert (not (x1418 (x401 64 x144 13))))
(assert (x890 x1100))
(assert (x1409 x1765))
(assert (x1409 x891))
(assert (= x1880 (=> (= x569 x129) x1442)))
(assert (= x1237 (and x606 x1168)))
(assert (x276 x1100 20282409603651670423947251286016))
(assert (x1678 (- x983 x394)))
(assert (= x498 (or x89 x768)))
(assert (= (x1694 (x401 64 x331 12)) (x401 64 x331 12)))
(assert (x1678 (- x536 x983)))
(assert (= (x1294 (x401 64 x1735 17)) 64))
(assert (x1409 x663))
(assert (x505 x2 (- x1314 x843)))
(assert (x1678 (- x1604 x2)))
(assert (x1409 x1314))
(assert (x1678 x550))
(assert (x1409 x747))
(assert (x1409 x1645))
(assert (= x698 (or x423 x1184)))
(assert (x505 x1604 (- x843 x394)))
(assert (= 64 (x1294 (x401 64 x331 0))))
(assert (x1418 1000000000000000000))
(assert (x1409 x734))
(assert (< 10000 (x401 64 x747 2)))
(assert (x1409 x442))
(assert (< (x401 64 x1735 13) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x1863) x1887) x500))
(assert (x505 x557 (- x1683 x536)))
(assert (x20 20282409603651670423947251286016))
(assert (x1409 x461))
(assert (= (x401 64 x1526 8) (x1694 (x401 64 x1526 8))))
(assert (= (and x813 x1653) x966))
(assert (x1409 x184))
(assert (x1372 x1112))
(assert (x1409 x1064))
(assert (= (x401 64 x331 0) (x1694 (x401 64 x331 0))))
(assert (x1409 x145))
(assert (x1409 x1084))
(assert (x1409 x1242))
(assert (= 64 (x1294 (x401 64 x747 2))))
(assert (x1418 2727740892))
(assert (x1678 (- x394 x1314)))
(assert (not (x1418 (x401 64 x1479 0))))
(assert (x505 x1683 (- x557 x1070)))
(assert (x1409 x368))
(assert (x1409 x1226))
(assert (= (x1294 (x401 64 x331 12)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x747 2)))
(assert (x1409 x1446))
(assert (x505 x1683 (- x557 x1314)))
(assert (x1409 x928))
(assert (x982 x394 x1070 x843 x1604))
(assert (x1409 x728))
(assert (x1409 x77))
(assert (x1409 x75))
(assert (x1409 x337))
(assert (x1409 x1481))
(assert (x1678 (- x394 x1683)))
(assert (= (and (not x1653) x813) x1860))
(assert (x1678 (- x843 x536)))
(assert (x3 1000000000000000000 x1147))
(assert (=> (>= 10000 x937) (= (x1694 x937) 0)))
(assert (x982 x536 x467 x1604 x843))
(assert (x1409 x815))
(assert (x1409 x78))
(assert (= x30 x609))
(assert (x1600 x877))
(assert (x1409 x1619))
(assert (= (x1694 (x401 64 2 10)) (x401 64 2 10)))
(assert (x1409 x151))
(assert (x1678 (- x550 x2)))
(assert (x3 1000000000000000000 x592))
(assert (=> (>= 10000 x1443) (= 0 (x1694 x1443))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1443 x620)))
(assert (x1409 x69))
(assert (x1207 x2 x1314 x467 x536))
(assert (x1409 x668))
(assert (= x185 (and (not x1879) x1464)))
(assert (x505 x394 (- x1070 x536)))
(assert (=> (<= x331 10000) (= 0 (x1694 x331))))
(assert (x505 x1604 (- x843 x1314)))
(assert (x1409 x1459))
(assert (x505 x557 (- x1683 x983)))
(assert (x1409 x1466))
(assert (x1409 x1568))
(assert (= x1735 (x125 (x401 64 x1735 13))))
(assert (< (x401 64 x331 13) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x505 x2 (- x1314 x983)))
(assert (x505 x467 (- x536 x2)))
(assert (x1409 x1487))
(assert (x1600 x216))
(assert (x1409 x746))
(assert (x1409 x74))
(assert (x982 x557 x1683 x550 x983))
(assert (= x939 (=> (= (= 0 (ite (< 0 x1193) x1193 (ite (not (> x1571 x1267)) 1 0))) x710) (and (=> (and x710 (and (= (< x1571 x1626) x1848) (or (and (= x1571 x1497) x1848) (and (not x1848) (= x1497 x1626))))) x512) (=> (and (not x710) (= x1638 x971)) x1287)))))
(assert (= (and x1505 (not x439)) x353))
(assert (x1678 (- x467 x2)))
(assert (x1418 404098525))
(assert (x1409 x1235))
(assert (x1409 x1295))
(assert (x1409 x195))
(assert (= x1636 (x125 (x401 64 x1636 8))))
(assert (= x300 (and x306 x1889)))
(assert (x1600 x1390))
(assert (x505 x394 x1070))
(assert (x1409 x1543))
(assert (= x1747 (and x96 x336)))
(assert (not (x1418 (x401 64 x1735 x1110))))
(assert (= x1076 (and (not x302) x613)))
(assert (= x398 (=> (and (and (= x1522 100) (= false x624) (= x922 false) (= x28 x5) (= x628 x1205) (= x110 x1205)) (and (= x628 x144) (and (and (and (= x478 x934) (and (= x600 false) (>= 127 x1290) (= x1627 true) (= x1407 x1183) (<= 1 x1499) (= x1499 (x1008 x1636)) (= x1220 (x1212 x1407)) (>= 127 x1290) (= (x675 x1636) x419) (= x681 288162684) (= x419 x132) (= x144 x1588) (= false x1312))) (and (= x53 false) (= x1226 x5))) (= x587 x110)))) (and (=> (not x1627) x30) (=> (and x1627 (and (= x184 x587) (= x1791 true))) (and (=> (and x1791 (and (= 2 x403) (= x1188 x1226) (= (= x1183 x116) x1265) (<= x116 1461501637330902918203684832716283019655932542975) (= (x401 64 2 10) x1059) (= (x40 x1059) x116))) (and (=> (and x1265 (and (= x997 (< 0 x105)) (<= x883 1099511627775) (= (x1130 x918) x883) (= (x454 x918) x1813) (>= 105312291668557186697918027683670432318895095400549111254310977535 x1813) (= (x401 64 x144 13) x918))) (and (=> (and (not x997) (and (= (< x1231 x883) x1281) (= x1231 (x823 (+ x41 x883))))) (and (=> (and (not x1281) (= x1398 (> x1231 x478))) (and (=> (and (not x1398) (and (= x1702 (x823 (+ x41 x883))) (= (< x1702 x883) x725))) (and (=> (and (and (= x1642 (x293 (- x478 x1702))) (= x330 (> x1642 x478))) (not x725)) (and (=> x330 x609) (=> (and (not x330) (= (> x1642 x249) x753)) (and (=> (not x753) x908) (=> x753 x609))))) (=> x725 x609))) (=> x1398 x609))) (=> x1281 x609))) (=> x997 x908))) (=> (not x1265) x609))) (=> (not x1791) x30)))))))
(assert (x1600 x730))
(assert (< (x401 64 x1310 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1207 x394 x1070 x2 x1314))
(assert (x982 x1070 x394 x557 x1683))
(assert (x574 x57))
(assert (= x623 (or x1828 x1331)))
(assert (= (x125 (x401 64 x1061 2)) x1061))
(assert (= x1825 (=> (and (or (not x281) x281) (= x281 (= x569 x523))) x1880)))
(assert (=> (<= x871 10000) (= (x1694 x871) 0)))
(assert (x1409 x622))
(assert (> (x401 64 x1543 12) 10000))
(assert (x982 x843 x1604 x2 x1314))
(assert (= 8 (x84 (x401 64 x1608 8))))
(assert (= x1384 (and x1863 x1887)))
(assert (x1409 x240))
(assert (x505 x467 (- x536 x1314)))
(assert (= x741 (and (not x1039) x722)))
(assert (x1409 x1504))
(assert (= x1140 (and x1387 (not x1108))))
(assert (x1207 x536 x467 x843 x1604))
(assert (= x1735 (x125 (x401 64 x1735 0))))
(assert (x1409 x1626))
(assert (x1409 x799))
(assert (x505 x2 (- x1314 x536)))
(assert (> (x401 64 x587 2) 10000))
(assert (x1409 x117))
(assert (< 10000 (x401 64 x1735 12)))
(assert (x1409 x536))
(assert (x1409 x1608))
(assert (x1409 x1669))
(assert (x1409 x770))
(assert (x505 x550 (- x983 x1604)))
(assert (x3 1000000000000000000 x1820))
(assert (=> (<= x501 10000) (= (x1694 x501) 0)))
(assert (= (x84 (x401 64 x1319 8)) 8))
(assert (x982 x536 x467 x1683 x557))
(assert (x1678 (- x1604 x1070)))
(assert (x1409 x1537))
(assert (< 10000 (x401 64 x144 12)))
(assert (x982 x2 x1314 x983 x550))
(assert (x1409 x1632))
(assert (= x447 x73))
(assert (x1678 (- x557 x467)))
(assert (> (x401 64 x331 17) 10000))
(assert (= x1410 (and x428 x330)))
(assert (x1678 (- x394 x1604)))
(assert (= 0 (x1694 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1409 x65))
(assert (x1409 x774))
(assert (x1409 x765))
(assert (x505 x2 x1314))
(assert (x276 x1449 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1678 (- x1070 x1604)))
(assert (x1409 x378))
(assert (x1795 x298))
(assert (x1409 x1152))
(assert (x1409 x79))
(assert (x1409 x227))
(assert (< 10000 (x401 64 x1835 12)))
(assert (x1207 x2 x1314 x1683 x557))
(assert (x1409 x904))
(assert (= x7 (and x60 x1848)))
(assert (x1207 x1604 x843 x983 x550))
(assert (x505 x1314 (- x2 x467)))
(assert (x1409 x535))
(assert (x1409 x1172))
(assert (x1409 x1390))
(assert (x1409 x737))
(assert (x505 x2 (- x1314 x1070)))
(assert (= x921 (and x253 x1886)))
(assert (x1409 x168))
(assert (= (and x302 x613) x128))
(assert (= (x125 (x401 64 x707 8)) x707))
(assert (x1409 x1094))
(assert (= 64 (x1294 (x401 64 x587 2))))
(assert (= x558 (and x1829 x1398)))
(assert (x1409 x1520))
(assert (= x916 (and x931 x1052)))
(assert (=> (<= x324 10000) (= 0 (x1694 x324))))
(assert (= x218 (x125 (x401 64 x218 8))))
(assert (x1678 (- x557 x550)))
(assert (= x428 (and (not x725) x160)))
(assert (x1418 115792089237316195423570985008687907853269984665640564039457584006813618012161))
(assert (x1409 x1746))
(assert (= 64 (x1294 (x401 64 x459 13))))
(assert (x1409 x902))
(assert (x1409 x186))
(assert (< 10000 (x401 64 x1636 2)))
(assert (x982 x394 x1070 x1314 x2))
(assert (x1409 x1794))
(assert (x1409 x1374))
(assert (= x159 (and x1321 x1292)))
(assert (x505 x1604 (- x843 x983)))
(assert (= (x1694 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x1409 x1449))
(assert (=> (<= x459 10000) (= (x1694 x459) 0)))
(assert (x1795 x783))
(assert (x982 x467 x536 x2 x1314))
(assert (x1409 x1283))
(assert (x1409 x225))
(assert (x3 1000000000000000000 x1354))
(assert (x1409 x400))
(assert (x1678 (- x557 x983)))
(assert (not (x1418 (x401 64 x183 13))))
(assert (x982 x536 x467 x983 x550))
(assert (= (=> (and (= false x164) (= x1725 true) (= x448 true) (= x42 x1725) (= false x1646)) x1189) x609))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x331 x1136)))
(assert (= 64 (x1294 (x401 64 x1061 2))))
(assert (x1600 x1666))
(assert (= 64 (x1294 (x401 64 x1024 2))))
(assert (x1409 x1083))
(assert (x1409 x445))
(assert (x574 x1100))
(assert (x1409 x1564))
(assert (x1600 x145))
(assert (x276 x57 20282409603651670423947251286016))
(assert (x1678 (- x1604 x1683)))
(assert (x982 x1070 x394 x1683 x557))
(assert (= (x84 (x401 64 x492 0)) 0))
(assert (x505 x550 (- x983 x557)))
(assert (= (x1294 (x401 64 x1080 2)) 64))
(assert (= (=> (= x1827 x1710) x97) x581))
(assert (x1409 x90))
(assert (= 64 (x1294 (x401 64 x331 x1136))))
(assert (x574 x1167))
(assert (= (and (not x1052) x931) x804))
(assert (x1409 x1777))
(assert (x1409 x795))
(assert (= 0 (x1694 16000000000000000000000000)))
(assert (x1600 x936))
(assert (x1409 x443))
(assert (x1409 x631))
(assert (x1207 x1604 x843 x394 x1070))
(assert (= (x1694 (x401 64 x937 2)) (x401 64 x937 2)))
(assert (x1795 x227))
(assert (= 0 (x1694 404098525)))
(assert (x1409 x221))
(assert (x505 x1314 (- x2 x1070)))
(assert (< 10000 (x401 64 x331 12)))
(assert (x982 x550 x983 x467 x536))
(assert (x505 x550 (- x983 x1683)))
(assert (x505 x550 (- x983 x467)))
(assert (= (x84 (x401 64 x144 0)) 0))
(assert (x1409 x1080))
(assert (x982 x550 x983 x557 x1683))
(assert (x1409 x354))
(assert (= x1042 (=> (and (or (and (= x58 x732) (not x1863)) (and x1863 (and (= (x1531 x1635) x1033) (= x482 x948) (= x482 (x1420 x1636)) (= x732 x58)))) (= (= 0 x58) x1863)) x469)))
(assert (x1409 x1175))
(assert (x1678 (- x1314 x1070)))
(assert (x1207 x557 x1683 x394 x1070))
(assert (= x807 (and x42 x1514)))
(assert (x505 x843 (- x1604 x550)))
(assert (x1418 105312291668557186697918027683670432318895095400549111254310977534))
(assert (=> (>= 10000 x461) (= 0 (x1694 x461))))
(assert (x1409 x1492))
(assert (x1409 x991))
(assert (x1409 x712))
(assert (x1409 x670))
(assert (x982 x1604 x843 x550 x983))
(assert (not (x1418 (x401 64 x1543 12))))
(assert (x1409 x1532))
(assert (x1409 x427))
(assert (= x139 (or x1346 x1129)))
(assert (x1418 1099511627775))
(assert (x982 x557 x1683 x1314 x2))
(assert (= (and (not x319) x397) x742))
(assert (< 10000 (x401 64 x144 x390)))
(assert (x982 x1683 x557 x467 x536))
(assert (= (x125 (x401 64 x331 13)) x331))
(assert (=> (>= 10000 x1685) (= 0 (x1694 x1685))))
(assert (x505 x1314 (- x2 x843)))
(assert (x982 x843 x1604 x536 x467))
(assert (x982 x1604 x843 x1314 x2))
(assert (x982 x536 x467 x550 x983))
(assert (x1409 x1215))
(assert (x1409 x525))
(assert (x1678 (- x1314 x1683)))
(assert (x1409 x846))
(assert (= (x125 (x401 64 x1310 2)) x1310))
(assert (x574 x1112))
(assert (= (x401 64 x1024 2) (x1694 (x401 64 x1024 2))))
(assert (x505 x1070 (- x394 x536)))
(assert (= x1253 (and x1408 (not x1665))))
(assert (x1409 x1611))
(assert (x505 x557 (- x1683 x1604)))
(assert (x1418 57896044618658097711785492504343953926634992332820282019728))
(assert (x505 x2 (- x1314 x550)))
(assert (= 2 (x125 (x401 64 2 10))))
(assert (x1678 x983))
(assert (x982 x843 x1604 x557 x1683))
(assert (x1409 x956))
(assert (x574 20282409603651670423947251286015))
(assert (= x1796 (and x1035 x1303)))
(assert (= (=> (= x311 (= x1054 x1827)) (and (=> (and (not x311) (and (= (= 0 x983) x1665) (or (and (not x1665) (and (>= x115 0) (not (> x550 x1827)) (= x839 x944) (= x550 (x293 (- x1827 x1054))) (<= x115 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< (x1352 x983 x550) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x839 (x1713 x115 1000000000000000000)) (= x115 (x1352 x983 x550)))) (and x1665 (= x944 0))))) x396) (=> (and (= 0 x849) x311) x1151))) x97))
(assert (x1795 x534))
(assert (x505 x394 (- x1070 x550)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x501 0)))
(assert (x1409 x925))
(assert (= (and x1477 x1524) x496))
(assert (x1409 x1874))
(assert (x505 x1683 (- x557 x843)))
(assert (x1409 x715))
(assert (x505 x557 (- x1683 x467)))
(assert (x1409 x1290))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1735 x1110)))
(assert (x1409 x422))
(assert (= (=> (= (= (ite (> x1179 0) x1179 (ite (not (> x1571 x829)) 1 0)) 0) x1653) (and (=> (and (and (or (and (= x712 x1833) (not x836)) (and x836 (= x1833 x1571))) (= x836 (> x712 x1571))) x1653) x886) (=> (and (= x1710 x929) (not x1653)) x477))) x1867))
(assert (= 17 (x84 (x401 64 x1735 17))))
(assert (x1418 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1409 x309))
(assert (x1409 x978))
(assert (= x1421 (and (not x357) x1251)))
(assert (= (x125 (x401 64 x648 2)) x648))
(assert (x1409 x1616))
(assert (x1409 x1137))
(assert (x1409 x403))
(assert (= x1535 (and (not x237) x804)))
(assert (= (x1694 (+ 1 x1882)) (x1694 x1882)))
(assert (= x1303 (or x660 x515)))
(assert (x1600 x1746))
(assert (x1409 x1193))
(assert (x982 x1070 x394 x843 x1604))
(assert (x1409 x1006))
(assert (x1409 x1319))
(assert (not (x1418 (x401 64 x331 13))))
(assert (x1207 x983 x550 x467 x536))
(assert (x1678 (- x1070 x1683)))
(assert (x1409 x1509))
(assert (x1409 x1469))
(assert (x1409 x346))
(assert (x1600 x751))
(assert (x1600 x880))
(assert (x1409 x643))
(assert (= (x1694 x924) (x1694 (+ x924 1))))
(assert (x1409 x630))
(assert (= (x1694 2835717307) 0))
(assert (= x1736 (=> (and (= x1242 (x1130 x1569)) (<= x676 105312291668557186697918027683670432318895095400549111254310977535) (= x1052 (= x1242 0)) (= x1569 (x401 64 x144 13)) (>= 1099511627775 x1242) (= x676 (x454 x1569))) (and (=> x1052 x447) (=> (and (= (> x676 x592) x237) (not x1052)) (and (=> (and (not x237) (= (x401 64 x144 13) x959)) x73) (=> (and (and (= (> x879 x676) x344) (= x879 (x293 (- x676 x592)))) x237) (and (=> x344 x609) (=> (and (= x1687 (x401 64 x144 13)) (not x344)) x73)))))))))
(assert (x982 x557 x1683 x394 x1070))
(assert (= (x1694 x703) (x1694 (+ 1 x703))))
(assert (x1409 x280))
(assert (x505 x550 (- x983 x843)))
(assert (x1409 x757))
(assert (x1678 (- x394 x467)))
(assert (x982 x536 x467 x2 x1314))
(assert (> (x401 64 x459 13) 10000))
(assert (x1409 x41))
(assert (x982 x1683 x557 x1314 x2))
(assert (x1409 x1046))
(assert (x505 x1314 (- x2 x550)))
(assert (x1409 x1072))
(assert (x982 x550 x983 x1070 x394))
(assert (= (x84 (x401 64 x1479 0)) 0))
(assert (= (=> (and (or x1865 (and (= x418 (x401 64 x1735 12)) (not x1865))) (and (= (x1612 x1402) x1481) (= x1779 (x823 (+ x849 x1481))) (= x1402 (x401 64 x1735 12)) (= x1865 (= x849 0)) (not (>= (+ x1481 x849) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x1340) x1151))
(assert (= (x125 (x401 64 x647 8)) x647))
(assert (= 0 (x1694 10000000000)))
(assert (< (x401 64 x937 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1409 x399))
(assert (= (and x603 x1806) x326))
(assert (= x480 (and x1001 x1786)))
(assert (= (x125 (x401 64 x1443 x620)) x1443))
(assert (x1795 x999))
(assert (x1409 x1873))
(assert (x1409 x1354))
(assert (x982 x536 x467 x1314 x2))
(assert (x1409 x292))
(assert (x505 x983 (- x550 x1070)))
(assert (x982 x467 x536 x550 x983))
(assert (x1409 x129))
(assert (= 64 (x1294 (x401 64 x144 0))))
(assert (< 10000 (x401 64 x331 13)))
(assert (x1409 x1017))
(assert (= x1080 (x125 (x401 64 x1080 2))))
(assert (x1409 x751))
(assert (x1409 x104))
(assert (x1795 x115))
(assert (= 8 (x84 (x401 64 x1636 8))))
(assert (x1678 (- x1604 x536)))
(assert (= (x84 (x401 64 x331 0)) 0))
(assert (x1372 x163))
(assert (= (x1694 (+ 2 x924)) (x1694 x924)))
(assert (x1409 x1726))
(assert (x982 x1683 x557 x1604 x843))
(assert (x1409 x848))
(assert (x1409 x1566))
(assert (x505 x467 (- x536 x394)))
(assert (x1678 x1604))
(assert (= x1479 (x125 (x401 64 x1479 0))))
(assert (x505 x1314 (- x2 x1683)))
(assert (x1409 x879))
(assert (x505 x1604 (- x843 x557)))
(assert (x1409 x1434))
(assert (x1409 x1273))
(assert (x1086 x236 x1094))
(assert (x1409 x517))
(assert (= x838 (or x921 x642)))
(assert (= (x1694 340282366920938463463374607431768211455) 0))
(assert (x1409 x648))
(assert (x1409 x556))
(assert (> (x401 64 x1297 8) 10000))
(assert (x1409 x1835))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x401 64 x1835 12)))
(assert (x1678 (- x536 x1683)))
(assert (x1678 (- x394 x550)))
(assert (= (and (not x566) x228) x1716))
(assert (x1409 x14))
(assert (= (and (not x1848) x60) x305))
(assert (x1409 x652))
(assert (x1409 x18))
(assert (= (x401 64 x1479 0) (x1694 (x401 64 x1479 0))))
(assert (x1409 x1681))
(assert (x1409 x1282))
(assert (= (x1694 2432040568) 0))
(assert (> (x401 64 x400 2) 10000))
(assert (= (or x474 x1743) x397))
(assert (= 64 (x1294 (x401 64 x1636 8))))
(assert (x1409 x1272))
(assert (x1409 x431))
(assert (= x1835 (x125 (x401 64 x1835 12))))
(assert (x982 x1070 x394 x983 x550))
(assert (< 10000 (x401 64 x331 x1136)))
(assert (x982 x983 x550 x557 x1683))
(assert (x982 x394 x1070 x1604 x843))
(assert (x1207 x467 x536 x983 x550))
(assert (x1409 x1803))
(assert (x1409 x116))
(assert (x1418 1289409798))
(assert (= (x1694 20282409603651670423947251286015) 0))
(assert (= (x84 (x401 64 x1735 13)) 13))
(assert (= (x1694 x393) (x1694 (+ 1 x393))))
(assert (=> (>= 10000 x218) (= 0 (x1694 x218))))
(assert (x1409 x935))
(assert (= (and x725 x160) x384))
(assert (x1409 x324))
(assert (= (x401 64 x1735 12) (x1694 (x401 64 x1735 12))))
(assert (x982 x394 x1070 x2 x1314))
(assert (x1409 x1855))
(assert (= (and (not x59) x761) x1063))
(assert (= (x1294 (x401 64 x400 2)) 64))
(assert (x505 x536 (- x467 x550)))
(assert (x1207 x983 x550 x394 x1070))
(assert (x1207 x550 x983 x1683 x557))
(assert (= x176 (=> (= x780 (> x732 0)) (and (=> (and x780 (and (and (= x204 (x1861 x239)) (= (= 0 x204) x561)) (or (and (not x561) (= (ite x561 1 0) x1649)) (and (and (= (x1008 x1635) x1650) (= x1649 (ite (= x1650 0) 1 0))) x561)))) x691) (=> (not x780) x609)))))
(assert (= 0 (x1694 40564819207303340847894502572030)))
(check-sat)
(exit)
