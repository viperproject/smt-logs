(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1499 () Int)
(declare-fun x1756 () Bool)
(declare-fun x5618 () Int)
(declare-fun x3801 () Int)
(declare-fun x2993 () Int)
(declare-fun x4792 () Int)
(declare-fun x4793 () Int)
(declare-fun x5275 () Bool)
(declare-fun x853 () Int)
(declare-fun x3236 () Int)
(declare-fun x269 () Bool)
(declare-fun x2859 () Int)
(declare-fun x3881 () Int)
(declare-fun x2469 () Int)
(declare-fun x2928 () Int)
(declare-fun x1862 () Int)
(declare-fun x1802 () Int)
(declare-fun x4680 () Bool)
(declare-fun x1364 () Int)
(declare-fun x166 () Bool)
(declare-fun x2879 () Int)
(declare-fun x2747 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x2078 () Bool)
(declare-fun x3122 () Int)
(declare-fun x3204 () Bool)
(declare-fun x5353 () Int)
(declare-fun x5570 () Int)
(declare-fun x1781 () Bool)
(declare-fun x1028 () Int)
(declare-fun x208 () Int)
(declare-fun x991 () Int)
(declare-fun x1292 () Bool)
(declare-fun x4717 () Int)
(declare-fun x3160 () Int)
(declare-fun x1850 () Bool)
(declare-fun x2025 () Int)
(declare-fun x5633 () Int)
(declare-fun x5642 () Int)
(declare-fun x4287 () Int)
(declare-fun x4337 () Bool)
(declare-fun x2959 () Int)
(declare-fun x4502 () Int)
(declare-fun x3146 () Int)
(declare-fun x3374 () Bool)
(declare-fun x824 () Int)
(declare-fun x4094 () Int)
(declare-fun x2778 () Int)
(declare-fun x3601 () Int)
(declare-fun x2504 () Int)
(declare-fun x2404 () Int)
(declare-fun x1277 () Bool)
(declare-fun x3933 () Int)
(declare-fun x256 () Int)
(declare-fun x2057 () Bool)
(declare-fun x1197 () Int)
(declare-fun x3506 () Int)
(declare-fun x4349 () Bool)
(declare-fun x3082 () Int)
(declare-fun x4356 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x1429 () Int)
(declare-fun x740 () Bool)
(declare-fun x2204 () Int)
(declare-fun x26 () Int)
(declare-fun x5447 () Int)
(declare-fun x2070 () Int)
(declare-fun x2144 () Int)
(declare-fun x5205 () Int)
(declare-fun x3302 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x5682 () Int)
(declare-fun x1561 (Int) Int)
(declare-fun x4944 () Bool)
(declare-fun x823 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x1018 () Int)
(declare-fun x661 () Int)
(declare-fun x3147 () Int)
(declare-fun x4841 () Int)
(declare-fun x2932 () Int)
(declare-fun x3780 () Int)
(declare-fun x770 () Bool)
(declare-fun x5668 () Int)
(declare-fun x1471 () Bool)
(declare-fun x2725 () Int)
(declare-fun x3022 () Int)
(declare-fun x3732 () Bool)
(declare-fun x886 () Bool)
(declare-fun x5047 () Int)
(declare-fun x5166 () Bool)
(declare-fun x915 () Int)
(declare-fun x4822 () Int)
(declare-fun x482 () Bool)
(declare-fun x4864 () Int)
(declare-fun x1743 () Int)
(declare-fun x4602 () Bool)
(declare-fun x2689 (Int) Bool)
(declare-fun x1216 () Int)
(declare-fun x4911 () Int)
(declare-fun x3244 () Int)
(declare-fun x4943 () Int)
(declare-fun x1188 () Int)
(declare-fun x385 () Bool)
(declare-fun x1195 () Int)
(declare-fun x3421 () Int)
(declare-fun x3686 () Bool)
(declare-fun x3502 () Int)
(declare-fun x3314 () Bool)
(declare-fun x369 () Int)
(declare-fun x2962 () Int)
(declare-fun x857 () Bool)
(declare-fun x3695 () Int)
(declare-fun x3088 () Int)
(declare-fun x1704 () Bool)
(declare-fun x400 () Int)
(declare-fun x4595 () Bool)
(declare-fun x1871 () Int)
(declare-fun x685 () Int)
(declare-fun x2762 () Int)
(declare-fun x878 () Bool)
(declare-fun x213 () Int)
(declare-fun x954 () Int)
(declare-fun x5419 () Int)
(declare-fun x4109 () Int)
(declare-fun x1692 () Int)
(declare-fun x4547 () Int)
(declare-fun x2530 () Int)
(declare-fun x3620 () Int)
(declare-fun x2138 () Bool)
(declare-fun x846 () Int)
(declare-fun x2215 () Int)
(declare-fun x2363 () Bool)
(declare-fun x1947 () Int)
(declare-fun x1550 () Int)
(declare-fun x3141 () Int)
(declare-fun x2007 () Int)
(declare-fun x3932 () Bool)
(declare-fun x3114 () Int)
(declare-fun x1088 () Int)
(declare-fun x3056 () Bool)
(declare-fun x411 () Int)
(declare-fun x5546 () Int)
(declare-fun x2641 () Bool)
(declare-fun x1312 () Int)
(declare-fun x3474 () Int)
(declare-fun x2361 () Bool)
(declare-fun x3826 () Bool)
(declare-fun x2652 () Bool)
(declare-fun x3187 () Int)
(declare-fun x5056 () Int)
(declare-fun x96 () Bool)
(declare-fun x1143 () Int)
(declare-fun x3179 () Bool)
(declare-fun x5258 () Int)
(declare-fun x5578 () Int)
(declare-fun x5081 () Int)
(declare-fun x2992 () Bool)
(declare-fun x3230 () Bool)
(declare-fun x222 () Bool)
(declare-fun x628 () Int)
(declare-fun x2709 () Bool)
(declare-fun x5360 () Bool)
(declare-fun x4350 () Int)
(declare-fun x688 () Int)
(declare-fun x1194 () Int)
(declare-fun x4041 () Bool)
(declare-fun x4089 () Int)
(declare-fun x2059 () Int)
(declare-fun x3196 () Int)
(declare-fun x2742 () Bool)
(declare-fun x2280 () Bool)
(declare-fun x4261 () Int)
(declare-fun x1272 () Int)
(declare-fun x2436 () Bool)
(declare-fun x117 () Int)
(declare-fun x4887 () Int)
(declare-fun x4211 () Bool)
(declare-fun x5374 () Int)
(declare-fun x4838 () Int)
(declare-fun x1545 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x2039 () Int)
(declare-fun x28 () Bool)
(declare-fun x5243 () Int)
(declare-fun x1280 () Bool)
(declare-fun x484 () Bool)
(declare-fun x4630 () Int)
(declare-fun x3490 () Bool)
(declare-fun x5503 () Int)
(declare-fun x2767 () Int)
(declare-fun x1333 () Int)
(declare-fun x4104 () Int)
(declare-fun x3457 () Int)
(declare-fun x5174 () Int)
(declare-fun x2619 () Bool)
(declare-fun x2672 () Int)
(declare-fun x5634 () Int)
(declare-fun x877 () Int)
(declare-fun x2098 () Int)
(declare-fun x2567 () Int)
(declare-fun x4297 () Int)
(declare-fun x5008 () Int)
(declare-fun x1784 () Int)
(declare-fun x3872 () Int)
(declare-fun x68 () Bool)
(declare-fun x703 () Bool)
(declare-fun x4971 () Int)
(declare-fun x1402 () Int)
(declare-fun x2455 () Int)
(declare-fun x5478 () Int)
(declare-fun x964 () Int)
(declare-fun x457 () Bool)
(declare-fun x375 () Bool)
(declare-fun x647 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x5560 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1519 () Int)
(declare-fun x1266 () Bool)
(declare-fun x201 () Bool)
(declare-fun x5132 () Int)
(declare-fun x4609 () Int)
(declare-fun x3257 () Int)
(declare-fun x1812 () Bool)
(declare-fun x5451 () Bool)
(declare-fun x741 () Int)
(declare-fun x2727 () Int)
(declare-fun x1766 () Int)
(declare-fun x982 () Int)
(declare-fun x1442 () Bool)
(declare-fun x4745 () Int)
(declare-fun x942 () Int)
(declare-fun x743 () Bool)
(declare-fun x3480 () Int)
(declare-fun x4167 () Bool)
(declare-fun x349 () Int)
(declare-fun x3763 () Int)
(declare-fun x5159 () Int)
(declare-fun x3638 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x1346 (Int) Int)
(declare-fun x132 () Int)
(declare-fun x4584 () Bool)
(declare-fun x645 () Int)
(declare-fun x1598 () Int)
(declare-fun x5068 () Int)
(declare-fun x4617 () Int)
(declare-fun x4169 () Int)
(declare-fun x1056 () Bool)
(declare-fun x1566 () Int)
(declare-fun x2578 () Int)
(declare-fun x4836 () Int)
(declare-fun x1927 () Int)
(declare-fun x3232 () Int)
(declare-fun x2166 () Bool)
(declare-fun x3894 () Bool)
(declare-fun x2371 () Int)
(declare-fun x3154 () Int)
(declare-fun x5667 () Int)
(declare-fun x2298 () Bool)
(declare-fun x3984 () Bool)
(declare-fun x2987 () Bool)
(declare-fun x3218 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x3445 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x4540 () Int)
(declare-fun x1523 () Int)
(declare-fun x3323 () Int)
(declare-fun x2600 () Int)
(declare-fun x2977 () Int)
(declare-fun x64 () Int)
(declare-fun x2285 () Int)
(declare-fun x4080 () Int)
(declare-fun x490 () Int)
(declare-fun x518 () Int)
(declare-fun x2452 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x4491 () Bool)
(declare-fun x3266 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x5646 () Int)
(declare-fun x4883 () Int)
(declare-fun x2893 () Int)
(declare-fun x1983 () Bool)
(declare-fun x2365 () Int)
(declare-fun x3020 () Int)
(declare-fun x4382 () Int)
(declare-fun x4620 () Int)
(declare-fun x5124 () Int)
(declare-fun x1622 () Int)
(declare-fun x2010 () Int)
(declare-fun x806 () Bool)
(declare-fun x3853 () Int)
(declare-fun x80 () Int)
(declare-fun x2797 () Bool)
(declare-fun x3423 () Int)
(declare-fun x5330 () Int)
(declare-fun x1988 () Int)
(declare-fun x2878 () Int)
(declare-fun x1130 () Bool)
(declare-fun x2012 () Int)
(declare-fun x2544 () Int)
(declare-fun x487 () Bool)
(declare-fun x5207 () Int)
(declare-fun x2157 () Bool)
(declare-fun x4936 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x5487 () Bool)
(declare-fun x5394 () Int)
(declare-fun x1659 () Int)
(declare-fun x2077 () Int)
(declare-fun x4869 () Int)
(declare-fun x3289 () Bool)
(declare-fun x5230 () Int)
(declare-fun x3850 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x3766 () Int)
(declare-fun x2291 () Int)
(declare-fun x962 () Int)
(declare-fun x5660 () Bool)
(declare-fun x1559 () Int)
(declare-fun x2849 () Bool)
(declare-fun x5139 () Bool)
(declare-fun x5117 () Int)
(declare-fun x189 () Bool)
(declare-fun x4832 () Int)
(declare-fun x3704 () Int)
(declare-fun x2830 () Int)
(declare-fun x4884 () Bool)
(declare-fun x280 () Int)
(declare-fun x1633 () Bool)
(declare-fun x5608 () Int)
(declare-fun x3681 () Int)
(declare-fun x249 () Int)
(declare-fun x4269 () Bool)
(declare-fun x3261 () Int)
(declare-fun x1296 () Bool)
(declare-fun x4596 () Int)
(declare-fun x5665 () Int)
(declare-fun x4879 () Int)
(declare-fun x4075 (Int Int) Int)
(declare-fun x3383 () Bool)
(declare-fun x5366 () Bool)
(declare-fun x858 () Int)
(declare-fun x5071 () Int)
(declare-fun x3636 () Int)
(declare-fun x5034 () Int)
(declare-fun x307 () Int)
(declare-fun x2186 () Int)
(declare-fun x3843 () Int)
(declare-fun x761 () Bool)
(declare-fun x3297 () Int)
(declare-fun x4497 () Bool)
(declare-fun x1087 () Int)
(declare-fun x1077 () Int)
(declare-fun x1122 (Int) Int)
(declare-fun x4414 () Bool)
(declare-fun x637 () Int)
(declare-fun x3536 () Bool)
(declare-fun x3427 () Int)
(declare-fun x1741 () Int)
(declare-fun x3750 () Bool)
(declare-fun x4933 () Bool)
(declare-fun x3775 () Int)
(declare-fun x3144 () Int)
(declare-fun x2736 () Bool)
(declare-fun x188 () Int)
(declare-fun x1920 () Int)
(declare-fun x1902 () Int)
(declare-fun x3658 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x4268 () Int)
(declare-fun x3787 () Bool)
(declare-fun x3708 () Bool)
(declare-fun x2666 () Int)
(declare-fun x123 () Bool)
(declare-fun x4593 () Bool)
(declare-fun x5651 () Int)
(declare-fun x1670 () Bool)
(declare-fun x5168 (Int) Int)
(declare-fun x1073 () Int)
(declare-fun x1410 () Bool)
(declare-fun x4090 () Bool)
(declare-fun x3213 () Int)
(declare-fun x3957 () Int)
(declare-fun x472 () Int)
(declare-fun x496 () Bool)
(declare-fun x4710 () Int)
(declare-fun x1013 () Int)
(declare-fun x4435 () Int)
(declare-fun x3913 () Bool)
(declare-fun x3155 () Int)
(declare-fun x745 () Bool)
(declare-fun x382 () Bool)
(declare-fun x3560 () Int)
(declare-fun x5249 () Int)
(declare-fun x2900 () Int)
(declare-fun x1999 () Int)
(declare-fun x4756 () Int)
(declare-fun x4690 () Int)
(declare-fun x147 () Int)
(declare-fun x4806 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x5408 () Int)
(declare-fun x4985 (Int) Int)
(declare-fun x1495 () Int)
(declare-fun x1764 () Int)
(declare-fun x214 () Int)
(declare-fun x1238 () Int)
(declare-fun x4304 () Bool)
(declare-fun x3093 (Int) Int)
(declare-fun x5035 () Int)
(declare-fun x1742 () Int)
(declare-fun x2020 () Bool)
(declare-fun x600 () Bool)
(declare-fun x4330 () Bool)
(declare-fun x1880 () Int)
(declare-fun x936 () Int)
(declare-fun x1779 () Int)
(declare-fun x2261 () Int)
(declare-fun x2533 () Bool)
(declare-fun x4615 () Int)
(declare-fun x3541 () Bool)
(declare-fun x2817 () Int)
(declare-fun x700 () Int)
(declare-fun x4326 () Int)
(declare-fun x3743 () Int)
(declare-fun x3701 () Int)
(declare-fun x1757 () Int)
(declare-fun x5563 () Int)
(declare-fun x1816 () Int)
(declare-fun x3436 () Int)
(declare-fun x744 () Int)
(declare-fun x2515 () Bool)
(declare-fun x1745 () Int)
(declare-fun x3944 () Bool)
(declare-fun x2320 () Int)
(declare-fun x2537 (Int) Int)
(declare-fun x1051 () Bool)
(declare-fun x3115 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x1794 () Int)
(declare-fun x282 () Int)
(declare-fun x3219 () Int)
(declare-fun x3116 () Int)
(declare-fun x787 () Int)
(declare-fun x2164 () Int)
(declare-fun x4099 () Int)
(declare-fun x911 () Int)
(declare-fun x3400 () Int)
(declare-fun x1946 () Int)
(declare-fun x2654 () Bool)
(declare-fun x914 () Bool)
(declare-fun x2982 () Bool)
(declare-fun x2870 () Int)
(declare-fun x2257 () Int)
(declare-fun x71 () Bool)
(declare-fun x5519 () Int)
(declare-fun x3612 () Bool)
(declare-fun x522 () Int)
(declare-fun x2248 () Bool)
(declare-fun x1080 () Int)
(declare-fun x175 () Int)
(declare-fun x4095 () Int)
(declare-fun x1712 () Int)
(declare-fun x5617 () Int)
(declare-fun x2795 () Int)
(declare-fun x5300 () Int)
(declare-fun x5537 () Int)
(declare-fun x3546 () Int)
(declare-fun x4885 () Int)
(declare-fun x1032 () Int)
(declare-fun x4370 () Int)
(declare-fun x4147 () Int)
(declare-fun x1283 () Int)
(declare-fun x577 () Int)
(declare-fun x5087 () Int)
(declare-fun x1657 () Int)
(declare-fun x1274 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x4831 () Bool)
(declare-fun x603 () Int)
(declare-fun x2958 () Bool)
(declare-fun x3283 () Bool)
(declare-fun x448 () Int)
(declare-fun x607 () Int)
(declare-fun x4490 () Int)
(declare-fun x1531 () Bool)
(declare-fun x4280 () Bool)
(declare-fun x3181 () Int)
(declare-fun x5462 () Bool)
(declare-fun x90 () Bool)
(declare-fun x5334 () Int)
(declare-fun x3180 () Int)
(declare-fun x2314 () Int)
(declare-fun x2218 () Int)
(declare-fun x4623 () Int)
(declare-fun x1191 () Int)
(declare-fun x2233 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x2450 () Int)
(declare-fun x1998 () Int)
(declare-fun x4995 () Int)
(declare-fun x5437 () Int)
(declare-fun x967 () Int)
(declare-fun x76 () Int)
(declare-fun x1430 () Bool)
(declare-fun x371 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x3205 () Bool)
(declare-fun x1724 () Int)
(declare-fun x571 () Bool)
(declare-fun x2493 () Int)
(declare-fun x2568 () Int)
(declare-fun x142 () Int)
(declare-fun x5055 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x2183 () Int)
(declare-fun x2475 () Int)
(declare-fun x933 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x2620 () Int)
(declare-fun x1374 () Bool)
(declare-fun x1819 () Int)
(declare-fun x2658 () Int)
(declare-fun x4062 () Bool)
(declare-fun x4404 () Int)
(declare-fun x818 () Bool)
(declare-fun x4360 () Bool)
(declare-fun x1124 () Int)
(declare-fun x4421 () Int)
(declare-fun x4020 () Int)
(declare-fun x2333 () Int)
(declare-fun x209 () Int)
(declare-fun x3755 () Int)
(declare-fun x2759 () Int)
(declare-fun x850 () Int)
(declare-fun x88 () Int)
(declare-fun x2377 () Bool)
(declare-fun x3191 () Int)
(declare-fun x329 () Int)
(declare-fun x3953 () Bool)
(declare-fun x368 () Bool)
(declare-fun x1235 () Int)
(declare-fun x4461 () Int)
(declare-fun x3668 () Int)
(declare-fun x1674 () Bool)
(declare-fun x220 () Int)
(declare-fun x2466 () Int)
(declare-fun x2187 () Int)
(declare-fun x3140 () Int)
(declare-fun x4007 () Bool)
(declare-fun x613 () Int)
(declare-fun x314 () Int)
(declare-fun x3726 () Int)
(declare-fun x2882 () Int)
(declare-fun x4565 () Bool)
(declare-fun x343 () Int)
(declare-fun x1951 () Int)
(declare-fun x4403 () Int)
(declare-fun x1725 () Int)
(declare-fun x4378 () Int)
(declare-fun x4967 () Int)
(declare-fun x3432 () Int)
(declare-fun x4927 () Int)
(declare-fun x5430 () Bool)
(declare-fun x4293 () Int)
(declare-fun x4773 () Int)
(declare-fun x4579 () Int)
(declare-fun x2760 () Bool)
(declare-fun x751 () Bool)
(declare-fun x4522 () Bool)
(declare-fun x4054 () Int)
(declare-fun x2685 () Int)
(declare-fun x377 () Bool)
(declare-fun x5561 () Bool)
(declare-fun x438 () Int)
(declare-fun x3092 () Bool)
(declare-fun x3469 () Bool)
(declare-fun x1432 () Int)
(declare-fun x387 () Int)
(declare-fun x3774 () Int)
(declare-fun x4897 () Int)
(declare-fun x2629 () Bool)
(declare-fun x697 () Bool)
(declare-fun x1801 () Int)
(declare-fun x3306 () Bool)
(declare-fun x3582 () Int)
(declare-fun x4624 () Int)
(declare-fun x4856 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x380 () Int)
(declare-fun x4699 () Int)
(declare-fun x2296 () Int)
(declare-fun x638 () Int)
(declare-fun x1278 () Bool)
(declare-fun x404 () Bool)
(declare-fun x3409 () Bool)
(declare-fun x2045 () Int)
(declare-fun x4763 () Int)
(declare-fun x1872 () Int)
(declare-fun x3975 () Int)
(declare-fun x3127 () Bool)
(declare-fun x493 () Int)
(declare-fun x1908 () Int)
(declare-fun x4105 () Int)
(declare-fun x2146 () Int)
(declare-fun x5076 () Int)
(declare-fun x1322 () Int)
(declare-fun x2035 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x4625 () Bool)
(declare-fun x1940 () Int)
(declare-fun x4031 () Int)
(declare-fun x5339 () Bool)
(declare-fun x124 () Int)
(declare-fun x4566 () Int)
(declare-fun x5059 () Int)
(declare-fun x2865 (Int) Int)
(declare-fun x2753 () Int)
(declare-fun x1207 () Int)
(declare-fun x2176 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x5142 () Bool)
(declare-fun x286 () Int)
(declare-fun x1247 () Int)
(declare-fun x2071 () Int)
(declare-fun x3599 () Bool)
(declare-fun x4369 () Bool)
(declare-fun x3990 () Bool)
(declare-fun x4348 () Int)
(declare-fun x2148 () Int)
(declare-fun x5364 () Int)
(declare-fun x587 () Int)
(declare-fun x3777 () Int)
(declare-fun x2883 () Bool)
(declare-fun x3841 () Int)
(declare-fun x4092 () Int)
(declare-fun x4289 () Int)
(declare-fun x4692 () Int)
(declare-fun x845 () Int)
(declare-fun x3210 () Int)
(declare-fun x3418 () Bool)
(declare-fun x756 () Bool)
(declare-fun x3836 () Int)
(declare-fun x5042 () Int)
(declare-fun x5023 () Int)
(declare-fun x1697 () Bool)
(declare-fun x1392 () Int)
(declare-fun x451 () Int)
(declare-fun x4849 () Int)
(declare-fun x4919 () Int)
(declare-fun x3031 () Int)
(declare-fun x2074 () Int)
(declare-fun x2211 () Int)
(declare-fun x4917 () Int)
(declare-fun x1721 () Bool)
(declare-fun x5467 () Bool)
(declare-fun x4772 () Int)
(declare-fun x5656 () Int)
(declare-fun x1555 () Int)
(declare-fun x1571 () Bool)
(declare-fun x25 (Int) Int)
(declare-fun x2719 () Int)
(declare-fun x5046 () Int)
(declare-fun x2402 () Int)
(declare-fun x2373 () Int)
(declare-fun x456 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x597 () Bool)
(declare-fun x207 () Int)
(declare-fun x1603 () Int)
(declare-fun x3635 () Int)
(declare-fun x3380 () Int)
(declare-fun x5635 () Int)
(declare-fun x1831 () Bool)
(declare-fun x215 () Bool)
(declare-fun x2427 () Int)
(declare-fun x211 () Int)
(declare-fun x4018 () Bool)
(declare-fun x3372 () Int)
(declare-fun x5178 () Int)
(declare-fun x5530 () Int)
(declare-fun x4761 () Bool)
(declare-fun x1981 () Int)
(declare-fun x4709 () Int)
(declare-fun x5404 () Int)
(declare-fun x864 () Int)
(declare-fun x1021 () Int)
(declare-fun x620 () Int)
(declare-fun x1773 () Int)
(declare-fun x5472 () Int)
(declare-fun x31 () Int)
(declare-fun x4711 () Int)
(declare-fun x2481 () Bool)
(declare-fun x3788 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x1493 () Int)
(declare-fun x5476 () Int)
(declare-fun x2924 () Bool)
(declare-fun x712 () Int)
(declare-fun x4015 () Bool)
(declare-fun x3861 () Int)
(declare-fun x305 () Int)
(declare-fun x3842 () Int)
(declare-fun x2874 () Bool)
(declare-fun x4651 () Bool)
(declare-fun x5607 () Int)
(declare-fun x1320 () Bool)
(declare-fun x2448 () Int)
(declare-fun x3468 () Int)
(declare-fun x398 () Int)
(declare-fun x275 () Bool)
(declare-fun x1047 () Int)
(declare-fun x4525 () Int)
(declare-fun x4873 () Bool)
(declare-fun x3888 () Int)
(declare-fun x1514 () Int)
(declare-fun x4393 () Int)
(declare-fun x5259 () Int)
(declare-fun x1656 () Int)
(declare-fun x3227 () Bool)
(declare-fun x3077 () Bool)
(declare-fun x1954 () Int)
(declare-fun x3659 () Int)
(declare-fun x321 () Int)
(declare-fun x4592 () Int)
(declare-fun x3053 () Int)
(declare-fun x2387 () Int)
(declare-fun x2417 () Int)
(declare-fun x4192 () Int)
(declare-fun x4046 () Int)
(declare-fun x2250 () Int)
(declare-fun x4266 () Int)
(declare-fun x1681 () Bool)
(declare-fun x1621 () Int)
(declare-fun x3290 () Bool)
(declare-fun x5548 () Int)
(declare-fun x1482 () Int)
(declare-fun x331 () Int)
(declare-fun x973 () Bool)
(declare-fun x1928 () Int)
(declare-fun x2775 () Int)
(declare-fun x4740 () Int)
(declare-fun x4695 () Int)
(declare-fun x979 () Int)
(declare-fun x3171 () Int)
(declare-fun x4771 () Bool)
(declare-fun x1553 () Int)
(declare-fun x1689 () Int)
(declare-fun x295 () Int)
(declare-fun x3361 () Int)
(declare-fun x458 () Int)
(declare-fun x4286 () Int)
(declare-fun x4471 () Int)
(declare-fun x2604 () Bool)
(declare-fun x5621 () Int)
(declare-fun x3840 () Bool)
(declare-fun x1891 () Int)
(declare-fun x2751 () Int)
(declare-fun x872 () Bool)
(declare-fun x837 () Bool)
(declare-fun x626 () Int)
(declare-fun x2822 () Int)
(declare-fun x3880 () Int)
(declare-fun x2226 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x3408 () Bool)
(declare-fun x3249 () Int)
(declare-fun x4270 () Int)
(declare-fun x4215 () Int)
(declare-fun x5338 () Int)
(declare-fun x4159 (Int Int Int Int) Int)
(declare-fun x5154 () Bool)
(declare-fun x263 () Bool)
(declare-fun x4166 () Int)
(declare-fun x3988 () Int)
(declare-fun x1317 () Int)
(declare-fun x1732 () Int)
(declare-fun x2649 () Int)
(declare-fun x467 () Int)
(declare-fun x3844 () Bool)
(declare-fun x1234 () Int)
(declare-fun x3135 () Int)
(declare-fun x5485 () Int)
(declare-fun x4313 () Bool)
(declare-fun x4582 () Bool)
(declare-fun x2330 () Int)
(declare-fun x3325 () Bool)
(declare-fun x4957 () Bool)
(declare-fun x4555 () Int)
(declare-fun x1899 () Bool)
(declare-fun x3407 () Int)
(declare-fun x2339 () Int)
(declare-fun x151 () Bool)
(declare-fun x4193 () Int)
(declare-fun x3405 () Bool)
(declare-fun x5500 () Int)
(declare-fun x121 () Bool)
(declare-fun x5146 () Int)
(declare-fun x5307 () Bool)
(declare-fun x3905 () Bool)
(declare-fun x2358 () Int)
(declare-fun x4802 () Int)
(declare-fun x5687 () Int)
(declare-fun x2662 () Bool)
(declare-fun x406 () Int)
(declare-fun x3246 () Int)
(declare-fun x1325 () Bool)
(declare-fun x1034 () Int)
(declare-fun x1749 () Int)
(declare-fun x2913 () Int)
(declare-fun x951 () Int)
(declare-fun x3716 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x35 () Int)
(declare-fun x17 () Int)
(declare-fun x5179 () Int)
(declare-fun x2282 () Int)
(declare-fun x4074 () Int)
(declare-fun x5248 () Int)
(declare-fun x3931 () Int)
(declare-fun x4125 () Int)
(declare-fun x2031 () Int)
(declare-fun x350 () Int)
(declare-fun x4376 () Int)
(declare-fun x3264 () Int)
(declare-fun x391 (Int) Int)
(declare-fun x2816 () Bool)
(declare-fun x5614 () Int)
(declare-fun x5187 () Int)
(declare-fun x2979 () Int)
(declare-fun x3507 () Bool)
(declare-fun x535 () Int)
(declare-fun x2682 () Int)
(declare-fun x288 () Int)
(declare-fun x4401 () Int)
(declare-fun x5365 () Bool)
(declare-fun x5314 () Bool)
(declare-fun x5648 () Int)
(declare-fun x1763 () Int)
(declare-fun x4788 () Int)
(declare-fun x3382 () Int)
(declare-fun x1344 () Int)
(declare-fun x3050 () Bool)
(declare-fun x1960 () Int)
(declare-fun x1212 () Int)
(declare-fun x4616 () Bool)
(declare-fun x2995 () Int)
(declare-fun x2488 () Bool)
(declare-fun x3319 () Int)
(declare-fun x5012 () Bool)
(declare-fun x2739 () Int)
(declare-fun x4514 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x322 () Int)
(declare-fun x715 () Int)
(declare-fun x705 () Int)
(declare-fun x5674 () Int)
(declare-fun x1807 () Int)
(declare-fun x2831 () Int)
(declare-fun x145 () Int)
(declare-fun x1181 () Bool)
(declare-fun x2717 () Int)
(declare-fun x2829 () Int)
(declare-fun x4438 () Int)
(declare-fun x3278 () Int)
(declare-fun x3001 () Int)
(declare-fun x4622 () Bool)
(declare-fun x5632 () Int)
(declare-fun x547 () Int)
(declare-fun x5108 () Int)
(declare-fun x3739 () Int)
(declare-fun x2592 () Int)
(declare-fun x1368 () Int)
(declare-fun x3707 () Bool)
(declare-fun x5177 () Int)
(declare-fun x1282 () Bool)
(declare-fun x714 () Int)
(declare-fun x244 () Bool)
(declare-fun x5122 () Int)
(declare-fun x4801 () Int)
(declare-fun x30 () Bool)
(declare-fun x3522 () Int)
(declare-fun x330 () Int)
(declare-fun x2396 () Int)
(declare-fun x4691 () Bool)
(declare-fun x3107 () Int)
(declare-fun x1064 () Int)
(declare-fun x4573 () Bool)
(declare-fun x5586 () Int)
(declare-fun x4544 () Int)
(declare-fun x3871 () Int)
(declare-fun x5495 () Bool)
(declare-fun x1978 () Int)
(declare-fun x4019 () Int)
(declare-fun x3358 () Int)
(declare-fun x4190 () Int)
(declare-fun x2588 () Int)
(declare-fun x3747 () Bool)
(declare-fun x514 () Bool)
(declare-fun x2372 () Int)
(declare-fun x771 () Int)
(declare-fun x5241 () Bool)
(declare-fun x4765 () Bool)
(declare-fun x4113 () Bool)
(declare-fun x2789 () Int)
(declare-fun x2584 () Int)
(declare-fun x3118 () Int)
(declare-fun x779 () Bool)
(declare-fun x4309 () Bool)
(declare-fun x3064 () Int)
(declare-fun x3110 () Int)
(declare-fun x3993 () Int)
(declare-fun x3797 () Int)
(declare-fun x4912 () Bool)
(declare-fun x860 () Int)
(declare-fun x3600 () Bool)
(declare-fun x512 () Int)
(declare-fun x3859 () Int)
(declare-fun x2558 () Int)
(declare-fun x739 () Bool)
(declare-fun x5458 () Int)
(declare-fun x1091 () Int)
(declare-fun x5125 () Int)
(declare-fun x2999 () Int)
(declare-fun x1335 () Bool)
(declare-fun x3722 () Bool)
(declare-fun x5350 () Int)
(declare-fun x4580 () Int)
(declare-fun x1628 () Bool)
(declare-fun x1752 () Int)
(declare-fun x3304 () Int)
(declare-fun x2472 () Int)
(declare-fun x3567 () Int)
(declare-fun x2284 () Bool)
(declare-fun x4323 () Int)
(declare-fun x2872 () Int)
(declare-fun x5474 () Int)
(declare-fun x1714 () Bool)
(declare-fun x2262 () Int)
(declare-fun x2997 () Int)
(declare-fun x1211 () Int)
(declare-fun x130 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x5024 () Int)
(declare-fun x5293 () Int)
(declare-fun x875 () Int)
(declare-fun x3942 () Int)
(declare-fun x901 (Int) Int)
(declare-fun x4762 () Int)
(declare-fun x3095 () Int)
(declare-fun x2263 () Bool)
(declare-fun x3885 () Int)
(declare-fun x4853 () Int)
(declare-fun x3173 () Bool)
(declare-fun x928 () Int)
(declare-fun x1729 () Int)
(declare-fun x397 () Int)
(declare-fun x1027 () Int)
(declare-fun x1878 () Int)
(declare-fun x1004 () Int)
(declare-fun x584 () Int)
(declare-fun x1660 () Int)
(declare-fun x5405 () Bool)
(declare-fun x5658 () Int)
(declare-fun x3364 () Bool)
(declare-fun x882 () Int)
(declare-fun x4749 () Int)
(declare-fun x4807 () Int)
(declare-fun x4558 () Bool)
(declare-fun x1963 () Int)
(declare-fun x5386 () Int)
(declare-fun x2442 () Int)
(declare-fun x270 () Bool)
(declare-fun x3585 () Int)
(declare-fun x1462 () Int)
(declare-fun x4253 () Int)
(declare-fun x5160 () Bool)
(declare-fun x2768 () Int)
(declare-fun x2293 () Int)
(declare-fun x3136 () Int)
(declare-fun x906 () Int)
(declare-fun x1033 () Int)
(declare-fun x795 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x1682 () Int)
(declare-fun x2642 () Int)
(declare-fun x4589 () Int)
(declare-fun x625 () Bool)
(declare-fun x4645 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x308 () Int)
(declare-fun x4285 () Int)
(declare-fun x2113 () Int)
(declare-fun x1669 () Bool)
(declare-fun x636 () Bool)
(declare-fun x104 () Bool)
(declare-fun x2726 () Int)
(declare-fun x5420 () Int)
(declare-fun x5329 () Int)
(declare-fun x589 () Int)
(declare-fun x99 () Bool)
(declare-fun x340 () Int)
(declare-fun x2407 () Int)
(declare-fun x3839 () Bool)
(declare-fun x4999 () Int)
(declare-fun x554 () Bool)
(declare-fun x772 () Int)
(declare-fun x3414 () Bool)
(declare-fun x1591 () Int)
(declare-fun x1985 () Int)
(declare-fun x2603 () Int)
(declare-fun x5106 () Int)
(declare-fun x4227 () Bool)
(declare-fun x5629 () Bool)
(declare-fun x2389 () Bool)
(declare-fun x856 () Bool)
(declare-fun x5346 () Int)
(declare-fun x5183 () Bool)
(declare-fun x4518 () Bool)
(declare-fun x4110 () Int)
(declare-fun x1039 () Int)
(declare-fun x4346 () Int)
(declare-fun x3063 () Bool)
(declare-fun x916 () Int)
(declare-fun x421 () Int)
(declare-fun x1589 () Int)
(declare-fun x2843 () Int)
(declare-fun x2824 () Bool)
(declare-fun x3720 () Int)
(declare-fun x3476 () Bool)
(declare-fun x888 () Int)
(declare-fun x36 () Int)
(declare-fun x2724 () Bool)
(declare-fun x5517 () Int)
(declare-fun x1625 () Bool)
(declare-fun x155 () Int)
(declare-fun x297 () Bool)
(declare-fun x5170 () Bool)
(declare-fun x5111 () Int)
(declare-fun x4743 () Int)
(declare-fun x4891 () Bool)
(declare-fun x2922 () Int)
(declare-fun x871 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x2344 () Int)
(declare-fun x1883 () Int)
(declare-fun x2360 (Int) Int)
(declare-fun x450 () Int)
(declare-fun x2765 () Int)
(declare-fun x4411 () Int)
(declare-fun x5370 () Int)
(declare-fun x2668 () Bool)
(declare-fun x5604 () Bool)
(declare-fun x5559 () Bool)
(declare-fun x2495 () Bool)
(declare-fun x2290 () Int)
(declare-fun x4236 () Bool)
(declare-fun x3322 () Int)
(declare-fun x204 () Int)
(declare-fun x4198 () Bool)
(declare-fun x202 () Int)
(declare-fun x2679 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x5380 () Int)
(declare-fun x326 () Int)
(declare-fun x2228 () Int)
(declare-fun x1658 () Int)
(declare-fun x4798 () Bool)
(declare-fun x3381 () Int)
(declare-fun x216 () Int)
(declare-fun x1002 () Bool)
(declare-fun x4541 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x2847 () Int)
(declare-fun x3783 () Bool)
(declare-fun x3439 () Int)
(declare-fun x1361 () Bool)
(declare-fun x4453 () Int)
(declare-fun x1150 () Int)
(declare-fun x1391 () Bool)
(declare-fun x4045 () Int)
(declare-fun x4247 () Int)
(declare-fun x112 () Int)
(declare-fun x4564 () Int)
(declare-fun x4826 () Int)
(declare-fun x2597 () Int)
(declare-fun x2490 () Bool)
(declare-fun x4172 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x267 () Int)
(declare-fun x2896 () Int)
(declare-fun x5589 () Int)
(declare-fun x5100 () Int)
(declare-fun x5664 () Bool)
(declare-fun x956 () Int)
(declare-fun x2 () Bool)
(declare-fun x1910 () Int)
(declare-fun x3307 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x4529 () Int)
(declare-fun x1671 () Bool)
(declare-fun x5015 (Int) Int)
(declare-fun x3017 (Int) Int)
(declare-fun x78 () Int)
(declare-fun x5449 () Int)
(declare-fun x2170 () Int)
(declare-fun x1393 () Int)
(declare-fun x2691 () Bool)
(declare-fun x5148 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x3000 () Int)
(declare-fun x3078 () Bool)
(declare-fun x4868 () Int)
(declare-fun x1997 () Int)
(declare-fun x641 () Int)
(declare-fun x234 () Int)
(declare-fun x1501 () Bool)
(declare-fun x5600 () Int)
(declare-fun x2700 () Bool)
(declare-fun x1867 () Int)
(declare-fun x1008 () Int)
(declare-fun x3450 () Bool)
(declare-fun x3098 (Int) Int)
(declare-fun x3429 () Int)
(declare-fun x971 () Bool)
(declare-fun x2569 () Int)
(declare-fun x1863 () Int)
(declare-fun x489 () Int)
(declare-fun x2158 () Bool)
(declare-fun x62 () Int)
(declare-fun x3864 () Int)
(declare-fun x289 () Int)
(declare-fun x2005 () Int)
(declare-fun x160 () Bool)
(declare-fun x5326 () Bool)
(declare-fun x4916 () Int)
(declare-fun x4777 () Bool)
(declare-fun x3907 () Bool)
(declare-fun x930 () Bool)
(declare-fun x4079 () Int)
(declare-fun x1449 () Int)
(declare-fun x2892 () Int)
(declare-fun x1584 () Bool)
(declare-fun x652 () Bool)
(declare-fun x4530 () Bool)
(declare-fun x5028 () Int)
(declare-fun x3672 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x2308 () Int)
(declare-fun x5423 () Int)
(declare-fun x1061 () Int)
(declare-fun x5439 () Int)
(declare-fun x5557 () Int)
(declare-fun x2801 () Int)
(declare-fun x4452 () Int)
(declare-fun x4696 () Bool)
(declare-fun x5052 () Int)
(declare-fun x4481 () Int)
(declare-fun x5382 () Int)
(declare-fun x4402 () Int)
(declare-fun x2671 () Int)
(declare-fun x190 () Int)
(declare-fun x310 () Bool)
(declare-fun x2838 () Bool)
(declare-fun x800 () Int)
(declare-fun x4380 () Bool)
(declare-fun x4705 () Int)
(declare-fun x2631 () Int)
(declare-fun x2841 () Int)
(declare-fun x4174 () Bool)
(declare-fun x634 () Int)
(declare-fun x1699 () Int)
(declare-fun x357 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1720 () Int)
(declare-fun x564 () Int)
(declare-fun x3915 () Bool)
(declare-fun x5538 () Int)
(declare-fun x2552 () Int)
(declare-fun x579 () Bool)
(declare-fun x1623 () Int)
(declare-fun x2410 () Int)
(declare-fun x4858 () Int)
(declare-fun x2984 () Int)
(declare-fun x2445 () Int)
(declare-fun x1498 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x5134 () Bool)
(declare-fun x5064 () Bool)
(declare-fun x657 () Bool)
(declare-fun x3376 (Int) Int)
(declare-fun x18 () Int)
(declare-fun x1236 () Int)
(declare-fun x1220 () Bool)
(declare-fun x4055 () Bool)
(declare-fun x1972 () Int)
(declare-fun x4123 () Int)
(declare-fun x5063 () Int)
(declare-fun x5075 () Bool)
(declare-fun x424 () Bool)
(declare-fun x4097 () Int)
(declare-fun x67 () Bool)
(declare-fun x3697 () Int)
(declare-fun x3139 () Int)
(declare-fun x839 () Bool)
(declare-fun x4669 () Int)
(declare-fun x2255 () Int)
(declare-fun x4629 () Int)
(declare-fun x4243 () Int)
(declare-fun x152 () Int)
(declare-fun x2845 () Int)
(declare-fun x2494 () Int)
(declare-fun x889 () Int)
(declare-fun x1092 () Int)
(declare-fun x1146 () Int)
(declare-fun x3096 () Int)
(declare-fun x4746 () Int)
(declare-fun x3617 () Int)
(declare-fun x4353 () Int)
(declare-fun x3285 () Bool)
(declare-fun x92 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x4852 () Bool)
(declare-fun x233 () Int)
(declare-fun x5283 () Bool)
(declare-fun x5341 () Int)
(declare-fun x3819 () Int)
(declare-fun x4643 () Bool)
(declare-fun x596 () Int)
(declare-fun x533 (Int) Int)
(declare-fun x4551 () Int)
(declare-fun x4426 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x4373 () Int)
(declare-fun x4087 () Int)
(declare-fun x2294 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x4056 () Int)
(declare-fun x4071 () Int)
(declare-fun x5661 () Bool)
(declare-fun x834 () Int)
(declare-fun x1824 () Int)
(declare-fun x3677 () Int)
(declare-fun x3592 () Int)
(declare-fun x2236 () Bool)
(declare-fun x1894 (Int) Int)
(declare-fun x4146 () Bool)
(declare-fun x5263 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x3005 () Int)
(declare-fun x3224 () Int)
(declare-fun x5459 () Bool)
(declare-fun x5240 () Bool)
(declare-fun x5041 () Int)
(declare-fun x2471 () Int)
(declare-fun x1548 () Int)
(declare-fun x1477 () Bool)
(declare-fun x5073 () Int)
(declare-fun x1619 () Int)
(declare-fun x4078 () Bool)
(declare-fun x4737 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x5238 () Int)
(declare-fun x5544 () Bool)
(declare-fun x199 () Int)
(declare-fun x3656 () Int)
(declare-fun x5358 () Bool)
(declare-fun x1138 () Int)
(declare-fun x3945 () Bool)
(declare-fun x1117 () Int)
(declare-fun x4677 () Bool)
(declare-fun x3248 () Int)
(declare-fun x2249 () Int)
(declare-fun x738 () Bool)
(declare-fun x3657 () Bool)
(declare-fun x5475 () Bool)
(declare-fun x3109 () Int)
(declare-fun x3669 () Bool)
(declare-fun x3936 (Int) Int)
(declare-fun x2909 () Int)
(declare-fun x2018 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x3970 () Int)
(declare-fun x3194 () Int)
(declare-fun x2536 () Int)
(declare-fun x3834 () Int)
(declare-fun x184 () Int)
(declare-fun x2200 () Int)
(declare-fun x2921 () Int)
(declare-fun x2182 () Int)
(declare-fun x5138 () Int)
(declare-fun x642 () Bool)
(declare-fun x3712 () Int)
(declare-fun x2328 () Bool)
(declare-fun x674 () Int)
(declare-fun x5515 () Int)
(declare-fun x5644 () Bool)
(declare-fun x497 () Int)
(declare-fun x205 () Bool)
(declare-fun x1796 () Int)
(declare-fun x3247 () Int)
(declare-fun x1237 () Int)
(declare-fun x5484 () Int)
(declare-fun x2132 () Bool)
(declare-fun x529 () Int)
(declare-fun x1203 () Bool)
(declare-fun x702 () Bool)
(declare-fun x531 () Int)
(declare-fun x2750 () Bool)
(declare-fun x1085 () Int)
(declare-fun x3214 () Bool)
(declare-fun x695 () Bool)
(declare-fun x4842 () Bool)
(declare-fun x149 () Int)
(declare-fun x3197 () Int)
(declare-fun x4662 () Int)
(declare-fun x3538 () Int)
(declare-fun x2702 () Int)
(declare-fun x3061 () Bool)
(declare-fun x5040 () Bool)
(declare-fun x664 () Int)
(declare-fun x2950 () Int)
(declare-fun x3539 () Int)
(declare-fun x294 () Bool)
(declare-fun x4627 () Int)
(declare-fun x1511 () Int)
(declare-fun x2788 () Bool)
(declare-fun x4011 () Int)
(declare-fun x266 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x5060 () Int)
(declare-fun x796 () Bool)
(declare-fun x2470 () Int)
(declare-fun x5000 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1604 () Bool)
(declare-fun x4925 () Int)
(declare-fun x1915 () Bool)
(declare-fun x3679 () Int)
(declare-fun x5568 () Int)
(declare-fun x4482 () Int)
(declare-fun x479 () Bool)
(declare-fun x580 () Bool)
(declare-fun x3625 () Int)
(declare-fun x752 () Int)
(declare-fun x2622 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x4050 () Int)
(declare-fun x2438 () Int)
(declare-fun x1 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x5078 () Int)
(declare-fun x1152 () Int)
(declare-fun x3916 () Bool)
(declare-fun x788 () Bool)
(declare-fun x1547 () Int)
(declare-fun x2553 () Int)
(declare-fun x1461 () Int)
(declare-fun x4577 () Int)
(declare-fun x3966 () Int)
(declare-fun x618 () Int)
(declare-fun x3920 () Bool)
(declare-fun x5020 () Int)
(declare-fun x1249 () Int)
(declare-fun x341 () Int)
(declare-fun x3879 () Int)
(declare-fun x5031 () Bool)
(declare-fun x5119 () Int)
(declare-fun x1613 () Bool)
(declare-fun x3817 () Bool)
(declare-fun x4666 () Bool)
(declare-fun x2621 () Bool)
(declare-fun x219 () Int)
(declare-fun x617 () Int)
(declare-fun x1110 () Int)
(declare-fun x134 () Int)
(declare-fun x4257 () Int)
(declare-fun x1239 () Int)
(declare-fun x3604 () Int)
(declare-fun x5291 () Int)
(declare-fun x3789 (Int) Int)
(declare-fun x2703 () Bool)
(declare-fun x676 () Bool)
(declare-fun x2435 () Int)
(declare-fun x925 () Int)
(declare-fun x5344 () Bool)
(declare-fun x4292 () Int)
(declare-fun x4923 () Int)
(declare-fun x3939 () Int)
(declare-fun x254 () Bool)
(declare-fun x4331 () Bool)
(declare-fun x4173 () Int)
(declare-fun x2209 () Int)
(declare-fun x3847 () Bool)
(declare-fun x5553 () Int)
(declare-fun x5145 () Int)
(declare-fun x5226 () Int)
(declare-fun x3394 () Int)
(declare-fun x5152 () Bool)
(declare-fun x4279 () Int)
(declare-fun x1050 () Int)
(declare-fun x4556 () Int)
(declare-fun x2667 () Int)
(declare-fun x880 () Bool)
(declare-fun x5204 () Int)
(declare-fun x212 () Bool)
(declare-fun x4655 () Int)
(declare-fun x1740 () Int)
(declare-fun x1095 () Int)
(declare-fun x3703 () Int)
(declare-fun x5593 () Int)
(declare-fun x224 () Int)
(declare-fun x3482 () Bool)
(declare-fun x4550 () Int)
(declare-fun x4890 () Int)
(declare-fun x3986 () Int)
(declare-fun x4513 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x261 () Int)
(declare-fun x427 () Int)
(declare-fun x5587 () Bool)
(declare-fun x3553 () Int)
(declare-fun x737 () Int)
(declare-fun x3486 () Bool)
(declare-fun x2983 () Bool)
(declare-fun x4429 () Int)
(declare-fun x2769 () Bool)
(declare-fun x3203 () Int)
(declare-fun x2926 () Int)
(declare-fun x1144 () Int)
(declare-fun x2403 () Int)
(declare-fun x3515 () Int)
(declare-fun x810 () Int)
(declare-fun x4483 () Int)
(declare-fun x828 () Int)
(declare-fun x3212 () Int)
(declare-fun x223 () Bool)
(declare-fun x1860 () Int)
(declare-fun x829 () Int)
(declare-fun x1897 () Int)
(declare-fun x2041 () Int)
(declare-fun x2573 () Int)
(declare-fun x3153 () Int)
(declare-fun x4324 () Int)
(declare-fun x2602 () Int)
(declare-fun x622 () Bool)
(declare-fun x2131 () Int)
(declare-fun x4485 () Bool)
(declare-fun x4828 () Int)
(declare-fun x4789 () Bool)
(declare-fun x1162 () Int)
(declare-fun x4613 () Int)
(declare-fun x1554 () Int)
(declare-fun x3565 () Int)
(declare-fun x492 () Int)
(declare-fun x4162 () Int)
(declare-fun x4086 () Bool)
(declare-fun x1557 () Int)
(declare-fun x1581 () Int)
(declare-fun x2208 () Bool)
(declare-fun x5552 () Int)
(declare-fun x2425 () Int)
(declare-fun x3463 () Int)
(declare-fun x4221 () Int)
(declare-fun x545 () Int)
(declare-fun x2413 () Int)
(declare-fun x2125 () Int)
(declare-fun x4447 () Int)
(declare-fun x764 () Bool)
(declare-fun x3572 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x4395 () Int)
(declare-fun x1903 () Int)
(declare-fun x432 () Int)
(declare-fun x2561 () Int)
(declare-fun x3590 () Int)
(declare-fun x1076 () Bool)
(declare-fun x502 (Int) Int)
(declare-fun x935 () Int)
(declare-fun x4294 () Int)
(declare-fun x1035 () Int)
(declare-fun x1593 () Bool)
(declare-fun x1121 () Int)
(declare-fun x4049 () Int)
(declare-fun x3029 () Int)
(declare-fun x3142 (Int) Int)
(declare-fun x5113 () Bool)
(declare-fun x4963 () Int)
(declare-fun x4563 () Int)
(declare-fun x2359 () Bool)
(declare-fun x3389 () Int)
(declare-fun x1229 () Int)
(declare-fun x1426 () Int)
(declare-fun x2127 () Int)
(declare-fun x3921 () Int)
(declare-fun x1575 () Int)
(declare-fun x1299 () Int)
(declare-fun x2518 () Bool)
(declare-fun x4940 () Int)
(declare-fun x148 () Int)
(declare-fun x1597 () Int)
(declare-fun x210 (Int Int) Int)
(declare-fun x4153 () Bool)
(declare-fun x4628 () Int)
(declare-fun x4351 () Int)
(declare-fun x1452 () Int)
(declare-fun x4713 () Bool)
(declare-fun x578 () Int)
(declare-fun x3828 () Int)
(declare-fun x4505 () Int)
(declare-fun x344 () Int)
(declare-fun x4462 () Int)
(declare-fun x2887 () Int)
(declare-fun x4456 () Int)
(declare-fun x2473 () Int)
(declare-fun x1663 () Bool)
(declare-fun x3039 () Int)
(declare-fun x3964 () Int)
(declare-fun x3737 () Int)
(declare-fun x3028 () Int)
(declare-fun x639 () Int)
(declare-fun x3813 () Int)
(declare-fun x1525 () Int)
(declare-fun x1953 () Int)
(declare-fun x4954 () Int)
(declare-fun x890 () Int)
(declare-fun x2380 () Int)
(declare-fun x3543 () Int)
(declare-fun x3347 () Int)
(declare-fun x5616 () Int)
(declare-fun x1857 () Int)
(declare-fun x780 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x3276 () Int)
(declare-fun x2514 () Bool)
(declare-fun x4990 () Bool)
(declare-fun x5613 () Bool)
(declare-fun x5511 () Int)
(declare-fun x2842 () Bool)
(declare-fun x4567 () Int)
(declare-fun x2507 () Int)
(declare-fun x4851 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x4276 () Bool)
(declare-fun x644 () Int)
(declare-fun x3104 () Int)
(declare-fun x526 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x3045 () Int)
(declare-fun x1881 () Int)
(declare-fun x3991 () Int)
(declare-fun x884 () Int)
(declare-fun x2036 () Int)
(declare-fun x5390 () Int)
(declare-fun x3547 () Int)
(declare-fun x3207 () Bool)
(declare-fun x2266 () Int)
(declare-fun x4507 () Bool)
(declare-fun x3258 (Int) Int)
(declare-fun x742 () Bool)
(declare-fun x3760 () Bool)
(declare-fun x1448 () Int)
(declare-fun x3622 () Bool)
(declare-fun x3130 () Int)
(declare-fun x3291 () Int)
(declare-fun x100 () Int)
(declare-fun x1833 () Int)
(declare-fun x1120 () Int)
(declare-fun x3357 () Int)
(declare-fun x4764 () Int)
(declare-fun x4671 () Int)
(declare-fun x5252 () Int)
(declare-fun x2794 () Int)
(declare-fun x5685 () Int)
(declare-fun x3887 (Int) Int)
(declare-fun x1708 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x5393 () Int)
(declare-fun x3350 () Bool)
(declare-fun x1494 () Int)
(declare-fun x4637 () Int)
(declare-fun x3645 () Bool)
(declare-fun x5465 () Int)
(declare-fun x2241 () Int)
(declare-fun x4594 () Bool)
(declare-fun x3751 () Int)
(declare-fun x5541 () Int)
(declare-fun x5425 (Int) Int)
(declare-fun x840 () Int)
(declare-fun x4044 () Int)
(declare-fun x3342 (Int) Int)
(declare-fun x3367 () Int)
(declare-fun x3294 () Int)
(declare-fun x2110 () Int)
(declare-fun x3863 (Int) Int)
(declare-fun x2072 () Int)
(declare-fun x3299 () Int)
(declare-fun x1172 () Int)
(declare-fun x3169 () Int)
(declare-fun x1308 () Int)
(declare-fun x325 () Int)
(declare-fun x4988 () Int)
(declare-fun x1156 () Bool)
(declare-fun x4600 () Int)
(declare-fun x5255 () Int)
(declare-fun x893 () Int)
(declare-fun x499 () Int)
(declare-fun x3580 () Int)
(declare-fun x3253 () Int)
(declare-fun x747 () Int)
(declare-fun x5592 () Int)
(declare-fun x3398 () Int)
(declare-fun x1343 () Int)
(declare-fun x5036 () Bool)
(declare-fun x5536 () Int)
(declare-fun x1774 (Int) Int)
(declare-fun x4636 () Int)
(declare-fun x4938 () Int)
(declare-fun x2119 () Int)
(declare-fun x5244 () Int)
(declare-fun x3667 () Int)
(declare-fun x5463 () Int)
(declare-fun x4774 () Int)
(declare-fun x384 () Int)
(declare-fun x2376 () Bool)
(declare-fun x2706 () Int)
(declare-fun x1568 () Int)
(declare-fun x3782 () Int)
(declare-fun x461 () Int)
(declare-fun x5663 () Int)
(declare-fun x1691 () Int)
(declare-fun x2028 () Bool)
(declare-fun x5043 () Int)
(declare-fun x4974 () Int)
(declare-fun x1007 () Int)
(declare-fun x1535 () Int)
(declare-fun x2786 (Int) Int)
(declare-fun x463 () Bool)
(declare-fun x4474 () Int)
(declare-fun x1182 () Int)
(declare-fun x1381 () Int)
(declare-fun x2095 () Bool)
(declare-fun x849 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x4255 () Int)
(declare-fun x5295 () Int)
(declare-fun x3475 () Int)
(declare-fun x3193 () Int)
(declare-fun x619 () Int)
(declare-fun x862 () Int)
(declare-fun x5591 () Bool)
(declare-fun x696 () Int)
(declare-fun x2554 () Bool)
(declare-fun x5359 () Int)
(declare-fun x5245 () Bool)
(declare-fun x1813 () Int)
(declare-fun x4658 () Int)
(declare-fun x822 () Int)
(declare-fun x2269 () Bool)
(declare-fun x2787 () Int)
(declare-fun x4034 () Int)
(declare-fun x1173 () Int)
(declare-fun x1395 () Int)
(declare-fun x5395 () Int)
(declare-fun x4689 () Bool)
(declare-fun x468 () Int)
(declare-fun x504 () Int)
(declare-fun x1108 () Int)
(declare-fun x3387 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x2509 () Int)
(declare-fun x3727 () Int)
(declare-fun x3503 () Int)
(declare-fun x413 () Int)
(declare-fun x2112 () Int)
(declare-fun x5681 () Int)
(declare-fun x3365 () Int)
(declare-fun x239 () Int)
(declare-fun x1123 () Bool)
(declare-fun x2920 () Bool)
(declare-fun x361 () Bool)
(declare-fun x560 () Int)
(declare-fun x2812 () Int)
(declare-fun x342 () Bool)
(declare-fun x4357 () Int)
(declare-fun x5061 () Int)
(declare-fun x3175 () Bool)
(declare-fun x2184 () Int)
(declare-fun x2639 () Bool)
(declare-fun x2047 () Bool)
(declare-fun x3928 () Int)
(declare-fun x4472 () Bool)
(declare-fun x2773 () Int)
(declare-fun x2779 (Int Int) Int)
(declare-fun x5550 (Int) Int)
(declare-fun x2341 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x651 () Int)
(declare-fun x726 () Int)
(declare-fun x5186 () Int)
(declare-fun x917 () Int)
(declare-fun x5083 () Int)
(declare-fun x5516 () Int)
(declare-fun x4420 () Int)
(declare-fun x3694 () Bool)
(declare-fun x5436 () Bool)
(declare-fun x1380 () Int)
(declare-fun x1632 () Int)
(declare-fun x2741 () Int)
(declare-fun x2861 () Bool)
(declare-fun x336 () Int)
(declare-fun x3968 () Bool)
(declare-fun x445 () Bool)
(declare-fun x3619 (Int Int Int Int Int Int Int) Int)
(declare-fun x1673 () Bool)
(declare-fun x704 () Int)
(declare-fun x3065 () Bool)
(declare-fun x2628 () Int)
(declare-fun x2321 (Int) Int)
(declare-fun x4997 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x4803 () Int)
(declare-fun x2268 () Int)
(declare-fun x4385 () Int)
(declare-fun x692 () Bool)
(declare-fun x2190 () Int)
(declare-fun x478 () Int)
(declare-fun x111 () Int)
(declare-fun x3343 () Bool)
(declare-fun x1370 () Int)
(declare-fun x5164 () Int)
(declare-fun x4536 () Int)
(declare-fun x1170 () Bool)
(declare-fun x127 () Int)
(declare-fun x447 () Int)
(declare-fun x2933 () Int)
(declare-fun x1635 () Int)
(declare-fun x4178 () Int)
(declare-fun x1137 () Bool)
(declare-fun x3072 () Int)
(declare-fun x5675 () Int)
(declare-fun x4521 () Int)
(declare-fun x5209 () Int)
(declare-fun x2946 () Int)
(declare-fun x3982 () Int)
(declare-fun x4583 () Int)
(declare-fun x690 () Bool)
(declare-fun x2854 () Int)
(declare-fun x1248 () Int)
(declare-fun x409 () Int)
(declare-fun x2610 () Int)
(declare-fun x4139 () Int)
(declare-fun x1518 () Int)
(declare-fun x1300 () Int)
(declare-fun x5566 () Int)
(declare-fun x802 () Int)
(declare-fun x3455 () Bool)
(declare-fun x4920 () Bool)
(declare-fun x2097 () Int)
(declare-fun x1049 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x1178 () Int)
(declare-fun x1515 () Int)
(declare-fun x3126 () Bool)
(declare-fun x4604 () Int)
(declare-fun x3333 () Bool)
(declare-fun x3371 () Int)
(declare-fun x2994 () Int)
(declare-fun x760 () Int)
(declare-fun x4650 () Int)
(declare-fun x977 () Int)
(declare-fun x5357 () Bool)
(declare-fun x5190 () Int)
(declare-fun x3259 () Int)
(declare-fun x4900 () Int)
(declare-fun x5114 () Bool)
(declare-fun x194 () Int)
(declare-fun x4416 () Int)
(declare-fun x2331 () Bool)
(declare-fun x3856 () Int)
(declare-fun x3862 () Int)
(declare-fun x4634 () Bool)
(declare-fun x1615 () Int)
(declare-fun x4302 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x4375 () Int)
(declare-fun x5573 () Int)
(declare-fun x3201 () Int)
(declare-fun x1109 () Int)
(declare-fun x3831 () Int)
(declare-fun x4687 () Int)
(declare-fun x1826 () Int)
(declare-fun x1838 () Int)
(declare-fun x958 () Int)
(declare-fun x3188 () Int)
(declare-fun x4264 () Int)
(declare-fun x1097 () Bool)
(declare-fun x4427 () Int)
(declare-fun x4969 () Int)
(declare-fun x3485 () Int)
(declare-fun x4405 () Int)
(declare-fun x4431 () Int)
(declare-fun x4098 () Int)
(declare-fun x5044 () Bool)
(declare-fun x693 () Bool)
(declare-fun x2868 () Bool)
(declare-fun x3651 () Bool)
(declare-fun x2009 (Int) Int)
(declare-fun x370 () Int)
(declare-fun x3767 () Bool)
(declare-fun x2411 () Int)
(declare-fun x2645 () Int)
(declare-fun x4531 () Int)
(declare-fun x2965 () Int)
(declare-fun x2069 () Int)
(declare-fun x4817 () Int)
(declare-fun x927 () Int)
(declare-fun x2688 () Bool)
(declare-fun x755 () Int)
(declare-fun x827 () Int)
(declare-fun x3941 () Bool)
(declare-fun x3084 () Int)
(declare-fun x1650 () Bool)
(declare-fun x4448 () Int)
(declare-fun x1821 () Int)
(declare-fun x1397 () Int)
(declare-fun x2021 () Int)
(declare-fun x5165 () Int)
(declare-fun x4344 () Bool)
(declare-fun x4928 () Int)
(declare-fun x1125 () Int)
(declare-fun x1083 () Int)
(declare-fun x3105 () Bool)
(declare-fun x2756 () Int)
(declare-fun x2590 () Int)
(declare-fun x5351 () Int)
(declare-fun x3047 () Int)
(declare-fun x5562 () Int)
(declare-fun x3479 () Int)
(declare-fun x4004 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x2288 () Int)
(declare-fun x2698 () Bool)
(declare-fun x2764 () Int)
(declare-fun x2936 () Int)
(declare-fun x4318 () Int)
(declare-fun x221 () Bool)
(declare-fun x5317 () Int)
(declare-fun x5216 () Int)
(declare-fun x1959 () Bool)
(declare-fun x1401 () Int)
(declare-fun x2370 () Int)
(declare-fun x4612 () Bool)
(declare-fun x5424 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1183 () Int)
(declare-fun x1479 () Bool)
(declare-fun x89 () Int)
(declare-fun x4084 (Int) Int)
(declare-fun x1718 () Int)
(declare-fun x65 () Int)
(declare-fun x4823 () Bool)
(declare-fun x5410 () Int)
(declare-fun x4776 () Bool)
(declare-fun x4597 () Int)
(declare-fun x2559 (Int) Int)
(declare-fun x4303 () Int)
(declare-fun x1798 () Int)
(declare-fun x4058 () Int)
(declare-fun x4808 () Int)
(declare-fun x2416 () Int)
(declare-fun x2498 () Int)
(declare-fun x2749 () Bool)
(declare-fun x1610 () Int)
(declare-fun x3117 () Int)
(declare-fun x2905 () Int)
(declare-fun x2281 () Bool)
(declare-fun x968 () Int)
(declare-fun x3032 () Int)
(declare-fun x2121 () Int)
(declare-fun x237 () Bool)
(declare-fun x5354 () Int)
(declare-fun x426 () Int)
(declare-fun x5564 () Int)
(declare-fun x3509 () Int)
(declare-fun x471 () Int)
(declare-fun x1539 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x1276 () Int)
(declare-fun x922 () Bool)
(declare-fun x3511 () Int)
(declare-fun x4576 () Bool)
(declare-fun x4316 () Int)
(declare-fun x552 () Int)
(declare-fun x4183 () Bool)
(declare-fun x4305 () Bool)
(declare-fun x415 () Bool)
(declare-fun x1159 () Int)
(declare-fun x2863 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x5504 () Int)
(declare-fun x1458 () Bool)
(declare-fun x2595 () Int)
(declare-fun x3375 () Int)
(declare-fun x1205 () Int)
(declare-fun x3851 () Int)
(declare-fun x3758 () Bool)
(declare-fun x784 () Int)
(declare-fun x1357 () Int)
(declare-fun x2899 () Int)
(declare-fun x1586 () Int)
(declare-fun x4 (Int) Int)
(declare-fun x94 (Int) Int)
(declare-fun x3396 () Int)
(declare-fun x2225 () Bool)
(declare-fun x1267 () Int)
(declare-fun x1506 () Int)
(declare-fun x4119 () Bool)
(declare-fun x3426 () Bool)
(declare-fun x5615 () Int)
(declare-fun x317 () Int)
(declare-fun x768 () Bool)
(declare-fun x1490 () Int)
(declare-fun x1815 () Int)
(declare-fun x5473 () Bool)
(declare-fun x1710 () Int)
(declare-fun x4423 () Bool)
(declare-fun x429 () Int)
(declare-fun x4246 () Bool)
(declare-fun x4394 () Int)
(declare-fun x1922 () Int)
(declare-fun x225 () Int)
(declare-fun x1193 () Int)
(declare-fun x1332 () Int)
(declare-fun x1770 () Int)
(declare-fun x3893 () Int)
(declare-fun x592 () Bool)
(declare-fun x3531 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x3038 () Int)
(declare-fun x4843 () Int)
(declare-fun x2060 () Int)
(declare-fun x5445 () Int)
(declare-fun x2254 () Int)
(declare-fun x2774 () Bool)
(declare-fun x2485 () Int)
(declare-fun x1118 () Int)
(declare-fun x1219 () Bool)
(declare-fun x87 () Bool)
(declare-fun x2988 () Int)
(declare-fun x1722 () Bool)
(declare-fun x4678 () Bool)
(declare-fun x4175 () Int)
(declare-fun x2487 () Int)
(declare-fun x3336 () Int)
(declare-fun x103 () Bool)
(declare-fun x4942 () Int)
(declare-fun x1303 () Int)
(declare-fun x5482 () Int)
(declare-fun x4860 (Int) Int)
(declare-fun x3512 () Int)
(declare-fun x4835 () Int)
(declare-fun x13 () Int)
(declare-fun x1585 () Int)
(declare-fun x675 () Int)
(declare-fun x627 () Int)
(declare-fun x2540 () Int)
(declare-fun x5361 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x4805 () Bool)
(declare-fun x4640 () Int)
(declare-fun x2052 () Int)
(declare-fun x1700 () Int)
(declare-fun x972 () Int)
(declare-fun x5208 () Int)
(declare-fun x3051 () Int)
(declare-fun x4727 (Int Int) Int)
(declare-fun x440 () Bool)
(declare-fun x3938 () Bool)
(declare-fun x775 () Int)
(declare-fun x1844 () Bool)
(declare-fun x3182 () Int)
(declare-fun x1847 () Int)
(declare-fun x4091 () Bool)
(declare-fun x825 () Int)
(declare-fun x3184 () Int)
(declare-fun x2499 () Int)
(declare-fun x689 () Bool)
(declare-fun x3535 () Bool)
(declare-fun x1688 () Int)
(declare-fun x4707 (Int) Int)
(declare-fun x3003 () Int)
(declare-fun x4839 () Int)
(declare-fun x2433 () Int)
(declare-fun x1643 () Int)
(declare-fun x563 () Int)
(declare-fun x3529 () Int)
(declare-fun x724 () Int)
(declare-fun x1931 (Int) Int)
(declare-fun x519 () Int)
(declare-fun x4571 () Int)
(declare-fun x5120 () Int)
(declare-fun x2327 () Int)
(declare-fun x3100 () Int)
(declare-fun x5151 () Int)
(declare-fun x3433 () Int)
(declare-fun x5093 () Bool)
(declare-fun x1914 () Bool)
(declare-fun x5269 () Int)
(declare-fun x543 () Int)
(declare-fun x179 () Int)
(declare-fun x3363 () Bool)
(declare-fun x6 () Int)
(declare-fun x396 () Int)
(declare-fun x553 () Int)
(declare-fun x572 () Int)
(declare-fun x1396 () Int)
(declare-fun x4181 () Int)
(declare-fun x2329 () Int)
(declare-fun x3071 () Bool)
(declare-fun x277 () Int)
(declare-fun x4428 () Int)
(declare-fun x2800 () Int)
(declare-fun x3192 () Int)
(declare-fun x3803 () Int)
(declare-fun x2460 () Int)
(declare-fun x5669 () Int)
(declare-fun x1470 () Bool)
(declare-fun x3040 () Int)
(declare-fun x3089 () Int)
(declare-fun x5672 () Int)
(declare-fun x4702 () Int)
(declare-fun x4810 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x366 () Int)
(declare-fun x3738 () Int)
(declare-fun x2728 () Int)
(declare-fun x677 () Int)
(declare-fun x805 () Bool)
(declare-fun x3768 () Int)
(declare-fun x1103 () Bool)
(declare-fun x5273 (Int) Int)
(declare-fun x5690 () Int)
(declare-fun x908 () Bool)
(declare-fun x3574 () Int)
(declare-fun x1014 () Int)
(declare-fun x2375 () Bool)
(declare-fun x729 () Int)
(declare-fun x5284 () Bool)
(declare-fun x5470 () Int)
(declare-fun x3023 () Int)
(declare-fun x1337 () Int)
(declare-fun x105 () Int)
(declare-fun x5551 () Int)
(declare-fun x1665 () Int)
(declare-fun x4950 () Int)
(declare-fun x870 () Int)
(declare-fun x1096 () Int)
(declare-fun x4412 () Int)
(declare-fun x2740 () Bool)
(declare-fun x2219 () Int)
(declare-fun x1169 () Bool)
(declare-fun x544 () Int)
(declare-fun x4032 () Bool)
(declare-fun x3068 () Int)
(declare-fun x1989 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x3816 () Bool)
(declare-fun x5274 () Bool)
(declare-fun x178 () Int)
(declare-fun x503 () Int)
(declare-fun x5203 () Int)
(declare-fun x666 () Bool)
(declare-fun x2179 () Int)
(declare-fun x5038 () Int)
(declare-fun x820 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1664 () Int)
(declare-fun x4066 () Int)
(declare-fun x3074 () Int)
(declare-fun x4225 () Int)
(declare-fun x1094 () Int)
(declare-fun x3162 () Int)
(declare-fun x671 () Int)
(declare-fun x5261 () Int)
(declare-fun x2048 () Int)
(declare-fun x4569 () Int)
(declare-fun x2189 () Int)
(declare-fun x4515 () Int)
(declare-fun x4781 () Bool)
(declare-fun x3494 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x2332 () Int)
(declare-fun x2548 () Bool)
(declare-fun x4386 () Bool)
(declare-fun x4365 () Int)
(declare-fun x3702 () Int)
(declare-fun x2275 () Bool)
(declare-fun x3540 () Int)
(declare-fun x3424 () Int)
(declare-fun x2986 () Int)
(declare-fun x4951 () Bool)
(declare-fun x3985 () Int)
(declare-fun x2901 () Bool)
(declare-fun x3753 () Int)
(declare-fun x1242 () Int)
(declare-fun x2873 () Int)
(declare-fun x235 () Int)
(declare-fun x2088 () Bool)
(declare-fun x3671 () Bool)
(declare-fun x2673 () Int)
(declare-fun x2133 () Int)
(declare-fun x3348 () Int)
(declare-fun x2439 () Int)
(declare-fun x4102 () Int)
(declare-fun x4081 () Bool)
(declare-fun x4626 () Int)
(declare-fun x5319 () Int)
(declare-fun x905 () Int)
(declare-fun x717 () Int)
(declare-fun x2399 () Int)
(declare-fun x1135 () Int)
(declare-fun x3807 () Int)
(declare-fun x3757 () Bool)
(declare-fun x2990 () Int)
(declare-fun x2347 () Int)
(declare-fun x1209 () Int)
(declare-fun x5435 () Int)
(declare-fun x2840 () Int)
(declare-fun x1837 () Int)
(declare-fun x4778 () Int)
(declare-fun x4787 () Int)
(declare-fun x765 () Bool)
(declare-fun x4688 () Int)
(declare-fun x2212 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x2960 () Int)
(declare-fun x2605 () Int)
(declare-fun x353 () Int)
(declare-fun x1418 () Bool)
(declare-fun x3353 () Int)
(declare-fun x5101 () Int)
(declare-fun x3954 () Int)
(declare-fun x4796 () Int)
(declare-fun x1254 () Int)
(declare-fun x1302 () Bool)
(declare-fun x3044 () Int)
(declare-fun x3366 (Int) Int)
(declare-fun x2202 () Int)
(declare-fun x4301 () Bool)
(declare-fun x2505 () Int)
(declare-fun x4213 () Int)
(declare-fun x1067 () Bool)
(declare-fun x762 () Int)
(declare-fun x2545 () Bool)
(declare-fun x816 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x3324 () Bool)
(declare-fun x2408 () Int)
(declare-fun x1476 () Int)
(declare-fun x2694 () Int)
(declare-fun x3633 () Int)
(declare-fun x1662 () Int)
(declare-fun x246 () Bool)
(declare-fun x4199 () Int)
(declare-fun x2451 () Bool)
(declare-fun x3058 () Int)
(declare-fun x944 () Int)
(declare-fun x3011 () Bool)
(declare-fun x4149 () Int)
(declare-fun x302 () Int)
(declare-fun x5584 () Bool)
(declare-fun x2056 () Int)
(declare-fun x3526 () Int)
(declare-fun x4861 () Bool)
(declare-fun x4559 () Int)
(declare-fun x3241 () Bool)
(declare-fun x42 () Bool)
(declare-fun x1042 () Int)
(declare-fun x2271 () Int)
(declare-fun x5271 () Int)
(declare-fun x293 () Int)
(declare-fun x4653 () Int)
(declare-fun x1805 () Int)
(declare-fun x1888 () Bool)
(declare-fun x1744 () Bool)
(declare-fun x668 () Int)
(declare-fun x5363 () Int)
(declare-fun x611 () Bool)
(declare-fun x5201 () Int)
(declare-fun x4065 () Bool)
(declare-fun x555 () Bool)
(declare-fun x2876 () Int)
(declare-fun x303 () Int)
(declare-fun x1406 () Int)
(declare-fun x3628 () Bool)
(declare-fun x2692 () Int)
(declare-fun x2276 () Bool)
(declare-fun x1975 () Int)
(declare-fun x1215 () Int)
(declare-fun x4003 () Int)
(declare-fun x4234 () Bool)
(declare-fun x2023 () Int)
(declare-fun x2705 () Bool)
(declare-fun x2612 () Int)
(declare-fun x4449 () Bool)
(declare-fun x1243 () Int)
(declare-fun x3762 () Bool)
(declare-fun x2701 () Int)
(declare-fun x4506 () Int)
(declare-fun x1164 () Int)
(declare-fun x4889 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x3995 () Int)
(declare-fun x1843 () Int)
(declare-fun x2839 () Int)
(declare-fun x776 () Bool)
(declare-fun x1828 () Int)
(declare-fun x3046 () Int)
(declare-fun x5426 () Bool)
(declare-fun x3312 () Int)
(declare-fun x3770 () Int)
(declare-fun x1937 () Int)
(declare-fun x2214 () Bool)
(declare-fun x2197 () Int)
(declare-fun x5440 () Bool)
(declare-fun x706 () Bool)
(declare-fun x3555 () Int)
(declare-fun x3528 () Int)
(declare-fun x1460 () Int)
(declare-fun x4399 () Bool)
(declare-fun x3419 () Int)
(declare-fun x4000 () Bool)
(declare-fun x4177 () Bool)
(declare-fun x950 () Int)
(declare-fun x5595 () Int)
(declare-fun x730 () Int)
(declare-fun x4073 () Int)
(declare-fun x5691 () Int)
(declare-fun x5225 () Int)
(declare-fun x773 () Bool)
(declare-fun x732 () Int)
(declare-fun x4398 () Int)
(declare-fun x70 () Int)
(declare-fun x4410 () Int)
(declare-fun x4549 () Int)
(declare-fun x562 () Int)
(declare-fun x4641 () Int)
(declare-fun x2624 () Bool)
(declare-fun x5025 () Bool)
(declare-fun x2745 () Int)
(declare-fun x5286 () Int)
(declare-fun x2512 () Int)
(declare-fun x4319 () Int)
(declare-fun x2001 () Bool)
(declare-fun x4560 () Bool)
(declare-fun x4250 () Bool)
(declare-fun x733 () Bool)
(declare-fun x4706 () Int)
(declare-fun x2345 () Int)
(declare-fun x3866 () Int)
(declare-fun x1006 () Int)
(declare-fun x992 () Int)
(declare-fun x3073 () Int)
(declare-fun x1434 () Bool)
(declare-fun x5460 () Int)
(declare-fun x1492 () Int)
(declare-fun x1996 () Int)
(declare-fun x819 () Int)
(declare-fun x4605 () Int)
(declare-fun x2975 () Int)
(declare-fun x5367 () Int)
(declare-fun x420 () Bool)
(declare-fun x1507 () Int)
(declare-fun x2686 () Int)
(declare-fun x3355 () Bool)
(declare-fun x3652 () Bool)
(declare-fun x4145 () Int)
(declare-fun x5549 () Int)
(declare-fun x2420 () Bool)
(declare-fun x3759 () Int)
(declare-fun x801 () Int)
(declare-fun x753 () Bool)
(declare-fun x4096 () Int)
(declare-fun x1906 () Int)
(declare-fun x1140 () Int)
(declare-fun x431 () Int)
(declare-fun x842 () Int)
(declare-fun x4791 () Int)
(declare-fun x1919 () Int)
(declare-fun x3917 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x5539 () Bool)
(declare-fun x165 () Bool)
(declare-fun x2014 (Int) Int)
(declare-fun x1884 () Bool)
(declare-fun x3927 () Int)
(declare-fun x5411 () Int)
(declare-fun x4457 () Bool)
(declare-fun x4444 () Int)
(declare-fun x257 () Int)
(declare-fun x539 () Int)
(declare-fun x1286 () Bool)
(declare-fun x1213 () Int)
(declare-fun x2323 () Bool)
(declare-fun x1273 () Int)
(declare-fun x3852 () Bool)
(declare-fun x670 () Bool)
(declare-fun x2609 () Int)
(declare-fun x3441 () Bool)
(declare-fun x328 () Int)
(declare-fun x3950 () Int)
(declare-fun x157 () Bool)
(declare-fun x4816 () Int)
(declare-fun x3459 () Bool)
(declare-fun x542 () Int)
(declare-fun x2169 () Int)
(declare-fun x162 () Int)
(declare-fun x5128 () Int)
(declare-fun x5569 () Bool)
(declare-fun x3159 (Int Int) Int)
(declare-fun x540 () Bool)
(declare-fun x2528 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x2917 () Int)
(declare-fun x2155 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x1898 () Int)
(declare-fun x2325 () Int)
(declare-fun x2918 () Int)
(declare-fun x3216 () Bool)
(declare-fun x3119 () Int)
(declare-fun x1600 () Int)
(declare-fun x4343 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x5638 () Int)
(declare-fun x2720 () Bool)
(declare-fun x364 () Bool)
(declare-fun x4748 () Int)
(declare-fun x2973 () Bool)
(declare-fun x1994 () Int)
(declare-fun x428 () Int)
(declare-fun x1001 () Int)
(declare-fun x3354 (Int) Int)
(declare-fun x4646 () Bool)
(declare-fun x44 () Int)
(declare-fun x3723 () Int)
(declare-fun x1854 () Int)
(declare-fun x3328 () Bool)
(declare-fun x838 () Int)
(declare-fun x3830 () Int)
(declare-fun x1148 () Int)
(declare-fun x582 () Int)
(declare-fun x1023 () Int)
(declare-fun x3808 () Bool)
(declare-fun x2670 () Bool)
(declare-fun x5218 () Bool)
(declare-fun x4970 () Int)
(declare-fun x4973 () Int)
(declare-fun x3857 () Bool)
(declare-fun x4437 () Int)
(declare-fun x2033 () Bool)
(declare-fun x4910 () Int)
(declare-fun x2107 () Int)
(declare-fun x3250 () Bool)
(declare-fun x4907 () Bool)
(declare-fun x2681 () Int)
(declare-fun x2322 () Bool)
(declare-fun x4681 () Int)
(declare-fun x5229 (Int) Int)
(declare-fun x2635 () Int)
(declare-fun x449 () Int)
(declare-fun x2251 () Int)
(declare-fun x4528 () Bool)
(declare-fun x4953 () Int)
(declare-fun x921 () Int)
(declare-fun x3989 () Int)
(declare-fun x1328 () Int)
(declare-fun x3277 () Int)
(declare-fun x4327 () Int)
(declare-fun x4400 () Bool)
(declare-fun x2718 () Int)
(declare-fun x3491 () Int)
(declare-fun x41 () Bool)
(declare-fun x1240 () Int)
(declare-fun x360 () Int)
(declare-fun x52 (Int) Int)
(declare-fun x4981 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x480 () Int)
(declare-fun x4441 () Int)
(declare-fun x2476 () Int)
(declare-fun x4182 () Bool)
(declare-fun x5094 () Int)
(declare-fun x3595 () Int)
(declare-fun x3484 () Int)
(declare-fun x4714 () Bool)
(declare-fun x3948 () Int)
(declare-fun x1936 () Bool)
(declare-fun x3489 () Int)
(declare-fun x2802 () Int)
(declare-fun x2064 () Bool)
(declare-fun x5468 () Int)
(declare-fun x4972 () Int)
(declare-fun x2929 () Bool)
(declare-fun x122 () Int)
(declare-fun x3123 () Int)
(declare-fun x643 () Int)
(declare-fun x4590 () Int)
(declare-fun x3666 () Bool)
(declare-fun x5371 () Int)
(declare-fun x5545 () Bool)
(declare-fun x229 () Int)
(declare-fun x4442 () Int)
(declare-fun x718 () Bool)
(declare-fun x735 () Int)
(declare-fun x5149 () Bool)
(declare-fun x417 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x38 () Bool)
(declare-fun x4196 () Int)
(declare-fun x2172 () Int)
(declare-fun x4042 () Bool)
(declare-fun x4726 () Int)
(declare-fun x1579 (Int Int) Int)
(declare-fun x865 () Int)
(declare-fun x3438 () Bool)
(declare-fun x3794 () Bool)
(declare-fun x1190 () Int)
(declare-fun x3315 () Int)
(declare-fun x5406 () Bool)
(declare-fun x365 () Int)
(declare-fun x782 () Int)
(declare-fun x1873 () Int)
(declare-fun x1842 () Int)
(declare-fun x2663 () Bool)
(declare-fun x1179 () Int)
(declare-fun x4718 () Int)
(declare-fun x2195 () Bool)
(declare-fun x2336 () Int)
(declare-fun x2579 () Int)
(declare-fun x3262 () Int)
(declare-fun x5582 () Int)
(declare-fun x4660 () Int)
(declare-fun x1516 () Bool)
(declare-fun x2058 () Int)
(declare-fun x3504 () Int)
(declare-fun x536 () Int)
(declare-fun x3185 () Int)
(declare-fun x3598 () Int)
(declare-fun x5305 () Bool)
(declare-fun x3561 () Int)
(declare-fun x5601 () Int)
(declare-fun x5443 () Int)
(declare-fun x4052 () Int)
(declare-fun x114 () Int)
(declare-fun x2576 () Bool)
(declare-fun x4144 () Bool)
(declare-fun x4061 () Bool)
(declare-fun x2222 () Int)
(declare-fun x3608 () Int)
(declare-fun x5415 (Int) Int)
(declare-fun x3151 () Bool)
(declare-fun x4715 () Int)
(declare-fun x1733 () Bool)
(declare-fun x1505 () Int)
(declare-fun x1129 () Bool)
(declare-fun x4827 () Int)
(declare-fun x5007 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x5272 () Int)
(declare-fun x5050 () Bool)
(declare-fun x4520 () Bool)
(declare-fun x3176 () Int)
(declare-fun x5432 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x567 () Int)
(declare-fun x3033 () Int)
(declare-fun x2081 () Int)
(declare-fun x3649 () Int)
(declare-fun x2715 (Int) Int)
(declare-fun x3642 () Int)
(declare-fun x3980 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1702 () Int)
(declare-fun x1601 () Int)
(declare-fun x5529 () Int)
(declare-fun x1262 () Int)
(declare-fun x3987 () Int)
(declare-fun x2971 () Bool)
(declare-fun x3043 (Int) Int)
(declare-fun x2539 () Int)
(declare-fun x5609 () Bool)
(declare-fun x2103 () Int)
(declare-fun x3422 () Int)
(declare-fun x4621 () Int)
(declare-fun x5590 () Bool)
(declare-fun x4892 () Int)
(declare-fun x4455 () Bool)
(declare-fun x1185 () Int)
(declare-fun x23 (Int) Int)
(declare-fun x5505 () Bool)
(declare-fun x392 () Int)
(declare-fun x1624 () Int)
(declare-fun x1360 () Bool)
(declare-fun x1070 () Int)
(declare-fun x980 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x1206 (Int) Int)
(declare-fun x527 () Bool)
(declare-fun x4975 () Int)
(declare-fun x4698 () Int)
(declare-fun x2626 () Int)
(declare-fun x441 () Int)
(declare-fun x833 () Int)
(declare-fun x3055 () Int)
(declare-fun x4633 () Int)
(declare-fun x4164 () Bool)
(declare-fun x3661 () Int)
(declare-fun x3624 () Int)
(declare-fun x719 () Int)
(declare-fun x69 () Int)
(declare-fun x4543 () Int)
(declare-fun x1142 () Bool)
(declare-fun x2937 () Int)
(declare-fun x1582 () Int)
(declare-fun x4949 () Int)
(declare-fun x1353 () Int)
(declare-fun x4407 () Int)
(declare-fun x5180 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x3282 () Bool)
(declare-fun x3576 () Int)
(declare-fun x4131 () Int)
(declare-fun x2510 () Int)
(declare-fun x517 () Int)
(declare-fun x403 () Int)
(declare-fun x1264 () Int)
(declare-fun x2957 () Int)
(declare-fun x5231 () Int)
(declare-fun x4880 () Bool)
(declare-fun x3362 () Bool)
(declare-fun x2815 () Int)
(declare-fun x2587 () Int)
(declare-fun x439 () Int)
(declare-fun x1342 () Bool)
(declare-fun x2264 () Int)
(declare-fun x4533 () Int)
(declare-fun x5413 () Bool)
(declare-fun x5074 () Int)
(declare-fun x4048 () Int)
(declare-fun x5692 () Int)
(declare-fun x95 () Int)
(declare-fun x389 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x4683 () Int)
(declare-fun x1390 () Bool)
(declare-fun x3404 () Int)
(declare-fun x1602 () Int)
(declare-fun x1551 () Int)
(declare-fun x48 () Int)
(declare-fun x4282 () Int)
(declare-fun x1427 () Int)
(declare-fun x405 () Int)
(declare-fun x3157 (Int) Int)
(declare-fun x4721 () Int)
(declare-fun x1780 () Int)
(declare-fun x4216 () Int)
(declare-fun x5531 () Bool)
(declare-fun x5210 () Int)
(declare-fun x243 () Bool)
(declare-fun x1533 () Int)
(declare-fun x2570 () Bool)
(declare-fun x168 () Int)
(declare-fun x1079 () Bool)
(declare-fun x346 () Int)
(declare-fun x2501 () Bool)
(declare-fun x3183 () Int)
(declare-fun x2625 () Int)
(declare-fun x3634 () Int)
(declare-fun x4160 () Int)
(declare-fun x2978 () Int)
(declare-fun x3493 () Int)
(declare-fun x1107 () Int)
(declare-fun x3460 () Int)
(declare-fun x2948 () Bool)
(declare-fun x2998 (Int) Int)
(declare-fun x3548 () Int)
(declare-fun x1595 () Int)
(declare-fun x4256 (Int) Int)
(declare-fun x5624 () Bool)
(declare-fun x422 () Int)
(declare-fun x272 () Int)
(declare-fun x363 () Int)
(declare-fun x4654 () Int)
(declare-fun x4754 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x2980 () Int)
(declare-fun x3550 () Int)
(declare-fun x4017 () Int)
(declare-fun x2430 () Bool)
(declare-fun x4693 (Int) Int)
(declare-fun x339 () Int)
(declare-fun x4797 () Int)
(declare-fun x2895 () Bool)
(declare-fun x530 () Int)
(declare-fun x3428 () Int)
(declare-fun x2989 () Bool)
(declare-fun x2136 () Int)
(declare-fun x5322 () Int)
(declare-fun x4391 () Bool)
(declare-fun x4443 () Int)
(declare-fun x2598 () Int)
(declare-fun x786 () Bool)
(declare-fun x2180 () Int)
(declare-fun x3341 () Int)
(declare-fun x4218 () Int)
(declare-fun x3226 (Int Int Int Int Int Int) Int)
(declare-fun x2678 () Bool)
(declare-fun x1233 () Int)
(declare-fun x2115 () Bool)
(declare-fun x3009 () Int)
(declare-fun x135 () Int)
(declare-fun x4872 () Int)
(declare-fun x989 () Int)
(declare-fun x749 () Int)
(declare-fun x3979 () Int)
(declare-fun x2781 (Int) Int)
(declare-fun x1607 () Int)
(declare-fun x4389 () Int)
(declare-fun x2096 () Int)
(declare-fun x5576 () Bool)
(declare-fun x3947 () Int)
(declare-fun x2497 () Int)
(declare-fun x3015 () Int)
(declare-fun x1257 () Int)
(declare-fun x707 () Bool)
(declare-fun x3891 () Bool)
(declare-fun x4766 () Bool)
(declare-fun x1252 () Int)
(declare-fun x3495 () Bool)
(declare-fun x5647 () Bool)
(declare-fun x258 () Int)
(declare-fun x817 () Bool)
(declare-fun x2105 () Int)
(declare-fun x4010 () Int)
(declare-fun x4122 () Bool)
(declare-fun x682 () Int)
(declare-fun x4819 () Int)
(declare-fun x2221 () Int)
(declare-fun x1528 () Int)
(declare-fun x1730 () Int)
(declare-fun x3464 () Bool)
(declare-fun x599 () Bool)
(declare-fun x5084 () Bool)
(declare-fun x312 () Int)
(declare-fun x4053 () Int)
(declare-fun x812 () Bool)
(declare-fun x2042 () Int)
(declare-fun x3949 () Int)
(declare-fun x129 () Int)
(declare-fun x4503 () Int)
(declare-fun x3454 () Int)
(declare-fun x4100 () Bool)
(declare-fun x5373 () Int)
(declare-fun x1694 () Int)
(declare-fun x2599 () Int)
(declare-fun x2542 () Bool)
(declare-fun x4724 () Int)
(declare-fun x1489 () Int)
(declare-fun x4141 () Bool)
(declare-fun x1015 () Int)
(declare-fun x5320 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1617 () Int)
(declare-fun x934 () Int)
(declare-fun x4072 () Int)
(declare-fun x1974 () Bool)
(declare-fun x3545 () Int)
(declare-fun x2711 () Int)
(declare-fun x5287 () Bool)
(declare-fun x4902 () Int)
(declare-fun x414 () Bool)
(declare-fun x3583 () Int)
(declare-fun x5580 () Int)
(declare-fun x3260 () Int)
(declare-fun x5502 () Int)
(declare-fun x5355 () Int)
(declare-fun x3233 () Bool)
(declare-fun x5457 () Int)
(declare-fun x2368 () Bool)
(declare-fun x4154 () Bool)
(declare-fun x4790 () Int)
(declare-fun x116 () Bool)
(declare-fun x3676 () Int)
(declare-fun x4315 () Int)
(declare-fun x3923 () Bool)
(declare-fun x3976 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x4809 () Int)
(declare-fun x4937 () Bool)
(declare-fun x5444 () Int)
(declare-fun x2659 () Bool)
(declare-fun x4464 () Bool)
(declare-fun x1738 () Int)
(declare-fun x3239 () Int)
(declare-fun x4519 () Int)
(declare-fun x3245 () Int)
(declare-fun x3963 () Int)
(declare-fun x581 () Int)
(declare-fun x4815 () Bool)
(declare-fun x4383 () Int)
(declare-fun x5574 () Int)
(declare-fun x5195 () Bool)
(declare-fun x3646 () Int)
(declare-fun x3027 () Int)
(declare-fun x4736 () Int)
(declare-fun x4877 () Int)
(declare-fun x3637 () Bool)
(declare-fun x2163 () Int)
(declare-fun x4894 () Int)
(declare-fun x2000 () Int)
(declare-fun x2714 () Int)
(declare-fun x2447 () Int)
(declare-fun x3402 () Bool)
(declare-fun x2462 () Int)
(declare-fun x3999 () Int)
(declare-fun x5450 () Int)
(declare-fun x407 () Bool)
(declare-fun x3 () Int)
(declare-fun x573 () Bool)
(declare-fun x2825 () Bool)
(declare-fun x265 () Int)
(declare-fun x4601 () Bool)
(declare-fun x3778 () Int)
(declare-fun x5027 () Int)
(declare-fun x3627 () Bool)
(declare-fun x3746 () Int)
(declare-fun x1115 () Int)
(declare-fun x5270 () Bool)
(declare-fun x301 (Int) Int)
(declare-fun x86 () Int)
(declare-fun x2503 () Int)
(declare-fun x4108 () Int)
(declare-fun x4260 () Int)
(declare-fun x1504 () Int)
(declare-fun x586 () Int)
(declare-fun x4845 () Int)
(declare-fun x1104 () Int)
(declare-fun x5596 () Bool)
(declare-fun x2067 () Int)
(declare-fun x5522 () Int)
(declare-fun x3593 () Bool)
(declare-fun x3321 () Int)
(declare-fun x3346 () Int)
(declare-fun x2038 () Int)
(declare-fun x2076 () Int)
(declare-fun x3934 () Int)
(declare-fun x2384 () Bool)
(declare-fun x924 () Int)
(declare-fun x1404 () Int)
(declare-fun x1761 () Int)
(declare-fun x2519 () Bool)
(declare-fun x3452 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x2203 () Int)
(declare-fun x4489 () Bool)
(declare-fun x2381 () Int)
(declare-fun x1037 () Int)
(declare-fun x473 () Bool)
(declare-fun x4299 () Int)
(declare-fun x1678 () Int)
(declare-fun x3334 () Bool)
(declare-fun x3225 () Int)
(declare-fun x4217 () Bool)
(declare-fun x1684 () Int)
(declare-fun x4557 () Int)
(declare-fun x903 () Bool)
(declare-fun x3035 () Int)
(declare-fun x2242 () Int)
(declare-fun x3359 () Bool)
(declare-fun x126 () Int)
(declare-fun x4310 () Int)
(declare-fun x4016 () Int)
(declare-fun x2114 () Int)
(declare-fun x1387 () Bool)
(declare-fun x159 () Int)
(declare-fun x4610 () Int)
(declare-fun x2270 () Int)
(declare-fun x2364 () Bool)
(declare-fun x2299 () Bool)
(declare-fun x3691 () Int)
(declare-fun x5067 () Int)
(declare-fun x2844 () Int)
(declare-fun x4424 (Int) Int)
(declare-fun x1024 () Bool)
(declare-fun x1719 () Int)
(declare-fun x1324 () Bool)
(declare-fun x3062 () Int)
(declare-fun x3740 () Bool)
(declare-fun x172 () Int)
(declare-fun x5088 () Int)
(declare-fun x4186 () Int)
(declare-fun x4142 () Int)
(declare-fun x4069 () Bool)
(declare-fun x1642 () Int)
(declare-fun x1407 () Int)
(declare-fun x3800 () Int)
(declare-fun x4012 () Int)
(declare-fun x2118 () Bool)
(declare-fun x3835 () Int)
(declare-fun x4644 () Int)
(declare-fun x3327 () Int)
(declare-fun x2129 () Bool)
(declare-fun x1054 () Int)
(declare-fun x1226 () Int)
(declare-fun x3018 () Bool)
(declare-fun x3021 (Int) Int)
(declare-fun x1196 () Bool)
(declare-fun x5312 () Bool)
(declare-fun x774 (Int) Int)
(declare-fun x2292 () Int)
(declare-fun x2223 () Int)
(declare-fun x678 () Int)
(declare-fun x3914 () Int)
(declare-fun x2037 () Int)
(declare-fun x1560 () Bool)
(declare-fun x5348 () Int)
(declare-fun x994 () Bool)
(declare-fun x2167 () Int)
(declare-fun x281 () Int)
(declare-fun x1769 () Int)
(declare-fun x2181 () Bool)
(declare-fun x5653 () Int)
(declare-fun x1529 () Int)
(declare-fun x2101 () Int)
(declare-fun x1467 () Int)
(declare-fun x4039 () Int)
(declare-fun x5232 () Bool)
(declare-fun x316 () Int)
(declare-fun x3076 () Int)
(declare-fun x1416 () Bool)
(declare-fun x1925 () Bool)
(declare-fun x285 () Int)
(declare-fun x1291 () Int)
(declare-fun x983 () Bool)
(declare-fun x2357 () Int)
(declare-fun x750 () Int)
(declare-fun x5323 () Bool)
(declare-fun x4508 () Int)
(declare-fun x4140 () Int)
(declare-fun x4871 () Int)
(declare-fun x4150 () Int)
(declare-fun x4700 () Bool)
(declare-fun x2065 () Int)
(declare-fun x1408 () Int)
(declare-fun x1576 () Int)
(declare-fun x3929 () Bool)
(declare-fun x1596 () Int)
(declare-fun x1760 () Bool)
(declare-fun x1082 () Int)
(declare-fun x5045 () Int)
(declare-fun x309 () Bool)
(declare-fun x2651 () Int)
(declare-fun x372 () Int)
(declare-fun x4524 () Int)
(declare-fun x767 () Int)
(declare-fun x2022 () Int)
(declare-fun x4618 () Int)
(declare-fun x5264 () Int)
(declare-fun x2737 () Bool)
(declare-fun x2848 () Int)
(declare-fun x1309 () Bool)
(declare-fun x5032 () Int)
(declare-fun x1771 () Int)
(declare-fun x1968 () Int)
(declare-fun x5488 () Int)
(declare-fun x4830 () Int)
(declare-fun x4638 () Int)
(declare-fun x4229 () Int)
(declare-fun x2274 () Int)
(declare-fun x4171 () Bool)
(declare-fun x2513 () Bool)
(declare-fun x2972 () Int)
(declare-fun x4361 () Bool)
(declare-fun x10 () Bool)
(declare-fun x947 () Int)
(declare-fun x2134 () Int)
(declare-fun x1627 () Int)
(declare-fun x1620 () Int)
(declare-fun x5554 () Bool)
(declare-fun x1893 () Int)
(declare-fun x1478 () Int)
(declare-fun x5499 () Int)
(declare-fun x1305 () Int)
(declare-fun x1686 () Int)
(declare-fun x5185 () Int)
(declare-fun x1522 () Int)
(declare-fun x262 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x5477 () Int)
(declare-fun x1352 () Int)
(declare-fun x37 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x291 () Int)
(declare-fun x255 () Int)
(declare-fun x75 () Bool)
(declare-fun x2446 () Int)
(declare-fun x2026 () Int)
(declare-fun x4635 () Int)
(declare-fun x1329 () Int)
(declare-fun x154 () Int)
(declare-fun x2601 () Int)
(declare-fun x3998 () Int)
(declare-fun x2755 () Int)
(declare-fun x2422 () Bool)
(declare-fun x1372 () Int)
(declare-fun x5033 () Bool)
(declare-fun x4733 () Bool)
(declare-fun x4931 () Int)
(declare-fun x4176 () Int)
(declare-fun x4396 () Bool)
(declare-fun x106 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x3854 () Int)
(declare-fun x4741 () Bool)
(declare-fun x2763 () Int)
(declare-fun x5176 () Int)
(declare-fun x1502 () Int)
(declare-fun x2421 () Int)
(declare-fun x5107 () Bool)
(declare-fun x4983 () Bool)
(declare-fun x4430 () Bool)
(declare-fun x5464 () Int)
(declare-fun x5306 () Bool)
(declare-fun x2213 () Int)
(declare-fun x4875 () Int)
(declare-fun x2867 () Int)
(declare-fun x279 () Bool)
(declare-fun x1841 () Int)
(declare-fun x3148 () Bool)
(declare-fun x2560 () Int)
(declare-fun x569 () Bool)
(declare-fun x5605 () Int)
(declare-fun x1956 (Int) Int)
(declare-fun x791 () Int)
(declare-fun x2963 () Int)
(declare-fun x1474 () Int)
(declare-fun x5009 () Int)
(declare-fun x2140 () Int)
(declare-fun x2011 () Int)
(declare-fun x4195 () Bool)
(declare-fun x3978 () Int)
(declare-fun x2734 () Int)
(declare-fun x861 () Int)
(declare-fun x1311 () Int)
(declare-fun x3152 () Int)
(declare-fun x3300 () Int)
(declare-fun x4197 () Int)
(declare-fun x2886 (Int) Int)
(declare-fun x5256 () Int)
(declare-fun x781 () Bool)
(declare-fun x1289 () Int)
(declare-fun x2454 () Int)
(declare-fun x2230 () Bool)
(declare-fun x196 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x4028 () Int)
(declare-fun x5096 () Bool)
(declare-fun x5003 () Int)
(declare-fun x2805 () Int)
(declare-fun x1204 () Int)
(declare-fun x2687 () Int)
(declare-fun x1491 () Bool)
(declare-fun x2177 () Int)
(declare-fun x1102 (Int) Int)
(declare-fun x3724 () Int)
(declare-fun x4339 () Int)
(declare-fun x594 (Int) Int)
(declare-fun x5397 () Int)
(declare-fun x887 () Int)
(declare-fun x3303 () Int)
(declare-fun x966 () Int)
(declare-fun x1934 () Bool)
(declare-fun x3440 () Int)
(declare-fun x1382 () Int)
(declare-fun x1530 () Int)
(declare-fun x985 () Int)
(declare-fun x2500 () Bool)
(declare-fun x3846 () Bool)
(declare-fun x1279 () Int)
(declare-fun x5236 () Int)
(declare-fun x14 (Int) Int)
(declare-fun x4116 () Bool)
(declare-fun x3309 () Bool)
(declare-fun x5542 () Int)
(declare-fun x4632 () Bool)
(declare-fun x3446 () Bool)
(declare-fun x113 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x2062 () Int)
(declare-fun x4134 () Int)
(declare-fun x4418 () Bool)
(declare-fun x836 () Int)
(declare-fun x3924 () Int)
(declare-fun x1301 () Int)
(declare-fun x4694 () Int)
(declare-fun x2392 () Int)
(declare-fun x4237 () Int)
(declare-fun x459 () Bool)
(declare-fun x1466 () Int)
(declare-fun x81 () Int)
(declare-fun x5202 () Bool)
(declare-fun x5021 () Int)
(declare-fun x5555 () Int)
(declare-fun x534 () Int)
(declare-fun x4499 () Int)
(declare-fun x1451 () Bool)
(declare-fun x558 () Int)
(declare-fun x5498 () Bool)
(declare-fun x1184 () Int)
(declare-fun x3473 () Int)
(declare-fun x4232 () Int)
(declare-fun x4966 () Int)
(declare-fun x1905 () Int)
(declare-fun x3650 () Int)
(declare-fun x4314 () Int)
(declare-fun x2478 () Int)
(declare-fun x3523 () Int)
(declare-fun x2637 () Int)
(declare-fun x3217 () Int)
(declare-fun x4025 () Int)
(declare-fun x1465 () Int)
(declare-fun x2366 () Int)
(declare-fun x3393 () Bool)
(declare-fun x2880 () Int)
(declare-fun x2835 () Int)
(declare-fun x2746 () Bool)
(declare-fun x635 () Int)
(declare-fun x1378 () Int)
(declare-fun x3477 (Int) Int)
(declare-fun x3360 () Bool)
(declare-fun x4057 () Int)
(declare-fun x4413 () Int)
(declare-fun x5389 () Int)
(declare-fun x5402 () Int)
(declare-fun x313 () Int)
(declare-fun x4825 () Int)
(declare-fun x4308 () Int)
(declare-fun x8 () Bool)
(declare-fun x4245 () Int)
(declare-fun x2766 () Int)
(declare-fun x826 () Int)
(declare-fun x1856 () Int)
(declare-fun x2938 () Int)
(declare-fun x5494 () Int)
(declare-fun x2828 () Int)
(declare-fun x3805 () Int)
(declare-fun x4262 () Int)
(declare-fun x5486 () Bool)
(declare-fun x3549 () Int)
(declare-fun x5666 () Int)
(declare-fun x1775 () Int)
(declare-fun x4392 () Bool)
(declare-fun x909 () Int)
(declare-fun x335 () Bool)
(declare-fun x1626 () Int)
(declare-fun x2661 () Int)
(declare-fun x5082 () Bool)
(declare-fun x1526 () Int)
(declare-fun x1227 () Int)
(declare-fun x3209 () Bool)
(declare-fun x5491 () Int)
(declare-fun x2089 () Int)
(declare-fun x513 () Int)
(declare-fun x4874 () Int)
(declare-fun x4850 () Int)
(declare-fun x4668 () Bool)
(declare-fun x5277 () Int)
(declare-fun x5387 () Int)
(declare-fun x1728 () Bool)
(declare-fun x3349 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x4906 () Bool)
(declare-fun x896 () Bool)
(declare-fun x4959 () Int)
(declare-fun x665 () Int)
(declare-fun x2964 () Int)
(declare-fun x5597 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x2111 () Int)
(declare-fun x4342 () Int)
(declare-fun x830 () Bool)
(declare-fun x97 () Int)
(declare-fun x4757 () Int)
(declare-fun x3906 () Bool)
(declare-fun x5321 () Int)
(declare-fun x1066 () Bool)
(declare-fun x3769 () Int)
(declare-fun x3568 () Bool)
(declare-fun x4127 () Int)
(declare-fun x2807 () Int)
(declare-fun x763 () Bool)
(declare-fun x3351 () Bool)
(declare-fun x2260 () Int)
(declare-fun x1991 () Int)
(declare-fun x5612 () Int)
(declare-fun x3845 () Int)
(declare-fun x3391 () Bool)
(declare-fun x4848 () Int)
(declare-fun x1145 () Bool)
(declare-fun x2489 () Int)
(declare-fun x4454 () Int)
(declare-fun x1134 () Int)
(declare-fun x3412 () Int)
(declare-fun x63 () Bool)
(declare-fun x1661 () Int)
(declare-fun x2334 () Bool)
(declare-fun x4568 () Int)
(declare-fun x4333 () Int)
(declare-fun x3696 () Int)
(declare-fun x5115 () Int)
(declare-fun x3609 () Bool)
(declare-fun x4170 () Int)
(declare-fun x2911 () Int)
(declare-fun x2378 () Int)
(declare-fun x2141 () Int)
(declare-fun x4291 () Int)
(declare-fun x4712 () Int)
(declare-fun x3102 () Int)
(declare-fun x3170 () Bool)
(declare-fun x2912 () Int)
(declare-fun x3865 () Int)
(declare-fun x250 () Bool)
(declare-fun x892 () Int)
(declare-fun x2967 () Int)
(declare-fun x197 () Int)
(declare-fun x5017 () Int)
(declare-fun x844 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x2655 () Int)
(declare-fun x3867 () Int)
(declare-fun x1412 () Int)
(declare-fun x3996 () Bool)
(declare-fun x1488 () Int)
(declare-fun x960 () Int)
(declare-fun x5493 () Bool)
(declare-fun x2196 () Int)
(declare-fun x4964 () Bool)
(declare-fun x2084 () Int)
(declare-fun x1228 () Int)
(declare-fun x3467 () Int)
(declare-fun x4685 () Int)
(declare-fun x3385 () Int)
(declare-fun x1399 () Bool)
(declare-fun x43 () Int)
(declare-fun x2238 () Int)
(declare-fun x2522 () Int)
(declare-fun x965 () Int)
(declare-fun x5289 () Int)
(declare-fun x4534 () Int)
(declare-fun x5302 () Int)
(declare-fun x4498 () Bool)
(declare-fun x4133 () Int)
(declare-fun x3630 () Int)
(declare-fun x2317 () Int)
(declare-fun x1706 () Int)
(declare-fun x5619 () Int)
(declare-fun x3715 () Int)
(declare-fun x4922 (Int) Int)
(declare-fun x462 () Int)
(declare-fun x4409 () Bool)
(declare-fun x687 () Int)
(declare-fun x1680 () Int)
(declare-fun x612 () Int)
(declare-fun x3199 () Int)
(declare-fun x4607 () Int)
(declare-fun x5102 () Int)
(declare-fun x2286 () Int)
(declare-fun x5333 () Bool)
(declare-fun x3640 () Int)
(declare-fun x1350 () Bool)
(declare-fun x5260 () Int)
(declare-fun x3007 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x5079 () Int)
(declare-fun x4862 () Int)
(declare-fun x2853 () Int)
(declare-fun x1439 () Bool)
(declare-fun x5645 () Bool)
(declare-fun x4121 () Int)
(declare-fun x300 () Int)
(declare-fun x3811 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x4647 () Bool)
(declare-fun x3090 () Bool)
(declare-fun x318 () Int)
(declare-fun x374 () Bool)
(declare-fun x3498 () Int)
(declare-fun x1565 () Bool)
(declare-fun x5336 () Int)
(declare-fun x1829 () Bool)
(declare-fun x2640 () Int)
(declare-fun x3655 () Int)
(declare-fun x4652 () Int)
(declare-fun x4387 () Int)
(declare-fun x3403 () Int)
(declare-fun x4035 () Bool)
(declare-fun x5479 () Int)
(declare-fun x3406 () Int)
(declare-fun x4686 () Int)
(declare-fun x3166 () Bool)
(declare-fun x910 () Int)
(declare-fun x523 () Int)
(declare-fun x1496 () Int)
(declare-fun x2491 () Bool)
(declare-fun x3790 () Int)
(declare-fun x2675 () Int)
(declare-fun x2586 () Int)
(declare-fun x3231 () Bool)
(declare-fun x2122 () Int)
(declare-fun x923 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x153 () Int)
(declare-fun x588 () Int)
(declare-fun x3091 () Bool)
(declare-fun x1119 () Int)
(declare-fun x574 () Bool)
(declare-fun x3705 () Int)
(declare-fun x2231 () Bool)
(declare-fun x5296 () Int)
(declare-fun x2243 () Bool)
(declare-fun x1330 () Int)
(declare-fun x4222 () Int)
(declare-fun x193 () Int)
(declare-fun x777 () Int)
(declare-fun x2063 () Int)
(declare-fun x1298 () Int)
(declare-fun x1654 () Int)
(declare-fun x3983 () Int)
(declare-fun x2846 () Int)
(declare-fun x2551 () Bool)
(declare-fun x1244 () Int)
(declare-fun x939 () Bool)
(declare-fun x4231 () Int)
(declare-fun x3345 () Int)
(declare-fun x3263 () Bool)
(declare-fun x1869 (Int) Int)
(declare-fun x2713 () Int)
(declare-fun x402 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x4752 () Int)
(declare-fun x177 () Int)
(declare-fun x2429 () Int)
(declare-fun x4882 () Bool)
(declare-fun x2340 () Int)
(declare-fun x5391 () Int)
(declare-fun x4191 () Int)
(declare-fun x505 () Int)
(declare-fun x311 () Int)
(declare-fun x2710 () Int)
(declare-fun x2925 () Bool)
(declare-fun x2029 () Int)
(declare-fun x5627 () Bool)
(declare-fun x4570 () Int)
(declare-fun x632 () Int)
(declare-fun x1853 () Int)
(declare-fun x3487 () Int)
(declare-fun x1577 () Int)
(declare-fun x4103 () Int)
(declare-fun x1614 () Int)
(declare-fun x5328 () Int)
(declare-fun x46 () Int)
(declare-fun x4484 () Int)
(declare-fun x4137 () Int)
(declare-fun x4759 () Int)
(declare-fun x5303 () Int)
(declare-fun x4903 () Int)
(declare-fun x2811 () Int)
(declare-fun x3451 () Int)
(declare-fun x1967 () Int)
(declare-fun x1176 () Bool)
(declare-fun x4479 () Int)
(declare-fun x1423 () Int)
(declare-fun x5019 () Int)
(declare-fun x4135 () Bool)
(declare-fun x5369 () Int)
(declare-fun x4504 () Bool)
(declare-fun x283 () Bool)
(declare-fun x4676 () Int)
(declare-fun x352 () Int)
(declare-fun x3690 () Int)
(declare-fun x1605 () Int)
(declare-fun x2237 () Int)
(declare-fun x2191 () Bool)
(declare-fun x4854 () Int)
(declare-fun x1198 () Int)
(declare-fun x3042 () Int)
(declare-fun x3886 () Int)
(declare-fun x465 () Int)
(declare-fun x1483 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x4214 () Int)
(declare-fun x5285 () Int)
(declare-fun x5080 () Int)
(declare-fun x2355 () Bool)
(declare-fun x986 () Int)
(declare-fun x2424 () Int)
(declare-fun x3876 () Int)
(declare-fun x5013 () Int)
(declare-fun x5501 () Int)
(declare-fun x3488 () Int)
(declare-fun x3761 () Int)
(declare-fun x798 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x3478 () Int)
(declare-fun x1782 () Int)
(declare-fun x1025 () Int)
(declare-fun x3106 () Int)
(declare-fun x778 () Bool)
(declare-fun x1043 () Int)
(declare-fun x2606 () Bool)
(declare-fun x2856 () Int)
(declare-fun x1675 () Int)
(declare-fun x2137 () Bool)
(declare-fun x4697 () Bool)
(declare-fun x3589 () Int)
(declare-fun x3178 () Int)
(declare-fun x4258 () Int)
(declare-fun x4126 () Int)
(declare-fun x3390 () Int)
(declare-fun x1970 () Bool)
(declare-fun x4720 () Int)
(declare-fun x5315 () Bool)
(declare-fun x5085 (Int) Int)
(declare-fun x2099 () Int)
(declare-fun x2348 () Int)
(declare-fun x4433 () Bool)
(declare-fun x4913 () Int)
(declare-fun x659 () Bool)
(declare-fun x4535 (Int) Int)
(declare-fun x5030 () Int)
(declare-fun x1709 () Int)
(declare-fun x4281 () Int)
(declare-fun x4425 () Int)
(declare-fun x4548 () Int)
(declare-fun x4371 () Int)
(declare-fun x3752 () Int)
(declare-fun x5571 () Int)
(declare-fun x437 () Int)
(declare-fun x1072 () Int)
(declare-fun x3992 () Bool)
(declare-fun x4107 () Int)
(declare-fun x4818 (Int) Int)
(declare-fun x3174 () Bool)
(declare-fun x2804 () Int)
(declare-fun x4876 () Int)
(declare-fun x2945 () Int)
(declare-fun x4068 () Int)
(declare-fun x978 () Int)
(declare-fun x4486 () Int)
(declare-fun x143 () Bool)
(declare-fun x5620 () Bool)
(declare-fun x710 () Int)
(declare-fun x5583 () Int)
(declare-fun x1909 () Int)
(declare-fun x2194 () Bool)
(declare-fun x2919 () Int)
(declare-fun x5442 () Int)
(declare-fun x164 () Int)
(declare-fun x55 () Bool)
(declare-fun x1778 () Int)
(declare-fun x3902 () Bool)
(declare-fun x1348 () Int)
(declare-fun x1379 () Int)
(declare-fun x990 () Bool)
(declare-fun x5072 () Int)
(declare-fun x1386 () Int)
(declare-fun x1295 () Int)
(declare-fun x354 () Int)
(declare-fun x654 () Int)
(declare-fun x5144 () Bool)
(declare-fun x736 () Int)
(declare-fun x3378 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x3329 () Int)
(declare-fun x115 () Int)
(declare-fun x515 () Bool)
(declare-fun x3242 () Bool)
(declare-fun x658 () Bool)
(declare-fun x3802 () Int)
(declare-fun x3041 () Int)
(declare-fun x2210 () Int)
(declare-fun x4312 () Bool)
(declare-fun x5510 () Int)
(declare-fun x292 () Int)
(declare-fun x3215 () Int)
(declare-fun x2780 () Int)
(declare-fun x2832 () Bool)
(declare-fun x998 () Bool)
(declare-fun x1785 () Int)
(declare-fun x5649 () Int)
(declare-fun x4244 () Bool)
(declare-fun x1806 () Int)
(declare-fun x1454 () Int)
(declare-fun x4030 () Int)
(declare-fun x5598 () Int)
(declare-fun x3611 () Int)
(declare-fun x2030 () Int)
(declare-fun x4422 () Int)
(declare-fun x268 () Int)
(declare-fun x4408 () Int)
(declare-fun x74 () Bool)
(declare-fun x1189 () Int)
(declare-fun x793 () Bool)
(declare-fun x4219 () Bool)
(declare-fun x1877 () Bool)
(declare-fun x1890 () Int)
(declare-fun x759 () Int)
(declare-fun x5610 () Int)
(declare-fun x5143 () Bool)
(declare-fun x5438 () Int)
(declare-fun x1331 () Int)
(declare-fun x3049 () Int)
(declare-fun x606 () Int)
(declare-fun x4208 (Int) Int)
(declare-fun x5513 () Bool)
(declare-fun x5065 () Int)
(declare-fun x4979 () Bool)
(declare-fun x4664 () Bool)
(declare-fun x919 () Bool)
(declare-fun x3951 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x2150 () Int)
(declare-fun x3443 (Int) Int)
(declare-fun x3458 () Int)
(declare-fun x5572 () Bool)
(declare-fun x4909 () Int)
(declare-fun x1377 () Int)
(declare-fun x2006 () Int)
(declare-fun x4496 () Int)
(declare-fun x4672 () Int)
(declare-fun x1980 () Int)
(declare-fun x4783 () Bool)
(declare-fun x4509 () Int)
(declare-fun x3293 () Int)
(declare-fun x5412 () Int)
(declare-fun x452 () Bool)
(declare-fun x5686 () Int)
(declare-fun x5200 () Int)
(declare-fun x3234 () Int)
(declare-fun x2108 () Bool)
(declare-fun x835 () Bool)
(declare-fun x3331 () Int)
(declare-fun x3639 () Bool)
(declare-fun x4865 (Int) Int)
(declare-fun x548 () Int)
(declare-fun x5077 () Int)
(declare-fun x1941 () Bool)
(declare-fun x5235 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x3516 () Int)
(declare-fun x2306 () Int)
(declare-fun x683 () Bool)
(declare-fun x4769 () Int)
(declare-fun x1638 () Int)
(declare-fun x1651 () Int)
(declare-fun x2100 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2784 () Int)
(declare-fun x4336 () Int)
(declare-fun x4277 () Int)
(declare-fun x4527 () Int)
(declare-fun x4328 () Int)
(declare-fun x3687 () Int)
(declare-fun x3338 () Int)
(declare-fun x1081 () Int)
(declare-fun x1666 () Int)
(declare-fun x4128 () Bool)
(declare-fun x4744 () Bool)
(declare-fun x192 () Bool)
(declare-fun x1578 () Int)
(declare-fun x4866 () Int)
(declare-fun x3827 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x3235 () Int)
(declare-fun x2934 () Int)
(declare-fun x4242 () Bool)
(declare-fun x2523 () Bool)
(declare-fun x5650 () Int)
(declare-fun x333 () Int)
(declare-fun x2443 () Int)
(declare-fun x2216 () Int)
(declare-fun x2066 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x4679 () Int)
(declare-fun x4029 () Bool)
(declare-fun x3501 () Int)
(declare-fun x2954 (Int) Int)
(declare-fun x2161 () Bool)
(declare-fun x290 () Int)
(declare-fun x3848 () Int)
(declare-fun x4067 () Int)
(declare-fun x3899 () Bool)
(declare-fun x1420 () Int)
(declare-fun x2426 () Int)
(declare-fun x4043 () Int)
(declare-fun x821 () Bool)
(declare-fun x5212 () Int)
(declare-fun x1976 () Int)
(declare-fun x191 () Bool)
(declare-fun x3551 () Int)
(declare-fun x3577 () Bool)
(declare-fun x5171 () Int)
(declare-fun x3161 () Int)
(declare-fun x1089 () Bool)
(declare-fun x566 () Bool)
(declare-fun x4716 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x551 () Int)
(declare-fun x3662 () Int)
(declare-fun x2207 () Int)
(declare-fun x2104 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x3581 () Int)
(declare-fun x1355 () Bool)
(declare-fun x298 () Int)
(declare-fun x3699 () Int)
(declare-fun x1957 () Int)
(declare-fun x2908 () Int)
(declare-fun x2305 () Int)
(declare-fun x3709 () Bool)
(declare-fun x373 () Bool)
(declare-fun x2776 () Bool)
(declare-fun x3971 () Int)
(declare-fun x2907 () Int)
(declare-fun x2247 () Int)
(declare-fun x803 () Int)
(declare-fun x3415 () Bool)
(declare-fun x242 () Int)
(declare-fun x3086 () Bool)
(declare-fun x4101 () Int)
(declare-fun x4009 () Bool)
(declare-fun x1541 () Int)
(declare-fun x2227 () Int)
(declare-fun x653 () Bool)
(declare-fun x5532 () Int)
(declare-fun x1005 () Int)
(declare-fun x3444 () Bool)
(declare-fun x3908 () Int)
(declare-fun x5006 () Int)
(declare-fun x118 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x2617 () Int)
(declare-fun x1362 () Int)
(declare-fun x1537 () Bool)
(declare-fun x5356 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x128 () Int)
(declare-fun x2239 () Int)
(declare-fun x650 () Int)
(declare-fun x1558 () Int)
(declare-fun x1065 () Int)
(declare-fun x394 () Bool)
(declare-fun x2143 (Int) Int)
(declare-fun x3228 () Int)
(declare-fun x1367 () Int)
(declare-fun x713 () Int)
(declare-fun x4554 () Bool)
(declare-fun x5422 () Int)
(declare-fun x4956 () Int)
(declare-fun x4648 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x1804 () Int)
(declare-fun x355 () Int)
(declare-fun x5345 () Int)
(declare-fun x1895 () Bool)
(declare-fun x2941 () Int)
(declare-fun x5198 () Int)
(declare-fun x1031 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x4165 () Int)
(declare-fun x419 () Int)
(declare-fun x855 () Bool)
(declare-fun x3875 () Bool)
(declare-fun x5280 () Int)
(declare-fun x1334 () Int)
(declare-fun x2354 () Bool)
(declare-fun x4495 () Int)
(declare-fun x5173 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x4553 (Int) Int)
(declare-fun x673 () Int)
(declare-fun x672 () Bool)
(declare-fun x3919 () Int)
(declare-fun x4561 () Int)
(declare-fun x2289 () Bool)
(declare-fun x5628 () Bool)
(declare-fun x3890 () Int)
(declare-fun x1907 () Int)
(declare-fun x5481 () Int)
(declare-fun x2432 () Int)
(declare-fun x119 () Int)
(declare-fun x3368 () Int)
(declare-fun x3416 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x3103 () Int)
(declare-fun x5446 () Int)
(declare-fun x1776 () Int)
(declare-fun x2771 () Int)
(declare-fun x3273 () Int)
(declare-fun x4320 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x3269 () Int)
(declare-fun x1948 () Bool)
(declare-fun x4040 () Bool)
(declare-fun x3410 () Int)
(declare-fun x2259 () Bool)
(declare-fun x1734 () Int)
(declare-fun x2731 () Bool)
(declare-fun x4013 () Int)
(declare-fun x488 () Bool)
(declare-fun x4088 () Int)
(declare-fun x4468 () Int)
(declare-fun x614 () Bool)
(declare-fun x273 () Int)
(declare-fun x897 () Int)
(declare-fun x808 () Int)
(declare-fun x4952 () Int)
(declare-fun x4546 () Int)
(declare-fun x2287 () Int)
(declare-fun x2818 () Int)
(declare-fun x158 () Bool)
(declare-fun x3587 () Int)
(declare-fun x1400 () Int)
(declare-fun x4735 () Bool)
(declare-fun x3573 (Int) Int)
(declare-fun x5169 () Bool)
(declare-fun x5175 () Int)
(declare-fun x2316 () Bool)
(declare-fun x5401 () Int)
(declare-fun x970 () Bool)
(declare-fun x708 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x4381 () Bool)
(declare-fun x4006 () Int)
(declare-fun x541 () Bool)
(declare-fun x2889 () Int)
(declare-fun x2090 () Bool)
(declare-fun x1338 () Int)
(declare-fun x2300 () Int)
(declare-fun x3395 () Bool)
(declare-fun x5670 () Bool)
(declare-fun x3698 () Int)
(declare-fun x1101 () Int)
(declare-fun x1041 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x814 () Int)
(declare-fun x1294 () Int)
(declare-fun x3973 () Int)
(declare-fun x1113 () Int)
(declare-fun x898 () Bool)
(declare-fun x4821 () Int)
(declare-fun x2444 () Int)
(declare-fun x2563 () Int)
(declare-fun x943 () Bool)
(declare-fun x3313 () Bool)
(declare-fun x995 () Int)
(declare-fun x5022 () Int)
(declare-fun x1916 () Int)
(declare-fun x2733 () Int)
(declare-fun x1201 () Int)
(declare-fun x2860 () Int)
(declare-fun x1171 () Bool)
(declare-fun x2055 () Int)
(declare-fun x4184 () Int)
(declare-fun x3542 () Int)
(declare-fun x5514 () Int)
(declare-fun x3925 () Int)
(declare-fun x3120 () Int)
(declare-fun x483 () Bool)
(declare-fun x3935 () Int)
(declare-fun x251 () Int)
(declare-fun x3926 () Bool)
(declare-fun x5189 () Int)
(declare-fun x1649 () Int)
(declare-fun x521 () Int)
(declare-fun x5506 () Int)
(declare-fun x4434 () Int)
(declare-fun x1851 () Int)
(declare-fun x869 () Int)
(declare-fun x532 () Bool)
(declare-fun x5659 () Int)
(declare-fun x3384 () Int)
(declare-fun x3344 () Int)
(declare-fun x2159 () Int)
(declare-fun x511 () Int)
(declare-fun x3337 () Bool)
(declare-fun x32 () Bool)
(declare-fun x4156 () Int)
(declare-fun x3012 () Int)
(declare-fun x3602 () Bool)
(declare-fun x306 () Int)
(declare-fun x2985 () Int)
(declare-fun x1202 () Bool)
(declare-fun x575 () Bool)
(declare-fun x5116 () Bool)
(declare-fun x3614 () Bool)
(declare-fun x3670 () Int)
(declare-fun x5533 () Bool)
(declare-fun x1222 () Int)
(declare-fun x3189 () Int)
(declare-fun x5130 () Int)
(declare-fun x1468 () Int)
(declare-fun x120 () Int)
(declare-fun x2906 () Int)
(declare-fun x649 () Bool)
(declare-fun x3223 () Int)
(declare-fun x2798 () Int)
(declare-fun x182 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x3016 () Bool)
(declare-fun x4834 () Int)
(declare-fun x5416 () Bool)
(declare-fun x1698 () Int)
(declare-fun x388 () Int)
(declare-fun x5131 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x1340 () Int)
(declare-fun x4188 () Int)
(declare-fun x2547 () Int)
(declare-fun x1609 () Int)
(declare-fun x4994 () Int)
(declare-fun x2695 () Bool)
(declare-fun x3734 () Int)
(declare-fun x5489 () Int)
(declare-fun x4932 () Bool)
(declare-fun x3420 () Int)
(declare-fun x1917 () Int)
(declare-fun x2888 () Bool)
(declare-fun x1652 () Int)
(declare-fun x937 () Int)
(declare-fun x4608 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x444 (Int) Int)
(declare-fun x5086 () Int)
(declare-fun x4896 () Int)
(declare-fun x3255 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x3296 () Int)
(declare-fun x1224 () Int)
(declare-fun x3781 () Int)
(declare-fun x3430 () Int)
(declare-fun x3271 () Bool)
(declare-fun x2406 () Int)
(declare-fun x5676 () Int)
(declare-fun x3379 () Int)
(declare-fun x501 () Int)
(declare-fun x900 () Bool)
(declare-fun x5227 () Bool)
(declare-fun x1683 () Int)
(declare-fun x4093 () Bool)
(declare-fun x5683 () Int)
(declare-fun x3566 () Bool)
(declare-fun x789 () Int)
(declare-fun x1232 () Int)
(declare-fun x2017 () Int)
(declare-fun x3892 () Int)
(declare-fun x2758 () Int)
(declare-fun x1419 () Int)
(declare-fun x1354 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x4265 () Int)
(declare-fun x913 () Bool)
(declare-fun x1327 () Int)
(declare-fun x4440 () Bool)
(declare-fun x3288 () Int)
(declare-fun x1029 () Int)
(declare-fun x1711 () Bool)
(declare-fun x3370 () Int)
(declare-fun x2253 () Bool)
(declare-fun x3339 (Int) Int)
(declare-fun x3815 () Int)
(declare-fun x4439 () Bool)
(declare-fun x631 () Int)
(declare-fun x1912 () Int)
(declare-fun x1723 () Int)
(declare-fun x320 () Bool)
(declare-fun x4275 () Int)
(declare-fun x2891 () Bool)
(declare-fun x728 () Int)
(declare-fun x520 () Int)
(declare-fun x1030 () Int)
(declare-fun x1287 () Int)
(declare-fun x1809 () Int)
(declare-fun x4512 () Bool)
(declare-fun x2082 () Int)
(declare-fun x4212 () Bool)
(declare-fun x3956 () Int)
(declare-fun x418 () Int)
(declare-fun x1192 () Int)
(declare-fun x3200 () Bool)
(declare-fun x4722 () Int)
(declare-fun x2109 () Bool)
(declare-fun x5342 () Int)
(declare-fun x3340 () Int)
(declare-fun x832 () Int)
(declare-fun x1167 () Bool)
(declare-fun x3496 () Int)
(declare-fun x2267 () Int)
(declare-fun x2465 () Int)
(declare-fun x4288 () Bool)
(declare-fun x56 () Bool)
(declare-fun x940 () Int)
(declare-fun x3884 () Int)
(declare-fun x4179 () Int)
(declare-fun x1911 () Bool)
(declare-fun x4077 () Bool)
(declare-fun x4180 () Bool)
(declare-fun x546 () Int)
(declare-fun x395 () Int)
(declare-fun x873 () Int)
(declare-fun x2234 () Int)
(declare-fun x5103 () Bool)
(declare-fun x5492 () Int)
(declare-fun x3075 () Bool)
(declare-fun x3267 () Int)
(declare-fun x2591 () Int)
(declare-fun x5368 () Int)
(declare-fun x5527 () Int)
(declare-fun x5399 () Int)
(declare-fun x241 () Bool)
(declare-fun x393 () Int)
(declare-fun x1834 () Int)
(declare-fun x5246 () Bool)
(declare-fun x3922 () Int)
(declare-fun x2479 () Bool)
(declare-fun x3773 () Bool)
(declare-fun x3878 () Int)
(declare-fun x1943 () Int)
(declare-fun x248 () Bool)
(declare-fun x1060 () Int)
(declare-fun x1866 () Int)
(declare-fun x3492 () Int)
(declare-fun x5304 () Int)
(declare-fun x1057 () Int)
(declare-fun x2379 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x525 () Int)
(declare-fun x5396 () Int)
(declare-fun x5137 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x5294 () Int)
(declare-fun x3897 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x656 () Int)
(declare-fun x4799 () Int)
(declare-fun x498 () Int)
(declare-fun x4296 () Int)
(declare-fun x2680 () Int)
(declare-fun x1580 () Int)
(declare-fun x376 () Bool)
(declare-fun x2382 () Int)
(declare-fun x3401 () Int)
(declare-fun x4829 () Bool)
(declare-fun x1356 () Int)
(declare-fun x2813 () Int)
(declare-fun x4204 () Int)
(declare-fun x3643 () Int)
(declare-fun x3094 () Bool)
(declare-fun x3821 () Int)
(declare-fun x3571 () Int)
(declare-fun x3286 () Int)
(declare-fun x3470 () Int)
(declare-fun x5325 () Int)
(declare-fun x2414 () Int)
(declare-fun x5466 () Int)
(declare-fun x5242 () Int)
(declare-fun x416 () Int)
(declare-fun x1876 () Int)
(declare-fun x5534 () Int)
(declare-fun x4477 () Int)
(declare-fun x5127 () Int)
(declare-fun x2205 (Int) Int)
(declare-fun x2128 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x5070 () Int)
(declare-fun x5349 () Int)
(declare-fun x299 () Int)
(declare-fun x1414 () Int)
(declare-fun x3059 () Int)
(declare-fun x4800 () Int)
(declare-fun x3392 () Int)
(declare-fun x136 () Int)
(declare-fun x4924 () Int)
(declare-fun x2630 () Bool)
(declare-fun x4228 () Int)
(declare-fun x4760 () Bool)
(declare-fun x524 () Int)
(declare-fun x3874 () Bool)
(declare-fun x3240 () Int)
(declare-fun x3134 () Bool)
(declare-fun x1520 () Int)
(declare-fun x4846 () Int)
(declare-fun x4723 () Int)
(declare-fun x4118 () Bool)
(declare-fun x4463 () Int)
(declare-fun x1508 () Int)
(declare-fun x4155 () Bool)
(declare-fun x2353 () Int)
(declare-fun x2091 () Bool)
(declare-fun x2139 () Int)
(declare-fun x287 () Int)
(declare-fun x4220 () Int)
(declare-fun x1166 () Bool)
(declare-fun x3733 () Bool)
(declare-fun x4467 () Int)
(declare-fun x2996 () Int)
(declare-fun x1464 () Int)
(declare-fun x2923 () Bool)
(declare-fun x1147 () Int)
(declare-fun x443 () Int)
(declare-fun x4359 () Bool)
(declare-fun x4202 () Int)
(declare-fun x1512 () Int)
(declare-fun x3730 () Bool)
(declare-fun x507 () Int)
(declare-fun x2744 () Int)
(declare-fun x4908 () Int)
(declare-fun x469 () Int)
(declare-fun x2398 () Int)
(declare-fun x1445 () Int)
(declare-fun x4475 () Int)
(declare-fun x4991 () Int)
(declare-fun x720 () Int)
(declare-fun x1010 () Int)
(declare-fun x4466 () Int)
(declare-fun x93 () Int)
(declare-fun x1879 () Int)
(declare-fun x2297 () Int)
(declare-fun x3960 () Bool)
(declare-fun x629 () Int)
(declare-fun x2565 () Int)
(declare-fun x327 () Bool)
(declare-fun x2991 () Int)
(declare-fun x3621 () Int)
(declare-fun x1480 () Bool)
(declare-fun x3431 () Int)
(declare-fun x790 () Int)
(declare-fun x1313 () Int)
(declare-fun x1986 () Int)
(declare-fun x4203 () Int)
(declare-fun x2171 () Int)
(declare-fun x4978 () Bool)
(declare-fun x1453 () Int)
(declare-fun x2968 () Int)
(declare-fun x2580 (Int) Int)
(declare-fun x378 () Bool)
(declare-fun x5452 () Int)
(declare-fun x1830 () Int)
(declare-fun x2966 () Bool)
(declare-fun x60 () Int)
(declare-fun x4675 () Bool)
(declare-fun x2564 () Int)
(declare-fun x5182 () Bool)
(declare-fun x2785 () Int)
(declare-fun x2902 () Int)
(declare-fun x2409 () Int)
(declare-fun x5508 () Int)
(declare-fun x1929 () Bool)
(declare-fun x3222 () Int)
(declare-fun x435 () Int)
(declare-fun x3558 () Bool)
(declare-fun x494 () Int)
(declare-fun x4458 () Int)
(declare-fun x2806 () Int)
(declare-fun x550 () Int)
(declare-fun x804 () Bool)
(declare-fun x646 () Int)
(declare-fun x3481 () Int)
(declare-fun x2866 () Int)
(declare-fun x1811 () Int)
(declare-fun x2162 () Int)
(declare-fun x3613 () Bool)
(declare-fun x5455 () Int)
(declare-fun x49 () Int)
(declare-fun x4729 () Bool)
(declare-fun x5062 () Int)
(declare-fun x3688 () Int)
(declare-fun x4273 () Int)
(declare-fun x2303 () Int)
(declare-fun x2783 () Int)
(declare-fun x5625 () Int)
(declare-fun x140 () Bool)
(declare-fun x4037 () Int)
(declare-fun x3719 () Int)
(declare-fun x3206 () Int)
(declare-fun x792 () Int)
(declare-fun x198 () Bool)
(declare-fun x4002 () Int)
(declare-fun x975 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1106 () Int)
(declare-fun x1071 () Int)
(declare-fun x4278 () Bool)
(declare-fun x3731 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x1984 () Int)
(declare-fun x5528 () Bool)
(declare-fun x1840 () Int)
(declare-fun x4946 () Int)
(declare-fun x2304 () Int)
(declare-fun x4263 () Int)
(declare-fun x4450 () Int)
(declare-fun x1177 () Int)
(declare-fun x1315 () Int)
(declare-fun x5214 () Int)
(declare-fun x1868 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x5636 () Int)
(declare-fun x2862 () Int)
(declare-fun x2594 () Int)
(declare-fun x399 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x5483 () Bool)
(declare-fun x1271 () Int)
(declare-fun x2855 () Int)
(declare-fun x3237 () Int)
(declare-fun x1349 () Int)
(declare-fun x1258 () Int)
(declare-fun x2027 () Int)
(declare-fun x874 () Int)
(declare-fun x3435 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x5558 () Int)
(declare-fun x1345 () Bool)
(declare-fun x4511 () Int)
(declare-fun x559 () Int)
(declare-fun x4038 () Bool)
(declare-fun x5657 () Int)
(declare-fun x5362 () Int)
(declare-fun x3575 () Int)
(declare-fun x5253 () Int)
(declare-fun x5153 () Int)
(declare-fun x3195 () Int)
(declare-fun x2707 () Bool)
(declare-fun x3591 () Int)
(declare-fun x2192 () Bool)
(declare-fun x5409 () Int)
(declare-fun x1818 () Int)
(declare-fun x1790 () Int)
(declare-fun x3465 () Int)
(declare-fun x5220 () Int)
(declare-fun x2463 () Int)
(declare-fun x1487 () Int)
(declare-fun x2419 () Int)
(declare-fun x408 () Int)
(declare-fun x4545 () Bool)
(declare-fun x109 () Int)
(declare-fun x999 () Int)
(declare-fun x5308 () Int)
(declare-fun x2577 () Int)
(declare-fun x4367 () Int)
(declare-fun x2796 () Int)
(declare-fun x2461 () Bool)
(declare-fun x2738 () Int)
(declare-fun x4189 () Bool)
(declare-fun x3517 () Bool)
(declare-fun x1765 () Int)
(declare-fun x2875 () Bool)
(declare-fun x929 () Int)
(declare-fun x1246 () Int)
(declare-fun x5654 () Int)
(declare-fun x3785 () Int)
(declare-fun x3559 (Int) Int)
(declare-fun x3256 () Bool)
(declare-fun x1646 () Int)
(declare-fun x2220 () Int)
(declare-fun x323 () Int)
(declare-fun x2307 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x2153 () Int)
(declare-fun x4782 () Int)
(declare-fun x455 () Int)
(declare-fun x107 () Int)
(declare-fun x1747 () Bool)
(declare-fun x2418 () Int)
(declare-fun x203 () Int)
(declare-fun x436 () Int)
(declare-fun x4026 () Bool)
(declare-fun x4998 () Bool)
(declare-fun x5133 () Int)
(declare-fun x2313 () Bool)
(declare-fun x609 () Bool)
(declare-fun x3683 () Bool)
(declare-fun x4562 () Int)
(declare-fun x1090 () Int)
(declare-fun x3618 () Int)
(declare-fun x2981 () Bool)
(declare-fun x1086 () Int)
(declare-fun x226 () Bool)
(declare-fun x4833 () Bool)
(declare-fun x2245 () Int)
(declare-fun x876 () Bool)
(declare-fun x1128 () Int)
(declare-fun x3647 () Int)
(declare-fun x45 () Int)
(declare-fun x1949 () Int)
(declare-fun x3629 () Int)
(declare-fun x3824 () Bool)
(declare-fun x1112 () Int)
(declare-fun x3411 () Bool)
(declare-fun x4649 () Bool)
(declare-fun x5540 () Int)
(declare-fun x2301 () Int)
(declare-fun x3556 () Int)
(declare-fun x2193 () Bool)
(declare-fun x3940 () Int)
(declare-fun x2174 () Int)
(declare-fun x133 () Int)
(declare-fun x3527 () Int)
(declare-fun x528 () Bool)
(declare-fun x1588 () Int)
(declare-fun x1413 () Int)
(declare-fun x4857 () Int)
(declare-fun x3462 () Int)
(declare-fun x616 () Bool)
(declare-fun x5 () Bool)
(declare-fun x3318 () Int)
(declare-fun x4415 () Int)
(declare-fun x348 () Int)
(declare-fun x2256 () Int)
(declare-fun x27 () Int)
(declare-fun x5441 () Int)
(declare-fun x2752 () Int)
(declare-fun x583 () Bool)
(declare-fun x605 () Int)
(declare-fun x5129 () Int)
(declare-fun x2142 () Int)
(declare-fun x2480 () Bool)
(declare-fun x34 () Int)
(declare-fun x3779 () Int)
(declare-fun x3456 () Bool)
(declare-fun x5377 () Bool)
(declare-fun x5184 () Int)
(declare-fun x5092 () Bool)
(declare-fun x2278 () Int)
(declare-fun x2708 () Int)
(declare-fun x2735 () Bool)
(declare-fun x5327 () Int)
(declare-fun x2229 () Int)
(declare-fun x4027 () Int)
(declare-fun x4451 () Int)
(declare-fun x2468 () Bool)
(declare-fun x3680 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x3298 () Int)
(declare-fun x5622 () Int)
(declare-fun x217 () Int)
(declare-fun x3748 () Int)
(declare-fun x5223 () Int)
(declare-fun x5427 () Int)
(declare-fun x1667 () Int)
(declare-fun x4878 (Int) Int)
(declare-fun x1019 () Bool)
(declare-fun x2638 () Int)
(declare-fun x1284 () Int)
(declare-fun x3254 () Int)
(declare-fun x2352 () Int)
(declare-fun x3413 () Int)
(declare-fun x4226 () Int)
(declare-fun x3615 () Int)
(declare-fun x5039 () Int)
(declare-fun x5257 () Bool)
(declare-fun x3706 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x4667 () Int)
(declare-fun x3904 () Int)
(declare-fun x4753 (Int) Int)
(declare-fun x1383 () Int)
(declare-fun x4704 () Int)
(declare-fun x4374 () Int)
(declare-fun x2623 () Bool)
(declare-fun x173 () Int)
(declare-fun x3019 () Int)
(declare-fun x1199 () Int)
(declare-fun x5581 () Int)
(declare-fun x1973 () Bool)
(declare-fun x3268 () Int)
(declare-fun x2593 () Int)
(declare-fun x245 () Int)
(declare-fun x3569 () Bool)
(declare-fun x5026 () Int)
(declare-fun x1472 () Int)
(declare-fun x3754 () Int)
(declare-fun x1904 () Int)
(declare-fun x174 () Int)
(declare-fun x5313 () Int)
(declare-fun x1608 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x4982 (Int) Int)
(declare-fun x1218 () Bool)
(declare-fun x2696 () Int)
(declare-fun x4345 () Int)
(declare-fun x711 () Int)
(declare-fun x2350 () Int)
(declare-fun x1726 () Int)
(declare-fun x4329 () Bool)
(declare-fun x2897 () Int)
(declare-fun x4151 () Int)
(declare-fun x1424 () Int)
(declare-fun x1930 () Int)
(declare-fun x3010 () Int)
(declare-fun x3520 () Int)
(declare-fun x1592 () Int)
(declare-fun x5671 () Bool)
(declare-fun x5215 () Bool)
(declare-fun x4354 () Int)
(declare-fun x2881 () Int)
(declare-fun x5606 () Int)
(declare-fun x3873 () Int)
(declare-fun x2199 () Int)
(declare-fun x3832 () Bool)
(declare-fun x5126 () Int)
(declare-fun x3682 () Int)
(declare-fun x4591 () Int)
(declare-fun x5181 () Int)
(declare-fun x1098 () Bool)
(declare-fun x2837 () Bool)
(declare-fun x5418 () Int)
(declare-fun x1366 () Int)
(declare-fun x156 () Int)
(declare-fun x2827 () Int)
(declare-fun x3008 () Int)
(declare-fun x3052 () Int)
(declare-fun x2474 () Int)
(declare-fun x2904 () Bool)
(declare-fun x4929 () Int)
(declare-fun x2094 () Int)
(declare-fun x274 () Bool)
(declare-fun x2572 () Int)
(declare-fun x691 () Bool)
(declare-fun x5579 () Int)
(declare-fun x2224 () Bool)
(declare-fun x3693 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1715 () Bool)
(declare-fun x1428 () Int)
(declare-fun x1736 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x4158 () Int)
(declare-fun x4332 () Bool)
(declare-fun x3295 () Int)
(declare-fun x4738 () Bool)
(declare-fun x2942 () Bool)
(declare-fun x1645 () Int)
(declare-fun x4317 () Int)
(declare-fun x5095 () Int)
(declare-fun x4992 () Int)
(declare-fun x807 () Int)
(declare-fun x4152 () Bool)
(declare-fun x716 () Int)
(declare-fun x3713 () Int)
(declare-fun x500 () Int)
(declare-fun x91 () Bool)
(declare-fun x139 () Bool)
(declare-fun x2716 () Int)
(declare-fun x3281 () Int)
(declare-fun x475 () Int)
(declare-fun x516 () Bool)
(declare-fun x5626 () Int)
(declare-fun x3660 () Bool)
(declare-fun x648 () Int)
(declare-fun x4606 () Bool)
(declare-fun x3156 () Int)
(declare-fun x4368 () Bool)
(declare-fun x3518 () Bool)
(declare-fun x1696 () Int)
(declare-fun x2145 () Int)
(declare-fun x39 () Int)
(declare-fun x4960 () Bool)
(declare-fun x2175 () Int)
(declare-fun x867 () Int)
(declare-fun x3554 () Int)
(declare-fun x895 () Bool)
(declare-fun x988 () Int)
(declare-fun x2585 () Bool)
(declare-fun x4272 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1727 () Int)
(declare-fun x2820 () Int)
(declare-fun x1933 () Bool)
(declare-fun x2449 () Int)
(declare-fun x1186 () Int)
(declare-fun x3198 () Int)
(declare-fun x754 () Int)
(declare-fun x5058 () Int)
(declare-fun x1297 () Bool)
(declare-fun x3101 () Int)
(declare-fun x1388 () Int)
(declare-fun x4059 () Int)
(declare-fun x1703 () Int)
(declare-fun x2851 () Int)
(declare-fun x5520 () Int)
(declare-fun x894 () Int)
(declare-fun x1398 () Int)
(declare-fun x2810 () Int)
(declare-fun x1231 () Bool)
(declare-fun x1534 () Int)
(declare-fun x3607 () Bool)
(declare-fun x667 () Bool)
(declare-fun x464 () Bool)
(declare-fun x5385 () Int)
(declare-fun x1149 () Int)
(declare-fun x1016 () Int)
(declare-fun x2051 () Int)
(declare-fun x3034 () Bool)
(declare-fun x4008 () Int)
(declare-fun x1562 () Bool)
(declare-fun x993 () Int)
(declare-fun x4725 () Int)
(declare-fun x2792 () Int)
(declare-fun x4795 () Int)
(declare-fun x5641 () Int)
(declare-fun x1753 () Int)
(declare-fun x477 () Int)
(declare-fun x3969 () Int)
(declare-fun x1882 () Bool)
(declare-fun x1987 () Int)
(declare-fun x4476 () Int)
(declare-fun x5051 () Int)
(declare-fun x2477 () Int)
(declare-fun x5018 () Int)
(declare-fun x1640 () Int)
(declare-fun x4813 () Int)
(declare-fun x701 () Bool)
(declare-fun x3036 () Int)
(declare-fun x4510 (Int) Int)
(declare-fun x1859 () Int)
(declare-fun x4656 () Int)
(declare-fun x125 (Int) Int)
(declare-fun x3889 () Int)
(declare-fun x84 () Int)
(declare-fun x3369 () Int)
(declare-fun x2864 () Int)
(declare-fun x2729 () Int)
(declare-fun x4958 () Bool)
(declare-fun x66 () Bool)
(declare-fun x5372 () Bool)
(declare-fun x3330 () Bool)
(declare-fun x4076 () Bool)
(declare-fun x2440 () Int)
(declare-fun x4070 () Int)
(declare-fun x699 () Bool)
(declare-fun x73 () Int)
(declare-fun x5340 () Bool)
(declare-fun x4631 () Bool)
(declare-fun x3131 () Int)
(declare-fun x1543 () Bool)
(declare-fun x5433 (Int) Int)
(declare-fun x2877 () Bool)
(declare-fun x4886 () Bool)
(declare-fun x1938 () Int)
(declare-fun x5496 () Int)
(declare-fun x918 () Int)
(declare-fun x183 () Int)
(declare-fun x4321 () Int)
(declare-fun x1245 () Int)
(declare-fun x315 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x5163 () Int)
(declare-fun x5136 () Int)
(declare-fun x3896 () Bool)
(declare-fun x3937 () Bool)
(declare-fun x3810 () Int)
(declare-fun x621 () Int)
(declare-fun x1369 () Int)
(declare-fun x1230 () Int)
(declare-fun x3466 () Bool)
(declare-fun x2677 () Int)
(declare-fun x2362 () Int)
(declare-fun x3272 () Int)
(declare-fun x2024 () Int)
(declare-fun x3796 (Int) Int)
(declare-fun x1168 () Bool)
(declare-fun x3870 () Int)
(declare-fun x5403 () Bool)
(declare-fun x5150 () Bool)
(declare-fun x4341 () Bool)
(declare-fun x3610 (Int) Int)
(declare-fun x2151 () Bool)
(declare-fun x2394 () Int)
(declare-fun x82 () Int)
(declare-fun x2049 () Int)
(declare-fun x3900 () Bool)
(declare-fun x868 () Bool)
(declare-fun x2589 (Int) Int)
(declare-fun x3449 () Bool)
(declare-fun x2699 () Int)
(declare-fun x1389 () Int)
(declare-fun x3678 () Bool)
(declare-fun x3641 () Int)
(declare-fun x2556 () Bool)
(declare-fun x1256 () Int)
(declare-fun x1163 () Int)
(declare-fun x2040 () Bool)
(declare-fun x4206 () Int)
(declare-fun x228 () Int)
(declare-fun x5400 () Int)
(declare-fun x4251 () Int)
(declare-fun x549 () Int)
(declare-fun x3004 () Int)
(declare-fun x1285 () Int)
(declare-fun x4945 (Int) Int)
(declare-fun x4064 () Bool)
(declare-fun x2644 () Bool)
(declare-fun x1415 () Int)
(declare-fun x2004 () Int)
(declare-fun x1762 () Int)
(declare-fun x1318 () Int)
(declare-fun x1739 () Int)
(declare-fun x2704 () Bool)
(declare-fun x5105 () Int)
(declare-fun x5688 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x5118 () Bool)
(declare-fun x4290 () Int)
(declare-fun x3066 () Int)
(declare-fun x2761 () Int)
(declare-fun x4750 () Int)
(declare-fun x556 () Int)
(declare-fun x3508 () Bool)
(declare-fun x4241 () Int)
(declare-fun x1713 () Int)
(declare-fun x4355 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x2046 () Int)
(declare-fun x5480 () Int)
(declare-fun x1437 () Bool)
(declare-fun x4661 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x3784 () Int)
(declare-fun x1952 () Int)
(declare-fun x2616 () Bool)
(declare-fun x79 () Bool)
(declare-fun x446 () Bool)
(declare-fun x3684 () Int)
(declare-fun x5507 () Int)
(declare-fun x4036 () Bool)
(declare-fun x5567 () Int)
(declare-fun x4469 () Int)
(declare-fun x2369 () Int)
(declare-fun x4984 () Int)
(declare-fun x3137 () Int)
(declare-fun x460 () Int)
(declare-fun x4051 () Int)
(declare-fun x271 () Bool)
(declare-fun x200 () Int)
(declare-fun x3525 () Bool)
(declare-fun x5523 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x4523 () Int)
(declare-fun x997 () Int)
(declare-fun x2165 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1250 () Int)
(declare-fun x5247 () Bool)
(declare-fun x5091 () Bool)
(declare-fun x4537 () Bool)
(declare-fun x2650 () Int)
(declare-fun x5309 () Bool)
(declare-fun x454 () Int)
(declare-fun x5199 () Int)
(declare-fun x538 () Int)
(declare-fun x3689 () Int)
(declare-fun x2120 () Int)
(declare-fun x5066 () Int)
(declare-fun x1521 () Int)
(declare-fun x5556 () Int)
(declare-fun x3725 () Int)
(declare-fun x2068 () Bool)
(declare-fun x2080 () Int)
(declare-fun x1180 () Int)
(declare-fun x5262 () Bool)
(declare-fun x508 () Int)
(declare-fun x2302 () Bool)
(declare-fun x2149 () Int)
(declare-fun x4734 () Int)
(declare-fun x4905 () Bool)
(declare-fun x3663 () Int)
(declare-fun x4538 () Int)
(declare-fun x3510 () Bool)
(declare-fun x4918 () Int)
(declare-fun x4334 () Bool)
(declare-fun x5535 () Int)
(declare-fun x1799 () Bool)
(declare-fun x5234 () Int)
(declare-fun x2483 () Int)
(declare-fun x557 () Bool)
(declare-fun x3898 () Int)
(declare-fun x2930 () Int)
(declare-fun x110 () Bool)
(declare-fun x4363 () Int)
(declare-fun x679 () Int)
(declare-fun x4082 () Bool)
(declare-fun x5140 () Bool)
(declare-fun x5109 (Int) Int)
(declare-fun x4642 () Int)
(declare-fun x1817 () Bool)
(declare-fun x1475 () Int)
(declare-fun x5222 (Int) Int)
(declare-fun x1265 () Int)
(declare-fun x5384 () Bool)
(declare-fun x5652 () Int)
(declare-fun x11 () Bool)
(declare-fun x359 () Int)
(declare-fun x5251 () Int)
(declare-fun x4767 () Bool)
(declare-fun x3397 () Int)
(declare-fun x5016 () Int)
(declare-fun x5655 () Bool)
(declare-fun x3132 () Bool)
(declare-fun x4300 () Int)
(declare-fun x2400 () Int)
(declare-fun x5585 () Bool)
(declare-fun x1611 () Int)
(declare-fun x854 () Bool)
(declare-fun x3994 () Bool)
(declare-fun x2521 (Int Int Int Int Int) Int)
(declare-fun x5011 () Int)
(declare-fun x206 () Int)
(declare-fun x1556 () Int)
(declare-fun x4230 () Int)
(declare-fun x1323 () Int)
(declare-fun x169 () Int)
(declare-fun x2015 (Int) Int)
(declare-fun x1436 () Bool)
(declare-fun x1629 () Int)
(declare-fun x4001 () Int)
(declare-fun x3280 () Int)
(declare-fun x4362 () Bool)
(declare-fun x3860 (Int Int Int) Int)
(declare-fun x1463 () Bool)
(declare-fun x3221 () Bool)
(declare-fun x12 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x4136 () Int)
(declare-fun x1044 () Bool)
(declare-fun x859 () Int)
(declare-fun x4987 () Int)
(declare-fun x1969 () Bool)
(declare-fun x5521 () Bool)
(declare-fun x1924 () Int)
(declare-fun x5461 () Int)
(declare-fun x2252 () Int)
(declare-fun x3434 () Int)
(declare-fun x1003 () Bool)
(declare-fun x2116 () Int)
(declare-fun x660 () Int)
(declare-fun x2525 () Bool)
(declare-fun x3499 () Int)
(declare-fun x4867 () Int)
(declare-fun x5565 () Int)
(declare-fun x4124 () Int)
(declare-fun x3654 () Int)
(declare-fun x2279 () Int)
(declare-fun x3903 () Int)
(declare-fun x2754 () Int)
(declare-fun x4948 () Bool)
(declare-fun x5414 () Int)
(declare-fun x4532 () Int)
(declare-fun x4388 () Int)
(declare-fun x3744 () Bool)
(define-fun x2124 ((x891 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x891) (>= x891 0)) x891 (- x891 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x959 ((x891 Int)) Int (ite (and (< x891 0) (>= x891 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x891 115792089237316195423570985008687907853269984665640564039457584007913129639936) x891))
(define-fun x987 ((x891 Int)) Int (ite (and (>= x891 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x891)) x891 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x891) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x891)) (- x891 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x891 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x891 0)) (+ x891 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4075 x891 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x847 ((x3586 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3586) (<= 0 x3586)))
(define-fun x1411 ((x3586 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3586) (>= x3586 0)))
(define-fun x5069 ((x3586 Int) (x2123 Int)) Bool (= (* x2123 x3586) (x2779 x3586 x2123)))
(define-fun x813 ((x3586 Int) (x2123 Int)) Bool (and (= (- (* (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3586) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2779 (- x3586 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x2779 x3586 (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x3586 (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x2123 x3586) (* x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2779 (- x3586 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2123))))
(define-fun x4473 ((x3586 Int) (x2123 Int)) Bool (=> (and (< 0 x3586) (< 0 x2123)) (= (= x2123 (x4727 (x987 (x2779 x3586 x2123)) x3586)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2779 x3586 x2123)))))
(define-fun x1767 ((x3586 Int) (x2123 Int)) Bool (=> (and (not (= x2123 0)) (not (= 0 x3586))) (and (= (x4727 (x2779 x3586 x2123) x3586) x2123) (= (x4727 (x2779 x3586 x2123) x2123) x3586))))
(define-fun x3700 ((x3586 Int) (x2123 Int)) Bool (=> (and (< 0 x2123) (> x3586 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2779 x3586 x2123)) (< (x4727 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3586) x2123))))
(define-fun x4307 ((x3586 Int) (x2123 Int)) Bool (and (= (x987 (x2779 x3586 x2123)) (x987 (x2779 x3586 (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x987 (x2779 (- x3586 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2123)) (x987 (x2779 x3586 x2123))) (= (x987 (x2779 (- x3586 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x987 (x2779 x3586 x2123)))))
(define-fun x946 ((x3586 Int) (x2123 Int)) Bool (and (=> (and (and (<= x2123 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x2123)) (and (> x3586 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3586))) (= (>= (x4727 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2123) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3586)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x2779 (- x3586 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2123)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2123) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2123)) (and (> x3586 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3586))) (= (<= (x2779 (- x3586 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x4727 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2123)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3586)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2123) (> x2123 0)) (and (< 0 x3586) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3586))) (= (>= (x4727 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2123) x3586) (<= (x2779 x3586 x2123) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2123) (<= x2123 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3586) (> x3586 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2123) (x4727 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3586)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x2779 x3586 (- x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x926 ((x3586 Int) (x2123 Int)) Bool (and (x5069 x3586 x2123) (x946 x3586 x2123) (x1767 x3586 x2123) (x4307 x3586 x2123) (x813 x3586 x2123) (x4473 x3586 x2123) (x3700 x3586 x2123)))
(define-fun x2050 ((x3586 Int)) Bool (and (= 0 (x2779 0 x3586)) (= 0 (x2779 x3586 0))))
(define-fun x3855 ((x3586 Int)) Bool (and (= (x2779 x3586 1) x3586) (= (x2779 1 x3586) x3586)))
(define-fun x3513 ((x3586 Int)) Bool (and (x3855 x3586) (x2050 x3586)))
(define-fun x1046 ((x3586 Int) (x2123 Int)) Bool (=> (and (< 0 x3586) (> x2123 0)) (and (>= x3586 (x4727 x3586 x2123)) (>= (x4727 x3586 x2123) 0))))
(define-fun x2529 ((x3586 Int) (x2123 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3586) (>= x3586 0)) (and (<= 1 x2123) (< x2123 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (<= 0 (x4727 x3586 x2123)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4727 x3586 x2123)))))
(define-fun x1631 ((x3586 Int) (x2123 Int)) Bool (=> (and (< x2123 x3586) (> x2123 1)) (> x3586 (x4727 x3586 x2123))))
(define-fun x1446 ((x3586 Int) (x2123 Int)) Bool (=> (and (< 0 x3586) (< 0 x2123)) (= (= 0 (x4727 x3586 x2123)) (> x2123 x3586))))
(define-fun x5392 ((x3586 Int) (x2123 Int)) Bool (=> (and (> x3586 0) (> x2123 0)) (and (> (* (x4727 x3586 x2123) x2123) (- x3586 x2123)) (<= (* (x4727 x3586 x2123) x2123) x3586))))
(define-fun x2188 ((x3586 Int) (x2123 Int)) Bool (= (* (x4727 x3586 x2123) x2123) (- x3586 (x210 (- x2123 1) x3586))))
(define-fun x1746 ((x3586 Int) (x2123 Int)) Bool (and (x1631 x3586 x2123) (x2188 x3586 x2123) (x1446 x3586 x2123) (x5392 x3586 x2123) (x1046 x3586 x2123) (x2529 x3586 x2123)))
(define-fun x5526 ((x3586 Int)) Bool (= 0 (x4727 0 x3586)))
(define-fun x633 ((x3586 Int)) Bool (= (x4727 x3586 1) x3586))
(define-fun x4347 ((x3586 Int)) Bool (=> (not (= x3586 0)) (= (x4727 x3586 x3586) 1)))
(define-fun x2657 ((x3586 Int)) Bool (and (x633 x3586) (x5526 x3586) (x4347 x3586)))
(define-fun x5278 ((x3586 Int)) Bool (and (= x3586 (x210 x3586 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3586) x3586)))
(define-fun x1685 ((x3586 Int)) Bool (and (= 0 (x210 0 x3586)) (= (x210 x3586 0) 0)))
(define-fun x1808 ((x3586 Int)) Bool (= x3586 (x210 x3586 x3586)))
(define-fun x367 ((x3586 Int)) Bool (and (x1808 x3586) (x5278 x3586) (x1685 x3586)))
(define-fun x1962 ((x3586 Int) (x2123 Int)) Bool (= (x210 x3586 x2123) (x210 x2123 x3586)))
(define-fun x3514 ((x3586 Int) (x2123 Int)) Bool (and (<= 0 (x210 x3586 x2123)) (=> (>= x3586 0) (>= x3586 (x210 x3586 x2123))) (=> (<= 0 x2123) (>= x2123 (x210 x3586 x2123)))))
(define-fun x3910 ((x3586 Int) (x2123 Int)) Bool (and (x1962 x3586 x2123) (x3514 x3586 x2123)))
(define-fun x721 ((x3586 Int)) Bool (= (x210 x3586 1) (x4075 x3586 2)))
(define-fun x1679 ((x3586 Int)) Bool (and (x721 x3586) (x3910 x3586 1)))
(define-fun x227 ((x3586 Int) (x2123 Int)) Bool (and (> x2123 (x4075 x3586 x2123)) (<= 0 (x4075 x3586 x2123))))
(define-fun x5662 ((x3586 Int) (x2123 Int)) Bool (=> (and (< 0 x2123) (<= 0 x3586)) (= (> x2123 x3586) (= (x4075 x3586 x2123) x3586))))
(define-fun x949 ((x3586 Int) (x2123 Int)) Bool (=> (and (> x2123 0) (and (< x3586 (+ x2123 x2123)) (>= x3586 x2123))) (= (- x3586 x2123) (x4075 x3586 x2123))))
(define-fun x3284 ((x3586 Int) (x2123 Int)) Bool (=> (> x2123 0) (= (+ (* (x4727 x3586 x2123) x2123) (x4075 x3586 x2123)) x3586)))
(define-fun x379 ((x3586 Int) (x2123 Int)) Bool (and (x3284 x3586 x2123) (x5662 x3586 x2123) (x227 x3586 x2123) (x949 x3586 x2123)))
(define-fun x24 ((x3586 Int)) Bool (= 0 (x4075 0 x3586)))
(define-fun x4200 ((x3586 Int)) Bool (= (x4075 x3586 1) 0))
(define-fun x1132 ((x3586 Int)) Bool (= 0 (x4075 x3586 x3586)))
(define-fun x3952 ((x3586 Int)) Bool (and (x24 x3586) (x1132 x3586) (x4200 x3586)))
(define-fun x3163 ((x3586 Int)) Bool (= (x210 x3586 127) (x4075 x3586 128)))
(define-fun x1063 ((x3586 Int)) Bool (and (x3910 x3586 127) (x3163 x3586)))
(define-fun x4755 ((x3586 Int)) Bool (= (x987 x3586) (+ (x210 x3586 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x4075 x3586 256))))
(define-fun x1456 ((x3586 Int)) Bool (and (x3910 x3586 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x4755 x3586)))
(define-fun x4947 ((x3586 Int)) Bool (= (x987 x3586) (+ (x4075 x3586 32) (x210 x3586 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x3500 ((x3586 Int)) Bool (and (x4947 x3586) (x3910 x3586 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x19 ((x3586 Int)) Bool (= (x4075 x3586 26959946667150639794667015087019630673637144422540572481103610249216) (x210 x3586 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1139 ((x3586 Int)) Bool (and (x3910 x3586 26959946667150639794667015087019630673637144422540572481103610249215) (x19 x3586)))
(define-fun x47 ((x1158 Int)) Int 0)
(define-fun x1038 ((x1158 Int)) Int 0)
(define-fun x4185 ((x1158 Int)) Int 0)
(define-fun x585 ((x1158 Int)) Int 0)
(define-fun x231 ((x1158 Int)) Int (ite (> x4287 x1158) (x4510 x1158) 0))
(define-fun x401 ((x1158 Int)) Int (ite (> x1034 x1158) (x2886 x1158) 0))
(define-fun x4751 ((x1158 Int)) Int (ite (< x1158 x1742) (x391 x1158) 0))
(define-fun x3895 ((x1158 Int)) Int (ite (< x1158 x2642) (x1956 x1158) 0))
(define-fun x1992 ((x1158 Int)) Int (ite (< x1158 x800) (x3258 x1158) 0))
(define-fun x595 ((x1158 Int)) Int (ite (< x1158 x2203) (x3443 x1158) 0))
(define-fun x1820 ((x1158 Int)) Int (ite (< x1158 x2292) (x2009 x1158) 0))
(define-fun x218 ((x1158 Int)) Int (ite (< x1158 x4458) (x4753 x1158) 0))
(define-fun x4205 ((x1158 Int)) Int (ite (< x1158 x2162) (x2998 x1158) 0))
(define-fun x3352 ((x1158 Int)) Int (ite (> x3264 x1158) (x4208 x1158) 0))
(define-fun x1074 ((x1158 Int)) Int (ite (< x1158 x4289) (x14 x1158) 0))
(define-fun x4840 ((x1158 Int)) Int (ite (> x3889 x1158) (x1894 x1158) 0))
(define-fun x848 ((x1158 Int)) Int (ite (> x4787 x1158) (x1931 x1158) 0))
(define-fun x2574 ((x1158 Int)) Int (ite (> x2414 x1158) (x5015 x1158) 0))
(define-fun x7 ((x1158 Int)) Int 0)
(define-fun x5196 ((x1158 Int)) Int 0)
(define-fun x3710 ((x1158 Int)) Int 0)
(define-fun x5112 ((x1158 Int)) Int 0)
(define-fun x5631 ((x1158 Int)) Int 0)
(define-fun x1549 ((x1158 Int)) Int 0)
(define-fun x3974 ((x1158 Int)) Int 0)
(define-fun x59 ((x1158 Int)) Int 0)
(define-fun x4708 ((x1158 Int)) Int 0)
(define-fun x4115 ((x1158 Int)) Int 0)
(define-fun x655 ((x1158 Int)) Int 0)
(define-fun x769 ((x1158 Int)) Int 0)
(define-fun x4284 ((x1158 Int)) Int 0)
(define-fun x2206 ((x1158 Int)) Int 0)
(define-fun x4432 ((x1158 Int)) Int 0)
(define-fun x2092 ((x1158 Int)) Int 0)
(define-fun x3809 ((x1158 Int)) Int 0)
(define-fun x1944 ((x1158 Int)) Int 0)
(define-fun x1861 ((x1158 Int)) Int 0)
(define-fun x1045 ((x1158 Int)) Int 0)
(define-fun x2061 ((x1158 Int)) Int 0)
(define-fun x5318 ((x1158 Int)) Int 0)
(define-fun x1583 ((x1158 Int)) Int 0)
(define-fun x5316 ((x1158 Int)) Int 0)
(define-fun x4855 ((x1158 Int)) Int 0)
(define-fun x491 ((x1158 Int)) Int 0)
(define-fun x5310 ((x1158 Int)) Int 0)
(define-fun x969 ((x1158 Int)) Int 0)
(define-fun x1365 ((x1158 Int)) Int 0)
(define-fun x4673 ((x1158 Int)) Int 0)
(define-fun x4684 ((x1158 Int)) Int 0)
(define-fun x2538 ((x1158 Int)) Int 0)
(define-fun x4659 ((x1158 Int)) Int 0)
(define-fun x3320 ((x1158 Int)) Int 0)
(define-fun x1653 ((x1158 Int)) Int 0)
(define-fun x4926 ((x1158 Int)) Int 0)
(define-fun x5347 ((x1158 Int)) Int 0)
(define-fun x3279 ((x1158 Int)) Int 0)
(define-fun x1394 ((x1158 Int)) Int 0)
(define-fun x1409 ((x1158 Int)) Int 0)
(define-fun x430 ((x1158 Int)) Int 0)
(define-fun x2833 ((x1158 Int)) Int 0)
(define-fun x1111 ((x1158 Int)) Int 0)
(define-fun x1887 ((x1158 Int)) Int 0)
(define-fun x722 ((x1158 Int)) Int 0)
(define-fun x4899 ((x1158 Int)) Int 0)
(define-fun x4161 ((x1158 Int)) Int 0)
(define-fun x3024 ((x1158 Int)) Int 0)
(define-fun x2085 ((x1158 Int)) Int 0)
(define-fun x4417 ((x1158 Int)) Int 0)
(define-fun x3570 ((x1158 Int)) Int 0)
(define-fun x1304 ((x1158 Int)) Int 0)
(define-fun x1958 ((x1158 Int)) Int 0)
(define-fun x4731 ((x1158 Int)) Int 0)
(define-fun x2814 ((x1158 Int)) Int 0)
(define-fun x1263 ((x1158 Int)) Int 0)
(define-fun x2198 ((x1158 Int)) Int 0)
(define-fun x2803 ((x1158 Int)) Int 0)
(define-fun x1187 ((x1158 Int)) Int 0)
(define-fun x4023 ((x1158 Int)) Int 0)
(define-fun x1783 ((x1158 Int)) Int 0)
(define-fun x4240 ((x1158 Int)) Int 0)
(define-fun x5029 ((x1158 Int)) Int 0)
(define-fun x5239 ((x1158 Int)) Int 0)
(define-fun x4639 ((x1158 Int)) Int 0)
(define-fun x2349 ((x1158 Int)) Int 0)
(define-fun x2636 ((x1158 Int)) Int 0)
(define-fun x5388 ((x1158 Int)) Int 0)
(define-fun x2073 ((x1158 Int)) Int 0)
(define-fun x727 ((x1158 Int)) Int 0)
(define-fun x598 ((x1158 Int)) Int 0)
(define-fun x230 ((x1158 Int)) Int 0)
(define-fun x2043 ((x1158 Int)) Int 0)
(define-fun x2809 ((x1158 Int)) Int 0)
(define-fun x4517 ((x1158 Int)) Int 0)
(define-fun x5099 ((x1158 Int)) Int 0)
(define-fun x2615 ((x1158 Int)) Int 0)
(define-fun x681 ((x1158 Int)) Int 0)
(define-fun x1000 ((x1158 Int)) Int 0)
(define-fun x3692 ((x1158 Int)) Int 0)
(define-fun x486 ((x1158 Int)) Int 0)
(define-fun x4233 ((x1158 Int)) Int 0)
(define-fun x4961 ((x1158 Int)) Int 0)
(define-fun x4210 ((x1158 Int)) Int 0)
(define-fun x2053 ((x1158 Int)) Int 0)
(define-fun x506 ((x1158 Int)) Int 0)
(define-fun x1011 ((x1158 Int)) Int 0)
(define-fun x4379 ((x1158 Int)) Int 0)
(define-fun x3793 ((x1158 Int)) Int 0)
(define-fun x3108 ((x1158 Int)) Int 0)
(define-fun x3128 ((x1158 Int)) Int (ite (= x1158 x1794) x46 (x4424 x1158)))
(define-fun x4914 ((x1158 Int)) Int (ite (= x4162 x1158) x814 (x3128 x1158)))
(define-fun x4465 ((x1158 Int)) Int (ite (= x1158 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x1653 x1158)))
(define-fun x5637 ((x1158 Int)) Int (ite (= 132 x1158) x5441 (x4465 x1158)))
(define-fun x4248 ((x1158 Int)) Int (ite (= 0 x1158) x2148 (x3354 x1158)))
(define-fun x2106 ((x1158 Int)) Int (ite (= x1158 128) x2148 (x5637 x1158)))
(define-fun x1275 ((x1158 Int)) Int (ite (= x1158 0) x1555 (x3354 x1158)))
(define-fun x3377 ((x1158 Int)) Int (ite (= 128 x1158) x1555 (x5637 x1158)))
(define-fun x3596 ((x1158 Int)) Int (ite (= 128 x1158) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x1653 x1158)))
(define-fun x2506 ((x1158 Int)) Int (ite (= 132 x1158) x5441 (x3596 x1158)))
(define-fun x3912 ((x1158 Int)) Int (ite (= x1158 0) x521 (x4922 x1158)))
(define-fun x4377 ((x1158 Int)) Int (ite (= 128 x1158) x521 (x2506 x1158)))
(define-fun x1731 ((x1158 Int)) Int (ite (= x1158 0) x1555 (x4922 x1158)))
(define-fun x961 ((x1158 Int)) Int (ite (= x1158 128) x1555 (x2506 x1158)))
(define-fun x5265 ((x1158 Int)) Int (ite x3840 (ite x1161 (x4377 x1158) (x961 x1158)) (ite x2035 (x2106 x1158) (x3377 x1158))))
(define-fun x2684 ((x1158 Int)) Int (ite (= x2818 x1158) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x5265 x1158)))
(define-fun x5680 ((x1158 Int)) Int (ite (= x5105 x1158) x4162 (x2684 x1158)))
(define-fun x5135 ((x1158 Int)) Int (ite (= x4162 x1158) x1308 (x4914 x1158)))
(define-fun x4120 ((x1158 Int)) Int (ite (= x1158 x2413) x1452 (x5135 x1158)))
(define-fun x4804 ((x1158 Int)) Int (ite (= x1158 x2493) x2878 (x594 x1158)))
(define-fun x5378 ((x1158 Int)) Int (ite (= x1158 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x4517 x1158)))
(define-fun x1351 ((x1158 Int)) Int (ite (= 132 x1158) x4963 (x5378 x1158)))
(define-fun x601 ((x1158 Int)) Int (ite (= x1158 164) x937 (x1351 x1158)))
(define-fun x5279 ((x1158 Int)) Int (ite (= x1158 196) x4752 (x601 x1158)))
(define-fun x180 ((x1158 Int)) Int (ite (= 228 x1158) x2702 (x5279 x1158)))
(define-fun x2669 ((x1158 Int)) Int (ite (= x1158 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x4517 x1158)))
(define-fun x54 ((x1158 Int)) Int (ite (= 132 x1158) x5553 (x2669 x1158)))
(define-fun x1896 ((x1158 Int)) Int (ite (= 164 x1158) 128 (x54 x1158)))
(define-fun x2799 ((x1158 Int)) Int (ite (= x1158 260) x1125 (x1896 x1158)))
(define-fun x5098 ((x1158 Int)) Int (ite (= x1158 292) x4317 (x2799 x1158)))
(define-fun x176 ((x1158 Int)) Int (ite (= x1158 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x4517 x1158)))
(define-fun x3631 ((x1158 Int)) Int (ite (= x1158 132) x1804 (x176 x1158)))
(define-fun x2566 ((x1158 Int)) Int (ite (= x1158 164) 128 (x3631 x1158)))
(define-fun x1690 ((x1158 Int)) Int (ite (= 260 x1158) x936 (x2566 x1158)))
(define-fun x4739 ((x1158 Int)) Int (ite (= 292 x1158) x2640 (x1690 x1158)))
(define-fun x4747 ((x1158 Int)) Int (ite (= x1158 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x4517 x1158)))
(define-fun x319 ((x1158 Int)) Int (ite (= 132 x1158) x2822 (x4747 x1158)))
(define-fun x5547 ((x1158 Int)) Int (ite (= 164 x1158) x4521 (x319 x1158)))
(define-fun x1717 ((x1158 Int)) Int (ite (= x2071 x1158) 2 (x2537 x1158)))
(define-fun x4132 ((x1158 Int)) Int (ite (= x1492 x1158) x4521 (x94 x1158)))
(define-fun x2532 ((x1158 Int)) Int (ite (= 128 x1158) x4521 (x4659 x1158)))
(define-fun x3530 ((x1158 Int)) Int (ite (= x1158 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2532 x1158)))
(define-fun x811 ((x1158 Int)) Int (ite (= 132 x1158) x2822 (x3530 x1158)))
(define-fun x3149 ((x1158 Int)) Int (ite (= x1158 164) 0 (x811 x1158)))
(define-fun x4965 ((x1158 Int)) Int (ite (= x1158 196) 0 (x3149 x1158)))
(define-fun x1569 ((x1158 Int)) Int (ite (= x1158 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x4517 x1158)))
(define-fun x3079 ((x1158 Int)) Int (ite (= 132 x1158) x4580 (x1569 x1158)))
(define-fun x1497 ((x1158 Int)) Int (ite (= 164 x1158) 128 (x3079 x1158)))
(define-fun x2634 ((x1158 Int)) Int (ite (= x1158 260) x3237 (x1497 x1158)))
(define-fun x1425 ((x1158 Int)) Int (ite (= x1158 292) x2370 (x2634 x1158)))
(define-fun x2265 ((x1158 Int)) Int (ite (= 128 x1158) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x4517 x1158)))
(define-fun x3125 ((x1158 Int)) Int (ite (= 132 x1158) x2332 (x2265 x1158)))
(define-fun x247 ((x1158 Int)) Int (ite (= x1158 164) x4630 (x3125 x1158)))
(define-fun x5352 ((x1158 Int)) Int (ite (= 196 x1158) x3687 (x247 x1158)))
(define-fun x568 ((x1158 Int)) Int (ite (= x1158 x4268) x458 (x4120 x1158)))
(define-fun x1636 ((x1158 Int)) Int (ite (= x5672 x1158) x3621 (x568 x1158)))
(define-fun x3113 ((x1158 Int)) Int (ite (= 128 x1158) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x4517 x1158)))
(define-fun x5543 ((x1158 Int)) Int (ite (= x1158 132) x2210 (x3113 x1158)))
(define-fun x2437 ((x1158 Int)) Int (ite (= x4162 x1158) x3154 (x4120 x1158)))
(define-fun x410 ((x1158 Int)) Int (ite (= x2210 x1158) x3031 (x2437 x1158)))
(define-fun x5054 ((x1158 Int)) Int (ite (= x1158 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x4517 x1158)))
(define-fun x3006 ((x1158 Int)) Int (ite (= x1158 132) x4316 (x5054 x1158)))
(define-fun x1093 ((x1158 Int)) Int (x3610 x1158))
(define-fun x351 ((x1158 Int)) Int (ite (= x4540 x1158) x4371 (x774 x1158)))
(define-fun x5335 ((x1158 Int)) Int (ite x4997 (ite x1831 (x774 x1158) (x351 x1158)) (x774 x1158)))
(define-fun x470 ((x1158 Int)) Int (ite x1836 (x774 x1158) (x5335 x1158)))
(define-fun x334 ((x1158 Int)) Int (ite x440 (x3339 x1158) (x502 x1158)))
(define-fun x324 ((x1158 Int)) Int (ite x3733 (x3339 x1158) (ite x5661 (x334 x1158) (x3339 x1158))))
(define-fun x2244 ((x1158 Int)) Int (ite x4997 (ite x666 (x3017 x1158) (x3339 x1158)) (ite x4153 (x3339 x1158) (x324 x1158))))
(define-fun x5268 ((x1158 Int)) Int (ite x1836 (x3339 x1158) (x2244 x1158)))
(define-fun x4397 ((x1158 Int)) Int (x2559 x1158))
(define-fun x5228 ((x1158 Int)) Int (x3342 x1158))
(define-fun x5167 ((x1158 Int)) Int (ite x440 (x4818 x1158) (x3936 x1158)))
(define-fun x4904 ((x1158 Int)) Int (ite x3733 (x4818 x1158) (ite x5661 (x5167 x1158) (x4818 x1158))))
(define-fun x5192 ((x1158 Int)) Int (ite x4997 (ite x666 (x4707 x1158) (x4818 x1158)) (ite x4153 (x4818 x1158) (x4904 x1158))))
(define-fun x757 ((x1158 Int)) Int (ite x1836 (x4818 x1158) (x5192 x1158)))
(define-fun x3243 ((x1158 Int)) Int (x2781 x1158))
(define-fun x3425 ((x1158 Int)) Int (ite (= x1158 x5108) 3 (x1717 x1158)))
(define-fun x1259 ((x1158 Int)) Int (ite x1442 (x1717 x1158) (x3425 x1158)))
(define-fun x1754 ((x1158 Int)) Int (ite (= x1301 x1158) 3 (x2537 x1158)))
(define-fun x2944 ((x1158 Int)) Int (ite x3733 (x1754 x1158) (x2537 x1158)))
(define-fun x3308 ((x1158 Int)) Int (ite x4997 (x2537 x1158) (ite x4153 (x1259 x1158) (x2944 x1158))))
(define-fun x4487 ((x1158 Int)) Int (ite x1836 (x2537 x1158) (x3308 x1158)))
(define-fun x5575 ((x1158 Int)) Int (ite x666 (x533 x1158) (x3887 x1158)))
(define-fun x570 ((x1158 Int)) Int (ite x5661 (ite x440 (x3887 x1158) (x3789 x1158)) (x3887 x1158)))
(define-fun x5518 ((x1158 Int)) Int (ite x4153 (x3887 x1158) (ite x3733 (x3887 x1158) (x570 x1158))))
(define-fun x3967 ((x1158 Int)) Int (ite x1836 (x3887 x1158) (ite x4997 (x5575 x1158) (x5518 x1158))))
(define-fun x974 ((x1158 Int)) Int (ite x440 (x2360 x1158) (x4865 x1158)))
(define-fun x3714 ((x1158 Int)) Int (ite x3733 (x2360 x1158) (ite x5661 (x974 x1158) (x2360 x1158))))
(define-fun x3211 ((x1158 Int)) Int (ite x4997 (ite x666 (x4982 x1158) (x2360 x1158)) (ite x4153 (x2360 x1158) (x3714 x1158))))
(define-fun x2458 ((x1158 Int)) Int (ite x1836 (x2360 x1158) (x3211 x1158)))
(define-fun x1040 ((x1158 Int)) Int (ite x440 (x4553 x1158) (x444 x1158)))
(define-fun x4157 ((x1158 Int)) Int (ite x3733 (x4553 x1158) (ite x5661 (x1040 x1158) (x4553 x1158))))
(define-fun x1993 ((x1158 Int)) Int (ite x4997 (ite x666 (x5273 x1158) (x4553 x1158)) (ite x4153 (x4553 x1158) (x4157 x1158))))
(define-fun x1293 ((x1158 Int)) Int (ite x1836 (x4553 x1158) (x1993 x1158)))
(define-fun x684 ((x1158 Int)) Int (ite x440 (x5168 x1158) (x3157 x1158)))
(define-fun x2126 ((x1158 Int)) Int (ite x3733 (x5168 x1158) (ite x5661 (x684 x1158) (x5168 x1158))))
(define-fun x337 ((x1158 Int)) Int (ite x4997 (ite x666 (x5425 x1158) (x5168 x1158)) (ite x4153 (x5168 x1158) (x2126 x1158))))
(define-fun x5156 ((x1158 Int)) Int (ite x1836 (x5168 x1158) (x337 x1158)))
(define-fun x4209 ((x1158 Int)) Int (ite x440 (x2321 x1158) (x901 x1158)))
(define-fun x996 ((x1158 Int)) Int (ite x3733 (x2321 x1158) (ite x5661 (x4209 x1158) (x2321 x1158))))
(define-fun x4446 ((x1158 Int)) Int (ite x4997 (ite x666 (x4256 x1158) (x2321 x1158)) (ite x4153 (x2321 x1158) (x996 x1158))))
(define-fun x2086 ((x1158 Int)) Int (ite x1836 (x2321 x1158) (x4446 x1158)))
(define-fun x2808 ((x1158 Int)) Int (ite x440 (x5222 x1158) (x2589 x1158)))
(define-fun x181 ((x1158 Int)) Int (ite x3733 (x5222 x1158) (ite x5661 (x2808 x1158) (x5222 x1158))))
(define-fun x1165 ((x1158 Int)) Int (ite x4997 (ite x666 (x125 x1158) (x5222 x1158)) (ite x4153 (x5222 x1158) (x181 x1158))))
(define-fun x1443 ((x1158 Int)) Int (ite x1836 (x5222 x1158) (x1165 x1158)))
(define-fun x2894 ((x1158 Int)) Int (ite x440 (x3863 x1158) (x3366 x1158)))
(define-fun x5448 ((x1158 Int)) Int (ite x3733 (x3863 x1158) (ite x5661 (x2894 x1158) (x3863 x1158))))
(define-fun x4575 ((x1158 Int)) Int (ite x4997 (ite x666 (x5550 x1158) (x3863 x1158)) (ite x4153 (x3863 x1158) (x5448 x1158))))
(define-fun x3606 ((x1158 Int)) Int (ite x1836 (x3863 x1158) (x4575 x1158)))
(define-fun x3483 ((x1158 Int)) Int (x2865 x1158))
(define-fun x746 ((x1158 Int)) Int (x4945 x1158))
(define-fun x2168 ((x1158 Int)) Int (ite x440 (x4860 x1158) (x5085 x1158)))
(define-fun x5161 ((x1158 Int)) Int (ite x3733 (x4860 x1158) (ite x5661 (x2168 x1158) (x4860 x1158))))
(define-fun x264 ((x1158 Int)) Int (ite x4997 (ite x666 (x1346 x1158) (x4860 x1158)) (ite x4153 (x4860 x1158) (x5161 x1158))))
(define-fun x4598 ((x1158 Int)) Int (ite x1836 (x4860 x1158) (x264 x1158)))
(define-fun x4820 ((x1158 Int)) Int (ite x666 (x5415 x1158) (x2786 x1158)))
(define-fun x4207 ((x1158 Int)) Int (ite x5661 (ite x440 (x2786 x1158) (x4 x1158)) (x2786 x1158)))
(define-fun x4129 ((x1158 Int)) Int (ite x4153 (x2786 x1158) (ite x3733 (x2786 x1158) (x4207 x1158))))
(define-fun x3013 ((x1158 Int)) Int (ite x1836 (x2786 x1158) (ite x4997 (x4820 x1158) (x4129 x1158))))
(define-fun x1935 ((x1158 Int)) Int (ite x440 (x3477 x1158) (x1102 x1158)))
(define-fun x4859 ((x1158 Int)) Int (ite x3733 (x3477 x1158) (ite x5661 (x1935 x1158) (x3477 x1158))))
(define-fun x4516 ((x1158 Int)) Int (ite x4997 (ite x666 (x5229 x1158) (x3477 x1158)) (ite x4153 (x3477 x1158) (x4859 x1158))))
(define-fun x3818 ((x1158 Int)) Int (ite x1836 (x3477 x1158) (x4516 x1158)))
(define-fun x2246 ((x1158 Int)) Int (x1869 x1158))
(define-fun x1084 ((x1158 Int)) Int (ite x440 (x594 x1158) (x4878 x1158)))
(define-fun x5158 ((x1158 Int)) Int (ite x3733 (x594 x1158) (ite x5661 (x1084 x1158) (x594 x1158))))
(define-fun x2374 ((x1158 Int)) Int (ite x4997 (ite x666 (x3796 x1158) (x594 x1158)) (ite x4153 (x594 x1158) (x5158 x1158))))
(define-fun x186 ((x1158 Int)) Int (ite x1836 (x594 x1158) (x2374 x1158)))
(define-fun x3521 ((x1158 Int)) Int (ite x4997 (x94 x1158) (ite x4153 (x4132 x1158) (x94 x1158))))
(define-fun x3534 ((x1158 Int)) Int (ite x1836 (x94 x1158) (x3521 x1158)))
(define-fun x1316 ((x1158 Int)) Int (ite x666 (x3142 x1158) (x2954 x1158)))
(define-fun x3150 ((x1158 Int)) Int (ite x5661 (ite x440 (x2954 x1158) (x1206 x1158)) (x2954 x1158)))
(define-fun x3143 ((x1158 Int)) Int (ite x4153 (x2954 x1158) (ite x3733 (x2954 x1158) (x3150 x1158))))
(define-fun x1858 ((x1158 Int)) Int (ite x1836 (x2954 x1158) (ite x4997 (x1316 x1158) (x3143 x1158))))
(define-fun x5224 ((x1158 Int)) Int (x3610 x1158))
(define-fun x3317 ((x1158 Int)) Int (x3342 x1158))
(define-fun x576 ((x1158 Int)) Int (x2559 x1158))
(define-fun x2034 ((x1158 Int)) Int (ite x4997 (x5575 x1158) (x5518 x1158)))
(define-fun x1795 ((x1158 Int)) Int (x2781 x1158))
(define-fun x5292 ((x1158 Int)) Int (x4945 x1158))
(define-fun x4168 ((x1158 Int)) Int (x2865 x1158))
(define-fun x3946 ((x1158 Int)) Int (ite x4997 (x4820 x1158) (x4129 x1158)))
(define-fun x2722 ((x1158 Int)) Int (x1869 x1158))
(define-fun x1174 ((x1158 Int)) Int (ite x4997 (x1316 x1158) (x3143 x1158)))
(define-fun x4478 ((x1158 Int)) Int (ite x4153 (x5222 x1158) (x181 x1158)))
(define-fun x879 ((x1158 Int)) Int (ite x4153 (x5168 x1158) (x2126 x1158)))
(define-fun x3069 ((x1158 Int)) Int (x3610 x1158))
(define-fun x4436 ((x1158 Int)) Int (x2559 x1158))
(define-fun x662 ((x1158 Int)) Int (ite x4153 (x4818 x1158) (x4904 x1158)))
(define-fun x4366 ((x1158 Int)) Int (x2781 x1158))
(define-fun x686 ((x1158 Int)) Int (x3342 x1158))
(define-fun x2910 ((x1158 Int)) Int (x4945 x1158))
(define-fun x453 ((x1158 Int)) Int (ite x4153 (x3339 x1158) (x324 x1158)))
(define-fun x4870 ((x1158 Int)) Int (ite x4153 (x2360 x1158) (x3714 x1158)))
(define-fun x1020 ((x1158 Int)) Int (ite x4153 (x2321 x1158) (x996 x1158)))
(define-fun x1932 ((x1158 Int)) Int (x1869 x1158))
(define-fun x423 ((x1158 Int)) Int (x2865 x1158))
(define-fun x3588 ((x1158 Int)) Int (ite x4153 (x3477 x1158) (x4859 x1158)))
(define-fun x5343 ((x1158 Int)) Int (ite x4153 (x4860 x1158) (x5161 x1158)))
(define-fun x4445 ((x1158 Int)) Int (ite x4153 (x594 x1158) (x5158 x1158)))
(define-fun x2173 ((x1158 Int)) Int (x774 x1158))
(define-fun x3048 ((x1158 Int)) Int (ite x4153 (x3863 x1158) (x5448 x1158)))
(define-fun x851 ((x1158 Int)) Int (ite x4153 (x4553 x1158) (x4157 x1158)))
(define-fun x5237 ((x1158 Int)) Int (ite x4153 (x1259 x1158) (x2944 x1158)))
(define-fun x5379 ((x1158 Int)) Int (ite x4153 (x4132 x1158) (x94 x1158)))
(define-fun x945 ((x1158 Int)) Int (ite (= x4268 x1158) x5567 (x4120 x1158)))
(define-fun x1441 ((x1158 Int)) Int (ite x3733 (x3887 x1158) (x570 x1158)))
(define-fun x3305 ((x1158 Int)) Int (ite x3733 (x2954 x1158) (x3150 x1158)))
(define-fun x3083 ((x1158 Int)) Int (ite x3733 (x2786 x1158) (x4207 x1158)))
(define-fun x3616 ((x1158 Int)) Int (ite x5661 (x2808 x1158) (x5222 x1158)))
(define-fun x4847 ((x1158 Int)) Int (ite x5661 (x684 x1158) (x5168 x1158)))
(define-fun x29 ((x1158 Int)) Int (ite x5661 (x5167 x1158) (x4818 x1158)))
(define-fun x3911 ((x1158 Int)) Int (ite x5661 (x974 x1158) (x2360 x1158)))
(define-fun x338 ((x1158 Int)) Int (ite x5661 (x334 x1158) (x3339 x1158)))
(define-fun x2520 ((x1158 Int)) Int (ite x5661 (x2894 x1158) (x3863 x1158)))
(define-fun x466 ((x1158 Int)) Int (ite x5661 (x1935 x1158) (x3477 x1158)))
(define-fun x3869 ((x1158 Int)) Int (ite x5661 (x2168 x1158) (x4860 x1158)))
(define-fun x4480 ((x1158 Int)) Int (ite x5661 (x1040 x1158) (x4553 x1158)))
(define-fun x5490 ((x1158 Int)) Int (ite x5661 (x1084 x1158) (x594 x1158)))
(define-fun x1788 ((x1158 Int)) Int (ite x5661 (x4209 x1158) (x2321 x1158)))
(define-fun x383 ((x1158 Int)) Int (ite (= x1158 292) x4010 (x2634 x1158)))
(define-fun x2185 ((x1158 Int)) Int (ite x3472 (ite x4666 (x2634 x1158) (x383 x1158)) (x1425 x1158)))
(define-fun x358 ((x1158 Int)) Int (ite (= x1158 196) x4556 (x2185 x1158)))
(define-fun x2949 ((x1158 Int)) Int (ite (= x1158 228) x135 (x358 x1158)))
(define-fun x1777 ((x1158 Int)) Int (ite (= x1158 x645) x4949 (x2949 x1158)))
(define-fun x2674 ((x1158 Int)) Int (ite (= x1158 x3346) x1489 (x1777 x1158)))
(define-fun x3275 ((x1158 Int)) Int (ite (= x1158 292) x1271 (x2799 x1158)))
(define-fun x2943 ((x1158 Int)) Int (ite (= x1158 292) x3784 (x1690 x1158)))
(define-fun x1359 ((x1158 Int)) Int (ite x1321 (ite x1599 (x2799 x1158) (x3275 x1158)) (x5098 x1158)))
(define-fun x4047 ((x1158 Int)) Int (ite (= x1158 196) x84 (x1359 x1158)))
(define-fun x5233 ((x1158 Int)) Int (ite (= x1158 228) x3064 (x4047 x1158)))
(define-fun x1223 ((x1158 Int)) Int (ite (= x1158 x4299) x2503 (x5233 x1158)))
(define-fun x3025 ((x1158 Int)) Int (ite (= x172 x1158) x5530 (x1223 x1158)))
(define-fun x4500 ((x1158 Int)) Int (ite x2313 (ite x1852 (x1690 x1158) (x2943 x1158)) (x4739 x1158)))
(define-fun x4939 ((x1158 Int)) Int (ite (= 196 x1158) x3380 (x4500 x1158)))
(define-fun x5172 ((x1158 Int)) Int (ite (= x1158 228) x2287 (x4939 x1158)))
(define-fun x4775 ((x1158 Int)) Int (ite (= x3074 x1158) x5020 (x5172 x1158)))
(define-fun x3251 ((x1158 Int)) Int (ite (= x5102 x1158) x2590 (x4775 x1158)))
(define-fun x485 ((x1158 Int)) Int (ite (= x3346 x1158) x4641 (x1777 x1158)))
(define-fun x5037 ((x1158 Int)) Int (ite x1200 (ite x382 (x1777 x1158) (x2674 x1158)) (x485 x1158)))
(define-fun x2467 ((x1158 Int)) Int (ite (= x1158 x4268) x1474 (x4120 x1158)))
(define-fun x386 ((x1158 Int)) Int (ite (and (< x1158 x5251) (>= x1158 164)) (x5037 (+ x1158 128)) (x4751 x1158)))
(define-fun x4779 ((x1158 Int)) Int (ite (and (<= 128 x1158) (> (+ 128 x1144) x1158)) (x386 (+ 36 x1158)) (x5318 x1158)))
(define-fun x5123 ((x1158 Int)) Int (ite (= x2421 x1158) 0 (x4779 x1158)))
(define-fun x5630 ((x1158 Int)) Int (ite (= x1158 x5201) x2625 (x5123 x1158)))
(define-fun x3664 ((x1158 Int)) Int (ite (and (< x1158 (+ x3462 128)) (>= x1158 128)) (x386 (- (+ x1158 x2184) 128)) (x5630 x1158)))
(define-fun x4295 ((x1158 Int)) Int (ite (= x2494 x1158) 0 (x3664 x1158)))
(define-fun x4888 ((x1158 Int)) Int (ite (and (> (+ 128 x1144) x1158) (<= 128 x1158)) (x386 (+ x1158 36)) (x4295 x1158)))
(define-fun x3497 ((x1158 Int)) Int (ite (= x1158 x536) 0 (x4888 x1158)))
(define-fun x4542 ((x1158 Int)) Int (ite (= x2455 x1158) x962 (x3497 x1158)))
(define-fun x2415 ((x1158 Int)) Int (ite (= x5442 x1158) 0 (x774 x1158)))
(define-fun x2852 ((x1158 Int)) Int (ite (= x1158 128) x1144 (x4542 x1158)))
(define-fun x953 ((x1158 Int)) Int (ite (and (< x1158 (+ 160 x1144)) (<= 160 x1158)) (x386 (+ x1158 4)) (x2852 x1158)))
(define-fun x2575 ((x1158 Int)) Int (ite (= x687 x1158) 0 (x953 x1158)))
(define-fun x2611 ((x1158 Int)) Int (ite (= x3679 x1158) x3462 (x2575 x1158)))
(define-fun x1606 ((x1158 Int)) Int (ite (and (< x1158 (+ x3462 x894)) (>= x1158 x894)) (x386 (- (+ x2184 x1158) x894)) (x2611 x1158)))
(define-fun x5104 ((x1158 Int)) Int (ite (= x1158 x4204) 0 (x1606 x1158)))
(define-fun x1977 ((x1158 Int)) Int (ite (= x2896 x1158) 1 (x4945 x1158)))
(define-fun x3461 ((x1158 Int)) Int (ite (= x1158 x172) x341 (x1223 x1158)))
(define-fun x2927 ((x1158 Int)) Int (ite (= x1158 x5102) x2023 (x4775 x1158)))
(define-fun x3594 ((x1158 Int)) Int (ite x192 (ite x3207 (x1223 x1158) (x3025 x1158)) (x3461 x1158)))
(define-fun x1707 ((x1158 Int)) Int (ite (and (< x1158 x2125) (<= 164 x1158)) (x3594 (+ 128 x1158)) (x231 x1158)))
(define-fun x2517 ((x1158 Int)) Int (ite (= x1158 128) x426 (x2061 x1158)))
(define-fun x3736 ((x1158 Int)) Int (ite (= 160 x1158) x1183 (x2517 x1158)))
(define-fun x593 ((x1158 Int)) Int (ite (= 160 x1158) x5400 (x2517 x1158)))
(define-fun x195 ((x1158 Int)) Int (ite x4246 (ite x4219 (x4775 x1158) (x3251 x1158)) (x2927 x1158)))
(define-fun x5639 ((x1158 Int)) Int (ite (and (< x1158 x3777) (<= 164 x1158)) (x195 (+ 128 x1158)) (x401 x1158)))
(define-fun x5679 ((x1158 Int)) Int (ite (= x1158 x2805) x2569 (x4926 x1158)))
(define-fun x3798 ((x1158 Int)) Int (ite (and (<= x3136 x1158) (> (+ x2569 x3136) x1158)) (x5639 (- (+ x5659 x1158) x3136)) (x4855 x1158)))
(define-fun x4130 ((x1158 Int)) Int (ite (= x1158 x1402) 0 (x3798 x1158)))
(define-fun x1961 ((x1158 Int)) Int (ite (= x370 x1158) 1 (x4945 x1158)))
(define-fun x3997 ((x1158 Int)) Int (ite (= x1158 192) x1765 (x3736 x1158)))
(define-fun x815 ((x1158 Int)) Int (ite x56 (x2517 x1158) (ite x5103 (ite x1220 (x3736 x1158) (x3997 x1158)) (x593 x1158))))
(define-fun x725 ((x1158 Int)) Int (ite (and (>= x1158 x1557) (< x1158 (+ x1557 x1893))) (x1707 (- (+ x1158 164) x1557)) (x815 x1158)))
(define-fun x3524 ((x1158 Int)) Int (ite (= x2267 x1158) 0 (x725 x1158)))
(define-fun x2502 ((x1158 Int)) Int (ite x375 (x3524 x1158) (x815 x1158)))
(define-fun x5525 ((x1158 Int)) Int (ite (= x1158 x1557) x1893 (x2502 x1158)))
(define-fun x2782 ((x1158 Int)) Int (ite (and (> (+ x1893 x124) x1158) (<= x124 x1158)) (x1707 (- (+ x1158 164) x124)) (x5525 x1158)))
(define-fun x5219 ((x1158 Int)) Int (ite (= x1764 x1158) 0 (x2782 x1158)))
(define-fun x5089 ((x1158 Int)) Int (ite (= x1158 x3590) x1558 (x5219 x1158)))
(define-fun x2338 ((x1158 Int)) Int (ite (and (> (+ x2908 x1558) x1158) (>= x1158 x2908)) (x1707 (- (+ x3815 x1158) x2908)) (x5089 x1158)))
(define-fun x831 ((x1158 Int)) Int (ite (= x1158 x128) 0 (x2338 x1158)))
(define-fun x4665 ((x1158 Int)) Int (ite (= x1158 x4275) x5553 (x831 x1158)))
(define-fun x1552 ((x1158 Int)) Int (ite (= x1236 x1158) 128 (x4665 x1158)))
(define-fun x278 ((x1158 Int)) Int (ite (= x2227 x1158) x4809 (x1552 x1158)))
(define-fun x4187 ((x1158 Int)) Int (ite (= x4774 x1158) x4427 (x278 x1158)))
(define-fun x5337 ((x1158 Int)) Int (ite (= x1614 x1158) x3003 (x4187 x1158)))
(define-fun x1459 ((x1158 Int)) Int (ite (= x4483 x1158) x3753 (x5337 x1158)))
(define-fun x5689 ((x1158 Int)) Int (ite (= x1158 x1907) x705 (x1459 x1158)))
(define-fun x253 ((x1158 Int)) Int (ite x4936 (x1459 x1158) (ite x2176 (x5337 x1158) (ite x3929 (x4187 x1158) (ite x871 (x278 x1158) (x5689 x1158))))))
(define-fun x510 ((x1158 Int)) Int (ite (= x3763 x1158) 0 (x253 x1158)))
(define-fun x3562 ((x1158 Int)) Int (ite (= x1158 x1727) x84 (x510 x1158)))
(define-fun x2732 ((x1158 Int)) Int (ite (= x1928 x1158) x1908 (x3562 x1158)))
(define-fun x2508 ((x1158 Int)) Int (ite (= x741 x1158) x4319 (x2732 x1158)))
(define-fun x5197 ((x1158 Int)) Int (ite (= x5330 x1158) x4099 (x2508 x1158)))
(define-fun x3729 ((x1158 Int)) Int (ite (= x5397 x1158) x1739 (x5197 x1158)))
(define-fun x2693 ((x1158 Int)) Int (ite (= x5252 x1158) x5691 (x3729 x1158)))
(define-fun x3229 ((x1158 Int)) Int (ite (= x789 x1158) x5681 (x2693 x1158)))
(define-fun x1758 ((x1158 Int)) Int (ite x4440 (x2693 x1158) (ite x1210 (x3729 x1158) (ite x3216 (x5197 x1158) (ite x3517 (x2508 x1158) (x3229 x1158))))))
(define-fun x276 ((x1158 Int)) Int (ite (= x2140 x1158) 0 (x1758 x1158)))
(define-fun x1839 ((x1158 Int)) Int (ite (= x1158 x3012) x1216 (x276 x1158)))
(define-fun x2492 ((x1158 Int)) Int (ite (= x1158 x5042) x5540 (x1839 x1158)))
(define-fun x3579 ((x1158 Int)) Int (ite (= x4318 x1158) 150 (x2492 x1158)))
(define-fun x2516 ((x1158 Int)) Int (ite (and (> (+ 150 x439) x1158) (>= x1158 x439)) (x1707 (- (+ x1460 x1158) x439)) (x3579 x1158)))
(define-fun x5147 ((x1158 Int)) Int (ite (and (< x1158 0) (<= 0 x1158)) (x1561 x1158) (x2516 x1158)))
(define-fun x1787 ((x1158 Int)) Int (ite x666 (x5147 x1158) (x2516 x1158)))
(define-fun x4274 ((x1158 Int)) Int (ite (= x1158 x4318) x924 (x1787 x1158)))
(define-fun x5509 ((x1158 Int)) Int (ite (and (>= x1158 x5663) (< x1158 (+ x5663 x924))) (x1561 (- x1158 x5663)) (x4274 x1158)))
(define-fun x5194 ((x1158 Int)) Int (ite (= x1158 x4709) x2031 (x5509 x1158)))
(define-fun x5599 ((x1158 Int)) Int (ite (= x1158 x2485) x1091 (x5194 x1158)))
(define-fun x3274 ((x1158 Int)) Int (ite (= x1158 x5394) x5248 (x5599 x1158)))
(define-fun x1307 ((x1158 Int)) Int (ite x1831 (x774 x1158) (x351 x1158)))
(define-fun x1214 ((x1158 Int)) Int (ite (= x577 x1158) x888 (x3274 x1158)))
(define-fun x3220 ((x1158 Int)) Int (ite x4852 (x3274 x1158) (ite x327 (x5599 x1158) (ite x5521 (x5194 x1158) (ite x3637 (x5509 x1158) (x1214 x1158))))))
(define-fun x495 ((x1158 Int)) Int (ite (= x1158 x4966) 0 (x3220 x1158)))
(define-fun x5141 ((x1158 Int)) Int (ite (= x1158 x4658) x1873 (x495 x1158)))
(define-fun x4201 ((x1158 Int)) Int (ite (= x1158 x4709) x5553 (x5141 x1158)))
(define-fun x3335 ((x1158 Int)) Int (ite (= x1158 x3554) 160 (x4201 x1158)))
(define-fun x3820 ((x1158 Int)) Int (ite (= x5294 x1158) x824 (x3335 x1158)))
(define-fun x2535 ((x1158 Int)) Int (ite (= x771 x1158) x3881 (x3820 x1158)))
(define-fun x1450 ((x1158 Int)) Int (ite (= x1158 x2568) x4363 (x2535 x1158)))
(define-fun x5276 ((x1158 Int)) Int (ite (= x5374 x1158) x2560 (x1450 x1158)))
(define-fun x1751 ((x1158 Int)) Int (ite (= x1550 x1158) x1368 (x5276 x1158)))
(define-fun x232 ((x1158 Int)) Int (ite x702 (x5276 x1158) (ite x1342 (x1450 x1158) (ite x5096 (x2535 x1158) (ite x1145 (x3820 x1158) (x1751 x1158))))))
(define-fun x5381 ((x1158 Int)) Int (ite (= x1158 x3162) 0 (x232 x1158)))
(define-fun x841 ((x1158 Int)) Int (ite (= x1158 x4848) x84 (x5381 x1158)))
(define-fun x1435 ((x1158 Int)) Int (ite (= x1134 x1158) x4020 (x841 x1158)))
(define-fun x138 ((x1158 Int)) Int (ite (= x2811 x1158) x4156 (x1435 x1158)))
(define-fun x2676 ((x1158 Int)) Int (ite (= x1158 x791) x2839 (x138 x1158)))
(define-fun x931 ((x1158 Int)) Int (ite (= x1158 x635) x2959 (x2676 x1158)))
(define-fun x260 ((x1158 Int)) Int (ite (= x4505 x1158) x3587 (x931 x1158)))
(define-fun x5266 ((x1158 Int)) Int (ite (= x5016 x1158) x5355 (x260 x1158)))
(define-fun x2277 ((x1158 Int)) Int (ite x3773 (x260 x1158) (ite x1799 (x931 x1158) (ite x5613 (x2676 x1158) (ite x1044 (x138 x1158) (x5266 x1158))))))
(define-fun x2541 ((x1158 Int)) Int (ite (= x1158 x2733) 0 (x2277 x1158)))
(define-fun x2310 ((x1158 Int)) Int (ite (= x1158 x2017) x4324 (x2541 x1158)))
(define-fun x1846 ((x1158 Int)) Int (x3610 x1158))
(define-fun x4824 ((x1158 Int)) Int (x2559 x1158))
(define-fun x5684 ((x1158 Int)) Int (x2954 x1158))
(define-fun x4033 ((x1158 Int)) Int (x2360 x1158))
(define-fun x4955 ((x1158 Int)) Int (x4553 x1158))
(define-fun x4194 ((x1158 Int)) Int (x3887 x1158))
(define-fun x50 ((x1158 Int)) Int (x2781 x1158))
(define-fun x4271 ((x1158 Int)) Int (x3342 x1158))
(define-fun x2596 ((x1158 Int)) Int (x4945 x1158))
(define-fun x236 ((x1158 Int)) Int (x3863 x1158))
(define-fun x1433 ((x1158 Int)) Int (x5168 x1158))
(define-fun x5188 ((x1158 Int)) Int (x2786 x1158))
(define-fun x3121 ((x1158 Int)) Int (x594 x1158))
(define-fun x5155 ((x1158 Int)) Int (x1869 x1158))
(define-fun x3167 ((x1158 Int)) Int (x4132 x1158))
(define-fun x5193 ((x1158 Int)) Int (x3477 x1158))
(define-fun x3085 ((x1158 Int)) Int (x2865 x1158))
(define-fun x4492 ((x1158 Int)) Int (x5222 x1158))
(define-fun x537 ((x1158 Int)) Int (x4818 x1158))
(define-fun x1849 ((x1158 Int)) Int (x3339 x1158))
(define-fun x72 ((x1158 Int)) Int (x4860 x1158))
(define-fun x2083 ((x1158 Int)) Int (x774 x1158))
(define-fun x565 ((x1158 Int)) Int (x2321 x1158))
(define-fun x1270 ((x1158 Int)) Int (ite (= x1158 4) 33 (x5631 x1158)))
(define-fun x1157 ((x1158 Int)) Int (ite (and (< x1158 36) (>= x1158 0)) (x1270 x1158) (x23 x1158)))
(define-fun x669 ((x1158 Int)) Int (ite (= 160 x1158) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x727 x1158)))
(define-fun x5049 ((x1158 Int)) Int (ite (= 192 x1158) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x669 x1158)))
(define-fun x1864 ((x1158 Int)) Int (ite (= 128 x1158) 64 (x1111 x1158)))
(define-fun x412 ((x1158 Int)) Int (ite (= x1158 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x47 x1158)))
(define-fun x4976 ((x1158 Int)) Int (ite (= 258 x1158) x4290 (x412 x1158)))
(define-fun x1151 ((x1158 Int)) Int (ite (= x1158 224) 34 (x486 x1158)))
(define-fun x4989 ((x1158 Int)) Int (ite (= x1158 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x5099 x1158)))
(define-fun x624 ((x1158 Int)) Int (ite (= x1158 294) x892 (x4989 x1158)))
(define-fun x1036 ((x1158 Int)) Int (ite (= x1158 326) x4162 (x624 x1158)))
(define-fun x2884 ((x1158 Int)) Int (ite (= 358 x1158) 160 (x1036 x1158)))
(define-fun x797 ((x1158 Int)) Int (ite (= 454 x1158) x285 (x2884 x1158)))
(define-fun x3901 ((x1158 Int)) Int (ite (and (> (+ x285 486) x1158) (>= x1158 486)) (x5049 (- x1158 326)) (x797 x1158)))
(define-fun x2583 ((x1158 Int)) Int (ite (= 390 x1158) 0 (x3901 x1158)))
(define-fun x4728 ((x1158 Int)) Int (ite (= x1158 422) x1871 (x2583 x1158)))
(define-fun x1544 ((x1158 Int)) Int (ite (= x1158 x4054) x4667 (x4728 x1158)))
(define-fun x3252 ((x1158 Int)) Int (ite (and (>= x1158 x142) (> (+ x4667 x142) x1158)) (x4976 (- (+ x1158 256) x142)) (x1544 x1158)))
(define-fun x1127 ((x1158 Int)) Int (ite (and (> x3062 x1158) (<= 292 x1158)) (x3252 (+ x1158 290)) (x1992 x1158)))
(define-fun x783 ((x1158 Int)) Int (ite (= x1158 128) 0 (x59 x1158)))
(define-fun x5290 ((x1158 Int)) Int (ite (= 160 x1158) 0 (x783 x1158)))
(define-fun x5577 ((x1158 Int)) Int (ite (= x1158 290) x5592 (x3252 x1158)))
(define-fun x3533 ((x1158 Int)) Int (ite (= 322 x1158) x4176 (x5577 x1158)))
(define-fun x1572 ((x1158 Int)) Int (ite (= 0 x1158) x2798 (x3093 x1158)))
(define-fun x1048 ((x1158 Int)) Int (ite (= x1158 32) x4792 (x1572 x1158)))
(define-fun x663 ((x1158 Int)) Int (ite (= x1158 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x5631 x1158)))
(define-fun x3812 ((x1158 Int)) Int (ite (and (<= 0 x1158) (> 4 x1158)) (x663 (+ 128 x1158)) (x23 x1158)))
(define-fun x3675 ((x1158 Int)) Int (ite (= x1158 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x5631 x1158)))
(define-fun x2117 ((x1158 Int)) Int (ite (and (>= x1158 0) (< x1158 4)) (x3675 (+ x1158 128)) (x23 x1158)))
(define-fun x3814 ((x1158 Int)) Int (ite (= x1158 548) x2025 (x2053 x1158)))
(define-fun x1261 ((x1158 Int)) Int (ite (= 580 x1158) x826 (x3814 x1158)))
(define-fun x1444 ((x1158 Int)) Int (ite (= 548 x1158) x2274 (x2053 x1158)))
(define-fun x3081 ((x1158 Int)) Int (ite x1181 (x2198 x1158) (ite x4886 (ite x1995 (x3814 x1158) (x1261 x1158)) (x1444 x1158))))
(define-fun x1503 ((x1158 Int)) Int (ite (= x1158 516) x846 (x7 x1158)))
(define-fun x5298 ((x1158 Int)) Int (ite (= x5256 x1158) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5631 x1158)))
(define-fun x2395 ((x1158 Int)) Int (ite (= x1318 x1158) 32 (x5298 x1158)))
(define-fun x4493 ((x1158 Int)) Int (ite (= x3983 x1158) 48 (x2395 x1158)))
(define-fun x590 ((x1158 Int)) Int (ite (= x1158 x643) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x4493 x1158)))
(define-fun x1965 ((x1158 Int)) Int (ite (= x584 x1158) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x590 x1158)))
(define-fun x3877 ((x1158 Int)) Int (ite (and (>= x1158 0) (< x1158 132)) (x1965 (+ x1158 x5256)) (x23 x1158)))
(define-fun x3537 ((x1158 Int)) Int (ite (= x1158 354) 64 (x1365 x1158)))
(define-fun x2730 ((x1158 Int)) Int (ite (= x5256 x1158) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5631 x1158)))
(define-fun x2232 ((x1158 Int)) Int (ite (= x1158 x2266) 32 (x2730 x1158)))
(define-fun x3145 ((x1158 Int)) Int (ite (= x1158 x2410) 32 (x2232 x1158)))
(define-fun x2273 ((x1158 Int)) Int (ite (= x2913 x1158) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x3145 x1158)))
(define-fun x2935 ((x1158 Int)) Int (ite (and (< x1158 100) (<= 0 x1158)) (x2273 (+ x5256 x1158)) (x23 x1158)))
(define-fun x2571 ((x1158 Int)) Int (ite x30 (x3252 x1158) (x3533 x1158)))
(define-fun x3799 ((x1158 Int)) Int (ite (= x1158 x5256) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x2571 x1158)))
(define-fun x1026 ((x1158 Int)) Int (ite (= x1158 x2466) x892 (x3799 x1158)))
(define-fun x2152 ((x1158 Int)) Int (ite (= x1158 x556) 192 (x1026 x1158)))
(define-fun x2511 ((x1158 Int)) Int (ite (= x1158 x1254) x4896 (x2152 x1158)))
(define-fun x1055 ((x1158 Int)) Int (ite (and (>= x1158 x661) (< x1158 (+ x4896 x661))) (x3081 (- (+ 548 x1158) x661)) (x2511 x1158)))
(define-fun x5428 ((x1158 Int)) Int (ite (= x1462 x1158) x704 (x1055 x1158)))
(define-fun x187 ((x1158 Int)) Int (ite (= x1158 x916) x4468 (x5428 x1158)))
(define-fun x2295 ((x1158 Int)) Int (ite (= 386 x1158) x2718 (x1394 x1158)))
(define-fun x1314 ((x1158 Int)) Int (ite (= x1158 418) x4365 (x2295 x1158)))
(define-fun x1793 ((x1158 Int)) Int (ite (and (<= x1204 x1158) (< x1158 (+ x1204 x4468))) (x1314 (- (+ 386 x1158) x1204)) (x187 x1158)))
(define-fun x3002 ((x1158 Int)) Int (ite (= x5610 x1158) x4162 (x1793 x1158)))
(define-fun x1772 ((x1158 Int)) Int (ite (= x5668 x1158) 0 (x3002 x1158)))
(define-fun x4780 ((x1158 Int)) Int (ite (= x1158 x4802) x4230 (x1772 x1158)))
(define-fun x709 ((x1158 Int)) Int (ite (= x1158 450) 34 (x769 x1158)))
(define-fun x4670 ((x1158 Int)) Int (ite (= x5586 x1158) x4953 (x4780 x1158)))
(define-fun x4390 ((x1158 Int)) Int (ite (= x1158 482) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2092 x1158)))
(define-fun x4298 ((x1158 Int)) Int (ite (= 484 x1158) x4290 (x4390 x1158)))
(define-fun x3544 ((x1158 Int)) Int (ite (and (< x1158 (+ x2729 x4953)) (<= x2729 x1158)) (x4298 (- (+ x1158 482) x2729)) (x4670 x1158)))
(define-fun x4235 ((x1158 Int)) Int (ite (= x1158 x4162) x3303 (x4120 x1158)))
(define-fun x4742 ((x1158 Int)) Int (ite (= x1158 x4202) x2183 (x4235 x1158)))
(define-fun x4895 ((x1158 Int)) Int (ite (and (< x1158 x5187) (<= 228 x1158)) (x3544 (- (+ (x2124 (+ 228 x5256)) x1158) 228)) (x3895 x1158)))
(define-fun x332 ((x1158 Int)) Int 0)
(define-fun x4021 ((x1158 Int)) Int (x5168 x1158))
(define-fun x5057 ((x1158 Int)) Int (x2360 x1158))
(define-fun x1800 ((x1158 Int)) Int (x3863 x1158))
(define-fun x2201 ((x1158 Int)) Int (x3339 x1158))
(define-fun x2777 ((x1158 Int)) Int (x2786 x1158))
(define-fun x2044 ((x1158 Int)) Int (x2321 x1158))
(define-fun x2016 ((x1158 Int)) Int (x3425 x1158))
(define-fun x1885 ((x1158 Int)) Int (x3610 x1158))
(define-fun x907 ((x1158 Int)) Int (x2781 x1158))
(define-fun x3070 ((x1158 Int)) Int (x2954 x1158))
(define-fun x5053 ((x1158 Int)) Int (x2559 x1158))
(define-fun x2549 ((x1158 Int)) Int (x2865 x1158))
(define-fun x1923 ((x1158 Int)) Int (x594 x1158))
(define-fun x4703 ((x1158 Int)) Int (x5222 x1158))
(define-fun x957 ((x1158 Int)) Int (x3477 x1158))
(define-fun x1822 ((x1158 Int)) Int (x4132 x1158))
(define-fun x734 ((x1158 Int)) Int (x1869 x1158))
(define-fun x5213 ((x1158 Int)) Int (x774 x1158))
(define-fun x3626 ((x1158 Int)) Int (x4818 x1158))
(define-fun x51 ((x1158 Int)) Int (x4860 x1158))
(define-fun x4358 ((x1158 Int)) Int (x3342 x1158))
(define-fun x694 ((x1158 Int)) Int (x4553 x1158))
(define-fun x630 ((x1158 Int)) Int (x4945 x1158))
(define-fun x1384 ((x1158 Int)) Int (x3887 x1158))
(define-fun x5471 ((x1158 Int)) Int (x5168 x1158))
(define-fun x866 ((x1158 Int)) Int (x5471 x1158))
(define-fun x3644 ((x1158 Int)) Int (x2360 x1158))
(define-fun x3014 ((x1158 Int)) Int (x3644 x1158))
(define-fun x920 ((x1158 Int)) Int (x4860 x1158))
(define-fun x161 ((x1158 Int)) Int (x920 x1158))
(define-fun x5456 ((x1158 Int)) Int (x3339 x1158))
(define-fun x4106 ((x1158 Int)) Int (x5456 x1158))
(define-fun x108 ((x1158 Int)) Int (x2786 x1158))
(define-fun x4611 ((x1158 Int)) Int (x108 x1158))
(define-fun x1485 ((x1158 Int)) Int (x2321 x1158))
(define-fun x1217 ((x1158 Int)) Int (x1485 x1158))
(define-fun x167 ((x1158 Int)) Int (x3863 x1158))
(define-fun x476 ((x1158 Int)) Int (x167 x1158))
(define-fun x1687 ((x1158 Int)) Int (x3425 x1158))
(define-fun x5398 ((x1158 Int)) Int (x3610 x1158))
(define-fun x1848 ((x1158 Int)) Int (x5398 x1158))
(define-fun x5417 ((x1158 Int)) Int (x2954 x1158))
(define-fun x1870 ((x1158 Int)) Int (x5417 x1158))
(define-fun x144 ((x1158 Int)) Int (x2781 x1158))
(define-fun x4501 ((x1158 Int)) Int (x144 x1158))
(define-fun x785 ((x1158 Int)) Int (x5222 x1158))
(define-fun x4663 ((x1158 Int)) Int (x785 x1158))
(define-fun x1748 ((x1158 Int)) Int (x3477 x1158))
(define-fun x3605 ((x1158 Int)) Int (x1748 x1158))
(define-fun x723 ((x1158 Int)) Int (x2559 x1158))
(define-fun x2428 ((x1158 Int)) Int (x723 x1158))
(define-fun x1513 ((x1158 Int)) Int (x594 x1158))
(define-fun x1517 ((x1158 Int)) Int (x1513 x1158))
(define-fun x1945 ((x1158 Int)) Int (x1869 x1158))
(define-fun x3749 ((x1158 Int)) Int (x1945 x1158))
(define-fun x3959 ((x1158 Int)) Int (x774 x1158))
(define-fun x2939 ((x1158 Int)) Int (x3959 x1158))
(define-fun x2555 ((x1158 Int)) Int (x4132 x1158))
(define-fun x591 ((x1158 Int)) Int (x2555 x1158))
(define-fun x2903 ((x1158 Int)) Int (x4818 x1158))
(define-fun x1926 ((x1158 Int)) Int (x2903 x1158))
(define-fun x347 ((x1158 Int)) Int (x3342 x1158))
(define-fun x4719 ((x1158 Int)) Int (x347 x1158))
(define-fun x1538 ((x1158 Int)) Int (x4553 x1158))
(define-fun x3111 ((x1158 Int)) Int (x1538 x1158))
(define-fun x1950 ((x1158 Int)) Int (x3887 x1158))
(define-fun x4863 ((x1158 Int)) Int (x1950 x1158))
(define-fun x4306 ((x1158 Int)) Int (x4945 x1158))
(define-fun x5097 ((x1158 Int)) Int (x4306 x1158))
(define-fun x3067 ((x1158 Int)) Int (x2865 x1158))
(define-fun x1825 ((x1158 Int)) Int (x3067 x1158))
(define-fun x509 ((x1158 Int)) Int (ite (= x1158 x4202) x3515 (x4742 x1158)))
(define-fun x1403 ((x1158 Int)) Int (ite (= x4162 x1158) x832 (x509 x1158)))
(define-fun x4252 ((x1158 Int)) Int (x1717 x1158))
(define-fun x2390 ((x1158 Int)) Int (ite x30 (x3093 x1158) (x1048 x1158)))
(define-fun x3564 ((x1158 Int)) Int (ite (and (<= 0 x1158) (> x737 x1158)) (x2390 x1158) (x5631 x1158)))
(define-fun x5281 ((x1158 Int)) Int (ite (and (> x737 x1158) (>= x1158 0)) (x3564 x1158) (x23 x1158)))
(define-fun x4730 ((x1158 Int)) Int (ite (and (>= x1158 290) (< x1158 354)) (x2390 (- x1158 290)) (x2349 x1158)))
(define-fun x4996 ((x1158 Int)) Int (ite (= 4 x1158) 34 (x5631 x1158)))
(define-fun x4814 ((x1158 Int)) Int (ite (and (>= x1158 0) (> 36 x1158)) (x4996 x1158) (x23 x1158)))
(define-fun x381 ((x1158 Int)) Int (ite (= x1158 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x598 x1158)))
(define-fun x1889 ((x1158 Int)) Int (ite (= 192 x1158) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x381 x1158)))
(define-fun x2857 ((x1158 Int)) Int (ite (= x1158 128) 64 (x1887 x1158)))
(define-fun x1875 ((x1158 Int)) Int (ite (= x1158 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1038 x1158)))
(define-fun x3829 ((x1158 Int)) Int (ite (= 258 x1158) x2447 (x1875 x1158)))
(define-fun x3287 ((x1158 Int)) Int (ite (= 224 x1158) 34 (x4233 x1158)))
(define-fun x4993 ((x1158 Int)) Int (ite (= x1158 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x2615 x1158)))
(define-fun x984 ((x1158 Int)) Int (ite (= 294 x1158) x892 (x4993 x1158)))
(define-fun x2319 ((x1158 Int)) Int (ite (= 326 x1158) x4162 (x984 x1158)))
(define-fun x2664 ((x1158 Int)) Int (ite (= 358 x1158) 160 (x2319 x1158)))
(define-fun x2311 ((x1158 Int)) Int (ite (= x1158 454) x2139 (x2664 x1158)))
(define-fun x698 ((x1158 Int)) Int (ite (and (> (+ x2139 486) x1158) (>= x1158 486)) (x1889 (- x1158 326)) (x2311 x1158)))
(define-fun x356 ((x1158 Int)) Int (ite (= 390 x1158) 0 (x698 x1158)))
(define-fun x434 ((x1158 Int)) Int (ite (= 422 x1158) x336 (x356 x1158)))
(define-fun x5643 ((x1158 Int)) Int (ite (= x1158 x363) x4166 (x434 x1158)))
(define-fun x602 ((x1158 Int)) Int (ite (and (>= x1158 x5259) (> (+ x5259 x4166) x1158)) (x3829 (- (+ 256 x1158) x5259)) (x5643 x1158)))
(define-fun x1126 ((x1158 Int)) Int (ite (and (> x2612 x1158) (<= 292 x1158)) (x602 (+ x1158 290)) (x1820 x1158)))
(define-fun x2947 ((x1158 Int)) Int (ite (= 128 x1158) 0 (x4708 x1158)))
(define-fun x2385 ((x1158 Int)) Int (ite (= x1158 160) 0 (x2947 x1158)))
(define-fun x5640 ((x1158 Int)) Int (ite (= 290 x1158) x5474 (x602 x1158)))
(define-fun x5206 ((x1158 Int)) Int (ite (= 322 x1158) x3422 (x5640 x1158)))
(define-fun x3804 ((x1158 Int)) Int (ite (= 0 x1158) x4562 (x3098 x1158)))
(define-fun x1017 ((x1158 Int)) Int (ite (= 32 x1158) x5184 (x3804 x1158)))
(define-fun x2013 ((x1158 Int)) Int (ite (and (< x1158 354) (<= 290 x1158)) (x1017 (- x1158 290)) (x2636 x1158)))
(define-fun x1639 ((x1158 Int)) Int (ite x201 (x5206 x1158) (x4731 x1158)))
(define-fun x3129 ((x1158 Int)) Int (ite (= x1158 x729) x3345 (x1409 x1158)))
(define-fun x2431 ((x1158 Int)) Int (ite (= x5485 x1158) x5062 (x3129 x1158)))
(define-fun x2484 ((x1158 Int)) Int (ite (= x4496 x1158) x1698 (x4673 x1158)))
(define-fun x1612 ((x1158 Int)) Int (ite (= x1158 x2696) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3809 x1158)))
(define-fun x758 ((x1158 Int)) Int (ite (= x1158 x944) x2447 (x1612 x1158)))
(define-fun x809 ((x1158 Int)) Int (ite (= x3410 x1158) x3873 (x4284 x1158)))
(define-fun x4962 ((x1158 Int)) Int (ite (= x1551 x1158) x4566 (x5196 x1158)))
(define-fun x3674 ((x1158 Int)) Int (ite (= x1158 x93) x3487 (x506 x1158)))
(define-fun x4060 ((x1158 Int)) Int (ite (= x1158 x93) x1937 (x506 x1158)))
(define-fun x1455 ((x1158 Int)) Int (ite (= x2402 x1158) x2784 (x3674 x1158)))
(define-fun x185 ((x1158 Int)) Int (ite x5093 (x2803 x1158) (ite x5166 (ite x3776 (x3674 x1158) (x1455 x1158)) (x4060 x1158))))
(define-fun x680 ((x1158 Int)) Int (ite (= x1158 x2609) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x1639 x1158)))
(define-fun x640 ((x1158 Int)) Int (ite (= x1158 x2905) x892 (x680 x1158)))
(define-fun x3837 ((x1158 Int)) Int (ite (= x1158 x989) 192 (x640 x1158)))
(define-fun x2885 ((x1158 Int)) Int (ite (= x1158 x411) x3950 (x3837 x1158)))
(define-fun x5673 ((x1158 Int)) Int (ite (and (> (+ x2080 x3950) x1158) (>= x1158 x2080)) (x185 (- (+ x1158 x93) x2080)) (x2885 x1158)))
(define-fun x2974 ((x1158 Int)) Int (ite (= x1158 x2291) x2069 (x5673 x1158)))
(define-fun x5469 ((x1158 Int)) Int (ite (= x4835 x1158) x549 (x2974 x1158)))
(define-fun x345 ((x1158 Int)) Int (ite (and (<= x1784 x1158) (> (+ x1784 x549) x1158)) (x2431 (- (+ x199 x1158) x1784)) (x5469 x1158)))
(define-fun x4419 ((x1158 Int)) Int (ite (= x1158 x214) x4162 (x345 x1158)))
(define-fun x1735 ((x1158 Int)) Int (ite (= x3845 x1158) 0 (x4419 x1158)))
(define-fun x5004 ((x1158 Int)) Int (ite (= x1158 x1615) x2056 (x1735 x1158)))
(define-fun x4930 ((x1158 Int)) Int (ite (= x918 x1158) x4570 (x5004 x1158)))
(define-fun x2283 ((x1158 Int)) Int (ite (and (<= x4836 x1158) (> (+ x4570 x4836) x1158)) (x758 (- (+ x1158 x2547) x4836)) (x4930 x1158)))
(define-fun x2697 ((x1158 Int)) Int (ite (= x4162 x1158) x4067 (x1636 x1158)))
(define-fun x1385 ((x1158 Int)) Int (ite (= x546 x1158) x207 (x2697 x1158)))
(define-fun x4682 ((x1158 Int)) Int (ite (and (> x992 x1158) (>= x1158 228)) (x2283 (- (+ (x2124 (+ 228 x2609)) x1158) 228)) (x595 x1158)))
(define-fun x3099 ((x1158 Int)) Int (ite x440 (x3887 x1158) (x3789 x1158)))
(define-fun x731 ((x1158 Int)) Int (ite x440 (x2954 x1158) (x1206 x1158)))
(define-fun x2351 ((x1158 Int)) Int (ite x440 (x2786 x1158) (x4 x1158)))
(define-fun x481 ((x1158 Int)) Int (ite x5075 (x94 x1158) (ite x1836 (x94 x1158) (x3521 x1158))))
(define-fun x2660 ((x1158 Int)) Int (ite (= x1158 x3312) x671 (x481 x1158)))
(define-fun x4578 ((x1158 Int)) Int (ite x4631 (x481 x1158) (ite x930 (x2660 x1158) (x481 x1158))))
(define-fun x53 ((x1158 Int)) Int (ite x2836 (x481 x1158) (x4578 x1158)))
(define-fun x4603 ((x1158 Int)) Int (ite x5075 (x2537 x1158) (ite x1836 (x2537 x1158) (x3308 x1158))))
(define-fun x2318 ((x1158 Int)) Int (ite (= x5190 x1158) 2 (x4603 x1158)))
(define-fun x904 ((x1158 Int)) Int (ite (= x1158 x1064) 3 (x2318 x1158)))
(define-fun x941 ((x1158 Int)) Int (ite x2284 (x2318 x1158) (x904 x1158)))
(define-fun x170 ((x1158 Int)) Int (ite (= x1502 x1158) 3 (x4603 x1158)))
(define-fun x1417 ((x1158 Int)) Int (ite x2849 (x170 x1158) (x4603 x1158)))
(define-fun x1099 ((x1158 Int)) Int (ite x4631 (x4603 x1158) (ite x930 (x941 x1158) (x1417 x1158))))
(define-fun x83 ((x1158 Int)) Int (ite x2836 (x4603 x1158) (x1099 x1158)))
(define-fun x5421 ((x1158 Int)) Int (x2781 x1158))
(define-fun x955 ((x1158 Int)) Int (x5421 x1158))
(define-fun x2342 ((x1158 Int)) Int (ite x5075 (x5168 x1158) (ite x1836 (x5168 x1158) (x337 x1158))))
(define-fun x4406 ((x1158 Int)) Int (ite x4091 (x1774 x1158) (x2342 x1158)))
(define-fun x4585 ((x1158 Int)) Int (ite x5143 (ite x123 (x2342 x1158) (x5109 x1158)) (x2342 x1158)))
(define-fun x137 ((x1158 Int)) Int (ite x930 (x2342 x1158) (ite x2849 (x2342 x1158) (x4585 x1158))))
(define-fun x4005 ((x1158 Int)) Int (ite x2836 (x2342 x1158) (ite x4631 (x4406 x1158) (x137 x1158))))
(define-fun x623 ((x1158 Int)) Int (x4945 x1158))
(define-fun x1701 ((x1158 Int)) Int (x623 x1158))
(define-fun x5375 ((x1158 Int)) Int (ite (= x1158 0) x164 (x5433 x1158)))
(define-fun x2953 ((x1158 Int)) Int (ite x4631 (x4406 x1158) (x137 x1158)))
(define-fun x5254 ((x1158 Int)) Int (x5421 x1158))
(define-fun x4111 ((x1158 Int)) Int (x623 x1158))
(define-fun x146 ((x1158 Int)) Int (ite x930 (x941 x1158) (x1417 x1158)))
(define-fun x5001 ((x1158 Int)) Int (ite x930 (x2660 x1158) (x481 x1158)))
(define-fun x5191 ((x1158 Int)) Int (x5421 x1158))
(define-fun x3718 ((x1158 Int)) Int (x623 x1158))
(define-fun x3519 ((x1158 Int)) Int (ite x5075 (x2360 x1158) (ite x1836 (x2360 x1158) (x3211 x1158))))
(define-fun x163 ((x1158 Int)) Int (ite x5075 (x4120 x1158) (ite x1836 (x4120 x1158) (ite x4997 (ite x666 (x301 x1158) (x4120 x1158)) (ite x4153 (ite x1442 (x4120 x1158) (ite x3126 (x4742 x1158) (ite x2230 (x1403 x1158) (x4120 x1158)))) (ite x3733 (x1385 x1158) (ite x5661 (ite x440 (x4120 x1158) (x2014 x1158)) (x4120 x1158))))))))
(define-fun x1855 ((x1158 Int)) Int (ite (= x1158 x4268) x1664 (x163 x1158)))
(define-fun x3158 ((x1158 Int)) Int (ite x2849 (x2342 x1158) (x4585 x1158)))
(define-fun x4844 ((x1158 Int)) Int (ite x5075 (x2321 x1158) (ite x1836 (x2321 x1158) (x4446 x1158))))
(define-fun x3030 ((x1158 Int)) Int (ite (= 128 x1158) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x2809 x1158)))
(define-fun x4024 ((x1158 Int)) Int (ite (= 132 x1158) x4828 (x3030 x1158)))
(define-fun x4701 ((x1158 Int)) Int (ite (= 164 x1158) 128 (x4024 x1158)))
(define-fun x4083 ((x1158 Int)) Int (ite (= 260 x1158) x3886 (x4701 x1158)))
(define-fun x1133 ((x1158 Int)) Int (ite (= x1158 292) x2734 (x4083 x1158)))
(define-fun x442 ((x1158 Int)) Int (ite x5075 (x4553 x1158) (ite x1836 (x4553 x1158) (x1993 x1158))))
(define-fun x5282 ((x1158 Int)) Int (ite (= x1158 292) x5080 (x4083 x1158)))
(define-fun x608 ((x1158 Int)) Int (ite x1391 (ite x3266 (x4083 x1158) (x1133 x1158)) (x5282 x1158)))
(define-fun x3447 ((x1158 Int)) Int (ite (= x1158 196) x5067 (x608 x1158)))
(define-fun x3172 ((x1158 Int)) Int (ite (= 228 x1158) x1598 (x3447 x1158)))
(define-fun x1823 ((x1158 Int)) Int (ite (= x1158 x5244) x5665 (x3172 x1158)))
(define-fun x2743 ((x1158 Int)) Int (ite (= x4546 x1158) x2847 (x1823 x1158)))
(define-fun x4364 ((x1158 Int)) Int (ite (= x1158 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x2809 x1158)))
(define-fun x2075 ((x1158 Int)) Int (ite (= 132 x1158) x2010 (x4364 x1158)))
(define-fun x1648 ((x1158 Int)) Int (ite (= x1158 164) 128 (x2075 x1158)))
(define-fun x1160 ((x1158 Int)) Int (ite (= 260 x1158) x4563 (x1648 x1158)))
(define-fun x3238 ((x1158 Int)) Int (ite (= x1158 292) x5669 (x1160 x1158)))
(define-fun x1510 ((x1158 Int)) Int (ite (= 128 x1158) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x2809 x1158)))
(define-fun x5010 ((x1158 Int)) Int (ite (= x1158 132) x1120 (x1510 x1158)))
(define-fun x3623 ((x1158 Int)) Int (ite (= x1158 164) 128 (x5010 x1158)))
(define-fun x2961 ((x1158 Int)) Int (ite (= x1158 260) x3260 (x3623 x1158)))
(define-fun x58 ((x1158 Int)) Int (ite (= x1158 292) x4110 (x2961 x1158)))
(define-fun x1154 ((x1158 Int)) Int (ite (= x1158 292) x2851 (x1160 x1158)))
(define-fun x5588 ((x1158 Int)) Int (ite x1760 (ite x835 (x1160 x1158) (x3238 x1158)) (x1154 x1158)))
(define-fun x3584 ((x1158 Int)) Int (ite (= 196 x1158) x1180 (x5588 x1158)))
(define-fun x4488 ((x1158 Int)) Int (ite (= x1158 228) x887 (x3584 x1158)))
(define-fun x852 ((x1158 Int)) Int (ite (= x967 x1158) x4618 (x4488 x1158)))
(define-fun x4657 ((x1158 Int)) Int (ite (= x1313 x1158) x3140 (x852 x1158)))
(define-fun x1874 ((x1158 Int)) Int (ite (= 292 x1158) x5011 (x2961 x1158)))
(define-fun x2665 ((x1158 Int)) Int (ite x2585 (ite x2904 (x2961 x1158) (x58 x1158)) (x1874 x1158)))
(define-fun x85 ((x1158 Int)) Int (ite (= 196 x1158) x1651 (x2665 x1158)))
(define-fun x1405 ((x1158 Int)) Int (ite (= x1158 228) x1785 (x85 x1158)))
(define-fun x1768 ((x1158 Int)) Int (ite (= x2650 x1158) x2145 (x1405 x1158)))
(define-fun x1573 ((x1158 Int)) Int (ite (= x3152 x1158) x5412 (x1768 x1158)))
(define-fun x981 ((x1158 Int)) Int (ite (= x1158 x4546) x4807 (x1823 x1158)))
(define-fun x2397 ((x1158 Int)) Int (ite x5091 (ite x1416 (x1823 x1158) (x2743 x1158)) (x981 x1158)))
(define-fun x1373 ((x1158 Int)) Int (ite (= x1158 x4268) x3046 (x163 x1158)))
(define-fun x2952 ((x1158 Int)) Int (ite (and (<= 164 x1158) (> x2439 x1158)) (x2397 (+ 128 x1158)) (x3352 x1158)))
(define-fun x3168 ((x1158 Int)) Int (ite (and (<= 128 x1158) (> (+ 128 x4919) x1158)) (x2952 (+ x1158 36)) (x5316 x1158)))
(define-fun x3822 ((x1158 Int)) Int (ite (= x1158 x3591) 0 (x3168 x1158)))
(define-fun x3772 ((x1158 Int)) Int (ite (= x1158 x2297) x3398 (x3822 x1158)))
(define-fun x5677 ((x1158 Int)) Int (ite x5075 (x774 x1158) (ite x1836 (x774 x1158) (x5335 x1158))))
(define-fun x4112 ((x1158 Int)) Int (ite (and (> (+ 128 x4813) x1158) (>= x1158 128)) (x2952 (- (+ x4676 x1158) 128)) (x3772 x1158)))
(define-fun x1221 ((x1158 Int)) Int (ite (= x2902 x1158) 0 (x4112 x1158)))
(define-fun x748 ((x1158 Int)) Int (ite (and (< x1158 (+ 128 x4919)) (<= 128 x1158)) (x2952 (+ x1158 36)) (x1221 x1158)))
(define-fun x3764 ((x1158 Int)) Int (ite (= x1158 x5127) 0 (x748 x1158)))
(define-fun x4758 ((x1158 Int)) Int (ite (= x2738 x1158) x3144 (x3764 x1158)))
(define-fun x3955 ((x1158 Int)) Int (ite (= x3927 x1158) 0 (x5677 x1158)))
(define-fun x5110 ((x1158 Int)) Int (ite (= 128 x1158) x4919 (x4758 x1158)))
(define-fun x3882 ((x1158 Int)) Int (ite (and (> (+ 160 x4919) x1158) (>= x1158 160)) (x2952 (+ x1158 4)) (x5110 x1158)))
(define-fun x766 ((x1158 Int)) Int (ite (= x3028 x1158) 0 (x3882 x1158)))
(define-fun x3332 ((x1158 Int)) Int (ite (= x1158 x2007) x4813 (x766 x1158)))
(define-fun x2531 ((x1158 Int)) Int (ite (and (> (+ x3257 x4813) x1158) (<= x3257 x1158)) (x2952 (- (+ x1158 x4676) x3257)) (x3332 x1158)))
(define-fun x3186 ((x1158 Int)) Int (ite (= x3004 x1158) 0 (x2531 x1158)))
(define-fun x4249 ((x1158 Int)) Int (ite (= x1158 x5277) 1 (x4945 x1158)))
(define-fun x1484 ((x1158 Int)) Int (ite (= x1158 x1313) x1401 (x852 x1158)))
(define-fun x5121 ((x1158 Int)) Int (ite (= x1158 x3152) x2710 (x1768 x1158)))
(define-fun x3373 ((x1158 Int)) Int (ite x3233 (ite x4777 (x852 x1158) (x4657 x1158)) (x1484 x1158)))
(define-fun x2453 ((x1158 Int)) Int (ite (and (<= 164 x1158) (> x2860 x1158)) (x3373 (+ x1158 128)) (x218 x1158)))
(define-fun x4352 ((x1158 Int)) Int (ite (= 128 x1158) x3633 (x1583 x1158)))
(define-fun x4934 ((x1158 Int)) Int (ite (= 160 x1158) x4913 (x4352 x1158)))
(define-fun x952 ((x1158 Int)) Int (ite (= x1158 160) x3286 (x4352 x1158)))
(define-fun x2258 ((x1158 Int)) Int (ite x2224 (ite x5307 (x1768 x1158) (x1573 x1158)) (x5121 x1158)))
(define-fun x2459 ((x1158 Int)) Int (ite (and (> x5402 x1158) (>= x1158 164)) (x2258 (+ 128 x1158)) (x4205 x1158)))
(define-fun x2646 ((x1158 Int)) Int (ite (= x621 x1158) x497 (x5347 x1158)))
(define-fun x2102 ((x1158 Int)) Int (ite (and (<= x4791 x1158) (> (+ x497 x4791) x1158)) (x2459 (- (+ x3947 x1158) x4791)) (x491 x1158)))
(define-fun x433 ((x1158 Int)) Int (ite (= x1807 x1158) 0 (x2102 x1158)))
(define-fun x3741 ((x1158 Int)) Int (ite (= x1158 x3001) 1 (x4945 x1158)))
(define-fun x4732 ((x1158 Int)) Int (ite (= x1158 192) x3503 (x4934 x1158)))
(define-fun x15 ((x1158 Int)) Int (ite x4368 (x4352 x1158) (ite x1868 (ite x1934 (x4934 x1158) (x4732 x1158)) (x952 x1158))))
(define-fun x5221 ((x1158 Int)) Int (ite (and (> (+ x696 x2059) x1158) (>= x1158 x2059)) (x2453 (- (+ 164 x1158) x2059)) (x15 x1158)))
(define-fun x3270 ((x1158 Int)) Int (ite (= x3361 x1158) 0 (x5221 x1158)))
(define-fun x4283 ((x1158 Int)) Int (ite x4154 (x3270 x1158) (x15 x1158)))
(define-fun x2312 ((x1158 Int)) Int (ite (= x2059 x1158) x696 (x4283 x1158)))
(define-fun x101 ((x1158 Int)) Int (ite (and (<= x48 x1158) (> (+ x48 x696) x1158)) (x2453 (- (+ 164 x1158) x48)) (x2312 x1158)))
(define-fun x77 ((x1158 Int)) Int (ite (= x1158 x333) 0 (x101 x1158)))
(define-fun x4784 ((x1158 Int)) Int (ite (= x1518 x1158) x1857 (x77 x1158)))
(define-fun x3823 ((x1158 Int)) Int (ite (and (<= x4019 x1158) (< x1158 (+ x1857 x4019))) (x2453 (- (+ x1158 x4102) x4019)) (x4784 x1158)))
(define-fun x4581 ((x1158 Int)) Int (ite (= x1158 x3625) 0 (x3823 x1158)))
(define-fun x1900 ((x1158 Int)) Int (ite (= x1158 x5018) x2010 (x4581 x1158)))
(define-fun x3965 ((x1158 Int)) Int (ite (= x1490 x1158) 128 (x1900 x1158)))
(define-fun x2613 ((x1158 Int)) Int (ite (= x1158 x3055) x4477 (x3965 x1158)))
(define-fun x2367 ((x1158 Int)) Int (ite (= x2438 x1158) x2440 (x2613 x1158)))
(define-fun x362 ((x1158 Int)) Int (ite (= x1158 x2984) x5480 (x2367 x1158)))
(define-fun x2019 ((x1158 Int)) Int (ite (= x934 x1158) x242 (x362 x1158)))
(define-fun x1281 ((x1158 Int)) Int (ite (= x3705 x1158) x2963 (x2019 x1158)))
(define-fun x610 ((x1158 Int)) Int (ite x4504 (x2019 x1158) (ite x3435 (x362 x1158) (ite x3728 (x2367 x1158) (ite x5513 (x2613 x1158) (x1281 x1158))))))
(define-fun x3165 ((x1158 Int)) Int (ite (= x1158 x64) 0 (x610 x1158)))
(define-fun x16 ((x1158 Int)) Int (ite (= x1158 x4841) x1180 (x3165 x1158)))
(define-fun x1022 ((x1158 Int)) Int (ite (= x1104 x1158) x5226 (x16 x1158)))
(define-fun x4977 ((x1158 Int)) Int (ite (= x1158 x2552) x4437 (x1022 x1158)))
(define-fun x4085 ((x1158 Int)) Int (ite (= x504 x1158) x4461 (x4977 x1158)))
(define-fun x2405 ((x1158 Int)) Int (ite (= x1158 x3467) x1680 (x4085 x1158)))
(define-fun x2346 ((x1158 Int)) Int (ite (= x3781 x1158) x233 (x2405 x1158)))
(define-fun x4148 ((x1158 Int)) Int (ite (= x1158 x2565) x4476 (x2346 x1158)))
(define-fun x5512 ((x1158 Int)) Int (ite x575 (x2346 x1158) (ite x5486 (x2405 x1158) (ite x1297 (x4085 x1158) (ite x2891 (x4977 x1158) (x4148 x1158))))))
(define-fun x3883 ((x1158 Int)) Int (ite (= x629 x1158) 0 (x5512 x1158)))
(define-fun x3791 ((x1158 Int)) Int (ite (= x1158 x4577) x807 (x3883 x1158)))
(define-fun x1913 ((x1158 Int)) Int (ite (= x2846 x1158) x5199 (x3791 x1158)))
(define-fun x3316 ((x1158 Int)) Int (ite (= x1158 x2264) 150 (x1913 x1158)))
(define-fun x284 ((x1158 Int)) Int (ite (and (>= x1158 x3439) (> (+ 150 x3439) x1158)) (x2453 (- (+ x545 x1158) x3439)) (x3316 x1158)))
(define-fun x5267 ((x1158 Int)) Int (ite (and (> 0 x1158) (<= 0 x1158)) (x2205 x1158) (x284 x1158)))
(define-fun x3745 ((x1158 Int)) Int (ite x4091 (x5267 x1158) (x284 x1158)))
(define-fun x5090 ((x1158 Int)) Int (ite (= x1158 x2264) x3244 (x3745 x1158)))
(define-fun x1574 ((x1158 Int)) Int (ite (and (<= x3058 x1158) (> (+ x3244 x3058) x1158)) (x2205 (- x1158 x3058)) (x5090 x1158)))
(define-fun x5383 ((x1158 Int)) Int (ite (= x3864 x1158) x5558 (x1574 x1158)))
(define-fun x2791 ((x1158 Int)) Int (ite (= x1158 x4745) x3604 (x5383 x1158)))
(define-fun x2969 ((x1158 Int)) Int (ite (= x1158 x4640) x1927 (x2791 x1158)))
(define-fun x1786 ((x1158 Int)) Int (ite (= x3147 x1158) x2876 (x2969 x1158)))
(define-fun x5332 ((x1158 Int)) Int (ite x4851 (x2969 x1158) (ite x226 (x2791 x1158) (ite x3469 (x5383 x1158) (ite x2982 (x1574 x1158) (x1786 x1158))))))
(define-fun x5048 ((x1158 Int)) Int (ite (= x2228 x1158) 0 (x5332 x1158)))
(define-fun x2524 ((x1158 Int)) Int (ite (= x4058 x1158) x2841 (x5048 x1158)))
(define-fun x2915 ((x1158 Int)) Int (ite (= x3864 x1158) x2010 (x2524 x1158)))
(define-fun x4267 ((x1158 Int)) Int (ite (= x5552 x1158) 160 (x2915 x1158)))
(define-fun x2423 ((x1158 Int)) Int (ite (= x1158 x4404) x4193 (x4267 x1158)))
(define-fun x3977 ((x1158 Int)) Int (ite (= x4277 x1158) x4137 (x2423 x1158)))
(define-fun x2772 ((x1158 Int)) Int (ite (= x3880 x1158) x2854 (x3977 x1158)))
(define-fun x1705 ((x1158 Int)) Int (ite (= x1158 x208) x3341 (x2772 x1158)))
(define-fun x2401 ((x1158 Int)) Int (ite (= x1158 x1568) x5289 (x1705 x1158)))
(define-fun x5407 ((x1158 Int)) Int (ite x103 (x1705 x1158) (ite x4144 (x2772 x1158) (ite x1562 (x3977 x1158) (ite x1531 (x2423 x1158) (x2401 x1158))))))
(define-fun x9 ((x1158 Int)) Int (ite (= x1158 x1404) 0 (x5407 x1158)))
(define-fun x1567 ((x1158 Int)) Int (ite (= x3344 x1158) x1180 (x9 x1158)))
(define-fun x3112 ((x1158 Int)) Int (ite (= x2381 x1158) x153 (x1567 x1158)))
(define-fun x2457 ((x1158 Int)) Int (ite (= x1158 x1657) x4339 (x3112 x1158)))
(define-fun x5429 ((x1158 Int)) Int (ite (= x2699 x1158) x1244 (x2457 x1158)))
(define-fun x2633 ((x1158 Int)) Int (ite (= x2498 x1158) x3212 (x5429 x1158)))
(define-fun x3202 ((x1158 Int)) Int (ite (= x2844 x1158) x1276 (x2633 x1158)))
(define-fun x4526 ((x1158 Int)) Int (ite (= x1158 x5068) x2917 (x3202 x1158)))
(define-fun x4539 ((x1158 Int)) Int (ite x90 (x3202 x1158) (ite x3482 (x2633 x1158) (ite x4198 (x5429 x1158) (ite x404 (x2457 x1158) (x4526 x1158))))))
(define-fun x4588 ((x1158 Int)) Int (ite (= x2620 x1158) 0 (x4539 x1158)))
(define-fun x4238 ((x1158 Int)) Int (ite (= x1158 x4247) x5212 (x4588 x1158)))
(define-fun x2550 ((x1158 Int)) Int (ite (= x2802 x1158) x2474 (x5677 x1158)))
(define-fun x5678 ((x1158 Int)) Int (x2342 x1158))
(define-fun x33 ((x1158 Int)) Int (x5421 x1158))
(define-fun x1114 ((x1158 Int)) Int (x623 x1158))
(define-fun x4898 ((x1158 Int)) Int (x2660 x1158))
(define-fun x3597 ((x1158 Int)) Int (ite (= 4 x1158) 33 (x1549 x1158)))
(define-fun x4494 ((x1158 Int)) Int (ite (and (<= 0 x1158) (> 36 x1158)) (x3597 x1158) (x52 x1158)))
(define-fun x2931 ((x1158 Int)) Int (ite (= x1158 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x230 x1158)))
(define-fun x4980 ((x1158 Int)) Int (ite (= 192 x1158) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2931 x1158)))
(define-fun x5376 ((x1158 Int)) Int (ite (= 128 x1158) 64 (x722 x1158)))
(define-fun x21 ((x1158 Int)) Int (ite (= x1158 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x4185 x1158)))
(define-fun x3765 ((x1158 Int)) Int (ite (= x1158 258) x480 (x21 x1158)))
(define-fun x425 ((x1158 Int)) Int (ite (= 224 x1158) 34 (x4961 x1158)))
(define-fun x102 ((x1158 Int)) Int (ite (= 290 x1158) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x681 x1158)))
(define-fun x912 ((x1158 Int)) Int (ite (= x1158 294) x1370 (x102 x1158)))
(define-fun x4941 ((x1158 Int)) Int (ite (= x1158 326) x4162 (x912 x1158)))
(define-fun x2388 ((x1158 Int)) Int (ite (= x1158 358) 160 (x4941 x1158)))
(define-fun x5250 ((x1158 Int)) Int (ite (= 454 x1158) x2153 (x2388 x1158)))
(define-fun x3849 ((x1158 Int)) Int (ite (and (>= x1158 486) (> (+ 486 x2153) x1158)) (x4980 (- x1158 326)) (x5250 x1158)))
(define-fun x2869 ((x1158 Int)) Int (ite (= 390 x1158) 0 (x3849 x1158)))
(define-fun x3532 ((x1158 Int)) Int (ite (= x1158 422) x3646 (x2869 x1158)))
(define-fun x238 ((x1158 Int)) Int (ite (= x1158 x4550) x1478 (x3532 x1158)))
(define-fun x3711 ((x1158 Int)) Int (ite (and (<= x2250 x1158) (> (+ x2250 x1478) x1158)) (x3765 (- (+ 256 x1158) x2250)) (x238 x1158)))
(define-fun x4325 ((x1158 Int)) Int (ite (and (>= x1158 292) (< x1158 x2063)) (x3711 (+ 290 x1158)) (x4840 x1158)))
(define-fun x4335 ((x1158 Int)) Int (ite (= x1158 128) 0 (x4115 x1158)))
(define-fun x4372 ((x1158 Int)) Int (ite (= x1158 160) 0 (x4335 x1158)))
(define-fun x3164 ((x1158 Int)) Int (ite (= x1158 290) x2856 (x3711 x1158)))
(define-fun x4254 ((x1158 Int)) Int (ite (= x1158 322) x3526 (x3164 x1158)))
(define-fun x3026 ((x1158 Int)) Int (ite (= 0 x1158) x5510 (x3559 x1158)))
(define-fun x3962 ((x1158 Int)) Int (ite (= 32 x1158) x3973 (x3026 x1158)))
(define-fun x885 ((x1158 Int)) Int (ite (= x1158 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x1549 x1158)))
(define-fun x2614 ((x1158 Int)) Int (ite (and (< x1158 4) (>= x1158 0)) (x885 (+ x1158 128)) (x52 x1158)))
(define-fun x4114 ((x1158 Int)) Int (ite (= x1158 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x1549 x1158)))
(define-fun x1363 ((x1158 Int)) Int (ite (and (<= 0 x1158) (> 4 x1158)) (x4114 (+ x1158 128)) (x52 x1158)))
(define-fun x4022 ((x1158 Int)) Int (ite (= 548 x1158) x3964 (x1011 x1158)))
(define-fun x2581 ((x1158 Int)) Int (ite (= x1158 580) x2348 (x4022 x1158)))
(define-fun x2008 ((x1158 Int)) Int (ite (= x1158 548) x2812 (x1011 x1158)))
(define-fun x2486 ((x1158 Int)) Int (ite x4675 (x2814 x1158) (ite x3558 (ite x653 (x4022 x1158) (x2581 x1158)) (x2008 x1158))))
(define-fun x1241 ((x1158 Int)) Int (ite (= 516 x1158) x2762 (x3710 x1158)))
(define-fun x5623 ((x1158 Int)) Int (ite (= x3853 x1158) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1549 x1158)))
(define-fun x3918 ((x1158 Int)) Int (ite (= x1303 x1158) 32 (x5623 x1158)))
(define-fun x1647 ((x1158 Int)) Int (ite (= x1724 x1158) 48 (x3918 x1158)))
(define-fun x4311 ((x1158 Int)) Int (ite (= x1158 x4669) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x1647 x1158)))
(define-fun x2970 ((x1158 Int)) Int (ite (= x1158 x4656) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x4311 x1158)))
(define-fun x3552 ((x1158 Int)) Int (ite (and (> 132 x1158) (<= 0 x1158)) (x2970 (+ x1158 x3853)) (x52 x1158)))
(define-fun x1630 ((x1158 Int)) Int (ite (= 354 x1158) 64 (x4684 x1158)))
(define-fun x2240 ((x1158 Int)) Int (ite (= x1158 x3853) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1549 x1158)))
(define-fun x3673 ((x1158 Int)) Int (ite (= x2262 x1158) 32 (x2240 x1158)))
(define-fun x2135 ((x1158 Int)) Int (ite (= x1158 x5582) 32 (x3673 x1158)))
(define-fun x4915 ((x1158 Int)) Int (ite (= x1158 x4281) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x2135 x1158)))
(define-fun x4572 ((x1158 Int)) Int (ite (and (< x1158 100) (>= x1158 0)) (x4915 (+ x3853 x1158)) (x52 x1158)))
(define-fun x3930 ((x1158 Int)) Int (ite x5114 (x3711 x1158) (x4254 x1158)))
(define-fun x1069 ((x1158 Int)) Int (ite (= x3853 x1158) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x3930 x1158)))
(define-fun x3685 ((x1158 Int)) Int (ite (= x1158 x4447) x1370 (x1069 x1158)))
(define-fun x799 ((x1158 Int)) Int (ite (= x1158 x2223) 192 (x3685 x1158)))
(define-fun x5014 ((x1158 Int)) Int (ite (= x1158 x1262) x2755 (x799 x1158)))
(define-fun x843 ((x1158 Int)) Int (ite (and (<= x1061 x1158) (> (+ x2755 x1061) x1158)) (x2486 (- (+ 548 x1158) x1061)) (x5014 x1158)))
(define-fun x3717 ((x1158 Int)) Int (ite (= x499 x1158) x2827 (x843 x1158)))
(define-fun x1955 ((x1158 Int)) Int (ite (= x3690 x1158) x3201 (x3717 x1158)))
(define-fun x1587 ((x1158 Int)) Int (ite (= x1158 386) x2487 (x430 x1158)))
(define-fun x3326 ((x1158 Int)) Int (ite (= x1158 418) x4431 (x1587 x1158)))
(define-fun x1068 ((x1158 Int)) Int (ite (and (>= x1158 x4644) (< x1158 (+ x4644 x3201))) (x3326 (- (+ x1158 386) x4644)) (x1955 x1158)))
(define-fun x171 ((x1158 Int)) Int (ite (= x1158 x5457) x4162 (x1068 x1158)))
(define-fun x474 ((x1158 Int)) Int (ite (= x1158 x2257) 0 (x171 x1158)))
(define-fun x3388 ((x1158 Int)) Int (ite (= x4529 x1158) x4025 (x474 x1158)))
(define-fun x3958 ((x1158 Int)) Int (ite (= x1158 450) 34 (x2206 x1158)))
(define-fun x4460 ((x1158 Int)) Int (ite (= x861 x1158) x2220 (x3388 x1158)))
(define-fun x4794 ((x1158 Int)) Int (ite (= x1158 482) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1944 x1158)))
(define-fun x1750 ((x1158 Int)) Int (ite (= 484 x1158) x480 (x4794 x1158)))
(define-fun x4968 ((x1158 Int)) Int (ite (and (< x1158 (+ x5046 x2220)) (<= x5046 x1158)) (x1750 (- (+ 482 x1158) x5046)) (x4460 x1158)))
(define-fun x3292 ((x1158 Int)) Int (ite (= x4162 x1158) x5635 (x163 x1158)))
(define-fun x2850 ((x1158 Int)) Int (ite (= x2637 x1158) x2446 (x3292 x1158)))
(define-fun x1789 ((x1158 Int)) Int (ite (and (< x1158 x2472) (<= 228 x1158)) (x4968 (- (+ x1158 (x2124 (+ x3853 228))) 228)) (x1074 x1158)))
(define-fun x3648 ((x1158 Int)) Int 0)
(define-fun x2582 ((x1158 Int)) Int (x5421 x1158))
(define-fun x2456 ((x1158 Int)) Int (x904 x1158))
(define-fun x4811 ((x1158 Int)) Int (x2660 x1158))
(define-fun x2757 ((x1158 Int)) Int (x2342 x1158))
(define-fun x1835 ((x1158 Int)) Int (x623 x1158))
(define-fun x3037 ((x1158 Int)) Int (x5421 x1158))
(define-fun x4143 ((x1158 Int)) Int (x3037 x1158))
(define-fun x3771 ((x1158 Int)) Int (x2660 x1158))
(define-fun x4901 ((x1158 Int)) Int (x3771 x1158))
(define-fun x2386 ((x1158 Int)) Int (x2342 x1158))
(define-fun x5497 ((x1158 Int)) Int (x2386 x1158))
(define-fun x5611 ((x1158 Int)) Int (x904 x1158))
(define-fun x2393 ((x1158 Int)) Int (x623 x1158))
(define-fun x1792 ((x1158 Int)) Int (x2393 x1158))
(define-fun x5603 ((x1158 Int)) Int (ite (= x1158 x2637) x531 (x2850 x1158)))
(define-fun x3833 ((x1158 Int)) Int (ite x5075 (x4860 x1158) (ite x1836 (x4860 x1158) (x264 x1158))))
(define-fun x4614 ((x1158 Int)) Int (x3833 x1158))
(define-fun x2412 ((x1158 Int)) Int (ite x5075 (x3863 x1158) (ite x1836 (x3863 x1158) (x4575 x1158))))
(define-fun x1797 ((x1158 Int)) Int (x2412 x1158))
(define-fun x3054 ((x1158 Int)) Int (x2318 x1158))
(define-fun x141 ((x1158 Int)) Int (x5677 x1158))
(define-fun x2235 ((x1158 Int)) Int (ite x5075 (x3339 x1158) (ite x1836 (x3339 x1158) (x2244 x1158))))
(define-fun x3795 ((x1158 Int)) Int (x2235 x1158))
(define-fun x948 ((x1158 Int)) Int (x3342 x1158))
(define-fun x4224 ((x1158 Int)) Int (x948 x1158))
(define-fun x5162 ((x1158 Int)) Int (x442 x1158))
(define-fun x1655 ((x1158 Int)) Int (x4844 x1158))
(define-fun x2079 ((x1158 Int)) Int (x1869 x1158))
(define-fun x1939 ((x1158 Int)) Int (x3610 x1158))
(define-fun x2032 ((x1158 Int)) Int (x1939 x1158))
(define-fun x3981 ((x1158 Int)) Int (x2559 x1158))
(define-fun x3972 ((x1158 Int)) Int (x3981 x1158))
(define-fun x3133 ((x1158 Int)) Int (ite x5075 (x4804 x1158) (ite x1836 (x594 x1158) (x2374 x1158))))
(define-fun x932 ((x1158 Int)) Int (x3133 x1158))
(define-fun x4986 ((x1158 Int)) Int (ite x5114 (x3559 x1158) (x3962 x1158)))
(define-fun x963 ((x1158 Int)) Int (ite x5075 (x4818 x1158) (ite x1836 (x4818 x1158) (x5192 x1158))))
(define-fun x1644 ((x1158 Int)) Int (x963 x1158))
(define-fun x2054 ((x1158 Int)) Int (ite x5075 (x5222 x1158) (ite x1836 (x5222 x1158) (x1165 x1158))))
(define-fun x5454 ((x1158 Int)) Int (x2054 x1158))
(define-fun x4786 ((x1158 Int)) Int (x3519 x1158))
(define-fun x2147 ((x1158 Int)) Int (ite x5075 (x2954 x1158) (x1858 x1158)))
(define-fun x5434 ((x1158 Int)) Int (x2865 x1158))
(define-fun x2940 ((x1158 Int)) Int (x5434 x1158))
(define-fun x2464 ((x1158 Int)) Int (ite x5075 (x2786 x1158) (x3013 x1158)))
(define-fun x4384 ((x1158 Int)) Int (ite x5075 (x3477 x1158) (ite x1836 (x3477 x1158) (x4516 x1158))))
(define-fun x4239 ((x1158 Int)) Int (x4384 x1158))
(define-fun x561 ((x1158 Int)) Int (ite x5075 (x3887 x1158) (x3967 x1158)))
(define-fun x902 ((x1158 Int)) Int (ite (and (<= 0 x1158) (< x1158 x845)) (x4986 x1158) (x1549 x1158)))
(define-fun x5002 ((x1158 Int)) Int (ite (and (> x845 x1158) (>= x1158 0)) (x902 x1158) (x52 x1158)))
(define-fun x2557 ((x1158 Int)) Int (ite (and (>= x1158 290) (> 354 x1158)) (x4986 (- x1158 290)) (x5388 x1158)))
(define-fun x5157 ((x1158 Int)) Int (ite (= x1158 4) 34 (x1549 x1158)))
(define-fun x61 ((x1158 Int)) Int (ite (and (<= 0 x1158) (> 36 x1158)) (x5157 x1158) (x52 x1158)))
(define-fun x3301 ((x1158 Int)) Int (ite (= x1158 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2043 x1158)))
(define-fun x3786 ((x1158 Int)) Int (ite (= x1158 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3301 x1158)))
(define-fun x2272 ((x1158 Int)) Int (ite (= 128 x1158) 64 (x4899 x1158)))
(define-fun x4599 ((x1158 Int)) Int (ite (= x1158 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x585 x1158)))
(define-fun x1288 ((x1158 Int)) Int (ite (= x1158 258) x5438 (x4599 x1158)))
(define-fun x3825 ((x1158 Int)) Int (ite (= 224 x1158) 34 (x4210 x1158)))
(define-fun x4470 ((x1158 Int)) Int (ite (= x1158 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x1000 x1158)))
(define-fun x5211 ((x1158 Int)) Int (ite (= x1158 294) x1370 (x4470 x1158)))
(define-fun x1668 ((x1158 Int)) Int (ite (= x1158 326) x4162 (x5211 x1158)))
(define-fun x2643 ((x1158 Int)) Int (ite (= x1158 358) 160 (x1668 x1158)))
(define-fun x5301 ((x1158 Int)) Int (ite (= 454 x1158) x2134 (x2643 x1158)))
(define-fun x3806 ((x1158 Int)) Int (ite (and (> (+ 486 x2134) x1158) (>= x1158 486)) (x3786 (- x1158 326)) (x5301 x1158)))
(define-fun x4812 ((x1158 Int)) Int (ite (= x1158 390) 0 (x3806 x1158)))
(define-fun x296 ((x1158 Int)) Int (ite (= 422 x1158) x2957 (x4812 x1158)))
(define-fun x5594 ((x1158 Int)) Int (ite (= x1158 x100) x5159 (x296 x1158)))
(define-fun x2858 ((x1158 Int)) Int (ite (and (>= x1158 x3036) (> (+ x3036 x5159) x1158)) (x1288 (- (+ x1158 256) x3036)) (x5594 x1158)))
(define-fun x3190 ((x1158 Int)) Int (ite (and (< x1158 x2396) (<= 292 x1158)) (x2858 (+ 290 x1158)) (x2574 x1158)))
(define-fun x20 ((x1158 Int)) Int (ite (= x1158 128) 0 (x655 x1158)))
(define-fun x5311 ((x1158 Int)) Int (ite (= x1158 160) 0 (x20 x1158)))
(define-fun x1527 ((x1158 Int)) Int (ite (= x1158 290) x1954 (x2858 x1158)))
(define-fun x3943 ((x1158 Int)) Int (ite (= x1158 322) x3183 (x1527 x1158)))
(define-fun x1590 ((x1158 Int)) Int (ite (= x1158 0) x2763 (x4084 x1158)))
(define-fun x4921 ((x1158 Int)) Int (ite (= 32 x1158) x4046 (x1590 x1158)))
(define-fun x2543 ((x1158 Int)) Int (ite (and (>= x1158 290) (> 354 x1158)) (x4921 (- x1158 290)) (x2073 x1158)))
(define-fun x240 ((x1158 Int)) Int (ite x104 (x3943 x1158) (x1958 x1158)))
(define-fun x3437 ((x1158 Int)) Int (ite (= x133 x1158) x4484 (x2833 x1158)))
(define-fun x3310 ((x1158 Int)) Int (ite (= x2658 x1158) x2764 (x3437 x1158)))
(define-fun x1971 ((x1158 Int)) Int (ite (= x1025 x1158) x4827 (x2538 x1158)))
(define-fun x881 ((x1158 Int)) Int (ite (= x1158 x4373) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1861 x1158)))
(define-fun x3399 ((x1158 Int)) Int (ite (= x1143 x1158) x5438 (x881 x1158)))
(define-fun x131 ((x1158 Int)) Int (ite (= x5151 x1158) x388 (x4432 x1158)))
(define-fun x3453 ((x1158 Int)) Int (ite (= x1158 x2320) x5625 (x5112 x1158)))
(define-fun x604 ((x1158 Int)) Int (ite (= x1158 x3323) x70 (x4379 x1158)))
(define-fun x4063 ((x1158 Int)) Int (ite (= x3323 x1158) x2131 (x4379 x1158)))
(define-fun x1979 ((x1158 Int)) Int (ite (= x1158 x4571) x3318 (x604 x1158)))
(define-fun x2653 ((x1158 Int)) Int (ite x2315 (x1263 x1158) (ite x4189 (ite x1708 (x604 x1158) (x1979 x1158)) (x4063 x1158))))
(define-fun x5431 ((x1158 Int)) Int (ite (= x1158 x5615) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x240 x1158)))
(define-fun x1641 ((x1158 Int)) Int (ite (= x1158 x3810) x1370 (x5431 x1158)))
(define-fun x5288 ((x1158 Int)) Int (ite (= x1158 x822) 192 (x1641 x1158)))
(define-fun x794 ((x1158 Int)) Int (ite (= x2065 x1158) x1535 (x5288 x1158)))
(define-fun x4587 ((x1158 Int)) Int (ite (and (< x1158 (+ x1806 x1535)) (>= x1158 x1806)) (x2653 (- (+ x1158 x3323) x1806)) (x794 x1158)))
(define-fun x4674 ((x1158 Int)) Int (ite (= x1158 x4220) x3724 (x4587 x1158)))
(define-fun x57 ((x1158 Int)) Int (ite (= x1158 x437) x5034 (x4674 x1158)))
(define-fun x40 ((x1158 Int)) Int (ite (and (>= x1158 x2701) (< x1158 (+ x2701 x5034))) (x3310 (- (+ x1158 x4885) x2701)) (x57 x1158)))
(define-fun x4768 ((x1158 Int)) Int (ite (= x2268 x1158) x4162 (x40 x1158)))
(define-fun x3386 ((x1158 Int)) Int (ite (= x4987 x1158) 0 (x4768 x1158)))
(define-fun x4138 ((x1158 Int)) Int (ite (= x1158 x4213) x1520 (x3386 x1158)))
(define-fun x1918 ((x1158 Int)) Int (ite (= x1761 x1158) x1222 (x4138 x1158)))
(define-fun x5217 ((x1158 Int)) Int (ite (and (<= x5641 x1158) (< x1158 (+ x5641 x1222))) (x3399 (- (+ x2685 x1158) x5641)) (x1918 x1158)))
(define-fun x1827 ((x1158 Int)) Int (ite (= x1158 x4268) x5636 (x163 x1158)))
(define-fun x1255 ((x1158 Int)) Int (ite (= x1499 x1158) x3267 (x1827 x1158)))
(define-fun x3756 ((x1158 Int)) Int (ite (= x1158 x4162) x5656 (x1255 x1158)))
(define-fun x1540 ((x1158 Int)) Int (ite (and (< x1158 x1507) (>= x1158 228)) (x5217 (- (+ x1158 (x2124 (+ x5615 228))) 228)) (x848 x1158)))
(define-fun x5453 ((x1158 Int)) Int (ite x123 (x2342 x1158) (x5109 x1158)))
(define-fun x5524 ((x1158 Int)) Int (ite (= x4799 x1158) x3095 (x2235 x1158)))
(define-fun x22 ((x1158 Int)) Int (ite (= x1158 x343) x964 (x2412 x1158)))
(define-fun x4770 ((x1158 Int)) Int (ite (= x1322 x1158) x4162 (x963 x1158)))
(define-fun x3057 ((x1158 Int)) Int (ite (= 0 x1158) x1305 (x5433 x1158)))
(define-fun x4322 ((x1158 Int)) Int (ite x666 (x4707 x1158) (x4818 x1158)))
(define-fun x3563 ((x1158 Int)) Int (ite x666 (x5425 x1158) (x5168 x1158)))
(define-fun x2441 ((x1158 Int)) Int (ite x666 (x1346 x1158) (x4860 x1158)))
(define-fun x1141 ((x1158 Int)) Int (ite x666 (x5229 x1158) (x3477 x1158)))
(define-fun x4574 ((x1158 Int)) Int (ite x666 (x5550 x1158) (x3863 x1158)))
(define-fun x5297 ((x1158 Int)) Int (ite x666 (x125 x1158) (x5222 x1158)))
(define-fun x615 ((x1158 Int)) Int (ite x666 (x5273 x1158) (x4553 x1158)))
(define-fun x2648 ((x1158 Int)) Int (ite x666 (x3796 x1158) (x594 x1158)))
(define-fun x5602 ((x1158 Int)) Int (ite x666 (x4256 x1158) (x2321 x1158)))
(define-fun x4935 ((x1158 Int)) Int (ite x666 (x4982 x1158) (x2360 x1158)))
(define-fun x3838 ((x1158 Int)) Int (ite x666 (x3017 x1158) (x3339 x1158)))
(define-fun x4338 ((x1158 Int)) Int (ite x2035 (x4248 x1158) (x1275 x1158)))
(define-fun x883 ((x1158 Int)) Int (ite (and (>= x1158 128) (< x1158 160)) (x4338 (- x1158 128)) (x1045 x1158)))
(define-fun x1532 ((x1158 Int)) Int (ite x1161 (x3912 x1158) (x1731 x1158)))
(define-fun x2723 ((x1158 Int)) Int (ite (and (<= 128 x1158) (> 160 x1158)) (x1532 (- x1158 128)) (x3279 x1158)))
(define-fun x4586 ((x1158 Int)) Int (ite x5075 (x3887 x1158) (x3967 x1158)))
(define-fun x3448 ((x1158 Int)) Int (x1869 x1158))
(define-fun x3138 ((x1158 Int)) Int (ite x5075 (x2786 x1158) (x3013 x1158)))
(define-fun x4893 ((x1158 Int)) Int (ite x5075 (x2954 x1158) (x1858 x1158)))
(define-fun x2826 ((x1158 Int)) Int (ite (= x2818 x1158) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x5680 x1158)))
(define-fun x4459 ((x1158 Int)) Int (ite (= x1158 x2270) x3712 (x2826 x1158)))
(define-fun x5299 ((x1158 Int)) Int (ite (= x1158 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x2809 x1158)))
(define-fun x390 ((x1158 Int)) Int (ite (= x1158 132) x4197 (x5299 x1158)))
(define-fun x304 ((x1158 Int)) Int (ite (= x1158 164) x4569 (x390 x1158)))
(define-fun x2618 ((x1158 Int)) Int (ite (= 196 x1158) x2593 (x304 x1158)))
(define-fun x2527 ((x1158 Int)) Int (ite (= x1158 228) x1005 (x2618 x1158)))
(define-fun x863 ((x1158 Int)) Int (ite (= 128 x1158) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2809 x1158)))
(define-fun x252 ((x1158 Int)) Int (ite (= x1158 132) x1245 (x863 x1158)))
(define-fun x1421 ((x1158 Int)) Int (ite (= 164 x1158) x671 (x252 x1158)))
(define-fun x3471 ((x1158 Int)) Int (ite (= 128 x1158) x671 (x3320 x1158)))
(define-fun x2434 ((x1158 Int)) Int (ite (= x1158 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x3471 x1158)))
(define-fun x1225 ((x1158 Int)) Int (ite (= x1158 132) x1245 (x2434 x1158)))
(define-fun x5331 ((x1158 Int)) Int (ite (= x1158 164) 0 (x1225 x1158)))
(define-fun x3311 ((x1158 Int)) Int (ite (= x1158 196) 0 (x5331 x1158)))
(define-fun x2914 ((x1158 Int)) Int (ite (= x1158 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2809 x1158)))
(define-fun x899 ((x1158 Int)) Int (ite (= 132 x1158) x3161 (x2914 x1158)))
(define-fun x2160 ((x1158 Int)) Int (ite (= 164 x1158) x4393 (x899 x1158)))
(define-fun x3578 ((x1158 Int)) Int (ite (= 196 x1158) x1692 (x2160 x1158)))
(define-fun x4619 ((x1158 Int)) Int (ite (= x1158 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2809 x1158)))
(define-fun x4785 ((x1158 Int)) Int (ite (= 132 x1158) x1054 (x4619 x1158)))
(define-fun x2309 ((x1158 Int)) Int (ite (= x1158 x4162) x316 (x163 x1158)))
(define-fun x4837 ((x1158 Int)) Int (ite (= x1054 x1158) x1753 (x2309 x1158)))
(define-fun x3858 ((x1158 Int)) Int (ite (= x1158 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2809 x1158)))
(define-fun x5324 ((x1158 Int)) Int (ite (= x1158 132) x188 (x3858 x1158)))
(define-fun x3603 ((x1158 Int)) Int (ite x4882 (x481 x1158) (ite x2836 (x481 x1158) (x4578 x1158))))
(define-fun x2951 ((x1158 Int)) Int (ite x4882 (x4603 x1158) (ite x2836 (x4603 x1158) (x1099 x1158))))
(define-fun x2916 ((x1158 Int)) Int (x5421 x1158))
(define-fun x976 ((x1158 Int)) Int (x623 x1158))
(define-fun x1053 ((x1158 Int)) Int (ite x4882 (x3057 x1158) (x5375 x1158)))
(define-fun x3097 ((x1158 Int)) Int (ite (and (> (+ 32 x2818) x1158) (>= x1158 x2818)) (x1053 (- x1158 x2818)) (x3974 x1158)))
(define-fun x4163 ((x1158 Int)) Int (ite (= x1158 x5614) 0 (x4945 x1158)))
(define-fun x1546 ((x1158 Int)) Int (ite (= x1007 x1158) 1 (x2951 x1158)))
(define-fun x3265 ((x1158 Int)) Int (ite (= x1158 x4916) x1818 (x2781 x1158)))
(define-fun x4259 ((x1158 Int)) Int (ite (= x3738 x1158) 0 (x3603 x1158)))
(define-fun x98 ((x1158 Int)) Int 0)
(define-fun x3080 ((x1158 Int)) Int 0)
(define-fun x3632 ((x1158 Int)) Int (ite (= x1158 128) x3194 (x3692 x1158)))
(define-fun x2343 ((x1158 Int)) Int (ite (= 160 x1158) x2881 (x3632 x1158)))
(define-fun x4552 ((x1158 Int)) Int (ite (= x1158 192) x1904 (x2343 x1158)))
(assert (x847 x13))
(assert (x1746 (+ x4452 31) 32))
(assert (x847 x4257))
(assert (x847 x501))
(assert (= x5166 (or x3776 x1911)))
(assert (x847 x3104))
(assert (x847 x1764))
(assert (< 10000 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)))
(assert (x847 x2827))
(assert (x847 x784))
(assert (= (x25 (x2521 x4543 x4410 x1883 x2314 x1866)) (x2521 x4543 x4410 x1883 x2314 x1866)))
(assert (=> (<= x2067 10000) (= (x25 x2067) 0)))
(assert (= (x3860 64 x1370 5) (x25 (x3860 64 x1370 5))))
(assert (x847 x1380))
(assert (x847 x673))
(assert (x926 256 x2444))
(assert (= x4355 (and x5007 x1480)))
(assert (not (x2689 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382))))
(assert (=> (<= x5027 10000) (= 0 (x25 x5027))))
(assert (< 10000 (x3860 64 x2366 12)))
(assert (x379 x5319 32))
(assert (= (x25 (x3226 x5565 x406 x603 x3458 x5690 x2631)) (x3226 x5565 x406 x603 x3458 x5690 x2631)))
(assert (x847 x4104))
(assert (not (x2689 (x2521 x5203 x2164 x3862 x4636 x5174))))
(assert (x926 256 x714))
(assert (x847 x2471))
(assert (x847 x2917))
(assert (= (x1122 (x3860 64 x4162 2)) x4162))
(assert (= (x4985 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396)) x1396))
(assert (= x1096 (x3376 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635))))
(assert (x847 x2297))
(assert (= (x1122 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523)) x2899))
(assert (x847 x627))
(assert (= x5131 (and x4594 x816)))
(assert (x379 x1924 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2509))
(assert (=> (<= x3719 10000) (= 0 (x25 x3719))))
(assert (= (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599) (x25 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599))))
(assert (x2657 (+ 31 x426)))
(assert (< (x2521 x696 x4699 x2887 x2595 x4903) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2789) (= (x25 x2789) 0)))
(assert (= x404 (and (not x778) x310)))
(assert (x847 x3293))
(assert (x847 x5117))
(assert (x847 x4049))
(assert (< 10000 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)))
(assert (= x4576 (or x327 x599 x4852 x3637 x5521)))
(assert (x847 x1356))
(assert (=> (>= 10000 x5296) (= (x25 x5296) 0)))
(assert (= (and x1282 (not x215)) x4301))
(assert (= (x2143 (x3860 64 x4133 36)) 36))
(assert (=> (<= x4261 10000) (= 0 (x25 x4261))))
(assert (x847 x1468))
(assert (x367 x5286))
(assert (not (x2689 (x3159 x148 x4555))))
(assert (x847 x1406))
(assert (= x3676 (x3376 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395))))
(assert (x847 x1496))
(assert (x847 x4650))
(assert (= (or (and x4015 x2236) (and x4004 x3221)) x1736))
(assert (x847 x4230))
(assert (x3952 x3040))
(assert (=> (<= x2242 10000) (= (x25 x2242) 0)))
(assert (x847 x168))
(assert (x2657 (+ 31 x497)))
(assert (x847 x4216))
(assert (= (or x5312 x2585) x457))
(assert (x847 x4911))
(assert (= (x2143 (x2521 x148 x4490 x3005 x897 x4954)) x3005))
(assert (x847 x4762))
(assert (x847 x2370))
(assert (x847 x317))
(assert (not (x2689 (x3226 x5565 x406 x603 x3458 x5690 x2631))))
(assert (x847 x1021))
(assert (= 0 (x25 3521034783)))
(assert (x847 x492))
(assert (x2657 x3620))
(assert (< 10000 (x3860 64 x2862 36)))
(assert (=> (>= 10000 x4136) (= 0 (x25 x4136))))
(assert (x847 x3331))
(assert (x1746 (+ x5625 31) 32))
(assert (x847 x328))
(assert (< 10000 (x3860 64 x5214 12)))
(assert (= (x3376 (x3159 x1315 x369)) x1315))
(assert (= (x3226 x148 x2796 x422 x4121 x1523 x2759) (x25 (x3226 x148 x2796 x422 x4121 x1523 x2759))))
(assert (not (x2689 (x3860 64 x2483 36))))
(assert (= x3757 (or (and x1062 x3627) (and x2451 x2554) (and x3362 x3920))))
(assert (x847 x522))
(assert (x1411 x3963))
(assert (x847 x5496))
(assert (= x5232 (or x5430 x1391)))
(assert (=> (>= 10000 x3137) (= (x25 x3137) 0)))
(assert (=> (<= x2483 10000) (= (x25 x2483) 0)))
(assert (< 10000 (x3860 64 x2822 11)))
(assert (= x2358 (x1122 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341))))
(assert (= x2245 (x4693 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848))))
(assert (x847 x873))
(assert (x847 x4476))
(assert (x847 x688))
(assert (= x123 (and x2040 (not x4646))))
(assert (x847 x935))
(assert (< (x3860 64 x5553 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5086 (x2143 (x4159 x3044 x1475 x5086 x5164))))
(assert (x847 x2978))
(assert (x847 x1818))
(assert (= x5341 (x4985 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341))))
(assert (= (x3573 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)) x1580))
(assert (x847 x2847))
(assert (x847 x1392))
(assert (= 64 (x3376 (x3860 64 x4133 36))))
(assert (=> (<= x4279 10000) (= 0 (x25 x4279))))
(assert (x847 x2588))
(assert (x847 x553))
(assert (= (x3021 (x3226 x4342 x833 x1763 x4924 x2004 x2713)) x2004))
(assert (x847 x4354))
(assert (= (x2143 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051)) x3015))
(assert (=> (>= 10000 x1245) (= (x25 x1245) 0)))
(assert (x847 x132))
(assert (x847 x4617))
(assert (x847 x4099))
(assert (x847 x3851))
(assert (x847 x339))
(assert (= (=> (= (+ x441 292) x645) x1584) x2958))
(assert (x847 x2358))
(assert (= (x2521 x2448 x1566 x4600 x3358 x4070) (x25 (x2521 x2448 x1566 x4600 x3358 x4070))))
(assert (x847 x3504))
(assert (x847 x3254))
(assert (= x4735 (and x1755 x2269)))
(assert (=> (<= x2682 10000) (= (x25 x2682) 0)))
(assert (= (x25 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)) (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)))
(assert (=> (<= x1300 10000) (= 0 (x25 x1300))))
(assert (x847 x1228))
(assert (x847 x224))
(assert (x847 x2197))
(assert (= x2406 (x3573 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104))))
(assert (x847 x2025))
(assert (= x1080 (x2143 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175))))
(assert (= (x3376 (x4159 x432 x3884 x1771 x1947)) x432))
(assert (x847 x2560))
(assert (x847 x1094))
(assert (x847 x3888))
(assert (< (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x832))
(assert (x847 x5510))
(assert (x847 x2110))
(assert (x847 x4954))
(assert (= x2514 (and (not x1594) x3535)))
(assert (= 64 (x3376 (x3860 64 x365 100))))
(assert (x847 x3269))
(assert (= x703 (and x4093 x3984)))
(assert (x847 x5532))
(assert (= (x2715 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207)) x5207))
(assert (x847 x2598))
(assert (x847 x3670))
(assert (= x4395 (x2143 (x3860 x4348 x1032 x4395))))
(assert (x847 x842))
(assert (x379 x558 256))
(assert (x847 x1682))
(assert (x847 x3194))
(assert (=> (>= 10000 x1818) (= 0 (x25 x1818))))
(assert (< (x3860 64 x2332 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 11 (x2143 (x3860 64 x1245 11))))
(assert (= x4688 (x2143 (x2521 x4342 x2694 x4688 x654 x501))))
(assert (x847 x3260))
(assert (= (x3021 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045)) x159))
(assert (x847 x789))
(assert (=> (<= x2909 10000) (= 0 (x25 x2909))))
(assert (= (=> (and (= x3302 (not (> x2503 32))) (= (x4553 x340) x5530)) (and (=> (= x4226 32) x4449) x3302)) x5597))
(assert (= (=> (and (= (not (< x3475 x5249)) x3824) (= (x3342 x5414) x3318) (= x3475 (x2124 (+ x4571 32)))) (and x4329 x3824)) x3263))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1557) (= (x2124 (+ x3590 32)) x2908) (= x3783 (> x4809 0)) (<= x3590 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2536 150) (= x3737 (x4727 (+ 31 x1558) 32)) (= x2227 (x2124 (+ x4275 128))) (= (x2124 (+ x3012 36)) x4275) (= x1764 (x2124 (+ x124 x1893))) (= x2052 (x4727 (+ x1893 31) 32)) (> x3012 x3590) (= (x2124 (+ x2908 x1558)) x128) (= x124 (x2124 (+ x1557 32))) (= (* 32 x3737) x1622) (= (x2124 (+ 32 x2227)) x4774) (= (x1552 x1557) x4809) (= x1236 (x2124 (+ x4275 32))) (> x3590 x1557) (>= x3590 1) (= x3012 (x2124 (+ x3590 (mod (+ 32 x1622) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x1557 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x3590 (x2124 (+ x1557 (mod (+ x268 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= x3012 2) (= (* 32 x2052) x268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1557)) (and (=> (and (and (= (< 32 x4809) x2709) (= (x278 x124) x4427)) x3783) (and (=> (and x2709 (and (= x3003 (x4187 x1295)) (= (> x4809 64) x3665) (= x1614 (x2124 (+ 32 x4774))) (= x1295 (x2124 (+ 32 x124))))) (and (=> (and x3665 (and (= (> x4809 96) x283) (= (x2124 (+ 64 x124)) x2540) (= x4483 (x2124 (+ 64 x4774))) (= (x5337 x2540) x3753))) (and (=> (not x283) x1756) (=> x283 x2515))) (=> (not x3665) x1756))) (=> (not x2709) x1756))) (=> (not x3783) x1756))) x4177))
(assert (= (or (and x527 x4881) (and x2545 x3200)) x4244))
(assert (x847 x2282))
(assert (=> (<= x1468 10000) (= (x25 x1468) 0)))
(assert (= (or x3207 x3507) x192))
(assert (= x5596 (=> (and (= x2670 (= x2424 x1348)) (= (x2124 (+ 4 x2818)) x2270) (= (x959 (- x3029 x2818)) x4444) (= 36 x4444) (= (x2124 (+ 32 x2270)) x3029)) (and (=> (and (and (<= 1 x1348) (<= x3135 127) (= x3699 x3712) (= x4873 false) (>= 1461501637330902918203684832716283019655932542975 x1348) (= x1004 (x2342 x1872)) (>= x4016 1) (= x224 3628442803) (= x790 36) (>= 1461501637330902918203684832716283019655932542975 x1499) (= (= 0 x1004) x973) (= x3196 (+ x1640 1)) (= x1499 x4162) (>= 127 x3135) (<= x1640 253) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x4942) (= false x4765) (= x4092 (+ x1640 1)) (= x1348 x4268) (= x4016 (x2015 x4268)) (>= x1499 1) (= x1872 (x3860 64 x1640 36))) (not x2670)) (and (=> (and (not x973) (= x79 (= 1 x1004))) (and (=> (and (and (= (x3860 64 x4654 12) x2219) (= x318 (x210 1 x3601)) (= (= 0 x792) x3612) (or (= x4845 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4845)) (= x792 (x210 1 x3601)) (= (+ x4092 1) x4803) (<= x2010 65535) (= x4563 (ite (> x318 0) x2800 (x210 127 x2800))) (= x4654 (+ x4092 1)) (= x867 (+ 1 x4654)) (= x2800 (x4727 x3601 2)) (>= x4092 1) (= (x4384 x929) x2010) (<= x1180 18446744073709551615) (= x4845 (x959 (- x318 (mod (ite (< x4563 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (+ x4654 1) x2866) (= x929 (x3860 64 x4092 6)) (= x1180 (x3833 x2219)) (>= 253 x4092)) x79) (and (=> (and (not x3612) (and (= x5642 (x3159 32 103)) (= (< 0 x4563) x166))) (and (=> (and (not x166) (= 0 x5573)) x1203) (=> x166 x3405))) (=> (and x3612 (and (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3601) x2851) (= x3726 (* (ite (not (= 0 x4563)) 1 0) 32)) (= x967 (+ 292 x3726)) (or (= x3726 0) (= 32 x3726)))) x796))) (=> (and (= x2356 (= x1004 2)) (not x79)) (and (=> (and (= x3124 (= x1004 3)) (not x2356)) (and (=> (and (and (and (= (x3860 64 x1245 11) x5190) (= x3689 x671) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x1021) (= (+ x5021 1) x582) (= x543 (x2015 x4162)) (= x4059 (x2015 x1499)) (= x627 128) (= x4994 128) (<= 1 x1348) (<= 1 x4092) (= x2761 (x2015 x4162)) (>= 127 x2189) (>= x4059 1) (= false x1003) (= (+ x5021 1) x3556) (>= x543 1) (= x4538 x3571) (>= 253 x4092) (= x1348 x4268) (= x5584 false) (= x968 (x3860 64 x1245 11)) (>= 127 x3185) (= x1645 (x3860 64 x1245 11)) (= x671 (x3519 x461)) (= 100 x1666) (= 3957931183 x4902) (= x679 0) (= x1749 (x3860 64 x4092 36)) (= x461 (x3860 64 x5021 100)) (= x2711 x1245) (<= 1 x4621) (= x5026 486791245) (= 0 x4401) (= x5648 (x4603 x1645)) (= x3231 false) (= false x1309) (= x840 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= (+ x4092 1) x3403) (= x1245 (x2342 x1749)) (<= x1348 1461501637330902918203684832716283019655932542975) (= x634 68) (= (x2015 x4162) x4621) (= x4538 x700) (<= x2189 127) (= x700 x2711) (= (+ x968 2) x3312) (= x1920 0) (= false x4356) (= x587 0) (<= 1 x2761) (<= x3185 127) (= x5648 1) (= x5021 (+ 1 x4092))) (or (and x1003 (and (= (ite (not (= x4162 x3831)) 1 0) x2617) (>= 1461501637330902918203684832716283019655932542975 x3831))) (and (not x1003) (= x2617 (ite x1003 1 0))))) x3124) x3953) (=> (and (not x3124) (= (= x1004 4) x2088)) (and (=> x2088 x4616) (=> (and (not x2088) (= (= x1004 5) x1480)) (and (=> (and (not x1480) (= x4622 (= 6 x1004))) (and (=> (and (and (and (>= x4139 x1778) (= (not (= x4268 x4162)) x4343) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1340 x1778)) (= x4158 x5508) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x2510) (= (+ x3281 1) x1881) (= (x1827 x1499) x1317) (= x2089 x4393) (= x631 x2986) (= x3161 x5508) (= x2862 (+ 1 x3281)) (<= x2937 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3161 (x2342 x1311)) (= x213 (ite x4343 1 0)) (= x4442 (x3860 64 x2862 36)) (= x2089 x2651) (= x4536 128) (= (+ x2862 1) x1660) (>= x2937 0) (<= x3971 127) (>= x5032 1) (= x2744 (+ x4133 1)) (>= 251 x4092) (= x2937 (+ x1778 x1317)) (= x3409 false) (= (x3860 64 x4133 36) x5410) (= x5032 (x2015 x4162)) (= (+ 1 x4133) x5264) (< (+ x1778 x1317) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x4453) (<= x3971 127) (= x5636 (- x1057 x1778)) (= x1057 (x163 x4268)) (= (x2342 x5410) x1692) (= x2937 x3267) (<= 1 x4092) (= x1840 486791245) (= (x2015 x1499) x4453) (= x4133 (+ 1 x2862)) (= x1340 (x163 x1499)) (= x1692 x631) (= x1652 (x3860 64 x4092 36)) (= (x3860 64 x3281 36) x1311) (= x1625 false) (= x4139 (x163 x4268)) (= x1778 (x2342 x1652)) (= (+ x4092 1) x3281) (= 100 x1515) (= x4393 (x2342 x4442)) (= (+ 1 x4092) x2985)) (or (and (not x4343) (= x213 0)) (and x4343 (and (= x3831 x4268) (>= 1461501637330902918203684832716283019655932542975 x3831) (>= x3831 1))))) x4622) x1286) (=> (and (= x1884 (= x1004 7)) (not x4622)) (and (=> (and x1884 (and (= (x2015 x1499) x95) (= false x3767) (<= 1 x5418) (= x4646 (> x2602 0)) (= x1476 (x3860 64 x4092 2)) (= (+ x4092 1) x3501) (= (x2015 x4162) x5418) (<= x3831 1461501637330902918203684832716283019655932542975) (= x1658 2770781680) (>= x3831 1) (= x2602 (x163 x4162)) (<= x921 127) (= x1054 x960) (= x5271 36) (= x3831 x4268) (>= x95 1) (<= x1054 1461501637330902918203684832716283019655932542975) (= x1054 (x2054 x1476)) (= x761 false) (<= x921 127) (= x5349 128) (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x3581) (= x352 (+ 1 x4092)))) (and (=> (and (= x3406 (+ x4092 1)) (not x4646)) x3255) (=> (and (and (and (<= 1 x4181) (= (>= (x3043 x4162) x1250) x1218) (= (x163 x1054) x3022) (= (+ x2418 x2602) x3436) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2602 x2418)) (>= x3436 0) (= (= (x3043 x1054) x2778) x407) (= x2418 (x2309 x1054)) (>= 254 x665) (<= x2602 x4124) (= (- x387 x2602) x316) (= x4124 (x163 x4162)) x407 (< (+ x2602 x3022) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1218 (= x3826 (= 0 x4509)) (= x1250 (x4837 x4162)) (= x1753 x3436) (= x280 128) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3436) (<= x4509 4294967295) (= (x163 x4162) x387) (= (x4837 x1054) x2778)) (or (and (and (>= x942 1) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x448) x942) (>= 4294967358 x942) (= x448 (+ 63 x4509))) (not x3826)) x3826)) x4646) x1845))) (=> (and (and (= (= x1004 8) x569) (or (and (= x4092 x2687) (not x569)) (and x569 (and (<= 1 x3831) (= (+ x4092 1) x910) (<= 1 x862) (= (x2342 x134) x188) (= 1313998243 x60) (= (+ x4092 1) x2687) (= x862 (x2015 x4162)) (= x4609 36) (= x4664 false) (= x3831 x4268) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x2765) (>= 127 x4072) (= x3582 (x2342 x134)) (>= 1461501637330902918203684832716283019655932542975 x3831) (>= 253 x4092) (>= x4092 1) (>= x4229 1) (= x5072 128) (= (x3860 64 x4092 36) x134) (= x4229 (x2015 x1499)) (= (+ 1 x4092) x3032) (>= 127 x4072) (>= x188 100000) (= x188 x1379) (= false x371))))) (not x1884)) x483))))) (=> (and x1480 (and (= (+ x4092 1) x547) (>= x4092 1) (= x854 (= 0 x2577)) (= x1957 (x4727 x3601 2)) (= x3886 (ite (< 0 x3835) x1957 (x210 127 x1957))) (= (+ 1 x4092) x454) (<= x4828 65535) (<= x4092 252) (or (= x5535 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5535 1)) (= (x3860 64 x3618 12) x2445) (= x3618 (+ 1 x547)) (= x2577 (x210 1 x3601)) (= (+ x547 1) x3488) (= (x3833 x2445) x5067) (= x3835 (x210 1 x3601)) (= x5535 (x959 (- x3835 (mod (ite (< x3886 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2342 x2199) x4051) (>= 18446744073709551615 x5067) (= x3662 (x3860 64 x547 6)) (= (+ 1 x3618) x3939) (= (+ 1 x3618) x4265) (= (x4384 x3662) x4828) (= x2199 (x3860 64 x4092 36)))) (and (=> (and (and (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3601) x5080) (or (= x2539 32) (= x2539 0)) (= (+ 292 x2539) x5244) (= (* (ite (not (= 0 x3886)) 1 0) 32) x2539)) x854) x2901) (=> (and (not x854) (and (= (x3159 32 103) x1533) (= (< 0 x3886) x3214))) (and (=> (and (= 0 x359) (not x3214)) x554) (=> x3214 x4733))))))))))) (=> (and (and (= (+ 1 x4092) x5236) (>= 18446744073709551615 x1651) (= x4877 (x4727 x3601 2)) (= (x4384 x286) x1120) (>= 65535 x1120) (or (= x2282 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2282 1)) (>= 253 x4092) (= x465 (+ x5236 1)) (= (ite (> x5470 0) x4877 (x210 127 x4877)) x3260) (= x313 (+ 1 x4092)) (= (x3860 64 x4092 6) x286) (= (x210 1 x3601) x5470) (= (x3860 64 x5236 12) x3236) (= x1554 (x210 1 x3601)) (= x3271 (= 0 x1554)) (= (x959 (- x5470 (mod (ite (< x3260 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2282) (<= 1 x4092) (= (+ x5236 1) x3195) (= (x3833 x3236) x1651)) x2356) (and (=> (and (and (= (x3159 32 103) x2350) (= (> x3260 0) x1097)) (not x3271)) (and (=> (and (not x1097) (= x1683 0)) x2018) (=> x1097 x2703))) (=> (and (and (= (* 32 (ite (not (= x3260 0)) 1 0)) x656) (or (= x656 32) (= 0 x656)) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3601) x5011) (= (+ 292 x656) x2650)) x3271) x5152))))))) (=> (and (and (= x4569 x3365) (<= x4108 127) (= x475 x4197) (<= x2593 1461501637330902918203684832716283019655932542975) (>= 250 x4092) (<= x3831 1461501637330902918203684832716283019655932542975) (>= 65535 x4569) (<= x4108 127) (>= x1005 100000) (= x2739 (x3860 64 x4547 6)) (= x4547 (+ x4092 1)) (= (+ 1 x4092) x836) (= x109 (x2015 x4162)) (= 3812630263 x1188) (= x2593 x1372) (= x3206 (+ 1 x5258)) (>= x3831 1) (= (x2054 x3375) x3560) (= x4788 (x2054 x127)) (= 128 x1367) (<= 1 x5423) (= (+ x947 1) x5258) (>= 1461501637330902918203684832716283019655932542975 x4197) (<= 1 x109) (= x947 (+ x4547 1)) (= (x4384 x2739) x4569) (= (+ 1 x947) x675) (= (x2054 x127) x4197) (= (+ x5258 1) x988) (= (x3860 64 x4092 2) x127) (= (x2342 x4662) x1005) (<= 1 x4092) (= false x2129) (= x2593 (x2054 x3375)) (= x4268 x3831) (= false x342) (= (+ 1 x5258) x4323) (= 132 x3549) (= x5423 (x2015 x1499)) (= (x3860 64 x947 2) x3375) (= x1694 (x2342 x4662)) (= x5045 (x4384 x2739)) (= (+ 1 x4547) x911) (= x5163 102788308552044517260959567728648622381392053106279845986800620074717893623808) (= x1005 x1323) (= (x3860 64 x5258 36) x4662)) x973) x2422))) (=> (and (and (and (= x1891 36) (= false x830) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x3712) (= (x3860 64 x4162 1) x1578) (= (> x1224 x1963) x2519) (<= x713 127) (= x4795 x3712) (= (x2015 x2424) x1553) (= x1420 (x3860 64 x4162 2)) (= (x2235 x1420) x1224) (= x964 x3296) (= x3296 (* 1000000000 x3712)) (<= 1 x1553) (>= 127 x713) (= x5395 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= x5261 (ite x2519 1 0)) (= x2361 false) (= 3628442803 x1043) (= x1963 (x3133 x1578)) (= x4795 x4717)) (or (and x2519 (= 0 x5261)) (and (and (= x1173 (x959 (- x1963 x1224))) (not (> x1173 x1963)) (not (> x964 x1173))) (not x2519)))) x2670) x3894)))))
(assert (x847 x149))
(assert (= x1708 (and x3678 (not x1715))))
(assert (not (x2689 (x3159 32 x418))))
(assert (x847 x1378))
(assert (< (x3159 x4342 x3073) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2255))
(assert (x847 x2261))
(assert (x847 x3629))
(assert (x847 x3384))
(assert (= (x25 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341)) (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341)))
(assert (x847 x5205))
(assert (x847 x2590))
(assert (x847 x277))
(assert (x847 x2694))
(assert (not (x2689 (x3159 x3676 x3966))))
(assert (< 10000 (x4159 x432 x3884 x1771 x1947)))
(assert (x847 x4605))
(assert (x847 x2718))
(assert (x847 x4543))
(assert (x847 x3454))
(assert (x847 x3052))
(assert (= 36 (x2143 (x3860 64 x5564 36))))
(assert (x847 x3047))
(assert (x847 x4862))
(assert (= (x3573 (x3226 x696 x3109 x5052 x5209 x5111 x1775)) x1775))
(assert (x847 x5480))
(assert (= x1582 (x1122 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179))))
(assert (=> (>= 10000 x827) (= 0 (x25 x827))))
(assert (= x5111 (x3021 (x3226 x696 x3109 x5052 x5209 x5111 x1775))))
(assert (=> (<= x3663 10000) (= (x25 x3663) 0)))
(assert (= (x2143 (x2521 x1893 x1440 x535 x1449 x4345)) x535))
(assert (x847 x3009))
(assert (not (x2689 (x3860 64 x2332 11))))
(assert (x847 x4704))
(assert (x847 x1618))
(assert (x847 x3583))
(assert (x847 x5338))
(assert (x1063 x5293))
(assert (=> (>= 10000 x372) (= (x25 x372) 0)))
(assert (= x1142 (=> (and (= (x2124 (+ x1761 32)) x5641) (= (x2124 (+ 31 x1535)) x392) (= (x2124 (+ x5034 31)) x2419) (= (x2559 x5346) x1008) (= (x959 (- x1761 x3810)) x1520) (= x4463 (x2124 (+ x5641 x4910))) (> x2382 x1824) (= (x1971 x1025) x2022) (<= x1520 18446744073709551615) (= x4910 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x272)) (= x2626 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x392)) (= x4987 (x2124 (+ 32 x2268))) (= (+ 31 x3876) x4225) (< (+ x985 x2411) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x145 192) (= x5605 (+ x5633 x3268 32)) (<= x1507 57896044618658097711785492504343953926634992332820282019728792003956564819967) (not (> x5605 x2382)) (= x443 (x1255 x4162)) (<= x1283 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1283 x2216) (>= x4857 1) (= (x2124 (+ x1222 31)) x272) (= (+ x4133 1) x1773) (= false x1571) (<= x544 18446744073709551615) (= x4797 (+ 32 x3876 x544)) (< (+ x2411 x344) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2015 x2605) x3734) (= (x2124 (+ x1806 x2626)) x437) (= (x2124 (+ x4220 32)) x2268) (= (x1540 196) x3531) (= x1520 x4782) (= (x2124 (+ 4 x5615)) x3810) (= x1222 (x131 x5151)) (= x985 (x1255 x1294)) (= x711 3313512704) (not (< x2382 x4797)) x3638 (= x822 (x2124 (+ x3810 32))) (>= x3734 1) (<= x3192 127) (= x2382 x1507) (= (x2124 (+ x5151 32)) x2685) (= (x1255 x4162) x2766) (>= 18446744073709551615 x3268) (= x4857 (x3453 x2320)) (= (+ 4 x3724) x3876) (= x3724 x2783) (= x4220 (x2124 (+ x822 32))) (= x1370 x4066) (= (x959 (- x4463 x5615)) x1507) (= x1806 (x2124 (+ 32 x2065))) (= (+ 31 x5633) x1824) (= (x1540 x3876) x544) (= false x3951) (> x2382 x4225) (= (x959 (- x437 x3810)) x3724) (= x3268 (x1540 x5633)) (not (> x2022 x5338)) (<= 420 x2382) (= (x2124 (+ x437 32)) x2701) (= (x2124 (+ 32 x4987)) x4213) (>= x1507 420) (= x344 (x3756 x1294)) (= x5346 (x3860 64 x1370 5)) (= x228 (x2015 x1294)) (= x5034 (x1971 x1025)) (= x3638 (= x1535 (x848 196))) (= (+ x2411 x344) x1283) (= x5656 (- x443 x2411)) (<= x2382 57896044618658097711785492504343953926634992332820282019728792003956564819967) (not (> x4583 x2382)) (= (x2124 (+ x1025 32)) x4885) (>= 18446744073709551615 x3724) (= x2317 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2419)) (<= x3531 18446744073709551615) (= x4162 x3575) (>= x2766 x2411) (<= x3192 127) (= x4583 (+ x3531 228)) (= (ite (= 0 x1008) 10000 x1008) x5338) (= (x3453 x2320) x1535) (<= 0 x1283) (= x2065 (x2124 (+ 192 x3810))) (<= 1 x228) (= (x2124 (+ x2701 x2317)) x1761) (= x5633 (+ 4 x1520)) (= x4917 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= 0 x3774)) x2644)))
(assert (=> (<= x3160 10000) (= (x25 x3160) 0)))
(assert (x847 x1190))
(assert (= 0 (x25 97822624453686575479804928673988797637476738513438931194560248106084831592448)))
(assert (= x1973 (and x2040 x4646)))
(assert (= x3507 (and x1948 x420)))
(assert (x847 x5249))
(assert (x847 x4323))
(assert (= (x25 (x3860 64 x3281 36)) (x3860 64 x3281 36)))
(assert (x3952 x3114))
(assert (x847 x4019))
(assert (x847 x4247))
(assert (x847 x5186))
(assert (= (x2143 (x2521 x2448 x1566 x4600 x3358 x4070)) x4600))
(assert (x847 x4546))
(assert (= (x1122 (x3159 x4348 x330)) x330))
(assert (x847 x2052))
(assert (= x4357 (x2143 (x2521 x3432 x539 x4357 x5079 x4952))))
(assert (=> (>= 10000 x2573) (= (x25 x2573) 0)))
(assert (x847 x1229))
(assert (x847 x2159))
(assert (x3500 x1602))
(assert (x1411 x4203))
(assert (> (x3860 x3044 x1116 x5477) 10000))
(assert (x847 x5692))
(assert (x847 x1910))
(assert (not (x2689 (x3860 64 x4092 36))))
(assert (< 10000 (x4159 x4348 x4687 x4734 x4970)))
(assert (x847 x400))
(assert (= (and x3175 x1959) x150))
(assert (=> (<= x1475 10000) (= (x25 x1475) 0)))
(assert (not (x2689 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453))))
(assert (x847 x4416))
(assert (= x991 (x1122 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009))))
(assert (x3500 x2254))
(assert (x847 x3228))
(assert (= (x1122 (x2521 x4342 x2694 x4688 x654 x501)) x2694))
(assert (=> (<= x4297 10000) (= 0 (x25 x4297))))
(assert (x926 32 (ite (not (= x4949 0)) 1 0)))
(assert (x847 x2899))
(assert (= x5536 (x1122 (x4159 x4098 x5536 x1228 x5013))))
(assert (=> (>= 10000 x3871) (= (x25 x3871) 0)))
(assert (x847 x5557))
(assert (x847 x2288))
(assert (= (x3376 (x3860 64 x4092 36)) 64))
(assert (x379 x558 2))
(assert (x847 x3380))
(assert (x847 x1952))
(assert (= (and x4217 x3683) x5306))
(assert (=> (>= 10000 x4479) (= (x25 x4479) 0)))
(assert (=> (>= 10000 x4548) (= (x25 x4548) 0)))
(assert (x847 x1991))
(assert (x847 x3989))
(assert (= x5077 (x4693 (x3226 x4098 x1853 x3691 x5077 x2945 x4263))))
(assert (= x2460 (x3021 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122))))
(assert (=> (<= x1023 10000) (= (x25 x1023) 0)))
(assert (x847 x4126))
(assert (not (x2689 (x3159 x4342 x3073))))
(assert (x847 x521))
(assert (x847 x2610))
(assert (x379 x2512 128))
(assert (x847 x1753))
(assert (x847 x3106))
(assert (x847 x4411))
(assert (= x1305 (x1122 (x3860 64 x1305 0))))
(assert (x847 x4150))
(assert (= (and x3839 (not x4606)) x1324))
(assert (= x696 (x3376 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382))))
(assert (x847 x2922))
(assert (x847 x2635))
(assert (x926 256 x3888))
(assert (=> (<= x4604 10000) (= (x25 x4604) 0)))
(assert (=> (<= x5690 10000) (= 0 (x25 x5690))))
(assert (x847 x3353))
(assert (x847 x2286))
(assert (x847 x1110))
(assert (x847 x2058))
(assert (x847 x4511))
(assert (= (x3021 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745)) x3650))
(assert (= x464 (or (and (not x2769) x1613) x5356)))
(assert (x847 x1667))
(assert (< 10000 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122)))
(assert (x3952 x5683))
(assert (= x241 (and x1942 x87)))
(assert (x1411 x3889))
(assert (< (x3860 64 x892 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1197 10000) (= 0 (x25 x1197))))
(assert (x367 x1602))
(assert (= x4098 (x3376 (x3860 x4098 x1119 x1646))))
(assert (x847 x5032))
(assert (not (x2689 (x4159 x5203 x372 x1776 x1213))))
(assert (= (x3376 (x4159 x2448 x4715 x220 x5051)) x2448))
(assert (x847 x619))
(assert (< (x3226 x1096 x44 x490 x3499 x726 x1233) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5296))
(assert (x847 x5230))
(assert (x847 x5259))
(assert (x847 x2991))
(assert (= x1300 (x3021 (x2521 x2207 x2892 x4869 x5520 x1300))))
(assert (x847 x4988))
(assert (x847 x5542))
(assert (= x3175 (and x4661 x2322)))
(assert (x847 x5295))
(assert (x847 x5397))
(assert (x847 x1152))
(assert (= 12 (x2143 (x3860 64 x5214 12))))
(assert (= x1310 (and x3416 x1969)))
(assert (= x5120 (x2143 (x3860 x1096 x4988 x5120))))
(assert (= (x3376 (x3860 x4543 x5296 x1190)) x4543))
(assert (= (or x1829 x37) x1089))
(assert (x3952 x5319))
(assert (= (=> (= x557 (= 0 x3120)) (and (=> (and (and (>= 255 x5443) (= (< 3 x5443) x1277) (= x4232 (x3860 64 x2822 11)) (= (x1717 x4232) x5443)) x557) (and (=> (and (not x1277) (= x609 (= 2 x5443))) (and (=> (and (not x609) (and (= x3787 false) (= 4 x3169) (= true x4392))) x3832) (=> (and x609 (and (= x1990 (or (and (= (<= (- x4203 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< (- x4203 4) 160)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x4203 4)))) (= x4771 (= (x3252 518) (x1992 228))) (= (x3860 64 1 x2579) x1703) (<= 356 x3062) (= x3374 (= 64 (x1992 164))) (>= 127 x3949) (<= 356 x4203) x4771 (>= x3322 1) (= x2579 (x3860 64 x892 4)) (= (= (x3252 486) (x1992 196)) x3438) x3374 x3438 (= x5658 x4162) (= 1084734224 x2813) (= (x2124 (+ 31 x4667)) x1602) (= (x1864 128) x285) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1602) x2239) (= x4203 x3062) (= x3732 (= (x1992 260) 34)) x3732 (= x142 (x2124 (+ 32 x4054))) (= x4054 (x2124 (+ 486 x4469))) (= false x1290) (= 0 x2433) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x5504) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1924) x4469) (= x1871 (x959 (- x4054 294))) (= x1675 256) (= x3062 (x959 (- x3585 290))) (= (x3610 x1703) x4290) (= 290 x3982) (= x4667 (x1151 224)) (= (x2124 (+ x285 31)) x1924) (<= x3949 127) (= x88 0) (= x3585 (x2124 (+ x2239 x142))) (= x892 x4633) (= x3816 false) (= (x2015 x2605) x3322) (<= x892 65535) (= x3321 160))) (and (=> x1990 x3937) (=> (and (not x1990) (= true x2376)) (and (=> (not x2376) x3937) (=> (and x2376 (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4203) true) (< 195 x4203)) x817)) (and (=> (and x817 (and (= x516 (> x3723 18446744073709551615)) (= x3723 (x1127 164)))) (and (=> (and (not x516) (and (= x403 (x2124 (+ 196 x3723))) (= (< x4203 x403) x527))) (and (=> (and (and (>= x4203 356) (= (x1127 260) x5133) (= (> x5133 18446744073709551615) x1166) (<= x4203 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not x527)) (and (=> (and (and (= x2545 (< x4203 x1191)) (= x1191 (x2124 (+ 292 x5133)))) (not x1166)) (and (=> (and (and (= x4173 1) (= x5672 x3269) (= x5186 x3504) (= x4176 (x5290 160)) (= x4107 x200) (= x5608 x5489) (= false x1697) (= x737 64) (= x5682 x5580) (= x5204 x1407) (= x3645 false) (= x2798 (x5290 128)) (= x546 x4202) (= (x5290 128) x5592) (= x1600 x4039) (= x2950 x892) (= x5389 (+ x2067 1)) (= x4792 (x5290 160)) (= x5441 x3681) (= x2413 x2209) (= x1555 x5542)) (not x2545)) x3383) (=> x2545 x5645))) (=> x1166 x335))) (=> x527 x5645))) (=> x516 x335))) (=> (not x817) x3937))))))))) (=> (and x1277 (and (= 36 x3169) (= x2788 true) (= x4781 false))) x3832))) (=> (and (not x557) (and (= true x116) (= x4242 false) (= x3169 4))) x3832))) x1473))
(assert (x847 x2200))
(assert (x847 x3743))
(assert (x847 x2854))
(assert (x847 x1198))
(assert (x847 x1088))
(assert (x1411 x2203))
(assert (x847 x4692))
(assert (x2657 2))
(assert (= (x4693 (x3226 x3432 x5408 x1023 x136 x5322 x2442)) x136))
(assert (x1411 x4890))
(assert (x379 x2254 32))
(assert (< (x3226 x432 x5646 x1826 x4314 x4147 x1743) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3021 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)) x5692))
(assert (= 7 (x2143 (x3860 64 x2010 7))))
(assert (x847 x1105))
(assert (x847 x396))
(assert (= (x4693 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051)) x5083))
(assert (= (x1122 (x3860 64 x1180 (ite (= 0 x1815) x3715 (ite (<= x1815 32) x2906 (ite (<= x1815 64) x4726 (ite (>= 96 x1815) x3828 (ite (<= x1815 128) x4681 (ite (>= 160 x1815) x5439 (ite (<= x1815 192) x3429 (ite (>= 224 x1815) x719 x4228)))))))))) x1180))
(assert (= (x25 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)) (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)))
(assert (x847 x1412))
(assert (=> (<= x5074 10000) (= (x25 x5074) 0)))
(assert (x847 x2755))
(assert (= (and x2331 x3333) x1812))
(assert (x847 x1091))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396)))
(assert (not (x2689 (x3860 x3432 x4561 x644))))
(assert (not (x2689 (x3860 64 x2573 36))))
(assert (x847 x5181))
(assert (= (x4693 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653)) x1860))
(assert (= x327 (and x3762 (not x3218))))
(assert (x3500 x4527))
(assert (x847 x2771))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x4221 x4190)))
(assert (x1063 x2369))
(assert (< (x3860 64 x3454 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3119 10000) (= (x25 x3119) 0)))
(assert (x847 x1600))
(assert (< 10000 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051)))
(assert (x847 x1232))
(assert (> (x3159 x2207 x4610) 10000))
(assert (= (x3376 (x3226 x3676 x2719 x3470 x1494 x3634 x5506)) x3676))
(assert (= x4666 (and (not x3874) x4861)))
(assert (x847 x4070))
(assert (x847 x4265))
(assert (x847 x2424))
(assert (= x897 (x4693 (x2521 x148 x4490 x3005 x897 x4954))))
(assert (= x2525 (and x1817 x4513)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245)))
(assert (x847 x5200))
(assert (< 10000 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341)))
(assert (< 10000 (x3860 x5565 x2909 x1454)))
(assert (= (or x42 x4153) x2501))
(assert (< (x3860 64 x5021 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3500 x1109))
(assert (x847 x3392))
(assert (x847 x3322))
(assert (not (x2689 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392))))
(assert (=> (>= 10000 x2681) (= 0 (x25 x2681))))
(assert (= (x3376 (x3226 x2448 x2591 x4502 x308 x202 x4027)) x2448))
(assert (= (x4693 (x4159 x3432 x4959 x4429 x3224)) x3224))
(assert (= (x2521 x1815 x5008 x3496 x4524 x1291) (x25 (x2521 x1815 x5008 x3496 x4524 x1291))))
(assert (x1746 x3353 2))
(assert (< 10000 (x3860 x1815 x4175 x1856)))
(assert (= 64 (x3376 (x3860 64 x1305 0))))
(assert (= x5515 (x4693 (x3226 x3044 x1209 x4938 x5515 x3235 x4481))))
(assert (x847 x3727))
(assert (x847 x5063))
(assert (x847 x2450))
(assert (x847 x4790))
(assert (= (x3021 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396)) x4892))
(assert (x847 x4629))
(assert (x847 x3677))
(assert (x847 x3107))
(assert (x847 x1775))
(assert (=> (<= x829 10000) (= 0 (x25 x829))))
(assert (= 0 (x25 13123866003235860548192500634644069355060014211693331341089165407210616913920)))
(assert (= (x2143 (x3226 x4342 x833 x1763 x4924 x2004 x2713)) x1763))
(assert (x847 x3861))
(assert (x847 x3235))
(assert (x847 x148))
(assert (= (x25 (x2521 x4221 x995 x4928 x1070 x2187)) (x2521 x4221 x995 x4928 x1070 x2187)))
(assert (x847 x3777))
(assert (x847 x4107))
(assert (x2689 1914215))
(assert (= 10 (x2143 (x3860 64 x4843 10))))
(assert (=> (<= x4415 10000) (= (x25 x4415) 0)))
(assert (x847 x1640))
(assert (= (x3860 64 x1370 4) (x25 (x3860 64 x1370 4))))
(assert (x3513 (ite (not (= 0 x2503)) 1 0)))
(assert (= x5007 (and (not x2088) x3760)))
(assert (x847 x1553))
(assert (x1411 x3574))
(assert (= (x3376 (x2521 x3044 x3970 x518 x1635 x4479)) x3044))
(assert (x847 x2744))
(assert (x847 x513))
(assert (x847 x4903))
(assert (> (x3860 64 x5411 10) 10000))
(assert (x847 x4339))
(assert (= (x1122 (x3226 x5565 x406 x603 x3458 x5690 x2631)) x406))
(assert (x847 x2812))
(assert (= 64 (x3376 (x3860 64 x1245 11))))
(assert (x847 x1050))
(assert (x847 x2348))
(assert (x847 x1805))
(assert (x379 x4862 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= x1198 (x1122 (x4159 x696 x1198 x1113 x1529))))
(assert (= x701 (=> (= x2471 x2785) x121)))
(assert (x847 x5659))
(assert (x847 x4627))
(assert (= x1339 (and x4990 x609)))
(assert (= x947 (x1122 (x3860 64 x947 2))))
(assert (x847 x3073))
(assert (x847 x4638))
(assert (x3513 x5165))
(assert (not (x2689 (x4159 x4348 x4687 x4734 x4970))))
(assert (x847 x3528))
(assert (= x829 (x3573 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898))))
(assert (= (or (and (not x4042) x2384) (and (not x1171) x4783) (and x5360 (not x4212)) (and x2436 (not x692)) x3426) x3091))
(assert (< 10000 (x3860 64 x4162 1)))
(assert (x2657 x558))
(assert (x1746 x5489 2))
(assert (x847 x4722))
(assert (=> (<= x4272 10000) (= (x25 x4272) 0)))
(assert (= x1302 (and x3847 x4304)))
(assert (= x3535 (and x4040 (not x446))))
(assert (=> (<= x3978 10000) (= 0 (x25 x3978))))
(assert (=> (>= 10000 x1453) (= 0 (x25 x1453))))
(assert (x847 x4486))
(assert (> (x3860 64 x4145 2) 10000))
(assert (< (x3860 64 x892 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x5503 (+ x282 x2932)) (not (> x1249 x720)) (= x1615 (x2124 (+ 32 x3845))) (>= x1643 1) (= x2326 false) (= (x2015 x546) x2046) (= (+ x1656 31) x4421) (= (x2124 (+ x214 32)) x3845) x2156 (<= 420 x992) (= x2435 (x4682 196)) (= 192 x4694) (not (> x4740 x3893)) (= (x2124 (+ x3410 32)) x2547) (= (x2124 (+ x989 32)) x2291) (= (x809 x3410) x4570) (= (x1636 x4162) x5325) (= x992 (x959 (- x1149 x2609))) (>= x3636 x282) (<= 1 x2046) (= x2069 (x959 (- x4835 x2905))) (= x2932 (x2697 x546)) (= (+ x4532 31) x4887) (= x2156 (= (x595 196) x3950)) (= x214 (x2124 (+ 32 x2291))) (= x1212 (x3860 64 x892 5)) (= x549 (x2484 x4496)) (= (x2124 (+ 4 x2609)) x2905) (= (x2124 (+ x2080 x211)) x4835) (not (> x1603 x720)) (= (x1636 x546) x5581) (= x1424 (+ x5458 x4532 32)) (>= 127 x4515) (> x720 x4421) (= (- x5325 x282) x4067) (<= x2435 18446744073709551615) (>= 18446744073709551615 x4531) (= x4376 (+ x3512 1)) (>= x3304 1) (= (+ 228 x2435) x1603) (= x1149 (x2124 (+ x4836 x2845))) (= x199 (x2124 (+ x4496 32))) (< x4887 x720) (= x2845 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5094)) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2912) x1519) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x282 x2932)) (= x1249 (+ x4531 x1656 32)) (= x3950 (x4962 x1551)) (= x5094 (x2124 (+ 31 x4570))) (>= 18446744073709551615 x2069) (= x2912 (x2124 (+ 31 x549))) (= x5672 x513) (= (x959 (- x918 x2905)) x2056) (= x3893 (ite (= x3033 0) 10000 x3033)) (= x2080 (x2124 (+ 32 x411))) (= x2197 x1555) (<= x2056 18446744073709551615) (= (x2015 x2605) x3304) (= x892 x4874) (= (x2124 (+ 192 x2905)) x411) (= (x2124 (+ 32 x918)) x4836) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x720) (<= x5458 18446744073709551615) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5581 x282)) (= x1834 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= x3261 (x2124 (+ 31 x3950))) (= x752 x5489) (= x5503 x207) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3261) x211) (= (x2124 (+ x2905 32)) x989) (= x992 x720) (= x5458 (x4682 x4532)) (= x3522 0) (= (x2124 (+ 32 x4835)) x1784) (= x4740 (x2484 x4496)) (= (x2124 (+ x1519 x1784)) x918) (= x3636 (x1636 x4162)) (>= 127 x4515) (= x1392 x2056) (= x2069 x3254) (= x3565 3313512704) (= x1451 false) (= x1397 x5441) (= (+ 4 x2056) x1656) (<= 0 x5503) (= (x2559 x1212) x3033) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x992) (= x5204 x3506) (>= x720 420) (= x4532 (+ 4 x2069)) (= (x4682 x1656) x4531) (not (< x720 x1424)) (= x5580 x3697) (= x4162 x1344) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5503) (= (x4962 x1551) x1643)) x5467) x1486))
(assert (x847 x5210))
(assert (x847 x1291))
(assert (= x1911 (and x274 x2863)))
(assert (= (x25 x754) (x25 (+ x754 1))))
(assert (x847 x1108))
(assert (x847 x1289))
(assert (not (x2689 (x4535 0))))
(assert (= (x1122 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045)) x2563))
(assert (< (x2521 x4348 x3176 x5171 x4615 x2830) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x2681 6)))
(assert (x1411 x545))
(assert (= (x3573 (x3226 x148 x2796 x422 x4121 x1523 x2759)) x2759))
(assert (x847 x60))
(assert (x847 x3023))
(assert (x847 x3237))
(assert (x847 x3843))
(assert (= x2081 (x4693 (x2521 x1315 x438 x1999 x2081 x2159))))
(assert (x847 x242))
(assert (x847 x1140))
(assert (x847 x1183))
(assert (x847 x4885))
(assert (x847 x2142))
(assert (x847 x2357))
(assert (= x4144 (and x1469 (not x753))))
(assert (x1746 (+ x2762 31) 32))
(assert (> (x3860 x432 x850 x685) 10000))
(assert (x847 x4188))
(assert (x847 x363))
(assert (= (=> (and (= (not (> x2145 32)) x3706) (= (x442 x2084) x5412)) (and (=> (= x1506 32) x3569) x3706)) x3449))
(assert (x3952 x503))
(assert (x847 x1254))
(assert (< 10000 (x3860 64 x5564 36)))
(assert (x847 x4712))
(assert (x847 x5607))
(assert (x3500 x1312))
(assert (= x3546 (x3021 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39))))
(assert (x367 x13))
(assert (=> (<= x3550 10000) (= (x25 x3550) 0)))
(assert (not (x2689 (x3159 x4098 x76))))
(assert (= (x2143 (x2521 x1315 x438 x1999 x2081 x2159)) x1999))
(assert (=> (>= 10000 x1305) (= (x25 x1305) 0)))
(assert (< 10000 (x3860 64 1 x2579)))
(assert (= (x3021 (x2521 x4348 x3176 x5171 x4615 x2830)) x2830))
(assert (= (x25 (x4159 x3044 x1475 x5086 x5164)) (x4159 x3044 x1475 x5086 x5164)))
(assert (x1411 x1906))
(assert (x847 x3881))
(assert (= (x3376 (x3159 x4348 x330)) x4348))
(assert (x847 x5321))
(assert (x3513 x5461))
(assert (x847 x1258))
(assert (x847 x3511))
(assert (x847 x4173))
(assert (x847 x2317))
(assert (< (x4159 x1893 x2039 x5409 x5649) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3376 (x2521 x4342 x2694 x4688 x654 x501)) x4342))
(assert (=> (<= x4543 10000) (= (x25 x4543) 0)))
(assert (=> (<= x3382 10000) (= 0 (x25 x3382))))
(assert (x847 x5362))
(assert (= (x1122 (x3159 x1315 x369)) x369))
(assert (x847 x3247))
(assert (x847 x4251))
(assert (not (x2689 (x3159 x5565 x4597))))
(assert (x847 x870))
(assert (=> (<= x4869 10000) (= 0 (x25 x4869))))
(assert (x847 x1033))
(assert (= (or x4146 x4777) x3233))
(assert (x847 x1752))
(assert (x847 x4938))
(assert (< (x2521 x1893 x1440 x535 x1449 x4345) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1122 (x3159 x5203 x4995)) x4995))
(assert (=> (<= x1867 10000) (= (x25 x1867) 0)))
(assert (= (x3573 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)) x715))
(assert (x847 x4336))
(assert (= (x3376 (x3860 64 x1370 5)) 64))
(assert (not (x2689 (x4159 x3432 x4959 x4429 x3224))))
(assert (x847 x1607))
(assert (= (x3376 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)) x1096))
(assert (x1063 x174))
(assert (x379 x300 32))
(assert (x847 x2327))
(assert (x847 x4357))
(assert (= (and x1324 (not x2033)) x2832))
(assert (< 10000 (x3226 x2207 x3010 x1273 x2454 x3720 x4050)))
(assert (x847 x3615))
(assert (= x2236 (and (not x4344) x4907)))
(assert (x847 x3327))
(assert (x847 x1614))
(assert (= (x2143 (x2521 x3044 x3970 x518 x1635 x4479)) x518))
(assert (= x3516 (x2143 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745))))
(assert (x847 x3096))
(assert (x847 x1976))
(assert (x926 1000000000 x3712))
(assert (x2689 4294967295))
(assert (x847 x3479))
(assert (x847 x2080))
(assert (x847 x890))
(assert (=> (<= x2427 10000) (= 0 (x25 x2427))))
(assert (= (x3860 64 x5021 100) (x25 (x3860 64 x5021 100))))
(assert (x847 x5094))
(assert (x847 x4273))
(assert (not (x2689 (x3159 x1903 x552))))
(assert (= (x3376 (x3860 64 x1328 10)) 64))
(assert (=> (>= 10000 x2094) (= (x25 x2094) 0)))
(assert (x847 x1344))
(assert (x847 x4991))
(assert (x847 x1782))
(assert (= (x3376 (x3860 64 x2822 11)) 64))
(assert (< (x3860 64 x3215 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1562 (and x1477 (not x5440))))
(assert (x847 x4456))
(assert (= (x1122 (x3860 64 x865 10)) x865))
(assert (< 10000 (x3860 64 x2010 7)))
(assert (= x1560 (and x2983 x271)))
(assert (x847 x1762))
(assert (not (x2689 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207))))
(assert (< 10000 (x3860 x3432 x4561 x644)))
(assert (x926 256 x471))
(assert (=> (<= x654 10000) (= 0 (x25 x654))))
(assert (= x4561 (x1122 (x3860 x3432 x4561 x644))))
(assert (x847 x827))
(assert (< 10000 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898)))
(assert (= (=> (and (or (and x1296 (and (= x3347 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= (+ 196 x2477) x4750) (= 160 x1015) (= x2740 false) (= x588 x892) (<= x4495 127) (= x4285 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2988)) (= x2372 (x2013 322)) (= (x2124 (+ 31 x2139)) x1101) (>= 127 x4495) (= (x2124 (+ x363 32)) x5259) x2895 x3875 (= x3759 (x2013 290)) (not (< x235 x2820)) (= (x2124 (+ 31 x4166)) x2988) (= 256 x678) (= x5184 (x2385 160)) (= x282 x3759) (not (> x4750 x235)) x1536 (= (x2385 128) x5474) (= x3498 1084734224) (= (x1126 164) x2477) (= false x1336) x5340 (>= x2725 1) (= (+ 292 x1230) x2820) (>= 18446744073709551615 x1230) (= x3682 (x2124 (+ x5259 x4285))) (>= 18446744073709551615 x2477) (= x2971 false) (= x2139 (x2857 128)) (= 0 x2553) (= x336 (x959 (- x363 294))) (= x2895 (= (x1820 228) (x602 518))) (= x1536 (= (x1820 164) 64)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2612) (= 290 x2432) (= (= (x1820 260) 34) x5340) (= x3875 (= (x602 486) (x1820 196))) (<= 356 x235) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x235) (= x363 (x2124 (+ 486 x2215))) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1101) x2215) (= (x1126 260) x1230) (= (x2015 x2605) x2725) (>= x2612 356) (= (x2385 160) x3422) (= x4496 354) (= (x2385 128) x4562) (= x4897 x4162) (= x2612 x235) (= x4166 (x3287 224)) (= x1058 false) (= 0 x5253) (= x2612 (x959 (- x3682 290))))) (and (not x1296) (and (= x3687 x282) (= x4496 128)))) (= x1296 (= 0 x3687))) x652) x2001))
(assert (x2657 (+ x4566 31)))
(assert (x847 x3278))
(assert (= (x3376 (x3860 x5203 x3210 x3340)) x5203))
(assert (=> (<= x1138 10000) (= 0 (x25 x1138))))
(assert (= x5134 (or x1319 x56 x5103)))
(assert (x847 x1515))
(assert (x847 x2851))
(assert (=> (>= 10000 x1209) (= 0 (x25 x1209))))
(assert (x847 x5461))
(assert (= (x2143 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653)) x2926))
(assert (= x3334 (=> (and (= (not (< 32 x4949)) x254) (= x1489 (x4553 x2074))) (and (=> (= 32 x1018) x3657) x254))))
(assert (=> (<= x2247 10000) (= (x25 x2247) 0)))
(assert (x847 x1138))
(assert (= 0 (x25 65535)))
(assert (x847 x3982))
(assert (= x970 (=> (and (= x4296 (x2310 x4318)) (= x2017 (x2124 (+ x1134 32))) (= x4324 (x959 (- x2249 x4709))) (= x2733 (x2124 (+ x791 x4156))) (= x673 (x2124 (+ x4156 31))) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x673) x581) (= (x2124 (+ x581 x791)) x2249) (= (< 0 x4296) x1171)) (and (=> (and x1171 (= x4212 (> x4296 32))) (and (=> (and (= x692 (> x4296 64)) x4212) (and (=> (not x692) x2654) (=> (and (= x4042 (> x4296 96)) x692) (and (=> x4042 x4558) (=> (not x4042) x2654))))) (=> (not x4212) x2654))) (=> (not x1171) x2654)))))
(assert (x847 x5423))
(assert (x847 x5669))
(assert (= x2269 (or x399 x2313)))
(assert (x847 x4268))
(assert (x847 x620))
(assert (x847 x4348))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (x3376 (x3860 x696 x1128 x5666)) x696))
(assert (= (and x3827 x1438) x2451))
(assert (= (and x2093 x3307) x5263))
(assert (not x4396))
(assert (x847 x1954))
(assert (x847 x4127))
(assert (x847 x1598))
(assert (= (x2143 (x3860 64 1 x5382)) x5382))
(assert (not (x2689 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326))))
(assert (x847 x1790))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639902) 0))
(assert (=> (>= 10000 x523) (= 0 (x25 x523))))
(assert (= x5531 x2861))
(assert (x379 x3601 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x302))
(assert (x847 x661))
(assert (x847 x5663))
(assert (x847 x3503))
(assert (=> (>= 10000 x1815) (= 0 (x25 x1815))))
(assert (x847 x2175))
(assert (x847 x1070))
(assert (x847 x3139))
(assert (= 64 (x3376 (x3860 64 x2332 11))))
(assert (= (x3376 (x2521 x4098 x1938 x750 x5028 x1626)) x4098))
(assert (x847 x3922))
(assert (x1063 x69))
(assert (x1746 x5548 2))
(assert (= (and x569 x1268) x269))
(assert (x847 x1601))
(assert (x1411 x4458))
(assert (x847 x4792))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x847 x2209))
(assert (x847 x5115))
(assert (x847 x3904))
(assert (=> (>= 10000 x1073) (= 0 (x25 x1073))))
(assert (= (or x4155 x3415) x3105))
(assert (= 64 (x3376 (x3860 64 x4482 100))))
(assert (= (x3860 64 x4133 36) (x25 (x3860 64 x4133 36))))
(assert (=> (>= 10000 x3215) (= (x25 x3215) 0)))
(assert (x847 x2685))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x4092 2)))
(assert (= (x3573 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341)) x5153))
(assert (x847 x2804))
(assert (x379 x1957 128))
(assert (x847 x4710))
(assert (not (x2689 (x4159 x2448 x4715 x220 x5051))))
(assert (x847 x3038))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x5411 10)))
(assert (< (x3860 x4221 x4297 x3978) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3860 x4543 x5296 x1190) (x25 (x3860 x4543 x5296 x1190))))
(assert (=> (<= x1903 10000) (= (x25 x1903) 0)))
(assert (x847 x3299))
(assert (< 10000 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396)))
(assert (= (x2143 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)) x1943))
(assert (= (or x1210 x1280 x4440 x3517 x3216) x4889))
(assert (= (x25 (x3860 64 x1495 36)) (x3860 64 x1495 36)))
(assert (> (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160) 10000))
(assert (x847 x1236))
(assert (= x4616 (not (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1467 x3703)) (= x5179 (x3519 x3481)) (= x1467 (x2342 x4846)) (= x4282 x3047) (= (+ x4909 1) x204) (= x4909 (+ 1 x365)) (= x4282 (+ x1467 x4350)) (= x4723 (x3860 64 x4909 36)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4282) (= x4692 (x2342 x4723)) (= (x163 x1499) x3703) (>= x4092 1) (<= x4092 252) (= x3904 (x163 x4268)) (= x365 (+ 1 x4092)) (= x4350 (x1855 x1499)) (<= x1467 x808) (= x2601 (+ 1 x365)) (= x3481 (x3860 64 x365 100)) (= x4454 (+ 1 x4092)) (= x808 (x163 x4268)) (<= 0 x4282) (= x2178 (+ 1 x4909)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4350 x1467)) (= (- x3904 x1467) x1664) (= x4846 (x3860 64 x4092 36))))))
(assert (x847 x164))
(assert (x847 x1523))
(assert (x847 x1453))
(assert (x847 x5294))
(assert (= (or x751 x2622) x3170))
(assert (x847 x1907))
(assert (x847 x4502))
(assert (x847 x3010))
(assert (x847 x3119))
(assert (= x1903 (x3376 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207))))
(assert (x2689 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (x847 x498))
(assert (x847 x5238))
(assert (x1411 x2382))
(assert (= (x25 (+ 1 x5078)) (x25 x5078)))
(assert (= x5307 (and x3356 (not x1320))))
(assert (x847 x217))
(assert (x847 x1809))
(assert (x847 x1972))
(assert (= (x25 (x3860 x148 x5527 x2105)) (x3860 x148 x5527 x2105)))
(assert (x847 x2171))
(assert (x847 x3688))
(assert (x847 x1666))
(assert (x847 x2345))
(assert (= (x3376 (x3159 x4543 x2716)) x4543))
(assert (x847 x4694))
(assert (not (x2689 (x3860 64 x5553 7))))
(assert (x847 x162))
(assert (x847 x650))
(assert (= (x25 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242)) (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242)))
(assert (x847 x3848))
(assert (x847 x3501))
(assert (=> (<= x4946 10000) (= (x25 x4946) 0)))
(assert (x926 32 x4315))
(assert (= (x2715 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453)) x206))
(assert (= (x3376 (x3860 64 x1818 10)) 64))
(assert (x847 x4942))
(assert (x1411 x1515))
(assert (x847 x2046))
(assert (x847 x2051))
(assert (x847 x3571))
(assert (=> (>= 10000 x4228) (= 0 (x25 x4228))))
(assert (= x4368 (and x1282 x215)))
(assert (= (x1122 (x3860 64 x2010 7)) x2010))
(assert (= x1781 (=> (and (= x5660 (not (> x4319 128))) (= (x2124 (+ x2908 96)) x5304) (= (x2693 x5304) x5681) (= x789 (x2124 (+ 96 x5330)))) (and x5660 x2155))))
(assert (x847 x3268))
(assert (x847 x3656))
(assert (x847 x2708))
(assert (x367 x1312))
(assert (x847 x289))
(assert (= (x4693 (x4159 x5203 x372 x1776 x1213)) x1213))
(assert (x847 x3072))
(assert (= x2217 (or x1335 x5688)))
(assert (= (x1122 (x3860 64 x4006 6)) x4006))
(assert (= (x1122 (x3860 64 x4556 (ite (= 0 x4543) x225 (ite (>= 32 x4543) x421 (ite (>= 64 x4543) x1624 (ite (<= x4543 96) x3640 (ite (<= x4543 128) x4028 (ite (>= 160 x4543) x120 (ite (>= 192 x4543) x782 (ite (>= 224 x4543) x115 x5087)))))))))) x4556))
(assert (= (x2143 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009)) x951))
(assert (x847 x1557))
(assert (x847 x807))
(assert (x1679 x3413))
(assert (x379 x392 32))
(assert (x847 x3993))
(assert (x847 x4749))
(assert (not (x2689 (x4159 x1893 x2039 x5409 x5649))))
(assert (= (x1122 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898)) x4652))
(assert (= (x25 x343) (x25 (+ 1 x343))))
(assert (x847 x956))
(assert (= x3686 (and x1983 (not x4113))))
(assert (=> (>= 10000 x3667) (= (x25 x3667) 0)))
(assert (= (x25 x5476) (x25 (+ x5476 2))))
(assert (= x2207 (x3376 (x4159 x2207 x4683 x3234 x5685))))
(assert (=> (<= x5059 10000) (= (x25 x5059) 0)))
(assert (x847 x4556))
(assert (x847 x3004))
(assert (x847 x1912))
(assert (x847 x736))
(assert (> (x4159 x3432 x4959 x4429 x3224) 10000))
(assert (= x5511 (x2143 (x3226 x4543 x2021 x5511 x530 x1828 x5030))))
(assert (= (x3860 x1315 x26 x1030) (x25 (x3860 x1315 x26 x1030))))
(assert (= x864 (x1122 (x3226 x1903 x864 x3293 x4149 x2049 x4474))))
(assert (x1456 x5489))
(assert (= (x3860 64 x892 3) (x25 (x3860 64 x892 3))))
(assert (x847 x4550))
(assert (=> (>= 10000 x129) (= (x25 x129) 0)))
(assert (= (and x3175 (not x1959)) x702))
(assert (= (and (not x4064) x3391) x5262))
(assert (= 64 (x3376 (x3860 64 x1180 (ite (= x1815 0) x3715 (ite (>= 32 x1815) x2906 (ite (>= 64 x1815) x4726 (ite (<= x1815 96) x3828 (ite (<= x1815 128) x4681 (ite (>= 160 x1815) x5439 (ite (<= x1815 192) x3429 (ite (<= x1815 224) x719 x4228))))))))))))
(assert (x379 x293 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x3226 x1903 x864 x3293 x4149 x2049 x4474)))
(assert (x847 x4413))
(assert (= x1721 (and x1268 (not x569))))
(assert (x3952 x1957))
(assert (= (x25 (x3860 64 x988 36)) (x3860 64 x988 36)))
(assert (= (x1122 (x3159 x432 x3550)) x3550))
(assert (=> (>= 10000 x3512) (= (x25 x3512) 0)))
(assert (= x3161 (x1122 (x3860 64 x3161 11))))
(assert (not (x2689 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051))))
(assert (x847 x2866))
(assert (x847 x292))
(assert (x847 x3942))
(assert (x367 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (< (x3860 64 x1180 (ite (= x1815 0) x3715 (ite (>= 32 x1815) x2906 (ite (<= x1815 64) x4726 (ite (<= x1815 96) x3828 (ite (<= x1815 128) x4681 (ite (>= 160 x1815) x5439 (ite (>= 192 x1815) x3429 (ite (>= 224 x1815) x719 x4228))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3513 x2052))
(assert (= x4342 (x3376 (x3226 x4342 x833 x1763 x4924 x2004 x2713))))
(assert (not (x2689 (x3860 x1315 x26 x1030))))
(assert (x1411 x235))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x5553 3)))
(assert (= (and x2269 (not x1755)) x2690))
(assert (= (=> (= x2482 (= 0 x4052)) (and (=> (and (= x2276 (< x845 64)) (not x2482)) (and (=> (and (not x2276) (and (= x2870 (x3860 64 x1370 3)) (= x2487 (x2781 x1654)) (= x1016 450) (= x3480 (x4727 x2261 2)) (= x5595 (x210 1 x2261)) (= x2136 0) (= x3985 (x959 (- x5595 (mod (ite (> 32 x2762) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x4431 (x2660 x925)) (= x2741 354) (= x4677 (> x3985 0)) (= x4011 (x2557 322)) (= (x2865 x2870) x2261) (= x1064 (x3860 64 x1245 11)) (= (ite (< 0 x5595) x3480 (x210 127 x3480)) x2762) (= (x3860 64 x1245 11) x5472) (= x3180 (x2557 290)) (= x1654 (+ x5472 1)) (= (+ 2 x197) x925) (= x197 (x3860 64 x1245 11)))) (and (=> (and (and (= x1865 true) (= x3861 36) (= false x28)) (not x4677)) x3065) (=> (and (and (= x3853 (+ x5300 548)) (= x5300 (* x305 32)) (= (x4727 (+ x2762 31) 32) x305) (= x4606 (= x2762 0))) x4677) (and (=> (and (not x4606) (= (< 31 x2762) x2033)) (and (=> (and (not x2033) (and (= (x4727 x3066 256) x714) (= (* x714 256) x2812) (= x3066 (x2865 x2870)))) x1031) (=> (and x2033 (and (= (> x1528 580) x3669) (= (x3342 x3502) x3964) (= (x3159 32 x2870) x3502) (= x3520 (+ x3502 1)) (= x1528 (+ 548 x2762)))) (and (=> x3669 x5195) (=> (not x3669) x3086))))) (=> x4606 x1031))))) (=> (and (and (= true x672) (= false x1341) (= 0 x3861)) x2276) x3065))) (=> (and x2482 (and (= x3861 x845) (= true x647) (= false x1051))) x3065))) x4891))
(assert (= (x25 (x3860 64 x4145 2)) (x3860 64 x4145 2)))
(assert (= (x25 (x3860 64 x892 5)) (x3860 64 x892 5)))
(assert (= x5174 (x3021 (x2521 x5203 x2164 x3862 x4636 x5174))))
(assert (x847 x4836))
(assert (x379 x2988 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3100))
(assert (x847 x1118))
(assert (x3952 x3931))
(assert (x847 x2049))
(assert (x847 x1488))
(assert (= x3583 (x1122 (x4159 x148 x3583 x2036 x834))))
(assert (x847 x3403))
(assert (= (x25 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453)) (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453)))
(assert (x847 x4923))
(assert (= (x3376 (x3860 64 x5258 36)) 64))
(assert (x847 x3885))
(assert (= (x3021 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)) x2000))
(assert (x847 x656))
(assert (x847 x451))
(assert (x847 x1267))
(assert (x847 x1602))
(assert (=> (>= 10000 x5354) (= (x25 x5354) 0)))
(assert (= (x25 (x3226 x4348 x3986 x2119 x1343 x1984 x2200)) (x3226 x4348 x3986 x2119 x1343 x1984 x2200)))
(assert (= x2599 (x2715 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599))))
(assert (x847 x4499))
(assert (= (or x1175 x1161) x3840))
(assert (x847 x2911))
(assert (= (x1122 (x3159 x1893 x2588)) x2588))
(assert (= x3788 x2898))
(assert (x847 x2238))
(assert (=> (>= 10000 x5008) (= 0 (x25 x5008))))
(assert (x847 x4286))
(assert (= (x3860 64 x5564 36) (x25 (x3860 64 x5564 36))))
(assert (x847 x3064))
(assert (= (x1122 (x3226 x2448 x2591 x4502 x308 x202 x4027)) x2591))
(assert (= (x1122 (x3860 64 x1370 3)) x1370))
(assert (x847 x2752))
(assert (= (and x1563 x2989) x2749))
(assert (x847 x5088))
(assert (x847 x3931))
(assert (x847 x1340))
(assert (x847 x1576))
(assert (x847 x1294))
(assert (x847 x2767))
(assert (x847 x5617))
(assert (x847 x5244))
(assert (= (x1122 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)) x2340))
(assert (= (x2143 (x3860 x1315 x26 x1030)) x1030))
(assert (< 10000 (x3159 32 104)))
(assert (= x664 (x1122 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218))))
(assert (x847 x4628))
(assert (x3952 x2261))
(assert (=> (>= 10000 x603) (= (x25 x603) 0)))
(assert (x367 x5501))
(assert (x847 x3210))
(assert (x367 x5548))
(assert (=> (>= 10000 x1337) (= 0 (x25 x1337))))
(assert (x3513 x3888))
(assert (= x3637 (and (not x4842) x4806)))
(assert (= (=> (and (= (x2124 (+ x4058 32)) x732) (= (x2124 (+ x5255 x3864)) x2228) (= (x959 (- x732 x3864)) x1815) (= (x2124 (+ x3864 x5255)) x4058) (= (x959 (- x1815 32)) x4342) (= x4541 (>= 224 x4342))) (and x4541 (=> (and (= x2815 (x2524 x5185)) (= x1185 (x2124 (+ x3864 32))) (= x3803 (x2124 (+ x3864 32))) (= x2807 (x3860 x4342 x3072 x1838)) (= (x2124 (+ x3864 160)) x2680) (= x2237 (x2521 x4342 x2694 x4688 x654 x501)) (= x2144 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245)) (= x2004 (x2524 x1182)) (= (x2524 x2726) x2592) (= (x2524 x1238) x501) (= x730 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523)) (= (x2524 x1014) x4245) (= x2204 (x2524 x5616)) (= (x2124 (+ 64 x3864)) x1466) (= x5353 (x2524 x1465)) (= x2789 (x2524 x1185)) (= (x2124 (+ 64 x3864)) x89) (= (x2524 x3803) x542) (= (x2524 x89) x654) (= (x4535 0) x1588) (= x2694 (x2524 x3864)) (= x523 (x2524 x784)) (= x2029 (x2524 x4413)) (= x5359 (ite (= 0 x4342) x1588 (ite (<= x4342 32) x2497 (ite (>= 64 x4342) x2807 (ite (<= x4342 96) x1071 (ite (>= 128 x4342) x2237 (ite (<= x4342 160) x3420 (ite (<= x4342 192) x730 (ite (<= x4342 224) x2144 x2012))))))))) (= x784 (x2124 (+ x3864 160))) (= x1197 (x2524 x3864)) (= x4858 (x2524 x4160)) (= x2713 (x2524 x3385)) (= (x2524 x2680) x1712) (= x5185 (x2124 (+ x3864 128))) (= (x4159 x4342 x5687 x2789 x2303) x1071) (= x833 (x2524 x3864)) (= x3073 (x2524 x3864)) (= (x2124 (+ 32 x3864)) x534) (= (x2124 (+ 96 x3864)) x1238) (= (x2124 (+ 32 x3864)) x1688) (= (x2524 x1688) x1763) (= (x2524 x534) x1838) (= x1014 (x2124 (+ x3864 192))) (= x4924 (x2524 x1706)) (= (x2524 x2296) x4688) (= x5132 (x2124 (+ x3864 128))) (= (x2524 x5132) x3879) (= x1182 (x2124 (+ x3864 96))) (= x1706 (x2124 (+ 64 x3864))) (= x2899 (x2524 x3864)) (= x1465 (x2124 (+ x3864 96))) (= x2296 (x2124 (+ x3864 32))) (= (x3226 x4342 x833 x1763 x4924 x2004 x2713) x3420) (= x2303 (x2524 x1466)) (= x4413 (x2124 (+ 64 x3864))) (= (x2124 (+ 96 x3864)) x4160) (= (x2524 x3864) x3072) (= x5616 (x2124 (+ 64 x3864))) (= x5687 (x2524 x3864)) (= (x3159 x4342 x3073) x2497) (= (x2124 (+ 128 x3864)) x3385) (= x415 (>= 224 x1815)) (= (x2124 (+ x3864 32)) x2726)) (and (=> (and (= x641 (x2124 (+ 32 x3864))) (= x3914 (x2524 x3864)) (= (x2524 x3864) x4175) (= x3299 (x2124 (+ x3864 32))) (= (x2524 x2889) x1943) (= (x3860 x1815 x4175 x1856) x4726) (= (x2124 (+ x3864 96)) x3935) (= (x2524 x4764) x1985) (= (x3159 x1815 x3914) x2906) (= x4695 (x2124 (+ x3864 160))) (= x2661 (x2124 (+ x3864 64))) (= (x2124 (+ x3864 64)) x3800) (= (x2524 x409) x312) (= (x2521 x1815 x5008 x3496 x4524 x1291) x4681) (= (x2124 (+ x3864 32)) x2889) (= x1010 (x2524 x2728)) (= (x2524 x2661) x3294) (= x4534 (x2524 x1247)) (= (x2524 x3299) x5041) (= (x2124 (+ x3864 32)) x179) (= (x2124 (+ x3864 160)) x4404) (= (x4535 0) x3715) (= x5008 (x2524 x3864)) (= (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175) x719) (= (x2124 (+ 128 x3864)) x2728) (= x4375 (x2124 (+ 192 x3864))) (= (x2524 x4471) x1978) (= x5117 (x2124 (+ 96 x3864))) (= x1291 (x2524 x449)) (= x409 (x2124 (+ x3864 128))) (= x4524 (x2524 x1949)) (= x4277 (x2124 (+ 32 x4404))) (= (x2124 (+ x3864 160)) x5205) (= x5439 (x3226 x1815 x4992 x4534 x3294 x3404 x312)) (= x3429 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)) (= (x2124 (+ 32 x3864)) x5552) (= x4471 (x2124 (+ x3864 64))) (= x1287 (x2524 x3834)) (= (x4159 x1815 x3424 x5041 x1337) x3828) (= x2981 (< 0 x4193)) (= x1949 (x2124 (+ 64 x3864))) (= x1247 (x2124 (+ 32 x3864))) (= x4992 (x2524 x3864)) (= (x3860 64 x1180 (ite (= 0 x1815) x3715 (ite (<= x1815 32) x2906 (ite (>= 64 x1815) x4726 (ite (<= x1815 96) x3828 (ite (<= x1815 128) x4681 (ite (>= 160 x1815) x5439 (ite (>= 192 x1815) x3429 (ite (>= 224 x1815) x719 x4228))))))))) x2802) (= (x2124 (+ x3864 64)) x3834) (= x3871 (x2524 x4695)) (= x4002 (x2524 x5117)) (= x4764 (x2124 (+ 128 x3864))) (= (x2524 x641) x1080) (= (x2124 (+ 32 x3864)) x1094) (= (x2524 x5205) x4706) (= (x2524 x1377) x5593) (= x4193 (x4267 x2059)) (= (x2524 x3864) x3424) (= x1337 (x2524 x3800)) (= (x2124 (+ 96 x3864)) x449) (= x3496 (x2524 x179)) (= (x2524 x4375) x175) (= x3404 (x2524 x3935)) (= x1377 (x2124 (+ 96 x3864))) (= x1856 (x2524 x1094)) (= x2340 (x2524 x3864)) (= (x2524 x3864) x3663)) (and (=> (and x2981 (and (= x5440 (< 32 x4193)) (= (x2423 x48) x4137))) (and (=> (not x5440) x4648) (=> (and x5440 (and (= (x2124 (+ x48 32)) x467) (= x753 (> x4193 64)) (= (x3977 x467) x2854) (= x3880 (x2124 (+ 32 x4277))))) (and (=> (not x753) x4648) (=> (and (and (= x4826 (x2124 (+ x48 64))) (= (x2772 x4826) x3341) (= x208 (x2124 (+ x4277 64))) (= (< 96 x4193) x1376)) x753) (and (=> (not x1376) x4648) (=> x1376 x1565))))))) (=> (not x2981) x4648))) x415)))) x4497))
(assert (> (x4159 x2207 x4683 x3234 x5685) 10000))
(assert (x847 x1893))
(assert (= (x1122 (x3860 64 x3512 36)) x3512))
(assert (= (x2143 (x3860 64 x3512 36)) 36))
(assert (= (x1122 (x3860 x4342 x3072 x1838)) x3072))
(assert (= x1280 (and x1067 x3614)))
(assert (> (x3159 x1815 x3914) 10000))
(assert (= 64 (x3376 (x3860 64 x3512 36))))
(assert (x847 x4402))
(assert (= x3694 x1929))
(assert (= (x3573 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805)) x1972))
(assert (=> (<= x4992 10000) (= (x25 x4992) 0)))
(assert (= (x3860 64 1 x2579) (x25 (x3860 64 1 x2579))))
(assert (= x2819 (and x4081 (not x2890))))
(assert (=> (<= x1080 10000) (= (x25 x1080) 0)))
(assert (=> (>= 10000 x1566) (= (x25 x1566) 0)))
(assert (x847 x4505))
(assert (x847 x1824))
(assert (= (x1122 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)) x1239))
(assert (x847 x4068))
(assert (= (x2143 (x3860 64 1 x1414)) x1414))
(assert (not (x2689 (x4159 x4221 x2768 x1986 x3430))))
(assert (x847 x4871))
(assert (x847 x5013))
(assert (x847 x3545))
(assert (x847 x4536))
(assert (x847 x4467))
(assert (x847 x3066))
(assert (x847 x3964))
(assert (x847 x668))
(assert (x847 x3835))
(assert (= (x3573 (x3226 x4348 x3986 x2119 x1343 x1984 x2200)) x2200))
(assert (< 10000 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)))
(assert (=> (<= x4879 10000) (= (x25 x4879) 0)))
(assert (= x1719 (x1122 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262))))
(assert (= (x3573 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)) x2101))
(assert (x3500 x2988))
(assert (=> (>= 10000 x2029) (= (x25 x2029) 0)))
(assert (= (x4985 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432)) x1432))
(assert (x847 x4562))
(assert (x847 x4924))
(assert (< 10000 (x3860 64 1 x2672)))
(assert (= 0 (x25 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x696 (x3376 (x3226 x696 x3109 x5052 x5209 x5111 x1775))))
(assert (x847 x295))
(assert (x847 x4031))
(assert (x847 x314))
(assert (= x4183 (and (not x4691) x1137)))
(assert (=> (<= x1712 10000) (= 0 (x25 x1712))))
(assert (= x5171 (x2143 (x2521 x4348 x3176 x5171 x4615 x2830))))
(assert (= (x25 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635)) (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635)))
(assert (x847 x3294))
(assert (> (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104) 10000))
(assert (x847 x119))
(assert (= x1760 (or x835 x4766)))
(assert (x847 x5364))
(assert (= x3378 x5113))
(assert (x847 x4828))
(assert (x847 x199))
(assert (=> (>= 10000 x2592) (= (x25 x2592) 0)))
(assert (= (and x4981 x212) x3011))
(assert (x847 x36))
(assert (= x4912 (and x5339 x2514)))
(assert (> (x3860 64 x4843 10) 10000))
(assert (x847 x4425))
(assert (not (x2689 (x3159 32 104))))
(assert (x847 x4621))
(assert (= x2745 (x2715 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745))))
(assert (x847 x3975))
(assert (= (x4693 (x3226 x1815 x4992 x4534 x3294 x3404 x312)) x3294))
(assert (x1679 x2261))
(assert (= (and x4217 (not x3683)) x1599))
(assert (= x3482 (and x703 (not x4164))))
(assert (x2689 3672334990))
(assert (=> (>= 10000 x2339) (= (x25 x2339) 0)))
(assert (x847 x3428))
(assert (x847 x4718))
(assert (= (x25 (x2521 x5203 x2164 x3862 x4636 x5174)) (x2521 x5203 x2164 x3862 x4636 x5174)))
(assert (x847 x4300))
(assert (x847 x4056))
(assert (x847 x874))
(assert (=> (<= x3999 10000) (= (x25 x3999) 0)))
(assert (x3952 x169))
(assert (= (x3860 x1096 x4988 x5120) (x25 (x3860 x1096 x4988 x5120))))
(assert (= x2624 (and x5358 x2138)))
(assert (< 10000 (x3159 x148 x4555)))
(assert (= x1912 (x2715 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589))))
(assert (x847 x1010))
(assert (= (x3021 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)) x5231))
(assert (x847 x3661))
(assert (= x4348 (x3376 (x2521 x4348 x3176 x5171 x4615 x2830))))
(assert (= (x25 36180046632115354981904271164172418022085455641023445553456023893925156618240) 0))
(assert (x379 x5094 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x3159 x5565 x4597) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2148))
(assert (x847 x5171))
(assert (not (x2689 (x3860 64 1 x2672))))
(assert (= (x25 x968) (x25 (+ x968 2))))
(assert (x847 x3422))
(assert (= x3176 (x1122 (x2521 x4348 x3176 x5171 x4615 x2830))))
(assert (x847 x550))
(assert (= (x2143 (x3860 x1903 x2638 x3701)) x3701))
(assert (= x148 (x3376 (x3860 x148 x5527 x2105))))
(assert (x847 x3361))
(assert (x2689 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (not (x2689 (x3159 x4348 x330))))
(assert (x847 x1188))
(assert (x847 x4570))
(assert (=> (<= x1994 10000) (= (x25 x1994) 0)))
(assert (x847 x635))
(assert (= (x4693 (x2521 x3676 x3103 x2103 x548 x4548)) x548))
(assert (=> (>= 10000 x1119) (= (x25 x1119) 0)))
(assert (= (or (and x2514 (not x5339)) (and (not x1002) x4313) (and x806 (not x2379))) x1498))
(assert (x847 x4566))
(assert (x847 x1534))
(assert (= (x3376 (x3860 x2448 x3647 x4327)) x2448))
(assert (= x4320 x1437))
(assert (x847 x365))
(assert (x847 x3367))
(assert (x847 x1104))
(assert (= x707 (or x5644 x1129 (and x3960 x4361) x2165 (and x3731 x805) x2604 x3757)))
(assert (x1411 x1891))
(assert (=> (>= 10000 x547) (= 0 (x25 x547))))
(assert (=> (>= 10000 x1504) (= (x25 x1504) 0)))
(assert (x847 x5466))
(assert (x847 x2149))
(assert (=> (>= 10000 x546) (= 0 (x25 x546))))
(assert (x847 x5027))
(assert (x847 x1401))
(assert (= (x2143 (x3860 64 x84 (ite (= 0 x3676) x4378 (ite (<= x3676 32) x1353 (ite (<= x3676 64) x447 (ite (<= x3676 96) x5056 (ite (>= 128 x3676) x4778 (ite (<= x3676 160) x6 (ite (>= 192 x3676) x5336 (ite (<= x3676 224) x1072 x586)))))))))) (ite (= 0 x3676) x4378 (ite (>= 32 x3676) x1353 (ite (<= x3676 64) x447 (ite (>= 96 x3676) x5056 (ite (<= x3676 128) x4778 (ite (<= x3676 160) x6 (ite (<= x3676 192) x5336 (ite (>= 224 x3676) x1072 x586))))))))))
(assert (x847 x4262))
(assert (x847 x2131))
(assert (= x1226 (x3573 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848))))
(assert (x847 x577))
(assert (x847 x5132))
(assert (x847 x4051))
(assert (x847 x735))
(assert (x847 x3496))
(assert (< (x3159 x1893 x2588) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1279))
(assert (x847 x675))
(assert (= (x2143 (x3860 64 x547 6)) 6))
(assert (=> (>= 10000 x4636) (= (x25 x4636) 0)))
(assert (x847 x1550))
(assert (= x4098 (x3376 (x3226 x4098 x1853 x3691 x5077 x2945 x4263))))
(assert (< 10000 (x3860 x4342 x3072 x1838)))
(assert (= x1342 (and (not x4661) x2322)))
(assert (= x4155 (and x1089 x4714)))
(assert (not (x2689 (x3860 x1893 x2972 x3027))))
(assert (x847 x1313))
(assert (=> (<= x1412 10000) (= 0 (x25 x1412))))
(assert (= x3635 (x4985 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635))))
(assert (x847 x3035))
(assert (=> (<= x2171 10000) (= (x25 x2171) 0)))
(assert (x847 x112))
(assert (x847 x1730))
(assert (= (x2143 (x3226 x5565 x406 x603 x3458 x5690 x2631)) x603))
(assert (= (x1122 (x3860 x1815 x4175 x1856)) x4175))
(assert (x847 x3682))
(assert (=> (<= x4534 10000) (= (x25 x4534) 0)))
(assert (=> (>= 10000 x897) (= 0 (x25 x897))))
(assert (x3952 x2512))
(assert (x847 x1240))
(assert (x847 x2119))
(assert (x847 x4913))
(assert (= (and (not x5528) x2151) x4498))
(assert (= x5570 (x2143 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657))))
(assert (x847 x869))
(assert (= x1181 (and x2793 x2115)))
(assert (= x1626 (x3021 (x2521 x4098 x1938 x750 x5028 x1626))))
(assert (= (and (not x1892) x4744) x1995))
(assert (x847 x1656))
(assert (x847 x5009))
(assert (x847 x3819))
(assert (= (x3860 x4098 x1119 x1646) (x25 (x3860 x4098 x1119 x1646))))
(assert (= (and x2302 (not x3090)) x3494))
(assert (x847 x4509))
(assert (= (x1122 (x3159 x3432 x2682)) x2682))
(assert (x847 x4237))
(assert (x847 x1119))
(assert (x1411 x4590))
(assert (x847 x3239))
(assert (x847 x3687))
(assert (= (=> (and (= x455 x3468) (= x5351 x1596) (= x5452 x2150) (= x468 x3130) (= x520 x5419) (= x3116 x3460)) x2834) x4061))
(assert (= (x25 (+ 1 x2792)) (x25 x2792)))
(assert (x847 x1004))
(assert (= (and x5274 (not x765)) x4504))
(assert (x3952 x1086))
(assert (x847 x1454))
(assert (=> (<= x406 10000) (= 0 (x25 x406))))
(assert (not (x2689 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978))))
(assert (x847 x5226))
(assert (x847 x179))
(assert (= (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755) (x25 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755))))
(assert (x847 x3321))
(assert (x926 1000000000 x5441))
(assert (= (x1122 (x2521 x432 x4749 x1511 x5607 x2357)) x4749))
(assert (x847 x2573))
(assert (x847 x759))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x2862 36)))
(assert (< 10000 (x3860 64 x3281 36)))
(assert (< (x3860 64 x4162 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3230 (and (not x2482) x3747)))
(assert (=> (>= 10000 x4715) (= 0 (x25 x4715))))
(assert (= (x3376 (x3159 x432 x3550)) x432))
(assert (x847 x4869))
(assert (=> (>= 10000 x5570) (= (x25 x5570) 0)))
(assert (x847 x2984))
(assert (x847 x1467))
(assert (= x4852 (and x3721 (not x5064))))
(assert (= x250 (=> (and (and (>= 65535 x892) (= x4642 (x3860 64 1 x5382)) (= x5382 (x3860 64 x892 4)) (= (x3860 64 x2332 11) x2463) (= x270 (= 0 x4630)) (= (x2537 x2463) x3400) (= (x3610 x4642) x870) (= x3400 2)) (or (and (not x270) (and (not (< x4630 x870)) (= x4630 x2447))) (and x270 (= x870 x2447)))) x2001)))
(assert (x847 x5508))
(assert (= 0 (x25 115792089237316195423570985008687907853269984665640564039457584007913129639838)))
(assert (< 10000 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653)))
(assert (x3952 x1602))
(assert (x847 x3695))
(assert (=> (>= 10000 x3193) (= (x25 x3193) 0)))
(assert (x847 x2558))
(assert (x847 x936))
(assert (x847 x4428))
(assert (= (x3021 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218)) x4261))
(assert (x847 x5582))
(assert (x847 x2291))
(assert (= (x3226 x5203 x5129 x1802 x5468 x3611 x249) (x25 (x3226 x5203 x5129 x1802 x5468 x3611 x249))))
(assert (x847 x1841))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x5236 12)))
(assert (x847 x3338))
(assert (=> (<= x4858 10000) (= (x25 x4858) 0)))
(assert (x847 x4149))
(assert (x847 x3008))
(assert (x847 x3199))
(assert (= (x3376 (x3226 x1315 x4816 x3421 x3153 x5081 x965)) x1315))
(assert (= x892 (x1122 (x3860 64 x892 3))))
(assert (x847 x1906))
(assert (x847 x4644))
(assert (= (x3021 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635)) x2339))
(assert (= (=> (= (< 0 (ite (= x3649 0) x3649 1)) x4998) (and (=> (and (and (or x4691 (not x4691)) (= x4691 (= 0 x4125))) (not x4998)) x3788) (=> x4998 x2898))) x2214))
(assert (x847 x3262))
(assert (x847 x4162))
(assert (x847 x43))
(assert (= (and x2093 (not x3307)) x1297))
(assert (x847 x1211))
(assert (x847 x2919))
(assert (=> (<= x3239 10000) (= 0 (x25 x3239))))
(assert (= x3843 (x4693 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432))))
(assert (x847 x2761))
(assert (< (x4159 x4348 x4687 x4734 x4970) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3376 (x3860 64 x3161 11)) 64))
(assert (x847 x1740))
(assert (< 10000 (x3860 64 x4556 (ite (= 0 x3044) x5220 (ite (>= 32 x3044) x5076 (ite (>= 64 x3044) x193 (ite (>= 96 x3044) x3617 (ite (<= x3044 128) x4772 (ite (>= 160 x3044) x3485 (ite (<= x3044 192) x5676 (ite (>= 224 x3044) x5399 x3739)))))))))))
(assert (x847 x2228))
(assert (=> (>= 10000 x4816) (= 0 (x25 x4816))))
(assert (x3952 x853))
(assert (=> (>= 10000 x5041) (= 0 (x25 x5041))))
(assert (x847 x4012))
(assert (x847 x3358))
(assert (= 0 (x25 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x5507 (x2143 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396))))
(assert (= x2307 (and (not x4015) x2236)))
(assert (= (x3573 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242)) x4068))
(assert (=> (>= 10000 x5672) (= 0 (x25 x5672))))
(assert (x367 x4712))
(assert (= (x2143 (x3860 64 x2822 11)) 11))
(assert (= (x1122 (x3860 64 x2332 11)) x2332))
(assert (= x3768 (x3021 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599))))
(assert (x847 x1348))
(assert (x847 x4688))
(assert (x847 x1541))
(assert (x847 x744))
(assert (x847 x682))
(assert (x847 x3187))
(assert (x847 x1343))
(assert (< (x3860 64 x2822 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1306 (and x2670 x4738)))
(assert (= (x25 3812630263) 0))
(assert (= 36 (x2143 (x3860 64 x3281 36))))
(assert (= (x2521 x432 x4749 x1511 x5607 x2357) (x25 (x2521 x432 x4749 x1511 x5607 x2357))))
(assert (x847 x493))
(assert (< 10000 (x3860 x1315 x26 x1030)))
(assert (x847 x3249))
(assert (x847 x4477))
(assert (not (x2689 (x3860 64 x4133 36))))
(assert (x847 x3225))
(assert (x847 x2069))
(assert (x3952 x97))
(assert (x847 x4949))
(assert (x1411 x634))
(assert (x847 x1591))
(assert (=> (<= x5214 10000) (= 0 (x25 x5214))))
(assert (= x3634 (x3021 (x3226 x3676 x2719 x3470 x1494 x3634 x5506))))
(assert (= x3713 (x1122 (x3159 32 x3713))))
(assert (= x4524 (x4693 (x2521 x1815 x5008 x3496 x4524 x1291))))
(assert (x847 x2170))
(assert (= x1893 (x3376 (x4159 x1893 x2039 x5409 x5649))))
(assert (x847 x4241))
(assert (= (x2715 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)) x1830))
(assert (not (x2689 (x3159 x2448 x620))))
(assert (x1679 x558))
(assert (x1411 x5291))
(assert (=> (<= x5129 10000) (= 0 (x25 x5129))))
(assert (x847 x1830))
(assert (=> (<= x1999 10000) (= 0 (x25 x1999))))
(assert (x847 x5174))
(assert (x2657 (+ 31 x239)))
(assert (< 10000 (x3226 x3044 x1209 x4938 x5515 x3235 x4481)))
(assert (=> (<= x3156 10000) (= (x25 x3156) 0)))
(assert (x847 x1013))
(assert (=> (<= x4145 10000) (= (x25 x4145) 0)))
(assert (= (x3021 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898)) x489))
(assert (= (=> (and (= x993 (+ 1 x2067)) (= x1541 2) (= x162 x1555) (= x5204 x1105) (= x4790 x2413) (= x997 x1600) (= 0 x3551) (= x5441 x4140) (= x3504 x2116) (= x5672 x999) (= x200 x1331) (= x546 x4925) (= x1619 x5580) (= x3169 x1189) (= x2509 x5489) (= x2426 (+ 1 x2067)) (= x3100 x892)) x600) x3832))
(assert (x847 x152))
(assert (= x5033 (and x913 x768)))
(assert (=> (>= 10000 x4929) (= 0 (x25 x4929))))
(assert (= (=> (and (= x1600 x2279) (= x546 x4127) (= x3504 x3038) (= x1801 x2197) (= x1482 x513) (= x3506 x842) (= x538 x752) (= x892 x882) (= x1349 x3697) (= x1397 x909) (= x4746 x4376) (= x2413 x3630) (= x3232 x200)) x2570) x5467))
(assert (= (and (not x3124) x368) x3760))
(assert (= x2681 (x1122 (x3860 64 x2681 6))))
(assert (x847 x2183))
(assert (= x1608 (=> (and (= (= x1383 0) x1637) (or (and (and (= x1910 x267) (= x1521 x4773) (= x4255 x2994) (= x3903 x1762) (= x258 x1383) (= x2058 x1419) (= x3019 x3357) (= x4456 x4923) (= x2142 x638) (= x4188 x2070) (= x3384 x1415) (= x4123 x323) (= x749 x3988) (= x5313 x5061)) (not x1637)) (and x1637 (and (= x749 x3988) (= x1415 x3384) (= x572 (+ x1257 x4568)) (= x638 x2142) (= x1419 x2058) (= x4923 x4456) (= x4123 x323) (< (+ x1257 x4568) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3357 x3019) (= x832 x572) (= x3515 (- x5488 x1257)) (= x5313 x5061) (>= x572 0) (= (x4742 x4202) x5488) (= x1910 x267) (= x1257 (ite (= x1383 0) x4629 0)) (= x4568 (x509 x4162)) (= x1383 x258) (= x1762 x3903) (= x2994 x4255) (= x2070 x4188) (= x4773 x1521) (<= x572 115792089237316195423570985008687907853269984665640564039457584007913129639935))))) x2790)))
(assert (x847 x3999))
(assert (x847 x3171))
(assert (= x1231 (and x1989 x4518)))
(assert (= x4349 (and x2923 x5134)))
(assert (x847 x3963))
(assert (x847 x1440))
(assert (x847 x3555))
(assert (= x1566 (x1122 (x2521 x2448 x1566 x4600 x3358 x4070))))
(assert (x847 x3712))
(assert (x847 x664))
(assert (x847 x1057))
(assert (x379 x503 32))
(assert (= (and x5262 (not x2191)) x614))
(assert (< 10000 (x2521 x4543 x4410 x1883 x2314 x1866)))
(assert (x847 x2930))
(assert (x847 x3462))
(assert (= (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218) (x25 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218))))
(assert (= x3216 (and x2749 (not x5005))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x4162 1)))
(assert (> (x4159 x1315 x2398 x4416 x4434) 10000))
(assert (x847 x2101))
(assert (x3513 x4549))
(assert (x847 x1559))
(assert (x847 x2260))
(assert (x847 x4299))
(assert (not (x2689 (x3860 64 x4482 100))))
(assert (= (and (not x4361) x3960) x12))
(assert (=> (<= x1912 10000) (= 0 (x25 x1912))))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (x847 x552))
(assert (x847 x3785))
(assert (= x130 (and x3747 x2482)))
(assert (= (and x583 x5315) x244))
(assert (x847 x3432))
(assert (= (x4693 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)) x3188))
(assert (< (x3860 64 x1245 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2689 (x4159 x3676 x3428 x1108 x5491))))
(assert (x847 x3234))
(assert (= x696 (x3376 (x3159 x696 x2714))))
(assert (> (x3159 x3432 x2682) 10000))
(assert (x847 x2125))
(assert (= (x1122 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745)) x5667))
(assert (x847 x1326))
(assert (x847 x2986))
(assert (= 64 (x3376 (x3860 64 x4092 6))))
(assert (x1679 x5548))
(assert (= (x3376 (x3860 x1096 x4988 x5120)) x1096))
(assert (= x666 (and x4889 x5493)))
(assert (x847 x4095))
(assert (x847 x4321))
(assert (= x2480 (and x2316 x733)))
(assert (x847 x172))
(assert (x847 x4469))
(assert (= (=> (and (= x3360 (not (< 32 x3886))) (= (x4844 x1533) x2734)) (and x3360 (=> (= x359 32) x554))) x4733))
(assert (=> (>= 10000 x4638) (= (x25 x4638) 0)))
(assert (x847 x2477))
(assert (< (x3226 x3676 x2719 x3470 x1494 x3634 x5506) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1328))
(assert (x847 x1334))
(assert (= x4331 x1933))
(assert (x847 x3621))
(assert (x847 x737))
(assert (= x4954 (x3021 (x2521 x148 x4490 x3005 x897 x4954))))
(assert (not (x2689 (x3860 64 x365 100))))
(assert (x847 x1428))
(assert (= (or x3233 x4489) x1282))
(assert (x379 x448 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326)))
(assert (= x2242 (x2715 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242))))
(assert (x847 x4928))
(assert (= x554 (=> (= x5244 (+ x359 292)) x2901)))
(assert (= (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045) (x25 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045))))
(assert (x847 x1426))
(assert (= (=> (and (= (<= x3432 224) x3476) (= x3432 (x815 128))) (and (=> (and (= x859 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341)) (= (x815 160) x1582) (= x4959 (x815 160)) (= x4429 (x815 192)) (= (x815 224) x136) (= (x815 192) x1023) (= x5322 (x815 256)) (= x2358 (x815 160)) (= (x815 224) x5079) (= (x3860 x3432 x4561 x644) x2879) (= x4952 (x815 256)) (= x5130 (x815 192)) (= (x815 192) x644) (= (x3159 x3432 x2682) x1890) (= x3224 (x815 224)) (= (x4535 0) x2336) (= x4029 (>= 224 x1893)) (= (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179) x3217) (= x5095 (x2521 x3432 x539 x4357 x5079 x4952)) (= x5408 (x815 160)) (= x2442 (x815 288)) (= (x815 160) x2682) (= x2267 (x2124 (+ x1557 x1893))) (= (x815 256) x1530) (= x328 (x815 288)) (= (ite (= 0 x3432) x2336 (ite (>= 32 x3432) x1890 (ite (>= 64 x3432) x2879 (ite (>= 96 x3432) x2478 (ite (>= 128 x3432) x5095 (ite (>= 160 x3432) x2936 (ite (>= 192 x3432) x3217 (ite (>= 224 x3432) x859 x3548)))))))) x2182) (= x5341 (x815 352)) (= (x815 160) x4561) (= x4879 (x815 192)) (= (x815 224) x2795) (= (x815 256) x2247) (= x2478 (x4159 x3432 x4959 x4429 x3224)) (= x2936 (x3226 x3432 x5408 x1023 x136 x5322 x2442)) (= (x815 320) x111) (= (x815 320) x4179) (= (x815 192) x4357) (= (x815 224) x2308) (= (x815 160) x539) (= x5153 (x815 288))) (and (=> (and (= (x3524 x1557) x2039) (= x291 (x2124 (+ x1557 64))) (= x1725 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848)) (= x535 (x3524 x3942)) (= (x4159 x1893 x2039 x5409 x5649) x1729) (= (x3524 x966) x3848) (= (x3524 x112) x2000) (= x5409 (x3524 x3755)) (= x4722 (x3524 x3539)) (= x966 (x2124 (+ x1557 192))) (= x2186 (x2124 (+ x1557 64))) (= x5066 (x3524 x1557)) (= x803 (x3524 x2293)) (= x302 (x2124 (+ 128 x1557))) (= x112 (x2124 (+ 96 x1557))) (= (x2124 (+ 128 x1557)) x4057) (= x3489 (x3524 x1905)) (= (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392) x234) (= x5649 (x3524 x1146)) (= x5516 (x3524 x1557)) (= x2392 (x3524 x4559)) (= x3755 (x2124 (+ 32 x1557))) (= (x3524 x291) x2245) (= (x2124 (+ 32 x1557)) x1905) (= x5463 (x4535 0)) (= (x2124 (+ 96 x1557)) x3539) (= (ite (= x1893 0) x5463 (ite (>= 32 x1893) x1179 (ite (>= 64 x1893) x1135 (ite (<= x1893 96) x1729 (ite (<= x1893 128) x2141 (ite (<= x1893 160) x5329 (ite (<= x1893 192) x234 (ite (<= x1893 224) x1725 x2211)))))))) x3830) (= x1083 (x2124 (+ 128 x1557))) (= x3924 (x2124 (+ 96 x1557))) (= x3397 (x2124 (+ x1557 64))) (= (x3226 x1893 x5516 x803 x152 x2107 x5455) x5329) (= x1135 (x3860 x1893 x2972 x3027)) (= x4559 (x2124 (+ x1557 160))) (= x3942 (x2124 (+ 32 x1557))) (= (x3524 x1779) x2107) (= (x3524 x1557) x2972) (= (x2124 (+ x1557 32)) x2293) (= (x3524 x3528) x4272) (= x5327 (x2124 (+ 64 x1557))) (= (x2521 x1893 x1440 x535 x1449 x4345) x2141) (= (x3524 x3924) x4345) (= x1179 (x3159 x1893 x2588)) (= (x3524 x3397) x152) (= x1440 (x3524 x1557)) (= x5455 (x3524 x302)) (= x2588 (x3524 x1557)) (= x2182 x3830) (= x3528 (x2124 (+ 32 x1557))) (= (x3524 x2186) x935) (= x3027 (x3524 x4126)) (= x1194 (x3524 x4057)) (= x1779 (x2124 (+ x1557 96))) (= (x2124 (+ 64 x1557)) x1146) (= (x2124 (+ x1557 160)) x1585) (= (x3524 x5327) x1449) (= (x3524 x1585) x2427) (= x1226 (x3524 x1083)) (= x5059 (x3524 x1557)) (= x4126 (x2124 (+ x1557 32)))) x4177) x4029)) x3476)) x5173))
(assert (x379 x5286 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4997 (or x1831 x3091)))
(assert (= (and x38 (not x5140)) x3416))
(assert (x847 x1506))
(assert (not (x2689 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396))))
(assert (= (=> (and (= x5068 (x2124 (+ 96 x2699))) (= x2712 (not (< 128 x4339))) (= x2917 (x3202 x5088)) (= x5088 (x2124 (+ x4019 96)))) (and x2712 x5169)) x10))
(assert (x1411 x2499))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x1815 x4175 x1856)))
(assert (x3952 x558))
(assert (x847 x3451))
(assert (x1746 x2261 2))
(assert (x847 x3421))
(assert (=> (<= x5455 10000) (= 0 (x25 x5455))))
(assert (< 10000 (x3860 64 x865 10)))
(assert (= (and x3905 x4622) x223))
(assert (= (x1122 (x3860 64 x2573 36)) x2573))
(assert (= x930 (or x5424 x3204)))
(assert (= (x3021 (x2521 x696 x4699 x2887 x2595 x4903)) x4903))
(assert (x3952 x1924))
(assert (x847 x1424))
(assert (= (x2521 x4098 x1938 x750 x5028 x1626) (x25 (x2521 x4098 x1938 x750 x5028 x1626))))
(assert (x1679 x3601))
(assert (x847 x2097))
(assert (x847 x2352))
(assert (x847 x3703))
(assert (x847 x3646))
(assert (x847 x2848))
(assert (x847 x1143))
(assert (x847 x3385))
(assert (not (x2689 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871))))
(assert (= 4 (x2143 (x3860 64 x892 4))))
(assert (x367 x1101))
(assert (not (x2689 (x3860 64 x2366 12))))
(assert (x847 x3036))
(assert (= (x4693 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218)) x5675))
(assert (= (and (not x4077) x770) x4430))
(assert (x847 x5474))
(assert (x847 x4365))
(assert (x2657 (+ x1893 31)))
(assert (x847 x4711))
(assert (= 64 (x3376 (x3860 64 x5564 36))))
(assert (= x798 (and (not x275) x614)))
(assert (= x2835 (x3021 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978))))
(assert (=> (<= x1978 10000) (= 0 (x25 x1978))))
(assert (= 64 (x3376 (x3860 64 x5236 12))))
(assert (x847 x2004))
(assert (x3952 x4243))
(assert (x847 x1460))
(assert (x847 x1144))
(assert (x379 x1101 32))
(assert (x847 x543))
(assert (= (x3376 (x3860 64 x3618 12)) 64))
(assert (= x4348 (x3376 (x4159 x4348 x4687 x4734 x4970))))
(assert (= x1062 (and x12 x1168)))
(assert (= (and x3124 x368) x939))
(assert (= (x1122 (x3226 x4098 x1853 x3691 x5077 x2945 x4263)) x1853))
(assert (= x3542 (x3021 (x3226 x4221 x4999 x562 x2941 x3542 x3661))))
(assert (x847 x4834))
(assert (x847 x2699))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262)))
(assert (x847 x5185))
(assert (x379 x5204 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x801))
(assert (= (and x5262 x2191) x3330))
(assert (=> (<= x369 10000) (= 0 (x25 x369))))
(assert (x847 x3152))
(assert (= (x25 21250608054068894920771655176311299370521669075471658173068242729727453822976) 0))
(assert (=> (<= x5675 10000) (= (x25 x5675) 0)))
(assert (= x5096 (and x933 (not x4920))))
(assert (x847 x5059))
(assert (= (x3573 (x3226 x1893 x5516 x803 x152 x2107 x5455)) x5455))
(assert (= x2901 (=> (and (= x86 (x959 (- x810 (mod (ite (< x5665 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1996 (x210 1 x558)) (= x4546 (+ x5244 32)) (= (- x5244 132) x1598) (= (= x1996 0) x2748) (= x5665 (ite (< 0 x810) x3931 (x210 127 x3931))) (or (= x86 1) (= x86 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x810 (x210 1 x558)) (= (x4727 x558 2) x3931)) (and (=> (and (and (= (+ x3101 x4546) x2169) (= x3101 (* 32 (ite (not (= x5665 0)) 1 0))) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x558) x4807) (or (= x3101 32) (= 0 x3101))) x2748) x2528) (=> (and (and (= (x3159 32 104) x4253) (= (< 0 x5665) x3077)) (not x2748)) (and (=> (and (not x3077) (= 0 x1987)) x5044) (=> x3077 x1196)))))))
(assert (= x1152 (x3021 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666))))
(assert (< (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2499))
(assert (x847 x2637))
(assert (= x3937 x5645))
(assert (x847 x2169))
(assert (= (or x659 x4960 x2700 x566 x130 x262 x5036 x3735 x1593 x1434) x2284))
(assert (= x5258 (x1122 (x3860 64 x5258 36))))
(assert (= x1859 (x1122 (x3860 x3676 x1859 x4266))))
(assert (x367 x5489))
(assert (x847 x5435))
(assert (x847 x233))
(assert (= 6 (x2143 (x3860 64 x4006 6))))
(assert (= x922 (=> (and (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2968) (= x2968 1)) (= x2082 (x210 1 x5489)) (= x2968 (x959 (- x1682 (mod (ite (> 32 x5020) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x5102 (+ 32 x3074)) (= (x210 1 x5489) x1682) (= x1755 (= x2082 0)) (= x2287 (- x3074 132)) (= x97 (x4727 x5489 2)) (= (ite (> x1682 0) x97 (x210 127 x97)) x5020)) (and (=> (and (and (= (x3159 32 104) x529) (= (< 0 x5020) x4065)) (not x1755)) (and (=> x4065 x745) (=> (and (not x4065) (= 0 x183)) x3744))) (=> (and (and (= (* 32 (ite (not (= x5020 0)) 1 0)) x1327) (= x893 (+ x5102 x1327)) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5489) x2023) (or (= 0 x1327) (= 32 x1327))) x1755) x1354)))))
(assert (= (or x2904 x2490) x2585))
(assert (x847 x940))
(assert (=> (>= 10000 x1070) (= (x25 x1070) 0)))
(assert (x847 x726))
(assert (x847 x325))
(assert (x847 x208))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x3044 x1209 x4938 x5515 x3235 x4481)))
(assert (= (x3376 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)) x4221))
(assert (x847 x4927))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)))
(assert (x3513 (ite (not (= 0 x4618)) 1 0)))
(assert (= x4678 (or x5505 (and x903 (not x676)))))
(assert (x847 x504))
(assert (x3513 x3712))
(assert (x1411 x5271))
(assert (x847 x5083))
(assert (x847 x1862))
(assert (< (x2521 x3044 x3970 x518 x1635 x4479) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1203 (=> (= (+ x5573 292) x967) x796)))
(assert (= (x2715 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)) x3761))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848)))
(assert (x847 x291))
(assert (=> (>= 10000 x4482) (= 0 (x25 x4482))))
(assert (x847 x4690))
(assert (= x4472 (or x375 x1176)))
(assert (= (x3376 (x3226 x1815 x4992 x4534 x3294 x3404 x312)) x1815))
(assert (=> (<= x4580 10000) (= 0 (x25 x4580))))
(assert (x847 x836))
(assert (x847 x4059))
(assert (x379 x5683 32))
(assert (x847 x1115))
(assert (x847 x1177))
(assert (= (x1122 (x3860 64 x365 100)) x365))
(assert (=> (>= 10000 x202) (= (x25 x202) 0)))
(assert (=> (<= x1030 10000) (= (x25 x1030) 0)))
(assert (> (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432) 10000))
(assert (x847 x3246))
(assert (= (x4693 (x2521 x5203 x2164 x3862 x4636 x5174)) x4636))
(assert (x2689 34591783479076665122502074927488338969190252781858077677016911635275368785765))
(assert (x847 x3620))
(assert (= (x3021 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)) x4624))
(assert (x847 x4687))
(assert (= x2656 (and (not x1274) x4498)))
(assert (x847 x750))
(assert (= (and x4355 (not x854)) x4760))
(assert (= (x4693 (x3226 x1903 x864 x3293 x4149 x2049 x4474)) x4149))
(assert (= (x3573 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218)) x3695))
(assert (x847 x1490))
(assert (x847 x303))
(assert (x847 x416))
(assert (= x2703 (=> (and (= (not (> x3260 32)) x1974) (= (x4844 x2350) x4110)) (and x1974 (=> (= 32 x1683) x2018)))))
(assert (x847 x81))
(assert (x847 x5491))
(assert (=> (>= 10000 x3291) (= (x25 x3291) 0)))
(assert (x847 x4896))
(assert (= x1233 (x3573 (x3226 x1096 x44 x490 x3499 x726 x1233))))
(assert (x847 x3467))
(assert (=> (<= x76 10000) (= 0 (x25 x76))))
(assert (= (x3376 (x3860 64 x4580 7)) 64))
(assert (< (x3860 x148 x5527 x2105) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1626 10000) (= 0 (x25 x1626))))
(assert (x847 x4633))
(assert (x847 x2905))
(assert (< (x3159 x3044 x1504) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3376 (x3159 x1903 x552)) x1903))
(assert (< 10000 (x4159 x4221 x2768 x1986 x3430)))
(assert (x847 x5560))
(assert (=> (>= 10000 x735) (= 0 (x25 x735))))
(assert (x847 x5248))
(assert (=> (<= x3892 10000) (= 0 (x25 x3892))))
(assert (x847 x5133))
(assert (= (x2143 (x3860 64 x4092 2)) 2))
(assert (x847 x1757))
(assert (x3513 x3381))
(assert (= (=> (and (= (x2124 (+ x2908 96)) x1258) (= x2128 (not (< 128 x4156))) (= x5016 (x2124 (+ 96 x791))) (= x5355 (x260 x1258))) (and x970 x2128)) x3387))
(assert (< (x3860 64 x2573 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3856))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x2366 12)))
(assert (not (x2689 (x2521 x1903 x1952 x4756 x5354 x5260))))
(assert (=> (<= x2454 10000) (= 0 (x25 x2454))))
(assert (= x1475 (x1122 (x4159 x3044 x1475 x5086 x5164))))
(assert (x847 x4110))
(assert (= x4648 (=> (and (= (x2124 (+ 32 x3344)) x2381) (= x3344 (x2124 (+ 32 x5552))) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x13) x3178) (= (x959 (- x1657 x3864)) x153) (= x4339 (x3112 x1518)) (= x778 (> x4339 0)) (= x13 (x2124 (+ x4193 31))) (= (x2124 (+ x4277 x3178)) x1657) (= x2699 (x2124 (+ 32 x1657))) (= x1404 (x2124 (+ x4277 x4193)))) (and (=> (not x778) x5169) (=> (and x778 (and (= x1244 (x2457 x4019)) (= x3984 (> x4339 32)))) (and (=> (not x3984) x5169) (=> (and x3984 (and (= x3212 (x5429 x3191)) (= (x2124 (+ 32 x4019)) x3191) (= x2498 (x2124 (+ x2699 32))) (= (> x4339 64) x4164))) (and (=> (not x4164) x5169) (=> (and (and (= (< 96 x4339) x5358) (= x3704 (x2124 (+ x4019 64))) (= (x2124 (+ x2699 64)) x2844) (= x1276 (x2633 x3704))) x4164) (and (=> x5358 x10) (=> (not x5358) x5169)))))))))))
(assert (x847 x1518))
(assert (x847 x4016))
(assert (x847 x5468))
(assert (x847 x741))
(assert (= (and x2379 x806) x1747))
(assert (x847 x1113))
(assert (< 10000 (x3860 64 x5021 100)))
(assert (=> (<= x2892 10000) (= 0 (x25 x2892))))
(assert (= (x2143 (x3860 64 x865 10)) 10))
(assert (x847 x4333))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4159 x3676 x3428 x1108 x5491)))
(assert (not (x2689 (x3860 64 x892 4))))
(assert (x847 x1920))
(assert (= (x3376 (x3226 x432 x5646 x1826 x4314 x4147 x1743)) x432))
(assert (=> (<= x2049 10000) (= 0 (x25 x2049))))
(assert (> (x3860 64 x3161 11) 10000))
(assert (x847 x4043))
(assert (x847 x5691))
(assert (x1063 x4216))
(assert (= (x4159 x4221 x2768 x1986 x3430) (x25 (x4159 x4221 x2768 x1986 x3430))))
(assert (x847 x1367))
(assert (= (x4693 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341)) x2308))
(assert (x367 x3353))
(assert (x847 x2687))
(assert (=> (>= 10000 x1233) (= 0 (x25 x1233))))
(assert (x847 x696))
(assert (< (x3860 64 x4843 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3634))
(assert (x847 x544))
(assert (x847 x2196))
(assert (x847 x2592))
(assert (= 0 (x25 1000000000)))
(assert (x847 x2671))
(assert (< (x2521 x1903 x1952 x4756 x5354 x5260) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2515 (=> (and (= x660 (x2124 (+ 96 x124))) (= x1907 (x2124 (+ x4774 96))) (= (x1459 x660) x705) (= (not (> x4809 128)) x990)) (and x1756 x990))))
(assert (x847 x5522))
(assert (x847 x2136))
(assert (= (x3376 (x3860 64 x4092 2)) 64))
(assert (x847 x4422))
(assert (x1411 x1081))
(assert (= (x1122 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657)) x5566))
(assert (< 10000 (x3860 64 x3215 10)))
(assert (x847 x5280))
(assert (=> (<= x551 10000) (= 0 (x25 x551))))
(assert (x847 x5269))
(assert (x847 x5622))
(assert (x847 x1819))
(assert (x847 x4590))
(assert (x847 x5327))
(assert (=> (<= x5111 10000) (= 0 (x25 x5111))))
(assert (x847 x4827))
(assert (x926 32 (ite (not (= x2145 0)) 1 0)))
(assert (=> (>= 10000 x2934) (= 0 (x25 x2934))))
(assert (= 0 (x3376 (x4535 0))))
(assert (x1746 (+ 31 x497) 32))
(assert (x847 x3979))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207)))
(assert (x3513 x1234))
(assert (=> (<= x4179 10000) (= (x25 x4179) 0)))
(assert (x847 x3215))
(assert (x847 x4389))
(assert (=> (>= 10000 x4348) (= (x25 x4348) 0)))
(assert (= x3720 (x3021 (x3226 x2207 x3010 x1273 x2454 x3720 x4050))))
(assert (x847 x1185))
(assert (= (x3021 (x2521 x3676 x3103 x2103 x548 x4548)) x4548))
(assert (=> (>= 10000 x935) (= 0 (x25 x935))))
(assert (= (x2143 (x3860 64 x2332 11)) 11))
(assert (x847 x5045))
(assert (x847 x4010))
(assert (= (and x2925 x4932) x1989))
(assert (x847 x704))
(assert (x847 x3950))
(assert (= x5593 (x3021 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175))))
(assert (= (x3860 64 x5236 12) (x25 (x3860 64 x5236 12))))
(assert (=> (<= x4342 10000) (= (x25 x4342) 0)))
(assert (x847 x1245))
(assert (= x4699 (x1122 (x2521 x696 x4699 x2887 x2595 x4903))))
(assert (x847 x5626))
(assert (=> (>= 10000 x726) (= (x25 x726) 0)))
(assert (= (x25 (x3159 x1315 x369)) (x3159 x1315 x369)))
(assert (=> (>= 10000 x2941) (= (x25 x2941) 0)))
(assert (= x834 (x4693 (x4159 x148 x3583 x2036 x834))))
(assert (x847 x3630))
(assert (= x4579 (x3573 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051))))
(assert (x847 x1461))
(assert (=> (>= 10000 x5081) (= (x25 x5081) 0)))
(assert (= x3132 (=> (and (= (x2321 x2030) x3784) (= (not (< 32 x936)) x3938)) (and x3938 (=> (= x5146 32) x32)))))
(assert (x2689 100000))
(assert (x847 x359))
(assert (=> (<= x4490 10000) (= (x25 x4490) 0)))
(assert (x847 x3802))
(assert (= x4715 (x1122 (x4159 x2448 x4715 x220 x5051))))
(assert (x847 x4620))
(assert (= (x25 (+ 1 x4613)) (x25 x4613)))
(assert (= x5613 (and x1169 (not x4334))))
(assert (x847 x2568))
(assert (x847 x93))
(assert (=> (<= x26 10000) (= (x25 x26) 0)))
(assert (x847 x5042))
(assert (x847 x3598))
(assert (= x2090 (and (not x1387) x2480)))
(assert (x847 x5214))
(assert (= x667 (or (and x532 x2973) (and x2948 x4912) (and x1747 x5664))))
(assert (x847 x3074))
(assert (= x770 (and x818 (not x1049))))
(assert (x847 x3761))
(assert (= x5143 (or x5235 x123)))
(assert (x847 x285))
(assert (=> (<= x4524 10000) (= (x25 x4524) 0)))
(assert (not (x2689 (x2521 x3676 x3103 x2103 x548 x4548))))
(assert (x847 x89))
(assert (x847 x3336))
(assert (x847 x3244))
(assert (x1746 (+ x3633 31) 32))
(assert (= (x25 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)) (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)))
(assert (x847 x892))
(assert (x847 x3986))
(assert (x367 127))
(assert (x847 x524))
(assert (x367 x3478))
(assert (x847 x2413))
(assert (x847 x5482))
(assert (x847 x5313))
(assert (x847 x2713))
(assert (= x1903 (x3376 (x3226 x1903 x864 x3293 x4149 x2049 x4474))))
(assert (= (and x4064 x3391) x1791))
(assert (< 10000 (x4159 x2448 x4715 x220 x5051)))
(assert (=> (<= x2308 10000) (= (x25 x2308) 0)))
(assert (= (x25 89332125780766104441357105940599211734484755930370930871569612501041822040064) 0))
(assert (x847 x4351))
(assert (x847 x3141))
(assert (x847 x4557))
(assert (x847 x2876))
(assert (=> (>= 10000 x3176) (= 0 (x25 x3176))))
(assert (x847 x3319))
(assert (x1411 x4287))
(assert (< (x3159 x4348 x330) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x5384 x1418) x4041))
(assert (x1411 x4975))
(assert (x847 x4394))
(assert (< 10000 (x3860 64 x5553 7)))
(assert (x847 x3769))
(assert (x847 x5003))
(assert (= (x25 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207)) (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207)))
(assert (x3500 x503))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x1815 x3914)))
(assert (x847 x678))
(assert (= (x25 (x2521 x3432 x539 x4357 x5079 x4952)) (x2521 x3432 x539 x4357 x5079 x4952)))
(assert (> (x3860 64 x4828 7) 10000))
(assert (= (x4985 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)) x1201))
(assert (x847 x3892))
(assert (= (x25 (x2521 x1903 x1952 x4756 x5354 x5260)) (x2521 x1903 x1952 x4756 x5354 x5260)))
(assert (x847 x1083))
(assert (x847 x639))
(assert (x847 x1273))
(assert (= x2195 (and x4301 x3990)))
(assert (not (x2689 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666))))
(assert (= x1210 (and x657 (not x4668))))
(assert (x847 x4404))
(assert (=> (>= 10000 x1294) (= (x25 x1294) 0)))
(assert (x847 x4405))
(assert (=> (>= 10000 x2815) (= (x25 x2815) 0)))
(assert (= (x3021 (x3226 x1096 x44 x490 x3499 x726 x1233)) x726))
(assert (= x1815 (x3376 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871))))
(assert (x847 x4461))
(assert (x847 x4272))
(assert (x847 x5028))
(assert (x367 x2912))
(assert (x847 x3815))
(assert (x847 x3027))
(assert (x847 x1620))
(assert (x3513 x2444))
(assert (= x1119 (x1122 (x3860 x4098 x1119 x1646))))
(assert (x847 x3753))
(assert (= (and (not x3731) x805) x3827))
(assert (x1063 x97))
(assert (x847 x3624))
(assert (x847 x2189))
(assert (= (x25 (x3226 x4098 x1853 x3691 x5077 x2945 x4263)) (x3226 x4098 x1853 x3691 x5077 x2945 x4263)))
(assert (x847 x3954))
(assert (x847 x3924))
(assert (x847 x5621))
(assert (< (x3226 x1903 x864 x3293 x4149 x2049 x4474) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2139))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x148 x4490 x3005 x897 x4954)))
(assert (< (x3860 64 x1818 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5627 (or x1760 x5372)))
(assert (> (x3860 64 x4654 12) 10000))
(assert (= x1391 (or x361 x3266)))
(assert (x847 x909))
(assert (x1063 x5501))
(assert (x847 x5595))
(assert (= x2570 (=> (and (= x842 x451) (= x2882 x538) (= x4746 x1691) (= x3232 x3300) (= x3102 x1349) (= x4127 x2149) (= x860 x1801) (= x882 x3561) (= x5534 x2279) (= x1232 x1482) (= x3038 x1464) (= x3630 x3979) (= x3189 x909)) x3652)))
(assert (= (x4693 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207)) x2572))
(assert (not (x2689 (x3860 64 x735 2))))
(assert (=> (>= 10000 x4006) (= (x25 x4006) 0)))
(assert (not (x2689 (x3860 64 x3215 10))))
(assert (x847 x2975))
(assert (= x3137 (x1122 (x4159 x5565 x3137 x4053 x405))))
(assert (x847 x1724))
(assert (x847 x4490))
(assert (x379 x2419 32))
(assert (= x4280 (and x3783 x4472)))
(assert (= (x3376 (x3860 64 x4909 36)) 64))
(assert (= 0 (x25 3957931183)))
(assert (x367 x1957))
(assert (x847 x3431))
(assert (x847 x465))
(assert (= 64 (x3376 (x3860 64 1 x1414))))
(assert (x847 x2306))
(assert (x847 x3553))
(assert (x847 x1771))
(assert (x847 x4124))
(assert (x847 x1164))
(assert (x847 x4109))
(assert (x1411 x800))
(assert (x2657 (+ x2762 31)))
(assert (x367 x4956))
(assert (x379 x169 128))
(assert (= (x2143 (x3860 64 x5258 36)) 36))
(assert (= (and x3508 (not x2981)) x1531))
(assert (x3513 x4191))
(assert (x1411 x4509))
(assert (= (x1122 (x3860 64 x5021 100)) x5021))
(assert (= (and (not x2356) x4905) x368))
(assert (x847 x3542))
(assert (x847 x4917))
(assert (x847 x4563))
(assert (x847 x5072))
(assert (= (x25 (x4159 x1903 x3509 x4605 x5499)) (x4159 x1903 x3509 x4605 x5499)))
(assert (=> (<= x3404 10000) (= 0 (x25 x3404))))
(assert (> (x3860 64 x1298 10) 10000))
(assert (x847 x677))
(assert (> (x3860 x4098 x1119 x1646) 10000))
(assert (x847 x4655))
(assert (x847 x1362))
(assert (x379 x1602 32))
(assert (=> (<= x1743 10000) (= 0 (x25 x1743))))
(assert (x847 x3005))
(assert (x847 x4801))
(assert (< (x4159 x2207 x4683 x3234 x5685) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5209))
(assert (= (x25 106705613605932439001713296114446454776331749937047859905631657259250407702528) 0))
(assert (x847 x1407))
(assert (< (x3159 x3676 x3966) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5274 (and x4798 x914)))
(assert (= x3293 (x2143 (x3226 x1903 x864 x3293 x4149 x2049 x4474))))
(assert (x847 x2912))
(assert (x847 x2245))
(assert (x847 x4156))
(assert (x847 x2536))
(assert (x847 x4506))
(assert (x3500 x853))
(assert (=> (>= 10000 x2759) (= 0 (x25 x2759))))
(assert (x847 x4929))
(assert (= x2481 (and x4334 x1169)))
(assert (= (x3573 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523)) x3879))
(assert (< (x3226 x1315 x4816 x3421 x3153 x5081 x965) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x25 4294967295) 0))
(assert (< (x4159 x696 x1198 x1113 x1529) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2657 x3478))
(assert (= (x1122 (x3860 64 x892 4)) x892))
(assert (x847 x5354))
(assert (x847 x5120))
(assert (= (x1122 (x3860 64 x4092 2)) x4092))
(assert (< (x3860 64 x1305 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3003))
(assert (= (x25 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326)) (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x2448 x620)))
(assert (> (x2521 x3432 x539 x4357 x5079 x4952) 10000))
(assert (x847 x5164))
(assert (= x4951 (and x1715 x3678)))
(assert (x847 x4702))
(assert (= x1744 (and (not x2276) x3230)))
(assert (x847 x3344))
(assert (= x4278 x1399))
(assert (x847 x5530))
(assert (x847 x1879))
(assert (x379 x5606 32))
(assert (x847 x991))
(assert (= 64 (x3376 (x3860 64 1 x2672))))
(assert (x847 x5086))
(assert (=> (>= 10000 x1440) (= (x25 x1440) 0)))
(assert (= (x3376 (x3860 64 x3281 36)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4159 x1096 x3667 x2006 x5390)))
(assert (x847 x4654))
(assert (= (x4985 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)) x2288))
(assert (=> (>= 10000 x685) (= 0 (x25 x685))))
(assert (x847 x2932))
(assert (= (and (not x573) x2816) x2132))
(assert (=> (>= 10000 x5600) (= (x25 x5600) 0)))
(assert (x847 x467))
(assert (= (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104) (x25 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104))))
(assert (= (x3021 (x2521 x3044 x3970 x518 x1635 x4479)) x4479))
(assert (x847 x4609))
(assert (x847 x3780))
(assert (=> (>= 10000 x3187) (= 0 (x25 x3187))))
(assert (x926 32 x2645))
(assert (x847 x2278))
(assert (not (x2689 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262))))
(assert (< (x3860 64 x5564 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3376 (x3159 32 104)) 32))
(assert (=> (<= x2245 10000) (= (x25 x2245) 0)))
(assert (x847 x4324))
(assert (= (x2143 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848)) x3489))
(assert (=> (<= x1010 10000) (= (x25 x1010) 0)))
(assert (= x104 (and x3105 x496)))
(assert (x3513 x714))
(assert (not (x2689 (x3860 64 x2010 3))))
(assert (= (x4693 (x3226 x4221 x4999 x562 x2941 x3542 x3661)) x2941))
(assert (x379 x69 128))
(assert (x847 x2763))
(assert (x847 x1163))
(assert (= (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523) (x25 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523))))
(assert (x847 x567))
(assert (= (x25 (x4159 x5565 x3137 x4053 x405)) (x4159 x5565 x3137 x4053 x405)))
(assert (x847 x1619))
(assert (= x382 (and (not x4513) x1817)))
(assert (x379 x1352 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2143 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)) x1073))
(assert (x847 x3219))
(assert (not (x2689 (x3226 x4348 x3986 x2119 x1343 x1984 x2200))))
(assert (= (or x5143 x5628) x1167))
(assert (= (x4693 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009)) x1138))
(assert (= x2314 (x4693 (x2521 x4543 x4410 x1883 x2314 x1866))))
(assert (x847 x323))
(assert (x847 x2006))
(assert (x847 x2681))
(assert (x847 x1352))
(assert (= x2105 (x2143 (x3860 x148 x5527 x2105))))
(assert (= (and x1002 x4313) x532))
(assert (x1411 x4125))
(assert (=> (<= x4412 10000) (= 0 (x25 x4412))))
(assert (x847 x4802))
(assert (x847 x5618))
(assert (=> (>= 10000 x4002) (= (x25 x4002) 0)))
(assert (= x1952 (x1122 (x2521 x1903 x1952 x4756 x5354 x5260))))
(assert (x847 x3782))
(assert (> (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218) 10000))
(assert (= (x4693 (x4159 x4543 x5006 x4604 x1107)) x1107))
(assert (x847 x5606))
(assert (< (x3860 x4098 x1119 x1646) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1427))
(assert (x847 x5380))
(assert (= x1115 (x2143 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122))))
(assert (=> (<= x1190 10000) (= 0 (x25 x1190))))
(assert (= x1681 x1929))
(assert (x847 x4793))
(assert (=> (<= x3153 10000) (= 0 (x25 x3153))))
(assert (x847 x2076))
(assert (=> (<= x5511 10000) (= 0 (x25 x5511))))
(assert (x847 x2599))
(assert (=> (<= x1201 10000) (= 0 (x25 x1201))))
(assert (=> (<= x834 10000) (= (x25 x834) 0)))
(assert (= x5164 (x4693 (x4159 x3044 x1475 x5086 x5164))))
(assert (= (x1122 (x3860 64 x5553 7)) x5553))
(assert (=> (>= 10000 x2638) (= (x25 x2638) 0)))
(assert (not (x2689 (x3860 64 x3512 36))))
(assert (x367 x3040))
(assert (x847 x299))
(assert (x847 x3440))
(assert (= (x25 x2290) (x25 (+ 2 x2290))))
(assert (x847 x4725))
(assert (= x1893 (x3376 (x3226 x1893 x5516 x803 x152 x2107 x5455))))
(assert (< 10000 (x3860 64 x1640 36)))
(assert (=> (>= 10000 x1113) (= (x25 x1113) 0)))
(assert (x847 x875))
(assert (x847 x4326))
(assert (= (or x5166 x5093 x2656) x3733))
(assert (x847 x4532))
(assert (x847 x2734))
(assert (= 64 (x3376 (x3860 64 x2010 3))))
(assert (x847 x1383))
(assert (= (and (not x5315) x583) x4805))
(assert (= x5646 (x1122 (x3226 x432 x5646 x1826 x4314 x4147 x1743))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x4828 7)))
(assert (=> (>= 10000 x4756) (= 0 (x25 x4756))))
(assert (x847 x2120))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 32 x605)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x4221 x995 x4928 x1070 x2187)))
(assert (= (and (not x3077) x5040) x1416))
(assert (= (or x5609 x1616) x4014))
(assert (x847 x2972))
(assert (x847 x5589))
(assert (= (x1122 (x3860 x3044 x1116 x5477)) x1116))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 32 103)))
(assert (=> (<= x1646 10000) (= (x25 x1646) 0)))
(assert (= (or x4154 x91) x2824))
(assert (x847 x5285))
(assert (x847 x5401))
(assert (x847 x5552))
(assert (not (x2689 (x3226 x4221 x4999 x562 x2941 x3542 x3661))))
(assert (x847 x1556))
(assert (= (x25 x5519) (x25 (+ 1 x5519))))
(assert (=> (>= 10000 x3428) (= 0 (x25 x3428))))
(assert (x847 x3116))
(assert (x3500 x2912))
(assert (x847 x177))
(assert (= (x3376 (x2521 x148 x4490 x3005 x897 x4954)) x148))
(assert (x379 x448 32))
(assert (x847 x4427))
(assert (= 0 (x25 2177969240)))
(assert (= x39 (x4985 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39))))
(assert (x847 x1698))
(assert (x847 x4048))
(assert (= (x3376 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262)) x2207))
(assert (=> (>= 10000 x4597) (= (x25 x4597) 0)))
(assert (= (x4693 (x3226 x1893 x5516 x803 x152 x2107 x5455)) x152))
(assert (> (x2521 x3676 x3103 x2103 x548 x4548) 10000))
(assert (x847 x2094))
(assert (= x3441 (and x3672 x1374)))
(assert (x847 x3340))
(assert (x847 x3723))
(assert (< 10000 (x3159 32 x82)))
(assert (x847 x3404))
(assert (x1746 (+ x1558 31) 32))
(assert (=> (<= x2406 10000) (= 0 (x25 x2406))))
(assert (=> (<= x906 10000) (= (x25 x906) 0)))
(assert (x847 x3475))
(assert (x379 x4877 128))
(assert (x1063 x3931))
(assert (= x5523 (and x3060 (not x3996))))
(assert (x847 x3550))
(assert (= (x1122 (x3860 64 x5617 11)) x5617))
(assert (= x501 (x3021 (x2521 x4342 x2694 x4688 x654 x501))))
(assert (x847 x3044))
(assert (x847 x4226))
(assert (not (x2689 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299))))
(assert (x847 x3998))
(assert (= (x25 74700126319118050543342327103397598470879858733489597287354029460387927162880) 0))
(assert (= (x3376 (x2521 x5565 x4351 x393 x4551 x1586)) x5565))
(assert (=> (<= x1511 10000) (= (x25 x1511) 0)))
(assert (=> (<= x405 10000) (= 0 (x25 x405))))
(assert (x847 x2164))
(assert (=> (<= x2714 10000) (= 0 (x25 x2714))))
(assert (x847 x1047))
(assert (not (x2689 (x3226 x4342 x833 x1763 x4924 x2004 x2713))))
(assert (x847 x1739))
(assert (= x326 (x4985 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326))))
(assert (x367 x1389))
(assert (x2689 3313512704))
(assert (x926 32 (ite (not (= 0 x5020)) 1 0)))
(assert (x3952 128))
(assert (x847 x3473))
(assert (= x1096 (x3376 (x3159 x1096 x4660))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x4342 x3072 x1838)))
(assert (< (x2521 x1096 x3719 x311 x156 x1940) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2022))
(assert (= (x25 (x3860 x4342 x3072 x1838)) (x3860 x4342 x3072 x1838)))
(assert (= (x2143 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)) x3545))
(assert (x847 x2270))
(assert (=> (<= x2006 10000) (= 0 (x25 x2006))))
(assert (= (x2143 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)) x2072))
(assert (= (=> (and (= (x2124 (+ x4019 96)) x4291) (= (x2124 (+ x504 96)) x2565) (= x541 (not (< 128 x4437))) (= x4476 (x2346 x4291))) (and x541 x5309)) x5483))
(assert (=> (<= x2218 10000) (= 0 (x25 x2218))))
(assert (x847 x4610))
(assert (x3513 x5441))
(assert (=> (<= x1635 10000) (= (x25 x1635) 0)))
(assert (x847 x455))
(assert (x847 x4685))
(assert (= (x25 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)) (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)))
(assert (x847 x4720))
(assert (x379 x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2689 (x3226 x3432 x5408 x1023 x136 x5322 x2442))))
(assert (= (x3376 (x3860 64 x5067 (ite (= 0 x1903) x5373 (ite (>= 32 x1903) x2443 (ite (<= x1903 64) x3423 (ite (<= x1903 96) x1087 (ite (<= x1903 128) x2408 (ite (>= 160 x1903) x1780 (ite (<= x1903 192) x1623 (ite (<= x1903 224) x2859 x2352)))))))))) 64))
(assert (= x5040 (and (not x2748) x5232)))
(assert (x847 x472))
(assert (= x1350 (and x4981 (not x212))))
(assert (x847 x700))
(assert (=> (<= x3161 10000) (= (x25 x3161) 0)))
(assert (> (x3159 x3044 x1504) 10000))
(assert (x379 x853 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4693 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)) x1919))
(assert (= 36 (x2143 (x3860 64 x1495 36))))
(assert (= (x3021 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326)) x2218))
(assert (x847 x1712))
(assert (= x4605 (x2143 (x4159 x1903 x3509 x4605 x5499))))
(assert (= (x3376 (x3860 64 x4006 6)) 64))
(assert (x847 x178))
(assert (x847 x1318))
(assert (x847 x4434))
(assert (x847 x4890))
(assert (x847 x3458))
(assert (=> (<= x1370 10000) (= 0 (x25 x1370))))
(assert (x847 x3842))
(assert (=> (>= 10000 x1338) (= (x25 x1338) 0)))
(assert (x847 x1397))
(assert (x847 x2462))
(assert (x847 x2174))
(assert (x847 x1300))
(assert (= x2834 (=> (and (= x5441 x1816) (= x5419 x819) (= x468 x2980) (= x3933 x1596) (= x3 x3116) (= x5452 x322) (= x455 x4231)) x4491)))
(assert (= x1876 (x4693 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745))))
(assert (= x4346 (x3573 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160))))
(assert (x847 x975))
(assert (= (x25 (x4159 x432 x3884 x1771 x1947)) (x4159 x432 x3884 x1771 x1947)))
(assert (=> (>= 10000 x5666) (= (x25 x5666) 0)))
(assert (x847 x4853))
(assert (=> (<= x2004 10000) (= 0 (x25 x2004))))
(assert (x847 x2048))
(assert (= (x3860 64 x947 2) (x25 (x3860 64 x947 2))))
(assert (= x4218 (x4985 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218))))
(assert (= x4724 (x4693 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382))))
(assert (= (x1122 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396)) x4871))
(assert (= (x4159 x5203 x372 x1776 x1213) (x25 (x4159 x5203 x372 x1776 x1213))))
(assert (x1746 (+ x426 31) 32))
(assert (= x74 (and x5040 x3077)))
(assert (not (x2689 (x3226 x1903 x864 x3293 x4149 x2049 x4474))))
(assert (x847 x2398))
(assert (x847 x2950))
(assert (x847 x3463))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x2483 36)))
(assert (x367 x2800))
(assert (= (x3376 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39)) x148))
(assert (= (x25 (x3860 64 x1180 (ite (= x1815 0) x3715 (ite (>= 32 x1815) x2906 (ite (<= x1815 64) x4726 (ite (>= 96 x1815) x3828 (ite (>= 128 x1815) x4681 (ite (>= 160 x1815) x5439 (ite (>= 192 x1815) x3429 (ite (<= x1815 224) x719 x4228)))))))))) (x3860 64 x1180 (ite (= x1815 0) x3715 (ite (<= x1815 32) x2906 (ite (>= 64 x1815) x4726 (ite (>= 96 x1815) x3828 (ite (>= 128 x1815) x4681 (ite (<= x1815 160) x5439 (ite (>= 192 x1815) x3429 (ite (>= 224 x1815) x719 x4228)))))))))))
(assert (=> (<= x3103 10000) (= (x25 x3103) 0)))
(assert (= (x1122 (x3860 x2448 x3647 x4327)) x3647))
(assert (x847 x3969))
(assert (not (x2689 (x4159 x148 x3583 x2036 x834))))
(assert (x847 x1393))
(assert (x847 x687))
(assert (x847 x3690))
(assert (= (or x3558 x4675 x2832) x2662))
(assert (=> (>= 10000 x2504) (= 0 (x25 x2504))))
(assert (= (x1122 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242)) x3245))
(assert (x847 x4412))
(assert (x847 x1121))
(assert (= (=> (and (= x2818 160) (not (> x1445 x5427)) (= x1121 x5427) (= (x2723 128) x1445)) x2842) x1052))
(assert (x847 x3280))
(assert (x847 x4395))
(assert (x847 x2926))
(assert (x3952 x397))
(assert (= x3356 (and x457 (not x4038))))
(assert (= (x4693 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)) x3369))
(assert (x847 x411))
(assert (x847 x4773))
(assert (= (and (not x908) x3907) x4223))
(assert (x847 x5608))
(assert (x847 x4656))
(assert (=> (>= 10000 x2101) (= 0 (x25 x2101))))
(assert (x847 x5458))
(assert (x847 x5427))
(assert (x847 x621))
(assert (x847 x228))
(assert (x847 x3468))
(assert (x847 x5653))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x2448 x1566 x4600 x3358 x4070)))
(assert (x847 x5011))
(assert (x847 x2617))
(assert (x847 x2070))
(assert (= x795 (=> (= (+ x4623 292) x4299) x3355)))
(assert (x3952 x1101))
(assert (x847 x4410))
(assert (= (x3021 (x2521 x1815 x5008 x3496 x4524 x1291)) x1291))
(assert (x847 x4547))
(assert (x847 x5127))
(assert (x847 x4721))
(assert (not (x2689 (x3226 x2207 x3010 x1273 x2454 x3720 x4050))))
(assert (x847 x220))
(assert (> (x3860 64 x892 5) 10000))
(assert (= (x4693 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326)) x2146))
(assert (= x1511 (x2143 (x2521 x432 x4749 x1511 x5607 x2357))))
(assert (= (x3021 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051)) x2934))
(assert (= (and x4464 x5241) x3762))
(assert (x847 x606))
(assert (= 10 (x2143 (x3860 64 x1328 10))))
(assert (x847 x4225))
(assert (x847 x4589))
(assert (x847 x2266))
(assert (= x4429 (x2143 (x4159 x3432 x4959 x4429 x3224))))
(assert (x847 x3590))
(assert (x847 x3834))
(assert (x379 x293 32))
(assert (x847 x308))
(assert (x379 x1389 128))
(assert (x847 x3020))
(assert (x1746 x3035 256))
(assert (= (=> (and (<= x3556 254) (= x5019 2) (= x4125 x3861) (= x2416 (+ x5021 1)) (>= x3556 3) (= x589 (+ 1 x5021)) (= x3649 0)) x4948) x3065))
(assert (= x4206 (x2715 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657))))
(assert (=> (<= x3015 10000) (= (x25 x3015) 0)))
(assert (< 10000 (x3159 32 x605)))
(assert (= (x4693 (x4159 x432 x3884 x1771 x1947)) x1947))
(assert (= x2821 (and x4805 x1722)))
(assert (x847 x3012))
(assert (x847 x5574))
(assert (not (x2689 (x3860 x1903 x2638 x3701))))
(assert (=> (<= x3454 10000) (= (x25 x3454) 0)))
(assert (> (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453) 10000))
(assert (x847 x1449))
(assert (= (x25 1313998243) 0))
(assert (= x2035 (and x1202 x4100)))
(assert (= 64 (x3376 (x3860 64 x4145 2))))
(assert (x847 x2399))
(assert (= (or (and x75 (not x189)) x373) x3907))
(assert (= x2700 (and (not x4677) x1744)))
(assert (x847 x5650))
(assert (x926 32 (ite (not (= 0 x936)) 1 0)))
(assert (= (x3376 (x3860 64 x1298 10)) 64))
(assert (x847 x1776))
(assert (x847 x4967))
(assert (x847 x2470))
(assert (=> (<= x1239 10000) (= 0 (x25 x1239))))
(assert (x847 x3406))
(assert (x847 x4813))
(assert (x847 x1150))
(assert (x847 x2805))
(assert (x847 x1082))
(assert (< 10000 (x3226 x1096 x44 x490 x3499 x726 x1233)))
(assert (=> (>= 10000 x1152) (= 0 (x25 x1152))))
(assert (x847 x64))
(assert (=> (>= 10000 x5260) (= 0 (x25 x5260))))
(assert (x847 x1305))
(assert (=> (>= 10000 x1985) (= (x25 x1985) 0)))
(assert (x2689 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (< 10000 (x3860 64 x4556 (ite (= 0 x4543) x225 (ite (>= 32 x4543) x421 (ite (>= 64 x4543) x1624 (ite (>= 96 x4543) x3640 (ite (<= x4543 128) x4028 (ite (>= 160 x4543) x120 (ite (>= 192 x4543) x782 (ite (>= 224 x4543) x115 x5087)))))))))))
(assert (not (x2689 (x3860 64 x735 6))))
(assert (x847 x398))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (= x1023 (x2143 (x3226 x3432 x5408 x1023 x136 x5322 x2442))))
(assert (=> (<= x3076 10000) (= (x25 x3076) 0)))
(assert (x847 x2392))
(assert (x847 x1683))
(assert (x847 x1978))
(assert (x847 x1125))
(assert (= (x25 (x4159 x3676 x3428 x1108 x5491)) (x4159 x3676 x3428 x1108 x5491)))
(assert (= x871 (and (not x3783) x4472)))
(assert (= x3010 (x1122 (x3226 x2207 x3010 x1273 x2454 x3720 x4050))))
(assert (x847 x2856))
(assert (= (x3376 (x3860 64 x4162 2)) 64))
(assert (x847 x31))
(assert (x847 x950))
(assert (x847 x5105))
(assert (x847 x5558))
(assert (x847 x617))
(assert (x847 x4199))
(assert (x847 x3051))
(assert (not (x2689 (x3860 64 x892 3))))
(assert (x847 x934))
(assert (= (or x1220 x4700) x5103))
(assert (x847 x1016))
(assert (not (x2689 (x3226 x696 x3109 x5052 x5209 x5111 x1775))))
(assert (x2657 (+ 31 x5625)))
(assert (x3952 x1352))
(assert (x2689 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (x847 x3556))
(assert (x847 x3489))
(assert (x847 x724))
(assert (> (x3860 64 x947 2) 10000))
(assert (=> (>= 10000 x1638) (= (x25 x1638) 0)))
(assert (= (x3376 (x3860 x3432 x4561 x644)) x3432))
(assert (x847 x4736))
(assert (x847 x3400))
(assert (= x2562 (and (not x768) x913)))
(assert (not (x2689 (x3159 32 x3713))))
(assert (< (x3159 32 x3713) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3513 x3118))
(assert (x847 x2439))
(assert (x847 x775))
(assert (x847 x3582))
(assert (x847 x1726))
(assert (= x3892 (x2715 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288))))
(assert (=> (>= 10000 x3051) (= 0 (x25 x3051))))
(assert (= 3 (x2143 (x3860 64 x5553 3))))
(assert (x847 x1811))
(assert (= x2815 (x3573 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245))))
(assert (=> (<= x5153 10000) (= 0 (x25 x5153))))
(assert (x847 x3058))
(assert (x1411 x2292))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x1411 x1147))
(assert (x847 x1512))
(assert (= (or x4512 (and x3852 x2679)) x4631))
(assert (x847 x489))
(assert (not (x2689 (x3860 64 x1640 36))))
(assert (x847 x3201))
(assert (x926 32 (ite (not (= 0 x5665)) 1 0)))
(assert (x847 x1605))
(assert (= x237 (or x1479 x4882)))
(assert (= (x3021 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)) x1229))
(assert (=> (<= x3695 10000) (= (x25 x3695) 0)))
(assert (= (x25 100000) 0))
(assert (x847 x2371))
(assert (x847 x1478))
(assert (= x3327 (x3573 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201))))
(assert (=> (<= x1938 10000) (= 0 (x25 x1938))))
(assert (= (x4985 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)) x2666))
(assert (= x4179 (x2715 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179))))
(assert (x1411 x1960))
(assert (> (x3226 x5565 x406 x603 x3458 x5690 x2631) 10000))
(assert (x847 x4003))
(assert (not (x2689 (x3226 x3044 x1209 x4938 x5515 x3235 x4481))))
(assert (x847 x5111))
(assert (= (x3573 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978)) x3291))
(assert (x367 x3480))
(assert (x847 x3779))
(assert (x847 x3635))
(assert (= x1070 (x4693 (x2521 x4221 x995 x4928 x1070 x2187))))
(assert (= x2207 (x3376 (x3159 x2207 x4610))))
(assert (> (x3860 x4543 x5296 x1190) 10000))
(assert (x847 x3636))
(assert (=> (<= x562 10000) (= 0 (x25 x562))))
(assert (< (x3159 x4543 x2716) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2878))
(assert (= (x3376 (x4159 x1315 x2398 x4416 x4434)) x1315))
(assert (x847 x5682))
(assert (x847 x3797))
(assert (x847 x3136))
(assert (=> (<= x2801 10000) (= (x25 x2801) 0)))
(assert (x847 x1146))
(assert (not (x2689 (x3860 64 x5236 12))))
(assert (x847 x1853))
(assert (= (x3376 (x3860 x1903 x2638 x3701)) x1903))
(assert (=> (>= 10000 x539) (= (x25 x539) 0)))
(assert (not (x2689 (x3860 64 x5067 (ite (= 0 x1903) x5373 (ite (>= 32 x1903) x2443 (ite (>= 64 x1903) x3423 (ite (>= 96 x1903) x1087 (ite (<= x1903 128) x2408 (ite (>= 160 x1903) x1780 (ite (<= x1903 192) x1623 (ite (<= x1903 224) x2859 x2352))))))))))))
(assert (x2657 x3353))
(assert (x3513 x4315))
(assert (x847 x4970))
(assert (x847 x3478))
(assert (< (x3860 64 1 x2672) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2988))
(assert (= x1268 (and (not x1884) x5569)))
(assert (x847 x3914))
(assert (x847 x4074))
(assert (x847 x2472))
(assert (x367 x1086))
(assert (x847 x290))
(assert (= x76 (x1122 (x3159 x4098 x76))))
(assert (x1411 x4626))
(assert (x3500 x1352))
(assert (x847 x298))
(assert (x847 x2510))
(assert (x847 x4190))
(assert (< (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3860 64 x3618 12) 10000))
(assert (= (x1122 (x4159 x1903 x3509 x4605 x5499)) x3509))
(assert (x367 x174))
(assert (x847 x3925))
(assert (=> (<= x4828 10000) (= (x25 x4828) 0)))
(assert (x847 x4131))
(assert (x847 x4275))
(assert (not (x2689 (x3860 x148 x5527 x2105))))
(assert (< 10000 (x3860 64 x2681 6)))
(assert (x847 x4527))
(assert (x847 x3101))
(assert (not (x2689 (x2521 x5565 x4351 x393 x4551 x1586))))
(assert (not (x2689 (x3860 64 x1305 0))))
(assert (= (and x5670 x1361) x1170))
(assert (x847 x2745))
(assert (= x4246 (or x4219 x378)))
(assert (x847 x2902))
(assert (= (x2521 x1893 x1440 x535 x1449 x4345) (x25 (x2521 x1893 x1440 x535 x1449 x4345))))
(assert (x847 x341))
(assert (x847 x2645))
(assert (= (x1122 (x3860 64 x5564 36)) x5564))
(assert (= x5028 (x4693 (x2521 x4098 x1938 x750 x5028 x1626))))
(assert (= x5505 (and x903 x676)))
(assert (= 64 (x3376 (x3860 64 x2010 7))))
(assert (x847 x1691))
(assert (=> (>= 10000 x5409) (= (x25 x5409) 0)))
(assert (= (x3376 (x3860 x1315 x26 x1030)) x1315))
(assert (< 10000 (x2521 x2207 x2892 x4869 x5520 x1300)))
(assert (= (x25 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051)) (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051)))
(assert (= (x1122 (x2521 x5565 x4351 x393 x4551 x1586)) x4351))
(assert (= x620 (x1122 (x3159 x2448 x620))))
(assert (=> (<= x1107 10000) (= 0 (x25 x1107))))
(assert (=> (<= x750 10000) (= 0 (x25 x750))))
(assert (= x3432 (x3376 (x3226 x3432 x5408 x1023 x136 x5322 x2442))))
(assert (x847 x4444))
(assert (x847 x4604))
(assert (x847 x1472))
(assert (x847 x3755))
(assert (x847 x5625))
(assert (x847 x1947))
(assert (=> (<= x2795 10000) (= (x25 x2795) 0)))
(assert (=> (>= 10000 x5468) (= 0 (x25 x5468))))
(assert (=> (>= 10000 x4162) (= (x25 x4162) 0)))
(assert (= x2315 (and x573 x2816)))
(assert (= x1893 (x3376 (x2521 x1893 x1440 x535 x1449 x4345))))
(assert (=> (>= 10000 x5553) (= (x25 x5553) 0)))
(assert (= (=> (and (= x3794 (not (< 32 x3237))) (= (x2321 x2756) x4010)) (and x3794 (=> (= x441 32) x2958))) x4302))
(assert (=> (<= x5565 10000) (= 0 (x25 x5565))))
(assert (=> (<= x5130 10000) (= 0 (x25 x5130))))
(assert (= x5322 (x3021 (x3226 x3432 x5408 x1023 x136 x5322 x2442))))
(assert (x847 x2498))
(assert (= (or x1498 (and x488 x2248) x3018 (and x1594 x3535) x5314 x667 x4430) x5609))
(assert (= (or x2695 x4349) x3328))
(assert (x847 x142))
(assert (not (x2689 (x3860 x5565 x2909 x1454))))
(assert (x847 x3898))
(assert (x847 x2029))
(assert (=> (<= x518 10000) (= 0 (x25 x518))))
(assert (= (x25 (x3860 64 x3215 10)) (x3860 64 x3215 10)))
(assert (= (and x933 x4920) x2322))
(assert (= x2592 (x2143 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245))))
(assert (x3952 x2419))
(assert (not (x2689 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618))))
(assert (x847 x2867))
(assert (x847 x2065))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4535 0)))
(assert (=> (>= 10000 x5087) (= (x25 x5087) 0)))
(assert (> (x3860 64 x4162 2) 10000))
(assert (x847 x4676))
(assert (= (=> (and (or x676 (not x676)) (= (= 0 x1547) x676)) x67) x3282))
(assert (x1411 x4289))
(assert (= (x3021 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657)) x2801))
(assert (x847 x4830))
(assert (x3513 (ite (not (= x5020 0)) 1 0)))
(assert (= (x2143 (x3860 64 x4482 100)) 100))
(assert (< 10000 (x3159 x4348 x330)))
(assert (x847 x2762))
(assert (=> (>= 10000 x5207) (= 0 (x25 x5207))))
(assert (x847 x2410))
(assert (x847 x5328))
(assert (x847 x5363))
(assert (< 10000 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)))
(assert (x847 x190))
(assert (x847 x4858))
(assert (= (x25 (x3159 x5565 x4597)) (x3159 x5565 x4597)))
(assert (x847 x4346))
(assert (x1746 x5204 2))
(assert (= x2607 (and x4601 x4645)))
(assert (=> (>= 10000 x1988) (= 0 (x25 x1988))))
(assert (= x4092 (x1122 (x3860 64 x4092 36))))
(assert (x847 x1975))
(assert (x847 x406))
(assert (x847 x1368))
(assert (x847 x2965))
(assert (not (x2689 (x3226 x2448 x2591 x4502 x308 x202 x4027))))
(assert (=> (>= 10000 x2460) (= (x25 x2460) 0)))
(assert (not (x2689 (x3159 32 x2172))))
(assert (< (x3159 x4098 x76) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x4013))
(assert (= x1893 (x3376 (x3159 x1893 x2588))))
(assert (x847 x4204))
(assert (x3513 256))
(assert (x847 x4819))
(assert (x379 x1924 32))
(assert (= (x3021 (x3226 x1893 x5516 x803 x152 x2107 x5455)) x2107))
(assert (x847 x439))
(assert (x847 x2454))
(assert (x847 x4290))
(assert (=> (<= x5353 10000) (= (x25 x5353) 0)))
(assert (x847 x1987))
(assert (= (x4693 (x2521 x1893 x1440 x535 x1449 x4345)) x1449))
(assert (= (x2143 (x3226 x432 x5646 x1826 x4314 x4147 x1743)) x1826))
(assert (x847 x1996))
(assert (x847 x1646))
(assert (x847 x384))
(assert (=> (<= x4687 10000) (= 0 (x25 x4687))))
(assert (< 10000 (x3860 64 x4092 2)))
(assert (=> (<= x4202 10000) (= 0 (x25 x4202))))
(assert (x847 x645))
(assert (x847 x1909))
(assert (x847 x1035))
(assert (x2689 3812630263))
(assert (=> (>= 10000 x2207) (= (x25 x2207) 0)))
(assert (= (and (not x1671) x4713) x4777))
(assert (x847 x2759))
(assert (x847 x4636))
(assert (> (x3860 64 x1370 5) 10000))
(assert (=> (>= 10000 x2586) (= (x25 x2586) 0)))
(assert (x847 x354))
(assert (x847 x853))
(assert (x379 x5548 2))
(assert (x1679 x4243))
(assert (= (x2143 (x3226 x4098 x1853 x3691 x5077 x2945 x4263)) x3691))
(assert (= x4314 (x4693 (x3226 x432 x5646 x1826 x4314 x4147 x1743))))
(assert (< (x2521 x432 x4749 x1511 x5607 x2357) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2476))
(assert (= x4979 (and x2376 x4399)))
(assert (x847 x5251))
(assert (not (x2689 (x3860 64 x2681 6))))
(assert (x847 x534))
(assert (= x5685 (x4693 (x4159 x2207 x4683 x3234 x5685))))
(assert (x847 x5579))
(assert (> (x4159 x4543 x5006 x4604 x1107) 10000))
(assert (=> (<= x4615 10000) (= 0 (x25 x4615))))
(assert (not (x2689 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635))))
(assert (= x1982 x1437))
(assert (x847 x4821))
(assert (x847 x2921))
(assert (x847 x5683))
(assert (= (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122) (x25 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122))))
(assert (= 0 (x25 59118985759084958080972419199848406897631161684926069324597705158744233476096)))
(assert (x379 x2254 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x3860 64 x547 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x549))
(assert (=> (<= x1106 10000) (= 0 (x25 x1106))))
(assert (x847 x2116))
(assert (= (x3021 (x3226 x1815 x4992 x4534 x3294 x3404 x312)) x3404))
(assert (= (x2143 (x2521 x1815 x5008 x3496 x4524 x1291)) x3496))
(assert (= (x3226 x2207 x3010 x1273 x2454 x3720 x4050) (x25 (x3226 x2207 x3010 x1273 x2454 x3720 x4050))))
(assert (= (x25 (+ 1 x4916)) (x25 x4916)))
(assert (x847 x951))
(assert (= (x3021 (x3226 x1903 x864 x3293 x4149 x2049 x4474)) x2049))
(assert (x847 x3183))
(assert (x847 x3647))
(assert (x926 32 x4467))
(assert (= (x3021 (x2521 x4221 x995 x4928 x1070 x2187)) x2187))
(assert (x847 x4841))
(assert (x847 x729))
(assert (= x149 (x2715 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432))))
(assert (=> (<= x2314 10000) (= 0 (x25 x2314))))
(assert (x847 x747))
(assert (= (x2715 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)) x477))
(assert (= (x3159 32 x2172) (x25 (x3159 32 x2172))))
(assert (x847 x637))
(assert (x847 x3114))
(assert (=> (>= 10000 x715) (= 0 (x25 x715))))
(assert (= (and (not x1078) x1123) x3847))
(assert (=> (<= x5536 10000) (= (x25 x5536) 0)))
(assert (not (x2689 (x2521 x148 x4490 x3005 x897 x4954))))
(assert (= (x25 (+ x3502 1)) (x25 x3502)))
(assert (x847 x2440))
(assert (x847 x4660))
(assert (x847 x889))
(assert (=> (>= 10000 x4451) (= (x25 x4451) 0)))
(assert (x847 x4759))
(assert (= x4970 (x4693 (x4159 x4348 x4687 x4734 x4970))))
(assert (= x4154 (and (not x5587) x2217)))
(assert (x847 x862))
(assert (x847 x5675))
(assert (= x2891 (and (not x5283) x5116)))
(assert (x847 x5450))
(assert (x847 x5556))
(assert (=> (>= 10000 x3421) (= 0 (x25 x3421))))
(assert (x847 x2031))
(assert (< 10000 (x3860 64 x5617 11)))
(assert (x847 x1960))
(assert (=> (<= x1396 10000) (= 0 (x25 x1396))))
(assert (x847 x882))
(assert (x847 x3884))
(assert (x2657 (+ x1144 31)))
(assert (= (x1122 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39)) x5444))
(assert (= 5 (x2143 (x3860 64 x892 5))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x3432 x4561 x644)))
(assert (x3513 x305))
(assert (x847 x344))
(assert (=> (>= 10000 x489) (= (x25 x489) 0)))
(assert (=> (<= x2694 10000) (= (x25 x2694) 0)))
(assert (x379 x4321 128))
(assert (=> (<= x2745 10000) (= (x25 x2745) 0)))
(assert (< (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5060))
(assert (=> (<= x5411 10000) (= 0 (x25 x5411))))
(assert (x847 x986))
(assert (x847 x5654))
(assert (=> (<= x1794 10000) (= 0 (x25 x1794))))
(assert (x379 x5286 32))
(assert (x847 x2447))
(assert (= (x25 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)) (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)))
(assert (= x2399 (x2143 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599))))
(assert (x847 x1981))
(assert (x847 x2996))
(assert (=> (<= x2358 10000) (= 0 (x25 x2358))))
(assert (x847 x535))
(assert (= (=> (and (= x924 (ite (< 150 x3963) 150 x3963)) (= (> x1547 0) x2299) (= x5663 (x2124 (+ x4318 32)))) (and (=> x2299 x5118) (=> (not x2299) x2691))) x67))
(assert (= (x2143 (x3226 x1815 x4992 x4534 x3294 x3404 x312)) x4534))
(assert (= (and x2158 x1628) x5688))
(assert (= x1565 (=> (and (= (x2124 (+ 96 x4277)) x1568) (= x4702 (x2124 (+ x48 96))) (= x484 (not (> x4193 128))) (= x5289 (x1705 x4702))) (and x484 x4648))))
(assert (x847 x2603))
(assert (x847 x523))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x2689 2770781680))
(assert (= (x2143 (x3860 64 x2681 6)) 6))
(assert (= 0 (x25 115792089237316195423570985008687907853269984665640564039457584007913129639841)))
(assert (=> (>= 10000 x3219) (= 0 (x25 x3219))))
(assert (x847 x4139))
(assert (not (x2689 (x3860 64 x4162 1))))
(assert (x847 x1649))
(assert (x847 x431))
(assert (not (x2689 (x3860 64 x1245 11))))
(assert (x847 x2473))
(assert (x847 x2539))
(assert (x847 x1876))
(assert (x847 x4848))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x4348 x3986 x2119 x1343 x1984 x2200)))
(assert (x847 x3031))
(assert (=> (>= 10000 x4721) (= (x25 x4721) 0)))
(assert (= x4121 (x4693 (x3226 x148 x2796 x422 x4121 x1523 x2759))))
(assert (x847 x3068))
(assert (x847 x3123))
(assert (x847 x1233))
(assert (x847 x1813))
(assert (x847 x4963))
(assert (=> (>= 10000 x530) (= 0 (x25 x530))))
(assert (x847 x4807))
(assert (=> (<= x4722 10000) (= (x25 x4722) 0)))
(assert (= (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262) (x25 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262))))
(assert (x847 x2817))
(assert (x847 x5529))
(assert (= (x3226 x3044 x1209 x4938 x5515 x3235 x4481) (x25 (x3226 x3044 x1209 x4938 x5515 x3235 x4481))))
(assert (=> (<= x4654 10000) (= 0 (x25 x4654))))
(assert (x847 x3725))
(assert (x3952 x5286))
(assert (=> (<= x5566 10000) (= 0 (x25 x5566))))
(assert (=> (>= 10000 x4556) (= (x25 x4556) 0)))
(assert (not (x2689 (x3159 x4543 x2716))))
(assert (x1411 x845))
(assert (not (x2689 (x3159 x696 x2714))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x947 2)))
(assert (= (x4159 x4098 x5536 x1228 x5013) (x25 (x4159 x4098 x5536 x1228 x5013))))
(assert (x847 x2469))
(assert (< 10000 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635)))
(assert (=> (<= x4973 10000) (= 0 (x25 x4973))))
(assert (x847 x5443))
(assert (= (or x3494 x2284) x1613))
(assert (x847 x3248))
(assert (= x3207 (and (not x1948) x420)))
(assert (x847 x2098))
(assert (x847 x49))
(assert (x847 x4521))
(assert (=> (>= 10000 x2713) (= (x25 x2713) 0)))
(assert (not (x2689 (x3226 x5203 x5129 x1802 x5468 x3611 x249))))
(assert (= (and x1049 x818) x3018))
(assert (=> (>= 10000 x1054) (= (x25 x1054) 0)))
(assert (=> (>= 10000 x5322) (= 0 (x25 x5322))))
(assert (x847 x1092))
(assert (= (x4693 (x4159 x4098 x5536 x1228 x5013)) x5013))
(assert (= x2176 (and x3364 (not x3665))))
(assert (= x2057 (and (not x3271) x823)))
(assert (= x654 (x4693 (x2521 x4342 x2694 x4688 x654 x501))))
(assert (= x2606 (=> (and (= (not (< 32 x1125)) x2720) (= (x2321 x1246) x1271)) (and x2720 (=> (= 32 x4623) x795)))))
(assert (x847 x2773))
(assert (x847 x2810))
(assert (x847 x1193))
(assert (x847 x845))
(assert (> (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262) 10000))
(assert (x3952 x5293))
(assert (< 10000 (x4159 x1893 x2039 x5409 x5649)))
(assert (= (=> (and (= (x2124 (+ x2264 32)) x3058) (= x3244 (ite (> x2499 150) 150 x2499)) (= (< 0 x4303) x3852)) (and (=> (not x3852) x2100) (=> x3852 x3600))) x2770))
(assert (x847 x5041))
(assert (< (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2830) (= 0 (x25 x2830))))
(assert (=> (<= x4918 10000) (= 0 (x25 x4918))))
(assert (x847 x2466))
(assert (= (x3860 64 x4547 6) (x25 (x3860 64 x4547 6))))
(assert (= x995 (x1122 (x2521 x4221 x995 x4928 x1070 x2187))))
(assert (< (x3860 64 x4654 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x4672))
(assert (x847 x1238))
(assert (x1746 (+ 31 x3462) 32))
(assert (= (x25 (x3860 x3432 x4561 x644)) (x3860 x3432 x4561 x644)))
(assert (= (and x2769 x1613) x5356))
(assert (=> (>= 10000 x2558) (= (x25 x2558) 0)))
(assert (x847 x829))
(assert (x847 x2211))
(assert (= 1 (x1122 (x3860 64 1 x2579))))
(assert (x2689 1722637450))
(assert (= (x3376 (x3860 64 x735 2)) 64))
(assert (< 10000 (x3860 64 x4133 36)))
(assert (< 10000 (x3159 x1903 x552)))
(assert (=> (>= 10000 x1494) (= (x25 x1494) 0)))
(assert (x847 x3871))
(assert (= x5411 (x1122 (x3860 64 x5411 10))))
(assert (> (x4159 x696 x1198 x1113 x1529) 10000))
(assert (x847 x3865))
(assert (= 0 (x25 1914215)))
(assert (not (x2689 (x2521 x2448 x1566 x4600 x3358 x4070))))
(assert (not (x2689 (x2521 x4342 x2694 x4688 x654 x501))))
(assert (x3513 (ite (not (= 0 x3886)) 1 0)))
(assert (x2689 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x847 x2938))
(assert (x847 x3488))
(assert (not (x2689 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898))))
(assert (x847 x4699))
(assert (x847 x5017))
(assert (x847 x5501))
(assert (= (=> (and (= (= x2400 0) x768) (or (and (not x768) (and (= x4525 x2400) (= x1837 x5447))) (and (and (= (ite (= 0 x2400) x3180 0) x4900) (= (x5603 x4162) x472) (= x5145 x3754) (= (+ x472 x4900) x5145) (>= x5145 0) (<= x5145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x4900 x472) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2850 x2637) x384) (= (- x384 x4900) x531) (= x4525 x2400) (= x5447 x1837)) x768))) x2375) x2868))
(assert (not (x2689 (x3860 64 x1199 36))))
(assert (= (x3860 64 x4092 2) (x25 (x3860 64 x4092 2))))
(assert (= (or x3602 x3174) x4882))
(assert (= (and (not x2519) x1306) x3602))
(assert (=> (<= x803 10000) (= (x25 x803) 0)))
(assert (= x4828 (x1122 (x3860 64 x4828 7))))
(assert (x847 x265))
(assert (= (x25 (x3159 x2448 x620)) (x3159 x2448 x620)))
(assert (= (x3376 (x3860 64 x2067 100)) 64))
(assert (= x1486 x4234))
(assert (=> (>= 10000 x1851) (= (x25 x1851) 0)))
(assert (x847 x1248))
(assert (= x2331 (and x1269 (not x3486))))
(assert (not (x2689 (x3860 x2207 x1508 x5023))))
(assert (=> (<= x4266 10000) (= 0 (x25 x4266))))
(assert (x847 x3055))
(assert (x367 x4862))
(assert (x847 x5255))
(assert (x847 x2045))
(assert (= 12 (x2143 (x3860 64 x3618 12))))
(assert (= (x2143 (x2521 x1096 x3719 x311 x156 x1940)) x311))
(assert (= x1922 (x3021 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262))))
(assert (= x3358 (x4693 (x2521 x2448 x1566 x4600 x3358 x4070))))
(assert (x847 x5077))
(assert (=> (>= 10000 x1853) (= (x25 x1853) 0)))
(assert (x847 x5253))
(assert (=> (<= x5209 10000) (= (x25 x5209) 0)))
(assert (= (x25 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432)) (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432)))
(assert (= x4798 (and x4062 x2368)))
(assert (= (x2143 (x3860 x5203 x3210 x3340)) x3340))
(assert (x3513 (ite (not (= 0 x5665)) 1 0)))
(assert (x847 x3592))
(assert (x847 x5252))
(assert (x847 x5534))
(assert (x1746 (+ x1144 31) 32))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x735 6)))
(assert (=> (<= x1287 10000) (= 0 (x25 x1287))))
(assert (= x4327 (x2143 (x3860 x2448 x3647 x4327))))
(assert (not (x2689 (x4159 x4098 x5536 x1228 x5013))))
(assert (x847 x5349))
(assert (x847 x2913))
(assert (x1411 x4609))
(assert (=> (>= 10000 x1947) (= 0 (x25 x1947))))
(assert (x847 x1159))
(assert (x847 x3062))
(assert (x847 x1331))
(assert (x847 x449))
(assert (x847 x4874))
(assert (= x2409 (x1122 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599))))
(assert (= x498 (x3573 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122))))
(assert (x847 x5494))
(assert (x3952 32))
(assert (x847 x1204))
(assert (> (x3226 x4348 x3986 x2119 x1343 x1984 x2200) 10000))
(assert (x847 x4376))
(assert (=> (<= x5120 10000) (= (x25 x5120) 0)))
(assert (< (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2011))
(assert (=> (<= x1876 10000) (= 0 (x25 x1876))))
(assert (x1411 x790))
(assert (x847 x2037))
(assert (x847 x564))
(assert (=> (<= x3424 10000) (= (x25 x3424) 0)))
(assert (x847 x539))
(assert (=> (<= x755 10000) (= (x25 x755) 0)))
(assert (not (x2689 (x3860 64 x4006 6))))
(assert (x847 x1938))
(assert (= (x2143 (x2521 x696 x4699 x2887 x2595 x4903)) x2887))
(assert (x847 x3935))
(assert (x847 x4103))
(assert (=> (>= 10000 x644) (= (x25 x644) 0)))
(assert (x379 x673 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x354 10000) (= 0 (x25 x354))))
(assert (x847 x1514))
(assert (= x3642 (x3021 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104))))
(assert (< 10000 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)))
(assert (not (x2689 (x3860 x1096 x4988 x5120))))
(assert (x847 x5646))
(assert (= x3944 (and (not x3612) x4167)))
(assert (= (=> (and (= x322 x1555) (= x1248 x1816) (= x3933 x5580) (= x5672 x3) (= x5562 x2980) (= x5489 x4231) (= x5204 x819)) x4491) x592))
(assert (=> (<= x3676 10000) (= 0 (x25 x3676))))
(assert (< (x3860 x432 x850 x685) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x620) (= (x25 x620) 0)))
(assert (x847 x2072))
(assert (x367 x2254))
(assert (=> (<= x1859 10000) (= 0 (x25 x1859))))
(assert (x2689 310283853))
(assert (= (x4693 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262)) x4279))
(assert (x847 x1575))
(assert (x847 x2223))
(assert (x847 x3516))
(assert (=> (<= x4547 10000) (= 0 (x25 x4547))))
(assert (=> (<= x4027 10000) (= 0 (x25 x4027))))
(assert (x847 x5610))
(assert (= x3250 (=> (and (= x1285 (x4945 x1611)) (>= 255 x1285) (= (x3860 64 x1818 10) x1611) (= x2623 (= x5427 0)) (>= x1285 1)) (and (=> (and (and (and (= x764 (= x2424 x2413)) (= 128 x2304) (<= x2413 1461501637330902918203684832716283019655932542975)) (or (and (and (= x2627 false) (<= 1 x2413) (= x3928 x5441) (= x1355 false) (>= 127 x668) (>= x1991 1) (= (x2015 x4268) x1991) (= x4268 x2413) (<= x668 127) (= x122 8365236128558009046904410293209581292053118695343348878262597880337030709248) (<= x2413 1461501637330902918203684832716283019655932542975) (= x5295 310283853) (= x4312 false) (= false x1670) (= x1147 36)) (not x764)) (and (and (= false x4823) (= 36 x1472) (= x2364 false) (<= 1 x1164) (= x3813 x521) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x5441) (<= x4875 127) (>= 127 x4875) (= x3813 (* 1000000000 x5441)) (= x5000 false) (= x4250 false) (= (x2015 x2424) x1164) (= x303 x3039) (= x4872 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x303 x5441) (= 310283853 x1284)) x764))) (not x2623)) x1052) (=> (and (and (and (= (= x2424 x2413) x4100) (>= 1461501637330902918203684832716283019655932542975 x2413) (= x4466 128)) (or (and (and (= x2148 x5136) (= x389 false) (= (* 1000000000 x5441) x5136) (<= 1 x396) (= false x616) (= x4407 310283853) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x1369) (= x5246 false) (= false x4754) (= x3491 36) (= x724 x81) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x5441) (<= x1406 127) (= (x2015 x2424) x396) (= x5441 x724) (<= x1406 127)) x4100) (and (and (= false x3992) (= false x3926) (= 36 x1426) (= false x3418) (= x4268 x2413) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x2771) (<= x5571 127) (<= 1 x203) (<= x5571 127) (>= x2413 1) (= x2864 x5441) (= x2229 310283853) (>= 1461501637330902918203684832716283019655932542975 x2413) (= false x3850) (= (x2015 x4268) x203)) (not x4100)))) x2623) x1153)))))
(assert (x847 x5385))
(assert (< (x3860 64 x5067 (ite (= 0 x1903) x5373 (ite (>= 32 x1903) x2443 (ite (>= 64 x1903) x3423 (ite (>= 96 x1903) x1087 (ite (<= x1903 128) x2408 (ite (<= x1903 160) x1780 (ite (<= x1903 192) x1623 (ite (>= 224 x1903) x2859 x2352))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3589))
(assert (=> (>= 10000 x5408) (= 0 (x25 x5408))))
(assert (= x3678 (and x2132 x2087)))
(assert (= (x1122 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122)) x3088))
(assert (= x1938 (x1122 (x2521 x4098 x1938 x750 x5028 x1626))))
(assert (not (x2689 (x3860 64 x4654 12))))
(assert (= (and x3356 x1320) x2298))
(assert (x847 x1395))
(assert (x847 x159))
(assert (= x4440 (and (not x1067) x3614)))
(assert (x3952 x4214))
(assert (x847 x5070))
(assert (x847 x1029))
(assert (= (x2715 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104)) x4104))
(assert (= x4999 (x1122 (x3226 x4221 x4999 x562 x2941 x3542 x3661))))
(assert (x847 x1615))
(assert (= x4502 (x2143 (x3226 x2448 x2591 x4502 x308 x202 x4027))))
(assert (= (x2715 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)) x3871))
(assert (= x3432 (x3376 (x4159 x3432 x4959 x4429 x3224))))
(assert (x847 x2609))
(assert (= (=> (and (= (x2124 (+ 32 x2811)) x791) (= x3162 (x2124 (+ x824 x771))) (= (x1435 x3590) x4156) (= x1134 (x2124 (+ x4848 32))) (= (> x4156 0) x5227) (= x2811 (x2124 (+ x771 x4142))) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x853) x4142) (= x4848 (x2124 (+ x3554 32))) (= (x2124 (+ 31 x824)) x853) (= (x959 (- x2811 x4709)) x4020)) (and (=> (and x5227 (and (= x4334 (< 32 x4156)) (= x2839 (x138 x2908)))) (and (=> (not x4334) x970) (=> (and x4334 (and (= x688 (x2124 (+ 32 x2908))) (= x1098 (< 64 x4156)) (= x635 (x2124 (+ 32 x791))) (= x2959 (x2676 x688)))) (and (=> (not x1098) x970) (=> (and x1098 (and (= (x2124 (+ x2908 64)) x1976) (= x3587 (x931 x1976)) (= x4584 (< 96 x4156)) (= x4505 (x2124 (+ x791 64))))) (and (=> x4584 x3387) (=> (not x4584) x970))))))) (=> (not x5227) x970))) x3313))
(assert (x847 x5511))
(assert (x847 x2059))
(assert (= (x1122 (x2521 x1315 x438 x1999 x2081 x2159)) x438))
(assert (= (x4693 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122)) x915))
(assert (= x3160 (x2715 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160))))
(assert (= (and x5263 x5148) x880))
(assert (= x4543 (x3376 (x2521 x4543 x4410 x1883 x2314 x1866))))
(assert (x3500 x397))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (= (x3159 x148 x4555) (x25 (x3159 x148 x4555))))
(assert (= (x25 102788308552044517260959567728648622381392053106279845986800620074717893623808) 0))
(assert (x847 x1949))
(assert (= x1106 (x3021 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207))))
(assert (x847 x4607))
(assert (x847 x536))
(assert (= (=> (and (or (and (and (= x4748 (+ x2366 1)) (= x4821 x5204) (= x3277 x1555) (= x5489 x4830) (= x5580 x3866) (= x917 x5672)) (not x5493)) (and x5493 (and x3179 (= x4830 x2758) (= x4821 x5369) (= (x4120 x4162) x3865) (= x3277 x2919) (= x3608 x3866) (= x1662 x917) (= x4748 x3580) (= x3179 (= x2222 (x301 x4162))) x2259 (= x2259 (<= x3865 (x301 x4162))) (<= x3963 4294967295) (= (x4120 x4162) x2222)))) (and (<= x3012 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1110 (x959 (- x4318 x3012))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x4318)) (= (x2124 (+ x5330 x5466)) x4318) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x4318)) (= x293 (x2124 (+ x4319 31))) (= x439 (x2124 (+ x4318 32))) (= x5466 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x293)) (= (x2124 (+ x5330 x4319)) x2140) (= (+ x4326 46442213778836376901753710468615024683576072693327014300388496345503314739200) x5540) (= x5042 (x2124 (+ 32 x3012))) (= x4709 (x2124 (+ 192 x4318))) (= x4326 (x210 26959946667150639794667015087019630673637144422540572481103610249215 x4862)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4318) (> x4318 x3012) (= x4862 (x1839 x5042)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x4318)) (= (x959 (- x1110 32)) x1216) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4318) (= (x2516 x3012) x2780) (< x4318 x4709) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3012) (<= x3012 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x4318 1) (= (> x1547 0) x5493) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4318))) x3282) x2155))
(assert (x847 x2945))
(assert (not (x2689 (x3860 64 x988 36))))
(assert (x847 x4559))
(assert (x926 32 (ite (not (= x2503 0)) 1 0)))
(assert (x847 x272))
(assert (= (x1122 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)) x1013))
(assert (x847 x3491))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)))
(assert (=> (>= 10000 x2081) (= (x25 x2081) 0)))
(assert (x847 x1627))
(assert (= x4815 (=> (and (= (x2124 (+ x48 96)) x2578) (= (x2969 x2578) x2876) (= (x2124 (+ x3864 96)) x3147) (= x3445 (not (> x5255 128)))) (and x4497 x3445))))
(assert (x847 x3554))
(assert (x847 x5019))
(assert (= (and (not x2376) x4399) x4172))
(assert (= (x3159 x4098 x76) (x25 (x3159 x4098 x76))))
(assert (x847 x2892))
(assert (x1411 x1742))
(assert (x847 x3155))
(assert (x847 x3122))
(assert (=> (>= 10000 x3542) (= (x25 x3542) 0)))
(assert (not (x2689 (x3860 64 x4092 2))))
(assert (= 64 (x3376 (x3860 64 x2573 36))))
(assert (x847 x307))
(assert (= x4133 (x1122 (x3860 64 x4133 36))))
(assert (x3952 x4712))
(assert (x847 x45))
(assert (x847 x2522))
(assert (x847 x4184))
(assert (= (x1122 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)) x3465))
(assert (x847 x4197))
(assert (x847 x3879))
(assert (= x4451 (x3021 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432))))
(assert (x847 x2249))
(assert (x847 x2640))
(assert (= x777 (x3573 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396))))
(assert (x847 x2577))
(assert (x847 x2638))
(assert (=> (>= 10000 x2900) (= (x25 x2900) 0)))
(assert (< 10000 (x3860 64 x84 (ite (= x3676 0) x4378 (ite (>= 32 x3676) x1353 (ite (>= 64 x3676) x447 (ite (<= x3676 96) x5056 (ite (<= x3676 128) x4778 (ite (>= 160 x3676) x6 (ite (>= 192 x3676) x5336 (ite (<= x3676 224) x1072 x586)))))))))))
(assert (x847 x4984))
(assert (x847 x5319))
(assert (= 100 (x2143 (x3860 64 x5021 100))))
(assert (x847 x3137))
(assert (=> (>= 10000 x3701) (= (x25 x3701) 0)))
(assert (x847 x3176))
(assert (= x4928 (x2143 (x2521 x4221 x995 x4928 x1070 x2187))))
(assert (=> (>= 10000 x586) (= 0 (x25 x586))))
(assert (x847 x755))
(assert (x847 x4178))
(assert (= (x4985 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175)) x175))
(assert (x847 x5351))
(assert (x3513 (ite (not (= x4563 0)) 1 0)))
(assert (= x3470 (x2143 (x3226 x3676 x2719 x3470 x1494 x3634 x5506))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4159 x4098 x5536 x1228 x5013)))
(assert (= (or x2323 x3609) x3909))
(assert (x847 x2677))
(assert (=> (>= 10000 x5028) (= 0 (x25 x5028))))
(assert (x847 x4458))
(assert (> (x2521 x696 x4699 x2887 x2595 x4903) 10000))
(assert (=> (<= x5685 10000) (= 0 (x25 x5685))))
(assert (= (=> (and (and (= x3998 (x815 128)) (= x2923 (= x3998 x1893))) (or (and (= x1709 (ite x2923 1 0)) (not x2923)) (and (and (= (x815 128) x2794) (= (ite (< 0 x2794) 1 0) x1709)) x2923))) x896) x5113))
(assert (= x1886 (or x5661 x1564)))
(assert (x3513 32))
(assert (=> (>= 10000 x2399) (= 0 (x25 x2399))))
(assert (x847 x5198))
(assert (x847 x5341))
(assert (=> (>= 10000 x2972) (= (x25 x2972) 0)))
(assert (< 10000 (x3860 64 x1305 0)))
(assert (not (x2689 (x3226 x432 x5646 x1826 x4314 x4147 x1743))))
(assert (x847 x2010))
(assert (x847 x211))
(assert (=> (>= 10000 x2407) (= (x25 x2407) 0)))
(assert (x847 x3))
(assert (x847 x1617))
(assert (= (and (not x4932) x2925) x2982))
(assert (= (x3376 (x4159 x5203 x372 x1776 x1213)) x5203))
(assert (= 64 (x3376 (x3860 64 x865 10))))
(assert (=> (<= x3691 10000) (= (x25 x3691) 0)))
(assert (=> (<= x2038 10000) (= 0 (x25 x2038))))
(assert (x1411 x3769))
(assert (x379 x2261 2))
(assert (= x796 (=> (and (= (- x967 132) x887) (= x1267 (x210 1 x558)) (= (x959 (- x1267 (mod (ite (> 32 x4618) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5549) (= x2068 (= 0 x1998)) (= (+ 32 x967) x1313) (or (= x5549 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5549)) (= (x210 1 x558) x1998) (= x4618 (ite (> x1267 0) x4216 (x210 127 x4216))) (= x4216 (x4727 x558 2))) (and (=> (and (and (or (= 0 x348) (= 32 x348)) (= (+ x348 x1313) x890) (= x1401 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x558)) (= (* (ite (not (= 0 x4618)) 1 0) 32) x348)) x2068) x2688) (=> (and (and (= (> x4618 0) x1671) (= (x3159 32 104) x1242)) (not x2068)) (and (=> x1671 x868) (=> (and (= x3008 0) (not x1671)) x2391)))))))
(assert (x847 x1838))
(assert (< 10000 (x3860 64 x4909 36)))
(assert (x847 x2941))
(assert (x847 x2552))
(assert (x2657 (+ x4919 31)))
(assert (x847 x1349))
(assert (x847 x641))
(assert (= x4399 (and (not x1990) x1339)))
(assert (x847 x5562))
(assert (=> (>= 10000 x4600) (= (x25 x4600) 0)))
(assert (x847 x1577))
(assert (= x4556 (x1122 (x3860 64 x4556 (ite (= x3044 0) x5220 (ite (>= 32 x3044) x5076 (ite (>= 64 x3044) x193 (ite (>= 96 x3044) x3617 (ite (<= x3044 128) x4772 (ite (<= x3044 160) x3485 (ite (>= 192 x3044) x5676 (ite (>= 224 x3044) x5399 x3739))))))))))))
(assert (= (and x4223 (not x4573)) x5459))
(assert (= x405 (x4693 (x4159 x5565 x3137 x4053 x405))))
(assert (> (x2521 x4348 x3176 x5171 x4615 x2830) 10000))
(assert (x847 x80))
(assert (= (=> (and (= 150 x978) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2059) (= x2238 (x4727 (+ 31 x696) 32)) (= (x2124 (+ 32 x1518)) x4019) (= (* 32 x4191) x2843) (= (x3965 x2059) x4477) (= x48 (x2124 (+ 32 x2059))) (= x1518 (x2124 (+ (mod (+ x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2059))) (= (x4727 (+ 31 x1857) 32) x4191) (= x3055 (x2124 (+ 128 x5018))) (<= x2059 115792089237316195423570985008687907853269984665640564039457584007913129639933) (<= x2059 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x2124 (+ x48 x696)) x333) (> x1518 x2059) (= x3625 (x2124 (+ x4019 x1857))) (= (* x2238 32) x500) (= (x2124 (+ 32 x3055)) x2438) (> x4577 x1518) (= x5018 (x2124 (+ 36 x4577))) (= (x2124 (+ (mod (+ x2843 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1518)) x4577) (<= 1 x1518) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1518) (= (> x4477 0) x2154) (>= x4577 2) (= (x2124 (+ 32 x5018)) x1490)) (and (=> (and (and (= x4062 (> x4477 32)) (= (x2613 x48) x2440)) x2154) (and (=> (not x4062) x540) (=> (and x4062 (and (= (x2124 (+ x48 32)) x4650) (= (> x4477 64) x914) (= (x2367 x4650) x5480) (= (x2124 (+ x2438 32)) x2984))) (and (=> (not x914) x540) (=> (and (and (= (x2124 (+ 64 x48)) x4743) (= (x2124 (+ x2438 64)) x934) (= x242 (x362 x4743)) (= (< 96 x4477) x765)) x914) (and (=> x765 x5160) (=> (not x765) x540))))))) (=> (not x2154) x540))) x1483))
(assert (x847 x1149))
(assert (x847 x5484))
(assert (x847 x5035))
(assert (x847 x2889))
(assert (< 10000 (x3860 64 x735 2)))
(assert (x847 x1209))
(assert (=> (>= 10000 x3898) (= 0 (x25 x3898))))
(assert (not (x2689 (x3860 64 x3161 11))))
(assert (x847 x1107))
(assert (= (x25 (x3860 64 x5391 11)) (x3860 64 x5391 11)))
(assert (x847 x507))
(assert (x847 x436))
(assert (= (x4693 (x2521 x5565 x4351 x393 x4551 x1586)) x4551))
(assert (= x578 (x3021 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242))))
(assert (x847 x518))
(assert (= (x2143 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453)) x3999))
(assert (x847 x1191))
(assert (x2689 1341992515))
(assert (= x4721 (x4693 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599))))
(assert (=> (>= 10000 x4206) (= 0 (x25 x4206))))
(assert (= x4263 (x3573 (x3226 x4098 x1853 x3691 x5077 x2945 x4263))))
(assert (x847 x992))
(assert (< 10000 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599)))
(assert (= x5023 (x2143 (x3860 x2207 x1508 x5023))))
(assert (not (x2689 (x3860 64 x5564 36))))
(assert (< (x3860 64 x4556 (ite (= x4543 0) x225 (ite (<= x4543 32) x421 (ite (<= x4543 64) x1624 (ite (<= x4543 96) x3640 (ite (<= x4543 128) x4028 (ite (>= 160 x4543) x120 (ite (<= x4543 192) x782 (ite (<= x4543 224) x115 x5087))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x911))
(assert (= x4276 x1929))
(assert (< (x3860 64 x3161 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x379 x4527 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3376 (x3860 64 x4828 7)) 64))
(assert (= x91 (and x2217 x5587)))
(assert (= (x3860 64 x865 10) (x25 (x3860 64 x865 10))))
(assert (= (and (not x1969) x3416) x2604))
(assert (= (or x5075 x2736) x4738))
(assert (= x821 (and x1123 x1078)))
(assert (< 10000 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)))
(assert (= (x2143 (x3860 64 1 x2672)) x2672))
(assert (x847 x5419))
(assert (=> (>= 10000 x4098) (= 0 (x25 x4098))))
(assert (not (x2689 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341))))
(assert (x847 x5067))
(assert (= (x3376 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175)) x1815))
(assert (x847 x397))
(assert (x847 x2835))
(assert (x3513 x4467))
(assert (=> (>= 10000 x1826) (= 0 (x25 x1826))))
(assert (x847 x388))
(assert (= x1545 x3242))
(assert (= x1903 (x3376 (x4159 x1903 x3509 x4605 x5499))))
(assert (= (x2143 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978)) x298))
(assert (= x4081 (and (not x2793) x2115)))
(assert (= (or x1044 x1799 x4117 x3773 x5613) x4783))
(assert (=> (<= x4801 10000) (= (x25 x4801) 0)))
(assert (= (and (not x2670) x4738) x196))
(assert (= x818 (and x3060 x3996)))
(assert (x847 x607))
(assert (x926 32 x5065))
(assert (x847 x3088))
(assert (= (or x139 x4183) x5424))
(assert (= 7 (x2143 (x3860 64 x4828 7))))
(assert (x847 x5566))
(assert (x3952 x5606))
(assert (x847 x2862))
(assert (= (=> (= x2416 x2785) x701) x2898))
(assert (x847 x1419))
(assert (= (x3573 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)) x4412))
(assert (x847 x4367))
(assert (=> (>= 10000 x3843) (= 0 (x25 x3843))))
(assert (x847 x4243))
(assert (x847 x4652))
(assert (not (x2689 (x3159 32 103))))
(assert (x847 x5119))
(assert (x847 x2234))
(assert (x847 x2794))
(assert (x847 x88))
(assert (= 0 (x25 1461501637330902918203684832716283019655932542975)))
(assert (= x4342 (x3376 (x4159 x4342 x5687 x2789 x2303))))
(assert (x847 x3178))
(assert (not (x2689 (x3860 x1815 x4175 x1856))))
(assert (=> (<= x2345 10000) (= (x25 x2345) 0)))
(assert (x847 x4045))
(assert (= x32 (=> (= (+ x5146 292) x3074) x922)))
(assert (x847 x2487))
(assert (x847 x3213))
(assert (x847 x2353))
(assert (= (and (not x1296) x4041) x479))
(assert (x379 x13 32))
(assert (> (x3159 x5203 x4995) 10000))
(assert (= (x4985 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657)) x5657))
(assert (=> (>= 10000 x2357) (= 0 (x25 x2357))))
(assert (not (x2689 (x3226 x1815 x4992 x4534 x3294 x3404 x312))))
(assert (=> (<= x3516 10000) (= 0 (x25 x3516))))
(assert (x847 x2215))
(assert (= x4512 (or (and (not x2983) x271) (and (not x1942) x87) (and (not x4625) x1560) (and (not x4009) x241) x5344)))
(assert (x847 x4910))
(assert (x847 x2765))
(assert (x847 x2332))
(assert (= x3805 (x2715 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805))))
(assert (=> (>= 10000 x3224) (= (x25 x3224) 0)))
(assert (x847 x1897))
(assert (x847 x1908))
(assert (x847 x1834))
(assert (= x249 (x3573 (x3226 x5203 x5129 x1802 x5468 x3611 x249))))
(assert (= x2716 (x1122 (x3159 x4543 x2716))))
(assert (x847 x2563))
(assert (= (x3376 (x3860 64 x1199 36)) 64))
(assert (x847 x256))
(assert (x847 x2333))
(assert (=> (>= 10000 x490) (= (x25 x490) 0)))
(assert (= x1650 (and x1469 x753)))
(assert (x847 x1530))
(assert (x847 x1528))
(assert (not (x2689 (x3860 64 x947 2))))
(assert (= (x2143 (x3860 64 x892 3)) 3))
(assert (= (x4693 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)) x3239))
(assert (x847 x1080))
(assert (=> (>= 10000 x3986) (= 0 (x25 x3986))))
(assert (x847 x3197))
(assert (x847 x2784))
(assert (= x4027 (x3573 (x3226 x2448 x2591 x4502 x308 x202 x4027))))
(assert (= x4741 (=> (and (= (not (> x1035 612)) x4906) (= (x3342 x2872) x826)) (and x1399 x4906))))
(assert (> (x3860 x4348 x1032 x4395) 10000))
(assert (x2689 3628442803))
(assert (x847 x352))
(assert (=> (>= 10000 x3970) (= 0 (x25 x3970))))
(assert (x367 1))
(assert (= x1776 (x2143 (x4159 x5203 x372 x1776 x1213))))
(assert (x847 x2347))
(assert (= (and x2683 x283) x2275))
(assert (< (x3860 64 x5067 (ite (= x1096 0) x2404 (ite (>= 32 x1096) x4308 (ite (>= 64 x1096) x5612 (ite (<= x1096 96) x1642 (ite (>= 128 x1096) x2325 (ite (<= x1096 160) x3089 (ite (>= 192 x1096) x2999 (ite (>= 224 x1096) x3527 x2635))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x379 x3114 128))
(assert (= (or x2956 x394 x1736 x2090 x3902) x5114))
(assert (x847 x97))
(assert (= (x3860 x1893 x2972 x3027) (x25 (x3860 x1893 x2972 x3027))))
(assert (x847 x3933))
(assert (= (x4693 (x3226 x696 x3109 x5052 x5209 x5111 x1775)) x5209))
(assert (x847 x3574))
(assert (x847 x5571))
(assert (x847 x2540))
(assert (= x547 (x1122 (x3860 64 x547 6))))
(assert (=> (>= 10000 x4999) (= (x25 x4999) 0)))
(assert (x3952 x1389))
(assert (x847 x2651))
(assert (x847 x3889))
(assert (< (x3860 64 x988 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1970 (and (not x3826) x1973)))
(assert (not (x2689 (x3860 64 1 x1414))))
(assert (= 11 (x2143 (x3860 64 x5391 11))))
(assert (= (x4159 x696 x1198 x1113 x1529) (x25 (x4159 x696 x1198 x1113 x1529))))
(assert (x847 x2800))
(assert (=> (>= 10000 x1952) (= 0 (x25 x1952))))
(assert (x847 x897))
(assert (x847 x126))
(assert (= (and x3007 (not x4584)) x3773))
(assert (= (x4985 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)) x395))
(assert (= (and x579 (not x3208)) x420))
(assert (= 0 (x25 1341992515)))
(assert (= (x3226 x2448 x2591 x4502 x308 x202 x4027) (x25 (x3226 x2448 x2591 x4502 x308 x202 x4027))))
(assert (= x2164 (x1122 (x2521 x5203 x2164 x3862 x4636 x5174))))
(assert (x847 x5648))
(assert (=> (>= 10000 x4092) (= 0 (x25 x4092))))
(assert (x847 x5605))
(assert (x847 x1224))
(assert (x847 x2778))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)))
(assert (x3952 x3478))
(assert (= x3281 (x1122 (x3860 64 x3281 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)))
(assert (=> (>= 10000 x1343) (= 0 (x25 x1343))))
(assert (= x1202 (and x2047 x2623)))
(assert (x847 x312))
(assert (x847 x1226))
(assert (x847 x3800))
(assert (x367 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x847 x419))
(assert (x847 x3845))
(assert (not (x2689 (x3860 64 x4843 10))))
(assert (= (x2143 (x3860 64 x1180 (ite (= 0 x1815) x3715 (ite (<= x1815 32) x2906 (ite (>= 64 x1815) x4726 (ite (>= 96 x1815) x3828 (ite (>= 128 x1815) x4681 (ite (<= x1815 160) x5439 (ite (<= x1815 192) x3429 (ite (>= 224 x1815) x719 x4228)))))))))) (ite (= x1815 0) x3715 (ite (<= x1815 32) x2906 (ite (>= 64 x1815) x4726 (ite (<= x1815 96) x3828 (ite (<= x1815 128) x4681 (ite (>= 160 x1815) x5439 (ite (<= x1815 192) x3429 (ite (>= 224 x1815) x719 x4228))))))))))
(assert (x847 x1173))
(assert (x1411 x1472))
(assert (=> (>= 10000 x3188) (= 0 (x25 x3188))))
(assert (x847 x2330))
(assert (x847 x1216))
(assert (x847 x2766))
(assert (= (and x4668 x657) x3614))
(assert (x3513 x4420))
(assert (x847 x1389))
(assert (x847 x5080))
(assert (not (x2689 (x3860 x4342 x3072 x1838))))
(assert (x847 x3649))
(assert (= (x3376 (x3860 64 x2681 6)) 64))
(assert (x2657 (+ x696 31)))
(assert (x847 x2661))
(assert (= (x25 1084734224) 0))
(assert (= x735 (x1122 (x3860 64 x735 36))))
(assert (x847 x4421))
(assert (x847 x3019))
(assert (x379 x558 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x5569 x1884) x2040))
(assert (= (x3860 64 x4654 12) (x25 (x3860 64 x4654 12))))
(assert (= (x3159 x3432 x2682) (x25 (x3159 x3432 x2682))))
(assert (= (x4693 (x2521 x432 x4749 x1511 x5607 x2357)) x5607))
(assert (x847 x4096))
(assert (x847 x1025))
(assert (x847 x1867))
(assert (= (x2143 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)) x4272))
(assert (= 10 (x2143 (x3860 64 x3215 10))))
(assert (x1411 x737))
(assert (x847 x3022))
(assert (x847 x86))
(assert (x847 x4420))
(assert (= x4756 (x2143 (x2521 x1903 x1952 x4756 x5354 x5260))))
(assert (=> (>= 10000 x1449) (= (x25 x1449) 0)))
(assert (x847 x728))
(assert (= x3978 (x2143 (x3860 x4221 x4297 x3978))))
(assert (x367 x448))
(assert (= (and x4433 x3909) x364))
(assert (x847 x3424))
(assert (x847 x2366))
(assert (= (x25 (x3860 x2448 x3647 x4327)) (x3860 x2448 x3647 x4327)))
(assert (= x38 (and x2383 x3572)))
(assert (x847 x494))
(assert (x1411 x3053))
(assert (= 64 (x3376 (x3860 64 x2483 36))))
(assert (= (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978) (x25 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978))))
(assert (x847 x4037))
(assert (x847 x3181))
(assert (= x1495 (x1122 (x3860 64 x1495 36))))
(assert (< 10000 (x3159 x1096 x4660)))
(assert (x847 x2380))
(assert (x847 x4757))
(assert (not (x2689 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201))))
(assert (x847 x3297))
(assert (=> (<= x4502 10000) (= (x25 x4502) 0)))
(assert (not (x2689 (x3860 64 x3281 36))))
(assert (x3952 x392))
(assert (x379 x1086 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1411 x3491))
(assert (= (x25 (x3860 64 x2366 12)) (x3860 64 x2366 12)))
(assert (= x4960 (and x5270 x636)))
(assert (x2689 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (=> (<= x2588 10000) (= 0 (x25 x2588))))
(assert (= x1799 (and (not x1098) x2481)))
(assert (= (x4159 x1096 x3667 x2006 x5390) (x25 (x4159 x1096 x3667 x2006 x5390))))
(assert (x847 x2818))
(assert (x847 x2432))
(assert (> (x2521 x1903 x1952 x4756 x5354 x5260) 10000))
(assert (=> (<= x2110 10000) (= (x25 x2110) 0)))
(assert (x847 x2968))
(assert (not (x2689 (x2521 x1096 x3719 x311 x156 x1940))))
(assert (x847 x1147))
(assert (x847 x3439))
(assert (= (x3021 (x3226 x2448 x2591 x4502 x308 x202 x4027)) x202))
(assert (x847 x1842))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x4098 x1853 x3691 x5077 x2945 x4263)))
(assert (= (x25 (x3860 x2207 x1508 x5023)) (x3860 x2207 x1508 x5023)))
(assert (= x4262 (x2715 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262))))
(assert (not (x2689 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045))))
(assert (x847 x3841))
(assert (x847 x2216))
(assert (x847 x5291))
(assert (x847 x3867))
(assert (x847 x4875))
(assert (=> (>= 10000 x2442) (= 0 (x25 x2442))))
(assert (= (x25 x197) (x25 (+ 2 x197))))
(assert (not (x2689 (x3226 x148 x2796 x422 x4121 x1523 x2759))))
(assert (x847 x918))
(assert (=> (>= 10000 x892) (= 0 (x25 x892))))
(assert (x847 x2287))
(assert (= (x25 (x3860 64 x5214 12)) (x3860 64 x5214 12)))
(assert (x3952 x5094))
(assert (x847 x3611))
(assert (= (=> (and (= (- x4299 132) x3064) (= x3451 (x210 1 x5489)) (or (= 1 x512) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x512)) (= x3331 (x210 1 x5489)) (= (+ x4299 32) x172) (= (= x3451 0) x3208) (= x512 (x959 (- x3331 (mod (ite (> 32 x2503) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (ite (< 0 x3331) x2369 (x210 127 x2369)) x2503) (= x2369 (x4727 x5489 2))) (and (=> (and (and (= (x3159 32 104) x340) (= x1948 (> x2503 0))) (not x3208)) (and (=> x1948 x5597) (=> (and (= x4226 0) (not x1948)) x4449))) (=> (and x3208 (and (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5489) x341) (= x2076 (+ x450 x172)) (= x450 (* (ite (not (= 0 x2503)) 1 0) 32)) (or (= x450 32) (= x450 0)))) x106))) x3355))
(assert (x367 x3261))
(assert (x847 x3890))
(assert (= x4342 (x3376 (x3159 x4342 x3073))))
(assert (x847 x3212))
(assert (x847 x460))
(assert (x847 x4181))
(assert (x3952 x1312))
(assert (= (x3376 (x3860 64 x3454 12)) 64))
(assert (=> (>= 10000 x1032) (= (x25 x1032) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x5565 x406 x603 x3458 x5690 x2631)))
(assert (x847 x1054))
(assert (=> (<= x5203 10000) (= 0 (x25 x5203))))
(assert (x847 x428))
(assert (= (x3376 (x3860 x4348 x1032 x4395)) x4348))
(assert (x847 x1706))
(assert (x847 x2268))
(assert (x847 x551))
(assert (x1411 x3861))
(assert (x847 x5499))
(assert (=> (>= 10000 x5258) (= 0 (x25 x5258))))
(assert (x847 x3184))
(assert (x847 x3928))
(assert (x847 x2416))
(assert (x847 x413))
(assert (= x1684 (x3021 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009))))
(assert (x847 x4030))
(assert (=> (<= x4346 10000) (= 0 (x25 x4346))))
(assert (=> (>= 10000 x311) (= 0 (x25 x311))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x3512 36)))
(assert (= x1169 (and x1066 x5227)))
(assert (x847 x3543))
(assert (x847 x1495))
(assert (= 5 (x2143 (x3860 64 x1370 5))))
(assert (=> (<= x2045 10000) (= 0 (x25 x2045))))
(assert (x847 x3591))
(assert (= x4426 (and x1674 x2874)))
(assert (> (x4159 x3676 x3428 x1108 x5491) 10000))
(assert (> (x2521 x5203 x2164 x3862 x4636 x5174) 10000))
(assert (x847 x3704))
(assert (= x696 (x3376 (x2521 x696 x4699 x2887 x2595 x4903))))
(assert (x847 x311))
(assert (= (x3619 x3044 x4652 x129 x1380 x489 x829 x3898) (x25 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x2448 x3647 x4327)))
(assert (= (x1122 (x3159 x1096 x4660)) x4660))
(assert (=> (>= 10000 x4959) (= (x25 x4959) 0)))
(assert (= x4091 (and x2513 x4055)))
(assert (x847 x1505))
(assert (= (x4159 x148 x3583 x2036 x834) (x25 (x4159 x148 x3583 x2036 x834))))
(assert (= (x4693 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245)) x2029))
(assert (= x4938 (x2143 (x3226 x3044 x1209 x4938 x5515 x3235 x4481))))
(assert (x847 x4025))
(assert (x847 x1230))
(assert (x847 x3147))
(assert (=> (<= x915 10000) (= 0 (x25 x915))))
(assert (= (x3376 (x2521 x5203 x2164 x3862 x4636 x5174)) x5203))
(assert (= (=> (= (not (< 128 x4296)) x5475) (and x5475 x2654)) x4558))
(assert (x847 x206))
(assert (=> (<= x2119 10000) (= 0 (x25 x2119))))
(assert (not (x2689 (x3860 64 x5411 10))))
(assert (=> (<= x4706 10000) (= (x25 x4706) 0)))
(assert (not (x2689 (x3860 64 x1370 3))))
(assert (x847 x1015))
(assert (x3952 x3480))
(assert (x847 x475))
(assert (x847 x2843))
(assert (x847 x4066))
(assert (x847 x3697))
(assert (=> (<= x4838 10000) (= (x25 x4838) 0)))
(assert (= x823 (and x4905 x2356)))
(assert (x847 x4287))
(assert (x847 x867))
(assert (= (or x4851 x1471 x226 x3469 x2982) x3508))
(assert (= x5553 (x1122 (x3860 64 x5553 3))))
(assert (= (x25 (x3860 64 x4162 2)) (x3860 64 x4162 2)))
(assert (= x5372 (and x3612 x4167)))
(assert (x847 x3267))
(assert (= (x2521 x2207 x2892 x4869 x5520 x1300) (x25 (x2521 x2207 x2892 x4869 x5520 x1300))))
(assert (x847 x1651))
(assert (=> (>= 10000 x1448) (= (x25 x1448) 0)))
(assert (= (x3376 (x3860 x2207 x1508 x5023)) x2207))
(assert (x847 x3295))
(assert (x847 x3162))
(assert (x847 x5390))
(assert (not (x2689 (x3860 x4221 x4297 x3978))))
(assert (< 10000 (x3860 x4221 x4297 x3978)))
(assert (not (x2689 (x3860 64 x1328 10))))
(assert (= (x3376 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745)) x4543))
(assert (x847 x2465))
(assert (< 10000 (x3226 x3676 x2719 x3470 x1494 x3634 x5506)))
(assert (x847 x2402))
(assert (x847 x3130))
(assert (= x2924 x2861))
(assert (= x542 (x2143 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523))))
(assert (x847 x2717))
(assert (=> (<= x777 10000) (= (x25 x777) 0)))
(assert (= (x2715 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848)) x2427))
(assert (= (and x377 x821) x5591))
(assert (=> (<= x3432 10000) (= (x25 x3432) 0)))
(assert (=> (<= x3842 10000) (= (x25 x3842) 0)))
(assert (=> (>= 10000 x4395) (= 0 (x25 x4395))))
(assert (=> (<= x3235 10000) (= 0 (x25 x3235))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x2207 x2892 x4869 x5520 x1300)))
(assert (x847 x819))
(assert (x926 32 x4420))
(assert (x847 x2252))
(assert (x847 x2150))
(assert (= (x25 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848)) (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160)))
(assert (= (x3376 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)) x4221))
(assert (=> (<= x3027 10000) (= (x25 x3027) 0)))
(assert (x847 x355))
(assert (= (and x5232 x2748) x5144))
(assert (x847 x3876))
(assert (= (x1122 (x3860 64 x3618 12)) x3618))
(assert (=> (<= x5380 10000) (= (x25 x5380) 0)))
(assert (= (x25 (x3860 64 x5067 (ite (= x1096 0) x2404 (ite (<= x1096 32) x4308 (ite (<= x1096 64) x5612 (ite (>= 96 x1096) x1642 (ite (>= 128 x1096) x2325 (ite (>= 160 x1096) x3089 (ite (<= x1096 192) x2999 (ite (<= x1096 224) x3527 x2635)))))))))) (x3860 64 x5067 (ite (= x1096 0) x2404 (ite (>= 32 x1096) x4308 (ite (>= 64 x1096) x5612 (ite (<= x1096 96) x1642 (ite (>= 128 x1096) x2325 (ite (>= 160 x1096) x3089 (ite (>= 192 x1096) x2999 (ite (<= x1096 224) x3527 x2635)))))))))))
(assert (= x3221 (and (not x4829) x3092)))
(assert (x847 x5203))
(assert (x847 x5593))
(assert (x847 x5300))
(assert (= (and x4014 (not x1637)) x3126))
(assert (x847 x511))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x1315 x438 x1999 x2081 x2159)))
(assert (= x653 (and (not x3669) x3459)))
(assert (= x2595 (x4693 (x2521 x696 x4699 x2887 x2595 x4903))))
(assert (=> (>= 10000 x864) (= (x25 x864) 0)))
(assert (= x4396 (=> (and (and (and (= x4866 x462) (= x3262 (x4424 x4866))) (and (and (= x3769 68) (= x3766 x2855) (<= x2855 x3262) (= x928 x1818)) (and (and (= false x3915) (= x1264 x5427)) (and (= x256 x462) (and (= x1082 x3766) (and (and (>= 127 x5422) (= (not (= x256 x4162)) x212) (= x3670 x5427) (= (x4424 x1794) x4628) (= x5500 x814) (= (+ x1082 x4034) x5500) (= (ite x212 1 0) x5556) (= x46 (- x4628 x1082)) (= (x2015 x4162) x2677) (= false x424) (= 2001815235 x736) (= x3684 x928) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4034 x1082)) (<= 1 x2677) (>= x5500 0) (>= 127 x5422) (= (x3128 x4162) x4034) (= 1 x511) (= x1794 x462) (= x469 2) (= x1672 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5500)) (or (and (and (<= x200 1461501637330902918203684832716283019655932542975) (= x256 x200)) x212) (and (not x212) (= 0 x5556))))))))) (and (= x4530 false) (= x1592 (x3860 64 x4843 10)) (<= 0 x1085) (not (= x4162 x2605)) (<= 0 x3348) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3934) (>= x2424 1) (= false x3490) (>= x1090 0) (>= 127 x1505) (<= x4088 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2347 (x2015 x4162)) (= (x4945 x1592) x3543) (<= 0 x5492) (not (= x4162 x2424)) (<= x2424 1461501637330902918203684832716283019655932542975) (<= 0 x251) (<= x5492 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5672 1) (>= x3766 0) (= false x487) (>= x2347 1) (<= x3543 255) (<= x3348 1461501637330902918203684832716283019655932542975) (= false x5361) (>= 127 x1505) (= x4162 x5672) (= x1818 x1332) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1090) (= (< 0 (x2015 x4268)) x4360) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1085) (<= x4268 1461501637330902918203684832716283019655932542975) (= x2605 x546) (>= x2241 0) (= 36 x5291) (= (not (= 0 x5420)) x3063) (<= x462 1461501637330902918203684832716283019655932542975) (<= x4162 1461501637330902918203684832716283019655932542975) x4360 (= x5420 (ite (not (= x3543 0)) 1 0)) (>= 1461501637330902918203684832716283019655932542975 x5672) x2639 (= (> (x2015 x4162) 0) x5202) (not (= x4162 x4268)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3766) (>= x2605 1) (>= 1461501637330902918203684832716283019655932542975 x546) x5202 (not (= x2424 x4268)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3643) (>= 1461501637330902918203684832716283019655932542975 x251) (<= 0 x462) (<= x2605 1461501637330902918203684832716283019655932542975) (<= 1 x4162) (= (< 0 (x2015 x2424)) x2639) (= x1332 x4843) (= x119 x4843) (= 3672334990 x2371) x1844 (not (= x4268 x2605)) (= x5492 x1264) (>= x4268 1) (= false x4697) (not (= x2605 x2424)) (= x1844 (> (x2015 x2605) 0)) (<= 0 x3643) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2241) (<= 0 x4088) (= x3913 false) (<= 0 x3934) (>= x546 1))) x3250)))
(assert (=> (<= x206 10000) (= (x25 x206) 0)))
(assert (x847 x1743))
(assert (= (x25 (+ 1 x3272)) (x25 x3272)))
(assert (= (and x364 x3393) x3735))
(assert (= x1888 (=> (and (= x528 (not (< x4519 x3184))) (= x4519 (x2124 (+ 32 x2402))) (= (x3342 x2449) x2784)) (and x4234 x528))))
(assert (= (x3376 (x2521 x2207 x2892 x4869 x5520 x1300)) x2207))
(assert (x847 x4987))
(assert (=> (<= x3634 10000) (= (x25 x3634) 0)))
(assert (= x4342 (x3376 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245))))
(assert (= (x25 (x3860 64 x5553 7)) (x3860 64 x5553 7)))
(assert (= x378 (and x4065 x2690)))
(assert (= x42 (or x3733 x1886)))
(assert (= x5499 (x4693 (x4159 x1903 x3509 x4605 x5499))))
(assert (< (x3226 x1815 x4992 x4534 x3294 x3404 x312) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x84 (x1122 (x3860 64 x84 (ite (= x3676 0) x4378 (ite (>= 32 x3676) x1353 (ite (<= x3676 64) x447 (ite (>= 96 x3676) x5056 (ite (>= 128 x3676) x4778 (ite (>= 160 x3676) x6 (ite (>= 192 x3676) x5336 (ite (<= x3676 224) x1072 x586))))))))))))
(assert (=> (<= x3210 10000) (= (x25 x3210) 0)))
(assert (x2657 x5489))
(assert (x847 x333))
(assert (x847 x3369))
(assert (< 10000 (x3860 64 x2573 36)))
(assert (= 64 (x3376 (x3860 64 1 x2579))))
(assert (= x3193 (x2143 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045))))
(assert (x847 x4072))
(assert (= 64 (x3376 (x3860 64 x947 2))))
(assert (x367 x392))
(assert (x3952 x5501))
(assert (= x3569 (=> (= x5371 (+ x3152 x1506)) x708)))
(assert (= (=> (and (and (= x2161 false) (= x1716 false) (>= 127 x613) (>= x5514 1) (< x2818 x5362) (= false x3290) (= x1332 x1328) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x2818) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x2818) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x2818) (<= x2818 115792089237316195423570985008687907853269984665640564039457584007913129639902))) (= (x3860 64 x1818 10) x5614) (<= x2818 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1813 (x2124 (+ x5362 96))) (= false x4116) (= false x4026) (= x5317 0) (= 1 x1077) (= false x3891) (= x3574 36) (= x5391 x3203) (= x5362 (x2124 (+ 32 x2818))) (= x5391 (x3097 x2818)) (= x2112 x1328) (>= 127 x613) (= x4950 3672334990) (<= x2818 115792089237316195423570985008687907853269984665640564039457584007913129639933) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x2818) (>= x2818 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (<= x2818 115792089237316195423570985008687907853269984665640564039457584007913129639807) (>= x2818 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (< x5362 x1813) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2818) (= x1570 (not (= x2024 0))) (= x2962 (x3860 64 x1328 10)) (= false x4507) (= (+ 1 x1007) x4916) (= false x5245) (<= x3538 3) (= x2024 (ite (not (= x1060 0)) 1 0)) (= x1007 (x3860 64 x5391 11)) (= x3738 (+ x4916 1)) (= x4520 false) (>= 255 x1060) (= x4078 false) (= x5514 (x2015 x4162)) (= (x3860 64 x5391 11) x4971) (= (x4163 x2962) x1060) (= x5317 (x2951 x4971)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x2818) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x2818) (>= x2818 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (<= x2818 115792089237316195423570985008687907853269984665640564039457584007913129639807))) (and (>= 127 x2979) (= x3568 false) (= 2177969240 x4672) (<= x3194 3) (= x3666 false) (= (x3860 64 x5617 11) x2060) (= false x4171) (<= 1 x4095) (= false x837) (= x1904 (x4259 x2300)) (>= 127 x2979) (= x2496 false) (= x4048 (x4552 192)) (= (x3265 x754) x2881) (= x3203 x5617) (= (x4552 128) x3370) (= (+ 1 x2060) x754) (= false x756) (= x3194 (x1546 x2060)) (= x2907 (x4552 160)) (= 36 x3053) (= (x2015 x4162) x4095) (= x459 (not x1570)) (= (+ x754 1) x2300) (= (and x459 x3063) x1156))) (and (=> (and (= x3994 (= x975 x2907)) (= x1332 x975) (= (and x3994 x2668) x3351) (= x2668 (= 1 x3370)) (= (and x4400 x3351) x779) (= (= x4048 0) x4400)) x779) x1156)) x482))
(assert (= (x3860 64 x1328 10) (x25 (x3860 64 x1328 10))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x4482 100)))
(assert (x847 x5514))
(assert (x847 x2329))
(assert (x847 x5153))
(assert (> (x2521 x4221 x995 x4928 x1070 x2187) 10000))
(assert (=> (<= x4218 10000) (= (x25 x4218) 0)))
(assert (x847 x3487))
(assert (= x5690 (x3021 (x3226 x5565 x406 x603 x3458 x5690 x2631))))
(assert (x367 x169))
(assert (= x5118 (=> (and (= x5534 x1600) (= x1232 x917) (= x3189 x5441) (= x451 x4821) (= x3979 x2413) (= x892 x3561) (= x200 x3300) (= x3504 x1464) (= x4748 x1691) (= x2149 x546) (= x4830 x2882) (= x3277 x860) (= x3866 x3102)) x3652)))
(assert (x847 x2887))
(assert (x847 x5581))
(assert (< (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x618))
(assert (=> (<= x3294 10000) (= 0 (x25 x3294))))
(assert (x847 x4453))
(assert (= (and x1097 x2057) x2490))
(assert (= x3811 (or (and x1166 x279) (and x516 x4651))))
(assert (= x2313 (or x1852 x3708)))
(assert (= 64 (x3376 (x3860 64 x1640 36))))
(assert (= (and x3945 x3324) x3518))
(assert (= x2683 (and x3364 x3665)))
(assert (=> (<= x1838 10000) (= 0 (x25 x1838))))
(assert (x847 x2706))
(assert (< 10000 (x2521 x1315 x438 x1999 x2081 x2159)))
(assert (x847 x5151))
(assert (x847 x5444))
(assert (= x4219 (and (not x4065) x2690)))
(assert (=> (<= x5593 10000) (= 0 (x25 x5593))))
(assert (= (x2143 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326)) x4237))
(assert (= x4924 (x4693 (x3226 x4342 x833 x1763 x4924 x2004 x2713))))
(assert (x847 x4788))
(assert (=> (>= 10000 x4104) (= 0 (x25 x4104))))
(assert (x847 x188))
(assert (= (x3021 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653)) x787))
(assert (x3500 x5606))
(assert (= x2230 (and x1637 x4014)))
(assert (=> (<= x493 10000) (= 0 (x25 x493))))
(assert (= x2302 (or x5033 x2562 x452)))
(assert (= (and x3090 x2302) x1434))
(assert (not (x2689 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39))))
(assert (=> (<= x5023 10000) (= 0 (x25 x5023))))
(assert (x847 x5302))
(assert (not (x2689 (x3860 64 x1370 4))))
(assert (x847 x4797))
(assert (x847 x1295))
(assert (x847 x145))
(assert (= x4879 (x2143 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179))))
(assert (=> (<= x2822 10000) (= (x25 x2822) 0)))
(assert (x847 x2127))
(assert (x847 x4443))
(assert (x847 x1256))
(assert (= x4683 (x1122 (x4159 x2207 x4683 x3234 x5685))))
(assert (x847 x626))
(assert (x847 x135))
(assert (x847 x1589))
(assert (x847 x556))
(assert (= (x3376 (x4159 x1096 x3667 x2006 x5390)) x1096))
(assert (x847 x2594))
(assert (= x3671 (and (not x2513) x4055)))
(assert (x847 x3291))
(assert (=> (>= 10000 x3768) (= (x25 x3768) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218)))
(assert (x847 x3300))
(assert (x379 x272 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3985))
(assert (x847 x313))
(assert (= (x3159 x1903 x552) (x25 (x3159 x1903 x552))))
(assert (= x3044 (x3376 (x3860 x3044 x1116 x5477))))
(assert (x847 x5657))
(assert (= (x3021 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805)) x5074))
(assert (x847 x3053))
(assert (x367 x1924))
(assert (< 10000 (x3860 64 1 x5382)))
(assert (= (x1122 (x2521 x3432 x539 x4357 x5079 x4952)) x539))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x3432 x2682)))
(assert (= x3744 (=> (= x893 (+ x183 x5102)) x1354)))
(assert (x847 x4481))
(assert (=> (<= x2926 10000) (= 0 (x25 x2926))))
(assert (= (or x74 x1416) x5091))
(assert (not (x2689 (x2521 x4348 x3176 x5171 x4615 x2830))))
(assert (x847 x4408))
(assert (= (and x4280 x2709) x3364))
(assert (= x3421 (x2143 (x3226 x1315 x4816 x3421 x3153 x5081 x965))))
(assert (> (x3860 64 x892 3) 10000))
(assert (x847 x100))
(assert (x847 x3277))
(assert (x847 x947))
(assert (=> (<= x2637 10000) (= 0 (x25 x2637))))
(assert (= (and x557 x3464) x2534))
(assert (x367 x1352))
(assert (x847 x5386))
(assert (= (x3573 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)) x1194))
(assert (x2689 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= 0 (x25 3672334990)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x1096 x4988 x5120)))
(assert (not (x2689 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288))))
(assert (x847 x5052))
(assert (= x3432 (x3376 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341))))
(assert (< 10000 (x2521 x2448 x1566 x4600 x3358 x4070)))
(assert (x926 32 (ite (not (= x3886 0)) 1 0)))
(assert (x1411 x255))
(assert (x847 x5308))
(assert (x847 x1554))
(assert (x847 x318))
(assert (< (x3226 x5203 x5129 x1802 x5468 x3611 x249) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5242))
(assert (x847 x3346))
(assert (x847 x1520))
(assert (= (or x4631 x157) x3817))
(assert (= x4610 (x1122 (x3159 x2207 x4610))))
(assert (= (x2521 x4342 x2694 x4688 x654 x501) (x25 (x2521 x4342 x2694 x4688 x654 x501))))
(assert (< 10000 (x3860 64 x4006 6)))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x1828 (x3021 (x3226 x4543 x2021 x5511 x530 x1828 x5030))))
(assert (x847 x2933))
(assert (not (x2689 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122))))
(assert (x847 x3872))
(assert (x847 x1332))
(assert (x847 x2177))
(assert (= x87 (or x2624 x404 x4198 x90 x3482)))
(assert (x2657 x3066))
(assert (x847 x5236))
(assert (x847 x1635))
(assert (= (x25 (x3860 64 x5553 3)) (x3860 64 x5553 3)))
(assert (= (and x1892 x4744) x718))
(assert (x847 x471))
(assert (x847 x5023))
(assert (=> (>= 10000 x5564) (= 0 (x25 x5564))))
(assert (x847 x960))
(assert (x847 x985))
(assert (x3952 x448))
(assert (x3513 (ite (not (= x3237 0)) 1 0)))
(assert (x847 x4451))
(assert (x847 x3565))
(assert (= x2094 (x2143 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218))))
(assert (=> (>= 10000 x4096) (= (x25 x4096) 0)))
(assert (x847 x95))
(assert (not (x2689 (x3860 64 x84 (ite (= x3676 0) x4378 (ite (<= x3676 32) x1353 (ite (<= x3676 64) x447 (ite (>= 96 x3676) x5056 (ite (<= x3676 128) x4778 (ite (>= 160 x3676) x6 (ite (>= 192 x3676) x5336 (ite (>= 224 x3676) x1072 x586))))))))))))
(assert (= x483 (=> (= x3779 x2687) x3653)))
(assert (x847 x5658))
(assert (=> (<= x3358 10000) (= (x25 x3358) 0)))
(assert (x367 x4214))
(assert (x847 x395))
(assert (= x1802 (x2143 (x3226 x5203 x5129 x1802 x5468 x3611 x249))))
(assert (x847 x5367))
(assert (= x1934 (and (not x63) x2195)))
(assert (= 0 (x25 51607134309459761954548520284799282329936326410793501951915747293203005440)))
(assert (x847 x508))
(assert (=> (>= 10000 x4954) (= (x25 x4954) 0)))
(assert (= x4713 (and x5627 (not x2068))))
(assert (=> (<= x4221 10000) (= 0 (x25 x4221))))
(assert (x847 x3169))
(assert (x3952 x2254))
(assert (=> (<= x4871 10000) (= 0 (x25 x4871))))
(assert (x847 x1719))
(assert (x847 x3193))
(assert (= x2018 (=> (= (+ 292 x1683) x2650) x5152)))
(assert (= (and x4081 x2890) x4744))
(assert (= x103 (and (not x1376) x1650)))
(assert (x379 x5489 256))
(assert (=> (>= 10000 x5667) (= (x25 x5667) 0)))
(assert (= (x3573 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)) x4638))
(assert (x847 x4591))
(assert (=> (<= x2187 10000) (= 0 (x25 x2187))))
(assert (x847 x3102))
(assert (not (x2689 (x3860 64 x4547 6))))
(assert (=> (<= x5507 10000) (= 0 (x25 x5507))))
(assert (=> (>= 10000 x1108) (= 0 (x25 x1108))))
(assert (=> (>= 10000 x5687) (= (x25 x5687) 0)))
(assert (x847 x2831))
(assert (=> (>= 10000 x4245) (= (x25 x4245) 0)))
(assert (x847 x1596))
(assert (x847 x1299))
(assert (x847 x5515))
(assert (=> (>= 10000 x330) (= (x25 x330) 0)))
(assert (x847 x2210))
(assert (= (x25 (x3860 64 x5258 36)) (x3860 64 x5258 36)))
(assert (= (or x4426 (and (not x1674) x2874)) x2679))
(assert (x847 x5264))
(assert (x847 x2038))
(assert (= x3075 (and x2451 (not x2554))))
(assert (x847 x4160))
(assert (x847 x2362))
(assert (=> (<= x5171 10000) (= (x25 x5171) 0)))
(assert (x1411 x3276))
(assert (< (x3159 32 x82) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x4147 10000) (= (x25 x4147) 0)))
(assert (x847 x1504))
(assert (x847 x3286))
(assert (= x2006 (x2143 (x4159 x1096 x3667 x2006 x5390))))
(assert (x847 x1178))
(assert (x847 x194))
(assert (= x5081 (x3021 (x3226 x1315 x4816 x3421 x3153 x5081 x965))))
(assert (x847 x480))
(assert (x847 x1694))
(assert (= x5644 (and x5140 x38)))
(assert (x847 x1244))
(assert (x847 x128))
(assert (x847 x3397))
(assert (x847 x4097))
(assert (= (x3376 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599)) x5565))
(assert (x847 x5540))
(assert (> (x3860 x2207 x1508 x5023) 10000))
(assert (x847 x4667))
(assert (x2689 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (not (x2689 (x3860 64 x4092 6))))
(assert (= (x3860 64 x4556 (ite (= 0 x4543) x225 (ite (<= x4543 32) x421 (ite (>= 64 x4543) x1624 (ite (>= 96 x4543) x3640 (ite (>= 128 x4543) x4028 (ite (<= x4543 160) x120 (ite (<= x4543 192) x782 (ite (>= 224 x4543) x115 x5087))))))))) (x25 (x3860 64 x4556 (ite (= 0 x4543) x225 (ite (>= 32 x4543) x421 (ite (<= x4543 64) x1624 (ite (>= 96 x4543) x3640 (ite (<= x4543 128) x4028 (ite (<= x4543 160) x120 (ite (>= 192 x4543) x782 (ite (<= x4543 224) x115 x5087))))))))))))
(assert (< 10000 (x3860 64 x3454 12)))
(assert (x847 x760))
(assert (x3952 x13))
(assert (x847 x2067))
(assert (x847 x468))
(assert (x847 x3585))
(assert (= (=> (= x2785 x1773) x701) x2644))
(assert (x847 x2262))
(assert (=> (<= x1013 10000) (= 0 (x25 x1013))))
(assert (x847 x2990))
(assert (x847 x1997))
(assert (x847 x1408))
(assert (x847 x2795))
(assert (=> (>= 10000 x2835) (= 0 (x25 x2835))))
(assert (x847 x5374))
(assert (=> (<= x4327 10000) (= (x25 x4327) 0)))
(assert (x847 x3995))
(assert (x847 x282))
(assert (= 64 (x3376 (x3860 64 x5553 7))))
(assert (x847 x500))
(assert (= x44 (x1122 (x3226 x1096 x44 x490 x3499 x726 x1233))))
(assert (= (=> (and (and (>= 65535 x1370) (= (x4603 x2649) x4762) (= 2 x4762) (= (= x4393 0) x4714) (= x4448 (x3860 64 1 x1414)) (= x73 (x3610 x4448)) (= x2649 (x3860 64 x3161 11)) (= x1414 (x3860 64 x1370 4))) (or (and (and (not (> x73 x4393)) (= x4393 x5438)) (not x4714)) (and (= x73 x5438) x4714))) x1936) x1286))
(assert (x847 x5189))
(assert (x2657 x3601))
(assert (x847 x4623))
(assert (= x1508 (x1122 (x3860 x2207 x1508 x5023))))
(assert (= 36 (x2143 (x3860 64 x988 36))))
(assert (= (x3376 (x3860 x432 x850 x685)) x432))
(assert (= x4918 (x3573 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045))))
(assert (not (x2689 (x3860 x3676 x1859 x4266))))
(assert (= x816 (and (not x3393) x364)))
(assert (=> (>= 10000 x4995) (= 0 (x25 x4995))))
(assert (x847 x2314))
(assert (x3500 x448))
(assert (= 64 (x3376 (x3860 64 x1370 4))))
(assert (x847 x3499))
(assert (= (x3021 (x2521 x2448 x1566 x4600 x3358 x4070)) x4070))
(assert (=> (<= x4660 10000) (= 0 (x25 x4660))))
(assert (> (x3860 64 x3512 36) 10000))
(assert (x847 x5079))
(assert (x847 x4640))
(assert (= (x2143 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242)) x4567))
(assert (= (x2143 (x3860 x3044 x1116 x5477)) x5477))
(assert (x379 x5204 2))
(assert (< (x3159 32 x2870) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2733))
(assert (x847 x4050))
(assert (< (x3159 32 x2172) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1122 (x3226 x3676 x2719 x3470 x1494 x3634 x5506)) x2719))
(assert (x847 x408))
(assert (not (x2689 (x4159 x1815 x3424 x5041 x1337))))
(assert (x847 x5578))
(assert (x847 x4393))
(assert (< (x3159 x2207 x4610) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4217 (and (not x377) x821)))
(assert (=> (<= x3589 10000) (= (x25 x3589) 0)))
(assert (x847 x3365))
(assert (x847 x3222))
(assert (= x5152 (=> (and (= (x959 (- x2252 (mod (ite (< x2145 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3956) (= (+ x2650 32) x3152) (= x2145 (ite (> x2252 0) x169 (x210 127 x169))) (= (- x2650 132) x1785) (= x5563 (x210 1 x558)) (= (= 0 x5563) x4038) (= x2252 (x210 1 x558)) (or (= x3956 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3956 1)) (= x169 (x4727 x558 2))) (and (=> (and (and (= (x3159 32 104) x2084) (= x1320 (< 0 x2145))) (not x4038)) (and (=> (and (= x1506 0) (not x1320)) x3569) (=> x1320 x3449))) (=> (and x4038 (and (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x558) x2710) (= x5371 (+ x650 x3152)) (or (= x650 0) (= 32 x650)) (= x650 (* 32 (ite (not (= x2145 0)) 1 0))))) x708)))))
(assert (x2689 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x847 x3029))
(assert (x1746 x5223 256))
(assert (x847 x3854))
(assert (x847 x1922))
(assert (x3952 x1109))
(assert (x3952 256))
(assert (x847 x4452))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x148 x4555)))
(assert (=> (>= 10000 x3458) (= (x25 x3458) 0)))
(assert (= (=> (and (= false x849) (= x164 (x4005 x1548)) (= x1548 (x3860 64 x988 36)) (= (+ x988 1) x979) (<= x988 254) (= false x3897) (= x1095 (+ 1 x988))) x482) x2422))
(assert (x3500 x300))
(assert (x847 x5138))
(assert (= x1929 (=> (and (= 0 x2400) (= x1088 (+ 1 x5021)) (= x2993 2) (= x1634 true) (= false x2659) (= x5447 (+ 1 x5021))) x2868)))
(assert (x3952 x4216))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x1903 x2638 x3701)))
(assert (x847 x1249))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (x379 x1312 32))
(assert (x847 x1120))
(assert (x367 x1109))
(assert (x847 x2455))
(assert (= (x1122 (x3860 64 x2483 36)) x2483))
(assert (x847 x1298))
(assert (=> (<= x664 10000) (= 0 (x25 x664))))
(assert (< 10000 (x3159 x2448 x620)))
(assert (x847 x4375))
(assert (x847 x3705))
(assert (= (=> (= x3779 x3406) x3653) x3255))
(assert (x847 x4826))
(assert (< 10000 (x3860 64 x1180 (ite (= 0 x1815) x3715 (ite (<= x1815 32) x2906 (ite (>= 64 x1815) x4726 (ite (<= x1815 96) x3828 (ite (>= 128 x1815) x4681 (ite (>= 160 x1815) x5439 (ite (>= 192 x1815) x3429 (ite (<= x1815 224) x719 x4228)))))))))))
(assert (=> (<= x3583 10000) (= 0 (x25 x3583))))
(assert (= (and (not x4304) x3847) x1269))
(assert (=> (>= 10000 x3122) (= (x25 x3122) 0)))
(assert (= (or x150 x702 x1145 x5096 x1342) x1066))
(assert (x847 x3039))
(assert (x847 x4752))
(assert (x847 x584))
(assert (=> (>= 10000 x1986) (= (x25 x1986) 0)))
(assert (= (and x611 x739) x1836))
(assert (x847 x4222))
(assert (=> (>= 10000 x850) (= 0 (x25 x850))))
(assert (=> (>= 10000 x2039) (= (x25 x2039) 0)))
(assert (x847 x884))
(assert (= (x3376 (x3860 64 x5067 (ite (= x1096 0) x2404 (ite (>= 32 x1096) x4308 (ite (<= x1096 64) x5612 (ite (<= x1096 96) x1642 (ite (<= x1096 128) x2325 (ite (<= x1096 160) x3089 (ite (>= 192 x1096) x2999 (ite (<= x1096 224) x3527 x2635)))))))))) 64))
(assert (< (x3860 64 x4006 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x124))
(assert (x847 x2908))
(assert (x847 x2062))
(assert (x379 x5094 32))
(assert (= (x1122 (x3159 x1903 x552)) x552))
(assert (=> (<= x3293 10000) (= 0 (x25 x3293))))
(assert (x847 x1189))
(assert (x847 x1661))
(assert (= (x25 (x3860 x5565 x2909 x1454)) (x3860 x5565 x2909 x1454)))
(assert (x847 x4845))
(assert (x847 x5601))
(assert (x1411 x2162))
(assert (< 10000 (x4535 0)))
(assert (x847 x2026))
(assert (= (x25 (x3860 64 x547 6)) (x3860 64 x547 6)))
(assert (< 10000 (x3860 64 x988 36)))
(assert (x847 x1493))
(assert (= (x25 (x3159 32 103)) (x3159 32 103)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x5565 x4351 x393 x4551 x1586)))
(assert (x847 x1660))
(assert (=> (>= 10000 x3509) (= (x25 x3509) 0)))
(assert (< (x4159 x148 x3583 x2036 x834) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1327))
(assert (x847 x5165))
(assert (= (x1122 (x3226 x3432 x5408 x1023 x136 x5322 x2442)) x5408))
(assert (x3952 x300))
(assert (x847 x3033))
(assert (x3952 x673))
(assert (x847 x3430))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x365 100)))
(assert (x847 x520))
(assert (x847 x861))
(assert (x847 x826))
(assert (x847 x2301))
(assert (= x2345 (x4693 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805))))
(assert (= x5059 (x1122 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848))))
(assert (x847 x1023))
(assert (x1746 (+ x4919 31) 32))
(assert (x379 x3478 2))
(assert (x847 x1804))
(assert (x379 x5204 256))
(assert (x847 x5102))
(assert (x847 x3109))
(assert (= (or x5591 x1321) x579))
(assert (x847 x915))
(assert (= x4481 (x3573 (x3226 x3044 x1209 x4938 x5515 x3235 x4481))))
(assert (= (=> (and (= (+ x645 32) x3346) (= (ite (> x1408 0) x4321 (x210 127 x4321)) x4949) (= x4725 (x210 1 x5489)) (= (= x4725 0) x3945) (= (x4727 x5489 2) x4321) (= x135 (- x645 132)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4389) (= x4389 1)) (= (x210 1 x5489) x1408) (= x4389 (x959 (- x1408 (mod (ite (> 32 x4949) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (=> (and (and (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5489) x4641) (= (* 32 (ite (not (= x4949 0)) 1 0)) x3427) (= (+ x3427 x3346) x2848) (or (= 0 x3427) (= 32 x3427))) x3945) x3061) (=> (and (not x3945) (and (= (x3159 32 104) x2074) (= (< 0 x4949) x4513))) (and (=> x4513 x3334) (=> (and (not x4513) (= x1018 0)) x3657))))) x1584))
(assert (x847 x787))
(assert (x847 x2680))
(assert (= (x2143 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)) x1638))
(assert (x847 x3189))
(assert (x847 x5038))
(assert (x847 x111))
(assert (=> (<= x4938 10000) (= 0 (x25 x4938))))
(assert (not (x2689 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245))))
(assert (=> (>= 10000 x5574) (= 0 (x25 x5574))))
(assert (= 3 (x2143 (x3860 64 x1370 3))))
(assert (x847 x5330))
(assert (= (x3376 (x3860 64 x2862 36)) 64))
(assert (x847 x4774))
(assert (= (x2143 (x2521 x5565 x4351 x393 x4551 x1586)) x393))
(assert (= x5360 (and x1171 x4783)))
(assert (=> (<= x1580 10000) (= (x25 x1580) 0)))
(assert (x1456 x3601))
(assert (= (x1122 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)) x3219))
(assert (= (x1122 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245)) x1197))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4159 x3432 x4959 x4429 x3224)))
(assert (x847 x1377))
(assert (x847 x1784))
(assert (x847 x808))
(assert (=> (>= 10000 x4149) (= 0 (x25 x4149))))
(assert (= (x4985 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)) x3589))
(assert (x847 x2605))
(assert (=> (<= x4190 10000) (= (x25 x4190) 0)))
(assert (=> (<= x5024 10000) (= 0 (x25 x5024))))
(assert (x847 x3807))
(assert (= (or x269 x1721) x5628))
(assert (x847 x4285))
(assert (= x5487 (=> (and (= x3336 x3712) (= x1305 x4043) (= x1294 x3598) (= x1640 x759) (= x4637 x2373) (= x3831 x5243) (= x3601 x3253) (= x3696 x494) (= x1348 x4462) (= x2918 x1499) (= x5038 x1370) (= x355 x314) (= x558 x3146)) x5596)))
(assert (= (x3021 (x3226 x432 x5646 x1826 x4314 x4147 x1743)) x4147))
(assert (x847 x1199))
(assert (=> (>= 10000 x1315) (= (x25 x1315) 0)))
(assert (not (x2689 (x3860 64 x547 6))))
(assert (= x148 (x3376 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051))))
(assert (x847 x5681))
(assert (x926 32 x1234))
(assert (> (x3159 x1315 x369) 10000))
(assert (> (x3860 64 x735 36) 10000))
(assert (= (and x2138 (not x5358)) x90))
(assert (x847 x749))
(assert (x926 32 x3737))
(assert (x847 x3146))
(assert (x847 x2103))
(assert (= (=> (and (= (<= x4348 224) x2109) (= (x5509 x3590) x4348)) (and (=> (and (= (x2124 (+ 64 x2908)) x1514) (= (x2124 (+ 96 x2908)) x1388) (= (x2124 (+ x2908 32)) x3702) (= x4615 (x5509 x5502)) (= (x2124 (+ 32 x2908)) x5622) (= (x5509 x1534) x5171) (= (x2124 (+ x2908 128)) x2202) (= x4371 (ite (= x4348 0) x2977 (ite (>= 32 x4348) x648 (ite (>= 64 x4348) x229 (ite (<= x4348 96) x3457 (ite (<= x4348 128) x4544 (ite (<= x4348 160) x1487 (ite (<= x4348 192) x1075 (ite (<= x4348 224) x1713 x827))))))))) (= (x3860 x4348 x1032 x4395) x229) (= (x5509 x1897) x2407) (= (x4159 x4348 x4687 x4734 x4970) x3457) (= (x2124 (+ 96 x2908)) x4705) (= (x5509 x2908) x3986) (= x4395 (x5509 x5622)) (= x869 (x5509 x2202)) (= (x5509 x1514) x1343) (= x4557 (x5509 x1557)) (= x1534 (x2124 (+ 32 x2908))) (= (x5509 x2908) x3245) (= (x5509 x5579) x3999) (= (x2124 (+ 160 x2908)) x3751) (= x648 (x3159 x4348 x330)) (= x3688 (x2124 (+ x2908 64))) (= (x5509 x1661) x2200) (= x4074 (x2124 (+ 96 x2908))) (= x4734 (x5509 x1617)) (= (x5509 x2908) x4687) (= x1897 (x2124 (+ x2908 64))) (= (x5509 x5303) x2242) (= x1039 (x2124 (+ 64 x2908))) (= (x5509 x2489) x4068) (= (x2124 (+ 32 x2908)) x4834) (= (x5509 x4074) x325) (= x4544 (x2521 x4348 x3176 x5171 x4615 x2830)) (= (x4535 0) x2977) (= (x5509 x31) x1984) (= x31 (x2124 (+ x2908 96))) (= x4567 (x5509 x4834)) (= (x2124 (+ 64 x2908)) x5502) (= x1661 (x2124 (+ 128 x2908))) (= x1453 (x5509 x4251)) (= x1032 (x5509 x2908)) (= (x5509 x2908) x398) (= x3176 (x5509 x2908)) (= x1873 (x3860 64 x5553 7)) (= x1713 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453)) (= x4251 (x2124 (+ x2908 192))) (= (x2124 (+ 32 x2908)) x1617) (= (x2124 (+ x2908 128)) x2489) (= x5579 (x2124 (+ x2908 32))) (= (x5509 x3702) x2119) (= x5303 (x2124 (+ 160 x2908))) (= (x5509 x4705) x2830) (= x4842 (< 0 x4557)) (= (x5509 x3751) x206) (= x330 (x5509 x2908)) (= (x5509 x1388) x578) (= (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242) x1075) (= x1487 (x3226 x4348 x3986 x2119 x1343 x1984 x2200)) (= (x5509 x3688) x4970) (= x2110 (x5509 x1039))) (and (=> (and x4842 (and (= (< 32 x4557) x5241) (= x2031 (x5509 x124)))) (and (=> (not x5241) x4595) (=> (and x5241 (and (= (< 64 x4557) x3218) (= x2485 (x2124 (+ x4709 32))) (= (x2124 (+ 32 x124)) x436) (= x1091 (x5194 x436)))) (and (=> (not x3218) x4595) (=> (and (and (= (x5599 x2810) x5248) (= x5064 (< 96 x4557)) (= x5394 (x2124 (+ x4709 64))) (= (x2124 (+ 64 x124)) x2810)) x3218) (and (=> x5064 x2724) (=> (not x5064) x4595))))))) (=> (not x4842) x4595))) x2109)) x2691))
(assert (= (x1122 (x3860 64 x3215 10)) x3215))
(assert (= 64 (x3376 (x3860 64 x2366 12))))
(assert (= (and x4912 (not x2948)) x5150))
(assert (x847 x4327))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x1370 5)))
(assert (x847 x966))
(assert (x3952 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x847 x5553))
(assert (x847 x5207))
(assert (= x1838 (x2143 (x3860 x4342 x3072 x1838))))
(assert (x847 x4745))
(assert (= (x2143 (x3860 64 x1298 10)) 10))
(assert (x847 x979))
(assert (= 0 (x25 3963877391197344453575983046348115674221700746820753546331534351508065746944)))
(assert (x847 x258))
(assert (= x5260 (x3021 (x2521 x1903 x1952 x4756 x5354 x5260))))
(assert (x847 x4002))
(assert (= (or x4886 x1181 x2819) x1542))
(assert (x367 x300))
(assert (= (and x2519 x1306) x3174))
(assert (x847 x4229))
(assert (x847 x1916))
(assert (x847 x4992))
(assert (=> (>= 10000 x1529) (= 0 (x25 x1529))))
(assert (= x4198 (and (not x3984) x4093)))
(assert (x847 x822))
(assert (=> (<= x1180 10000) (= 0 (x25 x1180))))
(assert (x847 x4039))
(assert (x847 x2229))
(assert (=> (>= 10000 x477) (= (x25 x477) 0)))
(assert (x847 x305))
(assert (x847 x1860))
(assert (= 0 (x25 2770781680)))
(assert (x1063 x4321))
(assert (x847 x4764))
(assert (x847 x5047))
(assert (x847 x3191))
(assert (=> (<= x2631 10000) (= 0 (x25 x2631))))
(assert (> (x3860 x148 x5527 x2105) 10000))
(assert (=> (<= x2107 10000) (= (x25 x2107) 0)))
(assert (x367 x4877))
(assert (x847 x3580))
(assert (x1746 x4243 2))
(assert (= 1 (x1122 (x3860 64 1 x1414))))
(assert (x847 x3110))
(assert (x847 x978))
(assert (x1746 x3601 2))
(assert (= x4485 (or x5091 x5144)))
(assert (= (x25 4294967358) 0))
(assert (x847 x5303))
(assert (x847 x5006))
(assert (x926 32 (ite (not (= 0 x3260)) 1 0)))
(assert (=> (>= 10000 x1919) (= 0 (x25 x1919))))
(assert (x847 x3587))
(assert (= (=> (and (= (x15 128) x4098) (= (<= x4098 224) x3593)) (and (=> (and (= x3433 (x3159 x4098 x76)) (= x2174 (x15 288)) (= x5077 (x15 224)) (= x1228 (x15 192)) (= (x15 160) x1338) (= (x15 160) x5536) (= (x15 224) x5028) (= (x15 192) x298) (= (x2521 x4098 x1938 x750 x5028 x1626) x2530) (= x4838 (x15 160)) (= (x15 256) x1152) (= (x15 192) x1646) (= (x15 224) x5013) (= (x15 256) x2835) (= (x15 160) x1938) (= x76 (x15 160)) (= x3041 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978)) (= (x3860 x4098 x1119 x1646) x1386) (= (x15 192) x2072) (= (x15 192) x3691) (= x3291 (x15 288)) (= x1626 (x15 256)) (= x1830 (x15 320)) (= x553 (x15 224)) (= x2425 (x4159 x4098 x5536 x1228 x5013)) (= x4263 (x15 288)) (= (x15 320) x2978) (= (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666) x4635) (= (x15 224) x1994) (= x2828 (x4535 0)) (= (x3226 x4098 x1853 x3691 x5077 x2945 x4263) x3919) (= x2666 (x15 352)) (= x3361 (x2124 (+ x696 x2059))) (= (x15 192) x750) (= (x15 256) x2945) (= x4001 (ite (= x4098 0) x2828 (ite (<= x4098 32) x3433 (ite (>= 64 x4098) x1386 (ite (>= 96 x4098) x2425 (ite (<= x4098 128) x2530 (ite (<= x4098 160) x3919 (ite (>= 192 x4098) x3041 (ite (>= 224 x4098) x4635 x5574))))))))) (= x2461 (<= x696 224)) (= x1119 (x15 160)) (= (x15 160) x1853)) (and (=> (and (= (x3270 x4354) x1684) (= x4903 (x3270 x3989)) (= (x4159 x696 x1198 x1113 x1529) x1333) (= x2171 (x3270 x1589)) (= (x3270 x3396) x1775) (= (ite (= 0 x696) x3870 (ite (>= 32 x696) x4017 (ite (<= x696 64) x4080 (ite (>= 96 x696) x1333 (ite (<= x696 128) x4079 (ite (>= 160 x696) x5370 (ite (<= x696 192) x1330 (ite (>= 224 x696) x18 x3187)))))))) x5208) (= x991 (x3270 x2059)) (= (x3860 x696 x1128 x5666) x4080) (= (x3270 x563) x3382) (= x4927 (x2124 (+ x2059 32))) (= x5209 (x3270 x3969)) (= x1299 (x2124 (+ x2059 160))) (= (x3270 x2059) x3109) (= (x3270 x2752) x5111) (= x1198 (x3270 x2059)) (= (x3270 x1299) x4801) (= x4079 (x2521 x696 x4699 x2887 x2595 x4903)) (= (x2124 (+ 96 x2059)) x4354) (= x307 (x2124 (+ x2059 64))) (= x1428 (x2124 (+ x2059 64))) (= x1723 (x2124 (+ x2059 32))) (= x1366 (x2124 (+ x2059 128))) (= (x3270 x5100) x2887) (= x5666 (x3270 x4927)) (= x563 (x2124 (+ 192 x2059))) (= x5100 (x2124 (+ 32 x2059))) (= x18 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)) (= x5208 x4001) (= (x2124 (+ 64 x2059)) x3969) (= x4724 (x3270 x1766)) (= (x3226 x696 x3109 x5052 x5209 x5111 x1775) x5370) (= (x3270 x2059) x2714) (= (x2124 (+ 32 x2059)) x1796) (= x567 (x2124 (+ x2059 32))) (= x2610 (x2124 (+ x2059 32))) (= (x3270 x567) x951) (= (x2124 (+ 128 x2059)) x3396) (= (x2124 (+ 128 x2059)) x1589) (= (x4535 0) x3870) (= (x2124 (+ x2059 160)) x3993) (= x2595 (x3270 x1428)) (= (x3270 x3993) x5009) (= x5589 (x2124 (+ 64 x2059))) (= (x3270 x5589) x1138) (= (x3270 x2059) x4704) (= (x3270 x2059) x4699) (= (x3270 x1366) x1580) (= x2752 (x2124 (+ x2059 96))) (= (x3159 x696 x2714) x4017) (= x1529 (x3270 x307)) (= x1243 (x3270 x2610)) (= x1113 (x3270 x1723)) (= x2751 (x2124 (+ x2059 96))) (= (x3270 x2751) x5568) (= (x3270 x2059) x1128) (= (x2124 (+ x2059 64)) x1766) (= x1330 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009)) (= x5052 (x3270 x1796)) (= x3989 (x2124 (+ 96 x2059)))) x1483) x2461)) x3593)) x4978))
(assert (=> (<= x159 10000) (= 0 (x25 x159))))
(assert (> (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523) 10000))
(assert (x847 x1603))
(assert (< 10000 (x3860 64 x1328 10)))
(assert (x847 x5400))
(assert (= (x3573 (x3226 x1815 x4992 x4534 x3294 x3404 x312)) x312))
(assert (= (x4693 (x3226 x3676 x2719 x3470 x1494 x3634 x5506)) x1494))
(assert (x847 x1284))
(assert (x847 x4054))
(assert (x847 x581))
(assert (= x4093 (and x778 x310)))
(assert (x847 x4809))
(assert (x847 x1765))
(assert (= (x25 486791245) 0))
(assert (x847 x916))
(assert (< (x3860 64 1 x1414) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x405))
(assert (x1411 x3549))
(assert (x847 x1073))
(assert (= (and (not x1728) x4195) x1852))
(assert (x847 x1815))
(assert (=> (<= x365 10000) (= 0 (x25 x365))))
(assert (= 0 (x25 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898)))
(assert (x847 x2411))
(assert (x847 x3153))
(assert (= 32 (x3376 (x3159 32 103))))
(assert (= x1208 (=> (and (= x2658 (x2124 (+ x133 32))) (= (x2124 (+ x2320 32)) x3323) (= x1502 (x3860 64 x3161 11)) (= (x959 (- x3023 32)) x388) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2320) (= (+ 2 x1854) x3474) (= x2853 (x959 (- x5151 x1025))) (= x1854 (x3860 64 x3161 11)) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1025) (<= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639838)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x1025) (<= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639773)) (> x5151 x1025) (= (x3860 64 x1370 3) x2172) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1025) (= x4373 (x2124 (+ x5151 32))) (= 0 x762) (= (x959 (- x2320 x5151)) x3023) (or (>= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1025) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x1025)) (<= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639773)) (= x5615 (x2124 (+ x2320 (mod (+ 32 x3752) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3272 (x3860 64 x3161 11)) (= x5651 (x210 1 x3413)) (<= 1 x5615) (= (x2124 (+ 32 x2658)) x5151) (= x1143 (x2124 (+ x4373 2))) (= (x2124 (+ 32 x1143)) x2320) (<= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x3752 (* 32 x4467)) (< x5151 x2320) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x1025) (and (<= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x1025)) (= x3114 (x4727 x3413 2)) (= x4827 (x959 (- x2853 32))) (= (x2781 x2675) x4484) (<= x2320 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2320) (= (+ 1 x3272) x2675) (= x4467 (x4727 (+ 31 x5625) 32)) (= x573 (= x5625 0)) (= x133 (x2124 (+ x1025 32))) (= x3413 (x2865 x2172)) (= x2764 (x481 x3474)) (= (ite (< 0 x5651) x3114 (x210 127 x3114)) x5625) (= x3096 (x959 (- x5651 (mod (ite (> 32 x5625) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1025) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3096) (= x3096 1)) (< x2320 x5615)) (and (=> x573 x1142) (=> (and (not x573) (= x2087 (< 31 x5625))) (and (=> (and x2087 (and (= x5078 (x3159 32 x2172)) (= x4571 (x2124 (+ x3323 32))) (= (+ x5078 1) x5414) (= x70 (x3342 x5078)) (= x5249 (x2124 (+ x5625 x3323))) (= x1715 (< x4571 x5249)))) (and (=> x1715 x3263) (=> (not x1715) x4329))) (=> (and (and (= x5223 (x2865 x2172)) (= (x4727 x5223 256) x471) (= x2131 (* x471 256))) (not x2087)) x1142)))))))
(assert (= (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39) (x25 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39))))
(assert (x847 x632))
(assert (x847 x360))
(assert (x847 x69))
(assert (x847 x3859))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (=> (<= x4843 10000) (= (x25 x4843) 0)))
(assert (x3500 x13))
(assert (x2657 (+ 31 x2569)))
(assert (=> (<= x4928 10000) (= 0 (x25 x4928))))
(assert (= (=> (and (= x860 x314) (= x3979 x4462) (= x4637 x1464) (= x3253 x451) (= x759 x1691) (= x3102 x4043) (= x3146 x2882) (= x3598 x2149) (= x5038 x3561) (= x3696 x5534) (= x3189 x3336) (= x1232 x2918) (= x3300 x5243)) x5487) x3652))
(assert (= (or x773 x653) x3558))
(assert (= (x3573 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)) x1985))
(assert (= (x1122 (x3159 x5565 x4597)) x4597))
(assert (= x299 (x2715 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299))))
(assert (x847 x1680))
(assert (= x1292 (or x1167 x2849)))
(assert (x847 x4374))
(assert (= (x1122 (x3159 32 103)) 103))
(assert (= x4543 (x3376 (x3226 x4543 x2021 x5511 x530 x1828 x5030))))
(assert (= (x4693 (x4159 x3676 x3428 x1108 x5491)) x5491))
(assert (=> (>= 10000 x4070) (= 0 (x25 x4070))))
(assert (x847 x5470))
(assert (= (x4985 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453)) x1453))
(assert (x847 x3608))
(assert (x847 x2250))
(assert (x847 x2813))
(assert (x847 x1095))
(assert (= (and x5131 x1676) x394))
(assert (= 64 (x3376 (x3860 64 x4556 (ite (= x4543 0) x225 (ite (<= x4543 32) x421 (ite (>= 64 x4543) x1624 (ite (>= 96 x4543) x3640 (ite (>= 128 x4543) x4028 (ite (>= 160 x4543) x120 (ite (<= x4543 192) x782 (ite (<= x4543 224) x115 x5087))))))))))))
(assert (x847 x73))
(assert (x847 x2012))
(assert (x847 x1222))
(assert (= (and x1274 x4498) x274))
(assert (x847 x2584))
(assert (x847 x5293))
(assert (x847 x4909))
(assert (= (x3376 (x3159 x5203 x4995)) x5203))
(assert (= 64 (x3376 (x3860 64 x892 4))))
(assert (= (x25 (x3159 32 x82)) (x3159 32 x82)))
(assert (= (x2521 x3044 x3970 x518 x1635 x4479) (x25 (x2521 x3044 x3970 x518 x1635 x4479))))
(assert (= x2110 (x4693 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453))))
(assert (= 1 (x1122 (x3860 64 1 x2672))))
(assert (x1411 x2256))
(assert (= x375 (and x3328 (not x2500))))
(assert (=> (<= x84 10000) (= (x25 x84) 0)))
(assert (x847 x5535))
(assert (=> (>= 10000 x2599) (= (x25 x2599) 0)))
(assert (x847 x4142))
(assert (= (x4693 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523)) x2204))
(assert (= x2631 (x3573 (x3226 x5565 x406 x603 x3458 x5690 x2631))))
(assert (x379 x392 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3484))
(assert (= x5486 (and x5263 (not x5148))))
(assert (x847 x5030))
(assert (= (x3860 64 x1245 11) (x25 (x3860 64 x1245 11))))
(assert (x847 x2303))
(assert (x847 x3604))
(assert (x847 x441))
(assert (= (x25 (x3159 x4348 x330)) (x3159 x4348 x330)))
(assert (not (x2689 (x3860 64 x5258 36))))
(assert (= (x2143 (x3860 x3676 x1859 x4266)) x4266))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432)))
(assert (= 0 (x25 1766847064778384329583297500742918515827483896875618958121606201292619776)))
(assert (x847 x5177))
(assert (x847 x810))
(assert (= (or x297 x5365 x691 x1457 x798 x4457 x3441 x5416 x1791 x3330) x1442))
(assert (= x1437 x856))
(assert (x847 x5455))
(assert (x847 x3419))
(assert (x847 x1566))
(assert (x2689 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (x2689 29244376827073035548771643948814531551534385112760475998805679327281764368384))
(assert (x847 x2426))
(assert (x847 x3492))
(assert (=> (<= x3197 10000) (= 0 (x25 x3197))))
(assert (x847 x4202))
(assert (x847 x5580))
(assert (x847 x5024))
(assert (=> (<= x1719 10000) (= (x25 x1719) 0)))
(assert (< (x4159 x4221 x2768 x1986 x3430) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2775))
(assert (=> (<= x3228 10000) (= 0 (x25 x3228))))
(assert (x847 x2719))
(assert (x847 x4950))
(assert (= (x3376 (x4159 x1815 x3424 x5041 x1337)) x1815))
(assert (x847 x4431))
(assert (x3952 x4862))
(assert (= (x25 3313512704) 0))
(assert (x1411 x619))
(assert (x847 x2381))
(assert (x847 x503))
(assert (=> (<= x4683 10000) (= 0 (x25 x4683))))
(assert (= (and (not x3572) x2383) x452))
(assert (x847 x214))
(assert (= x4195 (and x1302 (not x3730))))
(assert (x847 x3120))
(assert (x847 x1008))
(assert (= (x3376 (x3226 x4348 x3986 x2119 x1343 x1984 x2200)) x4348))
(assert (=> (>= 10000 x422) (= (x25 x422) 0)))
(assert (=> (<= x1291 10000) (= 0 (x25 x1291))))
(assert (x367 x4216))
(assert (x3500 x392))
(assert (x847 x833))
(assert (= x4489 (and x5627 x2068)))
(assert (x847 x4289))
(assert (= x2448 (x3376 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653))))
(assert (x847 x2714))
(assert (=> (<= x2255 10000) (= (x25 x2255) 0)))
(assert (x847 x122))
(assert (< 10000 (x2521 x3044 x3970 x518 x1635 x4479)))
(assert (=> (<= x1586 10000) (= (x25 x1586) 0)))
(assert (= (x3860 64 x2862 36) (x25 (x3860 64 x2862 36))))
(assert (= (x4693 (x4159 x1315 x2398 x4416 x4434)) x4434))
(assert (=> (>= 10000 x4924) (= (x25 x4924) 0)))
(assert (not (x2689 (x4159 x2207 x4683 x3234 x5685))))
(assert (x847 x2811))
(assert (= x5093 (and x5528 x2151)))
(assert (= (x3376 (x3860 64 x4547 6)) 64))
(assert (x847 x4140))
(assert (= (=> (and (>= 127 x3298) (<= x3298 127) (= x132 (x163 x4268)) (= (x959 (- x1096 32)) x5565) (= x3182 (+ 31 x2840)) (= 164 x3775) (not (> x4402 x619)) (= x288 x4828) (<= x4919 18446744073709551615) (= x5067 x3797) (= x4353 (x163 x4268)) (= (+ 128 x4919) x3591) (= (+ x4676 x4813) x4402) (>= x4186 1) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x619) (= x4759 x4071) (= x3770 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= (x2015 x4162) x4186) (= 128 x4199) x1915 (= x3940 (x163 x1499)) (>= 18446744073709551615 x4813) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4051 x329)) (<= x4071 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2439 x619) (= x1782 3521034783) (<= 196 x2439) (= false x3283) (= x3325 false) (>= x4071 0) (= (- x4353 x4051) x3046) (< (+ x4051 x3940) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x619 x3182) (= x2439 (x959 (- x2169 128))) (= (+ x329 x4051) x4071) (<= x2439 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x2015 x1499) x3547) (<= x4051 x132) (<= 1 x3547) (= 128 x2113) (= (= (x3352 132) x3886) x1915) (= (x1373 x1499) x329) (= (x2952 x2840) x4813) (<= 196 x619) (= (+ 4 x1598) x2840) (= x3398 (x3860 64 x4828 7)) (= x743 (>= 224 x5565)) (= x4676 (+ x2840 32)) (not (< x619 x3131)) (= x3131 (+ 164 x4919)) (= x1598 x2727) (= (x2952 132) x4919) (= x2297 (+ x4919 128)) (= x1096 (x959 (- (mod (+ 32 x2297) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)))) (and (=> (and (= x406 (x3772 128)) (= (x3772 128) x2409) (= (x3772 192) x405) (= x3137 (x3772 128)) (= (x3772 128) x4351) (= (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599) x78) (= (x3772 288) x2599) (= x1586 (x3772 224)) (= (x3772 192) x3458) (= x380 (x3159 x5565 x4597)) (= x1738 (x2521 x5565 x4351 x393 x4551 x1586)) (= (x3772 160) x603) (= (x3772 160) x393) (= x3761 (x3772 288)) (= (x3772 192) x906) (= (x3772 160) x1454) (= (x3772 128) x2909) (= x3076 (x3772 224)) (= (x4535 0) x4679) (= (x3772 160) x2399) (= x5690 (x3772 224)) (= x4053 (x3772 160)) (= x2631 (x3772 256)) (= (ite (= 0 x5565) x4679 (ite (<= x5565 32) x380 (ite (<= x5565 64) x4686 (ite (>= 96 x5565) x5478 (ite (>= 128 x5565) x1738 (ite (>= 160 x5565) x4196 (ite (<= x5565 192) x78 (ite (>= 224 x5565) x3412 x3228)))))))) x5039) (= (x3772 160) x3545) (= x5478 (x4159 x5565 x3137 x4053 x405)) (= (x3860 x5565 x2909 x1454) x4686) (= (x3772 224) x3768) (= (x3772 192) x4721) (= (x3772 320) x1201) (= (x3772 256) x5024) (= (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201) x3412) (= (x3226 x5565 x406 x603 x3458 x5690 x2631) x4196) (= (x3772 128) x4597) (= (x3772 256) x3327) (= (>= 224 x1096) x158) (= x4551 (x3772 192)) (= x4946 (x3772 128))) (and (=> (and (= (x3772 128) x3667) (= x2902 (+ x4813 128)) (= x1013 (x3772 128)) (= x156 (x3772 192)) (= (x3772 128) x4660) (= (x959 (- x2902 128)) x2207) (= x5231 (x3772 224)) (= x4988 (x3772 128)) (= x1233 (x3772 256)) (= x2999 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)) (= x726 (x3772 224)) (= (x3772 192) x3499) (= (x3159 x1096 x4660) x4308) (= (x3772 256) x2900) (= x3089 (x3226 x1096 x44 x490 x3499 x726 x1233)) (= (x4535 0) x2404) (= x3719 (x3772 128)) (= x5390 (x3772 192)) (= (x5677 x4503) x2122) (= (x3772 160) x5583) (= x2558 (x3772 288)) (= x1618 (x3772 288)) (= x3527 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635)) (= (x3772 160) x490) (= x2325 (x2521 x1096 x3719 x311 x156 x1940)) (= x1192 (x3772 192)) (>= x2122 1) (= x4503 (x3860 64 x5067 (ite (= x1096 0) x2404 (ite (>= 32 x1096) x4308 (ite (>= 64 x1096) x5612 (ite (<= x1096 96) x1642 (ite (<= x1096 128) x2325 (ite (>= 160 x1096) x3089 (ite (>= 192 x1096) x2999 (ite (>= 224 x1096) x3527 x2635)))))))))) (= (>= 224 x2207) x820) (= x2006 (x3772 160)) (= (x3772 224) x2339) (= (x4159 x1096 x3667 x2006 x5390) x1642) (= x44 (x3772 128)) (= x5120 (x3772 160)) (= x1468 (x3772 192)) (= x3635 (x3772 320)) (= (x3860 x1096 x4988 x5120) x5612) (= (x3772 160) x311) (= x838 (x3772 128)) (= x2101 (x3772 256)) (= x1940 (x3772 224)) (= (x3772 160) x493)) (and x820 (=> (and (= (x1221 128) x1719) (= x4262 (x1221 288)) (= (x1221 192) x2454) (= (x959 (- x1903 32)) x4221) (= x2387 x2122) (= (+ 128 x4919) x2738) (= x498 (x1221 256)) (= x3122 (x1221 320)) (= x5685 (x1221 192)) (= (x1221 192) x5520) (= (x1221 160) x4869) (= x4050 (x1221 256)) (= x2387 (ite (= 0 x2207) x5686 (ite (<= x2207 32) x2042 (ite (>= 64 x2207) x2753 (ite (>= 96 x2207) x5538 (ite (<= x2207 128) x646 (ite (<= x2207 160) x1581 (ite (>= 192 x2207) x3390 (ite (>= 224 x2207) x612 x2038))))))))) (>= x2387 1) (= x5538 (x4159 x2207 x4683 x3234 x5685)) (= (x4535 0) x5686) (= x2460 (x1221 224)) (= (x1221 128) x3010) (= (x1221 160) x5023) (= (x1221 224) x1300) (= (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122) x612) (= (x1221 128) x3088) (= (x3159 x2207 x4610) x2042) (= (x3226 x2207 x3010 x1273 x2454 x3720 x4050) x1581) (= (x1221 160) x1115) (= x3087 (<= x4221 224)) (= x915 (x1221 192)) (= (x1221 128) x1508) (= (x3860 64 x4828 7) x3144) (= (x1221 224) x3720) (= (x1221 256) x43) (= (x1221 128) x4610) (= (x3860 x2207 x1508 x5023) x2753) (= x2892 (x1221 128)) (= (x1221 160) x3234) (= (x1221 128) x4683) (= x1903 (x959 (- (mod (+ x2738 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128))) (= x1273 (x1221 160)) (= (x2521 x2207 x2892 x4869 x5520 x1300) x646) (= (+ 128 x4919) x5127) (= (x1221 160) x3790) (= x4279 (x1221 192)) (= x4973 (x1221 288)) (= x3390 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262)) (= (x1221 224) x1922)) (and x3087 (=> (and (= (x4758 224) x1229) (= (x4758 160) x1073) (= (x4758 160) x3978) (= x2997 (x4758 128)) (= (x4758 224) x3542) (= (x4758 160) x562) (= (x4758 192) x1070) (= x4624 (x4758 224)) (= (<= x1903 224) x1371) (= (x4758 128) x4190) (= x4370 (x4159 x4221 x2768 x1986 x3430)) (= x1638 (x4758 160)) (= (x4758 128) x995) (= (x4758 160) x4928) (= x1207 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)) (= (x4758 288) x299) (= x858 (x2521 x4221 x995 x4928 x1070 x2187)) (= x4297 (x4758 128)) (= x2111 (x4535 0)) (= (x4758 128) x2768) (= (x4758 160) x1986) (= x4999 (x4758 128)) (= (x3159 x4221 x4190) x1526) (= (x3226 x4221 x4999 x562 x2941 x3542 x3661) x5342) (= x2187 (x4758 224)) (= x4415 (x4758 192)) (= (x4758 320) x755) (= (x4758 256) x715) (= x3465 (x4758 128)) (= (x4758 192) x2941) (= (x3860 x4221 x4297 x3978) x1609) (= (x4758 192) x1919) (= x35 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)) (= x4435 (ite (= 0 x4221) x2111 (ite (<= x4221 32) x1526 (ite (>= 64 x4221) x1609 (ite (<= x4221 96) x4370 (ite (<= x4221 128) x858 (ite (<= x4221 160) x5342 (ite (<= x4221 192) x1207 (ite (>= 224 x4221) x35 x2504))))))))) (= x477 (x4758 288)) (= x3430 (x4758 192)) (= (x4758 256) x3661) (= (x4758 256) x3856)) (and (not (and (= (* 32 x4549) x4511) (= (x4758 192) x4149) (= x2443 (x3159 x1903 x552)) (= x2049 (x4758 224)) (= x3257 (+ x2007 32)) (= (x4758 160) x4605) (= x4549 (x4727 (+ 31 x4919) 32)) (= x2572 (x4758 192)) (= (x4758 224) x2218) (= x5373 (x4535 0)) (= (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207) x1623) (= (x4758 128) x3995) (= x1265 (x4758 256)) (= (+ x517 32 x2007) x5541) (= x3293 (x4758 160)) (>= x1909 32) (= (x4727 (+ 31 x4813) 32) x3381) (= x3927 (x3860 64 x5067 (ite (= x1903 0) x5373 (ite (>= 32 x1903) x2443 (ite (<= x1903 64) x3423 (ite (>= 96 x1903) x1087 (ite (<= x1903 128) x2408 (ite (<= x1903 160) x1780 (ite (<= x1903 192) x1623 (ite (<= x1903 224) x2859 x2352)))))))))) (= x2007 (+ x4511 160)) (= x2859 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326)) (= x1106 (x4758 224)) (= (x4758 224) x5260) (= x4237 (x4758 160)) (= (x3860 x1903 x2638 x3701) x3423) (= x2146 (x4758 192)) (= x517 (* 32 x3381)) (= (x4758 128) x3431) (= x5277 (x3860 64 x3215 10)) (= x1952 (x4758 128)) (= x326 (x4758 320)) (= (x4758 128) x864) (= x3004 (+ x3257 x4813)) (= (x2521 x1903 x1952 x4756 x5354 x5260) x2408) (= x2975 128) (= (x4758 256) x1412) (= (x3186 x3257) x3215) (= x3509 (x4758 128)) (= (x4758 256) x4474) (= x2638 (x4758 128)) (= (x4758 192) x5354) (= x1780 (x3226 x1903 x864 x3293 x4149 x2049 x4474)) (= x5181 (x4758 288)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1909) (= x1087 (x4159 x1903 x3509 x4605 x5499)) (= x4756 (x4758 160)) (> x5541 x2007) (= x5207 (x4758 288)) (= (x4758 192) x5499) (= (x3186 x2007) x1909) (= x3028 (+ x4919 160)) (= x552 (x4758 128)) (= x4013 (x4758 160)) (= (x4758 160) x3701))) x1371)))))) x158)) x743)) x2528))
(assert (= (=> (and (= x1765 (x3342 x3921)) (= x857 (not (< 224 x802)))) (and x857 x3378)) x5624))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009)))
(assert (x847 x5068))
(assert (= (x25 (x3860 64 1 x2672)) (x3860 64 1 x2672)))
(assert (x847 x4538))
(assert (x847 x2602))
(assert (= (x3376 (x2521 x1315 x438 x1999 x2081 x2159)) x1315))
(assert (x379 x3480 128))
(assert (not (x2689 (x2521 x4543 x4410 x1883 x2314 x1866))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x1903 x552)))
(assert (x847 x5634))
(assert (= (=> (= x908 (> (ite (= x3551 0) x3551 1) 0)) (and (=> (and (and (= x4573 (= x1189 0)) (or x4573 (not x4573))) (not x908)) x3242) (=> x908 x1545))) x41))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x4909 36)))
(assert (not (x2689 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175))))
(assert (= x3324 (or x3472 x2334)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x5214 12)))
(assert (= (x25 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009)) (x3619 x696 x991 x951 x1138 x1684 x2171 x5009)))
(assert (x847 x5258))
(assert (> (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755) 10000))
(assert (= (x3021 (x3226 x148 x2796 x422 x4121 x1523 x2759)) x1523))
(assert (=> (>= 10000 x3281) (= (x25 x3281) 0)))
(assert (= (x2715 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122)) x4973))
(assert (not (x2689 (x3159 x1815 x3914))))
(assert (=> (>= 10000 x4699) (= 0 (x25 x4699))))
(assert (= x3660 (and (not x4035) x1899)))
(assert (< (x3860 64 x4556 (ite (= 0 x3044) x5220 (ite (>= 32 x3044) x5076 (ite (<= x3044 64) x193 (ite (>= 96 x3044) x3617 (ite (>= 128 x3044) x4772 (ite (>= 160 x3044) x3485 (ite (<= x3044 192) x5676 (ite (<= x3044 224) x5399 x3739))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5568))
(assert (= (x1122 (x3860 64 x3454 12)) x3454))
(assert (x847 x5261))
(assert (x847 x5667))
(assert (x847 x3357))
(assert (= (x3376 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978)) x4098))
(assert (not (x2689 (x3159 x3432 x2682))))
(assert (< 10000 (x3159 32 x2172)))
(assert (x3500 x1924))
(assert (x847 x2247))
(assert (x1411 x2642))
(assert (x847 x3893))
(assert (=> (<= x1495 10000) (= (x25 x1495) 0)))
(assert (= (and x4343 x223) x1829))
(assert (x847 x1881))
(assert (= x1593 (and (not x4433) x3909)))
(assert (= (x3573 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39)) x4817))
(assert (= (x2143 (x3860 64 x3454 12)) 12))
(assert (= x3719 (x1122 (x2521 x1096 x3719 x311 x156 x1940))))
(assert (x847 x1857))
(assert (= (x25 (x3860 64 x4092 36)) (x3860 64 x4092 36)))
(assert (x847 x4715))
(assert (x847 x3394))
(assert (= x4843 (x1122 (x3860 64 x4843 10))))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x847 x864))
(assert (= 64 (x3376 (x3860 64 x4556 (ite (= x3044 0) x5220 (ite (<= x3044 32) x5076 (ite (>= 64 x3044) x193 (ite (>= 96 x3044) x3617 (ite (>= 128 x3044) x4772 (ite (>= 160 x3044) x3485 (ite (>= 192 x3044) x5676 (ite (>= 224 x3044) x5399 x3739))))))))))))
(assert (=> (<= x4704 10000) (= 0 (x25 x4704))))
(assert (= x5116 (or x5513 x2976 x4504 x3728 x3435)))
(assert (x847 x1464))
(assert (=> (>= 10000 x1752) (= (x25 x1752) 0)))
(assert (x847 x2460))
(assert (x847 x589))
(assert (=> (<= x152 10000) (= (x25 x152) 0)))
(assert (=> (<= x1984 10000) (= (x25 x1984) 0)))
(assert (x847 x2798))
(assert (=> (<= x2055 10000) (= (x25 x2055) 0)))
(assert (= x3856 (x3573 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299))))
(assert (x847 x2121))
(assert (x847 x2658))
(assert (=> (>= 10000 x2211) (= 0 (x25 x2211))))
(assert (x847 x5179))
(assert (=> (>= 10000 x4133) (= 0 (x25 x4133))))
(assert (x847 x1162))
(assert (x847 x1840))
(assert (= (and x703 x4164) x2138))
(assert (< 10000 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245)))
(assert (= (x1122 (x3860 64 x1199 36)) x1199))
(assert (x847 x5187))
(assert (= 0 (x25 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (x847 x4136))
(assert (x379 x3261 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2989 (not x1563)) x3517))
(assert (not (x2689 (x3860 64 x5067 (ite (= 0 x1096) x2404 (ite (<= x1096 32) x4308 (ite (>= 64 x1096) x5612 (ite (>= 96 x1096) x1642 (ite (<= x1096 128) x2325 (ite (<= x1096 160) x3089 (ite (>= 192 x1096) x2999 (ite (>= 224 x1096) x3527 x2635))))))))))))
(assert (x847 x4583))
(assert (x847 x293))
(assert (> (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978) 10000))
(assert (=> (<= x2366 10000) (= (x25 x2366) 0)))
(assert (x847 x1197))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x2010 7)))
(assert (x847 x3539))
(assert (x847 x175))
(assert (x847 x5368))
(assert (= (x4159 x4543 x5006 x4604 x1107) (x25 (x4159 x4543 x5006 x4604 x1107))))
(assert (= x1358 (=> (and (or x1674 (not x1674)) (= (= 0 x4303) x1674)) x2770)))
(assert (= x4482 (x1122 (x3860 64 x4482 100))))
(assert (x847 x4170))
(assert (x847 x4447))
(assert (= x2768 (x1122 (x4159 x4221 x2768 x1986 x3430))))
(assert (= x691 (and x2208 x1542)))
(assert (x367 x5606))
(assert (= (x1122 (x3860 64 x5067 (ite (= x1096 0) x2404 (ite (>= 32 x1096) x4308 (ite (<= x1096 64) x5612 (ite (<= x1096 96) x1642 (ite (<= x1096 128) x2325 (ite (<= x1096 160) x3089 (ite (<= x1096 192) x2999 (ite (>= 224 x1096) x3527 x2635)))))))))) x5067))
(assert (= x1815 (x3376 (x3860 x1815 x4175 x1856))))
(assert (=> (>= 10000 x3862) (= (x25 x3862) 0)))
(assert (=> (>= 10000 x3884) (= 0 (x25 x3884))))
(assert (x847 x834))
(assert (= x1176 (and x2500 x3328)))
(assert (x847 x2711))
(assert (x847 x70))
(assert (x847 x2308))
(assert (= (x3376 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104)) x432))
(assert (= (=> (= (= x1709 0) x2500) (and (=> (not x2500) x5173) (=> (and x2500 (= 1 x1709)) x4177))) x896))
(assert (x847 x4615))
(assert (= x2654 x5118))
(assert (x847 x4671))
(assert (x847 x3389))
(assert (x847 x39))
(assert (= (x3376 (x3159 x3676 x3966)) x3676))
(assert (= (x3159 x4342 x3073) (x25 (x3159 x4342 x3073))))
(assert (= (x2143 (x3860 64 x735 6)) 6))
(assert (x2689 43931689107028929153831073962459296230956404255593708771276734084804920737792))
(assert (x847 x4748))
(assert (= x5079 (x4693 (x2521 x3432 x539 x4357 x5079 x4952))))
(assert (x847 x2202))
(assert (= (x4693 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)) x1468))
(assert (< (x3226 x148 x2796 x422 x4121 x1523 x2759) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x326 10000) (= 0 (x25 x326))))
(assert (x847 x1303))
(assert (= (x3021 (x3226 x4098 x1853 x3691 x5077 x2945 x4263)) x2945))
(assert (= x1335 (and (not x1628) x2158)))
(assert (x847 x997))
(assert (x847 x4900))
(assert (x379 x5293 128))
(assert (x379 x1101 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x183))
(assert (= x4348 (x3376 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453))))
(assert (= (x3860 64 x1305 0) (x25 (x3860 64 x1305 0))))
(assert (x847 x838))
(assert (x847 x5446))
(assert (= x2822 (x1122 (x3860 64 x2822 11))))
(assert (x847 x1195))
(assert (= (x1122 (x3860 64 x988 36)) x988))
(assert (= 10 (x2143 (x3860 64 x1818 10))))
(assert (x847 x4839))
(assert (x847 x860))
(assert (< 10000 (x3226 x4221 x4999 x562 x2941 x3542 x3661)))
(assert (x3952 x293))
(assert (x379 x397 32))
(assert (x367 x69))
(assert (x847 x1856))
(assert (= x3086 x1031))
(assert (not (x2689 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395))))
(assert (x847 x3049))
(assert (= (=> (= (= x2617 0) x4433) (and (=> (and (and (= 4 x3861) (= true x2929) (= false x3359)) (not x4433)) x3065) (=> (and x4433 (and (>= 255 x4711) (= x4711 (x2318 x2873)) (= (x3860 64 x1245 11) x2873) (= x3393 (< 3 x4711)))) (and (=> (and (= x4594 (= x4711 2)) (not x3393)) (and (=> (and (and x781 (>= x2063 356) (= (x425 224) x1478) (= x1676 (or (> (- x1906 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< (- x1906 4) 160) (= (<= (- x1906 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (<= 356 x1906) x5561 (= x2797 (= (x4840 260) 34)) (= (= (x4840 196) (x3711 486)) x5561) (= x190 (x2124 (+ x2250 x4736))) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5683) x4736) (= 290 x825) x2797 (= (x3860 64 x1370 4) x2672) (= (x959 (- x4550 294)) x3646) (= (x2124 (+ 486 x4769)) x4550) (= x4769 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5606)) (= x2005 (x3860 64 1 x2672)) (= x2991 0) (= x1906 x2063) (= (= (x4840 228) (x3711 518)) x2104) (= x2526 false) (<= 1 x4382) (= x1240 1084734224) x2104 (>= 65535 x1370) (= 0 x339) (= x1172 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= x5683 (x2124 (+ 31 x1478))) (= x4162 x2692) (= x2153 (x5376 128)) (= (x2124 (+ 32 x4550)) x2250) (= x4382 (x2015 x2605)) (>= 127 x5435) (= x2179 160) (<= x5435 127) (= x2330 x1370) (= (x959 (- x190 290)) x2063) (= x1604 false) (= 256 x2362) (= x480 (x3610 x2005)) (= (x2124 (+ x2153 31)) x5606) (= (= 64 (x4840 164)) x781)) x4594) (and (=> x1676 x2861) (=> (and (= x733 true) (not x1676)) (and (=> (not x733) x2861) (=> (and x733 (= x1387 (and (> x1906 195) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1906) true)))) (and (=> (not x1387) x2861) (=> (and x1387 (and (= x4829 (< 18446744073709551615 x2133)) (= x2133 (x4325 164)))) (and (=> (and (not x4829) (and (= x4004 (< x1906 x986)) (= (x2124 (+ 196 x2133)) x986))) (and (=> x4004 x5531) (=> (and (and (= x4344 (< 18446744073709551615 x4037)) (<= 356 x1906) (<= x1906 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x4325 260) x4037)) (not x4004)) (and (=> (and (and (= (> x4867 x1906) x4015) (= (x2124 (+ 292 x4037)) x4867)) (not x4344)) (and (=> x4015 x5531) (=> (and (and (= x5510 (x4372 128)) (= x4052 1) (= false x1759) (= (x4372 160) x3973) (= x507 x1348) (= x2373 x3463) (= x874 x3601) (= x355 x5122) (= x4150 x1370) (= x788 false) (= (x4372 128) x2856) (= x3123 x3831) (= x4422 x494) (= x1305 x2598) (= x775 x1499) (= x3372 x558) (= x3295 x3712) (= 64 x845) (= x3526 (x4372 160)) (= x3556 x4796) (= x1294 x2637)) (not x4015)) x4891))) (=> x4344 x2924))))) (=> x4829 x2924))))))))) (=> (and (and (= false x5585) (= x3861 4) (= x2678 true)) (not x4594)) x3065))) (=> (and x3393 (and (= x3861 36) (= true x5287) (= x1901 false))) x3065))))) x3953))
(assert (=> (>= 10000 x5499) (= (x25 x5499) 0)))
(assert (x847 x4580))
(assert (= (x4693 (x3226 x1096 x44 x490 x3499 x726 x1233)) x3499))
(assert (x847 x1172))
(assert (x1456 x558))
(assert (= (x25 (x3860 64 x2332 11)) (x3860 64 x2332 11)))
(assert (x847 x2417))
(assert (x1679 x3353))
(assert (x847 x1109))
(assert (x847 x2372))
(assert (x847 x5586))
(assert (= 0 (x25 18446744073709551615)))
(assert (< 10000 (x3860 64 x5236 12)))
(assert (x847 x4121))
(assert (= x4861 (and x5082 (not x622))))
(assert (x847 x5479))
(assert (x847 x2264))
(assert (x847 x2650))
(assert (=> (>= 10000 x2103) (= (x25 x2103) 0)))
(assert (x847 x2667))
(assert (= (x2521 x5565 x4351 x393 x4551 x1586) (x25 (x2521 x5565 x4351 x393 x4551 x1586))))
(assert (= (x25 34591783479076665047274362116096262703299809091723987870014818727818681087008) 0))
(assert (= x1537 (or x3840 x980)))
(assert (x847 x4618))
(assert (= x1856 (x2143 (x3860 x1815 x4175 x1856))))
(assert (x847 x4441))
(assert (x847 x3195))
(assert (x847 x2494))
(assert (x847 x34))
(assert (< (x3860 64 x892 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2824 x2154) x2368))
(assert (=> (<= x828 10000) (= (x25 x828) 0)))
(assert (x847 x200))
(assert (x847 x1632))
(assert (x847 x2820))
(assert (= (x25 (x3860 64 x5067 (ite (= x1903 0) x5373 (ite (>= 32 x1903) x2443 (ite (<= x1903 64) x3423 (ite (>= 96 x1903) x1087 (ite (<= x1903 128) x2408 (ite (>= 160 x1903) x1780 (ite (<= x1903 192) x1623 (ite (>= 224 x1903) x2859 x2352)))))))))) (x3860 64 x5067 (ite (= x1903 0) x5373 (ite (<= x1903 32) x2443 (ite (>= 64 x1903) x3423 (ite (>= 96 x1903) x1087 (ite (<= x1903 128) x2408 (ite (<= x1903 160) x1780 (ite (<= x1903 192) x1623 (ite (>= 224 x1903) x2859 x2352)))))))))))
(assert (x847 x3261))
(assert (x2689 1313998243))
(assert (not (x2689 (x3159 x2207 x4610))))
(assert (= x1273 (x2143 (x3226 x2207 x3010 x1273 x2454 x3720 x4050))))
(assert (= x3430 (x4693 (x4159 x4221 x2768 x1986 x3430))))
(assert (= (x4693 (x4159 x4342 x5687 x2789 x2303)) x2303))
(assert (x847 x4450))
(assert (x847 x4571))
(assert (x847 x4261))
(assert (x847 x4849))
(assert (x847 x2829))
(assert (=> (<= x2392 10000) (= 0 (x25 x2392))))
(assert (x847 x995))
(assert (= x530 (x4693 (x3226 x4543 x2021 x5511 x530 x1828 x5030))))
(assert (=> (>= 10000 x3010) (= (x25 x3010) 0)))
(assert (x847 x1610))
(assert (x847 x2710))
(assert (= x4543 (x3376 (x4159 x4543 x5006 x4604 x1107))))
(assert (x847 x1382))
(assert (< (x3860 64 x4092 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1122 (x3159 32 x605)) x605))
(assert (= (x3376 (x3860 64 x5391 11)) 64))
(assert (= (x1122 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)) x5066))
(assert (= (or x1970 x763) x5235))
(assert (x847 x4835))
(assert (=> (<= x1213 10000) (= (x25 x1213) 0)))
(assert (x847 x993))
(assert (x847 x2612))
(assert (x847 x2292))
(assert (x847 x3689))
(assert (= (x2143 (x4159 x1815 x3424 x5041 x1337)) x5041))
(assert (x847 x4158))
(assert (x3500 x272))
(assert (=> (>= 10000 x5083) (= 0 (x25 x5083))))
(assert (=> (<= x3072 10000) (= 0 (x25 x3072))))
(assert (x847 x1763))
(assert (=> (>= 10000 x4952) (= 0 (x25 x4952))))
(assert (x3500 x5286))
(assert (x2689 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (x1456 x5204))
(assert (x847 x490))
(assert (= (and x3693 (not x5545)) x805))
(assert (=> (>= 10000 x1265) (= 0 (x25 x1265))))
(assert (= x3653 (=> (= x3779 x1773) x2644)))
(assert (not (x2689 (x3159 x5203 x4995))))
(assert (x847 x5184))
(assert (x847 x5345))
(assert (x847 x1866))
(assert (=> (<= x2997 10000) (= 0 (x25 x2997))))
(assert (x847 x2845))
(assert (x847 x4479))
(assert (= (x3860 64 x4092 6) (x25 (x3860 64 x4092 6))))
(assert (x1746 x3413 2))
(assert (x847 x2655))
(assert (x1746 (+ x846 31) 32))
(assert (x847 x203))
(assert (=> (>= 10000 x1378) (= 0 (x25 x1378))))
(assert (= x3432 (x3376 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179))))
(assert (x847 x4508))
(assert (x847 x1337))
(assert (x847 x3940))
(assert (= (or x4666 x1500) x3472))
(assert (=> (<= x5527 10000) (= (x25 x5527) 0)))
(assert (= x1618 (x2715 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618))))
(assert (x847 x27))
(assert (= (x3376 (x3860 64 x547 6)) 64))
(assert (= (x1122 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)) x4704))
(assert (= (x1122 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051)) x4710))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (x379 x3601 256))
(assert (x847 x2839))
(assert (= x3609 (and x939 x1003)))
(assert (x847 x1582))
(assert (= (and (not x4062) x2368) x3728))
(assert (x847 x5409))
(assert (x847 x4087))
(assert (=> (<= x2210 10000) (= (x25 x2210) 0)))
(assert (= (x2143 (x3860 64 x4092 36)) 36))
(assert (x847 x3323))
(assert (= (x1122 (x3860 64 x1328 10)) x1328))
(assert (x847 x1030))
(assert (x847 x5020))
(assert (x847 x1271))
(assert (= (x3159 x1815 x3914) (x25 (x3159 x1815 x3914))))
(assert (=> (<= x298 10000) (= (x25 x298) 0)))
(assert (x2689 3521034783))
(assert (= x1142 x4329))
(assert (not (x2689 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848))))
(assert (x847 x3886))
(assert (= (x1122 (x3860 x5565 x2909 x1454)) x2909))
(assert (x847 x3778))
(assert (= (x3376 (x3860 x4342 x3072 x1838)) x4342))
(assert (= x3200 (and (not x1166) x279)))
(assert (=> (>= 10000 x5030) (= (x25 x5030) 0)))
(assert (x2689 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (= (x3376 (x3860 x3676 x1859 x4266)) x3676))
(assert (=> (<= x4237 10000) (= 0 (x25 x4237))))
(assert (=> (<= x220 10000) (= (x25 x220) 0)))
(assert (x1411 x1666))
(assert (x847 x1551))
(assert (= (x1122 (x3860 64 x2862 36)) x2862))
(assert (= x3415 (and x1089 (not x4714))))
(assert (> (x3860 64 x547 6) 10000))
(assert (= (x3573 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175)) x1010))
(assert (x847 x2369))
(assert (= x4687 (x1122 (x4159 x4348 x4687 x4734 x4970))))
(assert (= (or x5459 x3166) x2263))
(assert (x2689 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (x847 x2373))
(assert (= x2047 (or x3011 x1350)))
(assert (x3500 x2419))
(assert (= (and x2774 (not x764)) x1175))
(assert (x847 x1180))
(assert (x847 x1243))
(assert (= x2724 (=> (and (= x1227 (x2124 (+ 96 x124))) (= (x3274 x1227) x888) (= (not (< 128 x4557)) x110) (= x577 (x2124 (+ 96 x4709)))) (and x4595 x110))))
(assert (x847 x3754))
(assert (x847 x3939))
(assert (x847 x169))
(assert (= x2398 (x1122 (x4159 x1315 x2398 x4416 x4434))))
(assert (x847 x4034))
(assert (x847 x2133))
(assert (x847 x4291))
(assert (= (x25 (x3860 64 x735 6)) (x3860 64 x735 6)))
(assert (x847 x5527))
(assert (x847 x2907))
(assert (= (x3376 (x3860 64 x892 3)) 64))
(assert (x847 x4763))
(assert (x847 x3548))
(assert (x847 x3315))
(assert (x847 x802))
(assert (x847 x2696))
(assert (x847 x2994))
(assert (x847 x2997))
(assert (=> (<= x39 10000) (= (x25 x39) 0)))
(assert (=> (>= 10000 x2572) (= 0 (x25 x2572))))
(assert (= (x25 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396)) (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396)))
(assert (x847 x1586))
(assert (= 32 (x3376 (x3159 32 x2172))))
(assert (x847 x2727))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x84 (ite (= x3676 0) x4378 (ite (<= x3676 32) x1353 (ite (<= x3676 64) x447 (ite (>= 96 x3676) x5056 (ite (>= 128 x3676) x4778 (ite (<= x3676 160) x6 (ite (>= 192 x3676) x5336 (ite (>= 224 x3676) x1072 x586)))))))))))
(assert (x3500 x673))
(assert (x847 x3206))
(assert (x847 x4008))
(assert (x1746 x3066 256))
(assert (= (=> (and (= x1315 (x1574 x1518)) (= (>= 224 x1315) x2704)) (and (=> (and (= x1867 (x1574 x3052)) (= (x1574 x4019) x26) (= x1396 (x1574 x1065)) (= (x2124 (+ x4019 64)) x3052) (= x2773 (x2124 (+ 32 x4019))) (= x5652 (x4535 0)) (= x4892 (x1574 x2990)) (= (x1574 x5621) x3805) (= x4871 (x1574 x4019)) (= (x2124 (+ 32 x4019)) x950) (= x5255 (x1574 x2059)) (= (x1574 x5308) x1030) (= (x3159 x1315 x369) x3908) (= (x2124 (+ x4019 160)) x1967) (= (x2124 (+ 32 x4019)) x1150) (= x4416 (x1574 x1150)) (= (x2124 (+ 64 x4019)) x5216) (= x777 (x1574 x5401)) (= x2587 (x2124 (+ 128 x4019))) (= (x1574 x3117) x2159) (= x1999 (x1574 x4008)) (= (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396) x3746) (= (x1574 x1967) x295) (= x4816 (x1574 x4019)) (= (x2124 (+ 96 x4019)) x2990) (= (x1574 x2922) x3421) (= (x1574 x4019) x438) (= (x1574 x1393) x4434) (= (x2124 (+ 96 x4019)) x877) (= (x3860 64 x2010 7) x2841) (= x5308 (x2124 (+ 32 x4019))) (= (x2124 (+ 192 x4019)) x1065) (= (x1574 x2773) x5507) (= x1841 (x2124 (+ 64 x4019))) (= x245 (x2124 (+ x4019 128))) (= x2922 (x2124 (+ x4019 32))) (= x2345 (x1574 x5216)) (= (x1574 x2587) x1972) (= x2474 (ite (= 0 x1315) x5652 (ite (<= x1315 32) x3908 (ite (<= x1315 64) x1863 (ite (>= 96 x1315) x3198 (ite (<= x1315 128) x5404 (ite (>= 160 x1315) x628 (ite (<= x1315 192) x1833 (ite (<= x1315 224) x3746 x2255))))))))) (= (x1574 x950) x5600) (= (x4159 x1315 x2398 x4416 x4434) x3198) (= x1393 (x2124 (+ 64 x4019))) (= (x1574 x4019) x1752) (= x1741 (x2124 (+ 64 x4019))) (= (x1574 x4019) x2398) (= x5404 (x2521 x1315 x438 x1999 x2081 x2159)) (= x2081 (x1574 x1841)) (= (x2124 (+ 32 x4019)) x4008) (= x5401 (x2124 (+ 128 x4019))) (= (x2124 (+ x4019 160)) x5621) (= (x1574 x1741) x3153) (= x1863 (x3860 x1315 x26 x1030)) (= x965 (x1574 x245)) (= x4932 (< 0 x5255)) (= (x1574 x4019) x369) (= (x1574 x3009) x5074) (= x3117 (x2124 (+ 96 x4019))) (= x3009 (x2124 (+ 96 x4019))) (= (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805) x1833) (= (x1574 x877) x5081) (= x628 (x3226 x1315 x4816 x3421 x3153 x5081 x965))) (and (=> (and (and (= x4518 (< 32 x5255)) (= (x1574 x48) x5558)) x4932) (and (=> (not x4518) x4497) (=> (and x4518 (and (= (x2124 (+ x48 32)) x1665) (= (< 64 x5255) x3740) (= x3604 (x5383 x1665)) (= (x2124 (+ 32 x3864)) x4745))) (and (=> (and (and (= x1930 (x2124 (+ 64 x48))) (= x4640 (x2124 (+ 64 x3864))) (= (> x5255 96) x2546) (= (x2791 x1930) x1927)) x3740) (and (=> (not x2546) x4497) (=> x2546 x4815))) (=> (not x3740) x4497))))) (=> (not x4932) x4497))) x2704)) x2100))
(assert (x847 x4407))
(assert (=> (<= x5021 10000) (= 0 (x25 x5021))))
(assert (= x325 (x3021 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453))))
(assert (x847 x2113))
(assert (x847 x2993))
(assert (= (=> (and (= x5669 (x4844 x5642)) (= x294 (not (> x4563 32)))) (and (=> (= 32 x5573) x1203) x294)) x3405))
(assert (=> (<= x5583 10000) (= 0 (x25 x5583))))
(assert (=> (<= x2424 10000) (= 0 (x25 x2424))))
(assert (x847 x3028))
(assert (x847 x840))
(assert (not (x2689 (x3860 64 x5021 100))))
(assert (= x3986 (x1122 (x3226 x4348 x3986 x2119 x1343 x1984 x2200))))
(assert (= (x3573 (x3226 x4221 x4999 x562 x2941 x3542 x3661)) x3661))
(assert (=> (>= 10000 x5013) (= 0 (x25 x5013))))
(assert (x847 x2433))
(assert (x847 x469))
(assert (= x828 (x1122 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288))))
(assert (x847 x5564))
(assert (= x1564 (or x4288 x2821)))
(assert (= (and x2534 (not x1277)) x4990))
(assert (=> (<= x1856 10000) (= 0 (x25 x1856))))
(assert (=> (<= x2413 10000) (= (x25 x2413) 0)))
(assert (= (x3226 x1903 x864 x3293 x4149 x2049 x4474) (x25 (x3226 x1903 x864 x3293 x4149 x2049 x4474))))
(assert (= (x1122 (x3860 64 x1640 36)) x1640))
(assert (x847 x989))
(assert (x847 x4345))
(assert (x847 x1801))
(assert (= (x3226 x1893 x5516 x803 x152 x2107 x5455) (x25 (x3226 x1893 x5516 x803 x152 x2107 x5455))))
(assert (=> (>= 10000 x2352) (= 0 (x25 x2352))))
(assert (not (x2689 (x3860 64 x865 10))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x4133 36)))
(assert (x847 x1507))
(assert (x1063 x3480))
(assert (x847 x4496))
(assert (x847 x1106))
(assert (= (x3376 (x3159 32 x418)) 32))
(assert (= (and x4301 (not x3990)) x5357))
(assert (x1746 (+ 31 x2569) 32))
(assert (= x5030 (x3573 (x3226 x4543 x2021 x5511 x530 x1828 x5030))))
(assert (=> (>= 10000 x1432) (= 0 (x25 x1432))))
(assert (x926 32 x1413))
(assert (=> (<= x3073 10000) (= 0 (x25 x3073))))
(assert (x847 x450))
(assert (x847 x369))
(assert (x847 x988))
(assert (=> (>= 10000 x175) (= (x25 x175) 0)))
(assert (= (x25 (x3860 64 x84 (ite (= 0 x3676) x4378 (ite (>= 32 x3676) x1353 (ite (<= x3676 64) x447 (ite (>= 96 x3676) x5056 (ite (<= x3676 128) x4778 (ite (<= x3676 160) x6 (ite (>= 192 x3676) x5336 (ite (>= 224 x3676) x1072 x586)))))))))) (x3860 64 x84 (ite (= 0 x3676) x4378 (ite (<= x3676 32) x1353 (ite (<= x3676 64) x447 (ite (<= x3676 96) x5056 (ite (<= x3676 128) x4778 (ite (<= x3676 160) x6 (ite (>= 192 x3676) x5336 (ite (>= 224 x3676) x1072 x586)))))))))))
(assert (= (and x515 x2233) x5036))
(assert (x847 x366))
(assert (x847 x927))
(assert (x847 x1034))
(assert (=> (>= 10000 x5236) (= (x25 x5236) 0)))
(assert (x847 x1547))
(assert (x847 x762))
(assert (not (x2689 (x3159 32 x2870))))
(assert (x847 x2190))
(assert (x847 x2146))
(assert (x847 x905))
(assert (x847 x517))
(assert (x847 x2000))
(assert (x1411 x287))
(assert (= (x3376 (x2521 x432 x4749 x1511 x5607 x2357)) x432))
(assert (x847 x3506))
(assert (= (x2143 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104)) x3197))
(assert (= x5344 (and x1560 x4625)))
(assert (> (x3860 x1096 x4988 x5120) 10000))
(assert (< (x3860 x5565 x2909 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5129))
(assert (= (x1122 (x3159 32 x2870)) x2870))
(assert (= (x25 (x3860 64 x4843 10)) (x3860 64 x4843 10)))
(assert (= x4297 (x1122 (x3860 x4221 x4297 x3978))))
(assert (x847 x2378))
(assert (=> (<= x1523 10000) (= 0 (x25 x1523))))
(assert (= (x25 x982) (x25 (+ 2 x982))))
(assert (=> (>= 10000 x618) (= (x25 x618) 0)))
(assert (x847 x4796))
(assert (= (x3376 (x2521 x1903 x1952 x4756 x5354 x5260)) x1903))
(assert (= (x2715 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898)) x3898))
(assert (x847 x713))
(assert (x847 x2438))
(assert (=> (<= x1115 10000) (= 0 (x25 x1115))))
(assert (= (=> (and (= x4123 x5542) (= x3988 x2209) (= x1415 (+ 1 x2067)) (= x3269 x1521) (= x4923 x2950) (= (+ 1 x2067) x366) (= x5608 x5061) (= x3456 true) (= x638 x1407) (= x5124 2) (= x5186 x267) (= x1762 x4202) (= x3681 x1419) (= x4107 x4255) (= x3357 x5682) (= 0 x1383) (= x2070 x4039) (= x11 false)) x1608) x1437))
(assert (x847 x644))
(assert (= (x1122 (x3860 x4543 x5296 x1190)) x5296))
(assert (x379 x4214 32))
(assert (x1411 x2473))
(assert (= x4096 (x1122 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653))))
(assert (x379 x97 128))
(assert (x847 x3973))
(assert (x847 x4724))
(assert (x847 x563))
(assert (x847 x4231))
(assert (= (x1122 (x3159 x3044 x1504)) x1504))
(assert (x847 x1998))
(assert (x847 x4567))
(assert (= x1500 (and x3874 x4861)))
(assert (x847 x5598))
(assert (= x1145 (and x4576 (not x3566))))
(assert (< 10000 (x3159 x432 x3550)))
(assert (< 10000 (x2521 x1096 x3719 x311 x156 x1940)))
(assert (x847 x4630))
(assert (x3513 x674))
(assert (x847 x437))
(assert (x1063 x4877))
(assert (x847 x3410))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4159 x1815 x3424 x5041 x1337)))
(assert (= (x2143 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160)) x1809))
(assert (= x246 (and (not x973) x196)))
(assert (= (=> (and (or (not x2769) x2769) (= (= x3649 0) x2769)) x2214) x4948))
(assert (= x1984 (x3021 (x3226 x4348 x3986 x2119 x1343 x1984 x2200))))
(assert (=> (>= 10000 x1328) (= (x25 x1328) 0)))
(assert (x847 x3368))
(assert (x847 x2507))
(assert (= x1818 (x1122 (x3860 64 x1818 10))))
(assert (< (x3860 x4348 x1032 x4395) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2689 (x3860 x432 x850 x685))))
(assert (= x3459 (and x1324 x2033)))
(assert (= x1867 (x4693 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396))))
(assert (x3500 x1086))
(assert (x847 x3042))
(assert (x847 x2239))
(assert (= (and x764 x2774) x1161))
(assert (> (x3860 64 x5067 (ite (= 0 x1096) x2404 (ite (<= x1096 32) x4308 (ite (<= x1096 64) x5612 (ite (<= x1096 96) x1642 (ite (<= x1096 128) x2325 (ite (<= x1096 160) x3089 (ite (<= x1096 192) x2999 (ite (>= 224 x1096) x3527 x2635))))))))) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x4342 x833 x1763 x4924 x2004 x2713)))
(assert (x847 x3720))
(assert (= x971 (or x3680 x998)))
(assert (x847 x1580))
(assert (x3952 x2369))
(assert (x847 x2565))
(assert (= 2 (x2143 (x3860 64 x4162 2))))
(assert (= (x2715 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523)) x523))
(assert (x847 x2304))
(assert (= x3431 (x1122 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326))))
(assert (= (x25 (x3860 x432 x850 x685)) (x3860 x432 x850 x685)))
(assert (x847 x2626))
(assert (=> (<= x4567 10000) (= 0 (x25 x4567))))
(assert (= x4816 (x1122 (x3226 x1315 x4816 x3421 x3153 x5081 x965))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x4145 2)))
(assert (not (x2689 (x2521 x3044 x3970 x518 x1635 x4479))))
(assert (x847 x5100))
(assert (x847 x2180))
(assert (x847 x1796))
(assert (=> (<= x3635 10000) (= (x25 x3635) 0)))
(assert (= (x2715 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009)) x5009))
(assert (not (x2689 (x2521 x1315 x438 x1999 x2081 x2159))))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x847 x5465))
(assert (x847 x5317))
(assert (x847 x5619))
(assert (x847 x133))
(assert (x847 x2039))
(assert (= x310 (or x1531 x103 x3707 x4144 x1562)))
(assert (< (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4555 (x1122 (x3159 x148 x4555))))
(assert (x847 x5408))
(assert (x847 x1489))
(assert (x847 x4902))
(assert (x847 x732))
(assert (= (and x770 x4077) x4313))
(assert (x847 x4808))
(assert (= (x1122 (x3860 64 x735 6)) x735))
(assert (> (x3860 64 x1495 36) 10000))
(assert (x847 x5018))
(assert (= (x1122 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104)) x1851))
(assert (not (x2689 (x2521 x696 x4699 x2887 x2595 x4903))))
(assert (x847 x4296))
(assert (x847 x2806))
(assert (= x4055 (or x2891 x575 x1297 x5486 x2641)))
(assert (x847 x4165))
(assert (x847 x2673))
(assert (x367 x673))
(assert (= (x3021 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523)) x5353))
(assert (=> (<= x2595 10000) (= (x25 x2595) 0)))
(assert (=> (>= 10000 x4561) (= 0 (x25 x4561))))
(assert (=> (<= x4749 10000) (= (x25 x4749) 0)))
(assert (x847 x977))
(assert (=> (<= x2409 10000) (= 0 (x25 x2409))))
(assert (x847 x1201))
(assert (= x835 (and (not x166) x3944)))
(assert (= x4734 (x2143 (x4159 x4348 x4687 x4734 x4970))))
(assert (x847 x322))
(assert (= (x25 (x4535 0)) (x4535 0)))
(assert (=> (>= 10000 x995) (= (x25 x995) 0)))
(assert (= 64 (x3376 (x3860 64 x5214 12))))
(assert (x847 x1116))
(assert (x847 x3681))
(assert (not (x2689 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218))))
(assert (x847 x4020))
(assert (x847 x1665))
(assert (x847 x4549))
(assert (=> (>= 10000 x5174) (= 0 (x25 x5174))))
(assert (x847 x1465))
(assert (x847 x4972))
(assert (= (x3376 (x3860 64 x5553 3)) 64))
(assert (=> (<= x833 10000) (= (x25 x833) 0)))
(assert (= (x2143 (x3860 64 x2483 36)) 36))
(assert (x847 x3752))
(assert (not (x2689 (x4159 x5565 x3137 x4053 x405))))
(assert (=> (<= x5079 10000) (= (x25 x5079) 0)))
(assert (x847 x1779))
(assert (=> (>= 10000 x4866) (= (x25 x4866) 0)))
(assert (= (x3159 x4221 x4190) (x25 (x3159 x4221 x4190))))
(assert (x847 x2822))
(assert (x847 x4468))
(assert (> (x3860 64 x4580 7) 10000))
(assert (=> (<= x4416 10000) (= (x25 x4416) 0)))
(assert (= (x1122 (x3860 64 x735 2)) x735))
(assert (= (x2143 (x3860 64 x4547 6)) 6))
(assert (= x56 (and x2883 x3306)))
(assert (x847 x2162))
(assert (= (and x244 (not x5055)) x440))
(assert (= x226 (and (not x3740) x1231)))
(assert (=> (>= 10000 x5692) (= 0 (x25 x5692))))
(assert (= (x1122 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160)) x4049))
(assert (= x933 (and x4576 x3566)))
(assert (x847 x924))
(assert (= (x25 (x3226 x1096 x44 x490 x3499 x726 x1233)) (x3226 x1096 x44 x490 x3499 x726 x1233)))
(assert (= x493 (x2143 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635))))
(assert (x847 x5271))
(assert (= (x25 (x3860 x1815 x4175 x1856)) (x3860 x1815 x4175 x1856)))
(assert (< 10000 (x2521 x4098 x1938 x750 x5028 x1626)))
(assert (x847 x4350))
(assert (x367 x293))
(assert (= (or x5523 x3126 x2230) x3672))
(assert (x3952 x2988))
(assert (x847 x2900))
(assert (= (x3159 x3044 x1504) (x25 (x3159 x3044 x1504))))
(assert (=> (>= 10000 x1273) (= (x25 x1273) 0)))
(assert (=> (>= 10000 x4314) (= (x25 x4314) 0)))
(assert (< 10000 (x3159 32 x2870)))
(assert (not (x2689 (x3860 64 x735 36))))
(assert (= (and x3450 (not x68)) x1103))
(assert (=> (<= x5231 10000) (= (x25 x5231) 0)))
(assert (= (x2143 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)) x5583))
(assert (=> (<= x4903 10000) (= (x25 x4903) 0)))
(assert (x3513 x471))
(assert (< (x4159 x1903 x3509 x4605 x5499) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2758))
(assert (x847 x5674))
(assert (x847 x4166))
(assert (x847 x3182))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 32 104)))
(assert (= (x2143 (x3860 64 x5553 7)) 7))
(assert (= (x4693 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104)) x2327))
(assert (< (x3860 64 x4092 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)))
(assert (x926 32 x4549))
(assert (= (and x2057 (not x1097)) x2904))
(assert (> (x3226 x4342 x833 x1763 x4924 x2004 x2713) 10000))
(assert (x379 x2912 32))
(assert (=> (<= x4605 10000) (= (x25 x4605) 0)))
(assert (x847 x4052))
(assert (< (x3860 64 x5258 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3810))
(assert (= (and (not x636) x5270) x2383))
(assert (= x4103 (x3573 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589))))
(assert (x847 x705))
(assert (x847 x3737))
(assert (= (x4159 x1815 x3424 x5041 x1337) (x25 (x4159 x1815 x3424 x5041 x1337))))
(assert (x847 x792))
(assert (= 3 (x2143 (x3860 64 x2010 3))))
(assert (x847 x3413))
(assert (x3500 x3261))
(assert (=> (>= 10000 x2978) (= 0 (x25 x2978))))
(assert (x847 x287))
(assert (= x4189 (or x1708 x4951)))
(assert (= (x2143 (x3860 64 x1199 36)) 36))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639773))
(assert (= (or x3817 x2836) x1479))
(assert (x847 x4866))
(assert (= x3808 (or x1200 x3518)))
(assert (x847 x1734))
(assert (x2657 (+ x1558 31)))
(assert (=> (<= x5009 10000) (= 0 (x25 x5009))))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (> (x4159 x4098 x5536 x1228 x5013) 10000))
(assert (= (x3573 (x3226 x1903 x864 x3293 x4149 x2049 x4474)) x4474))
(assert (= (and x4223 x4573) x3166))
(assert (x847 x1622))
(assert (x379 x3353 2))
(assert (x2657 x2261))
(assert (x847 x2145))
(assert (x847 x1018))
(assert (= (and (not x99) x1170) x1220))
(assert (= x2972 (x1122 (x3860 x1893 x2972 x3027))))
(assert (= (x3860 64 x3618 12) (x25 (x3860 64 x3618 12))))
(assert (=> (>= 10000 x4434) (= 0 (x25 x4434))))
(assert (=> (<= x498 10000) (= (x25 x498) 0)))
(assert (= (x1122 (x2521 x3044 x3970 x518 x1635 x4479)) x3970))
(assert (= x696 (x3376 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009))))
(assert (= x3966 (x1122 (x3159 x3676 x3966))))
(assert (x847 x4548))
(assert (= (x2715 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653)) x5653))
(assert (not (x2689 (x3860 64 x2067 100))))
(assert (not (x2689 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745))))
(assert (= x2036 (x2143 (x4159 x148 x3583 x2036 x834))))
(assert (x926 32 x674))
(assert (x847 x2864))
(assert (= x2892 (x1122 (x2521 x2207 x2892 x4869 x5520 x1300))))
(assert (x847 x1980))
(assert (x847 x4303))
(assert (= x2151 (or x201 x479)))
(assert (x847 x2448))
(assert (x847 x3522))
(assert (=> (<= x3720 10000) (= (x25 x3720) 0)))
(assert (=> (>= 10000 x5067) (= 0 (x25 x5067))))
(assert (x847 x3775))
(assert (=> (<= x395 10000) (= 0 (x25 x395))))
(assert (x847 x710))
(assert (x926 32 (ite (not (= x1125 0)) 1 0)))
(assert (x2689 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (= x5160 (=> (and (= (x2124 (+ 96 x2438)) x3705) (= x290 (x2124 (+ x48 96))) (= x1882 (not (< 128 x4477))) (= x2963 (x2019 x290))) (and x1882 x540))))
(assert (x379 x5489 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5616))
(assert (< 10000 (x3226 x1893 x5516 x803 x152 x2107 x5455)))
(assert (= x3007 (and x1098 x2481)))
(assert (=> (<= x1860 10000) (= 0 (x25 x1860))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x432 x3550)))
(assert (= (x2143 (x4159 x4098 x5536 x1228 x5013)) x1228))
(assert (x847 x3618))
(assert (= (and (not x527) x4881) x279))
(assert (x847 x2382))
(assert (= (x25 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653)) (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653)))
(assert (x926 32 x2238))
(assert (=> (>= 10000 x3548) (= (x25 x3548) 0)))
(assert (=> (<= x5341 10000) (= 0 (x25 x5341))))
(assert (= x2407 (x4693 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242))))
(assert (= x1743 (x3573 (x3226 x432 x5646 x1826 x4314 x4147 x1743))))
(assert (= x1712 (x2715 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245))))
(assert (x847 x331))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045)))
(assert (x847 x1891))
(assert (x847 x4133))
(assert (x2657 x5223))
(assert (x847 x643))
(assert (not (x2689 (x3860 64 x5391 11))))
(assert (not (x2689 (x3860 64 x4556 (ite (= x3044 0) x5220 (ite (<= x3044 32) x5076 (ite (<= x3044 64) x193 (ite (>= 96 x3044) x3617 (ite (>= 128 x3044) x4772 (ite (>= 160 x3044) x3485 (ite (<= x3044 192) x5676 (ite (>= 224 x3044) x5399 x3739))))))))))))
(assert (x379 x3040 128))
(assert (x847 x3821))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x4098 x1938 x750 x5028 x1626)))
(assert (x847 x4483))
(assert (=> (<= x2303 10000) (= 0 (x25 x2303))))
(assert (x847 x1710))
(assert (x847 x5641))
(assert (< (x3860 64 x2010 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x3966) (= (x25 x3966) 0)))
(assert (x847 x558))
(assert (x847 x3196))
(assert (= x373 (and x189 x75)))
(assert (x847 x1257))
(assert (x367 x5293))
(assert (x847 x443))
(assert (x847 x4531))
(assert (= (x25 (x3860 x1903 x2638 x3701)) (x3860 x1903 x2638 x3701)))
(assert (x379 x1109 32))
(assert (= (x25 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745)) (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745)))
(assert (x847 x4706))
(assert (x847 x5066))
(assert (x3500 x5094))
(assert (=> (<= x432 10000) (= (x25 x432) 0)))
(assert (= x2391 (=> (= (+ x3008 x1313) x890) x2688)))
(assert (x847 x5058))
(assert (=> (>= 10000 x393) (= (x25 x393) 0)))
(assert (x847 x2572))
(assert (x847 x155))
(assert (= (x2143 (x3860 64 x4909 36)) 36))
(assert (= (x25 (x3860 64 x2010 3)) (x3860 64 x2010 3)))
(assert (=> (>= 10000 x5477) (= (x25 x5477) 0)))
(assert (=> (>= 10000 x4909) (= 0 (x25 x4909))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805)))
(assert (x847 x2063))
(assert (x847 x4292))
(assert (< (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1742))
(assert (x2689 1766847064778384329583297500742918515827483896875618958121606201292619776))
(assert (= (x4693 (x3226 x5565 x406 x603 x3458 x5690 x2631)) x3458))
(assert (x847 x4151))
(assert (= (x1122 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)) x1338))
(assert (x847 x2105))
(assert (x847 x2785))
(assert (= (and (not x496) x3105) x2212))
(assert (x847 x3253))
(assert (= (x3376 (x4159 x696 x1198 x1113 x1529)) x696))
(assert (= (x3159 x3676 x3966) (x25 (x3159 x3676 x3966))))
(assert (x1063 x2800))
(assert (=> (<= x5444 10000) (= 0 (x25 x5444))))
(assert (=> (>= 10000 x2327) (= 0 (x25 x2327))))
(assert (x847 x1994))
(assert (=> (>= 10000 x3661) (= 0 (x25 x3661))))
(assert (= (x3159 x2207 x4610) (x25 (x3159 x2207 x4610))))
(assert (x847 x4255))
(assert (x847 x1988))
(assert (x847 x4519))
(assert (x847 x3318))
(assert (= x4988 (x1122 (x3860 x1096 x4988 x5120))))
(assert (=> (>= 10000 x965) (= 0 (x25 x965))))
(assert (x847 x2553))
(assert (x847 x2544))
(assert (= x1041 (or x4735 x4246)))
(assert (= x1196 (=> (and (= x3536 (not (< 32 x5665))) (= x2847 (x442 x4253))) (and (=> (= x1987 32) x5044) x3536))))
(assert (=> (<= x5657 10000) (= 0 (x25 x5657))))
(assert (> (x3159 32 x3713) 10000))
(assert (= (x2143 (x4159 x3676 x3428 x1108 x5491)) x1108))
(assert (= (x25 (x4159 x2207 x4683 x3234 x5685)) (x4159 x2207 x4683 x3234 x5685)))
(assert (=> (<= x5181 10000) (= 0 (x25 x5181))))
(assert (> (x4159 x5203 x372 x1776 x1213) 10000))
(assert (= 64 (x3376 (x3860 64 x1370 3))))
(assert (=> (<= x1229 10000) (= (x25 x1229) 0)))
(assert (x367 x853))
(assert (=> (>= 10000 x5066) (= (x25 x5066) 0)))
(assert (= (x25 (x3860 64 x5411 10)) (x3860 64 x5411 10)))
(assert (x926 32 (ite (not (= x4563 0)) 1 0)))
(assert (= (x2143 (x4159 x4342 x5687 x2789 x2303)) x2789))
(assert (= (x4159 x4348 x4687 x4734 x4970) (x25 (x4159 x4348 x4687 x4734 x4970))))
(assert (x379 x1602 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x379 x2369 128))
(assert (x847 x4415))
(assert (= x5520 (x4693 (x2521 x2207 x2892 x4869 x5520 x1300))))
(assert (= x551 (x4693 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045))))
(assert (= (x25 (x3860 64 x2573 36)) (x3860 64 x2573 36)))
(assert (x847 x2620))
(assert (=> (>= 10000 x1763) (= 0 (x25 x1763))))
(assert (not (x2689 (x3860 64 x1180 (ite (= 0 x1815) x3715 (ite (>= 32 x1815) x2906 (ite (>= 64 x1815) x4726 (ite (<= x1815 96) x3828 (ite (>= 128 x1815) x4681 (ite (<= x1815 160) x5439 (ite (>= 192 x1815) x3429 (ite (<= x1815 224) x719 x4228))))))))))))
(assert (= (x3573 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599)) x5024))
(assert (not (x2689 (x3860 x2448 x3647 x4327))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x696 x1128 x5666)))
(assert (= (x2143 (x3860 64 x735 2)) 2))
(assert (= (x25 (+ 1 x4387)) (x25 x4387)))
(assert (= x328 (x3573 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179))))
(assert (= 64 (x3376 (x3860 64 1 x5382))))
(assert (x847 x1124))
(assert (= x1192 (x4693 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635))))
(assert (= x1940 (x3021 (x2521 x1096 x3719 x311 x156 x1940))))
(assert (x847 x4953))
(assert (x847 x4867))
(assert (= x1895 (and (not x4100) x1202)))
(assert (not (x2689 (x4159 x4543 x5006 x4604 x1107))))
(assert (x847 x5464))
(assert (x847 x3509))
(assert (x847 x4959))
(assert (x847 x5445))
(assert (= (x2143 (x4159 x4543 x5006 x4604 x1107)) x4604))
(assert (x847 x2242))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x4543 x4410 x1883 x2314 x1866)))
(assert (not (x2689 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432))))
(assert (x379 x3261 32))
(assert (= x5354 (x4693 (x2521 x1903 x1952 x4756 x5354 x5260))))
(assert (x847 x4463))
(assert (x926 32 x3381))
(assert (x1411 x1034))
(assert (x379 x5319 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3156))
(assert (=> (<= x1775 10000) (= (x25 x1775) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523)))
(assert (x847 x538))
(assert (= (x2143 (x3860 x4543 x5296 x1190)) x1190))
(assert (x847 x560))
(assert (= x1129 (or (and (not x1168) x12) (and x3827 (not x1438)) (and (not x5218) x1310))))
(assert (= 36 (x2143 (x3860 64 x2862 36))))
(assert (x2689 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (= x129 (x2143 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898))))
(assert (x847 x603))
(assert (= (and x3075 (not x3716)) x3960))
(assert (x847 x5126))
(assert (= x3611 (x3021 (x3226 x5203 x5129 x1802 x5468 x3611 x249))))
(assert (= x4040 (and (not x2973) x532)))
(assert (= x4580 (x1122 (x3860 64 x4580 7))))
(assert (x847 x4053))
(assert (x847 x4294))
(assert (=> (>= 10000 x43) (= (x25 x43) 0)))
(assert (x847 x4245))
(assert (< (x3860 64 x4580 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5409 (x2143 (x4159 x1893 x2039 x5409 x5649))))
(assert (< (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2320))
(assert (=> (<= x5391 10000) (= 0 (x25 x5391))))
(assert (x847 x4466))
(assert (< (x3860 64 x5617 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2597))
(assert (=> (>= 10000 x5491) (= 0 (x25 x5491))))
(assert (x1411 x1381))
(assert (x847 x257))
(assert (x1411 x3878))
(assert (x847 x1585))
(assert (= x4331 (=> (and (and (= x1628 (= x564 x696)) (= (x15 128) x564)) (or (and (and (= x3171 (x15 128)) (= x3049 (ite (> x3171 0) 1 0))) x1628) (and (= (ite x1628 1 0) x3049) (not x1628)))) x2705)))
(assert (= x4221 (x3376 (x4159 x4221 x2768 x1986 x3430))))
(assert (not (x2689 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589))))
(assert (=> (<= x5649 10000) (= (x25 x5649) 0)))
(assert (= (x2143 (x3226 x4348 x3986 x2119 x1343 x1984 x2200)) x2119))
(assert (x379 x3931 128))
(assert (= x3426 (and x4042 x2384)))
(assert (= x4645 (and x1269 x3486)))
(assert (= x2448 (x3376 (x2521 x2448 x1566 x4600 x3358 x4070))))
(assert (= (x2143 (x3860 64 x4580 7)) 7))
(assert (= x26 (x1122 (x3860 x1315 x26 x1030))))
(assert (x847 x3341))
(assert (=> (<= x5390 10000) (= 0 (x25 x5390))))
(assert (x847 x326))
(assert (= (and x776 x2253) x3680))
(assert (=> (>= 10000 x4579) (= (x25 x4579) 0)))
(assert (x1746 x558 2))
(assert (= (and x2824 (not x2154)) x5513))
(assert (=> (<= x2635 10000) (= (x25 x2635) 0)))
(assert (= (x2715 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396)) x295))
(assert (x847 x3103))
(assert (x847 x4145))
(assert (= x360 (x3573 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745))))
(assert (= (and x4212 x5360) x2436))
(assert (= x4162 (x1122 (x3860 64 x4162 1))))
(assert (x847 x4592))
(assert (=> (>= 10000 x4103) (= 0 (x25 x4103))))
(assert (not (x2689 (x3860 x4543 x5296 x1190))))
(assert (x847 x2444))
(assert (x847 x1802))
(assert (= x1418 (and x971 (not x270))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x1893 x5516 x803 x152 x2107 x5455)))
(assert (=> (<= x2164 10000) (= (x25 x2164) 0)))
(assert (> (x3226 x696 x3109 x5052 x5209 x5111 x1775) 10000))
(assert (x2689 486791245))
(assert (x3513 x5065))
(assert (= (x1122 (x3860 64 x4092 6)) x4092))
(assert (x847 x4843))
(assert (= x1752 (x1122 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805))))
(assert (x2689 34591783479076665047274362116096262703299809091723987870014818727818681087008))
(assert (x847 x3224))
(assert (x847 x4073))
(assert (= (x1122 (x3860 x432 x850 x685)) x850))
(assert (=> (<= x2332 10000) (= 0 (x25 x2332))))
(assert (x847 x107))
(assert (=> (>= 10000 x5607) (= 0 (x25 x5607))))
(assert (x847 x497))
(assert (= (x3376 (x2521 x3676 x3103 x2103 x548 x4548)) x3676))
(assert (x847 x1525))
(assert (= (and (not x79) x246) x4905))
(assert (=> (>= 10000 x295) (= (x25 x295) 0)))
(assert (= (x1122 (x4159 x4342 x5687 x2789 x2303)) x5687))
(assert (= x5309 (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2264) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4214) x5494) (>= x2264 1) (= x1427 (x210 26959946667150639794667015087019630673637144422540572481103610249215 x4712)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x2264)) (= x2264 (x2124 (+ x5494 x504))) (< x2264 x3864) (<= x4577 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2124 (+ x2264 192)) x3864) (= x4214 (x2124 (+ x4437 31))) (= (x959 (- x3592 32)) x807) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2264) (= (+ x1427 46442213778836376901753710468615024683576072693327014300388496345503314739200) x5199) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4577) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4577) (= x629 (x2124 (+ x4437 x504))) (< x4577 x2264) (= x2846 (x2124 (+ 32 x4577))) (= (x2124 (+ x2264 32)) x3439) (= (< 0 x4303) x2513) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2264) (not (= x2264 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x284 x4577) x2051) (= x4712 (x3791 x2846)) (= x3592 (x959 (- x2264 x4577))) (not (= x2264 115792089237316195423570985008687907853269984665640564039457584007913129639744))) (or (and x2513 (and x5092 (= (x163 x4162) x5368) (= x2507 (x163 x4162)) x2551 (= x400 x4763) (<= x2499 4294967295) (= (= (x2580 x4162) x2507) x5092) (= x2551 (<= x5368 (x2580 x4162))))) (and (= x4763 (+ x4654 1)) (not x2513)))) x1358)))
(assert (= (and (not x5241) x4464) x5521))
(assert (x926 32 x305))
(assert (x847 x5051))
(assert (= x399 (and x1302 x3730)))
(assert (x847 x4564))
(assert (= x3937 x335))
(assert (=> (>= 10000 x3856) (= 0 (x25 x3856))))
(assert (x1746 x5035 256))
(assert (= (x3376 (x3226 x2207 x3010 x1273 x2454 x3720 x4050)) x2207))
(assert (x367 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (>= 10000 x4624) (= (x25 x4624) 0)))
(assert (=> (<= x3914 10000) (= 0 (x25 x3914))))
(assert (x847 x136))
(assert (x847 x429))
(assert (x847 x3529))
(assert (x847 x4382))
(assert (x847 x5418))
(assert (not (x2689 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657))))
(assert (x847 x1445))
(assert (not (x2689 (x3860 64 x4556 (ite (= 0 x4543) x225 (ite (<= x4543 32) x421 (ite (>= 64 x4543) x1624 (ite (<= x4543 96) x3640 (ite (<= x4543 128) x4028 (ite (>= 160 x4543) x120 (ite (>= 192 x4543) x782 (ite (<= x4543 224) x115 x5087))))))))))))
(assert (x847 x4363))
(assert (x847 x1239))
(assert (x847 x5163))
(assert (x847 x3595))
(assert (x847 x613))
(assert (x847 x1643))
(assert (x847 x3903))
(assert (x847 x791))
(assert (x3513 x1699))
(assert (x847 x1638))
(assert (= x739 (and x1537 (not x2091))))
(assert (= (or x1836 x3628) x2736))
(assert (= (and x4009 x241) x271))
(assert (x847 x3701))
(assert (= x4881 (and x4651 (not x516))))
(assert (> (x3226 x148 x2796 x422 x4121 x1523 x2759) 10000))
(assert (= (x4693 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175)) x1978))
(assert (= x4651 (and x817 x4979)))
(assert (= (x2143 (x2521 x2207 x2892 x4869 x5520 x1300)) x4869))
(assert (= (x1122 (x3860 64 x2067 100)) x2067))
(assert (=> (<= x947 10000) (= 0 (x25 x947))))
(assert (not (x2689 (x3860 64 x5617 11))))
(assert (x847 x3493))
(assert (x847 x771))
(assert (x847 x4787))
(assert (x847 x2407))
(assert (x847 x4653))
(assert (x847 x1432))
(assert (> (x3860 x2448 x3647 x4327) 10000))
(assert (x847 x4637))
(assert (x847 x3873))
(assert (=> (<= x148 10000) (= 0 (x25 x148))))
(assert (x847 x654))
(assert (= x3600 x2324))
(assert (x847 x280))
(assert (= (x3573 (x3226 x4342 x833 x1763 x4924 x2004 x2713)) x2713))
(assert (x847 x2081))
(assert (< (x3860 64 x1199 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2143 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)) x607))
(assert (x847 x1112))
(assert (x847 x4011))
(assert (x847 x2396))
(assert (x847 x4297))
(assert (x847 x5212))
(assert (x847 x5231))
(assert (= 36 (x2143 (x3860 64 x1640 36))))
(assert (x847 x2203))
(assert (=> (<= x249 10000) (= (x25 x249) 0)))
(assert (x847 x5666))
(assert (< (x3860 x4543 x5296 x1190) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x129))
(assert (=> (>= 10000 x865) (= (x25 x865) 0)))
(assert (= x5214 (x1122 (x3860 64 x5214 12))))
(assert (x847 x3161))
(assert (x847 x2855))
(assert (not (x2689 (x3860 64 x4580 7))))
(assert (=> (<= x3110 10000) (= (x25 x3110) 0)))
(assert (= x2836 (and x196 x973)))
(assert (x2657 (+ x4452 31)))
(assert (not (x2689 (x2521 x432 x4749 x1511 x5607 x2357))))
(assert (= (x25 x1854) (x25 (+ 2 x1854))))
(assert (x847 x674))
(assert (= (x1122 (x3860 x4348 x1032 x4395)) x1032))
(assert (x847 x5016))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x2207 x3010 x1273 x2454 x3720 x4050)))
(assert (=> (>= 10000 x2887) (= 0 (x25 x2887))))
(assert (= x4543 (x3376 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657))))
(assert (x2657 x5035))
(assert (x847 x3790))
(assert (x847 x4918))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x5203 x4995)))
(assert (x847 x114))
(assert (x847 x3264))
(assert (= (x2521 x148 x4490 x3005 x897 x4954) (x25 (x2521 x148 x4490 x3005 x897 x4954))))
(assert (=> (>= 10000 x535) (= (x25 x535) 0)))
(assert (x1411 x1189))
(assert (x847 x2504))
(assert (x847 x711))
(assert (not (x2689 (x3860 x696 x1128 x5666))))
(assert (x847 x1039))
(assert (= (and x1062 (not x3627)) x1899))
(assert (x847 x4206))
(assert (x847 x1215))
(assert (x847 x261))
(assert (< (x2521 x5203 x2164 x3862 x4636 x5174) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1679 x3478))
(assert (= x965 (x3573 (x3226 x1315 x4816 x3421 x3153 x5081 x965))))
(assert (not (x2689 (x3860 64 x3454 12))))
(assert (x847 x1037))
(assert (x847 x1101))
(assert (x847 x3076))
(assert (= x3676 (x3376 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160))))
(assert (=> (>= 10000 x1582) (= 0 (x25 x1582))))
(assert (< 10000 (x3226 x2448 x2591 x4502 x308 x202 x4027)))
(assert (= x4457 (and x68 x3450)))
(assert (x847 x5175))
(assert (= x3044 (x3376 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898))))
(assert (x847 x26))
(assert (=> (>= 10000 x3647) (= (x25 x3647) 0)))
(assert (x847 x1252))
(assert (x847 x4817))
(assert (= x4766 (and x3944 x166)))
(assert (= (x1122 (x3860 64 x5236 12)) x5236))
(assert (x847 x1312))
(assert (x847 x1315))
(assert (x847 x5665))
(assert (x847 x3726))
(assert (= (and (not x4343) x223) x37))
(assert (= (and x1728 x4195) x3708))
(assert (x847 x4058))
(assert (x3513 (ite (not (= x4949 0)) 1 0)))
(assert (x367 x2419))
(assert (x847 x5395))
(assert (not (x2689 (x2521 x4221 x995 x4928 x1070 x2187))))
(assert (x847 x588))
(assert (= x3446 (and x3200 (not x2545))))
(assert (=> (>= 10000 x3430) (= (x25 x3430) 0)))
(assert (x847 x4561))
(assert (x847 x1329))
(assert (not (x2689 (x3226 x1096 x44 x490 x3499 x726 x1233))))
(assert (x847 x173))
(assert (= (and x2534 x1277) x5416))
(assert (not (x2689 (x3159 32 x82))))
(assert (= x5270 (and (not x2233) x515)))
(assert (=> (>= 10000 x4429) (= (x25 x4429) 0)))
(assert (x1411 x3264))
(assert (= (x1122 (x2521 x1815 x5008 x3496 x4524 x1291)) x5008))
(assert (= x5565 (x3376 (x3860 x5565 x2909 x1454))))
(assert (x847 x2483))
(assert (= (x2143 (x3860 x3432 x4561 x644)) x644))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4159 x2448 x4715 x220 x5051)))
(assert (= (and x63 x2195) x4612))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x3676 x3103 x2103 x548 x4548)))
(assert (= (x1122 (x3159 x696 x2714)) x2714))
(assert (=> (<= x3496 10000) (= 0 (x25 x3496))))
(assert (x847 x1032))
(assert (=> (<= x2591 10000) (= 0 (x25 x2591))))
(assert (x847 x586))
(assert (= (and x5134 (not x2923)) x2695))
(assert (x1746 (+ x1893 31) 32))
(assert (x2689 1461501637330902918203684832716283019655932542975))
(assert (x847 x4641))
(assert (x847 x2406))
(assert (= (x1122 (x3860 64 1 x5382)) 1))
(assert (=> (>= 10000 x5568) (= 0 (x25 x5568))))
(assert (x847 x5570))
(assert (x847 x3601))
(assert (x2657 x5204))
(assert (x847 x3676))
(assert (x847 x1967))
(assert (x847 x1951))
(assert (=> (>= 10000 x2159) (= 0 (x25 x2159))))
(assert (< (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1096 (x3376 (x2521 x1096 x3719 x311 x156 x1940))))
(assert (= (x1122 (x3159 x4342 x3073)) x3073))
(assert (= (x3860 64 x4006 6) (x25 (x3860 64 x4006 6))))
(assert (> (x3860 64 x4482 100) 10000))
(assert (x847 x2257))
(assert (=> (<= x951 10000) (= 0 (x25 x951))))
(assert (x847 x3679))
(assert (x847 x1816))
(assert (not (x2689 (x4159 x696 x1198 x1113 x1529))))
(assert (x1063 x3040))
(assert (x3513 (ite (not (= 0 x3260)) 1 0)))
(assert (= x5129 (x1122 (x3226 x5203 x5129 x1802 x5468 x3611 x249))))
(assert (x847 x4176))
(assert (x847 x1709))
(assert (x847 x1629))
(assert (< 10000 (x3226 x4543 x2021 x5511 x530 x1828 x5030)))
(assert (x847 x2801))
(assert (x847 x5516))
(assert (= x980 (or x1895 x2035)))
(assert (= (x2143 (x3860 64 x5617 11)) 11))
(assert (=> (>= 10000 x1640) (= (x25 x1640) 0)))
(assert (= x3122 (x4985 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122))))
(assert (x3952 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x954))
(assert (x847 x4293))
(assert (x847 x999))
(assert (x847 x1475))
(assert (= x1983 (and (not x3333) x2331)))
(assert (x847 x1658))
(assert (x847 x427))
(assert (x847 x865))
(assert (x847 x2475))
(assert (=> (>= 10000 x553) (= 0 (x25 x553))))
(assert (= (and x2280 x1103) x297))
(assert (x847 x828))
(assert (x847 x1494))
(assert (x847 x3160))
(assert (x847 x2184))
(assert (= (x2143 (x4159 x2448 x4715 x220 x5051)) x220))
(assert (= 64 (x3376 (x3860 64 x4843 10))))
(assert (= (=> (= (+ x172 x4226) x2076) x106) x4449))
(assert (x847 x2089))
(assert (= (x4693 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179)) x2795))
(assert (= (x25 (x3860 64 1 x1414)) (x3860 64 1 x1414)))
(assert (x847 x5393))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x1315 x369)))
(assert (x847 x545))
(assert (x847 x4695))
(assert (x3952 x3261))
(assert (= (x2521 x1096 x3719 x311 x156 x1940) (x25 (x2521 x1096 x3719 x311 x156 x1940))))
(assert (= 64 (x3376 (x3860 64 x3215 10))))
(assert (= 0 (x25 8365236128558009046904410293209581292053118695343348878262597880337030709248)))
(assert (=> (>= 10000 x5653) (= 0 (x25 x5653))))
(assert (= (x25 (x2521 x3676 x3103 x2103 x548 x4548)) (x2521 x3676 x3103 x2103 x548 x4548)))
(assert (= (x1122 (x3159 32 x418)) x418))
(assert (= (and x79 x246) x4167))
(assert (x847 x4027))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (=> (>= 10000 x5077) (= 0 (x25 x5077))))
(assert (= x2334 (and x622 x5082)))
(assert (= (x2143 (x3860 x432 x850 x685)) x685))
(assert (x847 x5651))
(assert (=> (>= 10000 x3327) (= 0 (x25 x3327))))
(assert (x847 x4892))
(assert (x847 x4385))
(assert (x847 x4597))
(assert (x847 x1770))
(assert (x847 x1723))
(assert (x379 x1086 32))
(assert (= x4981 true))
(assert (= x657 (and x5005 x2749)))
(assert (= (x3226 x4221 x4999 x562 x2941 x3542 x3661) (x25 (x3226 x4221 x4999 x562 x2941 x3542 x3661))))
(assert (< 10000 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207)))
(assert (x847 x1778))
(assert (x847 x4908))
(assert (x847 x5690))
(assert (x3513 (ite (not (= 0 x936)) 1 0)))
(assert (x847 x1986))
(assert (= (x1122 (x3860 64 x1298 10)) x1298))
(assert (x847 x2435))
(assert (= x4098 (x3376 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666))))
(assert (= (and (not x2709) x4280) x3929))
(assert (x847 x3654))
(assert (x847 x2569))
(assert (x1063 x1957))
(assert (=> (>= 10000 x3088) (= 0 (x25 x3088))))
(assert (x847 x3288))
(assert (x367 x2512))
(assert (x847 x5225))
(assert (= x3914 (x1122 (x3159 x1815 x3914))))
(assert (x847 x4624))
(assert (= x3139 (x3573 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653))))
(assert (=> (<= x4410 10000) (= 0 (x25 x4410))))
(assert (x847 x5334))
(assert (= (and (not x1480) x5007) x3905))
(assert (not (x2689 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009))))
(assert (= x652 (=> (and (= x3873 (x959 (- x5450 32))) (= x4243 (x2865 x3713)) (= (+ x4387 1) x2967) (= x2696 (x2124 (+ 32 x3410))) (= (x3860 64 x2332 11) x4387) (> x1551 x3410) (= (+ x2290 2) x1732) (= x5528 (= x4566 0)) (or (= 1 x1488) (= x1488 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x4151 (* x674 32)) (= x3345 (x2781 x2967)) (= 0 x5225) (= (x94 x1732) x5062) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x4496) (and (>= x4496 115792089237316195423570985008687907853269984665640564039457584007913129639776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x4496)) (>= x4496 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= (x959 (- x3410 x4496)) x4808) (= x2609 (x2124 (+ (mod (+ x4151 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1551))) (< x1551 x2609) (<= 1 x2609) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x4496) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1551) (= (x2124 (+ x2696 2)) x944) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x4496) (or (>= x4496 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x4496) (and (>= x4496 115792089237316195423570985008687907853269984665640564039457584007913129639776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x4496))) (<= x1551 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3319 (x210 1 x4243)) (= (x3860 64 x892 3) x3713) (= x5485 (x2124 (+ x729 32))) (= (x959 (- x1551 x3410)) x5450) (= (x2124 (+ 32 x944)) x1551) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x4496) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x4496) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x4496)) (>= x4496 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x93 (x2124 (+ x1551 32))) (< x4496 x3410) (= (x2124 (+ 32 x4496)) x729) (= (x959 (- x3319 (mod (ite (< x4566 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1488) (= x3410 (x2124 (+ 32 x5485))) (= (x3860 64 x2332 11) x2290) (= x5293 (x4727 x4243 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x4496) (= x1698 (x959 (- x4808 32))) (= (x3860 64 x2332 11) x1301) (<= x1551 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (ite (> x3319 0) x5293 (x210 127 x5293)) x4566) (= (x4727 (+ 31 x4566) 32) x674)) (and (=> (and (not x5528) (= x1274 (< 31 x4566))) (and (=> (and (and (= x3118 (x4727 x3407 256)) (= (* 256 x3118) x1937) (= (x2865 x3713) x3407)) (not x1274)) x1486) (=> (and (and (= (+ 1 x2686) x2449) (= (x3342 x2686) x3487) (= (x2124 (+ x93 x4566)) x3184) (= (< x2402 x3184) x2863) (= x2402 (x2124 (+ 32 x93))) (= x2686 (x3159 32 x3713))) x1274) (and (=> x2863 x1888) (=> (not x2863) x4234))))) (=> x5528 x1486)))))
(assert (x847 x403))
(assert (= (and x3459 x3669) x773))
(assert (> (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242) 10000))
(assert (x847 x2840))
(assert (= x3061 (=> (and (>= x560 x875) (not (> x3222 x3276)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3276) (= x4580 x265) (= 128 x117) (= (<= x5203 224) x3056) (= (x386 132) x1144) (= (x4120 x5672) x5230) (= false x4593) (< x4383 x3276) (= x376 false) (= (+ x178 32) x2184) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5251) (= (+ x178 31) x4383) (>= x5446 1) (= (x2015 x5672) x1700) (= x135 x5017) (= x4556 x4030) (>= x5251 196) (= x519 x2567) (= (x3860 64 x4580 7) x2625) x1155 (= (x4120 x4268) x3045) (= x2567 (+ x875 x5210)) (= x560 (x4120 x4268)) (= x3044 (x959 (- (mod (+ x5201 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128))) (= x954 (+ 164 x1144)) (= (+ x135 4) x178) (= (+ x1144 128) x5201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2567) (= 3521034783 x1740) (= x1474 (- x3045 x875)) (>= 127 x2417) (= (x386 x178) x3462) (not (< x3276 x954)) (>= 18446744073709551615 x3462) (>= 18446744073709551615 x1144) (>= x1700 1) (= x5446 (x2015 x4162)) (= x3276 x5251) (= x5203 (x959 (- x3044 32))) (= x5210 (x2467 x5672)) (= x1357 94926909962862326217726538024181891405690106632559804934698421914364834480128) (< (+ x875 x5230) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x5210 x875) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x2184 x3462) x3222) (= x416 128) (= 164 x3615) (= x1155 (= (x4751 132) x3237)) (<= 196 x3276) (>= 127 x2417) (<= 0 x2567) (= (+ x1144 128) x2421) (= x5251 (x959 (- x2848 128)))) (and (=> (and (= (x2521 x5203 x2164 x3862 x4636 x5174) x5071) (= (x5630 192) x551) (= (x5630 192) x3369) (= x1776 (x5630 160)) (= (x4159 x5203 x372 x1776 x1213) x5449) (= x1802 (x5630 160)) (= (x3226 x5203 x5129 x1802 x5468 x3611 x249) x3576) (= x4995 (x5630 128)) (= (x5630 192) x5468) (= x2045 (x5630 288)) (= x3957 (x4535 0)) (= x4868 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045)) (= x4933 (<= x3044 224)) (= x4638 (x5630 256)) (= x618 (x5630 224)) (= x2563 (x5630 128)) (= (x5630 192) x1213) (= x5043 (x3159 x5203 x4995)) (= (x3860 x5203 x3210 x3340) x2285) (= (x5630 160) x3340) (= x3892 (x5630 288)) (= x3611 (x5630 224)) (= x249 (x5630 256)) (= (ite (= x5203 0) x3957 (ite (<= x5203 32) x5043 (ite (<= x5203 64) x2285 (ite (<= x5203 96) x5449 (ite (<= x5203 128) x5071 (ite (<= x5203 160) x3576 (ite (<= x5203 192) x4868 (ite (>= 224 x5203) x4258 x3156)))))))) x4438) (= x159 (x5630 224)) (= (x5630 128) x5129) (= x828 (x5630 128)) (= (x5630 320) x2288) (= (x5630 256) x4918) (= (x5630 160) x607) (= (x5630 160) x3862) (= x3210 (x5630 128)) (= x3193 (x5630 160)) (= x2164 (x5630 128)) (= (x5630 192) x4636) (= x4258 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)) (= x5174 (x5630 224)) (= x372 (x5630 128))) (and x4933 (=> (and (= x2448 (x959 (- x2494 128))) (= x3485 (x3226 x3044 x1209 x4938 x5515 x3235 x4481)) (= x5676 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898)) (= x3872 (x5630 288)) (= (x5630 288) x3898) (= (x5630 224) x4261) (= x1475 (x5630 128)) (= (x5630 128) x1209) (= (x5630 128) x1504) (= (x5630 160) x129) (= (x5630 256) x3695) (= x5477 (x5630 160)) (= x193 (x3860 x3044 x1116 x5477)) (= (x5630 192) x1635) (<= 1 x1028) (= (x5630 160) x5086) (= x5164 (x5630 192)) (= (x5630 224) x3235) (= (x5630 128) x1116) (= x4938 (x5630 160)) (= (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218) x5399) (= (x5630 192) x1380) (= x518 (x5630 160)) (= x5675 (x5630 192)) (= (x5630 128) x4652) (= (x5630 128) x664) (= x1028 (x774 x4169)) (= x4481 (x5630 256)) (= (x4535 0) x5220) (= (<= x2448 224) x4565) (= x5076 (x3159 x3044 x1504)) (= (x5630 128) x3970) (= (x5630 256) x829) (= x2094 (x5630 160)) (= x4479 (x5630 224)) (= (x4159 x3044 x1475 x5086 x5164) x3617) (= (+ x3462 128) x2494) (= x489 (x5630 224)) (= (x5630 320) x4218) (= x4169 (x3860 64 x4556 (ite (= x3044 0) x5220 (ite (>= 32 x3044) x5076 (ite (>= 64 x3044) x193 (ite (<= x3044 96) x3617 (ite (>= 128 x3044) x4772 (ite (>= 160 x3044) x3485 (ite (>= 192 x3044) x5676 (ite (>= 224 x3044) x5399 x3739)))))))))) (= x5515 (x5630 192)) (= (x2521 x3044 x3970 x518 x1635 x4479) x4772)) (and (=> (and (= x2600 (x4535 0)) (= (x4295 128) x620) (= x3358 (x4295 192)) (= x2926 (x4295 160)) (= x3843 (x4295 192)) (= (x4295 224) x4451) (= (x4295 128) x1566) (= x3567 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653)) (= (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432) x505) (= x3987 (x4159 x2448 x4715 x220 x5051)) (= x148 (x959 (- x4543 32))) (= x717 (x3226 x2448 x2591 x4502 x308 x202 x4027)) (= (x4295 128) x4096) (= x4475 (x2521 x2448 x1566 x4600 x3358 x4070)) (= x1378 (x4295 128)) (= x2455 (+ 128 x1144)) (= x354 (x4295 256)) (= (x4295 160) x220) (= x308 (x4295 192)) (= (x4295 192) x1860) (= (x4295 128) x3647) (= x4502 (x4295 160)) (= x2591 (x4295 128)) (= x4600 (x4295 160)) (= x4543 (x959 (- (mod (+ x2455 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128))) (= (x4295 192) x5051) (= (+ 128 x1144) x536) (= (x4295 256) x4027) (= (x4295 128) x4715) (= x962 (x3860 64 x4580 7)) (= (x4295 320) x1432) (= (x4295 224) x4070) (= (x4295 288) x149) (= (x4295 224) x787) (= x5653 (x4295 288)) (= (x4295 160) x4327) (= x1028 x2099) (= (>= 224 x148) x473) (= (x3159 x2448 x620) x3082) (= x3139 (x4295 256)) (= (x4295 160) x2055) (= (x3860 x2448 x3647 x4327) x4533) (= x2099 (ite (= 0 x2448) x2600 (ite (>= 32 x2448) x3082 (ite (<= x2448 64) x4533 (ite (>= 96 x2448) x3987 (ite (>= 128 x2448) x4475 (ite (<= x2448 160) x717 (ite (>= 192 x2448) x3567 (ite (>= 224 x2448) x505 x4136))))))))) (= (x4295 224) x202) (>= x2099 1)) (and x473 (=> (and (= x2586 (x4542 160)) (= x5473 (>= 224 x4543)) (= (x4542 128) x4710) (= x2934 (x4542 224)) (= x767 (x3860 x148 x5527 x2105)) (= x834 (x4542 192)) (= x3005 (x4542 160)) (= x4215 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39)) (= x3015 (x4542 160)) (= (x4542 192) x897) (= (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051) x5632) (= (x4542 256) x4817) (= (x4542 128) x5444) (= x422 (x4542 160)) (= x3546 (x4542 224)) (= (x4542 224) x4954) (= x5027 (x4542 192)) (= x4579 (x4542 256)) (= (x2521 x148 x4490 x3005 x897 x4954) x1898) (= (x4542 192) x5083) (= (x4542 128) x4490) (= x2036 (x4542 160)) (= (x4542 224) x1523) (= (x3226 x148 x2796 x422 x4121 x1523 x2759) x772) (= (x4542 128) x2796) (= (x4542 288) x3051) (= (x4535 0) x712) (= (x4542 192) x4121) (= (x4542 288) x3842) (= x3583 (x4542 128)) (= x2759 (x4542 256)) (= x4555 (x4542 128)) (= x5527 (x4542 128)) (= (x3159 x148 x4555) x4850) (= x3434 (ite (= x148 0) x712 (ite (>= 32 x148) x4850 (ite (<= x148 64) x767 (ite (>= 96 x148) x4974 (ite (<= x148 128) x1898 (ite (>= 160 x148) x772 (ite (>= 192 x148) x5632 (ite (>= 224 x148) x4215 x3110))))))))) (= x39 (x4542 320)) (= (x4542 160) x2105) (= (x4159 x148 x3583 x2036 x834) x4974)) (and (not (and (= x1107 (x4542 192)) (= (x4542 160) x5511) (<= x1576 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x3679 (+ x2911 160)) (= (x4542 160) x1883) (= (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657) x115) (= x421 (x3159 x4543 x2716)) (= x1190 (x4542 160)) (= x2911 (* 32 x4315)) (= x1576 (x5104 x3679)) (= x2745 (x4542 288)) (= (x4542 224) x1828) (= x4604 (x4542 160)) (= x5442 (x3860 64 x4556 (ite (= 0 x4543) x225 (ite (<= x4543 32) x421 (ite (<= x4543 64) x1624 (ite (<= x4543 96) x3640 (ite (<= x4543 128) x4028 (ite (<= x4543 160) x120 (ite (>= 192 x4543) x782 (ite (>= 224 x4543) x115 x5087)))))))))) (= x5570 (x4542 160)) (= x687 (+ x1144 160)) (= x5030 (x4542 256)) (= (+ x3679 32) x894) (= x1298 (x5104 x894)) (= (x4542 320) x5657) (= x1988 (x4542 192)) (= x431 (* x4105 32)) (= x5296 (x4542 128)) (= (x2521 x4543 x4410 x1883 x2314 x1866) x4028) (= x120 (x3226 x4543 x2021 x5511 x530 x1828 x5030)) (= x2716 (x4542 128)) (= x4206 (x4542 288)) (= x4105 (x4727 (+ x3462 31) 32)) (= (x3860 64 x1298 10) x2896) (= x1866 (x4542 224)) (= x3819 (x4542 256)) (= x2021 (x4542 128)) (= x5566 (x4542 128)) (<= 32 x1576) (= (x4542 192) x530) (= (x4727 (+ 31 x1144) 32) x4315) (= x4410 (x4542 128)) (= (x4542 192) x1876) (= x1624 (x3860 x4543 x5296 x1190)) (= (+ x3679 32 x431) x4045) (= (x4542 192) x2314) (= (x4535 0) x225) (= x3516 (x4542 160)) (= x4204 (+ x894 x3462)) (= x5667 (x4542 128)) (= x782 (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745)) (= (x4542 224) x2801) (= x3640 (x4159 x4543 x5006 x4604 x1107)) (= (x4542 224) x3650) (< x3679 x4045) (= (x4542 256) x360) (= (x4542 128) x5006) (= 128 x1696))) x5473)))) x4565)))) x3056))))
(assert (x847 x1919))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4159 x5565 x3137 x4053 x405)))
(assert (< 10000 (x3860 64 x892 4)))
(assert (x847 x4743))
(assert (< (x3860 64 x3281 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1043))
(assert (x367 x5204))
(assert (not (x2689 (x2521 x3432 x539 x4357 x5079 x4952))))
(assert (x847 x1773))
(assert (= (and x4584 x3007) x4117))
(assert (= (and (not x2087) x2132) x2966))
(assert (= x5430 (and x4355 x854)))
(assert (< 10000 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009)))
(assert (x847 x1999))
(assert (= (x1122 (x3860 x5203 x3210 x3340)) x3210))
(assert (= x5312 (and x823 x3271)))
(assert (= (x3159 x696 x2714) (x25 (x3159 x696 x2714))))
(assert (x367 x558))
(assert (x847 x4260))
(assert (= (=> (and (= x3273 (x1503 516)) (= x2208 (= x3273 0))) (and (=> (and x2208 (and (= x3983 (x2124 (+ x1318 32))) (= x1318 (x2124 (+ 4 x5256))) (= x584 (x2124 (+ 32 x643))) (= x876 false) (= (x2124 (+ x3983 32)) x643) (= true x4076) (= x3169 132))) x3832) (=> (and (and (= x5003 (x3537 354)) (= (x2559 x5176) x5387) (= (x3860 64 x892 5) x5176) (= x68 (> x5003 (ite (= 0 x5387) 10000 x5387)))) (not x2208)) (and (=> (and (not x68) (and (= (x709 450) x4953) (= (x2124 (+ 31 x4953)) x1086) (= x2729 (x2124 (+ x5586 32))) (= x5668 (x2124 (+ 32 x5610))) (= x3042 (x2124 (+ x4596 x2729))) (= x2466 (x2124 (+ x5256 4))) (= (x2124 (+ x1254 32)) x661) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x397) x3654) (= x4802 (x2124 (+ x5668 32))) (= (x2124 (+ 192 x2466)) x1254) (= x4230 (x959 (- x5586 x2466))) (= (x3537 354) x4468) (= x5187 (x959 (- x3042 x5256))) (= x1462 (x2124 (+ 32 x556))) (= (x2124 (+ x661 x3654)) x916) (= x1109 (x2124 (+ x4468 31))) (= (x2124 (+ 32 x916)) x1204) (= x677 (x2015 x4202)) (= x4896 (x1503 516)) (= (x959 (- x916 x2466)) x704) (= (x2124 (+ 31 x4896)) x397) (= (x2124 (+ 32 x1462)) x5610) (= x5586 (x2124 (+ x1204 x3807))) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1109) x3807) (= x556 (x2124 (+ 32 x2466))) (= (= x677 0) x2280) (= x4596 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1086)))) (and (=> (and x2280 (and (= x3169 0) (= false x4514) (= true x670))) x3832) (=> (and (and (= (< (+ x4629 x1140) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1219) (= (and x2226 x1219) x3996) (= (x4120 x4202) x1140) (= x2226 (>= x5242 x4629)) (= (x4120 x4162) x5242)) (not x2280)) (and (=> (and x3996 (and (>= 127 x4333) (= (+ x4328 x4629) x4192) (>= x5187 420) (= x2048 x4162) (= 3313512704 x1493) (= x4391 (= (x3895 196) x4896)) (= x4192 x2183) (= x744 192) (= (x4235 x4202) x4328) x4391 (>= x4192 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4629 x4328)) (= (- x4564 x4629) x3303) (= false x1695) (<= 1 x1953) (= (x2015 x2605) x1953) (= x4564 (x4120 x4162)) (= x5187 x255) (= x892 x3925) (= x1049 (or (and (< (- x255 4) 192) (= (<= (- x255 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x255 4)))) (= x738 false) (= 0 x1951) (= x4230 x4450) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4192) (>= x255 420) (= x3107 x704) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x2190) (>= 127 x4333))) (and (=> (and (= x4077 true) (not x1049)) (and (=> (not x4077) x1437) (=> (and (= x1002 (and (< 227 x255) (= true (<= x255 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x4077) (and (=> (and x1002 (and (= x2098 (x4895 196)) (= (> x2098 18446744073709551615) x2973))) (and (=> x2973 x856) (=> (and (not x2973) (and (= (< x255 x1607) x446) (= (x2124 (+ x2098 228)) x1607))) (and (=> x446 x4320) (=> (and (not x446) (= x1594 (< 18446744073709551615 x704))) (and (=> x1594 x1437) (=> (and (not x1594) (and (= x4300 (x2124 (+ x682 31))) (= x682 (x2124 (+ x704 4))) (= (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x255) (> x4300 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4300) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x255)) (> x255 x4300))) x5339))) (and (=> (and (and (= (< 18446744073709551615 x5200) x2948) (= (x4895 x682) x5200)) x5339) (and (=> x2948 x856) (=> (and (and (= x2965 (x2124 (+ x682 32))) (= (> x1159 x255) x3363) (= x1159 (x2124 (+ x2965 x5200)))) (not x2948)) (and (=> x3363 x4320) (=> (and (not x3363) (= x488 (> x4230 18446744073709551615))) (and (=> (and (not x488) (and (= x3225 (x2124 (+ x4230 4))) (= (x2124 (+ x3225 31)) x2177) (= x2379 (or (and (> x2177 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x255 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x2177 x255) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x255) (<= x2177 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) (and (=> (and (and (= x3000 (x4895 x3225)) (= x5664 (> x3000 18446744073709551615))) x2379) (and (=> x5664 x856) (=> (and (not x5664) (and (= x522 (x2124 (+ x3000 x1946))) (= x1136 (> x522 x255)) (= x1946 (x2124 (+ 32 x3225))))) (and (=> x1136 x4320) (=> (and (and (= x4923 x2950) (= x4255 x4107) (= x1762 x4202) (= x2209 x3988) (= x5608 x5061) (= x267 x5186) (= x4039 x2070) (= x1419 x3681) (= x1521 x3269) (= 1 x1383) (= x3357 x5682) (= x1407 x638) (= x1415 x5389) (= x5542 x4123)) (not x1136)) x1608))))) (=> (not x2379) x1982))) (=> x488 x1437))))))) (=> (not x5339) x1982))))))))) (=> (not x1002) x1982))))) (=> x1049 x1437))) (=> (and (and (= x3384 x5389) (= x4456 x2950) (= x5682 x3019) (= x749 x2209) (= x5608 x5313) (= x4039 x4188) (= x5542 x323) (= x3681 x2058) (= x2994 x4107) (= x3903 x4202) (= x1910 x5186) (= x4773 x3269) (= 0 x258) (= x1407 x2142)) (not x3996)) x2790))))) (=> (and (and (= x2410 (x2124 (+ x2266 32))) (= x2913 (x2124 (+ 32 x2410))) (= x3209 true) (= x3169 100) (= x55 false) (= (x2124 (+ 4 x5256)) x2266)) x68) x3832))))) x4278))
(assert (= x2357 (x3021 (x2521 x432 x4749 x1511 x5607 x2357))))
(assert (x3500 x4214))
(assert (= x5380 (x2715 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395))))
(assert (= (x1122 (x3860 64 x5391 11)) x5391))
(assert (x847 x2764))
(assert (x847 x2963))
(assert (= (and (not x4004) x3221) x4907))
(assert (=> (>= 10000 x3848) (= (x25 x3848) 0)))
(assert (x847 x3304))
(assert (< 10000 (x3860 64 x5067 (ite (= x1903 0) x5373 (ite (<= x1903 32) x2443 (ite (>= 64 x1903) x3423 (ite (<= x1903 96) x1087 (ite (<= x1903 128) x2408 (ite (<= x1903 160) x1780 (ite (<= x1903 192) x1623 (ite (>= 224 x1903) x2859 x2352)))))))))))
(assert (x3952 x3353))
(assert (= x935 (x4693 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392))))
(assert (x847 x3575))
(assert (=> (<= x3499 10000) (= (x25 x3499) 0)))
(assert (= x4345 (x3021 (x2521 x1893 x1440 x535 x1449 x4345))))
(assert (x847 x2254))
(assert (x847 x3498))
(assert (x847 x4482))
(assert (not (x2689 (x3159 x432 x3550))))
(assert (= (x25 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)) (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)))
(assert (=> (<= x5520 10000) (= 0 (x25 x5520))))
(assert (=> (>= 10000 x4988) (= (x25 x4988) 0)))
(assert (= (x4693 (x3226 x2207 x3010 x1273 x2454 x3720 x4050)) x2454))
(assert (x847 x3805))
(assert (< (x3860 x1893 x2972 x3027) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3376 (x3860 64 x892 5)) 64))
(assert (x847 x4943))
(assert (=> (>= 10000 x991) (= (x25 x991) 0)))
(assert (= x2366 (x1122 (x3860 64 x2366 12))))
(assert (=> (>= 10000 x2200) (= (x25 x2200) 0)))
(assert (= x5139 (and x3907 x908)))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x3513 1000000000))
(assert (=> (>= 10000 x111) (= (x25 x111) 0)))
(assert (= (x3376 (x3159 x3044 x1504)) x3044))
(assert (x847 x4825))
(assert (= (x25 (x3860 64 x735 2)) (x3860 64 x735 2)))
(assert (> (x3860 64 x2010 3) 10000))
(assert (x847 x790))
(assert (x847 x1940))
(assert (= x1412 (x3573 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326))))
(assert (= (x25 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245)) (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245)))
(assert (x847 x651))
(assert (not (x2689 (x4159 x1315 x2398 x4416 x4434))))
(assert (x847 x2394))
(assert (x847 x1521))
(assert (x847 x3581))
(assert (x847 x4191))
(assert (= (and x1137 x4691) x139))
(assert (= x803 (x2143 (x3226 x1893 x5516 x803 x152 x2107 x5455))))
(assert (x847 x2403))
(assert (x847 x3329))
(assert (=> (<= x4121 10000) (= 0 (x25 x4121))))
(assert (x847 x3988))
(assert (x847 x5369))
(assert (= (x3573 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)) x2174))
(assert (x926 32 (ite (not (= x3237 0)) 1 0)))
(assert (x847 x3131))
(assert (x847 x1415))
(assert (= (x1122 (x3860 64 x4547 6)) x4547))
(assert (= x1200 (or x2525 x382)))
(assert (=> (>= 10000 x607) (= (x25 x607) 0)))
(assert (x847 x5541))
(assert (=> (>= 10000 x3465) (= 0 (x25 x3465))))
(assert (x847 x4203))
(assert (x847 x2716))
(assert (= (x3376 (x3860 64 x5021 100)) 64))
(assert (= (x3860 x4348 x1032 x4395) (x25 (x3860 x4348 x1032 x4395))))
(assert (x847 x4596))
(assert (x847 x1413))
(assert (x847 x1741))
(assert (x847 x2642))
(assert (=> (<= x1298 10000) (= 0 (x25 x1298))))
(assert (x847 x4872))
(assert (x847 x4525))
(assert (x847 x4952))
(assert (x847 x2979))
(assert (x3952 x4527))
(assert (x847 x1807))
(assert (= (=> (and (= (x4914 x4162) x1118) (= 36 x4800) (<= x3401 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4914 x4162) x427) (= (x959 (- x3213 x2818)) x4800) (= x2027 (x2015 x2413)) (= (x2124 (+ x5105 32)) x3213) (< (+ x1121 x3991) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x427 x1121) x1308) (= x3922 (x4914 x2413)) (= x3401 x1452) (>= x3401 0) (<= x1121 x1118) (= (x2124 (+ 4 x2818)) x5105) (= (= x2424 x2413) x2091) (<= 1 x2027) (= x3401 (+ x1121 x3991)) (= x3991 (x5135 x2413)) (< (+ x3922 x1121) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (=> (and (not x2091) (and (= 36 x1960) (= x5106 (x3860 64 x1495 36)) (= false x5495) (= x735 (+ 1 x1495)) (= x2717 x4162) (= x5672 x4162) (= x2260 1341992515) (<= 1 x3249) (= x3249 (x2015 x4268)) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x5128) (= x3104 (+ x1495 1)) (= (= x257 0) x611) (= x4268 x2413) (<= x1495 254) (<= x2413 1461501637330902918203684832716283019655932542975) (>= x2413 1) (= false x4522) (>= 127 x5363) (>= 127 x5363) (= (x5168 x5106) x257))) (and (=> (and (and (= x314 x1555) (= x5489 x3146) (= (x5222 x2429) x4972) (= x3253 x5204) (= x3336 x4943) (= x937 (x3477 x3659)) (= (x5222 x1364) x4963) (<= 1 x200) (>= 1461501637330902918203684832716283019655932542975 x200) (>= 127 x1050) (>= 1461501637330902918203684832716283019655932542975 x4963) (= x5243 x200) (= (x5168 x4398) x4943) (= x2702 (x5168 x4398)) (= x3504 x4637) (= (+ x4145 1) x5564) (<= 1 x5598) (= x1237 x2702) (= (+ 1 x735) x4006) (= x4752 x977) (<= 100000 x2702) (= x4963 x4671) (= x4590 132) (= x4268 x200) (= x3392 3812630263) (<= x735 251) (= (x3860 64 x735 2) x1364) (= x759 (+ 1 x5564)) (= x3248 x5038) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x617) (= (x2015 x5672) x2706) (>= 1461501637330902918203684832716283019655932542975 x4752) (= x4462 x4972) (= x937 x5119) (<= x937 65535) (= x1981 x3598) (= x4398 (x3860 64 x5564 36)) (= (x3477 x3659) x3248) (= x3050 false) (= (+ x735 1) x2561) (= x4832 (+ x5564 1)) (= x1600 x3696) (>= x2706 1) (= x184 (+ 1 x4145)) (= (x2015 x4162) x5598) (= x5580 x4043) (= false x1056) (>= 127 x1050) (>= x735 1) (= (x3860 64 x4145 2) x2429) (= x4883 (+ x5564 1)) (= x889 128) (= x2918 x5672) (= (+ 1 x4006) x4241) (= x4145 (+ 1 x4006)) (= x1981 (x5222 x1364)) (= x4752 (x5222 x2429)) (= (x3860 64 x4006 6) x3659)) x611) x5487) (=> (and (not x611) (= x1078 (= x257 1))) (and (=> (and (and (>= 65535 x5553) (or (= x5496 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x5496)) (= x5496 (x959 (- x2333 (mod (ite (> 32 x1125) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (+ 1 x2366) x559) (>= 253 x735) (= (ite (> x2333 0) x3040 (x210 127 x3040)) x1125) (= (+ x2366 1) x2476) (= x84 (x4860 x2251)) (= x2366 (+ 1 x735)) (<= x84 18446744073709551615) (= x1006 (x210 1 x5204)) (= x2333 (x210 1 x5204)) (= (x3860 64 x735 6) x958) (<= 1 x735) (= x2251 (x3860 64 x2366 12)) (= (= x1006 0) x377) (= (x4727 x5204 2) x3040) (= (x3477 x958) x5553) (= (+ 1 x735) x1917)) x1078) (and (=> (and (and (= x1246 (x3159 32 103)) (= x3683 (< 0 x1125))) (not x377)) (and (=> x3683 x2606) (=> (and (= 0 x4623) (not x3683)) x795))) (=> (and x377 (and (= x3836 (* (ite (not (= 0 x1125)) 1 0) 32)) (= x4299 (+ 292 x3836)) (or (= x3836 32) (= x3836 0)) (= x4317 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5204)))) x3355))) (=> (and (= x4304 (= 2 x257)) (not x1078)) (and (=> (and x4304 (and (= (x959 (- x2505 (mod (ite (< x936 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5460) (= (x3477 x2305) x1804) (= x5501 (x4727 x5204 2)) (= (ite (> x2505 0) x5501 (x210 127 x5501)) x936) (= x4411 (+ x3454 1)) (= x2305 (x3860 64 x735 6)) (<= x3380 18446744073709551615) (= (x4860 x62) x3380) (= x3454 (+ x735 1)) (= x281 (x210 1 x5204)) (= x62 (x3860 64 x3454 12)) (= x2505 (x210 1 x5204)) (= x3730 (= 0 x281)) (or (= x5460 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5460)) (<= 1 x735) (= x2041 (+ x3454 1)) (= x2522 (+ 1 x735)) (>= 65535 x1804) (<= x735 253))) (and (=> (and x3730 (and (or (= x3885 32) (= 0 x3885)) (= x3074 (+ x3885 292)) (= (* 32 (ite (not (= 0 x936)) 1 0)) x3885) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5204) x2640))) x922) (=> (and (and (= (< 0 x936) x1728) (= x2030 (x3159 32 103))) (not x3730)) (and (=> (and (= x5146 0) (not x1728)) x32) (=> x1728 x3132))))) (=> (and (= x3486 (= x257 3)) (not x4304)) (and (=> (and (and (and (= false x938) (>= 127 x17) (= 0 x3297) (= (x3860 64 x735 36) x2096) (= 100 x2473) (= x5238 0) (= x5654 (x2015 x4162)) (= x350 (x3860 64 x2067 100)) (<= 1 x217) (= (+ 2 x5476) x1492) (= 128 x277) (= x287 68) (= x2822 x261) (= 0 x4134) (= false x4601) (>= x2921 1) (= false x2875) (= 0 x1235) (= (+ 1 x2067) x2175) (>= 127 x17) (>= x5654 1) (= (x3860 64 x2822 11) x5476) (= false x5647) (= x492 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= x3181 486791245) (= x3155 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= x2071 (x3860 64 x2822 11)) (>= x1847 1) (= x2822 (x5168 x2096)) (= x261 x1329) (= 1 x2121) (>= 127 x105) (= x4521 x353) (= x1847 (x2015 x4162)) (= x114 x1329) (= 3957931183 x1811) (>= x735 1) (= x5406 false) (= x2121 (x2537 x716)) (<= x2413 1461501637330902918203684832716283019655932542975) (>= 253 x735) (= 128 x4273) (= x2413 x4268) (>= x2413 1) (= x716 (x3860 64 x2822 11)) (= (x2015 x4162) x217) (= x4718 (+ x735 1)) (>= 127 x105) (= (+ 1 x2067) x2995) (= (x2360 x350) x4521) (= x2921 (x2015 x5672)) (= x2278 x114) (= (+ 1 x735) x2067)) (or (and (not x4601) (= x3120 (ite x4601 1 0))) (and x4601 (and (= (ite (not (= x200 x4162)) 1 0) x3120) (>= 1461501637330902918203684832716283019655932542975 x200))))) x3486) x1473) (=> (and (not x3486) (= x3333 (= 4 x257))) (and (=> (and (= x4113 (= x257 5)) (not x3333)) (and (=> (and (and (>= 252 x735) (= (x959 (- x428 (mod (ite (< x3237 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5634) (= x4556 (x4860 x5272)) (= (x4727 x5204 2) x1389) (= x5214 (+ 1 x2681)) (= x622 (= x4853 0)) (= (ite (> x428 0) x1389 (x210 127 x1389)) x3237) (= x2681 (+ 1 x735)) (= (x210 1 x5204) x428) (= (+ x5214 1) x3725) (= x1659 (+ 1 x5214)) (= (x3860 64 x2681 6) x2897) (or (= x5634 1) (= x5634 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (>= 65535 x4580) (= x550 (+ x2681 1)) (= x4876 (x3860 64 x735 36)) (<= x4556 18446744073709551615) (= x5272 (x3860 64 x5214 12)) (= (x5168 x4876) x875) (>= x735 1) (= (x210 1 x5204) x4853) (= (+ x735 1) x1205) (= (x3477 x2897) x4580)) x4113) (and (=> (and (and (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5204) x2370) (or (= 0 x940) (= 32 x940)) (= x940 (* 32 (ite (not (= 0 x3237)) 1 0))) (= x645 (+ x940 292))) x622) x1584) (=> (and (not x622) (and (= (< 0 x3237) x3874) (= x2756 (x3159 32 103)))) (and (=> x3874 x4302) (=> (and (not x3874) (= x441 0)) x2958))))) (=> (and (= x2647 (= 6 x257)) (not x4113)) (and (=> (and (and (and (>= x735 1) (= (x5168 x435) x3687) (= x2271 (+ x3512 1)) (= x2332 (x5168 x3084)) (<= x4367 127) (>= 251 x735) (<= x273 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ 1 x2573) x4385) (<= 1 x1496) (= x80 x4822) (< (+ x1843 x1461) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1843 (x5168 x1186)) (= false x2942) (>= 127 x4367) (= x776 (not (= x4162 x4268))) (= x2573 (+ x735 1)) (= x4630 x5364) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x3595) (= x2933 486791245) (= x5364 x5060) (= x1112 (x4120 x4268)) (= x3851 (x2015 x5672)) (= (x568 x5672) x5022) (= x273 (+ x1843 x5022)) (= (- x927 x1843) x458) (= (x2015 x4162) x1496) (= (+ 1 x1199) x4591) (= false x1431) (= (ite x776 1 0) x5321) (= (+ x735 1) x3778) (= x4630 (x5168 x154)) (= x2332 x4822) (= x3512 (+ x1199 1)) (>= x273 0) (= x273 x3621) (= x1042 x3687) (= (x3860 64 x1199 36) x154) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5022 x1843)) (= (x3860 64 x3512 36) x435) (= x3084 (x3860 64 x2573 36)) (= x1042 x596) (= x4975 100) (>= x1112 x1843) (= x927 (x4120 x4268)) (= x1461 (x4120 x5672)) (= x1177 (+ 1 x3512)) (= 128 x4991) (= x1199 (+ 1 x2573)) (>= x3851 1) (= x1186 (x3860 64 x735 36))) (or (and (and (<= 1 x200) (>= 1461501637330902918203684832716283019655932542975 x200) (= x4268 x200)) x776) (and (= x5321 0) (not x776)))) x2647) x250) (=> (and (= x5315 (= x257 7)) (not x2647)) (and (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x2210) (<= x4607 127) (= (+ x735 1) x3367) (<= x4607 127) (= 128 x5522) (>= x200 1) (= (x2015 x5672) x4620) (= x1211 74700126319118050543342327103397598470879858733489597287354029460387927162880) (= (x4120 x4162) x4592) (= 2770781680 x5386) (= x898 false) (>= 254 x735) (= (x2015 x4162) x4094) (= (< 0 x4592) x5055) (= x4626 36) (= (x3860 64 x735 2) x1597) (>= x735 1) (= x4268 x200) (= x3495 false) (>= x4620 1) (= x5601 (+ x735 1)) (<= 1 x4094) (<= x200 1461501637330902918203684832716283019655932542975) (= x1256 x2210) (= (x5222 x1597) x2210)) x5315) (and (=> (and x5055 (and (and (= x3031 x4044) (= (x410 x2210) x1980) (= (- x1395 x4592) x3154) (<= 0 x4044) (= x4109 (x2437 x2210)) (= x3899 (= x1980 (x2014 x2210))) (= x5334 (x410 x4162)) (<= x4374 4294967295) (= (>= (x2014 x4162) x5334) x3639) x3639 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4109 x4592)) (= x1395 (x4120 x4162)) (<= x4592 x5367) (<= x4044 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1769 x4592)) (= (x4120 x4162) x5367) x3899 (= x1436 (= x4374 0)) (= (+ x4109 x4592) x4044) (= x1769 (x4120 x2210)) (= 128 x710) (<= 1 x3624)) (or (and (not x1436) (and (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2254) x2394) (= x2254 (+ x4374 63)) (>= x2394 1) (<= x2394 4294967358))) x1436))) x4061) (=> (and (and (= x455 x5489) (= x5580 x1596) (= (+ 1 x735) x468) (= x5452 x1555) (= x5672 x3116) (= x5419 x5204)) (not x5055)) x2834))) (=> (and (and (= x1722 (= 8 x257)) (or (and (not x1722) (and (= x5441 x1248) (= x735 x5562))) (and x1722 (and (= 1313998243 x27) (= x5562 (+ x735 1)) (<= x735 254) (<= 100000 x4316) (= (+ x735 1) x4894) (= (x5168 x1272) x4316) (= x4268 x200) (= x92 false) (<= 1 x2403) (<= x1525 127) (>= 1461501637330902918203684832716283019655932542975 x200) (>= x735 1) (= x4911 35425322552009646506518338594398286811668114190755561836384294568426616127488) (= 128 x2462) (>= x200 1) (= (x5168 x1272) x5350) (= x429 x4316) (= (+ 1 x735) x3368) (= (x3860 64 x735 36) x1272) (<= x1525 127) (= (x2015 x5672) x5578) (= x5107 false) (<= 1 x5578) (= (x2015 x4162) x2403) (= x5350 x1248) (= x1381 36))))) (not x5315)) x592))))))) (=> x3333 x3094))))))))))) (=> (and (and (= x1555 x355) (= x4032 false) (= x2413 x1348) (= 36 x3878) (<= x1033 127) (= (x2015 x2424) x3106) (= x2878 (x2124 (+ x1121 x4523))) (<= 1 x3106) (= x1370 x892) (= x494 x1600) (= x1495 x1640) (= x5345 x4162) (= x5115 36180046632115354981904271164172418022085455641023445553456023893925156618240) (= x2493 (x3860 64 x4162 1)) (= x5672 x1499) (= 1341992515 x2465) (= x3601 x5204) (= x3504 x2373) (>= 127 x1033) (= (x594 x2493) x4523) (= x3712 x5441) (not (> x4523 x2878)) (= x5580 x1305) (= x923 false) (= x3831 x200) (= x558 x5489) (= x546 x1294)) x2091) x5596))) x2842))
(assert (= x1529 (x4693 (x4159 x696 x1198 x1113 x1529))))
(assert (= x2579 (x2143 (x3860 64 1 x2579))))
(assert (x847 x5260))
(assert (x847 x2729))
(assert (= x2045 (x2715 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045))))
(assert (x847 x3000))
(assert (= 12 (x2143 (x3860 64 x5236 12))))
(assert (=> (<= x5646 10000) (= 0 (x25 x5646))))
(assert (x847 x1194))
(assert (= (x3376 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326)) x1903))
(assert (= x4190 (x1122 (x3159 x4221 x4190))))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x3860 64 x3454 12) (x25 (x3860 64 x3454 12))))
(assert (x847 x3803))
(assert (=> (<= x578 10000) (= 0 (x25 x578))))
(assert (x847 x4551))
(assert (= x4490 (x1122 (x2521 x148 x4490 x3005 x897 x4954))))
(assert (x847 x4919))
(assert (= (and (not x3852) x2679) x2925))
(assert (x2657 256))
(assert (x847 x582))
(assert (x847 x4263))
(assert (=> (<= x2666 10000) (= 0 (x25 x2666))))
(assert (= (x3376 (x3860 64 x84 (ite (= 0 x3676) x4378 (ite (<= x3676 32) x1353 (ite (<= x3676 64) x447 (ite (>= 96 x3676) x5056 (ite (>= 128 x3676) x4778 (ite (<= x3676 160) x6 (ite (<= x3676 192) x5336 (ite (>= 224 x3676) x1072 x586)))))))))) 64))
(assert (x3952 x4877))
(assert (x847 x245))
(assert (x847 x1684))
(assert (x847 x2512))
(assert (=> (<= x1530 10000) (= 0 (x25 x1530))))
(assert (=> (>= 10000 x2012) (= (x25 x2012) 0)))
(assert (= x4053 (x2143 (x4159 x5565 x3137 x4053 x405))))
(assert (x847 x4999))
(assert (= (x25 (x3860 64 x2010 7)) (x3860 64 x2010 7)))
(assert (not (x2689 (x3619 x2448 x4096 x2926 x1860 x787 x3139 x5653))))
(assert (= x3383 (=> (= (= x4173 0) x4064) (and (=> (and (= x2191 (> 64 x737)) (not x4064)) (and (=> (and (not x2191) (and (= (x4730 322) x1037) (= (x4132 x1902) x4365) (= x4629 (x4730 290)) (= x1326 354) (= (x3860 64 x2822 11) x5101) (= (x3860 64 x2822 11) x982) (= (x3860 64 x2822 11) x5108) (= x1878 (x959 (- x3555 (mod (ite (< x846 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2865 x418) x3478) (= x317 0) (= x846 (ite (> x3555 0) x69 (x210 127 x69))) (= x275 (> x1878 0)) (= (x4727 x3478 2) x69) (= x2718 (x2781 x1720)) (= x2450 450) (= (+ x982 2) x1902) (= x1720 (+ 1 x5101)) (= x418 (x3860 64 x892 3)) (= x3555 (x210 1 x3478)))) (and (=> (and (and (= false x4269) (= true x2920) (= 36 x3169)) (not x275)) x3832) (=> (and x275 (and (= (= 0 x846) x2793) (= x3629 (* 32 x4420)) (= x4420 (x4727 (+ x846 31) 32)) (= x5256 (+ x3629 548)))) (and (=> x2793 x4278) (=> (and (not x2793) (= (> x846 31) x2890)) (and (=> (and (not x2890) (and (= (* 256 x1699) x2274) (= (x2865 x418) x3620) (= x1699 (x4727 x3620 256)))) x4278) (=> (and x2890 (and (= (+ 1 x2792) x2872) (= (x3342 x2792) x2025) (= x2792 (x3159 32 x418)) (= (> x1035 580) x1892) (= x1035 (+ x846 548)))) (and (=> x1892 x4741) (=> (not x1892) x1399))))))))) (=> (and x2191 (and (= 0 x3169) (= x5572 true) (= false x5629))) x3832))) (=> (and (and (= x2616 true) (= x3896 false) (= x737 x3169)) x4064) x3832)))))
(assert (x847 x478))
(assert (x847 x409))
(assert (> (x3159 x4342 x3073) 10000))
(assert (=> (<= x2862 10000) (= (x25 x2862) 0)))
(assert (= (and x4678 (not x2299)) x4806))
(assert (x847 x1086))
(assert (=> (<= x4610 10000) (= 0 (x25 x4610))))
(assert (x847 x4800))
(assert (x847 x967))
(assert (= (x1122 (x3226 x148 x2796 x422 x4121 x1523 x2759)) x2796))
(assert (x847 x2178))
(assert (x847 x5178))
(assert (x847 x2682))
(assert (=> (>= 10000 x2072) (= 0 (x25 x2072))))
(assert (< 10000 (x4159 x1815 x3424 x5041 x1337)))
(assert (not (x2689 (x2521 x1893 x1440 x535 x1449 x4345))))
(assert (=> (<= x3642 10000) (= (x25 x3642) 0)))
(assert (= (x3860 64 x4580 7) (x25 (x3860 64 x4580 7))))
(assert (x847 x4734))
(assert (x379 x5606 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2689 (x4159 x1903 x3509 x4605 x5499))))
(assert (x847 x1250))
(assert (x847 x3561))
(assert (= (and x1066 (not x5227)) x1044))
(assert (= x4221 (x3376 (x3226 x4221 x4999 x562 x2941 x3542 x3661))))
(assert (x847 x1247))
(assert (= x2997 (x1122 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755))))
(assert (x847 x2980))
(assert (< 10000 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)))
(assert (x847 x4218))
(assert (= x5051 (x4693 (x4159 x2448 x4715 x220 x5051))))
(assert (not (x2689 (x3860 64 x1818 10))))
(assert (x847 x4353))
(assert (= (x3573 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207)) x1265))
(assert (= (x2143 (x3860 64 x4556 (ite (= x4543 0) x225 (ite (<= x4543 32) x421 (ite (<= x4543 64) x1624 (ite (<= x4543 96) x3640 (ite (<= x4543 128) x4028 (ite (<= x4543 160) x120 (ite (>= 192 x4543) x782 (ite (>= 224 x4543) x115 x5087)))))))))) (ite (= x4543 0) x225 (ite (<= x4543 32) x421 (ite (<= x4543 64) x1624 (ite (>= 96 x4543) x3640 (ite (>= 128 x4543) x4028 (ite (>= 160 x4543) x120 (ite (>= 192 x4543) x782 (ite (<= x4543 224) x115 x5087))))))))))
(assert (= (x2715 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341)) x111))
(assert (= x1315 (x3376 (x844 x1315 x4871 x5507 x1867 x4892 x777 x295 x1396))))
(assert (x3952 x272))
(assert (x847 x3523))
(assert (> (x3159 x4098 x76) 10000))
(assert (= (x3021 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179)) x1530))
(assert (= (and x4678 x2299) x1831))
(assert (x847 x1184))
(assert (=> (<= x5052 10000) (= 0 (x25 x5052))))
(assert (= (x25 (x3226 x4342 x833 x1763 x4924 x2004 x2713)) (x3226 x4342 x833 x1763 x4924 x2004 x2713)))
(assert (= x3747 (or x5114 x2307)))
(assert (x2657 (+ 31 x1857)))
(assert (x379 x3601 2))
(assert (= x2224 (or x5307 x2298)))
(assert (x3513 x2238))
(assert (x847 x964))
(assert (x847 x2344))
(assert (x847 x4973))
(assert (x847 x4994))
(assert (x847 x3864))
(assert (= x2641 (and x3016 x880)))
(assert (=> (<= x4555 10000) (= (x25 x4555) 0)))
(assert (x847 x4484))
(assert (x847 x2564))
(assert (x847 x2339))
(assert (x847 x2726))
(assert (x847 x5008))
(assert (x847 x5517))
(assert (x847 x512))
(assert (x847 x928))
(assert (x847 x4310))
(assert (< 10000 (x3860 64 x4547 6)))
(assert (not (x2689 (x3226 x4543 x2021 x5511 x530 x1828 x5030))))
(assert (x847 x3698))
(assert (=> (<= x3044 10000) (= 0 (x25 x3044))))
(assert (x367 x2261))
(assert (= (=> (and (= x3140 (x442 x1242)) (= (not (< 32 x4618)) x3742)) (and x3742 (=> (= 32 x3008) x2391))) x868))
(assert (x2657 (+ 31 x3462)))
(assert (= (and x3839 x4606) x4675))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 32 x418)))
(assert (= x3902 (or (and x3092 x4829) (and x4907 x4344))))
(assert (< (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x4429))
(assert (= (x4693 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)) x4415))
(assert (x3952 2))
(assert (not (x2689 (x3159 x1096 x4660))))
(assert (= (x2143 (x3226 x696 x3109 x5052 x5209 x5111 x1775)) x5052))
(assert (x847 x3862))
(assert (x847 x4057))
(assert (x847 x5289))
(assert (> (x2521 x4342 x2694 x4688 x654 x501) 10000))
(assert (x847 x1519))
(assert (x847 x937))
(assert (> (x2521 x1893 x1440 x535 x1449 x4345) 10000))
(assert (= x3235 (x3021 (x3226 x3044 x1209 x4938 x5515 x3235 x4481))))
(assert (x847 x887))
(assert (x847 x1077))
(assert (x847 x4137))
(assert (x1679 x5489))
(assert (=> (<= x2605 10000) (= 0 (x25 x2605))))
(assert (x847 x4383))
(assert (x847 x2547))
(assert (= x3707 (and x1376 x1650)))
(assert (x379 x1312 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2279))
(assert (< 10000 (x3860 64 x2483 36)))
(assert (x847 x209))
(assert (x847 x1402))
(assert (x847 x3991))
(assert (x847 x1878))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (= (and x5440 x1477) x1469))
(assert (= x3092 (and x2480 x1387)))
(assert (x847 x3526))
(assert (x847 x3739))
(assert (=> (<= x4892 10000) (= 0 (x25 x4892))))
(assert (x847 x2017))
(assert (x847 x1357))
(assert (x847 x1317))
(assert (= 0 (x25 2001815235)))
(assert (> (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805) 10000))
(assert (x3513 x1413))
(assert (=> (>= 10000 x869) (= 0 (x25 x869))))
(assert (x847 x44))
(assert (x847 x1871))
(assert (= x1986 (x2143 (x4159 x4221 x2768 x1986 x3430))))
(assert (= (x25 x5101) (x25 (+ x5101 1))))
(assert (x847 x3547))
(assert (x847 x5243))
(assert (= (=> (and (= x4582 false) (= (+ 1 x343) x1322) (= x3394 (+ x1305 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1305) (= (x3860 64 x1305 0) x343) (= (x2235 x4799) x5464) (= x419 (+ 1 x1305)) (not (> x5464 x3095)) (= x1076 false) (= x4799 (x3860 64 x4162 2)) (= (x2124 (+ x964 x5464)) x3095)) x482) x3894))
(assert (x847 x1688))
(assert (= (=> (and (= x504 (x2124 (+ x2552 32))) (= (x959 (- x2552 x5018)) x5226) (= x64 (x2124 (+ x2438 x4477))) (= x4841 (x2124 (+ 32 x1490))) (= (x2124 (+ x478 x2438)) x2552) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1312) x478) (= x5283 (< 0 x4437)) (= x4437 (x1022 x1518)) (= x1104 (x2124 (+ 32 x4841))) (= (x2124 (+ x4477 31)) x1312)) (and (=> (and (and (= (x4977 x4019) x4461) (= x3307 (> x4437 32))) x5283) (and (=> (not x3307) x5309) (=> (and x3307 (and (= (> x4437 64) x5148) (= (x2124 (+ 32 x4019)) x1595) (= (x2124 (+ 32 x504)) x3467) (= x1680 (x4085 x1595)))) (and (=> (and x5148 (and (= (> x4437 96) x3016) (= x4012 (x2124 (+ 64 x4019))) (= x233 (x2405 x4012)) (= (x2124 (+ x504 64)) x3781))) (and (=> (not x3016) x5309) (=> x3016 x5483))) (=> (not x5148) x5309))))) (=> (not x5283) x5309))) x540))
(assert (x847 x147))
(assert (< 10000 (x3860 64 x1199 36)))
(assert (x847 x2442))
(assert (x847 x2985))
(assert (x847 x3240))
(assert (= (and x3324 (not x3945)) x1817))
(assert (x379 x4956 32))
(assert (= x3464 (or x2192 x2607)))
(assert (= (x25 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)) (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)))
(assert (= x5203 (x3376 (x3226 x5203 x5129 x1802 x5468 x3611 x249))))
(assert (= (x3021 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245)) x4858))
(assert (x847 x4228))
(assert (=> (>= 10000 x2010) (= (x25 x2010) 0)))
(assert (= 64 (x3376 (x3860 64 x5617 11))))
(assert (= (or x1292 x930) x157))
(assert (x847 x3407))
(assert (x847 x4092))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x696 x3109 x5052 x5209 x5111 x1775)))
(assert (= (and (not x1003) x939) x2323))
(assert (= (x25 (x3159 x432 x3550)) (x3159 x432 x3550)))
(assert (= x1100 (=> (= x2619 (not (> x2234 128))) (and x2324 x2619))))
(assert (= (x3021 (x2521 x3432 x539 x4357 x5079 x4952)) x4952))
(assert (not (x2689 (x3860 64 x5553 3))))
(assert (x847 x353))
(assert (=> (<= x2204 10000) (= (x25 x2204) 0)))
(assert (x847 x3032))
(assert (> (x3159 x3676 x3966) 10000))
(assert (< 10000 (x3860 64 1 x1414)))
(assert (x847 x5021))
(assert (=> (<= x4970 10000) (= 0 (x25 x4970))))
(assert (x847 x2112))
(assert (x847 x2077))
(assert (x847 x4046))
(assert (x847 x5615))
(assert (x847 x1369))
(assert (x847 x4931))
(assert (= (x2143 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432)) x2055))
(assert (=> (<= x3995 10000) (= (x25 x3995) 0)))
(assert (= (x3573 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657)) x3819))
(assert (x379 x5501 128))
(assert (x847 x17))
(assert (x847 x4838))
(assert (not (x2689 (x3860 64 x4909 36))))
(assert (= x361 (and x3214 x4760)))
(assert (x847 x156))
(assert (=> (>= 10000 x1830) (= 0 (x25 x1830))))
(assert (= x2384 (and x2436 x692)))
(assert (= (x25 (x3860 64 x1370 3)) (x3860 64 x1370 3)))
(assert (x2657 x3035))
(assert (= x5130 (x2143 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341))))
(assert (x379 x853 32))
(assert (x847 x1529))
(assert (x847 x4940))
(assert (> (x3860 x1903 x2638 x3701) 10000))
(assert (= (x25 (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)) (x3619 x4221 x3465 x1073 x4415 x4624 x3856 x299)))
(assert (x847 x1508))
(assert (x367 x503))
(assert (x847 x5325))
(assert (= x30 (or x3811 x1360 x1430 x4172 x4244)))
(assert (= (x2143 (x3860 64 x735 36)) 36))
(assert (x847 x3276))
(assert (x847 x2946))
(assert (x847 x5457))
(assert (= (x25 (x3860 64 x4909 36)) (x3860 64 x4909 36)))
(assert (x2689 65535))
(assert (< 10000 (x3860 64 x2067 100)))
(assert (x1411 x2414))
(assert (x847 x4193))
(assert (x847 x893))
(assert (= (or x3173 x192) x3306))
(assert (= (and (not x1136) x1633) x1616))
(assert (x847 x3650))
(assert (x847 x1134))
(assert (x847 x5125))
(assert (=> (>= 10000 x2398) (= 0 (x25 x2398))))
(assert (x847 x4534))
(assert (x847 x2204))
(assert (= (x3860 64 x4482 100) (x25 (x3860 64 x4482 100))))
(assert (x847 x1001))
(assert (x847 x1065))
(assert (x847 x249))
(assert (= x3432 (x3376 (x2521 x3432 x539 x4357 x5079 x4952))))
(assert (x847 x5546))
(assert (=> (>= 10000 x3340) (= (x25 x3340) 0)))
(assert (=> (>= 10000 x3470) (= (x25 x3470) 0)))
(assert (= x2375 (=> (= (= 0 x4525) x3090) (and (=> (and (and (= true x4560) (= 0 x3861) (= x2166 false)) x3090) x3065) (=> (and (and (= x1837 x2416) (= 0 x4125) (= 1 x3649)) (not x3090)) x4948)))))
(assert (x847 x348))
(assert (x847 x2928))
(assert (x847 x5062))
(assert (x1139 x4862))
(assert (= (x3376 (x3226 x148 x2796 x422 x4121 x1523 x2759)) x148))
(assert (=> (<= x1096 10000) (= (x25 x1096) 0)))
(assert (x847 x1511))
(assert (= (and (not x817) x4979) x1430))
(assert (= (ite (= x3044 0) x5220 (ite (>= 32 x3044) x5076 (ite (<= x3044 64) x193 (ite (>= 96 x3044) x3617 (ite (>= 128 x3044) x4772 (ite (<= x3044 160) x3485 (ite (<= x3044 192) x5676 (ite (<= x3044 224) x5399 x3739)))))))) (x2143 (x3860 64 x4556 (ite (= 0 x3044) x5220 (ite (>= 32 x3044) x5076 (ite (>= 64 x3044) x193 (ite (<= x3044 96) x3617 (ite (>= 128 x3044) x4772 (ite (>= 160 x3044) x3485 (ite (>= 192 x3044) x5676 (ite (<= x3044 224) x5399 x3739))))))))))))
(assert (= (x1122 (x3226 x1815 x4992 x4534 x3294 x3404 x312)) x4992))
(assert (=> (>= 10000 x2105) (= (x25 x2105) 0)))
(assert (x847 x4515))
(assert (x847 x1192))
(assert (x847 x5304))
(assert (= (x3376 (x4159 x3044 x1475 x5086 x5164)) x3044))
(assert (x847 x2055))
(assert (x847 x2844))
(assert (not (x2689 (x3860 64 1 x2579))))
(assert (x847 x3751))
(assert (x847 x1227))
(assert (=> (<= x4175 10000) (= 0 (x25 x4175))))
(assert (= (x25 (x3860 64 x3161 11)) (x3860 64 x3161 11)))
(assert (x367 x397))
(assert (x847 x2186))
(assert (x847 x2701))
(assert (x847 x288))
(assert (x847 x1798))
(assert (x3500 x5683))
(assert (x847 x2561))
(assert (not (x2689 (x4159 x432 x3884 x1771 x1947))))
(assert (=> (<= x4268 10000) (= (x25 x4268) 0)))
(assert (not (x2689 (x3860 64 x4162 2))))
(assert (> (x3159 x5565 x4597) 10000))
(assert (x847 x268))
(assert (x379 x4214 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x367 x5319))
(assert (x847 x1042))
(assert (= (or x2224 x1439) x514))
(assert (x847 x216))
(assert (x847 x3480))
(assert (x847 x4123))
(assert (< (x3860 64 x1370 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x3619 x1096 x1013 x5583 x1468 x5231 x2101 x1618)))
(assert (x847 x2153))
(assert (= x3663 (x1122 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175))))
(assert (= x2165 (or (and x1899 x4035) (and x3716 x3075) (and x5545 x3693))))
(assert (=> (>= 10000 x1922) (= (x25 x1922) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453)))
(assert (= (=> (and (= x1407 x5204) (= x5608 x5489) (= x4202 x546) (= (+ x2067 1) x5389) (= x2413 x2209) (= true x143) (= 0 x4173) (= x737 0) (= x3681 x5441) (= x2950 x892) (= x3269 x5672) (= x5580 x5682) (= false x4341) (= x3504 x5186) (= x1555 x5542) (= 2 x4720) (= x4039 x1600) (= x2880 (+ x2067 1)) (= x200 x4107)) x3383) x3937))
(assert (x847 x4969))
(assert (x847 x5201))
(assert (> (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657) 10000))
(assert (x847 x2227))
(assert (x847 x2056))
(assert (x847 x720))
(assert (= x3076 (x3021 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201))))
(assert (x847 x3427))
(assert (= (x1122 (x3860 64 x5067 (ite (= 0 x1903) x5373 (ite (>= 32 x1903) x2443 (ite (>= 64 x1903) x3423 (ite (>= 96 x1903) x1087 (ite (<= x1903 128) x2408 (ite (>= 160 x1903) x1780 (ite (>= 192 x1903) x1623 (ite (>= 224 x1903) x2859 x2352)))))))))) x5067))
(assert (= x903 (or x2130 x666)))
(assert (= (=> (and (= x1397 x1816) (= x2197 x322) (= x3697 x3933) (= x2980 x4376) (= x4231 x752) (= x513 x3) (= x819 x3506)) x5467) x4491))
(assert (x847 x2631))
(assert (x847 x204))
(assert (= x3428 (x1122 (x4159 x3676 x3428 x1108 x5491))))
(assert (x847 x3949))
(assert (= (x2715 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978)) x2978))
(assert (x847 x105))
(assert (x847 x1006))
(assert (= (and x2316 (not x733)) x2956))
(assert (> (x3159 x696 x2714) 10000))
(assert (not (x2689 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805))))
(assert (x367 x2988))
(assert (x847 x3781))
(assert (= (and (not x488) x2248) x806))
(assert (=> (>= 10000 x3790) (= 0 (x25 x3790))))
(assert (x847 x1826))
(assert (= x3776 (and (not x2863) x274)))
(assert (= x3600 (=> (= x2471 x4763) x121)))
(assert (x847 x942))
(assert (x1746 (+ 31 x4813) 32))
(assert (x379 x397 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x4709))
(assert (= (x2143 (x3860 64 x2573 36)) 36))
(assert (x847 x1558))
(assert (x847 x3546))
(assert (x847 x330))
(assert (x847 x174))
(assert (x2657 x5548))
(assert (< (x3860 64 x1298 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2934))
(assert (=> (>= 10000 x5164) (= 0 (x25 x5164))))
(assert (= (x3376 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242)) x4348))
(assert (not (x2689 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160))))
(assert (x847 x3774))
(assert (< 10000 (x3860 x1893 x2972 x3027)))
(assert (< 10000 (x3860 64 x2332 11)))
(assert (= x1321 (or x5306 x1599)))
(assert (= x3044 (x3376 (x3226 x3044 x1209 x4938 x5515 x3235 x4481))))
(assert (x847 x3372))
(assert (x847 x5638))
(assert (not (x2689 (x3226 x1315 x4816 x3421 x3153 x5081 x965))))
(assert (x847 x5685))
(assert (x847 x4568))
(assert (x847 x4125))
(assert (= (=> (and (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1352) x3854) (= (x4238 x2264) x2234) (= (x2124 (+ x4339 x2699)) x2620) (= (x959 (- x2829 x3864)) x5212) (= (x2124 (+ 31 x4339)) x1352) (= (> x2234 0) x1942) (= x4247 (x2124 (+ x2381 32))) (= (x2124 (+ x2699 x3854)) x2829)) (and (=> (and (= (> x2234 32) x4009) x1942) (and (=> (not x4009) x2324) (=> (and (= x2983 (< 64 x2234)) x4009) (and (=> (and (= x4625 (> x2234 96)) x2983) (and (=> (not x4625) x2324) (=> x4625 x1100))) (=> (not x2983) x2324))))) (=> (not x1942) x2324))) x5169))
(assert (x847 x2628))
(assert (x847 x5389))
(assert (= x5390 (x4693 (x4159 x1096 x3667 x2006 x5390))))
(assert (= x1370 (x1122 (x3860 64 x1370 5))))
(assert (=> (<= x2021 10000) (= (x25 x2021) 0)))
(assert (x847 x5146))
(assert (= (=> (and (= x3353 (x2865 x605)) (= x887 x3656) (= 128 x4003) (> x545 x1215) (>= x3948 1) (<= 196 x2860) (>= x1294 1) (= 1914215 x3821) (= x2059 (+ x2603 160)) (not (< x545 x1734)) (= x4268 x1294) (<= x3511 127) (= x1798 (x2015 x1499)) (= (+ 31 x2754) x1215) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2860) (<= 196 x545) (= false x3577) (= x1857 (x2453 x2754)) (= 164 x1423) (>= 18446744073709551615 x696) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4101) (= 1 x4101)) (= false x555) (= x5650 (x210 1 x3353)) (= (x4727 x3353 2) x2512) (= x4101 (x959 (- x5650 (mod (ite (< x3633 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (+ 4 x887) x2754) (= x3633 (ite (> x5650 0) x2512 (x210 127 x2512))) (= x605 (x3860 64 x2010 3)) (= x4102 (+ x2754 32)) (= (= (x218 132) x4563) x248) (= x2860 (x959 (- x890 128))) (= x2860 x545) (= x2221 128) (= x3698 (+ x696 164)) (= (x2015 x4162) x3948) (<= x1294 1461501637330902918203684832716283019655932542975) (= x3379 x2010) (= (+ x4102 x1857) x1734) x248 (= 51607134309459761954548520284799282329936326410793501951915747293203005440 x956) (= x1180 x5073) (>= 18446744073709551615 x1857) (>= x1798 1) (= x2603 (* 32 x2645)) (<= x545 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x4727 (+ x3633 31) 32) x2645) (<= x3511 127) (not (> x3698 x545)) (= x215 (= x3633 0)) (= (x2453 132) x696)) (and (=> x215 x4331) (=> (and (not x215) (= (> x3633 31) x3990)) (and (=> (and (and (= (x4727 x5035 256) x3888) (= x3286 (* 256 x3888)) (= x5035 (x2865 x605))) (not x3990)) x4331) (=> (and (and (= (x3342 x5519) x4913) (= (< 192 x4293) x63) (= (+ x3633 160) x4293) (= (x3159 32 x605) x5519) (= (+ 1 x5519) x1702)) x3990) (and (=> (not x63) x1933) (=> x63 x5012))))))) x2688))
(assert (x1746 (+ x4566 31) 32))
(assert (x367 x5683))
(assert (x847 x3655))
(assert (x847 x4102))
(assert (= x148 (x3376 (x3159 x148 x4555))))
(assert (x847 x281))
(assert (= (x3159 32 x605) (x25 (x3159 32 x605))))
(assert (x847 x2768))
(assert (x847 x2692))
(assert (= 104 (x1122 (x3159 32 104))))
(assert (x2689 1000000000))
(assert (x3952 x3601))
(assert (x847 x5026))
(assert (x847 x803))
(assert (= 1 (x2143 (x3860 64 x4162 1))))
(assert (=> (>= 10000 x3369) (= 0 (x25 x3369))))
(assert (x847 x499))
(assert (= (x2143 (x3860 64 x5067 (ite (= x1096 0) x2404 (ite (>= 32 x1096) x4308 (ite (<= x1096 64) x5612 (ite (>= 96 x1096) x1642 (ite (<= x1096 128) x2325 (ite (>= 160 x1096) x3089 (ite (>= 192 x1096) x2999 (ite (>= 224 x1096) x3527 x2635)))))))))) (ite (= x1096 0) x2404 (ite (>= 32 x1096) x4308 (ite (<= x1096 64) x5612 (ite (<= x1096 96) x1642 (ite (<= x1096 128) x2325 (ite (>= 160 x1096) x3089 (ite (<= x1096 192) x2999 (ite (<= x1096 224) x3527 x2635))))))))))
(assert (x847 x4705))
(assert (x847 x255))
(assert (x847 x1388))
(assert (x847 x4854))
(assert (x847 x3853))
(assert (x847 x454))
(assert (not (x2689 (x3860 x4348 x1032 x4395))))
(assert (x379 x4527 32))
(assert (= x1319 (and x1361 (not x5670))))
(assert (x847 x4314))
(assert (x847 x3347))
(assert (x847 x5489))
(assert (x847 x3273))
(assert (x3952 x3413))
(assert (x847 x3956))
(assert (< 10000 (x3860 64 x1370 3)))
(assert (not (x2689 (x3860 64 x4828 7))))
(assert (=> (<= x1943 10000) (= 0 (x25 x1943))))
(assert (= (x25 (+ x1007 1)) (x25 x1007)))
(assert (= x1370 (x1122 (x3860 64 x1370 4))))
(assert (x847 x5551))
(assert (= x4145 (x1122 (x3860 64 x4145 2))))
(assert (= (x2143 (x2521 x5203 x2164 x3862 x4636 x5174)) x3862))
(assert (x847 x1568))
(assert (x847 x4175))
(assert (=> (<= x4013 10000) (= (x25 x4013) 0)))
(assert (= (x3021 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)) x5568))
(assert (=> (<= x1116 10000) (= (x25 x1116) 0)))
(assert (x847 x2738))
(assert (x847 x910))
(assert (not (x2689 (x3159 x1315 x369))))
(assert (=> (>= 10000 x1776) (= 0 (x25 x1776))))
(assert (not (x2689 (x3159 x3044 x1504))))
(assert (= x5027 (x4693 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39))))
(assert (=> (<= x4068 10000) (= 0 (x25 x4068))))
(assert (= (x1122 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)) x4946))
(assert (= x708 (not (and (not (> x2301 x1081)) (= x5269 x1651) (= (x2459 132) x4452) (= (+ x4791 x497) x1807) (= x2062 164) (not (< x1081 x2544)) (= 128 x1559) (= x4268 x4162) (>= 18446744073709551615 x4452) (= x4757 1722637450) (= (+ x621 32) x4791) (= (+ 164 x4452) x2301) (<= 1 x4403) (= x5411 (x433 x4791)) (= x4286 (+ 4 x1785)) (= x3947 (+ 32 x4286)) (= x65 128) (= x1081 x5402) (> x1081 x2930) (= (= (x4205 132) x3260) x5333) (= x4403 (x2015 x4162)) (= x497 (x2459 x4286)) (= x5149 false) (= x4486 (* x5165 32)) (= x4405 x1120) (= x3655 (+ x1686 x621 32)) (>= x1081 196) (= (x4727 (+ 31 x497) 32) x5065) (<= x4178 127) (>= 127 x4178) (= x118 false) (<= x497 18446744073709551615) (= (* 32 x5065) x1686) (= (+ 160 x4486) x621) (= x2544 (+ x3947 x497)) (= (x2646 x621) x2037) (= x3001 (x3860 64 x5411 10)) (<= x2037 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1997 (x2015 x1499)) (<= x1081 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2930 (+ 31 x4286)) (= x413 128) (< x621 x3655) (= x5402 (x959 (- x5371 128))) x5333 (<= 1 x1997) (= x219 46442213778836376901753710468615024683576072693327014300388496345503314739200) (>= x2037 32) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5402) (= x1279 x1785) (= (x4727 (+ 31 x4452) 32) x5165) (<= 196 x5402)))))
(assert (x847 x4474))
(assert (=> (<= x5516 10000) (= 0 (x25 x5516))))
(assert (x847 x1452))
(assert (x3952 x4956))
(assert (> (x3860 64 x1245 11) 10000))
(assert (= (x25 (x3860 64 x2067 100)) (x3860 64 x2067 100)))
(assert (x847 x548))
(assert (= (x3376 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)) x5565))
(assert (x847 x4388))
(assert (= (x1122 (x3159 32 x82)) x82))
(assert (=> (>= 10000 x5479) (= (x25 x5479) 0)))
(assert (x847 x2881))
(assert (x847 x559))
(assert (x847 x1522))
(assert (x367 x3931))
(assert (x3952 x2800))
(assert (x847 x1499))
(assert (x379 x2912 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1122 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978)) x4838))
(assert (= (x4159 x1893 x2039 x5409 x5649) (x25 (x4159 x1893 x2039 x5409 x5649))))
(assert (x847 x4179))
(assert (= (x4693 (x4159 x1893 x2039 x5409 x5649)) x5649))
(assert (x2689 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (= (=> (and (= (x1241 516) x801) (= x5305 (= x801 0))) (and (=> (and (and (= true x198) (= x4656 (x2124 (+ x4669 32))) (= x1724 (x2124 (+ 32 x1303))) (= x66 false) (= x4669 (x2124 (+ x1724 32))) (= x3861 132) (= (x2124 (+ 4 x3853)) x1303)) x5305) x3065) (=> (and (not x5305) (and (= x637 (x2559 x1148)) (= (x3860 64 x1370 5) x1148) (= x2233 (< (ite (= x637 0) 10000 x637) x1124)) (= (x1630 354) x1124))) (and (=> (and (and (= x3525 true) (= x2838 false) (= x3861 100) (= (x2124 (+ x5582 32)) x4281) (= x5582 (x2124 (+ x2262 32))) (= (x2124 (+ x3853 4)) x2262)) x2233) x3065) (=> (and (not x2233) (and (= x861 (x2124 (+ x4644 x2329))) (= (x2124 (+ x5046 x4627)) x3493) (= (x2124 (+ 32 x3690)) x4644) (= (x959 (- x3690 x4447)) x2827) (= x4529 (x2124 (+ 32 x2257))) (= x2755 (x1241 516)) (= x2223 (x2124 (+ x4447 32))) (= (x2124 (+ x3201 31)) x300) (= x2472 (x959 (- x3493 x3853))) (= (x2124 (+ x2223 32)) x499) (= (x959 (- x861 x4447)) x4025) (= (x2124 (+ 4 x3853)) x4447) (= x5286 (x2124 (+ x2755 31))) (= x5046 (x2124 (+ 32 x861))) (= x636 (= 0 x2286)) (= x2329 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x300)) (= x3690 (x2124 (+ x1061 x34))) (= x2257 (x2124 (+ x5457 32))) (= x1262 (x2124 (+ 192 x4447))) (= (x2124 (+ x2220 31)) x5319) (= x4627 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5319)) (= (x3958 450) x2220) (= (x1630 354) x3201) (= x1061 (x2124 (+ 32 x1262))) (= (x2015 x2637) x2286) (= x5457 (x2124 (+ 32 x499))) (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5286) x34))) (and (=> (and x636 (and (= x2888 true) (= false x3510) (= x3861 0))) x3065) (=> (and (and (= x1862 (x163 x4162)) (= x2353 (x163 x2637)) (= x3572 (and x320 x263)) (= (< (+ x2353 x3180) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x263) (= (>= x1862 x3180) x320)) (not x636)) (and (=> (and (and (= x4525 0) (= x1837 x4796)) (not x3572)) x2375) (=> (and (and (= x1370 x1649) (= x2446 x1117) (= false x4236) (= x4025 x5138) (= x4162 x4441) (>= x2469 420) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2469 4)) true) (< (- x2469 4) 192)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2469 4))) x5140) (>= x3278 1) (= x5635 (- x3068 x3180)) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x1757) (<= x2831 127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1117) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3180 x5393)) (>= 127 x2831) (= false x4716) (= x1347 (= (x1074 196) x2755)) (= x4260 3313512704) (= x2472 x2469) (= x2827 x5529) (= (x2015 x2605) x3278) (>= x2472 420) (= (x3292 x2637) x5393) (= x3068 (x163 x4162)) (= x3743 192) (= 0 x4506) x1347 (>= x1117 0) (= x1117 (+ x5393 x3180))) x3572) (and (=> (and (not x5140) (= x1969 true)) (and (=> (not x1969) x1929) (=> (and (= x5218 (and (= true (<= x2469 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2469 227))) x1969) (and (=> (not x5218) x4276) (=> (and x5218 (and (= (> x4793 18446744073709551615) x3920) (= x4793 (x1789 196)))) (and (=> (and (and (= x1632 (x2124 (+ 228 x4793))) (= (> x1632 x2469) x5545)) (not x3920)) (and (=> x5545 x1681) (=> (and (= (> x2827 18446744073709551615) x3731) (not x5545)) (and (=> (and (not x3731) (and (= x5058 (x2124 (+ 31 x3199))) (= x1438 (or (and (<= x2469 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5058)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5058) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2469)) (> x2469 x5058)))) (= (x2124 (+ 4 x2827)) x3199))) (and (=> (and (and (= (x1789 x3199) x2167) (= x2554 (< 18446744073709551615 x2167))) x1438) (and (=> x2554 x3694) (=> (and (not x2554) (and (= x3716 (> x1591 x2469)) (= (x2124 (+ 32 x3199)) x4967) (= (x2124 (+ x2167 x4967)) x1591))) (and (=> (and (not x3716) (= (< 18446744073709551615 x4025) x4361)) (and (=> (and (not x4361) (and (= (x2124 (+ 4 x4025)) x4984) (= (x2124 (+ 31 x4984)) x4443) (= x1168 (or (and (> x2469 x4443) (= (<= x4443 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2469))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2469) (> x4443 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) (and (=> (not x1168) x4276) (=> (and x1168 (and (= x2077 (x1789 x4984)) (= (< 18446744073709551615 x2077) x3627))) (and (=> x3627 x3694) (=> (and (not x3627) (and (= x4035 (> x1605 x2469)) (= (x2124 (+ x2077 x173)) x1605) (= x173 (x2124 (+ 32 x4984))))) (and (=> (and (not x4035) (and (= x2400 1) (= x4796 x5447))) x2868) (=> x4035 x1681))))))) (=> x4361 x1929))) (=> x3716 x1681))))) (=> (not x1438) x4276))) (=> x3731 x1929))))) (=> x3920 x3694))))))) (=> x5140 x1929))))))))))) x1031))
(assert (x847 x1466))
(assert (x847 x5391))
(assert (= (x2143 (x3226 x1096 x44 x490 x3499 x726 x1233)) x490))
(assert (x847 x4555))
(assert (x847 x4186))
(assert (x847 x685))
(assert (not (x2689 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755))))
(assert (x847 x4746))
(assert (x926 32 (ite (not (= x4618 0)) 1 0)))
(assert (x2689 2001815235))
(assert (x847 x5371))
(assert (x847 x1262))
(assert (x847 x5437))
(assert (= (x3860 64 x2681 6) (x25 (x3860 64 x2681 6))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39)))
(assert (= (x3159 x5203 x4995) (x25 (x3159 x5203 x4995))))
(assert (=> (<= x2563 10000) (= (x25 x2563) 0)))
(assert (x847 x4577))
(assert (x847 x3540))
(assert (=> (>= 10000 x552) (= 0 (x25 x552))))
(assert (= (x3860 64 x735 36) (x25 (x3860 64 x735 36))))
(assert (< 10000 (x3860 x696 x1128 x5666)))
(assert (= x2207 (x3376 (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122))))
(assert (= (x2715 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635)) x2558))
(assert (=> (>= 10000 x44) (= (x25 x44) 0)))
(assert (x847 x715))
(assert (= (x3226 x3676 x2719 x3470 x1494 x3634 x5506) (x25 (x3226 x3676 x2719 x3470 x1494 x3634 x5506))))
(assert (= x5600 (x2143 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805))))
(assert (x847 x5504))
(assert (= (x4159 x1315 x2398 x4416 x4434) (x25 (x4159 x1315 x2398 x4416 x4434))))
(assert (= x750 (x2143 (x2521 x4098 x1938 x750 x5028 x1626))))
(assert (not (x2689 (x2521 x2207 x2892 x4869 x5520 x1300))))
(assert (= (x1122 (x3226 x696 x3109 x5052 x5209 x5111 x1775)) x3109))
(assert (x847 x4857))
(assert (= x3628 (or x4997 x2501)))
(assert (= (x25 (x3860 64 x2483 36)) (x3860 64 x2483 36)))
(assert (= (x2521 x4348 x3176 x5171 x4615 x2830) (x25 (x2521 x4348 x3176 x5171 x4615 x2830))))
(assert (x847 x546))
(assert (x847 x2485))
(assert (x2689 4294967358))
(assert (=> (<= x2584 10000) (= 0 (x25 x2584))))
(assert (=> (<= x398 10000) (= 0 (x25 x398))))
(assert (x3500 x5319))
(assert (< (x3860 64 x735 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3376 (x3226 x1096 x44 x490 x3499 x726 x1233)) x1096))
(assert (x847 x4925))
(assert (= x1893 (x3376 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848))))
(assert (=> (>= 10000 x2036) (= 0 (x25 x2036))))
(assert (= x1883 (x2143 (x2521 x4543 x4410 x1883 x2314 x1866))))
(assert (= (ite (= x1903 0) x5373 (ite (<= x1903 32) x2443 (ite (<= x1903 64) x3423 (ite (<= x1903 96) x1087 (ite (>= 128 x1903) x2408 (ite (>= 160 x1903) x1780 (ite (>= 192 x1903) x1623 (ite (>= 224 x1903) x2859 x2352)))))))) (x2143 (x3860 64 x5067 (ite (= x1903 0) x5373 (ite (<= x1903 32) x2443 (ite (>= 64 x1903) x3423 (ite (>= 96 x1903) x1087 (ite (>= 128 x1903) x2408 (ite (<= x1903 160) x1780 (ite (>= 192 x1903) x1623 (ite (>= 224 x1903) x2859 x2352))))))))))))
(assert (< 10000 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x3618 12)))
(assert (x847 x629))
(assert (=> (<= x838 10000) (= (x25 x838) 0)))
(assert (x2657 (+ 31 x846)))
(assert (x847 x1675))
(assert (x367 x3601))
(assert (x2657 x3407))
(assert (> (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175) 10000))
(assert (= (x3226 x432 x5646 x1826 x4314 x4147 x1743) (x25 (x3226 x432 x5646 x1826 x4314 x4147 x1743))))
(assert (x847 x2409))
(assert (= (and (not x2647) x3686) x583))
(assert (= (and (not x2546) x2002) x4851))
(assert (x847 x3763))
(assert (x847 x1287))
(assert (< 10000 (x4159 x148 x3583 x2036 x834)))
(assert (= x4002 (x3021 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871))))
(assert (x847 x1323))
(assert (x847 x4094))
(assert (= x1454 (x2143 (x3860 x5565 x2909 x1454))))
(assert (= (and x4842 x4806) x4464))
(assert (= (=> (= (+ x1987 x4546) x2169) x2528) x5044))
(assert (x847 x3801))
(assert (=> (>= 10000 x4481) (= (x25 x4481) 0)))
(assert (= x566 (and x3230 x2276)))
(assert (< (x4159 x1315 x2398 x4416 x4434) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1235))
(assert (=> (<= x360 10000) (= 0 (x25 x360))))
(assert (x847 x5073))
(assert (x847 x3880))
(assert (x847 x3465))
(assert (x847 x2830))
(assert (x1746 x3407 256))
(assert (x926 256 x3118))
(assert (> (x2521 x148 x4490 x3005 x897 x4954) 10000))
(assert (x847 x3947))
(assert (=> (<= x2768 10000) (= (x25 x2768) 0)))
(assert (x1746 x3620 256))
(assert (= x745 (=> (and (= x5544 (not (> x5020 32))) (= x2590 (x4553 x529))) (and (=> (= x183 32) x3744) x5544))))
(assert (x847 x2023))
(assert (x847 x1237))
(assert (x847 x4319))
(assert (= x2976 (and x5274 x765)))
(assert (> (x3860 64 x5391 11) 10000))
(assert (= (x3376 (x4159 x5565 x3137 x4053 x405)) x5565))
(assert (x847 x5065))
(assert (= (x3860 64 x892 4) (x25 (x3860 64 x892 4))))
(assert (x847 x1182))
(assert (= (x1122 (x4159 x1096 x3667 x2006 x5390)) x3667))
(assert (= x1586 (x3021 (x2521 x5565 x4351 x393 x4551 x1586))))
(assert (= (x3159 32 x2870) (x25 (x3159 32 x2870))))
(assert (x367 x272))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x1315 x26 x1030)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)))
(assert (= (and (not x283) x2683) x4936))
(assert (x847 x1766))
(assert (x847 x2256))
(assert (x847 x1381))
(assert (x1411 x4374))
(assert (x847 x5506))
(assert (= (x3159 x1096 x4660) (x25 (x3159 x1096 x4660))))
(assert (x847 x5460))
(assert (x847 x814))
(assert (x847 x2909))
(assert (x847 x2446))
(assert (x847 x3045))
(assert (x847 x5555))
(assert (=> (<= x5006 10000) (= (x25 x5006) 0)))
(assert (= x838 (x1122 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635))))
(assert (= (x3860 x5203 x3210 x3340) (x25 (x3860 x5203 x3210 x3340))))
(assert (x847 x1692))
(assert (not (x2689 (x3226 x3676 x2719 x3470 x1494 x3634 x5506))))
(assert (x847 x4816))
(assert (not (x2689 (x4159 x3044 x1475 x5086 x5164))))
(assert (= 32 (x3376 (x3159 32 x82))))
(assert (x2689 18446744073709551615))
(assert (=> (<= x3819 10000) (= (x25 x3819) 0)))
(assert (= (x3860 64 x1199 36) (x25 (x3860 64 x1199 36))))
(assert (not (x2689 (x2521 x1815 x5008 x3496 x4524 x1291))))
(assert (x847 x4803))
(assert (=> (<= x1454 10000) (= 0 (x25 x1454))))
(assert (x847 x3040))
(assert (x847 x3983))
(assert (x847 x4529))
(assert (< 10000 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)))
(assert (x3952 x5489))
(assert (= (x2143 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)) x1243))
(assert (x847 x5536))
(assert (x847 x4147))
(assert (=> (<= x2716 10000) (= 0 (x25 x2716))))
(assert (x847 x1626))
(assert (x847 x1718))
(assert (x847 x84))
(assert (x847 x4975))
(assert (= (x4985 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848)) x3848))
(assert (x847 x4791))
(assert (x847 x1662))
(assert (x847 x3971))
(assert (x847 x5441))
(assert (x847 x1061))
(assert (= x553 (x4693 (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978))))
(assert (x847 x2222))
(assert (< (x3860 64 x1640 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x207))
(assert (=> (<= x548 10000) (= (x25 x548) 0)))
(assert (> (x3159 x1893 x2588) 10000))
(assert (x847 x2271))
(assert (< (x4159 x432 x3884 x1771 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3531))
(assert (x847 x2122))
(assert (x847 x4437))
(assert (= (x3573 (x3226 x3676 x2719 x3470 x1494 x3634 x5506)) x5506))
(assert (x847 x3702))
(assert (=> (<= x2000 10000) (= 0 (x25 x2000))))
(assert (= 64 (x3376 (x3860 64 x5411 10))))
(assert (= x4909 (x1122 (x3860 64 x4909 36))))
(assert (x847 x2893))
(assert (x847 x3551))
(assert (< (x3860 64 x4547 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x4089))
(assert (x847 x2293))
(assert (x847 x2783))
(assert (= x2790 (=> (= x1374 (= 0 x258)) (and (=> (and (and (= x2142 x1105) (= x3551 1) (= x4790 x749) (= x5313 x2509) (= x4140 x2058) (= x3100 x4456) (= x1619 x3019) (= x162 x323) (= x1331 x2994) (= x999 x4773) (= x3903 x4925) (= x4188 x997) (= x2426 x3384) (= x2116 x1910) (= 0 x1189)) (not x1374)) x600) (=> (and x1374 (and (= x3148 true) (= 0 x3169) (= x4761 false))) x3832)))))
(assert (x847 x5396))
(assert (< (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x25 (x3860 64 x1298 10)) (x3860 64 x1298 10)))
(assert (x847 x387))
(assert (> (x4159 x3044 x1475 x5086 x5164) 10000))
(assert (= x3362 (and x5218 x1310)))
(assert (< (x3860 64 1 x2579) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2091 x1537) x5075))
(assert (= (x25 (+ x2686 1)) (x25 x2686)))
(assert (x847 x1462))
(assert (= (x3159 x4543 x2716) (x25 (x3159 x4543 x2716))))
(assert (x847 x1686))
(assert (= (x25 (x3860 64 x5617 11)) (x3860 64 x5617 11)))
(assert (x847 x3641))
(assert (< (x3159 x1096 x4660) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x25 1722637450)))
(assert (= x1893 (x3376 (x3860 x1893 x2972 x3027))))
(assert (x847 x752))
(assert (< 10000 (x3226 x1815 x4992 x4534 x3294 x3404 x312)))
(assert (x847 x3948))
(assert (= (and (not x2623) x2047) x2774))
(assert (x367 x2369))
(assert (= x5565 (x3376 (x3226 x5565 x406 x603 x3458 x5690 x2631))))
(assert (x847 x2593))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104)))
(assert (x847 x426))
(assert (x847 x965))
(assert (= 32 (x3376 (x3159 32 x2870))))
(assert (x847 x4877))
(assert (x847 x1678))
(assert (= x1128 (x1122 (x3860 x696 x1128 x5666))))
(assert (x847 x5649))
(assert (x847 x1285))
(assert (x847 x239))
(assert (x847 x3719))
(assert (x847 x306))
(assert (= (x3376 (x3860 64 x735 6)) 64))
(assert (not (x2689 (x3860 64 x2822 11))))
(assert (x847 x346))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x735 36)))
(assert (x847 x5520))
(assert (x847 x1081))
(assert (= (and (not x5664) x1747) x1633))
(assert (= (x3159 32 x418) (x25 (x3159 32 x418))))
(assert (= (x4693 (x2521 x3044 x3970 x518 x1635 x4479)) x1635))
(assert (x847 x1265))
(assert (x847 x824))
(assert (x1746 x3478 2))
(assert (x847 x213))
(assert (x847 x1905))
(assert (x847 x2489))
(assert (= x2103 (x2143 (x2521 x3676 x3103 x2103 x548 x4548))))
(assert (x847 x3370))
(assert (x847 x5216))
(assert (x847 x2846))
(assert (= x3424 (x1122 (x4159 x1815 x3424 x5041 x1337))))
(assert (= (x3376 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523)) x4342))
(assert (x847 x2041))
(assert (x1411 x720))
(assert (=> (>= 10000 x1192) (= 0 (x25 x1192))))
(assert (x1411 x1460))
(assert (= (and x244 x5055) x2430))
(assert (=> (<= x2174 10000) (= (x25 x2174) 0)))
(assert (=> (<= x4724 10000) (= 0 (x25 x4724))))
(assert (x847 x3642))
(assert (= 0 (x25 34591783479076665122502074927488338969190252781858077677016911635275368785765)))
(assert (= (x25 (x3159 x1893 x2588)) (x3159 x1893 x2588)))
(assert (x847 x3192))
(assert (x847 x3135))
(assert (= x763 (and x3826 x1973)))
(assert (=> (>= 10000 x2146) (= (x25 x2146) 0)))
(assert (= x5565 (x3376 (x3159 x5565 x4597))))
(assert (= (x3376 (x3159 x1815 x3914)) x1815))
(assert (= (x2521 x1315 x438 x1999 x2081 x2159) (x25 (x2521 x1315 x438 x1999 x2081 x2159))))
(assert (x847 x4315))
(assert (x847 x679))
(assert (< 10000 (x3159 x4543 x2716)))
(assert (not (x2689 (x3860 64 1 x5382))))
(assert (=> (<= x4734 10000) (= (x25 x4734) 0)))
(assert (= x1209 (x1122 (x3226 x3044 x1209 x4938 x5515 x3235 x4481))))
(assert (< (x3860 x3676 x1859 x4266) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1859))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x865 10)))
(assert (not (x2689 (x3860 x4098 x1119 x1646))))
(assert (=> (>= 10000 x3650) (= 0 (x25 x3650))))
(assert (x847 x5322))
(assert (x847 x3245))
(assert (= (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179) (x25 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179))))
(assert (= x3234 (x2143 (x4159 x2207 x4683 x3234 x5685))))
(assert (= 0 (x25 57896044618658097711785492504343953926634992332820282019728792003956)))
(assert (> (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39) 10000))
(assert (= x2448 (x3376 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x4221 x4999 x562 x2941 x3542 x3661)))
(assert (x847 x5204))
(assert (x847 x638))
(assert (x847 x438))
(assert (x847 x2221))
(assert (x847 x3667))
(assert (x926 256 x1699))
(assert (x379 x4216 128))
(assert (x379 x4243 2))
(assert (= x1936 (=> (and (or (and x496 (and (= x4046 (x5311 160)) (= x2134 (x2272 128)) (= x2420 (= 34 (x2574 260))) (= (x5311 128) x2763) (= (x5311 160) x3183) (<= x2396 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x4162 x3677) (= 0 x5465) x71 (<= x2256 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x5126 290) (= (= 64 (x2574 164)) x71) (<= x873 18446744073709551615) (= x1954 (x5311 128)) (= x5063 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4956)) (= x5170 (= (x2574 228) (x2858 518))) (= x1627 (+ x873 292)) (>= 127 x292) (>= x4825 1) (= false x5275) (= (+ 196 x1556) x3315) (>= x2256 356) (= x5159 (x3825 224)) (= (x3190 164) x1556) (= (x2124 (+ 486 x5063)) x100) (= 160 x4655) (= 0 x2667) (= x2957 (x959 (- x100 294))) (>= 127 x292) (= (x2124 (+ x3036 x3338)) x5560) (= x695 false) (= (x959 (- x5560 290)) x2396) (= x2396 x2256) (= (x3190 260) x873) (= x5482 x1370) (>= x2396 356) (= x1356 256) (not (> x1627 x2256)) (= false x2776) (= (x2124 (+ 31 x5159)) x503) (= x5445 x2411) (= (= (x2858 486) (x2574 196)) x1481) (= x4956 (x2124 (+ x2134 31))) (= 354 x1025) (= x3036 (x2124 (+ x100 32))) (not (> x3315 x2256)) (= 1084734224 x1745) (= x4825 (x2015 x2605)) (= x4957 false) x2420 (= (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x503) x3338) (= x2470 (x2543 322)) x1481 x5170 (= x4097 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= (x2543 290) x5445) (<= x1556 18446744073709551615))) (and (not x496) (and (= x2411 x1692) (= x1025 128)))) (= x496 (= 0 x1692))) x1208)))
(assert (x847 x1014))
(assert (x847 x477))
(assert (= (=> (and (= (x3342 x1702) x3503) (= (not (> x4293 224)) x1663)) (and x1933 x1663)) x5012))
(assert (x847 x3382))
(assert (= (x25 (x3159 32 x3713)) (x3159 32 x3713)))
(assert (= (x3376 (x3159 32 x605)) 32))
(assert (x847 x4879))
(assert (x847 x4328))
(assert (x379 x13 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x4351 10000) (= (x25 x4351) 0)))
(assert (< 10000 (x4159 x4342 x5687 x2789 x2303)))
(assert (x847 x5286))
(assert (= x4615 (x4693 (x2521 x4348 x3176 x5171 x4615 x2830))))
(assert (x847 x1904))
(assert (x847 x3966))
(assert (x379 x4956 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x262 (and x816 (not x4594))))
(assert (x847 x2578))
(assert (= (or (and x446 x4040) (and x1633 x1136) (and x5150 x3363)) x5314))
(assert (x847 x1338))
(assert (= (x3860 64 x4162 1) (x25 (x3860 64 x4162 1))))
(assert (x847 x2789))
(assert (x847 x5159))
(assert (= (x3376 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)) x432))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x5203 x3210 x3340)))
(assert (x847 x1372))
(assert (x847 x48))
(assert (x847 x1700))
(assert (> (x4159 x1096 x3667 x2006 x5390) 10000))
(assert (x847 x3625))
(assert (= (and (not x776) x2253) x998))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (not (x2689 (x3860 x3044 x1116 x5477))))
(assert (< (x4159 x4543 x5006 x4604 x1107) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3952 x174))
(assert (x847 x2505))
(assert (x847 x1404))
(assert (x847 x917))
(assert (= (x2143 (x3860 64 x4654 12)) 12))
(assert (x847 x2591))
(assert (x847 x4658))
(assert (= (or x3671 x4091) x2874))
(assert (x847 x2027))
(assert (x847 x2134))
(assert (< (x4159 x4342 x5687 x2789 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2918))
(assert (not (x2689 (x2521 x4098 x1938 x750 x5028 x1626))))
(assert (> (x3159 32 x418) 10000))
(assert (=> (<= x1802 10000) (= (x25 x1802) 0)))
(assert (x847 x671))
(assert (x847 x4342))
(assert (x2689 3957931183))
(assert (x847 x3633))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x2448 x2591 x4502 x308 x202 x4027)))
(assert (=> (>= 10000 x3761) (= 0 (x25 x3761))))
(assert (= x1994 (x4693 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666))))
(assert (x847 x2860))
(assert (x926 32 x5165))
(assert (= x2159 (x3021 (x2521 x1315 x438 x1999 x2081 x2159))))
(assert (x847 x1821))
(assert (x847 x1429))
(assert (= (x3860 64 x1640 36) (x25 (x3860 64 x1640 36))))
(assert (= (=> (= x665 x3406) x3255) x1845))
(assert (x847 x109))
(assert (x847 x5668))
(assert (=> (>= 10000 x3431) (= 0 (x25 x3431))))
(assert (= (or x1995 x718) x4886))
(assert (= (x25 (x3860 64 x4556 (ite (= x3044 0) x5220 (ite (>= 32 x3044) x5076 (ite (<= x3044 64) x193 (ite (>= 96 x3044) x3617 (ite (>= 128 x3044) x4772 (ite (>= 160 x3044) x3485 (ite (>= 192 x3044) x5676 (ite (<= x3044 224) x5399 x3739)))))))))) (x3860 64 x4556 (ite (= x3044 0) x5220 (ite (>= 32 x3044) x5076 (ite (>= 64 x3044) x193 (ite (>= 96 x3044) x3617 (ite (<= x3044 128) x4772 (ite (>= 160 x3044) x3485 (ite (<= x3044 192) x5676 (ite (>= 224 x3044) x5399 x3739)))))))))))
(assert (x847 x2601))
(assert (x847 x1851))
(assert (= x1866 (x3021 (x2521 x4543 x4410 x1883 x2314 x1866))))
(assert (x847 x2082))
(assert (x847 x4220))
(assert (=> (<= x308 10000) (= 0 (x25 x308))))
(assert (x847 x5485))
(assert (< 10000 (x3226 x4098 x1853 x3691 x5077 x2945 x4263)))
(assert (= (x4159 x4342 x5687 x2789 x2303) (x25 (x4159 x4342 x5687 x2789 x2303))))
(assert (x847 x1745))
(assert (x847 x2666))
(assert (x847 x392))
(assert (= x4245 (x4985 (x844 x4342 x1197 x2592 x2029 x4858 x2815 x1712 x4245))))
(assert (x847 x5565))
(assert (= (x25 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175)) (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175)))
(assert (= (x1122 (x4159 x3432 x4959 x4429 x3224)) x4959))
(assert (= x2989 (or x4936 x2275 x2176 x871 x3929)))
(assert (x847 x2960))
(assert (= x4856 (and x3672 (not x1374))))
(assert (= x3432 (x3376 (x3159 x3432 x2682))))
(assert (= (x3021 (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848)) x4722))
(assert (x847 x850))
(assert (x847 x1946))
(assert (= x3027 (x2143 (x3860 x1893 x2972 x3027))))
(assert (= (x4985 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)) x3382))
(assert (= 64 (x3376 (x3860 64 x1495 36))))
(assert (x847 x4403))
(assert (x379 x2800 128))
(assert (x2689 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (x847 x4756))
(assert (x847 x1276))
(assert (x847 x4698))
(assert (x847 x2274))
(assert (= x2066 (and x3760 x2088)))
(assert (= x5468 (x4693 (x3226 x5203 x5129 x1802 x5468 x3611 x249))))
(assert (x847 x888))
(assert (=> (<= x3611 10000) (= (x25 x3611) 0)))
(assert (x847 x2880))
(assert (= (x25 (x3860 x4221 x4297 x3978)) (x3860 x4221 x4297 x3978)))
(assert (not (x2689 (x3860 64 x4145 2))))
(assert (=> (>= 10000 x299) (= 0 (x25 x299))))
(assert (x1679 x5204))
(assert (=> (>= 10000 x1940) (= 0 (x25 x1940))))
(assert (= (x25 (x3860 64 x1818 10)) (x3860 64 x1818 10)))
(assert (x847 x3770))
(assert (x847 x5402))
(assert (= (and x4713 x1671) x4146))
(assert (= (and x5283 x5116) x2093))
(assert (> (x4159 x5565 x3137 x4053 x405) 10000))
(assert (= (x3021 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160)) x4690))
(assert (x847 x3140))
(assert (x2689 1084734224))
(assert (x847 x5420))
(assert (< (x3860 64 1 x5382) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5447))
(assert (not (x2689 (x3159 x1893 x2588))))
(assert (= x2171 (x3573 (x3619 x696 x991 x951 x1138 x1684 x2171 x5009))))
(assert (=> (>= 10000 x3234) (= 0 (x25 x3234))))
(assert (x847 x235))
(assert (= x2442 (x3573 (x3226 x3432 x5408 x1023 x136 x5322 x2442))))
(assert (x847 x4277))
(assert (x847 x4966))
(assert (< (x3619 x4098 x4838 x298 x553 x2835 x3291 x2978) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x542))
(assert (x847 x1659))
(assert (< 10000 (x3226 x3432 x5408 x1023 x136 x5322 x2442)))
(assert (x1746 (+ 31 x696) 32))
(assert (x847 x5034))
(assert (= (and x5305 x2662) x659))
(assert (= (x1122 (x3860 64 x1245 11)) x1245))
(assert (=> (>= 10000 x136) (= 0 (x25 x136))))
(assert (x847 x1128))
(assert (x847 x2995))
(assert (x1139 x4712))
(assert (x847 x5061))
(assert (x847 x3180))
(assert (x847 x3381))
(assert (= x1477 (and x2981 x3508)))
(assert (=> (<= x1972 10000) (= (x25 x1972) 0)))
(assert (x2657 (+ x3633 31)))
(assert (x2689 2177969240))
(assert (x847 x5348))
(assert (x847 x5548))
(assert (< 10000 (x2521 x432 x4749 x1511 x5607 x2357)))
(assert (= x3060 (and x1103 (not x2280))))
(assert (x926 32 x4191))
(assert (x847 x877))
(assert (x847 x634))
(assert (x847 x432))
(assert (x847 x5488))
(assert (x847 x1696))
(assert (x847 x5502))
(assert (=> (<= x1198 10000) (= 0 (x25 x1198))))
(assert (=> (>= 10000 x149) (= 0 (x25 x149))))
(assert (= x5203 (x3376 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288))))
(assert (x847 x4832))
(assert (x847 x2853))
(assert (= x422 (x2143 (x3226 x148 x2796 x422 x4121 x1523 x2759))))
(assert (< 10000 (x3860 64 x4092 6)))
(assert (x847 x944))
(assert (x847 x1984))
(assert (x847 x2220))
(assert (x847 x3549))
(assert (x847 x4281))
(assert (x847 x4782))
(assert (x3500 x4956))
(assert (x1063 x2512))
(assert (x847 x3396))
(assert (< (x844 x2207 x3088 x1115 x915 x2460 x498 x4973 x3122) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5087))
(assert (= x1113 (x2143 (x4159 x696 x1198 x1113 x1529))))
(assert (> (x3860 64 x5553 3) 10000))
(assert (x847 x4669))
(assert (not (x2689 (x3860 64 x1298 10))))
(assert (x847 x3223))
(assert (= x5666 (x2143 (x3860 x696 x1128 x5666))))
(assert (= (x3860 x696 x1128 x5666) (x25 (x3860 x696 x1128 x5666))))
(assert (= x1439 (and x4038 x457)))
(assert (=> (>= 10000 x3739) (= 0 (x25 x3739))))
(assert (=> (>= 10000 x1893) (= (x25 x1893) 0)))
(assert (= 100 (x2143 (x3860 64 x365 100))))
(assert (=> (<= x2719 10000) (= 0 (x25 x2719))))
(assert (x847 x2754))
(assert (x847 x5633))
(assert (x379 x272 32))
(assert (= 0 (x25 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (<= x696 10000) (= 0 (x25 x696))))
(assert (x3513 x2645))
(assert (= (x25 35425322552009646506518338594398286811668114190755561836384294568426616127488) 0))
(assert (x847 x4101))
(assert (x847 x4864))
(assert (=> (<= x3872 10000) (= 0 (x25 x3872))))
(assert (x847 x2751))
(assert (x847 x2187))
(assert (= (x3376 (x3860 64 x735 36)) 64))
(assert (not (x2689 (x3159 x4221 x4190))))
(assert (= x5569 (and (not x4622) x3905)))
(assert (= (x3376 (x3159 32 x3713)) 32))
(assert (x847 x3836))
(assert (x847 x5573))
(assert (x847 x1398))
(assert (x847 x5438))
(assert (not (x2689 (x3226 x4098 x1853 x3691 x5077 x2945 x4263))))
(assert (< (x2521 x3432 x539 x4357 x5079 x4952) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1122 (x3860 64 x892 5)) x892))
(assert (= x3435 (and x4798 (not x914))))
(assert (=> (>= 10000 x4262) (= 0 (x25 x4262))))
(assert (= (and x2430 x1436) x751))
(assert (= (x25 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160)) (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160)))
(assert (> (x3226 x1315 x4816 x3421 x3153 x5081 x965) 10000))
(assert (= (and (not x609) x4990) x1457))
(assert (= (x3226 x696 x3109 x5052 x5209 x5111 x1775) (x25 (x3226 x696 x3109 x5052 x5209 x5111 x1775))))
(assert (= x1361 (and (not x2883) x3306)))
(assert (x847 x1005))
(assert (=> (<= x3618 10000) (= 0 (x25 x3618))))
(assert (=> (>= 10000 x1228) (= 0 (x25 x1228))))
(assert (x847 x2218))
(assert (x847 x5600))
(assert (= x4098 (x3376 (x4159 x4098 x5536 x1228 x5013))))
(assert (= (x25 (+ x5472 1)) (x25 x5472)))
(assert (x847 x4795))
(assert (= x4654 (x1122 (x3860 64 x4654 12))))
(assert (x847 x5355))
(assert (=> (>= 10000 x1194) (= (x25 x1194) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2521 x1815 x5008 x3496 x4524 x1291)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x3044 x1116 x5477)))
(assert (= (x1122 (x3226 x4342 x833 x1763 x4924 x2004 x2713)) x833))
(assert (x847 x2815))
(assert (= (x3860 64 x365 100) (x25 (x3860 64 x365 100))))
(assert (=> (>= 10000 x1809) (= 0 (x25 x1809))))
(assert (= (x1122 (x3860 64 x2010 3)) x2010))
(assert (x3513 (ite (not (= x1125 0)) 1 0)))
(assert (= x2002 (and x1231 x3740)))
(assert (= (x4693 (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160)) x3119))
(assert (x847 x3691))
(assert (x847 x267))
(assert (= (x3573 (x3226 x2207 x3010 x1273 x2454 x3720 x4050)) x4050))
(assert (x847 x3696))
(assert (= (x1122 (x2521 x3676 x3103 x2103 x548 x4548)) x3103))
(assert (= 2 (x2143 (x3860 64 x4145 2))))
(assert (= (and x614 x275) x2115))
(assert (x847 x1028))
(assert (= (x4693 (x3619 x1815 x2340 x1943 x1287 x4002 x1985 x3871)) x1287))
(assert (=> (<= x3005 10000) (= (x25 x3005) 0)))
(assert (x847 x1060))
(assert (x847 x153))
(assert (= (x2143 (x4159 x1315 x2398 x4416 x4434)) x4416))
(assert (x847 x525))
(assert (= (x3021 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)) x1448))
(assert (x1063 x3114))
(assert (x847 x4883))
(assert (x847 x3257))
(assert (= (x2143 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)) x5479))
(assert (=> (>= 10000 x1226) (= (x25 x1226) 0)))
(assert (= x2900 (x3573 (x844 x1096 x838 x493 x1192 x2339 x2900 x2558 x3635))))
(assert (x847 x1423))
(assert (x847 x2780))
(assert (x847 x2340))
(assert (= x354 (x3573 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432))))
(assert (x847 x2179))
(assert (x847 x3759))
(assert (= (x4693 (x844 x5565 x4946 x3545 x906 x3076 x3327 x3761 x1201)) x906))
(assert (= x5181 (x2715 (x844 x1903 x3431 x4237 x2146 x2218 x1412 x5181 x326))))
(assert (x847 x2163))
(assert (x847 x5563))
(assert (= (x2715 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39)) x3842))
(assert (= (x2143 (x3860 64 x5411 10)) 10))
(assert (x847 x3768))
(assert (x847 x1595))
(assert (x367 x97))
(assert (x847 x1957))
(assert (=> (>= 10000 x2340) (= 0 (x25 x2340))))
(assert (x847 x4134))
(assert (x847 x1937))
(assert (x847 x5583))
(assert (x1746 (+ 31 x1857) 32))
(assert (x847 x3015))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3226 x4543 x2021 x5511 x530 x1828 x5030)))
(assert (< 10000 (x3860 64 x5258 36)))
(assert (= x2248 (and (not x3363) x5150)))
(assert (=> (<= x3109 10000) (= (x25 x3109) 0)))
(assert (= (x4693 (x2521 x1096 x3719 x311 x156 x1940)) x156))
(assert (= x599 (and x5064 x3721)))
(assert (x847 x4401))
(assert (x847 x800))
(assert (< (x2521 x4342 x2694 x4688 x654 x501) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657) (x25 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657))))
(assert (= (x2143 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262)) x3790))
(assert (=> (<= x1128 10000) (= 0 (x25 x1128))))
(assert (x847 x3512))
(assert (x847 x1379))
(assert (=> (<= x1866 10000) (= 0 (x25 x1866))))
(assert (x847 x4108))
(assert (= x3676 (x3376 (x4159 x3676 x3428 x1108 x5491))))
(assert (=> (<= x3879 10000) (= 0 (x25 x3879))))
(assert (x847 x5046))
(assert (x847 x4105))
(assert (x847 x4462))
(assert (= (x3376 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805)) x1315))
(assert (x847 x3538))
(assert (x847 x4316))
(assert (x847 x3668))
(assert (=> (<= x1684 10000) (= (x25 x1684) 0)))
(assert (x847 x2796))
(assert (= (x25 (x3226 x4543 x2021 x5511 x530 x1828 x5030)) (x3226 x4543 x2021 x5511 x530 x1828 x5030)))
(assert (= x600 (=> (and (or (not x189) x189) (= x189 (= 0 x3551))) x41)))
(assert (x847 x2959))
(assert (= (and x4889 (not x5493)) x2130))
(assert (x847 x2741))
(assert (x1063 x1389))
(assert (=> (>= 10000 x2796) (= 0 (x25 x2796))))
(assert (x847 x4471))
(assert (x847 x1837))
(assert (not (x2689 (x3860 64 x892 5))))
(assert (< (x3860 64 x1495 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x1934 x4612) x1868))
(assert (x926 32 x5461))
(assert (= x4221 (x3376 (x3159 x4221 x4190))))
(assert (not (x2689 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179))))
(assert (x847 x2702))
(assert (= 100 (x2143 (x3860 64 x2067 100))))
(assert (x847 x1924))
(assert (= (and x1990 x1339) x1360))
(assert (x847 x5234))
(assert (x847 x5481))
(assert (=> (<= x328 10000) (= (x25 x328) 0)))
(assert (x367 x4243))
(assert (x2657 x4243))
(assert (x847 x1903))
(assert (x847 x4579))
(assert (= x3204 (and x464 x4998)))
(assert (= (x3021 (x844 x3432 x2358 x5130 x2308 x2247 x5153 x111 x5341)) x2247))
(assert (x847 x777))
(assert (= x2622 (and (not x1436) x2430)))
(assert (= x4929 (x2143 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395))))
(assert (x847 x1847))
(assert (x847 x587))
(assert (x847 x4769))
(assert (x847 x1943))
(assert (x3952 x4321))
(assert (x847 x1953))
(assert (= x2705 (=> (= x5587 (= 0 x3049)) (and (=> (not x5587) x4978) (=> (and x5587 (= x3049 1)) x1483)))))
(assert (> (x3860 x5203 x3210 x3340) 10000))
(assert (= x1471 (and x2002 x2546)))
(assert (x847 x4750))
(assert (=> (<= x2945 10000) (= (x25 x2945) 0)))
(assert (=> (<= x1771 10000) (= (x25 x1771) 0)))
(assert (x847 x3188))
(assert (x847 x1370))
(assert (x847 x3185))
(assert (x847 x1794))
(assert (= x1988 (x4693 (x844 x4543 x5566 x5570 x1988 x2801 x3819 x4206 x5657))))
(assert (x2657 (+ 31 x4813)))
(assert (= x3872 (x2715 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218))))
(assert (x847 x1785))
(assert (x847 x562))
(assert (= 0 (x25 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (x3513 (ite (not (= x2145 0)) 1 0)))
(assert (x847 x2400))
(assert (x847 x4600))
(assert (x847 x1806))
(assert (= (and (not x4518) x1989) x3469))
(assert (x847 x329))
(assert (x847 x3878))
(assert (x847 x4626))
(assert (=> (>= 10000 x2288) (= (x25 x2288) 0)))
(assert (x367 x3114))
(assert (= x3051 (x2715 (x3619 x148 x4710 x3015 x5083 x2934 x4579 x3051))))
(assert (< (x4159 x5203 x372 x1776 x1213) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x4159 x3044 x1475 x5086 x5164) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x2296))
(assert (not (x2689 (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104))))
(assert (=> (<= x5051 10000) (= (x25 x5051) 0)))
(assert (x847 x5422))
(assert (= x1815 (x3376 (x2521 x1815 x5008 x3496 x4524 x1291))))
(assert (= (x4693 (x4159 x1815 x3424 x5041 x1337)) x1337))
(assert (=> (<= x4263 10000) (= (x25 x4263) 0)))
(assert (x847 x825))
(assert (> (x3860 64 x4092 36) 10000))
(assert (x847 x5412))
(assert (=> (>= 10000 x501) (= (x25 x501) 0)))
(assert (x379 x2988 32))
(assert (=> (<= x1508 10000) (= 0 (x25 x1508))))
(assert (< 10000 (x3860 64 x735 6)))
(assert (=> (>= 10000 x3805) (= (x25 x3805) 0)))
(assert (= (x25 (x3226 x1315 x4816 x3421 x3153 x5081 x965)) (x3226 x1315 x4816 x3421 x3153 x5081 x965)))
(assert (x847 x1213))
(assert (= x575 (and (not x3016) x880)))
(assert (x847 x2586))
(assert (= (x2143 (x3860 64 x2366 12)) 12))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3159 x696 x2714)))
(assert (= (x25 (+ x2060 1)) (x25 x2060)))
(assert (= x4098 (x3376 (x3159 x4098 x76))))
(assert (x847 x1482))
(assert (= x3153 (x4693 (x3226 x1315 x4816 x3421 x3153 x5081 x965))))
(assert (x847 x1985))
(assert (x847 x1366))
(assert (< (x3226 x3432 x5408 x1023 x136 x5322 x2442) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x3860 64 x2067 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5128))
(assert (= (x1122 (x2521 x4543 x4410 x1883 x2314 x1866)) x4410))
(assert (x847 x1761))
(assert (= (not (and (= 128 x728) (= x3668 x3380) (= x1375 false) (= x4890 x3777) (<= x4890 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x3860 64 x865 10) x370) (<= 32 x2594) (>= x4890 196) (= false x2452) (= (+ 31 x525) x508) (>= 127 x1047) (<= x239 18446744073709551615) (= x4268 x4162) (= (x4130 x3136) x865) (= x4381 (= x936 (x401 132))) (= x525 (+ 4 x2287)) (= x5178 (+ 164 x239)) (= (+ x2805 32) x3136) (= x1234 (x4727 (+ 31 x2569) 32)) (= 164 x3867) (= (+ x1398 160) x2805) (not (< x4890 x4310)) (< x2805 x3484) (= x3484 (+ x1512 x2805 32)) (<= 1 x905) (<= x3777 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x3777 (x959 (- x893 128))) (<= 196 x3777) (= (+ x2569 x5659) x4310) (= (* 32 x5461) x1398) (= x239 (x5639 132)) (= x905 (x2015 x4162)) (= x1512 (* x1234 32)) (< x508 x4890) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2594) (= x3841 1722637450) (= x1842 x2287) (>= x2867 1) (= x2996 46442213778836376901753710468615024683576072693327014300388496345503314739200) (not (> x5178 x4890)) (= x1402 (+ x3136 x2569)) (= x1804 x2928) (= (x2015 x5672) x2867) x4381 (<= x1047 127) (= x1620 128) (<= x2569 18446744073709551615) (= x2569 (x5639 x525)) (= x5461 (x4727 (+ x239 31) 32)) (= 128 x3975) (= x5659 (+ x525 32)) (= (x5679 x2805) x2594))) x1354))
(assert (= x43 (x3573 (x3619 x2207 x1719 x3790 x4279 x1922 x43 x4262))))
(assert (x847 x4887))
(assert (x1063 x169))
(assert (= (x1122 (x3226 x4543 x2021 x5511 x530 x1828 x5030)) x2021))
(assert (x847 x2414))
(assert (= x1440 (x1122 (x2521 x1893 x1440 x535 x1449 x4345))))
(assert (x847 x1400))
(assert (x847 x660))
(assert (= (and (not x4601) x4645) x2192))
(assert (x847 x5387))
(assert (= (x25 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)) (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)))
(assert (x367 x5094))
(assert (x847 x1917))
(assert (x379 x174 128))
(assert (= x121 (=> (= x988 x2471) x2422)))
(assert (= (or x440 x3170) x5661))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 x2207 x1508 x5023)))
(assert (= x1123 (and x739 (not x611))))
(assert (=> (>= 10000 x542) (= 0 (x25 x542))))
(assert (= (x3021 (x844 x5203 x828 x607 x3369 x618 x4638 x3892 x2288)) x618))
(assert (x847 x3748))
(assert (= (and x2662 (not x5305)) x515))
(assert (x847 x1828))
(assert (= x562 (x2143 (x3226 x4221 x4999 x562 x2941 x3542 x3661))))
(assert (x847 x1930))
(assert (= (x25 3628442803) 0))
(assert (> (x844 x1893 x5059 x3489 x2245 x4722 x1226 x2427 x3848) 10000))
(assert (x847 x2107))
(assert (x847 x906))
(assert (x847 x5022))
(assert (= 0 (x25 46442213778836376901753710468615024683576072693327014300388496345503314739200)))
(assert (= (x3376 (x2521 x4221 x995 x4928 x1070 x2187)) x4221))
(assert (x847 x1699))
(assert (= x913 (or x707 x3660)))
(assert (x847 x1657))
(assert (= (x25 (x3226 x1815 x4992 x4534 x3294 x3404 x312)) (x3226 x1815 x4992 x4534 x3294 x3404 x312)))
(assert (x847 x5130))
(assert (= x2586 (x2143 (x844 x148 x5444 x2586 x5027 x3546 x4817 x3842 x39))))
(assert (=> (>= 10000 x4474) (= (x25 x4474) 0)))
(assert (x847 x2007))
(assert (= (x2143 (x3860 64 x1305 0)) 0))
(assert (=> (<= x4049 10000) (= (x25 x4049) 0)))
(assert (x847 x1880))
(assert (= (and x2647 x3686) x2253))
(assert (x926 32 x2052))
(assert (=> (<= x4817 10000) (= (x25 x4817) 0)))
(assert (x847 x5394))
(assert (= (x3860 x3044 x1116 x5477) (x25 (x3860 x3044 x1116 x5477))))
(assert (= (and (not x3214) x4760) x3266))
(assert (= (x3376 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392)) x1893))
(assert (x847 x2140))
(assert (= x3450 (and x1542 (not x2208))))
(assert (x847 x3560))
(assert (> (x3159 32 103) 10000))
(assert (= (and (not x557) x3464) x5365))
(assert (x3500 x293))
(assert (x847 x5549))
(assert (= (x25 (x3159 32 104)) (x3159 32 104)))
(assert (x847 x3970))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3860 64 x5391 11)))
(assert (not (x2689 (x3159 32 x605))))
(assert (= x106 (=> (and (= x3280 x84) (= (x1707 x177) x1558) (= false x3349) (= x426 (ite (< 0 x2817) x174 (x210 127 x174))) (not (< x1460 x2564)) (<= x5125 127) (= (x4727 x5548 2) x174) (= x5553 x289) (< x1726 x1460) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2125) (= x5548 (x2865 x82)) (= x5554 false) (= x4268 x546) (= x82 (x3860 64 x5553 3)) (= (x4727 (+ x426 31) 32) x1413) (= x1819 1914215) (= (+ 164 x1893) x2564) (= x3782 128) (= (+ 32 x177) x3815) (= x5618 (x959 (- x2817 (mod (ite (< x426 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (not (< x1460 x2893)) (= (x959 (- x2076 128)) x2125) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1460) (= (x1707 132) x1893) (= (= x1125 (x231 132)) x872) (>= x2125 196) (<= x1893 18446744073709551615) (= x5638 (x2015 x5672)) (= (+ x177 31) x1726) (= (= 0 x426) x2883) (or (= x5618 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5618)) (= x2125 x1460) (= x760 (x2015 x4162)) (= x4031 51607134309459761954548520284799282329936326410793501951915747293203005440) (= (x210 1 x5548) x2817) (= (* x1413 32) x4056) (>= 127 x5125) (= (+ x4056 160) x1557) x872 (= x2893 (+ x3815 x1558)) (<= 1 x760) (= (+ x3064 4) x177) (= x3064 x5280) (= x2775 164) (<= 1 x5638) (= x5517 128) (>= x1460 196) (<= x1558 18446744073709551615)) (and (=> x2883 x5113) (=> (and (= (> x426 31) x5670) (not x2883)) (and (=> (and (and (= x802 (+ 160 x426)) (= (< 192 x802) x99) (= x4613 (x3159 32 x82)) (= x3921 (+ x4613 1)) (= x1183 (x3342 x4613))) x5670) (and (=> (not x99) x3378) (=> x99 x5624))) (=> (and (not x5670) (and (= (x4727 x3035 256) x2444) (= x5400 (* 256 x2444)) (= (x2865 x82) x3035))) x5113)))))))
(assert (= (x25 (x3860 64 x3512 36)) (x3860 64 x3512 36)))
(assert (x847 x3663))
(assert (= (x4693 (x3619 x3044 x4652 x129 x1380 x489 x829 x3898)) x1380))
(assert (= (x2143 (x3860 64 x3161 11)) 11))
(assert (x847 x4373))
(assert (not (x2689 (x3860 64 x1495 36))))
(assert (x847 x4822))
(assert (= (and x1170 x99) x4700))
(assert (x847 x3470))
(assert (x847 x2419))
(assert (= x3657 (=> (= x2848 (+ x1018 x3346)) x3061)))
(assert (x847 x3684))
(assert (> (x3159 x4221 x4190) 10000))
(assert (=> (>= 10000 x4710) (= 0 (x25 x4710))))
(assert (not (x2689 (x3619 x4342 x2899 x542 x2204 x5353 x3879 x523))))
(assert (x847 x1927))
(assert (x847 x184))
(assert (x847 x2418))
(assert (< 10000 (x3619 x3432 x1582 x4879 x2795 x1530 x328 x4179)))
(assert (= (x3860 64 x2822 11) (x25 (x3860 64 x2822 11))))
(assert (= (x25 115792089237316195423570985008687907853269984665640564039457584007913129639773) 0))
(assert (x847 x1448))
(assert (x379 x1352 32))
(assert (= (x3376 (x844 x3044 x664 x2094 x5675 x4261 x3695 x3872 x4218)) x3044))
(assert (not (x2689 (x3860 x5203 x3210 x3340))))
(assert (not (x2689 (x3860 64 x2010 7))))
(assert (x847 x219))
(assert (=> (<= x312 10000) (= (x25 x312) 0)))
(assert (x847 x3724))
(assert (x847 x2267))
(assert (= x2392 (x2715 (x3619 x1893 x5066 x4272 x935 x2000 x1194 x2392))))
(assert (x847 x1963))
(assert (x847 x1535))
(assert (x847 x5199))
(assert (x847 x1727))
(assert (= (and x1296 x4041) x201))
(assert (=> (<= x4345 10000) (= 0 (x25 x4345))))
(assert (x847 x5592))
(assert (x847 x4956))
(assert (= (x25 29244376827073035548771643948814531551534385112760475998805679327281764368384) 0))
(assert (x847 x4495))
(assert (x3513 x3737))
(assert (x3952 x5204))
(assert (not (x2689 (x3860 64 x5214 12))))
(assert (= 64 (x3376 (x3860 64 x988 36))))
(assert (x847 x3866))
(assert (not (x2689 (x4159 x1096 x3667 x2006 x5390))))
(assert (not (x2689 (x3619 x5565 x2409 x2399 x4721 x3768 x5024 x2599))))
(assert (=> (>= 10000 x3139) (= 0 (x25 x3139))))
(assert (x847 x4897))
(assert (x847 x4717))
(assert (x367 x4321))
(assert (x2657 x3413))
(assert (x847 x5353))
(assert (=> (<= x4688 10000) (= (x25 x4688) 0)))
(assert (= x4221 (x3376 (x3860 x4221 x4297 x3978))))
(assert (= x1153 (=> (and (= x1163 x1121) (= x1163 (x883 128)) (= x2818 160)) x2842)))
(assert (x3952 x5548))
(assert (= (x3376 (x3860 64 x4654 12)) 64))
(assert (x847 x1928))
(assert (x847 x4454))
(assert (x847 x2213))
(assert (x847 x5256))
(assert (= (and x3362 (not x3920)) x3693))
(assert (x847 x336))
(assert (=> (>= 10000 x1380) (= (x25 x1380) 0)))
(assert (=> (>= 10000 x4690) (= 0 (x25 x4690))))
(assert (x847 x2024))
(assert (= x2816 (or x2212 x104)))
(assert (= x4801 (x2715 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382))))
(assert (x847 x3379))
(assert (= x4706 (x2715 (x844 x1815 x3663 x1080 x1978 x5593 x1010 x4706 x175))))
(assert (= (x1122 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207)) x3995))
(assert (= (or x1442 x4856) x75))
(assert (=> (<= x4357 10000) (= 0 (x25 x4357))))
(assert (x379 x2419 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2448) (= 0 (x25 x2448))))
(assert (x847 x596))
(assert (not (x2689 (x3226 x1893 x5516 x803 x152 x2107 x5455))))
(assert (x847 x4740))
(assert (= (x25 (x3860 64 1 x5382)) (x3860 64 1 x5382)))
(assert (x379 x300 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3500 x1101))
(assert (x847 x519))
(assert (=> (<= x1499 10000) (= 0 (x25 x1499))))
(assert (x1411 x4787))
(assert (x847 x76))
(assert (x847 x5122))
(assert (x847 x4213))
(assert (= (x3860 64 x4828 7) (x25 (x3860 64 x4828 7))))
(assert (=> (<= x787 10000) (= (x25 x787) 0)))
(assert (x847 x1843))
(assert (x847 x2587))
(assert (x2657 32))
(assert (= (x1122 (x4159 x432 x3884 x1771 x1947)) x3884))
(assert (= (x4159 x3432 x4959 x4429 x3224) (x25 (x4159 x3432 x4959 x4429 x3224))))
(assert (= (x3860 x3676 x1859 x4266) (x25 (x3860 x3676 x1859 x4266))))
(assert (=> (<= x5506 10000) (= 0 (x25 x5506))))
(assert (x847 x1555))
(assert (x847 x3118))
(assert (= (x25 (x2521 x696 x4699 x2887 x2595 x4903)) (x2521 x696 x4699 x2887 x2595 x4903)))
(assert (=> (<= x156 10000) (= (x25 x156) 0)))
(assert (x847 x3117))
(assert (= x1545 (=> (and (= x1482 x999) (= x4790 x3630) (= x1331 x3232) (= x1619 x1349) (= x4925 x4127) (= x2279 x997) (= x2426 x4746) (= x909 x4140) (= x882 x3100) (= x3038 x2116) (= x842 x1105) (= x2509 x538) (= x1801 x162)) x2570)))
(assert (> (x3226 x5203 x5129 x1802 x5468 x3611 x249) 10000))
(assert (not (x2689 (x3860 64 x1370 5))))
(assert (=> (>= 10000 x3245) (= 0 (x25 x3245))))
(assert (x847 x65))
(assert (x847 x5124))
(assert (x847 x4006))
(assert (x847 x5452))
(assert (= x2158 (or x5357 x4368 x1868)))
(assert (x847 x2421))
(assert (= 0 (x25 43931689107028929153831073962459296230956404255593708771276734084804920737792)))
(assert (= (and x4805 (not x1722)) x4288))
(assert (x847 x4569))
(assert (= (x2143 (x3860 64 x4092 6)) 6))
(assert (x847 x4221))
(assert (=> (>= 10000 x2899) (= (x25 x2899) 0)))
(assert (x847 x2957))
(assert (x847 x4946))
(assert (x847 x4683))
(assert (= 4 (x2143 (x3860 64 x1370 4))))
(assert (= x5082 (and x1983 x4113)))
(assert (x379 x503 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x5081))
(assert (x3513 x4105))
(assert (x847 x3699))
(assert (x847 x1769))
(assert (x847 x393))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x844 x696 x4704 x1243 x4724 x5568 x1580 x4801 x3382)))
(assert (x3952 x69))
(assert (= (and x3208 x579) x3173))
(assert (= x2638 (x1122 (x3860 x1903 x2638 x3701))))
(assert (=> (>= 10000 x4050) (= 0 (x25 x4050))))
(assert (x847 x3095))
(assert (x847 x921))
(assert (x847 x5350))
(assert (= (x1122 (x844 x2448 x1378 x2055 x3843 x4451 x354 x149 x1432)) x1378))
(assert (=> (>= 10000 x3546) (= (x25 x3546) 0)))
(assert (x367 x3413))
(assert (=> (>= 10000 x4551) (= (x25 x4551) 0)))
(assert (= (x2143 (x3860 64 x947 2)) 2))
(assert (x379 x5489 2))
(assert (= (x4693 (x3226 x4348 x3986 x2119 x1343 x1984 x2200)) x1343))
(assert (x926 32 x4105))
(assert (= x4013 (x2143 (x3619 x1903 x3995 x4013 x2572 x1106 x1265 x5207))))
(assert (= x4595 (=> (and (= x432 (x959 (- x3676 32))) (= (x2124 (+ x4709 x4557)) x4966) (= x4658 (x2124 (+ x4557 x4709))) (= (x2124 (+ 32 x4658)) x155) (= x3676 (x959 (- x155 x4709))) (= (<= x432 224) x1509)) (and (=> (and (= x3059 (x4159 x432 x3884 x1771 x1947)) (= (ite (= x432 0) x4270 (ite (>= 32 x432) x2787 (ite (<= x432 64) x3371 (ite (>= 96 x432) x3059 (ite (<= x432 128) x321 (ite (<= x432 160) x4264 (ite (<= x432 192) x2964 (ite (>= 224 x432) x972 x2584)))))))) x1621) (= x1912 (x5141 x3329)) (= (x5141 x1601) x5479) (= (x5141 x4394) x2327) (= x2180 (x2124 (+ x4709 192))) (= (x5141 x4709) x1851) (= x1821 (x2124 (+ x4709 64))) (= x3642 (x5141 x306)) (= (x2124 (+ x4709 96)) x2163) (= x1947 (x5141 x408)) (= (x5141 x4709) x4749) (= (x2124 (+ 32 x4709)) x2170) (= (x2124 (+ 32 x4709)) x4184) (= x4264 (x3226 x432 x5646 x1826 x4314 x4147 x1743)) (= x408 (x2124 (+ 64 x4709))) (= x4089 (x2124 (+ x4709 32))) (= (x5141 x4709) x3884) (= x1743 (x5141 x4940)) (= x4394 (x2124 (+ x4709 64))) (= (x2124 (+ 96 x4709)) x306) (= x3188 (x5141 x1821)) (= x3197 (x5141 x2170)) (= (x2124 (+ x4709 96)) x1193) (= x1771 (x5141 x1400)) (= x194 (x2124 (+ 128 x4709))) (= x524 (x2124 (+ x4709 32))) (= (x5141 x4089) x685) (= (x5141 x4184) x1826) (= x5674 (x2124 (+ x4709 96))) (= x4314 (x5141 x2097)) (= (x2124 (+ x4709 128)) x4940) (= (x2521 x432 x4749 x1511 x5607 x2357) x321) (= x3589 (x5141 x2180)) (= x1448 (x5141 x2163)) (= x5646 (x5141 x4709)) (= (x2124 (+ x4709 160)) x3329) (= (x5141 x194) x2406) (= (x3159 x432 x3550) x2787) (= x2468 (<= x3676 224)) (= (x3860 x432 x850 x685) x3371) (= (x3619 x432 x1851 x3197 x2327 x3642 x2406 x4104) x2964) (= x1400 (x2124 (+ x4709 32))) (= x972 (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589)) (= x3219 (x5141 x4709)) (= x4270 (x4535 0)) (= x2357 (x5141 x1193)) (= (x2124 (+ 160 x4709)) x884) (= (x2124 (+ 128 x4709)) x349) (= (x2124 (+ 32 x4709)) x1601) (= x5607 (x5141 x1092)) (= x3550 (x5141 x4709)) (= x1092 (x2124 (+ x4709 64))) (= x4103 (x5141 x349)) (= (x2124 (+ 64 x4709)) x2097) (= x4147 (x5141 x5674)) (= x850 (x5141 x4709)) (= (x5141 x524) x1511) (= (x5141 x884) x4104)) (and (=> (and (= x3428 (x5141 x4709)) (= (x3619 x3676 x4049 x1809 x3119 x4690 x4346 x3160) x5336) (= (x5141 x4709) x3966) (= x824 (x3335 x1557)) (= (x2124 (+ x4709 64)) x747) (= x3748 (x2124 (+ x4709 64))) (= (> x824 0) x3566) (= x5491 (x5141 x5396)) (= (x2124 (+ 96 x4709)) x1577) (= x4412 (x5141 x1162)) (= (x2124 (+ 128 x4709)) x216) (= x1429 (x2124 (+ x4709 32))) (= x5396 (x2124 (+ x4709 64))) (= x1809 (x5141 x4908)) (= (x5141 x3389) x5692) (= (x2124 (+ 160 x4709)) x49) (= x4049 (x5141 x4709)) (= (x2124 (+ x4709 96)) x3389) (= x4778 (x2521 x3676 x3103 x2103 x548 x4548)) (= (x3226 x3676 x2719 x3470 x1494 x3634 x5506) x6) (= x4548 (x5141 x2804)) (= x5070 (x2124 (+ x4709 192))) (= x3119 (x5141 x2946)) (= (x5141 x747) x548) (= (x2124 (+ x4709 160)) x2378) (= x5380 (x5141 x49)) (= x1162 (x2124 (+ 128 x4709))) (= (x4535 0) x4378) (= (x5141 x5070) x395) (= x4929 (x5141 x1195)) (= (x5141 x1577) x3634) (= (x5141 x4709) x2719) (= (x5141 x3523) x3470) (= (x2124 (+ 32 x4709)) x3523) (= (x5141 x3748) x3239) (= (x5141 x3954) x1494) (= (x5141 x4709) x3103) (= x1072 (x844 x3676 x1239 x4929 x3239 x5692 x4412 x5380 x395)) (= (x2124 (+ x4709 32)) x1195) (= (x2124 (+ 64 x4709)) x2946) (= x2103 (x5141 x1429)) (= x1353 (x3159 x3676 x3966)) (= x3419 (x2124 (+ 128 x4709))) (= (x2124 (+ x4709 32)) x1522) (= (x4159 x3676 x3428 x1108 x5491) x5056) (= (x2124 (+ x4709 32)) x4908) (= x4222 (x2124 (+ x4709 96))) (= x4540 (x3860 64 x84 (ite (= x3676 0) x4378 (ite (<= x3676 32) x1353 (ite (>= 64 x3676) x447 (ite (<= x3676 96) x5056 (ite (<= x3676 128) x4778 (ite (>= 160 x3676) x6 (ite (>= 192 x3676) x5336 (ite (>= 224 x3676) x1072 x586)))))))))) (= (x2124 (+ 160 x4709)) x5294) (= (x5141 x4709) x1239) (= (x5141 x3727) x4266) (= x2804 (x2124 (+ x4709 96))) (= x5506 (x5141 x216)) (= (x5141 x4709) x1859) (= x3727 (x2124 (+ 32 x4709))) (= (x5141 x3419) x4346) (= (x5141 x4222) x4690) (= x3160 (x5141 x2378)) (= (x5141 x1522) x1108) (= x771 (x2124 (+ 32 x5294))) (= (x3860 x3676 x1859 x4266) x447) (= x3954 (x2124 (+ x4709 64))) (= x3554 (x2124 (+ x4709 32)))) (and (=> (not x3566) x3313) (=> (and (and (= x3881 (x3820 x124)) (= x4920 (> x824 32))) x3566) (and (=> (and (and (= x4336 (x2124 (+ x124 32))) (= x2568 (x2124 (+ 32 x771))) (= x4661 (< 64 x824)) (= (x2535 x4336) x4363)) x4920) (and (=> (and (and (= x2560 (x1450 x5234)) (= x1959 (< 96 x824)) (= (x2124 (+ x771 64)) x5374) (= x5234 (x2124 (+ x124 64)))) x4661) (and (=> (not x1959) x3313) (=> x1959 x4007))) (=> (not x4661) x3313))) (=> (not x4920) x3313))))) x2468)) x1509))))
(assert (< 10000 (x2521 x1815 x5008 x3496 x4524 x1291)))
(assert (x847 x5223))
(assert (< 10000 (x2521 x5565 x4351 x393 x4551 x1586)))
(assert (= 0 (x25 310283853)))
(assert (= (and x1744 x4677) x3839))
(assert (x847 x5507))
(assert (= x5006 (x1122 (x4159 x4543 x5006 x4604 x1107))))
(assert (x847 x1396))
(assert (= (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805) (x25 (x3619 x1315 x1752 x5600 x2345 x5074 x1972 x3805))))
(assert (= (x1122 (x3860 x148 x5527 x2105)) x5527))
(assert (x847 x372))
(assert (x847 x578))
(assert (=> (>= 10000 x4053) (= (x25 x4053) 0)))
(assert (= (x25 (x4159 x2448 x4715 x220 x5051)) (x4159 x2448 x4715 x220 x5051)))
(assert (= (=> (and (= x4052 0) (= x1305 x2598) (= x3295 x3712) (= x5122 x355) (= x4422 x494) (= (+ 1 x5021) x4796) (= x2373 x3463) (= x775 x1499) (= x3831 x3123) (= x2120 (+ x5021 1)) (= x874 x3601) (= x4119 false) (= 2 x4819) (= x2491 true) (= x1370 x4150) (= x1348 x507) (= x1294 x2637) (= x558 x3372) (= x845 0)) x4891) x2861))
(assert (not (x2689 (x3619 x4348 x3245 x4567 x2407 x578 x4068 x2242))))
(assert (x3952 x2912))
(assert (x1411 x3169))
(assert (x847 x300))
(assert (= x2448 (x3376 (x3159 x2448 x620))))
(assert (x847 x3978))
(assert (x847 x4279))
(assert (not (x2689 (x3860 64 x3618 12))))
(assert (x847 x530))
(assert (= (=> (and (= x1928 (x2124 (+ 32 x1727))) (= x1727 (x2124 (+ 32 x1236))) (= x1908 (x959 (- x741 x4275))) (= x1563 (< 0 x4319)) (= x5330 (x2124 (+ x741 32))) (= x741 (x2124 (+ x4774 x2673))) (= x4319 (x2732 x3590)) (= x2673 (x210 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4527)) (= (x2124 (+ x4774 x4809)) x3763) (= (x2124 (+ x4809 31)) x4527)) (and (=> (not x1563) x2155) (=> (and x1563 (and (= x5005 (< 32 x4319)) (= (x2508 x2908) x4099))) (and (=> (and (and (= x5397 (x2124 (+ x5330 32))) (= x1739 (x5197 x3859)) (= (> x4319 64) x4668) (= (x2124 (+ x2908 32)) x3859)) x5005) (and (=> (not x4668) x2155) (=> (and x4668 (and (= x5348 (x2124 (+ x2908 64))) (= (x3729 x5348) x5691) (= x5252 (x2124 (+ x5330 64))) (= (> x4319 96) x1067))) (and (=> x1067 x1781) (=> (not x1067) x2155))))) (=> (not x5005) x2155))))) x1756))
(assert (x847 x4524))
(assert (= x148 (x3376 (x4159 x148 x3583 x2036 x834))))
(assert (> (x3860 64 x1370 4) 10000))
(assert (> (x3226 x432 x5646 x1826 x4314 x4147 x1743) 10000))
(assert (x847 x1096))
(assert (x847 x422))
(assert (x847 x4523))
(assert (= (x3376 (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045)) x5203))
(assert (= (x4693 (x3226 x2448 x2591 x4502 x308 x202 x4027)) x308))
(assert (= (x3226 x3432 x5408 x1023 x136 x5322 x2442) (x25 (x3226 x3432 x5408 x1023 x136 x5322 x2442))))
(assert (x367 x4527))
(assert (x847 x714))
(assert (x847 x665))
(assert (= x3391 (or x30 x3446)))
(assert (=> (>= 10000 x1618) (= (x25 x1618) 0)))
(assert (x847 x349))
(assert (x1411 x1426))
(assert (x847 x448))
(assert (x847 x2207))
(assert (x847 x5672))
(assert (x379 x4712 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x847 x4214))
(assert (x847 x3232))
(assert (= x5384 (and x971 x270)))
(assert (x847 x4995))
(assert (and (= 81 (x2779 9 9)) (= 81 (x2779 27 3)) (= 9 (x2779 3 3)) (= 27 (x2779 9 3))))
(assert (x847 x2021))
(assert (= x869 (x3573 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453))))
(assert (=> (>= 10000 x5617) (= (x25 x5617) 0)))
(assert (x847 x547))
(assert (= (or x2315 x2966 x4189) x2849))
(assert (not (x2689 (x3860 64 x2862 36))))
(assert (x847 x2167))
(assert (=> (>= 10000 x4652) (= (x25 x4652) 0)))
(assert (=> (>= 10000 x1828) (= 0 (x25 x1828))))
(assert (x847 x4317))
(assert (=> (>= 10000 x1199) (= 0 (x25 x1199))))
(assert (= (and (not x1676) x5131) x2316))
(assert (= (x1122 (x3226 x1893 x5516 x803 x152 x2107 x5455)) x5516))
(assert (=> (<= x5086 10000) (= (x25 x5086) 0)))
(assert (x847 x4098))
(assert (x847 x5411))
(assert (x847 x3460))
(assert (=> (<= x3489 10000) (= 0 (x25 x3489))))
(assert (x847 x4894))
(assert (=> (>= 10000 x988) (= (x25 x988) 0)))
(assert (x379 x3413 2))
(assert (x847 x117))
(assert (x847 x2503))
(assert (x847 x1689))
(assert (x847 x2427))
(assert (x1411 x2469))
(assert (= (or x5139 x2263) x4153))
(assert (= x3094 (not (and (= x3785 (x4120 x4268)) (= (+ x2483 1) x4508) (= x3141 (x5168 x2365)) (>= 252 x735) (= x5175 x2114) (= x3473 (x4120 x5672)) (< (+ x3473 x3288) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x1790 x3288) x5567) (= (x5168 x1027) x3288) (< (+ x5481 x3288) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x5481 x3288) x2114) (= x5537 (x3860 64 x4482 100)) (= x2767 (+ 1 x4482)) (= x1575 (+ 1 x2483)) (= (x945 x5672) x5481) (= (x3860 64 x735 36) x1027) (= (x3860 64 x2483 36) x2365) (>= x735 1) (= x4482 (+ 1 x735)) (= x1790 (x4120 x4268)) (= x45 (+ x735 1)) (<= x3288 x3785) (>= x2114 0) (<= x2114 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x4482 1) x2483) (= x346 (x2360 x5537))))))
(assert (> (x3860 64 x1818 10) 10000))
(assert (= (x3376 (x3860 64 x4162 1)) 64))
(assert (x847 x631))
(assert (x847 x3259))
(assert (= (x1122 (x3159 32 x2172)) x2172))
(assert (x847 x4266))
(assert (x2689 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x847 x894))
(assert (< (x844 x432 x3219 x5479 x3188 x1448 x4103 x1912 x3589) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x1205))
(assert (x847 x2728))
(assert (x379 x673 32))
(assert (= (x4985 (x844 x4221 x2997 x1638 x1919 x1229 x715 x477 x755)) x755))
(assert (x847 x202))
(assert (< (x3860 64 x1328 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x438 10000) (= (x25 x438) 0)))
(assert (=> (<= x5515 10000) (= (x25 x5515) 0)))
(assert (x847 x3298))
(assert (= (x1122 (x4159 x1893 x2039 x5409 x5649)) x2039))
(assert (x847 x846))
(assert (x847 x3281))
(assert (=> (<= x325 10000) (= (x25 x325) 0)))
(assert (< 10000 (x4159 x1903 x3509 x4605 x5499)))
(assert (= (x25 (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)) (x844 x4098 x1338 x2072 x1994 x1152 x2174 x1830 x2666)))
(assert (x847 x1883))
(assert (x847 x1968))
(assert (< 10000 (x3860 64 x365 100)))
(assert (x847 x2725))
(assert (x847 x2036))
(assert (x847 x2882))
(assert (x847 x5477))
(assert (x2689 89332125780766104441357105940599211734484755930370930871569612501041822040064))
(assert (= x3721 (and x3218 x3762)))
(assert (> (x3619 x4543 x5667 x3516 x1876 x3650 x360 x2745) 10000))
(assert (x847 x3831))
(assert (x847 x4318))
(assert (x847 x3345))
(assert (=> (<= x1883 10000) (= (x25 x1883) 0)))
(assert (= (x1122 (x4159 x5203 x372 x1776 x1213)) x372))
(assert (> (x3860 x3676 x1859 x4266) 10000))
(assert (not (x2689 (x4159 x4342 x5687 x2789 x2303))))
(assert (=> (>= 10000 x1243) (= 0 (x25 x1243))))
(assert (= (and x464 (not x4998)) x1137))
(assert (=> (>= 10000 x3545) (= 0 (x25 x3545))))
(assert (x1746 (+ x239 31) 32))
(assert (x847 x2595))
(assert (< (x3860 64 x1370 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x847 x3734))
(assert (x847 x5687))
(assert (x847 x3784))
(assert (x847 x5074))
(assert (= x4007 (=> (and (= x3792 (not (< 128 x824))) (= x1368 (x5276 x5555)) (= (x2124 (+ 96 x771)) x1550) (= (x2124 (+ 96 x124)) x5555)) (and x3313 x3792))))
(assert (= (x2143 (x3860 x4098 x1119 x1646)) x1646))
(assert (= x398 (x1122 (x844 x4348 x398 x3999 x2110 x325 x869 x206 x1453))))
(assert (= (=> (and (= (x3342 x3520) x2348) (= (not (> x1528 612)) x221)) (and x3086 x221)) x5195))
(assert (= (x2143 (x4159 x432 x3884 x1771 x1947)) x1771))
(assert (x379 x5683 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3619 x5203 x2563 x3193 x551 x159 x4918 x2045) 10000))
(assert (x847 x1234))
(check-sat)
(exit)
