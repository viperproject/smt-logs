(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x3017 () Bool)
(declare-fun x8091 () Int)
(declare-fun x5546 () Int)
(declare-fun x422 () Int)
(declare-fun x4100 () Int)
(declare-fun x7689 () Int)
(declare-fun x1213 () Int)
(declare-fun x704 () Bool)
(declare-fun x8213 () Int)
(declare-fun x5898 () Int)
(declare-fun x2854 () Int)
(declare-fun x6375 () Bool)
(declare-fun x364 () Int)
(declare-fun x5655 () Int)
(declare-fun x1569 () Bool)
(declare-fun x3028 () Int)
(declare-fun x2605 () Int)
(declare-fun x3126 (Int) Int)
(declare-fun x5875 () Bool)
(declare-fun x3584 () Int)
(declare-fun x2160 (Int) Int)
(declare-fun x7227 () Bool)
(declare-fun x5224 () Int)
(declare-fun x396 () Int)
(declare-fun x999 () Int)
(declare-fun x1316 () Bool)
(declare-fun x7879 () Bool)
(declare-fun x5555 () Int)
(declare-fun x3144 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x562 () Bool)
(declare-fun x5566 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1102 () Int)
(declare-fun x1321 () Bool)
(declare-fun x3128 () Bool)
(declare-fun x6726 () Int)
(declare-fun x266 () Int)
(declare-fun x4346 () Int)
(declare-fun x4439 (Int) Int)
(declare-fun x7944 () Bool)
(declare-fun x7315 () Bool)
(declare-fun x5001 () Int)
(declare-fun x8567 () Bool)
(declare-fun x2350 () Int)
(declare-fun x3111 () Int)
(declare-fun x4303 () Int)
(declare-fun x7860 () Bool)
(declare-fun x4747 () Bool)
(declare-fun x6755 () Bool)
(declare-fun x3809 () Int)
(declare-fun x412 () Int)
(declare-fun x3578 () Int)
(declare-fun x691 () Bool)
(declare-fun x4577 () Int)
(declare-fun x1464 () Bool)
(declare-fun x3604 () Int)
(declare-fun x2755 () Int)
(declare-fun x5624 () Int)
(declare-fun x3831 (Int) Int)
(declare-fun x7813 () Int)
(declare-fun x6008 () Int)
(declare-fun x6531 () Bool)
(declare-fun x860 () Int)
(declare-fun x669 () Bool)
(declare-fun x557 () Bool)
(declare-fun x4184 () Int)
(declare-fun x2766 () Bool)
(declare-fun x4401 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x7136 () Bool)
(declare-fun x344 () Int)
(declare-fun x3686 () Bool)
(declare-fun x5175 () Int)
(declare-fun x6233 () Bool)
(declare-fun x87 () Int)
(declare-fun x8270 () Int)
(declare-fun x2480 () Bool)
(declare-fun x2576 () Bool)
(declare-fun x2866 () Int)
(declare-fun x1038 () Int)
(declare-fun x6805 () Bool)
(declare-fun x5952 () Int)
(declare-fun x5696 () Bool)
(declare-fun x7955 () Bool)
(declare-fun x8456 () Bool)
(declare-fun x5364 () Int)
(declare-fun x3778 () Bool)
(declare-fun x6308 () Int)
(declare-fun x3930 () Int)
(declare-fun x6876 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x4867 () Int)
(declare-fun x1396 () Int)
(declare-fun x6576 () Int)
(declare-fun x58 () Bool)
(declare-fun x753 () Bool)
(declare-fun x8506 () Bool)
(declare-fun x7784 () Int)
(declare-fun x2181 () Int)
(declare-fun x3455 () Int)
(declare-fun x8116 () Int)
(declare-fun x5112 () Bool)
(declare-fun x5632 () Bool)
(declare-fun x5362 () Int)
(declare-fun x4236 () Bool)
(declare-fun x5158 () Int)
(declare-fun x4384 () Bool)
(declare-fun x6416 () Bool)
(declare-fun x6223 () Bool)
(declare-fun x7369 () Int)
(declare-fun x3635 () Bool)
(declare-fun x5330 () Int)
(declare-fun x3003 () Int)
(declare-fun x4461 () Int)
(declare-fun x1000 () Bool)
(declare-fun x706 () Int)
(declare-fun x5029 () Bool)
(declare-fun x5184 () Bool)
(declare-fun x3120 () Bool)
(declare-fun x8336 () Bool)
(declare-fun x5959 () Bool)
(declare-fun x5026 () Int)
(declare-fun x366 () Int)
(declare-fun x3878 () Int)
(declare-fun x8597 () Int)
(declare-fun x876 () Int)
(declare-fun x5930 () Int)
(declare-fun x1730 () Int)
(declare-fun x7434 () Bool)
(declare-fun x4087 () Int)
(declare-fun x4657 () Bool)
(declare-fun x6336 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x6291 () Int)
(declare-fun x3291 () Int)
(declare-fun x4201 () Int)
(declare-fun x5969 () Int)
(declare-fun x3208 () Bool)
(declare-fun x2940 () Int)
(declare-fun x6104 () Int)
(declare-fun x3443 () Bool)
(declare-fun x5054 () Int)
(declare-fun x6995 () Int)
(declare-fun x2063 (Int) Int)
(declare-fun x548 () Int)
(declare-fun x7517 () Int)
(declare-fun x3197 () Int)
(declare-fun x8279 () Bool)
(declare-fun x4693 () Int)
(declare-fun x7155 () Int)
(declare-fun x4379 () Bool)
(declare-fun x6998 () Int)
(declare-fun x4415 () Int)
(declare-fun x4418 () Bool)
(declare-fun x6238 () Int)
(declare-fun x4375 (Int Int) Int)
(declare-fun x335 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x3290 () Bool)
(declare-fun x4363 () Int)
(declare-fun x4317 () Int)
(declare-fun x7070 () Int)
(declare-fun x3184 () Bool)
(declare-fun x1315 () Int)
(declare-fun x287 () Bool)
(declare-fun x4170 () Int)
(declare-fun x4150 () Int)
(declare-fun x5343 () Int)
(declare-fun x1798 () Bool)
(declare-fun x5931 () Int)
(declare-fun x7657 () Int)
(declare-fun x7181 () Bool)
(declare-fun x1933 () Int)
(declare-fun x5855 () Int)
(declare-fun x4428 () Int)
(declare-fun x4544 () Bool)
(declare-fun x6903 () Int)
(declare-fun x8466 () Bool)
(declare-fun x6890 () Int)
(declare-fun x687 () Bool)
(declare-fun x3428 () Bool)
(declare-fun x6570 () Bool)
(declare-fun x6852 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x2932 () Int)
(declare-fun x1630 () Int)
(declare-fun x7187 () Bool)
(declare-fun x6084 () Bool)
(declare-fun x6763 () Bool)
(declare-fun x133 () Bool)
(declare-fun x4215 () Bool)
(declare-fun x1941 () Int)
(declare-fun x4062 () Int)
(declare-fun x522 () Int)
(declare-fun x6305 () Int)
(declare-fun x4168 () Bool)
(declare-fun x5578 () Bool)
(declare-fun x700 () Bool)
(declare-fun x873 () Int)
(declare-fun x8492 () Int)
(declare-fun x3389 () Int)
(declare-fun x993 () Bool)
(declare-fun x4826 () Int)
(declare-fun x2232 () Int)
(declare-fun x5454 () Int)
(declare-fun x5480 () Int)
(declare-fun x2644 () Int)
(declare-fun x4999 () Int)
(declare-fun x1858 () Int)
(declare-fun x6643 () Int)
(declare-fun x2078 () Int)
(declare-fun x5702 () Bool)
(declare-fun x5285 () Bool)
(declare-fun x5223 () Bool)
(declare-fun x3964 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x4779 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x176 () Int)
(declare-fun x7499 () Bool)
(declare-fun x3558 () Bool)
(declare-fun x4737 () Int)
(declare-fun x3374 () Int)
(declare-fun x1193 () Int)
(declare-fun x114 () Bool)
(declare-fun x2368 () Bool)
(declare-fun x6839 () Bool)
(declare-fun x798 () Bool)
(declare-fun x719 () Bool)
(declare-fun x4425 () Int)
(declare-fun x4772 () Int)
(declare-fun x8469 () Int)
(declare-fun x5233 () Int)
(declare-fun x605 () Int)
(declare-fun x769 () Int)
(declare-fun x4490 () Bool)
(declare-fun x1724 () Int)
(declare-fun x2682 () Bool)
(declare-fun x1458 () Int)
(declare-fun x6085 () Int)
(declare-fun x2157 () Int)
(declare-fun x6098 () Bool)
(declare-fun x6198 () Int)
(declare-fun x3683 (Int) Int)
(declare-fun x1511 () Bool)
(declare-fun x154 () Bool)
(declare-fun x4895 () Bool)
(declare-fun x7266 () Bool)
(declare-fun x6736 () Bool)
(declare-fun x986 (Int) Int)
(declare-fun x2596 () Int)
(declare-fun x6044 () Int)
(declare-fun x2674 () Bool)
(declare-fun x3143 () Bool)
(declare-fun x3098 () Int)
(declare-fun x5794 () Int)
(declare-fun x1205 () Bool)
(declare-fun x8515 () Bool)
(declare-fun x6933 () Int)
(declare-fun x5392 () Int)
(declare-fun x3465 () Int)
(declare-fun x5127 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x4743 () Int)
(declare-fun x4760 () Bool)
(declare-fun x3469 () Int)
(declare-fun x4163 () Int)
(declare-fun x39 () Int)
(declare-fun x2492 () Int)
(declare-fun x8212 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x942 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x46 () Int)
(declare-fun x3462 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x8174 () Bool)
(declare-fun x4119 () Int)
(declare-fun x6689 () Bool)
(declare-fun x7654 () Int)
(declare-fun x7539 () Int)
(declare-fun x2801 () Bool)
(declare-fun x3151 () Bool)
(declare-fun x6513 () Int)
(declare-fun x7831 () Int)
(declare-fun x852 () Int)
(declare-fun x4350 () Int)
(declare-fun x5169 () Bool)
(declare-fun x8309 () Int)
(declare-fun x6815 () Int)
(declare-fun x7371 () Int)
(declare-fun x6797 () Int)
(declare-fun x5719 () Bool)
(declare-fun x183 () Int)
(declare-fun x1655 () Bool)
(declare-fun x6665 () Int)
(declare-fun x3478 () Int)
(declare-fun x1115 () Int)
(declare-fun x101 () Bool)
(declare-fun x6258 () Bool)
(declare-fun x219 () Int)
(declare-fun x6594 () Int)
(declare-fun x8004 () Int)
(declare-fun x5648 (Int) Int)
(declare-fun x3019 () Bool)
(declare-fun x7334 () Int)
(declare-fun x5312 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x531 () Bool)
(declare-fun x3544 () Int)
(declare-fun x4392 () Int)
(declare-fun x2731 () Bool)
(declare-fun x2344 () Int)
(declare-fun x368 () Bool)
(declare-fun x4663 () Int)
(declare-fun x4768 () Int)
(declare-fun x6936 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x4684 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x6562 () Bool)
(declare-fun x3009 () Int)
(declare-fun x453 () Bool)
(declare-fun x3375 () Bool)
(declare-fun x7674 () Bool)
(declare-fun x6672 () Bool)
(declare-fun x408 () Int)
(declare-fun x3159 () Bool)
(declare-fun x4645 () Int)
(declare-fun x2591 () Bool)
(declare-fun x2803 () Bool)
(declare-fun x8325 () Int)
(declare-fun x3796 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1642 () Int)
(declare-fun x5964 () Bool)
(declare-fun x4704 (Int) Int)
(declare-fun x6052 () Int)
(declare-fun x1250 () Int)
(declare-fun x7572 () Int)
(declare-fun x3212 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x5241 () Int)
(declare-fun x1291 () Bool)
(declare-fun x4948 () Int)
(declare-fun x1434 () Int)
(declare-fun x3456 () Int)
(declare-fun x4041 () Int)
(declare-fun x1939 () Bool)
(declare-fun x8235 () Bool)
(declare-fun x5277 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x5518 () Int)
(declare-fun x5974 () Int)
(declare-fun x8007 () Bool)
(declare-fun x5027 () Bool)
(declare-fun x3840 () Bool)
(declare-fun x598 () Int)
(declare-fun x797 () Bool)
(declare-fun x3876 () Bool)
(declare-fun x5062 () Int)
(declare-fun x862 () Int)
(declare-fun x7621 () Bool)
(declare-fun x1540 () Int)
(declare-fun x3129 () Int)
(declare-fun x6879 () Int)
(declare-fun x7477 () Bool)
(declare-fun x7728 () Int)
(declare-fun x2483 () Bool)
(declare-fun x7325 () Int)
(declare-fun x91 () Bool)
(declare-fun x29 () Int)
(declare-fun x6934 () Bool)
(declare-fun x5473 () Bool)
(declare-fun x3150 () Int)
(declare-fun x6163 () Bool)
(declare-fun x7243 () Int)
(declare-fun x5284 () Bool)
(declare-fun x6766 () Bool)
(declare-fun x3155 () Int)
(declare-fun x5874 () Int)
(declare-fun x2332 () Int)
(declare-fun x2610 () Bool)
(declare-fun x1715 () Int)
(declare-fun x8584 () Bool)
(declare-fun x2491 () Int)
(declare-fun x8547 () Bool)
(declare-fun x573 () Bool)
(declare-fun x4623 () Bool)
(declare-fun x1461 () Int)
(declare-fun x6758 () Int)
(declare-fun x6080 () Int)
(declare-fun x2979 () Int)
(declare-fun x7258 () Int)
(declare-fun x8061 () Int)
(declare-fun x6434 () Int)
(declare-fun x2440 () Int)
(declare-fun x5557 () Int)
(declare-fun x5250 () Int)
(declare-fun x3090 () Bool)
(declare-fun x401 () Bool)
(declare-fun x2729 (Int) Int)
(declare-fun x4463 (Int Int Int Int) Int)
(declare-fun x4877 () Bool)
(declare-fun x3148 () Int)
(declare-fun x819 () Bool)
(declare-fun x157 () Int)
(declare-fun x6286 () Bool)
(declare-fun x830 () Int)
(declare-fun x4243 () Int)
(declare-fun x4859 () Bool)
(declare-fun x7808 () Bool)
(declare-fun x3433 () Bool)
(declare-fun x5407 () Int)
(declare-fun x4242 (Int) Int)
(declare-fun x6581 () Int)
(declare-fun x5242 () Int)
(declare-fun x6402 () Int)
(declare-fun x4076 () Int)
(declare-fun x737 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x3123 () Bool)
(declare-fun x5070 () Bool)
(declare-fun x8391 () Bool)
(declare-fun x3309 () Bool)
(declare-fun x8518 () Int)
(declare-fun x5042 () Bool)
(declare-fun x6005 () Int)
(declare-fun x8242 () Int)
(declare-fun x2513 () Int)
(declare-fun x3437 () Bool)
(declare-fun x5440 () Bool)
(declare-fun x938 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x3370 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x4084 () Int)
(declare-fun x3310 () Bool)
(declare-fun x283 () Bool)
(declare-fun x7772 () Int)
(declare-fun x5058 () Int)
(declare-fun x3962 () Bool)
(declare-fun x3313 () Int)
(declare-fun x8105 () Bool)
(declare-fun x4191 () Bool)
(declare-fun x8522 () Bool)
(declare-fun x2359 () Int)
(declare-fun x6103 () Bool)
(declare-fun x7053 () Int)
(declare-fun x4987 () Bool)
(declare-fun x1602 () Int)
(declare-fun x4795 () Int)
(declare-fun x7261 () Int)
(declare-fun x7533 () Bool)
(declare-fun x3005 () Bool)
(declare-fun x6331 () Int)
(declare-fun x4359 () Int)
(declare-fun x5051 () Int)
(declare-fun x6070 () Int)
(declare-fun x3477 () Bool)
(declare-fun x3917 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x1409 () Int)
(declare-fun x5326 () Int)
(declare-fun x2318 () Int)
(declare-fun x889 () Bool)
(declare-fun x5452 () Int)
(declare-fun x5766 () Bool)
(declare-fun x2967 () Bool)
(declare-fun x1555 () Int)
(declare-fun x5639 () Int)
(declare-fun x5542 () Int)
(declare-fun x7599 () Int)
(declare-fun x2428 () Int)
(declare-fun x6343 () Int)
(declare-fun x3020 () Int)
(declare-fun x767 () Int)
(declare-fun x7888 () Int)
(declare-fun x4756 () Int)
(declare-fun x5249 () Bool)
(declare-fun x233 () Int)
(declare-fun x4755 () Bool)
(declare-fun x4610 () Bool)
(declare-fun x843 () Bool)
(declare-fun x4983 () Bool)
(declare-fun x2753 () Int)
(declare-fun x5838 () Int)
(declare-fun x485 () Bool)
(declare-fun x351 () Bool)
(declare-fun x4784 () Int)
(declare-fun x6669 () Int)
(declare-fun x7417 () Int)
(declare-fun x3842 () Bool)
(declare-fun x1313 () Int)
(declare-fun x7174 () Bool)
(declare-fun x6727 () Int)
(declare-fun x6313 () Int)
(declare-fun x783 () Bool)
(declare-fun x6521 () Int)
(declare-fun x5305 () Bool)
(declare-fun x6142 () Int)
(declare-fun x7974 () Bool)
(declare-fun x3321 () Int)
(declare-fun x7320 () Bool)
(declare-fun x5817 () Bool)
(declare-fun x4190 () Bool)
(declare-fun x4148 () Int)
(declare-fun x7385 () Int)
(declare-fun x7492 () Bool)
(declare-fun x6314 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x2565 () Int)
(declare-fun x7788 () Int)
(declare-fun x5968 () Int)
(declare-fun x3279 () Int)
(declare-fun x5656 () Int)
(declare-fun x1624 () Int)
(declare-fun x172 () Int)
(declare-fun x4951 () Bool)
(declare-fun x815 () Int)
(declare-fun x4741 () Int)
(declare-fun x4078 () Bool)
(declare-fun x7977 () Int)
(declare-fun x2835 () Int)
(declare-fun x4032 () Int)
(declare-fun x2311 () Int)
(declare-fun x3502 () Int)
(declare-fun x262 () Bool)
(declare-fun x4114 () Int)
(declare-fun x4274 () Bool)
(declare-fun x4742 () Int)
(declare-fun x2174 () Bool)
(declare-fun x5288 () Bool)
(declare-fun x4614 () Int)
(declare-fun x2018 () Int)
(declare-fun x8329 () Bool)
(declare-fun x507 () Int)
(declare-fun x7347 () Int)
(declare-fun x4146 () Bool)
(declare-fun x2197 () Int)
(declare-fun x2200 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x231 () Int)
(declare-fun x3496 () Int)
(declare-fun x1975 () Int)
(declare-fun x5472 () Int)
(declare-fun x6045 () Bool)
(declare-fun x2477 () Int)
(declare-fun x3787 () Bool)
(declare-fun x5471 () Bool)
(declare-fun x6564 () Bool)
(declare-fun x6424 () Int)
(declare-fun x7560 () Bool)
(declare-fun x5957 () Bool)
(declare-fun x7763 () Bool)
(declare-fun x6583 () Int)
(declare-fun x5933 () Int)
(declare-fun x5041 () Int)
(declare-fun x3409 () Int)
(declare-fun x6486 () Bool)
(declare-fun x1479 () Int)
(declare-fun x2719 () Int)
(declare-fun x1548 () Int)
(declare-fun x7054 () Bool)
(declare-fun x4550 () Bool)
(declare-fun x7985 () Int)
(declare-fun x526 () Int)
(declare-fun x7031 () Bool)
(declare-fun x4337 () Int)
(declare-fun x551 () Int)
(declare-fun x8553 () Int)
(declare-fun x6487 () Bool)
(declare-fun x7224 () Bool)
(declare-fun x5464 () Int)
(declare-fun x556 () Bool)
(declare-fun x3789 () Bool)
(declare-fun x3555 () Bool)
(declare-fun x5359 () Int)
(declare-fun x305 () Bool)
(declare-fun x5092 () Int)
(declare-fun x1869 () Int)
(declare-fun x6380 () Bool)
(declare-fun x7172 () Bool)
(declare-fun x33 () Bool)
(declare-fun x8178 () Int)
(declare-fun x7675 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x7542 () Int)
(declare-fun x1833 () Bool)
(declare-fun x107 () Int)
(declare-fun x65 () Bool)
(declare-fun x5267 () Bool)
(declare-fun x6002 () Int)
(declare-fun x1558 () Bool)
(declare-fun x8078 () Int)
(declare-fun x2050 () Bool)
(declare-fun x4646 () Bool)
(declare-fun x964 () Bool)
(declare-fun x4214 () Int)
(declare-fun x5878 () Int)
(declare-fun x558 () Int)
(declare-fun x8542 () Bool)
(declare-fun x5483 () Int)
(declare-fun x4783 () Bool)
(declare-fun x2124 () Int)
(declare-fun x7832 () Bool)
(declare-fun x1019 () Int)
(declare-fun x1241 () Bool)
(declare-fun x7734 () Int)
(declare-fun x3319 () Int)
(declare-fun x946 () Int)
(declare-fun x3109 () Int)
(declare-fun x1180 () Int)
(declare-fun x5617 () Int)
(declare-fun x8187 () Int)
(declare-fun x465 () Int)
(declare-fun x3576 () Int)
(declare-fun x2136 () Int)
(declare-fun x6064 () Bool)
(declare-fun x268 () Bool)
(declare-fun x7666 () Int)
(declare-fun x979 () Int)
(declare-fun x5923 () Int)
(declare-fun x5176 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x1985 () Int)
(declare-fun x3620 () Int)
(declare-fun x5544 () Bool)
(declare-fun x6061 () Int)
(declare-fun x7681 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x6785 () Int)
(declare-fun x1850 () Int)
(declare-fun x6745 () Int)
(declare-fun x4626 () Int)
(declare-fun x683 () Int)
(declare-fun x2192 () Bool)
(declare-fun x1455 () Int)
(declare-fun x734 () Bool)
(declare-fun x3588 () Int)
(declare-fun x7950 () Int)
(declare-fun x5404 () Int)
(declare-fun x1453 () Int)
(declare-fun x1901 () Int)
(declare-fun x6466 () Int)
(declare-fun x707 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x5474 () Bool)
(declare-fun x3529 () Int)
(declare-fun x5946 () Bool)
(declare-fun x8089 () Int)
(declare-fun x1902 () Int)
(declare-fun x5046 () Int)
(declare-fun x6194 () Int)
(declare-fun x899 () Int)
(declare-fun x2985 () Bool)
(declare-fun x8342 () Bool)
(declare-fun x5039 () Bool)
(declare-fun x6246 () Int)
(declare-fun x1870 () Int)
(declare-fun x4370 () Int)
(declare-fun x3929 () Int)
(declare-fun x3522 () Int)
(declare-fun x629 () Bool)
(declare-fun x927 () Int)
(declare-fun x5613 () Bool)
(declare-fun x371 () Bool)
(declare-fun x2828 () Int)
(declare-fun x5854 () Bool)
(declare-fun x306 () Int)
(declare-fun x2183 () Int)
(declare-fun x8559 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x8128 () Bool)
(declare-fun x4430 () Int)
(declare-fun x5279 () Bool)
(declare-fun x8016 () Int)
(declare-fun x3793 () Int)
(declare-fun x1402 () Int)
(declare-fun x8109 () Int)
(declare-fun x6626 () Int)
(declare-fun x6152 () Int)
(declare-fun x2627 () Bool)
(declare-fun x4971 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x1042 () Int)
(declare-fun x6334 () Bool)
(declare-fun x6208 () Int)
(declare-fun x6909 () Bool)
(declare-fun x7807 () Bool)
(declare-fun x4750 () Bool)
(declare-fun x7376 () Bool)
(declare-fun x645 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x3892 () Int)
(declare-fun x7638 () Int)
(declare-fun x2441 () Bool)
(declare-fun x6492 () Int)
(declare-fun x5383 () Bool)
(declare-fun x7006 () Bool)
(declare-fun x2549 () Int)
(declare-fun x2390 () Int)
(declare-fun x4831 () Int)
(declare-fun x1082 () Bool)
(declare-fun x6266 () Int)
(declare-fun x855 () Bool)
(declare-fun x1904 () Int)
(declare-fun x1376 () Int)
(declare-fun x4440 () Bool)
(declare-fun x882 () Int)
(declare-fun x2172 () Int)
(declare-fun x6497 () Int)
(declare-fun x1086 () Int)
(declare-fun x2519 () Bool)
(declare-fun x4927 () Int)
(declare-fun x7067 () Bool)
(declare-fun x7554 () Int)
(declare-fun x4851 () Bool)
(declare-fun x5052 () Int)
(declare-fun x7723 () Bool)
(declare-fun x806 () Bool)
(declare-fun x7397 () Int)
(declare-fun x1288 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x6479 () Bool)
(declare-fun x7185 () Int)
(declare-fun x260 () Bool)
(declare-fun x1760 () Int)
(declare-fun x6850 () Bool)
(declare-fun x4673 () Int)
(declare-fun x4156 () Int)
(declare-fun x7036 () Bool)
(declare-fun x6617 () Bool)
(declare-fun x3941 () Int)
(declare-fun x7914 () Bool)
(declare-fun x5255 () Bool)
(declare-fun x6548 () Bool)
(declare-fun x4448 () Int)
(declare-fun x6412 () Bool)
(declare-fun x2807 () Bool)
(declare-fun x4962 () Int)
(declare-fun x7777 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x7819 () Bool)
(declare-fun x3288 () Int)
(declare-fun x4011 () Bool)
(declare-fun x5821 () Bool)
(declare-fun x1152 () Int)
(declare-fun x1090 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x4019 () Int)
(declare-fun x2326 () Int)
(declare-fun x3040 () Bool)
(declare-fun x7673 () Bool)
(declare-fun x2545 () Int)
(declare-fun x1287 () Bool)
(declare-fun x8345 () Bool)
(declare-fun x6808 () Bool)
(declare-fun x6501 () Bool)
(declare-fun x5436 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x7824 () Bool)
(declare-fun x3652 () Bool)
(declare-fun x85 () Bool)
(declare-fun x7928 () Int)
(declare-fun x6724 () Bool)
(declare-fun x2618 () Int)
(declare-fun x3358 () Bool)
(declare-fun x1407 () Int)
(declare-fun x5354 () Int)
(declare-fun x7902 () Bool)
(declare-fun x8173 () Int)
(declare-fun x5700 () Int)
(declare-fun x2989 () Bool)
(declare-fun x5636 () Int)
(declare-fun x8523 () Bool)
(declare-fun x3936 () Bool)
(declare-fun x8335 () Bool)
(declare-fun x4234 () Int)
(declare-fun x40 () Int)
(declare-fun x5067 () Bool)
(declare-fun x3984 () Int)
(declare-fun x8349 () Int)
(declare-fun x2257 () Int)
(declare-fun x7078 () Bool)
(declare-fun x5381 () Int)
(declare-fun x7803 () Bool)
(declare-fun x6054 () Bool)
(declare-fun x5107 () Int)
(declare-fun x2784 () Int)
(declare-fun x365 () Bool)
(declare-fun x4128 () Bool)
(declare-fun x160 () Bool)
(declare-fun x2856 () Bool)
(declare-fun x3471 () Int)
(declare-fun x7861 () Bool)
(declare-fun x893 () Int)
(declare-fun x5486 () Int)
(declare-fun x5652 () Int)
(declare-fun x1950 () Int)
(declare-fun x7776 () Bool)
(declare-fun x1587 () Int)
(declare-fun x6580 () Int)
(declare-fun x1143 () Int)
(declare-fun x5309 () Bool)
(declare-fun x7722 () Int)
(declare-fun x2948 () Int)
(declare-fun x5212 () Bool)
(declare-fun x7344 () Bool)
(declare-fun x6114 () Int)
(declare-fun x1823 () Int)
(declare-fun x5623 () Int)
(declare-fun x7949 () Int)
(declare-fun x4759 () Int)
(declare-fun x2072 () Bool)
(declare-fun x4553 () Bool)
(declare-fun x2235 () Int)
(declare-fun x3415 () Int)
(declare-fun x4130 () Bool)
(declare-fun x3864 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x8168 () Bool)
(declare-fun x3411 () Int)
(declare-fun x3681 () Int)
(declare-fun x8222 () Int)
(declare-fun x1842 () Int)
(declare-fun x2561 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x4724 () Int)
(declare-fun x1709 () Bool)
(declare-fun x7526 () Int)
(declare-fun x1659 () Int)
(declare-fun x1050 () Int)
(declare-fun x5206 () Bool)
(declare-fun x2481 () Bool)
(declare-fun x6714 () Int)
(declare-fun x6051 () Bool)
(declare-fun x8254 () Bool)
(declare-fun x137 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x1795 () Bool)
(declare-fun x6096 () Int)
(declare-fun x346 () Int)
(declare-fun x7943 () Bool)
(declare-fun x6225 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x2367 () Bool)
(declare-fun x7034 () Bool)
(declare-fun x4499 () Int)
(declare-fun x7970 () Int)
(declare-fun x671 () Bool)
(declare-fun x884 () Int)
(declare-fun x2962 () Bool)
(declare-fun x7341 () Int)
(declare-fun x3594 () Int)
(declare-fun x3083 () Int)
(declare-fun x6951 () Bool)
(declare-fun x462 () Int)
(declare-fun x2133 () Int)
(declare-fun x4449 () Int)
(declare-fun x8526 () Int)
(declare-fun x5510 () Bool)
(declare-fun x1169 (Int) Int)
(declare-fun x6235 () Bool)
(declare-fun x1378 () Int)
(declare-fun x4679 () Bool)
(declare-fun x3163 () Int)
(declare-fun x7652 () Int)
(declare-fun x5569 () Bool)
(declare-fun x5213 () Int)
(declare-fun x4541 () Bool)
(declare-fun x3161 () Bool)
(declare-fun x4483 () Int)
(declare-fun x2226 () Int)
(declare-fun x1350 () Int)
(declare-fun x5475 () Int)
(declare-fun x5460 () Bool)
(declare-fun x1848 () Int)
(declare-fun x2597 () Int)
(declare-fun x7270 () Int)
(declare-fun x1538 () Int)
(declare-fun x6870 () Int)
(declare-fun x2664 () Bool)
(declare-fun x5182 () Int)
(declare-fun x6924 () Int)
(declare-fun x8271 () Bool)
(declare-fun x2040 () Int)
(declare-fun x5728 () Bool)
(declare-fun x8308 () Bool)
(declare-fun x6451 () Int)
(declare-fun x6155 () Int)
(declare-fun x560 () Int)
(declare-fun x234 () Int)
(declare-fun x7192 () Int)
(declare-fun x4757 () Int)
(declare-fun x8225 () Bool)
(declare-fun x4467 () Int)
(declare-fun x5784 () Bool)
(declare-fun x3219 () Int)
(declare-fun x4637 () Bool)
(declare-fun x7321 () Int)
(declare-fun x8281 () Int)
(declare-fun x4431 () Bool)
(declare-fun x3185 () Int)
(declare-fun x3199 () Bool)
(declare-fun x6281 () Bool)
(declare-fun x4395 () Int)
(declare-fun x5508 () Int)
(declare-fun x3097 () Int)
(declare-fun x2524 () Int)
(declare-fun x7017 () Int)
(declare-fun x451 () Bool)
(declare-fun x520 () Bool)
(declare-fun x3349 () Int)
(declare-fun x8401 () Int)
(declare-fun x6812 () Int)
(declare-fun x6904 () Int)
(declare-fun x3289 () Int)
(declare-fun x4817 () Int)
(declare-fun x1821 () Int)
(declare-fun x1794 () Int)
(declare-fun x4139 () Int)
(declare-fun x1491 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x6849 () Int)
(declare-fun x1147 () Bool)
(declare-fun x458 () Int)
(declare-fun x4135 () Int)
(declare-fun x6743 () Bool)
(declare-fun x3671 () Int)
(declare-fun x5993 () Bool)
(declare-fun x8458 () Bool)
(declare-fun x6494 () Bool)
(declare-fun x5491 () Int)
(declare-fun x3495 () Int)
(declare-fun x164 () Bool)
(declare-fun x2992 () Bool)
(declare-fun x1004 () Int)
(declare-fun x2219 () Bool)
(declare-fun x5082 () Int)
(declare-fun x7956 () Bool)
(declare-fun x4770 (Int) Int)
(declare-fun x4237 () Int)
(declare-fun x1226 () Bool)
(declare-fun x7971 () Int)
(declare-fun x6477 () Bool)
(declare-fun x437 () Int)
(declare-fun x96 () Int)
(declare-fun x2527 () Int)
(declare-fun x1929 () Bool)
(declare-fun x4311 () Int)
(declare-fun x7576 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x2443 () Bool)
(declare-fun x4910 () Int)
(declare-fun x1508 () Bool)
(declare-fun x6376 (Int) Int)
(declare-fun x8028 () Int)
(declare-fun x7042 () Int)
(declare-fun x5011 () Bool)
(declare-fun x3035 () Int)
(declare-fun x7635 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x3181 () Int)
(declare-fun x4029 () Bool)
(declare-fun x7018 () Bool)
(declare-fun x3244 () Bool)
(declare-fun x3367 () Int)
(declare-fun x1546 () Int)
(declare-fun x3354 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x1849 () Int)
(declare-fun x1698 () Int)
(declare-fun x2739 () Int)
(declare-fun x7856 () Int)
(declare-fun x2551 () Int)
(declare-fun x7332 () Int)
(declare-fun x1515 () Bool)
(declare-fun x1290 () Int)
(declare-fun x7440 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x3682 () Int)
(declare-fun x8585 () Int)
(declare-fun x3177 () Bool)
(declare-fun x1632 () Int)
(declare-fun x6032 () Bool)
(declare-fun x6013 () Bool)
(declare-fun x6130 () Int)
(declare-fun x1857 () Int)
(declare-fun x7228 () Bool)
(declare-fun x7917 () Int)
(declare-fun x7992 () Bool)
(declare-fun x3439 () Int)
(declare-fun x4639 () Int)
(declare-fun x131 () Int)
(declare-fun x846 () Bool)
(declare-fun x2357 () Int)
(declare-fun x6606 () Bool)
(declare-fun x7394 () Bool)
(declare-fun x7441 () Bool)
(declare-fun x4863 (Int Int Int Int Int Int) Int)
(declare-fun x7175 () Int)
(declare-fun x7645 () Int)
(declare-fun x4289 () Bool)
(declare-fun x4640 () Int)
(declare-fun x5087 () Bool)
(declare-fun x3153 () Bool)
(declare-fun x2104 () Int)
(declare-fun x6729 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x7677 () Bool)
(declare-fun x5370 () Bool)
(declare-fun x3759 () Bool)
(declare-fun x775 () Int)
(declare-fun x4383 () Bool)
(declare-fun x3187 () Int)
(declare-fun x2861 () Int)
(declare-fun x7980 () Int)
(declare-fun x2152 () Int)
(declare-fun x595 () Bool)
(declare-fun x565 () Int)
(declare-fun x8365 () Int)
(declare-fun x8454 () Int)
(declare-fun x6019 () Int)
(declare-fun x3692 () Int)
(declare-fun x3727 () Int)
(declare-fun x577 () Int)
(declare-fun x1229 () Int)
(declare-fun x612 () Int)
(declare-fun x6319 () Int)
(declare-fun x1474 () Int)
(declare-fun x7405 () Bool)
(declare-fun x5191 () Int)
(declare-fun x6425 () Int)
(declare-fun x3485 () Int)
(declare-fun x7328 () Int)
(declare-fun x146 () Int)
(declare-fun x6280 () Int)
(declare-fun x1650 () Int)
(declare-fun x8122 () Int)
(declare-fun x3368 () Int)
(declare-fun x5662 () Bool)
(declare-fun x8276 () Int)
(declare-fun x590 () Bool)
(declare-fun x890 () Int)
(declare-fun x666 () Bool)
(declare-fun x3011 () Int)
(declare-fun x6178 () Int)
(declare-fun x3607 () Int)
(declare-fun x5085 () Bool)
(declare-fun x7307 () Int)
(declare-fun x2130 () Int)
(declare-fun x7659 () Int)
(declare-fun x1606 () Bool)
(declare-fun x5816 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x3473 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x6538 () Int)
(declare-fun x3376 () Int)
(declare-fun x6997 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x1571 () Int)
(declare-fun x4844 () Bool)
(declare-fun x24 () Bool)
(declare-fun x7362 () Int)
(declare-fun x6092 () Int)
(declare-fun x4042 () Int)
(declare-fun x5245 () Bool)
(declare-fun x5225 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x7629 () Bool)
(declare-fun x2053 () Int)
(declare-fun x4145 () Int)
(declare-fun x3434 () Bool)
(declare-fun x3815 () Int)
(declare-fun x1069 () Int)
(declare-fun x8136 () Bool)
(declare-fun x7602 () Int)
(declare-fun x2919 () Int)
(declare-fun x7396 () Int)
(declare-fun x2446 () Int)
(declare-fun x129 () Int)
(declare-fun x6177 () Bool)
(declare-fun x5198 () Int)
(declare-fun x6437 () Bool)
(declare-fun x303 () Bool)
(declare-fun x3854 () Bool)
(declare-fun x6529 () Bool)
(declare-fun x322 () Int)
(declare-fun x961 () Bool)
(declare-fun x7483 () Int)
(declare-fun x1972 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x2832 () Int)
(declare-fun x3997 () Int)
(declare-fun x4964 () Int)
(declare-fun x2342 () Int)
(declare-fun x552 () Bool)
(declare-fun x5789 () Int)
(declare-fun x4940 () Bool)
(declare-fun x5302 () Int)
(declare-fun x6865 () Int)
(declare-fun x3442 () Bool)
(declare-fun x4806 () Int)
(declare-fun x5222 () Int)
(declare-fun x8264 (Int) Int)
(declare-fun x5094 () Int)
(declare-fun x2012 () Bool)
(declare-fun x6676 (Int) Int)
(declare-fun x720 () Int)
(declare-fun x2905 () Bool)
(declare-fun x2636 () Int)
(declare-fun x4284 () Bool)
(declare-fun x5020 () Bool)
(declare-fun x825 () Int)
(declare-fun x4478 () Int)
(declare-fun x8485 () Bool)
(declare-fun x4374 () Bool)
(declare-fun x2105 () Int)
(declare-fun x3537 () Bool)
(declare-fun x503 () Int)
(declare-fun x717 () Int)
(declare-fun x7725 () Int)
(declare-fun x4958 () Bool)
(declare-fun x308 () Int)
(declare-fun x5907 () Bool)
(declare-fun x4120 () Int)
(declare-fun x7999 () Int)
(declare-fun x2107 () Bool)
(declare-fun x4441 () Int)
(declare-fun x4719 () Bool)
(declare-fun x5849 () Bool)
(declare-fun x6224 () Int)
(declare-fun x6094 () Int)
(declare-fun x7336 () Int)
(declare-fun x7551 () Int)
(declare-fun x8023 () Bool)
(declare-fun x310 () Int)
(declare-fun x6124 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x3722 () Bool)
(declare-fun x439 () Bool)
(declare-fun x2829 () Int)
(declare-fun x4965 () Bool)
(declare-fun x6447 () Int)
(declare-fun x4063 () Bool)
(declare-fun x801 () Bool)
(declare-fun x5357 () Bool)
(declare-fun x4316 () Bool)
(declare-fun x6607 () Bool)
(declare-fun x5743 () Int)
(declare-fun x2373 () Int)
(declare-fun x2849 () Bool)
(declare-fun x4059 () Int)
(declare-fun x7885 () Int)
(declare-fun x3127 () Bool)
(declare-fun x3856 () Bool)
(declare-fun x2774 () Int)
(declare-fun x7918 () Int)
(declare-fun x2201 () Int)
(declare-fun x2761 () Int)
(declare-fun x7324 () Bool)
(declare-fun x778 () Int)
(declare-fun x4164 () Int)
(declare-fun x7340 () Bool)
(declare-fun x1018 () Int)
(declare-fun x6387 () Int)
(declare-fun x8221 () Bool)
(declare-fun x7984 () Int)
(declare-fun x1680 () Bool)
(declare-fun x4593 () Int)
(declare-fun x7592 () Int)
(declare-fun x6851 () Bool)
(declare-fun x6386 () Int)
(declare-fun x3857 () Int)
(declare-fun x1678 () Int)
(declare-fun x4005 () Bool)
(declare-fun x727 () Bool)
(declare-fun x8038 () Int)
(declare-fun x2334 () Int)
(declare-fun x1177 () Bool)
(declare-fun x3880 () Int)
(declare-fun x120 (Int) Int)
(declare-fun x6099 () Bool)
(declare-fun x594 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1480 () Int)
(declare-fun x471 () Int)
(declare-fun x6357 () Bool)
(declare-fun x6829 () Bool)
(declare-fun x1883 () Int)
(declare-fun x8285 () Int)
(declare-fun x1973 () Int)
(declare-fun x2290 () Bool)
(declare-fun x3451 () Int)
(declare-fun x2757 () Bool)
(declare-fun x933 () Bool)
(declare-fun x7196 () Bool)
(declare-fun x6066 () Int)
(declare-fun x4969 () Int)
(declare-fun x2379 () Bool)
(declare-fun x8352 () Bool)
(declare-fun x2221 () Int)
(declare-fun x2413 () Int)
(declare-fun x3751 () Int)
(declare-fun x6483 () Int)
(declare-fun x1187 () Int)
(declare-fun x3226 () Int)
(declare-fun x4108 () Int)
(declare-fun x1098 () Bool)
(declare-fun x7719 () Int)
(declare-fun x3743 () Int)
(declare-fun x2947 () Int)
(declare-fun x2511 () Bool)
(declare-fun x3230 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x3410 () Bool)
(declare-fun x5814 () Bool)
(declare-fun x5252 () Bool)
(declare-fun x1459 () Int)
(declare-fun x3986 () Int)
(declare-fun x136 () Int)
(declare-fun x492 () Int)
(declare-fun x823 () Int)
(declare-fun x5977 () Bool)
(declare-fun x2285 () Int)
(declare-fun x6206 () Bool)
(declare-fun x7967 () Bool)
(declare-fun x5602 () Bool)
(declare-fun x3574 () Bool)
(declare-fun x8073 () Bool)
(declare-fun x6988 () Int)
(declare-fun x4419 () Bool)
(declare-fun x2082 () Int)
(declare-fun x8 () Int)
(declare-fun x7400 () Int)
(declare-fun x509 () Bool)
(declare-fun x6326 () Bool)
(declare-fun x5097 () Bool)
(declare-fun x4731 () Int)
(declare-fun x5528 () Int)
(declare-fun x5185 () Int)
(declare-fun x3110 () Int)
(declare-fun x1591 () Bool)
(declare-fun x6302 () Int)
(declare-fun x5411 () Bool)
(declare-fun x212 () Int)
(declare-fun x8397 () Int)
(declare-fun x2631 () Int)
(declare-fun x4838 () Int)
(declare-fun x6017 () Int)
(declare-fun x5369 () Bool)
(declare-fun x3071 () Int)
(declare-fun x189 () Bool)
(declare-fun x3845 () Int)
(declare-fun x5177 () Bool)
(declare-fun x6905 () Int)
(declare-fun x5499 () Bool)
(declare-fun x569 (Int) Int)
(declare-fun x2818 () Int)
(declare-fun x7438 () Bool)
(declare-fun x4320 () Int)
(declare-fun x1022 () Int)
(declare-fun x3135 () Int)
(declare-fun x5708 () Int)
(declare-fun x3716 () Bool)
(declare-fun x4321 () Int)
(declare-fun x3330 () Bool)
(declare-fun x5115 () Int)
(declare-fun x3307 () Bool)
(declare-fun x4003 () Bool)
(declare-fun x7755 (Int) Int)
(declare-fun x3889 () Int)
(declare-fun x3593 () Bool)
(declare-fun x7823 () Int)
(declare-fun x7894 () Int)
(declare-fun x908 () Bool)
(declare-fun x4006 () Int)
(declare-fun x1208 () Int)
(declare-fun x3470 () Int)
(declare-fun x3921 () Bool)
(declare-fun x5032 () Int)
(declare-fun x1420 () Int)
(declare-fun x3480 () Int)
(declare-fun x6310 () Bool)
(declare-fun x8196 () Bool)
(declare-fun x8558 () Int)
(declare-fun x376 () Int)
(declare-fun x4357 () Bool)
(declare-fun x8528 () Int)
(declare-fun x1225 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x7199 () Int)
(declare-fun x975 () Int)
(declare-fun x2036 () Int)
(declare-fun x7672 () Int)
(declare-fun x5398 () Int)
(declare-fun x4808 (Int Int) Int)
(declare-fun x2193 () Int)
(declare-fun x5035 () Int)
(declare-fun x554 () Int)
(declare-fun x7282 () Int)
(declare-fun x839 () Int)
(declare-fun x5802 () Bool)
(declare-fun x5778 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x8569 (Int) Int)
(declare-fun x7581 () Bool)
(declare-fun x1797 () Int)
(declare-fun x5385 () Int)
(declare-fun x5240 () Bool)
(declare-fun x7530 () Int)
(declare-fun x5418 () Int)
(declare-fun x124 () Bool)
(declare-fun x597 (Int) Int)
(declare-fun x4947 (Int) Int)
(declare-fun x5425 () Int)
(declare-fun x2398 () Int)
(declare-fun x5466 () Int)
(declare-fun x2747 () Int)
(declare-fun x2478 () Int)
(declare-fun x3320 () Int)
(declare-fun x3189 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x6753 () Bool)
(declare-fun x2439 () Bool)
(declare-fun x8064 () Int)
(declare-fun x1301 () Int)
(declare-fun x4787 () Int)
(declare-fun x1028 () Int)
(declare-fun x5532 () Int)
(declare-fun x6698 () Bool)
(declare-fun x3315 () Bool)
(declare-fun x7859 (Int) Int)
(declare-fun x3859 () Int)
(declare-fun x5033 () Int)
(declare-fun x1214 () Bool)
(declare-fun x4263 () Int)
(declare-fun x1969 () Bool)
(declare-fun x3048 () Bool)
(declare-fun x5427 () Int)
(declare-fun x4252 () Int)
(declare-fun x6277 () Bool)
(declare-fun x5534 () Bool)
(declare-fun x2074 () Int)
(declare-fun x7222 () Int)
(declare-fun x2518 () Int)
(declare-fun x6938 () Int)
(declare-fun x5810 () Bool)
(declare-fun x1375 () Int)
(declare-fun x5828 () Bool)
(declare-fun x5078 () Bool)
(declare-fun x5825 () Bool)
(declare-fun x8389 () Bool)
(declare-fun x1656 () Int)
(declare-fun x5208 () Int)
(declare-fun x8046 () Int)
(declare-fun x7754 () Int)
(declare-fun x2806 () Bool)
(declare-fun x7594 () Bool)
(declare-fun x5160 () Int)
(declare-fun x5109 () Int)
(declare-fun x1625 () Bool)
(declare-fun x6056 () Int)
(declare-fun x5905 () Bool)
(declare-fun x4548 () Int)
(declare-fun x4280 () Bool)
(declare-fun x2577 () Bool)
(declare-fun x5248 () Int)
(declare-fun x3566 () Bool)
(declare-fun x4613 () Int)
(declare-fun x627 () Int)
(declare-fun x6989 () Bool)
(declare-fun x5495 () Int)
(declare-fun x2814 () Bool)
(declare-fun x1822 () Int)
(declare-fun x3644 () Int)
(declare-fun x1825 () Int)
(declare-fun x4606 () Bool)
(declare-fun x8353 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x911 () Int)
(declare-fun x5303 () Int)
(declare-fun x4824 () Int)
(declare-fun x978 () Bool)
(declare-fun x3521 () Int)
(declare-fun x1594 () Bool)
(declare-fun x2554 () Int)
(declare-fun x1339 () Bool)
(declare-fun x1150 () Int)
(declare-fun x1826 () Bool)
(declare-fun x6047 () Bool)
(declare-fun x2230 () Int)
(declare-fun x2448 () Int)
(declare-fun x6856 () Int)
(declare-fun x1547 () Int)
(declare-fun x7284 () Int)
(declare-fun x7935 () Bool)
(declare-fun x5188 () Int)
(declare-fun x973 () Int)
(declare-fun x4554 () Bool)
(declare-fun x2654 () Int)
(declare-fun x6093 () Int)
(declare-fun x7013 () Int)
(declare-fun x676 () Int)
(declare-fun x2853 () Int)
(declare-fun x4644 () Bool)
(declare-fun x6778 () Int)
(declare-fun x6622 () Bool)
(declare-fun x5723 () Bool)
(declare-fun x5935 () Bool)
(declare-fun x6275 () Bool)
(declare-fun x4979 () Bool)
(declare-fun x7537 () Bool)
(declare-fun x7887 () Int)
(declare-fun x6192 () Int)
(declare-fun x5211 () Bool)
(declare-fun x6450 () Int)
(declare-fun x5497 () Bool)
(declare-fun x2451 () Int)
(declare-fun x3343 () Bool)
(declare-fun x966 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x7665 () Int)
(declare-fun x696 () Int)
(declare-fun x434 () Bool)
(declare-fun x196 () Int)
(declare-fun x6787 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x6295 () Int)
(declare-fun x2291 () Int)
(declare-fun x5895 () Int)
(declare-fun x3139 () Bool)
(declare-fun x2624 () Int)
(declare-fun x7220 () Int)
(declare-fun x2778 () Int)
(declare-fun x1363 () Int)
(declare-fun x5598 () Int)
(declare-fun x5707 () Bool)
(declare-fun x5850 () Int)
(declare-fun x6190 () Bool)
(declare-fun x771 () Int)
(declare-fun x5125 () Bool)
(declare-fun x7184 () Bool)
(declare-fun x2653 () Int)
(declare-fun x4000 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1818 () Int)
(declare-fun x625 () Bool)
(declare-fun x8152 () Int)
(declare-fun x3125 () Int)
(declare-fun x4557 () Bool)
(declare-fun x5008 () Int)
(declare-fun x4071 () Bool)
(declare-fun x4180 () Int)
(declare-fun x3461 () Bool)
(declare-fun x5417 () Bool)
(declare-fun x6249 () Bool)
(declare-fun x6145 () Int)
(declare-fun x656 () Int)
(declare-fun x8577 () Bool)
(declare-fun x2770 () Int)
(declare-fun x5197 () Int)
(declare-fun x5167 () Bool)
(declare-fun x7121 () Int)
(declare-fun x5210 () Int)
(declare-fun x4769 () Bool)
(declare-fun x4843 () Bool)
(declare-fun x6931 () Bool)
(declare-fun x7456 () Bool)
(declare-fun x8048 () Bool)
(declare-fun x7690 () Bool)
(declare-fun x4957 () Int)
(declare-fun x614 () Bool)
(declare-fun x6498 () Bool)
(declare-fun x6075 () Int)
(declare-fun x6968 () Bool)
(declare-fun x6917 () Bool)
(declare-fun x5445 () Int)
(declare-fun x4935 () Int)
(declare-fun x3202 () Int)
(declare-fun x7381 () Bool)
(declare-fun x6883 () Int)
(declare-fun x4535 () Int)
(declare-fun x1505 () Bool)
(declare-fun x7149 () Bool)
(declare-fun x4584 () Bool)
(declare-fun x4074 () Int)
(declare-fun x4807 () Int)
(declare-fun x2667 () Bool)
(declare-fun x111 () Int)
(declare-fun x3435 () Bool)
(declare-fun x2128 () Int)
(declare-fun x8074 (Int) Int)
(declare-fun x5 () Int)
(declare-fun x7512 () Int)
(declare-fun x8320 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x4688 () Bool)
(declare-fun x887 () Bool)
(declare-fun x2944 (Int) Int)
(declare-fun x7486 () Int)
(declare-fun x7737 () Int)
(declare-fun x917 () Int)
(declare-fun x1552 () Int)
(declare-fun x5725 () Bool)
(declare-fun x836 () Int)
(declare-fun x5090 () Int)
(declare-fun x6361 () Int)
(declare-fun x7532 () Int)
(declare-fun x4276 () Int)
(declare-fun x6990 () Int)
(declare-fun x5132 () Int)
(declare-fun x3783 () Bool)
(declare-fun x8057 () Bool)
(declare-fun x7176 () Int)
(declare-fun x5797 () Bool)
(declare-fun x5579 () Int)
(declare-fun x3214 () Int)
(declare-fun x563 () Int)
(declare-fun x3626 () Bool)
(declare-fun x7529 () Int)
(declare-fun x5585 () Bool)
(declare-fun x406 () Int)
(declare-fun x6337 () Int)
(declare-fun x435 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x8220 () Bool)
(declare-fun x5517 () Int)
(declare-fun x1935 () Int)
(declare-fun x8190 () Bool)
(declare-fun x1247 () Int)
(declare-fun x955 () Int)
(declare-fun x2294 () Bool)
(declare-fun x8041 () Int)
(declare-fun x1784 () Int)
(declare-fun x5421 () Int)
(declare-fun x5754 () Int)
(declare-fun x227 () Bool)
(declare-fun x3493 () Bool)
(declare-fun x3998 () Int)
(declare-fun x782 () Int)
(declare-fun x3538 () Bool)
(declare-fun x544 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x5896 () Bool)
(declare-fun x6355 () Int)
(declare-fun x3259 () Int)
(declare-fun x2113 () Int)
(declare-fun x6095 () Int)
(declare-fun x5917 () Int)
(declare-fun x1610 (Int) Int)
(declare-fun x2535 () Int)
(declare-fun x4481 () Bool)
(declare-fun x7691 () Bool)
(declare-fun x6468 () Int)
(declare-fun x6894 () Int)
(declare-fun x3241 () Int)
(declare-fun x5130 () Bool)
(declare-fun x7528 () Int)
(declare-fun x2319 () Int)
(declare-fun x6442 () Int)
(declare-fun x3931 () Int)
(declare-fun x7084 () Bool)
(declare-fun x5830 () Bool)
(declare-fun x3527 () Int)
(declare-fun x3531 () Int)
(declare-fun x4318 () Int)
(declare-fun x2520 () Int)
(declare-fun x818 () Bool)
(declare-fun x5064 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x3915 () Int)
(declare-fun x4800 () Bool)
(declare-fun x3592 () Bool)
(declare-fun x729 () Int)
(declare-fun x7741 () Int)
(declare-fun x2760 () Int)
(declare-fun x4202 () Bool)
(declare-fun x3503 () Int)
(declare-fun x4678 () Int)
(declare-fun x651 () Int)
(declare-fun x6935 () Bool)
(declare-fun x4099 () Int)
(declare-fun x7702 () Int)
(declare-fun x8578 () Int)
(declare-fun x4628 (Int Int) Int)
(declare-fun x1893 () Bool)
(declare-fun x5410 () Bool)
(declare-fun x4109 () Int)
(declare-fun x878 () Bool)
(declare-fun x142 () Int)
(declare-fun x2229 () Int)
(declare-fun x5594 () Bool)
(declare-fun x393 () Int)
(declare-fun x8346 () Int)
(declare-fun x6353 () Int)
(declare-fun x3440 () Int)
(declare-fun x5083 () Bool)
(declare-fun x881 () Int)
(declare-fun x6539 () Bool)
(declare-fun x4996 (Int) Int)
(declare-fun x2410 () Bool)
(declare-fun x2400 () Int)
(declare-fun x1750 () Bool)
(declare-fun x575 (Int) Int)
(declare-fun x2191 () Int)
(declare-fun x6346 () Bool)
(declare-fun x2061 () Int)
(declare-fun x6707 () Int)
(declare-fun x6126 () Bool)
(declare-fun x5941 () Int)
(declare-fun x4118 () Int)
(declare-fun x4024 () Int)
(declare-fun x382 () Bool)
(declare-fun x1582 () Int)
(declare-fun x5998 () Int)
(declare-fun x1844 () Int)
(declare-fun x805 () Bool)
(declare-fun x3190 () Int)
(declare-fun x1600 () Bool)
(declare-fun x5943 () Bool)
(declare-fun x2873 () Bool)
(declare-fun x3077 () Int)
(declare-fun x8385 () Bool)
(declare-fun x5226 () Int)
(declare-fun x7462 () Int)
(declare-fun x3863 () Bool)
(declare-fun x6697 () Bool)
(declare-fun x5769 () Bool)
(declare-fun x4677 () Bool)
(declare-fun x2938 () Int)
(declare-fun x245 () Bool)
(declare-fun x5567 () Int)
(declare-fun x2933 () Int)
(declare-fun x1093 () Int)
(declare-fun x7660 () Int)
(declare-fun x8008 () Int)
(declare-fun x7632 () Int)
(declare-fun x4034 () Bool)
(declare-fun x8330 () Int)
(declare-fun x6209 () Bool)
(declare-fun x3359 () Int)
(declare-fun x5056 () Int)
(declare-fun x2743 () Bool)
(declare-fun x716 () Bool)
(declare-fun x6843 () Int)
(declare-fun x1122 () Int)
(declare-fun x1780 () Int)
(declare-fun x5422 () Bool)
(declare-fun x8312 () Int)
(declare-fun x15 () Int)
(declare-fun x3029 () Int)
(declare-fun x2103 () Bool)
(declare-fun x5426 () Int)
(declare-fun x3772 () Bool)
(declare-fun x4396 () Int)
(declare-fun x6001 () Bool)
(declare-fun x3228 () Int)
(declare-fun x2153 () Int)
(declare-fun x6311 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x8249 () Int)
(declare-fun x3966 () Int)
(declare-fun x7107 () Int)
(declare-fun x3540 (Int) Int)
(declare-fun x2273 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x4367 () Int)
(declare-fun x3175 () Bool)
(declare-fun x6975 () Int)
(declare-fun x1676 () Int)
(declare-fun x3513 () Int)
(declare-fun x7557 () Bool)
(declare-fun x5675 () Int)
(declare-fun x3240 () Int)
(declare-fun x115 () Int)
(declare-fun x5692 () Int)
(declare-fun x3018 () Bool)
(declare-fun x4259 () Int)
(declare-fun x5289 () Int)
(declare-fun x4102 () Int)
(declare-fun x1188 () Int)
(declare-fun x2886 () Int)
(declare-fun x7839 () Int)
(declare-fun x7901 () Bool)
(declare-fun x2586 () Int)
(declare-fun x8415 (Int) Int)
(declare-fun x6406 () Bool)
(declare-fun x2748 () Int)
(declare-fun x7505 () Bool)
(declare-fun x1198 () Int)
(declare-fun x7128 () Int)
(declare-fun x7071 () Int)
(declare-fun x4676 () Int)
(declare-fun x653 () Bool)
(declare-fun x1484 () Int)
(declare-fun x1537 () Int)
(declare-fun x1761 () Int)
(declare-fun x1510 () Bool)
(declare-fun x3260 () Int)
(declare-fun x6734 () Int)
(declare-fun x1373 () Int)
(declare-fun x5798 () Int)
(declare-fun x6023 () Bool)
(declare-fun x5738 () Int)
(declare-fun x3007 () Bool)
(declare-fun x2255 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x6882 () Int)
(declare-fun x2772 () Bool)
(declare-fun x7413 () Bool)
(declare-fun x8471 () Int)
(declare-fun x4883 () Bool)
(declare-fun x630 () Int)
(declare-fun x1308 () Bool)
(declare-fun x8322 () Int)
(declare-fun x5835 () Bool)
(declare-fun x7938 () Int)
(declare-fun x8240 () Bool)
(declare-fun x4089 () Int)
(declare-fun x3618 () Int)
(declare-fun x6716 () Bool)
(declare-fun x2592 () Int)
(declare-fun x3174 () Int)
(declare-fun x1092 () Bool)
(declare-fun x6146 () Int)
(declare-fun x6762 () Bool)
(declare-fun x153 () Int)
(declare-fun x6174 () Int)
(declare-fun x8499 () Bool)
(declare-fun x82 () Int)
(declare-fun x2276 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x4065 () Bool)
(declare-fun x2926 () Int)
(declare-fun x3978 () Int)
(declare-fun x837 () Bool)
(declare-fun x4777 () Bool)
(declare-fun x5360 () Int)
(declare-fun x413 () Int)
(declare-fun x2045 () Int)
(declare-fun x3902 () Int)
(declare-fun x7424 () Int)
(declare-fun x50 () Int)
(declare-fun x4929 () Bool)
(declare-fun x6814 () Bool)
(declare-fun x6718 () Bool)
(declare-fun x2509 () Int)
(declare-fun x4928 () Int)
(declare-fun x7168 () Bool)
(declare-fun x5216 () Int)
(declare-fun x6435 () Bool)
(declare-fun x6141 (Int) Int)
(declare-fun x5665 () Bool)
(declare-fun x7193 () Bool)
(declare-fun x1871 () Int)
(declare-fun x3609 () Bool)
(declare-fun x6984 () Int)
(declare-fun x5804 () Bool)
(declare-fun x5902 () Int)
(declare-fun x4702 () Int)
(declare-fun x3074 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x4416 () Bool)
(declare-fun x2903 () Bool)
(declare-fun x5791 () Bool)
(declare-fun x3277 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x5672 () Bool)
(declare-fun x7098 () Int)
(declare-fun x2008 () Int)
(declare-fun x1772 () Int)
(declare-fun x2253 () Bool)
(declare-fun x838 () Int)
(declare-fun x3298 () Bool)
(declare-fun x1432 () Int)
(declare-fun x1839 () Int)
(declare-fun x2101 () Bool)
(declare-fun x3947 () Bool)
(declare-fun x8589 () Bool)
(declare-fun x6800 () Bool)
(declare-fun x8539 () Int)
(declare-fun x2361 () Int)
(declare-fun x6898 () Bool)
(declare-fun x4658 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x4410 () Int)
(declare-fun x2307 () Bool)
(declare-fun x4159 () Int)
(declare-fun x7364 () Bool)
(declare-fun x4972 () Bool)
(declare-fun x6067 (Int Int Int Int Int) Int)
(declare-fun x6371 () Bool)
(declare-fun x2299 () Int)
(declare-fun x1246 () Int)
(declare-fun x4653 () Bool)
(declare-fun x4176 () Int)
(declare-fun x5733 () Bool)
(declare-fun x2737 () Int)
(declare-fun x2609 () Int)
(declare-fun x3231 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x3769 () Int)
(declare-fun x6455 () Bool)
(declare-fun x1751 () Int)
(declare-fun x4803 () Int)
(declare-fun x4659 () Int)
(declare-fun x3183 () Bool)
(declare-fun x774 () Int)
(declare-fun x7706 () Int)
(declare-fun x252 () Int)
(declare-fun x5482 () Int)
(declare-fun x3507 () Int)
(declare-fun x2634 () Int)
(declare-fun x5889 () Bool)
(declare-fun x5820 () Bool)
(declare-fun x6211 () Int)
(declare-fun x3080 () Int)
(declare-fun x7450 () Bool)
(declare-fun x2845 () Int)
(declare-fun x6807 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x7179 () Bool)
(declare-fun x7565 () Bool)
(declare-fun x4446 () Int)
(declare-fun x195 () Bool)
(declare-fun x1406 () Int)
(declare-fun x4739 () Int)
(declare-fun x290 () Bool)
(declare-fun x6595 () Bool)
(declare-fun x36 () Int)
(declare-fun x201 () Bool)
(declare-fun x3508 () Int)
(declare-fun x452 () Bool)
(declare-fun x2117 () Int)
(declare-fun x2612 () Int)
(declare-fun x5747 () Bool)
(declare-fun x7374 () Bool)
(declare-fun x4349 () Bool)
(declare-fun x968 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x8560 (Int) Int)
(declare-fun x5076 () Bool)
(declare-fun x7256 () Bool)
(declare-fun x8587 () Bool)
(declare-fun x3027 () Bool)
(declare-fun x416 () Int)
(declare-fun x7459 () Bool)
(declare-fun x4706 () Bool)
(declare-fun x4271 () Int)
(declare-fun x4322 () Int)
(declare-fun x7940 () Bool)
(declare-fun x4980 () Int)
(declare-fun x3233 () Int)
(declare-fun x3961 (Int) Bool)
(declare-fun x3557 () Int)
(declare-fun x7472 () Bool)
(declare-fun x7764 () Bool)
(declare-fun x8562 () Bool)
(declare-fun x3963 () Bool)
(declare-fun x3211 () Int)
(declare-fun x4786 () Bool)
(declare-fun x4946 () Int)
(declare-fun x2199 () Int)
(declare-fun x2343 () Bool)
(declare-fun x203 () Bool)
(declare-fun x5782 () Bool)
(declare-fun x2476 () Int)
(declare-fun x7115 () Int)
(declare-fun x1739 () Bool)
(declare-fun x4342 () Int)
(declare-fun x826 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x7027 () Bool)
(declare-fun x2062 () Int)
(declare-fun x1271 () Int)
(declare-fun x7367 () Int)
(declare-fun x373 () Int)
(declare-fun x3882 () Int)
(declare-fun x388 () Bool)
(declare-fun x6359 () Bool)
(declare-fun x582 () Int)
(declare-fun x8398 () Int)
(declare-fun x7264 () Int)
(declare-fun x1070 () Int)
(declare-fun x5756 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x1970 () Int)
(declare-fun x6134 () Int)
(declare-fun x768 () Int)
(declare-fun x2205 () Int)
(declare-fun x2599 () Bool)
(declare-fun x3826 () Bool)
(declare-fun x1129 () Int)
(declare-fun x1100 () Int)
(declare-fun x8294 () Int)
(declare-fun x2102 () Int)
(declare-fun x2754 () Bool)
(declare-fun x1148 () Int)
(declare-fun x288 () Bool)
(declare-fun x1892 () Int)
(declare-fun x1114 () Int)
(declare-fun x3587 () Bool)
(declare-fun x4472 () Int)
(declare-fun x3065 () Bool)
(declare-fun x3875 () Bool)
(declare-fun x7205 () Int)
(declare-fun x2256 () Int)
(declare-fun x7680 () Bool)
(declare-fun x2434 () Int)
(declare-fun x2981 () Int)
(declare-fun x7204 () Bool)
(declare-fun x2588 () Int)
(declare-fun x4095 () Int)
(declare-fun x2672 () Int)
(declare-fun x5496 () Bool)
(declare-fun x2907 () Int)
(declare-fun x3597 () Int)
(declare-fun x6254 () Int)
(declare-fun x7916 () Int)
(declare-fun x152 () Bool)
(declare-fun x3623 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x4464 () Bool)
(declare-fun x3768 () Int)
(declare-fun x3355 () Int)
(declare-fun x4064 () Int)
(declare-fun x7002 () Int)
(declare-fun x6530 () Int)
(declare-fun x3396 () Bool)
(declare-fun x6367 () Bool)
(declare-fun x7828 () Int)
(declare-fun x2613 () Bool)
(declare-fun x5630 () Int)
(declare-fun x3550 () Int)
(declare-fun x6738 () Int)
(declare-fun x1286 () Bool)
(declare-fun x8382 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x5263 () Int)
(declare-fun x5812 () Bool)
(declare-fun x6621 () Int)
(declare-fun x5599 () Int)
(declare-fun x8291 () Bool)
(declare-fun x3881 () Int)
(declare-fun x4571 () Int)
(declare-fun x4823 () Bool)
(declare-fun x7223 () Bool)
(declare-fun x7765 () Int)
(declare-fun x6661 () Int)
(declare-fun x1671 () Int)
(declare-fun x7007 () Bool)
(declare-fun x7429 () Bool)
(declare-fun x6899 () Int)
(declare-fun x574 () Int)
(declare-fun x4945 () Int)
(declare-fun x3169 () Bool)
(declare-fun x4138 () Int)
(declare-fun x102 () Int)
(declare-fun x8404 () Bool)
(declare-fun x4695 () Bool)
(declare-fun x4220 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x6912 () Bool)
(declare-fun x6111 () Int)
(declare-fun x4876 () Bool)
(declare-fun x514 () Int)
(declare-fun x352 () Int)
(declare-fun x8130 () Int)
(declare-fun x910 () Int)
(declare-fun x3980 () Int)
(declare-fun x41 () Int)
(declare-fun x7834 () Int)
(declare-fun x5886 () Int)
(declare-fun x4199 () Int)
(declare-fun x6711 () Int)
(declare-fun x6372 (Int) Int)
(declare-fun x6182 () Bool)
(declare-fun x186 () Int)
(declare-fun x6802 () Int)
(declare-fun x2159 () Int)
(declare-fun x7756 () Int)
(declare-fun x5477 () Int)
(declare-fun x5562 () Bool)
(declare-fun x481 () Int)
(declare-fun x8150 () Int)
(declare-fun x5627 () Int)
(declare-fun x8256 () Bool)
(declare-fun x2316 () Int)
(declare-fun x1085 () Int)
(declare-fun x1802 () Bool)
(declare-fun x6181 () Bool)
(declare-fun x8531 () Int)
(declare-fun x1212 () Bool)
(declare-fun x5701 () Int)
(declare-fun x5069 () Int)
(declare-fun x4409 () Int)
(declare-fun x6558 () Bool)
(declare-fun x259 () Bool)
(declare-fun x4212 () Bool)
(declare-fun x4848 () Int)
(declare-fun x8476 () Bool)
(declare-fun x7418 () Bool)
(declare-fun x6605 (Int) Int)
(declare-fun x6030 () Int)
(declare-fun x7586 () Bool)
(declare-fun x7835 () Bool)
(declare-fun x2939 () Bool)
(declare-fun x5030 () Bool)
(declare-fun x5405 () Int)
(declare-fun x2614 () Int)
(declare-fun x2405 () Int)
(declare-fun x2825 () Int)
(declare-fun x3948 () Bool)
(declare-fun x6117 () Int)
(declare-fun x6979 () Int)
(declare-fun x7570 () Bool)
(declare-fun x7619 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x3206 () Int)
(declare-fun x1942 () Bool)
(declare-fun x7633 () Bool)
(declare-fun x7474 () Int)
(declare-fun x8068 () Int)
(declare-fun x4934 () Int)
(declare-fun x7490 () Bool)
(declare-fun x6804 () Int)
(declare-fun x6810 () Int)
(declare-fun x3015 () Int)
(declare-fun x4399 () Bool)
(declare-fun x4619 () Bool)
(declare-fun x5881 () Int)
(declare-fun x5859 () Int)
(declare-fun x6725 () Bool)
(declare-fun x5147 () Bool)
(declare-fun x827 () Bool)
(declare-fun x4899 () Bool)
(declare-fun x6888 () Int)
(declare-fun x3677 () Bool)
(declare-fun x8525 () Int)
(declare-fun x6026 () Int)
(declare-fun x6259 () Int)
(declare-fun x2473 () Int)
(declare-fun x3193 () Bool)
(declare-fun x49 () Bool)
(declare-fun x739 () Int)
(declare-fun x3458 () Int)
(declare-fun x3475 () Bool)
(declare-fun x1702 (Int) Int)
(declare-fun x1837 () Bool)
(declare-fun x2397 () Bool)
(declare-fun x4961 () Bool)
(declare-fun x7624 () Int)
(declare-fun x4513 () Int)
(declare-fun x7684 () Int)
(declare-fun x309 () Bool)
(declare-fun x1992 () Int)
(declare-fun x4634 (Int) Int)
(declare-fun x3530 () Bool)
(declare-fun x892 () Int)
(declare-fun x1543 () Int)
(declare-fun x3656 () Bool)
(declare-fun x1996 () Int)
(declare-fun x8411 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x4793 () Int)
(declare-fun x3695 () Int)
(declare-fun x1123 () Int)
(declare-fun x1293 () Bool)
(declare-fun x2287 (Int) Int)
(declare-fun x2165 () Bool)
(declare-fun x6433 () Int)
(declare-fun x6923 () Bool)
(declare-fun x297 () Bool)
(declare-fun x3819 () Bool)
(declare-fun x2408 () Int)
(declare-fun x2210 () Bool)
(declare-fun x7294 () Int)
(declare-fun x8124 () Bool)
(declare-fun x2802 () Int)
(declare-fun x5104 () Int)
(declare-fun x3405 () Int)
(declare-fun x3867 () Bool)
(declare-fun x4106 () Int)
(declare-fun x3272 () Int)
(declare-fun x2978 () Bool)
(declare-fun x8568 () Bool)
(declare-fun x42 () Bool)
(declare-fun x7048 () Bool)
(declare-fun x1365 () Int)
(declare-fun x3105 (Int Int Int Int Int Int Int) Int)
(declare-fun x3331 () Int)
(declare-fun x5792 () Int)
(declare-fun x4205 () Int)
(declare-fun x8463 () Bool)
(declare-fun x2421 (Int) Int)
(declare-fun x7531 () Bool)
(declare-fun x5077 () Bool)
(declare-fun x4221 () Bool)
(declare-fun x1371 () Int)
(declare-fun x967 () Int)
(declare-fun x4778 () Int)
(declare-fun x4509 () Int)
(declare-fun x5487 () Int)
(declare-fun x3101 () Int)
(declare-fun x8445 () Int)
(declare-fun x4527 () Bool)
(declare-fun x8565 () Bool)
(declare-fun x7939 () Int)
(declare-fun x6941 () Int)
(declare-fun x5671 () Int)
(declare-fun x1840 () Int)
(declare-fun x4592 () Bool)
(declare-fun x6185 () Int)
(declare-fun x198 () Bool)
(declare-fun x4454 () Bool)
(declare-fun x7712 () Bool)
(declare-fun x6218 () Int)
(declare-fun x8366 () Int)
(declare-fun x6939 () Bool)
(declare-fun x6162 () Bool)
(declare-fun x5763 () Int)
(declare-fun x4682 (Int) Int)
(declare-fun x1013 () Int)
(declare-fun x4656 () Int)
(declare-fun x4622 () Bool)
(declare-fun x3801 () Bool)
(declare-fun x1262 () Int)
(declare-fun x7029 () Int)
(declare-fun x7123 () Int)
(declare-fun x7876 () Bool)
(declare-fun x3770 () Int)
(declare-fun x6237 () Int)
(declare-fun x1756 () Int)
(declare-fun x3348 () Int)
(declare-fun x4147 () Bool)
(declare-fun x1964 () Int)
(declare-fun x2882 () Int)
(declare-fun x513 () Int)
(declare-fun x6687 () Int)
(declare-fun x2298 () Bool)
(declare-fun x7973 () Int)
(declare-fun x1959 () Bool)
(declare-fun x3059 () Int)
(declare-fun x6153 () Bool)
(declare-fun x675 () Int)
(declare-fun x90 () Int)
(declare-fun x6063 () Bool)
(declare-fun x5670 () Bool)
(declare-fun x7714 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x2779 () Bool)
(declare-fun x132 () Int)
(declare-fun x2651 () Int)
(declare-fun x8163 () Bool)
(declare-fun x5329 () Int)
(declare-fun x7351 () Int)
(declare-fun x4570 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x4327 () Int)
(declare-fun x2871 () Int)
(declare-fun x741 () Int)
(declare-fun x4235 (Int) Int)
(declare-fun x5196 () Bool)
(declare-fun x6987 () Int)
(declare-fun x6837 () Bool)
(declare-fun x3081 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x3088 () Int)
(declare-fun x6550 () Int)
(declare-fun x7491 () Int)
(declare-fun x1608 () Int)
(declare-fun x349 () Bool)
(declare-fun x3872 () Bool)
(declare-fun x3448 () Int)
(declare-fun x3201 () Bool)
(declare-fun x8367 () Bool)
(declare-fun x7618 () Int)
(declare-fun x8252 () Bool)
(declare-fun x6761 () Int)
(declare-fun x6741 () Bool)
(declare-fun x3476 () Int)
(declare-fun x5651 () Int)
(declare-fun x2284 () Bool)
(declare-fun x3084 () Int)
(declare-fun x3938 () Int)
(declare-fun x599 () Int)
(declare-fun x7292 () Int)
(declare-fun x5955 () Int)
(declare-fun x8117 () Bool)
(declare-fun x6351 () Int)
(declare-fun x1357 () Bool)
(declare-fun x4070 () Int)
(declare-fun x244 () Int)
(declare-fun x2212 () Int)
(declare-fun x793 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x168 () Int)
(declare-fun x8226 () Int)
(declare-fun x6784 () Int)
(declare-fun x8420 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x6350 () Int)
(declare-fun x2023 () Bool)
(declare-fun x3033 () Int)
(declare-fun x4061 () Int)
(declare-fun x5336 () Int)
(declare-fun x3553 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x4014 () Int)
(declare-fun x8459 () Bool)
(declare-fun x5323 () Bool)
(declare-fun x4871 () Bool)
(declare-fun x6527 () Bool)
(declare-fun x6300 () Int)
(declare-fun x6868 () Bool)
(declare-fun x3894 () Int)
(declare-fun x3668 () Int)
(declare-fun x8377 () Bool)
(declare-fun x6049 () Bool)
(declare-fun x7662 () Bool)
(declare-fun x2831 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x2952 () Int)
(declare-fun x430 () Int)
(declare-fun x5740 () Bool)
(declare-fun x2683 () Int)
(declare-fun x1440 () Bool)
(declare-fun x886 () Bool)
(declare-fun x1707 () Int)
(declare-fun x1063 () Int)
(declare-fun x6020 () Bool)
(declare-fun x486 () Int)
(declare-fun x2883 () Bool)
(declare-fun x4497 () Bool)
(declare-fun x3494 () Int)
(declare-fun x3821 () Bool)
(declare-fun x5156 () Int)
(declare-fun x2239 () Bool)
(declare-fun x589 () Int)
(declare-fun x572 () Int)
(declare-fun x5345 () Int)
(declare-fun x367 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x3335 () Bool)
(declare-fun x960 () Int)
(declare-fun x3744 () Bool)
(declare-fun x5736 () Bool)
(declare-fun x300 () Int)
(declare-fun x8570 () Bool)
(declare-fun x4834 () Bool)
(declare-fun x5773 () Bool)
(declare-fun x2056 () Int)
(declare-fun x3053 () Int)
(declare-fun x3647 () Int)
(declare-fun x1105 () Int)
(declare-fun x6452 () Int)
(declare-fun x2730 () Int)
(declare-fun x6690 () Bool)
(declare-fun x2328 () Int)
(declare-fun x8371 (Int Int Int) Int)
(declare-fun x8374 () Bool)
(declare-fun x4558 () Int)
(declare-fun x2296 () Bool)
(declare-fun x6324 () Int)
(declare-fun x8554 () Int)
(declare-fun x6251 () Bool)
(declare-fun x4290 () Int)
(declare-fun x5060 () Bool)
(declare-fun x6547 () Int)
(declare-fun x688 () Int)
(declare-fun x7686 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x7427 () Int)
(declare-fun x5746 () Bool)
(declare-fun x2668 (Int) Int)
(declare-fun x2341 () Int)
(declare-fun x5351 () Bool)
(declare-fun x5823 () Bool)
(declare-fun x409 () Bool)
(declare-fun x1912 () Int)
(declare-fun x5079 () Int)
(declare-fun x7011 () Int)
(declare-fun x1319 () Bool)
(declare-fun x7291 () Int)
(declare-fun x7112 () Int)
(declare-fun x7963 () Int)
(declare-fun x7601 () Int)
(declare-fun x95 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x6257 () Int)
(declare-fun x5564 () Int)
(declare-fun x5885 () Bool)
(declare-fun x4611 () Bool)
(declare-fun x5642 () Int)
(declare-fun x6453 () Bool)
(declare-fun x4125 () Int)
(declare-fun x8434 () Int)
(declare-fun x298 () Int)
(declare-fun x6803 (Int Int) Int)
(declare-fun x3397 () Int)
(declare-fun x4096 () Int)
(declare-fun x992 () Int)
(declare-fun x8536 () Bool)
(declare-fun x2987 () Bool)
(declare-fun x5593 () Int)
(declare-fun x847 () Int)
(declare-fun x3675 () Int)
(declare-fun x8208 () Bool)
(declare-fun x1866 () Int)
(declare-fun x3152 () Bool)
(declare-fun x643 () Bool)
(declare-fun x6366 () Bool)
(declare-fun x3295 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x4874 () Int)
(declare-fun x99 () Int)
(declare-fun x4855 () Bool)
(declare-fun x4123 () Bool)
(declare-fun x8595 () Bool)
(declare-fun x6956 () Bool)
(declare-fun x841 () Int)
(declare-fun x2385 () Int)
(declare-fun x5342 () Bool)
(declare-fun x1182 () Int)
(declare-fun x6012 () Bool)
(declare-fun x2149 () Int)
(declare-fun x7697 () Bool)
(declare-fun x4408 (Int) Int)
(declare-fun x207 () Bool)
(declare-fun x2606 () Bool)
(declare-fun x7330 () Int)
(declare-fun x4907 () Int)
(declare-fun x6260 () Int)
(declare-fun x7194 (Int) Int)
(declare-fun x4389 () Bool)
(declare-fun x3188 () Bool)
(declare-fun x7124 () Int)
(declare-fun x3631 (Int) Int)
(declare-fun x1183 () Int)
(declare-fun x5144 () Int)
(declare-fun x3747 () Bool)
(declare-fun x583 () Int)
(declare-fun x680 () Int)
(declare-fun x4933 () Int)
(declare-fun x5260 () Bool)
(declare-fun x3266 () Bool)
(declare-fun x54 () Bool)
(declare-fun x7419 () Int)
(declare-fun x4507 () Bool)
(declare-fun x1068 () Int)
(declare-fun x4943 () Int)
(declare-fun x6633 () Bool)
(declare-fun x2914 () Int)
(declare-fun x1561 () Int)
(declare-fun x3865 () Int)
(declare-fun x3736 () Int)
(declare-fun x4391 () Bool)
(declare-fun x3243 () Int)
(declare-fun x7647 () Bool)
(declare-fun x2676 () Int)
(declare-fun x1882 () Int)
(declare-fun x788 () Bool)
(declare-fun x3839 () Bool)
(declare-fun x5253 () Bool)
(declare-fun x77 () Int)
(declare-fun x4227 () Int)
(declare-fun x1268 () Int)
(declare-fun x5694 () Bool)
(declare-fun x1519 () Int)
(declare-fun x8438 () Int)
(declare-fun x7798 () Bool)
(declare-fun x1983 () Int)
(declare-fun x6315 () Int)
(declare-fun x5916 () Int)
(declare-fun x1999 () Int)
(declare-fun x6978 () Int)
(declare-fun x4398 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x2048 () Int)
(declare-fun x3788 () Int)
(declare-fun x3977 () Int)
(declare-fun x6860 () Bool)
(declare-fun x4297 () Int)
(declare-fun x3970 () Int)
(declare-fun x7173 () Bool)
(declare-fun x4305 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x134 () Bool)
(declare-fun x381 () Int)
(declare-fun x6972 () Bool)
(declare-fun x756 () Bool)
(declare-fun x2541 () Int)
(declare-fun x2317 () Bool)
(declare-fun x1323 () Int)
(declare-fun x2146 () Bool)
(declare-fun x990 () Bool)
(declare-fun x7437 () Int)
(declare-fun x1925 () Bool)
(declare-fun x3853 () Bool)
(declare-fun x7250 () Bool)
(declare-fun x8140 () Bool)
(declare-fun x7929 () Bool)
(declare-fun x5829 () Bool)
(declare-fun x6309 () Bool)
(declare-fun x6089 () Bool)
(declare-fun x2292 () Int)
(declare-fun x7790 () Int)
(declare-fun x6473 () Int)
(declare-fun x1752 () Int)
(declare-fun x6572 () Bool)
(declare-fun x5265 () Int)
(declare-fun x7005 () Int)
(declare-fun x3114 () Bool)
(declare-fun x5066 () Int)
(declare-fun x3792 () Int)
(declare-fun x2808 () Bool)
(declare-fun x2715 () Int)
(declare-fun x4039 () Bool)
(declare-fun x3691 () Bool)
(declare-fun x4486 () Int)
(declare-fun x7143 () Int)
(declare-fun x1755 () Bool)
(declare-fun x6436 () Bool)
(declare-fun x6480 () Bool)
(declare-fun x5541 (Int) Int)
(declare-fun x6304 () Int)
(declare-fun x1186 () Bool)
(declare-fun x1404 () Int)
(declare-fun x7590 () Bool)
(declare-fun x3693 () Int)
(declare-fun x1118 () Int)
(declare-fun x7597 () Int)
(declare-fun x3063 () Bool)
(declare-fun x1947 () Int)
(declare-fun x4932 () Int)
(declare-fun x32 () Int)
(declare-fun x1030 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x721 () Int)
(declare-fun x5205 () Int)
(declare-fun x8205 () Int)
(declare-fun x3790 () Bool)
(declare-fun x8513 () Int)
(declare-fun x7900 () Bool)
(declare-fun x5660 () Int)
(declare-fun x44 () Int)
(declare-fun x2119 () Int)
(declare-fun x7471 (Int) Int)
(declare-fun x6827 () Bool)
(declare-fun x6545 () Bool)
(declare-fun x6176 () Bool)
(declare-fun x7921 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x5900 () Bool)
(declare-fun x4925 () Bool)
(declare-fun x3406 () Bool)
(declare-fun x8383 () Bool)
(declare-fun x6684 () Int)
(declare-fun x1305 () Bool)
(declare-fun x3067 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x891 () Bool)
(declare-fun x3274 () Bool)
(declare-fun x4993 () Bool)
(declare-fun x4952 () Bool)
(declare-fun x4110 () Int)
(declare-fun x7021 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x758 () Int)
(declare-fun x6552 () Bool)
(declare-fun x7145 () Bool)
(declare-fun x6129 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x5535 () Int)
(declare-fun x1181 () Int)
(declare-fun x74 () Int)
(declare-fun x4117 () Bool)
(declare-fun x1236 () Int)
(declare-fun x1601 () Int)
(declare-fun x7398 () Int)
(declare-fun x4151 () Int)
(declare-fun x8495 (Int) Int)
(declare-fun x8015 () Int)
(declare-fun x1581 () Int)
(declare-fun x530 () Int)
(declare-fun x7556 () Int)
(declare-fun x4339 () Int)
(declare-fun x2414 () Int)
(declare-fun x5808 () Int)
(declare-fun x3062 () Int)
(declare-fun x169 () Bool)
(declare-fun x6993 () Bool)
(declare-fun x4083 () Bool)
(declare-fun x4365 () Int)
(declare-fun x2716 () Int)
(declare-fun x6985 () Int)
(declare-fun x2394 () Int)
(declare-fun x6505 () Int)
(declare-fun x6184 () Bool)
(declare-fun x6265 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x649 () Int)
(declare-fun x7882 () Int)
(declare-fun x2785 () Int)
(declare-fun x4893 () Bool)
(declare-fun x493 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x6330 () Int)
(declare-fun x4053 () Bool)
(declare-fun x1726 () Int)
(declare-fun x6546 () Int)
(declare-fun x844 () Int)
(declare-fun x4358 () Int)
(declare-fun x5203 () Int)
(declare-fun x985 () Int)
(declare-fun x4204 () Int)
(declare-fun x1641 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x483 () Int)
(declare-fun x3026 () Bool)
(declare-fun x8594 () Int)
(declare-fun x4154 () Int)
(declare-fun x7923 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x4836 () Bool)
(declare-fun x619 () Bool)
(declare-fun x5781 () Int)
(declare-fun x5013 () Bool)
(declare-fun x7169 () Bool)
(declare-fun x1867 () Int)
(declare-fun x8123 () Bool)
(declare-fun x7922 () Int)
(declare-fun x1245 () Bool)
(declare-fun x1145 () Int)
(declare-fun x1101 () Bool)
(declare-fun x6222 () Bool)
(declare-fun x519 () Int)
(declare-fun x6407 () Int)
(declare-fun x3203 () Bool)
(declare-fun x2392 () Int)
(declare-fun x7987 () Bool)
(declare-fun x874 () Int)
(declare-fun x5322 () Bool)
(declare-fun x2696 () Int)
(declare-fun x2787 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x64 () Bool)
(declare-fun x6959 () Int)
(declare-fun x3753 () Int)
(declare-fun x4672 () Int)
(declare-fun x2269 () Int)
(declare-fun x2190 () Int)
(declare-fun x2964 () Bool)
(declare-fun x5316 () Bool)
(declare-fun x7451 () Int)
(declare-fun x3678 () Int)
(declare-fun x5431 () Int)
(declare-fun x2824 () Int)
(declare-fun x4518 () Bool)
(declare-fun x615 () Bool)
(declare-fun x994 () Int)
(declare-fun x1814 () Bool)
(declare-fun x692 () Int)
(declare-fun x8514 () Bool)
(declare-fun x4026 () Int)
(declare-fun x3690 () Bool)
(declare-fun x8142 () Int)
(declare-fun x3758 () Int)
(declare-fun x584 () Bool)
(declare-fun x3252 () Bool)
(declare-fun x568 () Int)
(declare-fun x1023 () Bool)
(declare-fun x4921 () Bool)
(declare-fun x3988 (Int) Int)
(declare-fun x5574 () Int)
(declare-fun x1231 () Int)
(declare-fun x5576 () Bool)
(declare-fun x6167 () Bool)
(declare-fun x2956 () Int)
(declare-fun x6986 () Bool)
(declare-fun x3806 () Bool)
(declare-fun x4875 () Int)
(declare-fun x1034 () Bool)
(declare-fun x3339 () Int)
(declare-fun x4880 () Int)
(declare-fun x7969 () Int)
(declare-fun x5739 () Int)
(declare-fun x2054 () Int)
(declare-fun x1890 () Int)
(declare-fun x6143 (Int) Int)
(declare-fun x7751 () Bool)
(declare-fun x263 () Bool)
(declare-fun x5674 () Int)
(declare-fun x7133 () Bool)
(declare-fun x7479 () Int)
(declare-fun x1329 () Int)
(declare-fun x3779 () Bool)
(declare-fun x5235 () Bool)
(declare-fun x2305 () Int)
(declare-fun x7167 () Bool)
(declare-fun x804 () Bool)
(declare-fun x7387 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x16 () Int)
(declare-fun x7627 () Int)
(declare-fun x5570 () Bool)
(declare-fun x2865 () Bool)
(declare-fun x350 () Bool)
(declare-fun x1010 () Int)
(declare-fun x4641 () Bool)
(declare-fun x7216 () Int)
(declare-fun x4609 () Bool)
(declare-fun x108 () Int)
(declare-fun x6603 () Int)
(declare-fun x2780 () Int)
(declare-fun x7458 () Bool)
(declare-fun x6642 () Bool)
(declare-fun x7804 () Bool)
(declare-fun x3421 () Bool)
(declare-fun x8429 () Int)
(declare-fun x1681 () Bool)
(declare-fun x6770 () Bool)
(declare-fun x1426 () Int)
(declare-fun x3732 () Bool)
(declare-fun x4765 () Bool)
(declare-fun x6097 () Bool)
(declare-fun x4152 () Int)
(declare-fun x1131 () Bool)
(declare-fun x4797 () Int)
(declare-fun x8465 () Bool)
(declare-fun x759 () Int)
(declare-fun x835 () Int)
(declare-fun x8543 () Int)
(declare-fun x3282 () Int)
(declare-fun x4482 () Int)
(declare-fun x4670 () Int)
(declare-fun x2470 () Bool)
(declare-fun x1584 () Int)
(declare-fun x7111 () Int)
(declare-fun x2467 () Bool)
(declare-fun x684 () Bool)
(declare-fun x4567 () Int)
(declare-fun x4515 () Bool)
(declare-fun x1557 () Int)
(declare-fun x941 () Bool)
(declare-fun x5552 () Int)
(declare-fun x4265 () Int)
(declare-fun x3078 () Int)
(declare-fun x5659 () Int)
(declare-fun x1424 () Bool)
(declare-fun x81 () Int)
(declare-fun x6577 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x5502 () Int)
(declare-fun x2621 () Bool)
(declare-fun x5498 () Int)
(declare-fun x5625 () Bool)
(declare-fun x6858 () Int)
(declare-fun x8203 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x4510 () Int)
(declare-fun x7550 () Int)
(declare-fun x5697 () Bool)
(declare-fun x1138 () Int)
(declare-fun x6285 () Bool)
(declare-fun x2529 () Int)
(declare-fun x6730 () Bool)
(declare-fun x8478 () Int)
(declare-fun x7285 () Int)
(declare-fun x2372 () Int)
(declare-fun x6631 () Bool)
(declare-fun x5833 () Int)
(declare-fun x4984 () Bool)
(declare-fun x2094 () Int)
(declare-fun x5853 () Int)
(declare-fun x4436 () Bool)
(declare-fun x8490 () Int)
(declare-fun x361 (Int) Int)
(declare-fun x883 () Int)
(declare-fun x2590 () Bool)
(declare-fun x7160 () Int)
(declare-fun x3076 () Int)
(declare-fun x2362 () Int)
(declare-fun x265 () Int)
(declare-fun x7393 () Int)
(declare-fun x5234 () Bool)
(declare-fun x3514 () Int)
(declare-fun x4723 () Bool)
(declare-fun x6046 () Int)
(declare-fun x3670 () Bool)
(declare-fun x7875 () Int)
(declare-fun x5102 () Bool)
(declare-fun x2510 () Int)
(declare-fun x6947 () Int)
(declare-fun x8384 () Int)
(declare-fun x7303 () Bool)
(declare-fun x3613 () Int)
(declare-fun x239 () Int)
(declare-fun x7028 () Int)
(declare-fun x7577 () Int)
(declare-fun x1353 () Int)
(declare-fun x7942 () Int)
(declare-fun x1603 () Bool)
(declare-fun x3709 () Bool)
(declare-fun x5607 () Int)
(declare-fun x8283 () Bool)
(declare-fun x269 () Bool)
(declare-fun x4852 () Bool)
(declare-fun x6557 () Int)
(declare-fun x4967 () Bool)
(declare-fun x6388 () Bool)
(declare-fun x423 () Int)
(declare-fun x4035 () Int)
(declare-fun x2175 () Int)
(declare-fun x1135 () Int)
(declare-fun x6065 () Int)
(declare-fun x6373 (Int) Int)
(declare-fun x3549 () Int)
(declare-fun x7432 () Int)
(declare-fun x2402 () Bool)
(declare-fun x128 () Int)
(declare-fun x2052 () Int)
(declare-fun x929 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x1433 () Int)
(declare-fun x378 () Bool)
(declare-fun x2816 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x2514 () Bool)
(declare-fun x225 () Int)
(declare-fun x3427 () Bool)
(declare-fun x1415 () Int)
(declare-fun x3460 () Bool)
(declare-fun x8227 () Int)
(declare-fun x1388 () Int)
(declare-fun x4332 () Bool)
(declare-fun x7481 () Bool)
(declare-fun x5865 () Int)
(declare-fun x7302 () Int)
(declare-fun x4340 () Int)
(declare-fun x6344 () Bool)
(declare-fun x5845 () Int)
(declare-fun x7476 () Int)
(declare-fun x2998 () Int)
(declare-fun x4552 () Bool)
(declare-fun x2420 () Int)
(declare-fun x4218 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x7135 () Int)
(declare-fun x8396 () Int)
(declare-fun x4004 () Int)
(declare-fun x7806 () Int)
(declare-fun x628 () Bool)
(declare-fun x6820 () Int)
(declare-fun x5940 () Int)
(declare-fun x7148 () Bool)
(declare-fun x6273 () Int)
(declare-fun x7293 () Int)
(declare-fun x2532 () Int)
(declare-fun x5459 () Int)
(declare-fun x2530 () Int)
(declare-fun x4801 () Int)
(declare-fun x8115 () Bool)
(declare-fun x4668 () Bool)
(declare-fun x6276 () Int)
(declare-fun x2068 () Int)
(declare-fun x3983 () Int)
(declare-fun x1911 () Int)
(declare-fun x4792 () Bool)
(declare-fun x5365 () Bool)
(declare-fun x7671 () Int)
(declare-fun x4012 () Bool)
(declare-fun x2885 () Int)
(declare-fun x4655 () Bool)
(declare-fun x4825 () Int)
(declare-fun x6892 () Int)
(declare-fun x4267 () Bool)
(declare-fun x1910 () Int)
(declare-fun x3816 () Int)
(declare-fun x68 () Bool)
(declare-fun x4269 () Bool)
(declare-fun x8184 () Int)
(declare-fun x3725 () Int)
(declare-fun x7845 () Bool)
(declare-fun x5992 () Int)
(declare-fun x5866 () Int)
(declare-fun x1897 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x3950 () Bool)
(declare-fun x7612 () Int)
(declare-fun x2522 () Bool)
(declare-fun x7319 () Bool)
(declare-fun x8305 () Int)
(declare-fun x2438 () Int)
(declare-fun x2819 () Bool)
(declare-fun x147 () Bool)
(declare-fun x6731 () Int)
(declare-fun x8034 () Int)
(declare-fun x491 () Int)
(declare-fun x5017 () Int)
(declare-fun x8412 () Bool)
(declare-fun x8193 () Bool)
(declare-fun x316 () Int)
(declare-fun x5378 () Bool)
(declare-fun x6403 () Bool)
(declare-fun x4828 () Int)
(declare-fun x2639 () Bool)
(declare-fun x1649 () Int)
(declare-fun x7661 () Bool)
(declare-fun x3286 () Int)
(declare-fun x4813 () Int)
(declare-fun x5511 () Int)
(declare-fun x2727 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x5581 () Int)
(declare-fun x2762 () Int)
(declare-fun x2571 () Bool)
(declare-fun x603 () Int)
(declare-fun x730 () Bool)
(declare-fun x2991 () Bool)
(declare-fun x4643 () Int)
(declare-fun x7467 () Bool)
(declare-fun x1592 () Int)
(declare-fun x3058 () Int)
(declare-fun x256 () Int)
(declare-fun x2542 () Int)
(declare-fun x6255 () Int)
(declare-fun x2906 () Int)
(declare-fun x387 () Int)
(declare-fun x2562 () Int)
(declare-fun x2775 () Bool)
(declare-fun x8177 () Int)
(declare-fun x6828 () Bool)
(declare-fun x7323 () Bool)
(declare-fun x901 () Bool)
(declare-fun x325 () Bool)
(declare-fun x3848 () Bool)
(declare-fun x6645 () Int)
(declare-fun x1662 () Int)
(declare-fun x3660 () Bool)
(declare-fun x832 () Bool)
(declare-fun x6896 () Bool)
(declare-fun x8452 () Int)
(declare-fun x3688 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x6512 () Int)
(declare-fun x2406 () Int)
(declare-fun x3250 () Int)
(declare-fun x2660 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x5443 () Bool)
(declare-fun x3711 () Int)
(declare-fun x8313 () Int)
(declare-fun x3247 () Int)
(declare-fun x6033 () Bool)
(declare-fun x8020 () Int)
(declare-fun x3064 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x337 () Bool)
(declare-fun x8248 () Bool)
(declare-fun x8169 () Int)
(declare-fun x6818 () Bool)
(declare-fun x5172 () Int)
(declare-fun x1634 () Int)
(declare-fun x2461 () Int)
(declare-fun x4607 () Bool)
(declare-fun x158 () Int)
(declare-fun x7024 () Int)
(declare-fun x523 () Int)
(declare-fun x19 () Int)
(declare-fun x7978 () Int)
(declare-fun x2875 () Bool)
(declare-fun x8031 () Int)
(declare-fun x7247 () Int)
(declare-fun x2059 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x773 () Int)
(declare-fun x7964 () Bool)
(declare-fun x812 () Int)
(declare-fun x1926 () Bool)
(declare-fun x6660 () Bool)
(declare-fun x7055 () Int)
(declare-fun x2812 () Bool)
(declare-fun x4092 () Int)
(declare-fun x1334 () Int)
(declare-fun x8347 () Bool)
(declare-fun x3072 () Int)
(declare-fun x607 () Bool)
(declare-fun x4326 () Int)
(declare-fun x4918 () Int)
(declare-fun x1494 () Bool)
(declare-fun x5799 () Int)
(declare-fun x3702 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x748 () Int)
(declare-fun x2162 () Bool)
(declare-fun x8583 () Bool)
(declare-fun x4600 () Bool)
(declare-fun x4113 () Int)
(declare-fun x5335 () Int)
(declare-fun x722 () Bool)
(declare-fun x710 () Int)
(declare-fun x5171 () Int)
(declare-fun x5308 (Int) Int)
(declare-fun x62 () Int)
(declare-fun x3870 () Bool)
(declare-fun x2600 () Int)
(declare-fun x7838 () Int)
(declare-fun x6395 () Int)
(declare-fun x4293 () Int)
(declare-fun x5787 () Int)
(declare-fun x5795 () Bool)
(declare-fun x786 () Int)
(declare-fun x6793 () Bool)
(declare-fun x4555 () Int)
(declare-fun x5614 () Int)
(declare-fun x8301 () Int)
(declare-fun x5271 () Int)
(declare-fun x5645 () Bool)
(declare-fun x2450 () Bool)
(declare-fun x2789 () Int)
(declare-fun x5317 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x7716 () Int)
(declare-fun x1737 () Int)
(declare-fun x6910 () Int)
(declare-fun x8328 () Int)
(declare-fun x3287 () Int)
(declare-fun x8135 () Int)
(declare-fun x4617 () Int)
(declare-fun x7774 () Int)
(declare-fun x1309 () Int)
(declare-fun x2022 () Int)
(declare-fun x2559 () Int)
(declare-fun x7271 () Bool)
(declare-fun x794 () Bool)
(declare-fun x620 () Int)
(declare-fun x7339 () Int)
(declare-fun x6571 () Int)
(declare-fun x4728 () Bool)
(declare-fun x4104 () Int)
(declare-fun x5162 () Bool)
(declare-fun x8132 () Bool)
(declare-fun x5682 () Bool)
(declare-fun x1276 () Int)
(declare-fun x6482 () Bool)
(declare-fun x5412 () Int)
(declare-fun x8067 () Int)
(declare-fun x8576 () Int)
(declare-fun x8121 () Int)
(declare-fun x6573 () Bool)
(declare-fun x6471 () Bool)
(declare-fun x6204 () Int)
(declare-fun x7930 () Bool)
(declare-fun x7866 () Int)
(declare-fun x6187 () Int)
(declare-fun x5379 () Int)
(declare-fun x7151 () Int)
(declare-fun x1495 () Int)
(declare-fun x5384 () Int)
(declare-fun x1468 () Int)
(declare-fun x5024 () Int)
(declare-fun x7141 () Int)
(declare-fun x8049 () Int)
(declare-fun x484 () Int)
(declare-fun x5406 () Int)
(declare-fun x4583 () Int)
(declare-fun x2931 () Int)
(declare-fun x1269 () Bool)
(declare-fun x7101 () Int)
(declare-fun x5291 () Bool)
(declare-fun x4194 () Int)
(declare-fun x4174 () Bool)
(declare-fun x2354 () Int)
(declare-fun x3974 () Bool)
(declare-fun x4781 () Bool)
(declare-fun x1859 () Int)
(declare-fun x5803 () Bool)
(declare-fun x363 () Int)
(declare-fun x4097 () Int)
(declare-fun x8408 () Bool)
(declare-fun x3724 () Bool)
(declare-fun x1747 () Int)
(declare-fun x3394 () Int)
(declare-fun x3886 () Bool)
(declare-fun x7553 () Int)
(declare-fun x3173 () Int)
(declare-fun x5800 () Bool)
(declare-fun x8086 () Int)
(declare-fun x3598 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x5664 () Bool)
(declare-fun x5867 () Bool)
(declare-fun x140 () Int)
(declare-fun x4615 () Int)
(declare-fun x1733 () Bool)
(declare-fun x479 () Int)
(declare-fun x6132 () Int)
(declare-fun x1943 () Bool)
(declare-fun x8292 () Int)
(declare-fun x3524 () Int)
(declare-fun x1343 () Bool)
(declare-fun x7870 () Int)
(declare-fun x8457 () Int)
(declare-fun x6509 () Bool)
(declare-fun x1886 () Int)
(declare-fun x930 () Int)
(declare-fun x3390 () Int)
(declare-fun x3628 () Bool)
(declare-fun x7936 () Bool)
(declare-fun x4683 () Bool)
(declare-fun x7925 () Bool)
(declare-fun x2196 () Int)
(declare-fun x3655 () Int)
(declare-fun x7161 () Bool)
(declare-fun x4424 () Bool)
(declare-fun x7800 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x4500 () Bool)
(declare-fun x197 () Int)
(declare-fun x8026 () Bool)
(declare-fun x6168 () Int)
(declare-fun x7759 () Int)
(declare-fun x5914 () Bool)
(declare-fun x143 () Bool)
(declare-fun x6476 () Int)
(declare-fun x5095 () Int)
(declare-fun x6613 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x7535 () Int)
(declare-fun x6900 () Bool)
(declare-fun x7073 () Bool)
(declare-fun x2581 () Bool)
(declare-fun x5904 () Int)
(declare-fun x3958 () Int)
(declare-fun x7326 () Int)
(declare-fun x7727 () Bool)
(declare-fun x159 () Bool)
(declare-fun x5268 () Int)
(declare-fun x5790 () Int)
(declare-fun x2356 () Bool)
(declare-fun x5871 () Bool)
(declare-fun x7573 () Bool)
(declare-fun x2815 () Int)
(declare-fun x7182 () Int)
(declare-fun x73 () Bool)
(declare-fun x7368 () Int)
(declare-fun x4919 () Int)
(declare-fun x7349 () Bool)
(declare-fun x6780 () Int)
(declare-fun x576 () Bool)
(declare-fun x5037 () Bool)
(declare-fun x3706 () Int)
(declare-fun x740 () Int)
(declare-fun x4075 () Bool)
(declare-fun x1146 () Int)
(declare-fun x7279 () Bool)
(declare-fun x4721 () Int)
(declare-fun x4354 () Int)
(declare-fun x1531 () Int)
(declare-fun x1465 () Bool)
(declare-fun x2135 () Int)
(declare-fun x6878 () Int)
(declare-fun x4195 () Int)
(declare-fun x579 () Int)
(declare-fun x2143 () Int)
(declare-fun x7246 () Int)
(declare-fun x6384 () Bool)
(declare-fun x7019 () Int)
(declare-fun x3328 () Int)
(declare-fun x7656 () Bool)
(declare-fun x7377 () Bool)
(declare-fun x7157 () Bool)
(declare-fun x5438 () Bool)
(declare-fun x8206 () Int)
(declare-fun x5400 () Int)
(declare-fun x5818 () Bool)
(declare-fun x6835 () Bool)
(declare-fun x3464 () Int)
(declare-fun x4722 () Bool)
(declare-fun x4361 () Int)
(declare-fun x6263 () Int)
(declare-fun x8373 () Int)
(declare-fun x3157 () Int)
(declare-fun x3908 () Bool)
(declare-fun x7780 () Int)
(declare-fun x4277 () Int)
(declare-fun x2211 () Int)
(declare-fun x8416 () Int)
(declare-fun x2447 () Int)
(declare-fun x2769 () Bool)
(declare-fun x2472 () Int)
(declare-fun x1716 () Int)
(declare-fun x4144 () Bool)
(declare-fun x7139 () Bool)
(declare-fun x4767 () Bool)
(declare-fun x3982 () Int)
(declare-fun x5644 () Int)
(declare-fun x1940 () Bool)
(declare-fun x6776 () Int)
(declare-fun x1416 () Bool)
(declare-fun x8079 () Int)
(declare-fun x4273 () Bool)
(declare-fun x6014 () Bool)
(declare-fun x4620 () Int)
(declare-fun x1785 () Bool)
(declare-fun x1578 () Int)
(declare-fun x5635 () Int)
(declare-fun x3441 () Int)
(declare-fun x2749 () Int)
(declare-fun x1159 () Bool)
(declare-fun x7122 () Int)
(declare-fun x976 () Int)
(declare-fun x8503 () Bool)
(declare-fun x4207 () Bool)
(declare-fun x285 () Bool)
(declare-fun x602 () Int)
(declare-fun x5748 () Bool)
(declare-fun x6173 () Int)
(declare-fun x155 () Bool)
(declare-fun x6488 () Bool)
(declare-fun x6618 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x7301 () Bool)
(declare-fun x7001 () Int)
(declare-fun x1139 () Bool)
(declare-fun x6872 () Bool)
(declare-fun x5149 () Bool)
(declare-fun x5679 () Int)
(declare-fun x3701 () Int)
(declare-fun x4881 () Bool)
(declare-fun x7159 () Bool)
(declare-fun x7910 () Int)
(declare-fun x6170 () Int)
(declare-fun x8127 () Int)
(declare-fun x611 () Bool)
(declare-fun x2347 () Int)
(declare-fun x190 () Int)
(declare-fun x5100 () Bool)
(declare-fun x5669 () Int)
(declare-fun x7392 () Int)
(declare-fun x426 () Bool)
(declare-fun x7767 () Int)
(declare-fun x8148 () Bool)
(declare-fun x8024 () Int)
(declare-fun x7407 () Bool)
(declare-fun x7961 () Bool)
(declare-fun x581 () Bool)
(declare-fun x3849 () Bool)
(declare-fun x2047 () Int)
(declare-fun x7214 () Bool)
(declare-fun x7920 () Int)
(declare-fun x497 () Bool)
(declare-fun x8446 () Int)
(declare-fun x7231 () Bool)
(declare-fun x588 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x1179 () Int)
(declare-fun x5928 () Bool)
(declare-fun x1806 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x6003 () Int)
(declare-fun x6027 () Int)
(declare-fun x1682 () Int)
(declare-fun x7445 () Bool)
(declare-fun x2652 () Int)
(declare-fun x2623 () Int)
(declare-fun x5680 () Bool)
(declare-fun x258 () Int)
(declare-fun x4896 () Int)
(declare-fun x6312 () Bool)
(declare-fun x4295 () Int)
(declare-fun x8179 () Int)
(declare-fun x746 () Bool)
(declare-fun x3253 () Bool)
(declare-fun x3523 () Bool)
(declare-fun x8358 () Int)
(declare-fun x4569 () Int)
(declare-fun x3353 () Bool)
(declare-fun x3627 () Bool)
(declare-fun x7263 () Int)
(declare-fun x6913 () Bool)
(declare-fun x3511 () Bool)
(declare-fun x2723 () Int)
(declare-fun x217 () Int)
(declare-fun x8410 () Int)
(declare-fun x8344 (Int) Int)
(declare-fun x2970 () Int)
(declare-fun x6746 () Bool)
(declare-fun x75 () Bool)
(declare-fun x7306 () Int)
(declare-fun x6768 () Int)
(declare-fun x2900 () Int)
(declare-fun x4192 () Bool)
(declare-fun x2169 () Int)
(declare-fun x8129 () Int)
(declare-fun x7004 () Int)
(declare-fun x1865 () Bool)
(declare-fun x3108 () Int)
(declare-fun x1887 () Int)
(declare-fun x1690 () Int)
(declare-fun x3221 () Int)
(declare-fun x4085 () Int)
(declare-fun x515 () Int)
(declare-fun x1663 () Int)
(declare-fun x853 (Int) Int)
(declare-fun x6601 () Bool)
(declare-fun x5200 () Int)
(declare-fun x3393 () Int)
(declare-fun x527 () Bool)
(declare-fun x7562 () Bool)
(declare-fun x3044 () Int)
(declare-fun x4761 () Int)
(declare-fun x6791 () Bool)
(declare-fun x4635 () Int)
(declare-fun x5872 () Bool)
(declare-fun x5292 () Bool)
(declare-fun x3305 () Int)
(declare-fun x5712 () Bool)
(declare-fun x6112 () Int)
(declare-fun x6398 () Int)
(declare-fun x1820 () Int)
(declare-fun x969 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x506 (Int) Int)
(declare-fun x8012 () Bool)
(declare-fun x3344 () Bool)
(declare-fun x4451 () Int)
(declare-fun x4296 () Bool)
(declare-fun x4698 () Bool)
(declare-fun x7889 () Int)
(declare-fun x6712 () Bool)
(declare-fun x2070 () Int)
(declare-fun x6072 () Bool)
(declare-fun x374 () Int)
(declare-fun x292 () Int)
(declare-fun x2512 () Bool)
(declare-fun x5089 () Int)
(declare-fun x4703 () Int)
(declare-fun x1809 () Bool)
(declare-fun x709 () Bool)
(declare-fun x1422 () Int)
(declare-fun x3579 () Int)
(declare-fun x6869 () Int)
(declare-fun x384 () Int)
(declare-fun x4857 () Bool)
(declare-fun x8315 () Int)
(declare-fun x4088 () Int)
(declare-fun x2029 () Int)
(declare-fun x4094 () Int)
(declare-fun x251 () Bool)
(declare-fun x4771 () Int)
(declare-fun x273 () Int)
(declare-fun x5490 () Int)
(declare-fun x5543 () Bool)
(declare-fun x763 () Int)
(declare-fun x2322 () Int)
(declare-fun x4498 () Int)
(declare-fun x320 () Int)
(declare-fun x2161 () Int)
(declare-fun x4889 () Bool)
(declare-fun x6777 () Bool)
(declare-fun x3913 () Bool)
(declare-fun x3811 () Int)
(declare-fun x8360 () Int)
(declare-fun x8202 () Int)
(declare-fun x7907 () Bool)
(declare-fun x61 () Int)
(declare-fun x8211 () Int)
(declare-fun x8100 () Int)
(declare-fun x7815 () Bool)
(declare-fun x6614 () Int)
(declare-fun x2912 () Int)
(declare-fun x3066 () Int)
(declare-fun x4920 () Int)
(declare-fun x3372 () Bool)
(declare-fun x8006 () Int)
(declare-fun x1016 () Bool)
(declare-fun x8269 () Bool)
(declare-fun x2198 () Int)
(declare-fun x8069 () Int)
(declare-fun x2207 () Bool)
(declare-fun x3847 () Bool)
(declare-fun x6354 () Int)
(declare-fun x6316 () Bool)
(declare-fun x8491 () Int)
(declare-fun x490 () Int)
(declare-fun x4423 () Bool)
(declare-fun x6244 () Bool)
(declare-fun x1661 () Int)
(declare-fun x919 () Bool)
(declare-fun x3712 () Int)
(declare-fun x1506 () Int)
(declare-fun x1804 () Bool)
(declare-fun x2675 () Int)
(declare-fun x4493 () Int)
(declare-fun x7317 () Int)
(declare-fun x1980 () Int)
(declare-fun x281 () Int)
(declare-fun x6994 () Int)
(declare-fun x4129 () Bool)
(declare-fun x6930 () Int)
(declare-fun x7097 () Bool)
(declare-fun x2528 () Int)
(declare-fun x174 () Bool)
(declare-fun x1163 () Int)
(declare-fun x5347 () Int)
(declare-fun x6563 () Int)
(declare-fun x8022 () Bool)
(declare-fun x6360 () Int)
(declare-fun x6100 () Int)
(declare-fun x1542 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x7296 () Bool)
(declare-fun x163 () Bool)
(declare-fun x7549 () Bool)
(declare-fun x7687 () Int)
(declare-fun x4585 () Bool)
(declare-fun x4745 () Int)
(declare-fun x7255 () Bool)
(declare-fun x657 () Bool)
(declare-fun x4650 () Bool)
(declare-fun x7207 () Bool)
(declare-fun x3352 () Int)
(declare-fun x540 () Int)
(declare-fun x1946 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x1175 () Int)
(declare-fun x4845 () Int)
(declare-fun x6927 () Int)
(declare-fun x2821 () Int)
(declare-fun x7022 () Bool)
(declare-fun x724 () Int)
(declare-fun x6253 () Int)
(declare-fun x5503 () Int)
(declare-fun x6088 () Int)
(declare-fun x745 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x8314 () Int)
(declare-fun x2928 () Int)
(declare-fun x362 () Int)
(declare-fun x4283 () Bool)
(declare-fun x7555 () Bool)
(declare-fun x3663 () Int)
(declare-fun x902 () Int)
(declare-fun x1311 () Int)
(declare-fun x3734 () Bool)
(declare-fun x3045 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x1283 () Int)
(declare-fun x738 () Bool)
(declare-fun x6889 () Bool)
(declare-fun x4344 () Int)
(declare-fun x8350 () Bool)
(declare-fun x686 () Bool)
(declare-fun x98 () Int)
(declare-fun x7446 () Bool)
(declare-fun x5374 () Int)
(declare-fun x2585 () Int)
(declare-fun x2950 () Int)
(declare-fun x3918 () Bool)
(declare-fun x321 () Int)
(declare-fun x3843 () Bool)
(declare-fun x3357 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x6106 () Bool)
(declare-fun x7707 () Int)
(declare-fun x6664 () Bool)
(declare-fun x2424 () Int)
(declare-fun x7470 () Bool)
(declare-fun x8165 () Bool)
(declare-fun x4334 () Int)
(declare-fun x4856 () Int)
(declare-fun x5028 () Int)
(declare-fun x4387 () Bool)
(declare-fun x4665 () Bool)
(declare-fun x6035 () Int)
(declare-fun x2690 () Int)
(declare-fun x342 () Int)
(declare-fun x7892 () Bool)
(declare-fun x3874 () Bool)
(declare-fun x402 () Int)
(declare-fun x2595 () Bool)
(declare-fun x4023 () Bool)
(declare-fun x37 () Bool)
(declare-fun x6356 () Int)
(declare-fun x6655 () Int)
(declare-fun x4602 () Int)
(declare-fun x3278 () Int)
(declare-fun x2265 () Int)
(declare-fun x3615 () Int)
(declare-fun x45 () Bool)
(declare-fun x1860 () Int)
(declare-fun x4302 () Int)
(declare-fun x6514 () Int)
(declare-fun x4355 () Int)
(declare-fun x871 () Bool)
(declare-fun x5978 () Int)
(declare-fun x8110 () Int)
(declare-fun x7086 () Int)
(declare-fun x8498 () Int)
(declare-fun x3362 () Bool)
(declare-fun x1988 () Int)
(declare-fun x518 () Int)
(declare-fun x5984 () Bool)
(declare-fun x5750 () Bool)
(declare-fun x4402 () Bool)
(declare-fun x6920 () Bool)
(declare-fun x570 () Bool)
(declare-fun x5949 () Bool)
(declare-fun x7598 () Int)
(declare-fun x5626 () Int)
(declare-fun x7779 () Bool)
(declare-fun x5325 () Bool)
(declare-fun x7988 () Int)
(declare-fun x5530 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x179 () Int)
(declare-fun x4060 () Int)
(declare-fun x1408 () Bool)
(declare-fun x3333 () Int)
(declare-fun x8278 () Bool)
(declare-fun x5380 () Int)
(declare-fun x725 () Int)
(declare-fun x3697 () Bool)
(declare-fun x4522 () Bool)
(declare-fun x356 () Bool)
(declare-fun x5527 () Int)
(declare-fun x8588 () Int)
(declare-fun x7903 () Bool)
(declare-fun x1819 () Int)
(declare-fun x7277 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x943 () Bool)
(declare-fun x6708 () Int)
(declare-fun x473 () Bool)
(declare-fun x4278 () Int)
(declare-fun x8488 () Bool)
(declare-fun x5108 () Int)
(declare-fun x4137 () Int)
(declare-fun x6378 () Int)
(declare-fun x4954 () Int)
(declare-fun x1207 () Int)
(declare-fun x8274 () Int)
(declare-fun x4654 () Int)
(declare-fun x5590 () Bool)
(declare-fun x4021 () Int)
(declare-fun x728 () Int)
(declare-fun x4597 () Int)
(declare-fun x2659 () Int)
(declare-fun x6502 () Bool)
(declare-fun x8126 () Int)
(declare-fun x4240 () Bool)
(declare-fun x1384 () Int)
(declare-fun x2794 () Int)
(declare-fun x7498 () Bool)
(declare-fun x6239 () Int)
(declare-fun x6358 () Int)
(declare-fun x432 () Bool)
(declare-fun x2858 () Bool)
(declare-fun x5819 () Bool)
(declare-fun x3092 () Int)
(declare-fun x3932 () Bool)
(declare-fun x6301 () Bool)
(declare-fun x8566 () Bool)
(declare-fun x1502 () Int)
(declare-fun x4841 () Int)
(declare-fun x1766 () Int)
(declare-fun x7273 () Int)
(declare-fun x1274 () Int)
(declare-fun x5275 () Bool)
(declare-fun x279 () Bool)
(declare-fun x3904 () Int)
(declare-fun x2274 () Bool)
(declare-fun x4356 () Bool)
(declare-fun x7402 () Int)
(declare-fun x3327 () Bool)
(declare-fun x4758 () Int)
(declare-fun x5565 () Int)
(declare-fun x2386 () Int)
(declare-fun x5704 () Int)
(declare-fun x3004 () Int)
(declare-fun x1888 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x5373 () Int)
(declare-fun x2369 () Int)
(declare-fun x5355 () Bool)
(declare-fun x2187 (Int) Int)
(declare-fun x7947 () Bool)
(declare-fun x6342 () Int)
(declare-fun x4469 () Int)
(declare-fun x7783 () Bool)
(declare-fun x2826 () Int)
(declare-fun x2388 () Bool)
(declare-fun x3484 () Bool)
(declare-fun x5114 () Bool)
(declare-fun x4564 () Int)
(declare-fun x1381 () Bool)
(declare-fun x8077 () Bool)
(declare-fun x3632 () Bool)
(declare-fun x5724 () Bool)
(declare-fun x7805 () Int)
(declare-fun x6754 () Int)
(declare-fun x6543 () Bool)
(declare-fun x8521 () Bool)
(declare-fun x7701 () Bool)
(declare-fun x4573 () Bool)
(declare-fun x1800 () Int)
(declare-fun x3733 () Bool)
(declare-fun x3563 () Int)
(declare-fun x4732 () Int)
(declare-fun x2338 () Bool)
(declare-fun x461 () Int)
(declare-fun x30 () Bool)
(declare-fun x5166 () Bool)
(declare-fun x7833 () Int)
(declare-fun x4900 () Bool)
(declare-fun x7617 () Int)
(declare-fun x8405 () Bool)
(declare-fun x5583 () Bool)
(declare-fun x4484 () Int)
(declare-fun x246 () Int)
(declare-fun x4380 (Int) Int)
(declare-fun x8596 () Bool)
(declare-fun x7217 () Int)
(declare-fun x650 () Int)
(declare-fun x5228 () Bool)
(declare-fun x4591 () Bool)
(declare-fun x3877 () Bool)
(declare-fun x814 () Bool)
(declare-fun x7954 () Int)
(declare-fun x3841 () Int)
(declare-fun x1017 () Int)
(declare-fun x7245 () Int)
(declare-fun x7117 () Int)
(declare-fun x4046 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x5065 () Int)
(declare-fun x7272 () Bool)
(declare-fun x3971 () Bool)
(declare-fun x403 () Int)
(declare-fun x7447 () Int)
(declare-fun x1189 () Int)
(declare-fun x6957 () Int)
(declare-fun x7297 () Int)
(declare-fun x2521 () Int)
(declare-fun x7746 () Bool)
(declare-fun x528 () Bool)
(declare-fun x135 () Int)
(declare-fun x5366 () Int)
(declare-fun x6154 () Int)
(declare-fun x865 () Int)
(declare-fun x1827 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x6811 () Int)
(declare-fun x4127 () Bool)
(declare-fun x5524 () Bool)
(declare-fun x6928 () Bool)
(declare-fun x8331 () Int)
(declare-fun x8591 () Int)
(declare-fun x3581 () Bool)
(declare-fun x2164 () Int)
(declare-fun x2908 () Bool)
(declare-fun x7693 () Bool)
(declare-fun x2580 () Bool)
(declare-fun x3642 () Bool)
(declare-fun x7897 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x2859 () Int)
(declare-fun x6135 () Int)
(declare-fun x7937 () Int)
(declare-fun x1425 () Bool)
(declare-fun x2280 () Bool)
(declare-fun x5012 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x2830 () Int)
(declare-fun x8403 () Int)
(declare-fun x953 () Int)
(declare-fun x3407 () Bool)
(declare-fun x6864 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x5199 () Bool)
(declare-fun x8197 () Int)
(declare-fun x1227 () Int)
(declare-fun x1224 () Int)
(declare-fun x1562 () Int)
(declare-fun x6446 () Int)
(declare-fun x7769 () Int)
(declare-fun x7685 () Int)
(declare-fun x8546 () Int)
(declare-fun x6362 () Bool)
(declare-fun x2288 () Int)
(declare-fun x7142 () Int)
(declare-fun x7710 () Int)
(declare-fun x2694 () Bool)
(declare-fun x4667 () Int)
(declare-fun x2466 () Int)
(declare-fun x5173 () Bool)
(declare-fun x6418 () Bool)
(declare-fun x7390 () Bool)
(declare-fun x3176 () Int)
(declare-fun x785 () Int)
(declare-fun x1292 () Bool)
(declare-fun x3669 () Int)
(declare-fun x3324 () Bool)
(declare-fun x4126 () Int)
(declare-fun x1719 () Bool)
(declare-fun x7713 () Bool)
(declare-fun x6011 (Int) Int)
(declare-fun x6457 () Int)
(declare-fun x7771 () Bool)
(declare-fun x1851 () Int)
(declare-fun x982 () Int)
(declare-fun x3251 () Int)
(declare-fun x4923 () Bool)
(declare-fun x5643 () Bool)
(declare-fun x57 () Bool)
(declare-fun x1031 () Int)
(declare-fun x1501 () Int)
(declare-fun x5650 () Int)
(declare-fun x613 () Bool)
(declare-fun x822 () Bool)
(declare-fun x4560 () Bool)
(declare-fun x3345 () Int)
(declare-fun x971 () Bool)
(declare-fun x7781 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x947 () Int)
(declare-fun x7416 () Int)
(declare-fun x2358 () Int)
(declare-fun x5294 () Bool)
(declare-fun x5111 () Bool)
(declare-fun x8198 () Bool)
(declare-fun x6214 () Bool)
(declare-fun x1768 () Int)
(declare-fun x5925 () Int)
(declare-fun x2460 () Int)
(declare-fun x4501 () Int)
(declare-fun x7904 () Int)
(declare-fun x2209 () Bool)
(declare-fun x7380 () Bool)
(declare-fun x7893 () Int)
(declare-fun x3489 () Int)
(declare-fun x7025 () Int)
(declare-fun x3258 () Int)
(declare-fun x5807 () Int)
(declare-fun x2042 () Bool)
(declare-fun x5146 () Bool)
(declare-fun x5007 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x8447 () Int)
(declare-fun x6503 () Int)
(declare-fun x7099 (Int) Int)
(declare-fun x5352 () Bool)
(declare-fun x1994 () Int)
(declare-fun x702 () Int)
(declare-fun x5693 () Int)
(declare-fun x3699 () Bool)
(declare-fun x59 () Int)
(declare-fun x2538 () Int)
(declare-fun x1037 () Bool)
(declare-fun x7738 () Bool)
(declare-fun x1962 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1133 () Bool)
(declare-fun x803 () Int)
(declare-fun x918 () Bool)
(declare-fun x5278 () Int)
(declare-fun x5120 () Bool)
(declare-fun x4388 () Bool)
(declare-fun x5282 () Int)
(declare-fun x2314 () Int)
(declare-fun x34 () Int)
(declare-fun x5391 () Int)
(declare-fun x1448 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x3051 () Int)
(declare-fun x6151 () Int)
(declare-fun x5331 () Int)
(declare-fun x1124 () Bool)
(declare-fun x984 () Int)
(declare-fun x399 () Int)
(declare-fun x5437 () Int)
(declare-fun x7103 () Int)
(declare-fun x6082 () Int)
(declare-fun x7395 () Bool)
(declare-fun x3891 () Int)
(declare-fun x2704 () Bool)
(declare-fun x7886 () Int)
(declare-fun x7140 () Int)
(declare-fun x106 () Int)
(declare-fun x5858 () Bool)
(declare-fun x8435 () Bool)
(declare-fun x3645 () Int)
(declare-fun x4386 () Int)
(declare-fun x6596 () Bool)
(declare-fun x7343 () Bool)
(declare-fun x7708 () Int)
(declare-fun x7198 () Int)
(declare-fun x6018 () Int)
(declare-fun x3946 () Int)
(declare-fun x564 () Int)
(declare-fun x8056 () Int)
(declare-fun x4791 () Int)
(declare-fun x4782 () Bool)
(declare-fun x3969 () Int)
(declare-fun x2915 () Bool)
(declare-fun x454 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x3912 () Bool)
(declare-fun x7163 () Bool)
(declare-fun x8182 () Int)
(declare-fun x6794 () Int)
(declare-fun x6630 () Bool)
(declare-fun x6771 () Bool)
(declare-fun x4691 () Bool)
(declare-fun x5647 () Int)
(declare-fun x1874 (Int Int) Int)
(declare-fun x7423 () Int)
(declare-fun x6159 () Bool)
(declare-fun x184 () Bool)
(declare-fun x6423 () Int)
(declare-fun x3755 () Bool)
(declare-fun x2711 () Int)
(declare-fun x2279 () Bool)
(declare-fun x5919 () Bool)
(declare-fun x3954 () Bool)
(declare-fun x1084 () Int)
(declare-fun x7144 () Bool)
(declare-fun x6943 () Int)
(declare-fun x2977 () Bool)
(declare-fun x4 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x3666 () Int)
(declare-fun x7827 () Int)
(declare-fun x3391 () Int)
(declare-fun x380 () Int)
(declare-fun x8511 () Int)
(declare-fun x6877 () Int)
(declare-fun x7959 () Int)
(declare-fun x5606 () Int)
(declare-fun x5755 () Int)
(declare-fun x6307 () Bool)
(declare-fun x6769 () Int)
(declare-fun x1297 () Int)
(declare-fun x3705 () Bool)
(declare-fun x2268 () Bool)
(declare-fun x43 () Int)
(declare-fun x8548 () Int)
(declare-fun x3568 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x2795 () Int)
(declare-fun x3996 () Bool)
(declare-fun x385 () Bool)
(declare-fun x539 () Bool)
(declare-fun x6172 (Int) Int)
(declare-fun x1834 () Int)
(declare-fun x3323 () Bool)
(declare-fun x4545 () Int)
(declare-fun x11 () Int)
(declare-fun x1061 () Bool)
(declare-fun x8094 () Bool)
(declare-fun x6566 () Int)
(declare-fun x952 () Bool)
(declare-fun x4849 () Bool)
(declare-fun x6781 () Int)
(declare-fun x2899 () Bool)
(declare-fun x4169 () Int)
(declare-fun x872 () Int)
(declare-fun x3056 () Int)
(declare-fun x5539 () Int)
(declare-fun x3091 () Bool)
(declare-fun x7595 () Bool)
(declare-fun x1957 () Int)
(declare-fun x3432 () Int)
(declare-fun x7739 () Bool)
(declare-fun x6213 () Int)
(declare-fun x7905 () Bool)
(declare-fun x4950 () Bool)
(declare-fun x299 () Bool)
(declare-fun x3823 () Int)
(declare-fun x7360 () Int)
(declare-fun x7299 () Bool)
(declare-fun x447 () Bool)
(declare-fun x3536 () Int)
(declare-fun x340 () Bool)
(declare-fun x5529 () Int)
(declare-fun x8065 () Int)
(declare-fun x7596 () Int)
(declare-fun x1843 () Bool)
(declare-fun x3136 () Int)
(declare-fun x1741 () Int)
(declare-fun x543 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x5915 () Bool)
(declare-fun x7631 () Int)
(declare-fun x2878 () Int)
(declare-fun x6651 () Int)
(declare-fun x5456 () Int)
(declare-fun x330 (Int) Int)
(declare-fun x7399 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x6392 () Int)
(declare-fun x2851 () Bool)
(declare-fun x596 () Int)
(declare-fun x2531 () Bool)
(declare-fun x6961 () Bool)
(declare-fun x5765 () Bool)
(declare-fun x5891 () Int)
(declare-fun x6739 () Int)
(declare-fun x6999 () Bool)
(declare-fun x3140 () Int)
(declare-fun x2277 () Bool)
(declare-fun x377 () Bool)
(declare-fun x2874 () Int)
(declare-fun x6171 () Bool)
(declare-fun x3492 () Bool)
(declare-fun x5760 (Int) Int)
(declare-fun x3707 () Int)
(declare-fun x1370 () Int)
(declare-fun x6389 () Bool)
(declare-fun x6772 () Int)
(declare-fun x8334 (Int) Int)
(declare-fun x7166 () Bool)
(declare-fun x1414 () Int)
(declare-fun x6294 () Bool)
(declare-fun x989 () Bool)
(declare-fun x8453 () Int)
(declare-fun x6368 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x3636 () Int)
(declare-fun x7356 () Int)
(declare-fun x1646 () Int)
(declare-fun x277 () Bool)
(declare-fun x6861 () Int)
(declare-fun x1953 () Bool)
(declare-fun x418 () Bool)
(declare-fun x8032 () Bool)
(declare-fun x668 () Int)
(declare-fun x3625 () Int)
(declare-fun x8253 () Int)
(declare-fun x4829 () Int)
(declare-fun x6417 () Int)
(declare-fun x2016 () Bool)
(declare-fun x274 () Int)
(declare-fun x3516 () Int)
(declare-fun x3363 () Bool)
(declare-fun x7090 () Bool)
(declare-fun x5204 () Bool)
(declare-fun x4165 () Bool)
(declare-fun x7118 () Bool)
(declare-fun x3956 () Bool)
(declare-fun x6038 () Bool)
(declare-fun x4898 () Int)
(declare-fun x4822 () Bool)
(declare-fun x304 () Int)
(declare-fun x5099 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x7840 () Int)
(declare-fun x3519 () Bool)
(declare-fun x4894 () Bool)
(declare-fun x117 () Int)
(declare-fun x105 () Int)
(declare-fun x6382 () Int)
(declare-fun x7158 () Int)
(declare-fun x5892 () Int)
(declare-fun x5920 (Int) Int)
(declare-fun x8084 () Int)
(declare-fun x2655 () Int)
(declare-fun x8575 () Int)
(declare-fun x7131 () Bool)
(declare-fun x808 () Bool)
(declare-fun x6533 () Int)
(declare-fun x2663 () Bool)
(declare-fun x5805 () Bool)
(declare-fun x5371 () Int)
(declare-fun x4534 () Int)
(declare-fun x7965 () Int)
(declare-fun x294 () Int)
(declare-fun x6283 () Int)
(declare-fun x3633 () Int)
(declare-fun x2132 () Int)
(declare-fun x2046 () Int)
(declare-fun x634 () Int)
(declare-fun x5129 () Int)
(declare-fun x2 () Bool)
(declare-fun x6444 () Int)
(declare-fun x931 () Bool)
(declare-fun x4244 () Int)
(declare-fun x4347 () Bool)
(declare-fun x8096 () Bool)
(declare-fun x6339 () Bool)
(declare-fun x1773 () Int)
(declare-fun x6996 () Int)
(declare-fun x1689 () Int)
(declare-fun x7643 () Bool)
(declare-fun x8480 () Bool)
(declare-fun x848 () Int)
(declare-fun x3526 () Int)
(declare-fun x1405 () Int)
(declare-fun x1099 () Int)
(declare-fun x538 () Int)
(declare-fun x1528 () Int)
(declare-fun x6735 () Int)
(declare-fun x5768 () Int)
(declare-fun x3454 () Int)
(declare-fun x7564 () Int)
(declare-fun x6252 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x1713 () Int)
(declare-fun x5744 () Bool)
(declare-fun x8139 () Int)
(declare-fun x6854 () Int)
(declare-fun x4246 () Int)
(declare-fun x7430 () Int)
(declare-fun x1732 () Int)
(declare-fun x5297 () Int)
(declare-fun x125 () Int)
(declare-fun x3030 () Int)
(declare-fun x2364 () Int)
(declare-fun x511 () Int)
(declare-fun x5218 () Int)
(declare-fun x3542 () Bool)
(declare-fun x6250 () Int)
(declare-fun x8003 () Bool)
(declare-fun x3713 () Int)
(declare-fun x5939 () Int)
(declare-fun x2817 () Bool)
(declare-fun x6405 () Bool)
(declare-fun x7895 () Int)
(declare-fun x5110 () Int)
(declare-fun x7239 () Int)
(declare-fun x494 () Int)
(declare-fun x7750 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x7855 () Bool)
(declare-fun x3905 () Bool)
(declare-fun x7658 (Int) Int)
(declare-fun x1706 () Int)
(declare-fun x466 () Int)
(declare-fun x3784 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x1043 () Int)
(declare-fun x6871 () Bool)
(declare-fun x3731 () Int)
(declare-fun x2423 () Bool)
(declare-fun x2244 () Int)
(declare-fun x3720 () Bool)
(declare-fun x314 () Bool)
(declare-fun x2971 () Int)
(declare-fun x5681 () Bool)
(declare-fun x5462 () Int)
(declare-fun x6090 () Bool)
(declare-fun x6016 () Int)
(declare-fun x816 () Int)
(declare-fun x981 () Bool)
(declare-fun x3379 () Int)
(declare-fun x2271 () Int)
(declare-fun x6842 () Int)
(declare-fun x293 (Int) Int)
(declare-fun x3452 () Bool)
(declare-fun x4068 () Bool)
(declare-fun x8340 () Int)
(declare-fun x6397 () Int)
(declare-fun x4666 () Bool)
(declare-fun x1811 () Int)
(declare-fun x7262 () Int)
(declare-fun x8516 () Bool)
(declare-fun x7342 () Int)
(declare-fun x1565 () Int)
(declare-fun x5831 () Bool)
(declare-fun x4504 () Int)
(declare-fun x8058 () Bool)
(declare-fun x6891 () Int)
(declare-fun x5321 () Bool)
(declare-fun x6625 () Int)
(declare-fun x5856 () Int)
(declare-fun x6261 () Bool)
(declare-fun x6619 () Bool)
(declare-fun x1881 () Int)
(declare-fun x6459 (Int) Int)
(declare-fun x3399 () Bool)
(declare-fun x4203 () Bool)
(declare-fun x6782 () Int)
(declare-fun x2395 () Int)
(declare-fun x1346 () Bool)
(declare-fun x670 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x7704 () Int)
(declare-fun x1938 () Bool)
(declare-fun x813 () Bool)
(declare-fun x5776 () Int)
(declare-fun x3993 (Int Int) Int)
(declare-fun x1685 () Int)
(declare-fun x3676 () Int)
(declare-fun x4253 () Int)
(declare-fun x2776 () Bool)
(declare-fun x1104 () Int)
(declare-fun x2869 () Bool)
(declare-fun x8082 () Int)
(declare-fun x4460 () Int)
(declare-fun x1923 (Int) Int)
(declare-fun x3968 () Int)
(declare-fun x8592 () Bool)
(declare-fun x2383 () Int)
(declare-fun x3178 () Bool)
(declare-fun x3384 () Bool)
(declare-fun x7033 () Int)
(declare-fun x5390 () Bool)
(declare-fun x7219 () Int)
(declare-fun x272 () Int)
(declare-fun x4936 () Bool)
(declare-fun x4206 () Int)
(declare-fun x7812 () Bool)
(declare-fun x7113 () Bool)
(declare-fun x5231 () Int)
(declare-fun x6221 () Int)
(declare-fun x6169 () Int)
(declare-fun x438 () Int)
(declare-fun x945 () Int)
(declare-fun x3079 () Bool)
(declare-fun x329 () Int)
(declare-fun x4308 () Int)
(declare-fun x5467 (Int) Int)
(declare-fun x6916 () Bool)
(declare-fun x6641 () Bool)
(declare-fun x820 () Bool)
(declare-fun x5559 () Bool)
(declare-fun x2058 () Int)
(declare-fun x2486 () Bool)
(declare-fun x5428 () Int)
(declare-fun x7976 () Int)
(declare-fun x8426 () Bool)
(declare-fun x127 () Bool)
(declare-fun x534 () Bool)
(declare-fun x2089 () Int)
(declare-fun x4045 () Int)
(declare-fun x3180 () Int)
(declare-fun x2250 () Int)
(declare-fun x2884 () Int)
(declare-fun x4753 () Int)
(declare-fun x3764 () Int)
(declare-fun x4009 () Bool)
(declare-fun x8134 () Int)
(declare-fun x460 () Bool)
(declare-fun x1243 () Int)
(declare-fun x3637 () Bool)
(declare-fun x8047 () Int)
(declare-fun x6663 () Int)
(declare-fun x924 () Int)
(declare-fun x664 () Int)
(declare-fun x2090 () Bool)
(declare-fun x112 () Int)
(declare-fun x3679 () Int)
(declare-fun x1344 () Bool)
(declare-fun x3413 () Int)
(declare-fun x8307 () Int)
(declare-fun x4107 () Bool)
(declare-fun x3927 () Int)
(declare-fun x6674 () Bool)
(declare-fun x6430 () Bool)
(declare-fun x89 () Bool)
(declare-fun x8230 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x7068 () Int)
(declare-fun x7468 () Int)
(declare-fun x1094 () Int)
(declare-fun x3450 () Int)
(declare-fun x311 () Bool)
(declare-fun x2458 () Int)
(declare-fun x7958 () Int)
(declare-fun x4093 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x92 () Int)
(declare-fun x3829 () Int)
(declare-fun x1162 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x4067 () Int)
(declare-fun x621 () Bool)
(declare-fun x1832 () Int)
(declare-fun x3939 () Int)
(declare-fun x6131 () Int)
(declare-fun x8167 () Int)
(declare-fun x751 () Bool)
(declare-fun x2876 () Bool)
(declare-fun x8341 () Int)
(declare-fun x3834 () Bool)
(declare-fun x6062 () Int)
(declare-fun x8464 () Bool)
(declare-fun x4314 () Bool)
(declare-fun x2811 (Int) Int)
(declare-fun x2028 () Int)
(declare-fun x1001 () Int)
(declare-fun x250 () Int)
(declare-fun x4713 () Int)
(declare-fun x3795 () Bool)
(declare-fun x5389 () Int)
(declare-fun x8002 () Int)
(declare-fun x6752 () Int)
(declare-fun x3115 () Bool)
(declare-fun x6292 () Int)
(declare-fun x6458 (Int) Int)
(declare-fun x2301 () Bool)
(declare-fun x3749 () Int)
(declare-fun x850 () Int)
(declare-fun x4661 () Int)
(declare-fun x419 () Bool)
(declare-fun x6264 () Int)
(declare-fun x4394 () Bool)
(declare-fun x4210 () Bool)
(declare-fun x5667 () Int)
(declare-fun x1366 () Bool)
(declare-fun x7543 () Int)
(declare-fun x4738 () Int)
(declare-fun x8273 () Bool)
(declare-fun x5550 () Int)
(declare-fun x6634 () Bool)
(declare-fun x2890 () Int)
(declare-fun x2732 () Int)
(declare-fun x802 () Int)
(declare-fun x5433 () Bool)
(declare-fun x742 () Bool)
(declare-fun x3119 () Int)
(declare-fun x736 () Int)
(declare-fun x4020 () Bool)
(declare-fun x4578 () Bool)
(declare-fun x6824 () Int)
(declare-fun x7983 () Int)
(declare-fun x6183 () Int)
(declare-fun x4488 () Int)
(declare-fun x2044 () Bool)
(declare-fun x3704 () Bool)
(declare-fun x5742 () Int)
(declare-fun x3657 () Int)
(declare-fun x807 () Bool)
(declare-fun x8440 () Bool)
(declare-fun x3284 () Int)
(declare-fun x8035 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x2330 () Int)
(declare-fun x1277 () Bool)
(declare-fun x8311 () Bool)
(declare-fun x4250 () Int)
(declare-fun x991 () Int)
(declare-fun x600 () Int)
(declare-fun x8176 () Int)
(declare-fun x1338 () Int)
(declare-fun x3746 () Int)
(declare-fun x2870 () Int)
(declare-fun x7353 () Bool)
(declare-fun x6429 () Int)
(declare-fun x900 () Int)
(declare-fun x1194 () Bool)
(declare-fun x8095 () Int)
(declare-fun x2584 () Int)
(declare-fun x2017 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x6 () Bool)
(declare-fun x3717 () Int)
(declare-fun x1579 () Bool)
(declare-fun x2684 () Int)
(declare-fun x2245 () Bool)
(declare-fun x8549 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x3160 () Int)
(declare-fun x777 () Bool)
(declare-fun x6693 () Int)
(declare-fun x1443 () Bool)
(declare-fun x3928 () Int)
(declare-fun x289 () Bool)
(declare-fun x4914 () Bool)
(declare-fun x3042 () Int)
(declare-fun x3068 () Int)
(declare-fun x998 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x4891 () Int)
(declare-fun x5832 () Int)
(declare-fun x7729 () Bool)
(declare-fun x510 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x8145 () Bool)
(declare-fun x7372 () Int)
(declare-fun x6193 () Int)
(declare-fun x7682 () Bool)
(declare-fun x6962 () Int)
(declare-fun x318 () Int)
(declare-fun x7698 () Bool)
(declare-fun x4864 () Bool)
(declare-fun x7180 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x334 () Int)
(declare-fun x4766 () Bool)
(declare-fun x3479 () Bool)
(declare-fun x4926 () Int)
(declare-fun x267 () Bool)
(declare-fun x6798 () Bool)
(declare-fun x2733 () Int)
(declare-fun x6524 () Int)
(declare-fun x2569 () Int)
(declare-fun x3605 () Bool)
(declare-fun x4901 () Bool)
(declare-fun x5580 () Int)
(declare-fun x2195 () Int)
(declare-fun x6411 () Int)
(declare-fun x2708 () Bool)
(declare-fun x5749 () Int)
(declare-fun x4348 () Int)
(declare-fun x3498 () Bool)
(declare-fun x3898 () Bool)
(declare-fun x8424 () Int)
(declare-fun x2465 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x2409 () Int)
(declare-fun x5548 () Bool)
(declare-fun x3573 () Int)
(declare-fun x7337 () Int)
(declare-fun x6958 () Bool)
(declare-fun x4015 () Bool)
(declare-fun x3154 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x6608 () Int)
(declare-fun x6043 () Int)
(declare-fun x230 () Int)
(declare-fun x2222 () Bool)
(declare-fun x8524 () Int)
(declare-fun x3158 () Bool)
(declare-fun x5684 () Int)
(declare-fun x3361 () Bool)
(declare-fun x4588 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x175 (Int) Int)
(declare-fun x6333 () Bool)
(declare-fun x8236 () Int)
(declare-fun x3799 () Int)
(declare-fun x3561 () Bool)
(declare-fun x7415 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x8551 () Int)
(declare-fun x6825 () Bool)
(declare-fun x4248 () Int)
(declare-fun x6489 () Bool)
(declare-fun x2710 () Bool)
(declare-fun x2498 () Int)
(declare-fun x2543 () Bool)
(declare-fun x1074 () Int)
(declare-fun x1609 () Int)
(declare-fun x3975 () Int)
(declare-fun x7138 () Int)
(declare-fun x3794 () Int)
(declare-fun x2855 () Int)
(declare-fun x8483 () Bool)
(declare-fun x6848 () Bool)
(declare-fun x6004 () Bool)
(declare-fun x8175 () Int)
(declare-fun x7488 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x5711 () Bool)
(declare-fun x4157 () Int)
(declare-fun x3145 () Int)
(declare-fun x752 () Int)
(declare-fun x6911 () Int)
(declare-fun x2891 () Int)
(declare-fun x145 () Int)
(declare-fun x2404 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x8512 () Int)
(declare-fun x5786 () Bool)
(declare-fun x2894 () Bool)
(declare-fun x922 () Bool)
(declare-fun x4835 () Bool)
(declare-fun x6195 () Bool)
(declare-fun x319 () Bool)
(declare-fun x8425 () Int)
(declare-fun x3634 () Bool)
(declare-fun x693 () Int)
(declare-fun x5117 () Int)
(declare-fun x3322 () Bool)
(declare-fun x2990 () Bool)
(declare-fun x1792 () Int)
(declare-fun x7152 () Int)
(declare-fun x3612 () Int)
(declare-fun x6144 () Int)
(declare-fun x4051 () Int)
(declare-fun x3776 () Int)
(declare-fun x6467 () Int)
(declare-fun x5751 () Bool)
(declare-fun x713 () Bool)
(declare-fun x4556 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x113 () Bool)
(declare-fun x5752 () Bool)
(declare-fun x3416 () Bool)
(declare-fun x6500 () Int)
(declare-fun x4465 () Int)
(declare-fun x870 () Int)
(declare-fun x5465 () Bool)
(declare-fun x5929 () Bool)
(declare-fun x7614 () Int)
(declare-fun x2176 () Int)
(declare-fun x7178 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x4788 () Int)
(declare-fun x3762 () Bool)
(declare-fun x1190 () Int)
(declare-fun x4134 () Bool)
(declare-fun x1945 () Int)
(declare-fun x7742 () Int)
(declare-fun x3659 () Bool)
(declare-fun x8370 () Int)
(declare-fun x1142 () Bool)
(declare-fun x4608 () Int)
(declare-fun x8204 () Bool)
(declare-fun x5897 () Int)
(declare-fun x3474 () Bool)
(declare-fun x8098 () Bool)
(declare-fun x4675 () Bool)
(declare-fun x3242 () Int)
(declare-fun x1595 () Int)
(declare-fun x3565 () Bool)
(declare-fun x5121 () Int)
(declare-fun x1289 () Bool)
(declare-fun x8472 () Bool)
(declare-fun x3639 () Bool)
(declare-fun x5888 () Int)
(declare-fun x4406 () Bool)
(declare-fun x5857 () Bool)
(declare-fun x1265 () Int)
(declare-fun x192 () Int)
(declare-fun x4576 () Int)
(declare-fun x1041 () Int)
(declare-fun x4561 () Bool)
(declare-fun x859 () Bool)
(declare-fun x7768 () Int)
(declare-fun x1482 () Int)
(declare-fun x3648 () Int)
(declare-fun x1057 () Int)
(declare-fun x5730 () Bool)
(declare-fun x616 () Bool)
(declare-fun x8144 () Int)
(declare-fun x4799 () Bool)
(declare-fun x5217 () Int)
(declare-fun x8564 () Int)
(declare-fun x996 () Int)
(declare-fun x1831 () Int)
(declare-fun x4568 () Int)
(declare-fun x1134 () Bool)
(declare-fun x8375 () Int)
(declare-fun x5140 () Int)
(declare-fun x6632 () Int)
(declare-fun x3130 () Bool)
(declare-fun x1296 () Int)
(declare-fun x5887 () Int)
(declare-fun x5119 () Bool)
(declare-fun x7373 () Bool)
(declare-fun x8432 () Int)
(declare-fun x8295 () Int)
(declare-fun x8421 () Int)
(declare-fun x2848 () Int)
(declare-fun x1796 () Int)
(declare-fun x6523 () Bool)
(declare-fun x3545 () Int)
(declare-fun x6282 () Int)
(declare-fun x1419 () Bool)
(declare-fun x1590 () Int)
(declare-fun x5661 () Bool)
(declare-fun x1778 () Int)
(declare-fun x4726 () Int)
(declare-fun x5143 () Bool)
(declare-fun x5926 () Int)
(declare-fun x6289 () Int)
(declare-fun x7420 () Bool)
(declare-fun x8183 () Int)
(declare-fun x4471 () Bool)
(declare-fun x302 () Int)
(declare-fun x5582 () Bool)
(declare-fun x4077 () Bool)
(declare-fun x2550 () Int)
(declare-fun x5604 () Int)
(declare-fun x4489 () Bool)
(declare-fun x8297 () Int)
(declare-fun x1989 () Int)
(declare-fun x6751 () Bool)
(declare-fun x1907 () Int)
(declare-fun x5356 () Int)
(declare-fun x1310 () Bool)
(declare-fun x4833 () Int)
(declare-fun x2254 () Bool)
(declare-fun x3414 () Int)
(declare-fun x6670 () Int)
(declare-fun x1692 () Bool)
(declare-fun x8504 () Bool)
(declare-fun x4911 () Bool)
(declare-fun x6885 (Int) Int)
(declare-fun x679 () Bool)
(declare-fun x8395 () Bool)
(declare-fun x6553 () Int)
(declare-fun x4774 () Bool)
(declare-fun x2537 () Int)
(declare-fun x7383 () Int)
(declare-fun x7094 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x2148 () Bool)
(declare-fun x6481 () Bool)
(declare-fun x6749 () Bool)
(declare-fun x6667 () Bool)
(declare-fun x1197 () Int)
(declare-fun x8250 () Bool)
(declare-fun x7848 () Bool)
(declare-fun x4941 () Int)
(declare-fun x1966 () Int)
(declare-fun x8233 () Bool)
(declare-fun x4177 () Int)
(declare-fun x7200 () Int)
(declare-fun x3049 () Bool)
(declare-fun x1616 () Int)
(declare-fun x2879 () Int)
(declare-fun x8290 () Int)
(declare-fun x6765 () Bool)
(declare-fun x2862 () Bool)
(declare-fun x7997 () Int)
(declare-fun x1982 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x199 () Int)
(declare-fun x3237 () Bool)
(declare-fun x780 () Bool)
(declare-fun x6620 () Int)
(declare-fun x2020 () Int)
(declare-fun x6579 () Bool)
(declare-fun x4371 () Int)
(declare-fun x663 () Int)
(declare-fun x7676 (Int) Int)
(declare-fun x3985 () Bool)
(declare-fun x6540 () Bool)
(declare-fun x7127 () Bool)
(declare-fun x2930 () Bool)
(declare-fun x2173 () Int)
(declare-fun x4291 () Bool)
(declare-fun x6217 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x4536 () Bool)
(declare-fun x5304 () Bool)
(declare-fun x7924 () Bool)
(declare-fun x2645 () Int)
(declare-fun x5346 () Bool)
(declare-fun x5628 () Int)
(declare-fun x370 () Bool)
(declare-fun x6767 () Int)
(declare-fun x6227 () Bool)
(declare-fun x5164 () Bool)
(declare-fun x4725 () Bool)
(declare-fun x3813 () Bool)
(declare-fun x1900 () Int)
(declare-fun x7818 () Int)
(declare-fun x1385 () Bool)
(declare-fun x5141 () Bool)
(declare-fun x2231 () Int)
(declare-fun x5727 () Bool)
(declare-fun x682 () Int)
(declare-fun x4540 () Int)
(declare-fun x4595 () Int)
(declare-fun x7439 () Int)
(declare-fun x905 () Int)
(declare-fun x6101 () Int)
(declare-fun x4868 () Int)
(declare-fun x2125 () Int)
(declare-fun x1553 () Bool)
(declare-fun x2735 () Int)
(declare-fun x4624 () Int)
(declare-fun x1258 () Bool)
(declare-fun x1829 () Bool)
(declare-fun x6496 () Int)
(declare-fun x1300 () Int)
(declare-fun x5311 () Bool)
(declare-fun x7877 () Int)
(declare-fun x1493 () Int)
(declare-fun x6593 () Int)
(declare-fun x1720 () Bool)
(declare-fun x8113 () Int)
(declare-fun x2366 () Int)
(declare-fun x7240 () Bool)
(declare-fun x5717 () Bool)
(declare-fun x3828 () Int)
(declare-fun x4627 () Int)
(declare-fun x5533 () Bool)
(declare-fun x1130 () Int)
(declare-fun x8186 () Bool)
(declare-fun x3444 () Int)
(declare-fun x2001 () Int)
(declare-fun x7422 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x5868 () Bool)
(declare-fun x1539 () Int)
(declare-fun x3400 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x5706 () Int)
(declare-fun x8386 () Bool)
(declare-fun x4562 () Int)
(declare-fun x3306 () Int)
(declare-fun x2234 () Int)
(declare-fun x735 () Int)
(declare-fun x2348 () Int)
(declare-fun x7547 () Bool)
(declare-fun x4417 () Int)
(declare-fun x4664 (Int) Int)
(declare-fun x2697 () Int)
(declare-fun x2669 () Int)
(declare-fun x4982 () Bool)
(declare-fun x8180 () Bool)
(declare-fun x1524 () Int)
(declare-fun x1782 () Bool)
(declare-fun x5735 () Bool)
(declare-fun x1640 () Int)
(declare-fun x2505 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x6180 () Int)
(declare-fun x7932 () Int)
(declare-fun x4372 () Bool)
(declare-fun x1196 () Int)
(declare-fun x1793 () Bool)
(declare-fun x4420 () Bool)
(declare-fun x5515 () Int)
(declare-fun x2228 () Int)
(declare-fun x8299 () Int)
(declare-fun x5618 () Int)
(declare-fun x6586 () Bool)
(declare-fun x6068 () Bool)
(declare-fun x7589 () Int)
(declare-fun x5605 () Bool)
(declare-fun x6116 () Bool)
(declare-fun x6175 () Int)
(declare-fun x4319 () Int)
(declare-fun x1956 () Int)
(declare-fun x7074 () Bool)
(declare-fun x642 () Int)
(declare-fun x4413 () Bool)
(declare-fun x8482 () Int)
(declare-fun x8009 () Int)
(declare-fun x1170 () Bool)
(declare-fun x4336 () Int)
(declare-fun x3164 (Int) Int)
(declare-fun x1612 () Bool)
(declare-fun x7318 () Bool)
(declare-fun x8076 () Int)
(declare-fun x7509 () Int)
(declare-fun x3267 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x7775 (Int) Int)
(declare-fun x8494 () Int)
(declare-fun x5232 () Bool)
(declare-fun x4397 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x5997 () Int)
(declare-fun x379 () Bool)
(declare-fun x1628 () Int)
(declare-fun x2034 () Int)
(declare-fun x1740 () Bool)
(declare-fun x2151 () Int)
(declare-fun x278 () Int)
(declare-fun x4729 () Int)
(declare-fun x1173 () Int)
(declare-fun x6737 () Bool)
(declare-fun x2493 () Int)
(declare-fun x2084 () Int)
(declare-fun x4975 () Int)
(declare-fun x7314 () Bool)
(declare-fun x2679 () Int)
(declare-fun x1342 () Int)
(declare-fun x3589 () Bool)
(declare-fun x3552 () Int)
(declare-fun x3760 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x2686 () Int)
(declare-fun x5620 () Int)
(declare-fun x4744 () Bool)
(declare-fun x7120 () Int)
(declare-fun x2154 () Int)
(declare-fun x8455 () Bool)
(declare-fun x1166 () Int)
(declare-fun x4730 () Bool)
(declare-fun x795 () Bool)
(declare-fun x1447 () Int)
(declare-fun x5847 () Int)
(declare-fun x22 () Int)
(declare-fun x956 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x4155 () Int)
(declare-fun x6148 () Bool)
(declare-fun x4754 () Bool)
(declare-fun x8063 () Int)
(declare-fun x6516 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x2700 () Bool)
(declare-fun x7850 () Int)
(declare-fun x5612 () Bool)
(declare-fun x6710 () Int)
(declare-fun x541 () Int)
(declare-fun x648 () Int)
(declare-fun x5441 () Bool)
(declare-fun x926 () Bool)
(declare-fun x3895 () Int)
(declare-fun x1278 () Bool)
(declare-fun x5492 () Int)
(declare-fun x6720 () Int)
(declare-fun x8474 () Int)
(declare-fun x1764 () Int)
(declare-fun x4886 () Int)
(declare-fun x3651 () Int)
(declare-fun x2270 () Int)
(declare-fun x5340 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x3525 () Bool)
(declare-fun x6000 () Int)
(declare-fun x6733 () Int)
(declare-fun x4853 () Bool)
(declare-fun x4364 () Bool)
(declare-fun x4884 () Bool)
(declare-fun x3833 () Int)
(declare-fun x2419 () Bool)
(declare-fun x1252 () Int)
(declare-fun x7802 () Bool)
(declare-fun x3658 () Int)
(declare-fun x2923 () Int)
(declare-fun x6722 () Int)
(declare-fun x8310 () Int)
(declare-fun x5444 () Int)
(declare-fun x6191 () Bool)
(declare-fun x7453 () Bool)
(declare-fun x7269 () Bool)
(declare-fun x3883 () Int)
(declare-fun x3698 () Int)
(declare-fun x2248 () Bool)
(declare-fun x2339 () Int)
(declare-fun x51 () Int)
(declare-fun x7825 () Int)
(declare-fun x6559 () Int)
(declare-fun x206 () Int)
(declare-fun x4707 () Bool)
(declare-fun x6991 () Int)
(declare-fun x4266 () Bool)
(declare-fun x2163 () Bool)
(declare-fun x6779 () Int)
(declare-fun x1514 () Int)
(declare-fun x4027 () Bool)
(declare-fun x7678 () Int)
(declare-fun x2895 () Bool)
(declare-fun x7640 () Int)
(declare-fun x3916 () Bool)
(declare-fun x6604 () Int)
(declare-fun x879 () Int)
(declare-fun x1103 () Bool)
(declare-fun x4590 () Int)
(declare-fun x1457 () Int)
(declare-fun x6399 () Bool)
(declare-fun x7648 () Int)
(declare-fun x1714 () Int)
(declare-fun x2035 () Int)
(declare-fun x6940 () Int)
(declare-fun x4400 () Bool)
(declare-fun x6801 () Int)
(declare-fun x7000 () Int)
(declare-fun x94 () Bool)
(declare-fun x7896 () Int)
(declare-fun x7460 () Bool)
(declare-fun x3388 () Int)
(declare-fun x6076 () Int)
(declare-fun x2619 () Bool)
(declare-fun x222 () Bool)
(declare-fun x1838 () Int)
(declare-fun x2217 () Bool)
(declare-fun x7927 () Bool)
(declare-fun x70 () Int)
(declare-fun x508 () Int)
(declare-fun x4066 () Int)
(declare-fun x5270 () Int)
(declare-fun x12 () Bool)
(declare-fun x4254 () Int)
(declare-fun x228 () Bool)
(declare-fun x8099 () Bool)
(declare-fun x1620 () Int)
(declare-fun x3468 () Bool)
(declare-fun x5893 (Int) Int)
(declare-fun x2100 () Bool)
(declare-fun x505 () Int)
(declare-fun x8433 () Int)
(declare-fun x3046 () Int)
(declare-fun x8473 () Int)
(declare-fun x4821 () Bool)
(declare-fun x8265 () Bool)
(declare-fun x8422 () Int)
(declare-fun x3945 () Bool)
(declare-fun x5801 () Bool)
(declare-fun x383 () Int)
(declare-fun x7066 () Bool)
(declare-fun x10 () Int)
(declare-fun x5314 () Bool)
(declare-fun x3700 () Int)
(declare-fun x1644 () Bool)
(declare-fun x1441 () Int)
(declare-fun x3577 () Int)
(declare-fun x5022 () Int)
(declare-fun x7203 () Bool)
(declare-fun x6034 () Bool)
(declare-fun x3425 () Int)
(declare-fun x828 () Int)
(declare-fun x5274 () Int)
(declare-fun x779 () Bool)
(declare-fun x1219 () Int)
(declare-fun x5034 () Bool)
(declare-fun x3729 () Int)
(declare-fun x6243 () Int)
(declare-fun x21 () Int)
(declare-fun x7309 () Int)
(declare-fun x2887 () Int)
(declare-fun x2283 () Int)
(declare-fun x2203 () Bool)
(declare-fun x475 () Bool)
(declare-fun x8378 () Int)
(declare-fun x2750 () Int)
(declare-fun x7287 () Int)
(declare-fun x7620 () Bool)
(declare-fun x7588 () Bool)
(declare-fun x5979 () Bool)
(declare-fun x8348 () Bool)
(declare-fun x7858 () Bool)
(declare-fun x800 () Bool)
(declare-fun x6648 () Bool)
(declare-fun x6792 () Bool)
(declare-fun x5395 () Int)
(declare-fun x3340 () Int)
(declare-fun x2578 () Bool)
(declare-fun x6880 () Int)
(declare-fun x4580 () Bool)
(declare-fun x4258 () Bool)
(declare-fun x7501 () Int)
(declare-fun x8529 () Bool)
(declare-fun x3919 () Bool)
(declare-fun x646 () Bool)
(declare-fun x7546 () Bool)
(declare-fun x6269 () Int)
(declare-fun x7667 () Bool)
(declare-fun x6644 () Bool)
(declare-fun x2635 () Bool)
(declare-fun x546 () Int)
(declare-fun x386 () Int)
(declare-fun x1731 () Bool)
(declare-fun x291 () Int)
(declare-fun x301 () Bool)
(declare-fun x4711 () Int)
(declare-fun x2702 () Int)
(declare-fun x444 () Bool)
(declare-fun x3276 () Bool)
(declare-fun x6624 () Int)
(declare-fun x2374 () Int)
(declare-fun x5848 () Int)
(declare-fun x121 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x7826 () Int)
(declare-fun x4530 () Int)
(declare-fun x957 () Int)
(declare-fun x255 () Bool)
(declare-fun x2122 () Int)
(declare-fun x8532 () Bool)
(declare-fun x4818 () Bool)
(declare-fun x7792 () Bool)
(declare-fun x445 () Int)
(declare-fun x429 () Bool)
(declare-fun x7449 () Int)
(declare-fun x7389 () Int)
(declare-fun x6015 () Int)
(declare-fun x1658 () Int)
(declare-fun x8572 () Int)
(declare-fun x2646 () Bool)
(declare-fun x5286 () Bool)
(declare-fun x2456 () Int)
(declare-fun x7410 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x5954 () Bool)
(declare-fun x6081 () Bool)
(declare-fun x5646 () Int)
(declare-fun x1088 () Int)
(declare-fun x2002 () Int)
(declare-fun x7705 () Bool)
(declare-fun x3170 () Int)
(declare-fun x7329 () Bool)
(declare-fun x6118 () Int)
(declare-fun x7110 () Int)
(declare-fun x3186 () Int)
(declare-fun x1928 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x6121 () Int)
(declare-fun x7257 () Int)
(declare-fun x1875 () Int)
(declare-fun x7717 () Int)
(declare-fun x2838 () Int)
(declare-fun x3013 () Bool)
(declare-fun x7043 () Bool)
(declare-fun x5877 () Int)
(declare-fun x842 () Int)
(declare-fun x1712 () Int)
(declare-fun x7431 () Bool)
(declare-fun x7189 () Int)
(declare-fun x9 () Int)
(declare-fun x8484 () Bool)
(declare-fun x7811 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x3124 () Int)
(declare-fun x4662 () Bool)
(declare-fun x2968 (Int) Int)
(declare-fun x1327 () Int)
(declare-fun x7443 () Bool)
(declare-fun x7503 () Int)
(declare-fun x1320 () Int)
(declare-fun x977 () Int)
(declare-fun x2632 () Int)
(declare-fun x7487 () Int)
(declare-fun x7857 () Bool)
(declare-fun x8324 () Int)
(declare-fun x7644 () Bool)
(declare-fun x4036 () Bool)
(declare-fun x3775 (Int) Int)
(declare-fun x1260 () Int)
(declare-fun x7817 () Int)
(declare-fun x4216 () Int)
(declare-fun x5846 () Bool)
(declare-fun x7968 () Int)
(declare-fun x5180 () Bool)
(declare-fun x8423 () Int)
(declare-fun x4734 () Int)
(declare-fun x7278 () Int)
(declare-fun x6149 () Int)
(declare-fun x644 () Bool)
(declare-fun x1631 () Int)
(declare-fun x7041 () Int)
(declare-fun x4709 () Int)
(declare-fun x6732 () Int)
(declare-fun x7289 () Int)
(declare-fun x6029 () Bool)
(declare-fun x3404 () Int)
(declare-fun x2691 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x4352 () Int)
(declare-fun x7748 () Int)
(declare-fun x3131 () Int)
(declare-fun x7975 () Int)
(declare-fun x5561 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x4324 () Bool)
(declare-fun x3408 () Bool)
(declare-fun x1027 () Int)
(declare-fun x7890 () Int)
(declare-fun x6886 () Bool)
(declare-fun x6341 () Int)
(declare-fun x1805 () Bool)
(declare-fun x7310 () Bool)
(declare-fun x4049 () Int)
(declare-fun x1095 () Int)
(declare-fun x6823 () Bool)
(declare-fun x6210 () Bool)
(declare-fun x7993 () Int)
(declare-fun x6202 () Bool)
(declare-fun x162 () Int)
(declare-fun x749 () Bool)
(declare-fun x421 () Int)
(declare-fun x7244 () Int)
(declare-fun x7899 () Bool)
(declare-fun x391 () Int)
(declare-fun x3356 () Int)
(declare-fun x7869 () Bool)
(declare-fun x5824 () Bool)
(declare-fun x4307 () Int)
(declare-fun x4830 () Bool)
(declare-fun x586 () Int)
(declare-fun x2834 () Bool)
(declare-fun x4601 () Int)
(declare-fun x2579 () Int)
(declare-fun x3269 (Int) Int)
(declare-fun x623 () Int)
(declare-fun x238 () Bool)
(declare-fun x3798 () Int)
(declare-fun x1984 () Bool)
(declare-fun x315 () Bool)
(declare-fun x3096 () Int)
(declare-fun x6702 () Int)
(declare-fun x6971 () Int)
(declare-fun x6895 () Bool)
(declare-fun x1918 () Int)
(declare-fun x5458 () Int)
(declare-fun x3 () Int)
(declare-fun x487 () Bool)
(declare-fun x6245 () Bool)
(declare-fun x6298 () Bool)
(declare-fun x5450 () Bool)
(declare-fun x3934 () Int)
(declare-fun x3730 () Int)
(declare-fun x4790 () Int)
(declare-fun x355 () Int)
(declare-fun x4517 () Bool)
(declare-fun x7948 () Int)
(declare-fun x8185 () Int)
(declare-fun x7046 () Bool)
(declare-fun x6207 () Bool)
(declare-fun x5741 () Bool)
(declare-fun x635 () Int)
(declare-fun x7230 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x3302 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x733 () Int)
(declare-fun x1627 (Int) Int)
(declare-fun x4802 () Int)
(declare-fun x375 () Int)
(declare-fun x4685 () Int)
(declare-fun x6578 () Bool)
(declare-fun x904 () Int)
(declare-fun x7300 () Int)
(declare-fun x410 () Bool)
(declare-fun x4789 () Bool)
(declare-fun x343 () Bool)
(declare-fun x7047 () Int)
(declare-fun x3893 () Bool)
(declare-fun x7473 () Int)
(declare-fun x8414 () Bool)
(declare-fun x4377 () Bool)
(declare-fun x6723 () Int)
(declare-fun x5971 () Bool)
(declare-fun x6518 () Int)
(declare-fun x5975 () Int)
(declare-fun x3836 () Int)
(declare-fun x4281 () Int)
(declare-fun x2934 () Bool)
(declare-fun x8496 () Int)
(declare-fun x1141 () Int)
(declare-fun x934 () Int)
(declare-fun x6992 () Int)
(declare-fun x6809 () Bool)
(declare-fun x7274 () Int)
(declare-fun x8407 () Int)
(declare-fun x2315 () Bool)
(declare-fun x248 () Bool)
(declare-fun x7679 () Bool)
(declare-fun x7789 () Bool)
(declare-fun x67 () Int)
(declare-fun x5772 () Int)
(declare-fun x3564 () Bool)
(declare-fun x7606 () Bool)
(declare-fun x2426 () Int)
(declare-fun x4268 () Bool)
(declare-fun x1087 () Int)
(declare-fun x3024 () Int)
(declare-fun x3264 () Bool)
(declare-fun x2714 () Int)
(declare-fun x1449 () Int)
(declare-fun x8590 () Int)
(declare-fun x8333 () Bool)
(declare-fun x5137 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x6318 () Int)
(declare-fun x8304 () Int)
(declare-fun x2603 () Bool)
(declare-fun x5908 () Bool)
(declare-fun x4264 () Int)
(declare-fun x2118 () Int)
(declare-fun x4649 () Int)
(declare-fun x4231 () Bool)
(declare-fun x7072 () Int)
(declare-fun x2106 () Bool)
(declare-fun x220 () Bool)
(declare-fun x4315 () Bool)
(declare-fun x3723 () Int)
(declare-fun x8368 () Int)
(declare-fun x1047 () Int)
(declare-fun x1779 () Int)
(declare-fun x2904 () Bool)
(declare-fun x313 () Int)
(declare-fun x6775 () Int)
(declare-fun x2539 () Int)
(declare-fun x8247 () Int)
(declare-fun x3674 () Int)
(declare-fun x932 () Int)
(declare-fun x3708 () Int)
(declare-fun x2500 () Int)
(declare-fun x864 (Int) Int)
(declare-fun x7087 () Int)
(declare-fun x448 () Int)
(declare-fun x6136 () Int)
(declare-fun x3973 () Int)
(declare-fun x3419 () Bool)
(declare-fun x5151 () Bool)
(declare-fun x3497 () Int)
(declare-fun x2678 () Bool)
(declare-fun x7786 () Int)
(declare-fun x6541 () Bool)
(declare-fun x6760 () Bool)
(declare-fun x3031 () Bool)
(declare-fun x417 () Int)
(declare-fun x3383 () Int)
(declare-fun x1573 () Bool)
(declare-fun x652 () Int)
(declare-fun x2313 () Bool)
(declare-fun x1695 () Int)
(declare-fun x1427 () Int)
(declare-fun x3245 () Bool)
(declare-fun x214 () Bool)
(declare-fun x6490 () Int)
(declare-fun x5261 () Int)
(declare-fun x4642 () Int)
(declare-fun x5256 () Bool)
(declare-fun x3866 () Bool)
(declare-fun x7747 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x3426 () Bool)
(declare-fun x354 () Bool)
(declare-fun x1248 () Int)
(declare-fun x5822 () Bool)
(declare-fun x7012 () Bool)
(declare-fun x3851 () Bool)
(declare-fun x4523 () Int)
(declare-fun x1048 () Int)
(declare-fun x5986 () Int)
(declare-fun x1691 () Int)
(declare-fun x4594 () Int)
(declare-fun x7785 () Bool)
(declare-fun x7464 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x7829 () Int)
(declare-fun x3318 () Bool)
(declare-fun x180 () Int)
(declare-fun x7069 () Int)
(declare-fun x4963 () Int)
(declare-fun x567 () Bool)
(declare-fun x6186 () Int)
(declare-fun x4211 () Bool)
(declare-fun x1410 () Int)
(declare-fun x4228 () Int)
(declare-fun x1921 () Bool)
(declare-fun x2837 () Bool)
(declare-fun x7442 () Bool)
(declare-fun x7100 () Int)
(declare-fun x8019 () Bool)
(declare-fun x5610 () Bool)
(declare-fun x4183 () Bool)
(declare-fun x5050 () Bool)
(declare-fun x2140 () Int)
(declare-fun x7348 () Int)
(declare-fun x5775 () Bool)
(declare-fun x5170 () Int)
(declare-fun x5257 () Bool)
(declare-fun x3965 () Int)
(declare-fun x450 () Int)
(declare-fun x7500 () Int)
(declare-fun x2495 () Int)
(declare-fun x3923 () Bool)
(declare-fun x3541 () Int)
(declare-fun x8125 () Bool)
(declare-fun x4300 () Bool)
(declare-fun x3162 () Bool)
(declare-fun x7226 () Bool)
(declare-fun x3614 () Bool)
(declare-fun x6952 () Int)
(declare-fun x1799 () Bool)
(declare-fun x3380 () Int)
(declare-fun x8436 () Int)
(declare-fun x5520 () Int)
(declare-fun x4878 () Bool)
(declare-fun x3879 () Int)
(declare-fun x7370 () Int)
(declare-fun x5478 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x5837 () Int)
(declare-fun x5505 () Int)
(declare-fun x4414 () Int)
(declare-fun x2033 () Int)
(declare-fun x3884 () Bool)
(declare-fun x2416 () Int)
(declare-fun x2000 () Bool)
(declare-fun x2800 () Int)
(declare-fun x6609 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x5780 () Bool)
(declare-fun x3885 () Int)
(declare-fun x415 () Int)
(declare-fun x5272 () Int)
(declare-fun x5879 () Int)
(declare-fun x2615 () Bool)
(declare-fun x7791 () Bool)
(declare-fun x536 () Int)
(declare-fun x5215 () Int)
(declare-fun x3619 () Int)
(declare-fun x6587 () Bool)
(declare-fun x7548 () Int)
(declare-fun x14 () Bool)
(declare-fun x459 () Bool)
(declare-fun x8153 () Bool)
(declare-fun x7064 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x3850 () Bool)
(declare-fun x4208 () Int)
(declare-fun x732 () Bool)
(declare-fun x4048 () Bool)
(declare-fun x2371 () Int)
(declare-fun x3745 () Bool)
(declare-fun x395 () Int)
(declare-fun x109 () Bool)
(declare-fun x4809 () Bool)
(declare-fun x3559 () Int)
(declare-fun x5393 () Bool)
(declare-fun x4069 () Bool)
(declare-fun x7469 () Int)
(declare-fun x863 () Bool)
(declare-fun x3137 () Int)
(declare-fun x3118 () Bool)
(declare-fun x4846 () Bool)
(declare-fun x6981 () Bool)
(declare-fun x7109 () Int)
(declare-fun x336 () Bool)
(declare-fun x119 () Bool)
(declare-fun x8441 () Int)
(declare-fun x5429 () Bool)
(declare-fun x424 () Bool)
(declare-fun x3807 () Int)
(declare-fun x332 () Int)
(declare-fun x6692 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x2080 () Int)
(declare-fun x1116 () Bool)
(declare-fun x7391 () Int)
(declare-fun x2942 () Bool)
(declare-fun x655 () Int)
(declare-fun x441 () Int)
(declare-fun x3342 () Int)
(declare-fun x7752 () Int)
(declare-fun x6069 () Int)
(declare-fun x8259 () Bool)
(declare-fun x5186 () Bool)
(declare-fun x6764 () Int)
(declare-fun x1067 () Int)
(declare-fun x5634 () Int)
(declare-fun x8159 () Bool)
(declare-fun x8355 (Int) Int)
(declare-fun x690 () Int)
(declare-fun x5592 () Int)
(declare-fun x8104 () Int)
(declare-fun x6348 () Bool)
(declare-fun x7653 () Int)
(declare-fun x2453 () Int)
(declare-fun x1775 () Bool)
(declare-fun x8337 () Bool)
(declare-fun x3179 () Int)
(declare-fun x2399 () Int)
(declare-fun x5516 () Int)
(declare-fun x97 () Int)
(declare-fun x3103 () Bool)
(declare-fun x3283 () Int)
(declare-fun x6799 () Int)
(declare-fun x4257 () Int)
(declare-fun x4970 () Bool)
(declare-fun x4480 () Int)
(declare-fun x7331 () Int)
(declare-fun x405 () Int)
(declare-fun x3008 () Int)
(declare-fun x7524 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x3089 () Int)
(declare-fun x1036 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x4040 () Int)
(declare-fun x339 () Bool)
(declare-fun x7563 () Int)
(declare-fun x7770 () Int)
(declare-fun x1054 () Int)
(declare-fun x3837 () Int)
(declare-fun x2069 () Bool)
(declare-fun x7868 () Int)
(declare-fun x894 () Int)
(declare-fun x72 () Int)
(declare-fun x5882 () Int)
(declare-fun x7735 () Int)
(declare-fun x3491 () Int)
(declare-fun x4175 () Bool)
(declare-fun x858 () Bool)
(declare-fun x8224 () Bool)
(declare-fun x4832 () Bool)
(declare-fun x7536 () Bool)
(declare-fun x4031 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x4519 () Int)
(declare-fun x6394 () Bool)
(declare-fun x4329 () Bool)
(declare-fun x5139 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x3061 () Bool)
(declare-fun x6969 () Bool)
(declare-fun x8258 () Int)
(declare-fun x2705 () Bool)
(declare-fun x26 () Bool)
(declare-fun x5423 () Bool)
(declare-fun x6079 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x7534 () Int)
(declare-fun x8093 () Bool)
(declare-fun x7545 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x5469 () Int)
(declare-fun x8550 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x1533 () Int)
(declare-fun x1522 () Int)
(declare-fun x5047 (Int) Int)
(declare-fun x4256 () Bool)
(declare-fun x2087 () Int)
(declare-fun x3297 () Int)
(declare-fun x4531 () Int)
(declare-fun x1444 () Bool)
(declare-fun x1583 () Int)
(declare-fun x7130 () Bool)
(declare-fun x2444 () Int)
(declare-fun x4058 () Bool)
(declare-fun x216 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x6499 () Int)
(declare-fun x2982 () Int)
(declare-fun x3002 () Int)
(declare-fun x2129 () Bool)
(declare-fun x6025 () Bool)
(declare-fun x4368 () Int)
(declare-fun x6813 () Int)
(declare-fun x1513 () Bool)
(declare-fun x3920 () Int)
(declare-fun x3165 () Bool)
(declare-fun x868 () Int)
(declare-fun x1968 () Bool)
(declare-fun x2563 () Bool)
(declare-fun x2540 () Int)
(declare-fun x4341 () Int)
(declare-fun x5344 () Int)
(declare-fun x8223 () Int)
(declare-fun x7265 () Int)
(declare-fun x3215 () Bool)
(declare-fun x4313 () Int)
(declare-fun x4025 () Bool)
(declare-fun x4158 () Bool)
(declare-fun x8501 () Bool)
(declare-fun x8319 () Bool)
(declare-fun x5010 () Int)
(declare-fun x5815 () Int)
(declare-fun x8051 () Bool)
(declare-fun x6332 () Int)
(declare-fun x8025 () Bool)
(declare-fun x4842 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x6932 () Bool)
(declare-fun x2868 () Int)
(declare-fun x711 () Bool)
(declare-fun x6270 () Bool)
(declare-fun x1469 (Int) Int)
(declare-fun x2010 () Int)
(declare-fun x6918 () Int)
(declare-fun x1244 () Bool)
(declare-fun x4974 () Int)
(declare-fun x1913 () Bool)
(declare-fun x6748 () Bool)
(declare-fun x7622 () Bool)
(declare-fun x4328 () Bool)
(declare-fun x8217 () Bool)
(declare-fun x1638 () Int)
(declare-fun x7778 () Bool)
(declare-fun x7695 () Int)
(declare-fun x8092 () Int)
(declare-fun x2744 () Int)
(declare-fun x4647 () Int)
(declare-fun x8246 () Int)
(declare-fun x762 () Bool)
(declare-fun x6060 () Bool)
(declare-fun x8327 () Bool)
(declare-fun x6602 () Int)
(declare-fun x5207 () Int)
(declare-fun x7202 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x6078 () Int)
(declare-fun x5419 () Bool)
(declare-fun x1878 () Int)
(declare-fun x7664 () Bool)
(declare-fun x6248 () Int)
(declare-fun x2437 () Int)
(declare-fun x8001 () Int)
(declare-fun x8280 () Bool)
(declare-fun x5637 () Int)
(declare-fun x7137 () Int)
(declare-fun x2085 () Int)
(declare-fun x2218 () Bool)
(declare-fun x2833 () Int)
(declare-fun x4506 () Bool)
(declare-fun x2431 () Int)
(declare-fun x5884 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x4335 () Int)
(declare-fun x6022 () Bool)
(declare-fun x5254 () Int)
(declare-fun x7736 () Int)
(declare-fun x86 () Int)
(declare-fun x449 () Bool)
(declare-fun x4331 () Bool)
(declare-fun x3591 () Int)
(declare-fun x5236 () Int)
(declare-fun x224 () Int)
(declare-fun x1020 () Int)
(declare-fun x950 () Int)
(declare-fun x8574 () Int)
(declare-fun x8475 () Bool)
(declare-fun x4405 () Int)
(declare-fun x4805 () Bool)
(declare-fun x1264 () Int)
(declare-fun x4052 () Int)
(declare-fun x4279 () Bool)
(declare-fun x3023 () Int)
(declare-fun x249 () Int)
(declare-fun x633 () Bool)
(declare-fun x1294 () Int)
(declare-fun x4133 () Bool)
(declare-fun x1955 () Int)
(declare-fun x7082 () Int)
(declare-fun x6230 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x8181 () Int)
(declare-fun x7354 () Bool)
(declare-fun x5044 () Int)
(declare-fun x130 () Bool)
(declare-fun x8430 () Bool)
(declare-fun x5840 () Bool)
(declare-fun x5514 () Int)
(declare-fun x5753 () Int)
(declare-fun x3087 () Int)
(declare-fun x580 () Int)
(declare-fun x8300 () Int)
(declare-fun x7288 () Bool)
(declare-fun x8581 () Bool)
(declare-fun x7603 () Bool)
(declare-fun x2208 () Int)
(declare-fun x4427 () Int)
(declare-fun x6673 () Int)
(declare-fun x1008 () Bool)
(declare-fun x6231 () Int)
(declare-fun x5246 () Bool)
(declare-fun x5413 () Int)
(declare-fun x1279 () Bool)
(declare-fun x5770 () Bool)
(declare-fun x6863 () Bool)
(declare-fun x7504 () Bool)
(declare-fun x7758 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x440 () Int)
(declare-fun x5201 () Int)
(declare-fun x8519 () Bool)
(declare-fun x7003 () Bool)
(declare-fun x6439 () Bool)
(declare-fun x4994 () Int)
(declare-fun x4286 () Bool)
(declare-fun x972 () Bool)
(declare-fun x5280 () Bool)
(declare-fun x8037 () Int)
(declare-fun x5015 () Int)
(declare-fun x5463 () Bool)
(declare-fun x5157 () Bool)
(declare-fun x5307 () Int)
(declare-fun x2335 () Int)
(declare-fun x4913 () Int)
(declare-fun x1679 () Bool)
(declare-fun x8042 () Int)
(declare-fun x765 () Bool)
(declare-fun x5668 () Bool)
(declare-fun x5002 () Int)
(declare-fun x5238 () Bool)
(declare-fun x7721 () Bool)
(declare-fun x2475 () Int)
(declare-fun x6715 () Bool)
(declare-fun x1891 () Int)
(declare-fun x4922 () Bool)
(declare-fun x5239 () Bool)
(declare-fun x2560 () Int)
(declare-fun x2249 () Int)
(declare-fun x242 () Bool)
(declare-fun x1336 () Int)
(declare-fun x5589 () Bool)
(declare-fun x2558 () Int)
(declare-fun x5348 () Bool)
(declare-fun x6440 () Int)
(declare-fun x123 (Int) Int)
(declare-fun x7177 () Bool)
(declare-fun x6569 () Bool)
(declare-fun x7156 () Int)
(declare-fun x2567 () Bool)
(declare-fun x8255 () Bool)
(declare-fun x3838 () Int)
(declare-fun x1754 () Int)
(declare-fun x6105 () Bool)
(declare-fun x7569 () Int)
(declare-fun x1903 () Int)
(declare-fun x4186 () Bool)
(declare-fun x8282 () Bool)
(declare-fun x6158 () Int)
(declare-fun x6364 () Bool)
(declare-fun x3832 () Int)
(declare-fun x2459 () Int)
(declare-fun x5638 () Int)
(declare-fun x6542 () Int)
(declare-fun x1251 () Int)
(declare-fun x3032 () Int)
(declare-fun x6037 () Bool)
(declare-fun x8287 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x6365 () Bool)
(declare-fun x681 () Int)
(declare-fun x464 () Bool)
(declare-fun x6053 () Bool)
(declare-fun x3567 () Bool)
(declare-fun x6944 () Bool)
(declare-fun x2741 () Bool)
(declare-fun x4403 () Bool)
(declare-fun x2867 () Bool)
(declare-fun x5194 () Int)
(declare-fun x3200 () Bool)
(declare-fun x6699 () Int)
(declare-fun x7513 () Bool)
(declare-fun x8545 () Bool)
(declare-fun x2188 () Int)
(declare-fun x5138 () Bool)
(declare-fun x4977 () Bool)
(declare-fun x8571 () Int)
(declare-fun x5666 () Bool)
(declare-fun x3694 () Int)
(declare-fun x2523 () Int)
(declare-fun x4112 () Bool)
(declare-fun x2881 () Int)
(declare-fun x2892 () Int)
(declare-fun x7164 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1200 () Bool)
(declare-fun x5296 () Int)
(declare-fun x3001 () Bool)
(declare-fun x7822 () Int)
(declare-fun x5762 () Int)
(declare-fun x5353 () Int)
(declare-fun x161 () Int)
(declare-fun x7849 () Int)
(declare-fun x5220 () Int)
(declare-fun x8439 () Bool)
(declare-fun x928 () Int)
(declare-fun x3869 () Int)
(declare-fun x7375 () Int)
(declare-fun x1056 () Int)
(declare-fun x4491 () Int)
(declare-fun x4955 () Bool)
(declare-fun x1915 () Int)
(declare-fun x4351 () Bool)
(declare-fun x5906 () Bool)
(declare-fun x3334 () Bool)
(declare-fun x7699 () Bool)
(declare-fun x8106 () Bool)
(declare-fun x6982 () Int)
(declare-fun x5860 () Int)
(declare-fun x8462 () Bool)
(declare-fun x2911 () Int)
(declare-fun x8541 () Int)
(declare-fun x617 () Int)
(declare-fun x2241 () Bool)
(declare-fun x8316 () Int)
(declare-fun x8527 () Bool)
(declare-fun x4140 (Int) Int)
(declare-fun x4485 () Int)
(declare-fun x5722 () Bool)
(declare-fun x903 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x5852 () Int)
(declare-fun x7726 () Int)
(declare-fun x6125 () Int)
(declare-fun x4301 () Int)
(declare-fun x2902 () Int)
(declare-fun x2969 () Int)
(declare-fun x6073 () Int)
(declare-fun x5086 () Int)
(declare-fun x7286 () Int)
(declare-fun x8216 () Int)
(declare-fun x5972 () Int)
(declare-fun x1744 () Bool)
(declare-fun x4882 () Int)
(declare-fun x4538 () Bool)
(declare-fun x3218 () Int)
(declare-fun x5152 () Bool)
(declare-fun x3234 () Int)
(declare-fun x2067 () Int)
(declare-fun x7610 () Int)
(declare-fun x6058 () Int)
(declare-fun x4285 () Int)
(declare-fun x6338 () Int)
(declare-fun x2920 () Bool)
(declare-fun x3216 () Bool)
(declare-fun x701 () Int)
(declare-fun x4528 () Int)
(declare-fun x1808 () Bool)
(declare-fun x7757 () Bool)
(declare-fun x5793 () Int)
(declare-fun x7020 () Bool)
(declare-fun x4559 () Int)
(declare-fun x4122 () Bool)
(declare-fun x2650 () Int)
(declare-fun x3687 () Int)
(declare-fun x5909 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x6010 () Int)
(declare-fun x1136 () Bool)
(declare-fun x8090 () Int)
(declare-fun x5699 () Int)
(declare-fun x2337 () Bool)
(declare-fun x1570 () Int)
(declare-fun x7425 () Int)
(declare-fun x7010 () Bool)
(declare-fun x764 () Bool)
(declare-fun x4496 () Bool)
(declare-fun x1673 () Int)
(declare-fun x7862 () Bool)
(declare-fun x7863 () Int)
(declare-fun x3060 () Bool)
(declare-fun x5563 () Int)
(declare-fun x4674 () Int)
(declare-fun x6897 () Int)
(declare-fun x7628 () Int)
(declare-fun x6615 () Int)
(declare-fun x3329 () Int)
(declare-fun x7 () Int)
(declare-fun x5150 () Int)
(declare-fun x1626 () Bool)
(declare-fun x2557 () Bool)
(declare-fun x6150 () Int)
(declare-fun x1360 () Bool)
(declare-fun x3021 () Bool)
(declare-fun x4477 () Int)
(declare-fun x7636 () Int)
(declare-fun x4546 () Int)
(declare-fun x7514 () Bool)
(declare-fun x500 () Int)
(declare-fun x2037 () Bool)
(declare-fun x4959 () Int)
(declare-fun x8170 () Int)
(declare-fun x79 () Bool)
(declare-fun x3246 () Int)
(declare-fun x8081 () Int)
(declare-fun x5299 (Int) Int)
(declare-fun x1541 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x7794 () Int)
(declare-fun x7129 () Int)
(declare-fun x5609 () Int)
(declare-fun x3292 () Int)
(declare-fun x8052 () Bool)
(declare-fun x5806 () Bool)
(declare-fun x6908 () Int)
(declare-fun x5545 () Int)
(declare-fun x2604 () Int)
(declare-fun x1439 () Int)
(declare-fun x4161 () Int)
(declare-fun x1585 () Bool)
(declare-fun x2786 () Int)
(declare-fun x8460 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x8146 () Bool)
(declare-fun x8141 () Int)
(declare-fun x4717 () Bool)
(declare-fun x8437 () Int)
(declare-fun x1089 () Bool)
(declare-fun x2179 () Int)
(declare-fun x2088 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x1852 () Int)
(declare-fun x8266 () Int)
(declare-fun x1995 () Int)
(declare-fun x5394 () Bool)
(declare-fun x2629 () Int)
(declare-fun x8303 () Bool)
(declare-fun x7134 () Bool)
(declare-fun x4309 () Int)
(declare-fun x1919 () Int)
(declare-fun x857 () Int)
(declare-fun x1653 () Int)
(declare-fun x1694 () Int)
(declare-fun x7604 () Bool)
(declare-fun x3766 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x5266 () Bool)
(declare-fun x4897 () Int)
(declare-fun x8200 () Int)
(declare-fun x5718 () Int)
(declare-fun x8487 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x6508 () Int)
(declare-fun x799 () Int)
(declare-fun x6475 () Bool)
(declare-fun x5611 () Bool)
(declare-fun x6623 () Bool)
(declare-fun x4547 () Int)
(declare-fun x6600 () Bool)
(declare-fun x7510 () Int)
(declare-fun x8188 () Int)
(declare-fun x2079 (Int) Int)
(declare-fun x7493 () Int)
(declare-fun x6391 () Int)
(declare-fun x7709 () Int)
(declare-fun x8010 () Int)
(declare-fun x5096 () Bool)
(declare-fun x8326 () Int)
(declare-fun x6120 () Bool)
(declare-fun x5485 () Int)
(declare-fun x2166 () Bool)
(declare-fun x7578 () Bool)
(declare-fun x1899 () Int)
(declare-fun x5695 () Bool)
(declare-fun x5363 () Int)
(declare-fun x7575 () Bool)
(declare-fun x3520 () Int)
(declare-fun x7359 () Int)
(declare-fun x4862 () Bool)
(declare-fun x3571 () Bool)
(declare-fun x2108 () Int)
(declare-fun x8431 () Int)
(declare-fun x5839 () Int)
(declare-fun x4718 () Int)
(declare-fun x7538 () Bool)
(declare-fun x2516 () Int)
(declare-fun x8277 () Bool)
(declare-fun x7352 () Int)
(declare-fun x7972 () Bool)
(declare-fun x6685 () Bool)
(declare-fun x6668 () Bool)
(declare-fun x496 () Int)
(declare-fun x5023 () Bool)
(declare-fun x4687 () Int)
(declare-fun x2262 () Bool)
(declare-fun x2547 () Int)
(declare-fun x3041 (Int) Int)
(declare-fun x2418 () Int)
(declare-fun x202 () Int)
(declare-fun x1997 () Bool)
(declare-fun x659 () Int)
(declare-fun x7409 () Int)
(declare-fun x4632 () Int)
(declare-fun x3600 () Bool)
(declare-fun x4050 () Int)
(declare-fun x5003 () Bool)
(declare-fun x6228 () Int)
(declare-fun x2150 () Int)
(declare-fun x3398 () Bool)
(declare-fun x8234 (Int) Int)
(declare-fun x6816 () Bool)
(declare-fun x7316 () Int)
(declare-fun x4160 () Int)
(declare-fun x3696 () Int)
(declare-fun x1954 () Bool)
(declare-fun x3814 () Bool)
(declare-fun x4796 () Int)
(declare-fun x8267 () Int)
(declare-fun x958 (Int) Int)
(declare-fun x4625 () Bool)
(declare-fun x1451 () Int)
(declare-fun x3710 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x2909 () Int)
(declare-fun x7878 () Int)
(declare-fun x1770 () Bool)
(declare-fun x4124 () Bool)
(declare-fun x6704 () Bool)
(declare-fun x400 () Int)
(declare-fun x6414 () Int)
(declare-fun x8011 () Bool)
(declare-fun x3777 () Int)
(declare-fun x3403 () Int)
(declare-fun x4629 () Bool)
(declare-fun x2670 () Bool)
(declare-fun x6554 () Int)
(declare-fun x1613 () Bool)
(declare-fun x6137 () Int)
(declare-fun x5451 () Bool)
(declare-fun x4960 () Int)
(declare-fun x2688 (Int) Int)
(declare-fun x6983 () Bool)
(declare-fun x7668 () Bool)
(declare-fun x4603 () Int)
(declare-fun x3037 () Bool)
(declare-fun x6610 () Bool)
(declare-fun x6845 () Bool)
(declare-fun x6122 () Bool)
(declare-fun x1853 () Int)
(declare-fun x3488 () Bool)
(declare-fun x833 () Int)
(declare-fun x3906 () Bool)
(declare-fun x76 () Int)
(declare-fun x317 () Bool)
(declare-fun x7871 () Int)
(declare-fun x6915 () Int)
(declare-fun x333 () Int)
(declare-fun x8055 () Bool)
(declare-fun x626 () Int)
(declare-fun x1500 () Bool)
(declare-fun x6855 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x5386 () Bool)
(declare-fun x5128 () Int)
(declare-fun x7482 () Int)
(declare-fun x138 () Int)
(declare-fun x8120 () Int)
(declare-fun x7912 () Bool)
(declare-fun x7059 () Bool)
(declare-fun x5290 () Bool)
(declare-fun x6515 () Int)
(declare-fun x7465 () Bool)
(declare-fun x2765 () Int)
(declare-fun x8199 () Bool)
(declare-fun x4182 () Bool)
(declare-fun x6108 () Bool)
(declare-fun x3010 () Int)
(declare-fun x3100 () Int)
(declare-fun x7236 () Bool)
(declare-fun x3086 () Int)
(declare-fun x760 () Bool)
(declare-fun x141 () Bool)
(declare-fun x7335 () Int)
(declare-fun x8461 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x8103 () Int)
(declare-fun x1554 () Int)
(declare-fun x834 () Bool)
(declare-fun x6164 () Bool)
(declare-fun x1549 () Int)
(declare-fun x1492 () Bool)
(declare-fun x2544 () Int)
(declare-fun x4378 (Int) Int)
(declare-fun x712 () Int)
(declare-fun x2011 () Int)
(declare-fun x2698 () Bool)
(declare-fun x7154 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x241 () Int)
(declare-fun x1991 () Int)
(declare-fun x2797 () Int)
(declare-fun x3312 () Int)
(declare-fun x2844 () Bool)
(declare-fun x610 () Bool)
(declare-fun x1120 () Int)
(declare-fun x4520 () Int)
(declare-fun x3846 () Bool)
(declare-fun x2796 () Int)
(declare-fun x2611 () Int)
(declare-fun x5767 () Int)
(declare-fun x1060 () Int)
(declare-fun x673 () Bool)
(declare-fun x755 () Int)
(declare-fun x3741 () Int)
(declare-fun x7511 () Bool)
(declare-fun x2336 () Int)
(declare-fun x2630 () Int)
(declare-fun x5774 () Int)
(declare-fun x7062 () Bool)
(declare-fun x4840 () Int)
(declare-fun x470 () Int)
(declare-fun x7515 () Int)
(declare-fun x4572 () Bool)
(declare-fun x3122 () Int)
(declare-fun x4892 () Bool)
(declare-fun x3262 () Int)
(declare-fun x3622 () Int)
(declare-fun x2924 () Int)
(declare-fun x8552 () Int)
(declare-fun x4998 () Int)
(declare-fun x4775 () Bool)
(declare-fun x5869 () Bool)
(declare-fun x1368 () Int)
(declare-fun x1776 () Int)
(declare-fun x1596 () Bool)
(declare-fun x5209 () Bool)
(declare-fun x181 () Bool)
(declare-fun x7308 () Bool)
(declare-fun x6074 () Int)
(declare-fun x5944 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x6138 () Int)
(declare-fun x6287 () Int)
(declare-fun x6836 () Int)
(declare-fun x2850 () Int)
(declare-fun x7382 () Int)
(declare-fun x647 () Bool)
(declare-fun x1665 () Int)
(declare-fun x8573 () Bool)
(declare-fun x3069 () Bool)
(declare-fun x7753 () Int)
(declare-fun x2880 () Bool)
(declare-fun x2436 () Int)
(declare-fun x6432 () Int)
(declare-fun x1466 () Bool)
(declare-fun x7267 () Bool)
(declare-fun x7540 () Int)
(declare-fun x7366 () Int)
(declare-fun x369 () Bool)
(declare-fun x5771 (Int) Int)
(declare-fun x4294 () Int)
(declare-fun x4621 () Bool)
(declare-fun x4798 () Bool)
(declare-fun x5432 () Bool)
(declare-fun x4888 () Int)
(declare-fun x6110 () Int)
(declare-fun x7102 () Int)
(declare-fun x7126 () Bool)
(declare-fun x3436 () Int)
(declare-fun x4870 () Int)
(declare-fun x1284 () Int)
(declare-fun x754 () Bool)
(declare-fun x2370 () Int)
(declare-fun x1446 () Int)
(declare-fun x6696 () Bool)
(declare-fun x8033 () Bool)
(declare-fun x7605 () Int)
(declare-fun x6147 () Bool)
(declare-fun x4763 () Int)
(declare-fun x6279 () Int)
(declare-fun x4037 () Int)
(declare-fun x4044 () Bool)
(declare-fun x5488 () Bool)
(declare-fun x592 () Bool)
(declare-fun x4917 () Bool)
(declare-fun x571 () Bool)
(declare-fun x7801 () Bool)
(declare-fun x7865 () Int)
(declare-fun x4708 () Int)
(declare-fun x1076 () Int)
(declare-fun x6788 () Int)
(declare-fun x6925 () Int)
(declare-fun x7404 () Bool)
(declare-fun x7846 () Int)
(declare-fun x139 () Int)
(declare-fun x533 () Int)
(declare-fun x7933 () Int)
(declare-fun x5677 () Bool)
(declare-fun x218 () Bool)
(declare-fun x47 () Int)
(declare-fun x1667 () Int)
(declare-fun x8390 () Int)
(declare-fun x6478 () Bool)
(declare-fun x5641 () Bool)
(declare-fun x1738 () Int)
(declare-fun x1314 () Int)
(declare-fun x4712 () Bool)
(declare-fun x8263 () Int)
(declare-fun x1788 () Bool)
(declare-fun x6525 () Int)
(declare-fun x1185 () Bool)
(declare-fun x4529 () Int)
(declare-fun x6133 () Bool)
(declare-fun x5320 () Bool)
(declare-fun x7350 () Bool)
(declare-fun x6592 () Bool)
(declare-fun x6409 () Int)
(declare-fun x3739 () Bool)
(declare-fun x1880 (Int) Int)
(declare-fun x8467 () Int)
(declare-fun x3606 () Int)
(declare-fun x6212 () Int)
(declare-fun x2953 () Int)
(declare-fun x4056 () Int)
(declare-fun x1306 () Int)
(declare-fun x2823 () Bool)
(declare-fun x4981 () Int)
(declare-fun x7091 () Int)
(declare-fun x772 () Bool)
(declare-fun x5155 () Int)
(declare-fun x2809 (Int) Int)
(declare-fun x327 () Bool)
(declare-fun x6352 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x6462 () Int)
(declare-fun x3630 () Int)
(declare-fun x962 () Int)
(declare-fun x8102 () Int)
(declare-fun x3386 () Int)
(declare-fun x703 () Int)
(declare-fun x4142 () Int)
(declare-fun x4714 () Int)
(declare-fun x2006 () Int)
(declare-fun x896 () Int)
(declare-fun x8381 () Int)
(declare-fun x6519 () Int)
(declare-fun x2482 () Int)
(declare-fun x4101 () Bool)
(declare-fun x3925 () Int)
(declare-fun x1619 () Int)
(declare-fun x6236 () Bool)
(declare-fun x6385 () Int)
(declare-fun x8406 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x8111 () Int)
(declare-fun x2943 () Int)
(declare-fun x3293 () Bool)
(declare-fun x7201 () Bool)
(declare-fun x4245 () Int)
(declare-fun x789 () Int)
(declare-fun x4198 (Int) Int)
(declare-fun x2355 () Int)
(declare-fun x2695 () Int)
(declare-fun x6887 () Int)
(declare-fun x5081 () Bool)
(declare-fun x3446 () Int)
(declare-fun x104 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x4785 () Int)
(declare-fun x5388 () Bool)
(declare-fun x5093 () Int)
(declare-fun x2713 () Bool)
(declare-fun x8018 () Int)
(declare-fun x4487 () Int)
(declare-fun x7508 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x7625 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x3562 () Int)
(declare-fun x2300 () Bool)
(declare-fun x3664 () Bool)
(declare-fun x5903 () Int)
(declare-fun x824 () Int)
(declare-fun x3401 () Int)
(declare-fun x6449 () Int)
(declare-fun x170 () Bool)
(declare-fun x7037 () Int)
(declare-fun x5956 () Int)
(declare-fun x8191 () Int)
(declare-fun x1862 () Int)
(declare-fun x213 () Int)
(declare-fun x398 () Int)
(declare-fun x4435 () Int)
(declare-fun x5927 () Bool)
(declare-fun x7153 () Int)
(declare-fun x6028 () Int)
(declare-fun x1064 () Int)
(declare-fun x4991 () Int)
(declare-fun x8147 () Bool)
(declare-fun x6919 () Int)
(declare-fun x920 () Int)
(declare-fun x1253 () Int)
(declare-fun x7045 () Bool)
(declare-fun x7934 () Int)
(declare-fun x7766 () Bool)
(declare-fun x3224 () Bool)
(declare-fun x8029 () Int)
(declare-fun x3347 () Int)
(declare-fun x2139 () Int)
(declare-fun x2073 () Int)
(declare-fun x8114 () Bool)
(declare-fun x2376 () Int)
(declare-fun x5597 () Bool)
(declare-fun x414 () Int)
(declare-fun x7996 () Int)
(declare-fun x3506 () Bool)
(declare-fun x5306 () Int)
(declare-fun x4393 () Bool)
(declare-fun x3093 () Int)
(declare-fun x455 (Int) Int)
(declare-fun x6756 () Int)
(declare-fun x8520 () Bool)
(declare-fun x8582 () Int)
(declare-fun x2462 () Bool)
(declare-fun x7249 () Int)
(declare-fun x1168 () Int)
(declare-fun x2375 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x8066 () Int)
(declare-fun x532 () Int)
(declare-fun x3994 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x6926 () Bool)
(declare-fun x2116 () Int)
(declare-fun x3337 () Bool)
(declare-fun x7946 () Int)
(declare-fun x840 (Int) Int)
(declare-fun x2738 () Int)
(declare-fun x6216 () Int)
(declare-fun x5133 () Bool)
(declare-fun x6585 () Int)
(declare-fun x5430 () Int)
(declare-fun x4503 () Bool)
(declare-fun x2782 () Bool)
(declare-fun x2468 () Int)
(declare-fun x2435 () Int)
(declare-fun x2015 () Bool)
(declare-fun x5448 () Bool)
(declare-fun x3073 () Int)
(declare-fun x5851 () Int)
(declare-fun x2272 () Bool)
(declare-fun x4710 () Int)
(declare-fun x7844 () Bool)
(declare-fun x4586 () Int)
(declare-fun x8192 () Int)
(declare-fun x7452 () Int)
(declare-fun x1599 () Int)
(declare-fun x7242 () Int)
(declare-fun x2993 () Bool)
(declare-fun x5961 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x5251 () Bool)
(declare-fun x6160 () Bool)
(declare-fun x7414 () Bool)
(declare-fun x7313 () Bool)
(declare-fun x7106 (Int) Int)
(declare-fun x1803 () Bool)
(declare-fun x2110 () Int)
(declare-fun x7032 () Int)
(declare-fun x3038 () Bool)
(declare-fun x7083 () Int)
(declare-fun x3714 () Int)
(declare-fun x3825 () Bool)
(declare-fun x7411 () Int)
(declare-fun x31 () Bool)
(declare-fun x7730 () Bool)
(declare-fun x4229 () Bool)
(declare-fun x2111 () Int)
(declare-fun x4080 () Int)
(declare-fun x2724 () Int)
(declare-fun x5685 () Bool)
(declare-fun x5936 () Int)
(declare-fun x275 () Int)
(declare-fun x7378 () Int)
(declare-fun x5958 () Int)
(declare-fun x811 () Int)
(declare-fun x7050 () Int)
(declare-fun x7327 () Int)
(declare-fun x4149 () Int)
(declare-fun x662 () Bool)
(declare-fun x6299 () Int)
(declare-fun x8209 () Bool)
(declare-fun x6567 (Int) Int)
(declare-fun x2957 () Int)
(declare-fun x6166 () Int)
(declare-fun x1380 () Int)
(declare-fun x8451 () Int)
(declare-fun x3194 () Int)
(declare-fun x1220 () Int)
(declare-fun x3501 () Int)
(declare-fun x149 () Int)
(declare-fun x6561 () Int)
(declare-fun x4879 () Int)
(declare-fun x4748 () Bool)
(declare-fun x6247 () Int)
(declare-fun x1607 () Int)
(declare-fun x6838 () Int)
(declare-fun x2536 () Bool)
(declare-fun x8239 () Bool)
(declare-fun x6719 () Int)
(declare-fun x5259 () Int)
(declare-fun x5084 () Bool)
(declare-fun x4696 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x7720 () Int)
(declare-fun x6806 () Int)
(declare-fun x1178 () Int)
(declare-fun x694 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x5540 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x1965 () Int)
(declare-fun x6867 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x8449 () Int)
(declare-fun x1435 () Int)
(declare-fun x5068 () Int)
(declare-fun x1623 () Int)
(declare-fun x5481 () Int)
(declare-fun x338 () Bool)
(declare-fun x3933 () Int)
(declare-fun x3653 () Int)
(declare-fun x784 () Int)
(declare-fun x2877 () Int)
(declare-fun x1868 () Bool)
(declare-fun x5387 () Bool)
(declare-fun x2464 () Int)
(declare-fun x5113 () Int)
(declare-fun x1081 () Int)
(declare-fun x7945 () Bool)
(declare-fun x591 () Int)
(declare-fun x7613 () Int)
(declare-fun x2083 () Int)
(declare-fun x6007 () Int)
(declare-fun x1256 () Int)
(declare-fun x4323 () Int)
(declare-fun x3611 () Int)
(declare-fun x3382 () Bool)
(declare-fun x20 () Int)
(declare-fun x6401 () Int)
(declare-fun x2728 () Int)
(declare-fun x2147 () Bool)
(declare-fun x482 () Bool)
(declare-fun x5649 () Int)
(declare-fun x236 () Int)
(declare-fun x6048 () Bool)
(declare-fun x6830 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x1071 () Int)
(declare-fun x4924 () Bool)
(declare-fun x5468 () Int)
(declare-fun x1790 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x6688 () Int)
(declare-fun x718 () Bool)
(declare-fun x7108 () Bool)
(declare-fun x5813 () Bool)
(declare-fun x1107 () Int)
(declare-fun x695 () Bool)
(declare-fun x8369 () Int)
(declare-fun x3482 () Bool)
(declare-fun x2346 () Int)
(declare-fun x1967 () Int)
(declare-fun x7883 () Int)
(declare-fun x7079 () Bool)
(declare-fun x8044 () Bool)
(declare-fun x3960 () Int)
(declare-fun x4740 () Int)
(declare-fun x7412 () Bool)
(declare-fun x5841 () Bool)
(declare-fun x940 () Int)
(declare-fun x7478 () Int)
(declare-fun x3765 () Int)
(declare-fun x897 () Bool)
(declare-fun x5019 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x457 () Bool)
(declare-fun x6042 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x3782 () Int)
(declare-fun x5654 () Bool)
(declare-fun x6591 () Int)
(declare-fun x8343 () Bool)
(declare-fun x4010 () Bool)
(declare-fun x3195 () Bool)
(declare-fun x6140 () Bool)
(declare-fun x4630 () Int)
(declare-fun x1605 () Bool)
(declare-fun x52 () Bool)
(declare-fun x2959 () Int)
(declare-fun x7248 () Int)
(declare-fun x7333 () Int)
(declare-fun x5122 () Bool)
(declare-fun x550 () Int)
(declare-fun x5989 () Int)
(declare-fun x3673 () Bool)
(declare-fun x3167 () Bool)
(declare-fun x6400 () Bool)
(declare-fun x425 () Int)
(declare-fun x2091 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x7403 () Bool)
(declare-fun x5080 () Int)
(declare-fun x3172 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x7642 () Int)
(declare-fun x6267 () Int)
(declare-fun x923 () Int)
(declare-fun x6598 () Int)
(declare-fun x7502 () Int)
(declare-fun x1161 () Int)
(declare-fun x3976 () Bool)
(declare-fun x5938 () Bool)
(declare-fun x5470 () Int)
(declare-fun x1167 () Bool)
(declare-fun x1729 () Int)
(declare-fun x5715 () Bool)
(declare-fun x545 () Bool)
(declare-fun x5934 () Bool)
(declare-fun x6438 () Int)
(declare-fun x2864 () Int)
(declare-fun x2587 () Int)
(declare-fun x2822 () Bool)
(declare-fun x6902 () Bool)
(declare-fun x5911 () Int)
(declare-fun x5016 () Int)
(declare-fun x2622 () Bool)
(declare-fun x5538 () Bool)
(declare-fun x5948 () Bool)
(declare-fun x5183 () Int)
(declare-fun x6833 () Int)
(declare-fun x4209 () Int)
(declare-fun x6973 () Bool)
(declare-fun x7607 () Bool)
(declare-fun x3689 () Bool)
(declare-fun x3117 () Int)
(declare-fun x5401 () Bool)
(declare-fun x7979 () Int)
(declare-fun x1108 () Int)
(declare-fun x5420 () Int)
(declare-fun x4508 () Bool)
(declare-fun x2534 () Int)
(declare-fun x6796 () Bool)
(declare-fun x4720 () Bool)
(declare-fun x1743 () Int)
(declare-fun x3617 () Bool)
(declare-fun x7915 () Bool)
(declare-fun x3171 () Int)
(declare-fun x3351 () Int)
(declare-fun x5053 () Bool)
(declare-fun x731 () Bool)
(declare-fun x4136 () Int)
(declare-fun x1536 () Bool)
(declare-fun x4780 () Int)
(declare-fun x6970 () Int)
(declare-fun x4187 () Bool)
(declare-fun x3952 () Int)
(declare-fun x7745 () Bool)
(declare-fun x3034 () Bool)
(declare-fun x6535 () Bool)
(declare-fun x5698 () Bool)
(declare-fun x8080 () Bool)
(declare-fun x1002 () Int)
(declare-fun x433 () Bool)
(declare-fun x7611 () Int)
(declare-fun x5947 () Int)
(declare-fun x2751 () Bool)
(declare-fun x1701 () Int)
(declare-fun x6977 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x2114 () Int)
(declare-fun x4247 () Bool)
(declare-fun x4537 () Bool)
(declare-fun x7799 () Bool)
(declare-fun x4002 () Bool)
(declare-fun x6340 () Int)
(declare-fun x6821 () Int)
(declare-fun x7061 () Bool)
(declare-fun x3824 () Bool)
(declare-fun x7444 () Int)
(declare-fun x2213 () Int)
(declare-fun x7384 () Int)
(declare-fun x13 () Bool)
(declare-fun x5731 () Int)
(declare-fun x4976 () Bool)
(declare-fun x2177 () Bool)
(declare-fun x4956 () Int)
(declare-fun x2076 () Int)
(declare-fun x4082 () Bool)
(declare-fun x3548 () Int)
(declare-fun x4966 () Bool)
(declare-fun x7057 () Int)
(declare-fun x2233 () Int)
(declare-fun x2771 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x5310 () Bool)
(declare-fun x2572 () Bool)
(declare-fun x7162 () Int)
(declare-fun x6102 () Int)
(declare-fun x2387 () Bool)
(declare-fun x2096 () Bool)
(declare-fun x1254 () Int)
(declare-fun x916 () Bool)
(declare-fun x3763 () Int)
(declare-fun x3500 () Bool)
(declare-fun x4651 () Bool)
(declare-fun x2126 () Int)
(declare-fun x3050 () Int)
(declare-fun x3583 () Bool)
(declare-fun x5328 () Int)
(declare-fun x2656 () Bool)
(declare-fun x2039 () Int)
(declare-fun x2960 () Int)
(declare-fun x6853 () Bool)
(declare-fun x6139 () Bool)
(declare-fun x7931 () Bool)
(declare-fun x3220 () Int)
(declare-fun x1699 () Bool)
(declare-fun x1232 () Int)
(declare-fun x1477 () Int)
(declare-fun x3332 () Bool)
(declare-fun x8062 () Int)
(declare-fun x8229 () Bool)
(declare-fun x5558 () Bool)
(declare-fun x3667 () Int)
(declare-fun x5705 () Int)
(declare-fun x4473 () Int)
(declare-fun x4310 () Int)
(declare-fun x2693 () Int)
(declare-fun x6189 () Int)
(declare-fun x4219 () Int)
(declare-fun x6040 () Int)
(declare-fun x4912 () Int)
(declare-fun x5690 () Bool)
(declare-fun x1472 () Int)
(declare-fun x3580 () Int)
(declare-fun x2127 () Int)
(declare-fun x1813 () Int)
(declare-fun x1361 () Int)
(declare-fun x407 () Int)
(declare-fun x3547 () Int)
(declare-fun x4526 () Bool)
(declare-fun x8394 () Int)
(declare-fun x8557 () Bool)
(declare-fun x3640 () Bool)
(declare-fun x1121 () Int)
(declare-fun x5298 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x3512 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x7463 () Int)
(declare-fun x7982 () Int)
(declare-fun x7793 () Int)
(declare-fun x5399 () Int)
(declare-fun x5970 () Int)
(declare-fun x5134 () Bool)
(declare-fun x3791 () Int)
(declare-fun x4648 () Bool)
(declare-fun x4299 () Bool)
(declare-fun x6819 () Int)
(declare-fun x469 () Bool)
(declare-fun x3006 () Bool)
(declare-fun x639 () Bool)
(declare-fun x5549 () Int)
(declare-fun x2396 () Int)
(declare-fun x1109 () Bool)
(declare-fun x1476 () Int)
(declare-fun x221 () Int)
(declare-fun x6115 () Bool)
(declare-fun x7580 () Int)
(declare-fun x6759 () Int)
(declare-fun x237 (Int) Int)
(declare-fun x7040 () Int)
(declare-fun x5910 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x5446 () Bool)
(declare-fun x7428 () Int)
(declare-fun x867 () Int)
(declare-fun x3900 () Int)
(declare-fun x7485 () Bool)
(declare-fun x1872 () Int)
(declare-fun x5178 () Int)
(declare-fun x5181 () Bool)
(declare-fun x3629 () Bool)
(declare-fun x5106 () Int)
(declare-fun x1529 () Int)
(declare-fun x2178 () Int)
(declare-fun x6717 () Int)
(declare-fun x8586 () Int)
(declare-fun x944 () Int)
(declare-fun x331 () Int)
(declare-fun x4225 () Int)
(declare-fun x3742 () Int)
(declare-fun x5521 () Bool)
(declare-fun x7797 () Bool)
(declare-fun x7358 () Int)
(declare-fun x6232 () Bool)
(declare-fun x6522 () Int)
(declare-fun x535 () Bool)
(declare-fun x4915 () Int)
(declare-fun x6847 () Int)
(declare-fun x5372 () Bool)
(declare-fun x1664 (Int) Int)
(declare-fun x6506 () Int)
(declare-fun x3862 () Bool)
(declare-fun x1723 () Int)
(declare-fun x71 () Int)
(declare-fun x2574 () Int)
(declare-fun x776 () Bool)
(declare-fun x8417 () Int)
(declare-fun x987 () Int)
(declare-fun x3535 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x3570 () Bool)
(declare-fun x8505 (Int) Int)
(declare-fun x2703 () Bool)
(declare-fun x5059 () Int)
(declare-fun x4705 () Int)
(declare-fun x7361 () Int)
(declare-fun x5449 () Int)
(declare-fun x743 () Int)
(declare-fun x6349 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x215 () Bool)
(declare-fun x1481 () Int)
(declare-fun x3582 () Int)
(declare-fun x4618 () Int)
(declare-fun x6242 () Int)
(declare-fun x6612 () Int)
(declare-fun x6422 () Int)
(declare-fun x8489 () Bool)
(declare-fun x5332 () Int)
(declare-fun x431 () Bool)
(declare-fun x5980 () Bool)
(declare-fun x2582 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x2726 (Int) Int)
(declare-fun x3944 () Bool)
(declare-fun x428 () Bool)
(declare-fun x7190 () Bool)
(declare-fun x56 () Bool)
(declare-fun x3910 () Int)
(declare-fun x8228 () Int)
(declare-fun x4362 (Int) Int)
(declare-fun x6960 () Int)
(declare-fun x1345 () Int)
(declare-fun x3827 () Int)
(declare-fun x8598 () Int)
(declare-fun x3445 () Int)
(declare-fun x7558 (Int) Int)
(declare-fun x7952 () Bool)
(declare-fun x5004 () Bool)
(declare-fun x2184 () Int)
(declare-fun x1299 () Bool)
(declare-fun x4579 () Int)
(declare-fun x4462 () Int)
(declare-fun x3861 () Bool)
(declare-fun x3022 () Int)
(declare-fun x5809 () Int)
(declare-fun x4694 () Int)
(declare-fun x5154 () Int)
(declare-fun x4839 () Int)
(declare-fun x296 () Int)
(declare-fun x3412 () Bool)
(declare-fun x951 () Bool)
(declare-fun x949 () Int)
(declare-fun x5163 () Bool)
(declare-fun x936 () Bool)
(declare-fun x6303 () Bool)
(declare-fun x954 () Bool)
(declare-fun x6441 () Int)
(declare-fun x5382 () Int)
(declare-fun x4433 () Int)
(declare-fun x3102 () Bool)
(declare-fun x4260 () Bool)
(declare-fun x3990 () Bool)
(declare-fun x3268 () Int)
(declare-fun x3070 () Int)
(declare-fun x2648 () Int)
(declare-fun x1235 () Int)
(declare-fun x937 () Int)
(declare-fun x3661 () Bool)
(declare-fun x4631 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x578 () Int)
(declare-fun x6370 () Int)
(declare-fun x2507 () Int)
(declare-fun x1597 () Int)
(declare-fun x6077 () Bool)
(declare-fun x1884 () Int)
(declare-fun x1758 () Int)
(declare-fun x5038 () Bool)
(declare-fun x5924 () Int)
(declare-fun x4013 () Int)
(declare-fun x7480 () Int)
(declare-fun x2121 () Bool)
(declare-fun x4524 () Int)
(declare-fun x6649 () Int)
(declare-fun x3830 () Int)
(declare-fun x3979 () Int)
(declare-fun x636 () Int)
(declare-fun x1815 () Int)
(declare-fun x915 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x2745 () Int)
(declare-fun x3518 () Int)
(declare-fun x467 () Int)
(declare-fun x7421 () Int)
(declare-fun x8387 () Int)
(declare-fun x5608 () Bool)
(declare-fun x6942 () Bool)
(declare-fun x8244 () Bool)
(declare-fun x6976 () Bool)
(declare-fun x1312 () Int)
(declare-fun x3596 () Bool)
(declare-fun x5526 () Int)
(declare-fun x2620 () Bool)
(declare-fun x4437 () Bool)
(declare-fun x4671 () Int)
(declare-fun x885 () Int)
(declare-fun x282 () Int)
(declare-fun x8164 () Bool)
(declare-fun x8085 () Bool)
(declare-fun x537 () Bool)
(declare-fun x504 () Bool)
(declare-fun x8392 () Bool)
(declare-fun x7466 () Int)
(declare-fun x1618 () Bool)
(declare-fun x3392 () Bool)
(declare-fun x4815 () Int)
(declare-fun x6846 () Int)
(declare-fun x7615 () Bool)
(declare-fun x8071 () Int)
(declare-fun x7506 () Bool)
(declare-fun x6050 () Bool)
(declare-fun x8533 () Bool)
(declare-fun x185 () Int)
(declare-fun x8060 () Int)
(declare-fun x618 () Int)
(declare-fun x5676 () Int)
(declare-fun x2918 () Int)
(declare-fun x4270 () Bool)
(declare-fun x6226 () Int)
(declare-fun x1298 () Int)
(declare-fun x2167 () Bool)
(declare-fun x3255 () Int)
(declare-fun x3106 () Bool)
(declare-fun x766 () Int)
(declare-fun x498 () Bool)
(declare-fun x6705 () Bool)
(declare-fun x4989 () Bool)
(declare-fun x2746 () Int)
(declare-fun x6404 () Bool)
(declare-fun x5187 () Int)
(declare-fun x2961 () Int)
(declare-fun x7475 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x2984 () Int)
(declare-fun x389 () Int)
(declare-fun x2525 () Bool)
(declare-fun x8241 () Int)
(declare-fun x6616 () Bool)
(declare-fun x2377 () Int)
(declare-fun x2206 () Int)
(declare-fun x5525 () Int)
(declare-fun x3308 () Int)
(declare-fun x4906 () Int)
(declare-fun x5788 () Int)
(declare-fun x4502 () Int)
(declare-fun x7951 () Bool)
(declare-fun x4251 () Int)
(declare-fun x6675 () Int)
(declare-fun x2391 () Bool)
(declare-fun x5276 () Bool)
(declare-fun x7039 () Int)
(declare-fun x1847 () Int)
(declare-fun x3057 () Int)
(declare-fun x5494 () Bool)
(declare-fun x3897 () Bool)
(declare-fun x5945 () Int)
(declare-fun x6709 () Bool)
(declare-fun x8107 () Int)
(declare-fun x6844 () Bool)
(declare-fun x3812 () Int)
(declare-fun x4055 (Int) Int)
(declare-fun x988 () Bool)
(declare-fun x4566 () Int)
(declare-fun x5587 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x7630 () Int)
(declare-fun x4575 () Int)
(declare-fun x7953 (Int) Int)
(declare-fun x1830 () Int)
(declare-fun x7715 () Int)
(declare-fun x7641 () Bool)
(declare-fun x1218 () Int)
(declare-fun x103 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x5932 () Bool)
(declare-fun x3113 () Int)
(declare-fun x6410 () Bool)
(declare-fun x1079 () Int)
(declare-fun x5237 () Bool)
(declare-fun x7732 () Int)
(declare-fun x1507 () Bool)
(declare-fun x3043 () Int)
(declare-fun x6087 () Int)
(declare-fun x1436 () Bool)
(declare-fun x150 () Int)
(declare-fun x394 () Int)
(declare-fun x1963 () Bool)
(declare-fun x3662 () Int)
(declare-fun x744 () Bool)
(declare-fun x8356 () Bool)
(declare-fun x5721 () Int)
(declare-fun x6428 () Bool)
(declare-fun x4390 () Int)
(declare-fun x8045 () Bool)
(declare-fun x499 () Bool)
(declare-fun x7044 () Int)
(declare-fun x4131 () Int)
(declare-fun x895 () Int)
(declare-fun x3684 (Int) Int)
(declare-fun x6241 () Int)
(declare-fun x2712 () Int)
(declare-fun x2889 () Bool)
(declare-fun x2506 () Int)
(declare-fun x8172 () Int)
(declare-fun x2847 () Int)
(declare-fun x1400 () Bool)
(declare-fun x7561 () Int)
(declare-fun x7260 () Int)
(declare-fun x3373 () Int)
(declare-fun x667 () Bool)
(declare-fun x7989 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x1563 () Int)
(declare-fun x2097 () Bool)
(declare-fun x8059 () Bool)
(declare-fun x6744 () Bool)
(declare-fun x2841 () Int)
(declare-fun x4890 () Bool)
(declare-fun x3133 () Bool)
(define-fun x6862 ((x3539 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3539) (>= x3539 0)) x3539 (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x8448 ((x3539 Int)) Int (ite (and (< x3539 0) (>= x3539 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3539))
(define-fun x851 ((x3539 Int)) Int (ite (and (>= x3539 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3539)) x3539 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3539) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x3539)) (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x3539 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x3539 0)) (+ x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x6803 x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x6021 ((x2289 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2289) (<= 0 x2289)))
(define-fun x1960 ((x2289 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2289) (>= x2289 0)))
(define-fun x3381 ((x2289 Int) (x436 Int)) Bool (= (* x436 x2289) (x4808 x2289 x436)))
(define-fun x6700 ((x2289 Int) (x436 Int)) Bool (and (= (- (* (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2289) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4808 (- x2289 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4808 x2289 (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x2289 (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x436 x2289) (* x436 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x4808 (- x2289 115792089237316195423570985008687907853269984665640564039457584007913129639936) x436))))
(define-fun x8413 ((x2289 Int) (x436 Int)) Bool (=> (and (< 0 x2289) (< 0 x436)) (= (= x436 (x4628 (x851 (x4808 x2289 x436)) x2289)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4808 x2289 x436)))))
(define-fun x7609 ((x2289 Int) (x436 Int)) Bool (=> (and (not (= x436 0)) (not (= 0 x2289))) (and (= (x4628 (x4808 x2289 x436) x2289) x436) (= (x4628 (x4808 x2289 x436) x436) x2289))))
(define-fun x5136 ((x2289 Int) (x436 Int)) Bool (=> (and (< 0 x436) (> x2289 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4808 x2289 x436)) (< (x4628 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2289) x436))))
(define-fun x3317 ((x2289 Int) (x436 Int)) Bool (and (= (x851 (x4808 x2289 x436)) (x851 (x4808 x2289 (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x851 (x4808 (- x2289 115792089237316195423570985008687907853269984665640564039457584007913129639936) x436)) (x851 (x4808 x2289 x436))) (= (x851 (x4808 (- x2289 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x851 (x4808 x2289 x436)))))
(define-fun x2003 ((x2289 Int) (x436 Int)) Bool (and (=> (and (and (<= x436 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x436)) (and (> x2289 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2289))) (= (>= (x4628 57896044618658097711785492504343953926634992332820282019728792003956564819968 x436) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2289)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x4808 (- x2289 115792089237316195423570985008687907853269984665640564039457584007913129639936) x436)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x436) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x436)) (and (> x2289 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2289))) (= (<= (x4808 (- x2289 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x4628 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x436)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2289)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x436) (> x436 0)) (and (< 0 x2289) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2289))) (= (>= (x4628 57896044618658097711785492504343953926634992332820282019728792003956564819967 x436) x2289) (<= (x4808 x2289 x436) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x436) (<= x436 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2289) (> x2289 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x436) (x4628 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2289)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x4808 x2289 (- x436 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x1635 ((x2289 Int) (x436 Int)) Bool (and (x3381 x2289 x436) (x2003 x2289 x436) (x7609 x2289 x436) (x3317 x2289 x436) (x6700 x2289 x436) (x8413 x2289 x436) (x5136 x2289 x436)))
(define-fun x6948 ((x2289 Int)) Bool (and (= 0 (x4808 0 x2289)) (= 0 (x4808 x2289 0))))
(define-fun x2736 ((x2289 Int)) Bool (and (= (x4808 x2289 1) x2289) (= (x4808 1 x2289) x2289)))
(define-fun x2626 ((x2289 Int)) Bool (and (x2736 x2289) (x6948 x2289)))
(define-fun x5953 ((x2289 Int)) Bool (and (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2289) x2289) (= x2289 (x4375 x2289 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x5653 ((x2289 Int)) Bool (and (= 0 (x4375 0 x2289)) (= 0 (x4375 x2289 0))))
(define-fun x2264 ((x2289 Int)) Bool (= x2289 (x4375 x2289 x2289)))
(define-fun x7457 ((x2289 Int)) Bool (and (x5953 x2289) (x5653 x2289) (x2264 x2289)))
(define-fun x3818 ((x2289 Int) (x436 Int)) Bool (= (x4375 x2289 x436) (x4375 x436 x2289)))
(define-fun x7663 ((x2289 Int) (x436 Int)) Bool (and (=> (<= 0 x2289) (>= x2289 (x4375 x2289 x436))) (<= 0 (x4375 x2289 x436)) (=> (<= 0 x436) (>= x436 (x4375 x2289 x436)))))
(define-fun x3810 ((x2289 Int) (x436 Int)) Bool (and (x7663 x2289 x436) (x3818 x2289 x436)))
(define-fun x8409 ((x2289 Int)) Bool (= (x6803 x2289 256) (x4375 x2289 255)))
(define-fun x6290 ((x2289 Int)) Bool (and (x8409 x2289) (x3810 x2289 255)))
(define-fun x8014 ((x2289 Int) (x436 Int)) Bool (and (> x436 (x6803 x2289 x436)) (>= (x6803 x2289 x436) 0)))
(define-fun x7724 ((x2289 Int) (x436 Int)) Bool (=> (and (<= 0 x2289) (> x436 0)) (= (> x436 x2289) (= (x6803 x2289 x436) x2289))))
(define-fun x4858 ((x2289 Int) (x436 Int)) Bool (=> (and (and (>= x2289 x436) (< x2289 (+ x436 x436))) (< 0 x436)) (= (- x2289 x436) (x6803 x2289 x436))))
(define-fun x3646 ((x2289 Int) (x436 Int)) Bool (=> (< 0 x436) (= x2289 (+ (* x436 (x4628 x2289 x436)) (x6803 x2289 x436)))))
(define-fun x2662 ((x2289 Int) (x436 Int)) Bool (and (x8014 x2289 x436) (x3646 x2289 x436) (x4858 x2289 x436) (x7724 x2289 x436)))
(define-fun x63 ((x2289 Int)) Bool (= (x6803 0 x2289) 0))
(define-fun x3924 ((x2289 Int)) Bool (= 0 (x6803 x2289 1)))
(define-fun x7836 ((x2289 Int)) Bool (= (x6803 x2289 x2289) 0))
(define-fun x2186 ((x2289 Int)) Bool (and (x3924 x2289) (x7836 x2289) (x63 x2289)))
(define-fun x324 ((x2289 Int) (x436 Int)) Bool (=> (and (> x436 0) (< 0 x2289)) (and (>= x2289 (x4628 x2289 x436)) (>= (x4628 x2289 x436) 0))))
(define-fun x5264 ((x2289 Int) (x436 Int)) Bool (=> (and (and (<= 1 x436) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x436)) (and (< x2289 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x2289))) (and (>= (x4628 x2289 x436) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4628 x2289 x436)))))
(define-fun x6817 ((x2289 Int) (x436 Int)) Bool (=> (and (> x2289 x436) (< 1 x436)) (> x2289 (x4628 x2289 x436))))
(define-fun x6694 ((x2289 Int) (x436 Int)) Bool (=> (and (> x2289 0) (< 0 x436)) (= (< x2289 x436) (= 0 (x4628 x2289 x436)))))
(define-fun x2917 ((x2289 Int) (x436 Int)) Bool (=> (and (< 0 x436) (< 0 x2289)) (and (<= (* x436 (x4628 x2289 x436)) x2289) (< (- x2289 x436) (* x436 (x4628 x2289 x436))))))
(define-fun x7998 ((x2289 Int) (x436 Int)) Bool (= (- x2289 (x4375 (- x436 1) x2289)) (* (x4628 x2289 x436) x436)))
(define-fun x6517 ((x2289 Int) (x436 Int)) Bool (and (x7998 x2289 x436) (x324 x2289 x436) (x5264 x2289 x436) (x6694 x2289 x436) (x6817 x2289 x436) (x2917 x2289 x436)))
(define-fun x2278 ((x2289 Int)) Bool (= 0 (x4628 0 x2289)))
(define-fun x3890 ((x2289 Int)) Bool (= x2289 (x4628 x2289 1)))
(define-fun x6383 ((x2289 Int)) Bool (=> (not (= 0 x2289)) (= (x4628 x2289 x2289) 1)))
(define-fun x7582 ((x2289 Int)) Bool (and (x2278 x2289) (x6383 x2289) (x3890 x2289)))
(define-fun x5273 ((x2289 Int)) Bool (= (x4375 x2289 1) (x6803 x2289 2)))
(define-fun x5973 ((x2289 Int)) Bool (and (x3810 x2289 1) (x5273 x2289)))
(define-fun x1748 ((x2289 Int)) Bool (= (x4375 x2289 127) (x6803 x2289 128)))
(define-fun x770 ((x2289 Int)) Bool (and (x3810 x2289 127) (x1748 x2289)))
(define-fun x5074 ((x2289 Int)) Bool (= (x851 x2289) (+ (x4375 x2289 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x6803 x2289 256))))
(define-fun x2496 ((x2289 Int)) Bool (and (x3810 x2289 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x5074 x2289)))
(define-fun x547 ((x2289 Int)) Bool (= (x851 x2289) (+ (x4375 x2289 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x6803 x2289 32))))
(define-fun x5269 ((x2289 Int)) Bool (and (x3810 x2289 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x547 x2289)))
(define-fun x8151 ((x2289 Int)) Bool (= (x6803 x2289 26959946667150639794667015087019630673637144422540572481103610249216) (x4375 x2289 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x5005 ((x2289 Int)) Bool (and (x8151 x2289) (x3810 x2289 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1174 ((x2309 Int)) Int 0)
(define-fun x6790 ((x2309 Int)) Int 0)
(define-fun x2430 ((x2309 Int)) Int 0)
(define-fun x3256 ((x2309 Int)) Int 0)
(define-fun x6560 ((x2309 Int)) Int 0)
(define-fun x8245 ((x2309 Int)) Int 0)
(define-fun x1765 ((x2309 Int)) Int 0)
(define-fun x1238 ((x2309 Int)) Int (ite (< x2309 x8082) (x4055 x2309) 0))
(define-fun x5075 ((x2309 Int)) Int (ite (< x2309 x668) (x4682 x2309) 0))
(define-fun x7519 ((x2309 Int)) Int (ite (< x2309 x5738) (x6605 x2309) 0))
(define-fun x1369 ((x2309 Int)) Int (ite (< x2309 x1320) (x7775 x2309) 0))
(define-fun x2725 ((x2309 Int)) Int (ite (< x2309 x2732) (x3164 x2309) 0))
(define-fun x116 ((x2309 Int)) Int (ite (< x2309 x2270) (x5541 x2309) 0))
(define-fun x5361 ((x2309 Int)) Int (ite (< x2309 x1377) (x8074 x2309) 0))
(define-fun x2027 ((x2309 Int)) Int (ite (> x5215 x2309) (x5648 x2309) 0))
(define-fun x7489 ((x2309 Int)) Int (ite (< x2309 x2696) (x330 x2309) 0))
(define-fun x2349 ((x2309 Int)) Int (ite (> x6904 x2309) (x2187 x2309) 0))
(define-fun x480 ((x2309 Int)) Int (ite (> x2149 x2309) (x6567 x2309) 0))
(define-fun x3055 ((x2309 Int)) Int (ite (> x76 x2309) (x7099 x2309) 0))
(define-fun x5409 ((x2309 Int)) Int (ite (> x2476 x2309) (x1627 x2309) 0))
(define-fun x5615 ((x2309 Int)) Int (ite (< x2309 x6324) (x4634 x2309) 0))
(define-fun x6701 ((x2309 Int)) Int 0)
(define-fun x8517 ((x2309 Int)) Int 0)
(define-fun x3610 ((x2309 Int)) Int 0)
(define-fun x2378 ((x2309 Int)) Int 0)
(define-fun x921 ((x2309 Int)) Int 0)
(define-fun x1110 ((x2309 Int)) Int 0)
(define-fun x3942 ((x2309 Int)) Int 0)
(define-fun x6059 ((x2309 Int)) Int 0)
(define-fun x7966 ((x2309 Int)) Int 0)
(define-fun x1759 ((x2309 Int)) Int 0)
(define-fun x3263 ((x2309 Int)) Int 0)
(define-fun x1072 ((x2309 Int)) Int 0)
(define-fun x5901 ((x2309 Int)) Int 0)
(define-fun x7209 ((x2309 Int)) Int 0)
(define-fun x2043 ((x2309 Int)) Int 0)
(define-fun x1615 ((x2309 Int)) Int 0)
(define-fun x4079 ((x2309 Int)) Int 0)
(define-fun x781 ((x2309 Int)) Int 0)
(define-fun x8195 ((x2309 Int)) Int 0)
(define-fun x849 ((x2309 Int)) Int 0)
(define-fun x1379 ((x2309 Int)) Int 0)
(define-fun x3719 ((x2309 Int)) Int 0)
(define-fun x4455 ((x2309 Int)) Int 0)
(define-fun x4222 ((x2309 Int)) Int 0)
(define-fun x4692 ((x2309 Int)) Int 0)
(define-fun x6278 ((x2309 Int)) Int 0)
(define-fun x1979 ((x2309 Int)) Int 0)
(define-fun x587 ((x2309 Int)) Int 0)
(define-fun x935 ((x2309 Int)) Int 0)
(define-fun x4421 ((x2309 Int)) Int 0)
(define-fun x3301 ((x2309 Int)) Int 0)
(define-fun x7197 ((x2309 Int)) Int 0)
(define-fun x6083 ((x2309 Int)) Int 0)
(define-fun x4196 ((x2309 Int)) Int 0)
(define-fun x3271 ((x2309 Int)) Int 0)
(define-fun x8053 ((x2309 Int)) Int 0)
(define-fun x8232 ((x2309 Int)) Int 0)
(define-fun x4596 ((x2309 Int)) Int 0)
(define-fun x4990 ((x2309 Int)) Int 0)
(define-fun x5811 ((x2309 Int)) Int 0)
(define-fun x1195 ((x2309 Int)) Int 0)
(define-fun x118 ((x2309 Int)) Int 0)
(define-fun x5341 ((x2309 Int)) Int 0)
(define-fun x4861 ((x2309 Int)) Int 0)
(define-fun x8072 ((x2309 Int)) Int 0)
(define-fun x4262 ((x2309 Int)) Int 0)
(define-fun x5283 ((x2309 Int)) Int 0)
(define-fun x5673 ((x2309 Int)) Int 0)
(define-fun x495 ((x2309 Int)) Int 0)
(define-fun x6679 ((x2309 Int)) Int 0)
(define-fun x5416 ((x2309 Int)) Int 0)
(define-fun x8261 ((x2309 Int)) Int 0)
(define-fun x8112 ((x2309 Int)) Int 0)
(define-fun x5873 ((x2309 Int)) Int 0)
(define-fun x2937 ((x2309 Int)) Int 0)
(define-fun x7810 ((x2309 Int)) Int 0)
(define-fun x1390 ((x2309 Int)) Int 0)
(define-fun x2158 ((x2309 Int)) Int 0)
(define-fun x4985 ((x2309 Int)) Int 0)
(define-fun x2389 ((x2309 Int)) Int 0)
(define-fun x555 ((x2309 Int)) Int 0)
(define-fun x5572 ((x2309 Int)) Int 0)
(define-fun x4434 ((x2309 Int)) Int 0)
(define-fun x4141 ((x2309 Int)) Int 0)
(define-fun x5227 ((x2309 Int)) Int 0)
(define-fun x6256 ((x2309 Int)) Int 0)
(define-fun x2983 ((x2309 Int)) Int 0)
(define-fun x7237 ((x2309 Int)) Int 0)
(define-fun x6551 ((x2309 Int)) Int 0)
(define-fun x2075 ((x2309 Int)) Int 0)
(define-fun x7847 ((x2309 Int)) Int 0)
(define-fun x8131 ((x2309 Int)) Int 0)
(define-fun x7843 ((x2309 Int)) Int 0)
(define-fun x5061 ((x2309 Int)) Int 0)
(define-fun x1971 ((x2309 Int)) Int 0)
(define-fun x1157 ((x2309 Int)) Int 0)
(define-fun x3014 ((x2309 Int)) Int 0)
(define-fun x4931 ((x2309 Int)) Int 0)
(define-fun x3937 ((x2309 Int)) Int 0)
(define-fun x6750 ((x2309 Int)) Int 0)
(define-fun x5396 ((x2309 Int)) Int 0)
(define-fun x1976 ((x2309 Int)) Int 0)
(define-fun x6274 ((x2309 Int)) Int 0)
(define-fun x5313 ((x2309 Int)) Int 0)
(define-fun x4116 ((x2309 Int)) Int 0)
(define-fun x5338 ((x2309 Int)) Int 0)
(define-fun x3449 ((x2309 Int)) Int 0)
(define-fun x4081 ((x2309 Int)) Int 0)
(define-fun x7851 ((x2309 Int)) Int 0)
(define-fun x3901 ((x2309 Int)) Int 0)
(define-fun x4521 ((x2309 Int)) Int 0)
(define-fun x3134 ((x2309 Int)) Int 0)
(define-fun x3422 ((x2309 Int)) Int 0)
(define-fun x5777 ((x2309 Int)) Int 0)
(define-fun x1763 ((x2309 Int)) Int 0)
(define-fun x6629 ((x2309 Int)) Int 0)
(define-fun x5761 ((x2309 Int)) Int 0)
(define-fun x6393 ((x2309 Int)) Int 0)
(define-fun x2649 ((x2309 Int)) Int 0)
(define-fun x5009 ((x2309 Int)) Int 0)
(define-fun x7507 ((x2309 Int)) Int 0)
(define-fun x7132 ((x2309 Int)) Int 0)
(define-fun x6296 ((x2309 Int)) Int 0)
(define-fun x3757 ((x2309 Int)) Int (ite (= x2309 x6702) x1213 (x7953 x2309)))
(define-fun x6740 ((x2309 Int)) Int (ite (= x3611 x2309) x7630 (x3757 x2309)))
(define-fun x1140 ((x2309 Int)) Int 0)
(define-fun x6907 ((x2309 Int)) Int (ite (= 128 x2309) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x8195 x2309)))
(define-fun x1059 ((x2309 Int)) Int (ite (= x2309 132) x6687 (x6907 x2309)))
(define-fun x1007 ((x2309 Int)) Int (ite (= x2309 0) x1779 (x575 x2309)))
(define-fun x4343 ((x2309 Int)) Int (ite (= 0 x2309) x8369 (x575 x2309)))
(define-fun x7696 ((x2309 Int)) Int (ite (= 128 x2309) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x1195 x2309)))
(define-fun x7191 ((x2309 Int)) Int (ite (= 132 x2309) x618 (x7696 x2309)))
(define-fun x1934 ((x2309 Int)) Int (ite (= x2309 0) x2491 (x7558 x2309)))
(define-fun x5990 ((x2309 Int)) Int (ite (= 128 x2309) x2491 (x7191 x2309)))
(define-fun x295 ((x2309 Int)) Int (ite (= x2309 4) 17 (x7851 x2309)))
(define-fun x1106 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 36)) (x295 x2309) (x7558 x2309)))
(define-fun x6875 ((x2309 Int)) Int (ite (= x2309 0) x3076 (x7558 x2309)))
(define-fun x2637 ((x2309 Int)) Int (ite (= 128 x2309) x3076 (x7191 x2309)))
(define-fun x8262 ((x2309 Int)) Int (ite x7588 (ite x1679 (x7194 x2309) (x6376 x2309)) (ite x5494 (ite x1679 (x7194 x2309) (x6376 x2309)) (x6376 x2309))))
(define-fun x2641 ((x2309 Int)) Int (ite x978 (x6376 x2309) (ite x814 (x6376 x2309) (x8262 x2309))))
(define-fun x2617 ((x2309 Int)) Int (ite x6190 (ite x2088 (x6376 x2309) (x2641 x2309)) (x6376 x2309)))
(define-fun x1215 ((x2309 Int)) Int (ite x1397 (x6143 x2309) (x6376 x2309)))
(define-fun x6646 ((x2309 Int)) Int (ite x4522 (ite x8259 (x2617 x2309) (x6376 x2309)) (ite x4440 (x6376 x2309) (x1215 x2309))))
(define-fun x4865 ((x2309 Int)) Int (ite x2822 (x6376 x2309) (ite x1972 (x6376 x2309) (ite x7537 (x6376 x2309) (ite x6368 (x6376 x2309) (ite x5544 (x6376 x2309) (ite x3913 (x6376 x2309) (ite x6097 (x6376 x2309) (ite x8545 (x6376 x2309) (ite x7961 (x6376 x2309) (ite x6275 (x6376 x2309) (ite x4351 (x6376 x2309) (ite x4677 (x6376 x2309) (ite x6418 (x6376 x2309) (ite x4561 (x6376 x2309) (ite x4818 (x6376 x2309) (ite x2678 (x6376 x2309) (ite x8115 (x6376 x2309) (ite x5309 (x6376 x2309) (ite x3990 (x6376 x2309) (ite x2297 (x6376 x2309) (ite x6371 (x6376 x2309) (ite x5810 (ite x1564 (x6646 x2309) (x6376 x2309)) (x6376 x2309))))))))))))))))))))))))
(define-fun x253 ((x2309 Int)) Int (ite x7947 (ite x6453 (x6376 x2309) (x4865 x2309)) (ite x385 (x6376 x2309) (ite x6453 (x6376 x2309) (x4865 x2309)))))
(define-fun x880 ((x2309 Int)) Int (ite (= x2309 x3611) x8242 (x6740 x2309)))
(define-fun x7782 ((x2309 Int)) Int (ite (= x2309 x7627) x5250 (x880 x2309)))
(define-fun x2852 ((x2309 Int)) Int (ite (= x3611 x2309) x7871 (x7782 x2309)))
(define-fun x7008 ((x2309 Int)) Int (ite (= x8305 x2309) x5090 (x2852 x2309)))
(define-fun x542 ((x2309 Int)) Int (ite x1679 (x2811 x2309) (x7008 x2309)))
(define-fun x254 ((x2309 Int)) Int (ite (= x2309 x8305) x823 (x542 x2309)))
(define-fun x8030 ((x2309 Int)) Int (ite (= x3611 x2309) x5768 (x254 x2309)))
(define-fun x5779 ((x2309 Int)) Int (ite (= x8301 x2309) x8090 (x7782 x2309)))
(define-fun x792 ((x2309 Int)) Int (ite (= x2309 x4737) x6069 (x5779 x2309)))
(define-fun x2030 ((x2309 Int)) Int (ite (= x3611 x2309) x3131 (x792 x2309)))
(define-fun x6532 ((x2309 Int)) Int (ite (= x2309 x690) x5742 (x2030 x2309)))
(define-fun x6119 ((x2309 Int)) Int (ite (= x690 x2309) x1857 (x6532 x2309)))
(define-fun x995 ((x2309 Int)) Int (ite (= x3611 x2309) x6094 (x6119 x2309)))
(define-fun x4115 ((x2309 Int)) Int (ite x5819 (x792 x2309) (ite x6124 (x6532 x2309) (ite x8352 (x995 x2309) (x792 x2309)))))
(define-fun x747 ((x2309 Int)) Int (ite (= x2309 x4737) x172 (x4115 x2309)))
(define-fun x4333 ((x2309 Int)) Int (ite (= x2309 x8301) x3454 (x747 x2309)))
(define-fun x7065 ((x2309 Int)) Int (ite (= x3611 x2309) x2547 (x7782 x2309)))
(define-fun x8027 ((x2309 Int)) Int (ite (= x3351 x2309) x5364 (x7065 x2309)))
(define-fun x1456 ((x2309 Int)) Int (ite (= x2309 x3351) x8576 (x8027 x2309)))
(define-fun x3748 ((x2309 Int)) Int (ite (= x3611 x2309) x5385 (x1456 x2309)))
(define-fun x3868 ((x2309 Int)) Int (ite x6453 (x7782 x2309) (ite x2822 (x7782 x2309) (ite x1972 (x7782 x2309) (ite x7537 (x7782 x2309) (ite x6368 (x7782 x2309) (ite x5544 (x7782 x2309) (ite x3913 (x7782 x2309) (ite x6097 (x7782 x2309) (ite x8545 (x7782 x2309) (ite x7961 (x7782 x2309) (ite x6275 (x7782 x2309) (ite x4351 (x7782 x2309) (ite x4677 (x7782 x2309) (ite x6418 (x7782 x2309) (ite x4561 (x7782 x2309) (ite x4818 (x7782 x2309) (ite x2678 (x7782 x2309) (ite x8115 (x7782 x2309) (ite x5309 (x7782 x2309) (ite x3990 (x7782 x2309) (ite x2297 (x7782 x2309) (ite x6371 (x7782 x2309) (ite x5810 (ite x1564 (ite x4522 (ite x8259 (ite x6190 (ite x2088 (x7782 x2309) (ite x978 (x7782 x2309) (ite x814 (x7782 x2309) (ite x7588 (x542 x2309) (ite x5494 (x8030 x2309) (x7782 x2309)))))) (ite x808 (x4115 x2309) (ite x2112 (x4333 x2309) (x7782 x2309)))) (ite x7723 (x7782 x2309) (ite x5497 (x7782 x2309) (ite x5180 (x8027 x2309) (ite x952 (x3748 x2309) (x7782 x2309)))))) (ite x4440 (x7782 x2309) (ite x1397 (x4664 x2309) (x7782 x2309)))) (x7782 x2309)) (x7782 x2309)))))))))))))))))))))))))
(define-fun x1746 ((x2309 Int)) Int (ite (= x7627 x2309) x1197 (x3868 x2309)))
(define-fun x5189 ((x2309 Int)) Int (ite (= x2309 x3611) x3615 (x1746 x2309)))
(define-fun x8302 ((x2309 Int)) Int (ite x7947 (x3868 x2309) (ite x385 (x6740 x2309) (x5189 x2309))))
(define-fun x7891 ((x2309 Int)) Int (ite x7588 (ite x1679 (x1610 x2309) (x3683 x2309)) (ite x5494 (ite x1679 (x1610 x2309) (x3683 x2309)) (x3683 x2309))))
(define-fun x3207 ((x2309 Int)) Int (ite x978 (x3683 x2309) (ite x814 (x3683 x2309) (x7891 x2309))))
(define-fun x6757 ((x2309 Int)) Int (ite x6190 (ite x2088 (x3683 x2309) (x3207 x2309)) (x3683 x2309)))
(define-fun x8534 ((x2309 Int)) Int (ite x1397 (x6373 x2309) (x3683 x2309)))
(define-fun x7608 ((x2309 Int)) Int (ite x4522 (ite x8259 (x6757 x2309) (x3683 x2309)) (ite x4440 (x3683 x2309) (x8534 x2309))))
(define-fun x4345 ((x2309 Int)) Int (ite x2822 (x3683 x2309) (ite x1972 (x3683 x2309) (ite x7537 (x3683 x2309) (ite x6368 (x3683 x2309) (ite x5544 (x3683 x2309) (ite x3913 (x3683 x2309) (ite x6097 (x3683 x2309) (ite x8545 (x3683 x2309) (ite x7961 (x3683 x2309) (ite x6275 (x3683 x2309) (ite x4351 (x3683 x2309) (ite x4677 (x3683 x2309) (ite x6418 (x3683 x2309) (ite x4561 (x3683 x2309) (ite x4818 (x3683 x2309) (ite x2678 (x3683 x2309) (ite x8115 (x3683 x2309) (ite x5309 (x3683 x2309) (ite x3990 (x3683 x2309) (ite x2297 (x3683 x2309) (ite x6371 (x3683 x2309) (ite x5810 (ite x1564 (x7608 x2309) (x3683 x2309)) (x3683 x2309))))))))))))))))))))))))
(define-fun x5687 ((x2309 Int)) Int (ite x7947 (ite x6453 (x3683 x2309) (x4345 x2309)) (ite x385 (x3683 x2309) (ite x6453 (x3683 x2309) (x4345 x2309)))))
(define-fun x2888 ((x2309 Int)) Int (x8234 x2309))
(define-fun x6306 ((x2309 Int)) Int (ite (= x2309 x6492) x5656 (x4770 x2309)))
(define-fun x2086 ((x2309 Int)) Int (ite x3037 (x4770 x2309) (x6306 x2309)))
(define-fun x7591 ((x2309 Int)) Int (ite x7588 (ite x1679 (x5760 x2309) (x4770 x2309)) (ite x5494 (ite x1679 (x5760 x2309) (x4770 x2309)) (x4770 x2309))))
(define-fun x5584 ((x2309 Int)) Int (ite x978 (x4770 x2309) (ite x814 (x4770 x2309) (x7591 x2309))))
(define-fun x257 ((x2309 Int)) Int (ite x6190 (ite x2088 (x4770 x2309) (x5584 x2309)) (x4770 x2309)))
(define-fun x5863 ((x2309 Int)) Int (ite x1397 (x958 x2309) (x4770 x2309)))
(define-fun x5963 ((x2309 Int)) Int (ite x4522 (ite x8259 (x257 x2309) (x4770 x2309)) (ite x4440 (x4770 x2309) (x5863 x2309))))
(define-fun x6240 ((x2309 Int)) Int (ite x2822 (x4770 x2309) (ite x1972 (x4770 x2309) (ite x7537 (x4770 x2309) (ite x6368 (x4770 x2309) (ite x5544 (x4770 x2309) (ite x3913 (x4770 x2309) (ite x6097 (x4770 x2309) (ite x8545 (x4770 x2309) (ite x7961 (x4770 x2309) (ite x6275 (x4770 x2309) (ite x4351 (x4770 x2309) (ite x4677 (x4770 x2309) (ite x6418 (x4770 x2309) (ite x4561 (x4770 x2309) (ite x4818 (x4770 x2309) (ite x2678 (x4770 x2309) (ite x8115 (x4770 x2309) (ite x5309 (x4770 x2309) (ite x3990 (x4770 x2309) (ite x2297 (x4770 x2309) (ite x6371 (x4770 x2309) (ite x5810 (ite x1564 (x5963 x2309) (x4770 x2309)) (x4770 x2309))))))))))))))))))))))))
(define-fun x5025 ((x2309 Int)) Int (ite x7947 (ite x6453 (x2086 x2309) (x6240 x2309)) (ite x385 (x4770 x2309) (ite x6453 (x2086 x2309) (x6240 x2309)))))
(define-fun x906 ((x2309 Int)) Int (ite x7588 (ite x1679 (x2160 x2309) (x120 x2309)) (ite x5494 (ite x1679 (x2160 x2309) (x120 x2309)) (x120 x2309))))
(define-fun x1333 ((x2309 Int)) Int (ite x978 (x120 x2309) (ite x814 (x120 x2309) (x906 x2309))))
(define-fun x1201 ((x2309 Int)) Int (ite x6190 (ite x2088 (x120 x2309) (x1333 x2309)) (x120 x2309)))
(define-fun x7088 ((x2309 Int)) Int (ite x1397 (x506 x2309) (x120 x2309)))
(define-fun x6742 ((x2309 Int)) Int (ite x4522 (ite x8259 (x1201 x2309) (x120 x2309)) (ite x4440 (x120 x2309) (x7088 x2309))))
(define-fun x5987 ((x2309 Int)) Int (ite x2822 (x120 x2309) (ite x1972 (x120 x2309) (ite x7537 (x120 x2309) (ite x6368 (x120 x2309) (ite x5544 (x120 x2309) (ite x3913 (x120 x2309) (ite x6097 (x120 x2309) (ite x8545 (x120 x2309) (ite x7961 (x120 x2309) (ite x6275 (x120 x2309) (ite x4351 (x120 x2309) (ite x4677 (x120 x2309) (ite x6418 (x120 x2309) (ite x4561 (x120 x2309) (ite x4818 (x120 x2309) (ite x2678 (x120 x2309) (ite x8115 (x120 x2309) (ite x5309 (x120 x2309) (ite x3990 (x120 x2309) (ite x2297 (x120 x2309) (ite x6371 (x120 x2309) (ite x5810 (ite x1564 (x6742 x2309) (x120 x2309)) (x120 x2309))))))))))))))))))))))))
(define-fun x2763 ((x2309 Int)) Int (ite x7947 (ite x6453 (x120 x2309) (x5987 x2309)) (ite x385 (x120 x2309) (ite x6453 (x120 x2309) (x5987 x2309)))))
(define-fun x6086 ((x2309 Int)) Int (ite x7588 (ite x1679 (x4362 x2309) (x4198 x2309)) (ite x5494 (ite x1679 (x4362 x2309) (x4198 x2309)) (x4198 x2309))))
(define-fun x4660 ((x2309 Int)) Int (ite x978 (x4198 x2309) (ite x814 (x4198 x2309) (x6086 x2309))))
(define-fun x6377 ((x2309 Int)) Int (ite x6190 (ite x2088 (x4198 x2309) (x4660 x2309)) (x4198 x2309)))
(define-fun x6866 ((x2309 Int)) Int (ite x1397 (x4439 x2309) (x4198 x2309)))
(define-fun x5397 ((x2309 Int)) Int (ite x4522 (ite x8259 (x6377 x2309) (x4198 x2309)) (ite x4440 (x4198 x2309) (x6866 x2309))))
(define-fun x5513 ((x2309 Int)) Int (ite x2822 (x4198 x2309) (ite x1972 (x4198 x2309) (ite x7537 (x4198 x2309) (ite x6368 (x4198 x2309) (ite x5544 (x4198 x2309) (ite x3913 (x4198 x2309) (ite x6097 (x4198 x2309) (ite x8545 (x4198 x2309) (ite x7961 (x4198 x2309) (ite x6275 (x4198 x2309) (ite x4351 (x4198 x2309) (ite x4677 (x4198 x2309) (ite x6418 (x4198 x2309) (ite x4561 (x4198 x2309) (ite x4818 (x4198 x2309) (ite x2678 (x4198 x2309) (ite x8115 (x4198 x2309) (ite x5309 (x4198 x2309) (ite x3990 (x4198 x2309) (ite x2297 (x4198 x2309) (ite x6371 (x4198 x2309) (ite x5810 (ite x1564 (x5397 x2309) (x4198 x2309)) (x4198 x2309))))))))))))))))))))))))
(define-fun x2857 ((x2309 Int)) Int (ite x7947 (ite x6453 (x4198 x2309) (x5513 x2309)) (ite x385 (x4198 x2309) (ite x6453 (x4198 x2309) (x5513 x2309)))))
(define-fun x4466 ((x2309 Int)) Int (x840 x2309))
(define-fun x4873 ((x2309 Int)) Int (x237 x2309))
(define-fun x1302 ((x2309 Int)) Int (x5308 x2309))
(define-fun x5457 ((x2309 Int)) Int (ite x7588 (ite x1679 (x6459 x2309) (x8344 x2309)) (ite x5494 (ite x1679 (x6459 x2309) (x8344 x2309)) (x8344 x2309))))
(define-fun x8556 ((x2309 Int)) Int (ite x978 (x8344 x2309) (ite x814 (x8344 x2309) (x5457 x2309))))
(define-fun x7733 ((x2309 Int)) Int (ite x6190 (ite x2088 (x8344 x2309) (x8556 x2309)) (x8344 x2309)))
(define-fun x7743 ((x2309 Int)) Int (ite x1397 (x8264 x2309) (x8344 x2309)))
(define-fun x3786 ((x2309 Int)) Int (ite x4522 (ite x8259 (x7733 x2309) (x8344 x2309)) (ite x4440 (x8344 x2309) (x7743 x2309))))
(define-fun x1895 ((x2309 Int)) Int (ite x2822 (x8344 x2309) (ite x1972 (x8344 x2309) (ite x7537 (x8344 x2309) (ite x6368 (x8344 x2309) (ite x5544 (x8344 x2309) (ite x3913 (x8344 x2309) (ite x6097 (x8344 x2309) (ite x8545 (x8344 x2309) (ite x7961 (x8344 x2309) (ite x6275 (x8344 x2309) (ite x4351 (x8344 x2309) (ite x4677 (x8344 x2309) (ite x6418 (x8344 x2309) (ite x4561 (x8344 x2309) (ite x4818 (x8344 x2309) (ite x2678 (x8344 x2309) (ite x8115 (x8344 x2309) (ite x5309 (x8344 x2309) (ite x3990 (x8344 x2309) (ite x2297 (x8344 x2309) (ite x6371 (x8344 x2309) (ite x5810 (ite x1564 (x3786 x2309) (x8344 x2309)) (x8344 x2309))))))))))))))))))))))))
(define-fun x2258 ((x2309 Int)) Int (ite x7947 (ite x6453 (x8344 x2309) (x1895 x2309)) (ite x385 (x8344 x2309) (ite x6453 (x8344 x2309) (x1895 x2309)))))
(define-fun x7276 ((x2309 Int)) Int (ite (= x2309 x8553) 3 (x2968 x2309)))
(define-fun x7649 ((x2309 Int)) Int (ite x5819 (x2968 x2309) (x7276 x2309)))
(define-fun x5658 ((x2309 Int)) Int (ite x6190 (x2968 x2309) (ite x808 (x7649 x2309) (ite x2112 (x7649 x2309) (x2968 x2309)))))
(define-fun x2474 ((x2309 Int)) Int (ite (= x2309 x833) 2 (x2968 x2309)))
(define-fun x4086 ((x2309 Int)) Int (ite (= x2309 x8417) 3 (x2474 x2309)))
(define-fun x4612 ((x2309 Int)) Int (ite x7723 (x2968 x2309) (ite x5497 (x2474 x2309) (x4086 x2309))))
(define-fun x122 ((x2309 Int)) Int (ite x4522 (ite x8259 (x5658 x2309) (x4612 x2309)) (x2968 x2309)))
(define-fun x2734 ((x2309 Int)) Int (ite x2822 (x2968 x2309) (ite x1972 (x2968 x2309) (ite x7537 (x2968 x2309) (ite x6368 (x2968 x2309) (ite x5544 (x2968 x2309) (ite x3913 (x2968 x2309) (ite x6097 (x2968 x2309) (ite x8545 (x2968 x2309) (ite x7961 (x2968 x2309) (ite x6275 (x2968 x2309) (ite x4351 (x2968 x2309) (ite x4677 (x2968 x2309) (ite x6418 (x2968 x2309) (ite x4561 (x2968 x2309) (ite x4818 (x2968 x2309) (ite x2678 (x2968 x2309) (ite x8115 (x2968 x2309) (ite x5309 (x2968 x2309) (ite x3990 (x2968 x2309) (ite x2297 (x2968 x2309) (ite x6371 (x2968 x2309) (ite x5810 (ite x1564 (x122 x2309) (x2968 x2309)) (x2968 x2309))))))))))))))))))))))))
(define-fun x1977 ((x2309 Int)) Int (ite x7947 (ite x6453 (x2968 x2309) (x2734 x2309)) (ite x385 (x2968 x2309) (ite x6453 (x2968 x2309) (x2734 x2309)))))
(define-fun x4988 ((x2309 Int)) Int (ite x7588 (ite x1679 (x5920 x2309) (x8495 x2309)) (ite x5494 (ite x1679 (x5920 x2309) (x8495 x2309)) (x8495 x2309))))
(define-fun x8450 ((x2309 Int)) Int (ite x978 (x8495 x2309) (ite x814 (x8495 x2309) (x4988 x2309))))
(define-fun x5688 ((x2309 Int)) Int (ite x6190 (ite x2088 (x8495 x2309) (x8450 x2309)) (x8495 x2309)))
(define-fun x5988 ((x2309 Int)) Int (ite x1397 (x4947 x2309) (x8495 x2309)))
(define-fun x5757 ((x2309 Int)) Int (ite x4522 (ite x8259 (x5688 x2309) (x8495 x2309)) (ite x4440 (x8495 x2309) (x5988 x2309))))
(define-fun x3453 ((x2309 Int)) Int (ite x2822 (x8495 x2309) (ite x1972 (x8495 x2309) (ite x7537 (x8495 x2309) (ite x6368 (x8495 x2309) (ite x5544 (x8495 x2309) (ite x3913 (x8495 x2309) (ite x6097 (x8495 x2309) (ite x8545 (x8495 x2309) (ite x7961 (x8495 x2309) (ite x6275 (x8495 x2309) (ite x4351 (x8495 x2309) (ite x4677 (x8495 x2309) (ite x6418 (x8495 x2309) (ite x4561 (x8495 x2309) (ite x4818 (x8495 x2309) (ite x2678 (x8495 x2309) (ite x8115 (x8495 x2309) (ite x5309 (x8495 x2309) (ite x3990 (x8495 x2309) (ite x2297 (x8495 x2309) (ite x6371 (x8495 x2309) (ite x5810 (ite x1564 (x5757 x2309) (x8495 x2309)) (x8495 x2309))))))))))))))))))))))))
(define-fun x8075 ((x2309 Int)) Int (ite x7947 (ite x6453 (x8495 x2309) (x3453 x2309)) (ite x385 (x8495 x2309) (ite x6453 (x8495 x2309) (x3453 x2309)))))
(define-fun x2007 ((x2309 Int)) Int (ite (= x2184 x2309) x5201 (x1469 x2309)))
(define-fun x6520 ((x2309 Int)) Int (ite x7723 (x1469 x2309) (x2007 x2309)))
(define-fun x307 ((x2309 Int)) Int (ite x4522 (ite x8259 (x1469 x2309) (x6520 x2309)) (x1469 x2309)))
(define-fun x7579 ((x2309 Int)) Int (ite x2822 (x1469 x2309) (ite x1972 (x1469 x2309) (ite x7537 (x1469 x2309) (ite x6368 (x1469 x2309) (ite x5544 (x1469 x2309) (ite x3913 (x1469 x2309) (ite x6097 (x1469 x2309) (ite x8545 (x1469 x2309) (ite x7961 (x1469 x2309) (ite x6275 (x1469 x2309) (ite x4351 (x1469 x2309) (ite x4677 (x1469 x2309) (ite x6418 (x1469 x2309) (ite x4561 (x1469 x2309) (ite x4818 (x1469 x2309) (ite x2678 (x1469 x2309) (ite x8115 (x1469 x2309) (ite x5309 (x1469 x2309) (ite x3990 (x1469 x2309) (ite x2297 (x1469 x2309) (ite x6371 (x1469 x2309) (ite x5810 (ite x1564 (x307 x2309) (x1469 x2309)) (x1469 x2309))))))))))))))))))))))))
(define-fun x6461 ((x2309 Int)) Int (ite x7947 (ite x6453 (x1469 x2309) (x7579 x2309)) (ite x385 (x1469 x2309) (ite x6453 (x1469 x2309) (x7579 x2309)))))
(define-fun x1668 ((x2309 Int)) Int (ite x7588 (ite x1679 (x361 x2309) (x175 x2309)) (ite x5494 (ite x1679 (x361 x2309) (x175 x2309)) (x175 x2309))))
(define-fun x2546 ((x2309 Int)) Int (ite x978 (x175 x2309) (ite x814 (x175 x2309) (x1668 x2309))))
(define-fun x787 ((x2309 Int)) Int (ite x6190 (ite x2088 (x175 x2309) (x2546 x2309)) (x175 x2309)))
(define-fun x5243 ((x2309 Int)) Int (ite x1397 (x7106 x2309) (x175 x2309)))
(define-fun x7089 ((x2309 Int)) Int (ite x4522 (ite x8259 (x787 x2309) (x175 x2309)) (ite x4440 (x175 x2309) (x5243 x2309))))
(define-fun x4292 ((x2309 Int)) Int (ite x2822 (x175 x2309) (ite x1972 (x175 x2309) (ite x7537 (x175 x2309) (ite x6368 (x175 x2309) (ite x5544 (x175 x2309) (ite x3913 (x175 x2309) (ite x6097 (x175 x2309) (ite x8545 (x175 x2309) (ite x7961 (x175 x2309) (ite x6275 (x175 x2309) (ite x4351 (x175 x2309) (ite x4677 (x175 x2309) (ite x6418 (x175 x2309) (ite x4561 (x175 x2309) (ite x4818 (x175 x2309) (ite x2678 (x175 x2309) (ite x8115 (x175 x2309) (ite x5309 (x175 x2309) (ite x3990 (x175 x2309) (ite x2297 (x175 x2309) (ite x6371 (x175 x2309) (ite x5810 (ite x1564 (x7089 x2309) (x175 x2309)) (x175 x2309))))))))))))))))))))))))
(define-fun x7623 ((x2309 Int)) Int (ite x7947 (ite x6453 (x175 x2309) (x4292 x2309)) (ite x385 (x175 x2309) (ite x6453 (x175 x2309) (x4292 x2309)))))
(define-fun x5040 ((x2309 Int)) Int (ite x7588 (ite x1679 (x293 x2309) (x8560 x2309)) (ite x5494 (ite x1679 (x293 x2309) (x8560 x2309)) (x8560 x2309))))
(define-fun x2263 ((x2309 Int)) Int (ite x978 (x8560 x2309) (ite x814 (x8560 x2309) (x5040 x2309))))
(define-fun x4458 ((x2309 Int)) Int (ite x6190 (ite x2088 (x8560 x2309) (x2263 x2309)) (x8560 x2309)))
(define-fun x6055 ((x2309 Int)) Int (ite x1397 (x2944 x2309) (x8560 x2309)))
(define-fun x3431 ((x2309 Int)) Int (ite x4522 (ite x8259 (x4458 x2309) (x8560 x2309)) (ite x4440 (x8560 x2309) (x6055 x2309))))
(define-fun x7626 ((x2309 Int)) Int (ite x2822 (x8560 x2309) (ite x1972 (x8560 x2309) (ite x7537 (x8560 x2309) (ite x6368 (x8560 x2309) (ite x5544 (x8560 x2309) (ite x3913 (x8560 x2309) (ite x6097 (x8560 x2309) (ite x8545 (x8560 x2309) (ite x7961 (x8560 x2309) (ite x6275 (x8560 x2309) (ite x4351 (x8560 x2309) (ite x4677 (x8560 x2309) (ite x6418 (x8560 x2309) (ite x4561 (x8560 x2309) (ite x4818 (x8560 x2309) (ite x2678 (x8560 x2309) (ite x8115 (x8560 x2309) (ite x5309 (x8560 x2309) (ite x3990 (x8560 x2309) (ite x2297 (x8560 x2309) (ite x6371 (x8560 x2309) (ite x5810 (ite x1564 (x3431 x2309) (x8560 x2309)) (x8560 x2309))))))))))))))))))))))))
(define-fun x7874 ((x2309 Int)) Int (ite x7947 (ite x6453 (x8560 x2309) (x7626 x2309)) (ite x385 (x8560 x2309) (ite x6453 (x8560 x2309) (x7626 x2309)))))
(define-fun x8050 ((x2309 Int)) Int (ite x7588 (ite x1679 (x3126 x2309) (x3540 x2309)) (ite x5494 (ite x1679 (x3126 x2309) (x3540 x2309)) (x3540 x2309))))
(define-fun x7435 ((x2309 Int)) Int (ite x978 (x3540 x2309) (ite x814 (x3540 x2309) (x8050 x2309))))
(define-fun x8260 ((x2309 Int)) Int (ite x6190 (ite x2088 (x3540 x2309) (x7435 x2309)) (x3540 x2309)))
(define-fun x4887 ((x2309 Int)) Int (ite x1397 (x1169 x2309) (x3540 x2309)))
(define-fun x3740 ((x2309 Int)) Int (ite x4522 (ite x8259 (x8260 x2309) (x3540 x2309)) (ite x4440 (x3540 x2309) (x4887 x2309))))
(define-fun x7212 ((x2309 Int)) Int (ite x2822 (x3540 x2309) (ite x1972 (x3540 x2309) (ite x7537 (x3540 x2309) (ite x6368 (x3540 x2309) (ite x5544 (x3540 x2309) (ite x3913 (x3540 x2309) (ite x6097 (x3540 x2309) (ite x8545 (x3540 x2309) (ite x7961 (x3540 x2309) (ite x6275 (x3540 x2309) (ite x4351 (x3540 x2309) (ite x4677 (x3540 x2309) (ite x6418 (x3540 x2309) (ite x4561 (x3540 x2309) (ite x4818 (x3540 x2309) (ite x2678 (x3540 x2309) (ite x8115 (x3540 x2309) (ite x5309 (x3540 x2309) (ite x3990 (x3540 x2309) (ite x2297 (x3540 x2309) (ite x6371 (x3540 x2309) (ite x5810 (ite x1564 (x3740 x2309) (x3540 x2309)) (x3540 x2309))))))))))))))))))))))))
(define-fun x8580 ((x2309 Int)) Int (ite x7947 (ite x6453 (x3540 x2309) (x7212 x2309)) (ite x385 (x3540 x2309) (ite x6453 (x3540 x2309) (x7212 x2309)))))
(define-fun x5244 ((x2309 Int)) Int (ite (= x7942 x2309) x3355 (x2809 x2309)))
(define-fun x1909 ((x2309 Int)) Int (ite x2296 (x2809 x2309) (x5244 x2309)))
(define-fun x4700 ((x2309 Int)) Int (ite x4522 (x2809 x2309) (ite x4440 (x2809 x2309) (x1909 x2309))))
(define-fun x4047 ((x2309 Int)) Int (ite x2822 (x2809 x2309) (ite x1972 (x2809 x2309) (ite x7537 (x2809 x2309) (ite x6368 (x2809 x2309) (ite x5544 (x2809 x2309) (ite x3913 (x2809 x2309) (ite x6097 (x2809 x2309) (ite x8545 (x2809 x2309) (ite x7961 (x2809 x2309) (ite x6275 (x2809 x2309) (ite x4351 (x2809 x2309) (ite x4677 (x2809 x2309) (ite x6418 (x2809 x2309) (ite x4561 (x2809 x2309) (ite x4818 (x2809 x2309) (ite x2678 (x2809 x2309) (ite x8115 (x2809 x2309) (ite x5309 (x2809 x2309) (ite x3990 (x2809 x2309) (ite x2297 (x2809 x2309) (ite x6371 (x2809 x2309) (ite x5810 (ite x1564 (x4700 x2309) (x2809 x2309)) (x2809 x2309))))))))))))))))))))))))
(define-fun x48 ((x2309 Int)) Int (ite x7947 (ite x6453 (x2809 x2309) (x4047 x2309)) (ite x385 (x2809 x2309) (ite x6453 (x2809 x2309) (x4047 x2309)))))
(define-fun x4733 ((x2309 Int)) Int (x4380 x2309))
(define-fun x3371 ((x2309 Int)) Int (ite x7588 (ite x1679 (x2063 x2309) (x4704 x2309)) (ite x5494 (ite x1679 (x2063 x2309) (x4704 x2309)) (x4704 x2309))))
(define-fun x6831 ((x2309 Int)) Int (ite x978 (x4704 x2309) (ite x814 (x4704 x2309) (x3371 x2309))))
(define-fun x1270 ((x2309 Int)) Int (ite x6190 (ite x2088 (x4704 x2309) (x6831 x2309)) (x4704 x2309)))
(define-fun x1005 ((x2309 Int)) Int (ite x1397 (x7755 x2309) (x4704 x2309)))
(define-fun x1026 ((x2309 Int)) Int (ite x4522 (ite x8259 (x1270 x2309) (x4704 x2309)) (ite x4440 (x4704 x2309) (x1005 x2309))))
(define-fun x3249 ((x2309 Int)) Int (ite x2822 (x4704 x2309) (ite x1972 (x4704 x2309) (ite x7537 (x4704 x2309) (ite x6368 (x4704 x2309) (ite x5544 (x4704 x2309) (ite x3913 (x4704 x2309) (ite x6097 (x4704 x2309) (ite x8545 (x4704 x2309) (ite x7961 (x4704 x2309) (ite x6275 (x4704 x2309) (ite x4351 (x4704 x2309) (ite x4677 (x4704 x2309) (ite x6418 (x4704 x2309) (ite x4561 (x4704 x2309) (ite x4818 (x4704 x2309) (ite x2678 (x4704 x2309) (ite x8115 (x4704 x2309) (ite x5309 (x4704 x2309) (ite x3990 (x4704 x2309) (ite x2297 (x4704 x2309) (ite x6371 (x4704 x2309) (ite x5810 (ite x1564 (x1026 x2309) (x4704 x2309)) (x4704 x2309))))))))))))))))))))))))
(define-fun x7520 ((x2309 Int)) Int (ite x7947 (ite x6453 (x4704 x2309) (x3249 x2309)) (ite x385 (x4704 x2309) (ite x6453 (x4704 x2309) (x3249 x2309)))))
(define-fun x8201 ((x2309 Int)) Int (ite x7588 (ite x1679 (x5893 x2309) (x1923 x2309)) (ite x5494 (ite x1679 (x5893 x2309) (x1923 x2309)) (x1923 x2309))))
(define-fun x7081 ((x2309 Int)) Int (ite x978 (x1923 x2309) (ite x814 (x1923 x2309) (x8201 x2309))))
(define-fun x524 ((x2309 Int)) Int (ite x6190 (ite x2088 (x1923 x2309) (x7081 x2309)) (x1923 x2309)))
(define-fun x2504 ((x2309 Int)) Int (ite x1397 (x4235 x2309) (x1923 x2309)))
(define-fun x2810 ((x2309 Int)) Int (ite x4522 (ite x8259 (x524 x2309) (x1923 x2309)) (ite x4440 (x1923 x2309) (x2504 x2309))))
(define-fun x4850 ((x2309 Int)) Int (ite x2822 (x1923 x2309) (ite x1972 (x1923 x2309) (ite x7537 (x1923 x2309) (ite x6368 (x1923 x2309) (ite x5544 (x1923 x2309) (ite x3913 (x1923 x2309) (ite x6097 (x1923 x2309) (ite x8545 (x1923 x2309) (ite x7961 (x1923 x2309) (ite x6275 (x1923 x2309) (ite x4351 (x1923 x2309) (ite x4677 (x1923 x2309) (ite x6418 (x1923 x2309) (ite x4561 (x1923 x2309) (ite x4818 (x1923 x2309) (ite x2678 (x1923 x2309) (ite x8115 (x1923 x2309) (ite x5309 (x1923 x2309) (ite x3990 (x1923 x2309) (ite x2297 (x1923 x2309) (ite x6371 (x1923 x2309) (ite x5810 (ite x1564 (x2810 x2309) (x1923 x2309)) (x1923 x2309))))))))))))))))))))))))
(define-fun x28 ((x2309 Int)) Int (ite x7947 (ite x6453 (x1923 x2309) (x4850 x2309)) (ite x385 (x1923 x2309) (ite x6453 (x1923 x2309) (x4850 x2309)))))
(define-fun x2975 ((x2309 Int)) Int (x6676 x2309))
(define-fun x2224 ((x2309 Int)) Int (ite x7588 (ite x1679 (x5771 x2309) (x6011 x2309)) (ite x5494 (ite x1679 (x5771 x2309) (x6011 x2309)) (x6011 x2309))))
(define-fun x3528 ((x2309 Int)) Int (ite x978 (x6011 x2309) (ite x814 (x6011 x2309) (x2224 x2309))))
(define-fun x6713 ((x2309 Int)) Int (ite x6190 (ite x2088 (x6011 x2309) (x3528 x2309)) (x6011 x2309)))
(define-fun x5523 ((x2309 Int)) Int (ite x1397 (x5299 x2309) (x6011 x2309)))
(define-fun x8493 ((x2309 Int)) Int (ite x4522 (ite x8259 (x6713 x2309) (x6011 x2309)) (ite x4440 (x6011 x2309) (x5523 x2309))))
(define-fun x7049 ((x2309 Int)) Int (ite x2822 (x6011 x2309) (ite x1972 (x6011 x2309) (ite x7537 (x6011 x2309) (ite x6368 (x6011 x2309) (ite x5544 (x6011 x2309) (ite x3913 (x6011 x2309) (ite x6097 (x6011 x2309) (ite x8545 (x6011 x2309) (ite x7961 (x6011 x2309) (ite x6275 (x6011 x2309) (ite x4351 (x6011 x2309) (ite x4677 (x6011 x2309) (ite x6418 (x6011 x2309) (ite x4561 (x6011 x2309) (ite x4818 (x6011 x2309) (ite x2678 (x6011 x2309) (ite x8115 (x6011 x2309) (ite x5309 (x6011 x2309) (ite x3990 (x6011 x2309) (ite x2297 (x6011 x2309) (ite x6371 (x6011 x2309) (ite x5810 (ite x1564 (x8493 x2309) (x6011 x2309)) (x6011 x2309))))))))))))))))))))))))
(define-fun x3510 ((x2309 Int)) Int (ite x7947 (ite x6453 (x6011 x2309) (x7049 x2309)) (ite x385 (x6011 x2309) (ite x6453 (x6011 x2309) (x7049 x2309)))))
(define-fun x1683 ((x2309 Int)) Int (x7471 x2309))
(define-fun x1065 ((x2309 Int)) Int (ite x7588 (ite x1679 (x4140 x2309) (x3775 x2309)) (ite x5494 (ite x1679 (x4140 x2309) (x3775 x2309)) (x3775 x2309))))
(define-fun x5880 ((x2309 Int)) Int (ite x978 (x3775 x2309) (ite x814 (x3775 x2309) (x1065 x2309))))
(define-fun x549 ((x2309 Int)) Int (ite x6190 (ite x2088 (x3775 x2309) (x5880 x2309)) (x3775 x2309)))
(define-fun x3336 ((x2309 Int)) Int (ite x1397 (x4242 x2309) (x3775 x2309)))
(define-fun x6678 ((x2309 Int)) Int (ite x4522 (ite x8259 (x549 x2309) (x3775 x2309)) (ite x4440 (x3775 x2309) (x3336 x2309))))
(define-fun x1285 ((x2309 Int)) Int (ite x2822 (x3775 x2309) (ite x1972 (x3775 x2309) (ite x7537 (x3775 x2309) (ite x6368 (x3775 x2309) (ite x5544 (x3775 x2309) (ite x3913 (x3775 x2309) (ite x6097 (x3775 x2309) (ite x8545 (x3775 x2309) (ite x7961 (x3775 x2309) (ite x6275 (x3775 x2309) (ite x4351 (x3775 x2309) (ite x4677 (x3775 x2309) (ite x6418 (x3775 x2309) (ite x4561 (x3775 x2309) (ite x4818 (x3775 x2309) (ite x2678 (x3775 x2309) (ite x8115 (x3775 x2309) (ite x5309 (x3775 x2309) (ite x3990 (x3775 x2309) (ite x2297 (x3775 x2309) (ite x6371 (x3775 x2309) (ite x5810 (ite x1564 (x6678 x2309) (x3775 x2309)) (x3775 x2309))))))))))))))))))))))))
(define-fun x8530 ((x2309 Int)) Int (ite x7947 (ite x6453 (x3775 x2309) (x1285 x2309)) (ite x385 (x3775 x2309) (ite x6453 (x3775 x2309) (x1285 x2309)))))
(define-fun x7096 ((x2309 Int)) Int (ite x1012 (x5990 x2309) (ite x6770 (x7191 x2309) (x2637 x2309))))
(define-fun x1629 ((x2309 Int)) Int (ite (= x2309 160) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x7096 x2309)))
(define-fun x5678 ((x2309 Int)) Int (ite (= x2309 164) x3611 (x1629 x2309)))
(define-fun x6031 ((x2309 Int)) Int (ite (= x2309 160) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x5678 x2309)))
(define-fun x4091 ((x2309 Int)) Int (ite (= x2309 164) x3308 (x6031 x2309)))
(define-fun x2051 ((x2309 Int)) Int (ite (= 4 x2309) 17 (x8261 x2309)))
(define-fun x8207 ((x2309 Int)) Int (ite (and (> 36 x2309) (>= x2309 0)) (x2051 x2309) (x123 x2309)))
(define-fun x2706 ((x2309 Int)) Int (ite (= 4 x2309) 17 (x5396 x2309)))
(define-fun x7760 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 36)) (x2706 x2309) (x123 x2309)))
(define-fun x6929 ((x2309 Int)) Int (ite (= x2309 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x495 x2309)))
(define-fun x1192 ((x2309 Int)) Int (ite (= x2309 132) x1570 (x6929 x2309)))
(define-fun x6682 ((x2309 Int)) Int (ite (= x2309 164) x7284 (x1192 x2309)))
(define-fun x5588 ((x2309 Int)) Int (ite (= x2309 196) x4462 (x6682 x2309)))
(define-fun x601 ((x2309 Int)) Int (ite (= x2309 228) x2355 (x5588 x2309)))
(define-fun x2479 ((x2309 Int)) Int (ite (= x2309 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x935 x2309)))
(define-fun x7571 ((x2309 Int)) Int (ite (and (> 4 x2309) (>= x2309 0)) (x2479 (+ 128 x2309)) (x3041 x2309)))
(define-fun x7092 ((x2309 Int)) Int (ite (= 128 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x935 x2309)))
(define-fun x4385 ((x2309 Int)) Int (ite (= x2309 132) 32 (x7092 x2309)))
(define-fun x6906 ((x2309 Int)) Int (ite (= 164 x2309) 12 (x4385 x2309)))
(define-fun x3168 ((x2309 Int)) Int (ite (= x2309 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x6906 x2309)))
(define-fun x8332 ((x2309 Int)) Int (ite (and (> 100 x2309) (>= x2309 0)) (x3168 (+ x2309 128)) (x3041 x2309)))
(define-fun x2497 ((x2309 Int)) Int (ite (= x2309 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x495 x2309)))
(define-fun x4373 ((x2309 Int)) Int (ite (= 132 x2309) x7391 (x2497 x2309)))
(define-fun x6901 ((x2309 Int)) Int (ite (= x2309 164) 128 (x4373 x2309)))
(define-fun x2997 ((x2309 Int)) Int (ite (= x2309 260) x4248 (x6901 x2309)))
(define-fun x4909 ((x2309 Int)) Int (ite (= 292 x2309) x3291 (x2997 x2309)))
(define-fun x6196 ((x2309 Int)) Int (ite (= x2309 292) x6959 (x2997 x2309)))
(define-fun x2429 ((x2309 Int)) Int (ite (= x2309 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x495 x2309)))
(define-fun x1471 ((x2309 Int)) Int (ite (= 132 x2309) x6092 (x2429 x2309)))
(define-fun x4178 ((x2309 Int)) Int (ite (= x2309 164) 128 (x1471 x2309)))
(define-fun x6123 ((x2309 Int)) Int (ite (= x2309 260) x415 (x4178 x2309)))
(define-fun x3756 ((x2309 Int)) Int (ite (= x2309 292) x162 (x6123 x2309)))
(define-fun x2898 ((x2309 Int)) Int (ite (= 292 x2309) x6563 (x6123 x2309)))
(define-fun x328 ((x2309 Int)) Int (ite (= x2309 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x495 x2309)))
(define-fun x6426 ((x2309 Int)) Int (ite (= x2309 132) x3003 (x328 x2309)))
(define-fun x4230 ((x2309 Int)) Int (ite (= 164 x2309) x2022 (x6426 x2309)))
(define-fun x6568 ((x2309 Int)) Int (ite (= x2309 4) 33 (x5416 x2309)))
(define-fun x7854 ((x2309 Int)) Int (ite (and (> 36 x2309) (<= 0 x2309)) (x6568 x2309) (x2079 x2309)))
(define-fun x2401 ((x2309 Int)) Int (ite (= x2309 x4485) 2 (x1977 x2309)))
(define-fun x6504 ((x2309 Int)) Int (ite (= x1457 x2309) x2022 (x6461 x2309)))
(define-fun x8507 ((x2309 Int)) Int (ite (= x2309 128) x2022 (x1765 x2309)))
(define-fun x7060 ((x2309 Int)) Int (ite (= x2309 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x8507 x2309)))
(define-fun x6789 ((x2309 Int)) Int (ite (= 132 x2309) x3003 (x7060 x2309)))
(define-fun x521 ((x2309 Int)) Int (ite (= x2309 164) 0 (x6789 x2309)))
(define-fun x7023 ((x2309 Int)) Int (ite (= 196 x2309) 0 (x521 x2309)))
(define-fun x6288 ((x2309 Int)) Int (ite (= x2309 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x5416 x2309)))
(define-fun x5999 ((x2309 Int)) Int (ite (and (< x2309 4) (>= x2309 0)) (x6288 (+ 128 x2309)) (x2079 x2309)))
(define-fun x1393 ((x2309 Int)) Int (ite (= x2309 128) 50226347614966974677930900640024090345938424853691168920094736542366852710400 (x5416 x2309)))
(define-fun x2901 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 4)) (x1393 (+ 128 x2309)) (x2079 x2309)))
(define-fun x757 ((x2309 Int)) Int 0)
(define-fun x178 ((x2309 Int)) Int (ite (= x2309 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x495 x2309)))
(define-fun x699 ((x2309 Int)) Int (ite (= 132 x2309) x7601 (x178 x2309)))
(define-fun x856 ((x2309 Int)) Int (ite (= x2309 164) 128 (x699 x2309)))
(define-fun x2767 ((x2309 Int)) Int (ite (= 260 x2309) x7371 (x856 x2309)))
(define-fun x4819 ((x2309 Int)) Int (ite (= x2309 292) x3830 (x2767 x2309)))
(define-fun x2995 ((x2309 Int)) Int (ite (= x2309 292) x511 (x2767 x2309)))
(define-fun x5691 ((x2309 Int)) Int (ite (= x2309 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x495 x2309)))
(define-fun x7683 ((x2309 Int)) Int (ite (= 132 x2309) x6304 (x5691 x2309)))
(define-fun x665 ((x2309 Int)) Int (ite (= 164 x2309) x1123 (x7683 x2309)))
(define-fun x3430 ((x2309 Int)) Int (ite (= x2309 196) x7411 (x665 x2309)))
(define-fun x23 ((x2309 Int)) Int (ite (= x8301 x2309) x2076 (x8302 x2309)))
(define-fun x5683 ((x2309 Int)) Int (ite (= x2309 x2738) x6407 (x23 x2309)))
(define-fun x5764 ((x2309 Int)) Int 0)
(define-fun x4197 ((x2309 Int)) Int (ite (= 128 x2309) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x495 x2309)))
(define-fun x348 ((x2309 Int)) Int (ite (= x2309 132) x4771 (x4197 x2309)))
(define-fun x7252 ((x2309 Int)) Int (ite (= x3611 x2309) x7142 (x8302 x2309)))
(define-fun x38 ((x2309 Int)) Int (ite (= x2309 x4771) x7468 (x7252 x2309)))
(define-fun x7852 ((x2309 Int)) Int 0)
(define-fun x4860 ((x2309 Int)) Int (ite (= 128 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5341 x2309)))
(define-fun x2788 ((x2309 Int)) Int (ite (= x2309 132) 32 (x4860 x2309)))
(define-fun x478 ((x2309 Int)) Int (ite (= 164 x2309) 12 (x2788 x2309)))
(define-fun x6379 ((x2309 Int)) Int (ite (= x2309 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x478 x2309)))
(define-fun x4811 ((x2309 Int)) Int (ite (and (> 100 x2309) (<= 0 x2309)) (x6379 (+ 128 x2309)) (x2688 x2309)))
(define-fun x8317 ((x2309 Int)) Int (ite (= 128 x2309) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x495 x2309)))
(define-fun x1488 ((x2309 Int)) Int (ite (= 132 x2309) x39 (x8317 x2309)))
(define-fun x6921 ((x2309 Int)) Int (ite (= x2309 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x3271 x2309)))
(define-fun x156 ((x2309 Int)) Int (ite (and (< x2309 4) (<= 0 x2309)) (x6921 (+ x2309 128)) (x597 x2309)))
(define-fun x6427 ((x2309 Int)) Int (ite (= 128 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3271 x2309)))
(define-fun x1398 ((x2309 Int)) Int (ite (= 132 x2309) 32 (x6427 x2309)))
(define-fun x914 ((x2309 Int)) Int (ite (= 164 x2309) 12 (x1398 x2309)))
(define-fun x2922 ((x2309 Int)) Int (ite (= x2309 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x914 x2309)))
(define-fun x6335 ((x2309 Int)) Int (ite (and (> 100 x2309) (<= 0 x2309)) (x2922 (+ x2309 128)) (x597 x2309)))
(define-fun x4973 ((x2309 Int)) Int (ite (= x2309 4) 17 (x8261 x2309)))
(define-fun x5281 ((x2309 Int)) Int (ite (and (< x2309 36) (>= x2309 0)) (x4973 x2309) (x123 x2309)))
(define-fun x6328 ((x2309 Int)) Int (ite (= x2309 128) 48755886422350550937420582033662272622158303343164848365600209189876434731008 (x8261 x2309)))
(define-fun x5827 ((x2309 Int)) Int (ite (and (> 4 x2309) (<= 0 x2309)) (x6328 (+ 128 x2309)) (x123 x2309)))
(define-fun x3726 ((x2309 Int)) Int (ite x6523 (x123 x2309) (ite x2222 (x5281 x2309) (ite x2375 (x5827 x2309) (x8207 x2309)))))
(define-fun x7322 ((x2309 Int)) Int (ite (= x2309 0) x1130 (x123 x2309)))
(define-fun x5573 ((x2309 Int)) Int (ite x7819 (x3726 x2309) (x7322 x2309)))
(define-fun x7346 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3449 x2309)))
(define-fun x8054 ((x2309 Int)) Int (ite (= 132 x2309) 32 (x7346 x2309)))
(define-fun x8160 ((x2309 Int)) Int (ite (= 164 x2309) 38 (x8054 x2309)))
(define-fun x5995 ((x2309 Int)) Int (ite (= x2309 196) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x8160 x2309)))
(define-fun x5131 ((x2309 Int)) Int (ite (= 228 x2309) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x5995 x2309)))
(define-fun x2860 ((x2309 Int)) Int (ite (and (>= x2309 0) (> 132 x2309)) (x5131 (+ 128 x2309)) (x8505 x2309)))
(define-fun x6507 ((x2309 Int)) Int (ite x3908 (x8505 x2309) (ite x8489 (x8505 x2309) (ite x1660 (x8505 x2309) (ite x2615 (x8505 x2309) (x2860 x2309))))))
(define-fun x5716 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> x5329 x2309)) (x6507 x2309) (x5396 x2309)))
(define-fun x6510 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 x5329)) (x5716 x2309) (x123 x2309)))
(define-fun x6006 ((x2309 Int)) Int (ite (= x2309 4) 17 (x5396 x2309)))
(define-fun x243 ((x2309 Int)) Int (ite (and (< x2309 36) (<= 0 x2309)) (x6006 x2309) (x123 x2309)))
(define-fun x4193 ((x2309 Int)) Int (ite (= 4 x2309) 17 (x5396 x2309)))
(define-fun x2666 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 36)) (x4193 x2309) (x123 x2309)))
(define-fun x2417 ((x2309 Int)) Int (ite (= 4 x2309) 17 (x5396 x2309)))
(define-fun x8388 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 36)) (x2417 x2309) (x123 x2309)))
(define-fun x1280 ((x2309 Int)) Int (ite (= x2309 4) 34 (x5396 x2309)))
(define-fun x1011 ((x2309 Int)) Int (ite (and (< x2309 36) (<= 0 x2309)) (x1280 x2309) (x123 x2309)))
(define-fun x8231 ((x2309 Int)) Int (ite (= 4 x2309) 34 (x5396 x2309)))
(define-fun x1922 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 36)) (x8231 x2309) (x123 x2309)))
(define-fun x4942 ((x2309 Int)) Int (ite (= 0 x2309) x2739 (x123 x2309)))
(define-fun x477 ((x2309 Int)) Int (ite (= 4 x2309) 17 (x5396 x2309)))
(define-fun x796 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 36)) (x477 x2309) (x123 x2309)))
(define-fun x7119 ((x2309 Int)) Int (ite x576 (x156 x2309) (x6335 x2309)))
(define-fun x3602 ((x2309 Int)) Int (ite x8367 (x7119 x2309) (x597 x2309)))
(define-fun x1331 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 x4194)) (x3602 x2309) (x5396 x2309)))
(define-fun x6965 ((x2309 Int)) Int (ite (and (>= x2309 0) (> x4194 x2309)) (x1331 x2309) (x123 x2309)))
(define-fun x608 ((x2309 Int)) Int (ite (= x2309 x4097) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x5341 x2309)))
(define-fun x2568 ((x2309 Int)) Int (ite (and (< x2309 4) (<= 0 x2309)) (x608 (+ x2309 x4097)) (x2688 x2309)))
(define-fun x1697 ((x2309 Int)) Int (ite x3474 (x2568 x2309) (x4811 x2309)))
(define-fun x2677 ((x2309 Int)) Int (ite x3587 (x1697 x2309) (x2688 x2309)))
(define-fun x4810 ((x2309 Int)) Int (ite (and (< x2309 x7959) (>= x2309 0)) (x2677 x2309) (x5396 x2309)))
(define-fun x2805 ((x2309 Int)) Int (ite (and (>= x2309 0) (> x7959 x2309)) (x4810 x2309) (x123 x2309)))
(define-fun x5377 ((x2309 Int)) Int (ite (= x2309 4) 34 (x6750 x2309)))
(define-fun x1045 ((x2309 Int)) Int (ite (and (> 36 x2309) (>= x2309 0)) (x5377 x2309) (x8334 x2309)))
(define-fun x5043 ((x2309 Int)) Int (ite (= x7684 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6750 x2309)))
(define-fun x7015 ((x2309 Int)) Int (ite (= x2309 x2111) 32 (x5043 x2309)))
(define-fun x148 ((x2309 Int)) Int (ite (= x2309 x3390) 32 (x7015 x2309)))
(define-fun x1974 ((x2309 Int)) Int (ite (= x5637 x2309) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x148 x2309)))
(define-fun x5553 ((x2309 Int)) Int (ite (and (> 100 x2309) (<= 0 x2309)) (x1974 (+ x2309 x7684)) (x8334 x2309)))
(define-fun x4330 ((x2309 Int)) Int (ite (= x2309 x7684) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6750 x2309)))
(define-fun x3911 ((x2309 Int)) Int (ite (= x2569 x2309) 32 (x4330 x2309)))
(define-fun x1725 ((x2309 Int)) Int (ite (= x2879 x2309) 48 (x3911 x2309)))
(define-fun x4511 ((x2309 Int)) Int (ite (= x274 x2309) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x1725 x2309)))
(define-fun x1645 ((x2309 Int)) Int (ite (= x2288 x2309) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x4511 x2309)))
(define-fun x4468 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> 132 x2309)) (x1645 (+ x2309 x7684)) (x8334 x2309)))
(define-fun x7559 ((x2309 Int)) Int (ite (= 0 x2309) x43 (x7676 x2309)))
(define-fun x1066 ((x2309 Int)) Int (ite (= 32 x2309) x8445 (x7559 x2309)))
(define-fun x1234 ((x2309 Int)) Int (ite x8282 (x7676 x2309) (x1066 x2309)))
(define-fun x3517 ((x2309 Int)) Int (ite (and (< x2309 x5231) (<= 0 x2309)) (x1234 x2309) (x6750 x2309)))
(define-fun x4181 ((x2309 Int)) Int (ite (and (> x5231 x2309) (>= x2309 0)) (x3517 x2309) (x8334 x2309)))
(define-fun x4447 ((x2309 Int)) Int (ite (= x2309 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x6750 x2309)))
(define-fun x326 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 4)) (x4447 (+ x2309 128)) (x8334 x2309)))
(define-fun x4261 ((x2309 Int)) Int (ite (= 128 x2309) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x6750 x2309)))
(define-fun x3142 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 4)) (x4261 (+ x2309 128)) (x8334 x2309)))
(define-fun x6445 ((x2309 Int)) Int (ite (= 4 x2309) 33 (x6750 x2309)))
(define-fun x3560 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 36)) (x6445 x2309) (x8334 x2309)))
(define-fun x1879 ((x2309 Int)) Int (ite (= x2309 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x6750 x2309)))
(define-fun x1789 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 4)) (x1879 (+ 128 x2309)) (x8334 x2309)))
(define-fun x2628 ((x2309 Int)) Int (ite x2251 (x1045 x2309) (ite x8052 (x5553 x2309) (ite x878 (x8334 x2309) (ite x6410 (x8334 x2309) (ite x1572 (x4468 x2309) (ite x7531 (x8334 x2309) (ite x5867 (x4181 x2309) (ite x5127 (x326 x2309) (ite x6968 (x3142 x2309) (ite x5390 (x3560 x2309) (x1789 x2309))))))))))))
(define-fun x5453 ((x2309 Int)) Int (ite x5078 (x2628 x2309) (x8334 x2309)))
(define-fun x110 ((x2309 Int)) Int (ite x5446 (x5453 x2309) (ite x6851 (x5453 x2309) (x5764 x2309))))
(define-fun x6666 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 x4348)) (x110 x2309) (x5396 x2309)))
(define-fun x2185 ((x2309 Int)) Int (ite (and (> x4348 x2309) (>= x2309 0)) (x6666 x2309) (x123 x2309)))
(define-fun x6460 ((x2309 Int)) Int (ite x7682 (ite x7404 (x2767 x2309) (x2995 x2309)) (x4819 x2309)))
(define-fun x3586 ((x2309 Int)) Int (ite (= x2309 196) x574 (x6460 x2309)))
(define-fun x8166 ((x2309 Int)) Int (ite (= x2309 228) x7736 (x3586 x2309)))
(define-fun x2115 ((x2309 Int)) Int (ite (= x2309 x8541) x2753 (x8166 x2309)))
(define-fun x1816 ((x2309 Int)) Int (ite (= x2309 x1345) x3878 (x2115 x2309)))
(define-fun x4188 ((x2309 Int)) Int (ite (= x1345 x2309) x4120 (x2115 x2309)))
(define-fun x6703 ((x2309 Int)) Int (ite x277 (ite x1791 (x2115 x2309) (x1816 x2309)) (x4188 x2309)))
(define-fun x1025 ((x2309 Int)) Int (ite (and (> x7402 x2309) (<= 164 x2309)) (x6703 (+ x2309 128)) (x2349 x2309)))
(define-fun x7496 ((x2309 Int)) Int (ite (and (<= 128 x2309) (> (+ x5106 128) x2309)) (x1025 (+ x2309 36)) (x6083 x2309)))
(define-fun x5714 ((x2309 Int)) Int (ite (= x2309 x7888) 0 (x7496 x2309)))
(define-fun x3112 ((x2309 Int)) Int (ite (= x2309 x6253) x5407 (x5714 x2309)))
(define-fun x5202 ((x2309 Int)) Int (ite (and (<= 128 x2309) (< x2309 (+ x838 128))) (x1025 (- (+ x9 x2309) 128)) (x3112 x2309)))
(define-fun x4457 ((x2309 Int)) Int (ite (= x2558 x2309) 0 (x5202 x2309)))
(define-fun x2223 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4457 x2309)))
(define-fun x2452 ((x2309 Int)) Int (ite (= 132 x2309) 32 (x2223 x2309)))
(define-fun x2986 ((x2309 Int)) Int (ite (= 164 x2309) 33 (x2452 x2309)))
(define-fun x286 ((x2309 Int)) Int (ite (= 196 x2309) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x2986 x2309)))
(define-fun x5876 ((x2309 Int)) Int (ite (= x2309 228) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x286 x2309)))
(define-fun x5951 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> 132 x2309)) (x5876 (+ x2309 128)) (x4996 x2309)))
(define-fun x2927 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3112 x2309)))
(define-fun x6165 ((x2309 Int)) Int (ite (= 132 x2309) 32 (x2927 x2309)))
(define-fun x3146 ((x2309 Int)) Int (ite (= x2309 164) 35 (x6165 x2309)))
(define-fun x2756 ((x2309 Int)) Int (ite (= 196 x2309) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x3146 x2309)))
(define-fun x187 ((x2309 Int)) Int (ite (= 228 x2309) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x2756 x2309)))
(define-fun x1589 ((x2309 Int)) Int (ite (and (< x2309 132) (>= x2309 0)) (x187 (+ 128 x2309)) (x4996 x2309)))
(define-fun x2556 ((x2309 Int)) Int (ite x819 (x4996 x2309) (ite x571 (x4996 x2309) (ite x6692 (x4996 x2309) (ite x4260 (x4996 x2309) (ite x4280 (x5951 x2309) (x1589 x2309)))))))
(define-fun x4582 ((x2309 Int)) Int 0)
(define-fun x5509 ((x2309 Int)) Int (ite x2561 (x2556 x2309) (x4582 x2309)))
(define-fun x7165 ((x2309 Int)) Int (ite (and (< x2309 x4946) (<= 0 x2309)) (x5509 x2309) (x5396 x2309)))
(define-fun x3156 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 x4946)) (x7165 x2309) (x123 x2309)))
(define-fun x7809 ((x2309 Int)) Int (ite x91 (x2079 x2309) (ite x6388 (x5999 x2309) (ite x5872 (x7854 x2309) (x2901 x2309)))))
(define-fun x3377 ((x2309 Int)) Int (ite x7560 (x7809 x2309) (x2079 x2309)))
(define-fun x6323 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> x8494 x2309)) (x3377 x2309) (x5396 x2309)))
(define-fun x5190 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 x8494)) (x6323 x2309) (x123 x2309)))
(define-fun x3515 ((x2309 Int)) Int (ite (= 4 x2309) 34 (x7197 x2309)))
(define-fun x1550 ((x2309 Int)) Int (ite (and (> 36 x2309) (<= 0 x2309)) (x3515 x2309) (x5047 x2309)))
(define-fun x1356 ((x2309 Int)) Int (ite (= x2309 128) x5430 (x7197 x2309)))
(define-fun x1184 ((x2309 Int)) Int (ite (= 160 x2309) x2416 (x1356 x2309)))
(define-fun x6472 ((x2309 Int)) Int (ite (= x2309 192) x4671 (x1184 x2309)))
(define-fun x3429 ((x2309 Int)) Int (ite (= 160 x2309) x3792 (x1356 x2309)))
(define-fun x7038 ((x2309 Int)) Int (ite x8291 (x1356 x2309) (ite x5948 (ite x1467 (x1184 x2309) (x6472 x2309)) (x3429 x2309))))
(define-fun x8083 ((x2309 Int)) Int (ite x8190 (ite x3688 (x2997 x2309) (x6196 x2309)) (x4909 x2309)))
(define-fun x6671 ((x2309 Int)) Int (ite (= x2309 196) x2008 (x8083 x2309)))
(define-fun x6201 ((x2309 Int)) Int (ite (= 228 x2309) x8346 (x6671 x2309)))
(define-fun x3423 ((x2309 Int)) Int (ite (= x7101 x2309) x6879 (x6201 x2309)))
(define-fun x5921 ((x2309 Int)) Int (ite (= x1350 x2309) x7652 (x3423 x2309)))
(define-fun x7251 ((x2309 Int)) Int (ite (= x1350 x2309) x7220 (x3423 x2309)))
(define-fun x1990 ((x2309 Int)) Int (ite x1699 (ite x6809 (x3423 x2309) (x5921 x2309)) (x7251 x2309)))
(define-fun x3232 ((x2309 Int)) Int (ite (and (<= 164 x2309) (< x2309 x4919)) (x1990 (+ x2309 128)) (x2027 x2309)))
(define-fun x7259 ((x2309 Int)) Int (ite (and (> (+ x128 x7535) x2309) (<= x7535 x2309)) (x3232 (- (+ 164 x2309) x7535)) (x7038 x2309)))
(define-fun x4939 ((x2309 Int)) Int (ite (= x2821 x2309) 0 (x7259 x2309)))
(define-fun x5071 ((x2309 Int)) Int (ite x7475 (x4939 x2309) (x7038 x2309)))
(define-fun x6536 ((x2309 Int)) Int (ite (= x7535 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5071 x2309)))
(define-fun x1736 ((x2309 Int)) Int (ite (= x2309 x6269) 32 (x6536 x2309)))
(define-fun x8538 ((x2309 Int)) Int (ite (= x3259 x2309) 38 (x1736 x2309)))
(define-fun x7241 ((x2309 Int)) Int (ite (= x4317 x2309) 34591783479076665078880830389440322441076534786459098783165778951140825654127 (x8538 x2309)))
(define-fun x171 ((x2309 Int)) Int (ite (= x2309 x5874) 49960157028345592648530624234191905822321225401495951855107091972775720517632 (x7241 x2309)))
(define-fun x4516 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 132)) (x171 (+ x7535 x2309)) (x5047 x2309)))
(define-fun x3095 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7197 x2309)))
(define-fun x7225 ((x2309 Int)) Int (ite (= x2309 132) 32 (x3095 x2309)))
(define-fun x3052 ((x2309 Int)) Int (ite (= x2309 164) 30 (x7225 x2309)))
(define-fun x3728 ((x2309 Int)) Int (ite (= x2309 196) 34591783479076665078880830389440322436311164112910831269305739813291000201216 (x3052 x2309)))
(define-fun x2293 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 100)) (x3728 (+ 128 x2309)) (x5047 x2309)))
(define-fun x7218 ((x2309 Int)) Int (ite x6164 (x1550 x2309) (ite x5275 (x5047 x2309) (ite x1324 (x5047 x2309) (ite x4679 (x5047 x2309) (ite x5111 (x4516 x2309) (x2293 x2309)))))))
(define-fun x25 ((x2309 Int)) Int (ite x6827 (x7218 x2309) (x5047 x2309)))
(define-fun x7650 ((x2309 Int)) Int (ite (and (> x1264 x2309) (<= 0 x2309)) (x25 x2309) (x5396 x2309)))
(define-fun x1496 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> x1264 x2309)) (x7650 x2309) (x123 x2309)))
(define-fun x5123 ((x2309 Int)) Int (ite x5835 (x7571 x2309) (x8332 x2309)))
(define-fun x8351 ((x2309 Int)) Int (ite x3553 (x5123 x2309) (x3041 x2309)))
(define-fun x5063 ((x2309 Int)) Int (ite (and (>= x2309 0) (> x3011 x2309)) (x8351 x2309) (x5396 x2309)))
(define-fun x4505 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> x3011 x2309)) (x5063 x2309) (x123 x2309)))
(define-fun x8251 ((x2309 Int)) Int (ite (= x2309 4) 17 (x5396 x2309)))
(define-fun x6822 ((x2309 Int)) Int (ite (and (> 36 x2309) (>= x2309 0)) (x8251 x2309) (x123 x2309)))
(define-fun x2638 ((x2309 Int)) Int (ite x3790 (x6510 x2309) (ite x2443 (x123 x2309) (ite x1774 (x243 x2309) (ite x6737 (x2666 x2309) (ite x1221 (x8388 x2309) (ite x2411 (x1011 x2309) (ite x2356 (x1922 x2309) (ite x3826 (x4942 x2309) (ite x5929 (x796 x2309) (ite x5323 (x6965 x2309) (ite x285 (x123 x2309) (ite x6596 (x2805 x2309) (ite x137 (x123 x2309) (ite x3335 (x2185 x2309) (ite x1344 (x123 x2309) (ite x4799 (x3156 x2309) (ite x2290 (x123 x2309) (ite x4316 (x5190 x2309) (ite x1978 (x123 x2309) (ite x5578 (x123 x2309) (ite x2512 (x1496 x2309) (ite x4629 (x123 x2309) (ite x1289 (x4505 x2309) (ite x5081 (x123 x2309) (ite x6139 (x6822 x2309) (ite x5388 (x7760 x2309) (x123 x2309))))))))))))))))))))))))))))
(define-fun x2471 ((x2309 Int)) Int (ite x4025 (x5573 x2309) (x2638 x2309)))
(define-fun x8238 ((x2309 Int)) Int (ite (and (> 192 x2309) (>= x2309 160)) (x2471 (- x2309 160)) (x4861 x2309)))
(define-fun x3981 ((x2309 Int)) Int (ite (= x4933 x2309) 3 (x1977 x2309)))
(define-fun x476 ((x2309 Int)) Int (ite x5446 (ite x5078 (x1977 x2309) (x3981 x2309)) (ite x6851 (ite x5078 (x1977 x2309) (x3981 x2309)) (x1977 x2309))))
(define-fun x7461 ((x2309 Int)) Int (ite (= x7660 x2309) 3 (x2401 x2309)))
(define-fun x3543 ((x2309 Int)) Int (ite x7625 (x2401 x2309) (x7461 x2309)))
(define-fun x7448 ((x2309 Int)) Int (ite x520 (ite x793 (x1977 x2309) (x476 x2309)) (ite x7560 (x1977 x2309) (x3543 x2309))))
(define-fun x4699 ((x2309 Int)) Int (ite x3642 (ite x5822 (x7448 x2309) (x1977 x2309)) (x1977 x2309)))
(define-fun x2661 ((x2309 Int)) Int (ite x4025 (x1977 x2309) (ite x3790 (x1977 x2309) (ite x2443 (x1977 x2309) (ite x1774 (x1977 x2309) (ite x6737 (x1977 x2309) (ite x1221 (x1977 x2309) (ite x2411 (x1977 x2309) (ite x2356 (x1977 x2309) (ite x3826 (x4699 x2309) (x1977 x2309)))))))))))
(define-fun x4028 ((x2309 Int)) Int (ite (= x7244 x2309) 0 (x8234 x2309)))
(define-fun x2081 ((x2309 Int)) Int (ite (= x2309 x1899) 1 (x2661 x2309)))
(define-fun x8101 ((x2309 Int)) Int (ite (= x2299 x2309) x1298 (x5308 x2309)))
(define-fun x7035 ((x2309 Int)) Int (ite x520 (x6461 x2309) (ite x7560 (x6461 x2309) (x6504 x2309))))
(define-fun x1643 ((x2309 Int)) Int (ite x3642 (ite x5822 (x7035 x2309) (x6461 x2309)) (x6461 x2309)))
(define-fun x474 ((x2309 Int)) Int (ite x4025 (x6461 x2309) (ite x3790 (x6461 x2309) (ite x2443 (x6461 x2309) (ite x1774 (x6461 x2309) (ite x6737 (x6461 x2309) (ite x1221 (x6461 x2309) (ite x2411 (x6461 x2309) (ite x2356 (x6461 x2309) (ite x3826 (x1643 x2309) (x6461 x2309)))))))))))
(define-fun x3575 ((x2309 Int)) Int (ite (= x2309 x533) 0 (x474 x2309)))
(define-fun x5861 ((x2309 Int)) Int (ite x6453 (x6376 x2309) (x4865 x2309)))
(define-fun x7146 ((x2309 Int)) Int (x8234 x2309))
(define-fun x8318 ((x2309 Int)) Int (ite x6453 (x3683 x2309) (x4345 x2309)))
(define-fun x3940 ((x2309 Int)) Int (ite x6453 (x2086 x2309) (x6240 x2309)))
(define-fun x4669 ((x2309 Int)) Int (ite x6453 (x4198 x2309) (x5513 x2309)))
(define-fun x6390 ((x2309 Int)) Int (ite x6453 (x120 x2309) (x5987 x2309)))
(define-fun x4804 ((x2309 Int)) Int (x840 x2309))
(define-fun x4306 ((x2309 Int)) Int (ite x6453 (x8344 x2309) (x1895 x2309)))
(define-fun x6589 ((x2309 Int)) Int (ite x6453 (x8495 x2309) (x3453 x2309)))
(define-fun x1483 ((x2309 Int)) Int (x5308 x2309))
(define-fun x677 ((x2309 Int)) Int (ite x6453 (x4704 x2309) (x3249 x2309)))
(define-fun x726 ((x2309 Int)) Int (ite x6453 (x2968 x2309) (x2734 x2309)))
(define-fun x6721 ((x2309 Int)) Int (x237 x2309))
(define-fun x5021 ((x2309 Int)) Int (ite x6453 (x1469 x2309) (x7579 x2309)))
(define-fun x6627 ((x2309 Int)) Int (ite x6453 (x175 x2309) (x4292 x2309)))
(define-fun x5883 ((x2309 Int)) Int (ite x6453 (x3540 x2309) (x7212 x2309)))
(define-fun x5358 ((x2309 Int)) Int (ite x6453 (x8560 x2309) (x7626 x2309)))
(define-fun x622 ((x2309 Int)) Int (ite x6453 (x2809 x2309) (x4047 x2309)))
(define-fun x512 ((x2309 Int)) Int (x4380 x2309))
(define-fun x4581 ((x2309 Int)) Int (ite x6453 (x1923 x2309) (x4850 x2309)))
(define-fun x8376 ((x2309 Int)) Int (x6676 x2309))
(define-fun x4255 ((x2309 Int)) Int (ite x6453 (x6011 x2309) (x7049 x2309)))
(define-fun x1568 ((x2309 Int)) Int (x7471 x2309))
(define-fun x5174 ((x2309 Int)) Int (ite x6453 (x3775 x2309) (x1285 x2309)))
(define-fun x7268 ((x2309 Int)) Int (x2888 x2309))
(define-fun x5293 ((x2309 Int)) Int (x1302 x2309))
(define-fun x7063 ((x2309 Int)) Int (x8234 x2309))
(define-fun x3802 ((x2309 Int)) Int (x840 x2309))
(define-fun x1710 ((x2309 Int)) Int (x5308 x2309))
(define-fun x7552 ((x2309 Int)) Int (x237 x2309))
(define-fun x1636 ((x2309 Int)) Int (x4380 x2309))
(define-fun x5600 ((x2309 Int)) Int (x7471 x2309))
(define-fun x5315 ((x2309 Int)) Int (x6676 x2309))
(define-fun x3303 ((x2309 Int)) Int (ite (= x2309 4) 17 (x6059 x2309)))
(define-fun x5142 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 36)) (x3303 x2309) (x2729 x2309)))
(define-fun x5899 ((x2309 Int)) Int (ite (= 128 x2309) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x587 x2309)))
(define-fun x8479 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> 4 x2309)) (x5899 (+ x2309 128)) (x6885 x2309)))
(define-fun x7211 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x587 x2309)))
(define-fun x6695 ((x2309 Int)) Int (ite (= x2309 132) 32 (x7211 x2309)))
(define-fun x6320 ((x2309 Int)) Int (ite (= x2309 164) 12 (x6695 x2309)))
(define-fun x4444 ((x2309 Int)) Int (ite (= x2309 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x6320 x2309)))
(define-fun x7521 ((x2309 Int)) Int (ite (and (> 100 x2309) (>= x2309 0)) (x4444 (+ 128 x2309)) (x6885 x2309)))
(define-fun x4103 ((x2309 Int)) Int (ite x4377 (x8479 x2309) (x7521 x2309)))
(define-fun x7884 ((x2309 Int)) Int (ite x990 (x4103 x2309) (x6885 x2309)))
(define-fun x4599 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 x5692)) (x7884 x2309) (x6059 x2309)))
(define-fun x6470 ((x2309 Int)) Int (ite (and (> x5692 x2309) (>= x2309 0)) (x4599 x2309) (x2729 x2309)))
(define-fun x5595 ((x2309 Int)) Int (ite x1564 (x5397 x2309) (x4198 x2309)))
(define-fun x965 ((x2309 Int)) Int (ite x1564 (x8493 x2309) (x6011 x2309)))
(define-fun x4727 ((x2309 Int)) Int (ite x1564 (x2810 x2309) (x1923 x2309)))
(define-fun x7105 ((x2309 Int)) Int (x5308 x2309))
(define-fun x7518 ((x2309 Int)) Int (ite x1564 (x3786 x2309) (x8344 x2309)))
(define-fun x5596 ((x2309 Int)) Int (x237 x2309))
(define-fun x2555 ((x2309 Int)) Int (x7471 x2309))
(define-fun x2057 ((x2309 Int)) Int (ite x1564 (x4700 x2309) (x2809 x2309)))
(define-fun x7566 ((x2309 Int)) Int (ite x1564 (x3431 x2309) (x8560 x2309)))
(define-fun x443 ((x2309 Int)) Int (ite x1564 (x1026 x2309) (x4704 x2309)))
(define-fun x7147 ((x2309 Int)) Int (x4380 x2309))
(define-fun x4681 ((x2309 Int)) Int (x840 x2309))
(define-fun x6415 ((x2309 Int)) Int (x6676 x2309))
(define-fun x3804 ((x2309 Int)) Int (ite x1564 (x5757 x2309) (x8495 x2309)))
(define-fun x4189 ((x2309 Int)) Int (ite x1564 (x122 x2309) (x2968 x2309)))
(define-fun x888 ((x2309 Int)) Int (ite x1564 (x6646 x2309) (x6376 x2309)))
(define-fun x2382 ((x2309 Int)) Int (ite x1564 (x6678 x2309) (x3775 x2309)))
(define-fun x7898 ((x2309 Int)) Int (ite x1564 (x5963 x2309) (x4770 x2309)))
(define-fun x3366 ((x2309 Int)) Int (ite x1564 (x307 x2309) (x1469 x2309)))
(define-fun x869 ((x2309 Int)) Int (ite x1564 (x7089 x2309) (x175 x2309)))
(define-fun x3192 ((x2309 Int)) Int (ite x1564 (x7608 x2309) (x3683 x2309)))
(define-fun x4751 ((x2309 Int)) Int (x8234 x2309))
(define-fun x5435 ((x2309 Int)) Int (ite x1564 (x6742 x2309) (x120 x2309)))
(define-fun x7639 ((x2309 Int)) Int (ite x1564 (x3740 x2309) (x3540 x2309)))
(define-fun x4426 ((x2309 Int)) Int (ite (= 4 x2309) 34 (x4421 x2309)))
(define-fun x6484 ((x2309 Int)) Int (ite (and (>= x2309 0) (> 36 x2309)) (x4426 x2309) (x8415 x2309)))
(define-fun x7058 ((x2309 Int)) Int (ite (= x2309 128) x7100 (x4421 x2309)))
(define-fun x7795 ((x2309 Int)) Int (ite (= x2309 160) x6449 (x7058 x2309)))
(define-fun x5424 ((x2309 Int)) Int (ite (= x2309 192) x6975 (x7795 x2309)))
(define-fun x5045 ((x2309 Int)) Int (ite (= x2309 160) x3845 (x7058 x2309)))
(define-fun x5996 ((x2309 Int)) Int (ite x6084 (x7058 x2309) (ite x6977 (ite x2941 (x7795 x2309) (x5424 x2309)) (x5045 x2309))))
(define-fun x6914 ((x2309 Int)) Int (ite (= 128 x2309) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x1174 x2309)))
(define-fun x6638 ((x2309 Int)) Int (ite (= 132 x2309) x2957 (x6914 x2309)))
(define-fun x997 ((x2309 Int)) Int (ite (= 164 x2309) 128 (x6638 x2309)))
(define-fun x8563 ((x2309 Int)) Int (ite (= x2309 260) x4170 (x997 x2309)))
(define-fun x3621 ((x2309 Int)) Int (ite (= 292 x2309) x5636 (x8563 x2309)))
(define-fun x6511 ((x2309 Int)) Int (ite (= x2309 292) x5592 (x8563 x2309)))
(define-fun x6327 ((x2309 Int)) Int (ite x5664 (ite x4117 (x8563 x2309) (x3621 x2309)) (x6511 x2309)))
(define-fun x8155 ((x2309 Int)) Int (ite (= x2309 196) x158 (x6327 x2309)))
(define-fun x4587 ((x2309 Int)) Int (ite (= x2309 228) x7200 (x8155 x2309)))
(define-fun x907 ((x2309 Int)) Int (ite (= x7047 x2309) x5838 (x4587 x2309)))
(define-fun x3797 ((x2309 Int)) Int (ite (= x1659 x2309) x4336 (x907 x2309)))
(define-fun x6205 ((x2309 Int)) Int (ite (= x1659 x2309) x3549 (x907 x2309)))
(define-fun x6272 ((x2309 Int)) Int (ite x6081 (ite x155 (x907 x2309) (x3797 x2309)) (x6205 x2309)))
(define-fun x3800 ((x2309 Int)) Int (ite (and (> x6062 x2309) (<= 164 x2309)) (x6272 (+ 128 x2309)) (x1238 x2309)))
(define-fun x1044 ((x2309 Int)) Int (ite (and (< x2309 (+ x440 x1883)) (<= x440 x2309)) (x3800 (- (+ 164 x2309) x440)) (x5996 x2309)))
(define-fun x5537 ((x2309 Int)) Int (ite (= x2309 x7554) 0 (x1044 x2309)))
(define-fun x4038 ((x2309 Int)) Int (ite x8377 (x5537 x2309) (x5996 x2309)))
(define-fun x5434 ((x2309 Int)) Int (ite (= x2309 x440) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4038 x2309)))
(define-fun x566 ((x2309 Int)) Int (ite (= x2309 x6772) 32 (x5434 x2309)))
(define-fun x2936 ((x2309 Int)) Int (ite (= x6910 x2309) 38 (x566 x2309)))
(define-fun x1111 ((x2309 Int)) Int (ite (= x2923 x2309) 34591783479076665078880830389440322441076534786459098783165778951140825654127 (x2936 x2309)))
(define-fun x2842 ((x2309 Int)) Int (ite (= x2309 x5353) 49960157028345592648530624234191905822321225401495951855107091972775720517632 (x1111 x2309)))
(define-fun x3314 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 132)) (x2842 (+ x2309 x440)) (x8415 x2309)))
(define-fun x3238 ((x2309 Int)) Int (ite (= 128 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4421 x2309)))
(define-fun x1127 ((x2309 Int)) Int (ite (= x2309 132) 32 (x3238 x2309)))
(define-fun x6363 ((x2309 Int)) Int (ite (= 164 x2309) 30 (x1127 x2309)))
(define-fun x3601 ((x2309 Int)) Int (ite (= 196 x2309) 34591783479076665078880830389440322436311164112910831269305739813291000201216 (x6363 x2309)))
(define-fun x5726 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 100)) (x3601 (+ x2309 128)) (x8415 x2309)))
(define-fun x2839 ((x2309 Int)) Int (ite x4805 (x6484 x2309) (ite x3477 (x8415 x2309) (ite x8385 (x8415 x2309) (ite x3201 (x8415 x2309) (ite x6501 (x3314 x2309) (x5726 x2309)))))))
(define-fun x3209 ((x2309 Int)) Int (ite x4440 (x2839 x2309) (x8415 x2309)))
(define-fun x661 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> x8191 x2309)) (x3209 x2309) (x6059 x2309)))
(define-fun x5118 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 x8191)) (x661 x2309) (x2729 x2309)))
(define-fun x5135 ((x2309 Int)) Int (x4380 x2309))
(define-fun x1151 ((x2309 Int)) Int (x5308 x2309))
(define-fun x2643 ((x2309 Int)) Int (x237 x2309))
(define-fun x6834 ((x2309 Int)) Int (x7471 x2309))
(define-fun x2773 ((x2309 Int)) Int (x840 x2309))
(define-fun x3873 ((x2309 Int)) Int (x6676 x2309))
(define-fun x8380 ((x2309 Int)) Int (x8234 x2309))
(define-fun x1598 ((x2309 Int)) Int (ite (= 128 x2309) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x6679 x2309)))
(define-fun x4312 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 4)) (x1598 (+ x2309 128)) (x3988 x2309)))
(define-fun x100 ((x2309 Int)) Int (ite (= 4 x2309) 33 (x6679 x2309)))
(define-fun x4422 ((x2309 Int)) Int (ite (and (> 36 x2309) (>= x2309 0)) (x100 x2309) (x3988 x2309)))
(define-fun x1230 ((x2309 Int)) Int (ite (= 128 x2309) 50226347614966974677930900640024090345938424853691168920094736542366852710400 (x6679 x2309)))
(define-fun x80 ((x2309 Int)) Int (ite (and (>= x2309 0) (> 4 x2309)) (x1230 (+ x2309 128)) (x3988 x2309)))
(define-fun x226 ((x2309 Int)) Int (ite x3273 (x3988 x2309) (ite x5773 (x4312 x2309) (ite x7739 (x4422 x2309) (x80 x2309)))))
(define-fun x2137 ((x2309 Int)) Int (ite x7723 (x226 x2309) (x3988 x2309)))
(define-fun x6493 ((x2309 Int)) Int (ite (and (> x4449 x2309) (>= x2309 0)) (x2137 x2309) (x6059 x2309)))
(define-fun x420 ((x2309 Int)) Int (ite (and (< x2309 x4449) (<= 0 x2309)) (x6493 x2309) (x2729 x2309)))
(define-fun x7585 ((x2309 Int)) Int (ite x8259 (x257 x2309) (x4770 x2309)))
(define-fun x1341 ((x2309 Int)) Int (x8234 x2309))
(define-fun x1781 ((x2309 Int)) Int (ite x8259 (x1270 x2309) (x4704 x2309)))
(define-fun x5633 ((x2309 Int)) Int (ite x8259 (x8260 x2309) (x3540 x2309)))
(define-fun x7433 ((x2309 Int)) Int (ite x8259 (x5658 x2309) (x4612 x2309)))
(define-fun x4288 ((x2309 Int)) Int (ite x8259 (x787 x2309) (x175 x2309)))
(define-fun x6374 ((x2309 Int)) Int (ite x8259 (x6757 x2309) (x3683 x2309)))
(define-fun x3949 ((x2309 Int)) Int (x5308 x2309))
(define-fun x7305 ((x2309 Int)) Int (ite x8259 (x5688 x2309) (x8495 x2309)))
(define-fun x2469 ((x2309 Int)) Int (x237 x2309))
(define-fun x5603 ((x2309 Int)) Int (ite x8259 (x6377 x2309) (x4198 x2309)))
(define-fun x3346 ((x2309 Int)) Int (ite x8259 (x2617 x2309) (x6376 x2309)))
(define-fun x7056 ((x2309 Int)) Int (ite x8259 (x4458 x2309) (x8560 x2309)))
(define-fun x8040 ((x2309 Int)) Int (ite x8259 (x1469 x2309) (x6520 x2309)))
(define-fun x3223 ((x2309 Int)) Int (ite x8259 (x6713 x2309) (x6011 x2309)))
(define-fun x7873 ((x2309 Int)) Int (x7471 x2309))
(define-fun x4404 ((x2309 Int)) Int (x2809 x2309))
(define-fun x8194 ((x2309 Int)) Int (x4380 x2309))
(define-fun x3989 ((x2309 Int)) Int (ite x8259 (x549 x2309) (x3775 x2309)))
(define-fun x4470 ((x2309 Int)) Int (ite x8259 (x524 x2309) (x1923 x2309)))
(define-fun x7495 ((x2309 Int)) Int (x840 x2309))
(define-fun x1158 ((x2309 Int)) Int (ite x8259 (x1201 x2309) (x120 x2309)))
(define-fun x1242 ((x2309 Int)) Int (x6676 x2309))
(define-fun x2798 ((x2309 Int)) Int (ite x8259 (x7733 x2309) (x8344 x2309)))
(define-fun x6188 ((x2309 Int)) Int (ite (= x2309 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x1174 x2309)))
(define-fun x2457 ((x2309 Int)) Int (ite (= x2309 132) x7753 (x6188 x2309)))
(define-fun x4686 ((x2309 Int)) Int (ite (= x2309 164) 128 (x2457 x2309)))
(define-fun x1914 ((x2309 Int)) Int (ite (= x2309 260) x649 (x4686 x2309)))
(define-fun x1807 ((x2309 Int)) Int (ite (= 292 x2309) x1991 (x1914 x2309)))
(define-fun x705 ((x2309 Int)) Int (ite (= x2309 292) x6035 (x1914 x2309)))
(define-fun x8070 ((x2309 Int)) Int (ite x2867 (ite x2743 (x1914 x2309) (x1807 x2309)) (x705 x2309)))
(define-fun x3781 ((x2309 Int)) Int (ite (= x2309 196) x6632 (x8070 x2309)))
(define-fun x1567 ((x2309 Int)) Int (ite (= 228 x2309) x1848 (x3781 x2309)))
(define-fun x5547 ((x2309 Int)) Int (ite (= x7916 x2309) x702 (x1567 x2309)))
(define-fun x7703 ((x2309 Int)) Int (ite (= x7704 x2309) x2143 (x5547 x2309)))
(define-fun x5976 ((x2309 Int)) Int (ite (= x7704 x2309) x6810 (x5547 x2309)))
(define-fun x8088 ((x2309 Int)) Int (ite x4464 (ite x4231 (x5547 x2309) (x7703 x2309)) (x5976 x2309)))
(define-fun x6469 ((x2309 Int)) Int (ite (and (< x2309 x190) (<= 164 x2309)) (x8088 (+ x2309 128)) (x7519 x2309)))
(define-fun x6953 ((x2309 Int)) Int (ite (and (> (+ 128 x2891) x2309) (>= x2309 128)) (x6469 (+ 36 x2309)) (x3301 x2309)))
(define-fun x3991 ((x2309 Int)) Int (ite (= x8451 x2309) 0 (x6953 x2309)))
(define-fun x6157 ((x2309 Int)) Int (ite (= x2309 x4042) x3218 (x3991 x2309)))
(define-fun x5192 ((x2309 Int)) Int (ite (and (<= 128 x2309) (< x2309 (+ 128 x5398))) (x6469 (- (+ x2884 x2309) 128)) (x6157 x2309)))
(define-fun x2893 ((x2309 Int)) Int (ite (= x2309 x6903) 0 (x5192 x2309)))
(define-fun x5710 ((x2309 Int)) Int (ite (= 128 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2893 x2309)))
(define-fun x6284 ((x2309 Int)) Int (ite (= 132 x2309) 32 (x5710 x2309)))
(define-fun x7941 ((x2309 Int)) Int (ite (= 164 x2309) 33 (x6284 x2309)))
(define-fun x1317 ((x2309 Int)) Int (ite (= x2309 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x7941 x2309)))
(define-fun x2325 ((x2309 Int)) Int (ite (= 228 x2309) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x1317 x2309)))
(define-fun x5960 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> 132 x2309)) (x2325 (+ x2309 128)) (x6372 x2309)))
(define-fun x1894 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6157 x2309)))
(define-fun x8544 ((x2309 Int)) Int (ite (= 132 x2309) 32 (x1894 x2309)))
(define-fun x4633 ((x2309 Int)) Int (ite (= x2309 164) 35 (x8544 x2309)))
(define-fun x404 ((x2309 Int)) Int (ite (= 196 x2309) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x4633 x2309)))
(define-fun x8470 ((x2309 Int)) Int (ite (= x2309 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x404 x2309)))
(define-fun x4533 ((x2309 Int)) Int (ite (and (> 132 x2309) (<= 0 x2309)) (x8470 (+ 128 x2309)) (x6372 x2309)))
(define-fun x2487 ((x2309 Int)) Int (ite x4883 (x6372 x2309) (ite x3026 (x6372 x2309) (ite x2635 (x6372 x2309) (ite x6848 (x6372 x2309) (ite x969 (x5960 x2309) (x4533 x2309)))))))
(define-fun x3761 ((x2309 Int)) Int 0)
(define-fun x3402 ((x2309 Int)) Int (ite x3801 (x2487 x2309) (x3761 x2309)))
(define-fun x4098 ((x2309 Int)) Int (ite (and (< x2309 x1945) (<= 0 x2309)) (x3402 x2309) (x6059 x2309)))
(define-fun x8537 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 x1945)) (x4098 x2309) (x2729 x2309)))
(define-fun x5349 ((x2309 Int)) Int (x4704 x2309))
(define-fun x7116 ((x2309 Int)) Int (ite (= x2309 4) 34 (x4931 x2309)))
(define-fun x6474 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 36)) (x7116 x2309) (x1702 x2309)))
(define-fun x6966 ((x2309 Int)) Int (ite (= x2309 x1663) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4931 x2309)))
(define-fun x4185 ((x2309 Int)) Int (ite (= x2309 x16) 32 (x6966 x2309)))
(define-fun x1722 ((x2309 Int)) Int (ite (= x86 x2309) 32 (x4185 x2309)))
(define-fun x8087 ((x2309 Int)) Int (ite (= x2309 x2070) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x1722 x2309)))
(define-fun x4869 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> 100 x2309)) (x8087 (+ x2309 x1663)) (x1702 x2309)))
(define-fun x5734 ((x2309 Int)) Int (ite (= x1663 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4931 x2309)))
(define-fun x6345 ((x2309 Int)) Int (ite (= x2309 x6512) 32 (x5734 x2309)))
(define-fun x7210 ((x2309 Int)) Int (ite (= x2309 x541) 48 (x6345 x2309)))
(define-fun x698 ((x2309 Int)) Int (ite (= x4396 x2309) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x7210 x2309)))
(define-fun x3236 ((x2309 Int)) Int (ite (= x2309 x1869) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x698 x2309)))
(define-fun x1223 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> 132 x2309)) (x3236 (+ x2309 x1663)) (x1702 x2309)))
(define-fun x1861 ((x2309 Int)) Int (ite (= 0 x2309) x3966 (x853 x2309)))
(define-fun x93 ((x2309 Int)) Int (ite (= 32 x2309) x236 (x1861 x2309)))
(define-fun x7990 ((x2309 Int)) Int (ite x5697 (x853 x2309) (x93 x2309)))
(define-fun x4456 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 x265)) (x7990 x2309) (x4931 x2309)))
(define-fun x8138 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 x265)) (x4456 x2309) (x1702 x2309)))
(define-fun x6706 ((x2309 Int)) Int (ite (= x2309 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x4931 x2309)))
(define-fun x5591 ((x2309 Int)) Int (ite (and (> 4 x2309) (>= x2309 0)) (x6706 (+ x2309 128)) (x1702 x2309)))
(define-fun x2759 ((x2309 Int)) Int (ite (= 128 x2309) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x4931 x2309)))
(define-fun x3532 ((x2309 Int)) Int (ite (and (> 4 x2309) (>= x2309 0)) (x2759 (+ x2309 128)) (x1702 x2309)))
(define-fun x2740 ((x2309 Int)) Int (ite (= x2309 4) 33 (x4931 x2309)))
(define-fun x3903 ((x2309 Int)) Int (ite (and (< x2309 36) (<= 0 x2309)) (x2740 x2309) (x1702 x2309)))
(define-fun x4171 ((x2309 Int)) Int (ite (= 128 x2309) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x4931 x2309)))
(define-fun x4224 ((x2309 Int)) Int (ite (and (< x2309 4) (<= 0 x2309)) (x4171 (+ x2309 128)) (x1702 x2309)))
(define-fun x553 ((x2309 Int)) Int (ite x4029 (x6474 x2309) (ite x2572 (x4869 x2309) (ite x419 (x1702 x2309) (ite x6818 (x1702 x2309) (ite x2563 (x1223 x2309) (ite x8085 (x1702 x2309) (ite x3147 (x8138 x2309) (ite x7892 (x5591 x2309) (ite x7203 (x3532 x2309) (ite x5587 (x3903 x2309) (x4224 x2309))))))))))))
(define-fun x6658 ((x2309 Int)) Int (ite x5819 (x553 x2309) (x1702 x2309)))
(define-fun x3360 ((x2309 Int)) Int 0)
(define-fun x4814 ((x2309 Int)) Int (ite x808 (x6658 x2309) (ite x2112 (x6658 x2309) (x3360 x2309))))
(define-fun x5403 ((x2309 Int)) Int (x1469 x2309))
(define-fun x3551 ((x2309 Int)) Int (x175 x2309))
(define-fun x2929 ((x2309 Int)) Int (x8495 x2309))
(define-fun x8243 ((x2309 Int)) Int (x4198 x2309))
(define-fun x3590 ((x2309 Int)) Int (x4770 x2309))
(define-fun x6826 ((x2309 Int)) Int (x8560 x2309))
(define-fun x4776 ((x2309 Int)) Int (x120 x2309))
(define-fun x8214 ((x2309 Int)) Int (x8344 x2309))
(define-fun x7761 ((x2309 Int)) Int (x6011 x2309))
(define-fun x5333 ((x2309 Int)) Int (x7471 x2309))
(define-fun x5159 ((x2309 Int)) Int (x6376 x2309))
(define-fun x3196 ((x2309 Int)) Int (x3775 x2309))
(define-fun x2329 ((x2309 Int)) Int (x4380 x2309))
(define-fun x5981 ((x2309 Int)) Int (ite x808 (x7649 x2309) (ite x2112 (x7649 x2309) (x2968 x2309))))
(define-fun x502 ((x2309 Int)) Int (x2809 x2309))
(define-fun x5415 ((x2309 Int)) Int (x5308 x2309))
(define-fun x5126 ((x2309 Int)) Int (x840 x2309))
(define-fun x1203 ((x2309 Int)) Int (x1923 x2309))
(define-fun x27 ((x2309 Int)) Int (x237 x2309))
(define-fun x2214 ((x2309 Int)) Int (x3540 x2309))
(define-fun x1438 ((x2309 Int)) Int (x6676 x2309))
(define-fun x5262 ((x2309 Int)) Int (x3683 x2309))
(define-fun x8443 ((x2309 Int)) Int (x8234 x2309))
(define-fun x6431 ((x2309 Int)) Int (ite (and (>= x2309 0) (> x71 x2309)) (x4814 x2309) (x6059 x2309)))
(define-fun x1877 ((x2309 Int)) Int (ite (and (< x2309 x71) (>= x2309 0)) (x6431 x2309) (x2729 x2309)))
(define-fun x1352 ((x2309 Int)) Int (x1469 x2309))
(define-fun x861 ((x2309 Int)) Int (x7471 x2309))
(define-fun x5091 ((x2309 Int)) Int (x4380 x2309))
(define-fun x166 ((x2309 Int)) Int (x2809 x2309))
(define-fun x7188 ((x2309 Int)) Int (x5308 x2309))
(define-fun x2238 ((x2309 Int)) Int (x840 x2309))
(define-fun x3016 ((x2309 Int)) Int (x6676 x2309))
(define-fun x4866 ((x2309 Int)) Int (x8234 x2309))
(define-fun x7669 ((x2309 Int)) Int (x237 x2309))
(define-fun x2180 ((x2309 Int)) Int (ite (= x470 x2309) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x118 x2309)))
(define-fun x6526 ((x2309 Int)) Int (ite (and (>= x2309 0) (> 4 x2309)) (x2180 (+ x470 x2309)) (x2287 x2309)))
(define-fun x8509 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x118 x2309)))
(define-fun x3805 ((x2309 Int)) Int (ite (= 132 x2309) 32 (x8509 x2309)))
(define-fun x8000 ((x2309 Int)) Int (ite (= x2309 164) 12 (x3805 x2309)))
(define-fun x4816 ((x2309 Int)) Int (ite (= x2309 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x8000 x2309)))
(define-fun x4033 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 100)) (x4816 (+ x2309 128)) (x2287 x2309)))
(define-fun x3481 ((x2309 Int)) Int (ite x5775 (x6526 x2309) (x4033 x2309)))
(define-fun x1864 ((x2309 Int)) Int (ite x978 (x3481 x2309) (x2287 x2309)))
(define-fun x5501 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 x3374)) (x1864 x2309) (x6059 x2309)))
(define-fun x6369 ((x2309 Int)) Int (ite (and (> x3374 x2309) (<= 0 x2309)) (x5501 x2309) (x2729 x2309)))
(define-fun x2515 ((x2309 Int)) Int (x1469 x2309))
(define-fun x4054 ((x2309 Int)) Int (ite x2088 (x4770 x2309) (x5584 x2309)))
(define-fun x1029 ((x2309 Int)) Int (ite x2088 (x3683 x2309) (x3207 x2309)))
(define-fun x3166 ((x2309 Int)) Int (x2968 x2309))
(define-fun x3463 ((x2309 Int)) Int (x7471 x2309))
(define-fun x959 ((x2309 Int)) Int (ite x2088 (x175 x2309) (x2546 x2309)))
(define-fun x3967 ((x2309 Int)) Int (ite x2088 (x3540 x2309) (x7435 x2309)))
(define-fun x6197 ((x2309 Int)) Int (ite x2088 (x8495 x2309) (x8450 x2309)))
(define-fun x8428 ((x2309 Int)) Int (ite x2088 (x6376 x2309) (x2641 x2309)))
(define-fun x2025 ((x2309 Int)) Int (ite x2088 (x4198 x2309) (x4660 x2309)))
(define-fun x442 ((x2309 Int)) Int (x4380 x2309))
(define-fun x1544 ((x2309 Int)) Int (ite x2088 (x4704 x2309) (x6831 x2309)))
(define-fun x4381 ((x2309 Int)) Int (x5308 x2309))
(define-fun x6215 ((x2309 Int)) Int (x237 x2309))
(define-fun x2689 ((x2309 Int)) Int (ite x2088 (x1923 x2309) (x7081 x2309)))
(define-fun x1097 ((x2309 Int)) Int (ite x2088 (x8560 x2309) (x2263 x2309)))
(define-fun x7694 ((x2309 Int)) Int (ite x2088 (x3775 x2309) (x5880 x2309)))
(define-fun x4904 ((x2309 Int)) Int (ite x2088 (x120 x2309) (x1333 x2309)))
(define-fun x1885 ((x2309 Int)) Int (x840 x2309))
(define-fun x5783 ((x2309 Int)) Int (x2809 x2309))
(define-fun x1239 ((x2309 Int)) Int (x6676 x2309))
(define-fun x6575 ((x2309 Int)) Int (x8234 x2309))
(define-fun x877 ((x2309 Int)) Int (ite x2088 (x6011 x2309) (x3528 x2309)))
(define-fun x3504 ((x2309 Int)) Int (ite x2088 (x8344 x2309) (x8556 x2309)))
(define-fun x5621 ((x2309 Int)) Int (x2968 x2309))
(define-fun x7522 ((x2309 Int)) Int (x3775 x2309))
(define-fun x3852 ((x2309 Int)) Int (x1469 x2309))
(define-fun x7114 ((x2309 Int)) Int (x4198 x2309))
(define-fun x3365 ((x2309 Int)) Int (x3540 x2309))
(define-fun x3953 ((x2309 Int)) Int (x5308 x2309))
(define-fun x2966 ((x2309 Int)) Int (x4380 x2309))
(define-fun x5536 ((x2309 Int)) Int (x175 x2309))
(define-fun x4360 ((x2309 Int)) Int (x1923 x2309))
(define-fun x4304 ((x2309 Int)) Int (x8234 x2309))
(define-fun x7379 ((x2309 Int)) Int (x6376 x2309))
(define-fun x4854 ((x2309 Int)) Int (x3683 x2309))
(define-fun x7304 ((x2309 Int)) Int (x2809 x2309))
(define-fun x4525 ((x2309 Int)) Int (x237 x2309))
(define-fun x8013 ((x2309 Int)) Int (x7471 x2309))
(define-fun x2066 ((x2309 Int)) Int (x840 x2309))
(define-fun x341 ((x2309 Int)) Int (x6676 x2309))
(define-fun x5350 ((x2309 Int)) Int (x8495 x2309))
(define-fun x4495 ((x2309 Int)) Int (x4704 x2309))
(define-fun x7311 ((x2309 Int)) Int (x6011 x2309))
(define-fun x5720 ((x2309 Int)) Int (x8560 x2309))
(define-fun x232 ((x2309 Int)) Int (x4770 x2309))
(define-fun x1257 ((x2309 Int)) Int (x120 x2309))
(define-fun x2324 ((x2309 Int)) Int (x8344 x2309))
(define-fun x7076 ((x2309 Int)) Int (ite (= x2309 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x4196 x2309)))
(define-fun x1032 ((x2309 Int)) Int (ite (and (> 4 x2309) (>= x2309 0)) (x7076 (+ x2309 128)) (x3684 x2309)))
(define-fun x606 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4196 x2309)))
(define-fun x5098 ((x2309 Int)) Int (ite (= 132 x2309) 32 (x606 x2309)))
(define-fun x974 ((x2309 Int)) Int (ite (= 164 x2309) 12 (x5098 x2309)))
(define-fun x7908 ((x2309 Int)) Int (ite (= 196 x2309) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x974 x2309)))
(define-fun x4475 ((x2309 Int)) Int (ite (and (< x2309 100) (>= x2309 0)) (x7908 (+ x2309 128)) (x3684 x2309)))
(define-fun x2275 ((x2309 Int)) Int (ite x3634 (x1032 x2309) (x4475 x2309)))
(define-fun x3909 ((x2309 Int)) Int (ite x8212 (x2275 x2309) (x3684 x2309)))
(define-fun x2633 ((x2309 Int)) Int (ite (and (> x4757 x2309) (<= 0 x2309)) (x3909 x2309) (x6059 x2309)))
(define-fun x1672 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> x4757 x2309)) (x2633 x2309) (x2729 x2309)))
(define-fun x6485 ((x2309 Int)) Int (ite (= 4 x2309) 34 (x6059 x2309)))
(define-fun x4452 ((x2309 Int)) Int (ite (and (< x2309 36) (<= 0 x2309)) (x6485 x2309) (x2729 x2309)))
(define-fun x5219 ((x2309 Int)) Int (ite (= 4 x2309) 34 (x6059 x2309)))
(define-fun x8427 ((x2309 Int)) Int (ite (and (< x2309 36) (>= x2309 0)) (x5219 x2309) (x2729 x2309)))
(define-fun x6297 ((x2309 Int)) Int (ite (= x8301 x2309) x2785 (x7782 x2309)))
(define-fun x1704 ((x2309 Int)) Int (ite (= x4737 x2309) x2645 (x6297 x2309)))
(define-fun x6036 ((x2309 Int)) Int (ite (and (>= x2309 128) (< x2309 (+ x2891 128))) (x6469 (+ x2309 36)) (x2893 x2309)))
(define-fun x6443 ((x2309 Int)) Int (ite (= x2309 x2002) 0 (x6036 x2309)))
(define-fun x8039 ((x2309 Int)) Int (ite (= x530 x2309) x7702 (x6443 x2309)))
(define-fun x4794 ((x2309 Int)) Int (ite (= x6663 x2309) 0 (x2809 x2309)))
(define-fun x6639 ((x2309 Int)) Int (ite (= 128 x2309) x2891 (x8039 x2309)))
(define-fun x8149 ((x2309 Int)) Int (ite (and (< x2309 (+ 160 x2891)) (<= 160 x2309)) (x6469 (+ 4 x2309)) (x6639 x2309)))
(define-fun x5301 ((x2309 Int)) Int (ite (= x8179 x2309) 0 (x8149 x2309)))
(define-fun x3808 ((x2309 Int)) Int (ite (= x2309 x4907) x5398 (x5301 x2309)))
(define-fun x3995 ((x2309 Int)) Int (ite (and (< x2309 (+ x3250 x5398)) (<= x3250 x2309)) (x6469 (- (+ x2309 x2884) x3250)) (x3808 x2309)))
(define-fun x2266 ((x2309 Int)) Int (ite (= x5307 x2309) 0 (x3995 x2309)))
(define-fun x2449 ((x2309 Int)) Int (ite (= x2309 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x1174 x2309)))
(define-fun x2657 ((x2309 Int)) Int (ite (= x2309 132) x2342 (x2449 x2309)))
(define-fun x6691 ((x2309 Int)) Int (ite (= x2309 164) 128 (x2657 x2309)))
(define-fun x3225 ((x2309 Int)) Int (ite (= x2309 260) x6155 (x6691 x2309)))
(define-fun x809 ((x2309 Int)) Int (ite (= 292 x2309) x7348 (x3225 x2309)))
(define-fun x4275 ((x2309 Int)) Int (ite (= 292 x2309) x2011 (x3225 x2309)))
(define-fun x4226 ((x2309 Int)) Int (ite x8516 (ite x7581 (x3225 x2309) (x809 x2309)) (x4275 x2309)))
(define-fun x7484 ((x2309 Int)) Int (ite (= x2309 196) x8285 (x4226 x2309)))
(define-fun x6091 ((x2309 Int)) Int (ite (= 228 x2309) x2197 (x7484 x2309)))
(define-fun x2935 ((x2309 Int)) Int (ite (= x1021 x2309) x3562 (x6091 x2309)))
(define-fun x5334 ((x2309 Int)) Int (ite (= x2309 x2959) x3057 (x2935 x2309)))
(define-fun x8293 ((x2309 Int)) Int (ite (= x2959 x2309) x7040 (x2935 x2309)))
(define-fun x5703 ((x2309 Int)) Int (ite x6108 (ite x6042 (x2935 x2309) (x8293 x2309)) (x5334 x2309)))
(define-fun x2415 ((x2309 Int)) Int (ite (and (> x3713 x2309) (>= x2309 164)) (x5703 (+ 128 x2309)) (x5075 x2309)))
(define-fun x5732 ((x2309 Int)) Int (ite (= x2309 x2562) x7053 (x4079 x2309)))
(define-fun x4701 ((x2309 Int)) Int (ite (and (> (+ x4654 x7053) x2309) (>= x2309 x4654)) (x2415 (- (+ x2309 x5183) x4654)) (x921 x2309)))
(define-fun x2671 ((x2309 Int)) Int (ite (= x2309 x5456) 0 (x4701 x2309)))
(define-fun x6419 ((x2309 Int)) Int (ite (= x2309 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5338 x2309)))
(define-fun x446 ((x2309 Int)) Int (ite (= x2309 132) 32 (x6419 x2309)))
(define-fun x4736 ((x2309 Int)) Int (ite (= x2309 164) 38 (x446 x2309)))
(define-fun x2685 ((x2309 Int)) Int (ite (= 196 x2309) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x4736 x2309)))
(define-fun x5031 ((x2309 Int)) Int (ite (= 228 x2309) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x2685 x2309)))
(define-fun x6681 ((x2309 Int)) Int (ite (and (> 132 x2309) (>= x2309 0)) (x5031 (+ 128 x2309)) (x2726 x2309)))
(define-fun x1211 ((x2309 Int)) Int (ite (= 4 x2309) 17 (x6059 x2309)))
(define-fun x1349 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 36)) (x1211 x2309) (x2729 x2309)))
(define-fun x8323 ((x2309 Int)) Int (ite (= x2309 4) 17 (x6059 x2309)))
(define-fun x1275 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 36)) (x8323 x2309) (x2729 x2309)))
(define-fun x78 ((x2309 Int)) Int (ite (= x2309 4) 17 (x6059 x2309)))
(define-fun x2038 ((x2309 Int)) Int (ite (and (< x2309 36) (<= 0 x2309)) (x78 x2309) (x2729 x2309)))
(define-fun x8481 ((x2309 Int)) Int (x175 x2309))
(define-fun x5894 ((x2309 Int)) Int (x8481 x2309))
(define-fun x7077 ((x2309 Int)) Int (x8344 x2309))
(define-fun x5568 ((x2309 Int)) Int (x7077 x2309))
(define-fun x8133 ((x2309 Int)) Int (x5308 x2309))
(define-fun x1993 ((x2309 Int)) Int (x8133 x2309))
(define-fun x8036 ((x2309 Int)) Int (x4198 x2309))
(define-fun x5616 ((x2309 Int)) Int (x8036 x2309))
(define-fun x83 ((x2309 Int)) Int (x7471 x2309))
(define-fun x2701 ((x2309 Int)) Int (x83 x2309))
(define-fun x5476 ((x2309 Int)) Int (x4704 x2309))
(define-fun x8362 ((x2309 Int)) Int (x5476 x2309))
(define-fun x5168 ((x2309 Int)) Int (x237 x2309))
(define-fun x3638 ((x2309 Int)) Int (x5168 x2309))
(define-fun x2718 ((x2309 Int)) Int (x6376 x2309))
(define-fun x3467 ((x2309 Int)) Int (x2718 x2309))
(define-fun x7655 ((x2309 Int)) Int (x840 x2309))
(define-fun x5796 ((x2309 Int)) Int (x7655 x2309))
(define-fun x5826 ((x2309 Int)) Int (x2809 x2309))
(define-fun x6456 ((x2309 Int)) Int (x5826 x2309))
(define-fun x3680 ((x2309 Int)) Int (x6676 x2309))
(define-fun x2681 ((x2309 Int)) Int (x3680 x2309))
(define-fun x7527 ((x2309 Int)) Int (x3775 x2309))
(define-fun x4008 ((x2309 Int)) Int (x7527 x2309))
(define-fun x2026 ((x2309 Int)) Int (x8495 x2309))
(define-fun x1164 ((x2309 Int)) Int (x2026 x2309))
(define-fun x4459 ((x2309 Int)) Int (x120 x2309))
(define-fun x4407 ((x2309 Int)) Int (x4459 x2309))
(define-fun x1927 ((x2309 Int)) Int (x4770 x2309))
(define-fun x4638 ((x2309 Int)) Int (x1927 x2309))
(define-fun x7195 ((x2309 Int)) Int (x6011 x2309))
(define-fun x6657 ((x2309 Int)) Int (x7195 x2309))
(define-fun x4411 ((x2309 Int)) Int (x8560 x2309))
(define-fun x5913 ((x2309 Int)) Int (x4411 x2309))
(define-fun x1951 ((x2309 Int)) Int (x1469 x2309))
(define-fun x5836 ((x2309 Int)) Int (x1951 x2309))
(define-fun x2019 ((x2309 Int)) Int (x8234 x2309))
(define-fun x6841 ((x2309 Int)) Int (x2019 x2309))
(define-fun x7867 ((x2309 Int)) Int (x4380 x2309))
(define-fun x2843 ((x2309 Int)) Int (x7867 x2309))
(define-fun x4090 ((x2309 Int)) Int (x2968 x2309))
(define-fun x8363 ((x2309 Int)) Int (x4090 x2309))
(define-fun x1669 ((x2309 Int)) Int (x3540 x2309))
(define-fun x4997 ((x2309 Int)) Int (x1669 x2309))
(define-fun x7587 ((x2309 Int)) Int (x3683 x2309))
(define-fun x4001 ((x2309 Int)) Int (x7587 x2309))
(define-fun x8500 ((x2309 Int)) Int (x1923 x2309))
(define-fun x3822 ((x2309 Int)) Int (x8500 x2309))
(define-fun x5300 ((x2309 Int)) Int (ite x4440 (x6376 x2309) (x1215 x2309)))
(define-fun x5073 ((x2309 Int)) Int (ite x4440 (x1923 x2309) (x2504 x2309)))
(define-fun x1575 ((x2309 Int)) Int (ite x4440 (x3540 x2309) (x4887 x2309)))
(define-fun x5367 ((x2309 Int)) Int (x5168 x2309))
(define-fun x240 ((x2309 Int)) Int (ite x4440 (x8344 x2309) (x7743 x2309)))
(define-fun x790 ((x2309 Int)) Int (x7867 x2309))
(define-fun x5966 ((x2309 Int)) Int (ite x4440 (x120 x2309) (x7088 x2309)))
(define-fun x6783 ((x2309 Int)) Int (ite x4440 (x4704 x2309) (x1005 x2309)))
(define-fun x4153 ((x2309 Int)) Int (ite x4440 (x8560 x2309) (x6055 x2309)))
(define-fun x3000 ((x2309 Int)) Int (ite x4440 (x2809 x2309) (x1909 x2309)))
(define-fun x501 ((x2309 Int)) Int (x83 x2309))
(define-fun x1841 ((x2309 Int)) Int (ite x4440 (x6011 x2309) (x5523 x2309)))
(define-fun x4111 ((x2309 Int)) Int (x7655 x2309))
(define-fun x8218 ((x2309 Int)) Int (ite x4440 (x8495 x2309) (x5988 x2309)))
(define-fun x53 ((x2309 Int)) Int (x3680 x2309))
(define-fun x7700 ((x2309 Int)) Int (ite x4440 (x4198 x2309) (x6866 x2309)))
(define-fun x3364 ((x2309 Int)) Int (ite x4440 (x4770 x2309) (x5863 x2309)))
(define-fun x2204 ((x2309 Int)) Int (ite x4440 (x3775 x2309) (x3336 x2309)))
(define-fun x7692 ((x2309 Int)) Int (x1951 x2309))
(define-fun x427 ((x2309 Int)) Int (x2019 x2309))
(define-fun x866 ((x2309 Int)) Int (ite x4440 (x175 x2309) (x5243 x2309)))
(define-fun x8321 ((x2309 Int)) Int (ite x4440 (x3683 x2309) (x8534 x2309)))
(define-fun x2720 ((x2309 Int)) Int (x4090 x2309))
(define-fun x8419 ((x2309 Int)) Int (x8133 x2309))
(define-fun x2607 ((x2309 Int)) Int (ite (= x440 x2309) x1883 (x4038 x2309)))
(define-fun x4762 ((x2309 Int)) Int (ite (and (> (+ x7302 x1883) x2309) (>= x2309 x7302)) (x3800 (- (+ 164 x2309) x7302)) (x2607 x2309)))
(define-fun x2951 ((x2309 Int)) Int (ite (= x2309 x1410) 0 (x4762 x2309)))
(define-fun x4735 ((x2309 Int)) Int (ite (= x5242 x2309) x7222 (x2951 x2309)))
(define-fun x1445 ((x2309 Int)) Int (ite (and (< x2309 (+ x5526 x7222)) (>= x2309 x5526)) (x3800 (- (+ x1685 x2309) x5526)) (x4735 x2309)))
(define-fun x5506 ((x2309 Int)) Int (ite (= x1451 x2309) 0 (x1445 x2309)))
(define-fun x6647 ((x2309 Int)) Int (ite (= x1434 x2309) x2957 (x5506 x2309)))
(define-fun x2243 ((x2309 Int)) Int (ite (= x2309 x7198) 128 (x6647 x2309)))
(define-fun x5554 ((x2309 Int)) Int (ite (= x2309 x5699) x252 (x2243 x2309)))
(define-fun x188 ((x2309 Int)) Int (ite (= x2309 x99) x437 (x5554 x2309)))
(define-fun x3858 ((x2309 Int)) Int (ite (= x7199 x2309) x5886 (x188 x2309)))
(define-fun x5922 ((x2309 Int)) Int (ite (= x2848 x2309) x8046 (x3858 x2309)))
(define-fun x4450 ((x2309 Int)) Int (ite (= x5781 x2309) x5079 (x5922 x2309)))
(define-fun x8339 ((x2309 Int)) Int (ite x4284 (x5922 x2309) (ite x2930 (x3858 x2309) (ite x3732 (x188 x2309) (ite x3962 (x5554 x2309) (x4450 x2309))))))
(define-fun x4514 ((x2309 Int)) Int (ite (= x2309 x20) 0 (x8339 x2309)))
(define-fun x271 ((x2309 Int)) Int (ite (= x5675 x2309) x158 (x4514 x2309)))
(define-fun x4376 ((x2309 Int)) Int (ite (= x8182 x2309) x735 (x271 x2309)))
(define-fun x8118 ((x2309 Int)) Int (ite (= x2309 x4350) x496 (x4376 x2309)))
(define-fun x6893 ((x2309 Int)) Int (ite (= x6125 x2309) x7182 (x8118 x2309)))
(define-fun x69 ((x2309 Int)) Int (ite (= x2309 x5853) x5032 (x6893 x2309)))
(define-fun x2552 ((x2309 Int)) Int (ite (= x2309 x4441) x6675 (x69 x2309)))
(define-fun x5512 ((x2309 Int)) Int (ite (= x2309 x1217) x3485 (x2552 x2309)))
(define-fun x5586 ((x2309 Int)) Int (ite x5957 (x2552 x2309) (ite x8229 (x69 x2309) (ite x6270 (x6893 x2309) (ite x64 (x8118 x2309) (x5512 x2309))))))
(define-fun x6650 ((x2309 Int)) Int (ite (= x2309 x2931) 0 (x5586 x2309)))
(define-fun x640 ((x2309 Int)) Int (ite (= x2309 x8109) x6890 (x6650 x2309)))
(define-fun x1786 ((x2309 Int)) Int (ite (= x8100 x2309) x4435 (x640 x2309)))
(define-fun x939 ((x2309 Int)) Int (ite (= x2309 x6319) 150 (x1786 x2309)))
(define-fun x3275 ((x2309 Int)) Int (ite (and (< x2309 (+ x2466 150)) (<= x2466 x2309)) (x3800 (- (+ x6173 x2309) x2466)) (x939 x2309)))
(define-fun x1347 ((x2309 Int)) Int (ite (and (< x2309 0) (<= 0 x2309)) (x3831 x2309) (x3275 x2309)))
(define-fun x6322 ((x2309 Int)) Int (ite x1397 (x1347 x2309) (x3275 x2309)))
(define-fun x6534 ((x2309 Int)) Int (ite (= x2309 x6319) x2623 (x6322 x2309)))
(define-fun x3624 ((x2309 Int)) Int (ite (and (>= x2309 x2841) (> (+ x2623 x2841) x2309)) (x3831 (- x2309 x2841)) (x6534 x2309)))
(define-fun x7254 ((x2309 Int)) Int (ite (= x8170 x2309) x5172 (x3624 x2309)))
(define-fun x5337 ((x2309 Int)) Int (ite (= x2309 x8167) x3386 (x7254 x2309)))
(define-fun x4746 ((x2309 Int)) Int (ite (= x1229 x2309) x1540 (x5337 x2309)))
(define-fun x3907 ((x2309 Int)) Int (ite (= x5421 x2309) x4828 (x4746 x2309)))
(define-fun x7880 ((x2309 Int)) Int (ite x3169 (x4746 x2309) (ite x4063 (x5337 x2309) (ite x8430 (x7254 x2309) (ite x3842 (x3624 x2309) (x3907 x2309))))))
(define-fun x3754 ((x2309 Int)) Int (ite (= x7447 x2309) 0 (x7880 x2309)))
(define-fun x2306 ((x2309 Int)) Int (ite (= x2309 x8548) x1002 (x3754 x2309)))
(define-fun x4162 ((x2309 Int)) Int (ite (= x8170 x2309) x2957 (x2306 x2309)))
(define-fun x3294 ((x2309 Int)) Int (ite (= x5978 x2309) 160 (x4162 x2309)))
(define-fun x8402 ((x2309 Int)) Int (ite (= x905 x2309) x2212 (x3294 x2309)))
(define-fun x4986 ((x2309 Int)) Int (ite (= x4428 x2309) x393 (x8402 x2309)))
(define-fun x8510 ((x2309 Int)) Int (ite (= x2309 x4509) x4395 (x4986 x2309)))
(define-fun x4680 ((x2309 Int)) Int (ite (= x4888 x2309) x481 (x8510 x2309)))
(define-fun x3685 ((x2309 Int)) Int (ite (= x2309 x6447) x5187 (x4680 x2309)))
(define-fun x7981 ((x2309 Int)) Int (ite x4976 (x4680 x2309) (ite x5934 (x8510 x2309) (ite x6999 (x4986 x2309) (ite x616 (x8402 x2309) (x3685 x2309))))))
(define-fun x5619 ((x2309 Int)) Int (ite (= x7823 x2309) 0 (x7981 x2309)))
(define-fun x3239 ((x2309 Int)) Int (ite (= x2437 x2309) x158 (x5619 x2309)))
(define-fun x1261 ((x2309 Int)) Int (ite (= x2309 x7425) x2283 (x3239 x2309)))
(define-fun x2974 ((x2309 Int)) Int (ite (= x3580 x2309) x1537 (x1261 x2309)))
(define-fun x4605 ((x2309 Int)) Int (ite (= x2309 x5646) x4975 (x2974 x2309)))
(define-fun x6654 ((x2309 Int)) Int (ite (= x8299 x2309) x6711 (x4605 x2309)))
(define-fun x5729 ((x2309 Int)) Int (ite (= x2309 x2892) x4790 (x6654 x2309)))
(define-fun x3599 ((x2309 Int)) Int (ite (= x2309 x2630) x4021 (x5729 x2309)))
(define-fun x1845 ((x2309 Int)) Int (ite x6696 (x5729 x2309) (ite x6934 (x6654 x2309) (ite x5823 (x4605 x2309) (ite x7802 (x2974 x2309) (x3599 x2309))))))
(define-fun x5994 ((x2309 Int)) Int (ite (= x930 x2309) 0 (x1845 x2309)))
(define-fun x810 ((x2309 Int)) Int (ite (= x2943 x2309) x1678 (x5994 x2309)))
(define-fun x7125 ((x2309 Int)) Int (x4770 x2309))
(define-fun x4690 ((x2309 Int)) Int (x8234 x2309))
(define-fun x4937 ((x2309 Int)) Int (x3540 x2309))
(define-fun x489 ((x2309 Int)) Int (x4704 x2309))
(define-fun x210 ((x2309 Int)) Int (x6011 x2309))
(define-fun x4213 ((x2309 Int)) Int (x5308 x2309))
(define-fun x2717 ((x2309 Int)) Int (x1923 x2309))
(define-fun x3887 ((x2309 Int)) Int (x237 x2309))
(define-fun x4030 ((x2309 Int)) Int (x8344 x2309))
(define-fun x6454 ((x2309 Int)) Int (x7471 x2309))
(define-fun x5962 ((x2309 Int)) Int (x4198 x2309))
(define-fun x35 ((x2309 Int)) Int (x2809 x2309))
(define-fun x6686 ((x2309 Int)) Int (x3683 x2309))
(define-fun x6636 ((x2309 Int)) Int (x4380 x2309))
(define-fun x3603 ((x2309 Int)) Int (x175 x2309))
(define-fun x4412 ((x2309 Int)) Int (x6376 x2309))
(define-fun x3955 ((x2309 Int)) Int (x840 x2309))
(define-fun x3012 ((x2309 Int)) Int (x120 x2309))
(define-fun x280 ((x2309 Int)) Int (x8560 x2309))
(define-fun x2827 ((x2309 Int)) Int (x6676 x2309))
(define-fun x6859 ((x2309 Int)) Int (x3775 x2309))
(define-fun x7909 ((x2309 Int)) Int (x8495 x2309))
(define-fun x685 ((x2309 Int)) Int (ite x5497 (x2474 x2309) (x4086 x2309)))
(define-fun x4476 ((x2309 Int)) Int (x8344 x2309))
(define-fun x4366 ((x2309 Int)) Int (x1923 x2309))
(define-fun x1411 ((x2309 Int)) Int (x120 x2309))
(define-fun x4715 ((x2309 Int)) Int (x2007 x2309))
(define-fun x5376 ((x2309 Int)) Int (x3775 x2309))
(define-fun x3300 ((x2309 Int)) Int (x6376 x2309))
(define-fun x5408 ((x2309 Int)) Int (x5308 x2309))
(define-fun x5507 ((x2309 Int)) Int (x237 x2309))
(define-fun x5531 ((x2309 Int)) Int (x4380 x2309))
(define-fun x3860 ((x2309 Int)) Int (x8234 x2309))
(define-fun x3325 ((x2309 Int)) Int (x8560 x2309))
(define-fun x4232 ((x2309 Int)) Int (x8495 x2309))
(define-fun x6325 ((x2309 Int)) Int (x6011 x2309))
(define-fun x4902 ((x2309 Int)) Int (x3683 x2309))
(define-fun x235 ((x2309 Int)) Int (x7471 x2309))
(define-fun x1281 ((x2309 Int)) Int (x4770 x2309))
(define-fun x5785 ((x2309 Int)) Int (x2809 x2309))
(define-fun x1647 ((x2309 Int)) Int (x3540 x2309))
(define-fun x7295 ((x2309 Int)) Int (x6676 x2309))
(define-fun x2327 ((x2309 Int)) Int (x175 x2309))
(define-fun x5000 ((x2309 Int)) Int (x4198 x2309))
(define-fun x2261 ((x2309 Int)) Int (x4704 x2309))
(define-fun x6597 ((x2309 Int)) Int (x840 x2309))
(define-fun x463 ((x2309 Int)) Int (ite (= x2309 4) 33 (x3014 x2309)))
(define-fun x2872 ((x2309 Int)) Int (ite (and (< x2309 36) (>= x2309 0)) (x463 x2309) (x3269 x2309)))
(define-fun x4944 ((x2309 Int)) Int (ite (= x2309 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4222 x2309)))
(define-fun x3082 ((x2309 Int)) Int (ite (= 192 x2309) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4944 x2309)))
(define-fun x3141 ((x2309 Int)) Int (ite (= 128 x2309) 64 (x5901 x2309)))
(define-fun x1392 ((x2309 Int)) Int (ite (= x2309 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x6701 x2309)))
(define-fun x4017 ((x2309 Int)) Int (ite (= 258 x2309) x2816 (x1392 x2309)))
(define-fun x264 ((x2309 Int)) Int (ite (= x2309 224) 34 (x6393 x2309)))
(define-fun x2489 ((x2309 Int)) Int (ite (= x2309 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x8053 x2309)))
(define-fun x8477 ((x2309 Int)) Int (ite (= x2309 294) x3255 (x2489 x2309)))
(define-fun x8418 ((x2309 Int)) Int (ite (= 326 x2309) x3611 (x8477 x2309)))
(define-fun x5759 ((x2309 Int)) Int (ite (= x2309 358) 160 (x8418 x2309)))
(define-fun x3649 ((x2309 Int)) Int (ite (= x2309 454) x7982 (x5759 x2309)))
(define-fun x270 ((x2309 Int)) Int (ite (and (> (+ x7982 486) x2309) (<= 486 x2309)) (x3082 (- x2309 326)) (x3649 x2309)))
(define-fun x7523 ((x2309 Int)) Int (ite (= 390 x2309) 0 (x270 x2309)))
(define-fun x1621 ((x2309 Int)) Int (ite (= x2309 422) x3070 (x7523 x2309)))
(define-fun x3672 ((x2309 Int)) Int (ite (= x2309 x3286) x5815 (x1621 x2309)))
(define-fun x4217 ((x2309 Int)) Int (ite (and (<= x2745 x2309) (> (+ x5815 x2745) x2309)) (x4017 (- (+ x2309 256) x2745)) (x3672 x2309)))
(define-fun x2360 ((x2309 Int)) Int (ite (and (>= x2309 292) (> x4960 x2309)) (x4217 (+ x2309 290)) (x2725 x2309)))
(define-fun x2380 ((x2309 Int)) Int (ite (= x2309 128) 0 (x1976 x2309)))
(define-fun x8296 ((x2309 Int)) Int (ite (= 160 x2309) 0 (x2380 x2309)))
(define-fun x5145 ((x2309 Int)) Int (ite (= 290 x2309) x6145 (x4217 x2309)))
(define-fun x2134 ((x2309 Int)) Int (ite (= 322 x2309) x1623 (x5145 x2309)))
(define-fun x1777 ((x2309 Int)) Int (ite (= 0 x2309) x8398 (x455 x2309)))
(define-fun x5295 ((x2309 Int)) Int (ite (= 32 x2309) x1776 (x1777 x2309)))
(define-fun x7584 ((x2309 Int)) Int (ite (= x2309 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x3014 x2309)))
(define-fun x7872 ((x2309 Int)) Int (ite (and (< x2309 4) (<= 0 x2309)) (x7584 (+ 128 x2309)) (x3269 x2309)))
(define-fun x2041 ((x2309 Int)) Int (ite (= 128 x2309) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x3014 x2309)))
(define-fun x697 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 4)) (x2041 (+ x2309 128)) (x3269 x2309)))
(define-fun x821 ((x2309 Int)) Int (ite (= 548 x2309) x3228 (x8072 x2309)))
(define-fun x4073 ((x2309 Int)) Int (ite (= 580 x2309) x7175 (x821 x2309)))
(define-fun x1828 ((x2309 Int)) Int (ite (= 548 x2309) x2868 (x8072 x2309)))
(define-fun x4565 ((x2309 Int)) Int (ite x4515 (x4141 x2309) (ite x8248 (ite x7149 (x821 x2309) (x4073 x2309)) (x1828 x2309))))
(define-fun x6637 ((x2309 Int)) Int (ite (= 516 x2309) x4568 (x7843 x2309)))
(define-fun x8161 ((x2309 Int)) Int (ite (= x2309 x7366) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3014 x2309)))
(define-fun x4930 ((x2309 Int)) Int (ite (= x2309 x3124) 32 (x8161 x2309)))
(define-fun x3855 ((x2309 Int)) Int (ite (= x4739 x2309) 48 (x4930 x2309)))
(define-fun x4968 ((x2309 Int)) Int (ite (= x2309 x2117) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x3855 x2309)))
(define-fun x1078 ((x2309 Int)) Int (ite (= x2309 x3552) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x4968 x2309)))
(define-fun x1889 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 132)) (x1078 (+ x2309 x7366)) (x3269 x2309)))
(define-fun x3780 ((x2309 Int)) Int (ite (= x2309 354) 64 (x6790 x2309)))
(define-fun x1486 ((x2309 Int)) Int (ite (= x2309 x7366) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3014 x2309)))
(define-fun x4773 ((x2309 Int)) Int (ite (= x3391 x2309) 32 (x1486 x2309)))
(define-fun x6107 ((x2309 Int)) Int (ite (= x835 x2309) 32 (x4773 x2309)))
(define-fun x831 ((x2309 Int)) Int (ite (= x7889 x2309) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x6107 x2309)))
(define-fun x6599 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 100)) (x831 (+ x7366 x2309)) (x3269 x2309)))
(define-fun x2246 ((x2309 Int)) Int (ite x7488 (x4217 x2309) (x2134 x2309)))
(define-fun x1920 ((x2309 Int)) Int (ite (= x2309 x7366) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x2246 x2309)))
(define-fun x472 ((x2309 Int)) Int (ite (= x2309 x5374) x3255 (x1920 x2309)))
(define-fun x6528 ((x2309 Int)) Int (ite (= x2309 x4831) 192 (x472 x2309)))
(define-fun x5479 ((x2309 Int)) Int (ite (= x2309 x7029) x1181 (x6528 x2309)))
(define-fun x3296 ((x2309 Int)) Int (ite (and (> (+ x1181 x7491) x2309) (>= x2309 x7491)) (x4565 (- (+ x2309 548) x7491)) (x5479 x2309)))
(define-fun x1412 ((x2309 Int)) Int (ite (= x2309 x8292) x3633 (x3296 x2309)))
(define-fun x723 ((x2309 Int)) Int (ite (= x2309 x1616) x2206 (x1412 x2309)))
(define-fun x1053 ((x2309 Int)) Int (ite (= 386 x2309) x717 (x7966 x2309)))
(define-fun x2722 ((x2309 Int)) Int (ite (= 418 x2309) x4271 (x1053 x2309)))
(define-fun x5640 ((x2309 Int)) Int (ite (and (> (+ x2206 x3190) x2309) (<= x3190 x2309)) (x2722 (- (+ x2309 386) x3190)) (x723 x2309)))
(define-fun x4598 ((x2309 Int)) Int (ite (= x5545 x2309) x3611 (x5640 x2309)))
(define-fun x2976 ((x2309 Int)) Int (ite (= x1738 x2309) 0 (x4598 x2309)))
(define-fun x6268 ((x2309 Int)) Int (ite (= x1182 x2309) x3465 (x2976 x2309)))
(define-fun x6677 ((x2309 Int)) Int (ite (= 450 x2309) 34 (x3901 x2309)))
(define-fun x6656 ((x2309 Int)) Int (ite (= x2309 x3181) x6957 (x6268 x2309)))
(define-fun x658 ((x2309 Int)) Int (ite (= 482 x2309) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x5777 x2309)))
(define-fun x3899 ((x2309 Int)) Int (ite (= x2309 484) x2816 (x658 x2309)))
(define-fun x1040 ((x2309 Int)) Int (ite (and (>= x2309 x4074) (< x2309 (+ x6957 x4074))) (x3899 (- (+ x2309 482) x4074)) (x6656 x2309)))
(define-fun x8156 ((x2309 Int)) Int (ite (and (< x2309 x1935) (>= x2309 228)) (x1040 (- (+ (x6862 (+ x7366 228)) x2309) 228)) (x1369 x2309)))
(define-fun x7312 ((x2309 Int)) Int 0)
(define-fun x7837 ((x2309 Int)) Int (x8560 x2309))
(define-fun x8237 ((x2309 Int)) Int (x4380 x2309))
(define-fun x5745 ((x2309 Int)) Int (x4770 x2309))
(define-fun x468 ((x2309 Int)) Int (x5308 x2309))
(define-fun x948 ((x2309 Int)) Int (x6376 x2309))
(define-fun x229 ((x2309 Int)) Int (x3775 x2309))
(define-fun x1418 ((x2309 Int)) Int (x2809 x2309))
(define-fun x1172 ((x2309 Int)) Int (x1923 x2309))
(define-fun x660 ((x2309 Int)) Int (x237 x2309))
(define-fun x276 ((x2309 Int)) Int (x6676 x2309))
(define-fun x7290 ((x2309 Int)) Int (x3540 x2309))
(define-fun x5214 ((x2309 Int)) Int (x8234 x2309))
(define-fun x3992 ((x2309 Int)) Int (x840 x2309))
(define-fun x5601 ((x2309 Int)) Int (x4198 x2309))
(define-fun x2954 ((x2309 Int)) Int (x8344 x2309))
(define-fun x390 ((x2309 Int)) Int (x3683 x2309))
(define-fun x5014 ((x2309 Int)) Int (x6011 x2309))
(define-fun x8442 ((x2309 Int)) Int (x120 x2309))
(define-fun x5983 ((x2309 Int)) Int (x7471 x2309))
(define-fun x8017 ((x2309 Int)) Int (x175 x2309))
(define-fun x8593 ((x2309 Int)) Int (x4704 x2309))
(define-fun x8306 ((x2309 Int)) Int (x8495 x2309))
(define-fun x3803 ((x2309 Int)) Int (x4086 x2309))
(define-fun x4903 ((x2309 Int)) Int (x2007 x2309))
(define-fun x1767 ((x2309 Int)) Int (x4411 x2309))
(define-fun x8379 ((x2309 Int)) Int (x1767 x2309))
(define-fun x2988 ((x2309 Int)) Int (x7867 x2309))
(define-fun x8361 ((x2309 Int)) Int (x2988 x2309))
(define-fun x8359 ((x2309 Int)) Int (x8133 x2309))
(define-fun x5686 ((x2309 Int)) Int (x8359 x2309))
(define-fun x5489 ((x2309 Int)) Int (x1927 x2309))
(define-fun x7234 ((x2309 Int)) Int (x5489 x2309))
(define-fun x2281 ((x2309 Int)) Int (x8500 x2309))
(define-fun x7208 ((x2309 Int)) Int (x2281 x2309))
(define-fun x7030 ((x2309 Int)) Int (x2718 x2309))
(define-fun x7574 ((x2309 Int)) Int (x7030 x2309))
(define-fun x1525 ((x2309 Int)) Int (x7527 x2309))
(define-fun x4166 ((x2309 Int)) Int (x1525 x2309))
(define-fun x8393 ((x2309 Int)) Int (x4459 x2309))
(define-fun x8137 ((x2309 Int)) Int (x8393 x2309))
(define-fun x323 ((x2309 Int)) Int (x5826 x2309))
(define-fun x1204 ((x2309 Int)) Int (x323 x2309))
(define-fun x5287 ((x2309 Int)) Int (x5168 x2309))
(define-fun x1263 ((x2309 Int)) Int (x5287 x2309))
(define-fun x6937 ((x2309 Int)) Int (x7655 x2309))
(define-fun x347 ((x2309 Int)) Int (x6937 x2309))
(define-fun x7229 ((x2309 Int)) Int (x3680 x2309))
(define-fun x2024 ((x2309 Int)) Int (x7229 x2309))
(define-fun x1394 ((x2309 Int)) Int (x8036 x2309))
(define-fun x2598 ((x2309 Int)) Int (x1394 x2309))
(define-fun x2791 ((x2309 Int)) Int (x1669 x2309))
(define-fun x7568 ((x2309 Int)) Int (x2791 x2309))
(define-fun x4043 ((x2309 Int)) Int (x2019 x2309))
(define-fun x637 ((x2309 Int)) Int (x4043 x2309))
(define-fun x1532 ((x2309 Int)) Int (x7077 x2309))
(define-fun x4616 ((x2309 Int)) Int (x1532 x2309))
(define-fun x6544 ((x2309 Int)) Int (x2007 x2309))
(define-fun x3304 ((x2309 Int)) Int (x6544 x2309))
(define-fun x6652 ((x2309 Int)) Int (x7587 x2309))
(define-fun x1810 ((x2309 Int)) Int (x6652 x2309))
(define-fun x7386 ((x2309 Int)) Int (x7195 x2309))
(define-fun x6220 ((x2309 Int)) Int (x7386 x2309))
(define-fun x4338 ((x2309 Int)) Int (x4086 x2309))
(define-fun x3750 ((x2309 Int)) Int (x83 x2309))
(define-fun x3311 ((x2309 Int)) Int (x3750 x2309))
(define-fun x593 ((x2309 Int)) Int (x8481 x2309))
(define-fun x1566 ((x2309 Int)) Int (x593 x2309))
(define-fun x2799 ((x2309 Int)) Int (x5476 x2309))
(define-fun x7280 ((x2309 Int)) Int (x2799 x2309))
(define-fun x2963 ((x2309 Int)) Int (x2026 x2309))
(define-fun x4812 ((x2309 Int)) Int (x2963 x2309))
(define-fun x6127 ((x2309 Int)) Int (x2474 x2309))
(define-fun x1517 ((x2309 Int)) Int (ite x7488 (x455 x2309) (x5295 x2309)))
(define-fun x1176 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 x7239)) (x1517 x2309) (x3014 x2309)))
(define-fun x6590 ((x2309 Int)) Int (ite (and (> x7239 x2309) (>= x2309 0)) (x1176 x2309) (x3269 x2309)))
(define-fun x7740 ((x2309 Int)) Int (ite (and (>= x2309 290) (< x2309 354)) (x1517 (- x2309 290)) (x849 x2309)))
(define-fun x5124 ((x2309 Int)) Int (ite (= 4 x2309) 34 (x3014 x2309)))
(define-fun x4716 ((x2309 Int)) Int (ite (and (<= 0 x2309) (> 36 x2309)) (x5124 x2309) (x3269 x2309)))
(define-fun x2897 ((x2309 Int)) Int (x4704 x2309))
(define-fun x3737 ((x2309 Int)) Int (x175 x2309))
(define-fun x1304 ((x2309 Int)) Int (x1469 x2309))
(define-fun x1749 ((x2309 Int)) Int (x3683 x2309))
(define-fun x4992 ((x2309 Int)) Int (x8495 x2309))
(define-fun x7814 ((x2309 Int)) Int (x4198 x2309))
(define-fun x6773 ((x2309 Int)) Int (x8560 x2309))
(define-fun x3914 ((x2309 Int)) Int (x120 x2309))
(define-fun x3457 ((x2309 Int)) Int (x8344 x2309))
(define-fun x5153 ((x2309 Int)) Int (x7471 x2309))
(define-fun x2093 ((x2309 Int)) Int (x6011 x2309))
(define-fun x5500 ((x2309 Int)) Int (x6376 x2309))
(define-fun x1228 ((x2309 Int)) Int (x6676 x2309))
(define-fun x7864 ((x2309 Int)) Int (x3775 x2309))
(define-fun x4604 ((x2309 Int)) Int (x4770 x2309))
(define-fun x4057 ((x2309 Int)) Int (x4380 x2309))
(define-fun x8215 ((x2309 Int)) Int (x2809 x2309))
(define-fun x2921 ((x2309 Int)) Int (x5308 x2309))
(define-fun x5101 ((x2309 Int)) Int (x840 x2309))
(define-fun x2792 ((x2309 Int)) Int (x1923 x2309))
(define-fun x5179 ((x2309 Int)) Int (x237 x2309))
(define-fun x5375 ((x2309 Int)) Int (x3540 x2309))
(define-fun x8468 ((x2309 Int)) Int (x8234 x2309))
(define-fun x1614 ((x2309 Int)) Int (ite (= 160 x2309) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4692 x2309)))
(define-fun x7426 ((x2309 Int)) Int (ite (= x2309 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1614 x2309)))
(define-fun x2673 ((x2309 Int)) Int (ite (= x2309 128) 64 (x7209 x2309)))
(define-fun x3191 ((x2309 Int)) Int (ite (= x2309 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x8517 x2309)))
(define-fun x1757 ((x2309 Int)) Int (ite (= 258 x2309) x4135 (x3191 x2309)))
(define-fun x7051 ((x2309 Int)) Int (ite (= 224 x2309) 34 (x2649 x2309)))
(define-fun x2965 ((x2309 Int)) Int (ite (= 290 x2309) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x8232 x2309)))
(define-fun x2014 ((x2309 Int)) Int (ite (= x2309 294) x3255 (x2965 x2309)))
(define-fun x6203 ((x2309 Int)) Int (ite (= 326 x2309) x3611 (x2014 x2309)))
(define-fun x2593 ((x2309 Int)) Int (ite (= x2309 358) 160 (x6203 x2309)))
(define-fun x488 ((x2309 Int)) Int (ite (= x2309 454) x1985 (x2593 x2309)))
(define-fun x875 ((x2309 Int)) Int (ite (and (>= x2309 486) (> (+ 486 x1985) x2309)) (x7426 (- x2309 326)) (x488 x2309)))
(define-fun x6537 ((x2309 Int)) Int (ite (= 390 x2309) 0 (x875 x2309)))
(define-fun x3387 ((x2309 Int)) Int (ite (= 422 x2309) x6768 (x6537 x2309)))
(define-fun x1958 ((x2309 Int)) Int (ite (= x4721 x2309) x7572 (x3387 x2309)))
(define-fun x4949 ((x2309 Int)) Int (ite (and (> (+ x7572 x4943) x2309) (<= x4943 x2309)) (x1757 (- (+ 256 x2309) x4943)) (x1958 x2309)))
(define-fun x5709 ((x2309 Int)) Int (ite (and (> x4205 x2309) (<= 292 x2309)) (x4949 (+ 290 x2309)) (x5361 x2309)))
(define-fun x7906 ((x2309 Int)) Int (ite (= x2309 128) 0 (x6274 x2309)))
(define-fun x6659 ((x2309 Int)) Int (ite (= 160 x2309) 0 (x7906 x2309)))
(define-fun x561 ((x2309 Int)) Int (ite (= x2309 290) x425 (x4949 x2309)))
(define-fun x761 ((x2309 Int)) Int (ite (= 322 x2309) x3415 (x561 x2309)))
(define-fun x5439 ((x2309 Int)) Int (x1927 x2309))
(define-fun x126 ((x2309 Int)) Int (x4411 x2309))
(define-fun x5161 ((x2309 Int)) Int (x8133 x2309))
(define-fun x3385 ((x2309 Int)) Int (x7527 x2309))
(define-fun x5522 ((x2309 Int)) Int (x7867 x2309))
(define-fun x5414 ((x2309 Int)) Int (x5826 x2309))
(define-fun x2004 ((x2309 Int)) Int (x8500 x2309))
(define-fun x1639 ((x2309 Int)) Int (x83 x2309))
(define-fun x7436 ((x2309 Int)) Int (x7655 x2309))
(define-fun x1498 ((x2309 Int)) Int (x5168 x2309))
(define-fun x7762 ((x2309 Int)) Int (x3680 x2309))
(define-fun x6967 ((x2309 Int)) Int (ite x1466 (ite x5697 (x4949 x2309) (x761 x2309)) (x555 x2309)))
(define-fun x2442 ((x2309 Int)) Int (x2019 x2309))
(define-fun x2575 ((x2309 Int)) Int (x7077 x2309))
(define-fun x6653 ((x2309 Int)) Int (x1951 x2309))
(define-fun x1450 ((x2309 Int)) Int (x8036 x2309))
(define-fun x2259 ((x2309 Int)) Int (x1669 x2309))
(define-fun x1708 ((x2309 Int)) Int (x7587 x2309))
(define-fun x6491 ((x2309 Int)) Int (x5476 x2309))
(define-fun x4249 ((x2309 Int)) Int (x4459 x2309))
(define-fun x8535 ((x2309 Int)) Int (x2718 x2309))
(define-fun x3198 ((x2309 Int)) Int (x7195 x2309))
(define-fun x3369 ((x2309 Int)) Int (x8481 x2309))
(define-fun x7355 ((x2309 Int)) Int (x4090 x2309))
(define-fun x2304 ((x2309 Int)) Int (x2026 x2309))
(define-fun x8158 ((x2309 Int)) Int (ite (= x3444 x2309) x7937 (x1759 x2309)))
(define-fun x791 ((x2309 Int)) Int (ite (= x3833 x2309) x3531 (x8158 x2309)))
(define-fun x8561 ((x2309 Int)) Int (ite (= x2309 x5888) x4035 (x2430 x2309)))
(define-fun x8210 ((x2309 Int)) Int (ite (= x6996 x2309) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1763 x2309)))
(define-fun x1745 ((x2309 Int)) Int (ite (= x2309 x4948) x4135 (x8210 x2309)))
(define-fun x7093 ((x2309 Int)) Int (ite (= x2309 x6183) x2866 (x4521 x2309)))
(define-fun x7365 ((x2309 Int)) Int (ite (= x2309 x2082) x2396 (x5061 x2309)))
(define-fun x1080 ((x2309 Int)) Int (ite (= x2309 x6180) x7327 (x4262 x2309)))
(define-fun x1191 ((x2309 Int)) Int (ite (= x2309 x1661) x2188 (x1080 x2309)))
(define-fun x3957 ((x2309 Int)) Int (ite (= x6180 x2309) x391 (x4262 x2309)))
(define-fun x7962 ((x2309 Int)) Int (ite x8487 (x5227 x2309) (ite x4925 (ite x7420 (x1080 x2309) (x1191 x2309)) (x3957 x2309))))
(define-fun x5447 ((x2309 Int)) Int (ite (= x2309 x1663) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x6967 x2309)))
(define-fun x4589 ((x2309 Int)) Int (ite (= x7300 x2309) x3255 (x5447 x2309)))
(define-fun x456 ((x2309 Int)) Int (ite (= x2309 x8116) 192 (x4589 x2309)))
(define-fun x6574 ((x2309 Int)) Int (ite (= x2309 x6908) x4618 (x456 x2309)))
(define-fun x4443 ((x2309 Int)) Int (ite (and (<= x4577 x2309) (< x2309 (+ x4577 x4618))) (x7962 (- (+ x6180 x2309) x4577)) (x6574 x2309)))
(define-fun x4905 ((x2309 Int)) Int (ite (= x7949 x2309) x8384 (x4443 x2309)))
(define-fun x7616 ((x2309 Int)) Int (ite (= x4102 x2309) x2130 (x4905 x2309)))
(define-fun x1526 ((x2309 Int)) Int (ite (and (<= x2871 x2309) (> (+ x2130 x2871) x2309)) (x791 (- (+ x1477 x2309) x2871)) (x7616 x2309)))
(define-fun x3888 ((x2309 Int)) Int (ite (= x3093 x2309) x3611 (x1526 x2309)))
(define-fun x4543 ((x2309 Int)) Int (ite (= x1766 x2309) 0 (x3888 x2309)))
(define-fun x5862 ((x2309 Int)) Int (ite (= x1844 x2309) x6360 (x4543 x2309)))
(define-fun x2353 ((x2309 Int)) Int (ite (= x2309 x682) x4806 (x5862 x2309)))
(define-fun x7841 ((x2309 Int)) Int (ite (and (> (+ x4806 x6513) x2309) (>= x2309 x6513)) (x1745 (- (+ x2309 x6820) x6513)) (x2353 x2309)))
(define-fun x6463 ((x2309 Int)) Int (ite (and (<= 228 x2309) (< x2309 x7770)) (x7841 (- (+ x2309 (x6862 (+ 228 x1663))) 228)) (x116 x2309)))
(define-fun x3785 ((x2309 Int)) Int 0)
(define-fun x7016 ((x2309 Int)) Int (x7276 x2309))
(define-fun x7052 ((x2309 Int)) Int (x8234 x2309))
(define-fun x2095 ((x2309 Int)) Int (x175 x2309))
(define-fun x8357 ((x2309 Int)) Int (x4704 x2309))
(define-fun x3959 ((x2309 Int)) Int (x6376 x2309))
(define-fun x909 ((x2309 Int)) Int (x4380 x2309))
(define-fun x6421 ((x2309 Int)) Int (x2809 x2309))
(define-fun x8289 ((x2309 Int)) Int (x3540 x2309))
(define-fun x6262 ((x2309 Int)) Int (x5308 x2309))
(define-fun x4752 ((x2309 Int)) Int (x4198 x2309))
(define-fun x6980 ((x2309 Int)) Int (x3683 x2309))
(define-fun x1896 ((x2309 Int)) Int (x237 x2309))
(define-fun x7773 ((x2309 Int)) Int (x7471 x2309))
(define-fun x7853 ((x2309 Int)) Int (x1923 x2309))
(define-fun x2783 ((x2309 Int)) Int (x120 x2309))
(define-fun x3569 ((x2309 Int)) Int (x6011 x2309))
(define-fun x2155 ((x2309 Int)) Int (x840 x2309))
(define-fun x4353 ((x2309 Int)) Int (x8495 x2309))
(define-fun x7275 ((x2309 Int)) Int (x6676 x2309))
(define-fun x829 ((x2309 Int)) Int (x8560 x2309))
(define-fun x4453 ((x2309 Int)) Int (x1469 x2309))
(define-fun x1478 ((x2309 Int)) Int (x3775 x2309))
(define-fun x173 ((x2309 Int)) Int (x4770 x2309))
(define-fun x6413 ((x2309 Int)) Int (x8344 x2309))
(define-fun x5942 ((x2309 Int)) Int (x7276 x2309))
(define-fun x5247 ((x2309 Int)) Int (x2442 x2309))
(define-fun x6774 ((x2309 Int)) Int (x5522 x2309))
(define-fun x1340 ((x2309 Int)) Int (x1450 x2309))
(define-fun x3204 ((x2309 Int)) Int (x5161 x2309))
(define-fun x638 ((x2309 Int)) Int (x5414 x2309))
(define-fun x1535 ((x2309 Int)) Int (x8535 x2309))
(define-fun x1335 ((x2309 Int)) Int (x2259 x2309))
(define-fun x8364 ((x2309 Int)) Int (x1708 x2309))
(define-fun x1237 ((x2309 Int)) Int (x2004 x2309))
(define-fun x3378 ((x2309 Int)) Int (x1498 x2309))
(define-fun x167 ((x2309 Int)) Int (x7436 x2309))
(define-fun x3205 ((x2309 Int)) Int (x4249 x2309))
(define-fun x6234 ((x2309 Int)) Int (x3369 x2309))
(define-fun x7749 ((x2309 Int)) Int (x3198 x2309))
(define-fun x525 ((x2309 Int)) Int (x7762 x2309))
(define-fun x2138 ((x2309 Int)) Int (x2304 x2309))
(define-fun x970 ((x2309 Int)) Int (x6491 x2309))
(define-fun x194 ((x2309 Int)) Int (x6653 x2309))
(define-fun x8579 ((x2309 Int)) Int (x126 x2309))
(define-fun x2365 ((x2309 Int)) Int (x5439 x2309))
(define-fun x7186 ((x2309 Int)) Int (x2575 x2309))
(define-fun x4697 ((x2309 Int)) Int (x3385 x2309))
(define-fun x8298 ((x2309 Int)) Int (x1639 x2309))
(define-fun x1917 ((x2309 Int)) Int (x1927 x2309))
(define-fun x5504 ((x2309 Int)) Int (x4411 x2309))
(define-fun x211 ((x2309 Int)) Int (x7867 x2309))
(define-fun x1374 ((x2309 Int)) Int (x5826 x2309))
(define-fun x7406 ((x2309 Int)) Int (x83 x2309))
(define-fun x4938 ((x2309 Int)) Int (x8500 x2309))
(define-fun x6884 ((x2309 Int)) Int (x7655 x2309))
(define-fun x1734 ((x2309 Int)) Int (x7527 x2309))
(define-fun x5967 ((x2309 Int)) Int (x5168 x2309))
(define-fun x5165 ((x2309 Int)) Int (x3680 x2309))
(define-fun x2508 ((x2309 Int)) Int (x1951 x2309))
(define-fun x3417 ((x2309 Int)) Int (x7587 x2309))
(define-fun x8043 ((x2309 Int)) Int (x2019 x2309))
(define-fun x4636 ((x2309 Int)) Int (x7077 x2309))
(define-fun x7221 ((x2309 Int)) Int (x8036 x2309))
(define-fun x1428 ((x2309 Int)) Int (x1669 x2309))
(define-fun x6009 ((x2309 Int)) Int (x5476 x2309))
(define-fun x4847 ((x2309 Int)) Int (x4459 x2309))
(define-fun x2005 ((x2309 Int)) Int (x2718 x2309))
(define-fun x165 ((x2309 Int)) Int (x8481 x2309))
(define-fun x2925 ((x2309 Int)) Int (x4090 x2309))
(define-fun x3641 ((x2309 Int)) Int (x8133 x2309))
(define-fun x1523 ((x2309 Int)) Int (x7195 x2309))
(define-fun x7170 ((x2309 Int)) Int (x2026 x2309))
(define-fun x3773 ((x2309 Int)) Int (ite (and (<= 290 x2309) (> 354 x2309)) (x7990 (- x2309 290)) (x1379 x2309)))
(define-fun x5918 ((x2309 Int)) Int (x1951 x2309))
(define-fun x6954 ((x2309 Int)) Int (x83 x2309))
(define-fun x2517 ((x2309 Int)) Int (x4090 x2309))
(define-fun x980 ((x2309 Int)) Int (x7867 x2309))
(define-fun x2721 ((x2309 Int)) Int (x5826 x2309))
(define-fun x7213 ((x2309 Int)) Int (x8133 x2309))
(define-fun x6795 ((x2309 Int)) Int (x5168 x2309))
(define-fun x1386 ((x2309 Int)) Int (x7655 x2309))
(define-fun x4494 ((x2309 Int)) Int (x3680 x2309))
(define-fun x4018 ((x2309 Int)) Int (x2019 x2309))
(define-fun x2247 ((x2309 Int)) Int (ite x814 (x3683 x2309) (x7891 x2309)))
(define-fun x3943 ((x2309 Int)) Int (ite x814 (x175 x2309) (x1668 x2309)))
(define-fun x5834 ((x2309 Int)) Int (ite x814 (x4770 x2309) (x7591 x2309)))
(define-fun x559 ((x2309 Int)) Int (ite x814 (x8495 x2309) (x4988 x2309)))
(define-fun x6179 ((x2309 Int)) Int (ite x814 (x4198 x2309) (x6086 x2309)))
(define-fun x6680 ((x2309 Int)) Int (ite x814 (x3540 x2309) (x8050 x2309)))
(define-fun x7085 ((x2309 Int)) Int (ite x814 (x6376 x2309) (x8262 x2309)))
(define-fun x4167 ((x2309 Int)) Int (ite x814 (x4704 x2309) (x3371 x2309)))
(define-fun x983 ((x2309 Int)) Int (ite x814 (x8560 x2309) (x5040 x2309)))
(define-fun x5560 ((x2309 Int)) Int (ite x814 (x1923 x2309) (x8201 x2309)))
(define-fun x1240 ((x2309 Int)) Int (ite x814 (x3775 x2309) (x1065 x2309)))
(define-fun x1391 ((x2309 Int)) Int (ite x814 (x120 x2309) (x906 x2309)))
(define-fun x1383 ((x2309 Int)) Int (ite x814 (x8344 x2309) (x5457 x2309)))
(define-fun x6161 ((x2309 Int)) Int (ite x814 (x6011 x2309) (x2224 x2309)))
(define-fun x8400 ((x2309 Int)) Int (x4090 x2309))
(define-fun x7744 ((x2309 Int)) Int (x7527 x2309))
(define-fun x6945 ((x2309 Int)) Int (x1927 x2309))
(define-fun x5221 ((x2309 Int)) Int (x7587 x2309))
(define-fun x845 ((x2309 Int)) Int (x8036 x2309))
(define-fun x8257 ((x2309 Int)) Int (x8133 x2309))
(define-fun x5339 ((x2309 Int)) Int (x8500 x2309))
(define-fun x5036 ((x2309 Int)) Int (x7867 x2309))
(define-fun x1015 ((x2309 Int)) Int (x2019 x2309))
(define-fun x8486 ((x2309 Int)) Int (x1669 x2309))
(define-fun x1091 ((x2309 Int)) Int (x2718 x2309))
(define-fun x200 ((x2309 Int)) Int (x5826 x2309))
(define-fun x2647 ((x2309 Int)) Int (x83 x2309))
(define-fun x6662 ((x2309 Int)) Int (x5168 x2309))
(define-fun x1916 ((x2309 Int)) Int (x3680 x2309))
(define-fun x4749 ((x2309 Int)) Int (x7655 x2309))
(define-fun x1696 ((x2309 Int)) Int (x8481 x2309))
(define-fun x5324 ((x2309 Int)) Int (x2026 x2309))
(define-fun x4479 ((x2309 Int)) Int (x5476 x2309))
(define-fun x6057 ((x2309 Int)) Int (x7195 x2309))
(define-fun x4916 ((x2309 Int)) Int (x1951 x2309))
(define-fun x2168 ((x2309 Int)) Int (x4411 x2309))
(define-fun x55 ((x2309 Int)) Int (x4459 x2309))
(define-fun x5258 ((x2309 Int)) Int (x7077 x2309))
(define-fun x1035 ((x2309 Int)) Int (x2019 x2309))
(define-fun x6874 ((x2309 Int)) Int (x7655 x2309))
(define-fun x5230 ((x2309 Int)) Int (x2718 x2309))
(define-fun x2564 ((x2309 Int)) Int (x4411 x2309))
(define-fun x4539 ((x2309 Int)) Int (x4090 x2309))
(define-fun x360 ((x2309 Int)) Int (x83 x2309))
(define-fun x4282 ((x2309 Int)) Int (x8036 x2309))
(define-fun x223 ((x2309 Int)) Int (x7587 x2309))
(define-fun x3490 ((x2309 Int)) Int (x1669 x2309))
(define-fun x6408 ((x2309 Int)) Int (x8481 x2309))
(define-fun x7541 ((x2309 Int)) Int (x5476 x2309))
(define-fun x5991 ((x2309 Int)) Int (x1951 x2309))
(define-fun x1981 ((x2309 Int)) Int (x2026 x2309))
(define-fun x5116 ((x2309 Int)) Int (x7867 x2309))
(define-fun x5965 ((x2309 Int)) Int (x8500 x2309))
(define-fun x609 ((x2309 Int)) Int (x8133 x2309))
(define-fun x8005 ((x2309 Int)) Int (x5168 x2309))
(define-fun x6347 ((x2309 Int)) Int (x7077 x2309))
(define-fun x3316 ((x2309 Int)) Int (x3680 x2309))
(define-fun x7494 ((x2309 Int)) Int (x5826 x2309))
(define-fun x714 ((x2309 Int)) Int (x7527 x2309))
(define-fun x7238 ((x2309 Int)) Int (x7195 x2309))
(define-fun x7718 ((x2309 Int)) Int (x4459 x2309))
(define-fun x6582 ((x2309 Int)) Int (ite x3790 (x1977 x2309) (ite x2443 (x1977 x2309) (ite x1774 (x1977 x2309) (ite x6737 (x1977 x2309) (ite x1221 (x1977 x2309) (ite x2411 (x1977 x2309) (ite x2356 (x1977 x2309) (ite x3826 (x4699 x2309) (x1977 x2309))))))))))
(define-fun x8108 ((x2309 Int)) Int (x2888 x2309))
(define-fun x4382 ((x2309 Int)) Int (ite x3790 (x6461 x2309) (ite x2443 (x6461 x2309) (ite x1774 (x6461 x2309) (ite x6737 (x6461 x2309) (ite x1221 (x6461 x2309) (ite x2411 (x6461 x2309) (ite x2356 (x6461 x2309) (ite x3826 (x1643 x2309) (x6461 x2309))))))))))
(define-fun x4172 ((x2309 Int)) Int (x1302 x2309))
(define-fun x3951 ((x2309 Int)) Int (x1302 x2309))
(define-fun x5229 ((x2309 Int)) Int (ite x8455 (x5467 x2309) (x2763 x2309)))
(define-fun x7454 ((x2309 Int)) Int (ite x1171 (x2763 x2309) (ite x1930 (x5229 x2309) (ite x3213 (x5229 x2309) (x2763 x2309)))))
(define-fun x3350 ((x2309 Int)) Int (ite x3716 (x2763 x2309) (ite x3587 (x2763 x2309) (x7454 x2309))))
(define-fun x654 ((x2309 Int)) Int (ite x520 (ite x793 (x3350 x2309) (x2763 x2309)) (x2763 x2309)))
(define-fun x7651 ((x2309 Int)) Int (ite x6827 (x2763 x2309) (ite x5540 (x2421 x2309) (x2763 x2309))))
(define-fun x8162 ((x2309 Int)) Int (ite x3642 (ite x5822 (x654 x2309) (x7651 x2309)) (x2763 x2309)))
(define-fun x8599 ((x2309 Int)) Int (x2888 x2309))
(define-fun x3972 ((x2309 Int)) Int (ite x5822 (x654 x2309) (x7651 x2309)))
(define-fun x7796 ((x2309 Int)) Int (ite x5822 (x7035 x2309) (x6461 x2309)))
(define-fun x529 ((x2309 Int)) Int (x1302 x2309))
(define-fun x7842 ((x2309 Int)) Int (x2888 x2309))
(define-fun x2403 ((x2309 Int)) Int (ite x5822 (x7448 x2309) (x1977 x2309)))
(define-fun x5985 ((x2309 Int)) Int (x1302 x2309))
(define-fun x7232 ((x2309 Int)) Int (x2888 x2309))
(define-fun x1046 ((x2309 Int)) Int (x2763 x2309))
(define-fun x193 ((x2309 Int)) Int (x2888 x2309))
(define-fun x1534 ((x2309 Int)) Int (x1302 x2309))
(define-fun x6219 ((x2309 Int)) Int (x6461 x2309))
(define-fun x372 ((x2309 Int)) Int (ite x793 (x1977 x2309) (x476 x2309)))
(define-fun x397 ((x2309 Int)) Int (ite x793 (x3350 x2309) (x2763 x2309)))
(define-fun x6549 ((x2309 Int)) Int (x2888 x2309))
(define-fun x1611 ((x2309 Int)) Int (x1302 x2309))
(define-fun x3896 ((x2309 Int)) Int (x6461 x2309))
(define-fun x1359 ((x2309 Int)) Int (x6461 x2309))
(define-fun x1126 ((x2309 Int)) Int (x1977 x2309))
(define-fun x2499 ((x2309 Int)) Int (x1302 x2309))
(define-fun x3254 ((x2309 Int)) Int (x2888 x2309))
(define-fun x2980 ((x2309 Int)) Int (x1977 x2309))
(define-fun x2625 ((x2309 Int)) Int (x2763 x2309))
(define-fun x6728 ((x2309 Int)) Int (x6461 x2309))
(define-fun x3509 ((x2309 Int)) Int (x2888 x2309))
(define-fun x3280 ((x2309 Int)) Int (x1302 x2309))
(define-fun x6128 ((x2309 Int)) Int (ite (= x2309 x8301) x8586 (x8302 x2309)))
(define-fun x7731 ((x2309 Int)) Int (ite (= x2309 x2738) x5693 (x6128 x2309)))
(define-fun x4022 ((x2309 Int)) Int (ite (and (< x2309 (+ 128 x5106)) (>= x2309 128)) (x1025 (+ 36 x2309)) (x4457 x2309)))
(define-fun x7600 ((x2309 Int)) Int (ite (= x2309 x5371) 0 (x4022 x2309)))
(define-fun x1033 ((x2309 Int)) Int (ite (= x2309 x7599) x844 (x7600 x2309)))
(define-fun x5843 ((x2309 Int)) Int (ite (= x2309 x7317) 0 (x48 x2309)))
(define-fun x7881 ((x2309 Int)) Int (ite (= x2309 128) x5106 (x1033 x2309)))
(define-fun x7408 ((x2309 Int)) Int (ite (and (>= x2309 160) (> (+ 160 x5106) x2309)) (x1025 (+ x2309 4)) (x7881 x2309)))
(define-fun x1952 ((x2309 Int)) Int (ite (= x2309 x2885) 0 (x7408 x2309)))
(define-fun x6588 ((x2309 Int)) Int (ite (= x2309 x681) x838 (x1952 x2309)))
(define-fun x7991 ((x2309 Int)) Int (ite (and (< x2309 (+ x3241 x838)) (<= x3241 x2309)) (x1025 (- (+ x2309 x9) x3241)) (x6588 x2309)))
(define-fun x7688 ((x2309 Int)) Int (ite (= x693 x2309) 0 (x7991 x2309)))
(define-fun x1132 ((x2309 Int)) Int (ite x700 (ite x6796 (x6123 x2309) (x2898 x2309)) (x3756 x2309)))
(define-fun x8021 ((x2309 Int)) Int (ite (= 196 x2309) x3185 (x1132 x2309)))
(define-fun x2945 ((x2309 Int)) Int (ite (= 228 x2309) x8062 (x8021 x2309)))
(define-fun x4173 ((x2309 Int)) Int (ite (= x2309 x7687) x879 (x2945 x2309)))
(define-fun x4238 ((x2309 Int)) Int (ite (= x2309 x5529) x2737 (x4173 x2309)))
(define-fun x3774 ((x2309 Int)) Int (ite (= x5529 x2309) x4897 (x4173 x2309)))
(define-fun x8508 ((x2309 Int)) Int (ite x8476 (ite x5029 (x4173 x2309) (x3774 x2309)) (x4238 x2309)))
(define-fun x5912 ((x2309 Int)) Int (ite (and (< x2309 x7678) (>= x2309 164)) (x8508 (+ 128 x2309)) (x7489 x2309)))
(define-fun x7787 ((x2309 Int)) Int (ite (= x2309 x6557) x3597 (x781 x2309)))
(define-fun x8189 ((x2309 Int)) Int (ite (and (<= x6070 x2309) (< x2309 (+ x6070 x3597))) (x5912 (- (+ x2309 x7790) x6070)) (x1110 x2309)))
(define-fun x7497 ((x2309 Int)) Int (ite (= x2085 x2309) 0 (x8189 x2309)))
(define-fun x4549 ((x2309 Int)) Int (x1302 x2309))
(define-fun x4105 ((x2309 Int)) Int (x2763 x2309))
(define-fun x6555 ((x2309 Int)) Int (x2888 x2309))
(define-fun x6881 ((x2309 Int)) Int (x6461 x2309))
(define-fun x4652 ((x2309 Int)) Int (x1977 x2309))
(define-fun x7525 ((x2309 Int)) Int (x1302 x2309))
(define-fun x2665 ((x2309 Int)) Int (x2888 x2309))
(define-fun x7233 ((x2309 Int)) Int (x6461 x2309))
(define-fun x1489 ((x2309 Int)) Int (x1977 x2309))
(define-fun x3138 ((x2309 Int)) Int (ite (= x7535 x2309) x128 (x5071 x2309)))
(define-fun x3767 ((x2309 Int)) Int (ite (and (>= x2309 x1956) (> (+ x128 x1956) x2309)) (x3232 (- (+ 164 x2309) x1956)) (x3138 x2309)))
(define-fun x5318 ((x2309 Int)) Int (ite (= x4164 x2309) 0 (x3767 x2309)))
(define-fun x2687 ((x2309 Int)) Int (ite (= x2309 x2127) x6213 (x5318 x2309)))
(define-fun x5758 ((x2309 Int)) Int (ite (and (< x2309 (+ x1120 x6213)) (>= x2309 x1120)) (x3232 (- (+ x2309 x2346) x1120)) (x2687 x2309)))
(define-fun x8399 ((x2309 Int)) Int (ite (= x2493 x2309) 0 (x5758 x2309)))
(define-fun x7960 ((x2309 Int)) Int (ite (= x3594 x2309) x7391 (x8399 x2309)))
(define-fun x1944 ((x2309 Int)) Int (ite (= x2309 x421) 128 (x7960 x2309)))
(define-fun x1932 ((x2309 Int)) Int (ite (= x1761 x2309) x7752 (x1944 x2309)))
(define-fun x8275 ((x2309 Int)) Int (ite (= x8511 x2309) x8126 (x1932 x2309)))
(define-fun x7014 ((x2309 Int)) Int (ite (= x2309 x3376) x6580 (x8275 x2309)))
(define-fun x2131 ((x2309 Int)) Int (ite (= x2309 x4813) x3321 (x7014 x2309)))
(define-fun x8555 ((x2309 Int)) Int (ite (= x2309 x4546) x6315 (x2131 x2309)))
(define-fun x516 ((x2309 Int)) Int (ite x8485 (x2131 x2309) (ite x1272 (x7014 x2309) (ite x6562 (x8275 x2309) (ite x2009 (x1932 x2309) (x8555 x2309))))))
(define-fun x7567 ((x2309 Int)) Int (ite (= x2309 x1689) 0 (x516 x2309)))
(define-fun x345 ((x2309 Int)) Int (ite (= x1396 x2309) x2008 (x7567 x2309)))
(define-fun x205 ((x2309 Int)) Int (ite (= x2309 x6239) x7904 (x345 x2309)))
(define-fun x4442 ((x2309 Int)) Int (ite (= x7653 x2309) x3448 (x205 x2309)))
(define-fun x3094 ((x2309 Int)) Int (ite (= x2309 x5660) x532 (x4442 x2309)))
(define-fun x7637 ((x2309 Int)) Int (ite (= x3043 x2309) x6473 (x3094 x2309)))
(define-fun x7357 ((x2309 Int)) Int (ite (= x2309 x7611) x8002 (x7637 x2309)))
(define-fun x7646 ((x2309 Int)) Int (ite (= x6869 x2309) x3129 (x7357 x2309)))
(define-fun x5195 ((x2309 Int)) Int (ite x7860 (x7357 x2309) (ite x8098 (x7637 x2309) (ite x7570 (x3094 x2309) (ite x7545 (x4442 x2309) (x7646 x2309))))))
(define-fun x672 ((x2309 Int)) Int (ite (= x2309 x7361) 0 (x5195 x2309)))
(define-fun x5055 ((x2309 Int)) Int (ite (= x2309 x5718) x183 (x672 x2309)))
(define-fun x6271 ((x2309 Int)) Int (ite (= x5068 x2309) x3644 (x5055 x2309)))
(define-fun x3248 ((x2309 Int)) Int (ite (= x2309 x3630) 150 (x6271 x2309)))
(define-fun x1711 ((x2309 Int)) Int (ite (and (> (+ x2234 150) x2309) (>= x2309 x2234)) (x3232 (- (+ x6241 x2309) x2234)) (x3248 x2309)))
(define-fun x7388 ((x2309 Int)) Int (ite (and (>= x2309 0) (> 0 x2309)) (x6172 x2309) (x1711 x2309)))
(define-fun x7235 ((x2309 Int)) Int (ite x5540 (x7388 x2309) (x1711 x2309)))
(define-fun x191 ((x2309 Int)) Int (ite (= x3630 x2309) x7385 (x7235 x2309)))
(define-fun x1987 ((x2309 Int)) Int (ite (and (<= x4104 x2309) (> (+ x4104 x7385) x2309)) (x6172 (- x2309 x4104)) (x191 x2309)))
(define-fun x7206 ((x2309 Int)) Int (ite (= x4209 x2309) x6583 (x1987 x2309)))
(define-fun x2092 ((x2309 Int)) Int (ite (= x362 x2309) x8453 (x7206 x2309)))
(define-fun x5072 ((x2309 Int)) Int (ite (= x3219 x2309) x1166 (x2092 x2309)))
(define-fun x517 ((x2309 Int)) Int (ite (= x4448 x2309) x2659 (x5072 x2309)))
(define-fun x2427 ((x2309 Int)) Int (ite x3542 (x5072 x2309) (ite x1487 (x2092 x2309) (ite x2129 (x7206 x2309) (ite x7446 (x1987 x2309) (x517 x2309))))))
(define-fun x6640 ((x2309 Int)) Int (ite (= x5972 x2309) 0 (x2427 x2309)))
(define-fun x5105 ((x2309 Int)) Int (ite (= x2309 x1752) x7246 (x6640 x2309)))
(define-fun x60 ((x2309 Int)) Int (ite (= x4209 x2309) x7391 (x5105 x2309)))
(define-fun x2321 ((x2309 Int)) Int (ite (= x2309 x692) 160 (x60 x2309)))
(define-fun x5737 ((x2309 Int)) Int (ite (= x2309 x6836) x4237 (x2321 x2309)))
(define-fun x6465 ((x2309 Int)) Int (ite (= x2309 x1086) x40 (x5737 x2309)))
(define-fun x1233 ((x2309 Int)) Int (ite (= x656 x2309) x196 (x6465 x2309)))
(define-fun x3472 ((x2309 Int)) Int (ite (= x6514 x2309) x5335 (x1233 x2309)))
(define-fun x1073 ((x2309 Int)) Int (ite (= x4826 x2309) x655 (x3472 x2309)))
(define-fun x5663 ((x2309 Int)) Int (ite x5741 (x3472 x2309) (ite x5854 (x1233 x2309) (ite x6619 (x6465 x2309) (ite x933 (x5737 x2309) (x1073 x2309))))))
(define-fun x7634 ((x2309 Int)) Int (ite (= x3968 x2309) 0 (x5663 x2309)))
(define-fun x1836 ((x2309 Int)) Int (ite (= x2309 x5947) x2008 (x7634 x2309)))
(define-fun x3116 ((x2309 Int)) Int (ite (= x2309 x21) x1311 (x1836 x2309)))
(define-fun x912 ((x2309 Int)) Int (ite (= x6370 x2309) x3108 (x3116 x2309)))
(define-fun x7150 ((x2309 Int)) Int (ite (= x5412 x2309) x3823 (x912 x2309)))
(define-fun x6317 ((x2309 Int)) Int (ite (= x2309 x2265) x1630 (x7150 x2309)))
(define-fun x1077 ((x2309 Int)) Int (ite (= x2309 x6992) x5617 (x6317 x2309)))
(define-fun x4287 ((x2309 Int)) Int (ite (= x4833 x2309) x4064 (x1077 x2309)))
(define-fun x6200 ((x2309 Int)) Int (ite x378 (x1077 x2309) (ite x7178 (x6317 x2309) (ite x2862 (x7150 x2309) (ite x5251 (x912 x2309) (x4287 x2309))))))
(define-fun x247 ((x2309 Int)) Int (ite (= x4363 x2309) 0 (x6200 x2309)))
(define-fun x1637 ((x2309 Int)) Int (ite (= x2309 x7748) x180 (x247 x2309)))
(define-fun x3935 ((x2309 Int)) Int (ite (= x7002 x2309) x1115 (x48 x2309)))
(define-fun x7345 ((x2309 Int)) Int (x1302 x2309))
(define-fun x5950 ((x2309 Int)) Int (ite x7560 (x6461 x2309) (x6504 x2309)))
(define-fun x2065 ((x2309 Int)) Int (x2763 x2309))
(define-fun x7298 ((x2309 Int)) Int (x2888 x2309))
(define-fun x3182 ((x2309 Int)) Int (ite x7560 (x1977 x2309) (x3543 x2309)))
(define-fun x208 ((x2309 Int)) Int (x1302 x2309))
(define-fun x5103 ((x2309 Int)) Int (x6504 x2309))
(define-fun x411 ((x2309 Int)) Int (x2763 x2309))
(define-fun x1735 ((x2309 Int)) Int (x2888 x2309))
(define-fun x5844 ((x2309 Int)) Int (ite (= x2309 4) 33 (x3937 x2309)))
(define-fun x204 ((x2309 Int)) Int (ite (and (> 36 x2309) (>= x2309 0)) (x5844 x2309) (x1664 x2309)))
(define-fun x3085 ((x2309 Int)) Int (ite (= 160 x2309) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x6278 x2309)))
(define-fun x6565 ((x2309 Int)) Int (ite (= 192 x2309) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3085 x2309)))
(define-fun x144 ((x2309 Int)) Int (ite (= x2309 128) 64 (x2043 x2309)))
(define-fun x8097 ((x2309 Int)) Int (ite (= 256 x2309) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3610 x2309)))
(define-fun x3486 ((x2309 Int)) Int (ite (= 258 x2309) x4451 (x8097 x2309)))
(define-fun x4551 ((x2309 Int)) Int (ite (= 224 x2309) 34 (x5009 x2309)))
(define-fun x3572 ((x2309 Int)) Int (ite (= 290 x2309) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x4596 x2309)))
(define-fun x1700 ((x2309 Int)) Int (ite (= x2309 294) x8175 (x3572 x2309)))
(define-fun x3595 ((x2309 Int)) Int (ite (= x2309 326) x3611 (x1700 x2309)))
(define-fun x1499 ((x2309 Int)) Int (ite (= x2309 358) 160 (x3595 x2309)))
(define-fun x2032 ((x2309 Int)) Int (ite (= x2309 454) x1150 (x1499 x2309)))
(define-fun x209 ((x2309 Int)) Int (ite (and (< x2309 (+ x1150 486)) (>= x2309 486)) (x6565 (- x2309 326)) (x2032 x2309)))
(define-fun x2282 ((x2309 Int)) Int (ite (= x2309 390) 0 (x209 x2309)))
(define-fun x6448 ((x2309 Int)) Int (ite (= x2309 422) x2135 (x2282 x2309)))
(define-fun x357 ((x2309 Int)) Int (ite (= x7817 x2309) x2761 (x6448 x2309)))
(define-fun x4953 ((x2309 Int)) Int (ite (and (<= x2001 x2309) (< x2309 (+ x2001 x2761))) (x3486 (- (+ 256 x2309) x2001)) (x357 x2309)))
(define-fun x2267 ((x2309 Int)) Int (ite (and (<= 292 x2309) (< x2309 x3024)) (x4953 (+ 290 x2309)) (x3055 x2309)))
(define-fun x2996 ((x2309 Int)) Int (ite (= x2309 128) 0 (x5313 x2309)))
(define-fun x4445 ((x2309 Int)) Int (ite (= x2309 160) 0 (x2996 x2309)))
(define-fun x4369 ((x2309 Int)) Int (ite (= 290 x2309) x4918 (x4953 x2309)))
(define-fun x3132 ((x2309 Int)) Int (ite (= x2309 322) x2697 (x4369 x2309)))
(define-fun x7830 ((x2309 Int)) Int (ite (= x2309 0) x950 (x7658 x2309)))
(define-fun x1835 ((x2309 Int)) Int (ite (= 32 x2309) x402 (x7830 x2309)))
(define-fun x4532 ((x2309 Int)) Int (ite (= 128 x2309) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x3937 x2309)))
(define-fun x1473 ((x2309 Int)) Int (ite (and (> 4 x2309) (<= 0 x2309)) (x4532 (+ 128 x2309)) (x1664 x2309)))
(define-fun x7995 ((x2309 Int)) Int (ite (= x2309 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x3937 x2309)))
(define-fun x7455 ((x2309 Int)) Int (ite (and (> 4 x2309) (<= 0 x2309)) (x7995 (+ 128 x2309)) (x1664 x2309)))
(define-fun x6329 ((x2309 Int)) Int (ite (= 548 x2309) x7421 (x5283 x2309)))
(define-fun x2846 ((x2309 Int)) Int (ite (= x2309 580) x6988 (x6329 x2309)))
(define-fun x7026 ((x2309 Int)) Int (ite (= x2309 548) x1193 (x5283 x2309)))
(define-fun x2820 ((x2309 Int)) Int (ite x968 (x5572 x2309) (ite x8163 (ite x6480 (x6329 x2309) (x2846 x2309)) (x7026 x2309))))
(define-fun x2640 ((x2309 Int)) Int (ite (= x2309 516) x5731 (x1971 x2309)))
(define-fun x2225 ((x2309 Int)) Int (ite (= x2309 x4099) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3937 x2309)))
(define-fun x1824 ((x2309 Int)) Int (ite (= x7397 x2309) 32 (x2225 x2309)))
(define-fun x8154 ((x2309 Int)) Int (ite (= x7032 x2309) 48 (x1824 x2309)))
(define-fun x3466 ((x2309 Int)) Int (ite (= x2309 x7124) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x8154 x2309)))
(define-fun x3817 ((x2309 Int)) Int (ite (= x5066 x2309) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x3466 x2309)))
(define-fun x6321 ((x2309 Int)) Int (ite (and (>= x2309 0) (< x2309 132)) (x3817 (+ x4099 x2309)) (x1664 x2309)))
(define-fun x5088 ((x2309 Int)) Int (ite (= 354 x2309) 64 (x3256 x2309)))
(define-fun x1003 ((x2309 Int)) Int (ite (= x4099 x2309) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3937 x2309)))
(define-fun x5937 ((x2309 Int)) Int (ite (= x2309 x380) 32 (x1003 x2309)))
(define-fun x7994 ((x2309 Int)) Int (ite (= x8467 x2309) 32 (x5937 x2309)))
(define-fun x8119 ((x2309 Int)) Int (ite (= x2309 x7877) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x7994 x2309)))
(define-fun x4474 ((x2309 Int)) Int (ite (and (>= x2309 0) (> 100 x2309)) (x8119 (+ x2309 x4099)) (x1664 x2309)))
(define-fun x6229 ((x2309 Int)) Int (ite x371 (x4953 x2309) (x3132 x2309)))
(define-fun x2594 ((x2309 Int)) Int (ite (= x4099 x2309) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x6229 x2309)))
(define-fun x4432 ((x2309 Int)) Int (ite (= x2309 x1476) x8175 (x2594 x2309)))
(define-fun x2240 ((x2309 Int)) Int (ite (= x2309 x2800) 192 (x4432 x2309)))
(define-fun x4764 ((x2309 Int)) Int (ite (= x2309 x97) x6811 (x2240 x2309)))
(define-fun x1460 ((x2309 Int)) Int (ite (and (< x2309 (+ x6811 x2544)) (>= x2309 x2544)) (x2820 (- (+ 548 x2309) x2544)) (x4764 x2309)))
(define-fun x261 ((x2309 Int)) Int (ite (= x1595 x2309) x1107 (x1460 x2309)))
(define-fun x5484 ((x2309 Int)) Int (ite (= x2309 x8513) x5790 (x261 x2309)))
(define-fun x2494 ((x2309 Int)) Int (ite (= 386 x2309) x3015 (x3263 x2309)))
(define-fun x7215 ((x2309 Int)) Int (ite (= 418 x2309) x7103 (x2494 x2309)))
(define-fun x689 ((x2309 Int)) Int (ite (and (<= x4548 x2309) (> (+ x5790 x4548) x2309)) (x7215 (- (+ 386 x2309) x4548)) (x5484 x2309)))
(define-fun x6024 ((x2309 Int)) Int (ite (= x503 x2309) x3611 (x689 x2309)))
(define-fun x5689 ((x2309 Int)) Int (ite (= x32 x2309) 0 (x6024 x2309)))
(define-fun x8143 ((x2309 Int)) Int (ite (= x2309 x7920) x5647 (x5689 x2309)))
(define-fun x6556 ((x2309 Int)) Int (ite (= 450 x2309) 34 (x3134 x2309)))
(define-fun x1684 ((x2309 Int)) Int (ite (= x2309 x3214) x4126 (x8143 x2309)))
(define-fun x6071 ((x2309 Int)) Int (ite (= x2309 482) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x6629 x2309)))
(define-fun x4872 ((x2309 Int)) Int (ite (= x2309 484) x4451 (x6071 x2309)))
(define-fun x674 ((x2309 Int)) Int (ite (and (< x2309 (+ x4126 x2257)) (>= x2309 x2257)) (x4872 (- (+ 482 x2309) x2257)) (x1684 x2309)))
(define-fun x632 ((x2309 Int)) Int (ite (= x3611 x2309) x430 (x8302 x2309)))
(define-fun x7926 ((x2309 Int)) Int (ite (= x8531 x2309) x2199 (x632 x2309)))
(define-fun x3261 ((x2309 Int)) Int (ite (and (<= 228 x2309) (> x824 x2309)) (x674 (- (+ x2309 (x6862 (+ 228 x4099))) 228)) (x480 x2309)))
(define-fun x8338 ((x2309 Int)) Int 0)
(define-fun x4978 ((x2309 Int)) Int (x2763 x2309))
(define-fun x5842 ((x2309 Int)) Int (x7461 x2309))
(define-fun x1318 ((x2309 Int)) Int (x1302 x2309))
(define-fun x2194 ((x2309 Int)) Int (x2888 x2309))
(define-fun x2488 ((x2309 Int)) Int (x6504 x2309))
(define-fun x1686 ((x2309 Int)) Int (x7461 x2309))
(define-fun x2031 ((x2309 Int)) Int (x2763 x2309))
(define-fun x3738 ((x2309 Int)) Int (x2031 x2309))
(define-fun x8444 ((x2309 Int)) Int (x1302 x2309))
(define-fun x5519 ((x2309 Int)) Int (x8444 x2309))
(define-fun x1267 ((x2309 Int)) Int (x2888 x2309))
(define-fun x4438 ((x2309 Int)) Int (x1267 x2309))
(define-fun x631 ((x2309 Int)) Int (x6504 x2309))
(define-fun x4995 ((x2309 Int)) Int (x631 x2309))
(define-fun x1876 ((x2309 Int)) Int (ite (= x2309 x8531) x1658 (x7926 x2309)))
(define-fun x2602 ((x2309 Int)) Int (x4466 x2309))
(define-fun x7075 ((x2309 Int)) Int (x253 x2309))
(define-fun x3999 ((x2309 Int)) Int (x48 x2309))
(define-fun x5368 ((x2309 Int)) Int (x7520 x2309))
(define-fun x3438 ((x2309 Int)) Int (x2975 x2309))
(define-fun x7583 ((x2309 Int)) Int (x7623 x2309))
(define-fun x3227 ((x2309 Int)) Int (x2401 x2309))
(define-fun x88 ((x2309 Int)) Int (x1683 x2309))
(define-fun x3654 ((x2309 Int)) Int (x5687 x2309))
(define-fun x359 ((x2309 Int)) Int (x2857 x2309))
(define-fun x5319 ((x2309 Int)) Int (x7874 x2309))
(define-fun x1577 ((x2309 Int)) Int (x8530 x2309))
(define-fun x1401 ((x2309 Int)) Int (x8075 x2309))
(define-fun x7820 ((x2309 Int)) Int (x28 x2309))
(define-fun x8502 ((x2309 Int)) Int (x4873 x2309))
(define-fun x3217 ((x2309 Int)) Int (ite x371 (x7658 x2309) (x1835 x2309)))
(define-fun x7183 ((x2309 Int)) Int (x3510 x2309))
(define-fun x284 ((x2309 Int)) Int (x5025 x2309))
(define-fun x2616 ((x2309 Int)) Int (x2258 x2309))
(define-fun x2331 ((x2309 Int)) Int (x8580 x2309))
(define-fun x2896 ((x2309 Int)) Int (x4733 x2309))
(define-fun x1 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 x789)) (x3217 x2309) (x3937 x2309)))
(define-fun x3265 ((x2309 Int)) Int (ite (and (<= 0 x2309) (< x2309 x789)) (x1 x2309) (x1664 x2309)))
(define-fun x3534 ((x2309 Int)) Int (ite (and (<= 290 x2309) (> 354 x2309)) (x3217 (- x2309 290)) (x3719 x2309)))
(define-fun x4272 ((x2309 Int)) Int (ite (= 4 x2309) 34 (x3937 x2309)))
(define-fun x2707 ((x2309 Int)) Int (ite (and (< x2309 36) (>= x2309 0)) (x4272 x2309) (x1664 x2309)))
(define-fun x4132 ((x2309 Int)) Int (x2763 x2309))
(define-fun x6396 ((x2309 Int)) Int (ite x5078 (x1977 x2309) (x3981 x2309)))
(define-fun x1216 ((x2309 Int)) Int (x1302 x2309))
(define-fun x2642 ((x2309 Int)) Int (x2888 x2309))
(define-fun x925 ((x2309 Int)) Int (x6461 x2309))
(define-fun x624 ((x2309 Int)) Int (ite (= x3611 x2309) x1815 (x5683 x2309)))
(define-fun x2060 ((x2309 Int)) Int (ite (= x3109 x2309) x5552 (x624 x2309)))
(define-fun x1006 ((x2309 Int)) Int (ite (= x2309 x3109) x3889 (x2060 x2309)))
(define-fun x151 ((x2309 Int)) Int (ite (= x2309 x3611) x219 (x1006 x2309)))
(define-fun x5551 ((x2309 Int)) Int (ite x5078 (x5683 x2309) (ite x7730 (x2060 x2309) (ite x3623 (x151 x2309) (x5683 x2309)))))
(define-fun x4241 ((x2309 Int)) Int (ite (= x2738 x2309) x5270 (x5551 x2309)))
(define-fun x4908 ((x2309 Int)) Int (ite (= 160 x2309) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1979 x2309)))
(define-fun x1355 ((x2309 Int)) Int (ite (= 192 x2309) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4908 x2309)))
(define-fun x8171 ((x2309 Int)) Int (ite (= 128 x2309) 64 (x1615 x2309)))
(define-fun x7009 ((x2309 Int)) Int (ite (= 256 x2309) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2378 x2309)))
(define-fun x8284 ((x2309 Int)) Int (ite (= 258 x2309) x8551 (x7009 x2309)))
(define-fun x1417 ((x2309 Int)) Int (ite (= 224 x2309) 34 (x7507 x2309)))
(define-fun x5571 ((x2309 Int)) Int (ite (= x2309 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x4990 x2309)))
(define-fun x4016 ((x2309 Int)) Int (ite (= x2309 294) x8175 (x5571 x2309)))
(define-fun x358 ((x2309 Int)) Int (ite (= x2309 326) x3611 (x4016 x2309)))
(define-fun x7593 ((x2309 Int)) Int (ite (= 358 x2309) 160 (x358 x2309)))
(define-fun x6955 ((x2309 Int)) Int (ite (= x2309 454) x1964 (x7593 x2309)))
(define-fun x3338 ((x2309 Int)) Int (ite (and (> (+ 486 x1964) x2309) (>= x2309 486)) (x1355 (- x2309 326)) (x6955 x2309)))
(define-fun x8157 ((x2309 Int)) Int (ite (= x2309 390) 0 (x3338 x2309)))
(define-fun x1551 ((x2309 Int)) Int (ite (= x2309 422) x5651 (x8157 x2309)))
(define-fun x3771 ((x2309 Int)) Int (ite (= x2309 x8122) x7780 (x1551 x2309)))
(define-fun x3718 ((x2309 Int)) Int (ite (and (>= x2309 x7983) (< x2309 (+ x7983 x7780))) (x8284 (- (+ 256 x2309) x7983)) (x3771 x2309)))
(define-fun x7957 ((x2309 Int)) Int (ite (and (>= x2309 292) (< x2309 x5607)) (x3718 (+ x2309 290)) (x5615 x2309)))
(define-fun x1721 ((x2309 Int)) Int (ite (= x2309 128) 0 (x4116 x2309)))
(define-fun x3499 ((x2309 Int)) Int (ite (= x2309 160) 0 (x1721 x2309)))
(define-fun x585 ((x2309 Int)) Int (ite (= 290 x2309) x7270 (x3718 x2309)))
(define-fun x5864 ((x2309 Int)) Int (ite (= x2309 322) x1538 (x585 x2309)))
(define-fun x2533 ((x2309 Int)) Int (x2857 x2309))
(define-fun x6420 ((x2309 Int)) Int (x2888 x2309))
(define-fun x5402 ((x2309 Int)) Int (x8580 x2309))
(define-fun x8288 ((x2309 Int)) Int (x6461 x2309))
(define-fun x1009 ((x2309 Int)) Int (x7623 x2309))
(define-fun x66 ((x2309 Int)) Int (x2258 x2309))
(define-fun x3075 ((x2309 Int)) Int (x5687 x2309))
(define-fun x7816 ((x2309 Int)) Int (ite x1125 (ite x8282 (x3718 x2309) (x5864 x2309)) (x2389 x2309)))
(define-fun x7281 ((x2309 Int)) Int (x2763 x2309))
(define-fun x1403 ((x2309 Int)) Int (x3510 x2309))
(define-fun x5493 ((x2309 Int)) Int (x1977 x2309))
(define-fun x7670 ((x2309 Int)) Int (x1683 x2309))
(define-fun x353 ((x2309 Int)) Int (x7520 x2309))
(define-fun x2216 ((x2309 Int)) Int (x8075 x2309))
(define-fun x1948 ((x2309 Int)) Int (x1302 x2309))
(define-fun x7171 ((x2309 Int)) Int (x8530 x2309))
(define-fun x1051 ((x2309 Int)) Int (x4873 x2309))
(define-fun x2345 ((x2309 Int)) Int (x4733 x2309))
(define-fun x8497 ((x2309 Int)) Int (x28 x2309))
(define-fun x2699 ((x2309 Int)) Int (x7874 x2309))
(define-fun x6840 ((x2309 Int)) Int (x253 x2309))
(define-fun x6683 ((x2309 Int)) Int (x4466 x2309))
(define-fun x6832 ((x2309 Int)) Int (x48 x2309))
(define-fun x5890 ((x2309 Int)) Int (x5025 x2309))
(define-fun x5018 ((x2309 Int)) Int (x2975 x2309))
(define-fun x2142 ((x2309 Int)) Int (ite (= x2309 x4825) x3541 (x1072 x2309)))
(define-fun x8268 ((x2309 Int)) Int (ite (= x3339 x2309) x3770 (x2142 x2309)))
(define-fun x2526 ((x2309 Int)) Int (ite (= x344 x2309) x1076 (x6560 x2309)))
(define-fun x5057 ((x2309 Int)) Int (ite (= x2309 x7024) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x5761 x2309)))
(define-fun x1961 ((x2309 Int)) Int (ite (= x2309 x4080) x8551 (x5057 x2309)))
(define-fun x5048 ((x2309 Int)) Int (ite (= x2309 x7934) x1747 (x3422 x2309)))
(define-fun x1949 ((x2309 Int)) Int (ite (= x2309 x310) x4994 (x1157 x2309)))
(define-fun x6786 ((x2309 Int)) Int (ite (= x2309 x153) x2826 (x5673 x2309)))
(define-fun x1154 ((x2309 Int)) Int (ite (= x923 x2309) x3892 (x6786 x2309)))
(define-fun x1588 ((x2309 Int)) Int (ite (= x2309 x153) x1375 (x5673 x2309)))
(define-fun x17 ((x2309 Int)) Int (ite x6509 (x4434 x2309) (ite x214 (ite x671 (x6786 x2309) (x1154 x2309)) (x1588 x2309))))
(define-fun x7919 ((x2309 Int)) Int (ite (= x2309 x7684) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x7816 x2309)))
(define-fun x3418 ((x2309 Int)) Int (ite (= x3051 x2309) x8175 (x7919 x2309)))
(define-fun x2752 ((x2309 Int)) Int (ite (= x2309 x3983) 192 (x3418 x2309)))
(define-fun x604 ((x2309 Int)) Int (ite (= x1085 x2309) x5865 (x2752 x2309)))
(define-fun x7363 ((x2309 Int)) Int (ite (and (> (+ x5865 x2940) x2309) (<= x2940 x2309)) (x17 (- (+ x2309 x153) x2940)) (x604 x2309)))
(define-fun x182 ((x2309 Int)) Int (ite (= x2309 x4685) x5482 (x7363 x2309)))
(define-fun x392 ((x2309 Int)) Int (ite (= x2309 x3711) x7107 (x182 x2309)))
(define-fun x7711 ((x2309 Int)) Int (ite (and (>= x2309 x2176) (< x2309 (+ x2176 x7107))) (x8268 (- (+ x2309 x5503) x2176)) (x392 x2309)))
(define-fun x4512 ((x2309 Int)) Int (ite (= x2309 x2530) x3611 (x7711 x2309)))
(define-fun x2548 ((x2309 Int)) Int (ite (= x7838 x2309) 0 (x4512 x2309)))
(define-fun x7913 ((x2309 Int)) Int (ite (= x2309 x272) x7933 (x2548 x2309)))
(define-fun x4298 ((x2309 Int)) Int (ite (= x2565 x2309) x1459 (x7913 x2309)))
(define-fun x4837 ((x2309 Int)) Int (ite (and (< x2309 (+ x8407 x1459)) (<= x8407 x2309)) (x1961 (- (+ x2309 x1168) x8407)) (x4298 x2309)))
(define-fun x5442 ((x2309 Int)) Int (ite (and (>= x2309 228) (> x1838 x2309)) (x4837 (- (+ x2309 (x6862 (+ 228 x7684))) 228)) (x5409 x2309)))
(define-fun x641 ((x2309 Int)) Int 0)
(define-fun x5006 ((x2309 Int)) Int (x6461 x2309))
(define-fun x7544 ((x2309 Int)) Int (x3981 x2309))
(define-fun x4542 ((x2309 Int)) Int (x2763 x2309))
(define-fun x6747 ((x2309 Int)) Int (x1302 x2309))
(define-fun x3107 ((x2309 Int)) Int (x2888 x2309))
(define-fun x1413 ((x2309 Int)) Int (x6420 x2309))
(define-fun x3987 ((x2309 Int)) Int (x8288 x2309))
(define-fun x5713 ((x2309 Int)) Int (x3981 x2309))
(define-fun x708 ((x2309 Int)) Int (x1948 x2309))
(define-fun x5631 ((x2309 Int)) Int (x7281 x2309))
(define-fun x750 ((x2309 Int)) Int (x2857 x2309))
(define-fun x8219 ((x2309 Int)) Int (x2888 x2309))
(define-fun x6946 ((x2309 Int)) Int (x6461 x2309))
(define-fun x6963 ((x2309 Int)) Int (x7623 x2309))
(define-fun x2220 ((x2309 Int)) Int (x8580 x2309))
(define-fun x5455 ((x2309 Int)) Int (x2258 x2309))
(define-fun x7516 ((x2309 Int)) Int (x5687 x2309))
(define-fun x1348 ((x2309 Int)) Int (x2763 x2309))
(define-fun x6974 ((x2309 Int)) Int (x3510 x2309))
(define-fun x6041 ((x2309 Int)) Int (x8075 x2309))
(define-fun x6857 ((x2309 Int)) Int (x1977 x2309))
(define-fun x3395 ((x2309 Int)) Int (x7520 x2309))
(define-fun x6039 ((x2309 Int)) Int (x1302 x2309))
(define-fun x2182 ((x2309 Int)) Int (x7874 x2309))
(define-fun x4689 ((x2309 Int)) Int (x48 x2309))
(define-fun x7095 ((x2309 Int)) Int (x1683 x2309))
(define-fun x4492 ((x2309 Int)) Int (x28 x2309))
(define-fun x6293 ((x2309 Int)) Int (x4873 x2309))
(define-fun x84 ((x2309 Int)) Int (x4733 x2309))
(define-fun x5577 ((x2309 Int)) Int (x8530 x2309))
(define-fun x7911 ((x2309 Int)) Int (x253 x2309))
(define-fun x3459 ((x2309 Int)) Int (x5025 x2309))
(define-fun x7104 ((x2309 Int)) Int (x4466 x2309))
(define-fun x4200 ((x2309 Int)) Int (x2975 x2309))
(define-fun x1856 ((x2309 Int)) Int (ite (and (< x2309 354) (>= x2309 290)) (x1234 (- x2309 290)) (x4455 x2309)))
(define-fun x7283 ((x2309 Int)) Int (x2888 x2309))
(define-fun x3270 ((x2309 Int)) Int (ite x3587 (x2763 x2309) (x7454 x2309)))
(define-fun x6628 ((x2309 Int)) Int (x6461 x2309))
(define-fun x2781 ((x2309 Int)) Int (x1977 x2309))
(define-fun x6381 ((x2309 Int)) Int (x1302 x2309))
(define-fun x5148 ((x2309 Int)) Int (ite x1930 (x5229 x2309) (ite x3213 (x5229 x2309) (x2763 x2309))))
(define-fun x6156 ((x2309 Int)) Int (x1977 x2309))
(define-fun x963 ((x2309 Int)) Int (x2763 x2309))
(define-fun x2422 ((x2309 Int)) Int (x6461 x2309))
(define-fun x3844 ((x2309 Int)) Int (x2888 x2309))
(define-fun x7401 ((x2309 Int)) Int (x1302 x2309))
(define-fun x5622 ((x2309 Int)) Int (x1302 x2309))
(define-fun x4820 ((x2309 Int)) Int (x6461 x2309))
(define-fun x1332 ((x2309 Int)) Int (x1977 x2309))
(define-fun x2804 ((x2309 Int)) Int (x2888 x2309))
(define-fun x2680 ((x2309 Int)) Int (ite (= x2864 x2309) x5062 (x8075 x2309)))
(define-fun x6113 ((x2309 Int)) Int (ite (= x2309 x8416) x6085 (x2857 x2309)))
(define-fun x3546 ((x2309 Int)) Int (ite (= x6812 x2309) x3611 (x2258 x2309)))
(define-fun x8372 ((x2309 Int)) Int (ite x1679 (x361 x2309) (x175 x2309)))
(define-fun x2425 ((x2309 Int)) Int (ite x1679 (x5760 x2309) (x4770 x2309)))
(define-fun x6199 ((x2309 Int)) Int (ite x1679 (x3126 x2309) (x3540 x2309)))
(define-fun x817 ((x2309 Int)) Int (ite x1679 (x5920 x2309) (x8495 x2309)))
(define-fun x18 ((x2309 Int)) Int (ite x1679 (x5893 x2309) (x1923 x2309)))
(define-fun x6873 ((x2309 Int)) Int (ite x1679 (x7194 x2309) (x6376 x2309)))
(define-fun x1854 ((x2309 Int)) Int (ite x1679 (x2063 x2309) (x4704 x2309)))
(define-fun x7080 ((x2309 Int)) Int (ite x1679 (x1610 x2309) (x3683 x2309)))
(define-fun x6584 ((x2309 Int)) Int (ite x1679 (x293 x2309) (x8560 x2309)))
(define-fun x6495 ((x2309 Int)) Int (ite x1679 (x2160 x2309) (x120 x2309)))
(define-fun x6611 ((x2309 Int)) Int (ite x1679 (x4140 x2309) (x3775 x2309)))
(define-fun x678 ((x2309 Int)) Int (ite x1679 (x4362 x2309) (x4198 x2309)))
(define-fun x898 ((x2309 Int)) Int (ite x1679 (x5771 x2309) (x6011 x2309)))
(define-fun x2077 ((x2309 Int)) Int (ite x1679 (x6459 x2309) (x8344 x2309)))
(define-fun x5982 ((x2309 Int)) Int (ite x5540 (x2421 x2309) (x2763 x2309)))
(define-fun x5327 ((x2309 Int)) Int (ite x8455 (x8355 x2309) (x38 x2309)))
(define-fun x3420 ((x2309 Int)) Int (ite (= x2309 x4771) x7292 (x5327 x2309)))
(define-fun x7986 ((x2309 Int)) Int (ite x5712 (x1007 x2309) (x4343 x2309)))
(define-fun x715 ((x2309 Int)) Int (ite (and (<= 128 x2309) (< x2309 160)) (x7986 (- x2309 128)) (x3942 x2309)))
(define-fun x5193 ((x2309 Int)) Int (ite x1012 (x1934 x2309) (ite x6770 (x1106 x2309) (x6875 x2309))))
(define-fun x913 ((x2309 Int)) Int (ite (and (>= x2309 128) (> 160 x2309)) (x5193 (- x2309 128)) (x7132 x2309)))
(define-fun x3926 ((x2309 Int)) Int (ite (= x2309 4) 17 (x4081 x2309)))
(define-fun x1908 ((x2309 Int)) Int (ite (and (< x2309 36) (>= x2309 0)) (x3926 x2309) (x2729 x2309)))
(define-fun x3447 ((x2309 Int)) Int (ite (= 4 x2309) 17 (x6059 x2309)))
(define-fun x7338 ((x2309 Int)) Int (ite (and (> 36 x2309) (<= 0 x2309)) (x3447 x2309) (x2729 x2309)))
(define-fun x3424 ((x2309 Int)) Int (ite (= x2309 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x1174 x2309)))
(define-fun x2490 ((x2309 Int)) Int (ite (= 132 x2309) x4088 (x3424 x2309)))
(define-fun x4885 ((x2309 Int)) Int (ite (= x2309 164) x2460 (x2490 x2309)))
(define-fun x6109 ((x2309 Int)) Int (ite (= x2309 196) x6626 (x4885 x2309)))
(define-fun x8354 ((x2309 Int)) Int (ite (= 228 x2309) x6211 (x6109 x2309)))
(define-fun x7821 ((x2309 Int)) Int (ite (= 128 x2309) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x1174 x2309)))
(define-fun x6949 ((x2309 Int)) Int (ite (= 132 x2309) x5113 (x7821 x2309)))
(define-fun x5629 ((x2309 Int)) Int (ite (= x2309 164) x5201 (x6949 x2309)))
(define-fun x5657 ((x2309 Int)) Int (ite (= x2309 128) x5201 (x8245 x2309)))
(define-fun x1325 ((x2309 Int)) Int (ite (= 128 x2309) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x5657 x2309)))
(define-fun x3608 ((x2309 Int)) Int (ite (= x2309 132) x5113 (x1325 x2309)))
(define-fun x8272 ((x2309 Int)) Int (ite (= 164 x2309) 0 (x3608 x2309)))
(define-fun x5556 ((x2309 Int)) Int (ite (= 196 x2309) 0 (x8272 x2309)))
(define-fun x6922 ((x2309 Int)) Int 0)
(define-fun x8540 ((x2309 Int)) Int (ite (= 128 x2309) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x1174 x2309)))
(define-fun x5575 ((x2309 Int)) Int (ite (= x2309 132) x1859 (x8540 x2309)))
(define-fun x5461 ((x2309 Int)) Int (ite (= 164 x2309) x4368 (x5575 x2309)))
(define-fun x4143 ((x2309 Int)) Int (ite (= 196 x2309) x4118 (x5461 x2309)))
(define-fun x1580 ((x2309 Int)) Int (ite (= x2309 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x1174 x2309)))
(define-fun x6950 ((x2309 Int)) Int (ite (= x2309 132) x8305 (x1580 x2309)))
(define-fun x1014 ((x2309 Int)) Int 0)
(define-fun x2589 ((x2309 Int)) Int (ite (= 128 x2309) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x1174 x2309)))
(define-fun x8286 ((x2309 Int)) Int (ite (= 132 x2309) x7737 (x2589 x2309)))
(define-fun x6464 ((x2309 Int)) Int 0)
(define-fun x5870 ((x2309 Int)) Int (ite x7061 (x2726 x2309) (ite x1790 (x2726 x2309) (ite x1802 (x2726 x2309) (ite x5510 (x2726 x2309) (x6681 x2309))))))
(define-fun x6635 ((x2309 Int)) Int (ite (and (< x2309 x7143) (<= 0 x2309)) (x5870 x2309) (x6059 x2309)))
(define-fun x7253 ((x2309 Int)) Int (ite (and (>= x2309 0) (> x7143 x2309)) (x6635 x2309) (x2729 x2309)))
(define-fun x4827 ((x2309 Int)) Int (ite (= x4737 x2309) x7000 (x1704 x2309)))
(define-fun x6964 ((x2309 Int)) Int (ite (= x2309 x2738) x4392 (x7731 x2309)))
(assert (x2662 x5627 256))
(assert (x2186 x386))
(assert (= (and x730 x4950) x7465))
(assert (x6021 x7894))
(assert (x6021 x5772))
(assert (x6021 x7939))
(assert (= x6079 (and (not x3167) x4296)))
(assert (= x6371 (and x6029 x5288)))
(assert (=> (>= 10000 x4293) (= 0 (x8569 x4293))))
(assert (= (x864 (x6067 x8390 x6994 x6858 x6332 x8121)) x8390))
(assert (x6021 x2518))
(assert (not (x3961 (x8371 64 x7772 100))))
(assert (< 10000 (x6067 x2495 x3439 x1839 x1840 x3342)))
(assert (x1960 x2604))
(assert (= x6182 x7127))
(assert (= (or x5357 x4610 x4027 x832 x5730 x5346 x6889 x2189 x3475) x6153))
(assert (not (x3961 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742))))
(assert (= (x4378 (x4863 x8390 x4163 x6722 x2492 x4934 x2354)) x4163))
(assert (= x7725 (x569 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401))))
(assert (= x7410 (and x2167 (not x1963))))
(assert (= x299 (and (not x4165) x8559)))
(assert (not (x3961 (x4863 x62 x2406 x1667 x1539 x5391 x8104))))
(assert (x6021 x4169))
(assert (x6021 x1190))
(assert (x6021 x8067))
(assert (x6290 x4094))
(assert (x6021 x4896))
(assert (=> (<= x256 10000) (= 0 (x8569 x256))))
(assert (x6021 x5485))
(assert (x6021 x3432))
(assert (= (x569 (x8371 64 x6604 2)) 2))
(assert (= (x569 (x4863 x7741 x1138 x7294 x4427 x6476 x4714)) x7294))
(assert (x6021 x1752))
(assert (x6021 x2456))
(assert (x2662 x3137 256))
(assert (= x6919 (x4378 (x1874 x112 x6919))))
(assert (x6021 x7613))
(assert (=> (>= 10000 x1298) (= (x8569 x1298) 0)))
(assert (x6021 x3425))
(assert (x6021 x4840))
(assert (= x3640 x6481))
(assert (=> (>= 10000 x6776) (= (x8569 x6776) 0)))
(assert (x6021 x4310))
(assert (= x6042 (and (not x6222) x3295)))
(assert (= (or x6851 x5446 x6792) x6487))
(assert (= (x4408 (x6067 x112 x6250 x8267 x825 x6142)) x825))
(assert (x6021 x4056))
(assert (=> (>= 10000 x3693) (= 0 (x8569 x3693))))
(assert (= (x4378 (x1874 x2495 x884)) x884))
(assert (= (=> (and (= x5011 true) (= false x556) (= x8270 0)) x7126) x3570))
(assert (x6021 x2492))
(assert (not (x3961 (x1874 x8295 x6990))))
(assert (x2662 x1081 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x6021 x4962))
(assert (=> (<= x4323 10000) (= 0 (x8569 x4323))))
(assert (x6021 x2695))
(assert (= 64 (x864 (x8371 64 x603 6))))
(assert (x1960 x7261))
(assert (x2662 x479 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3329))
(assert (= 64 (x864 (x8371 64 x5207 6))))
(assert (x6021 x2346))
(assert (x6021 x5306))
(assert (x7582 x145))
(assert (= (and x1769 (not x719)) x8057))
(assert (> (x4863 x7786 x2854 x3591 x5743 x6693 x7617) 10000))
(assert (x6021 x6733))
(assert (= (x8371 x6134 x2428 x8056) (x8569 (x8371 x6134 x2428 x8056))))
(assert (= (x864 (x1874 x5303 x7695)) x5303))
(assert (= x3720 (and x6244 (not x3853))))
(assert (x6021 x3050))
(assert (x3961 38584857114614344130707641774870441135179346817440091772946614992565446901760))
(assert (> (x1874 x1919 x4645) 10000))
(assert (= x8176 (x569 (x8371 x1891 x117 x8176))))
(assert (= x6384 (and x2606 x1036)))
(assert (=> (>= 10000 x8226) (= (x8569 x8226) 0)))
(assert (x6021 x6838))
(assert (x6021 x5753))
(assert (x6021 x8249))
(assert (x2662 x2554 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5831 x5252))
(assert (x6021 x5226))
(assert (x6021 x5065))
(assert (=> (<= x4874 10000) (= (x8569 x4874) 0)))
(assert (< 10000 (x8371 64 x6604 2)))
(assert (= 0 (x8569 46442213778836376901753710468615024683576072693327014300388496345503314739200)))
(assert (= x4621 (=> (= x3626 (= x1163 0)) (and (=> (and (and (= x6490 x3240) (= x8452 2) (= x1912 x2828) (= 0 x7033) (= false x4202) (= x3308 x7483) (= true x2999) (= x4348 x5160)) x3626) x7857) (=> (and (not x3626) (and (= x8437 x2122) (= x7882 x408) (= x47 x5236) (= x8316 x5939))) x164)))))
(assert (x6021 x3))
(assert (< 10000 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838)))
(assert (x6021 x5539))
(assert (x6021 x3068))
(assert (= x8343 (and x1287 x4951)))
(assert (< (x1874 32 x3111) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x6067 x5303 x8144 x4874 x6943 x3508) (x8569 (x6067 x5303 x8144 x4874 x6943 x3508))))
(assert (x6021 x3404))
(assert (x6021 x1182))
(assert (x2186 x991))
(assert (= (x864 (x8371 64 x5113 11)) 64))
(assert (= (or x3932 x4440) x684))
(assert (= (x864 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758)) x6151))
(assert (x6021 x6434))
(assert (x2662 x991 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3753))
(assert (= (x8569 (x1874 x128 x2672)) (x1874 x128 x2672)))
(assert (x6021 x5675))
(assert (= (x8371 64 x2957 7) (x8569 (x8371 64 x2957 7))))
(assert (x6021 x4276))
(assert (x6021 x5090))
(assert (> (x8371 64 x5207 36) 10000))
(assert (x6021 x1860))
(assert (= x1246 (x4378 (x1874 x5107 x1246))))
(assert (x6021 x3125))
(assert (x2186 x8200))
(assert (x6021 x7659))
(assert (= x3843 (and x6587 x7130)))
(assert (= (x569 (x8371 64 1 x4796)) x4796))
(assert (x6021 x2330))
(assert (x6021 x7748))
(assert (= x1905 x7750))
(assert (x6021 x4088))
(assert (x6021 x486))
(assert (x6021 x7503))
(assert (x6021 x1041))
(assert (x6021 x2122))
(assert (= x1221 (or (and x3172 x5162) (and x4331 x3806) (and x7343 x147))))
(assert (x6021 x6324))
(assert (x6021 x7368))
(assert (x2662 x991 32))
(assert (= x2793 (and x6961 (not x4970))))
(assert (x6021 x6342))
(assert (x6021 x3255))
(assert (= x4359 (x4408 (x4463 x5107 x1599 x5399 x4359))))
(assert (= (x7859 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064)) x8064))
(assert (x6021 x8358))
(assert (not (x3961 (x8371 64 x3727 6))))
(assert (= (x4408 (x4863 x3841 x4962 x1975 x1342 x6300 x7068)) x1342))
(assert (x6021 x1563))
(assert (x6021 x202))
(assert (= x3506 (and (not x2146) x1626)))
(assert (x6021 x3619))
(assert (= (x8371 64 x648 6) (x8569 (x8371 64 x648 6))))
(assert (= (x4408 (x4463 x636 x197 x5649 x3751)) x3751))
(assert (not (x3961 (x1874 x1919 x4645))))
(assert (x6021 x2679))
(assert (x6021 x6173))
(assert (x6021 x546))
(assert (= (x6067 x5107 x652 x8297 x5470 x2440) (x8569 (x6067 x5107 x652 x8297 x5470 x2440))))
(assert (= x7741 (x864 (x1874 x7741 x6688))))
(assert (x6021 x4546))
(assert (x6021 x3234))
(assert (= x2873 (and x1507 x3006)))
(assert (x7457 x2650))
(assert (x6021 x5079))
(assert (x6021 x5115))
(assert (x6021 x2902))
(assert (x6021 x565))
(assert (=> (<= x3478 10000) (= 0 (x8569 x3478))))
(assert (= (x4378 (x8371 64 x7708 12)) x7708))
(assert (x6021 x1649))
(assert (not (x3961 (x6067 x2495 x3439 x1839 x1840 x3342))))
(assert (x7457 x6017))
(assert (= x4993 (and x3064 (not x5818))))
(assert (x6021 x5033))
(assert (x6021 x1217))
(assert (x6021 x2697))
(assert (x6021 x2466))
(assert (x6021 x2472))
(assert (x6021 x7752))
(assert (= (=> (= (< 0 x6468) x6664) (and (=> (and x6664 (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x7535) (= (x6862 (+ x128 x1956)) x4164) (= x3594 (x6862 (+ 36 x5718))) (= (x6862 (+ 32 x3594)) x421) (= (x6862 (+ 32 x296)) x4891) (= (x6862 (+ x2127 32)) x1120) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2127) (= (* x720 32) x296) (>= x2127 1) (<= x7535 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x4386 (x6862 (+ 31 x128))) (= (x4628 x1726 32) x720) (< x2127 x5718) (<= x7535 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1956 (x6862 (+ x7535 32))) (= x4049 150) (= x409 (< 0 x7752)) (= x2127 (x6862 (+ x7535 x3915))) (= x1726 (x6862 (+ 31 x6213))) (= (x6862 (+ 128 x3594)) x1761) (= x7752 (x1944 x7535)) (= x8511 (x6862 (+ x1761 32))) (> x2127 x7535) (= x3915 (x6862 (+ 32 x6515))) (= (x6862 (+ x6213 x1120)) x2493) (<= 2 x5718) (= x6515 (* 32 x1631)) (= x5718 (x6862 (+ x4891 x2127))) (= (x4628 x4386 32) x1631)) (or (not x409) (and x409 (and (or (and x1416 (and (or (and x4010 (and (and (= x203 (> x7752 96)) (= (x7014 x3050) x3321) (= (x6862 (+ 64 x1956)) x3050) (= x4813 (x6862 (+ x8511 64)))) (or (and x203 (and (= x6315 (x2131 x4354)) (= (x6862 (+ x1956 96)) x4354) (= x4546 (x6862 (+ 96 x8511))) (<= x7752 128))) (not x203)))) (not x4010)) (and (= x6580 (x8275 x5150)) (= (x6862 (+ 32 x1956)) x5150) (= x4010 (> x7752 64)) (= (x6862 (+ x8511 32)) x3376)))) (not x1416)) (and (= (< 32 x7752) x1416) (= (x1932 x1956) x8126))))))) x2284) (=> (and (not x6664) (and (= x4317 (x6862 (+ 32 x3259))) (= 132 x5917) (= x3259 (x6862 (+ 32 x6269))) (= (x6862 (+ x7535 4)) x6269) (= x709 true) (= x5874 (x6862 (+ 32 x4317))) (= x6233 false))) x5736))) x557))
(assert (x6021 x4575))
(assert (= (and x4374 (not x2812)) x2862))
(assert (= x8142 (x986 (x4863 x636 x5379 x256 x5272 x4150 x8142))))
(assert (x6021 x3051))
(assert (= x2741 (=> (and (= (ite (< 150 x4004) 150 x4004) x2623) (= x2841 (x6862 (+ x6319 32))) (= (< 0 x1915) x5436)) (and (=> x5436 x7927) (=> (and (not x5436) (and (and (= (x8371 x81 x161 x3096) x953) (= (x8371 64 x2957 7) x1002) (= (x4463 x81 x2653 x217 x3582) x2116) (= x4756 (x6862 (+ 96 x5526))) (= (x3624 x2887) x5241) (= x6061 (x6862 (+ x5526 128))) (= (x3624 x5526) x5974) (= (x3624 x3663) x2585) (= (x6862 (+ 64 x5526)) x701) (= (< 0 x3881) x3752) (= (x3624 x2105) x743) (= (x6862 (+ x5526 32)) x2482) (= x5178 (x3631 0)) (= (x6067 x81 x5956 x3927 x743 x3464) x6780) (= (x6862 (+ 32 x5526)) x278) (= x3367 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602)) (= x5203 (x3624 x3753)) (= x217 (x3624 x1583)) (= (x6862 (+ 64 x5526)) x4595) (= x2029 (x6862 (+ x5526 64))) (= (x3624 x4756) x5093) (= x8276 (x3624 x701)) (= x458 (x3624 x1983)) (= (x3624 x4915) x3742) (= x4340 (x3624 x6061)) (= (x3624 x1811) x3464) (= (x6862 (+ 32 x5526)) x5395) (= (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742) x3929) (= (x6862 (+ 160 x5526)) x4915) (= x3939 (x6862 (+ x5526 160))) (= (x3624 x8368) x1764) (= (x3624 x2029) x366) (= x526 (x6862 (+ 128 x5526))) (= (x6862 (+ x5526 32)) x1583) (= x1983 (x6862 (+ 64 x5526))) (= (x6862 (+ x5526 96)) x3663) (= x3927 (x3624 x278)) (= x3582 (x3624 x4595)) (= (x1874 x81 x5974) x2056) (= (x6862 (+ x5526 96)) x8368) (= x161 (x3624 x5526)) (= (x6862 (+ x5526 64)) x2105) (= x3881 (x3624 x440)) (= (x3624 x7551) x3096) (= x7556 (x4863 x81 x7614 x3028 x8276 x1764 x4340)) (= x3028 (x3624 x5395)) (= (ite (= 0 x81) x5178 (ite (>= 32 x81) x2056 (ite (<= x81 64) x953 (ite (<= x81 96) x2116 (ite (<= x81 128) x6780 (ite (>= 160 x81) x7556 (ite (<= x81 192) x3929 x3367))))))) x3355) (= x1811 (x6862 (+ 96 x5526))) (= (x6862 (+ 32 x5526)) x7551) (= (x3624 x5242) x81) (= x2887 (x6862 (+ 128 x5526))) (= (x6862 (+ x5526 32)) x3753) (= (x6862 (+ 192 x5526)) x6446) (= x2653 (x3624 x5526)) (= (x3624 x2482) x3502) (= x3258 (x3624 x5526)) (= (x3624 x5526) x3960) (= x5956 (x3624 x5526)) (= (x3624 x526) x7636) (= x4726 (x3624 x3939)) (= x7614 (x3624 x5526)) (<= x81 224) (= x6602 (x3624 x6446))) (or (not x3752) (and x3752 (and (or (not x3353) (and x3353 (and (or (not x1287) (and (and (and (= (x6862 (+ 64 x7302)) x6302) (= (x6862 (+ x8170 64)) x1229) (= (x5337 x6302) x1540) (= (< 96 x3881) x85)) (or (not x85) (and (and (= x4828 (x4746 x927)) (= x5421 (x6862 (+ x8170 96))) (>= 128 x3881) (= (x6862 (+ 96 x7302)) x927)) x85))) x1287)) (and (= x3101 (x6862 (+ 32 x7302))) (= (> x3881 64) x1287) (= x8167 (x6862 (+ x8170 32))) (= (x7254 x3101) x3386))))) (and (= x5172 (x3624 x7302)) (= (< 32 x3881) x3353))))))) x6159)))))
(assert (x6021 x1265))
(assert (=> (<= x5708 10000) (= 0 (x8569 x5708))))
(assert (x6021 x3170))
(assert (x6021 x2319))
(assert (= (and x1744 (not x1997)) x6311))
(assert (= x3212 (and (not x5474) x5245)))
(assert (= (or x1560 x3273 x5773 x7739) x7723))
(assert (x6021 x6260))
(assert (=> (>= 10000 x7601) (= 0 (x8569 x7601))))
(assert (= (ite (<= x1919 32) x3278 (ite (>= 64 x1919) x4467 (ite (>= 96 x1919) x4583 (ite (<= x1919 128) x4084 (ite (<= x1919 160) x6538 (ite (<= x1919 192) x3882 x5579)))))) (x569 (x8371 64 x574 (ite (>= 32 x1919) x3278 (ite (>= 64 x1919) x4467 (ite (<= x1919 96) x4583 (ite (>= 128 x1919) x4084 (ite (>= 160 x1919) x6538 (ite (<= x1919 192) x3882 x5579))))))))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x7786 x2579 x6442)))
(assert (x3961 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x6021 x5363))
(assert (x2662 x6246 128))
(assert (= x5491 (x4408 (x4463 x5303 x1376 x7722 x5491))))
(assert (x6021 x7400))
(assert (x6021 x7042))
(assert (x6021 x4135))
(assert (x6517 (+ x5731 31) 32))
(assert (x6021 x437))
(assert (x6021 x1844))
(assert (x6021 x5789))
(assert (x6021 x3446))
(assert (= x1297 (x569 (x4863 x5107 x3059 x1297 x2154 x8061 x7331))))
(assert (=> (>= 10000 x7939) (= (x8569 x7939) 0)))
(assert (x6021 x1662))
(assert (x6021 x5464))
(assert (x6021 x6675))
(assert (= (x864 (x6067 x7741 x6208 x6643 x6566 x3171)) x7741))
(assert (x6021 x3035))
(assert (x6021 x4106))
(assert (= (=> (and (and (= (= x1883 x3329) x7164) (= (x5996 128) x3329)) (or (and (= (ite x7164 1 0) x6699) (not x7164)) (and (and (= x7360 (x5996 128)) (= (ite (> x7360 0) 1 0) x6699)) x7164))) x8035) x2391))
(assert (= x3523 (or x1344 x5388 x2356 x2512 x1221 x6139 x2470 x3335 x3826 x2290 x5081 x1978 x4629 x1774 x285 x5323 x1289 x5929 x2411 x3790 x2443 x137 x4799 x6596 x4316 x6737 x5578)))
(assert (x6021 x3952))
(assert (x6021 x4099))
(assert (= x432 (and x657 (not x4683))))
(assert (> (x1874 32 x3111) 10000))
(assert (= (x569 (x8371 64 x603 36)) 36))
(assert (< (x8371 x1409 x3287 x7102) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x7378))
(assert (x6021 x2199))
(assert (= (x569 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829)) x4519))
(assert (= (and x4296 x3167) x5730))
(assert (x6021 x146))
(assert (x6021 x2377))
(assert (x6021 x2676))
(assert (x2662 x3958 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x1449))
(assert (= x1507 (and (not x6753) x1833)))
(assert (x1635 32 (ite (not (= 0 x3562)) 1 0)))
(assert (x6021 x8525))
(assert (x7582 x703))
(assert (x6021 x6505))
(assert (x6021 x7971))
(assert (= (and x7399 x1419) x657))
(assert (x6021 x6424))
(assert (= (and x5149 x2100) x5388))
(assert (= x6330 (x2668 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230))))
(assert (x6021 x8141))
(assert (= x6400 (and x5906 x4391)))
(assert (< 10000 (x4463 x7786 x2374 x5271 x5708)))
(assert (< (x4463 x112 x3807 x4106 x7605) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x4148) (= (x8569 x4148) 0)))
(assert (= x5923 (x4408 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177))))
(assert (x6021 x4050))
(assert (x6021 x5975))
(assert (x6021 x7348))
(assert (x6021 x862))
(assert (x6021 x3496))
(assert (x6021 x6136))
(assert (x6021 x3671))
(assert (x6021 x5360))
(assert (not (x3961 (x8371 64 x3349 11))))
(assert (= x3582 (x4408 (x4463 x81 x2653 x217 x3582))))
(assert (= (=> (and (= x8346 (- x7101 132)) (= (> x5220 0) x7324) (= x8341 (x4375 1 x7473)) (= (x4628 x7473 2) x386) (= (ite (> x8341 0) x386 (x4375 127 x386)) x6879) (= x5220 (x8448 (- x8341 (mod (ite (> 32 x6879) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (=> (not x7324) x2218) (=> (and (and (= (x4375 1 x7473) x5458) (= x1350 (+ 32 x7101)) (= (= x5458 0) x3231)) x7324) (and (=> (and x3231 (and (= (+ x1350 x5674) x1071) (or (= x5674 32) (= 0 x5674)) (= (* (ite (not (= 0 x6879)) 1 0) 32) x5674) (= x7220 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7473)))) x745) (=> (and (not x3231) (and (and (= (x1874 32 104) x1290) (= (> x6879 0) x14)) (or (and (not x14) (= x313 0)) (and (and (<= x6879 32) (= (x8530 x1290) x7652) (= x313 32)) x14)))) x8026))))) x2777))
(assert (x6021 x1329))
(assert (= x8385 (or (and x5465 x8383) (and x3656 x4383))))
(assert (x6021 x2250))
(assert (=> (>= 10000 x6554) (= (x8569 x6554) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x3841 x2108 x7282 x1323 x3666)))
(assert (x6021 x2495))
(assert (x6021 x6085))
(assert (= 64 (x864 (x8371 64 x3727 6))))
(assert (x2662 x7917 256))
(assert (x6021 x4687))
(assert (= (x864 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794)) x1911))
(assert (= (=> (and (= (ite (< 0 x6102) x6015 (x4375 127 x6015)) x2396) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x5888) (= x8553 (x8371 64 x1859 11)) (<= x5888 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x3531 (x1469 x4898)) (= x6015 (x4628 x2545 2)) (= (x6862 (+ 32 x3444)) x3833) (= x6183 (x6862 (+ x3833 32))) (or (>= x5888 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x5888) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x5888)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x5888)) (= (+ 2 x2104) x4898) (= x3444 (x6862 (+ 32 x5888))) (= x6546 (x8371 64 x1859 11)) (= x679 (> x322 0)) (= (x8371 64 x3255 3) x384) (< x5888 x6183) (= (+ x6546 1) x2328) (= x518 (x8448 (- x6183 x5888))) (= (x8448 (- x2082 x6183)) x3080) (= x4948 (x6862 (+ 2 x6996))) (= x322 (x8448 (- x6102 (mod (ite (> 32 x2396) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3798 0) (= (x4375 1 x2545) x6102) (= (x5308 x2328) x7937) (= (x8448 (- x3080 32)) x2866) (or (<= x5888 115792089237316195423570985008687907853269984665640564039457584007913129639773) (and (>= x5888 115792089237316195423570985008687907853269984665640564039457584007913129639776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x5888)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x5888)) (= (x8371 64 x1859 11) x2104) (< x6183 x2082) (= (x8448 (- x518 32)) x4035) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x5888) (= (x4380 x384) x2545) (= x2082 (x6862 (+ x4948 32))) (= x6996 (x6862 (+ x6183 32))) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x5888) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x5888) (>= x5888 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x5888))) (and (=> (and x679 (and (<= x2082 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x4628 (+ 31 x2396) 32) x3389) (= x1663 (x6862 (+ x2082 (mod (+ 32 x8103) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x6862 (+ x2082 32)) x6180) (< x2082 x1663) (= x7800 (= x2396 0)) (= x8103 (* 32 x3389)) (>= x1663 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2082) (<= x2082 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (and (=> (and (not x7800) (= x6285 (< 31 x2396))) (and (=> (and (and (= x7707 (x4628 x6193 256)) (= (x4380 x384) x6193) (= x391 (* 256 x7707))) (not x6285)) x5583) (=> (and (and (or (not x5276) (and x5276 (and (= x5035 (x6862 (+ 32 x1661))) (= x2188 (x6676 x8457)) (not (> x2956 x5035))))) (and (= (x1874 32 x384) x1578) (= x7327 (x6676 x1578)) (= (x6862 (+ x6180 x2396)) x2956) (= x5276 (< x1661 x2956)) (= (+ 1 x1578) x8457) (= x1661 (x6862 (+ 32 x6180))))) x6285) x215))) (=> x7800 x5583))) (=> (and (and (= false x5935) (= true x765) (= 36 x6930)) (not x679)) x5280))) x3585))
(assert (x6021 x6788))
(assert (x6021 x4435))
(assert (x6021 x8340))
(assert (x6021 x6061))
(assert (= (and (not x3893) x7320) x3609))
(assert (= x6733 (x569 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371))))
(assert (not (x3961 (x4463 x636 x197 x5649 x3751))))
(assert (= x4712 (and x4039 (not x1913))))
(assert (not (x3961 (x8371 x7786 x2579 x6442))))
(assert (x7457 x1271))
(assert (= x3106 (and x6207 x7164)))
(assert (= (x8371 64 x3349 11) (x8569 (x8371 64 x3349 11))))
(assert (< (x6067 x8295 x2784 x8304 x6096 x7098) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x592 (=> (and (= x8447 (x6458 x4737)) (= x6303 (= 0 x8447)) (= x190 (x8448 (- x8135 128))) (= 128 x3073)) (and (=> (and (and (= (x7782 x8301) x755) (= (>= x755 x2198) x101) (= (< (+ x7868 x2198) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x7869) (= x7403 (and x7869 x101)) (= x7868 (x7782 x4737))) (not x6303)) (and (=> (and (not x7403) (= 0 x1945)) x3123) (=> (and (and (= x7526 x2645) (<= 196 x190) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2198 x7665)) (<= 196 x710) x1465 (>= 127 x5887) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x710) (<= 0 x7526) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x190) (= x190 x710) (= (+ x2198 x7665) x7526) (= x6632 x7289) (= x7753 x2250) (= false x33) (= false x268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7526) (= (x7782 x8301) x7910) (= x2785 (- x7910 x2198)) (= x1465 (= x649 (x7519 132))) (>= x398 1) (= 128 x1017) (= 3521034783 x8253) (= x7728 x1848) (= (x6469 132) x2891) (= (< 18446744073709551615 x2891) x871) (= (x6297 x4737) x7665) (= 94926909962862326217726538024181891405690106632559804934698421914364834480128 x6444) (<= x5887 127) (= x398 (x6458 x3611))) x7403) (and (=> x871 x3570) (=> (and (not x871) (and (= (x6862 (+ 164 x2891)) x15) (= 164 x34) (= (< x710 x15) x7930))) (and (=> (and (not x7930) (and (= x1902 (+ x1848 4)) (= x4034 (> x710 (+ x1902 31))))) (and (=> (and (and (= true x8386) (= 0 x8270) (= x704 false)) (not x4034)) x7126) (=> (and (and (= (x6469 x1902) x5398) (= x1052 (> x5398 18446744073709551615))) x4034) (and (=> (and (and (= x5765 (> x4195 x710)) (= x4195 (x6862 (+ x2884 x5398))) (= (+ x1902 32) x2884)) (not x1052)) (and (=> (and (not x5765) (and (and (= (x6157 320) x1821) (= (= 0 x6026) x7619) (= x8297 (x6157 160)) (= x2859 (x6157 160)) (= x8061 (x6157 224)) (= x1246 (x6157 128)) (= (x8371 x5107 x8206 x4569) x7720) (= x7098 (x6157 224)) (= x3345 (x6067 x8295 x2784 x8304 x6096 x7098)) (= (x8371 x8295 x6192 x2459) x816) (= (x6157 192) x979) (= (x6157 288) x7358) (= (x6157 160) x2459) (= x8451 (x6862 (+ 128 x2891))) (= x3059 (x6157 128)) (= (x6157 224) x8127) (= (x3631 0) x5565) (= (x6157 288) x1087) (= (x4863 x8295 x8185 x6925 x979 x5754 x2033) x5001) (= x5107 (x8448 (- x7306 128))) (= x6192 (x6157 128)) (= (x6157 160) x6466) (= x2033 (x6157 256)) (= (x6157 128) x2784) (= x6026 (x2809 x2083)) (= (x8371 64 x7753 7) x3218) (= x1175 (x6157 160)) (= x712 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509)) (= x1716 (x1874 x8295 x6990)) (= x7950 (x6157 128)) (= x2509 (x6157 288)) (= (x6157 128) x6452) (= (x8371 64 x6632 (ite (<= x5107 32) x7657 (ite (>= 64 x5107) x7720 (ite (<= x5107 96) x782 (ite (<= x5107 128) x3066 (ite (>= 160 x5107) x3077 (ite (>= 192 x5107) x4867 x1118))))))) x2083) (= (x6862 (+ 32 x4042)) x7306) (= x4703 (x6157 256)) (= x2877 (x6157 192)) (>= 224 x5107) (= (x6157 128) x8185) (= (x6157 192) x4323) (= x8295 (- x5107 32)) (= (x4463 x8295 x8358 x6466 x2877) x6093) (= (x6157 224) x8300) (= (x6157 256) x7086) (= x4867 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087)) (= (x6157 192) x5470) (= (x6157 128) x8358) (= x6096 (x6157 192)) (= x8304 (x6157 160)) (= x7657 (x1874 x5107 x1246)) (= (x6157 224) x2440) (= (x6067 x5107 x652 x8297 x5470 x2440) x3066) (= (x6157 224) x5754) (= (x4863 x5107 x3059 x1297 x2154 x8061 x7331) x3077) (= x7331 (x6157 256)) (= x483 (x6157 160)) (= (x6157 128) x6990) (= x5399 (x6157 160)) (= x782 (x4463 x5107 x1599 x5399 x4359)) (= (x6157 128) x8206) (= (x6157 160) x1297) (= (x6157 160) x6925) (>= x5107 32) (= (x6157 128) x3588) (= x4569 (x6157 160)) (= (x6157 128) x1599) (= x652 (x6157 128)) (= x2574 (x6157 224)) (= x7437 (x6157 192)) (= x4042 (x6862 (+ x2891 128))) (= x4359 (x6157 192)) (= x6669 (x6157 256)) (= (x6157 192) x2020) (= (x6157 192) x2154) (= x4593 (ite (= 0 x8295) x5565 (ite (<= x8295 32) x1716 (ite (>= 64 x8295) x816 (ite (>= 96 x8295) x6093 (ite (>= 128 x8295) x3345 (ite (<= x8295 160) x5001 x712))))))) (= (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821) x1118)) (or (and (and (or (and x6595 (and (= x5969 (x8039 224)) (= x6204 (x4463 x1911 x1105 x5420 x538)) (= x7539 (x8039 160)) (= x3544 (x8039 128)) (= x509 false) (= x2970 (x3631 0)) (= x7828 (x8039 256)) (= (* x7685 32) x8478) (= true x3479) (= (* 32 x8274) x3812) (= (x8039 128) x7510) (= (x8039 224) x2164) (>= x1911 32) (= (x8039 192) x2535) (= (x8039 256) x2528) (= (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829) x6152) (= x1531 (x8039 128)) (= x530 (x6862 (+ x2891 128))) (= x8038 (ite (= 0 x112) x2970 (ite (>= 32 x112) x1729 (ite (>= 64 x112) x6620 (ite (>= 96 x112) x6684 (ite (>= 128 x112) x523 (ite (<= x112 160) x6719 x4152))))))) (= (x8039 160) x5997) (= x3234 (x6862 (+ x8478 32))) (= x2434 (x8039 192)) (or (>= x2891 115792089237316195423570985008687907853269984665640564039457584007913129639905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x2891)) (= (x8039 160) x6665) (= (x4863 x112 x1756 x6665 x2535 x7887 x2377) x6719) (= x4709 (x8039 160)) (= (x8039 256) x2377) (= x523 (x6067 x112 x6250 x8267 x825 x6142)) (= x3969 128) (= x5721 (x8039 128)) (= x1729 (x1874 x112 x6919)) (= (x8039 256) x2534) (= x6865 (x8039 128)) (= x5307 (x6862 (+ x3250 x5398))) (= x8274 (x4628 x4045 32)) (= x4829 (x8039 320)) (= x8179 (x6862 (+ 160 x2891))) (<= x1911 224) (= x6978 (x8039 288)) (= x4106 (x8039 160)) (= (x8039 192) x1152) (= x6663 (x8371 64 x6632 (ite (<= x1911 32) x1094 (ite (<= x1911 64) x6429 (ite (<= x1911 96) x6204 (ite (>= 128 x1911) x61 (ite (<= x1911 160) x1250 (ite (>= 192 x1911) x6248 x6152)))))))) (= x1105 (x8039 128)) (= 0 x8270) (= (x6862 (+ x4907 x3234)) x1013) (= x538 (x8039 192)) (= x4308 (x8039 160)) (= x4907 (+ x3812 160)) (= (x8039 224) x7887) (= (x8039 160) x4519) (= (x8039 160) x5420) (= x6248 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794)) (= (x8371 x112 x7510 x987) x6620) (<= 161 x1013) (= (x8039 224) x4409) (= x6919 (x8039 128)) (= x2878 (x8039 192)) (= (x8039 128) x1743) (= x4152 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)) (= x112 (- x1911 32)) (= x4734 (x8039 160)) (or (>= 31 x7530) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x7530)) (= (x8039 128) x3807) (= (x6067 x1911 x3544 x5997 x2878 x5969) x61) (= x8422 (x8039 224)) (= (x6862 (+ x2891 128)) x2002) (= x1094 (x1874 x1911 x1743)) (= (x8039 128) x1756) (= x7530 (x2266 x4907)) (= (x8039 192) x6785) (= x1243 (x8039 128)) (= x4999 (x8039 288)) (= (x4628 x5549 32) x7685) (= x1250 (x4863 x1911 x1243 x4709 x2434 x4409 x2534)) (= (x8039 224) x6142) (= (x8039 128) x5182) (= (x8039 288) x1794) (= x5026 (x8039 192)) (= (x8039 160) x987) (= (x6862 (+ x5398 31)) x5549) (= (x6862 (+ x2891 31)) x4045) (= x8326 (x8039 256)) (= x7702 (x8371 64 x7753 7)) (= x206 (x8039 224)) (< x4907 x1013) (= (x8039 192) x7605) (= x3250 (x6862 (+ 32 x4907))) (= x6250 (x8039 128)) (= x6429 (x8371 x1911 x5721 x7539)) (= (x8039 160) x8267) (= (x8039 192) x825) (= (x4463 x112 x3807 x4106 x7605) x6684) (= x1911 (x8448 (- (mod (+ 32 x530) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128))))) (and (and (= 132 x8270) (= x8499 false) (= true x5858)) (not x6595))) (and (= x2686 (x8371 x6151 x8188 x1872)) (= x6819 (x2893 256)) (= (= x6026 (ite (= 0 x6151) x5659 (ite (<= x6151 32) x8031 (ite (<= x6151 64) x2686 (ite (<= x6151 96) x1102 (ite (>= 128 x6151) x1707 (ite (>= 160 x6151) x2094 (ite (<= x6151 192) x8518 x1064)))))))) x6595) (= (x2893 128) x2347) (= x7285 (x2893 256)) (= (x2893 128) x7156) (= (x2893 128) x8188) (= x8092 (x2893 192)) (= x5809 (x2893 224)) (>= 224 x6151) (= x758 (x2893 320)) (= x1102 (x4463 x6151 x2347 x739 x8571)) (= (x2893 192) x2478) (= (x2893 128) x199) (= (x2893 160) x5344) (= (x2893 192) x3925) (= (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758) x1064) (= x5373 (x2893 128)) (= x6351 (x2893 192)) (= (x1874 x6151 x199) x8031) (= x7805 (x2893 288)) (= x1707 (x6067 x6151 x5373 x4342 x8092 x2907)) (= x6151 (x8448 (- x6903 128))) (= x4342 (x2893 160)) (= x2911 (x2893 224)) (= (x2893 224) x4390) (= x739 (x2893 160)) (= (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805) x8518) (= x6903 (x6862 (+ 128 x5398))) (= x7375 (x2893 288)) (= x1903 (x2893 160)) (= x8591 (x2893 128)) (= x8571 (x2893 192)) (= (x2893 128) x876) (= x5659 (x3631 0)) (= x6088 (x2893 256)) (= x1872 (x2893 160)) (= (x4863 x6151 x876 x1903 x6351 x2911 x6088) x2094) (= (x2893 160) x7417) (= x2907 (x2893 224)))) (not x7619)) (and x7619 (and (= false x3916) (= 132 x8270) (= true x1337)))))) x7126) (=> x5765 x5672))) (=> x1052 x3570))))) (=> x7930 x5672))))))) (=> (and x6303 (and (= x2371 x8310) (= x4510 x2078) (= x4070 2) (= x1900 x6878) (= x8394 x6883) (= x145 x2796) (= x3020 x2600) (= x7153 0) (= x4737 x3356) (= x8181 x7627) (= x6337 x4848) (= x7534 x352) (= x2609 x225) (= x4670 x6299) (= x3255 x3828) (= x2352 true) (= x2423 false))) x4830)))))
(assert (x2186 x507))
(assert (x6021 x7825))
(assert (> (x8371 64 x3255 4) 10000))
(assert (x6021 x2838))
(assert (x6021 x2231))
(assert (= x2295 (or (and (not x6050) x1117) (and x4020 (not x581)) x2343 (and (not x6336) x4266) (and x7576 (not x797)))))
(assert (= x1344 (and x2109 x6762)))
(assert (= x5697 (or x897 x5690 x886 x6853 x8051)))
(assert (= (and (not x7664) x5944) x4401))
(assert (= (x4408 (x4863 x5107 x3059 x1297 x2154 x8061 x7331)) x2154))
(assert (x6021 x8222))
(assert (= (x4378 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617)) x960))
(assert (x6021 x1533))
(assert (= (x8569 (x4463 x112 x3807 x4106 x7605)) (x4463 x112 x3807 x4106 x7605)))
(assert (= (and x1241 x3253) x2764))
(assert (x1635 32 (ite (not (= x4248 0)) 1 0)))
(assert (= (x8569 (x8371 64 x2008 (ite (>= 32 x1891) x6104 (ite (>= 64 x1891) x2684 (ite (<= x1891 96) x7540 (ite (>= 128 x1891) x7449 (ite (<= x1891 160) x5213 (ite (>= 192 x1891) x5567 x6398)))))))) (x8371 64 x2008 (ite (>= 32 x1891) x6104 (ite (>= 64 x1891) x2684 (ite (>= 96 x1891) x7540 (ite (>= 128 x1891) x7449 (ite (>= 160 x1891) x5213 (ite (<= x1891 192) x5567 x6398)))))))))
(assert (x6021 x2229))
(assert (x6021 x2089))
(assert (< 10000 (x8371 64 x1130 0)))
(assert (x6021 x5259))
(assert (x6021 x5068))
(assert (x6021 x3938))
(assert (= (and x3473 x1330) x4431))
(assert (x6021 x947))
(assert (x6021 x4831))
(assert (= (x4463 x6134 x7580 x5525 x125) (x8569 (x4463 x6134 x7580 x5525 x125))))
(assert (x6021 x6216))
(assert (x6021 x1229))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x2046 12)))
(assert (= (and (not x3253) x1241) x3188))
(assert (> (x4863 x8295 x8185 x6925 x979 x5754 x2033) 10000))
(assert (x6021 x930))
(assert (= x1226 (and x573 (not x5662))))
(assert (= (x8569 (x8371 64 x5207 36)) (x8371 64 x5207 36)))
(assert (= x483 (x569 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087))))
(assert (x7457 x3777))
(assert (=> (<= x5743 10000) (= 0 (x8569 x5743))))
(assert (= x181 (and (not x5460) x2096)))
(assert (x2662 x507 32))
(assert (= (and x3835 x3244) x6618))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x81 x161 x3096)))
(assert (= (x8569 (x1874 x3841 x462)) (x1874 x3841 x462)))
(assert (= (x569 (x4463 x6151 x2347 x739 x8571)) x739))
(assert (= (x8569 310283853) 0))
(assert (x6021 x1441))
(assert (= (x8569 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087)) (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087)))
(assert (< 10000 (x4863 x5303 x3458 x3478 x2190 x1189 x7928)))
(assert (= x8439 (and x1448 x5977)))
(assert (> (x8371 64 x77 36) 10000))
(assert (= x6933 (x986 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736))))
(assert (x6021 x4548))
(assert (= x4864 (and x3739 x4809)))
(assert (x3961 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (= x1277 (or (and x2363 x5499) (and x4544 x3257) (and x7641 x6364))))
(assert (x6021 x7198))
(assert (= (=> (= x5383 (= x565 0)) (and (=> (and (not x5383) (and (= (= x2084 x6490) x6935) (= x3501 160))) (and (=> (and (and (= (* x3308 1000000000) x3613) (= x1321 false) (>= 127 x7742) (= x1620 36) (>= 127 x7742) (>= x1980 1) (= (< (* x3308 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x8406) (= x1312 x7850) (= false x3796) (= (and x1846 x8406) x2121) (= x6598 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= 3628442803 x2446) (= (<= x3613 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1846) (= (x6458 x2084) x1980) (= x3308 x7850)) x6935) (and (=> (not x2121) x2894) (=> (and x2121 (and (= (x8371 64 x3611 2) x1057) (>= x3613 0) (= x3618 (x8075 x1057)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3613) (= (> x3618 x815) x4075) (= (x5025 x364) x815) (= x3613 x6085) (= x364 (x8371 64 x3611 1)))) (and (=> (and (and (= (x8448 (- x815 x3618)) x4313) (= (> x4313 x815) x2525)) (not x4075)) (and (=> (and x2525 (and (= true x7691) (= x6477 false) (= x5580 36))) x1559) (=> (and (= x5428 (ite (> x6085 x4313) 1 0)) (not x2525)) x7166))) (=> (and (= (ite x4075 1 0) x5428) x4075) x7166))))) (=> (and (not x6935) (and (>= 1461501637330902918203684832716283019655932542975 x2738) (= x6490 x8301) (<= x6490 1461501637330902918203684832716283019655932542975) (= 3628442803 x8222) (= x7177 false) (= 36 x940) (= x7512 x3308) (= x4732 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= x4092 (x6458 x8301)) (<= 1 x6490) (= (= x2738 x3611) x7256) (>= x4092 1) (<= x4710 127) (<= x4710 127) (= false x5321))) (and (=> (and (not x7256) (and (= x5160 0) (= x3240 x6490) (= x4642 2) (= x2828 x1912) (= x499 false) (= true x3183) (= x7033 0) (= x3308 x7483))) x7857) (=> (and x7256 (and (<= x6833 255) (= x2100 (= x6833 255)))) (and (=> (and (and (= x3308 x7483) (= x2089 2) (= 0 x7033) (= x8096 true) (= x1912 x2828) (= x6490 x3240) (= x5160 36) (= x8523 false)) x2100) x7857) (=> (and (not x2100) (and (= x7840 (x8371 64 x6833 36)) (= (= 0 x2902) x7399) (= x5207 (x4375 255 x8200)) (= (x4375 255 x8200) x4169) (= (+ 1 x6833) x8200) (= (x2763 x7840) x2902))) (and (=> (and (= x4683 (= x5207 255)) x7399) (and (=> (and (not x4683) (and (= (x4375 255 x4032) x3727) (= (+ 1 x5207) x4032) (>= 1461501637330902918203684832716283019655932542975 x1570) (= (x4375 255 x4032) x5772) (= x7167 (= x3727 255)) (= (x7874 x885) x1570) (= x885 (x8371 64 x5207 2)))) (and (=> (and (and (= (= x5635 255) x2939) (<= x7284 65535) (= (x7623 x2529) x7284) (= x2362 (+ 1 x3727)) (= (x4375 255 x2362) x5635) (= (x4375 255 x2362) x4151) (= (x8371 64 x3727 6) x2529)) (not x7167)) (and (=> x2939 x1803) (=> (and (not x2939) (and (= x4446 (+ x5635 1)) (>= 1461501637330902918203684832716283019655932542975 x4462) (= x4060 (x4375 255 x4446)) (= (x4375 255 x4446) x7039) (= x4462 (x7874 x1506)) (= x1506 (x8371 64 x5635 2)) (= (= x4060 255) x3172))) (and (=> x3172 x2312) (=> (and (and (= x2802 (x4375 255 x1878)) (= (+ 1 x4060) x1878) (= (= 0 x1671) x5060) (= x1671 (x6458 x2738)) (= 128 x5082) (= x2355 (x2763 x7044)) (= (x8371 64 x4060 36) x7044) (= (x4375 255 x1878) x7398)) (not x3172)) (and (=> (and (not x5060) (and (>= x7794 1) (= x1570 x2786) (>= 1461501637330902918203684832716283019655932542975 x6782) (= x1510 false) (= (x6458 x3611) x7794) (<= x1284 127) (= false x4696) (= 132 x5638) (= x2712 x7284) (>= 127 x1284) (= x6561 x2355) (= 3812630263 x3514) (= x4462 x1219) (= (= x8301 x6782) x5805) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x448))) (and (=> (and (and (= x3922 false) (= x7261 100) (= x73 true)) (not x5805)) x7174) (=> (and x5805 (= x4274 (< x2355 100000))) (and (=> (and (and (= false x5803) (= x7261 4) (= x351 true)) x4274) x7174) (=> (and (and (= x5108 (x2763 x7044)) (= x5108 x4250) (= (x7623 x2529) x3653) (= x4523 x96) (= x1912 x6717) (= x3011 0) (= x96 (x7874 x1506)) (= x3320 x2802) (= 1 x5129) (= x3496 (x7874 x885))) (not x4274)) x8320))))) (=> (and (and (= x5160 0) (= x3308 x7483) (= false x2742) (= 0 x7033) (= x1912 x2828) (= x3240 x6490) (= true x531) (= x1060 2)) x5060) x7857))))))) (=> x7167 x7395))) (=> x4683 x1618))) (=> (and (= x12 (= x2902 1)) (not x7399)) (and (=> (and (= (= x5207 255) x7007) x12) (and (=> (and (not x7007) (and (= x4488 (x4375 255 x7416)) (= (x7623 x2080) x7391) (= x7416 (+ 1 x5207)) (= (x4375 255 x7416) x3268) (= (x8371 64 x5207 6) x2080) (= x3853 (= 255 x3268)) (>= 65535 x7391))) (and (=> x3853 x1803) (=> (and (not x3853) (and (= x4100 (x8448 (- x3010 (mod (ite (> 32 x4248) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x4472 (x4375 255 x3777)) (<= x2008 18446744073709551615) (= (x8371 64 x3268 12) x4344) (= x5363 (x4375 255 x3777)) (= (ite (> x3010 0) x4663 (x4375 127 x4663)) x4248) (= (x4628 x7479 2) x4663) (= (x28 x4344) x2008) (= x3010 (x4375 1 x7479)) (= x8420 (> x4100 0)) (= (+ 1 x3268) x3777))) (and (=> (and x8420 (and (= (= x6343 0) x7900) (= (x4375 1 x7479) x6343))) (and (=> (and (and (and (= x2577 (< 0 x4248)) (= (x1874 32 103) x5926)) (or (and (and (= 32 x5787) (>= 32 x4248) (= (x7520 x5926) x6959)) x2577) (and (= 0 x5787) (not x2577)))) (not x7900)) x7622) (=> (and (and (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7479) x3291) (= (+ x2538 292) x7101) (= x2538 (* 32 (ite (not (= x4248 0)) 1 0))) (or (= x2538 32) (= x2538 0))) x7900) x2777))) (=> (not x8420) x2218))))) (=> x7007 x1618))) (=> (and (not x12) (= x730 (= 2 x2902))) (and (=> (and (= x8515 (= x5207 255)) x730) (and (=> (and (and (= (+ x5207 1) x7894) (= (x8371 64 x5207 6) x1730) (= x6053 (= 255 x2046)) (= x6092 (x7623 x1730)) (= (x4375 255 x7894) x1041) (= x2046 (x4375 255 x7894)) (>= 65535 x6092)) (not x8515)) (and (=> (and (not x6053) (and (= x1049 (< 0 x1792)) (= x415 (ite (> x8227 0) x766 (x4375 127 x766))) (= x282 (x4375 255 x1546)) (= x766 (x4628 x7479 2)) (= x1792 (x8448 (- x8227 (mod (ite (> 32 x415) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3185 (x28 x5418)) (<= x3185 18446744073709551615) (= (x4375 1 x7479) x8227) (= x6962 (x4375 255 x1546)) (= x1546 (+ x2046 1)) (= (x8371 64 x2046 12) x5418))) (and (=> (and (and (= (x4375 1 x7479) x5487) (= (= 0 x5487) x1687)) x1049) (and (=> (and (and (or (and x7090 (and (= 32 x5380) (<= x415 32) (= x6563 (x7520 x2549)))) (and (= x5380 0) (not x7090))) (and (= (> x415 0) x7090) (= x2549 (x1874 32 103)))) (not x1687)) x336) (=> (and x1687 (and (or (= 0 x1268) (= 32 x1268)) (= (+ 292 x1268) x7687) (= x162 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7479)) (= (* (ite (not (= 0 x415)) 1 0) 32) x1268))) x5875))) (=> (not x1049) x2218))) (=> x6053 x1803))) (=> x8515 x1618))) (=> (and (not x730) (= x3400 (= 3 x2902))) (and (=> (and x3400 (= x858 (= 255 x5207))) (and (=> (and (not x858) (and (= x4365 (x8371 64 x5207 36)) (= x3003 (x2763 x4365)) (= (= x7970 255) x800) (= x4371 (x4375 255 x2453)) (= (x4375 255 x2453) x7970) (= x2453 (+ x5207 1)))) (and (=> (and (and (= (x6458 x2738) x1533) (= (+ 1 x7970) x4981) (= x7563 (x4375 255 x4981)) (= x2022 (x5687 x8024)) (= x8024 (x8371 64 x7970 100)) (= x4052 128) (= (= 0 x1533) x4315) (= x4718 (x4375 255 x4981))) (not x800)) (and (=> (and (and (= x7033 0) (= x1912 x2828) (= false x2849) (= x8554 2) (= x7483 x3308) (= x951 true) (= x5160 0) (= x6490 x3240)) x4315) x7857) (=> (and (not x4315) (and (= (= x6490 x8301) x6380) (= x3950 false) (= x7370 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= x3003 x651) (= 68 x1402) (= x8184 (x6458 x3611)) (= x2022 x4576) (= 3957931183 x4620) (<= 1 x8184) (>= 127 x249) (= x4219 x651) (= x4857 false) (>= 127 x249))) (and (=> (and (and (= true x2910) (= false x7936) (= 4 x5445)) (not x6380)) x8044) (=> (and (and (= (< 3 x7474) x3564) (= x4502 (x8371 64 x3003 11)) (<= x7474 255) (= x7474 (x1977 x4502))) x6380) (and (=> (and x3564 (and (= false x7533) (= 36 x5445) (= x1464 true))) x8044) (=> (and (= x7629 (= 1 x7474)) (not x3564)) (and (=> (and (and (= x5222 (x8371 64 x3003 11)) (= x4485 (x8371 64 x3003 11)) (= 128 x7624) (= (+ x5222 2) x1457) (= (= x2376 0) x5239) (= (x6458 x3611) x2376)) x7629) (and (=> (and (not x5239) (and (and (= 486791245 x1180) (= x4575 100) (= (x6458 x3611) x7856) (= x6860 false) (= 0 x7503) (= 0 x4759) (= x5372 false) (>= 127 x8134) (<= x8134 127) (= x2054 x4219) (= x2984 0) (= x3747 false) (= 0 x2335) (= x799 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= x6505 x2054) (>= x7856 1)) (or (and (= (ite x5372 1 0) x505) (not x5372)) (and (and (<= x6782 1461501637330902918203684832716283019655932542975) (= (ite (not (= x6782 x3611)) 1 0) x505)) x5372)))) x3628) (=> (and (and (= x5445 0) (= x2272 false) (= x5780 true)) x5239) x8044))) (=> (and (not x7629) (and (= x4832 false) (= 4 x5445) (= true x7003))) x8044))))))))) (=> x800 x7395))) (=> x858 x1618))) (=> (and (not x3400) (= x7727 (= 4 x2902))) (and (=> (and (= x283 (= x2902 5)) (not x7727)) (and (=> (and x283 (= x5325 (= x5207 255))) (and (=> x5325 x1618) (=> (and (and (= (x4375 255 x4108) x2532) (= (x2763 x3941) x5477) (= (x8371 64 x5207 36) x3941) (= x648 (x4375 255 x4108)) (= (= 255 x648) x2165) (= x4108 (+ x5207 1))) (not x5325)) (and (=> x2165 x7395) (=> (and (and (= (x4375 255 x6017) x1887) (= x6017 (+ 1 x648)) (= (= 255 x1887) x4331) (= (x7623 x2126) x7601) (>= 65535 x7601) (= x2126 (x8371 64 x648 6)) (= x4460 (x4375 255 x6017))) (not x2165)) (and (=> (and (not x4331) (and (= x6246 (x4628 x7479 2)) (= x414 (+ x1887 1)) (= x928 (x4375 255 x414)) (= x574 (x28 x4743)) (= (x4375 255 x414) x1519) (>= 18446744073709551615 x574) (= x508 (x8448 (- x7666 (mod (ite (> 32 x7371) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x4375 1 x7479) x7666) (= x2934 (> x508 0)) (= (ite (> x7666 0) x6246 (x4375 127 x6246)) x7371) (= x4743 (x8371 64 x1887 12)))) (and (=> (not x2934) x7714) (=> (and (and (= x8084 (x4375 1 x7479)) (= (= 0 x8084) x7078)) x2934) (and (=> (and (not x7078) (and (or (and (and (= (x7520 x4824) x511) (= x2228 32) (<= x7371 32)) x1273) (and (= x2228 0) (not x1273))) (and (= x4824 (x1874 32 103)) (= (> x7371 0) x1273)))) x3664) (=> (and (and (or (= x3550 0) (= x3550 32)) (= x3550 (* 32 (ite (not (= 0 x7371)) 1 0))) (= (+ x3550 292) x8541) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7479) x3830)) x7078) x972))))) (=> x4331 x2312))))))) (=> (and (= x2055 (= x2902 6)) (not x283)) (and (=> (and (= x8520 (= x5207 255)) x2055) (and (=> x8520 x1618) (=> (and (and (= x281 (x4375 255 x2716)) (= x6044 (x2763 x2932)) (= x2932 (x8371 64 x5207 36)) (= (+ 1 x5207) x2716) (= x2364 (x4375 255 x2716)) (= (= x281 255) x6896)) (not x8520)) (and (=> x6896 x7395) (=> (and (not x6896) (and (= x6304 (x2763 x2612)) (= (x4375 255 x6132) x192) (= x5080 (x4375 255 x6132)) (= (= 255 x192) x4192) (= (x8371 64 x281 36) x2612) (= (+ 1 x281) x6132))) (and (=> (and (not x4192) (and (= x2797 (x4375 255 x6847)) (= x6847 (+ x192 1)) (= (x2763 x3145) x1123) (= x3145 (x8371 64 x192 36)) (= x2516 (x4375 255 x6847)) (= (= 255 x2516) x7343))) (and (=> (and (not x7343) (and (= x2330 (+ 1 x2516)) (= x2109 (= x2719 0)) (= (x2763 x5278) x7411) (= x1673 (x4375 255 x2330)) (= x5008 (x4375 255 x2330)) (= x2719 (x6458 x2738)) (= 128 x375) (= (x8371 64 x2516 36) x5278))) (and (=> (and (and (= (<= x6044 x3313) x2977) (= (x8302 x8301) x3313) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3973 x6044)) x1675) (= x3973 (x8302 x2738)) (= (and x2977 x1675) x4332)) (not x2109)) (and (=> (and (not x4332) (and (= x5236 x5008) (= x2122 x6490) (= x4348 0) (= x3308 x7882) (= x8316 x1912) (= x1163 0))) x4621) (=> (and (and (or (and (not x7549) (= (ite x7549 1 0) x1866)) (and (and (= (ite (not (= x8301 x6782)) 1 0) x1866) (>= 1461501637330902918203684832716283019655932542975 x6782)) x7549)) (and (= 486791245 x8001) (<= 0 x1108) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1108) (= (x6458 x3611) x4040) (= x7411 x275) (<= x2952 127) (= x275 x1187) (= x6407 x1108) (= x2076 (- x7287 x6044)) (= x2426 x8223) (= (x8302 x8301) x7287) (= x6247 x6708) (= x1368 (x23 x2738)) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x2523) (>= 127 x2952) (= x1123 x6247) (< (+ x6044 x1368) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= false x1520) (>= x4040 1) (= x6304 x2426) (= x1108 (+ x6044 x1368)) (= (not (= x3611 x8301)) x7549) (= x3426 false) (= x7618 100))) x4332) x3245))) (=> (and x2109 (and (= x3240 x6490) (= x7483 x3308) (= 0 x5160) (= 2 x5017) (= x1912 x2828) (= x7964 false) (= 0 x7033) (= true x1423))) x7857))) (=> x7343 x2312))) (=> x4192 x1803))))))) (=> (and (not x2055) (= x1278 (= x2902 7))) (and (=> (and (= x1258 (= x5207 255)) x1278) (and (=> x1258 x1618) (=> (and (and (= x841 (x8371 64 x5207 2)) (= 128 x6813) (= (+ 1 x5207) x4906) (= x3701 (x4375 255 x4906)) (= x6715 (= 0 x2196)) (= x4771 (x7874 x841)) (= x6752 (x4375 255 x4906)) (<= x4771 1461501637330902918203684832716283019655932542975) (= x2196 (x6458 x2738))) (not x1258)) (and (=> (and (not x6715) (and (= x4694 36) (<= 1 x5859) (= x5067 false) (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x6440) (= x580 x4771) (<= x3829 127) (= x5859 (x6458 x3611)) (>= 1461501637330902918203684832716283019655932542975 x6782) (= x2277 (= x8301 x6782)) (= x6913 false) (>= 127 x3829) (= x10 2770781680))) (and (=> (and (and (= (x8302 x3611) x3619) (= (< 0 x3619) x4842)) x2277) (and (=> (and (and (= x7245 x1912) (= x3527 x3701)) (not x4842)) x5253) (=> (and (and (= x6252 (and x4760 x7418)) (= x7418 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7529 x3619))) (= x7529 (x8302 x4771)) (= x4760 (<= x3619 x6378)) (= x4626 128) (= x6378 (x8302 x3611))) x4842) (and (=> (and (not x6252) (and (= x2211 x3701) (= x4912 0) (= x1850 x1912) (= x839 0))) x3081) (=> (and (and (and (= x3186 (+ x2829 x3619)) (<= x3186 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3619 x2829)) (= x7734 (x8302 x3611)) (<= 0 x3186) (= x7698 (> x2648 0)) (= x7142 (- x7734 x3619)) (= x2829 (x7252 x4771)) (= x7468 x3186)) (or (and x7698 (and (= x8528 x6734) x7921 (= (= (x8355 x4771) x3986) x7921) (= x2418 (x38 x3611)) (= x3629 (<= x2418 (x8355 x3611))) x3629 (>= 4294967295 x8490) (= x3986 (x38 x4771)) (= x7948 x2833))) (and (and (= x8528 x3701) (= x2833 x1912)) (not x7698)))) x6252) x4314))))) (=> (and (and (= x6414 100) (= true x1603) (= x1408 false)) (not x2277)) x7323))) (=> (and x6715 (and (= 0 x7033) (= x5386 false) (= x6490 x3240) (= x331 2) (= x2828 x1912) (= x6609 true) (= x5160 0) (= x7483 x3308))) x7857))))) (=> (and (= x7664 (= 8 x2902)) (not x1278)) (and (=> (and (not x7664) (and (= x5274 x3308) (= x5054 x5207) (= x1912 x4303) (= x1254 x6490))) x7255) (=> (and (= x7677 (= x5207 255)) x7664) (and (=> (and (and (= (= x5644 0) x5474) (= (x2763 x626) x39) (= x8095 (x4375 255 x2881)) (= x5644 (x6458 x2738)) (= x3559 128) (= x6066 (x4375 255 x2881)) (= x2881 (+ x5207 1)) (= x626 (x8371 64 x5207 36))) (not x7677)) (and (=> (and (not x5474) (and (= false x7456) (= (= x8301 x6782) x3154) (>= 127 x3764) (= 36 x4763) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x7091) (>= 127 x3764) (= x39 x5555) (>= 1461501637330902918203684832716283019655932542975 x6782) (<= 1 x902) (= x846 false) (= x7985 1313998243) (= x902 (x6458 x3611)))) (and (=> (and x3154 (= (> 100000 x39) x590)) (and (=> (and (and (= (x2763 x626) x6707) (= x6707 x7082) (= x6066 x4302) (= x1020 1) (= x2468 x1912) (= 0 x4194) (= x1231 x6490)) (not x590)) x2368) (=> (and (and (= true x4122) (= 4 x5855) (= false x4646)) x590) x4158))) (=> (and (and (= 100 x5855) (= x2620 true) (= x2381 false)) (not x3154)) x4158))) (=> (and (and (= x1912 x2828) (= false x5471) (= x3308 x7483) (= x7033 0) (= x5160 0) (= true x4269) (= x4784 2) (= x6490 x3240)) x5474) x7857))) (=> x7677 x1618))))))))))) (=> (and (= (= 255 x5207) x3670) x7727) (and (=> (and (and (= (+ 1 x5207) x4731) (= (x2763 x4956) x7216) (= x5472 (x4375 255 x4731)) (= x5898 (x4375 255 x4731)) (= x8529 (= 255 x5898)) (= (x8371 64 x5207 36) x4956)) (not x3670)) (and (=> (and (and (= (+ 1 x5898) x1890) (= x2768 (= 255 x8226)) (= x8226 (x4375 255 x1890)) (= (x4375 255 x1890) x7042) (= x7262 (x5687 x4678)) (= (x8371 64 x5898 100) x4678)) (not x8529)) (and (=> x2768 x1803) (=> (and (not x2768) (and (= (+ x8226 1) x1665) (not (and x6210 x5448)) (= x3240 x6490) (= x5240 true) (= x6279 (x4375 255 x1665)) (= (x2763 x7152) x1121) (= x5158 (x4375 255 x1665)) (= false x834) (= (< (+ x4263 x7216) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5448) (= x2693 (x8302 x8301)) (= x4263 (x8302 x2738)) (= x7033 0) (= x1912 x2828) (= x7152 (x8371 64 x8226 36)) (= 0 x5160) (= (<= x7216 x2693) x6210) (= 2 x3696) (= x7483 x3308))) x7857))) (=> x8529 x7395))) (=> x3670 x1618))))))))))))))))))) (=> (and x5383 (and (= x3308 x4228) (= x1941 x6490) (= x8177 x1912))) x3222))) x3149))
(assert (x6021 x1079))
(assert (x6021 x902))
(assert (= x2748 (x4378 (x4863 x1883 x2748 x5837 x2413 x4530 x2755))))
(assert (= (x569 (x4863 x8295 x8185 x6925 x979 x5754 x2033)) x6925))
(assert (= (x986 (x4863 x81 x7614 x3028 x8276 x1764 x4340)) x4340))
(assert (x6021 x623))
(assert (= (x8371 x1911 x5721 x7539) (x8569 (x8371 x1911 x5721 x7539))))
(assert (x6021 x3470))
(assert (= x6368 (or (and x2727 x4183) (and x5020 x4397) (and x7062 x8348) (and x3152 x5173) (and x6013 x6115))))
(assert (x2186 x1832))
(assert (x6021 x2655))
(assert (x6021 x2648))
(assert (x6021 x7451))
(assert (=> (<= x1821 10000) (= (x8569 x1821) 0)))
(assert (x6021 x8188))
(assert (= (and x3189 x6346) x3854))
(assert (x6021 x3776))
(assert (x6021 x1482))
(assert (x6021 x8034))
(assert (= (x6067 x62 x3305 x6018 x6655 x4882) (x8569 (x6067 x62 x3305 x6018 x6655 x4882))))
(assert (x7457 x7025))
(assert (= (x8569 34591783479076665047274362116096262703299809091723987870014818727818681087008) 0))
(assert (= x3310 (or (and x8522 (not x5677)) (and x7974 (not x5717)) (and (not x6399) x5234))))
(assert (x2662 x766 128))
(assert (=> (<= x3028 10000) (= 0 (x8569 x3028))))
(assert (=> (>= 10000 x1522) (= (x8569 x1522) 0)))
(assert (=> (<= x3342 10000) (= (x8569 x3342) 0)))
(assert (x6021 x7361))
(assert (= (and x7747 (not x8475)) x2189))
(assert (=> (>= 10000 x5969) (= (x8569 x5969) 0)))
(assert (x6021 x458))
(assert (x6021 x256))
(assert (x2662 x7025 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (x569 (x4463 x3841 x6391 x1309 x7330)) x1309))
(assert (x6021 x8150))
(assert (x2662 x6769 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x8342 (not x3848)) x3617))
(assert (x6021 x1468))
(assert (x6021 x5704))
(assert (= (x569 (x6067 x112 x6250 x8267 x825 x6142)) x8267))
(assert (= x2670 (=> (= (= 0 x7411) x3293) (and (=> (and (not x3293) (and (= x3109 x1875) (= x7613 x8175) (= x2738 x733) (= x7709 x3308) (= x8498 x5008) (= x1130 x129) (= x6782 x213) (= 128 x344) (= x3331 x4742) (= x7411 x752) (= x6490 x3388) (= x1912 x3312) (= x7479 x7309) (= x7473 x4294) (= x873 x6499))) x429) (=> (and (and (<= x8294 127) (= (or (> (- x1989 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= (- x1989 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 (- x1989 4)))) x5291) (= (x6862 (+ 32 x8122)) x7983) (<= x8294 127) (= 290 x2230) (= x3611 x6058) (= x6521 (x6862 (+ 31 x1964))) (= 0 x577) x1798 (= (= (x5615 260) 34) x1454) (= x7780 (x1417 224)) (= 256 x6738) (= (x6458 x1481) x551) (= x942 (= (x3718 518) (x5615 228))) (= x1557 0) (= (= (x5615 164) 64) x68) (= x5607 x1989) (= x3536 (x6862 (+ 31 x7780))) (= x3062 1084734224) (= x6956 false) (= (x8448 (- x8122 294)) x5651) (= x8122 (x6862 (+ 486 x3578))) (<= 356 x1989) (= x1964 (x8171 128)) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x7011) x942 (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3536) x304) x68 (= x8175 x1973) (= (x6862 (+ x304 x7983)) x1820) (= (x8448 (- x1820 290)) x5607) (>= x5607 356) (= x7201 false) x1454 (= 160 x3723) (= x1798 (= (x3718 486) (x5615 196))) (= x3578 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6521)) (<= 1 x551)) x3293) (and (=> x5291 x6366) (=> (and (= x8252 true) (not x5291)) (and (=> (and (= x5724 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1989) true) (> x1989 195))) x8252) (and (=> (not x5724) x6366) (=> (and (and (= (x7957 164) x6194) (= x4798 (< 18446744073709551615 x6194))) x5724) (and (=> x4798 x7505) (=> (and (not x4798) (and (= (x6862 (+ 196 x6194)) x7328) (= (< x1989 x7328) x2215))) (and (=> (and (and (= x4507 (> x2733 18446744073709551615)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1989) (>= x1989 356) (= (x7957 260) x2733)) (not x2215)) (and (=> x4507 x7505) (=> (and (and (= x8387 (x6862 (+ x2733 292))) (= (< x1989 x8387) x312)) (not x4507)) (and (=> x312 x1061) (=> (and (not x312) (and (= x43 (x3499 128)) (= 64 x5231) (= x1468 x5008) (= x7111 x7473) (= x8375 x873) (= x8141 x8175) (= (x3499 160) x1538) (= x6782 x6576) (= x3220 x1875) (= x6490 x1892) (= x7205 x1912) (= x3163 x2738) (= x3331 x3072) (= x8073 false) (= (x3499 160) x8445) (= x4277 x7479) (= x7270 (x3499 128)) (= x3308 x1218) (= x6095 x1130) (= x2310 false) (= x7316 1))) x1936))))) (=> x2215 x1061))))))) (=> (not x8252) x6366)))))))))
(assert (x6021 x7483))
(assert (= (and x6771 (not x5342)) x686))
(assert (x6021 x5888))
(assert (= (x4463 x636 x197 x5649 x3751) (x8569 (x4463 x636 x197 x5649 x3751))))
(assert (= x3456 (x1880 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064))))
(assert (= 64 (x864 (x8371 64 x7970 100))))
(assert (x6021 x2604))
(assert (x6021 x2614))
(assert (x6021 x1839))
(assert (x6021 x4918))
(assert (x6021 x5809))
(assert (= x2009 (and (not x409) x7876)))
(assert (= (x864 (x8371 64 x192 36)) 64))
(assert (x6021 x5879))
(assert (x1960 x3374))
(assert (=> (<= x4177 10000) (= (x8569 x4177) 0)))
(assert (x6021 x3098))
(assert (= x5182 (x4378 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794))))
(assert (x6021 x6943))
(assert (= (x864 (x8371 64 x3255 4)) 64))
(assert (= x2300 (=> (and (= x3356 x4737) (= x7534 x352) (= x3020 x2600) (= x3255 x3828) (= x1900 x6878) (= x2078 x4510) (= 0 x7153) (= x1642 2) (= x3099 true) (= x6299 x4670) (= x2017 false) (= x2796 x145) (= x2609 x225) (= x4848 x6337) (= x8394 x6883) (= x8310 x2371) (= x7627 x8181)) x4830)))
(assert (x6021 x8152))
(assert (> (x1874 x1883 x3524) 10000))
(assert (x6021 x3220))
(assert (= (x864 (x4863 x8390 x4163 x6722 x2492 x4934 x2354)) x8390))
(assert (x6021 x1522))
(assert (x6021 x664))
(assert (x6021 x6183))
(assert (= (x8569 (x8371 64 x192 36)) (x8371 64 x192 36)))
(assert (x6021 x789))
(assert (x6021 x4208))
(assert (= (=> (and (= x1264 0) (= x490 x5856) (= x6076 x6490) (= x465 x3308) (= x5345 1) (= x2431 x3859)) x3766) x5370))
(assert (= x8582 (x4408 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617))))
(assert (x2662 x4108 256))
(assert (x6021 x3657))
(assert (x6021 x2336))
(assert (= (and x7403 x7832) x6898))
(assert (= x6572 (=> (and (= x3768 x176) (= x976 x8574) (= x4161 x3883) (= x598 x4156) (= x157 x7946)) x6245)))
(assert (x6021 x7389))
(assert (=> (>= 10000 x5297) (= 0 (x8569 x5297))))
(assert (x6021 x3053))
(assert (x6021 x6442))
(assert (x6021 x6833))
(assert (x6021 x2739))
(assert (not (x3961 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794))))
(assert (x6021 x2332))
(assert (x6021 x7336))
(assert (x6021 x8401))
(assert (x6021 x138))
(assert (= x819 (or (and x2146 x1626) (and x6531 x7412))))
(assert (x6021 x7367))
(assert (x2662 x3170 256))
(assert (= x5929 (and x613 x1924)))
(assert (= (and x6595 x3971) x6848))
(assert (= (x986 (x4863 x1409 x4788 x7372 x6764 x5069 x3607)) x3607))
(assert (x7457 x7473))
(assert (= x131 (x2668 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591))))
(assert (x3961 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x4393 (and (not x8520) x451)))
(assert (x2662 x1271 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1492 (and x2410 x1511)))
(assert (= x4972 (and x3660 x4005)))
(assert (= (x4378 (x4863 x7786 x2854 x3591 x5743 x6693 x7617)) x2854))
(assert (x6517 x1315 32))
(assert (= (and x4420 x2237) x3656))
(assert (= x2375 (and x4418 (not x2313))))
(assert (x6021 x7493))
(assert (= (and (not x4010) x6301) x1272))
(assert (= x818 (and x854 (not x3229))))
(assert (x6021 x1724))
(assert (= (and x6912 (not x2445)) x1103))
(assert (x2662 x3030 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1495) (= 0 (x8569 x1495))))
(assert (x6021 x2473))
(assert (= (or x700 x6437) x1322))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x7601 7)))
(assert (= (x4378 (x6067 x7741 x6208 x6643 x6566 x3171)) x6208))
(assert (= (x8371 64 1 x7356) (x8569 (x8371 64 1 x7356))))
(assert (= x1530 (and x5594 x2869)))
(assert (= (and x1278 x6023) x1346))
(assert (= x8367 (or x576 x3139)))
(assert (x6021 x266))
(assert (= (x8569 (x6067 x1891 x4148 x3347 x3693 x2735)) (x6067 x1891 x4148 x3347 x3693 x2735)))
(assert (< (x1874 x8295 x6990) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1670 (not x8411)) x3363))
(assert (= (=> (= x7799 (= x5897 0)) (and (=> (and x7799 (and (= x3240 x6490) (= x5160 x8494) (= x1912 x2828) (= x7483 x3308) (= x269 true) (= x2578 false) (= x7033 0) (= 2 x3352))) x7857) (=> (and (and (= x1479 x4465) (= x7260 x5356) (= x6100 x5614) (= x6144 x5630)) (not x7799)) x5830))) x6352))
(assert (=> (<= x1794 10000) (= 0 (x8569 x1794))))
(assert (x6021 x2672))
(assert (=> (>= 10000 x579) (= 0 (x8569 x579))))
(assert (= (and x3090 x4775) x3734))
(assert (x6021 x2828))
(assert (= (or (and x7012 x1865) (and x8057 x4774)) x3908))
(assert (< 10000 (x8371 64 x8175 4)))
(assert (x7457 x4094))
(assert (=> (>= 10000 x5024) (= (x8569 x5024) 0)))
(assert (= (and (not x8435) x5355) x746))
(assert (= (x986 (x4863 x6151 x876 x1903 x6351 x2911 x6088)) x6088))
(assert (x6021 x2085))
(assert (=> (<= x3456 10000) (= (x8569 x3456) 0)))
(assert (x6021 x6010))
(assert (= x6081 (or x2691 x155)))
(assert (= (x864 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087)) x5107))
(assert (= x6452 (x4378 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087))))
(assert (x2186 x8543))
(assert (x6021 x4092))
(assert (< (x8371 x5303 x6385 x7242) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x648) (= 0 (x8569 x648))))
(assert (x6021 x635))
(assert (=> (<= x8585 10000) (= 0 (x8569 x8585))))
(assert (= x3591 (x569 (x4863 x7786 x2854 x3591 x5743 x6693 x7617))))
(assert (= (x1880 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805)) x7805))
(assert (=> (<= x2518 10000) (= 0 (x8569 x2518))))
(assert (x6021 x5790))
(assert (x6021 x2998))
(assert (= x112 (x864 (x4463 x112 x3807 x4106 x7605))))
(assert (x6021 x7216))
(assert (x6021 x7788))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x1891 x4148 x3347 x3693 x2735)))
(assert (x6021 x2311))
(assert (=> (>= 10000 x6142) (= (x8569 x6142) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x6151 x876 x1903 x6351 x2911 x6088)))
(assert (=> (<= x7070 10000) (= 0 (x8569 x7070))))
(assert (= (and x6310 (not x4917)) x2397))
(assert (x6021 x4341))
(assert (x6021 x3380))
(assert (x6021 x3548))
(assert (x6290 x3777))
(assert (=> (>= 10000 x6385) (= 0 (x8569 x6385))))
(assert (= x2635 (and (not x4034) x1475)))
(assert (x6021 x3717))
(assert (x6021 x8001))
(assert (x6021 x440))
(assert (x6021 x4026))
(assert (x6021 x8223))
(assert (x3961 65535))
(assert (x2662 x225 256))
(assert (= (x8569 (x6067 x3841 x2108 x7282 x1323 x3666)) (x6067 x3841 x2108 x7282 x1323 x3666)))
(assert (x6021 x363))
(assert (x6021 x1985))
(assert (= x3795 (and x26 (not x2255))))
(assert (= (and x6207 (not x7164)) x7364))
(assert (x6021 x7086))
(assert (x6021 x519))
(assert (x1960 x4763))
(assert (x6021 x3096))
(assert (x6021 x3966))
(assert (= x667 (or x5697 x6311)))
(assert (= (and x5279 x7575) x7524))
(assert (x6021 x4797))
(assert (x7457 x2716))
(assert (= (x8569 (x1874 x6134 x6756)) (x1874 x6134 x6756)))
(assert (x6021 x1104))
(assert (= x7073 x6129))
(assert (< 10000 (x6067 x8390 x6994 x6858 x6332 x8121)))
(assert (x6021 x5398))
(assert (x6021 x957))
(assert (= x2509 (x1880 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509))))
(assert (x6021 x5807))
(assert (x1960 x1634))
(assert (x6021 x4661))
(assert (= x4177 (x7859 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177))))
(assert (x5269 x403))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (=> (<= x8127 10000) (= 0 (x8569 x8127))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x6134 x7827 x3042 x5877 x4498)))
(assert (x6021 x1120))
(assert (= (or x6235 x3474) x3587))
(assert (x2662 x7717 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5973 x291))
(assert (= (and (not x6303) x7067) x7832))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x6554 36)))
(assert (x6021 x5462))
(assert (x2626 32))
(assert (= x5809 (x2668 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805))))
(assert (= (x8569 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (= (and (not x4518) x13) x808))
(assert (x6021 x46))
(assert (x6021 x481))
(assert (= (or x3772 (and x2286 (not x2015))) x4588))
(assert (x5973 x7473))
(assert (x6021 x701))
(assert (< 10000 (x4463 x3841 x6391 x1309 x7330)))
(assert (x6021 x2061))
(assert (= (x4378 (x8371 x81 x161 x3096)) x161))
(assert (= x694 (and x3506 (not x7680))))
(assert (= x7928 (x986 (x4863 x5303 x3458 x3478 x2190 x1189 x7928))))
(assert (x6021 x7910))
(assert (x6021 x1967))
(assert (x2662 x2605 32))
(assert (= (and x3013 x8527) x5681))
(assert (x1635 32 (ite (not (= x879 0)) 1 0)))
(assert (= (and x5102 x4332) x4961))
(assert (> (x4463 x1919 x5254 x4545 x6880) 10000))
(assert (= x6106 (=> (and (= 0 x7153) (= x8345 false) (= x2796 x145) (= x3828 x3255) (= x8310 x2371) (= x6883 x8394) (= x6299 x4670) (= x3930 2) (= x7627 x8181) (= x2600 x3020) (= x4510 x2078) (= x5563 (x4375 255 x5627)) (= x6878 x1900) (= x2609 x225) (= true x5077) (= x767 2) (= x3356 x4737) (= x6337 x4848) (= x352 x7534)) x4830)))
(assert (= x3123 (=> (and (= false x2174) (= x145 x2796) (= x3356 x4737) (= 2 x6052) (= x8181 x7627) (= x6337 x4848) (= x2078 x4510) (= x352 x7534) (= x2609 x225) (= x3255 x3828) (= x2600 x3020) (= x7153 0) (= x4670 x6299) (= true x1307) (= x6883 x8394) (= x1900 x6878) (= x8310 x2371)) x4830)))
(assert (= (x4378 (x1874 x1409 x6621)) x6621))
(assert (x6021 x5947))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371)))
(assert (x6021 x5492))
(assert (x6021 x2172))
(assert (= (=> (and (or (and x7079 (and (or (not x4782) (and (and (and (= (x6862 (+ 32 x5646)) x8299) (= x395 (x6862 (+ x5526 32))) (= x6711 (x4605 x395)) (= (> x1537 64) x7575)) (or (not x7575) (and (and (and (= (x6862 (+ x5526 64)) x2794) (= x2892 (x6862 (+ x5646 64))) (= (x6654 x2794) x4790) (= x305 (> x1537 96))) (or (and (and (<= x1537 128) (= x4021 (x5729 x6525)) (= x6525 (x6862 (+ x5526 96))) (= x2630 (x6862 (+ 96 x5646)))) x305) (not x305))) x7575))) x4782)) (and (= x4782 (< 32 x1537)) (= (x2974 x5526) x4975)))) (not x7079)) (and (= x7079 (< 0 x1537)) (= (x6862 (+ x2212 x4428)) x7823) (= x1537 (x1261 x5242)) (= (x6862 (+ x5978 32)) x2437) (= x1047 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2830)) (= (x6862 (+ x3580 32)) x5646) (= (x6862 (+ 31 x2212)) x2830) (= (x6862 (+ x4428 x1047)) x3580) (= (x6862 (+ 32 x2437)) x7425) (= x2283 (x8448 (- x3580 x8170))))) x863) x1799))
(assert (= x8595 (and x3703 x806)))
(assert (x6021 x2538))
(assert (x6021 x2928))
(assert (x2662 x2629 128))
(assert (=> (<= x4703 10000) (= (x8569 x4703) 0)))
(assert (= (x2668 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177)) x300))
(assert (= x636 (x864 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617))))
(assert (= x1790 (or (and x6997 x6751) (and x8581 x2262))))
(assert (x6021 x976))
(assert (x6021 x5187))
(assert (x6021 x5425))
(assert (x6021 x5794))
(assert (= x4267 (and (not x7062) x8348)))
(assert (x6021 x3262))
(assert (= (and x279 x3605) x6418))
(assert (x6021 x6028))
(assert (x6290 x6847))
(assert (x6021 x2624))
(assert (= (x8569 1722637450) 0))
(assert (= x6800 (and x7832 (not x7403))))
(assert (x6021 x1076))
(assert (x2186 x2362))
(assert (x6021 x2596))
(assert (x6021 x4446))
(assert (x6021 x2482))
(assert (x1635 32 x5892))
(assert (x3961 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (x6021 x2940))
(assert (= (x986 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)) x7671))
(assert (x6021 x8429))
(assert (< 10000 (x1874 x112 x6919)))
(assert (=> (>= 10000 x4478) (= 0 (x8569 x4478))))
(assert (x6021 x6990))
(assert (=> (<= x7242 10000) (= (x8569 x7242) 0)))
(assert (= x7565 (and x2121 x3652)))
(assert (x6021 x6241))
(assert (x6021 x2918))
(assert (=> (>= 10000 x3838) (= 0 (x8569 x3838))))
(assert (x3961 45231284858326638837332416019018714005183587760015845327913118753091066265600))
(assert (= x764 (or (and x3039 x4600) x485 (and x7410 x8389) x287 x7006 x262 x6855)))
(assert (= x5754 (x2668 (x4863 x8295 x8185 x6925 x979 x5754 x2033))))
(assert (=> (>= 10000 x3960) (= (x8569 x3960) 0)))
(assert (x6021 x7512))
(assert (x5269 x1010))
(assert (= x5245 (and (not x7677) x7578)))
(assert (= (x6067 x8295 x2784 x8304 x6096 x7098) (x8569 (x6067 x8295 x2784 x8304 x6096 x7098))))
(assert (x6021 x3219))
(assert (=> (>= 10000 x3725) (= 0 (x8569 x3725))))
(assert (x6021 x8267))
(assert (x6021 x4308))
(assert (x6021 x3794))
(assert (x6021 x1638))
(assert (x6021 x5968))
(assert (x6021 x5508))
(assert (=> (<= x2784 10000) (= 0 (x8569 x2784))))
(assert (x6021 x5792))
(assert (x6021 x3413))
(assert (= x289 (or x5180 x952 x1226)))
(assert (x6021 x6806))
(assert (x6021 x5527))
(assert (x6021 x6008))
(assert (= x238 (or x764 x645)))
(assert (= x3985 (and (not x3315) x7460)))
(assert (x6021 x752))
(assert (=> (<= x2587 10000) (= 0 (x8569 x2587))))
(assert (= (x4378 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)) x8598))
(assert (x6021 x332))
(assert (= (or x7472 x4117) x5664))
(assert (x6021 x6975))
(assert (x6021 x5574))
(assert (= (x864 (x8371 64 x3268 12)) 64))
(assert (x6021 x7082))
(assert (x2662 x4906 256))
(assert (x6021 x932))
(assert (= x8591 (x4378 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805))))
(assert (x6021 x1918))
(assert (=> (<= x1138 10000) (= 0 (x8569 x1138))))
(assert (x6021 x7999))
(assert (x6021 x2611))
(assert (> (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794) 10000))
(assert (= (x1880 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821)) x7358))
(assert (= x6216 (x4408 (x4463 x62 x589 x6754 x6216))))
(assert (=> (<= x2907 10000) (= 0 (x8569 x2907))))
(assert (x6021 x11))
(assert (= x1612 (or x1360 x5741 x6619 x933 x5854)))
(assert (x3961 35477284059277649309253622239531857712935939406416048698883813673932370764389))
(assert (not (x3961 (x1874 x81 x5974))))
(assert (= x574 (x4378 (x8371 64 x574 (ite (>= 32 x7786) x3782 (ite (>= 64 x7786) x3982 (ite (<= x7786 96) x494 (ite (<= x7786 128) x7813 (ite (<= x7786 160) x1314 (ite (>= 192 x7786) x2102 x5667))))))))))
(assert (x6021 x6121))
(assert (= (and x7498 x159) x2241))
(assert (x2186 x2453))
(assert (> (x8371 x81 x161 x3096) 10000))
(assert (=> (>= 10000 x3788) (= (x8569 x3788) 0)))
(assert (x6021 x3687))
(assert (= (x864 (x8371 64 x1862 6)) 64))
(assert (x6021 x1840))
(assert (x6021 x7220))
(assert (x6021 x5514))
(assert (x2662 x321 128))
(assert (x6021 x6239))
(assert (= (x864 (x8371 64 x5207 2)) 64))
(assert (= (x864 (x4863 x5303 x3458 x3478 x2190 x1189 x7928)) x5303))
(assert (x2662 x1265 32))
(assert (=> (>= 10000 x574) (= (x8569 x574) 0)))
(assert (x6021 x3845))
(assert (=> (>= 10000 x4340) (= 0 (x8569 x4340))))
(assert (=> (<= x2354 10000) (= (x8569 x2354) 0)))
(assert (x6021 x4524))
(assert (=> (<= x6150 10000) (= (x8569 x6150) 0)))
(assert (x6021 x596))
(assert (x6021 x4145))
(assert (= (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371) (x8569 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x7786 x8366 x1548 x3194 x4478)))
(assert (= x4570 (and (not x6163) x369)))
(assert (= (x569 (x8371 64 x4670 36)) 36))
(assert (x7457 x4803))
(assert (x7582 x1353))
(assert (=> (<= x1243 10000) (= (x8569 x1243) 0)))
(assert (= (x4378 (x8371 64 x7391 3)) x7391))
(assert (x6021 x627))
(assert (x6021 x3109))
(assert (=> (<= x4980 10000) (= 0 (x8569 x4980))))
(assert (=> (<= x5470 10000) (= 0 (x8569 x5470))))
(assert (= x6617 (and x679 x7313)))
(assert (x6021 x6360))
(assert (x770 x7112))
(assert (x6021 x1919))
(assert (= (and x6502 x1075) x198))
(assert (> (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602) 10000))
(assert (=> (<= x5207 10000) (= (x8569 x5207) 0)))
(assert (> (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971) 10000))
(assert (x6021 x882))
(assert (x6021 x7109))
(assert (x6021 x7878))
(assert (x6021 x4946))
(assert (= (and x3208 x4268) x7892))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x6021 x2431))
(assert (x6021 x630))
(assert (= x1699 (or x6809 x3281)))
(assert (x6021 x2753))
(assert (x7457 x2362))
(assert (x6021 x6243))
(assert (= (=> (= (= x142 0) x7945) (and (=> (and (not x7945) (and (= x2114 x2981) (= x857 x759) (= x87 x2405) (= x7973 x2136) (= x8110 x8120) (= x664 x2319) (= x582 x2683) (= x7439 x1114) (= x1562 x6112) (= x4705 x399) (= x7631 x7493) (= x3731 x2825) (= x1882 x3340))) x6479) (=> (and x7945 (and (= false x5038) (= x6883 x8394) (= x7153 0) (= x225 x2609) (= x2796 x145) (= true x3392) (= x4670 x6299) (= x352 x7534) (= 2 x1104) (= x2600 x3020) (= x3828 x3255) (= x4737 x3356) (= x2371 x8310) (= x2078 x4510) (= x7627 x8181) (= x1900 x6878) (= x6337 x4848))) x4830))) x4538))
(assert (= (and x1809 (not x6367)) x6999))
(assert (= (and x2775 x4387) x2297))
(assert (= x7459 (and (not x5322) x891)))
(assert (x6021 x4709))
(assert (x6021 x3573))
(assert (x6021 x2669))
(assert (x6021 x6043))
(assert (x6021 x4264))
(assert (= (x864 (x8371 x128 x7890 x4531)) x128))
(assert (x6021 x526))
(assert (= x2374 (x4378 (x4463 x7786 x2374 x5271 x5708))))
(assert (< (x4863 x1919 x11 x2518 x4145 x4321 x8086) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x7334))
(assert (= (x8569 (x8371 64 x2957 3)) (x8371 64 x2957 3)))
(assert (= (or (and x3779 (not x2934)) (and (not x3437) x2145)) x2356))
(assert (= x4560 (and x8567 (not x2837))))
(assert (x6021 x2919))
(assert (= (x8569 (+ 1 x98)) (x8569 x98)))
(assert (= x5877 (x4408 (x6067 x6134 x7827 x3042 x5877 x4498))))
(assert (= x285 (and x5474 x5245)))
(assert (= (and x3605 (not x279)) x8204))
(assert (= x2762 (x4378 (x6067 x1919 x2762 x836 x812 x6861))))
(assert (x6021 x6169))
(assert (= (and x2315 (not x3568)) x6048))
(assert (x1960 x7532))
(assert (= x482 x7073))
(assert (= (and (not x4212) x3264) x3210))
(assert (x6021 x2530))
(assert (x6021 x2211))
(assert (x1960 x688))
(assert (= (and x6375 (not x5724)) x6729))
(assert (x6021 x7469))
(assert (x6021 x4337))
(assert (x6021 x3150))
(assert (x6021 x7889))
(assert (= (x864 (x1874 x1911 x1743)) x1911))
(assert (= 64 (x864 (x8371 64 x3003 11))))
(assert (x6021 x5274))
(assert (x6021 x6651))
(assert (x6021 x1251))
(assert (= (or x3065 x7318) x7224))
(assert (= x6333 (=> (and (or (and (and (or (and x581 (and (= x6336 (> x8340 64)) (or (not x6336) (and x6336 (and (= x6050 (< 96 x8340)) (or (not x6050) (and (<= x8340 128) x6050))))))) (not x581)) (= (> x8340 32) x581)) x797) (not x797)) (and (= x3262 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3958)) (= (x6862 (+ x5412 x3262)) x890) (= (x1637 x3630) x8340) (= x7748 (x6862 (+ 32 x21))) (= (x6862 (+ x3108 x5412)) x4363) (= (x8448 (- x890 x4209)) x180) (= (> x8340 0) x797) (= x3958 (x6862 (+ x3108 31))))) x742)))
(assert (=> (<= x1001 10000) (= 0 (x8569 x1001))))
(assert (= (or x4436 x5665) x3616))
(assert (x6021 x8068))
(assert (x6021 x7652))
(assert (not (x3961 (x8371 64 x5904 36))))
(assert (x6021 x40))
(assert (x6021 x4087))
(assert (x6021 x7397))
(assert (x7457 x5627))
(assert (= (and (not x5559) x5702) x5613))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x5635 2)))
(assert (not (x3961 (x1874 32 x1068))))
(assert (=> (>= 10000 x8431) (= (x8569 x8431) 0)))
(assert (< (x8371 64 x5207 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x415))
(assert (= x3502 (x569 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742))))
(assert (x6021 x2305))
(assert (x6021 x4608))
(assert (= x6012 (or x3213 x3344 x1930)))
(assert (= (and x8255 x3231) x3334))
(assert (x6021 x7351))
(assert (x6517 x1353 256))
(assert (x6021 x3072))
(assert (x6021 x6769))
(assert (x6021 x4545))
(assert (x6021 x6880))
(assert (x6021 x3292))
(assert (x6021 x8236))
(assert (= (x2668 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)) x5574))
(assert (= (x8569 x3004) (x8569 (+ x3004 1))))
(assert (x7582 (+ x4568 31)))
(assert (=> (<= x6756 10000) (= 0 (x8569 x6756))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742)))
(assert (x6021 x5705))
(assert (= x7617 (x986 (x4863 x7786 x2854 x3591 x5743 x6693 x7617))))
(assert (not (x3961 (x8371 64 x5207 36))))
(assert (< 10000 (x6067 x62 x3305 x6018 x6655 x4882)))
(assert (x6021 x7589))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x8390 x6994 x6858 x6332 x8121)))
(assert (x6021 x7671))
(assert (x6021 x2891))
(assert (x6021 x5743))
(assert (x6021 x1100))
(assert (x6021 x4094))
(assert (= x192 (x4378 (x8371 64 x192 36))))
(assert (=> (>= 10000 x1822) (= (x8569 x1822) 0)))
(assert (x6021 x6734))
(assert (< (x8371 64 x3727 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x599 x2714) (= x5426 x5739) (= x1384 x6554) (= x2249 x1966)) x1573) x5394))
(assert (=> (<= x4734 10000) (= (x8569 x4734) 0)))
(assert (x6021 x7684))
(assert (x1635 32 x3009))
(assert (x6021 x3681))
(assert (> (x8371 64 x8175 3) 10000))
(assert (=> (<= x1152 10000) (= (x8569 x1152) 0)))
(assert (x1960 x1196))
(assert (x6021 x2436))
(assert (x7457 x4601))
(assert (x6021 x1435))
(assert (x7457 x6132))
(assert (not (x3961 (x8371 64 x77 36))))
(assert (= (x8569 (x4463 x5303 x1376 x7722 x5491)) (x4463 x5303 x1376 x7722 x5491)))
(assert (x2626 (ite (not (= 0 x2753)) 1 0)))
(assert (x6021 x4974))
(assert (x6021 x5347))
(assert (x6021 x90))
(assert (x6021 x4060))
(assert (=> (>= 10000 x5093) (= 0 (x8569 x5093))))
(assert (x6021 x6423))
(assert (= (x8569 2088793519) 0))
(assert (=> (>= 10000 x739) (= (x8569 x739) 0)))
(assert (= 12 (x569 (x8371 64 x1887 12))))
(assert (not (x3961 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213))))
(assert (=> (>= 10000 x5490) (= 0 (x8569 x5490))))
(assert (x5269 x507))
(assert (x6021 x140))
(assert (x6021 x125))
(assert (x6021 x6563))
(assert (x6021 x3011))
(assert (= (x8569 1341992515) 0))
(assert (= 0 (x864 (x3631 0))))
(assert (x6021 x7805))
(assert (x6021 x135))
(assert (x6021 x1219))
(assert (x6021 x7005))
(assert (=> (<= x2679 10000) (= 0 (x8569 x2679))))
(assert (x6021 x1178))
(assert (not (x3961 (x8371 x7741 x1640 x6441))))
(assert (=> (>= 10000 x8175) (= (x8569 x8175) 0)))
(assert (x6021 x6056))
(assert (= 0 (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (=> (>= 10000 x1910) (= (x8569 x1910) 0)))
(assert (not (x3961 (x8371 64 x2046 12))))
(assert (x6021 x6341))
(assert (< 10000 (x1874 32 x2318)))
(assert (x6021 x2605))
(assert (x6021 x3563))
(assert (< 10000 (x1874 x1891 x3763)))
(assert (x6021 x7628))
(assert (x6021 x1502))
(assert (< 10000 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064)))
(assert (x6021 x3986))
(assert (x1960 x5215))
(assert (x3961 3628442803))
(assert (x6021 x7153))
(assert (x6021 x4841))
(assert (= x3611 (x4378 (x8371 64 x3611 1))))
(assert (x6021 x2373))
(assert (not (x3961 (x8371 64 x4807 100))))
(assert (= (and (not x1814) x4890) x3511))
(assert (x6021 x4649))
(assert (< (x1874 x7741 x6688) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x7708 12)))
(assert (x6021 x5528))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x128 x8018 x3984 x1135)))
(assert (= (=> (and (= x944 x3255) (= x5002 x145) (= x3020 x2914) (= x7627 x8546) (= x6198 x2078) (= x7806 x8394) (= 0 x2853) (= (x4375 255 x8543) x492) (= x7534 x1768) (= x4737 x6432) (= x1957 x3374) (= x8328 x1900) (= x225 x7968) (= x492 x450) (= x6854 2) (= x8496 x2371) (= x4702 x4848)) x5199) x3821))
(assert (= (x4863 x62 x2406 x1667 x1539 x5391 x8104) (x8569 (x4863 x62 x2406 x1667 x1539 x5391 x8104))))
(assert (= (x8371 64 x3255 5) (x8569 (x8371 64 x3255 5))))
(assert (> (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617) 10000))
(assert (x2186 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2186 x1088))
(assert (= x6764 (x4408 (x4863 x1409 x4788 x7372 x6764 x5069 x3607))))
(assert (x6021 x5833))
(assert (x6021 x7882))
(assert (=> (>= 10000 x5272) (= 0 (x8569 x5272))))
(assert (= (x8569 x3904) (x8569 (+ 1 x3904))))
(assert (x6021 x7529))
(assert (= x1823 (x986 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183))))
(assert (x6021 x8369))
(assert (x1960 x5329))
(assert (x6021 x70))
(assert (= x1764 (x2668 (x4863 x81 x7614 x3028 x8276 x1764 x4340))))
(assert (x6021 x4317))
(assert (x6021 x8082))
(assert (= (or (and x719 x1769) (and x2320 x1082)) x8489))
(assert (x6021 x7982))
(assert (= (x8371 64 x5113 11) (x8569 (x8371 64 x5113 11))))
(assert (=> (<= x4753 10000) (= (x8569 x4753) 0)))
(assert (x6021 x7949))
(assert (= (x569 (x4863 x636 x5379 x256 x5272 x4150 x8142)) x256))
(assert (x6021 x1779))
(assert (x6021 x1414))
(assert (x5973 x2545))
(assert (= x8329 (=> (and (= x4191 true) (= x2303 false) (= x5917 0)) x5736)))
(assert (= (x4463 x1409 x5975 x4026 x1178) (x8569 (x4463 x1409 x5975 x4026 x1178))))
(assert (= x7407 (and x5769 x7644)))
(assert (=> (<= x6503 10000) (= 0 (x8569 x6503))))
(assert (x6021 x4647))
(assert (= (and x3568 x2315) x2514))
(assert (= x7313 (or x1466 x4993)))
(assert (x6021 x8281))
(assert (x6021 x1737))
(assert (x6021 x551))
(assert (=> (>= 10000 x74) (= (x8569 x74) 0)))
(assert (= (and x783 x6258) x3332))
(assert (x6021 x5268))
(assert (=> (<= x3258 10000) (= (x8569 x3258) 0)))
(assert (= (x864 (x8371 x3841 x4840 x1148)) x3841))
(assert (x6021 x3331))
(assert (x6021 x5483))
(assert (= (x569 (x8371 x1409 x3287 x7102)) x7102))
(assert (= x7505 x6366))
(assert (=> (<= x5754 10000) (= (x8569 x5754) 0)))
(assert (< (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x5477))
(assert (= x4015 (=> (= (= x5599 0) x2851) (and (=> (and (not x2851) (and (= 1 x4227) (= x333 x600) (= x1609 x7767) (= x8524 x1482) (= x7325 x6187) (= x4954 x5226) (= x7501 x2161) (= x7754 x4264) (= x3708 x3292) (= x5110 x4234) (= 0 x2524) (= x6726 x572) (= x775 x7768) (= x1427 x7041) (= x3997 x7716))) x5641) (=> (and (and (= x3203 false) (= x6930 0) (= x433 true)) x2851) x5280)))))
(assert (x6021 x7358))
(assert (x6021 x8300))
(assert (x6021 x445))
(assert (=> (>= 10000 x4530) (= (x8569 x4530) 0)))
(assert (not (x3961 (x1874 x8390 x1399))))
(assert (x6021 x4576))
(assert (x6021 x2364))
(assert (x6021 x934))
(assert (x6021 x3655))
(assert (= (x1880 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971)) x1796))
(assert (x6021 x5183))
(assert (x5269 x6266))
(assert (= (and x457 (not x8252)) x7607))
(assert (= (x864 (x1874 x1891 x3763)) x1891))
(assert (=> (>= 10000 x1087) (= (x8569 x1087) 0)))
(assert (= x8519 (or x8485 x1272 x1436 x6562 x2009)))
(assert (x6021 x4920))
(assert (x6021 x4237))
(assert (x2662 x225 2))
(assert (x6517 (+ 31 x5430) 32))
(assert (x2626 (ite (not (= 0 x5838)) 1 0)))
(assert (=> (>= 10000 x6391) (= (x8569 x6391) 0)))
(assert (x6021 x3645))
(assert (x6021 x4113))
(assert (= (and x1731 (not x2055)) x6023))
(assert (x6021 x7975))
(assert (x6021 x2780))
(assert (x6021 x6615))
(assert (= x8568 (and (not x727) x820)))
(assert (not (x3961 (x8371 64 x5581 36))))
(assert (x6021 x7185))
(assert (=> (>= 10000 x4788) (= 0 (x8569 x4788))))
(assert (= x4890 (and (not x7148) x3358)))
(assert (not (x3961 (x1874 32 x1179))))
(assert (x6021 x8206))
(assert (x6021 x2651))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x3003 11)))
(assert (= x2967 (and x4578 x4229)))
(assert (= (=> (and (= x5086 x7351) (= x2366 x4125) (= x5218 x4358) (= x2513 x1656) (= x5749 x3694) (= x8429 x7979) (= x3606 x4761) (= x3089 x412) (= x5626 x627) (= x355 x105) (= x2191 x2110) (= x6670 x2361) (= x3071 x6522)) x177) x5085))
(assert (x6021 x4959))
(assert (x7457 x479))
(assert (x2626 x1631))
(assert (x2186 x2291))
(assert (x770 x386))
(assert (= (x4378 (x8371 64 1 x4796)) 1))
(assert (x6021 x2087))
(assert (x6021 x6409))
(assert (x6021 x7958))
(assert (x6021 x1042))
(assert (x6021 x7885))
(assert (= x3581 (or x5401 x813)))
(assert (x6021 x5008))
(assert (=> (>= 10000 x6915) (= (x8569 x6915) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x5581 36)))
(assert (= (=> (and (= x3308 x465) (= x6490 x6076) (= 0 x5345) (= x5917 x1264) (= (x4375 255 x3777) x1122) (= x1122 x490) (= 2 x6661) (= x1912 x2431)) x3766) x5736))
(assert (= x7395 (=> (and (= x6490 x3240) (= false x2978) (= x6802 2) (= x1912 x2828) (= x7483 x3308) (= 36 x5160) (= x1783 true) (= 0 x7033)) x7857)))
(assert (= (x8569 (x8371 64 x1862 6)) (x8371 64 x1862 6)))
(assert (not (x3961 (x4463 x6134 x7580 x5525 x125))))
(assert (= (x4378 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409)) x784))
(assert (not (x3961 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087))))
(assert (= x4722 (and x1024 (not x594))))
(assert (x6021 x7337))
(assert (x6021 x1819))
(assert (= (=> (and (or (not x5097) (and x5097 (and (and (= (< 32 x496) x1036) (= (x8118 x5526) x7182)) (or (not x1036) (and x1036 (and (or (not x4650) (and x4650 (and (or (and (and (= x1217 (x6862 (+ x6125 96))) (>= 128 x496) (= x5528 (x6862 (+ x5526 96))) (= (x2552 x5528) x3485)) x7145) (not x7145)) (and (= (x6862 (+ 64 x5526)) x4259) (= (< 96 x496) x7145) (= x6675 (x69 x4259)) (= (x6862 (+ x6125 64)) x4441))))) (and (= (x6862 (+ 32 x6125)) x5853) (= x405 (x6862 (+ 32 x5526))) (= x5032 (x6893 x405)) (= (> x496 64) x4650)))))))) (and (= x5675 (x6862 (+ 32 x7198))) (= x5097 (< 0 x496)) (= (x6862 (+ x4964 x99)) x4350) (= x7430 (x6862 (+ 31 x252))) (= (x4376 x5242) x496) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7430) x4964) (= (x6862 (+ x99 x252)) x20) (= (x6862 (+ 32 x4350)) x6125) (= (x6862 (+ x5675 32)) x8182) (= x735 (x8448 (- x4350 x1434))))) x7477) x1083))
(assert (x6021 x1189))
(assert (< (x1874 x7786 x2747) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x2550))
(assert (x6021 x4303))
(assert (x6021 x4294))
(assert (x6021 x881))
(assert (< (x4863 x62 x2406 x1667 x1539 x5391 x8104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x6021 x4595))
(assert (= (=> (= (< 0 (ite (= 0 x8397) x8397 1)) x2782) (and (=> (and (not x2782) (and (or (not x3045) x3045) (= (= x3368 0) x3045))) x2242) (=> x2782 x4977))) x3762))
(assert (= (x8569 (x4463 x81 x2653 x217 x3582)) (x4463 x81 x2653 x217 x3582)))
(assert (x6021 x3247))
(assert (= (x569 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464)) x5208))
(assert (= (or (and x1258 x1346) (and x3670 x2610) (and x7465 x8515) (and x4719 x5325) (and x858 x7187) (and x7007 x8459) (and x4683 x657) (and x8520 x451) (and x7578 x7677)) x6139))
(assert (x6021 x6846))
(assert (x6021 x6731))
(assert (x6021 x1766))
(assert (x6021 x1859))
(assert (= x4053 (and (not x7134) x6416)))
(assert (=> (<= x5581 10000) (= (x8569 x5581) 0)))
(assert (= x4980 (x4378 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801))))
(assert (=> (>= 10000 x6602) (= 0 (x8569 x6602))))
(assert (= (x4378 (x8371 64 x1887 12)) x1887))
(assert (x6021 x8511))
(assert (x6021 x8127))
(assert (not (x3961 (x4863 x128 x4320 x1602 x6915 x2789 x4998))))
(assert (not (x3961 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591))))
(assert (= x1986 (and x4402 x3511)))
(assert (=> (>= 10000 x5635) (= (x8569 x5635) 0)))
(assert (x6021 x5427))
(assert (x6021 x6624))
(assert (= x2406 (x4378 (x4863 x62 x2406 x1667 x1539 x5391 x8104))))
(assert (= (or x5821 x8455) x2064))
(assert (x6021 x2405))
(assert (x6021 x7569))
(assert (not (x3961 (x1874 x7741 x6688))))
(assert (=> (<= x1135 10000) (= (x8569 x1135) 0)))
(assert (x6021 x4035))
(assert (< (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3255 (x4378 (x8371 64 x3255 4))))
(assert (=> (>= 10000 x7098) (= 0 (x8569 x7098))))
(assert (x6021 x6621))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736)))
(assert (x6021 x3594))
(assert (x6021 x8370))
(assert (not (x3961 (x4463 x3841 x6391 x1309 x7330))))
(assert (= (=> (and (= x4639 x1691) (= x8150 x8436) (= x4326 x1900) (= x111 x8394) (= x7337 x2078) (= x8191 0) (= x2614 x1313) (= x2818 x4886) (= x2371 x5989) (= x1584 x554) (= x3020 x3125) (= x6849 x7627) (= x6553 1) (= x4501 x1262) (= x7589 x3255)) x3127) x7927))
(assert (x6021 x5374))
(assert (= x5566 (or x169 (and x6489 (not x6227)))))
(assert (x6021 x7425))
(assert (x6021 x2971))
(assert (x6021 x5198))
(assert (x6021 x7137))
(assert (= (and x3626 x6487) x3335))
(assert (= (x4863 x1891 x2624 x6776 x7509 x4204 x6170) (x8569 (x4863 x1891 x2624 x6776 x7509 x4204 x6170))))
(assert (x6021 x6768))
(assert (=> (>= 10000 x5649) (= (x8569 x5649) 0)))
(assert (= (x3631 0) (x8569 (x3631 0))))
(assert (x1960 x1414))
(assert (x2662 x403 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1960 x6174))
(assert (x6021 x7601))
(assert (= (or (and x6244 x3853) (and x2768 x6973) (and x8592 x6053) (and x5812 x2939) (and x4192 x8225)) x6737))
(assert (x6021 x3397))
(assert (= (x8371 64 x603 6) (x8569 (x8371 64 x603 6))))
(assert (= x453 (and x1688 x610)))
(assert (x3961 1000000000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x8390 x3088 x2679 x2045)))
(assert (=> (<= x4150 10000) (= (x8569 x4150) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x2495 x884)))
(assert (x6021 x3527))
(assert (x6021 x2816))
(assert (x6021 x2712))
(assert (= x6385 (x4378 (x8371 x5303 x6385 x7242))))
(assert (x6021 x5850))
(assert (=> (>= 10000 x7219) (= (x8569 x7219) 0)))
(assert (not (x3961 (x8371 64 x2957 3))))
(assert (= (=> (and (or (and (not x1367) (and (= x4472 x5856) (= x3859 x1912))) (and (and (= (x8302 x3611) x2982) (<= x8169 4294967295) (= x4920 x5856) x5959 (= (x8302 x3611) x6970) x1286 (= (<= x6970 (x6141 x3611)) x1286) (= x5959 (= x2982 (x6141 x3611))) (= x3859 x1860)) x1367)) (and (= (x8448 (- x7243 32)) x183) (= x4209 (x6862 (+ 192 x3630))) (= x7243 (x8448 (- x3630 x5718))) (= x8446 (x4375 26959946667150639794667015087019630673637144422540572481103610249215 x1081)) (not (= x3630 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5718) (<= x3630 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x8446) x3644) (= x7361 (x6862 (+ x3448 x5660))) (= x957 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4319)) (< x5718 x3630) (= x4319 (x6862 (+ 31 x3448))) (= x3630 (x6862 (+ x5660 x957))) (= x1081 (x5055 x5068)) (= x2234 (x6862 (+ x3630 32))) (= (< 0 x7765) x1367) (> x4209 x3630) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3630) (not (= x3630 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (not (= x3630 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (<= x5718 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x5718 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x3630 1) (= (x6862 (+ x5718 32)) x5068) (<= x3630 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1711 x5718) x4096))) x6765) x3021))
(assert (x2662 x363 256))
(assert (= x6823 (and x7492 (not x7779))))
(assert (x5269 x1043))
(assert (=> (<= x1904 10000) (= (x8569 x1904) 0)))
(assert (x6021 x5618))
(assert (= x6770 (and x3872 (not x7066))))
(assert (not (x3961 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117))))
(assert (x6021 x4759))
(assert (x6021 x2535))
(assert (= x1624 (x4378 (x8371 64 x1624 36))))
(assert (x6021 x2778))
(assert (< 10000 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117)))
(assert (= x62 (x864 (x1874 x62 x306))))
(assert (x1960 x8191))
(assert (x6021 x6361))
(assert (not (x3961 (x8371 x1883 x1070 x6150))))
(assert (=> (<= x5303 10000) (= (x8569 x5303) 0)))
(assert (=> (<= x3931 10000) (= (x8569 x3931) 0)))
(assert (=> (<= x5847 10000) (= 0 (x8569 x5847))))
(assert (= (or x127 x7625) x5266))
(assert (=> (<= x1439 10000) (= (x8569 x1439) 0)))
(assert (< (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x8248 x7045 x4515) x5570))
(assert (x6021 x4564))
(assert (= x3913 (or (and x4267 (not x4218)) (and (not x5393) x439) (and x4766 (not x6171)) (and x7824 (not x7308)))))
(assert (= (or x5712 x4053) x8233))
(assert (x2662 x7473 256))
(assert (not (x3961 (x1874 x6151 x199))))
(assert (= (and x3427 x3554) x5346))
(assert (= (and x818 (not x4967)) x2905))
(assert (x6021 x3615))
(assert (= (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617) (x8569 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617))))
(assert (= (x864 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464)) x1919))
(assert (= x3614 (=> (and (= x7120 (x8448 (- x8322 (mod (ite (> 32 x702) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x8322 (x4375 1 x145)) (= x8314 (x4628 x145 2)) (= x702 (ite (> x8322 0) x8314 (x4375 127 x8314))) (= (> x7120 0) x2090) (= (- x7916 132) x1848)) (and (=> (not x2090) x288) (=> (and x2090 (and (= (+ 32 x7916) x7704) (= x6019 (x4375 1 x145)) (= x7310 (= 0 x6019)))) (and (=> (and (and (= x6987 (* (ite (not (= x702 0)) 1 0) 32)) (or (= 0 x6987) (= x6987 32)) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x145) x6810) (= x8135 (+ x6987 x7704))) x7310) x592) (=> (and (and (or (and (= x8091 0) (not x303)) (and (and (>= 32 x702) (= (x3775 x6759) x2143) (= 32 x8091)) x303)) (and (= x303 (> x702 0)) (= (x1874 32 104) x6759))) (not x7310)) x4730)))))))
(assert (= (x8569 (x8371 x5107 x8206 x4569)) (x8371 x5107 x8206 x4569)))
(assert (x6021 x8304))
(assert (x6021 x2735))
(assert (x6021 x8121))
(assert (= (=> (and (= x6100 x5739) (= x1966 x5356) (= x2714 x5630) (= x1384 x4465)) x5394) x5830))
(assert (x6021 x3450))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409)))
(assert (> (x8371 64 x8175 5) 10000))
(assert (not (x3961 (x8371 64 x7708 12))))
(assert (x6021 x8076))
(assert (x6517 x225 2))
(assert (x6021 x6462))
(assert (x7457 x2554))
(assert (< (x4863 x128 x4320 x1602 x6915 x2789 x4998) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3961 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401))))
(assert (= x81 (x864 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742))))
(assert (x2186 x6624))
(assert (= (and x6126 x3533) x4922))
(assert (= (and x1968 x7952) x4553))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x1919 x4645)))
(assert (x2186 x1546))
(assert (x2662 x2881 256))
(assert (x6021 x7242))
(assert (x6021 x5437))
(assert (x6021 x1243))
(assert (x6021 x892))
(assert (x6021 x1375))
(assert (= x6696 (and x7524 (not x305))))
(assert (x6021 x7973))
(assert (=> (>= 10000 x1887) (= 0 (x8569 x1887))))
(assert (x6021 x1713))
(assert (= (and (not x4203) x2583) x3193))
(assert (= (and (not x2099) x8464) x5741))
(assert (> (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704) 10000))
(assert (x1960 x839))
(assert (=> (<= x7156 10000) (= (x8569 x7156) 0)))
(assert (x6021 x6174))
(assert (=> (<= x2413 10000) (= 0 (x8569 x2413))))
(assert (= x1703 (and x691 (not x5239))))
(assert (= (=> (and (= x8578 x8177) (= x350 true) (= x350 x6126) (= false x3487) (= x4228 x3975) (= x6118 x1941) (= false x7675) (= true x3195)) x1750) x3222))
(assert (x6021 x4358))
(assert (x6021 x7286))
(assert (x6021 x7922))
(assert (x6021 x2446))
(assert (= x6244 (and (not x7007) x8459)))
(assert (= (and x5320 x3188) x4554))
(assert (x6021 x1220))
(assert (x6021 x1850))
(assert (= (x569 (x4863 x1911 x1243 x4709 x2434 x4409 x2534)) x4709))
(assert (=> (>= 10000 x1130) (= (x8569 x1130) 0)))
(assert (> (x6067 x128 x7070 x5224 x6130 x3885) 10000))
(assert (= x6270 (and (not x1036) x2606)))
(assert (x6021 x4164))
(assert (x6021 x1933))
(assert (< 10000 (x6067 x1409 x7939 x8431 x874 x5094)))
(assert (x7457 x7112))
(assert (not (x3961 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971))))
(assert (x6021 x1540))
(assert (=> (>= 10000 x5609) (= (x8569 x5609) 0)))
(assert (x6021 x1459))
(assert (x2186 x6015))
(assert (x6021 x1878))
(assert (x6021 x5628))
(assert (=> (>= 10000 x4714) (= (x8569 x4714) 0)))
(assert (x6021 x7838))
(assert (> (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401) 10000))
(assert (x6021 x2841))
(assert (x6021 x8103))
(assert (= (x4378 (x1874 x7741 x6688)) x6688))
(assert (x6021 x7794))
(assert (=> (>= 10000 x8301) (= (x8569 x8301) 0)))
(assert (x6021 x3206))
(assert (=> (>= 10000 x1839) (= (x8569 x1839) 0)))
(assert (x6517 x291 2))
(assert (= (x4408 (x4863 x1891 x2624 x6776 x7509 x4204 x6170)) x7509))
(assert (x2186 x6273))
(assert (not (x3961 (x6067 x128 x7070 x5224 x6130 x3885))))
(assert (x6021 x4368))
(assert (x6021 x2498))
(assert (x6021 x1640))
(assert (> (x4863 x6134 x8381 x8081 x3450 x3891 x7263) 10000))
(assert (=> (<= x2979 10000) (= 0 (x8569 x2979))))
(assert (x6021 x5))
(assert (= (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805) (x8569 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805))))
(assert (> (x1874 x8390 x1399) 10000))
(assert (x6021 x2982))
(assert (= (x1874 32 103) (x8569 (x1874 32 103))))
(assert (= (x8569 3521034783) 0))
(assert (x6021 x5989))
(assert (x6021 x6378))
(assert (< 10000 (x8371 64 x4807 100)))
(assert (x6021 x1313))
(assert (x6021 x1667))
(assert (= x8287 (and x4129 x8562)))
(assert (x6021 x6358))
(assert (= x1883 (x864 (x8371 x1883 x1070 x6150))))
(assert (not (x3961 (x1874 x2495 x884))))
(assert (x2662 x1043 32))
(assert (= x4971 (and x4009 (not x670))))
(assert (x6021 x1957))
(assert (= x5497 (or x6359 x4855 x4553 x1112 x5610 x3500 x4684 x4924 x3617 x687)))
(assert (= (and (not x8311) x2576) x1305))
(assert (x6021 x2058))
(assert (x6021 x3698))
(assert (x6021 x1306))
(assert (x6021 x1838))
(assert (x6021 x2067))
(assert (x6021 x398))
(assert (x6021 x1870))
(assert (x6021 x1422))
(assert (x6021 x5742))
(assert (x6021 x1656))
(assert (x6021 x4097))
(assert (x2662 x4731 256))
(assert (not (x3961 (x6067 x6134 x7827 x3042 x5877 x4498))))
(assert (x6021 x2886))
(assert (= (or x7450 x3274) x6972))
(assert (x6021 x5392))
(assert (< 10000 (x8371 x6134 x2428 x8056)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x1911 x1243 x4709 x2434 x4409 x2534)))
(assert (=> (<= x8121 10000) (= 0 (x8569 x8121))))
(assert (= x2822 (or x7061 x6852 x5510 x1802 x1790)))
(assert (= (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704) (x8569 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704))))
(assert (x6021 x890))
(assert (x2662 x2453 256))
(assert (x6290 x2453))
(assert (= x4301 (x4378 (x4463 x7741 x4301 x1145 x5328))))
(assert (= x1617 x4007))
(assert (x6021 x8591))
(assert (= x2145 (or x6868 x7682)))
(assert (x6021 x2587))
(assert (=> (<= x4545 10000) (= (x8569 x4545) 0)))
(assert (x6021 x3968))
(assert (x6021 x6287))
(assert (= x8401 (x7859 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401))))
(assert (x6021 x7611))
(assert (x6517 x7473 2))
(assert (x6021 x6752))
(assert (x6021 x7515))
(assert (= (x4378 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704)) x1910))
(assert (= x7741 (x864 (x8371 x7741 x1640 x6441))))
(assert (= x3358 (and x426 (not x7815))))
(assert (x1960 x1188))
(assert (x2662 x2716 256))
(assert (x2662 x2235 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2186 x2716))
(assert (x7582 x7265))
(assert (= (x8569 (x8371 64 x4060 36)) (x8371 64 x4060 36)))
(assert (x2626 x7735))
(assert (x6021 x5878))
(assert (x6021 x7772))
(assert (< 10000 (x8371 64 x7391 3)))
(assert (= (or x4377 x1801) x990))
(assert (= (x8569 x6546) (x8569 (+ 1 x6546))))
(assert (x2662 x8471 2))
(assert (x6517 x2113 32))
(assert (= x1298 (x4378 (x8371 64 x1298 10))))
(assert (x2662 x5065 128))
(assert (x6021 x5515))
(assert (=> (>= 10000 x7636) (= 0 (x8569 x7636))))
(assert (=> (<= x4204 10000) (= (x8569 x4204) 0)))
(assert (=> (>= 10000 x5379) (= (x8569 x5379) 0)))
(assert (x6021 x2554))
(assert (x7457 x7894))
(assert (= (x569 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805)) x7417))
(assert (x6021 x4635))
(assert (= 0 (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639841)))
(assert (x6021 x5516))
(assert (x2662 x1018 32))
(assert (x6021 x3352))
(assert (= x5146 (or x7560 x5885)))
(assert (x6021 x4433))
(assert (= x5948 (or x7673 x1467)))
(assert (x6021 x4064))
(assert (x6021 x8403))
(assert (x6021 x7360))
(assert (x6021 x7341))
(assert (= (x986 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850)) x6799))
(assert (= (x4408 (x6067 x5107 x652 x8297 x5470 x2440)) x5470))
(assert (x3961 1914215))
(assert (= x2755 (x986 (x4863 x1883 x2748 x5837 x2413 x4530 x2755))))
(assert (x6021 x6580))
(assert (=> (>= 10000 x8086) (= (x8569 x8086) 0)))
(assert (x1960 x2476))
(assert (x6021 x5655))
(assert (x6021 x7192))
(assert (= 64 (x864 (x8371 64 x1887 12))))
(assert (x6021 x6073))
(assert (x6021 x2213))
(assert (x2186 x6423))
(assert (= x3158 (=> (and (= (= 0 x1054) x6227) (or (not x6227) x6227)) x6339)))
(assert (x6021 x5062))
(assert (x6021 x7983))
(assert (x6021 x618))
(assert (x6021 x3550))
(assert (= x732 (and x6181 (not x3875))))
(assert (= (and x8557 x3849) x1082))
(assert (= (x864 (x4463 x128 x8018 x3984 x1135)) x128))
(assert (= x7594 (or x5410 x5602)))
(assert (not (x3961 (x1874 32 x3746))))
(assert (=> (>= 10000 x8216) (= 0 (x8569 x8216))))
(assert (= (x8569 13123866003235860548192500634644069355060014211693331341089165407210616913920) 0))
(assert (=> (<= x5518 10000) (= (x8569 x5518) 0)))
(assert (= (x569 (x4863 x6134 x8381 x8081 x3450 x3891 x7263)) x8081))
(assert (x6021 x5564))
(assert (= (and (not x6685) x7845) x2807))
(assert (x6021 x774))
(assert (x1635 1000000000 x6687))
(assert (= (and x6939 (not x4965)) x5801))
(assert (x6021 x329))
(assert (x6021 x1945))
(assert (x6021 x706))
(assert (= (x4378 (x6067 x1911 x3544 x5997 x2878 x5969)) x3544))
(assert (= (or (and (not x7108) x7757) x5064) x2217))
(assert (= x8229 (and x6384 (not x4650))))
(assert (= (and x5146 x7590) x7377))
(assert (=> (>= 10000 x3305) (= (x8569 x3305) 0)))
(assert (= x306 (x4378 (x1874 x62 x306))))
(assert (x6021 x8396))
(assert (= x6607 (=> (and (= x7153 0) (= x8394 x6883) (= x2219 false) (= x225 x2609) (= x145 x2796) (= x4737 x3356) (= x6099 true) (= x1543 2) (= x2078 x4510) (= x352 x7534) (= x7627 x8181) (= x6299 x4670) (= x1900 x6878) (= x3828 x3255) (= x2371 x8310) (= x4848 x6337) (= x3020 x2600)) x4830)))
(assert (x6021 x7530))
(assert (x6021 x4290))
(assert (not (x3961 (x4863 x7786 x2854 x3591 x5743 x6693 x7617))))
(assert (= x5740 (and x2511 (not x5060))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x636 x620 x7121 x4244 x4630)))
(assert (x5005 x7025))
(assert (x6021 x1886))
(assert (x2626 x2357))
(assert (not (x3961 (x8371 64 x7391 3))))
(assert (< (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x5263))
(assert (= (x986 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371)) x6594))
(assert (x6021 x8512))
(assert (=> (<= x6785 10000) (= 0 (x8569 x6785))))
(assert (= x2930 (and x7955 (not x454))))
(assert (x6021 x2288))
(assert (x6290 x1546))
(assert (x6021 x2143))
(assert (=> (<= x683 10000) (= 0 (x8569 x683))))
(assert (not (x3961 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064))))
(assert (x2662 x3030 32))
(assert (x6021 x4201))
(assert (= x7887 (x2668 (x4863 x112 x1756 x6665 x2535 x7887 x2377))))
(assert (x6021 x4579))
(assert (= (x864 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509)) x8295))
(assert (= x3121 (and x3733 x2163)))
(assert (x7457 x6246))
(assert (= x4629 (and x718 x5751)))
(assert (x6021 x7423))
(assert (x6021 x425))
(assert (x6021 x239))
(assert (x7457 x4663))
(assert (x6021 x6019))
(assert (= (x4378 (x8371 64 x4807 100)) x4807))
(assert (= (=> (and (= 0 x7959) (= x6490 x994) (= x406 x7245) (= x3527 x3470) (= x1054 1) (= x8258 x3308)) x3158) x5253))
(assert (not (x3961 (x8371 64 x6632 (ite (>= 32 x5107) x7657 (ite (>= 64 x5107) x7720 (ite (>= 96 x5107) x782 (ite (<= x5107 128) x3066 (ite (<= x5107 160) x3077 (ite (<= x5107 192) x4867 x1118))))))))))
(assert (x6021 x3495))
(assert (x5269 x991))
(assert (= (x864 (x8371 64 x4807 100)) 64))
(assert (< (x8371 64 x3255 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x569 (x8371 64 x5207 36)) 36))
(assert (=> (>= 10000 x3450) (= 0 (x8569 x3450))))
(assert (x3961 107317874183463056701504662589741776198067464202343767264461527615735374807040))
(assert (x6021 x702))
(assert (< (x1874 x8390 x1399) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x201 (and x4651 x8584)))
(assert (= x2286 (or x3947 x5497)))
(assert (< (x1874 x1911 x1743) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2626 x7117))
(assert (= (x1874 x81 x5974) (x8569 (x1874 x81 x5974))))
(assert (< (x8371 64 x158 (ite (>= 32 x8390) x3046 (ite (>= 64 x8390) x6218 (ite (<= x8390 96) x3520 (ite (<= x8390 128) x2175 (ite (>= 160 x8390) x3928 (ite (<= x8390 192) x3577 x7486))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or (and x4328 x8529) (and x432 x7167) (and x800 x5984) (and x8203 x2165) (and x6896 x4393)) x1774))
(assert (x6021 x6386))
(assert (x6021 x6903))
(assert (x2626 x720))
(assert (x6021 x6338))
(assert (= x1942 (and (not x1770) x453)))
(assert (> (x8371 64 x2516 36) 10000))
(assert (x6021 x1070))
(assert (< (x4463 x6151 x2347 x739 x8571) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x190))
(assert (x6021 x4102))
(assert (= (and x2277 x1279) x1827))
(assert (x6021 x5197))
(assert (x6021 x3712))
(assert (x6021 x651))
(assert (x6021 x5550))
(assert (x6021 x733))
(assert (x6021 x8081))
(assert (x6021 x5491))
(assert (x6021 x8590))
(assert (< (x8371 64 x2516 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x1616))
(assert (x6021 x5154))
(assert (x6021 x4558))
(assert (x7582 x6193))
(assert (x6021 x6095))
(assert (not (x3961 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805))))
(assert (x6021 x1751))
(assert (x6021 x6978))
(assert (x6021 x6655))
(assert (= x128 (x864 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064))))
(assert (x6021 x7417))
(assert (x6021 x7849))
(assert (x6021 x6883))
(assert (x6021 x2600))
(assert (= x6877 (x986 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401))))
(assert (> (x8371 64 x7601 7) 10000))
(assert (> (x4463 x6134 x7580 x5525 x125) 10000))
(assert (= (x4408 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805)) x2478))
(assert (x6021 x4209))
(assert (x6517 x7980 32))
(assert (= x7005 (x569 (x8371 x636 x862 x7005))))
(assert (x6021 x6758))
(assert (x6021 x7732))
(assert (x6021 x7985))
(assert (x6021 x4278))
(assert (x1960 x7896))
(assert (= x6442 (x569 (x8371 x7786 x2579 x6442))))
(assert (x6021 x917))
(assert (= 0 (x8569 89332125780766104441357105940599211734484755930370930871569612501041822040064)))
(assert (x6021 x4642))
(assert (x6021 x2359))
(assert (= (x4408 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409)) x6503))
(assert (x6021 x1780))
(assert (= x3475 (and x8570 x5383)))
(assert (= (x4378 (x8371 64 1 x3758)) 1))
(assert (= (x4378 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821)) x3588))
(assert (= (x986 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602)) x5241))
(assert (= x7012 (and x1082 (not x2320))))
(assert (x7457 x1832))
(assert (x6021 x4734))
(assert (x1960 x76))
(assert (= (and x722 x3151) x3017))
(assert (x6021 x7069))
(assert (= (and x4556 (not x4168)) x6334))
(assert (x6021 x92))
(assert (x6021 x2500))
(assert (= x3488 (and x1670 x8411)))
(assert (x6517 x703 256))
(assert (x6021 x3975))
(assert (=> (>= 10000 x6386) (= (x8569 x6386) 0)))
(assert (x6021 x4654))
(assert (=> (>= 10000 x6604) (= 0 (x8569 x6604))))
(assert (x6021 x1743))
(assert (=> (<= x8474 10000) (= (x8569 x8474) 0)))
(assert (x6021 x5032))
(assert (x6021 x4014))
(assert (x2186 x3958))
(assert (x6021 x2111))
(assert (< 10000 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424)))
(assert (= (and (not x3690) x6698) x8545))
(assert (x6021 x5874))
(assert (= x4578 (and x1136 x2402)))
(assert (=> (<= x4999 10000) (= 0 (x8569 x4999))))
(assert (x6021 x1432))
(assert (=> (>= 10000 x5574) (= (x8569 x5574) 0)))
(assert (x6021 x7722))
(assert (< (x8371 64 x5904 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x1874 x6134 x6756) 10000))
(assert (x6021 x739))
(assert (x6021 x7672))
(assert (x6021 x5545))
(assert (x6021 x8175))
(assert (= (x8569 x5056) (x8569 (+ 2 x5056))))
(assert (< 10000 (x8371 64 x3003 11)))
(assert (=> (>= 10000 x3582) (= (x8569 x3582) 0)))
(assert (x6021 x1342))
(assert (= x6776 (x569 (x4863 x1891 x2624 x6776 x7509 x4204 x6170))))
(assert (x6021 x3101))
(assert (x6021 x682))
(assert (= (=> (and (= x6490 x3440) (= x3308 x1198) (= 0 x3083) (= x1912 x4041) (= x7393 x2588) (= x2588 (x4375 255 x2330)) (= 2 x900) (= x2551 x2604)) x8256) x6209))
(assert (not (x3961 (x8371 64 x648 6))))
(assert (x6021 x8575))
(assert (=> (<= x5373 10000) (= (x8569 x5373) 0)))
(assert (x1960 x8378))
(assert (= (x4378 (x8371 64 x7753 7)) x7753))
(assert (x6290 x1665))
(assert (= x5401 (and x3121 x6133)))
(assert (x6021 x5185))
(assert (= (or x5163 (and x3434 (not x4223))) x805))
(assert (x6021 x2173))
(assert (x6021 x2316))
(assert (x6021 x4195))
(assert (x6021 x139))
(assert (= x3053 (x569 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183))))
(assert (=> (<= x4244 10000) (= 0 (x8569 x4244))))
(assert (= (=> (and (= (= x1915 0) x4223) (or x4223 (not x4223))) x2741) x6326))
(assert (=> (<= x1667 10000) (= (x8569 x1667) 0)))
(assert (x7457 x403))
(assert (= x7825 (x4378 (x8371 64 x7825 36))))
(assert (= (x8569 (+ 1 x4085)) (x8569 x4085)))
(assert (= (x864 (x8371 64 x7825 36)) 64))
(assert (=> (>= 10000 x6441) (= 0 (x8569 x6441))))
(assert (not (x3961 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602))))
(assert (x6021 x8325))
(assert (x6021 x3880))
(assert (= (or (and x2215 x4881) (and x8374 x312)) x2207))
(assert (= x3159 (and x6936 (not x4508))))
(assert (= (x569 (x8371 64 x6833 36)) 36))
(assert (x6021 x2322))
(assert (x6021 x4370))
(assert (= (=> (= x4481 (= 0 x7316)) (and (=> (and x4481 (and (= x5231 x2604) (= false x4130) (= x4675 true))) x6209) (=> (and (= x1906 (< x5231 64)) (not x4481)) (and (=> (and (and (= x1092 false) (= true x1199) (= x2604 0)) x1906) x6209) (=> (and (and (= x6576 x213) (= x344 354) (= x1892 x3388) (= x8141 x7613) (= x733 x3163) (= x3072 x4742) (= x6499 x8375) (= x4277 x7309) (= (x1856 290) x1758) (= x752 x1758) (= x3312 x7205) (= x1218 x7709) (= (x1856 322) x2461) (= x1468 x8498) (= x7111 x4294) (= x3109 x3220) (= x6095 x129)) (not x1906)) x429))))) x1936))
(assert (= (x8569 43931689107028929153831073962459296230956404255593708771276734084804920737792) 0))
(assert (x6021 x7422))
(assert (x6021 x5066))
(assert (x6021 x3706))
(assert (x6021 x7883))
(assert (= (x864 (x8371 64 x281 36)) 64))
(assert (= (x864 (x4863 x5107 x3059 x1297 x2154 x8061 x7331)) x5107))
(assert (x6021 x5335))
(assert (= (x864 (x6067 x2495 x3439 x1839 x1840 x3342)) x2495))
(assert (x6021 x387))
(assert (=> (<= x131 10000) (= 0 (x8569 x131))))
(assert (x6021 x4615))
(assert (x7457 255))
(assert (= (x569 (x8371 64 x7708 12)) 12))
(assert (x6021 x5502))
(assert (x6021 x8009))
(assert (x6021 x1900))
(assert (x6021 x2385))
(assert (x6021 x3969))
(assert (x6021 x6962))
(assert (x3961 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (x2662 x1018 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4408 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829)) x1152))
(assert (x2662 x6273 2))
(assert (x6021 x1966))
(assert (=> (>= 10000 x6424) (= (x8569 x6424) 0)))
(assert (x6021 x4253))
(assert (x6021 x4486))
(assert (= x1409 (x864 (x8371 x1409 x3287 x7102))))
(assert (= x6181 (and x6871 (not x6634))))
(assert (x6021 x3524))
(assert (= (and x2577 x2202) x6660))
(assert (=> (<= x973 10000) (= (x8569 x973) 0)))
(assert (= x5837 (x569 (x4863 x1883 x2748 x5837 x2413 x4530 x2755))))
(assert (= (or (and x1717 x6928) (and x6184 x2042) (and x7791 x6850)) x7006))
(assert (x6021 x5598))
(assert (= (x8569 (x4863 x6151 x876 x1903 x6351 x2911 x6088)) (x4863 x6151 x876 x1903 x6351 x2911 x6088)))
(assert (x6021 x5955))
(assert (= (x864 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183)) x1891))
(assert (x6021 x4313))
(assert (x6021 x7199))
(assert (x6021 x4061))
(assert (x6021 x1867))
(assert (x6021 x6044))
(assert (x6021 x8452))
(assert (x6021 x4964))
(assert (x6021 x5456))
(assert (x6021 x2326))
(assert (x6021 x728))
(assert (not (x3961 (x8371 64 x6604 2))))
(assert (= x2020 (x4408 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509))))
(assert (x6021 x2110))
(assert (= (and (not x2277) x1279) x6235))
(assert (= (x8569 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409)) (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409)))
(assert (= (x4378 (x8371 64 x6833 36)) x6833))
(assert (x6021 x8183))
(assert (x6021 x3489))
(assert (= (x569 (x8371 64 x1859 11)) 11))
(assert (= (x8371 x81 x161 x3096) (x8569 (x8371 x81 x161 x3096))))
(assert (=> (<= x3351 10000) (= 0 (x8569 x3351))))
(assert (= (x2668 (x4863 x1911 x1243 x4709 x2434 x4409 x2534)) x4409))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (and (not x2582) x259) x2941))
(assert (= (x569 (x6067 x1919 x2762 x836 x812 x6861)) x836))
(assert (x6021 x4161))
(assert (x6021 x8554))
(assert (x6021 x3390))
(assert (x6021 x3798))
(assert (=> (>= 10000 x4670) (= 0 (x8569 x4670))))
(assert (x6021 x7736))
(assert (x6021 x2128))
(assert (= 64 (x864 (x8371 64 x77 36))))
(assert (=> (<= x3042 10000) (= (x8569 x3042) 0)))
(assert (=> (>= 10000 x5107) (= (x8569 x5107) 0)))
(assert (= x5712 (and x6416 x7134)))
(assert (=> (>= 10000 x199) (= (x8569 x199) 0)))
(assert (x6021 x2036))
(assert (=> (>= 10000 x589) (= (x8569 x589) 0)))
(assert (=> (<= x1342 10000) (= 0 (x8569 x1342))))
(assert (x6021 x2002))
(assert (x6021 x2154))
(assert (x6021 x5518))
(assert (x6021 x8571))
(assert (x6021 x4311))
(assert (x6021 x7261))
(assert (= (and x3468 (not x7727)) x1303))
(assert (x6021 x6118))
(assert (= x5151 (and x6570 x7079)))
(assert (not (x3961 (x6067 x1919 x2762 x836 x812 x6861))))
(assert (= x5610 (and x5298 x8159)))
(assert (x6021 x1848))
(assert (x6021 x3644))
(assert (x6021 x294))
(assert (> (x6067 x112 x6250 x8267 x825 x6142) 10000))
(assert (= (x4408 (x4463 x112 x3807 x4106 x7605)) x7605))
(assert (x6021 x467))
(assert (x6021 x1388))
(assert (= x3732 (and x1200 (not x5411))))
(assert (> (x8371 64 x7772 100) 10000))
(assert (= x7757 (or x5540 x7431)))
(assert (x7457 x2830))
(assert (=> (<= x2854 10000) (= (x8569 x2854) 0)))
(assert (x6021 x6669))
(assert (x2662 x8314 128))
(assert (=> (>= 10000 x2672) (= (x8569 x2672) 0)))
(assert (x6021 x5630))
(assert (=> (<= x2789 10000) (= (x8569 x2789) 0)))
(assert (=> (>= 10000 x7725) (= 0 (x8569 x7725))))
(assert (x6021 x7189))
(assert (= x7019 (x4378 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064))))
(assert (= (x8371 x1883 x1070 x6150) (x8569 (x8371 x1883 x1070 x6150))))
(assert (x6021 x3591))
(assert (x6021 x3002))
(assert (= x8175 (x4378 (x8371 64 x8175 3))))
(assert (= (x4378 (x6067 x6134 x7827 x3042 x5877 x4498)) x7827))
(assert (= (and (not x3154) x3212) x3139))
(assert (x6021 x3723))
(assert (= x2505 (or (and x746 x4936) x7633 (and x1814 x4890) x7789 x2279 x6048 x1062)))
(assert (x6021 x4761))
(assert (x6021 x5762))
(assert (x6021 x6688))
(assert (= 6 (x569 (x8371 64 x3727 6))))
(assert (x6021 x4405))
(assert (= (and x2402 (not x1136)) x7446))
(assert (= (and x3519 x3564) x5872))
(assert (=> (>= 10000 x1732) (= 0 (x8569 x1732))))
(assert (x6021 x4095))
(assert (x6021 x1271))
(assert (x6021 x6604))
(assert (x6021 x5356))
(assert (x6021 x6503))
(assert (x2186 x2650))
(assert (x6021 x4214))
(assert (x1960 x1402))
(assert (x6021 x3240))
(assert (< 10000 (x4863 x1891 x2624 x6776 x7509 x4204 x6170)))
(assert (= (or x5948 x8291 x3795) x1527))
(assert (x6021 x4480))
(assert (x6021 x6979))
(assert (x6021 x4342))
(assert (=> (<= x5924 10000) (= 0 (x8569 x5924))))
(assert (= (x8371 64 x3727 6) (x8569 (x8371 64 x3727 6))))
(assert (not (x3961 (x8371 x5303 x6385 x7242))))
(assert (x6021 x2354))
(assert (x6021 x7642))
(assert (= (x569 (x8371 64 x77 36)) 36))
(assert (= x8153 (and x8595 x7279)))
(assert (= (and (not x7791) x6850) x1366))
(assert (x6021 x802))
(assert (x6021 x3666))
(assert (= (x864 (x1874 x1409 x6621)) x1409))
(assert (x6021 x3576))
(assert (= (and (not x2100) x5149) x1419))
(assert (x6021 x6813))
(assert (= (x4378 (x4463 x1883 x6542 x3545 x3441)) x6542))
(assert (= x2516 (x4378 (x8371 64 x2516 36))))
(assert (= x125 (x4408 (x4463 x6134 x7580 x5525 x125))))
(assert (x6021 x6254))
(assert (x6021 x6915))
(assert (x6021 x4980))
(assert (x6021 x3902))
(assert (=> (>= 10000 x150) (= 0 (x8569 x150))))
(assert (=> (<= x7358 10000) (= 0 (x8569 x7358))))
(assert (not (x3961 (x8371 x8295 x6192 x2459))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x3255 4)))
(assert (= x6090 (and x6972 x5828)))
(assert (=> (<= x2755 10000) (= 0 (x8569 x2755))))
(assert (x1960 x4004))
(assert (x6021 x2408))
(assert (x6021 x6142))
(assert (x6021 x1248))
(assert (x6021 x6282))
(assert (x6021 x2420))
(assert (= (and x6932 x7629) x691))
(assert (x6021 x1087))
(assert (= x2006 (x2668 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371))))
(assert (=> (>= 10000 x7719) (= 0 (x8569 x7719))))
(assert (x2186 x4731))
(assert (= (x4378 (x1874 32 104)) 104))
(assert (x6021 x7969))
(assert (x6021 x5609))
(assert (x6021 x5470))
(assert (= (x864 (x8371 64 x7601 7)) 64))
(assert (x6021 x7572))
(assert (x6021 x6132))
(assert (= (x4378 (x8371 64 x5207 6)) x5207))
(assert (not (x3961 (x8371 64 x7391 7))))
(assert (x6021 x3552))
(assert (x6021 x4367))
(assert (not (x3961 (x8371 64 x7970 100))))
(assert (=> (<= x1891 10000) (= (x8569 x1891) 0)))
(assert (< (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3171 10000) (= 0 (x8569 x3171))))
(assert (> (x3631 0) 10000))
(assert (x6290 x7432))
(assert (x6021 x6899))
(assert (= x6554 (x4378 (x8371 64 x6554 36))))
(assert (x6021 x2413))
(assert (x5269 x3030))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x5879 6)))
(assert (= x3600 (and x2166 (not x6022))))
(assert (x2186 x6739))
(assert (x6021 x3086))
(assert (x6021 x3439))
(assert (x6021 x6856))
(assert (= (and x6641 x5817) x7989))
(assert (= x5984 (and (not x858) x7187)))
(assert (x6021 x505))
(assert (x6021 x3451))
(assert (x7457 x2545))
(assert (= (and x6771 x5342) x4210))
(assert (> (x4463 x1891 x6971 x5481 x4245) 10000))
(assert (= x7492 (and x1953 (not x6704))))
(assert (= x6481 x5352))
(assert (= x8549 (or x7377 (and (not x7590) x5146))))
(assert (= (x864 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850)) x1919))
(assert (x6021 x3289))
(assert (= 64 (x864 (x8371 64 1 x7356))))
(assert (= x7786 (x864 (x1874 x7786 x2747))))
(assert (x6021 x1712))
(assert (x6021 x7205))
(assert (x3961 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (=> (>= 10000 x6880) (= 0 (x8569 x6880))))
(assert (x6021 x3749))
(assert (=> (>= 10000 x4321) (= 0 (x8569 x4321))))
(assert (= (x1880 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)) x2550))
(assert (= (x8569 (x8371 64 x5635 2)) (x8371 64 x5635 2)))
(assert (> (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805) 10000))
(assert (x2662 x7430 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x3548 x2507) (>= x2507 0) (= x6625 (x7731 x2738)) (= (- x6625 x5477) x4392) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6651 x5477)) (= x4946 x6843) (= x3998 (x4375 255 x414)) (= (+ x6651 x5477) x2507) (= x6651 (x6964 x8301)) (= 2 x4370) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2507)) x6760) x6249))
(assert (not (x3961 (x8371 x62 x6998 x2947))))
(assert (= (=> (and (= (x2640 516) x3815) (= x6753 (= x3815 0))) (and (=> (and (and (= (x6862 (+ x7032 32)) x7124) (= 132 x1196) (= (x6862 (+ 4 x4099)) x7397) (= true x3964) (= x7032 (x6862 (+ x7397 32))) (= false x3399) (= (x6862 (+ 32 x7124)) x5066)) x6753) x6541) (=> (and (and (= x4013 (x5088 354)) (= x3503 (x8371 64 x8175 5)) (= (> x4013 (ite (= 0 x1084) 10000 x1084)) x3006) (= x1084 (x7471 x3503))) (not x6753)) (and (=> (and x3006 (and (= x7686 true) (= x7877 (x6862 (+ 32 x8467))) (= x5927 false) (= 100 x1196) (= x380 (x6862 (+ 4 x4099))) (= x8467 (x6862 (+ 32 x380))))) x6541) (=> (and (not x3006) (and (= x2800 (x6862 (+ 32 x1476))) (= x8373 (x6458 x8531)) (= (x6862 (+ x842 x2257)) x910) (= x1476 (x6862 (+ x4099 4))) (= x32 (x6862 (+ x503 32))) (= (x6862 (+ x97 32)) x2544) (= x5647 (x8448 (- x3214 x1476))) (= (= 0 x8373) x4508) (= x824 (x8448 (- x910 x4099))) (= x1107 (x8448 (- x8513 x1476))) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3030) x2159) (= (x6862 (+ 31 x5790)) x507) (= (x2640 516) x6811) (= x1595 (x6862 (+ 32 x2800))) (= (x5088 354) x5790) (= x3030 (x6862 (+ x6811 31))) (= (x6862 (+ x32 32)) x7920) (= x583 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x507)) (= (x6556 450) x4126) (= x3214 (x6862 (+ x583 x4548))) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2605) x842) (= (x6862 (+ x4126 31)) x2605) (= x8513 (x6862 (+ x2159 x2544))) (= (x6862 (+ x1595 32)) x503) (= (x6862 (+ 192 x1476)) x97) (= x2257 (x6862 (+ 32 x3214))) (= x4548 (x6862 (+ 32 x8513))))) (and (=> (and (and (= x4423 (<= x605 x4180)) (= (x8302 x8531) x2451) (= (x8302 x3611) x4180) (= x7228 (< (+ x605 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x6529 (and x4423 x7228))) (not x4508)) (and (=> (and (and (= x1713 x4251) (= x389 0) (= x1446 x1276) (= x4535 x5392) (= x332 x2527)) (not x6529)) x4093) (=> (and (and (= x4896 (x6458 x1481)) (= (= x6811 (x480 196)) x7131) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6043 x605)) (= x4991 192) (= x3576 3313512704) (>= x4896 1) (= x8175 x5705) (= x824 x1918) (= (- x2285 x605) x430) (= x3285 false) (>= x824 420) (= x1107 x3359) (= (x632 x8531) x6043) (= x7863 x3611) (= x5647 x7185) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x5535) (= (or (and (= true (<= (- x1918 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (- x1918 4) 192)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1918 4))) x2972) (<= 0 x2073) (= (+ x6043 x605) x2073) (= x2285 (x8302 x3611)) (<= x2073 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x7875 127) (= false x338) (= 0 x2541) (= x2199 x2073) (>= x1918 420) (<= x7875 127) x7131) x6529) (and (=> x2972 x6481) (=> (and (not x2972) (= true x5460)) (and (=> (not x5460) x6481) (=> (and (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1918) true) (< 227 x1918)) x5717) x5460) (and (=> (and x5717 (and (= (< 18446744073709551615 x8575) x3428) (= (x3261 196) x8575))) (and (=> (and (not x3428) (and (= x4917 (< x1918 x3625)) (= x3625 (x6862 (+ 228 x8575))))) (and (=> x4917 x5352) (=> (and (= x6668 (< 18446744073709551615 x1107)) (not x4917)) (and (=> (and (not x6668) (and (= x4337 (x6862 (+ x7564 31))) (= (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4337) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1918)) (and (< x4337 x1918) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4337) (<= x1918 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x6399) (= x7564 (x6862 (+ 4 x1107))))) (and (=> (and x6399 (and (= x6685 (< 18446744073709551615 x7515)) (= x7515 (x3261 x7564)))) (and (=> (and (not x6685) (and (= (x6862 (+ x7564 32)) x3910) (= x263 (< x1918 x4297)) (= (x6862 (+ x7515 x3910)) x4297))) (and (=> x263 x5352) (=> (and (not x263) (= (> x5647 18446744073709551615) x6746)) (and (=> (and (not x6746) (and (= (x6862 (+ x5647 4)) x6259) (= (or (and (<= x1918 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x847)) (and (= (<= x1918 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x847)) (< x847 x1918))) x5677) (= (x6862 (+ x6259 31)) x847))) (and (=> (not x5677) x3640) (=> (and x5677 (and (= x7046 (> x8004 18446744073709551615)) (= x8004 (x3261 x6259)))) (and (=> x7046 x6931) (=> (and (not x7046) (and (= (x6862 (+ 32 x6259)) x4579) (= x1338 (x6862 (+ x8004 x4579))) (= x8311 (> x1338 x1918)))) (and (=> (and (not x8311) (and (= x5010 x5392) (= x6114 1) (= x1446 x1970) (= x1294 x2527) (= x467 x4251))) x7944) (=> x8311 x5352))))))) (=> x6746 x6481))))) (=> x6685 x6931))) (=> (not x6399) x3640))) (=> x6668 x6481))))) (=> x3428 x6931))) (=> (not x5717) x3640))))))))) (=> (and x4508 (and (= x1196 0) (= x4379 false) (= true x3592))) x6541))))))) x5003))
(assert (x6021 x4627))
(assert (x2626 (ite (not (= x6879 0)) 1 0)))
(assert (= x1626 (and (not x1343) x5141)))
(assert (x6021 x3667))
(assert (x6021 x4771))
(assert (< 10000 (x1874 x5107 x1246)))
(assert (x6021 x2690))
(assert (x6021 x6995))
(assert (=> (<= x3059 10000) (= 0 (x8569 x3059))))
(assert (x2186 x321))
(assert (x6021 x5708))
(assert (x6021 x7759))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617)))
(assert (x6021 x5362))
(assert (x6021 x2789))
(assert (x6021 x331))
(assert (x6021 x5649))
(assert (x6021 x4802))
(assert (x6021 x41))
(assert (x6021 x1294))
(assert (x6021 x1434))
(assert (x6021 x7716))
(assert (x6021 x6257))
(assert (= x217 (x569 (x4463 x81 x2653 x217 x3582))))
(assert (= x259 (and x4971 x8337)))
(assert (x6021 x1274))
(assert (= x620 (x4378 (x6067 x636 x620 x7121 x4244 x4630))))
(assert (= (x4378 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671)) x4729))
(assert (x6021 x4617))
(assert (x6021 x132))
(assert (x7582 x2113))
(assert (= (x8371 x7786 x2579 x6442) (x8569 (x8371 x7786 x2579 x6442))))
(assert (x6021 x2208))
(assert (=> (>= 10000 x3841) (= (x8569 x3841) 0)))
(assert (= (and x3295 x6222) x5443))
(assert (= (and x7779 x7492) x2572))
(assert (x6021 x5952))
(assert (=> (<= x6754 10000) (= 0 (x8569 x6754))))
(assert (x6021 x4148))
(assert (x6021 x3469))
(assert (< 10000 (x4463 x81 x2653 x217 x3582)))
(assert (< 10000 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)))
(assert (x6021 x8548))
(assert (x6021 x7382))
(assert (x6021 x8528))
(assert (< 10000 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213)))
(assert (=> (<= x3925 10000) (= (x8569 x3925) 0)))
(assert (= 0 (x8569 8365236128558009046904410293209581292053118695343348878262597880337030709248)))
(assert (= x603 (x4378 (x8371 64 x603 36))))
(assert (x3961 49960157028345592648530624234191905822321225401495951855107091972775720517632))
(assert (< (x8371 64 1 x3946) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x7121 (x569 (x6067 x636 x620 x7121 x4244 x4630))))
(assert (=> (<= x7263 10000) (= (x8569 x7263) 0)))
(assert (=> (>= 10000 x6231) (= (x8569 x6231) 0)))
(assert (x6021 x5936))
(assert (= x6207 (or x5137 x6977 x6084)))
(assert (x6021 x4672))
(assert (< 10000 (x6067 x5303 x8144 x4874 x6943 x3508)))
(assert (= (and (not x4391) x5906) x7190))
(assert (= (x864 (x8371 64 x5904 36)) 64))
(assert (= x6254 (x4408 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183))))
(assert (x6021 x149))
(assert (x6021 x4870))
(assert (= (and x1703 (not x5372)) x2407))
(assert (x6021 x6661))
(assert (x6021 x2048))
(assert (x6021 x6557))
(assert (x7457 x507))
(assert (x1960 x1042))
(assert (= x5835 (and x2608 x4274)))
(assert (x6021 x5444))
(assert (= x6388 (and (not x7629) x6932)))
(assert (x6021 x3321))
(assert (x6021 x3727))
(assert (x6021 x1732))
(assert (= (x1874 x7786 x2747) (x8569 (x1874 x7786 x2747))))
(assert (= (x4378 (x8371 64 x3611 2)) x3611))
(assert (= x77 (x4378 (x8371 64 x77 36))))
(assert (=> (>= 10000 x6925) (= 0 (x8569 x6925))))
(assert (x6021 x2786))
(assert (= (x8371 64 x2046 12) (x8569 (x8371 64 x2046 12))))
(assert (= (x8569 (+ x2299 1)) (x8569 x2299)))
(assert (x6021 x5236))
(assert (x5973 x6273))
(assert (= x1891 (x864 (x4463 x1891 x6971 x5481 x4245))))
(assert (x1960 x4817))
(assert (= x3244 (and (not x3074) x5050)))
(assert (=> (>= 10000 x2735) (= 0 (x8569 x2735))))
(assert (= x6159 (=> (and (and (= x1590 (x2306 x3547)) (= x4788 (x2306 x8170)) (= (x2306 x1988) x6332) (= x2045 (x2306 x5839)) (= (x1874 x1409 x6621) x2053) (= (x6862 (+ x8170 128)) x8434) (= x74 (x2306 x8170)) (= (x6862 (+ 160 x8170)) x6308) (= (x2306 x7999) x8431) (= (x6862 (+ x8170 32)) x6080) (= x7939 (x2306 x8170)) (<= x8390 224) (= x4026 (x2306 x7976)) (= (x2306 x8170) x3088) (= x7110 (x6862 (+ 128 x8170))) (= (x6862 (+ 32 x8170)) x2749) (= (x2306 x4252) x2456) (= (x6862 (+ 96 x8170)) x2398) (= x6758 (x6862 (+ x8170 64))) (= x2175 (x6067 x8390 x6994 x6858 x6332 x8121)) (= (x2306 x3348) x131) (= x1822 (x2306 x6255)) (= x1409 (- x8390 32)) (= (x6862 (+ 128 x8170)) x3547) (= (x6862 (+ x8170 160)) x3176) (= (x6862 (+ 192 x8170)) x3297) (= x2636 (x6862 (+ x8170 32))) (= (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068) x7486) (= x3287 (x2306 x8170)) (= x937 (x6862 (+ 96 x8170))) (= (x3631 0) x1524) (= (x4463 x1409 x5975 x4026 x1178) x4555) (= (x2306 x7396) x2492) (= x8068 (x2306 x3297)) (= (x2306 x8170) x5975) (= (x2306 x4405) x4768) (= (x6862 (+ 64 x8170)) x4959) (= (x3105 x8390 x663 x36 x6382 x131 x3931 x6591) x3577) (= x5306 (x6862 (+ 64 x8170))) (= (x6862 (+ x8170 64)) x5839) (= x4163 (x2306 x8170)) (= (x2306 x2636) x7102) (= (x3294 x440) x2212) (= x6732 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117)) (= x6218 (x8371 x8390 x579 x1433)) (= (x2306 x7110) x3607) (= x1433 (x2306 x4265)) (= (x6862 (+ x8170 64)) x4252) (= x3520 (x4463 x8390 x3088 x2679 x2045)) (= (x1874 x8390 x1399) x3046) (= (x2306 x6758) x5518) (= (x6862 (+ 96 x8170)) x3348) (= x1988 (x6862 (+ x8170 64))) (= (x6862 (+ 96 x8170)) x6242) (= x2354 (x2306 x564)) (= (x2306 x8170) x4019) (= (x2306 x8170) x6621) (= (x6862 (+ 32 x8170)) x4405) (= x7659 (x2306 x8434)) (= x6382 (x2306 x5306)) (= (x2306 x4959) x6764) (= (x2306 x5427) x1178) (= x6858 (x2306 x2749)) (= (x6862 (+ x8170 32)) x7976) (= x4934 (x2306 x6135)) (= x3507 (x6862 (+ 32 x8170))) (= (x2306 x3176) x6947) (= x2074 (x6862 (+ x8548 32))) (= x663 (x2306 x8170)) (<= 32 x8390) (= x5669 (x6862 (+ x8170 32))) (= (x8371 64 x158 (ite (<= x8390 32) x3046 (ite (<= x8390 64) x6218 (ite (<= x8390 96) x3520 (ite (>= 128 x8390) x2175 (ite (<= x8390 160) x3928 (ite (>= 192 x8390) x3577 x7486))))))) x7942) (= x7372 (x2306 x2068)) (= x7999 (x6862 (+ 32 x8170))) (= (x6862 (+ 64 x8170)) x7396) (= x4524 (x6862 (+ x8170 96))) (= (x4863 x1409 x4788 x7372 x6764 x5069 x3607) x4838) (= x3174 (ite (= 0 x1409) x1524 (ite (<= x1409 32) x2053 (ite (>= 64 x1409) x4257 (ite (<= x1409 96) x4555 (ite (<= x1409 128) x894 (ite (>= 160 x1409) x4838 x6732))))))) (= (x6862 (+ 32 x905)) x4428) (= x579 (x2306 x8170)) (= (< 0 x2212) x3697) (= x6135 (x6862 (+ x8170 96))) (= (x2306 x6080) x2679) (= x2039 (x2306 x4524)) (= (x2306 x8170) x1399) (= x5978 (x6862 (+ x8170 32))) (= x6938 (x6862 (+ 128 x8170))) (= (x2306 x5753) x874) (= (x2306 x2398) x5069) (= (x6862 (+ 64 x8170)) x5427) (= (x6862 (+ x8170 32)) x5850) (= x6591 (x2306 x975)) (= (x2306 x5669) x36) (= x6255 (x6862 (+ 96 x8170))) (= (x2306 x6938) x3931) (= (x2306 x3507) x212) (= (x4863 x8390 x4163 x6722 x2492 x4934 x2354) x3928) (= x6994 (x2306 x8170)) (= x3117 (x2306 x6308)) (= x905 (x6862 (+ 160 x8170))) (= x2068 (x6862 (+ 32 x8170))) (= x5753 (x6862 (+ 64 x8170))) (= (x2306 x5850) x6722) (= x8390 (x8448 (- x2074 x8170))) (= x7447 (x6862 (+ x3881 x8170))) (= x4257 (x8371 x1409 x3287 x7102)) (= x4265 (x6862 (+ x8170 32))) (= x894 (x6067 x1409 x7939 x8431 x874 x5094)) (= x5094 (x2306 x937)) (= (x2306 x6242) x8121) (= (x6862 (+ x8170 128)) x564) (= (x6862 (+ 160 x8170)) x975) (= (x6862 (+ x3881 x8170)) x8548)) (or (not x3697) (and x3697 (and (and (= x393 (x8402 x7302)) (= x6367 (> x2212 32))) (or (not x6367) (and x6367 (and (and (= x4509 (x6862 (+ x4428 32))) (= x4395 (x4986 x7368)) (= (> x2212 64) x4506) (= x7368 (x6862 (+ x7302 32)))) (or (not x4506) (and (and (or (and x5817 (and (= (x4680 x5261) x5187) (<= x2212 128) (= x6447 (x6862 (+ x4428 96))) (= x5261 (x6862 (+ 96 x7302))))) (not x5817)) (and (= x4888 (x6862 (+ 64 x4428))) (= (< 96 x2212) x5817) (= x481 (x8510 x8079)) (= x8079 (x6862 (+ 64 x7302))))) x4506))))))))) x1799)))
(assert (= (and x5433 x7901) x2412))
(assert (= (x4378 (x8371 x62 x6998 x2947)) x6998))
(assert (= x4662 (and x1316 (not x5305))))
(assert (x6021 x7409))
(assert (x6021 x1988))
(assert (x6021 x6553))
(assert (x6021 x4671))
(assert (= (x864 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213)) x3841))
(assert (=> (>= 10000 x462) (= 0 (x8569 x462))))
(assert (x6021 x6861))
(assert (x6021 x183))
(assert (= (and x2450 x7967) x3840))
(assert (x7457 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (=> (<= x6933 10000) (= (x8569 x6933) 0)))
(assert (x6021 x7175))
(assert (x6021 x960))
(assert (x6021 x219))
(assert (= x4691 (=> (and (or (and (and (= x6767 x219) (= (- x1694 x5171) x3889) (= x1453 x7264) (= x5171 (ite (= 0 x5903) x752 0)) (= (+ x6894 x5171) x6767) (= x1099 x8330) (<= x6767 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x6894 x5171) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1006 x3611) x6894) (<= 0 x6767) (= x4558 x5903) (= (x2060 x3109) x1694) (= x6121 x2655) (= x1461 x2181)) x6606) (and (and (= x7264 x1453) (= x1461 x2181) (= x6121 x2655) (= x1099 x8330) (= x4558 x5903)) (not x6606))) (= x6606 (= 0 x5903))) x4884)))
(assert (x6021 x8437))
(assert (x6021 x7370))
(assert (x6021 x7437))
(assert (x6021 x1150))
(assert (x6021 x3788))
(assert (= (x864 (x4863 x7786 x2854 x3591 x5743 x6693 x7617)) x7786))
(assert (= (and x1416 x4609) x6301))
(assert (x6021 x6146))
(assert (x6021 x8181))
(assert (= (x8569 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838)) (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838)))
(assert (> (x4863 x3841 x4962 x1975 x1342 x6300 x7068) 10000))
(assert (not (x3961 (x8371 64 x5898 100))))
(assert (< (x8371 x2495 x911 x634) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x5381))
(assert (x5269 x2554))
(assert (x6021 x2406))
(assert (x6021 x5404))
(assert (= (x4463 x1919 x5254 x4545 x6880) (x8569 (x4463 x1919 x5254 x4545 x6880))))
(assert (= (or x1125 x1585) x6298))
(assert (= (x986 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064)) x5024))
(assert (x6021 x4897))
(assert (x6021 x8552))
(assert (= (x864 (x6067 x5303 x8144 x4874 x6943 x3508)) x5303))
(assert (=> (<= x5241 10000) (= (x8569 x5241) 0)))
(assert (< 10000 (x8371 x5303 x6385 x7242)))
(assert (=> (<= x7372 10000) (= (x8569 x7372) 0)))
(assert (x6021 x7980))
(assert (x6021 x3809))
(assert (= x1670 (and (not x3556) x3985)))
(assert (= (or x5561 x6081) x6029))
(assert (x7457 x6423))
(assert (x6021 x3497))
(assert (> (x1874 x7786 x2747) 10000))
(assert (= (and (not x1959) x3820) x7745))
(assert (x6021 x7710))
(assert (= x7902 (and x1942 (not x4921))))
(assert (= x6852 (and x56 (not x1194))))
(assert (x6021 x5289))
(assert (= x5969 (x2668 (x6067 x1911 x3544 x5997 x2878 x5969))))
(assert (x2186 x479))
(assert (x6021 x7500))
(assert (x6021 x7428))
(assert (= x319 (and (not x3912) x7783)))
(assert (x6021 x5755))
(assert (= (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829) (x8569 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829))))
(assert (= (or (and x3277 x4537) (and x1366 x4044) (and x1963 x2167)) x262))
(assert (x2662 x4663 128))
(assert (x6021 x7463))
(assert (x6021 x7856))
(assert (x6021 x6111))
(assert (x6021 x8002))
(assert (= x6424 (x7859 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424))))
(assert (= x916 (or x4723 x8377)))
(assert (x6021 x6302))
(assert (= x4106 (x569 (x4463 x112 x3807 x4106 x7605))))
(assert (x6021 x5144))
(assert (x6021 x5847))
(assert (x6021 x1439))
(assert (= (and x5805 x5740) x2608))
(assert (not (x3961 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325))))
(assert (x6021 x6007))
(assert (= (and x1728 x469) x6025))
(assert (x6021 x580))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x5107 x1246)))
(assert (= (x4378 (x8371 64 x3268 12)) x3268))
(assert (x6021 x7057))
(assert (x6021 x3579))
(assert (> (x4863 x7741 x1138 x7294 x4427 x6476 x4714) 10000))
(assert (x3961 35477284059277649309253622239531857712935939630608236286772267603529442882419))
(assert (x6021 x649))
(assert (= x7625 (or x2656 x1508 x5681 x8235 x7022 x5801 x2393 x2873 x4864 x776)))
(assert (x6021 x2045))
(assert (=> (>= 10000 x1859) (= (x8569 x1859) 0)))
(assert (= (and x3875 x6181) x1954))
(assert (x6021 x4125))
(assert (< (x1874 32 x3746) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x6283))
(assert (x6021 x598))
(assert (x2186 x6132))
(assert (< (x1874 32 x2318) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6001 (and x2599 x2090)))
(assert (x6021 x20))
(assert (= (x864 (x4463 x1409 x5975 x4026 x1178)) x1409))
(assert (= (x864 (x8371 x1919 x294 x5490)) x1919))
(assert (x6021 x7645))
(assert (x6021 x5992))
(assert (= (x569 (x4463 x1883 x6542 x3545 x3441)) x3545))
(assert (x6021 x8445))
(assert (x6021 x5207))
(assert (=> (<= x1376 10000) (= (x8569 x1376) 0)))
(assert (not (x3961 (x4863 x3841 x4962 x1975 x1342 x6300 x7068))))
(assert (=> (>= 10000 x2495) (= (x8569 x2495) 0)))
(assert (=> (<= x5898 10000) (= 0 (x8569 x5898))))
(assert (< (x8371 64 x6632 (ite (<= x1911 32) x1094 (ite (<= x1911 64) x6429 (ite (<= x1911 96) x6204 (ite (>= 128 x1911) x61 (ite (>= 160 x1911) x1250 (ite (>= 192 x1911) x6248 x6152))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x8199 x2790) x5494))
(assert (< 10000 (x8371 64 x1298 10)))
(assert (x6021 x8531))
(assert (not (x3961 (x8371 64 1 x3946))))
(assert (x6021 x7017))
(assert (x6021 x5129))
(assert (x6021 x7053))
(assert (x6021 x1043))
(assert (x6021 x1028))
(assert (x6021 x2283))
(assert (x6021 x1477))
(assert (x6517 x2545 2))
(assert (x6021 x6144))
(assert (x6021 x6894))
(assert (x770 x59))
(assert (x6021 x717))
(assert (=> (>= 10000 x1624) (= 0 (x8569 x1624))))
(assert (x6021 x4340))
(assert (x6021 x2797))
(assert (not (x3961 (x8371 64 x603 6))))
(assert (=> (<= x4320 10000) (= (x8569 x4320) 0)))
(assert (= (and x3519 (not x3564)) x6932))
(assert (= 0 (x8569 57896044618658097711785492504343953926634992332820282019728792003956)))
(assert (x2186 x1890))
(assert (x6021 x6473))
(assert (x6021 x381))
(assert (= 64 (x864 (x8371 64 1 x4796))))
(assert (x6021 x4708))
(assert (not (x3961 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409))))
(assert (= x3519 (and x6380 x8003)))
(assert (= x5823 (and (not x4782) x5151)))
(assert (x6021 x3516))
(assert (= x3947 (and (not x7656) x289)))
(assert (x2662 x4319 32))
(assert (= (x8569 (x8371 x62 x6998 x2947)) (x8371 x62 x6998 x2947)))
(assert (= x4342 (x569 (x6067 x6151 x5373 x4342 x8092 x2907))))
(assert (x6021 x3349))
(assert (x6021 x3881))
(assert (x6021 x5607))
(assert (= x5721 (x4378 (x8371 x1911 x5721 x7539))))
(assert (= x1953 (or x4925 x5813 x8487)))
(assert (< 10000 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)))
(assert (=> (>= 10000 x5837) (= 0 (x8569 x5837))))
(assert (=> (<= x294 10000) (= 0 (x8569 x294))))
(assert (x6021 x6062))
(assert (= (and x6570 (not x7079)) x7802))
(assert (x6021 x1451))
(assert (x7457 x2010))
(assert (x6021 x3228))
(assert (x6021 x8454))
(assert (< (x8371 x128 x7890 x4531) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x874))
(assert (x6021 x4160))
(assert (x6021 x7101))
(assert (= x2163 (and x6090 (not x1116))))
(assert (= (x864 (x4863 x6134 x8381 x8081 x3450 x3891 x7263)) x6134))
(assert (x6021 x7487))
(assert (x6021 x2335))
(assert (= (and x6471 (not x7376)) x378))
(assert (x6021 x6756))
(assert (x6021 x6513))
(assert (x6021 x5721))
(assert (= (=> (and (= (= x3489 0) x2603) (or x2603 (not x2603))) x7643) x3330))
(assert (= (and x454 x7955) x5884))
(assert (x6021 x4321))
(assert (x6021 x3636))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x1911 x5721 x7539)))
(assert (x2662 x6266 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x155 (and (not x8463) x2340)))
(assert (=> (>= 10000 x2738) (= (x8569 x2738) 0)))
(assert (= x5111 (and (not x6664) x6548)))
(assert (x6021 x5542))
(assert (x6021 x4037))
(assert (=> (>= 10000 x366) (= (x8569 x366) 0)))
(assert (x6021 x4737))
(assert (=> (<= x4547 10000) (= 0 (x8569 x4547))))
(assert (= (x4463 x62 x589 x6754 x6216) (x8569 (x4463 x62 x589 x6754 x6216))))
(assert (= (x864 (x1874 x8295 x6990)) x8295))
(assert (x6021 x1146))
(assert (x6021 x2818))
(assert (x7457 x2326))
(assert (x6021 x5399))
(assert (= (and (not x3172) x5162) x2511))
(assert (x6021 x321))
(assert (x6021 x1552))
(assert (= (x8371 64 x6604 2) (x8569 (x8371 64 x6604 2))))
(assert (= (and x1500 (not x3428)) x6310))
(assert (= x3846 (and x1462 (not x8273))))
(assert (= x2691 (and x2340 x8463)))
(assert (= (=> (and (= x1202 true) (= 0 x6843) (= false x8254)) x6249) x2280))
(assert (x6021 x6392))
(assert (= (and x4273 x7900) x31))
(assert (not (x3961 (x4863 x2495 x250 x7219 x6882 x1933 x4430))))
(assert (=> (>= 10000 x3268) (= 0 (x8569 x3268))))
(assert (x6021 x376))
(assert (x6021 x7029))
(assert (< (x8371 64 x7970 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2662 x7479 2))
(assert (x2626 x44))
(assert (not (x3961 (x8371 64 x8175 5))))
(assert (= (x8569 (x8371 64 x3255 3)) (x8371 64 x3255 3)))
(assert (not (x3961 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371))))
(assert (= (x2668 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971)) x6231))
(assert (x6021 x2933))
(assert (x6021 x6522))
(assert (= x1632 (x4378 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230))))
(assert (x6021 x272))
(assert (=> (>= 10000 x4341) (= 0 (x8569 x4341))))
(assert (x6021 x6466))
(assert (=> (>= 10000 x5224) (= 0 (x8569 x5224))))
(assert (x6021 x617))
(assert (not (x3961 (x8371 x1919 x294 x5490))))
(assert (x6021 x2124))
(assert (= (and x573 x5662) x1733))
(assert (x6021 x1676))
(assert (= (or x2480 x4922) x6416))
(assert (=> (>= 10000 x230) (= 0 (x8569 x230))))
(assert (< 10000 (x8371 x1409 x3287 x7102)))
(assert (x6021 x8478))
(assert (= x7857 (=> (and (= x3240 x4156) (= x976 x2828) (= x7946 x5160) (= x7033 x4161) (= x7483 x3768)) x6245)))
(assert (= (x4378 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509)) x7950))
(assert (x6021 x4828))
(assert (= (x986 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805)) x7285))
(assert (=> (<= x1640 10000) (= 0 (x8569 x1640))))
(assert (x6021 x8469))
(assert (x6021 x6080))
(assert (x7582 x1315))
(assert (x6021 x4151))
(assert (x6021 x3030))
(assert (= x2563 (and x6704 x1953)))
(assert (x6021 x3023))
(assert (=> (<= x6693 10000) (= 0 (x8569 x6693))))
(assert (= x6596 (and x7230 x5566)))
(assert (x6021 x1284))
(assert (x6021 x1380))
(assert (< 10000 (x4463 x636 x197 x5649 x3751)))
(assert (= x3990 (and x3114 x6344)))
(assert (x6021 x3832))
(assert (x6021 x2683))
(assert (x6021 x4785))
(assert (= x6096 (x4408 (x6067 x8295 x2784 x8304 x6096 x7098))))
(assert (=> (<= x8276 10000) (= (x8569 x8276) 0)))
(assert (< (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x2398))
(assert (= x3571 (=> (and (= x7528 (x1949 x310)) (= (= x7528 0) x5747)) (and (=> (and (and (= (x8371 64 x8175 5) x4602) (= x3307 (> x1224 (ite (= 0 x1884) 10000 x1884))) (= (x7471 x4602) x1884) (= (x2526 x344) x1224)) (not x5747)) (and (=> (and (and (= x3390 (x6862 (+ x2111 32))) (= x2604 100) (= x5637 (x6862 (+ x3390 32))) (= x2111 (x6862 (+ x7684 4))) (= x537 true) (= false x734)) x3307) x6209) (=> (and (and (= (x1949 x310) x5865) (= (x6862 (+ x2940 x6846)) x3711) (= (x6862 (+ 32 x2530)) x7838) (= x3983 (x6862 (+ 32 x3051))) (= x5004 (= 0 x2874)) (= x2530 (x6862 (+ 32 x4685))) (= (x8448 (- x2565 x3051)) x7933) (= x1085 (x6862 (+ 192 x3051))) (= x1168 (x6862 (+ 32 x7934))) (= x3393 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2650)) (= (x6862 (+ x1260 x2176)) x2565) (= x1260 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2554)) (= x5503 (x6862 (+ x344 32))) (= x2554 (x6862 (+ x7107 31))) (= (x6862 (+ 32 x1085)) x2940) (= x2176 (x6862 (+ x3711 32))) (= x4685 (x6862 (+ 32 x3983))) (= x6846 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6739)) (= x2874 (x6458 x3109)) (= (x8448 (- x3711 x3051)) x5482) (= (x6862 (+ 32 x7838)) x272) (= (x5048 x7934) x1459) (= x3051 (x6862 (+ 4 x7684))) (= x6739 (x6862 (+ x5865 31))) (= x7107 (x2526 x344)) (= (x6862 (+ x8407 x3393)) x5940) (= (x6862 (+ x1459 31)) x2650) (= (x8448 (- x5940 x7684)) x1838) (= (x6862 (+ x2565 32)) x8407)) (not x3307)) (and (=> (and (and (= 0 x2604) (= x8503 true) (= x807 false)) x5004) x6209) (=> (and (and (= (and x5249 x7031) x4607) (= x5052 (x5683 x3611)) (= x7031 (>= x5052 x752)) (= (x5683 x3109) x2632) (= x5249 (< (+ x2632 x752) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x5004)) (and (=> (and (and (= (x624 x3109) x3157) (= 3313512704 x7352) (= x5041 0) (= (= (x5409 196) x5865) x5087) (>= x3373 1) (<= 420 x1838) (= x6022 (or (and (= true (<= (- x771 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (- x771 4) 192)) (> (- x771 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2746 x5552) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x5936) x5087 (= false x8230) (<= x7249 127) (= x1815 (- x5046 x752)) (= (x6458 x1481) x3373) (= x3793 x5482) (= x5046 (x5683 x3611)) (= x4778 x8175) (< (+ x3157 x752) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x2746 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 127 x7249) (<= 420 x771) (= x2746 (+ x3157 x752)) (= false x8395) (>= x2746 0) (= x6547 192) (= x7933 x3333) (= x3611 x5154) (= x1838 x771)) x4607) (and (=> (and (= true x2016) (not x6022)) (and (=> (not x2016) x3722) (=> (and x2016 (= (and (> x771 227) (= (<= x771 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x8404)) (and (=> (not x8404) x3867) (=> (and x8404 (and (= x1907 (x5442 196)) (= (> x1907 18446744073709551615) x6928))) (and (=> (and (not x6928) (and (= x3277 (< x771 x1027)) (= (x6862 (+ 228 x1907)) x1027))) (and (=> x3277 x6430) (=> (and (not x3277) (= (< 18446744073709551615 x5482) x4600)) (and (=> x4600 x3722) (=> (and (and (= (x6862 (+ 31 x1772)) x3662) (= (x6862 (+ 4 x5482)) x1772) (= (or (and (> x3662 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x771 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771) (<= x3662 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3662 x771))) x1452)) (not x4600)) (and (=> (not x1452) x3867) (=> (and x1452 (and (= x2042 (> x7878 18446744073709551615)) (= x7878 (x5442 x1772)))) (and (=> (and (not x2042) (and (= x6318 (x6862 (+ x6175 x7878))) (= x6175 (x6862 (+ 32 x1772))) (= x1963 (> x6318 x771)))) (and (=> (and (not x1963) (= (< 18446744073709551615 x7933) x8389)) (and (=> (and (and (= x4256 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771) (> x4138 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x4138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x771 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4138 x771)))) (= x4138 (x6862 (+ 31 x5444))) (= x5444 (x6862 (+ x7933 4)))) (not x8389)) (and (=> (not x4256) x3867) (=> (and (and (= x5282 (x5442 x5444)) (= (< 18446744073709551615 x5282) x7791)) x4256) (and (=> (and (not x7791) (and (= (x6862 (+ x2314 x5282)) x2369) (= x4044 (> x2369 x771)) (= (x6862 (+ 32 x5444)) x2314))) (and (=> (and (not x4044) (and (= x3312 x1461) (= x5903 1) (= x6121 x7709) (= x8330 x3388) (= x8498 x7264))) x4691) (=> x4044 x6430))) (=> x7791 x837))))) (=> x8389 x3722))) (=> x1963 x6430))) (=> x2042 x837))))))))) (=> x6928 x837))))))) (=> x6022 x3722))) (=> (and (not x4607) (and (= x3388 x1099) (= x3312 x2181) (= x7709 x2655) (= 0 x4558) (= x8498 x1453))) x4884))))))) (=> (and (and (= x2288 (x6862 (+ x274 32))) (= true x5722) (= false x7196) (= x2604 132) (= x2569 (x6862 (+ 4 x7684))) (= (x6862 (+ x2569 32)) x2879) (= (x6862 (+ x2879 32)) x274)) x5747) x6209)))))
(assert (=> (<= x1175 10000) (= (x8569 x1175) 0)))
(assert (= (and (not x545) x1873) x8506))
(assert (x6021 x574))
(assert (=> (<= x2911 10000) (= 0 (x8569 x2911))))
(assert (x6021 x900))
(assert (= (x4378 (x8371 64 x158 (ite (>= 32 x8390) x3046 (ite (>= 64 x8390) x6218 (ite (<= x8390 96) x3520 (ite (>= 128 x8390) x2175 (ite (>= 160 x8390) x3928 (ite (<= x8390 192) x3577 x7486)))))))) x158))
(assert (x6021 x6971))
(assert (x6021 x158))
(assert (x6021 x3093))
(assert (x6021 x5692))
(assert (=> (<= x2154 10000) (= (x8569 x2154) 0)))
(assert (= x5654 (and x7915 x248)))
(assert (x6021 x6888))
(assert (= x164 (=> (and (= x8437 x5630) (= x408 x6100) (= x5356 x5939) (= x4465 x47)) x5830)))
(assert (x6021 x4100))
(assert (=> (<= x8092 10000) (= 0 (x8569 x8092))))
(assert (x6021 x6447))
(assert (x6021 x4729))
(assert (< 10000 (x4863 x112 x1756 x6665 x2535 x7887 x2377)))
(assert (= (x4378 (x1874 32 x3746)) x3746))
(assert (x6021 x1175))
(assert (x6021 x579))
(assert (=> (<= x2948 10000) (= (x8569 x2948) 0)))
(assert (= x62 (x864 (x4863 x62 x2406 x1667 x1539 x5391 x8104))))
(assert (= 0 (x8569 34591783479076665078880830389440322436311164112910831269305739813291000201216)))
(assert (x6021 x7753))
(assert (x6021 x2399))
(assert (= (and (not x5290) x2793) x4406))
(assert (= (or x3553 x6674) x1574))
(assert (x6021 x4531))
(assert (x6021 x3083))
(assert (x6021 x8120))
(assert (x6021 x7087))
(assert (x6021 x4674))
(assert (x6021 x4114))
(assert (x6021 x5026))
(assert (= (and (not x5083) x8519) x7545))
(assert (= x8216 (x569 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736))))
(assert (x6021 x8431))
(assert (=> (<= x7971 10000) (= 0 (x8569 x7971))))
(assert (x2662 x2918 256))
(assert (x6021 x7770))
(assert (not (x3961 (x1874 x5303 x7695))))
(assert (x6021 x2702))
(assert (= x7477 (=> (and (or (and x1913 (and (= x2614 x4352) (<= x4004 4294967295) (= x7769 x1584) (= (= x6411 (x4664 x3611)) x6261) (= x2912 x4886) x6261 (= x6411 (x7782 x3611)) x7490 (= (<= x7451 (x4664 x3611)) x7490) (= x6111 x1262) (= x7451 (x7782 x3611)) (= x4639 x6892) (= x6856 x8150))) (and (not x1913) (and (= x1129 x4886) (= x1584 x7534) (= x145 x4639) (= x4848 x2614) (= x225 x8150) (= x4737 x1262)))) (and (= (x640 x8100) x7025) (= x1173 (x3275 x8109)) (= x774 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1043)) (> x6319 x8109) (= x1913 (> x1915 0)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x6319)) (= (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x4483) x4435) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8109) (= x1043 (x6862 (+ x496 31))) (= x2931 (x6862 (+ x6125 x496))) (= (x8448 (- x6319 x8109)) x7774) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8109) (= x2466 (x6862 (+ x6319 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x6319)) (<= x8109 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x6319 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x6319) (= x6319 (x6862 (+ x774 x6125))) (< x6319 x8170) (= (x4375 26959946667150639794667015087019630673637144422540572481103610249215 x7025) x4483) (= x8170 (x6862 (+ x6319 192))) (= x8100 (x6862 (+ x8109 32))) (<= x6319 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x6319) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x6319)) (= (x8448 (- x7774 32)) x6890))) x6326)))
(assert (x6021 x5650))
(assert (x6021 x6237))
(assert (x6021 x1659))
(assert (< 10000 (x6067 x1883 x5624 x7756 x4567 x683)))
(assert (x6021 x4336))
(assert (x7582 x4149))
(assert (= x5390 (and x1116 x6090)))
(assert (= x8259 (or x8204 x6190)))
(assert (x6021 x8305))
(assert (x6021 x6088))
(assert (= (and (not x5267) x1186) x2237))
(assert (=> (<= x5069 10000) (= (x8569 x5069) 0)))
(assert (not (x3961 (x8371 64 x574 (ite (>= 32 x1919) x3278 (ite (<= x1919 64) x4467 (ite (<= x1919 96) x4583 (ite (>= 128 x1919) x4084 (ite (>= 160 x1919) x6538 (ite (>= 192 x1919) x3882 x5579))))))))))
(assert (x6021 x6170))
(assert (=> (<= x1070 10000) (= 0 (x8569 x1070))))
(assert (x6021 x6957))
(assert (= x1883 (x864 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671))))
(assert (= x7622 (=> (= x7101 (+ 292 x5787)) x2777)))
(assert (= x2485 (and x3843 (not x2274))))
(assert (< 10000 (x6067 x81 x5956 x3927 x743 x3464)))
(assert (= x8188 (x4378 (x8371 x6151 x8188 x1872))))
(assert (x6021 x4745))
(assert (= (ite (>= 32 x7786) x3782 (ite (>= 64 x7786) x3982 (ite (<= x7786 96) x494 (ite (>= 128 x7786) x7813 (ite (<= x7786 160) x1314 (ite (<= x7786 192) x2102 x5667)))))) (x569 (x8371 64 x574 (ite (>= 32 x7786) x3782 (ite (<= x7786 64) x3982 (ite (>= 96 x7786) x494 (ite (<= x7786 128) x7813 (ite (>= 160 x7786) x1314 (ite (>= 192 x7786) x2102 x5667))))))))))
(assert (= x6591 (x1880 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591))))
(assert (x6021 x4281))
(assert (> (x4463 x1409 x5975 x4026 x1178) 10000))
(assert (= (=> (= (+ x1345 x5550) x602) x8012) x5943))
(assert (= x6151 (x864 (x1874 x6151 x199))))
(assert (x6021 x7025))
(assert (x6021 x703))
(assert (x7457 x4319))
(assert (=> (>= 10000 x1911) (= (x8569 x1911) 0)))
(assert (=> (<= x7671 10000) (= 0 (x8569 x7671))))
(assert (= (and x189 x3755) x7739))
(assert (= 36 (x569 (x8371 64 x281 36))))
(assert (x6021 x4066))
(assert (= (and (not x3735) x5212) x8235))
(assert (= x4060 (x4378 (x8371 64 x4060 36))))
(assert (< (x8371 64 x2957 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1635 256 x7707))
(assert (= x1466 (and x6642 (not x6032))))
(assert (x6021 x7263))
(assert (x6021 x6919))
(assert (x6290 x4802))
(assert (= x7219 (x569 (x4863 x2495 x250 x7219 x6882 x1933 x4430))))
(assert (=> (<= x2108 10000) (= (x8569 x2108) 0)))
(assert (x6021 x5472))
(assert (x6021 x7287))
(assert (= (x4378 (x6067 x1891 x4148 x3347 x3693 x2735)) x4148))
(assert (x6021 x4632))
(assert (=> (>= 10000 x2534) (= 0 (x8569 x2534))))
(assert (x6021 x5210))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x1409 x5975 x4026 x1178)))
(assert (x6021 x4928))
(assert (< (x8371 64 x4807 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x6100))
(assert (x6021 x3485))
(assert (= (=> (and (and (= x2012 (> x3108 0)) (= x3108 (x3116 x2127)) (= (x8448 (- x6370 x4209)) x1311) (= x3968 (x6862 (+ x1086 x4237))) (= x6370 (x6862 (+ x1086 x7428))) (= x5412 (x6862 (+ x6370 32))) (= (x6862 (+ x5947 32)) x21) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x479) x7428) (= x5947 (x6862 (+ 32 x692))) (= x479 (x6862 (+ 31 x4237)))) (or (not x2012) (and (and (and (= (x912 x1120) x3823) (= x2812 (> x3108 32))) (or (and (and (or (not x1641) (and x1641 (and (or (not x7376) (and x7376 (and (= x4064 (x1077 x373)) (>= 128 x3108) (= x4833 (x6862 (+ 96 x5412))) (= x373 (x6862 (+ x1120 96)))))) (and (= x7376 (< 96 x3108)) (= x4425 (x6862 (+ x1120 64))) (= (x6862 (+ 64 x5412)) x6992) (= x5617 (x6317 x4425)))))) (and (= x1712 (x6862 (+ 32 x1120))) (= x1641 (< 64 x3108)) (= (x6862 (+ 32 x5412)) x2265) (= (x7150 x1712) x1630))) x2812) (not x2812))) x2012))) x6333) x3898))
(assert (x6290 x3170))
(assert (x6021 x8398))
(assert (x6021 x2715))
(assert (= (x864 (x8371 64 x7391 7)) 64))
(assert (x6021 x4726))
(assert (x6021 x1262))
(assert (= x8044 (=> (and (= x6612 2) (= x149 (x4375 255 x4981)) (= x1912 x7260) (= x6144 x6490) (= 0 x5897) (= x5445 x8494) (= x1479 x149) (= x5614 x3308)) x6709)))
(assert (< (x1874 x128 x2672) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2171 (or x2621 x8367)))
(assert (x6021 x3729))
(assert (= (x864 (x8371 64 x8226 36)) 64))
(assert (x2662 x4803 2))
(assert (x6021 x3714))
(assert (= (and x2064 x4853) x3213))
(assert (= 0 (x8569 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (< (x4463 x1883 x6542 x3545 x3441) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 3 (x569 (x8371 64 x2957 3))))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x6021 x6035))
(assert (= (and x3468 x7727) x2610))
(assert (= (and (not x7145) x2904) x5957))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x6134 x8381 x8081 x3450 x3891 x7263)))
(assert (= (and x5298 (not x8159)) x4871))
(assert (x6021 x3022))
(assert (=> (<= x6018 10000) (= 0 (x8569 x6018))))
(assert (x6021 x2636))
(assert (x2662 x6521 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1823) (= 0 (x8569 x1823))))
(assert (x6021 x8397))
(assert (= 64 (x864 (x8371 64 x574 (ite (<= x7786 32) x3782 (ite (<= x7786 64) x3982 (ite (>= 96 x7786) x494 (ite (<= x7786 128) x7813 (ite (<= x7786 160) x1314 (ite (>= 192 x7786) x2102 x5667))))))))))
(assert (= (x986 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)) x5847))
(assert (x6021 x1715))
(assert (=> (>= 10000 x4998) (= 0 (x8569 x4998))))
(assert (= (x4378 (x8371 64 x1130 0)) x1130))
(assert (x6021 x4263))
(assert (x6021 x6134))
(assert (= x6224 (x1880 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177))))
(assert (x6021 x4425))
(assert (x6021 x2028))
(assert (=> (>= 10000 x3439) (= 0 (x8569 x3439))))
(assert (x6021 x4693))
(assert (x2662 x3958 32))
(assert (x6021 x6754))
(assert (=> (>= 10000 x6655) (= 0 (x8569 x6655))))
(assert (= (x2668 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424)) x3403))
(assert (x6021 x1822))
(assert (= x6801 (x1880 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801))))
(assert (x6021 x4051))
(assert (= x6524 (x4378 (x8371 64 x6524 12))))
(assert (x6021 x5201))
(assert (= (x4408 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068)) x5518))
(assert (x6021 x2848))
(assert (= (=> (and (= x2120 (= x4161 0)) (or x2120 (not x2120))) x7912) x6245))
(assert (x6021 x1548))
(assert (x6021 x767))
(assert (= (and x7310 x6001) x3538))
(assert (x6021 x5332))
(assert (x2662 x3536 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x5798))
(assert (x1960 x3011))
(assert (= x4977 x2242))
(assert (= (or x2941 x2915) x6977))
(assert (x2662 x6521 32))
(assert (= x5690 (and x5204 x4744)))
(assert (x2626 x4791))
(assert (x6021 x1562))
(assert (x1635 32 x5483))
(assert (< 10000 (x1874 x5303 x7695)))
(assert (= x8052 (and x3102 x3307)))
(assert (= (and x7680 x3506) x4291))
(assert (x6021 x6665))
(assert (=> (>= 10000 x7509) (= (x8569 x7509) 0)))
(assert (= (=> (and (= x4853 (= 0 x2648)) (or (and x4853 (and (= (+ x3023 x1405) x6603) (= x2833 x1850) (= x4160 x6603) (< (+ x1405 x3023) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x6603 0) (= x839 x8490) (= x1405 (ite (= 0 x2648) x3619 0)) (<= x6603 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3023 (x3420 x3611)) (= x2211 x8528) (= (x5327 x4771) x6341) (= x4912 x2648) (= x7292 (- x6341 x1405)))) (and (and (= x2211 x8528) (= x8490 x839) (= x2833 x1850) (= x4912 x2648)) (not x4853)))) x3081) x4314))
(assert (x6021 x7827))
(assert (= x8061 (x2668 (x4863 x5107 x3059 x1297 x2154 x8061 x7331))))
(assert (x6021 x1561))
(assert (=> (<= x917 10000) (= (x8569 x917) 0)))
(assert (= (x8569 (x6067 x8390 x6994 x6858 x6332 x8121)) (x6067 x8390 x6994 x6858 x6332 x8121)))
(assert (x6021 x39))
(assert (x6517 x6193 256))
(assert (x6021 x6411))
(assert (x6021 x386))
(assert (> (x8371 64 x5581 36) 10000))
(assert (x6021 x8494))
(assert (x2662 x6131 256))
(assert (= (x8371 64 x4670 36) (x8569 (x8371 64 x4670 36))))
(assert (= 64 (x864 (x8371 64 x2957 3))))
(assert (x6021 x4032))
(assert (x6021 x3291))
(assert (x6021 x217))
(assert (x6021 x1695))
(assert (x6021 x4120))
(assert (= (x4378 (x1874 x8295 x6990)) x6990))
(assert (= (x2668 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794)) x2164))
(assert (= (x1880 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117)) x3117))
(assert (=> (<= x7950 10000) (= 0 (x8569 x7950))))
(assert (x6021 x50))
(assert (=> (<= x7963 10000) (= (x8569 x7963) 0)))
(assert (x6021 x884))
(assert (x6021 x4109))
(assert (= x1131 (and x6543 (not x7697))))
(assert (= 0 (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639838)))
(assert (x2186 128))
(assert (not (x3961 (x8371 x6151 x8188 x1872))))
(assert (x6021 x8109))
(assert (x6021 x4417))
(assert (x6021 x2719))
(assert (= x3722 x837))
(assert (= (and x5050 x3074) x2814))
(assert (x6021 x2369))
(assert (x1960 x4348))
(assert (= x2698 (and x2775 (not x4387))))
(assert (x6021 x8543))
(assert (= (x569 (x6067 x128 x7070 x5224 x6130 x3885)) x5224))
(assert (x6021 x6952))
(assert (x6021 x2339))
(assert (x2186 x2881))
(assert (x6290 x2918))
(assert (x6021 x4469))
(assert (x6021 x1726))
(assert (x2626 (ite (not (= 0 x879)) 1 0)))
(assert (= (and x5971 (not x643)) x7203))
(assert (x6021 x3250))
(assert (= x2653 (x4378 (x4463 x81 x2653 x217 x3582))))
(assert (= (x2668 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671)) x6028))
(assert (x6021 x2235))
(assert (x6021 x710))
(assert (x6021 x7421))
(assert (x6021 x4415))
(assert (x6021 x7618))
(assert (x6021 x1980))
(assert (= (and x4580 (not x2972)) x2096))
(assert (= (and x7674 x4972) x3273))
(assert (x6021 x3080))
(assert (x6021 x4131))
(assert (=> (>= 10000 x3977) (= 0 (x8569 x3977))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x3841 x4840 x1148)))
(assert (x1960 x4449))
(assert (x6021 x8585))
(assert (=> (>= 10000 x6358) (= (x8569 x6358) 0)))
(assert (x6021 x2394))
(assert (= (x864 (x4863 x7741 x1138 x7294 x4427 x6476 x4714)) x7741))
(assert (= (and x4961 (not x7549)) x7450))
(assert (x6021 x1941))
(assert (= (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177) (x8569 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177))))
(assert (x6021 x3313))
(assert (= (x864 (x1874 32 x3111)) 32))
(assert (= (x4378 (x8371 64 x7601 7)) x7601))
(assert (= x1728 (and x6223 x966)))
(assert (= (x569 (x8371 64 x648 6)) 6))
(assert (x6021 x2244))
(assert (x6021 x4833))
(assert (x6021 x1821))
(assert (= (x2668 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213)) x7577))
(assert (not (x3961 (x8371 64 x2516 36))))
(assert (= (and x7324 x290) x8255))
(assert (x6021 x2541))
(assert (= (x4408 (x4463 x1883 x6542 x3545 x3441)) x3441))
(assert (x6021 x1992))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971)))
(assert (< (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x8527) x3013) x3118))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x574 (ite (<= x1919 32) x3278 (ite (<= x1919 64) x4467 (ite (>= 96 x1919) x4583 (ite (>= 128 x1919) x4084 (ite (<= x1919 160) x6538 (ite (>= 192 x1919) x3882 x5579)))))))))
(assert (x6021 x7333))
(assert (< 10000 (x8371 64 x5898 100)))
(assert (=> (<= x1105 10000) (= 0 (x8569 x1105))))
(assert (x7457 x4032))
(assert (x6021 x2113))
(assert (x7457 x6266))
(assert (x6021 x2516))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x5303 x3458 x3478 x2190 x1189 x7928)))
(assert (> (x8371 64 x574 (ite (<= x1919 32) x3278 (ite (>= 64 x1919) x4467 (ite (<= x1919 96) x4583 (ite (>= 128 x1919) x4084 (ite (>= 160 x1919) x6538 (ite (>= 192 x1919) x3882 x5579))))))) 10000))
(assert (= x5328 (x4408 (x4463 x7741 x4301 x1145 x5328))))
(assert (=> (<= x5508 10000) (= 0 (x8569 x5508))))
(assert (= x5481 (x569 (x4463 x1891 x6971 x5481 x4245))))
(assert (= (and (not x5747) x4174) x3102))
(assert (x6021 x8107))
(assert (x6021 x3059))
(assert (= (x864 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805)) x6151))
(assert (x6021 x7293))
(assert (= (and x2262 (not x8581)) x1586))
(assert (x6021 x7896))
(assert (x7457 x145))
(assert (= (x8569 x2104) (x8569 (+ 2 x2104))))
(assert (x6021 x8572))
(assert (x2626 1000000000))
(assert (x6021 x3297))
(assert (x6021 x8197))
(assert (x6290 x3584))
(assert (x6021 x5693))
(assert (x6021 x2451))
(assert (x6021 x893))
(assert (= (or x3688 x6660) x8190))
(assert (= 64 (x864 (x8371 64 x6833 36))))
(assert (= x6223 (and x2013 x1984)))
(assert (= (and x6613 (not x5645)) x8348))
(assert (x6021 x4180))
(assert (x6021 x8539))
(assert (= (x8569 x1578) (x8569 (+ 1 x1578))))
(assert (=> (<= x3727 10000) (= 0 (x8569 x3727))))
(assert (= x3067 (=> (and (= x1832 (x4628 x145 2)) (= x5393 (> x5366 0)) (= x5366 (x8448 (- x8173 (mod (ite (> 32 x3562) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (- x1021 132) x2197) (= x8173 (x4375 1 x145)) (= x3562 (ite (< 0 x8173) x1832 (x4375 127 x1832)))) (and (=> (not x5393) x6607) (=> (and (and (= (= x342 0) x7901) (= (+ 32 x1021) x2959) (= x342 (x4375 1 x145))) x5393) (and (=> (and (and (= x6243 (+ x2394 x2959)) (or (= x2394 32) (= x2394 0)) (= x3057 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x145)) (= x2394 (* 32 (ite (not (= 0 x3562)) 1 0)))) x7901) x2567) (=> (and (not x7901) (and (and (= (< 0 x3562) x6222) (= (x1874 32 104) x2372)) (or (and (not x6222) (= 0 x3902)) (and (and (= (x3775 x2372) x7040) (= 32 x3902) (<= x3562 32)) x6222)))) x4843)))))))
(assert (x2626 x5992))
(assert (< 10000 (x8371 64 x3611 1)))
(assert (= (and x5317 (not x2863)) x3996))
(assert (=> (>= 10000 x3524) (= (x8569 x3524) 0)))
(assert (= (x8569 49960157028345592648530624234191905822321225401495951855107091972775720517632) 0))
(assert (= x7783 (and x198 (not x6725))))
(assert (= (or x6618 x7581) x8516))
(assert (x3961 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (= (and x444 (not x5868)) x4679))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x1891 x6971 x5481 x4245)))
(assert (= x1376 (x4378 (x4463 x5303 x1376 x7722 x5491))))
(assert (= (x4463 x2495 x1522 x3977 x5655) (x8569 (x4463 x2495 x1522 x3977 x5655))))
(assert (x6021 x5389))
(assert (x6021 x1630))
(assert (=> (>= 10000 x1484) (= 0 (x8569 x1484))))
(assert (x6021 x538))
(assert (= (and x581 x4020) x4266))
(assert (= x336 (=> (= x7687 (+ x5380 292)) x5875)))
(assert (x6021 x6444))
(assert (not (x3961 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617))))
(assert (x6021 x7728))
(assert (= x2046 (x4378 (x8371 64 x2046 12))))
(assert (= (x4378 (x1874 x1911 x1743)) x1743))
(assert (x6021 x5421))
(assert (< 10000 (x8371 x1919 x294 x5490)))
(assert (=> (>= 10000 x7825) (= 0 (x8569 x7825))))
(assert (x1960 x696))
(assert (= (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068) (x8569 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068))))
(assert (x6021 x2854))
(assert (= x8226 (x4378 (x8371 64 x8226 36))))
(assert (= (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801) (x8569 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801))))
(assert (x6021 x5997))
(assert (x6021 x29))
(assert (= (x864 (x8371 64 x603 36)) 64))
(assert (x6021 x3288))
(assert (= x1509 (and x1462 x8273)))
(assert (x7457 x3170))
(assert (x1960 x5692))
(assert (= (x4863 x8390 x4163 x6722 x2492 x4934 x2354) (x8569 (x4863 x8390 x4163 x6722 x2492 x4934 x2354))))
(assert (= x8390 (x864 (x1874 x8390 x1399))))
(assert (=> (<= x8531 10000) (= 0 (x8569 x8531))))
(assert (x6021 x4067))
(assert (x6021 x4618))
(assert (x6021 x5923))
(assert (> (x4863 x128 x4320 x1602 x6915 x2789 x4998) 10000))
(assert (x1635 32 (ite (not (= 0 x6155)) 1 0)))
(assert (x6021 x7055))
(assert (x6021 x1915))
(assert (= (x8569 (x8371 64 x1298 10)) (x8371 64 x1298 10)))
(assert (x6021 x778))
(assert (= (x864 (x1874 32 x3746)) 32))
(assert (= (or x299 x6718) x8562))
(assert (= x6997 (and x8146 x669)))
(assert (x6021 x3836))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x7786 x2854 x3591 x5743 x6693 x7617)))
(assert (= x5624 (x4378 (x6067 x1883 x5624 x7756 x4567 x683))))
(assert (> (x8371 64 x6632 (ite (<= x5107 32) x7657 (ite (<= x5107 64) x7720 (ite (>= 96 x5107) x782 (ite (>= 128 x5107) x3066 (ite (<= x5107 160) x3077 (ite (>= 192 x5107) x4867 x1118))))))) 10000))
(assert (x6021 x7024))
(assert (= (=> (and (= x2950 x3202) (= x7462 x2611) (= x5175 x1019) (= x6046 x7826) (= x3647 x3934) (= x5331 x6550) (= x4870 x830) (= x5517 x3676) (= x2036 x1079) (= x1455 x962) (= x7341 x5092) (= x741 x515) (= x3573 x5022)) x3871) x75))
(assert (= (x8569 (x6067 x2495 x3439 x1839 x1840 x3342)) (x6067 x2495 x3439 x1839 x1840 x3342)))
(assert (x6021 x2892))
(assert (x2186 x4963))
(assert (x6021 x5104))
(assert (> (x8371 64 x603 36) 10000))
(assert (x6021 x1196))
(assert (x2186 x1265))
(assert (=> (>= 10000 x4768) (= (x8569 x4768) 0)))
(assert (x6021 x6987))
(assert (=> (<= x6151 10000) (= 0 (x8569 x6151))))
(assert (x6021 x4763))
(assert (=> (<= x7068 10000) (= 0 (x8569 x7068))))
(assert (x6021 x6519))
(assert (x6021 x3100))
(assert (= (x6067 x128 x7070 x5224 x6130 x3885) (x8569 (x6067 x128 x7070 x5224 x6130 x3885))))
(assert (x5269 x7162))
(assert (x6021 x6075))
(assert (< 10000 (x8371 64 1 x3946)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x8175 5)))
(assert (= x6643 (x569 (x6067 x7741 x6208 x6643 x6566 x3171))))
(assert (= x4260 (and x694 x2021)))
(assert (= (and x1986 (not x2098)) x3512))
(assert (= (or (and x401 x5723) (and x5645 x6613) (and x4970 x6961) (and x528 x2566) (and x6543 x7697) (and x3175 x3488) (and x2274 x3843) (and x2863 x5317) (and x2268 x6787)) x6610))
(assert (x6021 x1010))
(assert (= x5050 (and x7824 x7308)))
(assert (x6021 x5191))
(assert (x6021 x2879))
(assert (= 64 (x864 (x8371 64 x5207 36))))
(assert (x6021 x5635))
(assert (x6021 x136))
(assert (x6290 x4856))
(assert (x6021 x304))
(assert (=> (>= 10000 x8213) (= 0 (x8569 x8213))))
(assert (x3961 486791245))
(assert (x1960 x5593))
(assert (= (and x6633 (not x3824)) x6853))
(assert (x6021 x4021))
(assert (= x8023 (and x2869 (not x5594))))
(assert (x6021 x1546))
(assert (x6021 x1264))
(assert (x6021 x389))
(assert (x6021 x4184))
(assert (=> (>= 10000 x6030) (= (x8569 x6030) 0)))
(assert (x3961 4294967295))
(assert (x6021 x5041))
(assert (= (x8569 (x1874 32 104)) (x1874 32 104)))
(assert (x6021 x402))
(assert (> (x8371 64 x5879 6) 10000))
(assert (= x1706 (x4408 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971))))
(assert (=> (<= x7086 10000) (= 0 (x8569 x7086))))
(assert (x6021 x4409))
(assert (= x7022 (and (not x5099) x619)))
(assert (=> (>= 10000 x6250) (= 0 (x8569 x6250))))
(assert (x6021 x3606))
(assert (= (and x7130 (not x6587)) x3128))
(assert (=> (<= x6688 10000) (= (x8569 x6688) 0)))
(assert (x6021 x7734))
(assert (= x3287 (x4378 (x8371 x1409 x3287 x7102))))
(assert (x6021 x5671))
(assert (=> (<= x5879 10000) (= 0 (x8569 x5879))))
(assert (= (=> (and (= x5130 (> x7765 0)) (= (ite (> x8169 150) 150 x8169) x7385) (= (x6862 (+ 32 x3630)) x4104)) (and (=> x5130 x5370) (=> (and (and (or (not x1136) (and (and (and (= (x1987 x1956) x6583) (= (< 32 x4254) x4229)) (or (and x4229 (and (or (and x7481 (and (or (and (and (<= x4254 128) (= x3791 (x6862 (+ x1956 96))) (= (x6862 (+ x4209 96)) x4448) (= x2659 (x5072 x3791))) x1511) (not x1511)) (and (= x578 (x6862 (+ x1956 64))) (= x1511 (> x4254 96)) (= (x2092 x578) x1166) (= (x6862 (+ x4209 64)) x3219)))) (not x7481)) (and (= x362 (x6862 (+ x4209 32))) (= (< 64 x4254) x7481) (= x8453 (x7206 x3933)) (= (x6862 (+ 32 x1956)) x3933)))) (not x4229))) x1136)) (and (= (x6862 (+ x1120 64)) x8187) (= (x1987 x1701) x8582) (= (x8371 64 x7391 7) x7246) (= x1565 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617)) (= x7359 (x6067 x636 x620 x7121 x4244 x4630)) (= x2067 (x6862 (+ x1120 32))) (= (x6862 (+ 128 x1120)) x546) (= x8069 (x6862 (+ 128 x1120))) (= (x6862 (+ x1120 192)) x2778) (= (x1987 x3869) x3751) (= (x1987 x8069) x8142) (= x3432 (x1987 x623)) (= (x1987 x5188) x5649) (= x7121 (x1987 x7561)) (= x3272 (x1874 x636 x5609)) (= (x1987 x1120) x862) (= x4910 (x6862 (+ 96 x1120))) (= x1136 (< 0 x4254)) (= x5188 (x6862 (+ x1120 32))) (= x491 (x6862 (+ x1120 160))) (= x3148 (x1987 x2702)) (= (x1987 x932) x5272) (= (x6862 (+ x1120 32)) x623) (= x960 (x1987 x1120)) (= x72 (x4463 x636 x197 x5649 x3751)) (= x7561 (x6862 (+ 32 x1120))) (= (x6862 (+ x1120 128)) x2702) (= (x1987 x8187) x1706) (= (x1987 x546) x2150) (<= x636 224) (= x8312 (x1987 x1120)) (= (x1987 x1120) x620) (= (x6862 (+ 96 x1120)) x2592) (= x860 (x8371 x636 x862 x7005)) (= (x6862 (+ x1120 32)) x6295) (= (x6862 (+ x1120 64)) x1701) (= (x6862 (+ 160 x1120)) x8172) (= (x1987 x2067) x2587) (= (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971) x3658) (= x3869 (x6862 (+ 64 x1120))) (= x2140 (x6862 (+ x1120 64))) (= x4491 (x6862 (+ 32 x1120))) (= x932 (x6862 (+ 64 x1120))) (= x1796 (x1987 x491)) (= (x1987 x6295) x7005) (= x7347 (x3631 0)) (= (x6862 (+ 96 x1120)) x8454) (= x5379 (x1987 x1120)) (= x5609 (x1987 x1120)) (= (x1987 x4491) x256) (= x4150 (x1987 x2592)) (= x4617 (x1987 x8172)) (= x3247 (x1987 x8454)) (= x197 (x1987 x1120)) (= (x6862 (+ x1120 96)) x7818) (= x4254 (x1987 x7535)) (= (ite (= x636 0) x7347 (ite (<= x636 32) x3272 (ite (>= 64 x636) x860 (ite (<= x636 96) x72 (ite (<= x636 128) x7359 (ite (>= 160 x636) x6040 (ite (>= 192 x636) x1565 x3658))))))) x1115) (= x6040 (x4863 x636 x5379 x256 x5272 x4150 x8142)) (= (x1987 x2778) x7971) (= (x1987 x4910) x6231) (= x4244 (x1987 x2140)) (= (x1987 x2127) x636) (= x4630 (x1987 x7818)))) (not x5130)) x5849))) x3410))
(assert (= (and x1622 (not x1795)) x891))
(assert (x6021 x503))
(assert (x6021 x3678))
(assert (x6021 x5845))
(assert (= x6851 (and x4698 x5778)))
(assert (x6021 x5345))
(assert (= (x8569 (x8371 64 x8175 3)) (x8371 64 x8175 3)))
(assert (x6021 x6433))
(assert (=> (>= 10000 x874) (= 0 (x8569 x874))))
(assert (x6021 x4465))
(assert (x6021 x507))
(assert (x2186 x4108))
(assert (x6021 x522))
(assert (= x1762 (and x6301 x4010)))
(assert (= x2048 (x2668 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838))))
(assert (= (and (not x2016) x3600) x485))
(assert (= (x8371 64 x6632 (ite (>= 32 x5107) x7657 (ite (>= 64 x5107) x7720 (ite (<= x5107 96) x782 (ite (>= 128 x5107) x3066 (ite (>= 160 x5107) x3077 (ite (>= 192 x5107) x4867 x1118))))))) (x8569 (x8371 64 x6632 (ite (>= 32 x5107) x7657 (ite (>= 64 x5107) x7720 (ite (>= 96 x5107) x782 (ite (>= 128 x5107) x3066 (ite (>= 160 x5107) x3077 (ite (<= x5107 192) x4867 x1118))))))))))
(assert (x6021 x1970))
(assert (x6021 x6514))
(assert (< 10000 (x8371 64 x1859 11)))
(assert (= x2660 (or x3079 x6696 x7802 x6934 x5823)))
(assert (x6021 x2950))
(assert (x1635 32 x4791))
(assert (x7457 x5598))
(assert (x6021 x7121))
(assert (x6021 x8387))
(assert (x2662 x2010 128))
(assert (= x848 (x4408 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230))))
(assert (x6021 x6267))
(assert (= (and x2123 x6404) x528))
(assert (= x6730 (and x2465 (not x1687))))
(assert (= x5167 (or x1245 x4349)))
(assert (= (x4408 (x4863 x8295 x8185 x6925 x979 x5754 x2033)) x979))
(assert (=> (<= x6858 10000) (= 0 (x8569 x6858))))
(assert (= (x569 (x8371 x5107 x8206 x4569)) x4569))
(assert (= x5871 (=> (and (= true x7429) (= false x4388) (= x1188 0)) x5100)))
(assert (< 10000 (x8371 64 x2046 12)))
(assert (< (x4863 x636 x5379 x256 x5272 x4150 x8142) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2662 x3536 32))
(assert (not (x3961 (x4463 x1409 x5975 x4026 x1178))))
(assert (x6021 x7219))
(assert (not (x3961 (x8371 64 x6554 36))))
(assert (= (x4378 (x8371 64 x6632 (ite (>= 32 x1911) x1094 (ite (>= 64 x1911) x6429 (ite (<= x1911 96) x6204 (ite (<= x1911 128) x61 (ite (>= 160 x1911) x1250 (ite (>= 192 x1911) x6248 x6152)))))))) x6632))
(assert (x6021 x2959))
(assert (x6021 x6904))
(assert (x6021 x3155))
(assert (x6021 x3136))
(assert (=> (<= x3255 10000) (= (x8569 x3255) 0)))
(assert (x6021 x1001))
(assert (x6021 x8467))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x7753 7)))
(assert (x6021 x600))
(assert (= (x4378 (x4863 x5303 x3458 x3478 x2190 x1189 x7928)) x3458))
(assert (x6021 x7371))
(assert (= (and x6001 (not x7310)) x4781))
(assert (x6021 x6702))
(assert (x6021 x3129))
(assert (x6021 x5897))
(assert (x6290 x6423))
(assert (x6021 x6440))
(assert (x6021 x6593))
(assert (x6021 x6065))
(assert (> (x8371 64 x5635 2) 10000))
(assert (x6021 x2035))
(assert (x6021 x7140))
(assert (= x5510 (and x56 x1194)))
(assert (x1635 256 x5515))
(assert (x6021 x1301))
(assert (= x3664 (=> (= x8541 (+ x2228 292)) x972)))
(assert (x6021 x2749))
(assert (x6021 x2969))
(assert (= (or x4883 x4846 x6848 x969 x2635 x3026) x3801))
(assert (x6021 x2737))
(assert (x2662 x386 128))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x6151 x5373 x4342 x8092 x2907)))
(assert (x6021 x2506))
(assert (= (x4378 (x4463 x2495 x1522 x3977 x5655)) x1522))
(assert (x6021 x7004))
(assert (x6021 x8541))
(assert (= x6909 (and x4754 x2769)))
(assert (x6021 x2784))
(assert (not (x3961 (x8371 64 x6524 12))))
(assert (x6021 x6130))
(assert (= (and x2582 x259) x2915))
(assert (=> (>= 10000 x3100) (= (x8569 x3100) 0)))
(assert (x6021 x5128))
(assert (= x6489 (or x7470 x3587)))
(assert (=> (>= 10000 x117) (= 0 (x8569 x117))))
(assert (< 10000 (x4863 x8390 x4163 x6722 x2492 x4934 x2354)))
(assert (= (x8569 (x8371 64 x574 (ite (<= x7786 32) x3782 (ite (<= x7786 64) x3982 (ite (<= x7786 96) x494 (ite (<= x7786 128) x7813 (ite (>= 160 x7786) x1314 (ite (<= x7786 192) x2102 x5667)))))))) (x8371 64 x574 (ite (>= 32 x7786) x3782 (ite (<= x7786 64) x3982 (ite (>= 96 x7786) x494 (ite (<= x7786 128) x7813 (ite (<= x7786 160) x1314 (ite (<= x7786 192) x2102 x5667)))))))))
(assert (= (x2668 (x6067 x5303 x8144 x4874 x6943 x3508)) x3508))
(assert (x6021 x6253))
(assert (= (x569 (x8371 64 x3268 12)) 12))
(assert (x6021 x1619))
(assert (x6021 x7695))
(assert (x6021 x3885))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639773))
(assert (x6021 x1964))
(assert (= (x864 (x1874 32 103)) 32))
(assert (x6021 x7439))
(assert (= (x569 (x8371 64 x1298 10)) 10))
(assert (= (and (not x5204) x4744) x6633))
(assert (=> (<= x2509 10000) (= (x8569 x2509) 0)))
(assert (= x7154 (and x3850 x916)))
(assert (= (x864 (x8371 64 x3349 11)) 64))
(assert (x6021 x4963))
(assert (not (x3961 (x8371 64 x8226 36))))
(assert (x6021 x5815))
(assert (= x3722 (=> (and (= (x4375 255 x2330) x721) (= x3674 2) (= x6121 x7709) (= x721 x7264) (= x3388 x8330) (= x3312 x1461) (= x3492 false) (= x5903 0) (= true x6689)) x4691)))
(assert (= x6855 (and x6022 x2166)))
(assert (= (x4408 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850)) x1732))
(assert (x6021 x3980))
(assert (= 64 (x864 (x8371 64 x2516 36))))
(assert (x6021 x5887))
(assert (x6021 x8047))
(assert (x6021 x7598))
(assert (not (x3961 (x4463 x5303 x1376 x7722 x5491))))
(assert (x6290 x4108))
(assert (x1960 x7946))
(assert (= x5766 (and x1475 x4034)))
(assert (x6021 x1632))
(assert (= x435 (and x3102 (not x3307))))
(assert (x6021 x3044))
(assert (x7457 x7717))
(assert (= x3856 (and x607 (not x1644))))
(assert (= 0 (x8569 3313512704)))
(assert (=> (<= x1602 10000) (= (x8569 x1602) 0)))
(assert (x5269 x7430))
(assert (x6021 x4504))
(assert (x6021 x4461))
(assert (= x8390 (x864 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068))))
(assert (x6021 x3414))
(assert (= (x569 (x4463 x2495 x1522 x3977 x5655)) x3977))
(assert (= (and x1795 x1622) x2222))
(assert (= x2991 (and x3212 x3154)))
(assert (> (x8371 64 x5904 36) 10000))
(assert (= (x4408 (x6067 x8390 x6994 x6858 x6332 x8121)) x6332))
(assert (= x6190 (or x2248 x2088)))
(assert (x6021 x3711))
(assert (x6021 x7372))
(assert (x6021 x7120))
(assert (x6021 x6518))
(assert (x2626 256))
(assert (= (and x8269 x684) x1159))
(assert (=> (<= x4308 10000) (= 0 (x8569 x4308))))
(assert (x6021 x1420))
(assert (x6021 x5282))
(assert (= (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971) (x8569 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971))))
(assert (= x2869 (or x2803 x1305)))
(assert (x2662 x1890 256))
(assert (x7582 x5851))
(assert (= (and x4923 x8573) x6616))
(assert (= x339 (and x6334 (not x6482))))
(assert (= (x569 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591)) x36))
(assert (= x2218 (=> (and (= x3240 x6490) (= true x95) (= x7033 0) (= 2 x4216) (= x1652 false) (= x3308 x7483) (= x2828 x1912) (= 36 x5160)) x7857)))
(assert (= (x8569 1000000000) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x1891 x2624 x6776 x7509 x4204 x6170)))
(assert (x6021 x2855))
(assert (x6021 x450))
(assert (= (x569 (x8371 64 x6304 11)) 11))
(assert (x6021 x4569))
(assert (= (x569 (x4463 x6134 x7580 x5525 x125)) x5525))
(assert (x6021 x5738))
(assert (= x6968 (and x2163 (not x3733))))
(assert (x6021 x3892))
(assert (x6021 x2292))
(assert (x6021 x1794))
(assert (x6021 x8436))
(assert (x6021 x2314))
(assert (< (x1874 x62 x306) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4677 (and x3996 x8208)))
(assert (x6021 x785))
(assert (x6021 x3268))
(assert (x6021 x4825))
(assert (x6021 x743))
(assert (=> (>= 10000 x4737) (= 0 (x8569 x4737))))
(assert (= (x8569 45231284858326638837332416019018714005183587760015845327913118753091066265600) 0))
(assert (=> (>= 10000 x8206) (= (x8569 x8206) 0)))
(assert (= (x6067 x112 x6250 x8267 x825 x6142) (x8569 (x6067 x112 x6250 x8267 x825 x6142))))
(assert (x6021 x6723))
(assert (= x3542 (and x2410 (not x1511))))
(assert (x6021 x2765))
(assert (x6021 x7786))
(assert (< 10000 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758)))
(assert (=> (>= 10000 x6764) (= (x8569 x6764) 0)))
(assert (x6021 x1084))
(assert (= (=> (and (= x3243 x4848) (= 0 x8449) (= x3020 x484) (= x225 x6940) (= x145 x5336) (= x3604 x4737) (= x3255 x6003) (= x4201 x7627) (= x4417 x1900) (= x8394 x4711) (= x1458 x2371) (= x2332 x2078) (= x7534 x5945) (= x8009 x4670) (= 2 x2269)) x2156) x8283))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 32 x384)))
(assert (= x776 (and x5256 x3118)))
(assert (x6021 x6194))
(assert (x6021 x5379))
(assert (= (x8569 (+ 1 x6002)) (x8569 x6002)))
(assert (x2186 32))
(assert (=> (<= x4106 10000) (= 0 (x8569 x4106))))
(assert (x6021 x1557))
(assert (= (x7859 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758)) x758))
(assert (x6021 x872))
(assert (= 32 (x864 (x1874 32 x384))))
(assert (= (and x8255 (not x3231)) x7781))
(assert (= (and (not x6133) x3121) x4695))
(assert (x1960 x2270))
(assert (x6021 x3092))
(assert (=> (<= x7954 10000) (= 0 (x8569 x7954))))
(assert (x6021 x6911))
(assert (x6021 x275))
(assert (= (x8569 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117)) (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117)))
(assert (not (x3961 (x4463 x1919 x5254 x4545 x6880))))
(assert (=> (<= x4807 10000) (= 0 (x8569 x4807))))
(assert (x6021 x6313))
(assert (x6021 x6847))
(assert (x6021 x6385))
(assert (x6021 x4076))
(assert (x6021 x1820))
(assert (= x5026 (x4408 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794))))
(assert (= (or (and (not x2772) x5266) x2148) x2450))
(assert (x6021 x6355))
(assert (= (x4408 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371)) x945))
(assert (x6021 x6836))
(assert (x6021 x8089))
(assert (x6021 x4346))
(assert (x6021 x7285))
(assert (x1960 x4534))
(assert (= (x4408 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064)) x2760))
(assert (= x112 (x864 (x4863 x112 x1756 x6665 x2535 x7887 x2377))))
(assert (x6021 x142))
(assert (x6021 x4322))
(assert (x6021 x4535))
(assert (=> (<= x2150 10000) (= (x8569 x2150) 0)))
(assert (x3961 3313512704))
(assert (= (or x6667 x671) x214))
(assert (x6021 x2464))
(assert (x6021 x6213))
(assert (x6021 x5459))
(assert (x2662 x2650 32))
(assert (x6021 x1208))
(assert (x6021 x3010))
(assert (=> (>= 10000 x1148) (= 0 (x8569 x1148))))
(assert (= x6430 x3722))
(assert (= x1919 (x864 (x6067 x1919 x2762 x836 x812 x6861))))
(assert (x6021 x8064))
(assert (=> (<= x3588 10000) (= 0 (x8569 x3588))))
(assert (x6021 x2542))
(assert (x6021 x6351))
(assert (x6021 x3401))
(assert (< (x6067 x112 x6250 x8267 x825 x6142) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x6670))
(assert (x6021 x1054))
(assert (x6021 x8134))
(assert (= 0 (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (=> (>= 10000 x7417) (= (x8569 x7417) 0)))
(assert (x770 x2629))
(assert (x6021 x373))
(assert (= (and (not x4420) x2237) x3201))
(assert (x6021 x3383))
(assert (= (x4408 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117)) x2456))
(assert (x6021 x7932))
(assert (x6021 x6192))
(assert (= x8466 (and x5723 (not x401))))
(assert (= x1919 (x864 (x4463 x1919 x5254 x4545 x6880))))
(assert (x6021 x2524))
(assert (x6021 x7352))
(assert (x1960 x4694))
(assert (x6021 x668))
(assert (= x5974 (x4378 (x1874 x81 x5974))))
(assert (x6021 x2205))
(assert (x6021 x4277))
(assert (> (x8371 64 x3727 6) 10000))
(assert (x6021 x5739))
(assert (x6021 x2871))
(assert (x6021 x4528))
(assert (x6021 x334))
(assert (= (x4378 (x8371 64 x648 6)) x648))
(assert (x6021 x4142))
(assert (= x4082 (and x8522 x5677)))
(assert (< (x8371 64 x1859 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x8366) (= 0 (x8569 x8366))))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x6021 x192))
(assert (= x3354 x1753))
(assert (< (x1874 x5303 x7695) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3037 (or x5114 x3103)))
(assert (= (x4378 (x8371 64 x5904 36)) x5904))
(assert (x6021 x4753))
(assert (x6021 x7934))
(assert (x6021 x1996))
(assert (x6021 x6802))
(assert (x6021 x3823))
(assert (x6021 x1587))
(assert (x6021 x3837))
(assert (x6021 x6096))
(assert (x6021 x2249))
(assert (x6021 x1327))
(assert (x6021 x2161))
(assert (=> (>= 10000 x784) (= (x8569 x784) 0)))
(assert (= (and (not x24) x8466) x6912))
(assert (x7457 x7432))
(assert (= x7722 (x569 (x4463 x5303 x1376 x7722 x5491))))
(assert (= (x4378 (x8371 64 x574 (ite (<= x1919 32) x3278 (ite (>= 64 x1919) x4467 (ite (>= 96 x1919) x4583 (ite (>= 128 x1919) x4084 (ite (<= x1919 160) x6538 (ite (>= 192 x1919) x3882 x5579)))))))) x574))
(assert (x6021 x3816))
(assert (= (and x1209 (not x7945)) x1515))
(assert (=> (<= x4882 10000) (= (x8569 x4882) 0)))
(assert (=> (<= x1646 10000) (= 0 (x8569 x1646))))
(assert (= x7404 (and (not x1273) x7133)))
(assert (x5269 x2650))
(assert (x6021 x4915))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x6632 (ite (>= 32 x5107) x7657 (ite (>= 64 x5107) x7720 (ite (<= x5107 96) x782 (ite (>= 128 x5107) x3066 (ite (<= x5107 160) x3077 (ite (>= 192 x5107) x4867 x1118)))))))))
(assert (x6021 x4667))
(assert (= x1467 (and x4325 (not x7214))))
(assert (= x1573 (=> (and (or (and (and (= x7033 0) (= 2 x3529) (= x3308 x7483) (= x4552 false) (= x3240 x6490) (= x1912 x2828) (= true x1351) (= x5160 36)) x1924) (and (and (= false x8045) (= 32 x5160) (= x2249 x2828) (= x7033 1) (= false x5441) (= (x4375 255 x7917) x2855) (= x3612 (x4375 255 x7917)) (= x7483 x5426) (= x2739 (x8162 x1406)) (= x7917 (+ x6554 1)) (= x1406 (x8371 64 x6554 36)) (= x3240 x599)) (not x1924))) (and (>= 255 x6554) (= (= x6554 255) x1924))) x7857)))
(assert (= (x8371 64 x603 36) (x8569 (x8371 64 x603 36))))
(assert (x6021 x7325))
(assert (x6021 x3211))
(assert (x6021 x5754))
(assert (= x6947 (x1880 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068))))
(assert (x6021 x4045))
(assert (= (x864 (x8371 64 x574 (ite (<= x1919 32) x3278 (ite (<= x1919 64) x4467 (ite (>= 96 x1919) x4583 (ite (>= 128 x1919) x4084 (ite (>= 160 x1919) x6538 (ite (>= 192 x1919) x3882 x5579)))))))) 64))
(assert (x6021 x2334))
(assert (x6021 x2911))
(assert (x6021 x2159))
(assert (x6021 x206))
(assert (x6021 x6228))
(assert (= (and x2209 x8404) x1717))
(assert (x6021 x8144))
(assert (x6021 x7968))
(assert (x6021 x3700))
(assert (x6021 x8172))
(assert (= (x864 (x1874 32 x1068)) 32))
(assert (x6021 x3514))
(assert (x6021 x8061))
(assert (x6021 x1047))
(assert (x6021 x7553))
(assert (= (and (not x1282) x3609) x687))
(assert (= (x8569 x1899) (x8569 (+ x1899 1))))
(assert (= (and x6054 x3616) x7226))
(assert (x6021 x4244))
(assert (x6021 x6299))
(assert (=> (<= x4531 10000) (= 0 (x8569 x4531))))
(assert (= x1484 (x569 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550))))
(assert (x6021 x1862))
(assert (x6021 x2558))
(assert (x6021 x8170))
(assert (x6021 x10))
(assert (= x812 (x4408 (x6067 x1919 x2762 x836 x812 x6861))))
(assert (= (=> (and (= x4165 (= 0 x7896)) (or (and (= 128 x470) x4165) (and (and (= (+ 128 x3645) x470) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x3645) (= x3645 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4601)) (<= 1 x3645) (= x4601 (x6862 (+ x7896 63)))) (not x4165)))) x5791) x4665))
(assert (x1635 256 x7422))
(assert (=> (>= 10000 x6722) (= (x8569 x6722) 0)))
(assert (x2662 x6132 256))
(assert (=> (<= x1975 10000) (= 0 (x8569 x1975))))
(assert (=> (<= x1531 10000) (= 0 (x8569 x1531))))
(assert (x6021 x7300))
(assert (= (x4378 (x8371 64 x6604 2)) x6604))
(assert (x6021 x4603))
(assert (x6021 x2513))
(assert (not (x3961 (x4463 x1911 x1105 x5420 x538))))
(assert (= x1245 (or x1277 x1855 x3921 x319 (and x1293 x8532) (and x5305 x1316) x1943)))
(assert (x6021 x4998))
(assert (x6021 x2623))
(assert (= (x2668 (x4863 x5303 x3458 x3478 x2190 x1189 x7928)) x1189))
(assert (x1960 x5445))
(assert (= (and (not x5820) x8319) x6480))
(assert (= (x4408 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424)) x3836))
(assert (not (x3961 (x8371 64 1 x3758))))
(assert (= x4268 (and x7498 (not x159))))
(assert (= (and (not x7343) x147) x6762))
(assert (= (x4378 (x6067 x5107 x652 x8297 x5470 x2440)) x652))
(assert (x6021 x4156))
(assert (=> (>= 10000 x7005) (= 0 (x8569 x7005))))
(assert (x6021 x1067))
(assert (=> (<= x4962 10000) (= (x8569 x4962) 0)))
(assert (x6021 x5911))
(assert (x6021 x2794))
(assert (=> (>= 10000 x3096) (= 0 (x8569 x3096))))
(assert (x6021 x5676))
(assert (x6021 x2350))
(assert (= (or x2129 x7446 x3542 x1487 x1492) x3235))
(assert (= (and (not x6595) x3971) x969))
(assert (not (x3961 (x8371 64 1 x7356))))
(assert (x6021 x199))
(assert (=> (>= 10000 x2456) (= 0 (x8569 x2456))))
(assert (x7457 x4802))
(assert (x6021 x5624))
(assert (x6021 x4352))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x3841 x462)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064)))
(assert (= (x864 (x6067 x128 x7070 x5224 x6130 x3885)) x128))
(assert (= x646 (=> (and (or (and (and (<= 0 x7123) (<= x7123 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (= 0 x2928) x7291 0) x4724) (= x7123 x5768) (< (+ x4724 x895) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x1143 x4724) x823) (= x3980 x1849) (= (x254 x3611) x895) (= x8029 x8202) (= x1143 (x542 x8305)) (= x3173 x4562) (= x4969 x8590) (= x1552 x3455) (= x7123 (+ x4724 x895)) (= x5505 x7037) (= x7896 x2311) (= x6735 x2928)) x8199) (and (and (= x4562 x3173) (= x7896 x2311) (= x1849 x3980) (= x3455 x1552) (= x7037 x5505) (= x8202 x8029) (= x8590 x4969) (= x2928 x6735)) (not x8199))) (= (= 0 x2928) x8199)) x4665)))
(assert (x7457 x321))
(assert (x7457 x386))
(assert (=> (>= 10000 x8422) (= 0 (x8569 x8422))))
(assert (=> (>= 10000 x6476) (= 0 (x8569 x6476))))
(assert (= (x864 (x8371 64 x2957 7)) 64))
(assert (x6021 x4540))
(assert (= x5906 (and x1024 x594)))
(assert (x6021 x950))
(assert (=> (>= 10000 x7391) (= 0 (x8569 x7391))))
(assert (x6021 x6614))
(assert (x6021 x2528))
(assert (=> (<= x8433 10000) (= (x8569 x8433) 0)))
(assert (= 5 (x569 (x8371 64 x3255 5))))
(assert (< (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x1268))
(assert (= (x8569 (x8371 x6151 x8188 x1872)) (x8371 x6151 x8188 x1872)))
(assert (x7457 x2330))
(assert (=> (<= x987 10000) (= 0 (x8569 x987))))
(assert (= (or x3856 x5949) x8342))
(assert (x6021 x7597))
(assert (= (x4408 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602)) x458))
(assert (x2186 x5065))
(assert (x6021 x1538))
(assert (x6021 x4724))
(assert (=> (<= x3807 10000) (= (x8569 x3807) 0)))
(assert (= (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (=> (>= 10000 x2574) (= 0 (x8569 x2574))))
(assert (= x2775 (or (and x684 (not x8269)) x1159)))
(assert (x6021 x1396))
(assert (x6021 x3707))
(assert (= x1883 (x864 (x4863 x1883 x2748 x5837 x2413 x4530 x2755))))
(assert (x6021 x7706))
(assert (x6021 x7162))
(assert (= (x4378 (x8371 64 x3349 11)) x3349))
(assert (= (x986 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)) x8111))
(assert (x6021 x2560))
(assert (x3961 44057028636630039105102054091366763171729008530599747929804322044178077843456))
(assert (= (and x8562 (not x4129)) x5775))
(assert (= x5029 (and (not x5320) x3188)))
(assert (= (and x607 x1644) x5949))
(assert (= x4561 (and x6230 x4786)))
(assert (x6021 x6512))
(assert (x7457 x291))
(assert (x6021 x7563))
(assert (x6021 x6087))
(assert (= x3464 (x2668 (x6067 x81 x5956 x3927 x743 x3464))))
(assert (x6021 x1173))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x1624 36)))
(assert (= (and x1687 x2465) x6437))
(assert (= (and (not x4315) x297) x8003))
(assert (=> (<= x4569 10000) (= 0 (x8569 x4569))))
(assert (x6021 x2733))
(assert (x6021 x7112))
(assert (= (and x6917 x5884) x8125))
(assert (x6021 x4478))
(assert (x6021 x1646))
(assert (x6021 x1198))
(assert (= 64 (x864 (x8371 64 x1130 0))))
(assert (x1960 x6173))
(assert (x6021 x4562))
(assert (x1960 x1571))
(assert (= (x569 (x4863 x3841 x4962 x1975 x1342 x6300 x7068)) x1975))
(assert (=> (<= x1590 10000) (= (x8569 x1590) 0)))
(assert (= x7242 (x569 (x8371 x5303 x6385 x7242))))
(assert (= (x8569 (x8371 64 x7708 12)) (x8371 64 x7708 12)))
(assert (x6021 x7501))
(assert (= (x2668 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509)) x2574))
(assert (not (x3961 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758))))
(assert (= x4830 (=> (and (= x8181 x6927) (= x6299 x423) (= x4367 x8310) (= x1474 x352) (= x2796 x7389) (= x3894 x2609) (= x4510 x5462) (= x3356 x6911) (= x3 x3828) (= x1947 x7153) (= x7610 x6337) (= x2600 x8192) (= x6878 x5798) (= x6883 x3008)) x1089)))
(assert (x1960 x668))
(assert (x6021 x4624))
(assert (x6021 x5272))
(assert (x1960 x7618))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794)))
(assert (x6021 x6739))
(assert (= x3838 (x1880 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838))))
(assert (> (x8371 64 x3611 2) 10000))
(assert (< 10000 (x4863 x5107 x3059 x1297 x2154 x8061 x7331)))
(assert (x2626 x7759))
(assert (x6021 x161))
(assert (< 10000 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671)))
(assert (= (x1880 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183)) x1183))
(assert (x6021 x292))
(assert (= (and x3437 x2145) x2769))
(assert (x6021 x5614))
(assert (= (x986 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704)) x4341))
(assert (x6021 x5623))
(assert (x6290 x4981))
(assert (= x8140 (and x6079 (not x6763))))
(assert (=> (<= x7805 10000) (= 0 (x8569 x7805))))
(assert (=> (>= 10000 x740) (= (x8569 x740) 0)))
(assert (x2186 x8314))
(assert (= x8256 (=> (and (or (and (and (= x8316 x4041) (= x5140 (+ x6434 x6342)) (= x1198 x7882) (= (x4241 x8301) x6434) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6342 x6434)) (<= x5140 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3083 x1163) (= x2551 x4348) (= (- x6842 x6342) x5270) (= (x5551 x2738) x6842) (= x5236 x7393) (= x6342 (ite (= 0 x3083) x6044 0)) (<= 0 x5140) (= x2122 x3440) (= x5140 x5799)) x5778) (and (and (= x1198 x7882) (= x8316 x4041) (= x5236 x7393) (= x4348 x2551) (= x2122 x3440) (= x1163 x3083)) (not x5778))) (= (= 0 x3083) x5778)) x4621)))
(assert (x2186 x6131))
(assert (= (x4408 (x4863 x8390 x4163 x6722 x2492 x4934 x2354)) x2492))
(assert (=> (>= 10000 x811) (= 0 (x8569 x811))))
(assert (x6021 x2760))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= (=> (and (= x5392 x5010) (= x7028 x1970) (= 2 x6483) (= x6114 0) (= (x4375 255 x4981) x7028) (= x467 x4251) (= true x4121) (= false x2962) (= x2527 x1294)) x7944) x6481))
(assert (x6021 x937))
(assert (= (x4378 (x8371 64 x603 6)) x603))
(assert (x6021 x5371))
(assert (= (x569 (x4463 x1919 x5254 x4545 x6880)) x4545))
(assert (x6021 x355))
(assert (x1960 x771))
(assert (= (or (and (not x4256) x3452) (and x6748 (not x1452)) (and (not x8404) x2209)) x287))
(assert (x6021 x3347))
(assert (= x3189 (and x1504 x3235)))
(assert (= (and x5450 (not x5387)) x4720))
(assert (= (x8569 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064)) (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064)))
(assert (> (x8371 x1883 x1070 x6150) 10000))
(assert (= 2 (x569 (x8371 64 x5207 2))))
(assert (= (x8569 (+ x7332 2)) (x8569 x7332)))
(assert (=> (<= x4801 10000) (= (x8569 x4801) 0)))
(assert (= (x569 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617)) x3432))
(assert (x6517 x4803 2))
(assert (= (x569 (x4463 x636 x197 x5649 x3751)) x5649))
(assert (= x7073 (=> (and (= x246 x3397) (= x826 true) (= x4974 0) (= x3068 x690) (= x8564 x7004) (= false x3038) (= x1426 x6985) (= x7502 2) (= x1800 x2395) (= x1300 x763) (= x6727 x136) (= x3681 x5606) (= x7996 x868) (= x6355 x2151) (= x4415 x2226) (= x7632 x2651) (= (x4375 255 x363) x6985) (= x8473 x1365)) x8148)))
(assert (= (x8569 (x8371 64 x6833 36)) (x8371 64 x6833 36)))
(assert (= x7149 (and x6577 (not x7168))))
(assert (= (=> (= (= 0 x1054) x7230) (and (=> (and (and (= x3470 x7895) (= x8258 x5033) (= x406 x4649) (= x5425 x994)) (not x7230)) x2913) (=> (and x7230 (and (= x417 2) (= x7959 x5160) (= x1937 true) (= x7033 0) (= x3308 x7483) (= false x367) (= x2828 x1912) (= x6490 x3240))) x7857))) x6339))
(assert (= x1873 (and x5558 x8568)))
(assert (=> (<= x8144 10000) (= 0 (x8569 x8144))))
(assert (x6021 x6186))
(assert (=> (>= 10000 x281) (= (x8569 x281) 0)))
(assert (= (x4863 x7741 x1138 x7294 x4427 x6476 x4714) (x8569 (x4863 x7741 x1138 x7294 x4427 x6476 x4714))))
(assert (= (or (and x5130 x2217) x2295) x8577))
(assert (x6021 x786))
(assert (x6021 x2374))
(assert (= (and x3609 x1282) x5209))
(assert (=> (<= x1872 10000) (= 0 (x8569 x1872))))
(assert (= x1931 (and x2171 x7766)))
(assert (x6021 x1095))
(assert (x6021 x1013))
(assert (= (x864 (x8371 x5107 x8206 x4569)) x5107))
(assert (= (or x6951 x968 x8163) x1833))
(assert (x2662 x1088 256))
(assert (not (x3961 (x4463 x1891 x6971 x5481 x4245))))
(assert (x6021 x4739))
(assert (x6021 x4250))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)))
(assert (not (x3961 (x1874 x1891 x3763))))
(assert (x6021 x7476))
(assert (=> (>= 10000 x2377) (= (x8569 x2377) 0)))
(assert (= x5562 x7021))
(assert (not (x3961 (x8371 x5107 x8206 x4569))))
(assert (=> (<= x4829 10000) (= 0 (x8569 x4829))))
(assert (x6021 x5552))
(assert (x1960 x7959))
(assert (= x3439 (x4378 (x6067 x2495 x3439 x1839 x1840 x3342))))
(assert (x1960 x2696))
(assert (x6021 x5015))
(assert (= x5344 (x569 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758))))
(assert (= (x4378 (x6067 x5303 x8144 x4874 x6943 x3508)) x8144))
(assert (x6021 x4491))
(assert (x6290 x7416))
(assert (x7582 x4045))
(assert (x2186 x4094))
(assert (not (x3961 (x4463 x112 x3807 x4106 x7605))))
(assert (x6021 x6145))
(assert (= (and x3779 x2934) x7705))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x7825 36)))
(assert (x1635 256 x7482))
(assert (= x2948 (x4408 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401))))
(assert (x6021 x3979))
(assert (x6021 x5354))
(assert (=> (>= 10000 x6833) (= (x8569 x6833) 0)))
(assert (= x8098 (and x806 (not x3703))))
(assert (x6021 x1038))
(assert (x6021 x2188))
(assert (= (x8569 x221) (x8569 (+ x221 2))))
(assert (= (or x8259 x1515) x4522))
(assert (= x128 (x864 (x4863 x128 x4320 x1602 x6915 x2789 x4998))))
(assert (= x2743 (and x7620 (not x1424))))
(assert (x2186 x225))
(assert (x6021 x8322))
(assert (= (=> (and (= x3255 x7589) (= x1188 x8191) (= x3233 (x4375 255 x4131)) (= x8394 x111) (= x4501 x4737) (= x3233 x2818) (= 2 x4935) (= x1691 x145) (= x4848 x1313) (= x225 x8436) (= x5989 x2371) (= x4326 x1900) (= x7337 x2078) (= x7534 x554) (= x7627 x6849) (= x3125 x3020) (= x6553 0)) x3127) x5100))
(assert (= (and x6634 x6871) x6509))
(assert (= x1175 (x569 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509))))
(assert (= (x1874 x636 x5609) (x8569 (x1874 x636 x5609))))
(assert (= x5107 (x864 (x1874 x5107 x1246))))
(assert (= x7855 (and x1255 x4431)))
(assert (=> (>= 10000 x6943) (= 0 (x8569 x6943))))
(assert (= (x8569 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821)) (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821)))
(assert (x2626 x3009))
(assert (< (x8371 64 x2008 (ite (>= 32 x1891) x6104 (ite (<= x1891 64) x2684 (ite (<= x1891 96) x7540 (ite (<= x1891 128) x7449 (ite (<= x1891 160) x5213 (ite (<= x1891 192) x5567 x6398))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7457 x3741))
(assert (= (x986 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177)) x1996))
(assert (= (or x8198 x978) x2692))
(assert (= x6777 (=> (= x6075 (+ x8178 x1659)) x8240)))
(assert (x6021 x7624))
(assert (= x2343 (and x6050 x1117)))
(assert (x6021 x3625))
(assert (x6021 x3455))
(assert (x6021 x5978))
(assert (= (=> (and (= x2796 x2611) (= x3934 x2600) (= x2609 x5175) (= x962 x3828) (= x6878 x3202) (= x6299 x5092) (= x352 x5331) (= x6046 x8310) (= x8181 x5022) (= 1 x7153) (= x515 x6883) (= x6337 x830) (= x4510 x5517) (= x1079 x3356)) x4830) x3871))
(assert (= 6 (x569 (x8371 64 x603 6))))
(assert (= (=> (= x279 (= x396 0)) (and (=> (and x279 (and (= x8310 x2371) (= x8181 x7627) (= true x3200) (= x3255 x3828) (= x4670 x6299) (= x2609 x225) (= x2600 x3020) (= x7534 x352) (= 2 x2472) (= x1900 x6878) (= x145 x2796) (= x4510 x2078) (= false x3162) (= 0 x7153) (= x6337 x4848) (= x3356 x4737) (= x6883 x8394))) x4830) (=> (and (not x279) (and (= x6010 x899) (= x4309 x8552) (= x680 x1235) (= x3029 x7248) (= x258 x1995) (= x5514 x5210) (= x1283 x7480) (= x4520 x7278) (= x3160 x4461) (= x8006 x1581) (= x3032 x3150) (= x4795 x3328) (= x5405 x1208))) x6281))) x8414))
(assert (x6021 x2010))
(assert (x6021 x4999))
(assert (> (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829) 10000))
(assert (=> (<= x2478 10000) (= 0 (x8569 x2478))))
(assert (x6021 x2149))
(assert (= x5207 (x4378 (x8371 64 x5207 36))))
(assert (= x4328 (and (not x3670) x2610)))
(assert (x6517 x145 2))
(assert (x6021 x1455))
(assert (x7457 x6769))
(assert (= (x4408 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591)) x6382))
(assert (x6021 x2191))
(assert (= x6543 (and x3315 x7460)))
(assert (= x6807 (and (not x3045) x8278)))
(assert (= (x864 (x8371 64 x8175 4)) 64))
(assert (=> (<= x77 10000) (= (x8569 x77) 0)))
(assert (x1635 32 (ite (not (= x7371 0)) 1 0)))
(assert (= (x8371 64 1 x3946) (x8569 (x8371 64 1 x3946))))
(assert (x2186 x4601))
(assert (=> (>= 10000 x1756) (= (x8569 x1756) 0)))
(assert (x6021 x8008))
(assert (=> (>= 10000 x5974) (= 0 (x8569 x5974))))
(assert (= x379 (and x369 x6163)))
(assert (x2662 x6739 32))
(assert (x6021 x5172))
(assert (> (x8371 64 x6554 36) 10000))
(assert (x6021 x873))
(assert (x6021 x6003))
(assert (=> (<= x6998 10000) (= 0 (x8569 x6998))))
(assert (not (x3961 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850))))
(assert (x6021 x3765))
(assert (= (or x5432 (and x929 (not x7443))) x889))
(assert (= (=> (and (= (= x5807 0) x6704) (= (x7365 x2082) x5807)) (and (=> (and (not x6704) (and (= x4740 (x8371 64 x3255 5)) (= (< (ite (= x5191 0) 10000 x5191) x2018) x7779) (= x2018 (x8561 x5888)) (= (x7471 x4740) x5191))) (and (=> (and x7779 (and (= 100 x6930) (= x6045 false) (= (x6862 (+ x86 32)) x2070) (= true x4011) (= x16 (x6862 (+ 4 x1663))) (= (x6862 (+ x16 32)) x86))) x5280) (=> (and (and (= x4932 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6769)) (= x682 (x6862 (+ x2871 x3979))) (= x985 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1271)) (= x6908 (x6862 (+ x7300 192))) (= (x6862 (+ x4577 x985)) x4102) (= (x8448 (- x682 x7300)) x6360) (= (x6862 (+ x3093 32)) x1766) (= (x6862 (+ x7300 32)) x8116) (= x132 (x6458 x690)) (= (x6862 (+ x5888 32)) x1477) (= x7300 (x6862 (+ x1663 4))) (= x8384 (x8448 (- x4102 x7300))) (= (x7365 x2082) x4618) (= (x6862 (+ 31 x2130)) x2235) (= (x6862 (+ x682 32)) x6513) (= (x6862 (+ 32 x1766)) x1844) (= x7335 (x6862 (+ x4932 x6513))) (= x7770 (x8448 (- x7335 x1663))) (= (x6862 (+ 32 x4102)) x2871) (= x6769 (x6862 (+ x4806 31))) (= x3093 (x6862 (+ x7949 32))) (= x4806 (x7093 x6183)) (= (x6862 (+ 32 x6183)) x6820) (= (x6862 (+ 32 x8116)) x7949) (= (= x132 0) x922) (= x3979 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2235)) (= (x8561 x5888) x2130) (= x1271 (x6862 (+ 31 x4618))) (= x4577 (x6862 (+ x6908 32)))) (not x7779)) (and (=> (and (and (= x5794 (x792 x690)) (= (x792 x3611) x2062) (= (<= x7333 x2062) x2308) (= (and x8456 x2308) x1075) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7333 x5794)) x8456)) (not x922)) (and (=> (and x1075 (and (= x6176 (= (x116 196) x4618)) (= x1334 x5742) (<= x7598 127) (= x3131 (- x7336 x7333)) (= false x6697) (= 192 x224) (= x3255 x407) (<= 1 x785) (>= 127 x7598) (= (x6458 x1481) x785) x6176 (= x6788 x3611) (<= 420 x7770) (= x8384 x5958) (= x5302 0) (= x6360 x1028) (= (x792 x3611) x7336) (<= x1334 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2386 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= (or (and (> 192 (- x688 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x688 4)))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x688 4))) x6725) (= x7770 x688) (= false x4500) (= 3313512704 x560) (>= x1334 0) (< (+ x7333 x872) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1334 (+ x7333 x872)) (<= 420 x688) (= (x2030 x690) x872))) (and (=> (and (= x3912 true) (not x6725)) (and (=> (and x3912 (= x4755 (and (> x688 227) (= true (<= x688 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (not x4755) x6129) (=> (and (and (= (> x5652 18446744073709551615) x653) (= x5652 (x6463 196))) x4755) (and (=> x653 x4641) (=> (and (not x653) (and (= (x6862 (+ 228 x5652)) x1146) (= x7641 (< x688 x1146)))) (and (=> (and (not x7641) (= (< 18446744073709551615 x8384) x8532)) (and (=> (and (and (= x2179 (x6862 (+ x8384 4))) (= (x6862 (+ 31 x2179)) x1420) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x688) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1420)) (< x1420 x688)) (and (> x1420 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x688 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x722)) (not x8532)) (and (=> (and (and (= x8589 (< 18446744073709551615 x6136)) (= (x6463 x2179) x6136)) x722) (and (=> x8589 x4641) (=> (and (not x8589) (and (= (x6862 (+ x6136 x2971)) x4066) (= x5499 (> x4066 x688)) (= (x6862 (+ x2179 32)) x2971))) (and (=> (and (= x5305 (> x6360 18446744073709551615)) (not x5499)) (and (=> (and (not x5305) (and (= x2336 (x6862 (+ x3729 31))) (= x3729 (x6862 (+ x6360 4))) (= x3323 (or (and (> x2336 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x688)) (and (> x688 x2336) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2336) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x688))))))) (and (=> (and x3323 (and (= x6309 (> x6778 18446744073709551615)) (= x6778 (x6463 x3729)))) (and (=> x6309 x4641) (=> (and (not x6309) (and (= x2231 (x6862 (+ x6778 x4564))) (= (x6862 (+ x3729 32)) x4564) (= x4544 (> x2231 x688)))) (and (=> x4544 x482) (=> (and (not x4544) (and (= x8564 x7004) (= x7632 x2651) (= x5606 x3681) (= 1 x4974) (= x8473 x1365) (= x2151 x6355) (= x6727 x136) (= x1426 x107) (= x3397 x246) (= x763 x1300) (= x4415 x2226) (= x1800 x2395) (= x690 x3068) (= x7996 x868))) x8148))))) (=> (not x3323) x6129))) (=> x5305 x7073))) (=> x5499 x482))))) (=> (not x722) x6129))) (=> x8532 x7073))) (=> x7641 x482))))))) (=> (not x3912) x7073))) (=> x6725 x7073))) (=> (and (not x1075) (and (= x7767 x2651) (= x1365 x3292) (= x3397 x1482) (= x690 x6726) (= x2151 x775) (= 0 x5599) (= x4234 x7996) (= x5606 x5226) (= x3997 x1300) (= x136 x7754) (= x107 x6187) (= x1800 x600) (= x2161 x8564) (= x4415 x7041))) x4015))) (=> (and x922 (and (= 0 x6930) (= x325 true) (= x2553 false))) x5280))))) (=> (and (and (= (x6862 (+ 32 x6512)) x541) (= (x6862 (+ x4396 32)) x1869) (= x6930 132) (= (x6862 (+ 32 x541)) x4396) (= false x7438) (= x6512 (x6862 (+ x1663 4))) (= x3566 true)) x6704) x5280))) x5583))
(assert (x6021 x7685))
(assert (= x6030 (x4378 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183))))
(assert (=> (<= x812 10000) (= (x8569 x812) 0)))
(assert (x6021 x4460))
(assert (x6021 x1892))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602)))
(assert (x2662 x2650 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3713))
(assert (= x8592 (and (not x8515) x7465)))
(assert (=> (>= 10000 x2528) (= 0 (x8569 x2528))))
(assert (x6021 x8491))
(assert (x6021 x1474))
(assert (x6021 x518))
(assert (= x3127 (=> (and (or x8269 (not x8269)) (= x8269 (= x6553 0))) x6895)))
(assert (x6021 x310))
(assert (x6021 x2912))
(assert (x2662 x4446 256))
(assert (x6021 x7875))
(assert (=> (>= 10000 x4729) (= (x8569 x4729) 0)))
(assert (= (and x2522 (not x2059)) x1888))
(assert (= x4698 (or x5613 x5078)))
(assert (< (x6067 x128 x7070 x5224 x6130 x3885) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4463 x1883 x6542 x3545 x3441) (x8569 (x4463 x1883 x6542 x3545 x3441))))
(assert (x6021 x2534))
(assert (x6021 x4910))
(assert (= (and x8319 x5820) x7538))
(assert (x6021 x4320))
(assert (=> (>= 10000 x2550) (= 0 (x8569 x2550))))
(assert (= x8185 (x4378 (x4863 x8295 x8185 x6925 x979 x5754 x2033))))
(assert (x6021 x8205))
(assert (x6021 x7466))
(assert (not (x3961 (x8371 64 x3255 4))))
(assert (=> (<= x2039 10000) (= (x8569 x2039) 0)))
(assert (= (x569 (x8371 x2495 x911 x634)) x634))
(assert (=> (<= x1246 10000) (= (x8569 x1246) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x62 x3305 x6018 x6655 x4882)))
(assert (x6021 x6000))
(assert (= (x4378 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)) x4110))
(assert (= x3722 x3867))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x6134 x6756)))
(assert (=> (>= 10000 x2459) (= 0 (x8569 x2459))))
(assert (x6021 x6332))
(assert (= (x8569 (+ 2 x7138)) (x8569 x7138)))
(assert (= x8319 (and x4146 x3027)))
(assert (x6021 x4295))
(assert (x6021 x7430))
(assert (x6021 x3978))
(assert (= x4145 (x4408 (x4863 x1919 x11 x2518 x4145 x4321 x8086))))
(assert (x6021 x4163))
(assert (x1960 x940))
(assert (x6021 x2426))
(assert (= x1024 (and x4786 (not x6230))))
(assert (x7582 x7479))
(assert (x6021 x8378))
(assert (x6021 x6490))
(assert (x6021 x4932))
(assert (x6021 x8066))
(assert (x3961 2088793519))
(assert (x770 x4879))
(assert (= (x569 (x8371 64 x1862 6)) 6))
(assert (x6021 x4523))
(assert (x6021 x7602))
(assert (x6021 x4137))
(assert (=> (<= x3148 10000) (= 0 (x8569 x3148))))
(assert (x3961 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (not (x3961 (x8371 64 x1624 36))))
(assert (x6021 x2438))
(assert (= (x1880 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617)) x4617))
(assert (> (x8371 64 1 x3758) 10000))
(assert (x6021 x5307))
(assert (x6021 x265))
(assert (= x426 (and x5369 x5034)))
(assert (x6021 x1022))
(assert (x6021 x979))
(assert (= x4308 (x569 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999))))
(assert (x6021 x2696))
(assert (=> (>= 10000 x2046) (= 0 (x8569 x2046))))
(assert (x7582 x4803))
(assert (x6021 x5700))
(assert (x6021 x1531))
(assert (= (and (not x6307) x2144) x2101))
(assert (x6021 x2447))
(assert (x6021 x107))
(assert (x6021 x5998))
(assert (x6021 x5763))
(assert (x6021 x8594))
(assert (x7582 x346))
(assert (= x2938 (x569 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177))))
(assert (x6021 x3725))
(assert (x6517 x6273 2))
(assert (=> (<= x3502 10000) (= (x8569 x3502) 0)))
(assert (=> (>= 10000 x6254) (= 0 (x8569 x6254))))
(assert (=> (>= 10000 x6919) (= 0 (x8569 x6919))))
(assert (x6021 x8433))
(assert (> (x4863 x1911 x1243 x4709 x2434 x4409 x2534) 10000))
(assert (x6021 x344))
(assert (= (and x2639 x1049) x2465))
(assert (x1960 x7143))
(assert (= x5251 (and x1612 (not x2012))))
(assert (x6021 x4879))
(assert (= (and (not x922) x6823) x6502))
(assert (= x6479 (=> (and (= x6112 x741) (= x4870 x7973) (= x1882 x7462) (= x7341 x4705) (= x8120 x6550) (= x1019 x2981) (= x2405 x2950) (= x3573 x3731) (= x7493 x7826) (= x2683 x2036) (= x7439 x1455) (= x759 x3647) (= x3676 x664)) x75)))
(assert (x3961 65459779515086145227071195481915504640854538040456829512690024447692440076288))
(assert (= (and x5340 (not x4607)) x5907))
(assert (= (and (not x5499) x2363) x1316))
(assert (x6021 x3389))
(assert (x6021 x1361))
(assert (x6021 x2618))
(assert (x6021 x4301))
(assert (= x3561 (and (not x487) x2103)))
(assert (x2662 x225 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2186 x4131))
(assert (= x740 (x4408 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736))))
(assert (x6021 x2257))
(assert (x6021 x6149))
(assert (x6021 x1020))
(assert (x6290 x4131))
(assert (= x5432 (and x7443 x929)))
(assert (= (x986 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838)) x4753))
(assert (= x1905 (=> (and (= x8394 x2271) (= x225 x3495) (= x2035 x3020) (= 0 x3557) (= x7627 x7382) (= x4737 x3436) (= x5756 true) (= x3648 x4848) (= x7534 x7689) (= x7071 x1900) (= x7151 x3799) (= x145 x5016) (= x6672 false) (= (x4375 255 x363) x7151) (= 0 x265) (= x5359 x2371) (= 2 x5618) (= x2078 x7257) (= x3255 x2690)) x3341)))
(assert (x6021 x7561))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x3349 11)))
(assert (x7582 256))
(assert (x6021 x6158))
(assert (x3961 34591783479076665078880830389440322436311164112910831269305739813291000201216))
(assert (x6021 x3633))
(assert (x6021 x6110))
(assert (= (and x7145 x2904) x7776))
(assert (x6021 x1260))
(assert (= x8585 (x1880 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736))))
(assert (x6021 x2139))
(assert (x6021 x99))
(assert (= (or (and x1058 x7573) (and x4283 x7407)) x886))
(assert (x6021 x2630))
(assert (x6021 x7543))
(assert (= x576 (and x2991 x590)))
(assert (x6021 x2956))
(assert (x6021 x7741))
(assert (= 36 (x569 (x8371 64 x6554 36))))
(assert (x6021 x1529))
(assert (x6021 x659))
(assert (= x2323 (=> (= x3473 (= x3035 0)) (and (=> (and (and (= (x8371 64 x1298 10) x4157) (<= x2498 255) (= x2498 (x8234 x4157)) (= x1255 (< 0 x2498))) x3473) (and (=> (and (and (or (and (not x2091) (and (= false x1442) (= x4513 x4737) (= x3076 x4848) (= x3832 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x2233 x8394) (<= x2926 127) (= x3260 x3255) (= x7534 x3087) (<= x2926 127) (<= 1 x8315) (= 1 x5475) (= x3970 x1900) (>= x4199 1) (= 310283853 x1493) (= x6356 x4670) (= x2371 x618) (= x8315 x7627) (= (x6458 x8301) x4199) (= 36 x1819) (= false x4247) (= x8587 false) (= x8315 x8301) (= false x5889) (>= 1461501637330902918203684832716283019655932542975 x8315) (= x225 x316) (= x728 x145) (= x618 x5492) (= x2078 x8008) (= x4278 x3020))) (and x2091 (and (and (= x3054 false) (= x4154 x8041) (= x7066 (and x5905 x7157)) (= x7157 (<= x6401 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x4154 x618) (= (* x618 1000000000) x6401) (>= 127 x5059) (= x2780 (x6458 x2084)) (= (< (* x618 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5905) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x5265) (= 310283853 x659) (<= 1 x2780) (= false x7374) (>= 127 x5059) (= 36 x2208)) (or (and (not x7066) (and (= x618 x2371) (= x225 x316) (= x7534 x3087) (= x728 x145) (= x4513 x4737) (= x3260 x3255) (= true x8392) (= x8394 x2233) (= x8315 x7627) (= x5475 0) (= x8008 x2078) (= x3076 x4848) (= x4670 x6356) (= x7975 2) (= x8180 false) (= x3970 x1900) (= x4278 x3020))) (and (and (= x728 x145) (= x7534 x3087) (= x4278 x3020) (= x6401 x2491) (= x4513 x4737) (<= x6401 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x7627 x8315) (= x3007 false) (= x4670 x6356) (= x5475 1) (= x3076 x4848) (= false x3224) (= x3260 x3255) (= x8008 x2078) (= x8394 x2233) (= x3970 x1900) (= x316 x225) (= x618 x2371) (>= x6401 0)) x7066))))) (and (= 128 x8588) (= (= x8315 x2084) x2091) (>= 1461501637330902918203684832716283019655932542975 x8315))) x1255) x5680) (=> (and (not x1255) (and (= x1941 x8315) (= x8177 x3076) (= x4228 x618))) x3222))) (=> (and (not x3473) (and (= x8315 x1941) (= x4228 x618) (= x3076 x8177))) x3222)))))
(assert (not (x3961 (x4863 x1919 x11 x2518 x4145 x4321 x8086))))
(assert (= (x8569 3812630263) 0))
(assert (x6021 x4110))
(assert (=> (>= 10000 x850) (= (x8569 x850) 0)))
(assert (= (x8569 (x8371 64 x5904 36)) (x8371 64 x5904 36)))
(assert (= (and x7594 (not x7059)) x7475))
(assert (x6021 x2796))
(assert (x6021 x2178))
(assert (x6021 x153))
(assert (x6021 x928))
(assert (= (x4408 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758)) x3925))
(assert (= x5997 (x569 (x6067 x1911 x3544 x5997 x2878 x5969))))
(assert (< 10000 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371)))
(assert (= (and (not x7575) x5279) x6934))
(assert (= (x4378 (x1874 x128 x2672)) x2672))
(assert (= (and x7644 (not x5769)) x897))
(assert (= x5357 (and x6763 x6079)))
(assert (x2186 x291))
(assert (x6021 x5941))
(assert (x6021 x3286))
(assert (> (x3105 x2495 x1632 x917 x848 x6330 x1780 x230) 10000))
(assert (x6021 x6772))
(assert (= x462 (x4378 (x1874 x3841 x462))))
(assert (x5973 x7479))
(assert (x6021 x5052))
(assert (x6021 x7289))
(assert (= (x4378 (x1874 x1919 x4645)) x4645))
(assert (= x6134 (x864 (x4463 x6134 x7580 x5525 x125))))
(assert (=> (>= 10000 x3885) (= (x8569 x3885) 0)))
(assert (= (x4378 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)) x1531))
(assert (x6021 x2532))
(assert (x6021 x7822))
(assert (= (x4378 (x8371 64 x3727 6)) x3727))
(assert (x6021 x7890))
(assert (x6021 x5250))
(assert (x6021 x1446))
(assert (x2662 x7112 128))
(assert (x6021 x3214))
(assert (x6021 x4410))
(assert (x6021 x2947))
(assert (x6021 x940))
(assert (x6021 x7950))
(assert (x6021 x7050))
(assert (x6517 x2676 2))
(assert (= (x4378 (x1874 x636 x5609)) x5609))
(assert (x5269 x7717))
(assert (x6021 x577))
(assert (x3961 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (x6021 x5051))
(assert (x6021 x2654))
(assert (< (x6067 x1919 x2762 x836 x812 x6861) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x8569 102788308552044517260959567728648622381392053106279845986800620074717893623808)))
(assert (x7457 x1878))
(assert (= x8297 (x569 (x6067 x5107 x652 x8297 x5470 x2440))))
(assert (x6021 x231))
(assert (x1635 32 x5015))
(assert (x6021 x895))
(assert (x6021 x6781))
(assert (x6021 x5972))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x5207 36)))
(assert (x7457 x414))
(assert (x6021 x4815))
(assert (= x1872 (x569 (x8371 x6151 x8188 x1872))))
(assert (x6021 x3465))
(assert (= (x8569 (x4863 x2495 x250 x7219 x6882 x1933 x4430)) (x4863 x2495 x250 x7219 x6882 x1933 x4430)))
(assert (x6021 x2135))
(assert (x6021 x1849))
(assert (= x5348 (=> (and (or (and x1269 (and (= x3405 x4928) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7706 x6138)) (= x5634 x8594) (= (x8027 x3351) x6267) (= x5121 x5385) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5121) (= x3712 x6450) (= x6005 x5941) (= x29 x6287) (= (ite (= x5941 0) x3765 0) x7706) (= x3136 x617) (= x1022 x1870) (= x6087 x8) (= x3206 x3446) (= x5121 (+ x6138 x7706)) (<= 0 x5121) (= (- x6267 x7706) x8576) (= x4159 x4787) (= x3651 x7978) (= x3667 x438) (= x7423 x7922) (= x1038 x7334) (= x6138 (x1456 x3611)))) (and (and (= x7978 x3651) (= x7922 x7423) (= x3446 x3206) (= x29 x6287) (= x3405 x4928) (= x4159 x4787) (= x3667 x438) (= x6005 x5941) (= x8 x6087) (= x8594 x5634) (= x1022 x1870) (= x6450 x3712) (= x7334 x1038) (= x3136 x617)) (not x1269))) (= x1269 (= x5941 0))) x6478)))
(assert (= (and x2619 x4517) x1793))
(assert (x6021 x44))
(assert (x6021 x21))
(assert (x1960 x1264))
(assert (= (=> (and (= x6146 128) (= (x6458 x2738) x4037) (= (= x4037 0) x6872) (= (x8448 (- x7400 128)) x7678)) (and (=> (and (and (>= x1587 1) (= x719 (< 18446744073709551615 x7055)) (= 46442213778836376901753710468615024683576072693327014300388496345503314739200 x6870) (= x1501 1722637450) (>= x7678 196) (>= 127 x4661) x335 (= x6092 x3687) (>= 127 x4661) (= x7532 x7678) (= false x7835) (= x1587 (x6458 x3611)) (= x5671 128) (= x8062 x6331) (<= x7532 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x7678 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (= (x7489 132) x415) x335) (= x7135 x3185) (= (x5912 132) x7055) (= false x4324) (<= 196 x7532)) (not x6872)) (and (=> (and (and (= x4774 (> x3669 x7532)) (= x3669 (x6862 (+ x7055 164))) (= x4067 164)) (not x719)) (and (=> (and (not x4774) (and (= x2221 (+ 4 x8062)) (= (> x7532 (+ 31 x2221)) x8557))) (and (=> (and (and (= false x1594) (= x7861 true) (= 0 x5329)) (not x8557)) x1788) (=> (and x8557 (and (= (x5912 x2221) x3597) (= x2320 (< 18446744073709551615 x3597)))) (and (=> (and (and (= x7790 (+ 32 x2221)) (= (> x3620 x7532) x1865) (= (x6862 (+ x7790 x3597)) x3620)) (not x2320)) (and (=> x1865 x6348) (=> (and (not x1865) (and (= x7181 (= x3611 x8301)) (or (and (not x7181) (and (= x5329 132) (= x3419 false) (= true x6038))) (and x7181 (and (>= x6260 161) (= x2085 (x6862 (+ x6070 x3597))) (= x4114 (x7787 x6557)) (= x725 (* 32 x2357)) (= x6557 (+ 160 x725)) (= x5382 (x4628 x7980 32)) (= 0 x5329) (= (x6862 (+ x3597 31)) x7980) (> x6260 x6557) (= (x6862 (+ 32 x102)) x3282) (= x3130 true) (= x6237 128) (or (>= x4114 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x4114 31)) (= x6070 (x6862 (+ x6557 32))) (= x6260 (x6862 (+ x3282 x6557))) (= x102 (* 32 x5382)) (= x2357 (x4628 x2113 32)) (or (<= x7055 115792089237316195423570985008687907853269984665640564039457584007913129639744) (>= x7055 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= (x6862 (+ x7055 31)) x2113) (= x2000 false)))))) x1788))) (=> x2320 x2667))))) (=> x4774 x6348))) (=> x719 x2667))) (=> (and x6872 (and (= false x6644) (= x7483 x3308) (= x6490 x3240) (= x7033 0) (= 2 x8512) (= true x1292) (= x5160 0) (= x2828 x1912))) x7857))) x4574))
(assert (x6021 x4427))
(assert (= x6151 (x864 (x8371 x6151 x8188 x1872))))
(assert (=> (<= x7614 10000) (= 0 (x8569 x7614))))
(assert (x6021 x6794))
(assert (= (and x805 x5436) x2296))
(assert (x6021 x3588))
(assert (x770 x8314))
(assert (= (x6067 x1409 x7939 x8431 x874 x5094) (x8569 (x6067 x1409 x7939 x8431 x874 x5094))))
(assert (x6021 x8449))
(assert (x6021 x8069))
(assert (x6021 x4000))
(assert (x6021 x2923))
(assert (= x6566 (x4408 (x6067 x7741 x6208 x6643 x6566 x3171))))
(assert (x6021 x8315))
(assert (= (x864 (x4463 x81 x2653 x217 x3582)) x81))
(assert (=> (<= x6819 10000) (= 0 (x8569 x6819))))
(assert (x2662 x1010 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2668 (x6067 x62 x3305 x6018 x6655 x4882)) x4882))
(assert (x6021 x3078))
(assert (= (and x8140 x6876) x6889))
(assert (x6021 x496))
(assert (x6021 x117))
(assert (x6021 x5904))
(assert (x6021 x4386))
(assert (=> (<= x6300 10000) (= (x8569 x6300) 0)))
(assert (not (x3961 (x4863 x7741 x1138 x7294 x4427 x6476 x4714))))
(assert (= x3477 (or (and x6217 x3063) (and x5267 x1186))))
(assert (=> (>= 10000 x8061) (= (x8569 x8061) 0)))
(assert (= x212 (x569 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117))))
(assert (= x4723 (and x6569 x2200)))
(assert (x6021 x5644))
(assert (x6021 x6711))
(assert (< (x4463 x62 x589 x6754 x6216) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x770 x321))
(assert (x5269 x4319))
(assert (x6517 x1726 32))
(assert (= (x8569 (x1874 x6151 x199)) (x1874 x6151 x199)))
(assert (x6021 x7719))
(assert (x6021 x2011))
(assert (not (x3961 (x4863 x5107 x3059 x1297 x2154 x8061 x7331))))
(assert (x6021 x8496))
(assert (x6021 x8042))
(assert (= x8383 (and x6029 (not x5288))))
(assert (=> (<= x6466 10000) (= (x8569 x6466) 0)))
(assert (= x6871 (and x4233 x6298)))
(assert (x6021 x8200))
(assert (= (x569 (x8371 64 x3255 4)) 4))
(assert (=> (>= 10000 x212) (= (x8569 x212) 0)))
(assert (= (x6067 x636 x620 x7121 x4244 x4630) (x8569 (x6067 x636 x620 x7121 x4244 x4630))))
(assert (x6021 x1141))
(assert (=> (>= 10000 x2440) (= (x8569 x2440) 0)))
(assert (= (x569 (x8371 64 x2046 12)) 12))
(assert (=> (>= 10000 x4390) (= 0 (x8569 x4390))))
(assert (= x4240 (and (not x2252) x6724)))
(assert (= 64 (x864 (x8371 64 x1859 11))))
(assert (= x4316 (and x7799 x8549)))
(assert (=> (<= x2760 10000) (= (x8569 x2760) 0)))
(assert (x6021 x1884))
(assert (= x1930 (and (not x4853) x2064)))
(assert (x6021 x5035))
(assert (x6021 x514))
(assert (= 0 (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x7582 x2676))
(assert (x1960 x2524))
(assert (x2662 x2326 128))
(assert (= x3932 (or x2958 x2296)))
(assert (not (x3961 (x8371 64 x603 2))))
(assert (< (x4463 x8295 x8358 x6466 x2877) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x864 (x6067 x636 x620 x7121 x4244 x4630)) x636))
(assert (= x636 (x864 (x4463 x636 x197 x5649 x3751))))
(assert (x6021 x7928))
(assert (= x1070 (x4378 (x8371 x1883 x1070 x6150))))
(assert (x6021 x225))
(assert (x6021 x2074))
(assert (x2662 x145 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x7549 x4961) x3274))
(assert (x6021 x6211))
(assert (=> (<= x2492 10000) (= (x8569 x2492) 0)))
(assert (x6021 x8270))
(assert (x6021 x8028))
(assert (=> (<= x6224 10000) (= (x8569 x6224) 0)))
(assert (= x4843 (=> (= (+ x3902 x2959) x6243) x2567)))
(assert (> (x8371 64 1 x4796) 10000))
(assert (x7457 x1529))
(assert (x6021 x7917))
(assert (x6290 x7894))
(assert (x6021 x2821))
(assert (x6021 x7369))
(assert (=> (>= 10000 x2516) (= 0 (x8569 x2516))))
(assert (= (and x643 x5971) x7498))
(assert (= x1606 (or x1225 x1530 x8023)))
(assert (x6021 x6849))
(assert (x6021 x3541))
(assert (=> (<= x6130 10000) (= 0 (x8569 x6130))))
(assert (x6021 x105))
(assert (x7457 x2235))
(assert (= (or x6051 x1679) x2790))
(assert (x6021 x490))
(assert (x6021 x755))
(assert (not (x3961 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794))))
(assert (x2662 x4879 128))
(assert (=> (>= 10000 x7602) (= 0 (x8569 x7602))))
(assert (x6021 x5933))
(assert (< 10000 (x4463 x7741 x4301 x1145 x5328)))
(assert (not (x3961 (x8371 x1911 x5721 x7539))))
(assert (= x2495 (x864 (x1874 x2495 x884))))
(assert (= x5682 (and x2973 x4755)))
(assert (not (x3961 (x8371 64 x8175 4))))
(assert (x6021 x5092))
(assert (=> (>= 10000 x5271) (= (x8569 x5271) 0)))
(assert (x6021 x4742))
(assert (= x7786 (x864 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838))))
(assert (x6021 x8216))
(assert (= (x4378 (x4463 x636 x197 x5649 x3751)) x197))
(assert (= x6275 (and x727 x820)))
(assert (= (and x1273 x7133) x5582))
(assert (x6021 x399))
(assert (x6021 x4350))
(assert (x6021 x2924))
(assert (not (x3961 (x8371 64 x7601 7))))
(assert (x6021 x975))
(assert (x6021 x1910))
(assert (x6021 x3764))
(assert (x6021 x3087))
(assert (= x1241 (and x1322 x4728)))
(assert (x1960 x2847))
(assert (= x738 (and x3045 x8278)))
(assert (= x3704 (and x7879 (not x6935))))
(assert (< 10000 (x8371 64 x4670 36)))
(assert (x6021 x5481))
(assert (x6021 x1484))
(assert (x6021 x910))
(assert (x6021 x2861))
(assert (x6021 x1950))
(assert (> (x4463 x6151 x2347 x739 x8571) 10000))
(assert (x6021 x3058))
(assert (x1635 32 x2357))
(assert (x6290 x8047))
(assert (=> (<= x1996 10000) (= 0 (x8569 x1996))))
(assert (x6021 x5855))
(assert (= (and x4892 x1954) x6667))
(assert (= (x8371 64 x8175 5) (x8569 (x8371 64 x8175 5))))
(assert (x6021 x7384))
(assert (= (x4378 (x8371 x1919 x294 x5490)) x294))
(assert (x1635 256 x7759))
(assert (x6021 x7103))
(assert (= (and x4325 x7214) x7673))
(assert (not (x3961 (x8371 64 x7825 36))))
(assert (x6021 x4293))
(assert (x6021 x7427))
(assert (= (x864 (x4863 x2495 x250 x7219 x6882 x1933 x4430)) x2495))
(assert (x2662 x1607 32))
(assert (= x4377 (and x6177 x2990)))
(assert (< (x4863 x1883 x2748 x5837 x2413 x4530 x2755) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3056))
(assert (< (x4463 x7786 x2374 x5271 x5708) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5269 x2830))
(assert (= (and x5060 x2511) x5081))
(assert (x6021 x2877))
(assert (= (x986 (x4863 x1919 x11 x2518 x4145 x4321 x8086)) x8086))
(assert (x2626 x5382))
(assert (x6021 x511))
(assert (= (x8569 (x8371 64 x7391 7)) (x8371 64 x7391 7)))
(assert (= (x8569 (x6067 x7741 x6208 x6643 x6566 x3171)) (x6067 x7741 x6208 x6643 x6566 x3171)))
(assert (= x2284 (=> (and (or (not x5083) (and (and (and (= x5311 (> x3448 32)) (= x532 (x4442 x1120))) (or (and x5311 (and (or (not x3703) (and (and (and (= (> x3448 96) x7279) (= (x7637 x5852) x8002) (= x5852 (x6862 (+ x1120 64))) (= (x6862 (+ 64 x5660)) x7611)) (or (and (and (= (x7357 x3383) x3129) (= (x6862 (+ x1120 96)) x3383) (<= x3448 128) (= x6869 (x6862 (+ 96 x5660)))) x7279) (not x7279))) x3703)) (and (= (x6862 (+ x1120 32)) x642) (= (> x3448 64) x3703) (= x6473 (x3094 x642)) (= x3043 (x6862 (+ x5660 32)))))) (not x5311))) x5083)) (and (= x5083 (> x3448 0)) (= (x6862 (+ x8511 x7752)) x1689) (= x3448 (x205 x2127)) (= x7653 (x6862 (+ x8511 x6720))) (= x403 (x6862 (+ 31 x7752))) (= x6720 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x403)) (= (x8448 (- x7653 x3594)) x7904) (= x6239 (x6862 (+ 32 x1396))) (= x5660 (x6862 (+ 32 x7653))) (= x1396 (x6862 (+ 32 x421))))) x3021)))
(assert (x6021 x2226))
(assert (x6021 x2645))
(assert (= (=> (and (= (= x5897 0) x7590) (or (not x7590) x7590)) x6352) x6709))
(assert (x6290 x4731))
(assert (x2662 x507 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3961 (x8371 64 x5113 11))))
(assert (x6021 x1145))
(assert (x2496 x225))
(assert (x6021 x720))
(assert (x6021 x879))
(assert (x6021 x1472))
(assert (x6021 x8526))
(assert (x6021 x4359))
(assert (= x8300 (x2668 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087))))
(assert (= (and x7800 x6617) x8487))
(assert (x6021 x4136))
(assert (x6021 x6947))
(assert (x6021 x8169))
(assert (x6021 x763))
(assert (x6021 x4601))
(assert (x3961 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (x6021 x680))
(assert (= (=> (and (= x6576 x6782) (= x1912 x7205) (= x1339 true) (= 2 x1967) (= x1892 x6490) (= x7473 x7111) (= x7316 0) (= x3163 x2738) (= x5231 0) (= x1468 x7977) (= x3308 x1218) (= (x4375 255 x2330) x7977) (= x3072 x3331) (= false x1055) (= x8175 x8141) (= x8375 x873) (= x3220 x1875) (= x7479 x4277) (= x1130 x6095)) x1936) x6366))
(assert (= x5702 (or x5907 x3623 x7730)))
(assert (x3961 310283853))
(assert (x6021 x34))
(assert (x1960 x3368))
(assert (x6021 x3925))
(assert (< 10000 (x8371 64 x1624 36)))
(assert (= x5107 (x864 (x4463 x5107 x1599 x5399 x4359))))
(assert (= (and (not x7399) x1419) x2317))
(assert (x6021 x4154))
(assert (= 32 (x864 (x1874 32 104))))
(assert (= x8295 (x864 (x4863 x8295 x8185 x6925 x979 x5754 x2033))))
(assert (= (and x2059 x2522) x5152))
(assert (= x7963 (x569 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801))))
(assert (= x579 (x4378 (x8371 x8390 x579 x1433))))
(assert (x6517 x346 32))
(assert (x6021 x8191))
(assert (x6021 x6438))
(assert (x6021 x1235))
(assert (x6021 x380))
(assert (= (=> (and (or (and (and (= x1970 x1276) (= x1294 x332) (= x1713 x467) (= x389 x6114) (= x4535 x5010)) (not x5594)) (and (and (= x2500 (x7926 x8531)) (= x2850 x4643) (= (- x2500 x2132) x1658) (= x332 x1294) (= x4535 x5010) (= x1713 x467) (= x2132 (ite (= x6114 0) x605 0)) (< (+ x2132 x4608) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x389 x6114) (<= x2850 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4608 (x1876 x3611)) (= (+ x2132 x4608) x2850) (<= 0 x2850) (= x1970 x1276)) x5594)) (= x5594 (= 0 x6114))) x4093) x7944))
(assert (x6021 x250))
(assert (= (and x14 x7781) x3281))
(assert (x6021 x8447))
(assert (= x1919 (x864 (x4863 x1919 x11 x2518 x4145 x4321 x8086))))
(assert (= (and x2055 x1731) x451))
(assert (x5269 x2235))
(assert (= (x8371 64 x3268 12) (x8569 (x8371 64 x3268 12))))
(assert (x6021 x2040))
(assert (x6021 x3454))
(assert (x1635 32 x8274))
(assert (x2626 x2835))
(assert (not (x3961 (x6067 x112 x6250 x8267 x825 x6142))))
(assert (= x5704 (x7859 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704))))
(assert (x6021 x6717))
(assert (x6021 x5002))
(assert (x2662 x1665 256))
(assert (x6021 x5182))
(assert (x6021 x1074))
(assert (x6021 x3983))
(assert (=> (<= x383 10000) (= 0 (x8569 x383))))
(assert (x6021 x4880))
(assert (= (x569 (x8371 64 x1624 36)) 36))
(assert (x1960 x3895))
(assert (x2662 x2362 256))
(assert (x6021 x2434))
(assert (x6021 x1631))
(assert (x6021 x4907))
(assert (x6021 x6547))
(assert (x1635 32 x3389))
(assert (= (x4408 (x6067 x2495 x3439 x1839 x1840 x3342)) x1840))
(assert (= x1862 (x4378 (x8371 64 x1862 6))))
(assert (= (=> (= x7967 (< 0 (ite (= 0 x7158) x7158 1))) (and (=> (and (not x7967) (and (= x5342 (= 0 x5593)) (or (not x5342) x5342))) x7021) (=> x7967 x5562))) x5147))
(assert (x3961 34591783479076665047274362116096262703299809091723987870014818727818681087008))
(assert (x6021 x5482))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x81 x7614 x3028 x8276 x1764 x4340)))
(assert (= x6570 (or x4976 x6999 x7989 x616 x5934)))
(assert (x2662 x2545 2))
(assert (= x3841 (x864 (x6067 x3841 x2108 x7282 x1323 x3666))))
(assert (x6021 x8274))
(assert (x6021 x3029))
(assert (x6021 x7839))
(assert (x6021 x994))
(assert (x6021 x8079))
(assert (x6021 x3998))
(assert (= (or x7947 x385 x6616) x8570))
(assert (x2626 x4469))
(assert (=> (>= 10000 x3508) (= (x8569 x3508) 0)))
(assert (x6021 x3647))
(assert (x6021 x540))
(assert (=> (>= 10000 x3349) (= (x8569 x3349) 0)))
(assert (x2186 x3584))
(assert (= x3026 (or (and x6898 x871) (and x5766 x1052))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x77 36)))
(assert (x6021 x1168))
(assert (x6021 x4285))
(assert (x6021 x7398))
(assert (=> (<= x7017 10000) (= 0 (x8569 x7017))))
(assert (< 10000 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742)))
(assert (=> (<= x158 10000) (= 0 (x8569 x158))))
(assert (=> (>= 10000 x2033) (= 0 (x8569 x2033))))
(assert (= x7730 (and x238 (not x6606))))
(assert (= x1822 (x2668 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068))))
(assert (x6021 x2653))
(assert (x6021 x3233))
(assert (= (and x5173 (not x3152)) x4821))
(assert (x6290 x2291))
(assert (x6290 x6132))
(assert (= x2072 (and x8106 (not x5765))))
(assert (= x7620 (and (not x8584) x4651)))
(assert (= (and x4406 x5824) x5309))
(assert (= (and (not x718) x5751) x1382))
(assert (= x4093 (=> (= x4852 (= x389 0)) (and (=> (and (not x4852) (and (= x2390 x1713) (= x4672 x332) (= x1276 x5469) (= x7788 x4535) (= 1 x7158) (= x5593 0))) x4490) (=> (and (and (= x1196 0) (= false x4889) (= x7097 true)) x4852) x6541)))))
(assert (= (x4408 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704)) x7192))
(assert (not (x3961 (x4863 x1409 x4788 x7372 x6764 x5069 x3607))))
(assert (= x570 (or (and x4082 x7046) (and x1500 x3428) (and x6685 x7845))))
(assert (= x7255 (=> (and (= x5425 x1254) (= x7895 x5054) (= x5033 x5274) (= x4649 x4303)) x2913)))
(assert (= (x1880 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742)) x3742))
(assert (x6021 x316))
(assert (= (x4378 (x8371 64 x7772 100)) x7772))
(assert (x6021 x6224))
(assert (= (and (not x7301) x6025) x6051))
(assert (x6021 x3526))
(assert (x6290 x2716))
(assert (= (and x639 (not x5869)) x4146))
(assert (x6021 x2634))
(assert (x6021 x6353))
(assert (x3961 3812630263))
(assert (= (and (not x7010) x3443) x6164))
(assert (x6021 x2943))
(assert (=> (<= x5094 10000) (= 0 (x8569 x5094))))
(assert (x1635 32 (ite (not (= 0 x702)) 1 0)))
(assert (= (x986 (x4863 x128 x4320 x1602 x6915 x2789 x4998)) x4998))
(assert (= (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464) (x8569 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464))))
(assert (=> (<= x848 10000) (= (x8569 x848) 0)))
(assert (= (x569 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213)) x4433))
(assert (=> (<= x663 10000) (= (x8569 x663) 0)))
(assert (= (x4408 (x6067 x7786 x8366 x1548 x3194 x4478)) x3194))
(assert (x6021 x7))
(assert (=> (<= x5203 10000) (= (x8569 x5203) 0)))
(assert (x1960 x789))
(assert (=> (>= 10000 x1189) (= 0 (x8569 x1189))))
(assert (< 10000 (x8371 64 x603 6)))
(assert (x5269 x1271))
(assert (x6021 x1231))
(assert (x6021 x7790))
(assert (x6021 x3829))
(assert (= (x1880 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464)) x2464))
(assert (x6021 x2130))
(assert (=> (>= 10000 x7741) (= (x8569 x7741) 0)))
(assert (x6021 x8226))
(assert (x6021 x5046))
(assert (= (and x1209 x7945) x8115))
(assert (=> (<= x652 10000) (= (x8569 x652) 0)))
(assert (x6021 x22))
(assert (x6021 x7509))
(assert (x6021 x3015))
(assert (x6021 x2453))
(assert (x6021 x412))
(assert (x5269 x2605))
(assert (x6021 x899))
(assert (= (x986 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829)) x7828))
(assert (x2662 x4981 256))
(assert (x6021 x3305))
(assert (x6021 x5170))
(assert (= 0 (x8569 48755886422350550937420582033662272622158303343164848365600209189876434731008)))
(assert (not (x3961 (x8371 x1409 x3287 x7102))))
(assert (= (and x4146 (not x3027)) x6951))
(assert (x6021 x6722))
(assert (x6021 x3910))
(assert (x6021 x5449))
(assert (= x2957 (x4378 (x8371 64 x2957 7))))
(assert (= (x8371 x1919 x294 x5490) (x8569 (x8371 x1919 x294 x5490))))
(assert (not (x3961 (x6067 x8295 x2784 x8304 x6096 x7098))))
(assert (x6021 x1338))
(assert (= (=> (and (= (= x5930 0) x1128) (or x1128 (not x1128))) x6741) x94))
(assert (=> (<= x7285 10000) (= (x8569 x7285) 0)))
(assert (x6021 x4254))
(assert (x6021 x3415))
(assert (= (x569 (x6067 x7786 x8366 x1548 x3194 x4478)) x1548))
(assert (=> (<= x5420 10000) (= (x8569 x5420) 0)))
(assert (x7457 x8047))
(assert (= (and (not x1364) x6886) x4117))
(assert (x6021 x3865))
(assert (x6021 x2523))
(assert (x1960 x2744))
(assert (x6517 (+ 31 x4568) 32))
(assert (=> (>= 10000 x1548) (= 0 (x8569 x1548))))
(assert (x6021 x2033))
(assert (=> (<= x2020 10000) (= 0 (x8569 x2020))))
(assert (x6021 x2738))
(assert (x6021 x145))
(assert (= x3065 (and x4588 x2782)))
(assert (x6021 x7307))
(assert (=> (>= 10000 x6170) (= 0 (x8569 x6170))))
(assert (< 10000 (x4463 x8390 x3088 x2679 x2045)))
(assert (x6021 x5405))
(assert (x6021 x8434))
(assert (x3961 35477284059277649309253622239531857712935939529143554018288893216769000107873))
(assert (=> (>= 10000 x2653) (= (x8569 x2653) 0)))
(assert (x2662 x2554 32))
(assert (= (x4408 (x6067 x81 x5956 x3927 x743 x3464)) x743))
(assert (= x4183 (and (not x2268) x6787)))
(assert (x6021 x8368))
(assert (= x2434 (x4408 (x4863 x1911 x1243 x4709 x2434 x4409 x2534))))
(assert (x6021 x578))
(assert (x2662 x1271 32))
(assert (= (x2668 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183)) x2596))
(assert (x5973 x225))
(assert (= 0 (x8569 2001815235)))
(assert (= (x4408 (x6067 x6151 x5373 x4342 x8092 x2907)) x8092))
(assert (x6021 x1650))
(assert (= (or x7475 x134) x6548))
(assert (x1635 32 (ite (not (= x4170 0)) 1 0)))
(assert (= x5389 (x2668 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794))))
(assert (= x6453 (or x3037 x2432)))
(assert (= (and x4563 x4481) x5867))
(assert (x6021 x6991))
(assert (x6021 x721))
(assert (=> (<= x5344 10000) (= 0 (x8569 x5344))))
(assert (x6021 x5265))
(assert (x2662 x7473 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3961 (x4463 x5107 x1599 x5399 x4359))))
(assert (= (x569 (x8371 64 x2957 7)) 7))
(assert (x6021 x5132))
(assert (x6021 x835))
(assert (x6021 x1320))
(assert (x6021 x2197))
(assert (= x8280 x2391))
(assert (x6021 x2693))
(assert (= x3484 (and x1362 (not x2851))))
(assert (x6021 x605))
(assert (x6021 x4981))
(assert (x1960 x2732))
(assert (=> (<= x2579 10000) (= 0 (x8569 x2579))))
(assert (=> (<= x5997 10000) (= (x8569 x5997) 0)))
(assert (= (=> (and (= x4510 x2078) (= x145 x2796) (= x7153 0) (= x6299 x4670) (= x3020 x2600) (= x3255 x3828) (= 2 x5789) (= x6878 x1900) (= x2371 x8310) (= false x2703) (= x352 x7534) (= x4737 x3356) (= x8181 x7627) (= x8394 x6883) (= x225 x2609) (= x4848 x6337) (= true x3923)) x4830) x5668))
(assert (= x4703 (x986 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x6134 x2428 x8056)))
(assert (not (x3961 (x8371 x112 x7510 x987))))
(assert (x6021 x5220))
(assert (x6021 x5445))
(assert (= (ite (<= x8390 32) x3046 (ite (<= x8390 64) x6218 (ite (>= 96 x8390) x3520 (ite (>= 128 x8390) x2175 (ite (<= x8390 160) x3928 (ite (<= x8390 192) x3577 x7486)))))) (x569 (x8371 64 x158 (ite (>= 32 x8390) x3046 (ite (<= x8390 64) x6218 (ite (>= 96 x8390) x3520 (ite (>= 128 x8390) x2175 (ite (>= 160 x8390) x3928 (ite (<= x8390 192) x3577 x7486))))))))))
(assert (x6021 x4326))
(assert (x6021 x5203))
(assert (x6290 x2362))
(assert (= (x986 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758)) x6819))
(assert (x6021 x3409))
(assert (x2186 2))
(assert (= (x8569 34591783479076665122502074927488338969190252781858077677016911635275368785765) 0))
(assert (x6021 x6330))
(assert (x6021 x2551))
(assert (x6021 x2196))
(assert (x6021 x1236))
(assert (x6021 x4530))
(assert (x6021 x8056))
(assert (= x7127 (=> (and (= x3022 x145) (= x6960 x2371) (= x4848 x3938) (= x7163 false) (= x387 x7627) (= x2078 x1161) (= x4737 x6137) (= x3351 x8394) (= (x4375 255 x3170) x6186) (= x7534 x586) (= x6186 x4797) (= 2 x7444) (= x7155 0) (= x3020 x2506) (= x225 x977) (= x5895 x1900) (= true x908) (= 0 x7239) (= x3255 x1306)) x3104)))
(assert (x6021 x7247))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x1298 10)))
(assert (= x7510 (x4378 (x8371 x112 x7510 x987))))
(assert (x6021 x2046))
(assert (not (x3961 (x8371 64 x603 36))))
(assert (= x384 (x4378 (x1874 32 x384))))
(assert (x2662 x4319 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 100 (x569 (x8371 64 x7970 100))))
(assert (> (x1874 32 104) 10000))
(assert (x6021 x8187))
(assert (not (x3961 (x8371 x8390 x579 x1433))))
(assert (= x613 (or x3561 x3642)))
(assert (x6021 x7217))
(assert (x6290 x400))
(assert (x6021 x7887))
(assert (x6021 x2540))
(assert (< 10000 (x8371 x62 x6998 x2947)))
(assert (= (x4463 x7786 x2374 x5271 x5708) (x8569 (x4463 x7786 x2374 x5271 x5708))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x1409 x6621)))
(assert (= x6943 (x4408 (x6067 x5303 x8144 x4874 x6943 x3508))))
(assert (x7457 x3536))
(assert (x6021 x4934))
(assert (= (=> (and (= 2 x5404) (= x6087 x586) (= x4159 x5895) (= x1161 x5634) (= x6287 x977) (= x7922 x1306) (= x2506 x3651) (= x3938 x3712) (= x251 false) (= x3136 x387) (= true x6214) (= x3351 x4928) (= x5941 0) (= x3667 x6137) (= x6960 x3446) (= x1870 x2584) (= (x4375 255 x3170) x2584) (= x1038 x3022)) x5348) x1617))
(assert (x6021 x82))
(assert (=> (>= 10000 x8064) (= (x8569 x8064) 0)))
(assert (x6021 x1345))
(assert (= (x4378 (x6067 x8295 x2784 x8304 x6096 x7098)) x2784))
(assert (x6021 x5428))
(assert (x6021 x599))
(assert (=> (<= x6632 10000) (= (x8569 x6632) 0)))
(assert (x6021 x7447))
(assert (= (x4408 (x4463 x1891 x6971 x5481 x4245)) x4245))
(assert (= (and x1330 (not x3473)) x4610))
(assert (x6021 x6318))
(assert (> (x8371 64 x6833 36) 10000))
(assert (= (x986 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591)) x3931))
(assert (x6021 x3777))
(assert (x6021 x3308))
(assert (x6021 x8524))
(assert (= x6108 (or x5443 x6042)))
(assert (x6021 x1547))
(assert (not (x3961 (x1874 x1883 x3524))))
(assert (=> (>= 10000 x7282) (= 0 (x8569 x7282))))
(assert (= (=> (and (= x8552 x4761) (= x3328 x2513) (= x5210 x355) (= x6522 x6010) (= x4358 x3029) (= x1235 x8429) (= x4125 x7278) (= x3089 x3150) (= x8006 x2361) (= x5626 x5405) (= x7480 x2110) (= x5086 x1995) (= x5749 x3160)) x6281) x177))
(assert (x6021 x2342))
(assert (= (x8569 (x8371 64 x603 2)) (x8371 64 x603 2)))
(assert (x6021 x1300))
(assert (= x3971 (and (not x7619) x2072)))
(assert (x1960 x5580))
(assert (=> (<= x862 10000) (= (x8569 x862) 0)))
(assert (= x4174 (or x6509 x732 x214)))
(assert (=> (<= x1409 10000) (= (x8569 x1409) 0)))
(assert (= (x8371 64 x7601 7) (x8569 (x8371 64 x7601 7))))
(assert (x6021 x3793))
(assert (x6021 x583))
(assert (x6021 x1891))
(assert (= x3897 (=> (= x5818 (= 0 x4118)) (and (=> (and (and (= x136 x3020) (= x7333 x4118) (= x2078 x1800) (= x8394 x690) (= x5606 x1900) (= 128 x5888) (= x4415 x145) (= x8564 x2371) (= x4848 x1365) (= x1300 x7627) (= x107 x3698) (= x225 x3397) (= x7534 x2651) (= x2151 x4737) (= x3255 x7996)) (not x5818)) x3585) (=> (and (and (= x2942 (= (x5361 260) 34)) (= x233 x3255) (= x5534 (= (x5361 196) (x4949 486))) x8058 (= x7717 (x6862 (+ x1985 31))) (>= 127 x3695) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x2322) (= x6768 (x8448 (- x4721 294))) (= (x8448 (- x5132 290)) x4205) (= x356 false) (<= 1 x5268) (>= x4205 356) (>= 127 x3695) (= x4205 x1634) (= (x2673 128) x1985) (<= 356 x1634) x2942 x5534 (= (x6862 (+ 32 x4721)) x4943) (= 0 x2383) (= x7122 0) (= x7550 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7717)) (= 290 x3880) (= x918 false) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3211) x1965) (= (= (x5361 164) 64) x8058) (= 160 x8249) (= (x7051 224) x7572) (= (= (x4949 518) (x5361 228)) x7844) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1634 4))) (> 160 (- x1634 4))) (> (- x1634 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5204) (= x7715 256) (= (x6862 (+ x7572 31)) x3211) (= (x6862 (+ 486 x7550)) x4721) (= 1084734224 x1852) (= (x6458 x1481) x5268) (= (x6862 (+ x1965 x4943)) x5132) x7844 (= x6361 x3611)) x5818) (and (=> (and (= true x3824) (not x5204)) (and (=> (not x3824) x1905) (=> (and x3824 (= x5769 (and (= true (<= x1634 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 195 x1634)))) (and (=> (not x5769) x1905) (=> (and (and (= (< 18446744073709551615 x5495) x4283) (= x5495 (x5709 164))) x5769) (and (=> (and (and (= (< x1634 x867) x731) (= x867 (x6862 (+ x5495 196)))) (not x4283)) (and (=> x731 x7750) (=> (and (not x731) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1634) (<= 356 x1634) (= x7573 (< 18446744073709551615 x7645)) (= (x5709 260) x7645))) (and (=> (and (not x7573) (and (= (x6862 (+ x7645 292)) x3714) (= (< x1634 x3714) x1997))) (and (=> (and (not x1997) (and (= x3966 (x6659 128)) (= x2371 x5359) (= x2078 x7257) (= x265 64) (= false x903) (= false x7414) (= x2035 x3020) (= x3698 x3799) (= (x6659 160) x236) (= x3495 x225) (= x7689 x7534) (= x3255 x2690) (= x4848 x3648) (= x145 x5016) (= (x6659 128) x425) (= x7627 x7382) (= x3557 1) (= x3415 (x6659 160)) (= x1900 x7071) (= x3436 x4737) (= x2271 x8394))) x3341) (=> x1997 x7750))) (=> x7573 x2049))))) (=> x4283 x2049))))))) (=> x5204 x1905)))))))
(assert (x2662 x4963 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3137))
(assert (= (x8569 106705613605932439001713296114446454776331749937047859905631657259250407702528) 0))
(assert (= x7695 (x4378 (x1874 x5303 x7695))))
(assert (x3961 1766847064778384329583297500742918515827483896875618958121606201292619776))
(assert (x6021 x2105))
(assert (= (x4378 (x4463 x128 x8018 x3984 x1135)) x8018))
(assert (x6021 x2008))
(assert (x6021 x2887))
(assert (=> (>= 10000 x2747) (= (x8569 x2747) 0)))
(assert (x1635 32 x7735))
(assert (x6021 x4659))
(assert (x6021 x896))
(assert (x6021 x7631))
(assert (x2662 x8200 256))
(assert (x6021 x3008))
(assert (=> (>= 10000 x7375) (= (x8569 x7375) 0)))
(assert (x6021 x8578))
(assert (x6021 x4732))
(assert (x6021 x3388))
(assert (x6021 x403))
(assert (x6021 x4912))
(assert (x6021 x5094))
(assert (x6021 x4793))
(assert (x6021 x8116))
(assert (= x5446 (and (not x5778) x4698)))
(assert (x2662 x7473 2))
(assert (x3961 1341992515))
(assert (< 10000 (x1874 x128 x2672)))
(assert (= (=> (and (= x8062 (- x7687 132)) (= (x4628 x7473 2) x59) (= x879 (ite (> x2205 0) x59 (x4375 127 x59))) (= (> x8010 0) x4728) (= x8010 (x8448 (- x2205 (mod (ite (< x879 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x4375 1 x7473) x2205)) (and (=> (not x4728) x2218) (=> (and (and (= (x4375 1 x7473) x3700) (= x5529 (+ 32 x7687)) (= (= 0 x3700) x3253)) x4728) (and (=> (and (and (and (= x5217 (x1874 32 104)) (= x5320 (< 0 x879))) (or (and (and (= 32 x3187) (= x4897 (x8530 x5217)) (<= x879 32)) x5320) (and (not x5320) (= x3187 0)))) (not x3253)) x1244) (=> (and x3253 (and (= (+ x920 x5529) x7400) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7473) x2737) (or (= 32 x920) (= 0 x920)) (= x920 (* 32 (ite (not (= 0 x879)) 1 0))))) x4574))))) x5875))
(assert (x6021 x4139))
(assert (= (x4378 (x4463 x3841 x6391 x1309 x7330)) x6391))
(assert (x6021 x3243))
(assert (x6021 x2730))
(assert (x6021 x3376))
(assert (x6021 x5859))
(assert (x6021 x4567))
(assert (= x5199 (=> (and (or x5440 (not x5440)) (= x5440 (= 0 x2853))) x349)))
(assert (x6021 x740))
(assert (x2186 x3211))
(assert (x6021 x1377))
(assert (= (and x1205 x1527) x5602))
(assert (x6021 x5458))
(assert (= x6693 (x2668 (x4863 x7786 x2854 x3591 x5743 x6693 x7617))))
(assert (= x1883 (x864 (x6067 x1883 x5624 x7756 x4567 x683))))
(assert (= (x4378 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602)) x3960))
(assert (x6021 x4204))
(assert (= 0 (x8569 50226347614966974677930900640024090345938424853691168920094736542366852710400)))
(assert (=> (>= 10000 x36) (= (x8569 x36) 0)))
(assert (x2186 x5598))
(assert (not (x3961 (x4863 x8390 x4163 x6722 x2492 x4934 x2354))))
(assert (x6021 x7419))
(assert (x6021 x591))
(assert (x6021 x5916))
(assert (= (x4378 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213)) x973))
(assert (= (x8569 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213)) (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213)))
(assert (x6021 x2228))
(assert (= x6577 (and x534 x447)))
(assert (x6021 x4297))
(assert (= x3305 (x4378 (x6067 x62 x3305 x6018 x6655 x4882))))
(assert (< (x6067 x2495 x3439 x1839 x1840 x3342) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x4906))
(assert (= (=> (= x7400 (+ x3187 x5529)) x4574) x1244))
(assert (= x603 (x4378 (x8371 64 x603 2))))
(assert (> (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068) 10000))
(assert (x6290 x4624))
(assert (= 32 (x864 (x1874 32 x2318))))
(assert (= (x4863 x8295 x8185 x6925 x979 x5754 x2033) (x8569 (x4863 x8295 x8185 x6925 x979 x5754 x2033))))
(assert (= (x4408 (x4463 x8295 x8358 x6466 x2877)) x2877))
(assert (x6021 x7689))
(assert (x1960 x2551))
(assert (x6021 x612))
(assert (=> (<= x2164 10000) (= (x8569 x2164) 0)))
(assert (x6021 x7239))
(assert (x2662 x3211 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2186 x1665))
(assert (= x6389 (and x3512 (not x4497))))
(assert (= x2621 (and (not x590) x2991)))
(assert (= x1859 (x4378 (x8371 64 x1859 11))))
(assert (not (x3961 (x1874 x1911 x1743))))
(assert (= (x864 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)) x7741))
(assert (= x112 (x864 (x8371 x112 x7510 x987))))
(assert (= (x2668 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758)) x4390))
(assert (= x2354 (x986 (x4863 x8390 x4163 x6722 x2492 x4934 x2354))))
(assert (x6021 x1085))
(assert (x6021 x1549))
(assert (=> (<= x4433 10000) (= (x8569 x4433) 0)))
(assert (= x8175 (x4378 (x8371 64 x8175 5))))
(assert (x6021 x6356))
(assert (= x6192 (x4378 (x8371 x8295 x6192 x2459))))
(assert (x6021 x2491))
(assert (x6021 x7282))
(assert (x6021 x5366))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x1887 12)))
(assert (x6021 x2938))
(assert (=> (>= 10000 x945) (= (x8569 x945) 0)))
(assert (not (x3961 (x4463 x6151 x2347 x739 x8571))))
(assert (= x7939 (x4378 (x6067 x1409 x7939 x8431 x874 x5094))))
(assert (x6021 x4713))
(assert (x6021 x7678))
(assert (x2662 x2830 32))
(assert (= (or x2241 x1354) x3064))
(assert (not (x3961 (x8371 64 x7753 7))))
(assert (< (x8371 x8390 x579 x1433) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3179))
(assert (x1960 x7239))
(assert (= x6837 (and x3443 x7010)))
(assert (x6021 x6632))
(assert (= (x4378 (x1874 32 x2318)) x2318))
(assert (x6021 x2859))
(assert (> (x1874 x8295 x6990) 10000))
(assert (x6021 x3811))
(assert (x6021 x2232))
(assert (x6021 x5529))
(assert (= x1640 (x4378 (x8371 x7741 x1640 x6441))))
(assert (= (x8569 (x1874 x8390 x1399)) (x1874 x8390 x1399)))
(assert (< 10000 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591)))
(assert (x2186 x3536))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x7772 100)))
(assert (= x2088 (or x1034 x3363)))
(assert (x2662 x4131 256))
(assert (x6021 x5787))
(assert (x7457 x2605))
(assert (= (x7859 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602)) x6602))
(assert (= x6835 (or x8476 x2764)))
(assert (x2662 x5598 256))
(assert (not (x3961 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704))))
(assert (x6021 x4498))
(assert (= (and x5212 x3735) x2583))
(assert (x6021 x3202))
(assert (= (and x2692 x5440) x4364))
(assert (x6021 x7117))
(assert (= x2470 (and x3704 (not x7256))))
(assert (x6021 x1495))
(assert (= (x1880 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794)) x1794))
(assert (x6021 x4371))
(assert (x6021 x5535))
(assert (= (x8569 x6451) (x8569 (+ x6451 1))))
(assert (> (x4863 x1919 x11 x2518 x4145 x4321 x8086) 10000))
(assert (= (x864 (x8371 64 1 x3758)) 64))
(assert (x1635 32 x720))
(assert (not (x3961 (x8371 64 x2957 7))))
(assert (= (x4408 (x4863 x62 x2406 x1667 x1539 x5391 x8104)) x1539))
(assert (=> (>= 10000 x7294) (= (x8569 x7294) 0)))
(assert (= x2622 (and (not x8472) x4550)))
(assert (x6021 x572))
(assert (x6021 x2762))
(assert (x6021 x4994))
(assert (x6021 x3173))
(assert (x6021 x5218))
(assert (not (x3961 (x6067 x8390 x6994 x6858 x6332 x8121))))
(assert (x6021 x5555))
(assert (< (x4863 x112 x1756 x6665 x2535 x7887 x2377) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1960 x138))
(assert (= x3921 (and x198 x6725)))
(assert (= (x4378 (x8371 64 x3255 5)) x3255))
(assert (= (=> (and (= (x4375 1 x7473) x6340) (= (> x82 0) x3437) (= (x4628 x7473 2) x2326) (= (- x8541 132) x7736) (= (x8448 (- x6340 (mod (ite (> 32 x2753) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x82) (= x2753 (ite (> x6340 0) x2326 (x4375 127 x2326)))) (and (=> (and x3437 (and (= x4754 (= x4307 0)) (= x1345 (+ x8541 32)) (= x4307 (x4375 1 x7473)))) (and (=> (and (and (or (and x2254 (and (<= x2753 32) (= (x8530 x6500) x3878) (= x5550 32))) (and (= x5550 0) (not x2254))) (and (= x6500 (x1874 32 104)) (= (< 0 x2753) x2254))) (not x4754)) x5943) (=> (and x4754 (and (= x4120 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7473)) (or (= x802 32) (= x802 0)) (= (+ x1345 x802) x602) (= (* 32 (ite (not (= x2753 0)) 1 0)) x802))) x8012))) (=> (not x3437) x7714))) x972))
(assert (x2186 x7162))
(assert (x6021 x6092))
(assert (= (x8569 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)) (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)))
(assert (= (and x5740 (not x5805)) x4454))
(assert (x6021 x690))
(assert (x6021 x4040))
(assert (= (x864 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117)) x1409))
(assert (x6021 x4451))
(assert (x6021 x2285))
(assert (= (and x1809 x6367) x1319))
(assert (= x8276 (x4408 (x4863 x81 x7614 x3028 x8276 x1764 x4340))))
(assert (= x7588 (and (not x8199) x2790)))
(assert (x6021 x6289))
(assert (=> (>= 10000 x7072) (= (x8569 x7072) 0)))
(assert (< 10000 (x8371 64 x7708 12)))
(assert (x6021 x1050))
(assert (= x4977 (=> (and (= x1449 x8110) (= x4738 x2825) (= x399 x2969) (= x5767 x1562) (= x1067 x87) (= 0 x4449) (= x7367 x2136) (= x3340 x7189) (= x582 x3526) (= x675 x2114) (= x1114 x4486) (= x857 x4647) (= x320 x2319) (= x2229 x7631) (= x142 1)) x5611)))
(assert (x6021 x1537))
(assert (< 10000 (x8371 64 x3268 12)))
(assert (= x227 (=> (= x6054 (< 0 x4912)) (and (=> (and (and (= x4958 true) (= x6414 4) (= x5750 false)) (not x6054)) x7323) (=> (and x6054 (and (= x3527 x2211) (= x1850 x7245))) x5253)))))
(assert (= (and x2514 x7043) x2454))
(assert (x2186 x7432))
(assert (= (x569 (x8371 x1883 x1070 x6150)) x6150))
(assert (x2662 x1878 256))
(assert (not (x3961 (x1874 x636 x5609))))
(assert (= x2534 (x986 (x4863 x1911 x1243 x4709 x2434 x4409 x2534))))
(assert (x6021 x5903))
(assert (x6021 x4488))
(assert (< 10000 (x4463 x2495 x1522 x3977 x5655)))
(assert (= x62 (x864 (x4463 x62 x589 x6754 x6216))))
(assert (x6021 x5208))
(assert (= x1034 (and x5666 (not x7635))))
(assert (x6021 x491))
(assert (= (=> (and (and (= (= x128 x2438) x1205) (= x2438 (x7038 128))) (or (and (not x1205) (= x6761 (ite x1205 1 0))) (and x1205 (and (= (ite (< 0 x1502) 1 0) x6761) (= (x7038 128) x1502))))) x3036) x1753))
(assert (=> (<= x8081 10000) (= 0 (x8569 x8081))))
(assert (= (x8569 (x4863 x636 x5379 x256 x5272 x4150 x8142)) (x4863 x636 x5379 x256 x5272 x4150 x8142)))
(assert (= x7958 (x1880 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850))))
(assert (x3961 89332125780766104441357105940599211734484755930370930871569612501041822040064))
(assert (x6021 x5620))
(assert (= (and (not x1395) x2751) x6698))
(assert (x6021 x8041))
(assert (x6021 x5303))
(assert (= (or x2412 x6108) x3114))
(assert (= (x1874 x5303 x7695) (x8569 (x1874 x5303 x7695))))
(assert (x6021 x3478))
(assert (= x4625 (or x3169 x6942 x8430 x3842 x4063)))
(assert (x6021 x999))
(assert (= x7581 (and (not x3835) x3244)))
(assert (not (x3961 (x6067 x1883 x5624 x7756 x4567 x683))))
(assert (x6021 x150))
(assert (= (x986 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230)) x1780))
(assert (= 64 (x864 (x8371 64 x7772 100))))
(assert (x6021 x6483))
(assert (x6021 x59))
(assert (x6021 x7480))
(assert (=> (<= x6882 10000) (= 0 (x8569 x6882))))
(assert (= x5292 (or (and x543 x4357) (and x4921 x1942))))
(assert (x6021 x560))
(assert (x6021 x8307))
(assert (= x850 (x7859 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850))))
(assert (x6021 x2527))
(assert (= 64 (x864 (x8371 64 x603 2))))
(assert (x6021 x6238))
(assert (= x6754 (x569 (x4463 x62 x589 x6754 x6216))))
(assert (x6021 x9))
(assert (x6021 x3458))
(assert (= (x569 (x8371 64 x7772 100)) 100))
(assert (x2662 x2330 256))
(assert (= (x8569 (x8371 64 x7391 3)) (x8371 64 x7391 3)))
(assert (x6021 x7124))
(assert (x6021 x1122))
(assert (= (x569 (x8371 64 x5635 2)) 2))
(assert (x2186 x7473))
(assert (x2662 x7479 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x2592))
(assert (x6021 x7257))
(assert (= x8522 (and (not x6746) x1485)))
(assert (x6021 x5503))
(assert (x6021 x7328))
(assert (x6021 x1427))
(assert (= (or x1931 (and (not x7766) x2171)) x3264))
(assert (x6021 x322))
(assert (= x8145 (and x795 x5122)))
(assert (not (x3961 (x8371 64 x5207 2))))
(assert (= (and (not x4357) x543) x3778))
(assert (= (and (not x966) x6223) x814))
(assert (= (x7859 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821)) x1821))
(assert (x6021 x7704))
(assert (x6021 x8))
(assert (= (and x8225 (not x4192)) x147))
(assert (x6021 x2271))
(assert (= (x4378 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424)) x6386))
(assert (= (x8569 (x1874 x1883 x3524)) (x1874 x1883 x3524)))
(assert (x6021 x8471))
(assert (x6021 x6052))
(assert (x6021 x2732))
(assert (= x5137 (and (not x8337) x4971)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x636 x862 x7005)))
(assert (= x7504 (or x8212 x8506)))
(assert (=> (<= x2008 10000) (= (x8569 x2008) 0)))
(assert (x6021 x6775))
(assert (= (and x3734 x5223) x4009))
(assert (= (x4863 x1919 x11 x2518 x4145 x4321 x8086) (x8569 (x4863 x1919 x11 x2518 x4145 x4321 x8086))))
(assert (x6021 x352))
(assert (x6021 x6960))
(assert (x6021 x4758))
(assert (x6021 x7895))
(assert (not (x3961 (x8371 64 x3611 1))))
(assert (= x6865 (x4378 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829))))
(assert (= (and (not x493) x2462) x2248))
(assert (x6021 x6524))
(assert (x7457 x400))
(assert (< (x8371 64 x8226 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4378 (x8371 x1891 x117 x8176)) x117))
(assert (= (x569 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850)) x3100))
(assert (x1635 32 (ite (not (= x6879 0)) 1 0)))
(assert (x6021 x8202))
(assert (x6021 x642))
(assert (x6021 x3939))
(assert (= (and x7656 x289) x4684))
(assert (x2496 x7479))
(assert (= 0 (x8569 34591783479076665078880830389440322441076534786459098783165778951140825654127)))
(assert (x6021 x7411))
(assert (x1960 x6078))
(assert (= (and (not x7662) x1733) x2315))
(assert (x2662 x6624 256))
(assert (= (x6067 x6151 x5373 x4342 x8092 x2907) (x8569 (x6067 x6151 x5373 x4342 x8092 x2907))))
(assert (x6290 x7917))
(assert (x6021 x5086))
(assert (x6021 x991))
(assert (= x5373 (x4378 (x6067 x6151 x5373 x4342 x8092 x2907))))
(assert (x6021 x4891))
(assert (= x1622 (and x4418 x2313)))
(assert (= x1433 (x569 (x8371 x8390 x579 x1433))))
(assert (x7457 x4731))
(assert (= x7470 (or x1171 x7226)))
(assert (x1960 x6241))
(assert (x6021 x602))
(assert (x6021 x5853))
(assert (x6021 x43))
(assert (x6021 x6102))
(assert (x2662 x7479 256))
(assert (x6021 x108))
(assert (= x5635 (x4378 (x8371 64 x5635 2))))
(assert (= (x8569 3628442803) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x81 x5956 x3927 x743 x3464)))
(assert (=> (>= 10000 x4026) (= (x8569 x4026) 0)))
(assert (x6021 x7306))
(assert (= (=> (and (= x6578 (= x142 0)) (or x6578 (not x6578))) x4538) x5611))
(assert (= (x4378 (x4863 x1891 x2624 x6776 x7509 x4204 x6170)) x2624))
(assert (= (and (not x2091) x7855) x2771))
(assert (= x5583 x215))
(assert (= (=> (= x3850 (> x3078 0)) (and (=> (and x3850 (and (or (not x7303) (and (and (and (= (> x252 32) x5411) (= x437 (x5554 x7302))) (or (not x5411) (and x5411 (and (and (= x454 (< 64 x252)) (= (x188 x5845) x5886) (= x7199 (x6862 (+ 32 x99))) (= x5845 (x6862 (+ x7302 32)))) (or (not x454) (and x454 (and (or (and (and (= (x6862 (+ x99 96)) x5781) (>= 128 x252) (= (x5922 x882) x5079) (= (x6862 (+ x7302 96)) x882)) x6917) (not x6917)) (and (= x8046 (x3858 x548)) (= x2848 (x6862 (+ 64 x99))) (= (> x252 96) x6917) (= x548 (x6862 (+ 64 x7302))))))))))) x7303)) (and (= x1434 (x6862 (+ x8109 36))) (= (x6862 (+ x1434 32)) x7198) (= x7735 (x4628 x6581 32)) (= x4000 (x6862 (+ x8441 32))) (= x5242 (x6862 (+ x4000 x440))) (= x8109 (x6862 (+ x2244 x5242))) (= x5699 (x6862 (+ 128 x1434))) (= (x4628 x7265 32) x3009) (< x440 x5242) (= (x6862 (+ x7222 31)) x6581) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5242) (= (x6862 (+ x5242 32)) x5526) (= x99 (x6862 (+ 32 x5699))) (= x7302 (x6862 (+ x440 32))) (<= x440 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x440) (= (* x3009 32) x8441) (= x2244 (x6862 (+ 32 x5706))) (= x1451 (x6862 (+ x7222 x5526))) (= (* 32 x7735) x5706) (>= x8109 2) (= (x6862 (+ x1883 x7302)) x1410) (= x7303 (> x252 0)) (> x8109 x5242) (= (x2243 x440) x252) (<= x440 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x7265 (x6862 (+ x1883 31))) (= 150 x5952) (<= 1 x5242)))) x1083) (=> (and (not x3850) (and (= false x2758) (= x1188 132) (= (x6862 (+ 4 x440)) x6772) (= x6910 (x6862 (+ x6772 32))) (= (x6862 (+ 32 x6910)) x2923) (= x3337 true) (= x5353 (x6862 (+ x2923 32))))) x5100))) x4186))
(assert (= x1903 (x569 (x4863 x6151 x876 x1903 x6351 x2911 x6088))))
(assert (> (x4463 x1911 x1105 x5420 x538) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 32 104)))
(assert (= x7952 (and x8342 x3848)))
(assert (x6021 x2362))
(assert (x6021 x6727))
(assert (x6021 x6887))
(assert (x6021 x8588))
(assert (x6290 x6017))
(assert (x6021 x400))
(assert (= x4058 (=> (and (= x6198 x2078) (= x3020 x2914) (= 0 x3374) (= x4346 x7968) (= x944 x3255) (= x4702 x4673) (= x1900 x8328) (= x2371 x8496) (= x2953 x5002) (= x8394 x7806) (= 1 x2853) (= x2715 x1768) (= x8546 x7627) (= x6432 x6395) (= x450 x8139)) x5199)))
(assert (x6021 x4509))
(assert (x6021 x7817))
(assert (x6021 x2018))
(assert (x7582 x225))
(assert (= x457 (and x5351 (not x5291))))
(assert (x6021 x4626))
(assert (= x7741 (x864 (x4463 x7741 x4301 x1145 x5328))))
(assert (= x7413 (and x1424 x7620)))
(assert (x6021 x2082))
(assert (x6021 x5359))
(assert (x6021 x7222))
(assert (= (x864 (x8371 x1911 x5721 x7539)) x1911))
(assert (< (x8371 64 x603 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x8569 44057028636630039105102054091366763171729008530599747929804322044178077843456)))
(assert (= (and x1827 (not x4842)) x1171))
(assert (= (or x6455 x1791) x277))
(assert (x6021 x3024))
(assert (not (x3961 (x8371 64 x2008 (ite (>= 32 x1891) x6104 (ite (<= x1891 64) x2684 (ite (>= 96 x1891) x7540 (ite (<= x1891 128) x7449 (ite (>= 160 x1891) x5213 (ite (>= 192 x1891) x5567 x6398))))))))))
(assert (x6021 x3320))
(assert (x6021 x3160))
(assert (= x1225 (and (not x6529) x3159)))
(assert (not (x3961 (x1874 x1409 x6621))))
(assert (=> (>= 10000 x7605) (= 0 (x8569 x7605))))
(assert (x6021 x2029))
(assert (x6021 x2984))
(assert (= (x4863 x5107 x3059 x1297 x2154 x8061 x7331) (x8569 (x4863 x5107 x3059 x1297 x2154 x8061 x7331))))
(assert (= (x4378 (x4463 x6134 x7580 x5525 x125)) x7580))
(assert (= (or (and x3266 x7902) (and x453 x1770)) x5211))
(assert (= (x4378 (x4863 x7741 x1138 x7294 x4427 x6476 x4714)) x1138))
(assert (= (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736) (x8569 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736))))
(assert (= x4220 (or x3523 x4025)))
(assert (x6021 x8292))
(assert (x6021 x6417))
(assert (= (x8569 1084734224) 0))
(assert (x6021 x6550))
(assert (= (x1874 x5107 x1246) (x8569 (x1874 x5107 x1246))))
(assert (= x6134 (x864 (x6067 x6134 x7827 x3042 x5877 x4498))))
(assert (x6021 x7829))
(assert (x7457 x4963))
(assert (x6021 x3815))
(assert (x6021 x7326))
(assert (= x4531 (x569 (x8371 x128 x7890 x4531))))
(assert (x2662 x403 32))
(assert (x6021 x6566))
(assert (= (x4408 (x4463 x7786 x2374 x5271 x5708)) x5708))
(assert (= (x7859 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971)) x7971))
(assert (x6021 x1852))
(assert (x6021 x6626))
(assert (x2662 x1607 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x1404))
(assert (x6021 x5651))
(assert (not (x3961 (x6067 x1409 x7939 x8431 x874 x5094))))
(assert (x6021 x2390))
(assert (x6021 x5526))
(assert (not (x3961 (x4863 x6134 x8381 x8081 x3450 x3891 x7263))))
(assert (x6021 x735))
(assert (x6021 x515))
(assert (x6021 x5150))
(assert (= (or x3801 x6800) x4818))
(assert (x6021 x5638))
(assert (= (x8569 (x8371 64 x5207 2)) (x8371 64 x5207 2)))
(assert (x6021 x5517))
(assert (x6021 x4645))
(assert (= x5173 (and x113 (not x1720))))
(assert (=> (<= x6542 10000) (= 0 (x8569 x6542))))
(assert (= (x4378 (x4463 x112 x3807 x4106 x7605)) x3807))
(assert (= (x8569 (x4863 x3841 x4962 x1975 x1342 x6300 x7068)) (x4863 x3841 x4962 x1975 x1342 x6300 x7068)))
(assert (=> (<= x5923 10000) (= (x8569 x5923) 0)))
(assert (=> (<= x5904 10000) (= 0 (x8569 x5904))))
(assert (= x1508 (and x6753 x1833)))
(assert (x6021 x7831))
(assert (x6021 x4265))
(assert (=> (<= x2877 10000) (= 0 (x8569 x2877))))
(assert (x6021 x4089))
(assert (not (x3961 (x8371 64 x5924 12))))
(assert (x6021 x2632))
(assert (= x4924 (and x4871 x1185)))
(assert (= (x2668 (x4863 x6151 x876 x1903 x6351 x2911 x6088)) x2911))
(assert (= x81 (x864 (x8371 x81 x161 x3096))))
(assert (x6021 x3319))
(assert (x6517 x7265 32))
(assert (= x4874 (x569 (x6067 x5303 x8144 x4874 x6943 x3508))))
(assert (= (=> (= x3427 (= x5475 0)) (and (=> (and (and (= (>= x7886 x6433) x2337) (= (x6458 x7627) x5639) (<= 1 x5639) (= (and x2337 x4258) x2573) (= (x6740 x7627) x2408) (= x4258 (< (+ x2408 x6433) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 160 x5480) (= x7886 (x6740 x3611)) (= x6433 (x913 128))) (not x3427)) (and (=> (and (and (= (x880 x7627) x5144) (< (+ x5144 x6433) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1232 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x5144 x6433) x1232) (= (x6740 x3611) x5197) (>= x1232 0) (= (- x5197 x6433) x8242) (= x1232 x5250) (= (= x7627 x2084) x1395)) x2573) (and (=> (and (and (= false x3643) (= x8378 36) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x2183) (= x5642 x3611) (= 1341992515 x6710) (>= 127 x5259) (<= x5259 127) (<= 1 x3491) (= (x6458 x2084) x3491) (= true x3343) (= false x5946)) x1395) (and (=> (and (and (= (< x5656 x2373) x3721) (= (x6862 (+ x2373 x6433)) x5656) (= x2373 (x4770 x6492)) (= (x8371 64 x3611 1) x6492)) x3343) (and (=> (and x3721 (and (= x1755 true) (= x4747 false))) x8283) (=> (and (and (= x4711 x8394) (= x5945 x7534) (= x3243 x4848) (= x145 x5336) (= x3255 x6003) (= x4737 x3604) (= x2078 x2332) (= x1900 x4417) (= x8009 x4670) (= x4201 x7627) (= x6940 x225) (= x3020 x484) (= x8449 1) (= x2371 x1458)) (not x3721)) x2156))) (=> (and (not x3343) (and (= x1806 true) (= x5419 false))) x8283))) (=> (and (and (<= 1 x7627) (>= 127 x650) (= true x3690) (= x2882 x3611) (>= 127 x650) (= x7236 false) (>= 1461501637330902918203684832716283019655932542975 x7627) (= 1341992515 x8113) (= x7627 x8301) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x1723) (= x7273 (x6458 x8301)) (= x1693 false) (= x2744 36) (>= x7273 1)) (not x1395)) (and (=> (and (and (= x3828 x3255) (= x7534 x352) (= 0 x7153) (= x2609 x225) (= x4848 x6337) (= x6601 true) (= x3020 x2600) (= x2796 x145) (= x6299 x4670) (= x4737 x3356) (= x7129 2) (= x8394 x6883) (= x2371 x8310) (= x6878 x1900) (= false x3537) (= x7627 x8181) (= x2078 x4510)) (not x3690)) x4830) (=> (and x3690 (= (= x4737 x3611) x6307)) (and (=> (and (and (<= x4670 255) (= x2619 (= 255 x4670))) x6307) (and (=> (and x2619 (and (= x6337 x4848) (= x7153 0) (= x2078 x4510) (= x225 x2609) (= 2 x1363) (= x145 x2796) (= x8181 x7627) (= x352 x7534) (= x1900 x6878) (= true x1144) (= x3020 x2600) (= false x7161) (= x3255 x3828) (= x2371 x8310) (= x4737 x3356) (= x6883 x8394) (= x6299 x4670))) x4830) (=> (and (not x2619) (and (= (= x5860 0) x6404) (= x461 (x8371 64 x4670 36)) (= x4856 (+ 1 x4670)) (= x2510 (x4375 255 x4856)) (= x603 (x4375 255 x4856)) (= (x120 x461) x5860))) (and (=> (and (not x6404) (= (= 1 x5860) x8472)) (and (=> (and (= x5645 (= x603 255)) x8472) (and (=> (and (not x5645) (and (= (x8371 64 x603 6) x6397) (= (+ 1 x603) x4087) (= x2957 (x175 x6397)) (= x7062 (= 255 x5924)) (>= 65535 x2957) (= x5128 (x4375 255 x4087)) (= (x4375 255 x4087) x5924))) (and (=> x7062 x2300) (=> (and (not x7062) (and (= (x4628 x225 2) x2010) (= x8063 (x4375 255 x4131)) (= x1236 (x8448 (- x4410 (mod (ite (< x4170 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (+ x5924 1) x4131) (= (x8371 64 x5924 12) x967) (= x4410 (x4375 1 x225)) (= (ite (< 0 x4410) x2010 (x4375 127 x2010)) x4170) (= (x1923 x967) x158) (>= 18446744073709551615 x158) (= x4218 (< 0 x1236)) (= (x4375 255 x4131) x1129))) (and (=> (and x4218 (and (= x2933 (x4375 1 x225)) (= (= 0 x2933) x614))) (and (=> (and x614 (and (= (+ x7087 292) x7047) (or (= 32 x7087) (= x7087 0)) (= x5592 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x225)) (= x7087 (* (ite (not (= x4170 0)) 1 0) 32)))) x5961) (=> (and (and (or (and x1364 (and (>= 32 x4170) (= (x4704 x7918) x5636) (= x883 32))) (and (= x883 0) (not x1364))) (and (= x7918 (x1874 32 103)) (= (< 0 x4170) x1364))) (not x614)) x7972))) (=> (not x4218) x6607))))) (=> x5645 x1600))) (=> (and (not x8472) (= x4526 (= 2 x5860))) (and (=> (and x4526 (= (= 255 x603) x2268)) (and (=> (and (not x2268) (and (= x2727 (= x7708 255)) (= (+ x603 1) x6131) (= (x175 x8241) x2342) (>= 65535 x2342) (= (x4375 255 x6131) x7708) (= x8241 (x8371 64 x603 6)) (= x3414 (x4375 255 x6131)))) (and (=> x2727 x2300) (=> (and (not x2727) (and (= x8078 (x4375 255 x5627)) (<= x8285 18446744073709551615) (= x8285 (x1923 x729)) (= (x4628 x225 2) x6166) (= (< 0 x2344) x7308) (= (x4375 1 x225) x3965) (= (x8371 64 x7708 12) x729) (= (x4375 255 x5627) x3952) (= (ite (> x3965 0) x6166 (x4375 127 x6166)) x6155) (= x2344 (x8448 (- x3965 (mod (ite (> 32 x6155) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (+ 1 x7708) x5627))) (and (=> (not x7308) x6607) (=> (and (and (= x3074 (= x3563 0)) (= (x4375 1 x225) x3563)) x7308) (and (=> (and (and (and (= x3835 (> x6155 0)) (= x5400 (x1874 32 103))) (or (and (and (<= x6155 32) (= (x4704 x5400) x7348) (= 32 x4504)) x3835) (and (not x3835) (= x4504 0)))) (not x3074)) x3461) (=> (and x3074 (and (= x2011 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x225)) (= x1676 (* (ite (not (= x6155 0)) 1 0) 32)) (= (+ 292 x1676) x1021) (or (= x1676 32) (= 0 x1676)))) x3067))))))) (=> x2268 x1600))) (=> (and (= x3442 (= x5860 3)) (not x4526)) (and (=> (and (= x6587 (= x5860 4)) (not x3442)) (and (=> (and (= x5746 (= 5 x5860)) (not x6587)) (and (=> (and (= (= 255 x603) x401) x5746) (and (=> (and (and (= (x120 x1252) x2198) (= (x4375 255 x3137) x4056) (= (x8371 64 x603 36) x1252) (= (= 255 x5879) x24) (= (x4375 255 x3137) x5879) (= x3137 (+ x603 1))) (not x401)) (and (=> (and (and (= x4119 (x8371 64 x5879 6)) (= (x4375 255 x7432) x3084) (= (x4375 255 x7432) x6524) (= (= 255 x6524) x2445) (= x7753 (x175 x4119)) (>= 65535 x7753) (= x7432 (+ x5879 1))) (not x24)) (and (=> (and (and (= x7172 (< 0 x6387)) (= x8307 (x4375 1 x225)) (= (x4375 255 x2918) x3837) (<= x6632 18446744073709551615) (= x2918 (+ 1 x6524)) (= x2629 (x4628 x225 2)) (= x6918 (x8371 64 x6524 12)) (= x4713 (x4375 255 x2918)) (= x649 (ite (> x8307 0) x2629 (x4375 127 x2629))) (= x6387 (x8448 (- x8307 (mod (ite (< x649 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x6632 (x1923 x6918))) (not x2445)) (and (=> (and x7172 (and (= (x4375 1 x225) x5650) (= x8584 (= 0 x5650)))) (and (=> (and (and (or (and (not x1424) (= x5194 0)) (and (and (= x5194 32) (= x1991 (x4704 x1871)) (>= 32 x649)) x1424)) (and (= x1424 (< 0 x649)) (= x1871 (x1874 32 103)))) (not x8584)) x5478) (=> (and (and (or (= x1773 32) (= 0 x1773)) (= (* (ite (not (= 0 x649)) 1 0) 32) x1773) (= x7916 (+ 292 x1773)) (= x6035 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x225))) x8584) x3614))) (=> (not x7172) x288))) (=> x2445 x163))) (=> x24 x5668))) (=> x401 x1600))) (=> (and (not x5746) (= (= x5860 6) x3315)) (and (=> (and (= x3556 (= 7 x5860)) (not x3315)) (and (=> (and (= x2863 (= 255 x603)) x3556) (and (=> x2863 x1600) (=> (and (not x2863) (and (= (x8371 64 x603 2) x1628) (= x8208 (= 0 x6353)) (= (x4375 255 x8543) x8071) (= (x4375 255 x8543) x8539) (= (x8560 x1628) x8305) (>= 1461501637330902918203684832716283019655932542975 x8305) (= x1296 128) (= x6353 (x6458 x4737)) (= x8543 (+ x603 1)))) (and (=> (and x8208 (and (= false x1385) (= x6878 x1900) (= x8394 x6883) (= x4670 x6299) (= x7627 x8181) (= x225 x2609) (= x4737 x3356) (= x2078 x4510) (= x8335 true) (= x2796 x145) (= x3255 x3828) (= x2600 x3020) (= x2371 x8310) (= x828 2) (= x352 x7534) (= x4848 x6337) (= x7153 0))) x4830) (=> (and (not x8208) (and (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x982) (>= 1461501637330902918203684832716283019655932542975 x1900) (= false x1604) (<= x1336 127) (= 2770781680 x6462) (= (= x1900 x8301) x2013) (= x6797 36) (= x2581 false) (>= 127 x1336) (= x8305 x5185) (<= 1 x4566) (= (x6458 x3611) x4566))) (and (=> (and (not x2013) (and (= true x7054) (= 100 x1957) (= x7621 false))) x3821) (=> (and x2013 (and (= (> x7291 0) x966) (= x7291 (x7782 x3611)))) (and (=> (and x966 (and (= x469 (and x3787 x3596)) (= (x7782 x3611) x1404) (= (x7782 x8305) x8067) (= (< (+ x8067 x7291) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3596) (= x3155 128) (= x3787 (<= x7291 x1404)))) (and (=> (and (and (= x7896 0) (= x8590 x4848) (= x7534 x3980) (= x8202 x4737) (= x6735 0) (= x5505 x225) (= x4562 x8539) (= x1552 x145)) (not x469)) x4665) (=> (and (and (and (<= 0 x6508) (= (x7782 x3611) x4113) (= x1831 (x2852 x8305)) (<= x6508 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7301 (< 0 x2928)) (= x6508 (+ x1831 x7291)) (= (- x4113 x7291) x7871) (= x5090 x6508) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1831 x7291))) (or (and (and (= x7037 x7883) (>= 4294967295 x2311) x5661 (= (x7008 x8305) x3092) (= x1849 x3279) (= x5089 x3455) (= x5763 (x7008 x3611)) (= x365 (>= (x2811 x3611) x5763)) x365 (= x8029 x8403) (= x298 x4969) (= (= (x2811 x8305) x3092) x5661) (= x3173 x4594)) x7301) (and (not x7301) (and (= x4737 x8029) (= x145 x3455) (= x3173 x8539) (= x225 x7037) (= x7534 x1849) (= x4969 x4848))))) x469) x646))) (=> (and (not x966) (and (= x4346 x225) (= x6395 x4737) (= x2953 x145) (= x4673 x4848) (= x2715 x7534) (= x8539 x8139))) x4058))))))))) (=> (and (= (= x5860 8) x8411) (not x3556)) (and (=> (and (and (= x2371 x627) (= x7627 x2366) (= x412 x603) (= x3071 x7534) (= x2078 x1656) (= x8394 x105) (= x7979 x4737) (= x4848 x3606) (= x7351 x3020) (= x2191 x1900) (= x145 x6670) (= x5218 x3255) (= x3694 x225)) (not x8411)) x5085) (=> (and x8411 (= x3175 (= x603 255))) (and (=> (and (not x3175) (and (= x3425 (x6458 x4737)) (= (x4375 255 x6624) x7424) (= (x4375 255 x6624) x5233) (= x7737 (x120 x7478)) (= x6350 128) (= (+ 1 x603) x6624) (= x7478 (x8371 64 x603 36)) (= (= 0 x3425) x727))) (and (=> (and (and (= x6299 x4670) (= x145 x2796) (= x4510 x2078) (= x3255 x3828) (= x8394 x6883) (= x352 x7534) (= x7153 0) (= x8310 x2371) (= x1133 false) (= x2609 x225) (= x7627 x8181) (= x3165 true) (= x6878 x1900) (= 2 x2153) (= x4737 x3356) (= x2600 x3020) (= x6337 x4848)) x727) x4830) (=> (and (not x727) (and (= (x6458 x3611) x3655) (= (= x8301 x1900) x5558) (<= x1432 127) (<= 1 x3655) (= x3033 x7737) (<= x1432 127) (>= 1461501637330902918203684832716283019655932542975 x1900) (= 1313998243 x4482) (= false x7267) (= x1597 36) (= false x5255) (= x946 35425322552009646506518338594398286811668114190755561836384294568426616127488))) (and (=> (and (and (= x4534 100) (= x1134 false) (= true x2844)) (not x5558)) x1817) (=> (and (= (> 100000 x7737) x545) x5558) (and (=> (and x545 (and (= false x124) (= x4717 true) (= x4534 4))) x1817) (=> (and (not x545) (and (= x3255 x6991) (= x145 x4290) (= x4137 x4848) (= x4757 0) (= x4737 x2795) (= x225 x3471) (= x1900 x5289) (= x7627 x1380) (= 1 x3489) (= x6226 x947) (= x8394 x4243) (= x3743 x3020) (= x7424 x2339) (= x2078 x8526) (= x5498 x7534) (= x6226 (x120 x7478)))) x3330))))))) (=> x3175 x1600))))))) (=> (and (= x7697 (= 255 x603)) x3315) (and (=> x7697 x1600) (=> (and (and (= x6110 (x4375 255 x5598)) (= x5904 (x4375 255 x5598)) (= (+ x603 1) x5598) (= (x120 x984) x2652) (= x954 (= x5904 255)) (= x984 (x8371 64 x603 36))) (not x7697)) (and (=> (and (and (= (x120 x6154) x1859) (= x1248 (x4375 255 x400)) (= (+ x5904 1) x400) (= (x4375 255 x400) x7825) (= x6154 (x8371 64 x5904 36)) (= (= x7825 255) x5020)) (not x954)) (and (=> x5020 x2300) (=> (and (and (= (+ 1 x7825) x3584) (= (x4375 255 x3584) x5581) (= x7441 (= x5581 255)) (= x786 (x4375 255 x3584)) (= x7339 (x8371 64 x7825 36)) (= (x120 x7339) x4368)) (not x5020)) (and (=> x7441 x163) (=> (and (and (= (x4375 255 x363) x6806) (= (x120 x8015) x4118) (= (x4375 255 x363) x3698) (= x363 (+ 1 x5581)) (= x6230 (= x3522 0)) (= x41 128) (= (x8371 64 x5581 36) x8015) (= x3522 (x6458 x4737))) (not x7441)) (and (=> (and (and (= x2609 x225) (= x3255 x3828) (= x6878 x1900) (= x145 x2796) (= x6337 x4848) (= x7153 0) (= false x7935) (= x4510 x2078) (= x4839 2) (= x8394 x6883) (= x7534 x352) (= x4737 x3356) (= x3020 x2600) (= x6299 x4670) (= x8310 x2371) (= x7627 x8181) (= true x6034)) x6230) x4830) (=> (and (and (= x594 (and x855 x5840)) (= (>= x6438 x2652) x5840) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2652 x8266)) x855) (= (x7782 x4737) x8266) (= (x7782 x8301) x6438)) (not x6230)) (and (=> (and (and (or (and (not x4391) (= x5155 (ite x4391 1 0))) (and (and (>= 1461501637330902918203684832716283019655932542975 x1900) (= x5155 (ite (not (= x8301 x1900)) 1 0))) x4391)) (and (<= 1 x5998) (= (x7782 x8301) x6887) (= (- x6887 x2652) x8090) (<= x1638 127) (= x6615 100) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x6533) (= x1797 x7543) (= x4368 x2201) (= false x184) (>= 127 x1638) (= (x5779 x4737) x3579) (= x6069 x1714) (= x4391 (not (= x3611 x8301))) (= x5058 x1601) (<= 0 x1714) (= x4627 486791245) (= x2201 x70) (= x4118 x1601) (= x1859 x1797) (= x1714 (+ x2652 x3579)) (< (+ x2652 x3579) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x5998 (x6458 x3611)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1714) (= false x2333))) x594) x6098) (=> (and (and (= x7248 x3255) (= 0 x71) (= x4795 x2078) (= x4848 x4309) (= x1208 x2371) (= x1283 x1900) (= x3032 x3698) (= x8394 x5514) (= x680 x4737) (= x4520 x7627) (= 0 x396) (= x145 x1581) (= x7534 x899) (= x3020 x258) (= x4461 x225)) (not x594)) x8414))))))))) (=> x954 x5668))))))))) (=> (and (= x2274 (= x603 255)) x6587) (and (=> x2274 x1600) (=> (and (and (= x4802 (+ 1 x603)) (= (= x4807 255) x1212) (= x4807 (x4375 255 x4802)) (= x115 (x120 x924)) (= x924 (x8371 64 x603 36)) (= x2385 (x4375 255 x4802))) (not x2274)) (and (=> x1212 x5668) (=> (and (and (= x6013 (= 255 x77)) (= x4528 (x3683 x8438)) (= (+ 1 x4807) x4094) (= (x4375 255 x4094) x4586) (= x77 (x4375 255 x4094)) (= (x8371 64 x4807 100) x8438)) (not x1212)) (and (=> (and (not x6013) (and (= x352 x7534) (= x6888 (x4375 255 x1529)) (= x4737 x3356) (= x2796 x145) (= (x7782 x4737) x2348) (not (and x6844 x1101)) (= x1529 (+ 1 x77)) (= x7153 0) (= x8394 x6883) (= (x4375 255 x1529) x893) (= x225 x2609) (= (x120 x8365) x5330) (= true x4929) (= (<= x115 x3098) x6844) (= x2371 x8310) (= x8365 (x8371 64 x77 36)) (= x4510 x2078) (= x2600 x3020) (= x1900 x6878) (= x6299 x4670) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2348 x115)) x1101) (= false x154) (= x4848 x6337) (= x3828 x3255) (= x8181 x7627) (= (x7782 x8301) x3098) (= 2 x1327))) x4830) (=> x6013 x2300))))))))) (=> (and x3442 (= x4970 (= 255 x603))) (and (=> x4970 x1600) (=> (and (and (= (x4375 255 x2291) x6924) (= x5290 (= x7772 255)) (= (+ x603 1) x2291) (= (x4375 255 x2291) x7772) (= x5113 (x120 x1760)) (= x1760 (x8371 64 x603 36))) (not x4970)) (and (=> x5290 x5668) (=> (and (not x5290) (and (= (x8371 64 x7772 100) x7638) (= x8263 (x4375 255 x3170)) (= (x3683 x7638) x5201) (= (x4375 255 x3170) x5296) (= x5824 (= 0 x7001)) (= x7001 (x6458 x4737)) (= 128 x376) (= x3170 (+ x7772 1)))) (and (=> (and (and (= x5113 x5564) (= x676 x5564) (= (= x8301 x7627) x4877) (<= 1 x6425) (= x6425 (x6458 x3611)) (>= 127 x7128) (= 68 x2847) (= x6558 false) (= false x5670) (= x8016 3957931183) (>= 127 x7128) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x724) (= x5201 x7)) (not x5824)) (and (=> (and (and (= x2441 false) (= true x2801) (= x3284 4)) (not x4877)) x3299) (=> (and x4877 (and (= x3755 (< 3 x4208)) (<= x4208 255) (= x3135 (x8371 64 x5113 11)) (= (x2968 x3135) x4208))) (and (=> (and (= x3660 (= x4208 1)) (not x3755)) (and (=> (and (not x3660) (and (= 4 x3284) (= x6845 false) (= true x8136))) x3299) (=> (and (and (= x6228 (x6458 x3611)) (= (= x6228 0) x7674) (= x5056 (x8371 64 x5113 11)) (= x7612 128) (= x833 (x8371 64 x5113 11)) (= (+ x5056 2) x2184)) x3660) (and (=> (and x7674 (and (= true x8382) (= 0 x3284) (= false x3535))) x3299) (=> (and (not x7674) (and (and (= x3706 x3516) (= x2631 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= 100 x1414) (= x3706 x676) (= 0 x6263) (= (x6458 x3611) x6899) (= x2359 486791245) (= false x1644) (= x6312 false) (= x292 0) (= 0 x4927) (= x1751 0) (>= x6899 1) (>= 127 x4480) (= false x1372) (<= x4480 127)) (or (and x1644 (and (<= x1900 1461501637330902918203684832716283019655932542975) (= (ite (not (= x1900 x3611)) 1 0) x1741))) (and (not x1644) (= x1741 (ite x1644 1 0)))))) x1982))))) (=> (and (and (= 36 x3284) (= x6828 true) (= x4952 false)) x3755) x3299))))) (=> (and x5824 (and (= x4848 x6337) (= x2609 x225) (= x2796 x145) (= x2600 x3020) (= x2371 x8310) (= x3356 x4737) (= x4670 x6299) (= x4071 true) (= x3255 x3828) (= x4644 false) (= x6878 x1900) (= x2078 x4510) (= x7153 0) (= x6883 x8394) (= x7534 x352) (= x266 2) (= x7627 x8181))) x4830))))))))))))) (=> (and x6404 (= (= 255 x603) x2566)) (and (=> (and (not x2566) (and (= (= 255 x1862) x1720) (= (x4375 255 x8047) x1862) (= x8047 (+ 1 x603)) (= (x4375 255 x8047) x2058) (= (x8560 x5156) x4088) (= (x8371 64 x603 2) x5156) (<= x4088 1461501637330902918203684832716283019655932542975))) (and (=> (and (not x1720) (and (= (x175 x5557) x2460) (= x1088 (+ 1 x1862)) (= (x4375 255 x1088) x5520) (>= 65535 x2460) (= x5557 (x8371 64 x1862 6)) (= (x4375 255 x1088) x6604) (= x3152 (= 255 x6604)))) (and (=> x3152 x2300) (=> (and (not x3152) (and (<= x6626 1461501637330902918203684832716283019655932542975) (= (+ 1 x6604) x4624) (= x558 (x8371 64 x6604 2)) (= x4622 (= x1624 255)) (= x2924 (x4375 255 x4624)) (= x1624 (x4375 255 x4624)) (= x6626 (x8560 x558)))) (and (=> (and (and (= x5833 (x4375 255 x6423)) (= 128 x5354) (= x7846 (x8371 64 x1624 36)) (= (+ 1 x1624) x6423) (= x6163 (= 0 x1074)) (= (x4375 255 x6423) x8107) (= x1074 (x6458 x4737)) (= x6211 (x120 x7846))) (not x4622)) (and (=> (and x6163 (and (= x6878 x1900) (= x2796 x145) (= x3255 x3828) (= x2609 x225) (= x3020 x2600) (= x6349 false) (= x2078 x4510) (= x6169 2) (= x7627 x8181) (= x7153 0) (= x539 true) (= x4670 x6299) (= x352 x7534) (= x2371 x8310) (= x6337 x4848) (= x6883 x8394) (= x3356 x4737))) x4830) (=> (and (not x6163) (and (>= x139 1) (= x3283 3812630263) (= x4088 x5679) (= x139 (x6458 x3611)) (= x5216 102788308552044517260959567728648622381392053106279845986800620074717893623808) (= x4631 (= x8301 x1900)) (= x2460 x3776) (= x6174 132) (<= x3978 127) (= x8128 false) (>= 1461501637330902918203684832716283019655932542975 x1900) (= x6211 x5701) (= false x5023) (>= 127 x3978) (= x4667 x6626))) (and (=> (and (not x4631) (and (= x7606 true) (= 100 x4817) (= x317 false))) x459) (=> (and (= (< x6211 100000) x2990) x4631) (and (=> (and (not x2990) (and (= x6238 x2711) (= x4253 x5833) (= 0 x5692) (= x8060 (x120 x7846)) (= x67 x3020) (= x2078 x3469) (= x145 x500) (= x5486 x225) (= x1220 (x8560 x558)) (= x2711 (x8560 x5156)) (= x5930 1) (= x4848 x4614) (= x2399 x1900) (= x2195 x8060) (= x5832 x7534) (= x1662 x6731) (= (x175 x5557) x1662) (= x1220 x4355) (= x5848 x4737))) x94) (=> (and x2990 (and (= x3362 false) (= 4 x4817) (= true x1625))) x459))))))) (=> x4622 x163))))) (=> x1720 x5668))) (=> x2566 x1600))))))) (=> (and (and (= x2078 x4510) (= x535 false) (= x145 x2796) (= x4670 x6299) (= x2609 x225) (= x7627 x8181) (= x141 true) (= x3255 x3828) (= x6337 x4848) (= x6883 x8394) (= x6878 x1900) (= x7153 0) (= x352 x7534) (= x3356 x4737) (= x2371 x8310) (= x1100 2) (= x3020 x2600)) (not x6307)) x4830))))))) (=> (and (not x2573) (and (= x3255 x8175) (= x8394 x1875) (= x7627 x6490) (= x873 x3020) (= x1912 x4848) (= x1900 x6782) (= x7534 x1130) (= x2078 x3331) (= x7479 x225) (= x565 0) (= x6833 x4670) (= x145 x7473) (= x4737 x2738) (= x2371 x3308))) x3149))) (=> (and (and (= x8177 x4848) (= x7627 x1941) (= x2371 x4228)) x3427) x3222))) x5680))
(assert (x6021 x1363))
(assert (x7457 x5065))
(assert (x2626 (ite (not (= 0 x4248)) 1 0)))
(assert (x6290 x1088))
(assert (= (x864 (x8371 x2495 x911 x634)) x2495))
(assert (x6021 x1842))
(assert (x6021 x5881))
(assert (= x4823 (and x7565 x4075)))
(assert (x6021 x3110))
(assert (=> (>= 10000 x7772) (= 0 (x8569 x7772))))
(assert (not (x3961 (x6067 x7786 x8366 x1548 x3194 x4478))))
(assert (x6021 x4673))
(assert (= (x569 (x4863 x128 x4320 x1602 x6915 x2789 x4998)) x1602))
(assert (x6021 x5930))
(assert (x6021 x3791))
(assert (= x589 (x4378 (x4463 x62 x589 x6754 x6216))))
(assert (x6021 x7366))
(assert (x6021 x6910))
(assert (= x1809 (and x3697 x4625)))
(assert (x2662 x2605 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2186 x6769))
(assert (x6021 x3501))
(assert (x6021 x3653))
(assert (=> (>= 10000 x6208) (= 0 (x8569 x6208))))
(assert (x6021 x6308))
(assert (x3961 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (= x5107 (x864 (x6067 x5107 x652 x8297 x5470 x2440))))
(assert (x6021 x1875))
(assert (x3961 1722637450))
(assert (=> (>= 10000 x3545) (= 0 (x8569 x3545))))
(assert (x6021 x7687))
(assert (x6021 x2468))
(assert (=> (>= 10000 x6801) (= 0 (x8569 x6801))))
(assert (x6021 x3668))
(assert (x1635 32 x5382))
(assert (= (and x2273 x7506) x2946))
(assert (x6021 x213))
(assert (= x6375 (and x457 x8252)))
(assert (= x2579 (x4378 (x8371 x7786 x2579 x6442))))
(assert (x6021 x5054))
(assert (= x3763 (x4378 (x1874 x1891 x3763))))
(assert (=> (<= x4342 10000) (= (x8569 x4342) 0)))
(assert (= x7786 (x864 (x4463 x7786 x2374 x5271 x5708))))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x6021 x2659))
(assert (x6021 x1813))
(assert (x6021 x3359))
(assert (x6021 x5856))
(assert (= x2480 (and x3533 (not x6126))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x81 x2653 x217 x3582)))
(assert (x6021 x1224))
(assert (x6021 x1188))
(assert (= (and x1431 x5097) x2606))
(assert (< 10000 (x1874 x1409 x6621)))
(assert (= (and x5521 x4658) x2290))
(assert (x7457 x1265))
(assert (x6021 x2960))
(assert (x7457 x4131))
(assert (= x5508 (x986 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801))))
(assert (x6021 x2344))
(assert (x6021 x1776))
(assert (= (or x4899 x8282) x4563))
(assert (= x2913 (=> (and (= x5033 x408) (= x47 x7895) (= x5425 x8437) (= x4649 x5939)) x164)))
(assert (x6021 x1298))
(assert (= (and (not x3626) x6487) x7586))
(assert (= (x4378 (x1874 x6134 x6756)) x6756))
(assert (= x3891 (x2668 (x4863 x6134 x8381 x8081 x3450 x3891 x7263))))
(assert (x6021 x7715))
(assert (= x4748 (or x339 x7488)))
(assert (x6021 x6155))
(assert (x6021 x7041))
(assert (x6021 x4307))
(assert (x6021 x4943))
(assert (x6021 x7262))
(assert (x6021 x1601))
(assert (x2186 x2918))
(assert (x6021 x6811))
(assert (x6021 x7725))
(assert (x6021 x300))
(assert (x6021 x1481))
(assert (x6021 x7468))
(assert (x6021 x2868))
(assert (=> (<= x2957 10000) (= 0 (x8569 x2957))))
(assert (x6021 x868))
(assert (= x6539 (=> (and (= 0 x5917) (= true x7681) (= x8484 false)) x5736)))
(assert (=> (>= 10000 x6304) (= 0 (x8569 x6304))))
(assert (x6021 x2800))
(assert (not (x3961 (x6067 x5303 x8144 x4874 x6943 x3508))))
(assert (x6021 x5656))
(assert (= (x8569 1914215) 0))
(assert (x2186 x7479))
(assert (x6021 x3187))
(assert (x6021 x7115))
(assert (x6021 x2176))
(assert (x6021 x2748))
(assert (x2186 x7025))
(assert (x6021 x1607))
(assert (= (and (not x1052) x5766) x8106))
(assert (=> (<= x1919 10000) (= 0 (x8569 x1919))))
(assert (x6021 x2870))
(assert (x2662 x7430 32))
(assert (= (and x777 (not x7698)) x5821))
(assert (x6021 x1027))
(assert (x6021 x2588))
(assert (x6021 x2545))
(assert (x6021 x3701))
(assert (= (x864 (x4863 x1911 x1243 x4709 x2434 x4409 x2534)) x1911))
(assert (x6021 x7596))
(assert (x6021 x4703))
(assert (> (x4863 x2495 x250 x7219 x6882 x1933 x4430) 10000))
(assert (= (or x7364 x3106) x2200))
(assert (x6021 x4441))
(assert (x1635 1000000000 x618))
(assert (=> (>= 10000 x6947) (= 0 (x8569 x6947))))
(assert (< 10000 (x6067 x7786 x8366 x1548 x3194 x4478)))
(assert (x6021 x7959))
(assert (= x1883 (x864 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704))))
(assert (x6021 x8246))
(assert (= (x8569 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230)) (x3105 x2495 x1632 x917 x848 x6330 x1780 x230)))
(assert (= (and x639 x5869) x968))
(assert (= x8422 (x2668 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999))))
(assert (x2186 x2676))
(assert (< (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x8324))
(assert (x6021 x1935))
(assert (= x5279 (and x4782 x5151)))
(assert (x6021 x7630))
(assert (= (x569 (x8371 64 x8175 5)) 5))
(assert (= x2735 (x2668 (x6067 x1891 x4148 x3347 x3693 x2735))))
(assert (x6021 x3226))
(assert (x6021 x320))
(assert (= x13 (or x5819 x3484)))
(assert (x6021 x157))
(assert (x6021 x2652))
(assert (x6021 x2383))
(assert (x6021 x4670))
(assert (= (and (not x4506) x1319) x5934))
(assert (x6021 x7273))
(assert (x2186 x4802))
(assert (x6021 x6819))
(assert (= x5379 (x4378 (x4863 x636 x5379 x256 x5272 x4150 x8142))))
(assert (x6021 x2440))
(assert (x6021 x7632))
(assert (= (and x2769 (not x4754)) x6488))
(assert (= x7072 (x2668 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736))))
(assert (= x2989 x2834))
(assert (x6021 x6242))
(assert (x6021 x6446))
(assert (= x1068 (x4378 (x1874 32 x1068))))
(assert (= (and x8057 (not x4774)) x3849))
(assert (x6021 x7769))
(assert (x6021 x8100))
(assert (x6021 x4248))
(assert (x6021 x3662))
(assert (x6021 x1590))
(assert (x6021 x2052))
(assert (= x5581 (x4378 (x8371 64 x5581 36))))
(assert (x6021 x6343))
(assert (> (x6067 x3841 x2108 x7282 x1323 x3666) 10000))
(assert (x6021 x5669))
(assert (= (x8569 (x8371 64 x3611 2)) (x8371 64 x3611 2)))
(assert (= x6796 (and (not x7090) x6730)))
(assert (= x5064 (and x7757 x7108)))
(assert (x6021 x5024))
(assert (> (x8371 64 x2008 (ite (<= x1891 32) x6104 (ite (<= x1891 64) x2684 (ite (<= x1891 96) x7540 (ite (<= x1891 128) x7449 (ite (>= 160 x1891) x5213 (ite (<= x1891 192) x5567 x6398))))))) 10000))
(assert (x6021 x1297))
(assert (= (x2668 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850)) x811))
(assert (x2186 x1529))
(assert (= 3 (x569 (x8371 64 x7391 3))))
(assert (x2626 x618))
(assert (x6021 x4159))
(assert (= x1087 (x1880 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087))))
(assert (= (x8569 51607134309459761954548520284799282329936326410793501951915747293203005440) 0))
(assert (=> (<= x7756 10000) (= 0 (x8569 x7756))))
(assert (x6021 x7612))
(assert (= x4619 (and x5868 x444)))
(assert (x6021 x3708))
(assert (=> (<= x960 10000) (= (x8569 x960) 0)))
(assert (x6021 x5599))
(assert (x6021 x281))
(assert (x6021 x6315))
(assert (x6021 x5080))
(assert (x6021 x3731))
(assert (x6021 x111))
(assert (= x2751 (and x779 x2573)))
(assert (= true x8567))
(assert (x6021 x6496))
(assert (x6021 x2650))
(assert (= (or x3840 x2955) x5885))
(assert (= x2878 (x4408 (x6067 x1911 x3544 x5997 x2878 x5969))))
(assert (x3961 3521034783))
(assert (x6021 x2907))
(assert (= (or x4231 x5533) x4464))
(assert (x1960 x4194))
(assert (= x6858 (x569 (x6067 x8390 x6994 x6858 x6332 x8121))))
(assert (= x4244 (x4408 (x6067 x636 x620 x7121 x4244 x4630))))
(assert (= (and (not x5004) x435) x5340))
(assert (x6021 x3282))
(assert (x6021 x5549))
(assert (= 64 (x864 (x8371 64 x2046 12))))
(assert (x2626 x5892))
(assert (= (x569 (x8371 x6134 x2428 x8056)) x8056))
(assert (x6021 x1989))
(assert (x6021 x8084))
(assert (x6021 x1955))
(assert (x7457 x7917))
(assert (x6021 x7532))
(assert (x2186 x5627))
(assert (x6021 x4149))
(assert (x2186 x3030))
(assert (x6021 x6938))
(assert (= 12 (x569 (x8371 64 x6524 12))))
(assert (x6021 x7424))
(assert (x6021 x6175))
(assert (x6021 x992))
(assert (=> (<= x7121 10000) (= 0 (x8569 x7121))))
(assert (x3961 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (x7582 (+ 31 x5430)))
(assert (= (x569 (x8371 64 x8175 4)) 4))
(assert (x6021 x3411))
(assert (< 10000 (x1874 x7741 x6688)))
(assert (= x8295 (x864 (x4463 x8295 x8358 x6466 x2877))))
(assert (x6021 x1254))
(assert (=> (<= x2748 10000) (= 0 (x8569 x2748))))
(assert (x3961 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (= (x1874 32 x3746) (x8569 (x1874 32 x3746))))
(assert (=> (>= 10000 x690) (= (x8569 x690) 0)))
(assert (x6290 x4906))
(assert (= (x4378 (x4863 x1911 x1243 x4709 x2434 x4409 x2534)) x1243))
(assert (=> (>= 10000 x2938) (= (x8569 x2938) 0)))
(assert (x6021 x6877))
(assert (x6021 x5626))
(assert (= x2251 (and x6298 (not x4233))))
(assert (x6021 x2190))
(assert (= (and x3849 (not x8557)) x1660))
(assert (x6021 x6782))
(assert (=> (<= x3607 10000) (= 0 (x8569 x3607))))
(assert (> (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821) 10000))
(assert (x6021 x3403))
(assert (x2662 x4601 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x5269 x3536))
(assert (= (x569 (x8371 64 1 x3946)) x3946))
(assert (x6021 x5194))
(assert (x6021 x8316))
(assert (= (and x3912 x7783) x2973))
(assert (x6021 x8384))
(assert (x6021 x5895))
(assert (x6021 x2559))
(assert (= x6134 (x864 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409))))
(assert (> (x1874 x636 x5609) 10000))
(assert (< (x8371 64 1 x3758) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x1161))
(assert (x6021 x655))
(assert (x6021 x1476))
(assert (=> (<= x8111 10000) (= 0 (x8569 x8111))))
(assert (x1635 32 x1631))
(assert (= x8352 (and x5167 x6540)))
(assert (x6021 x8167))
(assert (x6021 x2400))
(assert (x6021 x6395))
(assert (x6021 x1105))
(assert (x6021 x1723))
(assert (x6021 x769))
(assert (= (x8569 (x4463 x3841 x6391 x1309 x7330)) (x4463 x3841 x6391 x1309 x7330)))
(assert (= (x4378 (x4863 x1919 x11 x2518 x4145 x4321 x8086)) x11))
(assert (x6021 x2070))
(assert (x6021 x4676))
(assert (=> (>= 10000 x876) (= (x8569 x876) 0)))
(assert (x6021 x949))
(assert (x6021 x6279))
(assert (x6021 x4803))
(assert (=> (>= 10000 x81) (= (x8569 x81) 0)))
(assert (= (x986 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068)) x7659))
(assert (x7582 x8471))
(assert (x6021 x4428))
(assert (x6021 x6726))
(assert (= x3772 (and x2286 x2015)))
(assert (x6021 x2001))
(assert (x6021 x5044))
(assert (x6021 x1869))
(assert (x6021 x1903))
(assert (=> (>= 10000 x8358) (= (x8569 x8358) 0)))
(assert (x6021 x5242))
(assert (= (x864 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736)) x1891))
(assert (= (and (not x2577) x2202) x3688))
(assert (x6021 x4806))
(assert (x6021 x536))
(assert (x6021 x582))
(assert (< (x8371 64 x6833 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x979) (= (x8569 x979) 0)))
(assert (= 0 (x8569 35425322552009646506518338594398286811668114190755561836384294568426616127488)))
(assert (= x3341 (=> (= (= x3557 0) x1709) (and (=> (and (and (= x5049 false) (= x6122 true) (= x6930 x265)) x1709) x5280) (=> (and (= (> 64 x265) x6032) (not x1709)) (and (=> (and (not x6032) (and (= x5016 x4415) (= x2035 x136) (= x3397 x3495) (= x2690 x7996) (= x2651 x7689) (= x8564 x5359) (= x1800 x7257) (= x5606 x7071) (= x1300 x7382) (= x3799 x107) (= 354 x5888) (= x3648 x1365) (= x2271 x690) (= x5381 x7333) (= x2151 x3436) (= x2232 (x3773 322)) (= (x3773 290) x5381))) x3585) (=> (and (and (= 0 x6930) (= true x7269) (= false x3322)) x6032) x5280)))))))
(assert (= (and x7705 (not x7078)) x7133))
(assert (not (x3961 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821))))
(assert (x6021 x5113))
(assert (= (x4463 x7741 x4301 x1145 x5328) (x8569 (x4463 x7741 x4301 x1145 x5328))))
(assert (= (x864 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)) x128))
(assert (x6021 x5106))
(assert (= (and x4607 x5340) x2166))
(assert (= (and x8570 (not x5383)) x7879))
(assert (not (x3961 (x1874 32 104))))
(assert (x3961 2770781680))
(assert (= (x986 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213)) x6995))
(assert (x6021 x1353))
(assert (x6021 x6250))
(assert (= (x569 (x6067 x1883 x5624 x7756 x4567 x683)) x7756))
(assert (= x3623 (and x6606 x238)))
(assert (x6021 x3260))
(assert (x6021 x7091))
(assert (= (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602) (x8569 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602))))
(assert (not (x3961 (x8371 64 x1859 11))))
(assert (x6021 x6319))
(assert (= x8431 (x569 (x6067 x1409 x7939 x8431 x874 x5094))))
(assert (x6021 x3927))
(assert (x3961 2001815235))
(assert (x6021 x8394))
(assert (= x5933 (x569 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704))))
(assert (= x3984 (x569 (x4463 x128 x8018 x3984 x1135))))
(assert (= (=> (and (= x5184 true) (= x220 false) (= x6843 0)) x6249) x7380))
(assert (= (x4463 x8295 x8358 x6466 x2877) (x8569 (x4463 x8295 x8358 x6466 x2877))))
(assert (= (and x4508 x6936) x2393))
(assert (= (x986 (x4863 x8295 x8185 x6925 x979 x5754 x2033)) x2033))
(assert (x6021 x4856))
(assert (= x6961 (and x2486 x3442)))
(assert (x7582 x2545))
(assert (x6021 x6996))
(assert (x6021 x4756))
(assert (x2626 (ite (not (= 0 x649)) 1 0)))
(assert (x6021 x8299))
(assert (=> (>= 10000 x1743) (= 0 (x8569 x1743))))
(assert (x6021 x3113))
(assert (x6021 x1764))
(assert (= x3760 (and x6573 x5654)))
(assert (= (x8569 14609135308879574245051756109060786979925523914932377087145621868633940557824) 0))
(assert (x6021 x4334))
(assert (x6021 x6738))
(assert (x6021 x5581))
(assert (x6021 x7001))
(assert (x6021 x648))
(assert (= 0 (x8569 2770781680)))
(assert (=> (<= x8142 10000) (= 0 (x8569 x8142))))
(assert (x6021 x6276))
(assert (> (x1874 x81 x5974) 10000))
(assert (x2186 x2605))
(assert (x1960 x1918))
(assert (x6021 x7444))
(assert (= (x4378 (x1874 32 103)) 103))
(assert (x6021 x5469))
(assert (= x64 (and (not x5097) x1431)))
(assert (x6021 x1609))
(assert (x6021 x2952))
(assert (x3961 29244376827073035548771643948814531551534385112760475998805679327281764368384))
(assert (= (or (and x1131 x954) (and x1212 x2485) (and x5290 x2793) (and x8466 x24) (and x113 x1720)) x7537))
(assert (not (x3961 (x4863 x1891 x2624 x6776 x7509 x4204 x6170))))
(assert (= (=> (and (= x4194 x5855) (= x186 x4302) (= x1020 0) (= x186 (x4375 255 x2881)) (= x6490 x1231) (= x2468 x1912) (= x7082 x3308) (= 2 x5198)) x2368) x4158))
(assert (= (and x3996 (not x8208)) x1984))
(assert (x1960 x2311))
(assert (= (x8569 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (= (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758) (x8569 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758))))
(assert (x6021 x8071))
(assert (x2186 x4856))
(assert (= x6669 (x986 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509))))
(assert (= x1802 (and x8146 (not x669))))
(assert (x3961 1313998243))
(assert (x6021 x3965))
(assert (x6021 x306))
(assert (x6021 x7128))
(assert (x5269 x1018))
(assert (= (x2668 (x6067 x1919 x2762 x836 x812 x6861)) x6861))
(assert (> (x8371 x7741 x1640 x6441) 10000))
(assert (x6021 x4568))
(assert (=> (<= x6990 10000) (= (x8569 x6990) 0)))
(assert (x6021 x4991))
(assert (x6021 x4096))
(assert (= x1494 (or x2505 x6389)))
(assert (= x4323 (x4408 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821))))
(assert (=> (>= 10000 x128) (= 0 (x8569 x128))))
(assert (x6021 x6998))
(assert (< (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x7877))
(assert (x6021 x4070))
(assert (x6021 x4913))
(assert (= (and x1131 (not x954)) x4397))
(assert (x6021 x1738))
(assert (x6021 x8582))
(assert (x1960 x3284))
(assert (x6021 x2509))
(assert (= x7375 (x1880 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758))))
(assert (= (and (not x1367) x6167) x7431))
(assert (=> (>= 10000 x5877) (= (x8569 x5877) 0)))
(assert (x6021 x6422))
(assert (x6021 x3799))
(assert (x7582 x6283))
(assert (x6021 x8375))
(assert (= x520 (or x7586 x793)))
(assert (x6021 x5525))
(assert (x6021 x2150))
(assert (x6021 x6878))
(assert (x6021 x3070))
(assert (= x3081 (=> (and (or (and (= 128 x4097) x3709) (and (and (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1018) x6422) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x6422) (= x4097 (+ x6422 128)) (<= 1 x6422) (= (x6862 (+ x839 63)) x1018)) (not x3709))) (= (= 0 x839) x3709)) x227)))
(assert (= (x4378 (x4463 x1409 x5975 x4026 x1178)) x5975))
(assert (= 64 (x864 (x8371 64 x6632 (ite (<= x1911 32) x1094 (ite (<= x1911 64) x6429 (ite (>= 96 x1911) x6204 (ite (<= x1911 128) x61 (ite (>= 160 x1911) x1250 (ite (>= 192 x1911) x6248 x6152))))))))))
(assert (= x5254 (x4378 (x4463 x1919 x5254 x4545 x6880))))
(assert (< (x8371 64 x574 (ite (>= 32 x7786) x3782 (ite (<= x7786 64) x3982 (ite (>= 96 x7786) x494 (ite (>= 128 x7786) x7813 (ite (<= x7786 160) x1314 (ite (>= 192 x7786) x2102 x5667))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x5395))
(assert (=> (<= x6289 10000) (= 0 (x8569 x6289))))
(assert (= (x864 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)) x112))
(assert (x6021 x3580))
(assert (not (x3961 (x4463 x7741 x4301 x1145 x5328))))
(assert (x6021 x7863))
(assert (x6021 x4206))
(assert (x6021 x1181))
(assert (x6021 x2357))
(assert (= (=> (= x5166 (= 0 x5345)) (and (=> (and (not x5166) (and (= x5739 x465) (= x2431 x1966) (= x2714 x6076) (= x490 x1384))) x5394) (=> (and (and (= x3308 x7483) (= x5160 x1264) (= x1912 x2828) (= 0 x7033) (= false x5012) (= x8331 2) (= x3240 x6490) (= x8412 true)) x5166) x7857))) x7020))
(assert (= (x8569 (x8371 64 x1887 12)) (x8371 64 x1887 12)))
(assert (x6021 x6263))
(assert (x6021 x1890))
(assert (= (=> (= (+ x8091 x7704) x8135) x592) x4730))
(assert (x6021 x4482))
(assert (x2186 x4981))
(assert (=> (>= 10000 x1780) (= 0 (x8569 x1780))))
(assert (x6021 x5420))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x8175 3)))
(assert (= x5831 x3905))
(assert (= (x864 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602)) x81))
(assert (= x3384 (and (not x7230) x5566)))
(assert (x6021 x6776))
(assert (x3961 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (= x5666 (or (and (not x2603) x7504) x3482)))
(assert (x6021 x6542))
(assert (x2662 x3584 256))
(assert (x6021 x5793))
(assert (x6021 x3611))
(assert (x6021 x836))
(assert (= (=> (and (= (= x8370 0) x5288) (= x6062 (x8448 (- x6075 128))) (= x8370 (x6458 x4737)) (= x4590 128)) (and (=> (and (not x5288) (and (= x3394 51607134309459761954548520284799282329936326410793501951915747293203005440) (= x6173 x6062) x8186 (= x1883 (x3800 132)) (<= 196 x6062) (= (< 18446744073709551615 x1883) x5465) (= false x6140) (= x4941 x158) (<= 196 x6173) (<= 1 x4225) (= x7905 false) (= x7710 x2957) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6062) (<= x6000 127) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6173) (<= x6000 127) (= (x6458 x3611) x4225) (= (= x4170 (x1238 132)) x8186) (= x7200 x4841) (= 128 x4597) (= 1914215 x4006))) (and (=> (and (and (= x2370 (x6862 (+ 164 x1883))) (= 164 x6305) (= x5267 (> x2370 x6173))) (not x5465)) (and (=> x5267 x5871) (=> (and (not x5267) (and (= (+ 4 x7200) x2900) (= x4420 (> x6173 (+ x2900 31))))) (and (=> (and (not x4420) (and (= x4836 true) (= x1188 0) (= false x8239))) x5100) (=> (and x4420 (and (= x4383 (> x7222 18446744073709551615)) (= (x3800 x2900) x7222))) (and (=> x4383 x5825) (=> (and (not x4383) (and (= (x6862 (+ x1685 x7222)) x4845) (= (< x6173 x4845) x3063) (= (+ 32 x2900) x1685))) (and (=> (and (= (= x8394 x8301) x3090) (not x3063)) (and (=> (and (not x3090) (and (= false x45) (= 100 x1188) (= x1843 true))) x5100) (=> (and x3090 (and (= x6273 (x4380 x2318)) (= (x8448 (- x1388 (mod (ite (< x7100 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5546) (= (ite (< 0 x1388) x536 (x4375 127 x536)) x7100) (= x2318 (x8371 64 x2957 3)) (= (x4375 1 x6273) x1388) (= x536 (x4628 x6273 2)) (= x5223 (< 0 x5546)))) (and (=> (and x5223 (and (= x440 (+ x7378 160)) (= x670 (= x7100 0)) (= (* x5992 32) x7378) (= x5992 (x4628 (+ 31 x7100) 32)))) (and (=> (and (= x8337 (> x7100 31)) (not x670)) (and (=> (and (and (or (not x2582) (and x2582 (and (<= x3451 224) (= (x6676 x8424) x6975) (>= x3451 160)))) (and (= (x6676 x4085) x6449) (= x3451 (+ 160 x7100)) (= (x1874 32 x2318) x4085) (= (< 192 x3451) x2582) (= x8424 (+ x4085 1)))) x8337) x8280) (=> (and (not x8337) (and (= x3845 (* 256 x2835)) (= x140 (x4380 x2318)) (= x2835 (x4628 x140 256)))) x2391))) (=> x670 x2391))) (=> (and (not x5223) (and (= true x5076) (= false x7511) (= x1188 36))) x5100))))) (=> x3063 x5871))))))))) (=> x5465 x5825))) (=> (and (and (= x1900 x6878) (= x4737 x3356) (= x3255 x3828) (= x7627 x8181) (= x8310 x2371) (= 2 x4529) (= 0 x7153) (= x2609 x225) (= x8394 x6883) (= x242 false) (= x6299 x4670) (= x6337 x4848) (= x145 x2796) (= x4510 x2078) (= x3020 x2600) (= x7534 x352) (= true x4399)) x5288) x4830))) x8240))
(assert (> (x8371 x6151 x8188 x1872) 10000))
(assert (x6021 x1995))
(assert (x6021 x3828))
(assert (x6021 x5593))
(assert (= (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (= x4541 (and x7407 (not x4283))))
(assert (= (x864 (x6067 x81 x5956 x3927 x743 x3464)) x81))
(assert (x6021 x1883))
(assert (not (x3961 (x8371 64 x281 36))))
(assert (x6021 x5652))
(assert (x6021 x7640))
(assert (= 11 (x569 (x8371 64 x3349 11))))
(assert (= x2363 (and x3017 (not x8589))))
(assert (x6021 x7037))
(assert (=> (>= 10000 x5481) (= (x8569 x5481) 0)))
(assert (= (and x5102 (not x4332)) x6792))
(assert (= x5533 (and x303 x4781)))
(assert (= x1600 (=> (and (= x8394 x6883) (= x4670 x6299) (= x145 x2796) (= x352 x7534) (= 0 x7153) (= x3356 x4737) (= false x2404) (= x2609 x225) (= x4848 x6337) (= x7627 x8181) (= x4510 x2078) (= x3255 x3828) (= x2600 x3020) (= true x2591) (= x1900 x6878) (= x8310 x2371) (= x6608 2)) x4830)))
(assert (= 0 (x8569 486791245)))
(assert (x1960 x1945))
(assert (x6021 x6764))
(assert (x6021 x2424))
(assert (=> (>= 10000 x8176) (= 0 (x8569 x8176))))
(assert (x6021 x6193))
(assert (not (x3961 (x4463 x1883 x6542 x3545 x3441))))
(assert (= (and x8568 (not x5558)) x744))
(assert (x6021 x274))
(assert (x7457 x3137))
(assert (= (or x6796 x7240) x700))
(assert (x6021 x7019))
(assert (= x5303 (x864 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794))))
(assert (x6021 x5380))
(assert (x6021 x6924))
(assert (x6021 x5241))
(assert (x6021 x508))
(assert (= x2518 (x569 (x4863 x1919 x11 x2518 x4145 x4321 x8086))))
(assert (x6021 x2906))
(assert (> (x8371 64 x3255 3) 10000))
(assert (= x4855 (and x7320 x3893)))
(assert (x6021 x6094))
(assert (x2186 x6847))
(assert (x6021 x3536))
(assert (x6021 x3448))
(assert (= x527 (=> (= x4212 (= x1020 0)) (and (=> (and (and (= x4303 x2468) (= x5274 x7082) (= x1231 x1254) (= x5054 x4302)) (not x4212)) x7255) (=> (and (and (= x7483 x3308) (= x2828 x1912) (= x6490 x3240) (= x7033 0) (= 2 x4276) (= true x6225) (= false x938) (= x5160 x4194)) x4212) x7857)))))
(assert (x6021 x8366))
(assert (=> (>= 10000 x1297) (= (x8569 x1297) 0)))
(assert (x6021 x811))
(assert (= (x2668 (x6067 x7786 x8366 x1548 x3194 x4478)) x4478))
(assert (= x1058 (and x4541 (not x731))))
(assert (x6021 x483))
(assert (x6021 x3648))
(assert (x6021 x7396))
(assert (= x5323 (and x4212 x3264)))
(assert (x6021 x8110))
(assert (x6021 x1975))
(assert (=> (<= x8401 10000) (= (x8569 x8401) 0)))
(assert (x6021 x2376))
(assert (= (x569 (x8371 64 x5113 11)) 11))
(assert (x6021 x3741))
(assert (x5269 x3958))
(assert (x6021 x1784))
(assert (x2626 (ite (not (= 0 x4170)) 1 0)))
(assert (= (x8371 x1891 x117 x8176) (x8569 (x8371 x1891 x117 x8176))))
(assert (= x6748 (and (not x4600) x3039)))
(assert (=> (>= 10000 x4645) (= (x8569 x4645) 0)))
(assert (x6021 x4309))
(assert (= x1972 (and (not x6013) x6115)))
(assert (=> (<= x2535 10000) (= 0 (x8569 x2535))))
(assert (x6021 x8266))
(assert (= x7320 (and x4748 (not x2875))))
(assert (x6021 x5945))
(assert (= x2402 (and (not x5130) x2217)))
(assert (=> (<= x8591 10000) (= (x8569 x8591) 0)))
(assert (x6021 x3073))
(assert (x6021 x4614))
(assert (x7582 x6273))
(assert (x6021 x7122))
(assert (x2186 x8047))
(assert (= x5831 (=> (and (= x873 x881) (= x6593 x1130) (= x4571 x6782) (= x3331 x4656) (= (x4375 255 x4981) x241) (= x934 x2738) (= x160 false) (= x7479 x2087) (= x241 x1446) (= x6490 x2527) (= x3857 0) (= x6149 x8175) (= x7473 x5248) (= x3308 x4251) (= 2 x1004) (= x789 0) (= x1875 x8531) (= x1912 x5392) (= true x4851)) x2307)))
(assert (x6021 x8328))
(assert (= (x569 (x8371 64 x7391 7)) 7))
(assert (x2186 x2010))
(assert (x6021 x3751))
(assert (x6021 x5110))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x6151 x8591 x7417 x2478 x5809 x7285 x7805)))
(assert (x6021 x1592))
(assert (= x2347 (x4378 (x4463 x6151 x2347 x739 x8571))))
(assert (x6021 x7039))
(assert (x6021 x1872))
(assert (= (or (and x6766 x2946) (and x1343 x5141)) x571))
(assert (=> (>= 10000 x6096) (= 0 (x8569 x6096))))
(assert (= (and (not x3739) x4809) x5212))
(assert (x6021 x5344))
(assert (x6021 x4205))
(assert (=> (<= x7580 10000) (= 0 (x8569 x7580))))
(assert (= (x8569 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794)) (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794)))
(assert (x6021 x7550))
(assert (= (x8569 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)) (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)))
(assert (=> (<= x8102 10000) (= 0 (x8569 x8102))))
(assert (x6021 x2195))
(assert (x3961 100000))
(assert (x6021 x8498))
(assert (= (=> (= (= x3857 0) x8527) (and (=> (and (not x8527) (= x5256 (> 64 x789))) (and (=> (and (and (= x6475 true) (= x3115 false) (= 0 x1196)) x5256) x6541) (=> (and (and (= (x4628 x291 2) x3741) (= (x8371 64 x8175 3) x1068) (= x5099 (> x5881 0)) (= (x4380 x1068) x291) (= (x8371 64 x3003 11) x3904) (= x5731 (ite (> x8183 0) x3741 (x4375 127 x3741))) (= x514 354) (= x7597 0) (= x7784 (+ x7138 2)) (= x8183 (x4375 1 x291)) (= (x3534 322) x3679) (= x2998 450) (= x441 (+ x3904 1)) (= x7660 (x8371 64 x3003 11)) (= (x5308 x441) x3015) (= (x3534 290) x605) (= (x8448 (- x8183 (mod (ite (> 32 x5731) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5881) (= (x6504 x7784) x7103) (= x7138 (x8371 64 x3003 11))) (not x5256)) (and (=> (and (and (= (= x5731 0) x5869) (= x4099 (+ 548 x4745)) (= x4745 (* x5892 32)) (= (x4628 (+ 31 x5731) 32) x5892)) x5099) (and (=> (and (not x5869) (= x3027 (> x5731 31))) (and (=> (and (and (or (not x5820) (and x5820 (and (<= x1778 612) (= (x6676 x2539) x6988) (>= x1778 548)))) (and (= (x1874 32 x1068) x6002) (= (+ 548 x5731) x1778) (= x7421 (x6676 x6002)) (= x2539 (+ 1 x6002)) (= x5820 (< 580 x1778)))) x3027) x1940) (=> (and (and (= x5515 (x4628 x6283 256)) (= (x4380 x1068) x6283) (= x1193 (* 256 x5515))) (not x3027)) x5003))) (=> x5869 x5003))) (=> (and (not x5099) (and (= x5685 true) (= false x6412) (= x1196 36))) x6541))))) (=> (and x8527 (and (= x789 x1196) (= false x4765) (= true x2899))) x6541))) x2307))
(assert (x6021 x1768))
(assert (not (x3961 (x4863 x5303 x3458 x3478 x2190 x1189 x7928))))
(assert (x6021 x2770))
(assert (= x7932 (x569 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409))))
(assert (= (x4378 (x4463 x1891 x6971 x5481 x4245)) x6971))
(assert (= (and x6872 x6835) x5578))
(assert (= (and x5083 x8519) x6993))
(assert (x6021 x8490))
(assert (= (and x797 x7576) x4020))
(assert (= (x569 (x8371 x1919 x294 x5490)) x5490))
(assert (= x7442 (and (not x301) x3193)))
(assert (> (x8371 x5107 x8206 x4569) 10000))
(assert (=> (<= x7437 10000) (= 0 (x8569 x7437))))
(assert (= x3872 (and x2091 x7855)))
(assert (not (x3961 (x1874 x128 x2672))))
(assert (x6021 x8065))
(assert (x6021 x2562))
(assert (not (x3961 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183))))
(assert (x6021 x366))
(assert (x6021 x7937))
(assert (x6021 x2609))
(assert (x6021 x2569))
(assert (= (or x7661 x6453) x8573))
(assert (=> (<= x8305 10000) (= 0 (x8569 x8305))))
(assert (= (x1874 x2495 x884) (x8569 (x1874 x2495 x884))))
(assert (= x6600 (and x889 (not x5166))))
(assert (x6021 x4534))
(assert (x6021 x5679))
(assert (= x6741 (=> (= x5387 (= x5930 0)) (and (=> (and (and (= x4510 x2078) (= x4737 x3356) (= false x7319) (= x3255 x3828) (= 0 x7153) (= x6878 x1900) (= true x4429) (= x352 x7534) (= x8181 x7627) (= x2609 x225) (= x8394 x6883) (= x2796 x145) (= x8310 x2371) (= x3140 2) (= x6337 x4848) (= x2600 x3020) (= x6299 x4670)) x5387) x4830) (=> (and (not x5387) (and (= x2611 x500) (= x6238 x515) (= x5517 x3469) (= x830 x4614) (= x5848 x1079) (= x5832 x5331) (= x2195 x6046) (= x67 x3934) (= x4355 x5022) (= x3202 x2399) (= x5175 x5486) (= x5092 x4253) (= x962 x6731))) x3871)))))
(assert (< 10000 (x8371 x8390 x579 x1433)))
(assert (x6021 x4219))
(assert (x1635 32 (ite (not (= x649 0)) 1 0)))
(assert (= x2678 (and x7067 x6303)))
(assert (x6021 x1365))
(assert (= (x3105 x8390 x663 x36 x6382 x131 x3931 x6591) (x8569 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591))))
(assert (x6021 x8331))
(assert (x6021 x857))
(assert (x6021 x7474))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x6021 x4874))
(assert (=> (>= 10000 x1309) (= (x8569 x1309) 0)))
(assert (= (x864 (x8371 64 x1624 36)) 64))
(assert (x6021 x1685))
(assert (x6021 x946))
(assert (x6021 x1409))
(assert (not (x3961 (x6067 x3841 x2108 x7282 x1323 x3666))))
(assert (x6021 x4613))
(assert (x6021 x7774))
(assert (= x4296 (or x5727 (and x4220 (not x2120)))))
(assert (x6021 x7432))
(assert (= (x4408 (x4863 x7786 x2854 x3591 x5743 x6693 x7617)) x5743))
(assert (x6021 x4319))
(assert (x6021 x51))
(assert (not (x3961 (x8371 64 x5879 6))))
(assert (= x6134 (x864 (x8371 x6134 x2428 x8056))))
(assert (x7582 x140))
(assert (=> (<= x6409 10000) (= 0 (x8569 x6409))))
(assert (x6021 x7534))
(assert (x6021 x2006))
(assert (=> (<= x6452 10000) (= (x8569 x6452) 0)))
(assert (x6021 x1086))
(assert (= (and x2486 (not x3442)) x7130))
(assert (x6290 x2330))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x3611 2)))
(assert (= (and x6578 x749) x5605))
(assert (x6021 x5781))
(assert (x5269 x1607))
(assert (x6021 x6585))
(assert (= (x8569 (x8371 x112 x7510 x987)) (x8371 x112 x7510 x987)))
(assert (x6021 x2953))
(assert (x6021 x6581))
(assert (x6021 x5233))
(assert (x6021 x3456))
(assert (x6021 x4449))
(assert (x6021 x7182))
(assert (x6021 x4251))
(assert (= (x4408 (x4863 x6134 x8381 x8081 x3450 x3891 x7263)) x3450))
(assert (x7457 x536))
(assert (x6021 x2476))
(assert (< (x1874 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x4721))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x5924 12)))
(assert (= x6562 (and x4609 (not x1416))))
(assert (= (or x6729 x8265 x3847 x7607 x2207) x8282))
(assert (= (x8569 (x8371 64 x5879 6)) (x8371 64 x5879 6)))
(assert (< 10000 (x8371 64 x3255 5)))
(assert (x6021 x1825))
(assert (= x4950 (and x2317 (not x12))))
(assert (= x8213 (x1880 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213))))
(assert (x6021 x1519))
(assert (x6021 x5646))
(assert (x6021 x985))
(assert (x6021 x7309))
(assert (= x5391 (x2668 (x4863 x62 x2406 x1667 x1539 x5391 x8104))))
(assert (=> (>= 10000 x6594) (= 0 (x8569 x6594))))
(assert (x6021 x3033))
(assert (= x978 (or x5775 x6020)))
(assert (= (x1874 x8295 x6990) (x8569 (x1874 x8295 x6990))))
(assert (> (x1874 32 x384) 10000))
(assert (x7457 x225))
(assert (x3961 1084734224))
(assert (< (x8371 64 x5207 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x5093))
(assert (x6021 x7610))
(assert (x6021 x944))
(assert (x6021 x7342))
(assert (x6021 x2428))
(assert (= (x2668 (x6067 x8295 x2784 x8304 x6096 x7098)) x7098))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x6021 x8122))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x112 x6919)))
(assert (= (and x614 x3744) x2865))
(assert (x6021 x7393))
(assert (x3961 43931689107028929153831073962459296230956404255593708771276734084804920737792))
(assert (x770 x536))
(assert (not (x3961 (x4463 x8295 x8358 x6466 x2877))))
(assert (x6021 x7129))
(assert (x6021 x4396))
(assert (x6021 x1405))
(assert (=> (<= x4359 10000) (= (x8569 x4359) 0)))
(assert (x2186 x766))
(assert (=> (>= 10000 x5624) (= (x8569 x5624) 0)))
(assert (=> (<= x4285 10000) (= 0 (x8569 x4285))))
(assert (x7457 x6166))
(assert (=> (>= 10000 x3088) (= (x8569 x3088) 0)))
(assert (x6021 x982))
(assert (x6021 x2900))
(assert (x6021 x6643))
(assert (x6021 x8179))
(assert (x770 x4663))
(assert (x6021 x6649))
(assert (x6021 x162))
(assert (x6021 x2230))
(assert (= x3003 (x4378 (x8371 64 x3003 11))))
(assert (= x1512 (=> (and (= x7143 0) (= x4300 true) (= false x4083)) x6106)))
(assert (x6021 x8453))
(assert (x6021 x6815))
(assert (= (or (and x7314 x7441) (and x2445 x6912) (and x4622 x4821)) x5544))
(assert (= (x1880 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602)) x4726))
(assert (x6021 x1832))
(assert (x7457 x51))
(assert (x6021 x97))
(assert (= (x569 (x4463 x1911 x1105 x5420 x538)) x5420))
(assert (= (x8569 1766847064778384329583297500742918515827483896875618958121606201292619776) 0))
(assert (x6021 x5837))
(assert (x6021 x4348))
(assert (x6021 x6112))
(assert (x6021 x6843))
(assert (= x5114 (and (not x3343) x3877)))
(assert (= (x1874 x7741 x6688) (x8569 (x1874 x7741 x6688))))
(assert (= (x8569 (x4863 x1409 x4788 x7372 x6764 x5069 x3607)) (x4863 x1409 x4788 x7372 x6764 x5069 x3607)))
(assert (x6021 x5261))
(assert (x6021 x2133))
(assert (x6021 x5028))
(assert (< 10000 (x8371 64 x5113 11)))
(assert (x6021 x2054))
(assert (x6021 x2723))
(assert (= (=> (= (= 0 x6553) x4387) (and (=> (and (and (= x554 x6550) (= x7826 x5989) (= x2036 x4501) (= x1019 x8436) (= x1313 x4870) (= x7341 x2818) (= x7462 x1691) (= x3647 x3125) (= x111 x741) (= x4326 x2950) (= x3676 x7337) (= x7589 x1455) (= x3573 x6849)) (not x4387)) x75) (=> (and x4387 (and (= x6299 x4670) (= x6878 x1900) (= x225 x2609) (= x8310 x2371) (= x7627 x8181) (= x2600 x3020) (= x7153 0) (= x7534 x352) (= x2078 x4510) (= x4848 x6337) (= x8271 false) (= x145 x2796) (= x4737 x3356) (= x3828 x3255) (= x8394 x6883) (= x6103 true) (= x3518 2))) x4830))) x6895))
(assert (= (and x5167 (not x6540)) x6124))
(assert (x6021 x6391))
(assert (= (and x3665 (not x7354)) x4556))
(assert (x6021 x1143))
(assert (x6021 x6069))
(assert (x2662 x6739 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x770 x3741))
(assert (x6021 x4559))
(assert (x2186 x2629))
(assert (x6021 x6354))
(assert (x6021 x4355))
(assert (x6021 x7665))
(assert (= x4537 (and x1717 (not x6928))))
(assert (not (x3961 (x6067 x7741 x6208 x6643 x6566 x3171))))
(assert (x6021 x3374))
(assert (x6021 x6521))
(assert (= x4580 (and x3159 x6529)))
(assert (= x5069 (x2668 (x4863 x1409 x4788 x7372 x6764 x5069 x3607))))
(assert (= (and x6227 x6489) x169))
(assert (x6021 x8346))
(assert (x6021 x6070))
(assert (= (x864 (x4463 x8390 x3088 x2679 x2045)) x8390))
(assert (x6021 x3696))
(assert (x6021 x4586))
(assert (x6021 x5718))
(assert (= x3744 (and x4267 x4218)))
(assert (x6021 x2675))
(assert (=> (<= x7469 10000) (= (x8569 x7469) 0)))
(assert (= (x6067 x1919 x2762 x836 x812 x6861) (x8569 (x6067 x1919 x2762 x836 x812 x6861))))
(assert (x6021 x3180))
(assert (= x1883 (x864 (x4463 x1883 x6542 x3545 x3441))))
(assert (= x1409 (x864 (x6067 x1409 x7939 x8431 x874 x5094))))
(assert (x6021 x7040))
(assert (= x8390 (x864 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591))))
(assert (x2186 x2326))
(assert (= (x1880 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230)) x230))
(assert (= (x864 (x8371 64 x158 (ite (<= x8390 32) x3046 (ite (>= 64 x8390) x6218 (ite (<= x8390 96) x3520 (ite (>= 128 x8390) x2175 (ite (>= 160 x8390) x3928 (ite (<= x8390 192) x3577 x7486)))))))) 64))
(assert (= x6494 (=> (and (or (and (not x7134) (and (= x2675 (x6458 x8301)) (>= 1461501637330902918203684832716283019655932542975 x7997) (= x4835 false) (= x8301 x7997) (>= x7997 1) (= x1259 false) (= x6687 x6941) (= x7140 310283853) (>= 127 x630) (= 36 x2292) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x6891) (>= x2675 1) (= x5589 false) (<= x630 127) (= false x2097))) (and x7134 (and (>= 57896044618658097711785492504343953926634992332820282019728792003956 x6687) (= x2601 false) (= x696 36) (>= 127 x1141) (>= x1563 1) (= x7628 x7596) (= x1779 x2890) (>= 127 x1141) (= x2890 (* 1000000000 x6687)) (= (x6458 x2084) x1563) (= x8020 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x8055 false) (= x5019 false) (= x6687 x7596) (= false x2467) (= x904 310283853)))) (and (= 128 x4361) (= x5542 2088793519) (= x7299 false) (<= 1 x852) (= false x4895) (= x7134 (= x2084 x7997)) (>= 127 x3717) (<= x3717 127) (<= x7997 1461501637330902918203684832716283019655932542975) (= (x6458 x3611) x852) (= x3895 4))) x1897)))
(assert (=> (<= x2596 10000) (= 0 (x8569 x2596))))
(assert (= (=> (and (= x4672 x6144) (= x2390 x5614) (= x7788 x7260) (= x5897 1) (= x1479 x5469) (= x8494 0)) x6709) x5562))
(assert (= x4321 (x2668 (x4863 x1919 x11 x2518 x4145 x4321 x8086))))
(assert (x5269 x51))
(assert (x3961 48755886422350550937420582033662272622158303343164848365600209189876434731008))
(assert (< (x6067 x5107 x652 x8297 x5470 x2440) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x4795))
(assert (= x3257 (and x3876 (not x6309))))
(assert (= x8358 (x4378 (x4463 x8295 x8358 x6466 x2877))))
(assert (x1960 x4757))
(assert (x6021 x5089))
(assert (x6021 x308))
(assert (< 10000 (x8371 64 x648 6)))
(assert (x6021 x6337))
(assert (x6021 x4462))
(assert (x6021 x3441))
(assert (=> (<= x2585 10000) (= (x8569 x2585) 0)))
(assert (= (x864 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177)) x2495))
(assert (= x7174 (=> (and (= x6168 2) (= x4523 x6490) (= x7261 x3011) (= x1912 x6717) (= x3320 x4136) (= x4250 x3308) (= x4136 (x4375 255 x1878)) (= 0 x5129)) x8320)))
(assert (x6021 x6933))
(assert (x6021 x6168))
(assert (= x862 (x4378 (x8371 x636 x862 x7005))))
(assert (=> (<= x161 10000) (= (x8569 x161) 0)))
(assert (x6021 x3584))
(assert (x6021 x1350))
(assert (= (and x6993 (not x5311)) x7570))
(assert (not (x3961 (x1874 32 x2318))))
(assert (x6021 x1694))
(assert (= (and x6886 x1364) x7472))
(assert (x6021 x4138))
(assert (x6021 x4448))
(assert (=> (<= x8068 10000) (= 0 (x8569 x8068))))
(assert (x6021 x2874))
(assert (= (and (not x2768) x6973) x2443))
(assert (= 0 (x8569 1313998243)))
(assert (x6021 x8564))
(assert (x6021 x2948))
(assert (= (x569 (x8371 64 x192 36)) 36))
(assert (x7457 x1665))
(assert (=> (<= x4771 10000) (= 0 (x8569 x4771))))
(assert (x6021 x4363))
(assert (< (x1874 x81 x5974) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3665 (and x1505 (not x1998))))
(assert (= 0 (x8569 35477284059277649309253622239531857712935939406416048698883813673932370764389)))
(assert (=> (>= 10000 x4060) (= 0 (x8569 x4060))))
(assert (x6021 x3312))
(assert (x6517 (+ x4994 31) 32))
(assert (= x4899 (and (not x312) x8374)))
(assert (x6021 x4318))
(assert (not (x3961 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424))))
(assert (not (x3961 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736))))
(assert (x6021 x7452))
(assert (< 10000 (x4463 x1883 x6542 x3545 x3441)))
(assert (= (and x1612 x2012) x4374))
(assert (=> (<= x1183 10000) (= 0 (x8569 x1183))))
(assert (= x806 (and x6993 x5311)))
(assert (= (x569 (x8371 x81 x161 x3096)) x3096))
(assert (= x3178 x1617))
(assert (x6021 x4817))
(assert (x6021 x129))
(assert (=> (<= x6865 10000) (= 0 (x8569 x6865))))
(assert (x6021 x603))
(assert (x6021 x7978))
(assert (= 36 (x569 (x8371 64 x8226 36))))
(assert (< (x1874 x6151 x199) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x6246))
(assert (x6021 x7708))
(assert (x2662 x414 256))
(assert (=> (<= x6382 10000) (= (x8569 x6382) 0)))
(assert (= (x864 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801)) x62))
(assert (= (x2668 (x4863 x1891 x2624 x6776 x7509 x4204 x6170)) x4204))
(assert (= (x4378 (x8371 x128 x7890 x4531)) x7890))
(assert (= x1399 (x4378 (x1874 x8390 x1399))))
(assert (x2662 x4094 256))
(assert (= (ite (<= x1891 32) x6104 (ite (<= x1891 64) x2684 (ite (<= x1891 96) x7540 (ite (<= x1891 128) x7449 (ite (>= 160 x1891) x5213 (ite (>= 192 x1891) x5567 x6398)))))) (x569 (x8371 64 x2008 (ite (>= 32 x1891) x6104 (ite (>= 64 x1891) x2684 (ite (>= 96 x1891) x7540 (ite (<= x1891 128) x7449 (ite (>= 160 x1891) x5213 (ite (>= 192 x1891) x5567 x6398))))))))))
(assert (= x2561 (or x571 x819 x4280 x6692 x4291 x4260)))
(assert (= (x8569 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)) (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)))
(assert (x6021 x1336))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x5303 x1376 x7722 x5491)))
(assert (= (or (and (not x2090) x2599) (and x1103 (not x7172))) x6097))
(assert (x1635 32 x7117))
(assert (= (and x1651 (not x1641)) x7178))
(assert (x6021 x383))
(assert (= x4719 (and x1303 x283)))
(assert (x6021 x3507))
(assert (= x3474 (and (not x6054) x3616)))
(assert (x6021 x4969))
(assert (x2186 x6521))
(assert (x6021 x1148))
(assert (x6290 x1878))
(assert (x6021 x3675))
(assert (= (and x3813 x5209) x4515))
(assert (= (x864 (x6067 x1891 x4148 x3347 x3693 x2735)) x1891))
(assert (x1960 x1377))
(assert (= (and x2603 x7504) x3482))
(assert (x6021 x71))
(assert (x6021 x3841))
(assert (x2496 x7473))
(assert (x6021 x2361))
(assert (x6021 x2824))
(assert (= (x4408 (x4863 x5303 x3458 x3478 x2190 x1189 x7928)) x2190))
(assert (= x8146 (and (not x6976) x1586)))
(assert (= (x569 (x8371 64 x3255 3)) 3))
(assert (x1960 x6930))
(assert (x6021 x76))
(assert (x6021 x3176))
(assert (x6021 x1583))
(assert (= x8265 (and x5291 x5351)))
(assert (x6021 x4594))
(assert (x6021 x7886))
(assert (x6021 x8473))
(assert (= (x8569 (x1874 x62 x306)) (x1874 x62 x306)))
(assert (= x7282 (x569 (x6067 x3841 x2108 x7282 x1323 x3666))))
(assert (x6021 x3279))
(assert (< 10000 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509)))
(assert (x6021 x1004))
(assert (= 2 (x569 (x8371 64 x3611 2))))
(assert (x6021 x692))
(assert (= x607 (and x4972 (not x7674))))
(assert (x5973 x145))
(assert (x6021 x5546))
(assert (x6021 x7963))
(assert (=> (>= 10000 x836) (= (x8569 x836) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x6524 12)))
(assert (> (x6067 x1911 x3544 x5997 x2878 x5969) 10000))
(assert (= 0 (x8569 3957931183)))
(assert (= (=> (and (= x7158 0) (= x5469 x8246) (= x3404 2) (= x1196 x5593) (= x4672 x6490) (= x7788 x1912) (= x3308 x2390) (= x8246 (x4375 255 x4981))) x4490) x6541))
(assert (= x5275 (or (and x3593 x4707) (and x854 x3229))))
(assert (= (and (not x3208) x4268) x1354))
(assert (x2626 x5483))
(assert (= (and x545 x1873) x3634))
(assert (x1960 x1597))
(assert (< 10000 (x8371 64 x281 36)))
(assert (x6021 x4074))
(assert (=> (>= 10000 x6065) (= 0 (x8569 x6065))))
(assert (= x119 (and x6972 (not x5828))))
(assert (= (and x7410 (not x8389)) x3452))
(assert (x6021 x6291))
(assert (=> (>= 10000 x5391) (= (x8569 x5391) 0)))
(assert (< (x4863 x2495 x250 x7219 x6882 x1933 x4430) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x2761))
(assert (x2626 (ite (not (= 0 x7371)) 1 0)))
(assert (< 10000 (x8371 x7786 x2579 x6442)))
(assert (= (and x6217 (not x3063)) x4775))
(assert (x2662 x6847 256))
(assert (x6021 x112))
(assert (= x2958 (or (and x5977 (not x1448)) x8145 (and (not x760) x8439) (and x5122 (not x795)) (and (not x79) x2660))))
(assert (x6021 x6801))
(assert (= x7488 (or x3760 x8123 x4240 x7745 x1655)))
(assert (= (=> (= x2313 (= x5428 0)) (and (=> (and (and (= (> x6905 x5062) x1795) (= (x8075 x2864) x6905) (= (x6862 (+ x6085 x6905)) x5062) (= (x8371 64 x3611 2) x2864)) x2313) (and (=> (and (and (= x5580 36) (= x5908 false) (= true x2709)) x1795) x1559) (=> (and (not x1795) (= (= x1130 115792089237316195423570985008687907853269984665640564039457584007913129639935) x5322)) (and (=> x5322 x2894) (=> (and (and (= x6781 (x6862 (+ x1130 1))) (= x598 x6490) (= false x1718) (= x3308 x176) (= x1912 x8574) (= (+ 1 x8416) x6812) (= x157 32) (= x3883 1) (= (x8371 64 x1130 0) x8416) (= false x1137) (= x5332 (x6862 (+ x1130 1)))) (not x5322)) x6572))))) (=> (and (not x2313) (and (= false x2757) (= x1613 true) (= x5580 4))) x1559))) x7166))
(assert (= (x1880 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409)) x6409))
(assert (= x3036 (=> (and (or (and (= x6468 x6761) x7059) (and (not x7059) (and (= x230 (x7038 320)) (= (x4939 x7535) x2672) (= (x4939 x8525) x4998) (= x6784 (x4863 x128 x4320 x1602 x6915 x2789 x4998)) (= (x7038 224) x5923) (= (x4463 x128 x8018 x3984 x1135) x3692) (= x6291 (x6862 (+ x7535 96))) (= x8425 (x6862 (+ x7535 128))) (= (x6067 x2495 x3439 x1839 x1840 x3342) x6571) (= (x6862 (+ 64 x7535)) x2586) (= (x1874 x2495 x884) x5788) (= x2821 (x6862 (+ x128 x7535))) (= (x6862 (+ 160 x7535)) x2960) (= x6330 (x7038 256)) (= x2760 (x4939 x273)) (= x1933 (x7038 256)) (= x7890 (x4939 x7535)) (= (ite (= (ite (= 0 x128) x1093 (ite (>= 32 x128) x7141 (ite (>= 64 x128) x1608 (ite (<= x128 96) x3692 (ite (>= 128 x128) x2125 (ite (>= 160 x128) x6784 (ite (>= 192 x128) x1847 x2392))))))) (ite (= x2495 0) x4868 (ite (>= 32 x2495) x5788 (ite (>= 64 x2495) x1851 (ite (<= x2495 96) x5452 (ite (>= 128 x2495) x6571 (ite (<= x2495 160) x3480 (ite (<= x2495 192) x416 x8037)))))))) 1 0) x6468) (= x5117 (x6862 (+ x7535 64))) (= (x6862 (+ x7535 32)) x8492) (= x7141 (x1874 x128 x2672)) (= x6224 (x7038 320)) (= x7219 (x7038 192)) (= (x4939 x7535) x4110) (= x2815 (x4939 x1227)) (= (x7038 192) x634) (= x6518 (x6862 (+ x7535 192))) (= (x4939 x6291) x3788) (= x1780 (x7038 288)) (= x3984 (x4939 x2886)) (= (x7038 256) x300) (= (x7038 160) x1522) (= x1839 (x7038 192)) (= (x8371 x128 x7890 x4531) x1608) (= (x7038 128) x2495) (= (x7038 224) x5655) (= (x7038 160) x884) (<= x128 224) (= (x4939 x5459) x4531) (= x848 (x7038 224)) (= (x4939 x7535) x8018) (= (x6862 (+ x7535 64)) x7487) (= x768 (x6862 (+ x7535 32))) (= x273 (x6862 (+ x7535 64))) (= (x6862 (+ x7535 128)) x8525) (= x250 (x7038 160)) (= x5459 (x6862 (+ x7535 32))) (= (x7038 192) x917) (= (x7038 224) x1840) (= (x6862 (+ x7535 160)) x2139) (= (x7038 160) x911) (= x1602 (x4939 x1472)) (= (x4939 x7535) x7019) (= x7719 (x4939 x2305)) (= x3456 (x4939 x2139)) (= (x6862 (+ 128 x7535)) x4295) (= x7070 (x4939 x7535)) (<= x2495 224) (= (x7038 192) x2938) (= x1695 (x6862 (+ 96 x7535))) (= x1001 (x7038 160)) (= x2125 (x6067 x128 x7070 x5224 x6130 x3885)) (= x3885 (x4939 x486)) (= (x4463 x2495 x1522 x3977 x5655) x5452) (= x3342 (x7038 256)) (= (x8371 x2495 x911 x634) x1851) (= x4320 (x4939 x7535)) (= x1093 (x3631 0)) (= (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550) x1847) (= (x3105 x2495 x1632 x917 x848 x6330 x1780 x230) x416) (= (x4939 x2597) x4547) (= x1632 (x7038 160)) (= x3439 (x7038 160)) (= (x3631 0) x4868) (= (x4939 x2960) x2550) (= (x7038 224) x6882) (= (x6862 (+ 64 x7535)) x1227) (= (x4939 x4295) x8111) (= x5224 (x4939 x8492)) (= (x6862 (+ 32 x7535)) x2886) (= x2597 (x6862 (+ x7535 32))) (= x8064 (x4939 x6518)) (= (x4939 x8425) x5024) (= (x4939 x768) x1484) (= x6130 (x4939 x5117)) (= (x7038 288) x4430) (= (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064) x2392) (= x6915 (x4939 x2586)) (= x4177 (x7038 352)) (= (x4939 x1695) x2789) (= (x7038 192) x3977) (= (x6862 (+ x7535 96)) x2305) (= x1996 (x7038 288)) (= (x6862 (+ x7535 32)) x1472) (= x1135 (x4939 x7487)) (= (x4863 x2495 x250 x7219 x6882 x1933 x4430) x3480) (= (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177) x8037) (= (x6862 (+ x7535 96)) x486)))) (= x7059 (= 0 x6761))) x557)))
(assert (= x3820 (and x6724 x2252)))
(assert (x6021 x2745))
(assert (x6021 x4718))
(assert (= (and x4695 x3956) x5127))
(assert (x6021 x5860))
(assert (not (x3961 (x8371 64 x6632 (ite (>= 32 x1911) x1094 (ite (<= x1911 64) x6429 (ite (<= x1911 96) x6204 (ite (<= x1911 128) x61 (ite (>= 160 x1911) x1250 (ite (<= x1911 192) x6248 x6152))))))))))
(assert (x6021 x5917))
(assert (= (and x5276 x49) x5694))
(assert (= (x4408 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)) x6785))
(assert (x2662 x7894 256))
(assert (x2662 x4601 32))
(assert (=> (>= 10000 x1933) (= 0 (x8569 x1933))))
(assert (x6021 x2136))
(assert (= (x8569 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183)) (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183)))
(assert (x6021 x920))
(assert (= x4630 (x2668 (x6067 x636 x620 x7121 x4244 x4630))))
(assert (x6517 x4386 32))
(assert (x6021 x6198))
(assert (x7582 x6581))
(assert (x6021 x8177))
(assert (x6021 x2181))
(assert (= (x8569 (x8371 64 x3611 1)) (x8371 64 x3611 1)))
(assert (= (x4378 (x4463 x8390 x3088 x2679 x2045)) x3088))
(assert (x1635 256 x2835))
(assert (x6021 x4323))
(assert (x6021 x391))
(assert (x6021 x4845))
(assert (= x297 (and (not x800) x5984)))
(assert (=> (<= x6877 10000) (= 0 (x8569 x6877))))
(assert (= x6142 (x2668 (x6067 x112 x6250 x8267 x825 x6142))))
(assert (= (x8569 (x8371 x5303 x6385 x7242)) (x8371 x5303 x6385 x7242)))
(assert (x6021 x6499))
(assert (= x7467 (and x7412 (not x6531))))
(assert (x6021 x1376))
(assert (= x6250 (x4378 (x6067 x112 x6250 x8267 x825 x6142))))
(assert (= (x8569 (+ 2 x5222)) (x8569 x5222)))
(assert (< 10000 (x6067 x636 x620 x7121 x4244 x4630)))
(assert (x6021 x6687))
(assert (x6021 x4327))
(assert (< (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x4463 x62 x589 x6754 x6216) 10000))
(assert (= (x986 (x4863 x7741 x1138 x7294 x4427 x6476 x4714)) x4714))
(assert (x6021 x3356))
(assert (x2662 x145 2))
(assert (x6021 x4772))
(assert (x6021 x3674))
(assert (= (x1874 x112 x6919) (x8569 (x1874 x112 x6919))))
(assert (> (x8371 64 1 x7356) 10000))
(assert (x2626 x5515))
(assert (x6021 x6720))
(assert (x6021 x6869))
(assert (=> (>= 10000 x1031) (= 0 (x8569 x1031))))
(assert (= (x8569 (x8371 64 x281 36)) (x8371 64 x281 36)))
(assert (= (and x528 (not x2566)) x113))
(assert (x6021 x7577))
(assert (x6021 x176))
(assert (= (and (not x5465) x8383) x1186))
(assert (x6021 x4826))
(assert (x1635 32 x5992))
(assert (= (x986 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424)) x8102))
(assert (= (x4863 x112 x1756 x6665 x2535 x7887 x2377) (x8569 (x4863 x112 x1756 x6665 x2535 x7887 x2377))))
(assert (= (x864 (x1874 x1883 x3524)) x1883))
(assert (x6021 x1881))
(assert (= 64 (x864 (x8371 64 x6604 2))))
(assert (x6021 x4566))
(assert (x7457 x6521))
(assert (x6021 x86))
(assert (= (and x1299 (not x2162)) x2340))
(assert (= (and x4950 (not x730)) x7180))
(assert (= x3790 (or x5964 x3908 x2615 x1660 x8489)))
(assert (= (and (not x6285) x1288) x5813))
(assert (x6021 x2478))
(assert (= x1485 (and (not x263) x2807)))
(assert (x6021 x6026))
(assert (x6021 x302))
(assert (x6021 x688))
(assert (= x6466 (x569 (x4463 x8295 x8358 x6466 x2877))))
(assert (= (or x686 x4210) x2955))
(assert (=> (>= 10000 x8390) (= (x8569 x8390) 0)))
(assert (x5269 x479))
(assert (x6021 x4577))
(assert (x6021 x282))
(assert (= (x864 (x4463 x3841 x6391 x1309 x7330)) x3841))
(assert (x6021 x6226))
(assert (= (and x2099 x8464) x1360))
(assert (x6021 x541))
(assert (x7457 x2918))
(assert (=> (>= 10000 x8381) (= (x8569 x8381) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x8295 x6192 x2459)))
(assert (= (=> (and (<= x1256 1461501637330902918203684832716283019655932542975) x4398 (= x6467 0) (>= 1461501637330902918203684832716283019655932542975 x2084) (= x2837 (>= x4335 x2724)) (<= 0 x5466) (<= 1 x4513) (>= 1461501637330902918203684832716283019655932542975 x1481) (= (< 0 (x6458 x1481)) x4398) x4190 (= x2730 x1298) (<= x5384 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5384 0) (= (x7953 x5502) x4335) (>= 1461501637330902918203684832716283019655932542975 x5466) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5205) (>= x3611 1) (<= 0 x1698) (<= 0 x568) (= x2233 x1481) (>= x803 0) (<= 0 x6645) x2071 (>= 1461501637330902918203684832716283019655932542975 x4513) (<= x1698 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4190 (> (x6458 x8301) 0)) (<= 1 x1481) (>= x2724 0) (<= x2724 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2477 0) (= (> (x6458 x2084) 0) x2071) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x568) (>= x2233 1) (not (= x2084 x3611)) (not (= x8301 x1481)) (>= 1461501637330902918203684832716283019655932542975 x2477) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x803) (>= x5205 0) (not (= x1481 x2084)) (<= 1 x8301) (>= x2084 1) (<= x2233 1461501637330902918203684832716283019655932542975) (= x2069 (> (x6458 x3611) 0)) (= x1256 x5502) (not (= x8301 x2084)) (= x4513 x3611) (= x6804 0) (<= x8301 1461501637330902918203684832716283019655932542975) x2069 (not (= x8301 x3611)) (<= x6645 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1481 x3611)) (>= 1461501637330902918203684832716283019655932542975 x3611) (>= x1256 0)) (and (=> (and (and (= true x5037) (= x5037 x6126) (= x3076 x8578) (= x618 x3975) (= x8315 x6118) (= x8196 false)) (not x2837)) x1750) (=> (and (and (= 68 x138) (= 0 x381) (= x4155 x1256) (<= 0 x7517) (= x1213 (- x8572 x1274)) (>= 127 x4281) (= x7293 x1298) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7517) (= (x6458 x3611) x1867) (= x7630 x7517) (= x7293 x8034) (= x1274 x2724) (= x8572 (x7953 x6702)) (< (+ x5891 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x8475 (= x1992 1)) (>= 127 x4281) (= x4124 false) (= x5891 (x3757 x3611)) (<= 1 x1867) (= 2001815235 x6185) (= x6702 x1256) (= x7517 (+ x1274 x5891)) (= x3707 0) (= false x981) (= false x504)) x2837) (and (=> (and x8475 (and (and (= 2 x1724) (= x8273 (not (= x3611 x4155)))) (or (and (and (<= x3970 1461501637330902918203684832716283019655932542975) (= x3035 (ite (not (= x3970 x4155)) 1 0))) x8273) (and (= x3035 (ite x8273 1 0)) (not x8273))))) x2323) (=> (and (not x8475) (and (= x4228 x618) (= x8315 x1941) (= x8177 x3076))) x3222))))) x3974))
(assert (not (x3961 (x1874 x62 x306))))
(assert (x6021 x3730))
(assert (= x8485 (and (not x203) x1762)))
(assert (x6021 x4395))
(assert (x6021 x313))
(assert (x6290 x4446))
(assert (x6021 x1792))
(assert (x6021 x2475))
(assert (x6021 x1904))
(assert (x6021 x6882))
(assert (x6021 x4019))
(assert (x6021 x1018))
(assert (= x8455 (and x777 x7698)))
(assert (= (and x6633 x3824) x7644))
(assert (= (x8371 x8295 x6192 x2459) (x8569 (x8371 x8295 x6192 x2459))))
(assert (x6021 x1017))
(assert (= (x4863 x1911 x1243 x4709 x2434 x4409 x2534) (x8569 (x4863 x1911 x1243 x4709 x2434 x4409 x2534))))
(assert (= (x4863 x1883 x2748 x5837 x2413 x4530 x2755) (x8569 (x4863 x1883 x2748 x5837 x2413 x4530 x2755))))
(assert (x7457 x7479))
(assert (x1960 x5855))
(assert (= x4112 (and x5724 x6375)))
(assert (not (x3961 (x8371 64 x1298 10))))
(assert (> (x8371 x128 x7890 x4531) 10000))
(assert (= x2129 (and (not x4229) x4578)))
(assert (= x3258 (x4378 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742))))
(assert (x6021 x7780))
(assert (=> (<= x5254 10000) (= (x8569 x5254) 0)))
(assert (= (x4863 x6134 x8381 x8081 x3450 x3891 x7263) (x8569 (x4863 x6134 x8381 x8081 x3450 x3891 x7263))))
(assert (x6021 x8178))
(assert (x6021 x1187))
(assert (=> (>= 10000 x6442) (= (x8569 x6442) 0)))
(assert (x6021 x3604))
(assert (= (x864 (x8371 64 x6304 11)) 64))
(assert (x6021 x7979))
(assert (x2626 x8274))
(assert (= (and x5521 (not x4658)) x7506))
(assert (x6021 x396))
(assert (= (x8569 (x1874 32 x3111)) (x1874 32 x3111)))
(assert (= (x986 (x4863 x112 x1756 x6665 x2535 x7887 x2377)) x2377))
(assert (= (and x2876 x3854) x8464))
(assert (= x6351 (x4408 (x4863 x6151 x876 x1903 x6351 x2911 x6088))))
(assert (x6517 x140 256))
(assert (< 10000 (x1874 x2495 x884)))
(assert (x6021 x6125))
(assert (x6021 x1634))
(assert (= x1667 (x569 (x4863 x62 x2406 x1667 x1539 x5391 x8104))))
(assert (x2626 x7685))
(assert (x6021 x8173))
(assert (x6021 x6476))
(assert (x6021 x7916))
(assert (= x863 (=> (and (and (= x949 (x6862 (+ x6073 x5646))) (= (x6862 (+ 31 x1537)) x4963) (= (x6862 (+ 32 x7425)) x2943) (= x6073 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4963)) (= x79 (< 0 x7870)) (= x7870 (x810 x6319)) (= x1678 (x8448 (- x949 x8170))) (= (x6862 (+ x5646 x1537)) x930)) (or (not x79) (and (and (or (not x1448) (and (and (= (< 64 x7870) x760) (or (and (and (or (not x795) (and x795 (<= x7870 128))) (= (< 96 x7870) x795)) x760) (not x760))) x1448)) (= (< 32 x7870) x1448)) x79))) x4123)))
(assert (x6021 x784))
(assert (= x6978 (x1880 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829))))
(assert (x6021 x128))
(assert (x6021 x2629))
(assert (= (x1874 32 x2318) (x8569 (x1874 32 x2318))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x1891 x3763)))
(assert (x6021 x3618))
(assert (x6021 x3833))
(assert (= x4670 (x4378 (x8371 64 x4670 36))))
(assert (x6517 x4045 32))
(assert (x6021 x3883))
(assert (x6021 x2909))
(assert (< 10000 (x1874 32 x3746)))
(assert (x6021 x3028))
(assert (< (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3578))
(assert (=> (>= 10000 x8267) (= (x8569 x8267) 0)))
(assert (= x81 (x864 (x4863 x81 x7614 x3028 x8276 x1764 x4340))))
(assert (x6517 x6283 256))
(assert (= (x569 (x4863 x5303 x3458 x3478 x2190 x1189 x7928)) x3478))
(assert (x6021 x1193))
(assert (x6021 x6745))
(assert (=> (>= 10000 x1433) (= 0 (x8569 x1433))))
(assert (x6021 x6785))
(assert (< (x8371 64 1 x4796) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x2459))
(assert (= x5271 (x569 (x4463 x7786 x2374 x5271 x5708))))
(assert (x6021 x973))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x636 x197 x5649 x3751)))
(assert (x6021 x333))
(assert (x2186 x145))
(assert (x6021 x5224))
(assert (= x2957 (x4378 (x8371 64 x2957 3))))
(assert (x6021 x5642))
(assert (x7457 x8471))
(assert (x6021 x2395))
(assert (x6021 x2020))
(assert (not (x3961 (x6067 x1911 x3544 x5997 x2878 x5969))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x648 6)))
(assert (not (x3961 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x6134 x7580 x5525 x125)))
(assert (x6021 x7032))
(assert (= x8198 (or x814 x8287)))
(assert (= (x986 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409)) x4603))
(assert (= (x4378 (x1874 32 x1179)) x1179))
(assert (=> (>= 10000 x2190) (= (x8569 x2190) 0)))
(assert (x6021 x7098))
(assert (x7457 x4446))
(assert (x6021 x1597))
(assert (= x2521 (x569 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838))))
(assert (= (=> (and (= x8423 (x1704 x4737)) (= x4676 (x4375 255 x2918)) (= x19 x6559) (= (x4827 x8301) x892) (= 2 x3749) (< (+ x892 x2198) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x19 0) (<= x19 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1945 x8270) (= x7000 (- x8423 x2198)) (= x19 (+ x2198 x892))) x3123) x7126))
(assert (x6517 (+ x7100 31) 32))
(assert (= x5107 (x864 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821))))
(assert (x6021 x5606))
(assert (= (x2668 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064)) x7719))
(assert (=> (>= 10000 x5704) (= (x8569 x5704) 0)))
(assert (x6021 x6925))
(assert (< (x4863 x3841 x4962 x1975 x1342 x6300 x7068) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2626 x7422))
(assert (= x5298 (and (not x7595) x5570)))
(assert (= (x4378 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464)) x7602))
(assert (x6021 x766))
(assert (= (x569 (x8371 64 x5924 12)) 12))
(assert (x6021 x5480))
(assert (= x519 (x2668 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464))))
(assert (= (or x5605 (and (not x6578) x749)) x1209))
(assert (=> (<= x5809 10000) (= 0 (x8569 x5809))))
(assert (x6021 x2341))
(assert (x1635 32 x7685))
(assert (x2626 x7482))
(assert (x6517 x5549 32))
(assert (> (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183) 10000))
(assert (> (x4863 x6151 x876 x1903 x6351 x2911 x6088) 10000))
(assert (x6021 x8142))
(assert (x6021 x675))
(assert (< (x8371 64 x3268 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x7321))
(assert (x6021 x6027))
(assert (x6021 x7580))
(assert (x6021 x2826))
(assert (x6021 x3984))
(assert (=> (<= x7695 10000) (= (x8569 x7695) 0)))
(assert (= x6724 (and x5654 (not x6573))))
(assert (=> (<= x2464 10000) (= (x8569 x2464) 0)))
(assert (= x4029 (and (not x679) x7313)))
(assert (x7457 x6131))
(assert (=> (>= 10000 x8304) (= (x8569 x8304) 0)))
(assert (= (=> (and (= x7443 (= 0 x5345)) (or x7443 (not x7443))) x7020) x3766))
(assert (x6021 x414))
(assert (= x7682 (or x7404 x5582)))
(assert (= (and x4506 x1319) x6641))
(assert (x6021 x6407))
(assert (= x3826 (and x613 (not x1924))))
(assert (x6021 x4104))
(assert (x6021 x4390))
(assert (x6021 x74))
(assert (> (x4863 x636 x5379 x256 x5272 x4150 x8142) 10000))
(assert (x6021 x2152))
(assert (= (and (not x5223) x3734) x4805))
(assert (=> (<= x3611 10000) (= (x8569 x3611) 0)))
(assert (=> (<= x6733 10000) (= (x8569 x6733) 0)))
(assert (= x498 (and (not x1865) x7012)))
(assert (x6021 x6799))
(assert (x6021 x5660))
(assert (x6021 x7327))
(assert (x6021 x6402))
(assert (= (x4463 x1911 x1105 x5420 x538) (x8569 (x4463 x1911 x1105 x5420 x538))))
(assert (x6021 x7383))
(assert (x6021 x3284))
(assert (x6021 x2179))
(assert (x2186 x4446))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x4670 36)))
(assert (= x6936 (and (not x3006) x1507)))
(assert (not (x3961 (x8371 x2495 x911 x634))))
(assert (> (x6067 x6134 x7827 x3042 x5877 x4498) 10000))
(assert (= x4883 (or (and x5765 x8106) (and x7930 x3691))))
(assert (= 0 (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (x6021 x6821))
(assert (=> (>= 10000 x3003) (= (x8569 x3003) 0)))
(assert (x6021 x7834))
(assert (x1960 x5638))
(assert (x2186 x7894))
(assert (x7582 (+ x7100 31)))
(assert (x6021 x1410))
(assert (x6517 x4149 32))
(assert (= (x8569 65459779515086145227071195481915504640854538040456829512690024447692440076288) 0))
(assert (= (x6067 x81 x5956 x3927 x743 x3464) (x8569 (x6067 x81 x5956 x3927 x743 x3464))))
(assert (= (or x6600 x5822) x3642))
(assert (=> (>= 10000 x7786) (= 0 (x8569 x7786))))
(assert (= x3019 (and x2972 x4580)))
(assert (= (and x1827 x4842) x7804))
(assert (x2626 x3308))
(assert (= (or x5294 (and (not x1128) x901)) x5450))
(assert (x6021 x663))
(assert (x6021 x7416))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230)))
(assert (x6021 x773))
(assert (x2662 x3741 128))
(assert (x2186 x4906))
(assert (=> (<= x4709 10000) (= (x8569 x4709) 0)))
(assert (= (x864 (x1874 x6134 x6756)) x6134))
(assert (x6021 x4791))
(assert (= x2567 (=> (and (= x1549 128) (= x3713 (x8448 (- x6243 128))) (= x6344 (= x5516 0)) (= x5516 (x6458 x4737))) (and (=> (and (not x6344) (and x7929 (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7866) (= false x5782) (= x7929 (= x6155 (x5075 132))) (= x7866 x3713) (= 1722637450 x3242) (<= 196 x3713) (>= 127 x3119) (= (x6458 x3611) x8129) (= x596 46442213778836376901753710468615024683576072693327014300388496345503314739200) (>= 127 x3119) (= x8581 (< 18446744073709551615 x8324)) (= x4613 x8285) (= x6496 128) (= x2342 x7988) (<= 196 x7866) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3713) (>= x8129 1) (= (x2415 132) x8324) (= x4211 false) (= x2197 x2172))) (and (=> (and (and (= x1950 (x6862 (+ 164 x8324))) (= 164 x1886) (= x6976 (> x1950 x7866))) (not x8581)) (and (=> x6976 x1512) (=> (and (and (= (> x7866 (+ 31 x7500)) x669) (= x7500 (+ 4 x2197))) (not x6976)) (and (=> (and x669 (and (= x6751 (< 18446744073709551615 x7053)) (= x7053 (x2415 x7500)))) (and (=> (and (not x6751) (and (= x5183 (+ x7500 32)) (= (x6862 (+ x5183 x7053)) x2316) (= (> x2316 x7866) x5284))) (and (=> (and (and (or (and (and (= false x1674) (= x5744 true) (= 132 x7143)) (not x1194)) (and x1194 (and (= x7143 0) (= x5802 true) (= (x6862 (+ 32 x2562)) x4654) (= x1315 (x6862 (+ 31 x7053))) (= x4469 (x4628 x1315 32)) (= x5456 (x6862 (+ x4654 x7053))) (= x1514 (x6862 (+ x4051 32))) (>= x612 161) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x329) (>= 31 x329)) (= 128 x6745) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x8324) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x8324)) (= (x6862 (+ x1514 x2562)) x612) (= x8558 (x4628 x4149 32)) (= x4149 (x6862 (+ x8324 31))) (= x329 (x5732 x2562)) (> x612 x2562) (= (* x4469 32) x4051) (= x92 (* x8558 32)) (= x2562 (+ 160 x92)) (= false x5804)))) (= (= x3611 x8301) x1194)) (not x5284)) x6106) (=> x5284 x1512))) (=> x6751 x5797))) (=> (and (and (= x1542 true) (= x114 false) (= x7143 0)) (not x669)) x6106))))) (=> x8581 x5797))) (=> (and x6344 (and (= x6299 x4670) (= x7627 x8181) (= x7153 0) (= x1900 x6878) (= x2600 x3020) (= x352 x7534) (= x225 x2609) (= x3356 x4737) (= x8394 x6883) (= x2371 x8310) (= 2 x7342) (= x3255 x3828) (= x145 x2796) (= true x3462) (= x4848 x6337) (= false x6958) (= x2078 x4510))) x4830)))))
(assert (= x112 (x864 (x6067 x112 x6250 x8267 x825 x6142))))
(assert (= (x4463 x6151 x2347 x739 x8571) (x8569 (x4463 x6151 x2347 x739 x8571))))
(assert (x2662 x2291 256))
(assert (> (x8371 64 x5207 2) 10000))
(assert (= x447 (and (not x3813) x5209)))
(assert (= x2112 (and x4518 x13)))
(assert (= (x4408 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)) x3622))
(assert (=> (>= 10000 x4019) (= (x8569 x4019) 0)))
(assert (= (=> (= (+ x883 292) x7047) x5961) x7972))
(assert (=> (>= 10000 x2045) (= 0 (x8569 x2045))))
(assert (x6021 x1129))
(assert (= x7648 (x569 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424))))
(assert (= 32 (x864 (x1874 32 x1179))))
(assert (x6021 x448))
(assert (x6021 x7391))
(assert (x6021 x471))
(assert (x1960 x1989))
(assert (= (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (x6021 x2291))
(assert (x6021 x3062))
(assert (x7457 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (<= x8297 10000) (= 0 (x8569 x8297))))
(assert (= (and x1103 x7172) x4651))
(assert (x6021 x5406))
(assert (=> (>= 10000 x5104) (= 0 (x8569 x5104))))
(assert (not (x3961 (x8371 64 x4060 36))))
(assert (x6021 x4710))
(assert (x6021 x423))
(assert (= 1 (x4378 (x8371 64 1 x3946))))
(assert (x6021 x5956))
(assert (x2186 x1010))
(assert (= x8026 (=> (= (+ x1350 x313) x1071) x745)))
(assert (x2186 256))
(assert (= x3841 (x864 (x1874 x3841 x462))))
(assert (x6021 x4960))
(assert (x6021 x8213))
(assert (x6021 x1088))
(assert (=> (<= x6134 10000) (= 0 (x8569 x6134))))
(assert (= x6018 (x569 (x6067 x62 x3305 x6018 x6655 x4882))))
(assert (= x8433 (x4408 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801))))
(assert (x6021 x6266))
(assert (x6021 x2114))
(assert (= x3443 (and x818 x4967)))
(assert (x6021 x102))
(assert (= (or x4823 x5530) x4418))
(assert (x6021 x3557))
(assert (= (x4378 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838)) x1904))
(assert (= (or x3201 x8550 x4805 x6501 x3477 x8385) x4440))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x636 x5609)))
(assert (= x4293 (x1880 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424))))
(assert (=> (>= 10000 x1399) (= 0 (x8569 x1399))))
(assert (= (x4408 (x4463 x2495 x1522 x3977 x5655)) x5655))
(assert (x6021 x4738))
(assert (x6021 x2631))
(assert (x6021 x1501))
(assert (x6021 x2153))
(assert (x6021 x6905))
(assert (x6021 x8310))
(assert (= (x4378 (x8371 64 x6632 (ite (<= x5107 32) x7657 (ite (<= x5107 64) x7720 (ite (>= 96 x5107) x782 (ite (<= x5107 128) x3066 (ite (>= 160 x5107) x3077 (ite (>= 192 x5107) x4867 x1118)))))))) x6632))
(assert (x6021 x1983))
(assert (x6021 x4126))
(assert (= x2144 (and x6698 x3690)))
(assert (x6021 x3895))
(assert (= x2039 (x2668 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117))))
(assert (= x7469 (x986 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671))))
(assert (x6021 x5902))
(assert (= (x864 (x4863 x1409 x4788 x7372 x6764 x5069 x3607)) x1409))
(assert (x6021 x4768))
(assert (= x1590 (x986 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117))))
(assert (x2186 x59))
(assert (x6021 x4118))
(assert (= 36 (x569 (x8371 64 x5904 36))))
(assert (= (x2668 (x4863 x1883 x2748 x5837 x2413 x4530 x2755)) x4530))
(assert (= (x8569 (x8371 64 x3255 4)) (x8371 64 x3255 4)))
(assert (x6021 x768))
(assert (x6021 x7904))
(assert (x6021 x3071))
(assert (x6021 x2847))
(assert (=> (>= 10000 x6524) (= 0 (x8569 x6524))))
(assert (x1960 x6414))
(assert (x6021 x8192))
(assert (= (x569 (x6067 x2495 x3439 x1839 x1840 x3342)) x1839))
(assert (x6021 x5117))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x6304 11)))
(assert (=> (>= 10000 x7887) (= 0 (x8569 x7887))))
(assert (= x1362 (or x6124 x8405 x8352)))
(assert (x6021 x3742))
(assert (x6021 x6530))
(assert (=> (<= x2406 10000) (= (x8569 x2406) 0)))
(assert (x2662 x4963 32))
(assert (x6021 x8018))
(assert (= (and x4781 (not x303)) x4231))
(assert (= 64 (x864 (x8371 64 x7391 3))))
(assert (x6021 x620))
(assert (> (x8371 64 x5207 6) 10000))
(assert (x6021 x2926))
(assert (= (x8371 64 x77 36) (x8569 (x8371 64 x77 36))))
(assert (x1960 x1957))
(assert (= (x8569 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (= (and (not x4526) x2622) x2486))
(assert (= x7331 (x986 (x4863 x5107 x3059 x1297 x2154 x8061 x7331))))
(assert (x6021 x1570))
(assert (=> (>= 10000 x3666) (= 0 (x8569 x3666))))
(assert (= (and (not x469) x1728) x3302))
(assert (x2186 x2554))
(assert (x6021 x2444))
(assert (= x5113 (x4378 (x8371 64 x5113 11))))
(assert (x6021 x7107))
(assert (x7457 x1043))
(assert (x2186 x2830))
(assert (= (and x7705 x7078) x6868))
(assert (= (x2668 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821)) x8127))
(assert (= (x569 (x8371 64 x7753 7)) 7))
(assert (= (and (not x5316) x4619) x854))
(assert (= x4123 x7927))
(assert (=> (>= 10000 x3794) (= 0 (x8569 x3794))))
(assert (x6021 x3669))
(assert (x6021 x186))
(assert (x6021 x5684))
(assert (= x645 (and x1366 (not x4044))))
(assert (x1960 x2149))
(assert (= (and x3400 x7180) x7187))
(assert (=> (<= x5026 10000) (= 0 (x8569 x5026))))
(assert (x6021 x1623))
(assert (= x2834 (=> (and (= x4184 (x6637 516)) (= x7595 (= x4184 0))) (and (=> (and (and (= true x6793) (= (x6862 (+ x3124 32)) x4739) (= (x6862 (+ 32 x2117)) x3552) (= x3124 (x6862 (+ 4 x7366))) (= false x3398) (= (x6862 (+ x4739 32)) x2117) (= x6338 132)) x7595) x2658) (=> (and (not x7595) (and (= (x3780 354) x2765) (= x2961 (x8371 64 x3255 5)) (= x5604 (x7471 x2961)) (= x8159 (< (ite (= 0 x5604) 10000 x5604) x2765)))) (and (=> (and x8159 (and (= x7889 (x6862 (+ 32 x835))) (= x887 true) (= x6338 100) (= x835 (x6862 (+ x3391 32))) (= x4623 false) (= x3391 (x6862 (+ 4 x7366))))) x2658) (=> (and (and (= (x8448 (- x2128 x7366)) x1935) (= (x6862 (+ x4831 32)) x8292) (= (= x2334 0) x1185) (= x1182 (x6862 (+ x1738 32))) (= x3633 (x8448 (- x1616 x5374))) (= x2334 (x6458 x3351)) (= x4074 (x6862 (+ 32 x3181))) (= x1616 (x6862 (+ x7491 x3044))) (= x2206 (x3780 354)) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1010) x3044) (= x3190 (x6862 (+ x1616 32))) (= x3465 (x8448 (- x3181 x5374))) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6266) x4076) (= (x6862 (+ 32 x5545)) x1738) (= (x6862 (+ 32 x7029)) x7491) (= x1265 (x6862 (+ 31 x2206))) (= (x6862 (+ 31 x6957)) x6266) (= x3181 (x6862 (+ x3190 x6838))) (= (x6862 (+ x7366 4)) x5374) (= x1010 (x6862 (+ x1181 31))) (= (x6637 516) x1181) (= (x6862 (+ x8292 32)) x5545) (= (x6862 (+ 32 x5374)) x4831) (= (x6862 (+ 192 x5374)) x7029) (= x6838 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1265)) (= (x6862 (+ x4076 x4074)) x2128) (= x6957 (x6677 450))) (not x8159)) (and (=> (and (and (= 0 x6338) (= true x5053) (= x1740 false)) x1185) x2658) (=> (and (not x1185) (and (= x5539 (x7782 x3611)) (= x1705 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1190 x3765))) (= (x7782 x3351) x1190) (= x2037 (<= x3765 x5539)) (= x5662 (and x1705 x2037)))) (and (=> (and (and (= x7466 0) (= x4310 x3255) (= x2542 x3465) (= (+ x3765 x1555) x748) (= x3611 x7553) (= x7885 (x7782 x3611)) x1681 (= x4499 x3633) (<= x3476 127) (>= x2157 1) (= 3313512704 x7829) (= x2547 (- x7885 x3765)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1555 x3765)) (= x7662 (or (and (> 192 (- x4024 4)) (= true (<= (- x4024 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> (- x4024 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x5364 x748) (<= x748 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= false x6362) (<= 420 x4024) (<= x3476 127) (= x1555 (x7065 x3351)) (= 192 x1435) (= x1935 x4024) (= x2157 (x6458 x1481)) (<= 0 x748) (>= x1935 420) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x8396) (= (= (x1369 196) x1181) x1681) (= false x5909)) x5662) (and (=> x7662 x1617) (=> (and (= x3568 true) (not x7662)) (and (=> (and x3568 (= x7043 (and (> x4024 227) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4024) true)))) (and (=> (and (and (= x588 (< 18446744073709551615 x8049)) (= (x8156 196) x8049)) x7043) (and (=> x588 x4725) (=> (and (and (= x8435 (> x5449 x4024)) (= (x6862 (+ 228 x8049)) x5449)) (not x588)) (and (=> (and (not x8435) (= x4936 (> x3633 18446744073709551615))) (and (=> x4936 x1617) (=> (and (not x4936) (and (= x5369 (or (and (< x8042 x4024) (= (<= x8042 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4024))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4024) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8042)))) (= x773 (x6862 (+ x3633 4))) (= (x6862 (+ x773 31)) x8042))) (and (=> (and x5369 (and (= x7815 (> x3682 18446744073709551615)) (= (x8156 x773) x3682))) (and (=> x7815 x4725) (=> (and (not x7815) (and (= x7732 (x6862 (+ x3682 x3730))) (= (x6862 (+ 32 x773)) x3730) (= (> x7732 x4024) x7148))) (and (=> x7148 x3178) (=> (and (not x7148) (= x1814 (> x3465 18446744073709551615))) (and (=> x1814 x1617) (=> (and (not x1814) (and (= (x6862 (+ x6519 31)) x6282) (= x6519 (x6862 (+ x3465 4))) (= x4402 (or (and (<= x4024 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6282)) (and (= (<= x6282 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x4024 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x4024 x6282)))))) (and (=> (not x4402) x4007) (=> (and x4402 (and (= (> x2723 18446744073709551615) x2098) (= (x8156 x6519) x2723))) (and (=> (and (and (= (x6862 (+ x2723 x6008)) x7109) (= (< x4024 x7109) x4497) (= x6008 (x6862 (+ 32 x6519)))) (not x2098)) (and (=> (and (and (= x3446 x6960) (= x4928 x3351) (= x387 x3136) (= x3651 x2506) (= x5895 x4159) (= x7922 x1306) (= x1870 x4797) (= x1038 x3022) (= x6087 x586) (= x5941 1) (= x3712 x3938) (= x5634 x1161) (= x6287 x977) (= x6137 x3667)) (not x4497)) x5348) (=> x4497 x3178))) (=> x2098 x4725))))))))))) (=> (not x5369) x4007))))) (=> x8435 x3178))))) (=> (not x7043) x4007))) (=> (not x3568) x1617))))) (=> (and (and (= x3405 x3351) (= x387 x617) (= x1161 x8594) (= 0 x6005) (= x6960 x3206) (= x7978 x2506) (= x29 x977) (= x7423 x1306) (= x6450 x3938) (= x4787 x5895) (= x1022 x4797) (= x586 x8) (= x6137 x438) (= x3022 x7334)) (not x5662)) x6478)))))))))))
(assert (x6021 x7870))
(assert (x6021 x4108))
(assert (x6021 x413))
(assert (= (and x6939 x4965) x4809))
(assert (< 10000 (x8371 64 x2957 3)))
(assert (= x6880 (x4408 (x4463 x1919 x5254 x4545 x6880))))
(assert (= x745 (=> (and (= (x8448 (- x1071 128)) x4919) (= 128 x8089) (= x635 (x6458 x2738)) (= (= 0 x635) x718)) (and (=> (and (not x718) (and x3710 (= x7184 (> x128 18446744073709551615)) (>= x4919 196) (= x2618 51607134309459761954548520284799282329936326410793501951915747293203005440) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6241) (>= x6241 196) (= x2008 x6417) (= false x3637) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4919) (<= x4785 127) (= x513 128) (>= x4540 1) (= x4489 false) (= x4540 (x6458 x3611)) (= x128 (x3232 132)) (= x3306 x7391) (= 1914215 x2861) (>= 127 x4785) (= x4919 x6241) (= x8346 x5931) (= x3710 (= (x2027 132) x4248)))) (and (=> x7184 x6539) (=> (and (not x7184) (and (= x3593 (> x3411 x6241)) (= x3411 (x6862 (+ x128 164))) (= x2124 164))) (and (=> x3593 x8329) (=> (and (and (= x6952 (+ 4 x8346)) (= (> x6241 (+ 31 x6952)) x5868)) (not x3593)) (and (=> (and (and (= (> x6213 18446744073709551615) x5316) (= (x3232 x6952) x6213)) x5868) (and (=> x5316 x6539) (=> (and (and (= x4050 (x6862 (+ x2346 x6213))) (= x3229 (> x4050 x6241)) (= x2346 (+ x6952 32))) (not x5316)) (and (=> x3229 x8329) (=> (and (= x4967 (= x1875 x8301)) (not x3229)) (and (=> (and x4967 (and (= x2676 (x4380 x1179)) (= x7010 (< 0 x3288)) (= x7112 (x4628 x2676 2)) (= (ite (> x2448 0) x7112 (x4375 127 x7112)) x5430) (= (x8448 (- x2448 (mod (ite (< x5430 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3288) (= (x4375 1 x2676) x2448) (= (x8371 64 x7391 3) x1179))) (and (=> (and (not x7010) (and (= x5917 36) (= x1837 false) (= true x3326))) x5736) (=> (and x7010 (and (= (x4628 (+ 31 x5430) 32) x44) (= x1516 (= x5430 0)) (= x1754 (* x44 32)) (= (+ 160 x1754) x7535))) (and (=> x1516 x1753) (=> (and (= x2255 (> x5430 31)) (not x1516)) (and (=> (and (not x2255) (and (= (* 256 x7759) x3792) (= (x4380 x1179) x5851) (= (x4628 x5851 256) x7759))) x1753) (=> (and x2255 (and (or (and x7214 (and (>= x2133 160) (= (x6676 x5200) x4671) (<= x2133 224))) (not x7214)) (and (= (+ x3004 1) x5200) (= x2133 (+ x5430 160)) (= x2416 (x6676 x3004)) (= x7214 (< 192 x2133)) (= (x1874 32 x1179) x3004)))) x3354))))))) (=> (and (not x4967) (and (= x5917 100) (= false x7513) (= true x6049))) x5736))))))) (=> (and (not x5868) (and (= x3005 true) (= 0 x5917) (= x5084 false))) x5736))))))) (=> (and (and (= x3308 x7483) (= x2828 x1912) (= x7033 0) (= true x5177) (= x7793 2) (= false x4289) (= x6490 x3240) (= 0 x5160)) x718) x7857)))))
(assert (x6021 x3970))
(assert (x6021 x422))
(assert (x6021 x8294))
(assert (=> (<= x3544 10000) (= (x8569 x3544) 0)))
(assert (x6021 x589))
(assert (x6021 x6017))
(assert (x5005 x1081))
(assert (x6021 x1756))
(assert (x7582 x7980))
(assert (x6021 x8006))
(assert (= (or x3732 x3962 x2930 x4284 x8125) x1431))
(assert (= (x2668 (x4863 x2495 x250 x7219 x6882 x1933 x4430)) x1933))
(assert (x6021 x812))
(assert (x6021 x4888))
(assert (x6021 x4948))
(assert (x6021 x3009))
(assert (x6021 x6710))
(assert (x6021 x3597))
(assert (x6021 x6016))
(assert (x6021 x8176))
(assert (x6021 x2418))
(assert (not (x3961 (x4863 x1883 x2748 x5837 x2413 x4530 x2755))))
(assert (x6021 x7284))
(assert (x6021 x6273))
(assert (x1960 x4946))
(assert (x6021 x2157))
(assert (x6021 x7768))
(assert (x6021 x131))
(assert (= x3927 (x569 (x6067 x81 x5956 x3927 x743 x3464))))
(assert (=> (>= 10000 x3053) (= 0 (x8569 x3053))))
(assert (= (or x6480 x7538) x8163))
(assert (= (x4378 (x8371 64 x5924 12)) x5924))
(assert (x7457 x1088))
(assert (= (x4408 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671)) x3380))
(assert (= x8326 (x986 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794))))
(assert (x6290 x8200))
(assert (= x1769 (and x6835 (not x6872))))
(assert (= x3347 (x569 (x6067 x1891 x4148 x3347 x3693 x2735))))
(assert (= x8474 (x569 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325))))
(assert (x5269 x1265))
(assert (= (x8371 64 x7753 7) (x8569 (x8371 64 x7753 7))))
(assert (= x2639 (and x8592 (not x6053))))
(assert (x2186 x2235))
(assert (=> (>= 10000 x5975) (= (x8569 x5975) 0)))
(assert (x6021 x2270))
(assert (x1960 x6338))
(assert (x6021 x1797))
(assert (x3961 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (x6021 x6779))
(assert (= (x8569 (+ 1 x1069)) (x8569 x1069)))
(assert (= x1853 (x2668 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401))))
(assert (x6021 x2409))
(assert (not (x3961 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999))))
(assert (x6021 x2460))
(assert (x6021 x4926))
(assert (x6021 x7110))
(assert (x6021 x8297))
(assert (=> (>= 10000 x217) (= 0 (x8569 x217))))
(assert (= (x864 (x1874 x128 x2672)) x128))
(assert (x6021 x3676))
(assert (not (x3961 (x8371 64 x192 36))))
(assert (= x3079 (and x7524 x305)))
(assert (x6021 x1800))
(assert (= (x8569 (x1874 x1911 x1743)) (x1874 x1911 x1743)))
(assert (x7582 x5406))
(assert (x6021 x1402))
(assert (x6021 x7793))
(assert (x6021 x4780))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x4060 36)))
(assert (= (and x5166 x889) x2512))
(assert (x6021 x8020))
(assert (x6021 x6387))
(assert (x6021 x1866))
(assert (= (and x901 x1128) x5294))
(assert (x3961 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (x6021 x825))
(assert (x6021 x7111))
(assert (x6021 x8095))
(assert (x6021 x5302))
(assert (x6021 x421))
(assert (= x1125 (and x121 (not x1906))))
(assert (= (and (not x1075) x6502) x8405))
(assert (x7457 x4087))
(assert (x6021 x741))
(assert (x6021 x5109))
(assert (=> (>= 10000 x4430) (= (x8569 x4430) 0)))
(assert (x2662 x51 32))
(assert (x6021 x7709))
(assert (=> (>= 10000 x3751) (= (x8569 x3751) 0)))
(assert (= (x4378 (x6067 x8390 x6994 x6858 x6332 x8121)) x6994))
(assert (x6021 x3693))
(assert (x2186 x2545))
(assert (= x2440 (x2668 (x6067 x5107 x652 x8297 x5470 x2440))))
(assert (x6021 x5353))
(assert (x2186 x1081))
(assert (x5973 x8471))
(assert (x6021 x1378))
(assert (x2662 x4087 256))
(assert (x2662 x6769 32))
(assert (= (=> (and (= x422 (x8448 (- x310 x7934))) (= x221 (x8371 64 x6304 11)) (= (x5308 x7984) x3541) (= (x8371 64 x8175 3) x3111) (= x4803 (x4380 x3111)) (= (x8448 (- x4095 32)) x1076) (= (x6862 (+ 32 x7934)) x7024) (= (< 0 x1207) x4233) (= (x8371 64 x6304 11) x4933) (= x7934 (x6862 (+ x3339 32))) (= (x4375 1 x4803) x7839) (= x4825 (x6862 (+ x344 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x344) (or (and (<= x344 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x344 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= x344 115792089237316195423570985008687907853269984665640564039457584007913129639841) (<= x344 115792089237316195423570985008687907853269984665640564039457584007913129639773)) (= (x6862 (+ 32 x4080)) x310) (> x310 x7934) (= (x6862 (+ x7024 2)) x4080) (= (x8448 (- x7934 x344)) x4095) (= x6982 (+ x221 2)) (= (x6461 x6982) x3770) (= x98 (x8371 64 x6304 11)) (= x4061 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x344) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x344) (= (x8448 (- x7839 (mod (ite (< x4994 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1207) (= (x4628 x4803 2) x321) (> x7934 x344) (or (<= x344 115792089237316195423570985008687907853269984665640564039457584007913129639773) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x344) (>= x344 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= x344 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x3339 (x6862 (+ x4825 32))) (= (+ 1 x98) x7984) (= x1747 (x8448 (- x422 32))) (= x4994 (ite (< 0 x7839) x321 (x4375 127 x321))) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x344) (>= x344 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x344) (>= x344 115792089237316195423570985008687907853269984665640564039457584007913129639841))) (and (=> (and x4233 (and (< x310 x7684) (<= x310 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x7684 (x6862 (+ x310 (mod (+ 32 x4913) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= x7684 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x310) (= x4913 (* x4791 32)) (= x6634 (= x4994 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x310) (= x153 (x6862 (+ 32 x310))) (= x4791 (x4628 (+ x4994 31) 32)))) (and (=> (and (= x3875 (< 31 x4994)) (not x6634)) (and (=> (and (and (or (and (and (= (x6862 (+ x923 32)) x7013) (= x3892 (x6676 x8349)) (not (< x7013 x4880))) x4892) (not x4892)) (and (= x2826 (x6676 x1069)) (= (x1874 32 x3111) x1069) (= x923 (x6862 (+ 32 x153))) (= (+ 1 x1069) x8349) (= x4892 (< x923 x4880)) (= x4880 (x6862 (+ x4994 x153))))) x3875) x8308) (=> (and (not x3875) (and (= (x4628 x703 256) x7482) (= (x4380 x3111) x703) (= x1375 (* 256 x7482)))) x3571))) (=> x6634 x3571))) (=> (and (not x4233) (and (= x6403 true) (= false x3361) (= 36 x2604))) x6209))) x429))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x192 36)))
(assert (= (and x6252 x7804) x777))
(assert (= (and (not x2165) x8203) x3806))
(assert (x6021 x5706))
(assert (=> (<= x1796 10000) (= (x8569 x1796) 0)))
(assert (= 0 (x8569 4294967295)))
(assert (x7457 x1018))
(assert (< 10000 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)))
(assert (x6021 x799))
(assert (< 10000 (x8371 64 x6524 12)))
(assert (x6021 x5925))
(assert (= (x864 (x8371 64 x8175 5)) 64))
(assert (= x3059 (x4378 (x4863 x5107 x3059 x1297 x2154 x8061 x7331))))
(assert (x6021 x273))
(assert (x6021 x927))
(assert (= x5297 (x4378 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401))))
(assert (= 64 (x864 (x8371 64 x5879 6))))
(assert (x6021 x6382))
(assert (x6021 x5636))
(assert (= (and (not x4877) x2682) x1560))
(assert (x3961 50226347614966974677930900640024090345938424853691168920094736542366852710400))
(assert (x7457 x2676))
(assert (x6021 x3057))
(assert (x6021 x7151))
(assert (x6021 x2537))
(assert (< (x6067 x1883 x5624 x7756 x4567 x683) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x1311))
(assert (x6021 x8422))
(assert (x6021 x8551))
(assert (x2662 x291 2))
(assert (x6021 x3768))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829)))
(assert (= (x864 (x1874 x112 x6919)) x112))
(assert (=> (<= x3194 10000) (= 0 (x8569 x3194))))
(assert (= (x8569 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)) (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)))
(assert (x6021 x81))
(assert (= x779 (and x3554 (not x3427))))
(assert (< (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3847 (or (and x4112 x4798) (and x4507 x7798))))
(assert (= (and (not x610) x1688) x7778))
(assert (x6021 x1965))
(assert (=> (<= x2374 10000) (= (x8569 x2374) 0)))
(assert (= x7974 (and x5460 x2096)))
(assert (= (x8569 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850)) (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850)))
(assert (= (and (not x653) x5682) x6364))
(assert (x2662 x400 256))
(assert (x6021 x8111))
(assert (x6021 x6101))
(assert (= x6886 (and x3744 (not x614))))
(assert (x6021 x2233))
(assert (x770 x1832))
(assert (x6021 x6340))
(assert (= (=> (= x493 (= x2853 0)) (and (=> (and x493 (and (= x6883 x8394) (= x1900 x6878) (= x7534 x352) (= x2609 x225) (= x8310 x2371) (= x3828 x3255) (= x7627 x8181) (= x3319 2) (= x3356 x4737) (= x7763 false) (= x2600 x3020) (= x4848 x6337) (= x2078 x4510) (= x6299 x4670) (= x145 x2796) (= 0 x7153) (= true x2808))) x4830) (=> (and (and (= x8546 x4125) (= x2914 x5086) (= x5749 x7968) (= x450 x3089) (= x8328 x2110) (= x4358 x944) (= x5626 x8496) (= x2513 x6198) (= x4761 x4702) (= x5002 x2361) (= x6432 x8429) (= x1768 x6522) (= x7806 x355)) (not x493)) x177))) x349))
(assert (x6021 x8314))
(assert (=> (<= x7958 10000) (= (x8569 x7958) 0)))
(assert (= (=> (and (= x4859 false) (= 36 x5160) (= x1912 x2828) (= true x3237) (= x3308 x7483) (= x3240 x6490) (= x5902 2) (= x7033 0)) x7857) x2312))
(assert (x2662 x6017 256))
(assert (x6021 x6018))
(assert (x6021 x1858))
(assert (x2662 x1529 256))
(assert (x6021 x4052))
(assert (x6021 x1166))
(assert (x1960 x6324))
(assert (x6517 x8471 2))
(assert (= x671 (and (not x4892) x1954)))
(assert (= x636 (x864 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971))))
(assert (x6021 x6259))
(assert (x1635 32 (ite (not (= x2753 0)) 1 0)))
(assert (= (or (and (not x4755) x2973) (and (not x3323) x4662) (and x3151 (not x722))) x1943))
(assert (= (x2668 (x6067 x8390 x6994 x6858 x6332 x8121)) x8121))
(assert (= (and (not x3266) x7902) x543))
(assert (= (and x6730 x7090) x7240))
(assert (x6021 x2853))
(assert (x6021 x5385))
(assert (x6021 x4875))
(assert (< (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x7826))
(assert (x7457 x6739))
(assert (= (x8569 (x8371 x1409 x3287 x7102)) (x8371 x1409 x3287 x7102)))
(assert (x6021 x8135))
(assert (x7457 x2291))
(assert (x1960 x1620))
(assert (x6021 x530))
(assert (x6021 x4234))
(assert (= (x4378 (x3105 x8390 x663 x36 x6382 x131 x3931 x6591)) x663))
(assert (= (=> (and (or (not x7766) x7766) (= (= x1020 0) x7766)) x527) x2368))
(assert (x6021 x1283))
(assert (= x8430 (and x3309 (not x3353))))
(assert (x6021 x6331))
(assert (x7457 x7430))
(assert (= (or x2698 x4522) x1564))
(assert (x6021 x2370))
(assert (x2662 x4802 256))
(assert (x7457 x3030))
(assert (> (x8371 64 x3349 11) 10000))
(assert (=> (>= 10000 x1371) (= (x8569 x1371) 0)))
(assert (not (x3961 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509))))
(assert (= (x4378 (x6067 x81 x5956 x3927 x743 x3464)) x5956))
(assert (= x8304 (x569 (x6067 x8295 x2784 x8304 x6096 x7098))))
(assert (= (and x6307 x2144) x4517))
(assert (= (and x79 x2660) x5977))
(assert (x6021 x4886))
(assert (x6021 x3476))
(assert (x6021 x6970))
(assert (= x7970 (x4378 (x8371 64 x7970 100))))
(assert (not (x3961 (x4863 x81 x7614 x3028 x8276 x1764 x4340))))
(assert (= (x4378 (x6067 x3841 x2108 x7282 x1323 x3666)) x2108))
(assert (x6021 x1741))
(assert (x6021 x1642))
(assert (=> (>= 10000 x11) (= (x8569 x11) 0)))
(assert (not (x3961 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464))))
(assert (x6021 x1754))
(assert (= x5399 (x569 (x4463 x5107 x1599 x5399 x4359))))
(assert (x6021 x4705))
(assert (x6021 x1624))
(assert (x2662 x4032 256))
(assert (= (or x3913 x2297 x1793 x3990 x8545 x4351 x4818 x7537 x6097 x7961 x8115 x1972 x2822 x6275 x6368 x6926 x6371 x6610 x2678 x6418 x2101 x379 x5309 x4561 x4677 x5810 x5544) x7661))
(assert (x6021 x6151))
(assert (x6021 x3934))
(assert (= (x4408 (x4463 x128 x8018 x3984 x1135)) x1135))
(assert (x6021 x2833))
(assert (=> (>= 10000 x5655) (= (x8569 x5655) 0)))
(assert (=> (<= x538 10000) (= 0 (x8569 x538))))
(assert (x6021 x1528))
(assert (= x5163 (and x3434 x4223)))
(assert (x6021 x36))
(assert (x6021 x1602))
(assert (= (and x4719 (not x5325)) x8203))
(assert (= x7318 (or x6807 x738)))
(assert (x6021 x1682))
(assert (x6021 x3827))
(assert (= x987 (x569 (x8371 x112 x7510 x987))))
(assert (= x7127 x5120))
(assert (x6021 x5637))
(assert (= (and x2162 x1299) x5561))
(assert (x6021 x5891))
(assert (x6021 x362))
(assert (= x1487 (and (not x7481) x2967)))
(assert (= (and x3627 x5152) x5587))
(assert (x6021 x3340))
(assert (x6021 x233))
(assert (x6021 x8104))
(assert (= x1148 (x569 (x8371 x3841 x4840 x1148))))
(assert (=> (>= 10000 x4567) (= 0 (x8569 x4567))))
(assert (x6021 x5296))
(assert (x6021 x4547))
(assert (= (=> (and (= 0 x7143) (= false x8440) (= x1605 true)) x6106) x5797))
(assert (x2662 x6166 128))
(assert (x6021 x1887))
(assert (x6021 x1834))
(assert (=> (<= x2859 10000) (= (x8569 x2859) 0)))
(assert (not (x3961 (x8371 x128 x7890 x4531))))
(assert (x6021 x3032))
(assert (x7457 x59))
(assert (=> (>= 10000 x6591) (= 0 (x8569 x6591))))
(assert (x6021 x8049))
(assert (= (x864 (x1874 x636 x5609)) x636))
(assert (x6021 x4245))
(assert (x6021 x8574))
(assert (not (x3961 (x4863 x8295 x8185 x6925 x979 x5754 x2033))))
(assert (= x6798 (and x1574 x843)))
(assert (= (x864 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371)) x7786))
(assert (x5973 x4803))
(assert (x6021 x1056))
(assert (x7457 x6624))
(assert (x6021 x7976))
(assert (= x3841 (x864 (x4863 x3841 x4962 x1975 x1342 x6300 x7068))))
(assert (= (and (not x4075) x7565) x3047))
(assert (x6021 x7462))
(assert (x770 x2010))
(assert (x1960 x5160))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x6604 2)))
(assert (= (and x2837 x8567) x7747))
(assert (= (or x7224 x7723) x749))
(assert (= x6501 (and x916 (not x3850))))
(assert (=> (<= x3464 10000) (= (x8569 x3464) 0)))
(assert (x6021 x2256))
(assert (= x5849 (=> (and (and (= x6566 (x5105 x8076)) (= x6117 (x6862 (+ x4209 128))) (= (x6862 (+ x6836 32)) x1086) (= (x8371 64 x2008 (ite (>= 32 x1891) x6104 (ite (<= x1891 64) x2684 (ite (>= 96 x1891) x7540 (ite (<= x1891 128) x7449 (ite (<= x1891 160) x5213 (ite (<= x1891 192) x5567 x6398))))))) x7002) (= (x4863 x1891 x2624 x6776 x7509 x4204 x6170) x5213) (= (x5105 x2695) x4245) (= x5574 (x5105 x1592)) (= x2173 (x6862 (+ 64 x4209))) (= x7294 (x5105 x5437)) (= (x6862 (+ 64 x4209)) x5051) (= x2735 (x5105 x4793)) (= x6971 (x5105 x4209)) (= (x5105 x6530) x3693) (= x2695 (x6862 (+ x4209 64))) (= (x5105 x6276) x3725) (= x7741 (- x1891 32)) (= (x8371 x1891 x117 x8176) x2684) (= x5567 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183)) (= x318 (x6862 (+ 96 x4209))) (= (x6862 (+ x4209 160)) x6836) (= x8585 (x5105 x1858)) (= (x6067 x1891 x4148 x3347 x3693 x2735) x7449) (= x3289 (x6862 (+ x4209 128))) (= (x3631 0) x4246) (= (x6862 (+ x4209 32)) x2178) (= (x6862 (+ 32 x4209)) x4414) (= (x6862 (+ 32 x4209)) x4693) (= (x5105 x5911) x1145) (= (x6862 (+ x4209 32)) x5911) (= (x6862 (+ x4209 32)) x6506) (= x7509 (x5105 x471)) (= (x5105 x8410) x1823) (= (x5105 x7383) x7072) (= (x5105 x4693) x6643) (= (x2321 x7535) x4237) (= x1447 (x6067 x7741 x6208 x6643 x6566 x3171)) (= (x6862 (+ x4209 32)) x6257) (= x7286 (x6862 (+ x4209 32))) (= x6104 (x1874 x1891 x3763)) (= (x6862 (+ 128 x4209)) x4487) (= x3171 (x5105 x4142)) (= x1891 (x8448 (- x4635 x4209))) (= (x6862 (+ 32 x1752)) x4635) (= x8290 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)) (= x3763 (x5105 x4209)) (= (x4463 x7741 x4301 x1145 x5328) x2832) (= x3347 (x5105 x2178)) (= x7540 (x4463 x1891 x6971 x5481 x4245)) (= x1955 (x6862 (+ 160 x4209))) (= (x6862 (+ 64 x4209)) x8076) (= x1640 (x5105 x4209)) (= x7938 (x8371 x7741 x1640 x6441)) (= (x6862 (+ x4209 32)) x5437) (= x6208 (x5105 x4209)) (= x1495 (x5105 x4209)) (= (x5105 x7452) x3053) (= x6530 (x6862 (+ x4209 64))) (= x2750 (x4863 x7741 x1138 x7294 x4427 x6476 x4714)) (= (x5105 x4209) x1646) (= (x6862 (+ 96 x4209)) x1592) (= x6276 (x6862 (+ 64 x4209))) (= x7452 (x6862 (+ 32 x4209))) (= (x5105 x7569) x3736) (= (x6862 (+ x4209 64)) x6027) (= x1858 (x6862 (+ 160 x4209))) (= x4301 (x5105 x4209)) (= x692 (x6862 (+ x4209 32))) (>= 224 x1891) (= (x5105 x4414) x5481) (= (x5105 x4815) x6254) (= (x5105 x4209) x6030) (= (x5105 x4209) x1138) (= x471 (x6862 (+ x4209 64))) (= (x5105 x5051) x740) (= (x5105 x318) x4204) (= (x6862 (+ x4209 96)) x7383) (= (x6862 (+ x4254 x4209)) x1752) (= (x5105 x778) x6441) (= (x5105 x6027) x4427) (= x6398 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736)) (= (x6862 (+ x4209 x4254)) x5972) (= x8176 (x5105 x7286)) (= (x5105 x6117) x4714) (<= 32 x1891) (= x8325 (x5105 x1422)) (= x4815 (x6862 (+ x4209 64))) (= x5328 (x5105 x2173)) (= (x6862 (+ x4209 96)) x4142) (= x7569 (x6862 (+ 192 x4209))) (= x2624 (x5105 x4209)) (= x8410 (x6862 (+ 128 x4209))) (= (x5105 x6506) x6776) (= (x5105 x6257) x8474) (= x7321 (x6862 (+ x4209 96))) (= x2596 (x5105 x5)) (= x8216 (x5105 x2424)) (= x6688 (x5105 x4209)) (= (ite (= x7741 0) x4246 (ite (>= 32 x7741) x3494 (ite (>= 64 x7741) x7938 (ite (>= 96 x7741) x2832 (ite (<= x7741 128) x1447 (ite (<= x7741 160) x2750 x8290)))))) x8482) (= (> x4237 0) x1504) (= x4148 (x5105 x4209)) (= (x5105 x3289) x7671) (= x1422 (x6862 (+ 160 x4209))) (= (x6862 (+ x4209 96)) x4793) (= x522 (x6862 (+ 128 x4209))) (= (x5105 x522) x6170) (= (x6862 (+ 32 x4209)) x778) (= (x6862 (+ 96 x4209)) x5) (= x2424 (x6862 (+ 32 x4209))) (= x6933 (x5105 x4487)) (= (x5105 x1955) x1183) (= x117 (x5105 x4209)) (= x6476 (x5105 x7321)) (= x3494 (x1874 x7741 x6688))) (or (and (and (or (and x6346 (and (and (= (x6862 (+ 32 x1956)) x5095) (= (x6465 x5095) x196) (= (> x4237 64) x2876) (= (x6862 (+ 32 x1086)) x656)) (or (not x2876) (and (and (and (= (x6862 (+ 64 x1956)) x1048) (= x5335 (x1233 x1048)) (= x6514 (x6862 (+ 64 x1086))) (= (< 96 x4237) x2099)) (or (not x2099) (and x2099 (and (= (x6862 (+ 96 x1956)) x6292) (= (x6862 (+ 96 x1086)) x4826) (= (x3472 x6292) x655) (<= x4237 128))))) x2876)))) (not x6346)) (and (= x40 (x5737 x1956)) (= x6346 (< 32 x4237)))) x1504) (not x1504))) x3898)))
(assert (= (x4378 (x1874 x1883 x3524)) x3524))
(assert (not (x3961 (x8371 x81 x161 x3096))))
(assert (not (x3961 (x8371 64 x5635 2))))
(assert (= (x4378 (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850)) x5104))
(assert (= (x864 (x8371 x8390 x579 x1433)) x8390))
(assert (x6021 x4477))
(assert (= (x4408 (x4863 x2495 x250 x7219 x6882 x1933 x4430)) x6882))
(assert (x6021 x5016))
(assert (x6021 x4788))
(assert (x6021 x3878))
(assert (= (x4408 (x4863 x7741 x1138 x7294 x4427 x6476 x4714)) x4427))
(assert (= x6613 (and x4550 x8472)))
(assert (x6021 x7554))
(assert (= (x569 (x8371 64 x2516 36)) 36))
(assert (x6021 x4062))
(assert (x6021 x7100))
(assert (= (or x1295 x5292 x5211 x7778 x7442) x371))
(assert (x6021 x6693))
(assert (=> (>= 10000 x125) (= 0 (x8569 x125))))
(assert (x6021 x5382))
(assert (x6021 x8423))
(assert (x1960 x8490))
(assert (not (x3961 (x4863 x636 x5379 x256 x5272 x4150 x8142))))
(assert (= x6217 (and (not x4383) x3656)))
(assert (= (x2668 (x6067 x7741 x6208 x6643 x6566 x3171)) x3171))
(assert (x7457 x6273))
(assert (x6021 x3694))
(assert (x6021 x1907))
(assert (x6021 x4228))
(assert (x7582 (+ x2396 31)))
(assert (= (x4408 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)) x2815))
(assert (x6021 x8276))
(assert (x6021 x3838))
(assert (x6021 x8046))
(assert (=> (>= 10000 x758) (= (x8569 x758) 0)))
(assert (= x1475 (and x3691 (not x7930))))
(assert (x6021 x7614))
(assert (x6021 x8441))
(assert (= (or x1564 x4720) x5810))
(assert (=> (<= x7890 10000) (= (x8569 x7890) 0)))
(assert (= (and x4695 (not x3956)) x813))
(assert (x770 x2326))
(assert (not (x3961 (x4463 x7786 x2374 x5271 x5708))))
(assert (= x3877 (and x2751 x1395)))
(assert (> (x4863 x1883 x2748 x5837 x2413 x4530 x2755) 10000))
(assert (x6021 x2584))
(assert (x6021 x2829))
(assert (= (x4408 (x4463 x6151 x2347 x739 x8571)) x8571))
(assert (= x7420 (and (not x5276) x49)))
(assert (x1960 x8169))
(assert (x6021 x465))
(assert (=> (>= 10000 x4840) (= 0 (x8569 x4840))))
(assert (x6021 x7920))
(assert (= (and (not x5817) x6641) x4976))
(assert (< (x8371 x6151 x8188 x1872) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x6506))
(assert (x6021 x3891))
(assert (x6021 x5617))
(assert (x6021 x5731))
(assert (x6290 x2881))
(assert (x6021 x236))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x1891 x6030 x3053 x6254 x2596 x1823 x1183)))
(assert (=> (>= 10000 x7627) (= (x8569 x7627) 0)))
(assert (x6021 x828))
(assert (x6021 x1796))
(assert (= x6151 (x864 (x4863 x6151 x876 x1903 x6351 x2911 x6088))))
(assert (= (x4463 x128 x8018 x3984 x1135) (x8569 (x4463 x128 x8018 x3984 x1135))))
(assert (= (x1880 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671)) x3671))
(assert (= (or (and x7815 x426) (and x2098 x1986) (and x2454 x588)) x1062))
(assert (=> (>= 10000 x8018) (= 0 (x8569 x8018))))
(assert (=> (>= 10000 x5182) (= (x8569 x5182) 0)))
(assert (x6021 x3562))
(assert (x6021 x6940))
(assert (not (x3961 (x1874 32 x384))))
(assert (= (x8569 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (x6021 x5336))
(assert (= x1089 (=> (and (= x4923 (= 0 x1947)) (or (and (and (= x8175 x3) (= x5464 (x3868 x7627)) (<= x1999 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1999 (+ x2906 x6979)) (>= x1999 0) (= x7479 x3894) (= x7473 x7389) (= x6911 x2738) (= x8192 x873) (= x1999 x3615) (= x3008 x1875) (= (- x5464 x2906) x1197) (= x6833 x423) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6979 x2906)) (= x3331 x5462) (= x565 x1947) (= x6927 x6490) (= x2906 (ite (= 0 x1947) x6433 0)) (= x6979 (x1746 x3611)) (= x5798 x6782) (= x4367 x3308) (= x7610 x1912) (= x1474 x1130)) x4923) (and (and (= x2738 x6911) (= x3 x8175) (= x423 x6833) (= x3331 x5462) (= x7473 x7389) (= x8192 x873) (= x4367 x3308) (= x3008 x1875) (= x1947 x565) (= x6782 x5798) (= x7479 x3894) (= x1474 x1130) (= x7610 x1912) (= x6927 x6490)) (not x4923)))) x3149)))
(assert (= x6973 (and (not x8529) x4328)))
(assert (x6021 x1458))
(assert (= (x4378 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)) x1495))
(assert (= (and x1452 x6748) x6184))
(assert (x6021 x4571))
(assert (x6021 x6559))
(assert (= (x4378 (x8371 64 1 x7356)) 1))
(assert (= x2495 (x864 (x4463 x2495 x1522 x3977 x5655))))
(assert (x6021 x4041))
(assert (x6021 x736))
(assert (x6021 x6150))
(assert (not (x3961 (x4463 x2495 x1522 x3977 x5655))))
(assert (= (x864 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829)) x1911))
(assert (x6021 x6598))
(assert (x6021 x1994))
(assert (= (=> (and (= false x4389) (= x8270 0) (= true x2439)) x7126) x5672))
(assert (x6021 x6892))
(assert (x6021 x3513))
(assert (x1960 x1320))
(assert (x6021 x8421))
(assert (x6021 x977))
(assert (= (and (not x1185) x4871) x573))
(assert (x6021 x7742))
(assert (x6021 x3241))
(assert (= (and x3556 x3985) x5317))
(assert (x6021 x6842))
(assert (x2626 (ite (not (= x6155 0)) 1 0)))
(assert (x6021 x550))
(assert (x6021 x7243))
(assert (x2186 x403))
(assert (< (x4863 x8295 x8185 x6925 x979 x5754 x2033) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3522))
(assert (x6021 x1218))
(assert (= x6818 (and x922 x6823)))
(assert (=> (<= x7510 10000) (= 0 (x8569 x7510))))
(assert (= x1646 (x4378 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736))))
(assert (= (x8569 35477284059277649309253622239531857712935939529143554018288893216769000107873) 0))
(assert (=> (>= 10000 x2006) (= (x8569 x2006) 0)))
(assert (= x8051 (or (and x731 x4541) (and x1997 x1744))))
(assert (x2662 x59 128))
(assert (x2662 x2830 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x2221))
(assert (=> (>= 10000 x4498) (= 0 (x8569 x4498))))
(assert (> (x8371 64 x6632 (ite (>= 32 x1911) x1094 (ite (>= 64 x1911) x6429 (ite (>= 96 x1911) x6204 (ite (>= 128 x1911) x61 (ite (>= 160 x1911) x1250 (ite (<= x1911 192) x6248 x6152))))))) 10000))
(assert (= (and x3189 (not x6346)) x6619))
(assert (x6021 x8407))
(assert (x6021 x6858))
(assert (not (x3961 (x4463 x128 x8018 x3984 x1135))))
(assert (x6021 x5498))
(assert (= (and x5818 x3064) x4744))
(assert (= (or x7588 x3302 x5494) x8559))
(assert (= (x8569 (x1874 x1919 x4645)) (x1874 x1919 x4645)))
(assert (=> (>= 10000 x3927) (= (x8569 x3927) 0)))
(assert (= x6642 (and x667 (not x1709))))
(assert (= (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424) (x8569 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424))))
(assert (x6021 x4741))
(assert (=> (<= x4519 10000) (= (x8569 x4519) 0)))
(assert (x6021 x3549))
(assert (= (x8569 (x8371 x2495 x911 x634)) (x8371 x2495 x911 x634)))
(assert (= (x6067 x6134 x7827 x3042 x5877 x4498) (x8569 (x6067 x6134 x7827 x3042 x5877 x4498))))
(assert (> (x6067 x8295 x2784 x8304 x6096 x7098) 10000))
(assert (x6021 x5882))
(assert (x3961 14609135308879574245051756109060786979925523914932377087145621868633940557824))
(assert (= (x8569 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742)) (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742)))
(assert (=> (<= x5721 10000) (= (x8569 x5721) 0)))
(assert (= x7372 (x569 (x4863 x1409 x4788 x7372 x6764 x5069 x3607))))
(assert (x6021 x911))
(assert (= x636 (x864 (x8371 x636 x862 x7005))))
(assert (= x8212 (or x744 x3634)))
(assert (x6021 x2579))
(assert (= (x569 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)) x1439))
(assert (=> (<= x6332 10000) (= (x8569 x6332) 0)))
(assert (= (=> (and (= x2213 x3470) (= x8258 x3308) (= x994 x6490) (= x7959 x6414) (= (x4375 255 x4906) x2213) (= 2 x2028) (= x1912 x406) (= x1054 0)) x3158) x7323))
(assert (and (= (x4808 3 3) 9) (= (x4808 9 3) 27) (= 81 (x4808 27 3)) (= 81 (x4808 9 9))))
(assert (x6021 x1296))
(assert (x6021 x7265))
(assert (=> (<= x7659 10000) (= 0 (x8569 x7659))))
(assert (x6021 x586))
(assert (= (and x691 x5239) x91))
(assert (x6021 x2644))
(assert (= x7961 (and x7635 x5666)))
(assert (x6021 x1207))
(assert (x6021 x8227))
(assert (=> (>= 10000 x4409) (= (x8569 x4409) 0)))
(assert (x6021 x3283))
(assert (=> (<= x825 10000) (= (x8569 x825) 0)))
(assert (< 10000 (x8371 x3841 x4840 x1148)))
(assert (= (x4408 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838)) x8197))
(assert (x6021 x6673))
(assert (x6021 x5852))
(assert (=> (>= 10000 x3441) (= (x8569 x3441) 0)))
(assert (not (x3961 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801))))
(assert (= x5819 (or x2563 x1888 x2572 x6818 x419 x5587 x3147 x7892 x8085 x7203 x4029)))
(assert (x6021 x4711))
(assert (x7457 x4879))
(assert (=> (<= x6351 10000) (= 0 (x8569 x6351))))
(assert (x6021 x945))
(assert (x6021 x3328))
(assert (x6021 x830))
(assert (= (and x3235 (not x1504)) x933))
(assert (x6021 x987))
(assert (= x6359 (and x2875 x4748)))
(assert (x6021 x5231))
(assert (x6021 x8598))
(assert (= x170 (and x1346 (not x1258))))
(assert (= x7070 (x4378 (x6067 x128 x7070 x5224 x6130 x3885))))
(assert (x2186 x4032))
(assert (= (x8371 64 x1859 11) (x8569 (x8371 64 x1859 11))))
(assert (x6021 x6166))
(assert (= x3500 (and (not x7915) x248)))
(assert (= x6441 (x569 (x8371 x7741 x1640 x6441))))
(assert (x6021 x6865))
(assert (> (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850) 10000))
(assert (< (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3900))
(assert (x2186 x1607))
(assert (x2662 x8047 256))
(assert (x6021 x7648))
(assert (= (or x3384 x3716) x793))
(assert (=> (>= 10000 x1903) (= 0 (x8569 x1903))))
(assert (x6021 x1991))
(assert (= (x4408 (x4463 x1409 x5975 x4026 x1178)) x1178))
(assert (= (x4463 x1891 x6971 x5481 x4245) (x8569 (x4463 x1891 x6971 x5481 x4245))))
(assert (= (x8371 64 x6554 36) (x8569 (x8371 64 x6554 36))))
(assert (x6021 x7156))
(assert (= x1940 x5003))
(assert (x2662 x4624 256))
(assert (x6021 x438))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x7391 3)))
(assert (x6021 x8126))
(assert (= (or x7149 x6830) x8248))
(assert (= (or x8516 x2814) x439))
(assert (x6021 x8113))
(assert (= x7786 (x864 (x8371 x7786 x2579 x6442))))
(assert (x7582 x291))
(assert (=> (>= 10000 x3403) (= 0 (x8569 x3403))))
(assert (= x7633 (or (and x5355 x8435) (and x3512 x4497) (and x3358 x7148))))
(assert (x6021 x8330))
(assert (x6021 x1902))
(assert (= (x1880 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)) x8325))
(assert (x6021 x842))
(assert (x6021 x3859))
(assert (= x7947 (and x8573 (not x4923))))
(assert (x6021 x2068))
(assert (= (and x4165 x8559) x6718))
(assert (=> (>= 10000 x6995) (= 0 (x8569 x6995))))
(assert (x1960 x6615))
(assert (= (x4378 (x8371 x2495 x911 x634)) x911))
(assert (=> (<= x2434 10000) (= (x8569 x2434) 0)))
(assert (=> (>= 10000 x7019) (= (x8569 x7019) 0)))
(assert (=> (>= 10000 x3117) (= 0 (x8569 x3117))))
(assert (x7457 x1890))
(assert (x6021 x3190))
(assert (= (or x4464 x3538) x7067))
(assert (< 10000 (x4463 x5107 x1599 x5399 x4359)))
(assert (x6021 x492))
(assert (x6021 x883))
(assert (x6021 x1673))
(assert (= (=> (and (= (= 0 x4227) x4518) (or (and (and (= x899 x1609) (= x4461 x8524) (= x7248 x5110) (= x333 x4795) (= x1283 x4954) (= x4520 x7716) (= x1208 x7501) (= x680 x7768) (= x7325 x3032) (= x1581 x1427) (= x5514 x572) (= x71 x2524) (= x258 x4264) (= x4227 x396) (= x4309 x3708)) (not x4518)) (and x4518 (and (= x1208 x7501) (= x5514 x572) (= x3221 (+ x1251 x2919)) (= x4309 x3708) (= x7325 x3032) (<= 0 x3221) (= (- x6189 x1251) x172) (= x4795 x333) (= x7768 x680) (= x258 x4264) (= (x747 x8301) x2919) (= x5110 x7248) (= x1581 x1427) (= x396 x4227) (= x899 x1609) (= (ite (= 0 x4227) x2652 0) x1251) (= x4520 x7716) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3221) (= x4461 x8524) (= x6189 (x4115 x4737)) (= x2524 x71) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1251 x2919)) (= x1283 x4954) (= x3454 x3221))))) x8414) x5641))
(assert (x6021 x3342))
(assert (x2186 x6166))
(assert (x7457 1))
(assert (x6021 x8062))
(assert (= x281 (x4378 (x8371 64 x281 36))))
(assert (x2662 x7162 32))
(assert (x6021 x6305))
(assert (= (x569 (x8371 64 x4807 100)) 100))
(assert (x6021 x2884))
(assert (=> (<= x8056 10000) (= (x8569 x8056) 0)))
(assert (=> (>= 10000 x1323) (= (x8569 x1323) 0)))
(assert (x6021 x6280))
(assert (x6021 x5627))
(assert (x6021 x6231))
(assert (x6021 x4529))
(assert (=> (>= 10000 x8312) (= (x8569 x8312) 0)))
(assert (x6021 x7011))
(assert (= (=> (= (+ x4504 292) x1021) x3067) x3461))
(assert (x6021 x4430))
(assert (x6021 x6927))
(assert (= (and x3872 x7066) x1012))
(assert (x6021 x7135))
(assert (x6021 x8078))
(assert (x6021 x3122))
(assert (= x4962 (x4378 (x4863 x3841 x4962 x1975 x1342 x6300 x7068))))
(assert (= (and x6762 (not x2109)) x5102))
(assert (< 10000 (x8371 64 x603 2)))
(assert (> (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736) 10000))
(assert (< 10000 (x8371 64 x192 36)))
(assert (= (=> (and (= x6299 x4670) (= x2796 x145) (= 0 x7153) (= x8310 x2371) (= x3828 x3255) (= true x6206) (= x7534 x352) (= x6883 x8394) (= x6337 x4848) (= x4737 x3356) (= 2 x135) (= x2600 x3020) (= x7627 x8181) (= false x2484) (= x2609 x225) (= x2078 x4510) (= x1900 x6878)) x4830) x163))
(assert (x6021 x1582))
(assert (= x1651 (and x2812 x4374)))
(assert (x6021 x824))
(assert (> (x8371 x1911 x5721 x7539) 10000))
(assert (x6021 x7200))
(assert (x6021 x241))
(assert (= x1679 (and x7301 x6025)))
(assert (x6021 x4170))
(assert (x6021 x2183))
(assert (= (and (not x6766) x2946) x7412))
(assert (x6021 x5674))
(assert (x6021 x5412))
(assert (=> (>= 10000 x4301) (= 0 (x8569 x4301))))
(assert (x6021 x2078))
(assert (x6021 x7502))
(assert (x6021 x6908))
(assert (x6021 x6959))
(assert (=> (>= 10000 x6566) (= 0 (x8569 x6566))))
(assert (= x1756 (x4378 (x4863 x112 x1756 x6665 x2535 x7887 x2377))))
(assert (x6021 x7482))
(assert (= (=> (= (+ x5194 292) x7916) x3614) x5478))
(assert (= x742 x5370))
(assert (= x6809 (and x7781 (not x14))))
(assert (x6021 x7071))
(assert (> (x1874 x62 x306) 10000))
(assert (=> (<= x3432 10000) (= 0 (x8569 x3432))))
(assert (=> (>= 10000 x2762) (= 0 (x8569 x2762))))
(assert (x6021 x1123))
(assert (x6021 x962))
(assert (= (x8569 18446744073709551615) 0))
(assert (x6021 x2931))
(assert (x6021 x1853))
(assert (x6021 x224))
(assert (x6021 x8253))
(assert (= x4881 (and (not x4798) x4112)))
(assert (=> (<= x6669 10000) (= 0 (x8569 x6669))))
(assert (x6021 x4335))
(assert (x7457 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x6021 x8390))
(assert (x6021 x5768))
(assert (= (and x4005 (not x3660)) x5773))
(assert (=> (>= 10000 x911) (= (x8569 x911) 0)))
(assert (x6021 x4199))
(assert (x6021 x1081))
(assert (= x3013 (or x3778 x371)))
(assert (> (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464) 10000))
(assert (< (x4463 x5107 x1599 x5399 x4359) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x864 (x8371 64 x4670 36)) 64))
(assert (x6021 x1407))
(assert (= (and (not x7184) x1382) x4707))
(assert (x6021 x4882))
(assert (x6290 x363))
(assert (= (x864 (x4863 x636 x5379 x256 x5272 x4150 x8142)) x636))
(assert (= (x8371 64 x4807 100) (x8569 (x8371 64 x4807 100))))
(assert (x6021 x2755))
(assert (x6021 x758))
(assert (x6021 x3679))
(assert (= (and (not x8532) x1293) x3151))
(assert (= (x864 (x6067 x1911 x3544 x5997 x2878 x5969)) x1911))
(assert (> (x1874 32 103) 10000))
(assert (x6021 x470))
(assert (= x2432 (and x8019 (not x3721))))
(assert (x6021 x5069))
(assert (x6021 x7564))
(assert (x2662 x7717 32))
(assert (x6021 x8182))
(assert (x6021 x479))
(assert (x6021 x3394))
(assert (= (x569 (x8371 64 x603 2)) 2))
(assert (= (x569 (x8371 x62 x6998 x2947)) x2947))
(assert (x7457 x1546))
(assert (x6021 x3960))
(assert (x2186 x8471))
(assert (x6021 x3544))
(assert (x6021 x6046))
(assert (x6021 x3879))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x5107 x8206 x4569)))
(assert (= x3666 (x2668 (x6067 x3841 x2108 x7282 x1323 x3666))))
(assert (= (and x4526 x2622) x6787))
(assert (= (x4378 (x4463 x1911 x1105 x5420 x538)) x1105))
(assert (> (x4863 x81 x7614 x3028 x8276 x1764 x4340) 10000))
(assert (x7457 x4981))
(assert (x6021 x8410))
(assert (= (x4408 (x4463 x8390 x3088 x2679 x2045)) x2045))
(assert (=> (<= x7331 10000) (= (x8569 x7331) 0)))
(assert (x6021 x77))
(assert (= x917 (x569 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230))))
(assert (= 0 (x569 (x8371 64 x1130 0))))
(assert (x6021 x7965))
(assert (= x2599 (or x201 x2867)))
(assert (x6021 x2458))
(assert (x6021 x6879))
(assert (x6021 x2396))
(assert (=> (<= x8197 10000) (= (x8569 x8197) 0)))
(assert (x6021 x1063))
(assert (=> (>= 10000 x197) (= 0 (x8569 x197))))
(assert (=> (<= x4110 10000) (= (x8569 x4110) 0)))
(assert (= (x864 (x8371 64 x3255 3)) 64))
(assert (x7457 x8314))
(assert (x6021 x3003))
(assert (= x901 (or x990 x4416)))
(assert (x6021 x2022))
(assert (x6021 x5520))
(assert (= x3553 (or x4454 x5835)))
(assert (x6021 x5892))
(assert (x2186 x536))
(assert (x6021 x7491))
(assert (x6021 x3379))
(assert (x6021 x6699))
(assert (x6021 x6137))
(assert (> (x1874 x3841 x462) 10000))
(assert (x6021 x7102))
(assert (x6021 x7510))
(assert (x6021 x230))
(assert (x6021 x3612))
(assert (= x8381 (x4378 (x4863 x6134 x8381 x8081 x3450 x3891 x7263))))
(assert (x6290 x414))
(assert (x6021 x3185))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 1 x7356)))
(assert (= (x8569 35477284059277649309253622239531857712935939630608236286772267603529442882419) 0))
(assert (= x1817 (=> (and (= x8394 x4243) (= x4176 (x4375 255 x6624)) (= 2 x3246) (= x6991 x3255) (= x3020 x3743) (= x947 x2371) (= x4534 x4757) (= x4290 x145) (= x3471 x225) (= x4176 x2339) (= x2795 x4737) (= 0 x3489) (= x4848 x4137) (= x5498 x7534) (= x1900 x5289) (= x7627 x1380) (= x2078 x8526)) x3330)))
(assert (= (x864 (x6067 x8295 x2784 x8304 x6096 x7098)) x8295))
(assert (x6021 x7291))
(assert (= (x2668 (x6067 x6151 x5373 x4342 x8092 x2907)) x2907))
(assert (= x4273 (and x8420 x3720)))
(assert (x1960 x4575))
(assert (=> (<= x7722 10000) (= 0 (x8569 x7722))))
(assert (x6021 x7868))
(assert (= x4799 (or x1677 x2561)))
(assert (x6021 x87))
(assert (= (or x2771 x6770 x1012) x3554))
(assert (x7457 x8200))
(assert (= (=> (and (= x8524 x225) (= x5110 x3255) (= x2078 x333) (= x3708 x4848) (= x7716 x7627) (= x7768 x4737) (= x8394 x572) (= x7325 x4674) (= x145 x1427) (= x7534 x1609) (= x4674 (x4375 255 x363)) (= x7501 x2371) (= x4954 x1900) (= x4227 0) (= 2 x1407) (= x3020 x4264) (= x6930 x2524)) x5641) x5280))
(assert (< (x8371 64 x2957 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x3869))
(assert (x6021 x6994))
(assert (=> (<= x8104 10000) (= (x8569 x8104) 0)))
(assert (x1960 x5917))
(assert (=> (<= x5933 10000) (= (x8569 x5933) 0)))
(assert (=> (<= x458 10000) (= (x8569 x458) 0)))
(assert (=> (<= x2428 10000) (= (x8569 x2428) 0)))
(assert (= (x569 (x4463 x8390 x3088 x2679 x2045)) x2679))
(assert (= x1911 (x864 (x4463 x1911 x1105 x5420 x538))))
(assert (x6021 x759))
(assert (= x419 (and x2851 x1362)))
(assert (=> (>= 10000 x3984) (= 0 (x8569 x3984))))
(assert (x6021 x4024))
(assert (= 64 (x864 (x8371 64 x2008 (ite (>= 32 x1891) x6104 (ite (>= 64 x1891) x2684 (ite (>= 96 x1891) x7540 (ite (<= x1891 128) x7449 (ite (>= 160 x1891) x5213 (ite (<= x1891 192) x5567 x6398))))))))))
(assert (= (x986 (x4863 x6134 x8381 x8081 x3450 x3891 x7263)) x7263))
(assert (x6021 x3518))
(assert (x6021 x4813))
(assert (x6021 x5924))
(assert (=> (<= x306 10000) (= (x8569 x306) 0)))
(assert (=> (<= x7192 10000) (= (x8569 x7192) 0)))
(assert (x6021 x4590))
(assert (x6021 x7993))
(assert (= x2789 (x2668 (x4863 x128 x4320 x1602 x6915 x2789 x4998))))
(assert (= x5303 (x864 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401))))
(assert (not (x3961 (x8371 x3841 x4840 x1148))))
(assert (x6021 x2448))
(assert (x6021 x7479))
(assert (= x2428 (x4378 (x8371 x6134 x2428 x8056))))
(assert (x6021 x16))
(assert (= (and x1709 x667) x3147))
(assert (x6021 x3287))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x7741 x1640 x6441)))
(assert (= x2585 (x2668 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602))))
(assert (x6021 x180))
(assert (= (x4408 (x3105 x7741 x1495 x8474 x3725 x5574 x7671 x8325)) x3725))
(assert (= (x986 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821)) x7086))
(assert (= (x8569 (x8371 x3841 x4840 x1148)) (x8371 x3841 x4840 x1148)))
(assert (x6021 x1761))
(assert (=> (>= 10000 x3622) (= (x8569 x3622) 0)))
(assert (x6021 x1758))
(assert (not (x3961 (x8371 64 x1887 12))))
(assert (x6021 x47))
(assert (= (and x4393 (not x6896)) x8225))
(assert (x6021 x6452))
(assert (=> (>= 10000 x6978) (= (x8569 x6978) 0)))
(assert (= (x569 (x8371 64 x5879 6)) 6))
(assert (=> (>= 10000 x6192) (= (x8569 x6192) 0)))
(assert (not x3974))
(assert (x6021 x850))
(assert (x6021 x278))
(assert (x7457 x6015))
(assert (= x6167 (or x8098 x8153 x7860 x7545 x7570)))
(assert (= x2894 (=> (and (= 0 x5580) (= x1518 false) (= true x7729)) x1559)))
(assert (x6021 x6414))
(assert (x6021 x6425))
(assert (= (x986 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464)) x7954))
(assert (x6021 x3259))
(assert (x5269 x6521))
(assert (x6021 x8360))
(assert (x6021 x6005))
(assert (x6021 x3181))
(assert (x6021 x4975))
(assert (= (x4378 (x8371 x3841 x4840 x1148)) x4840))
(assert (= (and x2772 x5266) x2148))
(assert (< 10000 (x8371 64 x574 (ite (>= 32 x7786) x3782 (ite (>= 64 x7786) x3982 (ite (>= 96 x7786) x494 (ite (<= x7786 128) x7813 (ite (>= 160 x7786) x1314 (ite (<= x7786 192) x2102 x5667)))))))))
(assert (=> (<= x6088 10000) (= (x8569 x6088) 0)))
(assert (x6021 x7248))
(assert (not (x3961 (x6067 x636 x620 x7121 x4244 x4630))))
(assert (x6290 x4087))
(assert (x6021 x2164))
(assert (= (and x432 (not x7167)) x5812))
(assert (x2186 x7717))
(assert (x6021 x4176))
(assert (not (x3961 (x4463 x62 x589 x6754 x6216))))
(assert (x6021 x2117))
(assert (x6021 x1773))
(assert (x6021 x168))
(assert (x6021 x196))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x7391 7)))
(assert (x6021 x693))
(assert (= 0 (x8569 65535)))
(assert (= (x864 (x6067 x62 x3305 x6018 x6655 x4882)) x62))
(assert (x6517 x6581 32))
(assert (= x6916 (and x7376 x6471)))
(assert (x6021 x6030))
(assert (x6021 x3089))
(assert (x6021 x5059))
(assert (x6021 x2206))
(assert (x6021 x5838))
(assert (x6021 x5958))
(assert (= x6476 (x2668 (x4863 x7741 x1138 x7294 x4427 x6476 x4714))))
(assert (> (x1874 x6151 x199) 10000))
(assert (not (x3961 (x6067 x62 x3305 x6018 x6655 x4882))))
(assert (x6021 x2597))
(assert (x6021 x4499))
(assert (< (x8371 x1919 x294 x5490) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x569 (x8371 64 x6632 (ite (>= 32 x5107) x7657 (ite (>= 64 x5107) x7720 (ite (<= x5107 96) x782 (ite (>= 128 x5107) x3066 (ite (<= x5107 160) x3077 (ite (<= x5107 192) x4867 x1118)))))))) (ite (<= x5107 32) x7657 (ite (<= x5107 64) x7720 (ite (<= x5107 96) x782 (ite (<= x5107 128) x3066 (ite (<= x5107 160) x3077 (ite (>= 192 x5107) x4867 x1118))))))))
(assert (x6021 x2108))
(assert (x7582 x4386))
(assert (=> (>= 10000 x7577) (= (x8569 x7577) 0)))
(assert (= x6690 (and x805 (not x5436))))
(assert (x6021 x1384))
(assert (= (x8569 (x8371 64 x2516 36)) (x8371 64 x2516 36)))
(assert (= x4025 (or x7819 x7459)))
(assert (x6021 x3119))
(assert (= (x8569 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401)) (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401)))
(assert (= x3255 (x4378 (x8371 64 x3255 3))))
(assert (x6021 x62))
(assert (x6021 x2132))
(assert (= x5898 (x4378 (x8371 64 x5898 100))))
(assert (x6021 x96))
(assert (x6021 x3348))
(assert (x6021 x771))
(assert (x7582 (+ 31 x5731)))
(assert (x6021 x4941))
(assert (= (and x3128 x5746) x5723))
(assert (= x1788 (=> (and (= x1818 (x4375 255 x1546)) (= x8542 false) (= x2828 x1912) (= x3240 x6490) (= 0 x7033) (= x3308 x7483) (= x5329 x5160) (= true x2210) (= 2 x2152) (= 2 x7307)) x7857)))
(assert (= (or x3332 x6153 x4560) x3533))
(assert (=> (>= 10000 x7648) (= (x8569 x7648) 0)))
(assert (x6021 x7274))
(assert (x6021 x2047))
(assert (=> (<= x5208 10000) (= 0 (x8569 x5208))))
(assert (x6021 x1135))
(assert (x6021 x3973))
(assert (= (=> (and (= x5065 (x4628 x145 2)) (= x7200 (- x7047 132)) (= (x4375 1 x145) x2634) (= x5838 (ite (< 0 x2634) x5065 (x4375 127 x5065))) (= x6171 (> x1649 0)) (= (x8448 (- x2634 (mod (ite (< x5838 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1649)) (and (=> (and x6171 (and (= x1659 (+ 32 x7047)) (= (= 0 x3110) x2162) (= x3110 (x4375 1 x145)))) (and (=> (and (and (= x7993 (* (ite (not (= 0 x5838)) 1 0) 32)) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639680 x145) x3549) (or (= 0 x7993) (= 32 x7993)) (= (+ x1659 x7993) x6075)) x2162) x8240) (=> (and (not x2162) (and (and (= (< 0 x5838) x8463) (= x7392 (x1874 32 104))) (or (and (not x8463) (= x8178 0)) (and (and (>= 32 x5838) (= (x3775 x7392) x4336) (= 32 x8178)) x8463)))) x6777))) (=> (not x6171) x6607))) x5961))
(assert (x6021 x3491))
(assert (x2186 x1018))
(assert (=> (<= x3458 10000) (= (x8569 x3458) 0)))
(assert (= x4284 (and x5884 (not x6917))))
(assert (=> (>= 10000 x4630) (= (x8569 x4630) 0)))
(assert (= x8123 (or (and x1998 x1505) (and x4556 x4168))))
(assert (= (x4408 (x4463 x1911 x1105 x5420 x538)) x538))
(assert (x6021 x7977))
(assert (x6021 x1493))
(assert (not (x3961 (x1874 x7786 x2747))))
(assert (x6021 x1663))
(assert (x2186 x4803))
(assert (x6021 x838))
(assert (= x7860 (and (not x7279) x8595)))
(assert (not (x3961 (x8371 64 x3255 5))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x1130 0)))
(assert (x6021 x3812))
(assert (not (x3961 (x8371 64 x3003 11))))
(assert (x6021 x696))
(assert (x2662 x1010 32))
(assert (= (=> (and (= x6883 x8394) (= x452 true) (= x6878 x1900) (= x145 x2796) (= x2600 x3020) (= x4510 x2078) (= x2371 x8310) (= x4737 x3356) (= x3255 x3828) (= x4844 false) (= x7153 0) (= x4848 x6337) (= x352 x7534) (= x8181 x7627) (= x5755 2) (= x4670 x6299) (= x225 x2609)) x4830) x288))
(assert (x6021 x6576))
(assert (x6021 x8139))
(assert (x6021 x4714))
(assert (= (x569 (x8371 64 1 x7356)) x7356))
(assert (> (x8371 64 x1887 12) 10000))
(assert (= (x8371 64 x1130 0) (x8569 (x8371 64 x1130 0))))
(assert (x6021 x7294))
(assert (x6021 x3148))
(assert (not (x3961 (x8371 64 x1130 0))))
(assert (x6021 x5430))
(assert (x6021 x554))
(assert (> (x8371 64 x7970 100) 10000))
(assert (= x1462 (and x8475 x7747)))
(assert (x6021 x1433))
(assert (= x6674 (and (not x4274) x2608)))
(assert (= x7068 (x986 (x4863 x3841 x4962 x1975 x1342 x6300 x7068))))
(assert (=> (>= 10000 x1862) (= 0 (x8569 x1862))))
(assert (x6021 x2881))
(assert (x2626 x3389))
(assert (= (x4378 (x8371 x5107 x8206 x4569)) x8206))
(assert (= x8312 (x4378 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971))))
(assert (=> (<= x8188 10000) (= (x8569 x8188) 0)))
(assert (= x1330 (or x1509 x3846)))
(assert (x7457 x991))
(assert (x6021 x8474))
(assert (x2662 x7162 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4378 (x4863 x6151 x876 x1903 x6351 x2911 x6088)) x876))
(assert (= (x569 (x4863 x8390 x4163 x6722 x2492 x4934 x2354)) x6722))
(assert (x6021 x3663))
(assert (= x2904 (and x6384 x4650)))
(assert (not (x3961 (x4863 x112 x1756 x6665 x2535 x7887 x2377))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6067 x5303 x8144 x4874 x6943 x3508)))
(assert (x6021 x2039))
(assert (= (=> (= x487 (= x5129 0)) (and (=> (and x487 (and (= x4127 false) (= x3011 x5160) (= x3240 x6490) (= 0 x7033) (= x7483 x3308) (= x2828 x1912) (= x2473 2) (= x8032 true))) x7857) (=> (and (and (= x5426 x4250) (= x3320 x6554) (= x4523 x599) (= x6717 x2249)) (not x487)) x1573))) x510))
(assert (x7457 x4906))
(assert (x6021 x683))
(assert (x6021 x1778))
(assert (x6021 x775))
(assert (= (and (not x4936) x746) x5034))
(assert (x3961 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x7457 127))
(assert (x6021 x2586))
(assert (x6021 x7542))
(assert (x6021 x4807))
(assert (= (and x3820 x1959) x1505))
(assert (= x366 (x4408 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742))))
(assert (= x2410 (and x2967 x7481)))
(assert (x6021 x8010))
(assert (x6021 x1811))
(assert (x3961 3957931183))
(assert (= (and x6642 x6032) x8085))
(assert (x6021 x1399))
(assert (=> (>= 10000 x62) (= (x8569 x62) 0)))
(assert (= x1585 (and (not x3293) x3581)))
(assert (x6021 x1479))
(assert (x6021 x1620))
(assert (=> (<= x5956 10000) (= 0 (x8569 x5956))))
(assert (=> (<= x3247 10000) (= 0 (x8569 x3247))))
(assert (x6021 x1882))
(assert (= x3652 (and x6935 x7879)))
(assert (x6021 x513))
(assert (x2662 x51 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2186 x6017))
(assert (= (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671) (x8569 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671))))
(assert (x6021 x8373))
(assert (= (ite (<= x1911 32) x1094 (ite (<= x1911 64) x6429 (ite (>= 96 x1911) x6204 (ite (<= x1911 128) x61 (ite (<= x1911 160) x1250 (ite (<= x1911 192) x6248 x6152)))))) (x569 (x8371 64 x6632 (ite (>= 32 x1911) x1094 (ite (>= 64 x1911) x6429 (ite (>= 96 x1911) x6204 (ite (>= 128 x1911) x61 (ite (>= 160 x1911) x1250 (ite (<= x1911 192) x6248 x6152))))))))))
(assert (x6021 x5839))
(assert (= x4766 (or x5664 x2865)))
(assert (x6021 x2435))
(assert (x6021 x1180))
(assert (= x3309 (and x3752 x6690)))
(assert (x6021 x5017))
(assert (= (x8569 (x8371 x128 x7890 x4531)) (x8371 x128 x7890 x4531)))
(assert (x6021 x15))
(assert (< (x8371 x112 x7510 x987) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7457 x363))
(assert (= x3628 (=> (= x4965 (= 0 x505)) (and (=> (and x4965 (and (<= x7115 255) (= x7176 (x8371 64 x3003 11)) (= x7115 (x2401 x7176)) (= (> x7115 3) x3739))) (and (=> (and (and (= x7547 true) (= x5980 false) (= x1196 36)) x3739) x6541) (=> (and (not x3739) (= x3735 (= x7115 2))) (and (=> (and (not x3735) (and (= false x5365) (= x1196 4) (= x2580 true))) x6541) (=> (and (and (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x51) x2774) (= x6082 x3611) (= (x4551 224) x2761) (>= x1301 1) (= x3811 (x6862 (+ x2774 x2001))) (= (x6862 (+ 32 x7817)) x2001) (>= 65535 x8175) (= x5413 160) (= x4796 (x8371 64 x8175 4)) (= x991 (x6862 (+ 31 x1150))) (= x51 (x6862 (+ 31 x2761))) (<= 356 x1042) (= x1150 (x144 128)) (>= 127 x8236) (= 0 x8281) (= x4708 (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x991)) (= x1042 x3024) (= x8175 x3668) (= x4203 (or (and (< (- x1042 4) 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1042 4)) true)) (> (- x1042 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x8448 (- x7817 294)) x2135) (= x7672 256) x7690 (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x6897) x1503 x5800 (= (= (x4953 486) (x3055 196)) x1503) (= x1650 0) (= false x5632) x2880 (= x4451 (x237 x4339)) (= false x5786) (= x3024 (x8448 (- x3811 290))) (= (x6862 (+ x4708 486)) x7817) (>= 127 x8236) (= (= (x4953 518) (x3055 228)) x2880) (= 290 x5676) (= x5800 (= 64 (x3055 164))) (= (x8371 64 1 x4796) x4339) (>= x3024 356) (= x1301 (x6458 x1481)) (= (= 34 (x3055 260)) x7690) (= 1084734224 x4206)) x3735) (and (=> x4203 x5831) (=> (and (= x301 true) (not x4203)) (and (=> (not x301) x5831) (=> (and x301 (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1042) true) (> x1042 195)) x610)) (and (=> (and x610 (and (= x1770 (> x4875 18446744073709551615)) (= (x2267 164) x4875))) (and (=> x1770 x3905) (=> (and (and (= (x6862 (+ x4875 196)) x308) (= x4921 (< x1042 x308))) (not x1770)) (and (=> (and (and (= x1056 (x2267 260)) (= x3266 (< 18446744073709551615 x1056)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1042) (<= 356 x1042)) (not x4921)) (and (=> x3266 x3905) (=> (and (not x3266) (and (= x6158 (x6862 (+ x1056 292))) (= (> x6158 x1042) x4357))) (and (=> x4357 x5252) (=> (and (not x4357) (and (= x873 x881) (= 1 x3857) (= false x798) (= x2192 false) (= x4718 x1446) (= x8175 x6149) (= x2087 x7479) (= x3331 x4656) (= x8531 x1875) (= x1912 x5392) (= x6593 x1130) (= x2738 x934) (= x4251 x3308) (= x7473 x5248) (= x4571 x6782) (= x2697 (x4445 160)) (= x2527 x6490) (= (x4445 128) x4918) (= x402 (x4445 160)) (= (x4445 128) x950) (= 64 x789))) x2307))))) (=> x4921 x5252))))) (=> (not x610) x5831))))))))))) (=> (and (and (= 4 x1196) (= x1829 true) (= x1863 false)) (not x4965)) x6541)))))
(assert (= (and x7303 x7154) x1200))
(assert (= (and x4877 x2682) x189))
(assert (= x874 (x4408 (x6067 x1409 x7939 x8431 x874 x5094))))
(assert (x6021 x4013))
(assert (x6021 x7933))
(assert (= x4547 (x569 (x1962 x128 x7019 x4547 x2760 x7719 x5024 x3456 x8064))))
(assert (x2186 x3170))
(assert (x2186 x6266))
(assert (= (x569 (x4463 x1409 x5975 x4026 x1178)) x4026))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x7741 x4301 x1145 x5328)))
(assert (= x5971 (and (not x3627) x5152)))
(assert (x1960 x8494))
(assert (x6021 x3682))
(assert (x1960 x6797))
(assert (x6021 x4790))
(assert (x6021 x867))
(assert (x7457 x3584))
(assert (=> (<= x6971 10000) (= 0 (x8569 x6971))))
(assert (= x1061 x6366))
(assert (x6021 x6350))
(assert (x6021 x876))
(assert (x6021 x2493))
(assert (= (and x1606 (not x4852)) x127))
(assert (= x4567 (x4408 (x6067 x1883 x5624 x7756 x4567 x683))))
(assert (x6021 x6449))
(assert (= (and x4570 (not x4631)) x1801))
(assert (x6021 x7013))
(assert (= (or x4364 (and x2692 (not x5440))) x2462))
(assert (x6021 x3770))
(assert (x770 x6166))
(assert (x2662 x1546 256))
(assert (x6021 x3140))
(assert (= (x864 (x8371 64 x7708 12)) 64))
(assert (= (and x4852 x1606) x2656))
(assert (x6021 x5877))
(assert (x6021 x6707))
(assert (=> (>= 10000 x5399) (= 0 (x8569 x5399))))
(assert (x6021 x6854))
(assert (x6021 x6117))
(assert (= x5122 (and x8439 x760)))
(assert (= x6020 (and (not x2013) x1984)))
(assert (x6021 x258))
(assert (= (and x493 x2462) x4351))
(assert (= (and x2200 (not x6569)) x8377))
(assert (x7457 x4624))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087)))
(assert (= (=> (and (= x5846 false) (= x7033 0) (= x5160 x4946) (= x3240 x6490) (= 2 x7969) (= x2828 x1912) (= x3308 x7483) (= true x8279)) x7857) x6760))
(assert (< 10000 (x8371 64 x7825 36)))
(assert (x6021 x296))
(assert (= x2202 (and (not x7900) x4273)))
(assert (=> (>= 10000 x7753) (= (x8569 x7753) 0)))
(assert (x6021 x7954))
(assert (< 10000 (x4463 x5303 x1376 x7722 x5491)))
(assert (x6021 x6602))
(assert (= x6939 (or x2407 x5463)))
(assert (x6021 x4493))
(assert (x6021 x2574))
(assert (x6021 x5699))
(assert (x6021 x3695))
(assert (x6021 x5010))
(assert (x6021 x7948))
(assert (=> (<= x620 10000) (= 0 (x8569 x620))))
(assert (x6021 x5848))
(assert (x6021 x3440))
(assert (x6021 x6304))
(assert (= x7531 (and x121 x1906)))
(assert (x6021 x6300))
(assert (x6021 x4006))
(assert (not (x3961 (x6067 x81 x5956 x3927 x743 x3464))))
(assert (x6021 x1539))
(assert (x6021 x395))
(assert (= (and x7594 x7059) x134))
(assert (= x1279 (and (not x6715) x170)))
(assert (= x4609 (and x7876 x409)))
(assert (= x1982 (=> (= (= x1741 0) x3848) (and (=> (and (and (= x1901 (x8371 64 x5113 11)) (= (< 3 x7822) x1968) (<= x7822 255) (= (x2474 x1901) x7822)) x3848) (and (=> (and (not x1968) (= x7915 (= 2 x7822))) (and (=> (and x7915 (and (<= 356 x4960) (= false x3143) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7162) x6585) (= 0 x3058) (<= x3255 65535) (= (x264 224) x5815) (= x2669 290) (= x3086 (x6458 x1481)) (= (= (x2725 196) (x4217 486)) x7557) (<= 356 x1571) (= x4214 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= (x6862 (+ 31 x5815)) x1607) (= x3070 (x8448 (- x3286 294))) (= (x3141 128) x7982) (= (x8448 (- x239 290)) x4960) (= x2559 0) (= (x8371 64 1 x7356) x3445) (= (x6862 (+ x3286 32)) x2745) (= x7356 (x8371 64 x3255 4)) (= x3827 256) x4657 (= x1571 x4960) (= (x4375 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1607) x4477) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1571 4)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1571 4)) true) (< (- x1571 4) 160))) x6573) (= (= 34 (x2725 260)) x7940) (<= x5044 127) x7557 (= (x237 x3445) x2816) (<= 1 x3086) (= x3255 x736) (= x7162 (x6862 (+ x7982 31))) (= 1084734224 x4741) (= x3611 x2475) (= 160 x6824) x7940 (= (= 64 (x2725 164)) x4657) (= (x6862 (+ x6585 486)) x3286) (>= 127 x5044) (= x4147 (= (x4217 518) (x2725 228))) (= x713 false) (= x239 (x6862 (+ x4477 x2745))) x4147)) (and (=> (and (= true x2252) (not x6573)) (and (=> (and x2252 (= (and (> x1571 195) (= (<= x1571 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x1959)) (and (=> (and x1959 (and (= (x2360 164) x6212) (= (< 18446744073709551615 x6212) x1998))) (and (=> x1998 x5120) (=> (and (not x1998) (and (= (> x2458 x1571) x7354) (= (x6862 (+ x6212 196)) x2458))) (and (=> (and (and (<= x1571 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x1571 356) (= x1547 (x2360 260)) (= (< 18446744073709551615 x1547) x4168)) (not x7354)) (and (=> x4168 x5120) (=> (and (and (= x6482 (< x1571 x1619)) (= (x6862 (+ 292 x1547)) x1619)) (not x4168)) (and (=> x6482 x6182) (=> (and (and (= x7155 1) (= x1161 x2078) (= x225 x977) (= x8398 (x8296 128)) (= x3022 x145) (= x6137 x4737) (= x1623 (x8296 160)) (= x7387 false) (= x4848 x3938) (= false x2705) (= x5895 x1900) (= (x8296 160) x1776) (= x3255 x1306) (= x2371 x6960) (= x387 x7627) (= x5296 x4797) (= x2506 x3020) (= x6145 (x8296 128)) (= x8394 x3351) (= x586 x7534) (= x7239 64)) (not x6482)) x3104))))) (=> x7354 x6182))))) (=> (not x1959) x7127))) (=> (not x2252) x7127))) (=> x6573 x7127))) (=> (and (and (= x6338 4) (= true x2613) (= x1124 false)) (not x7915)) x2658))) (=> (and x1968 (and (= false x1868) (= true x7034) (= x6338 36))) x2658))) (=> (and (not x3848) (and (= true x2779) (= 4 x6338) (= x4372 false))) x2658)))))
(assert (= x7824 (and x4183 (not x2727))))
(assert (= x7636 (x986 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742))))
(assert (x2186 x363))
(assert (x6021 x6441))
(assert (= x6455 (and x2254 x6488)))
(assert (= (x8569 (x6067 x7786 x8366 x1548 x3194 x4478)) (x6067 x7786 x8366 x1548 x3194 x4478)))
(assert (= 0 (x8569 100000)))
(assert (= (x4378 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177)) x1001))
(assert (= (and (not x4544) x3257) x4349))
(assert (x6021 x6255))
(assert (x6021 x1276))
(assert (x6021 x2151))
(assert (x6021 x406))
(assert (= (x8569 x4640) (x8569 (+ 1 x4640))))
(assert (> (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801) 10000))
(assert (= x4320 (x4378 (x4863 x128 x4320 x1602 x6915 x2789 x4998))))
(assert (not (x3961 (x8371 64 x158 (ite (>= 32 x8390) x3046 (ite (>= 64 x8390) x6218 (ite (>= 96 x8390) x3520 (ite (>= 128 x8390) x2175 (ite (<= x8390 160) x3928 (ite (>= 192 x8390) x3577 x7486))))))))))
(assert (x6021 x8258))
(assert (x6021 x7385))
(assert (x6021 x3508))
(assert (x6021 x3930))
(assert (x6021 x2825))
(assert (= (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (x1960 x6904))
(assert (< (x3105 x8390 x663 x36 x6382 x131 x3931 x6591) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x5108))
(assert (x2662 x6015 128))
(assert (x6021 x1947))
(assert (= (x8569 (x4863 x128 x4320 x1602 x6915 x2789 x4998)) (x4863 x128 x4320 x1602 x6915 x2789 x4998)))
(assert (= (x864 (x8371 64 x3611 2)) 64))
(assert (= x8550 (and (not x3090) x4775)))
(assert (x6021 x1581))
(assert (x6021 x5808))
(assert (x6021 x7375))
(assert (x6021 x1183))
(assert (=> (>= 10000 x8598) (= 0 (x8569 x8598))))
(assert (= (or x1324 x5275 x5111 x2905 x6164 x4679) x6827))
(assert (< 10000 (x8371 64 x2957 7)))
(assert (=> (<= x8325 10000) (= 0 (x8569 x8325))))
(assert (x6021 x2416))
(assert (x6021 x8247))
(assert (x6021 x6078))
(assert (x6021 x6247))
(assert (=> (<= x3742 10000) (= (x8569 x3742) 0)))
(assert (= x8148 (=> (and (= (= 0 x4974) x6540) (or (and (and (= x3292 x8473) (= x6727 x7754) (= x3997 x763) (= x7041 x2226) (= x5226 x3681) (= x2161 x7004) (= x2395 x600) (= x5599 x4974) (= x6355 x775) (= x4234 x868) (= x1482 x246) (= x7632 x7767) (= x6726 x3068) (= x1426 x6187)) (not x6540)) (and (and (< (+ x185 x7384) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3997 x763) (= x7384 (x6119 x3611)) (= x6094 x394) (<= x394 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6187 x1426) (= x3681 x5226) (= x4974 x5599) (= x7754 x6727) (<= 0 x394) (= x868 x4234) (= (- x7463 x185) x1857) (= x1482 x246) (= x775 x6355) (= x6726 x3068) (= (+ x7384 x185) x394) (= x2161 x7004) (= x8473 x3292) (= x600 x2395) (= x7041 x2226) (= x7463 (x6532 x690)) (= x7632 x7767) (= (ite (= 0 x4974) x7333 0) x185)) x6540))) x4015)))
(assert (= x6358 (x4408 (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213))))
(assert (x6021 x847))
(assert (x6021 x2979))
(assert (= (x8371 64 x6304 11) (x8569 (x8371 64 x6304 11))))
(assert (= x150 (x4408 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464))))
(assert (= x2049 x1905))
(assert (x6021 x1912))
(assert (x6021 x8295))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x3255 5)))
(assert (x6021 x1048))
(assert (x6021 x291))
(assert (x6021 x7767))
(assert (x6021 x8341))
(assert (= (x8371 64 x8175 4) (x8569 (x8371 64 x8175 4))))
(assert (=> (>= 10000 x8185) (= 0 (x8569 x8185))))
(assert (x6021 x4731))
(assert (x6021 x2127))
(assert (x1635 32 (ite (not (= x415 0)) 1 0)))
(assert (= (and x783 (not x6258)) x832))
(assert (x2186 x3741))
(assert (= (x864 (x8371 x62 x6998 x2947)) x62))
(assert (x6021 x405))
(assert (x6290 x8543))
(assert (=> (<= x4163 10000) (= (x8569 x4163) 0)))
(assert (x2662 x8543 256))
(assert (x6021 x8129))
(assert (= (x8569 (x1874 32 x384)) (x1874 32 x384)))
(assert (x6517 (+ x2396 31) 32))
(assert (x6021 x500))
(assert (x6021 x8102))
(assert (not (x3961 (x8371 x6134 x2428 x8056))))
(assert (x6021 x2521))
(assert (x6021 x5898))
(assert (x6021 x32))
(assert (x6021 x3194))
(assert (= x3299 (=> (and (= x145 x3340) (= x706 x399) (= x857 x3020) (= x706 (x4375 255 x3170)) (= x3284 x4449) (= x7534 x8110) (= x2371 x7631) (= x4737 x582) (= x2825 x7627) (= x8597 2) (= x2136 x4848) (= x87 x1900) (= x142 0) (= x2319 x2078) (= x8394 x1562) (= x225 x2114) (= x1114 x3255)) x5611)))
(assert (x2662 x7432 256))
(assert (not (x3961 (x8371 64 x574 (ite (<= x7786 32) x3782 (ite (<= x7786 64) x3982 (ite (<= x7786 96) x494 (ite (>= 128 x7786) x7813 (ite (>= 160 x7786) x1314 (ite (<= x7786 192) x2102 x5667))))))))))
(assert (= (x4378 (x1874 32 x3111)) x3111))
(assert (x6021 x7888))
(assert (x2186 x1878))
(assert (x6021 x7666))
(assert (x6021 x7316))
(assert (x6021 x2802))
(assert (= (and x3854 (not x2876)) x5854))
(assert (= x3148 (x986 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971))))
(assert (x6021 x6554))
(assert (= x7539 (x569 (x8371 x1911 x5721 x7539))))
(assert (x6021 x1114))
(assert (= (and x6167 x1367) x5540))
(assert (= (and x6690 (not x3752)) x3842))
(assert (= 64 (x864 (x8371 64 x8175 3))))
(assert (= x444 (and x4707 (not x3593))))
(assert (= (x7859 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829)) x4829))
(assert (= x3794 (x1880 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794))))
(assert (not (x3961 (x8371 x1891 x117 x8176))))
(assert (= x820 (and (not x3175) x3488)))
(assert (= x4951 (and x3353 x3309)))
(assert (= (x8569 (x8371 64 x7970 100)) (x8371 64 x7970 100)))
(assert (= x8035 (=> (and (= x6569 (= x6699 0)) (or (and x6569 (= x3078 x6699)) (and (not x6569) (and (= (x5996 256) x3403) (= x6134 (x5996 128)) (= x2040 (x6862 (+ 32 x440))) (= x125 (x5996 224)) (= x4341 (x5537 x1528)) (= (x5996 192) x3042) (= (x5537 x6221) x1031) (= x5933 (x5537 x3226)) (= x7069 (x6862 (+ 64 x440))) (= x3675 (x6862 (+ 64 x440))) (= x383 (x5537 x3879)) (= x3251 (x4863 x6134 x8381 x8081 x3450 x3891 x7263)) (= (x3631 0) x5431) (= x8360 (x6862 (+ x440 96))) (= (x5537 x440) x3524) (= x1253 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424)) (= x7648 (x5996 192)) (= (x5996 288) x7263) (= x6424 (x5996 352)) (= (x4463 x1883 x6542 x3545 x3441) x5326) (= (x6862 (+ x440 64)) x2824) (= x8381 (x5996 160)) (= x7192 (x5537 x7069)) (= (x4863 x1883 x2748 x5837 x2413 x4530 x2755) x5532) (= (x5537 x440) x5624) (= x4603 (x5996 288)) (= x6409 (x5996 320)) (= x7893 (x3631 0)) (= (x5996 288) x8102) (= (x5996 160) x7580) (= x2436 (x6862 (+ 192 x440))) (= (x6862 (+ 96 x440)) x3879) (= x1910 (x5537 x440)) (= x6649 (x6862 (+ x440 128))) (= x784 (x5996 160)) (= x7469 (x5537 x7642)) (= (x6862 (+ x440 32)) x5878) (= (x5537 x440) x1070) (= (x5996 192) x8056) (= (x6862 (+ x440 64)) x6313) (= x6756 (x5996 160)) (= x2748 (x5537 x440)) (= (x5537 x7654) x6150) (= x5866 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704)) (= x3545 (x5537 x3002)) (= (x6862 (+ 128 x440)) x1528) (= (x1874 x6134 x6756) x1480) (= x7554 (x6862 (+ x1883 x440))) (= x1830 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409)) (= x1370 (x6067 x6134 x7827 x3042 x5877 x4498)) (= (x5996 160) x7827) (= x4318 (x6862 (+ x440 96))) (= (x5537 x6313) x2413) (= x4801 (x5996 256)) (= x3380 (x5537 x2824)) (= (x6862 (+ x440 32)) x3226) (= x3671 (x5537 x8066)) (= x5877 (x5996 224)) (= (x5537 x440) x6542) (<= x6134 224) (= (x5996 192) x8081) (= (x5537 x1050) x683) (= (x6862 (+ 160 x440)) x8066) (= x3002 (x6862 (+ x440 32))) (= (x5996 160) x6386) (= (x5996 224) x3836) (= (x5996 224) x3450) (= (x5537 x8360) x4530) (= x6221 (x6862 (+ x440 32))) (= (x6862 (+ x440 32)) x7654) (= x3078 (ite (= (ite (= x1883 0) x7893 (ite (>= 32 x1883) x870 (ite (>= 64 x1883) x1247 (ite (>= 96 x1883) x5326 (ite (<= x1883 128) x865 (ite (<= x1883 160) x5532 (ite (>= 192 x1883) x244 x5866))))))) (ite (= 0 x6134) x5431 (ite (>= 32 x6134) x1480 (ite (>= 64 x6134) x6457 (ite (>= 96 x6134) x8211 (ite (>= 128 x6134) x1370 (ite (<= x6134 160) x3251 (ite (<= x6134 192) x1830 x1253)))))))) 1 0)) (= (x5537 x6354) x6065) (>= 224 x1883) (= (x5537 x2040) x7756) (= (x1874 x1883 x3524) x870) (= (x8371 x6134 x2428 x8056) x6457) (= x8211 (x4463 x6134 x7580 x5525 x125)) (= (x5537 x440) x4729) (= (x6862 (+ x440 96)) x1050) (= x5837 (x5537 x5878)) (= x865 (x6067 x1883 x5624 x7756 x4567 x683)) (= (x5537 x3675) x4567) (= x7642 (x6862 (+ 128 x440))) (= x6028 (x5537 x4318)) (= (x5537 x6649) x2755) (= (x5537 x2436) x5704) (= (x6862 (+ 64 x440)) x3809) (= (x5996 192) x5525) (= x244 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671)) (= x4293 (x5996 320)) (= x3441 (x5537 x3809)) (= x6354 (x6862 (+ 160 x440))) (= x2428 (x5996 160)) (= (x5996 224) x6503) (= x3891 (x5996 256)) (= x4498 (x5996 256)) (= x7932 (x5996 192)) (= (x8371 x1883 x1070 x6150) x1247))))) x4186)))
(assert (= (x1874 32 x1068) (x8569 (x1874 32 x1068))))
(assert (= (x864 (x8371 64 x5924 12)) 64))
(assert (x2186 x4087))
(assert (x2662 x1043 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x7717))
(assert (x6021 x1543))
(assert (x6021 x1661))
(assert (= 1 (x569 (x8371 64 x3611 1))))
(assert (= x5078 (or x6410 x1572 x7531 x5867 x878 x6968 x8052 x5127 x119 x5390 x2251)))
(assert (x6021 x8029))
(assert (x1960 x157))
(assert (x6021 x725))
(assert (= x6931 x6481))
(assert (not (x3961 (x4863 x6151 x876 x1903 x6351 x2911 x6088))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x1891 x117 x8176)))
(assert (x6021 x4848))
(assert (x6021 x3471))
(assert (x7457 x1010))
(assert (x6021 x6066))
(assert (x6021 x1031))
(assert (= (and x4256 x3452) x6850))
(assert (= (and x8019 x3721) x3103))
(assert (x6290 x6131))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 x1883 x3524)))
(assert (= x7819 (or x2203 x2222 x6523 x2375)))
(assert (x2662 x479 32))
(assert (=> (<= x3763 10000) (= (x8569 x3763) 0)))
(assert (= x3605 (or x4722 x808 x2112)))
(assert (x6021 x4520))
(assert (= (x569 (x4863 x112 x1756 x6665 x2535 x7887 x2377)) x6665))
(assert (> (x1874 x1911 x1743) 10000))
(assert (x7582 (+ 31 x4994)))
(assert (= x5944 (and (not x1278) x6023)))
(assert (= (x8569 94926909962862326217726538024181891405690106632559804934698421914364834480128) 0))
(assert (=> (>= 10000 x1706) (= (x8569 x1706) 0)))
(assert (x6021 x7249))
(assert (x6021 x252))
(assert (= (x8371 64 x6524 12) (x8569 (x8371 64 x6524 12))))
(assert (x6021 x4177))
(assert (= x8291 (and x1516 x6837)))
(assert (x6021 x3547))
(assert (< (x6067 x1409 x7939 x8431 x874 x5094) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x1071))
(assert (=> (>= 10000 x112) (= (x8569 x112) 0)))
(assert (= 6 (x569 (x8371 64 x5207 6))))
(assert (x6021 x6561))
(assert (= (x864 (x8371 x5303 x6385 x7242)) x5303))
(assert (x6021 x5329))
(assert (x6021 x7551))
(assert (x6021 x5160))
(assert (x6021 x4049))
(assert (x6021 x5022))
(assert (= (or x7169 x181 x3019 (and x1485 x6746) (and x2397 x6668) x3310 x570) x2803))
(assert (x6021 x5328))
(assert (= x1299 (and x6171 x4766)))
(assert (> (x8371 64 x8226 36) 10000))
(assert (= (or x6068 x91 x5872 x6388) x7560))
(assert (= (x2668 (x6067 x2495 x3439 x1839 x1840 x3342)) x3342))
(assert (=> (>= 10000 x743) (= (x8569 x743) 0)))
(assert (= (and x297 x4315) x1978))
(assert (= (x2668 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704)) x383))
(assert (= (or x5029 x4554) x8476))
(assert (=> (>= 10000 x483) (= (x8569 x483) 0)))
(assert (=> (>= 10000 x3380) (= (x8569 x3380) 0)))
(assert (x6021 x4271))
(assert (=> (>= 10000 x1481) (= (x8569 x1481) 0)))
(assert (=> (<= x2878 10000) (= 0 (x8569 x2878))))
(assert (x6021 x5939))
(assert (x2626 (ite (not (= x415 0)) 1 0)))
(assert (x6021 x3743))
(assert (x6021 x1138))
(assert (not (x3961 (x8371 64 x3611 2))))
(assert (x6021 x2866))
(assert (< 10000 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087)))
(assert (x6021 x6941))
(assert (=> (<= x4427 10000) (= (x8569 x4427) 0)))
(assert (x2186 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (=> (<= x6799 10000) (= 0 (x8569 x6799))))
(assert (x6021 x4643))
(assert (not (x3961 (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177))))
(assert (= (and (not x5284) x8488) x56))
(assert (= x4490 (=> (and (= x2772 (= x7158 0)) (or x2772 (not x2772))) x5147)))
(assert (=> (>= 10000 x7928) (= (x8569 x7928) 0)))
(assert (= 100 (x569 (x8371 64 x5898 100))))
(assert (x6021 x1514))
(assert (= x4641 x7073))
(assert (x6021 x462))
(assert (x5269 x4963))
(assert (x6021 x318))
(assert (= x5463 (and x5372 x1703)))
(assert (x6021 x6992))
(assert (= x1791 (and (not x2254) x6488)))
(assert (=> (>= 10000 x1145) (= 0 (x8569 x1145))))
(assert (= (x8569 (x4863 x81 x7614 x3028 x8276 x1764 x4340)) (x4863 x81 x7614 x3028 x8276 x1764 x4340)))
(assert (= x639 (and x619 x5099)))
(assert (= (=> (= (= x4161 0) x3167) (and (=> (and x3167 (and (= x976 x8177) (= x1941 x4156) (= x4228 x3768))) x3222) (=> (and (not x3167) (= (< x7946 32) x6763)) (and (=> (and x6763 (and (= x1941 x4156) (= x8177 x976) (= x4228 x3768))) x3222) (=> (and (not x6763) (and (= x2256 (x2661 x563)) (= x6876 (> x2256 3)) (= (x8238 160) x3349) (<= x2256 255) (= (x8371 64 x3349 11) x563))) (and (=> (and (= x6258 (= 0 x2256)) (not x6876)) (and (=> (and x6258 (and (= x5027 false) (= x533 (+ 1 x2299)) (= false x6816) (= x7244 (x8371 64 x1298 10)) (= x5027 x6126) (= x7297 1) (= (+ x1899 1) x2299) (= false x7751) (= x3975 x3768) (= x8578 x976) (= false x4648) (= x4156 x6118) (= x1899 (x8371 64 x3349 11)))) x1750) (=> (and (and (= x4228 x3768) (= x976 x8177) (= x1941 x4156)) (not x6258)) x3222))) (=> (and (and (= x1941 x4156) (= x8177 x976) (= x3768 x4228)) x6876) x3222))))))) x7912))
(assert (not (x3961 (x8371 64 x4670 36))))
(assert (= (or x5694 x7420) x4925))
(assert (not (x3961 (x8371 64 x1862 6))))
(assert (x6021 x246))
(assert (= (and x435 x5004) x6410))
(assert (x2626 x6687))
(assert (= (and x3709 x6012) x5665))
(assert (x6290 x1529))
(assert (x6021 x7754))
(assert (=> (<= x5502 10000) (= 0 (x8569 x5502))))
(assert (= (=> (and (= x8009 x423) (= x7610 x3243) (= x4417 x5798) (= x6003 x3) (= x5462 x2332) (= x6940 x3894) (= x3008 x4711) (= x1947 x8449) (= x1474 x5945) (= x6911 x3604) (= x7389 x5336) (= x4201 x6927) (= x8192 x484) (= x1458 x4367)) x1089) x2156))
(assert (< 10000 (x8371 64 x6304 11)))
(assert (= (x8371 64 x5924 12) (x8569 (x8371 64 x5924 12))))
(assert (x6021 x3042))
(assert (= (x1874 32 x1179) (x8569 (x1874 32 x1179))))
(assert (x6021 x6761))
(assert (x2626 x8558))
(assert (x3961 34591783479076665078880830389440322441076534786459098783165778951140825654127))
(assert (< (x8371 64 x8175 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6830 (and x6577 x7168)))
(assert (=> (<= x250 10000) (= 0 (x8569 x250))))
(assert (x6021 x7033))
(assert (x6021 x3163))
(assert (> (x4463 x8295 x8358 x6466 x2877) 10000))
(assert (= (and x26 x2255) x4325))
(assert (x6021 x7599))
(assert (x6021 x6525))
(assert (= x7876 (and x6664 x6548)))
(assert (= (=> (and (= x157 x5580) (= x3883 0) (= 2 x2400) (= x8574 x1912) (= x598 x6490) (= x176 x3308)) x6572) x1559))
(assert (= (and x6177 (not x2990)) x4416))
(assert (< 10000 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)))
(assert (x2662 x1265 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5410 (and (not x1205) x1527)))
(assert (x6021 x1678))
(assert (x2186 x4879))
(assert (x2662 x2676 2))
(assert (x6021 x6114))
(assert (= (and (not x7441) x7314) x4786))
(assert (= x2459 (x569 (x8371 x8295 x6192 x2459))))
(assert (= (x569 (x4863 x81 x7614 x3028 x8276 x1764 x4340)) x3028))
(assert (= x2747 (x4378 (x1874 x7786 x2747))))
(assert (x6021 x7302))
(assert (> (x4863 x62 x2406 x1667 x1539 x5391 x8104) 10000))
(assert (=> (>= 10000 x4145) (= (x8569 x4145) 0)))
(assert (x6021 x6292))
(assert (= (x1880 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371)) x2979))
(assert (x6021 x2437))
(assert (not (x3961 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068))))
(assert (= 64 (x864 (x8371 64 x5581 36))))
(assert (x6021 x1309))
(assert (< 10000 (x6067 x7741 x6208 x6643 x6566 x3171)))
(assert (= (or x31 x8190) x290))
(assert (= (and (not x1287) x4951) x4063))
(assert (=> (<= x2947 10000) (= (x8569 x2947) 0)))
(assert (=> (>= 10000 x8295) (= 0 (x8569 x8295))))
(assert (x6021 x1312))
(assert (= 64 (x864 (x8371 64 x5635 2))))
(assert (x7582 x1726))
(assert (= x3691 (and x6898 (not x871))))
(assert (x6021 x2795))
(assert (x2186 x7416))
(assert (x6021 x2193))
(assert (< 10000 (x8371 x2495 x911 x634)))
(assert (x1960 x5231))
(assert (= x616 (and (not x3697) x4625)))
(assert (x6021 x417))
(assert (x2662 x7416 256))
(assert (x6021 x6778))
(assert (x1960 x7866))
(assert (= x2667 (=> (and (= x4800 true) (= false x7415) (= 0 x5329)) x1788)))
(assert (x6021 x5158))
(assert (= x7576 (or x5251 x2862 x6916 x378 x7178)))
(assert (= (x864 (x8371 x8295 x6192 x2459)) x8295))
(assert (= (x2668 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801)) x6289))
(assert (x6021 x5580))
(assert (x6021 x5330))
(assert (x6021 x197))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x281 36)))
(assert (x6021 x5851))
(assert (x770 x6246))
(assert (x2662 x1832 128))
(assert (x1960 x265))
(assert (= (x2668 (x6067 x6134 x7827 x3042 x5877 x4498)) x4498))
(assert (< (x1874 32 x1068) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2662 x3211 32))
(assert (= x137 (and x170 x6715)))
(assert (x6021 x815))
(assert (= 0 (x8569 29244376827073035548771643948814531551534385112760475998805679327281764368384)))
(assert (x6021 x4059))
(assert (x6021 x7654))
(assert (x6021 x5886))
(assert (x6021 x4259))
(assert (= x5727 (and x4220 x2120)))
(assert (= (=> (= x7635 (= x3489 0)) (and (=> (and (not x7635) (and (= x3694 x3471) (= x6670 x4290) (= x4243 x105) (= x5218 x6991) (= x4137 x3606) (= x2366 x1380) (= x7351 x3743) (= x8526 x1656) (= x627 x947) (= x5289 x2191) (= x2795 x7979) (= x412 x2339) (= x5498 x3071))) x5085) (=> (and x7635 (and (= x6299 x4670) (= false x3589) (= x2371 x8310) (= x6337 x4848) (= x8181 x7627) (= x2600 x3020) (= x352 x7534) (= x2609 x225) (= x3255 x3828) (= x4510 x2078) (= x7153 0) (= x6878 x1900) (= x3356 x4737) (= x145 x2796) (= x6673 2) (= x8394 x6883) (= x3863 true))) x4830))) x7643))
(assert (=> (<= x7828 10000) (= 0 (x8569 x7828))))
(assert (= (and x2016 x3600) x2209))
(assert (=> (>= 10000 x206) (= (x8569 x206) 0)))
(assert (x6021 x2119))
(assert (= (and x203 x1762) x1436))
(assert (=> (<= x7970 10000) (= (x8569 x7970) 0)))
(assert (x6021 x8451))
(assert (x6021 x636))
(assert (x6021 x5940))
(assert (x6021 x7806))
(assert (=> (<= x6621 10000) (= 0 (x8569 x6621))))
(assert (x6021 x4510))
(assert (x6021 x3559))
(assert (= 0 (x8569 107317874183463056701504662589741776198067464202343767264461527615735374807040)))
(assert (= x3245 (=> (= (= x1866 0) x5828) (and (=> (and (and (= 4 x2604) (= true x54) (= x3433 false)) (not x5828)) x6209) (=> (and (and (= (x8371 64 x6304 11) x4473) (= (< 3 x4559) x1116) (<= x4559 255) (= (x1977 x4473) x4559)) x5828) (and (=> (and x1116 (and (= x2604 36) (= false x3001) (= true x8514))) x6209) (=> (and (= (= x4559 2) x3733) (not x1116)) (and (=> (and (and (= (= x1123 0) x6133) (= (x8371 64 x8175 4) x3946) (= x5454 (x8371 64 1 x3946)) (= (x237 x5454) x3900) (>= 65535 x8175)) x3733) (and (=> (and x6133 (= x3900 x8551)) x2670) (=> (and (not x6133) (= x3956 (< x1123 x3900))) (and (=> (and (not x3956) (= x8551 x1123)) x2670) (=> (and (and (= x2253 false) (= x2141 true) (= 4 x2604)) x3956) x6209))))) (=> (and (not x3733) (and (= x6406 true) (= x2604 4) (= false x3583))) x6209)))))))))
(assert (x6021 x179))
(assert (= (=> (or (and x6126 (and (= x8315 x7997) (<= x8315 1461501637330902918203684832716283019655932542975) (= x6687 x618) (= x3076 x8369))) (and (and (= x6118 x7997) (= x6687 x3975) (= x8369 x8578)) (not x6126))) x6494) x1750))
(assert (x6021 x6015))
(assert (x6021 x532))
(assert (= x6523 (or (and x3652 (not x2121)) (and x891 x5322))))
(assert (not (x3961 (x8371 64 x3268 12))))
(assert (x6021 x8312))
(assert (= (and (not x3400) x7180) x3468))
(assert (= (or (and x6309 x3876) (and x653 x5682) (and x3017 x8589)) x1855))
(assert (= x3039 (and (not x3277) x4537)))
(assert (= (x8371 64 x1624 36) (x8569 (x8371 64 x1624 36))))
(assert (= x3169 (and (not x85) x8343)))
(assert (x6021 x1368))
(assert (= (and x2397 (not x6668)) x5234))
(assert (x6021 x4225))
(assert (= x3344 (and (not x6252) x7804)))
(assert (= x683 (x2668 (x6067 x1883 x5624 x7756 x4567 x683))))
(assert (=> (<= x2347 10000) (= 0 (x8569 x2347))))
(assert (= (x569 (x3105 x1911 x5182 x4734 x5026 x2164 x8326 x1794)) x4734))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x1919 x5254 x4545 x6880)))
(assert (= x4788 (x4378 (x4863 x1409 x4788 x7372 x6764 x5069 x3607))))
(assert (= x5521 (or x6909 x277)))
(assert (x6290 x5627))
(assert (x6021 x2885))
(assert (x6021 x5175))
(assert (x6021 x7946))
(assert (= (x569 (x8371 64 x7825 36)) 36))
(assert (=> (>= 10000 x3109) (= (x8569 x3109) 0)))
(assert (x6021 x4354))
(assert (< 10000 (x1874 32 x1179)))
(assert (x6021 x4620))
(assert (x6021 x7636))
(assert (x6021 x5391))
(assert (x6021 x6608))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x8390 x4163 x6722 x2492 x4934 x2354)))
(assert (x6021 x3622))
(assert (x6021 x1747))
(assert (= (x569 (x1962 x636 x8312 x2587 x1706 x6231 x3148 x1796 x7971)) x2587))
(assert (not (x3961 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230))))
(assert (= (and x3806 (not x4331)) x3779))
(assert (x6021 x7765))
(assert (x1960 x710))
(assert (x6021 x6591))
(assert (x6021 x4630))
(assert (x6021 x4519))
(assert (= (and (not x6751) x6997) x8488))
(assert (= x1891 (x864 (x8371 x1891 x117 x8176))))
(assert (not (x3961 (x1874 32 x3111))))
(assert (x6021 x1555))
(assert (not (x3961 (x1874 32 103))))
(assert (x6021 x6820))
(assert (= x7156 (x4378 (x1962 x6151 x7156 x5344 x3925 x4390 x6819 x7375 x758))))
(assert (x6021 x3242))
(assert (x6021 x2835))
(assert (x5269 x6739))
(assert (x6021 x4501))
(assert (x6021 x4957))
(assert (= x3434 (or x4712 x1397)))
(assert (x6021 x7833))
(assert (= x7786 (x864 (x6067 x7786 x8366 x1548 x3194 x4478))))
(assert (x3961 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (x2662 x3777 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 x62 x6998 x2947)))
(assert (x7457 x3211))
(assert (x6021 x5931))
(assert (x6021 x4685))
(assert (= x7614 (x4378 (x4863 x81 x7614 x3028 x8276 x1764 x4340))))
(assert (= (x8569 (x8371 64 x5207 6)) (x8371 64 x5207 6)))
(assert (x6021 x7735))
(assert (= (and x6336 x4266) x1117))
(assert (x6021 x8063))
(assert (x6021 x6468))
(assert (x6021 x4487))
(assert (x6021 x67))
(assert (x6021 x6131))
(assert (x2626 x7707))
(assert (x6021 x7402))
(assert (not (x3961 (x8371 64 x3255 3))))
(assert (x770 x5065))
(assert (=> (>= 10000 x3591) (= (x8569 x3591) 0)))
(assert (= (x864 (x8371 64 x648 6)) 64))
(assert (x1960 x8082))
(assert (x6021 x2269))
(assert (x6021 x4216))
(assert (x6021 x7264))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x5107 x3059 x1297 x2154 x8061 x7331)))
(assert (= (x4378 (x8371 64 x6304 11)) x6304))
(assert (=> (>= 10000 x6665) (= (x8569 x6665) 0)))
(assert (= x8459 (and x12 x2317)))
(assert (= x7460 (and x3128 (not x5746))))
(assert (x2662 x145 256))
(assert (=> (>= 10000 x6702) (= 0 (x8569 x6702))))
(assert (x6021 x3763))
(assert (< (x4463 x1911 x1105 x5420 x538) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x2062))
(assert (x6021 x1163))
(assert (x5973 x2676))
(assert (x6021 x6185))
(assert (= (x8371 x8390 x579 x1433) (x8569 (x8371 x8390 x579 x1433))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x603 6)))
(assert (< (x6067 x1911 x3544 x5997 x2878 x5969) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x6837 (not x1516)) x26))
(assert (x6021 x7726))
(assert (x6021 x6221))
(assert (= (x4378 (x8371 64 x7391 7)) x7391))
(assert (= 0 (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (=> (<= x1764 10000) (= (x8569 x1764) 0)))
(assert (= (and x3193 x301) x1688))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x5113 11)))
(assert (= x5433 (and x439 x5393)))
(assert (= x8012 (=> (and (= x7402 (x8448 (- x602 128))) (= (= 0 x2409) x4658) (= (x6458 x2738) x2409) (= x7834 128)) (and (=> (and (not x4658) (and (= x2273 (and x2889 x6435)) (= (x8302 x8301) x202) (= (x8302 x2738) x2845) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2845 x5477)) x6435) (= (<= x5477 x202) x2889))) (and (=> (and (and (= (x6128 x2738) x5347) (= (= (x2349 132) x7371) x1739) (>= x7402 196) (>= x8432 0) (>= 127 x3409) (= (- x2447 x5477) x8586) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8432) (= x2227 false) x1739 (= x7402 x6078) (<= 1 x7050) (= x5106 (x1025 132)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5347 x5477)) (= (x6458 x3611) x7050) (= x1682 x7736) (<= 196 x6078) (= 128 x999) (= x7601 x5792) (= x574 x7476) (<= x7402 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 127 x3409) (= (< 18446744073709551615 x5106) x6766) (= x8432 (+ x5477 x5347)) (<= x6078 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x8302 x8301) x2447) (= x5109 3521034783) (= x5693 x8432) (= x3513 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x1291 false)) x2273) (and (=> (and (and (= 164 x7726) (= x6531 (> x6280 x6078)) (= x6280 (x6862 (+ x5106 164)))) (not x6766)) (and (=> (and (not x6531) (and (= x5362 (+ x7736 4)) (= (< (+ 31 x5362) x6078) x2571))) (and (=> (and x2571 (and (= x1343 (< 18446744073709551615 x838)) (= (x1025 x5362) x838))) (and (=> x1343 x7380) (=> (and (not x1343) (and (= (x6862 (+ x9 x838)) x896) (= x9 (+ x5362 32)) (= (> x896 x6078) x2146))) (and (=> (and (and (and (= x3666 (x3112 224)) (= x7813 (x6067 x7786 x8366 x1548 x3194 x4478)) (= x2034 (x4463 x3841 x6391 x1309 x7330)) (= x7786 (x8448 (- x4493 128))) (= x3841 (- x7786 32)) (= (x3112 128) x4840) (= x1314 (x4863 x7786 x2854 x3591 x5743 x6693 x7617)) (= (x3112 128) x2854) (= x4433 (x3112 160)) (= (x3112 224) x6300) (= (x48 x7258) x3816) (= (x3112 128) x2374) (>= x7786 32) (= (x3112 192) x6358) (= (x3112 256) x7068) (= x8197 (x3112 192)) (= x8309 (x6067 x3841 x2108 x7282 x1323 x3666)) (= x1904 (x3112 128)) (= x6074 (x8371 x3841 x4840 x1148)) (= x1323 (x3112 192)) (= (x3112 192) x7330) (= x6253 (x6862 (+ x5106 128))) (= x1309 (x3112 160)) (= (x3112 256) x4753) (= x6693 (x3112 224)) (= x7577 (x3112 224)) (= (x3112 160) x1548) (= (x3112 192) x5708) (= x2747 (x3112 128)) (= x2102 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838)) (= x4285 (x3112 128)) (= (x3112 128) x973) (= x2979 (x3112 288)) (= (x3112 128) x4962) (= (x6862 (+ 128 x5106)) x7888) (= x8366 (x3112 128)) (= x8228 (ite (= 0 x3841) x2118 (ite (>= 32 x3841) x2414 (ite (>= 64 x3841) x6074 (ite (<= x3841 96) x2034 (ite (>= 128 x3841) x8309 (ite (<= x3841 160) x8130 x3097))))))) (>= 224 x7786) (= x1975 (x3112 160)) (= (x3112 288) x3838) (= (x3105 x3841 x973 x4433 x6358 x7577 x6995 x8213) x3097) (= (x3631 0) x2118) (= x7680 (= 0 x3816)) (= (x3112 160) x5271) (= x8213 (x3112 288)) (= (x3112 128) x6391) (= x5407 (x8371 64 x7601 7)) (= x4478 (x3112 224)) (= (x3112 320) x1371) (= (x3112 160) x6733) (= (x4863 x3841 x4962 x1975 x1342 x6300 x7068) x8130) (= x3982 (x8371 x7786 x2579 x6442)) (= (x1874 x7786 x2747) x3782) (= (x3112 192) x3194) (= (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371) x5667) (= (x1874 x3841 x462) x2414) (= (x3112 128) x2579) (= x4493 (x6862 (+ x6253 32))) (= (x3112 256) x6995) (= (x3112 128) x2108) (= x5743 (x3112 192)) (= x2521 (x3112 160)) (= x6594 (x3112 256)) (= (x3112 160) x6442) (= (x3112 192) x945) (= x7617 (x3112 256)) (= (x3112 160) x7282) (= (x3112 224) x2048) (= (x3112 128) x462) (= (x3112 192) x1342) (= (x8371 64 x574 (ite (>= 32 x7786) x3782 (ite (>= 64 x7786) x3982 (ite (>= 96 x7786) x494 (ite (>= 128 x7786) x7813 (ite (<= x7786 160) x1314 (ite (>= 192 x7786) x2102 x5667))))))) x7258) (= x494 (x4463 x7786 x2374 x5271 x5708)) (= x1148 (x3112 160)) (= (x3112 160) x3591) (= (x3112 224) x2006)) (or (and (and (and (= x7865 (x8371 x5303 x6385 x7242)) (= x7017 (x4457 288)) (= (x1874 x5303 x7695) x7362) (= (x4457 320) x8401) (= (x3631 0) x955) (= x8598 (x4457 128)) (= (x4457 128) x1376) (= (x4457 192) x2190) (>= 224 x5303) (= (x4457 160) x7242) (= x8144 (x4457 128)) (= (x4457 224) x3508) (= (= x3816 (ite (= 0 x5303) x955 (ite (<= x5303 32) x7362 (ite (>= 64 x5303) x7865 (ite (<= x5303 96) x6984 (ite (<= x5303 128) x3920 (ite (>= 160 x5303) x3521 (ite (<= x5303 192) x1690 x6714)))))))) x2021) (= x7722 (x4457 160)) (= (x4457 224) x1853) (= x2948 (x4457 192)) (= x7725 (x4457 160)) (= (x4457 224) x1189) (= x3920 (x6067 x5303 x8144 x4874 x6943 x3508)) (= (x4457 256) x6877) (= x3478 (x4457 160)) (= (x4457 192) x6943) (= (x4457 256) x5847) (= x7695 (x4457 128)) (= x7928 (x4457 256)) (= (x4457 160) x4874) (= x1690 (x3105 x5303 x8598 x1439 x3622 x5389 x5847 x3794)) (= x3458 (x4457 128)) (= x6984 (x4463 x5303 x1376 x7722 x5491)) (= (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401) x6714) (= x5491 (x4457 192)) (= x2558 (x6862 (+ 128 x838))) (= (x4863 x5303 x3458 x3478 x2190 x1189 x7928) x3521) (= (x4457 160) x1439) (= x3622 (x4457 192)) (= (x4457 128) x6385) (= x5389 (x4457 224)) (= (x4457 288) x3794) (= x5303 (x8448 (- x2558 128))) (= x5297 (x4457 128))) (or (and (and (= 132 x6843) (= x4914 false) (= x4911 true)) (not x2021)) (and (and (= (x6862 (+ 31 x838)) x5406) (= x7317 (x8371 64 x574 (ite (>= 32 x1919) x3278 (ite (>= 64 x1919) x4467 (ite (<= x1919 96) x4583 (ite (<= x1919 128) x4084 (ite (>= 160 x1919) x6538 (ite (>= 192 x1919) x3882 x5579)))))))) (= (x1033 192) x4145) (= x11 (x1033 128)) (= (x4628 x5406 32) x5483) (= x62 (- x1919 32)) (= x6216 (x1033 192)) (= (x1033 128) x3305) (= (x1033 192) x6655) (>= x1919 32) (= x466 (x4463 x62 x589 x6754 x6216)) (= (x1033 224) x6289) (= (x4863 x62 x2406 x1667 x1539 x5391 x8104) x5970) (= (x6862 (+ x8028 x681)) x8152) (= (x1962 x1919 x5104 x3100 x1732 x811 x6799 x7958 x850) x5579) (< x681 x8152) (= x1539 (x1033 192)) (>= x8152 161) (= x6264 (x8371 x62 x6998 x2947)) (= (x6862 (+ x5106 31)) x346) (= x1732 (x1033 192)) (= x992 (* x5483 32)) (= x6880 (x1033 192)) (= (x1033 224) x6861) (= (x1033 128) x2406) (= x294 (x1033 128)) (= x2762 (x1033 128)) (= (x4863 x1919 x11 x2518 x4145 x4321 x8086) x6538) (= x4980 (x1033 128)) (= (x6862 (+ 128 x5106)) x7599) (or (<= x7274 31) (>= x7274 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x7688 x681) x7274) (= x1415 (x3631 0)) (= (x1874 x1919 x4645) x3278) (= x1653 (ite (= x62 0) x1415 (ite (<= x62 32) x2520 (ite (<= x62 64) x6264 (ite (>= 96 x62) x466 (ite (<= x62 128) x5776 (ite (>= 160 x62) x5970 x374))))))) (= x5776 (x6067 x62 x3305 x6018 x6655 x4882)) (= (x1033 192) x150) (= x6801 (x1033 288)) (= x4583 (x4463 x1919 x5254 x4545 x6880)) (= x8028 (x6862 (+ x992 32))) (= x1667 (x1033 160)) (= (x1033 288) x2464) (= x4467 (x8371 x1919 x294 x5490)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x5106) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x5106)) (= x1443 true) (= x7954 (x1033 256)) (= x8433 (x1033 192)) (= (x1033 256) x5508) (= (x6067 x1919 x2762 x836 x812 x6861) x4084) (= x306 (x1033 128)) (= (x4628 x346 32) x7117) (= (x1033 128) x7602) (= x589 (x1033 128)) (= 128 x4945) (= x812 (x1033 192)) (= (+ x5986 160) x681) (= x8086 (x1033 256)) (= x6998 (x1033 128)) (= (x1033 320) x850) (= (x1033 160) x3100) (= (x1033 160) x6754) (= x5490 (x1033 160)) (= x811 (x1033 224)) (= x374 (x3105 x62 x4980 x7963 x8433 x6289 x5508 x6801)) (= (* 32 x7117) x5986) (= x6018 (x1033 160)) (= (x1033 160) x2947) (= x5391 (x1033 224)) (= x844 (x8371 64 x7601 7)) (= (x6862 (+ x5106 128)) x5371) (= (x1033 160) x2518) (= (x1033 224) x519) (= x5254 (x1033 128)) (= (x1874 x62 x306) x2520) (= x4882 (x1033 224)) (= x7958 (x1033 288)) (= (x1033 160) x836) (= (x6862 (+ 32 x681)) x3241) (= x6799 (x1033 256)) (= (x1033 128) x4645) (<= x1919 224) (= x5104 (x1033 128)) (= (x1033 160) x7963) (= (x8448 (- (mod (+ x7599 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x1919) (= x2885 (x6862 (+ x5106 160))) (= x3882 (x3105 x1919 x7602 x5208 x150 x519 x7954 x2464)) (= 0 x6843) (= x5208 (x1033 160)) (= x8104 (x1033 256)) (= x4545 (x1033 160)) (= x418 false) (= x693 (x6862 (+ x838 x3241))) (= x4321 (x1033 224))) x2021))) (not x7680)) (and x7680 (and (= x1155 false) (= x1023 true) (= 132 x6843))))) (not x2146)) x6249) (=> x2146 x2280))))) (=> (and (not x2571) (and (= 0 x6843) (= false x4849) (= x2239 true))) x6249))) (=> x6531 x2280))) (=> x6766 x7380))) (=> (and (= 0 x4946) (not x2273)) x6760))) (=> (and x4658 (and (= x1912 x2828) (= 0 x7033) (= false x2044) (= x4758 2) (= x6490 x3240) (= x3308 x7483) (= true x762) (= x5160 0))) x7857)))))
(assert (x6021 x1373))
(assert (= x1919 (x864 (x1874 x1919 x4645))))
(assert (=> (>= 10000 x7932) (= (x8569 x7932) 0)))
(assert (= (not (and (= true x497) (= false x2787) (= x4585 true) (= false x7536) (= false x5770) (= false x6439) (= 0 x7592) (= (x715 128) x5527) (= false x801) (= x7340 true) (= x6178 x5527) (= 0 x3197) (= false x6648))) x1897))
(assert (x6021 x2714))
(assert (x6021 x8091))
(assert (x6021 x1019))
(assert (x6021 x7970))
(assert (= 36 (x569 (x8371 64 x5581 36))))
(assert (=> (>= 10000 x1840) (= (x8569 x1840) 0)))
(assert (= (x2668 (x3105 x128 x4110 x1484 x2815 x3788 x8111 x2550)) x3788))
(assert (x7457 x1081))
(assert (= (and x2103 x487) x1289))
(assert (= (x864 (x8371 64 x5898 100)) 64))
(assert (x6021 x5364))
(assert (x6021 x3620))
(assert (= x7330 (x4408 (x4463 x3841 x6391 x1309 x7330))))
(assert (x6021 x5171))
(assert (= x8175 (x4378 (x8371 64 x8175 4))))
(assert (x6021 x5865))
(assert (x6021 x6930))
(assert (= x4027 (and (not x1255) x4431)))
(assert (not (x3961 (x4863 x1911 x1243 x4709 x2434 x4409 x2534))))
(assert (> (x8371 64 x5924 12) 10000))
(assert (> (x8371 x1891 x117 x8176) 10000))
(assert (= x3758 (x569 (x8371 64 1 x3758))))
(assert (x6021 x5986))
(assert (x6021 x212))
(assert (x6021 x6497))
(assert (= (and x8549 (not x7799)) x4403))
(assert (x6021 x1701))
(assert (= (and (not x534) x447) x7045))
(assert (x6021 x5297))
(assert (< 10000 (x1874 32 x1068)))
(assert (= (x8569 (x8371 64 x158 (ite (<= x8390 32) x3046 (ite (>= 64 x8390) x6218 (ite (<= x8390 96) x3520 (ite (>= 128 x8390) x2175 (ite (>= 160 x8390) x3928 (ite (>= 192 x8390) x3577 x7486)))))))) (x8371 64 x158 (ite (<= x8390 32) x3046 (ite (<= x8390 64) x6218 (ite (<= x8390 96) x3520 (ite (>= 128 x8390) x2175 (ite (<= x8390 160) x3928 (ite (>= 192 x8390) x3577 x7486)))))))))
(assert (= (and (not x7303) x7154) x3962))
(assert (= (and (not x7046) x4082) x2576))
(assert (x2662 x6266 32))
(assert (= x5964 (and (not x7181) x498)))
(assert (x2662 x536 128))
(assert (x6021 x1706))
(assert (x6021 x5639))
(assert (x6021 x5592))
(assert (= (x4378 (x4863 x2495 x250 x7219 x6882 x1933 x4430)) x250))
(assert (x6021 x6187))
(assert (= (x8569 (x4863 x7786 x2854 x3591 x5743 x6693 x7617)) (x4863 x7786 x2854 x3591 x5743 x6693 x7617)))
(assert (x6021 x3857))
(assert (=> (>= 10000 x3347) (= 0 (x8569 x3347))))
(assert (= x1145 (x569 (x4463 x7741 x4301 x1145 x5328))))
(assert (= (x8569 3963877391197344453575983046348115674221700746820753546331534351508065746944) 0))
(assert (x6021 x2878))
(assert (x6021 x5490))
(assert (x6290 x5598))
(assert (not (x3961 (x8371 64 x8175 3))))
(assert (not (x3961 (x8371 x636 x862 x7005))))
(assert (x6021 x2201))
(assert (x6021 x8185))
(assert (x6021 x3339))
(assert (x6021 x3020))
(assert (x6021 x2815))
(assert (=> (<= x7827 10000) (= 0 (x8569 x7827))))
(assert (= (and x3047 x2525) x2203))
(assert (= (x4408 (x4863 x1883 x2748 x5837 x2413 x4530 x2755)) x2413))
(assert (= (x864 (x8371 64 x6554 36)) 64))
(assert (x6021 x2957))
(assert (x3961 34591783479076665122502074927488338969190252781858077677016911635275368785765))
(assert (x6021 x7473))
(assert (= 64 (x864 (x8371 64 x6632 (ite (<= x5107 32) x7657 (ite (<= x5107 64) x7720 (ite (>= 96 x5107) x782 (ite (<= x5107 128) x3066 (ite (>= 160 x5107) x3077 (ite (<= x5107 192) x4867 x1118))))))))))
(assert (= (=> (= x4129 (> x6735 0)) (and (=> (and (and (= x4673 x8590) (= x4562 x8139) (= x4346 x5505) (= x8202 x6395) (= x2715 x3980) (= x1552 x2953)) x4129) x4058) (=> (and (not x4129) (and (= true x1444) (= x1957 4) (= false x544))) x3821))) x5791))
(assert (x6021 x4945))
(assert (x6021 x5701))
(assert (x6021 x6189))
(assert (x6021 x3393))
(assert (not (x3961 (x3631 0))))
(assert (x6021 x852))
(assert (x6021 x2711))
(assert (x6021 x3306))
(assert (x7457 x766))
(assert (=> (<= x2048 10000) (= (x8569 x2048) 0)))
(assert (= x2615 (and x498 x7181)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117)))
(assert (=> (>= 10000 x7617) (= 0 (x8569 x7617))))
(assert (= (x4408 (x4863 x636 x5379 x256 x5272 x4150 x8142)) x5272))
(assert (x6021 x4597))
(assert (=> (<= x3287 10000) (= (x8569 x3287) 0)))
(assert (x6021 x7528))
(assert (=> (<= x884 10000) (= (x8569 x884) 0)))
(assert (x6021 x5563))
(assert (x5269 x4601))
(assert (x6021 x7653))
(assert (= (and x6285 x1288) x49))
(assert (x2186 x7430))
(assert (x6021 x2371))
(assert (x7457 x3958))
(assert (= (and x5450 x5387) x6926))
(assert (x6021 x6870))
(assert (x6021 x4483))
(assert (x6021 x4361))
(assert (x6021 x7297))
(assert (x6021 x6824))
(assert (= (or (and x2639 (not x1049)) (and (not x8420) x3720) (and x1322 (not x4728)) (and (not x7324) x290)) x2411))
(assert (< (x4463 x3841 x6391 x1309 x7330) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x7605))
(assert (x2662 x4856 256))
(assert (= x4005 (and x189 (not x3755))))
(assert (x6021 x3894))
(assert (= (x4463 x5107 x1599 x5399 x4359) (x8569 (x4463 x5107 x1599 x5399 x4359))))
(assert (> (x8371 x112 x7510 x987) 10000))
(assert (x6021 x724))
(assert (x6290 x4032))
(assert (< (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1960 x6843))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509)))
(assert (x1635 32 x8558))
(assert (x6021 x4243))
(assert (x6021 x2544))
(assert (= (=> (and (= true x3936) (= x7483 x3308) (= x5160 36) (= x3240 x6490) (= x7033 0) (= x7217 2) (= false x2708) (= x2828 x1912)) x7857) x1803))
(assert (= x6134 (x864 (x1962 x6134 x6386 x7648 x3836 x3403 x8102 x4293 x6424))))
(assert (= (or (and x3665 x7354) (and x6334 x6482)) x1655))
(assert (x6021 x1315))
(assert (= x5149 (and x3704 x7256)))
(assert (< (x8371 x1883 x1070 x6150) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4934 (x2668 (x4863 x8390 x4163 x6722 x2492 x4934 x2354))))
(assert (x2186 x3777))
(assert (x6021 x2716))
(assert (=> (>= 10000 x7102) (= 0 (x8569 x7102))))
(assert (x6021 x3258))
(assert (x6021 x1772))
(assert (= (x8569 (x8371 x636 x862 x7005)) (x8371 x636 x862 x7005)))
(assert (x7457 x2453))
(assert (x6021 x5271))
(assert (= (and x2485 (not x1212)) x6115))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4463 x2495 x1522 x3977 x5655)))
(assert (= x6300 (x2668 (x4863 x3841 x4962 x1975 x1342 x6300 x7068))))
(assert (x6021 x346))
(assert (= (or (and x2514 (not x7043)) (and (not x4402) x3511) (and x5034 (not x5369))) x7789))
(assert (=> (>= 10000 x7539) (= 0 (x8569 x7539))))
(assert (x6021 x681))
(assert (x6021 x1060))
(assert (x6021 x342))
(assert (= (x1874 x1891 x3763) (x8569 (x1874 x1891 x3763))))
(assert (x6021 x5107))
(assert (x6021 x848))
(assert (not (x3961 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829))))
(assert (= x4768 (x569 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068))))
(assert (= (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509) (x8569 (x3105 x8295 x7950 x1175 x2020 x2574 x6669 x2509))))
(assert (= (or (and x7184 x1382) (and x5316 x4619)) x1324))
(assert (x7457 x8543))
(assert (x6021 x3088))
(assert (x6021 x1595))
(assert (x6021 x7737))
(assert (=> (<= x8300 10000) (= (x8569 x8300) 0)))
(assert (= x6942 (and x85 x8343)))
(assert (=> (<= x1599 10000) (= (x8569 x1599) 0)))
(assert (x6021 x4702))
(assert (x6021 x839))
(assert (= (and x2583 x4203) x1295))
(assert (x6021 x6058))
(assert (= (x864 (x8371 64 x6524 12)) 64))
(assert (=> (<= x6643 10000) (= 0 (x8569 x6643))))
(assert (x6021 x1973))
(assert (x7582 2))
(assert (x6021 x1099))
(assert (x5269 x3211))
(assert (x6021 x2265))
(assert (= (x8569 (x8371 64 x7825 36)) (x8371 64 x7825 36)))
(assert (x6021 x656))
(assert (x6021 x5254))
(assert (= x5351 (and x3293 x3581)))
(assert (= x783 (and (not x6876) x8140)))
(assert (x6021 x5095))
(assert (x6021 x8301))
(assert (not (x3961 (x1874 x3841 x462))))
(assert (x6021 x5216))
(assert (x6021 x5082))
(assert (x6021 x6612))
(assert (x6021 x3084))
(assert (x6021 x5373))
(assert (x6021 x1227))
(assert (= (x8569 (x8371 64 x8226 36)) (x8371 64 x8226 36)))
(assert (x2662 x2235 32))
(assert (x6021 x564))
(assert (x6021 x5749))
(assert (= (=> (and (= x7108 (= x7765 0)) (or (not x7108) x7108)) x3410) x6765))
(assert (x6021 x6533))
(assert (=> (<= x8582 10000) (= (x8569 x8582) 0)))
(assert (x6021 x5331))
(assert (= (and x4662 x3323) x3876))
(assert (= 11 (x569 (x8371 64 x3003 11))))
(assert (x6021 x2914))
(assert (x7582 x7473))
(assert (x6021 x7548))
(assert (= (x8371 64 x5581 36) (x8569 (x8371 64 x5581 36))))
(assert (x2186 x7917))
(assert (= (x986 (x4863 x1891 x2624 x6776 x7509 x4204 x6170)) x6170))
(assert (x6021 x4757))
(assert (= x4150 (x2668 (x4863 x636 x5379 x256 x5272 x4150 x8142))))
(assert (x6021 x1671))
(assert (= (x8569 38584857114614344130707641774870441135179346817440091772946614992565446901760) 0))
(assert (x6021 x8381))
(assert (= (x1874 x1409 x6621) (x8569 (x1874 x1409 x6621))))
(assert (x6021 x6735))
(assert (x6021 x4778))
(assert (x6021 x8263))
(assert (x6021 x3529))
(assert (=> (>= 10000 x4603) (= 0 (x8569 x4603))))
(assert (= x2167 (and (not x2042) x6184)))
(assert (x6021 x3769))
(assert (=> (>= 10000 x4245) (= 0 (x8569 x4245))))
(assert (x6021 x5505))
(assert (x6021 x5058))
(assert (x6021 x7850))
(assert (x6021 x8558))
(assert (x6021 x7155))
(assert (= (x986 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)) x2528))
(assert (x6021 x2348))
(assert (x6021 x3444))
(assert (= (and x4039 x1913) x1397))
(assert (= 36 (x569 (x8371 64 x4060 36))))
(assert (x6021 x2461))
(assert (< (x4863 x7741 x1138 x7294 x4427 x6476 x4714) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x2366))
(assert (x6021 x1571))
(assert (= (or x7190 x6400) x2522))
(assert (x1635 32 (ite (not (= x5838 0)) 1 0)))
(assert (x6021 x8326))
(assert (not (x3961 (x8371 64 x6304 11))))
(assert (x6021 x7988))
(assert (> (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409) 10000))
(assert (x2626 x5015))
(assert (x6021 x7818))
(assert (= (x8569 (x8371 64 1 x4796)) (x8371 64 1 x4796)))
(assert (=> (>= 10000 x5113) (= 0 (x8569 x5113))))
(assert (= (and (not x6380) x8003) x6068))
(assert (= x2262 (and (not x6344) x3114)))
(assert (= (x864 (x8371 64 x7753 7)) 64))
(assert (= (x864 (x8371 64 x4060 36)) 64))
(assert (x6021 x4150))
(assert (x6021 x3386))
(assert (= (x8569 (x8371 64 x5898 100)) (x8371 64 x5898 100)))
(assert (= x7061 (or (and x5284 x8488) (and x1586 x6976))))
(assert (= (x8569 115792089237316195423570985008687907853269984665640564039457584007913129639773) 0))
(assert (x6021 x6515))
(assert (x2186 x4663))
(assert (= (x569 (x8371 64 x8175 3)) 3))
(assert (=> (>= 10000 x1539) (= 0 (x8569 x1539))))
(assert (= (=> (and (= 0 x5329) (= x473 true) (= false x7394)) x1788) x6348))
(assert (x6021 x5426))
(assert (x6021 x4919))
(assert (x6021 x4472))
(assert (= 64 (x864 (x8371 64 x1298 10))))
(assert (x6021 x3915))
(assert (x2186 x6246))
(assert (= x3693 (x4408 (x6067 x1891 x4148 x3347 x3693 x2735))))
(assert (x6021 x7996))
(assert (x6021 x115))
(assert (x6021 x7627))
(assert (x6021 x1121))
(assert (= x6130 (x4408 (x6067 x128 x7070 x5224 x6130 x3885))))
(assert (x770 x6015))
(assert (x6021 x3246))
(assert (x6021 x8546))
(assert (x1635 32 x4469))
(assert (= (x8371 64 x3003 11) (x8569 (x8371 64 x3003 11))))
(assert (=> (>= 10000 x3736) (= (x8569 x3736) 0)))
(assert (x6021 x7707))
(assert (= x81 (x864 (x1874 x81 x5974))))
(assert (x6021 x8004))
(assert (= (and (not x5824) x4406) x2682))
(assert (x6517 x5406 32))
(assert (= (x8569 (x8371 64 x7772 100)) (x8371 64 x7772 100)))
(assert (x3961 1461501637330902918203684832716283019655932542975))
(assert (x6021 x3997))
(assert (> (x4463 x128 x8018 x3984 x1135) 10000))
(assert (x6021 x3157))
(assert (x6021 x4656))
(assert (=> (>= 10000 x6861) (= 0 (x8569 x6861))))
(assert (= (x4378 (x6067 x7786 x8366 x1548 x3194 x4478)) x8366))
(assert (x6021 x2140))
(assert (= x2658 (=> (and (= x2229 x2371) (= x6338 x3368) (= x1067 x1900) (= x3255 x4486) (= x3020 x4647) (= x8397 0) (= x7189 x145) (= x4737 x3526) (= (x4375 255 x3170) x6392) (= x2078 x320) (= x7534 x1449) (= x225 x675) (= x7627 x4738) (= x6392 x2969) (= x8394 x5767) (= 2 x4334) (= x4848 x7367)) x174)))
(assert (=> (>= 10000 x6994) (= 0 (x8569 x6994))))
(assert (= (x2668 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617)) x3247))
(assert (x6021 x7828))
(assert (x6021 x2981))
(assert (x6021 x923))
(assert (=> (<= x2084 10000) (= (x8569 x2084) 0)))
(assert (x6021 x4787))
(assert (x3961 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= x952 (and x1269 x1494)))
(assert (= x878 (and x5702 x5559)))
(assert (= (and x7506 (not x2273)) x1677))
(assert (=> (<= x519 10000) (= 0 (x8569 x519))))
(assert (x2662 x6423 256))
(assert (= (x7859 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068)) x8068))
(assert (= x6655 (x4408 (x6067 x62 x3305 x6018 x6655 x4882))))
(assert (= (and (not x2525) x3047) x5530))
(assert (x6021 x4004))
(assert (= (and x1733 x7662) x2279))
(assert (= (x864 (x8371 64 x3611 1)) 64))
(assert (x6021 x5475))
(assert (x6021 x375))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x5898 100)))
(assert (x6021 x3933))
(assert (x6021 x3117))
(assert (x6021 x5774))
(assert (x7457 x6847))
(assert (= (or x7776 x5957 x6270 x64 x8229) x4039))
(assert (= (and x7798 (not x4507)) x8374))
(assert (x6021 x7028))
(assert (=> (<= x4934 10000) (= 0 (x8569 x4934))))
(assert (x6021 x6797))
(assert (x2496 x145))
(assert (x6021 x7535))
(assert (x6021 x6138))
(assert (x6021 x6988))
(assert (= (x569 (x6067 x6134 x7827 x3042 x5877 x4498)) x3042))
(assert (x6021 x8086))
(assert (= (x2668 (x1962 x1911 x6865 x4519 x1152 x206 x7828 x6978 x4829)) x206))
(assert (x6021 x8285))
(assert (< 10000 (x6067 x1919 x2762 x836 x812 x6861)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x603 36)))
(assert (x6021 x548))
(assert (=> (<= x192 10000) (= 0 (x8569 x192))))
(assert (x6021 x4155))
(assert (= (and x4631 x4570) x6177))
(assert (x6021 x1323))
(assert (< (x8371 64 x3611 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6021 x6810))
(assert (x6021 x3630))
(assert (x6021 x407))
(assert (x6021 x1021))
(assert (= (x569 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671)) x1031))
(assert (x6021 x2744))
(assert (= x5094 (x2668 (x6067 x1409 x7939 x8431 x874 x5094))))
(assert (x6021 x676))
(assert (x2186 x2330))
(assert (= (and x2571 x7467) x5141))
(assert (x6021 x1689))
(assert (=> (>= 10000 x1178) (= 0 (x8569 x1178))))
(assert (x6021 x3736))
(assert (x6021 x652))
(assert (x6021 x5832))
(assert (x6021 x7260))
(assert (= x4280 (and (not x2021) x694)))
(assert (x6021 x1554))
(assert (= x6098 (=> (= x2059 (= x5155 0)) (and (=> (and (and (= (> x6723 3) x3627) (= (x2968 x4484) x6723) (<= x6723 255) (= (x8371 64 x1859 11) x4484)) x2059) (and (=> (and x3627 (and (= x6902 true) (= false x772) (= 36 x6930))) x5280) (=> (and (= (= x6723 2) x643) (not x3627)) (and (=> (and (and (= true x7899) (= 4 x6930) (= x6063 false)) (not x643)) x5280) (=> (and x643 (and (= x5468 (x8371 64 1 x3758)) (>= 65535 x3255) (= x3758 (x8371 64 x3255 4)) (= (= x4368 0) x159) (= x5620 (x237 x5468)))) (and (=> (and x159 (= x4135 x5620)) x3897) (=> (and (= (< x4368 x5620) x3208) (not x159)) (and (=> (and x3208 (and (= x8277 false) (= 4 x6930) (= true x2177))) x5280) (=> (and (= x4368 x4135) (not x3208)) x3897))))))))) (=> (and (and (= false x4384) (= true x7914) (= x6930 4)) (not x2059)) x5280)))))
(assert (= (=> (= (= x6005 0) x7656) (and (=> (and (not x7656) (and (= x6450 x7367) (= x438 x3526) (= x5767 x3405) (= x7189 x7334) (= x2969 x1022) (= x8594 x320) (= x4738 x617) (= x29 x675) (= x3368 0) (= 1 x8397) (= x7423 x4486) (= x1449 x8) (= x4647 x7978) (= x3206 x2229) (= x4787 x1067))) x174) (=> (and (and (= x7329 false) (= x3870 true) (= 0 x6338)) x7656) x2658))) x6478))
(assert (x2626 (ite (not (= x702 0)) 1 0)))
(assert (x3961 18446744073709551615))
(assert (x6021 x905))
(assert (=> (>= 10000 x1632) (= 0 (x8569 x1632))))
(assert (=> (>= 10000 x5328) (= (x8569 x5328) 0)))
(assert (= (x8569 (x8371 x7741 x1640 x6441)) (x8371 x7741 x1640 x6441)))
(assert (=> (<= x7708 10000) (= (x8569 x7708) 0)))
(assert (= (x569 (x8371 64 x7601 7)) 7))
(assert (x6021 x6432))
(assert (x6021 x484))
(assert (x2186 x7112))
(assert (=> (<= x3891 10000) (= 0 (x8569 x3891))))
(assert (= (and x5411 x1200) x7955))
(assert (x6021 x1584))
(assert (= (=> (= x2875 (= x7155 0)) (and (=> (and (not x2875) (= x3893 (< x7239 64))) (and (=> (and (and (= (x7740 290) x3765) (= (x4375 1 x8471) x5700) (= x7965 (x8448 (- x5700 (mod (ite (> 32 x4568) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= 354 x7833) (= (x8371 64 x5113 11) x8417) (= x1282 (< 0 x7965)) (= x7332 (x8371 64 x5113 11)) (= x4568 (ite (< 0 x5700) x4879 (x4375 127 x4879))) (= 450 x108) (= (x8371 64 x3255 3) x3746) (= (x8371 64 x5113 11) x4640) (= x4879 (x4628 x8471 2)) (= 0 x1095) (= x2358 (+ 1 x4640)) (= x4772 (x7740 322)) (= x717 (x5308 x2358)) (= x8471 (x4380 x3746)) (= x996 (+ 2 x7332)) (= x4271 (x2007 x996))) (not x3893)) (and (=> (and (and (= x3813 (= 0 x4568)) (= x7366 (+ x2870 548)) (= (* 32 x5015) x2870) (= x5015 (x4628 (+ 31 x4568) 32))) x1282) (and (=> x3813 x2834) (=> (and (= (> x4568 31) x534) (not x3813)) (and (=> (and x534 (and (and (= (x6676 x6451) x3228) (= (+ 1 x6451) x106) (= (< 580 x4687) x7168) (= x4687 (+ 548 x4568)) (= (x1874 32 x3746) x6451)) (or (and (and (>= 612 x4687) (= x7175 (x6676 x106)) (<= 548 x4687)) x7168) (not x7168)))) x2989) (=> (and (not x534) (and (= x7422 (x4628 x1353 256)) (= (x4380 x3746) x1353) (= (* x7422 256) x2868))) x2834))))) (=> (and (and (= true x3290) (= 36 x6338) (= x5312 false)) (not x1282)) x2658))) (=> (and (and (= x7764 false) (= x6338 0) (= true x5548)) x3893) x2658))) (=> (and (and (= x3819 false) (= x3686 true) (= x6338 x7239)) x2875) x2658))) x3104))
(assert (= (x8371 64 x6632 (ite (<= x1911 32) x1094 (ite (>= 64 x1911) x6429 (ite (<= x1911 96) x6204 (ite (<= x1911 128) x61 (ite (>= 160 x1911) x1250 (ite (<= x1911 192) x6248 x6152))))))) (x8569 (x8371 64 x6632 (ite (<= x1911 32) x1094 (ite (<= x1911 64) x6429 (ite (>= 96 x1911) x6204 (ite (<= x1911 128) x61 (ite (<= x1911 160) x1250 (ite (>= 192 x1911) x6248 x6152))))))))))
(assert (= x1599 (x4378 (x4463 x5107 x1599 x5399 x4359))))
(assert (x1960 x2292))
(assert (= 64 (x864 (x8371 64 x3255 5))))
(assert (x6021 x4302))
(assert (x6021 x8313))
(assert (x6021 x5248))
(assert (= x1891 (x864 (x4863 x1891 x2624 x6776 x7509 x4204 x6170))))
(assert (= x7845 (and x5234 x6399)))
(assert (x6021 x2169))
(assert (x6021 x3582))
(assert (x6021 x2774))
(assert (> (x8371 x8295 x6192 x2459) 10000))
(assert (= (and x4517 (not x2619)) x2123))
(assert (x6021 x5647))
(assert (= (x8371 64 x574 (ite (>= 32 x1919) x3278 (ite (<= x1919 64) x4467 (ite (>= 96 x1919) x4583 (ite (>= 128 x1919) x4084 (ite (>= 160 x1919) x6538 (ite (>= 192 x1919) x3882 x5579))))))) (x8569 (x8371 64 x574 (ite (<= x1919 32) x3278 (ite (>= 64 x1919) x4467 (ite (>= 96 x1919) x4583 (ite (<= x1919 128) x4084 (ite (<= x1919 160) x6538 (ite (>= 192 x1919) x3882 x5579))))))))))
(assert (x6021 x4194))
(assert (= (or x4403 x520) x5822))
(assert (x6021 x6450))
(assert (x6021 x249))
(assert (= (or x6827 x8577) x929))
(assert (x6021 x6583))
(assert (x6021 x1246))
(assert (x6021 x3958))
(assert (not (x3961 (x8371 64 x5207 6))))
(assert (= (and x6012 (not x3709)) x4436))
(assert (= (x4408 (x4863 x112 x1756 x6665 x2535 x7887 x2377)) x2535))
(assert (=> (>= 10000 x8571) (= 0 (x8569 x8571))))
(assert (= (and x5433 (not x7901)) x3295))
(assert (= (x7859 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371)) x1371))
(assert (x2186 x1271))
(assert (x7457 x7416))
(assert (x6021 x5634))
(assert (= 0 (x8569 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (x6021 x7539))
(assert (x6021 x3651))
(assert (=> (<= x4726 10000) (= 0 (x8569 x4726))))
(assert (=> (>= 10000 x1883) (= (x8569 x1883) 0)))
(assert (= x459 (=> (and (= x6731 x3255) (= x2371 x2195) (= x2078 x3469) (= x8394 x6238) (= x4355 x7627) (= x4817 x5692) (= 0 x5930) (= x4848 x4614) (= (x4375 255 x6423) x6402) (= x4737 x5848) (= x3020 x67) (= x225 x5486) (= 2 x5684) (= x1900 x2399) (= x6402 x4253) (= x7534 x5832) (= x500 x145)) x94)))
(assert (x6021 x2747))
(assert (x6021 x4694))
(assert (= x6281 (=> (and (= x3731 x7278) (= x1995 x759) (= x7439 x3029) (= x8006 x1882) (= x3328 x664) (= x6112 x5210) (= x2683 x1235) (= x8552 x7973) (= x5405 x7493) (= x2981 x3160) (= x2405 x7480) (= x6010 x8120) (= x4705 x3150)) x6479)))
(assert (< 10000 (x8371 64 x4060 36)))
(assert (x6021 x7278))
(assert (x6021 x2234))
(assert (= x4019 (x4378 (x3105 x1409 x4019 x212 x2456 x2039 x1590 x3117))))
(assert (x6021 x5155))
(assert (x6021 x3124))
(assert (= (x864 (x6067 x6151 x5373 x4342 x8092 x2907)) x6151))
(assert (= (and x3343 x3877) x8019))
(assert (= x174 (=> (and (= x2015 (= 0 x8397)) (or x2015 (not x2015))) x3762)))
(assert (x6021 x4801))
(assert (= (=> (= x5559 (= x4558 0)) (and (=> (and x5559 (and (= x2604 0) (= x1556 false) (= true x5816))) x6209) (=> (and (not x5559) (and (= x1453 x7393) (= x2655 x1198) (= x3440 x1099) (= 0 x2551) (= 1 x3083) (= x4041 x2181))) x8256))) x4884))
(assert (x6021 x7617))
(assert (> (x6067 x6151 x5373 x4342 x8092 x2907) 10000))
(assert (= 0 (x8569 59118985759084958080972419199848406897631161684926069324597705158744233476096)))
(assert (x6021 x1823))
(assert (x6021 x7866))
(assert (x6021 x5413))
(assert (x6021 x5969))
(assert (x6021 x8425))
(assert (x770 x766))
(assert (x6021 x185))
(assert (= (x1880 (x1962 x5303 x5297 x7725 x2948 x1853 x6877 x7017 x8401)) x7017))
(assert (= (x8569 (x4463 x8390 x3088 x2679 x2045)) (x4463 x8390 x3088 x2679 x2045)))
(assert (x1960 x71))
(assert (x6021 x1956))
(assert (= x7437 (x4408 (x3105 x5107 x6452 x483 x7437 x8300 x4703 x1087))))
(assert (= x369 (and (not x4622) x4821)))
(assert (= (x4378 (x1962 x8390 x74 x4768 x5518 x1822 x7659 x6947 x8068)) x74))
(assert (= x8308 x3571))
(assert (= (x864 (x4463 x5303 x1376 x7722 x5491)) x5303))
(assert (x2186 x4624))
(assert (= x6692 (and x7467 (not x2571))))
(assert (< 10000 (x4863 x1409 x4788 x7372 x6764 x5069 x3607)))
(assert (x6021 x4927))
(assert (not (x3961 (x1874 x5107 x1246))))
(assert (= x4801 (x2668 (x3105 x6134 x784 x7932 x6503 x4801 x4603 x6409))))
(assert (x6517 x7479 2))
(assert (x7457 x4856))
(assert (x6021 x5487))
(assert (x6021 x6985))
(assert (= (and x670 x4009) x6084))
(assert (x6021 x6370))
(assert (= (x986 (x4863 x62 x2406 x1667 x1539 x5391 x8104)) x8104))
(assert (x6021 x2845))
(assert (= (x8569 (x8371 64 1 x3758)) (x8371 64 1 x3758)))
(assert (= (and x1641 x1651) x6471))
(assert (x6021 x6295))
(assert (x1960 x5738))
(assert (x6021 x7047))
(assert (x6290 x1890))
(assert (x2186 x414))
(assert (x6021 x3076))
(assert (= (or x3334 x1699) x5751))
(assert (=> (<= x8326 10000) (= (x8569 x8326) 0)))
(assert (x6021 x7068))
(assert (x6021 x3545))
(assert (x7457 x7162))
(assert (x1960 x4024))
(assert (=> (<= x2521 10000) (= 0 (x8569 x2521))))
(assert (= 64 (x864 (x8371 64 1 x3946))))
(assert (= x1572 (and x5747 x4174)))
(assert (x6021 x5799))
(assert (=> (>= 10000 x5525) (= (x8569 x5525) 0)))
(assert (x6021 x7756))
(assert (x6021 x5343))
(assert (x6021 x7270))
(assert (x2626 (ite (not (= 0 x3562)) 1 0)))
(assert (= (and x7619 x2072) x4846))
(assert (x2186 x3137))
(assert (x6021 x7160))
(assert (x6021 x3436))
(assert (x6021 x8513))
(assert (x2186 x1043))
(assert (< 10000 (x6067 x5107 x652 x8297 x5470 x2440)))
(assert (x6021 x6135))
(assert (= x5180 (and (not x1269) x1494)))
(assert (x6021 x6594))
(assert (x6021 x3171))
(assert (x6021 x8597))
(assert (not (x3961 (x8371 64 x6833 36))))
(assert (x6021 x6076))
(assert (x6021 x3391))
(assert (=> (<= x4617 10000) (= (x8569 x4617) 0)))
(assert (x6021 x6897))
(assert (x6021 x4954))
(assert (=> (<= x300 10000) (= 0 (x8569 x300))))
(assert (not (x3961 (x8371 64 1 x4796))))
(assert (= x7314 (and (not x5020) x4397)))
(assert (= (x864 (x4463 x6151 x2347 x739 x8571)) x6151))
(assert (x6021 x8092))
(assert (= (and x5570 x7595) x1112))
(assert (x6021 x4663))
(assert (x6021 x4639))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1874 32 103)))
(assert (=> (<= x7330 10000) (= (x8569 x7330) 0)))
(assert (< (x3631 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x6290 x6624))
(assert (x6021 x8492))
(assert (x7582 x5549))
(assert (x6021 x5767))
(assert (x2186 x4319))
(assert (x6021 x4414))
(assert (< (x6067 x7741 x6208 x6643 x6566 x3171) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x8569 (x6067 x1911 x3544 x5997 x2878 x5969)) (x6067 x1911 x3544 x5997 x2878 x5969)))
(assert (x6021 x4227))
(assert (= x1293 (and (not x7641) x6364)))
(assert (= x385 (and x779 (not x2573))))
(assert (x6021 x1426))
(assert (x6021 x4784))
(assert (x6021 x3405))
(assert (=> (>= 10000 x6330) (= 0 (x8569 x6330))))
(assert (x6021 x6708))
(assert (x6021 x3464))
(assert (x6021 x8016))
(assert (= x5207 (x4378 (x8371 64 x5207 2))))
(assert (not (x3961 (x3105 x7786 x1904 x2521 x8197 x2048 x4753 x3838))))
(assert (x1960 x2208))
(assert (= x5203 (x569 (x1962 x81 x3960 x5203 x458 x2585 x5241 x4726 x6602))))
(assert (x6021 x298))
(assert (not (x3961 (x1874 x112 x6919))))
(assert (not (x3961 (x6067 x1891 x4148 x3347 x3693 x2735))))
(assert (= x2103 (or x6798 (and x1574 (not x843)))))
(assert (= x8278 (and (not x2782) x4588)))
(assert (x6021 x7083))
(assert (x7457 x2629))
(assert (x6021 x3977))
(assert (not (x3961 (x6067 x5107 x652 x8297 x5470 x2440))))
(assert (= x2495 (x864 (x3105 x2495 x1632 x917 x848 x6330 x1780 x230))))
(assert (=> (<= x2815 10000) (= (x8569 x2815) 0)))
(assert (x2186 x400))
(assert (x6021 x3351))
(assert (x6021 x4513))
(assert (< 10000 (x6067 x1891 x4148 x3347 x3693 x2735)))
(assert (x5269 x6769))
(assert (x6021 x5511))
(assert (x6021 x7072))
(assert (x6021 x5495))
(assert (not (x3961 (x1874 x6134 x6756))))
(assert (x6021 x6890))
(assert (x6021 x1152))
(assert (x6021 x1691))
(assert (= (x4378 (x8371 64 x2008 (ite (>= 32 x1891) x6104 (ite (<= x1891 64) x2684 (ite (>= 96 x1891) x7540 (ite (>= 128 x1891) x7449 (ite (<= x1891 160) x5213 (ite (<= x1891 192) x5567 x6398)))))))) x2008))
(assert (x6021 x7158))
(assert (=> (>= 10000 x634) (= 0 (x8569 x634))))
(assert (=> (>= 10000 x6028) (= (x8569 x6028) 0)))
(assert (x6021 x3792))
(assert (= x5825 (=> (and (= true x2994) (= false x3944) (= 0 x1188)) x5100)))
(assert (x6021 x8060))
(assert (not (x3961 (x4463 x81 x2653 x217 x3582))))
(assert (x6021 x3502))
(assert (x6021 x3607))
(assert (= x7798 (and (not x2215) x4881)))
(assert (not (x3961 (x3105 x1883 x4729 x1031 x3380 x6028 x7469 x3671))))
(assert (x6021 x6269))
(assert (= (x4408 (x4863 x128 x4320 x1602 x6915 x2789 x4998)) x6915))
(assert (x7457 x4108))
(assert (= (and x7664 x5944) x7578))
(assert (= x3716 (or x4401 x3210)))
(assert (= x2859 (x569 (x1962 x5107 x3588 x2859 x4323 x8127 x7086 x7358 x1821))))
(assert (x6021 x1665))
(assert (< 10000 (x4463 x112 x3807 x4106 x7605)))
(assert (x6021 x3830))
(assert (x6021 x1461))
(assert (= x1617 x4725))
(assert (x6021 x2386))
(assert (= (x7859 (x1962 x1891 x1646 x8216 x740 x7072 x6933 x8585 x3736)) x3736))
(assert (x6021 x6625))
(assert (x6021 x4252))
(assert (x6021 x5188))
(assert (< 10000 (x8371 64 x7753 7)))
(assert (< 10000 (x8371 x636 x862 x7005)))
(assert (= x8320 (=> (and (or (not x843) x843) (= (= x5129 0) x843)) x510)))
(assert (x6021 x1599))
(assert (x6021 x4935))
(assert (x6021 x1130))
(assert (x6021 x7330))
(assert (x6021 x3373))
(assert (x6021 x650))
(assert (x6021 x1818))
(assert (x6021 x8446))
(assert (= x121 (and (not x4481) x4563)))
(assert (=> (>= 10000 x3836) (= 0 (x8569 x3836))))
(assert (= x5355 (and (not x588) x2454)))
(assert (x6021 x7335))
(assert (x6021 x2510))
(assert (= (x4378 (x8371 64 x5879 6)) x5879))
(assert (not (x3961 (x4463 x8390 x3088 x2679 x2045))))
(assert (x6021 x3807))
(assert (x6021 x2728))
(assert (= x4550 (and (not x6404) x2123)))
(assert (=> (>= 10000 x5389) (= (x8569 x5389) 0)))
(assert (= (x8569 1461501637330902918203684832716283019655932542975) 0))
(assert (= x619 (and (not x5256) x3118)))
(assert (not (x3961 (x6067 x6151 x5373 x4342 x8092 x2907))))
(assert (x6021 x8184))
(assert (=> (>= 10000 x603) (= 0 (x8569 x603))))
(assert (x1635 1000000000 x3308))
(assert (= (x8569 x8416) (x8569 (+ x8416 1))))
(assert (x6021 x2830))
(assert (x6021 x7143))
(assert (> (x8371 64 x158 (ite (>= 32 x8390) x3046 (ite (<= x8390 64) x6218 (ite (<= x8390 96) x3520 (ite (<= x8390 128) x2175 (ite (<= x8390 160) x3928 (ite (>= 192 x8390) x3577 x7486))))))) 10000))
(assert (= (x2668 (x3105 x81 x3258 x3502 x366 x5093 x7636 x3742)) x5093))
(assert (x6021 x234))
(assert (= (x986 (x4863 x2495 x250 x7219 x6882 x1933 x4430)) x4430))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4863 x1409 x4788 x7372 x6764 x5069 x3607)))
(assert (x6021 x6208))
(assert (x6021 x4042))
(assert (= (x1880 (x3105 x112 x1531 x4308 x6785 x8422 x2528 x4999)) x4999))
(assert (= (x4408 (x6067 x3841 x2108 x7282 x1323 x3666)) x1323))
(assert (= x1744 (and x1058 (not x7573))))
(assert (= (and x5717 x7974) x1500))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8371 64 x1862 6)))
(assert (= (x8569 (x6067 x1883 x5624 x7756 x4567 x683)) (x6067 x1883 x5624 x7756 x4567 x683)))
(assert (x6290 x3137))
(assert (x6021 x2355))
(assert (x6021 x4829))
(assert (= (x4378 (x1962 x7786 x4285 x6733 x945 x2006 x6594 x2979 x1371)) x4285))
(assert (x6021 x1107))
(assert (x6021 x6212))
(assert (x6021 x3108))
(assert (x6021 x4839))
(assert (=> (<= x1853 10000) (= 0 (x8569 x1853))))
(assert (x6021 x3043))
(assert (=> (>= 10000 x3671) (= (x8569 x3671) 0)))
(assert (x6021 x6891))
(assert (= (x8569 (x4863 x5303 x3458 x3478 x2190 x1189 x7928)) (x4863 x5303 x3458 x3478 x2190 x1189 x7928)))
(assert (x6021 x3531))
(assert (x6021 x1911))
(assert (x6021 x3931))
(assert (x6021 x4080))
(assert (x6021 x634))
(assert (=> (<= x636 10000) (= (x8569 x636) 0)))
(assert (= 0 (x8569 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (x6021 x7331))
(assert (x6021 x2198))
(assert (x6021 x2585))
(assert (x6021 x5604))
(assert (x6021 x6082))
(assert (x6021 x2882))
(assert (x1960 x1819))
(assert (= x2150 (x986 (x3105 x636 x960 x3432 x8582 x3247 x2150 x4617))))
(assert (=> (>= 10000 x5491) (= 0 (x8569 x5491))))
(assert (x6021 x3333))
(assert (= x1288 (and (not x7800) x6617)))
(assert (= x1731 (and x1303 (not x283))))
(assert (> (x8371 64 x7391 7) 10000))
(assert (x1960 x8270))
(assert (x6021 x5974))
(assert (x6021 x6180))
(assert (x6021 x5215))
(assert (= x6065 (x1880 (x1962 x1883 x1910 x5933 x7192 x383 x4341 x6065 x5704))))
(assert (> (x8371 64 x1862 6) 10000))
(assert (x6021 x2212))
(assert (x6021 x1831))
(assert (x2186 x51))
(assert (x6021 x7823))
(assert (= x5162 (and (not x2939) x5812)))
(assert (= (=> (and (= false x5143) (= x3308 x7483) (= x1782 true) (= 0 x7033) (= x2828 x1912) (= x2350 2) (= x5160 36) (= x3240 x6490)) x7857) x7714))
(assert (=> (<= x6216 10000) (= 0 (x8569 x6216))))
(assert (x6021 x5486))
(assert (x7582 32))
(assert (x6021 x1371))
(assert (x6517 x5851 256))
(assert (x7457 x1607))
(assert (= x6771 (and (not x7967) x2450)))
(assert (= (x4378 (x1874 x6151 x199)) x199))
(assert (x6021 x7245))
(assert (x6021 x7070))
(assert (= x1618 (=> (and (= 0 x7033) (= x1912 x2828) (= x5160 36) (= x3308 x7483) (= x8536 true) (= x1358 false) (= x6490 x3240) (= x2169 2)) x7857)))
(assert (x6021 x2084))
(assert (x6021 x904))
(assert (x6021 x393))
(assert (x6021 x1453))
(assert (x1635 32 x44))
(assert (x6021 x408))
(assert (x7457 x2881))
(assert (x6021 x7997))
(assert (= x248 (and x7952 (not x1968))))
(assert (> (x1962 x2495 x1001 x2938 x5923 x300 x1996 x6224 x4177) 10000))
(assert (= (x2668 (x6067 x128 x7070 x5224 x6130 x3885)) x3885))
(assert (x6021 x2565))
(assert (= (or (and x8311 x2576) (and x4917 x6310) (and x2807 x263)) x7169))
(assert (x6021 x3368))
(assert (=> (<= x2624 10000) (= (x8569 x2624) 0)))
(assert (x6021 x2347))
(assert (= x2867 (or x2743 x7413)))
(check-sat)
(exit)
