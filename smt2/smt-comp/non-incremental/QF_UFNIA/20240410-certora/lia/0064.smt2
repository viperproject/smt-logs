(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x754 () Int)
(declare-fun x1086 () Int)
(declare-fun x1863 () Int)
(declare-fun x957 () Int)
(declare-fun x415 () Bool)
(declare-fun x869 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1191 () Int)
(declare-fun x2263 () Bool)
(declare-fun x2180 () Int)
(declare-fun x338 () Bool)
(declare-fun x1949 () Int)
(declare-fun x2026 () Int)
(declare-fun x665 () Int)
(declare-fun x1652 () Int)
(declare-fun x1941 () Int)
(declare-fun x618 () Bool)
(declare-fun x605 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x2063 () Int)
(declare-fun x2220 () Int)
(declare-fun x1634 () Int)
(declare-fun x912 () Bool)
(declare-fun x1802 () Int)
(declare-fun x939 () Int)
(declare-fun x424 () Int)
(declare-fun x1015 () Bool)
(declare-fun x1728 () Int)
(declare-fun x1294 () Int)
(declare-fun x2247 () Bool)
(declare-fun x89 () Int)
(declare-fun x60 () Int)
(declare-fun x1670 () Int)
(declare-fun x1282 () Int)
(declare-fun x423 () Int)
(declare-fun x818 () Int)
(declare-fun x434 () Int)
(declare-fun x640 () Bool)
(declare-fun x1182 () Int)
(declare-fun x20 () Int)
(declare-fun x1496 () Int)
(declare-fun x1887 () Int)
(declare-fun x1187 () Bool)
(declare-fun x2381 () Int)
(declare-fun x1732 () Bool)
(declare-fun x562 () Bool)
(declare-fun x242 () Bool)
(declare-fun x604 () Int)
(declare-fun x1327 () Int)
(declare-fun x1800 () Int)
(declare-fun x1755 () Bool)
(declare-fun x1025 () Int)
(declare-fun x557 () Int)
(declare-fun x484 () Int)
(declare-fun x2216 () Int)
(declare-fun x748 () Int)
(declare-fun x1592 () Int)
(declare-fun x1814 () Int)
(declare-fun x606 () Int)
(declare-fun x1387 (Int) Int)
(declare-fun x2339 () Int)
(declare-fun x530 () Int)
(declare-fun x142 () Bool)
(declare-fun x1143 () Int)
(declare-fun x118 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1588 () Int)
(declare-fun x332 () Bool)
(declare-fun x419 () Int)
(declare-fun x1928 () Int)
(declare-fun x1509 () Int)
(declare-fun x821 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1559 () Int)
(declare-fun x1075 () Int)
(declare-fun x1598 () Int)
(declare-fun x2046 () Int)
(declare-fun x1977 () Int)
(declare-fun x559 () Int)
(declare-fun x1555 () Int)
(declare-fun x2405 () Bool)
(declare-fun x1100 () Int)
(declare-fun x589 () Bool)
(declare-fun x19 () Bool)
(declare-fun x45 () Bool)
(declare-fun x620 () Int)
(declare-fun x1414 () Int)
(declare-fun x1421 () Bool)
(declare-fun x1489 () Int)
(declare-fun x2088 () Bool)
(declare-fun x1288 () Int)
(declare-fun x105 () Bool)
(declare-fun x286 () Bool)
(declare-fun x891 () Int)
(declare-fun x863 () Int)
(declare-fun x374 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1972 () Int)
(declare-fun x263 () Bool)
(declare-fun x616 () Int)
(declare-fun x2378 () Bool)
(declare-fun x576 () Int)
(declare-fun x696 () Int)
(declare-fun x1324 () Int)
(declare-fun x1247 () Int)
(declare-fun x631 () Int)
(declare-fun x2278 () Int)
(declare-fun x2156 () Int)
(declare-fun x2093 () Bool)
(declare-fun x1516 () Int)
(declare-fun x193 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x835 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x1248 () Int)
(declare-fun x2399 () Bool)
(declare-fun x824 () Bool)
(declare-fun x567 () Int)
(declare-fun x188 () Bool)
(declare-fun x1701 () Int)
(declare-fun x1899 () Int)
(declare-fun x1888 () Bool)
(declare-fun x1186 () Int)
(declare-fun x868 () Int)
(declare-fun x212 () Bool)
(declare-fun x1681 () Int)
(declare-fun x159 () Int)
(declare-fun x1924 () Int)
(declare-fun x485 () Int)
(declare-fun x1610 (Int Int) Int)
(declare-fun x512 (Int) Int)
(declare-fun x2323 () Int)
(declare-fun x1178 () Bool)
(declare-fun x1161 () Int)
(declare-fun x2078 () Int)
(declare-fun x520 () Int)
(declare-fun x1132 () Int)
(declare-fun x349 () Bool)
(declare-fun x1797 () Int)
(declare-fun x993 () Int)
(declare-fun x1035 () Int)
(declare-fun x1600 () Int)
(declare-fun x173 () Int)
(declare-fun x733 () Bool)
(declare-fun x2228 () Int)
(declare-fun x2335 () Bool)
(declare-fun x2091 () Int)
(declare-fun x2261 () Int)
(declare-fun x1389 () Int)
(declare-fun x528 () Bool)
(declare-fun x1745 () Int)
(declare-fun x1221 () Int)
(declare-fun x724 () Int)
(declare-fun x825 () Int)
(declare-fun x1212 () Int)
(declare-fun x1134 () Int)
(declare-fun x325 () Int)
(declare-fun x885 () Bool)
(declare-fun x1045 () Int)
(declare-fun x943 () Int)
(declare-fun x2103 () Int)
(declare-fun x471 () Int)
(declare-fun x1314 () Bool)
(declare-fun x1491 () Int)
(declare-fun x435 () Int)
(declare-fun x450 () Bool)
(declare-fun x1030 () Int)
(declare-fun x1906 () Int)
(declare-fun x2369 () Int)
(declare-fun x965 () Int)
(declare-fun x1537 () Int)
(declare-fun x10 () Int)
(declare-fun x1650 () Int)
(declare-fun x1243 () Bool)
(declare-fun x1176 () Int)
(declare-fun x83 () Bool)
(declare-fun x1913 () Int)
(declare-fun x2205 () Int)
(declare-fun x947 () Int)
(declare-fun x62 (Int Int) Int)
(declare-fun x377 () Int)
(declare-fun x2268 () Int)
(declare-fun x686 () Int)
(declare-fun x960 () Int)
(declare-fun x887 () Int)
(declare-fun x1077 () Int)
(declare-fun x687 (Int) Int)
(declare-fun x220 () Bool)
(declare-fun x1714 () Int)
(declare-fun x343 () Int)
(declare-fun x1481 () Int)
(declare-fun x2107 () Int)
(declare-fun x1787 () Bool)
(declare-fun x147 (Int) Int)
(declare-fun x1475 () Bool)
(declare-fun x619 () Int)
(declare-fun x2398 () Int)
(declare-fun x974 () Int)
(declare-fun x1140 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x597 () Bool)
(declare-fun x336 () Int)
(declare-fun x1029 () Int)
(declare-fun x743 () Int)
(declare-fun x1377 () Bool)
(declare-fun x297 () Bool)
(declare-fun x2345 () Int)
(declare-fun x986 () Bool)
(declare-fun x1121 (Int) Int)
(declare-fun x2087 (Int) Int)
(declare-fun x1463 () Bool)
(declare-fun x1620 () Int)
(declare-fun x675 () Int)
(declare-fun x2157 () Int)
(declare-fun x335 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x991 () Int)
(declare-fun x47 () Int)
(declare-fun x2410 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1508 () Int)
(declare-fun x1080 () Int)
(declare-fun x1851 () Int)
(declare-fun x592 () Int)
(declare-fun x852 () Int)
(declare-fun x1108 () Bool)
(declare-fun x707 () Int)
(declare-fun x355 () Bool)
(declare-fun x456 () Bool)
(declare-fun x1858 () Int)
(declare-fun x2317 () Bool)
(declare-fun x337 () Int)
(declare-fun x569 () Bool)
(declare-fun x577 () Bool)
(declare-fun x1644 () Int)
(declare-fun x329 () Int)
(declare-fun x285 () Int)
(declare-fun x1607 () Int)
(declare-fun x222 () Int)
(declare-fun x1257 () Int)
(declare-fun x265 () Bool)
(declare-fun x1835 () Int)
(declare-fun x127 () Int)
(declare-fun x1838 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x872 () Int)
(declare-fun x661 () Int)
(declare-fun x1969 () Int)
(declare-fun x426 () Int)
(declare-fun x307 () Bool)
(declare-fun x2050 () Int)
(declare-fun x164 () Int)
(declare-fun x2265 () Int)
(declare-fun x449 () Int)
(declare-fun x255 () Int)
(declare-fun x827 () Int)
(declare-fun x1751 () Bool)
(declare-fun x1767 () Int)
(declare-fun x469 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x362 () Bool)
(declare-fun x846 () Bool)
(declare-fun x2200 () Int)
(declare-fun x487 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x1771 () Int)
(declare-fun x309 () Int)
(declare-fun x143 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x2076 () Int)
(declare-fun x921 () Int)
(declare-fun x1374 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x1789 () Int)
(declare-fun x1822 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1299 () Int)
(declare-fun x1356 () Int)
(declare-fun x253 () Bool)
(declare-fun x2284 (Int Int Int Int Int Int) Int)
(declare-fun x2307 () Int)
(declare-fun x491 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x1896 () Bool)
(declare-fun x1201 () Int)
(declare-fun x106 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x1346 (Int) Int)
(declare-fun x1427 () Bool)
(declare-fun x1958 () Int)
(declare-fun x725 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1393 () Int)
(declare-fun x234 () Int)
(declare-fun x575 () Int)
(declare-fun x1960 () Bool)
(declare-fun x916 () Int)
(declare-fun x1753 () Int)
(declare-fun x2373 () Bool)
(declare-fun x1120 () Int)
(declare-fun x101 () Int)
(declare-fun x917 () Int)
(declare-fun x1526 () Int)
(declare-fun x1210 () Bool)
(declare-fun x371 () Int)
(declare-fun x1788 () Bool)
(declare-fun x2098 () Int)
(declare-fun x2070 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x2320 () Int)
(declare-fun x233 () Bool)
(declare-fun x2382 () Int)
(declare-fun x1068 () Bool)
(declare-fun x1730 () Int)
(declare-fun x1179 () Int)
(declare-fun x1561 () Int)
(declare-fun x722 () Int)
(declare-fun x2361 () Int)
(declare-fun x405 () Int)
(declare-fun x324 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x149 () Int)
(declare-fun x75 () Bool)
(declare-fun x1955 () Int)
(declare-fun x2140 () Int)
(declare-fun x2310 () Bool)
(declare-fun x422 () Int)
(declare-fun x1772 () Bool)
(declare-fun x1622 () Int)
(declare-fun x1458 () Int)
(declare-fun x1440 () Int)
(declare-fun x2037 () Int)
(declare-fun x1806 () Int)
(declare-fun x1909 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x2006 () Int)
(declare-fun x587 () Bool)
(declare-fun x1983 (Int) Int)
(declare-fun x1366 () Int)
(declare-fun x1328 () Int)
(declare-fun x1557 () Int)
(declare-fun x1258 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x189 () Bool)
(declare-fun x1454 (Int) Int)
(declare-fun x404 () Int)
(declare-fun x1058 () Int)
(declare-fun x49 (Int) Int)
(declare-fun x2150 () Int)
(declare-fun x1988 () Bool)
(declare-fun x1642 () Int)
(declare-fun x150 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x1811 () Int)
(declare-fun x1254 () Int)
(declare-fun x1098 () Int)
(declare-fun x22 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x287 () Int)
(declare-fun x811 () Bool)
(declare-fun x2360 (Int Int Int Int Int Int Int) Int)
(declare-fun x901 () Bool)
(declare-fun x658 () Bool)
(declare-fun x1750 () Int)
(declare-fun x816 () Int)
(declare-fun x261 () Bool)
(declare-fun x2269 () Int)
(declare-fun x599 () Int)
(declare-fun x734 () Int)
(declare-fun x163 () Bool)
(declare-fun x657 () Int)
(declare-fun x366 () Int)
(declare-fun x1903 () Bool)
(declare-fun x968 () Bool)
(declare-fun x243 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x889 () Int)
(declare-fun x2179 () Int)
(declare-fun x301 () Int)
(declare-fun x840 () Int)
(declare-fun x2309 () Bool)
(declare-fun x444 () Int)
(declare-fun x1865 (Int) Int)
(declare-fun x111 () Bool)
(declare-fun x630 () Int)
(declare-fun x1769 () Bool)
(declare-fun x1107 () Int)
(declare-fun x837 () Int)
(declare-fun x351 () Int)
(declare-fun x706 () Int)
(declare-fun x125 () Int)
(declare-fun x359 () Int)
(declare-fun x1464 () Int)
(declare-fun x2233 () Int)
(declare-fun x501 (Int Int) Int)
(declare-fun x1297 () Int)
(declare-fun x1587 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1679 () Int)
(declare-fun x549 () Int)
(declare-fun x2275 () Bool)
(declare-fun x2135 () Int)
(declare-fun x2013 () Int)
(declare-fun x358 () Int)
(declare-fun x788 () Int)
(declare-fun x1431 () Bool)
(declare-fun x702 () Int)
(declare-fun x1965 () Int)
(declare-fun x828 () Int)
(declare-fun x685 () Int)
(declare-fun x32 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x518 () Int)
(declare-fun x1567 () Bool)
(declare-fun x1987 () Int)
(declare-fun x1038 () Int)
(declare-fun x812 () Int)
(declare-fun x1471 () Bool)
(declare-fun x570 () Int)
(declare-fun x474 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1819 () Int)
(declare-fun x2371 () Bool)
(declare-fun x1839 () Int)
(declare-fun x718 () Bool)
(declare-fun x929 () Bool)
(declare-fun x123 () Bool)
(declare-fun x1975 () Int)
(declare-fun x1860 () Bool)
(declare-fun x473 () Bool)
(declare-fun x778 () Int)
(declare-fun x1602 () Int)
(declare-fun x1653 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x1693 () Int)
(declare-fun x190 () Int)
(declare-fun x644 () Int)
(declare-fun x2186 () Int)
(declare-fun x1997 () Int)
(declare-fun x436 (Int Int) Int)
(declare-fun x1747 () Int)
(declare-fun x399 () Int)
(declare-fun x2100 () Int)
(declare-fun x594 () Bool)
(declare-fun x2356 () Int)
(declare-fun x1832 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x1659 () Int)
(declare-fun x1694 () Int)
(declare-fun x859 () Bool)
(declare-fun x637 () Int)
(declare-fun x1271 () Int)
(declare-fun x1696 () Bool)
(declare-fun x1219 () Int)
(declare-fun x2047 () Int)
(declare-fun x524 () Bool)
(declare-fun x1914 () Int)
(declare-fun x797 () Int)
(declare-fun x1495 () Bool)
(declare-fun x1801 () Int)
(declare-fun x862 () Int)
(declare-fun x51 () Bool)
(declare-fun x776 () Int)
(declare-fun x6 () Int)
(declare-fun x871 () Bool)
(declare-fun x509 (Int) Int)
(declare-fun x2057 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x2105 () Int)
(declare-fun x728 () Int)
(declare-fun x446 () Int)
(declare-fun x1110 () Bool)
(declare-fun x131 () Int)
(declare-fun x1905 () Int)
(declare-fun x1019 () Int)
(declare-fun x2281 () Bool)
(declare-fun x1207 () Int)
(declare-fun x831 () Bool)
(declare-fun x2007 () Int)
(declare-fun x380 () Int)
(declare-fun x2149 () Bool)
(declare-fun x1978 () Int)
(declare-fun x595 () Bool)
(declare-fun x1202 () Int)
(declare-fun x210 () Int)
(declare-fun x1505 () Bool)
(declare-fun x2096 () Int)
(declare-fun x2227 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x738 (Int) Int)
(declare-fun x2288 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x1460 () Int)
(declare-fun x1360 () Bool)
(declare-fun x514 () Int)
(declare-fun x971 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1870 () Int)
(declare-fun x1660 () Int)
(declare-fun x1952 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1261 () Int)
(declare-fun x132 () Int)
(declare-fun x266 () Bool)
(declare-fun x798 () Int)
(declare-fun x766 () Int)
(declare-fun x1231 () Bool)
(declare-fun x27 () Int)
(declare-fun x2166 () Bool)
(declare-fun x1998 () Int)
(declare-fun x480 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x2005 () Int)
(declare-fun x1544 () Bool)
(declare-fun x1770 () Int)
(declare-fun x584 () Bool)
(declare-fun x969 () Int)
(declare-fun x1688 () Int)
(declare-fun x870 () Int)
(declare-fun x1805 () Int)
(declare-fun x1300 () Int)
(declare-fun x2197 () Int)
(declare-fun x231 () Bool)
(declare-fun x56 () Int)
(declare-fun x867 () Bool)
(declare-fun x76 () Int)
(declare-fun x273 () Int)
(declare-fun x1354 () Int)
(declare-fun x2306 () Int)
(declare-fun x103 () Int)
(declare-fun x28 () Int)
(declare-fun x752 () Int)
(declare-fun x532 () Bool)
(declare-fun x704 () Int)
(declare-fun x2042 () Int)
(declare-fun x2321 () Int)
(declare-fun x895 () Bool)
(declare-fun x344 () Int)
(declare-fun x1700 () Int)
(declare-fun x1621 () Int)
(declare-fun x90 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x873 () Bool)
(declare-fun x603 () Int)
(declare-fun x95 () Int)
(declare-fun x1722 () Int)
(declare-fun x2097 () Int)
(declare-fun x1385 () Int)
(declare-fun x1711 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x641 () Int)
(declare-fun x1451 () Bool)
(declare-fun x121 () Int)
(declare-fun x420 () Bool)
(declare-fun x841 () Int)
(declare-fun x865 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x902 () Int)
(declare-fun x2209 () Int)
(declare-fun x1574 () Int)
(declare-fun x499 () Bool)
(declare-fun x168 () Int)
(declare-fun x2210 () Int)
(declare-fun x979 () Bool)
(declare-fun x421 () Int)
(declare-fun x1573 () Int)
(declare-fun x1786 () Int)
(declare-fun x1668 () Bool)
(declare-fun x656 () Bool)
(declare-fun x2349 () Int)
(declare-fun x847 () Bool)
(declare-fun x564 () Int)
(declare-fun x1363 () Int)
(declare-fun x339 () Int)
(declare-fun x2106 () Int)
(declare-fun x1144 () Int)
(declare-fun x1096 () Int)
(declare-fun x2223 () Int)
(declare-fun x1990 () Bool)
(declare-fun x2139 () Int)
(declare-fun x1615 () Bool)
(declare-fun x2396 () Int)
(declare-fun x493 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x169 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x988 () Int)
(declare-fun x268 () Bool)
(declare-fun x1702 () Int)
(declare-fun x2162 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1462 () Int)
(declare-fun x1756 () Bool)
(declare-fun x1995 () Int)
(declare-fun x786 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x1848 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x2296 () Int)
(declare-fun x2031 () Int)
(declare-fun x2202 () Int)
(declare-fun x225 () Int)
(declare-fun x2304 () Int)
(declare-fun x1931 () Int)
(declare-fun x171 () Int)
(declare-fun x758 () Bool)
(declare-fun x455 (Int) Int)
(declare-fun x1874 () Bool)
(declare-fun x2016 () Int)
(declare-fun x638 () Int)
(declare-fun x2245 () Int)
(declare-fun x1310 () Int)
(declare-fun x2011 () Int)
(declare-fun x211 () Int)
(declare-fun x681 () Int)
(declare-fun x1012 () Int)
(declare-fun x2230 () Bool)
(declare-fun x1645 () Int)
(declare-fun x1259 () Int)
(declare-fun x952 () Bool)
(declare-fun x1022 () Int)
(declare-fun x2403 () Int)
(declare-fun x655 () Bool)
(declare-fun x1616 () Int)
(declare-fun x1372 () Int)
(declare-fun x1529 () Int)
(declare-fun x1326 () Int)
(declare-fun x55 () Bool)
(declare-fun x1023 () Int)
(declare-fun x691 () Int)
(declare-fun x1128 () Int)
(declare-fun x115 () Bool)
(declare-fun x2019 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1818 () Bool)
(declare-fun x1487 () Int)
(declare-fun x1174 () Int)
(declare-fun x1339 () Int)
(declare-fun x2343 () Int)
(declare-fun x1378 () Bool)
(declare-fun x1479 () Int)
(declare-fun x2397 () Int)
(declare-fun x1918 () Int)
(declare-fun x1579 () Bool)
(declare-fun x1877 () Int)
(declare-fun x534 () Int)
(declare-fun x1181 () Int)
(declare-fun x288 () Int)
(declare-fun x2362 () Bool)
(declare-fun x1843 () Int)
(declare-fun x1273 () Bool)
(declare-fun x490 () Bool)
(declare-fun x1467 () Int)
(declare-fun x137 () Bool)
(declare-fun x2154 () Int)
(declare-fun x652 () Int)
(declare-fun x2159 () Int)
(declare-fun x2219 () Int)
(declare-fun x563 () Int)
(declare-fun x1060 () Int)
(declare-fun x347 () Int)
(declare-fun x2114 () Bool)
(declare-fun x875 () Bool)
(declare-fun x2151 () Int)
(declare-fun x1794 () Int)
(declare-fun x750 () Int)
(declare-fun x227 () Int)
(declare-fun x204 () Bool)
(declare-fun x2000 () Int)
(declare-fun x1003 () Int)
(declare-fun x1424 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1743 () Int)
(declare-fun x586 () Int)
(declare-fun x1398 () Bool)
(declare-fun x550 () Int)
(declare-fun x815 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x2346 () Int)
(declare-fun x1113 () Int)
(declare-fun x907 () Bool)
(declare-fun x908 () Bool)
(declare-fun x539 () Int)
(declare-fun x1689 () Int)
(declare-fun x1438 () Bool)
(declare-fun x46 () Int)
(declare-fun x1803 () Int)
(declare-fun x1985 () Int)
(declare-fun x1133 () Bool)
(declare-fun x1715 (Int) Int)
(declare-fun x2213 () Int)
(declare-fun x311 () Int)
(declare-fun x1684 () Int)
(declare-fun x1641 () Bool)
(declare-fun x2021 () Int)
(declare-fun x2256 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x755 () Int)
(declare-fun x1099 () Int)
(declare-fun x1220 () Int)
(declare-fun x970 () Bool)
(declare-fun x1617 (Int Int) Int)
(declare-fun x2377 () Bool)
(declare-fun x1963 () Int)
(declare-fun x2167 () Int)
(declare-fun x2170 () Int)
(declare-fun x2038 () Bool)
(declare-fun x2235 () Bool)
(declare-fun x1138 () Int)
(declare-fun x799 () Bool)
(declare-fun x2104 () Int)
(declare-fun x533 () Bool)
(declare-fun x213 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x1740 () Int)
(declare-fun x334 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1569 () Int)
(declare-fun x1146 () Bool)
(declare-fun x1692 () Int)
(declare-fun x1551 () Bool)
(declare-fun x1246 () Int)
(declare-fun x1383 () Int)
(declare-fun x275 () Int)
(declare-fun x1281 () Int)
(declare-fun x342 (Int) Int)
(declare-fun x1633 () Int)
(declare-fun x1530 () Int)
(declare-fun x878 () Int)
(declare-fun x502 () Bool)
(declare-fun x1606 () Int)
(declare-fun x1894 () Int)
(declare-fun x522 () Bool)
(declare-fun x590 () Int)
(declare-fun x2229 () Int)
(declare-fun x492 () Int)
(declare-fun x826 () Int)
(declare-fun x2386 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x352 () Bool)
(declare-fun x9 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1348 () Int)
(declare-fun x1581 () Int)
(declare-fun x2024 () Bool)
(declare-fun x433 () Bool)
(declare-fun x639 () Int)
(declare-fun x1406 () Int)
(declare-fun x838 () Int)
(declare-fun x966 () Bool)
(declare-fun x478 () Bool)
(declare-fun x807 () Int)
(declare-fun x99 () Bool)
(declare-fun x720 () Int)
(declare-fun x2012 () Int)
(declare-fun x804 () Int)
(declare-fun x1253 () Int)
(declare-fun x508 () Bool)
(declare-fun x140 () Int)
(declare-fun x1885 () Int)
(declare-fun x2222 () Int)
(declare-fun x157 () Bool)
(declare-fun x2187 () Bool)
(declare-fun x2110 () Int)
(declare-fun x591 () Int)
(declare-fun x663 () Int)
(declare-fun x1733 () Int)
(declare-fun x64 () Int)
(declare-fun x645 () Bool)
(declare-fun x391 () Int)
(declare-fun x457 () Int)
(declare-fun x2018 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x430 () Int)
(declare-fun x2359 () Int)
(declare-fun x775 () Int)
(declare-fun x41 () Int)
(declare-fun x1497 () Bool)
(declare-fun x2290 () Int)
(declare-fun x1737 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2158 () Int)
(declare-fun x241 (Int Int Int) Int)
(declare-fun x810 (Int Int Int Int) Int)
(declare-fun x1429 (Int Int Int Int Int) Int)
(declare-fun x1066 () Int)
(declare-fun x320 (Int) Int)
(declare-fun x1244 () Int)
(declare-fun x2048 () Int)
(declare-fun x1943 () Bool)
(declare-fun x2 () Bool)
(declare-fun x151 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x1925 () Int)
(declare-fun x388 () Bool)
(declare-fun x385 () Int)
(declare-fun x2249 () Bool)
(declare-fun x1249 () Int)
(declare-fun x1028 () Int)
(declare-fun x987 () Bool)
(declare-fun x468 () Int)
(declare-fun x77 () Bool)
(declare-fun x2237 () Int)
(declare-fun x135 () Int)
(declare-fun x1513 () Bool)
(declare-fun x437 () Bool)
(declare-fun x832 () Int)
(declare-fun x673 () Int)
(declare-fun x1358 () Int)
(declare-fun x1584 () Int)
(declare-fun x1183 () Int)
(declare-fun x1934 () Int)
(declare-fun x267 () Int)
(declare-fun x24 () Bool)
(declare-fun x736 () Int)
(declare-fun x2367 () Int)
(declare-fun x223 () Int)
(declare-fun x2299 () Int)
(declare-fun x513 () Int)
(declare-fun x1855 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x2102 () Int)
(declare-fun x505 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x226 () Bool)
(declare-fun x2319 () Int)
(declare-fun x1956 () Bool)
(declare-fun x1698 () Int)
(declare-fun x2243 () Int)
(declare-fun x2414 () Int)
(declare-fun x1312 () Bool)
(declare-fun x897 () Bool)
(declare-fun x1796 () Int)
(declare-fun x91 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x1685 () Int)
(declare-fun x888 () Int)
(declare-fun x1699 () Int)
(declare-fun x1664 () Int)
(declare-fun x1799 () Bool)
(declare-fun x632 () Int)
(declare-fun x1944 () Bool)
(declare-fun x271 () Int)
(declare-fun x1927 () Int)
(declare-fun x892 () Bool)
(declare-fun x1342 (Int) Int)
(declare-fun x905 () Int)
(declare-fun x1139 () Bool)
(declare-fun x833 () Int)
(declare-fun x984 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x817 () Int)
(declare-fun x330 () Bool)
(declare-fun x11 () Bool)
(declare-fun x931 () Int)
(declare-fun x662 () Int)
(declare-fun x2308 () Int)
(declare-fun x915 () Int)
(declare-fun x1026 () Int)
(declare-fun x1974 () Int)
(declare-fun x1667 () Bool)
(declare-fun x470 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x1601 () Int)
(declare-fun x2350 () Bool)
(declare-fun x112 () Bool)
(declare-fun x1752 () Int)
(declare-fun x1006 () Int)
(declare-fun x1712 () Int)
(declare-fun x1950 () Int)
(declare-fun x1546 () Int)
(declare-fun x1119 () Int)
(declare-fun x84 () Int)
(declare-fun x1882 () Int)
(declare-fun x2130 () Bool)
(declare-fun x506 () Bool)
(declare-fun x877 () Bool)
(declare-fun x357 () Int)
(declare-fun x113 () Int)
(declare-fun x1904 () Int)
(declare-fun x2044 () Int)
(declare-fun x1823 () Bool)
(declare-fun x4 () Int)
(declare-fun x2389 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x998 () Int)
(declare-fun x571 () Int)
(declare-fun x975 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1500 () Int)
(declare-fun x961 () Int)
(declare-fun x1252 () Int)
(declare-fun x723 () Int)
(declare-fun x2051 () Int)
(declare-fun x411 (Int) Int)
(declare-fun x412 () Int)
(declare-fun x1315 () Int)
(declare-fun x303 () Int)
(declare-fun x364 () Int)
(declare-fun x708 () Int)
(declare-fun x2017 () Int)
(declare-fun x765 () Bool)
(declare-fun x903 () Int)
(declare-fun x898 () Int)
(declare-fun x418 () Bool)
(declare-fun x209 () Bool)
(declare-fun x146 () Bool)
(declare-fun x429 () Int)
(declare-fun x2352 () Bool)
(declare-fun x283 () Int)
(declare-fun x462 () Int)
(declare-fun x1734 () Bool)
(declare-fun x866 () Int)
(declare-fun x238 () Int)
(declare-fun x1484 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x198 () Bool)
(declare-fun x997 () Bool)
(declare-fun x1461 () Int)
(declare-fun x2412 () Int)
(declare-fun x251 () Int)
(declare-fun x1157 () Bool)
(declare-fun x2196 () Int)
(declare-fun x208 () Bool)
(declare-fun x82 () Int)
(declare-fun x864 () Int)
(declare-fun x731 () Int)
(declare-fun x68 () Int)
(declare-fun x1277 () Int)
(declare-fun x1264 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x2250 () Bool)
(declare-fun x197 () Bool)
(declare-fun x400 () Int)
(declare-fun x1953 () Int)
(declare-fun x1204 () Bool)
(declare-fun x2010 () Int)
(declare-fun x1761 () Int)
(declare-fun x1000 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x1088 () Int)
(declare-fun x1033 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x1367 () Int)
(declare-fun x1441 () Int)
(declare-fun x98 () Int)
(declare-fun x678 () Int)
(declare-fun x548 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x161 () Int)
(declare-fun x2241 () Int)
(declare-fun x1325 () Bool)
(declare-fun x282 () Bool)
(declare-fun x1320 () Int)
(declare-fun x39 () Bool)
(declare-fun x922 () Int)
(declare-fun x579 () Int)
(declare-fun x2177 () Bool)
(declare-fun x2353 () Int)
(declare-fun x313 () Int)
(declare-fun x1984 () Bool)
(declare-fun x318 () Int)
(declare-fun x43 (Int) Int)
(declare-fun x1074 () Int)
(declare-fun x2289 () Bool)
(declare-fun x414 () Int)
(declare-fun x910 () Bool)
(declare-fun x2295 (Int Int) Int)
(declare-fun x2211 (Int) Int)
(declare-fun x2141 () Int)
(declare-fun x607 () Bool)
(declare-fun x1190 () Int)
(declare-fun x494 () Bool)
(declare-fun x634 () Int)
(declare-fun x87 () Bool)
(declare-fun x670 () Int)
(declare-fun x109 () Int)
(declare-fun x396 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1583 () Int)
(declare-fun x857 () Int)
(declare-fun x2082 () Bool)
(declare-fun x699 () Int)
(declare-fun x1305 () Bool)
(declare-fun x395 () Int)
(declare-fun x1935 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1170 () Bool)
(declare-fun x102 () Int)
(declare-fun x615 () Int)
(declare-fun x633 () Bool)
(declare-fun x2172 () Int)
(declare-fun x822 () Bool)
(declare-fun x1731 () Int)
(declare-fun x1106 () Bool)
(declare-fun x510 () Int)
(declare-fun x1627 () Int)
(declare-fun x2293 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x1382 () Int)
(declare-fun x1493 (Int Int) Int)
(declare-fun x292 () Int)
(declare-fun x1130 () Int)
(declare-fun x2161 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x353 () Int)
(declare-fun x291 () Bool)
(declare-fun x1611 () Int)
(declare-fun x196 () Int)
(declare-fun x1921 () Bool)
(declare-fun x1162 () Int)
(declare-fun x1241 () Int)
(declare-fun x1407 () Int)
(declare-fun x2204 () Int)
(declare-fun x26 () Bool)
(declare-fun x1792 () Int)
(declare-fun x545 () Int)
(declare-fun x1206 () Int)
(declare-fun x2300 () Int)
(declare-fun x612 () Int)
(declare-fun x81 () Int)
(declare-fun x1016 () Int)
(declare-fun x1861 () Bool)
(declare-fun x314 () Int)
(declare-fun x945 () Int)
(declare-fun x8 () Int)
(declare-fun x1483 () Int)
(declare-fun x1886 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x1125 () Int)
(declare-fun x177 () Int)
(declare-fun x78 () Bool)
(declare-fun x376 () Int)
(declare-fun x896 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x1630 () Int)
(declare-fun x936 () Bool)
(declare-fun x893 () Int)
(declare-fun x1234 () Bool)
(declare-fun x442 () Int)
(declare-fun x379 () Int)
(declare-fun x94 () Int)
(declare-fun x465 () Bool)
(declare-fun x139 () Int)
(declare-fun x1127 () Int)
(declare-fun x2065 () Bool)
(declare-fun x453 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x2348 () Int)
(declare-fun x448 () Bool)
(declare-fun x1286 () Int)
(declare-fun x1808 () Int)
(declare-fun x2165 () Int)
(declare-fun x417 () Int)
(declare-fun x609 () Bool)
(declare-fun x1959 () Int)
(declare-fun x252 () Bool)
(declare-fun x383 () Int)
(declare-fun x946 () Bool)
(declare-fun x989 () Int)
(declare-fun x269 () Int)
(declare-fun x1514 () Bool)
(declare-fun x556 () Int)
(declare-fun x1459 () Bool)
(declare-fun x1807 () Int)
(declare-fun x1900 () Int)
(declare-fun x2286 () Bool)
(declare-fun x820 () Int)
(declare-fun x544 () Int)
(declare-fun x1748 () Bool)
(declare-fun x454 () Bool)
(declare-fun x245 () Bool)
(declare-fun x2387 () Int)
(declare-fun x2394 () Int)
(declare-fun x924 () Int)
(declare-fun x1971 () Int)
(declare-fun x789 () Int)
(declare-fun x1177 () Int)
(declare-fun x555 () Bool)
(declare-fun x1836 () Int)
(declare-fun x1450 () Int)
(declare-fun x1014 () Int)
(declare-fun x2034 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x1830 () Int)
(declare-fun x1386 () Int)
(declare-fun x72 () Bool)
(declare-fun x425 () Int)
(declare-fun x1536 (Int) Int)
(declare-fun x2181 () Int)
(declare-fun x1072 () Bool)
(declare-fun x1001 () Int)
(declare-fun x2341 () Int)
(declare-fun x1284 () Int)
(declare-fun x580 () Int)
(declare-fun x276 () Int)
(declare-fun x370 () Bool)
(declare-fun x1631 () Int)
(declare-fun x250 () Int)
(declare-fun x2277 () Bool)
(declare-fun x1619 () Int)
(declare-fun x1250 () Int)
(declare-fun x254 () Int)
(declare-fun x2053 () Bool)
(declare-fun x1304 () Int)
(declare-fun x2411 () Int)
(declare-fun x2198 () Bool)
(declare-fun x12 () Int)
(declare-fun x1552 () Bool)
(declare-fun x1065 () Int)
(declare-fun x813 () Int)
(declare-fun x2347 () Int)
(declare-fun x610 () Int)
(declare-fun x1891 () Int)
(declare-fun x1251 () Int)
(declare-fun x1821 () Int)
(declare-fun x2124 () Bool)
(declare-fun x1409 () Int)
(declare-fun x1159 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x1716 () Int)
(declare-fun x1228 () Bool)
(declare-fun x767 () Int)
(declare-fun x1303 () Bool)
(declare-fun x1785 () Int)
(declare-fun x316 () Int)
(declare-fun x1049 () Int)
(declare-fun x2155 () Int)
(declare-fun x2267 () Int)
(declare-fun x1422 () Bool)
(declare-fun x85 () Int)
(declare-fun x1376 () Int)
(declare-fun x185 () Int)
(declare-fun x73 () Bool)
(declare-fun x1727 () Int)
(declare-fun x581 () Int)
(declare-fun x1766 () Bool)
(declare-fun x1296 () Int)
(declare-fun x554 () Int)
(declare-fun x2370 () Bool)
(declare-fun x994 () Int)
(declare-fun x1468 () Bool)
(declare-fun x2142 () Int)
(declare-fun x1097 () Int)
(declare-fun x653 () Int)
(declare-fun x23 () Bool)
(declare-fun x1457 () Int)
(declare-fun x531 () Int)
(declare-fun x1291 () Int)
(declare-fun x1907 () Int)
(declare-fun x264 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x1674 () Int)
(declare-fun x130 () Int)
(declare-fun x1267 () Bool)
(declare-fun x214 () Bool)
(declare-fun x712 () Int)
(declare-fun x284 () Bool)
(declare-fun x174 () Int)
(declare-fun x1439 () Int)
(declare-fun x1639 () Int)
(declare-fun x2001 () Int)
(declare-fun x1240 () Int)
(declare-fun x398 () Int)
(declare-fun x785 (Int) Int)
(declare-fun x1093 () Int)
(declare-fun x940 () Int)
(declare-fun x1242 () Int)
(declare-fun x1171 () Bool)
(declare-fun x972 () Int)
(declare-fun x1773 () Bool)
(declare-fun x529 () Bool)
(declare-fun x1676 (Int Int) Int)
(declare-fun x617 () Bool)
(declare-fun x192 () Bool)
(declare-fun x2375 () Int)
(declare-fun x2276 () Bool)
(declare-fun x747 () Bool)
(declare-fun x666 () Bool)
(declare-fun x977 () Int)
(declare-fun x1948 () Int)
(declare-fun x2074 () Int)
(declare-fun x2136 () Int)
(declare-fun x1739 () Bool)
(declare-fun x881 () Int)
(declare-fun x165 () Int)
(declare-fun x2342 () Int)
(declare-fun x2404 () Int)
(declare-fun x679 () Bool)
(declare-fun x2379 () Int)
(declare-fun x1408 () Int)
(declare-fun x1593 () Int)
(declare-fun x1640 () Int)
(declare-fun x482 () Int)
(declare-fun x958 () Int)
(declare-fun x2242 () Int)
(declare-fun x464 () Int)
(declare-fun x354 () Int)
(declare-fun x560 () Int)
(declare-fun x1357 () Int)
(declare-fun x1994 () Int)
(declare-fun x167 () Bool)
(declare-fun x1629 () Int)
(declare-fun x1942 () Int)
(declare-fun x963 () Int)
(declare-fun x1669 () Bool)
(declare-fun x683 () Int)
(declare-fun x1910 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1215 () Bool)
(declare-fun x1872 () Int)
(declare-fun x625 () Int)
(declare-fun x2030 () Int)
(declare-fun x1169 () Int)
(declare-fun x600 () Bool)
(declare-fun x1149 () Int)
(declare-fun x1825 () Int)
(declare-fun x680 () Int)
(declare-fun x1345 () Bool)
(declare-fun x416 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x300 () Int)
(declare-fun x1361 () Int)
(declare-fun x2182 () Int)
(declare-fun x1067 () Int)
(declare-fun x953 () Int)
(declare-fun x574 () Int)
(declare-fun x305 () Int)
(declare-fun x2388 () Bool)
(declare-fun x5 () Bool)
(declare-fun x58 () Int)
(declare-fun x2206 () Bool)
(declare-fun x753 () Int)
(declare-fun x1779 () Bool)
(declare-fun x693 () Int)
(declare-fun x1054 () Int)
(declare-fun x694 () Int)
(declare-fun x1522 () Int)
(declare-fun x651 () Int)
(declare-fun x845 () Bool)
(declare-fun x519 () Int)
(declare-fun x928 () Int)
(declare-fun x413 () Bool)
(declare-fun x289 () Int)
(declare-fun x719 () Bool)
(declare-fun x688 () Bool)
(declare-fun x996 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x951 () Bool)
(declare-fun x475 () Bool)
(declare-fun x762 () Bool)
(declare-fun x2208 () Int)
(declare-fun x772 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x375 () Int)
(declare-fun x2118 () Int)
(declare-fun x162 () Int)
(declare-fun x1628 () Bool)
(declare-fun x909 () Int)
(declare-fun x206 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x602 () Int)
(declare-fun x761 () Bool)
(declare-fun x1768 () Int)
(declare-fun x1868 () Int)
(declare-fun x851 () Int)
(declare-fun x410 () Int)
(declare-fun x2337 () Int)
(declare-fun x401 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x2207 () Int)
(declare-fun x2112 () Int)
(declare-fun x2318 () Int)
(declare-fun x800 () Int)
(declare-fun x2035 () Int)
(declare-fun x572 (Int) Int)
(declare-fun x2175 () Bool)
(declare-fun x1147 () Int)
(declare-fun x779 () Int)
(declare-fun x1456 () Int)
(declare-fun x2129 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1889 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x801 () Int)
(declare-fun x914 () Int)
(declare-fun x1649 () Int)
(declare-fun x53 () Int)
(declare-fun x698 () Int)
(declare-fun x1307 () Int)
(declare-fun x2109 () Int)
(declare-fun x1197 () Int)
(declare-fun x932 () Int)
(declare-fun x2095 () Bool)
(declare-fun x1411 () Int)
(declare-fun x302 () Bool)
(declare-fun x152 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x2402 () Int)
(declare-fun x1862 () Bool)
(declare-fun x93 () Int)
(declare-fun x2168 () Int)
(declare-fun x672 () Int)
(declare-fun x1754 () Int)
(declare-fun x1697 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x1301 () Int)
(declare-fun x1852 () Int)
(declare-fun x886 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x1430 () Int)
(declare-fun x899 () Int)
(declare-fun x1778 () Int)
(declare-fun x156 () Int)
(declare-fun x1263 () Int)
(declare-fun x923 () Int)
(declare-fun x1528 () Bool)
(declare-fun x495 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x79 () Int)
(declare-fun x221 () Bool)
(declare-fun x1103 () Int)
(declare-fun x2385 () Int)
(declare-fun x1846 () Int)
(declare-fun x1774 () Bool)
(declare-fun x1443 () Int)
(declare-fun x2226 () Bool)
(declare-fun x1757 (Int) Int)
(declare-fun x920 () Int)
(declare-fun x628 () Int)
(declare-fun x154 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x874 () Int)
(declare-fun x949 () Int)
(declare-fun x230 () Int)
(declare-fun x1511 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x791 () Bool)
(declare-fun x1519 () Int)
(declare-fun x2408 () Int)
(declare-fun x298 () Int)
(declare-fun x1901 () Int)
(declare-fun x1435 () Int)
(declare-fun x982 () Int)
(declare-fun x1570 () Bool)
(declare-fun x853 () Bool)
(declare-fun x759 () Int)
(declare-fun x858 () Bool)
(declare-fun x809 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1050 () Int)
(declare-fun x1336 () Int)
(declare-fun x1482 () Int)
(declare-fun x1791 () Int)
(declare-fun x1937 () Int)
(declare-fun x2240 () Bool)
(declare-fun x290 () Int)
(declare-fun x260 () Bool)
(declare-fun x175 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1777 () Bool)
(declare-fun x2193 () Int)
(declare-fun x97 () Int)
(declare-fun x274 () Bool)
(declare-fun x2305 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x1185 () Int)
(declare-fun x727 () Int)
(declare-fun x2127 () Int)
(declare-fun x648 () Int)
(declare-fun x2002 () Int)
(declare-fun x1449 () Int)
(declare-fun x2239 () Int)
(declare-fun x133 () Int)
(declare-fun x2199 () Int)
(declare-fun x795 () Int)
(declare-fun x461 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x1563 () Int)
(declare-fun x511 () Int)
(declare-fun x745 () Int)
(declare-fun x1980 () Bool)
(declare-fun x1798 () Int)
(declare-fun x345 () Int)
(declare-fun x2023 () Int)
(declare-fun x671 () Int)
(declare-fun x535 () Bool)
(declare-fun x904 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x1200 () Int)
(declare-fun x232 () Bool)
(declare-fun x516 () Int)
(declare-fun x913 () Bool)
(declare-fun x751 () Int)
(declare-fun x1280 () Int)
(declare-fun x382 () Int)
(declare-fun x203 () Int)
(declare-fun x1884 () Bool)
(declare-fun x1656 () Int)
(declare-fun x769 () Int)
(declare-fun x855 () Int)
(declare-fun x1499 () Bool)
(declare-fun x1829 () Bool)
(declare-fun x409 () Int)
(declare-fun x780 () Int)
(declare-fun x1416 () Int)
(declare-fun x1488 () Bool)
(declare-fun x1947 () Int)
(declare-fun x381 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1993 (Int) Int)
(declare-fun x1340 () Int)
(declare-fun x2302 () Bool)
(declare-fun x876 () Int)
(declare-fun x1647 () Bool)
(declare-fun x542 () Bool)
(declare-fun x386 () Int)
(declare-fun x1898 () Int)
(declare-fun x1781 () Int)
(declare-fun x593 () Bool)
(declare-fun x784 () Int)
(declare-fun x1876 () Int)
(declare-fun x249 () Int)
(declare-fun x1225 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x1850 () Int)
(declare-fun x194 () Int)
(declare-fun x1608 () Int)
(declare-fun x1233 () Bool)
(declare-fun x980 () Bool)
(declare-fun x2173 () Int)
(declare-fun x443 () Int)
(declare-fun x2160 () Int)
(declare-fun x990 () Bool)
(declare-fun x1713 () Int)
(declare-fun x1333 () Int)
(declare-fun x934 (Int) Int)
(declare-fun x2217 () Int)
(declare-fun x1230 () Int)
(declare-fun x1043 () Int)
(declare-fun x787 () Int)
(declare-fun x1938 () Bool)
(declare-fun x621 () Bool)
(declare-fun x894 () Int)
(declare-fun x1534 () Int)
(declare-fun x1795 () Int)
(declare-fun x270 () Int)
(declare-fun x1426 () Int)
(declare-fun x1368 () Int)
(declare-fun x1902 () Int)
(declare-fun x1268 () Bool)
(declare-fun x361 () Bool)
(declare-fun x1245 () Int)
(declare-fun x803 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x1172 () Int)
(declare-fun x2316 () Int)
(declare-fun x1663 () Bool)
(declare-fun x701 () Int)
(declare-fun x2089 () Int)
(declare-fun x1717 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x1316 () Int)
(declare-fun x1474 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x843 () Bool)
(declare-fun x1632 () Int)
(declare-fun x1211 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x1452 () Int)
(declare-fun x1721 () Bool)
(declare-fun x2413 () Int)
(declare-fun x378 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x1597 (Int) Int)
(declare-fun x1673 () Int)
(declare-fun x1373 () Int)
(declare-fun x2248 () Int)
(declare-fun x1968 () Int)
(declare-fun x1173 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x695 () Int)
(declare-fun x2324 () Bool)
(declare-fun x635 () Bool)
(declare-fun x63 () Bool)
(declare-fun x2143 () Int)
(declare-fun x2294 () Int)
(declare-fun x294 () Int)
(declare-fun x1946 () Int)
(declare-fun x521 () Int)
(declare-fun x2099 () Int)
(declare-fun x933 () Bool)
(declare-fun x1541 () Int)
(declare-fun x2073 () Bool)
(declare-fun x1880 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1849 () Int)
(declare-fun x61 () Int)
(declare-fun x925 () Int)
(declare-fun x1311 () Bool)
(declare-fun x322 () Int)
(declare-fun x1857 () Int)
(declare-fun x1930 () Int)
(declare-fun x1156 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x882 () Bool)
(declare-fun x547 () Int)
(declare-fun x36 () Int)
(declare-fun x2122 () Int)
(declare-fun x500 () Bool)
(declare-fun x7 () Int)
(declare-fun x2003 () Int)
(declare-fun x2060 () Int)
(declare-fun x1419 () Int)
(declare-fun x80 () Int)
(declare-fun x541 () Bool)
(declare-fun x1957 () Int)
(declare-fun x1879 (Int) Int)
(declare-fun x1780 () Bool)
(declare-fun x714 () Int)
(declare-fun x176 () Bool)
(declare-fun x1939 () Int)
(declare-fun x2092 (Int Int) Int)
(declare-fun x1989 () Int)
(declare-fun x393 () Int)
(declare-fun x403 () Bool)
(declare-fun x677 () Int)
(declare-fun x431 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x1704 () Int)
(declare-fun x240 () Int)
(declare-fun x1976 () Int)
(declare-fun x1331 () Int)
(declare-fun x1539 () Int)
(declare-fun x583 () Bool)
(declare-fun x1790 () Int)
(declare-fun x900 () Int)
(declare-fun x515 () Int)
(declare-fun x2329 () Int)
(declare-fun x1603 () Int)
(declare-fun x911 () Int)
(declare-fun x717 () Int)
(declare-fun x2144 () Bool)
(declare-fun x558 () Bool)
(declare-fun x2354 () Int)
(declare-fun x954 () Bool)
(declare-fun x441 () Int)
(declare-fun x919 () Int)
(declare-fun x1964 () Int)
(declare-fun x2270 () Int)
(declare-fun x2134 () Int)
(declare-fun x1410 () Int)
(declare-fun x340 () Int)
(declare-fun x2194 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x850 () Int)
(declare-fun x1061 () Int)
(declare-fun x2400 () Int)
(declare-fun x306 () Bool)
(declare-fun x2163 () Int)
(declare-fun x2015 () Bool)
(declare-fun x182 () Bool)
(declare-fun x842 () Bool)
(declare-fun x1302 () Int)
(declare-fun x2393 () Int)
(declare-fun x44 () Int)
(declare-fun x1725 () Int)
(declare-fun x104 () Int)
(declare-fun x959 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1637 () Int)
(declare-fun x2004 () Int)
(declare-fun x1892 () Int)
(declare-fun x2020 () Int)
(declare-fun x1815 () Bool)
(declare-fun x1396 () Int)
(declare-fun x948 () Int)
(declare-fun x1762 () Int)
(declare-fun x981 () Int)
(declare-fun x2191 () Int)
(declare-fun x202 () Int)
(declare-fun x770 () Int)
(declare-fun x1079 () Bool)
(declare-fun x636 () Bool)
(declare-fun x2328 () Int)
(declare-fun x1192 () Bool)
(declare-fun x962 () Int)
(declare-fun x481 () Int)
(declare-fun x2390 () Bool)
(declare-fun x1313 () Int)
(declare-fun x2251 () Bool)
(declare-fun x1352 () Int)
(declare-fun x1384 () Int)
(declare-fun x360 () Int)
(declare-fun x1936 () Int)
(declare-fun x1129 () Int)
(declare-fun x402 () Int)
(declare-fun x48 () Int)
(declare-fun x333 () Int)
(declare-fun x38 () Int)
(declare-fun x2232 () Int)
(declare-fun x2330 () Bool)
(declare-fun x705 () Int)
(declare-fun x2152 () Int)
(declare-fun x1031 () Int)
(declare-fun x2252 () Int)
(declare-fun x1917 () Int)
(declare-fun x2117 () Int)
(declare-fun x31 () Bool)
(declare-fun x774 () Int)
(declare-fun x2027 () Int)
(declare-fun x2236 () Int)
(declare-fun x346 () Bool)
(declare-fun x372 () Int)
(declare-fun x407 () Bool)
(declare-fun x1048 () Int)
(declare-fun x312 () Int)
(declare-fun x2119 () Int)
(declare-fun x1289 () Int)
(declare-fun x1266 () Int)
(declare-fun x1817 () Int)
(declare-fun x1151 () Int)
(declare-fun x59 () Bool)
(declare-fun x1605 () Int)
(declare-fun x2231 () Int)
(declare-fun x1724 () Int)
(declare-fun x2146 () Bool)
(declare-fun x613 () Int)
(declare-fun x2045 (Int) Bool)
(declare-fun x1208 () Int)
(declare-fun x1775 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x1979 () Int)
(declare-fun x205 () Int)
(declare-fun x1940 () Bool)
(declare-fun x2132 () Int)
(declare-fun x629 () Bool)
(declare-fun x860 () Int)
(declare-fun x1517 () Int)
(declare-fun x1417 () Int)
(declare-fun x1951 () Bool)
(declare-fun x614 () Bool)
(declare-fun x184 () Int)
(declare-fun x1122 () Bool)
(declare-fun x369 () Int)
(declare-fun x2338 () Int)
(declare-fun x186 () Bool)
(declare-fun x834 () Int)
(declare-fun x561 () Int)
(declare-fun x1572 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x2258 () Int)
(declare-fun x1920 () Int)
(declare-fun x144 () Bool)
(declare-fun x1873 () Int)
(declare-fun x246 () Bool)
(declare-fun x999 () Int)
(declare-fun x50 () Int)
(declare-fun x29 () Bool)
(declare-fun x2344 () Bool)
(declare-fun x1527 () Int)
(declare-fun x483 () Bool)
(declare-fun x1490 () Int)
(declare-fun x2331 () Int)
(declare-fun x124 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1816 () Int)
(declare-fun x2052 () Int)
(declare-fun x2083 () Int)
(declare-fun x183 () Int)
(declare-fun x460 () Int)
(declare-fun x793 () Int)
(declare-fun x1101 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x69 () Int)
(declare-fun x792 () Int)
(declare-fun x1010 () Bool)
(declare-fun x1967 () Int)
(declare-fun x684 () Bool)
(declare-fun x942 () Int)
(declare-fun x239 () Int)
(declare-fun x136 () Int)
(declare-fun x341 () Bool)
(declare-fun x195 () Int)
(declare-fun x626 () Int)
(declare-fun x14 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1871 () Int)
(declare-fun x452 () Int)
(declare-fun x299 () Bool)
(declare-fun x1654 () Int)
(declare-fun x1515 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x2188 () Int)
(declare-fun x187 () Int)
(declare-fun x1216 () Int)
(declare-fun x2333 () Int)
(declare-fun x1073 () Int)
(declare-fun x790 () Int)
(declare-fun x1589 () Int)
(declare-fun x2123 () Int)
(declare-fun x976 () Int)
(declare-fun x1890 () Int)
(declare-fun x1362 () Bool)
(declare-fun x477 () Int)
(declare-fun x2282 () Int)
(declare-fun x525 () Bool)
(declare-fun x406 () Bool)
(declare-fun x2113 () Int)
(declare-fun x389 () Int)
(declare-fun x938 () Int)
(declare-fun x1954 () Int)
(declare-fun x848 () Int)
(declare-fun x1856 () Bool)
(declare-fun x1223 () Int)
(declare-fun x1842 () Int)
(declare-fun x540 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x861 () Int)
(declare-fun x1586 () Bool)
(declare-fun x1826 () Int)
(declare-fun x650 () Int)
(declare-fun x2148 () Int)
(declare-fun x1520 () Int)
(declare-fun x13 () Int)
(declare-fun x814 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x1550 () Int)
(declare-fun x1568 () Bool)
(declare-fun x526 () Bool)
(declare-fun x983 () Bool)
(declare-fun x236 () Bool)
(declare-fun x950 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x100 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x166 (Int) Int)
(declare-fun x1525 () Int)
(declare-fun x2079 () Int)
(declare-fun x40 () Bool)
(declare-fun x256 () Bool)
(declare-fun x2058 () Int)
(declare-fun x2283 () Int)
(declare-fun x1224 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x830 () Int)
(declare-fun x1566 () Int)
(declare-fun x2303 () Int)
(declare-fun x1507 () Int)
(declare-fun x1017 () Bool)
(declare-fun x1543 () Int)
(declare-fun x1834 () Int)
(declare-fun x955 (Int) Int)
(declare-fun x2218 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x2064 () Int)
(declare-fun x2327 () Bool)
(declare-fun x2259 () Bool)
(declare-fun x428 () Int)
(declare-fun x1853 () Int)
(declare-fun x1682 () Bool)
(declare-fun x365 () Int)
(declare-fun x1309 (Int) Int)
(declare-fun x2086 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x179 () Bool)
(declare-fun x363 () Int)
(declare-fun x1317 () Int)
(declare-fun x1729 () Bool)
(declare-fun x552 () Bool)
(declare-fun x2084 () Int)
(declare-fun x2322 () Int)
(declare-fun x1854 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x1480 () Int)
(declare-fun x2273 () Bool)
(declare-fun x2292 () Int)
(declare-fun x669 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x926 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x543 () Int)
(declare-fun x117 () Int)
(declare-fun x992 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x293 () Bool)
(declare-fun x1759 () Int)
(declare-fun x138 () Int)
(declare-fun x247 () Int)
(declare-fun x654 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x1371 () Int)
(declare-fun x88 () Int)
(declare-fun x964 () Int)
(declare-fun x611 () Int)
(declare-fun x2351 () Bool)
(declare-fun x647 () Bool)
(declare-fun x1707 () Int)
(declare-fun x1809 () Int)
(declare-fun x1828 () Bool)
(declare-fun x1044 () Int)
(declare-fun x538 () Bool)
(declare-fun x228 () Bool)
(declare-fun x1355 () Int)
(declare-fun x1764 () Bool)
(declare-fun x397 () Int)
(declare-fun x1531 () Int)
(declare-fun x1613 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x2041 () Int)
(declare-fun x1087 () Int)
(declare-fun x1039 () Int)
(declare-fun x771 () Int)
(declare-fun x1165 () Int)
(declare-fun x2257 () Int)
(declare-fun x479 () Int)
(declare-fun x729 () Bool)
(declare-fun x1392 () Int)
(declare-fun x1820 () Int)
(declare-fun x1011 () Int)
(declare-fun x1279 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x1415 () Int)
(declare-fun x1618 () Bool)
(declare-fun x272 () Int)
(declare-fun x315 () Bool)
(declare-fun x601 () Bool)
(declare-fun x730 () Bool)
(declare-fun x573 () Bool)
(declare-fun x158 () Int)
(declare-fun x1442 () Int)
(declare-fun x18 () Bool)
(declare-fun x1553 () Int)
(declare-fun x2262 () Bool)
(declare-fun x566 () Int)
(declare-fun x836 () Int)
(declare-fun x3 () Int)
(declare-fun x2153 () Bool)
(declare-fun x447 () Int)
(declare-fun x2029 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x689 () Bool)
(declare-fun x278 () Bool)
(declare-fun x1380 () Int)
(declare-fun x1683 () Int)
(declare-fun x1538 () Int)
(declare-fun x668 () Int)
(declare-fun x935 () Int)
(declare-fun x1168 () Int)
(declare-fun x2287 () Int)
(declare-fun x2315 () Int)
(declare-fun x114 () Int)
(declare-fun x1635 () Int)
(declare-fun x2094 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1341 () Int)
(declare-fun x1321 () Bool)
(declare-fun x120 () Int)
(declare-fun x200 () Bool)
(declare-fun x170 () Int)
(declare-fun x2056 () Int)
(declare-fun x709 () Int)
(declare-fun x1269 () Int)
(declare-fun x1827 () Int)
(declare-fun x1793 () Bool)
(declare-fun x1227 () Int)
(declare-fun x1758 () Int)
(declare-fun x1897 () Int)
(declare-fun x17 () Bool)
(declare-fun x1741 () Int)
(declare-fun x1237 () Int)
(declare-fun x224 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x883 () Int)
(declare-fun x1359 () Int)
(declare-fun x1063 () Int)
(declare-fun x1034 () Bool)
(declare-fun x794 () Int)
(declare-fun x1193 () Int)
(declare-fun x1477 () Int)
(declare-fun x1018 () Bool)
(declare-fun x598 () Int)
(declare-fun x2067 () Bool)
(declare-fun x1081 () Int)
(declare-fun x153 () Bool)
(declare-fun x880 () Bool)
(declare-fun x52 () Int)
(declare-fun x757 () Bool)
(declare-fun x1446 () Int)
(declare-fun x1413 () Int)
(declare-fun x321 () Int)
(declare-fun x941 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x107 () Int)
(declare-fun x2298 () Int)
(declare-fun x2312 () Int)
(declare-fun x244 () Bool)
(declare-fun x1575 () Int)
(declare-fun x768 () Int)
(declare-fun x1090 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x2049 () Int)
(declare-fun x235 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x308 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1391 () Int)
(declare-fun x2395 () Bool)
(declare-fun x2174 () Int)
(declare-fun x1008 () Int)
(declare-fun x1005 (Int) Int)
(declare-fun x1381 () Int)
(declare-fun x700 () Bool)
(declare-fun x1432 () Int)
(declare-fun x1069 () Int)
(declare-fun x1540 () Int)
(declare-fun x392 () Int)
(declare-fun x1447 () Int)
(declare-fun x438 () Bool)
(declare-fun x565 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1265 () Int)
(declare-fun x1 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x2254 () Int)
(declare-fun x2066 () Int)
(declare-fun x35 () Int)
(declare-fun x65 () Int)
(declare-fun x1141 () Int)
(declare-fun x622 () Bool)
(declare-fun x2133 () Int)
(declare-fun x667 () Bool)
(declare-fun x498 () Int)
(declare-fun x1323 () Bool)
(declare-fun x1498 () Int)
(declare-fun x1916 () Bool)
(declare-fun x1275 () Int)
(declare-fun x568 () Int)
(declare-fun x1150 (Int) Int)
(declare-fun x1004 () Bool)
(declare-fun x517 () Int)
(declare-fun x328 () Bool)
(declare-fun x796 () Int)
(declare-fun x129 () Bool)
(declare-fun x199 () Int)
(declare-fun x2274 () Int)
(declare-fun x1155 () Bool)
(declare-fun x310 () Int)
(declare-fun x1558 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x2279 () Int)
(declare-fun x1912 () Int)
(declare-fun x71 () Int)
(declare-fun x849 (Int) Int)
(declare-fun x445 () Bool)
(declare-fun x350 () Bool)
(declare-fun x739 () Int)
(declare-fun x1726 () Bool)
(declare-fun x2355 () Int)
(declare-fun x2085 () Bool)
(declare-fun x1390 () Int)
(declare-fun x497 () Int)
(declare-fun x764 () Int)
(declare-fun x1002 () Int)
(declare-fun x1506 () Bool)
(declare-fun x1085 () Int)
(declare-fun x2401 () Int)
(declare-fun x1332 () Bool)
(declare-fun x664 () Int)
(declare-fun x1926 () Bool)
(declare-fun x15 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x2215 (Int) Int)
(declare-fun x1542 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x1353 () Int)
(declare-fun x1071 () Bool)
(declare-fun x218 () Int)
(declare-fun x2061 () Int)
(declare-fun x1226 () Int)
(declare-fun x2075 () Int)
(declare-fun x1214 () Int)
(declare-fun x1196 () Bool)
(declare-fun x596 () Int)
(declare-fun x1153 () Int)
(declare-fun x978 () Int)
(declare-fun x537 () Bool)
(declare-fun x608 () Int)
(declare-fun x1375 () Int)
(declare-fun x1306 () Int)
(declare-fun x1334 () Bool)
(declare-fun x1680 (Int) Int)
(declare-fun x2313 () Int)
(declare-fun x1412 () Bool)
(declare-fun x1746 () Int)
(declare-fun x805 () Bool)
(declare-fun x676 () Bool)
(declare-fun x553 () Bool)
(declare-fun x1585 () Int)
(declare-fun x1142 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x703 () Int)
(declare-fun x1915 () Bool)
(declare-fun x2022 () Int)
(declare-fun x1135 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x1776 () Int)
(declare-fun x1710 () Bool)
(declare-fun x1104 () Int)
(declare-fun x1687 () Int)
(declare-fun x2183 () Int)
(declare-fun x1293 () Int)
(declare-fun x1055 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x967 () Int)
(declare-fun x1322 () Bool)
(declare-fun x649 () Int)
(declare-fun x486 () Int)
(declare-fun x1084 () Int)
(declare-fun x201 () Int)
(declare-fun x585 () Bool)
(declare-fun x126 () Int)
(declare-fun x384 () Int)
(declare-fun x217 () Int)
(declare-fun x985 () Bool)
(declare-fun x2415 () Int)
(declare-fun x2185 () Bool)
(declare-fun x546 () Int)
(declare-fun x1007 () Int)
(declare-fun x1982 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x927 () Int)
(declare-fun x141 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1347 () Bool)
(declare-fun x829 () Bool)
(declare-fun x70 () Int)
(declare-fun x744 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x317 () Bool)
(declare-fun x1744 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x660 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1437 () Int)
(declare-fun x711 () Bool)
(declare-fun x54 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x66 () Bool)
(define-fun x2365 ((x1148 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1148) (>= x1148 0)) x1148 (- x1148 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x781 ((x1148 Int)) Int (ite (and (< x1148 0) (>= x1148 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1148 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1148))
(define-fun x367 ((x1148 Int)) Int (ite (and (>= x1148 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1148)) x1148 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1148) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1148)) (- x1148 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1148 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1148 0)) (+ x1148 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x501 x1148 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x760 ((x1051 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1051) (<= 0 x1051)))
(define-fun x682 ((x1051 Int) (x732 Int)) Bool (=> (and (< 0 x732) (> x1051 0)) (and (>= (x62 x1051 x732) 0) (<= (x62 x1051 x732) x1051))))
(define-fun x1236 ((x1051 Int) (x732 Int)) Bool (=> (and (and (< x1051 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1051 0)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732) (>= x732 1))) (and (< (x62 x1051 x732) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 (x62 x1051 x732)))))
(define-fun x2169 ((x1051 Int) (x732 Int)) Bool (=> (and (< x732 x1051) (< 1 x732)) (< (x62 x1051 x732) x1051)))
(define-fun x1671 ((x1051 Int) (x732 Int)) Bool (=> (and (< 0 x1051) (< 0 x732)) (= (= 0 (x62 x1051 x732)) (< x1051 x732))))
(define-fun x1126 ((x1051 Int) (x732 Int)) Bool (=> (and (< 0 x732) (< 0 x1051)) (and (> (* (x62 x1051 x732) x732) (- x1051 x732)) (<= (* x732 (x62 x1051 x732)) x1051))))
(define-fun x1824 ((x1051 Int) (x732 Int)) Bool (= (* (x62 x1051 x732) x732) (- x1051 (x436 (- x732 1) x1051))))
(define-fun x1094 ((x1051 Int) (x732 Int)) Bool (and (x1236 x1051 x732) (x2169 x1051 x732) (x1126 x1051 x732) (x1671 x1051 x732) (x682 x1051 x732) (x1824 x1051 x732)))
(define-fun x2039 ((x1051 Int)) Bool (= 0 (x62 0 x1051)))
(define-fun x180 ((x1051 Int)) Bool (= x1051 (x62 x1051 1)))
(define-fun x1582 ((x1051 Int)) Bool (=> (not (= x1051 0)) (= (x62 x1051 x1051) 1)))
(define-fun x327 ((x1051 Int)) Bool (and (x1582 x1051) (x2039 x1051) (x180 x1051)))
(define-fun x1318 ((x1051 Int)) Bool (and (= x1051 (x436 x1051 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1051) x1051)))
(define-fun x408 ((x1051 Int)) Bool (and (= 0 (x436 0 x1051)) (= 0 (x436 x1051 0))))
(define-fun x1672 ((x1051 Int)) Bool (= x1051 (x436 x1051 x1051)))
(define-fun x1893 ((x1051 Int)) Bool (and (x408 x1051) (x1318 x1051) (x1672 x1051)))
(define-fun x2380 ((x1051 Int) (x732 Int)) Bool (= (x436 x1051 x732) (x436 x732 x1051)))
(define-fun x2214 ((x1051 Int) (x732 Int)) Bool (and (=> (<= 0 x1051) (<= (x436 x1051 x732) x1051)) (=> (<= 0 x732) (<= (x436 x1051 x732) x732)) (>= (x436 x1051 x732) 0)))
(define-fun x1661 ((x1051 Int) (x732 Int)) Bool (and (x2380 x1051 x732) (x2214 x1051 x732)))
(define-fun x1370 ((x1051 Int)) Bool (= (x501 x1051 2) (x436 x1051 1)))
(define-fun x128 ((x1051 Int)) Bool (and (x1370 x1051) (x1661 x1051 1)))
(define-fun x2201 ((x1051 Int) (x732 Int)) Bool (and (< (x501 x1051 x732) x732) (>= (x501 x1051 x732) 0)))
(define-fun x1455 ((x1051 Int) (x732 Int)) Bool (=> (and (<= 0 x1051) (> x732 0)) (= (< x1051 x732) (= x1051 (x501 x1051 x732)))))
(define-fun x2238 ((x1051 Int) (x732 Int)) Bool (=> (and (< 0 x732) (and (>= x1051 x732) (< x1051 (+ x732 x732)))) (= (- x1051 x732) (x501 x1051 x732))))
(define-fun x1591 ((x1051 Int) (x732 Int)) Bool (=> (< 0 x732) (= x1051 (+ (x501 x1051 x732) (* x732 (x62 x1051 x732))))))
(define-fun x839 ((x1051 Int) (x732 Int)) Bool (and (x1455 x1051 x732) (x1591 x1051 x732) (x2238 x1051 x732) (x2201 x1051 x732)))
(define-fun x1624 ((x1051 Int)) Bool (= 0 (x501 0 x1051)))
(define-fun x1205 ((x1051 Int)) Bool (= (x501 x1051 1) 0))
(define-fun x1423 ((x1051 Int)) Bool (= (x501 x1051 x1051) 0))
(define-fun x2280 ((x1051 Int)) Bool (and (x1423 x1051) (x1624 x1051) (x1205 x1051)))
(define-fun x1369 ((x1051 Int)) Bool (= (x436 x1051 127) (x501 x1051 128)))
(define-fun x489 ((x1051 Int)) Bool (and (x1369 x1051) (x1661 x1051 127)))
(define-fun x716 ((x1051 Int) (x732 Int)) Bool (= (x1610 x1051 x732) (* x1051 x732)))
(define-fun x2311 ((x1051 Int) (x732 Int)) Bool (and (= (- (* x732 x1051) (* x732 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x1610 (- x1051 115792089237316195423570985008687907853269984665640564039457584007913129639936) x732)) (= (- (* x1051 (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1610 (- x1051 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1610 x1051 (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1051))))
(define-fun x472 ((x1051 Int) (x732 Int)) Bool (=> (and (< 0 x1051) (< 0 x732)) (= (< (x1610 x1051 x732) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x62 (x367 (x1610 x1051 x732)) x1051) x732))))
(define-fun x2301 ((x1051 Int) (x732 Int)) Bool (=> (and (not (= 0 x1051)) (not (= 0 x732))) (and (= (x62 (x1610 x1051 x732) x1051) x732) (= x1051 (x62 (x1610 x1051 x732) x732)))))
(define-fun x944 ((x1051 Int) (x732 Int)) Bool (=> (and (> x1051 0) (< 0 x732)) (= (> (x1610 x1051 x732) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x732 (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1051)))))
(define-fun x1470 ((x1051 Int) (x732 Int)) Bool (and (= (x367 (x1610 x1051 x732)) (x367 (x1610 (- x1051 115792089237316195423570985008687907853269984665640564039457584007913129639936) x732))) (= (x367 (x1610 x1051 x732)) (x367 (x1610 (- x1051 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x367 (x1610 x1051 (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x367 (x1610 x1051 x732)))))
(define-fun x1213 ((x1051 Int) (x732 Int)) Bool (and (=> (and (and (> x732 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x732)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1051) (> x1051 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1610 (- x1051 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1051) (x62 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732))))) (=> (and (and (< 0 x732) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x732)) (and (> x1051 0) (<= x1051 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= x1051 (x62 57896044618658097711785492504343953926634992332820282019728792003956564819967 x732)) (<= (x1610 x1051 x732) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (> x732 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x732)) (and (< 0 x1051) (<= x1051 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x62 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1051) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732)) (>= (x1610 x1051 (- x732 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (> x1051 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1051 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (< 0 x732) (<= x732 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x62 57896044618658097711785492504343953926634992332820282019728792003956564819968 x732) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1051)) (>= (x1610 (- x1051 115792089237316195423570985008687907853269984665640564039457584007913129639936) x732) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968))))))
(define-fun x30 ((x1051 Int) (x732 Int)) Bool (and (x2311 x1051 x732) (x1213 x1051 x732) (x2301 x1051 x732) (x944 x1051 x732) (x1470 x1051 x732) (x472 x1051 x732) (x716 x1051 x732)))
(define-fun x368 ((x1051 Int)) Bool (and (= (x1610 0 x1051) 0) (= 0 (x1610 x1051 0))))
(define-fun x1180 ((x1051 Int)) Bool (and (= x1051 (x1610 x1051 1)) (= (x1610 1 x1051) x1051)))
(define-fun x2116 ((x1051 Int)) Bool (and (x368 x1051) (x1180 x1051)))
(define-fun x148 ((x1051 Int)) Bool (and (< x1051 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1051 0)))
(define-fun x749 ((x1051 Int)) Bool (= (x367 x1051) (+ (x436 x1051 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x501 x1051 32))))
(define-fun x624 ((x1051 Int)) Bool (and (x1661 x1051 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x749 x1051)))
(define-fun x1986 ((x1051 Int)) Bool (= (x367 x1051) (+ (x501 x1051 256) (x436 x1051 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(define-fun x326 ((x1051 Int)) Bool (and (x1986 x1051) (x1661 x1051 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x476 ((x1051 Int) (x732 Int)) Bool (= (x1610 x732 x1051) (x1610 x1051 x732)))
(define-fun x740 ((x1051 Int) (x732 Int)) Bool (and (=> (and (< x1051 0) (> 0 x732)) (> (x1610 x1051 x732) 0)) (=> (and (< x1051 0) (< 0 x732)) (< (x1610 x1051 x732) 0)) (=> (and (< 0 x1051) (< x732 0)) (< (x1610 x1051 x732) 0)) (=> (and (< 0 x732) (< 0 x1051)) (< 0 (x1610 x1051 x732)))))
(define-fun x1841 ((x1051 Int) (x732 Int)) Bool (and (x1470 x1051 x732) (x740 x1051 x732) (x472 x1051 x732) (x1213 x1051 x732) (x944 x1051 x732) (x476 x1051 x732) (x2301 x1051 x732)))
(define-fun x1636 ((x1051 Int) (x732 Int)) Bool (and (x2169 x1051 x732) (x682 x1051 x732) (x1236 x1051 x732) (x1126 x1051 x732) (x1671 x1051 x732)))
(define-fun x37 ((x1051 Int) (x732 Int)) Bool (=> (and (< 0 x1051) (< 0 x732)) (and (> (x1610 (x62 x1051 x732) x732) (- x1051 x732)) (>= x1051 (x1610 (x62 x1051 x732) x732)))))
(define-fun x2164 ((x1051 Int) (x732 Int)) Bool (and (x1236 x1051 x732) (x2169 x1051 x732) (x682 x1051 x732) (x1671 x1051 x732) (x37 x1051 x732)))
(define-fun x178 ((x1051 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1493 x1051 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1493 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1051) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x248 ((x1051 Int)) Bool (and (= x1051 (x1493 x1051 0)) (= x1051 (x1493 0 x1051))))
(define-fun x134 ((x1051 Int)) Bool (= (x1493 x1051 x1051) x1051))
(define-fun x819 ((x1051 Int)) Bool (and (x178 x1051) (x248 x1051) (x134 x1051)))
(define-fun x2072 ((x1051 Int) (x732 Int)) Bool (= (x1493 x1051 x732) (x1493 x732 x1051)))
(define-fun x2101 ((x1051 Int) (x732 Int)) Bool (and (=> (<= 0 x1051) (>= (x1493 x1051 x732) x1051)) (=> (>= x732 0) (>= (x1493 x1051 x732) x732)) (<= (x1493 x1051 x732) (+ x1051 x732))))
(define-fun x2014 ((x1051 Int) (x732 Int)) Bool (and (x2072 x1051 x732) (x2101 x1051 x732)))
(define-fun x1521 ((x1051 Int)) Bool (= (x501 x1051 32) (x436 x1051 31)))
(define-fun x523 ((x1051 Int)) Bool (and (x1661 x1051 31) (x1521 x1051)))
(define-fun x496 ((x1051 Int)) Bool (= (x436 x1051 340282366920938463463374607431768211455) (x501 x1051 340282366920938463463374607431768211456)))
(define-fun x451 ((x1051 Int)) Bool (and (x1661 x1051 340282366920938463463374607431768211455) (x496 x1051)))
(define-fun x1760 ((x1051 Int)) Bool (= (x1680 x1051) (ite (< (x436 x1051 340282366920938463463374607431768211455) 170141183460469231731687303715884105728) (x436 x1051 340282366920938463463374607431768211455) (+ (x436 x1051 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480))))
(define-fun x116 ((x1032 Int)) Int 0)
(define-fun x715 ((x1032 Int)) Int (ite (< x1032 x2208) (x166 x1032) 0))
(define-fun x1599 ((x1032 Int)) Int (ite (and (<= 0 x1032) (< x1032 x2208)) (x1597 x1032) (x715 x1032)))
(define-fun x2147 ((x1032 Int)) Int (ite (= x1032 x2173) x2142 (x2087 x1032)))
(define-fun x1736 ((x1032 Int)) Int (ite (= x1032 x251) x1607 (x2147 x1032)))
(define-fun x2391 ((x1032 Int)) Int (ite (= x1032 128) x170 (x116 x1032)))
(define-fun x216 ((x1032 Int)) Int (ite (= 160 x1032) x429 (x2391 x1032)))
(define-fun x74 ((x1032 Int)) Int (ite (= x1032 192) x1778 (x216 x1032)))
(define-fun x1810 ((x1032 Int)) Int (ite (= 160 x1032) x1070 (x2391 x1032)))
(define-fun x356 ((x1032 Int)) Int (ite x445 (x2391 x1032) (ite x22 (ite x525 (x216 x1032) (x74 x1032)) (x1810 x1032))))
(define-fun x503 ((x1032 Int)) Int (ite (= x2410 x1032) x963 (x356 x1032)))
(define-fun x1184 ((x1032 Int)) Int (ite (= x1877 x1032) x2236 (x503 x1032)))
(define-fun x1194 ((x1032 Int)) Int (ite (= x321 x1032) x972 (x1184 x1032)))
(define-fun x1351 ((x1032 Int)) Int (ite (= x1877 x1032) x1426 (x503 x1032)))
(define-fun x783 ((x1032 Int)) Int (ite x264 (x503 x1032) (ite x1170 (ite x1276 (x1184 x1032) (x1194 x1032)) (x1351 x1032))))
(define-fun x2357 ((x1032 Int)) Int (ite (= x1032 x1546) x1592 (x783 x1032)))
(define-fun x1966 ((x1032 Int)) Int (ite (= x2308 x1032) x2199 (x2357 x1032)))
(define-fun x2025 ((x1032 Int)) Int (ite (= x333 x1032) x2398 (x1966 x1032)))
(define-fun x1961 ((x1032 Int)) Int (ite (= x1032 x2308) x375 (x2357 x1032)))
(define-fun x1041 ((x1032 Int)) Int (ite x1862 (x2357 x1032) (ite x1889 (ite x558 (x1966 x1032) (x2025 x1032)) (x1961 x1032))))
(define-fun x578 ((x1032 Int)) Int (ite (= x1032 x283) x1925 (x1041 x1032)))
(define-fun x277 ((x1032 Int)) Int (ite (= x1032 x65) x598 (x578 x1032)))
(define-fun x2008 ((x1032 Int)) Int (ite (= x2333 x1032) x132 (x277 x1032)))
(define-fun x504 ((x1032 Int)) Int (ite (= x2411 x1032) x2318 (x2008 x1032)))
(define-fun x427 ((x1032 Int)) Int (ite x23 (x2008 x1032) (ite x1647 (x277 x1032) (ite x992 (x578 x1032) (ite x1513 (x1041 x1032) (x504 x1032))))))
(define-fun x627 ((x1032 Int)) Int (ite (= x1032 x358) 0 (x427 x1032)))
(define-fun x2271 ((x1032 Int)) Int (ite (= x1032 x962) 24 (x627 x1032)))
(define-fun x1577 ((x1032 Int)) Int (ite (= x1032 x283) 15621254588198505905128070491301349125963569839395559151037828136576825163776 (x2271 x1032)))
(define-fun x1533 ((x1032 Int)) Int (ite (= x2133 x1032) 128 (x1577 x1032)))
(define-fun x802 ((x1032 Int)) Int (ite (= x1032 x1714) x1263 (x1533 x1032)))
(define-fun x1576 ((x1032 Int)) Int (ite (= x1032 x1149) x2019 (x802 x1032)))
(define-fun x2266 ((x1032 Int)) Int (ite (= x2287 x1032) x15 (x1576 x1032)))
(define-fun x2336 ((x1032 Int)) Int (ite (= x1361 x1032) x2193 (x2266 x1032)))
(define-fun x856 ((x1032 Int)) Int (ite (= x883 x1032) x138 (x2336 x1032)))
(define-fun x777 ((x1032 Int)) Int (ite x1984 (x2336 x1032) (ite x1812 (x2266 x1032) (ite x2161 (x1576 x1032) (ite x204 (x802 x1032) (x856 x1032))))))
(define-fun x319 ((x1032 Int)) Int (ite (= x1032 x2321) 0 (x777 x1032)))
(define-fun x1625 ((x1032 Int)) Int (ite (= x1032 x395) x477 (x319 x1032)))
(define-fun x1831 ((x1032 Int)) Int (ite (= x1032 x354) x2096 (x1625 x1032)))
(define-fun x2203 ((x1032 Int)) Int (ite (= x1310 x1032) x2097 (x1831 x1032)))
(define-fun x2138 ((x1032 Int)) Int (ite (= x1310 x1032) x678 (x1831 x1032)))
(define-fun x973 ((x1032 Int)) Int (ite x206 (ite x2131 (x1831 x1032) (x2203 x1032)) (x2138 x1032)))
(define-fun x458 ((x1032 Int)) Int (ite (= x1032 x2349) x287 (x973 x1032)))
(define-fun x930 ((x1032 Int)) Int (ite (= x868 x1032) x2179 (x458 x1032)))
(define-fun x304 ((x1032 Int)) Int (ite (= x1032 x2143) x151 (x930 x1032)))
(define-fun x527 ((x1032 Int)) Int (ite (= x1032 x825) x322 (x304 x1032)))
(define-fun x1837 ((x1032 Int)) Int (ite (= x1275 x1032) x2186 (x527 x1032)))
(define-fun x1596 ((x1032 Int)) Int (ite (= x1032 x1137) x397 (x1837 x1032)))
(define-fun x735 ((x1032 Int)) Int (ite x882 (x1837 x1032) (ite x1155 (x527 x1032) (ite x2288 (x304 x1032) (ite x2071 (x930 x1032) (x1596 x1032))))))
(define-fun x721 ((x1032 Int)) Int (ite (= x345 x1032) 0 (x735 x1032)))
(define-fun x257 ((x1032 Int)) Int (ite (= x1032 x1086) x1949 (x721 x1032)))
(define-fun x1152 ((x1032 Int)) Int (ite (and (<= x283 x1032) (> x283 x1032)) (x738 (- x1032 x283)) (x257 x1032)))
(define-fun x741 ((x1032 Int)) Int (ite (= x283 x1032) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x1152 x1032)))
(define-fun x2244 ((x1032 Int)) Int (ite (= x76 x1032) x675 (x741 x1032)))
(define-fun x1705 ((x1032 Int)) Int (ite (= x1032 x2076) x1822 (x2244 x1032)))
(define-fun x1749 ((x1032 Int)) Int (ite (= x1032 x283) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x1705 x1032)))
(define-fun x1742 ((x1032 Int)) Int (ite (= x1032 x283) x544 (x1749 x1032)))
(define-fun x1163 ((x1032 Int)) Int (ite (= 0 x1032) x544 (x1342 x1032)))
(define-fun x2392 ((x1032 Int)) Int (ite (and (> (+ x283 32) x1032) (<= x283 x1032)) (x1163 (- x1032 x283)) (x1742 x1032)))
(define-fun x844 ((x1032 Int)) Int (ite (= x1959 x1032) x12 (x2392 x1032)))
(define-fun x1285 ((x1032 Int)) Int (ite x307 (x1152 x1032) (x844 x1032)))
(define-fun x1651 ((x1032 Int)) Int (ite (= x1032 x2220) x139 (x1285 x1032)))
(define-fun x1047 ((x1032 Int)) Int (ite (= x1032 x1569) x1289 (x1651 x1032)))
(define-fun x1763 ((x1032 Int)) Int (ite (= x1032 x2415) x1627 (x1047 x1032)))
(define-fun x1782 ((x1032 Int)) Int (ite (= x1032 x98) x2135 (x1763 x1032)))
(define-fun x110 ((x1032 Int)) Int (ite x1486 (x1763 x1032) (ite x214 (x1047 x1032) (ite x811 (x1651 x1032) (ite x2335 (x1285 x1032) (x1782 x1032))))))
(define-fun x1675 ((x1032 Int)) Int (ite (= x1032 x672) 0 (x110 x1032)))
(define-fun x773 ((x1032 Int)) Int (ite (= x753 x1032) 24 (x1675 x1032)))
(define-fun x67 ((x1032 Int)) Int (ite (= x1032 x1430) 64 (x773 x1032)))
(define-fun x1590 ((x1032 Int)) Int (ite (= x1032 x1520) x2233 (x67 x1032)))
(define-fun x1188 ((x1032 Int)) Int (ite (= x2387 x1032) x2013 (x1590 x1032)))
(define-fun x262 ((x1032 Int)) Int (ite (= x1032 x625) x1843 (x1188 x1032)))
(define-fun x823 ((x1032 Int)) Int (ite (= x1482 x1032) x1821 (x262 x1032)))
(define-fun x742 ((x1032 Int)) Int (ite (= x1032 x294) x2139 (x823 x1032)))
(define-fun x2195 ((x1032 Int)) Int (ite x2378 (x823 x1032) (ite x330 (x262 x1032) (ite x167 (x1188 x1032) (ite x1549 (x1590 x1032) (x742 x1032))))))
(define-fun x387 ((x1032 Int)) Int (ite (= x2050 x1032) 0 (x2195 x1032)))
(define-fun x1612 ((x1032 Int)) Int (ite (= x1032 x909) x599 (x387 x1032)))
(define-fun x1735 ((x1032 Int)) Int (ite (= x1061 x1032) x2396 (x1612 x1032)))
(define-fun x331 ((x1032 Int)) Int (ite (= x935 x1032) x670 (x1735 x1032)))
(define-fun x1504 ((x1032 Int)) Int (ite (= x1032 x485) x611 (x331 x1032)))
(define-fun x782 ((x1032 Int)) Int (ite (= x1698 x1032) x1770 (x1504 x1032)))
(define-fun x1364 ((x1032 Int)) Int (ite (= x1385 x1032) x2205 (x782 x1032)))
(define-fun x191 ((x1032 Int)) Int (ite x253 (x782 x1032) (ite x1474 (x1504 x1032) (ite x349 (x331 x1032) (ite x1122 (x1735 x1032) (x1364 x1032))))))
(define-fun x1397 ((x1032 Int)) Int (ite (= x131 x1032) 0 (x191 x1032)))
(define-fun x1547 ((x1032 Int)) Int (ite (= x1430 x1032) 32 (x1397 x1032)))
(define-fun x279 ((x1032 Int)) Int (ite (= x1674 x1032) x223 (x1547 x1032)))
(define-fun x1643 ((x1032 Int)) Int (ite (= x994 x1032) x384 (x279 x1032)))
(define-fun x1343 ((x1032 Int)) Int (ite (= x2316 x1032) x357 (x1643 x1032)))
(define-fun x1189 ((x1032 Int)) Int (ite (= x1541 x1032) x2183 (x1343 x1032)))
(define-fun x1875 ((x1032 Int)) Int (ite (= x1032 x590) x1119 (x1189 x1032)))
(define-fun x1445 ((x1032 Int)) Int (ite x933 (x1189 x1032) (ite x597 (x1343 x1032) (ite x2344 (x1643 x1032) (ite x1838 (x279 x1032) (x1875 x1032))))))
(define-fun x1623 ((x1032 Int)) Int (ite (= x1032 x717) 0 (x1445 x1032)))
(define-fun x1036 ((x1032 Int)) Int (ite (= x1430 x1032) x549 (x1623 x1032)))
(define-fun x2043 ((x1032 Int)) Int (ite (= x2074 x1032) x1852 (x1036 x1032)))
(define-fun x1869 ((x1032 Int)) Int (ite (= x1032 x2074) x210 (x1036 x1032)))
(define-fun x806 ((x1032 Int)) Int (ite (= x1032 x288) x1786 (x2043 x1032)))
(define-fun x1895 ((x1032 Int)) Int (ite x1653 (x1036 x1032) (ite x2175 (ite x522 (x2043 x1032) (x806 x1032)) (x1869 x1032))))
(define-fun x1706 ((x1032 Int)) Int (ite (= x1853 x1032) 0 (x2211 x1032)))
(define-fun x2406 ((x1032 Int)) Int (ite (= x2265 x1032) x1382 (x1895 x1032)))
(define-fun x1027 ((x1032 Int)) Int (ite (= x1032 x1611) 0 (x1536 x1032)))
(define-fun x1037 ((x1032 Int)) Int (ite x676 (ite x129 (x1536 x1032) (x1027 x1032)) (x1536 x1032)))
(define-fun x2121 ((x1032 Int)) Int (ite (= x1441 x1032) x275 (x2406 x1032)))
(define-fun x1945 ((x1032 Int)) Int (ite (= x1032 x1441) x1583 (x2406 x1032)))
(define-fun x2291 ((x1032 Int)) Int (ite (= x1032 x2001) x2379 (x2121 x1032)))
(define-fun x1256 ((x1032 Int)) Int (ite x5 (x2406 x1032) (ite x213 (ite x324 (x2121 x1032) (x2291 x1032)) (x1945 x1032))))
(define-fun x582 ((x1032 Int)) Int (ite (= x1032 x1964) x2158 (x1256 x1032)))
(define-fun x2126 ((x1032 Int)) Int (ite (= x1032 x1649) x1750 (x582 x1032)))
(define-fun x643 ((x1032 Int)) Int (ite (= x2217 x1032) x1174 (x2126 x1032)))
(define-fun x1535 ((x1032 Int)) Int (ite (= x1032 x1649) x2079 (x582 x1032)))
(define-fun x2332 ((x1032 Int)) Int (ite x1788 (x582 x1032) (ite x350 (ite x1804 (x2126 x1032) (x643 x1032)) (x1535 x1032))))
(define-fun x995 ((x1032 Int)) Int (ite (= x2296 x1032) x1001 (x2332 x1032)))
(define-fun x642 ((x1032 Int)) Int (ite (= x1022 x1032) x1659 (x995 x1032)))
(define-fun x1595 ((x1032 Int)) Int (ite (= x561 x1032) x1798 (x642 x1032)))
(define-fun x1996 ((x1032 Int)) Int (ite (= x1566 x1032) x410 (x1595 x1032)))
(define-fun x1076 ((x1032 Int)) Int (ite x757 (x1595 x1032) (ite x814 (x642 x1032) (ite x954 (x995 x1032) (ite x1337 (x2332 x1032) (x1996 x1032))))))
(define-fun x1783 ((x1032 Int)) Int (ite (= x1032 x484) 0 (x1076 x1032)))
(define-fun x119 ((x1032 Int)) Int (ite (= x203 x1032) 24 (x1783 x1032)))
(define-fun x33 ((x1032 Int)) Int (ite (= x2296 x1032) 15621254588198505905128070491301349125963569839395559151037828136576825163776 (x119 x1032)))
(define-fun x1708 ((x1032 Int)) Int (ite (= x1032 x938) 128 (x33 x1032)))
(define-fun x1518 ((x1032 Int)) Int (ite (= x1368 x1032) x1580 (x1708 x1032)))
(define-fun x466 ((x1032 Int)) Int (ite (= x1032 x1087) x668 (x1518 x1032)))
(define-fun x536 ((x1032 Int)) Int (ite (= x1320 x1032) x1555 (x466 x1032)))
(define-fun x1847 ((x1032 Int)) Int (ite (= x1032 x774) x800 (x536 x1032)))
(define-fun x122 ((x1032 Int)) Int (ite (= x1032 x949) x1846 (x1847 x1032)))
(define-fun x1209 ((x1032 Int)) Int (ite x871 (x1847 x1032) (ite x2093 (x536 x1032) (ite x997 (x466 x1032) (ite x1511 (x1518 x1032) (x122 x1032))))))
(define-fun x2255 ((x1032 Int)) Int (ite (= x1032 x1328) 0 (x1209 x1032)))
(define-fun x394 ((x1032 Int)) Int (ite (= x739 x1032) x80 (x2255 x1032)))
(define-fun x1981 ((x1032 Int)) Int (ite (= x1927 x1032) x947 (x394 x1032)))
(define-fun x1040 ((x1032 Int)) Int (ite (= x1032 x1979) x1096 (x1981 x1032)))
(define-fun x1262 ((x1032 Int)) Int (ite (= x1032 x1979) x1212 (x1981 x1032)))
(define-fun x697 ((x1032 Int)) Int (ite x352 (ite x1136 (x1981 x1032) (x1040 x1032)) (x1262 x1032)))
(define-fun x1453 ((x1032 Int)) Int (ite (= x1985 x1032) x1603 (x697 x1032)))
(define-fun x2246 ((x1032 Int)) Int (ite (= x1032 x1803) x402 (x1453 x1032)))
(define-fun x588 ((x1032 Int)) Int (ite (= x1032 x1673) x2127 (x2246 x1032)))
(define-fun x96 ((x1032 Int)) Int (ite (= x2064 x1032) x801 (x588 x1032)))
(define-fun x2054 ((x1032 Int)) Int (ite (= x2046 x1032) x1730 (x96 x1032)))
(define-fun x1403 ((x1032 Int)) Int (ite (= x563 x1032) x1906 (x2054 x1032)))
(define-fun x1105 ((x1032 Int)) Int (ite x1929 (x2054 x1032) (ite x1638 (x96 x1032) (ite x1401 (x588 x1032) (ite x1402 (x2246 x1032) (x1403 x1032))))))
(define-fun x808 ((x1032 Int)) Int (ite (= x1032 x1206) 0 (x1105 x1032)))
(define-fun x1083 ((x1032 Int)) Int (ite (= x1032 x267) x1775 (x808 x1032)))
(define-fun x659 ((x1032 Int)) Int (ite (and (<= x2296 x1032) (< x1032 x2296)) (x785 (- x1032 x2296)) (x1083 x1032)))
(define-fun x155 ((x1032 Int)) Int (ite (= x1032 x2296) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x659 x1032)))
(define-fun x1052 ((x1032 Int)) Int (ite (= x1032 x158) x159 (x155 x1032)))
(define-fun x710 ((x1032 Int)) Int (ite (= x1032 x1645) x1822 (x1052 x1032)))
(define-fun x1319 ((x1032 Int)) Int (ite (= x1032 x2296) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x710 x1032)))
(define-fun x295 ((x1032 Int)) Int (ite (= x1032 x2296) x2401 (x1319 x1032)))
(define-fun x57 ((x1032 Int)) Int (ite (= x1032 0) x2401 (x849 x1032)))
(define-fun x281 ((x1032 Int)) Int (ite (and (<= x2296 x1032) (< x1032 (+ 32 x2296))) (x57 (- x1032 x2296)) (x295 x1032)))
(define-fun x1425 ((x1032 Int)) Int (ite (= x1032 x1598) x82 (x281 x1032)))
(define-fun x623 ((x1032 Int)) Int (ite x1908 (x659 x1032) (x1425 x1032)))
(define-fun x432 ((x1032 Int)) Int (ite (= x570 x1032) x657 (x623 x1032)))
(define-fun x21 ((x1032 Int)) Int (ite (= x1032 x1230) x981 (x432 x1032)))
(define-fun x884 ((x1032 Int)) Int (ite (= x1032 x755) x85 (x21 x1032)))
(define-fun x2080 ((x1032 Int)) Int (ite (= x311 x1032) x1008 (x1983 x1032)))
(define-fun x1329 ((x1032 Int)) Int (ite x307 (x1983 x1032) (x2080 x1032)))
(define-fun x956 ((x1032 Int)) Int 0)
(define-fun x1678 ((x1032 Int)) Int 0)
(define-fun x1604 ((x1032 Int)) Int (ite (= x1963 x1032) 0 (x509 x1032)))
(define-fun x1111 ((x1032 Int)) Int (ite (= x1032 x1997) 0 (x2215 x1032)))
(define-fun x2055 ((x1032 Int)) Int (ite x2 (ite x1666 (x2215 x1032) (x1111 x1032)) (x2215 x1032)))
(define-fun x726 ((x1032 Int)) Int (ite (= x1972 x1032) 0 (x1150 x1032)))
(define-fun x2409 ((x1032 Int)) Int (ite (= x1032 x550) 0 (x1454 x1032)))
(define-fun x1042 ((x1032 Int)) Int (ite (= x1435 x1032) 0 (x1706 x1032)))
(define-fun x2334 ((x1032 Int)) Int (ite (= x1032 x2066) 0 (x1604 x1032)))
(define-fun x160 ((x1032 Int)) Int (ite (= x1032 x2248) 0 (x726 x1032)))
(define-fun x259 ((x1032 Int)) Int (ite (= x1032 x1029) 0 (x2409 x1032)))
(define-fun x690 ((x1032 Int)) Int (ite (= x695 x1032) 0 (x1037 x1032)))
(define-fun x2364 ((x1032 Int)) Int (ite (= x1032 x2154) 0 (x2055 x1032)))
(define-fun x1404 ((x1032 Int)) Int (ite x129 (x1536 x1032) (x1027 x1032)))
(define-fun x258 ((x1032 Int)) Int (ite x1666 (x2215 x1032) (x1111 x1032)))
(define-fun x108 ((x1032 Int)) Int (ite (= x771 x1032) x2049 (x884 x1032)))
(define-fun x1662 ((x1032 Int)) Int (ite x679 (x884 x1032) (ite x2372 (x21 x1032) (ite x2068 (x432 x1032) (ite x212 (x623 x1032) (x108 x1032))))))
(define-fun x1158 ((x1032 Int)) Int (ite (= x2292 x1032) 0 (x1662 x1032)))
(define-fun x2190 ((x1032 Int)) Int (ite (= x978 x1032) 24 (x1158 x1032)))
(define-fun x1565 ((x1032 Int)) Int (ite (= x1032 x724) 64 (x2190 x1032)))
(define-fun x737 ((x1032 Int)) Int (ite (= x1032 x1306) x234 (x1565 x1032)))
(define-fun x229 ((x1032 Int)) Int (ite (= x1032 x79) x1216 (x737 x1032)))
(define-fun x918 ((x1032 Int)) Int (ite (= x1032 x443) x421 (x229 x1032)))
(define-fun x280 ((x1032 Int)) Int (ite (= x999 x1032) x130 (x918 x1032)))
(define-fun x906 ((x1032 Int)) Int (ite (= x202 x1032) x1247 (x280 x1032)))
(define-fun x1709 ((x1032 Int)) Int (ite x1840 (x280 x1032) (ite x390 (x918 x1032) (ite x1428 (x229 x1032) (ite x2384 (x737 x1032) (x906 x1032))))))
(define-fun x1510 ((x1032 Int)) Int (ite (= x422 x1032) 0 (x1709 x1032)))
(define-fun x181 ((x1032 Int)) Int (ite (= x1032 x1826) x2170 (x1510 x1032)))
(define-fun x1400 ((x1032 Int)) Int (ite (= x1032 x184) x434 (x181 x1032)))
(define-fun x1053 ((x1032 Int)) Int (ite (= x699 x1032) x1791 (x1400 x1032)))
(define-fun x219 ((x1032 Int)) Int (ite (= x1032 x497) x613 (x1053 x1032)))
(define-fun x2272 ((x1032 Int)) Int (ite (= x1032 x1868) x4 (x219 x1032)))
(define-fun x692 ((x1032 Int)) Int (ite (= x1032 x1028) x1713 (x2272 x1032)))
(define-fun x2368 ((x1032 Int)) Int (ite x19 (x2272 x1032) (ite x2073 (x219 x1032) (ite x2124 (x1053 x1032) (ite x1729 (x1400 x1032) (x692 x1032))))))
(define-fun x1723 ((x1032 Int)) Int (ite (= x1032 x2400) 0 (x2368 x1032)))
(define-fun x2090 ((x1032 Int)) Int (ite (= x724 x1032) 32 (x1723 x1032)))
(define-fun x92 ((x1032 Int)) Int (ite (= x251 x1032) x1280 (x1736 x1032)))
(define-fun x323 ((x1032 Int)) Int (ite (= x1169 x1032) x693 (x92 x1032)))
(define-fun x1648 ((x1032 Int)) Int (ite (= x1032 x251) x1316 (x323 x1032)))
(define-fun x746 ((x1032 Int)) Int (ite (= x1508 x1032) x919 (x1329 x1032)))
(define-fun x34 ((x1032 Int)) Int (ite (= x1032 x798) 1 (x1005 x1032)))
(define-fun x2115 ((x1032 Int)) Int (ite (= x1032 x2241) 1 (x34 x1032)))
(define-fun x674 ((x1032 Int)) Int (ite (= x1032 x1498) x2385 (x342 x1032)))
(define-fun x2407 ((x1032 Int)) Int (ite (= x1032 x1498) x1712 (x342 x1032)))
(define-fun x1665 ((x1032 Int)) Int (ite x937 (x674 x1032) (x2407 x1032)))
(define-fun x1571 ((x1032 Int)) Int (ite (= x1032 x881) 0 (x1865 x1032)))
(define-fun x1109 ((x1032 Int)) Int (ite x1988 (x1865 x1032) (ite x1710 (x1865 x1032) (x1571 x1032))))
(define-fun x348 ((x1032 Int)) Int (ite (= x344 x1032) x1245 (x1109 x1032)))
(define-fun x1239 ((x1032 Int)) Int (ite x493 (x1109 x1032) (x348 x1032)))
(define-fun x215 ((x1032 Int)) Int (ite (= x1741 x1032) x734 (x1239 x1032)))
(define-fun x1719 ((x1032 Int)) Int (ite x937 (ite x370 (x1239 x1032) (x215 x1032)) (x1109 x1032)))
(define-fun x1308 ((x1032 Int)) Int (ite (= x1032 x168) 0 (x1719 x1032)))
(define-fun x1232 ((x1032 Int)) Int (ite (= x1021 x1032) 0 (x147 x1032)))
(define-fun x25 ((x1032 Int)) Int (ite x1171 (x147 x1032) (ite x2352 (x147 x1032) (x1232 x1032))))
(define-fun x1287 ((x1032 Int)) Int (ite (= x2322 x1032) x1600 (x25 x1032)))
(define-fun x1102 ((x1032 Int)) Int (ite x2227 (x25 x1032) (x1287 x1032)))
(define-fun x763 ((x1032 Int)) Int (ite (= x1830 x1032) x486 (x1102 x1032)))
(define-fun x1738 ((x1032 Int)) Int (ite x2262 (ite x532 (x1102 x1032) (x763 x1032)) (x25 x1032)))
(define-fun x1116 ((x1032 Int)) Int (ite (= x1032 x1186) 0 (x1738 x1032)))
(define-fun x2028 ((x1032 Int)) Int (ite x487 (x1719 x1032) (x1308 x1032)))
(define-fun x1298 ((x1032 Int)) Int (ite x1710 (x1865 x1032) (x1571 x1032)))
(define-fun x488 ((x1032 Int)) Int (ite x553 (x1738 x1032) (x1116 x1032)))
(define-fun x879 ((x1032 Int)) Int (ite x2352 (x147 x1032) (x1232 x1032)))
(define-fun x756 ((x1032 Int)) Int (ite x77 (x1719 x1032) (ite x487 (x1719 x1032) (x1308 x1032))))
(define-fun x439 ((x1032 Int)) Int (ite x1562 (x1738 x1032) (ite x553 (x1738 x1032) (x1116 x1032))))
(define-fun x1131 ((x1032 Int)) Int (ite (= x1432 x1032) x1753 (x1665 x1032)))
(define-fun x86 ((x1032 Int)) Int (ite (= x1032 x1437) x804 (x1346 x1032)))
(define-fun x1466 ((x1032 Int)) Int (ite (= x1437 x1032) x187 (x1346 x1032)))
(define-fun x507 ((x1032 Int)) Int (ite x2262 (x86 x1032) (x1466 x1032)))
(define-fun x373 ((x1032 Int)) Int (ite (= x1892 x1032) x89 (x507 x1032)))
(define-fun x2009 ((x1032 Int)) Int (ite (= x1032 x121) x1904 (x756 x1032)))
(define-fun x145 ((x1032 Int)) Int (ite (= x481 x1032) x369 (x439 x1032)))
(define-fun x1502 ((x1032 Int)) Int (ite x1071 (x756 x1032) (x2009 x1032)))
(define-fun x2221 ((x1032 Int)) Int (ite (= x1032 x893) x691 (x1502 x1032)))
(define-fun x42 ((x1032 Int)) Int (ite x1420 (x439 x1032) (x145 x1032)))
(define-fun x1933 ((x1032 Int)) Int (ite (= x1032 x2060) x171 (x42 x1032)))
(define-fun x459 ((x1032 Int)) Int (ite (= x1032 x1432) x840 (x1665 x1032)))
(define-fun x551 ((x1032 Int)) Int (ite x370 (x1239 x1032) (x215 x1032)))
(define-fun x1278 ((x1032 Int)) Int (ite (= x1892 x1032) x1716 (x507 x1032)))
(define-fun x2366 ((x1032 Int)) Int (ite x532 (x1102 x1032) (x763 x1032)))
(define-fun x2297 ((x1032 Int)) Int (ite (= x1032 x2229) x1949 (x1387 x1032)))
(define-fun x890 ((x1032 Int)) Int (ite (= x1032 x1481) x1775 (x2297 x1032)))
(define-fun x237 ((x1032 Int)) Int (ite (= x1032 x2119) x675 (x320 x1032)))
(define-fun x467 ((x1032 Int)) Int (ite (= x793 x1032) x159 (x237 x1032)))
(define-fun x1919 ((x1051 Int) (x732 Int) (x1448 Int) (x1991 Int)) Bool (=> (and (>= x1448 x1051) (>= x732 0) (>= x1991 x732) (<= 0 x1051)) (>= (x1610 x1448 x1991) (x1610 x1051 x732))))
(define-fun x296 ((x1051 Int) (x732 Int) (x1448 Int) (x1991 Int)) Bool (=> (= x1448 x1051) (= (x1610 x1051 (- x732 x1991)) (- (x1610 x1051 x732) (x1610 x1448 x1991)))))
(assert (x760 x699))
(assert (not (x2045 (x2092 32 x1435))))
(assert (x760 x2096))
(assert (< 10000 (x2360 x852 x543 x2188 x862 x2315 x1104 x423)))
(assert (=> (>= 10000 x792) (= 0 (x687 x792))))
(assert (= (and x1655 x2032) x51))
(assert (= x270 (x1309 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637))))
(assert (= x2188 (x43 (x2360 x852 x543 x2188 x862 x2315 x1104 x423))))
(assert (=> (<= x543 10000) (= 0 (x687 x543))))
(assert (= (x687 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)) (x2360 x314 x1670 x547 x608 x1942 x927 x1585)))
(assert (x760 x1716))
(assert (x760 x2245))
(assert (x2280 x1363))
(assert (< (x2360 x1250 x931 x648 x1602 x641 x1957 x1918) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1879 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702)) x50))
(assert (= 1 (x43 (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1))))
(assert (x760 x1025))
(assert (=> (>= 10000 x2290) (= (x687 x2290) 0)))
(assert (= (x687 (x810 x389 x1531 x1702 x899)) (x810 x389 x1531 x1702 x899)))
(assert (x760 x300))
(assert (= x1486 (and (not x381) x996)))
(assert (< 10000 (x241 64 x159 3)))
(assert (= (x49 (x2284 x1250 x2279 x2048 x2180 x869 x1767)) x1767))
(assert (x760 x201))
(assert (=> (<= x2339 10000) (= (x687 x2339) 0)))
(assert (x760 x1208))
(assert (x1919 x2157 x1417 x514 x2157))
(assert (= x77 (and x182 (not x243))))
(assert (= x543 (x455 (x2360 x852 x543 x2188 x862 x2315 x1104 x423))))
(assert (x760 x151))
(assert (=> (>= 10000 x50) (= (x687 x50) 0)))
(assert (x327 (x1617 2 x1928)))
(assert (x760 x1526))
(assert (x1893 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x839 x1336 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1094 x1899 2))
(assert (x2045 29289127993025145568725129057828671567744754166070328588094505464281371246592))
(assert (x760 x1419))
(assert (x760 x2016))
(assert (< 10000 (x241 x389 x1284 x1704)))
(assert (= (x687 (x810 x998 x1924 x2245 x135)) (x810 x998 x1924 x2245 x135)))
(assert (x839 x2348 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x188 x1944) x1110))
(assert (= x1276 (and (not x1124) x401)))
(assert (x2280 32))
(assert (x760 x444))
(assert (= (x687 (+ 1 x1892)) (x687 x1892)))
(assert (x760 x428))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 32 x1437)))
(assert (x760 x1985))
(assert (x760 x2064))
(assert (= (x687 (+ 1 x1186)) (x687 x1186)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x810 x855 x468 x2278 x1030)))
(assert (x760 x723))
(assert (x760 x2191))
(assert (x760 x1407))
(assert (x760 x2142))
(assert (= (x2284 x314 x471 x2257 x336 x1534 x1366) (x687 (x2284 x314 x471 x2257 x336 x1534 x1366))))
(assert (x760 x580))
(assert (=> (>= 10000 x1103) (= (x687 x1103) 0)))
(assert (x2045 115792089237316195423570985008687907853099843482180094807725896704197245534209))
(assert (x2280 x162))
(assert (= (x1309 (x1429 x389 x1380 x745 x2141 x1642)) x389))
(assert (x839 x2239 32))
(assert (= (=> (and (= x967 (x436 1 x1530)) (= x1793 (> x425 31)) (= (ite (> x967 0) x790 (x436 127 x790)) x425) (= (x62 x1530 2) x790) (or (= 1 x2355) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2355)) (= x1530 (x1604 x2066)) (= x2066 (+ x1435 1)) (= (x781 (- x967 (mod (ite (> 32 x425) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2355)) (and (=> (and (and (= (< x2154 x211) x1192) (= x1327 (x62 (+ 31 x425) 32)) (= x2154 (x2092 32 x2066)) (= x211 (+ x1327 x2154))) x1793) (and (=> x1192 x413) (=> (not x1192) x473))) (=> (not x1793) x1095))) x711))
(assert (=> (>= 10000 x571) (= (x687 x571) 0)))
(assert (< (x2092 32 x1435) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2280 128))
(assert (x760 x1019))
(assert (x839 x479 128))
(assert (x1893 x1728))
(assert (x128 x2151))
(assert (x760 x484))
(assert (> (x1429 x314 x1806 x517 x2298 x567) 10000))
(assert (x760 x869))
(assert (= (=> (and (= (x1837 x218) x397) (= (x2365 (+ x2143 96)) x1137) (= (not (< 128 x2179)) x1057) (= x218 (x2365 (+ 96 x447)))) (and x1360 x1057)) x1864))
(assert (= (x43 (x241 x998 x1442 x1050)) x1050))
(assert (x760 x898))
(assert (x760 x1462))
(assert (= x1461 (x572 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461))))
(assert (=> (<= x270 10000) (= 0 (x687 x270))))
(assert (x760 x1396))
(assert (x760 x1074))
(assert (x760 x928))
(assert (= x2073 (and x2144 (not x658))))
(assert (x760 x377))
(assert (x1893 x1058))
(assert (= (x512 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)) x414))
(assert (= 64 (x1309 (x241 64 x911 17))))
(assert (x1094 x2237 256))
(assert (= (x49 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750)) x1424))
(assert (x2280 x1336))
(assert (= x2189 (and x1787 x528)))
(assert (= x2206 (and x1279 x2351)))
(assert (= x349 (and x1118 (not x1813))))
(assert (x760 x1747))
(assert (= x1820 (x43 (x810 x1123 x574 x1820 x305))))
(assert (x760 x1822))
(assert (x2116 x1834))
(assert (= (and (not x1225) x244) x992))
(assert (= (and x1072 (not x2114)) x1973))
(assert (= (and x490 x1140) x2389))
(assert (x2116 x1336))
(assert (= (x43 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461)) x133))
(assert (not (x2045 (x2092 32 x1853))))
(assert (= (=> (and (or (not x193) (and x193 (and (= (* x1200 8) x960) (= x185 (x2365 (+ x1964 x1214))) (= x768 (x2190 x185)) (= x1200 (x436 31 x2178)) (= (x436 x768 x723) x171) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x960)) x723)))) (= x193 (< x518 x2178))) x1572) x1932))
(assert (x760 x1550))
(assert (= x2304 (x455 (x2284 x998 x2304 x977 x1931 x1941 x887))))
(assert (x760 x685))
(assert (x760 x818))
(assert (x760 x1635))
(assert (x760 x124))
(assert (x760 x64))
(assert (x760 x1794))
(assert (= (x512 (x2284 x389 x104 x872 x2052 x680 x1165)) x2052))
(assert (=> (>= 10000 x159) (= (x687 x159) 0)))
(assert (x1841 x2157 (- x514 x1417)))
(assert (=> (<= x862 10000) (= 0 (x687 x862))))
(assert (x760 x2003))
(assert (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1011) (ite (> 256 x1011) (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1011)) 0)))
(assert (not (x2045 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907))))
(assert (x760 x1416))
(assert (x760 x310))
(assert (=> (<= x124 10000) (= 0 (x687 x124))))
(assert (x760 x1527))
(assert (x1893 x2239))
(assert (x760 x1821))
(assert (< (x2360 x998 x1573 x644 x93 x580 x1745 x1722) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1754))
(assert (= (x955 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)) x671))
(assert (x760 x1249))
(assert (= (x687 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)) (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)))
(assert (> (x241 x1250 x833 x850) 10000))
(assert (=> (<= x1948 10000) (= (x687 x1948) 0)))
(assert (x760 x1600))
(assert (x760 x2348))
(assert (x760 x630))
(assert (x760 x1758))
(assert (= (x1309 (x2284 x1123 x838 x1995 x393 x1971 x727)) x1123))
(assert (= x1026 (x1879 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435))))
(assert (= x2218 (and x2053 x617)))
(assert (=> (<= x2346 10000) (= (x687 x2346) 0)))
(assert (x760 x610))
(assert (x760 x1917))
(assert (= x855 (x1309 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075))))
(assert (= (and (not x2330) x1089) x1122))
(assert (x760 x768))
(assert (x1893 x162))
(assert (x2116 32))
(assert (not (x2045 (x2284 x852 x1639 x728 x789 x1223 x205))))
(assert (= (x687 x1997) (x687 (+ 1 x1997))))
(assert (x760 x1632))
(assert (= x1960 (or x106 (and (not x1922) x1110))))
(assert (= x2182 (x955 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461))))
(assert (x760 x2122))
(assert (x760 x329))
(assert (= x757 (and x966 (not x2185))))
(assert (= (x687 (x810 x1123 x574 x1820 x305)) (x810 x1123 x574 x1820 x305)))
(assert (= (and x506 x1999) x2070))
(assert (x30 256 x1507))
(assert (x148 x1882))
(assert (x760 x149))
(assert (x624 x1208))
(assert (x1893 x13))
(assert (x760 x1024))
(assert (= (x687 x2154) (x687 (+ 1 x2154))))
(assert (= x641 (x1879 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918))))
(assert (not (x2045 (x2092 x1250 x113))))
(assert (= (x687 (x1429 x389 x1380 x745 x2141 x1642)) (x1429 x389 x1380 x745 x2141 x1642)))
(assert (x760 x683))
(assert (x760 x2231))
(assert (= x854 (and (not x2153) x640)))
(assert (x760 x949))
(assert (x760 x385))
(assert (= (x1309 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918)) x1250))
(assert (= (x455 (x2092 32 4)) 4))
(assert (x760 x2403))
(assert (x760 x2315))
(assert (= (x687 x720) (x687 (+ x720 x1936))))
(assert (x2116 x813))
(assert (= x2227 (and x2225 (not x146))))
(assert (x760 x1014))
(assert (x760 x1119))
(assert (x760 x120))
(assert (= x2177 (=> (and (= (x2365 (+ x1073 96)) x2089) (= (not (< 128 x1127)) x1690) (= (x2365 (+ 96 x2296)) x1566) (= x410 (x1595 x2089))) (and x1233 x1690))))
(assert (= (x2092 32 x1435) (x687 (x2092 32 x1435))))
(assert (x760 x429))
(assert (x760 x2303))
(assert (x760 x460))
(assert (x760 x1450))
(assert (x1094 x1363 2))
(assert (= (x955 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440)) x1440))
(assert (x760 x1340))
(assert (x760 x1127))
(assert (=> (<= x1905 10000) (= 0 (x687 x1905))))
(assert (x451 x1728))
(assert (x760 x1863))
(assert (=> (>= 10000 x251) (= (x687 x251) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2284 x855 x1193 x457 x359 x1545 x2414)))
(assert (x760 x400))
(assert (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1525) (ite (< x1525 256) (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1525)) 0)))
(assert (x1094 (+ 31 x549) 32))
(assert (= x1233 (=> (and (= (x2365 (+ x203 32)) x1976) (= x314 (x781 (- x1976 x2296))) (= (x2365 (+ x2296 x1127)) x203) (= x484 (x2365 (+ x1127 x2296))) (= x270 (x781 (- x314 32))) (= x910 (<= x270 224))) (and x910 (=> (and (= (x119 x1054) x2339) (= (x2365 (+ x2296 160)) x708) (= x2412 (x2365 (+ x2296 32))) (= x945 (x119 x708)) (= (x2365 (+ 32 x2296)) x3) (= (x119 x752) x1416) (= x1758 (x119 x770)) (= (x1429 x270 x1747 x2339 x653 x1164) x1836) (= x84 (x2365 (+ 192 x2296))) (= (x2365 (+ 32 x2296)) x1809) (= x495 (<= x314 224)) (= (x2365 (+ 96 x2296)) x1414) (= (x119 x84) x1637) (= (x119 x2412) x520) (= (ite (= x270 0) x254 (ite (<= x270 32) x1539 (ite (<= x270 64) x1065 (ite (<= x270 96) x1038 (ite (>= 128 x270) x1836 (ite (>= 160 x270) x1190 (ite (<= x270 192) x1375 (ite (>= 224 x270) x2228 x47)))))))) x53) (= (x2365 (+ x2296 32)) x1179) (= (x119 x2296) x1849) (= x1450 (x119 x1809)) (= (x119 x1968) x2112) (= (x2365 (+ x2296 64)) x681) (= (x2092 x270 x1849) x1539) (= x1902 (x119 x2397)) (= (x2365 (+ x2296 96)) x2359) (= x391 (x2365 (+ x2296 64))) (= x337 (x119 x2296)) (= x770 (x2365 (+ 96 x2296))) (= x712 (x2365 (+ 160 x2296))) (= (x119 x2296) x1747) (= x1251 (x119 x2296)) (= (x119 x1035) x329) (= x1035 (x2365 (+ x2296 64))) (= x254 (x1993 0)) (= (x119 x2359) x1164) (= (x119 x391) x796) (= (x241 x270 x337 x1185) x1065) (= x2011 (x119 x3)) (= (x810 x270 x922 x2011 x1902) x1038) (= x2228 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637)) (= x1054 (x2365 (+ 32 x2296))) (= (x2365 (+ x2296 64)) x2397) (= (x2365 (+ x2296 64)) x334) (= x1375 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440)) (= x1190 (x2284 x270 x794 x298 x329 x560 x1389)) (= (x119 x1179) x1185) (= (x119 x712) x1440) (= (x2365 (+ x2296 128)) x752) (= (x119 x1331) x1367) (= x2337 (x119 x334)) (= (x119 x556) x298) (= x556 (x2365 (+ x2296 32))) (= (x119 x988) x1389) (= (x119 x2296) x922) (= (x119 x681) x653) (= (x119 x2296) x610) (= x1331 (x2365 (+ 96 x2296))) (= x988 (x2365 (+ 128 x2296))) (= x1968 (x2365 (+ 128 x2296))) (= x794 (x119 x2296)) (= x560 (x119 x1414))) (and x495 (=> (and (= (x1429 x314 x1806 x517 x2298 x567) x1141) (= (x1708 x2265) x1580) (= x2196 (x119 x592)) (= (x2284 x314 x471 x2257 x336 x1534 x1366) x1464) (= (x119 x784) x1620) (= x547 (x119 x515)) (= (> x1580 0) x1349) (= x2242 (x119 x2035)) (= x993 (x2092 x314 x2020)) (= (x119 x557) x517) (= (x119 x38) x608) (= x1460 (x2365 (+ 32 x2265))) (= x1044 0) (= (x2365 (+ 64 x2296)) x38) (= x1324 (x2365 (+ 160 x2296))) (= (x34 x816) x1044) (= (x119 x2254) x1366) (= (x119 x2004) x336) (= x1670 (x119 x2296)) (= x557 (x2365 (+ 32 x2296))) (= (x119 x126) x1534) (= (x119 x1125) x567) (= x1797 (x119 x964)) (= (ite (= 0 x314) x1958 (ite (<= x314 32) x993 (ite (>= 64 x314) x1814 (ite (<= x314 96) x1242 (ite (<= x314 128) x1141 (ite (>= 160 x314) x1464 (ite (>= 192 x314) x1795 (ite (<= x314 224) x860 x8)))))))) x816) (= (x119 x1761) x1585) (= x340 (x119 x612)) (= x1087 (x2365 (+ x1368 32))) (= x964 (x2365 (+ x2296 32))) (= (x2360 x314 x1670 x547 x608 x1942 x927 x1585) x1795) (= x2254 (x2365 (+ x2296 128))) (= (x119 x2296) x471) (= x1761 (x2365 (+ x2296 160))) (= (x119 x2296) x1537) (= (x1993 0) x1958) (= (x119 x2296) x2020) (= x1814 (x241 x314 x383 x1842)) (= x784 (x2365 (+ x2296 192))) (= (x2365 (+ x2296 32)) x515) (= (x2365 (+ x2296 4)) x938) (= x364 (x119 x1324)) (= x592 (x2365 (+ 64 x2296))) (= (x119 x1616) x156) (= x2035 (x2365 (+ 128 x2296))) (= x612 (x2365 (+ 96 x2296))) (= (x2365 (+ 32 x2296)) x1781) (= (x119 x2296) x1905) (= x1942 (x119 x1500)) (= x1060 (x119 x2168)) (= (x119 x2132) x1842) (= x1125 (x2365 (+ x2296 96))) (= x383 (x119 x2296)) (= (x119 x1781) x2257) (= (x119 x1176) x927) (= (x119 x2296) x1806) (= (x2365 (+ x2296 128)) x1176) (= (x2365 (+ x2296 96)) x126) (= x860 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)) (= x1616 (x2365 (+ x2296 32))) (= x807 (x2365 (+ 64 x2296))) (= x2132 (x2365 (+ x2296 32))) (= (x2365 (+ x2296 64)) x2168) (= (x2365 (+ 96 x2296)) x1500) (= (x119 x807) x2298) (= x1368 (x2365 (+ x938 128))) (= x2004 (x2365 (+ 64 x2296))) (= (x810 x314 x1537 x156 x1060) x1242)) (and (=> (not x1349) x1471) (=> (and x1349 (and (= (x1518 x1460) x668) (= (< 32 x1580) x1303))) (and (=> (and x1303 (and (= (x466 x300) x1555) (= x2250 (< 64 x1580)) (= x300 (x2365 (+ x1460 32))) (= x1320 (x2365 (+ x1087 32))))) (and (=> (not x2250) x1471) (=> (and (and (= x800 (x536 x1237)) (= x1237 (x2365 (+ x1460 64))) (= x1655 (< 96 x1580)) (= (x2365 (+ 64 x1087)) x774)) x2250) (and (=> (not x1655) x1471) (=> x1655 x1861))))) (=> (not x1303) x1471)))))))))))
(assert (= (and x1883 x1330) x822))
(assert (x760 x2413))
(assert (= (x1309 (x241 x1250 x833 x850)) x1250))
(assert (= (x1879 (x2284 x1123 x838 x1995 x393 x1971 x727)) x1971))
(assert (x760 x917))
(assert (= (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461) (x687 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461))))
(assert (x760 x1045))
(assert (= (x687 x637) (x687 (+ x637 x1800))))
(assert (x1893 x1045))
(assert (x760 x789))
(assert (= x104 (x455 (x2284 x389 x104 x872 x2052 x680 x1165))))
(assert (=> (<= x651 10000) (= (x687 x651) 0)))
(assert (= (x1309 (x2284 x314 x471 x2257 x336 x1534 x1366)) x314))
(assert (= x246 (or x100 x1195)))
(assert (x760 x1955))
(assert (= x1409 (x455 (x2092 32 x1409))))
(assert (x1893 340282366920938463463374607431768211455))
(assert (x760 x850))
(assert (= (x43 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)) x201))
(assert (=> (>= 10000 x1660) (= (x687 x1660) 0)))
(assert (= (=> (and (or (not x1999) (and (and (= x694 (x773 x521)) (= (x2365 (+ x2026 x1546)) x521) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1088)) x2150) (= (x436 31 x2098) x1811) (= x1088 (* 8 x1811)) (= x486 (x436 x694 x2150))) x1999)) (= (> x2098 x743) x1999)) x1587) x197))
(assert (x760 x1967))
(assert (=> (>= 10000 x608) (= 0 (x687 x608))))
(assert (x1841 x514 (- x2157 x1417)))
(assert (> (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440) 10000))
(assert (= x1123 (x1309 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706))))
(assert (x760 x2076))
(assert (x760 x2396))
(assert (x2116 2))
(assert (=> (>= 10000 x1955) (= (x687 x1955) 0)))
(assert (= (x1879 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637)) x1758))
(assert (= x346 (or x242 x865)))
(assert (x1094 x1074 2))
(assert (= x1854 (and x984 x621)))
(assert (x760 x1601))
(assert (= (x49 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075)) x446))
(assert (x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x498)))
(assert (=> (>= 10000 x857) (= (x687 x857) 0)))
(assert (= x2118 (x1879 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075))))
(assert (x760 x2013))
(assert (x760 x563))
(assert (= (x687 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)) (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)))
(assert (not (x2045 (x241 x998 x1442 x1050))))
(assert (=> (<= x564 10000) (= 0 (x687 x564))))
(assert (= (=> (and (and (and (and (= (x2087 x2173) x2142) (= x1689 2) (= (x781 (- x449 x1822)) x1241) (>= 127 x1014) (>= x1201 1) (= 16 x1871) (= x10 (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)) (= x1201 (x1121 x251)) (= 1605942358 x1807) (= x2173 x1553) (<= x1014 127) (or (<= 115792089237316195423570985008687907853099843482180094807725896704197245534208 x1293) (<= x1293 170141183460469231731687303715884105727)) (= x1077 (x241 64 x190 x10)) (= x2152 (x781 (- x1293 x2393))) (<= x2140 255) (or (>= x2393 115792089237316195423570985008687907853099843482180094807725896704197245534208) (<= x2393 170141183460469231731687303715884105727)) (>= x2140 1) (= (not (= x2152 0)) x617) (not (= x1563 2)) (= x2111 false) (= x1427 false) (not (> x1241 x449)) (= x1489 114221746417031484496905892821793293822878436923706878644384133060206014517163) (= x1098 (x2147 x251)) (= 1 x1129) (= x1607 x1098) (= (x1757 x1077) x2140)) (or (and (not x617) (= x1411 (ite x617 1 0))) (and x617 (= (ite (not (< x1527 x1241)) 1 0) x1411)))) (= x190 x1553)) (and x1258 x2130 (= x35 x196) (= x1526 x251) (<= 1 x1457) (<= 0 x1553) (>= 4294967295 x1202) (>= x920 0) (not (= x217 x1575)) x1737 (<= x1457 1461501637330902918203684832716283019655932542975) (<= x2109 255) (not (= x2375 x1457)) (not (= x1381 x251)) (not (= x217 x1270)) (<= x2303 255) (<= x1496 1461501637330902918203684832716283019655932542975) (not (= x2375 x792)) (<= x792 1461501637330902918203684832716283019655932542975) (not (= x217 x1381)) (>= x251 1) x1718 (= x2017 x792) (= (< 0 (x1121 x251)) x1187) x2230 (>= x1496 0) (<= x1169 1461501637330902918203684832716283019655932542975) (not (= x2375 x217)) (not (= x1575 x35)) (not (= x1381 x792)) (= x1499 (< 0 (x1121 x2375))) (= (> (x1121 x792) 0) x1325) (>= x1248 1) x1187 (<= 1 x1270) (= x731 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x372) (not (= x1817 x2375)) (>= x1688 0) (>= 1461501637330902918203684832716283019655932542975 x2375) (not (= x35 x1381)) (<= 0 x240) (not (= x2375 x1381)) (<= x1553 1461501637330902918203684832716283019655932542975) (= (> (x1121 x1817) 0) x1258) (not (= x1270 x251)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1063) (<= x251 1461501637330902918203684832716283019655932542975) (not (= x1457 x1575)) (not (= x1381 x1575)) (= false x1815) (= x1305 false) (= x1989 0) (not (= x35 x1270)) (= x1248 x251) (= x2145 false) (<= x1688 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x916 255) (<= 1 x1575) (>= 1461501637330902918203684832716283019655932542975 x1526) (= x877 false) (>= 1461501637330902918203684832716283019655932542975 x1522) (<= 0 x94) (= x2130 (> (x1121 x35) 0)) (not (= x1817 x1381)) (<= x94 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x217 x1522) x1488 (= (> (x1121 x1457) 0) x1718) (= (< 0 (x1121 x217)) x733) (not (= x251 x1575)) (not (= x251 x35)) (>= x2208 4) (>= x1410 0) (>= 1461501637330902918203684832716283019655932542975 x196) (<= x1410 1461501637330902918203684832716283019655932542975) (not (= x1575 x1817)) (<= 0 x2051) (not (= x1575 x2375)) (= x585 false) (<= x920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2007 1605942358) (<= x217 1461501637330902918203684832716283019655932542975) (not (= x251 x2375)) (>= x651 1) (<= x2017 1461501637330902918203684832716283019655932542975) (not (= x1817 x217)) (not (= x792 x1817)) (not (= x2375 x1270)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1825) (<= 1 x196) (<= x1270 1461501637330902918203684832716283019655932542975) (<= x1381 1461501637330902918203684832716283019655932542975) (not (= x251 x1457)) (<= 1 x114) (>= x372 0) x1499 (not (= x217 x251)) (not (= x792 x251)) (= x95 (x1597 0)) (not (= x217 x1457)) (<= x2051 1461501637330902918203684832716283019655932542975) (not (= x792 x217)) (>= 1461501637330902918203684832716283019655932542975 x35) (<= 1 x35) (not (= x1270 x1381)) x733 (<= x651 1461501637330902918203684832716283019655932542975) (<= 1 x217) (not (= x1575 x792)) (not (= x1457 x1270)) (= (> (x1121 x1381) 0) x1737) (>= 1461501637330902918203684832716283019655932542975 x114) (not (= x217 x35)) (not (= x1457 x35)) (>= x1817 1) (<= 1 x2017) (= (< 0 (x1121 x1575)) x1488) x1325 (not (= x1817 x1457)) (<= x1817 1461501637330902918203684832716283019655932542975) (not (= x2375 x35)) (= x1575 x114) (>= x1522 1) (not (= x1575 x1270)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x240) (<= 0 x1202) (>= 1461501637330902918203684832716283019655932542975 x1575) (<= x1248 1461501637330902918203684832716283019655932542975) (= x2063 x95) (<= 1 x792) (not (= x792 x1457)) (not (= x251 x1817)) (not (= x792 x35)) (not (= x1270 x1817)) (>= x1825 0) (>= x1381 1) (not (= x1817 x35)) (>= x1063 0) (not (= x792 x1270)) (>= x1526 1) (= x1817 x651) (>= x2375 1) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2208) (= x251 x1630) (not (= x1381 x1457)) (= x2230 (< 0 (x1121 x1270))))) x1062) x593))
(assert (= (x955 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637)) x945))
(assert (=> (>= 10000 x580) (= 0 (x687 x580))))
(assert (x760 x2270))
(assert (= x1145 x908))
(assert (= (x687 x1685) (x687 (+ x1685 1))))
(assert (= x1114 (=> (and (= (x62 x1746 2) x1796) (or (and (> x911 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1293)) (and (< x911 x1293) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1293) (<= x911 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= 0 x136) (= (x62 (+ x1382 31) 32) x1621) (<= x1439 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1439) (> x1964 x2265) (or (<= 115792089237316195423570985008687907853099843482180094807725896704197245534210 x1293) (<= x1293 170141183460469231731687303715884105727)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2265) (= x1691 (= x1382 0)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1439)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1439) (= x698 (x781 (- x780 (mod (ite (< x1382 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2265) (= (x1706 x1093) x1746) (< x1439 x2265) (= x1964 (x2365 (+ x2265 (mod (+ 32 x664) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (not (= x1439 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= 16 x1994) (or (<= 115792089237316195423570985008687907853099843482180094807725896704197245534209 x911) (<= x911 170141183460469231731687303715884105726)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2265) (= (x2365 (+ 128 x1439)) x2265) (= (x2365 (+ 32 x2265)) x1441) (<= 1 x1964) (= (* 32 x1621) x664) (= x1093 (x241 64 x911 17)) (= x1382 (ite (< 0 x780) x1796 (x436 127 x1796))) (or (= 1 x698) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x698)) (not (= x1439 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x780 (x436 1 x1746))) (and (=> x1691 x669) (=> (and (= (> x1382 31) x528) (not x1691)) (and (=> (and (and (= x914 (+ 1 x2200)) (= x275 (x1037 x2200)) (= x1383 (x2365 (+ x1441 x1382))) (= x2001 (x2365 (+ x1441 32))) (= (< x2001 x1383) x172) (= x2200 (x2092 32 x1093))) x528) (and (=> (not x172) x1884) (=> x172 x1101))) (=> (and (not x528) (and (= x1271 (x1706 x1093)) (= x1583 (* x1507 256)) (= x1507 (x62 x1271 256)))) x669)))))))
(assert (x760 x1897))
(assert (x760 x2345))
(assert (x760 x183))
(assert (= (and x172 x2189) x952))
(assert (x2116 (- x2157 x1417)))
(assert (> (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6) 10000))
(assert (= x984 (and x1421 x2371)))
(assert (= x1136 (and (not x1292) x854)))
(assert (x30 256 x1294))
(assert (< (x2092 32 x2066) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x649))
(assert (=> (>= 10000 x707) (= (x687 x707) 0)))
(assert (x839 x2098 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1153))
(assert (= x2339 (x43 (x1429 x270 x1747 x2339 x653 x1164))))
(assert (= (or x341 x1804) x350))
(assert (x760 x830))
(assert (= 0 (x687 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (<= x2020 10000) (= (x687 x2020) 0)))
(assert (x839 x861 128))
(assert (x760 x965))
(assert (= (x1309 (x241 x1123 x2163 x534)) x1123))
(assert (= x1833 (and x1944 (not x188))))
(assert (x760 x1367))
(assert (= (and (not x2250) x1444) x2093))
(assert (x760 x1942))
(assert (= (x43 (x241 64 x2393 17)) 17))
(assert (x30 32 x638))
(assert (= x478 (and x1362 x1433)))
(assert (not (x2045 (x2360 x314 x1670 x547 x608 x1942 x927 x1585))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)))
(assert (x760 x1123))
(assert (x2116 x1294))
(assert (=> (<= x1902 10000) (= (x687 x1902) 0)))
(assert (=> (<= x1509 10000) (= (x687 x1509) 0)))
(assert (= (or x2124 x2073 x19 x1729 x950) x332))
(assert (x760 x1684))
(assert (= x941 (and x1766 x577)))
(assert (x760 x1640))
(assert (x760 x1664))
(assert (=> (<= x566 10000) (= (x687 x566) 0)))
(assert (x760 x531))
(assert (x819 x1794))
(assert (= x852 (x1309 (x2092 x852 x1128))))
(assert (x489 x1913))
(assert (= x998 (x1309 (x2092 x998 x1681))))
(assert (x760 x1201))
(assert (x2116 x1200))
(assert (= x156 (x43 (x810 x314 x1537 x156 x1060))))
(assert (x489 x2331))
(assert (= (x1879 (x1429 x314 x1806 x517 x2298 x567)) x567))
(assert (= (=> (and (or (and x1322 (= x1850 (ite (not (> x1241 x2345)) 1 0))) (and (= x1850 (ite x1322 1 0)) (not x1322))) (and (= (x2365 (+ x994 x223)) x717) (= x634 (x781 (- x1293 x911))) (= (not (= 0 x634)) x1322) (= x1584 16))) x1570) x233))
(assert (= x1806 (x455 (x1429 x314 x1806 x517 x2298 x567))))
(assert (x760 x1727))
(assert (x839 x2151 2))
(assert (x760 x1877))
(assert (= (x687 (x2092 32 x1498)) (x2092 32 x1498)))
(assert (x760 x634))
(assert (x2280 x788))
(assert (= (x687 (+ x1963 1)) (x687 x1963)))
(assert (x760 x766))
(assert (x760 x1702))
(assert (x760 x4))
(assert (x760 x778))
(assert (< 10000 (x1429 x389 x1380 x745 x2141 x1642)))
(assert (= (x1879 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)) x2078))
(assert (= (or x66 x2) x1903))
(assert (=> (>= 10000 x2278) (= 0 (x687 x2278))))
(assert (x760 x707))
(assert (x760 x2181))
(assert (x760 x1151))
(assert (x760 x1237))
(assert (x760 x1581))
(assert (x128 x778))
(assert (= (or x129 x987) x676))
(assert (not (x2045 (x2284 x1250 x2279 x2048 x2180 x869 x1767))))
(assert (= (and (not x29) x1459) x2384))
(assert (= x2124 (and x1764 (not x886))))
(assert (x760 x2323))
(assert (x760 x1602))
(assert (x760 x673))
(assert (= (x687 (x241 x270 x337 x1185)) (x241 x270 x337 x1185)))
(assert (x326 x2348))
(assert (x760 x820))
(assert (= x407 (or x487 x286)))
(assert (= x1564 (and x456 x2253)))
(assert (x1661 x759 x1020))
(assert (x760 x1826))
(assert (x1094 x1746 2))
(assert (x760 x2329))
(assert (x760 x514))
(assert (x760 x1100))
(assert (x760 x1296))
(assert (=> (<= x653 10000) (= 0 (x687 x653))))
(assert (x760 x1654))
(assert (= (and x105 x17) x2327))
(assert (= (x49 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440)) x1416))
(assert (= (x241 64 x911 17) (x687 (x241 64 x911 17))))
(assert (< (x2092 x852 x1128) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x128 x1746))
(assert (= 0 (x687 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x687 15621254588198505905128070491301349125963569839395559151037828136576825163776) 0))
(assert (x2280 x1913))
(assert (= (or x2344 x1838 x1505 x933 x597) x1283))
(assert (x760 x497))
(assert (x760 x364))
(assert (=> (<= x312 10000) (= 0 (x687 x312))))
(assert (x327 256))
(assert (x839 x788 2))
(assert (x760 x517))
(assert (= x1743 (x455 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461))))
(assert (= (x455 (x810 x998 x1924 x2245 x135)) x1924))
(assert (= (x687 4294967295) 0))
(assert (= (and x401 x1124) x607))
(assert (=> (<= x64 10000) (= 0 (x687 x64))))
(assert (=> (>= 10000 x471) (= 0 (x687 x471))))
(assert (x760 x750))
(assert (x760 x883))
(assert (x760 x38))
(assert (x760 x88))
(assert (x1893 x1913))
(assert (x760 x1924))
(assert (x760 x1555))
(assert (= (and (not x1108) x1903) x1513))
(assert (= x1350 (and x2247 x821)))
(assert (= (x687 x2229) (x687 (+ x2229 1))))
(assert (x760 x1125))
(assert (= (or x1734 x2384 x390 x1428 x1840) x1345))
(assert (=> (<= x1244 10000) (= (x687 x1244) 0)))
(assert (x451 x2270))
(assert (x760 x776))
(assert (x839 x2348 2))
(assert (x760 x581))
(assert (= (or (and x332 (not x1943)) (and x799 (not x1556)) (and (not x729) x1613) (and x1033 (not x904)) x2276) x24))
(assert (not (x2045 (x2092 x270 x1849))))
(assert (= (=> (and (= x144 (not (< 128 x223))) (= x1119 (x1189 x120)) (= x590 (x2365 (+ x994 96))) (= x120 (x2365 (+ x1025 96)))) (and x144 x233)) x633))
(assert (x760 x1467))
(assert (= (x572 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)) x1620))
(assert (=> (<= x423 10000) (= 0 (x687 x423))))
(assert (x760 x1099))
(assert (=> (>= 10000 x1050) (= (x687 x1050) 0)))
(assert (x1893 x2098))
(assert (> (x241 64 x190 x10) 10000))
(assert (x760 x1899))
(assert (= x2293 (and x2162 x2386)))
(assert (x2014 x948 x976))
(assert (= (x512 (x2284 x998 x2304 x977 x1931 x1941 x887)) x1931))
(assert (= x244 (and x1903 x1108)))
(assert (< 10000 (x241 x852 x1955 x2010)))
(assert (x760 x1384))
(assert (=> (>= 10000 x2245) (= 0 (x687 x2245))))
(assert (x839 x766 2))
(assert (x1841 x2157 (- x514 x2157)))
(assert (x760 x1483))
(assert (= (x49 (x2284 x389 x104 x872 x2052 x680 x1165)) x1165))
(assert (x760 x442))
(assert (= x490 (and x1434 x540)))
(assert (= x56 (x512 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750))))
(assert (x760 x309))
(assert (=> (>= 10000 x728) (= (x687 x728) 0)))
(assert (= (x1429 x852 x1561 x2323 x566 x6) (x687 (x1429 x852 x1561 x2323 x566 x6))))
(assert (x760 x938))
(assert (x760 x2052))
(assert (x1893 x1120))
(assert (< 10000 (x1429 x998 x1683 x165 x289 x1297)))
(assert (= x329 (x512 (x2284 x270 x794 x298 x329 x560 x1389))))
(assert (= x1777 (and x1173 x897)))
(assert (x760 x251))
(assert (x2280 x1728))
(assert (x760 x13))
(assert (=> (>= 10000 x2044) (= (x687 x2044) 0)))
(assert (=> (<= x1745 10000) (= (x687 x1745) 0)))
(assert (= 64 (x1309 (x241 64 x1863 19))))
(assert (x760 x1713))
(assert (> (x2092 32 x1409) 10000))
(assert (x760 x2359))
(assert (x760 x599))
(assert (x760 x1987))
(assert (x760 x2193))
(assert (x760 x1525))
(assert (x760 x1086))
(assert (=> (>= 10000 x787) (= (x687 x787) 0)))
(assert (= x1183 (x43 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075))))
(assert (x760 x638))
(assert (x760 x452))
(assert (=> (<= x1085 10000) (= (x687 x1085) 0)))
(assert (= x2298 (x512 (x1429 x314 x1806 x517 x2298 x567))))
(assert (=> (>= 10000 x2257) (= (x687 x2257) 0)))
(assert (x760 x2339))
(assert (x1893 1))
(assert (= (and (not x1229) x941) x679))
(assert (= (x455 (x2092 32 x1892)) x1892))
(assert (x760 x753))
(assert (=> (<= x1849 10000) (= (x687 x1849) 0)))
(assert (= (x687 115792089237316195423570985008687907853099843482180094807725896704197245534210) 0))
(assert (x1893 x2270))
(assert (= (x955 (x2360 x998 x1573 x644 x93 x580 x1745 x1722)) x1722))
(assert (x1893 x1336))
(assert (= (x43 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207)) x1244))
(assert (x760 x590))
(assert (x760 x1240))
(assert (=> (<= x1168 10000) (= (x687 x1168) 0)))
(assert (=> (>= 10000 x1128) (= (x687 x1128) 0)))
(assert (= (x955 (x2360 x852 x543 x2188 x862 x2315 x1104 x423)) x423))
(assert (x1893 x778))
(assert (x760 x133))
(assert (< 10000 (x241 64 x2393 17)))
(assert (x296 x2157 x1417 x514 x2157))
(assert (= (and x150 x246) x1711))
(assert (= (x43 (x2284 x314 x471 x2257 x336 x1534 x1366)) x2257))
(assert (x839 x1857 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x163) x1896) x2335))
(assert (= x253 (and x1173 (not x897))))
(assert (x327 x351))
(assert (x760 x1580))
(assert (=> (>= 10000 x1457) (= (x687 x1457) 0)))
(assert (x760 x1294))
(assert (not (x2045 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637))))
(assert (not (x2045 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750))))
(assert (x760 x1724))
(assert (x760 x1808))
(assert (x760 x878))
(assert (x1636 x400 1000000))
(assert (= (and x2250 x1444) x2032))
(assert (= (x455 (x2092 32 x1432)) x1432))
(assert (= (and x1311 (not x656)) x1710))
(assert (x760 x104))
(assert (= 32 (x1309 (x2092 32 x915))))
(assert (x760 x872))
(assert (x2116 x1417))
(assert (x760 x575))
(assert (x1893 x1177))
(assert (= (x455 (x2284 x314 x471 x2257 x336 x1534 x1366)) x471))
(assert (x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1928)))
(assert (= x232 (=> (and (= x335 (> x1731 31)) (<= x2178 18446744073709551615) (= x1107 (x781 (- x1197 (mod (ite (> 32 x1731) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1899 (x507 x1892)) (= x2178 (x2190 x1964)) (= x1197 (x436 1 x1899)) (= (ite (< 0 x1197) x1449 (x436 127 x1449)) x1731) (= x1892 (+ 1 x1432)) (= x1449 (x62 x1899 2)) (or (= x1107 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1107 1))) (and (=> (and x335 (and (= (> x1835 x1186) x2240) (= (x62 (+ 31 x1731) 32) x1785) (= x1186 (ite (> 32 x2178) x637 x2106)) (= (x62 (+ x2178 31) 32) x1800) (= x1835 (+ x1785 x637)) (= (x2092 32 x1892) x637) (= (+ x637 x1800) x2106))) (and (=> (not x2240) x1992) (=> x2240 x1379))) (=> (not x335) x480)))))
(assert (x760 x960))
(assert (x760 x1149))
(assert (< (x1429 x852 x1561 x2323 x566 x6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2045 (x241 64 x251 x2204))))
(assert (x760 x2163))
(assert (= (x687 (+ 1 x1873)) (x687 x1873)))
(assert (x760 x2104))
(assert (= (x2092 x852 x1128) (x687 (x2092 x852 x1128))))
(assert (= x1838 (and (not x1211) x221)))
(assert (x2014 x1354 x2058))
(assert (x760 x1898))
(assert (x760 x1164))
(assert (x760 x852))
(assert (x760 x1851))
(assert (x760 x464))
(assert (x760 x185))
(assert (= (and x2153 x640) x1274))
(assert (x760 x1730))
(assert (x760 x298))
(assert (x760 x2402))
(assert (=> (>= 10000 x2223) (= (x687 x2223) 0)))
(assert (x1094 x778 2))
(assert (x760 x2010))
(assert (x839 x1363 2))
(assert (not (x2045 (x2092 32 x1432))))
(assert (= (=> (and (or (and (and (= x921 x1701) (= x283 x2220)) x2034) (and (and (<= 1 x1371) (not (< x511 x1701)) (= 404098525 x1634) (>= 127 x2160) (= x260 false) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1610 x1417 x2157)) (<= 1 x1601) (= (x2365 (+ x76 32)) x2076) (<= x2160 127) (= x28 (x1121 x651)) (= x48 68) (= x675 x1143) (>= x28 1) (= (x2392 x283) x1417) (= x544 (x2365 (+ x1701 x1822))) (= (x1610 x1417 x2157) x1408) (= x2204 (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x283)) (<= x675 1461501637330902918203684832716283019655932542975) (= x1371 (x1121 x1817)) (= x1790 4) (= 1086394137 x52) (<= x283 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x675) (>= 127 x1946) (= (x241 64 x251 x2204) x365) (= x686 x1408) (= (x62 x686 1000000) x412) (>= 127 x1946) (= x511 (x2365 (+ x1822 x1701))) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x149) (= (x2365 (+ x1822 x2056)) x1008) (= x1959 (x2365 (+ 32 x283))) (> x1959 x283) (= false x465) (= (x62 x686 1000000) x12) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x283) (= x544 x921) (= x1386 71998914331801701415977457805802827292338598818749192222732755537001613711014) (>= x1822 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x283) (= (x411 x365) x2282) (= x1497 false) (not (= x283 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= false x524) (= x1974 x1822) (= (x781 (- x1039 x283)) x48) (<= 1 x2282) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1408) (= x2319 68) (= false x2166) (= x311 (x241 64 x675 3)) (= x76 (x2365 (+ x283 4))) (= (x2365 (+ 64 x76)) x1039) (= (x1121 x1817) x1601) (= x1974 x316) (= x1443 29289127993025145568725129057828671567744754166070328588094505464281371246592) (>= x1408 0) (= x2056 (x1983 x311)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x283)) (= x207 false) (= x2220 x1959) (<= x2282 255)) (not x2034))) (and (= (x92 x1169) x1458) (not (> x1629 x1527)) (>= x247 x1241) (= x2034 (= x1822 0)) (= (x1736 x251) x925) (< (+ x545 x1241) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x125 (x1121 x1169)) (= x1664 (x2365 (+ x2143 x1467))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2174) (= (x781 (- x1527 x1241)) x2345) (<= 0 x2174) (= (- x925 x1241) x1280) (= (x2365 (+ x2349 32)) x1086) (= (x2365 (+ x2179 x2143)) x345) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1241 x1458)) (>= 4294967295 x2113) (= x360 (x781 (- x1664 x283))) (= x2174 (+ x1458 x1241)) (= x693 x2174) (= (x781 (- x1527 x1241)) x1629) (= (x1736 x251) x247) (= x2239 (x2365 (+ x2179 31))) (= x545 (x1736 x1169)) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2239) x1467) (<= 1 x125))) x2286) x1360))
(assert (=> (>= 10000 x1270) (= (x687 x1270) 0)))
(assert (x760 x876))
(assert (x1893 x723))
(assert (x760 x1069))
(assert (x1919 x514 x2157 x1417 x2157))
(assert (= (x1309 (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6)) 64))
(assert (x760 x1957))
(assert (= (x1309 (x2284 x1250 x2279 x2048 x2180 x869 x1767)) x1250))
(assert (x624 x366))
(assert (x1893 x44))
(assert (x760 x1206))
(assert (= (x1309 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)) x314))
(assert (= (x455 (x1429 x1250 x905 x631 x1168 x1132)) x905))
(assert (x839 x1353 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x945))
(assert (x30 8 x576))
(assert (x760 x931))
(assert (x1893 x58))
(assert (= (x955 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750)) x1491))
(assert (x760 x1843))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)))
(assert (not (x2045 (x1429 x855 x1487 x312 x1872 x1967))))
(assert (x760 x2098))
(assert (x760 x1491))
(assert (x760 x1728))
(assert (x839 x162 2))
(assert (= x1142 (and x1682 x1192)))
(assert (=> (<= x680 10000) (= 0 (x687 x680))))
(assert (x1661 x44 x1177))
(assert (x760 x1281))
(assert (= (x572 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707)) x707))
(assert (= x1484 (=> (and (= (x1536 x1789) x972) (= x820 (x2365 (+ 32 x321))) (= x1238 (not (< x820 x71)))) (and x761 x1238))))
(assert (= x950 (and x2273 x2285)))
(assert (x760 x1778))
(assert (x760 x797))
(assert (x327 x400))
(assert (=> (<= x1153 10000) (= 0 (x687 x1153))))
(assert (x760 x596))
(assert (x1893 x2151))
(assert (x760 x902))
(assert (x760 x195))
(assert (= x794 (x455 (x2284 x270 x794 x298 x329 x560 x1389))))
(assert (x760 x957))
(assert (= x2003 (x512 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707))))
(assert (= (=> (and (= (+ 1 x1409) x915) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1546) (= (= x1592 0) x220) (or (= x1358 1) (= x1358 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (< x1546 x283) (= (x781 (- x1006 (mod (ite (< x1592 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1358) (<= x1546 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2365 (+ 32 x1546)) x2308) (= (* 32 x898) x834) (= (x436 1 x1363) x1006) (= (x509 x915) x1363) (>= x283 1) (= (ite (< 0 x1006) x2213 (x436 127 x2213)) x1592) (= x283 (x2365 (+ x1546 (mod (+ x834 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x62 (+ 31 x1592) 32) x898) (<= x1546 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2213 (x62 x1363 2))) (and (=> (and (not x220) (= x209 (> x1592 31))) (and (=> (and (not x209) (and (= x161 (x509 x915)) (= (* x2094 256) x375) (= (x62 x161 256) x2094))) x867) (=> (and x209 (and (= (> x1384 x333) x2370) (= x1707 (+ 1 x1901)) (= (x2365 (+ x2308 32)) x333) (= (x2092 32 x915) x1901) (= x2199 (x2215 x1901)) (= (x2365 (+ x2308 x1592)) x1384))) (and (=> x2370 x291) (=> (not x2370) x1090))))) (=> x220 x867))) x1260))
(assert (= x2 (or x2325 x1666)))
(assert (x760 x375))
(assert (= (x455 (x1429 x1123 x817 x124 x620 x2341)) x817))
(assert (> (x810 x852 x1103 x2222 x2223) 10000))
(assert (= (and x456 (not x2253)) x1812))
(assert (x1094 (+ 31 x2158) 32))
(assert (x489 x479))
(assert (= 0 (x687 1086394137)))
(assert (x760 x1995))
(assert (=> (>= 10000 x789) (= 0 (x687 x789))))
(assert (x760 x1382))
(assert (= x2224 (and x1609 x2293)))
(assert (x760 x2216))
(assert (= (and (not x1544) x2062) x1638))
(assert (= (=> (and (= x1520 (x2365 (+ x1430 64))) (= x2387 (x2365 (+ x1520 32))) (= x1348 (x2365 (+ 32 x2410))) (= (x1680 x2270) x1013) (= (+ 1 x1437) x2229) (= (> x2233 0) x2171) (= (x2365 (+ 1 x1808)) x2270) (= x1863 (x1680 x2270)) (= (x67 x2410) x2233) (= (+ x2229 1) x2119)) (and (=> (not x2171) x1717) (=> (and x2171 (and (= (x1590 x1348) x2013) (= (< 32 x2233) x1374))) (and (=> (and x1374 (and (= x1652 (x2365 (+ 32 x1348))) (= (x2365 (+ 32 x2387)) x625) (= (x1188 x1652) x1843) (= x2247 (< 64 x2233)))) (and (=> (and x2247 (and (= (x2365 (+ 64 x2387)) x1482) (= (> x2233 96) x1267) (= (x262 x2320) x1821) (= (x2365 (+ x1348 64)) x2320))) (and (=> x1267 x1878) (=> (not x1267) x1717))) (=> (not x2247) x1717))) (=> (not x1374) x1717))))) x2310))
(assert (= (and x1115 x1422) x2062))
(assert (= (=> (and (<= x1964 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x173 (* x628 32)) (> x2296 x1964) (= (x781 (- x442 (mod (ite (< x2158 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1937) (= x1684 (x62 x766 2)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1937) (= 1 x1937)) (= x1649 (x2365 (+ x1964 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1964) (<= 1 x2296) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1964) (= x1002 (+ 1 x1093)) (= (x62 (+ 31 x2158) 32) x628) (= (ite (> x442 0) x1684 (x436 127 x1684)) x2158) (= (x2365 (+ x1964 (mod (+ 32 x173) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2296) (= (x1604 x1002) x766) (= x236 (= 0 x2158)) (= x442 (x436 1 x766))) (and (=> x236 x200) (=> (and (= x2249 (> x2158 31)) (not x236)) (and (=> (and x2249 (and (= (x2092 32 x1002) x1080) (= x293 (< x2217 x347)) (= (x2365 (+ x2158 x1649)) x347) (= x2217 (x2365 (+ x1649 32))) (= (+ x1080 1) x870) (= x1750 (x2055 x1080)))) (and (=> x293 x1314) (=> (not x293) x1377))) (=> (and (and (= (* 256 x1294) x2079) (= x351 (x1604 x1002)) (= x1294 (x62 x351 256))) (not x2249)) x200))))) x669))
(assert (x2116 x1621))
(assert (x760 x1768))
(assert (x2045 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x760 x2219))
(assert (= (x455 (x810 x389 x1531 x1702 x899)) x1531))
(assert (= (and x1110 x1922) x106))
(assert (= 32 (x1309 (x2092 32 x1498))))
(assert (= x23 (and (not x1224) x2206)))
(assert (x760 x1953))
(assert (= x298 (x43 (x2284 x270 x794 x298 x329 x560 x1389))))
(assert (not (x2045 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075))))
(assert (x839 x917 128))
(assert (= x871 (and (not x1655) x2032)))
(assert (x760 x564))
(assert (x760 x612))
(assert (x327 x1315))
(assert (not (x2045 (x2092 32 x1002))))
(assert (x760 x357))
(assert (= (or x1312 x1231) x1732))
(assert (x760 x1746))
(assert (= (=> (and (and (<= 0 x2084) (<= x2084 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x2345 x1161)) (= x1286 (x323 x251)) (< (+ x1241 x714) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1241 x405) (= (x781 (- x928 x2296)) x958) (= x267 (x2365 (+ 32 x1985))) (= (x1648 x1169) x714) (= (- x1286 x1241) x1316) (= x405 (x323 x251)) (= x1419 x2084) (= (x2365 (+ 31 x402)) x2394) (= (x2365 (+ x402 x1673)) x1206) (<= 1 x1559) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1241 x1978)) (= x2114 (= x1822 0)) (= (x323 x1169) x1978) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2394) x1725) (= (x781 (- x2345 x1241)) x1161) (= x928 (x2365 (+ x1673 x1725))) (= x2084 (+ x714 x1241)) (= x1574 (x781 (- x2345 x1241))) (= x1559 (x1121 x1169)) (>= 4294967295 x88)) (or (and (not x2114) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2296) (= (x2365 (+ x2296 4)) x158) (= (x1610 x514 x2157) x603) (= (x2365 (+ x1822 x940)) x919) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1610 x514 x2157)) (= x1881 false) (> x1598 x2296) (= x2148 (x1121 x1817)) (<= 1 x1099) (= x1822 x1396) (= x27 68) (= (x62 x400 1000000) x82) (>= x159 1) (<= 1 x60) (= x2165 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= (x2365 (+ x158 64)) x2354) (<= x2012 127) (= x2401 (x2365 (+ x1822 x921))) (>= 255 x60) (= (x281 x2296) x514) (>= x1313 1) (<= 1 x1822) (>= 127 x1266) (= (x781 (- x2354 x2296)) x313) (= x940 (x1329 x1508)) (= false x1235) (= x2037 x1396) (= x1082 false) (= 1086394137 x705) (= (x1121 x1817) x1099) (>= x603 0) (= 68 x313) (= (x2365 (+ x1822 x921)) x1631) (= (x62 x400 1000000) x1356) (= x157 false) (<= x2296 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (< x1631 x921)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2296)) (= 4 x97) (= x1508 (x241 64 x159 3)) (= false x431) (= x60 (x411 x462)) (not (= x2296 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x1598 x570) (<= x2012 127) (= (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6) x1619) (= (x1121 x651) x1313) (<= 1 x2148) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2296) (= x1226 29289127993025145568725129057828671567744754166070328588094505464281371246592) (= x142 false) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2296)) (= 404098525 x619) (= x462 (x241 64 x251 x1619)) (= x2413 x159) (= x1598 (x2365 (+ x2296 32))) (= (x2365 (+ 32 x158)) x1645) (<= x159 1461501637330902918203684832716283019655932542975) (= x400 x603) (= 71998914331801701415977457805802827292338598818749192222732755537001613711014 x989) (<= x1266 127) (<= x603 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and x2114 (= x570 x2296)))) x1956) x936))
(assert (=> (>= 10000 x1702) (= (x687 x1702) 0)))
(assert (= x564 (x455 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075))))
(assert (x760 x1637))
(assert (x760 x2099))
(assert (=> (<= x8 10000) (= (x687 x8) 0)))
(assert (x760 x1368))
(assert (= x565 (and x243 x182)))
(assert (x760 x1324))
(assert (x760 x136))
(assert (< (x241 x389 x1284 x1704) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x435) (= 0 (x687 x435))))
(assert (x760 x2156))
(assert (= x1379 (=> (and (= x1146 (not (> x1835 x751))) (= (+ 1 x1186) x751)) (and x1146 x1992))))
(assert (=> (<= x1193 10000) (= 0 (x687 x1193))))
(assert (=> (<= x560 10000) (= (x687 x560) 0)))
(assert (x1094 x161 256))
(assert (x760 x1457))
(assert (x760 x717))
(assert (not (x2045 (x2092 32 x2066))))
(assert (x760 x1012))
(assert (= (x687 x1002) (x687 (+ x1002 1))))
(assert (x760 x994))
(assert (x2116 8))
(assert (x760 x486))
(assert (= x1587 (=> (and (= x1300 (* 2 x2098)) (= (+ x1300 1) x804)) x2310)))
(assert (= (x49 (x2284 x314 x471 x2257 x336 x1534 x1366)) x1366))
(assert (x760 x2319))
(assert (= (x1309 (x2092 32 x1963)) 32))
(assert (not (x2045 (x1429 x852 x1561 x2323 x566 x6))))
(assert (x760 x2179))
(assert (< 10000 (x1429 x855 x1487 x312 x1872 x1967)))
(assert (x760 x56))
(assert (x760 x102))
(assert (= (and x2293 (not x1609)) x882))
(assert (=> (<= x1918 10000) (= (x687 x1918) 0)))
(assert (x760 x2157))
(assert (= (x687 x637) (x687 (+ x1785 x637))))
(assert (x760 x271))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2284 x314 x471 x2257 x336 x1534 x1366)))
(assert (= (=> (and (= x883 (x2365 (+ x1149 96))) (= (x2336 x1606) x138) (= (not (< 128 x1263)) x483) (= x1606 (x2365 (+ x1887 96)))) (and x483 x569)) x975))
(assert (x760 x663))
(assert (x760 x1683))
(assert (x1661 x694 x2150))
(assert (= (and x1823 x31) x1311))
(assert (x148 x88))
(assert (x760 x1241))
(assert (x760 x2000))
(assert (x1094 (+ x1353 31) 32))
(assert (x760 x972))
(assert (x760 x1857))
(assert (x760 x1978))
(assert (=> (<= x1389 10000) (= (x687 x1389) 0)))
(assert (=> (>= 10000 x1953) (= 0 (x687 x1953))))
(assert (= (x512 (x2360 x998 x1573 x644 x93 x580 x1745 x1722)) x93))
(assert (= x10 (x43 (x241 64 x190 x10))))
(assert (x760 x969))
(assert (< (x2092 32 x1853) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1858))
(assert (= x597 (and (not x2057) x2137)))
(assert (= (x2092 x1250 x113) (x687 (x2092 x1250 x113))))
(assert (x1893 x479))
(assert (x760 x1023))
(assert (= x5 (and x1691 x605)))
(assert (x760 x2220))
(assert (x760 x164))
(assert (< (x2284 x389 x104 x872 x2052 x680 x1165) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1172))
(assert (x760 x1277))
(assert (> (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706) 10000))
(assert (x760 x1816))
(assert (x760 x1001))
(assert (= x727 (x49 (x2284 x1123 x838 x1995 x393 x1971 x727))))
(assert (= (and (not x689) x1198) x66))
(assert (= (x455 (x1429 x270 x1747 x2339 x653 x1164)) x1747))
(assert (x760 x267))
(assert (x760 x1820))
(assert (x760 x1244))
(assert (x760 x2382))
(assert (= x2324 (or x1418 x1420)))
(assert (= (x512 (x2284 x1123 x838 x1995 x393 x1971 x727)) x393))
(assert (not (x2045 (x2284 x1123 x838 x1995 x393 x1971 x727))))
(assert (x760 x2349))
(assert (= x1832 (=> (and (= x55 (not (< 32 x743))) (= x866 (+ x2322 1)) (= x1600 (x773 x1969)) (= (x2365 (+ 32 x1546)) x1969)) (and (=> (and (= x2026 64) (= x866 x1830)) x197) x55))))
(assert (=> (<= x1602 10000) (= 0 (x687 x1602))))
(assert (= x1223 (x1879 (x2284 x852 x1639 x728 x789 x1223 x205))))
(assert (x760 x2042))
(assert (= x1975 (x455 (x2092 x855 x1975))))
(assert (x760 x2387))
(assert (=> (<= x1842 10000) (= 0 (x687 x1842))))
(assert (not (x2045 (x241 64 x1808 19))))
(assert (= x463 (and (not x236) x2256)))
(assert (= x1195 (and (not x1793) x261)))
(assert (=> (>= 10000 x1975) (= 0 (x687 x1975))))
(assert (x760 x1271))
(assert (x760 x1084))
(assert (x839 x1084 128))
(assert (< 10000 (x241 x314 x383 x1842)))
(assert (x760 x2274))
(assert (x760 x392))
(assert (x760 x2410))
(assert (x327 (+ 31 x1353)))
(assert (x760 x1049))
(assert (x327 (+ 31 x2402)))
(assert (=> (>= 10000 x1743) (= 0 (x687 x1743))))
(assert (x30 8 x1353))
(assert (x760 x339))
(assert (x760 x2269))
(assert (= x129 (and (not x614) x1657)))
(assert (= (x955 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)) x1585))
(assert (x1636 x686 1000000))
(assert (x1893 x1074))
(assert (= x1642 (x1879 (x1429 x389 x1380 x745 x2141 x1642))))
(assert (x760 x1968))
(assert (= (and x1921 x1398) x1505))
(assert (x760 x769))
(assert (x327 (+ x769 31)))
(assert (x760 x2398))
(assert (= (x241 64 x190 x10) (x687 (x241 64 x190 x10))))
(assert (> (x2360 x1250 x931 x648 x1602 x641 x1957 x1918) 10000))
(assert (x760 x68))
(assert (= (and x896 x256) x1766))
(assert (x760 x117))
(assert (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x960) (ite (< x960 256) (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x960)) 0)))
(assert (x1094 (+ x2402 31) 32))
(assert (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1928) (ite (> 256 x1928) (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1928)) 0)))
(assert (=> (>= 10000 x2188) (= 0 (x687 x2188))))
(assert (x760 x961))
(assert (x760 x1371))
(assert (= (and x1338 x2086) x1552))
(assert (= (and x169 x1349) x40))
(assert (x760 x2105))
(assert (x760 x2183))
(assert (= (x512 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)) x2196))
(assert (x760 x2292))
(assert (= x406 (=> (and (= x1786 (x1715 x2210)) (= (x2365 (+ x288 32)) x2382) (= (not (> x709 x2382)) x175)) (and x175 x1658))))
(assert (= x2163 (x455 (x241 x1123 x2163 x534))))
(assert (= (x1879 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)) x1942))
(assert (x760 x977))
(assert (x760 x2123))
(assert (= (and (not x1823) x31) x1988))
(assert (x760 x424))
(assert (= (x687 (x810 x855 x468 x2278 x1030)) (x810 x855 x468 x2278 x1030)))
(assert (x760 x1113))
(assert (=> (<= x271 10000) (= (x687 x271) 0)))
(assert (not (x2045 (x810 x1123 x574 x1820 x305))))
(assert (< 10000 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)))
(assert (= 0 (x687 115792089237316195423570985008687907853099843482180094807725896704197245534209)))
(assert (=> (>= 10000 x2315) (= (x687 x2315) 0)))
(assert (= x1562 (and (not x335) x1264)))
(assert (= (and x221 x1211) x1218))
(assert (= x855 (x1309 (x2092 x855 x1975))))
(assert (= (x687 x2200) (x687 (+ 1 x2200))))
(assert (x760 x1085))
(assert (=> (>= 10000 x6) (= 0 (x687 x6))))
(assert (= (x1879 (x2284 x314 x471 x2257 x336 x1534 x1366)) x1534))
(assert (= x1362 (and x1544 x2062)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x810 x998 x1924 x2245 x135)))
(assert (x760 x571))
(assert (= (x687 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918)) (x2360 x1250 x931 x648 x1602 x641 x1957 x1918)))
(assert (x760 x1230))
(assert (x760 x1649))
(assert (x760 x1906))
(assert (x760 x1247))
(assert (x624 x1353))
(assert (x819 x948))
(assert (= x850 (x43 (x241 x1250 x833 x850))))
(assert (x760 x1561))
(assert (= (x455 (x2092 x270 x1849)) x1849))
(assert (=> (<= x1941 10000) (= (x687 x1941) 0)))
(assert (not (x2045 (x1993 0))))
(assert (x760 x1900))
(assert (=> (<= x610 10000) (= 0 (x687 x610))))
(assert (x760 x1573))
(assert (x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1525)))
(assert (x760 x1902))
(assert (x489 x917))
(assert (x760 x1969))
(assert (= x440 (=> (and (= (x1715 x2342) x1778) (= x2263 (not (< 224 x832)))) (and x908 x2263))))
(assert (x760 x709))
(assert (x760 x468))
(assert (= (x455 (x810 x1123 x574 x1820 x305)) x574))
(assert (x128 x2348))
(assert (= (x512 (x1429 x1250 x905 x631 x1168 x1132)) x1168))
(assert (x760 x693))
(assert (x760 x1569))
(assert (> (x2092 32 x2066) 10000))
(assert (x760 x1537))
(assert (= (x1309 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440)) x270))
(assert (not (x2045 (x810 x389 x1531 x1702 x899))))
(assert (x760 x369))
(assert (=> (<= x1223 10000) (= 0 (x687 x1223))))
(assert (=> (>= 10000 x905) (= (x687 x905) 0)))
(assert (=> (<= x1284 10000) (= 0 (x687 x1284))))
(assert (x760 x379))
(assert (x760 x1380))
(assert (x760 x704))
(assert (= x36 (x43 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750))))
(assert (x760 x81))
(assert (= (x1309 (x241 64 x159 3)) 64))
(assert (> (x2284 x1123 x838 x1995 x393 x1971 x727) 10000))
(assert (x760 x1489))
(assert (= x987 (and x614 x1657)))
(assert (= (x687 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707)) (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707)))
(assert (=> (<= x620 10000) (= 0 (x687 x620))))
(assert (x760 x412))
(assert (< (x2092 x270 x1849) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1044))
(assert (= x192 x1779))
(assert (x760 x275))
(assert (x760 x1096))
(assert (=> (<= x1123 10000) (= 0 (x687 x1123))))
(assert (= x494 (and x1135 (not x438))))
(assert (x327 (x1617 2 x1088)))
(assert (= x457 (x43 (x2284 x855 x1193 x457 x359 x1545 x2414))))
(assert (x1893 x1084))
(assert (x760 x736))
(assert (x760 x325))
(assert (= x378 (or x23 x541 x1513 x992 x1647)))
(assert (x760 x1848))
(assert (x760 x492))
(assert (x1094 (+ 31 x2098) 32))
(assert (=> (<= x706 10000) (= 0 (x687 x706))))
(assert (=> (<= x727 10000) (= 0 (x687 x727))))
(assert (x839 x1746 2))
(assert (x2045 22334872))
(assert (x760 x1770))
(assert (x30 32 (ite (not (= x947 0)) 1 0)))
(assert (x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1727)))
(assert (= (=> (and (= (x2365 (+ x333 32)) x1550) (= x765 (not (> x1384 x1550))) (= (x2215 x1707) x2398)) (and x765 x1090)) x291))
(assert (x760 x1385))
(assert (=> (>= 10000 x2030) (= 0 (x687 x2030))))
(assert (= (x687 x2005) (x687 (+ x2005 1))))
(assert (= (and x381 x996) x99))
(assert (x839 x1581 128))
(assert (x760 x1634))
(assert (> (x241 64 x1863 19) 10000))
(assert (x760 x619))
(assert (=> (>= 10000 x93) (= (x687 x93) 0)))
(assert (= (x687 10894474682274239493831243662817379401261526446360622092269559273883068006400) 0))
(assert (x760 x2134))
(assert (x760 x672))
(assert (= (x687 x1432) (x687 (+ 1 x1432))))
(assert (x760 x2135))
(assert (x760 x2058))
(assert (x1893 x2150))
(assert (x760 x47))
(assert (= x499 (or x538 x493)))
(assert (=> (<= x673 10000) (= (x687 x673) 0)))
(assert (x2280 x2213))
(assert (x760 x1605))
(assert (x760 x1181))
(assert (x760 x1740))
(assert (x2280 x766))
(assert (= (x1309 (x2092 32 x1409)) 32))
(assert (x760 x1797))
(assert (not (x2045 (x241 64 x190 x10))))
(assert (x760 x2132))
(assert (x760 x967))
(assert (x760 x1790))
(assert (= x264 (and x1926 x282)))
(assert (= (x687 x695) (x687 (+ x695 x848))))
(assert (x760 x644))
(assert (= x799 (and x904 x1033)))
(assert (x2280 340282366920938463463374607431768211456))
(assert (= (and x1765 (not x1374)) x167))
(assert (x760 x1976))
(assert (= x857 (x43 (x810 x1250 x1802 x857 x1816))))
(assert (= (x455 (x241 64 x2393 17)) x2393))
(assert (= (x512 (x810 x389 x1531 x1702 x899)) x899))
(assert (=> (>= 10000 x2323) (= 0 (x687 x2323))))
(assert (=> (>= 10000 x1030) (= (x687 x1030) 0)))
(assert (x760 x2079))
(assert (not (x2045 (x241 x270 x337 x1185))))
(assert (x760 x796))
(assert (= (x687 (x2092 x270 x1849)) (x2092 x270 x1849)))
(assert (x760 x838))
(assert (x760 x1366))
(assert (x760 x1161))
(assert (x839 x366 32))
(assert (x760 x347))
(assert (x760 x1781))
(assert (= x1908 (and x1072 x2114)))
(assert (=> (<= x2118 10000) (= (x687 x2118) 0)))
(assert (x760 x1802))
(assert (x760 x2258))
(assert (x2116 (- x1417 x514)))
(assert (=> (>= 10000 x1450) (= 0 (x687 x1450))))
(assert (x839 x1336 32))
(assert (x1661 x1045 x272))
(assert (= x1250 (x1309 (x810 x1250 x1802 x857 x1816))))
(assert (=> (>= 10000 x754) (= (x687 x754) 0)))
(assert (x760 x921))
(assert (= x750 (x572 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750))))
(assert (x760 x210))
(assert (= x522 (and x1330 (not x1883))))
(assert (x760 x2180))
(assert (=> (>= 10000 x931) (= 0 (x687 x931))))
(assert (x760 x85))
(assert (x760 x1070))
(assert (x760 x703))
(assert (= x1938 (and x1365 x499)))
(assert (x760 x2109))
(assert (= x1704 (x43 (x241 x389 x1284 x1704))))
(assert (= (x687 (x1429 x1250 x905 x631 x1168 x1132)) (x1429 x1250 x905 x631 x1168 x1132)))
(assert (= (x241 x1250 x833 x850) (x687 (x241 x1250 x833 x850))))
(assert (= (x1309 (x2092 32 4)) 32))
(assert (x760 x98))
(assert (x760 x1545))
(assert (= (x512 (x1429 x998 x1683 x165 x289 x1297)) x289))
(assert (= (and x1272 (not x26)) x1769))
(assert (x523 x2178))
(assert (x760 x631))
(assert (x760 x887))
(assert (x839 x452 2))
(assert (> (x2092 32 x1432) 10000))
(assert (x760 x2257))
(assert (x760 x1104))
(assert (= (or x59 x264 x1170) x1506))
(assert (= (and x1272 x26) x1451))
(assert (x760 x1327))
(assert (x2280 x1315))
(assert (not (x2045 (x241 x389 x1284 x1704))))
(assert (x2045 15621254588198505905128070491301349125963569839395559151037828136576825163776))
(assert (x760 x935))
(assert (x760 x292))
(assert (x760 x1977))
(assert (x760 x1137))
(assert (x760 x1339))
(assert (= (x1879 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207)) x2207))
(assert (= x1984 (and (not x1615) x1564)))
(assert (= x933 (and (not x1921) x1398)))
(assert (= (x43 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706)) x1851))
(assert (= (=> (and (= x744 (not (> x2258 32))) (= (+ 1 x121) x1252) (= x1904 (x2190 x924)) (= x924 (x2365 (+ 32 x2265)))) (and (=> (and (= x1252 x893) (= x1341 64)) x2077) x744)) x18))
(assert (x2280 x616))
(assert (x760 x2102))
(assert (x760 x187))
(assert (= x796 (x512 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637))))
(assert (x760 x471))
(assert (= (and x115 x266) x1514))
(assert (x760 x1129))
(assert (x2014 x1144 x1644))
(assert (= (x1309 (x241 64 x675 3)) 64))
(assert (x760 x1852))
(assert (x760 x1540))
(assert (=> (>= 10000 x2182) (= (x687 x2182) 0)))
(assert (=> (<= x2136 10000) (= (x687 x2136) 0)))
(assert (= x852 (x1309 (x241 x852 x1955 x2010))))
(assert (x30 2 x2098))
(assert (= (x455 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207)) x516))
(assert (=> (>= 10000 x1722) (= (x687 x1722) 0)))
(assert (x760 x1130))
(assert (= (and x772 x2370) x1756))
(assert (x760 x916))
(assert (x760 x1722))
(assert (x760 x670))
(assert (=> (<= x942 10000) (= (x687 x942) 0)))
(assert (= x413 (=> (and (= (not (> x211 x376)) x2069) (= (+ x2154 1) x376)) (and x2069 x473))))
(assert (= (x241 x855 x2091 x2136) (x687 (x241 x855 x2091 x2136))))
(assert (x760 x2300))
(assert (= x2312 (x512 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075))))
(assert (= (and x1322 x1283) x242))
(assert (> (x810 x314 x1537 x156 x1060) 10000))
(assert (= (x1309 (x2092 32 x1892)) 32))
(assert (= x852 (x1309 (x2360 x852 x543 x2188 x862 x2315 x1104 x423))))
(assert (= x998 (x1309 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702))))
(assert (= (=> (and (<= x159 1461501637330902918203684832716283019655932542975) (= (+ 1 x1002) x101) (= x2061 (x781 (- x836 (mod (ite (< x2402 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1435 (x241 64 x911 17)) (= (x436 1 x452) x836) (= x1299 (+ 1 x101)) (= x188 (> x2402 31)) (= x917 (x62 x452 2)) (or (= x2061 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2061 1)) (= x1775 (x726 x101)) (= (ite (< 0 x836) x917 (x436 127 x917)) x2402) (= x159 (x2409 x1299)) (= x452 (x1706 x1435))) (and (=> (not x188) x711) (=> (and x188 (and (= x1922 (> x554 x695)) (= (+ x848 x695) x554) (= x695 (x2092 32 x1435)) (= x848 (x62 (+ 31 x2402) 32)))) (and (=> (not x1922) x1772) (=> x1922 x1215))))) x200))
(assert (x760 x44))
(assert (= x2020 (x455 (x2092 x314 x2020))))
(assert (x760 x1392))
(assert (=> (<= x127 10000) (= 0 (x687 x127))))
(assert (= (x43 (x1429 x855 x1487 x312 x1872 x1967)) x312))
(assert (x2045 1605942358))
(assert (x760 x27))
(assert (x2045 4132204338))
(assert (x1094 (+ x425 31) 32))
(assert (= x1250 (x1309 (x2092 x1250 x113))))
(assert (= x998 (x1309 (x2360 x998 x1573 x644 x93 x580 x1745 x1722))))
(assert (x128 x1530))
(assert (x760 x1441))
(assert (x760 x1633))
(assert (< 10000 (x2284 x998 x2304 x977 x1931 x1941 x887)))
(assert (x839 x778 2))
(assert (x1893 x766))
(assert (x30 32 x898))
(assert (x760 x905))
(assert (x760 x217))
(assert (x760 x58))
(assert (not (x2045 (x2284 x389 x104 x872 x2052 x680 x1165))))
(assert (x327 (+ x1336 31)))
(assert (< (x241 x855 x2091 x2136) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x1337 x757 x954 x814 x361) x169))
(assert (x760 x1341))
(assert (= (x2284 x389 x104 x872 x2052 x680 x1165) (x687 (x2284 x389 x104 x872 x2052 x680 x1165))))
(assert (=> (<= x113 10000) (= (x687 x113) 0)))
(assert (x760 x2100))
(assert (= (x2284 x855 x1193 x457 x359 x1545 x2414) (x687 (x2284 x855 x1193 x457 x359 x1545 x2414))))
(assert (x760 x539))
(assert (= x487 (and x565 (not x1335))))
(assert (x30 8 x1811))
(assert (x489 x1084))
(assert (x760 x65))
(assert (x760 x989))
(assert (x296 x2157 x514 x2157 x1417))
(assert (x760 x775))
(assert (x327 x1074))
(assert (x327 x2151))
(assert (x1893 x325))
(assert (= (x660 x855 x1151 x201 x414 x1026 x754 x671 x435) (x687 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435))))
(assert (=> (<= x414 10000) (= 0 (x687 x414))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 x314 x383 x1842)))
(assert (x1094 x2151 2))
(assert (x760 x1733))
(assert (x760 x2011))
(assert (= (=> (and (= x395 (x2365 (+ 32 x2133))) (= (x781 (- x354 x2133)) x477) (= (x436 1 x2348) x1880) (= (x62 x2348 2) x1058) (= (x2365 (+ x1149 x273)) x354) (= (x436 1 x2348) x1462) (= (x781 (- x1880 (mod (ite (> 32 x2096) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x650) (= x2096 (ite (> x1880 0) x1058 (x436 127 x1058))) (= (= 0 x1462) x1338) (= x2321 (x2365 (+ x1149 x1263))) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1208) x273) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x650) (= 1 x650)) (= x1208 (x2365 (+ x1263 31))) (= (x2365 (+ x354 32)) x1310)) (and (=> (and (and (= (* (ite (not (= 0 x2096)) 1 0) 32) x1733) (= (x2365 (+ x1733 x1310)) x1801) (= x868 x1801) (or (= 32 x1733) (= 0 x1733)) (= x678 (x436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2348))) x1338) x1334) (=> (and (not x1338) (and (= x252 (> x2096 0)) (= x579 (x2092 32 4)))) (and (=> x252 x979) (=> (and (= x864 0) (not x252)) x533))))) x569))
(assert (x760 x1598))
(assert (x327 (+ x2016 31)))
(assert (x760 x222))
(assert (x2045 71998914331801701415977457805802827292338598818749192222732755537001613711014))
(assert (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1727) (ite (< x1727 256) (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1727)) 0)))
(assert (x760 x840))
(assert (x2280 x325))
(assert (x760 x804))
(assert (x760 x1817))
(assert (= x2033 (and x601 (not x1748))))
(assert (x1094 (+ x1147 31) 32))
(assert (= x208 (=> (= (= (ite (> x1353 31) 1 0) 1) x847) (and (=> (and (and (= x26 (= x1353 0)) (or (and x26 (= x13 0)) (and (not x26) (and (= x13 x1415) (= (x773 x1352) x1415) (= x1352 (x2365 (+ 32 x2410))))))) (not x847)) x328) (=> (and (and (= (> x1885 0) x1856) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1353) x1885) (= (x2092 32 x1498) x344)) x847) (and (=> (and (and (= 32 x1516) (= x344 x1741)) (not x1856)) x278) (=> x1856 x583)))))))
(assert (= x2112 (x49 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637))))
(assert (x1661 x768 x723))
(assert (x760 x560))
(assert (x1893 x1208))
(assert (= (x43 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)) x571))
(assert (= x355 (and x2086 (not x1338))))
(assert (x760 x611))
(assert (=> (<= x1251 10000) (= (x687 x1251) 0)))
(assert (x760 x1959))
(assert (= x1889 (or x1756 x558)))
(assert (> (x241 64 x251 x1619) 10000))
(assert (> (x2092 32 x1002) 10000))
(assert (x760 x543))
(assert (= 0 (x687 71998914331801701415977457805802827292338598818749192222732755537001613711014)))
(assert (x2116 x898))
(assert (= (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750) (x687 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750))))
(assert (= (x687 22334872) 0))
(assert (= x1312 (and x346 x1773)))
(assert (x327 x1271))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 x270 x337 x1185)))
(assert (x30 8 x1834))
(assert (= x2337 (x512 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440))))
(assert (= x2290 (x512 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702))))
(assert (= x336 (x512 (x2284 x314 x471 x2257 x336 x1534 x1366))))
(assert (x760 x238))
(assert (x839 x2394 32))
(assert (x760 x812))
(assert (= x838 (x455 (x2284 x1123 x838 x1995 x393 x1971 x727))))
(assert (< (x2092 32 x1963) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x947))
(assert (= x747 (=> (and (= x840 (+ x1891 1)) (= (* 2 x1336) x1891)) x232)))
(assert (x839 x1353 32))
(assert (= x1420 (and x845 (not x1962))))
(assert (=> (<= x217 10000) (= 0 (x687 x217))))
(assert (= (x1429 x270 x1747 x2339 x653 x1164) (x687 (x1429 x270 x1747 x2339 x653 x1164))))
(assert (x760 x1460))
(assert (= x1246 (x49 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707))))
(assert (x760 x1871))
(assert (x760 x2136))
(assert (x839 x325 128))
(assert (x760 x84))
(assert (= (=> (and (= x868 x1253) (= x1253 (x2365 (+ x864 x1310)))) x1334) x533))
(assert (= x969 (x512 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207))))
(assert (x489 x1120))
(assert (x296 x2157 x1417 x2157 x514))
(assert (x760 x2306))
(assert (= (and x1896 x163) x418))
(assert (=> (>= 10000 x1026) (= (x687 x1026) 0)))
(assert (x760 x1214))
(assert (= (x1309 (x241 x314 x383 x1842)) x314))
(assert (x760 x477))
(assert (x760 x1652))
(assert (x839 x1058 128))
(assert (> (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750) 10000))
(assert (= (=> (= (= (ite (= 0 x1850) x1850 (ite (> x1182 0) 1 0)) 0) x1773) (and (=> (and (and (= (x62 (+ 31 x549) 32) x1998) (<= 1 x1439) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1430) (> x1439 x1430) (= (x62 x2348 2) x861) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1430) (= (= 0 x549) x438) (<= x1430 115792089237316195423570985008687907853269984665640564039457584007913129639934) (or (= 1 x1633) (= x1633 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x1633 (x781 (- x830 (mod (ite (> 32 x549) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2074 (x2365 (+ x1430 32))) (= (x436 1 x2348) x830) (= (ite (> x830 0) x861 (x436 127 x861)) x549) (= (x2365 (+ x1430 (mod (+ x1876 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1439) (= (* x1998 32) x1876)) (not x1773)) (and (=> (and (not x438) (= (> x549 31) x2377)) (and (=> (and x2377 (and (= x709 (x2365 (+ x2074 x549))) (= x1852 (x1715 x2005)) (= x2210 (+ x2005 1)) (= (x2365 (+ x2074 32)) x288) (= (x2092 32 4) x2005) (= (< x288 x709) x1883))) (and (=> (not x1883) x1658) (=> x1883 x406))) (=> (and (and (= x210 (* 256 x1391)) (= (x62 x2348 256) x1391)) (not x2377)) x1114))) (=> x438 x1114))) (=> (and (and (= x851 x911) (= x374 x2345)) x1773) x2125))) x1570))
(assert (= (or x1889 x912 x1862) x1438))
(assert (x2280 x2270))
(assert (x760 x1406))
(assert (=> (>= 10000 x517) (= (x687 x517) 0)))
(assert (x760 x1979))
(assert (= (=> (and (= x1447 (x2365 (+ x404 96))) (= x1720 (not (> x639 128))) (= x98 (x2365 (+ x2220 96))) (= x2135 (x1763 x1447))) (and x1641 x1720)) x875))
(assert (x760 x404))
(assert (x760 x608))
(assert (x760 x943))
(assert (x760 x1529))
(assert (x760 x863))
(assert (x760 x2267))
(assert (= (x687 (x241 64 x1808 19)) (x241 64 x1808 19)))
(assert (x760 x35))
(assert (= x541 (and x2206 x1224)))
(assert (x2045 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (not (x2045 (x810 x270 x922 x2011 x1902))))
(assert (x760 x2312))
(assert (x327 (+ x425 31)))
(assert (< 10000 (x1429 x852 x1561 x2323 x566 x6)))
(assert (x760 x1246))
(assert (x760 x288))
(assert (= (and x463 x2249) x437))
(assert (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1088) (ite (< x1088 256) (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1088)) 0)))
(assert (x760 x962))
(assert (= x2225 (and x1751 x235)))
(assert (x2116 x1811))
(assert (=> (>= 10000 x671) (= (x687 x671) 0)))
(assert (x523 x2098))
(assert (x760 x1689))
(assert (=> (>= 10000 x1191) (= (x687 x1191) 0)))
(assert (< (x2092 32 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x270 (x1309 (x2284 x270 x794 x298 x329 x560 x1389))))
(assert (= (or x2088 (and (not x193) x2324)) x14))
(assert (= 64 (x1309 (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1))))
(assert (= x644 (x43 (x2360 x998 x1573 x644 x93 x580 x1745 x1722))))
(assert (= x352 (or x629 x1136)))
(assert (x760 x1546))
(assert (x760 x1134))
(assert (= (x1879 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440)) x1367))
(assert (x760 x2004))
(assert (x760 x421))
(assert (< (x2092 32 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1887))
(assert (=> (>= 10000 x1060) (= (x687 x1060) 0)))
(assert (x760 x1315))
(assert (=> (>= 10000 x36) (= (x687 x36) 0)))
(assert (x760 x1220))
(assert (= x805 (or x2018 x1710)))
(assert (= (x1309 (x1993 0)) 0))
(assert (x760 x1006))
(assert (= (and x494 (not x2377)) x2146))
(assert (< 10000 (x810 x1250 x1802 x857 x1816)))
(assert (=> (>= 10000 x2180) (= 0 (x687 x2180))))
(assert (x760 x1827))
(assert (= x1101 (=> (and (= (not (< x2361 x1383)) x2395) (= x2361 (x2365 (+ 32 x2001))) (= x2379 (x1037 x914))) (and x1884 x2395))))
(assert (x760 x2304))
(assert (=> (<= x702 10000) (= (x687 x702) 0)))
(assert (x489 x616))
(assert (x760 x2308))
(assert (x760 x1928))
(assert (x760 x202))
(assert (= x580 (x1879 (x2360 x998 x1573 x644 x93 x580 x1745 x1722))))
(assert (= (or x445 x22 x2033) x282))
(assert (= (=> (and (= (x2365 (+ x1952 x283)) x358) (= (x2365 (+ 32 x962)) x2042) (= x389 (x781 (- x998 32))) (= (x781 (- x2042 x283)) x998) (= x962 (x2365 (+ x283 x1952))) (= x1697 (<= x389 224))) (and (=> (and (= (x2365 (+ x283 32)) x965) (= (x2271 x1407) x1165) (= x46 (x2365 (+ 32 x283))) (= (x2365 (+ 32 x283)) x1254) (= (x2271 x283) x1531) (= x1317 (x2365 (+ 64 x283))) (= (x2271 x596) x969) (= (x2271 x1858) x745) (= x1704 (x2271 x965)) (= (x2365 (+ 64 x283)) x797) (= x1593 (x2365 (+ 160 x283))) (= (x2271 x2267) x2207) (= x2052 (x2271 x797)) (= (x2365 (+ x283 128)) x1640) (= x1557 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)) (= (x2365 (+ x283 64)) x1376) (= x1407 (x2365 (+ x283 128))) (= (x2365 (+ 96 x283)) x2267) (= x1693 (x810 x389 x1531 x1702 x899)) (= (x2271 x283) x1380) (= (x2271 x1162) x1244) (= (x2092 x389 x1687) x1894) (= x837 (x2365 (+ x283 192))) (= x1642 (x2271 x1654)) (= (x2284 x389 x104 x872 x2052 x680 x1165) x2117) (= x271 (x2271 x1640)) (= x1589 (x2365 (+ x283 96))) (= (x2365 (+ 32 x283)) x748) (= x2023 (x2365 (+ x283 64))) (= x1702 (x2271 x46)) (= x942 (x2271 x961)) (= x1162 (x2365 (+ x283 32))) (= (x1429 x389 x1380 x745 x2141 x1642) x7) (= x1687 (x2271 x283)) (= (x2365 (+ 96 x283)) x1654) (= x1907 (x2271 x1593)) (= (x241 x389 x1284 x1704) x1265) (= x1509 (x2271 x283)) (= (x2271 x748) x571) (= x2021 (ite (= 0 x389) x1700 (ite (<= x389 32) x1894 (ite (>= 64 x389) x1265 (ite (<= x389 96) x1693 (ite (<= x389 128) x7 (ite (<= x389 160) x2117 (ite (<= x389 192) x1557 (ite (>= 224 x389) x1622 x2346))))))))) (= (x2271 x2023) x899) (= x1406 (x2271 x69)) (= (x2365 (+ 96 x283)) x1043) (= x1284 (x2271 x283)) (= (x2271 x1589) x680) (= x1207 (x2271 x837)) (= x1622 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207)) (= x69 (x2365 (+ 160 x283))) (= (x2271 x1254) x872) (= (x2365 (+ 128 x283)) x961) (= (>= 224 x998) x306) (= x2141 (x2271 x1317)) (= (x2365 (+ x283 32)) x1858) (= x2078 (x2271 x1043)) (= (x1993 0) x1700) (= (x2271 x1376) x1660) (= (x2271 x283) x104) (= (x2271 x283) x516) (= x596 (x2365 (+ x283 64)))) (and x306 (=> (and (= x1393 (x2365 (+ x283 64))) (= (x1993 0) x953) (= x1269 (x2365 (+ 96 x283))) (= x419 (x241 x998 x1442 x1050)) (= x776 (x2365 (+ 64 x283))) (= x1722 (x2271 x1067)) (= (x2271 x581) x1297) (= x977 (x2271 x1650)) (= (x2365 (+ x283 32)) x308) (= x1683 (x2271 x283)) (= (ite (= 0 x998) x953 (ite (>= 32 x998) x1543 (ite (>= 64 x998) x419 (ite (<= x998 96) x1016 (ite (<= x998 128) x1839 (ite (>= 160 x998) x1446 (ite (>= 192 x998) x701 (ite (>= 224 x998) x1003 x382)))))))) x386) (= (x2365 (+ x283 128)) x230) (= (x1005 x386) x318) (= (x2365 (+ 32 x283)) x2403) (= x135 (x2271 x1392)) (= (x2284 x998 x2304 x977 x1931 x1941 x887) x1446) (= (x2365 (+ x283 32)) x1302) (= (x2365 (+ 96 x283)) x2231) (= x1016 (x810 x998 x1924 x2245 x135)) (= (x2271 x2231) x50) (= x1050 (x2271 x424)) (= (x2271 x308) x2245) (= (x2365 (+ x2410 32)) x1887) (= 0 x318) (= x289 (x2271 x117)) (= x1263 (x1533 x2410)) (= (x2365 (+ x283 128)) x1519) (= x1681 (x2271 x283)) (= x1490 (x2365 (+ x283 64))) (= x1543 (x2092 x998 x1681)) (= x2133 (x2365 (+ x283 4))) (= x1947 (x2365 (+ 160 x283))) (= x1948 (x2271 x283)) (= (x2271 x283) x1573) (= (x2365 (+ 96 x283)) x1339) (= (x2271 x1519) x1745) (= (x2271 x1302) x644) (= (x2365 (+ 96 x283)) x581) (= (x2271 x283) x1442) (= x1650 (x2365 (+ 32 x283))) (= (x2271 x283) x2304) (= (x2365 (+ 160 x283)) x1067) (= x1953 (x2271 x2252)) (= x93 (x2271 x1393)) (= (x2271 x230) x1130) (= x887 (x2271 x1724)) (= x2290 (x2271 x776)) (= x424 (x2365 (+ x283 32))) (= x64 (x2271 x1947)) (= (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702) x1003) (= (x2365 (+ 128 x283)) x1724) (= x1839 (x1429 x998 x1683 x165 x289 x1297)) (= x1149 (x2365 (+ 32 x1714))) (= x580 (x2271 x1339)) (= (x2365 (+ 192 x283)) x227) (= (x2271 x1269) x1941) (= (x2365 (+ x2133 128)) x1714) (= x117 (x2365 (+ 64 x283))) (= (x2271 x2403) x165) (= (x2365 (+ 32 x283)) x2252) (= (> x1263 0) x1980) (= (x2360 x998 x1573 x644 x93 x580 x1745 x1722) x701) (= x1392 (x2365 (+ 64 x283))) (= (x2271 x283) x1924) (= x702 (x2271 x227)) (= x1931 (x2271 x1490))) (and (=> (and x1980 (and (= (< 32 x1263) x1859) (= (x802 x1887) x2019))) (and (=> (not x1859) x569) (=> (and (and (= x199 (x2365 (+ 32 x1887))) (= (x2365 (+ 32 x1149)) x2287) (= x15 (x1576 x199)) (= x2253 (> x1263 64))) x1859) (and (=> (and x2253 (and (= x1615 (< 96 x1263)) (= (x2365 (+ x1149 64)) x1361) (= (x2266 x392) x2193) (= (x2365 (+ 64 x1887)) x392))) (and (=> (not x1615) x569) (=> x1615 x975))) (=> (not x2253) x569))))) (=> (not x1980) x569))))) x1697)) x573))
(assert (x760 x1293))
(assert (= (=> (= x2371 (= (ite (< 31 x1336) 1 0) 1)) (and (=> (and (not x2371) (and (= (= 0 x1336) x268) (or (and (and (= x1307 (x2365 (+ x2265 32))) (= (x2190 x1307) x102) (= x102 x44)) (not x268)) (and x268 (= 0 x44))))) x1478) (=> (and x2371 (and (= (x2092 32 x1432) x121) (= x621 (> x2258 0)) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1336) x2258))) (and (=> (and (and (= x893 x121) (= 32 x1341)) (not x621)) x2077) (=> x621 x18))))) x1139))
(assert (> (x241 x270 x337 x1185) 10000))
(assert (x760 x1043))
(assert (x2045 170141183460469231731687303715884105727))
(assert (x1893 x2306))
(assert (= (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207) (x687 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207))))
(assert (= (x687 x1901) (x687 (+ 1 x1901))))
(assert (x760 x2415))
(assert (x760 x848))
(assert (= (x687 (x1429 x998 x1683 x165 x289 x1297)) (x1429 x998 x1683 x165 x289 x1297)))
(assert (x760 x978))
(assert (x760 x1306))
(assert (= x213 (or x324 x952)))
(assert (x760 x410))
(assert (x760 x900))
(assert (x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1011)))
(assert (x760 x2294))
(assert (x760 x755))
(assert (= (x1309 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)) x855))
(assert (= x1251 (x455 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637))))
(assert (= x2128 (and (not x537) x274)))
(assert (x760 x273))
(assert (x327 (x1617 2 x1525)))
(assert (< (x2284 x852 x1639 x728 x789 x1223 x205) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x572 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)) x435))
(assert (x760 x2202))
(assert (= x1853 (x455 (x2092 32 x1853))))
(assert (= x1745 (x49 (x2360 x998 x1573 x644 x93 x580 x1745 x1722))))
(assert (=> (<= x1181 10000) (= (x687 x1181) 0)))
(assert (=> (<= x2304 10000) (= 0 (x687 x2304))))
(assert (= (x455 (x2284 x855 x1193 x457 x359 x1545 x2414)) x1193))
(assert (= (and x2036 x231) x845))
(assert (= x1918 (x955 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918))))
(assert (not (x2045 (x2092 32 x1498))))
(assert (= (x1309 (x2284 x852 x1639 x728 x789 x1223 x205)) x852))
(assert (=> (>= 10000 x852) (= 0 (x687 x852))))
(assert (x30 32 x1621))
(assert (not (x2045 (x2092 x389 x1687))))
(assert (= 32 (x1309 (x2092 32 x1432))))
(assert (x2280 x1449))
(assert (x760 x1361))
(assert (not (x2045 (x1429 x1250 x905 x631 x1168 x1132))))
(assert (x760 x2313))
(assert (= (and x1774 x1436) x2314))
(assert (x760 x1022))
(assert (= x1068 (or x1274 x352)))
(assert (= (=> (= x235 (= 1 (ite (> x2098 31) 1 0))) (and (=> (and (and (= x743 (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2098)) (= (x2092 32 x1437) x2322) (= x146 (< 0 x743))) x235) (and (=> (and (not x146) (and (= x1830 x2322) (= 32 x2026))) x197) (=> x146 x1832))) (=> (and (not x235) (and (= x1774 (= x2098 0)) (or (and (and (= (x773 x1019) x1282) (= x1019 (x2365 (+ x1546 32))) (= x1045 x1282)) (not x1774)) (and (= x1045 0) x1774)))) x228))) x1779))
(assert (x760 x1593))
(assert (x760 x8))
(assert (x760 x114))
(assert (x2045 18446744073709551615))
(assert (x760 x706))
(assert (x760 x60))
(assert (= (x687 404098525) 0))
(assert (x1893 x932))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 64 x251 x1619)))
(assert (= (and (not x2273) x2285) x19))
(assert (= (x1309 (x241 64 x2393 17)) 64))
(assert (x2280 x2331))
(assert (x760 x1275))
(assert (= 71998914331801701415977457805802827292338598818749192222732755537001613711014 (x455 (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6))))
(assert (x2280 x366))
(assert (x2280 x1857))
(assert (= (x1309 (x1429 x998 x1683 x165 x289 x1297)) x998))
(assert (not (x2045 (x810 x314 x1537 x156 x1060))))
(assert (not (x2045 (x2092 x855 x1975))))
(assert (x839 x2394 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1574))
(assert (x760 x283))
(assert (x760 x1606))
(assert (x760 x1927))
(assert (= x1436 (and x1751 (not x235))))
(assert (= x305 (x512 (x810 x1123 x574 x1820 x305))))
(assert (x760 x544))
(assert (=> (>= 10000 x631) (= 0 (x687 x631))))
(assert (x2045 404098525))
(assert (x760 x1207))
(assert (= x1957 (x49 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918))))
(assert (x760 x2012))
(assert (= (x49 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207)) x942))
(assert (x760 x1592))
(assert (x1893 x2348))
(assert (x760 x1147))
(assert (x760 x1509))
(assert (x760 x15))
(assert (x2045 4294967295))
(assert (> (x241 x998 x1442 x1050) 10000))
(assert (x327 x778))
(assert (=> (<= x567 10000) (= (x687 x567) 0)))
(assert (x2116 x2178))
(assert (x760 x2158))
(assert (=> (>= 10000 x457) (= (x687 x457) 0)))
(assert (x760 x1687))
(assert (x760 x1517))
(assert (not (x2045 (x2092 x852 x1128))))
(assert (x327 (+ 31 x602)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 x855 x1975)))
(assert (x760 x334))
(assert (x760 x225))
(assert (= x182 (or x679 x2068 x1465 x2372 x212)))
(assert (x148 x1890))
(assert (= x675 (x455 (x241 64 x675 3))))
(assert (x760 x1411))
(assert (not (x2045 (x1429 x270 x1747 x2339 x653 x1164))))
(assert (= x855 (x1309 (x2284 x855 x1193 x457 x359 x1545 x2414))))
(assert (x523 x1353))
(assert (x760 x337))
(assert (x30 8 x1200))
(assert (< (x241 64 x1863 19) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1439))
(assert (= (and x1225 x244) x1279))
(assert (x1893 127))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 32 x1892)))
(assert (x1094 (+ 31 x1592) 32))
(assert (= (x687 (x2092 32 x1432)) (x2092 32 x1432)))
(assert (= (x455 (x1429 x852 x1561 x2323 x566 x6)) x1561))
(assert (= (x687 x1997) (x687 (+ x1997 x61))))
(assert (= (and (not x176) x1345) x1729))
(assert (=> (>= 10000 x2414) (= (x687 x2414) 0)))
(assert (x1760 x2270))
(assert (x760 x48))
(assert (x760 x93))
(assert (=> (>= 10000 x1808) (= 0 (x687 x1808))))
(assert (x760 x1348))
(assert (x489 x790))
(assert (= (or x2262 x1982) x2251))
(assert (x760 x919))
(assert (x760 x1200))
(assert (= (x687 x2322) (x687 (+ 1 x2322))))
(assert (= (x1879 (x2284 x389 x104 x872 x2052 x680 x1165)) x680))
(assert (= x787 (x1879 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707))))
(assert (=> (<= x750 10000) (= 0 (x687 x750))))
(assert (= x1487 (x455 (x1429 x855 x1487 x312 x1872 x1967))))
(assert (= x270 (x1309 (x2092 x270 x1849))))
(assert (x760 x131))
(assert (= x525 (and (not x17) x105)))
(assert (= (x455 (x2092 x389 x1687)) x1687))
(assert (= (x687 x1611) (x687 (+ 1 x1611))))
(assert (x760 x1670))
(assert (x760 x1872))
(assert (< 10000 (x810 x855 x468 x2278 x1030)))
(assert (x760 x2083))
(assert (=> (>= 10000 x382) (= 0 (x687 x382))))
(assert (< 10000 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207)))
(assert (= x968 (=> (and (= (x2008 x140) x2318) (= x2411 (x2365 (+ 96 x283))) (= x2085 (not (< 128 x1952))) (= x140 (x2365 (+ x430 96)))) (and x573 x2085))))
(assert (= x2086 (or x297 x2161 x204 x1812 x1984)))
(assert (=> (>= 10000 x1931) (= (x687 x1931) 0)))
(assert (x760 x1098))
(assert (x839 x1684 128))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1429 x855 x1487 x312 x1872 x1967)))
(assert (x760 x2133))
(assert (=> (>= 10000 x468) (= (x687 x468) 0)))
(assert (= (=> (and (= (x1346 x1437) x2151) (= (< 31 x2404) x540) (= (ite (> x2232 0) x1084 (x436 127 x1084)) x2404) (or (= x1920 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1920)) (>= 18446744073709551615 x2098) (= (x436 1 x2151) x2232) (= (x781 (- x2232 (mod (ite (> 32 x2404) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1920) (= x1084 (x62 x2151 2)) (= x1437 (+ x1498 1)) (= (x773 x1546) x2098)) (and (=> (not x540) x1779) (=> (and x540 (and (= x795 (x62 (+ x2098 31) 32)) (= (ite (> 32 x2098) x722 x591) x1021) (= (x2092 32 x1437) x722) (= (+ x795 x722) x591) (= (x62 (+ 31 x2404) 32) x2110) (= x343 (+ x722 x2110)) (= (> x343 x1021) x1140))) (and (=> x1140 x1780) (=> (not x1140) x192))))) x90))
(assert (x2116 x628))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x810 x1123 x574 x1820 x305)))
(assert (< (x2092 32 x1409) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= (x2365 (+ x174 x2387)) x1061) (= (x1612 128) x2396) (= x1857 (x2365 (+ x2233 31))) (= x174 (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1857)) (= (x2365 (+ x2233 x2387)) x2050) (= (x2365 (+ 32 x1061)) x935) (= (x2365 (+ x1430 32)) x909) (= (> x2396 0) x2330) (= (x781 (- x1061 x1430)) x599)) (and (=> (and (and (= x670 (x1735 160)) (= (< 32 x2396) x1813)) x2330) (and (=> (and (and (= (> x2396 64) x1495) (= x485 (x2365 (+ x935 32))) (= x611 (x331 192))) x1813) (and (=> (and x1495 (and (= (x1504 224) x1770) (= (> x2396 96) x897) (= (x2365 (+ x935 64)) x1698))) (and (=> x897 x2194) (=> (not x897) x263))) (=> (not x1495) x263))) (=> (not x1813) x263))) (=> (not x2330) x263))) x1717))
(assert (x2280 x1530))
(assert (< 10000 (x2284 x1250 x2279 x2048 x2180 x869 x1767)))
(assert (x760 x1947))
(assert (x760 x2017))
(assert (x760 x2400))
(assert (=> (<= x1416 10000) (= (x687 x1416) 0)))
(assert (x760 x132))
(assert (x2280 x479))
(assert (= (x455 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440)) x610))
(assert (x760 x1880))
(assert (< 10000 (x2284 x314 x471 x2257 x336 x1534 x1366)))
(assert (= (x687 (x2092 32 x1853)) (x2092 32 x1853)))
(assert (= (x2092 x1123 x1085) (x687 (x2092 x1123 x1085))))
(assert (x760 x1354))
(assert (x760 x2170))
(assert (x30 256 x1391))
(assert (< 10000 (x810 x270 x922 x2011 x1902)))
(assert (=> (>= 10000 x911) (= (x687 x911) 0)))
(assert (x760 x2404))
(assert (x760 x1081))
(assert (= (x1879 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)) x340))
(assert (x1841 x2157 (- x1417 x514)))
(assert (= (x687 x481) (x687 (+ x481 1))))
(assert (x327 (x1617 2 x960)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 64 x675 3)))
(assert (x760 x1639))
(assert (= (x687 (x810 x1250 x1802 x857 x1816)) (x810 x1250 x1802 x857 x1816)))
(assert (x760 x2375))
(assert (= x1406 (x955 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207))))
(assert (x760 x358))
(assert (x760 x1026))
(assert (x760 x1650))
(assert (x760 x482))
(assert (x760 x2408))
(assert (x760 x135))
(assert (x1893 x1581))
(assert (= x653 (x512 (x1429 x270 x1747 x2339 x653 x1164))))
(assert (=> (<= x927 10000) (= (x687 x927) 0)))
(assert (x760 x1868))
(assert (= (x2092 x998 x1681) (x687 (x2092 x998 x1681))))
(assert (x760 x1876))
(assert (x760 x1699))
(assert (=> (>= 10000 x1545) (= (x687 x1545) 0)))
(assert (x760 x1282))
(assert (= (and x2034 x719) x307))
(assert (x760 x126))
(assert (x760 x249))
(assert (x760 x2205))
(assert (x760 x1061))
(assert (x1094 (+ x170 31) 32))
(assert (x1893 x492))
(assert (< (x2092 32 x1432) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2288 (and (not x2038) x1000)))
(assert (x760 x1731))
(assert (=> (>= 10000 x1183) (= 0 (x687 x1183))))
(assert (x148 x2113))
(assert (x760 x479))
(assert (x760 x639))
(assert (x760 x430))
(assert (x760 x2056))
(assert (= x1167 (and x1421 (not x2371))))
(assert (= x2344 (and x1218 (not x1204))))
(assert (x760 x743))
(assert (=> (>= 10000 x1683) (= 0 (x687 x1683))))
(assert (x760 x2046))
(assert (x760 x1452))
(assert (= (and x1350 x1267) x1017))
(assert (= x278 (=> (and (or (not x1365) (and x1365 (and (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1928)) x1020) (= x759 (x773 x1917)) (= x734 (x436 x759 x1020)) (= x1917 (x2365 (+ x1516 x2410))) (= x1928 (* 8 x1834)) (= (x436 31 x1353) x1834)))) (= (< x1885 x1353) x1365)) x2059)))
(assert (x760 x2361))
(assert (not (x2045 (x241 64 x911 17))))
(assert (=> (<= x1967 10000) (= 0 (x687 x1967))))
(assert (= (=> (and (= (+ x310 1) x2385) (= x310 (* 2 x1353))) x90) x2059))
(assert (x760 x171))
(assert (= (x455 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918)) x931))
(assert (= (x1879 (x2284 x1250 x2279 x2048 x2180 x869 x1767)) x869))
(assert (x760 x2035))
(assert (x327 x162))
(assert (= x2216 (x49 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461))))
(assert (= x998 (x1309 (x241 x998 x1442 x1050))))
(assert (x760 x1608))
(assert (x2116 x1113))
(assert (= (x1309 (x2092 x389 x1687)) x389))
(assert (= (=> (and (= (not (> x2233 128)) x645) (= (x823 x250) x2139) (= (x2365 (+ x1348 96)) x250) (= x294 (x2365 (+ x2387 96)))) (and x1717 x645)) x1878))
(assert (=> (<= x35 10000) (= (x687 x35) 0)))
(assert (= (x687 x915) (x687 (+ 1 x915))))
(assert (x760 x1067))
(assert (=> (<= x1670 10000) (= (x687 x1670) 0)))
(assert (x760 x2041))
(assert (x2280 x452))
(assert (< (x2092 32 x1002) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1418 (and x845 x1962)))
(assert (= (x1309 (x1429 x852 x1561 x2323 x566 x6)) x852))
(assert (= (or x213 x491 x5) x2256))
(assert (x1094 (+ 31 x1336) 32))
(assert (= (x687 (x241 x389 x1284 x1704)) (x241 x389 x1284 x1704)))
(assert (x760 x2044))
(assert (x1893 x272))
(assert (= x2223 (x512 (x810 x852 x1103 x2222 x2223))))
(assert (x760 x724))
(assert (= (x455 (x810 x852 x1103 x2222 x2223)) x1103))
(assert (x327 32))
(assert (x760 x2148))
(assert (x760 x1301))
(assert (x819 x1144))
(assert (= (x687 (+ 1 x1093)) (x687 x1093)))
(assert (x760 x2411))
(assert (= x1739 x500))
(assert (=> (>= 10000 x2313) (= (x687 x2313) 0)))
(assert (x760 x199))
(assert (x760 x1761))
(assert (x760 x138))
(assert (x2280 x1058))
(assert (not (x2045 (x1429 x998 x1683 x165 x289 x1297))))
(assert (x839 x790 128))
(assert (x760 x1031))
(assert (not (x2045 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461))))
(assert (x760 x2141))
(assert (x2045 1086394137))
(assert (x760 x397))
(assert (x760 x1381))
(assert (< 10000 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461)))
(assert (x760 x69))
(assert (x760 x1182))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 x1123 x1085)))
(assert (= (x687 (x810 x270 x922 x2011 x1902)) (x810 x270 x922 x2011 x1902)))
(assert (= (x512 (x1429 x389 x1380 x745 x2141 x1642)) x2141))
(assert (x760 x604))
(assert (x760 x1701))
(assert (x760 x2223))
(assert (= (=> (and (= (x2272 x539) x1713) (= (x2365 (+ 96 x2243)) x539) (= x1668 (not (> x434 128))) (= (x2365 (+ 96 x699)) x1028)) (and x2350 x1668)) x1935))
(assert (= (=> (and (= x202 (x2365 (+ 96 x79))) (= x1069 (x2365 (+ 96 x255))) (= x1247 (x280 x1069)) (= (not (> x234 128)) x684)) (and x684 x91)) x186))
(assert (= (or x2235 x1562) x231))
(assert (x2280 x2348))
(assert (=> (<= x1132 10000) (= 0 (x687 x1132))))
(assert (< (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert true)
(assert (x760 x1160))
(assert (= (and (not x2171) x2251) x1549))
(assert (x327 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2116 x888))
(assert (= (x1879 (x1429 x855 x1487 x312 x1872 x1967)) x1967))
(assert (x2280 x1084))
(assert (=> (<= x2048 10000) (= (x687 x2048) 0)))
(assert (x760 x1575))
(assert (= (x455 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702)) x1948))
(assert (x2014 x1012 x1794))
(assert (x760 x2337))
(assert (x760 x2089))
(assert (x760 x239))
(assert (x2116 x1507))
(assert (x1893 x861))
(assert (= (x1309 (x1429 x314 x1806 x517 x2298 x567)) x314))
(assert (x760 x668))
(assert (x760 x1248))
(assert (> (x241 64 x675 3) 10000))
(assert (= x2378 (and x1350 (not x1267))))
(assert (= x1572 (=> (and (= x1759 (* 2 x2178)) (= (+ 1 x1759) x1716)) x1886)))
(assert (= (or x1552 x206) x1175))
(assert (=> (<= x2298 10000) (= 0 (x687 x2298))))
(assert (x760 x1035))
(assert (x760 x384))
(assert (x760 x1297))
(assert (x760 x1692))
(assert (x760 x1165))
(assert (x327 (+ x1731 31)))
(assert (x760 x97))
(assert (x760 x511))
(assert (x760 x1270))
(assert (< 10000 (x2092 32 x1498)))
(assert (=> (>= 10000 x1185) (= (x687 x1185) 0)))
(assert (x760 x1585))
(assert (= (=> (and (= x1803 x225) (= (x2365 (+ x1160 x1979)) x225)) x1558) x1829))
(assert (=> (>= 10000 x329) (= 0 (x687 x329))))
(assert (< 10000 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075)))
(assert (= (x512 (x810 x855 x468 x2278 x1030)) x1030))
(assert (x760 x648))
(assert (x760 x974))
(assert (> (x810 x389 x1531 x1702 x899) 10000))
(assert (= x1734 (and x39 x433)))
(assert (x839 x1315 2))
(assert (= 32 (x1309 (x2092 32 x2066))))
(assert (=> (<= x1487 10000) (= (x687 x1487) 0)))
(assert (x1893 x694))
(assert (x760 x1176))
(assert (x760 x1320))
(assert (< 10000 (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)))
(assert (=> (<= x1075 10000) (= (x687 x1075) 0)))
(assert (x760 x382))
(assert (= (x687 (x1429 x1123 x817 x124 x620 x2341)) (x1429 x1123 x817 x124 x620 x2341)))
(assert (x760 x156))
(assert (x760 x20))
(assert (= (x687 (x241 64 x159 3)) (x241 64 x159 3)))
(assert (=> (>= 10000 x1165) (= (x687 x1165) 0)))
(assert (= (x687 x344) (x687 (+ 1 x344))))
(assert (= x361 (and x2185 x966)))
(assert (=> (>= 10000 x1971) (= (x687 x1971) 0)))
(assert (x760 x1811))
(assert (= (x43 (x1429 x852 x1561 x2323 x566 x6)) x2323))
(assert (= (x687 1461501637330902918203684832716283019655932542975) 0))
(assert (= x1123 (x1309 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707))))
(assert (= (x1309 (x810 x270 x922 x2011 x1902)) x270))
(assert (x760 x1660))
(assert (= (x687 (x241 64 x1863 19)) (x241 64 x1863 19)))
(assert (< (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6 (x1879 (x1429 x852 x1561 x2323 x566 x6))))
(assert (x760 x1954))
(assert (x1893 x1363))
(assert (x760 x1975))
(assert (=> (<= x190 10000) (= 0 (x687 x190))))
(assert (and (= (x1617 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= 166153499473114484112975882535043072 (x1617 2 117)) (= (x1617 2 115) 41538374868278621028243970633760768) (= 68719476736 (x1617 2 36)) (= (x1617 2 128) 340282366920938463463374607431768211456) (= (x1617 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= (x1617 2 175) 47890485652059026823698344598447161988085597568237568) (= (x1617 2 193) 12554203470773361527671578846415332832204710888928069025792) (= 295147905179352825856 (x1617 2 68)) (= 348449143727040986586495598010130648530944 (x1617 2 138)) (= 147573952589676412928 (x1617 2 67)) (= 210624583337114373395836055367340864637790190801098222508621955072 (x1617 2 217)) (= 9444732965739290427392 (x1617 2 73)) (= 3291009114642412084309938365114701009965471731267159726697218048 (x1617 2 211)) (= (x1617 2 3) 8) (= 536870912 (x1617 2 29)) (= 1208925819614629174706176 (x1617 2 80)) (= (x1617 2 84) 19342813113834066795298816) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x1617 2 231)) (= 11150372599265311570767859136324180752990208 (x1617 2 143)) (= (x1617 2 13) 8192) (= (x1617 2 106) 81129638414606681695789005144064) (= (x1617 2 72) 4722366482869645213696) (= 8796093022208 (x1617 2 43)) (= (x1617 2 66) 73786976294838206464) (= (x1617 2 188) 392318858461667547739736838950479151006397215279002157056) (= 8589934592 (x1617 2 33)) (= (x1617 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= (x1617 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= 4194304 (x1617 2 22)) (= (x1617 2 32) 4294967296) (= 37778931862957161709568 (x1617 2 75)) (= 19807040628566084398385987584 (x1617 2 94)) (= 1048576 (x1617 2 20)) (= (x1617 2 7) 128) (= (x1617 2 49) 562949953421312) (= 10384593717069655257060992658440192 (x1617 2 113)) (= 72057594037927936 (x1617 2 56)) (= (x1617 2 83) 9671406556917033397649408) (= 83076749736557242056487941267521536 (x1617 2 116)) (= (x1617 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1617 2 91) 2475880078570760549798248448) (= (x1617 2 235) 55213970774324510299478046898216203619608871777363092441300193790394368) (= (x1617 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= 24519928653854221733733552434404946937899825954937634816 (x1617 2 184)) (= 2596148429267413814265248164610048 (x1617 2 111)) (= (x1617 2 155) 45671926166590716193865151022383844364247891968) (= (x1617 2 194) 25108406941546723055343157692830665664409421777856138051584) (= 576460752303423488 (x1617 2 59)) (= 2722258935367507707706996859454145691648 (x1617 2 131)) (= 17592186044416 (x1617 2 44)) (= 262144 (x1617 2 18)) (= (x1617 2 12) 4096) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1617 2 216)) (= (x1617 2 181) 3064991081731777716716694054300618367237478244367204352) (= 5986310706507378352962293074805895248510699696029696 (x1617 2 172)) (= (x1617 2 60) 1152921504606846976) (= (x1617 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= (x1617 2 196) 100433627766186892221372630771322662657637687111424552206336) (= 904625697166532776746648320380374280103671755200316906558262375061821325312 (x1617 2 249)) (= (x1617 2 53) 9007199254740992) (= (x1617 2 5) 32) (= (x1617 2 64) 18446744073709551616) (= (x1617 2 240) 1766847064778384329583297500742918515827483896875618958121606201292619776) (= 842498333348457493583344221469363458551160763204392890034487820288 (x1617 2 219)) (= 9903520314283042199192993792 (x1617 2 93)) (= 21267647932558653966460912964485513216 (x1617 2 124)) (= (x1617 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= (x1617 2 40) 1099511627776) (= 332306998946228968225951765070086144 (x1617 2 118)) (= (x1617 2 102) 5070602400912917605986812821504) (= (x1617 2 74) 18889465931478580854784) (= (x1617 2 76) 75557863725914323419136) (= (x1617 2 145) 44601490397061246283071436545296723011960832) (= 1496577676626844588240573268701473812127674924007424 (x1617 2 170)) (= (x1617 2 246) 113078212145816597093331040047546785012958969400039613319782796882727665664) (= 5316911983139663491615228241121378304 (x1617 2 122)) (= (x1617 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= (x1617 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= (x1617 2 35) 34359738368) (= (x1617 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= 730750818665451459101842416358141509827966271488 (x1617 2 159)) (= (x1617 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= (x1617 2 65) 36893488147419103232) (= (x1617 2 120) 1329227995784915872903807060280344576) (= 883423532389192164791648750371459257913741948437809479060803100646309888 (x1617 2 239)) (= 35184372088832 (x1617 2 45)) (= (x1617 2 103) 10141204801825835211973625643008) (= 1569275433846670190958947355801916604025588861116008628224 (x1617 2 190)) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x1617 2 251)) (= 803469022129495137770981046170581301261101496891396417650688 (x1617 2 199)) (= 664613997892457936451903530140172288 (x1617 2 119)) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x1617 2 225)) (= 2535301200456458802993406410752 (x1617 2 101)) (= 64 (x1617 2 6)) (= 18014398509481984 (x1617 2 54)) (= 170141183460469231731687303715884105728 (x1617 2 127)) (= 39614081257132168796771975168 (x1617 2 95)) (= 1645504557321206042154969182557350504982735865633579863348609024 (x1617 2 210)) (= (x1617 2 147) 178405961588244985132285746181186892047843328) (= 441711766194596082395824375185729628956870974218904739530401550323154944 (x1617 2 238)) (= (x1617 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= (x1617 2 47) 140737488355328) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1617 2 226)) (= (x1617 2 148) 356811923176489970264571492362373784095686656) (= 274877906944 (x1617 2 38)) (= (x1617 2 130) 1361129467683753853853498429727072845824) (= 131072 (x1617 2 17)) (= 191561942608236107294793378393788647952342390272950272 (x1617 2 177)) (= 618970019642690137449562112 (x1617 2 89)) (= 9223372036854775808 (x1617 2 63)) (= (x1617 2 187) 196159429230833773869868419475239575503198607639501078528) (= 383123885216472214589586756787577295904684780545900544 (x1617 2 178)) (= (x1617 2 114) 20769187434139310514121985316880384) (= 1237940039285380274899124224 (x1617 2 90)) (= 10633823966279326983230456482242756608 (x1617 2 123)) (= 36028797018963968 (x1617 2 55)) (= 22835963083295358096932575511191922182123945984 (x1617 2 154)) (= 3138550867693340381917894711603833208051177722232017256448 (x1617 2 191)) (= 604462909807314587353088 (x1617 2 79)) (= (x1617 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x1617 2 104) 20282409603651670423947251286016) (= (x1617 2 28) 268435456) (= 633825300114114700748351602688 (x1617 2 99)) (= 16777216 (x1617 2 24)) (= (x1617 2 206) 102844034832575377634685573909834406561420991602098741459288064) (= 512 (x1617 2 9)) (= (x1617 2 34) 17179869184) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x1617 2 242)) (= 2199023255552 (x1617 2 41)) (= 524288 (x1617 2 19)) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x1617 2 247)) (= (x1617 2 133) 10889035741470030830827987437816582766592) (= (x1617 2 107) 162259276829213363391578010288128) (= 1073741824 (x1617 2 30)) (= 26328072917139296674479506920917608079723773850137277813577744384 (x1617 2 214)) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x1617 2 222)) (= (x1617 2 98) 316912650057057350374175801344) (= (x1617 2 169) 748288838313422294120286634350736906063837462003712) (= (x1617 2 192) 6277101735386680763835789423207666416102355444464034512896) (= (x1617 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= 4398046511104 (x1617 2 42)) (= 174224571863520493293247799005065324265472 (x1617 2 137)) (= (x1617 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= (x1617 2 171) 2993155353253689176481146537402947624255349848014848) (= (x1617 2 86) 77371252455336267181195264) (= (x1617 2 134) 21778071482940061661655974875633165533184) (= (x1617 2 150) 1427247692705959881058285969449495136382746624) (= 288230376151711744 (x1617 2 58)) (= 8388608 (x1617 2 23)) (= 11692013098647223345629478661730264157247460343808 (x1617 2 163)) (= (x1617 2 167) 187072209578355573530071658587684226515959365500928) (= 23945242826029513411849172299223580994042798784118784 (x1617 2 174)) (= (x1617 2 195) 50216813883093446110686315385661331328818843555712276103168) (= (x1617 2 81) 2417851639229258349412352) (= (x1617 2 88) 309485009821345068724781056) (= 4503599627370496 (x1617 2 52)) (= 649037107316853453566312041152512 (x1617 2 109)) (= (x1617 2 157) 182687704666362864775460604089535377456991567872) (= 43556142965880123323311949751266331066368 (x1617 2 135)) (= 25711008708143844408671393477458601640355247900524685364822016 (x1617 2 204)) (= 2361183241434822606848 (x1617 2 71)) (= (x1617 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= 79228162514264337593543950336 (x1617 2 96)) (= (x1617 2 39) 549755813888) (= (x1617 2 142) 5575186299632655785383929568162090376495104) (= 95780971304118053647396689196894323976171195136475136 (x1617 2 176)) (= 324518553658426726783156020576256 (x1617 2 108)) (= (x1617 2 0) 1) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1617 2 255)) (= 374144419156711147060143317175368453031918731001856 (x1617 2 168)) (= (x1617 2 61) 2305843009213693952) (= (x1617 2 165) 46768052394588893382517914646921056628989841375232) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1617 2 248)) (= 766247770432944429179173513575154591809369561091801088 (x1617 2 179)) (= 1461501637330902918203684832716283019655932542976 (x1617 2 160)) (= (x1617 2 69) 590295810358705651712) (= (x1617 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1617 2 252)) (= (x1617 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= 365375409332725729550921208179070754913983135744 (x1617 2 158)) (= (x1617 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= (x1617 2 203) 12855504354071922204335696738729300820177623950262342682411008) (= (x1617 2 92) 4951760157141521099596496896) (= 696898287454081973172991196020261297061888 (x1617 2 139)) (= 1393796574908163946345982392040522594123776 (x1617 2 140)) (= (x1617 2 205) 51422017416287688817342786954917203280710495801049370729644032) (= (x1617 2 57) 144115188075855872) (= 52656145834278593348959013841835216159447547700274555627155488768 (x1617 2 215)) (= (x1617 2 15) 32768) (= (x1617 2 151) 2854495385411919762116571938898990272765493248) (= 91343852333181432387730302044767688728495783936 (x1617 2 156)) (= 134217728 (x1617 2 27)) (= (x1617 2 189) 784637716923335095479473677900958302012794430558004314112) (= (x1617 2 180) 1532495540865888858358347027150309183618739122183602176) (= (x1617 2 87) 154742504910672534362390528) (= (x1617 2 197) 200867255532373784442745261542645325315275374222849104412672) (= (x1617 2 26) 67108864) (= 1024 (x1617 2 10)) (= 89202980794122492566142873090593446023921664 (x1617 2 146)) (= (x1617 2 97) 158456325028528675187087900672) (= (x1617 2 4) 16) (= (x1617 2 223) 13479973333575319897333507543509815336818572211270286240551805124608) (= (x1617 2 16) 65536) (= 11417981541647679048466287755595961091061972992 (x1617 2 153)) (= 5444517870735015415413993718908291383296 (x1617 2 132)) (= (x1617 2 245) 56539106072908298546665520023773392506479484700019806659891398441363832832) (= (x1617 2 2) 4) (= (x1617 2 149) 713623846352979940529142984724747568191373312) (= 680564733841876926926749214863536422912 (x1617 2 129)) (= (x1617 2 173) 11972621413014756705924586149611790497021399392059392) (= 23384026197294446691258957323460528314494920687616 (x1617 2 164)) (= 12259964326927110866866776217202473468949912977468817408 (x1617 2 183)) (= (x1617 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= (x1617 2 21) 2097152) (= 1298074214633706907132624082305024 (x1617 2 110)) (= (x1617 2 70) 1180591620717411303424) (= (x1617 2 31) 2147483648) (= 401734511064747568885490523085290650630550748445698208825344 (x1617 2 198)) (= 1267650600228229401496703205376 (x1617 2 100)) (= (x1617 2 112) 5192296858534827628530496329220096) (= (x1617 2 77) 151115727451828646838272) (= (x1617 2 141) 2787593149816327892691964784081045188247552) (= (x1617 2 237) 220855883097298041197912187592864814478435487109452369765200775161577472) (= (x1617 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= (x1617 2 46) 70368744177664) (= 42535295865117307932921825928971026432 (x1617 2 125)) (= 137438953472 (x1617 2 37)) (= (x1617 2 78) 302231454903657293676544) (= (x1617 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= 87112285931760246646623899502532662132736 (x1617 2 136)) (= (x1617 2 14) 16384) (= 98079714615416886934934209737619787751599303819750539264 (x1617 2 186)) (= (x1617 2 82) 4835703278458516698824704) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1617 2 228)) (= 38685626227668133590597632 (x1617 2 85)) (= (x1617 2 62) 4611686018427387904) (= (x1617 2 25) 33554432) (= 411376139330301510538742295639337626245683966408394965837152256 (x1617 2 208)) (= 5708990770823839524233143877797980545530986496 (x1617 2 152)) (= 5846006549323611672814739330865132078623730171904 (x1617 2 162)) (= (x1617 2 144) 22300745198530623141535718272648361505980416) (= (x1617 2 161) 2923003274661805836407369665432566039311865085952) (= 1125899906842624 (x1617 2 50)) (= (x1617 2 11) 2048) (= (x1617 2 244) 28269553036454149273332760011886696253239742350009903329945699220681916416) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x1617 2 233)) (= (x1617 2 105) 40564819207303340847894502572032) (= 2658455991569831745807614120560689152 (x1617 2 121)) (= 2 (x1617 2 1)) (= 256 (x1617 2 8)) (= 281474976710656 (x1617 2 48)) (= 85070591730234615865843651857942052864 (x1617 2 126)) (= (x1617 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= 93536104789177786765035829293842113257979682750464 (x1617 2 166)) (= (x1617 2 182) 6129982163463555433433388108601236734474956488734408704) (= 2251799813685248 (x1617 2 51))))
(assert (= (x955 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)) x364))
(assert (= (or x1938 x370) x937))
(assert (x760 x498))
(assert (< (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1367 10000) (= (x687 x1367) 0)))
(assert (x760 x2037))
(assert (= (x687 (+ x1498 1)) (x687 x1498)))
(assert (x760 x398))
(assert (x760 x1776))
(assert (x760 x1694))
(assert (= x1297 (x1879 (x1429 x998 x1683 x165 x289 x1297))))
(assert (=> (<= x850 10000) (= 0 (x687 x850))))
(assert (x760 x705))
(assert (= x1641 (=> (and (= x68 (x2365 (+ x753 32))) (= (x781 (- x1123 32)) x855) (= (>= 224 x855) x1916) (= x753 (x2365 (+ x639 x2220))) (= x672 (x2365 (+ x639 x2220))) (= x1123 (x781 (- x68 x2220)))) (and (=> (and (= (x773 x1805) x1545) (= (x2365 (+ 64 x2220)) x1301) (= (x241 x855 x2091 x2136) x1792) (= (x773 x704) x2414) (= x1914 (x2365 (+ 32 x2220))) (= x891 (x2365 (+ 64 x2220))) (= x1487 (x773 x2220)) (= (<= x1123 224) x1503) (= x468 (x773 x2220)) (= (x773 x1694) x312) (= (x773 x1097) x754) (= x1694 (x2365 (+ x2220 32))) (= (x1429 x855 x1487 x312 x1872 x1967) x1479) (= x1030 (x773 x891)) (= (x773 x2300) x457) (= (x810 x855 x468 x2278 x1030) x1413) (= x662 (x2365 (+ x2220 32))) (= x2091 (x773 x2220)) (= x1304 (x2365 (+ 32 x2220))) (= (x2365 (+ 96 x2220)) x1805) (= (x2365 (+ 32 x2220)) x2300) (= x2312 (x773 x876)) (= (x1993 0) x441) (= (x2365 (+ 128 x2220)) x943) (= x1026 (x773 x1066)) (= (x773 x2220) x1975) (= x876 (x2365 (+ x2220 64))) (= x1872 (x773 x1452)) (= (x2365 (+ 192 x2220)) x1373) (= x2167 (x2284 x855 x1193 x457 x359 x1545 x2414)) (= x1075 (x773 x775)) (= (x773 x2220) x564) (= (x2365 (+ 160 x2220)) x654) (= x704 (x2365 (+ 128 x2220))) (= (x773 x654) x671) (= (x773 x1914) x2278) (= (x773 x460) x201) (= x2118 (x773 x1359)) (= (x773 x2220) x1193) (= x1151 (x773 x2220)) (= x1452 (x2365 (+ x2220 64))) (= x764 (x2092 x855 x1975)) (= x20 (x2365 (+ x2220 64))) (= (x2365 (+ 128 x2220)) x1097) (= x546 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)) (= x460 (x2365 (+ x2220 32))) (= x1183 (x773 x662)) (= (ite (= x855 0) x441 (ite (<= x855 32) x764 (ite (>= 64 x855) x1792 (ite (<= x855 96) x1413 (ite (<= x855 128) x1479 (ite (>= 160 x855) x2167 (ite (>= 192 x855) x2027 (ite (<= x855 224) x546 x1456)))))))) x426) (= x359 (x773 x20)) (= x775 (x2365 (+ x2220 160))) (= x1066 (x2365 (+ 96 x2220))) (= x2136 (x773 x1304)) (= x2027 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075)) (= x446 (x773 x943)) (= (x773 x2283) x1967) (= (x773 x1301) x414) (= x2283 (x2365 (+ x2220 96))) (= x1359 (x2365 (+ x2220 96))) (= (x773 x1373) x435)) (and (=> (and (= (x2092 x1123 x1085) x513) (= x779 (x2284 x1123 x838 x1995 x393 x1971 x727)) (= (x2365 (+ x2220 32)) x1277) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2220)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x736) (= x736 1)) (= (x773 x2220) x1085) (= x1355 (x810 x1123 x574 x1820 x305)) (= (x773 x1540) x1995) (= x1315 (x342 x1498)) (= x1390 (x2365 (+ 32 x2220))) (= x1870 (x1993 0)) (= x1191 (x773 x900)) (= x1954 (x2365 (+ 32 x2220))) (<= x1353 18446744073709551615) (= (x773 x444) x706) (= (x773 x685) x2003) (= (x773 x2220) x574) (= (x241 64 x1808 19) x1498) (= (x2365 (+ x2220 96)) x1261) (= (x773 x559) x393) (= x902 (x773 x1277)) (= (x2365 (+ 64 x2220)) x1740) (not (= x2220 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= (x773 x2220) x2030) (= (x773 x2220) x817) (= x727 (x773 x2329)) (= (x773 x1483) x787) (= x1430 (x2365 (+ x2220 128))) (= x385 (x2365 (+ x2220 128))) (= x1897 (x436 1 x1315)) (<= x2220 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x626 (x2365 (+ 64 x2220))) (= x703 (x2365 (+ x2220 32))) (= x568 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706)) (= (x2365 (+ x2220 96)) x1483) (= x685 (x2365 (+ 64 x2220))) (= x2163 (x773 x2220)) (= x575 (x2365 (+ 64 x2220))) (= x736 (x781 (- x1897 (mod (ite (< x602 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x773 x385) x127) (= x417 18) (= x1820 (x773 x1965)) (= (x773 x1390) x1851) (= (< 31 x602) x1823) (= x2341 (x773 x1261)) (or (<= x1808 170141183460469231731687303715884105727) (<= 115792089237316195423570985008687907853099843482180094807725896704197245534208 x1808)) (= (x773 x703) x124) (= x2329 (x2365 (+ x2220 128))) (< x2220 x1430) (= (x773 x1954) x534) (= x620 (x773 x1740)) (= (x773 x2220) x838) (= (x241 x1123 x2163 x534) x2343) (= (x773 x575) x305) (= (x773 x1007) x1971) (= x2369 (x773 x1699)) (= x665 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707)) (= x1181 (x773 x626)) (= (x2365 (+ 96 x2220)) x1007) (= (x2365 (+ 192 x2220)) x1608) (= (x773 x1608) x707) (= x602 (ite (> x1897 0) x1913 (x436 127 x1913))) (= x798 (ite (= 0 x1123) x1870 (ite (<= x1123 32) x513 (ite (<= x1123 64) x2343 (ite (>= 96 x1123) x1355 (ite (<= x1123 128) x399 (ite (>= 160 x1123) x779 (ite (>= 192 x1123) x568 (ite (>= 224 x1123) x665 x2044))))))))) (= x1353 (x773 x2410)) (not (= x2220 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x559 (x2365 (+ 64 x2220))) (= (x2365 (+ x2220 128)) x1934) (= x1848 (x773 x2220)) (= (x2365 (+ 160 x2220)) x444) (= x1246 (x773 x1934)) (= (x2365 (+ x2220 32)) x1965) (= (x2365 (+ 160 x2220)) x900) (= (x62 x1315 2) x1913) (= (x2365 (+ x2220 32)) x1540) (<= x2220 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2220 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2365 (+ x2220 96)) x1699) (= x399 (x1429 x1123 x817 x124 x620 x2341))) (and (=> (not x1823) x208) (=> (and (and (= (x2092 32 x1498) x632) (= x363 (+ x632 x957)) (= (> x363 x881) x656) (= (+ x632 x2219) x510) (= (x62 (+ x602 31) 32) x957) (= (ite (< x1353 32) x632 x510) x881) (= x2219 (x62 (+ 31 x1353) 32))) x1823) (and (=> (not x656) x1542) (=> x656 x1696))))) x1503)) x1916))))
(assert (x760 x1659))
(assert (= x911 (x455 (x241 64 x911 17))))
(assert (=> (<= x2052 10000) (= (x687 x2052) 0)))
(assert (x760 x1538))
(assert (= (x43 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)) x547))
(assert (x760 x1930))
(assert (x760 x727))
(assert (= (x512 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918)) x1602))
(assert (= (x455 (x2092 32 x1093)) x1093))
(assert (= 19 (x43 (x241 64 x1863 19))))
(assert (=> (>= 10000 x135) (= (x687 x135) 0)))
(assert (x760 x36))
(assert (= x473 x1095))
(assert (x839 x1899 2))
(assert (x760 x2401))
(assert (x760 x2155))
(assert (= (and x656 x1311) x2018))
(assert (= (x687 (+ x1080 1)) (x687 x1080)))
(assert (< (x2092 x314 x2020) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1383))
(assert (= (x43 (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6)) 6))
(assert (x760 x2242))
(assert (x760 x2074))
(assert (x760 x2063))
(assert (= x200 x1377))
(assert (x148 x2319))
(assert (= x270 (x1309 (x241 x270 x337 x1185))))
(assert (= (and x1459 x29) x141))
(assert (= x204 (and (not x1980) x378)))
(assert (not (x2045 (x810 x998 x1924 x2245 x135))))
(assert (x1094 (+ x1382 31) 32))
(assert (x760 x1288))
(assert (= 64 (x1309 (x241 64 x190 x10))))
(assert (x760 x1168))
(assert (= (and x396 (not x209)) x912))
(assert (x760 x2282))
(assert (x760 x1621))
(assert (x760 x1254))
(assert (= x1060 (x512 (x810 x314 x1537 x156 x1060))))
(assert (= (and x403 x847) x1412))
(assert (=> (>= 10000 x2122) (= (x687 x2122) 0)))
(assert (x760 x664))
(assert (= x1075 (x955 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075))))
(assert (x128 x1315))
(assert (x760 x409))
(assert (= x1435 (x455 (x2092 32 x1435))))
(assert (< 10000 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)))
(assert (= (x43 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707)) x902))
(assert (x839 x1857 32))
(assert (x839 x1208 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1380) (= 0 (x687 x1380))))
(assert (x128 x1899))
(assert (= x1840 (and (not x39) x433)))
(assert (x839 x2239 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x556))
(assert (x760 x1363))
(assert (x2116 (- x2157 x514)))
(assert (= 0 (x687 29289127993025145568725129057828671567744754166070328588094505464281371246592)))
(assert (=> (<= x2003 10000) (= 0 (x687 x2003))))
(assert (x624 x2239))
(assert (= x1250 (x1309 (x1429 x1250 x905 x631 x1168 x1132))))
(assert (= (x43 (x241 64 x911 17)) 17))
(assert (> (x1993 0) 10000))
(assert (=> (<= x1164 10000) (= 0 (x687 x1164))))
(assert (= x894 (x455 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750))))
(assert (x489 x1796))
(assert (x2280 x1899))
(assert (x819 x2058))
(assert (= (or x1960 x1833) x261))
(assert (x760 x2316))
(assert (x760 x2236))
(assert (x760 x1011))
(assert (x1841 x514 x2157))
(assert (x760 x534))
(assert (= (x241 64 x251 x2204) (x687 (x241 64 x251 x2204))))
(assert (x760 x855))
(assert (not (x2045 (x241 64 x1863 19))))
(assert (x760 x784))
(assert (= (and x490 (not x1140)) x2352))
(assert (=> (<= x47 10000) (= (x687 x47) 0)))
(assert (x624 x1857))
(assert (x760 x874))
(assert (= x1114 x1658))
(assert (x760 x414))
(assert (x760 x1449))
(assert (=> (<= x289 10000) (= (x687 x289) 0)))
(assert (= (x43 (x241 64 x675 3)) 3))
(assert (= x702 (x572 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702))))
(assert (not (x2045 (x1429 x389 x1380 x745 x2141 x1642))))
(assert (x30 32 x1998))
(assert (< 10000 (x2092 32 x1093)))
(assert (x760 x1480))
(assert (= x2341 (x1879 (x1429 x1123 x817 x124 x620 x2341))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 32 x1093)))
(assert (= 3 (x43 (x241 64 x159 3))))
(assert (= (x687 (+ 1 x2066)) (x687 x2066)))
(assert (= (and x261 x1793) x1682))
(assert (= x1884 x669))
(assert (x760 x485))
(assert (x2116 (- x514 x1417)))
(assert (x760 x383))
(assert (=> (<= x1848 10000) (= 0 (x687 x1848))))
(assert (x1893 x2394))
(assert (x760 x899))
(assert (x760 x2354))
(assert (x1893 x812))
(assert (= x1132 (x1879 (x1429 x1250 x905 x631 x1168 x1132))))
(assert (x760 x1583))
(assert (x760 x336))
(assert (= (x455 (x2092 32 x915)) x915))
(assert (x760 x790))
(assert (= 0 (x687 114221746417031484496905892821793293822878436923706878644384133060206014517163)))
(assert (= x1401 (and x1115 (not x1422))))
(assert (x2280 x2178))
(assert (x760 x1849))
(assert (x760 x1842))
(assert (= x1405 (and x1618 x141)))
(assert (x760 x714))
(assert (x760 x1745))
(assert (= (=> (and (= x947 (ite (< 0 x2031) x1120 (x436 127 x1120))) (= (x781 (- x1927 x938)) x80) (= x1024 (x436 1 x2348)) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x366) x1081) (= (x2365 (+ x938 32)) x739) (= (x2365 (+ x1087 x1580)) x1328) (= x1927 (x2365 (+ x1087 x1081))) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x301) (= x301 1)) (= (x62 x2348 2) x1120) (= x366 (x2365 (+ 31 x1580))) (= x2031 (x436 1 x2348)) (= (x2365 (+ 32 x1927)) x1979) (= (= 0 x1024) x2153) (= x301 (x781 (- x2031 (mod (ite (> 32 x947) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (=> (and (not x2153) (and (= x1326 (x2092 32 4)) (= (> x947 0) x1292))) (and (=> x1292 x1626) (=> (and (= 0 x1160) (not x1292)) x1829))) (=> (and x2153 (and (= x1827 (x2365 (+ x1979 x1049))) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2348) x1212) (or (= x1049 0) (= 32 x1049)) (= x1803 x1827) (= (* 32 (ite (not (= x947 0)) 1 0)) x1049))) x1558))) x1471))
(assert (x760 x2186))
(assert (= (x687 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637)) (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637)))
(assert (= (and x2128 (not x2198)) x601))
(assert (x760 x287))
(assert (x760 x1616))
(assert (> (x2092 32 4) 10000))
(assert (= x1123 (x1309 (x1429 x1123 x817 x124 x620 x2341))))
(assert (x760 x681))
(assert (x1094 (+ 31 x769) 32))
(assert (x760 x868))
(assert (=> (<= x2279 10000) (= (x687 x2279) 0)))
(assert (=> (>= 10000 x1924) (= (x687 x1924) 0)))
(assert (x760 x1656))
(assert (= (x687 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706)) (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706)))
(assert (not (x2045 (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6))))
(assert (x760 x1386))
(assert (= (or x1171 x1677) x1751))
(assert (=> (>= 10000 x977) (= 0 (x687 x977))))
(assert (x489 x1581))
(assert (x2280 x2306))
(assert (= (x2092 32 x1963) (x687 (x2092 32 x1963))))
(assert (x760 x165))
(assert (= x1683 (x455 (x1429 x998 x1683 x165 x289 x1297))))
(assert (not (x2045 (x241 x1250 x833 x850))))
(assert (x760 x602))
(assert (x760 x516))
(assert (=> (<= x641 10000) (= (x687 x641) 0)))
(assert (x760 x422))
(assert (= (x43 (x1429 x1250 x905 x631 x1168 x1132)) x631))
(assert (x1893 x768))
(assert (x760 x2172))
(assert (= (x1309 (x810 x852 x1103 x2222 x2223)) x852))
(assert (=> (<= x899 10000) (= (x687 x899) 0)))
(assert (x839 x1074 2))
(assert (> (x2092 x1250 x113) 10000))
(assert (=> (<= x2341 10000) (= (x687 x2341) 0)))
(assert (x760 x1389))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2284 x1250 x2279 x2048 x2180 x869 x1767)))
(assert (x760 x958))
(assert (x760 x1563))
(assert (x760 x113))
(assert (x296 x514 x2157 x2157 x1417))
(assert (x2045 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x760 x61))
(assert (x760 x1197))
(assert (=> (>= 10000 x1440) (= (x687 x1440) 0)))
(assert (= x1842 (x43 (x241 x314 x383 x1842))))
(assert (= (and x141 (not x1618)) x1428))
(assert (x760 x1424))
(assert (=> (>= 10000 x1130) (= 0 (x687 x1130))))
(assert (= (x687 (x810 x314 x1537 x156 x1060)) (x810 x314 x1537 x156 x1060)))
(assert (x760 x1620))
(assert (=> (<= x648 10000) (= (x687 x648) 0)))
(assert (not (x2045 (x2284 x855 x1193 x457 x359 x1545 x2414))))
(assert (x839 x2098 32))
(assert (= (x49 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)) x927))
(assert (x760 x998))
(assert (x2045 115792089237316195423570985008687907853099843482180094807725896704197245534208))
(assert (x760 x1447))
(assert (x2280 x1074))
(assert (=> (<= x104 10000) (= (x687 x104) 0)))
(assert (x1841 x1417 (- x2157 x514)))
(assert (x760 x2049))
(assert (=> (<= x887 10000) (= (x687 x887) 0)))
(assert (x760 x1949))
(assert (x760 x2022))
(assert (x839 x1120 128))
(assert (x760 x449))
(assert (x1094 (+ x2178 31) 32))
(assert (= x1845 (and x463 (not x2249))))
(assert (x760 x1937))
(assert (< 10000 (x2092 32 x1963)))
(assert (> (x2092 x855 x1975) 10000))
(assert (= (x455 (x241 64 x1863 19)) x1863))
(assert (x760 x170))
(assert (x760 x861))
(assert (x760 x1791))
(assert (= (or x1854 x1071) x16))
(assert (= (x455 (x2092 x1250 x113)) x113))
(assert (= x600 (and x1198 x689)))
(assert (x760 x625))
(assert (x2045 10894474682274239493831243662817379401261526446360622092269559273883068006400))
(assert (=> (<= x817 10000) (= (x687 x817) 0)))
(assert (x760 x891))
(assert (x760 x2393))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 64 x911 17)))
(assert (x1893 x1684))
(assert (x327 x2237))
(assert (= x2010 (x43 (x241 x852 x1955 x2010))))
(assert (= (x687 (x2092 32 x1892)) (x2092 32 x1892)))
(assert (=> (<= x156 10000) (= 0 (x687 x156))))
(assert (x1661 x13 x812))
(assert (x760 x574))
(assert (x760 x698))
(assert (x760 x2178))
(assert (x760 x834))
(assert (x760 x1291))
(assert (not (x2045 (x810 x852 x1103 x2222 x2223))))
(assert (= (x2284 x998 x2304 x977 x1931 x1941 x887) (x687 (x2284 x998 x2304 x977 x1931 x1941 x887))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1993 0)))
(assert (=> (>= 10000 x1381) (= (x687 x1381) 0)))
(assert (x327 (+ x2158 31)))
(assert (=> (<= x1851 10000) (= 0 (x687 x1851))))
(assert (x2116 256))
(assert (x760 x1013))
(assert (x760 x247))
(assert (= x286 (and x565 x1335)))
(assert (x760 x1250))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1429 x389 x1380 x745 x2141 x1642)))
(assert (= x1002 (x455 (x2092 32 x1002))))
(assert (x760 x702))
(assert (x760 x227))
(assert (x760 x1971))
(assert (= (or x937 x1551) x1434))
(assert (x760 x1132))
(assert (x1893 x1796))
(assert (= (x2092 32 x2066) (x687 (x2092 32 x2066))))
(assert (=> (<= x337 10000) (= 0 (x687 x337))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 64 x2393 17)))
(assert (= x1911 (=> (= (not (> x1898 128)) x1157) (and x1157 x1079))))
(assert (x839 x2348 256))
(assert (=> (>= 10000 x2375) (= 0 (x687 x2375))))
(assert (= (and x1089 x2330) x1118))
(assert (x327 (+ x1147 31)))
(assert (x327 (x1617 2 x1011)))
(assert (= x2137 (and x1204 x1218)))
(assert (x760 x826))
(assert (=> (>= 10000 x998) (= 0 (x687 x998))))
(assert (= 32 (x1309 (x2092 32 x1002))))
(assert (=> (<= x1575 10000) (= (x687 x1575) 0)))
(assert (= (or x1142 (and x1682 (not x1192))) x100))
(assert (x760 x2394))
(assert (= x396 (and x1506 (not x220))))
(assert (= (x1309 (x241 64 x251 x2204)) 64))
(assert (= (or x1567 x14) x1459))
(assert (x760 x813))
(assert (x760 x2213))
(assert (= (x43 (x810 x852 x1103 x2222 x2223)) x2222))
(assert (x327 2))
(assert (x760 x1263))
(assert (x760 x549))
(assert (= x1135 (and (not x1773) x346)))
(assert (= x22 (or x525 x2327)))
(assert (x760 x800))
(assert (x760 x203))
(assert (x1893 x1449))
(assert (= (x455 (x241 x1250 x833 x850)) x833))
(assert (x760 x728))
(assert (= (x687 (x241 64 x2393 17)) (x241 64 x2393 17)))
(assert (=> (>= 10000 x1207) (= (x687 x1207) 0)))
(assert (=> (>= 10000 x1442) (= 0 (x687 x1442))))
(assert (= (and x1614 x1378) x256))
(assert (=> (<= x1817 10000) (= (x687 x1817) 0)))
(assert (x2045 114221746417031484496905892821793293822878436923706878644384133060206014517163))
(assert (= x1071 (and (not x621) x984)))
(assert (x327 x686))
(assert (= x480 x1992))
(assert (x760 x2237))
(assert (= (x810 x852 x1103 x2222 x2223) (x687 (x810 x852 x1103 x2222 x2223))))
(assert (= (x687 (+ 1 x2261)) (x687 x2261)))
(assert (= (x241 x314 x383 x1842) (x687 (x241 x314 x383 x1842))))
(assert (= (and x1412 x1856) x538))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 x1250 x113)))
(assert (x1094 (+ 31 x2404) 32))
(assert (x30 8 x2178))
(assert (x760 x1286))
(assert (x760 x1913))
(assert (= x271 (x49 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907))))
(assert (x327 (+ 31 x963)))
(assert (x1893 x1746))
(assert (x760 x402))
(assert (< 10000 (x2092 x314 x2020)))
(assert (= (or x2264 x676) x1198))
(assert (x760 x1183))
(assert (x30 2 x2178))
(assert (x327 x1530))
(assert (=> (<= x2141 10000) (= (x687 x2141) 0)))
(assert (= (x455 (x810 x855 x468 x2278 x1030)) x468))
(assert (x489 x1058))
(assert (x760 x2097))
(assert (x760 x223))
(assert (=> (>= 10000 x2173) (= 0 (x687 x2173))))
(assert (x30 2 x1353))
(assert (x760 x620))
(assert (x1893 x788))
(assert (= (x455 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)) x1670))
(assert (x2280 x1120))
(assert (x1094 (+ 31 x602) 32))
(assert (= (x455 (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)) 114221746417031484496905892821793293822878436923706878644384133060206014517163))
(assert (x760 x1531))
(assert (x327 x1899))
(assert (= (x687 170141183460469231731687303715884105726) 0))
(assert (x2116 x576))
(assert (= (x43 (x2284 x1250 x2279 x2048 x2180 x869 x1767)) x2048))
(assert (x489 x325))
(assert (x760 x1269))
(assert (not (x2045 (x241 x855 x2091 x2136))))
(assert (x2116 (ite (not (= x947 0)) 1 0)))
(assert (= x159 (x455 (x241 64 x159 3))))
(assert (= 0 (x687 18446744073709551615)))
(assert (= (and x16 x2129) x1473))
(assert (= x979 (=> (and (= x1321 (not (< 32 x2096))) (= (x1715 x579) x2097)) (and x1321 (=> (= 32 x864) x533)))))
(assert (x760 x1261))
(assert (x760 x425))
(assert (= (x2360 x998 x1573 x644 x93 x580 x1745 x1722) (x687 (x2360 x998 x1573 x644 x93 x580 x1745 x1722))))
(assert (= x1465 (and x941 x1229)))
(assert (x760 x1584))
(assert (> (x660 x855 x1151 x201 x414 x1026 x754 x671 x435) 10000))
(assert (x760 x1487))
(assert (not (x2045 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702))))
(assert (x760 x1066))
(assert (x128 x162))
(assert (=> (<= x945 10000) (= (x687 x945) 0)))
(assert (= x532 (and (not x1999) x506)))
(assert (x760 x530))
(assert (x760 x1939))
(assert (x760 x1223))
(assert (x760 x678))
(assert (=> (>= 10000 x2337) (= 0 (x687 x2337))))
(assert (x30 256 x1113))
(assert (= (or x1528 x2314) x1982))
(assert (x327 (+ 31 x1382)))
(assert (x760 x1313))
(assert (= (x687 x121) (x687 (+ x121 1))))
(assert (x760 x1458))
(assert (= (x687 x2248) (x687 (+ 1 x2248))))
(assert (< 10000 (x2284 x270 x794 x298 x329 x560 x1389)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x810 x389 x1531 x1702 x899)))
(assert (= x648 (x43 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918))))
(assert (=> (>= 10000 x1561) (= (x687 x1561) 0)))
(assert (= (=> (and (= x2134 (x2365 (+ x2265 32))) (= x1378 (> x1219 0)) (= x1219 (x623 x2265))) (and (=> (and x1378 (and (= (x623 x2134) x657) (= (< 32 x1219) x896))) (and (=> (not x896) x587) (=> (and x896 (and (= x530 (x2365 (+ 32 x2134))) (= x1230 (x2365 (+ 32 x570))) (= x577 (> x1219 64)) (= x981 (x432 x530)))) (and (=> (and (and (= (x2365 (+ 64 x570)) x755) (= x841 (x2365 (+ 64 x2134))) (= x85 (x21 x841)) (= (< 96 x1219) x1229)) x577) (and (=> (not x1229) x587) (=> x1229 x2234))) (=> (not x577) x587))))) (=> (not x1378) x587))) x1956))
(assert (x760 x1936))
(assert (not (x2045 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207))))
(assert (x760 x2299))
(assert (= x2235 (or x1940 x553)))
(assert (x1094 x162 2))
(assert (x327 (+ 31 x2178)))
(assert (x760 x770))
(assert (x760 x671))
(assert (x760 x686))
(assert (x760 x2233))
(assert (= (x687 (+ x632 x2219)) (x687 x632)))
(assert (x760 x2298))
(assert (x1893 x616))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 x852 x1955 x2010)))
(assert (not (x2045 (x2284 x314 x471 x2257 x336 x1534 x1366))))
(assert (x760 x1331))
(assert (= x1284 (x455 (x241 x389 x1284 x1704))))
(assert (=> (<= x1797 10000) (= 0 (x687 x1797))))
(assert (x760 x417))
(assert (x760 x1882))
(assert (x760 x1075))
(assert (x839 x1796 128))
(assert (= x1072 (or x1401 x1638 x1402 x478 x1929)))
(assert (x760 x2050))
(assert (x2280 x1796))
(assert (x819 x1644))
(assert (> (x241 64 x911 17) 10000))
(assert (= x2313 (x1879 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461))))
(assert (x760 x745))
(assert (= (or x2175 x1653 x2146) x605))
(assert (not (x2045 (x241 x314 x383 x1842))))
(assert (= (x43 (x810 x389 x1531 x1702 x899)) x1702))
(assert (= (and x1711 x2302) x299))
(assert (< 10000 (x241 64 x251 x2204)))
(assert (x760 x2173))
(assert (x760 x2232))
(assert (= x206 (or x1844 x2131)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2284 x1123 x838 x1995 x393 x1971 x727)))
(assert (x760 x2355))
(assert (= (or x882 x2288 x2224 x2071 x1155) x719))
(assert (x760 x2151))
(assert (x760 x2321))
(assert (x760 x1805))
(assert (x760 x1442))
(assert (x760 x924))
(assert (= (x955 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)) x1907))
(assert (x760 x2196))
(assert (= (x455 (x2092 32 x2066)) x2066))
(assert (x760 x1785))
(assert (not (x2045 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435))))
(assert (=> (<= x1637 10000) (= 0 (x687 x1637))))
(assert (not (x2045 (x2092 32 x1892))))
(assert (x760 x2346))
(assert (x760 x1946))
(assert (x760 x650))
(assert (x760 x1681))
(assert (x760 x922))
(assert (x1094 x351 256))
(assert (x760 x1704))
(assert (x760 x598))
(assert (= (x49 (x2284 x855 x1193 x457 x359 x1545 x2414)) x2414))
(assert (x327 (x1617 2 x1117)))
(assert (= x1511 (and (not x1349) x169)))
(assert (x760 x2078))
(assert (= x1079 false))
(assert (= x855 (x1309 (x1429 x855 x1487 x312 x1872 x1967))))
(assert (= x1330 (and x494 x2377)))
(assert (x128 x788))
(assert (x760 x1725))
(assert (not (x2045 (x1429 x1123 x817 x124 x620 x2341))))
(assert (=> (<= x2078 10000) (= (x687 x2078) 0)))
(assert (x760 x161))
(assert (x760 x1216))
(assert (x760 x2252))
(assert (x760 x79))
(assert (x760 x2103))
(assert (x327 x452))
(assert (=> (>= 10000 x133) (= 0 (x687 x133))))
(assert (= (x687 x722) (x687 (+ x722 x2110))))
(assert (= (x455 (x2092 x998 x1681)) x1681))
(assert (x760 x2318))
(assert (x760 x734))
(assert (=> (<= x534 10000) (= 0 (x687 x534))))
(assert (x760 x1920))
(assert (=> (>= 10000 x969) (= 0 (x687 x969))))
(assert (x760 x2347))
(assert (x327 (x1617 2 x1727)))
(assert (x760 x1177))
(assert (x489 x861))
(assert (x760 x2048))
(assert (x760 x1786))
(assert (= (x1309 (x1429 x270 x1747 x2339 x653 x1164)) x270))
(assert (= (x49 (x2284 x852 x1639 x728 x789 x1223 x205)) x205))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x810 x314 x1537 x156 x1060)))
(assert (x2045 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (x327 1000000))
(assert (=> (>= 10000 x520) (= 0 (x687 x520))))
(assert (= x1888 x2383))
(assert (= (x1309 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)) x314))
(assert (x760 x519))
(assert (= (or x1512 x2227) x506))
(assert (= x2180 (x512 (x2284 x1250 x2279 x2048 x2180 x869 x1767))))
(assert (= x1380 (x455 (x1429 x389 x1380 x745 x2141 x1642))))
(assert (= x500 (=> (and (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1372) (= x1372 1)) (= (x509 x1963) x162) (= (+ x1853 1) x1963) (= x2016 (ite (< 0 x2041) x616 (x436 127 x616))) (= (x436 1 x162) x2041) (= (x62 x162 2) x616) (= x1372 (x781 (- x2041 (mod (ite (> 32 x2016) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (> x2016 31) x689)) (and (=> (not x689) x2383) (=> (and x689 (and (= (+ x1997 x61) x2006) (= (x62 (+ x2016 31) 32) x61) (= x1997 (x2092 32 x1963)) (= (< x1997 x2006) x595))) (and (=> (not x595) x1888) (=> x595 x853)))))))
(assert (= (x1879 (x2284 x998 x2304 x977 x1931 x1941 x887)) x1941))
(assert (= x809 (and x1118 x1813)))
(assert (x760 x371))
(assert (< 10000 (x2092 32 x915)))
(assert (x760 x423))
(assert (x819 x1012))
(assert (x760 x1266))
(assert (x839 x2306 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x241 64 x159 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x56 10000) (= 0 (x687 x56))))
(assert (x760 x1039))
(assert (x760 x767))
(assert (not (x2045 (x810 x855 x468 x2278 x1030))))
(assert (x760 x173))
(assert (x760 x1179))
(assert (=> (<= x1704 10000) (= 0 (x687 x1704))))
(assert (= x1260 x761))
(assert (x327 (+ 31 x549)))
(assert (x760 x1138))
(assert (x760 x301))
(assert (x760 x333))
(assert (x760 x2197))
(assert (= (and (not x266) x115) x1255))
(assert (not (x2045 (x2092 32 4))))
(assert (= x562 (=> (and (= (+ 1 x1611) x1257) (= (not (> x107 x1257)) x362)) (and x362 x1739))))
(assert (x760 x177))
(assert (= (x43 (x241 64 x1808 19)) 19))
(assert (= 0 (x687 170141183460469231731687303715884105727)))
(assert (x760 x1120))
(assert (< 10000 (x2092 x998 x1681)))
(assert (= (and x1434 (not x540)) x1171))
(assert (x760 x1289))
(assert (= (x455 (x810 x1250 x1802 x857 x1816)) x1802))
(assert (x760 x1530))
(assert (= (or x2390 x307) x1896))
(assert (= x1660 (x512 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907))))
(assert (= x711 x1772))
(assert (x760 x1054))
(assert (not (x2045 (x2284 x998 x2304 x977 x1931 x1941 x887))))
(assert (= x997 (and x40 (not x1303))))
(assert (x1094 x452 2))
(assert (not (x2045 (x241 x1123 x2163 x534))))
(assert (x1094 x788 2))
(assert (x760 x2268))
(assert (= x2144 (and x1764 x886)))
(assert (= (x687 (+ x720 x649)) (x687 x720)))
(assert (=> (<= x393 10000) (= 0 (x687 x393))))
(assert (x760 x351))
(assert (x760 x255))
(assert (x760 x654))
(assert (x760 x2020))
(assert (x760 x795))
(assert (x760 x1994))
(assert (= x2077 (=> (and (or (and (and (= x1296 (x2365 (+ x1341 x2265))) (= (x436 x492 x58) x691) (= (* 8 x576) x1525) (= x58 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1525))) (= (x436 31 x1336) x576) (= (x2190 x1296) x492)) x2129) (not x2129)) (= (< x2258 x1336) x2129)) x747)))
(assert (x760 x1627))
(assert (x760 x754))
(assert (x1893 x1020))
(assert (x839 x2178 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1050))
(assert (x760 x1519))
(assert (= x251 (x455 (x241 64 x251 x1619))))
(assert (x760 x1974))
(assert (x760 x894))
(assert (= (x43 (x241 x855 x2091 x2136)) x2136))
(assert (x30 32 (ite (not (= 0 x2096)) 1 0)))
(assert (= x1573 (x455 (x2360 x998 x1573 x644 x93 x580 x1745 x1722))))
(assert (= (x512 (x2360 x852 x543 x2188 x862 x2315 x1104 x423)) x862))
(assert (x760 x71))
(assert (x760 x234))
(assert (= x887 (x49 (x2284 x998 x2304 x977 x1931 x1941 x887))))
(assert (x760 x270))
(assert (x1893 x1899))
(assert (x760 x2283))
(assert (x760 x675))
(assert (x760 x447))
(assert (= x1264 (or x153 x1347)))
(assert (= (x687 (x1993 0)) (x1993 0)))
(assert (x2116 x2098))
(assert (= x1614 (or x1973 x1908)))
(assert (=> (>= 10000 x1250) (= 0 (x687 x1250))))
(assert (x760 x576))
(assert (= x403 (or x805 x1988)))
(assert (x760 x2023))
(assert (x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1088)))
(assert (x760 x628))
(assert (= x996 (and x946 x1332)))
(assert (x760 x2320))
(assert (x760 x1500))
(assert (x2280 256))
(assert (x760 x28))
(assert (x760 x1559))
(assert (= x587 (=> (and (= (<= x852 224) x622) (= (x2365 (+ 32 x978)) x828) (= (x781 (- x1250 32)) x852) (= x978 (x2365 (+ x570 x1219))) (= (x781 (- x828 x570)) x1250) (= (x2365 (+ x570 x1219)) x2292)) (and (=> (and (= (x2365 (+ 160 x570)) x285) (= (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750) x606) (= (x2190 x2347) x2010) (= (x2190 x1930) x862) (= (x2365 (+ x570 64)) x2103) (= (x2365 (+ x570 96)) x222) (= (x2190 x1679) x6) (= x903 (x1993 0)) (= x1048 (x2365 (+ x570 64))) (= (x2365 (+ x570 96)) x1679) (= (x2190 x2202) x750) (= x36 (x2190 x878)) (= x2315 (x2190 x222)) (= (x2190 x1172) x2323) (= (x2190 x570) x894) (= x1605 (x2365 (+ 128 x570))) (= (x2190 x570) x1103) (= (x2365 (+ 32 x570)) x2191) (= (x2190 x2103) x789) (= x2328 (x241 x852 x1955 x2010)) (= x1561 (x2190 x570)) (= (x2365 (+ x570 32)) x1912) (= (x2190 x1605) x1104) (= (x2365 (+ 160 x570)) x177) (= x586 (x2092 x852 x1128)) (= (x2365 (+ x570 32)) x2047) (= x81 (x2365 (+ 64 x570))) (= x728 (x2190 x2191)) (= x1340 (x2365 (+ x570 96))) (= (x2365 (+ 192 x570)) x2202) (= (x2190 x1912) x2222) (= (x2190 x570) x543) (= x290 (x2284 x852 x1639 x728 x789 x1223 x205)) (= (x2365 (+ x570 32)) x878) (= (x2190 x1221) x205) (= (x2190 x570) x1639) (= x991 (x1429 x852 x1561 x2323 x566 x6)) (= x1128 (x2190 x570)) (= x827 (ite (= 0 x852) x903 (ite (<= x852 32) x586 (ite (>= 64 x852) x2328 (ite (<= x852 96) x677 (ite (<= x852 128) x991 (ite (<= x852 160) x290 (ite (>= 192 x852) x1477 (ite (>= 224 x852) x606 x1153))))))))) (= x1491 (x2190 x177)) (= x2188 (x2190 x2047)) (= (x2190 x2155) x2223) (= (x2365 (+ x570 128)) x1221) (= x2155 (x2365 (+ 64 x570))) (= (x2190 x570) x1955) (= (x2190 x2083) x1223) (= (x2190 x285) x423) (= x1477 (x2360 x852 x543 x2188 x862 x2315 x1104 x423)) (= (x2190 x1048) x56) (= x11 (>= 224 x1250)) (= (x2365 (+ 128 x570)) x2197) (= x2347 (x2365 (+ 32 x570))) (= x566 (x2190 x81)) (= (x2190 x1340) x2122) (= (x2190 x2197) x1424) (= (x2365 (+ x570 64)) x1930) (= x1172 (x2365 (+ 32 x570))) (= x2083 (x2365 (+ 96 x570))) (= (x810 x852 x1103 x2222 x2223) x677)) (and (=> (and (<= x570 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 18446744073709551615 x1336) (= x2048 (x2190 x874)) (= x2104 (x2365 (+ x570 64))) (not (= x570 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x724 (x2365 (+ 128 x570))) (not (= x570 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (<= x570 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 18 x2159) (= x1767 (x2190 x195)) (= (x2190 x863) x869) (= (x2190 x2099) x850) (= x1168 (x2190 x2104)) (= x1802 (x2190 x570)) (= x2182 (x2190 x2156)) (= x133 (x2190 x380)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x570)) (= x1147 (ite (< 0 x269) x1581 (x436 127 x1581))) (= (x1665 x1432) x1074) (= (x2365 (+ x570 128)) x2294) (= x1957 (x2190 x2294)) (= (x2360 x1250 x931 x648 x1602 x641 x1957 x1918) x889) (= (ite (= x1250 0) x1771 (ite (>= 32 x1250) x661 (ite (>= 64 x1250) x696 (ite (<= x1250 96) x353 (ite (>= 128 x1250) x70 (ite (>= 160 x1250) x1950 (ite (>= 192 x1250) x889 (ite (>= 224 x1250) x1588 x673)))))))) x2241) (= x2216 (x2190 x1939)) (<= x570 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x630 (x2365 (+ x570 96))) (= x2002 (x2190 x1288)) (= (x2365 (+ x570 32)) x2099) (or (= x2408 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2408)) (= (x2190 x570) x113) (= x696 (x241 x1250 x833 x850)) (= x2180 (x2190 x1635)) (= (x2190 x1529) x2313) (= x1987 (x2365 (+ x570 192))) (= x1743 (x2190 x570)) (= x1336 (x2190 x2265)) (= x857 (x2190 x249)) (< x570 x724) (= (x1429 x1250 x905 x631 x1168 x1132) x70) (= x1918 (x2190 x2274)) (= (x241 64 x1863 19) x1432) (= (x2190 x570) x905) (= (x2190 x570) x931) (= x1950 (x2284 x1250 x2279 x2048 x2180 x869 x1767)) (= x631 (x2190 x519)) (= (x2365 (+ 128 x570)) x1939) (= x2274 (x2365 (+ x570 160))) (= (x2365 (+ 96 x570)) x1529) (= (x2365 (+ 32 x570)) x519) (= (x2365 (+ x570 32)) x249) (= x2279 (x2190 x570)) (= (x2365 (+ 128 x570)) x195) (= (x2190 x2307) x641) (= (x781 (- x269 (mod (ite (< x1147 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2408) (= x833 (x2190 x570)) (= (x2365 (+ x570 64)) x1031) (= (x2365 (+ 96 x570)) x863) (= x164 (x2365 (+ 64 x570))) (= (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461) x1588) (= (> x1147 31) x243) (= (x2190 x2299) x648) (= (x1993 0) x1771) (= x2299 (x2365 (+ 32 x570))) (= (x436 1 x1074) x269) (= (x2190 x164) x1602) (= (x62 x1074 2) x1581) (= (x2092 x1250 x113) x661) (= (x2365 (+ 64 x570)) x1635) (= (x2190 x1031) x1816) (= x2156 (x2365 (+ x570 160))) (= (x2365 (+ x570 32)) x874) (= (x2190 x1987) x1461) (= x1132 (x2190 x630)) (= x353 (x810 x1250 x1802 x857 x1816)) (= x380 (x2365 (+ 32 x570))) (= x2307 (x2365 (+ x570 96))) (= (x2365 (+ x570 64)) x1288)) (and (=> (and x243 (and (= x1335 (> x615 x168)) (= x649 (x62 (+ x1147 31) 32)) (= x720 (x2092 32 x1432)) (= (x62 (+ x1336 31) 32) x1936) (= (+ x1936 x720) x1357) (= x168 (ite (< x1336 32) x720 x1357)) (= x615 (+ x649 x720)))) (and (=> (not x1335) x2212) (=> x1335 x1196))) (=> (not x243) x1139))) x11)) x622))))
(assert (x760 x3))
(assert (x760 x2397))
(assert (x839 x1913 128))
(assert (x760 x2047))
(assert (x760 x807))
(assert (x760 x1226))
(assert (x760 x391))
(assert (x760 x1087))
(assert (x2280 x1208))
(assert (x760 x1964))
(assert (x1919 x2157 x514 x1417 x2157))
(assert (= (x687 (x2284 x852 x1639 x728 x789 x1223 x205)) (x2284 x852 x1639 x728 x789 x1223 x205)))
(assert (= x370 (and (not x1365) x499)))
(assert (= x553 (and (not x2240) x646)))
(assert (= true x2053))
(assert (x760 x140))
(assert (x760 x190))
(assert (x1661 x492 x58))
(assert (x760 x787))
(assert (= (and x2187 x1175) x1000))
(assert (x760 x2296))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 64 x1808 19)))
(assert (x760 x1698))
(assert (=> (>= 10000 x1297) (= (x687 x1297) 0)))
(assert (= (x1309 (x241 x855 x2091 x2136)) x855))
(assert (= (x687 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x810 x1250 x1802 x857 x1816)))
(assert (x2280 x1746))
(assert (< 10000 (x1429 x1250 x905 x631 x1168 x1132)))
(assert (x327 (+ x1592 31)))
(assert (= (x512 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461)) x2002))
(assert (x1893 31))
(assert (= (or x822 x522) x2175))
(assert (= (x1309 (x2092 32 x1853)) 32))
(assert (=> (<= x314 10000) (= 0 (x687 x314))))
(assert (x327 x161))
(assert (x760 x825))
(assert (=> (>= 10000 x1681) (= 0 (x687 x1681))))
(assert (not (x2045 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620))))
(assert (< 10000 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637)))
(assert (=> (>= 10000 x165) (= (x687 x165) 0)))
(assert (x760 x2208))
(assert (x760 x2159))
(assert (x1760 x1728))
(assert (= (x687 x1437) (x687 (+ 1 x1437))))
(assert (= (x1309 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)) x389))
(assert (< 10000 (x2092 x270 x1849)))
(assert (x760 x269))
(assert (x760 x1603))
(assert (x760 x1905))
(assert (> (x2092 x389 x1687) 10000))
(assert (x760 x174))
(assert (= (and (not x1691) x605) x1787))
(assert (= x1450 (x43 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440))))
(assert (not (x2045 (x2092 32 x1963))))
(assert (= (x512 (x1429 x852 x1561 x2323 x566 x6)) x566))
(assert (x760 x1679))
(assert (=> (>= 10000 x902) (= 0 (x687 x902))))
(assert (= (x455 (x2092 32 x1498)) x1498))
(assert (x760 x1307))
(assert (x760 x345))
(assert (= (=> (and (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2268) x812) (= (x436 x13 x812) x1144) (= x1011 (* 8 x1353)) (= x1644 (* 2 x1353)) (= x1712 (ite (>= 1 x1144) x2381 (x1493 x1144 x1644))) (= x2381 (x2365 (+ x1144 x1644))) (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1011) x2268) (<= 1 x2268)) x90) x328))
(assert (= (and x983 x1859) x456))
(assert (= x433 (and x83 x1405)))
(assert (x760 x2385))
(assert (x760 x1304))
(assert (x760 x1193))
(assert (= x1155 (and (not x2162) x2386)))
(assert (x760 x2307))
(assert (=> (<= x1816 10000) (= 0 (x687 x1816))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 32 x1498)))
(assert (= x135 (x512 (x810 x998 x1924 x2245 x135))))
(assert (not (x2045 (x2360 x998 x1573 x644 x93 x580 x1745 x1722))))
(assert (x760 x1219))
(assert (=> (<= x1642 10000) (= (x687 x1642) 0)))
(assert (x760 x2379))
(assert (= (and x1765 x1374) x821))
(assert (x760 x205))
(assert (= x1337 (and (not x150) x246)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1429 x1250 x905 x631 x1168 x1132)))
(assert (x760 x2061))
(assert (= (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1) (x687 (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1))))
(assert (=> (<= x1424 10000) (= 0 (x687 x1424))))
(assert (=> (<= x2196 10000) (= (x687 x2196) 0)))
(assert (= (x687 (+ x695 1)) (x687 x695)))
(assert (= (x49 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706)) x127))
(assert (x760 x303))
(assert (x760 x1359))
(assert (x760 x1925))
(assert (x760 x2112))
(assert (x760 x2091))
(assert (not (x2045 (x241 64 x159 3))))
(assert (= (and (not x1774) x1436) x1528))
(assert (x760 x570))
(assert (x760 x285))
(assert (= x1657 (and x152 x1438)))
(assert (x760 x1020))
(assert (= (=> (and (= (x2365 (+ x1964 32)) x464) (= x369 (x2190 x464)) (= (not (< 32 x518)) x388) (= x1819 (+ x481 1))) (and (=> (and (= x2060 x1819) (= x1214 64)) x1932) x388)) x1548))
(assert (= x1115 (and x1068 x2405)))
(assert (x760 x2075))
(assert (= x517 (x43 (x1429 x314 x1806 x517 x2298 x567))))
(assert (x839 x616 128))
(assert (= (x43 (x241 64 x251 x1619)) x1619))
(assert (x760 x1803))
(assert (= x337 (x455 (x241 x270 x337 x1185))))
(assert (= (x455 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)) x1151))
(assert (x760 x125))
(assert (x760 x964))
(assert (= (x687 (x2092 x855 x1975)) (x2092 x855 x1975)))
(assert (= x1626 (=> (and (= (not (< 32 x947)) x1268) (= (x1715 x1326) x1096)) (and (=> (= 32 x1160) x1829) x1268))))
(assert (x760 x567))
(assert (x760 x1482))
(assert (= 0 (x687 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (> (x2092 32 x1853) 10000))
(assert (x327 (+ 31 x2098)))
(assert (= (x43 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637)) x520))
(assert (x760 x434))
(assert (= (x455 (x241 64 x1808 19)) x1808))
(assert (x760 x836))
(assert (= x1191 (x955 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707))))
(assert (= x2204 (x43 (x241 64 x251 x2204))))
(assert (not (x2045 (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1))))
(assert (x760 x435))
(assert (= (x512 (x1429 x1123 x817 x124 x620 x2341)) x620))
(assert (= (x687 115792089237316195423570985008687907853269984665640564039457584007913129639808) 0))
(assert (x760 x2139))
(assert (not (x2045 (x2092 32 x1437))))
(assert (x760 x80))
(assert (= x1185 (x43 (x241 x270 x337 x1185))))
(assert (=> (<= x1491 10000) (= 0 (x687 x1491))))
(assert (x760 x1631))
(assert (= (ite (< x1117 256) (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1117)) 0) (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1117)))
(assert (x760 x2217))
(assert (= x480 (=> (= x2036 (= (ite (< 31 x2178) 1 0) 1)) (and (=> (and x2036 (and (= x481 (x2092 32 x1892)) (= (< 0 x518) x1962) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2178) x518))) (and (=> (and (not x1962) (and (= 32 x1214) (= x481 x2060))) x1932) (=> x1962 x1548))) (=> (and (not x2036) (and (= x266 (= 0 x2178)) (or (and (= 0 x2367) x266) (and (not x266) (and (= x2367 x1754) (= x1754 (x2190 x2000)) (= x2000 (x2365 (+ x1964 32)))))))) x951)))))
(assert (x760 x1629))
(assert (x30 8 x1336))
(assert (x624 x2098))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1429 x998 x1683 x165 x289 x1297)))
(assert (=> (>= 10000 x1169) (= 0 (x687 x1169))))
(assert (> (x2092 x852 x1128) 10000))
(assert (=> (<= x2112 10000) (= (x687 x2112) 0)))
(assert (x760 x1541))
(assert (> (x241 64 x1808 19) 10000))
(assert (x760 x314))
(assert (x489 x2213))
(assert (x1841 x2157 (- x1417 x2157)))
(assert (= (and x256 (not x896)) x2068))
(assert (=> (>= 10000 x855) (= (x687 x855) 0)))
(assert (x1893 x790))
(assert (x760 x2331))
(assert (=> (>= 10000 x675) (= (x687 x675) 0)))
(assert (= (and x831 x299) x966))
(assert (x327 x766))
(assert (x327 x1363))
(assert (< 10000 (x241 x1123 x2163 x534)))
(assert (x624 x2306))
(assert (not (x2045 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707))))
(assert (< (x241 x1123 x2163 x534) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2278 (x43 (x810 x855 x468 x2278 x1030))))
(assert (x760 x1912))
(assert (not (x2045 (x241 64 x251 x1619))))
(assert (x760 x1809))
(assert (x760 x366))
(assert (x760 x988))
(assert (= (=> (and (= x1692 (x2365 (+ 32 x2410))) (= x87 (not (< 32 x1885))) (= (x773 x1692) x1245) (= (+ x344 1) x652)) (and (=> (and (= x1741 x652) (= x1516 64)) x278) x87)) x583))
(assert (= (x687 (x2284 x270 x794 x298 x329 x560 x1389)) (x2284 x270 x794 x298 x329 x560 x1389)))
(assert (x760 x2002))
(assert (= (x687 (x2092 x314 x2020)) (x2092 x314 x2020)))
(assert (x760 x2030))
(assert (x760 x1162))
(assert (=> (>= 10000 x2002) (= (x687 x2002) 0)))
(assert (=> (<= x574 10000) (= 0 (x687 x574))))
(assert (x760 x194))
(assert (= (x1429 x314 x1806 x517 x2298 x567) (x687 (x1429 x314 x1806 x517 x2298 x567))))
(assert (x760 x862))
(assert (x760 x1310))
(assert (= (x1309 (x810 x855 x468 x2278 x1030)) x855))
(assert (= x1128 (x455 (x2092 x852 x1128))))
(assert (= (x687 (+ x1972 1)) (x687 x1972)))
(assert (= x789 (x512 (x2284 x852 x1639 x728 x789 x1223 x205))))
(assert (= (=> (and (= x131 (x2365 (+ x935 x2396))) (= x1025 (x2365 (+ x2410 32))) (= x1211 (< 0 x223)) (= x994 (x2365 (+ x1674 32))) (= (x1547 x2410) x223) (= x1674 (x2365 (+ 32 x1430)))) (and (=> (and x1211 (and (= (x279 x1025) x384) (= x1204 (< 32 x223)))) (and (=> (not x1204) x233) (=> (and x1204 (and (= x2057 (< 64 x223)) (= x2316 (x2365 (+ 32 x994))) (= (x2365 (+ x1025 32)) x1776) (= x357 (x1643 x1776)))) (and (=> (and (and (= x194 (x2365 (+ 64 x1025))) (= (x1343 x194) x2183) (= x1921 (> x223 96)) (= x1541 (x2365 (+ x994 64)))) x2057) (and (=> (not x1921) x233) (=> x1921 x633))) (=> (not x2057) x233))))) (=> (not x1211) x233))) x263))
(assert (x760 x305))
(assert (x624 x2178))
(assert (x760 x294))
(assert (< (x1429 x1123 x817 x124 x620 x2341) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1151 10000) (= (x687 x1151) 0)))
(assert (> (x1429 x270 x1747 x2339 x653 x1164) 10000))
(assert (= (x512 (x2360 x314 x1670 x547 x608 x1942 x927 x1585)) x608))
(assert (x760 x1645))
(assert (< 10000 (x2284 x855 x1193 x457 x359 x1545 x2414)))
(assert (x760 x1373))
(assert (x760 x888))
(assert (x1094 x1315 2))
(assert (= x2131 (and x355 (not x252))))
(assert (x760 x841))
(assert (x760 x1775))
(assert (= (x1309 (x2092 x314 x2020)) x314))
(assert (x760 x2152))
(assert (x1893 x1530))
(assert (=> (>= 10000 x1573) (= 0 (x687 x1573))))
(assert (not (x2045 (x1429 x314 x1806 x517 x2298 x567))))
(assert (= x91 (=> (and (= (x781 (- x184 x724)) x2170) (= x422 (x2365 (+ x234 x79))) (= (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2306) x923) (= x1826 (x2365 (+ x724 32))) (= x434 (x181 x1430)) (= x699 (x2365 (+ x184 32))) (= (x2365 (+ 32 x1430)) x2243) (= x176 (> x434 0)) (= (x2365 (+ 31 x234)) x2306) (= (x2365 (+ x923 x79)) x184)) (and (=> (not x176) x2350) (=> (and x176 (and (= (x1400 x2243) x1791) (= (< 32 x434) x886))) (and (=> (not x886) x2350) (=> (and (and (= (< 64 x434) x658) (= (x2365 (+ x2243 32)) x2181) (= x613 (x1053 x2181)) (= x497 (x2365 (+ 32 x699)))) x886) (and (=> (not x658) x2350) (=> (and (and (= x2273 (> x434 96)) (= (x2365 (+ 64 x699)) x1868) (= (x219 x239) x4) (= x239 (x2365 (+ 64 x2243)))) x658) (and (=> (not x2273) x2350) (=> x2273 x1935)))))))))))
(assert (= (and x600 x595) x2325))
(assert (x760 x626))
(assert (= (=> (and (= x2400 (x2365 (+ x699 x434))) (= x1898 (x2090 x2265)) (= (> x1898 0) x1943)) (and (=> (not x1943) x1079) (=> (and x1943 (= x904 (< 32 x1898))) (and (=> (not x904) x1079) (=> (and (= (< 64 x1898) x1556) x904) (and (=> (not x1556) x1079) (=> (and x1556 (= (> x1898 96) x729)) (and (=> (not x729) x1079) (=> x729 x1911))))))))) x2350))
(assert (x2116 x638))
(assert (x819 x1354))
(assert (= (x2092 32 x1093) (x687 (x2092 32 x1093))))
(assert (= (=> (and (= (x2365 (+ x1460 96)) x1768) (= x949 (x2365 (+ x1087 96))) (= x1485 (not (< 128 x1580))) (= (x1847 x1768) x1846)) (and x1485 x1471)) x1861))
(assert (x128 x1074))
(assert (x760 x999))
(assert (x148 x27))
(assert (x760 x2412))
(assert (=> (>= 10000 x205) (= 0 (x687 x205))))
(assert (x1841 x1417 x2157))
(assert (= (x687 x1435) (x687 (+ 1 x1435))))
(assert (= (x455 (x241 x314 x383 x1842)) x383))
(assert (x760 x1048))
(assert (= (and x1412 (not x1856)) x493))
(assert (= (x687 (x2092 32 x1002)) (x2092 32 x1002)))
(assert (=> (>= 10000 x1806) (= 0 (x687 x1806))))
(assert (x760 x1759))
(assert (< (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x2360 x855 x564 x1183 x2312 x2118 x446 x1075) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x1117)))
(assert (x760 x2140))
(assert (x760 x1103))
(assert (=> (<= x389 10000) (= (x687 x389) 0)))
(assert (x760 x780))
(assert (x760 x792))
(assert (< (x1429 x270 x1747 x2339 x653 x1164) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1212))
(assert (< (x241 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x50))
(assert (x760 x2381))
(assert (x760 x318))
(assert (= x1637 (x572 (x660 x270 x1251 x520 x796 x1758 x2112 x945 x1637))))
(assert (x760 x2341))
(assert (=> (>= 10000 x894) (= (x687 x894) 0)))
(assert (x760 x276))
(assert (= x1164 (x1879 (x1429 x270 x1747 x2339 x653 x1164))))
(assert (x839 x2306 32))
(assert (x760 x443))
(assert (= x1844 (and x355 x252)))
(assert (= x772 (and x396 x209)))
(assert (x760 x52))
(assert (x1893 x1857))
(assert (> (x2092 32 x1892) 10000))
(assert (and (= (x1610 9 9) 81) (= (x1610 3 3) 9) (= 81 (x1610 27 3)) (= (x1610 9 3) 27)))
(assert (x760 x1352))
(assert (x2045 115792089237316195423570985008687907853099843482180094807725896704197245534210))
(assert (x760 x1028))
(assert (x30 8 x2098))
(assert (= x2242 (x49 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620))))
(assert (x760 x2356))
(assert (=> (>= 10000 x1995) (= 0 (x687 x1995))))
(assert (> (x2092 x1123 x1085) 10000))
(assert (x2116 x1391))
(assert (= x2372 (and x1766 (not x577))))
(assert (=> (<= x1456 10000) (= (x687 x1456) 0)))
(assert (= x1804 (and (not x293) x437)))
(assert (x30 2 x1336))
(assert (x760 x1507))
(assert (x760 x739))
(assert (= (x687 (+ x1327 x2154)) (x687 x2154)))
(assert (= x706 (x955 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706))))
(assert (x1893 x1315))
(assert (x760 x76))
(assert (not (x2045 (x2360 x852 x543 x2188 x862 x2315 x1104 x423))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706)))
(assert (= (x49 (x2360 x852 x543 x2188 x862 x2315 x1104 x423)) x1104))
(assert (x760 x1259))
(assert (= (=> (and (= x2349 (x2365 (+ x395 32))) (= (x2365 (+ x1546 32)) x447) (= (> x2179 0) x2187) (= x2143 (x2365 (+ 32 x868))) (= x287 (x781 (- x868 x2133))) (= (x458 x1546) x2179)) (and (=> (and (and (= (> x2179 32) x2038) (= x151 (x930 x447))) x2187) (and (=> (and (and (= (> x2179 64) x2162) (= x322 (x304 x339)) (= x825 (x2365 (+ x2143 32))) (= (x2365 (+ 32 x447)) x339)) x2038) (and (=> (not x2162) x1360) (=> (and (and (= x2186 (x527 x683)) (= x1275 (x2365 (+ 64 x2143))) (= (x2365 (+ x447 64)) x683) (= x1609 (> x2179 96))) x2162) (and (=> (not x1609) x1360) (=> x1609 x1864))))) (=> (not x2038) x1360))) (=> (not x2187) x1360))) x1334))
(assert (x760 x857))
(assert (= x1509 (x455 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907))))
(assert (x760 x89))
(assert (x327 x2348))
(assert (= (x687 x1021) (x687 (+ 1 x1021))))
(assert (x760 x1801))
(assert (= (and (not x2351) x1279) x1647))
(assert (=> (>= 10000 x2369) (= (x687 x2369) 0)))
(assert (x760 x2207))
(assert (x760 x2239))
(assert (= (and (not x83) x1405) x390))
(assert (x2280 x778))
(assert (x760 x976))
(assert (x760 x2118))
(assert (=> (>= 10000 x383) (= (x687 x383) 0)))
(assert (= (x955 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702)) x64))
(assert (=> (>= 10000 x1957) (= 0 (x687 x1957))))
(assert (x2280 x1581))
(assert (x760 x184))
(assert (x2045 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (x49 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)) x754))
(assert (=> (>= 10000 x1942) (= 0 (x687 x1942))))
(assert (x760 x395))
(assert (not (x2045 (x2284 x270 x794 x298 x329 x560 x1389))))
(assert (= (x687 (x241 64 x675 3)) (x241 64 x675 3)))
(assert (=> (>= 10000 x2312) (= 0 (x687 x2312))))
(assert (x760 x759))
(assert (= (x512 (x1429 x855 x1487 x312 x1872 x1967)) x1872))
(assert (= x858 (=> (and (= (x2054 x2075) x1906) (= x563 (x2365 (+ x1673 96))) (= (x2365 (+ x531 96)) x2075) (= (not (< 128 x402)) x1217)) (and x1217 x936))))
(assert (x760 x832))
(assert (= (x687 (+ x1611 x2269)) (x687 x1611)))
(assert (x760 x2001))
(assert (x760 x1415))
(assert (= (x455 (x241 64 x190 x10)) x190))
(assert (x760 x1952))
(assert (x760 x2414))
(assert (> (x1429 x1123 x817 x124 x620 x2341) 10000))
(assert (x128 x1363))
(assert (= (x43 (x1429 x1123 x817 x124 x620 x2341)) x124))
(assert (x839 x1530 2))
(assert (= (x43 (x2284 x1123 x838 x1995 x393 x1971 x727)) x1995))
(assert (= (x2092 x389 x1687) (x687 (x2092 x389 x1687))))
(assert (x2116 x514))
(assert (= (x1309 (x2092 x1123 x1085)) x1123))
(assert (x489 x1684))
(assert (= (and x236 x2256) x1788))
(assert (x760 x911))
(assert (x2116 (- x1417 x2157)))
(assert (=> (>= 10000 x1758) (= (x687 x1758) 0)))
(assert (> (x2360 x998 x1573 x644 x93 x580 x1745 x1722) 10000))
(assert (not (x2045 (x2360 x1250 x931 x648 x1602 x641 x1957 x1918))))
(assert (= (=> (and (= (x2365 (+ x2265 32)) x1073) (= x1029 (+ 1 x2248)) (= (> x1127 0) x150) (= x767 (x2365 (+ x911 1))) (= x2248 (+ 1 x2066)) (= x982 (x2365 (+ 1 x911))) (= x1127 (x2332 x2265))) (and (=> (and (and (= x2302 (> x1127 32)) (= x1001 (x2332 x1073))) x150) (and (=> (and (and (= (x995 x1240) x1659) (= x1022 (x2365 (+ 32 x2296))) (= x831 (> x1127 64)) (= x1240 (x2365 (+ 32 x1073)))) x2302) (and (=> (not x831) x1233) (=> (and x831 (and (= x1798 (x642 x1259)) (= x2185 (> x1127 96)) (= (x2365 (+ 64 x2296)) x561) (= x1259 (x2365 (+ x1073 64))))) (and (=> x2185 x2177) (=> (not x2185) x1233))))) (=> (not x2302) x1233))) (=> (not x150) x1233))) x1095))
(assert (= x1231 (and x274 x537)))
(assert (= (x43 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702)) x1953))
(assert (= (or x607 x1276) x1170))
(assert (x1094 x1271 256))
(assert (x760 x1931))
(assert (= x646 (and x335 x1264)))
(assert (x1893 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= x998 (x1309 (x2284 x998 x2304 x977 x1931 x1941 x887))))
(assert (x760 x1589))
(assert (< 10000 (x2092 32 x1435)))
(assert (x760 x2026))
(assert (= x1551 (or x1769 x1451)))
(assert (x760 x1191))
(assert (= (or x2378 x1549 x1017 x330 x167) x1089))
(assert (=> (<= x872 10000) (= (x687 x872) 0)))
(assert (= x59 (and (not x1431) x453)))
(assert (not (x2045 (x2092 32 x915))))
(assert (=> (>= 10000 x1585) (= (x687 x1585) 0)))
(assert (not (x2045 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706))))
(assert (x760 x196))
(assert (= (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702) (x687 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702))))
(assert (x760 x641))
(assert (= (and x1614 (not x1378)) x212))
(assert (= (x455 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707)) x2030))
(assert (x760 x927))
(assert (= (x1309 (x810 x314 x1537 x156 x1060)) x314))
(assert (=> (>= 10000 x359) (= 0 (x687 x359))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 x389 x1687)))
(assert (x760 x380))
(assert (x760 x1934))
(assert (x760 x159))
(assert (= x1437 (x455 (x2092 32 x1437))))
(assert (x760 x1390))
(assert (x760 x2222))
(assert (x760 x2265))
(assert (x760 x1807))
(assert (x327 x788))
(assert (=> (>= 10000 x336) (= (x687 x336) 0)))
(assert (x2280 x861))
(assert (= (x687 (x241 64 x251 x1619)) (x241 64 x251 x1619)))
(assert (x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x960)))
(assert (= 0 (x687 4132204338)))
(assert (x760 x1185))
(assert (x760 x389))
(assert (= 0 (x687 1605942358)))
(assert (x760 x566))
(assert (not x593))
(assert (= (x572 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207)) x1207))
(assert (x1893 x366))
(assert (= x558 (and x772 (not x2370))))
(assert (=> (<= x922 10000) (= 0 (x687 x922))))
(assert (x1893 x2367))
(assert (x760 x446))
(assert (x760 x1356))
(assert (not (x2045 (x2092 x314 x2020))))
(assert (x760 x2188))
(assert (x1094 (+ x2016 31) 32))
(assert (x760 x1174))
(assert (= (and x2057 x2137) x1398))
(assert (=> (>= 10000 x1907) (= 0 (x687 x1907))))
(assert (x760 x833))
(assert (x327 (+ 31 x2404)))
(assert (= (and x2240 x646) x1940))
(assert (x760 x1414))
(assert (x760 x405))
(assert (x1893 x1353))
(assert (x760 x354))
(assert (x760 x313))
(assert (x128 x452))
(assert (x148 x97))
(assert (= x153 (or x1473 (and (not x2129) x16))))
(assert (x760 x1007))
(assert (x760 x1907))
(assert (x760 x1376))
(assert (=> (>= 10000 x547) (= (x687 x547) 0)))
(assert (x760 x547))
(assert (x760 x557))
(assert (x1094 x766 2))
(assert (x760 x2333))
(assert (=> (>= 10000 x340) (= (x687 x340) 0)))
(assert (=> (<= x2216 10000) (= 0 (x687 x2216))))
(assert (=> (<= x796 10000) (= 0 (x687 x796))))
(assert (x760 x1417))
(assert (x760 x1806))
(assert (=> (>= 10000 x446) (= 0 (x687 x446))))
(assert (x760 x2182))
(assert (< (x241 x1250 x833 x850) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x364 10000) (= (x687 x364) 0)))
(assert (= (x687 (x241 x852 x1955 x2010)) (x241 x852 x1955 x2010)))
(assert (x839 x1208 32))
(assert (= x453 (and (not x1926) x282)))
(assert (= x1862 (and x1506 x220)))
(assert (x760 x316))
(assert (= x560 (x1879 (x2284 x270 x794 x298 x329 x560 x1389))))
(assert (x489 x1449))
(assert (x760 x691))
(assert (= x852 (x1309 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750))))
(assert (=> (>= 10000 x2393) (= 0 (x687 x2393))))
(assert (x760 x592))
(assert (= x2369 (x1879 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706))))
(assert (= (x687 (x2360 x855 x564 x1183 x2312 x2118 x446 x1075)) (x2360 x855 x564 x1183 x2312 x2118 x446 x1075)))
(assert (=> (>= 10000 x1537) (= 0 (x687 x1537))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x241 x998 x1442 x1050)))
(assert (= (and (not x1859) x983) x2161))
(assert (< (x241 64 x251 x2204) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2116 x1353))
(assert (x760 x708))
(assert (x760 x1965))
(assert (= (or x99 x214 x2335 x1486 x811) x31))
(assert (x760 x616))
(assert (=> (<= x1639 10000) (= (x687 x1639) 0)))
(assert (= x552 (and x1167 x268)))
(assert (x760 x360))
(assert (= (and (not x528) x1787) x491))
(assert (=> (<= x201 10000) (= 0 (x687 x201))))
(assert (x760 x1834))
(assert (x760 x748))
(assert (x760 x1284))
(assert (= (x43 (x1429 x389 x1380 x745 x2141 x1642)) x745))
(assert (x760 x2243))
(assert (=> (<= x2163 10000) (= (x687 x2163) 0)))
(assert (x760 x1300))
(assert (= 64 (x1309 (x241 64 x251 x1619))))
(assert (x2280 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x2113))
(assert (=> (>= 10000 x745) (= 0 (x687 x745))))
(assert (x760 x1372))
(assert (x760 x1674))
(assert (x839 x2270 340282366920938463463374607431768211456))
(assert (not (x2045 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440))))
(assert (= x867 (=> (and (= (x2211 x1853) x788) (= (ite (< 0 x1632) x479 (x436 127 x479)) x769) (= (> x769 31) x152) (= (x1454 x103) x675) (<= x675 1461501637330902918203684832716283019655932542975) (= x479 (x62 x788 2)) (= x1538 (x781 (- x1632 (mod (ite (< x769 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (or (= x1538 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1538 1)) (= (+ 1 x915) x1685) (= x1853 (x241 64 x2393 17)) (= (+ x1685 1) x103) (= (x436 1 x788) x1632) (= (x1150 x1685) x1949)) (and (=> (and (and (= (+ x2269 x1611) x107) (= x1611 (x2092 32 x1853)) (= (< x1611 x107) x614) (= (x62 (+ 31 x769) 32) x2269)) x152) (and (=> (not x614) x1739) (=> x614 x562))) (=> (not x152) x500)))))
(assert (= (x687 x1853) (x687 (+ x1853 1))))
(assert (x760 x95))
(assert (=> (>= 10000 x1534) (= (x687 x1534) 0)))
(assert (x760 x1753))
(assert (x760 x1948))
(assert (x839 x366 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1998))
(assert (= (x455 (x241 64 x251 x2204)) x251))
(assert (x760 x1107))
(assert (= x105 (and x601 x1748)))
(assert (= (=> (and (= (x1121 x251) x2356) (= x1882 4) (= x2102 (x781 (- x1293 x851))) (= false x1203) (= x1199 (= 0 x2102)) (= false x9) (= false x32) (= false x1166) (= 4132204338 x1281) (= false x1056) (= x1890 4) (= 1 x1752) (= false x548) (>= 127 x276) (= x416 false) (= x1472 false) (>= 127 x276) (= 16 x663) (<= 1 x2356) (= x926 false) (= 22334872 x818) (>= x1227 1) (= x461 false) (<= x238 127) (= x2067 false) (= false x226) (= x1018 false) (<= x238 127) (= (x1121 x251) x1227) (= false x1323) (= (not x1199) x1990)) x1990) x2125))
(assert (= (and x1345 x176) x1764))
(assert (x760 x321))
(assert (= x922 (x455 (x810 x270 x922 x2011 x1902))))
(assert (< (x2360 x852 x543 x2188 x862 x2315 x1104 x423) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1762))
(assert (= (x687 x632) (x687 (+ x957 x632))))
(assert (x760 x1426))
(assert (x760 x613))
(assert (x760 x272))
(assert (= x629 (and x854 x1292)))
(assert (< (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x640 (or x2093 x51 x997 x1511 x871)))
(assert (x2045 1461501637330902918203684832716283019655932542975))
(assert (= (x687 (x2092 32 x915)) (x2092 32 x915)))
(assert (x2280 x917))
(assert (=> (>= 10000 x1687) (= (x687 x1687) 0)))
(assert (x760 x1253))
(assert (x760 x1644))
(assert (x760 x289))
(assert (x1094 x1530 2))
(assert (= (x455 (x810 x314 x1537 x156 x1060)) x1537))
(assert (x296 x2157 x514 x1417 x2157))
(assert (x2280 2))
(assert (= (and (not x2149) x418) x811))
(assert (x760 x1456))
(assert (x760 x942))
(assert (x2116 (ite (not (= 0 x2096)) 1 0)))
(assert (x760 x653))
(assert (=> (>= 10000 x1863) (= (x687 x1863) 0)))
(assert (x760 x1490))
(assert (x760 x1008))
(assert (= x1902 (x512 (x810 x270 x922 x2011 x1902))))
(assert (= (and x378 x1980) x983))
(assert (not (x2045 (x2092 x998 x1681))))
(assert (= x1512 (and x2225 x146)))
(assert (x760 x1143))
(assert (x1893 x2331))
(assert (x760 x1796))
(assert (x30 256 x813))
(assert (= (and x729 x1613) x2276))
(assert (=> (>= 10000 x298) (= 0 (x687 x298))))
(assert (x760 x1251))
(assert (= (x455 (x2284 x852 x1639 x728 x789 x1223 x205)) x1639))
(assert (x760 x1117))
(assert (x760 x2094))
(assert (x760 x1520))
(assert (= (x2092 32 x1409) (x687 (x2092 32 x1409))))
(assert (x760 x6))
(assert (x1919 x1417 x2157 x514 x2157))
(assert (= x1963 (x455 (x2092 32 x1963))))
(assert (=> (>= 10000 x1872) (= 0 (x687 x1872))))
(assert (x327 (+ x170 31)))
(assert (x760 x1097))
(assert (= (=> (and (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1117) x1291) (= (* x1336 8) x1117) (= x1753 (ite (<= x1354 1) x1249 (x1493 x1354 x2058))) (<= 1 x1291) (= (x436 x44 x1177) x1354) (= (x2365 (+ x1354 x2058)) x1249) (= (* 2 x1336) x2058) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1291) x1177)) x232) x1478))
(assert (x760 x520))
(assert (x760 x662))
(assert (= (and (not x946) x1332) x214))
(assert (= (and x799 x1556) x1613))
(assert (not (x2045 (x810 x1250 x1802 x857 x1816))))
(assert (x760 x837))
(assert (x760 x1443))
(assert (< (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x1890))
(assert (= x2245 (x43 (x810 x998 x1924 x2245 x135))))
(assert (= (x1309 (x810 x1123 x574 x1820 x305)) x1123))
(assert (x760 x1328))
(assert (= (x687 x1481) (x687 (+ 1 x1481))))
(assert (x760 x127))
(assert (x2045 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1893 x2178))
(assert (= (x687 (+ x795 x722)) (x687 x722)))
(assert (x760 x2019))
(assert (x760 x1607))
(assert (x760 x771))
(assert (x760 x981))
(assert (x760 x139))
(assert (=> (<= x1531 10000) (= 0 (x687 x1531))))
(assert (= (x1309 (x810 x389 x1531 x1702 x899)) x389))
(assert (x1661 x2367 x932))
(assert (= (x2092 32 4) (x687 (x2092 32 4))))
(assert (< (x241 64 x190 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x925))
(assert (x624 x2394))
(assert (x760 x1891))
(assert (x760 x794))
(assert (x760 x1918))
(assert (= x389 (x1309 (x2284 x389 x104 x872 x2052 x680 x1165))))
(assert (= (and x1167 (not x268)) x1579))
(assert (x760 x1885))
(assert (x1893 x2213))
(assert (= (x43 (x1429 x998 x1683 x165 x289 x1297)) x165))
(assert (x1094 x2348 256))
(assert (> (x2284 x389 x104 x872 x2052 x680 x1165) 10000))
(assert (= 0 (x687 115792089237316195423570985008687907853099843482180094807725896704197245534208)))
(assert (x760 x1798))
(assert (=> (>= 10000 x2091) (= 0 (x687 x2091))))
(assert (< 10000 (x2360 x389 x1509 x571 x1660 x2078 x271 x1907)))
(assert (x2116 x2157))
(assert (x760 x1941))
(assert (x2280 x790))
(assert (x760 x982))
(assert (= (=> (and (= (+ 1 x1021) x2209) (= x502 (not (< x2209 x343)))) (and x502 x192)) x1780))
(assert (x2116 x1998))
(assert (x2280 x2239))
(assert (x760 x864))
(assert (x760 x940))
(assert (=> (>= 10000 x1406) (= (x687 x1406) 0)))
(assert (x760 x82))
(assert (=> (<= x2222 10000) (= 0 (x687 x2222))))
(assert (x760 x2168))
(assert (= (x1309 (x2092 32 x1093)) 32))
(assert (x296 x1417 x2157 x2157 x514))
(assert (x760 x393))
(assert (= (=> (and (= (x2365 (+ 1 x1863)) x1728) (= x428 (x1680 x1728)) (= (+ x1481 1) x793) (= x974 (x1680 x1728)) (= x255 (x2365 (+ x2265 32))) (= (x2365 (+ x1306 32)) x79) (= x29 (> x234 0)) (= (+ x1892 1) x1481) (= x1306 (x2365 (+ 64 x724))) (= (x1565 x2265) x234)) (and (=> (and (and (= x1618 (> x234 32)) (= x1216 (x737 x255))) x29) (and (=> (not x1618) x91) (=> (and x1618 (and (= (x2365 (+ x255 32)) x303) (= x421 (x229 x303)) (= x83 (> x234 64)) (= x443 (x2365 (+ 32 x79))))) (and (=> (and (and (= (x2365 (+ x255 64)) x2172) (= (x918 x2172) x130) (= (x2365 (+ 64 x79)) x999) (= x39 (< 96 x234))) x83) (and (=> (not x39) x91) (=> x39 x186))) (=> (not x83) x91))))) (=> (not x29) x91))) x1886))
(assert (= (and x2251 x2171) x1765))
(assert (x760 x932))
(assert (not (x2045 (x2092 32 x1093))))
(assert (x760 x1846))
(assert (x760 x359))
(assert (x30 32 x888))
(assert (x30 256 x2094))
(assert (x760 x1904))
(assert (x760 x545))
(assert (x760 x2254))
(assert (= 32 (x1309 (x2092 32 x1435))))
(assert (x760 x2287))
(assert (= x341 (and x293 x437)))
(assert (= x1797 (x43 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620))))
(assert (x760 x218))
(assert (x148 x1790))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2284 x270 x794 x298 x329 x560 x1389)))
(assert (< (x1429 x314 x1806 x517 x2298 x567) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x760 x2127))
(assert (x760 x963))
(assert (not (x2045 (x241 x852 x1955 x2010))))
(assert (= x2091 (x455 (x241 x855 x2091 x2136))))
(assert (=> (<= x2207 10000) (= (x687 x2207) 0)))
(assert (x760 x657))
(assert (x760 x774))
(assert (x760 x1767))
(assert (x760 x1353))
(assert (x1893 x452))
(assert (= x2011 (x43 (x810 x270 x922 x2011 x1902))))
(assert (= 0 (x687 1000000)))
(assert (= (and x2189 (not x172)) x324))
(assert (x839 x1449 128))
(assert (= (x512 (x810 x1250 x1802 x857 x1816)) x1816))
(assert (x2280 x1684))
(assert (x2280 x1353))
(assert (= x977 (x43 (x2284 x998 x2304 x977 x1931 x1941 x887))))
(assert (= x951 (=> (and (= x89 (ite (>= 1 x1012) x1220 (x1493 x1012 x1794))) (= (* 2 x2178) x1794) (= (x2365 (+ x1794 x1012)) x1220) (= x1480 (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x498)) (= x932 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1480)) (= (x436 x2367 x932) x1012) (>= x1480 1) (= x498 (* 8 x2178))) x1886)))
(assert (x760 x1516))
(assert (x760 x1144))
(assert (x760 x2290))
(assert (= (x241 x998 x1442 x1050) (x687 (x241 x998 x1442 x1050))))
(assert (=> (<= x1747 10000) (= (x687 x1747) 0)))
(assert (= (or x552 x1579) x1347))
(assert (= (x1309 (x810 x998 x1924 x2245 x135)) x998))
(assert (x760 x948))
(assert (x327 (x1617 2 x498)))
(assert (= x1173 (and x1495 x809)))
(assert (x760 x559))
(assert (= x1250 (x1309 (x660 x1250 x1743 x133 x2002 x2313 x2216 x2182 x1461))))
(assert (= x2315 (x1879 (x2360 x852 x543 x2188 x862 x2315 x1104 x423))))
(assert (x760 x1060))
(assert (= x1062 (=> (= x537 (= 0 (ite (= x1411 0) x1411 (ite (> x2105 0) 1 0)))) (and (=> (and (and (= (+ x1134 160) x371) (= x41 (x436 1 x2348)) (or (= 1 x309) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x309)) (= (* x638 32) x1134) (= 128 x1517) (= x309 (x781 (- x41 (mod (ite (< x170 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (ite (> x41 0) x325 (x436 127 x325)) x170) (= x2198 (= x170 0)) (= (x62 x2348 2) x325) (= (x62 (+ 31 x170) 32) x638)) (not x537)) (and (=> x2198 x1145) (=> (and (not x2198) (= x1748 (< 31 x170))) (and (=> (and (and (= (* 256 x1113) x1070) (= x1113 (x62 x2348 256))) (not x1748)) x1145) (=> (and x1748 (and (= x1873 (x2092 32 4)) (= x2342 (+ 1 x1873)) (= (x1715 x1873) x429) (= (+ 160 x170) x832) (= (< 192 x832) x17))) (and (=> (not x17) x908) (=> x17 x440))))))) (=> (and x537 (and (= x2393 x851) (= x1527 x374))) x2125)))))
(assert (= x2279 (x455 (x2284 x1250 x2279 x2048 x2180 x869 x1767))))
(assert (< 10000 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702)))
(assert (= x1389 (x49 (x2284 x270 x794 x298 x329 x560 x1389))))
(assert (= (x512 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706)) x1181))
(assert (= (x1309 (x660 x389 x516 x1244 x969 x2207 x942 x1406 x1207)) x389))
(assert (=> (<= x1802 10000) (= (x687 x1802) 0)))
(assert (x760 x1430))
(assert (x760 x2279))
(assert (x760 x2110))
(assert (= x1558 (=> (and (= (> x402 0) x2405) (= x402 (x1453 x1964)) (= (x2365 (+ 32 x1964)) x531) (= x1673 (x2365 (+ 32 x1803))) (= x1603 (x781 (- x1803 x938))) (= x1985 (x2365 (+ x739 32)))) (and (=> (and (and (= x2127 (x2246 x531)) (= (> x402 32) x1422)) x2405) (and (=> (not x1422) x936) (=> (and (and (= (x588 x183) x801) (= x2064 (x2365 (+ 32 x1673))) (= x183 (x2365 (+ 32 x531))) (= (> x402 64) x1544)) x1422) (and (=> (and x1544 (and (= x379 (x2365 (+ 64 x531))) (= (< 96 x402) x1433) (= x2046 (x2365 (+ x1673 64))) (= x1730 (x96 x379)))) (and (=> (not x1433) x936) (=> x1433 x858))) (=> (not x1544) x936))))) (=> (not x2405) x936)))))
(assert (x839 x2178 32))
(assert (= x1944 (or x1845 x350 x1788)))
(assert (=> (<= x1620 10000) (= 0 (x687 x1620))))
(assert (=> (>= 10000 x1461) (= (x687 x1461) 0)))
(assert (x760 x817))
(assert (x760 x561))
(assert (= (and (not x2247) x821) x330))
(assert (= x1332 (and x418 x2149)))
(assert (= (x512 (x2284 x855 x1193 x457 x359 x1545 x2414)) x359))
(assert (= x2386 (and x2038 x1000)))
(assert (= (x687 (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440)) (x2360 x270 x610 x1450 x2337 x1367 x1416 x1440)))
(assert (=> (>= 10000 x305) (= 0 (x687 x305))))
(assert (= 32 (x1309 (x2092 32 x1437))))
(assert (< (x810 x852 x1103 x2222 x2223) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x43 (x2284 x389 x104 x872 x2052 x680 x1165)) x872))
(assert (= x389 (x1309 (x241 x389 x1284 x1704))))
(assert (= (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6) (x687 (x241 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6))))
(assert (x760 x1221))
(assert (= x1130 (x49 (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702))))
(assert (x128 x766))
(assert (x760 x680))
(assert (= (=> (and (= x980 (not (< x2107 x615))) (= (+ 1 x168) x2107)) (and x980 x2212)) x1196))
(assert (= x1215 (=> (and (= (+ x695 1) x939) (= x842 (not (< x939 x554)))) (and x1772 x842))))
(assert (x760 x515))
(assert (x327 x1746))
(assert (= x2071 (and (not x2187) x1175)))
(assert (=> (>= 10000 x2010) (= 0 (x687 x2010))))
(assert (= 0 (x687 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= x1090 x867))
(assert (x760 x2150))
(assert (= (and x809 (not x1495)) x1474))
(assert (x760 x909))
(assert (< 10000 (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707)))
(assert (= x1139 x2212))
(assert (x760 x1914))
(assert (= (and x2053 (not x617)) x2081))
(assert (x760 x1800))
(assert (x760 x162))
(assert (x760 x1642))
(assert (= (and x403 (not x847)) x1272))
(assert (x760 x923))
(assert (= x2262 (or x2070 x532)))
(assert (= (x455 (x241 x998 x1442 x1050)) x1442))
(assert (= 64 (x1309 (x241 64 x1808 19))))
(assert (x760 x1440))
(assert (x760 x312))
(assert (x760 x250))
(assert (= (x687 (x241 x1123 x2163 x534)) (x241 x1123 x2163 x534)))
(assert (= x2234 (=> (and (= x75 (not (> x1219 128))) (= x1138 (x2365 (+ x2134 96))) (= (x2365 (+ 96 x570)) x771) (= x2049 (x884 x1138))) (and x587 x75))))
(assert (> (x2284 x852 x1639 x728 x789 x1223 x205) 10000))
(assert (= (x2284 x1123 x838 x1995 x393 x1971 x727) (x687 (x2284 x1123 x838 x1995 x393 x1971 x727))))
(assert (= (x455 (x2092 x1123 x1085)) x1085))
(assert (= (x687 (x2092 32 x1437)) (x2092 32 x1437)))
(assert (= (and x438 x1135) x1653))
(assert (x760 x1336))
(assert (x760 x46))
(assert (x760 x1461))
(assert (= (x687 (+ x1409 1)) (x687 x1409)))
(assert (x760 x1302))
(assert (x760 x1169))
(assert (=> (>= 10000 x1366) (= (x687 x1366) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2092 x998 x1681)))
(assert (= (x687 x168) (x687 (+ 1 x168))))
(assert (x760 x1750))
(assert (= x228 (=> (and (= (x436 x1045 x272) x948) (= x976 (* 2 x2098)) (= x1727 (* 8 x2098)) (>= x2022 1) (= (x2365 (+ x948 x976)) x1656) (= x272 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2022)) (= (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1727) x2022) (= (ite (>= 1 x948) x1656 (x1493 x948 x976)) x187)) x2310)))
(assert (< (x810 x270 x922 x2011 x1902) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x1055 (not (> x2006 x2338))) (= x2338 (+ 1 x1997))) (and x1888 x1055)) x853))
(assert (=> (<= x1104 10000) (= (x687 x1104) 0)))
(assert (x760 x1393))
(assert (x624 x1336))
(assert (x2280 x2098))
(assert (x760 x457))
(assert (x760 x340))
(assert (= (x43 (x241 x1123 x2163 x534)) x534))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2284 x998 x2304 x977 x1931 x1941 x887)))
(assert (x2280 x2394))
(assert (= (and (not x2302) x1711) x954))
(assert (=> (<= x794 10000) (= 0 (x687 x794))))
(assert (x760 x1522))
(assert (x760 x1391))
(assert (x760 x2165))
(assert (x760 x1030))
(assert (x839 x1728 340282366920938463463374607431768211456))
(assert (= (x455 (x241 x852 x1955 x2010)) x1955))
(assert (= (x687 (x2284 x1250 x2279 x2048 x2180 x869 x1767)) (x2284 x1250 x2279 x2048 x2180 x869 x1767)))
(assert (=> (>= 10000 x516) (= 0 (x687 x516))))
(assert (= x221 (or x1474 x1777 x253 x349 x1122)))
(assert (x760 x1058))
(assert (= x1677 (or x2389 x2352)))
(assert (= x2264 (and (not x152) x1438)))
(assert (= (x687 (x1429 x855 x1487 x312 x1872 x1967)) (x1429 x855 x1487 x312 x1872 x1967)))
(assert (x2116 x2094))
(assert (x760 x2278))
(assert (= x1421 (or x407 x77)))
(assert (x760 x1317))
(assert (> (x810 x1123 x574 x1820 x305) 10000))
(assert (= (x687 x101) (x687 (+ 1 x101))))
(assert (=> (>= 10000 x1820) (= 0 (x687 x1820))))
(assert (= x2390 (and x719 (not x2034))))
(assert (x760 x1673))
(assert (= x1402 (and (not x2405) x1068)))
(assert (x523 x1336))
(assert (x30 32 x628))
(assert (x760 x828))
(assert (< (x660 x1123 x2030 x902 x2003 x787 x1246 x1191 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x401 (and x1431 x453)))
(assert (= (x43 (x2284 x852 x1639 x728 x789 x1223 x205)) x728))
(assert (=> (<= x1246 10000) (= (x687 x1246) 0)))
(assert (= (x455 (x2360 x1123 x1848 x1851 x1181 x2369 x127 x706)) x1848))
(assert (x760 x2031))
(assert (x760 x12))
(assert (x760 x694))
(assert (not (x2045 (x2092 x1123 x1085))))
(assert (= x865 (and (not x1322) x1283)))
(assert (x760 x1566))
(assert (x760 x2353))
(assert (= x2088 (and x2324 x193)))
(assert (= (x1879 (x2284 x855 x1193 x457 x359 x1545 x2414)) x1545))
(assert (= (x2360 x852 x543 x2188 x862 x2315 x1104 x423) (x687 (x2360 x852 x543 x2188 x862 x2315 x1104 x423))))
(assert (x760 x1245))
(assert (= (ite (< x498 256) (x62 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1617 2 x498)) 0) (x2295 115792089237316195423570985008687907853269984665640564039457584007913129639935 x498)))
(assert (x760 x41))
(assert (x1094 x2348 2))
(assert (x760 x801))
(assert (=> (>= 10000 x1767) (= 0 (x687 x1767))))
(assert (x760 x130))
(assert (not (x2045 (x241 64 x675 3))))
(assert (x760 x1714))
(assert (= (x1879 (x660 x852 x894 x36 x56 x2122 x1424 x1491 x750)) x2122))
(assert (= (and x1943 x332) x1033))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x660 x855 x1151 x201 x414 x1026 x754 x671 x435)))
(assert (> (x241 x855 x2091 x2136) 10000))
(assert (= x2194 (=> (and (= (x2365 (+ 96 x935)) x1385) (= x2275 (not (> x2396 128))) (= x2205 (x782 256))) (and x2275 x263))))
(assert (x760 x2160))
(assert (x760 x2143))
(assert (x760 x2369))
(assert (= (and x1615 x1564) x297))
(assert (x760 x1333))
(assert (=> (<= x838 10000) (= (x687 x838) 0)))
(assert (= (and (not x831) x299) x814))
(assert (x760 x1534))
(assert (= (=> (and (or (>= 170141183460469231731687303715884105726 x2393) (<= 115792089237316195423570985008687907853099843482180094807725896704197245534208 x2393)) (= x604 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2410) (= (x2365 (+ x2410 (mod (+ x482 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1546) (= (x2365 (+ 128 x371)) x2410) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x371)) (= x963 (ite (< 0 x1023) x2331 (x436 127 x2331))) (= x1926 (= x963 0)) (not (= x371 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x1877 (x2365 (+ 32 x2410))) (= (x62 x778 2) x2331) (= x778 (x2211 x1409)) (or (and (= (<= x1293 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2393)) (< x2393 x1293)) (and (> x2393 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1293))) (or (<= 115792089237316195423570985008687907853099843482180094807725896704197245534209 x1293) (>= 170141183460469231731687303715884105727 x1293)) (<= x2410 115792089237316195423570985008687907853269984665640564039457584007913129639934) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1100) (= 1 x1100)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x371)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2410) (<= x371 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2100 16) (= (x241 64 x2393 17) x1409) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x371) (= x1100 (x781 (- x1023 (mod (ite (< x963 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= 1 x1546) (= (* x888 32) x482) (> x1546 x2410) (<= x371 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1023 (x436 1 x778)) (= (x62 (+ 31 x963) 32) x888) (< x371 x2410)) (and (=> x1926 x1260) (=> (and (= x1431 (> x963 31)) (not x1926)) (and (=> (and x1431 (and (= (+ 1 x2261) x1789) (= (< x321 x71) x1124) (= x2261 (x2092 32 x1409)) (= x2236 (x1536 x2261)) (= x321 (x2365 (+ 32 x1877))) (= (x2365 (+ x1877 x963)) x71))) (and (=> (not x1124) x761) (=> x1124 x1484))) (=> (and (and (= x1426 (* x813 256)) (= x2237 (x2211 x1409)) (= (x62 x2237 256) x813)) (not x1431)) x1260))))) x1145))
(assert (x2116 (- x514 x2157)))
(assert (= (and (not x595) x600) x1666))
(assert (x760 x2199))
(assert (x1094 (+ x963 31) 32))
(assert (x760 x1227))
(assert (x2045 1000000))
(assert (x760 x651))
(assert (x760 x1752))
(assert (= (x687 x881) (x687 (+ 1 x881))))
(assert (< (x660 x998 x1948 x1953 x2290 x50 x1130 x64 x702) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x1433) x1362) x1929))
(assert (= (or x2218 x2081) x274))
(assert (= (or x1255 x1514) x1567))
(assert (x760 x1850))
(assert (=> (>= 10000 x2011) (= (x687 x2011) 0)))
(assert (not (x2045 (x2092 32 x1409))))
(assert (= x445 (and x2128 x2198)))
(assert (< 10000 (x810 x998 x1924 x2245 x135)))
(assert (= x1314 (=> (and (= x725 (not (< x409 x347))) (= (x2055 x870) x1174) (= (x2365 (+ x2217 32)) x409)) (and x725 x1377))))
(assert (x2280 x2151))
(assert (x760 x1743))
(assert (x819 x976))
(assert (x1094 (+ 31 x1731) 32))
(assert (= x2286 (=> (and (= x1182 (x781 (- x2105 1))) (= (x1285 x2410) x639) (= (x2365 (+ x2410 32)) x404) (= x163 (> x639 0))) (and (=> (and x163 (and (= x139 (x1285 x404)) (= (< 32 x639) x2149))) (and (=> (not x2149) x1641) (=> (and (and (= (x2365 (+ 32 x2220)) x1569) (= x1289 (x1651 x398)) (= (> x639 64) x946) (= x398 (x2365 (+ x404 32)))) x2149) (and (=> (and (and (= (x1047 x377) x1627) (= (< 96 x639) x381) (= x377 (x2365 (+ 64 x404))) (= (x2365 (+ 64 x2220)) x2415)) x946) (and (=> x381 x875) (=> (not x381) x1641))) (=> (not x946) x1641))))) (=> (not x163) x1641)))))
(assert (x839 x2331 128))
(assert (x760 x1358))
(assert (= x208 x1542))
(assert (x760 x308))
(assert (=> (<= x2242 10000) (= 0 (x687 x2242))))
(assert (x760 x2367))
(assert (x760 x230))
(assert (x760 x322))
(assert (=> (<= x644 10000) (= (x687 x644) 0)))
(assert (=> (<= x833 10000) (= (x687 x833) 0)))
(assert (x1893 x759))
(assert (x760 x374))
(assert (not (x2045 (x241 64 x2393 17))))
(assert (x760 x518))
(assert (x839 x2213 128))
(assert (=> (<= x869 10000) (= (x687 x869) 0)))
(assert (x760 x1073))
(assert (= x2285 (and x2144 x658)))
(assert (= x1696 (=> (and (= (+ x881 1) x109) (= x1818 (not (> x363 x109)))) (and x1542 x1818))))
(assert (= (and (not x2036) x231) x115))
(assert (x2045 170141183460469231731687303715884105726))
(assert (x760 x1088))
(assert (= (x455 (x660 x314 x1905 x1797 x2196 x340 x2242 x364 x1620)) x1905))
(assert (x760 x851))
(assert (x760 x752))
(assert (x760 x1128))
(assert (= x1444 (and x40 x1303)))
(assert (< 10000 (x2092 32 x1437)))
(assert (x760 x158))
(assert (x760 x788))
(assert (= x2383 (=> (and (= (+ 1 x1963) x1972) (= 128 x1333) (= (x1041 x2410) x1952) (= (x2365 (+ 1 x2393)) x911) (= (x2365 (+ 32 x2410)) x430) (= (+ 1 x1972) x550) (= x1900 (x2365 (+ x2393 1))) (= (> x1952 0) x1108)) (and (=> (and x1108 (and (= x1925 (x1041 x430)) (= x1225 (> x1952 32)))) (and (=> (not x1225) x573) (=> (and x1225 (and (= x1762 (x2365 (+ 32 x430))) (= x65 (x2365 (+ 32 x283))) (= x2351 (> x1952 64)) (= x598 (x578 x1762)))) (and (=> (and (and (= x2123 (x2365 (+ x430 64))) (= (x277 x2123) x132) (= x2333 (x2365 (+ x283 64))) (= (< 96 x1952) x1224)) x2351) (and (=> (not x1224) x573) (=> x1224 x968))) (=> (not x2351) x573))))) (=> (not x1108) x573)))))
(assert (x760 x521))
(assert (x760 x712))
(assert (x760 x1712))
(assert (x1893 x917))
(check-sat)
(exit)
