(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x508 () Int)
(declare-fun x1506 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x887 () Int)
(declare-fun x1598 () Int)
(declare-fun x437 () Int)
(declare-fun x2630 () Int)
(declare-fun x2936 () Int)
(declare-fun x1523 () Int)
(declare-fun x701 () Int)
(declare-fun x820 () Int)
(declare-fun x2362 () Int)
(declare-fun x2203 () Int)
(declare-fun x1584 () Int)
(declare-fun x1052 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1340 () Int)
(declare-fun x300 () Bool)
(declare-fun x2427 (Int) Int)
(declare-fun x1172 () Bool)
(declare-fun x836 () Int)
(declare-fun x1850 () Int)
(declare-fun x880 () Bool)
(declare-fun x2684 () Int)
(declare-fun x2901 () Int)
(declare-fun x480 () Int)
(declare-fun x1390 () Int)
(declare-fun x1418 () Int)
(declare-fun x2219 () Int)
(declare-fun x2616 () Int)
(declare-fun x941 () Int)
(declare-fun x854 () Int)
(declare-fun x2982 () Int)
(declare-fun x181 (Int) Int)
(declare-fun x1871 () Int)
(declare-fun x2522 () Bool)
(declare-fun x2005 () Int)
(declare-fun x2711 () Int)
(declare-fun x2504 () Int)
(declare-fun x2258 () Int)
(declare-fun x1024 () Int)
(declare-fun x1992 () Int)
(declare-fun x2425 () Bool)
(declare-fun x535 () Int)
(declare-fun x569 () Int)
(declare-fun x3187 () Int)
(declare-fun x317 () Int)
(declare-fun x3188 () Int)
(declare-fun x304 () Int)
(declare-fun x2031 () Bool)
(declare-fun x1494 () Int)
(declare-fun x1596 () Int)
(declare-fun x894 () Int)
(declare-fun x3162 () Int)
(declare-fun x1754 () Bool)
(declare-fun x3108 () Int)
(declare-fun x1237 () Int)
(declare-fun x1285 () Int)
(declare-fun x2582 () Int)
(declare-fun x1844 () Bool)
(declare-fun x1787 () Int)
(declare-fun x570 () Int)
(declare-fun x1835 () Int)
(declare-fun x2284 () Int)
(declare-fun x2877 () Int)
(declare-fun x2476 () Int)
(declare-fun x3088 () Int)
(declare-fun x921 () Int)
(declare-fun x2813 () Int)
(declare-fun x2375 () Int)
(declare-fun x1609 () Int)
(declare-fun x2285 () Bool)
(declare-fun x959 () Int)
(declare-fun x2669 () Int)
(declare-fun x2706 () Int)
(declare-fun x1020 () Bool)
(declare-fun x610 () Int)
(declare-fun x348 () Int)
(declare-fun x1537 () Int)
(declare-fun x954 () Bool)
(declare-fun x2186 () Int)
(declare-fun x1758 () Int)
(declare-fun x2189 () Int)
(declare-fun x982 () Int)
(declare-fun x54 () Int)
(declare-fun x2248 () Int)
(declare-fun x1280 () Int)
(declare-fun x1946 () Bool)
(declare-fun x856 () Int)
(declare-fun x1422 () Bool)
(declare-fun x738 () Int)
(declare-fun x1854 () Bool)
(declare-fun x2676 () Int)
(declare-fun x1345 () Bool)
(declare-fun x1115 () Int)
(declare-fun x1199 () Bool)
(declare-fun x2758 () Int)
(declare-fun x909 () Bool)
(declare-fun x2612 () Int)
(declare-fun x1898 () Int)
(declare-fun x212 () Int)
(declare-fun x1312 () Bool)
(declare-fun x2773 () Bool)
(declare-fun x2806 () Int)
(declare-fun x3189 () Int)
(declare-fun x2642 () Bool)
(declare-fun x219 () Int)
(declare-fun x1292 () Int)
(declare-fun x1938 () Int)
(declare-fun x82 () Int)
(declare-fun x892 () Bool)
(declare-fun x3190 () Bool)
(declare-fun x1705 () Int)
(declare-fun x939 () Bool)
(declare-fun x654 () Int)
(declare-fun x1985 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x267 () Int)
(declare-fun x373 () Int)
(declare-fun x2000 () Int)
(declare-fun x1464 () Bool)
(declare-fun x435 () Int)
(declare-fun x273 () Bool)
(declare-fun x1628 () Int)
(declare-fun x8 () Int)
(declare-fun x2454 () Bool)
(declare-fun x147 () Int)
(declare-fun x793 () Bool)
(declare-fun x2017 () Int)
(declare-fun x2607 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x2266 () Int)
(declare-fun x2539 () Int)
(declare-fun x1521 () Int)
(declare-fun x2217 () Int)
(declare-fun x1124 () Int)
(declare-fun x2120 () Int)
(declare-fun x2727 () Int)
(declare-fun x578 () Int)
(declare-fun x2341 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x1239 () Int)
(declare-fun x840 () Int)
(declare-fun x1631 () Bool)
(declare-fun x2110 () Int)
(declare-fun x977 () Int)
(declare-fun x2604 () Int)
(declare-fun x810 () Int)
(declare-fun x641 () Int)
(declare-fun x2368 () Bool)
(declare-fun x646 () Int)
(declare-fun x1719 () Int)
(declare-fun x1281 () Int)
(declare-fun x1163 () Int)
(declare-fun x3191 () Int)
(declare-fun x1726 () Int)
(declare-fun x3022 () Int)
(declare-fun x2585 () Int)
(declare-fun x2340 () Int)
(declare-fun x3179 () Int)
(declare-fun x1074 () Int)
(declare-fun x3091 () Int)
(declare-fun x1480 () Int)
(declare-fun x3024 () Int)
(declare-fun x708 () Int)
(declare-fun x3028 () Int)
(declare-fun x888 () Int)
(declare-fun x2251 () Bool)
(declare-fun x2633 (Int) Int)
(declare-fun x1314 () Bool)
(declare-fun x1832 () Int)
(declare-fun x1501 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x1751 () Int)
(declare-fun x265 () Bool)
(declare-fun x725 () Int)
(declare-fun x1022 () Int)
(declare-fun x2548 () Int)
(declare-fun x3143 () Int)
(declare-fun x1405 () Int)
(declare-fun x562 () Int)
(declare-fun x2330 () Bool)
(declare-fun x2542 () Bool)
(declare-fun x882 () Int)
(declare-fun x3084 () Int)
(declare-fun x2359 () Int)
(declare-fun x1121 () Int)
(declare-fun x314 () Int)
(declare-fun x475 () Bool)
(declare-fun x2450 () Int)
(declare-fun x2873 () Int)
(declare-fun x1500 () Int)
(declare-fun x1858 () Int)
(declare-fun x62 () Int)
(declare-fun x2960 () Int)
(declare-fun x247 () Bool)
(declare-fun x481 () Int)
(declare-fun x1744 () Int)
(declare-fun x1678 () Int)
(declare-fun x1347 () Bool)
(declare-fun x2783 () Int)
(declare-fun x2137 () Int)
(declare-fun x235 () Int)
(declare-fun x2594 () Int)
(declare-fun x50 () Int)
(declare-fun x3124 () Int)
(declare-fun x2214 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x47 () Int)
(declare-fun x861 () Int)
(declare-fun x579 () Int)
(declare-fun x1328 () Int)
(declare-fun x2749 () Int)
(declare-fun x3101 () Int)
(declare-fun x3127 () Int)
(declare-fun x2247 (Int) Int)
(declare-fun x2138 () Int)
(declare-fun x2763 () Int)
(declare-fun x2042 () Int)
(declare-fun x287 () Bool)
(declare-fun x2292 () Int)
(declare-fun x3181 () Int)
(declare-fun x659 () Int)
(declare-fun x3106 () Int)
(declare-fun x1037 () Int)
(declare-fun x2423 () Int)
(declare-fun x206 () Int)
(declare-fun x199 () Int)
(declare-fun x2406 () Int)
(declare-fun x2456 () Int)
(declare-fun x809 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x1166 () Int)
(declare-fun x1828 () Int)
(declare-fun x260 () Bool)
(declare-fun x2894 () Int)
(declare-fun x2313 () Int)
(declare-fun x2766 () Bool)
(declare-fun x1909 () Int)
(declare-fun x595 () Int)
(declare-fun x2805 () Int)
(declare-fun x1021 () Bool)
(declare-fun x2599 () Int)
(declare-fun x1809 () Int)
(declare-fun x2438 () Bool)
(declare-fun x3064 () Int)
(declare-fun x2596 () Int)
(declare-fun x2129 () Int)
(declare-fun x2764 () Bool)
(declare-fun x93 () Int)
(declare-fun x2139 () Int)
(declare-fun x2094 () Int)
(declare-fun x2386 () Int)
(declare-fun x778 () Int)
(declare-fun x308 () Int)
(declare-fun x2274 () Bool)
(declare-fun x555 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x2390 () Int)
(declare-fun x1695 () Bool)
(declare-fun x2184 () Int)
(declare-fun x1720 () Int)
(declare-fun x2650 () Int)
(declare-fun x2744 () Int)
(declare-fun x1812 () Int)
(declare-fun x2220 () Int)
(declare-fun x1318 () Int)
(declare-fun x1472 () Bool)
(declare-fun x950 () Int)
(declare-fun x2469 () Int)
(declare-fun x3145 () Int)
(declare-fun x303 () Int)
(declare-fun x1524 () Bool)
(declare-fun x583 () Int)
(declare-fun x933 () Int)
(declare-fun x536 () Bool)
(declare-fun x248 () Int)
(declare-fun x441 () Int)
(declare-fun x2570 () Int)
(declare-fun x180 () Int)
(declare-fun x881 () Int)
(declare-fun x1103 () Int)
(declare-fun x1429 () Int)
(declare-fun x1305 () Int)
(declare-fun x2665 () Bool)
(declare-fun x3196 () Int)
(declare-fun x1646 () Bool)
(declare-fun x1748 () Int)
(declare-fun x735 () Int)
(declare-fun x2192 () Int)
(declare-fun x2544 () Int)
(declare-fun x2611 () Int)
(declare-fun x2022 () Bool)
(declare-fun x36 () Int)
(declare-fun x78 () Int)
(declare-fun x2372 () Int)
(declare-fun x3150 () Int)
(declare-fun x3061 () Int)
(declare-fun x3052 () Int)
(declare-fun x605 () Bool)
(declare-fun x3136 () Bool)
(declare-fun x2987 () Int)
(declare-fun x109 () Int)
(declare-fun x2939 (Int) Int)
(declare-fun x2356 () Int)
(declare-fun x171 () Int)
(declare-fun x2907 () Int)
(declare-fun x1915 () Int)
(declare-fun x1028 () Int)
(declare-fun x1558 () Int)
(declare-fun x906 () Bool)
(declare-fun x1862 () Int)
(declare-fun x362 () Int)
(declare-fun x464 () Int)
(declare-fun x580 () Int)
(declare-fun x372 () Int)
(declare-fun x1690 () Int)
(declare-fun x3007 (Int) Int)
(declare-fun x1212 () Int)
(declare-fun x1210 () Bool)
(declare-fun x1670 () Int)
(declare-fun x443 () Int)
(declare-fun x1251 () Bool)
(declare-fun x2073 () Int)
(declare-fun x1110 () Int)
(declare-fun x1164 () Bool)
(declare-fun x250 () Int)
(declare-fun x2232 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x291 () Int)
(declare-fun x1288 () Int)
(declare-fun x341 () Bool)
(declare-fun x1013 () Int)
(declare-fun x534 () Int)
(declare-fun x3133 () Int)
(declare-fun x1930 () Int)
(declare-fun x1389 () Int)
(declare-fun x1457 () Int)
(declare-fun x3104 () Int)
(declare-fun x449 () Int)
(declare-fun x1636 () Int)
(declare-fun x2653 () Int)
(declare-fun x2458 () Int)
(declare-fun x775 () Bool)
(declare-fun x1505 () Int)
(declare-fun x416 () Int)
(declare-fun x1182 () Int)
(declare-fun x2116 () Int)
(declare-fun x2178 () Int)
(declare-fun x67 () Int)
(declare-fun x1342 () Bool)
(declare-fun x154 () Int)
(declare-fun x2754 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x2291 () Int)
(declare-fun x2058 () Int)
(declare-fun x1792 () Int)
(declare-fun x1658 () Int)
(declare-fun x2060 () Int)
(declare-fun x2268 () Bool)
(declare-fun x3039 () Int)
(declare-fun x2272 () Bool)
(declare-fun x1468 () Int)
(declare-fun x1686 () Bool)
(declare-fun x2443 () Int)
(declare-fun x2962 () Bool)
(declare-fun x647 () Int)
(declare-fun x1644 () Int)
(declare-fun x476 () Int)
(declare-fun x1895 () Bool)
(declare-fun x2488 () Int)
(declare-fun x1626 () Int)
(declare-fun x2518 () Int)
(declare-fun x192 () Bool)
(declare-fun x2688 () Int)
(declare-fun x2593 () Int)
(declare-fun x2961 () Int)
(declare-fun x790 () Int)
(declare-fun x2437 () Int)
(declare-fun x1910 () Int)
(declare-fun x400 () Int)
(declare-fun x2289 () Bool)
(declare-fun x2918 () Int)
(declare-fun x1767 () Int)
(declare-fun x618 () Int)
(declare-fun x2026 () Int)
(declare-fun x1981 () Int)
(declare-fun x2403 () Bool)
(declare-fun x122 () Int)
(declare-fun x81 () Int)
(declare-fun x487 () Int)
(declare-fun x1041 () Int)
(declare-fun x715 () Int)
(declare-fun x2919 () Int)
(declare-fun x3056 () Bool)
(declare-fun x95 () Bool)
(declare-fun x2418 () Int)
(declare-fun x469 () Int)
(declare-fun x1146 () Int)
(declare-fun x848 () Int)
(declare-fun x2912 () Int)
(declare-fun x1235 () Int)
(declare-fun x359 () Int)
(declare-fun x2935 () Int)
(declare-fun x1353 () Int)
(declare-fun x1821 () Int)
(declare-fun x668 () Int)
(declare-fun x2567 () Int)
(declare-fun x380 () Int)
(declare-fun x1522 () Int)
(declare-fun x239 () Int)
(declare-fun x2839 () Int)
(declare-fun x311 () Int)
(declare-fun x2101 () Bool)
(declare-fun x636 () Int)
(declare-fun x1914 () Int)
(declare-fun x2878 () Int)
(declare-fun x1953 () Int)
(declare-fun x134 () Int)
(declare-fun x727 () Int)
(declare-fun x123 () Int)
(declare-fun x42 () Int)
(declare-fun x185 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x599 () Int)
(declare-fun x2963 (Int) Int)
(declare-fun x2303 () Int)
(declare-fun x1604 () Int)
(declare-fun x417 () Int)
(declare-fun x722 () Int)
(declare-fun x826 () Int)
(declare-fun x1075 () Int)
(declare-fun x2632 () Int)
(declare-fun x2624 () Bool)
(declare-fun x2583 () Int)
(declare-fun x1836 () Int)
(declare-fun x2100 () Bool)
(declare-fun x1035 () Int)
(declare-fun x1104 () Int)
(declare-fun x70 () Int)
(declare-fun x2698 () Int)
(declare-fun x758 () Int)
(declare-fun x1477 () Int)
(declare-fun x1520 () Bool)
(declare-fun x3033 () Int)
(declare-fun x731 () Int)
(declare-fun x2586 () Int)
(declare-fun x3062 () Int)
(declare-fun x869 () Int)
(declare-fun x473 () Int)
(declare-fun x805 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1932 () Int)
(declare-fun x2505 () Int)
(declare-fun x3153 () Int)
(declare-fun x1776 () Int)
(declare-fun x246 () Int)
(declare-fun x1263 () Int)
(declare-fun x860 () Int)
(declare-fun x1004 () Bool)
(declare-fun x1193 () Int)
(declare-fun x601 () Int)
(declare-fun x2109 () Int)
(declare-fun x209 () Int)
(declare-fun x1557 () Int)
(declare-fun x289 () Int)
(declare-fun x2565 () Bool)
(declare-fun x2317 () Int)
(declare-fun x2393 () Int)
(declare-fun x1346 () Bool)
(declare-fun x268 () Int)
(declare-fun x2851 () Int)
(declare-fun x917 () Int)
(declare-fun x302 () Int)
(declare-fun x2807 () Int)
(declare-fun x2016 () Int)
(declare-fun x1810 () Bool)
(declare-fun x1155 () Int)
(declare-fun x1203 () Int)
(declare-fun x301 () Bool)
(declare-fun x1381 () Int)
(declare-fun x1287 () Int)
(declare-fun x685 () Int)
(declare-fun x2865 () Int)
(declare-fun x512 () Bool)
(declare-fun x813 () Int)
(declare-fun x1327 () Int)
(declare-fun x2515 () Int)
(declare-fun x1764 () Int)
(declare-fun x2785 () Int)
(declare-fun x1450 () Int)
(declare-fun x2701 () Int)
(declare-fun x1086 () Int)
(declare-fun x1990 () Int)
(declare-fun x397 () Bool)
(declare-fun x2506 () Int)
(declare-fun x1717 () Int)
(declare-fun x1267 () Int)
(declare-fun x557 () Bool)
(declare-fun x53 () Int)
(declare-fun x996 () Int)
(declare-fun x2660 () Bool)
(declare-fun x1899 () Int)
(declare-fun x2718 () Bool)
(declare-fun x230 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1595 () Int)
(declare-fun x780 () Int)
(declare-fun x307 () Int)
(declare-fun x1704 () Int)
(declare-fun x918 () Int)
(declare-fun x2762 () Int)
(declare-fun x1759 () Bool)
(declare-fun x2444 () Bool)
(declare-fun x403 () Int)
(declare-fun x1834 () Int)
(declare-fun x2257 () Bool)
(declare-fun x1735 () Int)
(declare-fun x503 () Int)
(declare-fun x3183 () Int)
(declare-fun x1933 () Int)
(declare-fun x998 () Int)
(declare-fun x468 () Int)
(declare-fun x282 () Bool)
(declare-fun x2788 () Int)
(declare-fun x1876 () Int)
(declare-fun x320 () Int)
(declare-fun x1396 () Int)
(declare-fun x1511 () Int)
(declare-fun x1404 () Int)
(declare-fun x2239 () Int)
(declare-fun x1248 () Int)
(declare-fun x870 () Int)
(declare-fun x38 () Int)
(declare-fun x739 () Int)
(declare-fun x640 () Bool)
(declare-fun x546 () Int)
(declare-fun x3013 () Int)
(declare-fun x683 () Int)
(declare-fun x2743 () Int)
(declare-fun x2702 () Bool)
(declare-fun x1570 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x130 () Int)
(declare-fun x1475 () Bool)
(declare-fun x2686 () Int)
(declare-fun x895 () Int)
(declare-fun x612 () Int)
(declare-fun x1887 () Bool)
(declare-fun x761 () Int)
(declare-fun x2351 () Int)
(declare-fun x2509 () Int)
(declare-fun x2795 () Bool)
(declare-fun x2350 () Int)
(declare-fun x931 () Bool)
(declare-fun x1260 (Int Int) Int)
(declare-fun x608 () Int)
(declare-fun x1127 () Int)
(declare-fun x3100 () Int)
(declare-fun x743 () Bool)
(declare-fun x156 () Int)
(declare-fun x1846 () Bool)
(declare-fun x2815 () Int)
(declare-fun x2037 () Int)
(declare-fun x802 () Int)
(declare-fun x1211 () Bool)
(declare-fun x2093 () Int)
(declare-fun x1233 () Int)
(declare-fun x2538 () Int)
(declare-fun x2040 () Int)
(declare-fun x3048 () Int)
(declare-fun x747 () Int)
(declare-fun x2579 () Bool)
(declare-fun x2485 () Int)
(declare-fun x2998 () Int)
(declare-fun x2712 () Int)
(declare-fun x1451 () Int)
(declare-fun x806 () Bool)
(declare-fun x1122 () Int)
(declare-fun x1414 () Bool)
(declare-fun x276 () Int)
(declare-fun x3147 () Int)
(declare-fun x1097 () Int)
(declare-fun x700 () Bool)
(declare-fun x436 () Int)
(declare-fun x1681 () Int)
(declare-fun x211 () Int)
(declare-fun x3097 () Int)
(declare-fun x1603 () Int)
(declare-fun x2975 () Int)
(declare-fun x992 () Int)
(declare-fun x1503 () Int)
(declare-fun x2971 () Int)
(declare-fun x728 () Bool)
(declare-fun x642 () Int)
(declare-fun x1394 () Int)
(declare-fun x2401 () Int)
(declare-fun x428 () Bool)
(declare-fun x52 () Bool)
(declare-fun x986 () Int)
(declare-fun x853 () Bool)
(declare-fun x2968 () Int)
(declare-fun x2398 () Int)
(declare-fun x2215 () Bool)
(declare-fun x2803 () Int)
(declare-fun x2838 () Int)
(declare-fun x1588 () Bool)
(declare-fun x1623 () Int)
(declare-fun x1732 () Int)
(declare-fun x2546 () Int)
(declare-fun x1958 () Int)
(declare-fun x133 () Int)
(declare-fun x2725 () Int)
(declare-fun x2863 () Bool)
(declare-fun x2112 () Int)
(declare-fun x1769 () Bool)
(declare-fun x3141 () Int)
(declare-fun x615 () Int)
(declare-fun x2328 () Bool)
(declare-fun x262 () Int)
(declare-fun x2460 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x628 () Int)
(declare-fun x1805 () Int)
(declare-fun x3082 () Int)
(declare-fun x223 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x2909 () Bool)
(declare-fun x2273 () Int)
(declare-fun x653 () Int)
(declare-fun x1709 () Int)
(declare-fun x419 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1734 () Int)
(declare-fun x2908 () Int)
(declare-fun x360 () Int)
(declare-fun x1391 () Bool)
(declare-fun x829 () Int)
(declare-fun x161 () Bool)
(declare-fun x2001 () Int)
(declare-fun x1264 () Int)
(declare-fun x1025 () Bool)
(declare-fun x2965 () Int)
(declare-fun x2245 () Int)
(declare-fun x2241 () Int)
(declare-fun x3004 () Int)
(declare-fun x978 () Int)
(declare-fun x144 () Int)
(declare-fun x483 () Int)
(declare-fun x1997 () Int)
(declare-fun x1592 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x2531 () Int)
(declare-fun x525 () Int)
(declare-fun x678 () Int)
(declare-fun x2182 () Int)
(declare-fun x2132 () Int)
(declare-fun x801 () Int)
(declare-fun x44 () Int)
(declare-fun x819 () Int)
(declare-fun x1581 () Int)
(declare-fun x1638 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x2102 () Int)
(declare-fun x116 () Int)
(declare-fun x1743 (Int) Int)
(declare-fun x2956 () Int)
(declare-fun x811 (Int) Int)
(declare-fun x461 () Int)
(declare-fun x1952 () Int)
(declare-fun x3095 () Int)
(declare-fun x494 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1752 () Int)
(declare-fun x2584 () Bool)
(declare-fun x1573 () Int)
(declare-fun x1869 () Bool)
(declare-fun x2737 () Int)
(declare-fun x2882 () Int)
(declare-fun x242 (Int Int Int Int) Int)
(declare-fun x2693 () Int)
(declare-fun x1750 () Int)
(declare-fun x1030 () Bool)
(declare-fun x710 () Int)
(declare-fun x2141 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1214 () Int)
(declare-fun x2193 () Int)
(declare-fun x1383 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x2489 () Int)
(declare-fun x195 () Int)
(declare-fun x1344 () Int)
(declare-fun x1929 () Int)
(declare-fun x729 () Int)
(declare-fun x923 () Int)
(declare-fun x1615 () Int)
(declare-fun x2424 () Int)
(declare-fun x539 () Int)
(declare-fun x2837 () Int)
(declare-fun x1131 () Int)
(declare-fun x2973 () Int)
(declare-fun x127 () Int)
(declare-fun x145 () Int)
(declare-fun x255 () Int)
(declare-fun x2371 () Int)
(declare-fun x388 () Bool)
(declare-fun x519 () Int)
(declare-fun x1159 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x3140 () Int)
(declare-fun x427 () Bool)
(declare-fun x1459 () Int)
(declare-fun x2536 (Int Int) Int)
(declare-fun x1339 () Int)
(declare-fun x1859 () Int)
(declare-fun x2309 () Int)
(declare-fun x788 () Int)
(declare-fun x2770 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x1078 () Int)
(declare-fun x857 () Int)
(declare-fun x614 () Int)
(declare-fun x988 () Int)
(declare-fun x1334 () Int)
(declare-fun x990 () Int)
(declare-fun x2659 () Int)
(declare-fun x2324 () Int)
(declare-fun x2027 () Int)
(declare-fun x1471 () Int)
(declare-fun x1196 () Int)
(declare-fun x1840 () Bool)
(declare-fun x1794 () Int)
(declare-fun x2641 () Int)
(declare-fun x1729 () Int)
(declare-fun x831 () Int)
(declare-fun x1087 () Int)
(declare-fun x1080 () Int)
(declare-fun x1458 () Int)
(declare-fun x1455 () Bool)
(declare-fun x228 () Int)
(declare-fun x431 () Int)
(declare-fun x114 () Int)
(declare-fun x2858 () Int)
(declare-fun x2691 () Int)
(declare-fun x35 () Bool)
(declare-fun x450 () Int)
(declare-fun x418 () Int)
(declare-fun x2496 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x3003 () Int)
(declare-fun x407 () Int)
(declare-fun x384 () Int)
(declare-fun x1679 () Int)
(declare-fun x2530 () Bool)
(declare-fun x2991 () Int)
(declare-fun x256 () Bool)
(declare-fun x1343 () Int)
(declare-fun x2314 () Int)
(declare-fun x25 () Bool)
(declare-fun x1640 () Int)
(declare-fun x876 () Int)
(declare-fun x2733 () Int)
(declare-fun x1073 () Bool)
(declare-fun x606 () Int)
(declare-fun x2879 () Bool)
(declare-fun x3115 () Bool)
(declare-fun x91 () Bool)
(declare-fun x864 (Int) Int)
(declare-fun x1540 () Int)
(declare-fun x1863 () Int)
(declare-fun x3071 () Int)
(declare-fun x1515 () Int)
(declare-fun x1543 () Bool)
(declare-fun x587 () Int)
(declare-fun x868 () Int)
(declare-fun x391 () Int)
(declare-fun x2364 () Int)
(declare-fun x3021 () Bool)
(declare-fun x541 () Int)
(declare-fun x1550 () Int)
(declare-fun x1972 () Bool)
(declare-fun x2810 () Int)
(declare-fun x1168 () Int)
(declare-fun x1593 () Int)
(declare-fun x213 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1431 () Bool)
(declare-fun x1363 () Int)
(declare-fun x1571 () Int)
(declare-fun x2905 () Int)
(declare-fun x632 () Int)
(declare-fun x847 () Int)
(declare-fun x1442 () Int)
(declare-fun x1774 () Int)
(declare-fun x2643 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1940 () Int)
(declare-fun x2452 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x1145 () Int)
(declare-fun x980 () Int)
(declare-fun x719 () Int)
(declare-fun x1580 () Int)
(declare-fun x96 () Int)
(declare-fun x1258 () Int)
(declare-fun x2329 () Int)
(declare-fun x2859 () Bool)
(declare-fun x3065 () Int)
(declare-fun x2091 () Int)
(declare-fun x358 () Int)
(declare-fun x3154 () Bool)
(declare-fun x327 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x3193 () Int)
(declare-fun x3144 () Bool)
(declare-fun x2276 () Int)
(declare-fun x1139 () Int)
(declare-fun x471 () Bool)
(declare-fun x1089 () Int)
(declare-fun x1942 () Bool)
(declare-fun x1384 () Int)
(declare-fun x658 () Int)
(declare-fun x1987 () Int)
(declare-fun x1409 () Int)
(declare-fun x2964 () Int)
(declare-fun x1804 () Bool)
(declare-fun x2321 () Int)
(declare-fun x125 () Int)
(declare-fun x343 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1174 () Int)
(declare-fun x3173 () Bool)
(declare-fun x2339 () Int)
(declare-fun x2735 () Int)
(declare-fun x315 () Int)
(declare-fun x3044 () Int)
(declare-fun x2549 () Int)
(declare-fun x1057 () Int)
(declare-fun x1856 () Int)
(declare-fun x2287 () Bool)
(declare-fun x3186 () Int)
(declare-fun x966 () Int)
(declare-fun x103 () Bool)
(declare-fun x2850 () Int)
(declare-fun x766 () Bool)
(declare-fun x1352 (Int) Int)
(declare-fun x2029 () Int)
(declare-fun x1306 () Bool)
(declare-fun x1962 () Int)
(declare-fun x2099 () Bool)
(declare-fun x1902 () Int)
(declare-fun x1167 () Bool)
(declare-fun x1479 () Int)
(declare-fun x2472 () Int)
(declare-fun x3086 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x638 () Bool)
(declare-fun x182 () Int)
(declare-fun x929 () Int)
(declare-fun x1178 () Int)
(declare-fun x721 () Int)
(declare-fun x3096 () Int)
(declare-fun x1611 () Bool)
(declare-fun x797 () Int)
(declare-fun x367 () Int)
(declare-fun x844 () Int)
(declare-fun x2694 () Int)
(declare-fun x3158 () Int)
(declare-fun x958 () Int)
(declare-fun x2158 () Int)
(declare-fun x3020 () Int)
(declare-fun x3075 () Int)
(declare-fun x1240 () Int)
(declare-fun x1134 () Bool)
(declare-fun x2127 () Int)
(declare-fun x828 () Bool)
(declare-fun x2052 () Int)
(declare-fun x545 () Int)
(declare-fun x97 () Bool)
(declare-fun x832 () Bool)
(declare-fun x2115 () Int)
(declare-fun x1661 () Int)
(declare-fun x1612 () Int)
(declare-fun x1324 () Bool)
(declare-fun x1586 () Int)
(declare-fun x3121 () Bool)
(declare-fun x3105 () Int)
(declare-fun x2448 () Bool)
(declare-fun x178 () Int)
(declare-fun x600 () Int)
(declare-fun x2032 () Int)
(declare-fun x2670 () Int)
(declare-fun x2419 () Int)
(declare-fun x2872 () Int)
(declare-fun x2576 () Int)
(declare-fun x1619 () Bool)
(declare-fun x2433 () Int)
(declare-fun x2568 () Bool)
(declare-fun x924 () Int)
(declare-fun x1594 () Bool)
(declare-fun x415 () Bool)
(declare-fun x2781 () Int)
(declare-fun x2699 () Int)
(declare-fun x2160 () Bool)
(declare-fun x501 () Int)
(declare-fun x227 () Int)
(declare-fun x1798 () Int)
(declare-fun x2228 () Int)
(declare-fun x1114 () Int)
(declare-fun x740 () Int)
(declare-fun x2191 () Int)
(declare-fun x1749 () Bool)
(declare-fun x952 () Int)
(declare-fun x2608 () Int)
(declare-fun x241 () Int)
(declare-fun x3114 () Int)
(declare-fun x2050 () Int)
(declare-fun x2828 () Int)
(declare-fun x1184 () Int)
(declare-fun x2039 () Int)
(declare-fun x2966 () Int)
(declare-fun x2230 () Int)
(declare-fun x713 () Bool)
(declare-fun x3058 () Int)
(declare-fun x458 () Bool)
(declare-fun x2862 () Bool)
(declare-fun x2183 () Int)
(declare-fun x2786 () Int)
(declare-fun x533 () Int)
(declare-fun x2603 () Int)
(declare-fun x45 () Int)
(declare-fun x331 (Int Int Int Int Int Int) Int)
(declare-fun x621 () Int)
(declare-fun x1425 () Int)
(declare-fun x2990 () Bool)
(declare-fun x839 () Int)
(declare-fun x2512 () Int)
(declare-fun x983 () Int)
(declare-fun x118 () Bool)
(declare-fun x650 () Int)
(declare-fun x465 () Bool)
(declare-fun x3152 () Int)
(declare-fun x1780 () Int)
(declare-fun x975 () Int)
(declare-fun x1262 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x1872 () Int)
(declare-fun x1848 () Int)
(declare-fun x908 () Int)
(declare-fun x1485 () Bool)
(declare-fun x925 () Int)
(declare-fun x2347 () Int)
(declare-fun x592 () Bool)
(declare-fun x850 () Int)
(declare-fun x2891 () Int)
(declare-fun x165 () Bool)
(declare-fun x2336 () Int)
(declare-fun x812 () Int)
(declare-fun x976 () Int)
(declare-fun x1269 () Int)
(declare-fun x2562 () Int)
(declare-fun x716 () Int)
(declare-fun x208 () Int)
(declare-fun x779 () Bool)
(declare-fun x72 () Bool)
(declare-fun x470 () Int)
(declare-fun x1779 () Int)
(declare-fun x1620 () Int)
(declare-fun x651 () Bool)
(declare-fun x3076 () Bool)
(declare-fun x16 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x497 () Bool)
(declare-fun x1513 () Int)
(declare-fun x2967 () Int)
(declare-fun x551 () Int)
(declare-fun x1890 () Int)
(declare-fun x395 () Bool)
(declare-fun x2010 () Int)
(declare-fun x2135 () Int)
(declare-fun x957 () Int)
(declare-fun x825 () Int)
(declare-fun x1738 () Bool)
(declare-fun x2412 () Int)
(declare-fun x1453 () Int)
(declare-fun x1026 () Int)
(declare-fun x624 () Bool)
(declare-fun x2811 () Int)
(declare-fun x911 () Int)
(declare-fun x2834 () Int)
(declare-fun x1023 () Int)
(declare-fun x1330 () Int)
(declare-fun x851 () Int)
(declare-fun x891 () Int)
(declare-fun x930 () Int)
(declare-fun x561 () Bool)
(declare-fun x224 () Int)
(declare-fun x1335 () Int)
(declare-fun x833 () Int)
(declare-fun x1046 () Int)
(declare-fun x2797 () Int)
(declare-fun x2857 () Int)
(declare-fun x1173 () Int)
(declare-fun x2647 () Int)
(declare-fun x2254 () Int)
(declare-fun x344 () Int)
(declare-fun x2087 () Int)
(declare-fun x60 () Int)
(declare-fun x290 () Int)
(declare-fun x1731 () Int)
(declare-fun x1123 () Int)
(declare-fun x2047 () Int)
(declare-fun x2716 () Int)
(declare-fun x2293 () Int)
(declare-fun x2275 () Int)
(declare-fun x3130 () Int)
(declare-fun x1865 () Int)
(declare-fun x2304 () Int)
(declare-fun x2525 () Int)
(declare-fun x886 () Int)
(declare-fun x1144 () Int)
(declare-fun x12 () Int)
(declare-fun x313 () Int)
(declare-fun x2222 () Int)
(declare-fun x2467 () Bool)
(declare-fun x2204 () Int)
(declare-fun x2981 () Int)
(declare-fun x207 () Bool)
(declare-fun x2821 () Int)
(declare-fun x2382 () Int)
(declare-fun x538 () Int)
(declare-fun x1038 () Int)
(declare-fun x33 () Int)
(declare-fun x2264 () Int)
(declare-fun x1746 (Int) Int)
(declare-fun x616 () Int)
(declare-fun x164 () Int)
(declare-fun x589 () Int)
(declare-fun x1999 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x970 () Int)
(declare-fun x2061 () Int)
(declare-fun x1867 () Int)
(declare-fun x2812 () Int)
(declare-fun x1397 () Int)
(declare-fun x2014 () Int)
(declare-fun x969 () Bool)
(declare-fun x2888 () Int)
(declare-fun x188 () Int)
(declare-fun x2976 () Bool)
(declare-fun x1444 () Int)
(declare-fun x974 () Int)
(declare-fun x2471 () Bool)
(declare-fun x3160 () Int)
(declare-fun x752 () Bool)
(declare-fun x1204 () Int)
(declare-fun x2216 () Bool)
(declare-fun x506 () Bool)
(declare-fun x2142 () Int)
(declare-fun x938 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x1487 () Int)
(declare-fun x1140 () Bool)
(declare-fun x1799 () Int)
(declare-fun x221 () Bool)
(declare-fun x757 () Int)
(declare-fun x1949 () Bool)
(declare-fun x2146 () Int)
(declare-fun x191 () Bool)
(declare-fun x2713 () Int)
(declare-fun x2172 () Int)
(declare-fun x2212 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1329 () Int)
(declare-fun x385 () Bool)
(declare-fun x1149 () Int)
(declare-fun x2808 () Int)
(declare-fun x1109 () Bool)
(declare-fun x1756 () Int)
(declare-fun x706 () Bool)
(declare-fun x453 () Int)
(declare-fun x1395 () Int)
(declare-fun x346 () Int)
(declare-fun x2069 () Int)
(declare-fun x2295 () Int)
(declare-fun x2197 () Bool)
(declare-fun x1701 () Int)
(declare-fun x1413 () Int)
(declare-fun x2917 () Int)
(declare-fun x867 () Bool)
(declare-fun x515 () Int)
(declare-fun x126 () Int)
(declare-fun x804 () Int)
(declare-fun x1624 () Int)
(declare-fun x1273 () Int)
(declare-fun x1687 () Bool)
(declare-fun x1373 () Int)
(declare-fun x3185 () Int)
(declare-fun x1162 () Int)
(declare-fun x2207 () Bool)
(declare-fun x3017 () Int)
(declare-fun x1635 () Int)
(declare-fun x922 () Bool)
(declare-fun x1256 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1504 () Int)
(declare-fun x1533 () Int)
(declare-fun x349 () Bool)
(declare-fun x2511 () Int)
(declare-fun x1473 () Int)
(declare-fun x971 () Int)
(declare-fun x2244 () Int)
(declare-fun x482 () Int)
(declare-fun x3073 () Int)
(declare-fun x1341 () Bool)
(declare-fun x3171 () Int)
(declare-fun x351 () Bool)
(declare-fun x498 () Int)
(declare-fun x217 () Int)
(declare-fun x767 () Int)
(declare-fun x1484 () Bool)
(declare-fun x2466 () Int)
(declare-fun x1152 () Int)
(declare-fun x1698 () Int)
(declare-fun x1226 () Int)
(declare-fun x1219 () Int)
(declare-fun x1283 () Int)
(declare-fun x335 () Bool)
(declare-fun x1497 () Int)
(declare-fun x765 () Bool)
(declare-fun x571 () Int)
(declare-fun x98 () Int)
(declare-fun x368 () Int)
(declare-fun x1370 () Int)
(declare-fun x353 () Int)
(declare-fun x1711 () Int)
(declare-fun x2942 () Bool)
(declare-fun x2689 () Int)
(declare-fun x1320 () Int)
(declare-fun x2703 () Int)
(declare-fun x64 () Int)
(declare-fun x1452 () Int)
(declare-fun x849 () Int)
(declare-fun x3030 () Int)
(declare-fun x2645 () Int)
(declare-fun x1765 () Int)
(declare-fun x294 () Int)
(declare-fun x3111 () Int)
(declare-fun x2013 () Bool)
(declare-fun x3018 () Int)
(declare-fun x1587 () Bool)
(declare-fun x193 () Int)
(declare-fun x1864 () Bool)
(declare-fun x1443 () Int)
(declare-fun x1889 () Int)
(declare-fun x607 () Int)
(declare-fun x2195 (Int) Int)
(declare-fun x2332 () Int)
(declare-fun x433 () Int)
(declare-fun x3117 () Int)
(declare-fun x1873 () Int)
(declare-fun x2529 () Int)
(declare-fun x1724 () Int)
(declare-fun x1079 () Bool)
(declare-fun x1964 () Int)
(declare-fun x1154 () Bool)
(declare-fun x2367 () Bool)
(declare-fun x229 () Bool)
(declare-fun x3137 () Int)
(declare-fun x603 () Int)
(declare-fun x2841 () Int)
(declare-fun x1351 () Int)
(declare-fun x112 () Int)
(declare-fun x1881 () Bool)
(declare-fun x502 () Bool)
(declare-fun x2335 () Int)
(declare-fun x1976 () Int)
(declare-fun x466 () Bool)
(declare-fun x2681 () Int)
(declare-fun x113 () Int)
(declare-fun x1417 () Int)
(declare-fun x1060 () Int)
(declare-fun x707 () Int)
(declare-fun x136 (Int) Int)
(declare-fun x893 () Int)
(declare-fun x928 () Bool)
(declare-fun x664 () Bool)
(declare-fun x2092 () Int)
(declare-fun x742 () Int)
(declare-fun x1282 () Bool)
(declare-fun x1861 () Int)
(declare-fun x2997 () Bool)
(declare-fun x885 () Int)
(declare-fun x1177 () Int)
(declare-fun x2056 () Int)
(declare-fun x1232 () Bool)
(declare-fun x2995 () Int)
(declare-fun x1688 () Int)
(declare-fun x871 () Int)
(declare-fun x244 () Int)
(declare-fun x2890 () Int)
(declare-fun x3 () Int)
(declare-fun x2587 () Int)
(declare-fun x841 () Int)
(declare-fun x1360 () Int)
(declare-fun x537 () Int)
(declare-fun x1921 () Int)
(declare-fun x225 () Int)
(declare-fun x43 () Int)
(declare-fun x2075 () Int)
(declare-fun x1252 () Int)
(declare-fun x815 () Int)
(declare-fun x2337 () Int)
(declare-fun x852 () Int)
(declare-fun x897 () Bool)
(declare-fun x412 () Bool)
(declare-fun x3087 () Int)
(declare-fun x3103 () Bool)
(declare-fun x1852 () Int)
(declare-fun x9 () Int)
(declare-fun x2707 () Bool)
(declare-fun x1007 () Int)
(declare-fun x1937 () Bool)
(declare-fun x1796 () Int)
(declare-fun x495 () Int)
(declare-fun x3043 () Bool)
(declare-fun x1849 () Int)
(declare-fun x1989 () Int)
(declare-fun x396 () Int)
(declare-fun x2125 () Int)
(declare-fun x2655 () Int)
(declare-fun x2906 () Bool)
(declare-fun x2558 () Int)
(declare-fun x2015 () Int)
(declare-fun x2373 () Int)
(declare-fun x1548 () Int)
(declare-fun x777 () Int)
(declare-fun x2463 () Bool)
(declare-fun x2789 () Int)
(declare-fun x1986 () Bool)
(declare-fun x2097 () Int)
(declare-fun x1737 () Bool)
(declare-fun x2969 () Int)
(declare-fun x3016 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x2043 () Int)
(declare-fun x1993 () Int)
(declare-fun x2545 () Int)
(declare-fun x2028 () Int)
(declare-fun x1274 () Int)
(declare-fun x1807 () Int)
(declare-fun x1982 () Int)
(declare-fun x2678 (Int) Int)
(declare-fun x1660 () Int)
(declare-fun x2938 () Int)
(declare-fun x2717 () Int)
(declare-fun x1977 () Bool)
(declare-fun x1474 () Int)
(declare-fun x2887 () Int)
(declare-fun x1044 () Int)
(declare-fun x352 () Bool)
(declare-fun x1829 () Int)
(declare-fun x2885 () Int)
(declare-fun x2238 () Bool)
(declare-fun x1276 () Int)
(declare-fun x631 () Int)
(declare-fun x1132 () Int)
(declare-fun x2572 (Int) Int)
(declare-fun x559 () Bool)
(declare-fun x142 () Bool)
(declare-fun x670 () Int)
(declare-fun x927 () Int)
(declare-fun x140 () Int)
(declare-fun x2420 () Int)
(declare-fun x1374 () Int)
(declare-fun x424 () Int)
(declare-fun x3161 () Int)
(declare-fun x2041 () Int)
(declare-fun x1672 () Bool)
(declare-fun x510 () Int)
(declare-fun x2993 () Int)
(declare-fun x1563 () Bool)
(declare-fun x2151 () Int)
(declare-fun x3192 () Int)
(declare-fun x1839 () Int)
(declare-fun x2771 () Int)
(declare-fun x1201 () Bool)
(declare-fun x845 () Int)
(declare-fun x2036 () Int)
(declare-fun x1694 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x1583 () Int)
(declare-fun x1725 () Bool)
(declare-fun x158 () Int)
(declare-fun x627 () Int)
(declare-fun x798 () Bool)
(declare-fun x27 () Bool)
(declare-fun x705 () Int)
(declare-fun x1275 () Int)
(declare-fun x1150 () Int)
(declare-fun x332 () Int)
(declare-fun x85 () Int)
(declare-fun x177 () Int)
(declare-fun x1416 () Int)
(declare-fun x259 () Bool)
(declare-fun x2560 () Int)
(declare-fun x1067 () Int)
(declare-fun x1576 () Int)
(declare-fun x150 () Int)
(declare-fun x2896 () Int)
(declare-fun x1684 () Int)
(declare-fun x2030 () Int)
(declare-fun x3029 () Bool)
(declare-fun x1541 () Int)
(declare-fun x1157 () Int)
(declare-fun x1885 () Bool)
(declare-fun x2692 () Int)
(declare-fun x2768 (Int) Int)
(declare-fun x556 () Int)
(declare-fun x1445 () Int)
(declare-fun x2194 () Bool)
(declare-fun x104 (Int) Int)
(declare-fun x132 () Int)
(declare-fun x2480 () Int)
(declare-fun x1600 () Int)
(declare-fun x2199 () Int)
(declare-fun x2300 () Int)
(declare-fun x611 (Int) Int)
(declare-fun x2555 () Int)
(declare-fun x2651 () Int)
(declare-fun x2541 () Int)
(declare-fun x3131 () Int)
(declare-fun x560 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x2307 () Int)
(declare-fun x2445 () Int)
(declare-fun x2233 () Int)
(declare-fun x2387 () Int)
(declare-fun x565 () Int)
(declare-fun x2827 () Int)
(declare-fun x472 () Int)
(declare-fun x2297 () Int)
(declare-fun x3195 () Int)
(declare-fun x1371 () Bool)
(declare-fun x3138 () Int)
(declare-fun x2296 () Int)
(declare-fun x264 () Int)
(declare-fun x324 () Int)
(declare-fun x1692 () Int)
(declare-fun x2322 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x2724 () Int)
(declare-fun x1307 () Int)
(declare-fun x1831 () Bool)
(declare-fun x323 () Int)
(declare-fun x1882 () Bool)
(declare-fun x1710 () Int)
(declare-fun x1517 () Int)
(declare-fun x2315 () Int)
(declare-fun x2930 () Bool)
(declare-fun x2484 () Int)
(declare-fun x1059 () Int)
(declare-fun x1728 () Int)
(declare-fun x2252 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x709 () Int)
(declare-fun x2527 () Int)
(declare-fun x1797 () Int)
(declare-fun x1400 () Int)
(declare-fun x478 () Int)
(declare-fun x1825 () Int)
(declare-fun x1160 () Int)
(declare-fun x1900 () Bool)
(declare-fun x1317 () Int)
(declare-fun x2903 () Int)
(declare-fun x2674 () Int)
(declare-fun x99 () Int)
(declare-fun x2455 () Int)
(declare-fun x2255 () Int)
(declare-fun x2944 () Bool)
(declare-fun x2959 () Int)
(declare-fun x1884 (Int Int Int Int Int) Int)
(declare-fun x3069 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1207 () Int)
(declare-fun x2898 () Int)
(declare-fun x1637 () Int)
(declare-fun x423 () Int)
(declare-fun x117 (Int Int) Int)
(declare-fun x2054 () Int)
(declare-fun x762 () Bool)
(declare-fun x517 () Int)
(declare-fun x1575 () Bool)
(declare-fun x596 () Bool)
(declare-fun x278 () Bool)
(declare-fun x2621 () Int)
(declare-fun x1627 () Int)
(declare-fun x2068 () Int)
(declare-fun x699 () Int)
(declare-fun x3042 () Int)
(declare-fun x2992 () Int)
(declare-fun x663 () Bool)
(declare-fun x1297 () Int)
(declare-fun x979 () Int)
(declare-fun x2728 () Int)
(declare-fun x994 () Int)
(declare-fun x370 (Int) Int)
(declare-fun x1246 () Bool)
(declare-fun x3045 () Int)
(declare-fun x1739 () Int)
(declare-fun x2389 () Bool)
(declare-fun x1102 () Int)
(declare-fun x696 () Int)
(declare-fun x2441 () Int)
(declare-fun x2628 () Int)
(declare-fun x3146 () Int)
(declare-fun x1934 () Int)
(declare-fun x1407 () Int)
(declare-fun x513 () Int)
(declare-fun x2124 () Bool)
(declare-fun x1094 () Int)
(declare-fun x1141 () Bool)
(declare-fun x1042 () Int)
(declare-fun x2384 () Int)
(declare-fun x1191 () Int)
(declare-fun x1995 () Int)
(declare-fun x2282 () Int)
(declare-fun x66 () Int)
(declare-fun x2910 () Bool)
(declare-fun x2746 () Int)
(declare-fun x2798 () Int)
(declare-fun x1564 () Bool)
(declare-fun x3176 () Int)
(declare-fun x173 () Int)
(declare-fun x2769 () Int)
(declare-fun x1896 () Int)
(declare-fun x521 () Int)
(declare-fun x2006 () Int)
(declare-fun x1388 () Int)
(declare-fun x1648 () Int)
(declare-fun x2946 () Int)
(declare-fun x1278 () Bool)
(declare-fun x1375 () Int)
(declare-fun x1656 () Int)
(declare-fun x792 () Int)
(declare-fun x577 () Int)
(declare-fun x2383 () Int)
(declare-fun x2540 () Int)
(declare-fun x544 () Int)
(declare-fun x3110 () Int)
(declare-fun x1773 () Int)
(declare-fun x500 () Int)
(declare-fun x1489 () Int)
(declare-fun x2644 () Bool)
(declare-fun x516 () Bool)
(declare-fun x720 () Int)
(declare-fun x645 () Int)
(declare-fun x2635 () Int)
(declare-fun x386 () Int)
(declare-fun x491 () Int)
(declare-fun x2595 () Int)
(declare-fun x737 () Int)
(declare-fun x3151 () Int)
(declare-fun x2610 () Bool)
(declare-fun x2394 () Int)
(declare-fun x2671 () Int)
(declare-fun x2078 () Int)
(declare-fun x2629 () Int)
(declare-fun x3055 () Bool)
(declare-fun x2937 () Bool)
(declare-fun x926 () Int)
(declare-fun x2561 () Int)
(declare-fun x1781 () Int)
(declare-fun x2399 () Int)
(declare-fun x1003 () Int)
(declare-fun x1800 () Int)
(declare-fun x2809 () Bool)
(declare-fun x496 () Int)
(declare-fun x718 () Int)
(declare-fun x2947 () Int)
(declare-fun x2082 () Int)
(declare-fun x1034 () Bool)
(declare-fun x2003 () Int)
(declare-fun x964 () Int)
(declare-fun x712 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x1261 () Int)
(declare-fun x1607 () Bool)
(declare-fun x1323 () Int)
(declare-fun x796 () Int)
(declare-fun x1591 () Int)
(declare-fun x1271 () Int)
(declare-fun x490 () Int)
(declare-fun x1824 () Bool)
(declare-fun x2155 () Bool)
(declare-fun x1376 () Int)
(declare-fun x1893 () Int)
(declare-fun x2532 () Int)
(declare-fun x1311 () Bool)
(declare-fun x2970 () Int)
(declare-fun x2853 () Int)
(declare-fun x2299 () Int)
(declare-fun x2986 () Bool)
(declare-fun x2663 () Int)
(declare-fun x2742 () Int)
(declare-fun x2889 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x2902 () Int)
(declare-fun x1386 () Int)
(declare-fun x2225 () Bool)
(declare-fun x292 () Int)
(declare-fun x2377 () Int)
(declare-fun x1968 () Int)
(declare-fun x1531 () Int)
(declare-fun x643 () Int)
(declare-fun x1579 () Int)
(declare-fun x961 () Int)
(declare-fun x981 () Int)
(declare-fun x2279 () Int)
(declare-fun x1423 () Int)
(declare-fun x505 () Bool)
(declare-fun x588 () Int)
(declare-fun x1279 () Int)
(declare-fun x345 () Int)
(declare-fun x236 () Int)
(declare-fun x656 () Int)
(declare-fun x2011 () Bool)
(declare-fun x1714 () Int)
(declare-fun x1703 () Bool)
(declare-fun x1426 () Int)
(declare-fun x858 () Int)
(declare-fun x1108 () Int)
(declare-fun x452 () Int)
(declare-fun x2173 () Int)
(declare-fun x726 () Bool)
(declare-fun x1808 () Int)
(declare-fun x1911 () Int)
(declare-fun x823 () Int)
(declare-fun x2776 () Bool)
(declare-fun x2083 () Int)
(declare-fun x630 () Int)
(declare-fun x1838 () Int)
(declare-fun x2242 () Bool)
(declare-fun x3057 () Int)
(declare-fun x1410 () Int)
(declare-fun x3123 () Int)
(declare-fun x756 () Int)
(declare-fun x1712 () Bool)
(declare-fun x2654 () Int)
(declare-fun x2833 () Int)
(declare-fun x1071 () Int)
(declare-fun x155 () Bool)
(declare-fun x2892 () Int)
(declare-fun x77 () Int)
(declare-fun x2346 () Int)
(declare-fun x2379 () Int)
(declare-fun x5 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x1793 () Int)
(declare-fun x2249 () Bool)
(declare-fun x2523 () Int)
(declare-fun x783 () Int)
(declare-fun x1791 () Int)
(declare-fun x2224 () Int)
(declare-fun x3078 () Int)
(declare-fun x445 () Int)
(declare-fun x574 () Int)
(declare-fun x1760 () Bool)
(declare-fun x381 () Int)
(declare-fun x2167 () Int)
(declare-fun x1053 () Int)
(declare-fun x474 () Int)
(declare-fun x1393 () Int)
(declare-fun x1935 () Int)
(declare-fun x2528 () Bool)
(declare-fun x1813 () Int)
(declare-fun x167 () Int)
(declare-fun x371 () Int)
(declare-fun x3083 () Int)
(declare-fun x31 () Int)
(declare-fun x2495 () Int)
(declare-fun x18 () Bool)
(declare-fun x2519 () Int)
(declare-fun x1461 () Bool)
(declare-fun x1188 () Int)
(declare-fun x365 () Int)
(declare-fun x3051 () Int)
(declare-fun x2081 () Int)
(declare-fun x2308 () Int)
(declare-fun x169 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1435 () Int)
(declare-fun x769 () Int)
(declare-fun x258 () Bool)
(declare-fun x2148 () Int)
(declare-fun x915 () Int)
(declare-fun x2682 () Int)
(declare-fun x1923 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x1907 () Int)
(declare-fun x338 () Int)
(declare-fun x872 () Int)
(declare-fun x163 () Bool)
(declare-fun x2177 () Int)
(declare-fun x2453 () Bool)
(declare-fun x773 () Int)
(declare-fun x3113 () Bool)
(declare-fun x1948 () Int)
(declare-fun x1322 () Int)
(declare-fun x633 () Int)
(declare-fun x1090 () Int)
(declare-fun x86 () Bool)
(declare-fun x277 () Int)
(declare-fun x3168 () Int)
(declare-fun x1538 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x843 () Int)
(declare-fun x1118 () Int)
(declare-fun x2836 () Bool)
(declare-fun x1950 () Int)
(declare-fun x336 () Int)
(declare-fun x1350 () Int)
(declare-fun x2883 () Int)
(declare-fun x2772 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x2577 () Int)
(declare-fun x835 () Int)
(declare-fun x1582 () Bool)
(declare-fun x688 () Int)
(declare-fun x2416 () Bool)
(declare-fun x693 () Bool)
(declare-fun x2240 () Int)
(declare-fun x2018 () Int)
(declare-fun x2720 () Bool)
(declare-fun x1415 () Int)
(declare-fun x3182 () Int)
(declare-fun x2 () Int)
(declare-fun x818 () Bool)
(declare-fun x2206 () Int)
(declare-fun x1055 () Int)
(declare-fun x3054 () Int)
(declare-fun x2721 () Bool)
(declare-fun x1194 (Int) Bool)
(declare-fun x2477 () Int)
(declare-fun x2923 () Int)
(declare-fun x2752 () Int)
(declare-fun x2085 () Int)
(declare-fun x1897 () Bool)
(declare-fun x1723 (Int Int Int Int) Int)
(declare-fun x333 () Int)
(declare-fun x771 () Int)
(declare-fun x269 () Int)
(declare-fun x3155 () Int)
(declare-fun x2213 () Int)
(declare-fun x2494 () Int)
(declare-fun x2352 () Bool)
(declare-fun x2945 () Bool)
(declare-fun x3015 () Bool)
(declare-fun x1380 () Int)
(declare-fun x92 () Int)
(declare-fun x1516 () Int)
(declare-fun x2493 () Bool)
(declare-fun x61 () Int)
(declare-fun x520 () Int)
(declare-fun x2774 () Int)
(declare-fun x1408 () Int)
(declare-fun x634 () Int)
(declare-fun x1398 () Int)
(declare-fun x2325 () Int)
(declare-fun x995 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x1462 () Int)
(declare-fun x3163 () Int)
(declare-fun x2589 () Int)
(declare-fun x943 () Int)
(declare-fun x936 () Int)
(declare-fun x1366 () Int)
(declare-fun x14 () Int)
(declare-fun x2943 () Int)
(declare-fun x2843 () Int)
(declare-fun x3149 () Bool)
(declare-fun x231 () Int)
(declare-fun x2170 () Int)
(declare-fun x800 () Int)
(declare-fun x1014 () Int)
(declare-fun x3002 () Int)
(declare-fun x137 () Bool)
(declare-fun x275 () Bool)
(declare-fun x2348 () Int)
(declare-fun x183 () Int)
(declare-fun x3025 () Int)
(declare-fun x2927 () Bool)
(declare-fun x2502 () Int)
(declare-fun x2915 () Int)
(declare-fun x2714 () Int)
(declare-fun x916 () Int)
(declare-fun x216 () Int)
(declare-fun x1518 () Int)
(declare-fun x1654 () Int)
(declare-fun x79 () Bool)
(declare-fun x1941 () Int)
(declare-fun x2924 () Int)
(declare-fun x532 () Bool)
(declare-fun x1498 () Int)
(declare-fun x2396 () Int)
(declare-fun x2620 () Int)
(declare-fun x3047 () Int)
(declare-fun x2481 () Bool)
(declare-fun x2695 () Bool)
(declare-fun x1768 () Int)
(declare-fun x200 () Int)
(declare-fun x913 () Int)
(declare-fun x2920 () Int)
(declare-fun x220 () Bool)
(declare-fun x3067 () Int)
(declare-fun x865 () Int)
(declare-fun x3156 () Int)
(declare-fun x399 () Int)
(declare-fun x152 () Bool)
(declare-fun x2236 (Int) Int)
(declare-fun x919 () Int)
(declare-fun x2049 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1777 () Int)
(declare-fun x1925 () Bool)
(declare-fun x438 () Int)
(declare-fun x2405 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1432 () Int)
(declare-fun x1822 () Int)
(declare-fun x2606 () Int)
(declare-fun x2134 () Bool)
(declare-fun x467 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x2934 () Int)
(declare-fun x1650 () Int)
(declare-fun x2365 () Int)
(declare-fun x874 () Int)
(declare-fun x3194 () Int)
(declare-fun x1045 () Int)
(declare-fun x1790 () Bool)
(declare-fun x2575 () Bool)
(declare-fun x2954 () Int)
(declare-fun x1879 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x2084 () Int)
(declare-fun x3060 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x339 () Int)
(declare-fun x3159 () Int)
(declare-fun x1945 () Int)
(declare-fun x2063 () Bool)
(declare-fun x1011 () Int)
(declare-fun x745 () Int)
(declare-fun x2411 () Int)
(declare-fun x674 () Int)
(declare-fun x168 () Int)
(declare-fun x2380 () Int)
(declare-fun x1676 () Int)
(declare-fun x2459 () Bool)
(declare-fun x1874 () Int)
(declare-fun x1823 () Int)
(declare-fun x1486 () Int)
(declare-fun x1250 () Bool)
(declare-fun x2076 () Int)
(declare-fun x364 () Bool)
(declare-fun x791 () Int)
(declare-fun x334 () Int)
(declare-fun x2107 () Int)
(declare-fun x2999 () Bool)
(declare-fun x2668 () Int)
(declare-fun x2508 () Int)
(declare-fun x2440 () Int)
(declare-fun x2802 () Int)
(declare-fun x695 () Int)
(declare-fun x1618 () Int)
(declare-fun x1818 () Int)
(declare-fun x1853 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x74 () Int)
(declare-fun x855 () Bool)
(declare-fun x613 () Int)
(declare-fun x1406 () Int)
(declare-fun x1242 () Int)
(declare-fun x90 () Int)
(declare-fun x2625 () Int)
(declare-fun x2065 () Bool)
(declare-fun x128 () Int)
(declare-fun x51 () Int)
(declare-fun x1361 () Int)
(declare-fun x2179 () Int)
(declare-fun x1213 () Int)
(declare-fun x2121 () Int)
(declare-fun x2559 () Int)
(declare-fun x1947 () Int)
(declare-fun x135 () Int)
(declare-fun x3053 () Bool)
(declare-fun x1632 () Int)
(declare-fun x205 () Int)
(declare-fun x1742 () Int)
(declare-fun x2974 () Int)
(declare-fun x2095 () Int)
(declare-fun x2996 () Int)
(declare-fun x422 () Int)
(declare-fun x69 () Int)
(declare-fun x1348 () Int)
(declare-fun x1917 () Bool)
(declare-fun x196 () Int)
(declare-fun x363 () Int)
(declare-fun x89 () Int)
(declare-fun x1696 () Int)
(declare-fun x2482 () Int)
(declare-fun x2210 () Int)
(declare-fun x1301 () Int)
(declare-fun x846 () Int)
(declare-fun x548 () Bool)
(declare-fun x1782 () Int)
(declare-fun x1733 () Int)
(declare-fun x1488 () Int)
(declare-fun x392 () Int)
(declare-fun x2345 () Bool)
(declare-fun x1991 () Int)
(declare-fun x243 () Int)
(declare-fun x1601 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x2500 () Int)
(declare-fun x2059 () Int)
(declare-fun x1293 () Int)
(declare-fun x830 () Int)
(declare-fun x2007 () Int)
(declare-fun x111 () Int)
(declare-fun x3119 () Bool)
(declare-fun x1088 () Int)
(declare-fun x1988 () Bool)
(declare-fun x2439 () Int)
(declare-fun x58 () Int)
(declare-fun x404 () Int)
(declare-fun x1065 () Bool)
(declare-fun x2301 () Int)
(declare-fun x1785 () Int)
(declare-fun x2516 () Int)
(declare-fun x153 () Int)
(declare-fun x940 () Int)
(declare-fun x1220 () Int)
(declare-fun x1621 () Bool)
(declare-fun x3037 (Int) Int)
(declare-fun x1439 () Bool)
(declare-fun x912 () Int)
(declare-fun x1674 () Bool)
(declare-fun x901 () Int)
(declare-fun x2510 () Bool)
(declare-fun x1820 () Int)
(declare-fun x1512 () Int)
(declare-fun x2305 () Int)
(declare-fun x2267 () Int)
(declare-fun x75 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x1430 () Int)
(declare-fun x460 () Int)
(declare-fun x3172 () Bool)
(declare-fun x3041 () Int)
(declare-fun x2263 () Int)
(declare-fun x1298 () Int)
(declare-fun x1043 () Int)
(declare-fun x2188 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x492 () Int)
(declare-fun x2168 () Int)
(declare-fun x2131 () Int)
(declare-fun x1236 () Int)
(declare-fun x1549 () Int)
(declare-fun x2832 () Bool)
(declare-fun x903 () Bool)
(declare-fun x736 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x2478 () Int)
(declare-fun x279 () Int)
(declare-fun x2057 () Bool)
(declare-fun x1994 () Int)
(declare-fun x1562 () Bool)
(declare-fun x2221 () Int)
(declare-fun x288 (Int) Int)
(declare-fun x3012 () Int)
(declare-fun x1229 () Int)
(declare-fun x2615 () Int)
(declare-fun x2096 () Int)
(declare-fun x296 () Int)
(declare-fun x2231 () Int)
(declare-fun x748 () Int)
(declare-fun x1730 () Int)
(declare-fun x821 () Int)
(declare-fun x2470 () Int)
(declare-fun x1197 () Int)
(declare-fun x297 () Int)
(declare-fun x770 () Int)
(declare-fun x1707 () Int)
(declare-fun x3032 () Int)
(declare-fun x1119 () Int)
(declare-fun x1209 () Int)
(declare-fun x1112 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x160 () Int)
(declare-fun x1547 () Int)
(declare-fun x2867 () Int)
(declare-fun x2614 () Int)
(declare-fun x2849 () Int)
(declare-fun x2941 () Int)
(declare-fun x1837 () Int)
(declare-fun x1811 () Int)
(declare-fun x1602 () Int)
(declare-fun x489 (Int Int Int) Int)
(declare-fun x22 () Int)
(declare-fun x2617 () Int)
(declare-fun x189 () Int)
(declare-fun x2793 () Int)
(declare-fun x2140 () Int)
(declare-fun x1048 () Int)
(declare-fun x635 () Int)
(declare-fun x15 () Int)
(declare-fun x2491 () Int)
(declare-fun x1641 () Int)
(declare-fun x3148 () Int)
(declare-fun x68 () Int)
(declare-fun x794 () Int)
(declare-fun x2925 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x1490 () Int)
(declare-fun x356 () Int)
(declare-fun x11 () Int)
(declare-fun x285 () Int)
(declare-fun x1772 () Bool)
(declare-fun x232 () Bool)
(declare-fun x2847 () Int)
(declare-fun x527 () Int)
(declare-fun x175 () Int)
(declare-fun x3116 () Int)
(declare-fun x951 () Int)
(declare-fun x1170 () Int)
(declare-fun x2543 () Int)
(declare-fun x425 () Int)
(declare-fun x1158 () Bool)
(declare-fun x2835 () Bool)
(declare-fun x1085 () Int)
(declare-fun x2211 () Int)
(declare-fun x1068 (Int) Int)
(declare-fun x2619 () Bool)
(declare-fun x884 () Int)
(declare-fun x2631 () Int)
(declare-fun x83 () Int)
(declare-fun x902 () Bool)
(declare-fun x3180 () Int)
(declare-fun x1202 () Int)
(declare-fun x2334 () Int)
(declare-fun x1355 () Int)
(declare-fun x1647 () Bool)
(declare-fun x1544 () Int)
(declare-fun x896 () Bool)
(declare-fun x730 () Int)
(declare-fun x1378 () Int)
(declare-fun x2119 () Int)
(declare-fun x2715 () Int)
(declare-fun x87 () Int)
(declare-fun x429 () Int)
(declare-fun x1382 () Bool)
(declare-fun x3000 () Int)
(declare-fun x2675 () Bool)
(declare-fun x3177 () Int)
(declare-fun x2534 () Int)
(declare-fun x2499 () Int)
(declare-fun x2259 () Int)
(declare-fun x1120 () Bool)
(declare-fun x3019 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1668 (Int Int Int Int Int Int Int) Int)
(declare-fun x3059 () Int)
(declare-fun x553 () Int)
(declare-fun x1770 () Int)
(declare-fun x2483 () Int)
(declare-fun x2045 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x604 () Int)
(declare-fun x401 () Int)
(declare-fun x2590 () Bool)
(declare-fun x1675 () Int)
(declare-fun x2461 () Int)
(declare-fun x665 () Int)
(declare-fun x1761 () Int)
(declare-fun x1175 () Int)
(declare-fun x488 () Int)
(declare-fun x842 () Int)
(declare-fun x1971 () Int)
(declare-fun x787 () Bool)
(declare-fun x2149 () Int)
(declare-fun x2407 (Int) Int)
(declare-fun x1433 () Bool)
(declare-fun x822 () Int)
(declare-fun x2130 () Int)
(declare-fun x2840 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x2687 () Int)
(declare-fun x2430 () Int)
(declare-fun x679 () Int)
(declare-fun x2799 () Bool)
(declare-fun x2136 () Int)
(declare-fun x989 () Bool)
(declare-fun x2739 () Int)
(declare-fun x326 () Bool)
(declare-fun x759 () Bool)
(declare-fun x1032 () Int)
(declare-fun x2926 (Int) Int)
(declare-fun x1916 () Bool)
(declare-fun x1481 () Int)
(declare-fun x576 () Int)
(declare-fun x2826 () Bool)
(declare-fun x1706 () Int)
(declare-fun x198 () Int)
(declare-fun x1559 () Int)
(declare-fun x1682 () Bool)
(declare-fun x1508 () Int)
(declare-fun x3112 () Int)
(declare-fun x2846 () Bool)
(declare-fun x1806 () Int)
(declare-fun x2070 () Bool)
(declare-fun x1552 () Int)
(declare-fun x1998 () Bool)
(declare-fun x1951 () Int)
(declare-fun x325 () Bool)
(declare-fun x1757 () Int)
(declare-fun x2294 () Int)
(declare-fun x629 () Int)
(declare-fun x1691 () Int)
(declare-fun x3102 () Int)
(declare-fun x106 () Int)
(declare-fun x1216 () Int)
(declare-fun x266 () Bool)
(declare-fun x795 () Bool)
(declare-fun x3001 () Int)
(declare-fun x176 () Int)
(declare-fun x2988 () Int)
(declare-fun x2311 () Bool)
(declare-fun x447 () Int)
(declare-fun x1254 () Int)
(declare-fun x1161 () Int)
(declare-fun x2842 () Bool)
(declare-fun x2751 () Int)
(declare-fun x1613 () Bool)
(declare-fun x2854 () Int)
(declare-fun x2648 () Bool)
(declare-fun x585 () Int)
(declare-fun x1492 () Bool)
(declare-fun x2163 () Int)
(declare-fun x1819 () Int)
(declare-fun x1437 () Int)
(declare-fun x493 () Bool)
(declare-fun x2271 () Int)
(declare-fun x955 () Int)
(declare-fun x432 () Int)
(declare-fun x2748 () Int)
(declare-fun x1855 () Int)
(declare-fun x883 () Int)
(declare-fun x1247 () Int)
(declare-fun x1421 () Bool)
(declare-fun x946 () Bool)
(declare-fun x40 () Int)
(declare-fun x1436 () Int)
(declare-fun x2931 () Int)
(declare-fun x2113 () Bool)
(declare-fun x2830 () Int)
(declare-fun x2627 () Int)
(declare-fun x2366 () Int)
(declare-fun x2726 () Int)
(declare-fun x1257 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x985 () Bool)
(declare-fun x46 () Bool)
(declare-fun x1129 () Int)
(declare-fun x1491 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x448 () Bool)
(declare-fun x2342 () Int)
(declare-fun x1 () Int)
(declare-fun x550 () Int)
(declare-fun x1050 () Int)
(declare-fun x2190 () Int)
(declare-fun x1270 () Bool)
(declare-fun x3128 () Int)
(declare-fun x1093 () Bool)
(declare-fun x1016 (Int Int) Int)
(declare-fun x2765 () Int)
(declare-fun x1545 () Bool)
(declare-fun x2552 () Int)
(declare-fun x2916 () Int)
(declare-fun x2374 () Bool)
(declare-fun x1816 () Int)
(declare-fun x2024 () Int)
(declare-fun x1886 () Int)
(declare-fun x1054 () Int)
(declare-fun x581 () Bool)
(declare-fun x1125 () Int)
(declare-fun x2646 () Bool)
(declare-fun x816 () Int)
(declare-fun x1315 () Int)
(declare-fun x124 () Int)
(declare-fun x1664 () Bool)
(declare-fun x1527 () Int)
(declare-fun x1526 () Int)
(declare-fun x1295 () Int)
(declare-fun x310 () Int)
(declare-fun x763 () Int)
(declare-fun x1652 () Int)
(declare-fun x2066 () Int)
(declare-fun x2779 () Int)
(declare-fun x543 () Int)
(declare-fun x2817 () Int)
(declare-fun x1833 () Bool)
(declare-fun x1795 () Int)
(declare-fun x49 () Int)
(declare-fun x284 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x37 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1402 () Int)
(declare-fun x504 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x1669 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x554 () Int)
(declare-fun x1546 () Int)
(declare-fun x2161 () Int)
(declare-fun x2229 () Int)
(declare-fun x1061 () Bool)
(declare-fun x2662 () Int)
(declare-fun x2636 () Int)
(declare-fun x174 () Int)
(declare-fun x667 () Int)
(declare-fun x3093 () Bool)
(declare-fun x1047 () Int)
(declare-fun x485 () Bool)
(declare-fun x1460 () Int)
(declare-fun x402 () Int)
(declare-fun x1649 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x2979 () Int)
(declare-fun x2581 () Int)
(declare-fun x394 () Bool)
(declare-fun x862 () Bool)
(declare-fun x48 () Int)
(declare-fun x2557 () Int)
(declare-fun x1010 () Int)
(declare-fun x439 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x2150 () Int)
(declare-fun x1841 () Bool)
(declare-fun x172 () Bool)
(declare-fun x2395 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x430 () Int)
(declare-fun x159 () Int)
(declare-fun x1412 () Int)
(declare-fun x455 () Bool)
(declare-fun x1017 () Int)
(declare-fun x2556 () Int)
(declare-fun x1589 () Bool)
(declare-fun x1928 () Int)
(declare-fun x2657 () Int)
(declare-fun x2911 () Int)
(declare-fun x1697 () Int)
(declare-fun x1578 () Int)
(declare-fun x704 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1142 () Bool)
(declare-fun x2533 () Int)
(declare-fun x3066 () Int)
(declare-fun x1338 () Int)
(declare-fun x3184 () Bool)
(declare-fun x6 () Int)
(declare-fun x1556 () Int)
(declare-fun x1539 () Bool)
(declare-fun x914 () Int)
(declare-fun x1727 () Bool)
(declare-fun x2331 () Int)
(declare-fun x2571 () Int)
(declare-fun x2732 () Bool)
(declare-fun x3164 () Int)
(declare-fun x2656 () Bool)
(declare-fun x750 () Int)
(declare-fun x2547 () Int)
(declare-fun x907 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1434 () Bool)
(declare-fun x568 () Int)
(declare-fun x549 () Int)
(declare-fun x3008 () Bool)
(declare-fun x94 () Int)
(declare-fun x1483 () Int)
(declare-fun x3175 () Int)
(declare-fun x1530 () Int)
(declare-fun x2856 () Int)
(declare-fun x2734 () Int)
(declare-fun x1151 () Int)
(declare-fun x1957 () Int)
(declare-fun x1377 () Int)
(declare-fun x1319 () Int)
(declare-fun x1062 () Int)
(declare-fun x1072 () Int)
(declare-fun x2326 () Bool)
(declare-fun x2358 () Int)
(declare-fun x1905 () Int)
(declare-fun x299 () Int)
(declare-fun x2673 () Int)
(declare-fun x2490 () Int)
(declare-fun x2169 () Int)
(declare-fun x2958 () Int)
(declare-fun x732 () Int)
(declare-fun x2980 () Int)
(declare-fun x507 () Bool)
(declare-fun x295 () Int)
(declare-fun x141 () Int)
(declare-fun x1113 () Int)
(declare-fun x2312 () Int)
(declare-fun x477 () Int)
(declare-fun x3118 () Bool)
(declare-fun x2128 (Int) Int)
(declare-fun x101 () Int)
(declare-fun x318 () Int)
(declare-fun x2881 () Int)
(declare-fun x1304 () Int)
(declare-fun x2256 () Int)
(declare-fun x110 () Int)
(declare-fun x2569 () Int)
(declare-fun x409 () Int)
(declare-fun x1456 () Int)
(declare-fun x222 () Int)
(declare-fun x2077 () Bool)
(declare-fun x3092 () Int)
(declare-fun x540 () Bool)
(declare-fun x3132 () Int)
(declare-fun x1969 () Int)
(declare-fun x2400 () Int)
(declare-fun x1349 () Int)
(declare-fun x3038 () Int)
(declare-fun x319 () Bool)
(declare-fun x1076 () Int)
(declare-fun x3126 () Int)
(declare-fun x2914 () Int)
(declare-fun x2360 () Int)
(declare-fun x1092 () Int)
(declare-fun x1138 () Int)
(declare-fun x2929 () Int)
(declare-fun x2402 () Int)
(declare-fun x2320 () Bool)
(declare-fun x3089 () Bool)
(declare-fun x76 () Int)
(declare-fun x3157 () Int)
(declare-fun x234 () Bool)
(declare-fun x3080 () Int)
(declare-fun x772 () Bool)
(declare-fun x3026 () Bool)
(declare-fun x760 () Int)
(declare-fun x591 () Int)
(declare-fun x2578 () Bool)
(declare-fun x166 () Int)
(declare-fun x2871 () Int)
(declare-fun x19 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x1100 () Int)
(declare-fun x609 () Int)
(declare-fun x2227 () Int)
(declare-fun x676 () Int)
(declare-fun x1000 () Bool)
(declare-fun x1308 () Int)
(declare-fun x781 () Int)
(declare-fun x2432 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x639 () Int)
(declare-fun x2666 () Int)
(declare-fun x280 () Int)
(declare-fun x2044 () Int)
(declare-fun x157 () Int)
(declare-fun x1362 () Int)
(declare-fun x2187 () Int)
(declare-fun x1525 () Int)
(declare-fun x2741 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x2104 () Int)
(declare-fun x1741 () Int)
(declare-fun x776 () Int)
(declare-fun x1310 () Int)
(declare-fun x1372 () Int)
(declare-fun x3170 () Bool)
(declare-fun x143 () Bool)
(declare-fun x190 () Int)
(declare-fun x1891 () Int)
(declare-fun x723 () Int)
(declare-fun x233 () Int)
(declare-fun x984 () Int)
(declare-fun x375 () Bool)
(declare-fun x1225 () Int)
(declare-fun x2344 () Int)
(declare-fun x582 () Bool)
(declare-fun x2133 () Int)
(declare-fun x1063 () Bool)
(declare-fun x1936 () Int)
(declare-fun x808 () Int)
(declare-fun x573 () Int)
(declare-fun x1367 () Bool)
(declare-fun x1208 () Int)
(declare-fun x2904 () Bool)
(declare-fun x518 () Int)
(declare-fun x1629 () Int)
(declare-fun x910 () Int)
(declare-fun x2079 () Int)
(declare-fun x2893 () Bool)
(declare-fun x2361 () Int)
(declare-fun x2002 () Int)
(declare-fun x2672 () Int)
(declare-fun x131 () Int)
(declare-fun x956 () Int)
(declare-fun x2801 () Int)
(declare-fun x1657 () Int)
(declare-fun x692 () Int)
(declare-fun x1961 () Int)
(declare-fun x3178 () Int)
(declare-fun x2804 () Int)
(declare-fun x1183 () Bool)
(declare-fun x724 () Int)
(declare-fun x2323 () Int)
(declare-fun x376 () Int)
(declare-fun x139 () Int)
(declare-fun x2021 () Int)
(declare-fun x1465 () Bool)
(declare-fun x2310 () Int)
(declare-fun x2705 () Int)
(declare-fun x1156 () Bool)
(declare-fun x1039 () Int)
(declare-fun x511 () Int)
(declare-fun x1192 () Int)
(declare-fun x2928 () Int)
(declare-fun x23 () Int)
(declare-fun x2237 () Bool)
(declare-fun x3011 () Int)
(declare-fun x567 () Int)
(declare-fun x1924 () Int)
(declare-fun x552 () Int)
(declare-fun x1868 () Bool)
(declare-fun x434 () Int)
(declare-fun x3068 () Int)
(declare-fun x2985 () Int)
(declare-fun x1185 () Int)
(declare-fun x3142 () Int)
(declare-fun x1036 () Bool)
(declare-fun x20 () Int)
(declare-fun x2679 () Int)
(declare-fun x3072 () Int)
(declare-fun x1577 () Int)
(declare-fun x2126 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x2408 () Int)
(declare-fun x149 () Int)
(declare-fun x2551 () Int)
(declare-fun x1403 () Int)
(declare-fun x2019 () Int)
(declare-fun x2609 (Int) Int)
(declare-fun x1218 () Int)
(declare-fun x2357 () Int)
(declare-fun x991 () Int)
(declare-fun x2385 () Int)
(declare-fun x2165 () Bool)
(declare-fun x2602 () Int)
(declare-fun x2729 () Bool)
(declare-fun x597 () Int)
(declare-fun x1843 () Int)
(declare-fun x442 () Int)
(declare-fun x972 () Int)
(declare-fun x1801 () Int)
(declare-fun x963 () Int)
(declare-fun x949 () Int)
(declare-fun x2845 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1625 () Int)
(declare-fun x2521 () Int)
(declare-fun x1064 () Int)
(declare-fun x2777 () Int)
(declare-fun x322 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x426 () Int)
(declare-fun x3005 () Bool)
(declare-fun x1165 () Int)
(declare-fun x1424 () Int)
(declare-fun x3034 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x666 () Int)
(declare-fun x672 () Int)
(declare-fun x623 () Bool)
(declare-fun x1708 () Int)
(declare-fun x617 () Int)
(declare-fun x390 (Int) Int)
(declare-fun x2940 () Int)
(declare-fun x655 () Bool)
(declare-fun x2824 () Int)
(declare-fun x2250 () Int)
(declare-fun x889 () Int)
(declare-fun x649 () Int)
(declare-fun x2507 () Int)
(declare-fun x2637 () Int)
(declare-fun x383 () Int)
(declare-fun x1096 () Int)
(declare-fun x2262 () Int)
(declare-fun x2613 () Bool)
(declare-fun x1153 () Int)
(declare-fun x2288 () Int)
(declare-fun x2180 () Int)
(declare-fun x2218 () Int)
(declare-fun x2283 () Int)
(declare-fun x204 () Int)
(declare-fun x863 () Int)
(declare-fun x2474 () Int)
(declare-fun x1070 () Bool)
(declare-fun x105 () Int)
(declare-fun x1786 () Int)
(declare-fun x184 () Int)
(declare-fun x1227 () Int)
(declare-fun x2800 () Int)
(declare-fun x413 () Int)
(declare-fun x1277 () Int)
(declare-fun x1845 () Int)
(declare-fun x316 () Bool)
(declare-fun x2537 () Int)
(declare-fun x2514 () Int)
(declare-fun x13 () Int)
(declare-fun x1973 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1978 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1747 () Int)
(declare-fun x1599 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1241 () Int)
(declare-fun x2462 () Int)
(declare-fun x1802 () Int)
(declare-fun x2447 () Bool)
(declare-fun x749 () Int)
(declare-fun x7 () Bool)
(declare-fun x80 () Int)
(declare-fun x1294 () Int)
(declare-fun x2208 () Bool)
(declare-fun x3094 () Bool)
(declare-fun x2680 () Int)
(declare-fun x1470 () Int)
(declare-fun x240 () Int)
(declare-fun x703 () Int)
(declare-fun x2874 () Int)
(declare-fun x2153 () Int)
(declare-fun x2775 () Int)
(declare-fun x146 () Int)
(declare-fun x1894 () Bool)
(declare-fun x1663 () Int)
(declare-fun x254 () Bool)
(declare-fun x107 () Int)
(declare-fun x2319 () Int)
(declare-fun x944 () Bool)
(declare-fun x514 () Int)
(declare-fun x2868 () Int)
(declare-fun x2731 () Bool)
(declare-fun x2422 () Int)
(declare-fun x2157 () Int)
(declare-fun x1666 () Int)
(declare-fun x2114 () Int)
(declare-fun x2886 () Int)
(declare-fun x108 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x2778 () Int)
(declare-fun x1009 () Int)
(declare-fun x1478 () Int)
(declare-fun x1565 () Int)
(declare-fun x366 () Bool)
(declare-fun x218 () Bool)
(declare-fun x1238 () Int)
(declare-fun x1321 () Int)
(declare-fun x1291 () Int)
(declare-fun x3036 () Int)
(declare-fun x1224 () Int)
(declare-fun x530 () Bool)
(declare-fun x1302 () Int)
(declare-fun x2369 () Int)
(declare-fun x1428 () Bool)
(declare-fun x2825 () Int)
(declare-fun x702 () Int)
(declare-fun x751 () Bool)
(declare-fun x347 () Int)
(declare-fun x2051 (Int) Int)
(declare-fun x566 () Int)
(declare-fun x2392 () Int)
(declare-fun x3077 () Int)
(declare-fun x662 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x1633 () Bool)
(declare-fun x454 () Int)
(declare-fun x2428 () Int)
(declare-fun x717 () Int)
(declare-fun x2260 () Int)
(declare-fun x57 () Int)
(declare-fun x2816 () Bool)
(declare-fun x1234 () Int)
(declare-fun x2270 () Int)
(declare-fun x768 () Bool)
(declare-fun x1984 () Int)
(declare-fun x2884 () Int)
(declare-fun x2580 () Int)
(declare-fun x1755 () Int)
(declare-fun x3107 () Int)
(declare-fun x1617 () Bool)
(declare-fun x622 () Int)
(declare-fun x677 () Int)
(declare-fun x680 () Int)
(declare-fun x987 () Bool)
(declare-fun x1354 () Int)
(declare-fun x524 () Bool)
(declare-fun x1519 () Int)
(declare-fun x2994 () Int)
(declare-fun x2038 () Int)
(declare-fun x2791 () Int)
(declare-fun x1567 () Int)
(declare-fun x1912 () Bool)
(declare-fun x2175 () Int)
(declare-fun x1585 () Bool)
(declare-fun x293 () Int)
(declare-fun x88 () Int)
(declare-fun x2677 () Bool)
(declare-fun x698 () Int)
(declare-fun x2354 () Int)
(declare-fun x2055 () Int)
(declare-fun x337 () Int)
(declare-fun x1608 () Int)
(declare-fun x2950 () Int)
(declare-fun x2457 () Int)
(declare-fun x584 () Bool)
(declare-fun x2513 () Int)
(declare-fun x814 () Bool)
(declare-fun x3006 () Int)
(declare-fun x1336 () Bool)
(declare-fun x837 () Int)
(declare-fun x3035 () Int)
(declare-fun x1006 () Int)
(declare-fun x3040 () Int)
(declare-fun x1128 () Int)
(declare-fun x2897 () Int)
(declare-fun x2696 () Bool)
(declare-fun x890 () Bool)
(declare-fun x1919 () Int)
(declare-fun x997 () Int)
(declare-fun x3074 () Int)
(declare-fun x2353 () Int)
(declare-fun x2550 () Int)
(declare-fun x2592 () Int)
(declare-fun x34 () Int)
(declare-fun x741 (Int Int) Int)
(declare-fun x1771 () Int)
(declare-fun x968 () Int)
(declare-fun x2618 () Int)
(declare-fun x2171 () Int)
(declare-fun x499 () Int)
(declare-fun x1851 () Int)
(declare-fun x1956 () Int)
(declare-fun x873 () Int)
(declare-fun x3166 () Int)
(declare-fun x744 () Int)
(declare-fun x2661 () Bool)
(declare-fun x2685 () Int)
(declare-fun x1069 () Int)
(declare-fun x1253 () Int)
(declare-fun x755 () Int)
(declare-fun x2719 () Bool)
(declare-fun x2864 () Int)
(declare-fun x575 () Int)
(declare-fun x3135 () Int)
(declare-fun x414 () Int)
(declare-fun x3070 () Int)
(declare-fun x1766 () Int)
(declare-fun x2750 () Int)
(declare-fun x2152 () Int)
(declare-fun x1385 () Int)
(declare-fun x187 () Bool)
(declare-fun x1268 () Int)
(declare-fun x1198 () Bool)
(declare-fun x379 () Int)
(declare-fun x1901 () Int)
(declare-fun x1975 () Int)
(declare-fun x838 () Bool)
(declare-fun x1083 () Int)
(declare-fun x2767 () Int)
(declare-fun x1610 () Int)
(declare-fun x859 () Int)
(declare-fun x2410 () Int)
(declare-fun x2736 () Int)
(declare-fun x1689 () Bool)
(declare-fun x1337 () Int)
(declare-fun x661 () Int)
(declare-fun x1927 () Bool)
(declare-fun x1029 () Int)
(declare-fun x1817 () Int)
(declare-fun x1880 () Int)
(declare-fun x2118 () Int)
(declare-fun x1514 () Int)
(declare-fun x321 () Int)
(declare-fun x2952 () Int)
(declare-fun x1590 () Int)
(declare-fun x2658 () Int)
(declare-fun x2235 () Int)
(declare-fun x1763 () Bool)
(declare-fun x1553 () Int)
(declare-fun x2253 () Int)
(declare-fun x1860 () Bool)
(declare-fun x1077 () Int)
(declare-fun x1653 () Int)
(declare-fun x1303 () Int)
(declare-fun x3109 () Int)
(declare-fun x382 () Int)
(declare-fun x1440 () Int)
(declare-fun x2343 () Int)
(declare-fun x2831 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x340 () Int)
(declare-fun x620 () Bool)
(declare-fun x1954 () Int)
(declare-fun x619 () Int)
(declare-fun x186 () Int)
(declare-fun x2784 () Int)
(declare-fun x1878 () Int)
(declare-fun x486 () Int)
(declare-fun x3167 () Int)
(declare-fun x1877 () Bool)
(declare-fun x2844 () Int)
(declare-fun x953 () Int)
(declare-fun x119 (Int) Int)
(declare-fun x878 () Int)
(declare-fun x2147 () Int)
(declare-fun x2023 () Int)
(declare-fun x2246 () Int)
(declare-fun x2298 () Bool)
(declare-fun x286 () Bool)
(declare-fun x1713 () Int)
(declare-fun x1920 () Bool)
(declare-fun x1572 () Int)
(declare-fun x660 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1495 () Int)
(declare-fun x2601 (Int Int) Int)
(declare-fun x2166 () Int)
(declare-fun x257 () Int)
(declare-fun x2286 () Int)
(declare-fun x115 () Int)
(declare-fun x1148 () Int)
(declare-fun x509 () Int)
(declare-fun x3050 () Int)
(declare-fun x2492 () Int)
(declare-fun x2123 () Int)
(declare-fun x463 () Int)
(declare-fun x932 () Int)
(declare-fun x682 () Int)
(declare-fun x593 () Int)
(declare-fun x1980 () Bool)
(declare-fun x3139 () Bool)
(declare-fun x2957 () Int)
(declare-fun x673 (Int Int) Int)
(declare-fun x2782 () Int)
(declare-fun x2261 () Bool)
(declare-fun x2106 () Int)
(declare-fun x937 () Int)
(declare-fun x1857 () Bool)
(declare-fun x479 () Int)
(declare-fun x1107 () Int)
(declare-fun x1875 () Int)
(declare-fun x71 () Int)
(declare-fun x3046 () Int)
(declare-fun x782 () Int)
(declare-fun x237 () Int)
(declare-fun x1099 () Bool)
(declare-fun x1098 () Int)
(declare-fun x1534 () Int)
(declare-fun x3174 () Bool)
(declare-fun x459 () Int)
(declare-fun x529 () Int)
(declare-fun x2429 () Int)
(declare-fun x1299 () Int)
(declare-fun x2683 () Int)
(declare-fun x962 () Int)
(declare-fun x1677 () Int)
(declare-fun x1715 () Int)
(declare-fun x369 () Int)
(declare-fun x1685 () Int)
(declare-fun x1651 () Int)
(declare-fun x2376 () Int)
(declare-fun x866 () Bool)
(declare-fun x73 () Int)
(declare-fun x1529 () Int)
(declare-fun x2866 () Int)
(declare-fun x2949 () Int)
(declare-fun x2080 () Int)
(declare-fun x1084 () Int)
(declare-fun x2759 () Int)
(declare-fun x1190 () Int)
(declare-fun x2290 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x410 () Bool)
(declare-fun x877 () Bool)
(declare-fun x3120 (Int) Int)
(declare-fun x2363 () Int)
(declare-fun x1745 () Int)
(declare-fun x784 () Int)
(declare-fun x263 () Bool)
(declare-fun x1775 () Int)
(declare-fun x935 () Int)
(declare-fun x120 () Bool)
(declare-fun x55 () Int)
(declare-fun x1259 (Int) Int)
(declare-fun x2761 () Int)
(declare-fun x1736 () Int)
(declare-fun x3098 () Bool)
(declare-fun x1979 () Int)
(declare-fun x2563 () Int)
(declare-fun x1105 () Int)
(declare-fun x753 () Int)
(declare-fun x59 () Int)
(declare-fun x1560 () Int)
(declare-fun x3079 () Int)
(declare-fun x148 () Bool)
(declare-fun x2196 () Int)
(declare-fun x3099 () Int)
(declare-fun x1313 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x3165 () Int)
(declare-fun x746 () Int)
(declare-fun x1597 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x2159 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x462 () Bool)
(declare-fun x1926 () Int)
(declare-fun x261 () Bool)
(declare-fun x904 () Bool)
(declare-fun x2234 () Int)
(declare-fun x1671 () Int)
(declare-fun x691 () Int)
(declare-fun x374 () Int)
(declare-fun x3014 () Int)
(declare-fun x1031 () Int)
(declare-fun x3009 () Int)
(declare-fun x26 () Int)
(declare-fun x626 () Int)
(declare-fun x283 () Bool)
(define-fun x484 ((x590 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x590) (>= x590 0)) x590 (- x590 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1200 ((x590 Int)) Int (ite (and (< x590 0) (>= x590 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x590 115792089237316195423570985008687907853269984665640564039457584007913129639936) x590))
(define-fun x734 ((x590 Int)) Int (ite (and (>= x590 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x590)) x590 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x590) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x590)) (- x590 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x590 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x590 0)) (+ x590 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x741 x590 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x563 ((x306 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x306) (<= 0 x306)))
(define-fun x824 ((x306 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x306) (>= x306 0)))
(define-fun x2243 ((x306 Int) (x1639 Int)) Bool (= (* x1639 x306) (x2536 x306 x1639)))
(define-fun x2796 ((x306 Int) (x1639 Int)) Bool (and (= (- (* (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936) x306) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2536 (- x306 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x2536 x306 (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x306 (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1639 x306) (* x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2536 (- x306 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1639))))
(define-fun x598 ((x306 Int) (x1639 Int)) Bool (=> (and (< 0 x306) (< 0 x1639)) (= (= x1639 (x117 (x734 (x2536 x306 x1639)) x306)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2536 x306 x1639)))))
(define-fun x834 ((x306 Int) (x1639 Int)) Bool (=> (and (not (= x1639 0)) (not (= 0 x306))) (and (= (x117 (x2536 x306 x1639) x306) x1639) (= (x117 (x2536 x306 x1639) x1639) x306))))
(define-fun x1333 ((x306 Int) (x1639 Int)) Bool (=> (and (< 0 x1639) (> x306 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2536 x306 x1639)) (< (x117 115792089237316195423570985008687907853269984665640564039457584007913129639935 x306) x1639))))
(define-fun x2202 ((x306 Int) (x1639 Int)) Bool (and (= (x734 (x2536 x306 x1639)) (x734 (x2536 x306 (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x734 (x2536 (- x306 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1639)) (x734 (x2536 x306 x1639))) (= (x734 (x2536 (- x306 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x734 (x2536 x306 x1639)))))
(define-fun x1783 ((x306 Int) (x1639 Int)) Bool (and (=> (and (and (<= x1639 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1639)) (and (> x306 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x306))) (= (>= (x117 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1639) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x306)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x2536 (- x306 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1639)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1639) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1639)) (and (> x306 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x306))) (= (<= (x2536 (- x306 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x117 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x306)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1639) (> x1639 0)) (and (< 0 x306) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x306))) (= (>= (x117 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1639) x306) (<= (x2536 x306 x1639) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1639) (<= x1639 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x306) (> x306 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1639) (x117 57896044618658097711785492504343953926634992332820282019728792003956564819968 x306)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x2536 x306 (- x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x406 ((x306 Int) (x1639 Int)) Bool (and (x2243 x306 x1639) (x1783 x306 x1639) (x834 x306 x1639) (x2202 x306 x1639) (x2796 x306 x1639) (x598 x306 x1639) (x1333 x306 x1639)))
(define-fun x2880 ((x306 Int)) Bool (and (= 0 (x2536 0 x306)) (= 0 (x2536 x306 0))))
(define-fun x2860 ((x306 Int)) Bool (and (= (x2536 x306 1) x306) (= (x2536 1 x306) x306)))
(define-fun x1965 ((x306 Int)) Bool (and (x2860 x306) (x2880 x306)))
(define-fun x2600 ((x306 Int)) Bool (and (= (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639935 x306) x306) (= x306 (x2601 x306 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1509 ((x306 Int)) Bool (and (= 0 (x2601 0 x306)) (= 0 (x2601 x306 0))))
(define-fun x1784 ((x306 Int)) Bool (= x306 (x2601 x306 x306)))
(define-fun x1195 ((x306 Int)) Bool (and (x2600 x306) (x1509 x306) (x1784 x306)))
(define-fun x684 ((x306 Int) (x1639 Int)) Bool (= (x2601 x306 x1639) (x2601 x1639 x306)))
(define-fun x305 ((x306 Int) (x1639 Int)) Bool (and (=> (<= 0 x306) (>= x306 (x2601 x306 x1639))) (<= 0 (x2601 x306 x1639)) (=> (<= 0 x1639) (>= x1639 (x2601 x306 x1639)))))
(define-fun x1967 ((x306 Int) (x1639 Int)) Bool (and (x305 x306 x1639) (x684 x306 x1639)))
(define-fun x1364 ((x306 Int)) Bool (= (x741 x306 1461501637330902918203684832716283019655932542976) (x2601 x306 1461501637330902918203684832716283019655932542975)))
(define-fun x564 ((x306 Int)) Bool (and (x1364 x306) (x1967 x306 1461501637330902918203684832716283019655932542975)))
(define-fun x281 ((x306 Int) (x1639 Int)) Bool (and (> x1639 (x741 x306 x1639)) (>= (x741 x306 x1639) 0)))
(define-fun x457 ((x306 Int) (x1639 Int)) Bool (=> (and (<= 0 x306) (> x1639 0)) (= (> x1639 x306) (= (x741 x306 x1639) x306))))
(define-fun x2451 ((x306 Int) (x1639 Int)) Bool (=> (and (and (>= x306 x1639) (< x306 (+ x1639 x1639))) (< 0 x1639)) (= (- x306 x1639) (x741 x306 x1639))))
(define-fun x1222 ((x306 Int) (x1639 Int)) Bool (=> (< 0 x1639) (= x306 (+ (* x1639 (x117 x306 x1639)) (x741 x306 x1639)))))
(define-fun x542 ((x306 Int) (x1639 Int)) Bool (and (x281 x306 x1639) (x1222 x306 x1639) (x2451 x306 x1639) (x457 x306 x1639)))
(define-fun x2277 ((x306 Int)) Bool (= (x741 0 x306) 0))
(define-fun x2664 ((x306 Int)) Bool (= 0 (x741 x306 1)))
(define-fun x875 ((x306 Int)) Bool (= (x741 x306 x306) 0))
(define-fun x648 ((x306 Int)) Bool (and (x2664 x306) (x875 x306) (x2277 x306)))
(define-fun x2164 ((x306 Int)) Bool (= (x734 x306) (+ (x741 x306 32) (x2601 x306 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x960 ((x306 Int)) Bool (and (x1967 x306 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2164 x306)))
(define-fun x1561 ((x306 Int) (x1639 Int)) Bool (=> (and (< 0 x1639) (< 0 x306)) (and (<= (x117 x306 x1639) x306) (<= 0 (x117 x306 x1639)))))
(define-fun x1180 ((x306 Int) (x1639 Int)) Bool (=> (and (and (>= x306 0) (< x306 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x1639 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x1639))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x117 x306 x1639)) (>= (x117 x306 x1639) 0))))
(define-fun x274 ((x306 Int) (x1639 Int)) Bool (=> (and (< x1639 x306) (> x1639 1)) (> x306 (x117 x306 x1639))))
(define-fun x1827 ((x306 Int) (x1639 Int)) Bool (=> (and (< 0 x1639) (< 0 x306)) (= (> x1639 x306) (= (x117 x306 x1639) 0))))
(define-fun x2814 ((x306 Int) (x1639 Int)) Bool (=> (and (> x1639 0) (> x306 0)) (and (<= (* x1639 (x117 x306 x1639)) x306) (< (- x306 x1639) (* x1639 (x117 x306 x1639))))))
(define-fun x1019 ((x306 Int) (x1639 Int)) Bool (= (- x306 (x2601 (- x1639 1) x306)) (* x1639 (x117 x306 x1639))))
(define-fun x1555 ((x306 Int) (x1639 Int)) Bool (and (x1827 x306 x1639) (x1180 x306 x1639) (x2814 x306 x1639) (x274 x306 x1639) (x1019 x306 x1639) (x1561 x306 x1639)))
(define-fun x2899 ((x306 Int)) Bool (= 0 (x117 0 x306)))
(define-fun x1066 ((x306 Int)) Bool (= x306 (x117 x306 1)))
(define-fun x1130 ((x306 Int)) Bool (=> (not (= x306 0)) (= (x117 x306 x306) 1)))
(define-fun x786 ((x306 Int)) Bool (and (x2899 x306) (x1066 x306) (x1130 x306)))
(define-fun x2143 ((x2652 Int)) Int (ite (> x2231 x2652) (x3007 x2652) 0))
(define-fun x2071 ((x2652 Int)) Int 0)
(define-fun x657 ((x2652 Int)) Int (x2236 x2652))
(define-fun x2573 ((x2652 Int)) Int (x370 x2652))
(define-fun x1438 ((x2652 Int)) Int (x1259 x2652))
(define-fun x29 ((x2652 Int)) Int (x2963 x2652))
(define-fun x1814 ((x2652 Int)) Int (x1068 x2652))
(define-fun x1369 ((x2652 Int)) Int 0)
(define-fun x63 ((x2652 Int)) Int (ite (= x2531 x2652) x177 (x3037 x2652)))
(define-fun x1243 ((x2652 Int)) Int (ite (= x321 x2652) x470 (x63 x2652)))
(define-fun x1049 ((x2652 Int)) Int 0)
(define-fun x2780 ((x2652 Int)) Int (ite (= x2652 4) 32 (x1049 x2652)))
(define-fun x1206 ((x2652 Int)) Int (ite (= x2652 36) x2698 (x2780 x2652)))
(define-fun x1496 ((x2652 Int)) Int (ite (= x2652 68) x747 (x1206 x2652)))
(define-fun x179 ((x2652 Int)) Int (ite (= x2652 100) x1610 (x1496 x2652)))
(define-fun x764 ((x2652 Int)) Int (ite (= 132 x2652) 352 (x179 x2652)))
(define-fun x2855 ((x2652 Int)) Int (ite (= 388 x2652) x2342 (x764 x2652)))
(define-fun x2933 ((x2652 Int)) Int (ite (and (< x2652 (+ x943 420)) (>= x2652 420)) (x657 (- x2652 420)) (x2855 x2652)))
(define-fun x3090 ((x2652 Int)) Int (ite (= x2652 164) x1500 (x2933 x2652)))
(define-fun x2597 ((x2652 Int)) Int (ite (= x2652 x550) x1791 (x3090 x2652)))
(define-fun x2740 ((x2652 Int)) Int (ite (and (>= x2652 x608) (> (+ x3193 x608) x2652)) (x2573 (- x2652 x608)) (x2597 x2652)))
(define-fun x1325 ((x2652 Int)) Int (ite (= x2652 196) x519 (x2740 x2652)))
(define-fun x2200 ((x2652 Int)) Int (ite (= x2652 x1007) x1233 (x1325 x2652)))
(define-fun x681 ((x2652 Int)) Int (ite (and (>= x2652 x1873) (> (+ x2494 x1873) x2652)) (x1438 (- x2652 x1873)) (x2200 x2652)))
(define-fun x342 ((x2652 Int)) Int (ite (= x2652 228) x107 (x681 x2652)))
(define-fun x733 ((x2652 Int)) Int (ite (= x1640 x2652) x2019 (x342 x2652)))
(define-fun x586 ((x2652 Int)) Int (ite (and (>= x2652 x3132) (> (+ x3132 x2019) x2652)) (x29 (- x2652 x3132)) (x733 x2652)))
(define-fun x1228 ((x2652 Int)) Int (ite (= x2652 260) x2332 (x586 x2652)))
(define-fun x2223 ((x2652 Int)) Int (ite (= x1321 x2652) x2746 (x1228 x2652)))
(define-fun x1943 ((x2652 Int)) Int (ite (and (>= x2652 x616) (> (+ x616 x1914) x2652)) (x1814 (- x2652 x616)) (x2223 x2652)))
(define-fun x2442 ((x2652 Int)) Int (ite (= x2652 292) x115 (x1943 x2652)))
(define-fun x1332 ((x2652 Int)) Int (ite (= 324 x2652) x1202 (x2442 x2652)))
(define-fun x2818 ((x2652 Int)) Int (ite (= 356 x2652) x14 (x1332 x2652)))
(define-fun x1789 ((x2652 Int)) Int (ite (= x2508 x2652) x918 (x1243 x2652)))
(define-fun x251 ((x2652 Int)) Int (ite (= x2652 x1603) x112 (x1789 x2652)))
(define-fun x1716 ((x2652 Int)) Int (ite (= 128 x2652) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x2071 x2652)))
(define-fun x2370 ((x2652 Int)) Int (ite (= 132 x2652) x3045 (x1716 x2652)))
(define-fun x1655 ((x2652 Int)) Int (ite (= 164 x2652) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x2370 x2652)))
(define-fun x2792 ((x2652 Int)) Int (ite (and (<= 128 x2652) (< x2652 160)) (x1352 (- x2652 128)) (x1655 x2652)))
(define-fun x1904 ((x2652 Int)) Int (ite x1718 (x2792 x2652) (x1655 x2652)))
(define-fun x1126 ((x2652 Int)) Int (ite (and (>= x2652 128) (> 160 x2652)) (x1352 (- x2652 128)) (x1904 x2652)))
(define-fun x2108 ((x2652 Int)) Int (ite (= 288 x2652) x488 (x1126 x2652)))
(define-fun x2745 ((x2652 Int)) Int (ite (= x2652 160) 288 (x2108 x2652)))
(define-fun x1955 ((x2652 Int)) Int (ite (= 320 x2652) x2923 (x2745 x2652)))
(define-fun x905 ((x2652 Int)) Int (ite (= x2652 352) x2779 (x1955 x2652)))
(define-fun x1659 ((x2652 Int)) Int (ite (= x2652 448) x1850 (x905 x2652)))
(define-fun x1231 ((x2652 Int)) Int (ite (= x2652 x2050) x441 (x1659 x2652)))
(define-fun x2464 ((x2652 Int)) Int (ite (= x2652 x682) x2024 (x1231 x2652)))
(define-fun x456 ((x2652 Int)) Int (ite (= x2652 x2499) x1779 (x2464 x2652)))
(define-fun x2708 ((x2652 Int)) Int (ite (and (>= x2652 x445) (> (+ x1779 x445) x2652)) (x2818 (- (+ x2652 x2928) x445)) (x456 x2652)))
(define-fun x2349 ((x2652 Int)) Int (ite (= x2825 x2652) 0 (x2708 x2652)))
(define-fun x1446 ((x2652 Int)) Int (ite (= x1307 x2652) x2499 (x2349 x2652)))
(define-fun x1266 ((x2652 Int)) Int (ite (= x2652 480) x2050 (x1446 x2652)))
(define-fun x2306 ((x2652 Int)) Int (ite x2467 (x1659 x2652) (x1266 x2652)))
(define-fun x2033 ((x2652 Int)) Int (ite (= 384 x2652) 448 (x2306 x2652)))
(define-fun x1365 ((x2652 Int)) Int (ite (= x78 x2652) x659 (x2033 x2652)))
(define-fun x1419 ((x2652 Int)) Int (ite (and (<= x2647 x2652) (> (+ x659 x2647) x2652)) (x2818 (- (+ x2652 x509) x2647)) (x1365 x2652)))
(define-fun x1842 ((x2652 Int)) Int (ite (= x2652 x1820) 0 (x1419 x2652)))
(define-fun x2667 ((x2652 Int)) Int (ite (= 416 x2652) x78 (x1842 x2652)))
(define-fun x2747 ((x2652 Int)) Int (ite (= x2652 192) 320 (x2667 x2652)))
(define-fun x1217 ((x2652 Int)) Int (ite (= x2652 224) x250 (x2747 x2652)))
(define-fun x197 ((x2652 Int)) Int (ite (= 256 x2652) x74 (x1217 x2652)))
(define-fun x446 ((x2652 Int)) Int (ite (= x2652 x1813) x1376 (x197 x2652)))
(define-fun x2413 ((x2652 Int)) Int (ite (and (<= x2151 x2652) (< x2652 (+ x2151 x1376))) (x2818 (- (+ x2652 x2292) x2151)) (x446 x2652)))
(define-fun x1870 ((x2652 Int)) Int (ite (= x3046 x2652) 0 (x2413 x2652)))
(define-fun x2869 ((x2652 Int)) Int (ite (= x379 x2652) x565 (x1870 x2652)))
(define-fun x714 ((x2652 Int)) Int (ite (= x2184 x2652) x2705 (x2869 x2652)))
(define-fun x947 ((x2652 Int)) Int (ite (= x2652 x901) x2888 (x714 x2652)))
(define-fun x2431 ((x2652 Int)) Int (ite (= x2652 x1353) x2325 (x947 x2652)))
(define-fun x1331 ((x2652 Int)) Int (ite (= x2652 x436) x1933 (x2431 x2652)))
(define-fun x2498 ((x2652 Int)) Int (ite (= x2652 x1644) x1976 (x1331 x2652)))
(define-fun x1359 ((x2652 Int)) Int (ite (= x2871 x2652) x1565 (x2498 x2652)))
(define-fun x1963 ((x2652 Int)) Int (ite (= x2652 x2288) x1353 (x1359 x2652)))
(define-fun x1205 ((x2652 Int)) Int (ite x161 (x947 x2652) (x1963 x2652)))
(define-fun x2895 ((x2652 Int)) Int (ite (= x1530 x2652) x901 (x1205 x2652)))
(define-fun x1507 ((x2652 Int)) Int (ite (= x957 x2652) x933 (x2895 x2652)))
(define-fun x1135 ((x2652 Int)) Int (ite (= x3135 x2652) x2781 (x1507 x2652)))
(define-fun x1605 ((x2652 Int)) Int (ite (= x525 x2652) x1705 (x1135 x2652)))
(define-fun x2174 ((x2652 Int)) Int (ite (= x2652 x885) x852 (x1605 x2652)))
(define-fun x1272 ((x2652 Int)) Int (ite (= x2652 x3158) x1576 (x2174 x2652)))
(define-fun x2955 ((x2652 Int)) Int (ite (= x2652 x1009) x2489 (x1272 x2652)))
(define-fun x1960 ((x2652 Int)) Int (ite (= x2652 x2873) x3135 (x2955 x2652)))
(define-fun x1700 ((x2652 Int)) Int (ite x326 (x1507 x2652) (x1960 x2652)))
(define-fun x2932 ((x2652 Int)) Int (ite (= x2699 x2652) x957 (x1700 x2652)))
(define-fun x1255 ((x2652 Int)) Int (ite (= x3163 x2652) x2548 (x2932 x2652)))
(define-fun x2520 ((x2652 Int)) Int (ite (= x2652 x1105) x2340 (x1255 x2652)))
(define-fun x411 ((x2652 Int)) Int (ite (= x3097 x2652) x2060 (x2520 x2652)))
(define-fun x2503 ((x2652 Int)) Int (ite (= x2480 x2652) x2430 (x411 x2652)))
(define-fun x3129 ((x2652 Int)) Int (ite (= x2652 x1653) x1050 (x2503 x2652)))
(define-fun x210 ((x2652 Int)) Int (ite (= x176 x2652) x1474 (x3129 x2652)))
(define-fun x203 ((x2652 Int)) Int (ite (= x2652 x2717) x1105 (x210 x2652)))
(define-fun x3049 ((x2652 Int)) Int (ite x2906 (x1255 x2652) (x203 x2652)))
(define-fun x270 ((x2652 Int)) Int (ite (= x2652 x2343) x3163 (x3049 x2652)))
(define-fun x1137 ((x2652 Int)) Int (ite (= x2142 x2652) x3082 (x270 x2652)))
(define-fun x249 ((x2652 Int)) Int (ite (= x2078 x2652) x1208 (x1137 x2652)))
(define-fun x17 ((x2652 Int)) Int (ite (= x2652 x1494) x473 (x249 x2652)))
(define-fun x694 ((x2652 Int)) Int (ite (= x2652 x2970) x3116 (x17 x2652)))
(define-fun x1056 ((x2652 Int)) Int (ite (= x2652 x970) x2545 (x694 x2652)))
(define-fun x1171 ((x2652 Int)) Int (ite (= x2652 x1048) x93 (x1056 x2652)))
(define-fun x2281 ((x2652 Int)) Int (ite (and (> (+ x950 x3064) x2652) (>= x2652 x3064)) (x2818 (- (+ x1802 x2652) x3064)) (x1171 x2652)))
(define-fun x162 ((x2652 Int)) Int (ite x343 (x1171 x2652) (x2281 x2652)))
(define-fun x2388 ((x2652 Int)) Int (ite (= x2652 x3) x2186 (x162 x2652)))
(define-fun x2900 ((x2652 Int)) Int (ite (= x2652 x2786) x479 (x2388 x2652)))
(define-fun x697 ((x2652 Int)) Int (ite (= x1323 x2652) x2199 (x2900 x2652)))
(define-fun x2145 ((x2652 Int)) Int (ite (= x2652 x822) 128 (x697 x2652)))
(define-fun x2316 ((x2652 Int)) Int (ite (= x60 x2652) x2627 (x2145 x2652)))
(define-fun x1699 ((x2652 Int)) Int (ite (= x2652 x3069) x2682 (x2316 x2652)))
(define-fun x10 ((x2652 Int)) Int (ite (= x2765 x2652) x541 (x1699 x2652)))
(define-fun x2269 ((x2652 Int)) Int (ite (= x1396 x2652) x984 (x10 x2652)))
(define-fun x2501 ((x2652 Int)) Int (ite (= x2652 x1023) x876 (x2269 x2652)))
(define-fun x2067 ((x2652 Int)) Int (ite x502 (x2269 x2652) (ite x2598 (x10 x2652) (ite x341 (x1699 x2652) (ite x2452 (x2316 x2652) (x2501 x2652))))))
(define-fun x2089 ((x2652 Int)) Int (ite (= x2830 x2652) 0 (x2067 x2652)))
(define-fun x2475 ((x2652 Int)) Int (ite (= x2559 x2652) x1139 (x2089 x2652)))
(define-fun x2755 ((x2652 Int)) Int (ite (= x1518 x2652) x156 (x2475 x2652)))
(define-fun x1001 ((x2652 Int)) Int (ite x712 (x162 x2652) (x2755 x2652)))
(define-fun x2921 ((x2652 Int)) Int (ite (= x845 x2652) x2543 (x1001 x2652)))
(define-fun x2574 ((x2652 Int)) Int (ite (= x2068 x2652) x2150 (x2921 x2652)))
(define-fun x967 ((x2652 Int)) Int (ite (= x951 x2652) x1719 (x2574 x2652)))
(define-fun x1847 ((x2652 Int)) Int (ite (= x2652 x1170) x2422 (x967 x2652)))
(define-fun x3063 ((x2652 Int)) Int (ite x258 (x967 x2652) (ite x1917 (x2574 x2652) (ite x1427 (x2921 x2652) (ite x375 (x1001 x2652) (x1847 x2652))))))
(define-fun x2434 ((x2652 Int)) Int (ite (= x2652 x3131) x1084 (x3063 x2652)))
(define-fun x2154 ((x2652 Int)) Int (ite (= x1075 x2652) x2240 (x2434 x2652)))
(define-fun x253 ((x2652 Int)) Int (ite (= x1573 x2652) x1822 (x2154 x2652)))
(define-fun x2554 ((x2652 Int)) Int (ite (= x2652 x320) x1741 (x253 x2652)))
(define-fun x4 ((x2652 Int)) Int (ite (= x1720 x2652) x9 (x2554 x2652)))
(define-fun x2951 ((x2652 Int)) Int (ite (= x2652 x1138) x1525 (x4 x2652)))
(define-fun x2064 ((x2652 Int)) Int (ite (= x708 x2652) x971 (x2951 x2652)))
(define-fun x2435 ((x2652 Int)) Int (ite (= x2652 x1220) x2189 (x2064 x2652)))
(define-fun x625 ((x2652 Int)) Int (ite (= x1627 x2652) x1426 (x2435 x2652)))
(define-fun x2004 ((x2652 Int)) Int (ite (= x3033 x2652) x1821 (x625 x2652)))
(define-fun x1883 ((x2652 Int)) Int (ite (= x2652 x2241) x2655 (x2004 x2652)))
(define-fun x1133 ((x2652 Int)) Int (ite (= x2652 x740) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x1883 x2652)))
(define-fun x1502 ((x2652 Int)) Int (ite (= x2652 x737) x833 (x1133 x2652)))
(define-fun x2487 ((x2652 Int)) Int (ite (= x2652 x423) x2279 (x1502 x2652)))
(define-fun x789 ((x2652 Int)) Int (ite (= x740 x2652) 0 (x2487 x2652)))
(define-fun x2535 ((x2652 Int)) Int (ite (= x80 x2652) x2839 (x789 x2652)))
(define-fun x572 ((x2652 Int)) Int (ite (= x2387 x2652) x3171 (x2535 x2652)))
(define-fun x1566 ((x2652 Int)) Int (ite (= x2652 x2308) x919 (x572 x2652)))
(define-fun x803 ((x2652 Int)) Int (ite (= x2652 x2056) x2110 (x1566 x2652)))
(define-fun x669 ((x2652 Int)) Int (ite (= x1370 x2652) x1651 (x803 x2652)))
(define-fun x1569 ((x2652 Int)) Int (ite x3113 (ite x351 (x669 x2652) (ite x2207 (x669 x2652) (x2487 x2652))) (x2487 x2652)))
(define-fun x378 ((x2652 Int)) Int (ite (= x198 x2652) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x1569 x2652)))
(define-fun x1448 ((x2652 Int)) Int (ite (= x2652 x2715) x1 (x378 x2652)))
(define-fun x2823 ((x2652 Int)) Int (ite (= x1945 x2652) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x1448 x2652)))
(define-fun x1101 ((x2652 Int)) Int (ite (and (> (+ 32 x198) x2652) (>= x2652 x198)) (x2195 (- x2652 x198)) (x2823 x2652)))
(define-fun x238 ((x2652 Int)) Int (ite x1434 (x1101 x2652) (x2823 x2652)))
(define-fun x3125 ((x2652 Int)) Int (ite (and (< x2652 (+ x198 32)) (<= x198 x2652)) (x2195 (- x2652 x198)) (x238 x2652)))
(define-fun x1147 ((x2652 Int)) Int (ite (= x576 x2652) x963 (x3125 x2652)))
(define-fun x1187 ((x2652 Int)) Int (ite (and (<= x499 x2652) (< x2652 (+ x1304 x499))) (x2818 (- (+ x1802 x2652) x499)) (x1147 x2652)))
(define-fun x329 ((x2652 Int)) Int (ite x1887 (x1147 x2652) (x1187 x2652)))
(define-fun x2327 ((x2652 Int)) Int (ite (= x2652 x2849) x2186 (x329 x2652)))
(define-fun x2700 ((x2652 Int)) Int (ite (= x1351 x2652) x2991 (x2327 x2652)))
(define-fun x350 ((x2652 Int)) Int (ite (= x1709 x2652) x1893 (x2700 x2652)))
(define-fun x1033 ((x2652 Int)) Int (ite (= x2547 x2652) 128 (x350 x2652)))
(define-fun x2446 ((x2652 Int)) Int (ite (= x2652 x233) x2217 (x1033 x2652)))
(define-fun x689 ((x2652 Int)) Int (ite (= x2652 x2495) x2356 (x2446 x2652)))
(define-fun x28 ((x2652 Int)) Int (ite (= x2399 x2652) x294 (x689 x2652)))
(define-fun x39 ((x2652 Int)) Int (ite (= x2652 x2136) x887 (x28 x2652)))
(define-fun x2302 ((x2652 Int)) Int (ite (= x2258 x2652) x860 (x39 x2652)))
(define-fun x2876 ((x2652 Int)) Int (ite x1433 (x39 x2652) (ite x2826 (x28 x2652) (ite x1018 (x689 x2652) (ite x397 (x2446 x2652) (x2302 x2652))))))
(define-fun x100 ((x2652 Int)) Int (ite (= x2170 x2652) 0 (x2876 x2652)))
(define-fun x2012 ((x2652 Int)) Int (ite (= x2652 x2385) x1742 (x100 x2652)))
(define-fun x528 ((x2652 Int)) Int (ite (= x2618 x2652) x518 (x2012 x2652)))
(define-fun x785 ((x2652 Int)) Int (ite x1680 (x329 x2652) (x528 x2652)))
(define-fun x2753 ((x2652 Int)) Int (ite (= x2392 x2652) x1768 (x785 x2652)))
(define-fun x330 ((x2652 Int)) Int (ite (= x2040 x2652) x1054 (x2753 x2652)))
(define-fun x637 ((x2652 Int)) Int (ite (= x2317 x2652) x2968 (x330 x2652)))
(define-fun x1005 ((x2652 Int)) Int (ite (= x2213 x2652) x337 (x637 x2652)))
(define-fun x594 ((x2652 Int)) Int (ite x1167 (x637 x2652) (ite x261 (x330 x2652) (ite x467 (x2753 x2652) (ite x1900 (x785 x2652) (x1005 x2652))))))
(define-fun x361 ((x2652 Int)) Int (ite (= x384 x2652) x3009 (x594 x2652)))
(define-fun x3169 ((x2652 Int)) Int (ite (= x206 x2652) x2240 (x361 x2652)))
(define-fun x30 ((x2652 Int)) Int (ite (= x2652 x2221) x1432 (x3169 x2652)))
(define-fun x827 ((x2652 Int)) Int (ite (= x1780 x2652) x1708 (x30 x2652)))
(define-fun x2035 ((x2652 Int)) Int (ite (= x2652 x1618) x1263 (x827 x2652)))
(define-fun x2449 ((x2652 Int)) Int (ite (= x2652 x1930) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x2035 x2652)))
(define-fun x675 ((x2652 Int)) Int (ite (= x2652 x2890) x2158 (x2449 x2652)))
(define-fun x1673 ((x2652 Int)) Int (ite (and (< x2652 (+ 32 x1930)) (>= x2652 x1930)) (x864 (- x2652 x1930)) (x675 x2652)))
(define-fun x687 ((x2652 Int)) Int (ite x1311 (x1673 x2652) (x675 x2652)))
(define-fun x945 ((x2652 Int)) Int (ite (and (>= x2652 x1930) (> (+ x1930 32) x2652)) (x864 (- x2652 x1930)) (x687 x2652)))
(define-fun x2053 ((x2652 Int)) Int (ite (= x2652 x464) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x945 x2652)))
(define-fun x2517 ((x2652 Int)) Int (ite (= x2652 x141) x2541 (x2053 x2652)))
(define-fun x312 ((x2652 Int)) Int (ite (and (> (+ x464 32) x2652) (>= x2652 x464)) (x288 (- x2652 x464)) (x2517 x2652)))
(define-fun x965 ((x2652 Int)) Int (ite x2022 (x312 x2652) (x2517 x2652)))
(define-fun x194 ((x2652 Int)) Int (ite (and (<= x464 x2652) (> (+ x464 32) x2652)) (x288 (- x2652 x464)) (x965 x2652)))
(define-fun x102 ((x2652 Int)) Int (ite (= x863 x2652) x1104 (x194 x2652)))
(define-fun x151 ((x2652 Int)) Int (ite (= x2652 x1767) 0 (x102 x2652)))
(define-fun x522 ((x2652 Int)) Int (ite (= x1836 x2652) 0 (x151 x2652)))
(define-fun x1693 ((x2652 Int)) Int (ite (= x2540 x2652) 0 (x522 x2652)))
(define-fun x2020 ((x2652 Int)) Int (ite (= x2652 x642) 0 (x1693 x2652)))
(define-fun x2984 ((x2652 Int)) Int (ite (= x2652 x2167) 0 (x2020 x2652)))
(define-fun x1535 ((x2652 Int)) Int (ite (= x2652 x123) x1767 (x2984 x2652)))
(define-fun x1944 ((x2652 Int)) Int (ite (= x2652 x1698) 0 (x1535 x2652)))
(define-fun x3081 ((x2652 Int)) Int (ite (= x2652 x2131) 0 (x1944 x2652)))
(define-fun x899 ((x2652 Int)) Int (ite (= x2652 x3078) 0 (x3081 x2652)))
(define-fun x2497 ((x2652 Int)) Int (ite (= x2652 x2689) 0 (x899 x2652)))
(define-fun x226 ((x2652 Int)) Int (ite (= x2652 x2653) 0 (x2497 x2652)))
(define-fun x245 ((x2652 Int)) Int (ite (= x1386 x2652) x1698 (x226 x2652)))
(define-fun x526 ((x2652 Int)) Int (ite x1383 (x102 x2652) (ite x1463 (x1535 x2652) (x245 x2652))))
(define-fun x2760 ((x2652 Int)) Int (ite (= x2015 x2652) x2254 (x526 x2652)))
(define-fun x1482 ((x2652 Int)) Int (ite (= x2652 x761) 0 (x2760 x2652)))
(define-fun x711 ((x2652 Int)) Int (ite (= x2652 x248) x1349 (x1482 x2652)))
(define-fun x1667 ((x2652 Int)) Int (ite (= x1750 x2652) x617 (x711 x2652)))
(define-fun x879 ((x2652 Int)) Int (ite (= x2652 x2321) x3123 (x1667 x2652)))
(define-fun x1399 ((x2652 Int)) Int (ite (= x239 x2652) x2015 (x879 x2652)))
(define-fun x2553 ((x2652 Int)) Int (ite x1158 (x526 x2652) (x1399 x2652)))
(define-fun x1286 ((x2652 Int)) Int (ite (= x781 x2652) 2 (x2553 x2652)))
(define-fun x1616 ((x2652 Int)) Int (ite (= x1796 x2652) 0 (x1286 x2652)))
(define-fun x354 ((x2652 Int)) Int (ite (= x2652 x2606) x961 (x1616 x2652)))
(define-fun x1040 ((x2652 Int)) Int (ite (= x1728 x2652) x3020 (x354 x2652)))
(define-fun x973 ((x2652 Int)) Int (ite (= x952 x2652) x1515 (x1040 x2652)))
(define-fun x2025 ((x2652 Int)) Int (ite (= x2652 x2924) x781 (x973 x2652)))
(define-fun x1368 ((x2652 Int)) Int (ite (= x2652 x2015) x1729 (x526 x2652)))
(define-fun x214 ((x2652 Int)) Int (ite (= x2652 x810) x147 (x1368 x2652)))
(define-fun x1230 ((x2652 Int)) Int (ite (= x2312 x2652) x2582 (x214 x2652)))
(define-fun x1447 ((x2652 Int)) Int (ite (= x2652 x1889) x211 (x1230 x2652)))
(define-fun x1290 ((x2652 Int)) Int (ite (= x1424 x2652) x2683 (x1447 x2652)))
(define-fun x408 ((x2652 Int)) Int (ite (= x1152 x2652) x2015 (x1290 x2652)))
(define-fun x1441 ((x2652 Int)) Int (ite x1920 (x526 x2652) (x408 x2652)))
(define-fun x1753 ((x2652 Int)) Int (ite x366 (ite x2764 (x2553 x2652) (x2025 x2652)) (ite x1306 (x526 x2652) (x1441 x2652))))
(define-fun x1106 ((x2652 Int)) Int (ite (= x2036 x2652) 0 (x1753 x2652)))
(define-fun x2953 ((x2652 Int)) Int (ite (= x2856 x2652) x96 (x1106 x2652)))
(define-fun x272 ((x2652 Int)) Int (ite (= x3153 x2652) x1670 (x2953 x2652)))
(define-fun x1606 ((x2652 Int)) Int (ite (= x2095 x2652) x3087 (x272 x2652)))
(define-fun x2913 ((x2652 Int)) Int (ite (= x2652 x2059) x758 (x1606 x2652)))
(define-fun x41 ((x2652 Int)) Int (ite (= x2036 x2652) 32 (x2913 x2652)))
(define-fun x387 ((x2652 Int)) Int (ite (= x2652 x3030) 0 (x41 x2652)))
(define-fun x1892 ((x2652 Int)) Int (ite x2165 (x2913 x2652) (x387 x2652)))
(define-fun x1379 ((x2652 Int)) Int (ite (= x2652 x2036) x434 (x1892 x2652)))
(define-fun x444 ((x2652 Int)) Int (ite (= x2652 x2080) x2901 (x1379 x2652)))
(define-fun x690 ((x2652 Int)) Int (ite (= x2652 x2751) x1269 (x444 x2652)))
(define-fun x2723 ((x2652 Int)) Int (ite (= x859 x2652) x1919 (x690 x2652)))
(define-fun x2794 ((x2652 Int)) Int (ite x2665 (x1106 x2652) (x2723 x2652)))
(define-fun x298 ((x2652 Int)) Int (ite x1647 (x1106 x2652) (x2794 x2652)))
(define-fun x1788 ((x2652 Int)) Int (ite (= x2010 x2652) x2518 (x298 x2652)))
(define-fun x1830 ((x2652 Int)) Int (ite (= x2604 x2652) x863 (x1788 x2652)))
(define-fun x170 ((x2652 Int)) Int (ite (= x2652 x135) x2270 (x1830 x2652)))
(define-fun x3085 ((x2652 Int)) Int (ite (= x2652 x3166) x911 (x170 x2652)))
(define-fun x3031 ((x2652 Int)) Int (ite (= x2652 x2043) x1765 (x3085 x2652)))
(define-fun x1221 ((x2652 Int)) Int (ite (= x2652 x2949) x2706 (x3031 x2652)))
(define-fun x2397 ((x2652 Int)) Int (ite (= x2652 x1191) x1704 (x1221 x2652)))
(define-fun x934 ((x2652 Int)) Int (ite (= x2652 x2509) x715 (x2397 x2652)))
(define-fun x2105 ((x2652 Int)) Int (ite (= x1308 x2652) x127 (x934 x2652)))
(define-fun x215 ((x2652 Int)) Int (ite (= x2652 x2076) x2994 (x2105 x2652)))
(define-fun x2526 ((x2652 Int)) Int (ite (and (>= x2652 x1294) (< x2652 (+ x83 x1294))) (x2818 (- (+ x2652 x1802) x1294)) (x215 x2652)))
(define-fun x1630 ((x2652 Int)) Int (ite x1778 (x2407 x2652) (x2926 x2652)))
(define-fun x2381 ((x2652 Int)) Int (ite x1702 (x215 x2652) (x2526 x2652)))
(define-fun x328 ((x2652 Int)) Int (ite (= x2652 x722) x2506 (x2381 x2652)))
(define-fun x2989 ((x2652 Int)) Int (ite (and (> (+ x1692 x1415) x2652) (<= x1692 x2652)) (x2818 (- (+ x1802 x2652) x1692)) (x328 x2652)))
(define-fun x2977 ((x2652 Int)) Int (ite x2215 (x328 x2652) (x2989 x2652)))
(define-fun x2972 ((x2652 Int)) Int (ite (= x3187 x2652) x1800 (x2977 x2652)))
(define-fun x2205 ((x2652 Int)) Int (ite (= x1459 x2652) x1546 (x2972 x2652)))
(define-fun x2176 ((x2652 Int)) Int (ite (= x2652 x929) x2384 (x2205 x2652)))
(define-fun x2639 ((x2652 Int)) Int (ite (= x2402 x2652) x784 (x2176 x2652)))
(define-fun x1309 ((x2652 Int)) Int (ite (= x2515 x2652) x3106 (x2639 x2652)))
(define-fun x1645 ((x2652 Int)) Int (ite (= x917 x2652) x2097 (x1309 x2652)))
(define-fun x1662 ((x2652 Int)) Int (ite (= x1197 x2652) x568 (x1645 x2652)))
(define-fun x2355 ((x2652 Int)) Int (ite (= x2652 x755) x413 (x1662 x2652)))
(define-fun x2566 ((x2652 Int)) Int (ite x2590 (x2977 x2652) (x2355 x2652)))
(define-fun x2738 ((x2652 Int)) Int (ite (= x45 x2652) x2186 (x2566 x2652)))
(define-fun x121 ((x2652 Int)) Int (ite (= x2652 x2275) x2632 (x2738 x2652)))
(define-fun x252 ((x2652 Int)) Int (ite (= x607 x2652) x1875 (x121 x2652)))
(define-fun x2820 ((x2652 Int)) Int (ite (= x2206 x2652) 128 (x252 x2652)))
(define-fun x202 ((x2652 Int)) Int (ite (= x2652 x1921) x1579 (x2820 x2652)))
(define-fun x1913 ((x2652 Int)) Int (ite (= x2652 x383) x2161 (x202 x2652)))
(define-fun x2722 ((x2652 Int)) Int (ite (= x763 x2652) x2769 (x1913 x2652)))
(define-fun x2426 ((x2652 Int)) Int (ite (= x2652 x1849) x1468 (x2722 x2652)))
(define-fun x451 ((x2652 Int)) Int (ite (= x2652 x521) x2979 (x2426 x2652)))
(define-fun x531 ((x2652 Int)) Int (ite x1265 (x2426 x2652) (ite x1841 (x2722 x2652) (ite x3103 (x1913 x2652) (ite x1347 (x202 x2652) (x451 x2652))))))
(define-fun x1939 ((x2652 Int)) Int (ite (= x2652 x2767) 0 (x531 x2652)))
(define-fun x644 ((x2652 Int)) Int (ite (= x2256 x2652) x2179 (x1939 x2652)))
(define-fun x2710 ((x2652 Int)) Int (ite (= x61 x2652) x2115 (x644 x2652)))
(define-fun x32 ((x2652 Int)) Int (ite x1141 (x2566 x2652) (x2710 x2652)))
(define-fun x1634 ((x2652 Int)) Int (ite (= x2652 x2147) x2612 (x32 x2652)))
(define-fun x357 ((x2652 Int)) Int (ite (= x1456 x2652) x503 (x1634 x2652)))
(define-fun x2605 ((x2652 Int)) Int (ite (= x2652 x2096) x1812 (x357 x2652)))
(define-fun x420 ((x2652 Int)) Int (ite (= x2589 x2652) x1462 (x2605 x2652)))
(define-fun x21 ((x2652 Int)) Int (ite x1262 (x2605 x2652) (ite x3089 (x357 x2652) (ite x1476 (x1634 x2652) (ite x2613 (x32 x2652) (x420 x2652))))))
(define-fun x754 ((x2652 Int)) Int (ite (= x2865 x2652) x1416 (x21 x2652)))
(define-fun x2414 ((x2652 Int)) Int (ite (= x2652 x1083) x2805 (x754 x2652)))
(define-fun x1284 ((x2652 Int)) Int (ite (= x2652 x2394) x2883 (x2414 x2652)))
(define-fun x2072 ((x2652 Int)) Int (ite (= x2652 x2637) x3073 (x1284 x2652)))
(define-fun x129 ((x2652 Int)) Int (ite (= x849 x2652) x699 (x2072 x2652)))
(define-fun x2198 ((x2652 Int)) Int (ite x2367 (x2072 x2652) (ite x2181 (x1284 x2652) (ite x2704 (x2414 x2652) (ite x2063 (x754 x2652) (x129 x2652))))))
(define-fun x2417 ((x2652 Int)) Int (ite (= x2652 x1690) x293 (x2198 x2652)))
(define-fun x2623 ((x2652 Int)) Int (ite (= x2652 x314) x1320 (x2417 x2652)))
(define-fun x2983 ((x2652 Int)) Int (ite (= x2652 x815) x2445 (x2623 x2652)))
(define-fun x1082 ((x2652 Int)) Int (ite (= x812 x2652) x1385 (x2983 x2652)))
(define-fun x900 ((x2652 Int)) Int (ite (= x2652 x1962) x1521 (x1082 x2652)))
(define-fun x1215 ((x2652 Int)) Int (ite (= x1958 x2652) x1574 (x900 x2652)))
(define-fun x2922 ((x2652 Int)) Int (ite (= x2652 x2602) x429 (x1215 x2652)))
(define-fun x1169 ((x2652 Int)) Int (ite (= x2259 x2652) x1818 (x2922 x2652)))
(define-fun x1554 ((x2652 Int)) Int (ite (= x788 x2652) x966 (x1169 x2652)))
(define-fun x309 ((x2652 Int)) Int (ite (= x1219 x2652) x2762 (x1554 x2652)))
(define-fun x2338 ((x2652 Int)) Int (ite (= x2843 x2652) x2474 (x309 x2652)))
(define-fun x2088 ((x2652 Int)) Int (ite (= x1989 x2652) x2884 (x2338 x2652)))
(define-fun x2415 ((x2652 Int)) Int (ite (= x54 x2652) 0 (x2088 x2652)))
(define-fun x1903 ((x2652 Int)) Int (ite (= x1994 x2652) 0 (x2415 x2652)))
(define-fun x2436 ((x2652 Int)) Int (ite (= x2652 x3065) x54 (x1903 x2652)))
(define-fun x2787 ((x2652 Int)) Int (ite (= x2406 x2652) 0 (x2436 x2652)))
(define-fun x405 ((x2652 Int)) Int (ite (= x672 x2652) 0 (x2787 x2652)))
(define-fun x523 ((x2652 Int)) Int (ite (= x2652 x168) x2406 (x405 x2652)))
(define-fun x2591 ((x2652 Int)) Int (ite x2741 (x2088 x2652) (ite x1484 (x2436 x2652) (x523 x2652))))
(define-fun x1051 ((x2652 Int)) Int (ite (= x2652 x1151) x844 (x2591 x2652)))
(define-fun x1223 ((x2652 Int)) Int (ite (= x2029 x2652) x3182 (x1051 x2652)))
(define-fun x807 ((x2652 Int)) Int (ite (= x2652 x2537) x1151 (x1223 x2652)))
(define-fun x2046 ((x2652 Int)) Int (ite x5 (x2591 x2652) (x807 x2652)))
(define-fun x2280 ((x2652 Int)) Int (ite (= x1519 x2652) 32542679537407071897843112657522291873774333932075415528008786499928730894336 (x2046 x2652)))
(define-fun x1116 ((x2652 Int)) Int (ite (= x1358 x2652) x3117 (x2280 x2652)))
(define-fun x2098 ((x2652 Int)) Int (ite (= x468 x2652) 64 (x1116 x2652)))
(define-fun x686 ((x2652 Int)) Int (ite (= x1297 x2652) x839 (x2098 x2652)))
(define-fun x2265 ((x2652 Int)) Int (ite (= x979 x2652) x1819 (x686 x2652)))
(define-fun x3197 ((x2652 Int)) Int (ite (= x1047 x2652) x1279 (x2265 x2652)))
(define-fun x2391 ((x2652 Int)) Int (ite x2677 (x686 x2652) (x3197 x2652)))
(define-fun x1918 ((x2652 Int)) Int (ite (and (< x2652 x1519) (<= x1519 x2652)) (x2633 (- x2652 x1519)) (x2391 x2652)))
(define-fun x547 ((x2652 Int)) Int (ite (= x2652 x1519) 95932229227554293267862761608555258089024927314852490146714677558661980618752 (x1918 x2652)))
(define-fun x2524 ((x2652 Int)) Int (ite (= x2652 x1636) x2369 (x547 x2652)))
(define-fun x2009 ((x2652 Int)) Int (ite (= x2652 x1661) x2386 (x2524 x2652)))
(define-fun x1966 ((x2652 Int)) Int (ite (and (< x2652 x1519) (>= x2652 x1519)) (x1746 (- x2652 x1519)) (x2009 x2652)))
(define-fun x2875 ((x2652 Int)) Int (ite x1778 (x1918 x2652) (x1966 x2652)))
(define-fun x3122 ((x2652 Int)) Int (ite x638 (x2407 x2652) (ite x1778 (x2407 x2652) (x2926 x2652))))
(define-fun x1888 ((x2652 Int)) Int (ite x638 (x104 x2652) (ite x1778 (x104 x2652) (x2427 x2652))))
(define-fun x421 ((x2652 Int)) Int (ite x638 (x1918 x2652) (x2875 x2652)))
(define-fun x1466 ((x2652 Int)) Int (ite (= x1519 x2652) 0 (x421 x2652)))
(define-fun x2730 ((x2652 Int)) Int (ite (= x2652 x130) 0 (x1466 x2652)))
(define-fun x2034 ((x2652 Int)) Int (ite (= x562 x2652) 0 (x2730 x2652)))
(define-fun x24 ((x2652 Int)) Int (ite (= x2652 x2456) 0 (x2034 x2652)))
(define-fun x377 ((x2652 Int)) Int (ite (= x2157 x2652) 88383320980755791914082775550597828907713979028428263264130000526486271950848 (x24 x2652)))
(define-fun x201 ((x2652 Int)) Int (ite (= x2652 x1950) x1338 (x377 x2652)))
(define-fun x2622 ((x2652 Int)) Int (ite (and (> (+ x2157 32) x2652) (>= x2652 x2157)) (x390 (- x2652 x2157)) (x201 x2652)))
(define-fun x2473 ((x2652 Int)) Int (ite x1421 (x3122 x2652) (ite x536 (x611 x2652) (x3122 x2652))))
(define-fun x2649 ((x2652 Int)) Int (ite x2510 (x3122 x2652) (x2473 x2652)))
(define-fun x2111 ((x2652 Int)) Int (ite x2209 (x2622 x2652) (x201 x2652)))
(define-fun x2226 ((x2652 Int)) Int (ite (and (< x2652 (+ 32 x2157)) (<= x2157 x2652)) (x390 (- x2652 x2157)) (x2111 x2652)))
(define-fun x948 ((x2652 Int)) Int (ite (= x2652 x1910) 111117225372770300986259473995147604481826136133417213952520719377678811004928 (x2226 x2652)))
(define-fun x138 ((x2652 Int)) Int (ite (= x2652 x2401) x2267 (x948 x2652)))
(define-fun x2852 ((x2652 Int)) Int (ite (= x2049 x2652) x2549 (x138 x2652)))
(define-fun x2819 ((x2652 Int)) Int (ite (= x338 x2652) x2749 (x2852 x2652)))
(define-fun x1002 ((x2652 Int)) Int (ite (= x2652 x2400) x1577 (x2819 x2652)))
(define-fun x398 ((x2652 Int)) Int (ite (= x2652 x2066) 160 (x1002 x2652)))
(define-fun x65 ((x2652 Int)) Int (ite (= x317 x2652) x574 (x398 x2652)))
(define-fun x2468 ((x2652 Int)) Int (ite (= x2652 x2957) x2512 (x65 x2652)))
(define-fun x1931 ((x2652 Int)) Int (ite (= x348 x2652) x94 (x2468 x2652)))
(define-fun x652 ((x2652 Int)) Int (ite (= x2652 x1648) x1024 (x1931 x2652)))
(define-fun x389 ((x2652 Int)) Int (ite (= x2652 x1339) x1593 (x652 x2652)))
(define-fun x799 ((x2652 Int)) Int (ite x726 (x652 x2652) (ite x1249 (x1931 x2652) (ite x2795 (x2468 x2652) (ite x1912 (x65 x2652) (x389 x2652))))))
(define-fun x1722 ((x2652 Int)) Int (ite (= x2652 x893) 0 (x799 x2652)))
(define-fun x999 ((x2652 Int)) Int (ite (and (>= x2652 x1910) (> x1910 x2652)) (x2128 (- x2652 x1910)) (x1722 x2652)))
(define-fun x1012 ((x2652 Int)) Int (ite x536 (x999 x2652) (x1722 x2652)))
(define-fun x2564 ((x2652 Int)) Int (ite x2510 (x421 x2652) (ite x1421 (x24 x2652) (x1012 x2652))))
(define-fun x817 ((x2652 Int)) Int (ite (= x1580 x2652) x3117 (x2564 x2652)))
(define-fun x2757 ((x2652 Int)) Int (ite (= x2652 x1032) 288 (x817 x2652)))
(define-fun x942 ((x2652 Int)) Int (ite (= x3179 x2652) x1287 (x2757 x2652)))
(define-fun x271 ((x2652 Int)) Int (ite (= x2918 x2652) x614 (x942 x2652)))
(define-fun x602 ((x2652 Int)) Int (ite (= x2935 x2652) x1675 (x271 x2652)))
(define-fun x898 ((x2652 Int)) Int (ite (= x1905 x2652) x452 (x602 x2652)))
(define-fun x355 ((x2652 Int)) Int (ite x798 (x2678 x2652) (ite x2510 (x3122 x2652) (x2473 x2652))))
(define-fun x1922 ((x2652 Int)) Int (ite x798 (x251 x2652) (ite x2510 (x1888 x2652) (ite x1421 (x1888 x2652) (ite x536 (x3120 x2652) (x1888 x2652))))))
(define-fun x56 ((x2652 Int)) Int 0)
(define-fun x2486 ((x2652 Int)) Int (ite (= x69 x2652) x1511 (x1922 x2652)))
(define-fun x2588 ((x2652 Int)) Int (ite (= x2527 x2652) x49 (x898 x2652)))
(define-fun x1996 ((x2652 Int)) Int (ite x853 (x898 x2652) (ite x1897 (x602 x2652) (ite x897 (x271 x2652) (ite x1869 (x942 x2652) (x2588 x2652))))))
(define-fun x2861 ((x2652 Int)) Int (ite (= x2348 x2652) 0 (x1996 x2652)))
(define-fun x393 ((x2652 Int)) Int (ite (= x2652 x3018) x2898 (x2861 x2652)))
(define-fun x1136 ((x2652 Int)) Int (ite (= x2938 x2652) x2290 (x393 x2652)))
(define-fun x2122 ((x2652 Int)) Int (ite (= x3071 x2652) x515 (x1136 x2652)))
(define-fun x2421 ((x2652 Int)) Int (x2143 x2652))
(define-fun x2465 ((x2652 Int)) Int (ite (= x2652 x1452) x3194 (x2122 x2652)))
(define-fun x2378 ((x2652 Int)) Int (ite (= x2652 x1400) x2093 (x2465 x2652)))
(define-fun x1510 ((x2652 Int)) Int (ite (= x2961 x2652) x2458 (x2378 x2652)))
(define-fun x920 ((x2652 Int)) Int (ite (= x1794 x2652) x1129 (x1510 x2652)))
(define-fun x3027 ((x2652 Int)) Int (ite (= x2652 x760) x3003 (x920 x2652)))
(define-fun x2103 ((x2652 Int)) Int (ite x142 (x2122 x2652) (x3027 x2652)))
(define-fun x1803 ((x2652 Int)) Int (ite (= x2652 x745) x109 (x2103 x2652)))
(define-fun x2318 ((x2652 Int)) Int (ite (= x2652 x1340) x677 (x1803 x2652)))
(define-fun x774 ((x2652 Int)) Int (ite (= x2652 x1088) x2314 (x2318 x2652)))
(define-fun x3134 ((x2652 Int)) Int (ite (= x2652 x113) x1968 (x774 x2652)))
(define-fun x2978 ((x2652 Int)) Int (ite (= x2652 x1017) x520 (x3134 x2652)))
(define-fun x84 ((x2652 Int)) Int (ite (= x2652 x2003) 96 (x2978 x2652)))
(define-fun x1454 ((x2652 Int)) Int (ite x536 (x611 x2652) (x3122 x2652)))
(assert (x563 x1618))
(assert (x563 x2550))
(assert (x563 x2293))
(assert (= (x2609 (x489 x2658 x2293 x2507)) x2293))
(assert (x563 x2647))
(assert (x563 x198))
(assert (not (x1194 (x489 x1380 x98 x2121))))
(assert (= (x119 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794)) x2872))
(assert (x563 x1739))
(assert (x563 x2531))
(assert (= (x181 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425)) x1787))
(assert (x563 x2774))
(assert (= x1756 (x2572 (x489 x1756 x212 x2469))))
(assert (x563 x2841))
(assert (x563 x1930))
(assert (= x2704 (and x2405 (not x1313))))
(assert (= x1957 (x2051 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365))))
(assert (x542 x1987 1461501637330902918203684832716283019655932542976))
(assert (x563 x707))
(assert (x563 x2724))
(assert (x563 x2974))
(assert (x563 x422))
(assert (= x1985 (=> (and (= (x484 (+ x1794 32)) x760) (= x716 (x484 (+ 32 x1623))) (= (x484 (+ 32 x171)) x865) (= (x484 (+ 32 x1400)) x2961) (= (x484 (+ 32 x2894)) x1623) (= x3003 (x920 x865)) (<= x2093 1) (= (x2601 1461501637330902918203684832716283019655932542975 x1298) x2458) (= x171 (x484 (+ 32 x716))) (= x2299 (x484 (+ x760 32))) (= x1129 (x1510 x171)) (= (x2122 x949) x2894) (= (x2122 x2894) x3194) (= (not (> x515 1)) x1091) (= x2093 (x2465 x1623)) (= x1400 (x484 (+ x1452 32))) (= (x484 (+ 32 x2961)) x1794) (>= 2 x3194) (= (x2378 x716) x1298)) (and x1091 (=> (= x1340 x2299) x2090)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1260 x1380 x59)))
(assert (not (x1194 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096))))
(assert (= x514 (x2572 (x242 x514 x2761 x401 x831))))
(assert (x563 x1471))
(assert (= (and x1501 x220) x2330))
(assert (x563 x2173))
(assert (=> (>= 10000 x2758) (= 0 (x2768 x2758))))
(assert (x1965 128))
(assert (=> (<= x800 10000) (= (x2768 x800) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x1609 x646 x195 x537 x535 x1528)))
(assert (x563 x791))
(assert (x563 x3168))
(assert (x563 x950))
(assert (= x514 (x2572 (x1884 x514 x3047 x67 x2748 x295))))
(assert (> (x331 x1874 x1628 x1450 x2418 x2551 x2635) 10000))
(assert (x1195 x2629))
(assert (=> (<= x2490 10000) (= (x2768 x2490) 0)))
(assert (x406 32 x2187))
(assert (x563 x1951))
(assert (x563 x345))
(assert (x563 x2437))
(assert (= x3149 (and (not x1998) x2463)))
(assert (= 0 (x2768 18446744073709551487)))
(assert (x563 x2254))
(assert (=> (<= x695 10000) (= (x2768 x695) 0)))
(assert (x563 x863))
(assert (x406 32 x839))
(assert (=> (>= 10000 x2857) (= 0 (x2768 x2857))))
(assert (= (x2572 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180)) x1273))
(assert (x563 x367))
(assert (< 10000 (x489 64 x167 1)))
(assert (x648 x631))
(assert (= (and x2848 x867) x152))
(assert (x563 x1078))
(assert (= x1253 (x2939 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253))))
(assert (< (x242 x1609 x2023 x1173 x2783) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x630 (x2939 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630))))
(assert (=> (>= 10000 x1805) (= (x2768 x1805) 0)))
(assert (x542 x3164 1461501637330902918203684832716283019655932542976))
(assert (=> (>= 10000 x255) (= 0 (x2768 x255))))
(assert (= (x181 (x489 x792 x356 x208)) x208))
(assert (> (x242 66 x588 x1852 x2106) 10000))
(assert (x563 x206))
(assert (x1194 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (= x1646 (=> (and (= (not (< 1 x3000)) x2829) (= x3000 (x2875 x863))) (and x2829 x2721))))
(assert (= (or x1912 x726 x706 x1249 x2795) x2197))
(assert (x1194 32542679537407071897843112657522291873774333932075415528008786499928730894336))
(assert (x563 x2789))
(assert (< 10000 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365)))
(assert (=> (>= 10000 x1714) (= 0 (x2768 x1714))))
(assert (= (x2768 (x1260 x1584 x1591)) (x1260 x1584 x1591)))
(assert (= (x2247 (x331 x749 x823 x1537 x2701 x757 x1436)) x1436))
(assert (x563 x2376))
(assert (= (or x3154 x364) x1179))
(assert (=> (>= 10000 x1676) (= (x2768 x1676) 0)))
(assert (= x695 (x2051 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096))))
(assert (x563 x2866))
(assert (x563 x2396))
(assert (x563 x391))
(assert (x406 32 x93))
(assert (x563 x2346))
(assert (x563 x98))
(assert (< 10000 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630)))
(assert (x563 x1317))
(assert (= x341 (and x2289 (not x2889))))
(assert (x563 x509))
(assert (x563 x33))
(assert (x563 x3039))
(assert (= (x181 (x242 x792 x2440 x1189 x2666)) x1189))
(assert (< (x1260 x2798 x3189) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x3111))
(assert (x563 x2076))
(assert (x563 x409))
(assert (=> (<= x2912 10000) (= (x2768 x2912) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096)))
(assert (x960 x1275))
(assert (= (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150) (x2768 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150))))
(assert (x542 x2828 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3115 (or x638 x3021)))
(assert (x563 x2603))
(assert (=> (<= x1775 10000) (= (x2768 x1775) 0)))
(assert (x563 x401))
(assert (=> (<= x1043 10000) (= (x2768 x1043) 0)))
(assert (x563 x2348))
(assert (= x3142 (x119 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180))))
(assert (=> (>= 10000 x1377) (= (x2768 x1377) 0)))
(assert (x563 x9))
(assert (=> (>= 10000 x2347) (= (x2768 x2347) 0)))
(assert (x563 x482))
(assert (< (x1260 x1795 x1218) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x849))
(assert (> (x1884 x1273 x1166 x2789 x3155 x2758) 10000))
(assert (x563 x1709))
(assert (x563 x250))
(assert (=> (>= 10000 x1417) (= (x2768 x1417) 0)))
(assert (= (x2247 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993)) x243))
(assert (= x1706 (x2609 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614))))
(assert (x1965 x93))
(assert (= x1328 (x2609 (x331 x1795 x1328 x164 x974 x553 x3178))))
(assert (x563 x2858))
(assert (= x1647 (and (not x1093) x1790)))
(assert (= x2162 (or x1463 x1491)))
(assert (= x638 (and (not x2644) x172)))
(assert (x563 x635))
(assert (x563 x85))
(assert (x563 x688))
(assert (x563 x784))
(assert (x563 x87))
(assert (=> (>= 10000 x2635) (= 0 (x2768 x2635))))
(assert (= x713 (=> (and (= (x526 x2380) x1261) (= (not (< 1 x1261)) x2702)) (and (=> (and (= x1123 x921) (= x674 x2084)) x504) x2702))))
(assert (x563 x2179))
(assert (x563 x285))
(assert (x563 x1293))
(assert (x563 x2725))
(assert (x563 x1100))
(assert (x563 x1219))
(assert (x563 x1863))
(assert (= (x119 (x242 x749 x1092 x1300 x235)) x235))
(assert (= (=> (= x1151 x628) x2675) x2930))
(assert (x563 x1146))
(assert (= (and x1270 (not x2225)) x3019))
(assert (x563 x639))
(assert (x563 x277))
(assert (= (and x1749 x1844) x832))
(assert (= x1421 (and (not x2809) x1278)))
(assert (x563 x1729))
(assert (x563 x2918))
(assert (x542 x1832 1461501637330902918203684832716283019655932542976))
(assert (x563 x2808))
(assert (x563 x874))
(assert (not (x1194 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994))))
(assert (= x3113 (or x351 x2124 x2207)))
(assert (= x1018 (and (not x79) x163)))
(assert (x563 x1794))
(assert (x563 x913))
(assert (x563 x1417))
(assert (= x7 (and x772 x118)))
(assert (not (x1194 (x1260 x749 x1774))))
(assert (=> (<= x1155 10000) (= (x2768 x1155) 0)))
(assert (x563 x1936))
(assert (x1965 (- x1677 1)))
(assert (x563 x801))
(assert (x563 x1009))
(assert (x563 x1929))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315)))
(assert (=> (<= x633 10000) (= (x2768 x633) 0)))
(assert (x563 x1235))
(assert (=> (>= 10000 x2680) (= (x2768 x2680) 0)))
(assert (=> (<= x1938 10000) (= (x2768 x1938) 0)))
(assert (x563 x1542))
(assert (x563 x2546))
(assert (=> (<= x2614 10000) (= (x2768 x2614) 0)))
(assert (= x1380 (x2572 (x1884 x1380 x2567 x150 x2529 x923))))
(assert (x542 x729 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x2138))
(assert (x563 x1276))
(assert (x563 x2886))
(assert (x563 x719))
(assert (= x196 (x2609 (x489 x2711 x196 x2133))))
(assert (x563 x1500))
(assert (x542 x836 1461501637330902918203684832716283019655932542976))
(assert (x563 x2511))
(assert (= 0 (x2768 18446744073709551167)))
(assert (x563 x515))
(assert (< (x489 x1756 x212 x2469) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x489 x1584 x324 x968) (x2768 (x489 x1584 x324 x968))))
(assert (x824 x372))
(assert (= 0 (x2768 2065879269316)))
(assert (x563 x3187))
(assert (x563 x1372))
(assert (= (x2051 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835)) x132))
(assert (x563 x1802))
(assert (= x163 (and x1664 x1860)))
(assert (x563 x34))
(assert (= (x181 (x489 x1380 x98 x2121)) x2121))
(assert (< 10000 (x489 x1380 x98 x2121)))
(assert (x563 x2881))
(assert (x563 x1188))
(assert (=> (<= x3142 10000) (= 0 (x2768 x3142))))
(assert (x563 x1459))
(assert (x563 x1812))
(assert (x563 x1742))
(assert (not (x1194 (x1260 x2798 x3189))))
(assert (x563 x1495))
(assert (= (x2768 (x242 x1795 x746 x2135 x959)) (x242 x1795 x746 x2135 x959)))
(assert (x563 x1652))
(assert (= x651 (or x2665 x155)))
(assert (> (x1668 x1273 x3143 x66 x3142 x3032 x496 x180) 10000))
(assert (= x2731 (=> (and (or (and x906 (= x777 x1964)) (and (and (= (x1753 192) x2866) (= x2563 x777) (= x2563 (ite (= x2663 1) 1 0)) (>= 2 x2663) (= (x1753 x2866) x2663)) (not x906))) (and (= x2112 (x1753 192)) (= x956 (x1753 x2112)) (= x906 (> x1964 0)) (= (ite (= 0 x956) 1 0) x1964) (<= x956 2))) x234)))
(assert (x563 x3030))
(assert (x563 x1344))
(assert (x563 x110))
(assert (= x2850 (x811 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993))))
(assert (=> (<= x2562 10000) (= (x2768 x2562) 0)))
(assert (< (x1260 x1584 x1591) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1052 (or x3170 x161)))
(assert (= (x117 x1514 452312848583266388373324160190187140051835877600158453279131187530910662656) (x673 x1514 248)))
(assert (= x1679 (x2247 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575))))
(assert (x563 x1340))
(assert (x1965 x2936))
(assert (x563 x2150))
(assert (x563 x1626))
(assert (= x1161 (x2247 (x331 x792 x2344 x1751 x1444 x1301 x1161))))
(assert (= 0 (x2768 2065879269376)))
(assert (x563 x2596))
(assert (= x1522 (x119 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630))))
(assert (= x1838 (x811 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838))))
(assert (= (and x2568 x1885) x2077))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639646)))
(assert (= (and x1927 x3034) x2718))
(assert (x563 x3166))
(assert (= x1752 (x2609 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838))))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (= 0 (x2768 18446746139588821027)))
(assert (= x3053 (or x213 x2906)))
(assert (x563 x1197))
(assert (x563 x2905))
(assert (x1965 x2506))
(assert (x563 x2379))
(assert (= x1778 (and x283 x2160)))
(assert (x563 x2149))
(assert (=> (>= 10000 x2703) (= 0 (x2768 x2703))))
(assert (=> (>= 10000 x196) (= 0 (x2768 x196))))
(assert (x563 x3018))
(assert (= 0 (x2768 79228162514264337593543950336)))
(assert (x563 x177))
(assert (= 0 (x2768 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= x2859 (or x1476 x3089 x1262 x2613 x1081)))
(assert (x542 x57 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x824 x1087))
(assert (x563 x51))
(assert (= (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315) (x2768 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315))))
(assert (x563 x2218))
(assert (x563 x1819))
(assert (x563 x2245))
(assert (x563 x1307))
(assert (< (x489 x1380 x98 x2121) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1013) (= 0 (x2768 x1013))))
(assert (= (x2768 4294967295) 0))
(assert (x563 x380))
(assert (x563 x1327))
(assert (x563 x2523))
(assert (x563 x3131))
(assert (= (x2768 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395)) (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395)))
(assert (=> (<= x2679 10000) (= (x2768 x2679) 0)))
(assert (x563 x842))
(assert (x563 x2313))
(assert (x563 x1374))
(assert (x563 x2970))
(assert (x648 x2335))
(assert (x563 x2235))
(assert (x563 x2670))
(assert (=> (<= x2114 10000) (= (x2768 x2114) 0)))
(assert (= (x2939 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575)) x575))
(assert (> (x1668 x593 x978 x1787 x2437 x2694 x2992 x425) 10000))
(assert (= (x2768 (x489 x2658 x2293 x2507)) (x489 x2658 x2293 x2507)))
(assert (x563 x2139))
(assert (x563 x396))
(assert (= (=> (and (<= x1197 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2556 (x484 (+ 32 x3088))) (= (x2977 x1731) x3088) (= (x484 (+ x2402 32)) x2515) (not (= x1197 115792089237316195423570985008687907853269984665640564039457584007913129639712)) (= x2817 (x2977 x454)) (<= x1197 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2173 (x484 (+ 32 x2556))) (= (x484 (+ x3187 192)) x13) (= (x2977 x76) x2097) (>= 2 x1546) (= x784 (x2601 1461501637330902918203684832716283019655932542975 x1550)) (= (x1200 (- x333 32)) x568) (< x1197 x13) (= (x484 (+ 32 x1459)) x929) (= (x484 (+ 32 x3187)) x1459) (not (= x1197 115792089237316195423570985008687907853269984665640564039457584007913129639712)) (= (x484 (+ x454 32)) x1731) (= (x2977 x2173) x1550) (= (x484 (+ 32 x2515)) x917) (= (x484 (+ 32 x2173)) x1326) (= x2352 (<= x792 224)) (= (x2977 x2604) x454) (= (x484 (+ 32 x1326)) x76) (= x2384 (x2977 x2556)) (= (x2977 x1326) x3106) (not (= x1197 115792089237316195423570985008687907853269984665640564039457584007913129639712)) (>= 1 x2384) (= (x484 (+ 32 x1197)) x2366) (= x333 (x1200 (- x13 x1197))) (= (x2977 x3088) x1546) (<= x1197 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x792 (x1662 x1197)) (<= 1 x2817) (= x2402 (x484 (+ 32 x929))) (= (x484 (+ 32 x1197)) x3187)) (and x2352 (=> (and (= (x1662 x2366) x2344) (= x1721 (not (< 1 x367))) (= x1354 (x1662 x2366)) (= x175 (x484 (+ x2366 128))) (= x373 (x1662 x2183)) (= (x1662 x2366) x346) (= x1045 (x484 (+ 32 x2366))) (= (x484 (+ x2366 96)) x666) (= (x484 (+ 160 x2366)) x2534) (= x1679 (x1662 x175)) (= (x1662 x2802) x1301) (<= 1 x1293) (= (x1662 x1625) x2734) (= (x1260 x792 x1602) x3114) (= (x1662 x2366) x2440) (= (x1743 0) x2137) (= x1189 (x1662 x1046)) (= (x1662 x819) x2954) (= x2295 (x484 (+ x2366 192))) (= x491 (x484 (+ x2366 64))) (= (x331 x792 x2344 x1751 x1444 x1301 x1161) x240) (= x1161 (x1662 x847)) (= (x484 (+ 32 x2366)) x2594) (= x413 (ite (= x792 0) x2137 (ite (<= x792 32) x3114 (ite (<= x792 64) x3188 (ite (<= x792 96) x2987 (ite (>= 128 x792) x771 (ite (<= x792 160) x240 (ite (<= x792 192) x1283 (ite (<= x792 224) x587 x15))))))))) (= x771 (x1884 x792 x346 x1657 x2734 x2954)) (= (x1662 x70) x695) (= x2423 (x1662 x534)) (= x2778 (x484 (+ x2366 128))) (= (x1662 x666) x3051) (= x1657 (x1662 x2331)) (= (x484 (+ x2366 64)) x2183) (= x1188 (x1662 x3177)) (= (x1662 x2534) x1096) (= (x1662 x1045) x208) (= x2987 (x242 x792 x2440 x1189 x2666)) (= (x1662 x1291) x1751) (= x2148 (x2355 x2604)) (= (x484 (+ x2366 64)) x1295) (= x755 (x484 (+ x2076 32))) (= x1625 (x484 (+ 64 x2366))) (= x3177 (x484 (+ x2366 160))) (= x1283 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096)) (= x1293 (x1662 x2076)) (= (x1662 x2295) x575) (= x847 (x484 (+ x2366 128))) (= x587 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575)) (= (x484 (+ 64 x2366)) x842) (= x1602 (x1662 x2366)) (= (x1662 x842) x1444) (= (x2355 x2148) x367) (= x2666 (x1662 x1295)) (= x356 (x1662 x2366)) (= (x484 (+ x2366 32)) x2331) (= x2129 (x1662 x2594)) (= x77 (x1662 x2366)) (= (x484 (+ x2366 96)) x2802) (= x819 (x484 (+ x2366 96))) (= x3188 (x489 x792 x356 x208)) (= x392 (x1662 x491)) (= x1046 (x484 (+ 32 x2366))) (= x1991 (x1662 x2778)) (= (x484 (+ 32 x2366)) x534) (= x1291 (x484 (+ 32 x2366))) (= (x484 (+ x2366 96)) x70)) (and x1721 (=> (= x2256 x13) x2937))))) x2409))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x489 x749 x2712 x3070)))
(assert (= x2457 (x2609 (x1884 x1609 x2457 x1782 x1225 x2073))))
(assert (x563 x1565))
(assert (x563 x1505))
(assert (x563 x1426))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639832)))
(assert (= (x181 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835)) x2857))
(assert (x563 x418))
(assert (x563 x804))
(assert (x563 x2957))
(assert (= (x2572 (x489 x1380 x98 x2121)) x1380))
(assert (x563 x2716))
(assert (not (x1194 (x1884 x1795 x2313 x1226 x1678 x3107))))
(assert (< (x1884 x2798 x3004 x2178 x262 x601) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x917))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1260 x792 x1602)))
(assert (not (x1194 (x489 x2798 x802 x600))))
(assert (=> (>= 10000 x3070) (= 0 (x2768 x3070))))
(assert (x406 32 x677))
(assert (=> (>= 10000 x1584) (= 0 (x2768 x1584))))
(assert (= x2022 (and x1524 x3056)))
(assert (= (x2939 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794)) x794))
(assert (x563 x2769))
(assert (= (=> (and (= x1742 (x1200 (- x2410 32))) (= x738 (x484 (+ 32 x2385))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2385) (= x2798 (x2012 x2385)) (= (x484 (+ x2217 31)) x998) (<= 1 x2966) (= (x1200 (- x2966 x2385)) x2410) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2385) (<= x2385 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x998) x2558) (= (x484 (+ x2495 x2558)) x2966) (< x2385 x2966) (= x2170 (x484 (+ x2217 x2495))) (= (<= x2798 224) x1582)) (and x1582 (=> (and (= x3084 (x2012 x2271)) (= x169 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926)) (= x2596 (x2012 x3150)) (= x709 (x331 x2798 x1390 x2688 x149 x2703 x825)) (= (x2012 x579) x1303) (= (x1884 x2798 x3004 x2178 x262 x601) x231) (= (x484 (+ 64 x738)) x1516) (= x492 (x484 (+ x738 160))) (= x2680 (x2012 x738)) (= (x484 (+ 96 x738)) x2775) (= (x2012 x738) x802) (= (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253) x2617) (= x2178 (x2012 x2684)) (= x1239 (x2012 x738)) (= x149 (x2012 x2742)) (= x1935 (x489 x2798 x802 x600)) (= x2742 (x484 (+ 64 x738))) (= x1389 (x242 x2798 x2239 x3068 x1303)) (= (x484 (+ 32 x738)) x3150) (= (x2012 x2775) x2546) (= x1951 (x2012 x1059)) (= x1390 (x2012 x738)) (= x2703 (x2012 x1932)) (= (x2012 x1435) x262) (= x3083 (x484 (+ 32 x738))) (= (x484 (+ x738 128)) x478) (= (not (> x1423 1)) x1439) (= x600 (x2012 x2470)) (= (x484 (+ 192 x738)) x2907) (= x518 (ite (= x2798 0) x2294 (ite (>= 32 x2798) x2827 (ite (<= x2798 64) x1935 (ite (<= x2798 96) x1389 (ite (>= 128 x2798) x231 (ite (<= x2798 160) x709 (ite (<= x2798 192) x169 (ite (>= 224 x2798) x2617 x2514))))))))) (= (x2012 x851) x3068) (= (x484 (+ x738 96)) x2271) (= (x484 (+ x738 32)) x2470) (= (x484 (+ 128 x738)) x857) (= x2684 (x484 (+ x738 32))) (= (x1743 0) x2294) (= x2618 (x484 (+ x576 32))) (= (x484 (+ 128 x738)) x43) (= (x484 (+ 32 x738)) x2120) (= (x2012 x492) x1531) (= x1423 (x528 x1460)) (= x825 (x2012 x857)) (= (x528 x2733) x1460) (= x3180 (x2012 x43)) (>= x2891 1) (= (x484 (+ x738 160)) x2102) (= x851 (x484 (+ x738 32))) (= (x484 (+ x738 96)) x701) (= (x484 (+ 64 x738)) x579) (= x601 (x2012 x701)) (= (x2012 x738) x2239) (= x2891 (x2012 x576)) (= x276 (x2012 x2120)) (= x1253 (x2012 x2907)) (= (x2012 x478) x546) (= x3052 (x2012 x1516)) (= x926 (x2012 x2102)) (= x1435 (x484 (+ 64 x738))) (= (x2012 x3083) x2688) (= x3189 (x2012 x738)) (= (x484 (+ x738 96)) x1932) (= (x484 (+ 64 x738)) x1059) (= x3004 (x2012 x738)) (= (x1260 x2798 x3189) x2827)) (and x1439 (=> (= x2966 x384) x787))))) x319))
(assert (x563 x579))
(assert (x563 x1785))
(assert (x563 x3140))
(assert (x563 x279))
(assert (x563 x953))
(assert (x563 x2628))
(assert (x563 x167))
(assert (=> (<= x2484 10000) (= 0 (x2768 x2484))))
(assert (x563 x264))
(assert (x960 x1701))
(assert (x563 x302))
(assert (= x67 (x181 (x1884 x514 x3047 x67 x2748 x295))))
(assert (x563 x1435))
(assert (= x1638 (and x1619 x458)))
(assert (x563 x1362))
(assert (= (=> (and (= (x2072 x927) x699) (= (x484 (+ 32 x927)) x1654) (= (x484 (+ 32 x849)) x1697) (= x969 (not (> x2218 4)))) (and (=> (and (= x725 x1654) (= x1697 x2843) (= 4 x1487)) x582) x969)) x877))
(assert (x563 x1488))
(assert (= (=> (= x2036 x1319) x2731) x1674))
(assert (not (x1194 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371))))
(assert (x563 x977))
(assert (= (x242 x2711 x3024 x1115 x404) (x2768 (x242 x2711 x3024 x1115 x404))))
(assert (x563 x2224))
(assert (x563 x1666))
(assert (x563 x1451))
(assert (= (x2609 (x331 x749 x823 x1537 x2701 x757 x1436)) x823))
(assert (= (x2768 (x331 x2711 x1177 x1274 x767 x3057 x1224)) (x331 x2711 x1177 x1274 x767 x3057 x1224)))
(assert (x563 x1867))
(assert (x563 x1233))
(assert (x563 x344))
(assert (x563 x1796))
(assert (= (x119 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)) x1479))
(assert (= (x119 (x1884 x1795 x2313 x1226 x1678 x3107)) x1678))
(assert (x563 x426))
(assert (x563 x729))
(assert (x563 x658))
(assert (x563 x755))
(assert (=> (<= x2982 10000) (= 0 (x2768 x2982))))
(assert (x563 x633))
(assert (=> (>= 10000 x1193) (= 0 (x2768 x1193))))
(assert (not (x1194 (x489 x1609 x1458 x1193))))
(assert (= x2596 (x181 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926))))
(assert (x563 x154))
(assert (x563 x1751))
(assert (x563 x1859))
(assert (x563 x1178))
(assert (x563 x610))
(assert (x563 x2301))
(assert (x824 x1635))
(assert (x563 x248))
(assert (= (and (not x516) x2690) x351))
(assert (= (=> (and (= x1529 x615) (= x2300 x292) (= x567 x147) (= x2260 x1729)) x3008) x2298))
(assert (= (x2572 (x1260 x792 x1602)) x792))
(assert (x563 x2283))
(assert (= x749 (x2572 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553))))
(assert (x563 x661))
(assert (x563 x742))
(assert (x563 x1237))
(assert (x563 x2873))
(assert (= x2892 (x2609 (x1260 x514 x2892))))
(assert (=> (<= x553 10000) (= 0 (x2768 x553))))
(assert (x563 x2300))
(assert (x563 x2250))
(assert (x563 x47))
(assert (x563 x23))
(assert (x563 x2625))
(assert (< (x489 x593 x626 x11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x2545))
(assert (x563 x1893))
(assert (x1194 18446744073709551455))
(assert (x563 x2495))
(assert (= (x811 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180)) x180))
(assert (x563 x3092))
(assert (x648 x1823))
(assert (x648 x2629))
(assert (x563 x244))
(assert (= (and x254 x1367) x1383))
(assert (= x1756 (x2572 (x1260 x1756 x2959))))
(assert (x563 x101))
(assert (= (x2609 (x489 x514 x2058 x527)) x2058))
(assert (x563 x794))
(assert (= (and x1021 (not x1475)) x2287))
(assert (x563 x1241))
(assert (x563 x1550))
(assert (x563 x837))
(assert (x563 x1138))
(assert (= (and x892 (not x275)) x247))
(assert (x563 x178))
(assert (=> (<= x1835 10000) (= (x2768 x1835) 0)))
(assert (=> (<= x556 10000) (= (x2768 x556) 0)))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (not (x1194 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533))))
(assert (x563 x3124))
(assert (= x447 (x181 (x1884 x2711 x1758 x447 x935 x255))))
(assert (x563 x431))
(assert (x563 x374))
(assert (= (=> (and (= 0 x894) (= x735 0) (= x924 x1319) (= x735 (ite (= 0 x1629) (ite (= 0 x1629) 1 0) (ite (= 0 x1429) 1 0))) (= (x1441 x2380) x894)) x1674) x1614))
(assert (= x1972 (or x592 x7)))
(assert (= (x2768 57896044618658097711785492504343953926634992332820282019728792003956564820645) 0))
(assert (x563 x2558))
(assert (=> (>= 10000 x1795) (= (x2768 x1795) 0)))
(assert (not (x1194 (x489 x2711 x196 x2133))))
(assert (x563 x2711))
(assert (not (x1194 (x1260 x792 x1602))))
(assert (= (and x1346 x1665) x772))
(assert (= x343 (and x72 x3053)))
(assert (= 0 (x2768 88383320980755791914082775550597828907713979028428263264130000526486271950848)))
(assert (= (x2572 (x1260 x1380 x59)) x1380))
(assert (x563 x2010))
(assert (x563 x2184))
(assert (=> (<= x323 10000) (= (x2768 x323) 0)))
(assert (x563 x699))
(assert (= x1942 (=> (and (= x1494 (x484 (+ 32 x970))) (= x2182 (x1200 (- x1048 x970))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x970)) (not (= x970 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (x249 256) x3175) (= x679 (x2601 1461501637330902918203684832716283019655932542975 x3175)) (= x3167 (x2601 1461501637330902918203684832716283019655932542975 x1987)) (= (x249 224) x2847) (= x426 (x484 (+ 32 x970))) (= x1048 (x484 (+ x1494 64))) (= x3167 x679) (not (< x2847 x715)) (< x970 x1048) (= x3043 (>= 224 x593)) (<= x970 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x970 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1031 (x249 x376)) (= (x249 x2142) x1987) (= x376 (x249 160)) (= (+ x2142 32) x2078) (= (x1200 (- x2182 32)) x2545) (= (x484 (+ x1494 32)) x2970) (<= x970 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 1461501637330902918203684832716283019655932542975 x1208) (= x1208 (x2818 100)) (= x3116 (x2601 1461501637330902918203684832716283019655932542975 x1031)) (<= x3082 1461501637330902918203684832716283019655932542975) (not (= x970 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (+ 32 x2343) x2142) (= x3082 (x2818 68)) (= (x1056 x970) x593)) (and (=> (and (or (and (and (= x950 (* 32 x93)) (= x3064 (x484 (+ 32 x1048)))) (not x72)) x72) (and (= (x1056 x3195) x11) (= x683 (x1056 x426)) (= (x1056 x850) x2365) (= (x484 (+ x426 128)) x1861) (= x230 (x484 (+ x426 96))) (= (x484 (+ 96 x426)) x1227) (= x1417 (x1056 x1861)) (= (x331 x593 x1807 x1322 x1981 x90 x178) x680) (<= x93 18446744073709551615) (= x2018 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425)) (= (x1056 x1890) x3162) (= (x1056 x1570) x2992) (= x2477 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365)) (<= 1 x1048) (= (x484 (+ 128 x426)) x1570) (= (x1056 x2233) x1393) (= x2171 (x484 (+ x426 160))) (= x858 (x489 x593 x626 x11)) (<= x1048 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1909 (x1743 0)) (= x1929 (x1056 x12)) (= x850 (x484 (+ x426 192))) (= x1890 (x484 (+ 32 x426))) (= (x1056 x2513) x1676) (= x2555 (x1056 x829)) (= (ite (= 0 x593) x1909 (ite (>= 32 x593) x2211 (ite (<= x593 64) x858 (ite (<= x593 96) x1696 (ite (<= x593 128) x186 (ite (>= 160 x593) x680 (ite (<= x593 192) x2018 (ite (<= x593 224) x2477 x1119)))))))) x971) (= (x1884 x593 x1880 x3017 x1393 x2291) x186) (= (x484 (+ 32 x426)) x3195) (= x2382 (x484 (+ 96 x426))) (= x178 (x1056 x1132)) (= x1798 (x1056 x426)) (= (* 32 x93) x2759) (= (x484 (+ 32 x426)) x2420) (= x978 (x1056 x426)) (= (x1056 x2382) x90) (= x1787 (x1056 x990)) (= (x1056 x426) x1807) (= (x1056 x1558) x2650) (= x953 (x484 (+ 64 x426))) (= (x1056 x2379) x1957) (= x2513 (x484 (+ 64 x426))) (= x2694 (x1056 x1227)) (= (x484 (+ x426 64)) x1558) (= (x484 (+ 64 x426)) x2233) (= (x1056 x2171) x425) (= x626 (x1056 x426)) (= (x484 (+ 160 x426)) x12) (= (x1260 x593 x683) x2211) (= (= x93 0) x72) (< x1048 x2559) (= x3017 (x1056 x1560)) (= (x1056 x2420) x2273) (= (x484 (+ x426 32)) x990) (= x2519 (x484 (+ x426 64))) (= (x484 (+ 32 x426)) x1560) (= (x1056 x426) x1241) (= x1696 (x242 x593 x1798 x2273 x2650)) (= x2379 (x484 (+ 96 x426))) (= (x1056 x925) x1322) (= x829 (x484 (+ 64 x1542))) (= x93 (x1056 x2555)) (= (x1056 192) x1542) (= (x1056 x230) x2291) (<= 2 x2559) (= (x1056 x953) x1981) (= x2437 (x1056 x2519)) (= (x484 (+ x426 128)) x1132) (= (x484 (+ x1048 (mod (+ x2759 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2559) (= (x484 (+ 32 x426)) x925) (= x1880 (x1056 x426)))) x1864) x3043))))
(assert (= (x2768 (x1884 x749 x1240 x776 x724 x2027)) (x1884 x749 x1240 x776 x724 x2027)))
(assert (x563 x1177))
(assert (= (x2572 (x242 x2798 x2239 x3068 x1303)) x2798))
(assert (< 10000 (x242 x1874 x980 x1271 x891)))
(assert (x563 x3064))
(assert (= x2916 (x2247 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185))))
(assert (= (and (not x2368) x2870) x375))
(assert (x563 x2087))
(assert (x563 x1969))
(assert (x563 x290))
(assert (x563 x2239))
(assert (= (x2768 (x242 66 x588 x1852 x2106)) (x242 66 x588 x1852 x2106)))
(assert (x563 x1685))
(assert (x563 x2582))
(assert (=> (>= 10000 x1274) (= (x2768 x1274) 0)))
(assert (x1195 x2673))
(assert (x563 x2458))
(assert (x563 x1225))
(assert (= (x181 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838)) x780))
(assert (= x346 (x2609 (x1884 x792 x346 x1657 x2734 x2954))))
(assert (x564 x1550))
(assert (x563 x3000))
(assert (= x1282 (and x143 x2709)))
(assert (x563 x382))
(assert (x563 x2382))
(assert (=> (>= 10000 x1929) (= (x2768 x1929) 0)))
(assert (x563 x1934))
(assert (x563 x2112))
(assert (x1195 x2109))
(assert (= (x2572 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533)) x2658))
(assert (= x2658 (x2572 (x1884 x2658 x1938 x2044 x1858 x449))))
(assert (x648 x1026))
(assert (x563 x1409))
(assert (= x536 (and x2575 x2197)))
(assert (not (x1194 (x1884 x1874 x591 x3185 x2244 x710))))
(assert (= x427 (or x419 x1841 x1347 x3103 x1265)))
(assert (x563 x299))
(assert (x563 x2727))
(assert (= x1936 (x2051 (x331 x2658 x719 x299 x38 x1936 x1153))))
(assert (= x1807 (x2609 (x331 x593 x1807 x1322 x1981 x90 x178))))
(assert (x563 x1108))
(assert (x563 x3054))
(assert (=> (<= x868 10000) (= 0 (x2768 x868))))
(assert (x563 x2377))
(assert (= (x811 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)) x2371))
(assert (x563 x1192))
(assert (x563 x3150))
(assert (x563 x1204))
(assert (not (x1194 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425))))
(assert (x563 x1690))
(assert (x563 x556))
(assert (x563 x2692))
(assert (< (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x600))
(assert (= x1785 (x119 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017))))
(assert (x563 x1161))
(assert (x563 x1914))
(assert (= x2129 (x181 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096))))
(assert (= (and (not x1665) x1346) x1824))
(assert (x563 x1732))
(assert (x563 x672))
(assert (x563 x12))
(assert (x563 x1498))
(assert (x563 x2))
(assert (x563 x2902))
(assert (= (or x1311 x192) x1524))
(assert (x563 x2387))
(assert (x563 x3083))
(assert (x563 x1843))
(assert (= (x2768 (x242 x593 x1798 x2273 x2650)) (x242 x593 x1798 x2273 x2650)))
(assert (x563 x1319))
(assert (x563 x2290))
(assert (=> (>= 10000 x3107) (= 0 (x2768 x3107))))
(assert (x563 x1373))
(assert (x563 x2924))
(assert (x563 x2140))
(assert (x563 x643))
(assert (= (x2572 (x1884 x792 x346 x1657 x2734 x2954)) x792))
(assert (x563 x1240))
(assert (= (x2572 (x1884 x749 x1240 x776 x724 x2027)) x749))
(assert (not (x1194 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236))))
(assert (x563 x1390))
(assert (x563 x979))
(assert (x824 x872))
(assert (x648 x1987))
(assert (x563 x702))
(assert (x563 x1947))
(assert (= (=> (and (= x2151 (+ x1813 32)) (= (* 32 x2888) x224) (= (+ 224 x379) x901) (= (x484 (+ x659 x509)) x2439) (= x1318 (x2818 x1473)) (= (x484 (+ x114 x78)) x1813) (= (+ x1952 63) x1440) (not (< x1552 x2439)) (= x565 (x2818 36)) (= (x484 (+ x1513 36)) x2950) (or (>= x78 115792089237316195423570985008687907853269984665640564039439137263839420088228) (<= x78 18446744073709551614)) (<= x1318 18446744073709551615) (= (x484 (+ x753 x1318)) x2631) (<= x2888 18446744073709551615) (> x1813 x78) (= x2242 (> x2888 0)) (or (>= x1403 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x1403 18446746139588821027)) (>= 18446744073709551615 x986) (= x801 (x484 (+ x1403 31))) (= x1997 (x1200 (- x1802 x3014))) (<= x78 18446744073709551614) (= x114 (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x57)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1735) (<= x1513 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1735 x1513)) (and (<= x1735 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1513 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2818 132) x1513) (= (x484 (+ 32 x2419)) x1571) (= x74 (x2818 x1453)) (<= 2 x379) (<= x2228 18446744073709551614) (<= x74 1461501637330902918203684832716283019655932542975) (= x379 (+ x2228 x1813)) (= x2288 (+ 32 x901)) (= x991 (x484 (+ 32 x500))) (< x1813 x379) (= x1376 (x2818 x1403)) (not (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2304) (> x1997 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2304 x1997) (= (<= x1997 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2304))))) (= (+ 32 x2184) x1530) (= (x2818 x2950) x2888) (= (x484 (+ 31 x2631)) x3100) (>= 18446744073709551613 x78) (>= 18446744073709551614 x1813) (<= x659 18446744073709551615) (= x57 (+ 63 x2408)) (>= x1813 1) (> x901 x379) (>= 18446744073709551613 x78) (= x1403 (x484 (+ x2419 x986))) (<= x78 18446744073709551614) (= (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2828) x1952) (= (* 128 x2888) x3014) (= (x484 (+ x78 32)) x2647) (= x659 (x2818 x2631)) (= (x484 (+ 32 x991)) x1453) (or (>= x78 115792089237316195423570985008687907853269984665640564039439137263839420088228) (>= 18446744073709551614 x78)) (or (and (> x3100 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1552)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1552) (<= x3100 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3100 x1552))) (<= x78 18446744073709551613) (or (<= x2631 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x2631)) (= x729 (+ x659 31)) (or (>= x1513 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x1513 2065879269376)) (= x1820 (x484 (+ x659 x2647))) (= (+ x901 32 x224) x1353) (>= 18446744073709551614 x78) (= x509 (x484 (+ x2631 32))) (= x2228 (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1440)) (= x3046 (+ x2151 x1376)) (= x2184 (+ 32 x379)) (= (x484 (+ x1478 32)) x1473) (<= x379 18446744073709551615) (or (>= 18446744073709551614 x78) (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x78)) (= x2304 (x484 (+ x2950 32))) (not (> x2310 x1552)) (= (x2818 x1571) x986) (= x2310 (x484 (+ x1376 x2292))) (or (and (> x1552 x801) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x801) (<= x1552 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x801 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1552))) (not (< x1813 x78)) (not (> x1813 x379)) (= x2408 (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x729)) (= (x484 (+ 32 x1403)) x2292) (<= x1376 18446744073709551615) (= (+ x1376 31) x2828) (= (x2818 356) x2705) (= x250 (x2818 x991)) (< x901 x1353)) (and (=> x2242 x2634) (=> (and (not x2242) (= x1353 x957)) x263))) x1868))
(assert (x563 x2631))
(assert (x563 x656))
(assert (not (x1194 (x1884 x1609 x2457 x1782 x1225 x2073))))
(assert (x648 x3164))
(assert (x563 x1163))
(assert (= x3173 (and (not x1142) x1211)))
(assert (= (and (not x2113) x35) x192))
(assert (not (x1194 (x489 x514 x2058 x527))))
(assert (=> (<= x820 10000) (= 0 (x2768 x820))))
(assert (x563 x2903))
(assert (=> (>= 10000 x267) (= (x2768 x267) 0)))
(assert (x563 x2375))
(assert (x563 x1852))
(assert (x563 x2868))
(assert (x563 x333))
(assert (x563 x3142))
(assert (x563 x2030))
(assert (x563 x534))
(assert (= (x1884 x1756 x2679 x2483 x1069 x2361) (x2768 (x1884 x1756 x2679 x2483 x1069 x2361))))
(assert (= (and x892 x275) x2741))
(assert (x563 x2686))
(assert (x563 x2890))
(assert (= (and x1461 x1289) x2754))
(assert (= x2748 (x119 (x1884 x514 x3047 x67 x2748 x295))))
(assert (=> (>= 10000 x1240) (= (x2768 x1240) 0)))
(assert (=> (<= x2423 10000) (= 0 (x2768 x2423))))
(assert (= (x2768 111117225372770300986259473995147604481826136133417213952520719377678811004928) 0))
(assert (x563 x26))
(assert (x563 x2540))
(assert (= (x2768 (x1884 x514 x3047 x67 x2748 x295)) (x1884 x514 x3047 x67 x2748 x295)))
(assert (x542 x631 1461501637330902918203684832716283019655932542976))
(assert (x1195 x1275))
(assert (x563 x88))
(assert (x563 x919))
(assert (x563 x1719))
(assert (=> (>= 10000 x710) (= 0 (x2768 x710))))
(assert (= (x2609 (x242 x1380 x1013 x878 x1947)) x1013))
(assert (x563 x883))
(assert (= (x2572 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575)) x792))
(assert (x563 x3195))
(assert (= (x181 (x242 x2658 x2982 x246 x632)) x246))
(assert (x563 x2024))
(assert (x563 x2445))
(assert (x563 x2763))
(assert (= 0 (x2768 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (x563 x2240))
(assert (=> (>= 10000 x2508) (= 0 (x2768 x2508))))
(assert (x563 x2958))
(assert (= x2013 (or x1306 x862)))
(assert (x563 x1069))
(assert (x563 x320))
(assert (x563 x823))
(assert (= (x2572 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993)) x1609))
(assert (=> (<= x1858 10000) (= 0 (x2768 x1858))))
(assert (=> (<= x1628 10000) (= 0 (x2768 x1628))))
(assert (= (x2768 (x1884 x2711 x1758 x447 x935 x255)) (x1884 x2711 x1758 x447 x935 x255)))
(assert (=> (>= 10000 x217) (= 0 (x2768 x217))))
(assert (x563 x1410))
(assert (=> (<= x1252 10000) (= (x2768 x1252) 0)))
(assert (=> (>= 10000 x2121) (= 0 (x2768 x2121))))
(assert (x563 x3044))
(assert (x563 x2734))
(assert (x563 x334))
(assert (x563 x1064))
(assert (= (=> (and (or (and (and (>= x1015 32) (= x280 1) (>= 4294967295 x1015)) x3056) (and (not x3056) (= x280 x2351))) (and (= x464 (x484 (+ x1930 32))) (= (x945 x1930) x2505) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1930) (<= 32 x1015) (not (= x1930 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (> x464 x1930) (= x1872 (x2601 1461501637330902918203684832716283019655932542975 x1299)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1930) (<= x1015 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 1 x2505) (<= 1 x2595) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1930)) (= (< 0 x2351) x3056) (= x2541 (x2601 1461501637330902918203684832716283019655932542975 x513)) (not (= x1930 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1930) (= x141 (x484 (+ 4 x464))))) x1643) x1472))
(assert (x563 x2662))
(assert (= 64 (x2572 (x489 64 x551 1))))
(assert (x563 x1924))
(assert (x542 x1275 32))
(assert (x563 x478))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1260 x1874 x1214)))
(assert (x563 x289))
(assert (x563 x1285))
(assert (x563 x1117))
(assert (x563 x1299))
(assert (= (or x1718 x2565) x605))
(assert (x563 x2347))
(assert (=> (<= x73 10000) (= 0 (x2768 x73))))
(assert (x563 x2803))
(assert (=> (<= x794 10000) (= (x2768 x794) 0)))
(assert (= x155 (or x1769 x2165)))
(assert (x563 x3084))
(assert (= x1186 (=> (and (= x964 (x484 (+ x1817 96))) (= (not (< 128 x1287)) x1401) (= (x898 x964) x49) (= x2527 (x484 (+ x2918 96)))) (and x1401 x1597))))
(assert (x563 x1849))
(assert (x1194 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x563 x2737))
(assert (= x2783 (x119 (x242 x1609 x2023 x1173 x2783))))
(assert (x563 x1861))
(assert (x563 x13))
(assert (= 0 (x2768 18446744073709551615)))
(assert (= x1414 (=> (= x101 x2036) x2731)))
(assert (=> (<= x2650 10000) (= 0 (x2768 x2650))))
(assert (x563 x1945))
(assert (x563 x2488))
(assert (= x402 (x2247 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525))))
(assert (x563 x1320))
(assert (=> (>= 10000 x1395) (= 0 (x2768 x1395))))
(assert (= (x811 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185)) x2220))
(assert (x563 x972))
(assert (not (x1194 (x1260 x2711 x1886))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x242 66 x588 x1852 x2106)))
(assert (x563 x217))
(assert (x563 x1050))
(assert (=> (<= x2868 10000) (= 0 (x2768 x2868))))
(assert (x563 x2911))
(assert (x563 x1338))
(assert (x563 x404))
(assert (x1195 x57))
(assert (x563 x2356))
(assert (= (x2572 (x1884 x1609 x2457 x1782 x1225 x2073)) x1609))
(assert (x563 x55))
(assert (> (x242 x593 x1798 x2273 x2650) 10000))
(assert (= (=> (and (= x1397 (x2977 x2604)) (= x2962 (> x2599 0)) (= (x2977 x1397) x2599)) (and (=> x2962 x2409) (=> (and (not x2962) (= x1197 x2256)) x2937))) x2863))
(assert (= (and x1063 (not x2011)) x2598))
(assert (x563 x1121))
(assert (x563 x20))
(assert (= x295 (x2051 (x1884 x514 x3047 x67 x2748 x295))))
(assert (x563 x1691))
(assert (x563 x131))
(assert (not (x1194 (x242 66 x588 x1852 x2106))))
(assert (> (x242 x1584 x1100 x2912 x1744) 10000))
(assert (x563 x2509))
(assert (= (and x938 x2156) x1346))
(assert (= (and (not x3118) x3149) x1158))
(assert (< 10000 (x1884 x2798 x3004 x2178 x262 x601)))
(assert (x563 x2220))
(assert (= (x2247 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553)) x2353))
(assert (=> (<= x2039 10000) (= (x2768 x2039) 0)))
(assert (x563 x2505))
(assert (x563 x1048))
(assert (= (x1668 x2711 x82 x2 x1785 x409 x2266 x2017) (x2768 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017))))
(assert (x542 x1413 32))
(assert (=> (>= 10000 x2469) (= 0 (x2768 x2469))))
(assert (= x1537 (x181 (x331 x749 x823 x1537 x2701 x757 x1436))))
(assert (x563 x1334))
(assert (= (x2051 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808)) x739))
(assert (x563 x2877))
(assert (=> (<= x1177 10000) (= (x2768 x1177) 0)))
(assert (= x2181 (and x3174 (not x3076))))
(assert (x563 x417))
(assert (x563 x2275))
(assert (= x1265 (and x1251 (not x640))))
(assert (x563 x1845))
(assert (not (x1194 (x489 64 x167 1))))
(assert (x542 x3075 1461501637330902918203684832716283019655932542976))
(assert (x563 x746))
(assert (x563 x705))
(assert (x542 x2673 1461501637330902918203684832716283019655932542976))
(assert (x563 x373))
(assert (> (x1884 x1874 x591 x3185 x2244 x710) 10000))
(assert (x563 x15))
(assert (= (x331 x1609 x646 x195 x537 x535 x1528) (x2768 (x331 x1609 x646 x195 x537 x535 x1528))))
(assert (x563 x2943))
(assert (x563 x2172))
(assert (x563 x3164))
(assert (= (or (and x458 (not x1619)) x1564 (and x855 (not x1257)) (and (not x620) x1282) (and (not x19) x1638)) x1387))
(assert (x563 x1872))
(assert (x563 x463))
(assert (x563 x2219))
(assert (x563 x2684))
(assert (=> (<= x480 10000) (= 0 (x2768 x480))))
(assert (x563 x642))
(assert (x563 x1579))
(assert (x563 x1226))
(assert (= (x2247 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425)) x2992))
(assert (x563 x2003))
(assert (= (x2051 (x331 x593 x1807 x1322 x1981 x90 x178)) x90))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x489 x1609 x1458 x1193)))
(assert (= x364 (and x2320 x2862)))
(assert (x563 x2518))
(assert (= (and x1686 x3093) x213))
(assert (=> (>= 10000 x1688) (= 0 (x2768 x1688))))
(assert (= (or x1972 x1824) x137))
(assert (= (x2768 (x1260 x1874 x1214)) (x1260 x1874 x1214)))
(assert (< (x1260 x2711 x1886) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x2412))
(assert (x563 x2567))
(assert (x648 x501))
(assert (x563 x74))
(assert (x563 x1515))
(assert (= (x2768 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)) (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)))
(assert (x563 x1035))
(assert (= x178 (x2247 (x331 x593 x1807 x1322 x1981 x90 x178))))
(assert (= (x2247 (x331 x1756 x2931 x73 x1688 x688 x930)) x930))
(assert (x563 x2543))
(assert (x563 x1145))
(assert (x563 x1816))
(assert (x563 x2608))
(assert (x563 x2258))
(assert (x563 x851))
(assert (< (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2437 10000) (= (x2768 x2437) 0)))
(assert (not (x1194 (x331 x1609 x646 x195 x537 x535 x1528))))
(assert (x1965 x2218))
(assert (x563 x1032))
(assert (= x581 (and x1524 (not x3056))))
(assert (x563 x2781))
(assert (=> (>= 10000 x346) (= (x2768 x346) 0)))
(assert (=> (>= 10000 x1537) (= (x2768 x1537) 0)))
(assert (= x1395 (x811 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395))))
(assert (x563 x2439))
(assert (= (x811 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)) x2525))
(assert (= x2344 (x2609 (x331 x792 x2344 x1751 x1444 x1301 x1161))))
(assert (x406 64 x839))
(assert (x563 x2331))
(assert (= x1900 (and (not x207) x1420)))
(assert (= (x2768 (x331 x514 x629 x982 x371 x144 x1953)) (x331 x514 x629 x982 x371 x144 x1953)))
(assert (> (x1668 x792 x1354 x2129 x373 x695 x1991 x1096) 10000))
(assert (x563 x3087))
(assert (= (x2768 (x242 x1609 x2023 x1173 x2783)) (x242 x1609 x2023 x1173 x2783)))
(assert (x563 x2651))
(assert (= x2729 (and x2942 x3010)))
(assert (x563 x1010))
(assert (= (and x2101 x751) x902))
(assert (x563 x1238))
(assert (x563 x2060))
(assert (=> (>= 10000 x2666) (= 0 (x2768 x2666))))
(assert (=> (>= 10000 x2552) (= (x2768 x2552) 0)))
(assert (x563 x3097))
(assert (=> (>= 10000 x1239) (= 0 (x2768 x1239))))
(assert (=> (>= 10000 x1166) (= 0 (x2768 x1166))))
(assert (= x2423 (x181 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575))))
(assert (< 10000 (x331 x1273 x1057 x830 x578 x2980 x2662)))
(assert (< (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x1653))
(assert (not (x1194 (x331 x593 x1807 x1322 x1981 x90 x178))))
(assert (= (x2768 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127)) (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127)))
(assert (=> (>= 10000 x1591) (= 0 (x2768 x1591))))
(assert (not (x1194 (x1884 x1273 x1166 x2789 x3155 x2758))))
(assert (x406 32 x1851))
(assert (x563 x2786))
(assert (=> (<= x613 10000) (= (x2768 x613) 0)))
(assert (x563 x882))
(assert (x563 x2135))
(assert (= x593 (x2572 (x1260 x593 x683))))
(assert (= x2286 (x181 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185))))
(assert (= x3139 (or x1689 x2467)))
(assert (x563 x83))
(assert (> (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650) 10000))
(assert (x563 x1997))
(assert (x563 x3033))
(assert (x563 x1189))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1884 x1273 x1166 x2789 x3155 x2758)))
(assert (= x412 (or x798 x3094)))
(assert (=> (<= x2531 10000) (= (x2768 x2531) 0)))
(assert (= x1920 (and (not x2156) x938)))
(assert (x563 x2339))
(assert (x563 x1547))
(assert (= (and x548 x560) x2835))
(assert (x563 x1717))
(assert (=> (<= x2593 10000) (= (x2768 x2593) 0)))
(assert (x1195 x1026))
(assert (x564 x501))
(assert (x648 x1298))
(assert (=> (<= x543 10000) (= 0 (x2768 x543))))
(assert (x563 x1958))
(assert (x563 x2717))
(assert (x563 x1559))
(assert (x563 x423))
(assert (x563 x303))
(assert (= x2711 (x2572 (x242 x2711 x3024 x1115 x404))))
(assert (=> (>= 10000 x3052) (= 0 (x2768 x3052))))
(assert (= (x2051 (x331 x1756 x2931 x73 x1688 x688 x930)) x688))
(assert (x563 x1801))
(assert (x563 x678))
(assert (x563 x2246))
(assert (x563 x1229))
(assert (x563 x961))
(assert (= x2665 (and x3121 x1034)))
(assert (x563 x340))
(assert (x563 x2714))
(assert (not (x1194 (x242 x593 x1798 x2273 x2650))))
(assert (x563 x2539))
(assert (x563 x1567))
(assert (x563 x2047))
(assert (= x1691 (x2247 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395))))
(assert (x563 x679))
(assert (x563 x2785))
(assert (x648 x3175))
(assert (= (x2247 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533)) x267))
(assert (= (x2572 (x489 x593 x626 x11)) x593))
(assert (x1965 64))
(assert (= x1978 (=> (and (= (not (< 128 x2627)) x558) (= x876 (x2269 x3186)) (= (x484 (+ 96 x1361)) x3186) (= x1023 (x484 (+ 96 x3069)))) (and x558 x1737))))
(assert (x563 x550))
(assert (x563 x2815))
(assert (x563 x2583))
(assert (x563 x911))
(assert (not (x1194 (x331 x2798 x1390 x2688 x149 x2703 x825))))
(assert (= (x2768 (x1884 x1380 x2567 x150 x2529 x923)) (x1884 x1380 x2567 x150 x2529 x923)))
(assert (x563 x2151))
(assert (=> (<= x2798 10000) (= (x2768 x2798) 0)))
(assert (x563 x1165))
(assert (x563 x2529))
(assert (x563 x813))
(assert (x563 x1776))
(assert (x563 x821))
(assert (= (x2572 (x1260 x1795 x1218)) x1795))
(assert (x563 x2527))
(assert (= (x2051 (x331 x514 x629 x982 x371 x144 x1953)) x144))
(assert (x563 x2548))
(assert (x563 x1418))
(assert (x563 x2614))
(assert (x563 x2961))
(assert (x563 x1805))
(assert (x563 x2314))
(assert (< (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2051 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017)) x409))
(assert (=> (<= x3183 10000) (= (x2768 x3183) 0)))
(assert (=> (>= 10000 x235) (= (x2768 x235) 0)))
(assert (x563 x1990))
(assert (= (x1260 x1609 x868) (x2768 (x1260 x1609 x868))))
(assert (x563 x436))
(assert (=> (<= x3191 10000) (= (x2768 x3191) 0)))
(assert (=> (<= x460 10000) (= 0 (x2768 x460))))
(assert (= x1774 (x2609 (x1260 x749 x1774))))
(assert (= (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835) (x2768 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835))))
(assert (x563 x1525))
(assert (x563 x981))
(assert (= (and (not x118) x772) x592))
(assert (= x352 (=> (and (= x2697 (> x1055 0)) (= x1055 (x2553 x2380)) (= x2560 (x2553 x908)) (>= x2005 1) (= x2005 (x2553 x2380))) (and (=> x2697 x2893) (=> (and (not x2697) (= x781 x101)) x1414)))))
(assert (x563 x621))
(assert (x563 x951))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1884 x749 x1240 x776 x724 x2027)))
(assert (x563 x133))
(assert (= x838 (=> (and (= x1998 (= x2038 0)) (<= x1212 2) (= x2038 (ite (= 0 x1212) 1 0))) (and (=> (and x1998 (and (= x3044 (ite (= 1 x1212) 1 0)) (= x2471 (= 0 x3044)))) (and (=> (and (not x2471) (and (= 0 x577) (= x1941 (x526 x908)) (= (< 0 x1941) x2156))) (and (=> (and (and (= 0 x1429) (= x924 x2015) (= x1629 0)) (not x2156)) x1614) (=> (and x2156 (and (>= x975 1) (= x3151 (x526 x2727)) (= (ite (= 2 x3151) 1 0) x1350) (= (x526 x1477) x2727) (>= 5 x3151) (= (x484 (+ 32 x908)) x1477) (= (= 0 x1350) x1665) (= (x526 x908) x975))) (and (=> (and (and (= x292 0) (= 1 x615) (= x147 0) (= 0 x1729)) (not x1665)) x3008) (=> (and x1665 (and (or (and (and (= x2193 (x526 x2727)) (= x2300 1) (= 1 x567) (= x517 1) (= x2193 1) (= 0 x1529) (= x2260 2)) x118) (and (not x118) (and (= x567 0) (= x1529 1) (= 0 x2300) (= 1 x2260)))) (and (<= x1681 5) (= x1681 (x526 x2727)) (= x1583 (ite (= 3 x1681) 1 0)) (= (= 0 x1583) x118)))) x2298))))) (=> (and (and (= 2 x1212) (= x199 (x526 x908)) (= x2201 (> x1483 0)) (= (x526 x2380) x1483) (= 1 x846) (= 0 x199)) x2471) (and (=> (and (and (= 0 x1123) (= x674 0)) (not x2201)) x504) (=> (and x2201 (and (= (= 0 x1402) x220) (>= 5 x1242) (= (x526 x1710) x1242) (>= x433 1) (= (ite (= x1242 1) 1 0) x1402) (= x1710 (x526 x804)) (= x433 (x526 x2380)) (= (x484 (+ x2380 32)) x804))) (and (=> (and (and (or (and (and (= x618 3) (= x618 (x526 x1710)) (= 1 x1855)) (not x2945)) (and (= x702 1) x2945)) (and (= x702 (ite (= x2488 2) 1 0)) (= (x526 x1710) x2488) (<= x2488 5) (= x2945 (< 0 x702)))) x220) x768) (=> (and (not x220) (and (= x2084 1) (= x921 0))) x713))))))) (=> (and (and (= (> x2784 0) x3118) (= x2878 (x526 x908)) (= (x526 x908) x2784) (>= x2878 1) (= x972 0)) (not x1998)) (and (=> (and (not x3118) (= x2015 x781)) x352) (=> (and x3118 (and (and (= (x526 x908) x1406) (= x336 (ite (= x1764 2) 1 0)) (= (x526 x2788) x1764) (= x1885 (= 0 x336)) (>= x1406 1) (= (x526 x643) x2788) (>= 5 x1764) (= x643 (x484 (+ 32 x908)))) (or (and (= 0 x2254) (not x1885)) (and (and (= 3 x1969) (= x1969 (x526 x2788)) (= x2254 1) (= x658 1)) x1885)))) x37)))))))
(assert (= (x2768 (x489 64 x551 1)) (x489 64 x551 1)))
(assert (x563 x195))
(assert (x564 x3075))
(assert (x563 x1252))
(assert (x563 x188))
(assert (x563 x1239))
(assert (= x798 (and x2117 x1061)))
(assert (= (x2572 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)) x1795))
(assert (=> (<= x1256 10000) (= 0 (x2768 x1256))))
(assert (x563 x2817))
(assert (x563 x1288))
(assert (=> (<= x830 10000) (= 0 (x2768 x830))))
(assert (x563 x2867))
(assert (= (x2572 (x242 x1273 x2284 x2858 x1366)) x1273))
(assert (=> (<= x356 10000) (= 0 (x2768 x356))))
(assert (< 10000 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395)))
(assert (x563 x1774))
(assert (x1195 x481))
(assert (=> (>= 10000 x2592) (= 0 (x2768 x2592))))
(assert (x563 x2981))
(assert (= x1650 (x811 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650))))
(assert (x563 x1710))
(assert (x563 x469))
(assert (x563 x228))
(assert (= x1689 (and x2159 x605)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x242 x1756 x347 x2484 x2091)))
(assert (x563 x3071))
(assert (= x987 (and x1278 x2809)))
(assert (=> (<= x212 10000) (= (x2768 x212) 0)))
(assert (= (and x466 x322) x1463))
(assert (x563 x1530))
(assert (= (and (not x1885) x2568) x2707))
(assert (x563 x2303))
(assert (x563 x383))
(assert (x1555 x1514 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x1195 x1440))
(assert (x563 x1591))
(assert (x563 x695))
(assert (x563 x368))
(assert (x563 x1661))
(assert (=> (<= x3178 10000) (= 0 (x2768 x3178))))
(assert (x563 x599))
(assert (x563 x2005))
(assert (not (x1194 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553))))
(assert (x563 x2324))
(assert (= (x2768 111717504842162250273123531270270194031611963357183166590777697365354585522176) 0))
(assert (x563 x956))
(assert (x563 x2307))
(assert (= (x242 x2658 x2982 x246 x632) (x2768 (x242 x2658 x2982 x246 x632))))
(assert (x563 x2952))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639712))
(assert (x563 x757))
(assert (= (x811 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017)) x2017))
(assert (= x2881 (x2051 (x331 x1584 x217 x480 x3002 x2881 x1155))))
(assert (x563 x479))
(assert (= x820 (x181 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650))))
(assert (x563 x1386))
(assert (x563 x629))
(assert (x563 x1701))
(assert (x563 x2645))
(assert (x563 x1055))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x563 x1832))
(assert (x563 x2136))
(assert (= (and x2962 x86) x809))
(assert (x563 x2480))
(assert (=> (<= x1267 10000) (= 0 (x2768 x1267))))
(assert (x563 x808))
(assert (x563 x715))
(assert (x563 x3175))
(assert (= x2493 (and x2330 (not x2945))))
(assert (= (x2572 (x331 x2711 x1177 x1274 x767 x3057 x1224)) x2711))
(assert (x563 x2713))
(assert (= (x2247 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808)) x2504))
(assert (> (x1884 x749 x1240 x776 x724 x2027) 10000))
(assert (x1194 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (x563 x435))
(assert (x563 x2167))
(assert (x563 x470))
(assert (> (x331 x2711 x1177 x1274 x767 x3057 x1224) 10000))
(assert (x563 x1363))
(assert (= x1258 (x119 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315))))
(assert (=> (<= x593 10000) (= 0 (x2768 x593))))
(assert (=> (>= 10000 x757) (= (x2768 x757) 0)))
(assert (=> (<= x15 10000) (= (x2768 x15) 0)))
(assert (x563 x1044))
(assert (x563 x1403))
(assert (= (and x493 x1099) x2065))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639809) 0))
(assert (x1965 x1104))
(assert (= x1906 (and x1617 (not x1725))))
(assert (=> (<= x3004 10000) (= (x2768 x3004) 0)))
(assert (x563 x1483))
(assert (x563 x2847))
(assert (x563 x2580))
(assert (x563 x2888))
(assert (x563 x3057))
(assert (x563 x1413))
(assert (x563 x717))
(assert (=> (>= 10000 x1458) (= (x2768 x1458) 0)))
(assert (x563 x1987))
(assert (= x1874 (x2572 (x1884 x1874 x591 x3185 x2244 x710))))
(assert (x1194 2189116922))
(assert (x563 x3020))
(assert (x1965 x2884))
(assert (= (x2572 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838)) x1584))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639615))
(assert (= (x181 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553)) x374))
(assert (x563 x498))
(assert (x1965 x1791))
(assert (=> (<= x447 10000) (= 0 (x2768 x447))))
(assert (= x2662 (x2247 (x331 x1273 x1057 x830 x578 x2980 x2662))))
(assert (= (=> (and (= (= x380 0) x2542) (or x2542 (not x2542))) x1846) x1683))
(assert (x563 x901))
(assert (x563 x246))
(assert (= x3094 (or x1387 x415)))
(assert (x563 x3156))
(assert (x563 x1203))
(assert (x563 x1595))
(assert (x563 x1896))
(assert (x563 x189))
(assert (x563 x1305))
(assert (x563 x2125))
(assert (< 10000 (x242 x1795 x746 x2135 x959)))
(assert (= x18 (and x1199 x2471)))
(assert (> (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575) 10000))
(assert (x563 x2552))
(assert (=> (>= 10000 x926) (= (x2768 x926) 0)))
(assert (x563 x914))
(assert (= (and (not x286) x1000) x2826))
(assert (= (x2609 (x1260 x2711 x1886)) x1886))
(assert (x1194 18446744073709551613))
(assert (x563 x1684))
(assert (x563 x2525))
(assert (x563 x1143))
(assert (= (x2609 (x331 x1874 x1628 x1450 x2418 x2551 x2635)) x1628))
(assert (x563 x2485))
(assert (x563 x997))
(assert (x648 x1405))
(assert (= (x2609 (x1260 x2798 x3189)) x3189))
(assert (x563 x3162))
(assert (=> (>= 10000 x180) (= 0 (x2768 x180))))
(assert (= (x2768 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835)) (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835)))
(assert (x406 32 x1850))
(assert (= (x2768 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630)) (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630)))
(assert (=> (>= 10000 x630) (= (x2768 x630) 0)))
(assert (x563 x2360))
(assert (x563 x146))
(assert (x563 x782))
(assert (x563 x356))
(assert (x563 x593))
(assert (> (x1260 x1584 x1591) 10000))
(assert (x563 x1651))
(assert (x563 x1351))
(assert (x542 x2109 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x2881 10000) (= (x2768 x2881) 0)))
(assert (=> (<= x2811 10000) (= 0 (x2768 x2811))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835)))
(assert (= x2229 (x2247 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630))))
(assert (= x719 (x2609 (x331 x2658 x719 x299 x38 x1936 x1153))))
(assert (= (x2572 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835)) x1273))
(assert (x563 x1898))
(assert (= x1897 (and x663 (not x1036))))
(assert (x563 x2657))
(assert (x563 x859))
(assert (=> (>= 10000 x246) (= (x2768 x246) 0)))
(assert (x563 x1656))
(assert (= (and x805 (not x743)) x1680))
(assert (x563 x2898))
(assert (=> (>= 10000 x1224) (= (x2768 x1224) 0)))
(assert (x1194 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (x563 x3003))
(assert (=> (<= x1739 10000) (= (x2768 x1739) 0)))
(assert (x563 x348))
(assert (x563 x1423))
(assert (= (x119 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835)) x1641))
(assert (= 0 (x2768 2065879269284)))
(assert (x563 x2390))
(assert (= (x2572 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926)) x2798))
(assert (x563 x2119))
(assert (=> (>= 10000 x3047) (= (x2768 x3047) 0)))
(assert (x563 x2075))
(assert (x563 x2824))
(assert (= x2008 (=> (and (= (x484 (+ x461 32)) x128) (= x1666 (x484 (+ 32 x2213))) (= (x637 x461) x337) (= (not (< 4 x2087)) x2460)) (and x2460 (=> (and (= x2544 x128) (= x1666 x1618) (= 4 x51)) x532)))))
(assert (not (x1194 (x331 x1273 x1057 x830 x578 x2980 x2662))))
(assert (x563 x1902))
(assert (x563 x3176))
(assert (x406 128 x2888))
(assert (> (x1260 x2658 x556) 10000))
(assert (x563 x740))
(assert (= (x2768 (x489 x1380 x98 x2121)) (x489 x1380 x98 x2121)))
(assert (x563 x2758))
(assert (= (and (not x3023) x97) x1249))
(assert (not (x1194 (x1260 x1380 x59))))
(assert (x542 x1701 32))
(assert (= (x181 (x1884 x1380 x2567 x150 x2529 x923)) x150))
(assert (x563 x1781))
(assert (= (x811 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253)) x1531))
(assert (= x866 (=> (and (<= x1590 18446744073709551614) (>= 18446744073709551615 x3077) (or (<= x1552 18446746139588821059) (>= x1552 57896044618658097711785492504343953926634992332820282019728792003956564820100)) (= x3077 (x2818 x639)) (<= x2050 18446744073709551613) (= x1094 (x484 (+ x2329 x438))) (< x2499 x1632) (= x1307 (x484 (+ x682 32))) (= (x2818 x1317) x1779) (= x2772 (not (< x2874 x1457))) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1552) (> x2911 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2911) (<= x1552 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2911 x1552))) (= (x1200 (- x1552 x1094)) x2585) (<= 2 x1632) (= x639 (x484 (+ x1488 32))) (or (>= x2050 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 18446744073709551518 x2050)) (= x2499 (x484 (+ 96 x2050))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2050) (<= x2050 18446744073709551518)) (>= 18446744073709551614 x2050) (or (>= x2329 57896044618658097711785492504343953926634992332820282019728792003956564820068) (<= x2329 18446746139588821027)) (= x1317 (x484 (+ x1094 x3077))) (= (+ 31 x1779) x1413) (= x2911 (x484 (+ 31 x1317))) (not (> x2499 x1632)) (= x2024 (x2818 x1488)) (<= x2050 18446744073709551614) (>= 18446744073709551615 x1779) (not (< x2499 x2050)) (= (+ x1590 x2499) x1632) (not (> x1801 x1552)) (= x2825 (+ x445 x1779)) (= x1701 (+ 63 x3079)) (= (+ 32 x2499) x445) (or (>= 18446746139588821027 x1317) (>= x1317 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2050) (>= 18446744073709551518 x2050)) (>= x2585 96) (= (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1701) x1590) (= (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1413) x3079) (= (x2818 x2329) x438) (> x2499 x2050) (= x2928 (x484 (+ x1317 32))) (>= 18446744073709551615 x1632) (= (x484 (+ x2928 x1779)) x1801) (= (x484 (+ x2050 32)) x682) (>= 18446744073709551614 x2050) (<= x438 18446744073709551615) (= (x484 (+ 32 x2329)) x2874) (<= x2050 18446744073709551613) (= (x484 (+ 32 x1094)) x1488) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2585) (or (>= 18446746139588821027 x1094) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x1094)) (<= x441 1461501637330902918203684832716283019655932542975) (>= 18446744073709551613 x2050) (= x441 (x2818 x1094))) (and x2772 (=> (= x78 x1632) x1868)))))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639646))
(assert (=> (<= x1436 10000) (= 0 (x2768 x1436))))
(assert (x563 x2850))
(assert (x960 x998))
(assert (= x1859 (x2609 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185))))
(assert (x563 x1122))
(assert (x563 x1504))
(assert (x563 x2693))
(assert (x563 x2843))
(assert (= x1262 (and x2249 (not x1520))))
(assert (x824 x2538))
(assert (< (x489 64 x167 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x843))
(assert (not (x1194 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808))))
(assert (x563 x2521))
(assert (= (x2572 (x1260 x1273 x42)) x1273))
(assert (= (and x2134 x1613) x3010))
(assert (x563 x1308))
(assert (x648 x1122))
(assert (x563 x438))
(assert (x563 x1610))
(assert (x563 x2653))
(assert (x563 x1376))
(assert (=> (<= x2964 10000) (= 0 (x2768 x2964))))
(assert (= (x242 x1756 x347 x2484 x2091) (x2768 (x242 x1756 x347 x2484 x2091))))
(assert (< 10000 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236)))
(assert (= (x2609 (x489 x2798 x802 x600)) x802))
(assert (x1195 x1299))
(assert (x563 x2335))
(assert (= x646 (x2609 (x331 x1609 x646 x195 x537 x535 x1528))))
(assert (= x601 (x2051 (x1884 x2798 x3004 x2178 x262 x601))))
(assert (= x1702 (and x1270 x2225)))
(assert (not (x1194 (x331 x1795 x1328 x164 x974 x553 x3178))))
(assert (x563 x2971))
(assert (x563 x2506))
(assert (x563 x180))
(assert (=> (>= 10000 x2507) (= (x2768 x2507) 0)))
(assert (= (=> (and (= x1462 (x2605 x888)) (= (not (< 4 x1851)) x1762) (= (x484 (+ 32 x2589)) x1418) (= (x484 (+ 32 x888)) x650)) (and x1762 (=> (and (= x650 x3092) (= 4 x2359) (= x1418 x1690)) x512))) x1999))
(assert (x563 x1350))
(assert (x648 x836))
(assert (not (x1194 (x242 x1795 x746 x2135 x959))))
(assert (> (x1884 x2711 x1758 x447 x935 x255) 10000))
(assert (x563 x360))
(assert (=> (>= 10000 x184) (= (x2768 x184) 0)))
(assert (= (x181 (x489 64 x551 1)) 1))
(assert (=> (>= 10000 x1609) (= 0 (x2768 x1609))))
(assert (x563 x2264))
(assert (not (x1194 (x242 x2711 x3024 x1115 x404))))
(assert (= x862 (or x137 x1920)))
(assert (=> (>= 10000 x2858) (= (x2768 x2858) 0)))
(assert (x563 x891))
(assert (x563 x3047))
(assert (x960 x1823))
(assert (x563 x1202))
(assert (= (or x3190 x2237) x2117))
(assert (x563 x3028))
(assert (x563 x2969))
(assert (x563 x2259))
(assert (x563 x1603))
(assert (x563 x2228))
(assert (x563 x691))
(assert (x563 x2490))
(assert (= (x2051 (x1884 x593 x1880 x3017 x1393 x2291)) x2291))
(assert (x406 32 x933))
(assert (x563 x481))
(assert (= (x2051 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236)) x2593))
(assert (=> (>= 10000 x2872) (= 0 (x2768 x2872))))
(assert (=> (>= 10000 x3017) (= (x2768 x3017) 0)))
(assert (x563 x3040))
(assert (x563 x895))
(assert (=> (>= 10000 x295) (= 0 (x2768 x295))))
(assert (x563 x2221))
(assert (= x2453 (and (not x2062) x1949)))
(assert (= x276 (x181 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253))))
(assert (x563 x1915))
(assert (x563 x1416))
(assert (x563 x487))
(assert (= (x2768 (x489 x1874 x3191 x1010)) (x489 x1874 x3191 x1010)))
(assert (x563 x976))
(assert (x563 x490))
(assert (x563 x2936))
(assert (x563 x921))
(assert (x648 x3075))
(assert (not (x1194 (x489 x593 x626 x11))))
(assert (x563 x3024))
(assert (= (x2609 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835)) x318))
(assert (x563 x1982))
(assert (x563 x2744))
(assert (= (x2768 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185)) (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185)))
(assert (x563 x538))
(assert (x563 x591))
(assert (= x546 (x2247 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926))))
(assert (x563 x812))
(assert (= x768 (=> (and (= x2360 1) (= 1 x921) (= 0 x2084)) x713)))
(assert (x563 x2424))
(assert (x563 x2183))
(assert (x563 x825))
(assert (x563 x1473))
(assert (x563 x45))
(assert (x563 x1098))
(assert (=> (>= 10000 x374) (= 0 (x2768 x374))))
(assert (=> (>= 10000 x749) (= (x2768 x749) 0)))
(assert (=> (>= 10000 x1161) (= 0 (x2768 x1161))))
(assert (=> (>= 10000 x1069) (= 0 (x2768 x1069))))
(assert (x563 x1583))
(assert (=> (<= x935 10000) (= (x2768 x935) 0)))
(assert (x563 x1878))
(assert (x564 x2335))
(assert (x563 x2288))
(assert (x563 x668))
(assert (= (x331 x792 x2344 x1751 x1444 x1301 x1161) (x2768 (x331 x792 x2344 x1751 x1444 x1301 x1161))))
(assert (= x1428 (=> (and (and (= x1823 (x484 (+ x574 31))) (<= 1 x2793) (= x1982 (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1823)) (= x2575 (< 0 x380)) (= x2793 (x136 x3012)) (= x893 (x484 (+ x574 x2957))) (= (x1200 (- x2965 x1910)) x3025) (= x2965 (x484 (+ x2957 x1982)))) (or (not x2575) (and x2575 (and x1467 (<= x872 4294967295) (= x2670 (x1888 x3012)) (= x2262 (x1888 x1603)) x120 (= (= x2670 (x3120 x3012)) x1467) (= (<= x2262 (x3120 x1603)) x120))))) x1683)))
(assert (=> (<= x724 10000) (= 0 (x2768 x724))))
(assert (x563 x1086))
(assert (= (x2609 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533)) x1192))
(assert (x563 x461))
(assert (x542 x2615 1461501637330902918203684832716283019655932542976))
(assert (x563 x369))
(assert (= x1380 (x2572 (x331 x1380 x2868 x636 x1281 x279 x2383))))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639808) 0))
(assert (not (x1194 (x1884 x2711 x1758 x447 x935 x255))))
(assert (= (or x366 x2013) x218))
(assert (x648 x57))
(assert (= x52 (or x462 x1421)))
(assert (x563 x1043))
(assert (x1965 x963))
(assert (=> (>= 10000 x2583) (= 0 (x2768 x2583))))
(assert (= x2937 (=> (and (= (x2566 x135) x2252) (= x1826 (< 0 x1876)) (= x1876 (x2566 x2252))) (and (=> (and x1826 (and (= (x2566 x1671) x71) (= (x2601 1461501637330902918203684832716283019655932542975 x1832) x2632) (= (x484 (+ x607 32)) x2206) (= (x484 (+ 32 x131)) x92) (= x2354 (x484 (+ x1745 32))) (= (x2566 x131) x1875) (= (x2820 x1745) x1579) (= x1671 (x2566 x135)) (= (< 0 x1579) x928) (= x1512 (x484 (+ x1671 32))) (<= 1 x71) (= (x484 (+ x45 32)) x2275) (= x1921 (x484 (+ x45 128))) (= x131 (x484 (+ x2625 32))) (= (x2566 x1512) x2625) (= x45 (x484 (+ x2256 32))) (= x1832 (x2566 x2625)) (= x383 (x484 (+ x1921 32))) (= x1745 (x2566 x92)) (= (x484 (+ 32 x2275)) x607))) (and (=> (and x928 (and (= x2816 (> x1579 32)) (= x2161 (x202 x2354)))) (and (=> (not x2816) x1599) (=> (and (and (= x1305 (x484 (+ x2354 32))) (= (< 64 x1579) x278) (= x2769 (x1913 x1305)) (= x763 (x484 (+ x383 32)))) x2816) (and (=> (and x278 (and (= x640 (> x1579 96)) (= x1468 (x2722 x365)) (= (x484 (+ 64 x2354)) x365) (= x1849 (x484 (+ x383 64))))) (and (=> (not x640) x1599) (=> x640 x1601))) (=> (not x278) x1599))))) (=> (not x928) x1599))) (=> (and (and (= x135 x3066) (= x2865 x2256)) (not x1826)) x1973)))))
(assert (x563 x2616))
(assert (x564 x654))
(assert (x563 x2797))
(assert (x563 x2851))
(assert (= (x2768 (x1260 x593 x683)) (x1260 x593 x683)))
(assert (x563 x2191))
(assert (x563 x781))
(assert (=> (<= x2129 10000) (= (x2768 x2129) 0)))
(assert (x563 x216))
(assert (= (x2768 (x331 x1584 x217 x480 x3002 x2881 x1155)) (x331 x1584 x217 x480 x3002 x2881 x1155)))
(assert (=> (>= 10000 x1541) (= (x2768 x1541) 0)))
(assert (x542 x1031 1461501637330902918203684832716283019655932542976))
(assert (x563 x1297))
(assert (x563 x984))
(assert (x563 x2878))
(assert (= (=> (and (= x2052 (x484 (+ x1724 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1353) (= x1933 (x2818 x2686)) (= x1356 (x484 (+ 128 x1353))) (= x1644 (x484 (+ 32 x436))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1353)) (= (not (> x2888 1)) x1563) (>= 1461501637330902918203684832716283019655932542975 x1933) (<= x1556 57896044618658097711785492504343953926634992332820282019728792003956564819967) (not (> x1353 x1356)) (>= 18446744073709551614 x1353) (= (x484 (+ 32 x2686)) x1724) (>= 18446744073709551615 x1353) (<= x1353 18446744073709551615) (= (x2818 x1724) x1976) (= (x2818 x2304) x2325) (= x1556 (x1200 (- x1802 x2304))) (= x2686 (x484 (+ 32 x2304))) (>= 5 x2325) (= (x2818 x2052) x1565) (>= 18446744073709551614 x1353) (< x1353 x1356) (= x436 (x484 (+ x1353 32))) (>= x1556 128) (or (>= 18446744073709551487 x1353) (>= x1353 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820645 x2304) (>= 2065879269316 x2304)) (= x2871 (x484 (+ x1644 32))) (or (<= x1353 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x1353))) (and x1563 (=> (= x1356 x957) x263))) x2634))
(assert (x1195 x1122))
(assert (=> (<= x2841 10000) (= (x2768 x2841) 0)))
(assert (=> (<= x189 10000) (= 0 (x2768 x189))))
(assert (x563 x2947))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1884 x1795 x2313 x1226 x1678 x3107)))
(assert (=> (>= 10000 x2106) (= (x2768 x2106) 0)))
(assert (=> (<= x575 10000) (= (x2768 x575) 0)))
(assert (x563 x2085))
(assert (x563 x11))
(assert (not (x1194 (x331 x1756 x2931 x73 x1688 x688 x930))))
(assert (x563 x2015))
(assert (x563 x1224))
(assert (x563 x1083))
(assert (x563 x541))
(assert (x648 x1550))
(assert (< (x1884 x2658 x1938 x2044 x1858 x449) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (=> (<= x1214 10000) (= 0 (x2768 x1214))))
(assert (x563 x3141))
(assert (x563 x2163))
(assert (x563 x546))
(assert (< (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x648 x2615))
(assert (= (x119 (x242 x2658 x2982 x246 x632)) x632))
(assert (= (x2768 134217728) 0))
(assert (=> (<= x878 10000) (= (x2768 x878) 0)))
(assert (< (x1884 x792 x346 x1657 x2734 x2954) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x176))
(assert (x563 x847))
(assert (= x914 (x2051 (x1884 x1584 x2398 x2841 x2461 x914))))
(assert (x564 x1031))
(assert (= (x2768 (x331 x1756 x2931 x73 x1688 x688 x930)) (x331 x1756 x2931 x73 x1688 x688 x930)))
(assert (< 10000 (x489 x1795 x2039 x732)))
(assert (x563 x1766))
(assert (x563 x654))
(assert (x563 x2812))
(assert (not (x1194 (x1884 x593 x1880 x3017 x1393 x2291))))
(assert (= (x2768 (x1884 x792 x346 x1657 x2734 x2954)) (x1884 x792 x346 x1657 x2734 x2954)))
(assert (x563 x315))
(assert (x563 x2152))
(assert (x563 x1406))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039439137263839420088228)))
(assert (x563 x1295))
(assert (< 10000 (x489 x2658 x2293 x2507)))
(assert (=> (>= 10000 x1657) (= 0 (x2768 x1657))))
(assert (= x1252 (x2051 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650))))
(assert (= 0 (x2768 95932229227554293267862761608555258089024927314852490146714677558661980618752)))
(assert (= (x2051 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185)) x1145))
(assert (= x1239 (x2609 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926))))
(assert (x542 x481 32))
(assert (= x1004 (=> (= x1658 x1580) x1895)))
(assert (= x1664 (and x805 x743)))
(assert (= (=> (and (= x839 (x2098 x1989)) (= x468 (x484 (+ 32 x1358))) (= x1358 (x484 (+ x1519 4))) (= (x484 (+ 32 x1989)) x1940) (= x979 (x484 (+ 32 x1297))) (= x1297 (x484 (+ x1358 64))) (= (< 0 x839) x555)) (and (=> x555 x2976) (=> (and (and (= x940 x979) (= 0 x603) (= x2119 x1940)) (not x555)) x1159))) x954))
(assert (= (x2572 (x242 x1584 x1100 x2912 x1744)) x1584))
(assert (< (x1260 x2658 x556) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x2979))
(assert (x1195 x1413))
(assert (x563 x1280))
(assert (x563 x2778))
(assert (x563 x2295))
(assert (x563 x2104))
(assert (=> (>= 10000 x2273) (= (x2768 x2273) 0)))
(assert (x406 160 x2548))
(assert (x563 x549))
(assert (x542 x1298 1461501637330902918203684832716283019655932542976))
(assert (= x1450 (x181 (x331 x1874 x1628 x1450 x2418 x2551 x2635))))
(assert (= (x2939 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236)) x236))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x863) (= (x194 192) x1856) (= (x194 x1856) x1212) (= x2380 (x194 x2699)) (<= x863 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (= 0 x1104) x254) (= x2118 (x194 x908)) (= x2570 (* x1104 32)) (= x1104 (x484 (+ x730 x2118))) (<= 1 x1767) (= x1767 (x484 (+ x863 (mod (+ 32 x2570) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x730 (x194 x2380)) (<= x863 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (>= (+ x730 x2118) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x863 x1767) (= (x194 x1530) x908) (>= 18446744073709551615 x1104)) (and (=> (and x254 (= x2015 x1767)) x838) (=> (and (not x254) (and (= x642 (x484 (+ 32 x2540))) (not (= x1767 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1767) (> x1698 x1767) (= x1836 (x484 (+ x1767 32))) (= (x1200 (- x1104 1)) x1776) (= (x484 (+ 32 x863)) x123) (= x466 (= 1 x1104)) (= (x484 (+ x1767 160)) x1698) (<= x1767 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1767)) (= x2167 (x484 (+ 32 x642))) (= x1386 (x484 (+ x123 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1767) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1767)) (= (x484 (+ 32 x1836)) x2540))) (and (=> (and (= x731 x1698) x466) x530) (=> (and (not x466) (and (= x2131 (x484 (+ 32 x1698))) (= (x484 (+ x1698 160)) x1901) (= x2653 (x484 (+ x2689 32))) (not (= x1698 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not (= x1698 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1698) (not (= x1698 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x1698 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2689 (x484 (+ 32 x3078))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1698) (= (x484 (+ 32 x2131)) x3078) (> x1901 x1698) (= (= x1776 1) x385))) (and (=> (not x385) x2057) (=> (and (= x1901 x731) x385) x530))))))) x2579))
(assert (=> (<= x1366 10000) (= 0 (x2768 x1366))))
(assert (x563 x2362))
(assert (= (x181 (x331 x593 x1807 x1322 x1981 x90 x178)) x1322))
(assert (x563 x2586))
(assert (x824 x685))
(assert (x563 x1125))
(assert (x563 x3186))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (x563 x2560))
(assert (x563 x2712))
(assert (=> (<= x1650 10000) (= (x2768 x1650) 0)))
(assert (x563 x365))
(assert (= x1760 (or x2452 x341 x2598 x1314 x502)))
(assert (= x2846 (or x2590 x809)))
(assert (x542 x334 1461501637330902918203684832716283019655932542976))
(assert (x563 x574))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639776)))
(assert (=> (>= 10000 x930) (= 0 (x2768 x930))))
(assert (x563 x601))
(assert (= (x2572 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395)) x1609))
(assert (x563 x932))
(assert (x563 x2728))
(assert (x563 x1836))
(assert (x563 x1470))
(assert (=> (<= x2440 10000) (= (x2768 x2440) 0)))
(assert (x563 x2168))
(assert (x563 x64))
(assert (= (x119 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150)) x3183))
(assert (=> (<= x535 10000) (= (x2768 x535) 0)))
(assert (x563 x2248))
(assert (x564 x1987))
(assert (x563 x1806))
(assert (< 10000 (x1260 x1609 x868)))
(assert (= (and x2945 x2330) x1109))
(assert (= (=> (and (<= x2340 5) (> x717 x1105) (not (= x1105 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x2430 (x2818 x2116)) (= (x484 (+ 160 x1105)) x717) (= (x2818 x3072) x2060) (= x1050 (x2818 x2771)) (>= 18446744073709551615 x1105) (= (x484 (+ 32 x2480)) x1653) (>= 1461501637330902918203684832716283019655932542975 x2060) (= (x484 (+ x2771 32)) x2672) (= (x484 (+ x2116 32)) x2771) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1105) (<= x1105 18446744073709551614) (= (x1200 (- x1802 x44)) x2511) (= (x484 (+ 32 x3072)) x2116) (not (> x1105 x717)) (or (>= x1105 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x1105 18446744073709551455)) (= x3072 (x484 (+ 32 x44))) (<= x1105 18446744073709551614) (<= x1474 1461501637330902918203684832716283019655932542975) (or (>= 2065879269284 x44) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820645 x44)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1105) (>= 18446744073709551455 x1105)) (<= 160 x2511) (= x2340 (x2818 x44)) (= x176 (x484 (+ x1653 32))) (<= x1105 18446744073709551615) (= (x484 (+ 32 x3097)) x2480) (= x2836 (not (> x2548 1))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2511) (= x1474 (x2818 x2672)) (= x3097 (x484 (+ 32 x1105)))) (and x2836 (=> (= x970 x717) x1942))) x762))
(assert (< (x242 x2711 x3024 x1115 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1965 x1233))
(assert (x563 x1704))
(assert (x563 x2217))
(assert (=> (>= 10000 x496) (= 0 (x2768 x496))))
(assert (x563 x802))
(assert (x563 x2915))
(assert (x563 x585))
(assert (=> (>= 10000 x1192) (= (x2768 x1192) 0)))
(assert (=> (<= x1479 10000) (= 0 (x2768 x1479))))
(assert (> (x242 x1609 x2023 x1173 x2783) 10000))
(assert (x563 x1984))
(assert (x563 x1096))
(assert (= (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993) (x2768 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993))))
(assert (= x2490 (x2609 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794))))
(assert (=> (>= 10000 x1125) (= (x2768 x1125) 0)))
(assert (x563 x109))
(assert (x563 x936))
(assert (x563 x545))
(assert (= x303 (x119 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127))))
(assert (x563 x2193))
(assert (=> (>= 10000 x2954) (= (x2768 x2954) 0)))
(assert (x563 x1855))
(assert (x563 x2885))
(assert (x563 x2321))
(assert (x564 x1026))
(assert (x563 x929))
(assert (x563 x2687))
(assert (x563 x1820))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x119 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650)) x791))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1260 x1273 x42)))
(assert (x563 x884))
(assert (x563 x982))
(assert (x563 x173))
(assert (= (=> (and (= x2443 x3124) (= x1797 x1026) (= x808 x691) (= x198 x2681)) x2447) x1391))
(assert (x563 x2701))
(assert (= x825 (x2247 (x331 x2798 x1390 x2688 x149 x2703 x825))))
(assert (x563 x2371))
(assert (x563 x402))
(assert (x563 x1714))
(assert (x1965 x2888))
(assert (x563 x1160))
(assert (x563 x603))
(assert (x960 x1122))
(assert (x1965 x2901))
(assert (= (x181 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533)) x1043))
(assert (= (x119 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096)) x373))
(assert (x563 x908))
(assert (x1194 4294967295))
(assert (x406 32 x1677))
(assert (x1965 x933))
(assert (x563 x236))
(assert (x563 x2964))
(assert (=> (<= x2711 10000) (= (x2768 x2711) 0)))
(assert (= (and x218 (not x906)) x3190))
(assert (= x2284 (x2609 (x242 x1273 x2284 x2858 x1366))))
(assert (x563 x2365))
(assert (x563 x2532))
(assert (= (x2572 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808)) x1874))
(assert (x563 x1494))
(assert (x563 x68))
(assert (= (and x1411 x832) x1289))
(assert (x563 x865))
(assert (x563 x1907))
(assert (x563 x295))
(assert (x1194 79228162514264337593543950336))
(assert (x563 x116))
(assert (x563 x243))
(assert (x563 x2706))
(assert (= x2798 (x2572 (x331 x2798 x1390 x2688 x149 x2703 x825))))
(assert (=> (>= 10000 x1715) (= 0 (x2768 x1715))))
(assert (=> (<= x1185 10000) (= (x2768 x1185) 0)))
(assert (= x1380 (x2572 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794))))
(assert (= (and x928 x1250) x2944))
(assert (= (x242 x792 x2440 x1189 x2666) (x2768 (x242 x792 x2440 x1189 x2666))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x1273 x1057 x830 x578 x2980 x2662)))
(assert (x563 x1558))
(assert (x563 x3095))
(assert (x563 x3155))
(assert (x563 x58))
(assert (x563 x310))
(assert (x563 x844))
(assert (x960 x729))
(assert (x563 x1658))
(assert (x563 x1767))
(assert (= (or x853 x897 x1869 x152 x1897) x2481))
(assert (x563 x2950))
(assert (=> (<= x599 10000) (= 0 (x2768 x599))))
(assert (x563 x268))
(assert (= (and x640 x1251) x419))
(assert (x563 x2777))
(assert (x563 x1457))
(assert (x563 x292))
(assert (x563 x1247))
(assert (x563 x77))
(assert (=> (>= 10000 x1808) (= 0 (x2768 x1808))))
(assert (x563 x2332))
(assert (x563 x1110))
(assert (x563 x2514))
(assert (x563 x696))
(assert (= (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808) (x2768 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808))))
(assert (= (x2609 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425)) x978))
(assert (= x751 (and x1210 x1974)))
(assert (=> (>= 10000 x164) (= 0 (x2768 x164))))
(assert (x563 x918))
(assert (x563 x2594))
(assert (= x1371 (=> (= (not (< 128 x2947)) x1499) (and x775 x1499))))
(assert (= (x2572 (x242 x593 x1798 x2273 x2650)) x593))
(assert (< 10000 (x242 x2711 x3024 x1115 x404)))
(assert (x563 x1353))
(assert (=> (<= x1390 10000) (= (x2768 x1390) 0)))
(assert (= x1155 (x2247 (x331 x1584 x217 x480 x3002 x2881 x1155))))
(assert (= x1021 (or x3113 x2948)))
(assert (x563 x1150))
(assert (= x600 (x181 (x489 x2798 x802 x600))))
(assert (x563 x2489))
(assert (> (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835) 10000))
(assert (=> (>= 10000 x2229) (= (x2768 x2229) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553)))
(assert (x563 x353))
(assert (= (x119 (x242 66 x588 x1852 x2106)) x2106))
(assert (x563 x1355))
(assert (= (x2939 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150)) x1150))
(assert (x564 x3175))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x563 x1761))
(assert (x648 x3168))
(assert (x563 x1635))
(assert (not (x1194 (x331 x1874 x1628 x1450 x2418 x2551 x2635))))
(assert (< (x489 x2711 x196 x2133) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1852) (= (x2768 x1852) 0)))
(assert (x406 32 x2506))
(assert (x563 x307))
(assert (=> (<= x42 10000) (= 0 (x2768 x42))))
(assert (= x1377 (x2247 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794))))
(assert (x563 x1572))
(assert (x563 x1328))
(assert (=> (>= 10000 x578) (= 0 (x2768 x578))))
(assert (= (x2609 (x1260 x1756 x2959)) x2959))
(assert (x563 x1396))
(assert (= 0 (x2768 77929798818658108206329458850487298488570292587025318323788629963054520467456)))
(assert (x563 x1444))
(assert (= x2130 (x2051 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525))))
(assert (= (and x2816 x2944) x2268))
(assert (x563 x2914))
(assert (x406 32 x2884))
(assert (=> (<= x3084 10000) (= 0 (x2768 x3084))))
(assert (=> (>= 10000 x2457) (= 0 (x2768 x2457))))
(assert (x563 x716))
(assert (= (=> (and (= (x1200 (- x2691 32)) x293) (= (x2417 x1690) x1584) (= x2425 (>= 224 x1584)) (<= 1 x1915) (= (x1200 (- x2843 x1690)) x2691) (= x1442 (x484 (+ x1690 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1690) (= x1915 (x484 (+ x2350 x1083))) (<= x2218 4) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1690) (>= x2843 1) (= x1915 x2843) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1690) (= x2669 (x484 (+ x2603 x2248))) (= x1487 x2218) (= x725 x2669) (= x2350 (* x2218 32)) (= x2248 (* 32 x2218)) (< x1690 x2843)) (and x2425 (=> (and (or (and (>= x2843 1) (<= x2843 115792089237316195423570985008687907853269984665640564039457584007913129639615)) (and (>= x2843 115792089237316195423570985008687907853269984665640564039457584007913129639618) (<= x2843 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (= (x484 (+ 32 x2602)) x2259) (= x429 (x2601 1461501637330902918203684832716283019655932542975 x2335)) (= x217 (x2417 x1442)) (= x3038 (x484 (+ x1442 160))) (= x966 (x2417 x2509)) (= (x2417 x362) x2912) (= x1838 (x2417 x2777)) (= (x484 (+ 32 x1442)) x1011) (= x1684 (x2417 x3038)) (= x2461 (x2417 x391)) (= (x484 (+ x2843 32)) x2301) (= (x484 (+ x1442 128)) x2685) (= x2474 (x1200 (- x2902 32))) (= (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994) x2180) (= x1744 (x2417 x111)) (= (x2417 x2685) x800) (= x1388 (x484 (+ 192 x1442))) (= x2166 (x1884 x1584 x2398 x2841 x2461 x914)) (= (x2417 x1442) x324) (= (x242 x1584 x1100 x2912 x1744) x225) (= (x484 (+ x815 32)) x812) (= (x2417 x1442) x2398) (= x2762 (x2417 x1308)) (= x780 (x2417 x668)) (= (x1668 x1584 x1752 x780 x613 x424 x2583 x1838) x1407) (= x111 (x484 (+ x1442 64))) (= (x1200 (- x1989 x2843)) x2902) (= (x2417 x3166) x1574) (= x2002 (x331 x1584 x217 x480 x3002 x2881 x1155)) (= x1752 (x2417 x1442)) (= (x484 (+ 64 x1442)) x1781) (= x2881 (x2417 x482)) (= (x484 (+ x1442 32)) x105) (= (x484 (+ x1442 160)) x2777) (= (x484 (+ 32 x1442)) x1771) (= x362 (x484 (+ x1442 32))) (= (x2417 x1596) x549) (= x3001 (x1743 0)) (= (x484 (+ x1962 32)) x1958) (= x1100 (x2417 x1442)) (= x668 (x484 (+ x1442 32))) (= x968 (x2417 x1771)) (= (x2417 x2081) x914) (= x1155 (x2417 x1954)) (= (x484 (+ 32 x1958)) x2602) (= (x2417 x1442) x1715) (= x1874 (x2338 x2843)) (= (x2417 x1144) x613) (= (x484 (+ x314 32)) x815) (= x1175 (x1260 x1584 x1591)) (= x720 (x489 x1584 x324 x968)) (= x543 (x2417 x2104)) (= x134 (x484 (+ x1442 128))) (= x2104 (x484 (+ x1442 96))) (= (x2417 x1781) x3002) (= (x484 (+ x788 32)) x1219) (= x994 (x2417 x1388)) (= x2776 (>= 224 x1874)) (= (x484 (+ 288 x314)) x1989) (<= x1574 2) (= x1591 (x2417 x1442)) (= (x484 (+ x1442 64)) x1144) (= (x484 (+ 128 x1442)) x1954) (= (x484 (+ 96 x1442)) x1178) (= (x484 (+ x2843 32)) x314) (= (x2601 1461501637330902918203684832716283019655932542975 x2455) x1818) (= (x484 (+ x1442 32)) x1596) (= (x2417 x2043) x2335) (= (x484 (+ x1442 96)) x482) (= (x2417 x105) x480) (= (x2417 x1178) x424) (= (x2417 x1011) x2841) (= x788 (x484 (+ x2259 32))) (= (x2417 x2949) x2455) (= (x484 (+ x1442 96)) x2081) (= (x484 (+ x812 32)) x1962) (= (x2417 x416) x1315) (= (x484 (+ 64 x1442)) x416) (= (x484 (+ 64 x1442)) x391) (= x1521 (ite (= 0 x1584) x3001 (ite (<= x1584 32) x1175 (ite (<= x1584 64) x720 (ite (<= x1584 96) x225 (ite (>= 128 x1584) x2166 (ite (<= x1584 160) x2002 (ite (<= x1584 192) x1407 (ite (>= 224 x1584) x2180 x290))))))))) (= x2583 (x2417 x134)) (> x1989 x2843)) (and (=> (and (>= 18446744073709551615 x2884) (= (x1884 x1874 x591 x3185 x2244 x710) x1041) (= (x484 (+ x2301 160)) x1394) (= (x1743 0) x2621) (= x2808 (x2338 x3022)) (= (x484 (+ 64 x2301)) x2943) (= (x2338 x884) x3185) (= x3117 (ite (= 0 x1874) x2621 (ite (<= x1874 32) x1375 (ite (>= 64 x1874) x2230 (ite (<= x1874 96) x2472 (ite (<= x1874 128) x1041 (ite (>= 160 x1874) x209 (ite (>= 192 x1874) x2028 (ite (>= 224 x1874) x2577 x2671))))))))) (= x1010 (x2338 x2960)) (= (x2338 x2301) x980) (= (x484 (+ 32 x2301)) x2960) (= x2028 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)) (= x1271 (x2338 x2821)) (= x1775 (x2338 x3111)) (= (x484 (+ x2301 128)) x2725) (= x23 (x484 (+ x2301 64))) (= x189 (x2338 x2301)) (= x2974 (x484 (+ 160 x2301))) (= x402 (x2338 x2224)) (= (x2338 x1755) x2418) (= x739 (x2338 x2919)) (= (x484 (+ (mod (+ 32 x360) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1989)) x54) (= (x484 (+ x2301 64)) x228) (= (x484 (+ 32 x2301)) x3111) (= (x331 x1874 x1628 x1450 x2418 x2551 x2635) x209) (= x2472 (x242 x1874 x980 x1271 x891)) (= (x484 (+ 96 x2301)) x1074) (= x566 (x484 (+ 64 x2301))) (= (x2338 x910) x2130) (= (x484 (+ 96 x2301)) x182) (= (x2338 x228) x2244) (= (x484 (+ 96 x2301)) x2919) (= (x2338 x2301) x3191) (= (x484 (+ 32 x2301)) x2713) (= x2230 (x489 x1874 x3191 x1010)) (= (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808) x2577) (= x580 (x484 (+ x2301 32))) (= (x484 (+ 192 x2301)) x3022) (= x2821 (x484 (+ x2301 32))) (= x1214 (x2338 x2301)) (= (x2338 x2713) x2956) (= (x484 (+ 32 x2036)) x1975) (= x2635 (x2338 x1498)) (= x1375 (x1260 x1874 x1214)) (>= x54 3) (= x2504 (x2338 x2725)) (= x2884 (x2338 x1975)) (= (x2338 x2974) x2525) (= x1541 (x2338 x2301)) (or (and (>= 318 x1989) (<= 2 x1989)) (and (<= x1989 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 321 x1989))) (= (x484 (+ 64 x2301)) x1755) (= x884 (x484 (+ 32 x2301))) (= x891 (x2338 x2943)) (= (x484 (+ 128 x2301)) x1498) (= (= 0 x2884) x275) (> x54 x1989) (= (x2338 x23) x3048) (= x1450 (x2338 x580)) (= x360 (* 32 x2884)) (= (x2338 x2301) x591) (= x2224 (x484 (+ x2301 128))) (= (x2338 x2301) x1628) (= (x2338 x182) x710) (= x2551 (x2338 x1074)) (= (x484 (+ x2301 96)) x910) (= (x2338 x566) x460) (= (x2338 x1394) x2592)) (and (=> (and (= x54 x1151) x275) x2675) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x54) (= x168 (x484 (+ x3065 32))) (not (= x54 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x54 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1200 (- x2884 1)) x1595) (= (x484 (+ x1989 32)) x3065) (= (x484 (+ x54 64)) x2406) (= x1392 (= 1 x2884)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x54) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x54)) (= (x484 (+ 32 x54)) x1994) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x54)) (< x54 x2406)) (not x275)) (and (=> (and (= x628 x2406) x1392) x2930) (=> (not x1392) x2185))))) x2776)))) x582))
(assert (x563 x2928))
(assert (x563 x930))
(assert (x563 x2849))
(assert (= x1808 (x181 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614))))
(assert (= (and (not x1232) x2997) x596))
(assert (= (and x2074 x223) x706))
(assert (x563 x314))
(assert (x563 x1989))
(assert (< 10000 (x489 x593 x626 x11)))
(assert (x563 x2344))
(assert (x563 x1275))
(assert (x563 x3074))
(assert (x563 x1905))
(assert (=> (<= x792 10000) (= (x2768 x792) 0)))
(assert (x563 x3079))
(assert (= x1881 (or x1702 x3019)))
(assert (x563 x604))
(assert (x563 x22))
(assert (x563 x69))
(assert (= x1240 (x2609 (x1884 x749 x1240 x776 x724 x2027))))
(assert (x563 x1773))
(assert (= x2107 (x811 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835))))
(assert (= x425 (x811 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425))))
(assert (x563 x2940))
(assert (not (x1194 (x1884 x514 x3047 x67 x2748 x295))))
(assert (= (x119 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993)) x2234))
(assert (x542 x1184 1461501637330902918203684832716283019655932542976))
(assert (x563 x311))
(assert (x563 x1170))
(assert (x563 x491))
(assert (not (x1194 (x331 x749 x823 x1537 x2701 x757 x1436))))
(assert (x563 x2856))
(assert (= (and x1464 x2479) x1769))
(assert (x563 x634))
(assert (= (=> (and (= (x785 x576) x2087) (= (x785 x289) x1432) (= (x484 (+ x384 32)) x2392) (= x207 (< 0 x2087)) (= (x484 (+ 32 x576)) x2075)) (and (=> (and (and (= x51 0) (= x2544 x2075) (= x2392 x1618)) (not x207)) x532) (=> (and x207 (and (= (x785 x2075) x1768) (= x1749 (> x2087 1)) (= (x484 (+ x2392 32)) x2040) (= x2372 (x484 (+ x2075 32))))) (and (=> (and x1749 (and (= (x484 (+ x2040 32)) x2317) (= x3126 (x484 (+ 32 x2372))) (= x1411 (> x2087 2)) (= x1054 (x2753 x2372)))) (and (=> (and x1411 (and (= (x484 (+ x3126 32)) x461) (= x2213 (x484 (+ x2317 32))) (= (x330 x3126) x2968) (= x1461 (< 3 x2087)))) (and (=> (and (and (= 3 x51) (= x1618 x2213) (= x2544 x461)) (not x1461)) x532) (=> x1461 x2008))) (=> (and (not x1411) (and (= x2317 x1618) (= x3126 x2544) (= x51 2))) x532))) (=> (and (and (= x51 1) (= x2372 x2544) (= x1618 x2040)) (not x1749)) x532))))) x787))
(assert (x824 x173))
(assert (x563 x2014))
(assert (x563 x2406))
(assert (= x1714 (x2609 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127))))
(assert (= x2870 (or x712 x1760)))
(assert (x406 32 x2560))
(assert (= x1993 (x2939 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993))))
(assert (=> (>= 10000 x67) (= (x2768 x67) 0)))
(assert (x563 x2093))
(assert (x563 x1323))
(assert (= x299 (x181 (x331 x2658 x719 x299 x38 x1936 x1153))))
(assert (x563 x763))
(assert (x563 x3014))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x1584 x217 x480 x3002 x2881 x1155)))
(assert (= x3004 (x2609 (x1884 x2798 x3004 x2178 x262 x601))))
(assert (not (x1194 (x489 x1584 x324 x968))))
(assert (x563 x2666))
(assert (= (x811 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315)) x2315))
(assert (x563 x43))
(assert (x563 x1580))
(assert (x563 x3061))
(assert (x563 x2967))
(assert (x406 64 x2901))
(assert (x563 x1991))
(assert (x563 x2920))
(assert (< 10000 (x1260 x1756 x2959)))
(assert (= (and x2835 x561) x97))
(assert (=> (<= x813 10000) (= (x2768 x813) 0)))
(assert (x563 x2097))
(assert (x563 x1212))
(assert (x563 x2102))
(assert (x563 x3148))
(assert (x563 x3143))
(assert (not (x1194 (x489 x1795 x2039 x732))))
(assert (x564 x1405))
(assert (=> (>= 10000 x1641) (= (x2768 x1641) 0)))
(assert (=> (<= x3160 10000) (= (x2768 x3160) 0)))
(assert (x563 x514))
(assert (x563 x1817))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x563 x400))
(assert (x563 x1264))
(assert (x563 x144))
(assert (= (and x265 (not x2432)) x5))
(assert (x563 x2784))
(assert (= (and x2690 x516) x2207))
(assert (= (x2768 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)) (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)))
(assert (not (x1194 (x489 x1756 x212 x2469))))
(assert (x563 x1248))
(assert (= 0 (x2768 18446744073709551455)))
(assert (= x813 (x181 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150))))
(assert (x563 x2606))
(assert (x563 x2559))
(assert (= x2124 (and x1455 x660)))
(assert (> (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993) 10000))
(assert (x563 x820))
(assert (x542 x1026 1461501637330902918203684832716283019655932542976))
(assert (= x1795 (x2572 (x242 x1795 x746 x2135 x959))))
(assert (= x467 (and (not x1749) x1844)))
(assert (=> (>= 10000 x707) (= 0 (x2768 x707))))
(assert (< (x489 x792 x356 x208) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2768 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096)) (x1668 x792 x1354 x2129 x373 x695 x1991 x1096)))
(assert (x563 x1037))
(assert (not (x1194 (x331 x2658 x719 x299 x38 x1936 x1153))))
(assert (= x2701 (x119 (x331 x749 x823 x1537 x2701 x757 x1436))))
(assert (x563 x1813))
(assert (x406 32 x963))
(assert (= (x2609 (x1260 x1874 x1214)) x1214))
(assert (x563 x2658))
(assert (= (or x2510 x52) x1687))
(assert (= (x2609 (x242 x1609 x2023 x1173 x2783)) x2023))
(assert (x563 x2765))
(assert (x563 x2399))
(assert (=> (>= 10000 x2286) (= (x2768 x2286) 0)))
(assert (x563 x1339))
(assert (= (x2609 (x331 x1380 x2868 x636 x1281 x279 x2383)) x2868))
(assert (= (x181 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794)) x599))
(assert (=> (>= 10000 x1785) (= 0 (x2768 x1785))))
(assert (x563 x2066))
(assert (x563 x3179))
(assert (x542 x1122 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2063 (and (not x795) x2859)))
(assert (= x2711 (x2572 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630))))
(assert (x648 32))
(assert (> (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553) 10000))
(assert (=> (<= x188 10000) (= (x2768 x188) 0)))
(assert (= x530 (=> (= x731 x2015) x838)))
(assert (x563 x3105))
(assert (< (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1260 x593 x683)))
(assert (= x2440 (x2609 (x242 x792 x2440 x1189 x2666))))
(assert (= x1273 (x2572 (x489 x1273 x1062 x707))))
(assert (= (or x989 x2238) x1306))
(assert (x563 x2284))
(assert (x563 x2556))
(assert (x563 x2992))
(assert (x563 x480))
(assert (=> (>= 10000 x604) (= 0 (x2768 x604))))
(assert (x563 x1657))
(assert (x563 x2592))
(assert (= (x2768 (x1260 x514 x2892)) (x1260 x514 x2892)))
(assert (x563 x2309))
(assert (x563 x3127))
(assert (x563 x737))
(assert (x563 x40))
(assert (= (x811 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994)) x1684))
(assert (=> (<= x324 10000) (= (x2768 x324) 0)))
(assert (x563 x722))
(assert (x563 x1449))
(assert (= (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365) (x2768 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365))))
(assert (x1194 18446744073709551614))
(assert (= x2047 (x2051 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533))))
(assert (=> (>= 10000 x3024) (= 0 (x2768 x3024))))
(assert (= (x181 (x489 x1795 x2039 x732)) x732))
(assert (x563 x1054))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (x563 x1090))
(assert (x563 x3193))
(assert (x563 x2107))
(assert (x563 x3004))
(assert (x563 x724))
(assert (x563 x1208))
(assert (x563 x1462))
(assert (x563 x90))
(assert (x563 x1458))
(assert (x563 x641))
(assert (x563 x1750))
(assert (> (x242 x2658 x2982 x246 x632) 10000))
(assert (x564 x3164))
(assert (=> (<= x1603 10000) (= (x2768 x1603) 0)))
(assert (x563 x1157))
(assert (x563 x1013))
(assert (not (x1194 (x1260 x1273 x42))))
(assert (x563 x1468))
(assert (not (x1194 (x1260 x1584 x1591))))
(assert (x563 x850))
(assert (= x1564 (and x19 x1638)))
(assert (x563 x1046))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x2658 x719 x299 x38 x1936 x1153)))
(assert (x563 x443))
(assert (x563 x1782))
(assert (< 10000 (x489 x792 x356 x208)))
(assert (x1195 x836))
(assert (x648 x729))
(assert (x563 x1994))
(assert (x563 x500))
(assert (x563 x1731))
(assert (x563 x1713))
(assert (=> (<= x2371 10000) (= (x2768 x2371) 0)))
(assert (x563 x2297))
(assert (x563 x2069))
(assert (x563 x2993))
(assert (> (x1260 x1874 x1214) 10000))
(assert (x563 x2441))
(assert (not (x1194 (x1884 x2658 x1938 x2044 x1858 x449))))
(assert (x563 x1529))
(assert (< 10000 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533)))
(assert (not (x1194 (x242 x1609 x2023 x1173 x2783))))
(assert (=> (<= x825 10000) (= 0 (x2768 x825))))
(assert (=> (>= 10000 x2383) (= 0 (x2768 x2383))))
(assert (= x2724 (x119 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185))))
(assert (x563 x1891))
(assert (x563 x2946))
(assert (x563 x1941))
(assert (=> (>= 10000 x90) (= 0 (x2768 x90))))
(assert (x1965 x1850))
(assert (x563 x2091))
(assert (x563 x2286))
(assert (=> (<= x1380 10000) (= (x2768 x1380) 0)))
(assert (x563 x1730))
(assert (< 10000 (x1260 x749 x1774)))
(assert (x563 x525))
(assert (=> (<= x1173 10000) (= 0 (x2768 x1173))))
(assert (x1194 1461501637330902918203684832716283019655932542975))
(assert (= x2552 (x811 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835))))
(assert (x563 x1153))
(assert (x563 x2919))
(assert (=> (<= x527 10000) (= (x2768 x527) 0)))
(assert (x542 x2629 1461501637330902918203684832716283019655932542976))
(assert (x563 x2547))
(assert (x563 x606))
(assert (= (x2768 (x489 x593 x626 x11)) (x489 x593 x626 x11)))
(assert (= x3103 (and x2944 (not x2816))))
(assert (= (x2572 (x242 66 x588 x1852 x2106)) 66))
(assert (not (x1194 (x489 x792 x356 x208))))
(assert (x563 x2142))
(assert (x1195 x729))
(assert (x563 x718))
(assert (= (x2051 (x331 x1874 x1628 x1450 x2418 x2551 x2635)) x2551))
(assert (= (x2247 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180)) x496))
(assert (< (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x767))
(assert (x1195 x1550))
(assert (x563 x495))
(assert (x563 x347))
(assert (x563 x1007))
(assert (= false x2057))
(assert (x563 x1871))
(assert (= (x2247 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994)) x800))
(assert (=> (>= 10000 x149) (= (x2768 x149) 0)))
(assert (= x2679 (x2609 (x1884 x1756 x2679 x2483 x1069 x2361))))
(assert (> (x242 x2798 x2239 x3068 x1303) 10000))
(assert (=> (<= x1880 10000) (= 0 (x2768 x1880))))
(assert (< (x1884 x514 x3047 x67 x2748 x295) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x2557))
(assert (not (x1194 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835))))
(assert (= x2073 (x2051 (x1884 x1609 x2457 x1782 x1225 x2073))))
(assert (= 0 (x2768 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x563 x2266))
(assert (not (x1194 (x1260 x514 x2892))))
(assert (x563 x1227))
(assert (=> (>= 10000 x1951) (= (x2768 x1951) 0)))
(assert (x563 x1107))
(assert (= (=> (and (= x1925 (not (< 1 x677))) (= x1548 (x484 (+ x1828 32))) (= x2149 (x484 (+ x1088 32)))) (and (=> (and (= x1110 1) (= x2149 x486) (= x2807 x1548)) x1312) x1925)) x775))
(assert (< (x242 x792 x2440 x1189 x2666) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x1584))
(assert (= x633 (x181 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371))))
(assert (x563 x861))
(assert (= (x2572 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185)) x749))
(assert (=> (>= 10000 x3180) (= 0 (x2768 x3180))))
(assert (= (x181 (x1884 x1584 x2398 x2841 x2461 x914)) x2841))
(assert (= (x2572 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425)) x593))
(assert (> (x1884 x514 x3047 x67 x2748 x295) 10000))
(assert (= x42 (x2609 (x1260 x1273 x42))))
(assert (x563 x3191))
(assert (=> (>= 10000 x2315) (= 0 (x2768 x2315))))
(assert (x563 x2872))
(assert (x563 x659))
(assert (x564 x3168))
(assert (= x1951 (x119 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253))))
(assert (x563 x761))
(assert (x563 x888))
(assert (= x3170 (and x3139 x2242)))
(assert (x563 x99))
(assert (= (x2609 (x489 x1609 x1458 x1193)) x1458))
(assert (= x2155 (=> (and (= x816 (x1200 (- x1802 x1373))) (= x1478 (x484 (+ x359 32))) (= x1236 (x484 (+ x2419 x1102))) (= 160 x2337) (= x1552 (x484 (+ x1373 x2419))) (or (>= x753 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x753 18446746139588821027)) (= (* 32 x1850) x2580) (= x1409 (x484 (+ x1108 36))) (= (x2818 x2419) x1102) (= (< x2329 x1457) x2159) (<= 128 x3013) (= x2419 (x484 (+ x1409 32))) (= 1 x3147) (<= x363 18446744073709551615) (<= x1373 18446744073709551615) (= (x1126 128) x3147) (= x1037 (+ 63 x2580)) (= (* 32 x1850) x183) (= (x484 (+ x753 x297)) x2716) (>= x1373 64) (or (>= x2716 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x2716)) (<= x1121 18446744073709551167) (= (x2818 x753) x2923) (= (x2818 x359) x2779) (= x500 (x484 (+ 32 x1236))) (>= x1121 1) (or (>= x1552 57896044618658097711785492504343953926634992332820282019728792003956564820068) (<= x1552 18446746139588821059)) (or (and (= (<= x154 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1552 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1552 x154)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1552) (> x154 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2818 x1478) x297) (= (x2818 x500) x363) (= (x2818 x1409) x1373) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2245) (= (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1037) x1121) (= x154 (x484 (+ x2716 31))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3013) (>= 18446744073709551615 x297) (= (x2818 x1236) x488) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1373) (<= x488 1461501637330902918203684832716283019655932542975) (= (x484 (+ x183 x2329)) x1457) (>= 18446744073709551615 x1850) (= x2245 (x1200 (- x1552 x753))) (= (x2818 x2716) x1850) (not (> x1457 x1552)) (or (<= x1108 2065879269376) (>= x1108 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x1108 (x2818 228)) (= (x1200 (- x1552 x1236)) x3013) (<= 128 x2245) (not (or (and (<= x2419 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x816 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2419 x816) (= (<= x816 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2419))))) (<= x1102 18446744073709551615) (= x2050 (+ x1121 448)) (or (and (> x1735 x1108) (= (<= x1735 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1108))) (and (> x1108 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1735 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x2923 2) (= x753 (x484 (+ x1236 x363))) (= x2329 (x484 (+ 32 x2716))) (= (- x1802 67) x1735) (>= x99 1) (= x359 (x484 (+ 32 x753))) (or (>= x1236 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x1236))) (and (=> x2159 x866) (=> (and (= x2050 x78) (not x2159)) x1868)))))
(assert (= x3089 (and x902 (not x1894))))
(assert (x563 x935))
(assert (x563 x2980))
(assert (= (x811 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808)) x2592))
(assert (= x2165 (and x1464 (not x2479))))
(assert (x563 x2114))
(assert (x563 x1541))
(assert (x563 x1576))
(assert (= x2658 (x2572 (x489 x2658 x2293 x2507))))
(assert (x563 x580))
(assert (=> (<= x1834 10000) (= (x2768 x1834) 0)))
(assert (x563 x2806))
(assert (= (x2609 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)) x189))
(assert (=> (>= 10000 x3032) (= 0 (x2768 x3032))))
(assert (= x1756 (x2572 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127))))
(assert (x563 x139))
(assert (x563 x1132))
(assert (x563 x171))
(assert (= (x2247 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365)) x1417))
(assert (x563 x2120))
(assert (= x1393 (x119 (x1884 x593 x1880 x3017 x1393 x2291))))
(assert (x563 x233))
(assert (x542 x476 1461501637330902918203684832716283019655932542976))
(assert (x563 x362))
(assert (=> (>= 10000 x2546) (= (x2768 x2546) 0)))
(assert (x563 x2398))
(assert (=> (>= 10000 x1896) (= (x2768 x1896) 0)))
(assert (= x3093 (or x1986 x326)))
(assert (x648 x869))
(assert (x563 x868))
(assert (x563 x2096))
(assert (< 10000 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)))
(assert (x563 x2423))
(assert (x563 x3045))
(assert (= (x2609 (x331 x2798 x1390 x2688 x149 x2703 x825)) x1390))
(assert (x563 x3066))
(assert (x542 x2335 1461501637330902918203684832716283019655932542976))
(assert (x563 x685))
(assert (x563 x2749))
(assert (x563 x267))
(assert (= (x2609 (x242 x1756 x347 x2484 x2091)) x347))
(assert (= x1770 (x2609 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835))))
(assert (x563 x1274))
(assert (x563 x792))
(assert (= x2539 (x2609 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630))))
(assert (x406 32 x2936))
(assert (= x3091 (x2051 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630))))
(assert (x563 x2016))
(assert (= (x2609 (x331 x514 x629 x982 x371 x144 x1953)) x629))
(assert (x542 x998 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x424 10000) (= (x2768 x424) 0)))
(assert (= x1609 (x2572 (x331 x1609 x646 x195 x537 x535 x1528))))
(assert (x563 x1822))
(assert (= (and x2835 (not x561)) x2795))
(assert (x1965 79228162514264337593543950336))
(assert (= x2469 (x181 (x489 x1756 x212 x2469))))
(assert (x563 x338))
(assert (= 0 (x2768 2065879269444)))
(assert (< 10000 (x242 x792 x2440 x1189 x2666)))
(assert (= x38 (x119 (x331 x2658 x719 x299 x38 x1936 x1153))))
(assert (x564 x2006))
(assert (x563 x459))
(assert (x563 x1405))
(assert (x563 x1148))
(assert (= (x489 x2798 x802 x600) (x2768 (x489 x2798 x802 x600))))
(assert (x563 x835))
(assert (x648 x334))
(assert (x1195 1461501637330902918203684832716283019655932542975))
(assert (x563 x1149))
(assert (x563 x2323))
(assert (= x3178 (x2247 (x331 x1795 x1328 x164 x974 x553 x3178))))
(assert (x563 x970))
(assert (x563 x2017))
(assert (= (x2609 (x489 x593 x626 x11)) x626))
(assert (x563 x1609))
(assert (x563 x2604))
(assert (x563 x2308))
(assert (x563 x738))
(assert (x542 x1701 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2051 (x331 x749 x823 x1537 x2701 x757 x1436)) x757))
(assert (= x2364 (x2609 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371))))
(assert (x1195 x476))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926)))
(assert (x563 x453))
(assert (x563 x1728))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639902) 0))
(assert (x563 x963))
(assert (=> (>= 10000 x2266) (= (x2768 x2266) 0)))
(assert (not (x1194 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838))))
(assert (x563 x937))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1884 x1584 x2398 x2841 x2461 x914)))
(assert (= (=> (and (= (not (> x508 1)) x46) (= x508 (x194 x2676))) (and x2579 x46)) x1201))
(assert (x563 x2148))
(assert (x563 x1105))
(assert (=> (<= x546 10000) (= (x2768 x546) 0)))
(assert (x563 x2358))
(assert (x563 x222))
(assert (x563 x59))
(assert (x563 x2735))
(assert (= (x2572 (x331 x792 x2344 x1751 x1444 x1301 x1161)) x792))
(assert (=> (<= x636 10000) (= (x2768 x636) 0)))
(assert (=> (<= x1867 10000) (= (x2768 x1867) 0)))
(assert (x563 x1641))
(assert (x563 x92))
(assert (x563 x1910))
(assert (x563 x1775))
(assert (x563 x744))
(assert (x563 x175))
(assert (x563 x3046))
(assert (x563 x2380))
(assert (x563 x815))
(assert (=> (<= x1412 10000) (= 0 (x2768 x1412))))
(assert (= (and x2846 x1826) x1250))
(assert (x542 x1823 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2367 (and x260 (not x2404))))
(assert (x563 x698))
(assert (x563 x2042))
(assert (= x356 (x2609 (x489 x792 x356 x208))))
(assert (not (x1194 (x1884 x1584 x2398 x2841 x2461 x914))))
(assert (x563 x1874))
(assert (x563 x756))
(assert (x542 x3165 1461501637330902918203684832716283019655932542976))
(assert (x563 x1209))
(assert (= x2313 (x2609 (x1884 x1795 x2313 x1226 x1678 x3107))))
(assert (x563 x1780))
(assert (x1194 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (> (x1260 x593 x683) 10000))
(assert (= (x2572 (x489 x792 x356 x208)) x792))
(assert (x563 x1793))
(assert (= (x2572 (x489 x1584 x324 x968)) x1584))
(assert (=> (>= 10000 x2734) (= (x2768 x2734) 0)))
(assert (x563 x2739))
(assert (= (x2572 (x242 x2658 x2982 x246 x632)) x2658))
(assert (> (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794) 10000))
(assert (= (x181 (x242 x2711 x3024 x1115 x404)) x1115))
(assert (=> (>= 10000 x514) (= (x2768 x514) 0)))
(assert (not (x1194 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253))))
(assert (x563 x1779))
(assert (x563 x1953))
(assert (x563 x1026))
(assert (x563 x959))
(assert (= x514 (x2572 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835))))
(assert (= (and x1937 (not x555)) x2677))
(assert (x563 x6))
(assert (= (and (not x548) x560) x1912))
(assert (x563 x2811))
(assert (= (x2609 (x1260 x2658 x556)) x556))
(assert (=> (<= x1226 10000) (= 0 (x2768 x1226))))
(assert (x563 x1442))
(assert (= x776 (x181 (x1884 x749 x1240 x776 x724 x2027))))
(assert (x563 x1303))
(assert (= x1434 (and x1232 x2997)))
(assert (= (and x2405 x1313) x3174))
(assert (= (x1260 x2658 x556) (x2768 (x1260 x2658 x556))))
(assert (=> (>= 10000 x3061) (= (x2768 x3061) 0)))
(assert (x563 x359))
(assert (x960 x57))
(assert (x563 x126))
(assert (x1965 x2342))
(assert (=> (>= 10000 x1092) (= 0 (x2768 x1092))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x489 x2798 x802 x600)))
(assert (x542 x1122 32))
(assert (= x700 (and x2481 x1977)))
(assert (= x1715 (x2609 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994))))
(assert (x563 x551))
(assert (x563 x831))
(assert (x563 x3035))
(assert (x563 x2315))
(assert (x563 x2146))
(assert (x563 x70))
(assert (= (x2768 (x242 x1584 x1100 x2912 x1744)) (x242 x1584 x1100 x2912 x1744)))
(assert (= (or x1906 x1887) x805))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x489 x2658 x2293 x2507)))
(assert (=> (<= x2687 10000) (= (x2768 x2687) 0)))
(assert (x563 x168))
(assert (=> (>= 10000 x2244) (= (x2768 x2244) 0)))
(assert (x563 x508))
(assert (= x1874 (x2572 (x1260 x1874 x1214))))
(assert (x563 x2705))
(assert (x563 x3100))
(assert (= (x2768 18446746139588821059) 0))
(assert (=> (>= 10000 x2993) (= (x2768 x2993) 0)))
(assert (x563 x1015))
(assert (=> (>= 10000 x2364) (= (x2768 x2364) 0)))
(assert (=> (<= x347 10000) (= 0 (x2768 x347))))
(assert (x563 x2681))
(assert (x563 x1800))
(assert (= x1804 (or x2077 x2707)))
(assert (= (x119 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835)) x302))
(assert (x563 x520))
(assert (x563 x748))
(assert (= x2244 (x119 (x1884 x1874 x591 x3185 x2244 x710))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1743 0)))
(assert (x563 x1839))
(assert (= (x181 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630)) x604))
(assert (x563 x2538))
(assert (= 0 (x2572 (x1743 0))))
(assert (x563 x212))
(assert (x824 x1802))
(assert (= (and x172 x2644) x283))
(assert (= (and x906 x218) x2237))
(assert (= (x2768 57896044618658097711785492504343953926634992332820282019728792003956564820100) 0))
(assert (x960 x1440))
(assert (= 0 (x2768 11309588061646438093662687302255421419811724423900836950936401294474059186176)))
(assert (x563 x2593))
(assert (= x551 (x2609 (x489 64 x551 1))))
(assert (= 0 (x2768 57896044618658097711785492504343953926634992332820282019728792003956564820036)))
(assert (x563 x2084))
(assert (= (or x1383 x2162) x2463))
(assert (x563 x2456))
(assert (x1195 x2006))
(assert (x563 x193))
(assert (x563 x2317))
(assert (not (x1194 (x331 x1584 x217 x480 x3002 x2881 x1155))))
(assert (> (x331 x749 x823 x1537 x2701 x757 x1436) 10000))
(assert (= x926 (x811 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926))))
(assert (< 10000 (x1884 x1609 x2457 x1782 x1225 x2073)))
(assert (< 10000 (x489 x1874 x3191 x1010)))
(assert (= (=> (and (not (= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2015)) (= x2582 (x2601 1461501637330902918203684832716283019655932542975 x2006)) (= x977 (x408 x908)) (= (x484 (+ 32 x2015)) x810) (= x1889 (x484 (+ 32 x2312))) (= x1505 (x484 (+ x2727 32))) (= (x1290 x863) x2246) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2015) (= x2312 (x484 (+ x810 32))) (= (x1447 x2714) x2683) (<= 1 x2246) (= x1152 (x484 (+ 32 x863))) (= (x484 (+ 64 x1505)) x870) (<= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (< x2015 x2235) (= x2714 (x484 (+ 32 x1505))) (= (not (< 1 x977)) x3055) (= (x484 (+ x2015 160)) x2235) (= x1424 (x484 (+ 32 x1889))) (= (x1230 x870) x211) (= (x214 x1505) x2006)) (and x3055 (=> (and (= x615 x1629) (= x2235 x924) (= x1429 x292)) x1614))) x3008))
(assert (< (x489 x1795 x2039 x732) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1194 18446744073709551615))
(assert (x563 x1964))
(assert (x563 x1277))
(assert (= (x2768 (x489 x1609 x1458 x1193)) (x489 x1609 x1458 x1193)))
(assert (x563 x632))
(assert (= (=> (and (= (x484 (+ 32 x3158)) x1009) (>= 18446744073709551615 x3135) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x315) (not (> x3135 x2838)) (= (x484 (+ x525 32)) x885) (= x1576 (x2818 x2645)) (or (>= x3135 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x3135 18446744073709551455)) (= x3158 (x484 (+ 32 x885))) (<= 160 x315) (= x752 (not (< 1 x933))) (= (x484 (+ x1533 32)) x2645) (= (x2818 x1533) x852) (>= 18446744073709551615 x3135) (or (<= x87 2065879269284) (>= x87 57896044618658097711785492504343953926634992332820282019728792003956564820645)) (>= 18446744073709551614 x3135) (= (x484 (+ 32 x3135)) x525) (>= 1461501637330902918203684832716283019655932542975 x2489) (= x1149 (x484 (+ 32 x2645))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x3135)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x3135) (>= 18446744073709551455 x3135)) (= x2336 (x484 (+ 32 x87))) (= x2781 (x2818 x87)) (<= x3135 18446744073709551614) (= (x1200 (- x1802 x87)) x315) (< x3135 x2838) (= x2838 (x484 (+ 160 x3135))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3135) (= x1533 (x484 (+ x2336 32))) (>= 1461501637330902918203684832716283019655932542975 x1705) (>= 5 x2781) (= x2489 (x2818 x1149)) (= x1705 (x2818 x2336))) (and (=> (= x3163 x2838) x1154) x752)) x1073))
(assert (x563 x1952))
(assert (= (and x2268 x278) x1251))
(assert (=> (<= x588 10000) (= 0 (x2768 x588))))
(assert (=> (<= x1752 10000) (= (x2768 x1752) 0)))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (x563 x2401))
(assert (x563 x1022))
(assert (=> (>= 10000 x688) (= 0 (x2768 x688))))
(assert (= x1010 (x181 (x489 x1874 x3191 x1010))))
(assert (x563 x2354))
(assert (= (and x35 x2113) x1311))
(assert (x563 x2882))
(assert (= x3084 (x2051 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926))))
(assert (x563 x3017))
(assert (x563 x2110))
(assert (= (x2051 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614)) x2687))
(assert (= (x2609 (x1884 x1380 x2567 x150 x2529 x923)) x2567))
(assert (x563 x1006))
(assert (x563 x184))
(assert (x563 x2857))
(assert (not (x1194 (x1260 x1795 x1218))))
(assert (x563 x2192))
(assert (x563 x1795))
(assert (= (x181 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808)) x1775))
(assert (x563 x2329))
(assert (=> (<= x601 10000) (= (x2768 x601) 0)))
(assert (x563 x1356))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630)))
(assert (x563 x2157))
(assert (x563 x3006))
(assert (> (x331 x1380 x2868 x636 x1281 x279 x2383) 10000))
(assert (x563 x276))
(assert (=> (<= x835 10000) (= (x2768 x835) 0)))
(assert (x563 x608))
(assert (not (x1194 (x242 x514 x2761 x401 x831))))
(assert (x563 x682))
(assert (< (x331 x1380 x2868 x636 x1281 x279 x2383) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x372))
(assert (x563 x182))
(assert (= x878 (x181 (x242 x1380 x1013 x878 x1947))))
(assert (x1194 57896044618658097711785492504343953926634992332820282019728792003956564820645))
(assert (= (x2939 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994)) x994))
(assert (= x1712 (and (not x72) x3053)))
(assert (x563 x1823))
(assert (=> (>= 10000 x626) (= (x2768 x626) 0)))
(assert (= x2680 (x2609 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253))))
(assert (=> (>= 10000 x219) (= 0 (x2768 x219))))
(assert (=> (>= 10000 x881) (= 0 (x2768 x881))))
(assert (=> (>= 10000 x2596) (= 0 (x2768 x2596))))
(assert (x648 x476))
(assert (x563 x1679))
(assert (x563 x2513))
(assert (x563 x3153))
(assert (=> (<= x914 10000) (= (x2768 x914) 0)))
(assert (x563 x115))
(assert (x563 x1144))
(assert (x563 x1786))
(assert (=> (<= x1886 10000) (= (x2768 x1886) 0)))
(assert (= (x2572 (x331 x514 x629 x982 x371 x144 x1953)) x514))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614)))
(assert (= (x2939 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835)) x835))
(assert (< (x1884 x1874 x591 x3185 x2244 x710) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x974) (= (x2768 x974) 0)))
(assert (x648 x1037))
(assert (not (x1194 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650))))
(assert (not (x1194 (x489 x1874 x3191 x1010))))
(assert (= x2635 (x2247 (x331 x1874 x1628 x1450 x2418 x2551 x2635))))
(assert (x563 x2802))
(assert (< (x242 x1795 x746 x2135 x959) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2565 (and x2646 (not x1027))))
(assert (x563 x1640))
(assert (= x1312 (=> (and (= x1110 x677) (<= x2651 2) (= x2985 x2807) (= x399 (* x677 32)) (or (= x399 0) (= x399 32)) (>= 1 x677) (= (x484 (+ x399 x1828)) x2985) (= x113 x486)) x2770)))
(assert (= (x2247 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614)) x881))
(assert (not (x1194 (x242 x1874 x980 x1271 x891))))
(assert (= (x2768 (x1884 x2658 x1938 x2044 x1858 x449)) (x1884 x2658 x1938 x2044 x1858 x449)))
(assert (= x3047 (x2609 (x1884 x514 x3047 x67 x2748 x295))))
(assert (= x502 (and x1810 (not x793))))
(assert (x563 x308))
(assert (x563 x1948))
(assert (= x2239 (x2609 (x242 x2798 x2239 x3068 x1303))))
(assert (= (x119 (x242 x1795 x746 x2135 x959)) x959))
(assert (x563 x2027))
(assert (x563 x1540))
(assert (x563 x42))
(assert (= (or x536 x1539) x931))
(assert (= (and x1617 x1725) x1887))
(assert (x563 x830))
(assert (x563 x980))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x2711 x1177 x1274 x767 x3057 x1224)))
(assert (x563 x1067))
(assert (x563 x2650))
(assert (x563 x2038))
(assert (x563 x1932))
(assert (= (x181 (x489 x2711 x196 x2133)) x2133))
(assert (x563 x291))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x563 x1850))
(assert (x1195 x2615))
(assert (x563 x2252))
(assert (x563 x940))
(assert (x563 x2935))
(assert (x563 x2276))
(assert (=> (<= x2701 10000) (= (x2768 x2701) 0)))
(assert (x563 x3041))
(assert (x563 x1119))
(assert (x563 x2767))
(assert (= (x2051 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)) x1739))
(assert (x563 x750))
(assert (x563 x727))
(assert (x563 x2698))
(assert (= (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575) (x2768 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575))))
(assert (= (and (not x1927) x3034) x712))
(assert (x563 x2229))
(assert (= x1751 (x181 (x331 x792 x2344 x1751 x1444 x1301 x1161))))
(assert (x563 x1294))
(assert (= (x2572 (x331 x1874 x1628 x1450 x2418 x2551 x2635)) x1874))
(assert (x563 x565))
(assert (< (x242 x514 x2761 x401 x831) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1427 (and x1613 (not x2134))))
(assert (x1965 x2560))
(assert (=> (>= 10000 x167) (= 0 (x2768 x167))))
(assert (=> (>= 10000 x994) (= (x2768 x994) 0)))
(assert (x563 x1089))
(assert (x563 x2825))
(assert (= x2964 (x2051 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x242 x2658 x2982 x246 x632)))
(assert (x563 x1971))
(assert (x563 x1508))
(assert (x563 x1298))
(assert (= (x2609 (x1884 x1584 x2398 x2841 x2461 x914)) x2398))
(assert (x563 x1632))
(assert (=> (<= x195 10000) (= (x2768 x195) 0)))
(assert (= x1062 (x2609 (x489 x1273 x1062 x707))))
(assert (= x2613 (and (not x1974) x1210)))
(assert (x563 x1261))
(assert (= x2311 (and x2065 (not x1316))))
(assert (= (x181 (x1884 x792 x346 x1657 x2734 x2954)) x1657))
(assert (x563 x2443))
(assert (x563 x2080))
(assert (x564 x631))
(assert (x563 x2422))
(assert (x563 x1127))
(assert (= (x2609 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993)) x268))
(assert (x563 x2036))
(assert (x563 x150))
(assert (= (x2939 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127)) x3127))
(assert (=> (<= x780 10000) (= 0 (x2768 x780))))
(assert (=> (>= 10000 x392) (= (x2768 x392) 0)))
(assert (x563 x860))
(assert (x563 x2923))
(assert (x563 x425))
(assert (x563 x770))
(assert (=> (>= 10000 x791) (= (x2768 x791) 0)))
(assert (= (x119 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994)) x1315))
(assert (x563 x2282))
(assert (x563 x730))
(assert (= x1210 (or x1141 x427)))
(assert (x563 x613))
(assert (x563 x1678))
(assert (x563 x513))
(assert (x648 x1413))
(assert (> (x1884 x593 x1880 x3017 x1393 x2291) 10000))
(assert (=> (<= x802 10000) (= (x2768 x802) 0)))
(assert (x563 x701))
(assert (< (x331 x514 x629 x982 x371 x144 x1953) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1194 (x1260 x593 x683))))
(assert (x563 x2484))
(assert (x563 x1412))
(assert (x563 x1267))
(assert (x563 x460))
(assert (x563 x957))
(assert (= (x181 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835)) x997))
(assert (= x1858 (x119 (x1884 x2658 x1938 x2044 x1858 x449))))
(assert (= x1300 (x181 (x242 x749 x1092 x1300 x235))))
(assert (=> (<= x1782 10000) (= (x2768 x1782) 0)))
(assert (x1195 x1832))
(assert (x1195 x513))
(assert (x563 x519))
(assert (x563 x2058))
(assert (x563 x2408))
(assert (= (x181 (x242 x1756 x347 x2484 x2091)) x2484))
(assert (x563 x2271))
(assert (= (x2609 (x489 x1380 x98 x2121)) x98))
(assert (x563 x2299))
(assert (< (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x1128))
(assert (x563 x816))
(assert (= (x2572 (x489 x749 x2712 x3070)) x749))
(assert (x406 32 (- x1677 1)))
(assert (=> (<= x841 10000) (= (x2768 x841) 0)))
(assert (x1195 x1508))
(assert (not (x1194 (x1743 0))))
(assert (x648 x481))
(assert (= (and x2459 x2718) x2289))
(assert (x542 x2006 1461501637330902918203684832716283019655932542976))
(assert (= (and x1036 x663) x867))
(assert (x563 x2337))
(assert (x563 x3106))
(assert (x563 x1752))
(assert (x563 x2630))
(assert (=> (>= 10000 x1957) (= (x2768 x1957) 0)))
(assert (x563 x1873))
(assert (x563 x430))
(assert (x563 x2931))
(assert (x563 x2059))
(assert (< 10000 (x1260 x1380 x59)))
(assert (x563 x758))
(assert (x563 x588))
(assert (x563 x1287))
(assert (= x1224 (x2247 (x331 x2711 x1177 x1274 x767 x3057 x1224))))
(assert (= x593 (x2572 (x331 x593 x1807 x1322 x1981 x90 x178))))
(assert (x563 x1024))
(assert (x563 x1038))
(assert (x648 x1440))
(assert (x563 x2508))
(assert (not x440))
(assert (x648 x1832))
(assert (= (x2768 (x1260 x792 x1602)) (x1260 x792 x1602)))
(assert (x563 x2129))
(assert (x563 x2641))
(assert (x563 x2934))
(assert (=> (<= x36 10000) (= 0 (x2768 x36))))
(assert (= x2690 (and x660 (not x1455))))
(assert (x563 x2364))
(assert (=> (>= 10000 x2291) (= 0 (x2768 x2291))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x2798 x1390 x2688 x149 x2703 x825)))
(assert (= (x2572 (x331 x2658 x719 x299 x38 x1936 x1153)) x2658))
(assert (= (=> (= (= 0 x2674) x3121) (and (=> (and (= x3109 x2059) x3121) x2696) (=> (not x3121) x2607))) x1198))
(assert (=> (<= x2514 10000) (= (x2768 x2514) 0)))
(assert (= (x2572 (x1884 x2798 x3004 x2178 x262 x601)) x2798))
(assert (= x149 (x119 (x331 x2798 x1390 x2688 x149 x2703 x825))))
(assert (= x2590 (and x86 (not x2962))))
(assert (x563 x304))
(assert (=> (>= 10000 x160) (= 0 (x2768 x160))))
(assert (=> (>= 10000 x1787) (= 0 (x2768 x1787))))
(assert (= (x2609 (x489 x1874 x3191 x1010)) x3191))
(assert (x563 x1921))
(assert (x563 x1077))
(assert (=> (<= x2313 10000) (= (x2768 x2313) 0)))
(assert (= x2696 (=> (and (= x2785 (x2794 x863)) (= (not (< 1 x2785)) x1585)) (and x1585 (=> (= x3109 x2010) x939)))))
(assert (x563 x2342))
(assert (x563 x1755))
(assert (x563 x2430))
(assert (x563 x2519))
(assert (x563 x297))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639618)))
(assert (= (x181 (x1884 x1874 x591 x3185 x2244 x710)) x3185))
(assert (x563 x1512))
(assert (= (x2572 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365)) x593))
(assert (= (x2609 (x242 x2658 x2982 x246 x632)) x2982))
(assert (= x593 (x2572 (x1884 x593 x1880 x3017 x1393 x2291))))
(assert (= (x2051 (x1884 x792 x346 x1657 x2734 x2954)) x2954))
(assert (= x480 (x181 (x331 x1584 x217 x480 x3002 x2881 x1155))))
(assert (x563 x1818))
(assert (x563 x112))
(assert (=> (>= 10000 x1300) (= (x2768 x1300) 0)))
(assert (=> (>= 10000 x2027) (= 0 (x2768 x2027))))
(assert (x563 x1216))
(assert (x563 x2418))
(assert (x563 x924))
(assert (= (x2768 (x242 x749 x1092 x1300 x235)) (x242 x749 x1092 x1300 x235)))
(assert (x563 x1735))
(assert (=> (<= x1926 10000) (= 0 (x2768 x1926))))
(assert (x563 x337))
(assert (x563 x2199))
(assert (x563 x1456))
(assert (x563 x2470))
(assert (x542 x1413 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650)))
(assert (= x2320 (and x1316 x2065)))
(assert (= x514 (x2572 (x489 x514 x2058 x527))))
(assert (x542 x1405 1461501637330902918203684832716283019655932542976))
(assert (= (x1260 x749 x1774) (x2768 (x1260 x749 x1774))))
(assert (= x532 (=> (and (>= x1618 1) (= x443 x1618) (= (* x2087 32) x437) (= (x361 x384) x1273) (= x2087 x51) (>= x443 1) (= (<= x1273 224) x828) (= x3176 x2544) (<= x384 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* 32 x2087) x1124) (= (x1200 (- x1618 x384)) x159) (= x443 (x484 (+ x437 x2392))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x384) (= (x484 (+ 32 x384)) x1302) (> x1618 x384) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x384) (= x3009 (x1200 (- x159 32))) (= x3176 (x484 (+ x2075 x1124))) (>= 4 x2087)) (and x828 (=> (and (= x1792 (x489 x1273 x1062 x707)) (= x1131 (x1743 0)) (= (x484 (+ x1302 96)) x2139) (= (x484 (+ 64 x1302)) x2877) (= x3143 (x361 x1302)) (= x1961 (x484 (+ 64 x1302))) (= x2917 (x484 (+ 64 x1302))) (= (x361 x1445) x2980) (= (x361 x1626) x707) (= (x361 x2877) x302) (= x2789 (x361 x2250)) (= (x484 (+ x1302 128)) x1907) (= (x361 x2139) x3032) (= x318 (x361 x1302)) (= (x484 (+ x1302 32)) x756) (= (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835) x145) (= (x242 x1273 x2284 x2858 x1366) x2813) (= x133 (x1200 (- x1930 x1618))) (= x2758 (x361 x2163)) (= (x1200 (- x133 32)) x1263) (= x1072 (x484 (+ 32 x1302))) (= x1805 (x361 x2339)) (= (x484 (+ 32 x1618)) x206) (= (x361 x3140) x997) (= x830 (x361 x756)) (= x3039 (x484 (+ 128 x1302))) (= (x331 x1273 x1057 x830 x578 x2980 x2662) x1042) (= x1708 (ite (= 0 x1273) x1131 (ite (<= x1273 32) x958 (ite (<= x1273 64) x1792 (ite (<= x1273 96) x2813 (ite (>= 128 x1273) x3050 (ite (>= 160 x1273) x1042 (ite (>= 192 x1273) x2611 (ite (<= x1273 224) x145 x2169))))))))) (= x3142 (x361 x2728)) (= x42 (x361 x1302)) (= (x361 x996) x180) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1618) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1618)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x1618) (<= 1 x1618))) (= (x361 x47) x2858) (= x1057 (x361 x1302)) (= x3140 (x484 (+ 32 x1302))) (= x2163 (x484 (+ 96 x1302))) (= (x361 x2917) x1366) (= (x484 (+ 32 x1302)) x2250) (= (x484 (+ x1302 32)) x1626) (= x835 (x361 x1071)) (= (x484 (+ 64 x1302)) x2140) (= x2284 (x361 x1302)) (= (x361 x1072) x66) (= x47 (x484 (+ 32 x1302))) (= (x1884 x1273 x1166 x2789 x3155 x2758) x3050) (= x1930 (x484 (+ x206 96))) (= (x2035 x1618) x1795) (= x2611 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180)) (> x1930 x1618) (= x132 (x361 x2905)) (= (x361 x1302) x1166) (= (x361 x2153) x2552) (= (x484 (+ x1302 160)) x2153) (= x1445 (x484 (+ x1302 96))) (= x996 (x484 (+ x1302 160))) (= (x361 x1961) x3155) (= (x361 x3039) x2662) (= (x484 (+ x1302 64)) x2728) (= (x484 (+ x1302 128)) x2339) (= x958 (x1260 x1273 x42)) (= (x484 (+ 32 x2221)) x1780) (= (x484 (+ x206 32)) x2221) (= x1065 (>= 224 x1795)) (= x496 (x361 x1907)) (= x1071 (x484 (+ x1302 192))) (= (x484 (+ x1302 96)) x2905) (= x578 (x361 x2140)) (= (x484 (+ 32 x1618)) x718) (= x1062 (x361 x1302))) (and x1065 (=> (and (or (and (and (<= x474 4294967295) (>= x474 32) (= 1 x2595)) x2113) (and (not x2113) (= x1732 x2595))) (and (= x164 (x2035 x744)) (= (x484 (+ 64 x718)) x339) (= (x2035 x718) x2364) (= x1226 (x2035 x843)) (= (x484 (+ x1930 4)) x2890) (= (x1260 x1795 x1218) x609) (= (x484 (+ x718 128)) x2920) (= x974 (x2035 x2815)) (= (x242 x1795 x746 x2135 x959) x1534) (= (x2035 x610) x236) (= x553 (x2035 x2782)) (= (x2035 x718) x2039) (= x1678 (x2035 x85)) (= x1256 (x2035 x2920)) (= (x2035 x2142) x513) (= x2037 (x489 x1795 x2039 x732)) (= x778 (x1884 x1795 x2313 x1226 x1678 x3107)) (= x2135 (x2035 x874)) (= x1523 x40) (= (x2035 x2657) x3107) (= x2593 (x2035 x769)) (= (x2035 x718) x746) (= x647 (x331 x1795 x1328 x164 x974 x553 x3178)) (= (x484 (+ x718 64)) x2815) (= (x2035 x1038) x959) (= x1060 (x1743 0)) (= (x484 (+ 160 x718)) x3042) (= (x2035 x483) x732) (= x472 (x484 (+ x718 96))) (= x2141 (x2035 x742)) (= (x2035 x1891) x633) (= x2562 (x2035 x718)) (= x670 (x2035 x1035)) (= (x484 (+ 128 x718)) x432) (= x874 (x484 (+ x718 32))) (= (x2035 x3058) x1299) (= (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236) x31) (= x1739 (x2035 x472)) (= (x2035 x339) x1479) (= (x484 (+ x718 64)) x1038) (= x483 (x484 (+ 32 x718))) (= x769 (x484 (+ x718 96))) (= (x484 (+ x718 128)) x742) (<= x474 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2113 (> x1732 0)) (= x2630 (x2035 x3042)) (= x1035 (x484 (+ 64 x718))) (= (x2035 x2127) x1168) (= (x2035 x718) x2313) (= x1218 (x2035 x718)) (= x2127 (x484 (+ x718 32))) (>= x474 32) (= x1891 (x484 (+ 32 x718))) (= x3178 (x2035 x432)) (= x2371 (x2035 x1237)) (= (x2601 1461501637330902918203684832716283019655932542975 x1299) x2158) (= x3058 (x2035 160)) (= (x484 (+ x718 96)) x2657) (= x106 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)) (= (x484 (+ 64 x718)) x85) (= x1328 (x2035 x718)) (= x2782 (x484 (+ 96 x718))) (= x1237 (x484 (+ x718 160))) (= (ite (= 0 x1795) x1060 (ite (<= x1795 32) x609 (ite (<= x1795 64) x2037 (ite (<= x1795 96) x1534 (ite (>= 128 x1795) x778 (ite (<= x1795 160) x647 (ite (>= 192 x1795) x106 (ite (<= x1795 224) x31 x1926)))))))) x1523) (= (x484 (+ x718 32)) x744) (= x843 (x484 (+ 32 x718))) (= (x484 (+ x718 192)) x610))) x1472)))))))
(assert (= x2798 (x2572 (x1260 x2798 x3189))))
(assert (x563 x183))
(assert (x563 x2006))
(assert (= x1281 (x119 (x331 x1380 x2868 x636 x1281 x279 x2383))))
(assert (= (x2768 (x489 x749 x2712 x3070)) (x489 x749 x2712 x3070)))
(assert (x563 x1650))
(assert (= x2831 (=> (and (= x2904 (not (> x2217 128))) (= (x484 (+ x871 96)) x1451) (= x2258 (x484 (+ x2495 96))) (= x860 (x39 x1451))) (and x2904 x319))))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (= x2643 (and x1000 x286)))
(assert (= x2808 (x2939 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808))))
(assert (= x613 (x119 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838))))
(assert (=> (>= 10000 x719) (= (x2768 x719) 0)))
(assert (x563 x3181))
(assert (x563 x846))
(assert (= x1970 (and (not x2160) x283)))
(assert (=> (>= 10000 x3035) (= 0 (x2768 x3035))))
(assert (= x324 (x2609 (x489 x1584 x324 x968))))
(assert (=> (<= x873 10000) (= 0 (x2768 x873))))
(assert (x563 x3009))
(assert (= (x2609 (x242 x1795 x746 x2135 x959)) x746))
(assert (= (x2051 (x331 x792 x2344 x1751 x1444 x1301 x1161)) x1301))
(assert (x406 32 x2994))
(assert (=> (<= x1874 10000) (= (x2768 x1874) 0)))
(assert (= (=> (and (= (= x691 0) x1475) (or x1475 (and (not x1475) (= x691 0)))) x1833) x2447))
(assert (x563 x2659))
(assert (= x2249 (and x902 x1894)))
(assert (x563 x199))
(assert (= x2711 (x2572 (x1260 x2711 x1886))))
(assert (= x401 (x181 (x242 x514 x2761 x401 x831))))
(assert (= (x2768 (x1260 x1795 x1218)) (x1260 x1795 x1218)))
(assert (=> (<= x373 10000) (= 0 (x2768 x373))))
(assert (x563 x788))
(assert (x563 x2668))
(assert (x563 x1304))
(assert (= x2720 (and x260 x2404)))
(assert (x563 x710))
(assert (x1195 x1184))
(assert (= x726 (and (not x223) x2074)))
(assert (< (x489 64 x551 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x938 (and (not x2471) x1199)))
(assert (= x2858 (x181 (x242 x1273 x2284 x2858 x1366))))
(assert (x563 x1478))
(assert (x563 x1549))
(assert (x563 x1045))
(assert (= x397 (and (not x1860) x1664)))
(assert (= (and x448 x475) x660))
(assert (= (=> (and (<= 1 x1549) (= (x1012 x2192) x34) (= x1549 (ite (= x380 0) x380 1)) (= x2496 (not (< 1 x34)))) (and (=> (= x1658 x1910) x1004) x2496)) x1846))
(assert (= (x811 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236)) x2630))
(assert (x563 x1380))
(assert (x1195 x869))
(assert (x563 x488))
(assert (x563 x2746))
(assert (= (x2768 (x1884 x1273 x1166 x2789 x3155 x2758)) (x1884 x1273 x1166 x2789 x3155 x2758)))
(assert (x563 x567))
(assert (x563 x535))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x489 x1874 x3191 x1010)))
(assert (x563 x429))
(assert (=> (>= 10000 x1991) (= 0 (x2768 x1991))))
(assert (=> (>= 10000 x243) (= (x2768 x243) 0)))
(assert (= x3154 (and (not x2862) x2320)))
(assert (x563 x1440))
(assert (x563 x725))
(assert (= (x2768 (x1884 x1584 x2398 x2841 x2461 x914)) (x1884 x1584 x2398 x2841 x2461 x914)))
(assert (= x683 (x2609 (x1260 x593 x683))))
(assert (= x59 (x2609 (x1260 x1380 x59))))
(assert (= x460 (x119 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525))))
(assert (x563 x2512))
(assert (> (x242 x749 x1092 x1300 x235) 10000))
(assert (x563 x1544))
(assert (= (x2572 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017)) x2711))
(assert (x563 x2182))
(assert (= x77 (x2609 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575))))
(assert (x563 x3070))
(assert (x563 x1706))
(assert (x563 x1424))
(assert (x563 x1586))
(assert (= (x181 (x242 66 x588 x1852 x2106)) x1852))
(assert (=> (>= 10000 x3048) (= 0 (x2768 x3048))))
(assert (=> (>= 10000 x1553) (= (x2768 x1553) 0)))
(assert (x1194 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (not (x1194 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525))))
(assert (x563 x1443))
(assert (x563 x2222))
(assert (= (x119 (x331 x1609 x646 x195 x537 x535 x1528)) x537))
(assert (= x2661 (and x555 x1937)))
(assert (= x3070 (x181 (x489 x749 x2712 x3070))))
(assert (x563 x3042))
(assert (x563 x1624))
(assert (x563 x1670))
(assert (x1195 x334))
(assert (x563 x1191))
(assert (> (x489 x1584 x324 x968) 10000))
(assert (x563 x3182))
(assert (=> (>= 10000 x2044) (= (x2768 x2044) 0)))
(assert (= (x2051 (x1884 x2711 x1758 x447 x935 x255)) x255))
(assert (= (x2572 (x1260 x1584 x1591)) x1584))
(assert (= x1718 (and x2646 x1027)))
(assert (= (x2572 (x331 x1584 x217 x480 x3002 x2881 x1155)) x1584))
(assert (x563 x2551))
(assert (x563 x2654))
(assert (= x923 (x2051 (x1884 x1380 x2567 x150 x2529 x923))))
(assert (x563 x1644))
(assert (x563 x2655))
(assert (x563 x2319))
(assert (= (and x207 x1420) x1844))
(assert (x563 x2296))
(assert (x563 x2007))
(assert (x563 x1487))
(assert (=> (>= 10000 x1531) (= (x2768 x1531) 0)))
(assert (x563 x615))
(assert (= x3155 (x119 (x1884 x1273 x1166 x2789 x3155 x2758))))
(assert (=> (>= 10000 x2461) (= (x2768 x2461) 0)))
(assert (x563 x3022))
(assert (x563 x2106))
(assert (x563 x646))
(assert (x563 x1395))
(assert (x563 x94))
(assert (x563 x780))
(assert (x563 x66))
(assert (x563 x2267))
(assert (x563 x2158))
(assert (x563 x826))
(assert (= (x2768 21408440236001274921485009970742555221786587156444570319896389698385254285312) 0))
(assert (x563 x731))
(assert (x1965 x2994))
(assert (x563 x2141))
(assert (> (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185) 10000))
(assert (x563 x797))
(assert (=> (>= 10000 x2135) (= (x2768 x2135) 0)))
(assert (x563 x1291))
(assert (x563 x2461))
(assert (= x1795 (x2572 (x331 x1795 x1328 x164 x974 x553 x3178))))
(assert (x563 x1450))
(assert (= x1845 (x2051 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553))))
(assert (x563 x2411))
(assert (=> (>= 10000 x1153) (= (x2768 x1153) 0)))
(assert (x563 x2504))
(assert (= x1553 (x811 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553))))
(assert (x960 x1037))
(assert (x563 x1094))
(assert (= x588 (x2609 (x242 66 x588 x1852 x2106))))
(assert (= (x2572 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994)) x1584))
(assert (x563 x125))
(assert (= (x2768 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650)) (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650)))
(assert (x563 x2589))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x563 x1698))
(assert (x563 x2612))
(assert (x563 x2392))
(assert (= (x331 x1273 x1057 x830 x578 x2980 x2662) (x2768 (x331 x1273 x1057 x830 x578 x2980 x2662))))
(assert (= x11 (x181 (x489 x593 x626 x11))))
(assert (x563 x631))
(assert (=> (>= 10000 x1285) (= 0 (x2768 x1285))))
(assert (x563 x450))
(assert (x406 32 x2888))
(assert (= (x2609 (x331 x2711 x1177 x1274 x767 x3057 x1224)) x1177))
(assert (x563 x54))
(assert (= x475 (or x903 x375 x1427 x258 x1917)))
(assert (=> (>= 10000 x2992) (= (x2768 x2992) 0)))
(assert (= x2789 (x181 (x1884 x1273 x1166 x2789 x3155 x2758))))
(assert (x563 x473))
(assert (= (x2051 (x1884 x1273 x1166 x2789 x3155 x2758)) x2758))
(assert (= x2893 (=> (and (= (x484 (+ x1044 32)) x2152) (= (x484 (+ x781 160)) x369) (= x783 (x2553 x1863)) (= x952 (x484 (+ x1728 32))) (= x140 (x484 (+ 32 x2380))) (= 1 x783) (> x369 x781) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x781)) (= x3136 (not (< 1 x1898))) (= (x973 x863) x22) (= (x1040 x3192) x1515) (= (x2553 x2380) x1578) (not (= x781 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= x22 1) (= (x1616 x2346) x3164) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x781) (= (x484 (+ x1796 32)) x2606) (= (x2553 x140) x1863) (<= x781 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x484 (+ x2606 32)) x1728) (not (= x781 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x848 1) (= (x484 (+ 32 x781)) x1796) (= (x2025 x2380) x1898) (<= x781 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x961 (x2601 1461501637330902918203684832716283019655932542975 x3164)) (< x2560 x22) (= x222 (x484 (+ 64 x2346))) (= x1044 (x734 (* 32 x2560))) (= (x484 (+ x1863 32)) x2346) (= x2924 (x484 (+ x2152 x863))) (= x3192 (x484 (+ x2346 32))) (<= x2560 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1578 1) (= (x354 x222) x3020)) (and x3136 (=> (= x101 x369) x1414)))))
(assert (x563 x810))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639649)))
(assert (> (x489 64 x551 1) 10000))
(assert (x1965 x1677))
(assert (=> (<= x2914 10000) (= 0 (x2768 x2914))))
(assert (< 10000 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808)))
(assert (= (and (not x385) x1140) x1183))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639832))
(assert (x563 x1271))
(assert (x563 x105))
(assert (=> (<= x1706 10000) (= (x2768 x1706) 0)))
(assert (x563 x2336))
(assert (x1965 160))
(assert (= (x2572 (x331 x1273 x1057 x830 x578 x2980 x2662)) x1273))
(assert (x563 x1620))
(assert (x563 x3080))
(assert (x563 x949))
(assert (= x371 (x119 (x331 x514 x629 x982 x371 x144 x1953))))
(assert (x563 x1017))
(assert (= x2273 (x181 (x242 x593 x1798 x2273 x2650))))
(assert (= (=> (and (= (x2601 1461501637330902918203684832716283019655932542975 x1508) x2887) (= x2887 x1280) (= x1006 1) (= x1280 (x2601 1461501637330902918203684832716283019655932542975 x2615)) (= (x194 x3059) x1508) (= x3059 (x484 (+ 128 x2561)))) x1201) x1587))
(assert (= (=> (and (< x2406 x544) (<= x2406 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x672 (x484 (+ x2406 32))) (not (= x2406 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2406) (= x544 (x484 (+ x2406 64))) (= x2100 (= 1 x1595)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2406)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2406)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2406)) (and (=> (= x544 x628) x2930) x2100)) x2185))
(assert (x563 x227))
(assert (not (x1194 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017))))
(assert (= x1795 (x2572 (x1884 x1795 x2313 x1226 x1678 x3107))))
(assert (x563 x2273))
(assert (=> (>= 10000 x1678) (= (x2768 x1678) 0)))
(assert (x563 x839))
(assert (= (x2247 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253)) x3180))
(assert (x563 x1533))
(assert (= (or x1712 x343) x3034))
(assert (not (x1194 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127))))
(assert (= (x2768 1889567281) 0))
(assert (x563 x399))
(assert (= (x2247 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835)) x219))
(assert (x1194 18446746139588821059))
(assert (= x1591 (x2609 (x1260 x1584 x1591))))
(assert (x563 x1834))
(assert (= (and x2528 x1532) x663))
(assert (x563 x1926))
(assert (x648 x513))
(assert (= x2946 (x2247 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650))))
(assert (= x263 (=> (and (<= x957 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2699 (+ x1530 32)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1735) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1146)) (< x1146 x1735)) (and (> x1146 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1735))) (= x1717 (x484 (+ x1146 36))) (= x87 (x484 (+ x1717 32))) (= x1146 (x2818 164)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x957) (= (* x933 160) x53) (not (or (and (= (<= x87 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2021 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x87 x2021)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2021) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x87)))) (= (x1200 (- x1802 x53)) x2021) (= x2873 (x484 (+ 32 x957))) (< x957 x3135) (= (x2818 x1717) x933) (or (<= x1146 2065879269376) (>= x1146 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= x3135 1) (<= x933 18446744073709551615) (= (* x933 32) x3028) (= x3135 (x484 (+ (mod (+ 32 x3028) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x957))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x957) (= x671 (> x933 0))) (and (=> x671 x1073) (=> (and (= x3135 x3163) (not x671)) x1154)))))
(assert (x563 x2041))
(assert (x1195 x1031))
(assert (= (x2609 (x489 x1795 x2039 x732)) x2039))
(assert (= x1841 (and x2268 (not x278))))
(assert (x563 x1758))
(assert (= x1756 (x2572 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315))))
(assert (=> (<= x208 10000) (= 0 (x2768 x208))))
(assert (x563 x871))
(assert (x563 x2078))
(assert (x563 x61))
(assert (x564 x2629))
(assert (x563 x676))
(assert (= x892 (or x2704 x2063 x2181 x2720 x2367)))
(assert (x563 x607))
(assert (= x3032 (x2051 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180))))
(assert (x563 x562))
(assert (x1195 x3175))
(assert (< (x1668 x593 x978 x1787 x2437 x2694 x2992 x425) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2572 (x242 x792 x2440 x1189 x2666)) x792))
(assert (x563 x1263))
(assert (x563 x159))
(assert (= x1141 (and x2846 (not x1826))))
(assert (= (x331 x1874 x1628 x1450 x2418 x2551 x2635) (x2768 (x331 x1874 x1628 x1450 x2418 x2551 x2635))))
(assert (x563 x3078))
(assert (= (x2572 (x489 x2711 x196 x2133)) x2711))
(assert (= x514 (x2572 (x1260 x514 x2892))))
(assert (x563 x2052))
(assert (x563 x381))
(assert (x563 x1115))
(assert (x563 x1748))
(assert (x563 x499))
(assert (x1195 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x824 x2231))
(assert (x563 x597))
(assert (=> (<= x371 10000) (= (x2768 x371) 0)))
(assert (x648 x2109))
(assert (x563 x2291))
(assert (x1195 x1405))
(assert (not (x1194 (x331 x514 x629 x982 x371 x144 x1953))))
(assert (x564 x1508))
(assert (x563 x916))
(assert (x563 x1480))
(assert (x563 x2169))
(assert (x563 x2050))
(assert (= (x119 (x242 x1380 x1013 x878 x1947)) x1947))
(assert (> (x1884 x1756 x2679 x2483 x1069 x2361) 10000))
(assert (=> (<= x2934 10000) (= 0 (x2768 x2934))))
(assert (x563 x1053))
(assert (x542 x1275 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x2450))
(assert (x563 x1956))
(assert (= x2238 (and (not x2201) x18)))
(assert (x563 x650))
(assert (= (and (not x1686) x3093) x2906))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (x563 x196))
(assert (x563 x2483))
(assert (not (x1194 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365))))
(assert (x563 x1962))
(assert (x563 x1236))
(assert (x563 x2782))
(assert (= x989 (or x2610 x1112)))
(assert (x563 x1615))
(assert (= (or x1484 x1506) x1916))
(assert (x563 x1300))
(assert (=> (>= 10000 x1845) (= 0 (x2768 x1845))))
(assert (x563 x2019))
(assert (x563 x2636))
(assert (x563 x149))
(assert (x824 x2001))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)))
(assert (= (x2768 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614)) (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614)))
(assert (x563 x2871))
(assert (x563 x1747))
(assert (= x533 (x811 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533))))
(assert (= x897 (and x1532 (not x2528))))
(assert (= (x119 (x331 x593 x1807 x1322 x1981 x90 x178)) x1981))
(assert (x563 x2394))
(assert (= (x2051 (x331 x1273 x1057 x830 x578 x2980 x2662)) x2980))
(assert (x563 x1047))
(assert (= (and x2062 x1949) x3015))
(assert (= (x181 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127)) x1028))
(assert (= (x1743 0) (x2768 (x1743 0))))
(assert (> (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253) 10000))
(assert (and (= 9 (x2536 3 3)) (= 81 (x2536 27 3)) (= (x2536 9 9) 81) (= (x2536 9 3) 27)))
(assert (x563 x854))
(assert (x563 x986))
(assert (x1194 134217728))
(assert (=> (>= 10000 x2146) (= 0 (x2768 x2146))))
(assert (x563 x1074))
(assert (x563 x73))
(assert (x563 x589))
(assert (= (x119 (x242 x1756 x347 x2484 x2091)) x2091))
(assert (x563 x2081))
(assert (x563 x1770))
(assert (x563 x1581))
(assert (x563 x1570))
(assert (x542 x729 32))
(assert (x563 x3075))
(assert (x563 x1088))
(assert (=> (<= x2178 10000) (= 0 (x2768 x2178))))
(assert (= (x181 (x242 x1874 x980 x1271 x891)) x1271))
(assert (x563 x517))
(assert (= (x2247 (x331 x514 x629 x982 x371 x144 x1953)) x1953))
(assert (x563 x164))
(assert (x563 x2429))
(assert (x563 x841))
(assert (=> (>= 10000 x1150) (= 0 (x2768 x1150))))
(assert (x563 x614))
(assert (x563 x3025))
(assert (x563 x2599))
(assert (x563 x683))
(assert (x563 x2061))
(assert (not (x1194 (x489 x749 x2712 x3070))))
(assert (x563 x127))
(assert (= x2914 (x2051 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993))))
(assert (x563 x2231))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x242 x593 x1798 x2273 x2650)))
(assert (x563 x2672))
(assert (x563 x2310))
(assert (x563 x1273))
(assert (x563 x885))
(assert (x648 x1701))
(assert (x563 x1771))
(assert (> (x489 x749 x2712 x3070) 10000))
(assert (x1195 x501))
(assert (x563 x255))
(assert (x563 x1629))
(assert (x563 x1578))
(assert (=> (<= x891 10000) (= (x2768 x891) 0)))
(assert (x563 x1397))
(assert (= (x119 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926)) x3052))
(assert (x563 x241))
(assert (x563 x452))
(assert (= (or x1916 x2741) x265))
(assert (x563 x3180))
(assert (= x1176 (=> (and (= x2324 (x484 (+ x1048 32))) (= x2368 (< 0 x2187)) (= x2187 (x1001 x1048)) (= (x484 (+ 32 x3131)) x845) (= (x484 (+ 32 x1542)) x2998) (= x1822 (x1001 x2998))) (and (=> (and (and (= x2996 0) (= x1720 x845) (= x2324 x1899)) (not x2368)) x2719) (=> (and x2368 (and (= (x484 (+ 32 x845)) x2068) (= (> x2187 1) x2134) (= x2543 (x1001 x2324)) (= (x484 (+ 32 x2324)) x1773))) (and (=> (and (not x2134) (and (= x1720 x2068) (= x1773 x1899) (= 1 x2996))) x2719) (=> (and x2134 (and (= (x2921 x1773) x2150) (= x951 (x484 (+ 32 x2068))) (= (x484 (+ x1773 32)) x1713) (= x2942 (> x2187 2)))) (and (=> (and (and (= x1720 x951) (= x1899 x1713) (= 2 x2996)) (not x2942)) x2719) (=> (and x2942 (and (= (< 3 x2187) x2144) (= x1719 (x2574 x1713)) (= x2908 (x484 (+ x1713 32))) (= (x484 (+ x951 32)) x1170))) (and (=> x2144 x410) (=> (and (and (= x1170 x1720) (= x1899 x2908) (= 3 x2996)) (not x2144)) x2719)))))))))))
(assert (x563 x2669))
(assert (= x2719 (=> (and (= (x484 (+ 32 x3131)) x3104) (= x1899 x621) (< x3131 x1720) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3131) (= x1786 (x484 (+ x1748 x845))) (<= 1 x1786) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3131) (>= 4 x2187) (= x1363 (x1200 (- x1720 x3131))) (= x1786 x1720) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3131) (= x1748 (* x2187 32)) (= x2996 x2187) (= x1084 (x1200 (- x1363 32))) (= x259 (>= 224 x1609)) (= x477 (* x2187 32)) (= (x2434 x3131) x1609) (= (x484 (+ x2324 x477)) x621) (>= x1720 1)) (and (=> (and (= (x2434 x430) x1993) (= x1075 (x484 (+ x1720 32))) (= x193 (x484 (+ 96 x3104))) (= (x2434 x635) x1225) (= (x2434 x2055) x2783) (= x2203 (x484 (+ x3104 32))) (= (x2434 x1471) x537) (= (x484 (+ 64 x3104)) x1471) (= x244 (x484 (+ 96 x3104))) (= (x2434 x1736) x2234) (= (x484 (+ 32 x1720)) x856) (= (x484 (+ x3104 96)) x64) (= (x2434 x3104) x2457) (= (x2434 x3104) x868) (= (x484 (+ 32 x3104)) x2138) (= x2073 (x2434 x244)) (= x3105 (x484 (+ x3104 32))) (= (x2434 x3105) x1173) (= x1691 (x2434 x545)) (= (x484 (+ 64 x3104)) x2620) (= (x2434 x2396) x2914) (= (x484 (+ 128 x3104)) x545) (= (x484 (+ 32 x3104)) x1089) (= x2903 (x1200 (- x2241 x1720))) (= x2726 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395)) (= x1337 (x484 (+ x3104 128))) (= (x1200 (- x2903 32)) x9) (= x2227 (x331 x1609 x646 x195 x537 x535 x1528)) (= (x4 x1720) x514) (= x1458 (x2434 x3104)) (= (x2434 x1934) x195) (= x1528 (x2434 x2502)) (= (x2434 x193) x2763) (= (x484 (+ 160 x3104)) x932) (= (x242 x1609 x2023 x1173 x2783) x2334) (= x268 (x2434 x3104)) (= x188 (x2434 x487)) (= x487 (x484 (+ x3104 32))) (= (x484 (+ 32 x1573)) x320) (= x160 (x2434 x1089)) (= (x2434 x64) x535) (= (x2434 x2138) x1782) (= x2975 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993)) (= x1193 (x2434 x2203)) (= x2023 (x2434 x3104)) (= (x2434 x2620) x2092) (= (x484 (+ x1075 32)) x1573) (= x2502 (x484 (+ x3104 128))) (= x430 (x484 (+ x3104 192))) (= (x484 (+ x3104 64)) x1736) (= (x489 x1609 x1458 x1193) x1799) (or (and (<= x1720 115792089237316195423570985008687907853269984665640564039457584007913129639807) (>= x1720 1)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1720) (<= x1720 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (= (x484 (+ 32 x3104)) x1934) (= x1395 (x2434 x932)) (= (x2434 x3104) x646) (= (x484 (+ 96 x1075)) x2241) (> x2241 x1720) (= (ite (= 0 x1609) x3159 (ite (<= x1609 32) x2844 (ite (<= x1609 64) x1799 (ite (<= x1609 96) x2334 (ite (<= x1609 128) x174 (ite (<= x1609 160) x2227 (ite (>= 192 x1609) x2726 (ite (<= x1609 224) x2975 x841)))))))) x1741) (= (x1884 x1609 x2457 x1782 x1225 x2073) x174) (= (x484 (+ x3104 64)) x635) (= x3159 (x1743 0)) (= x2844 (x1260 x1609 x868)) (= (x2434 x3104) x1285) (= x243 (x2434 x1337)) (= (x2434 x1480) x2850) (= x1480 (x484 (+ x3104 160))) (= x2055 (x484 (+ x3104 64))) (= x2396 (x484 (+ x3104 96))) (= (>= 224 x514) x1983)) (and x1983 (=> (and (= (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614) x2026) (= (x4 224) x1426) (= x1138 (x484 (+ x2241 32))) (= (x484 (+ 32 x856)) x1360) (= x2658 (x1883 x2241)) (= (x4 x856) x3047) (= (x484 (+ x856 32)) x1410) (= x539 (x1743 0)) (= (x4 x2521) x2107) (= (x484 (+ x856 96)) x2853) (= (>= 224 x2658) x108) (= (x484 (+ x708 32)) x1220) (= (x1884 x514 x3047 x67 x2748 x295) x667) (= (x4 x856) x2892) (= x1329 (x484 (+ 128 x856))) (= (x4 x856) x629) (= (x4 x1437) x2146) (= x1808 (x4 x58)) (= (x4 x1329) x881) (= (x4 x237) x144) (= (x484 (+ x856 160)) x310) (= (x4 256) x836) (= x1437 (x484 (+ x856 96))) (= (x484 (+ x856 32)) x1757) (= x2969 (x484 (+ 96 x856))) (= (x4 x310) x2614) (= (x4 x1410) x2857) (= x826 (x484 (+ 64 x856))) (= (x484 (+ 32 x856)) x2774) (= x2550 (x484 (+ x856 64))) (= (x484 (+ 32 x856)) x2172) (= (x484 (+ 128 x856)) x748) (= x2687 (x4 x2969)) (= (x1200 (- x740 x2241)) x992) (= (x484 (+ 96 x856)) x237) (= x983 (x1260 x514 x2892)) (= (x4 x856) x2761) (= x1706 (x4 x856)) (= (x4 x1730) x1641) (= (x484 (+ 32 x2241)) x2812) (= (x4 x748) x1953) (= (x484 (+ 128 x856)) x1624) (= (x489 x514 x2058 x527) x573) (= (x4 x1360) x67) (= x1821 (x2601 1461501637330902918203684832716283019655932542975 x836)) (= x371 (x4 x2125)) (= x1730 (x484 (+ x856 64))) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x2241) (<= 129 x2241)) (and (>= x2241 115792089237316195423570985008687907853269984665640564039457584007913129639747) (<= x2241 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (>= 126 x2241) (<= 2 x2241))) (= (x1200 (- x992 32)) x2655) (= (x484 (+ x1627 32)) x3033) (= x982 (x4 x1757)) (= (x4 x1624) x219) (= x58 (x484 (+ x856 32))) (= (x4 x2736) x1878) (= (x4 x2054) x1835) (= x2189 (ite (= x514 0) x539 (ite (>= 32 x514) x983 (ite (<= x514 64) x573 (ite (>= 96 x514) x386 (ite (>= 128 x514) x667 (ite (<= x514 160) x1310 (ite (<= x514 192) x2026 (ite (>= 224 x514) x2373 x2934))))))))) (= x2125 (x484 (+ 64 x856))) (= x2521 (x484 (+ 160 x856))) (= x386 (x242 x514 x2761 x401 x831)) (= x2748 (x4 x2550)) (= (x4 x2172) x401) (= (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835) x2373) (= (x484 (+ x1138 160)) x740) (= x2736 (x484 (+ 64 x856))) (> x740 x2241) (= x2054 (x484 (+ 192 x856))) (= (x484 (+ 32 x1220)) x1627) (= x708 (x484 (+ 32 x1138))) (= (x331 x514 x629 x982 x371 x144 x1953) x1310) (= x831 (x4 x826)) (= (x4 x2774) x527) (= x1770 (x4 x856)) (= (x4 x856) x2058) (= x295 (x4 x2853))) (and x108 (=> (and (= x38 (x1883 x721)) (= (x484 (+ 128 x2812)) x1711) (= x1938 (x1883 x2812)) (= (x1883 x569) x813) (= x448 (= x882 65)) (= (x484 (+ 64 x740)) x1747) (= x299 (x1883 x3196)) (= x1852 (x2487 x895)) (= x2791 (x484 (+ 32 x2812))) (= x2168 (x484 (+ x2812 32))) (= (x489 x2658 x2293 x2507) x200) (= x1936 (x1883 x3067)) (= x3196 (x484 (+ x2812 32))) (= (x1260 x2658 x556) x2569) (= (x1883 x2812) x3160) (= x556 (x1883 x2812)) (= (x484 (+ 96 x2812)) x861) (= (x1883 x122) x1234) (= x2191 (x484 (+ 96 x2812))) (= (x1883 x89) x2896) (= (x1883 x2952) x1153) (= (x242 x2658 x2982 x246 x632) x1114) (= (x1883 x2283) x533) (= x3067 (x484 (+ 96 x2812))) (= x2044 (x1883 x400)) (= (x484 (+ 2 x740)) x737) (= x632 (x1883 x463)) (= (x484 (+ x2812 32)) x400) (= (x1743 0) x81) (= x423 (x484 (+ 32 x737))) (= x569 (x484 (+ 32 x2812))) (= x246 (x1883 x2791)) (= x588 (x2487 x740)) (= (x1883 x2812) x1192) (= (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533) x1557) (= (x484 (+ x2812 64)) x463) (= x2507 (x1883 x2168)) (= x2283 (x484 (+ x2812 160))) (= x719 (x1883 x2812)) (= x2839 (x242 66 x588 x1852 x2106)) (= (x484 (+ x2812 64)) x122) (= x1481 (x484 (+ 64 x2812))) (= (x484 (+ 32 x2812)) x1726) (= x1637 (x484 (+ x2812 128))) (= (x484 (+ x2812 64)) x721) (= (x484 (+ x2812 96)) x3108) (= x1862 (x331 x2658 x719 x299 x38 x1936 x1153)) (= x2864 (x484 (+ 192 x2812))) (= x2952 (x484 (+ 128 x2812))) (= (x1883 x861) x1806) (= x882 (x2487 x1813)) (= (x1883 x2812) x2293) (= (x1883 x2191) x2047) (= (x1883 x1711) x3061) (= x2279 (ite (= x2658 0) x81 (ite (<= x2658 32) x2569 (ite (<= x2658 64) x200 (ite (>= 96 x2658) x1114 (ite (<= x2658 128) x2995 (ite (>= 160 x2658) x1862 (ite (<= x2658 192) x1557 (ite (<= x2658 224) x2804 x1412))))))))) (= (x1883 x2812) x2982) (= (x484 (+ x740 32)) x895) (= (x2487 x1747) x2106) (= x1150 (x1883 x2864)) (= x2804 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150)) (= x2042 (x484 (+ x2812 64))) (= x3183 (x1883 x1481)) (= (x1883 x1726) x1043) (= (x1884 x2658 x1938 x2044 x1858 x449) x2995) (= (x484 (+ 160 x2812)) x89) (= (x1883 x1637) x267) (= x449 (x1883 x3108)) (= (x1883 x2042) x1858)) (and (=> (and x448 (and (and (= (x2487 x916) x2110) (= (x673 x1514 248) x3171) (= x469 (+ 32 x916)) (= x916 (+ x2151 32)) (= x1455 (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x2110)) (= (x2487 x2151) x919) (= (x2487 x469) x1514)) (or (and x1455 (and (= 0 x1797) (= 3 x808) (= x3124 x2110) (= x2681 x740))) (and (not x1455) (and (or (and (not x516) (and (= x1797 x501) (= 0 x808) (= 0 x3124) (= x80 x2681))) (and x516 (and (= x3124 0) (= 0 x1797) (= x2681 x80) (= 1 x808)))) (and (= (x803 (x484 (+ 96 x80))) x1098) (<= x740 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x669 x2557) x501) (not (= x740 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x2056 (x484 (+ 32 x2308))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x740)) (= (x1200 (- x80 32)) x1370) (<= x1651 1461501637330902918203684832716283019655932542975) (= x2264 (x2601 1461501637330902918203684832716283019655932542975 x501)) (= x2641 (x803 x80)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x740)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x740) (= (= 0 x2264) x516) (= x2739 (x803 (x484 (+ 32 x80)))) (= 128 x372) (= (x1200 (- x80 32)) x2557) (< x740 x80) (= (x1723 x2641 x2739 x770 x1098) x1651) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x740) (= x2387 (x484 (+ 32 x80))) (= x80 (x484 (+ x740 32))) (= x2308 (x484 (+ 32 x2387))) (= (x803 (x484 (+ 64 x80))) x770))))))) x1391) (=> (and (and (= x139 (x2487 x1813)) (= x198 x740) (= x691 2) (= x2443 x139) (= x1026 0)) (not x448)) x2447))))))) x259))))
(assert (x563 x3102))
(assert (= (x2768 18446744073709551518) 0))
(assert (x563 x2865))
(assert (x563 x1899))
(assert (x563 x3069))
(assert (x563 x822))
(assert (= x1756 (x2572 (x331 x1756 x2931 x73 x1688 x688 x930))))
(assert (x563 x2056))
(assert (x563 x998))
(assert (< (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x1981))
(assert (= (x2768 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236)) (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236)))
(assert (= x591 (x2609 (x1884 x1874 x591 x3185 x2244 x710))))
(assert (x563 x3088))
(assert (x563 x3160))
(assert (x563 x2671))
(assert (= x982 (x181 (x331 x514 x629 x982 x371 x144 x1953))))
(assert (= x392 (x119 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575))))
(assert (x563 x1028))
(assert (= x1063 (and x2289 x2889)))
(assert (x563 x876))
(assert (x563 x645))
(assert (x563 x2494))
(assert (= (x2572 (x489 x2798 x802 x600)) x2798))
(assert (x1194 2065879269376))
(assert (x563 x1432))
(assert (x563 x2109))
(assert (x563 x2938))
(assert (x563 x1992))
(assert (x563 x769))
(assert (x563 x2833))
(assert (x563 x336))
(assert (x563 x239))
(assert (= (x181 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180)) x66))
(assert (= (x2572 (x1260 x2658 x556)) x2658))
(assert (x563 x968))
(assert (=> (>= 10000 x1115) (= 0 (x2768 x1115))))
(assert (x563 x1031))
(assert (= x2658 (x2572 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150))))
(assert (=> (<= x1354 10000) (= 0 (x2768 x1354))))
(assert (=> (<= x1271 10000) (= 0 (x2768 x1271))))
(assert (= x160 (x181 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395))))
(assert (x563 x1654))
(assert (= x2090 (=> (and (= (x484 (+ x2314 x1088)) x113) (= x745 (x484 (+ 32 x2938))) (= x1828 (x484 (+ 32 x2958))) (= x143 (> x677 0)) (= x2314 (x734 (* x677 32))) (= (x1803 x2958) x677) (= x1088 (x484 (+ x1340 32))) (= x109 (x1200 (- x1340 x1580)))) (and (=> (and (and (= x1828 x2807) (= x1110 0) (= x1088 x486)) (not x143)) x1312) (=> (and (and (= x606 (x484 (+ x1077 32))) (= (x774 x1828) x1077) (= (> x2947 0) x620) (= x520 (x3134 x606)) (= x631 (x774 x1077)) (= x1017 (x484 (+ x113 32))) (= x2947 (x84 x311)) (= x311 (x2978 x431)) (= (x2601 1461501637330902918203684832716283019655932542975 x631) x1968) (= x431 (x484 (+ 32 x606))) (= x2003 (x484 (+ 32 x1017)))) x143) (and (=> (not x620) x775) (=> (and (= x1257 (> x2947 32)) x620) (and (=> (not x1257) x775) (=> (and (= (> x2947 64) x1619) x1257) (and (=> (and (= (< 96 x2947) x19) x1619) (and (=> x19 x1371) (=> (not x19) x775))) (=> (not x1619) x775)))))))))))
(assert (x563 x211))
(assert (x563 x3067))
(assert (x648 x1299))
(assert (x563 x1503))
(assert (x563 x873))
(assert (x563 x8))
(assert (x563 x2055))
(assert (= (x2768 (x242 x1380 x1013 x878 x1947)) (x242 x1380 x1013 x878 x1947)))
(assert (= x458 (and x1257 x855)))
(assert (x563 x1360))
(assert (= (x2051 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835)) x2146))
(assert (= (x2247 (x331 x2658 x719 x299 x38 x1936 x1153)) x1153))
(assert (x563 x1574))
(assert (x563 x3146))
(assert (x542 x513 1461501637330902918203684832716283019655932542976))
(assert (= (x811 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794)) x2094))
(assert (=> (>= 10000 x1450) (= (x2768 x1450) 0)))
(assert (x563 x3165))
(assert (= (=> (and (<= 1 x2587) (= x1504 (x484 (+ 32 x2559))) (<= x2559 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x484 (+ x3069 x2627)) x2830) (= (x1200 (- x2587 x2559)) x622) (= x749 (x2475 x2559)) (= (<= x749 224) x1923) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2559) (= (x484 (+ x3069 x2523)) x2587) (= x1275 (x484 (+ 31 x2627))) (> x2587 x2559) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2559) (= x2523 (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1275)) (= x1139 (x1200 (- x622 32)))) (and x1923 (=> (and (= x2082 (x484 (+ x1504 32))) (= (x484 (+ 64 x1504)) x1204) (= x823 (x2475 x1504)) (= (x2475 x3141) x1125) (= x1092 (x2475 x1504)) (= x2897 (x484 (+ 192 x1504))) (= (x2475 x403) x776) (= x358 (x489 x749 x2712 x3070)) (= x1517 (x484 (+ 64 x1504))) (>= x3080 1) (= (x1260 x749 x1774) x1848) (= (x2475 x205) x1845) (= (not (> x1495 1)) x3172) (= x2353 (x2475 x2885)) (= x649 (x484 (+ 96 x1504))) (= (x2475 x2897) x1185) (= (x2475 x2940) x3070) (= x1497 (x1743 0)) (= (x484 (+ x1048 32)) x1518) (= (x484 (+ 32 x1504)) x2752) (= x1300 (x2475 x1572)) (= (x484 (+ 32 x1504)) x2940) (= (x484 (+ x1504 128)) x304) (= (x484 (+ 96 x1504)) x205) (= x2433 (x484 (+ x1504 96))) (= x2491 (x242 x749 x1092 x1300 x235)) (= (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185) x1663) (= x2724 (x2475 x2083)) (= (x2475 x1381) x724) (= (x2475 x1504) x2712) (= (x2755 x68) x1495) (= x1896 (x2475 x1504)) (= (x2755 x829) x68) (= (x2475 x1504) x1774) (= x156 (ite (= 0 x749) x1497 (ite (<= x749 32) x1848 (ite (>= 64 x749) x358 (ite (>= 96 x749) x2491 (ite (<= x749 128) x653 (ite (<= x749 160) x840 (ite (<= x749 192) x157 (ite (<= x749 224) x1663 x1559))))))))) (= (x2475 x1504) x1240) (= (x484 (+ 128 x1504)) x1503) (= x3080 (x2475 x1048)) (= (x2475 x1204) x2701) (= x374 (x2475 x2752)) (= x1859 (x2475 x1504)) (= (x2475 x1503) x1436) (= (x484 (+ x1504 160)) x1374) (= x1145 (x2475 x2433)) (= x2885 (x484 (+ x1504 128))) (= (x484 (+ x1504 64)) x3141) (= x3110 (x484 (+ x1504 160))) (= (x2475 x125) x757) (= (x2475 x124) x1537) (= (x484 (+ 32 x1504)) x1572) (= (x484 (+ 64 x1504)) x2083) (= x2220 (x2475 x3110)) (= x125 (x484 (+ x1504 96))) (= x2027 (x2475 x649)) (= x403 (x484 (+ x1504 32))) (= x124 (x484 (+ x1504 32))) (= x2286 (x2475 x2082)) (= (x484 (+ x1504 64)) x1381) (= x2916 (x2475 x304)) (= (x2475 x1374) x1553) (= (x1884 x749 x1240 x776 x724 x2027) x653) (= x157 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553)) (= x235 (x2475 x1517)) (= x840 (x331 x749 x823 x1537 x2701 x757 x1436))) (and (=> (= x2587 x3131) x1176) x3172)))) x1737))
(assert (x563 x2533))
(assert (x563 x553))
(assert (= x1756 (x2572 (x242 x1756 x347 x2484 x2091))))
(assert (x563 x2040))
(assert (x563 x845))
(assert (= (x119 (x331 x2711 x1177 x1274 x767 x3057 x1224)) x767))
(assert (< 10000 (x1884 x792 x346 x1657 x2734 x2954)))
(assert (x563 x2032))
(assert (x563 x339))
(assert (= (and (not x2459) x2718) x2452))
(assert (= (x2572 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)) x1874))
(assert (x563 x3082))
(assert (x563 x2482))
(assert (= x2092 (x119 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395))))
(assert (= x1225 (x119 (x1884 x1609 x2457 x1782 x1225 x2073))))
(assert (= x707 (x181 (x489 x1273 x1062 x707))))
(assert (= (x2609 (x489 x1756 x212 x2469)) x212))
(assert (=> (>= 10000 x2662) (= (x2768 x2662) 0)))
(assert (x563 x1404))
(assert (x563 x2663))
(assert (= x2467 (and x605 (not x2159))))
(assert (not (x1194 (x1884 x2798 x3004 x2178 x262 x601))))
(assert (= x3068 (x181 (x242 x2798 x2239 x3068 x1303))))
(assert (x824 x474))
(assert (x563 x1756))
(assert (x563 x2800))
(assert (x563 x78))
(assert (x563 x1337))
(assert (< 10000 (x331 x792 x2344 x1751 x1444 x1301 x1161)))
(assert (x563 x1745))
(assert (x563 x915))
(assert (< 10000 (x242 x514 x2761 x401 x831)))
(assert (< (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x933))
(assert (=> (<= x2234 10000) (= 0 (x2768 x2234))))
(assert (x563 x533))
(assert (= x2997 (or (and x1021 x1475) x2287)))
(assert (= (x181 (x1884 x593 x1880 x3017 x1393 x2291)) x3017))
(assert (= (x2051 (x331 x1795 x1328 x164 x974 x553 x3178)) x553))
(assert (< 10000 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926)))
(assert (x563 x1720))
(assert (= (x2768 (x331 x1795 x1328 x164 x974 x553 x3178)) (x331 x1795 x1328 x164 x974 x553 x3178)))
(assert (x563 x1875))
(assert (x1965 x677))
(assert (x563 x1707))
(assert (x563 x2325))
(assert (=> (<= x1145 10000) (= (x2768 x1145) 0)))
(assert (= (x2572 (x1884 x1584 x2398 x2841 x2461 x914)) x1584))
(assert (= (x242 x2798 x2239 x3068 x1303) (x2768 (x242 x2798 x2239 x3068 x1303))))
(assert (x563 x1481))
(assert (x563 x1152))
(assert (x563 x1162))
(assert (x563 x1490))
(assert (x563 x1514))
(assert (x1965 x1276))
(assert (x563 x1733))
(assert (= x1241 (x2609 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365))))
(assert (x563 x1059))
(assert (= (and x18 x2201) x1501))
(assert (x563 x442))
(assert (= (x119 (x242 x792 x2440 x1189 x2666)) x2666))
(assert (x563 x476))
(assert (x563 x1886))
(assert (x1194 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (= (and x247 (not x1392)) x1506))
(assert (x563 x454))
(assert (= (x181 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365)) x3162))
(assert (x563 x1519))
(assert (= (or x596 x1434) x1617))
(assert (x563 x2555))
(assert (= x2948 (and x475 (not x448))))
(assert (= x217 (x2609 (x331 x1584 x217 x480 x3002 x2881 x1155))))
(assert (x563 x1437))
(assert (= (x2572 (x242 x749 x1092 x1300 x235)) x749))
(assert (x563 x991))
(assert (x563 x140))
(assert (x563 x856))
(assert (x563 x3104))
(assert (x563 x323))
(assert (x563 x363))
(assert (= x1484 (and x1392 x247)))
(assert (x648 x998))
(assert (= (x1884 x1874 x591 x3185 x2244 x710) (x2768 (x1884 x1874 x591 x3185 x2244 x710))))
(assert (x563 x2736))
(assert (=> (<= x670 10000) (= 0 (x2768 x670))))
(assert (x563 x955))
(assert (x563 x2305))
(assert (=> (<= x1806 10000) (= (x2768 x1806) 0)))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x563 x1460))
(assert (=> (>= 10000 x823) (= 0 (x2768 x823))))
(assert (x564 x1299))
(assert (= (x119 (x1884 x749 x1240 x776 x724 x2027)) x724))
(assert (=> (>= 10000 x2567) (= (x2768 x2567) 0)))
(assert (=> (<= x1528 10000) (= 0 (x2768 x1528))))
(assert (x1194 95932229227554293267862761608555258089024927314852490146714677558661980618752))
(assert (= (=> (and (= x381 (x1200 (- x396 x2256))) (= x1492 (<= x1756 224)) (<= x2256 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1209 (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1122)) (<= x2256 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x396 1) (= x1122 (x484 (+ 31 x1579))) (= x676 (x484 (+ x2256 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2256) (= x2767 (x484 (+ x1579 x383))) (= (x1200 (- x381 32)) x2179) (< x2256 x396) (= x396 (x484 (+ x383 x1209))) (= (x644 x2256) x1756)) (and x1492 (=> (and (= (x644 x2222) x1258) (= x1069 (x644 x705)) (= (x1743 0) x1335) (= (x1884 x1756 x2679 x2483 x1069 x2361) x3096) (= x3127 (x644 x698)) (= (x331 x1756 x2931 x73 x1688 x688 x930) x773) (= x20 (x644 x55)) (= (x2710 x1608) x2219) (= x2931 (x644 x676)) (= (x644 x1277) x837) (= (x644 x676) x1714) (= (x644 x676) x2959) (= (x2710 x135) x1608) (= (not (< 1 x2219)) x1244) (= (x644 x981) x688) (= x981 (x484 (+ 96 x676))) (= x2222 (x484 (+ x676 64))) (= (x489 x1756 x212 x2469) x1734) (= x422 (x484 (+ 64 x676))) (= (x644 x88) x1267) (= x2679 (x644 x676)) (= x2803 (x644 x722)) (= x2085 (x484 (+ 64 x676))) (= x698 (x484 (+ 192 x676))) (= (x484 (+ 32 x722)) x61) (= x619 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315)) (= x212 (x644 x676)) (= (x484 (+ 96 x676)) x2441) (= x1449 (x484 (+ x676 96))) (= (x644 x1620) x2315) (= (x644 x676) x347) (= x705 (x484 (+ 64 x676))) (= (x242 x1756 x347 x2484 x2091) x1398) (= x2361 (x644 x2441)) (= (x644 x2069) x2484) (= x1343 (x484 (+ 32 x676))) (= (x644 x2085) x2091) (= x407 (x484 (+ 32 x676))) (= x1086 (x644 x676)) (= x1148 (x484 (+ x676 128))) (= (x644 x727) x2469) (= x2800 (x644 x2255)) (= x727 (x484 (+ 32 x676))) (= (x644 x422) x1688) (= (x644 x1148) x930) (= (x484 (+ 64 x676)) x2030) (<= 1 x2803) (= (x644 x407) x2483) (= (ite (= x1756 0) x1335 (ite (>= 32 x1756) x3152 (ite (>= 64 x1756) x1734 (ite (<= x1756 96) x1398 (ite (>= 128 x1756) x3096 (ite (<= x1756 160) x773 (ite (>= 192 x1756) x619 (ite (<= x1756 224) x1384 x2811)))))))) x2115) (= x1277 (x484 (+ x676 32))) (= x1620 (x484 (+ 160 x676))) (= x55 (x484 (+ x676 128))) (= x937 (x484 (+ 32 x676))) (= (x644 x1343) x1028) (= x73 (x644 x937)) (= x303 (x644 x2030)) (= x344 (x484 (+ 128 x676))) (= (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127) x1384) (= (x484 (+ 32 x676)) x2069) (= (x1260 x1756 x2959) x3152) (= x88 (x484 (+ 160 x676))) (= x36 (x644 x1449)) (= x2255 (x484 (+ 96 x676))) (= x1598 (x644 x344))) (and x1244 (=> (and (= x135 x3066) (= x396 x2865)) x1973))))) x1599))
(assert (< (x1260 x1756 x2959) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x1452))
(assert (x564 x2455))
(assert (x542 x1299 1461501637330902918203684832716283019655932542976))
(assert (= (and x2643 (not x325)) x1433))
(assert (=> (<= x425 10000) (= (x2768 x425) 0)))
(assert (x563 x1627))
(assert (x563 x36))
(assert (=> (<= x38 10000) (= (x2768 x38) 0)))
(assert (x563 x2998))
(assert (x563 x403))
(assert (= x1795 (x2572 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236))))
(assert (x563 x1343))
(assert (= x3144 (=> (and (and (= (x734 (* x2936 32)) x264) (>= 5 x1761) (= x1064 (x484 (+ x158 x589))) (>= x2190 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2936) (= x1238 (x484 (+ x1707 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2157) (= x1761 (x2226 x1540)) (<= 1 x2041) (not (= x2157 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (< x2936 x2190) (= (x2226 x158) x2190) (= (x2226 x1238) x2936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2157) (= x2062 (< 0 x854)) (= 1 x1956) (> x1910 x2157) (= x418 (x2226 x2192)) (= x1540 (x2226 x1064)) (= (x484 (+ 32 x264)) x589) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2157)) (= (x2226 x2581) x1707) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2157)) (= (x2226 x2157) x1956) (<= x2157 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x854 (ite (= 2 x1761) 1 0)) (= (x484 (+ 32 x2157)) x1910) (>= x418 1)) (or (and (not x2062) (and (= 3 x1948) (= (x2226 x1540) x1948) (= 1 x634))) (and x2062 (= x854 1)))) x1840)))
(assert (x563 x1104))
(assert (= x1833 (=> (and (and (= x1 (x2601 1461501637330902918203684832716283019655932542975 x1026)) (= 30450320296159908085414496432607297912280636920234228256796789313041262968832 x453) (>= x2001 32) (= x2715 (x484 (+ x198 4))) (= x1232 (< 0 x1348)) (= (x484 (+ x2715 32)) x1945) (<= x2001 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= 30450320296159908085414496432607297912280636920234228256796789313041262968832 x570)) (or (and (= x1348 x2450) (not x1232)) (and (and (>= 4294967295 x2001) (= 1 x2450) (>= x2001 32)) x1232))) x1633)))
(assert (= x3160 (x2609 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150))))
(assert (=> (>= 10000 x1602) (= 0 (x2768 x1602))))
(assert (= (x2247 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315)) x1598))
(assert (= (x1668 x1273 x3143 x66 x3142 x3032 x496 x180) (x2768 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180))))
(assert (= x1193 (x181 (x489 x1609 x1458 x1193))))
(assert (x563 x141))
(assert (x406 160 x933))
(assert (= x1575 (and x265 x2432)))
(assert (x563 x3183))
(assert (x563 x2000))
(assert (=> (>= 10000 x978) (= 0 (x2768 x978))))
(assert (= x2507 (x181 (x489 x2658 x2293 x2507))))
(assert (= (=> (and (and (= x2706 (x2601 1461501637330902918203684832716283019655932542975 x3168)) (= (x1830 x1160) x2270) (= (x3031 256) x3168) (= x1191 (x484 (+ x2949 32))) (<= x2010 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x2949 (x484 (+ x2043 32))) (<= x911 2) (= (x484 (+ x135 32)) x3166) (<= x2010 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x722 (x484 (+ (mod (+ x8 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2076))) (= x1163 (x2105 x2604)) (= x2604 (x484 (+ x2010 32))) (= x1765 (x2601 1461501637330902918203684832716283019655932542975 x2673)) (= (x298 x379) x2518) (= x495 (x934 x2204)) (= x127 (x484 (+ x715 x495))) (= (x170 192) x1117) (= (x3085 x2078) x2673) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639646 x2010) (>= x2010 115792089237316195423570985008687907853269984665640564039457584007913129639649)) (= (x1221 160) x1766) (= x911 (x170 x1117)) (<= 2 x722) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x715 x495))) (> x722 x2076) (= (x484 (+ x2177 64)) x1160) (= (= x2994 0) x2225) (= x1308 (x484 (+ x2509 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2010) (= x2509 (x484 (+ x1191 32))) (= x1704 (x2601 1461501637330902918203684832716283019655932542975 x869)) (= x2177 (x1830 192)) (> x2076 x2010) (= x1408 (x934 192)) (= (x484 (+ 32 x3166)) x2043) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639649 x2010) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639646 x2010)) (= x135 (x484 (+ 32 x2604))) (>= 18446744073709551615 x2994) (= (x1221 x1766) x869) (= (x2105 x1163) x2994) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639649 x2010) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639646 x2010)) (= (* 32 x2994) x8) (= x2204 (x484 (+ 32 x1408))) (= x2076 (x484 (+ x2010 288)))) (or x2225 (and (not x2225) (and (= (x484 (+ 32 x2076)) x1294) (= x83 (* x2994 32)))))) x1181) x939))
(assert (x563 x747))
(assert (x563 x649))
(assert (x563 x2679))
(assert (= (x1884 x1609 x2457 x1782 x1225 x2073) (x2768 (x1884 x1609 x2457 x1782 x1225 x2073))))
(assert (x563 x392))
(assert (x542 x501 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x1993 10000) (= (x2768 x1993) 0)))
(assert (x563 x472))
(assert (= (x2572 (x242 x1874 x980 x1271 x891)) x1874))
(assert (x564 x1298))
(assert (= (x2247 (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835)) x1805))
(assert (x1195 x654))
(assert (= (x2051 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253)) x2546))
(assert (x563 x910))
(assert (x563 x3051))
(assert (= x1211 (and x1093 x1790)))
(assert (> (x242 x1273 x2284 x2858 x1366) 10000))
(assert (x563 x1408))
(assert (x563 x577))
(assert (x648 x2006))
(assert (= (x119 (x331 x1795 x1328 x164 x974 x553 x3178)) x974))
(assert (=> (<= x2783 10000) (= 0 (x2768 x2783))))
(assert (= (x2572 (x242 x1609 x2023 x1173 x2783)) x1609))
(assert (x648 x1275))
(assert (x563 x1968))
(assert (= x1798 (x2609 (x242 x593 x1798 x2273 x2650))))
(assert (x563 x1919))
(assert (x563 x2021))
(assert (> (x489 x1273 x1062 x707) 10000))
(assert (x563 x477))
(assert (=> (>= 10000 x2525) (= (x2768 x2525) 0)))
(assert (x563 x1072))
(assert (x563 x1358))
(assert (x563 x511))
(assert (x563 x1636))
(assert (x563 x2907))
(assert (x563 x1474))
(assert (x563 x407))
(assert (x563 x2549))
(assert (not (x1194 (x1884 x1380 x2567 x150 x2529 x923))))
(assert (x563 x2699))
(assert (= (and (not x103) x3115) x2510))
(assert (x563 x2960))
(assert (x563 x735))
(assert (< (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x1123))
(assert (= (and x1052 x671) x1986))
(assert (=> (<= x302 10000) (= 0 (x2768 x302))))
(assert (x563 x1242))
(assert (= x1532 (and x2208 x1687)))
(assert (=> (>= 10000 x2293) (= 0 (x2768 x2293))))
(assert (x1194 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (x563 x1637))
(assert (x563 x1193))
(assert (x563 x2680))
(assert (x563 x67))
(assert (= 0 (x2768 37664329658542632380461339884011895550187483938955784695590509376205521682432)))
(assert (=> (<= x1758 10000) (= 0 (x2768 x1758))))
(assert (x563 x1166))
(assert (x563 x3002))
(assert (= (x2247 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017)) x2266))
(assert (= (or x651 x1647) x1270))
(assert (=> (>= 10000 x2107) (= (x2768 x2107) 0)))
(assert (x563 x753))
(assert (x563 x1445))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1884 x2711 x1758 x447 x935 x255)))
(assert (= x1991 (x2247 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096))))
(assert (= (x119 (x1884 x792 x346 x1657 x2734 x2954)) x2734))
(assert (= (x181 (x242 x1584 x1100 x2912 x1744)) x2912))
(assert (x563 x2428))
(assert (=> (<= x2365 10000) (= 0 (x2768 x2365))))
(assert (x563 x1084))
(assert (=> (<= x2023 10000) (= (x2768 x2023) 0)))
(assert (=> (<= x1096 10000) (= (x2768 x1096) 0)))
(assert (x542 x2586 1461501637330902918203684832716283019655932542976))
(assert (x563 x941))
(assert (x563 x1623))
(assert (x563 x3116))
(assert (x563 x2469))
(assert (= (x2051 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575)) x3051))
(assert (x563 x677))
(assert (x563 x1928))
(assert (x406 32 x2218))
(assert (x563 x2123))
(assert (< 10000 (x1260 x2711 x1886)))
(assert (x563 x1400))
(assert (=> (>= 10000 x1119) (= 0 (x2768 x1119))))
(assert (< (x331 x593 x1807 x1322 x1981 x90 x178) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1880 (x2609 (x1884 x593 x1880 x3017 x1393 x2291))))
(assert (x542 x1508 1461501637330902918203684832716283019655932542976))
(assert (x563 x371))
(assert (x563 x3171))
(assert (x563 x2733))
(assert (x563 x1556))
(assert (x563 x2771))
(assert (x563 x2044))
(assert (x563 x324))
(assert (x1965 x2187))
(assert (x563 x2761))
(assert (=> (>= 10000 x1086) (= (x2768 x1086) 0)))
(assert (x563 x974))
(assert (x563 x745))
(assert (=> (<= x549 10000) (= (x2768 x549) 0)))
(assert (= x2688 (x181 (x331 x2798 x1390 x2688 x149 x2703 x825))))
(assert (=> (<= x2789 10000) (= (x2768 x2789) 0)))
(assert (x563 x2742))
(assert (x563 x3132))
(assert (=> (<= x1522 10000) (= (x2768 x1522) 0)))
(assert (x1194 18446744073709551167))
(assert (=> (>= 10000 x318) (= 0 (x2768 x318))))
(assert (x563 x2457))
(assert (=> (<= x3091 10000) (= 0 (x2768 x3091))))
(assert (< 10000 (x331 x1756 x2931 x73 x1688 x688 x930)))
(assert (=> (>= 10000 x1691) (= 0 (x2768 x1691))))
(assert (x563 x2759))
(assert (x563 x3077))
(assert (x563 x2908))
(assert (x563 x111))
(assert (not (x1194 (x242 x2658 x2982 x246 x632))))
(assert (x563 x2916))
(assert (x542 x3175 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x2630 10000) (= (x2768 x2630) 0)))
(assert (= (x331 x1380 x2868 x636 x1281 x279 x2383) (x2768 (x331 x1380 x2868 x636 x1281 x279 x2383))))
(assert (x563 x128))
(assert (> (x331 x2798 x1390 x2688 x149 x2703 x825) 10000))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (x563 x1625))
(assert (x563 x3013))
(assert (x563 x2783))
(assert (x563 x2500))
(assert (= x1273 (x2572 (x1884 x1273 x1166 x2789 x3155 x2758))))
(assert (=> (<= x982 10000) (= 0 (x2768 x982))))
(assert (x563 x2676))
(assert (< (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1965 x839))
(assert (x563 x622))
(assert (=> (<= x1253 10000) (= (x2768 x1253) 0)))
(assert (x563 x1705))
(assert (x563 x2359))
(assert (x563 x1995))
(assert (x1195 x2586))
(assert (=> (>= 10000 x268) (= 0 (x2768 x268))))
(assert (x563 x665))
(assert (= 1 (x181 (x489 64 x167 1))))
(assert (x1194 88383320980755791914082775550597828907713979028428263264130000526486271950848))
(assert (x563 x627))
(assert (= (x2768 (x242 x1273 x2284 x2858 x1366)) (x242 x1273 x2284 x2858 x1366)))
(assert (x1195 x631))
(assert (not (x1194 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150))))
(assert (x563 x1648))
(assert (=> (<= x1936 10000) (= 0 (x2768 x1936))))
(assert (= (x119 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553)) x1125))
(assert (= x837 (x181 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315))))
(assert (x563 x1856))
(assert (> (x242 x1380 x1013 x878 x1947) 10000))
(assert (=> (<= x132 10000) (= 0 (x2768 x132))))
(assert (= x1810 (and x2011 x1063)))
(assert (x564 x2673))
(assert (x563 x2968))
(assert (= x868 (x2609 (x1260 x1609 x868))))
(assert (x563 x441))
(assert (x563 x878))
(assert (x563 x2891))
(assert (x406 32 x2548))
(assert (x563 x1976))
(assert (=> (<= x2688 10000) (= (x2768 x2688) 0)))
(assert (=> (>= 10000 x1225) (= 0 (x2768 x1225))))
(assert (x563 x1429))
(assert (= x322 (and (not x254) x1367)))
(assert (x542 x1550 1461501637330902918203684832716283019655932542976))
(assert (= (=> (and (= x743 (< 0 x3181)) (= (x329 x2733) x2358) (= (x329 x2358) x3181)) (and (=> (and (= x2385 x384) (not x743)) x787) (=> (and x743 (and (= (x329 x913) x1893) (= (x1033 x2981) x2217) (= (x484 (+ x1709 32)) x2547) (= (x484 (+ x2981 32)) x871) (>= x2929 1) (= x2495 (x484 (+ x233 32))) (= (x329 x450) x2929) (= (x484 (+ 32 x450)) x1586) (= (x484 (+ 32 x2849)) x1351) (= (x329 x1586) x661) (= (x484 (+ x2385 32)) x2849) (= (x484 (+ 32 x1351)) x1709) (= x233 (x484 (+ x2849 128))) (= x2991 (x2601 1461501637330902918203684832716283019655932542975 x654)) (= (x329 x2733) x450) (= (x329 x661) x654) (= (x329 x2297) x2981) (= (x484 (+ x661 32)) x913) (= (< 0 x2217) x1860) (= x2297 (x484 (+ x913 32))))) (and (=> (and (and (= (> x2217 32) x79) (= x2356 (x2446 x871))) x1860) (and (=> (and x79 (and (= x2399 (x484 (+ x2495 32))) (= x286 (> x2217 64)) (= x294 (x689 x2482)) (= x2482 (x484 (+ x871 32))))) (and (=> (not x286) x319) (=> (and x286 (and (= x325 (< 96 x2217)) (= x2136 (x484 (+ x2495 64))) (= (x28 x1470) x887) (= x1470 (x484 (+ x871 64))))) (and (=> x325 x2831) (=> (not x325) x319))))) (=> (not x79) x319))) (=> (not x1860) x319))))) x1485))
(assert (x563 x1190))
(assert (x1195 x1037))
(assert (x563 x1577))
(assert (= x1806 (x2051 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150))))
(assert (x563 x230))
(assert (x1194 111117225372770300986259473995147604481826136133417213952520719377678811004928))
(assert (= (and x1142 x1211) x1621))
(assert (x563 x89))
(assert (x563 x2260))
(assert (x563 x2966))
(assert (= x2896 (x811 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150))))
(assert (= (x2051 (x331 x1609 x646 x195 x537 x535 x1528)) x535))
(assert (= (x2768 (x242 x1874 x980 x1271 x891)) (x242 x1874 x980 x1271 x891)))
(assert (x563 x1838))
(assert (not (x1194 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614))))
(assert (= 0 (x2768 57896044618658097711785492504343953926634992332820282019728792003956564820068)))
(assert (< (x489 x1584 x324 x968) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x829))
(assert (= (x2768 (x489 x1273 x1062 x707)) (x489 x1273 x1062 x707)))
(assert (x563 x3137))
(assert (= x853 (and x867 (not x2848))))
(assert (= (x2609 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315)) x1086))
(assert (x1195 x2455))
(assert (= (x119 (x1884 x1380 x2567 x150 x2529 x923)) x2529))
(assert (x563 x2132))
(assert (not (x1194 (x242 x1380 x1013 x878 x1947))))
(assert (=> (>= 10000 x404) (= 0 (x2768 x404))))
(assert (=> (>= 10000 x1234) (= 0 (x2768 x1234))))
(assert (not (x1194 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794))))
(assert (x563 x1253))
(assert (x563 x2775))
(assert (x563 x975))
(assert (= (=> (and (= (x2226 x257) x2749) (= (x484 (+ 32 x1540)) x1928) (<= 1 x2061) (= (x484 (+ 32 x257)) x3006) (= (x2601 1461501637330902918203684832716283019655932542975 x334) x2549) (= x2957 (x484 (+ x317 32))) (= x2851 (x484 (+ 32 x2571))) (= x317 (x484 (+ x2401 160))) (= (x484 (+ 32 x338)) x2400) (= x2049 (x484 (+ 32 x2401))) (= x2659 (x484 (+ x3095 64))) (= x257 (x484 (+ 32 x1928))) (= (x398 x2571) x574) (= x2267 (x2601 1461501637330902918203684832716283019655932542975 x1184)) (= (x2226 x3006) x1577) (= x338 (x484 (+ 32 x2049))) (= (x2226 x2659) x2571) (= (x2601 1461501637330902918203684832716283019655932542975 x1405) x3012) (= (< 0 x574) x548) (= 1 x2132) (= (x2226 x1928) x334) (= x2061 (x2226 x2192)) (= x2066 (x484 (+ x2400 32))) (= (x484 (+ 4 x1910)) x2401) (= x3095 (x2226 x2581))) (and (=> (and x548 (and (= (> x574 32) x561) (= (x65 x2851) x2512))) (and (=> (not x561) x1428) (=> (and (and (= x2867 (x484 (+ 32 x2851))) (= (< 64 x574) x3023) (= x94 (x2468 x2867)) (= x348 (x484 (+ 32 x2957)))) x561) (and (=> (not x3023) x1428) (=> (and (and (= x1648 (x484 (+ 64 x2957))) (= (x1931 x1090) x1024) (= x1090 (x484 (+ x2851 64))) (= x223 (< 96 x574))) x3023) (and (=> x223 x3060) (=> (not x223) x1428))))))) (=> (not x548) x1428))) x1840))
(assert (=> (>= 10000 x551) (= 0 (x2768 x551))))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x563 x3036))
(assert (= x896 (=> (and (= x2751 (x484 (+ x1128 x2080))) (= x2901 (x484 (+ 1 x241))) (= x1843 (x734 (* 64 x2901))) (not (= x2751 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x859 (x484 (+ 32 x2751))) (= (x484 (+ 32 x859)) x382) (= (x484 (+ x3062 64)) x434) (= x241 (x1892 x2080)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1652) (= (x484 (+ x2036 32)) x2080) (<= x1652 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1128 (x1200 (- x1843 32))) (= x3062 (x1892 x2036)) (< x1652 x382) (= x382 x3109) (<= x1652 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x2696)))
(assert (=> (>= 10000 x2724) (= (x2768 x2724) 0)))
(assert (< (x1884 x593 x1880 x3017 x1393 x2291) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x2883))
(assert (= x1285 (x2609 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395))))
(assert (x563 x2478))
(assert (= x1199 (and x2463 x1998)))
(assert (= x670 (x119 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236))))
(assert (x563 x2363))
(assert (x563 x294))
(assert (=> (>= 10000 x923) (= (x2768 x923) 0)))
(assert (=> (>= 10000 x1807) (= (x2768 x1807) 0)))
(assert (x563 x3161))
(assert (x563 x208))
(assert (x563 x235))
(assert (= (x119 (x242 x2711 x3024 x1115 x404)) x404))
(assert (= x195 (x181 (x331 x1609 x646 x195 x537 x535 x1528))))
(assert (x563 x1560))
(assert (x563 x721))
(assert (x563 x2043))
(assert (x563 x1076))
(assert (x563 x2751))
(assert (=> (>= 10000 x3127) (= 0 (x2768 x3127))))
(assert (x648 x3165))
(assert (= (and (not x1061) x2117) x1790))
(assert (x563 x2292))
(assert (x563 x857))
(assert (=> (>= 10000 x3185) (= 0 (x2768 x3185))))
(assert (< (x1260 x1609 x868) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x113))
(assert (= x2135 (x181 (x242 x1795 x746 x2135 x959))))
(assert (= (x2609 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236)) x2562))
(assert (= (=> (and (= x3071 (x484 (+ x1567 x2918))) (= (x1136 x2478) x515) (= (x1200 (- x3071 x1580)) x2290) (= x1567 (x2601 115792089237316195423570985008687907853269984665640564039457584007913129639904 x481)) (= x481 (x484 (+ 31 x1287))) (= (x484 (+ 32 x3071)) x1452) (= (x484 (+ x2478 32)) x949) (= (x484 (+ 32 x1032)) x3018) (= (> x515 0) x1977) (= x2348 (x484 (+ x2918 x1287))) (= (x484 (+ x3018 32)) x2938)) (and (=> x1977 x1985) (=> (and (not x1977) (= x1340 x1452)) x2090))) x1597))
(assert (x563 x2304))
(assert (x563 x2837))
(assert (x542 x869 1461501637330902918203684832716283019655932542976))
(assert (x563 x1124))
(assert (< (x242 x1380 x1013 x878 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2711 (x2572 (x1884 x2711 x1758 x447 x935 x255))))
(assert (=> (<= x2284 10000) (= 0 (x2768 x2284))))
(assert (=> (>= 10000 x69) (= 0 (x2768 x69))))
(assert (not (x1194 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926))))
(assert (= x326 (and (not x671) x1052)))
(assert (= (and x2643 x325) x2910))
(assert (x563 x2620))
(assert (x563 x1511))
(assert (=> (<= x2735 10000) (= 0 (x2768 x2735))))
(assert (x563 x1348))
(assert (x563 x2082))
(assert (x563 x2537))
(assert (x563 x2384))
(assert (=> (<= x2539 10000) (= (x2768 x2539) 0)))
(assert (x563 x870))
(assert (x563 x2492))
(assert (x563 x616))
(assert (x563 x3065))
(assert (x563 x872))
(assert (not (x1194 (x242 x749 x1092 x1300 x235))))
(assert (x563 x2440))
(assert (x563 x1851))
(assert (x563 x1))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150)))
(assert (x563 x2203))
(assert (= x2709 (or x700 x142)))
(assert (x563 x1768))
(assert (= x2209 (and x987 x2990)))
(assert (= x3021 (or x1970 x1778)))
(assert (= x2607 (=> (and (= x1652 (x484 (+ 32 x2095))) (= x1248 (x2601 1461501637330902918203684832716283019655932542975 x476)) (= x1825 (x1106 x153)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639832 x2059)) (= x758 (x1200 (- x345 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2059) (= (x2601 1461501637330902918203684832716283019655932542975 x3075) x1276) (= x3075 (x1106 x2971)) (= x2095 (x484 (+ 20 x3153))) (= x95 (>= 224 x2711)) (= (x1106 x2296) x3087) (= x2882 (x484 (+ 64 x1825))) (= x476 (x1106 x2882)) (= x1670 (* x1248 79228162514264337593543950336)) (not (= x2059 115792089237316195423570985008687907853269984665640564039457584007913129639832)) (= x345 (x1200 (- x1652 x2059))) (= (x484 (+ x2856 20)) x3153) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2059) (< x2059 x1652) (= x2532 (x1106 x863)) (= (x484 (+ x2059 32)) x538) (= x2971 (x1106 160)) (= x2856 (x484 (+ x2059 32))) (>= x2532 1) (= x2711 (x2913 x2059)) (= x2296 (x484 (+ 64 x2882))) (= x96 (* 79228162514264337593543950336 x1276)) (<= x2059 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639832 x2059))) (and (=> (and (and (= (x2913 x1443) x2229) (= x2533 (x484 (+ 64 x538))) (= x1269 (ite (= 0 x2711) x269 (ite (<= x2711 32) x889 (ite (>= 64 x2711) x554 (ite (<= x2711 96) x50 (ite (>= 128 x2711) x1174 (ite (>= 160 x2711) x1330 (ite (<= x2711 192) x2253 (ite (>= 224 x2711) x2196 x1656))))))))) (= x1190 (x484 (+ 128 x538))) (= (x331 x2711 x1177 x1274 x767 x3057 x1224) x1330) (= x1182 (x484 (+ x538 96))) (= (x1668 x2711 x82 x2 x1785 x409 x2266 x2017) x2253) (= x269 (x1743 0)) (= (x2913 x216) x3091) (= x1362 (x484 (+ x538 32))) (= (x2913 x2036) x1078) (= x1067 (x484 (+ x538 96))) (= (x484 (+ 32 x538)) x1264) (= (x2913 x552) x630) (= (x2913 x796) x404) (= x409 (x2913 x1067)) (= x604 (x2913 x1143)) (= x1177 (x2913 x538)) (= (x484 (+ 64 x538)) x435) (= x2837 (x484 (+ 160 x538))) (= x3024 (x2913 x538)) (= (x2913 x2016) x1274) (= x50 (x242 x2711 x3024 x1115 x404)) (= x1143 (x484 (+ x538 32))) (= (x484 (+ x538 32)) x2492) (= x1224 (x2913 x1190)) (= x2 (x2913 x2492)) (= (x484 (+ x538 64)) x936) (= x255 (x2913 x490)) (= x48 (x484 (+ x538 64))) (= x935 (x2913 x48)) (= x1758 (x2913 x538)) (= x1344 (x484 (+ x538 160))) (= (x2913 x1816) x2266) (= x447 (x2913 x1264)) (= (= x1078 0) x2479) (= (x2913 x1733) x1919) (= (x2913 x863) x3146) (= (x2913 x1344) x2017) (= x1785 (x2913 x2533)) (= x196 (x2913 x538)) (= (x484 (+ 32 x538)) x3040) (= x2133 (x2913 x3040)) (= (x2913 x936) x1522) (= x216 (x484 (+ 96 x538))) (= x1886 (x2913 x538)) (= (x2913 x538) x2539) (= (x484 (+ 32 x538)) x2016) (= x2014 (x2913 x153)) (= (x489 x2711 x196 x2133) x554) (= (x2913 x435) x767) (= x2196 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630)) (= (x484 (+ x538 192)) x552) (= (x484 (+ 128 x538)) x1816) (= x796 (x484 (+ x538 64))) (= x1115 (x2913 x1362)) (<= 1 x3146) (= x1443 (x484 (+ 128 x538))) (= x1733 (x484 (+ 96 x2014))) (= x490 (x484 (+ x538 96))) (= (x2913 x2837) x2993) (= (x2913 x1182) x3057) (= x889 (x1260 x2711 x1886)) (= (x1884 x2711 x1758 x447 x935 x255) x1174) (= (x2913 x538) x82)) (or (and (= x3030 (x484 (+ x2036 32))) x2479) (not x2479))) x896) x95))))
(assert (= x3024 (x2609 (x242 x2711 x3024 x1115 x404))))
(assert (= (x1668 x593 x978 x1787 x2437 x2694 x2992 x425) (x2768 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425))))
(assert (x563 x1724))
(assert (x960 x481))
(assert (x563 x1377))
(assert (= (x2572 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650)) x1380))
(assert (= (x181 (x489 x1584 x324 x968)) x968))
(assert (x563 x994))
(assert (=> (<= x1062 10000) (= (x2768 x1062) 0)))
(assert (= (x2572 (x489 x1874 x3191 x1010)) x1874))
(assert (= (x181 (x1884 x2798 x3004 x2178 x262 x601)) x2178))
(assert (> (x1260 x1795 x1218) 10000))
(assert (= (x119 (x1884 x2798 x3004 x2178 x262 x601)) x262))
(assert (not (x1194 (x489 x1273 x1062 x707))))
(assert (x563 x1602))
(assert (x563 x923))
(assert (x563 x2949))
(assert (x563 x2186))
(assert (=> (>= 10000 x837) (= 0 (x2768 x837))))
(assert (x563 x147))
(assert (x563 x1213))
(assert (x563 x2595))
(assert (x563 x3189))
(assert (= (x811 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365)) x1929))
(assert (x542 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x1880))
(assert (= x3061 (x2247 (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150))))
(assert (x563 x2892))
(assert (= (x331 x593 x1807 x1322 x1981 x90 x178) (x2768 (x331 x593 x1807 x1322 x1981 x90 x178))))
(assert (x563 x2187))
(assert (= x2721 (=> (and (= (x421 x665) x915) (= (x421 192) x291) (= (x484 (+ 64 x291)) x665) (= x26 (x421 x915)) (= (> x26 0) x103)) (and (=> (and (and (= x130 (x484 (+ 32 x1519))) (not (= x1519 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= (x24 x2192) x912) (= x2192 (x421 x886)) (= x2809 (> x912 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1519) (= (x421 x1247) x1184) (= x3137 (x421 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1519) (= x886 (x484 (+ x3137 64))) (= (x421 160) x1247) (= x2157 (x484 (+ x1519 128))) (= x2456 (x484 (+ x562 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1519) (= x562 (x484 (+ x130 32))) (> x2157 x1519) (= x158 (x421 x1530)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1519)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1519))) x103) (and (=> (and x2809 (and (and (<= x353 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (> x571 0) x2990) (= (x2601 1461501637330902918203684832716283019655932542975 x1405) x1338) (= (x484 (+ x2157 4)) x1950) (= x285 (x24 x2192)) (= x1405 (x24 x414)) (= (x24 x2581) x414) (>= x353 32) (>= x285 1) (= (x484 (+ 32 x2192)) x2581)) (or (and (and (= 1 x2041) (>= 4294967295 x353) (>= x353 32)) x2990) (and (= x2041 x571) (not x2990))))) x3144) (=> (and (not x2809) (= x2157 x1658)) x1004))) (=> (and (= x1519 x1580) (not x103)) x1895)))))
(assert (= (x2609 (x242 x1874 x980 x1271 x891)) x980))
(assert (x563 x3109))
(assert (> (x704 x1273 x318 x997 x302 x132 x1805 x2552 x835) 10000))
(assert (= (=> (and (and (and (= x167 x323) (= x1245 false)) (and (>= 127 x368) (= false x1568) (= (x136 x321) x2307) (<= 1 x2307) (= (= x1207 x1660) x1642) (= false x1111) (= x1207 (+ x1196 x612)) (= x498 x1660) (= x69 x1837) (= x806 false) (= (x489 64 x167 1) x3112) (= x3133 1889567281) (>= 127 x368) (>= 4294967295 x3145) (= x1612 x2915) (= false x1382) (<= 128 x3145) (= x498 (x355 x3112)) (= 0 x3011) (= false x584) (= x2790 false) (= x3101 x2363) (= x3101 x612) (= x2363 (x657 96)) (= x2915 (x2486 x321)) (= (x1922 x69) x1511))) (and (= x1695 false) (= x2909 false) (= x2538 36) (= false x1908) (= false x300))) x1642) x2770))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180)))
(assert (=> (>= 10000 x2850) (= 0 (x2768 x2850))))
(assert (x406 32 x2746))
(assert (= (and (not x2575) x2197) x1539))
(assert (x563 x1692))
(assert (x1194 2065879269444))
(assert (x563 x952))
(assert (=> (>= 10000 x2094) (= 0 (x2768 x2094))))
(assert (x563 x1593))
(assert (x563 x503))
(assert (x563 x1326))
(assert (x563 x2385))
(assert (x563 x153))
(assert (not (x1194 (x242 x1273 x2284 x2858 x1366))))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x792 (x2572 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096))))
(assert (= (x2768 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553)) (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553)))
(assert (x563 x2748))
(assert (x563 x1957))
(assert (x563 x2393))
(assert (< 10000 (x489 x1609 x1458 x1193)))
(assert (not (x1194 (x1260 x2658 x556))))
(assert (=> (>= 10000 x402) (= 0 (x2768 x402))))
(assert (= x749 (x2572 (x331 x749 x823 x1537 x2701 x757 x1436))))
(assert (x563 x1381))
(assert (x542 x1037 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1859) (= (x2768 x1859) 0)))
(assert (=> (<= x1328 10000) (= (x2768 x1328) 0)))
(assert (x563 x318))
(assert (=> (>= 10000 x3143) (= 0 (x2768 x3143))))
(assert (x563 x2190))
(assert (=> (>= 10000 x1100) (= 0 (x2768 x1100))))
(assert (x563 x1537))
(assert (=> (>= 10000 x3189) (= 0 (x2768 x3189))))
(assert (=> (<= x82 10000) (= 0 (x2768 x82))))
(assert (x563 x2996))
(assert (= x3002 (x119 (x331 x1584 x217 x480 x3002 x2881 x1155))))
(assert (= x1096 (x811 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096))))
(assert (=> (<= x144 10000) (= (x2768 x144) 0)))
(assert (x563 x2343))
(assert (x563 x2788))
(assert (= (and (not x2942) x3010) x1917))
(assert (x1965 x2746))
(assert (not (x1194 (x331 x2711 x1177 x1274 x767 x3057 x1224))))
(assert (= x449 (x2051 (x1884 x2658 x1938 x2044 x1858 x449))))
(assert (> (x1260 x1273 x42) 10000))
(assert (=> (<= x1559 10000) (= 0 (x2768 x1559))))
(assert (x563 x2350))
(assert (x542 x1037 32))
(assert (x563 x966))
(assert (= x167 (x2609 (x489 64 x167 1))))
(assert (x563 x3107))
(assert (x563 x2805))
(assert (=> (<= x20 10000) (= (x2768 x20) 0)))
(assert (=> (<= x299 10000) (= 0 (x2768 x299))))
(assert (x563 x158))
(assert (x648 x654))
(assert (=> (>= 10000 x449) (= 0 (x2768 x449))))
(assert (x563 x1797))
(assert (= x759 (or x1158 x1804)))
(assert (x1195 x2828))
(assert (x563 x2127))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x1874 x1628 x1450 x2418 x2551 x2635)))
(assert (x563 x776))
(assert (= x1444 (x119 (x331 x792 x2344 x1751 x1444 x1301 x1161))))
(assert (x563 x2433))
(assert (= (and x1501 (not x220)) x2610))
(assert (=> (<= x2712 10000) (= 0 (x2768 x2712))))
(assert (x563 x1057))
(assert (= x1633 (=> (and (and (= x585 (* x963 32)) (<= 1 x2377) (> x576 x198) (= (x3125 x723) x963) (= x459 1) (= x2385 (x484 (+ x576 (mod (+ 32 x585) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x198) (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (= (x484 (+ 32 x1777)) x289) (= (= 0 x963) x1725) (>= x2450 1) (> x2385 x576) (= x40 (x3125 x2184)) (= x2377 (x3125 x289)) (= (x484 (+ x198 32)) x576) (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= x2385 2) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x198) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x198)) (<= x963 18446744073709551615) (= (x3125 x198) x459) (or (>= x198 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x198) (= x723 (x3125 x2733)) (= x2733 (x484 (+ 32 x289))) (= x1777 (x3125 192)) (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639933)) (or x1725 (and (not x1725) (and (= x499 (x484 (+ 32 x576))) (= x1304 (* 32 x963)))))) x1485)))
(assert (> (x331 x1795 x1328 x164 x974 x553 x3178) 10000))
(assert (x563 x1361))
(assert (x563 x82))
(assert (x563 x2233))
(assert (x563 x492))
(assert (< 10000 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994)))
(assert (x563 x2632))
(assert (x563 x2985))
(assert (x563 x2541))
(assert (=> (>= 10000 x997) (= 0 (x2768 x997))))
(assert (= (and x2859 x795) x2405))
(assert (=> (>= 10000 x2763) (= (x2768 x2763) 0)))
(assert (x1195 x3075))
(assert (= (x2768 (x489 x792 x356 x208)) (x489 x792 x356 x208)))
(assert (=> (>= 10000 x1218) (= (x2768 x1218) 0)))
(assert (x563 x978))
(assert (x563 x2175))
(assert (= (x2768 1461501637330902918203684832716283019655932542975) 0))
(assert (not (x1194 (x1884 x1756 x2679 x2483 x1069 x2361))))
(assert (x563 x2637))
(assert (x563 x796))
(assert (=> (>= 10000 x1878) (= 0 (x2768 x1878))))
(assert (x1965 x2548))
(assert (x563 x2912))
(assert (= x3048 (x119 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808))))
(assert (x563 x990))
(assert (x563 x434))
(assert (x563 x2357))
(assert (= (x119 (x242 x2798 x2239 x3068 x1303)) x1303))
(assert (= (and x751 (not x2101)) x1476))
(assert (x563 x2402))
(assert (= (or x1703 (and (not x2542) x931)) x462))
(assert (x563 x943))
(assert (x563 x190))
(assert (> (x489 x2711 x196 x2133) 10000))
(assert (= x3060 (=> (and (= x2126 (not (< 128 x574))) (= x2305 (x484 (+ 96 x2851))) (= x1339 (x484 (+ x2957 96))) (= (x652 x2305) x1593)) (and x2126 x1428))))
(assert (x563 x2161))
(assert (x563 x296))
(assert (x563 x2118))
(assert (=> (<= x2398 10000) (= (x2768 x2398) 0)))
(assert (< (x1260 x749 x1774) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x3167))
(assert (= (x2768 (x331 x2798 x1390 x2688 x149 x2703 x825)) (x331 x2798 x1390 x2688 x149 x2703 x825)))
(assert (= (x2051 (x1884 x1756 x2679 x2483 x1069 x2361)) x2361))
(assert (x1195 x1987))
(assert (x563 x1744))
(assert (x563 x2210))
(assert (x563 x2828))
(assert (not (x1194 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315))))
(assert (= (or x5 x1575) x1937))
(assert (= (x1260 x2798 x3189) (x2768 (x1260 x2798 x3189))))
(assert (=> (<= x968 10000) (= (x2768 x968) 0)))
(assert (= (or x1109 x2493) x1112))
(assert (x564 x334))
(assert (= (and x793 x1810) x1314))
(assert (x563 x2674))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (x563 x257))
(assert (x563 x1415))
(assert (x563 x1821))
(assert (< 10000 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614)))
(assert (x563 x2901))
(assert (x563 x313))
(assert (x563 x1302))
(assert (x563 x571))
(assert (=> (>= 10000 x1273) (= (x2768 x1273) 0)))
(assert (=> (<= x3057 10000) (= (x2768 x3057) 0)))
(assert (x563 x1281))
(assert (x563 x1318))
(assert (x563 x1807))
(assert (< 10000 (x489 x2798 x802 x600)))
(assert (x563 x703))
(assert (= (x2768 (x1884 x593 x1880 x3017 x1393 x2291)) (x1884 x593 x1880 x3017 x1393 x2291)))
(assert (x563 x2821))
(assert (not (x1194 (x242 x2798 x2239 x3068 x1303))))
(assert (< (x489 x514 x2058 x527) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1322) (= (x2768 x1322) 0)))
(assert (x563 x1321))
(assert (x542 x1440 32))
(assert (not (x1194 (x242 x792 x2440 x1189 x2666))))
(assert (x563 x2171))
(assert (= (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533) (x2768 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533))))
(assert (=> (>= 10000 x1168) (= (x2768 x1168) 0)))
(assert (= (x2572 (x1884 x1756 x2679 x2483 x1069 x2361)) x1756))
(assert (= (x2051 (x1884 x749 x1240 x776 x724 x2027)) x2027))
(assert (x1194 18446744073709551518))
(assert (x563 x1185))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (x563 x3147))
(assert (=> (<= x279 10000) (= 0 (x2768 x279))))
(assert (= (and x3139 (not x2242)) x161))
(assert (=> (<= x262 10000) (= (x2768 x262) 0)))
(assert (x563 x630))
(assert (x563 x3012))
(assert (x563 x2715))
(assert (= (x2768 (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794)) (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794)))
(assert (x563 x2585))
(assert (= (x2609 (x331 x1756 x2931 x73 x1688 x688 x930)) x2931))
(assert (x563 x1477))
(assert (= x2993 (x811 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630))))
(assert (=> (>= 10000 x3155) (= 0 (x2768 x3155))))
(assert (x1195 x1298))
(assert (not (x1194 (x704 x2711 x2539 x604 x1522 x3091 x2229 x2993 x630))))
(assert (x563 x1890))
(assert (= (and x987 (not x2990)) x1588))
(assert (= x37 (=> (and (= x3165 (x1482 x583)) (= x248 (x484 (+ 32 x761))) (<= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x583 (x484 (+ 32 x2788))) (= x1268 (x1399 x908)) (< x2015 x2282) (= (x1667 x2123) x3123) (= x2282 (x484 (+ 160 x2015))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2015)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2015)) (= x1750 (x484 (+ 32 x248))) (not (= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x484 (+ 32 x1750)) x2321) (= x2973 (x879 x863)) (>= x2973 1) (<= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x617 (x711 x2411)) (<= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x484 (+ 32 x583)) x2123) (= x761 (x484 (+ x2015 32))) (= (x2601 1461501637330902918203684832716283019655932542975 x3165) x1349) (= x1607 (not (> x1268 1))) (= (x484 (+ 32 x863)) x239) (= (x484 (+ x583 64)) x2411)) (and x1607 (=> (= x781 x2282) x352)))))
(assert (=> (>= 10000 x2748) (= (x2768 x2748) 0)))
(assert (= (x2609 (x1668 x749 x1896 x374 x1125 x1845 x2353 x1553)) x1896))
(assert (=> (>= 10000 x1189) (= (x2768 x1189) 0)))
(assert (x563 x2361))
(assert (x563 x1011))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395)))
(assert (x563 x819))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (=> (<= x2017 10000) (= 0 (x2768 x2017))))
(assert (=> (<= x2133 10000) (= 0 (x2768 x2133))))
(assert (x563 x2499))
(assert (x1195 x3164))
(assert (x563 x2256))
(assert (= x1366 (x119 (x242 x1273 x2284 x2858 x1366))))
(assert (x563 x1938))
(assert (= x527 (x181 (x489 x514 x2058 x527))))
(assert (=> (>= 10000 x632) (= 0 (x2768 x632))))
(assert (x563 x2673))
(assert (x563 x732))
(assert (x563 x317))
(assert (x563 x96))
(assert (x563 x49))
(assert (x563 x2206))
(assert (not (x1194 (x489 x2658 x2293 x2507))))
(assert (x406 79228162514264337593543950336 x1276))
(assert (x563 x790))
(assert (x563 x852))
(assert (= x3035 (x2609 (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650))))
(assert (= (x2768 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838)) (x1668 x1584 x1752 x780 x613 x424 x2583 x1838)))
(assert (=> (<= x2073 10000) (= 0 (x2768 x2073))))
(assert (= (x119 (x331 x1273 x1057 x830 x578 x2980 x2662)) x578))
(assert (= (x2768 (x242 x514 x2761 x401 x831)) (x242 x514 x2761 x401 x831)))
(assert (= (x2609 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180)) x3143))
(assert (> (x1668 x2711 x82 x2 x1785 x409 x2266 x2017) 10000))
(assert (= (or x581 x2022) x1099))
(assert (x563 x1612))
(assert (> (x704 x2658 x3160 x813 x3183 x1806 x3061 x2896 x1150) 10000))
(assert (x563 x93))
(assert (x563 x1791))
(assert (x563 x2954))
(assert (= (and x832 (not x1411)) x261))
(assert (x563 x848))
(assert (x563 x132))
(assert (x563 x1113))
(assert (x563 x1168))
(assert (x563 x543))
(assert (= (=> (and (and (= (x2381 x2628) x2506) (<= 1 x1197) (<= x2506 18446744073709551615) (<= x722 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2628 (x2381 x135)) (<= x722 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1197 (x484 (+ x722 (mod (+ 32 x1334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (< x722 x1197) (<= x722 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (= x2506 0) x1877) (= (* 32 x2506) x1334)) (or (and (not x1877) (and (= (* 32 x2506) x1415) (= (x484 (+ 32 x722)) x1692))) x1877)) x2863) x1181))
(assert (x563 x53))
(assert (not (x1194 (x1260 x1609 x868))))
(assert (=> (>= 10000 x2896) (= (x2768 x2896) 0)))
(assert (= x1034 (or x1621 x3173)))
(assert (= x1703 (and x2542 x931)))
(assert (x563 x2563))
(assert (=> (<= x2418 10000) (= 0 (x2768 x2418))))
(assert (x563 x2213))
(assert (x563 x280))
(assert (x564 x2109))
(assert (x564 x1832))
(assert (x563 x1003))
(assert (x563 x1087))
(assert (x563 x626))
(assert (= (and (not x3121) x1034) x1464))
(assert (= (x181 (x331 x1380 x2868 x636 x1281 x279 x2383)) x636))
(assert (=> (<= x1010 10000) (= 0 (x2768 x1010))))
(assert (=> (>= 10000 x1057) (= (x2768 x1057) 0)))
(assert (x563 x1394))
(assert (= x1528 (x2247 (x331 x1609 x646 x195 x537 x535 x1528))))
(assert (x563 x1220))
(assert (x563 x1993))
(assert (x563 x1757))
(assert (x563 x1103))
(assert (x563 x2635))
(assert (=> (<= x2058 10000) (= (x2768 x2058) 0)))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (x563 x2383))
(assert (x563 x1075))
(assert (x563 x3038))
(assert (=> (<= x821 10000) (= (x2768 x821) 0)))
(assert (x563 x447))
(assert (not (x1194 (x1260 x1874 x1214))))
(assert (x1194 18446746139588821027))
(assert (x563 x1608))
(assert (= x1000 (and x163 x79)))
(assert (x1194 1889567281))
(assert (=> (>= 10000 x2529) (= 0 (x2768 x2529))))
(assert (x563 x2372))
(assert (x563 x114))
(assert (=> (>= 10000 x1281) (= (x2768 x1281) 0)))
(assert (x542 x3168 1461501637330902918203684832716283019655932542976))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (x563 x2807))
(assert (x563 x445))
(assert (=> (>= 10000 x77) (= (x2768 x77) 0)))
(assert (x648 x1184))
(assert (= x1380 (x2572 (x242 x1380 x1013 x878 x1947))))
(assert (x563 x800))
(assert (x563 x2502))
(assert (x563 x1516))
(assert (x563 x568))
(assert (x563 x1092))
(assert (=> (>= 10000 x1258) (= (x2768 x1258) 0)))
(assert (x648 x1508))
(assert (x563 x1911))
(assert (x563 x2054))
(assert (x563 x1573))
(assert (x563 x1062))
(assert (= (x2609 (x242 x1584 x1100 x2912 x1744)) x1100))
(assert (x563 x3194))
(assert (x563 x1329))
(assert (x563 x2340))
(assert (x563 x1798))
(assert (x563 x224))
(assert (= (x2768 (x489 x514 x2058 x527)) (x489 x514 x2058 x527)))
(assert (=> (<= x1028 10000) (= 0 (x2768 x1028))))
(assert (x563 x3192))
(assert (x564 x513))
(assert (x563 x2351))
(assert (= (x2609 (x331 x1273 x1057 x830 x578 x2980 x2662)) x1057))
(assert (x1194 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (x563 x48))
(assert (x563 x1600))
(assert (x563 x3099))
(assert (=> (>= 10000 x1774) (= 0 (x2768 x1774))))
(assert (x563 x1349))
(assert (= (x2609 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017)) x82))
(assert (x563 x2576))
(assert (x563 x2982))
(assert (< (x1668 x2711 x82 x2 x1785 x409 x2266 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1884 x1380 x2567 x150 x2529 x923)))
(assert (x563 x3163))
(assert (= x2044 (x181 (x1884 x2658 x1938 x2044 x1858 x449))))
(assert (x563 x3058))
(assert (x563 x2602))
(assert (x563 x3062))
(assert (x563 x1479))
(assert (x960 x2828))
(assert (x563 x2615))
(assert (=> (<= x1241 10000) (= (x2768 x1241) 0)))
(assert (= (x489 x1756 x212 x2469) (x2768 (x489 x1756 x212 x2469))))
(assert (= (x331 x749 x823 x1537 x2701 x757 x1436) (x2768 (x331 x749 x823 x1537 x2701 x757 x1436))))
(assert (=> (<= x2931 10000) (= 0 (x2768 x2931))))
(assert (=> (<= x646 10000) (= (x2768 x646) 0)))
(assert (= (x489 x2711 x196 x2133) (x2768 (x489 x2711 x196 x2133))))
(assert (x648 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1965 32))
(assert (x1195 x998))
(assert (< 10000 (x1260 x2798 x3189)))
(assert (= (x2768 (x1260 x2711 x1886)) (x1260 x2711 x1886)))
(assert (x1965 x2087))
(assert (x563 x2234))
(assert (x563 x204))
(assert (=> (<= x2916 10000) (= 0 (x2768 x2916))))
(assert (x564 x1184))
(assert (= x560 (or x3015 x2453)))
(assert (x563 x1950))
(assert (= (x2609 (x1884 x2711 x1758 x447 x935 x255)) x1758))
(assert (x563 x2049))
(assert (x563 x2897))
(assert (x563 x1522))
(assert (= x1602 (x2609 (x1260 x792 x1602))))
(assert (=> (<= x767 10000) (= 0 (x2768 x767))))
(assert (< (x1260 x514 x2892) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x881))
(assert (x1195 x3165))
(assert (= (and x1140 x385) x1491))
(assert (x563 x2561))
(assert (x563 x1590))
(assert (x564 x2615))
(assert (> (x331 x514 x629 x982 x371 x144 x1953) 10000))
(assert (x563 x527))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x242 x1584 x1100 x2912 x1744)))
(assert (x563 x2147))
(assert (= x1256 (x2247 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236))))
(assert (x563 x3151))
(assert (x563 x2130))
(assert (=> (>= 10000 x2671) (= 0 (x2768 x2671))))
(assert (=> (<= x401 10000) (= 0 (x2768 x401))))
(assert (x563 x60))
(assert (not (x1194 (x1884 x749 x1240 x776 x724 x2027))))
(assert (x563 x783))
(assert (=> (>= 10000 x2483) (= (x2768 x2483) 0)))
(assert (x563 x1528))
(assert (=> (>= 10000 x2980) (= (x2768 x2980) 0)))
(assert (= x234 (=> (= (= x777 0) x1061) (and (=> (and (not x1061) (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2036)) (= (> x1839 0) x1093) (= x1839 (x1106 x863)) (not (= x2036 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2036)) (> x2059 x2036) (<= x2036 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x484 (+ x2036 32)) x2059) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2036) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2036))) (and (=> (and (= x2010 x2059) (not x1093)) x939) (=> (and x1093 (and (and (= x1203 (x1106 x1865)) (= (x1106 x863) x1902) (= x153 (x484 (+ 32 x863))) (= x1142 (> x2393 0)) (= x2393 (ite (= 0 x1203) 1 0)) (>= x1902 1) (>= 2 x1203) (= (x1106 x153) x1865)) (or (and (and (= (x1106 x1865) x1053) (= x2210 (ite (= x1053 1) 1 0)) (>= 2 x1053) (= x2674 x2210)) (not x1142)) (and x1142 (= x2393 x2674))))) x1198))) (=> x1061 x2770)))))
(assert (=> (<= x3162 10000) (= (x2768 x3162) 0)))
(assert (x563 x962))
(assert (x406 128 x2342))
(assert (x563 x1527))
(assert (=> (>= 10000 x3002) (= 0 (x2768 x3002))))
(assert (x563 x1258))
(assert (=> (<= x2959 10000) (= 0 (x2768 x2959))))
(assert (x542 x57 32))
(assert (x542 x1440 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1194 (x1260 x1756 x2959))))
(assert (x563 x2627))
(assert (= (x811 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575)) x1188))
(assert (x563 x2894))
(assert (=> (>= 10000 x2956) (= 0 (x2768 x2956))))
(assert (x1195 x2335))
(assert (x563 x3))
(assert (=> (>= 10000 x2141) (= (x2768 x2141) 0)))
(assert (x563 x618))
(assert (x563 x1865))
(assert (x563 x670))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639649))
(assert (= x891 (x119 (x242 x1874 x980 x1271 x891))))
(assert (=> (>= 10000 x683) (= 0 (x2768 x683))))
(assert (= x543 (x2051 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994))))
(assert (x563 x1596))
(assert (x564 x476))
(assert (= x279 (x2051 (x331 x1380 x2868 x636 x1281 x279 x2383))))
(assert (=> (>= 10000 x1981) (= 0 (x2768 x1981))))
(assert (x563 x1268))
(assert (= (and x759 (not x2697)) x2764))
(assert (x563 x1901))
(assert (x563 x964))
(assert (= (=> (and (= x227 (x484 (+ 32 x2076))) (= (> x1851 0) x1974) (= x2445 (x32 x2010)) (= (x484 (+ x2865 32)) x2147) (= x1851 (x32 x2076))) (and (=> (and (and (= x1690 x2147) (= x3092 x227) (= 0 x2359)) (not x1974)) x512) (=> (and x1974 (and (= (x484 (+ x2147 32)) x1456) (= (> x1851 1) x2101) (= (x32 x227) x2612) (= (x484 (+ x227 32)) x2323))) (and (=> (and (not x2101) (and (= x3092 x2323) (= x2359 1) (= x1690 x1456))) x512) (=> (and x2101 (and (= x1894 (< 2 x1851)) (= (x1634 x2323) x503) (= x2096 (x484 (+ x1456 32))) (= x797 (x484 (+ 32 x2323))))) (and (=> (and x1894 (and (= x1812 (x357 x797)) (= (x484 (+ x797 32)) x888) (= (x484 (+ 32 x2096)) x2589) (= x1520 (> x1851 3)))) (and (=> (and (not x1520) (and (= x3092 x888) (= x2359 3) (= x2589 x1690))) x512) (=> x1520 x1999))) (=> (and (and (= x2096 x1690) (= 2 x2359) (= x3092 x797)) (not x1894)) x512))))))) x1973))
(assert (x563 x3073))
(assert (x563 x2544))
(assert (not (x1194 (x489 64 x551 1))))
(assert (x563 x1598))
(assert (=> (>= 10000 x1598) (= 0 (x2768 x1598))))
(assert (= x1154 (=> (and (= x2717 (x484 (+ 32 x3163))) (= x44 (x484 (+ 32 x2424))) (= (* x2548 160) x2654) (or (>= x2376 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 2065879269376 x2376)) (<= x3163 115792089237316195423570985008687907853269984665640564039457584007913129639934) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1735) (> x2376 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1735) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2376)) (< x2376 x1735))) (= (x2818 196) x2376) (not (or (and (< x2175 x44) (= (<= x2175 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x44))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x44) (> x2175 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x2462 (* 32 x2548)) (= (x1200 (- x1802 x2654)) x2175) (<= x3163 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1105 (x484 (+ x3163 (mod (+ x2462 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (< x3163 x1105) (= (+ x2699 32) x2343) (= (x484 (+ x2376 36)) x2424) (<= x2548 18446744073709551615) (= x1686 (> x2548 0)) (= x2548 (x2818 x2424)) (>= x1105 1) (<= x3163 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (and (not x1686) (= x1105 x970)) x1942) (=> x1686 x762)))))
(assert (= x2583 (x2247 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838))))
(assert (= (x119 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425)) x2437))
(assert (x563 x1675))
(assert (x563 x424))
(assert (x563 x123))
(assert (x563 x2312))
(assert (x563 x1975))
(assert (x563 x570))
(assert (= (x2768 18446744073709551613) 0))
(assert (x563 x575))
(assert (x563 x2153))
(assert (x563 x1071))
(assert (=> (<= x2551 10000) (= 0 (x2768 x2551))))
(assert (=> (>= 10000 x290) (= 0 (x2768 x290))))
(assert (x1195 x1701))
(assert (x563 x2244))
(assert (x563 x927))
(assert (=> (<= x2800 10000) (= (x2768 x2800) 0)))
(assert (x563 x2853))
(assert (x563 x293))
(assert (=> (>= 10000 x3012) (= 0 (x2768 x3012))))
(assert (x563 x2793))
(assert (=> (>= 10000 x2361) (= (x2768 x2361) 0)))
(assert (= x830 (x181 (x331 x1273 x1057 x830 x578 x2980 x2662))))
(assert (=> (>= 10000 x831) (= (x2768 x831) 0)))
(assert (< 10000 (x242 x1756 x347 x2484 x2091)))
(assert (x563 x894))
(assert (x563 x2884))
(assert (x563 x379))
(assert (=> (>= 10000 x1838) (= 0 (x2768 x1838))))
(assert (=> (>= 10000 x959) (= (x2768 x959) 0)))
(assert (x563 x552))
(assert (= (x1260 x1380 x59) (x2768 (x1260 x1380 x59))))
(assert (> (x331 x1609 x646 x195 x537 x535 x1528) 10000))
(assert (= (x2768 (x489 x1795 x2039 x732)) (x489 x1795 x2039 x732)))
(assert (x563 x2068))
(assert (> (x331 x593 x1807 x1322 x1981 x90 x178) 10000))
(assert (x563 x124))
(assert (x563 x1139))
(assert (x563 x1173))
(assert (x563 x496))
(assert (= (or x2754 x1900 x467 x1167 x261) x35))
(assert (x563 x988))
(assert (x563 x1548))
(assert (> (x331 x2658 x719 x299 x38 x1936 x1153) 10000))
(assert (=> (>= 10000 x591) (= 0 (x2768 x591))))
(assert (< 10000 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127)))
(assert (x563 x2369))
(assert (x563 x1552))
(assert (=> (>= 10000 x2694) (= (x2768 x2694) 0)))
(assert (x563 x2973))
(assert (x563 x2400))
(assert (= x1159 (=> (and (= x277 (x1200 (- x940 x1519))) (= (x136 x821) x340) (= x656 x2119) (= x2309 (x251 x821)) (or (= x595 0) (= x595 64)) (= (* x839 32) x2357) (= x839 x603) x909 x736 (= x2668 (x484 (+ x595 x979))) (= (<= x1685 (x104 x1603)) x909) (<= x839 1) (= x2644 (< 0 x190)) (= x1685 (x251 x1603)) (= (x484 (+ x1940 x2357)) x656) (= x595 (* 64 x839)) (= x190 (x1918 x863)) (= x940 x2668) (>= x703 1) (= x736 (= x2309 (x104 x821))) (<= x685 4294967295) (>= x340 1) (or (= x2357 32) (= x2357 0))) (and (=> (not x2644) x2721) (=> (and x2644 (and (and (= x146 (x1918 x863)) (= (ite (= x1107 2) 1 0) x2428) (= x2806 (x1918 x1327)) (>= 2 x1107) (<= 1 x146) (= x2160 (= 0 x2428)) (= (x484 (+ 32 x863)) x1327) (= x1107 (x1918 x2806))) (or x2160 (and (not x2160) (and (= (= x627 (x2427 x184)) x946) (= x1911 (x104 x1603)) (= x597 (x484 (+ 96 x1003))) (>= x2608 1) (= (x484 (+ 32 x1636)) x1661) (= (x1918 x863) x6) (= x2386 (x1918 x597)) (>= x2824 1) (= (x1918 x863) x2608) (>= x6 1) (= x2824 (x136 x184)) (= (x484 (+ x976 64)) x2032) (= x2369 (x2601 1461501637330902918203684832716283019655932542975 x2109)) (>= x2476 1) (= x1003 (x1918 x1327)) (= x1636 (x484 (+ 4 x1519))) x946 (= (x1918 x1327) x976) (= x627 (x104 x184)) (<= x1635 4294967295) x2799 (= (>= (x2427 x1603) x1911) x2799) (= (x1918 x2032) x2109)))))) x1646)))))
(assert (=> (<= x3068 10000) (= (x2768 x3068) 0)))
(assert (> (x1260 x514 x2892) 10000))
(assert (= (and x2870 x2368) x1613))
(assert (not (x1194 (x242 x1756 x347 x2484 x2091))))
(assert (not (x1194 (x1668 x1273 x3143 x66 x3142 x3032 x496 x180))))
(assert (x563 x483))
(assert (x1194 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (x563 x912))
(assert (=> (<= x1303 10000) (= (x2768 x1303) 0)))
(assert (x563 x376))
(assert (=> (>= 10000 x1301) (= 0 (x2768 x1301))))
(assert (= x1676 (x119 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365))))
(assert (x563 x449))
(assert (x563 x2178))
(assert (= x1643 (=> (and (= x2615 (x194 x1076)) (= (x484 (+ x464 32)) x863) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x464)) (>= x280 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x464) (= (x194 x2343) x2676) (= x493 (> x1600 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x464) (= x1600 (x194 x2676)) (= 1 x1581) (= (x194 160) x1076) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x464)) (= (x194 x464) x1581) (> x863 x464) (not (= x464 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x464)) (and (=> (and (and (= (x484 (+ 32 x2676)) x2079) (<= 1 x2967) (>= 5 x1536) (= (x194 x2079) x2561) (= (ite (= 1 x1536) 1 0) x1984) (= x2967 (x194 x2676)) (= (x194 x2561) x1536) (= (= 0 x1984) x1316)) x493) (and (=> (and (and (and (= (ite (= x307 2) 1 0) x2319) (= x2862 (> x2319 0)) (>= 5 x307) (= (x194 x2561) x307)) (or (and (not x2862) (and (= x1527 1) (= x2693 3) (= x2693 (x194 x2561)))) (and (= 1 x2319) x2862))) x1316) x1587) (=> (and (and (= (x194 x3099) x2629) (>= x166 1) (>= 1461501637330902918203684832716283019655932542975 x166) (= (x484 (+ 128 x2561)) x3099) (= x166 x184) (= x166 (x2601 1461501637330902918203684832716283019655932542975 x2629))) (not x1316)) x1201))) (=> (not x493) x2579)))))
(assert (x563 x1182))
(assert (x563 x2743))
(assert (x563 x44))
(assert (= (x2768 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253)) (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253)))
(assert (x563 x1571))
(assert (= (or x2677 x2661) x172))
(assert (x563 x1370))
(assert (= true x2646))
(assert (x563 x617))
(assert (=> (>= 10000 x2220) (= 0 (x2768 x2220))))
(assert (x563 x474))
(assert (x1195 x3168))
(assert (x563 x3138))
(assert (=> (>= 10000 x746) (= 0 (x2768 x746))))
(assert (x563 x2094))
(assert (x563 x2507))
(assert (= (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994) (x2768 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994))))
(assert (x563 x62))
(assert (=> (>= 10000 x178) (= 0 (x2768 x178))))
(assert (= x2568 (and x3118 x3149)))
(assert (x563 x1234))
(assert (= x327 (and x2697 x759)))
(assert (x563 x2887))
(assert (x563 x1764))
(assert (= (or x2311 x1179) x2640))
(assert (= x1168 (x181 (x704 x1795 x2562 x1168 x670 x2593 x1256 x2630 x236))))
(assert (x563 x2023))
(assert (= x2650 (x119 (x242 x593 x1798 x2273 x2650))))
(assert (x563 x1218))
(assert (= (x2572 (x1260 x1609 x868)) x1609))
(assert (x563 x2965))
(assert (= (x2609 (x1668 x792 x1354 x2129 x373 x695 x1991 x1096)) x1354))
(assert (= x1274 (x181 (x331 x2711 x1177 x1274 x767 x3057 x1224))))
(assert (x563 x583))
(assert (x563 x1671))
(assert (x563 x1214))
(assert (x563 x1961))
(assert (x563 x1102))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639618))
(assert (=> (>= 10000 x1656) (= (x2768 x1656) 0)))
(assert (x563 x628))
(assert (x406 160 x1791))
(assert (= (or x327 x2764) x366))
(assert (= (or x2215 x1959) x86))
(assert (x563 x2204))
(assert (x406 79228162514264337593543950336 x1248))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (x563 x833))
(assert (=> (>= 10000 x533) (= (x2768 x533) 0)))
(assert (x563 x2270))
(assert (= x1173 (x181 (x242 x1609 x2023 x1173 x2783))))
(assert (not (x1194 (x704 x792 x77 x2423 x392 x3051 x1679 x1188 x575))))
(assert (x563 x2685))
(assert (x563 x3072))
(assert (=> (>= 10000 x2658) (= (x2768 x2658) 0)))
(assert (= x2418 (x119 (x331 x1874 x1628 x1450 x2418 x2551 x2635))))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639615)))
(assert (x563 x134))
(assert (x563 x2262))
(assert (= x1744 (x119 (x242 x1584 x1100 x2912 x1744))))
(assert (x563 x869))
(assert (=> (<= x1770 10000) (= (x2768 x1770) 0)))
(assert (x563 x321))
(assert (x563 x1979))
(assert (x563 x636))
(assert (x563 x2691))
(assert (= (=> (and (= x521 (x484 (+ 96 x383))) (= x2979 (x2426 x3130)) (= (x484 (+ 96 x2354)) x3130) (= x1882 (not (< 128 x1579)))) (and x1882 x1599)) x1601))
(assert (= (x2768 2189116922) 0))
(assert (=> (<= x1953 10000) (= (x2768 x1953) 0)))
(assert (=> (>= 10000 x303) (= 0 (x2768 x303))))
(assert (x563 x2689))
(assert (=> (>= 10000 x1947) (= 0 (x2768 x1947))))
(assert (x563 x1681))
(assert (x563 x1835))
(assert (x563 x2462))
(assert (= (x1260 x1756 x2959) (x2768 (x1260 x1756 x2959))))
(assert (x563 x1517))
(assert (=> (>= 10000 x236) (= 0 (x2768 x236))))
(assert (x563 x1279))
(assert (= (x181 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994)) x549))
(assert (=> (<= x1393 10000) (= 0 (x2768 x1393))))
(assert (x960 x1413))
(assert (= (x1884 x2798 x3004 x2178 x262 x601) (x2768 (x1884 x2798 x3004 x2178 x262 x601))))
(assert (x1194 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (=> (>= 10000 x1188) (= (x2768 x1188) 0)))
(assert (x563 x416))
(assert (=> (<= x629 10000) (= 0 (x2768 x629))))
(assert (x542 x998 32))
(assert (x563 x2581))
(assert (x563 x2515))
(assert (x563 x2133))
(assert (< 10000 (x331 x1584 x217 x480 x3002 x2881 x1155)))
(assert (x563 x1726))
(assert (= x1069 (x119 (x1884 x1756 x2679 x2483 x1069 x2361))))
(assert (x563 x2386))
(assert (= (or (and (not x493) x1099) x2640) x1367))
(assert (x824 x353))
(assert (= x73 (x181 (x331 x1756 x2931 x73 x1688 x688 x930))))
(assert (x563 x2688))
(assert (< (x331 x1756 x2931 x73 x1688 x688 x930) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2051 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127)) x36))
(assert (x1965 x1248))
(assert (x563 x886))
(assert (x563 x1301))
(assert (x563 x723))
(assert (x563 x2241))
(assert (=> (<= x2504 10000) (= 0 (x2768 x2504))))
(assert (= x440 (=> (and (and (<= x323 1461501637330902918203684832716283019655932542975) (not (= x873 x323)) (>= x2810 0) (>= 4294967295 x2485) x229 (not (= x2114 x323)) (>= 1461501637330902918203684832716283019655932542975 x1834) (not (= x2114 x1834)) (<= 1 x1603) (>= 4294967295 x2746) (<= x3054 1461501637330902918203684832716283019655932542975) (not (= x1603 x1834)) (<= x3128 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1254 0) (>= x2263 0) (<= x1118 1461501637330902918203684832716283019655932542975) (<= 1 x873) (<= 1 x2114) (>= x1292 0) (not (= x873 x321)) (= (> (x136 x1603) 0) x229) (>= x1837 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1014) (<= x821 1461501637330902918203684832716283019655932542975) (= x1070 (< 0 (x136 x2347))) (<= 0 x2801) x1694 (>= x1014 0) (= x282 (< 0 (x136 x321))) x2345 (>= 1461501637330902918203684832716283019655932542975 x2801) (not (= x2735 x1834)) (<= 0 x1425) (<= x1811 1461501637330902918203684832716283019655932542975) (= x184 x323) (not (= x321 x2735)) (<= x2735 1461501637330902918203684832716283019655932542975) (<= 0 x1486) (>= x1834 1) x1070 (not (= x1603 x2347)) (= x2114 x2007) x282 (= x1682 (> (x136 x2114) 0)) (not (= x1603 x321)) (not (= x1834 x323)) (= x1694 (= x321 x1811)) (>= 4294967295 x2019) (>= 1461501637330902918203684832716283019655932542975 x2114) (<= x296 1461501637330902918203684832716283019655932542975) (= x2345 (< 0 (x136 x873))) (not (= x873 x1834)) (<= 0 x3128) (= x2941 x323) (<= x1791 4294967295) (<= 1 x2342) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1486) (= x173 36) (not (= x321 x2347)) (not (= x323 x2735)) (<= 64 x3145) (<= x2576 4294967295) (>= x2735 1) (<= x2007 1461501637330902918203684832716283019655932542975) (>= x321 1) (>= 1461501637330902918203684832716283019655932542975 x321) x1682 x2444 (>= x821 1) (<= x2342 4294967295) (>= 1461501637330902918203684832716283019655932542975 x1292) (<= x332 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x2347) (<= 1 x2347) (not (= x2114 x321)) (<= 0 x1489) (>= x2007 1) (>= 4294967295 x1233) (= (x657 32) x1811) (>= 1461501637330902918203684832716283019655932542975 x1837) (>= 4294967295 x3145) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2263) (<= 0 x332) (= x1430 x321) (<= 0 x1118) (>= 1461501637330902918203684832716283019655932542975 x873) (not (= x2114 x1603)) (>= x1811 1) (<= 1 x323) (= x2832 (< 0 (x136 x1834))) (= (> (x136 x2735) 0) x2444) (<= x2466 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x2735 x2347)) (<= 1 x184) (not (= x873 x1603)) (not (= x2114 x2735)) (>= 1461501637330902918203684832716283019655932542975 x1603) (= x2854 0) (not (= x2347 x2114)) (<= x1425 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2810 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x323 x2347)) (not (= x1603 x323)) (not (= x321 x1834)) (<= x1489 1461501637330902918203684832716283019655932542975) (not (= x873 x2735)) x2832 x1357 (= x821 x1834) (not (= x321 x323)) (not (= x873 x2114)) (= (< 0 (x136 x323)) x1357) (not (= x2347 x873)) (not (= x1603 x2735)) (<= 0 x2466) (<= x184 1461501637330902918203684832716283019655932542975) (not (= x2347 x1834))) (and (and (= x551 x2941) (= x428 false)) (and (and (<= x1216 127) (>= 127 x1216) (>= x1802 676) (= (x63 x321) x1022) (= x2362 1889567281) (= x2285 false) (= x2070 false) (= x1837 x2531) (= 32 x2375) (= false x2048) (= false x540) (= x1196 x2886) (= x1022 x470) (= x1815 false) (= x2886 (x2678 x1829)) (<= 1 x1992) (>= 2065879269444 x1802) (= x2756 false) (= (x3037 x2531) x177) (= (x136 x321) x1992) (= (x489 64 x551 1) x1829)) (and (= x1292 x747) (and (and (= (+ x1640 32) x3132) (= x1914 (* x2746 32)) (= x2019 x2750) (= (+ 32 x550) x608) (= x62 (+ 32 x1914 x1321)) (>= x1677 0) (= (- x1007 36) x519) (= x1873 (+ x1007 32)) (= x1321 (+ x1604 32 x1640)) (= x1007 (+ x3193 x550 32)) (= (* x1791 160) x3193) (= (- x1640 36) x107) (= x1610 x1118) (= (* 128 x2342) x943) (= x2332 (- x1321 36)) (= x2494 (* x1233 160)) (> x2750 x529) (= (* 32 x1677) x1604) (= (+ 420 x943) x550) (= (* (- x1677 1) 32) x529) (= x1640 (+ 32 x1007 x2494)) (= (+ x1321 32) x616) (= (- x550 36) x1500) (<= x1677 134217728) (>= x1604 x2750)) (and (= x115 x332) (and (and (= x2263 x1202) (= x2326 false) (= x1802 x62)) (and (= x1837 x3045) (and (and (or (and (not x1027) (= x99 x442)) (and (and (<= x1087 4294967295) (<= 32 x1087) (= x99 1)) x1027)) (and (= 2189116922 x1157) (= x471 false) (= x1127 (x136 x1603)) (<= x1087 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= 128 x313) (= x1103 37664329658542632380461339884011895550187483938955784695590509376205521682432) (>= 127 x1971) (<= x955 1461501637330902918203684832716283019655932542975) (= (x1789 x1603) x1615) (= x112 x1615) (>= x1127 1) (>= 127 x1971) (= x1837 x2508) (= x918 (x1243 x2508)) (= x2333 false) (= x941 37664329658542632380461339884011895550187483938955784695590509376205521682432) (<= 32 x1087) (= (< 0 x442) x1027))) (= x715 x2810)))))))))) x2155)))
(assert (x563 x2994))
(assert (x563 x1711))
(assert (x563 x537))
(assert (= x2763 (x2051 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395))))
(assert (x563 x2629))
(assert (x563 x1811))
(assert (x563 x3177))
(assert (x786 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x563 x122))
(assert (x563 x2092))
(assert (= x1185 (x2939 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185))))
(assert (= x1347 (and (not x928) x1250)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x792 x2344 x1751 x1444 x1301 x1161)))
(assert (x563 x38))
(assert (x563 x3185))
(assert (= x1869 (and x1687 (not x2208))))
(assert (x563 x1736))
(assert (= x1167 (and (not x1461) x1289)))
(assert (= x1541 (x2609 (x704 x1874 x1541 x1775 x3048 x739 x2504 x2592 x2808))))
(assert (= (x119 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614)) x1878))
(assert (x563 x1354))
(assert (x563 x1536))
(assert (= x260 (and x3174 x3076)))
(assert (x563 x1889))
(assert (=> (>= 10000 x1684) (= 0 (x2768 x1684))))
(assert (=> (<= x2344 10000) (= (x2768 x2344) 0)))
(assert (x563 x739))
(assert (=> (>= 10000 x2091) (= (x2768 x2091) 0)))
(assert (x648 x2586))
(assert (= 0 (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (=> (<= x600 10000) (= 0 (x2768 x600))))
(assert (x563 x1029))
(assert (=> (>= 10000 x2353) (= (x2768 x2353) 0)))
(assert (= x258 (and x2729 (not x2144))))
(assert (x563 x262))
(assert (= x1688 (x119 (x331 x1756 x2931 x73 x1688 x688 x930))))
(assert (x563 x1808))
(assert (x563 x80))
(assert (x563 x887))
(assert (=> (<= x776 10000) (= 0 (x2768 x776))))
(assert (x563 x2095))
(assert (= x164 (x181 (x331 x1795 x1328 x164 x974 x553 x3178))))
(assert (= (x2051 (x331 x2798 x1390 x2688 x149 x2703 x825)) x2703))
(assert (x563 x1676))
(assert (x563 x1825))
(assert (= (x2051 (x331 x2711 x1177 x1274 x767 x3057 x1224)) x3057))
(assert (x563 x566))
(assert (x563 x76))
(assert (=> (<= x2047 10000) (= (x2768 x2047) 0)))
(assert (x563 x3145))
(assert (x1194 18446744073709551487))
(assert (x563 x384))
(assert (=> (>= 10000 x98) (= 0 (x2768 x98))))
(assert (< 10000 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)))
(assert (x563 x2079))
(assert (x563 x1876))
(assert (= x1278 (and x103 x3115)))
(assert (x563 x107))
(assert (x563 x468))
(assert (x563 x1315))
(assert (= x2694 (x2051 (x1668 x593 x978 x1787 x2437 x2694 x2992 x425))))
(assert (< 10000 (x1884 x2658 x1938 x2044 x1858 x449)))
(assert (not (x1194 (x704 x749 x1859 x2286 x2724 x1145 x2916 x2220 x1185))))
(assert (not (x1194 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993))))
(assert (x563 x1393))
(assert (x563 x2762))
(assert (> (x1743 0) 10000))
(assert (x563 x219))
(assert (=> (>= 10000 x2169) (= 0 (x2768 x2169))))
(assert (x563 x2929))
(assert (x564 x3165))
(assert (< (x1884 x1756 x2679 x2483 x1069 x2361) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2946) (= 0 (x2768 x2946))))
(assert (not (x1194 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835))))
(assert (x563 x2683))
(assert (x563 x521))
(assert (x648 1461501637330902918203684832716283019655932542976))
(assert (x563 x2956))
(assert (x563 x708))
(assert (= (x2572 (x489 x1795 x2039 x732)) x1795))
(assert (x563 x432))
(assert (=> (<= x1756 10000) (= (x2768 x1756) 0)))
(assert (x563 x1151))
(assert (x563 x2988))
(assert (x563 x2587))
(assert (not (x1194 (x331 x792 x2344 x1751 x1444 x1301 x1161))))
(assert (= (x331 x2658 x719 x299 x38 x1936 x1153) (x2768 (x331 x2658 x719 x299 x38 x1936 x1153))))
(assert (> (x1884 x1380 x2567 x150 x2529 x923) 10000))
(assert (x563 x2570))
(assert (x563 x2039))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x749 x823 x1537 x2701 x757 x1436)))
(assert (= (x181 (x1884 x1795 x2313 x1226 x1678 x3107)) x1226))
(assert (x563 x2419))
(assert (x563 x1023))
(assert (x563 x1715))
(assert (x563 x1828))
(assert (x563 x1531))
(assert (= (x2768 (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926)) (x1668 x2798 x1239 x2596 x3052 x3084 x546 x926)))
(assert (= (x2247 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127)) x20))
(assert (x563 x666))
(assert (x563 x1378))
(assert (= (and x2481 (not x1977)) x142))
(assert (= (x811 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614)) x2614))
(assert (= (x2247 (x331 x1380 x2868 x636 x1281 x279 x2383)) x2383))
(assert (=> (<= x2 10000) (= 0 (x2768 x2))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x242 x2798 x2239 x3068 x1303)))
(assert (x563 x3052))
(assert (< 10000 (x1884 x1795 x2313 x1226 x1678 x3107)))
(assert (x563 x3130))
(assert (x648 x2673))
(assert (x563 x2029))
(assert (x563 x486))
(assert (x563 x1765))
(assert (x563 x2116))
(assert (=> (>= 10000 x2892) (= (x2768 x2892) 0)))
(assert (x563 x2864))
(assert (=> (<= x2761 10000) (= (x2768 x2761) 0)))
(assert (not (x1194 (x1668 x1609 x1285 x160 x2092 x2763 x1691 x1395))))
(assert (x563 x160))
(assert (x563 x2874))
(assert (=> (>= 10000 x321) (= 0 (x2768 x321))))
(assert (x563 x2571))
(assert (=> (<= x3051 10000) (= 0 (x2768 x3051))))
(assert (= x2365 (x2939 (x704 x593 x1241 x3162 x1676 x1957 x1417 x1929 x2365))))
(assert (= x2074 (and x97 x3023)))
(assert (= 0 (x2768 30450320296159908085414496432607297912280636920234228256796789313041262968832)))
(assert (< (x242 x749 x1092 x1300 x235) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x925))
(assert (= (and x1520 x2249) x1081))
(assert (x563 x1129))
(assert (x563 x3059))
(assert (= (x2609 (x1260 x1795 x1218)) x1218))
(assert (x563 x1809))
(assert (x563 x1322))
(assert (x563 x3032))
(assert (not (x1194 (x1884 x792 x346 x1657 x2734 x2954))))
(assert (x563 x544))
(assert (=> (>= 10000 x276) (= (x2768 x276) 0)))
(assert (x563 x777))
(assert (= (x2609 (x1884 x2658 x1938 x2044 x1858 x449)) x1938))
(assert (= (x2572 (x489 x1609 x1458 x1193)) x1609))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (= x2483 (x181 (x1884 x1756 x2679 x2483 x1069 x2361))))
(assert (< 10000 (x1884 x1584 x2398 x2841 x2461 x914)))
(assert (x563 x926))
(assert (= (x1884 x1795 x2313 x1226 x1678 x3107) (x2768 (x1884 x1795 x2313 x1226 x1678 x3107))))
(assert (x563 x2917))
(assert (x563 x2410))
(assert (x563 x237))
(assert (> (x489 x1756 x212 x2469) 10000))
(assert (x542 x654 1461501637330902918203684832716283019655932542976))
(assert (not (x1194 (x242 x1584 x1100 x2912 x1744))))
(assert (x563 x1155))
(assert (= (x2939 (x704 x514 x1770 x2857 x1641 x2146 x219 x2107 x1835)) x1835))
(assert (< 10000 (x1260 x792 x1602)))
(assert (x563 x2420))
(assert (=> (>= 10000 x1744) (= (x2768 x1744) 0)))
(assert (= (x2768 18446744073709551614) 0))
(assert (= x935 (x119 (x1884 x2711 x1758 x447 x935 x255))))
(assert (x563 x501))
(assert (=> (>= 10000 x537) (= (x2768 x537) 0)))
(assert (x563 x2838))
(assert (x563 x1402))
(assert (x542 x1823 32))
(assert (x1194 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (x563 x1513))
(assert (x563 x3108))
(assert (x563 x205))
(assert (x563 x2131))
(assert (= (x181 (x1668 x1874 x189 x2956 x460 x2130 x402 x2525)) x2956))
(assert (= x1234 (x119 (x1668 x2658 x1192 x1043 x1234 x2047 x267 x533))))
(assert (x1194 2065879269316))
(assert (= (x2768 (x1260 x1273 x42)) (x1260 x1273 x42)))
(assert (x542 x2828 32))
(assert (= (x2572 (x704 x2798 x2680 x276 x1951 x2546 x3180 x1531 x1253)) x2798))
(assert (x563 x14))
(assert (x563 x2121))
(assert (> (x489 x514 x2058 x527) 10000))
(assert (x563 x1628))
(assert (x406 32 x1104))
(assert (x648 x2828))
(assert (x563 x2830))
(assert (x1194 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x563 x578))
(assert (x563 x2682))
(assert (x563 x2177))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639712) 0))
(assert (= (and x1881 x1877) x2215))
(assert (x563 x414))
(assert (x563 x166))
(assert (x563 x1777))
(assert (x563 x130))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x563 x433))
(assert (= x1895 (=> (and (= x2898 (x2564 x2010)) (= (x484 (+ 96 x962)) x678) (= x962 (x2564 192)) (= x33 (x2564 x678)) (= x1032 (x484 (+ 32 x1580))) (= (x484 (+ 288 x1580)) x3179) (= (x2564 x2604) x2478) (= x2651 (x2564 x3166)) (= (x484 (+ 32 x33)) x1817) (= x2918 (x484 (+ x3179 32))) (= x2958 (x2564 x3066)) (= x1287 (x2757 x33)) (= x2208 (> x1287 0))) (and (=> (and x2208 (and (= x614 (x942 x1817)) (= (< 32 x1287) x2528))) (and (=> (not x2528) x1597) (=> (and x2528 (and (= (x484 (+ x1817 32)) x1995) (= x1036 (< 64 x1287)) (= (x484 (+ x2918 32)) x2935) (= x1675 (x271 x1995)))) (and (=> (and x1036 (and (= x2848 (< 96 x1287)) (= (x602 x2390) x452) (= x2390 (x484 (+ 64 x1817))) (= (x484 (+ 64 x2918)) x1905))) (and (=> (not x2848) x1597) (=> x2848 x1186))) (=> (not x1036) x1597))))) (=> (not x2208) x1597)))))
(assert (= (x2768 32542679537407071897843112657522291873774333932075415528008786499928730894336) 0))
(assert (=> (<= x1798 10000) (= (x2768 x1798) 0)))
(assert (x563 x2896))
(assert (x563 x595))
(assert (x563 x1184))
(assert (=> (>= 10000 x2092) (= (x2768 x2092) 0)))
(assert (x563 x1546))
(assert (x563 x2618))
(assert (x563 x2170))
(assert (= x2712 (x2609 (x489 x749 x2712 x3070))))
(assert (= x855 (and x1282 x620)))
(assert (x563 x1256))
(assert (x563 x1933))
(assert (= x514 (x2572 (x1668 x514 x1706 x1808 x1878 x2687 x881 x2614))))
(assert (= x1782 (x181 (x1884 x1609 x2457 x1782 x1225 x2073))))
(assert (x563 x2366))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x331 x1795 x1328 x164 x974 x553 x3178)))
(assert (x563 x2083))
(assert (x563 x1858))
(assert (x563 x576))
(assert (x563 x674))
(assert (x563 x3178))
(assert (x563 x3158))
(assert (= (x181 (x704 x1609 x268 x188 x2234 x2914 x243 x2850 x1993)) x188))
(assert (x563 x2516))
(assert (=> (<= x2239 10000) (= (x2768 x2239) 0)))
(assert (x563 x437))
(assert (x563 x2562))
(assert (= (=> (and (= (ite (= x1123 0) (ite (= 0 x1123) 1 0) (ite (= 0 x674) 1 0)) x3074) (= 0 x3074) (= x1319 x2015)) x1674) x504))
(assert (x563 x57))
(assert (=> (>= 10000 x1751) (= (x2768 x1751) 0)))
(assert (= (and (not x1877) x1881) x1959))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x563 x3048))
(assert (= (or x2209 x1588) x1949))
(assert (= (x2051 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838)) x424))
(assert (= x2976 (=> (and (= (x686 x1213) x1819) (= (x484 (+ 32 x1213)) x1924) (= x645 (x484 (+ x1047 32))) (= (not (< 1 x839)) x2261) (= (x484 (+ x979 32)) x1047) (= x1213 (x686 x1940)) (= (x484 (+ 32 x1940)) x511) (= x1279 (x2265 x1924))) (and (=> (and (= 1 x603) (= x645 x940) (= x2119 x511)) x1159) x2261))))
(assert (< (x1668 x1584 x1752 x780 x613 x424 x2583 x1838) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x739 10000) (= 0 (x2768 x739))))
(assert (x563 x2791))
(assert (= x2461 (x119 (x1884 x1584 x2398 x2841 x2461 x914))))
(assert (=> (>= 10000 x980) (= 0 (x2768 x980))))
(assert (< (x242 x1273 x2284 x2858 x1366) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x1787))
(assert (= (x2768 115792089237316195423570985008687907853269984665640564039457584007913129639743) 0))
(assert (x563 x1518))
(assert (x563 x346))
(assert (x1965 x1851))
(assert (x563 x3196))
(assert (=> (<= x409 10000) (= 0 (x2768 x409))))
(assert (= x1092 (x2609 (x242 x749 x1092 x1300 x235))))
(assert (= x749 (x2572 (x1260 x749 x1774))))
(assert (x563 x464))
(assert (= (x2768 (x489 64 x167 1)) (x489 64 x167 1)))
(assert (= x2761 (x2609 (x242 x514 x2761 x401 x831))))
(assert (= (x119 (x242 x514 x2761 x401 x831)) x831))
(assert (= x2 (x181 (x1668 x2711 x82 x2 x1785 x409 x2266 x2017))))
(assert (x563 x836))
(assert (x563 x2694))
(assert (x406 32 x2087))
(assert (> (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315) 10000))
(assert (x564 x869))
(assert (x563 x760))
(assert (x563 x2991))
(assert (x563 x3135))
(assert (x563 x749))
(assert (x563 x3126))
(assert (x824 x1015))
(assert (= (x2051 (x1668 x1756 x1086 x837 x1258 x2800 x1598 x2315)) x2800))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x704 x1584 x1715 x549 x1315 x543 x800 x1684 x994)))
(assert (x564 x2586))
(assert (x563 x2534))
(assert (x563 x1688))
(assert (x648 x1031))
(assert (x1194 2065879269284))
(assert (= (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1151)) (not (= x1151 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x2537 (x484 (+ x1989 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1151)) (= x1345 (not (> x2884 1))) (= (x484 (+ x1975 32)) x1113) (= (x484 (+ 64 x1151)) x2797) (> x2797 x1151) (>= x2516 1) (= x2516 (x1223 x1989)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1151) (= x844 (x2591 x1113)) (= (x484 (+ 32 x1151)) x2029) (<= x1151 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x988 (x484 (+ 32 x1113))) (<= x1151 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2591 x988) x3182)) (and x1345 (=> (= x2797 x1519) x954))) x1296))
(assert (= (x2247 (x1668 x1795 x2364 x633 x1479 x1739 x2141 x2371)) x2141))
(assert (=> (>= 10000 x2808) (= (x2768 x2808) 0)))
(assert (x406 160 x1233))
(assert (x563 x1697))
(assert (x563 x1436))
(assert (=> (>= 10000 x732) (= (x2768 x732) 0)))
(assert (x563 x2752))
(assert (x563 x996))
(assert (x563 x1388))
(assert (x563 x2476))
(assert (x563 x3091))
(assert (= (x2609 (x1884 x1273 x1166 x2789 x3155 x2758)) x1166))
(assert (=> (>= 10000 x1679) (= 0 (x2768 x1679))))
(assert (= x903 (and x2144 x2729)))
(assert (=> (<= x66 10000) (= (x2768 x66) 0)))
(assert (= (=> (= (< 0 x2884) x2432) (and (=> (and (= x1519 x1151) (not x2432)) x954) (=> x2432 x1296))) x2675))
(assert (= (=> (and (= (< 0 x1162) x1927) (= (x162 x829) x3161) (= (x162 x3161) x1162)) (and (=> (and (and (= x2303 (x162 x1378)) (= (x484 (+ x60 32)) x3069) (= (> x2627 0) x2459) (= x204 (x162 x1490)) (= x60 (x484 (+ 128 x3))) (= x479 (x2601 1461501637330902918203684832716283019655932542975 x2586)) (= (x162 x883) x696) (= (x2145 x2303) x2627) (= (x162 x829) x883) (= x2988 (x484 (+ 32 x204))) (<= 1 x696) (= (x484 (+ x3 32)) x2786) (= (x484 (+ x2988 32)) x1378) (= x3 (x484 (+ 32 x2559))) (= (x162 x204) x2586) (= x2199 (x162 x2988)) (= (x484 (+ 32 x883)) x1490) (= (x484 (+ x1323 32)) x822) (= x1361 (x484 (+ 32 x2303))) (= x1323 (x484 (+ 32 x2786)))) x1927) (and (=> (not x2459) x1737) (=> (and x2459 (and (= (< 32 x2627) x2889) (= x2682 (x2316 x1361)))) (and (=> (and (and (= x782 (x484 (+ 32 x1361))) (= (< 64 x2627) x2011) (= (x1699 x782) x541) (= (x484 (+ 32 x3069)) x2765)) x2889) (and (=> (and x2011 (and (= x1165 (x484 (+ x1361 64))) (= x1396 (x484 (+ 64 x3069))) (= x984 (x10 x1165)) (= (< 96 x2627) x793))) (and (=> x793 x1978) (=> (not x793) x1737))) (=> (not x2011) x1737))) (=> (not x2889) x1737))))) (=> (and (not x1927) (= x2559 x3131)) x1176))) x1864))
(assert (=> (>= 10000 x59) (= 0 (x2768 x59))))
(assert (= x1267 (x811 (x704 x1756 x1714 x1028 x303 x36 x20 x1267 x3127))))
(assert (x563 x2703))
(assert (x1194 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (=> (>= 10000 x2130) (= (x2768 x2130) 0)))
(assert (x786 x1514))
(assert (x563 x2834))
(assert (x1195 x1823))
(assert (x563 x569))
(assert (x563 x135))
(assert (x563 x3110))
(assert (=> (>= 10000 x1315) (= 0 (x2768 x1315))))
(assert (=> (<= x150 10000) (= (x2768 x150) 0)))
(assert (= (or x1469 x1680) x1420))
(assert (=> (>= 10000 x11) (= 0 (x2768 x11))))
(assert (x563 x2779))
(assert (= x1140 (and x322 (not x466))))
(assert (x563 x1954))
(assert (= 64 (x2572 (x489 64 x167 1))))
(assert (x563 x893))
(assert (= x710 (x2051 (x1884 x1874 x591 x3185 x2244 x710))))
(assert (x648 x2455))
(assert (x563 x992))
(assert (= x1469 (or x1018 x2910 x2826 x1433 x397)))
(assert (= (x2051 (x1884 x1795 x2313 x1226 x1678 x3107)) x3107))
(assert (x563 x2353))
(assert (< (x1884 x1609 x2457 x1782 x1225 x2073) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x71))
(assert (x563 x3133))
(assert (x563 x3123))
(assert (x563 x1553))
(assert (x563 x3068))
(assert (x542 x2455 1461501637330902918203684832716283019655932542976))
(assert (x563 x2455))
(assert (x563 x2474))
(assert (x563 x2959))
(assert (= (=> (and (= (x484 (+ 32 x2908)) x2737) (= x662 (not (< 4 x2187))) (= (x484 (+ 32 x1170)) x1809) (= (x967 x2908) x2422)) (and (=> (and (= x1809 x1720) (= x1899 x2737) (= x2996 4)) x2719) x662)) x410))
(assert (not (x1194 (x331 x1380 x2868 x636 x1281 x279 x2383))))
(assert (x563 x2798))
(assert (=> (>= 10000 x1444) (= 0 (x2768 x1444))))
(assert (< 10000 (x1668 x1584 x1752 x780 x613 x424 x2583 x1838)))
(assert (x563 x1366))
(assert (x563 x1940))
(assert (< (x489 x1273 x1062 x707) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x563 x2255))
(assert (= x512 (=> (and (= (* x1851 32) x1404) (<= x2865 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2429 (* x1851 32)) (= x1229 (x484 (+ x227 x2429))) (= x2834 x1690) (<= 1 x2834) (= x3092 x1229) (= x2359 x1851) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2865) (= (x754 x2865) x1380) (= x2834 (x484 (+ x2147 x1404))) (>= 4 x1851) (>= x1690 1) (= x1416 (x1200 (- x1547 32))) (= (>= 224 x1380) x148) (= x2636 (x484 (+ x2865 32))) (= x1547 (x1200 (- x1690 x2865))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2865) (> x1690 x2865)) (and x148 (=> (and (= x878 (x754 x126)) (= (x754 x2500) x279) (= (x1668 x1380 x3035 x820 x791 x1252 x2946 x1650) x1039) (= x2872 (x754 x2000)) (= (x484 (+ x2636 64)) x2000) (= x126 (x484 (+ x2636 32))) (= (x489 x1380 x98 x2121) x510) (= (x1884 x1380 x2567 x150 x2529 x923) x1097) (= x1013 (x754 x2636)) (= (x754 x3102) x2964) (= x1650 (x754 x1793)) (= x1871 (x484 (+ 32 x2636))) (= (x484 (+ x2636 96)) x2616) (= (x754 x1288) x2121) (= (x754 x2616) x1252) (= (x1260 x1380 x59) x1080) (= (x754 x116) x923) (= x2567 (x754 x2636)) (= x2412 (x484 (+ 64 x2636))) (= (x754 x3138) x820) (= x790 (x484 (+ 160 x2636))) (= (x484 (+ 32 x2636)) x641) (= (x704 x1380 x2490 x599 x2872 x2964 x1377 x2094 x794) x1526) (= x636 (x754 x1871)) (= x98 (x754 x2636)) (= x1281 (x754 x2412)) (= x3157 (x331 x1380 x2868 x636 x1281 x279 x2383)) (= x3035 (x754 x2636)) (= (x484 (+ 64 x2636)) x2276) (= x1085 (x242 x1380 x1013 x878 x1947)) (= (x484 (+ x2636 128)) x2692) (= (x754 x2636) x2868) (= (x484 (+ 64 x2636)) x1990) (= (x754 x3036) x2529) (= x1355 (x484 (+ 192 x2636))) (= (x484 (+ 128 x2636)) x3041) (= x692 (x1743 0)) (= (x754 x790) x2094) (= (x484 (+ x722 32)) x2603) (= x3138 (x484 (+ 32 x2636))) (= x2490 (x754 x2636)) (= x2743 (x484 (+ x2636 128))) (= (x754 x2276) x791) (= x1385 (ite (= x1380 0) x692 (ite (>= 32 x1380) x1080 (ite (<= x1380 64) x510 (ite (<= x1380 96) x1085 (ite (>= 128 x1380) x1097 (ite (<= x1380 160) x3157 (ite (<= x1380 192) x1039 (ite (>= 224 x1380) x1526 x1867))))))))) (= x1793 (x484 (+ 160 x2636))) (= (x754 x3148) x599) (= x2500 (x484 (+ 96 x2636))) (= x795 (> x2218 0)) (= x150 (x754 x641)) (= x1083 (x484 (+ x1690 32))) (= (x484 (+ x2636 32)) x3148) (= x2946 (x754 x2743)) (= x2218 (x754 x722)) (= (x754 x1355) x794) (= x1947 (x754 x1990)) (= x2383 (x754 x2692)) (= x116 (x484 (+ x2636 96))) (= (x754 x3041) x1377) (= x3036 (x484 (+ x2636 64))) (= x59 (x754 x2636)) (= x1288 (x484 (+ x2636 32))) (= x3102 (x484 (+ x2636 96)))) (and (=> (and (and (= (x484 (+ 32 x1083)) x2394) (= (x754 x2603) x2805) (= x1313 (> x2218 1)) (= x2744 (x484 (+ 32 x2603)))) x795) (and (=> (and x1313 (and (= x2637 (x484 (+ x2394 32))) (= (x484 (+ 32 x2744)) x2833) (= (x2414 x2744) x2883) (= (< 2 x2218) x3076))) (and (=> (and (and (= (< 3 x2218) x2404) (= (x484 (+ 32 x2833)) x927) (= (x484 (+ x2637 32)) x849) (= x3073 (x1284 x2833))) x3076) (and (=> (and (not x2404) (and (= x1487 3) (= x849 x2843) (= x927 x725))) x582) (=> x2404 x877))) (=> (and (and (= x725 x2833) (= 2 x1487) (= x2843 x2637)) (not x3076)) x582))) (=> (and (and (= x2843 x2394) (= x2744 x725) (= x1487 1)) (not x1313)) x582))) (=> (and (and (= x2843 x1083) (= x725 x2603) (= x1487 0)) (not x795)) x582)))))))
(assert (x563 x2073))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x242 x1874 x980 x1271 x891)))
(assert (x563 x2001))
(assert (= x415 (and (not x143) x2709)))
(assert (x564 x836))
(assert (x563 x1453))
(check-sat)
(exit)
