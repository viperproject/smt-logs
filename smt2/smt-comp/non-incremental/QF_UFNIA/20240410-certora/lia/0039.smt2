(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x415 () Int)
(declare-fun x195 () Int)
(declare-fun x50 () Int)
(declare-fun x569 () Int)
(declare-fun x661 () Bool)
(declare-fun x540 () Int)
(declare-fun x1228 () Bool)
(declare-fun x190 () Int)
(declare-fun x768 () Bool)
(declare-fun x413 () Int)
(declare-fun x804 () Int)
(declare-fun x943 () Int)
(declare-fun x149 () Int)
(declare-fun x473 () Int)
(declare-fun x817 () Int)
(declare-fun x301 () Int)
(declare-fun x18 () Int)
(declare-fun x851 () Int)
(declare-fun x981 () Int)
(declare-fun x665 () Int)
(declare-fun x603 () Bool)
(declare-fun x1118 (Int Int) Int)
(declare-fun x1237 () Int)
(declare-fun x909 () Bool)
(declare-fun x830 () Int)
(declare-fun x90 () Bool)
(declare-fun x816 () Int)
(declare-fun x526 () Bool)
(declare-fun x857 () Int)
(declare-fun x133 () Int)
(declare-fun x729 () Int)
(declare-fun x104 () Bool)
(declare-fun x1019 () Int)
(declare-fun x1199 () Int)
(declare-fun x208 () Bool)
(declare-fun x349 () Bool)
(declare-fun x345 () Bool)
(declare-fun x819 () Bool)
(declare-fun x1215 () Int)
(declare-fun x684 () Int)
(declare-fun x302 () Int)
(declare-fun x86 () Int)
(declare-fun x231 () Bool)
(declare-fun x168 () Int)
(declare-fun x3 () Bool)
(declare-fun x884 () Int)
(declare-fun x130 () Bool)
(declare-fun x1053 () Int)
(declare-fun x567 () Bool)
(declare-fun x347 () Int)
(declare-fun x639 () Int)
(declare-fun x1190 () Int)
(declare-fun x939 () Int)
(declare-fun x421 () Int)
(declare-fun x763 () Int)
(declare-fun x1102 () Int)
(declare-fun x119 () Int)
(declare-fun x845 () Int)
(declare-fun x734 () Int)
(declare-fun x594 () Bool)
(declare-fun x409 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x290 () Bool)
(declare-fun x748 () Int)
(declare-fun x258 () Int)
(declare-fun x873 () Int)
(declare-fun x535 () Bool)
(declare-fun x69 () Int)
(declare-fun x255 () Int)
(declare-fun x801 () Int)
(declare-fun x657 () Bool)
(declare-fun x89 () Bool)
(declare-fun x440 () Int)
(declare-fun x498 (Int) Int)
(declare-fun x81 () Bool)
(declare-fun x454 () Bool)
(declare-fun x340 () Bool)
(declare-fun x795 () Int)
(declare-fun x311 () Bool)
(declare-fun x416 () Int)
(declare-fun x620 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1018 () Int)
(declare-fun x277 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x557 () Int)
(declare-fun x1207 () Int)
(declare-fun x810 () Int)
(declare-fun x1221 () Bool)
(declare-fun x292 () Int)
(declare-fun x623 () Int)
(declare-fun x691 () Int)
(declare-fun x323 () Int)
(declare-fun x545 (Int) Int)
(declare-fun x916 () Int)
(declare-fun x1011 () Int)
(declare-fun x469 () Int)
(declare-fun x37 () Int)
(declare-fun x1218 () Int)
(declare-fun x293 () Int)
(declare-fun x689 () Int)
(declare-fun x55 () Int)
(declare-fun x310 () Int)
(declare-fun x22 () Bool)
(declare-fun x864 () Int)
(declare-fun x509 () Int)
(declare-fun x1034 () Bool)
(declare-fun x387 () Bool)
(declare-fun x54 () Bool)
(declare-fun x970 () Int)
(declare-fun x920 () Int)
(declare-fun x591 () Int)
(declare-fun x403 () Int)
(declare-fun x209 () Int)
(declare-fun x954 () Bool)
(declare-fun x966 () Bool)
(declare-fun x1083 () Int)
(declare-fun x1025 () Bool)
(declare-fun x419 () Int)
(declare-fun x298 () Bool)
(declare-fun x667 () Int)
(declare-fun x915 () Bool)
(declare-fun x871 () Int)
(declare-fun x726 () Int)
(declare-fun x1026 () Int)
(declare-fun x894 (Int) Int)
(declare-fun x26 () Int)
(declare-fun x859 () Int)
(declare-fun x846 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x272 () Int)
(declare-fun x786 () Int)
(declare-fun x161 () Int)
(declare-fun x478 () Int)
(declare-fun x12 () Int)
(declare-fun x759 () Int)
(declare-fun x877 () Int)
(declare-fun x715 () Int)
(declare-fun x362 () Int)
(declare-fun x181 () Int)
(declare-fun x695 () Bool)
(declare-fun x634 () Int)
(declare-fun x426 () Int)
(declare-fun x882 () Int)
(declare-fun x470 () Bool)
(declare-fun x959 () Int)
(declare-fun x614 () Bool)
(declare-fun x285 () Int)
(declare-fun x1056 () Bool)
(declare-fun x110 (Int) Int)
(declare-fun x363 () Int)
(declare-fun x865 () Int)
(declare-fun x418 () Bool)
(declare-fun x568 () Int)
(declare-fun x390 (Int Int) Int)
(declare-fun x214 () Int)
(declare-fun x150 () Int)
(declare-fun x800 () Int)
(declare-fun x869 () Int)
(declare-fun x256 () Bool)
(declare-fun x751 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x222 () Int)
(declare-fun x385 () Int)
(declare-fun x367 () Int)
(declare-fun x1217 () Int)
(declare-fun x1093 () Int)
(declare-fun x549 () Bool)
(declare-fun x411 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x1253 () Int)
(declare-fun x196 () Bool)
(declare-fun x6 (Int) Int)
(declare-fun x844 () Int)
(declare-fun x1039 () Bool)
(declare-fun x93 () Int)
(declare-fun x761 () Bool)
(declare-fun x511 () Int)
(declare-fun x194 () Int)
(declare-fun x174 () Int)
(declare-fun x893 () Int)
(declare-fun x849 () Bool)
(declare-fun x100 () Bool)
(declare-fun x158 () Int)
(declare-fun x1060 () Int)
(declare-fun x688 () Int)
(declare-fun x330 () Int)
(declare-fun x52 () Int)
(declare-fun x822 () Bool)
(declare-fun x648 () Int)
(declare-fun x1041 () Int)
(declare-fun x233 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x927 () Int)
(declare-fun x171 () Int)
(declare-fun x43 () Bool)
(declare-fun x531 () Int)
(declare-fun x853 () Bool)
(declare-fun x904 () Bool)
(declare-fun x276 () Int)
(declare-fun x687 () Int)
(declare-fun x280 () Int)
(declare-fun x737 () Bool)
(declare-fun x111 () Int)
(declare-fun x683 () Int)
(declare-fun x296 () Bool)
(declare-fun x805 () Int)
(declare-fun x923 () Int)
(declare-fun x736 () Int)
(declare-fun x766 () Int)
(declare-fun x394 () Int)
(declare-fun x1137 () Int)
(declare-fun x709 () Bool)
(declare-fun x326 () Int)
(declare-fun x777 () Int)
(declare-fun x905 () Int)
(declare-fun x179 () Int)
(declare-fun x19 () Bool)
(declare-fun x547 () Int)
(declare-fun x600 () Int)
(declare-fun x444 () Int)
(declare-fun x117 () Bool)
(declare-fun x1120 () Int)
(declare-fun x66 () Bool)
(declare-fun x294 () Bool)
(declare-fun x1112 () Int)
(declare-fun x928 () Int)
(declare-fun x397 () Int)
(declare-fun x483 () Int)
(declare-fun x886 () Int)
(declare-fun x601 () Bool)
(declare-fun x30 () Int)
(declare-fun x1173 () Int)
(declare-fun x148 () Int)
(declare-fun x942 () Bool)
(declare-fun x762 () Int)
(declare-fun x1111 () Int)
(declare-fun x774 () Bool)
(declare-fun x1033 () Int)
(declare-fun x564 () Bool)
(declare-fun x1197 () Int)
(declare-fun x234 () Int)
(declare-fun x333 () Int)
(declare-fun x391 () Int)
(declare-fun x516 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x550 () Int)
(declare-fun x738 () Int)
(declare-fun x400 () Int)
(declare-fun x1094 () Int)
(declare-fun x858 () Int)
(declare-fun x1065 () Int)
(declare-fun x765 () Bool)
(declare-fun x1089 () Int)
(declare-fun x1020 () Int)
(declare-fun x574 () Int)
(declare-fun x581 () Int)
(declare-fun x99 (Int) Int)
(declare-fun x559 () Bool)
(declare-fun x359 () Int)
(declare-fun x1057 () Int)
(declare-fun x811 () Int)
(declare-fun x835 () Int)
(declare-fun x1244 () Int)
(declare-fun x245 () Int)
(declare-fun x512 () Int)
(declare-fun x1201 () Bool)
(declare-fun x525 () Bool)
(declare-fun x1006 () Int)
(declare-fun x307 () Bool)
(declare-fun x1200 () Int)
(declare-fun x1105 () Int)
(declare-fun x201 () Bool)
(declare-fun x229 (Int Int Int) Int)
(declare-fun x41 () Bool)
(declare-fun x855 () Bool)
(declare-fun x315 () Bool)
(declare-fun x408 () Int)
(declare-fun x730 () Int)
(declare-fun x668 () Int)
(declare-fun x464 () Int)
(declare-fun x605 () Int)
(declare-fun x732 () Int)
(declare-fun x1169 () Int)
(declare-fun x152 () Int)
(declare-fun x575 () Int)
(declare-fun x53 () Int)
(declare-fun x176 () Int)
(declare-fun x155 () Int)
(declare-fun x393 () Bool)
(declare-fun x270 () Int)
(declare-fun x685 () Int)
(declare-fun x666 () Int)
(declare-fun x33 () Int)
(declare-fun x1066 () Int)
(declare-fun x626 () Int)
(declare-fun x338 () Int)
(declare-fun x383 () Int)
(declare-fun x891 () Bool)
(declare-fun x376 () Bool)
(declare-fun x1178 () Int)
(declare-fun x395 () Int)
(declare-fun x70 () Int)
(declare-fun x608 () Int)
(declare-fun x456 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x237 () Int)
(declare-fun x253 () Int)
(declare-fun x673 () Int)
(declare-fun x295 () Int)
(declare-fun x887 () Int)
(declare-fun x97 () Int)
(declare-fun x202 () Bool)
(declare-fun x98 () Int)
(declare-fun x875 () Int)
(declare-fun x655 () Int)
(declare-fun x462 () Int)
(declare-fun x669 () Int)
(declare-fun x378 () Int)
(declare-fun x847 () Int)
(declare-fun x1158 (Int) Int)
(declare-fun x1235 () Int)
(declare-fun x1241 () Int)
(declare-fun x73 () Int)
(declare-fun x365 () Int)
(declare-fun x11 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x7 () Bool)
(declare-fun x616 () Int)
(declare-fun x1188 () Int)
(declare-fun x481 () Bool)
(declare-fun x40 () Bool)
(declare-fun x227 () Int)
(declare-fun x309 () Int)
(declare-fun x197 () Bool)
(declare-fun x595 () Bool)
(declare-fun x31 () Bool)
(declare-fun x696 () Bool)
(declare-fun x433 () Int)
(declare-fun x577 () Int)
(declare-fun x513 () Int)
(declare-fun x704 () Int)
(declare-fun x789 (Int) Int)
(declare-fun x785 (Int) Int)
(declare-fun x596 () Int)
(declare-fun x961 () Bool)
(declare-fun x1103 () Int)
(declare-fun x1189 () Int)
(declare-fun x165 () Bool)
(declare-fun x1249 () Int)
(declare-fun x519 () Int)
(declare-fun x228 () Bool)
(declare-fun x1208 () Int)
(declare-fun x407 () Int)
(declare-fun x297 () Bool)
(declare-fun x332 () Int)
(declare-fun x281 (Int Int) Int)
(declare-fun x824 () Int)
(declare-fun x791 () Int)
(declare-fun x23 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x1140 () Int)
(declare-fun x282 () Int)
(declare-fun x703 () Int)
(declare-fun x361 () Int)
(declare-fun x80 () Bool)
(declare-fun x226 () Int)
(declare-fun x556 () Int)
(declare-fun x211 () Bool)
(declare-fun x495 () Int)
(declare-fun x834 () Int)
(declare-fun x1045 () Bool)
(declare-fun x261 () Bool)
(declare-fun x373 () Bool)
(declare-fun x455 () Bool)
(declare-fun x465 () Int)
(declare-fun x14 () Int)
(declare-fun x1172 () Int)
(declare-fun x721 () Int)
(declare-fun x1092 () Bool)
(declare-fun x754 (Int) Int)
(declare-fun x491 () Int)
(declare-fun x1147 () Int)
(declare-fun x1236 () Int)
(declare-fun x1125 () Int)
(declare-fun x1091 () Int)
(declare-fun x1117 () Int)
(declare-fun x127 () Int)
(declare-fun x1202 () Bool)
(declare-fun x141 () Int)
(declare-fun x424 () Int)
(declare-fun x612 () Int)
(declare-fun x467 () Int)
(declare-fun x906 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1225 () Int)
(declare-fun x522 () Int)
(declare-fun x861 () Int)
(declare-fun x989 () Int)
(declare-fun x303 () Int)
(declare-fun x852 () Bool)
(declare-fun x635 () Int)
(declare-fun x1229 () Int)
(declare-fun x173 () Int)
(declare-fun x191 () Int)
(declare-fun x4 () Bool)
(declare-fun x640 () Int)
(declare-fun x812 () Bool)
(declare-fun x135 () Int)
(declare-fun x123 () Int)
(declare-fun x860 () Int)
(declare-fun x578 () Int)
(declare-fun x460 () Int)
(declare-fun x843 () Bool)
(declare-fun x452 () Int)
(declare-fun x563 () Bool)
(declare-fun x589 () Bool)
(declare-fun x1115 () Int)
(declare-fun x1222 () Int)
(declare-fun x300 () Int)
(declare-fun x1138 () Int)
(declare-fun x477 () Int)
(declare-fun x299 () Bool)
(declare-fun x254 () Int)
(declare-fun x61 () Bool)
(declare-fun x711 () Bool)
(declare-fun x164 () Int)
(declare-fun x85 () Bool)
(declare-fun x74 () Bool)
(declare-fun x787 () Bool)
(declare-fun x1012 () Int)
(declare-fun x806 () Int)
(declare-fun x757 () Bool)
(declare-fun x951 (Int) Bool)
(declare-fun x1106 () Int)
(declare-fun x219 () Bool)
(declare-fun x788 () Int)
(declare-fun x794 () Bool)
(declare-fun x206 (Int) Int)
(declare-fun x528 () Int)
(declare-fun x461 () Int)
(declare-fun x539 () Bool)
(declare-fun x275 () Int)
(declare-fun x690 () Int)
(declare-fun x572 () Int)
(declare-fun x486 (Int) Int)
(declare-fun x1226 () Bool)
(declare-fun x619 () Int)
(declare-fun x278 () Int)
(declare-fun x342 () Int)
(declare-fun x423 () Int)
(declare-fun x108 () Int)
(declare-fun x719 () Int)
(declare-fun x186 () Int)
(declare-fun x321 () Int)
(declare-fun x159 (Int) Int)
(declare-fun x735 () Bool)
(declare-fun x289 () Int)
(declare-fun x533 () Int)
(declare-fun x354 () Int)
(declare-fun x1086 () Int)
(declare-fun x796 () Int)
(declare-fun x1231 () Bool)
(declare-fun x198 () Bool)
(declare-fun x121 () Int)
(declare-fun x982 () Int)
(declare-fun x1016 () Bool)
(declare-fun x382 (Int) Int)
(declare-fun x84 () Bool)
(declare-fun x1124 () Int)
(declare-fun x548 () Int)
(declare-fun x1078 () Bool)
(declare-fun x329 () Int)
(declare-fun x139 () Int)
(declare-fun x841 () Bool)
(declare-fun x947 () Bool)
(declare-fun x1152 () Int)
(declare-fun x193 () Bool)
(declare-fun x827 () Int)
(declare-fun x1247 () Bool)
(declare-fun x712 () Int)
(declare-fun x654 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x34 () Int)
(declare-fun x217 () Bool)
(declare-fun x322 () Bool)
(declare-fun x702 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1058 () Int)
(declare-fun x122 (Int) Int)
(declare-fun x870 (Int) Int)
(declare-fun x377 () Int)
(declare-fun x68 () Bool)
(declare-fun x91 () Int)
(declare-fun x450 () Int)
(declare-fun x867 () Int)
(declare-fun x585 () Int)
(declare-fun x558 () Bool)
(declare-fun x449 () Int)
(declare-fun x1107 () Int)
(declare-fun x890 () Int)
(declare-fun x1210 () Int)
(declare-fun x618 () Bool)
(declare-fun x932 () Int)
(declare-fun x1205 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x17 () Bool)
(declare-fun x740 () Int)
(declare-fun x250 () Int)
(declare-fun x203 () Int)
(declare-fun x597 () Int)
(declare-fun x38 () Bool)
(declare-fun x584 () Int)
(declare-fun x694 () Int)
(declare-fun x918 () Int)
(declare-fun x479 () Int)
(declare-fun x247 () Int)
(declare-fun x64 () Int)
(declare-fun x622 () Int)
(declare-fun x997 () Bool)
(declare-fun x375 () Int)
(declare-fun x964 () Bool)
(declare-fun x974 () Int)
(declare-fun x986 () Int)
(declare-fun x926 () Bool)
(declare-fun x955 () Int)
(declare-fun x994 () Bool)
(declare-fun x224 () Bool)
(declare-fun x32 () Int)
(declare-fun x223 () Int)
(declare-fun x1017 () Int)
(declare-fun x441 () Int)
(declare-fun x996 () Int)
(declare-fun x134 () Int)
(declare-fun x431 () Bool)
(declare-fun x325 () Int)
(declare-fun x1095 () Int)
(declare-fun x1155 () Int)
(declare-fun x897 () Int)
(declare-fun x643 () Int)
(declare-fun x770 () Int)
(declare-fun x458 () Int)
(declare-fun x1174 () Int)
(declare-fun x199 () Bool)
(declare-fun x571 () Int)
(declare-fun x896 () Int)
(declare-fun x466 () Int)
(declare-fun x701 () Int)
(declare-fun x971 () Int)
(declare-fun x1 () Int)
(declare-fun x1206 () Int)
(declare-fun x463 () Int)
(declare-fun x911 () Int)
(declare-fun x866 () Int)
(declare-fun x948 () Int)
(declare-fun x485 () Int)
(declare-fun x405 () Int)
(declare-fun x156 () Int)
(declare-fun x1148 () Bool)
(declare-fun x714 () Bool)
(declare-fun x185 () Int)
(declare-fun x28 () Int)
(declare-fun x518 () Bool)
(declare-fun x957 () Bool)
(declare-fun x213 () Int)
(declare-fun x336 () Int)
(declare-fun x45 () Int)
(declare-fun x767 () Bool)
(declare-fun x136 () Bool)
(declare-fun x976 () Bool)
(declare-fun x1126 () Int)
(declare-fun x1157 () Bool)
(declare-fun x488 () Int)
(declare-fun x771 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x1213 () Int)
(declare-fun x924 () Int)
(declare-fun x808 () Int)
(declare-fun x472 () Int)
(declare-fun x25 () Int)
(declare-fun x1074 () Int)
(declare-fun x743 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x180 () Int)
(declare-fun x529 () Int)
(declare-fun x96 () Bool)
(declare-fun x1149 () Int)
(declare-fun x1242 () Int)
(declare-fun x946 () Int)
(declare-fun x706 () Int)
(declare-fun x793 () Bool)
(declare-fun x713 () Int)
(declare-fun x1232 () Int)
(declare-fun x372 () Int)
(declare-fun x723 () Int)
(declare-fun x848 () Int)
(declare-fun x679 () Int)
(declare-fun x678 () Int)
(declare-fun x406 () Int)
(declare-fun x662 () Int)
(declare-fun x504 () Int)
(declare-fun x1133 () Int)
(declare-fun x837 () Int)
(declare-fun x304 () Int)
(declare-fun x912 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x630 () Bool)
(declare-fun x351 () Int)
(declare-fun x324 () Int)
(declare-fun x328 () Int)
(declare-fun x642 () Int)
(declare-fun x728 () Int)
(declare-fun x901 () Int)
(declare-fun x833 () Int)
(declare-fun x113 () Bool)
(declare-fun x900 () Bool)
(declare-fun x617 () Int)
(declare-fun x613 () Int)
(declare-fun x1072 () Int)
(declare-fun x717 () Int)
(declare-fun x476 () Int)
(declare-fun x1186 () Int)
(declare-fun x656 () Int)
(declare-fun x888 () Int)
(declare-fun x1131 () Int)
(declare-fun x249 () Bool)
(declare-fun x160 () Int)
(declare-fun x883 () Bool)
(declare-fun x625 () Bool)
(declare-fun x979 () Int)
(declare-fun x1063 () Int)
(declare-fun x1068 () Int)
(declare-fun x1154 () Int)
(declare-fun x1051 () Int)
(declare-fun x821 () Int)
(declare-fun x263 () Bool)
(declare-fun x975 () Int)
(declare-fun x1196 () Int)
(declare-fun x632 () Int)
(declare-fun x536 () Int)
(declare-fun x265 (Int) Int)
(declare-fun x306 () Bool)
(declare-fun x681 () Int)
(declare-fun x749 () Bool)
(declare-fun x314 () Int)
(declare-fun x1073 () Int)
(declare-fun x537 () Int)
(declare-fun x271 () Int)
(declare-fun x167 () Int)
(declare-fun x720 () Int)
(declare-fun x1164 () Bool)
(declare-fun x984 () Bool)
(declare-fun x500 () Int)
(declare-fun x107 () Int)
(declare-fun x934 () Int)
(declare-fun x876 (Int) Int)
(declare-fun x1014 () Int)
(declare-fun x606 () Int)
(declare-fun x1079 () Int)
(declare-fun x551 () Bool)
(declare-fun x967 () Bool)
(declare-fun x621 () Int)
(declare-fun x716 () Int)
(declare-fun x784 () Int)
(declare-fun x1151 () Bool)
(declare-fun x1233 () Int)
(declare-fun x313 () Bool)
(declare-fun x284 () Int)
(declare-fun x1119 () Int)
(declare-fun x839 () Bool)
(declare-fun x1245 () Int)
(declare-fun x1143 () Bool)
(declare-fun x371 () Bool)
(declare-fun x60 () Bool)
(declare-fun x818 () Bool)
(declare-fun x65 () Int)
(declare-fun x653 (Int Int) Int)
(declare-fun x243 () Bool)
(declare-fun x1023 () Int)
(declare-fun x57 () Bool)
(declare-fun x442 () Int)
(declare-fun x1176 () Bool)
(declare-fun x842 () Int)
(declare-fun x468 () Int)
(declare-fun x5 () Bool)
(declare-fun x474 () Int)
(declare-fun x480 () Int)
(declare-fun x686 () Int)
(declare-fun x903 () Int)
(declare-fun x802 () Bool)
(declare-fun x514 () Int)
(declare-fun x1166 () Int)
(declare-fun x501 () Bool)
(declare-fun x675 () Int)
(declare-fun x671 () Int)
(declare-fun x999 () Int)
(declare-fun x510 () Int)
(declare-fun x118 () Bool)
(declare-fun x628 () Int)
(declare-fun x264 () Bool)
(declare-fun x1139 () Int)
(declare-fun x1214 () Int)
(declare-fun x352 () Int)
(declare-fun x308 () Bool)
(declare-fun x1054 (Int) Int)
(declare-fun x992 () Int)
(declare-fun x1101 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x945 () Bool)
(declare-fun x573 () Int)
(declare-fun x1180 () Int)
(declare-fun x956 () Int)
(declare-fun x128 () Bool)
(declare-fun x610 () Int)
(declare-fun x978 () Bool)
(declare-fun x487 () Bool)
(declare-fun x797 () Int)
(declare-fun x182 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x629 () Bool)
(declare-fun x358 () Int)
(declare-fun x48 () Bool)
(declare-fun x952 () Bool)
(declare-fun x921 () Int)
(declare-fun x1022 () Int)
(declare-fun x257 () Bool)
(declare-fun x137 () Bool)
(declare-fun x592 () Bool)
(declare-fun x565 () Int)
(declare-fun x940 () Bool)
(declare-fun x36 () Int)
(declare-fun x953 () Int)
(declare-fun x523 () Int)
(declare-fun x1038 () Bool)
(declare-fun x1183 () Int)
(declare-fun x246 () Int)
(declare-fun x459 () Int)
(declare-fun x990 () Int)
(declare-fun x769 () Int)
(declare-fun x1114 () Int)
(declare-fun x1163 () Int)
(declare-fun x67 () Int)
(declare-fun x554 () Int)
(declare-fun x1198 () Int)
(declare-fun x388 () Bool)
(declare-fun x259 () Bool)
(declare-fun x590 () Int)
(declare-fun x725 () Bool)
(declare-fun x319 () Int)
(declare-fun x922 () Bool)
(declare-fun x178 () Bool)
(declare-fun x707 () Bool)
(declare-fun x1069 () Int)
(declare-fun x755 () Int)
(declare-fun x1191 () Int)
(declare-fun x963 () Int)
(declare-fun x832 () Bool)
(declare-fun x162 () Bool)
(declare-fun x380 () Int)
(declare-fun x649 () Bool)
(declare-fun x56 () Int)
(declare-fun x1048 (Int) Int)
(declare-fun x1204 () Int)
(declare-fun x357 () Bool)
(declare-fun x753 () Int)
(declare-fun x930 () Int)
(declare-fun x937 () Int)
(declare-fun x370 () Int)
(declare-fun x968 () Int)
(declare-fun x1251 () Int)
(declare-fun x850 () Int)
(declare-fun x35 () Int)
(declare-fun x663 () Bool)
(declare-fun x825 () Bool)
(declare-fun x1081 () Int)
(declare-fun x79 () Int)
(declare-fun x680 () Int)
(declare-fun x169 () Int)
(declare-fun x448 () Int)
(declare-fun x1141 () Int)
(declare-fun x798 () Int)
(declare-fun x1076 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x658 () Bool)
(declare-fun x764 () Int)
(declare-fun x1044 () Int)
(declare-fun x316 () Int)
(declare-fun x650 () Int)
(declare-fun x27 () Int)
(declare-fun x862 () Int)
(declare-fun x187 () Int)
(declare-fun x935 () Int)
(declare-fun x938 () Int)
(declare-fun x1130 () Int)
(declare-fun x583 () Int)
(declare-fun x813 () Int)
(declare-fun x120 (Int) Int)
(declare-fun x392 () Int)
(declare-fun x16 (Int) Int)
(declare-fun x335 () Bool)
(declare-fun x132 () Int)
(declare-fun x958 () Int)
(declare-fun x225 () Int)
(declare-fun x1132 (Int) Int)
(declare-fun x1243 () Int)
(declare-fun x1181 (Int) Int)
(declare-fun x489 () Int)
(declare-fun x913 () Int)
(declare-fun x283 (Int) Int)
(declare-fun x1002 () Bool)
(declare-fun x831 () Int)
(declare-fun x1005 () Int)
(declare-fun x814 () Bool)
(declare-fun x386 () Bool)
(declare-fun x699 () Int)
(declare-fun x972 () Int)
(declare-fun x279 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x430 () Bool)
(declare-fun x799 () Int)
(declare-fun x142 () Int)
(declare-fun x244 () Bool)
(declare-fun x1246 () Int)
(declare-fun x101 () Int)
(declare-fun x490 () Bool)
(declare-fun x334 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x741 () Int)
(declare-fun x1193 () Int)
(declare-fun x170 () Bool)
(declare-fun x183 () Int)
(declare-fun x1165 () Int)
(declare-fun x151 () Bool)
(declare-fun x780 () Int)
(declare-fun x236 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x404 () Int)
(declare-fun x106 () Int)
(declare-fun x20 () Int)
(declare-fun x131 () Bool)
(declare-fun x374 () Int)
(declare-fun x266 () Bool)
(declare-fun x854 () Int)
(declare-fun x1134 () Int)
(declare-fun x436 () Bool)
(declare-fun x355 () Int)
(declare-fun x779 () Bool)
(declare-fun x838 (Int) Int)
(declare-fun x914 () Int)
(declare-fun x881 () Bool)
(declare-fun x820 () Int)
(declare-fun x499 () Bool)
(declare-fun x235 () Int)
(declare-fun x437 () Int)
(declare-fun x49 () Bool)
(declare-fun x586 () Bool)
(declare-fun x1127 () Int)
(declare-fun x420 () Int)
(declare-fun x908 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x422 () Int)
(declare-fun x166 () Int)
(declare-fun x553 () Int)
(declare-fun x242 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1224 () Int)
(declare-fun x1032 () Bool)
(declare-fun x1194 () Int)
(declare-fun x241 () Int)
(declare-fun x919 () Int)
(declare-fun x337 () Int)
(declare-fun x401 () Int)
(declare-fun x221 () Int)
(declare-fun x140 () Int)
(declare-fun x215 () Int)
(declare-fun x83 () Bool)
(declare-fun x451 () Int)
(declare-fun x428 () Bool)
(declare-fun x238 () Int)
(declare-fun x607 () Int)
(declare-fun x615 () Bool)
(declare-fun x172 () Int)
(declare-fun x1062 () Int)
(declare-fun x872 () Int)
(declare-fun x660 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x521 () Int)
(declare-fun x1234 () Int)
(declare-fun x598 () Int)
(declare-fun x863 () Bool)
(declare-fun x207 () Int)
(declare-fun x232 () Int)
(declare-fun x599 () Bool)
(declare-fun x346 () Int)
(declare-fun x1220 () Bool)
(declare-fun x772 () Int)
(declare-fun x750 () Int)
(declare-fun x350 () Bool)
(declare-fun x47 () Int)
(declare-fun x412 () Int)
(declare-fun x76 () Bool)
(declare-fun x530 () Bool)
(declare-fun x542 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x402 () Int)
(declare-fun x646 () Bool)
(declare-fun x1070 () Int)
(declare-fun x126 () Int)
(declare-fun x188 () Bool)
(declare-fun x339 () Int)
(declare-fun x1160 () Int)
(declare-fun x453 () Int)
(declare-fun x503 () Int)
(declare-fun x124 () Int)
(declare-fun x1104 () Bool)
(declare-fun x429 () Bool)
(declare-fun x220 () Int)
(declare-fun x1129 () Int)
(declare-fun x977 () Bool)
(declare-fun x189 () Int)
(declare-fun x631 () Int)
(declare-fun x1007 () Bool)
(declare-fun x505 (Int) Int)
(declare-fun x1223 () Int)
(declare-fun x815 () Int)
(declare-fun x931 () Int)
(declare-fun x29 () Bool)
(declare-fun x484 () Int)
(declare-fun x570 () Int)
(declare-fun x604 () Bool)
(declare-fun x758 () Int)
(declare-fun x1015 () Int)
(declare-fun x216 () Int)
(declare-fun x344 () Bool)
(declare-fun x1113 () Int)
(declare-fun x112 () Int)
(declare-fun x446 () Bool)
(declare-fun x125 () Bool)
(declare-fun x369 (Int) Int)
(declare-fun x1036 () Int)
(declare-fun x115 () Bool)
(declare-fun x544 () Bool)
(declare-fun x389 () Int)
(declare-fun x432 () Bool)
(declare-fun x917 (Int) Int)
(declare-fun x366 () Int)
(declare-fun x273 () Bool)
(declare-fun x790 (Int) Int)
(declare-fun x318 () Bool)
(declare-fun x508 () Int)
(declare-fun x828 () Int)
(declare-fun x773 () Bool)
(declare-fun x72 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x251 () Int)
(declare-fun x991 () Int)
(declare-fun x138 () Int)
(declare-fun x443 () Int)
(declare-fun x399 () Int)
(declare-fun x710 () Bool)
(declare-fun x633 () Int)
(declare-fun x980 () Int)
(declare-fun x515 () Int)
(declare-fun x1052 () Int)
(declare-fun x129 () Int)
(declare-fun x998 () Bool)
(declare-fun x240 () Int)
(declare-fun x82 () Int)
(declare-fun x157 () Bool)
(declare-fun x343 () Bool)
(declare-fun x907 () Int)
(declare-fun x944 () Bool)
(declare-fun x87 () Bool)
(declare-fun x177 () Int)
(declare-fun x248 () Bool)
(declare-fun x949 () Int)
(declare-fun x1067 () Bool)
(declare-fun x1055 () Int)
(declare-fun x435 () Int)
(declare-fun x1031 () Bool)
(declare-fun x92 () Int)
(declare-fun x341 () Int)
(declare-fun x410 () Int)
(declare-fun x1116 () Bool)
(declare-fun x9 () Int)
(declare-fun x1162 () Int)
(declare-fun x502 () Bool)
(declare-fun x627 () Int)
(declare-fun x641 (Int Int) Int)
(declare-fun x153 () Bool)
(declare-fun x1029 () Int)
(declare-fun x960 () Int)
(declare-fun x114 () Bool)
(declare-fun x317 () Int)
(declare-fun x51 () Int)
(declare-fun x538 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1219 () Int)
(declare-fun x1123 () Bool)
(declare-fun x200 () Int)
(declare-fun x1216 () Bool)
(declare-fun x950 () Int)
(declare-fun x836 (Int) Int)
(declare-fun x985 () Int)
(declare-fun x902 (Int) Int)
(declare-fun x163 () Bool)
(declare-fun x962 () Int)
(declare-fun x524 () Bool)
(declare-fun x94 () Bool)
(declare-fun x147 () Int)
(declare-fun x645 () Bool)
(declare-fun x693 () Bool)
(declare-fun x379 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x776 () Int)
(declare-fun x102 () Bool)
(declare-fun x1146 () Int)
(declare-fun x497 () Int)
(declare-fun x1156 () Bool)
(declare-fun x941 () Int)
(declare-fun x705 () Int)
(declare-fun x494 () Int)
(declare-fun x718 () Bool)
(declare-fun x414 () Int)
(declare-fun x1061 () Int)
(declare-fun x1248 (Int) Int)
(declare-fun x722 () Bool)
(declare-fun x457 () Int)
(define-fun x109 ((x745 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x745) (>= x745 0)) x745 (- x745 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x331 ((x745 Int)) Int (ite (and (< x745 0) (>= x745 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x745 115792089237316195423570985008687907853269984665640564039457584007913129639936) x745))
(define-fun x1203 ((x745 Int)) Int (ite (and (>= x745 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x745)) x745 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x745) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x745)) (- x745 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x745 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x745 0)) (+ x745 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x281 x745 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x697 ((x840 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x840) (<= 0 x840)))
(define-fun x925 ((x840 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x840) (>= x840 0)))
(define-fun x778 ((x840 Int) (x212 Int)) Bool (= (* x212 x840) (x390 x840 x212)))
(define-fun x1047 ((x840 Int) (x212 Int)) Bool (and (= (- (* (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936) x840) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x390 (- x840 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x390 x840 (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x840 (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x212 x840) (* x212 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x390 (- x840 115792089237316195423570985008687907853269984665640564039457584007913129639936) x212))))
(define-fun x291 ((x840 Int) (x212 Int)) Bool (=> (and (< 0 x840) (< 0 x212)) (= (= x212 (x641 (x1203 (x390 x840 x212)) x840)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x390 x840 x212)))))
(define-fun x1128 ((x840 Int) (x212 Int)) Bool (=> (and (not (= x212 0)) (not (= 0 x840))) (and (= (x641 (x390 x840 x212) x840) x212) (= (x641 (x390 x840 x212) x212) x840))))
(define-fun x320 ((x840 Int) (x212 Int)) Bool (=> (and (< 0 x212) (> x840 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x390 x840 x212)) (< (x641 115792089237316195423570985008687907853269984665640564039457584007913129639935 x840) x212))))
(define-fun x566 ((x840 Int) (x212 Int)) Bool (and (= (x1203 (x390 x840 x212)) (x1203 (x390 x840 (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1203 (x390 (- x840 115792089237316195423570985008687907853269984665640564039457584007913129639936) x212)) (x1203 (x390 x840 x212))) (= (x1203 (x390 (- x840 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1203 (x390 x840 x212)))))
(define-fun x507 ((x840 Int) (x212 Int)) Bool (and (=> (and (and (<= x212 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x212)) (and (> x840 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x840))) (= (>= (x641 57896044618658097711785492504343953926634992332820282019728792003956564819968 x212) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x840)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x390 (- x840 115792089237316195423570985008687907853269984665640564039457584007913129639936) x212)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x212) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x212)) (and (> x840 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x840))) (= (<= (x390 (- x840 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x641 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x212)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x840)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x212) (> x212 0)) (and (< 0 x840) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x840))) (= (>= (x641 57896044618658097711785492504343953926634992332820282019728792003956564819967 x212) x840) (<= (x390 x840 x212) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x212) (<= x212 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x840) (> x840 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x212) (x641 57896044618658097711785492504343953926634992332820282019728792003956564819968 x840)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x390 x840 (- x212 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x10 ((x840 Int) (x212 Int)) Bool (and (x778 x840 x212) (x507 x840 x212) (x1128 x840 x212) (x566 x840 x212) (x1047 x840 x212) (x291 x840 x212) (x320 x840 x212)))
(define-fun x192 ((x840 Int)) Bool (and (= 0 (x390 0 x840)) (= 0 (x390 x840 0))))
(define-fun x364 ((x840 Int)) Bool (and (= (x390 x840 1) x840) (= (x390 1 x840) x840)))
(define-fun x75 ((x840 Int)) Bool (and (x364 x840) (x192 x840)))
(define-fun x988 ((x840 Int) (x212 Int)) Bool (=> (and (< 0 x840) (> x212 0)) (and (>= x840 (x641 x840 x212)) (>= (x641 x840 x212) 0))))
(define-fun x77 ((x840 Int) (x212 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x840) (>= x840 0)) (and (<= 1 x212) (< x212 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (<= 0 (x641 x840 x212)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x641 x840 x212)))))
(define-fun x39 ((x840 Int) (x212 Int)) Bool (=> (and (< x212 x840) (> x212 1)) (> x840 (x641 x840 x212))))
(define-fun x1240 ((x840 Int) (x212 Int)) Bool (=> (and (< 0 x840) (< 0 x212)) (= (= 0 (x641 x840 x212)) (> x212 x840))))
(define-fun x13 ((x840 Int) (x212 Int)) Bool (=> (and (> x840 0) (> x212 0)) (and (> (x390 (x641 x840 x212) x212) (- x840 x212)) (<= (x390 (x641 x840 x212) x212) x840))))
(define-fun x580 ((x840 Int) (x212 Int)) Bool (and (x39 x840 x212) (x988 x840 x212) (x77 x840 x212) (x13 x840 x212) (x1240 x840 x212)))
(define-fun x1145 ((x840 Int)) Bool (= (x641 0 x840) 0))
(define-fun x562 ((x840 Int)) Bool (= (x641 x840 1) x840))
(define-fun x239 ((x840 Int)) Bool (=> (not (= x840 0)) (= (x641 x840 x840) 1)))
(define-fun x144 ((x840 Int)) Bool (and (x239 x840) (x1145 x840) (x562 x840)))
(define-fun x889 ((x840 Int) (x212 Int)) Bool (= (x390 x212 x840) (x390 x840 x212)))
(define-fun x983 ((x840 Int) (x212 Int)) Bool (and (=> (and (< x840 0) (< x212 0)) (> (x390 x840 x212) 0)) (=> (and (< 0 x212) (< 0 x840)) (> (x390 x840 x212) 0)) (=> (and (> x212 0) (< x840 0)) (< (x390 x840 x212) 0)) (=> (and (> x840 0) (< x212 0)) (> 0 (x390 x840 x212)))))
(define-fun x677 ((x840 Int) (x212 Int)) Bool (and (x320 x840 x212) (x1128 x840 x212) (x566 x840 x212) (x291 x840 x212) (x889 x840 x212) (x507 x840 x212) (x983 x840 x212)))
(define-fun x269 ((x840 Int) (x212 Int)) Bool (=> (and (> x840 0) (< 0 x212)) (and (>= x840 (* x212 (x641 x840 x212))) (> (* (x641 x840 x212) x212) (- x840 x212)))))
(define-fun x638 ((x840 Int) (x212 Int)) Bool (and (x77 x840 x212) (x1240 x840 x212) (x988 x840 x212) (x39 x840 x212) (x269 x840 x212)))
(define-fun x1230 ((x611 Int)) Int 0)
(define-fun x1003 ((x611 Int)) Int 0)
(define-fun x286 ((x611 Int)) Int 0)
(define-fun x582 ((x611 Int)) Int 0)
(define-fun x747 ((x611 Int)) Int 0)
(define-fun x445 ((x611 Int)) Int 0)
(define-fun x492 ((x611 Int)) Int 0)
(define-fun x1108 ((x611 Int)) Int 0)
(define-fun x95 ((x611 Int)) Int 0)
(define-fun x587 ((x611 Int)) Int 0)
(define-fun x146 ((x611 Int)) Int 0)
(define-fun x58 ((x611 Int)) Int 0)
(define-fun x965 ((x611 Int)) Int 0)
(define-fun x2 ((x611 Int)) Int 0)
(define-fun x775 ((x611 Int)) Int 0)
(define-fun x1110 ((x611 Int)) Int 0)
(define-fun x1090 ((x611 Int)) Int 0)
(define-fun x576 ((x611 Int)) Int 0)
(define-fun x1071 ((x611 Int)) Int 0)
(define-fun x651 ((x611 Int)) Int 0)
(define-fun x71 ((x611 Int)) Int 0)
(define-fun x700 ((x611 Int)) Int 0)
(define-fun x1153 ((x611 Int)) Int 0)
(define-fun x1167 ((x611 Int)) Int 0)
(define-fun x744 ((x611 Int)) Int 0)
(define-fun x1182 ((x611 Int)) Int 0)
(define-fun x210 ((x611 Int)) Int 0)
(define-fun x987 ((x611 Int)) Int (ite (= x232 x611) x540 (x498 x611)))
(define-fun x674 ((x611 Int)) Int (ite (= x611 x1131) x1139 (x987 x611)))
(define-fun x708 ((x611 Int)) Int (ite (= 128 x611) 65046268500144108725515947876519159634053427686595368352948596820176611049472 (x775 x611)))
(define-fun x874 ((x611 Int)) Int (ite (= 0 x611) x1243 (x790 x611)))
(define-fun x287 ((x611 Int)) Int (ite (and (< x611 160) (<= 128 x611)) (x874 (- x611 128)) (x587 x611)))
(define-fun x1088 ((x611 Int)) Int 0)
(define-fun x895 ((x611 Int)) Int (ite (= x882 x611) x772 (x674 x611)))
(define-fun x898 ((x611 Int)) Int (ite (= x1131 x611) x476 (x895 x611)))
(define-fun x417 ((x611 Int)) Int (ite (= x611 128) 73479928649823986090411545518015415704520669370837392133681365890082828976128 (x445 x611)))
(define-fun x879 ((x611 Int)) Int (ite (= 0 x611) x225 (x1054 x611)))
(define-fun x659 ((x611 Int)) Int (ite (and (<= 128 x611) (> 160 x611)) (x879 (- x611 128)) (x1003 x611)))
(define-fun x1209 ((x611 Int)) Int (ite x558 (x674 x611) (x898 x611)))
(define-fun x1030 ((x611 Int)) Int 0)
(define-fun x724 ((x611 Int)) Int (ite (= x611 x607) x810 (x1209 x611)))
(define-fun x534 ((x611 Int)) Int (ite (= x1131 x611) x713 (x724 x611)))
(define-fun x252 ((x611 Int)) Int (ite (= x611 128) 65046268500144108725515947876519159634053427686595368352948596820176611049472 (x1110 x611)))
(define-fun x482 ((x611 Int)) Int (ite (= 0 x611) x1243 (x1132 x611)))
(define-fun x520 ((x611 Int)) Int (ite (and (>= x611 128) (> 160 x611)) (x482 (- x611 128)) (x146 x611)))
(define-fun x145 ((x611 Int)) Int 0)
(define-fun x1195 ((x611 Int)) Int (ite (= x207 x611) x1253 (x534 x611)))
(define-fun x24 ((x611 Int)) Int (ite (= x1131 x611) x626 (x1195 x611)))
(define-fun x78 ((x611 Int)) Int (ite (= x611 128) 73479928649823986090411545518015415704520669370837392133681365890082828976128 (x492 x611)))
(define-fun x1064 ((x611 Int)) Int (ite (= x611 0) x225 (x99 x611)))
(define-fun x517 ((x611 Int)) Int (ite (and (< x611 160) (<= 128 x611)) (x1064 (- x611 128)) (x286 x611)))
(define-fun x434 ((x611 Int)) Int (ite x170 (x1209 x611) (ite x128 (x24 x611) (x534 x611))))
(define-fun x105 ((x611 Int)) Int 0)
(define-fun x1008 ((x611 Int)) Int (ite (= x611 x37) x467 (x434 x611)))
(define-fun x1082 ((x611 Int)) Int (ite (= x1131 x611) x729 (x1008 x611)))
(define-fun x829 ((x611 Int)) Int (ite (= x611 128) 2982269534398869726892368075078858191162497301233414880515271737943156326400 (x1182 x611)))
(define-fun x868 ((x611 Int)) Int (ite (= 0 x611) x289 (x876 x611)))
(define-fun x561 ((x611 Int)) Int (ite (and (>= x611 128) (> 160 x611)) (x868 (- x611 128)) (x744 x611)))
(define-fun x63 ((x611 Int)) Int 0)
(define-fun x546 ((x611 Int)) Int (ite (= x611 x872) x272 (x1082 x611)))
(define-fun x541 ((x611 Int)) Int (ite (= x1131 x611) x1199 (x546 x611)))
(define-fun x398 ((x611 Int)) Int (ite (= x611 128) 27257352676734538696799184386584609201489566564797675397452801577526421880832 (x1153 x611)))
(define-fun x1049 ((x611 Int)) Int (ite (= 0 x611) x485 (x6 x611)))
(define-fun x46 ((x611 Int)) Int (ite (and (>= x611 128) (> 160 x611)) (x1049 (- x611 128)) (x1071 x611)))
(define-fun x752 ((x611 Int)) Int (ite x518 (x1082 x611) (x541 x611)))
(define-fun x936 ((x611 Int)) Int 0)
(define-fun x552 ((x611 Int)) Int (ite (= x611 x1246) x352 (x752 x611)))
(define-fun x527 ((x611 Int)) Int (ite (= x1131 x611) x14 (x552 x611)))
(define-fun x438 ((x611 Int)) Int (ite (= x611 128) 27257352676734538696799184386584609201489566564797675397452801577526421880832 (x1167 x611)))
(define-fun x59 ((x611 Int)) Int (ite (= 0 x611) x485 (x785 x611)))
(define-fun x260 ((x611 Int)) Int (ite (and (<= 128 x611) (> 160 x611)) (x59 (- x611 128)) (x651 x611)))
(define-fun x1004 ((x611 Int)) Int (ite x1034 (x752 x611) (x527 x611)))
(define-fun x670 ((x611 Int)) Int 0)
(define-fun x602 ((x611 Int)) Int (ite (= x611 x82) x1241 (x1004 x611)))
(define-fun x756 ((x611 Int)) Int (ite (= x1131 x611) x1137 (x602 x611)))
(define-fun x1136 ((x611 Int)) Int 0)
(define-fun x447 ((x611 Int)) Int (ite (= x611 x1124) x1113 (x756 x611)))
(define-fun x644 ((x611 Int)) Int (ite (= x1131 x611) x155 (x447 x611)))
(define-fun x1077 ((x611 Int)) Int 0)
(define-fun x593 ((x611 Int)) Int (ite (= x611 x679) x354 (x644 x611)))
(define-fun x42 ((x611 Int)) Int (ite (= x1131 x611) x668 (x593 x611)))
(define-fun x88 ((x611 Int)) Int (ite (= x611 128) 11303959121341750378730598570842417678143006398153999127348644152793735626752 (x1090 x611)))
(define-fun x496 ((x611 Int)) Int (ite (= 132 x611) x766 (x88 x611)))
(define-fun x652 ((x611 Int)) Int (ite (= 0 x611) x459 (x870 x611)))
(define-fun x892 ((x611 Int)) Int (ite (= x611 128) x459 (x496 x611)))
(define-fun x588 ((x611 Int)) Int (ite (and (< x611 160) (>= x611 128)) (x652 (- x611 128)) (x965 x611)))
(define-fun x1027 ((x611 Int)) Int (ite (= 160 x611) 42484642723563678990085296957100989206263395779143859332068879344986694352896 (x892 x611)))
(define-fun x305 ((x611 Int)) Int (ite (= x611 164) x372 (x1027 x611)))
(define-fun x15 ((x611 Int)) Int (ite (= x611 196) 1 (x305 x611)))
(define-fun x1238 ((x611 Int)) Int (ite (= x611 0) x124 (x789 x611)))
(define-fun x116 ((x611 Int)) Int (ite (= x611 160) x124 (x15 x611)))
(define-fun x637 ((x611 Int)) Int (ite (and (<= 160 x611) (> 192 x611)) (x1238 (- x611 160)) (x71 x611)))
(define-fun x1184 ((x611 Int)) Int (ite (= 192 x611) 75860546588345281898627506740238830481794204685839469173503233872106576936960 (x116 x611)))
(define-fun x230 ((x611 Int)) Int (ite (= 196 x611) x864 (x1184 x611)))
(define-fun x878 ((x611 Int)) Int (ite (= x611 228) 0 (x230 x611)))
(define-fun x826 ((x611 Int)) Int (ite (= 0 x611) x568 (x1048 x611)))
(define-fun x360 ((x611 Int)) Int (ite (= 192 x611) x568 (x878 x611)))
(define-fun x218 ((x611 Int)) Int (ite (and (> 224 x611) (>= x611 192)) (x826 (- x611 192)) (x576 x611)))
(define-fun x439 ((x611 Int)) Int (ite (= x611 224) 67672762823786511731998939545691128838287635524233969611313623556097044381696 (x360 x611)))
(define-fun x856 ((x611 Int)) Int (ite (= x611 228) x319 (x439 x611)))
(define-fun x396 ((x611 Int)) Int (ite (= x611 0) x245 (x1181 x611)))
(define-fun x1097 ((x611 Int)) Int (ite (= x611 224) x245 (x856 x611)))
(define-fun x471 ((x611 Int)) Int (ite (and (>= x611 224) (< x611 256)) (x396 (- x611 224)) (x2 x611)))
(define-fun x274 ((x611 Int)) Int (ite (= x611 256) x864 (x1097 x611)))
(define-fun x312 ((x611 Int)) Int (ite (= 288 x611) x963 (x274 x611)))
(define-fun x823 ((x611 Int)) Int (ite (= x611 320) x319 (x312 x611)))
(define-fun x910 ((x611 Int)) Int (ite (= x611 352) x50 (x823 x611)))
(define-fun x267 ((x611 Int)) Int 0)
(define-fun x154 ((x611 Int)) Int (ite (= x611 x705) x570 (x42 x611)))
(define-fun x995 ((x611 Int)) Int (ite (= x1131 x611) x770 (x154 x611)))
(define-fun x579 ((x611 Int)) Int (ite (= 128 x611) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1108 x611)))
(define-fun x731 ((x611 Int)) Int (ite (= 132 x611) x112 (x579 x611)))
(define-fun x609 ((x611 Int)) Int (ite (= 0 x611) x1114 (x836 x611)))
(define-fun x692 ((x611 Int)) Int (ite (and (< x611 160) (<= 128 x611)) (x609 (- x611 128)) (x582 x611)))
(define-fun x1150 ((x611 Int)) Int 0)
(define-fun x1043 ((x611 Int)) Int (ite (= x362 x611) x1169 (x995 x611)))
(define-fun x624 ((x611 Int)) Int (ite (= x1131 x611) x1208 (x1043 x611)))
(define-fun x803 ((x611 Int)) Int (ite (= x611 128) 75860546588345281898627506740238830481794204685839469173503233872106576936960 (x58 x611)))
(define-fun x733 ((x611 Int)) Int (ite (= x611 132) x815 (x803 x611)))
(define-fun x746 ((x611 Int)) Int (ite (= 164 x611) 0 (x733 x611)))
(define-fun x348 ((x611 Int)) Int (ite (= x611 0) x556 (x902 x611)))
(define-fun x1046 ((x611 Int)) Int (ite (= x611 128) x556 (x746 x611)))
(define-fun x1050 ((x611 Int)) Int (ite (and (< x611 160) (>= x611 128)) (x348 (- x611 128)) (x1046 x611)))
(define-fun x807 ((x611 Int)) Int (ite (= x611 160) 67672762823786511731998939545691128838287635524233969611313623556097044381696 (x1050 x611)))
(define-fun x205 ((x611 Int)) Int (ite (= 164 x611) x553 (x807 x611)))
(define-fun x1042 ((x611 Int)) Int (ite (= 0 x611) x101 (x894 x611)))
(define-fun x327 ((x611 Int)) Int (ite (= x611 160) x101 (x205 x611)))
(define-fun x425 ((x611 Int)) Int (ite (and (>= x611 160) (< x611 192)) (x1042 (- x611 160)) (x327 x611)))
(define-fun x368 ((x611 Int)) Int (ite (= x611 192) 11303959121341750378730598570842417678143006398153999127348644152793735626752 (x425 x611)))
(define-fun x8 ((x611 Int)) Int (ite (= 196 x611) x1233 (x368 x611)))
(define-fun x929 ((x611 Int)) Int (ite (= 0 x611) x1172 (x369 x611)))
(define-fun x647 ((x611 Int)) Int (ite (= x611 192) x1172 (x8 x611)))
(define-fun x782 ((x611 Int)) Int (ite (and (>= x611 192) (> 224 x611)) (x929 (- x611 192)) (x647 x611)))
(define-fun x560 ((x611 Int)) Int (ite (= 224 x611) 42484642723563678990085296957100989206263395779143859332068879344986694352896 (x782 x611)))
(define-fun x973 ((x611 Int)) Int (ite (= 228 x611) x584 (x560 x611)))
(define-fun x933 ((x611 Int)) Int (ite (= x611 260) 1 (x973 x611)))
(define-fun x636 ((x611 Int)) Int (ite (= x611 0) x1005 (x159 x611)))
(define-fun x682 ((x611 Int)) Int (ite (= 224 x611) x1005 (x933 x611)))
(define-fun x739 ((x611 Int)) Int (ite (and (>= x611 224) (> 256 x611)) (x636 (- x611 224)) (x682 x611)))
(define-fun x184 ((x611 Int)) Int (ite (= 256 x611) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x739 x611)))
(define-fun x783 ((x611 Int)) Int (ite (= x611 260) x326 (x184 x611)))
(define-fun x676 ((x611 Int)) Int (ite (= 292 x611) x1131 (x783 x611)))
(define-fun x1211 ((x611 Int)) Int (ite (= x611 324) x939 (x676 x611)))
(define-fun x381 ((x611 Int)) Int (ite (= x27 x611) x1214 (x505 x611)))
(define-fun x175 ((x611 Int)) Int (ite (= x295 x611) x974 (x545 x611)))
(define-fun x742 ((x611 Int)) Int (ite (= x611 x1126) x831 (x175 x611)))
(define-fun x1075 ((x611 Int)) Int (ite (= x611 x213) x643 (x265 x611)))
(define-fun x506 ((x611 Int)) Int (ite (= x611 0) 1 (x283 x611)))
(define-fun x1001 ((x611 Int)) Int (ite (= x611 0) x901 (x1211 x611)))
(define-fun x44 ((x611 Int)) Int (ite (= x195 x611) x715 (x917 x611)))
(define-fun x21 ((x611 Int)) Int (ite (= x611 x1210) x1061 (x44 x611)))
(define-fun x1085 ((x611 Int)) Int (ite (= x611 x440) x359 (x1248 x611)))
(define-fun x493 ((x611 Int)) Int (ite (= x611 0) 1 (x283 x611)))
(define-fun x1135 ((x611 Int)) Int (ite (= x611 0) x190 (x1211 x611)))
(define-fun x885 ((x611 Int)) Int (ite (= x611 x686) x716 (x120 x611)))
(define-fun x698 ((x611 Int)) Int (ite (= x258 x611) x1141 (x885 x611)))
(define-fun x1170 ((x611 Int)) Int (ite (= x611 128) x939 (x1230 x611)))
(define-fun x62 ((x611 Int)) Int (ite (= x611 128) 1 (x1170 x611)))
(define-fun x288 ((x611 Int)) Int (ite (= x611 0) x500 (x283 x611)))
(define-fun x262 ((x611 Int)) Int (ite x722 (x1211 x611) (ite x198 (x1001 x611) (x1135 x611))))
(define-fun x792 ((x611 Int)) Int (ite x722 (x288 x611) (ite x198 (x506 x611) (x493 x611))))
(define-fun x1000 ((x611 Int)) Int (ite x722 (x698 x611) (x120 x611)))
(define-fun x664 ((x611 Int)) Int (ite (and (< x611 32) (<= 0 x611)) (x792 x611) (x262 x611)))
(define-fun x781 ((x611 Int)) Int (ite (= x611 256) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x664 x611)))
(define-fun x1021 ((x611 Int)) Int (ite (= x611 260) x1131 (x781 x611)))
(define-fun x1168 ((x611 Int)) Int (ite (= 292 x611) x584 (x1021 x611)))
(define-fun x1179 ((x611 Int)) Int (ite (= x483 x611) x67 (x110 x611)))
(define-fun x809 ((x611 Int)) Int (ite (= x611 x798) x776 (x1000 x611)))
(define-fun x899 ((x611 Int)) Int (ite (= 256 x611) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1168 x611)))
(define-fun x543 ((x611 Int)) Int (ite (= x611 260) x149 (x899 x611)))
(define-fun x969 ((x611 Int)) Int (ite (= 292 x611) x489 (x543 x611)))
(define-fun x760 ((x611 Int)) Int (ite (= x611 x351) x689 (x809 x611)))
(define-fun x143 ((x611 Int)) Int (ite (= x1225 x611) x86 (x760 x611)))
(define-fun x1009 ((x611 Int)) Int (ite (= 128 x611) x489 (x700 x611)))
(define-fun x356 ((x611 Int)) Int (ite (= x611 128) 1 (x1009 x611)))
(define-fun x993 ((x611 Int)) Int (ite (= x611 0) x186 (x1158 x611)))
(define-fun x103 ((x611 Int)) Int 0)
(define-fun x427 ((x611 Int)) Int (ite (= x611 x93) x126 (x624 x611)))
(define-fun x268 ((x611 Int)) Int (ite (= x611 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x95 x611)))
(define-fun x880 ((x611 Int)) Int (ite (= 132 x611) x606 (x268 x611)))
(define-fun x555 ((x611 Int)) Int (ite (= 0 x611) x380 (x206 x611)))
(define-fun x1010 ((x611 Int)) Int (ite (and (< x611 160) (>= x611 128)) (x555 (- x611 128)) (x747 x611)))
(define-fun x672 ((x840 Int) (x212 Int) (x353 Int) (x204 Int)) Bool (=> (and (<= x840 x353) (>= x212 0) (<= x212 x204) (>= x840 0)) (<= (x390 x840 x212) (x390 x353 x204))))
(define-fun x475 ((x840 Int) (x212 Int) (x353 Int) (x204 Int)) Bool (=> (= x353 x840) (= (x390 x840 (- x212 x204)) (- (x390 x840 x212) (x390 x353 x204)))))
(assert (x677 x740 (- x383 x413)))
(assert (x697 x485))
(assert (x677 x1019 (- x758 x413)))
(assert (x697 x69))
(assert (x697 x1223))
(assert (= (x382 340282366920938463463374607431768211455) 0))
(assert (= (x382 (x229 64 x326 4)) (x229 64 x326 4)))
(assert (x697 x816))
(assert (x697 x1237))
(assert (x75 (- x758 x383)))
(assert (x475 x460 x1173 x413 x572))
(assert (x951 110618525))
(assert (x677 x1019 (- x758 x383)))
(assert (x697 x834))
(assert (x697 x323))
(assert (x672 x209 x690 x460 x1173))
(assert (x475 x1019 x758 x1173 x460))
(assert (x697 x437))
(assert (x697 x488))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x229 64 x149 3)))
(assert (x677 x1173 (- x460 x740)))
(assert (x697 x943))
(assert (x697 x669))
(assert (x697 x806))
(assert (x925 x1058))
(assert (x475 x413 x572 x758 x1019))
(assert (x75 (- x572 x293)))
(assert (x677 x738 (- x293 x413)))
(assert (x697 x1233))
(assert (x677 x1173 (- x460 x383)))
(assert (x697 x372))
(assert (x677 x413 (- x572 x293)))
(assert (x697 x953))
(assert (x475 x293 x738 x383 x740))
(assert (x75 x460))
(assert (x75 (- x738 x209)))
(assert (x475 x383 x740 x209 x690))
(assert (x75 (- x1173 x209)))
(assert (x697 x713))
(assert (< 10000 (x229 64 x1131 x675)))
(assert (x475 x1173 x460 x738 x293))
(assert (x697 x635))
(assert (= (=> (and (and (= x472 4) (= x516 false)) (and (= x389 (x838 x1131)) (= x1130 0) (= 65046268500144108725515947876519159634053427686595368352948596820176611049472 x979) (= (x520 128) x1060) (= x1140 2412700192) (= false x743) (= false x313) (= (x838 x1160) x129) (= false x1100) (= x178 false) (<= x181 127) (= x810 (x1209 x607)) (= 128 x474) (= (x724 x1131) x513) (= false x1045) (>= x129 1) (= x1220 false) (= false x90) (>= x389 1) (= x38 false) (<= x573 127) (>= 127 x181) (= 2412700192 x391) (= x713 x513) (= 4 x226) (= x1157 (< 0 x1060)) (= x1187 false) (<= x573 127) (= x727 false) (= x607 x92))) (and (=> (and (and (= true x296) (= x654 x592) (= x296 x1032)) x1157) x1096) (=> (not x1157) x228))) x87))
(assert (< (x229 64 x1131 x309) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x475 x738 x293 x758 x1019))
(assert (x697 x1235))
(assert (x75 (- x740 x690)))
(assert (x697 x172))
(assert (x475 x572 x413 x209 x690))
(assert (not (x951 (x229 64 x606 3))))
(assert (x697 x890))
(assert (x677 x1019 (- x758 x740)))
(assert (x672 x690 x209 x740 x383))
(assert (x697 x389))
(assert (< (x229 64 x1131 x763) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x754 (x229 64 x326 2)) x326))
(assert (x75 (- x293 x740)))
(assert (x475 x383 x740 x572 x413))
(assert (x75 (- x572 x209)))
(assert (= x23 (and x429 x151)))
(assert (x677 x740 (- x383 x758)))
(assert (x677 x383 (- x740 x460)))
(assert (= x722 (or x774 x881)))
(assert (x951 3807247641))
(assert (= (x16 (x229 64 x1131 3)) 3))
(assert (x697 x112))
(assert (x677 x209 x690))
(assert (x475 x209 x690 x758 x1019))
(assert (x925 x1062))
(assert (x475 x460 x1173 x738 x293))
(assert (x697 x956))
(assert (x144 x673))
(assert (x475 x209 x690 x1019 x758))
(assert (x951 42484642723563678990085296957100989206263395779143859332068879344986694352896))
(assert (= (and (not x594) x208) x646))
(assert (x697 x795))
(assert (= 64 (x122 (x229 64 x326 2))))
(assert (x697 x142))
(assert (not (x951 (x229 64 x1131 x675))))
(assert (x697 x135))
(assert (x697 x253))
(assert (= (and x1239 x290) x501))
(assert (x475 x383 x740 x413 x572))
(assert (x75 (- x1019 x690)))
(assert (= (x382 (x229 64 x149 3)) (x229 64 x149 3)))
(assert (x925 x1073))
(assert (x697 x324))
(assert (x75 (- x758 x1173)))
(assert (x75 (- x1173 x293)))
(assert (= 0 (x382 73479928649823986090411545518015415704520669370837392133681365890082828976128)))
(assert (x925 x862))
(assert (x677 x740 (- x383 x738)))
(assert (x697 x346))
(assert (x697 x374))
(assert (x75 (- x1173 x738)))
(assert (x677 x738 (- x293 x209)))
(assert (x677 x293 (- x738 x572)))
(assert (= 0 (x382 29289127993025145568725129057828671567744754166070328588094505464281371246592)))
(assert (= x984 (or x23 x558)))
(assert (x697 x831))
(assert (x672 x1019 x758 x460 x1173))
(assert (x672 x1173 x460 x740 x383))
(assert (x75 (- x383 x1019)))
(assert (x697 x1188))
(assert (x951 340282366920938463463374607431768211454))
(assert (x672 x758 x1019 x740 x383))
(assert (x697 x37))
(assert (x677 x758 (- x1019 x738)))
(assert (x697 x971))
(assert (x672 x293 x738 x1019 x758))
(assert (= x290 (or x1034 x1059)))
(assert (x697 x716))
(assert (x697 x478))
(assert (x475 x740 x383 x293 x738))
(assert (= (x122 (x229 64 x112 3)) 64))
(assert (x677 x690 (- x209 x740)))
(assert (x697 x86))
(assert (x475 x413 x572 x460 x1173))
(assert (= (x229 64 x1131 x763) (x382 (x229 64 x1131 x763))))
(assert (x697 x759))
(assert (= 0 (x382 2412700192)))
(assert (= x761 (=> (and (and (and (= x718 false) (= x606 x850)) (and (<= 0 x748) (= x606 x97) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x215) (= x127 (x229 64 x606 3)) (= x748 x9) (= x9 x1245) (= (x838 x1131) x813) (= false x243) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x748) (<= x704 127) (= x379 false) (= false x83) (= false x767) (= x97 x167) (= x126 (x624 x93)) (= x525 (>= x931 x949)) (= x176 (x838 x1011)) (= (<= x450 x1245) x812) (<= x341 127) (= x307 false) (= x931 x394) (= 1889567281 x1193) (>= x176 1) (= x394 (x1010 128)) x525 (= false x822) (<= x704 127) (= x748 (- x931 x949)) (<= 1 x813) (= x625 false) (= x244 false) (= x1091 128) (= 36 x934) (= 3807247641 x214) (= x164 x433) (= x645 false) (<= x341 127) (= x433 (x427 x1131)) (= x93 x694) (= false x1151) (= x921 x450) (= (x143 x127) x380))) (and (>= 127 x817) (= (x838 x1011) x865) (>= x1066 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x584 x858)) (= x483 (x229 64 x1131 7)) (= (x229 64 x1131 3) x798) (>= x491 1) (= x849 false) (= x1066 (x486 x483)) (>= 127 x741) (= x769 x251) (= x1225 (x229 64 x149 3)) (= (x229 64 x1131 3) x351) (= (x331 (- x1178 x489)) x689) (= x806 x183) (>= 340282366920938463463374607431768211454 x721) (<= x817 127) (= false x219) (= x1093 2835717307) (not (> x489 x1178)) (= x900 false) (= (+ x584 x858) x132) (>= x408 1) (= x721 (x110 x483)) (<= 1 x285) (= x1062 36) (= x656 256) (= x466 x132) (= false x1226) (= false x162) (= (x1000 x798) x590) (= x489 x806) (= x107 1) (<= 1 x937) (= x237 x367) (not (> x67 x1066)) (= x481 false) (= x25 x850) (< (+ x858 x584) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1178 (x809 x351)) (= x408 (x792 0)) (<= 1 x132) (= x285 x67) (<= 1 x1103) (= x691 x1131) (= x491 (x838 x1011)) (= x1016 false) (= (+ x584 x858) x1103) (<= 1 x865) (= x191 1086394137) (= x811 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x285 (+ x721 x584)) (= x251 x584) (= 68 x329) (= x639 1) (= x629 false) (= x173 29289127993025145568725129057828671567744754166070328588094505464281371246592) (= x937 (x838 x1011)) (= 68 x70) (>= 127 x741) (<= x1066 340282366920938463463374607431768211455) (= x776 (x109 (+ x590 x584))) (= x48 false) (= (x760 x1225) x916) (= x51 x691) (= x419 x132) (= x186 (x356 128)) (= x86 (x109 (+ x916 x489))) (<= x1103 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x285 340282366920938463463374607431768211455) (= 256 x480) (= false x298) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x132))) x812)))
(assert (x697 x712))
(assert (x697 x339))
(assert (x677 x293 (- x738 x740)))
(assert (x677 x740 (- x383 x572)))
(assert (x697 x1061))
(assert (x677 x293 (- x738 x383)))
(assert (x672 x293 x738 x460 x1173))
(assert (x697 x1141))
(assert (x75 (- x460 x690)))
(assert (x697 x934))
(assert (x697 x810))
(assert (x951 2510122281))
(assert (x475 x690 x209 x293 x738))
(assert (x638 x147 10000))
(assert (x75 (- x293 x383)))
(assert (=> (<= x82 10000) (= (x382 x82) 0)))
(assert (x697 x424))
(assert (x697 x573))
(assert (x475 x413 x572 x690 x209))
(assert (x697 x1119))
(assert (x677 x383 (- x740 x758)))
(assert (x75 (- x460 x738)))
(assert (x672 x413 x572 x740 x383))
(assert (x475 x1173 x460 x383 x740))
(assert (x75 (- x572 x690)))
(assert (x697 x869))
(assert (= (or x409 x128) x586))
(assert (= (=> (and (and (= x1142 x11) (= x818 false) (= false x41) (= x92 x882) (= false x487) (= x897 (x838 x1131)) (= false x1221) (= x1227 false) (= x519 73479928649823986090411545518015415704520669370837392133681365890082828976128) (= x323 2725522033) (= 2725522033 x835) (= 5000 x1127) (= (x674 x882) x772) (= x163 false) (= x502 x60) (= 128 x956) (= (x838 x1160) x1024) (= false x76) (>= 127 x1) (= x456 false) (= (> 5000 x402) x11) (>= x897 1) (= x533 x476) (>= 127 x1) (>= 127 x820) (= x678 4) (= false x1192) (= x779 false) (>= 127 x820) (= (x659 128) x402) (= x533 (x895 x1131)) (>= x1024 1)) (and (= x455 false) (= x361 4))) x89) x630))
(assert (x925 x622))
(assert (x475 x209 x690 x738 x293))
(assert (x475 x740 x383 x1173 x460))
(assert (x475 x1173 x460 x413 x572))
(assert (x697 x821))
(assert (= (x382 419287147) 0))
(assert (x672 x413 x572 x1019 x758))
(assert (x677 x738 (- x293 x383)))
(assert (x697 x179))
(assert (x697 x1095))
(assert (x475 x383 x740 x293 x738))
(assert (x677 x293 (- x738 x413)))
(assert (x697 x1120))
(assert (x75 (- x690 x383)))
(assert (x951 11303959121341750378730598570842417678143006398153999127348644152793735626752))
(assert (x697 x34))
(assert (x75 (- x690 x572)))
(assert (x697 x461))
(assert (x75 x690))
(assert (x697 x140))
(assert (x697 x325))
(assert (x697 x149))
(assert (x697 x833))
(assert (x925 x634))
(assert (x697 x247))
(assert (x697 x955))
(assert (x677 x413 (- x572 x460)))
(assert (x75 (- x740 x293)))
(assert (= x1034 (and (not x1216) x1202)))
(assert (x75 (- x460 x413)))
(assert (=> (>= 10000 x1246) (= (x382 x1246) 0)))
(assert (x697 x435))
(assert (x697 x817))
(assert (x697 x1199))
(assert (x475 x460 x1173 x383 x740))
(assert (= (x754 (x229 64 x606 3)) x606))
(assert (x75 (- x293 x209)))
(assert (x10 10000 x332))
(assert (x697 x578))
(assert (x697 x622))
(assert (x697 x275))
(assert (x75 (- x209 x1019)))
(assert (= (x122 (x229 64 x1131 3)) 64))
(assert (x951 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x75 (- x740 x413)))
(assert (= x1131 (x754 (x229 64 x1131 x1229))))
(assert (x697 x862))
(assert (x75 (- x293 x758)))
(assert (= (x382 (x229 64 x606 3)) (x229 64 x606 3)))
(assert (x677 x572 (- x413 x690)))
(assert (x677 x209 (- x690 x413)))
(assert (x697 x484))
(assert (x475 x413 x572 x293 x738))
(assert (x697 x553))
(assert (=> (>= 10000 x37) (= (x382 x37) 0)))
(assert (x677 x460 (- x1173 x758)))
(assert (x697 x1253))
(assert (and (= 10000000000000000000000000000000000000000000000000000000000000000000000 (x653 10 70)) (= 10000000000000000000000000000000000000 (x653 10 37)) (= 100000000000000000000000000000000000000000000000000000000 (x653 10 56)) (= (x653 10 7) 10000000) (= (x653 10 10) 10000000000) (= 10000000000000000000000000000000000000000000000000000000 (x653 10 55)) (= 10000000000000000000000000000000000000000000000000000000000000000 (x653 10 64)) (= 1000000000000000000000000 (x653 10 24)) (= 100000000000000000000000000000000000000000000 (x653 10 44)) (= 100000000000000000000000000000000000000000000000000000000000000 (x653 10 62)) (= 1000000000000000000000000000 (x653 10 27)) (= (x653 10 8) 100000000) (= (x653 10 34) 10000000000000000000000000000000000) (= 100000000000000000000000000000000000000000000000000000000000000000000 (x653 10 68)) (= (x653 10 13) 10000000000000) (= (x653 10 45) 1000000000000000000000000000000000000000000000) (= (x653 10 30) 1000000000000000000000000000000) (= 100000000000000000000000000000000000 (x653 10 35)) (= 10000000000000000000000000000000000000000 (x653 10 40)) (= (x653 10 59) 100000000000000000000000000000000000000000000000000000000000) (= 10 (x653 10 1)) (= 10000000000000000000000000000 (x653 10 28)) (= 1000000000000000000000000000000000000000000000000000000000000 (x653 10 60)) (= 1000 (x653 10 3)) (= (x653 10 26) 100000000000000000000000000) (= (x653 10 47) 100000000000000000000000000000000000000000000000) (= (x653 10 14) 100000000000000) (= 1000000000000000000000000000000000000000000000000000000000000000000000000000 (x653 10 75)) (= (x653 10 73) 10000000000000000000000000000000000000000000000000000000000000000000000000) (= 1000000000000000000000000000000000000000000000000000000000000000000000 (x653 10 69)) (= 10000000000000000000000000 (x653 10 25)) (= (x653 10 12) 1000000000000) (= (x653 10 33) 1000000000000000000000000000000000) (= 10000000000000000000000000000000000000000000000000000000000000000000000000000 (x653 10 76)) (= (x653 10 52) 10000000000000000000000000000000000000000000000000000) (= 10000 (x653 10 4)) (= (x653 10 77) 100000000000000000000000000000000000000000000000000000000000000000000000000000) (= (x653 10 41) 100000000000000000000000000000000000000000) (= 1000000000000000000000000000000000000000000000000 (x653 10 48)) (= (x653 10 50) 100000000000000000000000000000000000000000000000000) (= 10000000000000000000000000000000 (x653 10 31)) (= 1000000000000000000000000000000000000000000000000000000 (x653 10 54)) (= (x653 10 9) 1000000000) (= 1000000000000000000000000000000000000000000000000000000000000000000000000 (x653 10 72)) (= (x653 10 42) 1000000000000000000000000000000000000000000) (= (x653 10 19) 10000000000000000000) (= (x653 10 53) 100000000000000000000000000000000000000000000000000000) (= 100000000000000000000000000000000 (x653 10 32)) (= 100000000000000000000 (x653 10 20)) (= (x653 10 66) 1000000000000000000000000000000000000000000000000000000000000000000) (= 1000000000000000000000000000000000000000000000000000000000000000 (x653 10 63)) (= 1000000000000000000 (x653 10 18)) (= (x653 10 6) 1000000) (= (x653 10 57) 1000000000000000000000000000000000000000000000000000000000) (= 100000 (x653 10 5)) (= 100000000000000000000000 (x653 10 23)) (= 100000000000000000000000000000 (x653 10 29)) (= (x653 10 21) 1000000000000000000000) (= (x653 10 15) 1000000000000000) (= 1000000000000000000000000000000000000000000000000000 (x653 10 51)) (= (x653 10 67) 10000000000000000000000000000000000000000000000000000000000000000000) (= 10000000000000000000000000000000000000000000000000000000000000 (x653 10 61)) (= 10000000000000000000000000000000000000000000000000 (x653 10 49)) (= (x653 10 46) 10000000000000000000000000000000000000000000000) (= 100000000000000000 (x653 10 17)) (= 100 (x653 10 2)) (= 100000000000000000000000000000000000000 (x653 10 38)) (= 10000000000000000000000000000000000000000000000000000000000 (x653 10 58)) (= (x653 10 39) 1000000000000000000000000000000000000000) (= (x653 10 36) 1000000000000000000000000000000000000) (= (x653 10 65) 100000000000000000000000000000000000000000000000000000000000000000) (= (x653 10 71) 100000000000000000000000000000000000000000000000000000000000000000000000) (= 100000000000000000000000000000000000000000000000000000000000000000000000000 (x653 10 74)) (= (x653 10 0) 1) (= (x653 10 22) 10000000000000000000000) (= 100000000000 (x653 10 11)) (= 10000000000000000 (x653 10 16)) (= (x653 10 43) 10000000000000000000000000000000000000000000)))
(assert (x677 x1019 (- x758 x1173)))
(assert (= x393 (and x538 x947)))
(assert (x75 (- x460 x209)))
(assert (x672 x690 x209 x460 x1173))
(assert (x672 x209 x690 x572 x413))
(assert (= 0 (x382 2725522033)))
(assert (x697 x319))
(assert (x925 x64))
(assert (x697 x1063))
(assert (x75 (- x209 x1173)))
(assert (= 2 (x16 (x229 64 x326 2))))
(assert (x697 x1112))
(assert (x697 x762))
(assert (x677 x690 (- x209 x1019)))
(assert (x677 x293 (- x738 x1019)))
(assert (x144 x1146))
(assert (x697 x1051))
(assert (x697 x303))
(assert (x677 x690 (- x209 x572)))
(assert (x697 x513))
(assert (x697 x824))
(assert (< (x229 64 x1131 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x697 x449))
(assert (x475 x1019 x758 x738 x293))
(assert (x144 x316))
(assert (x475 x1173 x460 x740 x383))
(assert (x475 x1019 x758 x383 x740))
(assert (= (=> (and (and (= x528 (x838 x703)) (= x1073 68) (= x1185 false) (= 224 x346) (= x337 x1149) (= x922 false) (= 1 x923) (= x460 x246) (= x693 false) (= x314 1) (= x1155 1575842981) (= x211 true) (= x485 x1149) (= x1173 x158) (= x53 42484642723563678990085296957100989206263395779143859332068879344986694352896) (= false x249) (>= 127 x1020) (= x584 (x782 192)) (= x846 true) (= 1 x1017) (= x169 x1149) (= 1 x464) (= x358 (- x845 1)) (= x1149 x1029) (= x584 x246) (= x108 (x390 x460 x1173)) (= x463 1) (= x1080 false) (<= x1020 127) (= (+ x108 x1029) x845) (= x504 x703) (<= 1 x528) (>= x584 1) (= x158 x289) (= x584 x437) (= 0 x796) (<= x584 340282366920938463463374607431768211455)) (and (and (= x403 (x641 x358 x169)) (<= 0 x403) (<= x403 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (not (> x1119 x584)) (= x939 (x739 224)) (= false x814) (= (x331 (- x584 x1119)) x489) (not (> x1233 x584)) (<= x893 340282366920938463463374607431768211455) (= x893 (+ x939 x421)) (>= 340282366920938463463374607431768211455 x906) (<= x939 340282366920938463463374607431768211455) (<= 1 x893) (= (+ x1041 x1119) x529) (= x893 x416) (>= 340282366920938463463374607431768211454 x421) (= x827 x884) (= x403 x1005) (= (+ x939 x421) x827) (= x388 (= x759 x1011)) (= x893 x536) (<= x827 340282366920938463463374607431768211455) (>= x827 1) (<= x1041 340282366920938463463374607431768211455) (not (> x884 x906)) (= x148 x529) (>= 340282366920938463463374607431768211455 x1119) (= x529 x424) (>= x906 1) (= x1200 256) (>= 340282366920938463463374607431768211455 x529) (<= 1 x939) (= x696 false) (>= x529 0) (= x1119 (x331 (- x584 x1233)))))) (and (=> (and x388 (and (and (<= x764 127) (= x478 x278) (= x750 x847) (= x1131 x847) (= x585 (x229 64 x1131 x1180)) (= x264 false) (<= x764 127) (<= 1 x1244) (= x939 x478) (= x1147 (x505 x585)) (= x1180 (x229 64 x326 4)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1072) (= 599290589 x1026) (= x848 x326) (= x903 x848) (= x1013 false) (= 100 x355) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1147) x802) (= (x838 x1011) x1244)) (or x802 (and (and (not (> x939 x1147)) (= (x331 (- x1147 x939)) x1214) (= x763 (x229 64 x326 4)) (= x27 (x229 64 x1131 x763)) (>= x1147 1)) (not x802))))) x843) (=> (and (and (or (and x594 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x939 x927)) (= x326 x685) (= x574 (+ x927 x939)) (= x309 (x229 64 x326 2)) (<= 1 x1166) (<= 1 x1083) (= x377 x939) (not (< x1083 x939)) (< (+ x939 x927) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x930 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x1083 x939)) (= (x229 64 x1131 x309) x631) (= x574 x831) (= false x714) (= false x153) (<= x578 127) (= x295 (x229 64 x326 1)) (= x927 (x175 x1018)) (= x1131 x786) (= 599290589 x1111) (= (x838 x914) x180) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x508) (>= 127 x578) (>= x180 1) (= (x331 (- x1166 x939)) x643) (= (x265 x631) x1166) (= x1018 (x229 64 x1131 1)) (= x377 x1232) (= x213 (x229 64 x1131 x675)) (= (x545 x522) x1083) (not (< x1166 x939)) (= 100 x1117) (not (> x927 x831)) (= false x294) (= x675 (x229 64 x326 2)) (>= x508 1) (= x431 false) (not (> x939 x1166)) (= x974 (x331 (- x1083 x939))) (= (x229 64 x326 1) x522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x574) (<= x927 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x229 64 x1131 1) x1126) (<= 1 x574) (= (+ x939 x927) x508))) (and (not x594) (and (= x992 (x838 x816)) (= false x819) (= (x917 x1086) x221) (= x759 x816) (<= 1 x1249) (not (> x140 x1061)) (= x326 x133) (not (> x939 x1249)) (= x1131 x888) (= x238 x859) (>= x1189 1) (= false x564) (= x824 16156842317565293874272834530371880720966471053262404558597773956279093428224) (>= x221 1) (= x1086 (x229 64 x326 1)) (= x1229 (x229 64 x326 2)) (= (x229 64 x1131 1) x1210) (not (> x939 x1249)) (= x939 x859) (<= 1 x759) (<= 1 x992) (= (+ x939 x140) x805) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x140 x939)) (<= x200 127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1189) (= x978 false) (= (x229 64 x1131 x1229) x958) (= x1162 (x229 64 x1131 1)) (= x195 (x229 64 x326 1)) (not (< x221 x939)) (= (+ x140 x939) x1189) (= x1189 x1061) (= x171 (x229 64 x326 2)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x939 x140)) (= (x44 x1162) x140) (= (x1248 x958) x1249) (>= 127 x200) (= x715 (x331 (- x221 x939))) (= x706 100) (= 599290589 x1105) (= (x331 (- x1249 x939)) x359) (= false x499) (>= x805 1) (not (> x939 x221)) (= (x229 64 x1131 x171) x440) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x140) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x805) (>= 1461501637330902918203684832716283019655932542975 x759)))) (= (= x759 x914) x594)) (not x388)) x761))) x418))
(assert (x144 x640))
(assert (x697 x416))
(assert (x697 x50))
(assert (x144 x166))
(assert (x677 x738 (- x293 x460)))
(assert (x697 x359))
(assert (x697 x28))
(assert (= 0 (x382 27257352676734538696799184386584609201489566564797675397452801577526421880832)))
(assert (< (x229 64 x1131 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x697 x859))
(assert (x697 x67))
(assert (x697 x531))
(assert (not (x951 (x229 64 x1131 3))))
(assert (< (x229 64 x326 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x697 x1014))
(assert (x144 x397))
(assert (= (x754 (x229 64 x1131 7)) x1131))
(assert (x677 x572 x413))
(assert (x697 x837))
(assert (x697 x989))
(assert (=> (<= x1160 10000) (= 0 (x382 x1160))))
(assert (> (x229 64 x1131 x309) 10000))
(assert (x75 (- x460 x572)))
(assert (< (x229 64 x606 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x75 (- x209 x383)))
(assert (x677 x740 (- x383 x1173)))
(assert (x677 x413 (- x572 x738)))
(assert (x697 x1124))
(assert (x697 x597))
(assert (x677 x740 (- x383 x209)))
(assert (x697 x1246))
(assert (x75 (- x293 x1019)))
(assert (x475 x572 x413 x1173 x460))
(assert (x672 x413 x572 x738 x293))
(assert (x475 x293 x738 x758 x1019))
(assert (x697 x804))
(assert (x925 x732))
(assert (x697 x284))
(assert (x475 x1019 x758 x690 x209))
(assert (x697 x106))
(assert (x697 x1023))
(assert (x677 x738 x293))
(assert (x672 x738 x293 x572 x413))
(assert (= (x122 (x229 64 x1131 x763)) 64))
(assert (= x1161 (and x620 x236)))
(assert (x951 2982269534398869726892368075078858191162497301233414880515271737943156326400))
(assert (x677 x690 (- x209 x758)))
(assert (x697 x271))
(assert (x475 x460 x1173 x209 x690))
(assert (x951 27257352676734538696799184386584609201489566564797675397452801577526421880832))
(assert (x75 (- x383 x758)))
(assert (x475 x383 x740 x460 x1173))
(assert (x925 x972))
(assert (= (and (not x263) x984) x170))
(assert (x677 x738 (- x293 x572)))
(assert (x697 x726))
(assert (x697 x906))
(assert (x697 x474))
(assert (x75 (- x383 x690)))
(assert (x580 x640 x1146))
(assert (= 64 (x122 (x229 64 x1131 x675))))
(assert (x75 (- x1173 x740)))
(assert (x697 x617))
(assert (x677 x572 (- x413 x460)))
(assert (x677 x690 (- x209 x460)))
(assert (x951 419287147))
(assert (x75 (- x572 x1019)))
(assert (x697 x214))
(assert (= (=> (and (and (= x1160 x203) (= 1 x56) (= (- 10000 x1243) x442) (= x497 10000) (= x581 x442) (= x462 0) (= (+ x875 x581) x877) (= x442 x397) (= x1186 10000) (= x526 false) (>= 9999 x1243) (= x442 x375) (= x830 1) (= x371 true) (= x338 x332) (= x30 (- x877 1)) (= (* 10000 x332) x875) (= x943 1) (= x766 x338) (= true x102)) (and (and (= x907 x400) (= x400 x459)) (and (>= x907 0) (<= x907 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x907 (x641 x30 x397))))) x114) x4))
(assert (x475 x572 x413 x758 x1019))
(assert (x697 x1133))
(assert (x672 x460 x1173 x572 x413))
(assert (= (x754 (x229 64 x326 1)) x326))
(assert (x697 x1172))
(assert (x925 x934))
(assert (x697 x441))
(assert (= (=> (and (and (= x1198 x123) (= x1160 x1213) (= x563 false) (= x1055 1) (= true x40) (= x194 1) (= x1233 x608) (= x655 x608) (>= 9999 x1243) (= x851 10000) (= (* x655 10000) x333) (= x613 0) (= 1 x250) (= (- x52 1) x166) (= x33 10000) (= x1198 (- 10000 x1243)) (= x1198 x316) (= true x22) (= x1198 x1125) (= x52 (+ x333 x1125))) (and (= (x641 x166 x316) x632) (and (= x240 x632) (= x240 x1172)))) x418) x997))
(assert (x697 x463))
(assert (x677 x383 (- x740 x1019)))
(assert (x75 (- x572 x460)))
(assert (x672 x1173 x460 x1019 x758))
(assert (x951 2813824060))
(assert (x677 x209 (- x690 x383)))
(assert (= 64 (x122 (x229 64 x1131 7))))
(assert (x672 x293 x738 x740 x383))
(assert (x697 x399))
(assert (= (x382 1889567281) 0))
(assert (x75 (- x738 x413)))
(assert (= (x382 (x229 64 x1131 x309)) (x229 64 x1131 x309)))
(assert (x475 x740 x383 x690 x209))
(assert (x697 x190))
(assert (x672 x383 x740 x572 x413))
(assert (x697 x367))
(assert (x475 x413 x572 x740 x383))
(assert (x697 x872))
(assert (=> (>= 10000 x679) (= 0 (x382 x679))))
(assert (x75 (- x1173 x690)))
(assert (x951 3858912147))
(assert (x677 x383 (- x740 x1173)))
(assert (x697 x223))
(assert (= (x382 76450787359836037641860180984291677749980919077056822294353438043884394381312) 0))
(assert (x677 x460 (- x1173 x293)))
(assert (x672 x460 x1173 x1019 x758))
(assert (x697 x968))
(assert (x672 x572 x413 x738 x293))
(assert (x475 x758 x1019 x572 x413))
(assert (x677 x1019 (- x758 x460)))
(assert (x75 (- x460 x293)))
(assert (x697 x1140))
(assert (x951 1420994409))
(assert (x677 x758 (- x1019 x740)))
(assert (x697 x1249))
(assert (x75 (- x1173 x572)))
(assert (x697 x1193))
(assert (> (x229 64 x1131 1) 10000))
(assert (x697 x1026))
(assert (x697 x191))
(assert (= x1205 (=> (and (and (= x1228 false) (= x1235 (x838 x1160)) (= x151 (<= x392 5000)) (= x1063 65046268500144108725515947876519159634053427686595368352948596820176611049472) (= x709 false) (= x1247 false) (= 2412700192 x187) (= x292 (x987 x1131)) (= x702 false) (= x1144 false) (= 4 x216) (<= x494 127) (= x232 x92) (= false x793) (>= x1235 1) (>= 127 x410) (= x458 2412700192) (= x292 x1139) (= (x287 128) x392) (= x957 false) (= x990 (x838 x1131)) (= false x299) (= 128 x363) (<= x410 127) (= x540 (x498 x232)) (= false x188) (>= 127 x494) (= x657 false) (<= 1 x990) (= 5000 x728)) (and (= x1163 x918) (<= 0 x150) (= x80 (> (x838 x1222) 0)) (>= x982 0) (= x1160 x946) (= x583 x12) (= (> (x838 x703) 0) x1116) x7 (= x92 x694) (<= 1 x1160) (not (= x1011 x703)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x777) (<= x1011 1461501637330902918203684832716283019655932542975) (not (= x1131 x1222)) (not (= x816 x914)) (<= 1 x1011) x261 (>= 1461501637330902918203684832716283019655932542975 x914) x1056 (<= 0 x591) (not (= x703 x1222)) (<= x918 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x185) (not (= x816 x1160)) (= x982 x780) (= x1056 (> (x838 x1011) 0)) (>= x946 1) (>= 1461501637330902918203684832716283019655932542975 x759) (not (= x914 x1011)) (not (= x816 x1131)) (>= x583 0) (not (= x703 x1160)) (= x277 (> (x838 x816) 0)) x1116 (<= 0 x777) (>= 1461501637330902918203684832716283019655932542975 x694) (>= 1461501637330902918203684832716283019655932542975 x1131) (>= 1461501637330902918203684832716283019655932542975 x583) x277 (= x680 x565) (<= 0 x918) (>= x1222 1) (>= x680 0) (= x121 x495) (<= x946 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x982) (>= x495 0) (>= x694 0) (not (= x816 x703)) (= x152 0) (not (= x1011 x1131)) (not (= x1160 x1222)) (not (= x914 x703)) (not (= x703 x1131)) (not (= x914 x1222)) (not (= x1011 x1160)) (<= x591 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4 x20) (= (> (x838 x914) 0) x261) (= (> (x838 x1160) 0) x344) (not (= x816 x1011)) (= x591 x999) (not (= x1222 x816)) (>= 1461501637330902918203684832716283019655932542975 x511) (<= x150 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= false x446) x80 (>= 1461501637330902918203684832716283019655932542975 x816) (= (< 0 (x838 x1131)) x7) (<= x495 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x914 x1160)) (not (= x914 x1131)) (= x150 x753) (>= x816 1) (>= 1461501637330902918203684832716283019655932542975 x1023) (<= 1 x703) (>= 1461501637330902918203684832716283019655932542975 x703) (<= x304 255) x344 (= x687 x777) (<= x680 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1160) (not (= x1011 x1222)) (not (= x1131 x1160)) (>= 1461501637330902918203684832716283019655932542975 x1222) (>= x914 1) (>= x1131 1))) (and (=> (and (not x151) (and (= x335 x502) (= x29 x1142) (= false x335))) x89) (=> x151 x630)))))
(assert (x677 x460 (- x1173 x740)))
(assert (x697 x867))
(assert (x697 x65))
(assert (x75 (- x383 x1173)))
(assert (x697 x619))
(assert (x697 x1044))
(assert (x697 x536))
(assert (x75 (- x740 x1019)))
(assert (x672 x690 x209 x572 x413))
(assert (= (x382 (x229 64 x112 3)) (x229 64 x112 3)))
(assert (=> (>= 10000 x1222) (= (x382 x1222) 0)))
(assert (x75 (- x413 x460)))
(assert (x75 x572))
(assert (x697 x401))
(assert (= 3 (x16 (x229 64 x149 3))))
(assert (x677 x383 (- x740 x413)))
(assert (x475 x383 x740 x1173 x460))
(assert (x951 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (> (x229 64 x1131 7) 10000))
(assert (x672 x758 x1019 x209 x690))
(assert (x677 x460 (- x1173 x1019)))
(assert (= 0 (x382 65046268500144108725515947876519159634053427686595368352948596820176611049472)))
(assert (x951 1889567281))
(assert (x697 x684))
(assert (x697 x844))
(assert (x475 x740 x383 x1019 x758))
(assert (x677 x293 (- x738 x1173)))
(assert (x697 x606))
(assert (x677 x1173 (- x460 x293)))
(assert (x697 x1174))
(assert (x475 x460 x1173 x1019 x758))
(assert (x697 x329))
(assert (x677 x383 (- x740 x690)))
(assert (= 0 (x382 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x580 x358 x169))
(assert (x697 x811))
(assert (= (and x81 x373) x967))
(assert (= (x754 (x229 64 x112 3)) x112))
(assert (x75 (- x690 x1173)))
(assert (x697 x820))
(assert (x677 x1173 (- x460 x738)))
(assert (x677 x383 (- x740 x293)))
(assert (x697 x897))
(assert (x697 x363))
(assert (x697 x491))
(assert (= (x122 (x229 64 x326 4)) 64))
(assert (x697 x916))
(assert (x697 x240))
(assert (x677 x209 (- x690 x1019)))
(assert (x475 x293 x738 x572 x413))
(assert (x697 x528))
(assert (x697 x138))
(assert (x580 x166 x316))
(assert (= x1131 (x754 (x229 64 x1131 1))))
(assert (x75 x1173))
(assert (x475 x738 x293 x413 x572))
(assert (= x881 (and x802 x115)))
(assert (= (x16 (x229 64 x1131 7)) 7))
(assert (x677 x572 (- x413 x383)))
(assert (= 0 (x382 2848189402)))
(assert (= (x16 (x229 64 x1131 x763)) x763))
(assert (x672 x460 x1173 x209 x690))
(assert (x697 x421))
(assert (x697 x1058))
(assert (x75 (- x690 x758)))
(assert (not (x951 (x229 64 x326 1))))
(assert (x697 x292))
(assert (x697 x721))
(assert (x75 (- x1173 x1019)))
(assert (x75 (- x758 x740)))
(assert (x475 x460 x1173 x690 x209))
(assert (= 0 (x382 100000000000000000000)))
(assert (x677 x1173 (- x460 x1019)))
(assert (x475 x383 x740 x758 x1019))
(assert (x475 x740 x383 x758 x1019))
(assert (x925 x226))
(assert (= (x16 (x229 64 x326 4)) 4))
(assert (x75 (- x1019 x383)))
(assert (x677 x1019 (- x758 x209)))
(assert (=> (<= x816 10000) (= (x382 x816) 0)))
(assert (x475 x738 x293 x1173 x460))
(assert (x75 x740))
(assert (x697 x1036))
(assert (= (x122 (x229 64 x1131 x1180)) 64))
(assert (= (x382 (x229 64 x1131 1)) (x229 64 x1131 1)))
(assert (x475 x1019 x758 x572 x413))
(assert (x697 x750))
(assert (= (x382 110618525) 0))
(assert (x677 x293 (- x738 x690)))
(assert (x697 x412))
(assert (x697 x314))
(assert (x672 x209 x690 x1019 x758))
(assert (x75 (- x209 x413)))
(assert (x144 x358))
(assert (x677 x293 (- x738 x460)))
(assert (x677 x758 (- x1019 x690)))
(assert (x75 (- x1019 x209)))
(assert (= 0 (x382 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x75 x758))
(assert (= (=> (= (ite x236 x84 x279) x1216) (and (=> (and (not x1216) (and (= x470 x248) (= x841 false) (= x841 x559))) x96) (=> x1216 x771))) x1176))
(assert (x697 x472))
(assert (x475 x758 x1019 x413 x572))
(assert (x697 x207))
(assert (x697 x715))
(assert (x475 x690 x209 x1019 x758))
(assert (x677 x209 (- x690 x740)))
(assert (x697 x187))
(assert (x925 x472))
(assert (x697 x960))
(assert (x697 x570))
(assert (x925 x329))
(assert (= (x122 (x229 64 x326 1)) 64))
(assert (x697 x177))
(assert (x475 x209 x690 x740 x383))
(assert (= x1059 (and x1216 x1202)))
(assert (x697 x1053))
(assert (= (x382 (x229 64 x1131 x1229)) (x229 64 x1131 x1229)))
(assert (= x1131 (x754 (x229 64 x1131 3))))
(assert (x697 x300))
(assert (x697 x14))
(assert (not (x951 (x229 64 x1131 1))))
(assert (x475 x413 x572 x1173 x460))
(assert (x697 x1244))
(assert (x697 x452))
(assert (= (x16 (x229 64 x1131 1)) 1))
(assert (= (x382 3807247641) 0))
(assert (x697 x1131))
(assert (x697 x237))
(assert (x672 x1019 x758 x209 x690))
(assert (= x774 (and x115 (not x802))))
(assert (= 0 (x382 2982269534398869726892368075078858191162497301233414880515271737943156326400)))
(assert (x925 x800))
(assert (x677 x209 (- x690 x738)))
(assert (x697 x515))
(assert (x475 x758 x1019 x460 x1173))
(assert (not (x951 (x229 64 x326 3))))
(assert (x677 x1019 (- x758 x293)))
(assert (x677 x740 x383))
(assert (x677 x460 (- x1173 x738)))
(assert (x75 (- x740 x572)))
(assert (x475 x209 x690 x293 x738))
(assert (x677 x209 (- x690 x460)))
(assert (= (=> (and (= x5 x524) (= (ite x1157 x1032 x654) x532) (= x589 x532)) x1007) x1096))
(assert (x697 x365))
(assert (x75 (- x1019 x572)))
(assert (= 0 (x382 11303959121341750378730598570842417678143006398153999127348644152793735626752)))
(assert (x75 (- x413 x293)))
(assert (x697 x355))
(assert (x697 x1242))
(assert (x697 x547))
(assert (=> (>= 10000 x607) (= (x382 x607) 0)))
(assert (x672 x413 x572 x209 x690))
(assert (x697 x1166))
(assert (x475 x293 x738 x690 x209))
(assert (x697 x903))
(assert (x697 x511))
(assert (x697 x477))
(assert (x697 x347))
(assert (x697 x548))
(assert (x677 x758 (- x1019 x572)))
(assert (= (x229 64 x1131 x171) (x382 (x229 64 x1131 x171))))
(assert (x697 x408))
(assert (x75 (- x383 x209)))
(assert (x951 1011031402))
(assert (x677 x572 (- x413 x740)))
(assert (x697 x1232))
(assert (x475 x690 x209 x413 x572))
(assert (= 3 (x16 (x229 64 x112 3))))
(assert (x697 x234))
(assert (x697 x523))
(assert (x75 (- x740 x460)))
(assert (x75 (- x209 x572)))
(assert (x697 x56))
(assert (x75 (- x758 x738)))
(assert (x75 (- x740 x738)))
(assert (x672 x1173 x460 x209 x690))
(assert (x697 x156))
(assert (= (and x429 (not x151)) x558))
(assert (x672 x293 x738 x572 x413))
(assert (x672 x690 x209 x738 x293))
(assert (x951 10000000000000000))
(assert (< 10000 (x229 64 x326 1)))
(assert (x75 x655))
(assert (x475 x690 x209 x572 x413))
(assert (x677 x690 (- x209 x413)))
(assert (x144 x169))
(assert (x697 x494))
(assert (x475 x690 x209 x383 x740))
(assert (x697 x394))
(assert (= 1 (x16 (x229 64 x326 1))))
(assert (x75 (- x209 x758)))
(assert (x697 x533))
(assert (=> (>= 10000 x1011) (= 0 (x382 x1011))))
(assert (x677 x383 (- x740 x738)))
(assert (= 0 (x382 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x951 65046268500144108725515947876519159634053427686595368352948596820176611049472))
(assert (x697 x860))
(assert (= (x16 (x229 64 x1131 x309)) x309))
(assert (x677 x740 (- x383 x1019)))
(assert (x697 x310))
(assert (x697 x930))
(assert (x697 x882))
(assert (= (x754 (x229 64 x326 4)) x326))
(assert (x697 x914))
(assert (x75 (- x758 x690)))
(assert (> (x229 64 x149 3) 10000))
(assert (x925 x223))
(assert (x672 x383 x740 x209 x690))
(assert (x475 x413 x572 x1019 x758))
(assert (x697 x556))
(assert (x697 x18))
(assert (x697 x671))
(assert (x925 x948))
(assert (x697 x772))
(assert (x672 x740 x383 x738 x293))
(assert (x697 x1196))
(assert (x475 x758 x1019 x738 x293))
(assert (not (x951 (x229 64 x1131 x309))))
(assert (x677 x758 (- x1019 x413)))
(assert (x697 x328))
(assert (x75 (- x383 x460)))
(assert (x475 x1173 x460 x690 x209))
(assert (= (x382 1086394137) 0))
(assert (x951 2412700192))
(assert (x697 x634))
(assert (x475 x572 x413 x293 x738))
(assert (x697 x1178))
(assert (x697 x301))
(assert (x697 x330))
(assert (x697 x302))
(assert (not (x951 (x229 64 x326 4))))
(assert (x672 x383 x740 x460 x1173))
(assert (< (x229 64 x1131 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x475 x740 x383 x413 x572))
(assert (x75 (- x738 x572)))
(assert (x697 x800))
(assert (x951 1461501637330902918203684832716283019655932542975))
(assert (x697 x871))
(assert (x697 x1033))
(assert (= x429 true))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x229 64 x1131 x171)))
(assert (= (=> (and (<= 1 x712) (= x156 1) (= (x229 64 x1131 3) x258) (= x224 false) (= x686 (x229 64 x326 3)) (= x1141 (x109 (+ x939 x953))) (= false x100) (= (x62 128) x500) (not (> x939 x712)) (= (x331 (- x712 x939)) x716) (= x953 (x885 x258)) (= (x120 x686) x712)) x761) x843))
(assert (x697 x500))
(assert (x475 x1019 x758 x460 x1173))
(assert (x697 x996))
(assert (x475 x460 x1173 x740 x383))
(assert (x697 x913))
(assert (x75 (- x758 x413)))
(assert (=> (<= x149 10000) (= 0 (x382 x149))))
(assert (x697 x1224))
(assert (= x114 (=> (and (and (= x1053 160) (= x289 x280) (>= x18 1) (= x18 (x838 x703)) (= x372 (x588 128)) (<= x858 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 1 x989) (= x374 1) (= 1575842981 x324) (= x981 (x390 x209 x690)) (<= 1 x485) (= 1 x174) (= x139 0) (= x665 x703) (= true x117) (= x648 x571) (= (- x503 1) x640) (= false x343) (= (+ x1197 x981) x503) (>= 127 x449) (= true x74) (= x64 68) (>= 127 x449) (= x998 false) (= false x1123) (= x690 x280) (= 1 x633) (= 1 x270) (= x306 false) (= x571 x1197) (= x485 x571) (= x372 x788) (= 42484642723563678990085296957100989206263395779143859332068879344986694352896 x935) (= x209 x788) (= x1146 x571) (= x197 false) (= x372 x479)) (and (and (<= 0 x336) (= x336 (x641 x640 x1146)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x336)) (and (and (and (= x938 (x641 x366 x1081)) (<= 0 x938) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x938)) (and (and (and (and (and (= x1074 x112) (= x490 false)) (and (and (>= x468 1) (= x112 x138) (>= 127 x557) (= 36 x622) (= x735 false) (= false x749) (= x1069 x138) (= false x853) (= x832 false) (= (x838 x1011) x867) (>= 127 x557) (= 128 x833) (<= x577 127) (= (x838 x1131) x468) (= false x193) (= x199 false) (= (x42 x705) x570) (= x1114 (x120 x1165)) (= (x154 x1131) x1154) (= false x551) (= x869 1889567281) (= x770 x1154) (= 3807247641 x521) (= (x692 128) x339) (<= 1 x867) (= x113 false) (= x318 false) (= x994 false) (= x949 x339) (= x1234 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x694 x705) (= (x229 64 x112 3) x1165) (>= 127 x577)) (and (and (= x815 x808) (and (and (and (and (<= 1 x837) (= x854 x405) (= x1044 (x1043 x1131)) (= 0 x861) (= x703 x235) (= x1208 x1044) (= 0 x509) (>= 127 x47) (= (x838 x703) x1065) (= x315 false) (= 0 x834) (= x642 x1152) (>= x1065 1) (= x887 75860546588345281898627506740238830481794204685839469173503233872106576936960) (= true x966) (= x465 x758) (= x837 (x838 x1131)) (= x237 x149) (= x661 false) (= x362 x694) (= false x43) (= x405 x1191) (= x234 x815) (>= 127 x621) (= x1191 x815) (= x422 x1106) (= x1152 x1106) (= x854 x1019) (= x736 0) (= x1107 (x390 x1019 x758)) (= x415 2856598208) (= x334 false) (>= 127 x621) (= x612 2813824060) (= x289 x422) (= x650 x1152) (= x441 0) (= x952 false) (= 0 x960) (= x79 x941) (= x79 x485) (= x941 x465) (>= 127 x47) (= x1036 0) (= x234 x1223) (= x432 false) (= (x995 x362) x1169) (= 128 x420) (= x414 68)) (and (and (and (= x1217 0) (= false x1040) (= 36 x1174) (= 2510122281 x172) (= x297 true) (= x1035 false) (= x1160 x550) (= x473 x553) (= x1094 10000) (= x909 false) (= x383 x932) (= x569 x553) (= (+ x45 10000) x220) (>= 127 x271) (= x1243 x932) (= (x838 x1160) x671) (= x73 10000) (= x454 false) (<= x45 1157920892373161954235709850086879078532699846656405640394575840079131296399350000) (<= 1 x671) (= 67672762823786511731998939545691128838287635524233969611313623556097044381696 x726) (<= 0 x45) (= 1 x1206) (>= 127 x271) (= x797 x556) (= 1 x407) (= 10000 x444) (= x740 x473) (= (- x220 1) x147) (= x370 160) (= x1218 10000) (= true x855) (= x45 (x390 x740 x383)) (= 1 x596) (= false x1159) (= (x1050 128) x553)) (and (= x514 (x641 x147 10000)) (and (= x373 (= x1233 0)) (= x302 (x838 x1160)) (= x852 false) (<= x328 127) (<= 1 x302) (= x514 x101) (= (x331 (- x553 x325)) x1233) (= 11303959121341750378730598570842417678143006398153999127348644152793735626752 x627) (= x347 36) (= x1031 false) (= 419287147 x919) (= 192 x515) (= (x425 160) x325) (<= x328 127) (= x542 false) (not (> x325 x553)) (= x1233 x32) (>= 340282366920938463463374607431768211455 x1233) (= x436 false)))) (and (<= 0 x797) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x797) (= (x641 x1107 x642) x797)))) (= x326 x694)) (and (= x149 x1219) (= x231 false)))) (and (= x25 x1219) (= 68 x106))))) (and (= x535 false) (= x245 x35) (= false x549) (= x25 x1074) (not (< x319 x50)) (= (x910 256) x799) (= (x471 224) x50) (= x530 false) (<= x799 340282366920938463463374607431768211454) (= false x725) (= x618 true) (= x808 x799) (= 36 x972) (= false x242) (= (x331 (- x319 x50)) x963) (= false x825) (= x406 340282366920938463463374607431768211455))) (= x35 (x641 x673 10000))) (and (<= x975 1157920892373161954235709850086879078532699846656405640394575840079131296399350000) (= x572 x241) (= x616 10000) (= 36 x699) (= (x838 x1160) x426) (= x1102 1) (= x975 (x390 x572 x413)) (= false x1175) (= x720 0) (= x1052 10000) (= x801 10000) (= x1089 10000) (= x317 1) (= false x257) (= x319 x241) (= x255 67672762823786511731998939545691128838287635524233969611313623556097044381696) (= x54 true) (= x189 x319) (= 2510122281 x488) (= x568 x938) (= x575 x1243) (>= 127 x1057) (>= 127 x1057) (= false x1092) (= x1028 false) (= x962 (+ 10000 x975)) (= true x595) (= x1120 224) (<= 1 x426) (= x413 x575) (= x673 (- x962 1)) (= x1138 1) (= x863 false) (= x866 x1160) (= x319 (x218 192)) (<= 0 x975)))) (and (= x1070 0) (= (x637 160) x864) (= x485 x986) (= (x838 x703) x412) (= x944 false) (= x738 x554) (= false x601) (= x924 x119) (= x124 x336) (<= x669 127) (= x864 x119) (= x91 x385) (= x839 false) (= x734 0) (= x924 x554) (= x366 (x390 x738 x293)) (= x791 x986) (= 68 x301) (= x28 75860546588345281898627506740238830481794204685839469173503233872106576936960) (>= x412 1) (= x886 x289) (= x179 0) (= 0 x1133) (= x1006 x886) (= 0 x452) (= false x1038) (= x961 true) (= x1190 x791) (= x804 x864) (= x1194 x703) (= x1183 2813824060) (= false x1212) (= x1081 x385) (= x310 192) (= x1006 x385) (= x293 x1190) (>= 127 x669) (= false x945))))) (and (=> (and (not x373) (= (= x1243 0) x947)) (and (=> (and (= x1233 x1172) x947) x418) (=> (not x947) x997))) (=> (and (= x1172 0) x373) x418)))))
(assert (x697 x656))
(assert (x75 (- x413 x740)))
(assert (x475 x209 x690 x572 x413))
(assert (x697 x133))
(assert (x697 x884))
(assert (x951 29289127993025145568725129057828671567744754166070328588094505464281371246592))
(assert (x697 x979))
(assert (x144 x366))
(assert (x697 x134))
(assert (x75 (- x1019 x413)))
(assert (x677 x740 (- x383 x293)))
(assert (= x518 (and x620 (not x236))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x229 64 x1131 x675)))
(assert (x925 x301))
(assert (x677 x413 (- x572 x758)))
(assert (not (x951 (x229 64 x1131 x171))))
(assert (x697 x888))
(assert (= (x16 (x229 64 x326 3)) 3))
(assert (x475 x293 x738 x460 x1173))
(assert (= 0 (x382 2982568183)))
(assert (x697 x612))
(assert (x697 x361))
(assert (x697 x974))
(assert (x75 (- x572 x383)))
(assert (x925 x678))
(assert (x75 (- x1019 x738)))
(assert (x697 x1241))
(assert (x697 x141))
(assert (< 10000 (x229 64 x326 4)))
(assert (x697 x167))
(assert (< (x229 64 x326 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x677 x1173 (- x460 x572)))
(assert (x677 x1019 (- x758 x738)))
(assert (x697 x1139))
(assert (x697 x1083))
(assert (=> (<= x882 10000) (= 0 (x382 x882))))
(assert (x697 x1073))
(assert (x697 x861))
(assert (= (x229 64 x326 3) (x382 (x229 64 x326 3))))
(assert (x75 (- x1019 x1173)))
(assert (x925 x70))
(assert (= (or x518 x1161) x1202))
(assert (x697 x254))
(assert (x580 x30 x397))
(assert (= (x16 (x229 64 x1131 x171)) x171))
(assert (x697 x992))
(assert (x697 x864))
(assert (x925 x699))
(assert (= x675 (x16 (x229 64 x1131 x675))))
(assert (= (x122 (x229 64 x1131 x309)) 64))
(assert (x697 x847))
(assert (x951 1575842981))
(assert (not x1205))
(assert (x677 x383 (- x740 x572)))
(assert (=> (<= x362 10000) (= 0 (x382 x362))))
(assert (= (=> (and (and (= true x72) (= x982 x905) (= x583 x98) (= 27 x321) (= x862 4) (= true x904) (= x970 x591) (= x680 x784) (= x911 x623) (= x777 x36) (= x598 x495) (= x959 x150) (= (ite x263 x589 x524) x1002) (= x202 false) (<= 5 x623) x1002 (= x628 x918) (>= 27 x623) (= x694 x681) (= x623 x755) (= x469 5) (= 0 x1134)) (and (= false x599) (= x259 false) (= x457 (x561 128)) (= x1143 false) (>= x896 1) (= 110618525 x913) (= false x384) (= x985 x623) (= (x434 x37) x467) (= false x658) (= x266 false) (= (= x395 x457) x236) (= x57 false) (= x85 false) (<= x600 127) (= x896 (x838 x703)) (= 2982269534398869726892368075078858191162497301233414880515271737943156326400 x523) (>= 127 x955) (= x223 4) (= x539 false) (>= x289 1) (= 128 x161) (= x284 110618525) (= (x1008 x1131) x610) (<= x955 127) (= x610 x729) (= false x1171) (= x37 x681) (<= x600 127) (= 10 x160) (= (x838 x1131) x141) (= (x653 10 x985) x395) (<= 1 x141))) (and (=> (and (and (= false x350) (= x256 x84) (= x350 x279)) (not x236)) x1176) (=> x236 x1078))) x1007))
(assert (x951 73479928649823986090411545518015415704520669370837392133681365890082828976128))
(assert (x697 x679))
(assert (x144 x1081))
(assert (x672 x572 x413 x1019 x758))
(assert (x697 x51))
(assert (x697 x950))
(assert (x697 x1072))
(assert (x677 x293 (- x738 x209)))
(assert (x677 x738 (- x293 x1019)))
(assert (= (x382 2856598208) 0))
(assert (x697 x70))
(assert (x677 x740 (- x383 x690)))
(assert (x697 x887))
(assert (x697 x678))
(assert (x697 x168))
(assert (x697 x467))
(assert (x951 340282366920938463463374607431768211455))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x229 64 x1131 1)))
(assert (x697 x404))
(assert (x697 x1060))
(assert (x697 x705))
(assert (< 10000 (x229 64 x326 3)))
(assert (x697 x667))
(assert (x677 x572 (- x413 x738)))
(assert (= 64 (x122 (x229 64 x1131 x1229))))
(assert (x697 x510))
(assert (x75 (- x738 x383)))
(assert (x697 x896))
(assert (x475 x738 x293 x209 x690))
(assert (not (x951 (x229 64 x1131 7))))
(assert (x697 x289))
(assert (x697 x770))
(assert (x672 x740 x383 x1019 x758))
(assert (x677 x690 (- x209 x383)))
(assert (x697 x512))
(assert (x697 x568))
(assert (x697 x717))
(assert (x697 x1020))
(assert (x677 x383 (- x740 x209)))
(assert (x697 x662))
(assert (= x208 (and x604 (not x388))))
(assert (x672 x690 x209 x1019 x758))
(assert (= x1131 (x754 (x229 64 x1131 x675))))
(assert (x672 x740 x383 x209 x690))
(assert (x697 x189))
(assert (not (x951 (x229 64 x1131 x1229))))
(assert (x672 x572 x413 x460 x1173))
(assert (x697 x174))
(assert (x697 x354))
(assert (x672 x740 x383 x460 x1173))
(assert (x475 x738 x293 x383 x740))
(assert (x697 x225))
(assert (x697 x1068))
(assert (x475 x740 x383 x460 x1173))
(assert (x697 x155))
(assert (x475 x572 x413 x738 x293))
(assert (x697 x980))
(assert (not (x951 (x229 64 x149 3))))
(assert (x925 x1051))
(assert (x925 x216))
(assert (x697 x937))
(assert (x475 x209 x690 x413 x572))
(assert (x697 x939))
(assert (x677 x460 (- x1173 x383)))
(assert (x697 x703))
(assert (x697 x799))
(assert (x677 x209 (- x690 x758)))
(assert (x697 x489))
(assert (x697 x451))
(assert (x697 x377))
(assert (x677 x293 (- x738 x758)))
(assert (x697 x53))
(assert (x672 x738 x293 x1019 x758))
(assert (x697 x1155))
(assert (x697 x464))
(assert (x475 x293 x738 x1173 x460))
(assert (= x1025 (and (not x947) x538)))
(assert (x697 x815))
(assert (x697 x590))
(assert (x672 x740 x383 x572 x413))
(assert (not (x951 (x229 64 x1131 x763))))
(assert (x475 x572 x413 x1019 x758))
(assert (x697 x276))
(assert (x75 (- x383 x293)))
(assert (= (and (not x125) x3) x695))
(assert (x475 x209 x690 x383 x740))
(assert (x75 (- x690 x413)))
(assert (x677 x740 (- x383 x460)))
(assert (x697 x176))
(assert (x697 x215))
(assert (x144 x642))
(assert (= 0 (x382 10000000000000000)))
(assert (x75 (- x758 x293)))
(assert (x638 x673 10000))
(assert (x697 x666))
(assert (x75 x738))
(assert (=> (<= x703 10000) (= (x382 x703) 0)))
(assert (= (=> (and (and (= x1121 false) (= 4 x1051)) (and (<= 1 x34) (<= x276 127) (= false x311) (= false x387) (= 1420994409 x423) (= false x964) (<= x730 127) (<= x276 127) (= x34 (x838 x703)) (= x1087 false) (= x196 false) (= false x1039) (= false x357) (>= x485 1) (= x84 x977) (= x1014 27257352676734538696799184386584609201489566564797675397452801577526421880832) (= x977 (<= 10000000000000000 x1095)) (= x1084 x279) (= 1011031402 x1079) (= x435 (x838 x1131)) (>= 127 x730) (= 128 x531) (= x1037 false) (= (x546 x1131) x844) (= x1095 (x46 128)) (= x844 x1199) (= 4 x451) (= x872 x681) (= 10000000000000000 x282) (= x272 (x1082 x872)) (>= x435 1) (= x1148 false) (= false x567))) x1176) x1078))
(assert (x677 x690 (- x209 x293)))
(assert (x697 x272))
(assert (x475 x1173 x460 x1019 x758))
(assert (x475 x572 x413 x460 x1173))
(assert (x697 x1113))
(assert (= (=> (and (and (not x1067) (= false x1099) (= x948 4) (= x118 (ite x1216 x470 x559)) (= x1101 true) x118 (= (= x694 x1131) x1067)) (and (and (= x82 x694) (= x1137 x303) (= 3858912147 x399) (= x800 4) (= x663 false) (= false x31) (= false x908) (= false x1098) (= x711 false) (= false x954) (<= 1 x980) (= x1241 (x1004 x82)) (= x980 (x838 x1131)) (= x303 (x602 x1131)) (>= 127 x1115) (>= 127 x1115) (= x94 false)) (and (and (and (= x912 false) (= (= x766 0) x1239) (= x683 (x593 x1131)) (>= 127 x69) (= x683 x668) (= 128 x537) (<= 1 x666) (= x766 x548) (= (x838 x1131) x666) (= 36 x1058) (= false x217) (<= x253 127) (<= 1 x254) (= x510 419287147) (= x354 (x644 x679)) (= x378 11303959121341750378730598570842417678143006398153999127348644152793735626752) (= x345 false) (= x890 x548) (= x694 x679) (= false x386) (= 2848189402 x920) (= x254 (x838 x1160)) (<= x69 127) (<= x253 127)) (and (= x1201 false) (= x1129 x766))) (and (= x915 false) (= (x838 x1131) x857) (not x182) (= true x751) (= x1015 36) (= x921 x1129) (= x1231 false) (not x411) (= x19 false) (<= 1 x857) (= x996 2982568183) (<= x928 127) (= x1113 (x756 x1124)) (<= x25 1461501637330902918203684832716283019655932542975) (= x376 false) (= x155 x860) (= x694 x1124) (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x842 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x928 127) (= (= x1131 x701) x411) (= x694 x605) (= x1109 true) (<= 0 x25) (= x273 false) (= x701 x25) (= x1156 false) (>= x842 0) (= (= x759 x1011) x182) (= x860 (x447 x1131)) (>= x921 0))))) (and (=> (and (= x125 (= 0 x1243)) (not x1239)) (and (=> (and (= x766 x459) x125) x114) (=> (not x125) x4))) (=> (and (= x459 0) x1239) x114))) x96))
(assert (x672 x209 x690 x740 x383))
(assert (x697 x124))
(assert (= (and x208 x594) x198))
(assert (x75 x332))
(assert (x75 (- x740 x1173)))
(assert (x697 x180))
(assert (x697 x1154))
(assert (x75 (- x690 x293)))
(assert (x677 x413 (- x572 x1019)))
(assert (x697 x584))
(assert (x951 2835717307))
(assert (x672 x758 x1019 x572 x413))
(assert (x672 x1173 x460 x738 x293))
(assert (x677 x209 (- x690 x572)))
(assert (x951 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x697 x689))
(assert (x697 x688))
(assert (x697 x1))
(assert (x697 x458))
(assert (x475 x293 x738 x1019 x758))
(assert (x75 (- x383 x572)))
(assert (x697 x835))
(assert (x697 x1147))
(assert (x697 x255))
(assert (= (x382 75860546588345281898627506740238830481794204685839469173503233872106576936960) 0))
(assert (x697 x1017))
(assert (x672 x383 x740 x738 x293))
(assert (< 10000 (x229 64 x1131 3)))
(assert (=> (>= 10000 x207) (= (x382 x207) 0)))
(assert (x697 x1115))
(assert (x75 (- x413 x690)))
(assert (x697 x443))
(assert (x925 x443))
(assert (x697 x362))
(assert (x144 x147))
(assert (x75 (- x690 x1019)))
(assert (x672 x460 x1173 x740 x383))
(assert (x697 x1160))
(assert (x697 x1204))
(assert (x697 x1079))
(assert (x697 x1208))
(assert (x475 x738 x293 x572 x413))
(assert (x677 x758 (- x1019 x460)))
(assert (x697 x97))
(assert (x475 x1019 x758 x740 x383))
(assert (x697 x378))
(assert (x475 x758 x1019 x740 x383))
(assert (x925 x1033))
(assert (x697 x423))
(assert (x697 x1114))
(assert (= (and (not x1239) x290) x3))
(assert (x672 x738 x293 x209 x690))
(assert (= (x382 (x229 64 x1131 x1180)) (x229 64 x1131 x1180)))
(assert (x697 x26))
(assert (x677 x738 (- x293 x740)))
(assert (x475 x383 x740 x738 x293))
(assert (x697 x764))
(assert (x475 x690 x209 x1173 x460))
(assert (x75 (- x738 x758)))
(assert (x75 (- x572 x1173)))
(assert (x677 x460 (- x1173 x413)))
(assert (= (x382 (x229 64 x326 1)) (x229 64 x326 1)))
(assert (x925 x361))
(assert (x697 x380))
(assert (x925 x451))
(assert (x697 x186))
(assert (> (x229 64 x1131 x171) 10000))
(assert (x951 2848189402))
(assert (x925 x1174))
(assert (x672 x413 x572 x460 x1173))
(assert (=> (<= x1131 10000) (= (x382 x1131) 0)))
(assert (x697 x161))
(assert (=> (<= x914 10000) (= (x382 x914) 0)))
(assert (x697 x734))
(assert (x475 x1019 x758 x293 x738))
(assert (=> (>= 10000 x93) (= (x382 x93) 0)))
(assert (x697 x32))
(assert (x75 (- x572 x740)))
(assert (= (x382 2510122281) 0))
(assert (x475 x209 x690 x460 x1173))
(assert (x697 x326))
(assert (x697 x683))
(assert (x697 x226))
(assert (x697 x1055))
(assert (x697 x699))
(assert (=> (<= x606 10000) (= 0 (x382 x606))))
(assert (x697 x479))
(assert (x697 x1138))
(assert (x75 10000))
(assert (x697 x1093))
(assert (x697 x741))
(assert (x672 x460 x1173 x738 x293))
(assert (= (x122 (x229 64 x1131 x171)) 64))
(assert (x75 (- x460 x1019)))
(assert (x677 x1173 (- x460 x758)))
(assert (x697 x723))
(assert (x672 x1019 x758 x740 x383))
(assert (x697 x20))
(assert (x672 x1019 x758 x572 x413))
(assert (x672 x1019 x758 x738 x293))
(assert (x475 x758 x1019 x383 x740))
(assert (=> (>= 10000 x112) (= 0 (x382 x112))))
(assert (x697 x448))
(assert (x697 x1062))
(assert (not (x951 (x229 64 x326 2))))
(assert (x925 x355))
(assert (> (x229 64 x606 3) 10000))
(assert (x677 x758 (- x1019 x209)))
(assert (x475 x1173 x460 x209 x690))
(assert (x475 x572 x413 x740 x383))
(assert (= (and (not x373) x81) x538))
(assert (x697 x407))
(assert (= x228 (=> (and (and (= false x68) (= 4 x732)) (and (= x104 x654) (>= 127 x168) (= 128 x1242) (= x615 false) (= 4 x443) (= (x534 x207) x1253) (= x626 x484) (= (x838 x1131) x461) (= x787 false) (= x1237 2725522033) (= x828 0) (= x1032 x165) (= x92 x207) (= x430 false) (= (< 0 x330) x104) (= x428 false) (= false x603) (<= x168 127) (= x617 2725522033) (= false x883) (>= x461 1) (>= x1207 1) (= false x340) (= x330 (x517 128)) (>= 127 x134) (<= x134 127) (= 73479928649823986090411545518015415704520669370837392133681365890082828976128 x26) (= x1207 (x838 x1160)) (= false x308) (= (x1195 x1131) x484) (= x891 false) (= false x349))) x1096)))
(assert (x475 x738 x293 x1019 x758))
(assert (x697 x1207))
(assert (x697 x250))
(assert (x697 x1011))
(assert (x697 x101))
(assert (x75 (- x1019 x460)))
(assert (x677 x758 (- x1019 x383)))
(assert (x697 x600))
(assert (x697 x232))
(assert (x697 x476))
(assert (x697 x1024))
(assert (x697 x736))
(assert (x697 x221))
(assert (x697 x164))
(assert (x697 x706))
(assert (not (x951 (x229 64 x1131 x1180))))
(assert (x697 x848))
(assert (x75 (- x690 x738)))
(assert (x697 x317))
(assert (x677 x413 (- x572 x383)))
(assert (= 0 (x382 599290589)))
(assert (x475 x293 x738 x209 x690))
(assert (x697 x1022))
(assert (x475 x209 x690 x1173 x460))
(assert (x672 x758 x1019 x460 x1173))
(assert (x697 x410))
(assert (x475 x690 x209 x740 x383))
(assert (x75 (- x209 x738)))
(assert (x697 x468))
(assert (=> (<= x326 10000) (= (x382 x326) 0)))
(assert (x75 (- x738 x740)))
(assert (x677 x209 (- x690 x1173)))
(assert (x697 x786))
(assert (x697 x627))
(assert (x697 x245))
(assert (x75 x209))
(assert (x697 x391))
(assert (x75 (- x460 x740)))
(assert (x697 x691))
(assert (x475 x690 x209 x460 x1173))
(assert (x475 x738 x293 x740 x383))
(assert (x697 x238))
(assert (x697 x1111))
(assert (x672 x758 x1019 x738 x293))
(assert (x677 x460 (- x1173 x572)))
(assert (=> (>= 10000 x705) (= 0 (x382 x705))))
(assert (x697 x610))
(assert (x697 x668))
(assert (x697 x55))
(assert (x697 x227))
(assert (x697 x927))
(assert (= (and x3 x125) x773))
(assert (x697 x64))
(assert (= 0 (x382 1575842981)))
(assert (x697 x540))
(assert (x475 x738 x293 x460 x1173))
(assert (x10 10000 x655))
(assert (= (x122 (x229 64 x149 3)) 64))
(assert (x951 67672762823786511731998939545691128838287635524233969611313623556097044381696))
(assert (= (and x1157 x707) x409))
(assert (x925 x1015))
(assert (x75 (- x758 x460)))
(assert (x697 x948))
(assert (x75 (- x740 x209)))
(assert (< (x229 64 x326 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x951 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (=> (<= x1124 10000) (= 0 (x382 x1124))))
(assert (= 0 (x382 1420994409)))
(assert (x677 x460 x1173))
(assert (x75 (- x572 x758)))
(assert (x697 x935))
(assert (x75 (- x413 x209)))
(assert (x75 (- x1173 x758)))
(assert (= 0 (x382 3858912147)))
(assert (x475 x740 x383 x209 x690))
(assert (x75 (- x738 x1173)))
(assert (x697 x1200))
(assert (x144 x30))
(assert (= x1229 (x16 (x229 64 x1131 x1229))))
(assert (x697 x392))
(assert (x697 x919))
(assert (x697 x1065))
(assert (x677 x413 (- x572 x740)))
(assert (x475 x758 x1019 x690 x209))
(assert (= x89 (=> (= (ite x151 x1142 x502) x263) (and (=> x263 x87) (=> (and (not x263) (and (= x942 x524) (= x589 x737) (= false x942))) x1007)))))
(assert (= (x382 2813824060) 0))
(assert (= (and x984 x263) x707))
(assert (x697 x419))
(assert (x475 x1019 x758 x413 x572))
(assert (x697 x173))
(assert (x475 x572 x413 x690 x209))
(assert (x75 (- x738 x690)))
(assert (x475 x293 x738 x413 x572))
(assert (> (x229 64 x326 2) 10000))
(assert (x75 x1019))
(assert (x672 x572 x413 x209 x690))
(assert (not (x951 (x229 64 x112 3))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x229 64 x112 3)))
(assert (x925 x414))
(assert (x697 x813))
(assert (x475 x413 x572 x383 x740))
(assert (x75 (- x413 x1019)))
(assert (= (x382 67672762823786511731998939545691128838287635524233969611313623556097044381696) 0))
(assert (x75 (- x1173 x383)))
(assert (x75 (- x209 x460)))
(assert (= (x382 (x229 64 x1131 3)) (x229 64 x1131 3)))
(assert (x75 x293))
(assert (x697 x1005))
(assert (x475 x383 x740 x1019 x758))
(assert (x697 x400))
(assert (x697 x93))
(assert (x75 (- x413 x383)))
(assert (x697 x766))
(assert (x475 x1019 x758 x209 x690))
(assert (x475 x460 x1173 x572 x413))
(assert (x697 x865))
(assert (x677 x1173 (- x460 x209)))
(assert (x697 x704))
(assert (x475 x758 x1019 x209 x690))
(assert (x697 x972))
(assert (x925 x20))
(assert (x677 x1173 (- x460 x690)))
(assert (x697 x107))
(assert (x697 x519))
(assert (x697 x216))
(assert (= (=> (and (and (= 4 x634) (= false x136)) (and (<= x512 127) (= x453 1011031402) (= x233 false) (= false x940) (= x971 1420994409) (= x404 x14) (= false x49) (= false x61) (= x968 (x838 x1131)) (= x17 false) (= false x710) (<= x1068 127) (= x660 (>= 100000000000000000000 x723)) (= x130 x559) (<= x1068 127) (= false x1122) (= false x794) (= false x137) (= (x752 x1246) x352) (= x1076 false) (= x404 (x552 x1131)) (<= x512 127) (= 100000000000000000000 x1215) (<= 1 x968) (<= 1 x662) (= x681 x1246) (= 4 x1033) (<= 1 x485) (= (x838 x703) x662) (= 27257352676734538696799184386584609201489566564797675397452801577526421880832 x821) (= x660 x470) (= x717 128) (= (x260 128) x723))) x96) x771))
(assert (x677 x1019 (- x758 x572)))
(assert (x697 x596))
(assert (x75 (- x758 x209)))
(assert (x697 x251))
(assert (x75 x413))
(assert (= x1180 (x16 (x229 64 x1131 x1180))))
(assert (x475 x690 x209 x738 x293))
(assert (x75 (- x209 x740)))
(assert (x925 x1117))
(assert (x697 x200))
(assert (x697 x181))
(assert (x75 (- x740 x758)))
(assert (= (x754 (x229 64 x1131 x763)) x1131))
(assert (x697 x1234))
(assert (x697 x1243))
(assert (x677 x690 (- x209 x1173)))
(assert (x677 x1019 (- x758 x690)))
(assert (x697 x111))
(assert (x697 x183))
(assert (x75 (- x293 x413)))
(assert (and (= (x390 27 3) 81) (= 81 (x390 9 9)) (= 9 (x390 3 3)) (= 27 (x390 9 3))))
(assert (x75 (- x293 x1173)))
(assert (x697 x873))
(assert (= (and (not x1157) x707) x128))
(assert (x697 x126))
(assert (x697 x685))
(assert (x697 x1041))
(assert (x672 x209 x690 x738 x293))
(assert (< (x229 64 x1131 x1180) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x697 x569))
(assert (x951 1086394137))
(assert (= (x122 (x229 64 x326 3)) 64))
(assert (x475 x758 x1019 x293 x738))
(assert (x697 x352))
(assert (x951 599290589))
(assert (x75 (- x293 x690)))
(assert (= x115 (and x604 x388)))
(assert (x677 x572 (- x413 x758)))
(assert (x677 x413 (- x572 x1173)))
(assert (x697 x148))
(assert (x697 x370))
(assert (x697 x1057))
(assert (x697 x342))
(assert (x697 x222))
(assert (x677 x413 (- x572 x690)))
(assert (x925 x347))
(assert (x697 x639))
(assert (x144 x1107))
(assert (x672 x738 x293 x740 x383))
(assert (x697 x433))
(assert (x697 x719))
(assert (x475 x738 x293 x690 x209))
(assert (x75 (- x690 x740)))
(assert (x75 (- x383 x413)))
(assert (x697 x1214))
(assert (x697 x129))
(assert (x951 2856598208))
(assert (= 0 (x382 2835717307)))
(assert (x697 x414))
(assert (= 0 (x382 42484642723563678990085296957100989206263395779143859332068879344986694352896)))
(assert (x677 x413 (- x572 x209)))
(assert (x475 x413 x572 x209 x690))
(assert (x697 x341))
(assert (x75 (- x413 x1173)))
(assert (= (x754 (x229 64 x1131 x171)) x1131))
(assert (x580 x1107 x642))
(assert (> (x229 64 x1131 x763) 10000))
(assert (= x1131 (x754 (x229 64 x1131 x1180))))
(assert (x475 x690 x209 x758 x1019))
(assert (x697 x990))
(assert (x697 x557))
(assert (x75 (- x383 x738)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x229 64 x326 1)))
(assert (x75 (- x572 x738)))
(assert (x75 (- x758 x572)))
(assert (x951 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x75 (- x738 x1019)))
(assert (x697 x1222))
(assert (= x1131 (x754 (x229 64 x1131 x309))))
(assert (x697 x521))
(assert (x697 x732))
(assert (x475 x293 x738 x740 x383))
(assert (x697 x1015))
(assert (x475 x1173 x460 x572 x413))
(assert (x697 x1066))
(assert (x697 x769))
(assert (x697 x1169))
(assert (x677 x209 (- x690 x293)))
(assert (x677 x572 (- x413 x1019)))
(assert (= x620 (or x170 x586)))
(assert (x75 (- x1173 x413)))
(assert (x677 x1019 x758))
(assert (x677 x572 (- x413 x209)))
(assert (x697 x1236))
(assert (x697 x47))
(assert (x475 x460 x1173 x293 x738))
(assert (x475 x383 x740 x690 x209))
(assert (x580 x366 x1081))
(assert (= (x382 (x229 64 x326 2)) (x229 64 x326 2)))
(assert (x697 x420))
(assert (x75 (- x1019 x293)))
(assert (x697 x1183))
(assert (= 0 (x382 340282366920938463463374607431768211454)))
(assert (x75 (- x293 x572)))
(assert (x697 x776))
(assert (= 0 (x382 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x326 (x754 (x229 64 x326 3))))
(assert (x925 x106))
(assert (x144 10000))
(assert (x697 x643))
(assert (x672 x293 x738 x209 x690))
(assert (x697 x466))
(assert (> (x229 64 x1131 x1180) 10000))
(assert (= 0 (x382 1461501637330902918203684832716283019655932542975)))
(assert (x475 x413 x572 x738 x293))
(assert (x677 x738 (- x293 x1173)))
(assert (x697 x1012))
(assert (x475 x740 x383 x572 x413))
(assert (= (or x501 x695 x773) x81))
(assert (x697 x480))
(assert (x697 x1251))
(assert (x697 x901))
(assert (x672 x572 x413 x740 x383))
(assert (x475 x1173 x460 x758 x1019))
(assert (x475 x460 x1173 x758 x1019))
(assert (x475 x758 x1019 x1173 x460))
(assert (x697 x946))
(assert (x697 x278))
(assert (x697 x1105))
(assert (x672 x738 x293 x460 x1173))
(assert (=> (>= 10000 x872) (= 0 (x382 x872))))
(assert (= (x122 (x229 64 x1131 1)) 64))
(assert (x697 x537))
(assert (x697 x1069))
(assert (=> (>= 10000 x232) (= (x382 x232) 0)))
(assert (x697 x577))
(assert (x475 x1173 x460 x293 x738))
(assert (x75 (- x1019 x740)))
(assert (= (x122 (x229 64 x606 3)) 64))
(assert (x697 x415))
(assert (x697 x633))
(assert (x697 x453))
(assert (x677 x690 (- x209 x738)))
(assert (= (x229 64 x1131 x675) (x382 (x229 64 x1131 x675))))
(assert (x677 x758 (- x1019 x1173)))
(assert (x75 (- x690 x460)))
(assert (x672 x383 x740 x1019 x758))
(assert (< 10000 (x229 64 x112 3)))
(assert (x75 (- x209 x293)))
(assert (x677 x758 (- x1019 x293)))
(assert (x951 2982568183))
(assert (x677 x738 (- x293 x690)))
(assert (x75 (- x738 x460)))
(assert (x475 x572 x413 x383 x740))
(assert (x677 x572 (- x413 x293)))
(assert (x697 x857))
(assert (x677 x738 (- x293 x758)))
(assert (x677 x460 (- x1173 x209)))
(assert (= x544 (or x722 x198 x646)))
(assert (= (x16 (x229 64 x606 3)) 3))
(assert (= x604 (or x393 x967 x1025)))
(assert (x672 x1173 x460 x572 x413))
(assert (x697 x457))
(assert (x697 x402))
(assert (x697 x991))
(assert (x697 x1117))
(assert (x475 x740 x383 x738 x293))
(assert (x697 x963))
(assert (x697 x621))
(assert (x677 x1173 (- x460 x413)))
(assert (x75 (- x293 x460)))
(assert (x951 100000000000000000000))
(assert (x697 x1137))
(assert (x697 x626))
(assert (x697 x426))
(assert (x951 2725522033))
(assert (x697 x607))
(assert (x697 x920))
(assert (> (x229 64 x1131 x1229) 10000))
(assert (x951 75860546588345281898627506740238830481794204685839469173503233872106576936960))
(assert (= (x229 64 x1131 7) (x382 (x229 64 x1131 7))))
(assert (x697 x1091))
(assert (x697 x729))
(assert (x925 x706))
(assert (x697 x82))
(assert (x697 x730))
(assert (x75 (- x460 x383)))
(assert (x677 x572 (- x413 x1173)))
(assert (= (x754 (x229 64 x149 3)) x149))
(assert (x697 x459))
(assert (x677 x460 (- x1173 x690)))
(assert (x697 x928))
(assert (x75 (- x413 x738)))
(assert (= (x382 1011031402) 0))
(assert (x75 (- x460 x758)))
(assert (x697 x858))
(assert (x697 x304))
(assert (x75 x383))
(assert (x75 (- x413 x758)))
(check-sat)
(exit)
