(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x875 () Bool)
(declare-fun x1499 () Int)
(declare-fun x3641 (Int Int) Int)
(declare-fun x1180 () Int)
(declare-fun x3255 () Int)
(declare-fun x872 () Int)
(declare-fun x743 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x770 () Bool)
(declare-fun x3140 () Bool)
(declare-fun x45 () Int)
(declare-fun x258 () Int)
(declare-fun x1045 () Int)
(declare-fun x2836 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x559 () Bool)
(declare-fun x1092 () Int)
(declare-fun x2242 () Bool)
(declare-fun x2942 () Int)
(declare-fun x2103 () Int)
(declare-fun x2969 () Int)
(declare-fun x15 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x2406 () Int)
(declare-fun x1640 () Int)
(declare-fun x3254 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x807 () Int)
(declare-fun x1712 () Int)
(declare-fun x2278 () Bool)
(declare-fun x3251 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x1726 () Int)
(declare-fun x2392 () Int)
(declare-fun x34 (Int Int) Int)
(declare-fun x275 () Int)
(declare-fun x1080 () Int)
(declare-fun x3181 () Int)
(declare-fun x2837 () Int)
(declare-fun x603 () Bool)
(declare-fun x3479 () Bool)
(declare-fun x254 () Int)
(declare-fun x2092 () Bool)
(declare-fun x579 () Bool)
(declare-fun x3417 () Int)
(declare-fun x1694 () Int)
(declare-fun x3657 () Bool)
(declare-fun x584 () Int)
(declare-fun x715 () Int)
(declare-fun x2166 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x3294 () Int)
(declare-fun x957 () Int)
(declare-fun x3116 () Bool)
(declare-fun x1133 () Int)
(declare-fun x851 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x2724 () Int)
(declare-fun x3290 () Bool)
(declare-fun x2696 () Bool)
(declare-fun x3202 () Bool)
(declare-fun x857 () Int)
(declare-fun x3513 () Int)
(declare-fun x2197 () Int)
(declare-fun x1410 () Int)
(declare-fun x1618 () Int)
(declare-fun x3188 () Int)
(declare-fun x3830 () Bool)
(declare-fun x3532 () Int)
(declare-fun x208 () Int)
(declare-fun x2584 () Int)
(declare-fun x30 () Bool)
(declare-fun x3440 () Int)
(declare-fun x2548 () Bool)
(declare-fun x2491 () Int)
(declare-fun x534 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x3570 () Int)
(declare-fun x1853 () Bool)
(declare-fun x2702 () Int)
(declare-fun x2714 () Bool)
(declare-fun x3685 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x683 () Bool)
(declare-fun x642 () Int)
(declare-fun x3069 () Bool)
(declare-fun x3550 () Int)
(declare-fun x1006 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x3216 () Int)
(declare-fun x2794 () Bool)
(declare-fun x3056 () Int)
(declare-fun x3859 () Int)
(declare-fun x3357 () Int)
(declare-fun x1609 () Int)
(declare-fun x1576 () Bool)
(declare-fun x307 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x609 () Int)
(declare-fun x2843 () Int)
(declare-fun x206 () Bool)
(declare-fun x3050 () Int)
(declare-fun x2457 () Int)
(declare-fun x1422 () Bool)
(declare-fun x3725 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x3283 () Int)
(declare-fun x219 () Int)
(declare-fun x3494 () Int)
(declare-fun x1687 () Int)
(declare-fun x974 () Bool)
(declare-fun x1816 () Int)
(declare-fun x1354 () Bool)
(declare-fun x808 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x2953 (Int Int) Int)
(declare-fun x1191 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x3232 () Bool)
(declare-fun x288 () Int)
(declare-fun x3215 () Int)
(declare-fun x445 () Int)
(declare-fun x77 () Bool)
(declare-fun x3611 () Int)
(declare-fun x1669 () Bool)
(declare-fun x3864 () Int)
(declare-fun x3035 () Bool)
(declare-fun x2569 () Bool)
(declare-fun x1253 () Int)
(declare-fun x678 () Bool)
(declare-fun x3121 () Int)
(declare-fun x1973 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x1588 () Int)
(declare-fun x3231 () Bool)
(declare-fun x369 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x311 () Bool)
(declare-fun x3946 () Bool)
(declare-fun x2892 () Bool)
(declare-fun x1461 () Int)
(declare-fun x1522 () Int)
(declare-fun x774 () Bool)
(declare-fun x2817 () Int)
(declare-fun x1971 () Bool)
(declare-fun x676 () Int)
(declare-fun x3374 () Int)
(declare-fun x996 () Int)
(declare-fun x3368 () Int)
(declare-fun x517 () Int)
(declare-fun x1403 () Bool)
(declare-fun x3605 () Bool)
(declare-fun x3651 () Bool)
(declare-fun x975 () Bool)
(declare-fun x918 () Bool)
(declare-fun x3911 () Int)
(declare-fun x2218 () Int)
(declare-fun x564 () Int)
(declare-fun x1152 () Int)
(declare-fun x289 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x1614 () Int)
(declare-fun x1921 () Bool)
(declare-fun x3740 () Bool)
(declare-fun x613 () Int)
(declare-fun x2574 () Int)
(declare-fun x106 () Bool)
(declare-fun x2713 () Bool)
(declare-fun x3118 () Int)
(declare-fun x3586 () Bool)
(declare-fun x14 () Int)
(declare-fun x2040 () Bool)
(declare-fun x2763 () Int)
(declare-fun x3894 () Int)
(declare-fun x1972 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x3723 () Bool)
(declare-fun x3296 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x3668 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x211 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x699 () Int)
(declare-fun x1162 () Int)
(declare-fun x2196 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x3686 () Bool)
(declare-fun x383 () Int)
(declare-fun x1691 () Int)
(declare-fun x328 () Int)
(declare-fun x2806 () Bool)
(declare-fun x234 () Int)
(declare-fun x52 () Int)
(declare-fun x367 () Int)
(declare-fun x3866 () Bool)
(declare-fun x1752 () Int)
(declare-fun x3874 () Bool)
(declare-fun x3578 () Int)
(declare-fun x3141 () Int)
(declare-fun x1249 () Bool)
(declare-fun x1275 () Int)
(declare-fun x1025 () Int)
(declare-fun x1197 () Int)
(declare-fun x2443 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x904 () Int)
(declare-fun x1074 () Int)
(declare-fun x1527 () Int)
(declare-fun x3347 () Bool)
(declare-fun x931 () Int)
(declare-fun x2699 () Int)
(declare-fun x1898 () Bool)
(declare-fun x3942 () Bool)
(declare-fun x2299 () Int)
(declare-fun x1511 () Int)
(declare-fun x416 () Int)
(declare-fun x3469 () Int)
(declare-fun x1308 () Int)
(declare-fun x2330 () Int)
(declare-fun x492 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x279 () Int)
(declare-fun x1239 () Int)
(declare-fun x1418 () Bool)
(declare-fun x2989 () Int)
(declare-fun x1529 () Int)
(declare-fun x3101 () Int)
(declare-fun x2586 () Int)
(declare-fun x982 () Int)
(declare-fun x1363 () Int)
(declare-fun x143 () Bool)
(declare-fun x3604 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x1719 () Int)
(declare-fun x3307 () Bool)
(declare-fun x3082 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x883 () Int)
(declare-fun x1155 () Int)
(declare-fun x2522 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x1113 () Int)
(declare-fun x744 () Bool)
(declare-fun x2502 () Int)
(declare-fun x1040 () Bool)
(declare-fun x2649 () Int)
(declare-fun x3848 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x2708 () Bool)
(declare-fun x170 () Bool)
(declare-fun x2800 () Bool)
(declare-fun x3739 () Bool)
(declare-fun x2932 () Int)
(declare-fun x1007 () Bool)
(declare-fun x780 () Bool)
(declare-fun x3560 () Int)
(declare-fun x155 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x2401 () Int)
(declare-fun x230 () Bool)
(declare-fun x1226 () Int)
(declare-fun x2160 () Int)
(declare-fun x3008 () Int)
(declare-fun x1585 () Int)
(declare-fun x3157 () Bool)
(declare-fun x3559 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x707 () Bool)
(declare-fun x3458 () Int)
(declare-fun x2010 () Int)
(declare-fun x1828 () Int)
(declare-fun x2627 () Bool)
(declare-fun x2959 () Int)
(declare-fun x964 () Int)
(declare-fun x2933 () Int)
(declare-fun x348 () Bool)
(declare-fun x3190 () Bool)
(declare-fun x232 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x2558 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x3793 () Int)
(declare-fun x3337 () Bool)
(declare-fun x1027 () Int)
(declare-fun x3356 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x2269 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x2928 () Bool)
(declare-fun x1548 () Int)
(declare-fun x2833 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x2895 () Bool)
(declare-fun x3382 () Bool)
(declare-fun x414 () Bool)
(declare-fun x453 () Bool)
(declare-fun x3841 () Bool)
(declare-fun x2074 () Int)
(declare-fun x98 () Int)
(declare-fun x11 () Bool)
(declare-fun x3319 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x2795 () Bool)
(declare-fun x990 () Bool)
(declare-fun x272 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1969 () Int)
(declare-fun x2534 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x2606 () Int)
(declare-fun x1463 () Int)
(declare-fun x1871 () Int)
(declare-fun x2333 () Int)
(declare-fun x1595 () Int)
(declare-fun x3199 () Bool)
(declare-fun x2775 () Int)
(declare-fun x3444 () Bool)
(declare-fun x1982 () Int)
(declare-fun x1209 () Int)
(declare-fun x3505 () Int)
(declare-fun x1369 () Bool)
(declare-fun x3503 () Int)
(declare-fun x782 () Int)
(declare-fun x513 () Int)
(declare-fun x712 () Int)
(declare-fun x3205 () Bool)
(declare-fun x2885 () Int)
(declare-fun x3334 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x73 (Int) Int)
(declare-fun x1750 () Int)
(declare-fun x1127 () Bool)
(declare-fun x405 () Bool)
(declare-fun x3112 () Bool)
(declare-fun x2701 () Int)
(declare-fun x1227 () Bool)
(declare-fun x3292 () Int)
(declare-fun x2957 () Bool)
(declare-fun x3870 () Int)
(declare-fun x3242 () Int)
(declare-fun x171 () Bool)
(declare-fun x317 () Int)
(declare-fun x791 () Int)
(declare-fun x3547 () Bool)
(declare-fun x3451 () Bool)
(declare-fun x2077 () Int)
(declare-fun x3593 () Bool)
(declare-fun x1912 () Int)
(declare-fun x3609 () Bool)
(declare-fun x54 () Int)
(declare-fun x1619 () Bool)
(declare-fun x2303 () Int)
(declare-fun x1083 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x3225 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x1824 () Int)
(declare-fun x2410 () Int)
(declare-fun x181 () Bool)
(declare-fun x945 () Int)
(declare-fun x1202 () Int)
(declare-fun x2431 () Int)
(declare-fun x2821 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x3577 () Bool)
(declare-fun x3812 () Int)
(declare-fun x3508 () Bool)
(declare-fun x1725 () Int)
(declare-fun x2677 () Int)
(declare-fun x535 () Int)
(declare-fun x469 () Int)
(declare-fun x3284 () Bool)
(declare-fun x3490 () Int)
(declare-fun x558 () Int)
(declare-fun x608 () Bool)
(declare-fun x1855 () Int)
(declare-fun x281 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x2971 () Bool)
(declare-fun x999 () Bool)
(declare-fun x666 () Bool)
(declare-fun x2106 () Int)
(declare-fun x1479 () Bool)
(declare-fun x2177 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1902 () Int)
(declare-fun x213 () Int)
(declare-fun x2737 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x633 () Int)
(declare-fun x1109 () Int)
(declare-fun x40 () Bool)
(declare-fun x2530 () Int)
(declare-fun x856 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x728 () Bool)
(declare-fun x2968 () Int)
(declare-fun x1801 () Int)
(declare-fun x2532 () Int)
(declare-fun x681 () Int)
(declare-fun x1678 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x2141 () Int)
(declare-fun x3459 () Int)
(declare-fun x1294 () Bool)
(declare-fun x229 () Int)
(declare-fun x2750 () Bool)
(declare-fun x3855 () Int)
(declare-fun x2019 () Bool)
(declare-fun x3318 (Int) Int)
(declare-fun x954 () Int)
(declare-fun x2583 () Bool)
(declare-fun x3391 () Int)
(declare-fun x115 () Bool)
(declare-fun x2230 () Bool)
(declare-fun x2216 () Bool)
(declare-fun x514 () Bool)
(declare-fun x1810 () Int)
(declare-fun x2408 () Int)
(declare-fun x3923 () Bool)
(declare-fun x966 () Int)
(declare-fun x507 () Int)
(declare-fun x3681 () Int)
(declare-fun x2316 () Bool)
(declare-fun x161 () Bool)
(declare-fun x2048 () Int)
(declare-fun x3343 () Int)
(declare-fun x32 () Int)
(declare-fun x618 () Bool)
(declare-fun x1875 () Int)
(declare-fun x786 () Bool)
(declare-fun x466 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x3453 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x841 () Int)
(declare-fun x1862 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x1791 () Int)
(declare-fun x3766 () Bool)
(declare-fun x2525 () Int)
(declare-fun x2947 () Bool)
(declare-fun x2325 () Int)
(declare-fun x2631 () Bool)
(declare-fun x2718 () Int)
(declare-fun x286 () Bool)
(declare-fun x3747 () Bool)
(declare-fun x1600 () Int)
(declare-fun x3912 () Int)
(declare-fun x1948 () Int)
(declare-fun x2672 () Int)
(declare-fun x647 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1961 () Int)
(declare-fun x3269 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x2486 () Int)
(declare-fun x818 () Int)
(declare-fun x3052 () Int)
(declare-fun x3600 () Int)
(declare-fun x2653 () Int)
(declare-fun x2310 () Int)
(declare-fun x3761 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x2417 () Int)
(declare-fun x3418 () Int)
(declare-fun x1065 () Bool)
(declare-fun x691 () Int)
(declare-fun x3994 () Int)
(declare-fun x601 () Int)
(declare-fun x3871 () Bool)
(declare-fun x1846 () Int)
(declare-fun x1617 () Int)
(declare-fun x3797 (Int Int) Int)
(declare-fun x2247 () Int)
(declare-fun x1796 () Int)
(declare-fun x2879 () Int)
(declare-fun x29 () Bool)
(declare-fun x2254 () Int)
(declare-fun x194 () Bool)
(declare-fun x548 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x3741 () Bool)
(declare-fun x2444 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x2276 () Bool)
(declare-fun x476 () Bool)
(declare-fun x2538 () Int)
(declare-fun x13 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x631 () Bool)
(declare-fun x768 () Bool)
(declare-fun x182 () Bool)
(declare-fun x1052 () Int)
(declare-fun x3332 () Bool)
(declare-fun x3758 () Int)
(declare-fun x3287 () Int)
(declare-fun x2630 () Int)
(declare-fun x2550 () Bool)
(declare-fun x3617 () Int)
(declare-fun x1760 () Int)
(declare-fun x463 () Int)
(declare-fun x1615 () Bool)
(declare-fun x3239 () Int)
(declare-fun x3576 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x1212 () Int)
(declare-fun x1084 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x816 () Bool)
(declare-fun x736 () Int)
(declare-fun x2755 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x3716 () Bool)
(declare-fun x485 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1244 () Int)
(declare-fun x615 () Int)
(declare-fun x129 () Bool)
(declare-fun x205 () Int)
(declare-fun x1279 () Int)
(declare-fun x2742 () Int)
(declare-fun x377 () Int)
(declare-fun x1988 () Bool)
(declare-fun x326 () Bool)
(declare-fun x3289 () Int)
(declare-fun x3010 () Int)
(declare-fun x1860 () Bool)
(declare-fun x693 () Int)
(declare-fun x1762 () Int)
(declare-fun x3878 () Int)
(declare-fun x1758 () Bool)
(declare-fun x3583 () Int)
(declare-fun x2572 () Int)
(declare-fun x1017 () Int)
(declare-fun x3618 () Int)
(declare-fun x352 () Int)
(declare-fun x110 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x2535 () Bool)
(declare-fun x928 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x762 () Int)
(declare-fun x3147 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x639 () Int)
(declare-fun x2371 () Int)
(declare-fun x292 () Int)
(declare-fun x763 () Int)
(declare-fun x2501 () Int)
(declare-fun x766 () Int)
(declare-fun x3738 () Bool)
(declare-fun x907 () Bool)
(declare-fun x3428 () Bool)
(declare-fun x2300 () Bool)
(declare-fun x976 () Int)
(declare-fun x3966 () Int)
(declare-fun x2776 () Bool)
(declare-fun x1266 () Int)
(declare-fun x2999 () Bool)
(declare-fun x1729 () Bool)
(declare-fun x3767 () Int)
(declare-fun x2251 () Int)
(declare-fun x3839 () Int)
(declare-fun x3544 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x2591 () Bool)
(declare-fun x424 () Bool)
(declare-fun x3768 () Int)
(declare-fun x718 () Bool)
(declare-fun x1896 () Int)
(declare-fun x2666 () Int)
(declare-fun x1543 () Int)
(declare-fun x2085 () Bool)
(declare-fun x802 () Int)
(declare-fun x1911 () Int)
(declare-fun x746 () Bool)
(declare-fun x3100 () Int)
(declare-fun x439 () Int)
(declare-fun x385 () Int)
(declare-fun x2237 () Int)
(declare-fun x3041 () Bool)
(declare-fun x70 () Int)
(declare-fun x1957 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x3831 () Bool)
(declare-fun x844 () Int)
(declare-fun x3046 () Int)
(declare-fun x2211 () Int)
(declare-fun x429 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x2017 () Int)
(declare-fun x847 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x3743 () Int)
(declare-fun x1002 () Bool)
(declare-fun x670 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x923 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x2781 () Bool)
(declare-fun x3637 () Bool)
(declare-fun x388 () Int)
(declare-fun x846 () Bool)
(declare-fun x1899 () Int)
(declare-fun x1733 () Bool)
(declare-fun x1390 () Int)
(declare-fun x2411 () Int)
(declare-fun x2706 (Int Int) Int)
(declare-fun x3876 () Int)
(declare-fun x2955 () Int)
(declare-fun x3957 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x3491 () Int)
(declare-fun x265 () Bool)
(declare-fun x1613 () Int)
(declare-fun x2560 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x2828 () Bool)
(declare-fun x1936 () Int)
(declare-fun x392 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x798 () Int)
(declare-fun x3567 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x3885 () Int)
(declare-fun x3313 () Int)
(declare-fun x550 () Bool)
(declare-fun x1271 () Int)
(declare-fun x437 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x2881 () Int)
(declare-fun x1150 () Int)
(declare-fun x1829 () Int)
(declare-fun x1851 () Int)
(declare-fun x2132 () Bool)
(declare-fun x941 () Int)
(declare-fun x1897 () Int)
(declare-fun x1868 () Bool)
(declare-fun x3119 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x2769 () Int)
(declare-fun x3139 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x2173 () Bool)
(declare-fun x3669 () Int)
(declare-fun x2526 () Int)
(declare-fun x3406 () Int)
(declare-fun x3972 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x1682 () Int)
(declare-fun x3351 () Int)
(declare-fun x1070 () Bool)
(declare-fun x202 () Int)
(declare-fun x3796 () Int)
(declare-fun x1783 () Bool)
(declare-fun x3857 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x1699 () Int)
(declare-fun x1659 () Bool)
(declare-fun x8 () Bool)
(declare-fun x2549 () Int)
(declare-fun x913 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x529 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x887 () Int)
(declare-fun x1105 () Int)
(declare-fun x1004 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x821 () Int)
(declare-fun x231 () Int)
(declare-fun x1336 () Bool)
(declare-fun x3079 () Int)
(declare-fun x1396 () Int)
(declare-fun x1743 (Int) Int)
(declare-fun x3996 () Bool)
(declare-fun x3823 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x431 () Int)
(declare-fun x842 () Bool)
(declare-fun x1303 () Int)
(declare-fun x2692 () Bool)
(declare-fun x2851 () Int)
(declare-fun x2404 () Int)
(declare-fun x1777 () Int)
(declare-fun x224 () Int)
(declare-fun x3626 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x595 () Bool)
(declare-fun x3228 () Int)
(declare-fun x3803 () Int)
(declare-fun x3179 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x864 () Bool)
(declare-fun x2255 () Int)
(declare-fun x3180 () Int)
(declare-fun x2589 () Bool)
(declare-fun x575 () Int)
(declare-fun x1018 () Int)
(declare-fun x1674 () Bool)
(declare-fun x3636 () Int)
(declare-fun x962 () Bool)
(declare-fun x3174 () Int)
(declare-fun x3161 () Bool)
(declare-fun x3804 () Bool)
(declare-fun x3206 () Int)
(declare-fun x3373 () Int)
(declare-fun x1326 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x1908 () Int)
(declare-fun x825 () Bool)
(declare-fun x1978 () Int)
(declare-fun x3266 () Bool)
(declare-fun x2065 () Int)
(declare-fun x1999 () Bool)
(declare-fun x338 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x1519 () Int)
(declare-fun x340 () Int)
(declare-fun x2783 () Bool)
(declare-fun x102 () Int)
(declare-fun x734 () Int)
(declare-fun x1089 () Bool)
(declare-fun x401 () Int)
(declare-fun x2801 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x3237 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x3128 () Int)
(declare-fun x179 () Int)
(declare-fun x526 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x2204 () Int)
(declare-fun x2949 () Int)
(declare-fun x3495 () Int)
(declare-fun x3386 () Int)
(declare-fun x555 () Bool)
(declare-fun x3034 () Int)
(declare-fun x685 () Int)
(declare-fun x309 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x2373 () Int)
(declare-fun x641 () Bool)
(declare-fun x6 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x801 () Int)
(declare-fun x2945 () Bool)
(declare-fun x1950 () Int)
(declare-fun x1958 () Bool)
(declare-fun x2344 () Int)
(declare-fun x2014 () Bool)
(declare-fun x592 () Int)
(declare-fun x1530 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x906 () Bool)
(declare-fun x3819 () Bool)
(declare-fun x3826 () Bool)
(declare-fun x1438 () Int)
(declare-fun x866 () Bool)
(declare-fun x456 () Bool)
(declare-fun x501 () Bool)
(declare-fun x2909 () Int)
(declare-fun x92 () Bool)
(declare-fun x3580 () Bool)
(declare-fun x2681 () Int)
(declare-fun x3779 () Int)
(declare-fun x3062 () Bool)
(declare-fun x1952 () Int)
(declare-fun x2772 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x3022 () Int)
(declare-fun x327 () Bool)
(declare-fun x2698 () Int)
(declare-fun x2322 () Int)
(declare-fun x500 () Bool)
(declare-fun x3727 () Bool)
(declare-fun x3780 () Int)
(declare-fun x2797 () Int)
(declare-fun x3013 () Int)
(declare-fun x1347 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x3518 () Int)
(declare-fun x1346 () Bool)
(declare-fun x3322 () Int)
(declare-fun x1276 () Bool)
(declare-fun x2941 () Int)
(declare-fun x1546 () Bool)
(declare-fun x2846 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x3916 () Int)
(declare-fun x3721 () Int)
(declare-fun x1920 () Int)
(declare-fun x1927 () Int)
(declare-fun x3854 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x3426 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x3574 () Int)
(declare-fun x2753 () Int)
(declare-fun x2352 () Int)
(declare-fun x2976 () Bool)
(declare-fun x3288 () Int)
(declare-fun x1580 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x3755 () Bool)
(declare-fun x3827 () Int)
(declare-fun x815 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x3958 () Bool)
(declare-fun x2661 () Int)
(declare-fun x3354 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x3496 () Int)
(declare-fun x2882 () Bool)
(declare-fun x2809 () Bool)
(declare-fun x339 () Bool)
(declare-fun x2259 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x1686 () Int)
(declare-fun x2890 () Bool)
(declare-fun x164 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x3233 () Int)
(declare-fun x146 () Bool)
(declare-fun x3055 () Int)
(declare-fun x3394 () Int)
(declare-fun x3964 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x2267 () Int)
(declare-fun x3734 () Bool)
(declare-fun x3884 () Int)
(declare-fun x1168 () Int)
(declare-fun x59 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x3945 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x2869 () Bool)
(declare-fun x1922 () Int)
(declare-fun x3209 () Bool)
(declare-fun x3074 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x590 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x86 () Bool)
(declare-fun x159 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x2657 () Int)
(declare-fun x3064 () Int)
(declare-fun x2762 () Int)
(declare-fun x1355 () Int)
(declare-fun x2205 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x854 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x176 () Int)
(declare-fun x1665 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x3921 () Bool)
(declare-fun x1316 () Int)
(declare-fun x1021 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x834 () Int)
(declare-fun x1925 () Int)
(declare-fun x3317 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x3369 () Int)
(declare-fun x3466 () Bool)
(declare-fun x2043 () Int)
(declare-fun x838 () Int)
(declare-fun x422 () Int)
(declare-fun x1577 () Int)
(declare-fun x3411 () Int)
(declare-fun x1349 () Int)
(declare-fun x3475 () Bool)
(declare-fun x184 () Bool)
(declare-fun x858 () Bool)
(declare-fun x2036 () Int)
(declare-fun x3509 () Bool)
(declare-fun x2545 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x3543 () Bool)
(declare-fun x2861 () Int)
(declare-fun x3304 () Int)
(declare-fun x2164 () Bool)
(declare-fun x572 () Bool)
(declare-fun x1861 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x3484 () Int)
(declare-fun x3430 () Bool)
(declare-fun x3047 () Int)
(declare-fun x2093 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x3345 () Int)
(declare-fun x1037 () Int)
(declare-fun x2256 () Bool)
(declare-fun x1310 () Int)
(declare-fun x3058 () Int)
(declare-fun x3341 () Int)
(declare-fun x3511 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x3642 () Bool)
(declare-fun x2115 () Bool)
(declare-fun x993 () Bool)
(declare-fun x21 () Int)
(declare-fun x2452 () Int)
(declare-fun x2784 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x3517 () Bool)
(declare-fun x257 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x2505 () Bool)
(declare-fun x2841 () Bool)
(declare-fun x606 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1869 () Int)
(declare-fun x3523 () Bool)
(declare-fun x1353 () Int)
(declare-fun x350 () Int)
(declare-fun x293 () Int)
(declare-fun x1416 () Bool)
(declare-fun x1213 () Int)
(declare-fun x1942 () Int)
(declare-fun x705 () Int)
(declare-fun x688 () Int)
(declare-fun x3125 () Int)
(declare-fun x1820 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x3853 () Int)
(declare-fun x1452 () Bool)
(declare-fun x402 () Int)
(declare-fun x1583 () Int)
(declare-fun x3690 () Bool)
(declare-fun x1512 () Int)
(declare-fun x1142 () Int)
(declare-fun x3683 () Int)
(declare-fun x242 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x3596 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x754 () Bool)
(declare-fun x632 () Bool)
(declare-fun x2925 () Int)
(declare-fun x2796 () Bool)
(declare-fun x3122 () Int)
(declare-fun x1788 () Int)
(declare-fun x965 () Int)
(declare-fun x3631 () Bool)
(declare-fun x427 () Bool)
(declare-fun x3252 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x24 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x282 () Bool)
(declare-fun x3753 () Int)
(declare-fun x3172 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x3048 () Int)
(declare-fun x573 () Int)
(declare-fun x3515 () Bool)
(declare-fun x2142 () Int)
(declare-fun x1024 () Bool)
(declare-fun x933 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x578 () Int)
(declare-fun x2684 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x881 () Int)
(declare-fun x2397 () Int)
(declare-fun x862 () Bool)
(declare-fun x2782 () Bool)
(declare-fun x2862 () Bool)
(declare-fun x3068 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x696 () Int)
(declare-fun x2948 () Int)
(declare-fun x538 () Bool)
(declare-fun x1264 () Int)
(declare-fun x3829 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x2700 () Bool)
(declare-fun x2071 () Int)
(declare-fun x790 () Bool)
(declare-fun x3858 () Bool)
(declare-fun x3279 () Bool)
(declare-fun x3235 () Int)
(declare-fun x1189 (Int) Int)
(declare-fun x2284 () Int)
(declare-fun x2277 () Int)
(declare-fun x2664 () Int)
(declare-fun x1060 () Bool)
(declare-fun x2145 () Int)
(declare-fun x1116 () Bool)
(declare-fun x885 () Int)
(declare-fun x1061 () Int)
(declare-fun x3729 () Bool)
(declare-fun x3506 () Bool)
(declare-fun x776 () Int)
(declare-fun x2308 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x260 () Int)
(declare-fun x153 () Int)
(declare-fun x3389 () Int)
(declare-fun x349 () Int)
(declare-fun x1243 () Int)
(declare-fun x1450 () Int)
(declare-fun x1179 () Bool)
(declare-fun x438 () Bool)
(declare-fun x90 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x1847 () Int)
(declare-fun x2473 () Int)
(declare-fun x3847 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x165 () Int)
(declare-fun x2139 () Bool)
(declare-fun x627 () Bool)
(declare-fun x2587 () Int)
(declare-fun x3303 () Bool)
(declare-fun x3311 () Bool)
(declare-fun x512 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x1633 () Int)
(declare-fun x16 () Int)
(declare-fun x2152 () Int)
(declare-fun x1201 () Int)
(declare-fun x2722 () Bool)
(declare-fun x805 () Bool)
(declare-fun x947 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x3443 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x2636 () Bool)
(declare-fun x1317 () Int)
(declare-fun x725 () Bool)
(declare-fun x3027 () Bool)
(declare-fun x1106 () Int)
(declare-fun x3110 () Bool)
(declare-fun x2510 () Bool)
(declare-fun x508 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x713 () Bool)
(declare-fun x3023 () Int)
(declare-fun x444 () Bool)
(declare-fun x177 () Bool)
(declare-fun x207 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x441 () Int)
(declare-fun x3656 () Int)
(declare-fun x1010 () Int)
(declare-fun x3814 () Int)
(declare-fun x3363 () Int)
(declare-fun x83 () Bool)
(declare-fun x2289 () Int)
(declare-fun x3420 () Bool)
(declare-fun x3156 () Int)
(declare-fun x849 () Bool)
(declare-fun x397 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x2340 () Int)
(declare-fun x1331 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x1799 () Int)
(declare-fun x2321 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x3422 () Bool)
(declare-fun x2744 () Bool)
(declare-fun x3526 () Bool)
(declare-fun x602 () Int)
(declare-fun x251 () Bool)
(declare-fun x3680 () Int)
(declare-fun x1019 () Bool)
(declare-fun x3953 () Int)
(declare-fun x3589 () Int)
(declare-fun x903 () Int)
(declare-fun x1205 () Bool)
(declare-fun x3261 () Int)
(declare-fun x50 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x2602 () Bool)
(declare-fun x1520 () Int)
(declare-fun x157 () Bool)
(declare-fun x2182 () Int)
(declare-fun x2360 () Bool)
(declare-fun x2808 () Bool)
(declare-fun x775 (Int) Bool)
(declare-fun x313 () Int)
(declare-fun x1717 () Bool)
(declare-fun x19 () Int)
(declare-fun x2038 () Bool)
(declare-fun x1515 () Int)
(declare-fun x2872 () Bool)
(declare-fun x2695 () Bool)
(declare-fun x477 () Bool)
(declare-fun x82 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x4 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x2542 () Bool)
(declare-fun x2307 () Int)
(declare-fun x389 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x2386 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x3893 () Int)
(declare-fun x1696 () Int)
(declare-fun x3476 () Bool)
(declare-fun x3070 () Int)
(declare-fun x2056 () Bool)
(declare-fun x2494 () Int)
(declare-fun x2596 () Bool)
(declare-fun x72 () Bool)
(declare-fun x3889 () Bool)
(declare-fun x2822 () Int)
(declare-fun x33 () Int)
(declare-fun x3113 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x1539 () Int)
(declare-fun x3142 () Int)
(declare-fun x3016 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x3943 () Int)
(declare-fun x1742 () Int)
(declare-fun x2725 () Bool)
(declare-fun x3936 () Int)
(declare-fun x175 () Bool)
(declare-fun x3385 () Int)
(declare-fun x3918 () Bool)
(declare-fun x84 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x2995 () Bool)
(declare-fun x2743 () Int)
(declare-fun x3940 () Bool)
(declare-fun x619 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x2069 () Int)
(declare-fun x2350 () Int)
(declare-fun x3312 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x3379 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x3485 () Int)
(declare-fun x495 () Bool)
(declare-fun x544 () Int)
(declare-fun x266 () Int)
(declare-fun x139 () Int)
(declare-fun x2508 () Int)
(declare-fun x596 () Bool)
(declare-fun x2453 () Bool)
(declare-fun x2950 () Int)
(declare-fun x3850 () Int)
(declare-fun x2604 () Int)
(declare-fun x3672 () Bool)
(declare-fun x1817 () Int)
(declare-fun x3782 () Bool)
(declare-fun x284 () Bool)
(declare-fun x331 () Bool)
(declare-fun x2364 () Int)
(declare-fun x1695 () Bool)
(declare-fun x3594 () Int)
(declare-fun x1093 () Int)
(declare-fun x3103 () Bool)
(declare-fun x1745 () Bool)
(declare-fun x2281 () Int)
(declare-fun x3067 (Int) Int)
(declare-fun x2564 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x2483 () Int)
(declare-fun x656 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x2441 () Int)
(declare-fun x1864 () Int)
(declare-fun x2415 () Int)
(declare-fun x1559 () Int)
(declare-fun x2831 () Int)
(declare-fun x2228 () Bool)
(declare-fun x551 () Bool)
(declare-fun x3455 () Bool)
(declare-fun x1044 () Int)
(declare-fun x461 () Bool)
(declare-fun x884 () Int)
(declare-fun x2963 () Int)
(declare-fun x1887 () Bool)
(declare-fun x1534 () Int)
(declare-fun x3073 () Bool)
(declare-fun x1681 () Int)
(declare-fun x828 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x1495 () Int)
(declare-fun x3383 () Int)
(declare-fun x1679 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x3072 () Bool)
(declare-fun x3198 () Int)
(declare-fun x490 () Bool)
(declare-fun x860 () Int)
(declare-fun x278 () Int)
(declare-fun x1836 () Int)
(declare-fun x3861 () Bool)
(declare-fun x2498 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x2451 () Int)
(declare-fun x190 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x588 () Bool)
(declare-fun x294 () Bool)
(declare-fun x2318 () Int)
(declare-fun x1102 () Int)
(declare-fun x1486 () Bool)
(declare-fun x3114 () Bool)
(declare-fun x3246 () Bool)
(declare-fun x3325 () Int)
(declare-fun x3039 () Bool)
(declare-fun x1448 () Int)
(declare-fun x1192 () Int)
(declare-fun x3615 () Int)
(declare-fun x3794 () Bool)
(declare-fun x638 () Bool)
(declare-fun x259 () Bool)
(declare-fun x3702 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x3807 () Bool)
(declare-fun x2250 () Int)
(declare-fun x1099 () Int)
(declare-fun x2227 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x494 () Int)
(declare-fun x1943 () Bool)
(declare-fun x1802 () Int)
(declare-fun x682 () Int)
(declare-fun x1000 () Bool)
(declare-fun x3837 () Int)
(declare-fun x3367 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x2635 () Int)
(declare-fun x3482 () Bool)
(declare-fun x1938 () Bool)
(declare-fun x218 () Bool)
(declare-fun x3295 () Bool)
(declare-fun x1997 () Int)
(declare-fun x1319 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1458 () Int)
(declare-fun x2403 () Int)
(declare-fun x3649 () Bool)
(declare-fun x1478 () Int)
(declare-fun x1844 () Int)
(declare-fun x3434 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x2327 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x2670 () Int)
(declare-fun x3109 () Bool)
(declare-fun x1558 () Int)
(declare-fun x3845 () Bool)
(declare-fun x2521 () Int)
(declare-fun x2889 () Bool)
(declare-fun x926 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x308 () Bool)
(declare-fun x3059 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x3539 () Int)
(declare-fun x3492 () Int)
(declare-fun x3408 () Int)
(declare-fun x1774 () Bool)
(declare-fun x319 () Bool)
(declare-fun x543 () Bool)
(declare-fun x831 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x1118 () Int)
(declare-fun x1090 () Bool)
(declare-fun x321 () Bool)
(declare-fun x3117 () Bool)
(declare-fun x378 () Bool)
(declare-fun x2023 () Int)
(declare-fun x3249 () Int)
(declare-fun x2936 () Int)
(declare-fun x3865 () Bool)
(declare-fun x2543 () Bool)
(declare-fun x27 () Bool)
(declare-fun x3754 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x2727 () Int)
(declare-fun x1171 () Int)
(declare-fun x3194 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x3658 () Int)
(declare-fun x2480 () Int)
(declare-fun x3223 () Int)
(declare-fun x859 () Int)
(declare-fun x3481 () Int)
(declare-fun x640 () Int)
(declare-fun x2184 () Bool)
(declare-fun x481 () Bool)
(declare-fun x556 () Int)
(declare-fun x1259 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x1994 () Int)
(declare-fun x3735 () Int)
(declare-fun x2144 () Int)
(declare-fun x2348 () Bool)
(declare-fun x2771 () Int)
(declare-fun x460 () Int)
(declare-fun x107 () Int)
(declare-fun x771 () Int)
(declare-fun x2870 () Bool)
(declare-fun x3677 () Int)
(declare-fun x2117 () Bool)
(declare-fun x912 () Bool)
(declare-fun x2359 () Int)
(declare-fun x2754 () Bool)
(declare-fun x2678 () Int)
(declare-fun x1608 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x325 () Int)
(declare-fun x3370 () Int)
(declare-fun x3895 () Int)
(declare-fun x1135 () Bool)
(declare-fun x648 () Int)
(declare-fun x2212 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x2400 () Int)
(declare-fun x2964 () Int)
(declare-fun x212 () Int)
(declare-fun x1121 () Int)
(declare-fun x2863 () Int)
(declare-fun x3080 () Int)
(declare-fun x1400 () Int)
(declare-fun x908 () Bool)
(declare-fun x2261 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x108 () Int)
(declare-fun x3387 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x189 () Int)
(declare-fun x2008 () Int)
(declare-fun x1420 () Bool)
(declare-fun x3979 () Bool)
(declare-fun x2099 () Int)
(declare-fun x2049 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1455 () Int)
(declare-fun x2504 () Int)
(declare-fun x1169 () Int)
(declare-fun x2623 () Int)
(declare-fun x3573 () Int)
(declare-fun x2975 () Bool)
(declare-fun x3644 () Int)
(declare-fun x3995 () Bool)
(declare-fun x2102 () Bool)
(declare-fun x1907 () Int)
(declare-fun x3333 () Int)
(declare-fun x1968 () Int)
(declare-fun x2460 () Bool)
(declare-fun x1848 () Int)
(declare-fun x2468 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x372 () Int)
(declare-fun x783 () Bool)
(declare-fun x1924 () Int)
(declare-fun x240 () Bool)
(declare-fun x451 () Int)
(declare-fun x1221 () Bool)
(declare-fun x3416 () Int)
(declare-fun x199 () Bool)
(declare-fun x814 () Int)
(declare-fun x1204 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x2839 () Int)
(declare-fun x3733 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x3516 () Int)
(declare-fun x2601 () Bool)
(declare-fun x1362 () Int)
(declare-fun x247 () Bool)
(declare-fun x1540 () Int)
(declare-fun x750 () Int)
(declare-fun x2217 () Bool)
(declare-fun x2618 () Bool)
(declare-fun x3159 () Int)
(declare-fun x47 () Bool)
(declare-fun x948 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x2270 () Bool)
(declare-fun x3963 () Int)
(declare-fun x2597 () Bool)
(declare-fun x2565 () Int)
(declare-fun x755 () Bool)
(declare-fun x3929 () Int)
(declare-fun x3219 () Int)
(declare-fun x1536 () Int)
(declare-fun x1879 () Int)
(declare-fun x830 () Int)
(declare-fun x882 () Bool)
(declare-fun x568 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x3162 () Int)
(declare-fun x3187 () Int)
(declare-fun x3042 () Int)
(declare-fun x1086 () Int)
(declare-fun x60 () Bool)
(declare-fun x375 () Int)
(declare-fun x1684 () Int)
(declare-fun x651 () Int)
(declare-fun x2820 () Int)
(declare-fun x1148 () Bool)
(declare-fun x737 () Bool)
(declare-fun x1507 () Int)
(declare-fun x937 () Int)
(declare-fun x2751 () Bool)
(declare-fun x890 () Bool)
(declare-fun x2353 () Bool)
(declare-fun x3150 () Bool)
(declare-fun x417 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x2513 () Int)
(declare-fun x809 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x3977 () Int)
(declare-fun x3908 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x1196 () Int)
(declare-fun x3535 () Bool)
(declare-fun x3493 () Int)
(declare-fun x2874 () Bool)
(declare-fun x2864 () Int)
(declare-fun x3355 () Int)
(declare-fun x1352 () Bool)
(declare-fun x3032 () Bool)
(declare-fun x2517 () Bool)
(declare-fun x287 () Bool)
(declare-fun x796 () Int)
(declare-fun x1773 () Bool)
(declare-fun x549 () Int)
(declare-fun x1023 () Bool)
(declare-fun x2868 () Bool)
(declare-fun x2331 () Int)
(declare-fun x1381 () Bool)
(declare-fun x644 () Bool)
(declare-fun x2528 () Int)
(declare-fun x1838 () Bool)
(declare-fun x2304 () Bool)
(declare-fun x3462 () Int)
(declare-fun x1935 () Bool)
(declare-fun x3834 () Bool)
(declare-fun x896 () Bool)
(declare-fun x58 () Bool)
(declare-fun x200 () Bool)
(declare-fun x410 () Bool)
(declare-fun x994 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x255 () Bool)
(declare-fun x1769 () Int)
(declare-fun x1329 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x3534 (Int Int) Int)
(declare-fun x1955 () Bool)
(declare-fun x3907 () Int)
(declare-fun x2983 () Bool)
(declare-fun x1593 () Int)
(declare-fun x2424 () Bool)
(declare-fun x3331 () Int)
(declare-fun x1535 () Bool)
(declare-fun x2159 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x3931 () Bool)
(declare-fun x152 () Bool)
(declare-fun x2068 () Int)
(declare-fun x3756 () Int)
(declare-fun x2779 () Bool)
(declare-fun x898 () Int)
(declare-fun x925 () Int)
(declare-fun x1181 () Bool)
(declare-fun x3540 () Bool)
(declare-fun x1886 () Int)
(declare-fun x68 () Bool)
(declare-fun x3372 () Int)
(declare-fun x2996 () Int)
(declare-fun x204 () Bool)
(declare-fun x3488 () Int)
(declare-fun x748 () Bool)
(declare-fun x419 () Int)
(declare-fun x3306 () Bool)
(declare-fun x910 () Int)
(declare-fun x3556 () Bool)
(declare-fun x3353 () Bool)
(declare-fun x502 () Bool)
(declare-fun x2338 () Int)
(declare-fun x900 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x3719 () Bool)
(declare-fun x817 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x2435 () Int)
(declare-fun x142 () Int)
(declare-fun x3941 () Bool)
(declare-fun x2675 () Int)
(declare-fun x1085 () Bool)
(declare-fun x3196 () Bool)
(declare-fun x2191 () Int)
(declare-fun x2000 () Int)
(declare-fun x1759 () Bool)
(declare-fun x3689 () Int)
(declare-fun x1094 () Bool)
(declare-fun x3569 () Int)
(declare-fun x541 () Bool)
(declare-fun x3486 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x2878 () Int)
(declare-fun x3788 () Int)
(declare-fun x342 () Bool)
(declare-fun x2746 () Int)
(declare-fun x3971 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x1175 () Int)
(declare-fun x1110 () Bool)
(declare-fun x665 () Bool)
(declare-fun x747 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x3707 () Bool)
(declare-fun x3340 () Bool)
(declare-fun x3468 () Bool)
(declare-fun x2235 () Bool)
(declare-fun x2114 () Int)
(declare-fun x1079 () Int)
(declare-fun x169 () Int)
(declare-fun x943 () Int)
(declare-fun x3339 () Int)
(declare-fun x607 () Int)
(declare-fun x3043 () Bool)
(declare-fun x2793 () Int)
(declare-fun x3096 () Bool)
(declare-fun x359 () Bool)
(declare-fun x3915 () Bool)
(declare-fun x567 () Int)
(declare-fun x3555 () Bool)
(declare-fun x467 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x1597 () Int)
(declare-fun x3913 () Int)
(declare-fun x1128 () Bool)
(declare-fun x3195 () Int)
(declare-fun x1399 () Bool)
(declare-fun x425 () Int)
(declare-fun x1606 () Int)
(declare-fun x51 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x1087 () Int)
(declare-fun x721 () Int)
(declare-fun x1067 () Int)
(declare-fun x332 () Bool)
(declare-fun x3405 () Int)
(declare-fun x2013 () Int)
(declare-fun x1757 () Bool)
(declare-fun x3183 () Bool)
(declare-fun x2512 () Int)
(declare-fun x39 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x1141 () Int)
(declare-fun x390 () Bool)
(declare-fun x3403 () Bool)
(declare-fun x921 () Bool)
(declare-fun x861 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x1224 () Int)
(declare-fun x2873 () Bool)
(declare-fun x2599 () Bool)
(declare-fun x3011 () Int)
(declare-fun x777 () Bool)
(declare-fun x2430 () Bool)
(declare-fun x3474 () Bool)
(declare-fun x1888 () Int)
(declare-fun x3927 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x421 () Int)
(declare-fun x399 (Int) Int)
(declare-fun x3602 () Bool)
(declare-fun x1120 () Int)
(declare-fun x3961 () Int)
(declare-fun x1431 () Int)
(declare-fun x333 () Int)
(declare-fun x3065 () Bool)
(declare-fun x868 () Bool)
(declare-fun x2765 () Int)
(declare-fun x687 () Int)
(declare-fun x1001 () Bool)
(declare-fun x426 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x3398 () Bool)
(declare-fun x583 () Bool)
(declare-fun x3731 () Int)
(declare-fun x393 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x440 () Bool)
(declare-fun x2642 () Int)
(declare-fun x3872 () Int)
(declare-fun x3309 () Bool)
(declare-fun x961 () Bool)
(declare-fun x992 (Int) Int)
(declare-fun x1136 () Int)
(declare-fun x3655 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x41 () Int)
(declare-fun x2615 () Bool)
(declare-fun x496 () Bool)
(declare-fun x3628 () Int)
(declare-fun x2207 () Int)
(declare-fun x306 () Bool)
(declare-fun x75 () Int)
(declare-fun x1359 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x745 () Bool)
(declare-fun x3051 () Int)
(declare-fun x226 () Int)
(declare-fun x3106 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x400 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x5 () Bool)
(declare-fun x2414 () Int)
(declare-fun x105 () Bool)
(declare-fun x3638 () Bool)
(declare-fun x3160 () Int)
(declare-fun x2140 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x121 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x1748 () Int)
(declare-fun x3888 () Bool)
(declare-fun x3722 () Int)
(declare-fun x2200 () Int)
(declare-fun x1671 () Bool)
(declare-fun x1784 () Int)
(declare-fun x341 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x300 () Int)
(declare-fun x3014 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1236 () Int)
(declare-fun x1923 () Bool)
(declare-fun x3454 () Bool)
(declare-fun x674 () Int)
(declare-fun x217 () Bool)
(declare-fun x2128 () Int)
(declare-fun x1298 () Bool)
(declare-fun x3975 () Int)
(declare-fun x1011 () Bool)
(declare-fun x125 () Int)
(declare-fun x2641 () Bool)
(declare-fun x1830 () Int)
(declare-fun x382 () Bool)
(declare-fun x3760 () Int)
(declare-fun x1524 () Int)
(declare-fun x2248 () Int)
(declare-fun x1304 () Int)
(declare-fun x2479 () Int)
(declare-fun x519 () Bool)
(declare-fun x1069 () Int)
(declare-fun x3413 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x1610 () Int)
(declare-fun x3700 () Bool)
(declare-fun x949 () Bool)
(declare-fun x523 () Bool)
(declare-fun x3500 () Bool)
(declare-fun x2830 () Int)
(declare-fun x1073 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x848 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x3587 () Int)
(declare-fun x710 () Bool)
(declare-fun x1785 () Int)
(declare-fun x1407 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x2777 () Int)
(declare-fun x694 () Int)
(declare-fun x635 () Int)
(declare-fun x811 () Int)
(declare-fun x28 () Int)
(declare-fun x370 () Int)
(declare-fun x3627 () Bool)
(declare-fun x1185 () Int)
(declare-fun x2790 () Int)
(declare-fun x2639 () Bool)
(declare-fun x1254 () Int)
(declare-fun x2075 () Bool)
(declare-fun x804 () Int)
(declare-fun x2803 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x3412 () Int)
(declare-fun x1229 () Bool)
(declare-fun x3664 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x626 () Bool)
(declare-fun x480 () Int)
(declare-fun x322 () Bool)
(declare-fun x1805 () Int)
(declare-fun x3947 () Int)
(declare-fun x136 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x998 () Bool)
(declare-fun x3910 () Bool)
(declare-fun x3939 () Int)
(declare-fun x2896 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x3243 () Bool)
(declare-fun x634 () Bool)
(declare-fun x3124 () Int)
(declare-fun x3021 () Int)
(declare-fun x704 () Bool)
(declare-fun x1218 () Int)
(declare-fun x3879 () Bool)
(declare-fun x112 () Int)
(declare-fun x645 () Bool)
(declare-fun x1372 () Int)
(declare-fun x2652 () Int)
(declare-fun x3968 () Int)
(declare-fun x1348 () Bool)
(declare-fun x3445 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x2273 () Int)
(declare-fun x2163 () Bool)
(declare-fun x315 () Bool)
(declare-fun x1435 () Int)
(declare-fun x726 () Int)
(declare-fun x2562 () Int)
(declare-fun x888 () Int)
(declare-fun x2272 () Int)
(declare-fun x901 () Int)
(declare-fun x3709 () Int)
(declare-fun x1029 () Bool)
(declare-fun x3630 () Int)
(declare-fun x1986 () Bool)
(declare-fun x2609 () Int)
(declare-fun x1480 () Bool)
(declare-fun x3397 () Bool)
(declare-fun x2337 () Int)
(declare-fun x2643 () Bool)
(declare-fun x201 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x345 () Bool)
(declare-fun x2766 () Int)
(declare-fun x464 () Int)
(declare-fun x1020 () Int)
(declare-fun x2165 () Bool)
(declare-fun x3612 () Int)
(declare-fun x3852 () Bool)
(declare-fun x702 () Int)
(declare-fun x1643 () Int)
(declare-fun x3822 () Int)
(declare-fun x2466 () Int)
(declare-fun x1751 () Int)
(declare-fun x2685 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x3136 () Bool)
(declare-fun x42 () Bool)
(declare-fun x3393 () Int)
(declare-fun x1705 () Int)
(declare-fun x1488 () Bool)
(declare-fun x2249 () Int)
(declare-fun x594 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x53 () Int)
(declare-fun x2326 () Int)
(declare-fun x335 () Int)
(declare-fun x3054 () Int)
(declare-fun x3097 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x2032 () Int)
(declare-fun x3153 () Int)
(declare-fun x482 () Int)
(declare-fun x813 () Int)
(declare-fun x3366 () Int)
(declare-fun x3816 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x3519 () Int)
(declare-fun x3005 () Bool)
(declare-fun x2789 () Bool)
(declare-fun x337 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x3248 () Int)
(declare-fun x1203 () Int)
(declare-fun x939 () Bool)
(declare-fun x1984 () Int)
(declare-fun x3071 () Bool)
(declare-fun x3120 () Bool)
(declare-fun x329 () Int)
(declare-fun x270 () Bool)
(declare-fun x3376 () Bool)
(declare-fun x518 () Int)
(declare-fun x2434 () Int)
(declare-fun x2151 () Int)
(declare-fun x873 () Bool)
(declare-fun x3094 () Int)
(declare-fun x87 () Bool)
(declare-fun x3218 () Int)
(declare-fun x2229 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x622 () Int)
(declare-fun x1032 () Int)
(declare-fun x2626 () Int)
(declare-fun x2506 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x2440 () Bool)
(declare-fun x298 () Int)
(declare-fun x1885 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x228 () Int)
(declare-fun x1826 () Int)
(declare-fun x3791 () Int)
(declare-fun x2736 () Int)
(declare-fun x530 () Int)
(declare-fun x3541 () Bool)
(declare-fun x2917 () Bool)
(declare-fun x3145 () Int)
(declare-fun x62 () Int)
(declare-fun x3425 () Bool)
(declare-fun x3098 () Bool)
(declare-fun x620 () Int)
(declare-fun x1568 () Int)
(declare-fun x1765 () Int)
(declare-fun x2389 () Int)
(declare-fun x2138 () Bool)
(declare-fun x180 () Int)
(declare-fun x880 () Bool)
(declare-fun x3646 () Int)
(declare-fun x1443 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x2157 () Bool)
(declare-fun x623 () Int)
(declare-fun x1624 () Bool)
(declare-fun x448 () Int)
(declare-fun x505 () Bool)
(declare-fun x3568 () Bool)
(declare-fun x271 () Int)
(declare-fun x3457 () Bool)
(declare-fun x3375 () Int)
(declare-fun x3212 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x958 () Bool)
(declare-fun x2553 () Int)
(declare-fun x892 () Bool)
(declare-fun x99 () Int)
(declare-fun x1426 () Int)
(declare-fun x1676 () Int)
(declare-fun x581 () Int)
(declare-fun x1280 () Bool)
(declare-fun x2729 () Bool)
(declare-fun x263 () Int)
(declare-fun x280 () Bool)
(declare-fun x3564 () Bool)
(declare-fun x2646 () Int)
(declare-fun x3938 () Bool)
(declare-fun x409 () Int)
(declare-fun x2616 () Int)
(declare-fun x650 () Bool)
(declare-fun x2840 () Int)
(declare-fun x1446 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x986 () Bool)
(declare-fun x237 () Int)
(declare-fun x2174 () Int)
(declare-fun x3324 () Bool)
(declare-fun x1012 () Int)
(declare-fun x261 () Bool)
(declare-fun x3407 () Int)
(declare-fun x506 () Int)
(declare-fun x3759 () Bool)
(declare-fun x3137 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x209 () Bool)
(declare-fun x2899 () Bool)
(declare-fun x2471 () Int)
(declare-fun x96 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x3633 () Int)
(declare-fun x717 () Bool)
(declare-fun x2577 () Bool)
(declare-fun x3262 () Bool)
(declare-fun x1427 () Int)
(declare-fun x1761 () Int)
(declare-fun x1320 () Int)
(declare-fun x1995 () Int)
(declare-fun x3764 () Bool)
(declare-fun x610 () Int)
(declare-fun x2815 () Bool)
(declare-fun x3925 () Int)
(declare-fun x3033 () Int)
(declare-fun x25 () Int)
(declare-fun x1444 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x88 () Int)
(declare-fun x2427 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x3019 () Int)
(declare-fun x850 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x686 () Bool)
(declare-fun x484 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x3757 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x3625 () Bool)
(declare-fun x3980 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x1552 () Int)
(declare-fun x3549 () Int)
(declare-fun x3711 () Int)
(declare-fun x2805 () Int)
(declare-fun x1964 () Bool)
(declare-fun x2992 () Int)
(declare-fun x1876 () Int)
(declare-fun x1174 () Int)
(declare-fun x3182 () Bool)
(declare-fun x2555 () Int)
(declare-fun x3291 () Int)
(declare-fun x2961 () Int)
(declare-fun x1538 () Bool)
(declare-fun x290 () Bool)
(declare-fun x3169 () Bool)
(declare-fun x3862 () Bool)
(declare-fun x643 () Int)
(declare-fun x2131 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x1260 () Int)
(declare-fun x987 () Bool)
(declare-fun x2025 () Int)
(declare-fun x3323 () Bool)
(declare-fun x1091 () Int)
(declare-fun x3175 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x95 () Bool)
(declare-fun x2575 () Int)
(declare-fun x2488 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x3744 () Bool)
(declare-fun x380 () Bool)
(declare-fun x3134 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x978 () Bool)
(declare-fun x236 () Bool)
(declare-fun x2469 () Int)
(declare-fun x920 () Bool)
(declare-fun x130 () Bool)
(declare-fun x2991 () Bool)
(declare-fun x3732 () Int)
(declare-fun x1505 () Int)
(declare-fun x1837 () Bool)
(declare-fun x3115 () Bool)
(declare-fun x1392 () Int)
(declare-fun x663 () Int)
(declare-fun x2275 () Bool)
(declare-fun x3536 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x3525 () Bool)
(declare-fun x2624 () Int)
(declare-fun x3984 () Bool)
(declare-fun x3045 () Int)
(declare-fun x3522 () Int)
(declare-fun x1738 () Bool)
(declare-fun x3548 () Bool)
(declare-fun x1003 () Int)
(declare-fun x116 () Int)
(declare-fun x1172 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x114 () Int)
(declare-fun x769 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x1575 () Int)
(declare-fun x706 () Int)
(declare-fun x1098 () Int)
(declare-fun x3773 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x778 () Bool)
(declare-fun x3377 () Bool)
(declare-fun x585 () Bool)
(declare-fun x521 () Int)
(declare-fun x547 () Int)
(declare-fun x2888 () Bool)
(declare-fun x669 () Bool)
(declare-fun x2129 (Int) Int)
(declare-fun x3208 () Int)
(declare-fun x1389 () Bool)
(declare-fun x216 () Int)
(declare-fun x929 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x2147 () Bool)
(declare-fun x20 () Int)
(declare-fun x1716 () Bool)
(declare-fun x2985 () Bool)
(declare-fun x2078 () Int)
(declare-fun x576 () Int)
(declare-fun x1867 () Int)
(declare-fun x3922 () Int)
(declare-fun x2420 () Bool)
(declare-fun x1668 () Int)
(declare-fun x3868 () Int)
(declare-fun x3582 () Bool)
(declare-fun x909 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x1800 () Int)
(declare-fun x274 () Int)
(declare-fun x2377 () Int)
(declare-fun x1521 () Bool)
(declare-fun x2904 () Bool)
(declare-fun x227 () Int)
(declare-fun x1723 () Bool)
(declare-fun x2519 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x3031 () Bool)
(declare-fun x3962 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x2105 () Int)
(declare-fun x376 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x245 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x454 () Bool)
(declare-fun x625 () Bool)
(declare-fun x2209 () Int)
(declare-fun x1262 () Int)
(declare-fun x1909 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x3238 () Bool)
(declare-fun x3473 () Int)
(declare-fun x515 () Bool)
(declare-fun x2108 () Int)
(declare-fun x1173 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1874 () Int)
(declare-fun x3177 () Bool)
(declare-fun x1405 () Int)
(declare-fun x1807 () Bool)
(declare-fun x2271 () Bool)
(declare-fun x3240 () Bool)
(declare-fun x119 (Int) Int)
(declare-fun x1492 (Int) Int)
(declare-fun x2493 () Int)
(declare-fun x1815 () Int)
(declare-fun x447 () Bool)
(declare-fun x723 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x960 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x37 () Int)
(declare-fun x2116 () Int)
(declare-fun x509 () Int)
(declare-fun x2175 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x3856 () Int)
(declare-fun x276 () Bool)
(declare-fun x3201 () Bool)
(declare-fun x2361 () Int)
(declare-fun x1379 () Bool)
(declare-fun x646 () Int)
(declare-fun x1697 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x2544 () Bool)
(declare-fun x679 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x1814 () Int)
(declare-fun x2956 () Bool)
(declare-fun x569 () Bool)
(declare-fun x2153 () Int)
(declare-fun x1470 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x3678 () Bool)
(declare-fun x3897 () Bool)
(declare-fun x2929 () Int)
(declare-fun x1944 () Bool)
(declare-fun x78 () Int)
(declare-fun x531 () Bool)
(declare-fun x2172 () Int)
(declare-fun x3271 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x1468 () Int)
(declare-fun x1114 () Bool)
(declare-fun x3682 () Int)
(declare-fun x934 () Int)
(declare-fun x1569 () Int)
(declare-fun x1170 () Bool)
(declare-fun x729 () Bool)
(declare-fun x3431 () Bool)
(declare-fun x2625 () Int)
(declare-fun x316 () Int)
(declare-fun x2113 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x471 () Bool)
(declare-fun x616 () Bool)
(declare-fun x3335 () Int)
(declare-fun x366 () Bool)
(declare-fun x3620 () Bool)
(declare-fun x528 () Int)
(declare-fun x3483 () Bool)
(declare-fun x3450 () Bool)
(declare-fun x667 () Bool)
(declare-fun x3270 () Int)
(declare-fun x1453 () Int)
(declare-fun x49 () Bool)
(declare-fun x2658 () Int)
(declare-fun x1956 () Bool)
(declare-fun x1638 () Int)
(declare-fun x113 () Int)
(declare-fun x3736 () Int)
(declare-fun x2366 () Int)
(declare-fun x127 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x3253 () Int)
(declare-fun x268 () Bool)
(declare-fun x1940 () Int)
(declare-fun x2540 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x740 () Int)
(declare-fun x3986 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x593 () Int)
(declare-fun x2921 () Bool)
(declare-fun x3061 () Int)
(declare-fun x758 () Bool)
(declare-fun x118 () Int)
(declare-fun x3326 () Int)
(declare-fun x2916 () Int)
(declare-fun x1108 () Int)
(declare-fun x1960 () Int)
(declare-fun x2437 () Int)
(declare-fun x599 () Int)
(declare-fun x3396 () Int)
(declare-fun x3189 () Bool)
(declare-fun x720 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x433 () Bool)
(declare-fun x2189 () Int)
(declare-fun x1414 () Int)
(declare-fun x695 () Int)
(declare-fun x1555 () Int)
(declare-fun x1808 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x752 () Int)
(declare-fun x2487 () Bool)
(declare-fun x69 () Bool)
(declare-fun x2066 () Int)
(declare-fun x450 () Bool)
(declare-fun x3546 () Bool)
(declare-fun x1858 () Int)
(declare-fun x1884 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x1789 () Int)
(declare-fun x3192 () Int)
(declare-fun x2954 () Int)
(declare-fun x1685 () Int)
(declare-fun x2061 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x1883 (Int) Int)
(declare-fun x1636 () Bool)
(declare-fun x185 () Int)
(declare-fun x829 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x3148 () Bool)
(declare-fun x3667 () Bool)
(declare-fun x470 () Int)
(declare-fun x1903 () Int)
(declare-fun x3906 () Int)
(declare-fun x128 () Bool)
(declare-fun x174 () Bool)
(declare-fun x12 () Bool)
(declare-fun x2342 () Int)
(declare-fun x1526 () Int)
(declare-fun x1256 () Bool)
(declare-fun x824 () Int)
(declare-fun x1300 () Bool)
(declare-fun x2880 () Int)
(declare-fun x2905 () Int)
(declare-fun x865 () Bool)
(declare-fun x3988 () Bool)
(declare-fun x836 () Int)
(declare-fun x1496 () Int)
(declare-fun x151 () Int)
(declare-fun x1905 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x3762 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x3267 () Bool)
(declare-fun x2007 () Int)
(declare-fun x1566 () Bool)
(declare-fun x1263 () Int)
(declare-fun x330 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x3989 () Int)
(declare-fun x1151 () Int)
(declare-fun x2792 () Int)
(declare-fun x1870 () Int)
(declare-fun x1541 () Bool)
(declare-fun x76 () Bool)
(declare-fun x3158 () Bool)
(declare-fun x3504 () Bool)
(declare-fun x527 () Int)
(declare-fun x1502 () Int)
(declare-fun x3924 () Int)
(declare-fun x3063 () Int)
(declare-fun x2814 () Int)
(declare-fun x435 () Int)
(declare-fun x2691 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x3828 () Bool)
(declare-fun x235 () Int)
(declare-fun x2086 () Int)
(declare-fun x586 () Int)
(declare-fun x658 () Int)
(declare-fun x2058 () Bool)
(declare-fun x3135 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x1710 () Int)
(declare-fun x1219 () Bool)
(declare-fun x2990 () Int)
(declare-fun x2704 () Bool)
(declare-fun x2394 () Int)
(declare-fun x840 () Bool)
(declare-fun x1616 () Int)
(declare-fun x396 () Bool)
(declare-fun x196 () Bool)
(declare-fun x411 () Bool)
(declare-fun x3899 () Bool)
(declare-fun x56 () Bool)
(declare-fun x3746 () Int)
(declare-fun x3314 () Int)
(declare-fun x297 () Int)
(declare-fun x3948 () Int)
(declare-fun x2084 () Int)
(declare-fun x3104 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x3987 () Bool)
(declare-fun x1374 () Int)
(declare-fun x2302 () Int)
(declare-fun x794 () Int)
(declare-fun x3990 () Bool)
(declare-fun x3144 () Bool)
(declare-fun x2162 () Int)
(declare-fun x1077 (Int) Int)
(declare-fun x1612 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x3349 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x870 () Bool)
(declare-fun x819 () Bool)
(declare-fun x3226 () Int)
(declare-fun x2178 () Bool)
(declare-fun x3456 () Bool)
(declare-fun x3178 () Int)
(declare-fun x2712 () Int)
(declare-fun x1835 () Int)
(declare-fun x2439 () Int)
(declare-fun x3558 () Int)
(declare-fun x302 () Bool)
(declare-fun x1064 () Int)
(declare-fun x832 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1786 () Int)
(declare-fun x3221 () Int)
(declare-fun x1207 () Int)
(declare-fun x2020 () Int)
(declare-fun x1715 () Bool)
(declare-fun x891 () Int)
(declare-fun x2409 () Int)
(declare-fun x3745 () Int)
(declare-fun x936 () Int)
(declare-fun x459 () Bool)
(declare-fun x2314 () Int)
(declare-fun x2503 () Bool)
(declare-fun x3970 () Int)
(declare-fun x1082 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x2054 () Int)
(declare-fun x3 () Bool)
(declare-fun x668 () Bool)
(declare-fun x587 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x3258 () Bool)
(declare-fun x2688 () Int)
(declare-fun x1823 () Bool)
(declare-fun x273 () Bool)
(declare-fun x1466 () Int)
(declare-fun x1402 () Int)
(declare-fun x2559 () Int)
(declare-fun x2960 () Bool)
(declare-fun x3545 () Int)
(declare-fun x1919 () Int)
(declare-fun x2997 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x1130 () Int)
(declare-fun x2458 () Int)
(declare-fun x1819 () Bool)
(declare-fun x1804 () Int)
(declare-fun x2288 () Bool)
(declare-fun x1809 () Int)
(declare-fun x2421 () Int)
(declare-fun x738 () Int)
(declare-fun x1147 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x3613 () Int)
(declare-fun x2759 () Int)
(declare-fun x1261 () Bool)
(declare-fun x1188 () Int)
(declare-fun x2195 () Int)
(declare-fun x2687 () Bool)
(declare-fun x1683 () Int)
(declare-fun x1324 () Int)
(declare-fun x1126 () Int)
(declare-fun x1525 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x953 () Int)
(declare-fun x1270 () Bool)
(declare-fun x3867 () Bool)
(declare-fun x2582 () Int)
(declare-fun x3595 () Bool)
(declare-fun x536 () Int)
(declare-fun x2290 () Bool)
(declare-fun x3840 () Int)
(declare-fun x3565 () Int)
(declare-fun x2450 () Int)
(declare-fun x1660 () Int)
(declare-fun x9 () Bool)
(declare-fun x3348 () Int)
(declare-fun x3241 () Int)
(declare-fun x981 () Bool)
(declare-fun x1766 () Int)
(declare-fun x2970 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x430 () Int)
(declare-fun x3152 () Bool)
(declare-fun x3784 () Bool)
(declare-fun x1190 () Int)
(declare-fun x3320 () Int)
(declare-fun x2980 () Bool)
(declare-fun x3146 () Int)
(declare-fun x722 () Int)
(declare-fun x2133 () Int)
(declare-fun x2295 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x1880 () Int)
(declare-fun x820 () Int)
(declare-fun x3675 () Bool)
(declare-fun x3514 () Bool)
(declare-fun x2347 () Int)
(declare-fun x1545 () Bool)
(declare-fun x3001 () Bool)
(declare-fun x3464 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x2986 () Bool)
(declare-fun x138 () Bool)
(declare-fun x2891 () Bool)
(declare-fun x2059 () Int)
(declare-fun x2104 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1892 () Bool)
(declare-fun x2463 () Int)
(declare-fun x3815 () Bool)
(declare-fun x2390 () Int)
(declare-fun x3512 () Int)
(declare-fun x1050 () Int)
(declare-fun x2243 () Bool)
(declare-fun x91 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x2856 () Int)
(declare-fun x1112 () Int)
(declare-fun x3579 () Bool)
(declare-fun x3126 () Int)
(declare-fun x1473 (Int) Int)
(declare-fun x2149 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x1200 () Int)
(declare-fun x167 () Int)
(declare-fun x3361 () Bool)
(declare-fun x3687 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x48 () Int)
(declare-fun x3530 () Bool)
(declare-fun x3095 () Int)
(declare-fun x3805 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x3598 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x3983 () Int)
(declare-fun x2998 () Int)
(declare-fun x434 () Int)
(declare-fun x963 () Bool)
(declare-fun x3286 () Bool)
(declare-fun x3470 () Int)
(declare-fun x2477 () Int)
(declare-fun x863 () Int)
(declare-fun x886 () Int)
(declare-fun x2448 () Int)
(declare-fun x3892 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x659 () Int)
(declare-fun x1258 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x3696 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x2982 () Int)
(declare-fun x134 () Int)
(declare-fun x2669 () Int)
(declare-fun x2682 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x3799 () Bool)
(declare-fun x123 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1637 (Int Int) Int)
(declare-fun x1587 () Bool)
(declare-fun x2576 () Bool)
(declare-fun x614 () Int)
(declare-fun x2051 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x1157 () Int)
(declare-fun x2760 () Int)
(declare-fun x2723 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x1811 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x617 () Int)
(declare-fun x3553 () Int)
(declare-fun x719 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x3081 () Bool)
(declare-fun x2659 () Int)
(declare-fun x2395 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x2810 () Int)
(declare-fun x2887 () Bool)
(declare-fun x3679 () Bool)
(declare-fun x1647 () Int)
(declare-fun x970 () Int)
(declare-fun x3421 () Bool)
(declare-fun x3360 () Bool)
(declare-fun x374 () Bool)
(declare-fun x2515 () Int)
(declare-fun x1088 () Bool)
(declare-fun x443 () Bool)
(declare-fun x1289 () Int)
(declare-fun x2726 () Bool)
(declare-fun x2791 () Int)
(declare-fun x2346 () Bool)
(declare-fun x935 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x2673 () Bool)
(declare-fun x1547 () Int)
(declare-fun x2770 () Int)
(declare-fun x1031 () Bool)
(declare-fun x3967 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x132 () Int)
(declare-fun x3091 () Int)
(declare-fun x2937 () Bool)
(declare-fun x1945 () Int)
(declare-fun x244 () Int)
(declare-fun x1818 () Bool)
(declare-fun x301 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x2231 () Bool)
(declare-fun x3949 () Int)
(declare-fun x1051 () Bool)
(declare-fun x649 () Bool)
(declare-fun x822 () Bool)
(declare-fun x3920 () Int)
(declare-fun x3438 () Int)
(declare-fun x2124 () Int)
(declare-fun x2536 () Int)
(declare-fun x708 () Bool)
(declare-fun x2222 () Int)
(declare-fun x3278 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x2912 () Bool)
(declare-fun x2226 () Int)
(declare-fun x44 () Bool)
(declare-fun x3956 () Int)
(declare-fun x243 () Int)
(declare-fun x3452 () Bool)
(declare-fun x2865 () Int)
(declare-fun x2148 () Int)
(declare-fun x795 () Int)
(declare-fun x2638 () Int)
(declare-fun x671 () Int)
(declare-fun x3381 () Int)
(declare-fun x2426 () Bool)
(declare-fun x3362 () Int)
(declare-fun x3498 () Bool)
(declare-fun x2567 () Int)
(declare-fun x1278 () Bool)
(declare-fun x3765 () Bool)
(declare-fun x3293 () Int)
(declare-fun x598 () Int)
(declare-fun x837 () Bool)
(declare-fun x418 () Int)
(declare-fun x2274 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x562 () Int)
(declare-fun x23 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x2446 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x2807 () Bool)
(declare-fun x3247 () Int)
(declare-fun x709 () Bool)
(declare-fun x2041 () Int)
(declare-fun x1794 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x973 () Int)
(declare-fun x1821 () Bool)
(declare-fun x919 () Int)
(declare-fun x364 () Int)
(declare-fun x980 () Int)
(declare-fun x3552 () Int)
(declare-fun x2456 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x662 () Bool)
(declare-fun x2343 () Int)
(declare-fun x927 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x1165 () Int)
(declare-fun x654 () Bool)
(declare-fun x1131 () Int)
(declare-fun x1806 () Bool)
(declare-fun x3089 (Int) Int)
(declare-fun x3276 () Int)
(declare-fun x2622 () Bool)
(declare-fun x1177 () Int)
(declare-fun x2715 () Bool)
(declare-fun x3606 () Int)
(declare-fun x2146 () Int)
(declare-fun x2489 () Bool)
(declare-fun x446 () Int)
(declare-fun x81 () Int)
(declare-fun x1749 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x2827 () Bool)
(declare-fun x3886 () Bool)
(declare-fun x22 () Bool)
(declare-fun x2442 () Int)
(declare-fun x1718 () Int)
(declare-fun x1582 () Bool)
(declare-fun x3053 () Int)
(declare-fun x3838 () Bool)
(declare-fun x1146 () Int)
(declare-fun x950 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1812 () Int)
(declare-fun x3692 () Bool)
(declare-fun x3390 () Bool)
(declare-fun x465 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x3737 () Int)
(declare-fun x1962 () Bool)
(declare-fun x3718 () Int)
(declare-fun x1768 () Bool)
(declare-fun x1645 () Int)
(declare-fun x889 () Bool)
(declare-fun x2246 () Int)
(declare-fun x3111 () Bool)
(declare-fun x3704 () Bool)
(declare-fun x2924 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x714 () Int)
(declare-fun x2640 () Bool)
(declare-fun x2265 () Int)
(declare-fun x1378 () Bool)
(declare-fun x3714 () Int)
(declare-fun x711 () Bool)
(declare-fun x3801 () Int)
(declare-fun x1631 () Bool)
(declare-fun x195 () Bool)
(declare-fun x2694 () Int)
(declare-fun x104 () Bool)
(declare-fun x2897 () Bool)
(declare-fun x793 () Bool)
(declare-fun x636 () Int)
(declare-fun x2607 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x3138 () Bool)
(declare-fun x2850 () Int)
(declare-fun x1756 () Bool)
(declare-fun x716 () Bool)
(declare-fun x3896 () Bool)
(declare-fun x940 () Int)
(declare-fun x491 () Int)
(declare-fun x109 () Bool)
(declare-fun x1465 () Int)
(declare-fun x468 () Int)
(declare-fun x277 () Bool)
(declare-fun x772 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x2374 () Int)
(declare-fun x2028 () Bool)
(declare-fun x3973 () Bool)
(declare-fun x198 () Int)
(declare-fun x692 () Bool)
(declare-fun x2245 () Bool)
(declare-fun x1462 () Int)
(declare-fun x1125 () Int)
(declare-fun x2826 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x413 () Int)
(declare-fun x2665 () Bool)
(declare-fun x760 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x3770 () Bool)
(declare-fun x1649 () Int)
(declare-fun x3227 () Int)
(declare-fun x1572 () Bool)
(declare-fun x498 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x742 () Bool)
(declare-fun x354 () Int)
(declare-fun x1183 () Bool)
(declare-fun x984 () Int)
(declare-fun x172 () Bool)
(declare-fun x3520 () Int)
(declare-fun x2883 () Bool)
(declare-fun x2533 () Int)
(declare-fun x1954 () Int)
(declare-fun x117 () Int)
(declare-fun x368 () Int)
(declare-fun x57 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x3489 () Bool)
(declare-fun x3717 () Bool)
(declare-fun x3327 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x2470 () Int)
(declare-fun x2764 () Int)
(declare-fun x2938 () Int)
(declare-fun x3954 () Bool)
(declare-fun x3813 () Int)
(declare-fun x386 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x1651 () Int)
(declare-fun x661 () Int)
(declare-fun x2554 () Bool)
(declare-fun x3748 () Int)
(declare-fun x486 () Int)
(declare-fun x1290 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x210 () Bool)
(declare-fun x3427 () Int)
(declare-fun x684 () Bool)
(declare-fun x2860 () Int)
(declare-fun x1970 () Bool)
(declare-fun x1498 () Int)
(declare-fun x781 () Int)
(declare-fun x2731 () Bool)
(declare-fun x3200 () Int)
(declare-fun x2372 () Bool)
(declare-fun x3185 () Int)
(declare-fun x3671 () Bool)
(declare-fun x436 () Bool)
(declare-fun x826 () Int)
(declare-fun x757 () Bool)
(declare-fun x565 () Bool)
(declare-fun x902 () Int)
(declare-fun x1537 () Int)
(declare-fun x574 () Int)
(declare-fun x3538 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x197 () Int)
(declare-fun x3712 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x1335 () Int)
(declare-fun x3092 () Int)
(declare-fun x3009 () Bool)
(declare-fun x452 () Bool)
(declare-fun x1327 () Int)
(declare-fun x3806 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x3652 () Bool)
(declare-fun x3653 () Int)
(declare-fun x3409 () Int)
(declare-fun x2002 () Bool)
(declare-fun x652 () Int)
(declare-fun x18 () Int)
(declare-fun x312 () Int)
(declare-fun x2192 () Bool)
(declare-fun x3706 () Int)
(declare-fun x1992 () Bool)
(declare-fun x2922 () Int)
(declare-fun x1101 () Int)
(declare-fun x3084 () Int)
(declare-fun x299 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x3057 () Int)
(declare-fun x2621 () Int)
(declare-fun x2334 () Bool)
(declare-fun x3085 () Int)
(declare-fun x1737 () Int)
(declare-fun x67 () Int)
(declare-fun x989 () Int)
(declare-fun x3701 () Int)
(declare-fun x2005 () Bool)
(declare-fun x839 () Bool)
(declare-fun x135 () Int)
(declare-fun x100 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x3432 () Int)
(declare-fun x1163 () Int)
(declare-fun x664 () Int)
(declare-fun x1057 () Bool)
(declare-fun x2767 () Int)
(declare-fun x248 () Int)
(declare-fun x1328 () Bool)
(declare-fun x415 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1532 () Int)
(declare-fun x1531 () Bool)
(declare-fun x122 () Int)
(declare-fun x3976 () Int)
(declare-fun x749 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x3670 () Int)
(declare-fun x597 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x3030 () Int)
(declare-fun x753 () Int)
(declare-fun x1790 () Int)
(declare-fun x2595 () Int)
(declare-fun x1033 () Bool)
(declare-fun x3832 () Bool)
(declare-fun x3346 () Bool)
(declare-fun x3305 () Int)
(declare-fun x956 () Bool)
(declare-fun x1143 () Int)
(declare-fun x178 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x351 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x3282 () Int)
(declare-fun x1048 () Int)
(declare-fun x2323 () Int)
(declare-fun x977 () Bool)
(declare-fun x493 () Int)
(declare-fun x63 () Bool)
(declare-fun x3256 () Bool)
(declare-fun x1946 () Int)
(declare-fun x3860 () Bool)
(declare-fun x1833 () Int)
(declare-fun x675 () Bool)
(declare-fun x3991 () Int)
(declare-fun x3634 () Bool)
(declare-fun x1122 () Int)
(declare-fun x3951 () Int)
(declare-fun x3467 () Int)
(declare-fun x1933 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x120 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x911 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x2920 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x3265 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1330 () Int)
(declare-fun x3083 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x3790 () Int)
(declare-fun x1373 () Bool)
(declare-fun x843 () Bool)
(declare-fun x3661 () Bool)
(declare-fun x1334 () Int)
(declare-fun x624 () Bool)
(declare-fun x3808 () Bool)
(declare-fun x1599 () Int)
(declare-fun x46 () Bool)
(declare-fun x2203 () Int)
(declare-fun x225 () Int)
(declare-fun x677 () Int)
(declare-fun x1573 (Int Int Int) Int)
(declare-fun x3581 () Bool)
(declare-fun x2580 () Int)
(declare-fun x2749 () Bool)
(declare-fun x3380 () Int)
(declare-fun x1514 () Int)
(declare-fun x3263 () Int)
(declare-fun x2329 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x3272 () Int)
(declare-fun x404 () Bool)
(declare-fun x3007 () Bool)
(declare-fun x3614 () Int)
(declare-fun x2620 () Int)
(declare-fun x3629 () Bool)
(declare-fun x1779 () Bool)
(declare-fun x3463 () Int)
(declare-fun x3025 () Int)
(declare-fun x942 () Bool)
(declare-fun x591 () Bool)
(declare-fun x458 () Int)
(declare-fun x3211 () Int)
(declare-fun x3352 () Bool)
(declare-fun x489 () Bool)
(declare-fun x3277 () Int)
(declare-fun x2091 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x2578 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1787 () Int)
(declare-fun x1586 () Bool)
(declare-fun x3771 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x2495 () Bool)
(declare-fun x3551 () Int)
(declare-fun x1008 () Int)
(declare-fun x871 () Bool)
(declare-fun x3502 () Bool)
(declare-fun x323 () Bool)
(declare-fun x379 () Int)
(declare-fun x1428 () Bool)
(declare-fun x2778 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x779 () Int)
(declare-fun x346 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x3824 () Bool)
(declare-fun x2472 () Bool)
(declare-fun x147 () Bool)
(declare-fun x250 () Int)
(declare-fun x690 () Bool)
(declare-fun x2428 () Int)
(declare-fun x1918 () Bool)
(declare-fun x701 () Int)
(declare-fun x1022 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x2581 () Int)
(declare-fun x2716 () Int)
(declare-fun x233 () Bool)
(declare-fun x3186 () Int)
(declare-fun x187 () Int)
(declare-fun x3528 () Bool)
(declare-fun x3639 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x191 () Bool)
(declare-fun x916 () Bool)
(declare-fun x2155 () Int)
(declare-fun x731 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x554 () Bool)
(declare-fun x3245 () Int)
(declare-fun x214 () Int)
(declare-fun x3028 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x2168 () Int)
(declare-fun x2634 () Bool)
(declare-fun x1096 () Int)
(declare-fun x2125 () Bool)
(declare-fun x2984 () Int)
(declare-fun x2388 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x3510 () Int)
(declare-fun x917 () Int)
(declare-fun x17 () Bool)
(declare-fun x1859 () Int)
(declare-fun x2297 () Bool)
(declare-fun x2849 () Bool)
(declare-fun x1005 () Int)
(declare-fun x3164 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x2379 () Int)
(declare-fun x2280 () Bool)
(declare-fun x3477 () Bool)
(declare-fun x3750 () Bool)
(declare-fun x3825 () Int)
(declare-fun x2884 () Int)
(declare-fun x2667 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x43 () Bool)
(declare-fun x2193 () Int)
(declare-fun x3890 () Int)
(declare-fun x499 () Bool)
(declare-fun x2101 () Int)
(declare-fun x2811 () Int)
(declare-fun x3264 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x3006 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x2867 () Int)
(declare-fun x1604 () Int)
(declare-fun x3875 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x188 () Int)
(declare-fun x103 () Int)
(declare-fun x2030 () Bool)
(declare-fun x2876 () Bool)
(declare-fun x2853 () Bool)
(declare-fun x94 () Bool)
(declare-fun x3887 () Bool)
(declare-fun x3901 () Bool)
(declare-fun x767 () Bool)
(declare-fun x3321 () Int)
(declare-fun x1857 () Bool)
(declare-fun x3663 () Int)
(declare-fun x1767 () Int)
(declare-fun x3785 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x3330 () Bool)
(declare-fun x2877 () Int)
(declare-fun x101 () Int)
(declare-fun x787 () Bool)
(declare-fun x3151 () Bool)
(declare-fun x2845 () Bool)
(declare-fun x3274 () Int)
(declare-fun x1840 () Int)
(declare-fun x1578 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1878 () Int)
(declare-fun x3230 () Bool)
(declare-fun x3127 () Int)
(declare-fun x3299 () Bool)
(declare-fun x995 () Bool)
(declare-fun x803 () Bool)
(declare-fun x2804 () Int)
(declare-fun x1274 () Int)
(declare-fun x2788 () Int)
(declare-fun x605 () Bool)
(declare-fun x2988 () Int)
(declare-fun x3982 () Int)
(declare-fun x2336 () Int)
(declare-fun x398 () Int)
(declare-fun x1380 () Int)
(declare-fun x563 () Bool)
(declare-fun x442 () Int)
(declare-fun x3645 () Int)
(declare-fun x3165 () Bool)
(declare-fun x2705 () Bool)
(declare-fun x3777 () Bool)
(declare-fun x552 () Int)
(declare-fun x1246 () Bool)
(declare-fun x2080 () Int)
(declare-fun x2188 () Int)
(declare-fun x2279 () Int)
(declare-fun x1518 () Bool)
(declare-fun x2137 () Int)
(declare-fun x812 () Bool)
(declare-fun x2674 () Int)
(declare-fun x3365 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x2122 () Int)
(declare-fun x1571 () Int)
(declare-fun x373 () Bool)
(declare-fun x539 () Bool)
(declare-fun x1068 () Int)
(declare-fun x173 () Int)
(declare-fun x2979 () Int)
(declare-fun x395 () Bool)
(declare-fun x2858 () Int)
(declare-fun x3173 () Bool)
(declare-fun x2339 () Int)
(declare-fun x2375 () Int)
(declare-fun x3123 () Int)
(declare-fun x3959 (Int Int) Int)
(declare-fun x2539 () Int)
(declare-fun x74 () Bool)
(declare-fun x320 () Int)
(declare-fun x2433 () Bool)
(declare-fun x291 () Int)
(declare-fun x2368 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x764 () Int)
(declare-fun x356 () Int)
(declare-fun x2552 () Bool)
(declare-fun x3810 () Int)
(declare-fun x1894 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x3542 () Int)
(declare-fun x2958 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x420 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x162 () Bool)
(declare-fun x672 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x3818 () Int)
(declare-fun x2628 () Int)
(declare-fun x1648 () Bool)
(declare-fun x156 () Int)
(declare-fun x2680 () Bool)
(declare-fun x571 () Int)
(declare-fun x2292 () Bool)
(declare-fun x1361 () Int)
(declare-fun x61 () Int)
(declare-fun x1895 () Int)
(declare-fun x3154 () Bool)
(declare-fun x1132 () Int)
(declare-fun x2598 () Bool)
(declare-fun x3698 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x3950 () Int)
(declare-fun x1477 () Int)
(declare-fun x972 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x2317 () Int)
(declare-fun x773 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x2357 () Bool)
(declare-fun x2294 () Int)
(declare-fun x2009 () Int)
(declare-fun x2156 () Bool)
(declare-fun x557 () Bool)
(declare-fun x3647 () Int)
(declare-fun x2057 () Int)
(declare-fun x2906 () Int)
(declare-fun x3674 () Bool)
(declare-fun x3566 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x1042 () Int)
(declare-fun x133 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x1305 () Int)
(declare-fun x1827 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x391 () Bool)
(declare-fun x759 () Bool)
(declare-fun x2358 () Int)
(declare-fun x867 () Int)
(declare-fun x1322 () Bool)
(declare-fun x524 () Bool)
(declare-fun x253 () Int)
(declare-fun x3077 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x1129 () Int)
(declare-fun x97 () Int)
(declare-fun x3965 () Int)
(declare-fun x3846 () Bool)
(declare-fun x915 () Bool)
(declare-fun x1404 () Int)
(declare-fun x946 () Int)
(declare-fun x150 () Bool)
(declare-fun x2914 () Int)
(declare-fun x362 () Int)
(declare-fun x1592 () Bool)
(declare-fun x869 () Int)
(declare-fun x2239 () Bool)
(declare-fun x295 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x381 () Bool)
(declare-fun x2556 () Bool)
(declare-fun x3300 () Int)
(declare-fun x1419 () Int)
(declare-fun x1849 () Int)
(declare-fun x1338 () Bool)
(declare-fun x785 () Int)
(declare-fun x2258 () Bool)
(declare-fun x2563 () Int)
(declare-fun x3891 () Bool)
(declare-fun x789 () Int)
(declare-fun x71 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x310 () Bool)
(declare-fun x221 () Int)
(declare-fun x2449 () Bool)
(declare-fun x2268 () Int)
(declare-fun x3132 () Int)
(declare-fun x2893 () Int)
(declare-fun x1436 () Bool)
(declare-fun x183 () Int)
(declare-fun x269 () Int)
(declare-fun x246 () Bool)
(declare-fun x566 () Bool)
(declare-fun x3571 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1384 () Int)
(declare-fun x2551 () Int)
(declare-fun x3087 () Bool)
(declare-fun x3460 () Bool)
(declare-fun x3350 () Bool)
(declare-fun x3621 () Bool)
(declare-fun x387 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x462 (Int) Int)
(declare-fun x1688 () Bool)
(declare-fun x3301 () Int)
(declare-fun x1313 () Bool)
(declare-fun x285 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x3902 () Bool)
(declare-fun x2730 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1054 () Int)
(declare-fun x1035 () Int)
(declare-fun x2768 () Bool)
(declare-fun x3774 () Bool)
(declare-fun x3584 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x612 () Int)
(declare-fun x2398 () Bool)
(declare-fun x1991 () Int)
(declare-fun x2319 () Bool)
(declare-fun x3076 (Int) Int)
(declare-fun x2422 () Int)
(declare-fun x3905 () Int)
(declare-fun x408 () Bool)
(declare-fun x2931 () Bool)
(declare-fun x186 () Bool)
(declare-fun x1675 () Int)
(declare-fun x407 () Int)
(declare-fun x144 () Bool)
(declare-fun x2608 (Int Int) Int)
(declare-fun x344 () Int)
(declare-fun x166 () Int)
(declare-fun x3302 () Int)
(declare-fun x3926 () Bool)
(declare-fun x363 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x1693 () Int)
(declare-fun x3029 () Bool)
(declare-fun x3224 () Bool)
(declare-fun x3917 () Int)
(declare-fun x3024 () Int)
(declare-fun x149 () Int)
(declare-fun x3338 () Bool)
(declare-fun x761 () Bool)
(declare-fun x10 () Int)
(declare-fun x2903 () Int)
(declare-fun x473 () Int)
(declare-fun x3342 () Int)
(declare-fun x2994 () Bool)
(declare-fun x3849 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x2232 () Int)
(declare-fun x1187 (Int) Int)
(declare-fun x3676 () Bool)
(declare-fun x2225 () Int)
(declare-fun x1314 () Int)
(declare-fun x1881 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x394 () Int)
(declare-fun x3882 () Int)
(declare-fun x2993 () Int)
(declare-fun x1104 () Bool)
(declare-fun x3316 () Int)
(declare-fun x1 () Bool)
(declare-fun x604 () Bool)
(declare-fun x2735 () Int)
(declare-fun x739 () Int)
(declare-fun x2918 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x2930 () Int)
(declare-fun x611 () Bool)
(declare-fun x3298 () Bool)
(declare-fun x3310 () Bool)
(declare-fun x3786 () Bool)
(declare-fun x2915 () Bool)
(declare-fun x2962 () Bool)
(declare-fun x3693 () Int)
(declare-fun x1655 () Bool)
(declare-fun x2262 () Int)
(declare-fun x1160 () Int)
(declare-fun x3708 () Int)
(declare-fun x1321 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x2024 () Int)
(declare-fun x800 () Int)
(declare-fun x852 () Int)
(declare-fun x2190 () Int)
(declare-fun x296 () Bool)
(declare-fun x1850 () Int)
(declare-fun x2757 () Int)
(declare-fun x985 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x3259 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x3877 () Int)
(declare-fun x2313 () Int)
(declare-fun x2844 () Bool)
(declare-fun x855 () Bool)
(declare-fun x2070 () Int)
(declare-fun x2382 () Bool)
(declare-fun x3049 () Bool)
(declare-fun x455 () Bool)
(declare-fun x193 () Bool)
(declare-fun x698 () Int)
(declare-fun x2238 () Int)
(declare-fun x1442 () Bool)
(declare-fun x3410 () Int)
(declare-fun x1182 () Bool)
(declare-fun x334 () Int)
(declare-fun x2824 () Bool)
(declare-fun x1666 () Int)
(declare-fun x336 () Bool)
(declare-fun x2651 () Int)
(declare-fun x630 () Int)
(declare-fun x141 () Bool)
(declare-fun x520 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x2305 () Int)
(declare-fun x1510 () Bool)
(declare-fun x3358 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x2557 () Bool)
(declare-fun x2923 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x2181 () Int)
(declare-fun x2465 () Bool)
(declare-fun x2161 () Int)
(declare-fun x2972 () Bool)
(declare-fun x361 () Int)
(declare-fun x2047 () Int)
(declare-fun x1233 () Bool)
(declare-fun x487 () Int)
(declare-fun x3170 () Int)
(declare-fun x3344 () Bool)
(declare-fun x3143 () Bool)
(declare-fun x126 () Int)
(declare-fun x895 () Bool)
(declare-fun x2650 () Int)
(declare-fun x2011 () Int)
(declare-fun x724 () Int)
(declare-fun x1937 () Int)
(declare-fun x1046 () Int)
(declare-fun x2287 () Bool)
(declare-fun x3236 () Int)
(declare-fun x2812 () Int)
(declare-fun x833 () Bool)
(declare-fun x2518 () Int)
(declare-fun x2825 () Int)
(declare-fun x3280 () Bool)
(declare-fun x971 () Bool)
(declare-fun x673 () Bool)
(declare-fun x3730 () Int)
(declare-fun x1095 () Bool)
(declare-fun x3608 () Int)
(declare-fun x140 () Bool)
(declare-fun x510 () Int)
(declare-fun x3720 () Bool)
(declare-fun x3446 () Bool)
(declare-fun x2210 () Int)
(declare-fun x1517 () Bool)
(declare-fun x85 () Int)
(declare-fun x2096 () Bool)
(declare-fun x3607 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x1795 () Int)
(declare-fun x3527 () Bool)
(declare-fun x3817 () Int)
(declare-fun x1393 () Bool)
(declare-fun x3969 () Int)
(declare-fun x479 () Bool)
(declare-fun x93 () Int)
(declare-fun x1297 () Int)
(declare-fun x3315 () Bool)
(declare-fun x932 () Bool)
(declare-fun x2241 () Int)
(declare-fun x2579 () Int)
(declare-fun x1893 () Bool)
(declare-fun x3193 () Bool)
(declare-fun x137 () Int)
(declare-fun x3297 () Int)
(declare-fun x2179 () Int)
(declare-fun x810 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x655 () Int)
(declare-fun x2381 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x1251 () Int)
(declare-fun x2079 () Bool)
(declare-fun x930 () Int)
(declare-fun x1798 () Bool)
(declare-fun x1692 () Int)
(declare-fun x2571 () Bool)
(declare-fun x967 () Bool)
(declare-fun x628 () Int)
(declare-fun x2425 () Bool)
(declare-fun x1457 () Int)
(declare-fun x689 () Int)
(declare-fun x478 () Bool)
(declare-fun x3521 () Bool)
(declare-fun x239 () Bool)
(declare-fun x2260 () Int)
(declare-fun x3561 () Int)
(declare-fun x3778 () Int)
(declare-fun x1240 () Int)
(declare-fun x2978 () Bool)
(declare-fun x1863 () Int)
(declare-fun x1975 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x2857 () Int)
(declare-fun x3713 () Int)
(declare-fun x938 () Int)
(declare-fun x516 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x969 () Int)
(declare-fun x823 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x2026 () Bool)
(declare-fun x3749 () Int)
(declare-fun x3673 () Bool)
(declare-fun x1845 () Int)
(declare-fun x3260 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x3268 () Int)
(declare-fun x732 () Int)
(declare-fun x3724 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x3800 () Int)
(declare-fun x1242 () Int)
(declare-fun x2644 () Bool)
(declare-fun x2445 () Int)
(declare-fun x1456 () Bool)
(declare-fun x1906 () Int)
(declare-fun x1974 () Int)
(declare-fun x3371 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1653 () Int)
(declare-fun x1632 () Bool)
(declare-fun x2875 () Int)
(declare-fun x365 () Int)
(declare-fun x2683 () Bool)
(declare-fun x38 () Bool)
(declare-fun x3660 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x806 () Int)
(declare-fun x1949 () Int)
(declare-fun x154 () Bool)
(declare-fun x1516 () Int)
(declare-fun x160 () Int)
(declare-fun x55 () Bool)
(declare-fun x3666 () Int)
(declare-fun x2018 () Bool)
(declare-fun x3244 () Int)
(declare-fun x2432 () Bool)
(declare-fun x629 () Int)
(declare-fun x223 () Int)
(declare-fun x1432 () Int)
(declare-fun x1439 () Bool)
(declare-fun x192 () Int)
(declare-fun x756 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x3093 () Int)
(declare-fun x2676 () Int)
(declare-fun x1667 () Int)
(declare-fun x924 () Bool)
(declare-fun x2454 () Int)
(declare-fun x2785 () Int)
(declare-fun x2474 () Bool)
(declare-fun x2052 () Int)
(declare-fun x3603 () Int)
(declare-fun x324 () Int)
(declare-fun x1062 () Bool)
(declare-fun x3985 () Bool)
(declare-fun x475 () Int)
(declare-fun x3441 () Int)
(declare-fun x3250 () Int)
(declare-fun x1803 () Bool)
(declare-fun x163 () Bool)
(declare-fun x2387 () Int)
(declare-fun x1250 () Bool)
(declare-fun x2977 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x2561 () Bool)
(declare-fun x1985 () Int)
(declare-fun x1375 (Int) Int)
(declare-fun x1395 () Bool)
(declare-fun x1482 () Int)
(declare-fun x3130 () Bool)
(declare-fun x2940 () Bool)
(declare-fun x2335 () Int)
(declare-fun x2455 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x89 () Bool)
(declare-fun x1843 () Int)
(declare-fun x1889 () Int)
(declare-fun x403 () Int)
(declare-fun x2264 () Int)
(declare-fun x472 () Bool)
(declare-fun x784 () Bool)
(declare-fun x533 () Int)
(declare-fun x3088 () Int)
(declare-fun x1584 () Bool)
(declare-fun x589 () Int)
(declare-fun x1103 () Int)
(declare-fun x1265 () Int)
(declare-fun x2201 () Bool)
(declare-fun x168 () Bool)
(declare-fun x3044 () Bool)
(declare-fun x2118 () Int)
(declare-fun x3873 () Int)
(declare-fun x3078 () Bool)
(declare-fun x3691 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x2087 () Int)
(declare-fun x3487 () Int)
(declare-fun x952 () Bool)
(declare-fun x483 () Bool)
(declare-fun x968 () Bool)
(declare-fun x355 () Int)
(declare-fun x1139 () Int)
(declare-fun x3898 () Int)
(declare-fun x3695 () Bool)
(declare-fun x3591 () Bool)
(declare-fun x1528 () Int)
(declare-fun x899 () Bool)
(declare-fun x845 () Bool)
(declare-fun x1288 () Int)
(declare-fun x3789 () Bool)
(declare-fun x3480 () Int)
(declare-fun x457 () Bool)
(declare-fun x262 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x3419 () Int)
(declare-fun x2076 () Int)
(declare-fun x2476 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x3026 () Bool)
(declare-fun x249 () Int)
(declare-fun x1287 () Bool)
(declare-fun x1215 () Int)
(declare-fun x3359 () Bool)
(declare-fun x3191 () Int)
(declare-fun x1325 () Int)
(declare-fun x1620 () Bool)
(declare-fun x1176 () Int)
(declare-fun x1430 () Int)
(declare-fun x1901 () Int)
(declare-fun x3851 () Int)
(declare-fun x1164 () Int)
(declare-fun x2119 () Bool)
(declare-fun x1241 () Int)
(declare-fun x2224 () Bool)
(declare-fun x637 () Int)
(declare-fun x3131 () Bool)
(declare-fun x2747 () Int)
(declare-fun x1929 () Bool)
(declare-fun x955 () Int)
(declare-fun x944 () Bool)
(declare-fun x3881 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1966 () Int)
(declare-fun x2732 () Bool)
(declare-fun x1149 () Int)
(declare-fun x2223 () Bool)
(declare-fun x2854 () Int)
(declare-fun x1434 () Int)
(declare-fun x1497 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x983 () Bool)
(declare-fun x3388 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x2475 () Bool)
(declare-fun x835 () Bool)
(declare-fun x1930 () Int)
(declare-fun x3166 () Bool)
(declare-fun x3763 () Int)
(declare-fun x2648 () Bool)
(declare-fun x3401 () Int)
(declare-fun x878 () Bool)
(declare-fun x577 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x3821 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x700 () Int)
(declare-fun x241 () Int)
(declare-fun x2044 () Bool)
(declare-fun x36 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1295 () Int)
(declare-fun x2186 () Bool)
(declare-fun x797 () Int)
(declare-fun x1408 () Int)
(declare-fun x2240 () Int)
(declare-fun x1491 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x358 () Int)
(declare-fun x2176 () Bool)
(declare-fun x406 () Bool)
(declare-fun x542 () Bool)
(declare-fun x3880 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x2838 () Bool)
(declare-fun x741 () Bool)
(declare-fun x580 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x1981 () Int)
(declare-fun x1222 () Int)
(declare-fun x3000 () Bool)
(declare-fun x788 () Int)
(declare-fun x3610 () Bool)
(declare-fun x3842 () Int)
(declare-fun x1506 () Bool)
(declare-fun x2663 () Bool)
(declare-fun x703 () Int)
(declare-fun x1941 () Bool)
(declare-fun x2590 () Int)
(declare-fun x2752 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x3775 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x3168 () Bool)
(declare-fun x2514 () Bool)
(declare-fun x735 () Bool)
(declare-fun x3843 () Int)
(declare-fun x2383 () Bool)
(declare-fun x1644 () Int)
(declare-fun x423 () Int)
(declare-fun x2215 () Bool)
(declare-fun x2001 () Int)
(declare-fun x2818 () Bool)
(declare-fun x3572 () Bool)
(declare-fun x318 () Bool)
(declare-fun x304 () Bool)
(declare-fun x3184 () Int)
(declare-fun x3478 () Int)
(declare-fun x3075 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x3400 () Int)
(declare-fun x2894 () Int)
(declare-fun x3833 () Bool)
(declare-fun x988 () Bool)
(declare-fun x1551 () Int)
(declare-fun x2004 () Bool)
(declare-fun x360 () Int)
(declare-fun x3632 () Bool)
(declare-fun x1744 () Int)
(declare-fun x653 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x2738 () Bool)
(declare-fun x3086 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x991 () Bool)
(declare-fun x2095 () Int)
(declare-fun x2393 () Bool)
(declare-fun x220 () Int)
(declare-fun x733 () Bool)
(declare-fun x879 () Bool)
(declare-fun x2710 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x503 () Int)
(declare-fun x35 () Bool)
(declare-fun x3640 () Bool)
(declare-fun x3399 () Int)
(declare-fun x1377 () Bool)
(declare-fun x3465 () Int)
(declare-fun x203 () Int)
(declare-fun x2123 () Int)
(declare-fun x1341 () Int)
(declare-fun x2660 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x1075 () Int)
(declare-fun x3992 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x222 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x2987 () Int)
(declare-fun x1063 () Bool)
(declare-fun x3622 () Int)
(declare-fun x1111 () Int)
(declare-fun x1386 () Bool)
(declare-fun x922 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1731 () Int)
(declare-fun x3643 () Bool)
(declare-fun x1255 () Bool)
(define-fun x371 ((x1596 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1596) (>= x1596 0)) x1596 (- x1596 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2842 ((x1596 Int)) Int (ite (and (< x1596 0) (>= x1596 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1596 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1596))
(define-fun x2283 ((x1596 Int)) Int (ite (and (>= x1596 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1596)) x1596 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1596) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1596)) (- x1596 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1596 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1596 0)) (+ x1596 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2608 x1596 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x561 ((x3281 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3281) (<= 0 x3281)))
(define-fun x3590 ((x3281 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3281) (>= x3281 0)))
(define-fun x2728 ((x3281 Int) (x1211 Int)) Bool (=> (and (> x1211 0) (< 0 x3281)) (and (>= x3281 (x34 x3281 x1211)) (<= 0 (x34 x3281 x1211)))))
(define-fun x3308 ((x3281 Int) (x1211 Int)) Bool (=> (and (and (<= 1 x1211) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1211)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3281) (>= x3281 0))) (and (>= (x34 x3281 x1211) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x34 x3281 x1211)))))
(define-fun x2459 ((x3281 Int) (x1211 Int)) Bool (=> (and (> x3281 x1211) (> x1211 1)) (> x3281 (x34 x3281 x1211))))
(define-fun x1356 ((x3281 Int) (x1211 Int)) Bool (=> (and (< 0 x1211) (> x3281 0)) (= (< x3281 x1211) (= (x34 x3281 x1211) 0))))
(define-fun x2711 ((x3281 Int) (x1211 Int)) Bool (=> (and (> x3281 0) (< 0 x1211)) (and (> (* x1211 (x34 x3281 x1211)) (- x3281 x1211)) (<= (* (x34 x3281 x1211) x1211) x3281))))
(define-fun x3204 ((x3281 Int) (x1211 Int)) Bool (and (x2711 x3281 x1211) (x1356 x3281 x1211) (x2459 x3281 x1211) (x2728 x3281 x1211) (x3308 x3281 x1211)))
(define-fun x2773 ((x3281 Int)) Bool (= 0 (x34 0 x3281)))
(define-fun x3210 ((x3281 Int)) Bool (= (x34 x3281 1) x3281))
(define-fun x1741 ((x3281 Int)) Bool (=> (not (= 0 x3281)) (= 1 (x34 x3281 x3281))))
(define-fun x1996 ((x3281 Int)) Bool (and (x3210 x3281) (x1741 x3281) (x2773 x3281)))
(define-fun x799 ((x3281 Int)) Bool (and (= (x1637 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3281) x3281) (= x3281 (x1637 x3281 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x215 ((x3281 Int)) Bool (and (= 0 (x1637 x3281 0)) (= (x1637 0 x3281) 0)))
(define-fun x959 ((x3281 Int)) Bool (= x3281 (x1637 x3281 x3281)))
(define-fun x1979 ((x3281 Int)) Bool (and (x215 x3281) (x959 x3281) (x799 x3281)))
(define-fun x560 ((x3281 Int) (x1211 Int)) Bool (= (x1637 x1211 x3281) (x1637 x3281 x1211)))
(define-fun x827 ((x3281 Int) (x1211 Int)) Bool (and (=> (<= 0 x1211) (>= x1211 (x1637 x3281 x1211))) (=> (>= x3281 0) (>= x3281 (x1637 x3281 x1211))) (<= 0 (x1637 x3281 x1211))))
(define-fun x730 ((x3281 Int) (x1211 Int)) Bool (and (x827 x3281 x1211) (x560 x3281 x1211)))
(define-fun x1016 ((x3281 Int)) Bool (= (x2608 x3281 2) (x1637 x3281 1)))
(define-fun x2871 ((x3281 Int)) Bool (and (x1016 x3281) (x730 x3281 1)))
(define-fun x66 ((x3281 Int) (x1211 Int)) Bool (and (>= (x2608 x3281 x1211) 0) (< (x2608 x3281 x1211) x1211)))
(define-fun x504 ((x3281 Int) (x1211 Int)) Bool (=> (and (>= x3281 0) (> x1211 0)) (= (= (x2608 x3281 x1211) x3281) (< x3281 x1211))))
(define-fun x449 ((x3281 Int) (x1211 Int)) Bool (=> (and (> x1211 0) (and (> (+ x1211 x1211) x3281) (<= x1211 x3281))) (= (- x3281 x1211) (x2608 x3281 x1211))))
(define-fun x2413 ((x3281 Int) (x1211 Int)) Bool (=> (< 0 x1211) (= x3281 (+ (x2608 x3281 x1211) (* x1211 (x34 x3281 x1211))))))
(define-fun x79 ((x3281 Int) (x1211 Int)) Bool (and (x2413 x3281 x1211) (x66 x3281 x1211) (x504 x3281 x1211) (x449 x3281 x1211)))
(define-fun x1775 ((x3281 Int)) Bool (= (x2608 0 x3281) 0))
(define-fun x3207 ((x3281 Int)) Bool (= 0 (x2608 x3281 1)))
(define-fun x357 ((x3281 Int)) Bool (= 0 (x2608 x3281 x3281)))
(define-fun x3099 ((x3281 Int)) Bool (and (x1775 x3281) (x357 x3281) (x3207 x3281)))
(define-fun x31 ((x3281 Int) (x1211 Int)) Bool (= (* x1211 (x34 x3281 x1211)) (- x3281 (x1637 (- x1211 1) x3281))))
(define-fun x1782 ((x3281 Int) (x1211 Int)) Bool (and (x31 x3281 x1211) (x1356 x3281 x1211) (x2728 x3281 x1211) (x2459 x3281 x1211) (x2711 x3281 x1211) (x3308 x3281 x1211)))
(define-fun x2902 ((x3281 Int) (x1211 Int)) Bool (= (* x1211 x3281) (x3534 x3281 x1211)))
(define-fun x765 ((x3281 Int) (x1211 Int)) Bool (and (= (x3534 (- x3281 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1211) (- (* x3281 x1211) (* x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x3534 (- x3281 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* x3281 (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x3534 x3281 (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x3281 (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2573 ((x3281 Int) (x1211 Int)) Bool (=> (and (> x1211 0) (< 0 x3281)) (= (= (x34 (x2283 (x3534 x3281 x1211)) x3281) x1211) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3534 x3281 x1211)))))
(define-fun x305 ((x3281 Int) (x1211 Int)) Bool (=> (and (not (= 0 x1211)) (not (= 0 x3281))) (and (= x1211 (x34 (x3534 x3281 x1211) x3281)) (= (x34 (x3534 x3281 x1211) x1211) x3281))))
(define-fun x3654 ((x3281 Int) (x1211 Int)) Bool (=> (and (> x3281 0) (> x1211 0)) (= (> x1211 (x34 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3281)) (> (x3534 x3281 x1211) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x621 ((x3281 Int) (x1211 Int)) Bool (and (= (x2283 (x3534 x3281 x1211)) (x2283 (x3534 (- x3281 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2283 (x3534 x3281 (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2283 (x3534 x3281 x1211))) (= (x2283 (x3534 (- x3281 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1211)) (x2283 (x3534 x3281 x1211)))))
(define-fun x2593 ((x3281 Int) (x1211 Int)) Bool (and (=> (and (and (<= x3281 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x3281 0)) (and (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1211 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x34 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3281) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1211)) (>= (x3534 x3281 (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (<= x1211 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1211)) (and (<= x3281 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x3281 0))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x3534 x3281 x1211)) (<= x3281 (x34 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1211)))) (=> (and (and (> x3281 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3281 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1211) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1211))) (= (>= (x34 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1211)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3281)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x3534 (- x3281 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (< 0 x1211) (<= x1211 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3281) (<= x3281 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x3534 (- x3281 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1211)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3281) (x34 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1211))))))
(define-fun x7 ((x3281 Int) (x1211 Int)) Bool (and (x621 x3281 x1211) (x2593 x3281 x1211) (x3654 x3281 x1211) (x305 x3281 x1211) (x765 x3281 x1211) (x2573 x3281 x1211) (x2902 x3281 x1211)))
(define-fun x537 ((x3281 Int)) Bool (and (= 0 (x3534 x3281 0)) (= (x3534 0 x3281) 0)))
(define-fun x1553 ((x3281 Int)) Bool (and (= x3281 (x3534 1 x3281)) (= (x3534 x3281 1) x3281)))
(define-fun x1721 ((x3281 Int)) Bool (and (x537 x3281) (x1553 x3281)))
(define-fun x1739 ((x3281 Int)) Bool (= (x2608 x3281 16777216) (x1637 x3281 16777215)))
(define-fun x2462 ((x3281 Int)) Bool (and (x1739 x3281) (x730 x3281 16777215)))
(define-fun x2464 ((x3281 Int) (x1211 Int)) Bool (= (x3534 x1211 x3281) (x3534 x3281 x1211)))
(define-fun x2886 ((x3281 Int) (x1211 Int)) Bool (and (=> (and (> x1211 0) (> x3281 0)) (< 0 (x3534 x3281 x1211))) (=> (and (> 0 x3281) (< x1211 0)) (> (x3534 x3281 x1211) 0)) (=> (and (> x3281 0) (> 0 x1211)) (> 0 (x3534 x3281 x1211))) (=> (and (< 0 x1211) (< x3281 0)) (< (x3534 x3281 x1211) 0))))
(define-fun x2855 ((x3281 Int) (x1211 Int)) Bool (and (x2593 x3281 x1211) (x621 x3281 x1211) (x2573 x3281 x1211) (x305 x3281 x1211) (x2464 x3281 x1211) (x2886 x3281 x1211) (x3654 x3281 x1211)))
(define-fun x1365 ((x3281 Int)) Bool (= (x2608 x3281 340282366920938463463374607431768211456) (x1637 x3281 340282366920938463463374607431768211455)))
(define-fun x997 ((x3281 Int)) Bool (and (x730 x3281 340282366920938463463374607431768211455) (x1365 x3281)))
(define-fun x3993 ((x3281 Int)) Bool (= (x2608 x3281 18446744073709551616) (x1637 x3281 18446744073709551615)))
(define-fun x1489 ((x3281 Int)) Bool (and (x3993 x3281) (x730 x3281 18446744073709551615)))
(define-fun x2134 ((x3281 Int)) Bool (= (x1637 x3281 255) (x2608 x3281 256)))
(define-fun x124 ((x3281 Int)) Bool (and (x2134 x3281) (x730 x3281 255)))
(define-fun x80 ((x3281 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2953 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3281)) (= (x2953 x3281 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x3710 ((x3281 Int)) Bool (and (= x3281 (x2953 x3281 0)) (= (x2953 0 x3281) x3281)))
(define-fun x2378 ((x3281 Int)) Bool (= x3281 (x2953 x3281 x3281)))
(define-fun x497 ((x3281 Int)) Bool (and (x2378 x3281) (x3710 x3281) (x80 x3281)))
(define-fun x2645 ((x3281 Int) (x1211 Int)) Bool (= (x2953 x1211 x3281) (x2953 x3281 x1211)))
(define-fun x3447 ((x3281 Int) (x1211 Int)) Bool (and (=> (<= 0 x1211) (<= x1211 (x2953 x3281 x1211))) (>= (+ x3281 x1211) (x2953 x3281 x1211)) (=> (>= x3281 0) (<= x3281 (x2953 x3281 x1211)))))
(define-fun x1839 ((x3281 Int) (x1211 Int)) Bool (and (x2645 x3281 x1211) (x3447 x3281 x1211)))
(define-fun x2981 ((x3281 Int)) Bool (= (x2953 x3281 65280) (+ (- x3281 (x1637 x3281 65280)) 65280)))
(define-fun x2481 ((x3281 Int)) Bool (and (x1839 x3281 65280) (x2981 x3281)))
(define-fun x1459 ((x3281 Int)) Bool (= (+ (x2608 x3281 256) (x1637 x3281 65280)) (x2608 x3281 65536)))
(define-fun x2112 ((x3281 Int)) Bool (and (x1459 x3281) (x730 x3281 65280)))
(define-fun x582 ((x3281 Int)) Bool (= (x2953 x3281 16776960) (+ (- x3281 (x1637 x3281 16776960)) 16776960)))
(define-fun x1914 ((x3281 Int)) Bool (and (x1839 x3281 16776960) (x582 x3281)))
(define-fun x488 ((x3281 Int)) Bool (= (+ (x2608 x3281 256) (x1637 x3281 16776960)) (x2608 x3281 16777216)))
(define-fun x545 ((x3281 Int)) Bool (and (x488 x3281) (x730 x3281 16776960)))
(define-fun x3066 ((x3811 Int)) Int 0)
(define-fun x3220 ((x3811 Int)) Int 0)
(define-fun x1953 ((x3811 Int)) Int 0)
(define-fun x3981 ((x3811 Int)) Int 0)
(define-fun x1963 ((x3811 Int)) Int 0)
(define-fun x1890 ((x3811 Int)) Int 0)
(define-fun x3378 ((x3811 Int)) Int 0)
(define-fun x2523 ((x3811 Int)) Int 0)
(define-fun x897 ((x3811 Int)) Int 0)
(define-fun x2835 ((x3811 Int)) Int 0)
(define-fun x1934 ((x3811 Int)) Int 0)
(define-fun x3665 ((x3811 Int)) Int 0)
(define-fun x3015 ((x3811 Int)) Int 0)
(define-fun x3883 ((x3811 Int)) Int 0)
(define-fun x3648 ((x3811 Int)) Int 0)
(define-fun x3167 ((x3811 Int)) Int 0)
(define-fun x2034 ((x3811 Int)) Int 0)
(define-fun x3433 ((x3811 Int)) Int (ite (= x1251 x3811) x3241 (x3067 x3811)))
(define-fun x3659 ((x3811 Int)) Int (ite (= x3811 x53) 0 (x1189 x3811)))
(define-fun x148 ((x3811 Int)) Int (ite (= x3811 x1468) x2133 (x1189 x3811)))
(define-fun x2088 ((x3811 Int)) Int (ite x878 (ite x38 (x3659 x3811) (x1189 x3811)) (x148 x3811)))
(define-fun x3930 ((x3811 Int)) Int (ite (= x3811 x3677) 0 (x2088 x3811)))
(define-fun x1302 ((x3811 Int)) Int (ite (= x3811 x2162) x969 (x2088 x3811)))
(define-fun x525 ((x3811 Int)) Int (ite x2127 (ite x1083 (x3930 x3811) (x2088 x3811)) (x1302 x3811)))
(define-fun x1214 ((x3811 Int)) Int (ite x856 (x2088 x3811) (x525 x3811)))
(define-fun x1730 ((x3811 Int)) Int (ite x2511 (x2088 x3811) (x525 x3811)))
(define-fun x3694 ((x3811 Int)) Int (ite x3821 (x1189 x3811) (x2088 x3811)))
(define-fun x2031 ((x3811 Int)) Int (ite x390 (ite x1034 (x1214 x3811) (ite x768 (x1730 x3811) (x3694 x3811))) (x1189 x3811)))
(define-fun x1292 ((x3811 Int)) Int (ite (= x836 x3811) x685 (x1187 x3811)))
(define-fun x2072 ((x3811 Int)) Int (ite x1364 (x1187 x3811) (x1292 x3811)))
(define-fun x3155 ((x3811 Int)) Int (ite x2002 (x1187 x3811) (ite x2275 (x1187 x3811) (x2072 x3811))))
(define-fun x3105 ((x3811 Int)) Int (ite x878 (ite x645 (x1187 x3811) (x3155 x3811)) (x1187 x3811)))
(define-fun x1533 ((x3811 Int)) Int (ite (= x3811 x1450) x722 (x3105 x3811)))
(define-fun x792 ((x3811 Int)) Int (ite x1398 (x3105 x3811) (x1533 x3811)))
(define-fun x3726 ((x3811 Int)) Int (ite x935 (x3105 x3811) (ite x3932 (x3105 x3811) (x792 x3811))))
(define-fun x2570 ((x3811 Int)) Int (ite x2127 (ite x136 (x3105 x3811) (x3726 x3811)) (x3105 x3811)))
(define-fun x3809 ((x3811 Int)) Int (ite x856 (x3105 x3811) (x2570 x3811)))
(define-fun x3769 ((x3811 Int)) Int (ite x2511 (x3105 x3811) (x2570 x3811)))
(define-fun x1038 ((x3811 Int)) Int (ite x3821 (x1187 x3811) (x3105 x3811)))
(define-fun x3599 ((x3811 Int)) Int (ite x390 (ite x1034 (x3809 x3811) (ite x768 (x3769 x3811) (x1038 x3811))) (x1187 x3811)))
(define-fun x3203 ((x3811 Int)) Int (ite (= x53 x3811) 0 (x992 x3811)))
(define-fun x2194 ((x3811 Int)) Int (ite (= x3811 x1468) x1453 (x992 x3811)))
(define-fun x3772 ((x3811 Int)) Int (ite x878 (ite x38 (x3203 x3811) (x992 x3811)) (x2194 x3811)))
(define-fun x2780 ((x3811 Int)) Int (ite (= x3811 x3677) 0 (x3772 x3811)))
(define-fun x1376 ((x3811 Int)) Int (ite (= x3811 x2162) x188 (x3772 x3811)))
(define-fun x3684 ((x3811 Int)) Int (ite x2127 (ite x1083 (x2780 x3811) (x3772 x3811)) (x1376 x3811)))
(define-fun x1601 ((x3811 Int)) Int (ite x856 (x3772 x3811) (x3684 x3811)))
(define-fun x474 ((x3811 Int)) Int (ite x2511 (x3772 x3811) (x3684 x3811)))
(define-fun x2816 ((x3811 Int)) Int (ite x3821 (x992 x3811) (x3772 x3811)))
(define-fun x3592 ((x3811 Int)) Int (ite x390 (ite x1034 (x1601 x3811) (ite x768 (x474 x3811) (x2816 x3811))) (x992 x3811)))
(define-fun x1913 ((x3811 Int)) Int (ite (= x3920 x3811) x1465 (x462 x3811)))
(define-fun x1145 ((x3811 Int)) Int (ite x2002 (x462 x3811) (ite x2275 (x462 x3811) (x1913 x3811))))
(define-fun x264 ((x3811 Int)) Int (ite x878 (ite x645 (x462 x3811) (x1145 x3811)) (x462 x3811)))
(define-fun x1706 ((x3811 Int)) Int (ite (= x3811 x3756) x1405 (x264 x3811)))
(define-fun x3623 ((x3811 Int)) Int (ite x935 (x264 x3811) (ite x3932 (x264 x3811) (x1706 x3811))))
(define-fun x26 ((x3811 Int)) Int (ite x2127 (ite x136 (x264 x3811) (x3623 x3811)) (x264 x3811)))
(define-fun x3090 ((x3811 Int)) Int (ite x856 (x264 x3811) (x26 x3811)))
(define-fun x3329 ((x3811 Int)) Int (ite x2511 (x264 x3811) (x26 x3811)))
(define-fun x353 ((x3811 Int)) Int (ite x3821 (x462 x3811) (x264 x3811)))
(define-fun x3944 ((x3811 Int)) Int (ite x390 (ite x1034 (x3090 x3811) (ite x768 (x3329 x3811) (x353 x3811))) (x462 x3811)))
(define-fun x1273 ((x3811 Int)) Int (ite (= x3811 x3966) x2894 (x3089 x3811)))
(define-fun x2499 ((x3811 Int)) Int (ite x2002 (x3089 x3811) (x1273 x3811)))
(define-fun x532 ((x3811 Int)) Int (ite x878 (ite x645 (x3089 x3811) (x2499 x3811)) (x3089 x3811)))
(define-fun x3020 ((x3811 Int)) Int (ite (= x1515 x3811) x1902 (x532 x3811)))
(define-fun x3903 ((x3811 Int)) Int (ite x935 (x532 x3811) (x3020 x3811)))
(define-fun x894 ((x3811 Int)) Int (ite x2127 (ite x136 (x532 x3811) (x3903 x3811)) (x532 x3811)))
(define-fun x2006 ((x3811 Int)) Int (ite x856 (x532 x3811) (x894 x3811)))
(define-fun x2187 ((x3811 Int)) Int (ite x2511 (x532 x3811) (x894 x3811)))
(define-fun x2199 ((x3811 Int)) Int (ite x3821 (x3089 x3811) (x532 x3811)))
(define-fun x3937 ((x3811 Int)) Int (ite x390 (ite x1034 (x2006 x3811) (ite x768 (x2187 x3811) (x2199 x3811))) (x3089 x3811)))
(define-fun x1626 ((x3811 Int)) Int (ite (= x3492 x3811) x556 (x1743 x3811)))
(define-fun x1513 ((x3811 Int)) Int (ite (= x3811 x2948) 0 (x1626 x3811)))
(define-fun x1413 ((x3811 Int)) Int (ite x878 (ite x38 (x1513 x3811) (x1743 x3811)) (x1743 x3811)))
(define-fun x2689 ((x3811 Int)) Int (ite (= x2174 x3811) x636 (x1413 x3811)))
(define-fun x1041 ((x3811 Int)) Int (ite (= x3811 x2925) 0 (x2689 x3811)))
(define-fun x1049 ((x3811 Int)) Int (ite x2127 (ite x1083 (x1041 x3811) (x1413 x3811)) (x1413 x3811)))
(define-fun x2380 ((x3811 Int)) Int (ite x856 (x1413 x3811) (x1049 x3811)))
(define-fun x3928 ((x3811 Int)) Int (ite x2511 (x1413 x3811) (x1049 x3811)))
(define-fun x2332 ((x3811 Int)) Int (ite x3821 (x1743 x3811) (x1413 x3811)))
(define-fun x2900 ((x3811 Int)) Int (ite x390 (ite x1034 (x2380 x3811) (ite x768 (x3928 x3811) (x2332 x3811))) (x1743 x3811)))
(define-fun x3414 ((x3811 Int)) Int (ite (= x3811 x931) x2146 (x3076 x3811)))
(define-fun x660 ((x3811 Int)) Int (ite (= x3969 x3811) x407 (x3414 x3811)))
(define-fun x2927 ((x3811 Int)) Int (ite (= x3146 x3811) x2565 (x3076 x3811)))
(define-fun x1720 ((x3811 Int)) Int (ite x246 (x660 x3811) (x2927 x3811)))
(define-fun x2629 ((x3811 Int)) Int (ite (= x3811 x2670) x237 (x1720 x3811)))
(define-fun x540 ((x3811 Int)) Int (ite (= x3297 x3811) x2586 (x2629 x3811)))
(define-fun x2939 ((x3811 Int)) Int (ite (= x3493 x3811) x1828 (x1720 x3811)))
(define-fun x2286 ((x3811 Int)) Int (ite x2384 (x540 x3811) (x2939 x3811)))
(define-fun x1931 ((x3811 Int)) Int (ite x856 (x1720 x3811) (x2286 x3811)))
(define-fun x1124 ((x3811 Int)) Int (ite x2511 (x1720 x3811) (x2286 x3811)))
(define-fun x158 ((x3811 Int)) Int (ite x3821 (x3076 x3811) (x1720 x3811)))
(define-fun x3448 ((x3811 Int)) Int (ite x390 (ite x1034 (x1931 x3811) (ite x768 (x1124 x3811) (x158 x3811))) (x3076 x3811)))
(define-fun x553 ((x3811 Int)) Int (ite (= x3811 x2657) x288 (x399 x3811)))
(define-fun x1078 ((x3811 Int)) Int (ite (= x640 x3811) x2504 (x553 x3811)))
(define-fun x3384 ((x3811 Int)) Int (ite (= x2814 x3811) x1725 (x399 x3811)))
(define-fun x1747 ((x3811 Int)) Int (ite (= x3811 x1390) x3375 (x3384 x3811)))
(define-fun x657 ((x3811 Int)) Int (ite (= x1152 x3811) x3731 (x1747 x3811)))
(define-fun x2901 ((x3811 Int)) Int (ite x246 (x1078 x3811) (x657 x3811)))
(define-fun x914 ((x3811 Int)) Int (ite (= x2759 x3811) x3185 (x2901 x3811)))
(define-fun x1385 ((x3811 Int)) Int (ite (= x1859 x3811) x2338 (x914 x3811)))
(define-fun x2908 ((x3811 Int)) Int (ite (= x1262 x3811) x2718 (x2901 x3811)))
(define-fun x3501 ((x3811 Int)) Int (ite (= x1543 x3811) x2339 (x2908 x3811)))
(define-fun x3802 ((x3811 Int)) Int (ite (= x2736 x3811) x328 (x3501 x3811)))
(define-fun x1650 ((x3811 Int)) Int (ite x2384 (x1385 x3811) (x3802 x3811)))
(define-fun x2183 ((x3811 Int)) Int (ite x856 (x2901 x3811) (x1650 x3811)))
(define-fun x432 ((x3811 Int)) Int (ite x2511 (x2901 x3811) (x1650 x3811)))
(define-fun x1323 ((x3811 Int)) Int (ite x3821 (x399 x3811) (x2901 x3811)))
(define-fun x3575 ((x3811 Int)) Int (ite x390 (ite x1034 (x2183 x3811) (ite x768 (x432 x3811) (x1323 x3811))) (x399 x3811)))
(define-fun x2859 ((x3811 Int)) Int (ite (= x739 x3811) x1177 (x1473 x3811)))
(define-fun x314 ((x3811 Int)) Int (ite (= x2948 x3811) 0 (x2859 x3811)))
(define-fun x256 ((x3811 Int)) Int (ite x38 (x314 x3811) (x1473 x3811)))
(define-fun x3974 ((x3811 Int)) Int (ite x878 (x256 x3811) (x1473 x3811)))
(define-fun x3012 ((x3811 Int)) Int (ite (= x3811 x2791) x1064 (x3974 x3811)))
(define-fun x570 ((x3811 Int)) Int (ite (= x3811 x2925) 0 (x3012 x3811)))
(define-fun x3869 ((x3811 Int)) Int (ite x1083 (x570 x3811) (x3974 x3811)))
(define-fun x2478 ((x3811 Int)) Int (ite x2127 (x3869 x3811) (x3974 x3811)))
(define-fun x65 ((x3811 Int)) Int (ite x856 (x3974 x3811) (x2478 x3811)))
(define-fun x3133 ((x3811 Int)) Int (ite x2511 (x3974 x3811) (x2478 x3811)))
(define-fun x522 ((x3811 Int)) Int (ite x3821 (x1473 x3811) (x3974 x3811)))
(define-fun x64 ((x3811 Int)) Int (ite x390 (ite x1034 (x65 x3811) (ite x768 (x3133 x3811) (x522 x3811))) (x1473 x3811)))
(define-fun x3402 ((x3811 Int)) Int (ite (= x3811 x53) 0 (x2129 x3811)))
(define-fun x600 ((x3811 Int)) Int (ite x878 (ite x38 (x3402 x3811) (x2129 x3811)) (x2129 x3811)))
(define-fun x2349 ((x3811 Int)) Int (ite (= x3677 x3811) 0 (x600 x3811)))
(define-fun x697 ((x3811 Int)) Int (ite x2127 (ite x1083 (x2349 x3811) (x600 x3811)) (x600 x3811)))
(define-fun x283 ((x3811 Int)) Int (ite x856 (x600 x3811) (x697 x3811)))
(define-fun x2367 ((x3811 Int)) Int (ite x2511 (x600 x3811) (x697 x3811)))
(define-fun x2647 ((x3811 Int)) Int (ite x3821 (x2129 x3811) (x600 x3811)))
(define-fun x2266 ((x3811 Int)) Int (ite x390 (ite x1034 (x283 x3811) (ite x768 (x2367 x3811) (x2647 x3811))) (x2129 x3811)))
(define-fun x3392 ((x3811 Int)) Int (ite (= x3811 x3730) x2084 (x3575 x3811)))
(define-fun x1834 ((x3811 Int)) Int (ite (= x3811 x1559) x1824 (x3937 x3811)))
(define-fun x3129 ((x3811 Int)) Int (ite (= x2415 x3811) x2387 (x3944 x3811)))
(define-fun x2655 ((x3811 Int)) Int (ite (= x3811 x2788) x1341 (x3599 x3811)))
(define-fun x1167 ((x3811 Int)) Int (ite (= x3811 x919) x160 (x3448 x3811)))
(define-fun x2967 ((x3811 Int)) Int (ite (= x388 x3811) x1604 (x3937 x3811)))
(define-fun x1081 ((x3811 Int)) Int (ite (= x3975 x3811) x661 (x3944 x3811)))
(define-fun x853 ((x3811 Int)) Int (ite (= x3811 x884) x3440 (x3599 x3811)))
(define-fun x2405 ((x3811 Int)) Int (ite x3971 (x1167 x3811) (x3448 x3811)))
(define-fun x3328 ((x3811 Int)) Int (ite x428 (x3448 x3811) (x2405 x3811)))
(define-fun x3435 ((x3811 Int)) Int (ite x3971 (x3575 x3811) (x3392 x3811)))
(define-fun x2171 ((x3811 Int)) Int (ite x428 (x3575 x3811) (x3435 x3811)))
(define-fun x3783 ((x3811 Int)) Int (ite x2356 (x3448 x3811) (ite x428 (x3448 x3811) (x2405 x3811))))
(define-fun x2529 ((x3811 Int)) Int (ite x2356 (x3575 x3811) (ite x428 (x3575 x3811) (x3435 x3811))))
(define-fun x2436 ((x3811 Int)) Int 0)
(define-fun x1318 ((x3811 Int)) Int 0)
(define-fun x1708 ((x3811 Int)) Int (ite x1034 (x2006 x3811) (ite x768 (x2187 x3811) (x2199 x3811))))
(define-fun x3935 ((x3811 Int)) Int (ite x1034 (x1931 x3811) (ite x768 (x1124 x3811) (x158 x3811))))
(define-fun x893 ((x3811 Int)) Int (ite x1034 (x283 x3811) (ite x768 (x2367 x3811) (x2647 x3811))))
(define-fun x2362 ((x3811 Int)) Int (ite x1034 (x1214 x3811) (ite x768 (x1730 x3811) (x3694 x3811))))
(define-fun x1989 ((x3811 Int)) Int (ite x1034 (x3809 x3811) (ite x768 (x3769 x3811) (x1038 x3811))))
(define-fun x2798 ((x3811 Int)) Int (ite x1034 (x3090 x3811) (ite x768 (x3329 x3811) (x353 x3811))))
(define-fun x1186 ((x3811 Int)) Int (ite x1034 (x65 x3811) (ite x768 (x3133 x3811) (x522 x3811))))
(define-fun x2935 ((x3811 Int)) Int (ite x1034 (x2380 x3811) (ite x768 (x3928 x3811) (x2332 x3811))))
(define-fun x2100 ((x3811 Int)) Int (ite x1034 (x1601 x3811) (ite x768 (x474 x3811) (x2816 x3811))))
(define-fun x111 ((x3811 Int)) Int (ite x1034 (x2183 x3811) (ite x768 (x432 x3811) (x1323 x3811))))
(define-fun x1915 ((x3811 Int)) Int (ite x136 (x532 x3811) (x3903 x3811)))
(define-fun x3635 ((x3811 Int)) Int (ite x136 (x264 x3811) (x3623 x3811)))
(define-fun x979 ((x3811 Int)) Int (ite x136 (x3105 x3811) (x3726 x3811)))
(define-fun x145 ((x3811 Int)) Int (ite x645 (x3089 x3811) (x2499 x3811)))
(define-fun x3697 ((x3811 Int)) Int (ite x645 (x1187 x3811) (x3155 x3811)))
(define-fun x1293 ((x3811 Int)) Int (ite x645 (x462 x3811) (x1145 x3811)))
(define-fun x1388 ((x3811 Int)) Int (ite x1083 (x3930 x3811) (x2088 x3811)))
(define-fun x1234 ((x3811 Int)) Int (ite x1083 (x1041 x3811) (x1413 x3811)))
(define-fun x1854 ((x3811 Int)) Int (ite x1083 (x2780 x3811) (x3772 x3811)))
(define-fun x3563 ((x3811 Int)) Int (ite x1083 (x2349 x3811) (x600 x3811)))
(define-fun x3914 ((x3811 Int)) Int (ite x38 (x3402 x3811) (x2129 x3811)))
(define-fun x1415 ((x3811 Int)) Int (ite x38 (x1513 x3811) (x1743 x3811)))
(define-fun x412 ((x3811 Int)) Int (ite x38 (x3203 x3811) (x992 x3811)))
(define-fun x751 ((x3811 Int)) Int (ite x38 (x3659 x3811) (x1189 x3811)))
(define-fun x1421 ((x3811 Int)) Int (ite x3932 (x3105 x3811) (x792 x3811)))
(define-fun x3792 ((x3811 Int)) Int (ite x3932 (x264 x3811) (x1706 x3811)))
(define-fun x3429 ((x3811 Int)) Int (ite x2275 (x462 x3811) (x1913 x3811)))
(define-fun x3537 ((x3811 Int)) Int (ite x2275 (x1187 x3811) (x2072 x3811)))
(define-fun x2419 ((x3811 Int)) Int (ite (= x3811 x1968) x2837 (x2900 x3811)))
(define-fun x877 ((x3811 Int)) Int (ite (= x1044 x3811) x1113 (x64 x3811)))
(define-fun x2679 ((x3811 Int)) Int (ite (= x3811 x3669) x1113 (x2419 x3811)))
(define-fun x951 ((x3811 Int)) Int (ite (= x3811 x917) x3884 (x877 x3811)))
(define-fun x905 ((x3811 Int)) Int (ite (= x2152 x3811) x165 (x2266 x3811)))
(define-fun x3171 ((x3811 Int)) Int (ite (= x3811 x2152) x334 (x3592 x3811)))
(define-fun x1877 ((x3811 Int)) Int (ite (= x2152 x3811) x2996 (x2031 x3811)))
(define-fun x2120 ((x3811 Int)) Int (ite (= x3811 x2616) x592 (x2900 x3811)))
(define-fun x546 ((x3811 Int)) Int (ite (= x1907 x3811) x1113 (x64 x3811)))
(define-fun x343 ((x3811 Int)) Int (ite (= x1995 x3811) x1113 (x2120 x3811)))
(define-fun x2733 ((x3811 Int)) Int (ite (= x3811 x3767) x2200 (x546 x3811)))
(define-fun x3919 ((x3811 Int)) Int (ite (= x946 x3811) x165 (x2266 x3811)))
(define-fun x2741 ((x3811 Int)) Int (ite (= x946 x3811) x2397 (x3592 x3811)))
(define-fun x1043 ((x3811 Int)) Int (ite (= x3811 x946) x1266 (x2031 x3811)))
(define-fun x511 ((x3281 Int) (x1211 Int) (x1704 Int) (x876 Int)) Bool (=> (and (>= x1704 x3281) (>= x3281 0) (>= x876 x1211) (>= x1211 0)) (>= (x3534 x1704 x876) (x3534 x3281 x1211))))
(define-fun x3863 ((x3281 Int) (x1211 Int) (x1704 Int) (x876 Int)) Bool (=> (= x3281 x1704) (= (x3534 x3281 (- x1211 x876)) (- (x3534 x3281 x1211) (x3534 x1704 x876)))))
(assert (> (x1573 64 x370 x2735) 10000))
(assert (x79 (* 65536 x2676) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1721 x612))
(assert (= x1903 (x73 (x1573 64 x1903 x3101))))
(assert (x775 340282366920938463463374607431768211455999999999999999999))
(assert (x2855 x869 (- x1864 x1924)))
(assert (= (and x453 (not x1564)) x1808))
(assert (x561 x1353))
(assert (not (x775 (x1573 64 x903 14))))
(assert (x561 x3054))
(assert (x1721 (- x1207 x1020)))
(assert (x1721 4294967296))
(assert (not (x775 (x1573 64 x1534 x3145))))
(assert (x561 x782))
(assert (x561 x3991))
(assert (= x3982 (x3318 (x1573 64 65535 x3982))))
(assert (x561 x3983))
(assert (x561 x3219))
(assert (x79 x1380 18446744073709551616))
(assert (= (and (not x3581) x3075) x3747))
(assert (x561 x2825))
(assert (> (x1573 64 x1180 14) 10000))
(assert (x561 x2441))
(assert (x1721 (- x869 x2764)))
(assert (x1979 x681))
(assert (x561 x3516))
(assert (x2855 x2955 (- x2764 x1595)))
(assert (x561 x3481))
(assert (x561 x3342))
(assert (x561 x3895))
(assert (= (x73 (x1573 64 0 x2606)) 0))
(assert (x561 x2007))
(assert (= (or x2600 x1227) x1116))
(assert (=> (<= x2471 10000) (= 0 (x1077 x2471))))
(assert (x1979 65280))
(assert (= x2386 (=> (and (= x1257 (< 4294967295 x1106)) (or (and x1257 (and (= x2905 (+ 32 x1384)) (= x2863 (x3797 x1106 32)))) (and (not x1257) (and (= x1384 x2905) (= x2863 x1106))))) x2656)))
(assert (=> (<= x612 10000) (= (x1077 x612) 0)))
(assert (x3099 (* x2811 256)))
(assert (x561 x818))
(assert (= (x34 x2190 4294967296) (x3797 x2190 32)))
(assert (x561 x3976))
(assert (x561 x2884))
(assert (not (x775 (x1573 64 x3884 x614))))
(assert (x775 100000000000000))
(assert (x561 x1997))
(assert (=> (>= 10000 x176) (= 0 (x1077 x176))))
(assert (x79 x2929 256))
(assert (= (and x2685 x3766) x195))
(assert (x1996 x796))
(assert (x561 x2237))
(assert (= (or x452 x1753 x1764 x3508) x433))
(assert (x1721 (- x1864 x1924)))
(assert (x561 x1129))
(assert (x3099 (* x676 256)))
(assert (x561 x458))
(assert (x1996 x1236))
(assert (= (x1077 254742742) 0))
(assert (= (x1573 64 x584 14) (x1077 (x1573 64 x584 14))))
(assert (not (x775 (x1573 64 x1427 9))))
(assert (= (and (not x2167) x3704) x1311))
(assert (= (x1077 (x1573 64 x1922 x3494)) (x1573 64 x1922 x3494)))
(assert (= (x1077 1980319261) 0))
(assert (x561 x2254))
(assert (x3204 x1532 1000000000000000000000000))
(assert (= x3003 (=> (and (= x987 (> x425 255)) (or (and (and (= x2930 x1243) (= x425 x1314)) (not x987)) (and x987 (and (= x1243 (+ x2930 8)) (= (x3797 x425 8) x1314))))) x3001)))
(assert (x1996 x2379))
(assert (x3863 x1835 x528 x1020 x732))
(assert (x561 x1869))
(assert (> (x1573 64 0 x2508) 10000))
(assert (x511 x1207 x1886 x732 x1020))
(assert (x1721 x2676))
(assert (x2855 x1835 (- x528 x1020)))
(assert (= (and x3964 x461) x2064))
(assert (x1721 x1410))
(assert (x561 x2993))
(assert (= (x3797 x1875 16) (x34 x1875 65536)))
(assert (x561 x1327))
(assert (x1721 x2087))
(assert (x561 x2575))
(assert (x79 x1814 1000000000000000000000000))
(assert (< (x1573 64 0 x2508) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2439))
(assert (= x1612 (=> (and (or (and x1631 (and (= x3743 (+ x2211 2)) (= x3458 (x3797 x1458 2)))) (and (and (= x3743 x2211) (= x3458 x1458)) (not x1631))) (= (> x1458 3) x1631)) x3742)))
(assert (= (x1573 64 x1836 9) (x1077 (x1573 64 x1836 9))))
(assert (x3099 (ite (< x937 256) (x2706 2 x937) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x676 x510)))
(assert (= (and x1119 x1768) x2618))
(assert (x561 x3693))
(assert (x3863 x1886 x1207 x1835 x528))
(assert (x1782 x3192 2))
(assert (x1782 x214 4294967296))
(assert (x1782 x1799 18446744073709551616))
(assert (= (x73 (x1573 64 x676 x510)) x676))
(assert (x3863 x3518 x3320 x2955 x2764))
(assert (x1721 (- x2764 x1924)))
(assert (x79 x2255 16777216))
(assert (= (and x502 x3454) x548))
(assert (=> (>= 10000 x2651) (= (x1077 x2651) 0)))
(assert (= (x1077 x254) (x1077 (+ 1 x254))))
(assert (= x855 (or x319 x2324)))
(assert (x2855 x732 (- x1020 x869)))
(assert (x1721 x3968))
(assert (x561 x1027))
(assert (x1782 x3550 256))
(assert (= x3035 (=> (= x2431 x629) x1546)))
(assert (x3099 x1226))
(assert (x3863 x1864 x869 x3320 x3518))
(assert (x3863 x1595 x1924 x3518 x3320))
(assert (= (x3318 (x1573 64 x1427 9)) 9))
(assert (x1996 x2191))
(assert (x561 x3680))
(assert (not (x775 (x1573 64 x1922 x646))))
(assert (x561 x2942))
(assert (= 0 (x1077 3402823669209384634633746074317682100000000000000)))
(assert (< 10000 (x1573 64 x3121 5)))
(assert (= (and x2015 (not x3577)) x3719))
(assert (x561 x1297))
(assert (= (x1573 64 x1142 14) (x1077 (x1573 64 x1142 14))))
(assert (= (=> (and (= (< 3 x2401) x1560) (or (and (and (= x2114 x2401) (= x3427 x3714)) (not x1560)) (and x1560 (and (= x2114 (x3797 x2401 2)) (= (+ x3427 2) x3714))))) x71) x2690))
(assert (x79 (* 16 x1954) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3099 (ite (> 256 x3895) (x2706 2 x3895) 0)))
(assert (= x1646 (or x3527 x1779)))
(assert (x7 2 x3549))
(assert (=> (>= 10000 x556) (= (x1077 x556) 0)))
(assert (= (x3797 x796 128) (x34 x796 340282366920938463463374607431768211456)))
(assert (= x2202 (and x3069 (not x2926))))
(assert (x561 x2676))
(assert (x561 x2013))
(assert (x1721 340282366920938463463374607431768211456))
(assert (x1996 1000000000000000000))
(assert (= x1409 (or x895 x405)))
(assert (=> (>= 10000 x3416) (= (x1077 x3416) 0)))
(assert (x1782 x2289 340282366920938463463374607431768211456))
(assert (= (and x1657 x3422) x2476))
(assert (x775 2908516037))
(assert (x561 x2473))
(assert (x561 x2289))
(assert (x997 x2493))
(assert (x497 x1800))
(assert (x561 x1427))
(assert (= (and x1623 x2761) x1391))
(assert (= x3115 (and x757 (not x2910))))
(assert (x2855 x3320 x3518))
(assert (=> (>= 10000 x1410) (= (x1077 x1410) 0)))
(assert (= 64 (x1883 (x1573 64 x1142 14))))
(assert (x3863 x2955 x2764 x1207 x1886))
(assert (x561 x25))
(assert (x561 x248))
(assert (x561 x936))
(assert (x1996 x3890))
(assert (x124 x1922))
(assert (= (and (not x1806) x86) x1055))
(assert (= (=> (and (and (= x2582 (x3641 x2249 2)) (= (= x2582 0) x301)) (or (and (and (= x970 x2428) (= x2249 x25)) x301) (and (not x301) (and (= x25 x2582) (= x970 (+ x2428 2)))))) x3231) x1910))
(assert (= (x1077 x2948) (x1077 (+ x2948 1))))
(assert (= x1377 (and x742 (not x162))))
(assert (< 10000 (x1573 64 x1363 14)))
(assert (x2855 x1207 (- x1886 x2955)))
(assert (x2855 x2764 (- x2955 x1924)))
(assert (x561 x677))
(assert (= (and x1344 x855) x580))
(assert (x1782 x2513 4294967296))
(assert (x561 x1552))
(assert (= x3183 (=> (and (or (and (not x2829) (and (= x1869 x3141) (= x1577 x1519))) (and x2829 (and (= (+ x1869 8) x3141) (= x1577 (x3797 x1519 8))))) (= x2829 (< 255 x1519))) x825)))
(assert (= (or x673 x3264) x242))
(assert (= (and x3445 (not x1998)) x3602))
(assert (x561 x3778))
(assert (= (x3797 x2650 2) (x34 x2650 4)))
(assert (= x224 (x73 (x1573 64 x224 x2189))))
(assert (x561 x2054))
(assert (= (or x1369 x1792) x2158))
(assert (x79 (* x902 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x592))
(assert (not (x775 (x1573 64 x3335 x3023))))
(assert (= (=> (and (or (and (not x3716) (and (= x225 x1157) (= x3608 x3236))) (and x3716 (and (= (+ x225 2) x1157) (= x3608 (x3797 x3236 2))))) (= x3716 (> x3236 3))) x3390) x3511))
(assert (x561 x2512))
(assert (x561 x3139))
(assert (x561 x482))
(assert (x2855 x869 (- x1864 x1207)))
(assert (= (x1077 (+ x2984 1)) (x1077 x2984)))
(assert (x1979 x3208))
(assert (x561 x3174))
(assert (x1721 (- x1864 x1886)))
(assert (x1782 x1569 256))
(assert (x561 x2746))
(assert (x1996 x2247))
(assert (= (and (not x1340) x1088) x92))
(assert (= x303 (=> (= (ite (= 0 x3589) 1 0) x475) x3838)))
(assert (x561 x2620))
(assert (< (x1573 64 x125 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2323))
(assert (x1721 x226))
(assert (=> (<= x637 10000) (= (x1077 x637) 0)))
(assert (= 64 (x1883 (x1573 64 x1555 9))))
(assert (= (=> (and (or (and x3140 (and (= (ite (< 0 x3850) 0 1) x3589) (>= 1099511627775 x297) (= (x2842 (- x297 x2417)) x3850) (= (x1573 64 0 x126) x671) (= x297 (x1473 x671)))) (and (= 1 x3589) (not x3140))) (= x3140 (= x491 0))) x303) x967))
(assert (= (x1077 (+ x1450 2)) (x1077 x1450)))
(assert (=> (>= 10000 x3746) (= (x1077 x3746) 0)))
(assert (x1782 x1325 16))
(assert (x561 x2272))
(assert (x7 65536 x1254))
(assert (= (x1573 64 x370 x112) (x1077 (x1573 64 x370 x112))))
(assert (x561 x3653))
(assert (x561 x3801))
(assert (= (x2283 (ite (< x2559 256) (x2706 2 x2559) 0)) (x3641 1 x2559)))
(assert (= 14 (x3318 (x1573 64 x1982 14))))
(assert (x3863 x528 x1835 x2955 x2764))
(assert (= (and x1619 x322) x2755))
(assert (x3863 x1924 x1595 x1835 x528))
(assert (x1996 18446744073709551616))
(assert (x2855 x528 (- x1835 x1207)))
(assert (= x1707 (or x526 x285)))
(assert (= x3377 (and x638 x3685)))
(assert (= x906 (and x2778 x3650)))
(assert (x561 x3459))
(assert (= x2815 (or x2393 x2002)))
(assert (= (and x916 x2577) x3667))
(assert (x561 x1430))
(assert (= (or x390 x2468) x1387))
(assert (x1721 x2666))
(assert (x561 x3611))
(assert (= x744 (and x3985 x3065)))
(assert (x79 (ite (< x3895 256) (x2706 2 x3895) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3108 x1100) x1894))
(assert (x561 x3813))
(assert (x561 x243))
(assert (x1721 x1478))
(assert (x561 x149))
(assert (x3099 (* 65536 x216)))
(assert (x561 x1141))
(assert (x1839 x3118 x3302))
(assert (x1721 (- x2955 x3518)))
(assert (= x3668 (or x2564 x3946)))
(assert (= (and x2297 x1566) x2841))
(assert (x561 x2087))
(assert (x7 340282366920938463463374607431768211456 x945))
(assert (= 64 (x1883 (x1573 64 x3459 14))))
(assert (< (x1573 64 x3813 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2855 x732 (- x1020 x528)))
(assert (x561 x156))
(assert (x3099 (* x1748 2)))
(assert (x561 x1966))
(assert (= (x2283 (* x16 16)) (x3641 x16 4)))
(assert (x2855 x3320 (- x3518 x1924)))
(assert (x561 x3053))
(assert (x1721 (- x528 x869)))
(assert (< 10000 (x1573 64 x223 x3948)))
(assert (x3863 x528 x1835 x1020 x732))
(assert (x1721 (- x869 x2955)))
(assert (x561 x3589))
(assert (= (or x1938 x1674) x3016))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1427 9)))
(assert (= (and x1988 (not x3798)) x3729))
(assert (< (x1573 64 x3491 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2283 (* 18446744073709551616 x1817)) (x3641 x1817 64)))
(assert (x561 x2450))
(assert (x561 x2394))
(assert (x561 x3045))
(assert (x1721 x350))
(assert (x497 x3951))
(assert (= (x34 x762 65536) (x3797 x762 16)))
(assert (x561 x3469))
(assert (x561 x368))
(assert (= x1763 x1420))
(assert (= x2127 (or x310 x136)))
(assert (= (and (not x2869) x2224) x2592))
(assert (= x920 (or x3 x2497)))
(assert (x3863 x3320 x3518 x2764 x2955))
(assert (= x1113 (x73 (x1573 64 x1113 x2434))))
(assert (x1721 (- x1020 x1886)))
(assert (= x3322 (x3318 (x1573 64 0 x3322))))
(assert (= (and (not x3782) x778) x259))
(assert (= (or x1723 x890) x2176))
(assert (x561 x533))
(assert (x561 x1050))
(assert (= x1277 x2601))
(assert (= (=> (and (= (> x1799 18446744073709551615) x294) (or (and (and (= (x3797 x1799 64) x3221) (= x2294 (+ x3253 64))) x294) (and (and (= x2294 x3253) (= x3221 x1799)) (not x294)))) x2717) x3908))
(assert (= (=> (and (or (and (and (= (+ x333 32) x3840) (= x1593 x216)) (not x3577)) (and x3577 (and (= x103 x216) (= x3840 x333)))) (and (= (x3641 x103 32) x1593) (= (= x1593 0) x3577))) x759) x2461))
(assert (x7 256 x1731))
(assert (=> (>= 10000 x3491) (= (x1077 x3491) 0)))
(assert (x1996 x486))
(assert (x3863 x1924 x1595 x1207 x1886))
(assert (x1721 x2865))
(assert (= (and x3517 x2412) x845))
(assert (x561 x1112))
(assert (x3863 x528 x1835 x1886 x1207))
(assert (x561 x78))
(assert (= x331 (or x3927 x49)))
(assert (x561 x1131))
(assert (=> (>= 10000 x584) (= (x1077 x584) 0)))
(assert (= x590 (and x3844 (not x3915))))
(assert (= x437 (and x3075 x3581)))
(assert (= 64 (x1883 (x1573 64 x176 x705))))
(assert (= (x1573 64 x3342 x1613) (x1077 (x1573 64 x3342 x1613))))
(assert (= (=> (and (or (and x1259 (and (= (x3797 x3221 32) x806) (= x2299 (+ x2294 32)))) (and (not x1259) (and (= x2294 x2299) (= x3221 x806)))) (= (< 4294967295 x3221) x1259)) x2734) x2717))
(assert (= x1497 (and (not x3655) x2516)))
(assert (x1782 x1372 16))
(assert (x561 x2969))
(assert (= (x1573 64 x1363 14) (x1077 (x1573 64 x1363 14))))
(assert (= x1386 (or x2544 x2737)))
(assert (x561 x766))
(assert (x561 x661))
(assert (x3863 x1595 x1924 x3320 x3518))
(assert (x1721 (- x2764 x1595)))
(assert (x1996 x1372))
(assert (= x2334 (or x1474 x786)))
(assert (= (x3797 x3885 64) (x34 x3885 18446744073709551616)))
(assert (x561 x1930))
(assert (x3099 (ite (< x721 256) (x2706 2 x721) 0)))
(assert (x2855 x2764 (- x2955 x528)))
(assert (= (x1077 x536) (x1077 (+ 1 x536))))
(assert (x561 x1994))
(assert (x561 x335))
(assert (< (x1573 64 x1142 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x79 (* x3181 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2531 (or x2257 x2136)))
(assert (= 64 (x1883 (x1573 64 x1982 14))))
(assert (x561 x1901))
(assert (x561 x3239))
(assert (x561 x2255))
(assert (= x2136 (and x1301 x1368)))
(assert (x561 x869))
(assert (x1721 x67))
(assert (x3204 x2567 1000000))
(assert (x561 x1341))
(assert (= x1900 (and x3866 x1581)))
(assert (= (and x3634 x1354) x3499))
(assert (= x1299 (or x3006 x3271)))
(assert (x561 x1091))
(assert (x561 x3407))
(assert (= x3238 (and (not x1389) x336)))
(assert (x2855 x2955 (- x2764 x1020)))
(assert (= x3449 (and x1428 x4)))
(assert (x3863 x528 x1835 x1595 x1924))
(assert (x561 x1035))
(assert (= (x1883 (x1573 64 x1477 x2421)) 64))
(assert (< 10000 (x1573 64 x1218 9)))
(assert (= (x73 (x1573 64 65535 x3758)) 65535))
(assert (x511 x2764 x2955 x1835 x528))
(assert (x7 4 x1936))
(assert (x561 x3706))
(assert (x2855 x1207 (- x1886 x1835)))
(assert (x79 (* x167 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1077 (x1573 64 x370 x1165)) (x1573 64 x370 x1165)))
(assert (= (and x2398 (not x817)) x3006))
(assert (x7 2 x431))
(assert (x1721 x3181))
(assert (= (=> (and (or (and (and (= x957 (x3797 x1840 16)) (= (+ x3822 16) x3689)) x1657) (and (and (= x3822 x3689) (= x957 x1840)) (not x1657))) (= (> x1840 65535) x1657)) x1255) x2818))
(assert (= x2510 (and (not x2821) x1309)))
(assert (x497 x562))
(assert (x1996 x643))
(assert (=> (<= x1788 10000) (= (x1077 x1788) 0)))
(assert (x1782 x419 340282366920938463463374607431768211456))
(assert (= x3554 (and x1417 x2290)))
(assert (x561 x3381))
(assert (x2855 x1020 (- x732 x3518)))
(assert (x2855 x3518 (- x3320 x1020)))
(assert (x7 1000000 x1835))
(assert (x7 1 (x2706 2 x3647)))
(assert (= (x34 x2998 4) (x3797 x2998 2)))
(assert (x561 x3341))
(assert (= x862 (and x529 x1379)))
(assert (x1721 (- x1886 x3320)))
(assert (x1996 x166))
(assert (x561 x655))
(assert (x79 (* x2087 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x3124))
(assert (= x2257 (or x2169 x311)))
(assert (x7 2 x108))
(assert (x561 x3304))
(assert (= (x3318 (x1573 64 x636 x2735)) x2735))
(assert (= (and x3017 x3881) x3531))
(assert (x561 x137))
(assert (x561 x1529))
(assert (x1721 (- x869 x1020)))
(assert (x1996 x360))
(assert (> (x1573 64 x1788 14) 10000))
(assert (x1721 (- x2764 x1020)))
(assert (= (x3797 x2400 2) (x34 x2400 4)))
(assert (x1996 x221))
(assert (= x952 (and (not x3425) x128)))
(assert (=> (>= 10000 x1177) (= (x1077 x1177) 0)))
(assert (x561 x549))
(assert (= (x1077 x2864) (x1077 (+ x2864 1))))
(assert (not (x775 (x1573 64 x3746 x1744))))
(assert (x1979 1))
(assert (x1782 x2401 4))
(assert (x3099 (* x860 256)))
(assert (= x3062 (=> (and (= (< 15 x832) x1488) (or (and x1488 (and (= x3236 (x3797 x832 4)) (= (+ 4 x750) x225))) (and (not x1488) (and (= x832 x3236) (= x225 x750))))) x3511)))
(assert (x561 x1192))
(assert (= (x34 x3024 4294967296) (x3797 x3024 32)))
(assert (= (and x809 x923) x3521))
(assert (x7 256 x612))
(assert (x1996 x263))
(assert (= x2104 (and x2372 x2239)))
(assert (x7 4294967296 x383))
(assert (x7 256 x422))
(assert (x1489 x681))
(assert (= (x3641 1 x3647) (x2283 (ite (< x3647 256) (x2706 2 x3647) 0))))
(assert (x561 x1577))
(assert (x1782 x3084 18446744073709551616))
(assert (x561 x556))
(assert (x1996 x3721))
(assert (= (and x554 (not x294)) x1578))
(assert (x3099 x2929))
(assert (x561 x179))
(assert (x561 x1946))
(assert (x1996 256))
(assert (x561 x1889))
(assert (x1721 4))
(assert (x1996 x2204))
(assert (x2481 x1800))
(assert (x3099 (* 4294967296 x3817)))
(assert (= (and x641 x3695) x3360))
(assert (x561 x589))
(assert (= (x3797 x2790 128) (x34 x2790 340282366920938463463374607431768211456)))
(assert (= (and (not x301) x1841) x1095))
(assert (x561 x2336))
(assert (x497 65280))
(assert (= (x3797 x166 2) (x34 x166 4)))
(assert (x3863 x732 x1020 x1886 x1207))
(assert (x561 x3305))
(assert (x561 x3864))
(assert (= (or x247 x1485) x3069))
(assert (x1721 x630))
(assert (= (and x146 x331) x2261))
(assert (< (x1573 64 x1108 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x775 (x1573 64 x1903 x3101))))
(assert (x1996 x425))
(assert (= (and x304 (not x2487)) x760))
(assert (x1721 (- x1835 x3320)))
(assert (= (x1883 (x1573 64 x3491 5)) 64))
(assert (x1721 (- x732 x1835)))
(assert (x1721 (- x1835 x732)))
(assert (=> (>= 10000 x2087) (= (x1077 x2087) 0)))
(assert (x561 x2843))
(assert (= (x3797 x806 16) (x34 x806 65536)))
(assert (= (x3641 x1597 1) (x2283 (* 2 x1597))))
(assert (x1979 x2071))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2992 9)))
(assert (x561 x2118))
(assert (x561 x2530))
(assert (= (x3797 x2390 8) (x34 x2390 256)))
(assert (= (and x1119 (not x1768)) x1771))
(assert (= x2668 (and x2214 (not x1340))))
(assert (x1782 x2575 256))
(assert (= 64 (x1883 (x1573 64 0 x1644))))
(assert (= (and x1116 x302) x3445))
(assert (= (x3318 (x1573 64 x2463 x2954)) x2954))
(assert (x2855 x3320 (- x3518 x1886)))
(assert (= 14 (x3318 (x1573 64 x3391 14))))
(assert (x2855 x1886 (- x1207 x528)))
(assert (= x218 (or x847 x2631)))
(assert (x1721 (- x3518 x1886)))
(assert (x561 x789))
(assert (x3099 (* 256 x3432)))
(assert (< 10000 (x1573 64 0 x126)))
(assert (= 0 (x1077 100000)))
(assert (x2855 x1864 (- x869 x1595)))
(assert (x561 x435))
(assert (< (x1573 64 x223 x3948) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1077 (x1573 64 x2661 9)) (x1573 64 x2661 9)))
(assert (= (x73 (x1573 64 x3746 x1744)) x3746))
(assert (= (x1077 (+ 1 x836)) (x1077 x836)))
(assert (= (or x1634 x3828) x2784))
(assert (= x913 (or x268 x1181)))
(assert (> (x1573 64 x556 x126) 10000))
(assert (x561 x2785))
(assert (= 64 (x1883 (x1573 64 x2666 x97))))
(assert (x2855 x1864 (- x869 x3320)))
(assert (x3863 x869 x1864 x1924 x1595))
(assert (> (x1573 64 0 x2410) 10000))
(assert (= 0 (x73 (x1573 64 0 x2410))))
(assert (= (x3641 x226 1) (x2283 (* 2 x226))))
(assert (x561 x2124))
(assert (x3863 x1886 x1207 x2955 x2764))
(assert (x79 (* x446 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3863 x869 x1864 x1595 x1924))
(assert (x1996 x3916))
(assert (= (x73 (x1573 64 x584 14)) x584))
(assert (= x3971 (or x2295 x843)))
(assert (= (x1883 (x1573 64 65535 x2857)) 64))
(assert (= (and (not x1051) x1470) x2545))
(assert (x1979 x771))
(assert (x7 256 x860))
(assert (x561 x3383))
(assert (x561 x1864))
(assert (x2855 x3320 (- x3518 x732)))
(assert (= x3285 (=> (and (or (and x1909 (and (= x324 x503) (= x1945 x989))) (and (and (= x503 (+ x324 32)) (= x494 x1945)) (not x1909))) (and (= (= x494 0) x1909) (= (x3641 x989 32) x494))) x1774)))
(assert (= (or x2455 x1367) x1988))
(assert (x561 x1101))
(assert (x79 x2922 256))
(assert (= 64 (x1883 (x1573 64 x3884 x614))))
(assert (= x793 (=> (and (= x284 (> x581 4294967295)) (or (and (and (= (+ x607 32) x3683) (= x1463 (x3797 x581 32))) x284) (and (and (= x3683 x607) (= x1463 x581)) (not x284)))) x3652)))
(assert (not (x775 (x1573 64 x3916 x32))))
(assert (x1721 (- x1886 x1924)))
(assert (= (x73 (x1573 64 255 x544)) 255))
(assert (x2855 x2955 (- x2764 x1207)))
(assert (x561 x180))
(assert (= 9 (x3318 (x1573 64 x2992 9))))
(assert (x561 x1902))
(assert (= (and (not x3687) x1700) x3179))
(assert (x1721 x16))
(assert (= (or x60 x2170) x1019))
(assert (= x1485 (and x3521 x2296)))
(assert (x561 x1585))
(assert (x775 10000000000000000000000))
(assert (x7 256 x176))
(assert (x1721 (- x1835 x2764)))
(assert (x2855 x732 (- x1020 x1886)))
(assert (x7 16 x167))
(assert (= (x3318 (x1573 64 x1836 9)) 9))
(assert (= x322 (and (not x1636) x1530)))
(assert (x561 x2442))
(assert (x497 x1027))
(assert (= 9 (x3318 (x1573 64 x2661 9))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1555 9)))
(assert (x1721 (x2706 2 x2559)))
(assert (x561 x3473))
(assert (x561 x2718))
(assert (x561 x3656))
(assert (= x2896 (and x3954 (not x1729))))
(assert (x3204 x2404 1000000))
(assert (= (and x284 x3830) x3938))
(assert (x561 x1790))
(assert (x561 x726))
(assert (= 9 (x3318 (x1573 64 x3242 9))))
(assert (x79 (* x2249 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1721 x2218))
(assert (= (x3641 x2989 1) (x2283 (* 2 x2989))))
(assert (= (x1077 3875917889) 0))
(assert (x1721 x188))
(assert (x561 x2099))
(assert (x561 x1649))
(assert (x561 x1682))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3121 5)))
(assert (= (and (not x3280) x2202) x1820))
(assert (x561 x1120))
(assert (x2855 x869 (- x1864 x1595)))
(assert (= (=> (and (and (>= 1099511627775 x2837) (<= x313 1099511627775) (= x2209 (x1573 64 x1113 x614)) (= x3687 (> x313 0)) (= (x2900 x1805) x2837) (= (x1573 64 x1922 x646) x614) (= x646 (x1573 64 x637 14)) (= x637 (ite x3695 1 0)) (= (x1573 64 0 x614) x1805) (= (x2900 x2209) x313)) (or (and (not x3687) (and (= x2877 (x64 x3465)) (<= x2877 1099511627775) (= x3465 (x1573 64 x1113 x614)) (= (ite (< 0 x2877) 1 0) x615))) (and (= x615 (ite x3687 1 0)) x3687))) x2696) x1823))
(assert (=> (>= 10000 x1327) (= (x1077 x1327) 0)))
(assert (x545 x2929))
(assert (= (x1077 (x1573 64 x1410 x601)) (x1573 64 x1410 x601)))
(assert (= (x3318 (x1573 64 x1922 x646)) x646))
(assert (x775 1000099900000))
(assert (x7 18446744073709551616 x3924))
(assert (= (and x2627 x774) x895))
(assert (= x1028 (=> (and (= x2824 (< 255 x2716)) (or (and (and (= x2716 x1925) (= x1330 x3250)) (not x2824)) (and (and (= x1925 (x3797 x2716 8)) (= x1330 (+ 8 x3250))) x2824))) x990)))
(assert (= (=> (and (or (and (not x956) (and (= x936 x335) (= x633 x3565))) (and (and (= x936 (x3797 x335 2)) (= (+ 2 x3565) x633)) x956)) (= x956 (< 3 x335))) x374) x3804))
(assert (x1996 x1691))
(assert (x1721 x1597))
(assert (= (=> (and (and (= x2425 (= x1846 0)) (= x1846 (x3641 x652 64))) (or (and (and (= x3856 (+ x243 64)) (= x1846 x3817)) (not x2425)) (and x2425 (and (= x3856 x243) (= x652 x3817))))) x115) x1280))
(assert (x561 x2757))
(assert (x1489 x2439))
(assert (= 64 (x1883 (x1573 64 x2417 x126))))
(assert (x511 x3320 x3518 x732 x1020))
(assert (x1721 x763))
(assert (not (x775 (x1573 64 x2417 x126))))
(assert (= x1762 (x3318 (x1573 64 x3991 x1762))))
(assert (= (and x2668 x1300) x290))
(assert (x1721 x2906))
(assert (x561 x3968))
(assert (x79 (* 16 x789) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x820))
(assert (= (=> (and (or (and (not x3197) (and (= x1093 x2379) (= x2867 x1930))) (and (and (= (+ x2867 64) x1930) (= (x3797 x2379 64) x1093)) x3197)) (= (< 18446744073709551615 x2379) x3197)) x3764) x3148))
(assert (> (x1573 64 x1353 x3950) 10000))
(assert (= x3799 (=> (and (= (< 4294967295 x320) x1670) (or (and (and (= x320 x1875) (= x1334 x3963)) (not x1670)) (and x1670 (and (= x1875 (x3797 x320 32)) (= x3963 (+ 32 x1334)))))) x585)))
(assert (x561 x1600))
(assert (x1996 x3976))
(assert (< 10000 (x1573 64 0 x3322)))
(assert (x1782 x1548 18446744073709551616))
(assert (x561 x2406))
(assert (= (and x1094 x1154) x2026))
(assert (= (x3318 (x1573 64 x2087 x2864)) x2864))
(assert (x1996 x3024))
(assert (x561 x3024))
(assert (x561 x2877))
(assert (x7 1000000 x1075))
(assert (= (x2283 (* x3313 256)) (x3641 x3313 8)))
(assert (x1782 x832 16))
(assert (= (x1077 (x1573 64 x1037 14)) (x1573 64 x1037 14)))
(assert (x561 x2193))
(assert (= x3886 (and x1154 (not x1094))))
(assert (x1782 x1577 16))
(assert (= (x34 x3463 4) (x3797 x3463 2)))
(assert (x1996 x1814))
(assert (= x3504 (and x1975 x130)))
(assert (> (x1573 64 x2661 9) 10000))
(assert (= (and (not x3039) x3031) x3899))
(assert (x7 340282366920938463463374607431768211456 x3968))
(assert (x3863 x1864 x869 x1886 x1207))
(assert (= x2735 (x3318 (x1573 64 x1064 x2735))))
(assert (= (x3641 x712 4) (x2283 (* x712 16))))
(assert (x561 x2628))
(assert (not (x775 (x1573 64 x2651 5))))
(assert (x561 x1874))
(assert (x561 x3800))
(assert (x561 x3503))
(assert (= x1313 (=> (and (or (and x3130 (and (= (+ 16 x1599) x2930) (= x425 (x3797 x3701 16)))) (and (and (= x425 x3701) (= x2930 x1599)) (not x3130))) (= x3130 (< 65535 x3701))) x3003)))
(assert (x3863 x732 x1020 x2764 x2955))
(assert (x561 x3682))
(assert (x1782 x149 256))
(assert (= x2234 (or x760 x454)))
(assert (= (and x3111 x2772) x1690))
(assert (x1996 x2222))
(assert (x561 x3519))
(assert (x7 1 (x2706 2 x2702)))
(assert (= (and x3096 (not x3738)) x1893))
(assert (x561 x403))
(assert (< (x1573 64 65535 x3758) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1883 (x1573 64 x556 x126)) 64))
(assert (= x2087 (x73 (x1573 64 x2087 x2864))))
(assert (= (x1077 (x1573 64 x2628 x1850)) (x1573 64 x2628 x1850)))
(assert (x561 x28))
(assert (x1721 (- x1835 x1924)))
(assert (> (x1573 64 x910 9) 10000))
(assert (x1979 x1374))
(assert (x1721 (- x1835 x2955)))
(assert (x1996 x1922))
(assert (= x544 (x3318 (x1573 64 255 x544))))
(assert (= x2520 (and x3197 x3556)))
(assert (x561 x2701))
(assert (x79 (* x1785 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x855 (not x1344)) x3497))
(assert (= (or x182 x3945) x929))
(assert (not (x775 (x1573 64 x2450 x1086))))
(assert (x561 x1099))
(assert (x561 x607))
(assert (x1721 x3737))
(assert (x1721 (- x1595 x2764)))
(assert (x7 100000000000000 x3737))
(assert (x1782 x1008 2))
(assert (x561 x1069))
(assert (x561 x1784))
(assert (< 10000 (x1573 64 x1177 x126)))
(assert (x1721 (x2706 2 x791)))
(assert (x561 x187))
(assert (= (x3641 x2087 8) (x2283 (* x2087 256))))
(assert (x561 x3244))
(assert (= 64 (x1883 (x1573 64 255 x3545))))
(assert (x1996 x1498))
(assert (x3099 (* 4294967296 x3594)))
(assert (= (or x1397 x1343) x3789))
(assert (x561 x2559))
(assert (x3099 18446744073709551616))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 0 x1644)))
(assert (= (and x1057 (not x2873)) x1892))
(assert (x3099 x3539))
(assert (x7 256 x2811))
(assert (= (=> (= x2540 (= x693 0)) (and (=> (and (and (= x1595 x3947) (= x1087 x3088) (= x1340 x3695) (= x3510 x3949) (= 128 x180)) x2540) x252) (=> (and (and (or (and (= (ite x3517 1 0) x229) x3517) (and (and (= x1845 (x1473 x1132)) (>= 1099511627775 x1845) (= (ite (< 0 x1845) 1 0) x229) (= x1132 (x1573 64 0 x2606))) (not x3517))) (and (= x3391 (ite x2973 1 0)) (= (x1573 64 x2043 x2879) x2606) (= x701 (x1573 64 0 x2606)) (= (ite x2973 1 0) x3339) (= x198 0) (<= x2411 1099511627775) (= x198 (ite (= x771 5) (ite (= 5 x771) 1 0) (ite (= x771 6) 1 0))) (= x2973 (not x1340)) (= (x1637 16777215 x629) x2043) (= x2879 (x1573 64 x3391 14)) (= x3517 (< 0 x2411)) (= x2411 (x1743 x701)) (= 0 x487))) (not x2540)) x680))) x508))
(assert (x1782 x2191 16))
(assert (= 14 (x3318 (x1573 64 x278 14))))
(assert (x2855 x1595 x1924))
(assert (x1782 x317 340282366920938463463374607431768211456))
(assert (= 64 (x1883 (x1573 64 x910 9))))
(assert (= (x1573 64 x1765 x536) (x1077 (x1573 64 x1765 x536))))
(assert (not (x775 (x1573 64 x1327 x1950))))
(assert (= (x1883 (x1573 64 x2628 x1850)) 64))
(assert (x79 x3013 340282366920938463463374607431768211456))
(assert (= (x3318 (x1573 64 0 x2145)) x2145))
(assert (x1782 x2204 4294967296))
(assert (x1721 (- x732 x1924)))
(assert (= x2682 (and (not x2685) x3766)))
(assert (= (x1077 (x1573 64 x1064 x2735)) (x1573 64 x1064 x2735)))
(assert (x561 x3206))
(assert (x561 x2625))
(assert (= x3952 (or x3761 x3000)))
(assert (x3099 (* 256 x2471)))
(assert (= (or x1973 x1980) x1783))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 0 x3322)))
(assert (= (x1883 (x1573 64 x3916 x32)) 64))
(assert (not (x775 (x1573 64 x2628 x1850))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2000 14)))
(assert (= x2421 (x3318 (x1573 64 x1477 x2421))))
(assert (x3099 (* 2 x1597)))
(assert (= (x3641 x25 1) (x2283 (* x25 2))))
(assert (x561 x2649))
(assert (x561 x2310))
(assert (x3863 x1835 x528 x1207 x1886))
(assert (x1721 (- x3320 x732)))
(assert (x775 1000000000000000000))
(assert (=> (<= x1534 10000) (= (x1077 x1534) 0)))
(assert (=> (>= 10000 x370) (= (x1077 x370) 0)))
(assert (= (x1573 64 x2451 x1588) (x1077 (x1573 64 x2451 x1588))))
(assert (= 9 (x3318 (x1573 64 x312 9))))
(assert (= (and x3117 (not x3309)) x87))
(assert (= (or x2060 x194) x808))
(assert (= x186 (or x2033 x3176 x555 x728)))
(assert (x511 x528 x1835 x3320 x3518))
(assert (= (x1077 (x1573 64 x2000 14)) (x1573 64 x2000 14)))
(assert (x79 (* 4 x2161) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x775 (x1573 64 x367 x1616))))
(assert (= (x73 (x1573 64 x3121 5)) x3121))
(assert (x561 x859))
(assert (x3863 x1924 x1595 x1020 x732))
(assert (x1979 340282366920938463463374607431768211455))
(assert (x1782 x2323 16))
(assert (= x1819 (or x1715 x942)))
(assert (x561 x771))
(assert (= (x1883 (x1573 64 x2087 x2864)) 64))
(assert (x561 x1927))
(assert (x3099 65536))
(assert (< (x1573 64 x176 x705) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3797 x1362 16) (x34 x1362 65536)))
(assert (x79 x3539 340282366920938463463374607431768211456))
(assert (= (and (not x369) x1019) x3104))
(assert (= (x3797 x1242 4) (x34 x1242 16)))
(assert (x1782 x1118 18446744073709551616))
(assert (x561 x3551))
(assert (= (x3641 x2941 64) (x2283 (* 18446744073709551616 x2941))))
(assert (x1782 x964 65536))
(assert (x997 x3070))
(assert (x561 x2052))
(assert (x7 256 x3335))
(assert (x3204 x486 1000000000000000000000000))
(assert (= (x73 (x1573 64 x1477 x2421)) x1477))
(assert (= (x1883 (x1573 64 0 x614)) 64))
(assert (x1721 (- x1207 x2955)))
(assert (= x2388 (and x505 x339)))
(assert (= x3486 (and x667 (not x3457))))
(assert (< (x1573 64 x3916 x32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2489 (and x2202 x3280)))
(assert (= (x3318 (x1573 64 x2099 14)) 14))
(assert (> (x1573 64 x592 x2434) 10000))
(assert (x1721 x1482))
(assert (= (x1077 (+ 1 x2925)) (x1077 x2925)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 65535 x2857)))
(assert (= (or x499 x2261) x1326))
(assert (x561 x2724))
(assert (= x2356 (and (not x3891) x1387)))
(assert (x79 x2466 1000000000000000000000000))
(assert (not (x775 (x1573 64 x2417 x3803))))
(assert (= (=> (and (or (and (and (= x2595 x677) (= x3571 x3594)) x2487) (and (not x2487) (and (= x2595 (+ x677 64)) (= x3594 x1863)))) (and (= (x3641 x3571 64) x1863) (= x2487 (= 0 x1863)))) x2971) x1967))
(assert (= (and x831 (not x1484)) x2917))
(assert (x79 x530 340282366920938463463374607431768211456))
(assert (= x2115 (and x1776 x3860)))
(assert (x561 x3943))
(assert (x1996 4294967296))
(assert (x1721 (- x2955 x1864)))
(assert (x7 2 x2989))
(assert (= (=> (and (= x2796 (= 0 x1136)) (or (and (not x2796) (and (= (x64 x1215) x3884) (= x2152 (+ 1 x1751)) (= x3669 (x1573 64 x3884 x614)) (= x1968 (x1573 64 x1113 x614)) (>= 1099511627775 x3884) (= x1606 1) (= (x1573 64 x1113 x614) x1751) (= x917 (x1573 64 x1113 x614)) (= x1044 (x1573 64 x2837 x614)) (= x1215 (x1573 64 x2837 x614)))) (and x2796 (= 0 x1606)))) x3544) x2201))
(assert (= x2872 (and x74 (not x1063))))
(assert (x561 x3911))
(assert (x561 x1640))
(assert (x7 1 (x2706 2 x937)))
(assert (x561 x2326))
(assert (= (and (not x1688) x1055) x3932))
(assert (x2855 x1595 (- x1924 x869)))
(assert (x561 x3320))
(assert (x561 x2938))
(assert (x1721 (- x3518 x1207)))
(assert (= x835 (=> (and (or (and (not x529) (and (= x811 x2237) (= x3417 x2400))) (and x529 (and (= (x3797 x2400 2) x3417) (= x2237 (+ x811 2))))) (= (> x2400 3) x529)) x1811)))
(assert (x1782 x3519 2))
(assert (= x1862 (=> (and (and (= x612 (+ (x3641 x2666 8) x1969)) (= x1260 (x1573 64 x612 x3873)) (= x3873 (+ x97 1)) (= (< 340282366920938463463374607431768211455 x2267) x1029) (= x2267 (x3089 x1260)) (= (ite (> x996 1) (+ x1978 1) x1978) x1969)) (or (and (not x1029) (and (= x547 x2267) (= x3079 0))) (and (and (= 128 x3079) (= x547 (x3797 x2267 128))) x1029))) x326)))
(assert (x1979 16777215))
(assert (x3590 x2878))
(assert (= x59 (or x3073 x2236)))
(assert (x3863 x3320 x3518 x1864 x869))
(assert (x561 x2249))
(assert (not (x775 (x1573 64 x176 x705))))
(assert (= (x1573 64 x1427 9) (x1077 (x1573 64 x1427 9))))
(assert (= (and x2913 x89) x1570))
(assert (x3863 x732 x1020 x1595 x1924))
(assert (= (x3641 x1945 16) (x2283 (* x1945 65536))))
(assert (x3863 x1835 x528 x2955 x2764))
(assert (x561 x1830))
(assert (= (and (not x2569) x174) x3347))
(assert (x79 (* 2 x2512) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7 18446744073709551616 x448))
(assert (x561 x804))
(assert (x561 x216))
(assert (= x2479 (x3318 (x1573 64 x1404 x2479))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3884 x614)))
(assert (= x742 (or x1574 x626)))
(assert (x1996 x779))
(assert (x561 x1218))
(assert (x561 x2851))
(assert (x561 x3488))
(assert (x2855 x1924 (- x1595 x869)))
(assert (= (x1077 (x1573 64 255 x3545)) (x1573 64 255 x3545)))
(assert (= x1982 (x73 (x1573 64 x1982 14))))
(assert (x1782 x1236 18446744073709551616))
(assert (= x2853 (or x259 x380)))
(assert (x1996 x2777))
(assert (= 64 (x1883 (x1573 64 x592 x2434))))
(assert (x79 (* 2 x226) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2278 x2492) x3346))
(assert (= (and (not x1958) x3154) x3506))
(assert (= (and (not x1276) x2460) x666))
(assert (x561 x3363))
(assert (= (x3641 x3488 128) (x2283 (* 340282366920938463463374607431768211456 x3488))))
(assert (> (x1573 64 x1922 x646) 10000))
(assert (x561 x2390))
(assert (= (x3797 x1003 64) (x34 x1003 18446744073709551616)))
(assert (x7 4 x2161))
(assert (x3863 x1924 x1595 x869 x1864))
(assert (x1782 x173 256))
(assert (= (x1883 (x1573 64 x2661 9)) 64))
(assert (x561 x1130))
(assert (= (or x723 x3081) x577))
(assert (x7 4294967296 x3615))
(assert (= (x3797 x2379 64) (x34 x2379 18446744073709551616)))
(assert (= (x1573 64 x3916 x32) (x1077 (x1573 64 x3916 x32))))
(assert (= 64 (x1883 (x1573 64 0 14))))
(assert (x3863 x1207 x1886 x1864 x869))
(assert (x1721 x3622))
(assert (= x1713 (=> (and (or (and (and (= x3503 x1151) (= x1737 x2820)) (not x1882)) (and (and (= x3503 (x3797 x1151 2)) (= x2820 (+ 2 x1737))) x1882)) (= (> x1151 3) x1882)) x634)))
(assert (= (x2283 (* x1954 16)) (x3641 x1954 4)))
(assert (not (x775 (x1573 64 x3121 5))))
(assert (x3099 (* 65536 x3859)))
(assert (x775 100000000))
(assert (= (x1077 (+ x567 2)) (x1077 x567)))
(assert (x997 x703))
(assert (= (=> (and (= x2239 (> x1431 15)) (or (and (and (= x2998 (x3797 x1431 4)) (= x1061 (+ 4 x3244))) x2239) (and (not x2239) (and (= x2998 x1431) (= x3244 x1061))))) x3475) x3037))
(assert (x7 256 x2471))
(assert (= (=> (and (= x2640 (< 255 x2575)) (or (and (and (= x1991 x2435) (= x3936 x2575)) (not x2640)) (and (and (= x3936 (x3797 x2575 8)) (= x2435 (+ x1991 8))) x2640))) x397) x3700))
(assert (x561 x205))
(assert (x1721 (- x2955 x1886)))
(assert (x561 x2494))
(assert (x561 x1691))
(assert (x561 x3410))
(assert (= (and x3798 x1988) x2019))
(assert (= x1110 (and x993 x57)))
(assert (= (x3797 x2491 2) (x34 x2491 4)))
(assert (x561 x3666))
(assert (= x2407 (=> (and (and (= (x3641 x1830 8) x1527) (= x191 (= 0 x1527))) (or (and (not x191) (and (= x1527 x2753) (= (+ 8 x3876) x1790))) (and x191 (and (= x1830 x2753) (= x3876 x1790))))) x3707)))
(assert (= x1943 (=> (and (and (= x1645 (x3641 x3345 4)) (= (= 0 x1645) x594)) (or (and x594 (and (= x3345 x2249) (= x2428 x460))) (and (and (= (+ 4 x460) x2428) (= x1645 x2249)) (not x594)))) x1910)))
(assert (= (x34 x2361 4294967296) (x3797 x2361 32)))
(assert (= (x1573 64 65535 x2857) (x1077 (x1573 64 65535 x2857))))
(assert (< (x1573 64 x1478 x702) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7 340282366920938463463374607431768211456 x2865))
(assert (= (and x913 x1252) x3625))
(assert (x2855 x732 (- x1020 x3518)))
(assert (x561 x989))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x682 x250)))
(assert (x1996 x320))
(assert (= (x3318 (x1573 64 x3239 14)) 14))
(assert (x2855 x1207 (- x1886 x1864)))
(assert (= (x1077 (x1573 64 x3991 x1762)) (x1573 64 x3991 x1762)))
(assert (x7 65536 x102))
(assert (x561 x2409))
(assert (= x1773 (=> (and (= x3505 x629) (= (ite (= x1696 16777215) 0 x2255) x3505) (= x1696 (x1637 16777215 x2255))) x1546)))
(assert (= (x3318 (x1573 64 x1922 x3494)) x3494))
(assert (x561 x1431))
(assert (not (x775 (x1573 64 x1353 x3950))))
(assert (= (x1077 (x1573 64 x3407 14)) (x1573 64 x3407 14)))
(assert (x561 x3558))
(assert (x561 x142))
(assert (= x768 (or x761 x2511)))
(assert (< 10000 (x1573 64 255 x3760)))
(assert (= (x1077 785044283) 0))
(assert (x1979 x2701))
(assert (= x262 (and x2577 (not x916))))
(assert (x561 x3255))
(assert (= (x73 (x1573 64 x3491 5)) x3491))
(assert (x3099 (* 340282366920938463463374607431768211456 x3488)))
(assert (x2855 x3518 (- x3320 x1835)))
(assert (x79 (* x2865 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1077 (x1573 64 x682 x250)) (x1573 64 x682 x250)))
(assert (x3099 (* x1471 4)))
(assert (x3863 x2764 x2955 x732 x1020))
(assert (x1996 x241))
(assert (= 0 (x1077 100000000)))
(assert (x1721 x1830))
(assert (= (x1573 64 x3484 x2742) (x1077 (x1573 64 x3484 x2742))))
(assert (x561 x358))
(assert (= (x1077 (+ 1 x2747)) (x1077 x2747)))
(assert (= x236 x318))
(assert (= x1757 (=> (and (= (> x149 255) x51) (or (and x51 (and (= x3374 (+ x3877 8)) (= (x3797 x149 8) x2323))) (and (not x51) (and (= x3877 x3374) (= x2323 x149))))) x819)))
(assert (x1996 x581))
(assert (= x3946 (and x1004 (not x1947))))
(assert (x3099 (ite (< x791 256) (x2706 2 x791) 0)))
(assert (x561 x1800))
(assert (= (=> (and (= (> x1118 18446744073709551615) x1346) (or (and (and (= x863 x527) (= x2247 x1118)) (not x1346)) (and x1346 (and (= x2247 (x3797 x1118 64)) (= (+ 64 x527) x863))))) x758) x1661))
(assert (= (x1077 (+ x2788 2)) (x1077 x2788)))
(assert (x561 x300))
(assert (= (x1573 64 0 x2606) (x1077 (x1573 64 0 x2606))))
(assert (= x864 x3444))
(assert (x1721 x2678))
(assert (= 14 (x3318 (x1573 64 x1297 14))))
(assert (= (x1077 x2359) (x1077 (+ x2359 1))))
(assert (= x1986 (and x1590 (not x3942))))
(assert (= x1339 (and (=> (and (and (= (> x1050 (- x1922 1)) x1579) (= (x1637 16777215 x2865) x1050) (<= x1922 9999999) (<= 1 x1922)) (not x1340)) (and (=> x1579 x3275) (=> (and (not x1579) (and (= x2155 608) (= x3745 x3670) (= x3191 x642) (= x62 x658))) x3009))) (=> (and (and (= (x1637 16777215 x2865) x1240) (= (< x1240 (+ 1 x1922)) x2164)) x1340) (and (=> (and (not x2164) (and (= x3191 x1575) (= x602 x3670) (= x3666 608) (= x62 x1948))) x1000) (=> x2164 x3275))))))
(assert (= (x1077 1328352365) 0))
(assert (x1996 x3316))
(assert (= (x34 x1577 16) (x3797 x1577 4)))
(assert (x561 x903))
(assert (x511 x2764 x2955 x869 x1864))
(assert (x1721 (- x2764 x3320)))
(assert (x561 x2392))
(assert (x1996 x2567))
(assert (=> (<= x2837 10000) (= 0 (x1077 x2837))))
(assert (x561 x355))
(assert (x561 x422))
(assert (=> (<= x3813 10000) (= 0 (x1077 x3813))))
(assert (x79 x221 1000000000000000000000000))
(assert (= (=> (and (or (and (not x339) (and (= x167 x2394) (= x2238 (+ x1906 8)))) (and x339 (and (= x1906 x2238) (= x167 x620)))) (and (= x339 (= 0 x2394)) (= (x3641 x620 8) x2394))) x2726) x1009))
(assert (= x1123 (and x3860 (not x1776))))
(assert (= (x3318 (x1573 64 x2066 9)) 9))
(assert (= (x3797 x263 2) (x34 x263 4)))
(assert (x561 x2675))
(assert (= x554 (or x281 x1225)))
(assert (x561 x2048))
(assert (x2855 x1886 x1207))
(assert (= (and x2180 x287) x3673))
(assert (= (x3797 x3063 16) (x34 x3063 65536)))
(assert (x2855 x3518 (- x3320 x528)))
(assert (= (x3641 x2666 8) (x2283 (* 256 x2666))))
(assert (x1996 x1093))
(assert (= (x34 x75 16) (x3797 x75 4)))
(assert (x561 x244))
(assert (= (x3318 (x1573 64 x556 x126)) x126))
(assert (x3099 x1353))
(assert (x1721 x3571))
(assert (x561 x1453))
(assert (= (x2283 (* 4294967296 x383)) (x3641 x383 32)))
(assert (x7 2 x2746))
(assert (= (and x2957 (not x3450)) x1561))
(assert (x2855 x869 (- x1864 x1835)))
(assert (x3099 (* x3181 4)))
(assert (x511 x528 x1835 x732 x1020))
(assert (= (x1883 (x1573 64 x1922 x3494)) 64))
(assert (x511 x3320 x3518 x1595 x1924))
(assert (x1721 (- x1864 x1020)))
(assert (x2855 x3518 (- x3320 x1864)))
(assert (= (and x1658 x2634) x2109))
(assert (not (x775 (x1573 64 x1080 5))))
(assert (x1721 (- x869 x1595)))
(assert (not (x775 (x1573 64 x224 x2189))))
(assert (x561 x3391))
(assert (= (x1077 (+ 1 x1647)) (x1077 x1647)))
(assert (x561 x18))
(assert (x1721 (- x1924 x1020)))
(assert (x2855 x1835 (- x528 x869)))
(assert (= x3391 (x73 (x1573 64 x3391 14))))
(assert (x561 x1855))
(assert (= 65535 (x73 (x1573 64 65535 x3982))))
(assert (x3863 x3320 x3518 x1207 x1886))
(assert (x561 x2043))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x278 14)))
(assert (= (and x2853 x164) x1703))
(assert (x1721 x3488))
(assert (= x585 (=> (and (or (and (and (= x1558 (x3797 x1875 16)) (= (+ x3963 16) x1275)) x3040) (and (not x3040) (and (= x1275 x3963) (= x1558 x1875)))) (= (< 65535 x1875) x3040)) x1635)))
(assert (= (and x3157 x2315) x1680))
(assert (x497 x800))
(assert (x561 x3178))
(assert (= (x1883 (x1573 64 x1143 5)) 64))
(assert (x561 x151))
(assert (= (or x1231 x3733) x3430))
(assert (x561 x2860))
(assert (= (and (not x1340) x3500) x246))
(assert (x1979 x2251))
(assert (x561 x964))
(assert (= (x1077 (x1573 64 x1788 14)) (x1573 64 x1788 14)))
(assert (= 0 (x73 (x1573 64 0 14))))
(assert (x3099 x3916))
(assert (x1721 (- x1886 x1595)))
(assert (x561 x3612))
(assert (= x3696 (and x1326 x1315)))
(assert (= x3954 (or x2787 x3209)))
(assert (x1721 x3432))
(assert (x3099 1000000000000000000000000))
(assert (not (x775 (x1573 64 0 x1647))))
(assert (= x3230 (and x1827 (not x2663))))
(assert (x561 x1032))
(assert (= (or x733 x1220) x3423))
(assert (= (x3641 x989 32) (x2283 (* 4294967296 x989))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3459 14)))
(assert (x1721 x2941))
(assert (x1721 (- x732 x2764)))
(assert (= (x73 (x1573 64 x3407 14)) x3407))
(assert (= (=> (= (= 0 x973) x2244) (and (=> (and (and (or (and (and (>= 1099511627775 x1355) (= (x64 x3294) x1355) (= x3294 (x1573 64 x592 x2434)) (= x3341 (ite (< 0 x1355) 1 0))) (not x3457)) (and x3457 (= x3341 (ite x3457 1 0)))) (and (<= x3441 1099511627775) (= (x2900 x41) x3441) (= (x1573 64 x592 x2434) x41) (= (< 0 x3441) x3457))) x2244) x1778) (=> (and (= x2193 (ite x2244 1 0)) (not x2244)) x3158))) x1090))
(assert (= (x1883 (x1573 64 x1180 14)) 64))
(assert (= (or x1977 x1503) x3508))
(assert (= (=> (and (and (<= x592 1099511627775) (= (x1573 64 x1922 x3494) x2434) (= x592 (x2900 x1303)) (<= x1461 1099511627775) (= (ite x3695 1 0) x903) (= (x1573 64 x903 14) x3494) (= x2167 (> x1461 0)) (= (x1573 64 0 x2434) x1303) (= x1461 (x2900 x2069)) (= x2069 (x1573 64 x1113 x2434))) (or (and (= x2141 (ite x2167 1 0)) x2167) (and (not x2167) (and (>= 1099511627775 x3516) (= (ite (> x3516 0) 1 0) x2141) (= (x64 x2203) x3516) (= (x1573 64 x1113 x2434) x2203))))) x2475) x236))
(assert (= (x34 x1106 4294967296) (x3797 x1106 32)))
(assert (= (x3797 x964 16) (x34 x964 65536)))
(assert (x561 x2347))
(assert (= x3087 (and x265 x3262)))
(assert (= x1161 (or x3504 x1082)))
(assert (= (=> (and (or (and (and (= x3749 x558) (= x2310 x3195)) (not x3028)) (and (and (= x3749 (x3797 x558 2)) (= x2310 (+ 2 x3195))) x3028)) (= (> x558 3) x3028)) x2062) x1036))
(assert (x3863 x1020 x732 x1886 x1207))
(assert (x1721 (- x1020 x1835)))
(assert (x561 x3963))
(assert (x2855 x732 (- x1020 x1207)))
(assert (x3863 x1835 x528 x732 x1020))
(assert (x79 (* x1597 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1308))
(assert (= (=> (and (= x3706 x2865) (= (ite (= 16777215 x2831) 0 x930) x3706) (= (x1637 16777215 x930) x2831)) x3548) x155))
(assert (x561 x2881))
(assert (x561 x93))
(assert (= (or x1709 x1770) x230))
(assert (= (or x1424 x3562) x1794))
(assert (x7 100000000000000 x2218))
(assert (= (and x3716 x1624) x2713))
(assert (= (x34 x3276 65536) (x3797 x3276 16)))
(assert (= (x1883 (x1573 64 x682 x250)) 64))
(assert (x3204 x1814 1000000000000000000000000))
(assert (= (and x1819 (not x849)) x2280))
(assert (x3099 x2701))
(assert (x561 x781))
(assert (< 10000 (x1573 64 x2450 x1086)))
(assert (x561 x394))
(assert (x561 x1495))
(assert (not (x775 (x1573 64 x592 x2434))))
(assert (= (and x3027 (not x3269)) x723))
(assert (= x396 (and x2807 x1594)))
(assert (= (x3318 (x1573 64 x1682 14)) 14))
(assert (x3099 x530))
(assert (x561 x3779))
(assert (> (x1573 64 x3459 14) 10000))
(assert (x1721 x3369))
(assert (x7 256 x3432))
(assert (x561 x1801))
(assert (= (or x87 x1630) x3629))
(assert (= x1357 (or x382 x3795)))
(assert (x3099 (* x712 16)))
(assert (x2855 x1207 (- x1886 x1595)))
(assert (x124 x3916))
(assert (= x3101 (x3318 (x1573 64 x1903 x3101))))
(assert (x561 x1324))
(assert (= (and x2297 (not x1566)) x2898))
(assert (x561 x1242))
(assert (x1782 x547 18446744073709551616))
(assert (x561 x1765))
(assert (x2855 x1924 (- x1595 x1886)))
(assert (x561 x2008))
(assert (= x1613 (x3318 (x1573 64 x3342 x1613))))
(assert (x1721 x955))
(assert (= x414 (or x1798 x2693)))
(assert (x7 2 x1748))
(assert (= x1427 (x73 (x1573 64 x1427 9))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1922 x3494)))
(assert (= (and x3234 x2094) x3530))
(assert (x561 x1526))
(assert (x561 x1054))
(assert (x2855 x1835 (- x528 x1207)))
(assert (= (x3797 x2347 1) (x34 x2347 2)))
(assert (x1782 x1353 256))
(assert (= (x2283 (* 65536 x2804)) (x3641 x2804 16)))
(assert (x7 256 x224))
(assert (x1721 x2249))
(assert (x7 65536 x3228))
(assert (x7 1000000 x3226))
(assert (= (and (not x2239) x2372) x3557))
(assert (x1721 (- x3518 x732)))
(assert (= x23 (=> (= x2639 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1765)) (and (=> (and (not x2639) (and (and (= x2772 (= x213 0)) (= x536 (+ x567 1)) (= x1719 (x1573 64 x1765 x536)) (= (x26 x1719) x3488) (= (x3641 x3488 128) x213)) (or (and (and (= x677 0) (= x3571 x3488)) x2772) (and (and (= 128 x677) (= x3571 x213)) (not x2772))))) x1967) (=> (and (= 0 x3255) x2639) x1724)))))
(assert (< (x1573 64 255 x3545) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x351 (=> (and (and (= (= 0 x244) x2492) (= (x3641 x2941 64) x244)) (or (and x2492 (and (= x2941 x989) (= x324 x3178))) (and (and (= x324 (+ 64 x3178)) (= x244 x989)) (not x2492)))) x3285)))
(assert (x3863 x1864 x869 x528 x1835))
(assert (x79 x703 340282366920938463463374607431768211456))
(assert (x561 x3924))
(assert (x561 x3683))
(assert (not (x775 (x1573 64 x2471 x1712))))
(assert (x561 x3520))
(assert (= (x34 x419 340282366920938463463374607431768211456) (x3797 x419 128)))
(assert (x2462 x2255))
(assert (< 10000 (x1573 64 x3064 5)))
(assert (x3099 x2232))
(assert (= (x1077 (x1573 64 x3335 x3023)) (x1573 64 x3335 x3023)))
(assert (x561 x2553))
(assert (x561 x1020))
(assert (= (x34 x1569 256) (x3797 x1569 8)))
(assert (= x91 (and x2541 (not x2425))))
(assert (x3099 (* 340282366920938463463374607431768211456 x902)))
(assert (x561 x2771))
(assert (x775 16776960))
(assert (x561 x2572))
(assert (= (x1077 (x1573 64 x224 x2189)) (x1573 64 x224 x2189)))
(assert (x1996 x3058))
(assert (= (x1077 (x1573 64 x637 14)) (x1573 64 x637 14)))
(assert (x1721 x1766))
(assert (< 10000 (x1573 64 x1836 9)))
(assert (= (x1077 x544) (x1077 (+ 1 x544))))
(assert (x561 x1171))
(assert (= x1884 (and (not x1754) x3330)))
(assert (x561 x1164))
(assert (x3099 (* x630 18446744073709551616)))
(assert (= (x1077 (x1573 64 x1327 x1950)) (x1573 64 x1327 x1950)))
(assert (= (x3797 x1458 2) (x34 x1458 4)))
(assert (x561 x573))
(assert (x561 x1121))
(assert (x561 x2017))
(assert (= false x627))
(assert (x1721 x1453))
(assert (= 14 (x3318 (x1573 64 x903 14))))
(assert (x561 x3418))
(assert (= (x1573 64 x556 x126) (x1077 (x1573 64 x556 x126))))
(assert (= (x1077 (x1573 64 x1534 x3145)) (x1573 64 x1534 x3145)))
(assert (x3863 x528 x1835 x1864 x869))
(assert (= (x1573 64 x2666 x97) (x1077 (x1573 64 x2666 x97))))
(assert (= (or x918 x91) x29))
(assert (x561 x3633))
(assert (= (x1573 64 x1982 14) (x1077 (x1573 64 x1982 14))))
(assert (x3863 x1835 x528 x3320 x3518))
(assert (= (x1883 (x1573 64 x1788 14)) 64))
(assert (= 64 (x1883 (x1573 64 x1363 14))))
(assert (x561 x1982))
(assert (x3863 x1864 x869 x3518 x3320))
(assert (x561 x2664))
(assert (x79 (* 256 x612) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3099 x1800))
(assert (x79 x2451 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2417 x3803)))
(assert (x511 x1864 x869 x1835 x528))
(assert (x561 x225))
(assert (x561 x214))
(assert (= x95 (=> (and (or (and (not x2739) (and (= x3063 x2646) (= x589 x3778))) (and x2739 (and (= (+ x3778 16) x589) (= x2646 (x3797 x3063 16))))) (= x2739 (< 65535 x3063))) x3403)))
(assert (x7 1000000 x969))
(assert (x7 4294967296 x3817))
(assert (x561 x615))
(assert (x775 18446744073709551615999999999999999999))
(assert (= (or x1868 x1194) x3031))
(assert (= x939 (=> (and (and (= x3874 (= 0 x3970)) (= (x3641 x2676 16) x3970)) (or (and (and (= x3970 x3432) (= x2441 (+ 16 x3274))) (not x3874)) (and (and (= x2676 x3432) (= x2441 x3274)) x3874))) x238)))
(assert (< 10000 (x1573 64 x1534 x3145)))
(assert (x1721 x3746))
(assert (x561 x3840))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3550 x2961)))
(assert (not (x775 (x1573 64 x1410 x601))))
(assert (x3863 x1595 x1924 x1886 x1207))
(assert (= x2980 (and x3775 x2751)))
(assert (= (and x1842 x1259) x1674))
(assert (= (x1077 (+ 1 x694)) (x1077 x694)))
(assert (= x977 (and (not x3169) x870)))
(assert (x561 x1372))
(assert (not (x775 (x1573 64 x1477 x2421))))
(assert (x7 256 x1327))
(assert (= x1774 (=> (and (or (and (not x928) (and (= (+ x503 16) x3611) (= x1304 x1271))) (and x928 (and (= x503 x3611) (= x1304 x1945)))) (and (= (x3641 x1945 16) x1271) (= x928 (= 0 x1271)))) x3525)))
(assert (x561 x3427))
(assert (x2855 x1886 (- x1207 x869)))
(assert (x561 x3249))
(assert (= x2808 (=> (and (= (< 4294967295 x214) x1428) (or (and x1428 (and (= x3063 (x3797 x214 32)) (= x3778 (+ x3372 32)))) (and (not x1428) (and (= x3778 x3372) (= x3063 x214))))) x95)))
(assert (x3204 x93 1000000000000000000000000))
(assert (= (=> (and (= x3782 (< 18446744073709551615 x1548)) (or (and (not x3782) (and (= x1448 x834) (= x1548 x2361))) (and x3782 (and (= (x3797 x1548 64) x2361) (= x1448 (+ 64 x834)))))) x3910) x395))
(assert (x561 x20))
(assert (= (=> (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2087) x2140) (and (=> (and (and (or (and (not x2943) (and (= x834 0) (= x1548 x317))) (and (and (= x1548 (x3797 x317 128)) (= x834 128)) x2943)) (and (= x2677 (x1573 64 x2087 x2864)) (= x2943 (> x317 340282366920938463463374607431768211455)) (= (+ 1 x1752) x2864) (= (x264 x2677) x317))) (not x2140)) x395) (=> (and (= x930 16777215) x2140) x155))) x2977))
(assert (x497 x1529))
(assert (= x733 (and x987 x3430)))
(assert (x79 (* x176 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x511 x1886 x1207 x732 x1020))
(assert (= (x3318 (x1573 64 0 x2606)) x2606))
(assert (= (x73 (x1573 64 x3342 x1613)) x3342))
(assert (x2855 x732 x1020))
(assert (x1489 x3438))
(assert (= (=> (and (or (and x874 (and (= x2318 (+ 64 x3646)) (= x3058 (x3797 x1126 64)))) (and (and (= x1126 x3058) (= x3646 x2318)) (not x874))) (= (< 18446744073709551615 x1126) x874)) x177) x675))
(assert (= (and x1998 x3445) x261))
(assert (x561 x830))
(assert (= x512 (or x3971 x3789)))
(assert (= x363 (=> (and (= (< 18446744073709551615 x3890) x817) (or (and (and (= (x3797 x3890 64) x1552) (= (+ 64 x2473) x1940)) x817) (and (not x817) (and (= x1552 x3890) (= x1940 x2473))))) x559)))
(assert (= (x34 x2572 256) (x3797 x2572 8)))
(assert (x1721 (- x1924 x1864)))
(assert (x561 x3912))
(assert (x561 x3399))
(assert (x1721 x1176))
(assert (x1721 (- x2764 x1207)))
(assert (= x889 (and x1490 (not x1631))))
(assert (x561 x3253))
(assert (x1721 x3615))
(assert (x561 x3030))
(assert (= x1956 (or x3849 x1758)))
(assert (x561 x464))
(assert (x561 x714))
(assert (= x1658 (or x632 x3676)))
(assert (= x2372 (or x548 x2945)))
(assert (= (x3641 x2249 2) (x2283 (* 4 x2249))))
(assert (x561 x562))
(assert (= x2028 (=> (and (= (> x1666 3) x1663) (or (and x1663 (and (= x573 (x3797 x1666 2)) (= (+ x2422 2) x1335))) (and (and (= x1666 x573) (= x2422 x1335)) (not x1663)))) x3068)))
(assert (x561 x249))
(assert (x1721 x1020))
(assert (= (x1573 64 0 x938) (x1077 (x1573 64 0 x938))))
(assert (= (x3641 x2932 4) (x2283 (* 16 x2932))))
(assert (= x3359 (and x2730 (not x1509))))
(assert (x1721 x945))
(assert (= x3566 (=> (and (or (and (not x471) (and (= x460 (+ x260 8)) (= x2942 x3345))) (and x471 (and (= x189 x3345) (= x460 x260)))) (and (= x2942 (x3641 x189 8)) (= (= x2942 0) x471))) x1943)))
(assert (= x1410 (x73 (x1573 64 x1410 x601))))
(assert (x79 (* x1903 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x3531 x1358) x3096))
(assert (= (x3318 (x1573 64 0 x293)) x293))
(assert (= (and (not x2096) x2234) x2353))
(assert (= 64 (x1883 (x1573 64 0 x2508))))
(assert (x2855 x1924 (- x1595 x2764)))
(assert (x7 16 x2932))
(assert (= 64 (x1883 (x1573 64 65535 x3982))))
(assert (x511 x1020 x732 x1835 x528))
(assert (= (=> (and (or (and (not x3823) (and (= x370 0) (= x3839 0) (= x37 0))) (and x3823 (and (= (x3974 x2207) x1927) (= x2207 (x1573 64 0 x3322)) (= x3174 (x1413 x3093)) (= 1 x3839) (= x3093 (x1573 64 0 x3322)) (<= x3174 1099511627775) (>= 1099511627775 x1927) (= x370 x1927) (= x37 x3174)))) (= (> x3480 0) x3823)) x1339) x616))
(assert (= x1412 (or x3897 x3816)))
(assert (x561 x3156))
(assert (not (x775 (x1573 64 x636 x2735))))
(assert (x561 x863))
(assert (x1996 x3922))
(assert (x561 x1896))
(assert (= (x1077 x1092) (x1077 (+ 2 x1092))))
(assert (= (x34 x3550 256) (x3797 x3550 8)))
(assert (= (x1883 (x1573 64 x1478 x702)) 64))
(assert (= (and x3759 (not x1928)) x58))
(assert (x79 (* 16 x3345) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1809))
(assert (x561 x402))
(assert (= (=> (and (or (and (and (= x2650 (x3797 x2191 4)) (= x107 (+ x3180 4))) x3065) (and (not x3065) (and (= x3180 x107) (= x2650 x2191)))) (= (> x2191 15) x3065)) x2951) x1506))
(assert (x1721 x3825))
(assert (= (=> (and (or (and (not x2252) (and (= x402 (+ x1585 64)) (= x1222 x383))) (and (and (= x383 x3924) (= x1585 x402)) x2252)) (and (= (x3641 x3924 64) x1222) (= (= 0 x1222) x2252))) x1873) x3307))
(assert (= (x1883 (x1573 64 x2471 x1712)) 64))
(assert (x79 (* 256 x1295) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x612))
(assert (= x3597 (or x515 x2426)))
(assert (x775 785044283))
(assert (x561 x3050))
(assert (x3863 x3320 x3518 x1886 x1207))
(assert (x1721 (- x1835 x3518)))
(assert (x561 x3735))
(assert (= (=> (and (and (= x2012 (= x2539 0)) (= (x3641 x1146 64) x2539)) (or (and (and (= x3019 x156) (= x340 x1146)) x2012) (and (not x2012) (and (= x2539 x340) (= x156 (+ x3019 64)))))) x769) x2093))
(assert (= (=> (= x2634 (= x3127 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (not x2634) (and (and (= x1731 (ite (>= 255 x3127) x3718 (x2953 65280 x3127))) (= (x371 (+ x3127 65280)) x3718) (= (< 340282366920938463463374607431768211455 x435) x1166) (= (+ 1 x544) x1760) (= (x532 x2305) x435) (= x2305 (x1573 64 x1731 x1760))) (or (and x1166 (and (= 128 x1317) (= x3084 (x3797 x435 128)))) (and (and (= x1317 0) (= x3084 x435)) (not x1166))))) x3464) (=> (and x2634 (and (= x467 (= 0 x1012)) (= (x3105 x1752) x3825) (= x3314 254) (= x3277 255) (= x1012 (x3641 x3825 1)))) (and (=> (and (not x467) (and (or (and (not x1107) (and (= x643 x1012) (= 0 x2153))) (and x1107 (and (= 128 x2153) (= (x3797 x1012 128) x643)))) (= x1107 (> x1012 340282366920938463463374607431768211455)))) x2633) (=> (and x467 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2087)) x2977))))) x1406))
(assert (= (=> (and (or (and x1965 (and (= x3292 (x1573 64 0 x2735)) (<= x3748 1099511627775) (= (x3974 x3292) x3748) (= (x2842 (- x3748 x370)) x2893) (= (ite (> x2893 0) 0 1) x1188))) (and (not x1965) (= x1188 1))) (= (= 0 x2068) x1965)) x3189) x968))
(assert (= (x1573 64 0 x1644) (x1077 (x1573 64 0 x1644))))
(assert (= (and x3446 x1932) x3649))
(assert (x1721 x1146))
(assert (x561 x1005))
(assert (=> (>= 10000 x3064) (= (x1077 x3064) 0)))
(assert (x561 x2222))
(assert (x1839 x562 x3325))
(assert (x1721 (- x1864 x2764)))
(assert (> (x1573 64 x1102 14) 10000))
(assert (x79 (* x3851 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x717 x2381) x2002))
(assert (x561 x3374))
(assert (x7 340282366920938463463374607431768211456 x2625))
(assert (= x3675 (and x2983 x1646)))
(assert (x511 x1020 x732 x1886 x1207))
(assert (= (=> (and (and (= x3249 (x3641 x2811 8)) (= x2904 (= 0 x3249))) (or (and (not x2904) (and (= (+ 8 x2246) x2144) (= x16 x3249))) (and (and (= x2246 x2144) (= x16 x2811)) x2904))) x3595) x140))
(assert (x561 x1396))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1539 x269)))
(assert (= x2882 (and x2824 x1794)))
(assert (x561 x2071))
(assert (x561 x2200))
(assert (not (x775 (x1573 64 x370 x1165))))
(assert (x775 184467440737095516))
(assert (= (x3318 (x1573 64 x2837 x614)) x614))
(assert (x1489 x1380))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 0 x614)))
(assert (< 10000 (x1573 64 x2417 x1851)))
(assert (= (x73 (x1573 64 x1177 x126)) x1177))
(assert (< 10000 (x1573 64 x2000 14)))
(assert (= x1470 (and x1340 x2214)))
(assert (= (x1573 64 0 x2508) (x1077 (x1573 64 0 x2508))))
(assert (= (=> (and (= (x2842 (- x2078 1)) x1984) (= x2010 x1984) (= (ite (< 1 x573) (+ x1335 1) x1335) x2078)) x1210) x3068))
(assert (x3099 (* 256 x1327)))
(assert (x561 x3181))
(assert (x1721 (- x1924 x1835)))
(assert (not (x775 (x1573 64 x3551 14))))
(assert (x561 x3898))
(assert (= (x1573 64 x1478 x702) (x1077 (x1573 64 x1478 x702))))
(assert (= (x1573 64 x2463 x2954) (x1077 (x1573 64 x2463 x2954))))
(assert (x511 x732 x1020 x1595 x1924))
(assert (x3863 x732 x1020 x1864 x869))
(assert (x1721 (- x1886 x528)))
(assert (x561 x446))
(assert (=> (<= x1108 10000) (= 0 (x1077 x1108))))
(assert (x1721 x2955))
(assert (= x2092 (=> (and (or (and (and (= x1705 x3180) (= x2191 x2572)) (not x2692)) (and x2692 (and (= x2191 (x3797 x2572 8)) (= x3180 (+ 8 x1705))))) (= (< 255 x2572) x2692)) x1506)))
(assert (x561 x934))
(assert (x561 x2103))
(assert (x561 x3132))
(assert (x561 x3277))
(assert (= (x1573 64 0 x2735) (x1077 (x1573 64 0 x2735))))
(assert (x561 x1788))
(assert (x1996 x2289))
(assert (x3863 x869 x1864 x3518 x3320))
(assert (= (=> (and (or (and x2315 (and (= (x3797 x1093 32) x2555) (= x3470 (+ 32 x1930)))) (and (and (= x3470 x1930) (= x2555 x1093)) (not x2315))) (= (< 4294967295 x1093) x2315)) x1727) x3764))
(assert (x2855 x1886 (- x1207 x1924)))
(assert (= 64 (x1883 (x1573 64 x370 x1165))))
(assert (x561 x1213))
(assert (x1721 (- x2955 x1020)))
(assert (= x2846 (and x2287 (not x896))))
(assert (x561 x475))
(assert (< 10000 (x1573 64 x676 x510)))
(assert (x79 (* x2070 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x2215 x2918) x3755))
(assert (x511 x528 x1835 x2764 x2955))
(assert (x497 x1164))
(assert (= x1277 x3544))
(assert (= (or x3639 x2891) x505))
(assert (x3099 (* 18446744073709551616 x1817)))
(assert (= x3559 (or x748 x839 x2958 x3194)))
(assert (= (x1077 1495468574) 0))
(assert (= x3231 (=> (and (and (= x3567 (= x2017 0)) (= (x3641 x1766 128) x2017) (= (x1573 64 x1327 x1950) x3791) (= (+ (x3641 x1765 8) x2988) x1327) (= (+ 1 x536) x1950) (= x2988 (- 255 (ite (= (x3641 x25 1) 0) x970 (+ 1 x970)))) (= x1766 (x894 x3791))) (or (and (not x3567) (and (= x2017 x1817) (= 128 x352))) (and x3567 (and (= x1817 x1766) (= 0 x352))))) x2258)))
(assert (x79 (* x103 4294967296) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x502) x3454) x2945))
(assert (= x201 (and x3312 x1659)))
(assert (= (x3797 x1463 16) (x34 x1463 65536)))
(assert (= (x1883 (x1573 64 x1297 14)) 64))
(assert (x1721 (- x732 x3320)))
(assert (x561 x486))
(assert (x3099 (ite (> 256 x2268) (x2706 2 x2268) 0)))
(assert (x3863 x1020 x732 x1595 x1924))
(assert (= (x34 x1666 4) (x3797 x1666 2)))
(assert (= x495 (and x2978 (not x3904))))
(assert (x1721 (- x1835 x1864)))
(assert (x561 x418))
(assert (= (x34 x1325 16) (x3797 x1325 4)))
(assert (x561 x2753))
(assert (= (or x1024 x2081) x2460))
(assert (x1721 x726))
(assert (x497 x687))
(assert (x775 1461501637330902918203684832716283019655932542975))
(assert (x1721 (- x1207 x1924)))
(assert (x561 x1555))
(assert (x1979 x3381))
(assert (= x3036 (and x3312 (not x1659))))
(assert (= (x1573 64 x1404 x2479) (x1077 (x1573 64 x1404 x2479))))
(assert (< 10000 (x1573 64 x1427 9)))
(assert (x1996 x1242))
(assert (x561 x2760))
(assert (x561 x135))
(assert (= x428 (and x3135 x82)))
(assert (not (x775 (x1573 64 x2666 x97))))
(assert (x561 x721))
(assert (x1721 (- x1207 x3320)))
(assert (x561 x468))
(assert (x561 x3191))
(assert (= 64 (x1883 (x1573 64 x3746 x1744))))
(assert (= (x1077 (+ x2933 1)) (x1077 x2933)))
(assert (= x1644 (x3318 (x1573 64 0 x1644))))
(assert (< (x1573 64 x1731 x1760) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1299 (not x1249)) x908))
(assert (= (x34 x3192 2) (x3797 x3192 1)))
(assert (x1782 x3153 4))
(assert (= (x1077 (x1573 64 x3884 x614)) (x1573 64 x3884 x614)))
(assert (x1721 (- x3320 x1886)))
(assert (x79 (* x2625 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3318 (x1573 64 x1143 5)) 5))
(assert (x1721 (- x869 x732)))
(assert (< (x1573 64 x2087 x2864) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3099 (* 256 x3313)))
(assert (= x1363 (x73 (x1573 64 x1363 14))))
(assert (x1782 x643 18446744073709551616))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1113 x614)))
(assert (= (x1077 (+ x2936 2)) (x1077 x2936)))
(assert (x561 x2694))
(assert (x561 x3550))
(assert (= (or x90 x1608) x3640))
(assert (= x3379 (or x1561 x3808)))
(assert (> (x1573 64 x2043 x2879) 10000))
(assert (x561 x1604))
(assert (= (and x2131 x2395) x2920))
(assert (= (x1573 64 65535 x3982) (x1077 (x1573 64 65535 x3982))))
(assert (x511 x2764 x2955 x732 x1020))
(assert (x561 x2480))
(assert (x3863 x3518 x3320 x528 x1835))
(assert (x511 x1020 x732 x3320 x3518))
(assert (x561 x3552))
(assert (x1996 x169))
(assert (x79 (* x1408 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1996 x3011))
(assert (x1721 (- x732 x2955)))
(assert (x79 x1532 1000000000000000000000000))
(assert (x3863 x1207 x1886 x1924 x1595))
(assert (x1782 x33 4))
(assert (x3863 x3518 x3320 x1886 x1207))
(assert (x1721 (- x732 x3518)))
(assert (x1721 x2804))
(assert (x561 x3711))
(assert (not (x775 (x1573 64 x2325 9))))
(assert (not (x775 (x1573 64 x910 9))))
(assert (=> (<= x1682 10000) (= (x1077 x1682) 0)))
(assert (= (or x3388 x908) x2297))
(assert (x3099 (* 2 x108)))
(assert (= (x73 (x1573 64 x2661 9)) x2661))
(assert (x561 x362))
(assert (x561 x3241))
(assert (x7 4294967296 x340))
(assert (= (x3641 x2625 128) (x2283 (* 340282366920938463463374607431768211456 x2625))))
(assert (= (and (not x467) x2109) x3428))
(assert (x561 x1514))
(assert (x511 x2955 x2764 x3320 x3518))
(assert (=> (>= 10000 x1404) (= (x1077 x1404) 0)))
(assert (= x3889 (and (not x1655) x2498)))
(assert (= x2827 (or x2416 x2684)))
(assert (= x3361 (and x1340 x3610)))
(assert (= x453 (or x1245 x12)))
(assert (= (and x3078 x2083) x2113))
(assert (x511 x1207 x1886 x3320 x3518))
(assert (x1489 x3368))
(assert (= x727 (and x3043 x1670)))
(assert (= (=> (and (= (> x762 65535) x443) (or (and x443 (and (= (x3797 x762 16) x173) (= x2454 (+ 16 x356)))) (and (and (= x356 x2454) (= x762 x173)) (not x443)))) x2535) x1929))
(assert (x561 x1010))
(assert (= (=> (and (and (= (x1573 64 x904 x2652) x1197) (= (ite (< 1 x2445) (+ 1 x344) x344) x3574) (= x3775 (< 340282366920938463463374607431768211455 x202)) (= (+ x2864 1) x2652) (= (+ (x3641 x2087 8) x3574) x904) (= x202 (x532 x1197))) (or (and (and (= x2409 128) (= x3983 (x3797 x202 128))) x3775) (and (and (= x202 x3983) (= x2409 0)) (not x3775)))) x1716) x455))
(assert (x2855 x528 (- x1835 x1924)))
(assert (x511 x1835 x528 x1595 x1924))
(assert (x3099 (* x1785 2)))
(assert (x1721 x2753))
(assert (= (or x3115 x2079) x1500))
(assert (= x2918 (and x892 (not x2739))))
(assert (> (x1573 64 x2417 x3803) 10000))
(assert (x561 x1618))
(assert (= (and x3273 (not x2016)) x1053))
(assert (= (x73 (x1573 64 x2837 x614)) x2837))
(assert (x2855 x2764 (- x2955 x1020)))
(assert (= x308 (and x1646 (not x2983))))
(assert (x79 x2493 340282366920938463463374607431768211456))
(assert (x1721 (- x1020 x2764)))
(assert (= (x34 x3056 65536) (x3797 x3056 16)))
(assert (x561 x2854))
(assert (x561 x1547))
(assert (x1721 2))
(assert (= (and (not x2761) x1623) x3978))
(assert (x3099 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1782 x1519 256))
(assert (= (and x1389 x336) x1541))
(assert (= x2058 (=> (and (or (and (not x3940) (and (= x1263 x3843) (= x169 x2760))) (and (and (= (x3797 x169 64) x2760) (= x1263 (+ 64 x3843))) x3940)) (= (< 18446744073709551615 x169) x3940)) x866)))
(assert (< (x1573 64 x2268 x1125) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x1680 x3580) x2498))
(assert (= (x1883 (x1573 64 x3991 x1762)) 64))
(assert (x1782 x3063 65536))
(assert (x561 x352))
(assert (< 10000 (x1573 64 x3991 x1762)))
(assert (x79 (* 65536 x216) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x511 x1835 x528 x1886 x1207))
(assert (x1782 x3916 256))
(assert (x561 x114))
(assert (= 5 (x3318 (x1573 64 x3121 5))))
(assert (x7 6277101735386680763835789423207666416102355444464034512896 x2743))
(assert (x561 x1558))
(assert (x3099 (* 256 x1295)))
(assert (= (or x1905 x2972) x2224))
(assert (x7 18446744073709551616 x630))
(assert (= x3639 (and (not x2509) x1437)))
(assert (x7 100000000000000 x85))
(assert (x561 x1897))
(assert (x7 2 x2070))
(assert (= x2924 (or x2673 x745)))
(assert (= (=> (and (and (= (x3641 x1937 32) x2694) (= x3744 (= 0 x2694))) (or (and (and (= x575 x2694) (= x2642 (+ x2335 32))) (not x3744)) (and (and (= x575 x1937) (= x2335 x2642)) x3744))) x181) x2561))
(assert (= x2258 (=> (and (or (and (and (= x2609 x103) (= x333 (+ 64 x352))) (not x3456)) (and x3456 (and (= x333 x352) (= x1817 x103)))) (and (= (= 0 x2609) x3456) (= x2609 (x3641 x1817 64)))) x2461)))
(assert (x1721 (x2706 2 x2463)))
(assert (x1979 x2929))
(assert (= x1546 (=> (and (and (= (+ x3606 x2179 x3870) x3965) (= (+ x3233 1) x3606) (= (* 6277101735386680763835789423207666416102355444464034512896 x2743) x2179) (= x3870 (* 340282366920938463463374607431768211456 x1922)) (= x3947 x2452) (or (= x2179 0) (= 6277101735386680763835789423207666416102355444464034512896 x2179)) (<= x3233 1099511627774) (= x2452 (* x1551 100000000000000)) (= (+ 1 x3233) x1113)) (or (and (and (<= 10000 x3326) (= x3326 (+ x1889 (ite (> (x2608 x1532 1000000000000000000000000) 0) 1 0))) (<= 10000000000000000000000 x3369) (= x571 (x1573 64 x3491 5)) (= (+ 100000000 x54) x1020) (>= 340282366920938463463374607431768211455999999999999999999 x3369) (= x732 x3947) (<= x3326 340282366920938463463374607431768211455) (= x1878 (x1573 64 x2992 9)) (= (x34 x1532 1000000000000000000000000) x1889) (= x1795 1000000000000000000000000) (= x1112 0) (= (x3534 x732 x1020) x3369) (= x54 (* x1922 100000)) (= (x399 x1878) x1960) (= 0 x3796) (>= 281474976710655 x2992) (= x578 0) (= 1 x114) (= x2916 1000000) (= 0 x922) (= x1511 (* 1000000 x3369)) (not (> x3326 x1960)) (>= 340282366920938463463374607431768211455 x1960) (= x2551 1) (= x1511 x1532) (= x2992 (x1375 x571)) (<= 10000 x1960) (= x1035 0)) x1340) (and (not x1340) (and (<= 100000000000000 x3947) (= (x3076 x1667) x2515) (<= x3947 340282366920938463463374607431768211455) (not (< x2515 x3947)) (<= 100000000000000 x2515) (= x1667 (x1573 64 x910 9)) (<= x2515 340282366920938463463374607431768211455) (= (x1375 x2343) x910) (>= 281474976710655 x910) (= (x1573 64 x3491 5) x2343))))) x1746)))
(assert (x1489 x1239))
(assert (= x2312 (or x2917 x1216)))
(assert (= 14 (x3318 (x1573 64 x637 14))))
(assert (= (and x2709 x1040) x2321))
(assert (x1979 x3864))
(assert (= x2985 (and x1733 x2229)))
(assert (x561 x3839))
(assert (= x3962 (and x2683 (not x2177))))
(assert (= (x1883 (x1573 64 x1427 9)) 64))
(assert (x1721 (x2706 2 x721)))
(assert (x1839 x1101 x1643))
(assert (x3099 (ite (< x2559 256) (x2706 2 x2559) 0)))
(assert (x1996 x1895))
(assert (x2462 x629))
(assert (x561 x2990))
(assert (x2855 x2955 (- x2764 x732)))
(assert (x561 x2251))
(assert (x3099 x2047))
(assert (x561 x3837))
(assert (x7 18446744073709551616 x652))
(assert (x1782 x365 340282366920938463463374607431768211456))
(assert (= (or x566 x2783) x2382))
(assert (= (or (and (not x961) x1110) x3254) x3161))
(assert (x79 (* 256 x1830) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3942 x1590) x985))
(assert (x561 x2536))
(assert (= x2490 (or x2319 x2440)))
(assert (x3099 (* x904 256)))
(assert (x561 x192))
(assert (x561 x377))
(assert (x561 x973))
(assert (not (x775 (x1573 64 0 x2735))))
(assert (> (x1573 64 x2624 5) 10000))
(assert (x79 x1374 18446744073709551616))
(assert (= 14 (x3318 (x1573 64 x3407 14))))
(assert (= (and (not x500) x3190) x3607))
(assert (x2855 x1886 (- x1207 x3518)))
(assert (x1721 x620))
(assert (x79 (* x1748 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2371))
(assert (= x1441 (and x2622 x3836)))
(assert (= (x1077 (x1573 64 x2043 x2879)) (x1573 64 x2043 x2879)))
(assert (x561 x3301))
(assert (x561 x2777))
(assert (x1721 (- x1864 x528)))
(assert (x561 x1118))
(assert (= 64 (x1883 (x1573 64 x3242 9))))
(assert (x561 x1093))
(assert (> (x1573 64 65535 x3982) 10000))
(assert (= (or x3555 x2038) x2097))
(assert (x1996 x418))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1419 9)))
(assert (= (x1077 (x1573 64 0 x1432)) (x1573 64 0 x1432)))
(assert (x1782 x2190 4294967296))
(assert (= (and x2531 (not x2098)) x3634))
(assert (= x2319 (and x2683 x2177)))
(assert (=> (>= 10000 x2268) (= (x1077 x2268) 0)))
(assert (= x978 (=> (and (= (< 15 x1200) x805) (or (and (and (= x2830 x3055) (= x3011 x1200)) (not x805)) (and x805 (and (= (x3797 x1200 4) x3011) (= (+ x2830 4) x3055))))) x2073)))
(assert (x561 x407))
(assert (x561 x2850))
(assert (= (or (and x1579 x3451) x3060) x105))
(assert (= x1857 (or x1735 x3144)))
(assert (= (x1573 64 x676 x510) (x1077 (x1573 64 x676 x510))))
(assert (x730 x1966 x3645))
(assert (= (x1077 (x1573 64 0 x2434)) (x1573 64 0 x2434)))
(assert (x7 340282366920938463463374607431768211456 x1176))
(assert (=> (>= 10000 x2451) (= (x1077 x2451) 0)))
(assert (= (and x538 x1956) x2443))
(assert (= (x1077 (x1573 64 x2417 x126)) (x1573 64 x2417 x126)))
(assert (x79 (* x224 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3099 (* x1954 16)))
(assert (not (x775 (x1573 64 x1848 x122))))
(assert (x1721 (- x869 x3518)))
(assert (x1782 x425 256))
(assert (x2855 x1020 (- x732 x2955)))
(assert (x497 16776960))
(assert (=> (<= x3484 10000) (= 0 (x1077 x3484))))
(assert (x3863 x1207 x1886 x1020 x732))
(assert (x1721 (- x1924 x1207)))
(assert (x561 x2190))
(assert (x1721 (- x3320 x1835)))
(assert (x561 x3722))
(assert (= x1447 (and x2460 x1276)))
(assert (= (x1077 (x1573 64 x367 x1616)) (x1573 64 x367 x1616)))
(assert (x775 3875917889))
(assert (= x1608 (and (not x1346) x986)))
(assert (= x3875 (=> (and (and (= (x3641 x1936 2) x2477) (= x1509 (= x2477 0))) (or (and (and (= (+ x1129 2) x219) (= x2477 x2512)) (not x1509)) (and (and (= x219 x1129) (= x2512 x1936)) x1509))) x1821)))
(assert (= (x73 (x1573 64 x1404 x2479)) x1404))
(assert (x7 100000000000000 x726))
(assert (= x680 (=> (and (= (= x229 0) x3446) (or (and (and (= (x1473 x2197) x872) (= x2197 (x1573 64 0 x2606)) (= (ite (= x872 0) 1 0) x2825) (>= 1099511627775 x872)) x3446) (and (= x2825 1) (not x3446)))) x50)))
(assert (= 64 (x1883 (x1573 64 x904 x2652))))
(assert (x79 x2865 256))
(assert (= x843 (and x327 x429)))
(assert (x1721 (- x732 x1595)))
(assert (x1782 x3316 16))
(assert (x561 x473))
(assert (x1979 x1239))
(assert (x1721 (- x3320 x2955)))
(assert (x511 x1886 x1207 x3320 x3518))
(assert (x561 x2831))
(assert (= (x3797 x2839 8) (x34 x2839 256)))
(assert (x561 x3646))
(assert (x3099 x3368))
(assert (x1979 x530))
(assert (x561 x2515))
(assert (x561 x629))
(assert (x7 4 x350))
(assert (= x2287 (or x1711 x1311)))
(assert (x561 x2922))
(assert (x511 x1207 x1886 x1835 x528))
(assert (= x2420 (or x711 x2139)))
(assert (= (x1077 10000000000000000000000) 0))
(assert (x561 x681))
(assert (x561 x785))
(assert (x561 x3870))
(assert (= x12 (and (not x2614) x210)))
(assert (= (and (not x1058) x3668) x3376))
(assert (= (x2283 (ite (> 256 x3895) (x2706 2 x3895) 0)) (x3641 1 x3895)))
(assert (x1721 x1327))
(assert (x3099 (ite (< x2532 256) (x2706 2 x2532) 0)))
(assert (x561 x1660))
(assert (=> (>= 10000 x3121) (= 0 (x1077 x3121))))
(assert (= (x2283 (* 256 x224)) (x3641 x224 8)))
(assert (= (or x2474 x2862) x3985))
(assert (x1721 (- x1924 x3320)))
(assert (x561 x1157))
(assert (x79 x1149 18446744073709551616))
(assert (x561 x333))
(assert (= (x34 x2373 65536) (x3797 x2373 16)))
(assert (x79 x3368 18446744073709551616))
(assert (< (x1573 64 x312 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3641 x350 2) (x2283 (* x350 4))))
(assert (x1721 (- x528 x3320)))
(assert (x1996 x3405))
(assert (= (=> (and (or (and (not x130) (and (= x266 x3924) (= 128 x1585))) (and x130 (and (= 0 x1585) (= x2625 x3924)))) (and (= x266 (x3641 x2625 128)) (= (- 255 (ite (= (x3641 x3549 1) 0) x493 (+ 1 x493))) x3331) (= (= 0 x266) x130) (= (+ (x3641 x422 8) x3331) x3335) (= x2625 (x3089 x1849)) (= (x1573 64 x3335 x3023) x1849) (= x3023 (+ x3913 1)))) x3307) x2263))
(assert (x511 x1864 x869 x1886 x1207))
(assert (x3863 x1595 x1924 x2764 x2955))
(assert (x561 x2155))
(assert (< (x1573 64 x2666 x97) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1996 x2347))
(assert (x3204 x3721 1000000))
(assert (< 10000 (x1573 64 x1477 x2421)))
(assert (= 0 (x1077 100000000000)))
(assert (x561 x350))
(assert (x561 x3539))
(assert (x561 x779))
(assert (x7 6277101735386680763835789423207666416102355444464034512896 x2817))
(assert (= (and x2729 (not x1625)) x1321))
(assert (= (x2283 (* x1731 256)) (x3641 x1731 8)))
(assert (x3863 x1207 x1886 x732 x1020))
(assert (x7 16 x712))
(assert (x561 x1222))
(assert (x561 x1400))
(assert (x561 x712))
(assert (= x1677 (and x191 x933)))
(assert (x561 x1236))
(assert (x775 340282366920938463463374607431768211455))
(assert (x1721 (- x3518 x1595)))
(assert (x3863 x2764 x2955 x1886 x1207))
(assert (= (x73 (x1573 64 x370 x1165)) x370))
(assert (= (x3318 (x1573 64 x2471 x1712)) x1712))
(assert (x1489 x2232))
(assert (= (and (not x3874) x3336) x2166))
(assert (x1721 x1864))
(assert (= (and x1500 (not x949)) x3243))
(assert (x561 x226))
(assert (x1979 x151))
(assert (= (and x2721 x2756) x1530))
(assert (x3099 (* x2161 4)))
(assert (= x2003 (and (=> (and (and (= x3943 (x1637 16777215 x3853)) (= (> (+ x1922 1) x3943) x307)) x1340) (and (=> (and (and (= x1948 x3268) (= x1575 x2649) (= x3287 x602) (= x3666 992)) (not x307)) x1000) (=> x307 x627))) (=> (and (not x1340) (and (>= x1922 1) (= (x1637 16777215 x3853) x2805) (= x1322 (< (- x1922 1) x2805)) (>= 9999999 x1922))) (and (=> (and (not x1322) (and (= x3287 x3745) (= x2649 x642) (= x3268 x658) (= 992 x2155))) x3009) (=> x1322 x627))))))
(assert (x561 x2642))
(assert (x561 x469))
(assert (= (and x3114 x1605) x1980))
(assert (x561 x3325))
(assert (= x3867 (and x3077 (not x2351))))
(assert (x1996 x964))
(assert (= (and (not x3698) x1223) x3582))
(assert (= 5 (x3318 (x1573 64 x3491 5))))
(assert (= x1352 (and x737 x3074)))
(assert (x545 x2922))
(assert (= x147 (and x2140 x2163)))
(assert (x1996 x1840))
(assert (x7 16 x2753))
(assert (x561 x3372))
(assert (= x3813 (x73 (x1573 64 x3813 9))))
(assert (x3099 (* 256 x224)))
(assert (= (and x472 (not x3140)) x1602))
(assert (= (x1077 9999999) 0))
(assert (= (x1077 (+ x2410 1)) (x1077 x2410)))
(assert (= (or x998 x1286) x3500))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3746 x1744)))
(assert (= (x2283 (* 4 x2906)) (x3641 x2906 2)))
(assert (= (x34 x365 340282366920938463463374607431768211456) (x3797 x365 128)))
(assert (= x1072 (and x1663 x1556)))
(assert (x1996 x3056))
(assert (x561 x1201))
(assert (= x1456 (or x1398 x3643)))
(assert (x561 x1824))
(assert (x1721 (- x869 x3320)))
(assert (= 64 (x1883 (x1573 64 x1534 x3145))))
(assert (= x850 (=> (and (or (and (and (= x3383 x464) (= x350 x789)) x3771) (and (not x3771) (and (= x350 x1618) (= x3383 (+ 4 x464))))) (and (= x3771 (= x1618 0)) (= x1618 (x3641 x789 4)))) x2050)))
(assert (= (x3797 x3153 2) (x34 x3153 4)))
(assert (= x3464 (=> (and (= x3479 (> x3084 18446744073709551615)) (or (and (not x3479) (and (= x1796 x1317) (= x3644 x3084))) (and (and (= x3644 (x3797 x3084 64)) (= x1796 (+ x1317 64))) x3479))) x2357)))
(assert (= (x1077 (+ x2302 1)) (x1077 x2302)))
(assert (x511 x1020 x732 x869 x1864))
(assert (= (and x569 x2872) x745))
(assert (x561 x2397))
(assert (x561 x1496))
(assert (x1721 (- x869 x1835)))
(assert (= (=> (and (or (and (and (= (+ 32 x135) x1599) (= x3701 (x3797 x3024 32))) x3915) (and (not x3915) (and (= x1599 x135) (= x3701 x3024)))) (= x3915 (> x3024 4294967295))) x1313) x1022))
(assert (= x2060 (and (not x3529) x3640)))
(assert (= x1611 (and x128 x3425)))
(assert (= (and (not x2876) x2568) x1474))
(assert (x7 4 x3790))
(assert (= x3992 (and x2159 x59)))
(assert (x561 x1810))
(assert (x561 x1595))
(assert (= (and x174 x2569) x1951))
(assert (= (x73 (x1573 64 x1788 14)) x1788))
(assert (= (x1077 (x1573 64 255 x544)) (x1573 64 255 x544)))
(assert (x79 (* 18446744073709551616 x2941) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1458))
(assert (x561 x2086))
(assert (x497 x2013))
(assert (x1782 x3058 4294967296))
(assert (x3099 x3127))
(assert (= 64 (x1883 (x1573 64 x3391 14))))
(assert (x7 65536 x575))
(assert (= (and x3258 x11) x1792))
(assert (< 10000 (x1573 64 x2471 x1712)))
(assert (x561 x1984))
(assert (x561 x107))
(assert (x561 x1903))
(assert (= x126 (x3318 (x1573 64 x1177 x126))))
(assert (= (x73 (x1573 64 x312 9)) x312))
(assert (x561 x2330))
(assert (= x606 (=> (and (and (and (and (and (= false x1134) (= 1000000 x2964)) (and (= x2542 (>= x599 x2949)) (= (- x2182 (x34 (x34 x241 1000000000000000000) 1000000)) x2949))) (and (= 100000000000000 x2538) (= x2887 false) (<= x2086 340282366920938463463374607431768211455) (= (* 1000000 x2240) x241) (>= x798 1) (= false x2022) (= (x3534 x2764 x2955) x2240) (= false x3098) (= (x3783 x3200) x2086) (= x2352 x2651) (= x85 x2659) (= x389 false) (= 785044283 x1901) (<= x2661 281474976710655) (= (x1492 x1196) x798) (= x2661 (x1375 x2501)) (= (x1573 64 x2651 5) x2501) (= 1000000000000000000 x2188) (= x2651 x1048) (= (* 100000000000000 x85) x2764) (= false x1033) (= x2274 false) (= x699 x2955) (= x3200 (x1573 64 x2661 9)) (= 1000000 x506) (>= 127 x2364) (= x1867 x2086) (= false x2591) (>= 127 x2364))) (and (= x2621 (x1573 64 x1555 9)) (= (x2529 x2621) x3142) (>= 127 x2108) (<= x1555 281474976710655) (= x1683 (x1573 64 x1080 5)) (<= 1 x1801) (= (x1375 x1683) x1555) (= x1048 x521) (>= 127 x2108) (= x3404 false) (= false x492) (= x1438 36) (>= 340282366920938463463374607431768211455 x3142) (= x3478 2937758641) (= false x3705) (= false x735) (= x1080 x1804) (= x599 x3142) (= x192 x1080) (= x1801 (x1492 x1196)) (= x1669 false) (= false x1866))) (and (= x1804 x521) (= x1571 36) (= x3266 false) (= x3686 false) (= x815 false) (= x823 false))) (and (=> (and (= x3708 100000000000000) (= x171 (>= x3617 x1867)) (= x3614 (* 100000000000000 x2218)) (= x3617 (+ x1435 x3614)) (= x2659 x2218)) x171) x2542))))
(assert (x561 x1113))
(assert (x3863 x1020 x732 x1924 x1595))
(assert (not (x775 (x1573 64 0 14))))
(assert (x3863 x528 x1835 x1207 x1886))
(assert (= x1554 (=> (and (= (= x2392 0) x1928) (or (and x1928 (and (= x2437 (x1573 64 0 x293)) (= x2658 (x2478 x2437)) (= (ite (= 0 x2658) 1 0) x1997) (<= x2658 1099511627775))) (and (not x1928) (= x1997 1)))) x665)))
(assert (x2855 x1207 (- x1886 x1924)))
(assert (x7 4 x2249))
(assert (= (or x3036 x201) x3685))
(assert (=> (<= x903 10000) (= 0 (x1077 x903))))
(assert (= x3897 (and x2484 x2472)))
(assert (x561 x33))
(assert (= (and x3668 x1058) x3168))
(assert (= (or x879 x1423) x927))
(assert (= (and x812 (not x3604)) x265))
(assert (not (x775 (x1573 64 0 x1644))))
(assert (x3863 x3320 x3518 x1595 x1924))
(assert (x561 x3796))
(assert (x561 x689))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2624 5)))
(assert (< 10000 (x1573 64 x370 x1165)))
(assert (= (x1573 64 x2087 x2864) (x1077 (x1573 64 x2087 x2864))))
(assert (x1979 x1693))
(assert (x561 x1478))
(assert (not (x775 (x1573 64 x3064 5))))
(assert (not (x775 (x1573 64 x2463 x2954))))
(assert (= 64 (x1883 (x1573 64 x1080 5))))
(assert (x730 x2264 x3305))
(assert (x561 x2076))
(assert (= (x3797 x3236 2) (x34 x3236 4)))
(assert (x79 x1239 18446744073709551616))
(assert (= x2033 (or x3664 x2524)))
(assert (x561 x2422))
(assert (= x3158 (=> (and (= (= x2193 0) x429) (or (and x429 (= x3218 0)) (and (and (= x1995 (x1573 64 x2200 x2434)) (= (x1573 64 x592 x2434) x1907) (= x2200 (x64 x1876)) (= (x1573 64 x1113 x2434) x881) (= (x1573 64 x1113 x2434) x3767) (= x2616 (x1573 64 x1113 x2434)) (<= x2200 1099511627775) (= x946 (+ 1 x881)) (= x1876 (x1573 64 x592 x2434)) (= 1 x3218)) (not x429)))) x1584)))
(assert (= x1225 (and x387 x846)))
(assert (= (x3318 (x1573 64 x1731 x1760)) x1760))
(assert (x561 x3302))
(assert (= (x3318 (x1573 64 x2268 x1125)) x1125))
(assert (= 65535 (x73 (x1573 64 65535 x2857))))
(assert (= (x3641 x2865 128) (x2283 (* 340282366920938463463374607431768211456 x2865))))
(assert (= x3246 (and (not x1104) x1357)))
(assert (< (x1573 64 x2471 x1712) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1721 x1402))
(assert (= 0 (x1077 115792089237316195423570985008687907853269984665640564039457584007913129639840)))
(assert (x561 x3055))
(assert (x775 1099511627775))
(assert (not (x775 (x1573 64 0 x2508))))
(assert (= (x3318 (x1573 64 x3916 x32)) x32))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 255 x3760)))
(assert (< 10000 (x1573 64 x2099 14)))
(assert (x1721 (- x1207 x1835)))
(assert (= (=> (and (= x287 (< 18446744073709551615 x3405)) (or (and (and (= x3405 x2190) (= x3406 x1274)) (not x287)) (and (and (= (+ 64 x1274) x3406) (= x2190 (x3797 x3405 64))) x287))) x3955) x3858))
(assert (x561 x3989))
(assert (x561 x101))
(assert (= (x1573 64 x1848 x122) (x1077 (x1573 64 x1848 x122))))
(assert (x79 (ite (> 256 x2268) (x2706 2 x2268) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3295 (and x3786 x3040)))
(assert (x3099 (* x3968 340282366920938463463374607431768211456)))
(assert (x1979 x1529))
(assert (x511 x732 x1020 x1835 x528))
(assert (= x1113 (x73 (x1573 64 x1113 x614))))
(assert (x561 x576))
(assert (x561 x491))
(assert (= x392 x777))
(assert (= x2751 (or x1772 x3530)))
(assert (x1996 x3084))
(assert (= (=> (and (or (and (and (= x2077 x3612) (= x2513 x964)) (not x2622)) (and x2622 (and (= (+ 32 x2077) x3612) (= x964 (x3797 x2513 32))))) (= (< 4294967295 x2513) x2622)) x5) x543))
(assert (x79 x1800 65536))
(assert (= x1286 (and x2585 (not x2217))))
(assert (x1721 x167))
(assert (x7 1000000 x724))
(assert (x775 1328352365))
(assert (= (x3318 (x1573 64 255 x3545)) x3545))
(assert (= (and x3829 x2051) x2783))
(assert (x2855 x1595 (- x1924 x1886)))
(assert (x1721 x1254))
(assert (= (and x2351 x3077) x2527))
(assert (x511 x2764 x2955 x3320 x3518))
(assert (x1721 (- x1886 x732)))
(assert (=> (<= x2099 10000) (= (x1077 x2099) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 0 x2606)))
(assert (= x89 (and x3097 (not x915))))
(assert (x561 x125))
(assert (= (x3641 x3825 1) (x2283 (* 2 x3825))))
(assert (x3863 x2955 x2764 x1886 x1207))
(assert (x561 x2435))
(assert (= (or x935 x154) x310))
(assert (> (x1573 64 x422 x3913) 10000))
(assert (x561 x3314))
(assert (x561 x325))
(assert (x3863 x2955 x2764 x1595 x1924))
(assert (x511 x2955 x2764 x1595 x1924))
(assert (x561 x945))
(assert (x561 x1064))
(assert (= 64 (x1883 (x1573 64 x1327 x1950))))
(assert (x79 (* x2746 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1906))
(assert (x2855 x869 x1864))
(assert (= (x3797 x643 64) (x34 x643 18446744073709551616)))
(assert (x561 x198))
(assert (x1996 x2575))
(assert (not (x775 (x1573 64 x125 14))))
(assert (x561 x3380))
(assert (x561 x3406))
(assert (x561 x312))
(assert (not (x775 (x1573 64 x2043 x2879))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x556 x126)))
(assert (x561 x706))
(assert (= (and x3979 x2490) x555))
(assert (x561 x1676))
(assert (x561 x3100))
(assert (x561 x682))
(assert (< (x1573 64 x584 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1423 (and (not x2973) x495)))
(assert (x561 x3184))
(assert (x79 x2929 16777216))
(assert (x1721 (x2706 2 x2532)))
(assert (= 64 (x1883 (x1573 64 x612 x3873))))
(assert (= (and (not x3028) x929) x2038))
(assert (= (x3797 x1799 64) (x34 x1799 18446744073709551616)))
(assert (= (x73 (x1573 64 x278 14)) x278))
(assert (= x1921 (=> (and (and (= x1426 (x3641 x102 16)) (= (= 0 x1426) x2083)) (or (and (and (= x102 x1295) (= x409 x421)) x2083) (and (not x2083) (and (= x1295 x1426) (= x409 (+ x421 16)))))) x315)))
(assert (= x3416 (x73 (x1573 64 x3416 x898))))
(assert (= (x1077 (+ x2123 1)) (x1077 x2123)))
(assert (x2855 x528 (- x1835 x732)))
(assert (x3863 x3320 x3518 x869 x1864))
(assert (= (and x3567 x1283) x2684))
(assert (= (x34 x1516 340282366920938463463374607431768211456) (x3797 x1516 128)))
(assert (x561 x1314))
(assert (x79 (* 65536 x1254) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 9 (x3318 (x1573 64 x2325 9))))
(assert (= (x1077 (x1573 64 x3550 x2961)) (x1573 64 x3550 x2961)))
(assert (x561 x2161))
(assert (= (and x2904 x3952) x837))
(assert (x561 x1196))
(assert (x561 x3051))
(assert (x497 x1241))
(assert (= (or x977 x2242) x1662))
(assert (x1782 x360 340282366920938463463374607431768211456))
(assert (=> (<= x2325 10000) (= (x1077 x2325) 0)))
(assert (= x1353 (x73 (x1573 64 x1353 x3950))))
(assert (x3863 x1886 x1207 x3320 x3518))
(assert (x561 x2401))
(assert (x3099 x771))
(assert (x3863 x3320 x3518 x528 x1835))
(assert (= (and x913 (not x1252)) x1755))
(assert (x3863 x2955 x2764 x869 x1864))
(assert (x3099 (* 340282366920938463463374607431768211456 x945)))
(assert (x1721 x383))
(assert (= (and x251 x808) x1758))
(assert (= (or x1006 x3179) x2438))
(assert (x561 x3737))
(assert (= (and x2739 x892) x2215))
(assert (x1721 x3549))
(assert (= (and x3190 x500) x2597))
(assert (x79 (* 2 x2678) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x3304 x2251))
(assert (not (x775 (x1573 64 x2837 x614))))
(assert (x2855 x1835 (- x528 x3320)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x422 x3913)))
(assert (x79 x3127 256))
(assert (x1782 x1200 16))
(assert (x1721 (- x1020 x528)))
(assert (= (=> (= (ite (= 0 x1188) 1 0) x2336) x9) x3189))
(assert (not (x775 (x1573 64 x1064 x2735))))
(assert (= (or x2127 x927) x1088))
(assert (x561 x1374))
(assert (= (and x3738 x3096) x3284))
(assert (x3099 (* 256 x1765)))
(assert (= (x1573 64 x3391 14) (x1077 (x1573 64 x3391 14))))
(assert (= (and x1085 x3823) x2752))
(assert (x3863 x1207 x1886 x2764 x2955))
(assert (x3099 (* x189 256)))
(assert (= (x34 x48 16) (x3797 x48 4)))
(assert (x1721 x1922))
(assert (= 0 (x1077 281474976710655)))
(assert (= true x3862))
(assert (= (and x961 x1110) x3254))
(assert (x7 4 x2906))
(assert (x561 x1169))
(assert (x561 x3211))
(assert (x7 256 x676))
(assert (= x1373 (and x3579 (not x3365))))
(assert (x561 x3313))
(assert (x1721 x818))
(assert (x1721 x102))
(assert (x7 1 (x2706 2 x2463)))
(assert (x1489 x3779))
(assert (x561 x3746))
(assert (x2855 x2764 (- x2955 x1864)))
(assert (x3863 x1835 x528 x2764 x2955))
(assert (=> (<= x2992 10000) (= (x1077 x2992) 0)))
(assert (x79 (* 18446744073709551616 x630) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x210 (or x1290 x1425)))
(assert (= (x1573 64 0 x1647) (x1077 (x1573 64 0 x1647))))
(assert (x561 x1886))
(assert (x561 x383))
(assert (= (and x1166 x2556) x2090))
(assert (> (x1573 64 x1327 x1950) 10000))
(assert (= x3064 (x73 (x1573 64 x3064 5))))
(assert (x1782 x714 2))
(assert (x1721 (- x528 x1595)))
(assert (= x3632 x749))
(assert (= (=> (and (and (= x2614 (= x2248 0)) (= (x3641 x3790 2) x2248)) (or (and x2614 (and (= x3790 x2746) (= x1514 x208))) (and (not x2614) (and (= x1514 (+ x208 2)) (= x2746 x2248))))) x1493) x3967))
(assert (x561 x593))
(assert (x1782 x785 256))
(assert (x561 x518))
(assert (= 0 (x1077 1000099900000)))
(assert (x561 x639))
(assert (x7 256 x904))
(assert (x561 x2699))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1177 x126)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x592 x2434)))
(assert (= (x34 x2054 65536) (x3797 x2054 16)))
(assert (= (and x341 x3926) x1199))
(assert (< 10000 (x1573 64 x904 x2652)))
(assert (x3863 x1924 x1595 x3518 x3320))
(assert (= (=> (and (and (= x3387 (= x61 0)) (= (x3641 x167 4) x61)) (or (and (and (= x167 x3851) (= x3170 x2238)) x3387) (and (and (= x61 x3851) (= (+ 4 x2238) x3170)) (not x3387)))) x1001) x2726))
(assert (x561 x3223))
(assert (x2855 x1207 (- x1886 x732)))
(assert (= (and (not x1488) x591) x2355))
(assert (= (x2283 (* x860 256)) (x3641 x860 8)))
(assert (x79 (* x3924 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x77 x2740) x295))
(assert (x2855 x2764 (- x2955 x3518)))
(assert (x561 x409))
(assert (x7 340282366920938463463374607431768211456 x2052))
(assert (= x2416 (and x1283 (not x3567))))
(assert (x1721 (x2706 2 x2604)))
(assert (x1721 x3653))
(assert (not (x775 (x1573 64 x2268 x1125))))
(assert (= x2130 (and (not x1351) x3131)))
(assert (= x3831 (and x2821 x1309)))
(assert (x7 1000000 x2240))
(assert (x2855 x1864 (- x869 x1924)))
(assert (= x3078 (or x222 x3104)))
(assert (x561 x3970))
(assert (x7 256 x189))
(assert (x561 x3263))
(assert (= (x1077 (x1573 64 x2450 x1086)) (x1573 64 x2450 x1086)))
(assert (= (x1573 64 0 x2410) (x1077 (x1573 64 0 x2410))))
(assert (not (x775 (x1573 64 x2604 x2389))))
(assert (= (and (not x146) x331) x499))
(assert (x561 x2812))
(assert (x1996 x1003))
(assert (x561 x2992))
(assert (x79 (* 256 x2471) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2855 x2764 (- x2955 x732)))
(assert (= (x1077 (x1573 64 x3416 x898)) (x1573 64 x3416 x898)))
(assert (= x1850 (x3318 (x1573 64 x2628 x1850))))
(assert (x561 x3019))
(assert (x79 (* 2 x431) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1707 (not x2432)) x1178))
(assert (= x3562 (and (not x3214) x3016)))
(assert (= (x3797 x2191 4) (x34 x2191 16)))
(assert (x3099 (* 18446744073709551616 x2941)))
(assert (x561 x796))
(assert (= (and (not x3324) x1837) x1395))
(assert (x79 x3779 18446744073709551616))
(assert (= (x1077 (x1573 64 x612 x3873)) (x1573 64 x612 x3873)))
(assert (= x2961 (x3318 (x1573 64 x3550 x2961))))
(assert (x1979 255))
(assert (= (x3797 x1224 1) (x34 x1224 2)))
(assert (x561 x574))
(assert (> (x1573 64 x1064 x2735) 10000))
(assert (= (and x947 x1178) x626))
(assert (= (or x3584 x496) x737))
(assert (x3099 (* x3735 2)))
(assert (x1721 (- x1595 x1835)))
(assert (x79 (* 65536 x3859) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x79 (ite (< x1858 256) (x2706 2 x1858) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x460))
(assert (= (x3641 x2676 16) (x2283 (* x2676 65536))))
(assert (= (x3641 x1937 32) (x2283 (* x1937 4294967296))))
(assert (= (x1883 (x1573 64 1 14)) 64))
(assert (x2855 x1835 (- x528 x3518)))
(assert (= 64 (x1883 (x1573 64 x1848 x122))))
(assert (x561 x2451))
(assert (= 14 (x3318 (x1573 64 1 14))))
(assert (x1996 x435))
(assert (x511 x1864 x869 x3320 x3518))
(assert (x511 x528 x1835 x1886 x1207))
(assert (x1979 x1380))
(assert (= 64 (x1883 (x1573 64 0 x1432))))
(assert (= (=> (and (= x28 (ite (> x3578 1) (+ x3878 1) x3878)) (= x2922 x248) (= x248 (x2842 (- x28 1)))) x3474) x747))
(assert (and (= (x2706 2 75) 37778931862957161709568) (= (x2706 2 87) 154742504910672534362390528) (= (x2706 2 94) 19807040628566084398385987584) (= (x2706 2 54) 18014398509481984) (= (x2706 2 65) 36893488147419103232) (= 5575186299632655785383929568162090376495104 (x2706 2 142)) (= 102844034832575377634685573909834406561420991602098741459288064 (x2706 2 206)) (= (x2706 2 190) 1569275433846670190958947355801916604025588861116008628224) (= (x2706 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= (x2706 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (x2706 2 39) 549755813888) (= 33554432 (x2706 2 25)) (= 1606938044258990275541962092341162602522202993782792835301376 (x2706 2 200)) (= (x2706 2 164) 23384026197294446691258957323460528314494920687616) (= (x2706 2 2) 4) (= 16384 (x2706 2 14)) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x2706 2 248)) (= (x2706 2 85) 38685626227668133590597632) (= (x2706 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= 26328072917139296674479506920917608079723773850137277813577744384 (x2706 2 214)) (= 356811923176489970264571492362373784095686656 (x2706 2 148)) (= 1208925819614629174706176 (x2706 2 80)) (= 162259276829213363391578010288128 (x2706 2 107)) (= (x2706 2 113) 10384593717069655257060992658440192) (= (x2706 2 121) 2658455991569831745807614120560689152) (= (x2706 2 38) 274877906944) (= 524288 (x2706 2 19)) (= (x2706 2 116) 83076749736557242056487941267521536) (= (x2706 2 66) 73786976294838206464) (= (x2706 2 98) 316912650057057350374175801344) (= (x2706 2 194) 25108406941546723055343157692830665664409421777856138051584) (= 10889035741470030830827987437816582766592 (x2706 2 133)) (= 1809251394333065553493296640760748560207343510400633813116524750123642650624 (x2706 2 250)) (= (x2706 2 175) 47890485652059026823698344598447161988085597568237568) (= (x2706 2 123) 10633823966279326983230456482242756608) (= (x2706 2 134) 21778071482940061661655974875633165533184) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x2706 2 243)) (= (x2706 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= (x2706 2 151) 2854495385411919762116571938898990272765493248) (= (x2706 2 150) 1427247692705959881058285969449495136382746624) (= (x2706 2 70) 1180591620717411303424) (= 42535295865117307932921825928971026432 (x2706 2 125)) (= (x2706 2 79) 604462909807314587353088) (= (x2706 2 155) 45671926166590716193865151022383844364247891968) (= 4503599627370496 (x2706 2 52)) (= 904625697166532776746648320380374280103671755200316906558262375061821325312 (x2706 2 249)) (= 6129982163463555433433388108601236734474956488734408704 (x2706 2 182)) (= 14474011154664524427946373126085988481658748083205070504932198000989141204992 (x2706 2 253)) (= (x2706 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= 105312291668557186697918027683670432318895095400549111254310977536 (x2706 2 216)) (= (x2706 2 88) 309485009821345068724781056) (= 2787593149816327892691964784081045188247552 (x2706 2 141)) (= (x2706 2 147) 178405961588244985132285746181186892047843328) (= 4835703278458516698824704 (x2706 2 82)) (= 68719476736 (x2706 2 36)) (= 43556142965880123323311949751266331066368 (x2706 2 135)) (= 128 (x2706 2 7)) (= (x2706 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= 4398046511104 (x2706 2 42)) (= (x2706 2 177) 191561942608236107294793378393788647952342390272950272) (= 2993155353253689176481146537402947624255349848014848 (x2706 2 171)) (= (x2706 2 64) 18446744073709551616) (= (x2706 2 12) 4096) (= (x2706 2 146) 89202980794122492566142873090593446023921664) (= 11150372599265311570767859136324180752990208 (x2706 2 143)) (= 2097152 (x2706 2 21)) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x2706 2 255)) (= 51422017416287688817342786954917203280710495801049370729644032 (x2706 2 205)) (= (x2706 2 138) 348449143727040986586495598010130648530944) (= (x2706 2 29) 536870912) (= (x2706 2 53) 9007199254740992) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x2706 2 231)) (= 2251799813685248 (x2706 2 51)) (= 79228162514264337593543950336 (x2706 2 96)) (= (x2706 2 131) 2722258935367507707706996859454145691648) (= 562949953421312 (x2706 2 49)) (= (x2706 2 6) 64) (= 2361183241434822606848 (x2706 2 71)) (= 680564733841876926926749214863536422912 (x2706 2 129)) (= (x2706 2 223) 13479973333575319897333507543509815336818572211270286240551805124608) (= (x2706 2 106) 81129638414606681695789005144064) (= 4194304 (x2706 2 22)) (= (x2706 2 62) 4611686018427387904) (= (x2706 2 23) 8388608) (= (x2706 2 77) 151115727451828646838272) (= 65536 (x2706 2 16)) (= 9444732965739290427392 (x2706 2 73)) (= (x2706 2 72) 4722366482869645213696) (= (x2706 2 170) 1496577676626844588240573268701473812127674924007424) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x2706 2 225)) (= 41538374868278621028243970633760768 (x2706 2 115)) (= (x2706 2 90) 1237940039285380274899124224) (= 10141204801825835211973625643008 (x2706 2 103)) (= (x2706 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= (x2706 2 117) 166153499473114484112975882535043072) (= 22835963083295358096932575511191922182123945984 (x2706 2 154)) (= (x2706 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= 100433627766186892221372630771322662657637687111424552206336 (x2706 2 196)) (= (x2706 2 59) 576460752303423488) (= 3064991081731777716716694054300618367237478244367204352 (x2706 2 181)) (= (x2706 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= 91343852333181432387730302044767688728495783936 (x2706 2 156)) (= 12259964326927110866866776217202473468949912977468817408 (x2706 2 183)) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2706 2 240)) (= 1298074214633706907132624082305024 (x2706 2 110)) (= (x2706 2 50) 1125899906842624) (= (x2706 2 186) 98079714615416886934934209737619787751599303819750539264) (= 1 (x2706 2 0)) (= 200867255532373784442745261542645325315275374222849104412672 (x2706 2 197)) (= 182687704666362864775460604089535377456991567872 (x2706 2 157)) (= (x2706 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= 633825300114114700748351602688 (x2706 2 99)) (= 1361129467683753853853498429727072845824 (x2706 2 130)) (= (x2706 2 247) 226156424291633194186662080095093570025917938800079226639565593765455331328) (= 11972621413014756705924586149611790497021399392059392 (x2706 2 173)) (= (x2706 2 176) 95780971304118053647396689196894323976171195136475136) (= 17592186044416 (x2706 2 44)) (= 332306998946228968225951765070086144 (x2706 2 118)) (= 730750818665451459101842416358141509827966271488 (x2706 2 159)) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x2706 2 233)) (= (x2706 2 172) 5986310706507378352962293074805895248510699696029696) (= (x2706 2 120) 1329227995784915872903807060280344576) (= (x2706 2 237) 220855883097298041197912187592864814478435487109452369765200775161577472) (= (x2706 2 198) 401734511064747568885490523085290650630550748445698208825344) (= 696898287454081973172991196020261297061888 (x2706 2 139)) (= (x2706 2 104) 20282409603651670423947251286016) (= (x2706 2 20) 1048576) (= 3138550867693340381917894711603833208051177722232017256448 (x2706 2 191)) (= (x2706 2 174) 23945242826029513411849172299223580994042798784118784) (= 196159429230833773869868419475239575503198607639501078528 (x2706 2 187)) (= (x2706 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= (x2706 2 3) 8) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x2706 2 246)) (= 268435456 (x2706 2 28)) (= 2 (x2706 2 1)) (= 93536104789177786765035829293842113257979682750464 (x2706 2 166)) (= 144115188075855872 (x2706 2 57)) (= (x2706 2 58) 288230376151711744) (= (x2706 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= (x2706 2 244) 28269553036454149273332760011886696253239742350009903329945699220681916416) (= (x2706 2 34) 17179869184) (= 2147483648 (x2706 2 31)) (= 16 (x2706 2 4)) (= (x2706 2 76) 75557863725914323419136) (= (x2706 2 162) 5846006549323611672814739330865132078623730171904) (= (x2706 2 74) 18889465931478580854784) (= (x2706 2 17) 131072) (= (x2706 2 40) 1099511627776) (= 5316911983139663491615228241121378304 (x2706 2 122)) (= 1393796574908163946345982392040522594123776 (x2706 2 140)) (= (x2706 2 92) 4951760157141521099596496896) (= 590295810358705651712 (x2706 2 69)) (= 618970019642690137449562112 (x2706 2 89)) (= (x2706 2 8) 256) (= 32 (x2706 2 5)) (= 147573952589676412928 (x2706 2 67)) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x2706 2 236)) (= 24519928653854221733733552434404946937899825954937634816 (x2706 2 184)) (= (x2706 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= (x2706 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x2706 2 193) 12554203470773361527671578846415332832204710888928069025792) (= (x2706 2 228) 431359146674410236714672241392314090778194310760649159697657763987456) (= (x2706 2 97) 158456325028528675187087900672) (= 9903520314283042199192993792 (x2706 2 93)) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x2706 2 242)) (= (x2706 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= 784637716923335095479473677900958302012794430558004314112 (x2706 2 189)) (= (x2706 2 56) 72057594037927936) (= (x2706 2 188) 392318858461667547739736838950479151006397215279002157056) (= (x2706 2 63) 9223372036854775808) (= (x2706 2 219) 842498333348457493583344221469363458551160763204392890034487820288) (= (x2706 2 168) 374144419156711147060143317175368453031918731001856) (= 87112285931760246646623899502532662132736 (x2706 2 136)) (= (x2706 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= (x2706 2 179) 766247770432944429179173513575154591809369561091801088) (= (x2706 2 112) 5192296858534827628530496329220096) (= (x2706 2 102) 5070602400912917605986812821504) (= 205688069665150755269371147819668813122841983204197482918576128 (x2706 2 207)) (= 822752278660603021077484591278675252491367932816789931674304512 (x2706 2 209)) (= (x2706 2 68) 295147905179352825856) (= (x2706 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x2706 2 235)) (= (x2706 2 18) 262144) (= (x2706 2 43) 8796093022208) (= (x2706 2 153) 11417981541647679048466287755595961091061972992) (= (x2706 2 45) 35184372088832) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x2706 2 226)) (= 137438953472 (x2706 2 37)) (= (x2706 2 119) 664613997892457936451903530140172288) (= (x2706 2 15) 32768) (= (x2706 2 11) 2048) (= 2417851639229258349412352 (x2706 2 81)) (= (x2706 2 24) 16777216) (= 441711766194596082395824375185729628956870974218904739530401550323154944 (x2706 2 238)) (= 21267647932558653966460912964485513216 (x2706 2 124)) (= (x2706 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= 1024 (x2706 2 10)) (= 39614081257132168796771975168 (x2706 2 95)) (= 174224571863520493293247799005065324265472 (x2706 2 137)) (= (x2706 2 192) 6277101735386680763835789423207666416102355444464034512896) (= (x2706 2 91) 2475880078570760549798248448) (= 281474976710656 (x2706 2 48)) (= (x2706 2 78) 302231454903657293676544) (= (x2706 2 252) 7237005577332262213973186563042994240829374041602535252466099000494570602496) (= 383123885216472214589586756787577295904684780545900544 (x2706 2 178)) (= (x2706 2 27) 134217728) (= 50216813883093446110686315385661331328818843555712276103168 (x2706 2 195)) (= 40564819207303340847894502572032 (x2706 2 105)) (= 9671406556917033397649408 (x2706 2 83)) (= (x2706 2 30) 1073741824) (= 2199023255552 (x2706 2 41)) (= 22300745198530623141535718272648361505980416 (x2706 2 144)) (= (x2706 2 114) 20769187434139310514121985316880384) (= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2706 2 256)) (= 421249166674228746791672110734681729275580381602196445017243910144 (x2706 2 218)) (= (x2706 2 26) 67108864) (= (x2706 2 167) 187072209578355573530071658587684226515959365500928) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x2706 2 245)) (= 1645504557321206042154969182557350504982735865633579863348609024 (x2706 2 210)) (= 19342813113834066795298816 (x2706 2 84)) (= (x2706 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= 713623846352979940529142984724747568191373312 (x2706 2 149)) (= 11692013098647223345629478661730264157247460343808 (x2706 2 163)) (= 1532495540865888858358347027150309183618739122183602176 (x2706 2 180)) (= 1267650600228229401496703205376 (x2706 2 100)) (= 85070591730234615865843651857942052864 (x2706 2 126)) (= (x2706 2 9) 512) (= 2535301200456458802993406410752 (x2706 2 101)) (= (x2706 2 55) 36028797018963968) (= 140737488355328 (x2706 2 47)) (= (x2706 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= (x2706 2 13) 8192) (= 46768052394588893382517914646921056628989841375232 (x2706 2 165)) (= (x2706 2 152) 5708990770823839524233143877797980545530986496) (= 210624583337114373395836055367340864637790190801098222508621955072 (x2706 2 217)) (= (x2706 2 108) 324518553658426726783156020576256) (= 2923003274661805836407369665432566039311865085952 (x2706 2 161)) (= (x2706 2 33) 8589934592) (= (x2706 2 160) 1461501637330902918203684832716283019655932542976) (= 2305843009213693952 (x2706 2 61)) (= (x2706 2 111) 2596148429267413814265248164610048) (= 12855504354071922204335696738729300820177623950262342682411008 (x2706 2 203)) (= (x2706 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= (x2706 2 46) 70368744177664) (= 340282366920938463463374607431768211456 (x2706 2 128)) (= 803469022129495137770981046170581301261101496891396417650688 (x2706 2 199)) (= 1152921504606846976 (x2706 2 60)) (= (x2706 2 35) 34359738368) (= 44601490397061246283071436545296723011960832 (x2706 2 145)) (= 4294967296 (x2706 2 32)) (= (x2706 2 86) 77371252455336267181195264) (= (x2706 2 127) 170141183460469231731687303715884105728) (= (x2706 2 109) 649037107316853453566312041152512) (= 5444517870735015415413993718908291383296 (x2706 2 132)) (= (x2706 2 158) 365375409332725729550921208179070754913983135744) (= 411376139330301510538742295639337626245683966408394965837152256 (x2706 2 208)) (= 748288838313422294120286634350736906063837462003712 (x2706 2 169))))
(assert (x561 x334))
(assert (x561 x528))
(assert (x561 x3917))
(assert (x2855 x869 (- x1864 x1020)))
(assert (x79 (* x350 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x775 (x1573 64 x1297 14))))
(assert (= (or x3605 x2113) x3766))
(assert (= (=> (and (= (> x3276 65535) x3074) (or (and (and (= (+ 16 x2375) x3235) (= (x3797 x3276 16) x2839)) x3074) (and (and (= x2375 x3235) (= x2839 x3276)) (not x3074)))) x2975) x2205))
(assert (x79 (ite (< x2702 256) (x2706 2 x2702) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3318 (x1573 64 x904 x2652)) x2652))
(assert (= x3475 (=> (and (= (> x2998 3) x2051) (or (and (and (= x3878 x1061) (= x2998 x3578)) (not x2051)) (and x2051 (and (= x3878 (+ x1061 2)) (= (x3797 x2998 2) x3578))))) x747)))
(assert (x561 x3370))
(assert (= (x34 x2267 340282366920938463463374607431768211456) (x3797 x2267 128)))
(assert (x561 x1974))
(assert (x1721 x216))
(assert (x7 1000000000000000000 x969))
(assert (x561 x3542))
(assert (= (and x386 (not x471)) x1338))
(assert (x775 1099511627774))
(assert (= x708 (=> (and (or (and x1058 (and (= x3025 x493) (= x3181 x3549))) (and (not x1058) (and (= x493 (+ x3025 2)) (= x372 x3549)))) (and (= x372 (x3641 x3181 2)) (= (= x372 0) x1058))) x2263)))
(assert (x511 x1924 x1595 x3320 x3518))
(assert (= (x2283 (* 256 x2471)) (x3641 x2471 8)))
(assert (x1782 x335 4))
(assert (x1782 x558 4))
(assert (= (or x2443 x323) x591))
(assert (= (x3641 x3924 64) (x2283 (* 18446744073709551616 x3924))))
(assert (x7 1000000 x379))
(assert (x561 x617))
(assert (x3099 (* x3416 256)))
(assert (x79 (* x3335 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x3441))
(assert (= (x1077 (x1573 64 x2099 14)) (x1573 64 x2099 14)))
(assert (= (or (and x3360 x457) x920) x1700))
(assert (x561 x3079))
(assert (not (x775 (x1573 64 x2992 9))))
(assert (x1996 x1463))
(assert (x1721 (- x1864 x1835)))
(assert (= 14 (x3318 (x1573 64 x1108 14))))
(assert (x1721 (- x1595 x732)))
(assert (= 64 (x1883 (x1573 64 0 x2145))))
(assert (=> (>= 10000 x1539) (= 0 (x1077 x1539))))
(assert (x561 x2314))
(assert (< 10000 (x1573 64 0 x1432)))
(assert (x3099 (* 65536 x2676)))
(assert (x1782 x1789 256))
(assert (x1721 (- x1595 x1207)))
(assert (= x3165 (and (not x3286) x2784)))
(assert (not (x775 (x1573 64 255 x3760))))
(assert (= (x34 x1074 16) (x3797 x1074 4)))
(assert (= (x73 (x1573 64 1 14)) 1))
(assert (x561 x3951))
(assert (x1996 x3989))
(assert (x3099 x93))
(assert (x1979 x3368))
(assert (= (x34 x3983 18446744073709551616) (x3797 x3983 64)))
(assert (= (x1077 (x1573 64 x1113 x614)) (x1573 64 x1113 x614)))
(assert (x561 x441))
(assert (= (and x3336 x3874) x3720))
(assert (x1721 (- x2955 x1207)))
(assert (x1721 (- x1924 x732)))
(assert (x2855 x1886 (- x1207 x732)))
(assert (x561 x494))
(assert (= x3739 (=> (and (and (= (= x1528 0) x3450) (= x1528 (x3641 x712 4))) (or (and (and (= x2906 x1528) (= x3711 (+ 4 x364))) (not x3450)) (and (and (= x712 x2906) (= x3711 x364)) x3450))) x170)))
(assert (= (x3318 (x1573 64 0 x126)) x126))
(assert (= (x1077 6277101735386680763835789423207666416102355444464034512896) 0))
(assert (x3204 x3613 1000000000000000000))
(assert (= (x1883 (x1573 64 x1410 x601)) 64))
(assert (x1979 x2232))
(assert (x1996 x1325))
(assert (x561 x925))
(assert (= x211 (and x2498 x1655)))
(assert (x1979 x3305))
(assert (= (x1077 x3272) (x1077 (+ 1 x3272))))
(assert (= x899 (and (not x720) x417)))
(assert (= 64 (x1883 (x1573 64 x1765 x536))))
(assert (x3099 x3853))
(assert (= (x2283 (* x904 256)) (x3641 x904 8)))
(assert (x511 x732 x1020 x2764 x2955))
(assert (x561 x75))
(assert (x561 x1335))
(assert (= (=> (and (= x286 (< 18446744073709551615 x3983)) (or (and (and (= (x3797 x3983 64) x3124) (= (+ 64 x2409) x3855)) x286) (and (and (= x3855 x2409) (= x3124 x3983)) (not x286)))) x1026) x1716))
(assert (x561 x3936))
(assert (x1782 x2885 65536))
(assert (x1782 x610 4294967296))
(assert (= x2813 (and x1223 x3698)))
(assert (= (=> (and (or (and (and (= x811 x3658) (= x2400 x1010)) (not x2351)) (and x2351 (and (= (x3797 x1010 4) x2400) (= x811 (+ 4 x3658))))) (= (< 15 x1010) x2351)) x835) x784))
(assert (x561 x3417))
(assert (= x1082 (and x1975 (not x130))))
(assert (= (x1077 18446744073709551615) 0))
(assert (= 64 (x1883 (x1573 64 x3813 9))))
(assert (x511 x3320 x3518 x1886 x1207))
(assert (= x3049 (and x40 x3279)))
(assert (= (and (not x3267) x2550) x3984))
(assert (= (and x2293 x414) x1089))
(assert (x561 x3628))
(assert (< 10000 (x1573 64 x1143 5)))
(assert (= (x73 (x1573 64 x2651 5)) x2651))
(assert (x561 x801))
(assert (x561 x2929))
(assert (x561 x3701))
(assert (= x563 (and x2920 x1838)))
(assert (= x2073 (=> (and (= (> x3011 3) x1594) (or (and (and (= x3301 x3055) (= x2041 x3011)) (not x1594)) (and x1594 (and (= (+ 2 x3055) x3301) (= x2041 (x3797 x3011 2)))))) x656)))
(assert (x79 (* x422 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3099 (* 65536 x102)))
(assert (x511 x2764 x2955 x1595 x1924))
(assert (= x3584 (and (not x2292) x3807)))
(assert (x79 (* x448 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3797 x558 2) (x34 x558 4)))
(assert (= (=> (and (= (+ x2699 (x3641 x176 8)) x3255) (= (- 255 (ite (= 0 (x3641 x3735 1)) x2273 (+ 1 x2273))) x2699)) x1724) x2449))
(assert (x1979 x2358))
(assert (x1996 x33))
(assert (= x2275 (and x1933 (not x501))))
(assert (= (=> (and (= (+ x1201 (x3641 x3416 8)) x3022) (= (- 255 (ite (= (x3641 x108 1) 0) x1880 (+ 1 x1880))) x1201)) x3515) x2976))
(assert (x561 x3375))
(assert (x561 x1271))
(assert (= x2376 (and (not x2290) x1417)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2417 x126)))
(assert (= x3795 (and x2640 x2055)))
(assert (x561 x1666))
(assert (x1979 x3600))
(assert (x561 x1185))
(assert (x1996 x736))
(assert (x561 x1539))
(assert (= x154 (or x1456 x3932)))
(assert (x561 x578))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3416 x898)))
(assert (x561 x581))
(assert (x561 x1224))
(assert (not (x775 (x1573 64 x2417 x1851))))
(assert (x2855 x1595 (- x1924 x3518)))
(assert (x1721 x3924))
(assert (=> (<= x3391 10000) (= (x1077 x3391) 0)))
(assert (x561 x1945))
(assert (x561 x2653))
(assert (= x662 (and (not x1166) x2556)))
(assert (x3099 (ite (> 256 x2463) (x2706 2 x2463) 0)))
(assert (= (x34 x832 16) (x3797 x832 4)))
(assert (= (and (not x478) x2632) x1891))
(assert (= x534 (and (not x3479) x2547)))
(assert (= x1397 (and x3007 x2796)))
(assert (= x1246 (and x3018 x1965)))
(assert (= 255 (x73 (x1573 64 255 x3545))))
(assert (x561 x2811))
(assert (< 10000 (x1573 64 255 x544)))
(assert (= x3927 (and (not x2970) x347)))
(assert (= (x73 (x1573 64 x1064 x2735)) x1064))
(assert (= x2154 (and x265 (not x3262))))
(assert (= (x3797 x2688 64) (x34 x2688 18446744073709551616)))
(assert (= (x2283 (* 256 x1304)) (x3641 x1304 8)))
(assert (< 10000 (x1573 64 x1478 x702)))
(assert (= (or x3161 (and (not x57) x993)) x2497))
(assert (x7 4294967296 x103))
(assert (x561 x2041))
(assert (= (x1573 64 x1080 5) (x1077 (x1573 64 x1080 5))))
(assert (x3204 (- x3977 100000000) 100000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x370 x2735)))
(assert (x561 x3419))
(assert (< (x1573 64 0 x126) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3863 x2764 x2955 x1020 x732))
(assert (= (=> (= x3904 (= x188 0)) (and (=> (and (or (and (and (<= x188 184467440737095516) (= x1699 (* 100000000000000 x188)) (= (* 1000000000000000000 x969) x3922) (= x1699 x2620) (= (x34 x3922 1000000) x1638) (not (< x1638 x2620))) (not x2973)) (and (and (= x2587 (* x969 1000000)) (= x3872 (x34 x93 1000000000000000000000000)) (= (* 100000 x901) x3282) (= x2101 (x1637 16777215 x2865)) (= x844 x3320) (= (* 1000000 x1075) x2727) (= (x34 x2587 1000000) x2914) (= x901 (x1637 16777215 x2865)) (>= 18446744073709551615 x3906) (= x3906 (+ (ite (< 0 (x2608 x93 1000000000000000000000000)) 1 0) x3872)) (= x93 x2727) (<= x188 1844674407370955) (>= x1075 0) (= x3518 (+ x3282 100000000)) (<= x1075 18446744073709551615999999999999999999) (= x1075 (x3534 x3320 x3518)) (= x844 (* x188 100000000000000)) (not (> x3906 x2914)) (= 1 x18) (<= x2101 9999999) (= 1000000000000000000000000 x1802)) x2973)) (not x3904)) x2617) (=> (and (and (= x1108 (ite x2973 1 0)) (= (= 0 x370) x915) (= x1086 (x1573 64 x1108 14)) (= (x1637 16777215 x2865) x2450) (= x2735 (x1573 64 x2450 x1086))) x3904) (and (=> (and (and (and (>= 1099511627775 x1660) (= (x1573 64 x370 x2735) x3513) (= x1660 (x1413 x3513)) (= x2913 (< 0 x1660))) (or (and (and (>= 1099511627775 x706) (= x2068 (ite (< 0 x706) 1 0)) (= (x3974 x3956) x706) (= (x1573 64 x370 x2735) x3956)) (not x2913)) (and (= x2068 (ite x2913 1 0)) x2913))) (not x915)) x968) (=> (and x915 (= (ite x915 1 0) x2336)) x9))))) x3353))
(assert (x561 x3810))
(assert (= (x3797 x360 128) (x34 x360 340282366920938463463374607431768211456)))
(assert (x561 x1288))
(assert (= x232 (and x1639 x3379)))
(assert (x561 x1571))
(assert (x3099 (* x1945 65536)))
(assert (> (x1573 64 x3335 x3023) 10000))
(assert (x2855 x732 (- x1020 x2955)))
(assert (x1782 x1875 65536))
(assert (= (x73 (x1573 64 x1534 x3145)) x1534))
(assert (x1721 (- x1207 x528)))
(assert (not (x775 (x1573 64 x1539 x269))))
(assert (= x2997 (and (not x805) x3315)))
(assert (x3863 x1835 x528 x1595 x1924))
(assert (= 64 (x1883 (x1573 64 x3550 x2961))))
(assert (= (x3641 x1146 64) (x2283 (* x1146 18446744073709551616))))
(assert (= x933 (or x1894 x2482)))
(assert (x497 x2843))
(assert (x561 x2325))
(assert (x561 x237))
(assert (= x2516 (or x3720 x2166)))
(assert (x1721 x613))
(assert (x561 x2688))
(assert (= (x3797 x1552 32) (x34 x1552 4294967296)))
(assert (x561 x1694))
(assert (= x2966 (and x3279 (not x40))))
(assert (= (or x862 x121) x728))
(assert (x561 x2941))
(assert (= (=> (and (= x2770 (ite x588 1 0)) (= x588 (not x1340)) (= x3128 (ite (not (= x2860 0)) 1 0)) (= (ite x588 1 0) x1363) (= x1879 (+ 1 x794)) (= x3201 (= x3128 0)) (= x794 (x1573 64 x1363 14)) (= x2860 (x1187 x1879))) (and (=> (and x3201 (= x3128 x693)) x508) (=> (and (and (and (= x3942 (> x3080 0)) (= (ite x1340 (ite (not (> (x1637 16777215 x629) x1922)) 1 0) x2743) x3080)) (or (and (= x21 x3080) x3942) (and (not x3942) (and (= (ite (not x1340) (ite (not (> x1922 (x1637 16777215 x629))) 1 0) (ite (not x1340) 1 0)) x1600) (= x1600 x21))))) (not x3201)) x400))) x1746))
(assert (x775 340282366920938463463374607431768211456))
(assert (= x1281 (and (not x3724) x3509)))
(assert (= x332 (or x2235 x1345)))
(assert (= (or x2135 x912) x3556))
(assert (not (x775 (x1573 64 x1218 9))))
(assert (x1721 x1471))
(assert (= (x2283 (* 256 x1765)) (x3641 x1765 8)))
(assert (= (x34 x2885 65536) (x3797 x2885 16)))
(assert (= (and (not x287) x2180) x3847))
(assert (=> (>= 10000 x2604) (= 0 (x1077 x2604))))
(assert (= x454 (and x2487 x304)))
(assert (x7 18446744073709551616 x1408))
(assert (x561 x841))
(assert (= x3523 (and x1057 x2873)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2604 x2389)))
(assert (x3099 x703))
(assert (not (x775 (x1573 64 x637 14))))
(assert (x561 x1731))
(assert (= x1865 (=> (and (= x1776 (< 3 x33)) (or (and x1776 (and (= x996 (x3797 x33 2)) (= (+ 2 x258) x1978))) (and (and (= x258 x1978) (= x996 x33)) (not x1776)))) x1862)))
(assert (x1721 (- x1020 x1864)))
(assert (x2855 x1835 (- x528 x2955)))
(assert (x561 x2238))
(assert (x561 x385))
(assert (x1996 x98))
(assert (x561 x1274))
(assert (= 64 (x1883 (x1573 64 x1836 9))))
(assert (= (x2283 (* 2 x3735)) (x3641 x3735 1)))
(assert (x561 x2762))
(assert (= (x3318 (x1573 64 x223 x3948)) x3948))
(assert (= (and x3819 x956) x2524))
(assert (= (x3641 x945 128) (x2283 (* 340282366920938463463374607431768211456 x945))))
(assert (= x250 (x3318 (x1573 64 x682 x250))))
(assert (= (or x58 x2962) x3027))
(assert (= x2874 (and x230 (not x2596))))
(assert (x561 x288))
(assert (x3863 x3518 x3320 x732 x1020))
(assert (x561 x434))
(assert (x561 x1761))
(assert (x561 x3851))
(assert (= (x1077 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x561 x535))
(assert (= (=> (and (and (= (x3641 x448 64) x1974) (= x162 (= x1974 0))) (or (and x162 (and (= x448 x3615) (= x2623 x179))) (and (and (= x2623 (+ 64 x179)) (= x1974 x3615)) (not x162)))) x2708) x3026))
(assert (x1721 (- x2764 x1886)))
(assert (not (x775 (x1573 64 255 x544))))
(assert (x561 x1384))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1922 x646)))
(assert (= x3555 (and x3028 x929)))
(assert (x1996 x785))
(assert (= x2440 (or x2713 x144)))
(assert (x561 x2361))
(assert (= x238 (=> (and (and (= (x3641 x3432 8) x19) (= x3655 (= x19 0))) (or (and x3655 (and (= x1042 x2441) (= x3432 x2932))) (and (not x3655) (and (= x2932 x19) (= x1042 (+ x2441 8)))))) x3232)))
(assert (= x3955 (=> (and (= (> x2190 4294967295) x206) (or (and (and (= x1840 x2190) (= x3406 x3822)) (not x206)) (and (and (= x1840 (x3797 x2190 32)) (= (+ x3406 32) x3822)) x206))) x2818)))
(assert (= (x3641 x3968 128) (x2283 (* x3968 340282366920938463463374607431768211456))))
(assert (x2855 x1595 (- x1924 x732)))
(assert (x1782 x3276 65536))
(assert (x1979 x3645))
(assert (= x1586 (or x1123 x2115)))
(assert (= (x73 (x1573 64 x1218 9)) x1218))
(assert (x79 x2865 16777216))
(assert (x1979 x2451))
(assert (= (or x746 x1497) x757))
(assert (x1996 x1666))
(assert (= (x1077 (x1573 64 x1177 x126)) (x1573 64 x1177 x126)))
(assert (= (and x3529 x3640) x194))
(assert (x1721 (x2706 2 x1392)))
(assert (> (x1573 64 x1848 x122) 10000))
(assert (x561 x3288))
(assert (= x3144 (or x1602 x3421)))
(assert (< 10000 (x1573 64 x1419 9)))
(assert (= 0 (x73 (x1573 64 0 x938))))
(assert (x1914 x1529))
(assert (x561 x134))
(assert (x3099 (* x2249 4)))
(assert (x1721 (- x3518 x869)))
(assert (= 64 (x1883 (x1573 64 x224 x2189))))
(assert (x79 (* 256 x3416) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x79 (* 256 x1304) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1299 x1249) x3388))
(assert (= x3275 (=> (and (= x2213 (> x3191 0)) (or (and (= (ite x2213 1 0) x3552) (not x2213)) (and (and (= x1091 x3552) (= (ite (not (= x2116 0)) 1 0) x1091) (= (x3105 x3227) x2116) (= x278 (ite x2973 1 0)) (= (+ x3636 1) x3227) (= (x1573 64 x278 14) x3636)) x2213))) x2749)))
(assert (x561 x2141))
(assert (x3099 (* x431 2)))
(assert (> (x1573 64 0 x2984) 10000))
(assert (= x382 (and (not x2640) x2055)))
(assert (x3099 (* 256 x1731)))
(assert (= 0 (x73 (x1573 64 0 x2508))))
(assert (x561 x1836))
(assert (= x2547 (or x2090 x662)))
(assert (x561 x219))
(assert (= (x1077 x2518) (x1077 (+ 1 x2518))))
(assert (x561 x320))
(assert (= (x1883 (x1573 64 0 x293)) 64))
(assert (< (x1573 64 0 x2434) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x79 (* 256 x676) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1362))
(assert (x3863 x1864 x869 x2955 x2764))
(assert (= (and x541 x1562) x1182))
(assert (x561 x3549))
(assert (= (x1077 1099511627774) 0))
(assert (x511 x1595 x1924 x1835 x528))
(assert (x3863 x2764 x2955 x1924 x1595))
(assert (= (and x467 x2109) x406))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1218 9)))
(assert (= (=> (and (and (= x394 (x1637 16777215 x629)) (= 1000000000000000000000000 x801) (= x2326 1) (= (+ x1769 100000000) x1207) (<= x394 9999999) (= x1769 (* x3653 100000)) (= (x2842 (- x3947 x1886)) x3191) (= x1685 x486) (= x2457 (+ x1896 (ite (> (x2608 x486 1000000000000000000000000) 0) 1 0))) (= (x34 x486 1000000000000000000000000) x1896) (= x724 (x3534 x1886 x1207)) (= x1685 (* 1000000 x724)) (= x3653 (x1637 16777215 x629)) (not (> x1886 x3947))) (or (and (not x1340) (and (= x1185 x1886) (>= 340282366920938463463374607431768211455 x2128) (= (x1573 64 x3813 9) x931) (= x2657 (x1573 64 x3813 9)) (= x62 x480) (= x3013 (x2842 (- x1184 x1886))) (= (x3414 x3969) x2210) (= x2128 (x399 x2657)) (<= 0 x2767) (= (x1637 340282366920938463463374607431768211455 x3013) x2146) (not (< x2698 x3680)) (= (x1637 18446744073709551615 x1149) x3680) (= (x1637 18446744073709551615 x681) x3412) (= x2504 x398) (<= x1750 340282366920938463463374607431768211455) (= x3670 x1985) (= x1985 (- x1174 x888)) (= x3894 (+ x2146 x3510)) (= 0 x3561) (= x3721 (* 1000000 x2457)) (<= x398 340282366920938463463374607431768211455) (= (x1375 x3057) x1427) (= (x1573 64 x2624 5) x3057) (= x3558 (x3414 x3969)) (= x3412 x2133) (= (+ x3558 x1886) x1750) (>= 340282366920938463463374607431768211455 x1184) (= x2350 (- x764 x2128)) (= x1149 (x34 x3721 1000000)) (= x2124 0) (= (x3076 x931) x1184) (= (- x3894 x235) x2260) (= (x2842 (- x2698 x3680)) x681) (<= x235 340282366920938463463374607431768211455) (= x288 x2767) (= (+ x2771 x2457) x2767) (<= x888 340282366920938463463374607431768211455) (>= 340282366920938463463374607431768211455 x2210) (= x1750 x407) (<= 0 x1750) (<= x2771 340282366920938463463374607431768211455) (= x480 (- x2195 x2210)) (not (> x1886 x1184)) (= (+ x407 x2260) x2195) (= x3969 (x1573 64 x312 9)) (= x398 (x553 x640)) (= x2771 (x399 x2657)) (<= x3558 340282366920938463463374607431768211455) (<= x1427 281474976710655) (= x888 (x553 x640)) (= x764 (+ x288 x3088)) (= (x3076 x931) x235) (<= x2624 1461501637330902918203684832716283019655932542975) (<= x2767 340282366920938463463374607431768211455) (= x1174 (+ x2504 x2350)) (= (x1573 64 x1427 9) x640))) (and x1340 (and (= 0 x3905) (= (x1375 x81) x1218) (>= 340282366920938463463374607431768211455 x3490) (= (x1573 64 x3813 9) x3146) (= (x1573 64 x312 9) x1390) (<= x2122 340282366920938463463374607431768211455) (= (+ x1886 x3054) x3490) (= (+ x2565 x3510) x2226) (= x3670 x430) (>= 281474976710655 x1218) (= x965 x3731) (= (x1747 x1152) x965) (= x507 (+ x3375 x2792)) (= (x2842 (- x2698 x2675)) x1380) (= (x3384 x1390) x663) (>= 1461501637330902918203684832716283019655932542975 x2624) (= x62 x2635) (= (x2842 (- x413 x2330)) x3539) (<= x3054 340282366920938463463374607431768211455) (= (x3076 x3146) x3054) (not (< x413 x2330)) (= (x34 x98 1000000000000000000) x1226) (<= x965 340282366920938463463374607431768211455) (= (x1637 18446744073709551615 x1380) x953) (= x659 (x3076 x3146)) (= x2792 (- x1687 x820)) (= (* 1000000 x1886) x98) (= x3123 0) (= (+ x2457 x2284) x700) (>= x3490 0) (>= 340282366920938463463374607431768211455 x2284) (= x954 (+ x3731 x2148)) (<= x659 340282366920938463463374607431768211455) (= x700 x3375) (= x1725 (x1637 340282366920938463463374607431768211455 x3539)) (= x2635 (- x2226 x659)) (= x953 x2133) (= (x1637 18446744073709551615 x1226) x2675) (<= x820 340282366920938463463374607431768211455) (= (- x507 x663) x2148) (>= x700 0) (>= 340282366920938463463374607431768211455 x413) (= (x1573 64 x1218 9) x1152) (not (> x2675 x2698)) (= x2565 x3490) (= x1687 (+ x3088 x1725)) (= x2284 (x3384 x1390)) (= (x1573 64 x2624 5) x81) (= x1886 x1185) (= (x399 x2814) x413) (= x2457 x2330) (<= x663 340282366920938463463374607431768211455) (= x2814 (x1573 64 x3813 9)) (= x430 (- x954 x2122)) (= x2122 (x1747 x1152)) (= x820 (x399 x2814)) (<= x700 340282366920938463463374607431768211455))))) x924) x47))
(assert (x561 x1410))
(assert (= x3760 (x3318 (x1573 64 255 x3760))))
(assert (= x347 (or x3857 x3398)))
(assert (x561 x1718))
(assert (x561 x48))
(assert (= x3482 (or x2388 x1070)))
(assert (= (=> (and (or (and (and (= x48 (x3797 x2222 8)) (= x3389 (+ x468 8))) x489) (and (not x489) (and (= x3389 x468) (= x48 x2222)))) (= (< 255 x2222) x489)) x366) x1342))
(assert (= x998 (and x2217 x2585)))
(assert (x1996 x2840))
(assert (x3099 (* 16 x1482)))
(assert (x3099 (* x2865 340282366920938463463374607431768211456)))
(assert (x79 x1529 16777216))
(assert (x561 x253))
(assert (= (x1077 (x1573 64 x3121 5)) (x1573 64 x3121 5)))
(assert (x561 x3033))
(assert (= (and (not x443) x3217) x319))
(assert (= (x1077 (+ 1 x3760)) (x1077 x3760)))
(assert (= (x3318 (x1573 64 x1534 x3145)) x3145))
(assert (= (x34 x2065 340282366920938463463374607431768211456) (x3797 x2065 128)))
(assert (x3099 (* 16 x2753)))
(assert (x1996 x2760))
(assert (= x3234 (or x1294 x1053)))
(assert (x1996 65536))
(assert (= x2268 (x73 (x1573 64 x2268 x1125))))
(assert (x561 x3221))
(assert (x561 x2630))
(assert (= (x3318 (x1573 64 x3484 x2742)) x2742))
(assert (= x3598 (and x516 (not x489))))
(assert (x1782 x2777 65536))
(assert (x561 x1726))
(assert (x511 x1886 x1207 x2764 x2955))
(assert (x561 x3748))
(assert (x561 x1737))
(assert (x1721 (- x732 x1207)))
(assert (x3863 x2955 x2764 x528 x1835))
(assert (x2855 x1924 (- x1595 x1020)))
(assert (= x1080 (x73 (x1573 64 x1080 5))))
(assert (x1721 (- x1886 x1864)))
(assert (x561 x2470))
(assert (x79 (* 4294967296 x67) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1462))
(assert (= 64 (x1883 (x1573 64 x2992 9))))
(assert (x1996 x2404))
(assert (x561 x3569))
(assert (= 64 (x1883 (x1573 64 x1353 x3950))))
(assert (x1721 x712))
(assert (x561 x598))
(assert (= (and x2714 x3201) x306))
(assert (x1721 (- x2764 x528)))
(assert (= (x1077 (+ x1450 1)) (x1077 x1450)))
(assert (x561 x1551))
(assert (x1721 18446744073709551616))
(assert (= x1277 x1584))
(assert (= 0 (x1077 1000000)))
(assert (x561 x3355))
(assert (x1721 (- x528 x732)))
(assert (< 10000 (x1573 64 x367 x1616)))
(assert (= (x3641 x3594 32) (x2283 (* 4294967296 x3594))))
(assert (x561 x1593))
(assert (x561 x2716))
(assert (= x614 (x3318 (x1573 64 x3884 x614))))
(assert (x7 16 x789))
(assert (= x104 (=> (and (= (+ 1 x2518) x3052) (= (ite x2973 1 0) x1102) (= x2672 (ite (not (= 0 x2448)) 1 0)) (= (= x2672 0) x1399) (= x2518 (x1573 64 x1102 14)) (= (x1187 x3052) x2448)) (and (=> (and (and (and (>= 1099511627775 x635) (= (x1573 64 x3551 14) x250) (= x1726 512) (= (x1637 16777215 x629) x682) (<= x886 1099511627775) (>= 281474976710655 x312) (= x1908 (+ x1155 1)) (= x2217 (> x445 x3947)) (= (* 100000000000000 x3737) x445) (= x3737 (x992 x1908)) (= (x1189 x1908) x2698) (= 512 x586) (= x886 (x1743 x1155)) (= x312 (x2129 x1908)) (>= 18446744073709551615 x2698) (= x3803 (x1573 64 x682 x250)) (>= 18446744073709551615 x3737) (= (x1573 64 x2417 x3803) x1155) (= (ite x2973 1 0) x3551) (= x635 (x1473 x1155))) (or (and (and (= (* x3737 100000000000000) x2562) (= x2562 x1886) (= x1453 0)) (not x2217)) (and x2217 (and (= x3709 (x2842 (- x3737 x2254))) (= x3030 100000000000000) (= 0 x3418) (= (x34 x3947 100000000000000) x3600) (>= 340282366920938463463374607431768211455 x3947) (<= 100000000000000 x3947) (= (x1637 18446744073709551615 x3600) x2254) (= (x1637 18446744073709551615 x3709) x2850) (= x3947 x1886) (= x2850 x1453) (not (> x2254 x3737)))))) (not x1399)) x47) (=> (and x1399 (and (= x3215 x3088) (= x2020 x3510) (= 224 x2525) (= x2854 x3947))) x3568)))))
(assert (= (x73 (x1573 64 x3335 x3023)) x3335))
(assert (not (x775 (x1573 64 x278 14))))
(assert (x561 x2584))
(assert (x561 x2539))
(assert (x561 x271))
(assert (x561 x2914))
(assert (x3099 (* x1766 340282366920938463463374607431768211456)))
(assert (x561 x3618))
(assert (x561 x1316))
(assert (= x2737 (and x3940 x3443)))
(assert (= x1582 (=> (= x809 (= x3416 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (and (and (= x3192 (x3105 x2302)) (= x2296 (= x3008 0)) (= (x3797 x3192 1) x3008) (= 0 x1610) (= x1843 1)) (or (and (and (= 0 x2277) (= 1 x2471)) (not x2296)) (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2471) x2296))) x809) x3452) (=> (and (and (or (and (and (= x2052 x652) (= x243 0)) x3724) (and (and (= x652 x1434) (= x243 128)) (not x3724))) (and (= (x532 x1583) x2052) (= x1583 (x1573 64 x3416 x898)) (= x3724 (= x1434 0)) (= (+ 1 x2410) x898) (= x1434 (x3641 x2052 128)))) (not x809)) x1280)))))
(assert (= 64 (x1883 (x1573 64 x1922 x646))))
(assert (x561 x2011))
(assert (x561 x2661))
(assert (x1782 x3024 4294967296))
(assert (x561 x165))
(assert (x561 x3505))
(assert (x79 (* 2 x3735) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x3128))
(assert (x730 x2071 x1693))
(assert (=> (>= 10000 x3206) (= 0 (x1077 x3206))))
(assert (x7 2 x3735))
(assert (< 10000 (x1573 64 x2628 x1850)))
(assert (= (x34 x2289 340282366920938463463374607431768211456) (x3797 x2289 128)))
(assert (= (or x1893 x3284) x1085))
(assert (= x1616 (x3318 (x1573 64 x367 x1616))))
(assert (x561 x3276))
(assert (x2462 x2701))
(assert (=> (<= x1218 10000) (= (x1077 x1218) 0)))
(assert (x3099 (* x612 256)))
(assert (= x3866 (and (not x341) x3926)))
(assert (x561 x2982))
(assert (not (x775 (x1573 64 x904 x2652))))
(assert (= (x3641 x630 64) (x2283 (* 18446744073709551616 x630))))
(assert (= (and (not x1965) x3018) x3265))
(assert (x561 x1304))
(assert (= x3421 (and x472 x3140)))
(assert (= (and (not x1021) x295) x1503))
(assert (x561 x2078))
(assert (= (=> (and (or (and (and (= x2513 (x3797 x1236 64)) (= x2077 (+ x401 64))) x3039) (and (not x3039) (and (= x2077 x401) (= x2513 x1236)))) (= x3039 (> x1236 18446744073709551615))) x543) x3762))
(assert (x1979 x1966))
(assert (x3099 (* x989 4294967296)))
(assert (x79 (* 256 x1765) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x682 (x73 (x1573 64 x682 x250))))
(assert (< (x1573 64 0 x2735) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x34 x451 256) (x3797 x451 8)))
(assert (x79 x1226 18446744073709551616))
(assert (= (x2283 (* 340282366920938463463374607431768211456 x1176)) (x3641 x1176 128)))
(assert (x561 x3478))
(assert (x561 x2932))
(assert (x511 x1020 x732 x1595 x1924))
(assert (= (and x162 x742) x624))
(assert (= (x34 x2575 256) (x3797 x2575 8)))
(assert (x2855 x1924 (- x1595 x1864)))
(assert (x3863 x3320 x3518 x2955 x2764))
(assert (x1721 (- x1595 x1864)))
(assert (= (x3797 x1012 128) (x34 x1012 340282366920938463463374607431768211456)))
(assert (x561 x3394))
(assert (= (or x2505 x3649) x3420))
(assert (= (x3318 (x1573 64 x125 14)) 14))
(assert (x2855 x732 (- x1020 x1924)))
(assert (x1721 1))
(assert (x561 x3331))
(assert (x561 x2352))
(assert (and (= 27 (x3534 9 3)) (= 9 (x3534 3 3)) (= 81 (x3534 27 3)) (= (x3534 9 9) 81)))
(assert (x3099 x3013))
(assert (= x422 (x73 (x1573 64 x422 x3913))))
(assert (= (x3641 x1830 8) (x2283 (* x1830 256))))
(assert (x3099 x1149))
(assert (< 10000 (x1573 64 x2837 x614)))
(assert (=> (<= x1903 10000) (= 0 (x1077 x1903))))
(assert (x1721 (- x2764 x1864)))
(assert (x545 x1529))
(assert (x1782 x3573 340282366920938463463374607431768211456))
(assert (= (x1077 (x1573 64 x1143 5)) (x1573 64 x1143 5)))
(assert (= (=> (and (or (and (and (= x2105 x3877) (= x2054 x149)) (not x1566)) (and x1566 (and (= (+ 16 x2105) x3877) (= (x3797 x2054 16) x149)))) (= x1566 (< 65535 x2054))) x1757) x1238))
(assert (x561 x2335))
(assert (= x839 (and x2395 (not x2131))))
(assert (x561 x957))
(assert (x561 x1408))
(assert (x2855 x3518 (- x3320 x1886)))
(assert (= (x1573 64 x2837 x614) (x1077 (x1573 64 x2837 x614))))
(assert (= x1424 (and x3214 x3016)))
(assert (x561 x102))
(assert (x1996 x610))
(assert (x561 x2313))
(assert (x2855 x2955 (- x2764 x1864)))
(assert (= 64 (x1883 (x1573 64 0 x938))))
(assert (= x1301 (and x2420 x3931)))
(assert (x1979 x3709))
(assert (x3863 x1020 x732 x1207 x1886))
(assert (= x634 (=> (and (= (ite (> x3503 1) (+ x2820 1) x2820) x70) (= x1800 x275) (= x275 (x2842 (- x70 1)))) x3319)))
(assert (x561 x2448))
(assert (= (and (not x2756) x2721) x359))
(assert (x561 x3518))
(assert (x561 x3753))
(assert (x561 x676))
(assert (x561 x2793))
(assert (= x3664 (and (not x956) x3819)))
(assert (x561 x838))
(assert (= (x1077 x97) (x1077 (+ 1 x97))))
(assert (x561 x1404))
(assert (x561 x3405))
(assert (= (x1077 (x1573 64 x2417 x3803)) (x1573 64 x2417 x3803)))
(assert (= x3830 (or x1884 x2223)))
(assert (x1996 x3885))
(assert (x1721 x1886))
(assert (= (x2283 (* x1254 65536)) (x3641 x1254 16)))
(assert (x3590 x1571))
(assert (x1721 (- x1886 x2764)))
(assert (= (x1077 (x1573 64 x2268 x1125)) (x1573 64 x2268 x1125)))
(assert (= (x1077 (x1573 64 0 x3322)) (x1573 64 0 x3322)))
(assert (= x1941 (and x2412 (not x3517))))
(assert (x2855 x3518 (- x3320 x1924)))
(assert (= (=> (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2922) x2756) (and (=> (and (and (= (x371 (+ x2922 16776960)) x2724) (= x2701 (ite (>= 255 x2922) x2724 (x2953 16776960 x2922)))) (not x2756)) x3240) (=> (and x2756 (and (= x439 (x1573 64 255 x3760)) (= 254 x3188) (= (= 0 x3223) x1636) (= x3223 (x3641 x1402 1)) (= x1402 (x26 x439)) (= x3760 (+ 1 x1092)) (= x3633 255))) (and (=> (and x1636 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2010)) x1210) (=> (and (and (or (and (not x1619) (and (= x3156 x3223) (= 0 x142))) (and x1619 (and (= (x3797 x3223 128) x3156) (= x142 128)))) (= (< 340282366920938463463374607431768211455 x3223) x1619)) (not x1636)) x1306))))) x3474))
(assert (= (x2283 (ite (> 256 x937) (x2706 2 x937) 0)) (x3641 1 x937)))
(assert (= 64 (x1883 (x1573 64 x2417 x3803))))
(assert (x561 x762))
(assert (x561 x1633))
(assert (= x336 (or x290 x2611)))
(assert (x7 1 (x2706 2 x3484)))
(assert (> (x1573 64 0 x614) 10000))
(assert (= (x2283 (* 2 x1402)) (x3641 x1402 1)))
(assert (x561 x2763))
(assert (=> (>= 10000 x1142) (= 0 (x1077 x1142))))
(assert (< (x1573 64 x1788 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x775 (x1573 64 x1037 14))))
(assert (x3099 (* 18446744073709551616 x1408)))
(assert (= (x1883 (x1573 64 x3121 5)) 64))
(assert (x3863 x2955 x2764 x1020 x732))
(assert (x3863 x1864 x869 x732 x1020))
(assert (= (or x1095 x1698) x1283))
(assert (x561 x1960))
(assert (x775 3402823669209384634633746074317682100000000000000))
(assert (> (x1573 64 x1765 x536) 10000))
(assert (x7 100000 x3653))
(assert (x1782 x2379 18446744073709551616))
(assert (x561 x2469))
(assert (< (x1573 64 65535 x3982) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x659))
(assert (= (x1077 (x1573 64 x2651 5)) (x1573 64 x2651 5)))
(assert (= (x1077 1844674407370955) 0))
(assert (x7 18446744073709551616 x3571))
(assert (x2462 x930))
(assert (=> (<= x1731 10000) (= (x1077 x1731) 0)))
(assert (= (and x1403 x309) x1709))
(assert (x3863 x3518 x3320 x869 x1864))
(assert (= x484 (and x2960 (not x1560))))
(assert (x3099 (* x652 18446744073709551616)))
(assert (x1721 256))
(assert (x1721 x224))
(assert (x2481 x3127))
(assert (= x2175 (or x2154 x3087)))
(assert (x1782 x796 340282366920938463463374607431768211456))
(assert (x3863 x2764 x2955 x528 x1835))
(assert (x1996 x547))
(assert (= (x1077 (+ 1 x1505)) (x1077 x1505)))
(assert (x79 (* 4294967296 x340) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1802))
(assert (= (or x1447 x666) x2667))
(assert (x7 4 x1471))
(assert (= (or x1677 x2243) x1004))
(assert (x775 65535))
(assert (= 9 (x3318 (x1573 64 x1419 9))))
(assert (x1721 x2932))
(assert (x561 x313))
(assert (x2855 x1207 (- x1886 x528)))
(assert (= (x73 (x1573 64 x1297 14)) x1297))
(assert (x561 x1787))
(assert (x561 x1349))
(assert (x3863 x2955 x2764 x1924 x1595))
(assert (= (or x195 x2682) x2328))
(assert (x561 x227))
(assert (x79 (* 4294967296 x3615) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1573 64 x1064 x2735) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2912 (=> (and (= x2758 (< 65535 x3056)) (or (and (and (= x3094 x468) (= x3056 x2222)) (not x2758)) (and (and (= (x3797 x3056 16) x2222) (= x468 (+ 16 x3094))) x2758))) x1342)))
(assert (= x1024 (and x286 x2779)))
(assert (x561 x1361))
(assert (= (x1077 x824) (x1077 (+ x824 1))))
(assert (= x879 (and x495 x2973)))
(assert (x79 (* x1482 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x775 (x1573 64 0 x126))))
(assert (= x3548 (=> (and (or (and x3881 (= x3603 (ite x3881 1 0))) (and (and (= (x1573 64 0 x3322) x349) (= (x3974 x349) x1871) (= (ite (< 0 x1871) 1 0) x3603) (<= x1871 1099511627775)) (not x3881))) (and (= (x1573 64 x1180 14) x269) (= x1180 (ite x2973 1 0)) (= (x1573 64 x1539 x269) x3322) (= (x1637 16777215 x2865) x1539) (= 0 x1324) (= (> x2322 0) x3881) (= x2322 (x1413 x3091)) (= x3091 (x1573 64 0 x3322)) (>= 1099511627775 x2322))) x2196)))
(assert (x1996 x1151))
(assert (x561 x2248))
(assert (x1782 x3348 340282366920938463463374607431768211456))
(assert (x1996 x173))
(assert (= x1433 (and x551 x1487)))
(assert (= x606 x2601))
(assert (x2855 x1207 (- x1886 x2764)))
(assert (< 10000 (x1573 64 0 x2606)))
(assert (x2855 x1020 (- x732 x1886)))
(assert (x3863 x2955 x2764 x1835 x528))
(assert (=> (>= 10000 x3407) (= 0 (x1077 x3407))))
(assert (x561 x910))
(assert (= (x3797 x1314 4) (x34 x1314 16)))
(assert (x3863 x1924 x1595 x3320 x3518))
(assert (x3863 x1595 x1924 x1020 x732))
(assert (= x2053 (=> (and (and (= (x3641 x1954 4) x1244) (= x690 (= x1244 0))) (or (and (not x690) (and (= x208 (+ 4 x3034)) (= x3790 x1244))) (and x690 (and (= x3790 x1954) (= x3034 x208))))) x3967)))
(assert (x3863 x1886 x1207 x1020 x732))
(assert (x3204 x221 1000000000000000000000000))
(assert (= (or x1813 x960) x3117))
(assert (x79 x3070 340282366920938463463374607431768211456))
(assert (= (x3318 (x1573 64 x1788 14)) 14))
(assert (x79 (* x1402 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x7 6277101735386680763835789423207666416102355444464034512896 x3010))
(assert (= x1590 (and x2714 (not x3201))))
(assert (x2855 x3518 (- x3320 x869)))
(assert (x561 x2856))
(assert (= x2450 (x73 (x1573 64 x2450 x1086))))
(assert (x561 x1061))
(assert (x1721 (- x3320 x1924)))
(assert (= x309 (or x2722 x1002)))
(assert (x511 x3518 x3320 x1835 x528))
(assert (x7 340282366920938463463374607431768211456 x3488))
(assert (= (x2283 (* 4 x3181)) (x3641 x3181 2)))
(assert (x561 x2080))
(assert (x1979 x1226))
(assert (= (x1883 (x1573 64 x637 14)) 64))
(assert (x1721 1000000))
(assert (= (x1077 16777215) 0))
(assert (= (x3797 x425 8) (x34 x425 256)))
(assert (x561 x976))
(assert (x561 x2595))
(assert (x79 (* x945 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3863 x1207 x1886 x3320 x3518))
(assert (x2855 x3320 (- x3518 x1207)))
(assert (x1782 x166 4))
(assert (= x2891 (and x2509 x1437)))
(assert (= x637 (x73 (x1573 64 x637 14))))
(assert (x79 (ite (< x721 256) (x2706 2 x721) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x514 (or x3072 x2130)))
(assert (x561 x1126))
(assert (= (and (not x2140) x2163) x1014))
(assert (x1782 x75 16))
(assert (x561 x413))
(assert (= x2749 (=> (= (= 0 x3552) x341) (and (=> (and (and (= x2020 x62) (= x3215 x3670) (= x3191 x2854) (= x2525 608)) x341) x3568) (=> (and (not x341) (and (and (= (x3772 x1203) x726) (= x3272 (x1573 64 x370 x112)) (= (* x726 100000000000000) x2626) (= (+ 1 x3272) x1203) (= x1788 (ite x2973 1 0)) (= (x1573 64 x1848 x122) x112) (>= 1099511627775 x1897) (= x2307 896) (= (x1573 64 x1788 14) x122) (>= 18446744073709551615 x368) (= x2875 (x1413 x3272)) (<= x726 18446744073709551615) (= x1897 (x3974 x3272)) (>= 281474976710655 x3242) (= x1581 (< x3191 x2626)) (= (x2088 x1203) x368) (= x3242 (x600 x1203)) (>= 1099511627775 x2875) (= 896 x1649) (= (x1637 16777215 x2865) x1848)) (or (and (not x1581) (and (= x3570 (* 100000000000000 x726)) (= x188 0) (= x3570 x1835))) (and (and (= x1099 (x1637 18446744073709551615 x2232)) (= x2272 0) (>= 340282366920938463463374607431768211455 x3191) (= (x2842 (- x726 x3467)) x2232) (not (< x726 x3467)) (= x1835 x3191) (= (x1637 18446744073709551615 x3368) x3467) (= x188 x1099) (= 100000000000000 x813) (= (x34 x3191 100000000000000) x3368)) x1581)))) x427)))))
(assert (= (x3318 (x1573 64 x3551 14)) 14))
(assert (x561 x2959))
(assert (x561 x451))
(assert (x1782 x1003 18446744073709551616))
(assert (= (x73 (x1573 64 0 x1432)) 0))
(assert (x1996 1000000000000000000000000))
(assert (= x542 (or x837 x2571)))
(assert (x1721 x422))
(assert (x561 x1817))
(assert (x561 x1785))
(assert (< (x1573 64 x910 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1634 (and x51 x1665)))
(assert (x561 x3316))
(assert (= (and x1556 (not x1663)) x2847))
(assert (x561 x1920))
(assert (= (=> (and (or (and (and (= x1275 x2830) (= x1558 x1200)) (not x1987)) (and x1987 (and (= x1200 (x3797 x1558 8)) (= x2830 (+ 8 x1275))))) (= x1987 (< 255 x1558))) x978) x1635))
(assert (= x2214 (or x878 x2868)))
(assert (x561 x99))
(assert (= x3166 (or x1206 x3346)))
(assert (= x3007 (or x1783 x1891)))
(assert (x7 1 (x2706 2 x1858)))
(assert (= (x34 x779 2) (x3797 x779 1)))
(assert (x1996 x1519))
(assert (x511 x1595 x1924 x869 x1864))
(assert (< 10000 (x1573 64 x2417 x126)))
(assert (= x3023 (x3318 (x1573 64 x3335 x3023))))
(assert (x561 x1534))
(assert (x79 (* 4 x1471) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x3080))
(assert (= x1556 (or x3585 x3377)))
(assert (x497 x3325))
(assert (x1721 (- x1835 x1207)))
(assert (x1721 x652))
(assert (x561 x1609))
(assert (= (and x2234 x2096) x2934))
(assert (x3590 x857))
(assert (= x152 (and x2823 (not x2244))))
(assert (x3863 x1595 x1924 x732 x1020))
(assert (= (x1077 (+ x298 1)) (x1077 x298)))
(assert (not (x775 (x1573 64 x2066 9))))
(assert (x561 x3047))
(assert (= (=> (= x3442 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3693)) (and (=> (and x3442 (and (and (= x3882 (x1573 64 0 x2984)) (= x821 1) (= 0 x116) (= x617 (x3797 x779 1)) (= x2229 (= x617 0)) (= (x462 x3882) x779) (= (+ x824 1) x2984)) (or (and (and (= 1 x1478) (= x807 0)) (not x2229)) (and (= x1478 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2229)))) x539) (=> (and (not x3442) (= x3693 x2431)) x3035))) x3699))
(assert (= (and (not x3332) x1679) x2089))
(assert (= (or x2465 x406) x2163))
(assert (x1721 (- x1835 x1886)))
(assert (= (x73 (x1573 64 0 x126)) 0))
(assert (= (x1883 (x1573 64 0 x126)) 64))
(assert (x1721 (- x1924 x1886)))
(assert (= x182 (and x1662 x3536)))
(assert (x1721 x676))
(assert (=> (>= 10000 x1765) (= 0 (x1077 x1765))))
(assert (x3863 x1207 x1886 x528 x1835))
(assert (x511 x528 x1835 x869 x1864))
(assert (x561 x1527))
(assert (x3099 (* x2666 256)))
(assert (x1996 x2863))
(assert (= 64 (x1883 (x1573 64 x2451 x1588))))
(assert (= (x1883 (x1573 64 x2463 x2954)) 64))
(assert (x1721 x969))
(assert (x79 (* x2804 65536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3204 x1498 1000000))
(assert (= (and x1056 (not x907)) x3073))
(assert (< (x1573 64 x3335 x3023) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1012))
(assert (not (x775 (x1573 64 x3491 5))))
(assert (= 9 (x3318 (x1573 64 x1555 9))))
(assert (= (and x1360 (not x950)) x2005))
(assert (x1721 (- x1020 x1207)))
(assert (x561 x3084))
(assert (x561 x2609))
(assert (= x614 (x3318 (x1573 64 x1113 x614))))
(assert (= x993 (and x1740 (not x1370))))
(assert (= (or x2005 x684) x3213))
(assert (x1721 x2161))
(assert (= x1102 (x73 (x1573 64 x1102 14))))
(assert (not (x775 (x1573 64 0 x2410))))
(assert (= (x3797 x957 8) (x34 x957 256)))
(assert (x561 x372))
(assert (= (x1077 x2858) (x1077 (+ x2858 1))))
(assert (< (x1573 64 x2066 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1883 (x1573 64 0 x2984)) 64))
(assert (x3099 (* 65536 x575)))
(assert (= (x2283 (* x102 65536)) (x3641 x102 16)))
(assert (= (and (not x2803) x1386) x161))
(assert (x561 x610))
(assert (x561 x167))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2628 x1850)))
(assert (x561 x2878))
(assert (x1996 x1816))
(assert (x561 x3236))
(assert (= (x34 x3316 16) (x3797 x3316 4)))
(assert (< (x1573 64 x2451 x1588) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x34 x2863 65536) (x3797 x2863 16)))
(assert (= (and x2282 x1440) x1689))
(assert (x561 x1911))
(assert (x561 x1217))
(assert (x561 x2225))
(assert (x561 x3736))
(assert (= (and x2256 (not x2639)) x3111))
(assert (x3863 x528 x1835 x869 x1864))
(assert (not (x775 (x1573 64 x3484 x2742))))
(assert (x1721 x3735))
(assert (= (and x1014 x2943) x550))
(assert (= (=> (and (or (and x3798 (and (= x2494 x350) (= x3383 x2009))) (and (not x3798) (and (= x2009 (+ 2 x3383)) (= x2494 x3363)))) (and (= (x3641 x350 2) x3363) (= (= 0 x3363) x3798))) x3806) x2050))
(assert (= (x1077 (x1573 64 x1477 x2421)) (x1573 64 x1477 x2421)))
(assert (= x2363 (and x1490 x1631)))
(assert (x1721 x3859))
(assert (x561 x2074))
(assert (x561 x652))
(assert (x561 x2101))
(assert (x1782 x1552 4294967296))
(assert (x2855 x1207 (- x1886 x3518)))
(assert (x561 x1146))
(assert (x775 254742742))
(assert (= (x1883 (x1573 64 x1218 9)) 64))
(assert (x1721 (- x1835 x869)))
(assert (x79 (* 340282366920938463463374607431768211456 x629) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2283 (* 4 x3790)) (x3641 x3790 2)))
(assert (x561 x132))
(assert (x1996 x1516))
(assert (x561 x904))
(assert (x79 (* 4294967296 x3594) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1108))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1363 14)))
(assert (= x3643 (and x1250 x3323)))
(assert (x561 x3400))
(assert (x1782 x3890 18446744073709551616))
(assert (x1782 x2572 256))
(assert (= (and (not x2094) x3234) x1772))
(assert (= (or x3734 x2132) x2015))
(assert (= (or x1939 x2227) x3676))
(assert (= x2974 (=> (and (and (= (= 0 x1320) x2848) (= (x3641 x67 32) x1320)) (or (and (and (= x3053 x1784) (= x3859 x67)) x2848) (and (not x2848) (and (= (+ x3053 32) x1784) (= x1320 x3859))))) x2826)))
(assert (x2855 x1924 (- x1595 x732)))
(assert (x561 x530))
(assert (x497 x2371))
(assert (x2855 x3518 (- x3320 x2955)))
(assert (x1782 x2555 65536))
(assert (= (or x123 x856) x1034))
(assert (= (x1077 (x1573 64 x1731 x1760)) (x1573 64 x1731 x1760)))
(assert (x561 x1363))
(assert (x1979 x930))
(assert (= 0 (x1077 1000000000000000000)))
(assert (x7 340282366920938463463374607431768211456 x3622))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1143 5)))
(assert (x561 x788))
(assert (x561 x3368))
(assert (x561 x3718))
(assert (x561 x3663))
(assert (= (=> (and (and (= x1252 (= x1430 0)) (= (x3641 x3859 16) x1430)) (or (and (and (= x1430 x3313) (= (+ 16 x1784) x3780)) (not x1252)) (and x1252 (and (= x3780 x1784) (= x3313 x3859))))) x2707) x2826))
(assert (= x3892 (and x3985 (not x3065))))
(assert (x1721 (- x3320 x528)))
(assert (x3863 x3320 x3518 x1020 x732))
(assert (x1721 x446))
(assert (x2855 x1886 (- x1207 x1020)))
(assert (x561 x324))
(assert (= (and x2334 x874) x2))
(assert (x511 x2764 x2955 x1886 x1207))
(assert (= (=> (and (or (and x1104 (and (= (+ x2435 4) x3565) (= x335 (x3797 x3936 4)))) (and (and (= x335 x3936) (= x3565 x2435)) (not x1104))) (= (< 15 x3936) x1104)) x3804) x397))
(assert (x561 x316))
(assert (= (=> (and (= (> x173 255) x1344) (or (and (and (= x3410 (+ x2454 8)) (= x1074 (x3797 x173 8))) x1344) (and (and (= x173 x1074) (= x3410 x2454)) (not x1344)))) x2125) x2535))
(assert (= (=> (and (= (ite (> x3417 1) (+ x2237 1) x2237) x205) (= x2255 (+ x205 (x3641 x1903 8)))) x1773) x1811))
(assert (= x3815 (=> (and (or (and (and (= x2036 (+ x1103 32)) (= x2885 (x3797 x610 32))) x1094) (and (not x1094) (and (= x1103 x2036) (= x610 x2885)))) (= x1094 (> x610 4294967295))) x2027)))
(assert (= x3323 (and x1688 x1055)))
(assert (x561 x3855))
(assert (x775 100000000000))
(assert (x3863 x1886 x1207 x3518 x3320))
(assert (x2855 x1886 (- x1207 x2955)))
(assert (x1721 x2494))
(assert (= (x1077 (x1573 64 x3491 5)) (x1573 64 x3491 5)))
(assert (x1721 (- x1924 x3518)))
(assert (x2855 x1864 (- x869 x2764)))
(assert (x1721 (- x869 x1924)))
(assert (not (x775 (x1573 64 x682 x250))))
(assert (= x1369 (and x11 (not x3258))))
(assert (x561 x2114))
(assert (x1996 x3370))
(assert (=> (<= x3884 10000) (= 0 (x1077 x3884))))
(assert (= (=> (and (= x1694 x3127) (= (x2842 (- x1032 1)) x1694) (= x1032 (ite (< 1 x187) (+ 1 x3033) x3033))) x1406) x2704))
(assert (= x1143 (x73 (x1573 64 x1143 5))))
(assert (= x2556 (and x1658 (not x2634))))
(assert (x2855 x2955 (- x2764 x1886)))
(assert (= x2819 (or x744 x3892)))
(assert (= (=> (and (= x2596 (> x166 3)) (or (and (not x2596) (and (= x2049 x166) (= x2963 x2458))) (and x2596 (and (= x2049 (x3797 x166 2)) (= (+ x2458 2) x2963))))) x3715) x647))
(assert (x7 1 (x2706 2 x2268)))
(assert (= 64 (x1883 (x1573 64 x367 x1616))))
(assert (x561 x2211))
(assert (= x858 (or x1338 x3468)))
(assert (x775 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1782 x418 256))
(assert (x775 18446744073709551615))
(assert (x3863 x2764 x2955 x1835 x528))
(assert (x561 x2743))
(assert (= (x1573 64 x910 9) (x1077 (x1573 64 x910 9))))
(assert (= x2417 (x73 (x1573 64 x2417 x126))))
(assert (x561 x3242))
(assert (x3863 x3518 x3320 x1020 x732))
(assert (= (and x3460 x1137) x3000))
(assert (= x424 (=> (and (or (and (and (= 128 x3487) (= x1003 (x3797 x365 128))) x1545) (and (and (= x1003 x365) (= x3487 0)) (not x1545))) (and (= x224 (+ (x3641 x3746 8) x2057)) (= (ite (> x2881 1) (+ 1 x2762) x2762) x2057) (= x3126 (x1573 64 x224 x2189)) (= (+ x1744 1) x2189) (= (x894 x3126) x365) (= x1545 (> x365 340282366920938463463374607431768211455)))) x3909)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1836 9)))
(assert (x561 x3939))
(assert (x1721 (- x1595 x3320)))
(assert (x1782 x2106 65536))
(assert (= (and x1933 x501) x1562))
(assert (x561 x3123))
(assert (x3590 x753))
(assert (x1489 x1374))
(assert (= (x34 x1519 256) (x3797 x1519 8)))
(assert (x561 x2268))
(assert (= (x73 (x1573 64 x1037 14)) x1037))
(assert (x1721 x528))
(assert (= x1144 (and x2175 x2715)))
(assert (x997 x3013))
(assert (= (x73 (x1573 64 x1108 14)) x1108))
(assert (not (x775 (x1573 64 x1177 x126))))
(assert (x511 x1595 x1924 x2764 x2955))
(assert (not (x775 (x1573 64 x612 x3873))))
(assert (= x2417 (x73 (x1573 64 x2417 x1851))))
(assert (x561 x3228))
(assert (x561 x3822))
(assert (x1996 x762))
(assert (= 64 (x1883 (x1573 64 x1404 x2479))))
(assert (x1979 x2865))
(assert (x1721 (- x2955 x732)))
(assert (= (x1077 (x1573 64 0 x126)) (x1573 64 0 x126)))
(assert (not (x775 (x1573 64 x3407 14))))
(assert (= x2228 (and (not x1639) x3379)))
(assert (= (and x2782 x1541) x632))
(assert (= (x3797 x1558 8) (x34 x1558 256)))
(assert (= (x1077 (x1573 64 x1682 14)) (x1573 64 x1682 14)))
(assert (= (or x932 x3506) x604))
(assert (= (x1883 (x1573 64 x2325 9)) 64))
(assert (= (=> (and (= x3925 (- 255 (ite (= 0 (x3641 x2512 1)) x219 (+ x219 1)))) (= (+ (x3641 x1410 8) x3925) x3022)) x3515) x1821))
(assert (= x2173 (and (not x1354) x3634)))
(assert (= (x1077 (x1573 64 x1113 x2434)) (x1573 64 x1113 x2434)))
(assert (= (x3318 (x1573 64 0 14)) 14))
(assert (> (x1573 64 x3916 x32) 10000))
(assert (x561 x3216))
(assert (x561 x1693))
(assert (= x847 (and x3642 x3014)))
(assert (x2855 x528 (- x1835 x2764)))
(assert (x561 x2906))
(assert (x561 x1499))
(assert (x561 x3153))
(assert (= x2734 (=> (and (or (and (and (= x2299 x3250) (= x806 x2716)) (not x3214)) (and (and (= (x3797 x806 16) x2716) (= x3250 (+ x2299 16))) x3214)) (= x3214 (> x806 65535))) x1028)))
(assert (= (=> (and (or (and (and (= x1507 x1129) (= x1936 x1482)) x710) (and (not x710) (and (= x3362 x1936) (= (+ 4 x1507) x1129)))) (and (= (x3641 x1482 4) x3362) (= (= 0 x3362) x710))) x3875) x267))
(assert (= (x34 x3573 340282366920938463463374607431768211456) (x3797 x3573 128)))
(assert (= (=> (and (= x2873 (< 18446744073709551615 x2688)) (or (and x2873 (and (= (x3797 x2688 64) x214) (= (+ 64 x183) x3372))) (and (not x2873) (and (= x2688 x214) (= x183 x3372))))) x2808) x780))
(assert (x561 x2065))
(assert (= x1932 (or x845 x1941)))
(assert (= (and x2396 x3150) x2311))
(assert (x124 x629))
(assert (x561 x3603))
(assert (= (or x2898 x2841) x1665))
(assert (= (and (not x2308) x44) x3820))
(assert (x561 x2241))
(assert (= (and x2432 x1707) x1119))
(assert (x1996 x1314))
(assert (x2855 x528 (- x1835 x3518)))
(assert (x3863 x1924 x1595 x528 x1835))
(assert (= x1860 x39))
(assert (x2855 x1595 (- x1924 x2955)))
(assert (= (or x2745 x603) x2868))
(assert (x1996 x832))
(assert (= x74 (and x641 (not x3695))))
(assert (x561 x1471))
(assert (= (x1573 64 x1218 9) (x1077 (x1573 64 x1218 9))))
(assert (x561 x1106))
(assert (= x2557 (or x882 x3507 x3992 x30)))
(assert (= x769 (=> (and (and (= x2469 (x3641 x340 32)) (= x1729 (= x2469 0))) (or (and (and (= x156 x1316) (= x2804 x340)) x1729) (and (and (= x2469 x2804) (= x1316 (+ 32 x156))) (not x1729)))) x3413)))
(assert (x1782 x2222 256))
(assert (= x2393 (or x239 x2275)))
(assert (= x778 (or x550 x184)))
(assert (x561 x558))
(assert (x561 x1461))
(assert (=> (>= 10000 x1080) (= (x1077 x1080) 0)))
(assert (x3099 (ite (> 256 x3647) (x2706 2 x3647) 0)))
(assert (x561 x1317))
(assert (= x1154 (or x906 x1135)))
(assert (= (x34 x1372 16) (x3797 x1372 4)))
(assert (x561 x2108))
(assert (x1721 x1408))
(assert (= x3452 (=> (= x2926 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2471)) (and (=> (and (= 0 x3022) x2926) x3515) (=> (and (not x2926) (and (and (= (x3641 x902 128) x925) (= (+ x2302 1) x1712) (= (x264 x1952) x902) (= x1952 (x1573 64 x2471 x1712)) (= x3280 (= x925 0))) (or (and (not x3280) (and (= x925 x1146) (= 128 x3019))) (and (and (= 0 x3019) (= x902 x1146)) x3280)))) x2093)))))
(assert (= (x3318 (x1573 64 x1113 x2434)) x2434))
(assert (= (x3797 x435 128) (x34 x435 340282366920938463463374607431768211456)))
(assert (= (and x3685 (not x638)) x3585))
(assert (x1996 x1799))
(assert (x561 x1936))
(assert (= (x3318 (x1573 64 0 x614)) x614))
(assert (= 64 (x1883 (x1573 64 x2624 5))))
(assert (x561 x1438))
(assert (x561 x2277))
(assert (x7 2 x1402))
(assert (x3099 x1922))
(assert (x1996 x2361))
(assert (= (or x3347 x1951) x3860))
(assert (x561 x688))
(assert (= (x1077 (x1573 64 x3064 5)) (x1573 64 x3064 5)))
(assert (x561 x1940))
(assert (x7 256 x2666))
(assert (x561 x1835))
(assert (x3204 x3947 100000000000000))
(assert (x561 x3008))
(assert (= x3808 (and x3450 x2957)))
(assert (= x387 (and x1301 (not x1368))))
(assert (x7 2 x2512))
(assert (= x900 (=> (and (= (< 3 x1816) x2094) (or (and (and (= x344 x3753) (= x1816 x2445)) (not x2094)) (and x2094 (and (= x2445 (x3797 x1816 2)) (= (+ x3753 2) x344))))) x455)))
(assert (=> (>= 10000 x682) (= (x1077 x682) 0)))
(assert (x1721 (- x1595 x1020)))
(assert (x1721 (- x1207 x1595)))
(assert (=> (>= 10000 x2043) (= 0 (x1077 x2043))))
(assert (not (x775 (x1573 64 0 x3322))))
(assert (x3863 x3518 x3320 x2764 x2955))
(assert (= (=> (and (or (and (and (= x2575 (x3797 x1463 16)) (= x1991 (+ x3683 16))) x40) (and (not x40) (and (= x1991 x3683) (= x2575 x1463)))) (= (> x1463 65535) x40)) x3700) x3652))
(assert (< (x1573 64 x612 x3873) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x2697 x147 x2192 x3238) x1589))
(assert (= (or x727 x3723) x3786))
(assert (x3099 (* x340 4294967296)))
(assert (x561 x3965))
(assert (x3099 (* 16 x3345)))
(assert (= (=> (= x3216 1) x318) x777))
(assert (x561 x1102))
(assert (x1721 (- x1020 x3320)))
(assert (x561 x2712))
(assert (x1721 x1937))
(assert (< (x1573 64 0 x1647) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1782 x806 65536))
(assert (x561 x736))
(assert (= 0 (x1077 340282366920938463463374607431768211455)))
(assert (x561 x2445))
(assert (x561 x1880))
(assert (= (and (not x551) x1487) x209))
(assert (= x417 (or x772 x1592)))
(assert (= (x1573 64 x1555 9) (x1077 (x1573 64 x1555 9))))
(assert (= (x1077 (+ x982 1)) (x1077 x982)))
(assert (< 10000 (x1573 64 x1113 x2434)))
(assert (=> (>= 10000 x1419) (= (x1077 x1419) 0)))
(assert (= (x2283 (* 2 x2070)) (x3641 x2070 1)))
(assert (= (x34 x173 256) (x3797 x173 8)))
(assert (= x207 (and x230 x2596)))
(assert (= (x3641 x448 64) (x2283 (* 18446744073709551616 x448))))
(assert (=> (<= x1064 10000) (= 0 (x1077 x1064))))
(assert (= (x3641 x67 32) (x2283 (* 4294967296 x67))))
(assert (x1721 (- x1207 x1864)))
(assert (x561 x2168))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3551 14)))
(assert (x561 x643))
(assert (x3099 x930))
(assert (x1721 (x2706 2 x3895)))
(assert (= x1206 (and x2278 (not x2492))))
(assert (x1996 x2839))
(assert (= x1026 (=> (and (= (< 4294967295 x3124) x1276) (or (and x1276 (and (= x2777 (x3797 x3124 32)) (= (+ 32 x3855) x3219))) (and (not x1276) (and (= x3124 x2777) (= x3855 x3219))))) x3543)))
(assert (= (x34 x1431 16) (x3797 x1431 4)))
(assert (x1782 x3885 18446744073709551616))
(assert (x1979 x1149))
(assert (x561 x1448))
(assert (x561 x3025))
(assert (x2855 x1207 (- x1886 x869)))
(assert (= (x73 (x1573 64 0 x2145)) 0))
(assert (= 64 (x1883 (x1573 64 x1108 14))))
(assert (x561 x813))
(assert (= x1478 (x73 (x1573 64 x1478 x702))))
(assert (x7 1 (x2706 2 x2559)))
(assert (x2855 x1924 (- x1595 x1207)))
(assert (x561 x1457))
(assert (= (x3318 (x1573 64 x1539 x269)) x269))
(assert (x2855 x3320 (- x3518 x1595)))
(assert (= x3759 (or x3747 x437)))
(assert (x561 x2379))
(assert (= (x1883 (x1573 64 x2043 x2879)) 64))
(assert (x2855 x1595 (- x1924 x3320)))
(assert (= (x3797 x3519 1) (x34 x3519 2)))
(assert (x3863 x732 x1020 x528 x1835))
(assert (x3099 (* 256 x1830)))
(assert (= (and (not x1594) x2807) x2030))
(assert (= x3239 (x73 (x1573 64 x3239 14))))
(assert (x561 x2651))
(assert (x3863 x1207 x1886 x869 x1864))
(assert (= (x1883 (x1573 64 x370 x112)) 64))
(assert (= (or x2602 x3361) x2714))
(assert (x561 x1320))
(assert (x7 256 x3313))
(assert (x1721 (- x1886 x1020)))
(assert (x1782 x3289 16))
(assert (= x1832 (=> (and (= x3880 x1087) (= x180 x639) (= x3386 x3949) (= x3695 x163) (= x2765 x1595)) x252)))
(assert (x7 2 x446))
(assert (=> (>= 10000 x3550) (= (x1077 x3550) 0)))
(assert (= x1977 (and x295 x1021)))
(assert (x1721 (- x1595 x869)))
(assert (x730 x1046 x151))
(assert (= (x1883 (x1573 64 x676 x510)) 64))
(assert (x1721 x379))
(assert (not (x775 (x1573 64 x422 x3913))))
(assert (= (or x3899 x971) x3836))
(assert (= (x3641 x2161 2) (x2283 (* x2161 4))))
(assert (= (and (not x650) x83) x3150))
(assert (x561 x3458))
(assert (x561 x2863))
(assert (x561 x2790))
(assert (x561 x223))
(assert (= (=> (and (= x2308 (< 15 x1925)) (or (and (and (= x1737 (+ x1330 4)) (= x1151 (x3797 x1925 4))) x2308) (and (and (= x1151 x1925) (= x1737 x1330)) (not x2308)))) x1713) x990))
(assert (x561 x1812))
(assert (x561 x2025))
(assert (= (x1077 (+ 1 x1744)) (x1077 x1744)))
(assert (= x2463 (x73 (x1573 64 x2463 x2954))))
(assert (x3099 (* x3924 18446744073709551616)))
(assert (x1996 x2885))
(assert (x1996 x1577))
(assert (x511 x1595 x1924 x3320 x3518))
(assert (=> (<= x224 10000) (= (x1077 x224) 0)))
(assert (= x3515 (=> (= x3022 x2865) x3548)))
(assert (= (x2283 (* x3416 256)) (x3641 x3416 8)))
(assert (< 10000 (x1573 64 x1113 x614)))
(assert (x7 4294967296 x3594))
(assert (= (x1077 1000000000000000000000000) 0))
(assert (x7 1000000 x2133))
(assert (x3099 (* x350 4)))
(assert (x2855 x2764 (- x2955 x1886)))
(assert (not (x775 (x1573 64 x1478 x702))))
(assert (= (x3318 (x1573 64 0 x1647)) x1647))
(assert (not (x775 (x1573 64 x3416 x898))))
(assert (= x3232 (=> (and (and (= (= x1855 0) x2910) (= x1855 (x3641 x2932 4))) (or (and x2910 (and (= x2932 x1471) (= x1874 x1042))) (and (and (= x1471 x1855) (= (+ 4 x1042) x1874)) (not x2910)))) x172)))
(assert (= x2907 (and x2308 x44)))
(assert (x3863 x732 x1020 x3320 x3518))
(assert (x561 x575))
(assert (x1721 (- x3518 x2764)))
(assert (= (x1077 x794) (x1077 (+ x794 1))))
(assert (x2855 x869 (- x1864 x2955)))
(assert (x561 x3600))
(assert (x2855 x2764 (- x2955 x3320)))
(assert (= (=> (and (or (and (and (= (+ x409 8) x464) (= x2137 x789)) (not x2685)) (and x2685 (and (= x464 x409) (= x789 x1295)))) (and (= x2137 (x3641 x1295 8)) (= (= x2137 0) x2685))) x850) x315))
(assert (x2855 x528 (- x1835 x1864)))
(assert (x561 x3010))
(assert (x3863 x1835 x528 x869 x1864))
(assert (x3099 (* 340282366920938463463374607431768211456 x3622)))
(assert (x3863 x1020 x732 x3320 x3518))
(assert (= (x73 (x1573 64 x2992 9)) x2992))
(assert (x511 x1924 x1595 x732 x1020))
(assert (= (x3641 x1471 2) (x2283 (* 4 x1471))))
(assert (x3099 (* x3335 256)))
(assert (= x2585 (and x242 (not x1399))))
(assert (x1782 x2451 256))
(assert (< (x1573 64 x367 x1616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x73 (x1573 64 x1682 14)) x1682))
(assert (x2855 x869 (- x1864 x3320)))
(assert (= 5 (x3318 (x1573 64 x3064 5))))
(assert (not (x775 (x1573 64 x2099 14))))
(assert (x1996 x3124))
(assert (x561 x3195))
(assert (= (and x3082 x206) x168))
(assert (x2855 x1924 (- x1595 x528)))
(assert (x1979 x2493))
(assert (= (x3797 x1118 64) (x34 x1118 18446744073709551616)))
(assert (x3863 x2955 x2764 x1864 x869))
(assert (x1721 x1954))
(assert (x561 x2247))
(assert (= x3572 (or x2813 x3582)))
(assert (= (and x3360 (not x457)) x1740))
(assert (= x1938 (and (not x1259) x1842)))
(assert (=> (<= x636 10000) (= (x1077 x636) 0)))
(assert (x561 x2865))
(assert (x7 65536 x2804))
(assert (= x3803 (x3318 (x1573 64 x2417 x3803))))
(assert (= (x3318 (x1573 64 x370 x2735)) x2735))
(assert (x561 x623))
(assert (x1996 100000))
(assert (= 64 (x1883 (x1573 64 x1102 14))))
(assert (= x3483 (or x3784 x38)))
(assert (x3863 x1020 x732 x3518 x3320))
(assert (x2855 x732 (- x1020 x3320)))
(assert (x561 x1643))
(assert (x3099 x2466))
(assert (= (and (not x2159) x59) x3154))
(assert (not (x775 (x1573 64 x370 x112))))
(assert (= x669 (or x1986 x985)))
(assert (= (and x2438 x2844) x3102))
(assert (=> (>= 10000 x223) (= 0 (x1077 x223))))
(assert (x7 256 x1903))
(assert (x1721 x1903))
(assert (= (x2283 (* x216 65536)) (x3641 x216 16)))
(assert (= (x3318 (x1573 64 0 x2735)) x2735))
(assert (< (x1573 64 x2043 x2879) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1782 x3221 4294967296))
(assert (x561 x3856))
(assert (x1782 x2646 256))
(assert (= x3873 (x3318 (x1573 64 x612 x3873))))
(assert (not (x775 (x1573 64 x3242 9))))
(assert (= 64 (x1883 (x1573 64 x2604 x2389))))
(assert (x561 x3491))
(assert (= (and x3039 x3031) x971))
(assert (x561 x753))
(assert (x775 1844674407370955))
(assert (x79 (* x3228 65536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x79 (* x620 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3072 (and x3131 x1351)))
(assert (= (and x2607 x2012) x2787))
(assert (x561 x2267))
(assert (x1721 x2052))
(assert (= x2180 (or x2173 x3499)))
(assert (x1996 4))
(assert (x1782 x2347 2))
(assert (= (x3797 x714 1) (x34 x714 2)))
(assert (x1996 x2513))
(assert (= x3774 (and (not x120) x3962)))
(assert (= (x3641 x2052 128) (x2283 (* x2052 340282366920938463463374607431768211456))))
(assert (x1721 (- x2955 x869)))
(assert (= (x1883 (x1573 64 x2099 14)) 64))
(assert (x561 x1725))
(assert (x561 x1833))
(assert (= (x3797 x1353 8) (x34 x1353 256)))
(assert (= x1231 (and x1449 x3130)))
(assert (= (x3641 x1936 2) (x2283 (* x1936 4))))
(assert (= (or x2888 x2680) x3131))
(assert (> (x1573 64 x636 x2735) 10000))
(assert (= (and x2729 x1625) x2276))
(assert (x561 x2153))
(assert (x561 x3877))
(assert (x1996 x1010))
(assert (x561 x197))
(assert (x79 (* x1945 65536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3318 (x1573 64 x3813 9)) 9))
(assert (x79 (* x2906 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1414))
(assert true)
(assert (x1721 (- x2955 x1924)))
(assert (x561 x2428))
(assert (< 10000 (x1573 64 x3813 9)))
(assert (= (x1077 (x1573 64 x223 x3948)) (x1573 64 x223 x3948)))
(assert (= (and x2910 x757) x2079))
(assert (> (x1573 64 x2087 x2864) 10000))
(assert (x3099 (* x1146 18446744073709551616)))
(assert (x561 x2672))
(assert (x1721 (- x2764 x869)))
(assert (x1721 x3790))
(assert (x561 x3905))
(assert (x1721 100000000000000))
(assert (= x1701 (=> (and (or (and (and (= x2161 x3735) (= x2273 x1067)) x1021) (and (and (= x473 x3735) (= x2273 (+ 2 x1067))) (not x1021))) (and (= (= x473 0) x1021) (= x473 (x3641 x2161 2)))) x2449)))
(assert (x3099 (* 4 x3790)))
(assert (x79 (* x1410 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x775 9999999))
(assert (= 14 (x3318 (x1573 64 x3459 14))))
(assert (x511 x1207 x1886 x1595 x1924))
(assert (x2855 x1864 (- x869 x1207)))
(assert (x561 x423))
(assert (= (=> (and (and (= (x3641 x3817 32) x1524) (= x1959 (= x1524 0))) (or (and (not x1959) (and (= x1524 x2676) (= x3274 (+ 32 x3856)))) (and x1959 (and (= x3274 x3856) (= x2676 x3817))))) x939) x115))
(assert (=> (<= x1180 10000) (= (x1077 x1180) 0)))
(assert (= (x2283 (* 256 x612)) (x3641 x612 8)))
(assert (not (x775 (x1573 64 x676 x510))))
(assert (x3863 x1020 x732 x2955 x2764))
(assert (x561 x2604))
(assert (= (x2283 (* 256 x1478)) (x3641 x1478 8)))
(assert (= x3451 (and (not x1340) x944)))
(assert (x3099 (* x167 16)))
(assert (= (and x1999 x2164) x3060))
(assert (x511 x1886 x1207 x1835 x528))
(assert (x1721 (- x528 x1207)))
(assert (= (or x2500 x534) x718))
(assert (= (or x3787 x2382) x2721))
(assert (x561 x431))
(assert (= (or x563 x2042) x923))
(assert (= x1083 (and x2224 x2869)))
(assert (= 0 (x1077 65535)))
(assert (x561 x3348))
(assert (=> (>= 10000 x2661) (= 0 (x1077 x2661))))
(assert (x2855 x3518 (- x3320 x1595)))
(assert (= (x1883 (x1573 64 x2837 x614)) 64))
(assert (x1979 x3070))
(assert (x561 x3270))
(assert (= (x73 (x1573 64 x910 9)) x910))
(assert (x2855 x2955 (- x2764 x3320)))
(assert (x561 x3432))
(assert (x561 x1325))
(assert (x1996 x1875))
(assert (x561 x3300))
(assert (= (and (not x251) x808) x3849))
(assert (x561 x2232))
(assert (x561 x365))
(assert (< 10000 (x1573 64 x3239 14)))
(assert (x3099 x3709))
(assert (= x3005 (or x3821 x1199)))
(assert (= (and (not x1987) x2519) x833))
(assert (= (x1077 (+ x884 2)) (x1077 x884)))
(assert (< 10000 (x1573 64 65535 x3758)))
(assert (x561 x1295))
(assert (x79 x3709 18446744073709551616))
(assert (= (and x1100 (not x3108)) x2482))
(assert (x561 x2837))
(assert (x561 x2988))
(assert (x3863 x528 x1835 x1924 x1595))
(assert (x1996 x2790))
(assert (= (and x3891 x1387) x3135))
(assert (= x595 (and x1411 x2021)))
(assert (= (x3318 (x1573 64 x2450 x1086)) x1086))
(assert (x2855 x1886 (- x1207 x1864)))
(assert (x3204 x1686 1000000))
(assert (x561 x2678))
(assert (x561 x3326))
(assert (x3099 x2451))
(assert (= (or x1072 x2847) x1227))
(assert (x561 x3335))
(assert (x561 x3470))
(assert (= (x3318 (x1573 64 x1080 5)) 5))
(assert (x997 x3539))
(assert (= (x1077 (x1573 64 x422 x3913)) (x1573 64 x422 x3913)))
(assert (= x2602 (and x3610 (not x1340))))
(assert (= x1798 (and x3629 x1545)))
(assert (x561 x2191))
(assert (not (x775 (x1573 64 x223 x3948))))
(assert (= x1319 (=> (and (or (and x3425 (and (= (+ 2 x2990) x3355) (= (x3797 x2491 2) x2142))) (and (not x3425) (and (= x2990 x3355) (= x2491 x2142)))) (= (> x2491 3) x3425)) x713)))
(assert (< 10000 (x1573 64 0 x293)))
(assert (= (x1573 64 x278 14) (x1077 (x1573 64 x278 14))))
(assert (x1996 x2716))
(assert (x561 x340))
(assert (x561 x3884))
(assert (x1721 (- x3518 x1864)))
(assert (x497 x1101))
(assert (x561 x3907))
(assert (= x38 (and x1205 x1857)))
(assert (not (x775 (x1573 64 x1419 9))))
(assert (= x1753 (or x1970 x3960)))
(assert (= (x1883 (x1573 64 x2651 5)) 64))
(assert (x561 x3366))
(assert (x561 x1638))
(assert (x3099 x629))
(assert (x561 x1176))
(assert (= (x3797 x3124 32) (x34 x3124 4294967296)))
(assert (= 14 (x3318 (x1573 64 x1180 14))))
(assert (> (x1573 64 x3491 5) 10000))
(assert (x3863 x732 x1020 x1835 x528))
(assert (x1996 x3063))
(assert (x561 x1937))
(assert (x561 x2638))
(assert (x1721 x3518))
(assert (x1996 x3983))
(assert (x1996 x2646))
(assert (= x2514 (and x120 x3962)))
(assert (x3099 (* 16 x2932)))
(assert (x561 x1241))
(assert (x561 x1871))
(assert (x730 x3864 x3381))
(assert (= x1756 (and x2751 (not x3775))))
(assert (x511 x2955 x2764 x1886 x1207))
(assert (= (and x2619 x718) x3857))
(assert (x561 x2840))
(assert (x497 x3118))
(assert (x561 x1507))
(assert (x1782 x3976 256))
(assert (x561 x3463))
(assert (= (x2283 (* x902 340282366920938463463374607431768211456)) (x3641 x902 128)))
(assert (x3863 x2764 x2955 x3518 x3320))
(assert (= (x2283 (ite (< x1858 256) (x2706 2 x1858) 0)) (x3641 1 x1858)))
(assert (x2855 x1864 (- x869 x732)))
(assert (not (x775 (x1573 64 x3459 14))))
(assert (x1996 x3348))
(assert (= (x3318 (x1573 64 x910 9)) 9))
(assert (= (and (not x3437) x3340) x2554))
(assert (= x1312 (and x1560 x2960)))
(assert (x561 x2533))
(assert (x561 x2579))
(assert (x561 x1008))
(assert (= (and x1700 x3687) x1006))
(assert (< 10000 (x1573 64 x1142 14)))
(assert (x561 x370))
(assert (x3863 x1886 x1207 x1864 x869))
(assert (= (x3797 x1200 4) (x34 x1200 16)))
(assert (x561 x419))
(assert (x497 x2929))
(assert (not (x775 (x1573 64 x2624 5))))
(assert (x1721 (- x732 x528)))
(assert (x561 x888))
(assert (= x3934 (=> (and (or (and (and (= x1569 x75) (= x1911 x1495)) (not x146)) (and x146 (and (= x75 (x3797 x1569 8)) (= (+ x1911 8) x1495)))) (= (< 255 x1569) x146)) x42)))
(assert (> (x1573 64 x3551 14) 10000))
(assert (x2855 x3320 (- x3518 x2955)))
(assert (< (x1573 64 x2200 x2434) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1077 x795) (x1077 (+ x795 1))))
(assert (x561 x3713))
(assert (x561 x235))
(assert (> (x1573 64 x2463 x2954) 10000))
(assert (= x2223 (and x1754 x3330)))
(assert (x561 x1334))
(assert (x561 x635))
(assert (= (x34 x1922 256) (x3797 x1922 8)))
(assert (x561 x703))
(assert (x561 x3953))
(assert (x561 x2047))
(assert (not (x775 (x1573 64 255 x3545))))
(assert (x1996 x3289))
(assert (x561 x1875))
(assert (= (=> (and (= x3396 (- 255 (ite (= 0 (x3641 x1748 1)) x423 (+ x423 1)))) (= (+ (x3641 x1478 8) x3396) x2431)) x3035) x2456))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x636 x2735)))
(assert (x561 x970))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2651 5)))
(assert (= x3273 (or x580 x3497)))
(assert (x511 x1595 x1924 x1886 x1207))
(assert (= x1518 (and x3457 x667)))
(assert (= x2823 (or x1147 x2846)))
(assert (= 0 (x73 (x1573 64 0 x293))))
(assert (= x3733 (and (not x3130) x1449)))
(assert (x1721 x25))
(assert (= x2156 (and x1444 x2667)))
(assert (= (and x1409 (not x3442)) x882))
(assert (= x2656 (=> (and (or (and x720 (and (= (x3797 x2863 16) x418) (= x1787 (+ 16 x2905)))) (and (and (= x2905 x1787) (= x418 x2863)) (not x720))) (= (> x2863 65535) x720)) x1885)))
(assert (= x3315 (or x833 x994)))
(assert (x1782 x1093 4294967296))
(assert (x1996 x3550))
(assert (= (and x3915 x3844) x3546))
(assert (x561 x1003))
(assert (x561 x2009))
(assert (x561 x3893))
(assert (x561 x2084))
(assert (x3099 x2255))
(assert (x1721 (- x528 x1020)))
(assert (x561 x1961))
(assert (= (x1077 (+ 2 x824)) (x1077 x824)))
(assert (= (x1883 (x1573 64 x3064 5)) 64))
(assert (= x3816 (and (not x2472) x2484)))
(assert (= x1135 (and x2778 (not x3650))))
(assert (x561 x3561))
(assert (x1721 (x2706 2 x2702)))
(assert (= x3472 (and (not x1029) x1586)))
(assert (< 10000 (x1573 64 x1922 x3494)))
(assert (x1782 x1242 16))
(assert (x1721 (- x3518 x2955)))
(assert (x1996 x2466))
(assert (x1979 x3127))
(assert (< 10000 (x1573 64 x3416 x898)))
(assert (x3099 (* 4294967296 x3615)))
(assert (x561 x1226))
(assert (x3099 x3550))
(assert (x2855 x1835 (- x528 x1864)))
(assert (x561 x1380))
(assert (= x2468 (and x2540 x3727)))
(assert (x1782 x202 340282366920938463463374607431768211456))
(assert (x561 x3122))
(assert (= (=> (= x2432 (= x176 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and x2432 (and (and (= x1768 (= 0 x469)) (= (x3797 x1008 1) x469) (= x2638 1) (= 0 x1568) (= x1008 (x2570 x567))) (or (and (= x1765 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1768) (and (not x1768) (and (= x52 0) (= x1765 1)))))) x23) (=> (and (not x2432) (and (or (and (not x947) (and (= x448 x2344) (= x179 128))) (and (and (= x179 0) (= x448 x945)) x947)) (and (= x705 (+ 1 x1647)) (= (x894 x1212) x945) (= x947 (= 0 x2344)) (= x1212 (x1573 64 x176 x705)) (= (x3641 x945 128) x2344)))) x3026))) x3852))
(assert (x561 x2963))
(assert (x561 x2525))
(assert (x1721 (- x1020 x1924)))
(assert (x3099 (* 65536 x1254)))
(assert (x79 (* 18446744073709551616 x1817) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1258 (and x417 x720)))
(assert (= x1508 (=> (and (or (and x502 (and (= x1431 (x3797 x3976 8)) (= (+ x2553 8) x3244))) (and (and (= x2553 x3244) (= x1431 x3976)) (not x502))) (= (< 255 x3976) x502)) x3037)))
(assert (x1979 x2047))
(assert (= (=> (and (= x1676 x2666) (= (x2842 (- x14 1)) x1676) (= x14 (ite (< 1 x3608) (+ x1157 1) x1157))) x2091) x3390))
(assert (= 64 (x1883 (x1573 64 x223 x3948))))
(assert (= (=> (= x3255 x3853) x3674) x1724))
(assert (x79 (* x1176 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x339) x505) x1070))
(assert (= x2691 (and x414 (not x2293))))
(assert (x561 x1466))
(assert (=> (>= 10000 x2000) (= (x1077 x2000) 0)))
(assert (not (x775 (x1573 64 65535 x2857))))
(assert (= (and x3759 x1928) x2962))
(assert (x561 x1080))
(assert (= (and (not x1300) x2668) x1487))
(assert (x2855 x2764 (- x2955 x869)))
(assert (x561 x2116))
(assert (x1782 x263 4))
(assert (= (or x2353 x2934) x1309))
(assert (x561 x1845))
(assert (x561 x2068))
(assert (x1721 (- x1595 x3518)))
(assert (not (x775 (x1573 64 x1555 9))))
(assert (x1721 (- x1207 x869)))
(assert (= (and x858 (not x594)) x3303))
(assert (= x304 (or x43 x1690)))
(assert (not (x775 (x1573 64 x584 14))))
(assert (x1721 (- x1886 x869)))
(assert (= (or x1089 x2691) x3844))
(assert (x1721 (x2706 2 x1858)))
(assert (x3099 2))
(assert (= (=> (and (= (ite (<= x1241 6277101735386680763835789423207666416102355444464034512895) x752 (x2953 x800 x1241)) x776) (= (* x2817 6277101735386680763835789423207666416102355444464034512896) x800) (= x1241 (+ (x3641 x629 128) x2417)) (= x470 (* 6277101735386680763835789423207666416102355444464034512896 x2743)) (= (ite (not x1340) 1 0) x2817) (= x1190 (+ x1113 x470 x1496)) (or (= x800 0) (= x800 6277101735386680763835789423207666416102355444464034512896)) (= (* x1922 340282366920938463463374607431768211456) x1496) (= x752 (x371 (+ x800 x1241))) (or (= 0 x470) (= 6277101735386680763835789423207666416102355444464034512896 x470))) (and (=> (and (and (= x1457 1) (= x226 (x532 x2681)) (= 254 x3496) (= (x3641 x226 1) x3348) (= x2123 (x1573 64 1 14)) (= 16777215 x3542) (= (x1573 64 65535 x3758) x2681) (= 255 x1466) (= x1300 (= x3348 0)) (= (+ 2 x1752) x3758) (= x1752 (+ x2123 1))) (not x1340)) (and (=> (and (and (= x551 (> x3348 340282366920938463463374607431768211455)) (or (and x551 (and (= 128 x3843) (= (x3797 x3348 128) x169))) (and (and (= x3843 0) (= x3348 x169)) (not x551)))) (not x1300)) x2058) (=> (and (= x2929 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1300) x3988))) (=> (and x1340 (and (or (and (not x1051) (and (= x509 1) (= 0 x1079))) (and x1051 (= x509 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (= x3371 (x1573 64 0 x938)) (= 0 x781) (= x576 (x3797 x1224 1)) (= 0 x2025) (= (x1573 64 0 14) x795) (= (+ x795 1) x2302) (= 0 x3912) (= x1051 (= 0 x576)) (= (x532 x3371) x1224) (= (+ x2302 2) x938) (= 1 x1815)))) x1208))) x1860))
(assert (x1721 (- x3320 x1595)))
(assert (= x125 (x73 (x1573 64 x125 14))))
(assert (x775 6277101735386680763835789423207666416102355444464034512895))
(assert (x79 x2010 65536))
(assert (x561 x2049))
(assert (x561 x3170))
(assert (x7 256 x1295))
(assert (= (or x3102 x2643) x2632))
(assert (x561 x329))
(assert (x1721 x724))
(assert (= x3821 (and x242 x1399)))
(assert (not (x775 (x1573 64 x1682 14))))
(assert (= (x34 x214 4294967296) (x3797 x214 32)))
(assert (x561 x2307))
(assert (= (x1573 64 x2200 x2434) (x1077 (x1573 64 x2200 x2434))))
(assert (x1721 x1731))
(assert (x561 x3013))
(assert (= x86 (and (not x381) x531)))
(assert (= x2196 (=> (and (= (= x3603 0) x3738) (or (and (and (= x3480 (ite (= x3184 0) 1 0)) (>= 1099511627775 x3184) (= (x3974 x1139) x3184) (= x1139 (x1573 64 0 x3322))) x3738) (and (= x3480 1) (not x3738)))) x616)))
(assert (=> (<= x3459 10000) (= 0 (x1077 x3459))))
(assert (x1721 x1075))
(assert (x7 16 x1482))
(assert (x561 x1846))
(assert (= (x3318 (x1573 64 x1363 14)) 14))
(assert (x1721 (- x3518 x1835)))
(assert (x1996 x3236))
(assert (x561 x1548))
(assert (x561 x1766))
(assert (= x773 (and (not x2213) x105)))
(assert (x79 x1922 256))
(assert (x561 x1840))
(assert (x79 x681 18446744073709551616))
(assert (not (x775 (x1573 64 0 x2606))))
(assert (x1721 (- x2764 x1835)))
(assert (x561 x1912))
(assert (= (and x2424 x1445) x1723))
(assert (= (x1883 (x1573 64 x2200 x2434)) 64))
(assert (x1721 (- x528 x2764)))
(assert (x2112 x1800))
(assert (= (x3318 (x1573 64 x584 14)) 14))
(assert (x561 x1668))
(assert (= x1345 (and x3482 (not x3387))))
(assert (x561 x2502))
(assert (x7 16 x3345))
(assert (= x327 (or x152 x2312)))
(assert (x2855 x869 (- x1864 x528)))
(assert (> (x1573 64 x125 14) 10000))
(assert (> (x1573 64 0 14) 10000))
(assert (x561 x1392))
(assert (x1721 x3817))
(assert (x3863 x1020 x732 x1835 x528))
(assert (x1979 x3550))
(assert (= (and (not x1248) x3420) x3264))
(assert (= (x2283 (* x3345 16)) (x3641 x3345 4)))
(assert (= (or x2384 x1429) x2978))
(assert (x561 x2650))
(assert (= x636 (x73 (x1573 64 x636 x2735))))
(assert (= (=> (and (= x2715 (< 18446744073709551615 x3370)) (or (and (not x2715) (and (= x3370 x320) (= x1334 x2414))) (and x2715 (and (= (x3797 x3370 64) x320) (= (+ 64 x2414) x1334))))) x3799) x1268))
(assert (x561 x1133))
(assert (= x2042 (and (not x1838) x2920)))
(assert (= (x3318 (x1573 64 0 x938)) x938))
(assert (< (x1573 64 x370 x112) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1520))
(assert (x7 100000 x763))
(assert (= x556 (x73 (x1573 64 x556 x126))))
(assert (x79 (ite (> 256 x3484) (x2706 2 x3484) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x1883 (x1573 64 x1113 x2434))))
(assert (x3863 x2764 x2955 x3320 x3518))
(assert (x1996 x2451))
(assert (=> (<= x1251 10000) (= (x1077 x1251) 0)))
(assert (x1721 (- x869 x528)))
(assert (x1996 x1558))
(assert (= (=> (and (= (> x2650 3) x1587) (or (and (and (= x3033 (+ x107 2)) (= (x3797 x2650 2) x187)) x1587) (and (and (= x107 x3033) (= x2650 x187)) (not x1587)))) x2704) x2951))
(assert (= x1000 (=> (and (= x3880 x602) (= x1340 x163) (= x1575 x2765) (= x3386 x1948) (= x639 x3666)) x1832)))
(assert (x561 x2024))
(assert (= (x3318 (x1573 64 0 x2434)) x2434))
(assert (x1721 (- x3320 x869)))
(assert (x1782 x2400 4))
(assert (= x222 (and x369 x1019)))
(assert (= (or x2618 x1771) x2256))
(assert (x561 x173))
(assert (x2855 x1886 (- x1207 x3320)))
(assert (= (x3641 1 x791) (x2283 (ite (< x791 256) (x2706 2 x791) 0))))
(assert (= (x34 x1010 16) (x3797 x1010 4)))
(assert (x1721 x3851))
(assert (x1996 x2572))
(assert (= 64 (x1883 (x1573 64 x422 x3913))))
(assert (x561 x3293))
(assert (= (x1883 (x1573 64 x3416 x898)) 64))
(assert (=> (>= 10000 x3663) (= (x1077 x3663) 0)))
(assert (x1996 x558))
(assert (x561 x2582))
(assert (x79 (* x860 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2894))
(assert (x561 x3440))
(assert (x7 18446744073709551616 x2941))
(assert (x3099 (* x1304 256)))
(assert (x561 x3850))
(assert (= x3082 (or x3847 x3673)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1903 x3101)))
(assert (= x3595 (=> (and (or (and (and (= x3929 x2161) (= x1067 (+ x2144 4))) (not x1062)) (and (and (= x2161 x16) (= x2144 x1067)) x1062)) (and (= x3929 (x3641 x16 4)) (= x1062 (= 0 x3929)))) x1701)))
(assert (< 10000 (x1573 64 x612 x3873)))
(assert (= 64 (x1883 (x1573 64 x3335 x3023))))
(assert (x3590 x1005))
(assert (x561 x1748))
(assert (not (x775 (x1573 64 x1363 14))))
(assert (= (x1573 64 x904 x2652) (x1077 (x1573 64 x904 x2652))))
(assert (x79 (* 340282366920938463463374607431768211456 x3968) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2658))
(assert (x1996 x1789))
(assert (x1782 x2688 18446744073709551616))
(assert (x2855 x1924 (- x1595 x3518)))
(assert (x561 x2905))
(assert (= (and x2748 x3423) x1715))
(assert (=> (>= 10000 x2463) (= 0 (x1077 x2463))))
(assert (x1996 x2650))
(assert (= (and x1386 x2803) x2208))
(assert (= x2754 (and x2872 (not x569))))
(assert (x3863 x869 x1864 x1835 x528))
(assert (x3863 x1835 x528 x1886 x1207))
(assert (x79 (* x3488 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3318 (x1573 64 x1410 x601)) x601))
(assert (x79 (ite (> 256 x937) (x2706 2 x937) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (or (and (and (= x513 x1482) (= (+ 8 x3780) x1507)) (not x2472)) (and (and (= x3313 x1482) (= x3780 x1507)) x2472)) (and (= x2472 (= x513 0)) (= (x3641 x3313 8) x513))) x267) x2707))
(assert (x561 x3859))
(assert (= x3727 (or x669 x306)))
(assert (= x174 (or x2895 x1702)))
(assert (x561 x160))
(assert (= (x3318 (x1573 64 x2651 5)) 5))
(assert (x511 x1864 x869 x1595 x1924))
(assert (x1721 (- x1924 x2764)))
(assert (= (x1077 (x1573 64 x1102 14)) (x1573 64 x1102 14)))
(assert (= (x3797 x581 32) (x34 x581 4294967296)))
(assert (x1721 x1765))
(assert (x561 x1942))
(assert (x3863 x1864 x869 x1595 x1924))
(assert (< 10000 (x1573 64 0 x2145)))
(assert (x2855 x1924 (- x1595 x1835)))
(assert (not (x775 (x1573 64 0 x1432))))
(assert (not (x775 (x1573 64 0 x614))))
(assert (= (x73 (x1573 64 x3916 x32)) x3916))
(assert (x561 x1954))
(assert (x3099 (* x446 2)))
(assert (x1782 x48 16))
(assert (x561 x2483))
(assert (x3204 x3191 100000000000000))
(assert (not (x775 (x1573 64 x312 9))))
(assert (x1782 x2267 340282366920938463463374607431768211456))
(assert (x561 x513))
(assert (x1979 18446744073709551615))
(assert (= (x3797 x320 32) (x34 x320 4294967296)))
(assert (= x3242 (x73 (x1573 64 x3242 9))))
(assert (x1996 x335))
(assert (x561 x3574))
(assert (= (x34 x1925 16) (x3797 x1925 4)))
(assert (= (and x2117 x2754) x2021))
(assert (= x2665 (and x1051 x1470)))
(assert (x561 x3250))
(assert (< 10000 (x1573 64 x3342 x1613)))
(assert (x561 x3553))
(assert (x7 340282366920938463463374607431768211456 x1766))
(assert (= x2389 (x3318 (x1573 64 x2604 x2389))))
(assert (= (and x2175 (not x2715)) x2301))
(assert (x7 256 x3416))
(assert (x7 340282366920938463463374607431768211456 x1922))
(assert (= (or x1011 x2311) x2278))
(assert (< (x1573 64 x224 x2189) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1077 (x1573 64 x3746 x1744)) (x1573 64 x3746 x1744)))
(assert (= (x1883 (x1573 64 x636 x2735)) 64))
(assert (x561 x103))
(assert (x511 x1835 x528 x869 x1864))
(assert (= (x34 x3370 18446744073709551616) (x3797 x3370 64)))
(assert (= (x3641 1 x2463) (x2283 (ite (> 256 x2463) (x2706 2 x2463) 0))))
(assert (x561 x1684))
(assert (= (x1883 (x1573 64 x3239 14)) 64))
(assert (x561 x67))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x2417 x1851)))
(assert (= x2648 (or x408 (and x378 x1322))))
(assert (= x1842 (or x1578 x1059)))
(assert (x3863 x1207 x1886 x1595 x1924))
(assert (= (x3797 x3405 64) (x34 x3405 18446744073709551616)))
(assert (= (and (not x3716) x1624) x144))
(assert (not (x775 (x1573 64 0 x938))))
(assert (= (x1077 (x1573 64 0 x2984)) (x1573 64 0 x2984)))
(assert (= (=> (= (= x3211 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1853) (and (=> (and (= x3255 x3211) (not x1853)) x1724) (=> (and x1853 (and (or (and (and (= x1133 0) (= x176 1)) (not x1563)) (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x176) x1563)) (and (= (+ 1 x567) x1647) (= (x26 x1522) x3519) (= (x3797 x3519 1) x1209) (= 1 x2168) (= x1563 (= x1209 0)) (= (x1573 64 0 x1647) x1522) (= 0 x1120)))) x3852))) x2965))
(assert (x3863 x1924 x1595 x732 x1020))
(assert (x79 x2701 16777216))
(assert (x1721 (- x528 x2955)))
(assert (x2855 x1835 (- x528 x2764)))
(assert (x79 (ite (< x2463 256) (x2706 2 x2463) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x1573 64 x2325 9) 10000))
(assert (= x3610 (or x186 x2557)))
(assert (x2855 x1835 (- x528 x1924)))
(assert (x511 x732 x1020 x869 x1864))
(assert (= 64 (x1883 (x1573 64 255 x544))))
(assert (x2855 x2764 (- x2955 x1835)))
(assert (x1996 x3223))
(assert (< (x1573 64 x1534 x3145) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1996 x2401))
(assert (x3099 x3401))
(assert (x1782 x3370 18446744073709551616))
(assert (= x3336 (or x572 x790)))
(assert (= (=> (and (= (+ x134 (x3641 x224 8)) x2701) (= x134 (ite (> x623 1) (+ x2241 1) x2241))) x3240) x709))
(assert (= x143 (and x1340 x577)))
(assert (= x2870 x3199))
(assert (x561 x3853))
(assert (= x898 (x3318 (x1573 64 x3416 x898))))
(assert (= 64 (x1883 (x1573 64 x1113 x614))))
(assert (= x3715 (=> (and (= x2929 x1633) (= x2880 (ite (< 1 x2049) (+ 1 x2963) x2963)) (= (x2842 (- x2880 1)) x1633)) x3988)))
(assert (x511 x3320 x3518 x869 x1864))
(assert (x561 x2968))
(assert (= (or x3867 x2527) x1379))
(assert (= (x34 x3221 4294967296) (x3797 x3221 32)))
(assert (x3863 x732 x1020 x1924 x1595))
(assert (< 10000 (x1573 64 x2451 x1588)))
(assert (x561 x1426))
(assert (x561 x3345))
(assert (=> (>= 10000 x3991) (= 0 (x1077 x3991))))
(assert (x561 x3412))
(assert (= (x2283 (* 2 x2746)) (x3641 x2746 1)))
(assert (= (or x63 x359 x3588 x2599) x2940))
(assert (= (x73 (x1573 64 x903 14)) x903))
(assert (= (or x2102 x2882) x44))
(assert (= x1138 (and x1488 x591)))
(assert (= (and x1882 x485) x2169))
(assert (x3863 x1835 x528 x3518 x3320))
(assert (x561 x648))
(assert (x561 x2930))
(assert (not (x775 (x1573 64 x1102 14))))
(assert (x7 1 (x2706 2 x3895)))
(assert (x1721 x1207))
(assert (= x77 (and x1062 x542)))
(assert (x7 1000000000000000000 x2133))
(assert (x561 x857))
(assert (x2462 x2865))
(assert (x7 100000000000000 x1453))
(assert (= (x1077 (x1573 64 x3239 14)) (x1573 64 x3239 14)))
(assert (x561 x2179))
(assert (x561 x3630))
(assert (= (x1077 (x1573 64 0 x614)) (x1573 64 0 x614)))
(assert (x1721 x1924))
(assert (x1721 x431))
(assert (< 10000 (x1573 64 x2200 x2434)))
(assert (x775 281474976710655))
(assert (x7 1000000 x955))
(assert (x3863 x528 x1835 x3320 x3518))
(assert (= x386 (or x3831 x2510)))
(assert (x1996 x957))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1848 x122)))
(assert (x79 (* x2932 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x370 (x73 (x1573 64 x370 x2735))))
(assert (= (=> (and (= x1605 (= 0 x463)) (or (and (= 1 x1349) (not x1605)) (and x1605 (and (>= 1099511627775 x859) (= x2281 (x2842 (- x859 x2837))) (= x1349 (ite (< 0 x2281) 0 1)) (= x3818 (x1573 64 0 x614)) (= x859 (x64 x3818)))))) x2063) x2931))
(assert (x1721 1000000000000000000))
(assert (> (x1573 64 x1982 14) 10000))
(assert (x561 x3118))
(assert (= (and x1987 x2519) x994))
(assert (x3863 x869 x1864 x2955 x2764))
(assert (= (x3797 x2555 16) (x34 x2555 65536)))
(assert (x3099 (* x2494 2)))
(assert (x775 1495468574))
(assert (= 64 (x1883 (x1573 64 x3342 x1613))))
(assert (x7 1 (x2706 2 x2604)))
(assert (= 64 (x1883 (x1573 64 x2450 x1086))))
(assert (x3863 x1864 x869 x1835 x528))
(assert (= (x2283 (* 256 x3335)) (x3641 x3335 8)))
(assert (x1996 x3936))
(assert (x3099 (* 340282366920938463463374607431768211456 x629)))
(assert (x561 x1692))
(assert (x730 x2358 x3208))
(assert (x1996 x1118))
(assert (x775 2937758641))
(assert (x3099 (* 2 x2070)))
(assert (= (=> (and (and (= x139 (x3641 x575 16)) (= (= x139 0) x3108)) (or (and (and (= x1830 x575) (= x3876 x2642)) x3108) (and (and (= (+ 16 x2642) x3876) (= x1830 x139)) (not x3108)))) x2407) x181))
(assert (x561 x1924))
(assert (= (and x453 x1564) x276))
(assert (= x866 (=> (and (or (and x2803 (and (= (+ x1263 32) x2669) (= x2373 (x3797 x2760 32)))) (and (and (= x2760 x2373) (= x2669 x1263)) (not x2803))) (= x2803 (> x2760 4294967295))) x3662)))
(assert (x1721 16))
(assert (x561 x2491))
(assert (x1782 x2373 65536))
(assert (= x49 (and x2970 x347)))
(assert (x79 x629 16777216))
(assert (= x11 (or x1656 x2)))
(assert (x2855 x1595 (- x1924 x1020)))
(assert (x561 x183))
(assert (x561 x2698))
(assert (x561 x2810))
(assert (= (x1077 (x1573 64 x1180 14)) (x1573 64 x1180 14)))
(assert (x2855 x1207 (- x1886 x3320)))
(assert (x561 x3187))
(assert (x561 x651))
(assert (= (and x3078 (not x2083)) x3605))
(assert (x2855 x1020 (- x732 x1924)))
(assert (x1996 x3156))
(assert (= x3980 (=> (and (= x3951 (+ (x3641 x2865 128) x370)) (= (* x2743 6277101735386680763835789423207666416102355444464034512896) x2442) (= (* x3010 6277101735386680763835789423207666416102355444464034512896) x1027) (= x2528 (ite (>= 6277101735386680763835789423207666416102355444464034512895 x3951) x3481 (x2953 x1027 x3951))) (= (ite (not x1340) 1 0) x3010) (= (+ x1113 x2442 x3810) x197) (or (= 0 x2442) (= 6277101735386680763835789423207666416102355444464034512896 x2442)) (or (= 6277101735386680763835789423207666416102355444464034512896 x1027) (= x1027 0)) (= (* x1922 340282366920938463463374607431768211456) x3810) (= x3481 (x371 (+ x1027 x3951)))) (and (=> (and (and (or (and x1445 (= x3211 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (not x1445) (and (= 0 x2406) (= x3211 1)))) (and (= 0 x2225) (= (x1573 64 0 14) x254) (= (x894 x1767) x714) (= 1 x458) (= (+ 2 x567) x1432) (= 0 x3261) (= (x1573 64 0 x1432) x1767) (= (+ x254 1) x567) (= x1809 0) (= (= 0 x1946) x1445) (= (x3797 x714 1) x1946))) x1340) x2965) (=> (and (not x1340) (and (= 16777215 x574) (= (+ x1092 2) x3982) (= x1609 1) (= (x1573 64 1 14) x2359) (= x2080 254) (= (x3641 x1785 1) x419) (= (= x419 0) x672) (= (x894 x1826) x1785) (= (x1573 64 65535 x3982) x1826) (= x1092 (+ 1 x2359)) (= x20 255))) (and (=> (and x672 (= x2922 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3474) (=> (and (not x672) (and (or (and (and (= (x3797 x419 128) x2379) (= x2867 128)) x2220) (and (not x2220) (and (= x419 x2379) (= x2867 0)))) (= (> x419 340282366920938463463374607431768211455) x2220))) x3148)))))))
(assert (= x2708 (=> (and (or (and (and (= (+ x2623 32) x3160) (= x3228 x3288)) (not x3365)) (and (and (= x3160 x2623) (= x3228 x3615)) x3365)) (and (= (= 0 x3288) x3365) (= x3288 (x3641 x3615 32)))) x282)))
(assert (x79 (* 18446744073709551616 x3571) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1721 (- x1864 x3320)))
(assert (= (x1077 (+ 1 x3545)) (x1077 x3545)))
(assert (x2855 x3518 (- x3320 x2764)))
(assert (= x1735 (and x2276 x1)))
(assert (x561 x509))
(assert (x561 x732))
(assert (x561 x1799))
(assert (x3099 (* 256 x422)))
(assert (= x2227 (and x1587 x2819)))
(assert (x3863 x869 x1864 x1020 x732))
(assert (x79 (* 340282366920938463463374607431768211456 x1766) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2855 x1207 (- x1886 x1020)))
(assert (x511 x1924 x1595 x1886 x1207))
(assert (x3099 (* x3228 65536)))
(assert (x561 x185))
(assert (< (x1573 64 x1113 x2434) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1861 (=> (and (or (and (and (= x1462 (+ x3385 64)) (= (x3797 x3885 64) x2204)) x2983) (and (and (= x2204 x3885) (= x3385 x1462)) (not x2983))) (= (> x3885 18446744073709551615) x2983)) x2253)))
(assert (= (x1573 64 x312 9) (x1077 (x1573 64 x312 9))))
(assert (x561 x1786))
(assert (= (x1573 64 x2066 9) (x1077 (x1573 64 x2066 9))))
(assert (x3099 (* x2906 4)))
(assert (= (or x3719 x465) x1437))
(assert (x2855 x1886 (- x1207 x1835)))
(assert (= x810 (or x899 x1258)))
(assert (x561 x3994))
(assert (= x1360 (or x1159 x1689)))
(assert (x1721 x1295))
(assert (x7 2 x226))
(assert (x1996 x1074))
(assert (x1721 x3898))
(assert (x3204 (x34 x241 1000000000000000000) 1000000))
(assert (= (and x3862 (not x1340)) x812))
(assert (x3863 x1595 x1924 x1864 x869))
(assert (x3099 (* x176 256)))
(assert (x561 x3977))
(assert (= (and x2829 x3572) x1002))
(assert (=> (<= x1363 10000) (= 0 (x1077 x1363))))
(assert (= x1975 (or x3376 x3168)))
(assert (x3099 (* 2 x2678)))
(assert (x3099 (* x1936 4)))
(assert (= x2412 (and (not x2540) x3727)))
(assert (x1996 2))
(assert (= (and x514 x1257) x1592))
(assert (x2855 x1595 (- x1924 x1864)))
(assert (= (x3318 (x1573 64 x676 x510)) x510))
(assert (x561 x1355))
(assert (x561 x2339))
(assert (= 64 (x1883 (x1573 64 x312 9))))
(assert (= 64 (x1883 (x1573 64 x3484 x2742))))
(assert (x1996 x2400))
(assert (= x2381 (and x3483 (not x1567))))
(assert (x561 x1696))
(assert (x561 x2839))
(assert (x561 x1848))
(assert (= (x3797 x3936 4) (x34 x3936 16)))
(assert (= (x3641 1 x2604) (x2283 (ite (> 256 x2604) (x2706 2 x2604) 0))))
(assert (= x9 (=> (and (or (and (= 0 x1668) (not x2869)) (and x2869 (and (= (x1573 64 x1064 x2735) x2174) (= x636 (x1413 x1617)) (<= x636 1099511627775) (= x2791 (x1573 64 x636 x2735)) (= x2262 (x1573 64 x370 x2735)) (= (x1573 64 x370 x2735) x1617) (= x3677 (+ 1 x2925)) (= (x3974 x2262) x1064) (= (x1573 64 x370 x2735) x2925) (>= 1099511627775 x1064) (= x370 x1668)))) (= x2869 (= x2336 0))) x3620)))
(assert (x561 x3658))
(assert (x561 x1863))
(assert (= x1764 (and x2176 (not x1853))))
(assert (= x2807 (or x1717 x2997)))
(assert (x561 x2032))
(assert (x511 x1886 x1207 x1595 x1924))
(assert (= 5 (x3318 (x1573 64 x2624 5))))
(assert (x511 x1835 x528 x2764 x2955))
(assert (= (or x1281 x1296) x2541))
(assert (= x3723 (and (not x1670) x3043)))
(assert (x7 1 (x2706 2 x1392)))
(assert (= (x73 (x1573 64 x1555 9)) x1555))
(assert (=> (>= 10000 x1922) (= (x1077 x1922) 0)))
(assert (x1782 x1816 4))
(assert (= x2862 (and (not x2692) x1621)))
(assert (x7 100000 x1922))
(assert (x1489 x3709))
(assert (x561 x3749))
(assert (= (x73 (x1573 64 255 x3760)) 255))
(assert (= (x34 x3976 256) (x3797 x3976 8)))
(assert (< (x1573 64 x3239 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x16))
(assert (= x1950 (x3318 (x1573 64 x1327 x1950))))
(assert (x561 x3127))
(assert (x561 x1143))
(assert (< (x1573 64 0 x2984) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x3362))
(assert (= (and x387 (not x846)) x281))
(assert (= (x1077 x1712) (x1077 (+ 1 x1712))))
(assert (x561 x1243))
(assert (= (or x2514 x3774) x986))
(assert (x3863 x2955 x2764 x3518 x3320))
(assert (x1979 x3304))
(assert (= x223 (x73 (x1573 64 x223 x3948))))
(assert (x1782 x1666 4))
(assert (= (and x3430 (not x987)) x1220))
(assert (= (and x3661 (not x520)) x2568))
(assert (x7 4294967296 x989))
(assert (= (and x520 x3661) x3588))
(assert (= x684 (and x1360 x950)))
(assert (= (x34 x2716 256) (x3797 x2716 8)))
(assert (x3863 x1020 x732 x1864 x869))
(assert (x1721 x103))
(assert (= (x3318 (x1573 64 x1848 x122)) x122))
(assert (x561 x2036))
(assert (=> (>= 10000 x2417) (= 0 (x1077 x2417))))
(assert (= (x34 x418 256) (x3797 x418 8)))
(assert (x1721 x989))
(assert (x79 x2047 18446744073709551616))
(assert (x3099 (* 4 x3851)))
(assert (= (or x3696 x3651) x1490))
(assert (= x2066 (x73 (x1573 64 x2066 9))))
(assert (x561 x3780))
(assert (x1979 x2010))
(assert (x561 x891))
(assert (x561 x996))
(assert (= x3319 (=> (= x2098 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1800)) (and (=> (and x2098 (and (= x1414 255) (= x2177 (= 0 x3573)) (= x3573 (x3641 x446 1)) (= 254 x1994) (= (x1187 x1614) x446))) (and (=> (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2666) x2177) x2091) (=> (and (not x2177) (and (or (and (and (= x1118 x3573) (= x527 0)) (not x120)) (and (and (= (x3797 x3573 128) x1118) (= 128 x527)) x120)) (= (< 340282366920938463463374607431768211455 x3573) x120))) x1661))) (=> (and (not x2098) (and (and (= (x371 (+ 65280 x1800)) x403) (= (x1573 64 x1903 x3101) x3351) (= x3101 (+ 1 x3545)) (= x796 (x3089 x3351)) (= x1903 (ite (<= x1800 255) x403 (x2953 65280 x1800))) (= (> x796 340282366920938463463374607431768211455) x1354)) (or (and (and (= x3405 (x3797 x796 128)) (= 128 x1274)) x1354) (and (and (= 0 x1274) (= x3405 x796)) (not x1354))))) x3858)))))
(assert (x7 2 x25))
(assert (= (and (not x1205) x1857) x3784))
(assert (x561 x3185))
(assert (x2855 x2764 (- x2955 x1207)))
(assert (= (and (not x2796) x3007) x1343))
(assert (x561 x586))
(assert (x7 65536 x1945))
(assert (= x3395 (and (not x2622) x3836)))
(assert (x79 (* x2989 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x260))
(assert (x561 x398))
(assert (x561 x1477))
(assert (x561 x722))
(assert (x561 x344))
(assert (x561 x3186))
(assert (x2855 x1835 (- x528 x732)))
(assert (x561 x2204))
(assert (x561 x1149))
(assert (< 10000 (x1573 64 x1410 x601)))
(assert (= (x3797 x2646 8) (x34 x2646 256)))
(assert (= (x73 (x1573 64 0 x1647)) 0))
(assert (x775 65280))
(assert (x3863 x1595 x1924 x1835 x528))
(assert (x561 x208))
(assert (x3863 x1207 x1886 x3518 x3320))
(assert (x561 x3872))
(assert (x1721 (- x1207 x732)))
(assert (x511 x1020 x732 x2764 x2955))
(assert (x79 (ite (< x3647 256) (x2706 2 x3647) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1782 x736 2))
(assert (x79 (* x712 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= (> x3394 0) x381) (= (x1573 64 x1037 14) x2479) (<= x3532 1099511627775) (= (x1573 64 0 x2145) x2095) (= x1037 (ite x2973 1 0)) (= (x1573 64 x1404 x2479) x2145) (= (ite (= x3532 0) 0 1) x3394) (= x3532 (x3869 x2095)) (= x1404 (x1637 16777215 x2865))) (and (=> (and (not x381) (and (= x451 (x1637 16777215 x2865)) (= (x3797 x451 8) x2451) (= x1902 (x1637 x2264 x3305)) (= x694 (x1573 64 x2000 14)) (= x2023 (x1573 64 x2451 x1588)) (= (ite x2973 1 0) x2000) (= (+ 1 x694) x1450) (= x1858 (x1637 255 x2865)) (= x2264 (x532 x2023)) (= (+ 2 x1450) x1588) (= x1806 (= x2264 x1902)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3641 1 x1858)) x3305))) (and (=> (and (= x1912 0) x1806) x2870) (=> (and (not x1806) (and (= (= 0 x1902) x1688) (= x1515 (x1573 64 x2451 x1588)))) (and (=> (not x1688) x749) (=> (and x1688 (and (and (= x1250 (= x1405 0)) (= x2389 (+ x1450 1)) (= x3756 (x1573 64 x2604 x2389)) (= (x3797 x2451 8) x2604) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3641 1 x721)) x2251) (= (x264 x1455) x3304) (= x721 (x1637 255 x2451)) (= x1455 (x1573 64 x2604 x2389)) (= x1405 (x1637 x3304 x2251))) (or (not x1250) (and x1250 (and (= x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3641 1 x2604))) (= (x1637 x3864 x3381) x722) (= (x3105 x1450) x3864)))))) x3632))))) (=> x381 x3199))) x3620))
(assert (= x2132 (and (not x3456) x2827)))
(assert (= (and x710 x1412) x1603))
(assert (x1721 x2989))
(assert (x561 x1532))
(assert (not (x775 (x1573 64 x2661 9))))
(assert (x561 x3218))
(assert (x3863 x1886 x1207 x1595 x1924))
(assert (x79 x486 1000000000000000000000000))
(assert (x561 x3608))
(assert (= x942 (and x3423 (not x2748))))
(assert (= x924 (=> (= x1625 (= x1453 0)) (and (=> (and x1625 (and (= (x1637 16777215 x629) x3991) (= x1 (= x2417 0)) (= (x1573 64 x1982 14) x1762) (= (x1573 64 x3991 x1762) x126) (= x1982 (ite x2973 1 0)))) (and (=> (and (and (or (and x3964 (= (ite x3964 1 0) x491)) (and (not x3964) (and (= (ite (< 0 x2968) 1 0) x491) (>= 1099511627775 x2968) (= x2968 (x1473 x2766)) (= (x1573 64 x2417 x126) x2766)))) (and (= (> x838 0) x3964) (<= x838 1099511627775) (= x1025 (x1573 64 x2417 x126)) (= (x1743 x1025) x838))) (not x1)) x967) (=> (and x1 (= x475 (ite x1 1 0))) x3838))) (=> (and (not x1625) (or (and (and (<= x3226 18446744073709551615999999999999999999) (= x891 1000000000000000000000000) (<= x2785 18446744073709551615) (= (x34 x2466 1000000000000000000000000) x2793) (= x2466 x1829) (= x1864 (+ 100000000 x564)) (= (x3534 x869 x1864) x3226) (= x564 (* x818 100000)) (not (< x1640 x2785)) (= x1640 (x34 x2567 1000000)) (= x2785 (+ x2793 (ite (< 0 (x2608 x2466 1000000000000000000000000)) 1 0))) (<= x2533 9999999) (= x2712 1) (= x818 (x1637 16777215 x629)) (>= 1844674407370955 x1453) (= (* x1453 100000000000000) x664) (= x869 x664) (= x2533 (x1637 16777215 x629)) (= (* x3226 1000000) x1829) (>= x3226 0) (= x2567 (* x2133 1000000))) x2973) (and (and (= x1288 x1981) (not (< x3722 x1288)) (<= x1453 184467440737095516) (= (* 100000000000000 x1453) x1981) (= x1686 (* 1000000000000000000 x2133)) (= (x34 x1686 1000000) x3722)) (not x2973)))) x3995)))))
(assert (x2855 x3320 (- x3518 x869)))
(assert (= x761 (and x143 (not x307))))
(assert (= (or x1148 x3449) x892))
(assert (x7 4294967296 x1937))
(assert (x561 x21))
(assert (= (and x218 (not x2848)) x1181))
(assert (x1721 (- x1924 x2955)))
(assert (x1996 x1126))
(assert (x1782 x1463 65536))
(assert (x3863 x1886 x1207 x2764 x2955))
(assert (> (x1573 64 x176 x705) 10000))
(assert (= x2474 (and x1621 x2692)))
(assert (not (x775 (x1573 64 x3391 14))))
(assert (x561 x2471))
(assert (x3863 x528 x1835 x3518 x3320))
(assert (= x1733 (and x3442 x1409)))
(assert (x561 x1263))
(assert (x561 x1919))
(assert (x511 x3320 x3518 x2764 x2955))
(assert (=> (<= x592 10000) (= (x1077 x592) 0)))
(assert (= (and (not x1581) x3866) x3631))
(assert (=> (<= x1427 10000) (= (x1077 x1427) 0)))
(assert (x3099 (ite (< x3484 256) (x2706 2 x3484) 0)))
(assert (= (x1573 64 x1903 x3101) (x1077 (x1573 64 x1903 x3101))))
(assert (x79 x629 256))
(assert (= (=> (= (= x509 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2131) (and (=> (and (and (and (= (x3797 x736 1) x1171) (= (+ x2302 1) x2410) (= 1 x3801) (= x1838 (= 0 x1171)) (= (x264 x3681) x736) (= 0 x3917) (= x3681 (x1573 64 0 x2410))) (or (and x1838 (= x3416 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (and (= 1 x3416) (= 0 x2664)) (not x1838)))) x2131) x1582) (=> (and (not x2131) (= x509 x3022)) x3515))) x1208))
(assert (= (x1883 (x1573 64 x370 x2735)) 64))
(assert (= x2879 (x3318 (x1573 64 x2043 x2879))))
(assert (x1996 x1353))
(assert (x1721 (- x3320 x1020)))
(assert (< 10000 (x1573 64 x1903 x3101)))
(assert (x1782 x1074 16))
(assert (< (x1573 64 x2661 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1782 x1840 65536))
(assert (x561 x969))
(assert (= (=> (and (= x2431 (+ x253 (x3641 x3335 8))) (= x253 (- 255 (ite (= (x3641 x2494 1) 0) x2009 (+ 1 x2009))))) x3035) x3806))
(assert (= x2465 (or x484 x1312)))
(assert (x1721 x2240))
(assert (x1721 (x2706 2 x3647)))
(assert (x561 x88))
(assert (x1996 x419))
(assert (x1979 x2653))
(assert (= x2779 (or x2980 x1756)))
(assert (= (x3797 x317 128) (x34 x317 340282366920938463463374607431768211456)))
(assert (= (x3797 x149 8) (x34 x149 256)))
(assert (x1721 x176))
(assert (x561 x695))
(assert (x2855 x1020 (- x732 x3320)))
(assert (x511 x528 x1835 x1595 x1924))
(assert (x3590 x1213))
(assert (< 10000 (x1573 64 x3550 x2961)))
(assert (= x1059 (and x554 x294)))
(assert (x2855 x2764 (- x2955 x1595)))
(assert (x3099 (ite (< x2604 256) (x2706 2 x2604) 0)))
(assert (= (x2283 (* 2 x3549)) (x3641 x3549 1)))
(assert (x1721 (- x1595 x2955)))
(assert (= (x73 (x1573 64 x3991 x1762)) x3991))
(assert (x561 x52))
(assert (< (x1573 64 0 x2410) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x172 (=> (and (and (= x949 (= 0 x3050)) (= (x3641 x1471 2) x3050)) (or (and (and (= x3050 x108) (= (+ x1874 2) x1880)) (not x949)) (and (and (= x1880 x1874) (= x1471 x108)) x949))) x2976)))
(assert (x561 x108))
(assert (x511 x1835 x528 x732 x1020))
(assert (x561 x1275))
(assert (x561 x1209))
(assert (= (x2283 (* x3817 4294967296)) (x3641 x3817 32)))
(assert (= (x34 x3156 18446744073709551616) (x3797 x3156 64)))
(assert (= (x34 x3223 340282366920938463463374607431768211456) (x3797 x3223 128)))
(assert (x1721 (- x1864 x3518)))
(assert (= x2192 (or x2363 x889)))
(assert (x561 x1681))
(assert (= (or x1391 x3978) x3077))
(assert (x561 x2805))
(assert (x561 x3233))
(assert (x561 x883))
(assert (= (and (not x2829) x3572) x2722))
(assert (= x1170 (and (not x3964) x461)))
(assert (x511 x1886 x1207 x869 x1864))
(assert (x2855 x1020 (- x732 x1864)))
(assert (x79 (* x1327 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1568))
(assert (x7 1000000 x1886))
(assert (= x673 (and x1248 x3420)))
(assert (not (x775 (x1573 64 x3991 x1762))))
(assert (x561 x2551))
(assert (= (x1573 64 0 x2145) (x1077 (x1573 64 0 x2145))))
(assert (= x1425 (and (not x690) x3213)))
(assert (x561 x2666))
(assert (x511 x1864 x869 x2764 x2955))
(assert (x1721 (- x1020 x2955)))
(assert (x561 x2338))
(assert (x561 x258))
(assert (x79 x1529 256))
(assert (x561 x2279))
(assert (x1782 x762 65536))
(assert (x561 x2142))
(assert (x3863 x1886 x1207 x869 x1864))
(assert (= (x1077 (+ 1 x1751)) (x1077 x1751)))
(assert (x561 x1651))
(assert (= x1255 (=> (and (or (and x2761 (and (= (x3797 x957 8) x1010) (= (+ x3689 8) x3658))) (and (and (= x3658 x3689) (= x957 x1010)) (not x2761))) (= x2761 (< 255 x957))) x784)))
(assert (< (x1573 64 x1410 x601) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3580 (and x3157 (not x2315))))
(assert (x561 x1067))
(assert (= (x3797 x2451 8) (x34 x2451 256)))
(assert (x7 1 (x2706 2 x791)))
(assert (x561 x229))
(assert (x1996 x2998))
(assert (= x759 (=> (and (or (and x2509 (and (= x3840 x1906) (= x216 x620))) (and (not x2509) (and (= x1906 (+ x3840 16)) (= x2103 x620)))) (and (= x2509 (= 0 x2103)) (= x2103 (x3641 x216 16)))) x1009)))
(assert (= x405 (and (not x2627) x774)))
(assert (x561 x2364))
(assert (x511 x732 x1020 x3320 x3518))
(assert (= x918 (and x2425 x2541)))
(assert (= x2242 (and x870 x3169)))
(assert (x2855 x1020 (- x732 x1595)))
(assert (= 14 (x3318 (x1573 64 x1037 14))))
(assert (< (x1573 64 x1982 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x34 x3989 340282366920938463463374607431768211456) (x3797 x3989 128)))
(assert (=> (>= 10000 x2624) (= (x1077 x2624) 0)))
(assert (= (and x812 x3604) x711))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x904 x2652)))
(assert (x1721 (- x732 x869)))
(assert (x3863 x869 x1864 x1886 x1207))
(assert (x561 x116))
(assert (x2855 x1835 (- x528 x1886)))
(assert (x2855 x1020 (- x732 x1835)))
(assert (x561 x2411))
(assert (> (x1573 64 x1555 9) 10000))
(assert (= (x2283 (* x2753 16)) (x3641 x2753 4)))
(assert (x561 x798))
(assert (= (=> (and (and (= (x3641 x3594 32) x715) (= (= x715 0) x2096)) (or (and x2096 (and (= x2775 x2595) (= x3594 x1254))) (and (not x2096) (and (= x715 x1254) (= (+ 32 x2595) x2775))))) x725) x2971))
(assert (x3099 (* 2 x3825)))
(assert (x561 x2181))
(assert (x1782 x3236 4))
(assert (= (and (not x1322) x378) x123))
(assert (= x2434 (x3318 (x1573 64 x592 x2434))))
(assert (x561 x45))
(assert (x561 x3048))
(assert (x1979 x1353))
(assert (> (x1573 64 x1731 x1760) 10000))
(assert (= x3043 (or x1144 x2301)))
(assert (x561 x3245))
(assert (= x170 (=> (and (and (= (x3641 x2906 2) x3419) (= x1639 (= 0 x3419))) (or (and (and (= x3419 x1748) (= x423 (+ x3711 2))) (not x1639)) (and x1639 (and (= x3711 x423) (= x2906 x1748))))) x2456)))
(assert (x1721 (- x3320 x1207)))
(assert (x1721 (- x528 x1924)))
(assert (= (and (not x429) x327) x2295))
(assert (x1996 x1552))
(assert (= (=> (= (= x3746 115792089237316195423570985008687907853269984665640564039457584007913129639935) x520) (and (=> (and (not x520) (and (or (and x2876 (and (= x1126 (x3797 x2065 128)) (= 128 x3646))) (and (and (= x1126 x2065) (= x3646 0)) (not x2876))) (and (= x2876 (> x2065 340282366920938463463374607431768211455)) (= (x26 x1175) x2065) (= x1175 (x1573 64 x3746 x1744)) (= x1744 (+ 1 x1092))))) x675) (=> (and x520 (= 16777215 x2701)) x3240))) x921))
(assert (> (x1573 64 x637 14) 10000))
(assert (= x840 (and x1827 x2663)))
(assert (= (or x1377 x624) x3579))
(assert (= (and x3556 (not x3197)) x175))
(assert (= (x2283 (* x1408 18446744073709551616)) (x3641 x1408 64)))
(assert (x1782 x2054 65536))
(assert (not (x775 (x1573 64 1 14))))
(assert (x561 x3289))
(assert (= (=> (and (= (- 255 (ite (= (x3641 x2678 1) 0) x329 (+ 1 x329))) x804) (= x3255 (+ (x3641 x1327 8) x804))) x1724) x27))
(assert (x7 1000000 x2457))
(assert (= 0 (x1077 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x561 x139))
(assert (= (or x1476 x773) x3926))
(assert (x561 x2454))
(assert (= x2434 (x3318 (x1573 64 x2200 x2434))))
(assert (= (x1573 64 x1297 14) (x1077 (x1573 64 x1297 14))))
(assert (x1721 100000))
(assert (x1721 (- x1835 x1595)))
(assert (= (or x1247 x3243) x748))
(assert (x2855 x2955 (- x2764 x1924)))
(assert (x1996 x2267))
(assert (x561 x2463))
(assert (= (or x2385 x2476) x1623))
(assert (x3099 (* 256 x620)))
(assert (x561 x2318))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1404 x2479)))
(assert (= (x34 x1008 2) (x3797 x1008 1)))
(assert (x561 x2431))
(assert (x2855 x2955 (- x2764 x528)))
(assert (= (x1077 (x1573 64 x3242 9)) (x1573 64 x3242 9)))
(assert (= (x34 x610 4294967296) (x3797 x610 32)))
(assert (x1979 x3916))
(assert (= x641 (and (not x82) x3135)))
(assert (x1996 x93))
(assert (x124 x1353))
(assert (x561 x1405))
(assert (x561 x3343))
(assert (x561 x3906))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 0 14)))
(assert (= 0 (x1077 340282366920938463463374607431768211455999999999999999999)))
(assert (x1721 x3226))
(assert (= (and x3286 x2784) x2919))
(assert (x561 x1103))
(assert (x7 2 x1785))
(assert (= x2426 (and x604 (not x1270))))
(assert (x2855 x3518 (- x3320 x732)))
(assert (< 10000 (x1573 64 x682 x250)))
(assert (x79 (* 2 x3825) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2059))
(assert (= (=> (= (= x422 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2159) (and (=> (and (= 0 x2431) x2159) x3035) (=> (and (and (or (and (and (= x630 x3622) (= 0 x2959)) x1958) (and (and (= 128 x2959) (= x630 x3357)) (not x1958))) (and (= (+ 1 x824) x3913) (= x3622 (x462 x2674)) (= x2674 (x1573 64 x422 x3913)) (= x1958 (= x3357 0)) (= x3357 (x3641 x3622 128)))) (not x2159)) x3466))) x2391))
(assert (x561 x1597))
(assert (= (x1077 x567) (x1077 (+ x567 1))))
(assert (= (and x604 x1270) x515))
(assert (= (x1077 (x1573 64 x2992 9)) (x1573 64 x2992 9)))
(assert (x1721 (x2706 2 x937)))
(assert (= 0 (x1077 16776960)))
(assert (= (and x3069 x2926) x3194))
(assert (x3099 (* x383 4294967296)))
(assert (= (and x301 x1841) x1698))
(assert (x3863 x869 x1864 x732 x1020))
(assert (= (or x396 x2030) x2139))
(assert (x3863 x732 x1020 x1207 x1886))
(assert (x3204 x3922 1000000))
(assert (= 9 (x3318 (x1573 64 x1218 9))))
(assert (x561 x356))
(assert (= x42 (=> (and (= x1315 (> x75 15)) (or (and x1315 (and (= (x3797 x75 4) x1458) (= x2211 (+ x1495 4)))) (and (not x1315) (and (= x75 x1458) (= x1495 x2211))))) x1612)))
(assert (=> (<= x1477 10000) (= 0 (x1077 x1477))))
(assert (= x2857 (x3318 (x1573 64 65535 x2857))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1327 x1950)))
(assert (= (x3641 x176 8) (x2283 (* x176 256))))
(assert (= (x73 (x1573 64 x2325 9)) x2325))
(assert (= (and x1853 x2176) x1923))
(assert (x1782 x3983 18446744073709551616))
(assert (x79 (ite (> 256 x2559) (x2706 2 x2559) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2855 x3320 (- x3518 x528)))
(assert (x3099 (ite (< x2702 256) (x2706 2 x2702) 0)))
(assert (= (and x3273 x2016) x1294))
(assert (x1782 x1922 256))
(assert (x561 x1190))
(assert (= x3674 (=> (and (or (and (= x2392 (ite x3581 1 0)) x3581) (and (not x3581) (and (= (ite (< 0 x830) 1 0) x2392) (= x274 (x1573 64 0 x293)) (= (x2478 x274) x830) (>= 1099511627775 x830)))) (and (= (x1573 64 x1682 14) x3145) (= (x1573 64 0 x293) x740) (= x1682 (ite x2973 1 0)) (= 0 x2530) (= x1534 (x1637 16777215 x3853)) (>= 1099511627775 x1920) (= (< 0 x1920) x3581) (= (x1573 64 x1534 x3145) x293) (= (x1049 x740) x1920))) x1554)))
(assert (x1839 x800 x1241))
(assert (= (and x2287 x896) x1147))
(assert (=> (>= 10000 x1982) (= (x1077 x1982) 0)))
(assert (x1721 (- x2955 x3320)))
(assert (x79 x93 1000000000000000000000000))
(assert (x1721 x1785))
(assert (= x2693 (and x3629 (not x1545))))
(assert (x7 256 x3746))
(assert (= (x2283 (ite (< x3484 256) (x2706 2 x3484) 0)) (x3641 1 x3484)))
(assert (x7 340282366920938463463374607431768211456 x902))
(assert (= (x3318 (x1573 64 x2451 x1588)) x1588))
(assert (= (x3641 x431 1) (x2283 (* x431 2))))
(assert (x1782 x1431 16))
(assert (x7 4 x3181))
(assert (x1996 x1458))
(assert (x497 x1643))
(assert (x561 x1305))
(assert (x561 x1207))
(assert (x7 1 (x2706 2 x2532)))
(assert (x497 x2010))
(assert (x561 x1253))
(assert (= (=> (and (and (= x1270 (= x2938 0)) (= (x3641 x630 64) x2938)) (or (and x1270 (and (= x2959 x2335) (= x1937 x630))) (and (not x1270) (and (= x2938 x1937) (= (+ 64 x2959) x2335))))) x2561) x3466))
(assert (x561 x3070))
(assert (= (x1077 (+ x1092 1)) (x1077 x1092)))
(assert (x561 x2358))
(assert (x561 x2563))
(assert (= 64 (x1883 (x1573 64 x2066 9))))
(assert (x2855 x1020 (- x732 x1207)))
(assert (x511 x3518 x3320 x732 x1020))
(assert (= (x34 x3701 65536) (x3797 x3701 16)))
(assert (x511 x1207 x1886 x869 x1864))
(assert (= (or x161 x2208) x1223))
(assert (x3863 x1595 x1924 x869 x1864))
(assert (= x1970 (and x974 x332)))
(assert (= (x34 x3289 16) (x3797 x3289 4)))
(assert (x997 x530))
(assert (x561 x2998))
(assert (x561 x3180))
(assert (= (x34 x33 4) (x3797 x33 2)))
(assert (x3099 x1380))
(assert (x561 x3063))
(assert (< (x1573 64 x3242 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2885))
(assert (not (x775 (x1573 64 x2000 14))))
(assert (x1979 x3438))
(assert (= (x73 (x1573 64 x1327 x1950)) x1327))
(assert (x3863 x528 x1835 x732 x1020))
(assert (= (x1077 x881) (x1077 (+ 1 x881))))
(assert (x561 x609))
(assert (x1721 x1817))
(assert (= (x34 x3084 18446744073709551616) (x3797 x3084 64)))
(assert (x1721 (- x869 x1207)))
(assert (x79 x3550 256))
(assert (= (x1883 (x1573 64 0 x1647)) 64))
(assert (= x1284 (or x428 x512)))
(assert (= x3787 (and x92 x672)))
(assert (x2855 x1020 (- x732 x869)))
(assert (x561 x61))
(assert (= (=> (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529) x3931) (and (=> (and x3931 (and (= x3545 (+ 1 x1614)) (= x1361 255) (= (x1573 64 255 x3545) x1791) (= x431 (x462 x1791)) (= 254 x2001) (= x360 (x3641 x431 1)) (= (= x360 0) x1368))) (and (=> (and x1368 (= x1800 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3319) (=> (and (not x1368) (and (= (< 340282366920938463463374607431768211455 x360) x846) (or (and x846 (and (= x1799 (x3797 x360 128)) (= 128 x3253))) (and (and (= 0 x3253) (= x1799 x360)) (not x846))))) x3908))) (=> (and (not x3931) (and (= x2076 (x371 (+ x1529 16776960))) (= (ite (<= x1529 255) x2076 (x2953 16776960 x1529)) x2255))) x1773))) x190))
(assert (< (x1573 64 x1180 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2010))
(assert (x561 x1795))
(assert (= (=> (= 1 x358) x94) x864))
(assert (x3099 (* 16 x789)))
(assert (x1721 x108))
(assert (= x2062 (=> (and (= x1777 (ite (> x3749 1) (+ 1 x2310) x2310)) (= x3628 x3746) (= x3628 (x2842 (- x1777 1)))) x921)))
(assert (x1721 x1835))
(assert (x561 x275))
(assert (= (x2283 (* 4294967296 x340)) (x3641 x340 32)))
(assert (x3863 x3320 x3518 x732 x1020))
(assert (= (x3641 x629 128) (x2283 (* x629 340282366920938463463374607431768211456))))
(assert (x1721 x189))
(assert (x561 x503))
(assert (not (x775 (x1573 64 x3813 9))))
(assert (= (=> (and (= (x2842 (- x2118 1)) x3512) (= x3512 x1529) (= (ite (> x2041 1) (+ x3301 1) x3301) x2118)) x190) x656))
(assert (= (x1077 x1752) (x1077 (+ x1752 1))))
(assert (= (=> (and (= x1400 (ite (> x3458 1) (+ 1 x3743) x3743)) (= (+ x1400 (x3641 x1731 8)) x930)) x155) x3742))
(assert (x2855 x1864 (- x869 x1886)))
(assert (= (x1077 (+ 1 x1155)) (x1077 x1155)))
(assert (x2855 x1886 (- x1207 x2764)))
(assert (x561 x3401))
(assert (= x2519 (or x3295 x373)))
(assert (x1996 x2688))
(assert (x561 x750))
(assert (x561 x2770))
(assert (x561 x401))
(assert (x561 x3878))
(assert (> (x1573 64 x3484 x2742) 10000))
(assert (x1721 x1595))
(assert (x561 x2909))
(assert (x561 x637))
(assert (x3204 x2587 1000000))
(assert (x561 x3061))
(assert (x1996 x2587))
(assert (x3099 x681))
(assert (x561 x886))
(assert (= x1714 (and x3332 x1679)))
(assert (= x3190 (or x1446 x1607)))
(assert (= x1873 (=> (and (and (= x369 (= 0 x1150)) (= (x3641 x383 32) x1150)) (or (and (and (= x383 x102) (= x402 x421)) x369) (and (and (= x421 (+ 32 x402)) (= x1150 x102)) (not x369)))) x1921)))
(assert (x1721 x3320))
(assert (= (and x2705 x3755) x2895))
(assert (= x3910 (=> (and (= (> x2361 4294967295) x164) (or (and x164 (and (= x762 (x3797 x2361 32)) (= x356 (+ 32 x1448)))) (and (and (= x2361 x762) (= x1448 x356)) (not x164)))) x1929)))
(assert (= (x73 (x1573 64 x2417 x3803)) x2417))
(assert (= (x3641 1 x1392) (x2283 (ite (> 256 x1392) (x2706 2 x1392) 0))))
(assert (x561 x3141))
(assert (x561 x901))
(assert (= (x1573 64 x2417 x1851) (x1077 (x1573 64 x2417 x1851))))
(assert (= (x2283 (* x652 18446744073709551616)) (x3641 x652 64)))
(assert (= x3945 (and (not x3536) x1662)))
(assert (x511 x2955 x2764 x732 x1020))
(assert (x1721 (- x1924 x528)))
(assert (x561 x3121))
(assert (= (=> (and (or (and (not x1754) (and (= x581 x547) (= x3079 x607))) (and (and (= x581 (x3797 x547 64)) (= x607 (+ 64 x3079))) x1754)) (= (> x547 18446744073709551615) x1754)) x793) x326))
(assert (x775 16777215))
(assert (= x2496 (=> (and (= x849 (> x3463 3)) (or (and (and (= (x3797 x3463 2) x623) (= x2241 (+ x3827 2))) x849) (and (and (= x3827 x2241) (= x623 x3463)) (not x849)))) x709)))
(assert (x561 x3034))
(assert (x1489 x1149))
(assert (x561 x1610))
(assert (= (=> (and (or (and (and (= x3153 x2881) (= x1192 x2762)) (not x3309)) (and (and (= (+ 2 x1192) x2762) (= (x3797 x3153 2) x2881)) x3309)) (= (< 3 x3153) x3309)) x424) x3671))
(assert (= (and x309 (not x1403)) x1770))
(assert (= (and x96 x1340) x1429))
(assert (= (and (not x2061) x2883) x1738))
(assert (x561 x3714))
(assert (x561 x2340))
(assert (x561 x1136))
(assert (x1839 x2013 x687))
(assert (= (and x2667 (not x1444)) x2995))
(assert (= (x2283 (* 2 x446)) (x3641 x446 1)))
(assert (x1721 (- x2955 x1595)))
(assert (not (x775 (x1573 64 x370 x2735))))
(assert (x1721 (- x1835 x1020)))
(assert (x561 x852))
(assert (= x2666 (x73 (x1573 64 x2666 x97))))
(assert (< 10000 (x1573 64 0 x1644)))
(assert (x561 x2555))
(assert (= x3398 (and x718 (not x2619))))
(assert (x1996 x2555))
(assert (x3863 x732 x1020 x2955 x2764))
(assert (x511 x1924 x1595 x1835 x528))
(assert (= x176 (x73 (x1573 64 x176 x705))))
(assert (x1721 (- x2955 x528)))
(assert (x79 x3853 16777216))
(assert (=> (<= x367 10000) (= (x1077 x367) 0)))
(assert (= (x3797 x1548 64) (x34 x1548 18446744073709551616)))
(assert (= x30 (or x232 x2228)))
(assert (x1721 x3594))
(assert (= (=> (and (or (and x348 (and (= x1961 (+ 8 x1787)) (= x3289 (x3797 x418 8)))) (and (not x348) (and (= x3289 x418) (= x1787 x1961)))) (= (> x418 255) x348)) x2566) x1885))
(assert (x561 x3480))
(assert (x1782 x2760 4294967296))
(assert (= x3884 (x73 (x1573 64 x3884 x614))))
(assert (x1721 (- x2764 x732)))
(assert (x561 x360))
(assert (= x856 (and (not x1579) x3451)))
(assert (x561 x1789))
(assert (= (=> (and (or (and x1205 (and (= (x1573 64 x1177 x126) x3492) (= (+ 1 x2948) x53) (= x556 (x1743 x2265)) (= (x1573 64 x2417 x126) x2948) (<= x556 1099511627775) (= x316 x2417) (= x1177 (x1473 x2374)) (= (x1573 64 x2417 x126) x2374) (= (x1573 64 x2417 x126) x2265) (= x739 (x1573 64 x556 x126)) (>= 1099511627775 x1177))) (and (not x1205) (= x316 0))) (= x1205 (= x475 0))) x3382) x3838))
(assert (x511 x1864 x869 x732 x1020))
(assert (= (=> (and (= x3267 (> x1372 15)) (or (and (and (= x263 x1372) (= x3800 x354)) (not x3267)) (and x3267 (and (= (x3797 x1372 4) x263) (= x354 (+ 4 x3800)))))) x2185) x1366))
(assert (x2112 x3127))
(assert (x561 x3876))
(assert (= x128 (or x2919 x3165)))
(assert (x2855 x732 (- x1020 x1835)))
(assert (x561 x1240))
(assert (x79 (* x383 4294967296) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1721 x3228))
(assert (x561 x2246))
(assert (x561 x117))
(assert (x1996 x2323))
(assert (= x2027 (=> (and (or (and (and (= x782 x2036) (= x2885 x1789)) (not x3437)) (and (and (= (+ x2036 16) x782) (= (x3797 x2885 16) x1789)) x3437)) (= (> x2885 65535) x3437)) x2345)))
(assert (x1721 (- x732 x1886)))
(assert (x1782 x451 256))
(assert (= (x3318 (x1573 64 x1353 x3950)) x3950))
(assert (= 0 (x1077 34028236692093846346337460743176821)))
(assert (= (and x381 x531) x136))
(assert (= (and x485 (not x1882)) x311))
(assert (= (=> (= x302 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2010)) (and (=> (and (and (or (and (and (= 128 x2473) (= (x3797 x2289 128) x3890)) x916) (and (not x916) (and (= x2289 x3890) (= 0 x2473)))) (and (= (x1573 64 x676 x510) x2160) (= (> x2289 340282366920938463463374607431768211455) x916) (= x2289 (x894 x2160)) (= x1396 (x371 (+ 65280 x2010))) (= (+ x3760 1) x510) (= x676 (ite (>= 255 x2010) x1396 (x2953 65280 x2010))))) (not x302)) x363) (=> (and (and (= x2070 (x2570 x1092)) (= 255 x2008) (= 254 x249) (= x1998 (= 0 x1045)) (= (x3641 x2070 1) x1045)) x302) (and (=> (and x1998 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3746)) x921) (=> (and (and (= (< 340282366920938463463374607431768211455 x1045) x3059) (or (and (and (= x1045 x3885) (= x3385 0)) (not x3059)) (and (and (= x3385 128) (= (x3797 x1045 128) x3885)) x3059))) (not x1998)) x1861))))) x1210))
(assert (> (x1573 64 x3746 x1744) 10000))
(assert (= (x73 (x1573 64 x612 x3873)) x612))
(assert (x3099 x1374))
(assert (x1996 (- x3977 100000000)))
(assert (x1996 (x34 x241 1000000000000000000)))
(assert (= 64 (x1883 (x1573 64 x1419 9))))
(assert (= (and (not x541) x1562) x1364))
(assert (= (=> (and (and (= x2821 (= x2969 0)) (= (x3641 x1254 16) x2969)) (or (and (and (= x2775 x260) (= x189 x1254)) x2821) (and (not x2821) (and (= x189 x2969) (= x260 (+ x2775 16)))))) x3566) x725))
(assert (x79 (* x1146 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1168))
(assert (x1996 x1925))
(assert (= (and x3597 x3744) x3299))
(assert (= (x1883 (x1573 64 0 x2434)) 64))
(assert (= x3807 (or x3675 x308)))
(assert (x561 x2387))
(assert (x561 x1843))
(assert (x1782 x3644 4294967296))
(assert (= (=> (and (or (and x3258 (and (= x3056 (x3797 x3058 32)) (= x3094 (+ x2318 32)))) (and (not x3258) (and (= x3056 x3058) (= x2318 x3094)))) (= x3258 (< 4294967295 x3058))) x2912) x177))
(assert (x561 x2989))
(assert (= (=> (and (= (> x48 15) x1221) (or (and (and (= x1192 x3389) (= x3153 x48)) (not x1221)) (and x1221 (and (= (+ x3389 4) x1192) (= (x3797 x48 4) x3153))))) x3671) x366))
(assert (= (and x3500 x1340) x1501))
(assert (= x1711 (and x3704 x2167)))
(assert (x1782 x1010 16))
(assert (x3099 (ite (> 256 x1392) (x2706 2 x1392) 0)))
(assert (x561 x2066))
(assert (= 0 (x1077 2908516037)))
(assert (x7 18446744073709551616 x1817))
(assert (= (x3641 x103 32) (x2283 (* 4294967296 x103))))
(assert (=> (<= x125 10000) (= 0 (x1077 x125))))
(assert (x561 x14))
(assert (= (x1077 x836) (x1077 (+ x836 2))))
(assert (= (x73 (x1573 64 x1419 9)) x1419))
(assert (x7 256 x620))
(assert (= (and x2547 x3479) x2500))
(assert (x1721 x2457))
(assert (x561 x1519))
(assert (x7 1000000 x613))
(assert (x561 x263))
(assert (x3099 (* x226 2)))
(assert (x79 x1353 256))
(assert (= x1922 (x73 (x1573 64 x1922 x3494))))
(assert (x561 x3485))
(assert (= (x1077 2937758641) 0))
(assert (not (x775 (x1573 64 x1113 x614))))
(assert (x561 x1098))
(assert (x511 x869 x1864 x1886 x1207))
(assert (x3863 x1864 x869 x1020 x732))
(assert (= (x3641 x1410 8) (x2283 (* x1410 256))))
(assert (= (x73 (x1573 64 x2451 x1588)) x2451))
(assert (x1721 (- x1864 x732)))
(assert (x1782 x320 4294967296))
(assert (x3204 x1895 1000000000000000000))
(assert (=> (<= x1113 10000) (= 0 (x1077 x1113))))
(assert (x79 (* x2052 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x775 (x1573 64 x2200 x2434))))
(assert (= x516 (or x1198 x1407)))
(assert (x561 x1888))
(assert (x561 x2669))
(assert (x124 x2865))
(assert (x1782 x2716 256))
(assert (x3099 x3070))
(assert (= (x73 (x1573 64 x1922 x646)) x1922))
(assert (x561 x2001))
(assert (x1979 x2255))
(assert (x2855 x1595 (- x1924 x1835)))
(assert (x79 (* 4294967296 x3817) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3454 (or x211 x3889)))
(assert (x511 x869 x1864 x1595 x1924))
(assert (= (and x1959 x29) x572))
(assert (x561 x3606))
(assert (= (x1573 64 x370 x2735) (x1077 (x1573 64 x370 x2735))))
(assert (= (x73 (x1573 64 x1539 x269)) x1539))
(assert (x1996 x1106))
(assert (x3099 x2922))
(assert (= x526 (and (not x1563) x1923)))
(assert (x1996 x3191))
(assert (= (x1077 (x1573 64 x3813 9)) (x1573 64 x3813 9)))
(assert (x2855 x1886 (- x1207 x1595)))
(assert (x561 x937))
(assert (x2855 x1595 (- x1924 x1207)))
(assert (x2855 x869 (- x1864 x3518)))
(assert (= (and x1340 x944) x1999))
(assert (x561 x1151))
(assert (x561 x166))
(assert (x1996 x2106))
(assert (= (=> (= (> x1595 0) x3891) (and (=> (not x3891) x606) (=> (and x3891 (= (= (ite (< 0 (ite (< 0 (ite (= 1 x771) (ite (= x771 1) 1 0) (ite (= 2 x771) 1 0))) (ite (= x771 1) (ite (= x771 1) 1 0) (ite (= 2 x771) 1 0)) (ite (= x771 5) 1 0))) (ite (< 0 (ite (= 1 x771) (ite (= 1 x771) 1 0) (ite (= x771 2) 1 0))) (ite (= 1 x771) (ite (= 1 x771) 1 0) (ite (= x771 2) 1 0)) (ite (= x771 5) 1 0)) (ite (= 6 x771) 1 0)) 0) x82)) (and (=> x82 x2601) (=> (and (and (= x1692 100000000000000) (<= x1595 3402823669209384634633746074317682100000000000000) (= (x34 x1595 100000000000000) x3401) (= x3553 0)) (not x82)) (and (=> (and (and (= (x1573 64 x3239 14) x982) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x180)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x180) (= (x3448 x919) x1919) (= x3239 (ite x3695 1 0)) (= x160 (x1637 340282366920938463463374607431768211455 x3070)) (= x937 (x1637 255 x1922)) (= (< 0 x3270) x1063) (<= x3399 340282366920938463463374607431768211455) (= x1653 (- x1017 x1919)) (= x1613 (+ x2936 2)) (= (x3937 x1202) x2071) (= x1017 (+ x160 x3949)) (>= 340282366920938463463374607431768211455 x1919) (= x1266 (x1637 18446744073709551615 x3438)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x180)) (= x919 (x1573 64 x3813 9)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x180) (= x2757 (x371 (+ x180 96))) (= x2936 (+ 1 x982)) (= x1895 (* 1000000 x1595)) (not (= x180 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (< x180 x2757) (= (x3448 x919) x3399) (= x3070 (x2842 (- x3399 x1595))) (= x2812 (x1637 x2071 x1693)) (= x3342 (x3797 x1922 8)) (not (> x1595 x3399)) (= (x3641 1 x937) x1693) (= x1202 (x1573 64 x3342 x1613)) (= (ite (not (= 0 x2812)) 1 0) x3270) (= x2397 (x1637 18446744073709551615 x3401)) (<= x1595 340282366920938463463374607431768211455) (= (x34 x1895 1000000000000000000) x3438) (<= x180 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (not x3695)) (and (=> x1063 x236) (=> (and (not x1063) (and (= x1101 (x3937 x1111)) (= (x3641 1 x1392) x1643) (= (x3797 x1922 8) x1353) (= (x1637 255 x1922) x1392) (= x1604 (x2953 x1101 x1643)) (= x884 (+ 1 x2858)) (= x2858 (x1573 64 x1142 14)) (= x569 (= x1101 x1604)) (= (+ 2 x884) x3950) (= (ite x3695 1 0) x1142) (= x1111 (x1573 64 x1353 x3950)))) (and (=> (and (and (= (= x1101 0) x2117) (= x388 (x1573 64 x1353 x3950))) (not x569)) (and (=> (and (and (or (not x1411) (and (and (= (x3599 x884) x562) (= x3440 (x2953 x562 x3325)) (= (x3641 1 x2463) x3325)) x1411)) (and (= x2463 (x3797 x1353 8)) (= (= x3118 0) x1411) (= x661 (x2953 x3118 x3302)) (= x3975 (x1573 64 x2463 x2954)) (= (x1637 255 x1353) x2532) (= (+ 1 x884) x2954) (= x2590 (x1573 64 x2463 x2954)) (= x3302 (x3641 1 x2532)) (= x3118 (x3944 x2590)))) x2117) x392) (=> (not x2117) x777))) (=> (and x569 (= x3216 0)) x318))))) (=> (and x3695 (and (= x2151 (+ x2933 1)) (= x2653 (x3937 x2822)) (= x2084 (x1637 340282366920938463463374607431768211455 x2493)) (= (x3641 1 x3895) x3051) (= (* x955 1000000) x2317) (= x2317 x1814) (= (x1637 255 x1922) x3895) (= (ite (not (= 0 x1253)) 1 0) x2536) (= x1239 (x34 x1498 1000000)) (<= 0 x955) (= x334 (x1637 18446744073709551615 x3401)) (= (x2842 (- x593 x3898)) x2493) (<= x180 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x180) (= 1000000000000000000000000 x3473) (= (< 0 x2536) x457) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x180)) (= x826 (- x3583 x137)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x180) (= x628 (x34 x1814 1000000000000000000000000)) (<= x3898 340282366920938463463374607431768211455) (= x223 (x3797 x1922 8)) (= (* x1922 100000) x2337) (<= x593 340282366920938463463374607431768211455) (not (> x3898 x593)) (= (x1637 x2653 x3051) x1253) (= (ite x3695 1 0) x3459) (= x3583 (+ x1087 x2084)) (= 1 x655) (= (* x3898 1000000) x1498) (= x3730 (x1573 64 x3813 9)) (= x593 (x3575 x3730)) (= x1924 (+ 100000000 x2337)) (= x3948 (+ x2151 2)) (= x2822 (x1573 64 x223 x3948)) (= x3898 (+ (ite (< 0 (x2608 x1814 1000000000000000000000000)) 1 0) x628)) (>= 340282366920938463463374607431768211455999999999999999999 x955) (> x934 x180) (= (x3534 x1595 x1924) x955) (= (x1637 18446744073709551615 x1239) x2996) (<= x137 340282366920938463463374607431768211455) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x180)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x180)) (= (x371 (+ 96 x180)) x934) (= (x3575 x3730) x137) (= x2933 (x1573 64 x3459 14)))) (and (=> (and (and (= x3407 (ite x3695 1 0)) (= x3550 (x3797 x1922 8)) (= x2961 (+ x2788 2)) (= (x3937 x941) x940) (= (= x940 x1824) x1370) (= x791 (x1637 255 x1922)) (= x2371 (x3641 1 x791)) (= (+ x298 1) x2788) (= x298 (x1573 64 x3407 14)) (= x941 (x1573 64 x3550 x2961)) (= (x2953 x940 x2371) x1824)) (not x457)) (and (=> (and (not x1370) (and (= (= x940 0) x57) (= x1559 (x1573 64 x3550 x2961)))) (and (=> (not x57) x1763) (=> (and (and (and (= (= x2013 0) x961) (= x2387 (x2953 x2013 x687)) (= x2742 (+ x2788 1)) (= x1742 (x1573 64 x3484 x2742)) (= x687 (x3641 1 x3647)) (= x3647 (x1637 255 x3550)) (= x3484 (x3797 x3550 8)) (= x2013 (x3944 x1742)) (= x2415 (x1573 64 x3484 x2742))) (or (and x961 (and (= (x3599 x2788) x1164) (= (x3641 1 x3484) x2843) (= (x2953 x1164 x2843) x1341))) (not x961))) x57) x1420))) (=> (and (= x535 0) x1370) x716))) (=> x457 x1823))))))))) x252))
(assert (not (x775 (x1573 64 x3239 14))))
(assert (x79 (* 65536 x102) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= (> x1003 18446744073709551615) x2293) (or (and (and (= (x3797 x1003 64) x3024) (= x135 (+ x3487 64))) x2293) (and (and (= x3024 x1003) (= x135 x3487)) (not x2293)))) x1022) x3909))
(assert (x1782 x1126 18446744073709551616))
(assert (x2855 x1864 (- x869 x3518)))
(assert (x561 x1858))
(assert (x2855 x528 (- x1835 x869)))
(assert (x3863 x869 x1864 x3320 x3518))
(assert (= (or x2966 x3049) x2055))
(assert (x3863 x1595 x1924 x2955 x2764))
(assert (= (and (not x1250) x3323) x1398))
(assert (= (x73 (x1573 64 x1836 9)) x1836))
(assert (x3099 (* x1402 2)))
(assert (not (x775 (x1573 64 65535 x3982))))
(assert (x1721 x629))
(assert (x1782 x2361 4294967296))
(assert (x1721 (x2706 2 x2268)))
(assert (= (and x2819 (not x1587)) x1939))
(assert (< 10000 (x1573 64 0 x938)))
(assert (= (x3797 x3348 128) (x34 x3348 340282366920938463463374607431768211456)))
(assert (x2855 x3320 (- x3518 x1020)))
(assert (= x345 (and x1412 (not x710))))
(assert (= x2099 (x73 (x1573 64 x2099 14))))
(assert (x79 (* 340282366920938463463374607431768211456 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x511 x869 x1864 x1835 x528))
(assert (x561 x2987))
(assert (= x444 (and x1509 x2730)))
(assert (x1721 (- x3320 x2764)))
(assert (x3863 x3320 x3518 x1835 x528))
(assert (x79 (* x2811 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3863 x1886 x1207 x732 x1020))
(assert (=> (>= 10000 x3551) (= (x1077 x3551) 0)))
(assert (x561 x3484))
(assert (= (x1077 18446744073709551615999999999999999999) 0))
(assert (x3863 x3320 x3518 x1924 x1595))
(assert (x497 x940))
(assert (= (x3641 x3851 2) (x2283 (* 4 x3851))))
(assert (x3099 x2439))
(assert (x561 x584))
(assert (x561 x1828))
(assert (x561 x487))
(assert (x561 x628))
(assert (x79 (* x3746 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x775 (x1573 64 65535 x3758))))
(assert (x561 x3085))
(assert (= 64 (x1883 (x1573 64 x125 14))))
(assert (= x1779 (and x3602 (not x3059))))
(assert (not (x775 (x1573 64 x2087 x2864))))
(assert (x3099 x3438))
(assert (= x878 (or x2815 x645)))
(assert (= (x1883 (x1573 64 x1731 x1760)) 64))
(assert (= x2915 (and (not x2229) x1733)))
(assert (=> (<= x2200 10000) (= (x1077 x2200) 0)))
(assert (x561 x3817))
(assert (x561 x19))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 1 14)))
(assert (x561 x3890))
(assert (x561 x2105))
(assert (> (x1573 64 1 14) 10000))
(assert (= x2883 (and x2632 x478)))
(assert (x3099 (* x67 4294967296)))
(assert (x561 x2513))
(assert (x561 x800))
(assert (x561 x1419))
(assert (x2855 x732 (- x1020 x2764)))
(assert (= (and x2639 x2256) x452))
(assert (= (or x3729 x2019) x3507))
(assert (x561 x213))
(assert (= (or x2026 x3886) x3340))
(assert (= x3678 (and (not x1040) x2709)))
(assert (x7 16 x1954))
(assert (= x1057 (or x3554 x2376)))
(assert (< 10000 (x1573 64 x2651 5)))
(assert (= (=> (and (= (> x2555 65535) x1655) (or (and x1655 (and (= (+ x3470 16) x2553) (= (x3797 x2555 16) x3976))) (and (not x1655) (and (= x3470 x2553) (= x3976 x2555))))) x1508) x1727))
(assert (= x3980 x3199))
(assert (x3863 x1207 x1886 x1835 x528))
(assert (= x2607 (or x1820 x2489)))
(assert (x7 1000000 x1595))
(assert (= x465 (and x3577 x2015)))
(assert (x561 x1074))
(assert (x561 x2250))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 0 x938)))
(assert (= x2235 (and x3387 x3482)))
(assert (= x3173 (or x1284 x2356)))
(assert (x1979 x3853))
(assert (x561 x2797))
(assert (x561 x2106))
(assert (x561 x3058))
(assert (= (=> (and (and (= (x3641 x1176 128) x271) (= (x1573 64 x1410 x601) x1160) (= (- 255 (ite (= 0 (x3641 x2746 1)) x1514 (+ x1514 1))) x441) (= (= x271 0) x1564) (= x1410 (+ x441 (x3641 x2471 8))) (= (+ x1712 1) x601) (= (x532 x1160) x1176)) (or (and (not x1564) (and (= 128 x3618) (= x1408 x271))) (and x1564 (and (= x1408 x1176) (= x3618 0))))) x3777) x1493))
(assert (x3099 x221))
(assert (x561 x1465))
(assert (x511 x3518 x3320 x2764 x2955))
(assert (= x2508 (x3318 (x1573 64 0 x2508))))
(assert (x561 x2137))
(assert (x1979 x703))
(assert (x561 x2528))
(assert (x1996 x2065))
(assert (x1979 x3539))
(assert (x511 x1924 x1595 x869 x1864))
(assert (x1996 x1532))
(assert (x7 2 x2678))
(assert (x79 (* x108 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x797))
(assert (x1721 (- x528 x1886)))
(assert (< (x1573 64 x903 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2817))
(assert (x511 x2955 x2764 x869 x1864))
(assert (x561 x715))
(assert (= x2135 (and x2220 x1964)))
(assert (= x1367 (and x2328 (not x3771))))
(assert (x1996 x1548))
(assert (= (x3318 (x1573 64 x370 x112)) x112))
(assert (= x1731 (x73 (x1573 64 x1731 x1760))))
(assert (x1782 x3936 16))
(assert (> (x1573 64 x1682 14) 10000))
(assert (= (x1573 64 x125 14) (x1077 (x1573 64 x125 14))))
(assert (= (=> (and (or (and (and (= (+ 4 x3263) x3195) (= x558 (x3797 x1242 4))) x3536) (and (not x3536) (and (= x3195 x3263) (= x558 x1242)))) (= x3536 (> x1242 15))) x1036) x587))
(assert (x561 x220))
(assert (x561 x1079))
(assert (x1782 x3989 340282366920938463463374607431768211456))
(assert (x7 256 x1830))
(assert (x561 x860))
(assert (x1782 x1925 16))
(assert (= (and x542 (not x1062)) x2740))
(assert (x1782 x2998 4))
(assert (x79 x3401 18446744073709551616))
(assert (= (x73 (x1573 64 0 x2735)) 0))
(assert (x1782 x1224 2))
(assert (x1996 x149))
(assert (x1979 x2439))
(assert (x561 x2281))
(assert (= (x1883 (x1573 64 x3407 14)) 64))
(assert (= (x73 (x1573 64 x3484 x2742)) x3484))
(assert (=> (>= 10000 x1102) (= (x1077 x1102) 0)))
(assert (= x1165 (x3318 (x1573 64 x370 x1165))))
(assert (x561 x965))
(assert (x561 x1705))
(assert (=> (<= x3242 10000) (= (x1077 x3242) 0)))
(assert (= (x1883 (x1573 64 255 x3760)) 64))
(assert (= (and x3154 x1958) x932))
(assert (= (x3641 x575 16) (x2283 (* x575 65536))))
(assert (= 64 (x1883 (x1573 64 0 x2735))))
(assert (= x2984 (x3318 (x1573 64 0 x2984))))
(assert (x561 x2820))
(assert (= (x3797 x1045 128) (x34 x1045 340282366920938463463374607431768211456)))
(assert (x511 x1835 x528 x3320 x3518))
(assert (not (x775 (x1573 64 x1836 9))))
(assert (x3099 (* x2512 2)))
(assert (= (x1883 (x1573 64 x2000 14)) 64))
(assert (= (x1573 64 1 14) (x1077 (x1573 64 1 14))))
(assert (x1721 (- x1886 x1835)))
(assert (= (and x1107 x3428) x2680))
(assert (= (x2283 (* x3228 65536)) (x3641 x3228 16)))
(assert (x1782 x779 2))
(assert (= x3157 (or x2520 x175)))
(assert (x3590 x2797))
(assert (= (=> (and (or (and (not x638) (and (= x2422 x3408) (= x1666 x3316))) (and x638 (and (= (x3797 x3316 4) x1666) (= x2422 (+ x3408 4))))) (= (< 15 x3316) x638)) x2028) x1204))
(assert (x561 x3192))
(assert (x561 x448))
(assert (x3863 x2764 x2955 x869 x1864))
(assert (x2855 x2955 (- x2764 x3518)))
(assert (= (and x96 (not x1340)) x2384))
(assert (=> (<= x2666 10000) (= (x1077 x2666) 0)))
(assert (x561 x1482))
(assert (x561 x1037))
(assert (= x536 (x3318 (x1573 64 x1765 x536))))
(assert (x1782 x1362 65536))
(assert (x1721 x1748))
(assert (x3863 x1924 x1595 x1886 x1207))
(assert (x561 x1675))
(assert (x775 6277101735386680763835789423207666416102355444464034512896))
(assert (x1996 340282366920938463463374607431768211456))
(assert (x561 x3496))
(assert (x3590 x2011))
(assert (x3863 x1864 x869 x1924 x1595))
(assert (< 10000 (x1573 64 x2066 9)))
(assert (not (x775 (x1573 64 x1731 x1760))))
(assert (x1721 (- x1886 x2955)))
(assert (x561 x834))
(assert (x561 x832))
(assert (= (=> (and (or (and (and (= x1106 (x3797 x643 64)) (= x1384 (+ x2153 64))) x1351) (and (not x1351) (and (= x1106 x643) (= x1384 x2153)))) (= x1351 (> x643 18446744073709551615))) x2386) x2633))
(assert (x561 x3947))
(assert (= (x3797 x2777 16) (x34 x2777 65536)))
(assert (x561 x3208))
(assert (= x4 (or x3523 x1892)))
(assert (= (x2283 (* 4294967296 x3615)) (x3641 x3615 32)))
(assert (= (or x483 x1570) x3018))
(assert (x3099 x1239))
(assert (x1721 (- x3518 x528)))
(assert (x561 x2000))
(assert (x775 4294967295))
(assert (x2112 x2010))
(assert (x561 x3788))
(assert (= x1933 (and x2381 (not x717))))
(assert (= x3525 (=> (and (or (and x500 (and (= x712 x1304) (= x364 x3611))) (and (not x500) (and (= x3907 x712) (= (+ 8 x3611) x364)))) (and (= x3907 (x3641 x1304 8)) (= (= 0 x3907) x500))) x3739)))
(assert (x561 x1569))
(assert (x561 x2264))
(assert (x2855 x732 (- x1020 x1864)))
(assert (= x1198 (and x2758 x2158)))
(assert (= x3626 (=> (and (and (and (and (= false x3672) (= x699 x231) (= 785044283 x2574) (= x3837 (x1492 x1196)) (= x3064 x2470) (<= x609 340282366920938463463374607431768211455) (= false x240) (= false x644) (= x1096 (x1573 64 x2325 9)) (>= 281474976710655 x2325) (= x2486 (x1573 64 x3064 5)) (= (x3076 x1096) x609) (<= 1 x3837) (= false x3471) (>= 127 x2856) (= x521 x2377) (= x2659 x3868) (= 132 x1005) (= x2950 x3064) (<= x2856 127) (= x3198 x691) (= x3973 false) (= x609 x1435) (= false x2802) (= (x1375 x2486) x2325)) (and (= x2377 x3121) (and (and (and (and (= x3198 x771) (= x13 false)) (and (= x2408 x3491) (and (= (x1573 64 x3121 5) x3732) (= false x1486) (= x1844 (x3433 x1196)) (= 0 x651) (>= 127 x980) (= x3241 (x3067 x1251)) (= (= x2032 1) x1340) (= (x34 (- x3977 100000000) 100000) x1922) (= x651 (ite (= x771 0) (ite (= x771 0) 1 0) (ite (> x771 6) 1 0))) (= (x1573 64 x3491 5) x228) (= (x1492 x1196) x695) (= x3813 (x1375 x228)) (>= 127 x980) (= x1359 false) (= 1495468574 x3125) (<= x165 281474976710655) (= (ite x1340 1 0) x2743) (= x3121 x99) (= x1251 x2408) (= x2032 (x1637 1 x771)) (>= 281474976710655 x3813) (>= x165 1) (= x165 (x1375 x3732)) (= x3092 x1844) (>= x695 1) (= x2521 x3977)))) (= x1551 x3868)) (= x231 x3977)))) (and (= x2950 x521) (= x1401 false) (<= x2884 127) (>= 340282366920938463463374607431768211455 x2314) (>= 281474976710655 x1419) (= x2314 (x399 x622)) (<= 1 x1054) (= x1419 (x1375 x2333)) (= (x1573 64 x1143 5) x2333) (= x2314 x2182) (= (x1573 64 x1419 9) x622) (= x3257 false) (= false x1047) (= x141 false) (= x1143 x2279) (= (x1492 x1196) x1054) (= 36 x753) (= x2250 2937758641) (= false x787) (= false x1153) (<= x2884 127) (= x1143 x3095))) (and (= x273 false) (= x1264 1000000000000000000) (= x1269 true) (= 3 x3495) (= x3657 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x674) (<= 0 x674) (>= 127 x385) (<= x3085 127) (<= x3085 127) (= x1169 (x1492 x1196)) (= x2429 false) (= x3343 (x1492 x1196)) (>= 127 x1098) (= x3163 false) (>= 127 x883) (<= x2987 1461501637330902918203684832716283019655932542975) (= false x926) (= x3569 1000000) (<= 1 x1310) (<= x2763 127) (>= 1461501637330902918203684832716283019655932542975 x521) (not (= x3206 x3663)) (<= x3393 1461501637330902918203684832716283019655932542975) (<= 0 x1289) (= x3139 254742742) (not (= x3206 x1196)) (>= 1461501637330902918203684832716283019655932542975 x1681) (= false x2300) (<= x2408 1461501637330902918203684832716283019655932542975) (= 1000000 x1718) (= x2659 x361) (= x1512 x699) (>= 255 x691) (not x1235) (= 0 x2342) (<= 0 x3046) (= x2878 36) (>= 1461501637330902918203684832716283019655932542975 x3793) (>= x2580 0) (= x1481 false) (= false x999) (<= 100000000 x699) (>= x3663 1) (= x3814 x521) (= x279 1) (>= 127 x385) (= x3100 100000000) (>= x3469 1) (= 5 x3373) (>= x113 0) (= x3805 (< 0 (x1492 x1196))) (not (= x3663 x1196)) (<= x883 127) (= false x2004) (<= x1098 127) (= (x1492 x1196) x1168) (= x841 100000) (= x1265 0) (= x2147 false) (= x1949 1000000) (= x3283 x691) (= 4 x857) (= 4 x2011) (<= 1 x482) x3103 (= 4 x2797) (= x788 1000099900000) (= x618 true) (= false x1972) (= x292 1000000000000000000) (= (x1492 x1196) x482) (>= x2659 1) (= (= 3 x3021) x2744) (<= 1 x1681) (>= 1461501637330902918203684832716283019655932542975 x1196) (= x2230 false) (= false x1944) (<= x3206 1461501637330902918203684832716283019655932542975) (<= 1 x1168) (= false x1183) (= x2549 x1196) (= x625 false) (<= 1 x3206) (= (< 0 (x1492 x3663)) x1523) (= (or x3476 x2744) x2430) (>= x521 0) (>= x3793 0) (= (< 0 (x1492 x3206)) x3103) (>= x1169 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3046) (<= x1289 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3663 x1681) (>= x1196 1) (= false x2346) (<= x3469 1461501637330902918203684832716283019655932542975) (= x3300 100000000000000) (= false x3120) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2580) (= 1328352365 x1786) (<= x699 1000099900000) (= x1632 false) x3805 (= x3476 (= x3283 1)) (= false x3455) (= x3206 x3469) (>= 1461501637330902918203684832716283019655932542975 x3663) (<= x113 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x691) (= x1870 1000000) (<= x2659 34028236692093846346337460743176821) (= false x2710) (<= 0 x3393) (= 100000000000000 x291) (= x1381 false) (= x1310 (x1492 x1196)) (= false x3576) (= 4 x3462) (= x1121 0) (= x330 false) (<= x2763 127) (= x410 false) (= x1622 (or x2430 x3477)) (= x3048 0) x1622 (>= x10 0) (<= 0 x2408) x2121 (= 1980319261 x132) (= x3187 3875917889) (= x851 false) (= x1990 true) (>= x3343 1) (= x691 x212) (= x2121 (= x2408 x3814)) (<= x10 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x118) (= (= 5 x212) x3477) (= x1235 (= x1196 x2408)) (= 2908516037 x648) x1523 (= false x3502) (= x981 true) (= x2085 false) (= x521 x3095) (= x3021 x691) (= false x1039) (= 4 x1213) (= 100000000000 x2581))) (and (=> (and (and (and (= (x3089 x734) x2347) (= (x1573 64 0 x1644) x734) (= (= 0 x355) x2627) (= 1 x3587) (= 0 x3994) (= x1644 (+ 2 x824)) (= 0 x1547) (= x824 (+ x1540 1)) (= x1540 (x1573 64 0 14)) (= (x3797 x2347 1) x355) (= 0 x1675)) (or (and (= x3693 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2627) (and (and (= 1 x3693) (= x1499 0)) (not x2627)))) x1340) x3699) (=> (and (and (= 16777215 x227) (= (+ 1 x1505) x1614) (= x1536 (x1573 64 65535 x2857)) (= x1810 255) (= x2630 1) (= 254 x2048) (= x2989 (x3089 x1536)) (= x2790 (x3641 x2989 1)) (= x2857 (+ 2 x1614)) (= x3604 (= 0 x2790)) (= (x1573 64 1 14) x1505)) (not x1340)) (and (=> (and x3604 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)) x190) (=> (and (and (= (< 340282366920938463463374607431768211455 x2790) x3262) (or (and (and (= x3370 x2790) (= x2414 0)) (not x3262)) (and x3262 (and (= 128 x2414) (= x3370 (x3797 x2790 128)))))) (not x3604)) x1268)))))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1080 5)))
(assert (= x2385 (and x3422 (not x1657))))
(assert (x561 x3274))
(assert (x7 100000 x901))
(assert (= (and x29 (not x1959)) x790))
(assert (x561 x2417))
(assert (x79 (* 256 x189) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1656 (and (not x874) x2334)))
(assert (x561 x821))
(assert (x561 x776))
(assert (x1782 x2065 340282366920938463463374607431768211456))
(assert (= 0 (x73 (x1573 64 0 x2434))))
(assert (x79 x3438 18446744073709551616))
(assert (x561 x2146))
(assert (x1721 x2625))
(assert (x79 (ite (> 256 x2604) (x2706 2 x2604) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x34 x2840 256) (x3797 x2840 8)))
(assert (x7 256 x1410))
(assert (x561 x2623))
(assert (x561 x3462))
(assert (x3099 (* x1903 256)))
(assert (x3863 x1595 x1924 x528 x1835))
(assert (x1996 x3644))
(assert (x561 x1815))
(assert (x79 (* 256 x904) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2283 (* 256 x620)) (x3641 x620 8)))
(assert (= (and (not x2705) x3755) x1702))
(assert (x561 x687))
(assert (x1996 x3463))
(assert (x1721 x2512))
(assert (= (x2283 (ite (< x721 256) (x2706 2 x721) 0)) (x3641 1 x721)))
(assert (x3863 x1924 x1595 x2764 x2955))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1102 14)))
(assert (x1996 x2491))
(assert (= x496 (and x3807 x2292)))
(assert (= x2600 (and x1636 x1530)))
(assert (x561 x2414))
(assert (= (and (not x3074) x737) x3717))
(assert (x3099 x1529))
(assert (x79 (* 256 x1731) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3204 x1595 100000000000000))
(assert (x561 x3644))
(assert (x561 x3512))
(assert (x561 x791))
(assert (not (x775 (x1573 64 x556 x126))))
(assert (x3863 x3518 x3320 x1835 x528))
(assert (x561 x3843))
(assert (= x2673 (or x3202 (and x2754 (not x2117)))))
(assert (= (=> (= x535 1) x716) x1763))
(assert (x2871 x771))
(assert (x2855 x1595 (- x1924 x528)))
(assert (= (x73 (x1573 64 x3551 14)) x3551))
(assert (= (and (not x1) x2276) x461))
(assert (< 10000 (x1573 64 0 x2735)))
(assert (= (and x3340 x3437) x1881))
(assert (x497 x3302))
(assert (x3863 x3518 x3320 x1924 x1595))
(assert (= x1823 x716))
(assert (= (and (not x2782) x1541) x3364))
(assert (x1782 x2247 4294967296))
(assert (x561 x2830))
(assert (= x1621 (or x3678 x2321)))
(assert (= x2617 (=> (and (= (x1573 64 x2628 x1850) x1165) (= (+ 1 x2172) x2162) (= x2172 (x1573 64 x370 x1165)) (= x2099 (ite x2973 1 0)) (= x2628 (x1637 16777215 x2865)) (= x1850 (x1573 64 x2099 14))) x3980)))
(assert (x1782 x1012 340282366920938463463374607431768211456))
(assert (= (and x3597 (not x3744)) x3958))
(assert (x561 x202))
(assert (= x1001 (=> (and (and (= x974 (= x2502 0)) (= x2502 (x3641 x3851 2))) (or (and (and (= x3170 x329) (= x3851 x2678)) x974) (and (not x974) (and (= x2678 x2502) (= x329 (+ x3170 2)))))) x27)))
(assert (= x3913 (x3318 (x1573 64 x422 x3913))))
(assert (=> (<= x1848 10000) (= 0 (x1077 x1848))))
(assert (x1782 x3405 18446744073709551616))
(assert (= (or x3820 x2907) x485))
(assert (x561 x887))
(assert (= x2357 (=> (and (= (> x3644 4294967295) x2619) (or (and (and (= x3485 x1796) (= x1362 x3644)) (not x2619)) (and (and (= (+ 32 x1796) x3485) (= x1362 (x3797 x3644 32))) x2619))) x2485)))
(assert (= x2398 (or x3667 x262)))
(assert (x79 (* 4294967296 x1937) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x3615))
(assert (x511 x732 x1020 x1886 x1207))
(assert (x561 x3142))
(assert (x2855 x869 (- x1864 x2764)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3484 x2742)))
(assert (x7 65536 x3859))
(assert (= (x34 x3058 4294967296) (x3797 x3058 32)))
(assert (x561 x984))
(assert (x1996 x1012))
(assert (= (x73 (x1573 64 x2604 x2389)) x2604))
(assert (x561 x1244))
(assert (= x2957 (or x2597 x3607)))
(assert (x561 x1045))
(assert (x1489 x1226))
(assert (x2855 x1835 (- x528 x1595)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1297 14)))
(assert (= x1247 (and x1500 x949)))
(assert (x561 x3825))
(assert (x3863 x2764 x2955 x1207 x1886))
(assert (= (x73 (x1573 64 x370 x112)) x370))
(assert (> (x1573 64 x3391 14) 10000))
(assert (x1914 x2922))
(assert (= (and (not x286) x2779) x2081))
(assert (x775 100000))
(assert (= (and x3786 (not x3040)) x373))
(assert (= (x2283 (* 2 x108)) (x3641 x108 1)))
(assert (= (x3797 x2401 2) (x34 x2401 4)))
(assert (x1979 x629))
(assert (x561 x3389))
(assert (= (x1077 (+ x1614 2)) (x1077 x1614)))
(assert (= (or x3598 x611) x3660))
(assert (x561 x3709))
(assert (x561 x922))
(assert (x3099 16777216))
(assert (x561 x806))
(assert (x561 x3247))
(assert (= (x3318 (x1573 64 x1142 14)) 14))
(assert (= x2624 (x73 (x1573 64 x2624 5))))
(assert (x3099 256))
(assert (x561 x752))
(assert (x1721 (- x732 x1864)))
(assert (= (x73 (x1573 64 x1848 x122)) x1848))
(assert (x1721 x2764))
(assert (x561 x3248))
(assert (x1721 (- x1864 x2955)))
(assert (= (x1573 64 x1353 x3950) (x1077 (x1573 64 x1353 x3950))))
(assert (= x786 (and x2876 x2568)))
(assert (x1721 x732))
(assert (x2855 x528 (- x1835 x1595)))
(assert (= x2709 (or x3395 x1441)))
(assert (= (x3318 (x1573 64 x224 x2189)) x2189))
(assert (x1996 x1595))
(assert (x511 x1924 x1595 x2764 x2955))
(assert (= (and x471 x386) x3468))
(assert (= 0 (x73 (x1573 64 0 x1644))))
(assert (= (and x690 x3213) x1290))
(assert (x561 x620))
(assert (= x2125 (=> (and (= (< 15 x1074) x2016) (or (and (and (= (+ x3410 4) x3753) (= (x3797 x1074 4) x1816)) x2016) (and (not x2016) (and (= x1816 x1074) (= x3410 x3753))))) x900)))
(assert (= x2170 (and x2252 x1161)))
(assert (= (x3641 x2512 1) (x2283 (* x2512 2))))
(assert (x561 x1142))
(assert (x561 x642))
(assert (x3863 x1595 x1924 x1207 x1886))
(assert (x7 256 x1478))
(assert (x561 x224))
(assert (x561 x1266))
(assert (= (or x2064 x1170) x472))
(assert (< (x1573 64 0 x1432) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x1373 x1993) x3460))
(assert (= (x3641 x3571 64) (x2283 (* x3571 18446744073709551616))))
(assert (= (=> (and (= x896 (= 0 x2141)) (or (and (= x973 1) (not x896)) (and x896 (and (= (x1573 64 0 x2434) x375) (= x3409 (x64 x375)) (= (x2842 (- x3409 x1113)) x3736) (>= 1099511627775 x3409) (= x973 (ite (< 0 x3736) 0 1)))))) x1090) x2475))
(assert (x561 x221))
(assert (x1996 x2054))
(assert (= (and x3267 x2550) x1307))
(assert (x1721 (- x1207 x3518)))
(assert (= x247 (and x3521 (not x2296))))
(assert (= 64 (x1883 (x1573 64 x903 14))))
(assert (= (x1883 (x1573 64 x1037 14)) 64))
(assert (x2462 x3853))
(assert (= x3540 (and (not x1909) x3166)))
(assert (x1996 x1200))
(assert (= x94 x39))
(assert (= (x1077 (x1573 64 x1108 14)) (x1573 64 x1108 14)))
(assert (= x1964 (and x92 (not x672))))
(assert (x511 x2955 x2764 x1835 x528))
(assert (= x870 (or x3717 x1352)))
(assert (= x3707 (=> (and (and (= (x3641 x2753 4) x1520) (= (= x1520 0) x1947)) (or (and (and (= x3025 x1790) (= x3181 x2753)) x1947) (and (not x1947) (and (= x3025 (+ x1790 4)) (= x1520 x3181))))) x708)))
(assert (= (x2283 (* 2 x2678)) (x3641 x2678 1)))
(assert (x1721 (- x528 x3518)))
(assert (= x2991 (and x348 x810)))
(assert (x1721 x2811))
(assert (x561 x354))
(assert (< 10000 (x1573 64 x2666 x97)))
(assert (x561 x633))
(assert (x1721 x340))
(assert (x561 x3571))
(assert (= x83 (or x2985 x2915)))
(assert (= (=> (= x1389 (= x2929 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (and (= (ite (>= 255 x2929) x1130 (x2953 16776960 x2929)) x930) (= (x371 (+ x2929 16776960)) x1130)) (not x1389)) x155) (=> (and x1389 (and (= (x264 x2903) x1597) (= (x3641 x1597 1) x1516) (= x1502 255) (= 254 x117) (= x2903 (x1573 64 255 x544)) (= (+ x1752 1) x544) (= (= x1516 0) x2782))) (and (=> (and x2782 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3127)) x1406) (=> (and (and (= x2795 (> x1516 340282366920938463463374607431768211455)) (or (and x2795 (and (= x401 128) (= (x3797 x1516 128) x1236))) (and (not x2795) (and (= 0 x401) (= x1236 x1516))))) (not x2782)) x3762))))) x3988))
(assert (x79 (ite (< x791 256) (x2706 2 x791) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1721 (- x2764 x3518)))
(assert (= (x3797 x785 8) (x34 x785 256)))
(assert (= x96 (or x3631 x1900)))
(assert (=> (>= 10000 x1037) (= 0 (x1077 x1037))))
(assert (= x531 (or x1083 x2592)))
(assert (x1721 x2471))
(assert (not (x775 (x1573 64 x3342 x1613))))
(assert (x1996 x2373))
(assert (x7 16 x16))
(assert (x3099 (* 16 x16)))
(assert (x3099 (* x1410 256)))
(assert (= x825 (=> (and (or (and (and (= x2458 (+ 4 x3141)) (= x166 (x3797 x1577 4))) x1403) (and (and (= x166 x1577) (= x2458 x3141)) (not x1403))) (= (> x1577 15) x1403)) x647)))
(assert (= (x3641 1 x2532) (x2283 (ite (> 256 x2532) (x2706 2 x2532) 0))))
(assert (x561 x3565))
(assert (= x1306 (=> (and (or (and (and (= x1103 x142) (= x610 x3156)) (not x3650)) (and x3650 (and (= x1103 (+ x142 64)) (= x610 (x3797 x3156 64))))) (= (< 18446744073709551615 x3156) x3650)) x3815)))
(assert (x561 x763))
(assert (x561 x2581))
(assert (x561 x1502))
(assert (x7 2 x2494))
(assert (= (or x2612 x2752) x944))
(assert (x3099 (* x103 4294967296)))
(assert (= (x1077 (+ x2526 1)) (x1077 x2526)))
(assert (x561 x2880))
(assert (x561 x1251))
(assert (x561 x379))
(assert (= x3550 (x73 (x1573 64 x3550 x2961))))
(assert (= x184 (and x1014 (not x2943))))
(assert (= (and (not x2220) x1964) x912))
(assert (x3099 (* x1176 340282366920938463463374607431768211456)))
(assert (= 64 (x1883 (x1573 64 x1177 x126))))
(assert (= (and x1923 x1563) x285))
(assert (= x2282 (or x2896 x1664)))
(assert (x79 (* x2666 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x730 x2653 x3051))
(assert (=> (<= x1196 10000) (= (x1077 x1196) 0)))
(assert (= (x73 (x1573 64 x3459 14)) x3459))
(assert (x561 x2466))
(assert (> (x1573 64 255 x3545) 10000))
(assert (x7 4 x3851))
(assert (= (x3641 x1295 8) (x2283 (* 256 x1295))))
(assert (x1489 x2047))
(assert (= 64 (x1883 (x1573 64 x1903 x3101))))
(assert (x561 x3885))
(assert (x1782 x1314 16))
(assert (= (x1077 (+ x2788 1)) (x1077 x2788)))
(assert (x561 x811))
(assert (= (x3641 x676 8) (x2283 (* 256 x676))))
(assert (= (=> (and (or (and (and (>= 1099511627775 x220) (= x885 (x1573 64 0 x2434)) (= (x64 x885) x220) (= (x2842 (- x220 x592)) x3953) (= (ite (> x3953 0) 0 1) x3248)) x1484) (and (= x3248 1) (not x1484))) (= (= 0 x3341) x1484)) x2369) x1778))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3407 14)))
(assert (x561 x3438))
(assert (x1489 x3600))
(assert (= x121 (and (not x529) x1379)))
(assert (x561 x1180))
(assert (x561 x317))
(assert (x561 x3812))
(assert (= (and x1340 x3862) x774))
(assert (x511 x1207 x1886 x2764 x2955))
(assert (x561 x2893))
(assert (= (x1077 (x1573 64 x3551 14)) (x1573 64 x3551 14)))
(assert (= (x1077 x2151) (x1077 (+ 2 x2151))))
(assert (= (x1077 x884) (x1077 (+ x884 1))))
(assert (= x3443 (or x209 x1433)))
(assert (= (x3641 x3432 8) (x2283 (* 256 x3432))))
(assert (= x50 (=> (and (= x1248 (< 0 x2825)) (or (and (and (= x2480 0) (= x867 0) (= x2417 0)) (not x1248)) (and x1248 (and (= x688 (x1743 x2303)) (= (x1573 64 0 x2606) x2303) (= (x1473 x1163) x3293) (= x2417 x3293) (= x2480 1) (= x688 x867) (<= x688 1099511627775) (>= 1099511627775 x3293) (= (x1573 64 0 x2606) x1163))))) x104)))
(assert (= (=> (and (or (and (and (= 0 x887) (= x3061 0) (= x598 0)) (not x3269)) (and (and (>= 1099511627775 x3812) (= x3812 (x1049 x2331)) (= x3812 x887) (= x3061 1) (= (x2478 x3291) x689) (= x689 x598) (= x2331 (x1573 64 0 x293)) (= x3291 (x1573 64 0 x293)) (>= 1099511627775 x689)) x3269)) (= x3269 (> x1997 0))) x2003) x665))
(assert (= x935 (and x1806 x86)))
(assert (x561 x1310))
(assert (x1996 x806))
(assert (x511 x869 x1864 x732 x1020))
(assert (= (and (not x206) x3082) x178))
(assert (x7 100000000000000 x1551))
(assert (x561 x1330))
(assert (= x1630 (and x3309 x3117)))
(assert (< 10000 (x1573 64 65535 x2857)))
(assert (= (x1077 (x1573 64 x592 x2434)) (x1573 64 x592 x2434)))
(assert (= (and x849 x1819) x2245))
(assert (x1721 x2746))
(assert (x561 x189))
(assert (x561 x3022))
(assert (x3204 x98 1000000000000000000))
(assert (= x3097 (and x2978 x3904)))
(assert (x1721 x3416))
(assert (=> (>= 10000 x2628) (= (x1077 x2628) 0)))
(assert (= (or x178 x168) x3422))
(assert (= x2369 (=> (= x2193 x3248) x3158)))
(assert (x1721 x901))
(assert (= (or x2755 x76) x2778))
(assert (x511 x3518 x3320 x869 x1864))
(assert (x2855 x1020 (- x732 x528)))
(assert (= (or x2545 x2665) x2395))
(assert (= x3176 (and (not x3931) x2420)))
(assert (= (x2283 (* x1903 256)) (x3641 x1903 8)))
(assert (= (and x1346 x986) x90))
(assert (= x2185 (=> (and (= (> x263 3) x2663) (or (and (not x2663) (and (= x185 x354) (= x434 x263))) (and (and (= (+ 2 x354) x185) (= x434 (x3797 x263 2))) x2663))) x1467)))
(assert (= x1664 (and x3954 x1729)))
(assert (= (=> (and (= x3169 (< 255 x2839)) (or (and x3169 (and (= (+ x3235 8) x3263) (= (x3797 x2839 8) x1242))) (and (not x3169) (and (= x1242 x2839) (= x3235 x3263))))) x587) x2975))
(assert (= (=> (and (= (x1637 16777215 x629) x1477) (= (+ 1 x2747) x1468) (= (x1573 64 x1477 x2421) x1851) (= x2421 (x1573 64 x584 14)) (= (ite x2973 1 0) x584) (= x2747 (x1573 64 x2417 x1851))) x1860) x3995))
(assert (x3863 x2955 x2764 x3320 x3518))
(assert (x1996 x1362))
(assert (x1721 (- x3518 x1924)))
(assert (= x3382 (=> (and (= x2508 (x1573 64 x367 x1616)) (= (x1573 64 x1297 14) x1616) (= (> x3186 0) x1567) (= (ite x2973 1 0) x1297) (<= x518 1099511627775) (= (x1637 16777215 x629) x367) (= x442 (x1573 64 0 x2508)) (= (x256 x442) x518) (= (ite (= x518 0) 0 1) x3186)) (and (=> (and (not x1567) (and (= (x3797 x785 8) x3916) (= (+ 1 x2526) x836) (= x125 (ite x2973 1 0)) (= (x1637 x1966 x3645) x2894) (= x2526 (x1573 64 x125 14)) (= x32 (+ x836 2)) (= (x1573 64 x3916 x32) x1710) (= (x3089 x1710) x1966) (= x3645 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3641 1 x2559))) (= (x1637 255 x629) x2559) (= (= x1966 x2894) x717) (= (x1637 16777215 x629) x785))) (and (=> (and (= x358 0) x717) x94) (=> (and (not x717) (and (= x501 (= 0 x2894)) (= x3966 (x1573 64 x3916 x32)))) (and (=> (not x501) x864) (=> (and (and (or (not x541) (and (and (= x685 (x1637 x2358 x3208)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3641 1 x2268)) x3208) (= x2358 (x1187 x836))) x541)) (and (= (x462 x2861) x1046) (= (+ 1 x836) x1125) (= (x1573 64 x2268 x1125) x3920) (= (x1573 64 x2268 x1125) x2861) (= (x1637 255 x3916) x2702) (= x1465 (x1637 x1046 x151)) (= x541 (= x1465 0)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3641 1 x2702)) x151) (= x2268 (x3797 x3916 8)))) x501) x3444))))) (=> x1567 x39)))))
(assert (x561 x2273))
(assert (= (and x307 x143) x408))
(assert (= 0 (x73 (x1573 64 0 x614))))
(assert (x1782 x3124 4294967296))
(assert (= x702 (x3318 (x1573 64 x1478 x702))))
(assert (x561 x3578))
(assert (x1996 16))
(assert (x7 65536 x216))
(assert (= x3086 (and x1104 x1357)))
(assert (x561 x872))
(assert (x1996 x1045))
(assert (not (x775 (x1573 64 0 x2434))))
(assert (=> (<= x904 10000) (= (x1077 x904) 0)))
(assert (= x1245 (and x210 x2614)))
(assert (< (x1573 64 x2099 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x746 (and x3655 x2516)))
(assert (x561 x278))
(assert (= x1905 (or x3265 x1246)))
(assert (x561 x3573))
(assert (x7 1000000 x3898))
(assert (= (x73 (x1573 64 x904 x2652)) x904))
(assert (= (x34 x2204 4294967296) (x3797 x2204 32)))
(assert (x1721 x2070))
(assert (= x3312 (or x1881 x2554)))
(assert (x1721 (- x1020 x3518)))
(assert (= (x1573 64 x2325 9) (x1077 (x1573 64 x2325 9))))
(assert (x775 1000000))
(assert (x561 x3532))
(assert (x561 x367))
(assert (x561 x176))
(assert (= x890 (and x2424 (not x1445))))
(assert (x561 x3925))
(assert (x1914 x2929))
(assert (x1721 (x2706 2 x3484)))
(assert (= (x1077 (x1573 64 x903 14)) (x1573 64 x903 14)))
(assert (= 64 (x1883 (x1573 64 x2268 x1125))))
(assert (x561 x517))
(assert (= 0 (x1077 1099511627775)))
(assert (= x667 (and x2244 x2823)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1765 x536)))
(assert (x3099 x486))
(assert (= x1827 (or x1307 x3984)))
(assert (= (x2283 (* x2811 256)) (x3641 x2811 8)))
(assert (x1996 x202))
(assert (= (x3797 x2247 32) (x34 x2247 4294967296)))
(assert (x561 x328))
(assert (x561 x663))
(assert (= (or x1138 x2355) x1624))
(assert (x79 x930 16777216))
(assert (x1996 x2390))
(assert (= (and (not x2795) x3364) x1194))
(assert (= 0 (x73 (x1573 64 0 x3322))))
(assert (x79 (* x3549 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x1434))
(assert (x2855 x869 (- x1864 x732)))
(assert (> (x1573 64 0 x1647) 10000))
(assert (x2855 x1864 (- x869 x1835)))
(assert (x561 x2373))
(assert (x561 x1184))
(assert (x1996 x1431))
(assert (= x3271 (and x2398 x817)))
(assert (x1782 x3701 65536))
(assert (= (x1077 x1540) (x1077 (+ 1 x1540))))
(assert (x561 x3333))
(assert (< (x1573 64 x2837 x614) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3099 x1532))
(assert (not (x775 (x1573 64 x1143 5))))
(assert (= (and x1837 x3324) x2845))
(assert (x1782 x1458 4))
(assert (= (x1077 (x1573 64 0 14)) (x1573 64 0 14)))
(assert (x561 x266))
(assert (= x2577 (and x1116 (not x302))))
(assert (= (and (not x1340) x577) x378))
(assert (x561 x169))
(assert (= x2599 (or x2245 x2280)))
(assert (= (=> (and (= x1068 x3853) (= x1068 (ite (= x3400 16777215) 0 x2701)) (= x3400 (x1637 16777215 x2701))) x3674) x3240))
(assert (x561 x3827))
(assert (= x2697 (or x840 x3230)))
(assert (= (and x3483 x1567) x645))
(assert (x79 (* 16 x16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3099 (* 256 x3746)))
(assert (< (x1573 64 0 x2145) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x34 x1093 4294967296) (x3797 x1093 32)))
(assert (= (x1573 64 x2624 5) (x1077 (x1573 64 x2624 5))))
(assert (= x3009 (=> (and (= x639 x2155) (= x163 x1340) (= x2765 x642) (= x3880 x3745) (= x3386 x658)) x1832)))
(assert (= (x1883 (x1573 64 x1682 14)) 64))
(assert (=> (>= 10000 x422) (= (x1077 x422) 0)))
(assert (< 10000 (x1573 64 x370 x112)))
(assert (= (or x3472 x2198) x3330))
(assert (= (and x3114 (not x1605)) x1973))
(assert (= (x3641 1 x2702) (x2283 (ite (> 256 x2702) (x2706 2 x2702) 0))))
(assert (= x1744 (x3318 (x1573 64 x3746 x1744))))
(assert (x561 x547))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x370 x1165)))
(assert (x1721 x1936))
(assert (= (and (not x1315) x1326) x3651))
(assert (x3204 x2466 1000000000000000000000000))
(assert (x561 x297))
(assert (= (and (not x3940) x3443) x2544))
(assert (x2855 x1835 x528))
(assert (x561 x1969))
(assert (x561 x1575))
(assert (< 10000 (x1573 64 x3242 9)))
(assert (x1996 x3192))
(assert (> (x1573 64 x903 14) 10000))
(assert (= x3 (and x1740 x1370)))
(assert (x561 x3160))
(assert (= (x1077 (x1573 64 x1922 x646)) (x1573 64 x1922 x646)))
(assert (x3590 x1438))
(assert (= (x1573 64 x176 x705) (x1077 (x1573 64 x176 x705))))
(assert (= (x2283 (* x3859 65536)) (x3641 x3859 16)))
(assert (= x3828 (and x1665 (not x51))))
(assert (x561 x930))
(assert (x775 34028236692093846346337460743176821))
(assert (= (x1077 x1614) (x1077 (+ x1614 1))))
(assert (= (and x3509 x3724) x1296))
(assert (x561 x867))
(assert (not (x775 (x1573 64 x1108 14))))
(assert (= x3403 (=> (and (= (> x2646 255) x2705) (or (and (and (= (+ x589 8) x153) (= x1325 (x3797 x2646 8))) x2705) (and (not x2705) (and (= x153 x589) (= x2646 x1325))))) x272)))
(assert (x3099 (* x25 2)))
(assert (= (x2283 (* 16 x167)) (x3641 x167 4)))
(assert (x1782 x2650 4))
(assert (= (x73 (x1573 64 x2200 x2434)) x2200))
(assert (= (x3318 (x1573 64 x2417 x126)) x126))
(assert (> (x1573 64 x1080 5) 10000))
(assert (x7 1 (x2706 2 x721)))
(assert (= x2571 (and x3952 (not x2904))))
(assert (x3863 x1835 x528 x1864 x869))
(assert (x1979 x2922))
(assert (= (x1573 64 x1419 9) (x1077 (x1573 64 x1419 9))))
(assert (x561 x1516))
(assert (= (x3797 x3916 8) (x34 x3916 256)))
(assert (= (=> (and (= x1444 (< 65535 x2777)) (or (and (and (= x2840 (x3797 x2777 16)) (= (+ 16 x3219) x3159)) x1444) (and (and (= x3219 x3159) (= x2840 x2777)) (not x1444)))) x1652) x3543))
(assert (= (x1077 (x1573 64 x636 x2735)) (x1573 64 x636 x2735)))
(assert (=> (<= x676 10000) (= 0 (x1077 x676))))
(assert (x7 65536 x2676))
(assert (x561 x3188))
(assert (= (x1077 (x1573 64 x1539 x269)) (x1573 64 x1539 x269)))
(assert (=> (>= 10000 x3342) (= 0 (x1077 x3342))))
(assert (x3863 x1020 x732 x2764 x2955))
(assert (= 0 (x1077 184467440737095516)))
(assert (x1721 x902))
(assert (= x2888 (and x3428 (not x1107))))
(assert (x561 x3357))
(assert (x775 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x561 x630))
(assert (not (x775 (x1573 64 x1922 x3494))))
(assert (= x2455 (and x2328 x3771)))
(assert (= (=> (= 1 x1912) x2870) x749))
(assert (= (x1077 (+ 1 x2172)) (x1077 x2172)))
(assert (x561 x2493))
(assert (= x2505 (and (not x3446) x1932)))
(assert (x1721 (- x869 x1886)))
(assert (x3099 (* 2 x3549)))
(assert (x1782 x2390 256))
(assert (= x97 (x3318 (x1573 64 x2666 x97))))
(assert (= x43 (and (not x2772) x3111)))
(assert (=> (<= x278 10000) (= (x1077 x278) 0)))
(assert (x79 (ite (< x2532 256) (x2706 2 x2532) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x775 (x1573 64 0 x2984))))
(assert (x3099 x2493))
(assert (= (x73 (x1573 64 x1180 14)) x1180))
(assert (< (x1573 64 x3342 x1613) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3099 x1814))
(assert (x561 x2565))
(assert (= (=> (and (= x362 (ite (> x434 1) (+ 1 x185) x185)) (= (+ x362 (x3641 x904 8)) x930)) x155) x1467))
(assert (x3099 x2865))
(assert (x79 (* 256 x3432) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x153))
(assert (= (x3641 x1327 8) (x2283 (* 256 x1327))))
(assert (= (x3318 (x1573 64 x1102 14)) 14))
(assert (x1996 1000000))
(assert (=> (>= 10000 x3335) (= (x1077 x3335) 0)))
(assert (x1721 x1945))
(assert (= x3777 (=> (and (and (= (x3641 x1408 64) x3788) (= (= x3788 0) x3014)) (or (and x3014 (and (= x1408 x67) (= x3618 x3053))) (and (and (= x3788 x67) (= x3053 (+ 64 x3618))) (not x3014)))) x2974)))
(assert (x561 x3409))
(assert (x561 x1816))
(assert (= (x34 x335 4) (x3797 x335 2)))
(assert (x79 (* x3790 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1573 64 255 x544) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3064 5)))
(assert (x3099 (* 256 x1478)))
(assert (x2855 x1864 (- x869 x1020)))
(assert (x775 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (> (x1573 64 x1539 x269) 10000))
(assert (= x2550 (or x1395 x2845)))
(assert (= (and x3830 (not x284)) x1278))
(assert (x561 x1847))
(assert (x561 x1200))
(assert (x561 x493))
(assert (= (x3797 x2760 32) (x34 x2760 4294967296)))
(assert (x79 (ite (< x1392 256) (x2706 2 x1392) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2345 (=> (and (or (and (and (= x3408 x782) (= x1789 x3316)) (not x1659)) (and x1659 (and (= x3408 (+ x782 8)) (= x3316 (x3797 x1789 8))))) (= x1659 (> x1789 255))) x1204)))
(assert (= (or x3086 x3246) x3819))
(assert (x561 x1188))
(assert (= x3114 (or x299 x1738)))
(assert (x561 x2144))
(assert (= x1574 (and (not x947) x1178)))
(assert (x561 x1150))
(assert (x1721 x1551))
(assert (= (x3318 (x1573 64 65535 x3758)) x3758))
(assert (= x60 (and x1161 (not x2252))))
(assert (x1996 x3947))
(assert (x561 x3645))
(assert (x3863 x3518 x3320 x1207 x1886))
(assert (= x299 (and x2061 x2883)))
(assert (x1979 x3779))
(assert (x3863 x528 x1835 x2764 x2955))
(assert (x2855 x3320 (- x3518 x1864)))
(assert (x124 x2451))
(assert (x7 256 x1304))
(assert (x561 x2122))
(assert (= x2628 (x73 (x1573 64 x2628 x1850))))
(assert (= (x2283 (ite (> 256 x2268) (x2706 2 x2268) 0)) (x3641 1 x2268)))
(assert (= (x34 x202 340282366920938463463374607431768211456) (x3797 x202 128)))
(assert (x561 x1978))
(assert (x561 x3408))
(assert (> (x1573 64 x3407 14) 10000))
(assert (x1721 (- x3518 x1020)))
(assert (x561 x527))
(assert (= (x34 x2513 4294967296) (x3797 x2513 32)))
(assert (= (=> (and (= x2483 (x2842 (- x797 1))) (= x2087 x2483) (= (ite (> x2114 1) (+ x3714 1) x3714) x797)) x2977) x71))
(assert (x1782 x2491 4))
(assert (= (x1077 x3913) (x1077 (+ 1 x3913))))
(assert (= (and (not x538) x1956) x323))
(assert (= 64 (x1883 (x1573 64 0 x2410))))
(assert (= (x1077 6277101735386680763835789423207666416102355444464034512895) 0))
(assert (= (x1077 (x1573 64 x2471 x1712)) (x1573 64 x2471 x1712)))
(assert (x561 x1606))
(assert (= x3662 (=> (and (= x3698 (> x2373 65535)) (or (and (not x3698) (and (= x2373 x1519) (= x2669 x1869))) (and x3698 (and (= x1519 (x3797 x2373 16)) (= (+ x2669 16) x1869))))) x3183)))
(assert (x7 2 x3825))
(assert (x1996 100000000000000))
(assert (x561 x203))
(assert (= (or x345 x1603) x2730))
(assert (= x268 (and x218 x2848)))
(assert (x2855 x1864 (- x869 x528)))
(assert (x3099 (* 18446744073709551616 x448)))
(assert (x1721 x1304))
(assert (= x3081 (and x3027 x3269)))
(assert (= x3734 (and x2827 x3456)))
(assert (= (and (not x2758) x2158) x1407))
(assert (x497 x3127))
(assert (= (x34 x1236 18446744073709551616) (x3797 x1236 64)))
(assert (x561 x2070))
(assert (x1996 x1008))
(assert (x561 x3396))
(assert (= (and (not x348) x810) x1957))
(assert (x561 x2775))
(assert (x1996 x3153))
(assert (= (x3641 x422 8) (x2283 (* x422 256))))
(assert (x561 x2344))
(assert (= (and (not x2012) x2607) x3209))
(assert (x561 x3916))
(assert (not (x775 (x1573 64 0 x293))))
(assert (=> (<= x312 10000) (= (x1077 x312) 0)))
(assert (< (x1573 64 x3391 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1077 (x1573 64 x2604 x2389)) (x1573 64 x2604 x2389)))
(assert (x561 x2624))
(assert (x561 x470))
(assert (x511 x3518 x3320 x1886 x1207))
(assert (x561 x2765))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1353 x3950)))
(assert (x561 x421))
(assert (= (x3797 x1126 64) (x34 x1126 18446744073709551616)))
(assert (x1996 x714))
(assert (x511 x3320 x3518 x1835 x528))
(assert (= (x34 x2106 65536) (x3797 x2106 16)))
(assert (x3863 x1864 x869 x2764 x2955))
(assert (= x427 (=> (and (or (and x1340 (and (= (+ x2718 x3670) x416) (= (x1573 64 x2624 5) x3763) (= x1262 (x1573 64 x3813 9)) (= (+ x2810 x379) x1173) (= x3493 (x1573 64 x3813 9)) (= x3287 x814) (= x3411 (x1720 x3493)) (= (x34 x3613 1000000000000000000) x1374) (>= 340282366920938463463374607431768211455 x1684) (= (- x416 x1684) x738) (= x2066 (x1375 x3763)) (= x2313 x969) (= x3939 0) (= x328 x1308) (= (x2908 x1543) x2810) (= x379 x1833) (not (> x325 x368)) (= x2736 (x1573 64 x2066 9)) (>= 340282366920938463463374607431768211455 x852) (not (< x3630 x1833)) (= x1173 x2339) (= x3268 x3522) (<= x2366 340282366920938463463374607431768211455) (>= 340282366920938463463374607431768211455 x3411) (= x1835 x2584) (= x2313 (x1637 18446744073709551615 x3779)) (= (x1573 64 x3242 9) x1543) (= x696 (+ x328 x1018)) (= (x1637 340282366920938463463374607431768211455 x530) x2718) (= x3961 x1828) (= (x2901 x1262) x3630) (= x3961 (+ x1942 x1835)) (>= 340282366920938463463374607431768211455 x3961) (= (x2908 x1543) x2366) (= x3779 (x2842 (- x368 x325))) (= (+ x2339 x738) x943) (= x1942 (x1720 x3493)) (= 0 x300) (= x3842 (+ x62 x1828)) (<= 0 x1173) (<= 0 x3961) (= x814 (- x696 x852)) (<= x1308 340282366920938463463374607431768211455) (= (x2901 x1262) x1684) (<= x1942 340282366920938463463374607431768211455) (>= 281474976710655 x2066) (= (x2842 (- x3630 x1833)) x530) (= (- x943 x2366) x1018) (= x3613 (* x1835 1000000)) (>= 340282366920938463463374607431768211455 x1173) (>= 340282366920938463463374607431768211455 x2810) (= x1308 (x3501 x2736)) (= x852 (x3501 x2736)) (= (- x3842 x3411) x3522) (<= x3630 340282366920938463463374607431768211455) (= x325 (x1637 18446744073709551615 x1374)))) (and (not x1340) (and (= x203 (x2901 x2759)) (>= 340282366920938463463374607431768211455 x2340) (>= 340282366920938463463374607431768211455 x2007) (= x2338 x2007) (<= x2982 340282366920938463463374607431768211455) (= x2340 (x914 x1859)) (= x2769 x3185) (= x3560 (x1573 64 x2624 5)) (= (+ x379 x203) x2769) (= (+ x1835 x1305) x3768) (= x3268 x1052) (= x2404 (* x379 1000000)) (>= 340282366920938463463374607431768211455 x1217) (= (- x3321 x2340) x698) (= x698 x3287) (= x3520 (x1637 18446744073709551615 x2439)) (= x2982 (x1720 x2670)) (>= 340282366920938463463374607431768211455 x1305) (= x3047 0) (<= 0 x3768) (<= x3247 340282366920938463463374607431768211455) (= (x914 x1859) x2007) (= x3520 x969) (= x3247 (x2629 x3297)) (= 0 x78) (= (- x3162 x3247) x1052) (= x1109 (- x234 x2982)) (= (x1720 x2670) x1217) (= x3042 (+ x3670 x3185)) (= x1836 (x1375 x3560)) (= x2586 x3768) (= (x2901 x2759) x552) (= x1859 (x1573 64 x1836 9)) (<= x2769 340282366920938463463374607431768211455) (= (x1637 18446744073709551615 x2047) x3245) (= (+ x1162 x2338) x3321) (not (< x368 x3245)) (= x703 (x2842 (- x1217 x1835))) (= x2047 (x34 x2404 1000000)) (= x1305 (x2629 x3297)) (<= 0 x2769) (= x1835 x2584) (= (x1573 64 x3813 9) x2670) (= x2759 (x1573 64 x3813 9)) (>= 340282366920938463463374607431768211455 x3768) (>= 281474976710655 x1836) (= (x2842 (- x368 x3245)) x2439) (not (< x1217 x1835)) (= (+ x237 x62) x234) (= x237 (x1637 340282366920938463463374607431768211455 x703)) (= x1162 (- x3042 x552)) (<= x203 340282366920938463463374607431768211455) (>= 340282366920938463463374607431768211455 x552) (= (x1573 64 x3242 9) x3297) (= (+ x2586 x1109) x3162)))) (and (= (x1637 16777215 x2865) x763) (= x379 (+ (ite (> (x2608 x221 1000000000000000000000000) 0) 1 0) x517)) (not (< x3191 x1835)) (= (x34 x221 1000000000000000000000000) x517) (= x1537 x221) (= (x3534 x1835 x528) x613) (= x1526 1) (= (* 1000000 x613) x1537) (= (* 100000 x763) x2403) (= x528 (+ x2403 100000000)) (>= 9999999 x3380) (= x3380 (x1637 16777215 x2865)) (= x2649 (x2842 (- x3191 x1835))) (= 1000000000000000000000000 x1812))) x3353)))
(assert (x561 x2916))
(assert (= (x73 (x1573 64 x1142 14)) x1142))
(assert (= (=> (and (= x251 (> x2106 65535)) (or (and (and (= x533 (+ 16 x3911)) (= x2390 (x3797 x2106 16))) x251) (and (and (= x3911 x533) (= x2390 x2106)) (not x251)))) x2897) x2548))
(assert (= (x1077 (x1573 64 65535 x3758)) (x1573 64 65535 x3758)))
(assert (= (or x3625 x1755) x2484))
(assert (= (x2283 (* x2494 2)) (x3641 x2494 1)))
(assert (x1996 x3613))
(assert (= x3217 (or x729 x1703)))
(assert (x1839 x1027 x3951))
(assert (= (and (not x1137) x3460) x3761))
(assert (x775 1000000000000000000000000))
(assert (x3863 x869 x1864 x1207 x1886))
(assert (x3863 x1886 x1207 x528 x1835))
(assert (x1979 x1046))
(assert (= (x3641 x1785 1) (x2283 (* 2 x1785))))
(assert (x3099 x3600))
(assert (x1979 x1922))
(assert (x561 x3743))
(assert (=> (>= 10000 x1555) (= (x1077 x1555) 0)))
(assert (= (or x2156 x2995) x1837))
(assert (x1721 65536))
(assert (not (x775 (x1573 64 x1113 x2434))))
(assert (= x1446 (and (not x928) x2402)))
(assert (= (=> (and (= x2569 (> x1325 15)) (or (and x2569 (and (= x33 (x3797 x1325 4)) (= x258 (+ 4 x153)))) (and (and (= x153 x258) (= x33 x1325)) (not x2569)))) x1865) x272))
(assert (= (and (not x2973) x1321) x2745))
(assert (x2855 x1020 (- x732 x2764)))
(assert (= (=> (and (or (and (and (= x3034 x88) (= x1954 x860)) x950) (and (and (= x3034 (+ x88 8)) (= x2074 x1954)) (not x950))) (and (= x2074 (x3641 x860 8)) (= x950 (= 0 x2074)))) x2053) x3229))
(assert (x79 x771 2))
(assert (x1996 x48))
(assert (not (x775 (x1573 64 x1404 x2479))))
(assert (= x239 (or x1182 x1364)))
(assert (x511 x869 x1864 x3320 x3518))
(assert (=> (<= x2450 10000) (= 0 (x1077 x2450))))
(assert (x561 x2574))
(assert (x2855 x3518 (- x3320 x1207)))
(assert (x2855 x3320 (- x3518 x1835)))
(assert (x561 x1796))
(assert (= (and x3579 x3365) x1993))
(assert (x561 x2400))
(assert (x561 x3790))
(assert (not (x775 (x1573 64 x2451 x1588))))
(assert (x79 x3916 256))
(assert (x3863 x1020 x732 x528 x1835))
(assert (= x1100 (or x3299 x3958)))
(assert (= (and x89 (not x2913)) x483))
(assert (=> (>= 10000 x1353) (= 0 (x1077 x1353))))
(assert (= (and x2402 x928) x1607))
(assert (= x2063 (=> (= x1136 x1349) x2201)))
(assert (= (and x1947 x1004) x2564))
(assert (= x3829 (or x3557 x2104)))
(assert (= (x3641 x1766 128) (x2283 (* x1766 340282366920938463463374607431768211456))))
(assert (x561 x2458))
(assert (x561 x807))
(assert (x1489 x3401))
(assert (= (x73 (x1573 64 x2043 x2879)) x2043))
(assert (x561 x1645))
(assert (= (x34 x1151 4) (x3797 x1151 2)))
(assert (= x2402 (or x3431 x3540)))
(assert (= x1159 (and (not x1440) x2282)))
(assert (x1782 x2863 65536))
(assert (not (x775 (x1573 64 0 x2145))))
(assert (not (x775 (x1573 64 x1788 14))))
(assert (= x1868 (and x2795 x3364)))
(assert (x561 x2133))
(assert (x3099 (* 340282366920938463463374607431768211456 x2052)))
(assert (= (and (not x1221) x3660) x1813))
(assert (x511 x1595 x1924 x732 x1020))
(assert (x561 x3064))
(assert (x561 x425))
(assert (x3099 x2010))
(assert (< 10000 (x1573 64 x224 x2189)))
(assert (= x2243 (and (not x191) x933)))
(assert (= (or x1278 x3938) x3279))
(assert (x79 x3127 65536))
(assert (= (=> (and (or (and (and (= (x3797 x1314 4) x3463) (= (+ x1243 4) x3827)) x2748) (and (and (= x1314 x3463) (= x3827 x1243)) (not x2748))) (= x2748 (> x1314 15))) x2496) x3001))
(assert (x79 (* x2753 16) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1721 x3313))
(assert (x3863 x869 x1864 x528 x1835))
(assert (x1996 x214))
(assert (x561 x3094))
(assert (x3863 x869 x1864 x2764 x2955))
(assert (= (=> (and (or (and x3332 (and (= (x3797 x3289 4) x2401) (= (+ 4 x1961) x3427))) (and (not x3332) (and (= x1961 x3427) (= x2401 x3289)))) (= (< 15 x3289) x3332)) x2690) x2566))
(assert (= (x1077 (x1573 64 x3459 14)) (x1573 64 x3459 14)))
(assert (x561 x3689))
(assert (x1782 x2839 256))
(assert (x561 x2366))
(assert (x2855 x528 (- x1835 x1886)))
(assert (< (x1573 64 0 x293) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3602 x3059) x3527))
(assert (x561 x3929))
(assert (x3863 x1924 x1595 x1864 x869))
(assert (x3099 x3779))
(assert (x1721 (- x528 x1864)))
(assert (x3099 (* x2746 2)))
(assert (x79 x2232 18446744073709551616))
(assert (x561 x2532))
(assert (x561 x2477))
(assert (x79 x2439 18446744073709551616))
(assert (x561 x2804))
(assert (not (x775 (x1573 64 x1982 14))))
(assert (x3863 x2764 x2955 x1595 x1924))
(assert (x561 x2210))
(assert (x1782 x3463 4))
(assert (x1979 x3401))
(assert (x79 (* x989 4294967296) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x1573 64 x278 14) 10000))
(assert (x561 x685))
(assert (= x2611 (or x2874 x207)))
(assert (= (and x1909 x3166) x3431))
(assert (= (and x1321 x2973) x603))
(assert (> (x1573 64 x2604 x2389) 10000))
(assert (x561 x70))
(assert (= x2972 (and x915 x3097)))
(assert (x1996 x1686))
(assert (= x282 (=> (and (or (and (and (= x2811 x3333) (= (+ 16 x3160) x2246)) (not x1137)) (and (and (= x3160 x2246) (= x2811 x3228)) x1137)) (and (= x3333 (x3641 x3228 16)) (= x1137 (= x3333 0)))) x140)))
(assert (x3099 (* x2989 2)))
(assert (x561 x2702))
(assert (x1721 (- x1595 x528)))
(assert (x3099 (* x2804 65536)))
(assert (= x566 (and (not x2051) x3829)))
(assert (x2855 x528 (- x1835 x3320)))
(assert (= (and (not x3014) x3642) x2631))
(assert (x1996 x451))
(assert (x1721 (- x3320 x1864)))
(assert (x561 x2294))
(assert (x2855 x2955 (- x2764 x869)))
(assert (= (=> (and (or (and (and (= x1462 x2375) (= x2204 x3276)) (not x2292)) (and (and (= (+ 32 x1462) x2375) (= (x3797 x2204 32) x3276)) x2292)) (= (> x2204 4294967295) x2292)) x2205) x2253))
(assert (x561 x3339))
(assert (= (x3318 (x1573 64 0 x1432)) x1432))
(assert (x2855 x1595 (- x1924 x2764)))
(assert (x1721 x3335))
(assert (= (=> (= x478 (= x2979 0)) (and (=> (and x478 (and (or (and (not x2061) (and (= (ite (< 0 x2563) 1 0) x463) (= (x64 x1899) x2563) (<= x2563 1099511627775) (= (x1573 64 x2837 x614) x1899))) (and x2061 (= x463 (ite x2061 1 0)))) (and (= x1651 (x2900 x1279)) (= x2061 (> x1651 0)) (= x1279 (x1573 64 x2837 x614)) (>= 1099511627775 x1651)))) x2931) (=> (and (not x478) (= (ite x478 1 0) x1136)) x2201))) x1992))
(assert (= (=> (and (or (and (and (= x750 x533) (= x832 x2390)) (not x538)) (and (and (= x750 (+ x533 8)) (= (x3797 x2390 8) x832)) x538)) (= x538 (< 255 x2390))) x3062) x2897))
(assert (x7 100000 x818))
(assert (x561 x1402))
(assert (x561 x3587))
(assert (= (or x1611 x952) x63))
(assert (= (x2283 (* x3622 340282366920938463463374607431768211456)) (x3641 x3622 128)))
(assert (= x5 (=> (and (or (and x1040 (and (= (+ x3612 16) x1705) (= (x3797 x964 16) x2572))) (and (and (= x964 x2572) (= x3612 x1705)) (not x1040))) (= x1040 (< 65535 x964))) x2092)))
(assert (= x390 (or x768 x3005 x1034)))
(assert (x1839 x1164 x2843))
(assert (x1721 x789))
(assert (x3863 x1835 x528 x1924 x1595))
(assert (= (x3318 (x1573 64 x176 x705)) x705))
(assert (= (x73 (x1573 64 0 x2984)) 0))
(assert (= 64 (x1883 (x1573 64 x1539 x269))))
(assert (= (or x1808 x276) x3642))
(assert (x3204 x241 1000000000000000000))
(assert (< (x1573 64 x1682 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1077 100000000000000) 0))
(assert (x561 x953))
(assert (x561 x2284))
(assert (> (x1573 64 x1108 14) 10000))
(assert (x561 x3125))
(assert (x1782 x1151 4))
(assert (x1721 (- x1886 x3518)))
(assert (= (=> (and (= x2701 (+ x1847 (x3641 x676 8))) (= x1847 (ite (< 1 x2142) (+ x3355 1) x3355))) x3240) x713))
(assert (x1721 x448))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x3991 x1762)))
(assert (= (x1883 (x1573 64 x278 14)) 64))
(assert (= x1011 (and x3150 (not x2396))))
(assert (x1721 (- x1595 x1886)))
(assert (x1782 x169 18446744073709551616))
(assert (x7 18446744073709551616 x1146))
(assert (= 14 (x3318 (x1573 64 x2000 14))))
(assert (= x400 (=> (= x693 x21) x508)))
(assert (x1721 x3345))
(assert (x561 x2322))
(assert (= x2102 (and x1794 (not x2824))))
(assert (x561 x1068))
(assert (x2855 x3320 (- x3518 x2764)))
(assert (= (x1573 64 255 x3760) (x1077 (x1573 64 255 x3760))))
(assert (= (or x3486 x1518) x831))
(assert (= x1449 (or x3546 x590)))
(assert (x1721 x575))
(assert (x497 x2922))
(assert (x79 (* 18446744073709551616 x652) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x79 (* x1936 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1782 x1691 2))
(assert (x2855 x869 (- x1864 x1886)))
(assert (= x1841 (or x3303 x2849)))
(assert (x561 x3487))
(assert (x561 x3416))
(assert (x775 1980319261))
(assert (x511 x3518 x3320 x1595 x1924))
(assert (= 0 (x1077 1461501637330902918203684832716283019655932542975)))
(assert (< (x1573 64 x637 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1297) (= (x1077 x1297) 0)))
(assert (= x2410 (x3318 (x1573 64 0 x2410))))
(assert (= x2643 (and x2438 (not x2844))))
(assert (x79 (* x575 65536) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2485 (=> (and (or (and (not x2970) (and (= x3485 x1911) (= x1569 x1362))) (and (and (= (x3797 x1362 16) x1569) (= (+ x3485 16) x1911)) x2970)) (= (< 65535 x1362) x2970)) x3934)))
(assert (x561 x3056))
(assert (> (x1573 64 0 x2434) 10000))
(assert (= x2236 (and x1056 x907)))
(assert (x3863 x2764 x2955 x1864 x869))
(assert (= (x3797 x1691 1) (x34 x1691 2)))
(assert (x561 x1239))
(assert (= (x3641 x1748 1) (x2283 (* 2 x1748))))
(assert (x1782 x3056 65536))
(assert (x1979 x3013))
(assert (x561 x3235))
(assert (= x3509 (and (not x809) x923)))
(assert (x3590 x3462))
(assert (< (x1573 64 x1037 14) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x805 x3315) x1717))
(assert (x3863 x732 x1020 x3518 x3320))
(assert (= (and x1221 x3660) x960))
(assert (x3099 340282366920938463463374607431768211456))
(assert (= x2198 (and x1586 x1029)))
(assert (x79 (* x3313 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x2164) x1999) x2511))
(assert (x1979 x1800))
(assert (= (x2283 (* x3746 256)) (x3641 x3746 8)))
(assert (x2855 x1864 (- x869 x2955)))
(assert (x561 x1925))
(assert (x3863 x1886 x1207 x1924 x1595))
(assert (= (or x2089 x1714) x2960))
(assert (x1782 x957 256))
(assert (x561 x552))
(assert (= x3661 (or x261 x2097)))
(assert (x561 x2077))
(assert (x561 x2457))
(assert (x1721 x860))
(assert (x79 (* x2494 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2875))
(assert (x561 x2979))
(assert (= (x73 (x1573 64 x367 x1616)) x367))
(assert (=> (<= x1143 10000) (= 0 (x1077 x1143))))
(assert (x3863 x1864 x869 x1207 x1886))
(assert (x2855 x528 (- x1835 x1020)))
(assert (x1721 x904))
(assert (= 64 (x1883 (x1573 64 x584 14))))
(assert (x1721 (- x1207 x2764)))
(assert (x1996 x3573))
(assert (= (and x1484 x831) x1216))
(assert (x3099 (ite (< x1858 256) (x2706 2 x1858) 0)))
(assert (x2855 x1924 (- x1595 x2955)))
(assert (x7 100000000000000 x188))
(assert (= (and (not x974) x332) x3960))
(assert (x1996 x2190))
(assert (= x76 (and x322 (not x1619))))
(assert (x561 x2375))
(assert (= (x1883 (x1573 64 0 x3322)) 64))
(assert (= (x3797 x2222 8) (x34 x2222 256)))
(assert (x2855 x1924 (- x1595 x3320)))
(assert (= (x2283 (* x789 16)) (x3641 x789 4)))
(assert (x79 x3600 18446744073709551616))
(assert (= x3704 (or x2924 (and x74 x1063))))
(assert (x561 x2996))
(assert (= x2324 (and x443 x3217)))
(assert (= (and x858 x594) x2849))
(assert (x1721 (- x1020 x1595)))
(assert (x1721 (- x1864 x1207)))
(assert (x561 x364))
(assert (x1721 x2817))
(assert (not x3626))
(assert (x7 340282366920938463463374607431768211456 x629))
(assert (x561 x188))
(assert (> (x1573 64 x312 9) 10000))
(assert (= (or (and x2021 (not x1411)) x595) x3202))
(assert (x7 1000000 x3369))
(assert (x79 (* x25 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1679 (or x2991 x1957)))
(assert (= x1358 (and x3017 (not x3881))))
(assert (x561 x3467))
(assert (x1782 x3011 4))
(assert (x1996 x3701))
(assert (x1782 x435 340282366920938463463374607431768211456))
(assert (x1782 x3156 18446744073709551616))
(assert (= (=> (and (= x639 x2525) (= x163 x1340) (= x2765 x2854) (= x2020 x3386) (= x3880 x3215)) x1832) x3568))
(assert (= (x1077 (+ 1 x3636)) (x1077 x3636)))
(assert (x1721 (- x1020 x869)))
(assert (< (x1573 64 x2450 x1086) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3797 x1840 16) (x34 x1840 65536)))
(assert (= (x1883 (x1573 64 x3551 14)) 64))
(assert (x3863 x1020 x732 x869 x1864))
(assert (= (x3797 x736 1) (x34 x736 2)))
(assert (= (x1573 64 0 x293) (x1077 (x1573 64 0 x293))))
(assert (= (and (not x164) x2853) x729))
(assert (x3863 x1207 x1886 x2955 x2764))
(assert (x1979 x3051))
(assert (= (=> (and (= x3324 (> x2840 255)) (or (and (and (= (x3797 x2840 8) x1372) (= x3800 (+ x3159 8))) x3324) (and (not x3324) (and (= x2840 x1372) (= x3159 x3800))))) x1366) x1652))
(assert (x561 x1814))
(assert (=> (<= x1478 10000) (= 0 (x1077 x1478))))
(assert (= (x1077 (+ x1752 2)) (x1077 x1752)))
(assert (= (or x246 x1501) x2729))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1573 64 x1477 x2421)))
(assert (x2855 x2955 (- x2764 x1835)))
(assert (x1996 x317))
(assert (= (=> (and (= (> x1552 4294967295) x1249) (or (and x1249 (and (= x2105 (+ 32 x1940)) (= x2054 (x3797 x1552 32)))) (and (not x1249) (and (= x2054 x1552) (= x2105 x1940))))) x1238) x559))
(assert (= (=> (= x650 (= x1478 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (and (and (= x907 (= 0 x1888)) (= x1761 1) (= x1888 (x3797 x1691 1)) (= x2851 0) (= x1691 (x1187 x824))) (or (and x907 (= x422 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (and (= x101 0) (= 1 x422)) (not x907)))) x650) x2391) (=> (and (not x650) (and (and (= (x3641 x3968 128) x377) (= (= 0 x377) x2396) (= x3968 (x3089 x802)) (= x702 (+ 1 x2984)) (= (x1573 64 x1478 x702) x802)) (or (and x2396 (and (= x2941 x3968) (= 0 x3178))) (and (not x2396) (and (= x377 x2941) (= 128 x3178)))))) x351))) x539))
(assert (x7 2 x1597))
(assert (=> (<= x2066 10000) (= (x1077 x2066) 0)))
(assert (x3863 x732 x1020 x869 x1864))
(assert (x1996 x1224))
(assert (x561 x463))
(assert (x561 x2586))
(assert (= (=> (and (= (ite (> x936 1) (+ 1 x633) x633) x766) (= (+ x766 (x3641 x612 8)) x2255)) x1773) x374))
(assert (x1996 x1569))
(assert (= x592 (x73 (x1573 64 x592 x2434))))
(assert (x561 x37))
(assert (x1721 (- x1924 x869)))
(assert (x561 x2128))
(assert (x561 x1122))
(assert (x1839 x940 x2371))
(assert (x561 x1777))
(assert (=> (>= 10000 x1836) (= 0 (x1077 x1836))))
(assert (=> (<= x3916 10000) (= 0 (x1077 x3916))))
(assert (= x2000 (x73 (x1573 64 x2000 14))))
(assert (x2855 x732 (- x1020 x1595)))
(assert (x1979 16776960))
(assert (x1721 x85))
(assert (> (x1573 64 x1037 14) 10000))
(assert (= 0 (x1077 4294967295)))
(assert (x561 x1524))
(assert (= (and x2490 (not x3979)) x1417))
(assert (x561 x1991))
(assert (< 10000 (x1573 64 x2992 9)))
(assert (= (x3797 x1816 2) (x34 x1816 4)))
(assert (x561 x1177))
(assert (x561 x3159))
(assert (x561 x2057))
(assert (= (x3797 x169 64) (x34 x169 18446744073709551616)))
(assert (x1996 x365))
(assert (< (x1573 64 x2463 x2954) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3863 x3518 x3320 x1864 x869))
(assert (x1721 x3010))
(assert (= (and x778 x3782) x380))
(assert (x79 x1800 256))
(assert (x561 x3385))
(assert (= (or x444 x3359) x2958))
(assert (= x1056 (and x650 x83)))
(assert (x561 x2504))
(assert (= (or x3559 x1589) x3017))
(assert (= (x73 (x1573 64 x2471 x1712)) x2471))
(assert (= (x1077 x2302) (x1077 (+ 2 x2302))))
(assert (=> (>= 10000 x910) (= (x1077 x910) 0)))
(assert (= 0 (x1077 340282366920938463463374607431768211456)))
(assert (= (x1077 65280) 0))
(assert (x1782 x3223 340282366920938463463374607431768211456))
(assert (x1721 x2743))
(assert (= (x3797 x1789 8) (x34 x1789 256)))
(assert (x561 x3647))
(assert (< 10000 (x1573 64 x3884 x614)))
(assert (= (x34 x3644 4294967296) (x3797 x3644 32)))
(assert (x1721 (- x1864 x1595)))
(assert (x7 256 x2087))
(assert (= x1148 (and x4 (not x1428))))
(assert (x1721 (- x2955 x1835)))
(assert (x561 x3594))
(assert (< 10000 (x1573 64 x1297 14)))
(assert (x3863 x2955 x2764 x732 x1020))
(assert (x2855 x2764 x2955))
(assert (= (x3797 x3011 2) (x34 x3011 4)))
(assert (= (or x433 x2940) x3075))
(assert (x561 x940))
(assert (x1782 x1516 340282366920938463463374607431768211456))
(assert (x1996 x3276))
(assert (not (x775 (x1573 64 x3550 x2961))))
(assert (x561 x3731))
(assert (x1721 6277101735386680763835789423207666416102355444464034512896))
(assert (= x1476 (and x105 x2213)))
(assert (< (x1573 64 x2325 9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x561 x2299))
(assert (x1996 x3221))
(assert (x511 x869 x1864 x2764 x2955))
(assert (x2855 x528 (- x1835 x2955)))
(assert (x1996 x75))
(assert (= x2683 (and x2531 x2098)))
(assert (x1782 x1045 340282366920938463463374607431768211456))
(assert (x3099 (* 340282366920938463463374607431768211456 x2625)))
(assert (> (x1573 64 x1404 x2479) 10000))
(assert (> (x1573 64 x584 14) 10000))
(assert (x2481 x2010))
(assert (x1782 x581 4294967296))
(assert (x561 x636))
(assert (x561 x1463))
(assert (x1782 x2790 340282366920938463463374607431768211456))
(assert (< 10000 (x1573 64 x2268 x1125)))
(assert (x561 x2867))
(assert (= x1765 (x73 (x1573 64 x1765 x536))))
(assert (x561 x292))
(assert (x1979 x2264))
(assert (= 64 (x1883 (x1573 64 x2417 x1851))))
(assert (x79 (* x1478 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2283 (* 256 x189)) (x3641 x189 8)))
(assert (x561 x1528))
(assert (x561 x1254))
(assert (x561 x902))
(assert (x561 x1599))
(assert (x1996 x3519))
(assert (= x2091 (=> (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2666) x3979) (and (=> (and x3979 (= 16777215 x2255)) x1773) (=> (and (and (and (= (x1573 64 x2666 x97) x966) (= (x462 x966) x3989) (= x97 (+ 1 x1614)) (= (< 340282366920938463463374607431768211455 x3989) x2290)) (or (and (and (= x3989 x2688) (= x183 0)) (not x2290)) (and (and (= x183 128) (= (x3797 x3989 128) x2688)) x2290))) (not x3979)) x780)))))
(assert (x3863 x3518 x3320 x1595 x1924))
(assert (= (x34 x547 18446744073709551616) (x3797 x547 64)))
(assert (x1782 x1106 4294967296))
(assert (= (and x516 x489) x611))
(assert (= 64 (x1883 (x1573 64 65535 x3758))))
(assert (= (x3797 x2323 4) (x34 x2323 16)))
(assert (x7 256 x1765))
(assert (=> (<= x3239 10000) (= (x1077 x3239) 0)))
(assert (x7 4294967296 x67))
(assert (= (x3641 x1482 4) (x2283 (* x1482 16))))
(assert (= x772 (and (not x1257) x514)))
(assert (x1721 x869))
(assert (x124 x3550))
(assert (x561 x1046))
(assert (x3099 (* x1937 4294967296)))
(assert (not (x775 (x1573 64 x1765 x536))))
(assert (= (=> (and (or (and (and (= x2491 x2323) (= x3374 x2990)) (not x3286)) (and x3286 (and (= x2990 (+ 4 x3374)) (= (x3797 x2323 4) x2491)))) (= x3286 (> x2323 15))) x1319) x819))
(assert (x3099 (* x3571 18446744073709551616)))
(assert (not (x775 (x1573 64 x1180 14))))
(assert (x561 x2646))
(assert (x561 x3011))
(assert (= (x3318 (x1573 64 x2417 x1851)) x1851))
(assert (x1782 x1558 256))
(assert (= (=> (and (or (and (and (= x3045 x860) (= x88 (+ x1316 16))) (not x1440)) (and x1440 (and (= x88 x1316) (= x2804 x860)))) (and (= (x3641 x2804 16) x3045) (= x1440 (= 0 x3045)))) x3229) x3413))
(assert (x3863 x1924 x1595 x2955 x2764))
(assert (x561 x2521))
(assert (x1782 x2840 256))
(assert (x561 x1042))
(assert (x561 x3261))
(assert (x561 x1922))
(assert (x561 x3622))
(assert (x561 x1844))
(assert (not (x775 (x1573 64 x1142 14))))
(assert (= x758 (=> (and (= x3529 (< 4294967295 x2247)) (or (and (not x3529) (and (= x3911 x863) (= x2106 x2247))) (and (and (= (+ 32 x863) x3911) (= (x3797 x2247 32) x2106)) x3529))) x2548)))
(assert (x561 x3092))
(assert (= (x34 x3890 18446744073709551616) (x3797 x3890 64)))
(assert (x79 x2922 16777216))
(assert (x79 x2010 256))
(assert (= (=> (and (= x2844 (= x615 0)) (or (and (= x2979 1) (not x2844)) (and x2844 (and (= x3122 (x2842 (- x1141 x1113))) (= x2979 (ite (> x3122 0) 0 1)) (= (x64 x1105) x1141) (<= x1141 1099511627775) (= (x1573 64 0 x614) x1105))))) x1992) x2696))
(assert (= (and x1085 (not x3823)) x2612))
(assert (= 64 (x1883 (x1573 64 0 x2606))))
(assert (x561 x980))
(assert (= (and x1088 x1340) x2424))
(assert (x561 x693))
(assert (x1721 x2133))
(assert (x3099 (* x2087 256)))
(assert (= (x1883 (x1573 64 x1064 x2735)) 64))
(assert (x561 x3411))
(check-sat)
(exit)
