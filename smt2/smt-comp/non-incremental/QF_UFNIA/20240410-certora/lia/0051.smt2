(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x566 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1728 () Bool)
(declare-fun x972 () Int)
(declare-fun x2282 () Int)
(declare-fun x2591 () Int)
(declare-fun x1990 () Bool)
(declare-fun x842 () Int)
(declare-fun x2137 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x586 () Int)
(declare-fun x526 () Int)
(declare-fun x2907 () Int)
(declare-fun x1880 () Bool)
(declare-fun x253 () Int)
(declare-fun x1585 () Bool)
(declare-fun x1205 () Int)
(declare-fun x1011 () Int)
(declare-fun x741 () Int)
(declare-fun x1333 () Bool)
(declare-fun x1652 () Int)
(declare-fun x1175 () Bool)
(declare-fun x762 () Int)
(declare-fun x2616 () Int)
(declare-fun x2947 () Int)
(declare-fun x690 () Bool)
(declare-fun x57 () Int)
(declare-fun x1411 () Int)
(declare-fun x2300 () Bool)
(declare-fun x1739 () Int)
(declare-fun x337 () Int)
(declare-fun x829 () Int)
(declare-fun x1793 () Bool)
(declare-fun x203 () Bool)
(declare-fun x272 () Bool)
(declare-fun x427 () Int)
(declare-fun x1427 () Int)
(declare-fun x2120 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x2514 () Int)
(declare-fun x2690 () Int)
(declare-fun x2264 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x2536 () Int)
(declare-fun x2983 () Int)
(declare-fun x2863 () Bool)
(declare-fun x1766 () Int)
(declare-fun x2479 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x486 () Bool)
(declare-fun x468 () Int)
(declare-fun x64 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x1882 () Int)
(declare-fun x1383 () Int)
(declare-fun x2478 () Int)
(declare-fun x2155 () Bool)
(declare-fun x1190 () Int)
(declare-fun x1440 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x2732 () Bool)
(declare-fun x1186 () Int)
(declare-fun x364 () Bool)
(declare-fun x257 () Bool)
(declare-fun x2481 () Int)
(declare-fun x3053 () Int)
(declare-fun x2781 () Bool)
(declare-fun x2202 () Int)
(declare-fun x900 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x1636 (Int) Int)
(declare-fun x230 () Bool)
(declare-fun x516 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x1679 () Int)
(declare-fun x2770 () Int)
(declare-fun x1764 () Int)
(declare-fun x1937 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1010 () Int)
(declare-fun x1859 () Int)
(declare-fun x2306 () Int)
(declare-fun x542 () Int)
(declare-fun x349 () Int)
(declare-fun x2045 () Bool)
(declare-fun x2321 () Int)
(declare-fun x3025 () Int)
(declare-fun x3042 () Int)
(declare-fun x262 () Int)
(declare-fun x2386 () Int)
(declare-fun x2367 (Int Int) Int)
(declare-fun x1423 () Int)
(declare-fun x1849 () Int)
(declare-fun x2761 () Bool)
(declare-fun x1662 () Int)
(declare-fun x1778 () Int)
(declare-fun x2232 () Int)
(declare-fun x1219 () Int)
(declare-fun x1476 () Int)
(declare-fun x2822 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x634 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x1513 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x137 () Int)
(declare-fun x1014 () Int)
(declare-fun x848 () Bool)
(declare-fun x1576 () Int)
(declare-fun x581 () Int)
(declare-fun x556 () Bool)
(declare-fun x2563 () Int)
(declare-fun x564 () Bool)
(declare-fun x125 () Int)
(declare-fun x1123 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x2875 () Int)
(declare-fun x2457 () Int)
(declare-fun x2385 () Int)
(declare-fun x1531 () Int)
(declare-fun x3066 () Bool)
(declare-fun x1161 () Int)
(declare-fun x2267 () Int)
(declare-fun x2841 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x1588 () Bool)
(declare-fun x870 () Bool)
(declare-fun x29 () Bool)
(declare-fun x1686 () Int)
(declare-fun x2643 () Int)
(declare-fun x59 () Bool)
(declare-fun x709 () Int)
(declare-fun x1964 () Bool)
(declare-fun x2714 () Int)
(declare-fun x1066 () Int)
(declare-fun x1994 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x2195 () Int)
(declare-fun x1725 () Bool)
(declare-fun x204 () Bool)
(declare-fun x17 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x34 () Bool)
(declare-fun x576 () Int)
(declare-fun x99 () Int)
(declare-fun x2878 () Int)
(declare-fun x2200 () Int)
(declare-fun x2183 () Bool)
(declare-fun x1511 () Int)
(declare-fun x327 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x875 (Int) Int)
(declare-fun x1470 () Int)
(declare-fun x2887 () Int)
(declare-fun x2338 () Bool)
(declare-fun x918 () Int)
(declare-fun x1611 () Int)
(declare-fun x391 () Bool)
(declare-fun x37 () Int)
(declare-fun x631 () Int)
(declare-fun x1071 () Bool)
(declare-fun x1546 () Int)
(declare-fun x1398 () Bool)
(declare-fun x2830 () Int)
(declare-fun x23 () Int)
(declare-fun x570 () Int)
(declare-fun x2326 () Int)
(declare-fun x386 () Int)
(declare-fun x917 () Int)
(declare-fun x1246 () Int)
(declare-fun x1864 () Int)
(declare-fun x357 () Bool)
(declare-fun x1442 () Int)
(declare-fun x2576 () Int)
(declare-fun x510 () Int)
(declare-fun x1076 () Int)
(declare-fun x3043 () Int)
(declare-fun x1847 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x1813 () Int)
(declare-fun x1543 () Int)
(declare-fun x3063 () Int)
(declare-fun x934 () Int)
(declare-fun x381 () Int)
(declare-fun x664 () Int)
(declare-fun x2532 () Int)
(declare-fun x897 () Int)
(declare-fun x1663 () Int)
(declare-fun x221 () Bool)
(declare-fun x2004 () Int)
(declare-fun x580 () Int)
(declare-fun x530 () Int)
(declare-fun x1274 () Int)
(declare-fun x1388 () Int)
(declare-fun x2464 () Int)
(declare-fun x73 () Int)
(declare-fun x309 () Bool)
(declare-fun x1912 () Bool)
(declare-fun x2293 () Int)
(declare-fun x613 () Int)
(declare-fun x579 () Int)
(declare-fun x970 () Int)
(declare-fun x1846 () Bool)
(declare-fun x1456 () Int)
(declare-fun x1838 () Int)
(declare-fun x2913 () Int)
(declare-fun x1770 () Bool)
(declare-fun x688 () Int)
(declare-fun x2059 () Int)
(declare-fun x1896 () Bool)
(declare-fun x152 () Bool)
(declare-fun x207 () Int)
(declare-fun x1810 () Int)
(declare-fun x3041 () Int)
(declare-fun x535 () Int)
(declare-fun x1273 () Int)
(declare-fun x2226 () Int)
(declare-fun x1040 (Int) Int)
(declare-fun x1930 () Int)
(declare-fun x1092 () Int)
(declare-fun x1366 () Bool)
(declare-fun x609 () Bool)
(declare-fun x877 () Int)
(declare-fun x768 () Int)
(declare-fun x1213 () Bool)
(declare-fun x1026 () Int)
(declare-fun x954 () Int)
(declare-fun x893 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x2890 () Int)
(declare-fun x2636 () Int)
(declare-fun x2082 () Int)
(declare-fun x2118 () Bool)
(declare-fun x2378 () Int)
(declare-fun x1948 () Bool)
(declare-fun x910 () Int)
(declare-fun x975 () Int)
(declare-fun x717 () Int)
(declare-fun x1614 () Int)
(declare-fun x520 () Bool)
(declare-fun x2441 () Bool)
(declare-fun x705 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x1575 () Int)
(declare-fun x805 () Int)
(declare-fun x652 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x454 () Bool)
(declare-fun x518 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x1296 () Int)
(declare-fun x2491 () Int)
(declare-fun x1742 () Int)
(declare-fun x2239 () Bool)
(declare-fun x503 () Int)
(declare-fun x1669 () Bool)
(declare-fun x2705 () Int)
(declare-fun x278 () Int)
(declare-fun x1722 () Bool)
(declare-fun x1530 () Int)
(declare-fun x1284 () Int)
(declare-fun x1416 () Int)
(declare-fun x2612 () Int)
(declare-fun x249 () Int)
(declare-fun x1570 () Int)
(declare-fun x626 () Int)
(declare-fun x80 () Int)
(declare-fun x3062 () Int)
(declare-fun x1263 () Int)
(declare-fun x1581 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x1126 () Int)
(declare-fun x19 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x895 () Bool)
(declare-fun x146 () Int)
(declare-fun x488 () Int)
(declare-fun x2483 () Int)
(declare-fun x2836 () Bool)
(declare-fun x1188 () Int)
(declare-fun x1450 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x258 () Int)
(declare-fun x1443 () Int)
(declare-fun x2003 () Bool)
(declare-fun x2304 () Int)
(declare-fun x2069 () Int)
(declare-fun x1960 () Bool)
(declare-fun x849 () Bool)
(declare-fun x112 () Int)
(declare-fun x1008 () Int)
(declare-fun x1726 () Int)
(declare-fun x1351 () Bool)
(declare-fun x2517 () Int)
(declare-fun x2856 () Int)
(declare-fun x2204 () Int)
(declare-fun x2496 () Int)
(declare-fun x242 () Int)
(declare-fun x2615 () Bool)
(declare-fun x2126 () Int)
(declare-fun x1437 () Bool)
(declare-fun x3031 () Bool)
(declare-fun x2611 () Int)
(declare-fun x1510 () Int)
(declare-fun x1889 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x77 () Int)
(declare-fun x1795 () Int)
(declare-fun x506 () Int)
(declare-fun x980 () Bool)
(declare-fun x1124 () Int)
(declare-fun x3052 () Int)
(declare-fun x2719 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1204 () Int)
(declare-fun x2286 () Bool)
(declare-fun x102 () Bool)
(declare-fun x1146 () Int)
(declare-fun x1084 () Int)
(declare-fun x666 () Int)
(declare-fun x1987 () Int)
(declare-fun x360 () Bool)
(declare-fun x694 () Bool)
(declare-fun x2225 () Int)
(declare-fun x1857 () Int)
(declare-fun x2383 () Bool)
(declare-fun x2696 () Int)
(declare-fun x2787 () Bool)
(declare-fun x368 () Int)
(declare-fun x2177 () Int)
(declare-fun x663 () Bool)
(declare-fun x871 () Int)
(declare-fun x2993 () Int)
(declare-fun x838 () Bool)
(declare-fun x1260 () Int)
(declare-fun x1497 () Int)
(declare-fun x375 () Int)
(declare-fun x846 () Int)
(declare-fun x1571 () Int)
(declare-fun x1893 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x2635 () Bool)
(declare-fun x2898 () Int)
(declare-fun x456 () Int)
(declare-fun x800 () Bool)
(declare-fun x320 () Int)
(declare-fun x2110 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x1928 () Int)
(declare-fun x713 () Bool)
(declare-fun x2987 () Int)
(declare-fun x2417 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1873 () Int)
(declare-fun x2731 () Int)
(declare-fun x107 () Int)
(declare-fun x1997 () Int)
(declare-fun x815 () Int)
(declare-fun x1118 () Int)
(declare-fun x463 () Int)
(declare-fun x1367 () Bool)
(declare-fun x2389 () Int)
(declare-fun x1730 () Bool)
(declare-fun x1967 () Int)
(declare-fun x2645 () Int)
(declare-fun x1127 () Int)
(declare-fun x2663 () Int)
(declare-fun x1752 () Bool)
(declare-fun x1327 () Int)
(declare-fun x756 () Bool)
(declare-fun x854 () Int)
(declare-fun x492 (Int) Int)
(declare-fun x1673 () Int)
(declare-fun x1278 () Int)
(declare-fun x1233 () Int)
(declare-fun x1694 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x1380 () Int)
(declare-fun x1473 () Int)
(declare-fun x584 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x32 () Int)
(declare-fun x1218 () Int)
(declare-fun x791 () Int)
(declare-fun x2207 () Bool)
(declare-fun x1364 () Int)
(declare-fun x2539 () Int)
(declare-fun x559 () Int)
(declare-fun x1523 () Int)
(declare-fun x2119 () Bool)
(declare-fun x365 () Bool)
(declare-fun x51 () Bool)
(declare-fun x416 () Int)
(declare-fun x2869 () Int)
(declare-fun x2488 () Int)
(declare-fun x1886 () Int)
(declare-fun x2632 () Int)
(declare-fun x2309 () Int)
(declare-fun x2816 () Int)
(declare-fun x2716 () Bool)
(declare-fun x528 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x1242 () Int)
(declare-fun x411 () Int)
(declare-fun x479 () Bool)
(declare-fun x2621 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x2415 (Int) Int)
(declare-fun x351 () Int)
(declare-fun x16 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1801 () Int)
(declare-fun x426 () Bool)
(declare-fun x101 () Int)
(declare-fun x1406 () Bool)
(declare-fun x2889 () Int)
(declare-fun x1345 () Bool)
(declare-fun x2712 (Int) Int)
(declare-fun x2388 () Bool)
(declare-fun x287 () Int)
(declare-fun x541 () Int)
(declare-fun x2434 () Int)
(declare-fun x755 () Int)
(declare-fun x438 () Int)
(declare-fun x2141 () Bool)
(declare-fun x174 () Int)
(declare-fun x2665 () Bool)
(declare-fun x2418 () Int)
(declare-fun x511 () Bool)
(declare-fun x2833 () Int)
(declare-fun x698 () Int)
(declare-fun x475 () Bool)
(declare-fun x1830 () Int)
(declare-fun x303 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x2893 () Int)
(declare-fun x2099 () Int)
(declare-fun x2153 () Bool)
(declare-fun x1434 () Int)
(declare-fun x2070 () Bool)
(declare-fun x661 () Int)
(declare-fun x1554 () Bool)
(declare-fun x1623 () Int)
(declare-fun x2456 () Int)
(declare-fun x346 () Bool)
(declare-fun x72 () Int)
(declare-fun x1141 () Bool)
(declare-fun x2940 () Int)
(declare-fun x2533 () Int)
(declare-fun x1582 () Bool)
(declare-fun x313 () Int)
(declare-fun x1386 () Int)
(declare-fun x244 () Int)
(declare-fun x2260 () Int)
(declare-fun x504 () Int)
(declare-fun x2558 () Int)
(declare-fun x446 () Bool)
(declare-fun x2752 () Bool)
(declare-fun x382 () Int)
(declare-fun x1648 () Int)
(declare-fun x648 () Int)
(declare-fun x1868 () Int)
(declare-fun x1681 (Int Int) Int)
(declare-fun x1887 () Bool)
(declare-fun x168 () Bool)
(declare-fun x2941 () Int)
(declare-fun x1295 () Bool)
(declare-fun x1920 () Int)
(declare-fun x2360 () Bool)
(declare-fun x1376 () Int)
(declare-fun x1714 () Int)
(declare-fun x54 () Int)
(declare-fun x2297 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x2250 () Int)
(declare-fun x216 () Int)
(declare-fun x3014 () Int)
(declare-fun x2028 () Bool)
(declare-fun x2859 () Int)
(declare-fun x2998 () Int)
(declare-fun x147 () Bool)
(declare-fun x1613 () Int)
(declare-fun x1159 () Int)
(declare-fun x282 () Bool)
(declare-fun x693 () Int)
(declare-fun x2170 () Int)
(declare-fun x1340 () Int)
(declare-fun x775 () Int)
(declare-fun x67 () Int)
(declare-fun x2392 () Bool)
(declare-fun x881 () Bool)
(declare-fun x843 () Int)
(declare-fun x2935 () Bool)
(declare-fun x2671 () Int)
(declare-fun x1342 () Int)
(declare-fun x665 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x2595 () Int)
(declare-fun x1335 () Int)
(declare-fun x1748 () Int)
(declare-fun x803 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x74 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x816 () Int)
(declare-fun x1805 () Int)
(declare-fun x2737 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1025 () Int)
(declare-fun x1261 () Int)
(declare-fun x931 () Bool)
(declare-fun x413 () Int)
(declare-fun x208 () Int)
(declare-fun x2848 () Int)
(declare-fun x1316 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x651 () Int)
(declare-fun x523 () Int)
(declare-fun x1482 () Int)
(declare-fun x358 () Int)
(declare-fun x723 () Bool)
(declare-fun x362 () Int)
(declare-fun x592 () Int)
(declare-fun x1721 () Int)
(declare-fun x1907 () Bool)
(declare-fun x2664 () Int)
(declare-fun x2589 () Int)
(declare-fun x143 () Int)
(declare-fun x2186 () Int)
(declare-fun x949 () Int)
(declare-fun x114 () Bool)
(declare-fun x2305 () Bool)
(declare-fun x2490 () Int)
(declare-fun x3021 () Int)
(declare-fun x1940 () Bool)
(declare-fun x743 () Int)
(declare-fun x2542 () Bool)
(declare-fun x3037 () Int)
(declare-fun x2760 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x1385 () Int)
(declare-fun x2956 () Int)
(declare-fun x725 () Int)
(declare-fun x868 () Int)
(declare-fun x46 () Int)
(declare-fun x2819 () Bool)
(declare-fun x2269 () Int)
(declare-fun x2229 () Int)
(declare-fun x2084 () Bool)
(declare-fun x1042 () Int)
(declare-fun x2445 () Int)
(declare-fun x657 () Int)
(declare-fun x820 () Bool)
(declare-fun x3028 () Bool)
(declare-fun x2421 () Int)
(declare-fun x1142 () Int)
(declare-fun x2135 () Int)
(declare-fun x998 () Bool)
(declare-fun x2324 () Int)
(declare-fun x131 () Int)
(declare-fun x773 () Int)
(declare-fun x1708 () Int)
(declare-fun x1586 () Int)
(declare-fun x2687 () Bool)
(declare-fun x2802 () Int)
(declare-fun x2384 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x955 () Int)
(declare-fun x2197 () Int)
(declare-fun x2812 () Int)
(declare-fun x70 () Int)
(declare-fun x2091 () Bool)
(declare-fun x2381 () Int)
(declare-fun x858 () Bool)
(declare-fun x150 () Int)
(declare-fun x2093 () Int)
(declare-fun x1486 () Bool)
(declare-fun x2374 () Int)
(declare-fun x1788 () Int)
(declare-fun x457 () Int)
(declare-fun x445 () Int)
(declare-fun x708 () Int)
(declare-fun x2931 () Bool)
(declare-fun x1394 () Int)
(declare-fun x2219 () Int)
(declare-fun x1654 () Int)
(declare-fun x1773 () Bool)
(declare-fun x275 () Int)
(declare-fun x1402 () Int)
(declare-fun x2904 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x2965 (Int) Int)
(declare-fun x2917 () Int)
(declare-fun x1199 () Int)
(declare-fun x2147 () Bool)
(declare-fun x302 () Int)
(declare-fun x655 () Int)
(declare-fun x1603 () Int)
(declare-fun x212 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x247 () Bool)
(declare-fun x2942 () Bool)
(declare-fun x1659 () Int)
(declare-fun x2277 () Int)
(declare-fun x1693 () Int)
(declare-fun x2824 () Int)
(declare-fun x2400 () Int)
(declare-fun x1049 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x338 () Int)
(declare-fun x1235 () Int)
(declare-fun x460 () Int)
(declare-fun x1951 () Bool)
(declare-fun x823 () Int)
(declare-fun x2427 () Bool)
(declare-fun x1932 () Int)
(declare-fun x2858 () Int)
(declare-fun x2036 () Int)
(declare-fun x1002 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x2945 () Int)
(declare-fun x1229 () Bool)
(declare-fun x914 () Bool)
(declare-fun x2922 () Int)
(declare-fun x2782 () Int)
(declare-fun x167 () Int)
(declare-fun x2526 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x191 () Int)
(declare-fun x1637 () Bool)
(declare-fun x2789 () Int)
(declare-fun x668 () Int)
(declare-fun x2105 () Bool)
(declare-fun x1894 () Bool)
(declare-fun x1549 () Int)
(declare-fun x1885 () Int)
(declare-fun x902 () Int)
(declare-fun x2723 () Int)
(declare-fun x1363 () Bool)
(declare-fun x181 () Bool)
(declare-fun x1950 () Int)
(declare-fun x1837 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x2923 () Int)
(declare-fun x2343 () Bool)
(declare-fun x729 () Int)
(declare-fun x2323 () Int)
(declare-fun x2592 () Bool)
(declare-fun x1387 () Int)
(declare-fun x2040 () Int)
(declare-fun x470 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x2044 () Int)
(declare-fun x2960 () Int)
(declare-fun x490 () Int)
(declare-fun x716 () Bool)
(declare-fun x728 () Int)
(declare-fun x1563 () Bool)
(declare-fun x1508 () Int)
(declare-fun x2921 () Bool)
(declare-fun x925 () Bool)
(declare-fun x2699 () Bool)
(declare-fun x908 () Int)
(declare-fun x119 () Bool)
(declare-fun x2307 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x2677 () Int)
(declare-fun x1720 () Int)
(declare-fun x2310 () Int)
(declare-fun x1594 () Bool)
(declare-fun x2029 () Int)
(declare-fun x2217 () Int)
(declare-fun x2749 () Bool)
(declare-fun x246 () Int)
(declare-fun x1799 () Int)
(declare-fun x1641 () Int)
(declare-fun x254 () Int)
(declare-fun x3007 () Bool)
(declare-fun x1147 () Int)
(declare-fun x1685 () Int)
(declare-fun x110 () Bool)
(declare-fun x2750 () Bool)
(declare-fun x407 () Int)
(declare-fun x1674 () Int)
(declare-fun x1487 () Bool)
(declare-fun x806 () Int)
(declare-fun x305 () Int)
(declare-fun x2524 () Int)
(declare-fun x2733 () Int)
(declare-fun x1240 () Bool)
(declare-fun x117 () Int)
(declare-fun x2337 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x400 () Bool)
(declare-fun x2035 () Int)
(declare-fun x1019 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x3001 () Int)
(declare-fun x2318 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x136 () Int)
(declare-fun x1459 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x250 () Int)
(declare-fun x1664 () Int)
(declare-fun x1809 () Int)
(declare-fun x1749 () Bool)
(declare-fun x2247 () Int)
(declare-fun x1299 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x2713 () Int)
(declare-fun x1756 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x469 () Int)
(declare-fun x2742 () Int)
(declare-fun x2808 () Int)
(declare-fun x2051 () Bool)
(declare-fun x2577 () Int)
(declare-fun x243 () Int)
(declare-fun x331 () Bool)
(declare-fun x31 () Int)
(declare-fun x1917 () Bool)
(declare-fun x1395 () Int)
(declare-fun x1556 () Int)
(declare-fun x662 () Int)
(declare-fun x546 () Int)
(declare-fun x1743 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x876 () Bool)
(declare-fun x1433 () Int)
(declare-fun x888 () Int)
(declare-fun x2785 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x1518 () Int)
(declare-fun x500 () Int)
(declare-fun x562 () Bool)
(declare-fun x2552 () Int)
(declare-fun x2551 () Int)
(declare-fun x2173 () Int)
(declare-fun x794 () Bool)
(declare-fun x696 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x707 () Int)
(declare-fun x3019 () Bool)
(declare-fun x712 () Int)
(declare-fun x1493 () Int)
(declare-fun x2292 (Int) Int)
(declare-fun x2850 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x2662 () Int)
(declare-fun x183 () Int)
(declare-fun x799 () Int)
(declare-fun x727 () Bool)
(declare-fun x1051 () Int)
(declare-fun x2353 () Int)
(declare-fun x524 () Int)
(declare-fun x2403 () Int)
(declare-fun x1750 () Int)
(declare-fun x1626 () Bool)
(declare-fun x921 () Int)
(declare-fun x2316 () Int)
(declare-fun x281 () Bool)
(declare-fun x1155 () Int)
(declare-fun x2144 () Bool)
(declare-fun x1815 () Int)
(declare-fun x1306 () Int)
(declare-fun x2103 () Bool)
(declare-fun x988 () Int)
(declare-fun x1996 () Bool)
(declare-fun x450 () Int)
(declare-fun x676 (Int) Int)
(declare-fun x3012 () Bool)
(declare-fun x197 () Int)
(declare-fun x1134 () Bool)
(declare-fun x153 () Int)
(declare-fun x2466 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x574 (Int) Int)
(declare-fun x1435 () Int)
(declare-fun x481 () Bool)
(declare-fun x1277 () Int)
(declare-fun x1259 () Bool)
(declare-fun x2826 () Int)
(declare-fun x1573 () Int)
(declare-fun x2125 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x2817 () Bool)
(declare-fun x3005 () Int)
(declare-fun x2187 () Bool)
(declare-fun x1329 () Int)
(declare-fun x353 () Int)
(declare-fun x193 () Int)
(declare-fun x5 () Int)
(declare-fun x2951 () Bool)
(declare-fun x1718 () Int)
(declare-fun x50 () Int)
(declare-fun x1264 () Int)
(declare-fun x1377 () Int)
(declare-fun x2573 () Int)
(declare-fun x2244 () Bool)
(declare-fun x2600 () Int)
(declare-fun x553 () Int)
(declare-fun x1520 () Int)
(declare-fun x2745 () Int)
(declare-fun x1082 () Bool)
(declare-fun x18 () Int)
(declare-fun x1621 () Int)
(declare-fun x607 () Bool)
(declare-fun x1688 () Int)
(declare-fun x476 () Bool)
(declare-fun x1115 () Int)
(declare-fun x1349 () Int)
(declare-fun x3008 () Bool)
(declare-fun x2234 () Int)
(declare-fun x2593 () Int)
(declare-fun x2912 () Bool)
(declare-fun x348 (Int) Int)
(declare-fun x2546 () Int)
(declare-fun x2796 () Int)
(declare-fun x412 () Bool)
(declare-fun x2096 () Int)
(declare-fun x1267 () Int)
(declare-fun x1472 () Bool)
(declare-fun x2424 () Int)
(declare-fun x1957 () Bool)
(declare-fun x2317 () Int)
(declare-fun x2867 () Bool)
(declare-fun x1677 () Int)
(declare-fun x2480 () Bool)
(declare-fun x1668 () Int)
(declare-fun x997 () Bool)
(declare-fun x2797 () Int)
(declare-fun x2290 () Bool)
(declare-fun x2185 () Int)
(declare-fun x1768 () Bool)
(declare-fun x1557 () Int)
(declare-fun x2426 () Int)
(declare-fun x1358 () Bool)
(declare-fun x2397 () Int)
(declare-fun x228 () Int)
(declare-fun x92 () Bool)
(declare-fun x1480 () Int)
(declare-fun x1762 () Int)
(declare-fun x220 () Bool)
(declare-fun x166 () Bool)
(declare-fun x2860 () Int)
(declare-fun x1086 () Bool)
(declare-fun x3003 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x678 () Bool)
(declare-fun x1993 () Int)
(declare-fun x614 () Int)
(declare-fun x1291 () Int)
(declare-fun x769 () Int)
(declare-fun x2990 () Int)
(declare-fun x478 () Int)
(declare-fun x2988 () Int)
(declare-fun x1897 () Int)
(declare-fun x682 () Bool)
(declare-fun x2622 () Int)
(declare-fun x1717 () Int)
(declare-fun x2363 () Int)
(declare-fun x2518 () Bool)
(declare-fun x935 () Bool)
(declare-fun x834 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x2892 () Int)
(declare-fun x622 () Int)
(declare-fun x2564 () Int)
(declare-fun x2018 () Int)
(declare-fun x2572 () Bool)
(declare-fun x920 () Int)
(declare-fun x2042 () Int)
(declare-fun x2485 () Int)
(declare-fun x2881 () Bool)
(declare-fun x245 () Int)
(declare-fun x316 () Int)
(declare-fun x330 () Int)
(declare-fun x689 () Bool)
(declare-fun x1194 () Int)
(declare-fun x494 () Int)
(declare-fun x1179 () Int)
(declare-fun x491 () Bool)
(declare-fun x1561 () Int)
(declare-fun x2132 () Bool)
(declare-fun x233 () Int)
(declare-fun x929 () Bool)
(declare-fun x878 () Bool)
(declare-fun x334 () Int)
(declare-fun x1775 () Int)
(declare-fun x1072 () Int)
(declare-fun x2123 () Int)
(declare-fun x108 () Bool)
(declare-fun x1401 () Int)
(declare-fun x1336 () Int)
(declare-fun x2854 () Int)
(declare-fun x1850 () Int)
(declare-fun x2728 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x429 () Bool)
(declare-fun x2361 () Int)
(declare-fun x2394 () Bool)
(declare-fun x1488 () Int)
(declare-fun x2208 () Bool)
(declare-fun x549 () Bool)
(declare-fun x822 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x2 () Int)
(declare-fun x409 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x3027 () Int)
(declare-fun x947 () Int)
(declare-fun x2769 () Int)
(declare-fun x53 () Int)
(declare-fun x612 () Int)
(declare-fun x1058 () Int)
(declare-fun x3009 () Int)
(declare-fun x42 () Bool)
(declare-fun x420 () Bool)
(declare-fun x196 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x499 () Int)
(declare-fun x2220 () Int)
(declare-fun x2754 () Bool)
(declare-fun x1262 () Int)
(declare-fun x2156 () Bool)
(declare-fun x2452 () Int)
(declare-fun x1871 () Int)
(declare-fun x1943 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x1656 () Int)
(declare-fun x1872 () Bool)
(declare-fun x2494 (Int) Int)
(declare-fun x2605 () Int)
(declare-fun x1803 () Int)
(declare-fun x1323 () Int)
(declare-fun x188 () Int)
(declare-fun x1601 () Int)
(declare-fun x2114 () Int)
(declare-fun x1168 () Bool)
(declare-fun x1538 () Int)
(declare-fun x927 () Bool)
(declare-fun x1898 () Int)
(declare-fun x1198 () Int)
(declare-fun x2396 () Bool)
(declare-fun x1609 () Int)
(declare-fun x772 () Int)
(declare-fun x1702 () Int)
(declare-fun x539 () Bool)
(declare-fun x1924 () Int)
(declare-fun x1322 () Int)
(declare-fun x943 () Int)
(declare-fun x387 () Bool)
(declare-fun x2672 (Int) Int)
(declare-fun x2805 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x359 () Int)
(declare-fun x311 () Int)
(declare-fun x1862 () Bool)
(declare-fun x2606 () Bool)
(declare-fun x1090 () Int)
(declare-fun x1715 () Bool)
(declare-fun x2102 () Int)
(declare-fun x825 () Bool)
(declare-fun x2630 () Int)
(declare-fun x2129 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x765 () Int)
(declare-fun x2828 () Int)
(declare-fun x2450 () Int)
(declare-fun x2627 () Int)
(declare-fun x1241 () Int)
(declare-fun x1122 () Int)
(declare-fun x1405 () Int)
(declare-fun x289 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x1484 () Int)
(declare-fun x284 () Int)
(declare-fun x2543 () Int)
(declare-fun x1853 () Int)
(declare-fun x1696 () Int)
(declare-fun x2979 () Int)
(declare-fun x1374 () Bool)
(declare-fun x1131 () Int)
(declare-fun x1140 () Bool)
(declare-fun x508 () Bool)
(declare-fun x1548 () Int)
(declare-fun x235 () Int)
(declare-fun x1615 () Int)
(declare-fun x2894 () Int)
(declare-fun x296 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x1454 () Int)
(declare-fun x65 () Int)
(declare-fun x2335 () Int)
(declare-fun x194 () Int)
(declare-fun x2210 () Int)
(declare-fun x1325 () Int)
(declare-fun x1747 () Int)
(declare-fun x1287 () Int)
(declare-fun x2073 () Bool)
(declare-fun x135 () Int)
(declare-fun x809 () Bool)
(declare-fun x48 () Bool)
(declare-fun x543 () Int)
(declare-fun x2899 () Bool)
(declare-fun x2291 () Int)
(declare-fun x1397 () Int)
(declare-fun x557 () Int)
(declare-fun x2072 () Int)
(declare-fun x2842 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x2574 () Int)
(declare-fun x1908 () Int)
(declare-fun x2999 () Bool)
(declare-fun x1645 () Int)
(declare-fun x2221 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x2631 () Int)
(declare-fun x1468 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x1006 () Int)
(declare-fun x977 () Bool)
(declare-fun x2670 () Bool)
(declare-fun x2055 () Int)
(declare-fun x1286 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1811 () Int)
(declare-fun x465 () Int)
(declare-fun x928 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x533 () Int)
(declare-fun x1635 () Int)
(declare-fun x2113 () Int)
(declare-fun x819 () Int)
(declare-fun x471 () Int)
(declare-fun x24 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x650 () Int)
(declare-fun x214 () Int)
(declare-fun x1050 () Int)
(declare-fun x291 () Int)
(declare-fun x673 () Int)
(declare-fun x1824 () Int)
(declare-fun x2131 () Int)
(declare-fun x2949 () Int)
(declare-fun x2835 () Bool)
(declare-fun x2413 () Int)
(declare-fun x1558 (Int) Int)
(declare-fun x1166 () Int)
(declare-fun x390 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x1831 () Int)
(declare-fun x2215 () Int)
(declare-fun x776 () Bool)
(declare-fun x2992 () Int)
(declare-fun x1699 () Int)
(declare-fun x1181 () Int)
(declare-fun x1978 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x145 () Int)
(declare-fun x1059 () Bool)
(declare-fun x2349 () Int)
(declare-fun x2079 () Bool)
(declare-fun x133 () Int)
(declare-fun x1460 () Int)
(declare-fun x2578 () Int)
(declare-fun x2390 () Bool)
(declare-fun x801 () Bool)
(declare-fun x1544 () Int)
(declare-fun x2809 () Int)
(declare-fun x1297 () Int)
(declare-fun x335 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1905 () Int)
(declare-fun x104 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x2626 () Int)
(declare-fun x521 () Bool)
(declare-fun x2725 () Int)
(declare-fun x746 () Int)
(declare-fun x2937 () Bool)
(declare-fun x1237 () Int)
(declare-fun x2369 () Int)
(declare-fun x1192 (Int) Int)
(declare-fun x1746 () Int)
(declare-fun x2172 () Int)
(declare-fun x2851 () Int)
(declare-fun x1369 () Int)
(declare-fun x2505 () Bool)
(declare-fun x2401 () Int)
(declare-fun x790 () Int)
(declare-fun x643 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x862 () Int)
(declare-fun x1409 () Int)
(declare-fun x923 () Int)
(declare-fun x1060 () Int)
(declare-fun x2438 () Bool)
(declare-fun x370 () Bool)
(declare-fun x2798 () Int)
(declare-fun x2043 () Bool)
(declare-fun x2838 () Int)
(declare-fun x376 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x3057 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x590 () Bool)
(declare-fun x451 () Int)
(declare-fun x2410 () Int)
(declare-fun x1346 () Int)
(declare-fun x2209 () Int)
(declare-fun x1279 () Int)
(declare-fun x1942 () Int)
(declare-fun x1144 () Bool)
(declare-fun x1818 () Int)
(declare-fun x45 () Int)
(declare-fun x2024 () Int)
(declare-fun x217 () Int)
(declare-fun x1436 () Bool)
(declare-fun x906 () Int)
(declare-fun x1797 () Int)
(declare-fun x1178 () Int)
(declare-fun x753 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x2240 () Int)
(declare-fun x2057 () Int)
(declare-fun x263 () Bool)
(declare-fun x2020 () Int)
(declare-fun x986 () Int)
(declare-fun x179 () Bool)
(declare-fun x536 () Int)
(declare-fun x2162 () Bool)
(declare-fun x3030 () Int)
(declare-fun x2249 () Bool)
(declare-fun x1104 () Int)
(declare-fun x2430 () Int)
(declare-fun x1690 () Int)
(declare-fun x325 () Bool)
(declare-fun x1148 (Int) Int)
(declare-fun x2371 () Int)
(declare-fun x297 () Int)
(declare-fun x238 () Int)
(declare-fun x1980 () Bool)
(declare-fun x2698 () Int)
(declare-fun x28 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x1063 () Int)
(declare-fun x810 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1774 () Int)
(declare-fun x1977 () Bool)
(declare-fun x3032 () Int)
(declare-fun x1133 () Int)
(declare-fun x3045 () Int)
(declare-fun x889 () Int)
(declare-fun x978 () Int)
(declare-fun x1005 () Bool)
(declare-fun x279 () Int)
(declare-fun x2242 () Int)
(declare-fun x1015 () Bool)
(declare-fun x2548 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x1534 () Int)
(declare-fun x344 () Int)
(declare-fun x2739 () Bool)
(declare-fun x1600 () Int)
(declare-fun x2866 () Int)
(declare-fun x1923 () Bool)
(declare-fun x187 () Bool)
(declare-fun x964 () Int)
(declare-fun x2582 () Bool)
(declare-fun x640 () Int)
(declare-fun x308 () Int)
(declare-fun x85 () Bool)
(declare-fun x1852 () Int)
(declare-fun x2052 () Int)
(declare-fun x464 () Int)
(declare-fun x1128 () Int)
(declare-fun x2175 () Bool)
(declare-fun x271 () Bool)
(declare-fun x2777 () Int)
(declare-fun x2432 () Bool)
(declare-fun x937 () Bool)
(declare-fun x2015 () Int)
(declare-fun x1080 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x2066 () Int)
(declare-fun x2649 () Int)
(declare-fun x3044 () Int)
(declare-fun x597 () Bool)
(declare-fun x742 () Int)
(declare-fun x602 () Bool)
(declare-fun x1680 () Int)
(declare-fun x265 () Bool)
(declare-fun x706 () Int)
(declare-fun x1061 () Int)
(declare-fun x2224 () Int)
(declare-fun x2454 () Int)
(declare-fun x2512 () Bool)
(declare-fun x744 () Int)
(declare-fun x1921 () Int)
(declare-fun x2223 () Int)
(declare-fun x2968 () Bool)
(declare-fun x398 () Int)
(declare-fun x2473 () Int)
(declare-fun x2288 () Int)
(declare-fun x2766 () Bool)
(declare-fun x2583 () Int)
(declare-fun x697 () Bool)
(declare-fun x186 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x3033 () Int)
(declare-fun x2163 () Int)
(declare-fun x1164 () Bool)
(declare-fun x867 () Int)
(declare-fun x2352 () Int)
(declare-fun x3002 () Int)
(declare-fun x2258 () Int)
(declare-fun x1653 () Int)
(declare-fun x2783 () Int)
(declare-fun x1683 () Bool)
(declare-fun x2265 () Int)
(declare-fun x1032 () Int)
(declare-fun x684 () Int)
(declare-fun x687 () Int)
(declare-fun x3038 () Int)
(declare-fun x199 () Int)
(declare-fun x2911 () Int)
(declare-fun x2169 () Int)
(declare-fun x2959 () Bool)
(declare-fun x1078 () Int)
(declare-fun x2997 () Int)
(declare-fun x1642 () Int)
(declare-fun x2083 () Bool)
(declare-fun x788 () Int)
(declare-fun x1619 () Int)
(declare-fun x770 () Bool)
(declare-fun x2880 () Int)
(declare-fun x1915 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1731 () Int)
(declare-fun x2682 () Bool)
(declare-fun x1324 () Int)
(declare-fun x2311 () Bool)
(declare-fun x155 () Int)
(declare-fun x610 () Bool)
(declare-fun x1455 () Int)
(declare-fun x2715 () Int)
(declare-fun x329 () Int)
(declare-fun x1247 () Int)
(declare-fun x1607 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x3064 () Int)
(declare-fun x824 () Bool)
(declare-fun x318 () Int)
(declare-fun x2037 () Int)
(declare-fun x1244 () Int)
(declare-fun x1195 () Int)
(declare-fun x234 () Int)
(declare-fun x2489 () Int)
(declare-fun x158 () Bool)
(declare-fun x1632 () Int)
(declare-fun x644 () Bool)
(declare-fun x758 () Bool)
(declare-fun x123 () Bool)
(declare-fun x522 () Int)
(declare-fun x2774 () Int)
(declare-fun x87 () Int)
(declare-fun x828 () Bool)
(declare-fun x1667 () Int)
(declare-fun x1945 () Int)
(declare-fun x2915 () Bool)
(declare-fun x501 () Bool)
(declare-fun x366 () Int)
(declare-fun x1106 () Bool)
(declare-fun x2610 () Int)
(declare-fun x458 () Bool)
(declare-fun x2506 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x2977 () Int)
(declare-fun x443 () Bool)
(declare-fun x2743 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x399 () Int)
(declare-fun x1009 () Bool)
(declare-fun x2294 () Int)
(declare-fun x1553 () Int)
(declare-fun x1565 () Int)
(declare-fun x444 () Int)
(declare-fun x498 () Bool)
(declare-fun x1182 () Int)
(declare-fun x432 () Bool)
(declare-fun x1496 () Int)
(declare-fun x1757 () Bool)
(declare-fun x2534 () Int)
(declare-fun x2586 () Int)
(declare-fun x2254 () Int)
(declare-fun x1865 () Int)
(declare-fun x778 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1326 () Bool)
(declare-fun x952 () Int)
(declare-fun x1691 () Int)
(declare-fun x1022 () Int)
(declare-fun x1633 () Int)
(declare-fun x47 () Int)
(declare-fun x2734 () Int)
(declare-fun x1925 () Int)
(declare-fun x1597 () Bool)
(declare-fun x732 () Int)
(declare-fun x2273 () Bool)
(declare-fun x785 () Int)
(declare-fun x1038 () Int)
(declare-fun x1494 () Bool)
(declare-fun x295 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x2584 () Int)
(declare-fun x2722 (Int) Int)
(declare-fun x1618 () Int)
(declare-fun x2927 () Bool)
(declare-fun x1790 () Int)
(declare-fun x1129 () Int)
(declare-fun x641 () Bool)
(declare-fun x2753 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x1891 (Int) Int)
(declare-fun x938 () Int)
(declare-fun x144 () Int)
(declare-fun x160 () Int)
(declare-fun x2585 () Int)
(declare-fun x793 () Int)
(declare-fun x517 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x619 () Int)
(declare-fun x2150 () Bool)
(declare-fun x2498 () Int)
(declare-fun x873 () Int)
(declare-fun x2926 () Int)
(declare-fun x525 () Int)
(declare-fun x461 () Int)
(declare-fun x8 () Int)
(declare-fun x2748 () Int)
(declare-fun x340 () Int)
(declare-fun x1403 () Int)
(declare-fun x2501 () Bool)
(declare-fun x1533 () Int)
(declare-fun x2773 () Int)
(declare-fun x350 () Int)
(declare-fun x1216 () Int)
(declare-fun x909 () Int)
(declare-fun x814 () Bool)
(declare-fun x1317 () Int)
(declare-fun x2455 () Int)
(declare-fun x352 () Bool)
(declare-fun x2780 () Int)
(declare-fun x1170 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x2228 () Int)
(declare-fun x339 () Bool)
(declare-fun x1959 () Int)
(declare-fun x474 (Int Int) Int)
(declare-fun x1285 () Bool)
(declare-fun x2205 () Int)
(declare-fun x2149 () Int)
(declare-fun x720 () Int)
(declare-fun x2364 () Int)
(declare-fun x726 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x431 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x2681 () Bool)
(declare-fun x1695 () Int)
(declare-fun x1550 () Int)
(declare-fun x1067 () Int)
(declare-fun x865 () Int)
(declare-fun x2641 () Int)
(declare-fun x2453 () Bool)
(declare-fun x2544 () Int)
(declare-fun x1046 () Bool)
(declare-fun x2791 () Int)
(declare-fun x1184 () Int)
(declare-fun x2050 () Int)
(declare-fun x126 () Int)
(declare-fun x1638 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x2031 () Int)
(declare-fun x1901 () Int)
(declare-fun x1162 () Int)
(declare-fun x2571 () Int)
(declare-fun x3040 () Int)
(declare-fun x1598 () Int)
(declare-fun x2283 () Int)
(declare-fun x2540 () Bool)
(declare-fun x2002 () Int)
(declare-fun x973 () Bool)
(declare-fun x2115 () Int)
(declare-fun x1578 () Bool)
(declare-fun x880 () Int)
(declare-fun x1867 () Bool)
(declare-fun x1062 () Int)
(declare-fun x2054 () Int)
(declare-fun x1860 () Int)
(declare-fun x939 () Int)
(declare-fun x44 () Bool)
(declare-fun x1502 () Int)
(declare-fun x3000 () Bool)
(declare-fun x2617 () Int)
(declare-fun x2182 () Int)
(declare-fun x2302 () Int)
(declare-fun x2437 () Int)
(declare-fun x3049 () Int)
(declare-fun x223 () Int)
(declare-fun x2011 () Int)
(declare-fun x1449 () Int)
(declare-fun x430 () Bool)
(declare-fun x996 (Int Int Int) Int)
(declare-fun x176 () Bool)
(declare-fun x754 () Bool)
(declare-fun x658 () Int)
(declare-fun x2694 () Bool)
(declare-fun x2278 () Int)
(declare-fun x261 () Int)
(declare-fun x142 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x2640 () Int)
(declare-fun x2910 () Int)
(declare-fun x1113 () Bool)
(declare-fun x633 () Bool)
(declare-fun x422 () Int)
(declare-fun x2807 () Int)
(declare-fun x2650 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x189 () Bool)
(declare-fun x807 () Int)
(declare-fun x2046 () Int)
(declare-fun x577 () Int)
(declare-fun x15 () Int)
(declare-fun x177 () Int)
(declare-fun x2794 () Int)
(declare-fun x628 () Int)
(declare-fun x2171 () Int)
(declare-fun x1154 () Int)
(declare-fun x2492 () Bool)
(declare-fun x1160 (Int) Int)
(declare-fun x156 () Int)
(declare-fun x771 () Bool)
(declare-fun x2279 () Int)
(declare-fun x839 () Int)
(declare-fun x1888 () Bool)
(declare-fun x669 () Int)
(declare-fun x1547 () Bool)
(declare-fun x2763 () Int)
(declare-fun x1567 () Int)
(declare-fun x1973 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x2351 () Int)
(declare-fun x1421 () Bool)
(declare-fun x201 () Int)
(declare-fun x2604 () Int)
(declare-fun x1703 () Int)
(declare-fun x1501 () Int)
(declare-fun x1212 () Int)
(declare-fun x1732 () Int)
(declare-fun x423 () Int)
(declare-fun x1719 () Int)
(declare-fun x2142 () Bool)
(declare-fun x1217 () Int)
(declare-fun x317 () Int)
(declare-fun x1767 () Int)
(declare-fun x4 () Int)
(declare-fun x2081 () Int)
(declare-fun x840 () Int)
(declare-fun x568 () Int)
(declare-fun x2499 (Int) Int)
(declare-fun x537 () Bool)
(declare-fun x2339 () Int)
(declare-fun x1737 (Int) Int)
(declare-fun x1139 (Int) Int)
(declare-fun x2967 () Int)
(declare-fun x2862 () Int)
(declare-fun x1816 () Int)
(declare-fun x2236 () Int)
(declare-fun x2535 () Bool)
(declare-fun x2601 () Int)
(declare-fun x1054 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1772 () Int)
(declare-fun x2695 () Int)
(declare-fun x2970 () Bool)
(declare-fun x941 () Int)
(declare-fun x2962 () Int)
(declare-fun x1709 () Int)
(declare-fun x1740 () Int)
(declare-fun x680 () Int)
(declare-fun x341 () Bool)
(declare-fun x703 () Int)
(declare-fun x714 () Bool)
(declare-fun x495 () Int)
(declare-fun x2950 () Int)
(declare-fun x1052 () Int)
(declare-fun x2957 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1331 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x251 (Int) Int)
(declare-fun x395 () Int)
(declare-fun x1559 () Int)
(declare-fun x2704 () Bool)
(declare-fun x128 () Int)
(declare-fun x81 () Int)
(declare-fun x731 () Bool)
(declare-fun x2929 () Int)
(declare-fun x1599 () Bool)
(declare-fun x782 () Int)
(declare-fun x1919 () Int)
(declare-fun x2245 () Int)
(declare-fun x372 () Int)
(declare-fun x2423 () Int)
(declare-fun x2222 () Int)
(declare-fun x3026 () Bool)
(declare-fun x551 () Bool)
(declare-fun x567 () Bool)
(declare-fun x1651 () Int)
(declare-fun x2565 () Bool)
(declare-fun x2407 () Int)
(declare-fun x2416 () Bool)
(declare-fun x2017 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x735 () Bool)
(declare-fun x1121 () Int)
(declare-fun x589 () Int)
(declare-fun x885 () Int)
(declare-fun x719 () Int)
(declare-fun x2646 () Int)
(declare-fun x2168 () Bool)
(declare-fun x859 (Int) Int)
(declare-fun x1360 () Int)
(declare-fun x2328 () Int)
(declare-fun x1379 () Int)
(declare-fun x2484 () Int)
(declare-fun x1408 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x2914 () Bool)
(declare-fun x63 () Int)
(declare-fun x2458 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x2784 () Int)
(declare-fun x1282 () Bool)
(declare-fun x1202 () Int)
(declare-fun x433 () Int)
(declare-fun x2614 () Bool)
(declare-fun x2567 () Int)
(declare-fun x2075 () Bool)
(declare-fun x930 () Int)
(declare-fun x2877 () Int)
(declare-fun x2477 () Int)
(declare-fun x1595 () Bool)
(declare-fun x1483 () Int)
(declare-fun x2235 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x2651 () Int)
(declare-fun x345 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x532 () Bool)
(declare-fun x288 () Bool)
(declare-fun x847 () Int)
(declare-fun x1529 () Int)
(declare-fun x2849 () Int)
(declare-fun x178 () Bool)
(declare-fun x113 () Int)
(declare-fun x811 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x721 () Int)
(declare-fun x2136 () Int)
(declare-fun x2359 () Bool)
(declare-fun x578 () Bool)
(declare-fun x904 () Int)
(declare-fun x948 () Bool)
(declare-fun x222 () Bool)
(declare-fun x1961 () Int)
(declare-fun x1070 () Int)
(declare-fun x2138 () Int)
(declare-fun x1875 () Bool)
(declare-fun x497 () Int)
(declare-fun x2190 () Bool)
(declare-fun x2476 () Bool)
(declare-fun x672 () Int)
(declare-fun x2098 () Int)
(declare-fun x604 () Int)
(declare-fun x2971 () Bool)
(declare-fun x2525 () Int)
(declare-fun x2864 (Int) Int)
(declare-fun x1428 () Int)
(declare-fun x1562 () Int)
(declare-fun x2203 () Int)
(declare-fun x737 () Bool)
(declare-fun x2778 () Bool)
(declare-fun x2980 () Int)
(declare-fun x993 () Bool)
(declare-fun x2504 () Int)
(declare-fun x1424 () Int)
(declare-fun x3034 () Int)
(declare-fun x1392 () Int)
(declare-fun x2991 () Int)
(declare-fun x2755 () Bool)
(declare-fun x1516 () Int)
(declare-fun x2946 () Int)
(declare-fun x797 () Int)
(declare-fun x1952 () Bool)
(declare-fun x575 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x2497 () Int)
(declare-fun x1916 () Int)
(declare-fun x1753 () Int)
(declare-fun x2865 () Bool)
(declare-fun x1938 () Int)
(declare-fun x89 () Int)
(declare-fun x1481 () Int)
(declare-fun x2086 () Int)
(declare-fun x141 (Int) Int)
(declare-fun x157 () Bool)
(declare-fun x786 () Int)
(declare-fun x90 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x1705 () Int)
(declare-fun x2201 () Bool)
(declare-fun x1077 () Int)
(declare-fun x2487 () Int)
(declare-fun x2925 () Bool)
(declare-fun x175 () Int)
(declare-fun x2815 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x646 () Int)
(declare-fun x3065 () Bool)
(declare-fun x2398 () Bool)
(declare-fun x760 () Int)
(declare-fun x1577 () Int)
(declare-fun x2587 () Int)
(declare-fun x1321 () Int)
(declare-fun x485 () Int)
(declare-fun x270 () Int)
(declare-fun x538 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x397 () Int)
(declare-fun x808 () Int)
(declare-fun x802 () Int)
(declare-fun x2420 () Int)
(declare-fun x66 () Int)
(declare-fun x850 () Int)
(declare-fun x260 () Int)
(declare-fun x12 () Bool)
(declare-fun x2387 () Int)
(declare-fun x2581 () Int)
(declare-fun x56 () Bool)
(declare-fun x21 () Int)
(declare-fun x2026 () Int)
(declare-fun x1251 () Int)
(declare-fun x629 () Bool)
(declare-fun x2740 () Int)
(declare-fun x1091 () Bool)
(declare-fun x342 () Bool)
(declare-fun x992 () Int)
(declare-fun x1535 () Bool)
(declare-fun x1280 () Int)
(declare-fun x940 () Bool)
(declare-fun x239 () Int)
(declare-fun x2756 () Int)
(declare-fun x2373 () Int)
(declare-fun x1167 () Int)
(declare-fun x293 () Int)
(declare-fun x1232 () Int)
(declare-fun x2139 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1671 () Bool)
(declare-fun x2721 () Int)
(declare-fun x2882 () Int)
(declare-fun x3020 () Int)
(declare-fun x2537 () Int)
(declare-fun x1895 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1724 () Int)
(declare-fun x60 () Bool)
(declare-fun x2256 () Int)
(declare-fun x1796 () Int)
(declare-fun x882 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x1820 () Int)
(declare-fun x3061 () Int)
(declare-fun x1834 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x2474 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x681 () Bool)
(declare-fun x1257 () Int)
(declare-fun x2312 () Int)
(declare-fun x2523 () Int)
(declare-fun x1866 () Int)
(declare-fun x711 () Int)
(declare-fun x2039 () Bool)
(declare-fun x2193 () Int)
(declare-fun x1463 () Int)
(declare-fun x184 () Bool)
(declare-fun x3047 () Int)
(declare-fun x2503 () Int)
(declare-fun x2268 () Int)
(declare-fun x3004 () Int)
(declare-fun x2557 () Int)
(declare-fun x1467 () Bool)
(declare-fun x724 () Int)
(declare-fun x529 () Int)
(declare-fun x1697 () Bool)
(declare-fun x2439 () Bool)
(declare-fun x111 () Bool)
(declare-fun x2041 () Int)
(declare-fun x2058 () Bool)
(declare-fun x1081 () Int)
(declare-fun x1245 () Bool)
(declare-fun x1231 () Int)
(declare-fun x1094 () Int)
(declare-fun x1112 () Bool)
(declare-fun x2408 () Bool)
(declare-fun x545 () Int)
(declare-fun x300 () Int)
(declare-fun x435 () Bool)
(declare-fun x2520 () Int)
(declare-fun x256 () Bool)
(declare-fun x1 () Bool)
(declare-fun x2775 () Bool)
(declare-fun x985 () Int)
(declare-fun x1781 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x544 () Int)
(declare-fun x2461 () Int)
(declare-fun x2436 () Int)
(declare-fun x2270 () Int)
(declare-fun x2074 () Bool)
(declare-fun x69 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1783 () Int)
(declare-fun x2362 () Int)
(declare-fun x2447 () Bool)
(declare-fun x2078 () Int)
(declare-fun x347 () Bool)
(declare-fun x1723 () Int)
(declare-fun x2271 () Int)
(declare-fun x736 () Bool)
(declare-fun x162 () Int)
(declare-fun x2262 () Int)
(declare-fun x3046 () Bool)
(declare-fun x1180 () Int)
(declare-fun x171 () Int)
(declare-fun x1272 () Int)
(declare-fun x2048 () Int)
(declare-fun x1528 () Int)
(declare-fun x608 () Bool)
(declare-fun x866 () Int)
(declare-fun x1432 () Bool)
(declare-fun x627 () Int)
(declare-fun x1119 () Bool)
(declare-fun x1999 () Int)
(declare-fun x2313 () Int)
(declare-fun x2280 () Bool)
(declare-fun x2818 () Bool)
(declare-fun x1191 () Int)
(declare-fun x314 () Int)
(declare-fun x844 () Int)
(declare-fun x462 () Bool)
(declare-fun x3029 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x1039 () Int)
(declare-fun x1044 () Int)
(declare-fun x164 () Int)
(declare-fun x733 () Int)
(declare-fun x1892 () Bool)
(declare-fun x2918 () Int)
(declare-fun x1670 () Int)
(declare-fun x1100 () Int)
(declare-fun x1074 () Bool)
(declare-fun x1537 () Int)
(declare-fun x767 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1266 () Int)
(declare-fun x2874 () Bool)
(declare-fun x845 () Int)
(declare-fun x1610 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x380 () Bool)
(declare-fun x1881 () Int)
(declare-fun x55 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1485 () Int)
(declare-fun x301 () Int)
(declare-fun x883 () Bool)
(declare-fun x2839 () Bool)
(declare-fun x159 () Int)
(declare-fun x315 () Int)
(declare-fun x489 () Int)
(declare-fun x2795 () Int)
(declare-fun x459 () Int)
(declare-fun x1028 () Int)
(declare-fun x2625 () Bool)
(declare-fun x638 () Int)
(declare-fun x2164 () Bool)
(declare-fun x1354 () Int)
(declare-fun x1647 () Bool)
(declare-fun x2238 () Int)
(declare-fun x1629 () Bool)
(declare-fun x3 () Int)
(declare-fun x379 () Bool)
(declare-fun x154 () Bool)
(declare-fun x466 (Int) Int)
(declare-fun x3039 () Int)
(declare-fun x1001 () Int)
(declare-fun x1800 () Int)
(declare-fun x2068 () Int)
(declare-fun x298 () Int)
(declare-fun x1835 () Int)
(declare-fun x796 () Int)
(declare-fun x1407 () Int)
(declare-fun x2259 () Int)
(declare-fun x2729 () Int)
(declare-fun x1579 () Int)
(declare-fun x2331 () Int)
(declare-fun x2820 () Int)
(declare-fun x2624 () Int)
(declare-fun x864 () Int)
(declare-fun x2233 () Bool)
(declare-fun x151 () Int)
(declare-fun x472 () Bool)
(declare-fun x2140 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x2692 () Int)
(declare-fun x96 () Int)
(declare-fun x558 () Bool)
(declare-fun x385 () Int)
(declare-fun x831 () Bool)
(declare-fun x392 () Int)
(declare-fun x2406 () Bool)
(declare-fun x14 () Bool)
(declare-fun x1422 () Int)
(declare-fun x2431 () Int)
(declare-fun x1120 (Int Int) Int)
(declare-fun x419 () Int)
(declare-fun x356 () Int)
(declare-fun x2943 () Int)
(declare-fun x683 () Int)
(declare-fun x1132 () Int)
(declare-fun x200 () Bool)
(declare-fun x229 () Int)
(declare-fun x106 () Int)
(declare-fun x2706 () Int)
(declare-fun x2253 () Int)
(declare-fun x722 () Bool)
(declare-fun x326 () Int)
(declare-fun x1441 () Bool)
(declare-fun x2680 () Int)
(declare-fun x1445 () Bool)
(declare-fun x585 () Int)
(declare-fun x1661 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x1759 () Int)
(declare-fun x2276 () Int)
(declare-fun x1822 () Int)
(declare-fun x2027 () Bool)
(declare-fun x1003 () Int)
(declare-fun x2471 () Int)
(declare-fun x1234 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x2063 () Int)
(declare-fun x2289 () Int)
(declare-fun x2934 () Int)
(declare-fun x1457 () Bool)
(declare-fun x2180 () Int)
(declare-fun x1031 () Bool)
(declare-fun x1228 () Int)
(declare-fun x2550 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x2676 () Int)
(declare-fun x999 () Int)
(declare-fun x383 () Bool)
(declare-fun x969 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x2771 () Int)
(declare-fun x3056 () Bool)
(declare-fun x1384 () Int)
(declare-fun x979 () Int)
(declare-fun x2619 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1589 () Int)
(declare-fun x2939 () Int)
(declare-fun x1399 () Int)
(declare-fun x547 () Int)
(declare-fun x804 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x211 () Int)
(declare-fun x1253 () Int)
(declare-fun x2529 (Int) Bool)
(declare-fun x863 () Bool)
(declare-fun x285 () Int)
(declare-fun x2891 () Int)
(declare-fun x1007 () Int)
(declare-fun x95 () Int)
(declare-fun x957 () Int)
(declare-fun x2033 () Bool)
(declare-fun x2495 () Bool)
(declare-fun x747 () Int)
(declare-fun x1030 () Bool)
(declare-fun x202 () Int)
(declare-fun x3018 () Int)
(declare-fun x269 () Int)
(declare-fun x1755 () Int)
(declare-fun x2319 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1789 (Int) Int)
(declare-fun x2876 () Bool)
(declare-fun x554 () Int)
(declare-fun x836 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x224 () Int)
(declare-fun x2372 () Bool)
(declare-fun x2843 () Int)
(declare-fun x617 () Int)
(declare-fun x1319 () Int)
(declare-fun x715 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x2638 () Int)
(declare-fun x813 () Int)
(declare-fun x115 () Bool)
(declare-fun x1779 () Int)
(declare-fun x2847 () Bool)
(declare-fun x898 () Int)
(declare-fun x1203 () Int)
(declare-fun x3010 () Bool)
(declare-fun x1328 () Int)
(declare-fun x874 () Int)
(declare-fun x1704 () Int)
(declare-fun x1089 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x2852 () Int)
(declare-fun x1256 () Int)
(declare-fun x962 () Int)
(declare-fun x1152 (Int Int) Int)
(declare-fun x84 () Bool)
(declare-fun x2241 () Int)
(declare-fun x748 () Bool)
(declare-fun x2375 () Int)
(declare-fun x1946 () Int)
(declare-fun x2065 () Int)
(declare-fun x2443 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1172 () Int)
(declare-fun x2888 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x2448 () Int)
(declare-fun x623 () Bool)
(declare-fun x2825 () Int)
(declare-fun x1986 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x1877 () Bool)
(declare-fun x827 () Bool)
(declare-fun x2005 () Int)
(declare-fun x62 () Int)
(declare-fun x555 () Int)
(declare-fun x1526 () Bool)
(declare-fun x441 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x1682 () Int)
(declare-fun x2508 () Int)
(declare-fun x240 () Int)
(declare-fun x818 () Int)
(declare-fun x738 () Int)
(declare-fun x686 () Int)
(declare-fun x1137 () Int)
(declare-fun x1612 () Bool)
(declare-fun x2176 () Int)
(declare-fun x2709 () Bool)
(declare-fun x933 () Bool)
(declare-fun x2196 () Bool)
(declare-fun x739 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x1519 () Int)
(declare-fun x2884 () Bool)
(declare-fun x2903 () Bool)
(declare-fun x855 () Bool)
(declare-fun x1171 () Int)
(declare-fun x436 () Bool)
(declare-fun x2767 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1515 () Int)
(declare-fun x1819 () Int)
(declare-fun x2148 () Int)
(declare-fun x1109 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x388 () Int)
(declare-fun x52 () Int)
(declare-fun x2281 () Int)
(declare-fun x1939 () Int)
(declare-fun x2659 () Int)
(declare-fun x3059 () Bool)
(declare-fun x2025 () Bool)
(declare-fun x226 () Int)
(declare-fun x2510 () Int)
(declare-fun x1941 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x185 () Int)
(declare-fun x2751 () Bool)
(declare-fun x2422 () Int)
(declare-fun x2954 () Int)
(declare-fun x2184 () Int)
(declare-fun x2100 () Int)
(declare-fun x2885 () Int)
(declare-fun x2986 () Bool)
(declare-fun x1624 () Int)
(declare-fun x1318 () Int)
(declare-fun x1933 () Bool)
(declare-fun x2469 () Int)
(declare-fun x321 () Bool)
(declare-fun x990 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x2801 () Int)
(declare-fun x2928 () Bool)
(declare-fun x2112 () Int)
(declare-fun x1735 () Int)
(declare-fun x563 () Bool)
(declare-fun x1590 () Int)
(declare-fun x2451 () Int)
(declare-fun x2870 (Int) Int)
(declare-fun x2562 () Bool)
(declare-fun x781 () Bool)
(declare-fun x2213 () Int)
(declare-fun x780 () Int)
(declare-fun x2393 () Int)
(declare-fun x832 () Bool)
(declare-fun x2634 () Int)
(declare-fun x837 () Int)
(declare-fun x1660 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x1357 () Int)
(declare-fun x830 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x1982 () Int)
(declare-fun x3024 () Bool)
(declare-fun x926 () Int)
(declare-fun x1975 () Bool)
(declare-fun x415 () Bool)
(declare-fun x299 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x2637 () Int)
(declare-fun x1649 () Int)
(declare-fun x78 () Bool)
(declare-fun x783 () Int)
(declare-fun x1840 () Int)
(declare-fun x1906 () Int)
(declare-fun x1587 () Int)
(declare-fun x699 () Int)
(declare-fun x2284 () Bool)
(declare-fun x1817 () Int)
(declare-fun x924 () Int)
(declare-fun x482 () Int)
(declare-fun x11 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x1353 () Int)
(declare-fun x2433 () Bool)
(declare-fun x1505 () Int)
(declare-fun x1828 () Int)
(declare-fun x560 () Int)
(declare-fun x1821 () Int)
(declare-fun x2121 () Bool)
(declare-fun x402 () Int)
(declare-fun x2648 () Int)
(declare-fun x41 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1021 () Int)
(declare-fun x283 () Bool)
(declare-fun x1466 () Int)
(declare-fun x2679 () Bool)
(declare-fun x1215 () Int)
(declare-fun x691 () Int)
(declare-fun x795 () Bool)
(declare-fun x624 () Bool)
(declare-fun x2568 () Int)
(declare-fun x1540 () Bool)
(declare-fun x1309 () Int)
(declare-fun x2056 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x922 () Bool)
(declare-fun x1268 () Int)
(declare-fun x2212 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x2380 () Int)
(declare-fun x2111 () Int)
(declare-fun x2160 () Int)
(declare-fun x598 () Int)
(declare-fun x812 () Int)
(declare-fun x3067 () Bool)
(declare-fun x1566 () Int)
(declare-fun x1913 () Int)
(declare-fun x616 () Int)
(declare-fun x2549 () Int)
(declare-fun x2765 () Int)
(declare-fun x2298 () Int)
(declare-fun x734 () Int)
(declare-fun x1490 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x984 () Int)
(declare-fun x417 () Int)
(declare-fun x274 () Bool)
(declare-fun x718 () Int)
(declare-fun x304 () Int)
(declare-fun x2955 () Int)
(declare-fun x27 () Bool)
(declare-fun x974 () Int)
(declare-fun x210 () Int)
(declare-fun x2652 () Int)
(declare-fun x2938 () Int)
(declare-fun x2688 () Int)
(declare-fun x1308 () Int)
(declare-fun x639 () Int)
(declare-fun x2470 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x1965 () Int)
(declare-fun x1177 () Bool)
(declare-fun x2788 () Bool)
(declare-fun x896 () Bool)
(declare-fun x1465 () Int)
(declare-fun x835 () Bool)
(declare-fun x355 () Int)
(declare-fun x2545 () Int)
(declare-fun x1926 () Int)
(declare-fun x2419 () Int)
(declare-fun x268 () Int)
(declare-fun x764 () Int)
(declare-fun x1890 () Bool)
(declare-fun x899 () Int)
(declare-fun x618 () Int)
(declare-fun x453 () Int)
(declare-fun x1798 () Int)
(declare-fun x1187 () Int)
(declare-fun x384 () Int)
(declare-fun x2320 () Int)
(declare-fun x20 () Int)
(declare-fun x404 () Int)
(declare-fun x515 () Bool)
(declare-fun x394 () Int)
(declare-fun x2358 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x2846 () Int)
(declare-fun x2995 () Int)
(declare-fun x1314 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x1879 () Int)
(declare-fun x1806 () Int)
(declare-fun x2559 () Bool)
(declare-fun x209 () Int)
(declare-fun x513 () Bool)
(declare-fun x1130 () Int)
(declare-fun x2596 () Bool)
(declare-fun x2936 () Int)
(declare-fun x2116 () Int)
(declare-fun x647 () Bool)
(declare-fun x219 () Int)
(declare-fun x527 () Int)
(declare-fun x396 () Int)
(declare-fun x94 () Int)
(declare-fun x363 () Bool)
(declare-fun x1989 () Int)
(declare-fun x1018 () Bool)
(declare-fun x35 () Bool)
(declare-fun x1751 () Int)
(declare-fun x336 () Int)
(declare-fun x1617 () Int)
(declare-fun x2493 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x1136 () Int)
(declare-fun x361 () Int)
(declare-fun x599 () Int)
(declare-fun x730 () Int)
(declare-fun x2905 () Int)
(declare-fun x1223 () Int)
(declare-fun x3054 () Int)
(declare-fun x487 () Bool)
(declare-fun x124 () Int)
(declare-fun x2829 () Bool)
(declare-fun x750 () Int)
(declare-fun x2527 () Int)
(declare-fun x2566 () Int)
(declare-fun x25 () Int)
(declare-fun x1151 () Bool)
(declare-fun x2159 () Int)
(declare-fun x1114 () Int)
(declare-fun x213 () Bool)
(declare-fun x2639 () Bool)
(declare-fun x2840 () Int)
(declare-fun x945 () Bool)
(declare-fun x149 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x2459 () Int)
(declare-fun x1785 () Bool)
(declare-fun x371 () Int)
(declare-fun x1765 () Bool)
(declare-fun x1780 () Int)
(declare-fun x505 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x410 () Bool)
(declare-fun x2718 () Int)
(declare-fun x1305 (Int) Int)
(declare-fun x130 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x2628 () Int)
(declare-fun x1048 () Int)
(declare-fun x2897 () Bool)
(declare-fun x2658 () Int)
(declare-fun x891 () Int)
(declare-fun x2989 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x206 () Int)
(declare-fun x82 () Int)
(declare-fun x477 () Int)
(declare-fun x439 () Int)
(declare-fun x2117 () Bool)
(declare-fun x2772 () Int)
(declare-fun x915 () Bool)
(declare-fun x403 () Int)
(declare-fun x2580 () Int)
(declare-fun x1545 () Int)
(declare-fun x2391 () Bool)
(declare-fun x2666 () Bool)
(declare-fun x3023 () Int)
(declare-fun x442 () Int)
(declare-fun x195 () Int)
(declare-fun x2370 () Int)
(declare-fun x2726 () Int)
(declare-fun x1842 () Bool)
(declare-fun x3055 () Int)
(declare-fun x2092 () Int)
(declare-fun x892 () Int)
(declare-fun x473 () Int)
(declare-fun x2379 () Int)
(declare-fun x540 () Int)
(declare-fun x2810 () Bool)
(declare-fun x632 () Int)
(declare-fun x857 () Int)
(declare-fun x406 () Int)
(declare-fun x122 () Int)
(declare-fun x2556 () Int)
(declare-fun x83 () Int)
(declare-fun x2575 () Int)
(declare-fun x61 () Int)
(declare-fun x2528 () Bool)
(declare-fun x1055 () Int)
(declare-fun x1922 () Int)
(declare-fun x1382 () Bool)
(declare-fun x2697 () Int)
(declare-fun x2345 () Int)
(declare-fun x1532 () Int)
(declare-fun x757 () Int)
(declare-fun x1193 () Int)
(declare-fun x1591 () Int)
(declare-fun x1474 () Int)
(declare-fun x236 () Bool)
(declare-fun x1281 () Int)
(declare-fun x2561 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x2449 () Int)
(declare-fun x40 () Int)
(declare-fun x13 () Int)
(declare-fun x33 () Bool)
(declare-fun x1574 () Int)
(declare-fun x2412 () Bool)
(declare-fun x2038 () Int)
(declare-fun x1974 () Int)
(declare-fun x1786 () Int)
(declare-fun x1861 () Int)
(declare-fun x1666 () Int)
(declare-fun x2462 () Int)
(declare-fun x2618 () Int)
(declare-fun x2377 () Int)
(declare-fun x1687 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x950 () Int)
(declare-fun x2012 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x961 () Int)
(declare-fun x1953 () Int)
(declare-fun x447 () Int)
(declare-fun x2644 () Bool)
(declare-fun x405 () Int)
(declare-fun x1201 () Bool)
(declare-fun x440 () Bool)
(declare-fun x2560 () Int)
(declare-fun x642 () Bool)
(declare-fun x1710 () Int)
(declare-fun x989 () Int)
(declare-fun x1276 () Int)
(declare-fun x100 () Int)
(declare-fun x88 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x480 () Bool)
(declare-fun x603 () Int)
(declare-fun x2252 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x2315 () Int)
(declare-fun x39 () Int)
(declare-fun x2151 () Int)
(declare-fun x1017 () Int)
(declare-fun x1606 () Int)
(declare-fun x1444 () Bool)
(declare-fun x2502 () Int)
(declare-fun x1057 () Int)
(declare-fun x231 () Int)
(declare-fun x2603 () Bool)
(declare-fun x963 () Int)
(declare-fun x1676 () Int)
(declare-fun x659 () Int)
(declare-fun x2166 () Bool)
(declare-fun x660 () Int)
(declare-fun x374 () Int)
(declare-fun x97 () Int)
(declare-fun x1352 () Int)
(declare-fun x583 () Bool)
(declare-fun x3016 (Int) Int)
(declare-fun x2555 () Int)
(declare-fun x1396 () Int)
(declare-fun x1628 () Int)
(declare-fun x1995 () Bool)
(declare-fun x1900 () Int)
(declare-fun x2414 () Bool)
(declare-fun x685 () Bool)
(declare-fun x1446 () Int)
(declare-fun x784 () Int)
(declare-fun x2689 () Int)
(declare-fun x68 () Int)
(declare-fun x132 () Bool)
(declare-fun x507 () Int)
(declare-fun x798 () Bool)
(declare-fun x448 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x588 () Bool)
(declare-fun x792 () Int)
(declare-fun x2101 () Int)
(declare-fun x2675 () Int)
(declare-fun x1929 () Int)
(declare-fun x2022 () Int)
(declare-fun x2060 () Bool)
(declare-fun x1302 () Int)
(declare-fun x971 () Bool)
(declare-fun x2266 () Int)
(declare-fun x2077 () Int)
(declare-fun x1963 () Int)
(declare-fun x449 () Int)
(declare-fun x2475 () Int)
(declare-fun x1143 () Int)
(declare-fun x1417 () Int)
(declare-fun x1378 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x425 () Bool)
(declare-fun x1979 () Int)
(declare-fun x1258 () Int)
(declare-fun x861 () Int)
(declare-fun x2762 () Bool)
(declare-fun x852 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x1238 () Int)
(declare-fun x995 () Int)
(declare-fun x1592 () Int)
(declare-fun x2214 () Int)
(declare-fun x227 () Int)
(declare-fun x951 () Int)
(declare-fun x2108 () Int)
(declare-fun x2827 () Int)
(declare-fun x1583 () Bool)
(declare-fun x2684 () Int)
(declare-fun x2085 () Int)
(declare-fun x1616 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x91 () Bool)
(declare-fun x1713 () Int)
(declare-fun x779 () Int)
(declare-fun x884 () Bool)
(declare-fun x519 () Int)
(declare-fun x1056 () Bool)
(declare-fun x266 () Bool)
(declare-fun x1226 () Int)
(declare-fun x1093 () Bool)
(declare-fun x2972 () Int)
(declare-fun x2013 () Bool)
(declare-fun x605 () Int)
(declare-fun x1823 () Int)
(declare-fun x225 () Bool)
(declare-fun x749 () Int)
(declare-fun x1536 () Int)
(declare-fun x2554 () Bool)
(declare-fun x569 () Int)
(declare-fun x1883 () Int)
(declare-fun x1701 () Bool)
(declare-fun x1207 () Int)
(declare-fun x1343 () Bool)
(declare-fun x2700 () Bool)
(declare-fun x2741 () Int)
(declare-fun x1209 () Bool)
(declare-fun x264 () Int)
(declare-fun x953 () Int)
(declare-fun x493 () Int)
(declare-fun x3060 () Bool)
(declare-fun x2146 () Int)
(declare-fun x2521 () Int)
(declare-fun x2296 () Bool)
(declare-fun x9 () Int)
(declare-fun x2500 () Int)
(declare-fun x1833 () Bool)
(declare-fun x1095 () Int)
(declare-fun x2744 () Bool)
(declare-fun x173 () Int)
(declare-fun x3006 () Int)
(declare-fun x2790 () Bool)
(declare-fun x2237 () Int)
(declare-fun x277 () Int)
(declare-fun x1992 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x700 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x312 () Int)
(declare-fun x1337 () Int)
(declare-fun x2178 () Int)
(declare-fun x2444 () Bool)
(declare-fun x1096 () Int)
(declare-fun x1971 () Bool)
(declare-fun x745 () Int)
(declare-fun x2629 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x833 () Bool)
(declare-fun x2530 () Int)
(declare-fun x170 () Bool)
(declare-fun x2804 () Int)
(declare-fun x2547 () Int)
(declare-fun x565 () Int)
(declare-fun x1283 () Int)
(declare-fun x2511 () Int)
(declare-fun x637 () Int)
(declare-fun x2996 () Int)
(declare-fun x1196 () Int)
(declare-fun x667 () Int)
(declare-fun x26 () Bool)
(declare-fun x2251 () Int)
(declare-fun x306 () Int)
(declare-fun x2322 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x138 () Bool)
(declare-fun x987 () Int)
(declare-fun x1988 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x671 () Int)
(declare-fun x2900 () Bool)
(declare-fun x1313 () Int)
(declare-fun x2344 () Bool)
(declare-fun x49 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x1678 () Int)
(declare-fun x2348 () Int)
(declare-fun x2844 () Bool)
(declare-fun x255 () Int)
(declare-fun x1153 () Int)
(declare-fun x332 () Int)
(declare-fun x2472 () Int)
(declare-fun x1469 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x1899 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1210 () Int)
(declare-fun x2301 () Int)
(declare-fun x2961 (Int Int) Int)
(declare-fun x2837 () Int)
(declare-fun x1330 () Bool)
(declare-fun x2597 () Int)
(declare-fun x695 () Int)
(declare-fun x2435 () Int)
(declare-fun x7 () Int)
(declare-fun x2368 () Int)
(declare-fun x2333 () Int)
(declare-fun x710 () Bool)
(declare-fun x841 () Bool)
(declare-fun x248 () Bool)
(declare-fun x2832 () Int)
(declare-fun x1784 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1300 (Int) Int)
(declare-fun x1053 () Int)
(declare-fun x180 () Int)
(declare-fun x2021 () Bool)
(declare-fun x1657 () Int)
(declare-fun x71 () Int)
(declare-fun x751 () Int)
(declare-fun x1236 () Bool)
(declare-fun x232 () Bool)
(declare-fun x2032 () Int)
(declare-fun x2332 () Bool)
(declare-fun x787 () Int)
(declare-fun x86 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x2104 () Int)
(declare-fun x3013 () Int)
(declare-fun x1851 () Int)
(declare-fun x421 () Int)
(declare-fun x1777 () Bool)
(declare-fun x43 () Bool)
(declare-fun x273 () Int)
(declare-fun x1839 () Int)
(declare-fun x2350 () Bool)
(declare-fun x1393 () Int)
(declare-fun x2090 () Int)
(define-fun x932 ((x30 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x30) (>= x30 0)) x30 (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2669 ((x30 Int)) Int (ite (and (< x30 0) (>= x30 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x30 115792089237316195423570985008687907853269984665640564039457584007913129639936) x30))
(define-fun x601 ((x30 Int)) Int (ite (and (>= x30 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x30)) x30 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x30) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x30)) (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x30 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x30 0)) (+ x30 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2367 x30 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2873 ((x2909 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2909) (<= 0 x2909)))
(define-fun x625 ((x2909 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2909) (>= x2909 0)))
(define-fun x1736 ((x2909 Int)) Bool (and (= x2909 (x1152 x2909 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1152 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2909) x2909)))
(define-fun x2272 ((x2909 Int)) Bool (and (= 0 (x1152 0 x2909)) (= 0 (x1152 x2909 0))))
(define-fun x1771 ((x2909 Int)) Bool (= x2909 (x1152 x2909 x2909)))
(define-fun x2886 ((x2909 Int)) Bool (and (x2272 x2909) (x1771 x2909) (x1736 x2909)))
(define-fun x2831 ((x2909 Int) (x437 Int)) Bool (= (x1152 x2909 x437) (x1152 x437 x2909)))
(define-fun x2071 ((x2909 Int) (x437 Int)) Bool (and (<= 0 (x1152 x2909 x437)) (=> (<= 0 x2909) (<= (x1152 x2909 x437) x2909)) (=> (<= 0 x437) (>= x437 (x1152 x2909 x437)))))
(define-fun x636 ((x2909 Int) (x437 Int)) Bool (and (x2831 x2909 x437) (x2071 x2909 x437)))
(define-fun x981 ((x2909 Int)) Bool (= (x1152 x2909 1461501637330902918203684832716283019655932542975) (x2367 x2909 1461501637330902918203684832716283019655932542976)))
(define-fun x169 ((x2909 Int)) Bool (and (x636 x2909 1461501637330902918203684832716283019655932542975) (x981 x2909)))
(define-fun x630 ((x2909 Int) (x437 Int)) Bool (and (> x437 (x2367 x2909 x437)) (>= (x2367 x2909 x437) 0)))
(define-fun x2930 ((x2909 Int) (x437 Int)) Bool (=> (and (< 0 x437) (<= 0 x2909)) (= (< x2909 x437) (= x2909 (x2367 x2909 x437)))))
(define-fun x2570 ((x2909 Int) (x437 Int)) Bool (=> (and (> x437 0) (and (> (+ x437 x437) x2909) (<= x437 x2909))) (= (x2367 x2909 x437) (- x2909 x437))))
(define-fun x319 ((x2909 Int) (x437 Int)) Bool (=> (> x437 0) (= x2909 (+ (* (x1120 x2909 x437) x437) (x2367 x2909 x437)))))
(define-fun x322 ((x2909 Int) (x437 Int)) Bool (and (x2930 x2909 x437) (x630 x2909 x437) (x319 x2909 x437) (x2570 x2909 x437)))
(define-fun x1506 ((x2909 Int)) Bool (= (x2367 0 x2909) 0))
(define-fun x483 ((x2909 Int)) Bool (= (x2367 x2909 1) 0))
(define-fun x1391 ((x2909 Int)) Bool (= (x2367 x2909 x2909) 0))
(define-fun x2720 ((x2909 Int)) Bool (and (x1391 x2909) (x483 x2909) (x1506 x2909)))
(define-fun x1103 ((x2909 Int)) Bool (= (x2367 x2909 2) (x1152 x2909 1)))
(define-fun x1692 ((x2909 Int)) Bool (and (x1103 x2909) (x636 x2909 1)))
(define-fun x79 ((x2909 Int)) Bool (= (x1152 x2909 340282366920938463463374607431768211455) (x2367 x2909 340282366920938463463374607431768211456)))
(define-fun x983 ((x2909 Int)) Bool (and (x79 x2909) (x636 x2909 340282366920938463463374607431768211455)))
(define-fun x944 ((x2909 Int)) Bool (= (x2367 x2909 4) (+ (x2367 x2909 2) (x1152 x2909 2))))
(define-fun x1430 ((x2909 Int)) Bool (and (x636 x2909 2) (x944 x2909)))
(define-fun x1884 ((x2909 Int) (x437 Int)) Bool (=> (and (> x2909 0) (< 0 x437)) (and (>= (x1120 x2909 x437) 0) (>= x2909 (x1120 x2909 x437)))))
(define-fun x2179 ((x2909 Int) (x437 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2909) (>= x2909 0)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x437) (>= x437 1))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1120 x2909 x437)) (<= 0 (x1120 x2909 x437)))))
(define-fun x1650 ((x2909 Int) (x437 Int)) Bool (=> (and (> x437 1) (> x2909 x437)) (> x2909 (x1120 x2909 x437))))
(define-fun x6 ((x2909 Int) (x437 Int)) Bool (=> (and (> x437 0) (> x2909 0)) (= (> x437 x2909) (= 0 (x1120 x2909 x437)))))
(define-fun x550 ((x2909 Int) (x437 Int)) Bool (=> (and (< 0 x2909) (> x437 0)) (and (<= (* x437 (x1120 x2909 x437)) x2909) (> (* x437 (x1120 x2909 x437)) (- x2909 x437)))))
(define-fun x307 ((x2909 Int) (x437 Int)) Bool (and (x1884 x2909 x437) (x550 x2909 x437) (x1650 x2909 x437) (x2179 x2909 x437) (x6 x2909 x437)))
(define-fun x1716 ((x2909 Int)) Bool (= (x1120 0 x2909) 0))
(define-fun x2861 ((x2909 Int)) Bool (= x2909 (x1120 x2909 1)))
(define-fun x294 ((x2909 Int)) Bool (=> (not (= x2909 0)) (= (x1120 x2909 x2909) 1)))
(define-fun x936 ((x2909 Int)) Bool (and (x294 x2909) (x1716 x2909) (x2861 x2909)))
(define-fun x163 ((x2909 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2961 x2909 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2961 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2909))))
(define-fun x2133 ((x2909 Int)) Bool (and (= (x2961 x2909 0) x2909) (= (x2961 0 x2909) x2909)))
(define-fun x1033 ((x2909 Int)) Bool (= (x2961 x2909 x2909) x2909))
(define-fun x635 ((x2909 Int)) Bool (and (x1033 x2909) (x2133 x2909) (x163 x2909)))
(define-fun x2823 ((x2909 Int) (x437 Int)) Bool (= (x2961 x2909 x437) (x2961 x437 x2909)))
(define-fun x252 ((x2909 Int) (x437 Int)) Bool (and (=> (>= x437 0) (>= (x2961 x2909 x437) x437)) (>= (+ x437 x2909) (x2961 x2909 x437)) (=> (<= 0 x2909) (<= x2909 (x2961 x2909 x437)))))
(define-fun x905 ((x2909 Int) (x437 Int)) Bool (and (x252 x2909 x437) (x2823 x2909 x437)))
(define-fun x1249 ((x2909 Int) (x437 Int)) Bool (= (x474 x2909 x437) (* x437 x2909)))
(define-fun x452 ((x2909 Int) (x437 Int)) Bool (and (= (x474 (- x2909 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* x2909 (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x474 (- x2909 115792089237316195423570985008687907853269984665640564039457584007913129639936) x437) (- (* x2909 x437) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x437))) (= (* x2909 (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x474 x2909 (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x116 ((x2909 Int) (x437 Int)) Bool (=> (and (< 0 x437) (< 0 x2909)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x474 x2909 x437)) (= (x1120 (x601 (x474 x2909 x437)) x2909) x437))))
(define-fun x1689 ((x2909 Int) (x437 Int)) Bool (=> (and (not (= x437 0)) (not (= x2909 0))) (and (= x2909 (x1120 (x474 x2909 x437) x437)) (= (x1120 (x474 x2909 x437) x2909) x437))))
(define-fun x1605 ((x2909 Int) (x437 Int)) Bool (=> (and (> x2909 0) (> x437 0)) (= (< (x1120 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2909) x437) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x474 x2909 x437)))))
(define-fun x1227 ((x2909 Int) (x437 Int)) Bool (and (= (x601 (x474 x2909 x437)) (x601 (x474 x2909 (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x601 (x474 x2909 x437)) (x601 (x474 (- x2909 115792089237316195423570985008687907853269984665640564039457584007913129639936) x437))) (= (x601 (x474 (- x2909 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x601 (x474 x2909 x437)))))
(define-fun x2727 ((x2909 Int) (x437 Int)) Bool (and (=> (and (and (<= x2909 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2909 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x437) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x437))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x437) (x1120 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2909)) (>= (x474 x2909 (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (<= x437 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x437 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2909) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2909))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2909) (x1120 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x437))) (<= (x474 (- x2909 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x437 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2909) (> x2909 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x437 0) (<= x437 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x474 (- x2909 115792089237316195423570985008687907853269984665640564039457584007913129639936) x437) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= (x1120 57896044618658097711785492504343953926634992332820282019728792003956564819968 x437) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2909)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2909) (< 0 x2909)) (and (< 0 x437) (<= x437 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= x2909 (x1120 57896044618658097711785492504343953926634992332820282019728792003956564819967 x437)) (<= (x474 x2909 x437) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))
(define-fun x2747 ((x2909 Int) (x437 Int)) Bool (and (x1605 x2909 x437) (x1689 x2909 x437) (x452 x2909 x437) (x2727 x2909 x437) (x116 x2909 x437) (x1249 x2909 x437) (x1227 x2909 x437)))
(define-fun x2686 ((x2909 Int)) Bool (and (= (x474 x2909 0) 0) (= (x474 0 x2909) 0)))
(define-fun x1150 ((x2909 Int)) Bool (and (= x2909 (x474 x2909 1)) (= x2909 (x474 1 x2909))))
(define-fun x1620 ((x2909 Int)) Bool (and (x1150 x2909) (x2686 x2909)))
(define-fun x1509 ((x1348 Int)) Int 0)
(define-fun x2516 ((x1348 Int)) Int 0)
(define-fun x1293 ((x1348 Int)) Int 0)
(define-fun x1569 ((x1348 Int)) Int 0)
(define-fun x2811 ((x1348 Int)) Int 0)
(define-fun x982 ((x1348 Int)) Int 0)
(define-fun x1347 ((x1348 Int)) Int 0)
(define-fun x1045 ((x1348 Int)) Int 0)
(define-fun x2128 ((x1348 Int)) Int 0)
(define-fun x1075 ((x1348 Int)) Int 0)
(define-fun x1745 ((x1348 Int)) Int 0)
(define-fun x2759 ((x1348 Int)) Int 0)
(define-fun x1665 ((x1348 Int)) Int 0)
(define-fun x677 ((x1348 Int)) Int 0)
(define-fun x2602 ((x1348 Int)) Int 0)
(define-fun x1298 ((x1348 Int)) Int 0)
(define-fun x593 ((x1348 Int)) Int 0)
(define-fun x36 ((x1348 Int)) Int 0)
(define-fun x1985 ((x1348 Int)) Int 0)
(define-fun x702 ((x1348 Int)) Int 0)
(define-fun x1415 ((x1348 Int)) Int 0)
(define-fun x1826 ((x1348 Int)) Int 0)
(define-fun x1782 ((x1348 Int)) Int 0)
(define-fun x1429 ((x1348 Int)) Int 0)
(define-fun x1111 ((x1348 Int)) Int 0)
(define-fun x1452 ((x1348 Int)) Int 0)
(define-fun x1248 ((x1348 Int)) Int 0)
(define-fun x1630 ((x1348 Int)) Int 0)
(define-fun x1825 ((x1348 Int)) Int 0)
(define-fun x38 ((x1348 Int)) Int 0)
(define-fun x2199 ((x1348 Int)) Int 0)
(define-fun x2080 ((x1348 Int)) Int 0)
(define-fun x903 ((x1348 Int)) Int 0)
(define-fun x2261 ((x1348 Int)) Int 0)
(define-fun x2974 ((x1348 Int)) Int 0)
(define-fun x956 ((x1348 Int)) Int 0)
(define-fun x1684 ((x1348 Int)) Int 0)
(define-fun x572 ((x1348 Int)) Int 0)
(define-fun x1836 ((x1348 Int)) Int 0)
(define-fun x2800 ((x1348 Int)) Int 0)
(define-fun x2814 ((x1348 Int)) Int 0)
(define-fun x2519 ((x1348 Int)) Int 0)
(define-fun x1841 ((x1348 Int)) Int 0)
(define-fun x2206 ((x1348 Int)) Int 0)
(define-fun x1808 ((x1348 Int)) Int 0)
(define-fun x654 ((x1348 Int)) Int 0)
(define-fun x2901 ((x1348 Int)) Int 0)
(define-fun x3058 ((x1348 Int)) Int 0)
(define-fun x872 ((x1348 Int)) Int 0)
(define-fun x1593 ((x1348 Int)) Int 0)
(define-fun x561 ((x1348 Int)) Int 0)
(define-fun x1269 ((x1348 Int)) Int 0)
(define-fun x2087 ((x1348 Int)) Int 0)
(define-fun x2609 ((x1348 Int)) Int 0)
(define-fun x2691 ((x1348 Int)) Int 0)
(define-fun x1390 ((x1348 Int)) Int 0)
(define-fun x2257 ((x1348 Int)) Int 0)
(define-fun x1911 ((x1348 Int)) Int 0)
(define-fun x2356 ((x1348 Int)) Int 0)
(define-fun x2799 ((x1348 Int)) Int 0)
(define-fun x1604 ((x1348 Int)) Int 0)
(define-fun x2243 ((x1348 Int)) Int 0)
(define-fun x1584 ((x1348 Int)) Int 0)
(define-fun x1365 ((x1348 Int)) Int 0)
(define-fun x1004 ((x1348 Int)) Int 0)
(define-fun x2845 ((x1348 Int)) Int 0)
(define-fun x531 ((x1348 Int)) Int 0)
(define-fun x595 ((x1348 Int)) Int 0)
(define-fun x2399 ((x1348 Int)) Int 0)
(define-fun x960 ((x1348 Int)) Int 0)
(define-fun x2708 ((x1348 Int)) Int 0)
(define-fun x333 ((x1348 Int)) Int 0)
(define-fun x2588 ((x1348 Int)) Int 0)
(define-fun x2746 ((x1348 Int)) Int 0)
(define-fun x1211 ((x1348 Int)) Int 0)
(define-fun x752 ((x1348 Int)) Int 0)
(define-fun x2299 ((x1348 Int)) Int 0)
(define-fun x591 ((x1348 Int)) Int 0)
(define-fun x424 ((x1348 Int)) Int 0)
(define-fun x2000 ((x1348 Int)) Int 0)
(define-fun x2513 ((x1348 Int)) Int 0)
(define-fun x2425 ((x1348 Int)) Int 0)
(define-fun x994 ((x1348 Int)) Int 0)
(define-fun x2701 ((x1348 Int)) Int 0)
(define-fun x649 ((x1348 Int)) Int 0)
(define-fun x2347 ((x1348 Int)) Int 0)
(define-fun x2227 ((x1348 Int)) Int 0)
(define-fun x1969 ((x1348 Int)) Int 0)
(define-fun x1176 ((x1348 Int)) Int 0)
(define-fun x467 ((x1348 Int)) Int 0)
(define-fun x205 ((x1348 Int)) Int 0)
(define-fun x1288 ((x1348 Int)) Int 0)
(define-fun x1729 ((x1348 Int)) Int 0)
(define-fun x198 ((x1348 Int)) Int 0)
(define-fun x2982 ((x1348 Int)) Int 0)
(define-fun x1829 ((x1348 Int)) Int 0)
(define-fun x704 ((x1348 Int)) Int 0)
(define-fun x869 ((x1348 Int)) Int 0)
(define-fun x3011 ((x1348 Int)) Int 0)
(define-fun x1117 ((x1348 Int)) Int 0)
(define-fun x414 ((x1348 Int)) Int 0)
(define-fun x1499 ((x1348 Int)) Int 0)
(define-fun x1255 ((x1348 Int)) Int 0)
(define-fun x1910 ((x1348 Int)) Int 0)
(define-fun x2395 ((x1348 Int)) Int 0)
(define-fun x821 ((x1348 Int)) Int 0)
(define-fun x777 ((x1348 Int)) Int 0)
(define-fun x2231 ((x1348 Int)) Int 0)
(define-fun x1858 ((x1348 Int)) Int 0)
(define-fun x367 ((x1348 Int)) Int 0)
(define-fun x1812 ((x1348 Int)) Int 0)
(define-fun x2440 ((x1348 Int)) Int 0)
(define-fun x1023 ((x1348 Int)) Int 0)
(define-fun x596 ((x1348 Int)) Int 0)
(define-fun x1931 ((x1348 Int)) Int 0)
(define-fun x140 ((x1348 Int)) Int 0)
(define-fun x1733 ((x1348 Int)) Int 0)
(define-fun x328 ((x1348 Int)) Int 0)
(define-fun x600 ((x1348 Int)) Int 0)
(define-fun x290 ((x1348 Int)) Int 0)
(define-fun x2853 ((x1348 Int)) Int 0)
(define-fun x118 ((x1348 Int)) Int 0)
(define-fun x968 ((x1348 Int)) Int 0)
(define-fun x105 ((x1348 Int)) Int 0)
(define-fun x2192 ((x1348 Int)) Int 0)
(define-fun x1734 ((x1348 Int)) Int 0)
(define-fun x2468 ((x1348 Int)) Int 0)
(define-fun x1640 ((x1348 Int)) Int 0)
(define-fun x1935 ((x1348 Int)) Int 0)
(define-fun x2107 ((x1348 Int)) Int 0)
(define-fun x582 ((x1348 Int)) Int 0)
(define-fun x763 ((x1348 Int)) Int 0)
(define-fun x2973 ((x1348 Int)) Int 0)
(define-fun x2883 ((x1348 Int)) Int 0)
(define-fun x165 ((x1348 Int)) Int 0)
(define-fun x2411 ((x1348 Int)) Int 0)
(define-fun x692 ((x1348 Int)) Int 0)
(define-fun x653 ((x1348 Int)) Int 0)
(define-fun x1420 ((x1348 Int)) Int 0)
(define-fun x1372 ((x1348 Int)) Int 0)
(define-fun x1341 ((x1348 Int)) Int 0)
(define-fun x241 ((x1348 Int)) Int 0)
(define-fun x2047 ((x1348 Int)) Int 0)
(define-fun x701 ((x1348 Int)) Int 0)
(define-fun x2006 ((x1348 Int)) Int 0)
(define-fun x2667 ((x1348 Int)) Int 0)
(define-fun x2978 ((x1348 Int)) Int 0)
(define-fun x1564 ((x1348 Int)) Int 0)
(define-fun x2793 ((x1348 Int)) Int 0)
(define-fun x886 ((x1348 Int)) Int 0)
(define-fun x2188 ((x1348 Int)) Int 0)
(define-fun x1991 ((x1348 Int)) Int 0)
(define-fun x1521 ((x1348 Int)) Int 0)
(define-fun x1034 ((x1348 Int)) Int 0)
(define-fun x2255 ((x1348 Int)) Int 0)
(define-fun x2340 ((x1348 Int)) Int 0)
(define-fun x740 ((x1348 Int)) Int 0)
(define-fun x1158 ((x1348 Int)) Int 0)
(define-fun x1381 ((x1348 Int)) Int 0)
(define-fun x2598 ((x1348 Int)) Int 0)
(define-fun x1794 ((x1348 Int)) Int 0)
(define-fun x2097 ((x1348 Int)) Int 0)
(define-fun x354 ((x1348 Int)) Int 0)
(define-fun x2821 ((x1348 Int)) Int 0)
(define-fun x1016 ((x1348 Int)) Int 0)
(define-fun x2806 ((x1348 Int)) Int 0)
(define-fun x1414 ((x1348 Int)) Int 0)
(define-fun x2009 ((x1348 Int)) Int 0)
(define-fun x2194 ((x1348 Int)) Int 0)
(define-fun x3051 ((x1348 Int)) Int 0)
(define-fun x2920 ((x1348 Int)) Int 0)
(define-fun x2620 ((x1348 Int)) Int 0)
(define-fun x2376 ((x1348 Int)) Int 0)
(define-fun x967 ((x1348 Int)) Int 0)
(define-fun x1149 ((x1348 Int)) Int 0)
(define-fun x10 ((x1348 Int)) Int 0)
(define-fun x2803 ((x1348 Int)) Int 0)
(define-fun x343 ((x1348 Int)) Int 0)
(define-fun x2109 ((x1348 Int)) Int 0)
(define-fun x2855 ((x1348 Int)) Int 0)
(define-fun x1451 ((x1348 Int)) Int 0)
(define-fun x1265 ((x1348 Int)) Int 0)
(define-fun x1492 ((x1348 Int)) Int 0)
(define-fun x2442 ((x1348 Int)) Int 0)
(define-fun x1085 ((x1348 Int)) Int (ite (= x1348 4) x1821 (x2442 x1348)))
(define-fun x1936 ((x1348 Int)) Int (ite (= x1348 36) x2640 (x1085 x1348)))
(define-fun x1069 ((x1348 Int)) Int 0)
(define-fun x215 ((x1348 Int)) Int (ite (= 4 x1348) x2349 (x1069 x1348)))
(define-fun x182 ((x1348 Int)) Int (ite (= x1348 128) 3 (x1509 x1348)))
(define-fun x2230 ((x1348 Int)) Int (ite (and (>= x1348 160) (> 256 x1348)) (x215 (- x1348 124)) (x343 x1348)))
(define-fun x378 ((x1348 Int)) Int (ite (= x1348 160) 729466174051048026939049150500379070045048658665 (x2230 x1348)))
(define-fun x2460 ((x1348 Int)) Int (ite (= x1348 192) 443215666480553238610125355434898879895743000821 (x378 x1348)))
(define-fun x1568 ((x1348 Int)) Int (ite (= 224 x1348) 953417218992365150631206543442508943947348309705 (x2460 x1348)))
(define-fun x2590 ((x1348 Int)) Int (ite (= x1348 256) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x2806 x1348)))
(define-fun x1208 ((x1348 Int)) Int (ite (= 260 x1348) x2612 (x2590 x1348)))
(define-fun x1173 ((x1348 Int)) Int (ite (= 292 x1348) 0 (x1208 x1348)))
(define-fun x2776 ((x1348 Int)) Int (ite (= x1348 192) 2 (x1075 x1348)))
(define-fun x393 ((x1348 Int)) Int (ite (= x1348 192) 1 (x1075 x1348)))
(define-fun x1307 ((x1348 Int)) Int (ite x17 (ite x2155 (x2776 x1348) (x393 x1348)) (x1826 x1348)))
(define-fun x2693 ((x1348 Int)) Int (ite (= 192 x1348) 2 (x1745 x1348)))
(define-fun x1135 ((x1348 Int)) Int (ite (= x1348 192) 1 (x1745 x1348)))
(define-fun x1332 ((x1348 Int)) Int (ite x1990 (ite x2790 (x2693 x1348) (x1135 x1348)) (x1782 x1348)))
(define-fun x916 ((x1348 Int)) Int (ite (= 192 x1348) 2 (x2759 x1348)))
(define-fun x2673 ((x1348 Int)) Int (ite (= 192 x1348) 1 (x2759 x1348)))
(define-fun x2010 ((x1348 Int)) Int (ite x2012 (ite x454 (x916 x1348) (x2673 x1348)) (x1429 x1348)))
(define-fun x759 ((x1348 Int)) Int 0)
(define-fun x129 ((x1348 Int)) Int (ite (= 4 x1348) x2940 (x759 x1348)))
(define-fun x369 ((x1348 Int)) Int (ite (= 36 x1348) x1424 (x129 x1348)))
(define-fun x2365 ((x1348 Int)) Int 0)
(define-fun x675 ((x1348 Int)) Int (ite (= x1348 4) x773 (x2365 x1348)))
(define-fun x280 ((x1348 Int)) Int (ite (= x1348 36) x2068 (x675 x1348)))
(define-fun x2872 ((x1348 Int)) Int (ite (and (<= 224 x1348) (> 288 x1348)) (x1936 (- x1348 156)) (x1347 x1348)))
(define-fun x1410 ((x1348 Int)) Int (ite (= 224 x1348) 52 (x2872 x1348)))
(define-fun x1504 ((x1348 Int)) Int (ite (= x1348 256) 64 (x1410 x1348)))
(define-fun x2655 ((x1348 Int)) Int (ite (and (< x1348 256) (<= 224 x1348)) (x1936 (- x1348 156)) (x1347 x1348)))
(define-fun x1792 ((x1348 Int)) Int (ite (= x1348 224) 0 (x2655 x1348)))
(define-fun x1303 ((x1348 Int)) Int (ite (and (> 288 x1348) (<= 224 x1348)) (x369 (- x1348 156)) (x1045 x1348)))
(define-fun x2062 ((x1348 Int)) Int (ite (= x1348 224) 52 (x1303 x1348)))
(define-fun x853 ((x1348 Int)) Int (ite (= x1348 256) 64 (x2062 x1348)))
(define-fun x2366 ((x1348 Int)) Int (ite (and (<= 224 x1348) (> 256 x1348)) (x369 (- x1348 156)) (x1045 x1348)))
(define-fun x2482 ((x1348 Int)) Int (ite (= 224 x1348) 0 (x2366 x1348)))
(define-fun x172 ((x1348 Int)) Int (ite (and (> 288 x1348) (>= x1348 224)) (x280 (- x1348 156)) (x2128 x1348)))
(define-fun x1375 ((x1348 Int)) Int (ite (= 224 x1348) 52 (x172 x1348)))
(define-fun x1958 ((x1348 Int)) Int (ite (= x1348 256) 64 (x1375 x1348)))
(define-fun x2868 ((x1348 Int)) Int (ite (and (< x1348 256) (<= 224 x1348)) (x280 (- x1348 156)) (x2128 x1348)))
(define-fun x2924 ((x1348 Int)) Int (ite (= x1348 224) 0 (x2868 x1348)))
(define-fun x2594 ((x1348 Int)) Int (ite x17 (ite x2155 (x1504 x1348) (x1792 x1348)) (x1111 x1348)))
(define-fun x615 ((x1348 Int)) Int (ite x1990 (ite x2790 (x853 x1348) (x2482 x1348)) (x1452 x1348)))
(define-fun x286 ((x1348 Int)) Int (ite x2012 (ite x454 (x1958 x1348) (x2924 x1348)) (x1248 x1348)))
(define-fun x656 ((x1348 Int)) Int 0)
(define-fun x1088 ((x1348 Int)) Int (ite (= x1348 4) x1463 (x656 x1348)))
(define-fun x3036 ((x1348 Int)) Int (ite (= 128 x1348) 3 (x2620 x1348)))
(define-fun x1125 ((x1348 Int)) Int (ite (and (<= 160 x1348) (> 256 x1348)) (x1088 (- x1348 124)) (x2598 x1348)))
(define-fun x2764 ((x1348 Int)) Int (ite (= 160 x1348) 729466174051048026939049150500379070045048658665 (x1125 x1348)))
(define-fun x856 ((x1348 Int)) Int (ite (= x1348 192) 443215666480553238610125355434898879895743000821 (x2764 x1348)))
(define-fun x1927 ((x1348 Int)) Int (ite (= 224 x1348) 953417218992365150631206543442508943947348309705 (x856 x1348)))
(define-fun x1955 ((x1348 Int)) Int (ite (= x1348 256) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x1034 x1348)))
(define-fun x373 ((x1348 Int)) Int (ite (= 260 x1348) x1797 (x1955 x1348)))
(define-fun x2711 ((x1348 Int)) Int (ite (= 292 x1348) 1 (x373 x1348)))
(define-fun x912 ((x1348 Int)) Int 0)
(define-fun x323 ((x1348 Int)) Int (ite (= x1348 4) x918 (x912 x1348)))
(define-fun x1707 ((x1348 Int)) Int (ite (= 128 x1348) 3 (x2516 x1348)))
(define-fun x2683 ((x1348 Int)) Int (ite (and (> 256 x1348) (>= x1348 160)) (x323 (- x1348 124)) (x2109 x1348)))
(define-fun x2908 ((x1348 Int)) Int (ite (= 160 x1348) 729466174051048026939049150500379070045048658665 (x2683 x1348)))
(define-fun x1339 ((x1348 Int)) Int (ite (= 192 x1348) 443215666480553238610125355434898879895743000821 (x2908 x1348)))
(define-fun x292 ((x1348 Int)) Int (ite (= x1348 224) 953417218992365150631206543442508943947348309705 (x1339 x1348)))
(define-fun x571 ((x1348 Int)) Int (ite (= 256 x1348) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x1414 x1348)))
(define-fun x573 ((x1348 Int)) Int (ite (= 260 x1348) x1624 (x571 x1348)))
(define-fun x2053 ((x1348 Int)) Int (ite (= 292 x1348) 0 (x573 x1348)))
(define-fun x774 ((x1348 Int)) Int 0)
(define-fun x121 ((x1348 Int)) Int (ite (= x1348 4) x137 (x774 x1348)))
(define-fun x1037 ((x1348 Int)) Int (ite (= 128 x1348) 3 (x2376 x1348)))
(define-fun x2211 ((x1348 Int)) Int (ite (and (>= x1348 160) (> 256 x1348)) (x121 (- x1348 124)) (x1794 x1348)))
(define-fun x817 ((x1348 Int)) Int (ite (= 160 x1348) 729466174051048026939049150500379070045048658665 (x2211 x1348)))
(define-fun x103 ((x1348 Int)) Int (ite (= 192 x1348) 443215666480553238610125355434898879895743000821 (x817 x1348)))
(define-fun x966 ((x1348 Int)) Int (ite (= x1348 224) 953417218992365150631206543442508943947348309705 (x103 x1348)))
(define-fun x139 ((x1348 Int)) Int (ite (= 256 x1348) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x2255 x1348)))
(define-fun x389 ((x1348 Int)) Int (ite (= 260 x1348) x94 (x139 x1348)))
(define-fun x1447 ((x1348 Int)) Int (ite (= x1348 292) 1 (x389 x1348)))
(define-fun x1099 ((x1348 Int)) Int 0)
(define-fun x851 ((x1348 Int)) Int 0)
(define-fun x1425 ((x1348 Int)) Int (ite (= 4 x1348) x530 (x851 x1348)))
(define-fun x2216 ((x1348 Int)) Int (ite (= x1348 128) 3 (x967 x1348)))
(define-fun x611 ((x1348 Int)) Int (ite (and (<= 160 x1348) (< x1348 256)) (x1425 (- x1348 124)) (x2097 x1348)))
(define-fun x2428 ((x1348 Int)) Int (ite (= x1348 160) 729466174051048026939049150500379070045048658665 (x611 x1348)))
(define-fun x2467 ((x1348 Int)) Int (ite (= x1348 192) 443215666480553238610125355434898879895743000821 (x2428 x1348)))
(define-fun x1622 ((x1348 Int)) Int (ite (= 224 x1348) 953417218992365150631206543442508943947348309705 (x2467 x1348)))
(define-fun x2325 ((x1348 Int)) Int (ite (= 256 x1348) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x2340 x1348)))
(define-fun x1855 ((x1348 Int)) Int (ite (= x1348 260) x1965 (x2325 x1348)))
(define-fun x890 ((x1348 Int)) Int (ite (= x1348 292) 1 (x1855 x1348)))
(define-fun x2023 ((x1348 Int)) Int 0)
(define-fun x860 ((x1348 Int)) Int (ite (= x815 x1348) x1740 (x251 x1348)))
(define-fun x2275 ((x1348 Int)) Int 0)
(define-fun x901 ((x1348 Int)) Int (ite (= 4 x1348) x399 (x2275 x1348)))
(define-fun x93 ((x1348 Int)) Int (ite (= 128 x1348) 3 (x1149 x1348)))
(define-fun x2717 ((x1348 Int)) Int (ite (and (>= x1348 160) (< x1348 256)) (x901 (- x1348 124)) (x354 x1348)))
(define-fun x1744 ((x1348 Int)) Int (ite (= x1348 160) 729466174051048026939049150500379070045048658665 (x2717 x1348)))
(define-fun x1491 ((x1348 Int)) Int (ite (= x1348 192) 443215666480553238610125355434898879895743000821 (x1744 x1348)))
(define-fun x1976 ((x1348 Int)) Int (ite (= x1348 224) 953417218992365150631206543442508943947348309705 (x1491 x1348)))
(define-fun x1903 ((x1348 Int)) Int (ite (= x1348 256) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x740 x1348)))
(define-fun x2541 ((x1348 Int)) Int (ite (= 260 x1348) x2622 (x1903 x1348)))
(define-fun x3015 ((x1348 Int)) Int (ite (= x1348 292) 1 (x2541 x1348)))
(define-fun x1909 ((x1348 Int)) Int (ite (= x1348 x797) x416 (x2415 x1348)))
(define-fun x2757 ((x1348 Int)) Int (ite x1834 (x2415 x1348) (ite x1355 (x2415 x1348) (ite x299 (x2415 x1348) (x1909 x1348)))))
(define-fun x2975 ((x1348 Int)) Int (ite (= x695 x1348) x1090 (x2757 x1348)))
(define-fun x2895 ((x1348 Int)) Int (ite x281 (x2757 x1348) (ite x1421 (x2757 x1348) (ite x222 (x2757 x1348) (x2975 x1348)))))
(define-fun x2095 ((x1348 Int)) Int (ite (= x1256 x1348) x592 (x2895 x1348)))
(define-fun x2016 ((x1348 Int)) Int (ite x443 (ite x1944 (x2895 x1348) (x2095 x1348)) (x2415 x1348)))
(define-fun x911 ((x1348 Int)) Int (ite (= x797 x1348) x2362 (x1737 x1348)))
(define-fun x1097 ((x1348 Int)) Int (ite (= x797 x1348) x2503 (x911 x1348)))
(define-fun x2143 ((x1348 Int)) Int (ite x1834 (x1737 x1348) (ite x1355 (x1737 x1348) (ite x299 (x1737 x1348) (x1097 x1348)))))
(define-fun x2792 ((x1348 Int)) Int (ite (= x1348 x695) x1114 (x2143 x1348)))
(define-fun x1700 ((x1348 Int)) Int (ite (= x1348 x695) x2947 (x2792 x1348)))
(define-fun x1934 ((x1348 Int)) Int (ite x281 (x2143 x1348) (ite x1421 (x2143 x1348) (ite x222 (x2143 x1348) (x1700 x1348)))))
(define-fun x534 ((x1348 Int)) Int (ite (= x1256 x1348) x270 (x1934 x1348)))
(define-fun x2076 ((x1348 Int)) Int (ite (= x1348 x1256) x683 (x534 x1348)))
(define-fun x976 ((x1348 Int)) Int (ite x443 (ite x1944 (x1934 x1348) (x2076 x1348)) (x1737 x1348)))
(define-fun x190 ((x1348 Int)) Int (ite (= x797 x1348) x162 (x492 x1348)))
(define-fun x1738 ((x1348 Int)) Int (ite (= x797 x1348) x217 (x190 x1348)))
(define-fun x2157 ((x1348 Int)) Int (ite x1834 (x492 x1348) (ite x1355 (x492 x1348) (ite x299 (x492 x1348) (x1738 x1348)))))
(define-fun x606 ((x1348 Int)) Int (ite (= x695 x1348) x955 (x2157 x1348)))
(define-fun x2871 ((x1348 Int)) Int (ite (= x695 x1348) x404 (x606 x1348)))
(define-fun x218 ((x1348 Int)) Int (ite x281 (x2157 x1348) (ite x1421 (x2157 x1348) (ite x222 (x2157 x1348) (x2871 x1348)))))
(define-fun x959 ((x1348 Int)) Int (ite (= x1256 x1348) x2641 (x218 x1348)))
(define-fun x991 ((x1348 Int)) Int (ite (= x1256 x1348) x242 (x959 x1348)))
(define-fun x2599 ((x1348 Int)) Int (ite x443 (ite x1944 (x218 x1348) (x991 x1348)) (x492 x1348)))
(define-fun x276 ((x1348 Int)) Int (ite (= x1348 x797) x156 (x2965 x1348)))
(define-fun x620 ((x1348 Int)) Int (ite x1834 (x2965 x1348) (ite x1355 (x2965 x1348) (ite x299 (x2965 x1348) (x276 x1348)))))
(define-fun x919 ((x1348 Int)) Int (ite (= x695 x1348) x733 (x620 x1348)))
(define-fun x2246 ((x1348 Int)) Int (ite x281 (x620 x1348) (ite x1421 (x620 x1348) (ite x222 (x620 x1348) (x919 x1348)))))
(define-fun x1029 ((x1348 Int)) Int (ite (= x1256 x1348) x174 (x2246 x1348)))
(define-fun x826 ((x1348 Int)) Int (ite x443 (ite x1944 (x2246 x1348) (x1029 x1348)) (x2965 x1348)))
(define-fun x1869 ((x1348 Int)) Int 0)
(define-fun x1904 ((x1348 Int)) Int (ite (= 4 x1348) x2977 (x1869 x1348)))
(define-fun x496 ((x1348 Int)) Int (ite (= x1348 128) 3 (x2811 x1348)))
(define-fun x401 ((x1348 Int)) Int (ite (and (>= x1348 160) (> 256 x1348)) (x1904 (- x1348 124)) (x1265 x1348)))
(define-fun x1079 ((x1348 Int)) Int (ite (= x1348 160) 729466174051048026939049150500379070045048658665 (x401 x1348)))
(define-fun x2285 ((x1348 Int)) Int (ite (= 192 x1348) 443215666480553238610125355434898879895743000821 (x1079 x1348)))
(define-fun x2579 ((x1348 Int)) Int (ite (= x1348 224) 953417218992365150631206543442508943947348309705 (x2285 x1348)))
(define-fun x1024 ((x1348 Int)) Int (ite (= 256 x1348) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x3051 x1348)))
(define-fun x621 ((x1348 Int)) Int (ite (= x1348 260) x1559 (x1024 x1348)))
(define-fun x548 ((x1348 Int)) Int (ite (= 292 x1348) 0 (x621 x1348)))
(define-fun x2981 ((x1348 Int)) Int 0)
(define-fun x1711 ((x1348 Int)) Int (ite (= 4 x1348) x1058 (x2981 x1348)))
(define-fun x958 ((x1348 Int)) Int (ite (= x1348 128) 3 (x10 x1348)))
(define-fun x2334 ((x1348 Int)) Int (ite (and (<= 160 x1348) (> 256 x1348)) (x1711 (- x1348 124)) (x2821 x1348)))
(define-fun x674 ((x1348 Int)) Int (ite (= 160 x1348) 729466174051048026939049150500379070045048658665 (x2334 x1348)))
(define-fun x1741 ((x1348 Int)) Int (ite (= x1348 192) 443215666480553238610125355434898879895743000821 (x674 x1348)))
(define-fun x127 ((x1348 Int)) Int (ite (= 224 x1348) 953417218992365150631206543442508943947348309705 (x1741 x1348)))
(define-fun x3050 ((x1348 Int)) Int (ite (= x1348 256) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x1158 x1348)))
(define-fun x509 ((x1348 Int)) Int (ite (= 260 x1348) x2917 (x3050 x1348)))
(define-fun x2327 ((x1348 Int)) Int (ite (= 292 x1348) 1 (x509 x1348)))
(define-fun x2738 ((x1348 Int)) Int 0)
(define-fun x2963 ((x1348 Int)) Int (ite (= 4 x1348) x25 (x2738 x1348)))
(define-fun x2336 ((x1348 Int)) Int (ite (= x1348 128) 3 (x982 x1348)))
(define-fun x1371 ((x1348 Int)) Int (ite (and (>= x1348 160) (< x1348 256)) (x2963 (- x1348 124)) (x1492 x1348)))
(define-fun x2779 ((x1348 Int)) Int (ite (= x1348 160) 729466174051048026939049150500379070045048658665 (x1371 x1348)))
(define-fun x887 ((x1348 Int)) Int (ite (= x1348 192) 443215666480553238610125355434898879895743000821 (x2779 x1348)))
(define-fun x502 ((x1348 Int)) Int (ite (= x1348 224) 953417218992365150631206543442508943947348309705 (x887 x1348)))
(define-fun x2660 ((x1348 Int)) Int (ite (= x1348 256) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x2920 x1348)))
(define-fun x418 ((x1348 Int)) Int (ite (= 260 x1348) x1649 (x2660 x1348)))
(define-fun x2685 ((x1348 Int)) Int (ite (= x1348 292) 0 (x418 x1348)))
(define-fun x1863 ((x1348 Int)) Int 0)
(define-fun x2287 ((x1348 Int)) Int (ite (= x1348 4) x2281 (x1863 x1348)))
(define-fun x2127 ((x1348 Int)) Int (ite (= 128 x1348) 3 (x2803 x1348)))
(define-fun x1814 ((x1348 Int)) Int (ite (and (>= x1348 160) (> 256 x1348)) (x2287 (- x1348 124)) (x1016 x1348)))
(define-fun x789 ((x1348 Int)) Int (ite (= 160 x1348) 729466174051048026939049150500379070045048658665 (x1814 x1348)))
(define-fun x512 ((x1348 Int)) Int (ite (= x1348 192) 443215666480553238610125355434898879895743000821 (x789 x1348)))
(define-fun x3048 ((x1348 Int)) Int (ite (= x1348 224) 953417218992365150631206543442508943947348309705 (x512 x1348)))
(define-fun x1304 ((x1348 Int)) Int (ite (= 256 x1348) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x1381 x1348)))
(define-fun x2985 ((x1348 Int)) Int (ite (= 260 x1348) x1533 (x1304 x1348)))
(define-fun x594 ((x1348 Int)) Int (ite (= x1348 292) 1 (x2985 x1348)))
(define-fun x1464 ((x1348 Int)) Int 0)
(define-fun x2569 ((x1348 Int)) Int (ite (= x1348 4) x167 (x1464 x1348)))
(define-fun x408 ((x1348 Int)) Int (ite (= 128 x1348) 3 (x1293 x1348)))
(define-fun x428 ((x1348 Int)) Int (ite (and (> 256 x1348) (<= 160 x1348)) (x2569 (- x1348 124)) (x2855 x1348)))
(define-fun x1902 ((x1348 Int)) Int (ite (= x1348 160) 729466174051048026939049150500379070045048658665 (x428 x1348)))
(define-fun x2969 ((x1348 Int)) Int (ite (= 192 x1348) 443215666480553238610125355434898879895743000821 (x1902 x1348)))
(define-fun x2019 ((x1348 Int)) Int (ite (= x1348 224) 953417218992365150631206543442508943947348309705 (x2969 x1348)))
(define-fun x98 ((x1348 Int)) Int (ite (= x1348 256) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x2009 x1348)))
(define-fun x2314 ((x1348 Int)) Int (ite (= x1348 260) x2849 (x98 x1348)))
(define-fun x1560 ((x1348 Int)) Int (ite (= x1348 292) 0 (x2314 x1348)))
(define-fun x484 ((x1348 Int)) Int (ite (= x1348 x542) x2527 (x2870 x1348)))
(define-fun x2944 ((x1348 Int)) Int (ite (= x1348 x2304) x2527 (x3016 x1348)))
(define-fun x552 ((x1348 Int)) Int (ite x1944 (x218 x1348) (x991 x1348)))
(define-fun x2710 ((x1348 Int)) Int (ite x1944 (x2895 x1348) (x2095 x1348)))
(define-fun x1412 ((x1348 Int)) Int (ite x1944 (x2246 x1348) (x1029 x1348)))
(define-fun x1254 ((x1348 Int)) Int (ite x1944 (x1934 x1348) (x2076 x1348)))
(define-fun x75 ((x1348 Int)) Int 0)
(define-fun x2001 ((x1348 Int)) Int (ite (= x1348 4) x1508 (x75 x1348)))
(define-fun x2034 ((x1348 Int)) Int (ite (= x1348 128) 3 (x1569 x1348)))
(define-fun x2623 ((x1348 Int)) Int (ite (and (<= 160 x1348) (> 256 x1348)) (x2001 (- x1348 124)) (x1451 x1348)))
(define-fun x1608 ((x1348 Int)) Int (ite (= 160 x1348) 729466174051048026939049150500379070045048658665 (x2623 x1348)))
(define-fun x1036 ((x1348 Int)) Int (ite (= 192 x1348) 443215666480553238610125355434898879895743000821 (x1608 x1348)))
(define-fun x1874 ((x1348 Int)) Int (ite (= 224 x1348) 953417218992365150631206543442508943947348309705 (x1036 x1348)))
(define-fun x2707 ((x1348 Int)) Int (ite (= x1348 256) 80943019369348893552279777061565613435472460254630153415513390446397355982848 (x2194 x1348)))
(define-fun x2768 ((x1348 Int)) Int (ite (= x1348 260) x618 (x2707 x1348)))
(define-fun x455 ((x1348 Int)) Int (ite (= x1348 292) 0 (x2768 x1348)))
(define-fun x310 ((x1348 Int)) Int (ite x1355 (x2965 x1348) (ite x299 (x2965 x1348) (x276 x1348))))
(define-fun x434 ((x1348 Int)) Int (ite x1355 (x1737 x1348) (ite x299 (x1737 x1348) (x1097 x1348))))
(define-fun x2657 ((x1348 Int)) Int (ite x1355 (x492 x1348) (ite x299 (x492 x1348) (x1738 x1348))))
(define-fun x259 ((x1348 Int)) Int (ite x1355 (x2415 x1348) (ite x299 (x2415 x1348) (x1909 x1348))))
(define-fun x679 ((x1348 Int)) Int (ite x1421 (x2143 x1348) (ite x222 (x2143 x1348) (x1700 x1348))))
(define-fun x1644 ((x1348 Int)) Int (ite x1421 (x2757 x1348) (ite x222 (x2757 x1348) (x2975 x1348))))
(define-fun x514 ((x1348 Int)) Int (ite x1421 (x620 x1348) (ite x222 (x620 x1348) (x919 x1348))))
(define-fun x2067 ((x1348 Int)) Int (ite x1421 (x2157 x1348) (ite x222 (x2157 x1348) (x2871 x1348))))
(define-fun x192 ((x1348 Int)) Int (ite (= x1348 0) x2782 (x1192 x1348)))
(define-fun x2896 ((x1348 Int)) Int (ite (= x1348 0) x1349 (x1192 x1348)))
(define-fun x324 ((x1348 Int)) Int (ite (= 0 x1348) x2031 (x1192 x1348)))
(define-fun x670 ((x1348 Int)) Int (ite (= x1348 0) x2997 (x2292 x1348)))
(define-fun x2152 ((x1348 Int)) Int (ite (= 0 x1348) x707 (x2292 x1348)))
(define-fun x1983 ((x1348 Int)) Int (ite (= 0 x1348) x2424 (x2292 x1348)))
(define-fun x2446 ((x1348 Int)) Int (ite (= 0 x1348) x2798 (x1558 x1348)))
(define-fun x1495 ((x1348 Int)) Int (ite (= 0 x1348) x1022 (x1558 x1348)))
(define-fun x1230 ((x1348 Int)) Int (ite (= x1348 0) x2057 (x1558 x1348)))
(define-fun x1551 ((x1348 Int)) Int (ite (= 0 x1348) x2422 (x2712 x1348)))
(define-fun x2933 ((x1348 Int)) Int (ite (= 0 x1348) x658 (x2712 x1348)))
(define-fun x1221 ((x1348 Int)) Int (ite (= 0 x1348) x1503 (x2712 x1348)))
(define-fun x879 ((x1348 Int)) Int (ite (= 0 x1348) x1057 (x574 x1348)))
(define-fun x2653 ((x1348 Int)) Int (ite (= x1348 0) x2426 (x574 x1348)))
(define-fun x2976 ((x1348 Int)) Int (ite (= 0 x1348) x1577 (x574 x1348)))
(define-fun x645 ((x1348 Int)) Int (ite (= x1348 0) x1545 (x466 x1348)))
(define-fun x2357 ((x1348 Int)) Int (ite (= 0 x1348) x2628 (x466 x1348)))
(define-fun x2509 ((x1348 Int)) Int (ite (= x1348 0) x2586 (x466 x1348)))
(define-fun x1310 ((x1348 Int)) Int (ite (= x1348 0) x877 (x348 x1348)))
(define-fun x1101 ((x1348 Int)) Int (ite (= x1348 0) x954 (x348 x1348)))
(define-fun x58 ((x1348 Int)) Int (ite (= 0 x1348) x751 (x348 x1348)))
(define-fun x913 ((x1348 Int)) Int (ite (= 0 x1348) x743 (x2722 x1348)))
(define-fun x2064 ((x1348 Int)) Int (ite (= x1348 0) x1283 (x2722 x1348)))
(define-fun x2158 ((x1348 Int)) Int (ite (= 0 x1348) x2040 (x2722 x1348)))
(define-fun x1250 ((x1348 Int)) Int (ite (= 0 x1348) x2271 (x859 x1348)))
(define-fun x761 ((x1348 Int)) Int (ite (= x1348 0) x921 (x859 x1348)))
(define-fun x2248 ((x1348 Int)) Int (ite (= x1348 0) x2498 (x859 x1348)))
(define-fun x1876 ((x1348 Int)) Int (ite (= x1348 0) x920 (x1160 x1348)))
(define-fun x587 ((x1348 Int)) Int (ite (= x1348 0) x18 (x1160 x1348)))
(define-fun x2906 ((x1348 Int)) Int (ite (= x1348 0) x2277 (x1160 x1348)))
(define-fun x2953 ((x1348 Int)) Int (ite (= x1348 0) x2331 (x2672 x1348)))
(define-fun x120 ((x1348 Int)) Int (ite (= 0 x1348) x1143 (x2672 x1348)))
(define-fun x1968 ((x1348 Int)) Int (ite (= x1348 0) x2637 (x2672 x1348)))
(define-fun x148 ((x1348 Int)) Int (ite (= 0 x1348) x1873 (x1139 x1348)))
(define-fun x1627 ((x1348 Int)) Int (ite (= x1348 0) x2852 (x1139 x1348)))
(define-fun x1102 ((x1348 Int)) Int (ite (= x1348 0) x2098 (x1139 x1348)))
(define-fun x1344 ((x1348 Int)) Int (ite x2164 (x324 x1348) (ite x2043 (x2896 x1348) (x192 x1348))))
(define-fun x2678 ((x1348 Int)) Int (ite (and (<= 256 x1348) (> 288 x1348)) (x1344 (- x1348 256)) (x1665 x1348)))
(define-fun x1174 ((x1348 Int)) Int (ite x1213 (x1983 x1348) (ite x1773 (x2152 x1348) (x670 x1348))))
(define-fun x237 ((x1348 Int)) Int (ite (and (> 288 x1348) (>= x1348 256)) (x1174 (- x1348 256)) (x1365 x1348)))
(define-fun x1289 ((x1348 Int)) Int (ite x1206 (x1230 x1348) (ite x852 (x1495 x1348) (x2446 x1348))))
(define-fun x894 ((x1348 Int)) Int (ite (and (< x1348 288) (>= x1348 256)) (x1289 (- x1348 256)) (x677 x1348)))
(define-fun x377 ((x1348 Int)) Int (ite x1432 (x1221 x1348) (ite x2928 (x2933 x1348) (x1551 x1348))))
(define-fun x2538 ((x1348 Int)) Int (ite (and (>= x1348 256) (> 288 x1348)) (x377 (- x1348 256)) (x1004 x1348)))
(define-fun x2106 ((x1348 Int)) Int (ite x360 (x2976 x1348) (ite x1875 (x2653 x1348) (x879 x1348))))
(define-fun x946 ((x1348 Int)) Int (ite (and (< x1348 288) (>= x1348 256)) (x2106 (- x1348 256)) (x2602 x1348)))
(define-fun x2730 ((x1348 Int)) Int (ite x2526 (x2509 x1348) (ite x1725 (x2357 x1348) (x645 x1348))))
(define-fun x134 ((x1348 Int)) Int (ite (and (>= x1348 256) (< x1348 288)) (x2730 (- x1348 256)) (x2845 x1348)))
(define-fun x1878 ((x1348 Int)) Int (ite x189 (x58 x1348) (ite x937 (x1101 x1348) (x1310 x1348))))
(define-fun x2902 ((x1348 Int)) Int (ite (and (<= 256 x1348) (< x1348 288)) (x1878 (- x1348 256)) (x1298 x1348)))
(define-fun x2735 ((x1348 Int)) Int (ite x2025 (x2158 x1348) (ite x2443 (x2064 x1348) (x913 x1348))))
(define-fun x2167 ((x1348 Int)) Int (ite (and (>= x1348 256) (< x1348 288)) (x2735 (- x1348 256)) (x531 x1348)))
(define-fun x1370 ((x1348 Int)) Int (ite x2120 (x2248 x1348) (ite x1461 (x761 x1348) (x1250 x1348))))
(define-fun x1524 ((x1348 Int)) Int (ite (and (>= x1348 256) (> 288 x1348)) (x1370 (- x1348 256)) (x593 x1348)))
(define-fun x1634 ((x1348 Int)) Int (ite x2512 (x2906 x1348) (ite x1351 (x587 x1348) (x1876 x1348))))
(define-fun x1438 ((x1348 Int)) Int (ite (and (>= x1348 256) (> 288 x1348)) (x1634 (- x1348 256)) (x595 x1348)))
(define-fun x1098 ((x1348 Int)) Int (ite x498 (x1968 x1348) (ite x2017 (x120 x1348) (x2953 x1348))))
(define-fun x1107 ((x1348 Int)) Int (ite (and (> 288 x1348) (>= x1348 256)) (x1098 (- x1348 256)) (x36 x1348)))
(define-fun x766 ((x1348 Int)) Int (ite x2391 (x1102 x1348) (ite x2749 (x1627 x1348) (x148 x1348))))
(define-fun x1870 ((x1348 Int)) Int (ite (and (<= 256 x1348) (> 288 x1348)) (x766 (- x1348 256)) (x2399 x1348)))
(assert (x2873 x569))
(assert (x2747 10000000000 x988))
(assert (x2873 x1816))
(assert (x2873 x2328))
(assert (= (or x564 x1450) x937))
(assert (x625 x1460))
(assert (x2873 x949))
(assert (=> (>= 10000 x1559) (= 0 (x2864 x1559))))
(assert (x2873 x2544))
(assert (x2873 x974))
(assert (x2873 x2368))
(assert (x2873 x1226))
(assert (x2873 x2424))
(assert (x1692 x2203))
(assert (x625 x159))
(assert (= (and (not x2572) x1522) x515))
(assert (x2873 x3053))
(assert (x2873 x1680))
(assert (x2873 x2557))
(assert (= x123 (and (not x2290) x2679)))
(assert (= x1978 (or x187 x2125)))
(assert (x2873 x2108))
(assert (x2873 x1186))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x996 64 x1816 66)))
(assert (= x841 (or x1105 x1015)))
(assert (x2873 x1678))
(assert (x2873 x1898))
(assert (x625 x2698))
(assert (= (and x1359 (not x685)) x441))
(assert (x2873 x2054))
(assert (x2873 x1228))
(assert (x2873 x2742))
(assert (x322 x1799 4))
(assert (x2873 x2420))
(assert (x2873 x1838))
(assert (x2720 x2203))
(assert (= (or x2819 x931) x1213))
(assert (x2873 x2362))
(assert (= x1458 (=> (and (= x2473 (* x2242 10000000000)) (= false x1541) (= x2852 (+ x785 x843)) (= false x1594) (= x785 x2473)) x2061)))
(assert (x2873 x497))
(assert (x2873 x234))
(assert (= x78 (or x44 x2778)))
(assert (x1692 x1543))
(assert (= (and x2506 x563) x257))
(assert (x2873 x1122))
(assert (= (x1789 (x996 64 x1624 0)) x1624))
(assert (x625 x1666))
(assert (x2873 x1246))
(assert (= (x141 (x996 64 x1816 66)) 64))
(assert (x2720 x2537))
(assert (x2873 x1659))
(assert (x2873 x1766))
(assert (x625 x1908))
(assert (x2529 443215666480553238610125355434898879895743000821))
(assert (x322 x2556 2))
(assert (x2873 x813))
(assert (x2720 x667))
(assert (x2873 x3034))
(assert (= x2453 (and x1672 (not x863))))
(assert (x2873 x793))
(assert (x2873 x73))
(assert (x2873 x96))
(assert (x2873 x1022))
(assert (x2873 x747))
(assert (x2873 x2808))
(assert (x2720 x287))
(assert (x2873 x717))
(assert (x2873 x672))
(assert (x2873 x648))
(assert (x2873 x89))
(assert (= (x996 64 x1559 0) (x2864 (x996 64 x1559 0))))
(assert (x2873 x2313))
(assert (x2873 x1795))
(assert (= x92 (or x3065 x487)))
(assert (x2873 x223))
(assert (x2873 x3006))
(assert (x2873 x1861))
(assert (= (and (not x1992) x2021) x1214))
(assert (x2873 x457))
(assert (x2873 x1142))
(assert (x2873 x503))
(assert (x2873 x1925))
(assert (x2873 x612))
(assert (x322 x2171 2))
(assert (=> (>= 10000 x2108) (= (x2864 x2108) 0)))
(assert (= x2835 (and x1970 x1595)))
(assert (x2873 x1600))
(assert (= x2190 (and x685 x1359)))
(assert (x2873 x3043))
(assert (> (x996 64 x1559 0) 10000))
(assert (= 0 (x676 (x996 64 x2917 0))))
(assert (= 66 (x676 (x996 64 x1122 66))))
(assert (x2873 x1530))
(assert (x625 x2856))
(assert (x2873 x3030))
(assert (x2873 x460))
(assert (x2720 x258))
(assert (x1430 x1676))
(assert (x2873 x506))
(assert (x2873 x1072))
(assert (x2873 x1797))
(assert (= (and x154 (not x1112)) x400))
(assert (x2873 x1652))
(assert (x2873 x100))
(assert (> (x996 64 x618 0) 10000))
(assert (x2873 x2431))
(assert (x2873 x688))
(assert (= (=> (and (= (not (< 1 x1705)) x176) (= x244 (x1438 256)) (= (x958 128) x1705)) (and x176 (=> (= x244 x986) x590))) x2154))
(assert (x2873 x2379))
(assert (= (=> (and (= x1823 (x2167 256)) (= (x93 128) x2695) (= x2753 (not (< 1 x2695)))) (and x2753 (=> (= x1823 x2580) x1940))) x665))
(assert (x2529 4722366482869645213695))
(assert (x2873 x1817))
(assert (= (or x2084 x1988) x1362))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639714))
(assert (x169 x258))
(assert (x322 x742 4))
(assert (= x3065 (and x1164 x352)))
(assert (x2529 937288727))
(assert (= 0 (x676 (x996 64 x618 0))))
(assert (x2873 x332))
(assert (x322 x50 2))
(assert (x1620 x362))
(assert (x2873 x1668))
(assert (x2873 x783))
(assert (= (=> (and (= (x1037 128) x2791) (= (x2538 256) x2036) (= x2619 (not (> x2791 1)))) (and (=> (= x1587 x2036) x1712) x2619)) x2863))
(assert (x2873 x854))
(assert (x2873 x1673))
(assert (x2873 x1606))
(assert (x2873 x1649))
(assert (x2873 x145))
(assert (x2873 x316))
(assert (x2873 x1419))
(assert (= x1331 (and x2103 x1108)))
(assert (x2873 x2031))
(assert (x2886 x742))
(assert (x2873 x1550))
(assert (x2873 x1188))
(assert (x625 x1397))
(assert (x2873 x709))
(assert (x2873 x2601))
(assert (x2873 x524))
(assert (x2886 x864))
(assert (x2873 x2677))
(assert (x2873 x1067))
(assert (x625 x729))
(assert (x625 x2489))
(assert (= x505 (and (not x2694) x2322)))
(assert (= x1358 (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x160) (= x1728 true) (= false x2515) (= x226 x2024) (= 0 x1277) (>= x250 1) (not (= x160 x1361)) (>= 1461501637330902918203684832716283019655932542975 x2807) (<= x1361 1461501637330902918203684832716283019655932542975) (= x2024 x2725) x111 (<= x2514 340282366920938463463374607431768211455) (not (= x500 x2705)) (= (> (x1891 x500) 0) x1479) (= x1116 (> (x1891 x1361) 0)) (not (= x2705 x160)) (<= 1 x1361) (= (< 0 (x1891 x160)) x331) (= x965 (= x2725 x3038)) (= true x607) x1116 (<= 1 x160) (<= 0 x2564) (= false x1845) (>= 1461501637330902918203684832716283019655932542975 x250) (= x2321 0) (= x250 x1197) (>= 1461501637330902918203684832716283019655932542975 x2146) (<= x2564 340282366920938463463374607431768211455) (not x965) (not (= x2705 x1361)) (<= 0 x2363) (= x164 x2564) (= 68 x1518) (<= 1 x2705) (>= x2024 1) (<= 0 x2514) (= (> (x1891 x2705) 0) x111) (>= 1461501637330902918203684832716283019655932542975 x2072) (= x2904 true) (<= x2705 1461501637330902918203684832716283019655932542975) (= x250 x3038) (<= x500 1461501637330902918203684832716283019655932542975) x331 (not (= x500 x1361)) x1479 (>= 1461501637330902918203684832716283019655932542975 x2024) (>= 340282366920938463463374607431768211455 x2363) (<= 1 x500) (= x1408 true) (= x2153 true) (>= 1 x2178) (not (= x500 x160))) (and (and (= x1361 x1156) (and (and (or (and (and (= (ite (= 443215666480553238610125355434898879895743000821 x1156) 1 0) x2222) (= 443215666480553238610125355434898879895743000821 x1084)) (not x828)) (and (= x2222 (ite x828 1 0)) x828)) (and (>= 127 x529) (= x1827 false) (>= x2477 1) (= 937288727 x1946) (= x1156 x1928) (= 729466174051048026939049150500379070045048658665 x1796) (= x828 (= x1156 729466174051048026939049150500379070045048658665)) (>= 127 x529) (= x1893 false) (= x2477 (x1891 x2705)) (= x164 x1819))) (= x164 x2640))) (= x1821 x1361))) x1658)))
(assert (= (=> (and (= false x1761) (= x4 x45) (= x2628 (+ x45 x2510)) (= false x1) (= (* x1217 10000000000) x4)) x2174) x1378))
(assert (x2873 x1329))
(assert (x2886 x3002))
(assert (x2886 x2618))
(assert (x2873 x1219))
(assert (x2873 x1566))
(assert (= (and x441 (not x1245)) x16))
(assert (x2873 x264))
(assert (x2747 10000000000 x246))
(assert (x2873 x1194))
(assert (x2873 x2838))
(assert (x2873 x2254))
(assert (x2873 x201))
(assert (x2873 x1799))
(assert (x2873 x2558))
(assert (x2873 x2869))
(assert (x2873 x906))
(assert (x2873 x1473))
(assert (x2873 x533))
(assert (x2873 x399))
(assert (x2873 x846))
(assert (x2873 x1260))
(assert (x2886 x2511))
(assert (x1430 x2556))
(assert (x2873 x3062))
(assert (x2747 10000000000 x2151))
(assert (x2747 10000000000 x2804))
(assert (x2873 x227))
(assert (x2873 x1587))
(assert (x2873 x1423))
(assert (x2873 x1199))
(assert (x169 x2795))
(assert (x2873 x1589))
(assert (x2873 x413))
(assert (x2873 x749))
(assert (x2873 x2772))
(assert (= (and x838 (not x1918)) x2778))
(assert (x2873 x210))
(assert (x2873 x1309))
(assert (x2873 x1959))
(assert (x2873 x995))
(assert (x2873 x240))
(assert (= (x2864 10000000000) 0))
(assert (x2886 x1159))
(assert (x2873 x1519))
(assert (= (and x1046 x2045) x1119))
(assert (x2529 340282366920938463463374607431768211455))
(assert (x2873 x2381))
(assert (x2873 x1313))
(assert (x2873 x2377))
(assert (x2720 x2664))
(assert (< (x996 64 x2917 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3029 x1436) x1647))
(assert (= x2144 (and x2912 (not x2767))))
(assert (x2873 x2860))
(assert (x2873 x2848))
(assert (x2873 x1190))
(assert (x322 x1603 2))
(assert (= 0 (x676 (x996 64 x1965 0))))
(assert (= x2164 (or x2716 x2548)))
(assert (x2873 x465))
(assert (x1692 x1708))
(assert (x2873 x3023))
(assert (x2873 x1813))
(assert (x2873 x1953))
(assert (x2886 x72))
(assert (x2747 10000000000 x362))
(assert (x2873 x1513))
(assert (= 0 (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639710)))
(assert (x2873 x530))
(assert (= (or x624 x443) x1056))
(assert (x2747 10000000000 x703))
(assert (x2873 x2032))
(assert (x2873 x351))
(assert (x1620 x3061))
(assert (= (and (not x3046) x537) x2766))
(assert (x2873 x1746))
(assert (= 0 (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639615)))
(assert (x2873 x1279))
(assert (= (and x1727 x1933) x2406))
(assert (= x2382 (and (not x511) x1457)))
(assert (x2873 x3018))
(assert (= x2443 (or x1643 x2189)))
(assert (= 0 (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x2873 x972))
(assert (x2873 x2520))
(assert (x2873 x1713))
(assert (= (=> (= x2378 x1788) x179) x2867))
(assert (x2873 x1989))
(assert (x2873 x1161))
(assert (=> (>= 10000 x2612) (= 0 (x2864 x2612))))
(assert (x2873 x979))
(assert (x2873 x2820))
(assert (x2873 x1026))
(assert (x2873 x1674))
(assert (= x2633 (and x2679 x2290)))
(assert (x2873 x72))
(assert (x2873 x1534))
(assert (x2873 x2990))
(assert (x2873 x939))
(assert (x2873 x151))
(assert (x2873 x1057))
(assert (= true x2427))
(assert (x2873 x2631))
(assert (x1692 x219))
(assert (x2873 x2936))
(assert (x2873 x1325))
(assert (x2873 x2171))
(assert (x2873 x2745))
(assert (x2873 x2065))
(assert (x2873 x2114))
(assert (= (=> (and (= (+ x1920 x2956) x1545) (= x1920 x2809) (= x810 false) (= x1769 false) (= x2809 (* 10000000000 x1515))) x2174) x289))
(assert (x2873 x2339))
(assert (x2873 x1720))
(assert (x2873 x1261))
(assert (x2873 x2938))
(assert (x625 x1544))
(assert (= (and x726 (not x715)) x2132))
(assert (x2873 x1553))
(assert (= x2479 (=> (and (= (+ x1401 x107) x1022) (= x800 false) (= x1611 (* 10000000000 x2219)) (= x1611 x1401) (= false x2297)) x85)))
(assert (= x1631 (and x1647 (not x1363))))
(assert (x322 x2511 4))
(assert (x2873 x1974))
(assert (x2873 x2005))
(assert (x2873 x2980))
(assert (x2873 x646))
(assert (= x379 (and x2359 x2130)))
(assert (x2873 x2756))
(assert (x2873 x167))
(assert (x2873 x1153))
(assert (x2873 x1663))
(assert (x2873 x396))
(assert (x2873 x2214))
(assert (x2873 x843))
(assert (= (and x538 (not x705)) x1311))
(assert (x2873 x1864))
(assert (x2873 x790))
(assert (x2873 x2426))
(assert (x2873 x2361))
(assert (x2873 x2689))
(assert (= (x1789 (x996 64 x1797 0)) x1797))
(assert (x2873 x2333))
(assert (x2873 x1377))
(assert (= (=> (and (= (x2034 128) x2328) (= (not (> x2328 1)) x1031) (= x3043 (x2902 256))) (and x1031 (=> (= x2627 x3043) x2787))) x196))
(assert (x322 x1822 2))
(assert (= (or x2751 (and (not x3057) x2060)) x1444))
(assert (x2873 x2256))
(assert (x2873 x2696))
(assert (x2873 x1800))
(assert (= x365 (and (not x2416) x1311)))
(assert (= (or x1214 x2307) x722))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639710))
(assert (x2873 x2490))
(assert (x2873 x2536))
(assert (x2873 x337))
(assert (= (and (not x2118) x1844) x27))
(assert (= (x2864 (x996 64 x94 0)) (x996 64 x94 0)))
(assert (x2873 x1272))
(assert (= (=> (and (= x2368 (x3036 128)) (= (not (< 1 x2368)) x770) (= x2568 (x237 256))) (and (=> (= x2568 x632) x1957) x770)) x2252))
(assert (x2886 x2537))
(assert (x1430 x287))
(assert (= (x1789 (x996 64 x1816 0)) x1816))
(assert (x2873 x68))
(assert (x2873 x1273))
(assert (x2873 x2910))
(assert (= (=> (and (= x1225 (not (> x39 1))) (= x39 (x1332 x523))) (and x1225 x1330)) x700))
(assert (x2873 x1233))
(assert (= x1086 (and (not x2629) x230)))
(assert (x2873 x1070))
(assert (x2873 x1839))
(assert (= (and x2235 (not x2762)) x907))
(assert (x2873 x2652))
(assert (x2873 x1538))
(assert (x2720 x1713))
(assert (x2873 x1465))
(assert (x2873 x2389))
(assert (= 64 (x141 (x996 64 x1965 0))))
(assert (x2873 x2532))
(assert (x2873 x2242))
(assert (x2873 x2651))
(assert (> (x996 64 x1797 0) 10000))
(assert (x2873 x2326))
(assert (x2873 x1899))
(assert (x2873 x986))
(assert (x2873 x2502))
(assert (= x2303 (and x1777 x1331)))
(assert (x2873 x136))
(assert (= x1672 (and x1960 x876)))
(assert (x2873 x1385))
(assert (x2873 x992))
(assert (x936 x1306))
(assert (= (and x2737 x1973) x3024))
(assert (x625 x2464))
(assert (x2873 x300))
(assert (x2873 x1670))
(assert (x322 x864 2))
(assert (x2873 x2840))
(assert (x1692 x2575))
(assert (x2873 x2113))
(assert (x2873 x249))
(assert (x322 x337 4))
(assert (x2747 10000000000 x1609))
(assert (x2873 x2527))
(assert (x2886 x287))
(assert (x2873 x1171))
(assert (x2873 x2684))
(assert (x2873 x1084))
(assert (x2873 x1748))
(assert (x2873 x2918))
(assert (= x138 (and (not x1777) x1331)))
(assert (x2873 x344))
(assert (x2873 x2991))
(assert (= x2761 (and x2775 x1080)))
(assert (= (and x2427 x828) x186))
(assert (x2873 x1860))
(assert (x2720 x3002))
(assert (x2873 x2266))
(assert (x322 x258 1461501637330902918203684832716283019655932542976))
(assert (x2873 x1811))
(assert (x2873 x2995))
(assert (x2873 x174))
(assert (x2873 x1346))
(assert (x2873 x1238))
(assert (x2873 x1615))
(assert (x2873 x585))
(assert (x2873 x908))
(assert (not (x2529 (x996 64 x2622 0))))
(assert (= (=> (and (and (= x137 x2011) (and (= 953417218992365150631206543442508943947348309705 x2820) (= x245 2235288835) (= x2505 false) (= x511 (< 0 x1184)) (= x495 1) (>= x145 2) (= x1014 (x1037 128)) (= x2491 128) (= x2812 443215666480553238610125355434898879895743000821) (>= 127 x185) (= x2437 x94) (>= x2646 1) (= x762 729466174051048026939049150500379070045048658665) (<= 1 x1014) (= x2646 (x1891 x2705)) (= (x1037 128) x1859) (<= 3 x1859) (= x94 x2011) (= (x1037 128) x1184) (= (x1037 128) x145) (>= 127 x185) (= x513 false))) (and (= x2011 x1790) (= false x272) (= x998 false) (= false x309) (= 36 x2595) (= false x1639))) (and (=> (and (and (= x1860 (x1037 128)) (= (x1152 1461501637330902918203684832716283019655932542975 x1433) x626) (>= x1860 1) (= x1595 (= x500 x626)) (= (x966 160) x1433) (= x136 256)) x511) (and (=> (and (and (and (= (x1891 x500) x3055) (= x1352 352) (>= 4722366482869645213695 x889) (>= 20282409603651670423947251286015 x1260) (= (x1636 x2993) x889) (= 3002343453 x1553) (= x2437 x533) (= x669 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x1260 (x1305 x2993)) (= x211 1) (>= 4722366482869645213695 x2830) (= x2830 (x2494 x2993)) (= (x1152 2 x522) x407) (<= x368 127) (= x387 false) (<= x368 127) (= (= x407 0) x1512) (= (x996 64 x94 0) x2993) (= false x1877) (= 68 x1060) (= x541 1) (<= 1 x3055) (>= 3 x522) (= (x1148 x2993) x522)) (or (and x1512 (and (= (x1305 x1961) x924) (= (x996 64 x94 0) x1961) (= x924 x589) (<= x924 20282409603651670423947251286015))) (and (= 0 x589) (not x1512)))) x1595) x682) (=> (and (= x685 (= x626 x160)) (not x1595)) (and (=> (and (and (or (and x1049 (and (= x2241 x482) (>= 20282409603651670423947251286015 x482) (= x482 (x1040 x1780)) (= x1780 (x996 64 x94 0)))) (and (not x1049) (= 0 x2241))) (and (= 3002343453 x490) (= x2437 x96) (= (x1891 x160) x938) (= x1576 (x996 64 x94 0)) (= x2910 68) (>= 127 x1885) (= (= 0 x3052) x1049) (= x2472 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x2816 (x1300 x1576)) (<= x228 20282409603651670423947251286015) (= x2122 false) (<= x1882 4722366482869645213695) (<= x1676 3) (>= 4722366482869645213695 x2816) (= false x1389) (= x228 (x1040 x1576)) (>= x938 1) (= (x2499 x1576) x1676) (= (x875 x1576) x1882) (= x1536 1) (= x2293 352) (= x3052 (x1152 2 x1676)) (>= 127 x1885) (= x2936 1))) x685) x1345) (=> (and (and (and (= (x1152 2 x952) x2797) (>= 4722366482869645213695 x703) (>= 3 x952) (= 352 x1273) (= x780 (x1891 x1361)) (= x1714 (x2415 x238)) (= x741 3002343453) (= 1 x2078) (<= x626 1461501637330902918203684832716283019655932542975) (>= x780 1) (= x952 (x2965 x238)) (= x626 x1361) (= x1840 68) (= x1245 (= 0 x2797)) (<= x298 127) (= x2437 x7) (<= 1 x626) (<= x1714 20282409603651670423947251286015) (<= x298 127) (= x939 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x238 (x996 64 x94 0)) (= x703 (x1737 x238)) (= x554 1) (= x425 false) (= x1209 false) (= x1396 (x492 x238)) (<= x1396 4722366482869645213695)) (or (and (and (>= 20282409603651670423947251286015 x2487) (= x1278 (x996 64 x94 0)) (= x2487 x2291) (= x2487 (x2415 x1278))) x1245) (and (= 0 x2291) (not x1245)))) (not x685)) x1540))))) (=> (and (not x511) (= x1587 0)) x1712))) x2221))
(assert (x2873 x2801))
(assert (= (x2864 (x996 64 x1816 0)) (x996 64 x1816 0)))
(assert (= x2971 (=> (and (and (= x2441 false) (= x358 36) (= x862 x2099) (= false x263) (= x1889 false) (= x2405 false)) (and (and (= x326 (x1891 x2705)) (= x1091 (< 0 x672)) (= x208 (x2216 128)) (>= x326 1) (= x1481 (x2216 128)) (= false x2968) (= x2839 false) (<= x1388 127) (= x1974 953417218992365150631206543442508943947348309705) (= x1129 1) (= x1965 x278) (= x77 443215666480553238610125355434898879895743000821) (= x1965 x862) (>= 127 x1388) (= x2536 (x2216 128)) (<= 1 x208) (<= 3 x1481) (>= x2536 2) (= 2235288835 x648) (= x1039 128) (= (x2216 128) x672) (= 729466174051048026939049150500379070045048658665 x1262)) (= x530 x862))) (and (=> (and (and (= (x2216 128) x269) (= x2324 256) (= x312 (x1622 160)) (= (x1152 1461501637330902918203684832716283019655932542975 x312) x947) (<= 1 x269) (= (= x500 x947) x2775)) x1091) (and (=> (and (= (= x947 x160) x2785) (not x2775)) (and (=> (and x2785 (and (and (<= x255 127) (= (x1040 x2403) x2256) (<= x1194 4722366482869645213695) (= false x1804) (>= 4722366482869645213695 x1217) (= x908 (x2499 x2403)) (= x711 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x1217 (x875 x2403)) (= x1950 68) (>= x1409 1) (>= 127 x255) (= (x1152 2 x908) x1131) (= x2403 (x996 64 x1965 0)) (= x278 x2840) (= x1272 3002343453) (>= 20282409603651670423947251286015 x2256) (= 1 x1913) (= 352 x2352) (<= x908 3) (= false x697) (= x1407 1) (= x1409 (x1891 x160)) (= (x1300 x2403) x1194) (= (= x1131 0) x2702)) (or (and (= x2510 0) (not x2702)) (and x2702 (and (= (x1040 x808) x2827) (>= 20282409603651670423947251286015 x2827) (= x808 (x996 64 x1965 0)) (= x2827 x2510)))))) x1378) (=> (and (not x2785) (and (or (and (not x1992) (= x2956 0)) (and x1992 (and (>= 20282409603651670423947251286015 x1376) (= x1187 (x996 64 x1965 0)) (= x1376 (x2415 x1187)) (= x1376 x2956)))) (and (>= 4722366482869645213695 x1515) (= (x2415 x2288) x1346) (= 352 x964) (>= 127 x1044) (>= x947 1) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x2225) (= (x1737 x2288) x1515) (= x2288 (x996 64 x1965 0)) (>= 1461501637330902918203684832716283019655932542975 x947) (>= 20282409603651670423947251286015 x1346) (= x2926 x278) (>= 4722366482869645213695 x2626) (= x1992 (= x1628 0)) (>= 127 x1044) (= x1906 (x1891 x1361)) (= (x492 x2288) x2626) (= 1 x1210) (= x947 x1361) (= (x2965 x2288) x2511) (= 3002343453 x497) (= (x1152 2 x2511) x1628) (>= x1906 1) (= x2180 68) (= x2650 false) (= x659 1) (= false x1157) (<= x2511 3)))) x289))) (=> (and (and (and (= 3002343453 x1196) (= x1473 (x1891 x500)) (>= 3 x381) (<= x1778 4722366482869645213695) (= (x1148 x1258) x381) (= x1688 1) (= x199 (x1152 2 x381)) (>= 127 x1446) (>= x1473 1) (= x816 (x1636 x1258)) (= (x996 64 x1965 0) x1258) (= x1898 80943019369348893552279777061565613435472460254630153415513390446397355982848) (>= 4722366482869645213695 x816) (= x1971 false) (= x1280 352) (>= 20282409603651670423947251286015 x2387) (= x696 (= x199 0)) (= x278 x1852) (= x341 false) (= 68 x1364) (= 1 x2381) (= x1778 (x2494 x1258)) (= x2387 (x1305 x1258)) (>= 127 x1446)) (or (and (and (= x2696 x2315) (= (x1305 x2890) x2696) (= (x996 64 x1965 0) x2890) (>= 20282409603651670423947251286015 x2696)) x696) (and (= x2315 0) (not x696)))) x2775) x1073))) (=> (and (not x1091) (= x673 0)) x896)))))
(assert (x322 x2123 2))
(assert (x2873 x311))
(assert (= x1448 (=> (= x973 (= 0 x2525)) (and (=> (and (and (= x519 953417218992365150631206543442508943947348309705) (= x1281 (x2669 (- x2859 953417218992365150631206543442508943947348309705))) (= x1727 (> x1281 0))) x973) (and (=> (and (= x1709 96) x1727) x2145) (=> (and (not x1727) (and (<= 1 x2345) (= 192 x949) (<= 2 x2269) (= x2269 (x916 192)) (= (x916 192) x2345))) x357))) (=> (and (and (= x949 192) (= (x2673 192) x1561) (<= 1 x1561)) (not x973)) x357)))))
(assert (x2873 x873))
(assert (x2873 x1824))
(assert (x2873 x2269))
(assert (x2873 x2574))
(assert (= x2900 (and x2572 x1522)))
(assert (x2873 x897))
(assert (x2873 x2922))
(assert (x2873 x2917))
(assert (x2873 x7))
(assert (x2873 x1427))
(assert (= (x141 (x996 64 x1559 0)) 64))
(assert (x2873 x82))
(assert (x2720 1461501637330902918203684832716283019655932542976))
(assert (x322 x1327 2))
(assert (x2873 x1456))
(assert (x2873 x1364))
(assert (x2873 x2044))
(assert (= x852 (or x27 x833)))
(assert (x2747 10000000000 x1439))
(assert (= (and (not x1093) x1123) x538))
(assert (x2873 x199))
(assert (x2873 x962))
(assert (x2873 x2794))
(assert (x2873 x2566))
(assert (x322 x1433 1461501637330902918203684832716283019655932542976))
(assert (x2873 x1805))
(assert (x2873 x382))
(assert (= (x141 (x996 64 x2622 0)) 64))
(assert (x2873 x2324))
(assert (x2873 x1021))
(assert (x2720 x2116))
(assert (x2873 x599))
(assert (x2873 x1235))
(assert (x2873 x402))
(assert (x2873 x628))
(assert (= (=> (= x1709 x949) x2145) x357))
(assert (x2873 x1731))
(assert (x2873 x668))
(assert (= x1977 (and x737 x2117)))
(assert (x2873 x2796))
(assert (x2873 x1324))
(assert (=> (>= 10000 x2917) (= 0 (x2864 x2917))))
(assert (x2873 x2862))
(assert (x2873 x1396))
(assert (x2873 x1328))
(assert (x2873 x1395))
(assert (= x1572 (and x2427 (not x828))))
(assert (x2873 x1280))
(assert (x2873 x39))
(assert (x322 x312 1461501637330902918203684832716283019655932542976))
(assert (< 10000 (x996 64 x2612 0)))
(assert (x2873 x2576))
(assert (= x486 (=> (= 0 x2224) x933)))
(assert (x2873 x1653))
(assert (x2873 x194))
(assert (x2886 x1603))
(assert (x2873 x1352))
(assert (x2873 x1993))
(assert (= (and x19 x727) x1981))
(assert (x2873 x1287))
(assert (x2720 x2795))
(assert (x322 x2664 1461501637330902918203684832716283019655932542976))
(assert (x2873 x1967))
(assert (x2747 10000000000 x3040))
(assert (x2873 x1058))
(assert (= (and x1366 (not x2003)) x723))
(assert (x322 x337 2))
(assert (= (and (not x1730) x232) x2736))
(assert (x2873 x372))
(assert (x2873 x2690))
(assert (x2873 x1384))
(assert (x2873 x2309))
(assert (x2873 x2483))
(assert (x322 x1537 2))
(assert (x2873 x2830))
(assert (x2873 x2913))
(assert (x1430 x667))
(assert (x2873 x779))
(assert (x2873 x1851))
(assert (= (x996 64 x1122 0) (x2864 (x996 64 x1122 0))))
(assert (x2873 x77))
(assert (= (and (not x1596) x1754) x1002))
(assert (x2720 x488))
(assert (= x2819 (and (not x1472) x1539)))
(assert (x2873 x269))
(assert (> (x996 64 x1624 0) 10000))
(assert (x2873 x1778))
(assert (x2529 3993797972))
(assert (x2873 x1965))
(assert (x2873 x535))
(assert (x2873 x405))
(assert (x1692 x864))
(assert (x322 x2116 2))
(assert (x2747 10000000000 x1383))
(assert (x2873 x2123))
(assert (x2873 x273))
(assert (x2886 x258))
(assert (= x17 (or x2925 x2155)))
(assert (= (or x1064 x641) x360))
(assert (x2720 x1199))
(assert (x2873 x2100))
(assert (= (=> (and (= (* x873 10000000000) x1203) (= (+ x1798 x786) x2798) (= x2140 false) (= x2458 false) (= x1798 x1203)) x85) x1984))
(assert (x2873 x1369))
(assert (> (x996 64 x1788 0) 10000))
(assert (x322 x2907 2))
(assert (x1620 x406))
(assert (x2873 x1502))
(assert (x322 x494 340282366920938463463374607431768211456))
(assert (= (or x2766 x2760) x1638))
(assert (x2873 x2523))
(assert (x2873 x2905))
(assert (x2873 x37))
(assert (x2873 x2413))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x996 64 x2849 0)))
(assert (x2873 x2791))
(assert (x2873 x1007))
(assert (x2747 10000000000 x2242))
(assert (x2873 x2616))
(assert (x2747 10000000000 x5))
(assert (x2873 x1667))
(assert (x322 x1006 2))
(assert (x2873 x963))
(assert (x2886 x50))
(assert (x2873 x422))
(assert (= x88 (and x1802 x3010)))
(assert (x169 x1226))
(assert (= (and (not x157) x642) x170))
(assert (= (x2864 80943019369348893552279777061565613435472460254630153415513390446397355982848) 0))
(assert (x2873 x224))
(assert (= (or x2406 x2012) x1522))
(assert (x2873 x1291))
(assert (x2873 x2052))
(assert (= (or x1271 x400) x498))
(assert (x2873 x375))
(assert (x2873 x2733))
(assert (x1620 x2804))
(assert (= (and x714 (not x2702)) x2344))
(assert (x2873 x216))
(assert (x2873 x334))
(assert (= x1316 (and (not x271) x2147)))
(assert (x2873 x2469))
(assert (x2873 x1306))
(assert (= x1299 (or x756 x2166)))
(assert (x2873 x1460))
(assert (= (or x2142 x2088) x1432))
(assert (x2873 x1726))
(assert (= x2463 (and (not x1282) x2750)))
(assert (= (=> (= x188 x2624) x1585) x1776))
(assert (x2873 x1840))
(assert (= x925 (=> (and (and (= x1343 (= 0 x46)) (= (ite (= x1122 x2108) 0 x2108) x2527)) (or (and x1343 (= (x996 64 x1122 66) x542)) (and (not x1343) (= x2304 (x996 64 x1122 67))))) x1687)))
(assert (x1620 x703))
(assert (= 64 (x141 (x996 64 x1122 0))))
(assert (x2873 x2734))
(assert (x2873 x2101))
(assert (x322 x522 4))
(assert (x2873 x1537))
(assert (= (or x2463 x758) x1490))
(assert (x1620 x8))
(assert (= (and x1832 x2844) x60))
(assert (x2873 x2422))
(assert (x2873 x2504))
(assert (= x1170 (or x2606 x1770)))
(assert (x2873 x2723))
(assert (x2873 x2200))
(assert (x2873 x214))
(assert (x2873 x1783))
(assert (x2873 x2066))
(assert (x2873 x1830))
(assert (x1620 x988))
(assert (x2873 x195))
(assert (x2873 x2517))
(assert (x2873 x1779))
(assert (x307 x1306 10000000000))
(assert (= x933 (=> (and (and (and (= x160 x1651) (and (= x1424 x2898) (and (and (= x1651 x1723) (<= x240 127) (= false x436) (= x1579 (x1891 x2705)) (= false x3066) (<= x240 127) (= x1664 x2898) (= 937288727 x201) (= (= x1651 729466174051048026939049150500379070045048658665) x352) (>= x1579 1) (= 729466174051048026939049150500379070045048658665 x972)) (or (and (= (ite x352 1 0) x2112) x352) (and (and (= (ite (= x1651 443215666480553238610125355434898879895743000821) 1 0) x2112) (= 443215666480553238610125355434898879895743000821 x2373)) (not x352)))))) (= x160 x2940)) (and (= x1563 false) (= false x1894) (= x2514 x2898) (= x2788 (not (= x2979 0))) (= (ite (not (= x2224 0)) 1 0) x2979) (= false x1220) (= x2083 false) (= x1865 68))) x2296)))
(assert (x2873 x2301))
(assert (x2873 x2726))
(assert (x2873 x1997))
(assert (x2873 x2262))
(assert (x2873 x1835))
(assert (x2873 x1210))
(assert (x2873 x124))
(assert (x2873 x1207))
(assert (x2873 x1061))
(assert (x2886 x219))
(assert (x636 x1822 x1159))
(assert (x2873 x1882))
(assert (x1430 x381))
(assert (x2873 x1191))
(assert (x2873 x113))
(assert (not x1358))
(assert (x322 x2537 1461501637330902918203684832716283019655932542976))
(assert (= x1330 (=> (= x845 0) x583)))
(assert (x2873 x899))
(assert (x2720 x1822))
(assert (x2886 x2575))
(assert (x2873 x2445))
(assert (x2873 x1274))
(assert (x2873 x1354))
(assert (x2873 x918))
(assert (x2873 x1380))
(assert (x2873 x3020))
(assert (x2873 x2302))
(assert (x2873 x2378))
(assert (x1620 x2151))
(assert (x2873 x2960))
(assert (x2873 x2387))
(assert (x2873 x2241))
(assert (= (or x1572 x186) x158))
(assert (x2873 x469))
(assert (x2873 x1442))
(assert (= (and x1672 x863) x1597))
(assert (= x1643 (and (not x2815) x168)))
(assert (x2720 340282366920938463463374607431768211456))
(assert (x2873 x423))
(assert (x2747 10000000000 x2219))
(assert (= x537 (and x723 (not x2857))))
(assert (= 0 (x2864 729466174051048026939049150500379070045048658665)))
(assert (x2873 x459))
(assert (x625 x89))
(assert (not (x2529 (x996 64 x1965 0))))
(assert (= x2124 (and (not x1418) x1848)))
(assert (x2873 x83))
(assert (x2873 x478))
(assert (x2873 x1297))
(assert (x1620 x2860))
(assert (x2873 x2797))
(assert (x2873 x2659))
(assert (> (x996 64 x1965 0) 10000))
(assert (x2873 x2939))
(assert (x2873 x2))
(assert (x2886 x1017))
(assert (x2873 x889))
(assert (x1430 x197))
(assert (= (and x1706 x147) x2355))
(assert (x2873 x2887))
(assert (x2873 x67))
(assert (x2873 x1796))
(assert (x2873 x101))
(assert (x2873 x2828))
(assert (= x2025 (or x2453 x1597)))
(assert (= x56 (and x3057 x2060)))
(assert (= (or x3035 x1086) x1206))
(assert (x2873 x1764))
(assert (x1620 x1190))
(assert (= (or x1441 x2928 x1432) x2903))
(assert (x2873 x1422))
(assert (x2873 x2277))
(assert (=> (<= x815 10000) (= 0 (x2864 x815))))
(assert (x635 x1822))
(assert (= x2084 (and (not x2433) x1316)))
(assert (x1620 x1383))
(assert (x2873 x2323))
(assert (x2873 x1545))
(assert (= (=> (and (and (= false x3060) (= x1257 x2024) (= x413 x318) (= x1309 x318) (= false x2951) (= x1268 x1257) (= x2856 36) x221 (= x2178 x1309) (= x1268 x1742) (= false x1994) (= true x2305) (= (= 0 x413) x690) (= false x2986)) (and (and (= x2612 x275) (= 0 x207) (= x2612 x1742) (= x3064 (x1891 x2705)) (>= 127 x712) (= (x182 128) x897) (>= x1861 1) (= 128 x984) (<= 1 x3064) (= x753 (> x544 0)) (= (x182 128) x1861) (= x2470 false) (>= x1600 2) (= x442 443215666480553238610125355434898879895743000821) (= x2544 953417218992365150631206543442508943947348309705) (>= x897 3) (= x544 (x182 128)) (= 3993797972 x2651) (= x1353 729466174051048026939049150500379070045048658665) (= (x182 128) x1600) (<= x712 127) (= x347 false)) (= x1742 x2349))) (and (=> (and x753 (and (= (x1568 160) x2795) (= x1266 (x182 128)) (= (= x361 x500) x1093) (>= x1266 1) (= 256 x99) (= (x1152 1461501637330902918203684832716283019655932542975 x2795) x361))) (and (=> (and (not x1093) (= x705 (= x160 x361))) (and (=> (and (and (and (= x2416 (= x2461 0)) (<= x361 1461501637330902918203684832716283019655932542975) (= x361 x1361) (= x2508 x950) (<= 1 x332) (= x1982 (x2415 x1042)) (= x639 3002343453) (= 0 x151) (= x2464 68) (= (x2965 x1042) x1543) (>= x361 1) (= x161 false) (= x950 x275) (= (x1891 x1361) x332) (<= x2610 4722366482869645213695) (= x1028 352) (= (x492 x1042) x406) (<= x1543 3) (= x1629 false) (= 0 x995) (>= 20282409603651670423947251286015 x1982) (= x1228 80943019369348893552279777061565613435472460254630153415513390446397355982848) (<= x406 4722366482869645213695) (= (x1152 1 x1543) x2461) (= x2610 (x1737 x1042)) (>= 127 x1718) (>= 127 x1718) (= (x996 64 x2612 0) x1042)) (or (and (and (= (x2415 x2584) x2713) (= x71 x2713) (<= x2713 20282409603651670423947251286015) (= (x996 64 x2612 0) x2584)) x2416) (and (not x2416) (= 0 x71)))) (not x705)) x55) (=> (and (and (or (and (= x543 0) (not x2844)) (and (and (= x543 x359) (= (x996 64 x2612 0) x386) (= (x1040 x386) x359) (<= x359 20282409603651670423947251286015)) x2844)) (and (= 68 x2996) (= x1571 (x875 x580)) (= (x1152 1 x1006) x2545) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x1926) (= x3045 0) (>= 20282409603651670423947251286015 x1899) (>= 3 x1006) (= x2938 0) (<= x1871 127) (= x2228 352) (= x37 (x1891 x160)) (= x2593 (x1300 x580)) (= x792 3002343453) (= (x2499 x580) x1006) (= x820 false) (<= 1 x37) (<= x1871 127) (= false x1477) (= x1598 x2597) (>= 4722366482869645213695 x1571) (= (x1040 x580) x1899) (= (= 0 x2545) x2844) (= x2597 x275) (<= x2593 4722366482869645213695) (= x580 (x996 64 x2612 0)))) x705) x2263))) (=> (and x1093 (and (and (= (x1152 1 x864) x2858) (>= 20282409603651670423947251286015 x1674) (= (= 0 x2858) x1599) (= (x996 64 x2612 0) x231) (= 3002343453 x2185) (= x2489 68) (>= x3025 1) (= false x2300) (<= x1356 4722366482869645213695) (= (x1148 x231) x864) (= x2022 0) (= x1496 x598) (<= x1026 127) (= x2832 352) (= (x1636 x231) x1868) (= 0 x2731) (<= x1026 127) (<= x1868 4722366482869645213695) (= false x814) (= x262 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x1674 (x1305 x231)) (= x3025 (x1891 x500)) (= x598 x275) (= (x2494 x231) x1356) (<= x864 3)) (or (and (not x1599) (= x719 0)) (and (and (= x719 x1488) (= x1488 (x1305 x1704)) (= x1704 (x996 64 x2612 0)) (<= x1488 20282409603651670423947251286015)) x1599)))) x1660))) (=> (and (= 0 x718) (not x753)) x3031))) x528))
(assert (= x1333 (and x841 (not x2994))))
(assert (x2873 x398))
(assert (x2873 x2804))
(assert (x2873 x1434))
(assert (x2873 x1613))
(assert (x2873 x1831))
(assert (x2873 x2802))
(assert (= (and x1599 x74) x2716))
(assert (= (=> (and (= x3014 160) (= x1679 (x1307 x732)) (= (< 0 x1679) x1436)) (and (=> (not x1436) x486) (=> (and x1436 (and (= x3002 (x2594 x301)) (= x1363 (< 0 x2379)) (= x2379 (x2669 (- (mod x164 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1244))) (= x63 (x1307 x732)) (= x1244 (x1152 340282366920938463463374607431768211455 x3002)) (>= x63 1) (= (+ 32 x732) x301))) (and (=> (and (not x1363) (= x2224 1)) x933) (=> x1363 x1285))))) x2384))
(assert (x2873 x1463))
(assert (x2873 x143))
(assert (x2873 x543))
(assert (x2873 x819))
(assert (x2873 x2795))
(assert (x322 x742 2))
(assert (= (x2864 4722366482869645213695) 0))
(assert (x2873 x1714))
(assert (x2873 x1028))
(assert (x2873 x1859))
(assert (x2873 x1920))
(assert (x2873 x1740))
(assert (x2873 x845))
(assert (x2873 x2371))
(assert (x2873 x2611))
(assert (x2873 x2658))
(assert (x2873 x2812))
(assert (= (and x1933 (not x1727)) x454))
(assert (x2873 x1549))
(assert (= (or x505 x1872) x1956))
(assert (x2873 x2245))
(assert (x2873 x2148))
(assert (= x2849 (x1789 (x996 64 x2849 0))))
(assert (= x339 (and x1527 (not x2474))))
(assert (x2873 x707))
(assert (= (or x1661 x454) x2012))
(assert (x2873 x131))
(assert (= (x1789 (x996 64 x1122 67)) x1122))
(assert (= (and x2183 (not x115)) x1046))
(assert (x2873 x2581))
(assert (= 0 (x676 (x996 64 x1533 0))))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639615))
(assert (x2873 x2370))
(assert (x2873 x2491))
(assert (not (x2529 (x996 64 x94 0))))
(assert (x2873 x1508))
(assert (x2873 x1156))
(assert (x2873 x2057))
(assert (x2873 x1654))
(assert (x2873 x99))
(assert (x2873 x2345))
(assert (x2873 x2833))
(assert (x2873 x2457))
(assert (x2873 x2369))
(assert (= x1585 (=> (and (and (= (= 0 x2149) x59) (= x112 x1342) (= x1161 36) (= x687 0) (= x2149 x2490) (= x2099 x666) (= x993 false) (= x2254 x2178) (= (= 0 x2624) x2732) (= x2254 x2490) (= x429 false) (= x112 x2099) (= x2024 x734) (= x1342 (ite x2732 x734 x2624)) (= x2670 false) (= x114 false) (= x97 x2624)) (and (and (>= x2114 2) (= x24 false) (= x2077 (x408 128)) (<= 1 x1137) (= x1497 (x1891 x2705)) (= x1137 (x408 128)) (= x807 729466174051048026939049150500379070045048658665) (= x2774 953417218992365150631206543442508943947348309705) (= 128 x2236) (= false x1030) (>= x1497 1) (= x2849 x2523) (= (x408 128) x2114) (= x772 0) (= x747 (x408 128)) (= (< 0 x2077) x446) (>= x747 3) (= x2833 3993797972) (= 443215666480553238610125355434898879895743000821 x507) (<= x2877 127) (>= 127 x2877) (= x666 x2849)) (= x666 x167))) (and (=> (and x446 (and (= 256 x1369) (= x1226 (x2019 160)) (= x1126 (x408 128)) (= x686 (x1152 1461501637330902918203684832716283019655932542975 x1226)) (<= 1 x1126) (= (= x500 x686) x2039))) (and (=> (and (not x2039) (= (= x686 x160) x2341)) (and (=> (and x2341 (and (and (= x1520 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= (x996 64 x2849 0) x70) (>= 4722366482869645213695 x1618) (= (x1891 x160) x805) (= x1635 (x1152 1 x2575)) (<= x2575 3) (= false x28) (= x992 x2523) (= x2135 (x1300 x70)) (= x370 (= x1635 0)) (>= 127 x57) (= x2456 352) (= x2421 0) (= x716 false) (= (x1040 x70) x260) (= 3002343453 x1061) (<= x2135 4722366482869645213695) (>= x805 1) (<= x57 127) (= (x875 x70) x1618) (= x2575 (x2499 x70)) (>= 20282409603651670423947251286015 x260) (= 0 x1274) (= 68 x397)) (or (and (and (>= 20282409603651670423947251286015 x612) (= (x1040 x1178) x612) (= x1178 (x996 64 x2849 0)) (= x1146 x612)) x370) (and (= x1146 0) (not x370))))) x1701) (=> (and (not x2341) (and (and (= x793 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= 0 x1905) (= (x1152 1 x1470) x2534) (>= 127 x1621) (= x2265 x2523) (<= x2648 4722366482869645213695) (= 352 x1613) (= x2648 (x1737 x1076)) (= x524 3002343453) (>= 4722366482869645213695 x988) (<= 1 x686) (>= 3 x1470) (<= x1621 127) (= (= 0 x2534) x971) (= false x2390) (= 68 x1397) (= x988 (x492 x1076)) (= x1076 (x996 64 x2849 0)) (>= x1322 1) (= (x1891 x1361) x1322) (= x1470 (x2965 x1076)) (>= 20282409603651670423947251286015 x40) (= x40 (x2415 x1076)) (= x1361 x686) (= x2915 false) (= x2333 0) (<= x686 1461501637330902918203684832716283019655932542975)) (or (and (and (= (x996 64 x2849 0) x2310) (>= 20282409603651670423947251286015 x2247) (= x229 x2247) (= x2247 (x2415 x2310))) x971) (and (not x971) (= 0 x229))))) x2639))) (=> (and (and (and (<= x146 127) (= x2585 3002343453) (= (x2494 x1394) x209) (= x1783 (x1891 x500)) (= x152 false) (<= x2445 3) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x2160) (<= x3061 4722366482869645213695) (<= x1096 20282409603651670423947251286015) (= (x1148 x1394) x2445) (= x183 x2523) (<= 1 x1783) (= x2876 (= 0 x1336)) (>= 4722366482869645213695 x209) (= 68 x1824) (= x586 0) (= 0 x2313) (>= 127 x146) (= x1394 (x996 64 x2849 0)) (= x3061 (x1636 x1394)) (= x2875 352) (= x1096 (x1305 x1394)) (= x1113 false) (= (x1152 1 x2445) x1336)) (or (and (not x2876) (= 0 x1648)) (and x2876 (and (= x1573 (x996 64 x2849 0)) (>= 20282409603651670423947251286015 x2193) (= x2193 x1648) (= (x1305 x1573) x2193))))) x2039) x678))) (=> (and (not x446) (= x1839 0)) x2971)))))
(assert (x2873 x1055))
(assert (= x1907 (=> (and (= x1223 x2998) (= false x2495) (= x1223 (* 10000000000 x1354)) (= x1756 false) (= (+ x2998 x963) x2331)) x2486)))
(assert (x2873 x477))
(assert (x2873 x2298))
(assert (x2873 x613))
(assert (x2873 x1623))
(assert (= x2094 (and x2117 (not x737))))
(assert (x2747 10000000000 x8))
(assert (x322 x381 2))
(assert (x322 x287 2))
(assert (= (and x56 (not x1749)) x33))
(assert (x2873 x447))
(assert (= (or x299 x1355 x1362) x2091))
(assert (= x1582 (or x2603 x940)))
(assert (x2873 x622))
(assert (x2720 x2445))
(assert (x2886 x867))
(assert (x2873 x287))
(assert (x2873 x308))
(assert (= 0 (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639840)))
(assert (x2873 x1913))
(assert (x2873 x2232))
(assert (= (x996 64 x1965 0) (x2864 (x996 64 x1965 0))))
(assert (x2873 x1466))
(assert (x2873 x1682))
(assert (x2873 x2400))
(assert (x2873 x2849))
(assert (x2873 x699))
(assert (not (x2529 (x996 64 x1649 0))))
(assert (x2873 x1528))
(assert (not (x2529 (x996 64 x2108 0))))
(assert (x2873 x306))
(assert (x2873 x2219))
(assert (x2873 x1788))
(assert (= (and x2762 x2235) x2141))
(assert (= (or x49 x3007) x1706))
(assert (x2873 x2503))
(assert (x2873 x2472))
(assert (x2873 x2983))
(assert (x2873 x2715))
(assert (x2873 x519))
(assert (x2873 x1571))
(assert (x2873 x616))
(assert (x2529 953417218992365150631206543442508943947348309705))
(assert (x1692 x1603))
(assert (x2873 x107))
(assert (= (x2864 (x996 64 x2612 0)) (x996 64 x2612 0)))
(assert (x2747 10000000000 x1778))
(assert (= x1073 (=> (and (= (* x1778 10000000000) x746) (= false x2394) (= false x2337) (= x746 x1895) (= (+ x1895 x2315) x2586)) x2174)))
(assert (x2873 x1198))
(assert (= (and (not x1960) x876) x517))
(assert (x2873 x2364))
(assert (x2873 x2092))
(assert (= x1701 (=> (and (= (+ x1146 x1921) x2426) (= x448 false) (= x2223 x1921) (= (* 10000000000 x2135) x2223) (= x602 false)) x566)))
(assert (= (and x257 (not x644)) x2492))
(assert (x2873 x421))
(assert (not (x2529 (x996 64 x1816 0))))
(assert (x2873 x2026))
(assert (x2873 x1044))
(assert (x2873 x1696))
(assert (= (and x518 (not x370)) x2881))
(assert (x2873 x1387))
(assert (x2886 x1470))
(assert (x2873 x293))
(assert (= (and x2183 x115) x1421))
(assert (x2873 x126))
(assert (x2886 x2795))
(assert (x2873 x183))
(assert (x2886 x1822))
(assert (x2720 x742))
(assert (x2873 x2880))
(assert (x2873 x1136))
(assert (x2529 729466174051048026939049150500379070045048658665))
(assert (= x2117 (and (not x1578) x1440)))
(assert (x2873 x485))
(assert (x2873 x1565))
(assert (x2873 x2477))
(assert (x1620 x246))
(assert (= x3017 (and (not x647) x92)))
(assert (x2720 4))
(assert (x2873 x449))
(assert (= (x2864 1867531661) 0))
(assert (x2873 x1619))
(assert (x2747 10000000000 x1217))
(assert (x2873 x1556))
(assert (x2873 x579))
(assert (= (and x132 (not x652)) x1770))
(assert (x1620 x3030))
(assert (x2873 x217))
(assert (x2873 x1017))
(assert (x2720 x2618))
(assert (x2873 x2160))
(assert (x2873 x2258))
(assert (x2873 x2294))
(assert (x2873 x1038))
(assert (x2873 x576))
(assert (x2873 x2628))
(assert (x2873 x728))
(assert (x2873 x829))
(assert (x2747 10000000000 x2148))
(assert (=> (>= 10000 x1649) (= (x2864 x1649) 0)))
(assert (x2873 x2217))
(assert (x1620 x2135))
(assert (x2873 x1618))
(assert (x2873 x760))
(assert (x2873 x955))
(assert (x2873 x822))
(assert (x2747 10000000000 x873))
(assert (x2873 x381))
(assert (x2873 x1215))
(assert (x2873 x2640))
(assert (x2720 x2601))
(assert (x2873 x2315))
(assert (=> (<= x1788 10000) (= 0 (x2864 x1788))))
(assert (= x1862 (=> (and (>= 4722366482869645213695 x683) (= x683 (x534 x1256)) (= (x2895 x1256) x592) (= x1256 (x996 64 x1122 0)) (= x242 (x959 x1256)) (>= 20282409603651670423947251286015 x592) (>= 4722366482869645213695 x242)) x1588)))
(assert (x2873 x926))
(assert (= (or x281 x1757) x1542))
(assert (x2529 3002343453))
(assert (x2873 x680))
(assert (x625 x1136))
(assert (x2873 x904))
(assert (= x2884 (or x327 (and x3029 (not x1436)))))
(assert (= (and x1843 x517) x168))
(assert (= (x2864 953417218992365150631206543442508943947348309705) 0))
(assert (x2873 x2454))
(assert (x322 x1543 2))
(assert (= (=> (and (= x2948 false) (= x1308 x1565) (= x1308 (* 10000000000 x2148)) (= x2030 false) (= x1283 (+ x2093 x1565))) x665) x1763))
(assert (x2873 x15))
(assert (= x1986 (=> (and (= x2946 (* 10000000000 x2772)) (= x1766 x2946) (= false x2674) (= x204 false) (= x877 (+ x1766 x526))) x196)))
(assert (= (and x2540 x1956) x19))
(assert (x2873 x2568))
(assert (= x2017 (or x1000 x2916)))
(assert (= 64 (x141 (x996 64 x2917 0))))
(assert (x2873 x1336))
(assert (= (or x33 x1444) x1802))
(assert (=> (>= 10000 x1965) (= (x2864 x1965) 0)))
(assert (x2873 x3004))
(assert (x625 x2180))
(assert (x2873 x755))
(assert (x2873 x456))
(assert (x625 x2910))
(assert (x2873 x806))
(assert (x1692 x1006))
(assert (x2873 x2885))
(assert (x2873 x1932))
(assert (= 0 (x2864 3002343453)))
(assert (x2873 x2151))
(assert (x2873 x490))
(assert (x2873 x660))
(assert (= (x2864 937288727) 0))
(assert (x2873 x2866))
(assert (x2873 x1690))
(assert (= (=> (and (= x284 x2004) (= x855 false) (= x2637 (+ x284 x837)) (= x346 false) (= x2004 (* x1609 10000000000))) x2486) x1525))
(assert (x2873 x1772))
(assert (x2873 x2228))
(assert (x2873 x1078))
(assert (x625 x738))
(assert (x2873 x2306))
(assert (x2720 x2511))
(assert (x2873 x2695))
(assert (= x756 (and x2132 (not x181))))
(assert (= (and x2474 x1527) x1065))
(assert (x2873 x2511))
(assert (= (and (not x266) x2633) x1000))
(assert (= x2553 (=> (and (= x1318 x1516) (= x2966 false) (= x921 (+ x234 x1318)) (= (* 10000000000 x3040) x1516) (= false x2728)) x2079)))
(assert (x2873 x1922))
(assert (x2873 x219))
(assert (x2873 x2093))
(assert (x2873 x2209))
(assert (x2873 x8))
(assert (x2720 x312))
(assert (x2873 x1167))
(assert (x322 x287 4))
(assert (< (x996 64 x1816 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x322 x2601 4))
(assert (x2873 x2539))
(assert (x2873 x362))
(assert (x2873 x2430))
(assert (= x1123 (and x515 x753)))
(assert (x2873 x32))
(assert (= x2644 (=> (and (= x1502 x930) (= x2277 (+ x2317 x1502)) (= x836 false) (= x610 false) (= x930 (* x1979 10000000000))) x2154)))
(assert (x2873 x1505))
(assert (x2873 x2126))
(assert (x2873 x1114))
(assert (x2873 x762))
(assert (x2873 x3039))
(assert (x2886 x337))
(assert (x2873 x2180))
(assert (= (and x108 x1109) x623))
(assert (= x376 (and x1981 x1535)))
(assert (x2873 x2050))
(assert (x2873 x1590))
(assert (x2873 x2464))
(assert (x2873 x2059))
(assert (x2873 x366))
(assert (= (and x2817 (not x1498)) x838))
(assert (= (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x2873 x2765))
(assert (x2873 x1094))
(assert (= x49 (or x584 x2120 x1461)))
(assert (x2873 x2205))
(assert (= x1165 (and (not x446) x2614)))
(assert (x2873 x473))
(assert (x2873 x2111))
(assert (x2873 x2048))
(assert (not (x2529 (x996 64 x1533 0))))
(assert (x2873 x2082))
(assert (x625 x32))
(assert (x2720 x1433))
(assert (x2873 x1162))
(assert (x983 x3002))
(assert (x2873 x867))
(assert (x2873 x2649))
(assert (= x1944 (and x2932 x1582)))
(assert (x2873 x1439))
(assert (x2873 x314))
(assert (x2873 x1137))
(assert (x2886 x1433))
(assert (x2873 x261))
(assert (x983 x494))
(assert (< 10000 (x996 64 x1816 0)))
(assert (x2873 x1879))
(assert (x2873 x144))
(assert (x2873 x2546))
(assert (= x2280 (or x1431 x360 x1875)))
(assert (x2873 x2435))
(assert (x2873 x661))
(assert (x2873 x2945))
(assert (x2873 x523))
(assert (= (=> (and (= (+ x1357 x2369) x954) (= x1951 false) (= x3042 (* 10000000000 x2546)) (= x3042 x2369) (= x2865 false)) x196) x3008))
(assert (x2720 x2171))
(assert (x2873 x442))
(assert (x2873 x1092))
(assert (= (and (not x2540) x1956) x3007))
(assert (x2873 x1383))
(assert (x2873 x197))
(assert (x2873 x952))
(assert (x2873 x153))
(assert (x2720 x337))
(assert (x2873 x577))
(assert (= x1285 (=> (and (= (not (< 1 x540)) x1856) (= (x1307 x732) x540)) (and x486 x1856))))
(assert (x1430 x1799))
(assert (x2873 x658))
(assert (x2873 x2146))
(assert (x2873 x1060))
(assert (x2886 x488))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x322 x952 2))
(assert (= x2603 (and x1343 x1542)))
(assert (x2873 x87))
(assert (x2873 x2222))
(assert (x2873 x796))
(assert (not (x2529 (x996 64 x2612 0))))
(assert (not (x2529 (x996 64 x618 0))))
(assert (x2873 x743))
(assert (x1692 x2618))
(assert (= (or x1990 x22) x2060))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x2747 10000000000 x3030))
(assert (x2873 x2774))
(assert (x2873 x1296))
(assert (x2873 x791))
(assert (x2873 x2498))
(assert (x2720 x2123))
(assert (= (and x1108 (not x2103)) x1527))
(assert (x2873 x741))
(assert (x2873 x603))
(assert (x2720 x1603))
(assert (x2873 x2250))
(assert (x2873 x2638))
(assert (x2873 x1443))
(assert (= 64 (x141 (x996 64 x1816 67))))
(assert (= x1540 (=> (and (= (+ x2291 x823) x2422) (= x1467 false) (= x823 x1428) (= x2952 false) (= x1428 (* x703 10000000000))) x2863)))
(assert (=> (>= 10000 x2622) (= 0 (x2864 x2622))))
(assert (= (and x882 (not x539)) x832))
(assert (x2873 x1823))
(assert (x2720 x197))
(assert (x1620 x3040))
(assert (x2873 x522))
(assert (= x1965 (x1789 (x996 64 x1965 0))))
(assert (x2873 x888))
(assert (x2873 x2583))
(assert (x2873 x1449))
(assert (x625 x358))
(assert (x2873 x730))
(assert (x2873 x598))
(assert (= (=> (and (and (= x265 false) (= x1268 x2784) (= false x2507) (= x2836 false) (= 36 x850) (= x1252 false)) (and (= x2784 x1463) (and (= x1078 2235288835) (<= 1 x1835) (<= x469 127) (= x1939 1) (= (> x1025 0) x508) (<= 1 x557) (= x1835 (x3036 128)) (= x1549 443215666480553238610125355434898879895743000821) (= (x3036 128) x745) (= x212 false) (= x1797 x2578) (= x585 953417218992365150631206543442508943947348309705) (= x2914 false) (= x2846 729466174051048026939049150500379070045048658665) (= (x1891 x2705) x557) (= x2784 x1797) (= x2240 (x3036 128)) (>= 127 x469) (= x2232 128) (>= x745 2) (= x1025 (x3036 128)) (>= x2240 3)))) (and (=> (and (and (= x2041 (x3036 128)) (= (x1927 160) x2929) (= x3020 256) (>= x2041 1) (= (x1152 1461501637330902918203684832716283019655932542975 x2929) x1719) (= x2007 (= x1719 x500))) x508) (and (=> (and x2007 (and (or (and (= x655 0) (not x1472)) (and (and (>= 20282409603651670423947251286015 x1317) (= (x1305 x2418) x1317) (= x655 x1317) (= x2418 (x996 64 x1797 0))) x1472)) (and (= (x1305 x2159) x934) (<= x2054 4722366482869645213695) (= x1820 1) (= x895 false) (= x729 68) (= (x1636 x2159) x2054) (>= 127 x1066) (= x1566 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= (x1152 2 x72) x2059) (= (x1148 x2159) x72) (>= 127 x1066) (= x1668 x2578) (= x1233 352) (<= 1 x2215) (= x2215 (x1891 x500)) (<= x2151 4722366482869645213695) (>= 20282409603651670423947251286015 x934) (= x788 3002343453) (= x1077 1) (= (x2494 x2159) x2151) (>= 3 x72) (= x3000 false) (= x1472 (= x2059 0)) (= (x996 64 x1797 0) x2159)))) x1947) (=> (and (not x2007) (= x715 (= x160 x1719))) (and (=> (and x715 (and (and (= (x1040 x2676) x2294) (= x316 3002343453) (<= x308 127) (<= x8 4722366482869645213695) (= false x1671) (= x2204 (x1891 x160)) (>= x2204 1) (= x742 (x2499 x2676)) (= (x875 x2676) x8) (= 68 x1136) (= x2796 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x499 352) (<= x308 127) (>= 4722366482869645213695 x1987) (= 1 x2854) (>= 20282409603651670423947251286015 x2294) (= x2676 (x996 64 x1797 0)) (= 1 x1922) (>= 3 x742) (= x2737 (= 0 x510)) (= (x1300 x2676) x1987) (= (x1152 2 x742) x510) (= false x1290) (= x2578 x106)) (or (and (and (= x2539 (x1040 x2229)) (= x2229 (x996 64 x1797 0)) (= x1663 x2539) (>= 20282409603651670423947251286015 x2539)) x2737) (and (= 0 x1663) (not x2737))))) x2207) (=> (and (and (or (and (not x181) (= 0 x340)) (and (and (= (x2415 x1901) x1427) (= x340 x1427) (= (x996 64 x1797 0) x1901) (>= 20282409603651670423947251286015 x1427)) x181)) (and (>= 1461501637330902918203684832716283019655932542975 x1719) (= x736 false) (= (x1737 x2316) x5) (= (x2415 x2316) x419) (= x974 1) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x2260) (= x1361 x1719) (= x1181 (x492 x2316)) (>= x581 1) (= x1925 x2578) (= x2638 3002343453) (>= 127 x2173) (= 68 x2032) (>= x1719 1) (= (x1152 2 x2907) x570) (<= x5 4722366482869645213695) (>= 127 x2173) (>= 20282409603651670423947251286015 x419) (= 1 x3032) (= (x996 64 x1797 0) x2316) (>= 4722366482869645213695 x1181) (>= 3 x2907) (= (= x570 0) x181) (= false x1610) (= x2397 352) (= x581 (x1891 x1361)) (= x2907 (x2965 x2316)))) (not x715)) x2414))))) (=> (and (= x632 0) (not x508)) x1957))) x3031))
(assert (x2873 x1567))
(assert (x2873 x3064))
(assert (x2873 x2934))
(assert (x2873 x2449))
(assert (x2873 x2283))
(assert (x322 x1226 1461501637330902918203684832716283019655932542976))
(assert (x2873 x464))
(assert (x2873 x1386))
(assert (x2873 x1699))
(assert (x2873 x2789))
(assert (x2873 x1182))
(assert (x2873 x586))
(assert (x2873 x2484))
(assert (x2873 x2086))
(assert (= (or x2141 x907) x848))
(assert (x2873 x1703))
(assert (= x2622 (x1789 (x996 64 x2622 0))))
(assert (x2873 x2556))
(assert (x2873 x683))
(assert (x2873 x1928))
(assert (= x2970 (and (not x2341) x501)))
(assert (x2873 x359))
(assert (= (and (not x753) x515) x1145))
(assert (= (x676 (x996 64 x1559 0)) 0))
(assert (= (x2864 2235288835) 0))
(assert (= x2235 (and (not x2932) x1582)))
(assert (x2873 x2894))
(assert (x2873 x211))
(assert (x2873 x450))
(assert (= x335 (=> (and (and (and (= x650 1) (= 128 x1726) (= (x2127 128) x1831) (= false x3019) (= x775 2235288835) (= x2955 729466174051048026939049150500379070045048658665) (= x888 (x1891 x2705)) (<= 2 x1847) (= 443215666480553238610125355434898879895743000821 x1897) (= false x412) (= x2826 x1533) (<= 3 x1831) (= (x2127 128) x1529) (<= 1 x888) (<= x1011 127) (= x1847 (x2127 128)) (= x2605 x1533) (>= 127 x1011) (<= 1 x1529) (= x61 953417218992365150631206543442508943947348309705) (= x520 (> x923 0)) (= x923 (x2127 128))) (= x2826 x2281)) (and (= false x2286) (= x65 x2826) (= x1312 false) (= x1612 false) (= x1291 36) (= false x1765))) (and (=> (and (and (= (x1152 1461501637330902918203684832716283019655932542975 x2449) x2471) (>= x2675 1) (= x2161 (= x2471 x500)) (= 256 x1751) (= x2449 (x3048 160)) (= (x2127 128) x2675)) x520) (and (=> (and (= (= x2471 x160) x2700) (not x2161)) (and (=> (and (and (and (>= 4722366482869645213695 x1133) (<= x344 20282409603651670423947251286015) (<= 1 x2471) (>= 127 x664) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x171) (= x884 false) (= x1682 68) (<= x664 127) (= 352 x2551) (= false x458) (= (x2599 x684) x1133) (= x2601 (x826 x684)) (<= x2471 1461501637330902918203684832716283019655932542975) (= x374 1) (= 1 x1153) (= x1361 x2471) (= (x996 64 x1533 0) x684) (= (x976 x684) x362) (<= 1 x349) (= 3002343453 x1455) (= x2605 x317) (= x1282 (= 0 x1399)) (<= x362 4722366482869645213695) (<= x2601 3) (= x349 (x1891 x1361)) (= x344 (x2016 x684)) (= (x1152 2 x2601) x1399)) (or (and (not x1282) (= 0 x2385)) (and (and (>= 20282409603651670423947251286015 x1575) (= x1575 (x2016 x2085)) (= x2385 x1575) (= (x996 64 x1533 0) x2085)) x1282))) (not x2700)) x1475) (=> (and x2700 (and (or (and x1418 (and (= x2450 (x1040 x1247)) (= x1247 (x996 64 x1533 0)) (<= x2450 20282409603651670423947251286015) (= x843 x2450))) (and (not x1418) (= x843 0))) (and (= x2645 (x1891 x160)) (<= x2113 127) (<= 1 x2645) (= x2242 (x875 x80)) (= x764 (x1300 x80)) (= x2605 x1959) (>= 20282409603651670423947251286015 x1690) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x750) (= (x2499 x80) x197) (= (x1040 x80) x1690) (= x1009 false) (= (x996 64 x1533 0) x80) (= 3002343453 x2005) (<= x2113 127) (= x1767 1) (= 68 x791) (= 1 x1570) (= x2073 false) (>= 4722366482869645213695 x764) (<= x2242 4722366482869645213695) (<= x197 3) (= x1198 (x1152 2 x197)) (= 352 x614) (= (= x1198 0) x1418)))) x1458))) (=> (and x2161 (and (or (and (= 0 x2972) (not x108)) (and x108 (and (= (x996 64 x1533 0) x546) (= (x1305 x546) x268) (>= 20282409603651670423947251286015 x268) (= x268 x2972)))) (and (<= x613 127) (<= x613 127) (>= 20282409603651670423947251286015 x2894) (= x2892 (x996 64 x1533 0)) (<= x1190 4722366482869645213695) (= x1232 352) (= 1 x559) (= x32 68) (= x1190 (x2494 x2892)) (= x1678 (x1636 x2892)) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x1653) (= (x1891 x500) x439) (= (x1305 x2892) x2894) (= x108 (= x427 0)) (= x2654 false) (= 3002343453 x1092) (= x1915 x2605) (>= 3 x1799) (= (x1148 x2892) x1799) (>= x439 1) (= false x35) (= (x1152 2 x1799) x427) (>= 4722366482869645213695 x1678) (= x2604 1)))) x893))) (=> (and (not x520) (= 0 x2825)) x977)))))
(assert (x2873 x1750))
(assert (x169 x1713))
(assert (x2873 x1154))
(assert (x2873 x1133))
(assert (x2873 x1950))
(assert (x1692 x2123))
(assert (x2873 x3061))
(assert (x2873 x2204))
(assert (x2747 10000000000 x2546))
(assert (x2873 x2780))
(assert (x2873 x1388))
(assert (= (and x74 (not x1599)) x2548))
(assert (x1430 x2907))
(assert (> (x996 64 x2108 0) 10000))
(assert (x2720 x50))
(assert (x2873 x1181))
(assert (x2873 x2777))
(assert (x2873 x2116))
(assert (= (or x558 x2144) x1320))
(assert (= 64 (x141 (x996 64 x1788 0))))
(assert (x169 x2537))
(assert (x2747 10000000000 x1354))
(assert (= (x996 64 x618 0) (x2864 (x996 64 x618 0))))
(assert (= (and x1418 x1848) x480))
(assert (x2873 x253))
(assert (= (x1789 (x996 64 x1559 0)) x1559))
(assert (x2873 x589))
(assert (x2720 x2319))
(assert (x2873 x865))
(assert (x2873 x2170))
(assert (x2873 x1349))
(assert (x2873 x2138))
(assert (x2873 x1536))
(assert (x2873 x1195))
(assert (x2873 x1515))
(assert (= (and x2682 x2785) x714))
(assert (x2873 x1446))
(assert (x2873 x2907))
(assert (x2873 x208))
(assert (x2873 x2197))
(assert (x2873 x1580))
(assert (x2873 x2987))
(assert (=> (<= x1361 10000) (= (x2864 x1361) 0)))
(assert (x1430 x50))
(assert (x2873 x2202))
(assert (x2873 x1039))
(assert (x2873 x772))
(assert (x2873 x686))
(assert (= x1082 (=> (and (= (x606 x695) x404) (= (x2757 x695) x1090) (= (x2792 x695) x2947) (>= 4722366482869645213695 x404) (>= 4722366482869645213695 x2947) (= (x996 64 x2108 0) x695) (= x1721 x1115) (<= x1090 20282409603651670423947251286015)) x767)))
(assert (x2873 x2271))
(assert (x2873 x1435))
(assert (x2873 x62))
(assert (x2747 10000000000 x406))
(assert (x2873 x3054))
(assert (x625 x1824))
(assert (x2873 x3001))
(assert (x2720 x1799))
(assert (= x55 (=> (and (= x1471 false) (= x1686 x202) (= (+ x71 x1686) x2782) (= (* x406 10000000000) x202) (= false x809)) x2358)))
(assert (x1692 x2116))
(assert (x2873 x782))
(assert (x2873 x2410))
(assert (= 0 (x676 (x996 64 x2612 0))))
(assert (x2873 x2178))
(assert (= x1768 (or x213 x184)))
(assert (x2873 x2397))
(assert (x2873 x1924))
(assert (x2873 x1357))
(assert (x2873 x1915))
(assert (x2873 x494))
(assert (x2886 x952))
(assert (= x2928 (or x3067 x2582)))
(assert (= (and x2274 x1185) x2709))
(assert (x2873 x2173))
(assert (x2873 x2741))
(assert (x2873 x729))
(assert (= (x996 64 x1816 66) (x2864 (x996 64 x1816 66))))
(assert (x2873 x2524))
(assert (= (or x3024 x945) x1773))
(assert (x2873 x2843))
(assert (x625 x1673))
(assert (x2886 x2116))
(assert (x2873 x1317))
(assert (x2873 x2560))
(assert (x2873 x816))
(assert (x1692 x1822))
(assert (x2873 x764))
(assert (x1692 x2319))
(assert (x2873 x638))
(assert (= (or x2736 x935) x1461))
(assert (x322 x1327 4))
(assert (x2873 x655))
(assert (x322 x2445 2))
(assert (x2873 x1253))
(assert (x2873 x461))
(assert (x2873 x52))
(assert (= (x2864 (x996 64 x2849 0)) (x996 64 x2849 0)))
(assert (x2873 x1517))
(assert (x2873 x775))
(assert (x2873 x2648))
(assert (x2873 x1474))
(assert (= x2486 (=> (and (= x2496 (x2336 128)) (= (x1107 256) x527) (= x1781 (not (< 1 x2496)))) (and (=> (= x2941 x527) x335) x1781))))
(assert (x2747 10000000000 x1868))
(assert (x2873 x2998))
(assert (x2873 x2135))
(assert (x2873 x708))
(assert (x2873 x1850))
(assert (x2873 x243))
(assert (x2873 x2176))
(assert (x2873 x938))
(assert (= (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639932) 0))
(assert (= x2296 (=> (= (= 0 x2112) x647) (and (=> (and (not x647) (and (= x1528 192) (>= x1748 1) (= x1748 (x1135 192)))) x2958) (=> (and x647 (and (= x906 (x2669 (- x1651 953417218992365150631206543442508943947348309705))) (= x394 953417218992365150631206543442508943947348309705) (= (> x906 0) x663))) (and (=> (and x663 (= x523 96)) x2687) (=> (and (not x663) (and (<= 2 x53) (= x1528 192) (>= x2922 1) (= (x2693 192) x53) (= (x2693 192) x2922))) x2958)))))))
(assert (x2873 x669))
(assert (x1692 x1470))
(assert (x2873 x2497))
(assert (x2873 x2955))
(assert (x2873 x1323))
(assert (x2873 x619))
(assert (x2873 x799))
(assert (x2873 x301))
(assert (x2873 x1392))
(assert (= (and (not x1595) x1970) x1359))
(assert (x2873 x721))
(assert (= x2142 (and x2835 (not x1512))))
(assert (x2873 x917))
(assert (x2873 x1759))
(assert (x2873 x1614))
(assert (x625 x2361))
(assert (x2873 x2317))
(assert (x2873 x63))
(assert (x2873 x20))
(assert (= (and (not x520) x1768) x472))
(assert (x2873 x732))
(assert (x2873 x1724))
(assert (x2873 x2962))
(assert (x2873 x2434))
(assert (= (or x3028 x78) x2398))
(assert (x2873 x71))
(assert (= x1661 (and (not x973) x794)))
(assert (x2873 x23))
(assert (x2873 x786))
(assert (= (and x2614 x446) x1487))
(assert (= (=> (and (= x2417 false) (= (+ x2801 x655) x2424) (= x2801 x898) (= x2565 false) (= (* 10000000000 x2151) x898)) x2252) x1947))
(assert (= (x2864 (x996 64 x1533 0)) (x996 64 x1533 0)))
(assert (x2873 x3045))
(assert (= x597 (or x1065 x339)))
(assert (x2873 x541))
(assert (x322 x197 4))
(assert (x2873 x673))
(assert (x2873 x1115))
(assert (= (x1789 (x996 64 x2612 0)) x2612))
(assert (x2873 x818))
(assert (x2873 x2253))
(assert (x2873 x2077))
(assert (x2720 x2990))
(assert (x2873 x13))
(assert (x2873 x1433))
(assert (x2720 x1006))
(assert (= 0 (x676 (x996 64 x1122 0))))
(assert (= (=> (and (= (x996 64 x1788 0) x797) (= x217 (x190 x797)) (= (x2415 x797) x416) (<= x217 4722366482869645213695) (= x371 768) (<= x416 20282409603651670423947251286015) (>= 4722366482869645213695 x2503) (= (x911 x797) x2503)) x43) x2191))
(assert (x2873 x712))
(assert (x1692 x867))
(assert (x2529 10000000000))
(assert (x2873 x338))
(assert (x2720 x1327))
(assert (x2873 x2500))
(assert (x2873 x1562))
(assert (x2873 x1532))
(assert (= x1271 (and x1112 x154)))
(assert (x2873 x2591))
(assert (x2873 x1648))
(assert (x2873 x2112))
(assert (x2873 x1662))
(assert (x2873 x2634))
(assert (x2873 x1066))
(assert (x2873 x2373))
(assert (= (and (not x147) x1706) x713))
(assert (x2720 x952))
(assert (x2873 x1852))
(assert (= (and (not x2775) x1080) x2682))
(assert (x2873 x1906))
(assert (= x184 (and x2346 (not x1675))))
(assert (x2873 x703))
(assert (x2873 x529))
(assert (x322 x2601 2))
(assert (x169 x488))
(assert (= (x1789 (x996 64 x1533 0)) x1533))
(assert (x625 x536))
(assert (x2873 x812))
(assert (x2873 x627))
(assert (x2873 x336))
(assert (x2873 x403))
(assert (x2873 x2282))
(assert (x1692 x2171))
(assert (x2886 x2664))
(assert (x2873 x950))
(assert (x2873 x618))
(assert (= (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639837) 0))
(assert (= x1988 (and x1316 x2433)))
(assert (x2529 2235288835))
(assert (x2529 1867531661))
(assert (x2873 x1886))
(assert (x2886 x522))
(assert (= x1687 (=> (= x2932 (= (ite x2762 1 0) (ite x2931 1 0))) (and (=> x2932 x1588) (=> (and (not x2932) (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x2210)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x2210)) (<= x2210 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2210 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x2210 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x932 (+ x2210 96)) x2302) (< x2210 x2302) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x2210))) (or (and x2762 (and (= (+ 1 x46) x477) (= (x2961 x1822 x477) x174))) (and (and (= x1510 (x1152 x1822 x1159)) (= x1510 x174) (= x1159 (- 2 x46))) (not x2762))))) x1862)))))
(assert (x2873 x2807))
(assert (= (or x88 x1234) x794))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x996 64 x1624 0)))
(assert (x2873 x3013))
(assert (x983 x1199))
(assert (= (x2864 (x996 64 x1649 0)) (x996 64 x1649 0)))
(assert (= (x676 (x996 64 x2108 0)) 0))
(assert (x2873 x419))
(assert (x2873 x1130))
(assert (x2873 x1496))
(assert (= x578 (and x1596 x1754)))
(assert (= x2582 (and x2190 (not x1049))))
(assert (x2873 x1501))
(assert (x2873 x3021))
(assert (x2873 x1052))
(assert (x2873 x1798))
(assert (< (x996 64 x1559 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1087 x2931) x1468))
(assert (x2873 x891))
(assert (= x2359 (and x225 (not x1917))))
(assert (= (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639714) 0))
(assert (x1430 x742))
(assert (= (x676 (x996 64 x1624 0)) 0))
(assert (= (and x1846 x158) x1426))
(assert (= x642 (and x2817 x1498)))
(assert (x2873 x326))
(assert (x2873 x66))
(assert (= (or x2091 x1834) x1169))
(assert (x2873 x864))
(assert (x2873 x2748))
(assert (x2873 x2646))
(assert (x2873 x2022))
(assert (x2747 10000000000 x2593))
(assert (x2873 x2225))
(assert (x2873 x2475))
(assert (x2873 x947))
(assert (x1620 x782))
(assert (x2873 x2600))
(assert (x2873 x2563))
(assert (x322 x2929 1461501637330902918203684832716283019655932542976))
(assert (= (and x1123 x1093) x74))
(assert (x2873 x54))
(assert (x2873 x885))
(assert (x2873 x156))
(assert (= (x1789 (x996 64 x1649 0)) x1649))
(assert (x2873 x2552))
(assert (x2886 x1226))
(assert (x2873 x2291))
(assert (x322 x50 4))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639932))
(assert (x2873 x2641))
(assert (= (=> (and (= x1166 (ite x295 x2941 x2825)) (= x291 x1166) (= x2842 (and x1301 x2058)) (= x2320 x1601) (= x1071 false) (= x2058 (and x1018 x2528)) (= x2312 x1132) (= false x2212) (= false x491) (= x2393 x1774) (= x1008 x2662) (= x3049 x1493) (= x1411 x291) (= x1018 (<= x2320 x1493)) (= x1083 false) (= x1301 (>= x2662 x1411)) (= (<= x1774 x1132) x2528)) x2842) x977))
(assert (x2720 x867))
(assert (x2873 x2622))
(assert (x2873 x943))
(assert (= (x2864 (x996 64 x1122 67)) (x996 64 x1122 67)))
(assert (x2873 x1470))
(assert (= x1872 (or x2443 x1170 x2025)))
(assert (x2873 x1204))
(assert (=> (>= 10000 x500) (= 0 (x2864 x500))))
(assert (= x3067 (and x2190 x1049)))
(assert (x2873 x394))
(assert (= x90 (or x138 x2303)))
(assert (x2873 x207))
(assert (= x178 (=> (and (= (* x3030 10000000000) x1003) (= x433 x1003) (= false x1151) (= false x929) (= (+ x433 x2454) x1143)) x2486)))
(assert (x322 x381 4))
(assert (=> (<= x2705 10000) (= (x2864 x2705) 0)))
(assert (x2873 x1032))
(assert (x2873 x2941))
(assert (not (x2529 (x996 64 x1816 67))))
(assert (x2873 x2530))
(assert (x2873 x1196))
(assert (x2873 x2731))
(assert (x2886 x312))
(assert (x2873 x581))
(assert (x2720 x1676))
(assert (= x1441 (or x16 x2608)))
(assert (x2873 x2773))
(assert (x2873 x1096))
(assert (x2873 x150))
(assert (x2873 x2448))
(assert (x2873 x2041))
(assert (x2873 x1205))
(assert (x2873 x2698))
(assert (= (=> (and (and (and (and (and (and (= x1393 937288727) (<= 1 x2783) (= 729466174051048026939049150500379070045048658665 x970) (= x1177 false) (= x2555 x2576) (= x2783 (x1891 x2705)) (= x3010 (= 729466174051048026939049150500379070045048658665 x2859)) (= false x1367) (<= x1997 127) (= x2859 x206) (>= 127 x1997)) (or (and (not x3010) (and (= 443215666480553238610125355434898879895743000821 x953) (= (ite (= x2859 443215666480553238610125355434898879895743000821) 1 0) x2525))) (and (= (ite x3010 1 0) x2525) x3010))) (= x2555 x2068)) (= x2859 x500)) (= x773 x500)) (and (= false x2647) (= x710 false) (= (and x2788 x858) x221) (= 68 x1908) (= x2555 x2363) (= (ite (not (= x845 0)) 1 0) x338) (= (not (= x338 0)) x858) (= false x2432) (= false x1646))) x1448) x583))
(assert (x1692 x698))
(assert (x1430 x952))
(assert (= x91 (=> (and (= x2571 x2954) (= (+ x1167 x2571) x920) (= (* 10000000000 x782) x2954) (= false x462) (= false x2273)) x2154)))
(assert (x2873 x2421))
(assert (x2873 x910))
(assert (x322 x698 2))
(assert (x2873 x877))
(assert (x1620 x2242))
(assert (x2873 x385))
(assert (x1620 x2148))
(assert (= (x141 (x996 64 x2612 0)) 64))
(assert (x2873 x2281))
(assert (x2873 x1987))
(assert (x2720 x1470))
(assert (< (x996 64 x1788 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2873 x802))
(assert (x2873 x718))
(assert (x2873 x1719))
(assert (x2873 x177))
(assert (x322 x908 4))
(assert (x2873 x2626))
(assert (= x1440 (and x2355 (not x2942))))
(assert (< (x996 64 x1122 67) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2873 x2456))
(assert (x2873 x1010))
(assert (x2720 x2556))
(assert (x2873 x1579))
(assert (x625 x150))
(assert (= (and x2761 x696) x296))
(assert (= 64 (x141 (x996 64 x1649 0))))
(assert (= (x996 64 x1797 0) (x2864 (x996 64 x1797 0))))
(assert (x2873 x3037))
(assert (x2873 x2979))
(assert (x2873 x1407))
(assert (x2873 x2149))
(assert (x2873 x2508))
(assert (x2873 x439))
(assert (= x1366 (and x841 x2994)))
(assert (= x641 (and x2531 (not x2876))))
(assert (x2873 x868))
(assert (x2873 x2351))
(assert (x2873 x2224))
(assert (x2873 x404))
(assert (x2873 x2461))
(assert (x2873 x2419))
(assert (x2747 10000000000 x1515))
(assert (x2873 x1921))
(assert (x2873 x2042))
(assert (x2873 x406))
(assert (x2873 x244))
(assert (x2873 x3044))
(assert (x2873 x2889))
(assert (= x1658 (=> (= x1846 (= x2222 0)) (and (=> (and x1846 (and (= x506 953417218992365150631206543442508943947348309705) (= (x2669 (- x1156 953417218992365150631206543442508943947348309705)) x2386) (= x1555 (> x2386 0)))) (and (=> (and (and (= (x2776 192) x616) (= x223 192) (>= x616 1) (= (x2776 192) x489) (>= x489 2)) (not x1555)) x1722) (=> (and x1555 (= 96 x732)) x2384))) (=> (and (and (= (x393 192) x2475) (= x223 192) (<= 1 x2475)) (not x1846)) x1722)))))
(assert (x2873 x807))
(assert (x2873 x1397))
(assert (x2873 x1679))
(assert (x2873 x2882))
(assert (x2873 x978))
(assert (x2720 x2929))
(assert (= (x996 64 x2917 0) (x2864 (x996 64 x2917 0))))
(assert (x322 x197 2))
(assert (= x1431 (or x14 x42)))
(assert (x2886 1))
(assert (x2873 x1963))
(assert (x2873 x397))
(assert (x2873 x1609))
(assert (x2873 x246))
(assert (x2873 x1885))
(assert (= x230 (and x2003 x1366)))
(assert (not (x2529 (x996 64 x1788 0))))
(assert (x2873 x1401))
(assert (= x94 (x1789 (x996 64 x94 0))))
(assert (= x1109 (and x2542 x2161)))
(assert (x2873 x2705))
(assert (x322 x2795 1461501637330902918203684832716283019655932542976))
(assert (= x1834 (and x1087 (not x2931))))
(assert (x2873 x312))
(assert (= (and (not x1888) x123) x187))
(assert (x2873 x3055))
(assert (x2873 x1232))
(assert (x2873 x2706))
(assert (x2873 x175))
(assert (x2873 x1353))
(assert (x2873 x2950))
(assert (= (=> (and (= (+ x1313 x2517) x2498) (= x2897 false) (= x1313 x2451) (= false x2175) (= x2451 (* 10000000000 x1335))) x2079) x1760))
(assert (x2873 x547))
(assert (x625 x1161))
(assert (x2873 x2825))
(assert (= (and x647 x92) x2150))
(assert (x2873 x1399))
(assert (x2873 x242))
(assert (x1620 x1609))
(assert (= (=> (and (= x1900 (* 10000000000 x2830)) (= x1900 x1053) (= false x2615) (= x1503 (+ x589 x1053)) (= x2338 false)) x2863) x682))
(assert (x2873 x278))
(assert (x2873 x964))
(assert (= (and x257 x644) x1937))
(assert (x2873 x2627))
(assert (x2873 x255))
(assert (x322 x952 4))
(assert (x2873 x823))
(assert (x2873 x1999))
(assert (x2873 x1786))
(assert (< (x996 64 x2612 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x832 x41) x1351))
(assert (= (or x2492 x1937) x189))
(assert (x2873 x2270))
(assert (x2873 x2604))
(assert (x2873 x1735))
(assert (x2873 x2827))
(assert (x2873 x340))
(assert (x2873 x1393))
(assert (x625 x2769))
(assert (x2873 x427))
(assert (x2873 x1546))
(assert (= (and (not x2007) x2781) x726))
(assert (= (or x60 x2311) x2043))
(assert (x2873 x2115))
(assert (x2873 x1570))
(assert (x2873 x209))
(assert (= (=> (and (= x320 (* 10000000000 x8)) (= x2049 false) (= x671 x320) (= (+ x1663 x671) x707) (= x1068 false)) x2252) x2207))
(assert (= (x1789 (x996 64 x1122 66)) x1122))
(assert (x2873 x329))
(assert (not (x2529 (x996 64 x1816 66))))
(assert (x2873 x438))
(assert (> (x996 64 x1816 66) 10000))
(assert (x2873 x1356))
(assert (x2873 x188))
(assert (x2873 x1821))
(assert (x2720 x381))
(assert (x2873 x711))
(assert (= (x676 (x996 64 x94 0)) 0))
(assert (= (x2864 1461501637330902918203684832716283019655932542975) 0))
(assert (x2873 x2375))
(assert (x2873 x499))
(assert (x2873 x1708))
(assert (= x2818 (=> (and (= x2233 false) (= x1717 (* 10000000000 x2804)) (= (+ x2632 x1212) x2057) (= x1717 x2632) (= false x2656)) x85)))
(assert (x2873 x239))
(assert (= x2402 (and x2409 (not x1091))))
(assert (= (and (not x2844) x1832) x2311))
(assert (=> (<= x2849 10000) (= (x2864 x2849) 0)))
(assert (x2873 x2331))
(assert (x2873 x3025))
(assert (x2873 x2276))
(assert (x2873 x2782))
(assert (x2873 x2996))
(assert (x625 x850))
(assert (x2886 x1543))
(assert (x322 x2449 1461501637330902918203684832716283019655932542976))
(assert (x2873 x557))
(assert (= x443 (or x1944 x848)))
(assert (x905 x1822 x477))
(assert (= (and x1844 x2118) x833))
(assert (x2873 x866))
(assert (x2873 x451))
(assert (x2529 3700653596))
(assert (= x2183 (and x1486 (not x1239))))
(assert (x1692 x2445))
(assert (x2873 x871))
(assert (= x940 (and x1542 (not x1343))))
(assert (x1430 x522))
(assert (< 10000 (x996 64 x1122 67)))
(assert (x2873 x2852))
(assert (x625 x473))
(assert (x2873 x2637))
(assert (x2873 x2816))
(assert (x2873 x1868))
(assert (= (and (not x2480) x2398) x624))
(assert (x1620 10000000000))
(assert (= (=> (and (= x3026 (not (< 1 x1670))) (= (x1707 128) x1670) (= (x894 256) x405)) (and (=> (= x73 x405) x2221) x3026)) x85))
(assert (x2873 x2875))
(assert (x2873 x719))
(assert (x2873 x1559))
(assert (x2747 10000000000 x2830))
(assert (x2873 x1242))
(assert (x2873 x9))
(assert (x2873 x2481))
(assert (= (x1789 (x996 64 x1788 0)) x1788))
(assert (= x876 (and x2694 x2322)))
(assert (x2873 x3014))
(assert (= (and x102 x1468) x299))
(assert (x2873 x2740))
(assert (x2873 x1873))
(assert (x2873 x2163))
(assert (x2873 x2037))
(assert (= (or x597 x90) x2614))
(assert (= (=> (and (= x2271 (+ x2018 x1142)) (= x355 x1142) (= false x109) (= x355 (* x1383 10000000000)) (= x2156 false)) x2079) x1948))
(assert (x2873 x1051))
(assert (x2873 x235))
(assert (= 64 (x141 (x996 64 x1816 0))))
(assert (x2873 x2586))
(assert (x2873 x909))
(assert (x2873 x374))
(assert (x2873 x2923))
(assert (= (x1789 (x996 64 x1816 66)) x1816))
(assert (= 0 (x2864 3700653596)))
(assert (= x2760 (and x537 x3046)))
(assert (not (x2529 (x996 64 x1122 66))))
(assert (= x1875 (or x2881 x1183)))
(assert (x2720 x1537))
(assert (x2873 x765))
(assert (x2873 x2496))
(assert (= x1350 (=> (and (= x285 x2436) (= (+ x2436 x1325) x751) (= x285 (* x1693 10000000000)) (= x2522 false) (= false x2665)) x196)))
(assert (= x1602 (and (not x1535) x1981)))
(assert (x2873 x1318))
(assert (x2873 x2851))
(assert (x2873 x305))
(assert (x2886 x2171))
(assert (x2873 x1905))
(assert (= (x141 (x996 64 x1122 67)) 64))
(assert (x2529 1461501637330902918203684832716283019655932542975))
(assert (x2873 x1481))
(assert (x2873 x2220))
(assert (x2873 x844))
(assert (< 10000 (x996 64 x1122 0)))
(assert (= x2166 (and x181 x2132)))
(assert (x2873 x1865))
(assert (x2873 x358))
(assert (x2873 x2186))
(assert (x2873 x1822))
(assert (x2873 x2265))
(assert (= (and x517 (not x1843)) x132))
(assert (x2873 x1126))
(assert (x2873 x1212))
(assert (x2873 x1281))
(assert (x2873 x941))
(assert (x2873 x2967))
(assert (x2873 x1266))
(assert (= (x676 (x996 64 x1788 0)) 0))
(assert (x2873 x667))
(assert (x2873 x1849))
(assert (x2873 x1641))
(assert (x2873 x2098))
(assert (x2873 x277))
(assert (x1430 x908))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x996 64 x618 0)))
(assert (x2873 x1929))
(assert (x2873 x773))
(assert (x2720 x522))
(assert (x2873 x57))
(assert (= x281 (and x1169 (not x2762))))
(assert (x2873 x923))
(assert (x2873 x1409))
(assert (x2873 x2348))
(assert (x2873 x2664))
(assert (x2873 x1633))
(assert (x2873 x2610))
(assert (x2873 x1062))
(assert (x2873 x371))
(assert (= 64 (x141 (x996 64 x2108 0))))
(assert (x2873 x185))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639619))
(assert (x2873 x902))
(assert (x2873 x540))
(assert (x2873 x999))
(assert (x2873 x1193))
(assert (x2873 x493))
(assert (x1430 x337))
(assert (x2873 x1335))
(assert (x2873 x349))
(assert (x2873 x2721))
(assert (x2873 x1263))
(assert (x2873 x691))
(assert (x2873 x5))
(assert (x2873 x416))
(assert (= (=> (and (and (and (= (x1707 128) x2889) (= x1624 x2136) (= x1864 3993797972) (= x1624 x453) (<= 1 x2889) (= x1702 (x1707 128)) (= x2994 (< 0 x334)) (= 443215666480553238610125355434898879895743000821 x1641) (<= 2 x1702) (= false x2739) (= (x1891 x2705) x1606) (= x334 (x1707 128)) (= x2051 false) (= x3062 128) (= x943 (x1707 128)) (= x2524 729466174051048026939049150500379070045048658665) (<= 1 x1606) (>= 127 x3013) (>= 127 x3013) (= x330 0) (<= 3 x943) (= x3018 953417218992365150631206543442508943947348309705)) (= x453 x918)) (and (= false x1896) (= (= 0 x1881) x830) (= x795 false) (= x302 x2312) (= x1755 x250) (= x1999 x2178) (= x89 36) (= x1755 x1790) (= x1999 x2306) (= x1881 x2306) (= false x1138) (= x302 (ite x690 x718 x632)) (= x1400 false) (= x1790 x453))) (and (=> (and x2994 (and (= x488 (x292 160)) (= x2726 (x1152 1461501637330902918203684832716283019655932542975 x488)) (= x1449 256) (= x2003 (= x500 x2726)) (>= x175 1) (= x175 (x1707 128)))) (and (=> (and x2003 (and (or (and (and (= x706 (x996 64 x1624 0)) (= x1007 x1212) (= (x1305 x706) x1007) (<= x1007 20282409603651670423947251286015)) x2629) (and (= 0 x1212) (not x2629))) (and (= 68 x1386) (= x2804 (x1636 x2589)) (= x1953 (x2494 x2589)) (= (x996 64 x1624 0) x2589) (= x3012 false) (<= x698 3) (<= x2804 4722366482869645213695) (= x866 352) (= x2885 0) (= x1127 x2413) (<= x264 127) (<= x264 127) (= (x1891 x500) x1191) (= x2172 0) (= x1963 (x1152 1 x698)) (= (x1148 x2589) x698) (= x2136 x1127) (= x2621 false) (<= 1 x1191) (>= 4722366482869645213695 x1953) (= x2566 3002343453) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x1746) (<= x144 20282409603651670423947251286015) (= x144 (x1305 x2589)) (= (= 0 x1963) x2629)))) x2818) (=> (and (not x2003) (= (= x160 x2726) x2857)) (and (=> (and (and (and (= x1315 false) (<= x388 127) (= x2118 (= 0 x396)) (= 0 x465) (>= 4722366482869645213695 x1531) (= x2992 80943019369348893552279777061565613435472460254630153415513390446397355982848) (<= x423 20282409603651670423947251286015) (= x423 (x1040 x2267)) (= x2563 x2497) (>= 3 x2116) (= 3002343453 x1775) (= x2136 x2563) (= x2558 68) (= x1067 352) (= x1943 false) (= x1392 (x1891 x160)) (= (x996 64 x1624 0) x2267) (>= x1392 1) (= x2116 (x2499 x2267)) (= x1803 0) (= (x875 x2267) x1531) (>= 127 x388) (= (x1300 x2267) x2219) (<= x2219 4722366482869645213695) (= (x1152 1 x2116) x396)) (or (and x2118 (and (= x628 x107) (= x1809 (x996 64 x1624 0)) (= x628 (x1040 x1809)) (<= x628 20282409603651670423947251286015))) (and (= x107 0) (not x2118)))) x2857) x2479) (=> (and (not x2857) (and (and (<= x2543 127) (= x1818 0) (= x2600 (x1737 x2063)) (>= 4722366482869645213695 x2600) (>= x2763 1) (= x867 (x2965 x2063)) (>= 4722366482869645213695 x873) (= x1263 x3044) (= (= 0 x2481) x3046) (= (x1891 x1361) x2763) (= x2481 (x1152 1 x867)) (= x2726 x1361) (<= x999 20282409603651670423947251286015) (= false x2162) (>= x2726 1) (<= x867 3) (= false x2028) (= (x996 64 x1624 0) x2063) (<= x2543 127) (= x1051 352) (= (x492 x2063) x873) (= (x2415 x2063) x999) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x2771) (<= x2726 1461501637330902918203684832716283019655932542975) (= x1263 x2136) (= x2483 3002343453) (= 0 x1385) (= x536 68)) (or (and x3046 (and (= x786 x3027) (= (x996 64 x1624 0) x1866) (<= x3027 20282409603651670423947251286015) (= (x2415 x1866) x3027))) (and (= 0 x786) (not x3046))))) x1984))))) (=> (and (= 0 x73) (not x2994)) x2221))) x1957))
(assert (x2873 x1871))
(assert (= x870 (and x642 x157)))
(assert (x2873 x3009))
(assert (= (x2864 (x996 64 x1788 0)) (x996 64 x1788 0)))
(assert (x2873 x1283))
(assert (= x213 (or x498 x2017 x1978)))
(assert (x2873 x880))
(assert (x2873 x2450))
(assert (x2873 x2580))
(assert (x2886 x1799))
(assert (= x2391 (or x623 x2786)))
(assert (x2873 x2697))
(assert (= x3029 (or x364 x17)))
(assert (x2886 x2123))
(assert (x2873 x1815))
(assert (= x154 (and x2139 x2201)))
(assert (x2873 x1476))
(assert (= (=> (and (= (+ x1648 x293) x1577) (= x1952 false) (= false x2187) (= x1216 (* x3061 10000000000)) (= x1216 x293)) x566) x678))
(assert (= (and x1487 (not x2039)) x501))
(assert (= 0 (x2864 3993797972)))
(assert (x2873 x2636))
(assert (x2873 x2319))
(assert (x2873 x2949))
(assert (x2873 x262))
(assert (x2873 x2195))
(assert (x2873 x2172))
(assert (= x2958 (=> (= x523 x1528) x2687)))
(assert (x2873 x526))
(assert (x2886 x1006))
(assert (x2873 x2436))
(assert (= x2750 (and x470 (not x2700))))
(assert (= x2307 (and x1992 x2021)))
(assert (x2873 x2859))
(assert (= (and x501 x2341) x518))
(assert (x1620 x1217))
(assert (x2873 x1577))
(assert (x2873 x1820))
(assert (x625 x1291))
(assert (x2873 x1751))
(assert (= x1655 (or x2043 x34 x2164)))
(assert (x2873 x664))
(assert (= 0 (x2864 20282409603651670423947251286015)))
(assert (x2720 2))
(assert (=> (>= 10000 x1533) (= 0 (x2864 x1533))))
(assert (x2873 x2335))
(assert (x322 x3002 340282366920938463463374607431768211456))
(assert (x2873 x1053))
(assert (x2873 x50))
(assert (x625 x2848))
(assert (= (x2864 443215666480553238610125355434898879895743000821) 0))
(assert (x2873 x2577))
(assert (x2873 x1147))
(assert (x2873 x128))
(assert (x2886 x908))
(assert (x2873 x1686))
(assert (x2873 x2824))
(assert (x2873 x2289))
(assert (x2873 x742))
(assert (x2873 x1143))
(assert (= (and x2970 x971) x14))
(assert (x625 x1364))
(assert (x2873 x1897))
(assert (x2873 x1529))
(assert (= (and (not x727) x19) x225))
(assert (x2873 x861))
(assert (= x1122 (x1789 (x996 64 x1122 0))))
(assert (x169 x2449))
(assert (x1620 x1354))
(assert (= x1087 (and x2398 x2480)))
(assert (x2873 x94))
(assert (x2873 x2489))
(assert (x2873 x1095))
(assert (x2873 x279))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x996 64 x1797 0)))
(assert (x322 x1676 2))
(assert (= x1185 (and (not x563) x2506)))
(assert (x2873 x555))
(assert (x2873 x2203))
(assert (= (=> (= x371 x1914) x2121) x43))
(assert (x2873 x2846))
(assert (x2873 x2988))
(assert (x2873 x2184))
(assert (= (and x2815 x168) x2189))
(assert (x2873 x1146))
(assert (x2873 x3005))
(assert (x2886 1461501637330902918203684832716283019655932542975))
(assert (= (or x722 x2526 x1725) x1275))
(assert (x2873 x2956))
(assert (x2873 x1705))
(assert (x2873 x2102))
(assert (x2873 x1251))
(assert (= 64 (x141 (x996 64 x1122 66))))
(assert (= 0 (x676 (x996 64 x1816 0))))
(assert (x2873 x2597))
(assert (= (and x2542 (not x2161)) x470))
(assert (x2873 x805))
(assert (x2886 x1708))
(assert (x2873 x1645))
(assert (=> (<= x94 10000) (= 0 (x2864 x94))))
(assert (x2873 x1510))
(assert (x2873 x471))
(assert (x2886 x197))
(assert (x2873 x1043))
(assert (= (x2864 (x996 64 x1624 0)) (x996 64 x1624 0)))
(assert (x2873 x1237))
(assert (= (=> (and (= x1883 (x1332 x523)) (= x315 160) (= (< 0 x1883) x3057)) (and (=> (not x3057) x1330) (=> (and (and (= (x1332 x523) x1253) (= x468 (+ 32 x523)) (= (> x2220 0) x1749) (= x2220 (x2669 (- (mod x2898 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1128))) (= (x615 x468) x1199) (>= x1253 1) (= x1128 (x1152 340282366920938463463374607431768211455 x1199))) x3057) (and (=> (and (not x1749) (= 1 x845)) x583) (=> x1749 x700))))) x2687))
(assert (= (and x1802 (not x3010)) x1234))
(assert (x2873 x2485))
(assert (x322 x667 4))
(assert (x2873 x1511))
(assert (x2873 x2926))
(assert (x2873 x2018))
(assert (x2873 x725))
(assert (x2873 x1077))
(assert (x2873 x2096))
(assert (x2873 x724))
(assert (x2873 x2893))
(assert (=> (<= x1122 10000) (= 0 (x2864 x1122))))
(assert (= (or x713 x1398) x2346))
(assert (x2873 x850))
(assert (= (=> (and (and (= x2847 false) (= false x1175) (= 36 x738) (= x303 false) (= (ite x383 x2627 x2580) x1942) (= false x2822) (= x951 x3033) (= x3001 x2178) (= x3001 x1231) (= x1405 x250) (= x3033 x1405) (= x2393 x1942) (= x2980 x1231) (= (= 0 x2980) x2719)) (and (= x951 x2977) (and (<= 3 x2195) (= x1224 false) (= 0 x2301) (= x353 128) (= x2862 953417218992365150631206543442508943947348309705) (= x1559 x951) (<= x1680 127) (>= x1919 1) (<= 2 x1466) (= 443215666480553238610125355434898879895743000821 x1063) (= false x247) (= (x496 128) x2195) (= (x496 128) x1466) (= 729466174051048026939049150500379070045048658665 x297) (= x1557 (x496 128)) (<= x1680 127) (= (> x1557 0) x2540) (= x1919 (x496 128)) (= x1480 x1559) (= x2469 3993797972) (= x720 (x1891 x2705)) (>= x720 1)))) (and (=> (and (= x421 0) (not x2540)) x1962) (=> (and x2540 (and (= (= x2258 x500) x727) (<= 1 x2266) (= (x1152 1461501637330902918203684832716283019655932542975 x2664) x2258) (= x2664 (x2579 160)) (= x2266 (x496 128)) (= 256 x2202))) (and (=> (and (= x1917 (= x160 x2258)) (not x727)) (and (=> (and (and (or (and (and (= x234 x637) (<= x637 20282409603651670423947251286015) (= x637 (x1040 x657)) (= x657 (x996 64 x1559 0))) x1730) (and (= x234 0) (not x1730))) (and (>= 3 x2319) (<= x619 4722366482869645213695) (= x619 (x875 x21)) (<= x1416 127) (= x2636 80943019369348893552279777061565613435472460254630153415513390446397355982848) (<= 1 x2913) (= x565 0) (= (x1300 x21) x3040) (= x2913 (x1891 x160)) (= (x996 64 x1559 0) x21) (= false x588) (= 68 x1460) (= 352 x3037) (>= 20282409603651670423947251286015 x1302) (= false x2249) (= 0 x395) (= (= 0 x2115) x1730) (<= x3040 4722366482869645213695) (= (x1152 1 x2319) x2115) (= x504 3002343453) (= (x1040 x21) x1302) (>= 127 x1416) (= x1480 x688) (= x2319 (x2499 x21)))) x1917) x2553) (=> (and (and (or (and (and (= (x2016 x2587) x2086) (<= x2086 20282409603651670423947251286015) (= (x996 64 x1559 0) x2587) (= x2018 x2086)) x2130) (and (= x2018 0) (not x2130))) (and (= x3009 3002343453) (>= x2258 1) (= false x2810) (= (x996 64 x1559 0) x1081) (= x2203 (x826 x1081)) (>= 4722366482869645213695 x2278) (= false x2554) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x366) (<= x2688 127) (>= 3 x2203) (= x1361 x2258) (= (x1891 x1361) x249) (= x1422 68) (= (x976 x1081) x2278) (= 0 x1423) (= x313 x1480) (>= x249 1) (<= x1383 4722366482869645213695) (= x1383 (x2599 x1081)) (<= x2250 20282409603651670423947251286015) (= 0 x978) (= (= x1505 0) x2130) (>= 1461501637330902918203684832716283019655932542975 x2258) (= 352 x865) (= (x2016 x1081) x2250) (= x1505 (x1152 1 x2203)) (<= x2688 127))) (not x1917)) x1948))) (=> (and (and (or (and (not x1535) (= 0 x2517)) (and x1535 (and (= (x996 64 x1559 0) x1657) (= x2111 (x1305 x1657)) (<= x2111 20282409603651670423947251286015) (= x2111 x2517)))) (and (= (x1636 x1485) x1335) (= (x1152 1 x1708) x725) (>= 4722366482869645213695 x1162) (= (x1305 x1485) x101) (= x1321 0) (= x1485 (x996 64 x1559 0)) (>= 3 x1708) (= 352 x2643) (<= x306 127) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x2934) (>= 20282409603651670423947251286015 x101) (= x1535 (= 0 x725)) (= x2699 false) (= x1162 (x2494 x1485)) (= false x1507) (<= 1 x957) (>= 127 x306) (= x1419 x1480) (= x680 3002343453) (= x2289 68) (= x1708 (x1148 x1485)) (= 0 x2169) (<= x1335 4722366482869645213695) (= x957 (x1891 x500)))) x727) x1760))))) x1940))
(assert (x625 x1060))
(assert (= 0 (x676 (x996 64 x2849 0))))
(assert (= 0 (x676 (x996 64 x1797 0))))
(assert (= (and x1675 x2346) x2139))
(assert (x625 x2558))
(assert (x2873 x1695))
(assert (= x1973 (and x726 x715)))
(assert (x2873 x1632))
(assert (x2873 x488))
(assert (x2873 x2185))
(assert (x2873 x1739))
(assert (x2529 80943019369348893552279777061565613435472460254630153415513390446397355982848))
(assert (= (=> (and (= x2480 (< 0 x1879)) (= x1879 (x2669 (- x2108 x1788)))) (and (=> (and (and (= x1284 (x996 64 x1122 0)) (= (not (= 0 x2108)) x2762) (= (x2415 x1284) x1306) (<= x1306 20282409603651670423947251286015) (= (not (= 0 x1788)) x2931)) x2480) (and (=> (and (and (= x102 (= x1788 0)) (= 0 x2370)) x2931) (and (=> (and x102 (= x371 448)) x43) (=> (and (= (= x1306 0) x271) (not x102)) (and (=> (and (= x371 448) x271) x43) (=> (and (and (and (= (x2415 x1710) x2026) (= (x996 64 x1788 0) x1710) (= (x1737 x1710) x1435) (= x156 (x2965 x1710)) (= 672 x2680) (= x2433 (= 0 x46)) (= x2375 0) (>= 3 x156) (= x1967 0) (<= x1517 4722366482869645213695) (= (x1120 x1306 10000000000) x2549) (>= 20282409603651670423947251286015 x2026) (= (x492 x1710) x1517) (<= x1435 4722366482869645213695)) (or (and x2433 (and (= x1435 x2362) (>= 4722366482869645213695 x2050) (= (x2669 (- x1517 x2549)) x2050) (= x2050 x162))) (and (not x2433) (and (<= x2918 4722366482869645213695) (= x2362 x2918) (= (x2669 (- x1435 x2549)) x2918) (= x162 x1517))))) (not x271)) x2191))))) (=> (and (not x2931) (= x1914 448)) x2121))) (=> (not x2480) x1854))) x179))
(assert (x2873 x788))
(assert (x2873 x47))
(assert (x2873 x254))
(assert (= x629 (and x2359 (not x2130))))
(assert (x1620 x2546))
(assert (x2873 x1723))
(assert (x625 x397))
(assert (x2873 x318))
(assert (x2873 x2595))
(assert (x2873 x2573))
(assert (x2873 x2663))
(assert (x2873 x1454))
(assert (= (x676 (x996 64 x1816 67)) 67))
(assert (x2873 x2832))
(assert (= (x676 (x996 64 x1122 67)) 67))
(assert (= x2916 (and x2633 x266)))
(assert (= x1164 (or x1631 x2884)))
(assert (x2873 x2407))
(assert (x2873 x61))
(assert (< 10000 (x996 64 x2622 0)))
(assert (x2873 x2618))
(assert (x2873 x639))
(assert (= (and (not x108) x1109) x2786))
(assert (x2873 x1628))
(assert (x625 x122))
(assert (x2873 x2929))
(assert (x2873 x1484))
(assert (x2873 x2585))
(assert (x2886 x2601))
(assert (x625 x68))
(assert (= (and x882 x539) x41))
(assert (x2873 x3027))
(assert (x2873 x133))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2873 x1050))
(assert (x2873 x1184))
(assert (x2873 x698))
(assert (x2873 x2240))
(assert (x2873 x989))
(assert (x1620 x1979))
(assert (x322 x1708 2))
(assert (x2873 x510))
(assert (x2747 10000000000 x1882))
(assert (=> (>= 10000 x1624) (= 0 (x2864 x1624))))
(assert (x2873 x2510))
(assert (=> (<= x1816 10000) (= (x2864 x1816) 0)))
(assert (x2873 x2837))
(assert (= (x996 64 x1122 66) (x2864 (x996 64 x1122 66))))
(assert (x625 x2032))
(assert (x2873 x1806))
(assert (x2873 x1621))
(assert (x2873 x1244))
(assert (x2873 x1709))
(assert (x2720 x72))
(assert (= x1848 (and x470 x2700)))
(assert (x2873 x1118))
(assert (x625 x1386))
(assert (= (and x705 x538) x1832))
(assert (x625 x3054))
(assert (= (=> (= x1050 x1788) x179) x1134))
(assert (x2873 x536))
(assert (x2873 x2072))
(assert (x2873 x693))
(assert (= x1080 (and x1091 x2409)))
(assert (= x2021 (and (not x2785) x2682)))
(assert (x322 x1676 4))
(assert (x2873 x2352))
(assert (x2873 x2575))
(assert (= (or x472 x142) x1785))
(assert (x322 x867 2))
(assert (x1430 x1327))
(assert (x2873 x2349))
(assert (x2873 x751))
(assert (x2873 x2783))
(assert (x2873 x2545))
(assert (x2873 x720))
(assert (x2873 x975))
(assert (x2873 x2029))
(assert (x2873 x268))
(assert (x2873 x2643))
(assert (=> (>= 10000 x160) (= (x2864 x160) 0)))
(assert (= (x2864 (x996 64 x2108 0)) (x996 64 x2108 0)))
(assert (x625 x2595))
(assert (= x327 (and x1363 x1647)))
(assert (x2873 x1857))
(assert (= x2322 (or x849 x2404)))
(assert (x2873 x2260))
(assert (x2873 x1818))
(assert (x2873 x1677))
(assert (x2873 x284))
(assert (x322 x2990 2))
(assert (x2873 x155))
(assert (x2873 x2877))
(assert (x2873 x2763))
(assert (x1620 x1515))
(assert (= x1754 (and x2942 x2355)))
(assert (x322 x219 2))
(assert (x322 x2907 4))
(assert (= x1015 (or x1299 x1773 x1213)))
(assert (= (=> (and (= false x2342) (= x2098 (+ x2972 x2205)) (= x2205 x2547) (= x2999 false) (= (* 10000000000 x1190) x2547)) x2061) x893))
(assert (x2886 x1676))
(assert (x2873 x1847))
(assert (= (and x2709 (not x200)) x1450))
(assert (= x1457 (or x1637 x1333)))
(assert (= (=> (and (= x2834 false) (= x1828 x2283) (= (+ x822 x2283) x18) (= x1828 (* x1439 10000000000)) (= x1382 false)) x2154) x1292))
(assert (x2720 x494))
(assert (x2873 x1241))
(assert (= (x1789 (x996 64 x1816 67)) x1816))
(assert (x2873 x500))
(assert (x2873 x2104))
(assert (x2873 x2533))
(assert (x2873 x2078))
(assert (x2873 x750))
(assert (x2873 x1721))
(assert (x2873 x2487))
(assert (x2873 x258))
(assert (x2886 x2449))
(assert (x1620 x2593))
(assert (x2873 x837))
(assert (= (=> (and (and (and (= x2131 2235288835) (>= x868 2) (= (x93 128) x868) (<= x553 127) (= (x93 128) x2733) (<= 3 x847) (= 443215666480553238610125355434898879895743000821 x2824) (= (< 0 x1205) x2694) (= x463 729466174051048026939049150500379070045048658665) (<= 1 x2733) (= false x2466) (= (x93 128) x847) (= x1241 1) (= x402 x2622) (= false x2318) (<= 1 x1219) (= (x93 128) x1205) (= x1219 (x1891 x2705)) (= 128 x892) (>= 127 x553) (= x3003 x2622) (= x227 953417218992365150631206543442508943947348309705)) (= x3003 x399)) (and (= false x2661) (= false x2957) (= false x1334) (= false x1867) (= 36 x2769) (= x2692 x3003))) (and (=> (and (not x2694) (= x2580 0)) x1940) (=> (and (and (= (x93 128) x668) (= (x1152 1461501637330902918203684832716283019655932542975 x2537) x2504) (= (x1976 160) x2537) (<= 1 x668) (= x2706 256) (= x1960 (= x2504 x500))) x2694) (and (=> (and x1960 (and (and (= false x2561) (<= x1235 127) (<= 1 x1619) (= (x996 64 x2622 0) x1337) (= x1380 1) (<= x1235 127) (= x2055 (x1152 2 x2556)) (>= 4722366482869645213695 x478) (= 1 x1800) (<= x2556 3) (= (x1891 x500) x1619) (<= x246 4722366482869645213695) (= x20 352) (= x246 (x2494 x1337)) (<= x941 20282409603651670423947251286015) (= x2770 x402) (= (x1636 x1337) x478) (= false x2607) (= (x1148 x1337) x2556) (= (= x2055 0) x863) (= x941 (x1305 x1337)) (= x3053 68) (= x1442 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x2046 3002343453)) (or (and (and (= (x1305 x2891) x638) (= (x996 64 x2622 0) x2891) (>= 20282409603651670423947251286015 x638) (= x638 x2583)) x863) (and (not x863) (= x2583 0))))) x220) (=> (and (= x1843 (= x160 x2504)) (not x1960)) (and (=> (and x1843 (and (and (= x2815 (= x1483 0)) (= 1 x1513) (= (x1891 x160) x1501) (= x1403 3002343453) (<= 1 x1501) (= 1 x1817) (= 68 x1673) (>= 4722366482869645213695 x153) (= false x1697) (= x603 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x1483 (x1152 2 x1327)) (<= x1264 127) (= (x2499 x1592) x1327) (= (x875 x1592) x2148) (<= x449 20282409603651670423947251286015) (<= x1264 127) (= x2298 352) (= x449 (x1040 x1592)) (= (x996 64 x2622 0) x1592) (= x261 x402) (= x153 (x1300 x1592)) (>= 4722366482869645213695 x2148) (= x2959 false) (<= x1327 3)) (or (and x2815 (and (= x2110 (x996 64 x2622 0)) (<= x819 20282409603651670423947251286015) (= (x1040 x2110) x819) (= x2093 x819))) (and (= 0 x2093) (not x2815))))) x1763) (=> (and (not x1843) (and (or (and (not x652) (= 0 x1434)) (and (and (= (x2016 x3047) x1251) (= x3047 (x996 64 x2622 0)) (= x1434 x1251) (<= x1251 20282409603651670423947251286015)) x652)) (and (<= x1886 127) (<= x287 3) (= (x826 x839) x287) (>= 4722366482869645213695 x2860) (>= 20282409603651670423947251286015 x224) (>= 4722366482869645213695 x693) (<= 1 x3) (= x3 (x1891 x1361)) (= x224 (x2016 x839)) (<= x1886 127) (= false x2244) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x2348) (= (x996 64 x2622 0) x839) (= x652 (= 0 x760)) (= 3002343453 x2988) (= 68 x3054) (= (x976 x839) x2860) (<= 1 x2504) (= 1 x661) (= x1580 352) (<= x2504 1461501637330902918203684832716283019655932542975) (= x87 1) (= x2504 x1361) (= false x835) (= (x2599 x839) x693) (= (x1152 2 x287) x760) (= x1379 x402)))) x1437))))))) x2787))
(assert (= (and x2139 (not x2201)) x2679))
(assert (x2873 x2858))
(assert (= 0 (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639619)))
(assert (x2873 x1883))
(assert (x2873 x1014))
(assert (x2873 x2798))
(assert (x2873 x1319))
(assert (x2873 x353))
(assert (= (and x1056 x689) x2506))
(assert (x2873 x632))
(assert (x2873 x1819))
(assert (x2873 x81))
(assert (x2873 x1090))
(assert (= (or x189 x1320 x937) x2404))
(assert (x2873 x1172))
(assert (x1620 x1778))
(assert (x2873 x2940))
(assert (= x1757 (or x1421 x222 x410)))
(assert (x2873 x2002))
(assert (x2873 x659))
(assert (= x2790 (and x2150 (not x663))))
(assert (= x1854 (=> (and (and (= false x2075) (= x383 (= 0 x253)) (= x253 x2478) (= x2226 x2692) (= x562 false) (= x2182 x2692) (= x2178 x2253) (= x2478 x2253) (= x2226 x2024) (= x150 36)) (and (= x2182 x1508) (and (= x3004 (x2034 128)) (= x2332 false) (= (x2034 128) x857) (= x579 443215666480553238610125355434898879895743000821) (= x2837 (x1891 x2705)) (<= 1 x1546) (>= x2837 1) (= x1815 128) (= x2502 0) (= x2592 false) (= x2377 729466174051048026939049150500379070045048658665) (= x1546 (x2034 128)) (= x618 x2182) (>= x2987 2) (= 953417218992365150631206543442508943947348309705 x1623) (<= 3 x857) (>= 127 x1207) (= (x2034 128) x2987) (= x689 (> x3004 0)) (= x1182 x618) (<= x1207 127) (= x2802 3993797972)))) (and (=> (and (= x2627 0) (not x689)) x2787) (=> (and (and (= (x1152 1461501637330902918203684832716283019655932542975 x1713) x2455) (= x563 (= x2455 x500)) (= (x2034 128) x1556) (>= x1556 1) (= 256 x2745) (= x1713 (x1874 160))) x689) (and (=> (and x563 (and (or (and (and (>= 20282409603651670423947251286015 x2065) (= x1325 x2065) (= (x1305 x2714) x2065) (= (x996 64 x618 0) x2714)) x644) (and (not x644) (= x1325 0))) (and (= (x1148 x1340) x1537) (= x2419 (x1891 x500)) (>= 4722366482869645213695 x1384) (>= 20282409603651670423947251286015 x1171) (>= 3 x1537) (= 0 x2995) (>= x2419 1) (= (x2494 x1340) x1384) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x304) (= x2186 352) (= x216 x1182) (= x3005 (x1152 1 x1537)) (<= x460 127) (= x2532 3002343453) (= x1494 false) (= (x996 64 x618 0) x1340) (= (x1305 x1340) x1171) (<= x460 127) (= x2129 false) (= x644 (= x3005 0)) (= x1929 68) (= (x1636 x1340) x1693) (<= x1693 4722366482869645213695) (= 0 x2734)))) x1350) (=> (and (= x2274 (= x160 x2455)) (not x563)) (and (=> (and (and (and (= x2546 (x1300 x233)) (= x1242 (x1891 x160)) (<= x846 127) (>= x1242 1) (= x802 0) (= 68 x68) (= (x875 x233) x9) (<= x9 4722366482869645213695) (= (x996 64 x618 0) x233) (= false x1966) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x1851) (= x1603 (x2499 x233)) (= (= x2081 0) x200) (= x1182 x81) (<= x846 127) (= x464 352) (<= x2546 4722366482869645213695) (= x2176 0) (= x1857 3002343453) (>= 20282409603651670423947251286015 x254) (= false x1089) (= (x1040 x233) x254) (>= 3 x1603) (= (x1152 1 x1603) x2081)) (or (and (not x200) (= x1357 0)) (and (and (>= 20282409603651670423947251286015 x1632) (= x1632 (x1040 x125)) (= x1357 x1632) (= x125 (x996 64 x618 0))) x200))) x2274) x3008) (=> (and (and (or (and (and (= (x996 64 x618 0) x1104) (<= x471 20282409603651670423947251286015) (= x526 x471) (= x471 (x2016 x1104))) x2767) (and (not x2767) (= x526 0))) (and (<= x438 4722366482869645213695) (= x2035 (x2016 x1489)) (<= 1 x2455) (= x2767 (= 0 x2163)) (= x1581 false) (>= 1461501637330902918203684832716283019655932542975 x2455) (= x2939 3002343453) (= x2163 (x1152 1 x2171)) (= x2171 (x826 x1489)) (= x305 352) (= 0 x985) (= (x1891 x1361) x457) (= (x996 64 x618 0) x1489) (= x438 (x976 x1489)) (= 68 x2361) (>= 127 x1699) (= x2591 80943019369348893552279777061565613435472460254630153415513390446397355982848) (<= x1699 127) (>= 4722366482869645213695 x2772) (= x1182 x2869) (= x149 false) (= x2772 (x2599 x1489)) (>= x457 1) (>= 20282409603651670423947251286015 x2035) (= 0 x2500) (= x1361 x2455) (>= 3 x2171))) (not x2274)) x1986)))))))))
(assert (x2873 x565))
(assert (x2873 x1747))
(assert (= (and x2147 x271) x1355))
(assert (= x222 (and x1239 x1486)))
(assert (x625 x1950))
(assert (= (and x132 x652) x2606))
(assert (= x1398 (or x804 x2512 x1351)))
(assert (x2886 x1713))
(assert (x2873 x1979))
(assert (= (and (not x102) x1468) x2147))
(assert (x2873 x304))
(assert (x625 x2616))
(assert (x1620 x2772))
(assert (x2873 x3002))
(assert (x2873 x1321))
(assert (x2873 x1598))
(assert (= (=> (and (= x2927 (not (< 1 x2234))) (= x2234 (x496 128)) (= (x1524 256) x631)) (and (=> (= x421 x631) x1962) x2927)) x2079))
(assert (x2873 x53))
(assert (x2873 x2992))
(assert (x322 x2319 2))
(assert (x2873 x985))
(assert (x2873 x1063))
(assert (x2873 x525))
(assert (x2873 x1881))
(assert (x322 x2556 4))
(assert (x2873 x617))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x996 64 x1533 0)))
(assert (x2873 x2972))
(assert (= (and x1917 x225) x232))
(assert (x2873 x1025))
(assert (= (or x735 x2344) x1725))
(assert (= (and x230 x2629) x3035))
(assert (x2873 x1179))
(assert (= (x996 64 x2622 0) (x2864 (x996 64 x2622 0))))
(assert (= x2263 (=> (and (= false x2383) (= false x248) (= x2729 (* 10000000000 x2593)) (= x547 x2729) (= x1349 (+ x547 x543))) x2358)))
(assert (x2873 x1217))
(assert (x2720 x219))
(assert (x625 x2996))
(assert (x169 x312))
(assert (= x1437 (=> (and (= x2888 false) (= (+ x1434 x2) x743) (= (* 10000000000 x2860) x1591) (= x2 x1591) (= false x831)) x665)))
(assert (x2873 x559))
(assert (x2873 x2169))
(assert (= x364 (and x1555 x1426)))
(assert (= (=> (and (= (* x246 10000000000) x2488) (= x784 x2488) (= x2040 (+ x2583 x784)) (= false x409) (= false x2013)) x665) x220))
(assert (x1620 x5))
(assert (x2873 x954))
(assert (x2873 x135))
(assert (x2873 x122))
(assert (x2873 x388))
(assert (= x935 (and x232 x1730)))
(assert (x2873 x2471))
(assert (x2720 x908))
(assert (x2873 x2015))
(assert (x2873 x2675))
(assert (x2873 x626))
(assert (= x618 (x1789 (x996 64 x618 0))))
(assert (x2873 x1322))
(assert (x2873 x2578))
(assert (x322 x1713 1461501637330902918203684832716283019655932542976))
(assert (x936 10000000000))
(assert (x2720 x1543))
(assert (x2873 x733))
(assert (x2873 x2386))
(assert (x2873 x651))
(assert (= (or x2903 x2382) x1108))
(assert (x2886 x1537))
(assert (x2873 x191))
(assert (x2886 x2907))
(assert (x2873 x2215))
(assert (= (=> (and (= (x182 128) x2950) (= (x2678 256) x2882) (= (not (> x2950 1)) x549)) (and x549 (=> (= x2882 x718) x3031))) x2358))
(assert (= (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x662) (= x476 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1124) (<= 0 x411) (= 0 x768) (<= x392 1461501637330902918203684832716283019655932542975) (<= x1100 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x117) (>= x117 0) (= x731 true) (= x384 x2024) x2850 (= x431 false) (= x1342 x2238) (not x321) (<= x1548 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 68 x159) (= x2681 false) (<= 0 x2353) (= x321 (= x2238 x769)) (= x1008 x1732) (<= 0 x1124) (<= 0 x2020) (>= x662 0) (= x1732 (ite x59 x1839 x673)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2020) (= x2178 x46) (<= 1 x1100) (<= 0 x1548) (= x769 x250) (<= 0 x392) (= (= x1100 x384) x2850) (= x250 x560) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2353) (<= x411 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= false x119)) (and (and (= x1100 x1122) (and (>= 127 x2794) (= x336 x1530) (= x2557 (x860 x1361)) (= x2108 (ite (= x577 x1122) 0 x577)) (= x2364 352) (= x2828 (x2415 x350)) (= (= x46 0) x1498) (= x1822 (x2965 x350)) (= (x492 x350) x2641) (>= 4722366482869645213695 x270) (= (x1891 x1361) x195) (= x577 x447) (<= x2794 127) (>= 4722366482869645213695 x2641) (= x910 3700653596) (<= x1822 3) (= x1740 (x251 x815)) (>= x195 1) (= x815 x1100) (>= 20282409603651670423947251286015 x2828) (= x350 (x996 64 x1122 0)) (= x2573 x2557) (= false x2165) (= false x778) (= x270 (x1737 x350)))) (and (= false x1404) (= x1530 x46) (= x577 x560)))) (and (=> (and (not x1498) (and (= (< x1822 2) x1918) (or (and (and (<= x2389 1461501637330902918203684832716283019655932542975) (= (x996 64 x1122 67) x604) (= x2389 (x3016 x604)) (= x2389 x2378)) (not x1918)) (and x1918 (= 0 x2378))))) x2867) (=> (and x1498 (and (or (and (and (>= 1461501637330902918203684832716283019655932542975 x569) (= x1050 x569) (= (x2870 x2251) x569) (= x2251 (x996 64 x1122 66))) (not x157)) (and (= 0 x1050) x157)) (and (= x1204 (x1152 1 x1822)) (= (= 0 x1204) x157)))) x1134))) x896))
(assert (= (x2864 340282366920938463463374607431768211455) 0))
(assert (= (or x1206 x1638 x852) x1637))
(assert (x2873 x2593))
(assert (x2873 x1302))
(assert (x2873 x206))
(assert (x169 x2664))
(assert (= (x676 (x996 64 x1649 0)) 0))
(assert (x2873 x2567))
(assert (x2873 x650))
(assert (=> (>= 10000 x618) (= (x2864 x618) 0)))
(assert (x2720 x864))
(assert (x2873 x356))
(assert (x2873 x171))
(assert (x2873 x2293))
(assert (x2873 x463))
(assert (x2747 10000000000 x2772))
(assert (= x34 (or x365 x1222)))
(assert (x2873 x106))
(assert (x169 x1017))
(assert (= (or x2124 x480) x2749))
(assert (= x1064 (and x2876 x2531)))
(assert (= (and (=> (and x2762 (and (= 0 x2374) (= (= 0 x2108) x1239))) (and (=> (and (not x1239) (and (= x1652 (x2669 (- 0 x1306))) (= (= x1652 0) x115))) (and (=> (and (not x115) (and (and (>= 4722366482869645213695 x95) (= 0 x210) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x1914) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639714 x1914) (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639837)) (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639615) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639710 x1914) (>= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639619))) (= x1328 (x932 (+ x1914 96))) (<= x66 4722366482869645213695) (= x2452 (x996 64 x2108 0)) (= (x932 (+ 128 x1328)) x1474) (= x2045 (= 0 x46)) (= x214 (x1120 x1306 10000000000)) (<= x2721 20282409603651670423947251286015) (= x66 (x2157 x2452)) (> x1474 x1328) (<= x733 3) (= x733 (x620 x2452)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x1914) (or (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639615) (and (>= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639619) (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639710)) (>= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639837) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639714 x1914))) (or (>= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639837 x1914) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639714 x1914)) (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639615) (and (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639710) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639619 x1914))) (< x1474 x1115) (= (x932 (+ 96 x1474)) x1115) (> x1328 x1914) (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639932) (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639932) (= x95 (x2143 x2452)) (= x2335 0) (= x2721 (x2757 x2452))) (or (and (and (= x1195 x1114) (= x66 x955) (= x1195 (+ x214 x95)) (<= x1195 4722366482869645213695)) (not x2045)) (and x2045 (and (= x1114 x95) (= x955 x375) (= x375 (+ x214 x66)) (>= 4722366482869645213695 x375)))))) x1082) (=> (and x115 (= x1721 x1914)) x767))) (=> (and x1239 (= x1914 x1721)) x767))) (=> (and (= x2210 x1914) (not x2762)) x925)) x2121))
(assert (x2720 x2575))
(assert (< 10000 (x996 64 x1533 0)))
(assert (x2873 x1946))
(assert (x2873 x330))
(assert (x322 x1470 2))
(assert (x2720 x698))
(assert (x2873 x368))
(assert (= x410 (or x1119 x1453)))
(assert (= x2108 (x1789 (x996 64 x2108 0))))
(assert (x625 x1840))
(assert (= (or x2094 x1977) x804))
(assert (x2873 x792))
(assert (x322 x1017 1461501637330902918203684832716283019655932542976))
(assert (x322 x667 2))
(assert (= (=> (and (= false x1020) (= (+ x340 x1154) x2997) (= x1154 x1121) (= (* 10000000000 x5) x1121) (= false x1074)) x2252) x2414))
(assert (x169 x1433))
(assert (x2873 x160))
(assert (x625 x3053))
(assert (= x758 (and x2750 x1282)))
(assert (x2873 x640))
(assert (= x590 (=> (and (and (and (= 128 x2435) (= x382 (x2336 128)) (>= 127 x1538) (= (x2336 128) x2339) (= x2090 x1649) (= x2284 false) (= x783 953417218992365150631206543442508943947348309705) (= (< 0 x787) x1675) (= x622 3993797972) (>= x813 1) (= x1523 0) (= 443215666480553238610125355434898879895743000821 x1032) (>= x2339 2) (= false x69) (>= x382 1) (>= 127 x1538) (= x2126 x1649) (= 729466174051048026939049150500379070045048658665 x23) (= (x2336 128) x62) (= (x1891 x2705) x813) (<= 3 x62) (= (x2336 128) x787)) (= x25 x2090)) (and (= x2090 x65) (= x277 x1188) (= x567 false) (= x1342 x2459) (= x2178 x1938) (= x1938 x1188) (= x65 x2459) (= x1752 false) (= x1964 false) (= 36 x311) (= x295 (= 0 x277)) (= x3049 x2279) (= x2279 (ite x2719 x421 x986)) (= false x2964))) (and (=> (and (and (= (= x2887 x500) x2201) (<= 1 x1735) (= x1735 (x2336 128)) (= (x502 160) x1017) (= x840 256) (= x2887 (x1152 1461501637330902918203684832716283019655932542975 x1017))) x1675) (and (=> (and (and (and (<= x219 3) (= x1112 (= 0 x1038)) (= 0 x2552) (= x47 0) (= x1048 x2126) (>= x2630 1) (<= x2838 4722366482869645213695) (= x2697 80943019369348893552279777061565613435472460254630153415513390446397355982848) (<= x2351 127) (= x2218 false) (= x2029 352) (= 68 x2698) (= x2838 (x2494 x757)) (= x1609 (x1636 x757)) (= (x1152 1 x219) x1038) (>= 127 x2351) (= x2630 (x1891 x500)) (<= x1261 20282409603651670423947251286015) (>= 4722366482869645213695 x1609) (= (x1148 x757) x219) (= x1261 (x1305 x757)) (= false x2239) (= x757 (x996 64 x1649 0)) (= 3002343453 x1179)) (or (and (and (= x113 x837) (= x113 (x1305 x2943)) (= x2943 (x996 64 x1649 0)) (<= x113 20282409603651670423947251286015)) x1112) (and (not x1112) (= 0 x837)))) x2201) x1525) (=> (and (not x2201) (= (= x160 x2887) x2290)) (and (=> (and (not x2290) (and (or (and (= x963 0) (not x1888)) (and x1888 (and (= x2658 x963) (= x2423 (x996 64 x1649 0)) (<= x2658 20282409603651670423947251286015) (= x2658 (x2016 x2423))))) (and (= (= x2741 0) x1888) (= x1296 68) (= x2878 (x996 64 x1649 0)) (= x2991 (x2016 x2878)) (>= 4722366482869645213695 x2911) (= false x283) (= (x1891 x1361) x861) (>= 127 x2684) (>= 127 x2684) (>= x2887 1) (>= x861 1) (= (x826 x2878) x2990) (= 3002343453 x1329) (= x273 80943019369348893552279777061565613435472460254630153415513390446397355982848) (>= 3 x2990) (= x1354 (x2599 x2878)) (<= x2991 20282409603651670423947251286015) (= x989 0) (= x1633 0) (= x2741 (x1152 1 x2990)) (= x2282 352) (>= 4722366482869645213695 x1354) (= x2887 x1361) (= x1215 x2126) (= x748 false) (= (x976 x2878) x2911) (>= 1461501637330902918203684832716283019655932542975 x2887)))) x1907) (=> (and x2290 (and (and (= x2574 (x1891 x160)) (= x799 (x1152 1 x2618)) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x1454) (= x2618 (x2499 x2401)) (<= x3021 127) (= x2401 (x996 64 x1649 0)) (= x1724 0) (= false x2935) (<= x3030 4722366482869645213695) (= x1659 (x1040 x2401)) (= 68 x473) (= (x1300 x2401) x3030) (<= x3021 127) (>= x2574 1) (= x1614 0) (>= 20282409603651670423947251286015 x1659) (= (= 0 x799) x266) (= x796 (x875 x2401)) (= x2126 x962) (<= x2618 3) (= false x2074) (<= x796 4722366482869645213695) (= x2893 3002343453) (= 352 x356)) (or (and (and (= x1762 (x996 64 x1649 0)) (<= x2268 20282409603651670423947251286015) (= (x1040 x1762) x2268) (= x2268 x2454)) x266) (and (not x266) (= x2454 0))))) x178))))) (=> (and (not x1675) (= 0 x2941)) x335)))))
(assert (x2873 x637))
(assert (= (=> (and (and (>= 20282409603651670423947251286015 x917) (= (x996 64 x1816 0) x1916) (= (x1737 x1916) x2560) (= x143 (x1891 x1361)) (= x2103 (= x1720 0)) (<= x2567 127) (<= x2123 3) (= false x1012) (= x2945 1867531661) (= false x2666) (= x1720 x1667) (= x1656 x1816) (<= 1 x143) (= (x2415 x1916) x917) (= x1816 x1786) (= x2410 x1667) (<= x2567 127) (= x2123 (x2965 x1916)) (= x194 352) (<= x2209 4722366482869645213695) (= (x492 x1916) x2209) (<= x2560 4722366482869645213695)) (and (= x2024 x1656) (= false x881) (= x1720 x2178) (= x2181 false) (= x1601 x2259) (= x2704 false) (= 68 x2616) (= x2259 (ite x830 x73 x1587)) (= false x420))) (and (=> (and (and (= (< x2123 2) x2474) (or (and (= 0 x188) x2474) (and (not x2474) (and (<= x640 1461501637330902918203684832716283019655932542975) (= x640 x188) (= (x3016 x2617) x640) (= (x996 64 x1816 67) x2617))))) (not x2103)) x1776) (=> (and x2103 (and (and (= x1777 (= 0 x15)) (= (x1152 1 x2123) x15)) (or (and x1777 (= 0 x1476)) (and (not x1777) (and (>= 1461501637330902918203684832716283019655932542975 x724) (= x724 (x2870 x1413)) (= x1413 (x996 64 x1816 66)) (= x724 x1476)))))) x104))) x1712))
(assert (x2873 x40))
(assert (x2873 x1664))
(assert (x2873 x445))
(assert (x2873 x45))
(assert (x2873 x1575))
(assert (x2873 x2612))
(assert (x2873 x2911))
(assert (x2873 x1691))
(assert (x2873 x2210))
(assert (x322 x908 2))
(assert (x2873 x1914))
(assert (x2873 x2947))
(assert (x2873 x527))
(assert (= x2409 (or x2280 x1165)))
(assert (x1430 x2511))
(assert (x2873 x2997))
(assert (= (and x1164 (not x352)) x487))
(assert (= x2125 (and x1888 x123)))
(assert (x2873 x1543))
(assert (= (and x2761 (not x696)) x166))
(assert (= 64 (x141 (x996 64 x1533 0))))
(assert (x2873 x1945))
(assert (x2873 x1666))
(assert (x2873 x2630))
(assert (x1620 x1439))
(assert (x2873 x1129))
(assert (x322 x522 2))
(assert (x2747 10000000000 x782))
(assert (x2873 x95))
(assert (x2873 x489))
(assert (x2873 x2268))
(assert (x2873 x738))
(assert (x2873 x785))
(assert (x2873 x2046))
(assert (< (x996 64 x1816 67) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2873 x137))
(assert (x1620 x1335))
(assert (x2873 x554))
(assert (x2873 x1403))
(assert (x2873 x1048))
(assert (x2873 x2131))
(assert (x2873 x745))
(assert (x2873 x953))
(assert (x2873 x970))
(assert (x2873 x2236))
(assert (< (x996 64 x2108 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2873 x988))
(assert (x2873 x507))
(assert (x2873 x1231))
(assert (< (x996 64 x1122 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2873 x2624))
(assert (x1620 x1882))
(assert (x2873 x1938))
(assert (= (=> (and (= x2270 (x134 256)) (= x1562 (x2216 128)) (= x633 (not (> x1562 1)))) (and (=> (= x2270 x673) x896) x633)) x2174))
(assert (x2873 x3063))
(assert (x2873 x1503))
(assert (= (or x2790 x3017) x1990))
(assert (x2873 x229))
(assert (= (=> (and (= x599 (x1870 256)) (= (x2127 128) x155) (= x1041 (not (> x155 1)))) (and (=> (= x599 x2825) x977) x1041)) x2061))
(assert (= x2531 (and x2039 x1487)))
(assert (x2873 x504))
(assert (x2873 x545))
(assert (x2747 10000000000 x2135))
(assert (x2873 x270))
(assert (x625 x1929))
(assert (not (x2529 (x996 64 x1797 0))))
(assert (x2873 x1919))
(assert (= x435 (=> (and (= (x2010 x1709) x1010) (= x84 (not (< 1 x1010)))) x84)))
(assert (x2873 x1523))
(assert (x2873 x1424))
(assert (< 10000 (x996 64 x1649 0)))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639837))
(assert (x2873 x1497))
(assert (= (and x723 x2857) x1844))
(assert (x2720 x2449))
(assert (x2873 x924))
(assert (x2873 x1939))
(assert (x625 x1518))
(assert (x2873 x3041))
(assert (x2873 x2036))
(assert (x2873 x2237))
(assert (x635 x477))
(assert (x2873 x1518))
(assert (x2873 x1803))
(assert (x2873 x1006))
(assert (x2873 x1624))
(assert (x2873 x920))
(assert (x2873 x874))
(assert (x322 x488 1461501637330902918203684832716283019655932542976))
(assert (x2873 x159))
(assert (x2873 x2234))
(assert (x2873 x957))
(assert (= x1854 x1588))
(assert (= (=> (and (= (x408 128) x2431) (= (not (< 1 x2431)) x532) (= (x946 256) x2983)) (and (=> (= x1839 x2983) x2971) x532)) x566))
(assert (x2873 x1603))
(assert (x2873 x2856))
(assert (x2873 x1810))
(assert (x2873 x2213))
(assert (x2873 x2380))
(assert (x2873 x433))
(assert (= (=> (and (= x3056 false) (= x2462 (* x1868 10000000000)) (= x130 false) (= x2967 x2462) (= (+ x2967 x719) x2031)) x2358) x1660))
(assert (x2873 x2374))
(assert (= (and x441 x1245) x2608))
(assert (x2873 x815))
(assert (x625 x1422))
(assert (x2873 x592))
(assert (x2873 x395))
(assert (x2873 x631))
(assert (x2873 x1753))
(assert (x2873 x1926))
(assert (x2873 x1688))
(assert (x2873 x1416))
(assert (x2873 x417))
(assert (x2873 x2525))
(assert (x1430 x72))
(assert (x2873 x2035))
(assert (< (x996 64 x94 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2873 x193))
(assert (x2873 x1520))
(assert (x2873 x1262))
(assert (x2873 x2680))
(assert (x2873 x1327))
(assert (x2873 x297))
(assert (x2873 x298))
(assert (x625 x1682))
(assert (x2873 x2521))
(assert (x2873 x2534))
(assert (= (=> (and (= x1747 (x2010 x1709)) (= 160 x1806) (<= 1 x3034) (= (x1152 340282366920938463463374607431768211455 x494) x2780) (= (x2010 x1709) x3034) (= x2866 (x2669 (- (mod x2555 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2780))) (<= 1 x1747) (= (x286 x2611) x494) (= (> x2866 0) x2572) (= x2611 (+ 32 x1709))) (and (=> (not x2572) x528) (=> x2572 x435))) x2145))
(assert (x2873 x2437))
(assert (x2873 x1635))
(assert (x2873 x1930))
(assert (x2873 x1651))
(assert (x2873 x317))
(assert (= (or x2391 x2749 x1490) x142))
(assert (x2873 x2977))
(assert (= (x141 (x996 64 x618 0)) 64))
(assert (x2873 x2385))
(assert (= x564 (and x2709 x200)))
(assert (x2886 340282366920938463463374607431768211455))
(assert (x2873 x3032))
(assert (= x735 (and x2702 x714)))
(assert (= x2120 (or x376 x1602)))
(assert (x2873 x1482))
(assert (x2873 x3))
(assert (x2873 x847))
(assert (x2873 x2632))
(assert (x1692 x1537))
(assert (x2873 x482))
(assert (x2873 x275))
(assert (x2873 x46))
(assert (= x1722 (=> (= x732 x223) x2384)))
(assert (= (and x2767 x2912) x558))
(assert (= (x141 (x996 64 x94 0)) 64))
(assert (= x1962 (=> (and (and (= x1586 x3033) (= x11 false) (= x1607 false) (= 36 x2848) (= x1514 false) (= x2027 false)) (and (and (= x2434 (x958 128)) (= (x958 128) x1186) (= x2917 x1586) (= x2743 false) (= x2917 x1118) (<= 1 x2740) (= 2235288835 x2789) (= false x345) (>= 127 x131) (= x1685 1) (>= x2371 3) (= (x958 128) x749) (= x2380 729466174051048026939049150500379070045048658665) (= (x958 128) x2371) (= (x1891 x2705) x2740) (= (> x749 0) x147) (>= x2434 1) (= x2808 443215666480553238610125355434898879895743000821) (<= x131 127) (= 128 x1813) (<= 2 x1186) (= 953417218992365150631206543442508943947348309705 x627)) (= x1058 x1586))) (and (=> (and x147 (and (= x258 (x127 160)) (>= x503 1) (= x2942 (= x500 x1511)) (= x1511 (x1152 1461501637330902918203684832716283019655932542975 x258)) (= (x958 128) x503) (= x1703 256))) (and (=> (and (= x1578 (= x1511 x160)) (not x2942)) (and (=> (and (and (or (and (= x1167 0) (not x737)) (and (and (<= x699 20282409603651670423947251286015) (= x699 (x2016 x842)) (= x842 (x996 64 x2917 0)) (= x699 x1167)) x737)) (and (= (x826 x1267) x667) (= x1361 x1511) (= x1055 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= x891 3002343453) (<= x314 127) (>= 4722366482869645213695 x782) (= 352 x885) (<= x667 3) (= (x2599 x1267) x1052) (= (x976 x1267) x782) (= x1267 (x996 64 x2917 0)) (<= x1052 4722366482869645213695) (= 68 x1666) (<= x314 127) (= (= x1801 0) x737) (= 1 x728) (= (x1891 x1361) x235) (<= 1 x235) (= x771 false) (= 1 x1172) (<= x191 20282409603651670423947251286015) (>= 1461501637330902918203684832716283019655932542975 x1511) (= (x2016 x1267) x191) (>= x1511 1) (= x1801 (x1152 2 x667)) (= x1118 x660) (= x475 false))) (not x1578)) x91) (=> (and x1578 (and (or (and (not x539) (= 0 x822)) (and x539 (and (= (x996 64 x2917 0) x987) (= x2100 (x1040 x987)) (= x822 x2100) (<= x2100 20282409603651670423947251286015)))) (and (>= 20282409603651670423947251286015 x2634) (<= x128 4722366482869645213695) (<= x1072 127) (= x568 1) (= 68 x122) (= 1 x1830) (= x456 80943019369348893552279777061565613435472460254630153415513390446397355982848) (= (x1152 2 x50) x1443) (= 3002343453 x1617) (= (= x1443 0) x539) (= (x996 64 x2917 0) x2038) (= false x2758) (<= x50 3) (>= 4722366482869645213695 x1439) (= (x2499 x2038) x50) (= (x1300 x2038) x128) (= false x440) (= x1482 (x1891 x160)) (>= 127 x1072) (= x1439 (x875 x2038)) (= x2066 352) (= x1118 x1838) (>= x1482 1) (= (x1040 x2038) x2634)))) x1292))) (=> (and (and (or (and (= x2317 0) (not x1596)) (and x1596 (and (>= 20282409603651670423947251286015 x1589) (= x2317 x1589) (= (x1305 x1360) x1589) (= (x996 64 x2917 0) x1360)))) (and (= (x1148 x1202) x337) (= 3002343453 x1297) (<= 1 x1567) (= false x1236) (= x1596 (= x1810 0)) (= x2777 (x1305 x1202)) (= 68 x1544) (>= 4722366482869645213695 x1750) (= false x1791) (>= 3 x337) (= (x1636 x1202) x1750) (= (x2494 x1202) x1979) (<= x1979 4722366482869645213695) (= x818 1) (<= x445 127) (= x1810 (x1152 2 x337)) (= x979 352) (<= x2777 20282409603651670423947251286015) (= 80943019369348893552279777061565613435472460254630153415513390446397355982848 x1849) (= (x996 64 x2917 0) x1202) (= x2323 1) (<= x445 127) (= x2649 x1118) (= x1567 (x1891 x500)))) x2942) x2644))) (=> (and (= x986 0) (not x147)) x590)))))
(assert (= (or x1145 x1655) x1583))
(assert (x1620 x1693))
(assert (x2873 x1544))
(assert (x2886 x1199))
(assert (= (and x2762 x1169) x1486))
(assert (x2873 x2478))
(assert (x2873 x18))
(assert (x2873 x1557))
(assert (not (x2529 (x996 64 x2917 0))))
(assert (= (=> (= x2210 x1721) x925) x767))
(assert (x2873 x1379))
(assert (x2886 x494))
(assert (x2873 x553))
(assert (x2886 x381))
(assert (x2873 x3040))
(assert (x2873 x892))
(assert (= x2526 (or x296 x166)))
(assert (x2873 x2537))
(assert (x2873 x146))
(assert (x2873 x605))
(assert (< 10000 (x996 64 x1816 67)))
(assert (x2873 x1908))
(assert (= x849 (and x1056 (not x689))))
(assert (= 66 (x676 (x996 64 x1816 66))))
(assert (x2873 x671))
(assert (not (x2529 (x996 64 x1559 0))))
(assert (x2873 x961))
(assert (> (x996 64 x2917 0) 10000))
(assert (x2873 x1693))
(assert (x2873 x1011))
(assert (x2873 x857))
(assert (x2873 x2068))
(assert (x2873 x1159))
(assert (x2873 x2645))
(assert (x2747 10000000000 x1979))
(assert (x2873 x1531))
(assert (= (or x2402 x1275) x2817))
(assert (x2873 x1483))
(assert (x2720 x1226))
(assert (x2873 x1642))
(assert (x2886 x2445))
(assert (x2873 x1127))
(assert (= 0 (x2864 115792089237316195423570985008687907853269984665640564039457584007913129639841)))
(assert (x2873 x1617))
(assert (x2873 x1676))
(assert (x2873 x921))
(assert (x2886 x2929))
(assert (x2886 x1327))
(assert (x2873 x1685))
(assert (= (and x1583 (not x508)) x1105))
(assert (= (=> (and (= false x1833) (= x3063 x444) (= false x2105) (= (+ x2241 x3063) x658) (= (* 10000000000 x1882) x444)) x2863) x1345))
(assert (x2873 x1131))
(assert (= x1970 (and x511 x1457)))
(assert (= x1453 (and x1046 (not x2045))))
(assert (x322 x72 4))
(assert (x2873 x2055))
(assert (= x945 (and x1973 (not x2737))))
(assert (= x931 (and x1472 x1539)))
(assert (x2747 10000000000 x1335))
(assert (x1620 x2219))
(assert (x2873 x2671))
(assert (x2747 10000000000 x1190))
(assert (x2873 x3052))
(assert (x2529 20282409603651670423947251286015))
(assert (x2873 x1718))
(assert (x2873 x787))
(assert (x2873 x1417))
(assert (= (and x1918 x838) x44))
(assert (x2873 x162))
(assert (x2873 x2278))
(assert (x2873 x31))
(assert (x2873 x784))
(assert (x2886 x2556))
(assert (= (x996 64 x1816 67) (x2864 (x996 64 x1816 67))))
(assert (x2873 x1128))
(assert (= x3028 (or x170 x870)))
(assert (x2873 x614))
(assert (x2747 10000000000 x2860))
(assert (x2873 x2136))
(assert (x625 x1296))
(assert (x2873 x1480))
(assert (x2873 x2605))
(assert (x2720 x2907))
(assert (x2873 x228))
(assert (x2873 x2040))
(assert (= x2912 (and (not x2274) x1185)))
(assert (x2873 x313))
(assert (x2873 x361))
(assert (x2886 x2990))
(assert (x2873 x544))
(assert (x2873 x2455))
(assert (x2873 x840))
(assert (= (x141 (x996 64 x1797 0)) 64))
(assert (x2873 x1455))
(assert (x2873 x1801))
(assert (= (and x973 x794) x1933))
(assert (= x2088 (and x1512 x2835)))
(assert (x2873 x180))
(assert (x322 x2575 2))
(assert (x2873 x2771))
(assert (x2873 x2770))
(assert (x2873 x1155))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x996 64 x1649 0)))
(assert (= (and x1768 x520) x2542))
(assert (< (x996 64 x1965 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2873 x984))
(assert (x2873 x1361))
(assert (x2873 x2247))
(assert (> (x996 64 x2849 0) 10000))
(assert (= x2751 (and x56 x1749)))
(assert (x2873 x2769))
(assert (= (and x1578 x1440) x882))
(assert (x2873 x315))
(assert (x2873 x1775))
(assert (> (x996 64 x94 0) 10000))
(assert (x2873 x2193))
(assert (x322 x2511 2))
(assert (= x1183 (and x370 x518)))
(assert (x322 x1199 340282366920938463463374607431768211456))
(assert (x2873 x1533))
(assert (x625 x791))
(assert (x2873 x260))
(assert (x625 x311))
(assert (x2873 x1853))
(assert (x2873 x1488))
(assert (and (= 27 (x474 9 3)) (= 81 (x474 9 9)) (= 9 (x474 3 3)) (= (x474 27 3) 81)))
(assert (not (x2529 (x996 64 x1122 0))))
(assert (x1620 x2830))
(assert (x1620 x1868))
(assert (x2873 x934))
(assert (x2873 x245))
(assert (= x1222 (and x1311 x2416)))
(assert (x1692 x2990))
(assert (x2873 x2571))
(assert (x2873 x407))
(assert (x2873 x2713))
(assert (x2873 x1402))
(assert (= (=> (= x2624 x1476) x1585) x104))
(assert (= (x141 (x996 64 x2849 0)) 64))
(assert (x2873 x2688))
(assert (not (x2529 (x996 64 x2849 0))))
(assert (x2720 x1017))
(assert (x2873 x1784))
(assert (= (and x1583 x508) x2781))
(assert (x2873 x1180))
(assert (x2873 x2069))
(assert (x322 x72 2))
(assert (x2873 x780))
(assert (x2873 x744))
(assert (x2873 x1001))
(assert (x2873 x2551))
(assert (= (x141 (x996 64 x1624 0)) 64))
(assert (= (and x1426 (not x1555)) x2155))
(assert (=> (<= x1797 10000) (= (x2864 x1797) 0)))
(assert (x2747 10000000000 x3061))
(assert (x2720 x1708))
(assert (= x1539 (and x2781 x2007)))
(assert (= (x676 (x996 64 x2622 0)) 0))
(assert (x2886 x2319))
(assert (x322 x2203 2))
(assert (x2886 2))
(assert (= (and x2150 x663) x22))
(assert (x2873 x568))
(assert (x322 x2618 2))
(assert (x2873 x2081))
(assert (x2873 x1767))
(assert (x2873 x1702))
(assert (= x1475 (=> (and (= x1873 (+ x2385 x1319)) (= (* 10000000000 x362) x2718) (= false x1500) (= x2718 x1319) (= x2562 false)) x2061)))
(assert (x2873 x1574))
(assert (x2873 x25))
(assert (x2873 x1982))
(assert (x2873 x570))
(assert (= (or x578 x1002) x2512))
(assert (x2886 x2203))
(assert (x2873 x1895))
(assert (x2529 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (and x158 (not x1846)) x2925))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x996 64 x2622 0)))
(assert (x1620 x873))
(assert (x2873 x2854))
(assert (x625 x2289))
(assert (x2873 x2549))
(assert (= x2917 (x1789 (x996 64 x2917 0))))
(assert (= (and (not x971) x2970) x42))
(assert (x2873 x468))
(assert (x2873 x173))
(assert (x2873 x1276))
(assert (x2886 x667))
(assert (x2873 x1264))
(assert (x322 x1799 2))
(assert (x1430 x2601))
(assert (x625 x1865))
(assert (x2873 x1376))
(assert (= (or x379 x629) x584))
(assert (x2873 x2543))
(assert (x2873 x1218))
(assert (< (x996 64 x1122 66) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2873 x1561))
(assert (x169 x2929))
(assert (not (x2529 (x996 64 x1624 0))))
(assert (x2747 10000000000 x1693))
(assert (x2873 x495))
(assert (not (x2529 (x996 64 x1122 67))))
(assert (> (x996 64 x1122 66) 10000))
(assert (x2886 x698))
(assert (= x2639 (=> (and (= false x1526) (= x1989 x2177) (= x2177 (* x988 10000000000)) (= false x1059) (= x1057 (+ x229 x1989))) x566)))
(check-sat)
(exit)
