(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x338 () Bool)
(declare-fun x378 () Bool)
(declare-fun x66 () Bool)
(declare-fun x315 () Int)
(declare-fun x202 () Int)
(declare-fun x492 () Int)
(declare-fun x430 () Int)
(declare-fun x446 () Int)
(declare-fun x601 () Int)
(declare-fun x229 (Int) Int)
(declare-fun x138 () Bool)
(declare-fun x47 () Bool)
(declare-fun x90 () Bool)
(declare-fun x38 () Int)
(declare-fun x176 () Int)
(declare-fun x148 () Int)
(declare-fun x530 () Bool)
(declare-fun x92 () Bool)
(declare-fun x462 () Int)
(declare-fun x321 () Bool)
(declare-fun x181 () Bool)
(declare-fun x468 () Int)
(declare-fun x110 () Int)
(declare-fun x142 () Bool)
(declare-fun x118 () Bool)
(declare-fun x528 () Bool)
(declare-fun x200 () Bool)
(declare-fun x1 () Int)
(declare-fun x369 () Bool)
(declare-fun x478 () Int)
(declare-fun x26 () Int)
(declare-fun x54 (Int Int) Int)
(declare-fun x82 () Int)
(declare-fun x507 () Bool)
(declare-fun x293 () Bool)
(declare-fun x184 () Bool)
(declare-fun x271 () Int)
(declare-fun x402 () Bool)
(declare-fun x305 () Bool)
(declare-fun x362 () Int)
(declare-fun x543 () Int)
(declare-fun x323 () Int)
(declare-fun x227 () Int)
(declare-fun x592 () Int)
(declare-fun x502 () Int)
(declare-fun x344 () Int)
(declare-fun x348 () Bool)
(declare-fun x568 () Bool)
(declare-fun x477 () Bool)
(declare-fun x263 () Int)
(declare-fun x44 () Int)
(declare-fun x234 () Bool)
(declare-fun x449 () Int)
(declare-fun x140 () Int)
(declare-fun x580 () Int)
(declare-fun x421 () Int)
(declare-fun x70 () Bool)
(declare-fun x87 () Int)
(declare-fun x448 () Int)
(declare-fun x177 () Int)
(declare-fun x170 () Int)
(declare-fun x584 () Int)
(declare-fun x198 () Int)
(declare-fun x328 () Int)
(declare-fun x242 () Int)
(declare-fun x24 () Int)
(declare-fun x214 () Int)
(declare-fun x557 () Int)
(declare-fun x245 () Bool)
(declare-fun x308 () Int)
(declare-fun x440 () Int)
(declare-fun x330 (Int Int) Int)
(declare-fun x79 () Int)
(declare-fun x339 () Int)
(declare-fun x302 () Bool)
(declare-fun x248 () Int)
(declare-fun x397 () Int)
(declare-fun x444 (Int) Int)
(declare-fun x162 () Int)
(declare-fun x520 () Int)
(declare-fun x359 () Int)
(declare-fun x56 () Bool)
(declare-fun x105 () Int)
(declare-fun x301 () Bool)
(declare-fun x504 () Int)
(declare-fun x253 (Int) Int)
(declare-fun x554 () Int)
(declare-fun x610 () Int)
(declare-fun x392 () Bool)
(declare-fun x605 () Bool)
(declare-fun x251 (Int Int) Int)
(declare-fun x135 () Int)
(declare-fun x244 () Int)
(declare-fun x487 () Int)
(declare-fun x589 () Int)
(declare-fun x25 () Int)
(declare-fun x353 () Bool)
(declare-fun x552 () Bool)
(declare-fun x104 () Int)
(declare-fun x107 () Int)
(declare-fun x283 () Bool)
(declare-fun x299 () Int)
(declare-fun x451 () Int)
(declare-fun x516 () Bool)
(declare-fun x603 () Bool)
(declare-fun x139 () Bool)
(declare-fun x442 () Int)
(declare-fun x368 () Int)
(declare-fun x262 () Bool)
(declare-fun x414 () Int)
(declare-fun x69 () Bool)
(declare-fun x424 () Int)
(declare-fun x523 () Int)
(declare-fun x306 () Int)
(declare-fun x266 () Int)
(declare-fun x334 () Bool)
(declare-fun x169 () Int)
(declare-fun x60 () Int)
(declare-fun x237 () Int)
(declare-fun x496 () Bool)
(declare-fun x499 () Int)
(declare-fun x581 () Bool)
(declare-fun x508 () Int)
(declare-fun x372 () Int)
(declare-fun x419 () Int)
(declare-fun x222 () Int)
(declare-fun x12 () Int)
(declare-fun x550 () Int)
(declare-fun x322 () Int)
(declare-fun x94 () Int)
(declare-fun x598 () Bool)
(declare-fun x429 () Int)
(declare-fun x101 () Bool)
(declare-fun x559 () Bool)
(declare-fun x21 () Bool)
(declare-fun x159 () Bool)
(declare-fun x475 () Bool)
(declare-fun x403 () Int)
(declare-fun x165 () Bool)
(declare-fun x146 () Int)
(declare-fun x500 () Int)
(declare-fun x497 () Bool)
(declare-fun x501 () Bool)
(declare-fun x204 () Int)
(declare-fun x224 () Int)
(declare-fun x384 () Bool)
(declare-fun x381 () Int)
(declare-fun x52 () Bool)
(declare-fun x173 () Bool)
(declare-fun x49 () Int)
(declare-fun x3 () Bool)
(declare-fun x482 () Int)
(declare-fun x120 () Bool)
(declare-fun x316 () Int)
(declare-fun x573 () Int)
(declare-fun x454 () Int)
(declare-fun x113 () Int)
(declare-fun x232 () Bool)
(declare-fun x129 () Int)
(declare-fun x304 (Int Int) Int)
(declare-fun x39 () Int)
(declare-fun x364 () Int)
(declare-fun x272 () Int)
(declare-fun x532 () Bool)
(declare-fun x212 () Bool)
(declare-fun x373 () Bool)
(declare-fun x437 () Int)
(declare-fun x332 () Int)
(declare-fun x236 () Int)
(declare-fun x426 () Bool)
(declare-fun x591 () Int)
(declare-fun x602 () Bool)
(declare-fun x314 () Int)
(declare-fun x479 () Int)
(declare-fun x143 () Bool)
(declare-fun x435 () Int)
(declare-fun x461 () Bool)
(declare-fun x466 () Int)
(declare-fun x534 () Bool)
(declare-fun x147 () Int)
(declare-fun x209 () Bool)
(declare-fun x207 () Int)
(declare-fun x83 () Bool)
(declare-fun x453 () Bool)
(declare-fun x91 () Int)
(declare-fun x203 () Int)
(declare-fun x456 () Bool)
(declare-fun x375 () Bool)
(declare-fun x576 () Bool)
(declare-fun x78 () Int)
(declare-fun x267 () Int)
(declare-fun x156 () Bool)
(declare-fun x23 () Bool)
(declare-fun x223 () Int)
(declare-fun x485 () Int)
(declare-fun x390 () Bool)
(declare-fun x409 () Bool)
(declare-fun x168 () Int)
(declare-fun x349 () Bool)
(declare-fun x154 () Int)
(declare-fun x333 () Bool)
(declare-fun x331 () Bool)
(declare-fun x506 () Bool)
(declare-fun x288 () Bool)
(declare-fun x240 () Bool)
(declare-fun x5 () Bool)
(declare-fun x577 () Int)
(declare-fun x20 () Bool)
(declare-fun x386 () Bool)
(declare-fun x524 () Int)
(declare-fun x548 (Int) Int)
(declare-fun x438 () Bool)
(declare-fun x127 () Int)
(declare-fun x604 () Int)
(declare-fun x417 () Int)
(declare-fun x42 () Int)
(declare-fun x519 () Bool)
(declare-fun x190 () Bool)
(declare-fun x121 () Int)
(declare-fun x420 () Int)
(declare-fun x10 () Int)
(declare-fun x416 () Int)
(declare-fun x196 () Int)
(declare-fun x354 () Bool)
(declare-fun x606 () Int)
(declare-fun x164 () Bool)
(declare-fun x407 () Int)
(declare-fun x590 () Bool)
(declare-fun x292 () Bool)
(declare-fun x197 () Int)
(declare-fun x586 () Int)
(declare-fun x111 () Bool)
(declare-fun x476 () Bool)
(declare-fun x155 () Bool)
(declare-fun x382 () Int)
(declare-fun x46 () Int)
(declare-fun x93 () Int)
(declare-fun x360 () Bool)
(declare-fun x582 () Int)
(declare-fun x529 () Int)
(declare-fun x431 (Int) Int)
(declare-fun x179 () Bool)
(declare-fun x71 () Int)
(declare-fun x163 () Int)
(declare-fun x517 () Int)
(declare-fun x522 () Int)
(declare-fun x123 () Int)
(declare-fun x405 () Bool)
(declare-fun x98 () Int)
(declare-fun x158 () Bool)
(declare-fun x350 () Int)
(declare-fun x246 () Int)
(declare-fun x503 () Bool)
(declare-fun x275 () Bool)
(declare-fun x6 () Bool)
(declare-fun x608 () Int)
(declare-fun x312 () Int)
(declare-fun x206 () Bool)
(declare-fun x464 () Int)
(declare-fun x58 () Bool)
(declare-fun x460 () Bool)
(declare-fun x239 () Int)
(declare-fun x257 () Int)
(declare-fun x130 (Int) Int)
(declare-fun x370 () Bool)
(declare-fun x235 () Bool)
(declare-fun x131 () Bool)
(declare-fun x28 () Int)
(declare-fun x465 () Int)
(declare-fun x145 () Int)
(declare-fun x551 () Bool)
(declare-fun x394 () Bool)
(declare-fun x387 (Int) Int)
(declare-fun x371 () Int)
(declare-fun x61 () Int)
(declare-fun x547 () Bool)
(declare-fun x470 () Int)
(declare-fun x361 () Bool)
(declare-fun x211 () Int)
(declare-fun x537 () Bool)
(declare-fun x578 () Int)
(declare-fun x329 () Int)
(declare-fun x65 () Int)
(declare-fun x151 () Int)
(declare-fun x427 () Bool)
(declare-fun x247 () Int)
(declare-fun x137 () Int)
(declare-fun x81 () Bool)
(declare-fun x241 () Bool)
(declare-fun x63 () Bool)
(declare-fun x141 () Bool)
(declare-fun x439 () Int)
(declare-fun x226 () Bool)
(declare-fun x412 () Bool)
(declare-fun x62 () Int)
(declare-fun x351 () Int)
(declare-fun x106 () Int)
(declare-fun x579 () Bool)
(declare-fun x521 () Bool)
(declare-fun x213 () Int)
(declare-fun x95 () Bool)
(declare-fun x511 () Int)
(declare-fun x265 () Bool)
(declare-fun x258 () Bool)
(declare-fun x594 () Int)
(declare-fun x185 () Bool)
(declare-fun x553 () Int)
(declare-fun x122 () Int)
(declare-fun x367 () Int)
(declare-fun x428 () Int)
(declare-fun x325 () Int)
(declare-fun x491 () Int)
(declare-fun x183 () Bool)
(declare-fun x19 () Int)
(declare-fun x290 () Int)
(declare-fun x563 () Bool)
(declare-fun x14 () Int)
(declare-fun x254 () Int)
(declare-fun x297 (Int) Int)
(declare-fun x593 () Bool)
(declare-fun x566 () Int)
(declare-fun x40 () Bool)
(declare-fun x400 () Bool)
(declare-fun x7 () Int)
(declare-fun x611 () Int)
(declare-fun x115 () Bool)
(declare-fun x279 () Bool)
(declare-fun x59 () Bool)
(declare-fun x15 (Int) Int)
(declare-fun x215 () Bool)
(declare-fun x174 () Bool)
(declare-fun x152 () Int)
(declare-fun x255 () Bool)
(declare-fun x136 () Bool)
(declare-fun x613 () Int)
(declare-fun x294 () Int)
(declare-fun x459 () Int)
(declare-fun x436 () Int)
(declare-fun x88 () Int)
(declare-fun x471 () Int)
(declare-fun x388 () Int)
(declare-fun x249 () Int)
(declare-fun x533 () Int)
(declare-fun x187 (Int) Int)
(declare-fun x126 () Int)
(declare-fun x285 () Int)
(declare-fun x357 () Int)
(declare-fun x188 () Bool)
(declare-fun x243 () Int)
(declare-fun x474 () Bool)
(declare-fun x280 () Bool)
(declare-fun x380 () Bool)
(declare-fun x558 () Bool)
(declare-fun x585 () Bool)
(declare-fun x296 () Int)
(declare-fun x189 () Int)
(declare-fun x205 () Bool)
(declare-fun x270 () Bool)
(declare-fun x564 () Int)
(declare-fun x612 () Bool)
(declare-fun x13 (Int Int Int) Int)
(declare-fun x256 () Int)
(declare-fun x452 () Bool)
(declare-fun x588 () Bool)
(declare-fun x489 () Int)
(declare-fun x514 (Int) Int)
(declare-fun x233 () Int)
(declare-fun x210 () Bool)
(declare-fun x153 () Int)
(declare-fun x182 () Int)
(declare-fun x194 (Int) Bool)
(declare-fun x57 () Int)
(declare-fun x541 () Bool)
(declare-fun x518 () Int)
(declare-fun x413 () Int)
(declare-fun x16 () Int)
(declare-fun x346 () Int)
(declare-fun x408 () Int)
(declare-fun x410 () Int)
(declare-fun x303 () Int)
(declare-fun x36 (Int) Int)
(declare-fun x347 () Int)
(declare-fun x50 () Bool)
(declare-fun x406 () Int)
(declare-fun x340 () Bool)
(declare-fun x545 () Int)
(declare-fun x96 () Bool)
(declare-fun x43 () Int)
(declare-fun x505 () Int)
(declare-fun x569 () Int)
(declare-fun x102 () Bool)
(declare-fun x509 () Bool)
(declare-fun x68 () Int)
(declare-fun x313 () Int)
(declare-fun x607 (Int) Int)
(declare-fun x67 () Int)
(declare-fun x404 () Int)
(declare-fun x217 () Int)
(declare-fun x399 () Bool)
(declare-fun x356 () Int)
(declare-fun x483 () Int)
(declare-fun x423 () Int)
(declare-fun x335 () Int)
(declare-fun x259 () Bool)
(declare-fun x284 () Int)
(declare-fun x287 (Int) Int)
(declare-fun x542 () Int)
(declare-fun x41 () Bool)
(declare-fun x538 () Int)
(declare-fun x595 (Int) Int)
(declare-fun x336 () Int)
(declare-fun x32 () Bool)
(declare-fun x326 () Int)
(declare-fun x208 () Int)
(declare-fun x274 () Int)
(declare-fun x64 () Bool)
(declare-fun x51 () Bool)
(declare-fun x289 () Int)
(declare-fun x74 () Bool)
(declare-fun x556 () Bool)
(declare-fun x526 () Int)
(declare-fun x385 () Int)
(declare-fun x345 () Bool)
(declare-fun x418 () Int)
(declare-fun x531 () Int)
(declare-fun x560 () Int)
(declare-fun x112 () Int)
(declare-fun x398 () Int)
(declare-fun x309 () Int)
(declare-fun x433 () Bool)
(declare-fun x597 () Bool)
(declare-fun x84 () Int)
(declare-fun x72 () Int)
(declare-fun x318 () Int)
(declare-fun x89 () Int)
(declare-fun x273 () Bool)
(declare-fun x609 () Int)
(declare-fun x17 () Int)
(declare-fun x231 () Int)
(declare-fun x488 () Bool)
(declare-fun x583 () Int)
(declare-fun x365 () Int)
(declare-fun x441 () Bool)
(declare-fun x570 () Bool)
(declare-fun x562 () Bool)
(declare-fun x512 () Int)
(declare-fun x567 () Int)
(declare-fun x132 () Bool)
(declare-fun x191 () Bool)
(declare-fun x376 () Int)
(declare-fun x171 () Int)
(declare-fun x320 () Int)
(declare-fun x277 () Bool)
(declare-fun x218 () Int)
(declare-fun x342 () Int)
(declare-fun x401 () Int)
(declare-fun x310 () Bool)
(declare-fun x221 () Int)
(declare-fun x109 () Int)
(declare-fun x192 () Int)
(declare-fun x555 () Int)
(declare-fun x264 () Int)
(declare-fun x238 () Bool)
(declare-fun x525 () Int)
(declare-fun x549 () Int)
(declare-fun x352 () Bool)
(declare-fun x599 () Int)
(declare-fun x447 () Int)
(declare-fun x450 () Bool)
(declare-fun x393 () Bool)
(declare-fun x341 () Int)
(declare-fun x311 () Int)
(declare-fun x117 (Int Int) Int)
(declare-fun x540 () Int)
(declare-fun x434 () Bool)
(declare-fun x282 () Int)
(declare-fun x317 () Bool)
(declare-fun x149 () Bool)
(declare-fun x510 () Int)
(declare-fun x2 () Int)
(declare-fun x286 () Int)
(define-fun x103 ((x379 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x379) (>= x379 0)) x379 (- x379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x261 ((x379 Int)) Int (ite (and (< x379 0) (>= x379 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x379 115792089237316195423570985008687907853269984665640564039457584007913129639936) x379))
(define-fun x411 ((x379 Int)) Int (ite (and (>= x379 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x379)) x379 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x379) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x379)) (- x379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x379 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x379 0)) (+ x379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x54 x379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x180 ((x201 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x201) (<= 0 x201)))
(define-fun x513 ((x201 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x201) (>= x201 0)))
(define-fun x472 ((x201 Int)) Bool (and (= x201 (x117 x201 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x117 115792089237316195423570985008687907853269984665640564039457584007913129639935 x201) x201)))
(define-fun x37 ((x201 Int)) Bool (and (= 0 (x117 0 x201)) (= 0 (x117 x201 0))))
(define-fun x134 ((x201 Int)) Bool (= x201 (x117 x201 x201)))
(define-fun x45 ((x201 Int)) Bool (and (x37 x201) (x134 x201) (x472 x201)))
(define-fun x228 ((x201 Int) (x572 Int)) Bool (= (x117 x201 x572) (x117 x572 x201)))
(define-fun x125 ((x201 Int) (x572 Int)) Bool (and (<= 0 (x117 x201 x572)) (=> (<= 0 x201) (<= (x117 x201 x572) x201)) (=> (<= 0 x572) (>= x572 (x117 x201 x572)))))
(define-fun x150 ((x201 Int) (x572 Int)) Bool (and (x228 x201 x572) (x125 x201 x572)))
(define-fun x574 ((x201 Int)) Bool (= (x117 x201 1461501637330902918203684832716283019655932542975) (x54 x201 1461501637330902918203684832716283019655932542976)))
(define-fun x30 ((x201 Int)) Bool (and (x150 x201 1461501637330902918203684832716283019655932542975) (x574 x201)))
(define-fun x561 ((x201 Int) (x572 Int)) Bool (and (> x572 (x54 x201 x572)) (>= (x54 x201 x572) 0)))
(define-fun x300 ((x201 Int) (x572 Int)) Bool (=> (and (< 0 x572) (<= 0 x201)) (= (< x201 x572) (= x201 (x54 x201 x572)))))
(define-fun x432 ((x201 Int) (x572 Int)) Bool (=> (and (> x572 0) (and (> (+ x572 x572) x201) (<= x572 x201))) (= (x54 x201 x572) (- x201 x572))))
(define-fun x395 ((x201 Int) (x572 Int)) Bool (=> (> x572 0) (= x201 (+ (* (x251 x201 x572) x572) (x54 x201 x572)))))
(define-fun x4 ((x201 Int) (x572 Int)) Bool (and (x300 x201 x572) (x561 x201 x572) (x395 x201 x572) (x432 x201 x572)))
(define-fun x469 ((x201 Int)) Bool (= (x54 0 x201) 0))
(define-fun x484 ((x201 Int)) Bool (= (x54 x201 1) 0))
(define-fun x498 ((x201 Int)) Bool (= (x54 x201 x201) 0))
(define-fun x29 ((x201 Int)) Bool (and (x498 x201) (x484 x201) (x469 x201)))
(define-fun x515 ((x201 Int) (x572 Int)) Bool (= (* x572 x201) (x304 x201 x572)))
(define-fun x291 ((x201 Int) (x572 Int)) Bool (and (= (* (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936) x201) (x304 x201 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x304 (- x201 115792089237316195423570985008687907853269984665640564039457584007913129639936) x572) (- (* x201 x572) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x572))) (= (x304 (- x201 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* x201 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x445 ((x201 Int) (x572 Int)) Bool (=> (and (> x201 0) (> x572 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x304 x201 x572)) (= x572 (x251 (x411 (x304 x201 x572)) x201)))))
(define-fun x85 ((x201 Int) (x572 Int)) Bool (=> (and (not (= 0 x572)) (not (= 0 x201))) (and (= x572 (x251 (x304 x201 x572) x201)) (= (x251 (x304 x201 x572) x572) x201))))
(define-fun x383 ((x201 Int) (x572 Int)) Bool (=> (and (> x201 0) (> x572 0)) (= (< (x251 115792089237316195423570985008687907853269984665640564039457584007913129639935 x201) x572) (> (x304 x201 x572) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x467 ((x201 Int) (x572 Int)) Bool (and (= (x411 (x304 (- x201 115792089237316195423570985008687907853269984665640564039457584007913129639936) x572)) (x411 (x304 x201 x572))) (= (x411 (x304 x201 x572)) (x411 (x304 (- x201 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x411 (x304 x201 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x411 (x304 x201 x572)))))
(define-fun x220 ((x201 Int) (x572 Int)) Bool (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x201) (> x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x572))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x304 (- x201 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x251 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x572)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x201)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572) (< 0 x572)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x201))) (= (>= (x251 57896044618658097711785492504343953926634992332820282019728792003956564819968 x572) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x201)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x304 (- x201 115792089237316195423570985008687907853269984665640564039457584007913129639936) x572)))) (=> (and (and (> x572 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572)) (and (< 0 x201) (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= x201 (x251 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572)) (<= (x304 x201 x572) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (> x572 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x572)) (and (< 0 x201) (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x304 x201 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x572) (x251 57896044618658097711785492504343953926634992332820282019728792003956564819968 x201))))))
(define-fun x463 ((x201 Int) (x572 Int)) Bool (and (x85 x201 x572) (x467 x201 x572) (x383 x201 x572) (x515 x201 x572) (x445 x201 x572) (x291 x201 x572) (x220 x201 x572)))
(define-fun x22 ((x201 Int)) Bool (and (= (x304 0 x201) 0) (= (x304 x201 0) 0)))
(define-fun x458 ((x201 Int)) Bool (and (= (x304 x201 1) x201) (= (x304 1 x201) x201)))
(define-fun x363 ((x201 Int)) Bool (and (x458 x201) (x22 x201)))
(define-fun x493 ((x201 Int) (x572 Int)) Bool (=> (and (> x572 0) (< 0 x201)) (and (>= x201 (x251 x201 x572)) (>= (x251 x201 x572) 0))))
(define-fun x307 ((x201 Int) (x572 Int)) Bool (=> (and (and (<= 1 x572) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x572)) (and (< x201 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x201))) (and (>= (x251 x201 x572) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x251 x201 x572)))))
(define-fun x175 ((x201 Int) (x572 Int)) Bool (=> (and (> x201 x572) (< 1 x572)) (> x201 (x251 x201 x572))))
(define-fun x11 ((x201 Int) (x572 Int)) Bool (=> (and (> x201 0) (< 0 x572)) (= (< x201 x572) (= 0 (x251 x201 x572)))))
(define-fun x278 ((x201 Int) (x572 Int)) Bool (=> (and (< 0 x572) (< 0 x201)) (and (<= (x304 (x251 x201 x572) x572) x201) (< (- x201 x572) (x304 (x251 x201 x572) x572)))))
(define-fun x178 ((x201 Int) (x572 Int)) Bool (and (x11 x201 x572) (x175 x201 x572) (x307 x201 x572) (x493 x201 x572) (x278 x201 x572)))
(define-fun x193 ((x201 Int)) Bool (= (x251 0 x201) 0))
(define-fun x76 ((x201 Int)) Bool (= x201 (x251 x201 1)))
(define-fun x116 ((x201 Int)) Bool (=> (not (= 0 x201)) (= 1 (x251 x201 x201))))
(define-fun x48 ((x201 Int)) Bool (and (x76 x201) (x193 x201) (x116 x201)))
(define-fun x99 ((x201 Int)) Bool (= (x411 x201) (+ (x54 x201 32) (x117 x201 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x124 ((x201 Int)) Bool (and (x99 x201) (x150 x201 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x100 ((x201 Int) (x572 Int)) Bool (= (x304 x201 x572) (x304 x572 x201)))
(define-fun x494 ((x201 Int) (x572 Int)) Bool (and (=> (and (> x572 0) (< x201 0)) (< (x304 x201 x572) 0)) (=> (and (< x572 0) (< 0 x201)) (< (x304 x201 x572) 0)) (=> (and (> 0 x201) (> 0 x572)) (< 0 (x304 x201 x572))) (=> (and (> x572 0) (> x201 0)) (< 0 (x304 x201 x572)))))
(define-fun x425 ((x201 Int) (x572 Int)) Bool (and (x467 x201 x572) (x85 x201 x572) (x100 x201 x572) (x445 x201 x572) (x383 x201 x572) (x494 x201 x572) (x220 x201 x572)))
(define-fun x324 ((x201 Int) (x572 Int)) Bool (=> (and (> x201 0) (< 0 x572)) (and (> (* x572 (x251 x201 x572)) (- x201 x572)) (<= (* (x251 x201 x572) x572) x201))))
(define-fun x8 ((x201 Int) (x572 Int)) Bool (and (x11 x201 x572) (x324 x201 x572) (x175 x201 x572) (x307 x201 x572) (x493 x201 x572)))
(define-fun x422 ((x201 Int)) Bool (= (x54 x201 340282366920938463463374607431768211456) (x117 x201 340282366920938463463374607431768211455)))
(define-fun x133 ((x201 Int)) Bool (and (x422 x201) (x150 x201 340282366920938463463374607431768211455)))
(define-fun x172 ((x396 Int)) Int 0)
(define-fun x195 ((x396 Int)) Int 0)
(define-fun x596 ((x396 Int)) Int 0)
(define-fun x230 ((x396 Int)) Int 0)
(define-fun x327 ((x396 Int)) Int 0)
(define-fun x161 ((x396 Int)) Int 0)
(define-fun x391 ((x396 Int)) Int 0)
(define-fun x457 ((x396 Int)) Int 0)
(define-fun x544 ((x396 Int)) Int 0)
(define-fun x377 ((x396 Int)) Int 0)
(define-fun x167 ((x396 Int)) Int 0)
(define-fun x160 ((x396 Int)) Int 0)
(define-fun x337 ((x396 Int)) Int 0)
(define-fun x565 ((x396 Int)) Int 0)
(define-fun x415 ((x396 Int)) Int 0)
(define-fun x486 ((x396 Int)) Int 0)
(define-fun x199 ((x396 Int)) Int 0)
(define-fun x186 ((x396 Int)) Int 0)
(define-fun x252 ((x396 Int)) Int 0)
(define-fun x157 ((x396 Int)) Int 0)
(define-fun x546 ((x396 Int)) Int (ite (= x396 x243) x303 (x187 x396)))
(define-fun x535 ((x396 Int)) Int (ite (= x129 x396) x137 (x546 x396)))
(define-fun x80 ((x396 Int)) Int (ite (= x396 128) 1 (x160 x396)))
(define-fun x33 ((x396 Int)) Int (ite (= 192 x396) 0 (x327 x396)))
(define-fun x53 ((x396 Int)) Int (ite (= 224 x396) 0 (x596 x396)))
(define-fun x495 ((x396 Int)) Int (ite (= x396 256) 0 (x172 x396)))
(define-fun x281 ((x396 Int)) Int (ite (= x396 160) 192 (x186 x396)))
(define-fun x298 ((x396 Int)) Int (ite (= 288 x396) x129 (x33 x396)))
(define-fun x75 ((x396 Int)) Int (ite (= 320 x396) x208 (x53 x396)))
(define-fun x319 ((x396 Int)) Int (ite (= 352 x396) x504 (x495 x396)))
(define-fun x571 ((x396 Int)) Int (ite (= x396 160) 288 (x281 x396)))
(define-fun x144 ((x396 Int)) Int (ite (= 128 x396) x38 (x199 x396)))
(define-fun x480 ((x396 Int)) Int (ite (= x396 160) x28 (x391 x396)))
(define-fun x443 ((x396 Int)) Int (ite x174 (x167 x396) (x480 x396)))
(define-fun x575 ((x396 Int)) Int (ite (= x510 x396) x382 (x415 x396)))
(define-fun x114 ((x396 Int)) Int (ite x174 (x544 x396) (x575 x396)))
(define-fun x35 ((x396 Int)) Int (ite (= x320 x396) x504 (x114 x396)))
(define-fun x55 ((x396 Int)) Int (ite x238 (x114 x396) (x35 x396)))
(define-fun x128 ((x396 Int)) Int (ite (= x396 x223) x442 (x565 x396)))
(define-fun x97 ((x396 Int)) Int (ite x174 (x377 x396) (x128 x396)))
(define-fun x166 ((x396 Int)) Int 0)
(define-fun x473 ((x396 Int)) Int 0)
(define-fun x216 ((x396 Int)) Int 0)
(define-fun x389 ((x396 Int)) Int 0)
(define-fun x455 ((x396 Int)) Int 0)
(define-fun x260 ((x396 Int)) Int (ite (> x78 x396) (x15 x396) 0))
(define-fun x269 ((x396 Int)) Int (ite (and (> x78 x396) (>= x396 0)) (x297 x396) (x260 x396)))
(define-fun x374 ((x396 Int)) Int (ite (= x396 x192) x583 (x535 x396)))
(define-fun x119 ((x396 Int)) Int (ite (= x129 x396) x364 (x374 x396)))
(define-fun x527 ((x396 Int)) Int (ite (= x249 x396) x500 (x253 x396)))
(define-fun x343 ((x396 Int)) Int (ite x66 (x253 x396) (ite x597 (x527 x396) (x253 x396))))
(define-fun x355 ((x396 Int)) Int (ite (= x396 x249) x508 (x130 x396)))
(define-fun x73 ((x396 Int)) Int (ite x66 (x130 x396) (x355 x396)))
(define-fun x77 ((x396 Int)) Int (ite (= x113 x396) x582 (x287 x396)))
(define-fun x27 ((x396 Int)) Int (ite x292 (x287 x396) (x77 x396)))
(define-fun x490 ((x396 Int)) Int (ite x66 (x287 x396) (ite x597 (x27 x396) (x287 x396))))
(define-fun x358 ((x396 Int)) Int 0)
(define-fun x481 ((x396 Int)) Int (ite (= x396 x462) x367 (x119 x396)))
(define-fun x9 ((x396 Int)) Int (ite (= 128 x396) 1 (x337 x396)))
(define-fun x295 ((x396 Int)) Int (ite (= 192 x396) 0 (x161 x396)))
(define-fun x587 ((x396 Int)) Int (ite (= x396 224) 0 (x230 x396)))
(define-fun x18 ((x396 Int)) Int (ite (= 256 x396) 0 (x195 x396)))
(define-fun x86 ((x396 Int)) Int (ite (= 160 x396) 192 (x252 x396)))
(define-fun x108 ((x396 Int)) Int (ite (= 288 x396) x129 (x295 x396)))
(define-fun x225 ((x396 Int)) Int (ite (= 320 x396) x372 (x587 x396)))
(define-fun x276 ((x396 Int)) Int (ite (= 352 x396) x504 (x18 x396)))
(define-fun x31 ((x396 Int)) Int (ite (= x396 160) 288 (x86 x396)))
(define-fun x34 ((x396 Int)) Int (ite x597 (x27 x396) (x287 x396)))
(define-fun x219 ((x396 Int)) Int (ite x597 (x527 x396) (x253 x396)))
(define-fun x539 ((x396 Int)) Int (ite (= x396 x28) x263 (x486 x396)))
(define-fun x250 ((x396 Int)) Int (ite x174 (x457 x396) (x539 x396)))
(define-fun x536 ((x201 Int) (x572 Int) (x600 Int) (x366 Int)) Bool (=> (and (>= x600 x201) (<= x572 x366) (<= 0 x201) (>= x572 0)) (>= (x304 x600 x366) (x304 x201 x572))))
(define-fun x268 ((x201 Int) (x572 Int) (x600 Int) (x366 Int)) Bool (=> (= x201 x600) (= (x304 x201 (- x572 x366)) (- (x304 x201 x572) (x304 x600 x366)))))
(assert (= x302 (=> (and (or x317 (not x317)) (= x317 (= x322 x582))) x275)))
(assert (= 0 (x595 340282366920938463463374607431768211455)))
(assert (x536 x44 x89 x282 x146))
(assert (x180 x322))
(assert (= x478 (x607 (x13 64 x478 8))))
(assert (x30 x207))
(assert (x180 x221))
(assert (x4 x207 1461501637330902918203684832716283019655932542976))
(assert (= x550 (x607 (x13 64 x550 8))))
(assert (= (x595 x39) (x595 (+ x39 1))))
(assert (x180 x582))
(assert (x180 x306))
(assert (x268 x44 x89 x567 x553))
(assert (x363 (- x282 x410)))
(assert (= x118 (and x70 x361)))
(assert (x536 x511 x520 x567 x553))
(assert (= (x595 (x13 64 x153 12)) (x13 64 x153 12)))
(assert (x363 (- x520 x282)))
(assert (x268 x44 x89 x410 x169))
(assert (x363 (- x567 x169)))
(assert (x268 x567 x553 x169 x410))
(assert (x194 1889567281))
(assert (x268 x44 x89 x169 x410))
(assert (x48 x72))
(assert (= (x595 (x13 64 x153 x105)) (x13 64 x153 x105)))
(assert (x268 x520 x511 x89 x44))
(assert (x425 x511 (- x520 x553)))
(assert (x536 x511 x520 x44 x89))
(assert (x268 x169 x410 x567 x553))
(assert (x425 x44 (- x89 x553)))
(assert (x425 x89 (- x44 x169)))
(assert (x180 x442))
(assert (x180 x60))
(assert (x29 x557))
(assert (= (=> (and (= (x103 (+ 32 x28)) x510) (= (not (< (+ x94 32) x533)) x280) (= (x269 x127) x382) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x28) (<= x28 18446744073709551519)) (<= 132 x78) (<= x263 340282366920938463463374607431768211455) (= (+ x127 32) x94) (= x127 (+ x543 32)) (<= x28 18446744073709551614) (>= 18446744073709551614 x28) (= (x269 x94) x442) (or (>= x28 115792089237316195423570985008687907853269984665640564039457584007913129639841) (<= x28 18446744073709551519)) (= (x103 (+ 32 x510)) x223) (>= 18446744073709551615 x28) (< x28 x423) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819931 x591) (<= x28 18446744073709551615) (= x423 (x103 (+ 96 x28))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x28)) (<= 96 x591) (not (> x28 x423)) (<= x78 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 1461501637330902918203684832716283019655932542975 x442) (= x263 (x269 x543)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x28) (= (x261 (- x78 x543)) x591)) (and x380 x280)) x184))
(assert (not (x194 (x13 64 x550 8))))
(assert (x180 x62))
(assert (x194 18446744073709551519))
(assert (x180 x303))
(assert (x536 x89 x44 x410 x169))
(assert (x180 x168))
(assert (x180 x79))
(assert (x363 x38))
(assert (= (=> (and (= x43 x65) (= false x570) (= (x548 x592) x545) (= (x13 64 x123 12) x592) (= x226 (>= x43 x447)) (= false x456) (= (x103 (+ x214 x545)) x65) (not (>= (+ x545 x214) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= false x136) (= false x497)) x226) x21))
(assert (= (and x255 (not x52)) x238))
(assert (x268 x89 x44 x511 x520))
(assert (x180 x545))
(assert (x268 x410 x169 x89 x44))
(assert (x194 18446744073709551487))
(assert (x363 (- x282 x511)))
(assert (x48 x218))
(assert (= (and x241 x118) x232))
(assert (= (or x174 x265) x255))
(assert (= (and x392 x56) x69))
(assert (x363 (- x89 x553)))
(assert (x536 x511 x520 x410 x169))
(assert (x363 (- x520 x567)))
(assert (x180 x462))
(assert (x180 x312))
(assert (x536 x520 x511 x282 x146))
(assert (x536 x567 x553 x520 x511))
(assert (= (x595 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (x180 x123))
(assert (x180 x416))
(assert (= (=> (and (= (x117 340282366920938463463374607431768211455 x381) x500) (= x582 x428)) x142) x275))
(assert (x268 x89 x44 x169 x410))
(assert (= x603 (or x427 x547)))
(assert (x4 x104 340282366920938463463374607431768211456))
(assert (x194 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (< 10000 (x13 64 x123 0)))
(assert (x363 (- x567 x520)))
(assert (=> (>= 10000 x359) (= (x595 x359) 0)))
(assert (x425 x511 (- x520 x44)))
(assert (x425 x169 (- x410 x282)))
(assert (= x380 (=> (and (= x162 (x144 128)) (= x465 x403) (= (> x162 0) x52)) (and (=> (not x52) x340) (=> x52 x461)))))
(assert (= (or x132 x111) x143))
(assert (x425 x520 (- x511 x567)))
(assert (= 12 (x229 (x13 64 x153 12))))
(assert (> (x13 64 x123 x470) 10000))
(assert (x268 x511 x520 x146 x282))
(assert (x268 x89 x44 x553 x567))
(assert (= (x595 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (= (x444 (x13 64 x121 2)) 64))
(assert (x425 x146 (- x282 x169)))
(assert (x194 404098525))
(assert (x29 1461501637330902918203684832716283019655932542976))
(assert (x363 (- x511 x567)))
(assert (= (x595 1461501637330902918203684832716283019655932542975) 0))
(assert (x268 x146 x282 x567 x553))
(assert (x536 x146 x282 x410 x169))
(assert (x425 x44 (- x89 x169)))
(assert (= x559 (and x138 x537)))
(assert (x363 x177))
(assert (x536 x44 x89 x567 x553))
(assert (x180 x381))
(assert (= (x444 (x13 64 x123 12)) 64))
(assert (x425 x553 (- x567 x44)))
(assert (< 10000 (x13 64 x121 2)))
(assert (= x532 (or x386 x521)))
(assert (x180 x169))
(assert (x425 x169 (- x410 x520)))
(assert (x513 x196))
(assert (x363 (- x89 x146)))
(assert (x180 x356))
(assert (= (x607 (x13 64 x153 x105)) x153))
(assert (x363 (- x282 x44)))
(assert (x425 x567 (- x553 x282)))
(assert (> (x13 64 x153 x105) 10000))
(assert (x363 x248))
(assert (x425 x520 (- x511 x44)))
(assert (= (=> (= (= 0 (ite (> x580 0) x580 (ite (not (> x448 x577)) 1 0))) x537) (and (=> (and (= x347 x203) (not x537)) x95) (=> (and (and (or (and (= x71 x448) x139) (and (= x71 x254) (not x139))) (= x139 (> x254 x448))) x537) x206))) x460))
(assert (x180 x163))
(assert (x180 x282))
(assert (x180 x127))
(assert (x180 x204))
(assert (x180 x294))
(assert (> (x13 64 x478 8) 10000))
(assert (x363 (- x44 x282)))
(assert (x180 x88))
(assert (= (x607 (x13 64 x296 8)) x296))
(assert (x425 x553 (- x567 x146)))
(assert (x425 x44 (- x89 x282)))
(assert (x425 x567 (- x553 x89)))
(assert (< (x13 64 x121 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x180 x524))
(assert (= (=> (and (and (and (= (>= x504 x418) x585) (= x156 false) (>= 127 x518) (= x62 404098525) (= x131 false) (= x501 false) (= x305 false) (= x165 false) (<= x414 127) (= x212 false) (= x256 x306) x400 (= x284 1889567281) (= 4 x376) (= false x283) (= x264 x613) (= (>= x264 x418) x400) (<= 1 x152) (= x231 (x13 64 x306 0)) (= false x405) (= x152 (x36 x129)) (<= x418 20282409603651670423947251286015) (= false x348) (= x345 false) (= x412 false) x585 (= x418 (x431 x231)) (= 36 x489) (<= x414 127) (<= 1 x57) (<= x518 127) (= (x36 x129) x57) (= x306 x482) (= x476 false)) (and (and (and (= x215 false) (= x599 x610) (= false x258) (= x121 x145) (= x64 false) x373 (= (x13 64 x121 2) x274) (= (x514 x274) x365) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x78) (= false x438) (= x129 x121) (<= x110 127) (= x93 (x36 x586)) (= 1889567281 x182) (>= 18446744073709551615 x610) (= x90 false) (= x198 x362) (= false x173) (>= x93 1) (= x610 (x297 4)) (= false x164) (= (x297 0) x198) (<= 68 x78) (= x373 (>= x365 x397)) (>= 127 x110)) (and (and (and (= (x374 x129) x289) (= x179 false) (>= 127 x25) (= x135 (+ 4 x610)) (= (+ x286 x543) x533) (= x38 (x269 x135)) (>= x491 1) (>= 18446744073709551487 x491) (= x543 (+ x135 32)) (= 128 x299) (= (+ 128 x491) x28) (= x468 (* x38 32)) (not (> x533 x78)) (= x583 (x535 x192)) (= (+ 31 x135) x492) (= false x503) (= x192 x311) (= (x117 115792089237316195423570985008687907853269984665640564039457584007913129639904 x42) x491) (= x364 x289) (<= 1 x512) (= (* x38 96) x286) (< x492 x78) (= x12 2997214202) (= (+ 63 x468) x42) (= x512 (x36 x129)) (>= 127 x25) (>= 18446744073709551615 x38) (= (< x543 x533) x353)) (= x381 x371)) (= x311 x403))) (and (= x516 false) (= x342 x213) (<= x404 127) (= x102 false) (<= 1 x140) (= x397 (x251 x435 x140)) (= x437 36) (= 1289409798 x336) (>= 105312291668557186697918027683670432318895095400549111254310977535 x140) (>= x244 1) (= (* x342 1000000000000000000) x435) (<= x404 127) (= x342 x504) (= x605 false) (= false x360) (= false x552) (= (x36 x129) x244) (= false x234)))) (and (= false x74) (<= x224 127) (= false x488) (= x41 false) (= x401 (x13 64 x153 12)) (= x549 404098525) (= false x279) (>= 57896044618658097711785492504343953926634992332820282019728 x504) (= (x103 (+ x351 x217)) x538) (>= 127 x224) (>= x318 1) (= false x205) (= x499 4) (= x538 x447) (= x217 (x548 x401)) (= false x402) (= x450 false) (= x482 x589) (= false x475) (not (>= (+ x217 x351) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x36 x129) x318) (= false x235) (= x530 false) (= x196 36))) (and (=> x353 x184) (=> (not x353) x380))) x81))
(assert (x180 x320))
(assert (x268 x520 x511 x44 x89))
(assert (= 0 (x595 4294967295)))
(assert (x180 x594))
(assert (> (x13 64 x123 12) 10000))
(assert (x425 x511 (- x520 x89)))
(assert (x180 x611))
(assert (x180 x44))
(assert (x363 x540))
(assert (= x292 (and x310 x317)))
(assert (x8 x290 1000000000000000000))
(assert (x180 x518))
(assert (not (x194 (x13 64 x153 12))))
(assert (x180 x57))
(assert (x180 x176))
(assert (x180 x550))
(assert (x425 x169 (- x410 x89)))
(assert (x194 1000000000000000000))
(assert (x536 x567 x553 x282 x146))
(assert (= 0 (x595 1889567281)))
(assert (x268 x567 x553 x511 x520))
(assert (x268 x553 x567 x410 x169))
(assert (= (or x597 x474) x434))
(assert (x268 x553 x567 x44 x89))
(assert (x268 x410 x169 x553 x567))
(assert (x180 x329))
(assert (x425 x89 (- x44 x567)))
(assert (= (and (not x393) x59) x92))
(assert (x180 x314))
(assert (x180 x308))
(assert (= (x229 (x13 64 x123 x470)) x470))
(assert (x180 x577))
(assert (x536 x282 x146 x520 x511))
(assert (x425 x89 (- x44 x553)))
(assert (x180 x94))
(assert (x180 x61))
(assert (x180 x272))
(assert (x425 x146 (- x282 x511)))
(assert (x180 x471))
(assert (x180 x110))
(assert (x425 x89 (- x44 x146)))
(assert (x180 x151))
(assert (x45 x42))
(assert (x363 (- x410 x89)))
(assert (x363 (- x567 x146)))
(assert (=> (>= 10000 x306) (= (x595 x306) 0)))
(assert (x180 x599))
(assert (x363 x410))
(assert (x180 x335))
(assert (= (=> (and (= x598 (not (< 1 x564))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x304 x410 x169)) (<= 0 x487) (not (< x314 x169)) (= x169 (x261 (- x314 x566))) (= x410 (x225 x148)) (= (x304 x410 x169) x487) (= x67 (x251 x487 1000000000000000000)) (= (x387 x578) x566) (= x470 (+ x505 1)) (= (x9 128) x126) (<= 1 x126) (= x564 (x9 128)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x487) (= x344 (x31 160)) (= x578 (x13 64 x123 x470)) (= x148 (x103 (+ 32 x344)))) (and x598 (=> (= x67 x214) x21))) x563))
(assert (x536 x520 x511 x44 x89))
(assert (= (and (not x534) x378) x3))
(assert (x45 x104))
(assert (x425 x410 (- x169 x89)))
(assert (x268 x511 x520 x89 x44))
(assert (x180 x429))
(assert (x180 x109))
(assert (x363 (- x282 x89)))
(assert (x29 x42))
(assert (x363 (- x146 x567)))
(assert (x363 96))
(assert (x363 (- x89 x410)))
(assert (x268 x146 x282 x169 x410))
(assert (= x115 (=> (and (>= 57896044618658097711785492504343953926634992332820282019728 x177) (<= 1 x446) (= (x304 x282 x146) x177) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x304 x282 x146)) (not (> x146 x584)) (= (x261 (- x584 x106)) x146) (= (x103 (+ x523 x322)) x308) (= x308 x582) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x523 x322))) (<= 0 x177) (= x523 (x251 x522 x446)) (= (* 1000000000000000000 x177) x522)) x302)))
(assert (x180 x362))
(assert (x180 x1))
(assert (x180 x267))
(assert (x180 x549))
(assert (x363 (- x44 x511)))
(assert (= (or x338 x3) x138))
(assert (x178 x522 x446))
(assert (x180 x192))
(assert (x268 x553 x567 x89 x44))
(assert (x536 x553 x567 x44 x89))
(assert (x425 x410 (- x169 x553)))
(assert (x180 x254))
(assert (x536 x567 x553 x44 x89))
(assert (= (x595 (+ x406 1)) (x595 x406)))
(assert (x180 x208))
(assert (= (x13 64 x296 8) (x595 (x13 64 x296 8))))
(assert (x268 x44 x89 x553 x567))
(assert (= (x595 57896044618658097711785492504343953926634992332820282019728792003956564819931) 0))
(assert (x180 x162))
(assert (= (x595 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x268 x511 x520 x169 x410))
(assert (x425 x282 (- x146 x169)))
(assert (= 0 (x595 404098525)))
(assert (x30 x557))
(assert (=> (>= 10000 x129) (= (x595 x129) 0)))
(assert (x180 x430))
(assert (= x519 (or x556 x92)))
(assert (x268 x44 x89 x520 x511))
(assert (x180 x12))
(assert (x180 x428))
(assert (= x277 (or x238 x190)))
(assert (x8 x487 1000000000000000000))
(assert (x268 x520 x511 x567 x553))
(assert (x180 x296))
(assert (x425 x282 (- x146 x553)))
(assert (x45 340282366920938463463374607431768211455))
(assert (x363 (- x146 x511)))
(assert (x180 x98))
(assert (x425 x89 (- x44 x410)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x13 64 x153 x105)))
(assert (x536 x44 x89 x410 x169))
(assert (not (x194 (x13 64 x478 8))))
(assert (x180 x325))
(assert (x180 x223))
(assert (x363 x169))
(assert (x363 (- x282 x553)))
(assert (x180 x606))
(assert (x180 x382))
(assert (x425 x511 (- x520 x169)))
(assert (x363 1000000000000000000))
(assert (< (x13 64 x123 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x268 x520 x511 x169 x410))
(assert (x268 x89 x44 x520 x511))
(assert (x180 x121))
(assert (= (and x139 x559) x188))
(assert (x180 x42))
(assert (x194 57896044618658097711785492504343953926634992332820282019728792003956564819931))
(assert (< (x13 64 x478 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x194 (x13 64 x123 12))))
(assert (x425 x44 (- x89 x520)))
(assert (x363 (- x520 x410)))
(assert (x268 x89 x44 x282 x146))
(assert (x180 x408))
(assert (x463 96 x38))
(assert (= (x595 (x13 64 x123 0)) (x13 64 x123 0)))
(assert (= x378 (and x393 x59)))
(assert (x268 x567 x553 x89 x44))
(assert (x48 x236))
(assert (= (and x519 (not x353)) x174))
(assert (x268 x44 x89 x282 x146))
(assert (= 0 (x595 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x363 (- x410 x520)))
(assert (= (=> (= x56 (= (ite (< 0 x357) x357 (ite (not (< x106 x448)) 1 0)) 0)) (and (=> (and x56 (and (or (and (= x584 x381) (not x149)) (and (= x584 x448) x149)) (= x149 (< x448 x381)))) x115) (=> (and (= x582 x322) (not x56)) x302))) x40))
(assert (x268 x567 x553 x146 x282))
(assert (= 0 (x595 18446744073709551487)))
(assert (x48 x522))
(assert (x180 x403))
(assert (x363 (- x567 x89)))
(assert (x363 (- x89 x282)))
(assert (x536 x146 x282 x44 x89))
(assert (x180 x257))
(assert (x180 x211))
(assert (x425 x282 (- x146 x520)))
(assert (x425 x410 (- x169 x511)))
(assert (x180 x341))
(assert (x268 x282 x146 x89 x44))
(assert (x425 x44 (- x89 x567)))
(assert (x180 x510))
(assert (x363 (- x169 x567)))
(assert (x178 x72 x385))
(assert (x363 (- x520 x553)))
(assert (x363 (- x511 x410)))
(assert (x425 x567 (- x553 x146)))
(assert (x180 x299))
(assert (x180 x82))
(assert (= (x229 (x13 64 x296 8)) 8))
(assert (x513 x49))
(assert (x363 (- x511 x282)))
(assert (x180 x148))
(assert (= 64 (x444 (x13 64 x123 0))))
(assert (x180 x93))
(assert (= x111 (or x453 x603)))
(assert (x268 x146 x282 x511 x520))
(assert (x425 x553 (- x567 x511)))
(assert (x425 x410 (- x169 x146)))
(assert (= x190 (and x52 x255)))
(assert (x180 x351))
(assert (= x521 (and x69 (not x149))))
(assert (x425 x520 (- x511 x146)))
(assert (x180 x508))
(assert (x268 x520 x511 x410 x169))
(assert (x180 x553))
(assert (= (x607 (x13 64 x123 0)) x123))
(assert (x268 x553 x567 x169 x410))
(assert (x194 18446744073709551614))
(assert (x180 x436))
(assert (= x551 (and x528 x334)))
(assert (= (x607 (x13 64 x306 0)) x306))
(assert (x45 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x607 (x13 64 x123 x470)) x123))
(assert (x180 x91))
(assert (x194 1289409798))
(assert (x180 x347))
(assert (x29 x104))
(assert (x268 x146 x282 x553 x567))
(assert (x536 x553 x567 x520 x511))
(assert (= (x607 (x13 64 x121 2)) x121))
(assert (x180 x49))
(assert (= (x595 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x180 x207))
(assert (x180 x189))
(assert (x536 x146 x282 x520 x511))
(assert (x180 x423))
(assert (x536 x410 x169 x520 x511))
(assert (x180 x385))
(assert (x180 x68))
(assert (x180 x239))
(assert (x180 x171))
(assert (x180 x197))
(assert (x45 1461501637330902918203684832716283019655932542975))
(assert (x536 x146 x282 x567 x553))
(assert (= (x595 20282409603651670423947251286015) 0))
(assert (x180 x526))
(assert (= (x595 105312291668557186697918027683670432318895095400549111254310977535) 0))
(assert (x180 x214))
(assert (x180 x217))
(assert (= (=> (and (and (and (= x254 x371) (and (= (> x46 0) x393) (= x315 (x13 64 x153 0)) (>= x613 0) (= (x187 x243) x303) (<= x208 20282409603651670423947251286015) (>= x1 1) (= x356 x153) (= x243 x311) (= false x507) (= false x576) (= (>= x346 x208) x541) (= x137 x466) (= 128 x171) (= x613 x346) (= x341 (x36 x129)) x541 (>= x341 1) (>= 127 x424) (= x1 (x80 128)) (>= 127 x424) (= x611 2378104546) (= x46 (x80 128)) (= x208 (x431 x315)) (= (x546 x129) x466))) (and (= false x602) (= x153 x449))) (and (not (= x129 x359)) x612 (= x449 x589) (= x321 false) (<= 0 x371) (>= x311 0) (= false x593) (>= x129 1) (<= x311 1461501637330902918203684832716283019655932542975) (= x398 0) (= x399 (< 0 (x36 x129))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x525) (>= x266 0) (>= 1461501637330902918203684832716283019655932542975 x586) (<= 0 x328) (not (= x586 x129)) (not (= x586 x359)) (<= x421 1461501637330902918203684832716283019655932542975) (not (= x606 x586)) (>= x586 1) (not (= x606 x359)) (>= x529 0) (= x129 x502) x96 (>= 1461501637330902918203684832716283019655932542975 x465) (<= 0 x313) (>= 1461501637330902918203684832716283019655932542975 x459) (>= x421 0) (not (= x129 x606)) (>= 1461501637330902918203684832716283019655932542975 x266) (= (> (x36 x586) 0) x96) (= false x352) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x371) (= x211 36) (>= 1461501637330902918203684832716283019655932542975 x129) (<= 0 x525) (= x612 (> (x36 x359) 0)) (= 2997214202 x19) (<= x84 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x84 0) x399 (= x370 false) (<= 0 x112) (<= x202 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x354 (< 0 (x36 x606))) (>= x459 0) (= x451 1) (<= x112 4294967295) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x529) (<= x589 1461501637330902918203684832716283019655932542975) (>= x606 1) (>= x359 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x313) (<= x606 1461501637330902918203684832716283019655932542975) (<= x359 1461501637330902918203684832716283019655932542975) (<= x68 1461501637330902918203684832716283019655932542975) x354 (<= 0 x589) (<= 0 x202) (<= x328 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (and (= (ite (= 0 x567) (ite (= x567 0) 1 0) (ite (= 0 x385) 1 0)) x407) (>= x601 1) (= (x13 64 x550 8) x242) (= x567 (x130 x242)) (= x526 (x298 x388)) (= (x253 x242) x577) (= (x571 160) x573) (= (x319 x246) x385) (>= x154 1) (= (x80 128) x601) (= (x117 1461501637330902918203684832716283019655932542975 x526) x550) (= (x80 128) x154) (<= x577 340282366920938463463374607431768211455) (= (x103 (+ 64 x573)) x246) (>= 340282366920938463463374607431768211455 x567) (= x406 (+ 1 x242)) (= (x287 x406) x203) (= (x571 160) x388) (= x534 (> x407 0))) (or (and (= x580 x407) x534) (and (not x534) (= (ite (= x577 x254) 1 0) x580)))) x393) x460) (=> (and (not x393) (= 0 x351)) x81))) x509))
(assert (x425 x410 x169))
(assert (= (and x183 x293) x427))
(assert (x268 x146 x282 x44 x89))
(assert (x180 x492))
(assert (x425 x567 (- x553 x44)))
(assert (x180 x24))
(assert (=> (>= 10000 x192) (= (x595 x192) 0)))
(assert (x180 x153))
(assert (x180 x65))
(assert (x45 x207))
(assert (x268 x511 x520 x410 x169))
(assert (x536 x282 x146 x567 x553))
(assert (x363 (- x553 x410)))
(assert (x180 x285))
(assert (x194 2378104546))
(assert (x268 x553 x567 x282 x146))
(assert (x180 x233))
(assert (x29 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x595 2997214202) 0))
(assert (x180 x419))
(assert (= (x13 64 x153 0) (x595 (x13 64 x153 0))))
(assert (x180 x483))
(assert (x363 (- x410 x146)))
(assert (x536 x44 x89 x520 x511))
(assert (x194 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x462) (= (x595 x462) 0)))
(assert (x425 x146 (- x282 x44)))
(assert (x268 x282 x146 x169 x410))
(assert (x363 (- x553 x282)))
(assert (x194 57896044618658097711785492504343953926634992332820282019728))
(assert (x363 (- x169 x520)))
(assert (x4 x526 1461501637330902918203684832716283019655932542976))
(assert (x180 x440))
(assert (x513 x211))
(assert (x425 x567 (- x553 x410)))
(assert (= x547 (and x293 (not x183))))
(assert (x536 x89 x44 x282 x146))
(assert (x194 340282366920938463463374607431768211455))
(assert (x536 x282 x146 x44 x89))
(assert (x180 x531))
(assert (x180 x38))
(assert (= x59 true))
(assert (x363 (- x146 x410)))
(assert (= (and (not x159) x181) x453))
(assert (= (and x138 (not x537)) x155))
(assert (= (x444 (x13 64 x296 8)) 64))
(assert (x425 x89 (- x44 x511)))
(assert (x48 1000000000000000000))
(assert (x180 x523))
(assert (x180 x350))
(assert (x180 x608))
(assert (= 0 (x595 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x180 x2))
(assert (= (x595 (x13 64 x121 2)) (x13 64 x121 2)))
(assert (x194 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x363 (- x44 x410)))
(assert (x180 x145))
(assert (x425 x282 (- x146 x511)))
(assert (x180 x67))
(assert (x268 x146 x282 x410 x169))
(assert (x48 x435))
(assert (x180 x479))
(assert (x425 x553 (- x567 x520)))
(assert (= 0 (x595 2378104546)))
(assert (x536 x169 x410 x44 x89))
(assert (x363 (- x567 x410)))
(assert (< 10000 (x13 64 x306 0)))
(assert (x425 x410 (- x169 x44)))
(assert (= (x229 (x13 64 x153 x105)) x105))
(assert (x180 x573))
(assert (x180 x424))
(assert (x180 x410))
(assert (x4 x557 1461501637330902918203684832716283019655932542976))
(assert (x536 x410 x169 x567 x553))
(assert (x513 x437))
(assert (= (and x496 x277) x361))
(assert (x536 x169 x410 x520 x511))
(assert (x268 x169 x410 x44 x89))
(assert (not (x194 (x13 64 x121 2))))
(assert (x180 x237))
(assert (x180 x147))
(assert (x180 x286))
(assert (= (x444 (x13 64 x123 x470)) 64))
(assert (x180 x309))
(assert (x536 x89 x44 x567 x553))
(assert (x268 x520 x511 x282 x146))
(assert (= (x595 (+ x249 1)) (x595 x249)))
(assert (x180 x271))
(assert (not (x194 (x13 64 x123 x470))))
(assert (= (and x310 (not x317)) x5))
(assert (x180 x236))
(assert (=> (<= x243 10000) (= (x595 x243) 0)))
(assert (x178 x435 x140))
(assert (x536 x553 x567 x410 x169))
(assert (x425 x520 (- x511 x410)))
(assert (x363 (- x553 x520)))
(assert (x180 x196))
(assert (< (x13 64 x153 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x441 (=> (= (= (ite (> x163 0) x163 (ite (not (> x448 x483)) 1 0)) 0) x159) (and (=> (and (and (= (> x309 x448) x183) (or (and (= x122 x309) (not x183)) (and (= x448 x122) x183))) x159) x558) (=> (and (= x314 x233) (not x159)) x563)))))
(assert (x180 x152))
(assert (x180 x560))
(assert (x194 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x180 x46))
(assert (x268 x567 x553 x410 x169))
(assert (x180 x584))
(assert (x425 x410 (- x169 x282)))
(assert (x268 x89 x44 x146 x282))
(assert (x268 x520 x511 x553 x567))
(assert (x180 x448))
(assert (x268 x553 x567 x146 x282))
(assert (x180 x140))
(assert (x536 x520 x511 x567 x553))
(assert (x180 x554))
(assert (x363 (- x44 x520)))
(assert (x178 x218 x236))
(assert (x180 x368))
(assert (= (x595 (x13 64 x123 12)) (x13 64 x123 12)))
(assert (x425 x146 (- x282 x567)))
(assert (x268 x146 x282 x520 x511))
(assert (x363 (- x89 x169)))
(assert (= x181 (or x426 x273)))
(assert (x425 x44 (- x89 x410)))
(assert (=> (>= 10000 x586) (= 0 (x595 x586))))
(assert (x363 (- x282 x520)))
(assert (x194 2997214202))
(assert (x463 1000000000000000000 x177))
(assert (= (and x277 (not x496)) x66))
(assert (x425 x511 (- x520 x567)))
(assert (x180 x489))
(assert (x194 20282409603651670423947251286015))
(assert (x425 x520 (- x511 x282)))
(assert (x180 x520))
(assert (x425 x146 (- x282 x553)))
(assert (x363 (- x146 x89)))
(assert (= (x595 57896044618658097711785492504343953926634992332820282019728) 0))
(assert (x363 (- x520 x169)))
(assert (x425 x146 (- x282 x410)))
(assert (x180 x364))
(assert (x363 (- x520 x89)))
(assert (= 0 (x229 (x13 64 x306 0))))
(assert (=> (<= x153 10000) (= (x595 x153) 0)))
(assert (x180 x478))
(assert (x180 x26))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x13 64 x550 8)))
(assert (x180 x609))
(assert (x425 x282 (- x146 x567)))
(assert (x363 x342))
(assert (x536 x520 x511 x410 x169))
(assert (x180 x517))
(assert (x29 x207))
(assert (x363 (- x410 x511)))
(assert (x425 x146 (- x282 x89)))
(assert (= 64 (x444 (x13 64 x478 8))))
(assert (x180 x129))
(assert (x180 x359))
(assert (= x153 (x607 (x13 64 x153 0))))
(assert (x180 x25))
(assert (= (and x551 x581) x273))
(assert (x363 (- x511 x146)))
(assert (x180 x289))
(assert (x363 x520))
(assert (x268 x410 x169 x44 x89))
(assert (x180 x71))
(assert (x268 x169 x410 x89 x44))
(assert (x45 x381))
(assert (x180 x365))
(assert (x180 x465))
(assert (=> (<= x478 10000) (= (x595 x478) 0)))
(assert (x48 x385))
(assert (x268 x410 x169 x520 x511))
(assert (x425 x44 (- x89 x146)))
(assert (x194 4294967295))
(assert (x180 x107))
(assert (x180 x154))
(assert (= x123 (x607 (x13 64 x123 12))))
(assert (x425 x89 (- x44 x520)))
(assert (x363 x146))
(assert (x180 x17))
(assert (= (or x232 x562) x392))
(assert (x180 x284))
(assert (x363 (- x410 x44)))
(assert (x425 x520 x511))
(assert (= (x595 1289409798) 0))
(assert (x363 (- x169 x553)))
(assert (x363 (- x511 x44)))
(assert (x536 x169 x410 x567 x553))
(assert (= x259 (or x384 x188)))
(assert (x180 x468))
(assert (x180 x135))
(assert (x180 x511))
(assert (x268 x282 x146 x553 x567))
(assert (x425 x553 (- x567 x410)))
(assert (x180 x28))
(assert (x180 x376))
(assert (x180 x543))
(assert (x268 x410 x169 x282 x146))
(assert (x425 x553 (- x567 x89)))
(assert (x180 x89))
(assert (x536 x282 x146 x410 x169))
(assert (x536 x410 x169 x44 x89))
(assert (x425 x410 (- x169 x520)))
(assert (= (x229 (x13 64 x123 0)) 0))
(assert (x48 x487))
(assert (x268 x146 x282 x89 x44))
(assert (> (x13 64 x296 8) 10000))
(assert (x194 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x425 x44 x89))
(assert (< (x13 64 x153 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x268 x282 x146 x567 x553))
(assert (x363 (- x410 x553)))
(assert (x268 x89 x44 x410 x169))
(assert (x363 (- x567 x511)))
(assert (= (x595 (x13 64 x478 8)) (x13 64 x478 8)))
(assert (= 0 (x595 1000000000000000000)))
(assert (x180 x504))
(assert (x363 (- x567 x282)))
(assert (x180 x557))
(assert (x425 x89 (- x44 x282)))
(assert (x268 x44 x89 x146 x282))
(assert (x363 (- x146 x44)))
(assert (= (x229 (x13 64 x550 8)) 8))
(assert (x48 x290))
(assert (x363 32))
(assert (x180 x318))
(assert (x363 (- x282 x567)))
(assert (< (x13 64 x296 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x363 (- x146 x169)))
(assert (= x338 (and x534 x378)))
(assert (= 64 (x444 (x13 64 x550 8))))
(assert (not x509))
(assert (x268 x567 x553 x44 x89))
(assert (x180 x247))
(assert (x180 x533))
(assert (x180 x78))
(assert (x180 x564))
(assert (x180 x263))
(assert (x180 x326))
(assert (x513 x376))
(assert (x363 (- x89 x567)))
(assert (> (x13 64 x550 8) 10000))
(assert (= (x444 (x13 64 x153 12)) 64))
(assert (x180 x404))
(assert (x536 x567 x553 x410 x169))
(assert (x425 x282 x146))
(assert (x180 x323))
(assert (x363 (- x282 x169)))
(assert (x180 x137))
(assert (= 2 (x229 (x13 64 x121 2))))
(assert (x268 x511 x520 x553 x567))
(assert (x180 x446))
(assert (x180 x414))
(assert (= x23 (and (not x56) x392)))
(assert (x268 x511 x520 x567 x553))
(assert (x180 x182))
(assert (x180 x256))
(assert (x425 x511 (- x520 x282)))
(assert (x180 x491))
(assert (x30 x526))
(assert (x268 x520 x511 x146 x282))
(assert (x268 x567 x553 x282 x146))
(assert (x180 x16))
(assert (x363 x567))
(assert (= (x595 (x13 64 x123 x470)) (x13 64 x123 x470)))
(assert (= x265 (and x519 x353)))
(assert (x268 x282 x146 x44 x89))
(assert (x180 x555))
(assert (x180 x420))
(assert (x363 (- x553 x511)))
(assert (= (or x434 x66) x334))
(assert (x268 x511 x520 x282 x146))
(assert (x425 x169 (- x410 x553)))
(assert (= (=> (and (= (x144 128) x91) (= (> x91 0) x496)) (and (=> (not x496) x301) (=> (and x496 (and (= (x103 (+ x2 64)) x24) (= (x117 1461501637330902918203684832716283019655932542975 x207) x296) (= (x253 x249) x106) (<= x106 340282366920938463463374607431768211455) (= x82 (x261 (- x381 x106))) (= (x55 x170) x446) (= (x443 160) x239) (= x594 (x97 x440)) (= x170 (x103 (+ 32 x239))) (= (+ x249 1) x113) (= (x13 64 x296 8) x249) (= x2 (x443 160)) (= x555 (x144 128)) (= (> x82 0) x70) (= (x97 x24) x207) (>= x555 1) (<= 1 x267) (= x147 (x443 160)) (= x109 (x144 128)) (= (x287 x113) x322) (= x440 (x103 (+ 64 x147))) (= x267 (x144 128)) (<= 1 x109))) (and (=> (and (and (and (>= 340282366920938463463374607431768211455 x282) (= (x130 x249) x282) (= (< 0 x332) x241) (= x332 (ite (= 0 x282) (ite (= 0 x282) 1 0) (ite (= x446 0) 1 0)))) (or (and x241 (= x332 x357)) (and (not x241) (= x357 (ite (= x106 x381) 1 0))))) x70) x40) (=> (and (= x322 x428) (not x70)) x142))))) x340))
(assert (x180 x222))
(assert (= x310 (or x532 x23)))
(assert (x463 1000000000000000000 x342))
(assert (x425 x282 (- x146 x44)))
(assert (x180 x332))
(assert (x425 x520 (- x511 x89)))
(assert (x425 x567 (- x553 x520)))
(assert (x363 (- x410 x282)))
(assert (x363 (- x553 x44)))
(assert (=> (>= 10000 x606) (= (x595 x606) 0)))
(assert (x180 x122))
(assert (= x597 (or x5 x292)))
(assert (x536 x553 x567 x282 x146))
(assert (x268 x282 x146 x520 x511))
(assert (x180 x357))
(assert (x180 x244))
(assert (x268 x169 x410 x520 x511))
(assert (not (x194 (x13 64 x153 x105))))
(assert (x180 x591))
(assert (x180 x500))
(assert (x363 (- x169 x282)))
(assert (x363 (- x169 x146)))
(assert (x180 x417))
(assert (x425 x567 (- x553 x169)))
(assert (x425 x520 (- x511 x553)))
(assert (x180 x104))
(assert (x363 (- x511 x169)))
(assert (x536 x89 x44 x520 x511))
(assert (x363 (- x169 x89)))
(assert (x268 x282 x146 x410 x169))
(assert (= (x229 (x13 64 x123 12)) 12))
(assert (x425 x169 (- x410 x146)))
(assert (x180 x342))
(assert (x180 x583))
(assert (x180 x7))
(assert (x363 x44))
(assert (x363 (- x520 x44)))
(assert (x268 x553 x567 x520 x511))
(assert (= (x13 64 x306 0) (x595 (x13 64 x306 0))))
(assert (= x153 (x607 (x13 64 x153 12))))
(assert (x425 x282 (- x146 x410)))
(assert (x363 (- x89 x520)))
(assert (= (or x259 x155) x556))
(assert (= (x595 18446744073709551519) 0))
(assert (x425 x44 (- x89 x511)))
(assert (= 0 (x595 18446744073709551614)))
(assert (x363 (- x146 x553)))
(assert (x180 x569))
(assert (x425 x567 x553))
(assert (x29 x526))
(assert (=> (<= x123 10000) (= 0 (x595 x123))))
(assert (x363 (- x567 x44)))
(assert (x180 x437))
(assert (x268 x44 x89 x511 x520))
(assert (x363 (- x44 x169)))
(assert (= (x13 64 x550 8) (x595 (x13 64 x550 8))))
(assert (not (x194 (x13 64 x296 8))))
(assert (x536 x511 x520 x282 x146))
(assert (=> (<= x550 10000) (= 0 (x595 x550))))
(assert (x268 x282 x146 x511 x520))
(assert (=> (<= x121 10000) (= 0 (x595 x121))))
(assert (x363 (- x520 x146)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x13 64 x123 x470)))
(assert (x268 x410 x169 x567 x553))
(assert (= 8 (x229 (x13 64 x478 8))))
(assert (= (x595 x242) (x595 (+ 1 x242))))
(assert (x180 x224))
(assert (x425 x553 (- x567 x169)))
(assert (x180 x372))
(assert (x363 (- x511 x553)))
(assert (x180 x213))
(assert (x180 x512))
(assert (x425 x553 (- x567 x282)))
(assert (< (x13 64 x306 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x180 x413))
(assert (= (and x69 x149) x386))
(assert (x180 x126))
(assert (x194 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x425 x511 (- x520 x410)))
(assert (x536 x410 x169 x282 x146))
(assert (x180 x10))
(assert (x513 x489))
(assert (x29 x381))
(assert (= (x595 18446744073709551615) 0))
(assert (x363 (- x44 x567)))
(assert (= (x595 x505) (x595 (+ 1 x505))))
(assert (= 0 (x229 (x13 64 x153 0))))
(assert (x45 x557))
(assert (= 64 (x444 (x13 64 x153 0))))
(assert (x363 x511))
(assert (x268 x511 x520 x44 x89))
(assert (x363 (- x553 x146)))
(assert (x180 x499))
(assert (x180 x316))
(assert (x180 x246))
(assert (x180 x601))
(assert (x180 x567))
(assert (= (=> (and (= x72 (* x248 1000000000000000000)) (= (x103 (+ x417 x203)) x168) (not (> x553 x71)) (<= x248 57896044618658097711785492504343953926634992332820282019728) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x203 x417))) (= x553 (x261 (- x71 x577))) (<= 1 x385) (<= 0 x248) (= (x251 x72 x385) x417) (= x248 (x304 x567 x553)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x304 x567 x553)) (= x168 x347)) x95) x206))
(assert (= (and (not x581) x551) x426))
(assert (and (= (x304 9 9) 81) (= 9 (x304 3 3)) (= 27 (x304 9 3)) (= 81 (x304 27 3))))
(assert (x180 x538))
(assert (x363 (- x44 x146)))
(assert (x180 x542))
(assert (x180 x336))
(assert (x363 (- x553 x169)))
(assert (x363 (- x410 x567)))
(assert (x180 x610))
(assert (x180 x87))
(assert (x425 x567 (- x553 x511)))
(assert (x180 x586))
(assert (x180 x464))
(assert (= x95 (=> (and (= x105 (+ x406 1)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x290) (= x419 (x103 (+ x107 32))) (not (< x347 x511)) (= (x304 x520 x511) x290) (= (x571 160) x107) (< (x304 x520 x511) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x120 (not (< 1 x7))) (= x7 (x80 128)) (= x524 (x251 x290 1000000000000000000)) (= (x13 64 x153 x105) x227) (= (x75 x419) x520) (= x176 (x80 128)) (= (x387 x227) x272) (<= 1 x176) (= x511 (x261 (- x347 x272))) (<= 0 x290)) (and x120 (=> (= x351 x524) x81)))))
(assert (not (x194 (x13 64 x306 0))))
(assert (x180 x407))
(assert (x425 x282 (- x146 x89)))
(assert (x180 x418))
(assert (x363 (- x511 x89)))
(assert (x180 x566))
(assert (x363 x553))
(assert (x363 (- x89 x511)))
(assert (x180 x203))
(assert (x133 x381))
(assert (x425 x511 (- x520 x146)))
(assert (x463 1000000000000000000 x248))
(assert (= (=> (and (not (>= (+ x60 x233) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (< x122 x89)) (= (x304 x44 x89) x540) (>= x236 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x304 x44 x89)) (= (x261 (- x122 x483)) x89) (= (* 1000000000000000000 x540) x218) (= (x251 x218 x236) x60) (= x430 (x103 (+ x233 x60))) (>= x540 0) (= x314 x430) (>= 57896044618658097711785492504343953926634992332820282019728 x540)) x563) x558))
(assert (x133 x104))
(assert (x268 x169 x410 x511 x520))
(assert (x180 x466))
(assert (x268 x410 x169 x511 x520))
(assert (x180 x243))
(assert (= (and x559 (not x139)) x384))
(assert (x180 x14))
(assert (x463 1000000000000000000 x540))
(assert (x425 x169 (- x410 x44)))
(assert (x268 x567 x553 x520 x511))
(assert (x4 x42 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x194 (x13 64 x153 0))))
(assert (x425 x169 (- x410 x567)))
(assert (= (=> (and (and (and (= x123 x339) (= false x349)) (and (and (= x247 x323) (<= 1 x257) (<= x429 127) (= x471 128) (= x604 (x13 64 x123 0)) (>= x335 1) (= 2378104546 x61) (= x485 x613) (= (x36 x129) x257) (= x101 (>= x485 x372)) (= false x288) (= x123 x517) (= x367 (x119 x462)) (<= x429 127) x101 (>= 20282409603651670423947251286015 x372) (= x311 x462) (= x335 (x9 128)) (= x58 false) (= x323 (x481 x129)) (= x528 (< 0 x222)) (= x222 (x9 128)) (= (x431 x604) x372)) (= x309 x371))) (and (= false x477) (= false x270) (= 36 x49) (= x589 x339))) (and (=> (and (not x528) (= x214 0)) x21) (=> (and (and (or (and x581 (= x197 x163)) (and (not x581) (= (ite (= x483 x309) 1 0) x163))) (and (= (x31 160) x151) (>= x413 1) (>= x454 1) (= (x117 1461501637330902918203684832716283019655932542975 x557) x478) (= x189 (x103 (+ 64 x151))) (= x236 (x276 x189)) (>= 340282366920938463463374607431768211455 x483) (= x413 (x9 128)) (= (x9 128) x454) (= x204 (x31 160)) (= (ite (= 0 x44) (ite (= x44 0) 1 0) (ite (= x236 0) 1 0)) x197) (= x39 (x13 64 x478 8)) (= x557 (x108 x204)) (= x581 (> x197 0)) (= (x490 x505) x233) (= x483 (x343 x39)) (= (x73 x39) x44) (<= x44 340282366920938463463374607431768211455) (= x505 (+ 1 x39)))) x528) x441))) x301))
(assert (= (=> (and (= (x144 128) x237) (<= 1 x237) (= x320 (x103 (+ 32 x609))) (= x333 (not (< 1 x542))) (= (x144 128) x542) (= (x443 160) x609)) (and x333 x340)) x461))
(assert (x180 x367))
(assert (x425 x169 (- x410 x511)))
(assert (x194 105312291668557186697918027683670432318895095400549111254310977535))
(assert (= 64 (x444 (x13 64 x306 0))))
(assert (x513 x499))
(assert (not (x194 (x13 64 x123 0))))
(assert (x48 x446))
(assert (x180 x397))
(assert (x180 x106))
(assert (x124 x42))
(assert (x425 x410 (- x169 x567)))
(assert (x268 x410 x169 x146 x282))
(assert (x363 (- x169 x511)))
(assert (x463 32 x38))
(assert (> (x13 64 x153 0) 10000))
(assert (x29 32))
(assert (x180 x388))
(assert (x180 x146))
(assert (x425 x146 (- x282 x520)))
(assert (x268 x89 x44 x567 x553))
(assert (= (and (not x528) x334) x132))
(assert (> (x13 64 x153 12) 10000))
(assert (x194 18446744073709551615))
(assert (x194 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x180 x170))
(assert (x180 x198))
(assert (x4 x381 340282366920938463463374607431768211456))
(assert (x425 x520 (- x511 x169)))
(assert (x45 x526))
(assert (x536 x169 x410 x282 x146))
(assert (x180 x454))
(assert (x363 (- x146 x520)))
(assert (= x562 (and x118 (not x241))))
(assert (x4 x42 32))
(assert (x363 (- x44 x553)))
(assert (x180 x439))
(assert (x29 340282366920938463463374607431768211456))
(assert (x363 (- x169 x44)))
(assert (= x474 (and (not x70) x361)))
(assert (x363 x282))
(assert (x180 x580))
(assert (x268 x169 x410 x282 x146))
(assert (x363 (- x553 x89)))
(assert (x48 x140))
(assert (< (x13 64 x123 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x363 x89))
(assert (= x142 (=> (and (= x221 (x144 128)) (= (x117 340282366920938463463374607431768211455 x104) x508) (= x104 (x250 x368)) (>= x316 1) (= x32 (not (< 1 x554))) (<= 1 x221) (= (x443 160) x368) (= x436 (x144 128)) (= (x144 128) x554) (= x316 (x144 128)) (<= 1 x436)) (and x301 x32))))
(assert (x268 x169 x410 x146 x282))
(assert (x180 x344))
(assert (x268 x169 x410 x553 x567))
(assert (=> (>= 10000 x296) (= 0 (x595 x296))))
(assert (x268 x553 x567 x511 x520))
(assert (= (and x159 x181) x293))
(assert (= 64 (x444 (x13 64 x153 x105))))
(check-sat)
(exit)
