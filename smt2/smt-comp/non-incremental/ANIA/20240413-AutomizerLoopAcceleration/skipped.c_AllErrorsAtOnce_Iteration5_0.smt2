(set-info :smt-lib-version 2.6)
(set-logic ANIA)
(set-info :source |
Generated by: Matthias Heizmann
Generated on: 2024-04-13
Generator: Ultimate Automizer
Application: Software Verification
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2024 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2024-04-13, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: State of the Art in Software Verification and
     Witness Validation: SV-COMP 2024.  TACAS 2024
[6] https://sv-comp.sosy-lab.org/2024/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#memory_int_-1| () (Array Int (Array Int Int)))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun ~SIZE~0_0 () Int)
(declare-fun ~MAX~0_0 () Int)
(declare-fun ~SIZE~0_1 () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_2| () Int)
(declare-fun |#valid_2| () (Array Int Int))
(declare-fun |ULTIMATE.start_main_~a~0#1.offset_2| () Int)
(declare-fun |#length_2| () (Array Int Int))
(declare-fun |ULTIMATE.start_main_~a~0#1.base_2| () Int)
(declare-fun v_ArrVal_21_fresh_1 () Int)
(declare-fun v_ArrVal_22_fresh_1 () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_3| () Int)
(declare-fun |#memory_int_3| () (Array Int (Array Int Int)))
(declare-fun |ULTIMATE.start_assume_abort_if_not_~cond#1_5| () Int)
(declare-fun |v_ULTIMATE.start_assume_abort_if_not_#in~cond#1_9_fresh_1| () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_7| () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_8| () Int)
(declare-fun |#memory_int_8| () (Array Int (Array Int Int)))
(declare-fun |ULTIMATE.start_main_~i~0#1_10| () Int)
(declare-fun |ULTIMATE.start___VERIFIER_assert_~cond#1_11| () Int)
(declare-fun |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_9_fresh_1| () Int)
(declare-fun |v_ULTIMATE.start_main_#t~mem11#1_11_fresh_1| () Int)
(assert (not false))
(assert (<= 48 (select (select |#memory_int_-1| 1) 0)))
(assert (>= 48 (select (select |#memory_int_-1| 1) 0)))
(assert (<= (select |#valid_-1| 2) 1))
(assert (>= (select |#valid_-1| 2) 1))
(assert (<= (select |#valid_-1| 0) 0))
(assert (>= (select |#valid_-1| 0) 0))
(assert (< 0 |#StackHeapBarrier_-1|))
(assert (<= 1 (select |#valid_-1| 3)))
(assert (>= 1 (select |#valid_-1| 3)))
(assert (<= 100000 ~MAX~0_0))
(assert (>= 100000 ~MAX~0_0))
(assert (<= (select |#length_-1| 3) 12))
(assert (>= (select |#length_-1| 3) 12))
(assert (<= (select |#length_-1| 2) 10))
(assert (>= (select |#length_-1| 2) 10))
(assert (<= (select |#valid_-1| 1) 1))
(assert (>= (select |#valid_-1| 1) 1))
(assert (<= 2 (select |#length_-1| 1)))
(assert (>= 2 (select |#length_-1| 1)))
(assert (<= (select (select |#memory_int_-1| 1) 1) 0))
(assert (>= (select (select |#memory_int_-1| 1) 1) 0))
(assert (<= ~SIZE~0_0 0))
(assert (>= ~SIZE~0_0 0))
(assert (<= 0 (+ ~SIZE~0_1 2147483648)))
(assert (<= ~SIZE~0_1 2147483647))
(assert (< 1 ~SIZE~0_1))
(assert (not (= |ULTIMATE.start_main_~a~0#1.base_2| 0)))
(assert (= |#valid_2| (store |#valid_-1| |ULTIMATE.start_main_~a~0#1.base_2| v_ArrVal_21_fresh_1)))
(assert (< |ULTIMATE.start_main_~a~0#1.base_2| |#StackHeapBarrier_-1|))
(assert (<= 0 |ULTIMATE.start_main_~a~0#1.offset_2|))
(assert (>= 0 |ULTIMATE.start_main_~a~0#1.offset_2|))
(assert (< ~SIZE~0_1 ~MAX~0_0))
(assert (<= (select |#valid_-1| |ULTIMATE.start_main_~a~0#1.base_2|) 0))
(assert (>= (select |#valid_-1| |ULTIMATE.start_main_~a~0#1.base_2|) 0))
(assert (<= v_ArrVal_21_fresh_1 1))
(assert (>= v_ArrVal_21_fresh_1 1))
(assert (= |#length_2| (store |#length_-1| |ULTIMATE.start_main_~a~0#1.base_2| v_ArrVal_22_fresh_1)))
(assert (<= (* (mod ~SIZE~0_1 1073741824) 4) v_ArrVal_22_fresh_1))
(assert (>= (* (mod ~SIZE~0_1 1073741824) 4) v_ArrVal_22_fresh_1))
(assert (<= |ULTIMATE.start_main_~i~0#1_2| 0))
(assert (>= |ULTIMATE.start_main_~i~0#1_2| 0))
(assert (forall ((v_z_61 Int)) (or (< 3 v_z_61) (forall ((v_y_61 Int) (v_idxDim1_4 Int)) (let ((cse1 (+ |ULTIMATE.start_main_~i~0#1_3| (div |ULTIMATE.start_main_~a~0#1.offset_2| 4)))) (or (let ((cse0 (+ (* v_y_61 4) (* (- 1) v_z_61)))) (= (select (select |#memory_int_-1| v_idxDim1_4) cse0) (select (select |#memory_int_3| v_idxDim1_4) cse0))) (< v_y_61 cse1) (= v_y_61 cse1)))) (< v_z_61 0))))
(assert (forall ((v_z_61 Int)) (or (< v_z_61 0) (< 3 (+ (mod |ULTIMATE.start_main_~a~0#1.offset_2| 4) v_z_61)) (forall ((v_y_61 Int) (v_idxDim1_4 Int)) (or (let ((cse0 (+ (* v_y_61 4) (* (- 1) v_z_61)))) (= (select (select |#memory_int_-1| v_idxDim1_4) cse0) (select (select |#memory_int_3| v_idxDim1_4) cse0))) (< v_y_61 (+ |ULTIMATE.start_main_~i~0#1_3| (div |ULTIMATE.start_main_~a~0#1.offset_2| 4))))))))
(assert (let ((cse0 (mod |ULTIMATE.start_main_~a~0#1.offset_2| 4))) (or (< 0 cse0) (let ((cse8 (div |ULTIMATE.start_main_~a~0#1.offset_2| 4))) (let ((cse1 (+ |ULTIMATE.start_main_~i~0#1_2| cse8)) (cse3 (select |#memory_int_3| |ULTIMATE.start_main_~a~0#1.base_2|)) (cse2 (+ |ULTIMATE.start_main_~i~0#1_3| cse8)) (cse4 (+ |ULTIMATE.start_main_~i~0#1_2| cse8 1)) (cse6 (+ cse0 3))) (and (forall ((v_y_60 Int)) (or (< 0 v_y_60) (< (* v_y_60 4) cse0) (forall ((v_y_56 Int)) (or (< v_y_56 cse1) (< cse2 v_y_56) (< (select cse3 (+ cse0 (* v_y_56 4) (* v_y_60 (- 4)))) 2147483648) (= v_y_56 cse2))))) (forall ((v_y_60 Int)) (or (forall ((v_y_56 Int)) (or (< v_y_56 cse1) (< (select cse3 (+ cse0 (* v_y_56 4) (* v_y_60 (- 4)))) 2147483648) (< cse2 (+ v_y_56 1)))) (< 0 v_y_60) (< (* v_y_60 4) cse0))) (forall ((v_y_60 Int)) (let ((cse5 (* v_y_60 4))) (or (forall ((v_y_56 Int)) (or (< cse2 v_y_56) (< (select cse3 (+ cse0 (* v_y_56 4) (* v_y_60 (- 4)))) 2147483648) (= v_y_56 cse2) (< v_y_56 cse4))) (< cse5 cse0) (< cse6 cse5)))) (forall ((v_y_60 Int)) (or (< 0 v_y_60) (< (* v_y_60 4) cse0) (forall ((v_y_56 Int)) (or (< 0 (+ 2147483649 (select cse3 (+ cse0 (* v_y_56 4) (* v_y_60 (- 4)))))) (< v_y_56 cse1) (< cse2 (+ v_y_56 1)))))) (forall ((v_y_60 Int)) (or (< 0 v_y_60) (< (* v_y_60 4) cse0) (forall ((v_y_56 Int)) (or (< 0 (+ 2147483649 (select cse3 (+ cse0 (* v_y_56 4) (* v_y_60 (- 4)))))) (< v_y_56 cse1) (< cse2 v_y_56) (= v_y_56 cse2))))) (forall ((v_y_60 Int)) (let ((cse7 (* v_y_60 4))) (or (forall ((v_y_56 Int)) (or (< 0 (+ 2147483649 (select cse3 (+ cse0 (* v_y_56 4) (* v_y_60 (- 4)))))) (< cse2 v_y_56) (= v_y_56 cse2) (< v_y_56 cse4))) (< cse7 cse0) (< cse6 cse7))))))))))
(assert (let ((cse3 (mod |ULTIMATE.start_main_~a~0#1.offset_2| 4))) (or (let ((cse6 (div |ULTIMATE.start_main_~a~0#1.offset_2| 4))) (let ((cse0 (+ |ULTIMATE.start_main_~i~0#1_3| cse6)) (cse2 (select |#memory_int_3| |ULTIMATE.start_main_~a~0#1.base_2|)) (cse1 (+ |ULTIMATE.start_main_~i~0#1_2| cse6 1))) (and (forall ((v_y_60 Int)) (or (forall ((v_y_56 Int)) (or (< cse0 v_y_56) (< v_y_56 cse1) (< (select cse2 (+ cse3 (- 4) (* v_y_56 4) (* v_y_60 (- 4)))) 2147483648))) (< cse3 (+ (* v_y_60 4) 1)) (< v_y_60 0))) (forall ((v_y_60 Int)) (let ((cse4 (* v_y_60 4))) (or (forall ((v_y_56 Int)) (or (< cse0 v_y_56) (= v_y_56 cse0) (< v_y_56 cse1) (< (select cse2 (+ cse3 (- 4) (* v_y_56 4) (* v_y_60 (- 4)))) 2147483648))) (< (+ 4 cse4) cse3) (< cse3 (+ cse4 1))))) (forall ((v_y_60 Int)) (let ((cse5 (* v_y_60 4))) (or (< (+ 4 cse5) cse3) (forall ((v_y_56 Int)) (or (< cse0 v_y_56) (< 0 (+ 2147483649 (select cse2 (+ cse3 (- 4) (* v_y_56 4) (* v_y_60 (- 4)))))) (= v_y_56 cse0) (< v_y_56 cse1))) (< cse3 (+ cse5 1))))) (forall ((v_y_60 Int)) (or (forall ((v_y_56 Int)) (or (< cse0 v_y_56) (< 0 (+ 2147483649 (select cse2 (+ cse3 (- 4) (* v_y_56 4) (* v_y_60 (- 4)))))) (< v_y_56 cse1))) (< cse3 (+ (* v_y_60 4) 1)) (< v_y_60 0)))))) (< cse3 1))))
(assert (forall ((v_z_62 Int)) (or (forall ((v_y_62 Int) (v_idxDim1_4 Int)) (let ((cse0 (+ |ULTIMATE.start_main_~i~0#1_2| (div |ULTIMATE.start_main_~a~0#1.offset_2| 4)))) (or (= v_y_62 cse0) (let ((cse1 (+ (* (- 1) v_z_62) (* v_y_62 4)))) (= (select (select |#memory_int_3| v_idxDim1_4) cse1) (select (select |#memory_int_-1| v_idxDim1_4) cse1))) (< cse0 v_y_62)))) (< 3 v_z_62) (< v_z_62 0))))
(assert (<= |ULTIMATE.start_main_~i~0#1_3| ~SIZE~0_1))
(assert (forall ((v_z_62 Int)) (or (< v_z_62 0) (forall ((v_y_62 Int) (v_idxDim1_4 Int)) (or (let ((cse0 (+ (* (- 1) v_z_62) (* v_y_62 4)))) (= (select (select |#memory_int_3| v_idxDim1_4) cse0) (select (select |#memory_int_-1| v_idxDim1_4) cse0))) (< (+ |ULTIMATE.start_main_~i~0#1_2| (div |ULTIMATE.start_main_~a~0#1.offset_2| 4)) (+ v_y_62 1)))) (< 3 (+ (mod |ULTIMATE.start_main_~a~0#1.offset_2| 4) v_z_62)))))
(assert (forall ((v_z_63 Int) (v_y_63 Int) (v_idxDim1_4 Int)) (let ((cse1 (+ (mod |ULTIMATE.start_main_~a~0#1.offset_2| 4) v_z_63))) (or (let ((cse0 (+ (* v_z_63 3) (* v_y_63 4)))) (= (select (select |#memory_int_3| v_idxDim1_4) cse0) (select (select |#memory_int_-1| v_idxDim1_4) cse0))) (< 3 v_z_63) (< v_z_63 0) (= cse1 4) (= cse1 0)))))
(assert (forall ((v_z_61 Int)) (or (< 3 v_z_61) (forall ((v_y_61 Int) (v_idxDim1_4 Int)) (or (let ((cse0 (+ (* v_y_61 4) (* (- 1) v_z_61)))) (= (select (select |#memory_int_-1| v_idxDim1_4) cse0) (select (select |#memory_int_3| v_idxDim1_4) cse0))) (< v_y_61 (+ |ULTIMATE.start_main_~i~0#1_3| (div |ULTIMATE.start_main_~a~0#1.offset_2| 4) 1)))) (< (+ (mod |ULTIMATE.start_main_~a~0#1.offset_2| 4) v_z_61) 4))))
(assert (forall ((v_idxDim2_4 Int) (v_idxDim1_4 Int)) (or (= |ULTIMATE.start_main_~a~0#1.base_2| v_idxDim1_4) (= (select (select |#memory_int_-1| v_idxDim1_4) v_idxDim2_4) (select (select |#memory_int_3| v_idxDim1_4) v_idxDim2_4)))))
(assert (<= (+ |ULTIMATE.start_main_~i~0#1_2| 1) |ULTIMATE.start_main_~i~0#1_3|))
(assert (forall ((v_z_62 Int)) (or (forall ((v_y_62 Int) (v_idxDim1_4 Int)) (or (let ((cse0 (+ (* (- 1) v_z_62) (* v_y_62 4)))) (= (select (select |#memory_int_3| v_idxDim1_4) cse0) (select (select |#memory_int_-1| v_idxDim1_4) cse0))) (< (+ |ULTIMATE.start_main_~i~0#1_2| (div |ULTIMATE.start_main_~a~0#1.offset_2| 4)) v_y_62))) (< (+ (mod |ULTIMATE.start_main_~a~0#1.offset_2| 4) v_z_62) 4) (< 3 v_z_62))))
(assert (<= ~SIZE~0_1 |ULTIMATE.start_main_~i~0#1_3|))
(assert (<= (let ((cse0 (mod ~SIZE~0_1 2))) (ite (and (< ~SIZE~0_1 0) (not (= cse0 0))) (+ cse0 (- 2)) cse0)) 0))
(assert (>= (let ((cse0 (mod ~SIZE~0_1 2))) (ite (and (< ~SIZE~0_1 0) (not (= cse0 0))) (+ cse0 (- 2)) cse0)) 0))
(assert (<= |v_ULTIMATE.start_assume_abort_if_not_#in~cond#1_9_fresh_1| |ULTIMATE.start_assume_abort_if_not_~cond#1_5|))
(assert (>= |v_ULTIMATE.start_assume_abort_if_not_#in~cond#1_9_fresh_1| |ULTIMATE.start_assume_abort_if_not_~cond#1_5|))
(assert (<= |v_ULTIMATE.start_assume_abort_if_not_#in~cond#1_9_fresh_1| (ite (= (let ((cse0 (mod ~SIZE~0_1 2))) (ite (and (< ~SIZE~0_1 0) (not (= cse0 0))) (+ cse0 (- 2)) cse0)) 0) 1 0)))
(assert (>= |v_ULTIMATE.start_assume_abort_if_not_#in~cond#1_9_fresh_1| (ite (= (let ((cse0 (mod ~SIZE~0_1 2))) (ite (and (< ~SIZE~0_1 0) (not (= cse0 0))) (+ cse0 (- 2)) cse0)) 0) 1 0)))
(assert (not (= |ULTIMATE.start_assume_abort_if_not_~cond#1_5| 0)))
(assert (<= |ULTIMATE.start_main_~i~0#1_7| 1))
(assert (>= |ULTIMATE.start_main_~i~0#1_7| 1))
(assert (<= |ULTIMATE.start_main_~i~0#1_8| (+ 2 (div ~SIZE~0_1 2))))
(assert (<= (+ 2 (select (select |#memory_int_3| |ULTIMATE.start_main_~a~0#1.base_2|) (+ |ULTIMATE.start_main_~a~0#1.offset_2| (* |ULTIMATE.start_main_~i~0#1_7| 8) (- 8)))) (* |ULTIMATE.start_main_~i~0#1_7| 2)))
(assert (<= (* |ULTIMATE.start_main_~i~0#1_7| 2) (select (select |#memory_int_3| |ULTIMATE.start_main_~a~0#1.base_2|) (+ (- 4) |ULTIMATE.start_main_~a~0#1.offset_2| (* |ULTIMATE.start_main_~i~0#1_7| 8)))))
(assert (or (not (= (mod ~SIZE~0_1 2) 0)) (< |ULTIMATE.start_main_~i~0#1_8| (+ 2 (div ~SIZE~0_1 2)))))
(assert (or (< ~SIZE~0_1 0) (< |ULTIMATE.start_main_~i~0#1_8| (+ 2 (div ~SIZE~0_1 2)))))
(assert (forall ((v_it_5 Int)) (or (< (+ (* v_it_5 2) (* |ULTIMATE.start_main_~i~0#1_7| 2)) (+ (select (select |#memory_int_3| |ULTIMATE.start_main_~a~0#1.base_2|) (+ (* v_it_5 8) (- 4) |ULTIMATE.start_main_~a~0#1.offset_2| (* |ULTIMATE.start_main_~i~0#1_7| 8))) 1)) (< v_it_5 1) (< |ULTIMATE.start_main_~i~0#1_8| (+ |ULTIMATE.start_main_~i~0#1_7| v_it_5 1)))))
(assert (forall ((v_z_68 Int)) (or (< 7 v_z_68) (< (+ v_z_68 (mod (+ 4 |ULTIMATE.start_main_~a~0#1.offset_2|) 8)) 8) (forall ((v_y_68 Int) (v_idxDim1_5 Int)) (or (let ((cse0 (+ (* (- 1) v_z_68) (* v_y_68 8)))) (= (select (select |#memory_int_8| v_idxDim1_5) cse0) (select (select |#memory_int_3| v_idxDim1_5) cse0))) (< v_y_68 (+ |ULTIMATE.start_main_~i~0#1_8| (div (+ (- 4) |ULTIMATE.start_main_~a~0#1.offset_2|) 8) 1)))))))
(assert (let ((cse0 (mod (+ 4 |ULTIMATE.start_main_~a~0#1.offset_2|) 8))) (or (< 0 cse0) (forall ((v_y_65 Int)) (let ((cse1 (div (+ (* 7 cse0) (- 4) |ULTIMATE.start_main_~a~0#1.offset_2|) 8))) (or (< (+ |ULTIMATE.start_main_~i~0#1_8| cse1) (+ v_y_65 1)) (= (* v_y_65 2) (+ (* cse1 2) (select (select |#memory_int_8| |ULTIMATE.start_main_~a~0#1.base_2|) (+ (* v_y_65 8) (* (- 7) cse0))) 1)) (< v_y_65 (+ |ULTIMATE.start_main_~i~0#1_7| cse1))))))))
(assert (<= (+ |ULTIMATE.start_main_~i~0#1_7| 1) |ULTIMATE.start_main_~i~0#1_8|))
(assert (forall ((v_z_68 Int)) (or (< v_z_68 0) (< 7 (+ v_z_68 (mod (+ 4 |ULTIMATE.start_main_~a~0#1.offset_2|) 8))) (forall ((v_y_68 Int) (v_idxDim1_5 Int)) (or (< v_y_68 (+ |ULTIMATE.start_main_~i~0#1_8| (div (+ (- 4) |ULTIMATE.start_main_~a~0#1.offset_2|) 8))) (let ((cse0 (+ (* (- 1) v_z_68) (* v_y_68 8)))) (= (select (select |#memory_int_8| v_idxDim1_5) cse0) (select (select |#memory_int_3| v_idxDim1_5) cse0))))))))
(assert (forall ((v_z_70 Int) (v_y_70 Int) (v_idxDim1_5 Int)) (let ((cse0 (+ v_z_70 (mod (+ 4 |ULTIMATE.start_main_~a~0#1.offset_2|) 8)))) (or (< v_z_70 0) (< 7 v_z_70) (= cse0 8) (= cse0 0) (let ((cse1 (+ (* v_y_70 8) (* 7 v_z_70)))) (= (select (select |#memory_int_8| v_idxDim1_5) cse1) (select (select |#memory_int_3| v_idxDim1_5) cse1)))))))
(assert (let ((cse0 (mod (+ 4 |ULTIMATE.start_main_~a~0#1.offset_2|) 8))) (or (< cse0 1) (forall ((v_y_65 Int)) (let ((cse1 (div (+ (* 7 cse0) (- 60) |ULTIMATE.start_main_~a~0#1.offset_2|) 8))) (or (< v_y_65 (+ |ULTIMATE.start_main_~i~0#1_7| cse1)) (< (+ |ULTIMATE.start_main_~i~0#1_8| cse1) (+ v_y_65 1)) (= (+ (select (select |#memory_int_8| |ULTIMATE.start_main_~a~0#1.base_2|) (+ (* v_y_65 8) 56 (* (- 7) cse0))) (* 2 cse1) 1) (* v_y_65 2))))))))
(assert (forall ((v_z_69 Int)) (or (< 7 v_z_69) (< (+ v_z_69 (mod (+ 4 |ULTIMATE.start_main_~a~0#1.offset_2|) 8)) 8) (forall ((v_y_69 Int) (v_idxDim1_5 Int)) (or (< (+ |ULTIMATE.start_main_~i~0#1_7| (div (+ (- 4) |ULTIMATE.start_main_~a~0#1.offset_2|) 8)) v_y_69) (let ((cse0 (+ (* v_y_69 8) (* (- 1) v_z_69)))) (= (select (select |#memory_int_8| v_idxDim1_5) cse0) (select (select |#memory_int_3| v_idxDim1_5) cse0))))))))
(assert (forall ((v_z_68 Int)) (or (< 7 v_z_68) (< v_z_68 0) (forall ((v_y_68 Int) (v_idxDim1_5 Int)) (let ((cse0 (+ |ULTIMATE.start_main_~i~0#1_8| (div (+ (- 4) |ULTIMATE.start_main_~a~0#1.offset_2|) 8)))) (or (= v_y_68 cse0) (< v_y_68 cse0) (let ((cse1 (+ (* (- 1) v_z_68) (* v_y_68 8)))) (= (select (select |#memory_int_8| v_idxDim1_5) cse1) (select (select |#memory_int_3| v_idxDim1_5) cse1)))))))))
(assert (forall ((v_idxDim2_5 Int) (v_idxDim1_5 Int)) (or (= (select (select |#memory_int_3| v_idxDim1_5) v_idxDim2_5) (select (select |#memory_int_8| v_idxDim1_5) v_idxDim2_5)) (= |ULTIMATE.start_main_~a~0#1.base_2| v_idxDim1_5))))
(assert (forall ((v_it_5 Int)) (or (< (+ (select (select |#memory_int_3| |ULTIMATE.start_main_~a~0#1.base_2|) (+ (* v_it_5 8) |ULTIMATE.start_main_~a~0#1.offset_2| (* |ULTIMATE.start_main_~i~0#1_7| 8) (- 8))) 1) (+ (* v_it_5 2) (* |ULTIMATE.start_main_~i~0#1_7| 2))) (< v_it_5 1) (< |ULTIMATE.start_main_~i~0#1_8| (+ |ULTIMATE.start_main_~i~0#1_7| v_it_5 1)))))
(assert (forall ((v_z_69 Int)) (or (< 7 v_z_69) (forall ((v_y_69 Int) (v_idxDim1_5 Int)) (or (let ((cse0 (+ (* v_y_69 8) (* (- 1) v_z_69)))) (= (select (select |#memory_int_8| v_idxDim1_5) cse0) (select (select |#memory_int_3| v_idxDim1_5) cse0))) (< (+ |ULTIMATE.start_main_~i~0#1_7| (div (+ (- 4) |ULTIMATE.start_main_~a~0#1.offset_2|) 8)) (+ v_y_69 1)))) (< v_z_69 0))))
(assert (< (let ((cse0 (div ~SIZE~0_1 2))) (ite (and (not (= (mod ~SIZE~0_1 2) 0)) (< ~SIZE~0_1 0)) (+ cse0 1) cse0)) |ULTIMATE.start_main_~i~0#1_8|))
(assert (<= |ULTIMATE.start_main_~i~0#1_10| 0))
(assert (>= |ULTIMATE.start_main_~i~0#1_10| 0))
(assert (<= (ite (<= |v_ULTIMATE.start_main_#t~mem11#1_11_fresh_1| |ULTIMATE.start_main_~i~0#1_10|) 1 0) |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_9_fresh_1|))
(assert (>= (ite (<= |v_ULTIMATE.start_main_#t~mem11#1_11_fresh_1| |ULTIMATE.start_main_~i~0#1_10|) 1 0) |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_9_fresh_1|))
(assert (<= (select (select |#memory_int_8| |ULTIMATE.start_main_~a~0#1.base_2|) (+ (* |ULTIMATE.start_main_~i~0#1_10| 4) |ULTIMATE.start_main_~a~0#1.offset_2|)) |v_ULTIMATE.start_main_#t~mem11#1_11_fresh_1|))
(assert (>= (select (select |#memory_int_8| |ULTIMATE.start_main_~a~0#1.base_2|) (+ (* |ULTIMATE.start_main_~i~0#1_10| 4) |ULTIMATE.start_main_~a~0#1.offset_2|)) |v_ULTIMATE.start_main_#t~mem11#1_11_fresh_1|))
(assert (<= |ULTIMATE.start___VERIFIER_assert_~cond#1_11| |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_9_fresh_1|))
(assert (>= |ULTIMATE.start___VERIFIER_assert_~cond#1_11| |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_9_fresh_1|))
(assert (< |ULTIMATE.start_main_~i~0#1_10| ~SIZE~0_1))
(assert (<= |ULTIMATE.start___VERIFIER_assert_~cond#1_11| 0))
(assert (>= |ULTIMATE.start___VERIFIER_assert_~cond#1_11| 0))
(check-sat)
(exit)
