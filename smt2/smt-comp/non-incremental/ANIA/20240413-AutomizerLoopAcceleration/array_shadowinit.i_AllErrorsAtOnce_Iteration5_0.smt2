(set-info :smt-lib-version 2.6)
(set-logic ANIA)
(set-info :source |
Generated by: Matthias Heizmann
Generated on: 2024-04-13
Generator: Ultimate Automizer
Application: Software Verification
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2024 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2024-04-13, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: State of the Art in Software Verification and
     Witness Validation: SV-COMP 2024.  TACAS 2024
[6] https://sv-comp.sosy-lab.org/2024/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#memory_int_-1| () (Array Int (Array Int Int)))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun ~N~0_0 () Int)
(declare-fun ~N~0_1 () Int)
(declare-fun |ULTIMATE.start_main_~#a~0#1.base_2| () Int)
(declare-fun |ULTIMATE.start_main_~#a~0#1.offset_2| () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_2| () Int)
(declare-fun |#valid_2| () (Array Int Int))
(declare-fun |#length_2| () (Array Int Int))
(declare-fun |ULTIMATE.start_main_~k~0#1_2| () Int)
(declare-fun v_ArrVal_17_fresh_1 () Int)
(declare-fun v_ArrVal_18_fresh_1 () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_3| () Int)
(declare-fun |#memory_int_3| () (Array Int (Array Int Int)))
(declare-fun |ULTIMATE.start_main_~k~0#1_3| () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_4| () Int)
(declare-fun |#memory_int_4| () (Array Int (Array Int Int)))
(declare-fun |ULTIMATE.start_main_~k~0#1_4| () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_6| () Int)
(declare-fun |ULTIMATE.start_main_~i~0#1_7| () Int)
(declare-fun |ULTIMATE.start___VERIFIER_assert_~cond#1_8| () Int)
(declare-fun |v_ULTIMATE.start_main_#t~mem2#1_19_fresh_1| () Int)
(declare-fun |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_17_fresh_1| () Int)
(assert (not false))
(assert (<= 48 (select (select |#memory_int_-1| 1) 0)))
(assert (>= 48 (select (select |#memory_int_-1| 1) 0)))
(assert (<= (select |#valid_-1| 2) 1))
(assert (>= (select |#valid_-1| 2) 1))
(assert (<= (select |#valid_-1| 0) 0))
(assert (>= (select |#valid_-1| 0) 0))
(assert (< 0 |#StackHeapBarrier_-1|))
(assert (<= ~N~0_0 0))
(assert (>= ~N~0_0 0))
(assert (<= 19 (select |#length_-1| 2)))
(assert (>= 19 (select |#length_-1| 2)))
(assert (<= (select |#valid_-1| 1) 1))
(assert (>= (select |#valid_-1| 1) 1))
(assert (<= 2 (select |#length_-1| 1)))
(assert (>= 2 (select |#length_-1| 1)))
(assert (<= (select (select |#memory_int_-1| 1) 1) 0))
(assert (>= (select (select |#memory_int_-1| 1) 1) 0))
(assert (<= ~N~0_1 2147483647))
(assert (<= 0 (+ ~N~0_1 2147483648)))
(assert (< 0 ~N~0_1))
(assert (<= v_ArrVal_18_fresh_1 1))
(assert (>= v_ArrVal_18_fresh_1 1))
(assert (<= |ULTIMATE.start_main_~#a~0#1.offset_2| 0))
(assert (>= |ULTIMATE.start_main_~#a~0#1.offset_2| 0))
(assert (<= |ULTIMATE.start_main_~k~0#1_2| 0))
(assert (>= |ULTIMATE.start_main_~k~0#1_2| 0))
(assert (< |#StackHeapBarrier_-1| |ULTIMATE.start_main_~#a~0#1.base_2|))
(assert (= |#valid_2| (store |#valid_-1| |ULTIMATE.start_main_~#a~0#1.base_2| v_ArrVal_18_fresh_1)))
(assert (not (= |ULTIMATE.start_main_~#a~0#1.base_2| 0)))
(assert (<= 0 (select |#valid_-1| |ULTIMATE.start_main_~#a~0#1.base_2|)))
(assert (>= 0 (select |#valid_-1| |ULTIMATE.start_main_~#a~0#1.base_2|)))
(assert (<= |ULTIMATE.start_main_~i~0#1_2| 0))
(assert (>= |ULTIMATE.start_main_~i~0#1_2| 0))
(assert (= (store |#length_-1| |ULTIMATE.start_main_~#a~0#1.base_2| v_ArrVal_17_fresh_1) |#length_2|))
(assert (<= (* (mod ~N~0_1 1073741824) 4) v_ArrVal_17_fresh_1))
(assert (>= (* (mod ~N~0_1 1073741824) 4) v_ArrVal_17_fresh_1))
(assert (forall ((v_z_15 Int)) (or (< v_z_15 0) (forall ((v_y_15 Int) (v_idxDim1_3 Int)) (let ((cse0 (+ v_y_15 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4) 1))) (or (< |ULTIMATE.start_main_~k~0#1_2| cse0) (let ((cse1 (+ (* v_y_15 4) v_z_15))) (= (select (select |#memory_int_3| v_idxDim1_3) cse1) (select (select |#memory_int_-1| v_idxDim1_3) cse1))) (= |ULTIMATE.start_main_~k~0#1_2| cse0)))) (< 3 v_z_15))))
(assert (let ((cse7 (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (let ((cse1 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (let ((cse0 (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|)) (cse8 (* cse1 4)) (cse3 (+ (* 4 |ULTIMATE.start_main_~k~0#1_2|) cse7)) (cse4 (select |#memory_int_3| |ULTIMATE.start_main_~#a~0#1.base_2|)) (cse5 (* (- 1) cse7))) (and (forall ((v_y_21 Int)) (let ((cse6 (* v_y_21 4))) (let ((cse2 (+ cse8 cse6))) (or (< cse0 (+ |ULTIMATE.start_main_~i~0#1_2| v_y_21 2 cse1)) (< cse2 cse3) (< cse2 (+ (* (select cse4 (+ cse5 cse6)) 4) cse7 4)))))) (forall ((v_y_21 Int)) (let ((cse9 (* v_y_21 4))) (or (< cse0 (+ |ULTIMATE.start_main_~i~0#1_2| v_y_21 2 cse1)) (< (+ cse8 cse9) cse3) (< (select cse4 (+ cse5 cse9)) (+ v_y_21 cse1 1)))))))) (< 0 cse7))))
(assert (forall ((v_z_16 Int)) (or (forall ((v_y_16 Int) (v_idxDim1_3 Int)) (or (let ((cse0 (+ v_z_16 (* v_y_16 4)))) (= (select (select |#memory_int_3| v_idxDim1_3) cse0) (select (select |#memory_int_-1| v_idxDim1_3) cse0))) (< (+ |ULTIMATE.start_main_~i~0#1_2| v_y_16 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4)) (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|)))) (< 3 v_z_16) (< v_z_16 0))))
(assert (<= |ULTIMATE.start_main_~i~0#1_3| ~N~0_1))
(assert (let ((cse0 (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (< 0 cse0) (let ((cse6 (* (- 1) cse0)) (cse3 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (let ((cse2 (* 4 |ULTIMATE.start_main_~k~0#1_2|)) (cse5 (select |#memory_int_3| |ULTIMATE.start_main_~#a~0#1.base_2|)) (cse8 (* cse3 4)) (cse4 (div cse6 4))) (and (forall ((v_y_21 Int)) (let ((cse7 (* v_y_21 4))) (let ((cse1 (+ cse8 cse7))) (or (< cse1 (+ cse2 cse0)) (< (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|) (+ |ULTIMATE.start_main_~i~0#1_2| v_y_21 cse3 cse4 1)) (< cse1 (+ (* (select cse5 (+ cse6 cse7)) 4) cse0 4)))))) (forall ((v_y_21 Int)) (let ((cse9 (* v_y_21 4))) (or (< (+ cse2 (* |ULTIMATE.start_main_~i~0#1_3| 4) cse0) (+ cse8 cse9 (* |ULTIMATE.start_main_~i~0#1_2| 4) 1)) (< (+ (* (select cse5 (+ cse6 cse9)) 4) cse0) (+ cse8 cse9 1)) (< (+ v_y_21 cse3 cse4) |ULTIMATE.start_main_~k~0#1_2|))))))))))
(assert (forall ((v_z_15 Int)) (or (< v_z_15 0) (forall ((v_y_15 Int) (v_idxDim1_3 Int)) (or (< |ULTIMATE.start_main_~k~0#1_2| (+ v_y_15 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4) 1)) (let ((cse0 (+ (* v_y_15 4) v_z_15))) (= (select (select |#memory_int_3| v_idxDim1_3) cse0) (select (select |#memory_int_-1| v_idxDim1_3) cse0))))) (< 3 (+ (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4) v_z_15)))))
(assert (forall ((v_z_15 Int)) (or (forall ((v_y_15 Int) (v_idxDim1_3 Int)) (or (let ((cse0 (+ (* v_y_15 4) v_z_15))) (= (select (select |#memory_int_3| v_idxDim1_3) cse0) (select (select |#memory_int_-1| v_idxDim1_3) cse0))) (< |ULTIMATE.start_main_~k~0#1_2| (+ v_y_15 2 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))))) (< (+ (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4) v_z_15) 4) (< 3 v_z_15))))
(assert (<= (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|) (+ |ULTIMATE.start_main_~i~0#1_2| |ULTIMATE.start_main_~k~0#1_3|)))
(assert (>= (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|) (+ |ULTIMATE.start_main_~i~0#1_2| |ULTIMATE.start_main_~k~0#1_3|)))
(assert (let ((cse0 (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (let ((cse3 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (let ((cse1 (* cse3 4)) (cse4 (select |#memory_int_3| |ULTIMATE.start_main_~#a~0#1.base_2|)) (cse5 (* (- 1) cse0))) (and (forall ((v_y_21 Int)) (let ((cse2 (* v_y_21 4))) (or (< (+ (* 4 |ULTIMATE.start_main_~k~0#1_2|) (* |ULTIMATE.start_main_~i~0#1_3| 4) cse0) (+ cse1 cse2 (* |ULTIMATE.start_main_~i~0#1_2| 4) 9)) (< (+ v_y_21 cse3) |ULTIMATE.start_main_~k~0#1_2|) (< (+ cse0 (* (select cse4 (+ cse5 cse2 4)) 4)) (+ cse1 cse2 9))))) (forall ((v_y_21 Int)) (or (< (+ v_y_21 cse3) |ULTIMATE.start_main_~k~0#1_2|) (< (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|) (+ |ULTIMATE.start_main_~i~0#1_2| v_y_21 3 cse3 (div cse5 4))) (let ((cse6 (* v_y_21 4))) (< (+ cse1 cse6 4) (+ cse0 (* (select cse4 (+ cse5 cse6 4)) 4))))))))) (< cse0 1))))
(assert (<= (+ |ULTIMATE.start_main_~i~0#1_2| 1) |ULTIMATE.start_main_~i~0#1_3|))
(assert (forall ((v_idxDim2_3 Int) (v_idxDim1_3 Int)) (or (= |ULTIMATE.start_main_~#a~0#1.base_2| v_idxDim1_3) (= (select (select |#memory_int_3| v_idxDim1_3) v_idxDim2_3) (select (select |#memory_int_-1| v_idxDim1_3) v_idxDim2_3)))))
(assert (forall ((v_z_17 Int) (v_y_17 Int) (v_idxDim1_3 Int)) (let ((cse0 (+ (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4) v_z_17))) (or (= cse0 0) (= cse0 4) (let ((cse1 (+ v_z_17 (* v_y_17 4)))) (= (select (select |#memory_int_-1| v_idxDim1_3) cse1) (select (select |#memory_int_3| v_idxDim1_3) cse1))) (< 3 v_z_17) (< v_z_17 0)))))
(assert (let ((cse0 (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (< cse0 1) (let ((cse7 (* (- 1) cse0)) (cse1 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (let ((cse3 (* 4 |ULTIMATE.start_main_~k~0#1_2|)) (cse4 (* cse1 4)) (cse6 (select |#memory_int_3| |ULTIMATE.start_main_~#a~0#1.base_2|)) (cse2 (div cse7 4))) (and (forall ((v_y_21 Int)) (let ((cse5 (* v_y_21 4))) (or (< (+ v_y_21 cse1 cse2 1) |ULTIMATE.start_main_~k~0#1_2|) (< (+ cse3 (* |ULTIMATE.start_main_~i~0#1_3| 4) cse0) (+ cse4 cse5 (* |ULTIMATE.start_main_~i~0#1_2| 4) 9)) (< (+ cse0 (* (select cse6 (+ cse7 cse5 4)) 4)) (+ cse4 cse5 9))))) (forall ((v_y_21 Int)) (let ((cse8 (* v_y_21 4))) (or (< (+ cse4 cse8 4) (+ cse3 cse0)) (< (+ cse4 cse8) (+ cse0 (* (select cse6 (+ cse7 cse8 4)) 4))) (< (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|) (+ |ULTIMATE.start_main_~i~0#1_2| v_y_21 3 cse1 cse2)))))))))))
(assert (let ((cse4 (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (let ((cse7 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (let ((cse0 (+ (* 4 |ULTIMATE.start_main_~k~0#1_2|) (* |ULTIMATE.start_main_~i~0#1_3| 4) cse4)) (cse1 (* cse7 4)) (cse3 (* |ULTIMATE.start_main_~i~0#1_2| 4)) (cse5 (select |#memory_int_3| |ULTIMATE.start_main_~#a~0#1.base_2|)) (cse6 (* (- 1) cse4))) (and (forall ((v_y_21 Int)) (let ((cse2 (* v_y_21 4))) (or (< cse0 (+ cse1 cse2 cse3 9)) (< (+ cse4 (* (select cse5 (+ cse6 cse2 4)) 4)) (+ cse1 cse2 9)) (< (+ v_y_21 cse7 1) |ULTIMATE.start_main_~k~0#1_2|)))) (forall ((v_y_21 Int)) (let ((cse8 (* v_y_21 4))) (or (< cse0 (+ cse1 cse8 cse3 9)) (< (+ v_y_21 cse7 (div cse6 4) 1) (select cse5 (+ cse6 cse8 4))) (< (+ v_y_21 cse7 1) |ULTIMATE.start_main_~k~0#1_2|))))))) (< cse4 1))))
(assert (let ((cse0 (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (< 0 cse0) (let ((cse6 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4)) (cse5 (* (- 1) cse0))) (let ((cse3 (+ (* 4 |ULTIMATE.start_main_~k~0#1_2|) cse0)) (cse7 (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|)) (cse8 (div cse5 4)) (cse4 (select |#memory_int_3| |ULTIMATE.start_main_~#a~0#1.base_2|)) (cse1 (* cse6 4))) (and (forall ((v_y_21 Int)) (let ((cse2 (* v_y_21 4))) (or (< (+ cse1 cse2) cse3) (< (select cse4 (+ cse5 cse2)) (+ v_y_21 cse6 1)) (< cse7 (+ |ULTIMATE.start_main_~i~0#1_2| v_y_21 cse6 cse8 1))))) (forall ((v_y_21 Int)) (let ((cse10 (* v_y_21 4))) (let ((cse9 (+ cse1 cse10))) (or (< cse9 cse3) (< cse7 (+ |ULTIMATE.start_main_~i~0#1_2| v_y_21 cse6 cse8 1)) (< cse9 (+ (* (select cse4 (+ cse5 cse10)) 4) cse0 4))))))))))))
(assert (forall ((v_z_16 Int)) (or (< (+ (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4) v_z_16) 4) (< 3 v_z_16) (forall ((v_y_16 Int) (v_idxDim1_3 Int)) (or (let ((cse0 (+ v_z_16 (* v_y_16 4)))) (= (select (select |#memory_int_3| v_idxDim1_3) cse0) (select (select |#memory_int_-1| v_idxDim1_3) cse0))) (< (+ |ULTIMATE.start_main_~i~0#1_2| v_y_16 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4) 1) (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|)))))))
(assert (let ((cse0 (mod (* 3 |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (< 0 cse0) (let ((cse5 (div (* (- 1) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4)) (cse2 (* (- 1) cse0))) (let ((cse7 (* 4 |ULTIMATE.start_main_~k~0#1_2|)) (cse6 (div cse2 4)) (cse1 (select |#memory_int_3| |ULTIMATE.start_main_~#a~0#1.base_2|)) (cse4 (* cse5 4))) (and (forall ((v_y_21 Int)) (let ((cse3 (* v_y_21 4))) (or (< (+ (* (select cse1 (+ cse2 cse3)) 4) cse0) (+ cse4 cse3 5)) (< (+ v_y_21 cse5 cse6) |ULTIMATE.start_main_~k~0#1_2|) (< (+ cse7 (* |ULTIMATE.start_main_~i~0#1_3| 4) cse0) (+ cse4 cse3 5 (* |ULTIMATE.start_main_~i~0#1_2| 4)))))) (forall ((v_y_21 Int)) (let ((cse9 (* v_y_21 4))) (let ((cse8 (+ cse4 cse9))) (or (< cse8 (+ cse7 cse0)) (< (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_2|) (+ |ULTIMATE.start_main_~i~0#1_2| v_y_21 2 cse5 cse6)) (< cse8 (+ (* (select cse1 (+ cse2 cse9)) 4) cse0 4))))))))))))
(assert (<= |ULTIMATE.start_main_~i~0#1_4| ~N~0_1))
(assert (<= (+ |ULTIMATE.start_main_~i~0#1_3| 1) |ULTIMATE.start_main_~i~0#1_4|))
(assert (forall ((v_z_30 Int)) (or (forall ((v_y_30 Int) (v_idxDim1_4 Int)) (or (let ((cse0 (+ (* v_y_30 4) (* (- 1) v_z_30)))) (= (select (select |#memory_int_3| v_idxDim1_4) cse0) (select (select |#memory_int_4| v_idxDim1_4) cse0))) (< (+ (div |ULTIMATE.start_main_~#a~0#1.offset_2| 4) |ULTIMATE.start_main_~k~0#1_3|) v_y_30))) (< (+ v_z_30 (mod |ULTIMATE.start_main_~#a~0#1.offset_2| 4)) 4) (< 3 v_z_30))))
(assert (forall ((v_z_29 Int)) (or (forall ((v_y_29 Int) (v_idxDim1_4 Int)) (let ((cse1 (+ |ULTIMATE.start_main_~i~0#1_3| v_y_29)) (cse0 (+ |ULTIMATE.start_main_~i~0#1_4| (div |ULTIMATE.start_main_~#a~0#1.offset_2| 4) |ULTIMATE.start_main_~k~0#1_3|))) (or (= cse0 cse1) (< cse1 cse0) (let ((cse2 (+ (* v_y_29 4) (* (- 1) v_z_29)))) (= (select (select |#memory_int_4| v_idxDim1_4) cse2) (select (select |#memory_int_3| v_idxDim1_4) cse2)))))) (< 3 v_z_29) (< v_z_29 0))))
(assert (let ((cse0 (mod |ULTIMATE.start_main_~#a~0#1.offset_2| 4))) (or (< 0 cse0) (forall ((v_y_27 Int)) (let ((cse1 (div (+ (* 3 cse0) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (= v_y_27 (+ cse1 (select (select |#memory_int_4| |ULTIMATE.start_main_~#a~0#1.base_2|) (+ (* (- 3) cse0) (* v_y_27 4))))) (< (+ |ULTIMATE.start_main_~i~0#1_4| cse1 |ULTIMATE.start_main_~k~0#1_3|) (+ |ULTIMATE.start_main_~i~0#1_3| v_y_27 1)) (< v_y_27 (+ cse1 |ULTIMATE.start_main_~k~0#1_3|))))))))
(assert (<= (+ |ULTIMATE.start_main_~i~0#1_4| |ULTIMATE.start_main_~k~0#1_3|) (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_4|)))
(assert (>= (+ |ULTIMATE.start_main_~i~0#1_4| |ULTIMATE.start_main_~k~0#1_3|) (+ |ULTIMATE.start_main_~i~0#1_3| |ULTIMATE.start_main_~k~0#1_4|)))
(assert (forall ((v_z_29 Int)) (or (< 3 (+ v_z_29 (mod |ULTIMATE.start_main_~#a~0#1.offset_2| 4))) (forall ((v_y_29 Int) (v_idxDim1_4 Int)) (or (< (+ |ULTIMATE.start_main_~i~0#1_3| v_y_29) (+ |ULTIMATE.start_main_~i~0#1_4| (div |ULTIMATE.start_main_~#a~0#1.offset_2| 4) |ULTIMATE.start_main_~k~0#1_3|)) (let ((cse0 (+ (* v_y_29 4) (* (- 1) v_z_29)))) (= (select (select |#memory_int_4| v_idxDim1_4) cse0) (select (select |#memory_int_3| v_idxDim1_4) cse0))))) (< v_z_29 0))))
(assert (forall ((v_idxDim1_4 Int) (v_z_31 Int) (v_y_31 Int)) (let ((cse1 (+ v_z_31 (mod |ULTIMATE.start_main_~#a~0#1.offset_2| 4)))) (or (let ((cse0 (+ (* v_z_31 3) (* v_y_31 4)))) (= (select (select |#memory_int_4| v_idxDim1_4) cse0) (select (select |#memory_int_3| v_idxDim1_4) cse0))) (< 3 v_z_31) (< v_z_31 0) (= cse1 0) (= cse1 4)))))
(assert (forall ((v_idxDim2_4 Int) (v_idxDim1_4 Int)) (or (= (select (select |#memory_int_4| v_idxDim1_4) v_idxDim2_4) (select (select |#memory_int_3| v_idxDim1_4) v_idxDim2_4)) (= |ULTIMATE.start_main_~#a~0#1.base_2| v_idxDim1_4))))
(assert (forall ((v_z_30 Int)) (or (forall ((v_y_30 Int) (v_idxDim1_4 Int)) (or (< (+ (div |ULTIMATE.start_main_~#a~0#1.offset_2| 4) |ULTIMATE.start_main_~k~0#1_3|) (+ v_y_30 1)) (let ((cse0 (+ (* v_y_30 4) (* (- 1) v_z_30)))) (= (select (select |#memory_int_3| v_idxDim1_4) cse0) (select (select |#memory_int_4| v_idxDim1_4) cse0))))) (< v_z_30 0) (< 3 v_z_30))))
(assert (forall ((v_z_29 Int)) (or (< (+ v_z_29 (mod |ULTIMATE.start_main_~#a~0#1.offset_2| 4)) 4) (forall ((v_y_29 Int) (v_idxDim1_4 Int)) (or (let ((cse0 (+ (* v_y_29 4) (* (- 1) v_z_29)))) (= (select (select |#memory_int_4| v_idxDim1_4) cse0) (select (select |#memory_int_3| v_idxDim1_4) cse0))) (< (+ |ULTIMATE.start_main_~i~0#1_3| v_y_29) (+ |ULTIMATE.start_main_~i~0#1_4| (div |ULTIMATE.start_main_~#a~0#1.offset_2| 4) |ULTIMATE.start_main_~k~0#1_3| 1)))) (< 3 v_z_29))))
(assert (let ((cse0 (mod |ULTIMATE.start_main_~#a~0#1.offset_2| 4))) (or (< cse0 1) (forall ((v_y_27 Int)) (let ((cse2 (+ v_y_27 3)) (cse1 (div (+ (* 3 cse0) |ULTIMATE.start_main_~#a~0#1.offset_2|) 4))) (or (= (+ cse1 (select (select |#memory_int_4| |ULTIMATE.start_main_~#a~0#1.base_2|) (+ (* (- 3) cse0) 12 (* v_y_27 4)))) cse2) (< cse2 (+ cse1 |ULTIMATE.start_main_~k~0#1_3|)) (< (+ |ULTIMATE.start_main_~i~0#1_4| cse1 |ULTIMATE.start_main_~k~0#1_3|) (+ |ULTIMATE.start_main_~i~0#1_3| v_y_27 4))))))))
(assert (<= ~N~0_1 |ULTIMATE.start_main_~i~0#1_4|))
(assert (<= |ULTIMATE.start_main_~i~0#1_6| 0))
(assert (>= |ULTIMATE.start_main_~i~0#1_6| 0))
(assert (<= (+ |ULTIMATE.start_main_~i~0#1_6| 1) |ULTIMATE.start_main_~i~0#1_7|))
(assert (<= |ULTIMATE.start_main_~i~0#1_7| ~N~0_1))
(assert (<= |ULTIMATE.start_main_~i~0#1_6| (select (select |#memory_int_4| |ULTIMATE.start_main_~#a~0#1.base_2|) (+ (* |ULTIMATE.start_main_~i~0#1_6| 4) |ULTIMATE.start_main_~#a~0#1.offset_2|))))
(assert (>= |ULTIMATE.start_main_~i~0#1_6| (select (select |#memory_int_4| |ULTIMATE.start_main_~#a~0#1.base_2|) (+ (* |ULTIMATE.start_main_~i~0#1_6| 4) |ULTIMATE.start_main_~#a~0#1.offset_2|))))
(assert (forall ((v_it_6 Int)) (or (< v_it_6 1) (< |ULTIMATE.start_main_~i~0#1_7| (+ |ULTIMATE.start_main_~i~0#1_6| v_it_6 1)) (= (select (select |#memory_int_4| |ULTIMATE.start_main_~#a~0#1.base_2|) (+ (* |ULTIMATE.start_main_~i~0#1_6| 4) |ULTIMATE.start_main_~#a~0#1.offset_2| (* v_it_6 4))) (+ |ULTIMATE.start_main_~i~0#1_6| v_it_6)))))
(assert (< |ULTIMATE.start_main_~i~0#1_7| ~N~0_1))
(assert (<= (select (select |#memory_int_4| |ULTIMATE.start_main_~#a~0#1.base_2|) (+ |ULTIMATE.start_main_~#a~0#1.offset_2| (* |ULTIMATE.start_main_~i~0#1_7| 4))) |v_ULTIMATE.start_main_#t~mem2#1_19_fresh_1|))
(assert (>= (select (select |#memory_int_4| |ULTIMATE.start_main_~#a~0#1.base_2|) (+ |ULTIMATE.start_main_~#a~0#1.offset_2| (* |ULTIMATE.start_main_~i~0#1_7| 4))) |v_ULTIMATE.start_main_#t~mem2#1_19_fresh_1|))
(assert (<= |ULTIMATE.start___VERIFIER_assert_~cond#1_8| |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_17_fresh_1|))
(assert (>= |ULTIMATE.start___VERIFIER_assert_~cond#1_8| |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_17_fresh_1|))
(assert (<= (ite (= |ULTIMATE.start_main_~i~0#1_7| |v_ULTIMATE.start_main_#t~mem2#1_19_fresh_1|) 1 0) |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_17_fresh_1|))
(assert (>= (ite (= |ULTIMATE.start_main_~i~0#1_7| |v_ULTIMATE.start_main_#t~mem2#1_19_fresh_1|) 1 0) |v_ULTIMATE.start___VERIFIER_assert_#in~cond#1_17_fresh_1|))
(assert (<= |ULTIMATE.start___VERIFIER_assert_~cond#1_8| 0))
(assert (>= |ULTIMATE.start___VERIFIER_assert_~cond#1_8| 0))
(check-sat)
(exit)
